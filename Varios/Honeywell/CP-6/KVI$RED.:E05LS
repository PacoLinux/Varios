VERSION E05

PL6.E3A0      #001=KVI$RQSDAT File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:1    
        1        1        /*M* KVI$RED VDH Read Initialization Routines                                     */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IND=0,IAD=3 */
        8        8        KVI$RQSDAT: PROC(PRM_USR_RQSDAT);
        9        9        %INCLUDE KV_INT_M;
       10      152
       11      153        %KV$BOX(PAGE = YES, TITLE = "KVI$RQSDAT - Request data");

PL6.E3A0      #001=KVI$RQSDAT File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:2    
               171        /***************************************************************************
               172         *                                                                         *
               173         *                         KVI$RQSDAT - Request data                       *
               174         *                                                                         *
               175         ***************************************************************************/

       12      180        /*
       13      181        Declare SYMREFs.
       14      182        */
       15      183        /*
       16      184        Declare external procedures CALLed.
       17      185        */
       18      186    1   DCL KVE$DSPUPD ENTRY ALTRET;
       19      187    1   DCL KVI$CPYSTREDTBFRTO_REDBFR ENTRY;
       20      188    1   DCL KVI$EDTX_TO_VRTCLM ENTRY(1);
       21      189    1   DCL KVI$ENBRED ENTRY;
       22      190    1   DCL KVI$INTRED ENTRY;
       23      191    1   DCL KVO$OTP1_VRT ENTRY(1);
       24      192    1   DCL KVO$PST ENTRY(1);
       25      193    1   DCL KVV$CALUSR ENTRY(1) ALTRET;
       26      194    1   DCL KVV$VDIINT ENTRY(1) ALTRET;
       27      195        /*
       28      196        INCLUDE files, constants, based structures,
       29      197        and static data contained elsewhere.
       30      198        */
       31      199
       32      200        %INCLUDE LCP_6;
       33      391
       34      392        %INCLUDE KV_INT;
       35      431
       36      432        %INCLUDE KV_ASCCHR_E;
       37      569 S      %INCLUDE KV_GLBCNS_E;
       38      570        %KV#VD_ORG_E;
       39      578        %KV#DATMOD_E;
       40      584        %KV_INPUNT_E;
       41      589        %KV_USR_EVT_ID_E;
       42      609        %KV_VDH_EVT_ID_E;
PL6.E3A0      #001=KVI$RQSDAT File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:3    
       43      615
       44      616        %INCLUDE KL_MACRO_C;
       45     3968        %INCLUDE KL_AFCN_C;
       46     4069        %INCLUDE K_ID_E;
       47     4119        %K#LYRID_E;
       48     4126        %K#ENTID_E;
       49     4145
       50     4146 S      %INCLUDE KV$GLB;
       51     4147        %KV$STT;
       52     4541
       53     4542 S      %INCLUDE KV$GLBCTX;
       54     4543        %KV$MVD;
       55     4587        %KV$PTR;
       56     4630        %KV$PTR (NAME = Y$PTR, STCLASS = BASED);
       57     4673        %KV$SRD;
       58     4948        %KV$SSN;
       59     5027        %KV$STR;
       60     5114        %KV$USRPRM;
       61     5165        %KV$VDI;
       62     5236
       63     5237 S      %INCLUDE KV$INT;
       64     5238        %KV$TYPAHDBFR;
       65     5263
       66     5264 S      %INCLUDE KV$SND;
       67     5265
       68     5266 S      %INCLUDE KV$USR;
       69     5267        %KV$USR_RQSDAT (NAME = PRM_USR_RQSDAT, STCLASS = );
       70     5330
       71     5331 S      %INCLUDE KV$VDH;
       72     5332        %KV$VDH_DAT (NAME = KV_VDH_DAT, STCLASS = SYMREF READONLY);
       73     5412    1   DCL KV_VDH_PST_0_VRT UBIN SYMREF;
       74     5413
       75     5414        /*
       76     5415        Static data contained within this procedure.
       77     5416        */
       78     5417        /*
       79     5418        AUTO variables.
PL6.E3A0      #001=KVI$RQSDAT File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:4    
       80     5419        */
       81     5420        /*
       82     5421        Temporary save of KV$VDI.USRRQSDAT.RED
       83     5422        */
       84     5423    1   DCL Y@USRRQSDAT_RED BIT(1) AUTO;
       85     5424
       86     5425    1      %KV_STR.MAXRCRBYTSIZ = PRM_USR_RQSDAT.MAXRCRBYTSIZ;
       87     5426
       88     5427        /* save USRRQSDAT.RED, no need for inplop call if so
              5427         */
       89     5428
       90     5429    1      Y@USRRQSDAT_RED = %KV_VDI.USRRQSDAT.RED;
       91     5430    2      IF %KV_MVD.ORG>=%KV#VD_ORG_FORM THEN DO;
       92     5431
       93     5432        /* This is a read to a forms virtual device.  It is never transparent.        */
       94     5433
       95     5434    2         KV$PTR.INPCNDPND.TRN = '0'B;
       96     5435    2         %KV_SSN.TYPCND.TRN = '0'B;
       97     5436
       98     5437        /* now setup the re-read buffer and rqssiz                                    */
       99     5438
      100     5439    2         %KV_STR.EDTBFR__ = PRM_USR_RQSDAT.BFR_;
      101     5440    2         %KV_SSN.REDSTRID = %KV_STR.ID;
      102     5441    2         %KV_SSN.REDBFR__.DATBYTSIZ = 0;
      103     5442    2         %KV_SSN.REDRQSPND = '1'B;
      104     5443    2         CALL KVI$ENBRED;
      105     5444    3         IF PRM_USR_RQSDAT.RE_RED THEN DO;
      106     5445
      107     5446        /* do the reread - no echo                                                    */
      108     5447
      109     5448    3            CALL KVI$CPYSTREDTBFRTO_REDBFR;
      110     5449    4            IF %KV_STR.RE_REDCLM~=1 OR %KV_MVD.ORG=%KV#VD_ORG_SE THEN DO;
      111     5450    4               CALL KVI$EDTX_TO_VRTCLM (%KV_MVD.VRTCLM);
      112     5451    4               IF %KV_MVD.ORG=%KV#VD_ORG_SE THEN CALL KVE$DSPUPD;
      113     5452    4               ELSE CALL KVO$PST (KV_VDH_PST_0_VRT);
      114     5453    4            END;
      115     5454    4            IF NOT Y@USRRQSDAT_RED THEN DO;
PL6.E3A0      #001=KVI$RQSDAT File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:5    
      116     5455
      117     5456        /* use the typeahead if were not already doing so                             */
      118     5457
      119     5458    4               CALL KVV$VDIINT(KV_VDH_DAT);
      120     5459    4            END;                           /* IF                                 */
      121     5460    3         END;                              /* IF                                 */
      122     5461    2      END; ELSE DO;
      123     5462
      124     5463        /* This isn't a read to a forms virtual device.                               */
      125     5464
      126     5465    2         IF PRM_USR_RQSDAT.DATMOD = %KV#DATMOD_TRN THEN
      127     5466        /*
      128     5467        This is a request for transparent data.
      129     5468        */
      130     5469    2         KV$PTR.INPCNDPND.TRN = '1'B;
      131     5470    2         ELSE
      132     5471        /*
      133     5472        This request is not for transparent mode data.
      134     5473        */
      135     5474    2         KV$PTR.INPCNDPND.TRN = '0'B;
      136     5475    2         %KV_SSN.TYPCND.TRN = KV$PTR.INPCNDPND.TRN;
      137     5476    2         %KV_STR.RE_RED = PRM_USR_RQSDAT.RE_RED;
      138     5477    2         IF %KV_VDI.INPUNT=%KV_INPUNT_RCR
      139     5478
      140     5479        /* This is a read to something that gives us records as input.                */
      141     5480
      142     5481    3         THEN DO WHILE NOT %KV_VDI.USRRQSDAT.RED
      143     5482    3           AND %KV_STR.SNDMAXNMBRCR>0;
      144     5483
      145     5484        /* There is no currently enabled read.                                        */
      146     5485
      147     5486    3            %KV_VDI.INTREDINH = '1'B;
      148     5487    3            %KV_SSN.REDRQSPND = '1'B;
      149     5488    3            %KV_SSN.REDSTRID = %KV_STR.ID;
      150     5489    3            %KV_VDI.USRRQSDAT.RED = '1'B;
      151     5490    3            CALL KVV$CALUSR(PRM_USR_RQSDAT);
      152     5491    3            %KV_VDI.INTREDINH = '0'B;
PL6.E3A0      #001=KVI$RQSDAT File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:6    
      153     5492    3         END; ELSE DO;
      154     5493
      155     5494        /* This is a read to something that gives VDH characters or                   */
      156     5495        /* blocks of input, as opposed to records.                                    */
      157     5496
      158     5497    3            IF %KV_STR.WATRED
      159     5498
      160     5499        /* This is not a no-wait (asynchronous) read request.                         */
      161     5500
      162     5501    3              OR %KV_STR.SNDMAXNMBRCR~=0
      163     5502
      164     5503        /* Or we can send more records ...                                            */
      165     5504
      166     5505    3              AND %KV_SSN.TYPAHDBFRHED$->KV$TYPAHDBFR.CHRX
      167     5506    3              <=%KV_SSN.TYPAHDBFRHED$->KV$TYPAHDBFR.CHRX_HI
      168     5507
      169     5508        /* and there seems to be some type-ahead.                                     */
      170     5509
      171     5510    3            THEN CALL KVI$INTRED;
      172     5511    3         END;                              /* Else (not INPUNT_RCR)              */
      173     5512    2      END;                                 /* IF ORG = FORM ELSE                 */
      174     5513    1      IF NOT Y@USRRQSDAT_RED AND %KV_STR.SNDMAXNMBRCR>0
      175     5514        /*
      176     5515           We didn't complete all the reads that were possible and weren't reading ...
      177     5516        */
      178     5517    1      THEN IF %KV_VDI.FULLDUPLEXPAPERTAPE OR %KV_VDI.HALFDUPLEXPAPERTAPE
      179     5518        /*
      180     5519           And we are also in paper tape mode, so we should
      181     5520           send out a DC1 (XON) character to make sure the paper
      182     5521           tape reader is running.
      183     5522        */
      184     5523    1      THEN CALL KVO$OTP1_VRT(%ASCIIDC1);
      185     5524    1   END KVI$RQSDAT;
      186     5525        %EOD;

PL6.E3A0      #001=KVI$RQSDAT File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:7    
--  Include file information  --

   K_ID_E.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KV_ASCCHR_E.:E05TOU  is referenced.
   KV_INT.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KV_INT_M.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is referenced.
   KV$USR.:E05TOU  was found in the system file and is referenced.
   KV$SND.:E05TOU  was found in the system file and is referenced.
   KV$INT.:E05TOU  was found in the system file and is referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KVI$RQSDAT.

   Procedure KVI$RQSDAT requires 317 words for executable code.
   Procedure KVI$RQSDAT requires 10 words of local(AUTO) storage.

PL6.E3A0      #001=KVI$RQSDAT File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:8    

 Object Unit name= KVI$RQSDAT                                 File name= KVI$RED.:E05TOU
 UTS= JUL 30 '97 02:03:16.36 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none   317    13D  KVI$RQSDAT
    1  RoData even  none     7      7  KVI$RQSDAT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  KVI$RQSDAT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 KVI$ENBRED
         yes           Std       1 KVI$EDTX_TO_VRTCLM
         yes           Std       1 KVO$OTP1_VRT
 yes     yes           Std       0 KVE$DSPUPD
         yes           Std       0 KVI$CPYSTREDTBFRTO_REDBFR
 yes     yes           Std       1 KVV$CALUSR
         yes           Std       1 KVO$PST
 yes     yes           Std       1 KVV$VDIINT
         yes           Std       0 KVI$INTRED
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET
PL6.E3A0      #001=KVI$RQSDAT File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:9    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KV$PTR$                          r    KV_VDH_DAT                            KV_VDH_PST_0_VRT
r    G$ROS$
PL6.E3A0      #001=KVI$RQSDAT File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:10   


        1        1        /*M* KVI$RED VDH Read Initialization Routines                                    */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IND=0,IAD=3 */
        8        8        KVI$RQSDAT: PROC(PRM_USR_RQSDAT);

      8   0 000000  D380 0000 0000  xent KVI$RQSDAT      LNJ,B5   X6A_AUTO_1
          0 000003       000A 0001                       DC       10,1

        9        9        %INCLUDE KV_INT_M;
       10      152
       11      153        %KV$BOX(PAGE = YES, TITLE = "KVI$RQSDAT - Request data");

PL6.E3A0      #001=KVI$RQSDAT File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:11   
               171        /***************************************************************************
               172         *                                                                         *
               173         *                         KVI$RQSDAT - Request data                       *
               174         *                                                                         *
               175         ***************************************************************************/

       12      180        /*
       13      181        Declare SYMREFs.
       14      182        */
       15      183        /*
       16      184        Declare external procedures CALLed.
       17      185        */
       18      186    1   DCL KVE$DSPUPD ENTRY ALTRET;
       19      187    1   DCL KVI$CPYSTREDTBFRTO_REDBFR ENTRY;
       20      188    1   DCL KVI$EDTX_TO_VRTCLM ENTRY(1);
       21      189    1   DCL KVI$ENBRED ENTRY;
       22      190    1   DCL KVI$INTRED ENTRY;
       23      191    1   DCL KVO$OTP1_VRT ENTRY(1);
       24      192    1   DCL KVO$PST ENTRY(1);
       25      193    1   DCL KVV$CALUSR ENTRY(1) ALTRET;
       26      194    1   DCL KVV$VDIINT ENTRY(1) ALTRET;
       27      195        /*
       28      196        INCLUDE files, constants, based structures,
       29      197        and static data contained elsewhere.
       30      198        */
       31      199
       32      200        %INCLUDE LCP_6;
       33      391
       34      392        %INCLUDE KV_INT;
       35      431
       36      432        %INCLUDE KV_ASCCHR_E;
       37      569 S      %INCLUDE KV_GLBCNS_E;
       38      570        %KV#VD_ORG_E;
       39      578        %KV#DATMOD_E;
       40      584        %KV_INPUNT_E;
       41      589        %KV_USR_EVT_ID_E;
       42      609        %KV_VDH_EVT_ID_E;
PL6.E3A0      #001=KVI$RQSDAT File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:12   
       43      615
       44      616        %INCLUDE KL_MACRO_C;
       45     3968        %INCLUDE KL_AFCN_C;
       46     4069        %INCLUDE K_ID_E;
       47     4119        %K#LYRID_E;
       48     4126        %K#ENTID_E;
       49     4145
       50     4146 S      %INCLUDE KV$GLB;
       51     4147        %KV$STT;
       52     4541
       53     4542 S      %INCLUDE KV$GLBCTX;
       54     4543        %KV$MVD;
       55     4587        %KV$PTR;
       56     4630        %KV$PTR (NAME = Y$PTR, STCLASS = BASED);
       57     4673        %KV$SRD;
       58     4948        %KV$SSN;
       59     5027        %KV$STR;
       60     5114        %KV$USRPRM;
       61     5165        %KV$VDI;
       62     5236
       63     5237 S      %INCLUDE KV$INT;
       64     5238        %KV$TYPAHDBFR;
       65     5263
       66     5264 S      %INCLUDE KV$SND;
       67     5265
       68     5266 S      %INCLUDE KV$USR;
       69     5267        %KV$USR_RQSDAT (NAME = PRM_USR_RQSDAT, STCLASS = );
       70     5330
       71     5331 S      %INCLUDE KV$VDH;
       72     5332        %KV$VDH_DAT (NAME = KV_VDH_DAT, STCLASS = SYMREF READONLY);
       73     5412    1   DCL KV_VDH_PST_0_VRT UBIN SYMREF;
       74     5413
       75     5414        /*
       76     5415        Static data contained within this procedure.
       77     5416        */
       78     5417        /*
       79     5418        AUTO variables.
PL6.E3A0      #001=KVI$RQSDAT File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:13   
       80     5419        */
       81     5420        /*
       82     5421        Temporary save of KV$VDI.USRRQSDAT.RED
       83     5422        */
       84     5423    1   DCL Y@USRRQSDAT_RED BIT(1) AUTO;
       85     5424
       86     5425    1      %KV_STR.MAXRCRBYTSIZ = PRM_USR_RQSDAT.MAXRCRBYTSIZ;

   5425   0 000005  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 000008  DCC6 0004                            LDB,B5   4,B6
          0 00000A  CCC7 0004                            LDB,B4   @PRM_USR_RQSDAT,AUTO
          0 00000C  E844 0005                            LDR,R6   5,B4
          0 00000E  EF45 0015                            STR,R6   21,B5

       87     5426
       88     5427        /* save USRRQSDAT.RED, no need for inplop call if so
              5427         */
       89     5428
       90     5429    1      Y@USRRQSDAT_RED = %KV_VDI.USRRQSDAT.RED;

   5429   0 000010  DC86                                 LDB,B5   ,B6
          0 000011  E845 001D                            LDR,R6   29,B5
          0 000013  600B                                 SOL,R6   11
          0 000014  E570 8000                            AND,R6   -32768,IMO
          0 000016  EF47 0006                            STR,R6   Y@USRRQSDAT_RED,AUTO

       91     5430    2      IF %KV_MVD.ORG>=%KV#VD_ORG_FORM THEN DO;

   5430   0 000018  BCC6 0006                            LDB,B3   6,B6
          0 00001A  D2C3 0015                            LLH,R5   21,B3
          0 00001C  5D04                                 CMV,R5   4
          0 00001D  0201 007E                            BL       s:5465,PREL

       92     5431
       93     5432        /* This is a read to a forms virtual device.  It is never transparent.        */
       94     5433
       95     5434    2         KV$PTR.INPCNDPND.TRN = '0'B;
PL6.E3A0      #001=KVI$RQSDAT File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:14   

   5434   0 00001F  8846 001B                            LBF,'8000'X       27,B6
   5434   0 000021       8000

       96     5435    2         %KV_SSN.TYPCND.TRN = '0'B;

   5435   0 000022  ACC6 0002                            LDB,B2   2,B6
          0 000024  8842 0039                            LBF,'8000'X       57,B2
          0 000026       8000

       97     5436
       98     5437        /* now setup the re-read buffer and rqssiz                                    */
       99     5438
      100     5439    2         %KV_STR.EDTBFR__ = PRM_USR_RQSDAT.BFR_;

   5439   0 000027  DCC6 0004                            LDB,B5   4,B6
          0 000029  5C0C                                 LDV,R5   12
          0 00002A  0021                                 ALR      ;
          0 00002B       4804 0001                                ALPHANUM(1,B4,,8),;
          0 00002D       4005 000C                                ALPHANUM(12,B5,,R5,FILL)

      101     5440    2         %KV_SSN.REDSTRID = %KV_STR.ID;

   5440   0 00002F  437F                                 CSYNC    s:5439+7,SPREL
          0 000030  DCC6 0002                            LDB,B5   2,B6
          0 000032  BCC6 0004                            LDB,B3   4,B6
          0 000034  E2C3 001C                            LLH,R6   28,B3
          0 000036  E7C5 0038                            STH,R6   56,B5

      102     5441    2         %KV_SSN.REDBFR__.DATBYTSIZ = 0;

   5441   0 000038  DCC6 0002                            LDB,B5   2,B6
          0 00003A  8745 0033                            CL       51,B5

      103     5442    2         %KV_SSN.REDRQSPND = '1'B;

   5442   0 00003C  DCC6 0002                            LDB,B5   2,B6
PL6.E3A0      #001=KVI$RQSDAT File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:15   
          0 00003E  8945 0028                            LBT,'0002'X       40,B5
          0 000040       0002

      104     5443    2         CALL KVI$ENBRED;

   5443   0 000041  CBF0 0000                            LAB,B4   0,IMO
          0 000043  E380 0000 0000  xent                 LNJ,B6   KVI$ENBRED
          0 000046       0001                            DC       s:5444,PREL

      105     5444    3         IF PRM_USR_RQSDAT.RE_RED THEN DO;

   5444   0 000047  ECC7 0004                            LDB,B6   @PRM_USR_RQSDAT,AUTO
          0 000049  8286                                 LB,'0080'X        ,B6
          0 00004A       0080
          0 00004B  0581 00CD                            BBF      s:5513,PREL

      106     5445
      107     5446        /* do the reread - no echo                                                    */
      108     5447
      109     5448    3            CALL KVI$CPYSTREDTBFRTO_REDBFR;

   5448   0 00004D  CBF0 0000                            LAB,B4   0,IMO
          0 00004F  E380 0000 0000  xent                 LNJ,B6   KVI$CPYSTREDTBFRTO_REDBFR
          0 000052       0001                            DC       s:5449,PREL

      110     5449    4            IF %KV_STR.RE_REDCLM~=1 OR %KV_MVD.ORG=%KV#VD_ORG_SE THEN DO;

   5449   0 000053  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 000056  DCC6 0004                            LDB,B5   4,B6
          0 000058  E845 0012                            LDR,R6   18,B5
          0 00005A  6D01                                 CMV,R6   1
          0 00005B  0981 0008                            BNE      s:5450,PREL
          0 00005D  CCC6 0006                            LDB,B4   6,B6
          0 00005F  D2C4 0015                            LLH,R5   21,B4
          0 000061  5D05                                 CMV,R5   5
          0 000062  0981 002A                            BNE      s:5454,PREL

PL6.E3A0      #001=KVI$RQSDAT File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:16   
      111     5450    4               CALL KVI$EDTX_TO_VRTCLM (%KV_MVD.VRTCLM);

   5450   0 000064  CCC6 0006                            LDB,B4   6,B6
          0 000066  BBC4 001B                            LAB,B3   27,B4
          0 000068  BFC7 0008                            STB,B3   Y@USRRQSDAT_RED+2,AUTO
          0 00006A  BBC7 0008                            LAB,B3   Y@USRRQSDAT_RED+2,AUTO
          0 00006C  CBF0 0100                            LAB,B4   256,IMO
          0 00006E  E380 0000 0000  xent                 LNJ,B6   KVI$EDTX_TO_VRTCLM
          0 000071       0001                            DC       s:5451,PREL

      112     5451    4               IF %KV_MVD.ORG=%KV#VD_ORG_SE THEN CALL KVE$DSPUPD;

   5451   0 000072  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 000075  DCC6 0006                            LDB,B5   6,B6
          0 000077  E2C5 0015                            LLH,R6   21,B5
          0 000079  6D05                                 CMV,R6   5
          0 00007A  0981 0009                            BNE      s:5452,PREL

   5451   0 00007C  CBF0 0000                            LAB,B4   0,IMO
          0 00007E  E380 0000 0000  xent                 LNJ,B6   KVE$DSPUPD
          0 000081       0001                            DC       s:5451+16,PREL
          0 000082  0F81 000A                            B        s:5454,PREL

      113     5452    4               ELSE CALL KVO$PST (KV_VDH_PST_0_VRT);

   5452   0 000084  BB80 0000 0000  01                   LAB,B3   0
          0 000087  CBF0 0100                            LAB,B4   256,IMO
          0 000089  E380 0000 0000  xent                 LNJ,B6   KVO$PST
          0 00008C       0001                            DC       s:5454,PREL

      114     5453    4            END;

      115     5454    4            IF NOT Y@USRRQSDAT_RED THEN DO;

   5454   0 00008D  89C7 0006                            CMZ      Y@USRRQSDAT_RED,AUTO
          0 00008F  0801 0089                            BAL      s:5513,PREL

PL6.E3A0      #001=KVI$RQSDAT File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:17   
      116     5455
      117     5456        /* use the typeahead if were not already doing so                             */
      118     5457
      119     5458    4               CALL KVV$VDIINT(KV_VDH_DAT);

   5458   0 000091  BB80 0000 0002  01                   LAB,B3   +2
          0 000094  CBF0 0100                            LAB,B4   256,IMO
          0 000096  E380 0000 0000  xent                 LNJ,B6   KVV$VDIINT
          0 000099       0001                            DC       s:5461,PREL

      120     5459    4            END;                           /* IF                                 */

      121     5460    3         END;                              /* IF                                 */

      122     5461    2      END; ELSE DO;

   5461   0 00009A  0F81 007E                            B        s:5513,PREL

      123     5462
      124     5463        /* This isn't a read to a forms virtual device.                               */
      125     5464
      126     5465    2         IF PRM_USR_RQSDAT.DATMOD = %KV#DATMOD_TRN THEN

   5465   0 00009C  C804                                 LDR,R4   ,B4
          0 00009D  4045                                 SOR,R4   5
          0 00009E  C570 0003                            AND,R4   3,IMO
          0 0000A0  4D01                                 CMV,R4   1
          0 0000A1  0981 0006                            BNE      s:5474,PREL

      127     5466        /*
      128     5467        This is a request for transparent data.
      129     5468        */
      130     5469    2         KV$PTR.INPCNDPND.TRN = '1'B;

   5469   0 0000A3  8946 001B                            LBT,'8000'X       27,B6
   5469   0 0000A5       8000
          0 0000A6  0F81 0004                            B        s:5475,PREL
PL6.E3A0      #001=KVI$RQSDAT File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:18   

      131     5470    2         ELSE
      132     5471        /*
      133     5472        This request is not for transparent mode data.
      134     5473        */
      135     5474    2         KV$PTR.INPCNDPND.TRN = '0'B;

   5474   0 0000A8  8846 001B                            LBF,'8000'X       27,B6
   5474   0 0000AA       8000

      136     5475    2         %KV_SSN.TYPCND.TRN = KV$PTR.INPCNDPND.TRN;

   5475   0 0000AB  ACC6 0002                            LDB,B2   2,B6
          0 0000AD  E846 001B                            LDR,R6   27,B6
          0 0000AF  EAC2 0039                            SRM,R6,'8000'X    57,B2
          0 0000B1       8000

      137     5476    2         %KV_STR.RE_RED = PRM_USR_RQSDAT.RE_RED;

   5476   0 0000B2  DCC6 0004                            LDB,B5   4,B6
          0 0000B4  E804                                 LDR,R6   ,B4
          0 0000B5  6041                                 SOR,R6   1
          0 0000B6  EAC5 001C                            SRM,R6,'0040'X    28,B5
          0 0000B8       0040

      138     5477    2         IF %KV_VDI.INPUNT=%KV_INPUNT_RCR

   5477   0 0000B9  DC86                                 LDB,B5   ,B6
          0 0000BA  E845 001D                            LDR,R6   29,B5
          0 0000BC  6045                                 SOR,R6   5
          0 0000BD  E570 0003                            AND,R6   3,IMO
          0 0000BF  6D02                                 CMV,R6   2
          0 0000C0  0981 0037                            BNE      s:5497,PREL

      139     5478
      140     5479        /* This is a read to something that gives us records as input.                */
      141     5480
PL6.E3A0      #001=KVI$RQSDAT File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:19   
      142     5481    3         THEN DO WHILE NOT %KV_VDI.USRRQSDAT.RED

   5481   0 0000C2  0F81 0028                            B        s:5492,PREL

      143     5482    3           AND %KV_STR.SNDMAXNMBRCR>0;
      144     5483
      145     5484        /* There is no currently enabled read.                                        */
      146     5485
      147     5486    3            %KV_VDI.INTREDINH = '1'B;

   5486   0 0000C4  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 0000C7  DC86                                 LDB,B5   ,B6
          0 0000C8  8945 001D                            LBT,'8000'X       29,B5
          0 0000CA       8000

      148     5487    3            %KV_SSN.REDRQSPND = '1'B;

   5487   0 0000CB  DCC6 0002                            LDB,B5   2,B6
          0 0000CD  8945 0028                            LBT,'0002'X       40,B5
          0 0000CF       0002

      149     5488    3            %KV_SSN.REDSTRID = %KV_STR.ID;

   5488   0 0000D0  DCC6 0002                            LDB,B5   2,B6
          0 0000D2  CCC6 0004                            LDB,B4   4,B6
          0 0000D4  E2C4 001C                            LLH,R6   28,B4
          0 0000D6  E7C5 0038                            STH,R6   56,B5

      150     5489    3            %KV_VDI.USRRQSDAT.RED = '1'B;

   5489   0 0000D8  DC86                                 LDB,B5   ,B6
          0 0000D9  8945 001D                            LBT,'0010'X       29,B5
          0 0000DB       0010

      151     5490    3            CALL KVV$CALUSR(PRM_USR_RQSDAT);

   5490   0 0000DC  BBC7 0004                            LAB,B3   @PRM_USR_RQSDAT,AUTO
PL6.E3A0      #001=KVI$RQSDAT File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:20   
          0 0000DE  CBF0 0100                            LAB,B4   256,IMO
          0 0000E0  E380 0000 0000  xent                 LNJ,B6   KVV$CALUSR
          0 0000E3       0001                            DC       s:5491,PREL

      152     5491    3            %KV_VDI.INTREDINH = '0'B;

   5491   0 0000E4  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 0000E7  DC86                                 LDB,B5   ,B6
          0 0000E8  8845 001D                            LBF,'8000'X       29,B5
          0 0000EA       8000

      153     5492    3         END; ELSE DO;

   5492   0 0000EB  DC86                                 LDB,B5   ,B6
          0 0000EC  82C5 001D                            LB,'0010'X        29,B5
          0 0000EE       0010
          0 0000EF  0501 0006                            BBT      s:5492+11,PREL
          0 0000F1  CCC6 0004                            LDB,B4   4,B6
          0 0000F3  E844 0019                            LDR,R6   25,B4
          0 0000F5  6A4F                                 BGZ,R6   s:5486,SPREL
          0 0000F6  0F81 0022                            B        s:5513,PREL

      154     5493
      155     5494        /* This is a read to something that gives VDH characters or                   */
      156     5495        /* blocks of input, as opposed to records.                                    */
      157     5496
      158     5497    3            IF %KV_STR.WATRED

   5497   0 0000F8  BCC6 0004                            LDB,B3   4,B6
          0 0000FA  82C3 001C                            LB,'0004'X        28,B3
          0 0000FC       0004
          0 0000FD  0501 0015                            BBT      s:5510,PREL
          0 0000FF  D843 0019                            LDR,R5   25,B3
          0 000101  5901 0017                            BEZ,R5   s:5513,PREL
          0 000103  ACC6 0002                            LDB,B2   2,B6
          0 000105  9CC2 000A                            LDB,B1   10,B2
          0 000107  C841 0002                            LDR,R4   2,B1
PL6.E3A0      #001=KVI$RQSDAT File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:21   
          0 000109  4048                                 SOR,R4   8
          0 00010A  C570 007F                            AND,R4   127,IMO
          0 00010C  B841 0002                            LDR,R3   2,B1
          0 00010E  B570 00FF                            AND,R3   255,IMO
          0 000110  C953                                 CMR,R4   R3
          0 000111  0A01 0007                            BAG      s:5513,PREL

      159     5498
      160     5499        /* This is not a no-wait (asynchronous) read request.                         */
      161     5500
      162     5501    3              OR %KV_STR.SNDMAXNMBRCR~=0
      163     5502
      164     5503        /* Or we can send more records ...                                            */
      165     5504
      166     5505    3              AND %KV_SSN.TYPAHDBFRHED$->KV$TYPAHDBFR.CHRX
      167     5506    3              <=%KV_SSN.TYPAHDBFRHED$->KV$TYPAHDBFR.CHRX_HI
      168     5507
      169     5508        /* and there seems to be some type-ahead.                                     */
      170     5509
      171     5510    3            THEN CALL KVI$INTRED;

   5510   0 000113  CBF0 0000                            LAB,B4   0,IMO
          0 000115  E380 0000 0000  xent                 LNJ,B6   KVI$INTRED
          0 000118       0001                            DC       s:5513,PREL

      172     5511    3         END;                              /* Else (not INPUNT_RCR)              */

      173     5512    2      END;                                 /* IF ORG = FORM ELSE                 */

      174     5513    1      IF NOT Y@USRRQSDAT_RED AND %KV_STR.SNDMAXNMBRCR>0

   5513   0 000119  89C7 0006                            CMZ      Y@USRRQSDAT_RED,AUTO
          0 00011B  0801 001E                            BAL      s:5524,PREL
          0 00011D  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 000120  DCC6 0004                            LDB,B5   4,B6
          0 000122  E845 0019                            LDR,R6   25,B5
          0 000124  6A81 0015                            BLEZ,R6  s:5524,PREL
PL6.E3A0      #001=KVI$RQSDAT File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:22   

      175     5514        /*
      176     5515           We didn't complete all the reads that were possible and weren't reading ...
      177     5516        */
      178     5517    1      THEN IF %KV_VDI.FULLDUPLEXPAPERTAPE OR %KV_VDI.HALFDUPLEXPAPERTAPE

   5517   0 000126  CC86                                 LDB,B4   ,B6
          0 000127  82C4 0019                            LB,'0020'X        25,B4
          0 000129       0020
          0 00012A  0501 0006                            BBT      s:5523,PREL
          0 00012C  82C4 0019                            LB,'0002'X        25,B4
          0 00012E       0002
          0 00012F  0581 000A                            BBF      s:5524,PREL

      179     5518        /*
      180     5519           And we are also in paper tape mode, so we should
      181     5520           send out a DC1 (XON) character to make sure the paper
      182     5521           tape reader is running.
      183     5522        */
      184     5523    1      THEN CALL KVO$OTP1_VRT(%ASCIIDC1);

   5523   0 000131  BB80 0000 0005  01                   LAB,B3   +5
          0 000134  CBF0 0100                            LAB,B4   256,IMO
          0 000136  E380 0000 0000  xent                 LNJ,B6   KVO$OTP1_VRT
          0 000139       0001                            DC       s:5524,PREL

      185     5524    1   END KVI$RQSDAT;

   5524   0 00013A  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      186     5525        %EOD;

PL6.E3A0      #001=KVI$RQSDAT File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:23   
--  Include file information  --

   K_ID_E.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KV_ASCCHR_E.:E05TOU  is referenced.
   KV_INT.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KV_INT_M.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is referenced.
   KV$USR.:E05TOU  was found in the system file and is referenced.
   KV$SND.:E05TOU  was found in the system file and is referenced.
   KV$INT.:E05TOU  was found in the system file and is referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KVI$RQSDAT.
PL6.E3A0      #001=KVI$RQSDAT File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:24   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @PRM_USR_RQSDAT           *0-0-0/w STRC(96)    r     1 PRM_USR_RQSDAT
     6-0-0/b BIT         r     1 Y@USRRQSDAT_RED

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 KV$PTR$                    0-0-0/w STRC(128)   r     1 KV_VDH_DAT
     0-0-0/w UBIN(16)    r     1 KV_VDH_PST_0_VRT

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(512)   r     1 KV$MVD                     0-0-0/w STRC(480)   r     1 KV$PTR
     0-0-0/w STRC(1024)  r     1 KV$SSN                     0-0-0/w STRC(512)   r     1 KV$STR
     0-0-0/w STRC(48)    r     1 KV$TYPAHDBFR               0-0-0/w STRC(512)   r     1 KV$VDI


   Procedure KVI$RQSDAT requires 317 words for executable code.
   Procedure KVI$RQSDAT requires 10 words of local(AUTO) storage.
PL6.E3A0      #001=KVI$RQSDAT File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:25   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KVI$RQSDAT File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:26   
          MINI XREF LISTING

KV$MVD.ORG
      4570**DCL      5430>>IF       5449>>IF       5451>>IF
KV$MVD.VRTCLM
      4582**DCL      5450<>CALL
KV$PTR.INPCNDPND
      4614**DCL      4623--REDEF    4627--REDEF
KV$PTR.INPCNDPND.TRN
      4618**DCL      5434<<ASSIGN   5469<<ASSIGN   5474<<ASSIGN   5475>>ASSIGN
KV$PTR.LINLST$
      4610**DCL      4611--REDEF
KV$PTR.MVD$
      4609**DCL      5430>>IF       5449>>IF       5450>>CALL     5451>>IF
KV$PTR.SSN$
      4608**DCL      5435>>ASSIGN   5440>>ASSIGN   5441>>ASSIGN   5442>>ASSIGN   5475>>ASSIGN   5487>>ASSIGN
      5488>>ASSIGN   5497>>IF       5497>>IF
KV$PTR.STR$
      4608**DCL      5425>>ASSIGN   5439>>ASSIGN   5440>>ASSIGN   5449>>IF       5476>>ASSIGN   5481>>DOWHILE
      5488>>ASSIGN   5497>>IF       5497>>IF       5513>>IF
KV$PTR.VDI$
      4608**DCL      5429>>ASSIGN   5477>>IF       5481>>DOWHILE  5486>>ASSIGN   5489>>ASSIGN   5491>>ASSIGN
      5517>>IF       5517>>IF
KV$PTR$
      4602**DCL      4608--IMP-PTR  5425>>ASSIGN   5429>>ASSIGN   5430>>IF       5434>>ASSIGN   5435>>ASSIGN
      5439>>ASSIGN   5440>>ASSIGN   5440>>ASSIGN   5441>>ASSIGN   5442>>ASSIGN   5449>>IF       5449>>IF
      5450>>CALL     5451>>IF       5469>>ASSIGN   5474>>ASSIGN   5475>>ASSIGN   5475>>ASSIGN   5476>>ASSIGN
      5477>>IF       5481>>DOWHILE  5481>>DOWHILE  5486>>ASSIGN   5487>>ASSIGN   5488>>ASSIGN   5488>>ASSIGN
      5489>>ASSIGN   5491>>ASSIGN   5497>>IF       5497>>IF       5497>>IF       5497>>IF       5513>>IF
      5517>>IF       5517>>IF
KV$SRD.BTMRHT
      4790**DCL      4795--REDEF
KV$SRD.CRT
      4866**DCL      4871--REDEF
PL6.E3A0      #001=KVI$RQSDAT File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:27   
KV$SRD.FLDEND
      4830**DCL      4835--REDEF
KV$SRD.HI_NONBLN
      4900**DCL      4905--REDEF
KV$SRD.ORG
      4722**DCL      4727--REDEF
KV$SRD.SRDEND
      4935**DCL      4940--REDEF
KV$SRD.TOPLFT
      4756**DCL      4761--REDEF
KV$SSN.REDBFR__.DATBYTSIZ
      5017**DCL      5441<<ASSIGN
KV$SSN.REDRQSPND
      4989**DCL      5442<<ASSIGN   5487<<ASSIGN
KV$SSN.REDRSPCNT
      4977**DCL      4978--REDEF
KV$SSN.REDSTRID
      5023**DCL      5440<<ASSIGN   5488<<ASSIGN
KV$SSN.TYPAHDBFRHED$
      4973**DCL      5497>>IF       5497>>IF
KV$SSN.TYPCND.TRN
      5023**DCL      5435<<ASSIGN   5475<<ASSIGN
KV$STR.EDTBFR__
      5072**DCL      5439<<ASSIGN
KV$STR.ID
      5108**DCL      5440>>ASSIGN   5488>>ASSIGN
KV$STR.MAXRCRBYTSIZ
      5105**DCL      5425<<ASSIGN
KV$STR.RE_RED
      5108**DCL      5476<<ASSIGN
KV$STR.RE_REDCLM
      5078**DCL      5449>>IF
KV$STR.SNDMAXNMBRCR
      5106**DCL      5481>>DOWHILE  5497>>IF       5513>>IF
KV$STR.WATRED
      5109**DCL      5497>>IF
PL6.E3A0      #001=KVI$RQSDAT File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:28   
KV$STT.REQSTATS.DSPMSK
      4420**DCL      4426--REDEF
KV$STT.REQSTATS.SLCMSK
      4461**DCL      4468--REDEF
KV$TYPAHDBFR
      5256**DCL      5259--REDEF
KV$TYPAHDBFR.CHRX
      5256**DCL      5497>>IF
KV$TYPAHDBFR.CHRX_HI
      5257**DCL      5497>>IF
KV$VDI.FULLDUPLEXPAPERTAPE
      5221**DCL      5517>>IF
KV$VDI.HALFDUPLEXPAPERTAPE
      5222**DCL      5517>>IF
KV$VDI.INPUNT
      5227**DCL      5477>>IF
KV$VDI.INTREDINH
      5224**DCL      5486<<ASSIGN   5491<<ASSIGN
KV$VDI.USRRQSDAT.RED
      5227**DCL      5429>>ASSIGN   5481>>DOWHILE  5489<<ASSIGN
KVE$DSPUPD
       186**DCL-ENT  5451--CALL
KVI$CPYSTREDTBFRTO_REDBFR
       187**DCL-ENT  5448--CALL
KVI$EDTX_TO_VRTCLM
       188**DCL-ENT  5450--CALL
KVI$ENBRED
       189**DCL-ENT  5443--CALL
KVI$INTRED
       190**DCL-ENT  5510--CALL
KVO$OTP1_VRT
       191**DCL-ENT  5523--CALL
KVO$PST
       192**DCL-ENT  5452--CALL
KVV$CALUSR
       193**DCL-ENT  5490--CALL
PL6.E3A0      #001=KVI$RQSDAT File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:29   
KVV$VDIINT
       194**DCL-ENT  5458--CALL
KV_VDH_DAT
      5365**DCL      5458<>CALL
KV_VDH_PST_0_VRT
      5412**DCL      5452<>CALL
PRM_USR_RQSDAT
      5294**DCL         8--PROC     5490<>CALL
PRM_USR_RQSDAT.BFR_
      5323**DCL      5439>>ASSIGN
PRM_USR_RQSDAT.DATMOD
      5300**DCL      5465>>IF
PRM_USR_RQSDAT.MAXRCRBYTSIZ
      5328**DCL      5425>>ASSIGN
PRM_USR_RQSDAT.RE_RED
      5300**DCL      5444>>IF       5476>>ASSIGN
Y$PTR.INPCNDPND
      4657**DCL      4666--REDEF    4670--REDEF
Y$PTR.LINLST$
      4653**DCL      4654--REDEF
Y@USRRQSDAT_RED
      5423**DCL      5429<<ASSIGN   5454>>IF       5513>>IF

PL6.E3A0      #002=KVI$INTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:30   
      187        1        /*T***********************************************************/
      188        2        /*T*                                                         */
      189        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      190        4        /*T*                                                         */
      191        5        /*T***********************************************************/
      192        6        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IND=0,IAD=3 */
      193        7        KVI$INTRED: PROC;
      194        8        %INCLUDE KV_INT_M;
      195      151        %KV$BOX(PAGE = YES, TITLE = "Initialize read");

PL6.E3A0      #002=KVI$INTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:31   
               169        /***************************************************************************
               170         *                                                                         *
               171         *                              Initialize read                            *
               172         *                                                                         *
               173         ***************************************************************************/

      196      178
      197      179        /*
      198      180        Declare SYMREFs.
      199      181        */
      200      182    1   DCL KV_VDH_DAT UBIN SYMREF;
      201      183        /*
      202      184        Declare external procedures CALLed.
      203      185        */
      204      186    1   DCL KVI$ACTRED ENTRY(1);
      205      187    1   DCL KVI$ENBRED ENTRY;
      206      188    1   DCL KVM$SND ENTRY(1) ALTRET;
      207      189    1   DCL KVV$VDIINT ENTRY(1) ALTRET;
      208      190        /*
      209      191        INCLUDE files, constants, based structures,
      210      192        and static data contained elsewhere.
      211      193        */
      212      194
      213      195 S      %INCLUDE KV_GLBCNS_E;
      214      196        %KV_CLKUNT_E;
      215      201        %KV_INPUNT_E;
      216      206
      217      207 S      %INCLUDE KV$GLB;
      218      208
      219      209 S      %INCLUDE KV$GLBCTX;
      220      210        %KV$MRD;
      221      257        %KV$MVD;
      222      301        %KV$PTR;
      223      344        %KV$SRD;
      224      619        %KV$SSN;
      225      698        %KV$STR;
      226      785        %KV$USRPRM;
PL6.E3A0      #002=KVI$INTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:32   
      227      836        %KV$VDI;
      228      907
      229      908 S      %INCLUDE KV$INT;
      230      909        %KV$TYPAHDBFR;
      231      934
      232      935 S      %INCLUDE KV$VDH;
      233      936
      234      937        /*
      235      938        Static data contained within this procedure.
      236      939        */
      237      940    1   DCL KV_SND_RQSDAT_GNR UBIN SYMREF;
      238      941        %KV$VDH_DAT (NAME=KV_VDH_DAT_TIMOUT, STCLASS=SYMREF);
      239     1021        /*
      240     1022        AUTO variables.
      241     1023        */
      242     1024    1   DCL Y@SNDMAXNMBRCR UBIN WORD AUTO;
      243     1025    1   DCL Y@LININC UBIN WORD AUTO;
      244     1026        %KV$VDH_DAT (NAME=KV@VDH_DAT, STCLASS=AUTO);
      245     1106        %EQU KV@VDH_DAT=CHARTEXT('KV@VDH_DAT');
      246     1107
      247     1108    1   Y$INTRED:;
      248     1109    2      IF %KV_VDI.INTREDINH THEN DO;
      249     1110
      250     1111        /* We are re-entering this routine.  Don't */
      251     1112
      252     1113    2         RETURN;
      253     1114    2      END /* END IF INTREDINH */;
      254     1115    1      %KV_VDI.INTREDINH = '1'B;
      255     1116    1      Y@SNDMAXNMBRCR = %KV_STR.SNDMAXNMBRCR;
      256     1117    2   Y$LOP: DO WHILE ('1'B);                 /* LOOP START                         */
      257     1118
      258     1119        /* this loop is traversed until the send flow control says stop or
              1119         */
      259     1120        /* or all type-ahead is processed.                    */
      260     1121
      261     1122    2         IF NOT %KV_STR.WATRED AND %KV_VDI.INPUNT=%KV_INPUNT_CHR
      262     1123    2           AND %KV_SSN.TYPAHDBFRHED$->KV$TYPAHDBFR.CHRX>
PL6.E3A0      #002=KVI$INTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:33   
      263     1124    2           %KV_SSN.TYPAHDBFRHED$->KV$TYPAHDBFR.CHRX_HI THEN EXIT Y$LOP;
      264     1125
      265     1126        /* There is no type-ahead and this is a character-mode device.
      266     1127           There is just a delayed read request outstanding.                          */
      267     1128
      268     1129    2         %KV_SSN.REDRQSPND = '1'B;
      269     1130    2         %KV_SSN.NO_WATREDTRG = '0'B;
      270     1131    2         %KV_SSN.REDSTRID = %KV_STR.ID;
      271     1132    2         CALL KVI$ENBRED;
      272     1133    2         CALL KVV$VDIINT(KV_VDH_DAT);
      273     1134    3         IF %KV_VDI.USRRQSDAT.RED THEN DO;
      274     1135
      275     1136        /* There is an enabled read; the read request enabled it,
      276     1137           and there wasn't sufficient type-ahead to complete the
      277     1138           read.                                                                      */
      278     1139
      279     1140    3            IF %KV_STR.REDTIMOUTPRDUNT=%KV_CLKUNT_10_MS
      280     1141    4              AND %KV_STR.REDTIMOUTPRD=1 THEN DO;
      281     1142
      282     1143        /* User read-timeout of the minimum amount means typeahead only. */
      283     1144
      284     1145    4               %KV@VDH_DAT = KV_VDH_DAT_TIMOUT;
      285     1146    4               CALL KVI$ACTRED (%KV@VDH_DAT);
      286     1147    4            END;
      287     1148    3            IF %KV_SRD.RELPAGE AND %KV_SRD.SCROLL
      288     1149    4              AND %KV_SRD.NXTNONBLNLIN>%KV_SRD.BTMRHT.LIN THEN DO;
      289     1150
      290     1151        /* we're scrolling and doing relative (to read) device pagination.            */
      291     1152        /* And we aren't still WRAPPAGing down after turning SCROLL back on */
      292     1153        /* declare the prompt line to be line 1.                                      */
      293     1154
      294     1155    4               Y@LININC = %KV_SRD.CRTVRTLINPHSLIN-%KV_SRD.TOPLFT.LIN+
      295     1156    4                 (%KV_SRD.PRMVRTCLM-1)/%KV_SRD.WDT;
      296     1157    4               %KV_SRD.CRT.LIN = %KV_SRD.CRT.LIN-Y@LININC;
      297     1158    4               %KV_SRD.CRTVRTLINPHSLIN = %KV_SRD.CRTVRTLINPHSLIN-Y@LININC;
      298     1159    4               %KV_MVD.FRMLIN = 0;
      299     1160    4               %KV_SRD.DVCLINBIS = %KV_SRD.DVCLINBIS+Y@LININC;
PL6.E3A0      #002=KVI$INTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:34   
      300     1161    4               %KV_SRD.HI_NONBLN.LIN = %KV_SRD.HI_NONBLN.LIN-Y@LININC;
      301     1162    4            END;                           /* IF                                 */
      302     1163
      303     1164        /* Since this read isn't satisfied by type-ahead, reset                       */
      304     1165        /* output-ignore mode.                                                        */
      305     1166
      306     1167    4            IF %KV_SSN.OUTPUTDISCARD THEN DO;
      307     1168    4               %KV_SSN.OUTPUTDISCARD = '0'B;
      308     1169    4               %KV_SSN.OTPBLK = '1'B;
      309     1170    4               CALL KVM$SND (KV_SND_RQSDAT_GNR);
      310     1171    4            END;
      311     1172    3            EXIT Y$LOP;
      312     1173    3         END;                              /* IF                                 */
      313     1174    2         IF (Y@SNDMAXNMBRCR = 0) THEN EXIT Y$LOP;
      314     1175
      315     1176        /* this is a redrqs (as opposed to dlyredrqs).                                */
      316     1177
      317     1178
      318     1179        /* this is a dlyredrqs.                                                       */
      319     1180
      320     1181    2         IF (%KV_STR.SNDMAXNMBRCR = 0) THEN EXIT Y$LOP;
      321     1182
      322     1183        /* The flow control credits are exhausted.                               */
      323     1184
      324     1185    2      END Y$LOP;
      325     1186    1      %KV_VDI.INTREDINH = '0'B;
      326     1187    1      RETURN;
      327     1188           %KV$BOX(PAGE = YES, TITLE = "Enable no-wait read");

PL6.E3A0      #002=KVI$INTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:35   
              1206    1   /***************************************************************************
              1207    1    *                                                                         *
              1208    1    *                            Enable no-wait read                          *
              1209    1    *                                                                         *
              1210    1    ***************************************************************************/

      328     1215
      329     1216    1   KVI$ENBNO_WATRED: ENTRY;
      330     1217
      331     1218    2      IF %KV_STR.SNDMAXNMBRCR<=0 OR %KV_VDI.USRRQSDAT.RED THEN DO;
      332     1219
      333     1220        /* Either there is no delayed read request outstanding                        */
      334     1221        /* or the read is already enabled.                                            */
      335     1222
      336     1223    2         %KV_SSN.NO_WATREDTRG = '0'B;
      337     1224    2         RETURN;
      338     1225    2      END /* IF SNDMAXNMBRCR = 0 ... */;
      339     1226    1      IF NOT %KV_MRD.OUTPUT OR %KV_SSN.OTPBLK
      340     1227    1        OR KV$PTR.INPCNDPND.TRN OR %KV_VDI.HALFDUPLEXPAPERTAPE
      341     1228    1      THEN GOTO Y$INTRED;
      342     1229
      343     1230        /* Output isn't yet blocked.  Force the issue. */
      344     1231
      345     1232    1      CALL KVM$SND (KV_SND_RQSDAT_GNR);
      346     1233    1      RETURN;
      347     1234    1   END KVI$INTRED;
      348     1235        %EOD;

PL6.E3A0      #002=KVI$INTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:36   
--  Include file information  --

   KV_INT_M.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is referenced.
   KV$USR.:E05TOU  was found in the system file and is never referenced.
   KV$SND.:E05TOU  was found in the system file and is never referenced.
   KV$INT.:E05TOU  was found in the system file and is referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KVI$INTRED.

   Procedure KVI$INTRED requires 318 words for executable code.
   Procedure KVI$INTRED requires 16 words of local(AUTO) storage.

PL6.E3A0      #002=KVI$INTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:37   

 Object Unit name= KVI$INTRED                                 File name= KVI$RED.:E05TOU
 UTS= JUL 30 '97 02:03:42.20 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none   318    13E  KVI$INTRED
    1  RoData even  none     4      4  KVI$INTRED

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        0  KVI$INTRED
     0     FF                  yes      Std        0  KVI$ENBNO_WATRED

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 KVI$ENBRED
 yes     yes           Std       1 KVV$VDIINT
         yes           Std       1 KVI$ACTRED
 yes     yes           Std       1 KVM$SND
                       nStd      0 X6A_AUTO_0
                       nStd      0 X6A_ARET
PL6.E3A0      #002=KVI$INTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:38   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KV_VDH_DAT                            KV$PTR$                               KV_SND_RQSDAT_GNR
     KV_VDH_DAT_TIMOUT                r    G$ROS$
PL6.E3A0      #002=KVI$INTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:39   


      187        1        /*T***********************************************************/
      188        2        /*T*                                                         */
      189        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      190        4        /*T*                                                         */
      191        5        /*T***********************************************************/
      192        6        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IND=0,IAD=3 */
      193        7        KVI$INTRED: PROC;

      7   0 000000  D380 0000 0000  xent KVI$INTRED      LNJ,B5   X6A_AUTO_0
          0 000003       0010 0000                       DC       16,0

      194        8        %INCLUDE KV_INT_M;
      195      151        %KV$BOX(PAGE = YES, TITLE = "Initialize read");

PL6.E3A0      #002=KVI$INTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:40   
               169        /***************************************************************************
               170         *                                                                         *
               171         *                              Initialize read                            *
               172         *                                                                         *
               173         ***************************************************************************/

      196      178
      197      179        /*
      198      180        Declare SYMREFs.
      199      181        */
      200      182    1   DCL KV_VDH_DAT UBIN SYMREF;
      201      183        /*
      202      184        Declare external procedures CALLed.
      203      185        */
      204      186    1   DCL KVI$ACTRED ENTRY(1);
      205      187    1   DCL KVI$ENBRED ENTRY;
      206      188    1   DCL KVM$SND ENTRY(1) ALTRET;
      207      189    1   DCL KVV$VDIINT ENTRY(1) ALTRET;
      208      190        /*
      209      191        INCLUDE files, constants, based structures,
      210      192        and static data contained elsewhere.
      211      193        */
      212      194
      213      195 S      %INCLUDE KV_GLBCNS_E;
      214      196        %KV_CLKUNT_E;
      215      201        %KV_INPUNT_E;
      216      206
      217      207 S      %INCLUDE KV$GLB;
      218      208
      219      209 S      %INCLUDE KV$GLBCTX;
      220      210        %KV$MRD;
      221      257        %KV$MVD;
      222      301        %KV$PTR;
      223      344        %KV$SRD;
      224      619        %KV$SSN;
      225      698        %KV$STR;
      226      785        %KV$USRPRM;
PL6.E3A0      #002=KVI$INTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:41   
      227      836        %KV$VDI;
      228      907
      229      908 S      %INCLUDE KV$INT;
      230      909        %KV$TYPAHDBFR;
      231      934
      232      935 S      %INCLUDE KV$VDH;
      233      936
      234      937        /*
      235      938        Static data contained within this procedure.
      236      939        */
      237      940    1   DCL KV_SND_RQSDAT_GNR UBIN SYMREF;
      238      941        %KV$VDH_DAT (NAME=KV_VDH_DAT_TIMOUT, STCLASS=SYMREF);
      239     1021        /*
      240     1022        AUTO variables.
      241     1023        */
      242     1024    1   DCL Y@SNDMAXNMBRCR UBIN WORD AUTO;
      243     1025    1   DCL Y@LININC UBIN WORD AUTO;
      244     1026        %KV$VDH_DAT (NAME=KV@VDH_DAT, STCLASS=AUTO);

   1101   0                              Y$INTRED        null
      245     1106        %EQU KV@VDH_DAT=CHARTEXT('KV@VDH_DAT');
      246     1107
      247     1108    1   Y$INTRED:;
      248     1109    2      IF %KV_VDI.INTREDINH THEN DO;

   1109   0 000005  EC80 0000 0000  xsym Y$INTRED        LDB,B6   KV$PTR$
          0 000008  DC86                                 LDB,B5   ,B6
          0 000009  89C5 001D                            CMZ      29,B5
          0 00000B  0881 0004                            BAGE     s:1115,PREL

      249     1110
      250     1111        /* We are re-entering this routine.  Don't */
      251     1112
      252     1113    2         RETURN;

   1113   0 00000D  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

PL6.E3A0      #002=KVI$INTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:42   
      253     1114    2      END /* END IF INTREDINH */;
      254     1115    1      %KV_VDI.INTREDINH = '1'B;

   1115   0 000010  8945 001D                            LBT,'8000'X       29,B5
   1115   0 000012       8000

      255     1116    1      Y@SNDMAXNMBRCR = %KV_STR.SNDMAXNMBRCR;

   1116   0 000013  DCC6 0004                            LDB,B5   4,B6
          0 000015  E845 0019                            LDR,R6   25,B5
          0 000017  EF47 0004                            STR,R6   Y@SNDMAXNMBRCR,AUTO

      256     1117    2   Y$LOP: DO WHILE ('1'B);                 /* LOOP START                         */

   1117   0                              Y$LOP           null
      257     1118
      258     1119        /* this loop is traversed until the send flow control says stop or
              1119         */
      259     1120        /* or all type-ahead is processed.                    */
      260     1121
      261     1122    2         IF NOT %KV_STR.WATRED AND %KV_VDI.INPUNT=%KV_INPUNT_CHR

   1122   0 000019  EC80 0000 0000  xsym Y$LOP           LDB,B6   KV$PTR$
          0 00001C  DCC6 0004                            LDB,B5   4,B6
          0 00001E  82C5 001C                            LB,'0004'X        28,B5
          0 000020       0004
          0 000021  0501 001A                            BBT      s:1129,PREL
          0 000023  CC86                                 LDB,B4   ,B6
          0 000024  E844 001D                            LDR,R6   29,B4
          0 000026  6045                                 SOR,R6   5
          0 000027  E570 0003                            AND,R6   3,IMO
          0 000029  6D01                                 CMV,R6   1
          0 00002A  0981 0011                            BNE      s:1129,PREL
          0 00002C  BCC6 0002                            LDB,B3   2,B6
          0 00002E  ACC3 000A                            LDB,B2   10,B3
          0 000030  D842 0002                            LDR,R5   2,B2
          0 000032  5048                                 SOR,R5   8
PL6.E3A0      #002=KVI$INTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:43   
          0 000033  D570 007F                            AND,R5   127,IMO
          0 000035  C842 0002                            LDR,R4   2,B2
          0 000037  C570 00FF                            AND,R4   255,IMO
          0 000039  D954                                 CMR,R5   R4
          0 00003A  0A01 00BA                            BAG      s:1186,PREL

      262     1123    2           AND %KV_SSN.TYPAHDBFRHED$->KV$TYPAHDBFR.CHRX>
      263     1124    2           %KV_SSN.TYPAHDBFRHED$->KV$TYPAHDBFR.CHRX_HI THEN EXIT Y$LOP;
      264     1125
      265     1126        /* There is no type-ahead and this is a character-mode device.
      266     1127           There is just a delayed read request outstanding.                          */
      267     1128
      268     1129    2         %KV_SSN.REDRQSPND = '1'B;

   1129   0 00003C  CCC6 0002                            LDB,B4   2,B6
          0 00003E  8944 0028                            LBT,'0002'X       40,B4
          0 000040       0002

      269     1130    2         %KV_SSN.NO_WATREDTRG = '0'B;

   1130   0 000041  DCC6 0002                            LDB,B5   2,B6
          0 000043  8845 0028                            LBF,'0004'X       40,B5
          0 000045       0004

      270     1131    2         %KV_SSN.REDSTRID = %KV_STR.ID;

   1131   0 000046  DCC6 0002                            LDB,B5   2,B6
          0 000048  CCC6 0004                            LDB,B4   4,B6
          0 00004A  E2C4 001C                            LLH,R6   28,B4
          0 00004C  E7C5 0038                            STH,R6   56,B5

      271     1132    2         CALL KVI$ENBRED;

   1132   0 00004E  CBF0 0000                            LAB,B4   0,IMO
          0 000050  E380 0000 0000  xent                 LNJ,B6   KVI$ENBRED
          0 000053       0001                            DC       s:1133,PREL

PL6.E3A0      #002=KVI$INTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:44   
      272     1133    2         CALL KVV$VDIINT(KV_VDH_DAT);

   1133   0 000054  BB80 0000 0000  01                   LAB,B3   0
          0 000057  CBF0 0100                            LAB,B4   256,IMO
          0 000059  E380 0000 0000  xent                 LNJ,B6   KVV$VDIINT
          0 00005C       0001                            DC       s:1134,PREL

      273     1134    3         IF %KV_VDI.USRRQSDAT.RED THEN DO;

   1134   0 00005D  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 000060  DC86                                 LDB,B5   ,B6
          0 000061  82C5 001D                            LB,'0010'X        29,B5
          0 000063       0010
          0 000064  0581 0084                            BBF      s:1174,PREL

      274     1135
      275     1136        /* There is an enabled read; the read request enabled it,
      276     1137           and there wasn't sufficient type-ahead to complete the
      277     1138           read.                                                                      */
      278     1139
      279     1140    3            IF %KV_STR.REDTIMOUTPRDUNT=%KV_CLKUNT_10_MS

   1140   0 000066  CCC6 0004                            LDB,B4   4,B6
          0 000068  E2C4 001B                            LLH,R6   27,B4
          0 00006A  6981 001C                            BNEZ,R6  s:1148,PREL
          0 00006C  D844 001B                            LDR,R5   27,B4
          0 00006E  D570 00FF                            AND,R5   255,IMO
          0 000070  5D01                                 CMV,R5   1
          0 000071  0981 0015                            BNE      s:1148,PREL

      280     1141    4              AND %KV_STR.REDTIMOUTPRD=1 THEN DO;

      281     1142
      282     1143        /* User read-timeout of the minimum amount means typeahead only. */
      283     1144
      284     1145    4               %KV@VDH_DAT = KV_VDH_DAT_TIMOUT;

PL6.E3A0      #002=KVI$INTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:45   
   1145   0 000073  AB80 0000 0000  xsym                 LAB,B2   KV_VDH_DAT_TIMOUT
          0 000076  2C00                                 LDV,R2   0
          0 000077  6C10                                 LDV,R6   16
          0 000078  BB87                                 LAB,B3   ,AUTO
          0 000079  3C0C                                 LDV,R3   12
          0 00007A  0008                                 MMM

      285     1146    4               CALL KVI$ACTRED (%KV@VDH_DAT);

   1146   0 00007B  EBC7 0006                            LAB,B6   KV@VDH_DAT,AUTO
          0 00007D  EFC7 000E                            STB,B6   KV@VDH_DAT+8,AUTO
          0 00007F  BBC7 000E                            LAB,B3   KV@VDH_DAT+8,AUTO
          0 000081  CBF0 0100                            LAB,B4   256,IMO
          0 000083  E380 0000 0000  xent                 LNJ,B6   KVI$ACTRED
          0 000086       0001                            DC       s:1148,PREL

      286     1147    4            END;

      287     1148    3            IF %KV_SRD.RELPAGE AND %KV_SRD.SCROLL

   1148   0 000087  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 00008A  DCC6 000A                            LDB,B5   10,B6
          0 00008C  82C5 000E                            LB,'0040'X        14,B5
          0 00008E       0040
          0 00008F  0581 003F                            BBF      s:1167,PREL
          0 000091  82C5 000E                            LB,'0008'X        14,B5
          0 000093       0008
          0 000094  0581 003A                            BBF      s:1167,PREL
          0 000096  E845 0014                            LDR,R6   20,B5
          0 000098  6801 0005                            BLZ,R6   s:1155,PREL
          0 00009A  E945 000B                            CMR,R6   11,B5
          0 00009C  0A81 0032                            BALE     s:1167,PREL

      288     1149    4              AND %KV_SRD.NXTNONBLNLIN>%KV_SRD.BTMRHT.LIN THEN DO;

      289     1150
      290     1151        /* we're scrolling and doing relative (to read) device pagination.            */
PL6.E3A0      #002=KVI$INTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:46   
      291     1152        /* And we aren't still WRAPPAGing down after turning SCROLL back on */
      292     1153        /* declare the prompt line to be line 1.                                      */
      293     1154
      294     1155    4               Y@LININC = %KV_SRD.CRTVRTLINPHSLIN-%KV_SRD.TOPLFT.LIN+

   1155   0 00009E  F845 0012                            LDR,R7   18,B5
          0 0000A0  6C00                                 LDV,R6   0
          0 0000A1  8470 FFFF FFFF                       AID      -1,IMO
          0 0000A4  F345 000D                            DIV,R7   13,B5
          0 0000A6  E845 0013                            LDR,R6   19,B5
          0 0000A8  E245 0009                            SUB,R6   9,B5
          0 0000AA  D857                                 LDR,R5   R7
          0 0000AB  DA56                                 ADD,R5   R6
          0 0000AC  DF47 0005                            STR,R5   Y@LININC,AUTO

      295     1156    4                 (%KV_SRD.PRMVRTCLM-1)/%KV_SRD.WDT;
      296     1157    4               %KV_SRD.CRT.LIN = %KV_SRD.CRT.LIN-Y@LININC;

   1157   0 0000AE  D245 0015                            SUB,R5   21,B5
          0 0000B0  8255                                 NEG      R5
          0 0000B1  DF45 0015                            STR,R5   21,B5

      297     1158    4               %KV_SRD.CRTVRTLINPHSLIN = %KV_SRD.CRTVRTLINPHSLIN-Y@LININC;

   1158   0 0000B3  DCC6 000A                            LDB,B5   10,B6
          0 0000B5  E845 0013                            LDR,R6   19,B5
          0 0000B7  E247 0005                            SUB,R6   Y@LININC,AUTO
          0 0000B9  EF45 0013                            STR,R6   19,B5

      298     1159    4               %KV_MVD.FRMLIN = 0;

   1159   0 0000BB  DCC6 0006                            LDB,B5   6,B6
          0 0000BD  87C5 001D                            CLH      29,B5

      299     1160    4               %KV_SRD.DVCLINBIS = %KV_SRD.DVCLINBIS+Y@LININC;

   1160   0 0000BF  DCC6 000A                            LDB,B5   10,B6
PL6.E3A0      #002=KVI$INTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:47   
          0 0000C1  E845 0019                            LDR,R6   25,B5
          0 0000C3  EA47 0005                            ADD,R6   Y@LININC,AUTO
          0 0000C5  EF45 0019                            STR,R6   25,B5

      300     1161    4               %KV_SRD.HI_NONBLN.LIN = %KV_SRD.HI_NONBLN.LIN-Y@LININC;

   1161   0 0000C7  DCC6 000A                            LDB,B5   10,B6
          0 0000C9  E845 0017                            LDR,R6   23,B5
          0 0000CB  E247 0005                            SUB,R6   Y@LININC,AUTO
          0 0000CD  EF45 0017                            STR,R6   23,B5

      301     1162    4            END;                           /* IF                                 */

      302     1163
      303     1164        /* Since this read isn't satisfied by type-ahead, reset                       */
      304     1165        /* output-ignore mode.                                                        */
      305     1166
      306     1167    4            IF %KV_SSN.OUTPUTDISCARD THEN DO;

   1167   0 0000CF  DCC6 0002                            LDB,B5   2,B6
          0 0000D1  82C5 0028                            LB,'0800'X        40,B5
          0 0000D3       0800
          0 0000D4  0581 0012                            BBF      s:1172,PREL

      307     1168    4               %KV_SSN.OUTPUTDISCARD = '0'B;

   1168   0 0000D6  8845 0028                            LBF,'0800'X       40,B5
   1168   0 0000D8       0800

      308     1169    4               %KV_SSN.OTPBLK = '1'B;

   1169   0 0000D9  DCC6 0002                            LDB,B5   2,B6
          0 0000DB  8945 0028                            LBT,'4000'X       40,B5
          0 0000DD       4000

      309     1170    4               CALL KVM$SND (KV_SND_RQSDAT_GNR);

PL6.E3A0      #002=KVI$INTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:48   
   1170   0 0000DE  BB80 0000 0002  01                   LAB,B3   +2
          0 0000E1  CBF0 0100                            LAB,B4   256,IMO
          0 0000E3  E380 0000 0000  xent                 LNJ,B6   KVM$SND
          0 0000E6       0001                            DC       s:1172,PREL

      310     1171    4            END;

      311     1172    3            EXIT Y$LOP;

   1172   0 0000E7  0F81 000D                            B        s:1186,PREL

      312     1173    3         END;                              /* IF                                 */
      313     1174    2         IF (Y@SNDMAXNMBRCR = 0) THEN EXIT Y$LOP;

   1174   0 0000E9  E847 0004                            LDR,R6   Y@SNDMAXNMBRCR,AUTO
          0 0000EB  6901 0009                            BEZ,R6   s:1186,PREL

      314     1175
      315     1176        /* this is a redrqs (as opposed to dlyredrqs).                                */
      316     1177
      317     1178
      318     1179        /* this is a dlyredrqs.                                                       */
      319     1180
      320     1181    2         IF (%KV_STR.SNDMAXNMBRCR = 0) THEN EXIT Y$LOP;

   1181   0 0000ED  CCC6 0004                            LDB,B4   4,B6
          0 0000EF  D844 0019                            LDR,R5   25,B4
          0 0000F1  5901 0003                            BEZ,R5   s:1186,PREL

      321     1182
      322     1183        /* The flow control credits are exhausted.                               */
      323     1184
      324     1185    2      END Y$LOP;

   1185   0 0000F3  0F81 FF25                            B        s:1117,PREL

      325     1186    1      %KV_VDI.INTREDINH = '0'B;
PL6.E3A0      #002=KVI$INTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:49   

   1186   0 0000F5  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 0000F8  DC86                                 LDB,B5   ,B6
          0 0000F9  8845 001D                            LBF,'8000'X       29,B5
          0 0000FB       8000

      326     1187    1      RETURN;

   1187   0 0000FC  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      327     1188           %KV$BOX(PAGE = YES, TITLE = "Enable no-wait read");

PL6.E3A0      #002=KVI$INTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:50   
              1206    1   /***************************************************************************
              1207    1    *                                                                         *
              1208    1    *                            Enable no-wait read                          *
              1209    1    *                                                                         *
              1210    1    ***************************************************************************/

      328     1215
      329     1216    1   KVI$ENBNO_WATRED: ENTRY;

   1216   0 0000FF  D380 0000 0000  xent KVI$ENBNO_WATREDLNJ,B5   X6A_AUTO_0
          0 000102       0010 0000                       DC       16,0

      330     1217
      331     1218    2      IF %KV_STR.SNDMAXNMBRCR<=0 OR %KV_VDI.USRRQSDAT.RED THEN DO;

   1218   0 000104  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 000107  DCC6 0004                            LDB,B5   4,B6
          0 000109  E845 0019                            LDR,R6   25,B5
          0 00010B  6A81 0007                            BLEZ,R6  s:1223,PREL
          0 00010D  CC86                                 LDB,B4   ,B6
          0 00010E  82C4 001D                            LB,'0010'X        29,B4
          0 000110       0010
          0 000111  0581 0009                            BBF      s:1226,PREL

      332     1219
      333     1220        /* Either there is no delayed read request outstanding                        */
      334     1221        /* or the read is already enabled.                                            */
      335     1222
      336     1223    2         %KV_SSN.NO_WATREDTRG = '0'B;

   1223   0 000113  CCC6 0002                            LDB,B4   2,B6
          0 000115  8844 0028                            LBF,'0004'X       40,B4
          0 000117       0004

      337     1224    2         RETURN;

   1224   0 000118  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
PL6.E3A0      #002=KVI$INTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:51   

      338     1225    2      END /* IF SNDMAXNMBRCR = 0 ... */;
      339     1226    1      IF NOT %KV_MRD.OUTPUT OR %KV_SSN.OTPBLK

   1226   0 00011B  BCC6 0008                            LDB,B3   8,B6
          0 00011D  82C3 0016                            LB,'0008'X        22,B3
          0 00011F       0008
          0 000120  0581 FEE4                            BBF      s:1101,PREL
          0 000122  ACC6 0002                            LDB,B2   2,B6
          0 000124  82C2 0028                            LB,'4000'X        40,B2
          0 000126       4000
          0 000127  0501 FEDD                            BBT      s:1101,PREL
          0 000129  89C6 001B                            CMZ      27,B6
          0 00012B  0801 FED9                            BAL      s:1101,PREL
          0 00012D  82C4 0019                            LB,'0002'X        25,B4
          0 00012F       0002
          0 000130  0501 FED4                            BBT      s:1101,PREL

      340     1227    1        OR KV$PTR.INPCNDPND.TRN OR %KV_VDI.HALFDUPLEXPAPERTAPE
      341     1228    1      THEN GOTO Y$INTRED;
      342     1229
      343     1230        /* Output isn't yet blocked.  Force the issue. */
      344     1231
      345     1232    1      CALL KVM$SND (KV_SND_RQSDAT_GNR);

   1232   0 000132  BB80 0000 0002  01                   LAB,B3   +2
          0 000135  CBF0 0100                            LAB,B4   256,IMO
          0 000137  E380 0000 0000  xent                 LNJ,B6   KVM$SND
          0 00013A       0001                            DC       s:1233,PREL

      346     1233    1      RETURN;

   1233   0 00013B  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      347     1234    1   END KVI$INTRED;
      348     1235        %EOD;

PL6.E3A0      #002=KVI$INTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:52   
--  Include file information  --

   KV_INT_M.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is referenced.
   KV$USR.:E05TOU  was found in the system file and is never referenced.
   KV$SND.:E05TOU  was found in the system file and is never referenced.
   KV$INT.:E05TOU  was found in the system file and is referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KVI$INTRED.
PL6.E3A0      #002=KVI$INTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:53   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w STRC(128)   r     1 KV@VDH_DAT                 5-0-0/w UBIN(16)    r     1 Y@LININC
     4-0-0/w UBIN(16)    r     1 Y@SNDMAXNMBRCR

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 KV$PTR$                    0-0-0/w UBIN(16)    r     1 KV_SND_RQSDAT_GNR
     0-0-0/w UBIN(16)    r     1 KV_VDH_DAT                 0-0-0/w STRC(128)   r     1 KV_VDH_DAT_TIMOUT

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(512)   r     1 KV$MRD                     0-0-0/w STRC(512)   r     1 KV$MVD
     0-0-0/w STRC(480)   r     1 KV$PTR                     0-0-0/w STRC(496)   r     1 KV$SRD
     0-0-0/w STRC(1024)  r     1 KV$SSN                     0-0-0/w STRC(512)   r     1 KV$STR
     0-0-0/w STRC(48)    r     1 KV$TYPAHDBFR               0-0-0/w STRC(512)   r     1 KV$VDI


   Procedure KVI$INTRED requires 318 words for executable code.
   Procedure KVI$INTRED requires 16 words of local(AUTO) storage.
PL6.E3A0      #002=KVI$INTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:54   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=KVI$INTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:55   
          MINI XREF LISTING

KV$MRD.OUTPUT
       238**DCL      1226>>IF
KV$MVD.FRMLIN
       297**DCL      1159<<ASSIGN
KV$PTR.INPCNDPND
       328**DCL       337--REDEF     341--REDEF
KV$PTR.INPCNDPND.TRN
       332**DCL      1226>>IF
KV$PTR.LINLST$
       324**DCL       325--REDEF
KV$PTR.MRD$
       323**DCL      1226>>IF
KV$PTR.MVD$
       323**DCL      1159>>ASSIGN
KV$PTR.SRD$
       324**DCL      1148>>IF       1148>>IF       1148>>IF       1148>>IF       1155>>ASSIGN   1155>>ASSIGN
      1155>>ASSIGN   1155>>ASSIGN   1157>>ASSIGN   1157>>ASSIGN   1158>>ASSIGN   1158>>ASSIGN   1160>>ASSIGN
      1160>>ASSIGN   1161>>ASSIGN   1161>>ASSIGN
KV$PTR.SSN$
       322**DCL      1122>>IF       1122>>IF       1129>>ASSIGN   1130>>ASSIGN   1131>>ASSIGN   1167>>IF
      1168>>ASSIGN   1169>>ASSIGN   1223>>ASSIGN   1226>>IF
KV$PTR.STR$
       322**DCL      1116>>ASSIGN   1122>>IF       1131>>ASSIGN   1140>>IF       1140>>IF       1181>>IF
      1218>>IF
KV$PTR.VDI$
       322**DCL      1109>>IF       1115>>ASSIGN   1122>>IF       1134>>IF       1186>>ASSIGN   1218>>IF
      1226>>IF
KV$PTR$
       316**DCL       322--IMP-PTR  1109>>IF       1115>>ASSIGN   1116>>ASSIGN   1122>>IF       1122>>IF
      1122>>IF       1122>>IF       1129>>ASSIGN   1130>>ASSIGN   1131>>ASSIGN   1131>>ASSIGN   1134>>IF
      1140>>IF       1140>>IF       1148>>IF       1148>>IF       1148>>IF       1148>>IF       1155>>ASSIGN
      1155>>ASSIGN   1155>>ASSIGN   1155>>ASSIGN   1157>>ASSIGN   1157>>ASSIGN   1158>>ASSIGN   1158>>ASSIGN
PL6.E3A0      #002=KVI$INTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:56   
      1159>>ASSIGN   1160>>ASSIGN   1160>>ASSIGN   1161>>ASSIGN   1161>>ASSIGN   1167>>IF       1168>>ASSIGN
      1169>>ASSIGN   1181>>IF       1186>>ASSIGN   1218>>IF       1218>>IF       1223>>ASSIGN   1226>>IF
      1226>>IF       1226>>IF       1226>>IF
KV$SRD.BTMRHT
       461**DCL       466--REDEF
KV$SRD.BTMRHT.LIN
       463**DCL      1148>>IF
KV$SRD.CRT
       537**DCL       542--REDEF
KV$SRD.CRT.LIN
       539**DCL      1157<<ASSIGN   1157>>ASSIGN
KV$SRD.CRTVRTLINPHSLIN
       509**DCL      1155>>ASSIGN   1158<<ASSIGN   1158>>ASSIGN
KV$SRD.DVCLINBIS
       579**DCL      1160<<ASSIGN   1160>>ASSIGN
KV$SRD.FLDEND
       501**DCL       506--REDEF
KV$SRD.HI_NONBLN
       571**DCL       576--REDEF
KV$SRD.HI_NONBLN.LIN
       573**DCL      1161<<ASSIGN   1161>>ASSIGN
KV$SRD.NXTNONBLNLIN
       509**DCL      1148>>IF
KV$SRD.ORG
       393**DCL       398--REDEF
KV$SRD.PRMVRTCLM
       509**DCL      1155>>ASSIGN
KV$SRD.RELPAGE
       470**DCL      1148>>IF
KV$SRD.SCROLL
       470**DCL      1148>>IF
KV$SRD.SRDEND
       606**DCL       611--REDEF
KV$SRD.TOPLFT
       427**DCL       432--REDEF
KV$SRD.TOPLFT.LIN
PL6.E3A0      #002=KVI$INTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:57   
       429**DCL      1155>>ASSIGN
KV$SRD.WDT
       469**DCL      1155>>ASSIGN
KV$SSN.NO_WATREDTRG
       660**DCL      1130<<ASSIGN   1223<<ASSIGN
KV$SSN.OTPBLK
       656**DCL      1169<<ASSIGN   1226>>IF
KV$SSN.OUTPUTDISCARD
       657**DCL      1167>>IF       1168<<ASSIGN
KV$SSN.REDRQSPND
       660**DCL      1129<<ASSIGN
KV$SSN.REDRSPCNT
       648**DCL       649--REDEF
KV$SSN.REDSTRID
       694**DCL      1131<<ASSIGN
KV$SSN.TYPAHDBFRHED$
       644**DCL      1122>>IF       1122>>IF
KV$STR.ID
       779**DCL      1131>>ASSIGN
KV$STR.REDTIMOUTPRD
       778**DCL      1140>>IF
KV$STR.REDTIMOUTPRDUNT
       778**DCL      1140>>IF
KV$STR.SNDMAXNMBRCR
       777**DCL      1116>>ASSIGN   1181>>IF       1218>>IF
KV$STR.WATRED
       780**DCL      1122>>IF
KV$TYPAHDBFR
       927**DCL       930--REDEF
KV$TYPAHDBFR.CHRX
       927**DCL      1122>>IF
KV$TYPAHDBFR.CHRX_HI
       928**DCL      1122>>IF
KV$VDI.HALFDUPLEXPAPERTAPE
       893**DCL      1226>>IF
KV$VDI.INPUNT
PL6.E3A0      #002=KVI$INTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:58   
       898**DCL      1122>>IF
KV$VDI.INTREDINH
       895**DCL      1109>>IF       1115<<ASSIGN   1186<<ASSIGN
KV$VDI.USRRQSDAT.RED
       898**DCL      1134>>IF       1218>>IF
KV@VDH_DAT
      1059**DCL      1145<<ASSIGN   1146<>CALL
KVI$ACTRED
       186**DCL-ENT  1146--CALL
KVI$ENBRED
       187**DCL-ENT  1132--CALL
KVM$SND
       188**DCL-ENT  1170--CALL     1232--CALL
KVV$VDIINT
       189**DCL-ENT  1133--CALL
KV_SND_RQSDAT_GNR
       940**DCL      1170<>CALL     1232<>CALL
KV_VDH_DAT
       182**DCL      1133<>CALL
KV_VDH_DAT_TIMOUT
       974**DCL      1145>>ASSIGN
Y$INTRED
      1101**LABEL    1228--GOTO
Y$LOP
      1117**LABEL    1124--EXIT     1172--EXIT     1174--EXIT     1181--EXIT
Y@LININC
      1025**DCL      1155<<ASSIGN   1157>>ASSIGN   1158>>ASSIGN   1160>>ASSIGN   1161>>ASSIGN
Y@SNDMAXNMBRCR
      1024**DCL      1116<<ASSIGN   1174>>IF

PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:59   
      349        1        /*T***********************************************************/
      350        2        /*T*                                                         */
      351        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      352        4        /*T*                                                         */
      353        5        /*T***********************************************************/
      354        6        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IND=0,IAD=3 */
      355        7        KVI$ENBRED: PROC;
      356        8
      357        9        %INCLUDE KV_INT_M;
      358      152        %KV$BOX (PAGE = NO, TITLE =
               152            "KVI$RED - VDH READ / KVI$ENBNO_WATRED - ENABLE DELAYED READ");

               170        /***************************************************************************
               171         *                                                                         *
               172         *        KVI$RED - VDH READ / KVI$ENBNO_WATRED - ENABLE DELAYED READ      *
               173         *                                                                         *
               174         ***************************************************************************/

      359      179        /*
      360      180        Declare SYMREFs.
      361      181        */
      362      182    1   DCL KV_VDH_PST_0_VRT UBIN SYMREF;
      363      183    1   DCL KV_VDH_PST_NEWLIN_VRT UBIN SYMREF;
      364      184    1   DCL KV_VDH_PST_VRT UBIN SYMREF;
      365      185        /*
      366      186        Declare external procedures CALLed.
      367      187        */
      368      188    1   DCL KHC$CLOCK ENTRY(1) ALTRET;
      369      189    1   DCL KVI$AUTWRP ENTRY;
      370      190    1   DCL KVI$INTINPOPRX ENTRY(1);
      371      191    1   DCL KVI$RSTINPFLDBGNATR ENTRY;
      372      192    1   DCL KVI$SETINPFLDBGNATR ENTRY;
      373      193    1   DCL KVI$SETINPFLDENDATR ENTRY;
      374      194    1   DCL KVO$ERSTO_ENDOF_INP ENTRY;
      375      195    1   DCL KVO$OTPLCL ENTRY(1);
      376      196    1   DCL KVO$PST ENTRY(1);
      377      197    1   DCL KVO$VFCAFTPRM ENTRY(1);
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:60   
      378      198    1   DCL KVO$VFCBFRPRM ENTRY(1);
      379      199    1   DCL KVV$CALUSR ENTRY(1) ALTRET;
      380      200        /*
      381      201        INCLUDE files, constants, based structures,
      382      202        and static data contained elsewhere.
      383      203        */
      384      204
      385      205        %INCLUDE KH$CHN;
      386      327        %INCLUDE KH$CLK;
      387      697        %INCLUDE KH_CLKFNC_E;
      388      742
      389      743 S      %INCLUDE KV_GLBCNS_E;
      390      744        %KV#VD_ORG_E;
      391      752        %KV_INPOPRX_E;
      392      764        %KV_INPUNT_E;
      393      769        %KV_CLKNMB_E;
      394      778        %KV_CLKUNT_E;
      395      783        %KV_MRKTYP_E;
      396      791        %KV_USR_EVT_ID_E;
      397      811        %KV_VDH_EVT_ID_E;
      398      817
      399      818        %INCLUDE LCP_6;
      400     1009        %INCLUDE KL_MACRO_C;
      401     4361        %INCLUDE KL_AFCN_C;
      402     4462        %INCLUDE K_ID_E;
      403     4512        %K#LYRID_E;
      404     4519        %K#ENTID_E;
      405     4538        %KH$CHN;
      406     4662
      407     4663
      408     4664 S      %INCLUDE KV$GLB;
      409     4665        %KV$STT;
      410     5059
      411     5060 S      %INCLUDE KV$GLBCTX;
      412     5061        %KV$MRD;
      413     5108        %KV$MVD;
      414     5152        %KV$PTR;
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:61   
      415     5195        %KV$SRD (STCLASS="BASED(Y@SRD$)");
      416     5470        %EQU KV_SRD=CHARTEXT('KV$SRD');
      417     5471        %KV$SSN;
      418     5550        %KV$STR;
      419     5637        %KV$USRPRM;
      420     5688        %KV$VDI;
      421     5759
      422     5760        %INCLUDE KV$INPFNC;
      423     6319        %KV$INPFNCTBL;
      424     6403
      425     6404 S      %INCLUDE KV$INT;
      426     6405        %KV$SHRBFR_PRM(TXTDCLBYTSIZ = 1, NAM = '');
      427     6452
      428     6453 S      %INCLUDE KV$USR;
      429     6454 S      %INCLUDE KV$VDH;
      430     6455
      431     6456        /*
      432     6457        Static data contained within this procedure.
      433     6458        */
      434     6459        %KH$CLK (FPTN = KV_SETCLK, STCLASS = SYMREF READONLY);
      435     6608        %KV$USR_OTPMRK (NAME=KV_USR_OTPMRK_REDTIMOUT, STCLASS=CONSTANT SYMDEF,
      436     6609         TYP=%KV_MRKTYP_REDTIMOUT, MSTRTR=YES);
      437     6671        %KV$VDH_OTPLCL (NAME = KV_VDH_OTPLCL_PRM, STCLASS = CONSTANT);
      438     6744        /*
      439     6745        AUTO variables.
      440     6746        */
      441     6747
      442     6748        /* Pointer to SRD so PL6 can remember it better */
      443     6749
      444     6750    1   DCL Y@SRD$ PTR;
      445     6751
      446     6752        /* Temporary KV$STR pointer */
      447     6753
      448     6754    1   DCL Y@TMPSTR$ PTR AUTO;
      449     6755
      450     6756        /* Prompt beginning line */
      451     6757
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:62   
      452     6758    1   DCL Y@VRTLIN0 SBIN WORD AUTO;
      453     6759        /*
      454     6760        saved value of TRUNCATE
      455     6761        */
      456     6762    1   DCL Y@TRN BIT(1) AUTO;
      457     6763
      458     6764        /* Field size */
      459     6765
      460     6766    1   DCL Y@FLDSIZ UBIN WORD AUTO;
      461     6767
      462     6768        /* Temporary word 1 */
      463     6769
      464     6770    1   DCL Y@TMPWRD1 SBIN WORD AUTO;
      465     6771
      466     6772        /* Temporary word 2 */
      467     6773
      468     6774    1   DCL Y@TMPWRD2 SBIN WORD AUTO;
      469     6775
      470     6776        /* Input echo (saved from KV$SSN.INPECH for later restore) */
      471     6777
      472     6778    1   DCL Y@INPECH BIT(1) AUTO;
      473     6779        %KH$CLK (FPTN=KH@CLK, STCLASS=AUTO);
      474     6928        %EQU KH@CLK=CHARTEXT('KH@CLK');
      475     6929
      476     6930        /* Output local structure for outputting the prompt */
      477     6931
      478     6932        %KV$VDH_OTPLCL (NAME=KV@VDH_OTPLCL, STCLASS=BASED);
      479     7005        %EQU KV@VDH_OTPLCL=CHARTEXT('ADDR(KH@CLK)->KV@VDH_OTPLCL');
      480     7006
      481     7007        %KV$USR_OTPMRK (NAME=KV@USR_OTPMRK, STCLASS=BASED);
      482     7069        %EQU KV@USR_OTPMRK=CHARTEXT('ADDR(KH@CLK)->KV@USR_OTPMRK');
      483     7070
      484     7071    1      Y@SRD$ = KV$PTR.SRD$;
      485     7072    1      Y@FLDSIZ = 0;
      486     7073    2      IF NOT KV$PTR.INPCNDPND.TRN THEN DO;
      487     7074    3         IF NOT %KV_SRD.SCROLL AND NOT %KV_MRD.CTNFRM THEN DO;
      488     7075    3            Y@VRTLIN0 = %KV_SRD.CRTVRTLINPHSLIN;
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:63   
      489     7076    3         END; ELSE DO;
      490     7077    3            Y@VRTLIN0 = -%BITBIN('8000'X);
      491     7078    3         END;                              /* IF                                 */
      492     7079    3   Y$LOP: DO WHILE ('1'B);                 /* LOOP START                         */
      493     7080
      494     7081        /* This loop is re-iterated if we try to display the prompt                   */
      495     7082        /* and declare the input area, and cause pagination. We then                  */
      496     7083        /* erase what we put out, paginate, and start over at the top                 */
      497     7084        /* of the device.                                                             */
      498     7085        /* (We only do this for some devices.)                                        */
      499     7086
      500     7087    4            IF NOT %KV_VDI.HALFDUPLEXPAPERTAPE AND %KV_MRD.OUTPUT THEN DO;
      501     7088
      502     7089        /* This isn't a transparent read, so allow prompting. */
      503     7090
      504     7091    5               IF (%KV_STR.PRM$ ~= ADDR(NIL)) THEN DO;
      505     7092
      506     7093        /* There is a prompt buffer.                                                  */
      507     7094
      508     7095    6                  IF NOT %KV_VDI.USRRQSDAT THEN DO;
      509     7096    6                     CALL KVO$VFCBFRPRM(%KV_STR.PRM$->KV$SHRBFR_PRM.VFC);
      510     7097    7                     IF Y@VRTLIN0~=-%BITBIN('8000'X) THEN DO;
      511     7098    7                        Y@VRTLIN0 = %KV_SRD.CRTVRTLINPHSLIN;
      512     7099    7                     END;                  /* IF                                 */
      513     7100    6                  END;                     /* IF                                 */
      514     7101    5                  ELSE %KV_VDI.RE_DSPLOWX = %KV_SSN.REDBFR__.BYTX/* NXTX??? */;
      515     7102    5                  %KV@VDH_OTPLCL = KV_VDH_OTPLCL_PRM;
      516     7103    5                  %KV@VDH_OTPLCL.BFR_.BYTSIZ =
      517     7104    5                    %KV_STR.PRM$->KV$SHRBFR_PRM.BYTSIZ-LENGTHC(KV$SHRBFR_PRM)+1;
      518     7105    6                  IF (%KV@VDH_OTPLCL.BFR_.BYTSIZ > 0) THEN DO;
      519     7106
      520     7107        /* There is text in the prompt buffer to output.                              */
      521     7108
      522     7109    6                     %KV@VDH_OTPLCL.BFR_.ADR$ = %KV_STR.PRM$;
      523     7110    6                     %KV@VDH_OTPLCL.BFR_.BYTX = SIZEC(KV$SHRBFR_PRM)-1;
      524     7111    6                     CALL KVO$OTPLCL(%KV@VDH_OTPLCL) ;
      525     7112    6                  END;                     /* IF                                 */
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:64   
      526     7113    5                  CALL KVO$VFCAFTPRM(%KV_STR.PRM$->KV$SHRBFR_PRM.VFC);
      527     7114    5               END;                        /* IF                                 */
      528     7115    4            END;                           /* IF                                 */
      529     7116    4            IF %KV_SRD.CRTVRTLINPHSLIN>=Y@VRTLIN0 THEN DO;
      530     7117
      531     7118        /* we didn't go off the end of the srd.                                       */
      532     7119
      533     7120    4               IF %KV_SRD.CRTVRTLINPHSLIN>%KV_SRD.CRT.LIN
      534     7121    4               THEN %KV_SRD.CRTVRTLINPHSLIN = %KV_SRD.CRT.LIN;
      535     7122    4               IF %KV_MVD.ORG~=%KV#VD_ORG_SE THEN IF NOT %KV_MVD.HRZSCR
      536     7123    4               THEN %KV_SRD.PRMVRTCLM = %KV_SRD.CRT.CLM-%KV_SRD.TOPLFT.CLM+
      537     7124    4                 (%KV_SRD.CRT.LIN-%KV_SRD.CRTVRTLINPHSLIN)*%KV_SRD.WDT;
      538     7125    5               ELSE DO;
      539     7126    5                  IF %KV_SRD.CRT.CLM>=%KV_SRD.BTMRHT.CLM
      540     7127    5                  THEN CALL KVO$PST (KV_VDH_PST_NEWLIN_VRT);
      541     7128    5                  %KV_SRD.CRTVRTLINPHSLIN = %KV_SRD.CRT.LIN;
      542     7129    5                  %KV_SRD.PRMVRTCLM = %KV_SRD.CRT.CLM-%KV_SRD.TOPLFT.CLM;
      543     7130    5                  %KV_MVD.VRTCLM = %KV_SRD.PRMVRTCLM+1;
      544     7131    5               END;
      545     7132    5               IF %KV_MVD.HRZSCR THEN DO;
      546     7133    5                  Y@TMPWRD1 = %KV_MVD.HRZSCRMRGINT;
      547     7134    5                  IF Y@TMPWRD1>%G_SCROLL_CENTER# /* percent specified            */
      548     7135    5                  THEN Y@TMPWRD1 = (%KV_MVD.WDT-%KV_SRD.PRMVRTCLM+49)/100;
      549     7136    5                  IF %KV_MVD.WDT-%KV_SRD.PRMVRTCLM<=Y@TMPWRD1+Y@TMPWRD1
      550     7137    5                  THEN Y@TMPWRD1 = (%KV_MVD.WDT-%KV_SRD.PRMVRTCLM)/3;
      551     7138    5                  %KV_MVD.HRZSCRMRG = Y@TMPWRD1;
      552     7139    5               END;
      553     7140    4               IF %KV_MVD.ORG~=%KV#VD_ORG_FORM AND %KV_VDI.INPUNT=%KV_INPUNT_BLK
      554     7141    5                 OR %KV_MVD.ORG=%KV#VD_ORG_X364 THEN DO;
      555     7142
      556     7143        /* We talk to this device via blocks of data, or as an
      557     7144        X3.64 virtual device. Do a bounded read to save the rest of the screen. */
      558     7145    6                  IF %KV_MVD.ORG=%KV#VD_ORG_X364 THEN DO;
      559     7146        /*
      560     7147           For X364, always use a request-sized input field.
      561     7148        */
      562     7149    6                     Y@FLDSIZ = %KV_STR.MAXRCRBYTSIZ;
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:65   
      563     7150    6                     Y@VRTLIN0 = -%BITBIN('8000'X);
      564     7151    6                  END;
      565     7152
      566     7153    5   Y$INCINPFLDSIZ:;
      567     7154    5                  Y@TMPWRD2 = %KV_STR.DFLINPFLDSIZ;
      568     7155    5                  Y@TMPSTR$ = %KV_SSN.STR$;
      569     7156    6                  DO UNTIL Y@TMPSTR$ = ADDR(NIL);
      570     7157
      571     7158        /* Check all the saved input buffers (we can get to 2 of them).               */
      572     7159
      573     7160    7                     IF (Y@TMPSTR$->KV$STR.EDTBFR__.DATBYTSIZ > Y@TMPWRD2) THEN DO;
      574     7161
      575     7162        /* The edit buffer for this stream contains more data than                    */
      576     7163        /* would fit in our current input size. increase the current size.            */
      577     7164
      578     7165    7                        Y@TMPWRD2 = Y@TMPSTR$->KV$STR.EDTBFR__.DATBYTSIZ;
      579     7166    7                     END;                  /* IF                                 */
      580     7167    6                     Y@TMPSTR$ = Y@TMPSTR$->KV$STR.LNK$;
      581     7168    6                  END;                     /* END DO UNTIL STR$ = NIL            */
      582     7169    6                  IF (Y@TMPWRD2 > %KV_STR.MAXRCRBYTSIZ) THEN DO;
      583     7170
      584     7171        /* The current input size is greater than the read                            */
      585     7172        /* request size. Always limit the input size to the read                      */
      586     7173        /* request size.                                                              */
      587     7174
      588     7175    6                     Y@TMPWRD2 = %KV_STR.MAXRCRBYTSIZ;
      589     7176    6                  END;                     /* IF                                 */
      590     7177    6                  IF (Y@TMPWRD2 < Y@FLDSIZ) THEN DO;
      591     7178
      592     7179        /* increase the field size, as per request, however.                          */
      593     7180
      594     7181    6                     Y@TMPWRD2 = Y@FLDSIZ;
      595     7182    6                  END;                     /* IF                                 */
      596     7183
      597     7184        /* position to the column just after the end of the                           */
      598     7185        /* input field.                                                               */
      599     7186
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:66   
      600     7187    5                  %KV_MVD.VRTCLM = Y@TMPWRD2+%KV_MVD.VRTCLM;
      601     7188    5                  IF %KV_VDI.INPUNT~=%KV_INPUNT_BLK
      602     7189        /* for X364 reads, just compute the ending position of the input field. */
      603     7190    5                  THEN %KV_MVD.VRTCLM = %KV_MVD.VRTCLM-1;
      604     7191    6                  ELSE IF %KV_MRD.ATRRQRDSPPST THEN DO;
      605     7192
      606     7193        /* the attribute declaration for the beginning of the input field             */
      607     7194        /* will require a display position. account for that in computing             */
      608     7195        /* where the ending attribute should go.                                      */
      609     7196
      610     7197    6                     %KV_MVD.VRTCLM = %KV_MVD.VRTCLM+1;
      611     7198    6                  END;                     /* IF                                 */
      612     7199    6                  IF Y@VRTLIN0=-%BITBIN('8000'X) THEN DO;
      613     7200
      614     7201        /* this is the second attempt, just give 'em the rest of the srd              */
      615     7202
      616     7203    6                     Y@TMPWRD1 = %KV_SRD.BTMRHT.LIN
      617     7204    6                       -%KV_SRD.CRTVRTLINPHSLIN-%KV_SRD.DVCLINBIS;
      618     7205    6                     IF NOT %KV_SRD.PAGEHALT OR NOT %KV_SRD.PRINTHALT
      619     7206    6                       OR %KV_MVD.ORG=%KV#VD_ORG_X364
      620     7207    6                     THEN Y@TMPWRD1 = Y@TMPWRD1+1;
      621     7208    6                     Y@TMPWRD1 = Y@TMPWRD1*%KV_SRD.WDT;
      622     7209    7                     IF (Y@TMPWRD1 < %KV_MVD.VRTCLM) THEN DO;
      623     7210    7                        %KV_MVD.VRTCLM = Y@TMPWRD1;
      624     7211    7                        Y@TMPWRD2 = Y@TMPWRD1-%KV_SRD.PRMVRTCLM;
      625     7212    7                        IF Y@TMPWRD2<%KV_STR.MAXRCRBYTSIZ
      626     7213    7                        THEN %KV_STR.MAXRCRBYTSIZ = Y@TMPWRD2;
      627     7214    7                     END;                  /* IF                                 */
      628     7215    6                  END;                     /* IF                                 */
      629     7216    5                  CALL KVO$PST(KV_VDH_PST_0_VRT);
      630     7217    6                  IF (%KV_SRD.CRTVRTLINPHSLIN >= Y@VRTLIN0) THEN DO;
      631     7218
      632     7219        /* we didn't go off the end of the srd.                                       */
      633     7220
      634     7221    6                     Y@TMPWRD1 = %KV_STR.MAXRCRBYTSIZ-Y@TMPWRD2;
      635     7222    6                     Y@TMPWRD1 = Y@TMPWRD1+%KV_SRD.CRT.CLM;
      636     7223    7                     IF (Y@TMPWRD1 > %KV_SRD.BTMRHT.CLM) OR (Y@TMPWRD1 < %KV_SRD.CRT.
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:67   
              7223                              CLM) THEN DO;
      637     7224
      638     7225        /* if we were to expand the input field up to the read                        */
      639     7226        /* request size, we would go beyond the right margin column.                  */
      640     7227        /* expand it only to the right margin column.                                 */
      641     7228
      642     7229    7                        Y@TMPWRD1 = %KV_SRD.BTMRHT.CLM;
      643     7230    7                     END;                  /* IF                                 */
      644     7231    6                     %KV_SRD.CRT.CLM = Y@TMPWRD1;
      645     7232
      646     7233        /* declare the end-of-field attribute at the end of the                       */
      647     7234        /* input area.                                                                */
      648     7235
      649     7236    7                     IF %KV_VDI.INPUNT=%KV_INPUNT_BLK THEN DO;
      650     7237        /*
      651     7238           Set up the field for block-mode input.
      652     7239        */
      653     7240    7                        CALL KVI$SETINPFLDENDATR;
      654     7241
      655     7242        /* declare the attribute for the beginning of the input field.                */
      656     7243
      657     7244    7                        CALL KVI$SETINPFLDBGNATR;
      658     7245    7                     END; ELSE DO;
      659     7246        /*
      660     7247           For character-mode X364, just set the erasing limit.
      661     7248        */
      662     7249    7                        %KV_SRD.FLDEND_PST = %KV_SRD.CRT_PST;
      663     7250    7                        %KV_SRD.HI_NONBLN = %KV_SRD.FLDEND;
      664     7251    7                        %KV_SRD.FLDEND.LIN = %KV_SRD.FLDEND.LIN+%KV_SRD.DVCLINBIS;
      665     7252    7                        %KV_SRD.HI_NONBLNVRT = '0'B;
      666     7253    7                     END;
      667     7254    6                     %KV_MVD.VRTCLM = %KV_SRD.PRMVRTCLM+1;
      668     7255    6                     CALL KVO$PST(KV_VDH_PST_0_VRT);
      669     7256
      670     7257        /* we either declared the input field without paginating,                     */
      671     7258        /* or we paginated and retried (re-iterated this loop).                       */
      672     7259
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:68   
      673     7260    6                     EXIT Y$LOP;
      674     7261    6                  END;                     /* IF                                 */
      675     7262    5               END;
      676     7263
      677     7264        /* this is not a block mode device. we're done putting out the prompt.        */
      678     7265
      679     7266    4               ELSE EXIT Y$LOP;
      680     7267    4            END;                           /* IF                                 */
      681     7268
      682     7269        /* we didn't succeed in displaying the prompt and declaring                   */
      683     7270        /* the input field without paginating. clean things up and                    */
      684     7271        /* try again.                                                                 */
      685     7272
      686     7273    3            %KV_MVD.VRTCLM = 1;
      687     7274    3            %KV_SRD.CRTVRTLINPHSLIN = %KV_SRD.TOPLFT.LIN;
      688     7275    3            %KV_SRD.HI_NONBLNVRT = '0'B;
      689     7276    3            CALL KVO$PST(KV_VDH_PST_VRT);
      690     7277    3            Y@VRTLIN0 = -%BITBIN('8000'X);
      691     7278    3         END Y$LOP;
      692     7279    2         %KV_MVD.REDSSNID = %KV_SSN.SSNID;
      693     7280    2         IF %KV_MVD.SSTINPFNCTBL$~=ADDR(NIL)
      694     7281    2         THEN %KV_SSN.REDONL = %KV_MVD.SSTINPFNCTBL$->KV$INPFNCTBL.REDONLY;
      695     7282    3         IF %KV_VDI.USRRQSDAT.RED AND %KV_MVD.ORG<%KV#VD_ORG_FORM THEN DO;
      696     7283
      697     7284        /* all done if only redefining the input field.                               */
      698     7285
      699     7286    3            RETURN;
      700     7287    3         END;                              /* IF                                 */
      701     7288    2      END;                                 /* IF                                 */
      702     7289    1      Y@TMPWRD1 = %KV_SSN.REDBFR.DSPLOWX;
      703     7290    1      %KV_SSN.REDBFR = '0'B;
      704     7291    1      %KV_VDI.RE_DSPLOWX = 0;
      705     7292    2      IF %KV_MVD.ORG=%KV#VD_ORG_SE THEN DO;
      706     7293    2         IF %KV_MVD.HRZSCR THEN %KV_SSN.REDBFR.DSPLOWX = Y@TMPWRD1;
      707     7294    2         IF %KV_VDI.RE_DSPINP THEN %KV_VDI.RE_DSPLOWX = %KV_STR.MAXRCRBYTSIZ;
      708     7295    2      END;
      709     7296    1      %KV_SSN.CLMIS_BYTX = '1'B;
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:69   
      710     7297    1      %KV_SSN.CHNCAS = '0'B;
      711     7298
      712     7299        /*N* disable mqd (q'd message delivery).                                        */
      713     7300
      714     7301        /* Set the read timeout clock, if the read timeout period is non-zero.        */
      715     7302
      716     7303    1      IF %KV_STR.REDTIMOUTPRDUNT~=%KV_CLKUNT_10_MS
      717     7304    1        OR %KV_MVD.ORG>=%KV#VD_ORG_FORM
      718     7305    2        OR %KV_STR.REDTIMOUTPRD~=1 THEN DO;
      719     7306
      720     7307        /* The minimum timeout just means only accept typeahead, so no clock matters. */
      721     7308
      722     7309    2         IF %KV_VDI.USRRQSDAT.RED THEN EXIT;
      723     7310
      724     7311        /* Only one clock per "read" */
      725     7312
      726     7313    2         %KV_VDI.USRRQSDAT.RED = '1'B;
      727     7314    3         IF %KV_STR.REDTIMOUTPRD>0 THEN DO;
      728     7315
      729     7316        /* There is a user-specified read timeout.  Use it. */
      730     7317
      731     7318        /* For user timeout, use a marker to start the clock when the read does. */
      732     7319
      733     7320    3            %KV@USR_OTPMRK = KV_USR_OTPMRK_REDTIMOUT;
      734     7321    3            %KV@USR_OTPMRK.DAT.ID_BYT(1) = %KV_STR.REDTIMOUTPRD;
      735     7322    3            %KV@USR_OTPMRK.DAT.ID_BYT(0) = %KV_STR.REDTIMOUTPRDUNT;
      736     7323    3            %KV@USR_OTPMRK.DAT.ID_WRD(1) = %KV_SSN.REDTIMOUT.MRKNMB;
      737     7324    3            CALL KVV$CALUSR (%KV@USR_OTPMRK);
      738     7325    3         END;
      739     7326
      740     7327        /* there is no user time-out.                                                 */
      741     7328
      742     7329    2         IF %KV_SSN.LGN THEN EXIT;
      743     7330        /* During logon, NODEADMN does the timing out. */
      744     7331
      745     7332    2         IF %KV_MVD.ORG=%KV#VD_ORG_FORM
      746     7333    2         THEN Y@TMPWRD1 = %KH_CHN.TPTIMOUTPRD;
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:70   
      747     7334    2         ELSE Y@TMPWRD1 = %KH_CHN.REDTIMOUTPRD;
      748     7335    3         IF Y@TMPWRD1~=0 THEN DO;
      749     7336    3            %KH@CLK = KV_SETCLK;
      750     7337    3            %KH@CLK.UID$ = ADDR(%KV_SSN);
      751     7338    3            IF %KV_SSN.CLKSET(%KV_CLKNMB_REDTIMOUT) THEN EXIT;
      752     7339    3            %KH@CLK.PRD = Y@TMPWRD1;
      753     7340    4            CALL KHC$CLOCK (%KH@CLK) WHENRETURN DO;
      754     7341
      755     7342        /* There is a timeout period associated with the channel.  Set the clock. */
      756     7343
      757     7344    4               %KV_SSN.CLKSET(%KV_CLKNMB_REDTIMOUT) = '1'B;
      758     7345    4            END;
      759     7346    3         END;                              /* END if Y@TMPWRD1                   */
      760     7347    1      END; ELSE %KV_VDI.USRRQSDAT.RED = '1'B; /* END if not minimum timeout.     */
      761     7348    2      IF NOT KV$PTR.INPCNDPND.TRN THEN DO;
      762     7349
      763     7350        /* this is not a transparent read.                                            */
      764     7351
      765     7352    3         IF %KV_STR.RE_RED THEN DO;
      766     7353
      767     7354        /* the last read request asked for re-read.                                   */
      768     7355
      769     7356    3            Y@INPECH = %KV_SSN.INPECH;
      770     7357    3            %KV_SSN.INPECH = '1'B;
      771     7358    3            CALL KVI$INTINPOPRX(%KV_INPOPRX_RE_RED);
      772     7359    3            %KV_SSN.INPECH = Y@INPECH;
      773     7360    3         END;                              /* IF                                 */
      774     7361    2         ELSE IF %KV_STR.AUTTABCLM>1 OR %KV_STR.WRDWRPSIZ~=0
      775     7362    2         THEN IF %KV_MVD.ORG<%KV#VD_ORG_FORM
      776     7363    2         THEN CALL KVI$AUTWRP;
      777     7364    2      END;                                 /* IF                                 */
      778     7365    1      RETURN;
      779     7366        %EJECT;
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:71   
      780     7367    1   KVI$INCINPFLDSIZ: ENTRY;
      781     7368    1      Y@SRD$ = KV$PTR.SRD$;
      782     7369    1      Y@FLDSIZ = (%KV_SRD.FLDEND.LIN-%KV_SRD.CRTVRTLINPHSLIN)*%KV_SRD.WDT
      783     7370    1        +%KV_SRD.FLDEND.CLM-%KV_SRD.TOPLFT.CLM
      784     7371    1        +2-%KV_SRD.PRMVRTCLM;
      785     7372    1      CALL KVI$RSTINPFLDBGNATR;
      786     7373    1      %KV_SRD.FLDEND_PST = %KV_SRD.HI_NONBLN_PST;
      787     7374    2      IF %KV_MRD.ATRRQRDSPPST THEN DO;
      788     7375    2         %KV_SRD.PRMVRTCLM = %KV_SRD.PRMVRTCLM-1;
      789     7376    2      END;                                 /* IF                                 */
      790     7377    1      %KV_MVD.VRTCLM = %KV_SRD.PRMVRTCLM+1;
      791     7378    1      CALL KVO$PST(KV_VDH_PST_0_VRT);
      792     7379    1      CALL KVO$ERSTO_ENDOF_INP;
      793     7380    1      Y@VRTLIN0 = %KV_SRD.CRTVRTLINPHSLIN;
      794     7381    1      GOTO Y$INCINPFLDSIZ;
      795     7382    1   END KVI$ENBRED;
      796     7383        %EOD;

PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:72   
--  Include file information  --

   KV$INPFNC.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KH_CLKFNC_E.:E05TOU  is referenced.
   KH$CLK.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   KV_INT_M.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is referenced.
   KV$USR.:E05TOU  was found in the system file and is referenced.
   KV$SND.:E05TOU  was found in the system file and is never referenced.
   KV$INT.:E05TOU  was found in the system file and is referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KVI$ENBRED.

   Procedure KVI$ENBRED requires 1030 words for executable code.
   Procedure KVI$ENBRED requires 28 words of local(AUTO) storage.

PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:73   

 Object Unit name= KVI$ENBRED                                 File name= KVI$RED.:E05TOU
 UTS= JUL 30 '97 02:03:59.64 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS      9      9  KVI$ENBRED
    1   Proc  even  none  1030    406  KVI$ENBRED
    2  RoData even  none     9      9  KVI$ENBRED

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        0  KVI$ENBRED
     1    3B6                  yes      Std        0  KVI$INCINPFLDSIZ

  ****  Data defs  ****

 Sect HexLoc  Name                           Sect HexLoc  Name
    0      0  KV_USR_OTPMRK_REDTIMOUT
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:74   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 KVO$VFCBFRPRM
         yes           Std       1 KVO$OTPLCL
         yes           Std       0 KVI$SETINPFLDENDATR
         yes           Std       0 KVI$SETINPFLDBGNATR
 yes     yes           Std       1 KVV$CALUSR
 yes     yes           Std       1 KHC$CLOCK
         yes           Std       0 KVI$RSTINPFLDBGNATR
         yes           Std       0 KVO$ERSTO_ENDOF_INP
         yes           Std       1 KVO$VFCAFTPRM
         yes           Std       1 KVO$PST
         yes           Std       1 KVI$INTINPOPRX
         yes           Std       0 KVI$AUTWRP
                       nStd      0 X6A_AUTO_0
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KV_VDH_PST_0_VRT                      KV_VDH_PST_NEWLIN_VRT                 KV_VDH_PST_VRT
     KV$PTR$                          r    KV_SETCLK                        r    G$ROS$
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:75   


      349        1        /*T***********************************************************/
      350        2        /*T*                                                         */
      351        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      352        4        /*T*                                                         */
      353        5        /*T***********************************************************/
      354        6        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IND=0,IAD=3 */
      355        7        KVI$ENBRED: PROC;

      7   1 000000  D380 0000 0000  xent KVI$ENBRED      LNJ,B5   X6A_AUTO_0
          1 000003       001C 0000                       DC       28,0

      356        8
      357        9        %INCLUDE KV_INT_M;
      358      152        %KV$BOX (PAGE = NO, TITLE =
               152            "KVI$RED - VDH READ / KVI$ENBNO_WATRED - ENABLE DELAYED READ");

               170        /***************************************************************************
               171         *                                                                         *
               172         *        KVI$RED - VDH READ / KVI$ENBNO_WATRED - ENABLE DELAYED READ      *
               173         *                                                                         *
               174         ***************************************************************************/

      359      179        /*
      360      180        Declare SYMREFs.
      361      181        */
      362      182    1   DCL KV_VDH_PST_0_VRT UBIN SYMREF;
      363      183    1   DCL KV_VDH_PST_NEWLIN_VRT UBIN SYMREF;
      364      184    1   DCL KV_VDH_PST_VRT UBIN SYMREF;
      365      185        /*
      366      186        Declare external procedures CALLed.
      367      187        */
      368      188    1   DCL KHC$CLOCK ENTRY(1) ALTRET;
      369      189    1   DCL KVI$AUTWRP ENTRY;
      370      190    1   DCL KVI$INTINPOPRX ENTRY(1);
      371      191    1   DCL KVI$RSTINPFLDBGNATR ENTRY;
      372      192    1   DCL KVI$SETINPFLDBGNATR ENTRY;
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:76   
      373      193    1   DCL KVI$SETINPFLDENDATR ENTRY;
      374      194    1   DCL KVO$ERSTO_ENDOF_INP ENTRY;
      375      195    1   DCL KVO$OTPLCL ENTRY(1);
      376      196    1   DCL KVO$PST ENTRY(1);
      377      197    1   DCL KVO$VFCAFTPRM ENTRY(1);
      378      198    1   DCL KVO$VFCBFRPRM ENTRY(1);
      379      199    1   DCL KVV$CALUSR ENTRY(1) ALTRET;
      380      200        /*
      381      201        INCLUDE files, constants, based structures,
      382      202        and static data contained elsewhere.
      383      203        */
      384      204
      385      205        %INCLUDE KH$CHN;
      386      327        %INCLUDE KH$CLK;
      387      697        %INCLUDE KH_CLKFNC_E;
      388      742
      389      743 S      %INCLUDE KV_GLBCNS_E;
      390      744        %KV#VD_ORG_E;
      391      752        %KV_INPOPRX_E;
      392      764        %KV_INPUNT_E;
      393      769        %KV_CLKNMB_E;
      394      778        %KV_CLKUNT_E;
      395      783        %KV_MRKTYP_E;
      396      791        %KV_USR_EVT_ID_E;
      397      811        %KV_VDH_EVT_ID_E;
      398      817
      399      818        %INCLUDE LCP_6;
      400     1009        %INCLUDE KL_MACRO_C;
      401     4361        %INCLUDE KL_AFCN_C;
      402     4462        %INCLUDE K_ID_E;
      403     4512        %K#LYRID_E;
      404     4519        %K#ENTID_E;
      405     4538        %KH$CHN;
      406     4662
      407     4663
      408     4664 S      %INCLUDE KV$GLB;
      409     4665        %KV$STT;
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:77   
      410     5059
      411     5060 S      %INCLUDE KV$GLBCTX;
      412     5061        %KV$MRD;
      413     5108        %KV$MVD;
      414     5152        %KV$PTR;
      415     5195        %KV$SRD (STCLASS="BASED(Y@SRD$)");
      416     5470        %EQU KV_SRD=CHARTEXT('KV$SRD');
      417     5471        %KV$SSN;
      418     5550        %KV$STR;
      419     5637        %KV$USRPRM;
      420     5688        %KV$VDI;
      421     5759
      422     5760        %INCLUDE KV$INPFNC;
      423     6319        %KV$INPFNCTBL;
      424     6403
      425     6404 S      %INCLUDE KV$INT;
      426     6405        %KV$SHRBFR_PRM(TXTDCLBYTSIZ = 1, NAM = '');
      427     6452
      428     6453 S      %INCLUDE KV$USR;
      429     6454 S      %INCLUDE KV$VDH;
      430     6455
      431     6456        /*
      432     6457        Static data contained within this procedure.
      433     6458        */
      434     6459        %KH$CLK (FPTN = KV_SETCLK, STCLASS = SYMREF READONLY);
      435     6608        %KV$USR_OTPMRK (NAME=KV_USR_OTPMRK_REDTIMOUT, STCLASS=CONSTANT SYMDEF,
      436     6609         TYP=%KV_MRKTYP_REDTIMOUT, MSTRTR=YES);
      437     6671        %KV$VDH_OTPLCL (NAME = KV_VDH_OTPLCL_PRM, STCLASS = CONSTANT);
      438     6744        /*
      439     6745        AUTO variables.
      440     6746        */
      441     6747
      442     6748        /* Pointer to SRD so PL6 can remember it better */
      443     6749
      444     6750    1   DCL Y@SRD$ PTR;
      445     6751
      446     6752        /* Temporary KV$STR pointer */
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:78   
      447     6753
      448     6754    1   DCL Y@TMPSTR$ PTR AUTO;
      449     6755
      450     6756        /* Prompt beginning line */
      451     6757
      452     6758    1   DCL Y@VRTLIN0 SBIN WORD AUTO;
      453     6759        /*
      454     6760        saved value of TRUNCATE
      455     6761        */
      456     6762    1   DCL Y@TRN BIT(1) AUTO;
      457     6763
      458     6764        /* Field size */
      459     6765
      460     6766    1   DCL Y@FLDSIZ UBIN WORD AUTO;
      461     6767
      462     6768        /* Temporary word 1 */
      463     6769
      464     6770    1   DCL Y@TMPWRD1 SBIN WORD AUTO;
      465     6771
      466     6772        /* Temporary word 2 */
      467     6773
      468     6774    1   DCL Y@TMPWRD2 SBIN WORD AUTO;
      469     6775
      470     6776        /* Input echo (saved from KV$SSN.INPECH for later restore) */
      471     6777
      472     6778    1   DCL Y@INPECH BIT(1) AUTO;
      473     6779        %KH$CLK (FPTN=KH@CLK, STCLASS=AUTO);
      474     6928        %EQU KH@CLK=CHARTEXT('KH@CLK');
      475     6929
      476     6930        /* Output local structure for outputting the prompt */
      477     6931
      478     6932        %KV$VDH_OTPLCL (NAME=KV@VDH_OTPLCL, STCLASS=BASED);
      479     7005        %EQU KV@VDH_OTPLCL=CHARTEXT('ADDR(KH@CLK)->KV@VDH_OTPLCL');
      480     7006
      481     7007        %KV$USR_OTPMRK (NAME=KV@USR_OTPMRK, STCLASS=BASED);
      482     7069        %EQU KV@USR_OTPMRK=CHARTEXT('ADDR(KH@CLK)->KV@USR_OTPMRK');
      483     7070
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:79   
      484     7071    1      Y@SRD$ = KV$PTR.SRD$;

   7071   1 000005  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 000008  DCC6 000A                            LDB,B5   10,B6
          1 00000A  DFC7 0004                            STB,B5   Y@SRD$,AUTO

      485     7072    1      Y@FLDSIZ = 0;

   7072   1 00000C  8747 000A                            CL       Y@FLDSIZ,AUTO

      486     7073    2      IF NOT KV$PTR.INPCNDPND.TRN THEN DO;

   7073   1 00000E  89C6 001B                            CMZ      27,B6
          1 000010  0801 0280                            BAL      s:7289,PREL

      487     7074    3         IF NOT %KV_SRD.SCROLL AND NOT %KV_MRD.CTNFRM THEN DO;

   7074   1 000012  82C5 000E                            LB,'0008'X        14,B5
   7074   1 000014       0008
          1 000015  0501 000E                            BBT      s:7077,PREL
          1 000017  CCC6 0008                            LDB,B4   8,B6
          1 000019  82C4 0018                            LB,'0800'X        24,B4
          1 00001B       0800
          1 00001C  0501 0007                            BBT      s:7077,PREL

      488     7075    3            Y@VRTLIN0 = %KV_SRD.CRTVRTLINPHSLIN;

   7075   1 00001E  E845 0013                            LDR,R6   19,B5
          1 000020  EF47 0008                            STR,R6   Y@VRTLIN0,AUTO

      489     7076    3         END; ELSE DO;

   7076   1 000022  0F81 0005                            B        s:7078,PREL

      490     7077    3            Y@VRTLIN0 = -%BITBIN('8000'X);

   7077   1 000024  E870 8000                            LDR,R6   -32768,IMO
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:80   
          1 000026  EF47 0008                            STR,R6   Y@VRTLIN0,AUTO

      491     7078    3         END;                              /* IF                                 */

      492     7079    3   Y$LOP: DO WHILE ('1'B);                 /* LOOP START                         */

   7079   1                              Y$LOP           null
      493     7080
      494     7081        /* This loop is re-iterated if we try to display the prompt                   */
      495     7082        /* and declare the input area, and cause pagination. We then                  */
      496     7083        /* erase what we put out, paginate, and start over at the top                 */
      497     7084        /* of the device.                                                             */
      498     7085        /* (We only do this for some devices.)                                        */
      499     7086
      500     7087    4            IF NOT %KV_VDI.HALFDUPLEXPAPERTAPE AND %KV_MRD.OUTPUT THEN DO;

   7087   1 000028  EC80 0000 0000  xsym Y$LOP           LDB,B6   KV$PTR$
          1 00002B  DC86                                 LDB,B5   ,B6
          1 00002C  82C5 0019                            LB,'0002'X        25,B5
          1 00002E       0002
          1 00002F  0501 0073                            BBT      s:7116,PREL
          1 000031  CCC6 0008                            LDB,B4   8,B6
          1 000033  82C4 0016                            LB,'0008'X        22,B4
          1 000035       0008
          1 000036  0581 006C                            BBF      s:7116,PREL

      501     7088
      502     7089        /* This isn't a transparent read, so allow prompting. */
      503     7090
      504     7091    5               IF (%KV_STR.PRM$ ~= ADDR(NIL)) THEN DO;

   7091   1 000038  BCC6 0004                            LDB,B3   4,B6
          1 00003A  8DC3 0008                            CMN      8,B3
          1 00003C  0901 0066                            BE       s:7116,PREL

      505     7092
      506     7093        /* There is a prompt buffer.                                                  */
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:81   
      507     7094
      508     7095    6                  IF NOT %KV_VDI.USRRQSDAT THEN DO;

   7095   1 00003E  82C5 001D                            LB,'0018'X        29,B5
   7095   1 000040       0018
          1 000041  0501 001D                            BBT      s:7101,PREL

      509     7096    6                     CALL KVO$VFCBFRPRM(%KV_STR.PRM$->KV$SHRBFR_PRM.VFC);

   7096   1 000043  ACC3 0008                            LDB,B2   8,B3
          1 000045  9BC2 0004                            LAB,B1   4,B2
          1 000047  9FC7 001A                            STB,B1   KH@CLK+12,AUTO
          1 000049  BBC7 001A                            LAB,B3   KH@CLK+12,AUTO
          1 00004B  CBF0 0100                            LAB,B4   256,IMO
          1 00004D  E380 0000 0000  xent                 LNJ,B6   KVO$VFCBFRPRM
          1 000050       0001                            DC       s:7097,PREL

      510     7097    7                     IF Y@VRTLIN0~=-%BITBIN('8000'X) THEN DO;

   7097   1 000051  E847 0008                            LDR,R6   Y@VRTLIN0,AUTO
          1 000053  E970 8000                            CMR,R6   -32768,IMO
          1 000055  0901 000F                            BE       s:7102,PREL

      511     7098    7                        Y@VRTLIN0 = %KV_SRD.CRTVRTLINPHSLIN;

   7098   1 000057  ECC7 0004                            LDB,B6   Y@SRD$,AUTO
          1 000059  E846 0013                            LDR,R6   19,B6
          1 00005B  EF47 0008                            STR,R6   Y@VRTLIN0,AUTO

      512     7099    7                     END;                  /* IF                                 */

      513     7100    6                  END;                     /* IF                                 */

   7100   1 00005D  0F81 0007                            B        s:7102,PREL

      514     7101    5                  ELSE %KV_VDI.RE_DSPLOWX = %KV_SSN.REDBFR__.BYTX/* NXTX??? */;

PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:82   
   7101   1 00005F  ACC6 0002                            LDB,B2   2,B6
          1 000061  E842 0032                            LDR,R6   50,B2
          1 000063  EF45 0016                            STR,R6   22,B5

      515     7102    5                  %KV@VDH_OTPLCL = KV_VDH_OTPLCL_PRM;

   7102   1 000065  AB80 0000 0000  00                   LAB,B2   KV_USR_OTPMRK_REDTIMOUT
          1 000068  2C08                                 LDV,R2   8
          1 000069  6C0A                                 LDV,R6   10
          1 00006A  BB87                                 LAB,B3   ,AUTO
          1 00006B  3C1C                                 LDV,R3   28
          1 00006C  0008                                 MMM

      516     7103    5                  %KV@VDH_OTPLCL.BFR_.BYTSIZ =

   7103   1 00006D  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 000070  DCC6 0004                            LDB,B5   4,B6
          1 000072  CCC5 0008                            LDB,B4   8,B5
          1 000074  E844 0002                            LDR,R6   2,B4
          1 000076  6EF7                                 ADV,R6   -9
          1 000077  EF47 0012                            STR,R6   KH@CLK+4,AUTO

      517     7104    5                    %KV_STR.PRM$->KV$SHRBFR_PRM.BYTSIZ-LENGTHC(KV$SHRBFR_PRM)+1;
      518     7105    6                  IF (%KV@VDH_OTPLCL.BFR_.BYTSIZ > 0) THEN DO;

   7105   1 000079  6901 0016                            BEZ,R6   s:7113,PREL

      519     7106
      520     7107        /* There is text in the prompt buffer to output.                              */
      521     7108
      522     7109    6                     %KV@VDH_OTPLCL.BFR_.ADR$ = %KV_STR.PRM$;

   7109   1 00007B  DCC6 0004                            LDB,B5   4,B6
          1 00007D  CCC5 0008                            LDB,B4   8,B5
          1 00007F  CFC7 000F                            STB,B4   KH@CLK+1,AUTO

      523     7110    6                     %KV@VDH_OTPLCL.BFR_.BYTX = SIZEC(KV$SHRBFR_PRM)-1;
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:83   

   7110   1 000081  5C09                                 LDV,R5   9
          1 000082  DF47 0011                            STR,R5   KH@CLK+3,AUTO

      524     7111    6                     CALL KVO$OTPLCL(%KV@VDH_OTPLCL) ;

   7111   1 000084  DBC7 000E                            LAB,B5   KH@CLK,AUTO
          1 000086  DFC7 001A                            STB,B5   KH@CLK+12,AUTO
          1 000088  BBC7 001A                            LAB,B3   KH@CLK+12,AUTO
          1 00008A  CBF0 0100                            LAB,B4   256,IMO
          1 00008C  E380 0000 0000  xent                 LNJ,B6   KVO$OTPLCL
          1 00008F       0001                            DC       s:7113,PREL

      525     7112    6                  END;                     /* IF                                 */

      526     7113    5                  CALL KVO$VFCAFTPRM(%KV_STR.PRM$->KV$SHRBFR_PRM.VFC);

   7113   1 000090  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 000093  DCC6 0004                            LDB,B5   4,B6
          1 000095  CCC5 0008                            LDB,B4   8,B5
          1 000097  BBC4 0004                            LAB,B3   4,B4
          1 000099  BFC7 001A                            STB,B3   KH@CLK+12,AUTO
          1 00009B  BBC7 001A                            LAB,B3   KH@CLK+12,AUTO
          1 00009D  CBF0 0100                            LAB,B4   256,IMO
          1 00009F  E380 0000 0000  xent                 LNJ,B6   KVO$VFCAFTPRM
          1 0000A2       0001                            DC       s:7116,PREL

      527     7114    5               END;                        /* IF                                 */

      528     7115    4            END;                           /* IF                                 */

      529     7116    4            IF %KV_SRD.CRTVRTLINPHSLIN>=Y@VRTLIN0 THEN DO;

   7116   1 0000A3  ECC7 0004                            LDB,B6   Y@SRD$,AUTO
          1 0000A5  E846 0013                            LDR,R6   19,B6
          1 0000A7  E947 0008                            CMR,R6   Y@VRTLIN0,AUTO
          1 0000A9  0801 019E                            BAL      s:7273,PREL
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:84   

      530     7117
      531     7118        /* we didn't go off the end of the srd.                                       */
      532     7119
      533     7120    4               IF %KV_SRD.CRTVRTLINPHSLIN>%KV_SRD.CRT.LIN

   7120   1 0000AB  E946 0015                            CMR,R6   21,B6
          1 0000AD  0A81 0005                            BALE     s:7122,PREL

      534     7121    4               THEN %KV_SRD.CRTVRTLINPHSLIN = %KV_SRD.CRT.LIN;

   7121   1 0000AF  E846 0015                            LDR,R6   21,B6
          1 0000B1  EF46 0013                            STR,R6   19,B6

      535     7122    4               IF %KV_MVD.ORG~=%KV#VD_ORG_SE THEN IF NOT %KV_MVD.HRZSCR

   7122   1 0000B3  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 0000B6  CCC5 0006                            LDB,B4   6,B5
          1 0000B8  D2C4 0015                            LLH,R5   21,B4
          1 0000BA  5D05                                 CMV,R5   5
          1 0000BB  0901 0036                            BE       s:7132,PREL

   7122   1 0000BD  82C4 0016                            LB,'0004'X        22,B4
   7122   1 0000BF       0004
          1 0000C0  0501 000E                            BBT      s:7126,PREL

      536     7123    4               THEN %KV_SRD.PRMVRTCLM = %KV_SRD.CRT.CLM-%KV_SRD.TOPLFT.CLM+

   7123   1 0000C2  C846 0016                            LDR,R4   22,B6
          1 0000C4  C246 000A                            SUB,R4   10,B6
          1 0000C6  E246 0015                            SUB,R6   21,B6
          1 0000C8  EB46 000D                            MUL,R6   13,B6
          1 0000CA  C256                                 SUB,R4   R6
          1 0000CB  CF46 0012                            STR,R4   18,B6
          1 0000CD  0F81 0024                            B        s:7132,PREL

      537     7124    4                 (%KV_SRD.CRT.LIN-%KV_SRD.CRTVRTLINPHSLIN)*%KV_SRD.WDT;
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:85   
      538     7125    5               ELSE DO;

      539     7126    5                  IF %KV_SRD.CRT.CLM>=%KV_SRD.BTMRHT.CLM

   7126   1 0000CF  C846 0016                            LDR,R4   22,B6
          1 0000D1  C946 000C                            CMR,R4   12,B6
          1 0000D3  0801 000A                            BAL      s:7128,PREL

      540     7127    5                  THEN CALL KVO$PST (KV_VDH_PST_NEWLIN_VRT);

   7127   1 0000D5  BB80 0000 0000  02                   LAB,B3   0
          1 0000D8  CBF0 0100                            LAB,B4   256,IMO
          1 0000DA  E380 0000 0000  xent                 LNJ,B6   KVO$PST
          1 0000DD       0001                            DC       s:7128,PREL

      541     7128    5                  %KV_SRD.CRTVRTLINPHSLIN = %KV_SRD.CRT.LIN;

   7128   1 0000DE  ECC7 0004                            LDB,B6   Y@SRD$,AUTO
          1 0000E0  E846 0015                            LDR,R6   21,B6
          1 0000E2  EF46 0013                            STR,R6   19,B6

      542     7129    5                  %KV_SRD.PRMVRTCLM = %KV_SRD.CRT.CLM-%KV_SRD.TOPLFT.CLM;

   7129   1 0000E4  D846 0016                            LDR,R5   22,B6
          1 0000E6  D246 000A                            SUB,R5   10,B6
          1 0000E8  DF46 0012                            STR,R5   18,B6

      543     7130    5                  %KV_MVD.VRTCLM = %KV_SRD.PRMVRTCLM+1;

   7130   1 0000EA  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 0000ED  CCC5 0006                            LDB,B4   6,B5
          1 0000EF  5E01                                 ADV,R5   1
          1 0000F0  DF44 001B                            STR,R5   27,B4

      544     7131    5               END;

      545     7132    5               IF %KV_MVD.HRZSCR THEN DO;
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:86   

   7132   1 0000F2  CCC5 0006                            LDB,B4   6,B5
          1 0000F4  82C4 0016                            LB,'0004'X        22,B4
          1 0000F6       0004
          1 0000F7  0581 0028                            BBF      s:7140,PREL

      546     7133    5                  Y@TMPWRD1 = %KV_MVD.HRZSCRMRGINT;

   7133   1 0000F9  E844 0017                            LDR,R6   23,B4
          1 0000FB  E570 00FF                            AND,R6   255,IMO
          1 0000FD  EF47 000B                            STR,R6   Y@TMPWRD1,AUTO

      547     7134    5                  IF Y@TMPWRD1>%G_SCROLL_CENTER# /* percent specified            */

   7134   1 0000FF  6D7F                                 CMV,R6   127
          1 000100  0A81 000B                            BALE     s:7136,PREL

      548     7135    5                  THEN Y@TMPWRD1 = (%KV_MVD.WDT-%KV_SRD.PRMVRTCLM+49)/100;

   7135   1 000102  D844 0013                            LDR,R5   19,B4
          1 000104  D246 0012                            SUB,R5   18,B6
          1 000106  5E31                                 ADV,R5   49
          1 000107  D370 0064                            DIV,R5   100,IMO
          1 000109  E855                                 LDR,R6   R5
          1 00010A  EF47 000B                            STR,R6   Y@TMPWRD1,AUTO

      549     7136    5                  IF %KV_MVD.WDT-%KV_SRD.PRMVRTCLM<=Y@TMPWRD1+Y@TMPWRD1

   7136   1 00010C  D844 0013                            LDR,R5   19,B4
          1 00010E  D246 0012                            SUB,R5   18,B6
          1 000110  6001                                 SOL,R6   1
          1 000111  E955                                 CMR,R6   R5
          1 000112  0801 0009                            BAL      s:7138,PREL

      550     7137    5                  THEN Y@TMPWRD1 = (%KV_MVD.WDT-%KV_SRD.PRMVRTCLM)/3;

   7137   1 000114  D844 0013                            LDR,R5   19,B4
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:87   
          1 000116  D246 0012                            SUB,R5   18,B6
          1 000118  D370 0003                            DIV,R5   3,IMO
          1 00011A  DF47 000B                            STR,R5   Y@TMPWRD1,AUTO

      551     7138    5                  %KV_MVD.HRZSCRMRG = Y@TMPWRD1;

   7138   1 00011C  E847 000B                            LDR,R6   Y@TMPWRD1,AUTO
          1 00011E  E7C4 0017                            STH,R6   23,B4

      552     7139    5               END;

      553     7140    4               IF %KV_MVD.ORG~=%KV#VD_ORG_FORM AND %KV_VDI.INPUNT=%KV_INPUNT_BLK

   7140   1 000120  CCC5 0006                            LDB,B4   6,B5
          1 000122  E2C4 0015                            LLH,R6   21,B4
          1 000124  6D04                                 CMV,R6   4
          1 000125  0901 000A                            BE       s:7140+16,PREL
          1 000127  BC85                                 LDB,B3   ,B5
          1 000128  D843 001D                            LDR,R5   29,B3
          1 00012A  5045                                 SOR,R5   5
          1 00012B  D570 0003                            AND,R5   3,IMO
          1 00012D  5D03                                 CMV,R5   3
          1 00012E  0901 0004                            BE       s:7145,PREL
          1 000130  6D02                                 CMV,R6   2
          1 000131  0981 0134                            BNE      s:7279,PREL

      554     7141    5                 OR %KV_MVD.ORG=%KV#VD_ORG_X364 THEN DO;

      555     7142
      556     7143        /* We talk to this device via blocks of data, or as an
      557     7144        X3.64 virtual device. Do a bounded read to save the rest of the screen. */
      558     7145    6                  IF %KV_MVD.ORG=%KV#VD_ORG_X364 THEN DO;

   7145   1 000133  6D02                                 CMV,R6   2
          1 000134  0981 000B                            BNE      s:7151,PREL

      559     7146        /*
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:88   
      560     7147           For X364, always use a request-sized input field.
      561     7148        */
      562     7149    6                     Y@FLDSIZ = %KV_STR.MAXRCRBYTSIZ;

   7149   1 000136  BCC5 0004                            LDB,B3   4,B5
          1 000138  D843 0015                            LDR,R5   21,B3
          1 00013A  DF47 000A                            STR,R5   Y@FLDSIZ,AUTO

      563     7150    6                     Y@VRTLIN0 = -%BITBIN('8000'X);

   7150   1 00013C  C870 8000                            LDR,R4   -32768,IMO
          1 00013E  CF47 0008                            STR,R4   Y@VRTLIN0,AUTO

      564     7151    6                  END;

   7145   1                              Y$INCINPFLDSIZ  null
      565     7152
      566     7153    5   Y$INCINPFLDSIZ:;
      567     7154    5                  Y@TMPWRD2 = %KV_STR.DFLINPFLDSIZ;

   7154   1 000140  EC80 0000 0000  xsym Y$INCINPFLDSIZ  LDB,B6   KV$PTR$
          1 000143  DCC6 0004                            LDB,B5   4,B6
          1 000145  E845 0016                            LDR,R6   22,B5
          1 000147  EF47 000C                            STR,R6   Y@TMPWRD2,AUTO

      568     7155    5                  Y@TMPSTR$ = %KV_SSN.STR$;

   7155   1 000149  CCC6 0002                            LDB,B4   2,B6
          1 00014B  BCC4 0004                            LDB,B3   4,B4
          1 00014D  BFC7 0006                            STB,B3   Y@TMPSTR$,AUTO

      569     7156    6                  DO UNTIL Y@TMPSTR$ = ADDR(NIL);

      570     7157
      571     7158        /* Check all the saved input buffers (we can get to 2 of them).               */
      572     7159
      573     7160    7                     IF (Y@TMPSTR$->KV$STR.EDTBFR__.DATBYTSIZ > Y@TMPWRD2) THEN DO;
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:89   

   7160   1 00014F  ECC7 0006                            LDB,B6   Y@TMPSTR$,AUTO
          1 000151  E846 000F                            LDR,R6   15,B6
          1 000153  6801 0005                            BLZ,R6   s:7165,PREL
          1 000155  E947 000C                            CMR,R6   Y@TMPWRD2,AUTO
          1 000157  0A81 0003                            BALE     s:7167,PREL

      574     7161
      575     7162        /* The edit buffer for this stream contains more data than                    */
      576     7163        /* would fit in our current input size. increase the current size.            */
      577     7164
      578     7165    7                        Y@TMPWRD2 = Y@TMPSTR$->KV$STR.EDTBFR__.DATBYTSIZ;

   7165   1 000159  EF47 000C                            STR,R6   Y@TMPWRD2,AUTO

      579     7166    7                     END;                  /* IF                                 */

      580     7167    6                     Y@TMPSTR$ = Y@TMPSTR$->KV$STR.LNK$;

   7167   1 00015B  DCC6 0002                            LDB,B5   2,B6
          1 00015D  DFC7 0006                            STB,B5   Y@TMPSTR$,AUTO

      581     7168    6                  END;                     /* END DO UNTIL STR$ = NIL            */

   7168   1 00015F  8DC7 0006                            CMN      Y@TMPSTR$,AUTO
          1 000161  09EE                                 BNE      s:7160,SPREL

      582     7169    6                  IF (Y@TMPWRD2 > %KV_STR.MAXRCRBYTSIZ) THEN DO;

   7169   1 000162  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 000165  CCC6 0004                            LDB,B4   4,B6
          1 000167  E847 000C                            LDR,R6   Y@TMPWRD2,AUTO
          1 000169  6801 0009                            BLZ,R6   s:7177,PREL
          1 00016B  E944 0015                            CMR,R6   21,B4
          1 00016D  0381 0005                            BLE      s:7177,PREL

      583     7170
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:90   
      584     7171        /* The current input size is greater than the read                            */
      585     7172        /* request size. Always limit the input size to the read                      */
      586     7173        /* request size.                                                              */
      587     7174
      588     7175    6                     Y@TMPWRD2 = %KV_STR.MAXRCRBYTSIZ;

   7175   1 00016F  E844 0015                            LDR,R6   21,B4
          1 000171  EF47 000C                            STR,R6   Y@TMPWRD2,AUTO

      589     7176    6                  END;                     /* IF                                 */

      590     7177    6                  IF (Y@TMPWRD2 < Y@FLDSIZ) THEN DO;

   7177   1 000173  6801 0005                            BLZ,R6   s:7181,PREL
          1 000175  E947 000A                            CMR,R6   Y@FLDSIZ,AUTO
          1 000177  0281 0005                            BGE      s:7187,PREL

      591     7178
      592     7179        /* increase the field size, as per request, however.                          */
      593     7180
      594     7181    6                     Y@TMPWRD2 = Y@FLDSIZ;

   7181   1 000179  E847 000A                            LDR,R6   Y@FLDSIZ,AUTO
          1 00017B  EF47 000C                            STR,R6   Y@TMPWRD2,AUTO

      595     7182    6                  END;                     /* IF                                 */

      596     7183
      597     7184        /* position to the column just after the end of the                           */
      598     7185        /* input field.                                                               */
      599     7186
      600     7187    5                  %KV_MVD.VRTCLM = Y@TMPWRD2+%KV_MVD.VRTCLM;

   7187   1 00017D  BCC6 0006                            LDB,B3   6,B6
          1 00017F  EA43 001B                            ADD,R6   27,B3
          1 000181  EF43 001B                            STR,R6   27,B3

PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:91   
      601     7188    5                  IF %KV_VDI.INPUNT~=%KV_INPUNT_BLK

   7188   1 000183  CC86                                 LDB,B4   ,B6
          1 000184  E844 001D                            LDR,R6   29,B4
          1 000186  6045                                 SOR,R6   5
          1 000187  E570 0003                            AND,R6   3,IMO
          1 000189  6D03                                 CMV,R6   3
          1 00018A  0901 0007                            BE       s:7191,PREL

      602     7189        /* for X364 reads, just compute the ending position of the input field. */
      603     7190    5                  THEN %KV_MVD.VRTCLM = %KV_MVD.VRTCLM-1;

   7190   1 00018C  BCC6 0006                            LDB,B3   6,B6
          1 00018E  88C3 001B                            DEC      27,B3
          1 000190  0F81 000B                            B        s:7199,PREL

      604     7191    6                  ELSE IF %KV_MRD.ATRRQRDSPPST THEN DO;

   7191   1 000192  BCC6 0008                            LDB,B3   8,B6
          1 000194  89C3 0018                            CMZ      24,B3
          1 000196  0881 0005                            BAGE     s:7199,PREL

      605     7192
      606     7193        /* the attribute declaration for the beginning of the input field             */
      607     7194        /* will require a display position. account for that in computing             */
      608     7195        /* where the ending attribute should go.                                      */
      609     7196
      610     7197    6                     %KV_MVD.VRTCLM = %KV_MVD.VRTCLM+1;

   7197   1 000198  ACC6 0006                            LDB,B2   6,B6
          1 00019A  8AC2 001B                            INC      27,B2

      611     7198    6                  END;                     /* IF                                 */

      612     7199    6                  IF Y@VRTLIN0=-%BITBIN('8000'X) THEN DO;

   7199   1 00019C  E847 0008                            LDR,R6   Y@VRTLIN0,AUTO
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:92   
          1 00019E  E970 8000                            CMR,R6   -32768,IMO
          1 0001A0  0981 003A                            BNE      s:7216,PREL

      613     7200
      614     7201        /* this is the second attempt, just give 'em the rest of the srd              */
      615     7202
      616     7203    6                     Y@TMPWRD1 = %KV_SRD.BTMRHT.LIN

   7203   1 0001A2  CCC7 0004                            LDB,B4   Y@SRD$,AUTO
          1 0001A4  D844 000B                            LDR,R5   11,B4
          1 0001A6  D244 0013                            SUB,R5   19,B4
          1 0001A8  D244 0019                            SUB,R5   25,B4
          1 0001AA  DF47 000B                            STR,R5   Y@TMPWRD1,AUTO

      617     7204    6                       -%KV_SRD.CRTVRTLINPHSLIN-%KV_SRD.DVCLINBIS;
      618     7205    6                     IF NOT %KV_SRD.PAGEHALT OR NOT %KV_SRD.PRINTHALT

   7205   1 0001AC  82C4 000E                            LB,'0020'X        14,B4
   7205   1 0001AE       0020
          1 0001AF  0581 000D                            BBF      s:7207,PREL
          1 0001B1  82C4 000E                            LB,'0080'X        14,B4
          1 0001B3       0080
          1 0001B4  0581 0008                            BBF      s:7207,PREL
          1 0001B6  BCC6 0006                            LDB,B3   6,B6
          1 0001B8  C2C3 0015                            LLH,R4   21,B3
          1 0001BA  4D02                                 CMV,R4   2
          1 0001BB  0981 0003                            BNE      s:7208,PREL

      619     7206    6                       OR %KV_MVD.ORG=%KV#VD_ORG_X364
      620     7207    6                     THEN Y@TMPWRD1 = Y@TMPWRD1+1;

   7207   1 0001BD  8AC7 000B                            INC      Y@TMPWRD1,AUTO

      621     7208    6                     Y@TMPWRD1 = Y@TMPWRD1*%KV_SRD.WDT;

   7208   1 0001BF  D847 000B                            LDR,R5   Y@TMPWRD1,AUTO
          1 0001C1  DB44 000D                            MUL,R5   13,B4
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:93   
          1 0001C3  DF47 000B                            STR,R5   Y@TMPWRD1,AUTO

      622     7209    7                     IF (Y@TMPWRD1 < %KV_MVD.VRTCLM) THEN DO;

   7209   1 0001C5  BCC6 0006                            LDB,B3   6,B6
          1 0001C7  D943 001B                            CMR,R5   27,B3
          1 0001C9  0881 0011                            BAGE     s:7216,PREL

      623     7210    7                        %KV_MVD.VRTCLM = Y@TMPWRD1;

   7210   1 0001CB  DF43 001B                            STR,R5   27,B3

      624     7211    7                        Y@TMPWRD2 = Y@TMPWRD1-%KV_SRD.PRMVRTCLM;

   7211   1 0001CD  D244 0012                            SUB,R5   18,B4
          1 0001CF  DF47 000C                            STR,R5   Y@TMPWRD2,AUTO

      625     7212    7                        IF Y@TMPWRD2<%KV_STR.MAXRCRBYTSIZ

   7212   1 0001D1  BCC6 0004                            LDB,B3   4,B6
          1 0001D3  5801 0005                            BLZ,R5   s:7213,PREL
          1 0001D5  D943 0015                            CMR,R5   21,B3
          1 0001D7  0281 0003                            BGE      s:7216,PREL

      626     7213    7                        THEN %KV_STR.MAXRCRBYTSIZ = Y@TMPWRD2;

   7213   1 0001D9  DF43 0015                            STR,R5   21,B3

      627     7214    7                     END;                  /* IF                                 */

      628     7215    6                  END;                     /* IF                                 */

      629     7216    5                  CALL KVO$PST(KV_VDH_PST_0_VRT);

   7216   1 0001DB  BB80 0000 0002  02                   LAB,B3   +2
          1 0001DE  CBF0 0100                            LAB,B4   256,IMO
          1 0001E0  E380 0000 0000  xent                 LNJ,B6   KVO$PST
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:94   
          1 0001E3       0001                            DC       s:7217,PREL

      630     7217    6                  IF (%KV_SRD.CRTVRTLINPHSLIN >= Y@VRTLIN0) THEN DO;

   7217   1 0001E4  ECC7 0004                            LDB,B6   Y@SRD$,AUTO
          1 0001E6  E846 0013                            LDR,R6   19,B6
          1 0001E8  E947 0008                            CMR,R6   Y@VRTLIN0,AUTO
          1 0001EA  0801 005D                            BAL      s:7273,PREL

      631     7218
      632     7219        /* we didn't go off the end of the srd.                                       */
      633     7220
      634     7221    6                     Y@TMPWRD1 = %KV_STR.MAXRCRBYTSIZ-Y@TMPWRD2;

   7221   1 0001EC  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 0001EF  CCC5 0004                            LDB,B4   4,B5
          1 0001F1  D844 0015                            LDR,R5   21,B4
          1 0001F3  D247 000C                            SUB,R5   Y@TMPWRD2,AUTO
          1 0001F5  DF47 000B                            STR,R5   Y@TMPWRD1,AUTO

      635     7222    6                     Y@TMPWRD1 = Y@TMPWRD1+%KV_SRD.CRT.CLM;

   7222   1 0001F7  DA46 0016                            ADD,R5   22,B6
          1 0001F9  DF47 000B                            STR,R5   Y@TMPWRD1,AUTO

      636     7223    7                     IF (Y@TMPWRD1 > %KV_SRD.BTMRHT.CLM) OR (Y@TMPWRD1 < %KV_SRD.CRT.
              7223                              CLM) THEN DO;

   7223   1 0001FB  D946 000C                            CMR,R5   12,B6
          1 0001FD  0A01 0005                            BAG      s:7229,PREL
          1 0001FF  D946 0016                            CMR,R5   22,B6
          1 000201  0881 0005                            BAGE     s:7231,PREL

      637     7224
      638     7225        /* if we were to expand the input field up to the read                        */
      639     7226        /* request size, we would go beyond the right margin column.                  */
      640     7227        /* expand it only to the right margin column.                                 */
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:95   
      641     7228
      642     7229    7                        Y@TMPWRD1 = %KV_SRD.BTMRHT.CLM;

   7229   1 000203  D846 000C                            LDR,R5   12,B6
          1 000205  DF47 000B                            STR,R5   Y@TMPWRD1,AUTO

      643     7230    7                     END;                  /* IF                                 */

      644     7231    6                     %KV_SRD.CRT.CLM = Y@TMPWRD1;

   7231   1 000207  DF46 0016                            STR,R5   22,B6

      645     7232
      646     7233        /* declare the end-of-field attribute at the end of the                       */
      647     7234        /* input area.                                                                */
      648     7235
      649     7236    7                     IF %KV_VDI.INPUNT=%KV_INPUNT_BLK THEN DO;

   7236   1 000209  CC85                                 LDB,B4   ,B5
          1 00020A  C844 001D                            LDR,R4   29,B4
          1 00020C  4045                                 SOR,R4   5
          1 00020D  C570 0003                            AND,R4   3,IMO
          1 00020F  4D03                                 CMV,R4   3
          1 000210  0981 000F                            BNE      s:7249,PREL

      650     7237        /*
      651     7238           Set up the field for block-mode input.
      652     7239        */
      653     7240    7                        CALL KVI$SETINPFLDENDATR;

   7240   1 000212  CBF0 0000                            LAB,B4   0,IMO
          1 000214  E380 0000 0000  xent                 LNJ,B6   KVI$SETINPFLDENDATR
          1 000217       0001                            DC       s:7244,PREL

      654     7241
      655     7242        /* declare the attribute for the beginning of the input field.                */
      656     7243
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:96   
      657     7244    7                        CALL KVI$SETINPFLDBGNATR;

   7244   1 000218  CBF0 0000                            LAB,B4   0,IMO
          1 00021A  E380 0000 0000  xent                 LNJ,B6   KVI$SETINPFLDBGNATR
          1 00021D       0001                            DC       s:7245,PREL

      658     7245    7                     END; ELSE DO;

   7245   1 00021E  0F81 0012                            B        s:7254,PREL

      659     7246        /*
      660     7247           For character-mode X364, just set the erasing limit.
      661     7248        */
      662     7249    7                        %KV_SRD.FLDEND_PST = %KV_SRD.CRT_PST;

   7249   1 000220  8CC6 0015                            LDI      21,B6
          1 000222  8D46 0010                            SDI      16,B6

      663     7250    7                        %KV_SRD.HI_NONBLN = %KV_SRD.FLDEND;

   7250   1 000224  8CC6 0010                            LDI      16,B6
          1 000226  8D46 0017                            SDI      23,B6

      664     7251    7                        %KV_SRD.FLDEND.LIN = %KV_SRD.FLDEND.LIN+%KV_SRD.DVCLINBIS;

   7251   1 000228  C846 0010                            LDR,R4   16,B6
          1 00022A  CA46 0019                            ADD,R4   25,B6
          1 00022C  CF46 0010                            STR,R4   16,B6

      665     7252    7                        %KV_SRD.HI_NONBLNVRT = '0'B;

   7252   1 00022E  8846 000E                            LBF,'0002'X       14,B6
   7252   1 000230       0002

      666     7253    7                     END;

      667     7254    6                     %KV_MVD.VRTCLM = %KV_SRD.PRMVRTCLM+1;
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:97   

   7254   1 000231  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 000234  DCC6 0006                            LDB,B5   6,B6
          1 000236  CCC7 0004                            LDB,B4   Y@SRD$,AUTO
          1 000238  E844 0012                            LDR,R6   18,B4
          1 00023A  6E01                                 ADV,R6   1
          1 00023B  EF45 001B                            STR,R6   27,B5

      668     7255    6                     CALL KVO$PST(KV_VDH_PST_0_VRT);

   7255   1 00023D  BB80 0000 0002  02                   LAB,B3   +2
          1 000240  CBF0 0100                            LAB,B4   256,IMO
          1 000242  E380 0000 0000  xent                 LNJ,B6   KVO$PST
          1 000245       0001                            DC       s:7260,PREL

      669     7256
      670     7257        /* we either declared the input field without paginating,                     */
      671     7258        /* or we paginated and retried (re-iterated this loop).                       */
      672     7259
      673     7260    6                     EXIT Y$LOP;

   7260   1 000246  0F81 001F                            B        s:7279,PREL

      674     7261    6                  END;                     /* IF                                 */
      675     7262    5               END;
      676     7263
      677     7264        /* this is not a block mode device. we're done putting out the prompt.        */
      678     7265
      679     7266    4               ELSE EXIT Y$LOP;
      680     7267    4            END;                           /* IF                                 */
      681     7268
      682     7269        /* we didn't succeed in displaying the prompt and declaring                   */
      683     7270        /* the input field without paginating. clean things up and                    */
      684     7271        /* try again.                                                                 */
      685     7272
      686     7273    3            %KV_MVD.VRTCLM = 1;

PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:98   
   7273   1 000248  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 00024B  CCC5 0006                            LDB,B4   6,B5
          1 00024D  5C01                                 LDV,R5   1
          1 00024E  DF44 001B                            STR,R5   27,B4

      687     7274    3            %KV_SRD.CRTVRTLINPHSLIN = %KV_SRD.TOPLFT.LIN;

   7274   1 000250  E846 0009                            LDR,R6   9,B6
          1 000252  EF46 0013                            STR,R6   19,B6

      688     7275    3            %KV_SRD.HI_NONBLNVRT = '0'B;

   7275   1 000254  8846 000E                            LBF,'0002'X       14,B6
   7275   1 000256       0002

      689     7276    3            CALL KVO$PST(KV_VDH_PST_VRT);

   7276   1 000257  BB80 0000 0004  02                   LAB,B3   +4
          1 00025A  CBF0 0100                            LAB,B4   256,IMO
          1 00025C  E380 0000 0000  xent                 LNJ,B6   KVO$PST
          1 00025F       0001                            DC       s:7277,PREL

      690     7277    3            Y@VRTLIN0 = -%BITBIN('8000'X);

   7277   1 000260  E870 8000                            LDR,R6   -32768,IMO
          1 000262  EF47 0008                            STR,R6   Y@VRTLIN0,AUTO

      691     7278    3         END Y$LOP;

   7278   1 000264  0F81 FDC3                            B        s:7078,PREL

      692     7279    2         %KV_MVD.REDSSNID = %KV_SSN.SSNID;

   7279   1 000266  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 000269  DCC6 0006                            LDB,B5   6,B6
          1 00026B  CCC6 0002                            LDB,B4   2,B6
          1 00026D  E2C4 0037                            LLH,R6   55,B4
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:99   
          1 00026F  E7C5 001F                            STH,R6   31,B5

      693     7280    2         IF %KV_MVD.SSTINPFNCTBL$~=ADDR(NIL)

   7280   1 000271  DCC6 0006                            LDB,B5   6,B6
          1 000273  8DC5 000A                            CMN      10,B5
          1 000275  0901 000B                            BE       s:7282,PREL

      694     7281    2         THEN %KV_SSN.REDONL = %KV_MVD.SSTINPFNCTBL$->KV$INPFNCTBL.REDONLY;

   7281   1 000277  CCC6 0002                            LDB,B4   2,B6
          1 000279  BCC5 000A                            LDB,B3   10,B5
          1 00027B  E843 001B                            LDR,R6   27,B3
          1 00027D  6004                                 SOL,R6   4
          1 00027E  EAC4 0028                            SRM,R6,'0200'X    40,B4
          1 000280       0200

      695     7282    3         IF %KV_VDI.USRRQSDAT.RED AND %KV_MVD.ORG<%KV#VD_ORG_FORM THEN DO;

   7282   1 000281  DC86                                 LDB,B5   ,B6
          1 000282  82C5 001D                            LB,'0010'X        29,B5
          1 000284       0010
          1 000285  0581 000B                            BBF      s:7289,PREL
          1 000287  CCC6 0006                            LDB,B4   6,B6
          1 000289  E2C4 0015                            LLH,R6   21,B4
          1 00028B  6D04                                 CMV,R6   4
          1 00028C  0281 0004                            BGE      s:7289,PREL

      696     7283
      697     7284        /* all done if only redefining the input field.                               */
      698     7285
      699     7286    3            RETURN;

   7286   1 00028E  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      700     7287    3         END;                              /* IF                                 */
      701     7288    2      END;                                 /* IF                                 */
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:100  
      702     7289    1      Y@TMPWRD1 = %KV_SSN.REDBFR.DSPLOWX;

   7289   1 000291  DCC6 0002                            LDB,B5   2,B6
          1 000293  E845 002F                            LDR,R6   47,B5
          1 000295  EF47 000B                            STR,R6   Y@TMPWRD1,AUTO

      703     7290    1      %KV_SSN.REDBFR = '0'B;

   7290   1 000297  5C0C                                 LDV,R5   12
          1 000298  0021                                 ALR      ;
          1 000299       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          1 00029B       4005 002A                                ALPHANUM(42,B5,,R5,FILL)

      704     7291    1      %KV_VDI.RE_DSPLOWX = 0;

   7291   1 00029D  437F                                 CSYNC    s:7290+5,SPREL
          1 00029E  DC86                                 LDB,B5   ,B6
          1 00029F  8745 0016                            CL       22,B5

      705     7292    2      IF %KV_MVD.ORG=%KV#VD_ORG_SE THEN DO;

   7292   1 0002A1  DCC6 0006                            LDB,B5   6,B6
          1 0002A3  C2C5 0015                            LLH,R4   21,B5
          1 0002A5  4D05                                 CMV,R4   5
          1 0002A6  0981 0016                            BNE      s:7296,PREL

      706     7293    2         IF %KV_MVD.HRZSCR THEN %KV_SSN.REDBFR.DSPLOWX = Y@TMPWRD1;

   7293   1 0002A8  82C5 0016                            LB,'0004'X        22,B5
   7293   1 0002AA       0004
          1 0002AB  0581 0005                            BBF      s:7294,PREL

   7293   1 0002AD  CCC6 0002                            LDB,B4   2,B6
          1 0002AF  EF44 002F                            STR,R6   47,B4

      707     7294    2         IF %KV_VDI.RE_DSPINP THEN %KV_VDI.RE_DSPLOWX = %KV_STR.MAXRCRBYTSIZ;

PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:101  
   7294   1 0002B1  DC86                                 LDB,B5   ,B6
          1 0002B2  82C5 0019                            LB,'0010'X        25,B5
          1 0002B4       0010
          1 0002B5  0581 0007                            BBF      s:7296,PREL

   7294   1 0002B7  CCC6 0004                            LDB,B4   4,B6
          1 0002B9  C844 0015                            LDR,R4   21,B4
          1 0002BB  CF45 0016                            STR,R4   22,B5

      708     7295    2      END;

      709     7296    1      %KV_SSN.CLMIS_BYTX = '1'B;

   7296   1 0002BD  DCC6 0002                            LDB,B5   2,B6
          1 0002BF  8945 0037                            LBT,'0080'X       55,B5
          1 0002C1       0080

      710     7297    1      %KV_SSN.CHNCAS = '0'B;

   7297   1 0002C2  DCC6 0002                            LDB,B5   2,B6
          1 0002C4  8845 0027                            LBF,'0080'X       39,B5
          1 0002C6       0080

      711     7298
      712     7299        /*N* disable mqd (q'd message delivery).                                        */
      713     7300
      714     7301        /* Set the read timeout clock, if the read timeout period is non-zero.        */
      715     7302
      716     7303    1      IF %KV_STR.REDTIMOUTPRDUNT~=%KV_CLKUNT_10_MS

   7303   1 0002C7  DCC6 0004                            LDB,B5   4,B6
          1 0002C9  C2C5 001B                            LLH,R4   27,B5
          1 0002CB  4981 000F                            BNEZ,R4  s:7309,PREL
          1 0002CD  CCC6 0006                            LDB,B4   6,B6
          1 0002CF  B2C4 0015                            LLH,R3   21,B4
          1 0002D1  3D04                                 CMV,R3   4
          1 0002D2  0281 0008                            BGE      s:7309,PREL
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:102  
          1 0002D4  A845 001B                            LDR,R2   27,B5
          1 0002D6  A570 00FF                            AND,R2   255,IMO
          1 0002D8  2D01                                 CMV,R2   1
          1 0002D9  0901 0090                            BE       s:7347+2,PREL

      717     7304    1        OR %KV_MVD.ORG>=%KV#VD_ORG_FORM
      718     7305    2        OR %KV_STR.REDTIMOUTPRD~=1 THEN DO;

      719     7306
      720     7307        /* The minimum timeout just means only accept typeahead, so no clock matters. */
      721     7308
      722     7309    2         IF %KV_VDI.USRRQSDAT.RED THEN EXIT;

   7309   1 0002DB  CC86                                 LDB,B4   ,B6
          1 0002DC  82C4 001D                            LB,'0010'X        29,B4
          1 0002DE       0010
          1 0002DF  0501 0088                            BBT      s:7347,PREL

      723     7310
      724     7311        /* Only one clock per "read" */
      725     7312
      726     7313    2         %KV_VDI.USRRQSDAT.RED = '1'B;

   7313   1 0002E1  8944 001D                            LBT,'0010'X       29,B4
   7313   1 0002E3       0010

      727     7314    3         IF %KV_STR.REDTIMOUTPRD>0 THEN DO;

   7314   1 0002E4  DCC6 0004                            LDB,B5   4,B6
          1 0002E6  82C5 001B                            LB,'00FF'X        27,B5
          1 0002E8       00FF
          1 0002E9  0581 002B                            BBF      s:7329,PREL

      728     7315
      729     7316        /* There is a user-specified read timeout.  Use it. */
      730     7317
      731     7318        /* For user timeout, use a marker to start the clock when the read does. */
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:103  
      732     7319
      733     7320    3            %KV@USR_OTPMRK = KV_USR_OTPMRK_REDTIMOUT;

   7320   1 0002EB  AB80 0000 0000  00                   LAB,B2   KV_USR_OTPMRK_REDTIMOUT
          1 0002EE  2C00                                 LDV,R2   0
          1 0002EF  6C08                                 LDV,R6   8
          1 0002F0  BB87                                 LAB,B3   ,AUTO
          1 0002F1  3C1C                                 LDV,R3   28
          1 0002F2  0008                                 MMM

      734     7321    3            %KV@USR_OTPMRK.DAT.ID_BYT(1) = %KV_STR.REDTIMOUTPRD;

   7321   1 0002F3  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 0002F6  DCC6 0004                            LDB,B5   4,B6
          1 0002F8  E845 001B                            LDR,R6   27,B5
          1 0002FA  EAC7 0010                            SRM,R6,'00FF'X    KH@CLK+2,AUTO
          1 0002FC       00FF

      735     7322    3            %KV@USR_OTPMRK.DAT.ID_BYT(0) = %KV_STR.REDTIMOUTPRDUNT;

   7322   1 0002FD  DCC6 0004                            LDB,B5   4,B6
          1 0002FF  E2C5 001B                            LLH,R6   27,B5
          1 000301  E7C7 0010                            STH,R6   KH@CLK+2,AUTO

      736     7323    3            %KV@USR_OTPMRK.DAT.ID_WRD(1) = %KV_SSN.REDTIMOUT.MRKNMB;

   7323   1 000303  DCC6 0002                            LDB,B5   2,B6
          1 000305  E845 001B                            LDR,R6   27,B5
          1 000307  EF47 0011                            STR,R6   KH@CLK+3,AUTO

      737     7324    3            CALL KVV$CALUSR (%KV@USR_OTPMRK);

   7324   1 000309  DBC7 000E                            LAB,B5   KH@CLK,AUTO
          1 00030B  DFC7 001A                            STB,B5   KH@CLK+12,AUTO
          1 00030D  BBC7 001A                            LAB,B3   KH@CLK+12,AUTO
          1 00030F  CBF0 0100                            LAB,B4   256,IMO
          1 000311  E380 0000 0000  xent                 LNJ,B6   KVV$CALUSR
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:104  
          1 000314       0001                            DC       s:7329,PREL

      738     7325    3         END;

      739     7326
      740     7327        /* there is no user time-out.                                                 */
      741     7328
      742     7329    2         IF %KV_SSN.LGN THEN EXIT;

   7329   1 000315  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 000318  DCC6 0002                            LDB,B5   2,B6
          1 00031A  82C5 0027                            LB,'0001'X        39,B5
          1 00031C       0001
          1 00031D  0501 004A                            BBT      s:7347,PREL

      743     7330        /* During logon, NODEADMN does the timing out. */
      744     7331
      745     7332    2         IF %KV_MVD.ORG=%KV#VD_ORG_FORM

   7332   1 00031F  CCC6 0006                            LDB,B4   6,B6
          1 000321  E2C4 0015                            LLH,R6   21,B4
          1 000323  6D04                                 CMV,R6   4
          1 000324  0981 000B                            BNE      s:7334,PREL

      746     7333    2         THEN Y@TMPWRD1 = %KH_CHN.TPTIMOUTPRD;

   7333   1 000326  BC86                                 LDB,B3   ,B6
          1 000327  AC83                                 LDB,B2   ,B3
          1 000328  D842 000A                            LDR,R5   10,B2
          1 00032A  D570 00FF                            AND,R5   255,IMO
          1 00032C  DF47 000B                            STR,R5   Y@TMPWRD1,AUTO
          1 00032E  0F81 0009                            B        s:7335,PREL

      747     7334    2         ELSE Y@TMPWRD1 = %KH_CHN.REDTIMOUTPRD;

   7334   1 000330  BC86                                 LDB,B3   ,B6
          1 000331  AC83                                 LDB,B2   ,B3
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:105  
          1 000332  D842 0009                            LDR,R5   9,B2
          1 000334  D570 00FF                            AND,R5   255,IMO
          1 000336  DF47 000B                            STR,R5   Y@TMPWRD1,AUTO

      748     7335    3         IF Y@TMPWRD1~=0 THEN DO;

   7335   1 000338  5901 0035                            BEZ,R5   s:7348,PREL

      749     7336    3            %KH@CLK = KV_SETCLK;

   7336   1 00033A  AB80 0000 0000  xsym                 LAB,B2   KV_SETCLK
          1 00033D  2C00                                 LDV,R2   0
          1 00033E  6C16                                 LDV,R6   22
          1 00033F  BB87                                 LAB,B3   ,AUTO
          1 000340  3C1C                                 LDV,R3   28
          1 000341  0008                                 MMM

      750     7337    3            %KH@CLK.UID$ = ADDR(%KV_SSN);

   7337   1 000342  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 000345  DCC6 0002                            LDB,B5   2,B6
          1 000347  DFC7 0010                            STB,B5   KH@CLK+2,AUTO

      751     7338    3            IF %KV_SSN.CLKSET(%KV_CLKNMB_REDTIMOUT) THEN EXIT;

   7338   1 000349  CCC6 0002                            LDB,B4   2,B6
          1 00034B  82C4 0029                            LB,'0040'X        41,B4
          1 00034D       0040
          1 00034E  0501 0019                            BBT      s:7347,PREL

      752     7339    3            %KH@CLK.PRD = Y@TMPWRD1;

   7339   1 000350  E847 000B                            LDR,R6   Y@TMPWRD1,AUTO
          1 000352  EF47 0018                            STR,R6   KH@CLK+10,AUTO

      753     7340    4            CALL KHC$CLOCK (%KH@CLK) WHENRETURN DO;

PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:106  
   7340   1 000354  CBC7 000E                            LAB,B4   KH@CLK,AUTO
          1 000356  CFC7 001A                            STB,B4   KH@CLK+12,AUTO
          1 000358  BBC7 001A                            LAB,B3   KH@CLK+12,AUTO
          1 00035A  CBF0 0100                            LAB,B4   256,IMO
          1 00035C  E380 0000 0000  xent                 LNJ,B6   KHC$CLOCK
          1 00035F       0009                            DC       s:7347,PREL

      754     7341
      755     7342        /* There is a timeout period associated with the channel.  Set the clock. */
      756     7343
      757     7344    4               %KV_SSN.CLKSET(%KV_CLKNMB_REDTIMOUT) = '1'B;

   7344   1 000360  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 000363  DCC6 0002                            LDB,B5   2,B6
          1 000365  8945 0029                            LBT,'0040'X       41,B5
          1 000367       0040

      758     7345    4            END;

      759     7346    3         END;                              /* END if Y@TMPWRD1                   */

      760     7347    1      END; ELSE %KV_VDI.USRRQSDAT.RED = '1'B; /* END if not minimum timeout.     */

   7347   1 000368  0F81 0005                            B        s:7348,PREL

   7347   1 00036A  BC86                                 LDB,B3   ,B6
          1 00036B  8943 001D                            LBT,'0010'X       29,B3
          1 00036D       0010

      761     7348    2      IF NOT KV$PTR.INPCNDPND.TRN THEN DO;

   7348   1 00036E  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 000371  89C6 001B                            CMZ      27,B6
          1 000373  0801 003F                            BAL      s:7365,PREL

      762     7349
      763     7350        /* this is not a transparent read.                                            */
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:107  
      764     7351
      765     7352    3         IF %KV_STR.RE_RED THEN DO;

   7352   1 000375  DCC6 0004                            LDB,B5   4,B6
          1 000377  82C5 001C                            LB,'0040'X        28,B5
          1 000379       0040
          1 00037A  0581 0021                            BBF      s:7361,PREL

      766     7353
      767     7354        /* the last read request asked for re-read.                                   */
      768     7355
      769     7356    3            Y@INPECH = %KV_SSN.INPECH;

   7356   1 00037C  CCC6 0002                            LDB,B4   2,B6
          1 00037E  E844 0028                            LDR,R6   40,B4
          1 000380  600F                                 SOL,R6   15
          1 000381  EF47 000D                            STR,R6   Y@INPECH,AUTO

      770     7357    3            %KV_SSN.INPECH = '1'B;

   7357   1 000383  8944 0028                            LBT,'0001'X       40,B4
   7357   1 000385       0001

      771     7358    3            CALL KVI$INTINPOPRX(%KV_INPOPRX_RE_RED);

   7358   1 000386  BB80 0000 0007  02                   LAB,B3   +7
          1 000389  CBF0 0100                            LAB,B4   256,IMO
          1 00038B  E380 0000 0000  xent                 LNJ,B6   KVI$INTINPOPRX
          1 00038E       0001                            DC       s:7359,PREL

      772     7359    3            %KV_SSN.INPECH = Y@INPECH;

   7359   1 00038F  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 000392  DCC6 0002                            LDB,B5   2,B6
          1 000394  E847 000D                            LDR,R6   Y@INPECH,AUTO
          1 000396  604F                                 SOR,R6   15
          1 000397  EAC5 0028                            SRM,R6,'0001'X    40,B5
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:108  
          1 000399       0001

      773     7360    3         END;                              /* IF                                 */

   7360   1 00039A  0F81 0018                            B        s:7365,PREL

      774     7361    2         ELSE IF %KV_STR.AUTTABCLM>1 OR %KV_STR.WRDWRPSIZ~=0

   7361   1 00039C  E2C5 001E                            LLH,R6   30,B5
          1 00039E  6D01                                 CMV,R6   1
          1 00039F  0301 0006                            BG       s:7362,PREL
          1 0003A1  82C5 001D                            LB,'00FF'X        29,B5
          1 0003A3       00FF
          1 0003A4  0581 000E                            BBF      s:7365,PREL

      775     7362    2         THEN IF %KV_MVD.ORG<%KV#VD_ORG_FORM

   7362   1 0003A6  CCC6 0006                            LDB,B4   6,B6
          1 0003A8  D2C4 0015                            LLH,R5   21,B4
          1 0003AA  5D04                                 CMV,R5   4
          1 0003AB  0281 0007                            BGE      s:7365,PREL

      776     7363    2         THEN CALL KVI$AUTWRP;

   7363   1 0003AD  CBF0 0000                            LAB,B4   0,IMO
          1 0003AF  E380 0000 0000  xent                 LNJ,B6   KVI$AUTWRP
          1 0003B2       0001                            DC       s:7365,PREL

      777     7364    2      END;                                 /* IF                                 */

      778     7365    1      RETURN;

   7365   1 0003B3  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      779     7366        %EJECT;
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:109  
      780     7367    1   KVI$INCINPFLDSIZ: ENTRY;

   7367   1 0003B6  D380 0000 0000  xent KVI$INCINPFLDSIZLNJ,B5   X6A_AUTO_0
          1 0003B9       001C 0000                       DC       28,0

      781     7368    1      Y@SRD$ = KV$PTR.SRD$;

   7368   1 0003BB  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 0003BE  DCC6 000A                            LDB,B5   10,B6
          1 0003C0  DFC7 0004                            STB,B5   Y@SRD$,AUTO

      782     7369    1      Y@FLDSIZ = (%KV_SRD.FLDEND.LIN-%KV_SRD.CRTVRTLINPHSLIN)*%KV_SRD.WDT

   7369   1 0003C2  E845 0010                            LDR,R6   16,B5
          1 0003C4  E245 0013                            SUB,R6   19,B5
          1 0003C6  EB45 000D                            MUL,R6   13,B5
          1 0003C8  EA45 0011                            ADD,R6   17,B5
          1 0003CA  E245 000A                            SUB,R6   10,B5
          1 0003CC  E245 0012                            SUB,R6   18,B5
          1 0003CE  6E02                                 ADV,R6   2
          1 0003CF  EF47 000A                            STR,R6   Y@FLDSIZ,AUTO

      783     7370    1        +%KV_SRD.FLDEND.CLM-%KV_SRD.TOPLFT.CLM
      784     7371    1        +2-%KV_SRD.PRMVRTCLM;
      785     7372    1      CALL KVI$RSTINPFLDBGNATR;

   7372   1 0003D1  CBF0 0000                            LAB,B4   0,IMO
          1 0003D3  E380 0000 0000  xent                 LNJ,B6   KVI$RSTINPFLDBGNATR
          1 0003D6       0001                            DC       s:7373,PREL

      786     7373    1      %KV_SRD.FLDEND_PST = %KV_SRD.HI_NONBLN_PST;

   7373   1 0003D7  ECC7 0004                            LDB,B6   Y@SRD$,AUTO
          1 0003D9  8CC6 0017                            LDI      23,B6
          1 0003DB  8D46 0010                            SDI      16,B6

      787     7374    2      IF %KV_MRD.ATRRQRDSPPST THEN DO;
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:110  

   7374   1 0003DD  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 0003E0  CCC5 0008                            LDB,B4   8,B5
          1 0003E2  89C4 0018                            CMZ      24,B4
          1 0003E4  0881 0003                            BAGE     s:7377,PREL

      788     7375    2         %KV_SRD.PRMVRTCLM = %KV_SRD.PRMVRTCLM-1;

   7375   1 0003E6  88C6 0012                            DEC      18,B6

      789     7376    2      END;                                 /* IF                                 */

      790     7377    1      %KV_MVD.VRTCLM = %KV_SRD.PRMVRTCLM+1;

   7377   1 0003E8  CCC5 0006                            LDB,B4   6,B5
          1 0003EA  D846 0012                            LDR,R5   18,B6
          1 0003EC  5E01                                 ADV,R5   1
          1 0003ED  DF44 001B                            STR,R5   27,B4

      791     7378    1      CALL KVO$PST(KV_VDH_PST_0_VRT);

   7378   1 0003EF  BB80 0000 0002  02                   LAB,B3   +2
          1 0003F2  CBF0 0100                            LAB,B4   256,IMO
          1 0003F4  E380 0000 0000  xent                 LNJ,B6   KVO$PST
          1 0003F7       0001                            DC       s:7379,PREL

      792     7379    1      CALL KVO$ERSTO_ENDOF_INP;

   7379   1 0003F8  CBF0 0000                            LAB,B4   0,IMO
          1 0003FA  E380 0000 0000  xent                 LNJ,B6   KVO$ERSTO_ENDOF_INP
          1 0003FD       0001                            DC       s:7380,PREL

      793     7380    1      Y@VRTLIN0 = %KV_SRD.CRTVRTLINPHSLIN;

   7380   1 0003FE  ECC7 0004                            LDB,B6   Y@SRD$,AUTO
          1 000400  E846 0013                            LDR,R6   19,B6
          1 000402  EF47 0008                            STR,R6   Y@VRTLIN0,AUTO
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:111  

      794     7381    1      GOTO Y$INCINPFLDSIZ;

   7381   1 000404  0F81 FD3B                            B        s:7151,PREL
      795     7382    1   END KVI$ENBRED;
      796     7383        %EOD;

PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:112  
--  Include file information  --

   KV$INPFNC.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KH_CLKFNC_E.:E05TOU  is referenced.
   KH$CLK.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   KV_INT_M.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is referenced.
   KV$USR.:E05TOU  was found in the system file and is referenced.
   KV$SND.:E05TOU  was found in the system file and is never referenced.
   KV$INT.:E05TOU  was found in the system file and is referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KVI$ENBRED.
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:113  

 **** Variables and constants ****

  ****  Section 000 RoData KVI$ENBRED

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(64)    r     1 KV_USR_OTPMRK_REDTIMOUT
     4-0-0/w STRC(80)    r     1 KV_VDH_OTPLCL_PRM

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     E-0-0/w STRC(176)   r     1 KH@CLK                     A-0-0/w UBIN(16)    r     1 Y@FLDSIZ
     D-0-0/b BIT         r     1 Y@INPECH                   4-0-0/w PTR         r     1 Y@SRD$
     6-0-0/w PTR         r     1 Y@TMPSTR$                  B-0-0/w SBIN(16)    r     1 Y@TMPWRD1
     C-0-0/w SBIN(16)    r     1 Y@TMPWRD2                  8-0-0/w SBIN(16)    r     1 Y@VRTLIN0

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 KV$PTR$                    0-0-0/w STRC(176)   r     1 KV_SETCLK
     0-0-0/w UBIN(16)    r     1 KV_VDH_PST_0_VRT
     0-0-0/w UBIN(16)    r     1 KV_VDH_PST_NEWLIN_VRT
     0-0-0/w UBIN(16)    r     1 KV_VDH_PST_VRT

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(512)   r     1 KH$CHN                     0-0-0/w STRC(736)   r     1 KV$INPFNCTBL
     0-0-0/w STRC(512)   r     1 KV$MRD                     0-0-0/w STRC(512)   r     1 KV$MVD
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:114  
     0-0-0/w STRC(480)   r     1 KV$PTR                     0-0-0/w STRC(80)    r     1 KV$SHRBFR_PRM
     0-0-0/w STRC(496)   r     1 KV$SRD                     0-0-0/w STRC(1024)  r     1 KV$SSN
     0-0-0/w STRC(512)   r     1 KV$STR                     0-0-0/w STRC(512)   r     1 KV$VDI
     0-0-0/w STRC(64)    r     1 KV@USR_OTPMRK              0-0-0/w STRC(80)    r     1 KV@VDH_OTPLCL


   Procedure KVI$ENBRED requires 1030 words for executable code.
   Procedure KVI$ENBRED requires 28 words of local(AUTO) storage.
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:115  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:116  
          MINI XREF LISTING

KH$CHN.REDTIMOUTPRD
      4620**DCL      7334>>ASSIGN
KH$CHN.TERMID.TERM
      4649**DCL      4658--REDEF
KH$CHN.TPTIMOUTPRD
      4620**DCL      7333>>ASSIGN
KH@CLK
      6793**DCL      7102--ASSIGN   7103--ASSIGN   7105--IF       7109--ASSIGN   7110--ASSIGN   7111--CALL
      7320--ASSIGN   7321--ASSIGN   7322--ASSIGN   7323--ASSIGN   7324--CALL     7336<<ASSIGN   7340<>CALL
KH@CLK.PRD
      6914**DCL      7339<<ASSIGN
KH@CLK.UID
      6809**DCL      6810--REDEF    6811--REDEF
KH@CLK.UID$
      6810**DCL      7337<<ASSIGN
KHC$CLOCK
       188**DCL-ENT  7340--CALL
KV$INPFNCTBL.REDONLY
      6385**DCL      7281>>ASSIGN
KV$MRD.ATRRQRDSPPST
      5095**DCL      7191>>IF       7374>>IF
KV$MRD.CTNFRM
      5096**DCL      7074>>IF
KV$MRD.OUTPUT
      5089**DCL      7087>>IF
KV$MVD.HRZSCR
      5139**DCL      7122>>IF       7132>>IF       7293>>IF
KV$MVD.HRZSCRMRG
      5140**DCL      7138<<ASSIGN
KV$MVD.HRZSCRMRGINT
      5140**DCL      7133>>ASSIGN
KV$MVD.ORG
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:117  
      5135**DCL      7122>>IF       7140>>IF       7140>>IF       7145>>IF       7205>>IF       7282>>IF
      7292>>IF       7303>>IF       7332>>IF       7362>>IF
KV$MVD.REDSSNID
      5149**DCL      7279<<ASSIGN
KV$MVD.SSTINPFNCTBL$
      5132**DCL      7280>>IF       7281>>ASSIGN
KV$MVD.VRTCLM
      5147**DCL      7130<<ASSIGN   7187<<ASSIGN   7187>>ASSIGN   7190<<ASSIGN   7190>>ASSIGN   7197<<ASSIGN
      7197>>ASSIGN   7209>>IF       7210<<ASSIGN   7254<<ASSIGN   7273<<ASSIGN   7377<<ASSIGN
KV$MVD.WDT
      5134**DCL      7135>>ASSIGN   7136>>IF       7137>>ASSIGN
KV$PTR.INPCNDPND
      5179**DCL      5188--REDEF    5192--REDEF
KV$PTR.INPCNDPND.TRN
      5183**DCL      7073>>IF       7348>>IF
KV$PTR.LINLST$
      5175**DCL      5176--REDEF
KV$PTR.MRD$
      5174**DCL      7074>>IF       7087>>IF       7191>>IF       7374>>IF
KV$PTR.MVD$
      5174**DCL      7122>>IF       7122>>IF       7130>>ASSIGN   7132>>IF       7133>>ASSIGN   7135>>ASSIGN
      7136>>IF       7137>>ASSIGN   7138>>ASSIGN   7140>>IF       7140>>IF       7145>>IF       7187>>ASSIGN
      7187>>ASSIGN   7190>>ASSIGN   7190>>ASSIGN   7197>>ASSIGN   7197>>ASSIGN   7205>>IF       7209>>IF
      7210>>ASSIGN   7254>>ASSIGN   7273>>ASSIGN   7279>>ASSIGN   7280>>IF       7281>>ASSIGN   7282>>IF
      7292>>IF       7293>>IF       7303>>IF       7332>>IF       7362>>IF       7377>>ASSIGN
KV$PTR.SRD$
      5175**DCL      7071>>ASSIGN   7368>>ASSIGN
KV$PTR.SSN$
      5173**DCL      7101>>ASSIGN   7155>>ASSIGN   7279>>ASSIGN   7281>>ASSIGN   7289>>ASSIGN   7290>>ASSIGN
      7293>>ASSIGN   7296>>ASSIGN   7297>>ASSIGN   7323>>ASSIGN   7329>>IF       7337>>ASSIGN   7338>>IF
      7344>>ASSIGN   7356>>ASSIGN   7357>>ASSIGN   7359>>ASSIGN
KV$PTR.STR$
      5173**DCL      7091>>IF       7096>>CALL     7103>>ASSIGN   7109>>ASSIGN   7113>>CALL     7149>>ASSIGN
      7154>>ASSIGN   7169>>IF       7175>>ASSIGN   7212>>IF       7213>>ASSIGN   7221>>ASSIGN   7294>>ASSIGN
      7303>>IF       7303>>IF       7314>>IF       7321>>ASSIGN   7322>>ASSIGN   7352>>IF       7361>>IF
      7361>>IF
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:118  
KV$PTR.VDI$
      5173**DCL      7087>>IF       7095>>IF       7101>>ASSIGN   7140>>IF       7188>>IF       7236>>IF
      7282>>IF       7291>>ASSIGN   7294>>IF       7294>>ASSIGN   7309>>IF       7313>>ASSIGN   7333>>ASSIGN
      7334>>ASSIGN   7347>>ASSIGN
KV$PTR$
      5167**DCL      5173--IMP-PTR  7071>>ASSIGN   7073>>IF       7074>>IF       7087>>IF       7087>>IF
      7091>>IF       7095>>IF       7096>>CALL     7101>>ASSIGN   7101>>ASSIGN   7103>>ASSIGN   7109>>ASSIGN
      7113>>CALL     7122>>IF       7122>>IF       7130>>ASSIGN   7132>>IF       7133>>ASSIGN   7135>>ASSIGN
      7136>>IF       7137>>ASSIGN   7138>>ASSIGN   7140>>IF       7140>>IF       7140>>IF       7145>>IF
      7149>>ASSIGN   7154>>ASSIGN   7155>>ASSIGN   7169>>IF       7175>>ASSIGN   7187>>ASSIGN   7187>>ASSIGN
      7188>>IF       7190>>ASSIGN   7190>>ASSIGN   7191>>IF       7197>>ASSIGN   7197>>ASSIGN   7205>>IF
      7209>>IF       7210>>ASSIGN   7212>>IF       7213>>ASSIGN   7221>>ASSIGN   7236>>IF       7254>>ASSIGN
      7273>>ASSIGN   7279>>ASSIGN   7279>>ASSIGN   7280>>IF       7281>>ASSIGN   7281>>ASSIGN   7282>>IF
      7282>>IF       7289>>ASSIGN   7290>>ASSIGN   7291>>ASSIGN   7292>>IF       7293>>IF       7293>>ASSIGN
      7294>>IF       7294>>ASSIGN   7294>>ASSIGN   7296>>ASSIGN   7297>>ASSIGN   7303>>IF       7303>>IF
      7303>>IF       7309>>IF       7313>>ASSIGN   7314>>IF       7321>>ASSIGN   7322>>ASSIGN   7323>>ASSIGN
      7329>>IF       7332>>IF       7333>>ASSIGN   7334>>ASSIGN   7337>>ASSIGN   7338>>IF       7344>>ASSIGN
      7347>>ASSIGN   7348>>IF       7352>>IF       7356>>ASSIGN   7357>>ASSIGN   7359>>ASSIGN   7361>>IF
      7361>>IF       7362>>IF       7368>>ASSIGN   7374>>IF       7377>>ASSIGN
KV$SHRBFR_PRM
      6435**DCL      7103--ASSIGN   7110--ASSIGN
KV$SHRBFR_PRM.BYTSIZ
      6444**DCL      7103>>ASSIGN
KV$SHRBFR_PRM.VFC
      6450**DCL      7096<>CALL     7113<>CALL
KV$SRD.BTMRHT
      5312**DCL      5317--REDEF
KV$SRD.BTMRHT.CLM
      5314**DCL      7126>>IF       7223>>IF       7229>>ASSIGN
KV$SRD.BTMRHT.LIN
      5314**DCL      7203>>ASSIGN
KV$SRD.CRT
      5388**DCL      5393--REDEF
KV$SRD.CRT.CLM
      5390**DCL      7123>>ASSIGN   7126>>IF       7129>>ASSIGN   7222>>ASSIGN   7223>>IF       7231<<ASSIGN
KV$SRD.CRT.LIN
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:119  
      5390**DCL      7120>>IF       7121>>ASSIGN   7123>>ASSIGN   7128>>ASSIGN
KV$SRD.CRTVRTLINPHSLIN
      5360**DCL      7075>>ASSIGN   7098>>ASSIGN   7116>>IF       7120>>IF       7121<<ASSIGN   7123>>ASSIGN
      7128<<ASSIGN   7203>>ASSIGN   7217>>IF       7274<<ASSIGN   7369>>ASSIGN   7380>>ASSIGN
KV$SRD.CRT_PST
      5393**DCL      7249>>ASSIGN
KV$SRD.DVCLINBIS
      5430**DCL      7203>>ASSIGN   7251>>ASSIGN
KV$SRD.FLDEND
      5352**DCL      5357--REDEF    7250>>ASSIGN
KV$SRD.FLDEND.CLM
      5354**DCL      7369>>ASSIGN
KV$SRD.FLDEND.LIN
      5354**DCL      7251<<ASSIGN   7251>>ASSIGN   7369>>ASSIGN
KV$SRD.FLDEND_PST
      5357**DCL      7249<<ASSIGN   7373<<ASSIGN
KV$SRD.HI_NONBLN
      5422**DCL      5427--REDEF    7250<<ASSIGN
KV$SRD.HI_NONBLNVRT
      5322**DCL      7252<<ASSIGN   7275<<ASSIGN
KV$SRD.HI_NONBLN_PST
      5427**DCL      7373>>ASSIGN
KV$SRD.ORG
      5244**DCL      5249--REDEF
KV$SRD.PAGEHALT
      5321**DCL      7205>>IF
KV$SRD.PRINTHALT
      5320**DCL      7205>>IF
KV$SRD.PRMVRTCLM
      5360**DCL      7123<<ASSIGN   7129<<ASSIGN   7130>>ASSIGN   7135>>ASSIGN   7136>>IF       7137>>ASSIGN
      7211>>ASSIGN   7254>>ASSIGN   7369>>ASSIGN   7375<<ASSIGN   7375>>ASSIGN   7377>>ASSIGN
KV$SRD.SCROLL
      5321**DCL      7074>>IF
KV$SRD.SRDEND
      5457**DCL      5462--REDEF
KV$SRD.TOPLFT
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:120  
      5278**DCL      5283--REDEF
KV$SRD.TOPLFT.CLM
      5280**DCL      7123>>ASSIGN   7129>>ASSIGN   7369>>ASSIGN
KV$SRD.TOPLFT.LIN
      5280**DCL      7274>>ASSIGN
KV$SRD.WDT
      5320**DCL      7123>>ASSIGN   7208>>ASSIGN   7369>>ASSIGN
KV$SSN
      5494**DCL      7337--ASSIGN
KV$SSN.CHNCAS
      5506**DCL      7297<<ASSIGN
KV$SSN.CLKSET
      5513**DCL      7338>>IF       7344<<ASSIGN
KV$SSN.CLMIS_BYTX
      5544**DCL      7296<<ASSIGN
KV$SSN.INPECH
      5512**DCL      7356>>ASSIGN   7357<<ASSIGN   7359<<ASSIGN
KV$SSN.LGN
      5508**DCL      7329>>IF
KV$SSN.REDBFR
      5513**DCL      7290<<ASSIGN
KV$SSN.REDBFR.DSPLOWX
      5515**DCL      7289>>ASSIGN   7293<<ASSIGN
KV$SSN.REDBFR__.BYTX
      5540**DCL      7101>>ASSIGN
KV$SSN.REDONL
      5510**DCL      7281<<ASSIGN
KV$SSN.REDRSPCNT
      5500**DCL      5501--REDEF
KV$SSN.REDTIMOUT.MRKNMB
      5501**DCL      7323>>ASSIGN
KV$SSN.SSNID
      5544**DCL      7279>>ASSIGN
KV$SSN.STR$
      5494**DCL      7155>>ASSIGN
KV$STR.AUTTABCLM
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:121  
      5633**DCL      7361>>IF
KV$STR.DFLINPFLDSIZ
      5628**DCL      7154>>ASSIGN
KV$STR.EDTBFR__.DATBYTSIZ
      5597**DCL      7160>>IF       7165>>ASSIGN
KV$STR.LNK$
      5571**DCL      7167>>ASSIGN
KV$STR.MAXRCRBYTSIZ
      5628**DCL      7149>>ASSIGN   7169>>IF       7175>>ASSIGN   7212>>IF       7213<<ASSIGN   7221>>ASSIGN
      7294>>ASSIGN
KV$STR.PRM$
      5572**DCL      7091>>IF       7096>>CALL     7103>>ASSIGN   7109>>ASSIGN   7113>>CALL
KV$STR.REDTIMOUTPRD
      5630**DCL      7303>>IF       7314>>IF       7321>>ASSIGN
KV$STR.REDTIMOUTPRDUNT
      5630**DCL      7303>>IF       7322>>ASSIGN
KV$STR.RE_RED
      5631**DCL      7352>>IF
KV$STR.WRDWRPSIZ
      5633**DCL      7361>>IF
KV$STT.REQSTATS.DSPMSK
      4938**DCL      4944--REDEF
KV$STT.REQSTATS.SLCMSK
      4979**DCL      4986--REDEF
KV$VDI.CHN$
      5709**DCL      7333>>ASSIGN   7334>>ASSIGN
KV$VDI.HALFDUPLEXPAPERTAPE
      5745**DCL      7087>>IF
KV$VDI.INPUNT
      5750**DCL      7140>>IF       7188>>IF       7236>>IF
KV$VDI.RE_DSPINP
      5744**DCL      7294>>IF
KV$VDI.RE_DSPLOWX
      5740**DCL      7101<<ASSIGN   7291<<ASSIGN   7294<<ASSIGN
KV$VDI.USRRQSDAT
      5750**DCL      7095>>IF
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:122  
KV$VDI.USRRQSDAT.RED
      5750**DCL      7282>>IF       7309>>IF       7313<<ASSIGN   7347<<ASSIGN
KV@USR_OTPMRK
      7034**DCL      7320<<ASSIGN   7324<>CALL
KV@USR_OTPMRK.DAT.ID
      7065**DCL      7065--REDEF    7066--REDEF
KV@USR_OTPMRK.DAT.ID_BYT
      7066**DCL      7321<<ASSIGN   7322<<ASSIGN
KV@USR_OTPMRK.DAT.ID_WRD
      7065**DCL      7323<<ASSIGN
KV@VDH_OTPLCL
      6968**DCL      7102<<ASSIGN   7111<>CALL
KV@VDH_OTPLCL.BFR_.ADR$
      7001**DCL      7109<<ASSIGN
KV@VDH_OTPLCL.BFR_.BYTSIZ
      7001**DCL      7103<<ASSIGN   7105>>IF
KV@VDH_OTPLCL.BFR_.BYTX
      7001**DCL      7110<<ASSIGN
KVI$AUTWRP
       189**DCL-ENT  7363--CALL
KVI$INTINPOPRX
       190**DCL-ENT  7358--CALL
KVI$RSTINPFLDBGNATR
       191**DCL-ENT  7372--CALL
KVI$SETINPFLDBGNATR
       192**DCL-ENT  7244--CALL
KVI$SETINPFLDENDATR
       193**DCL-ENT  7240--CALL
KVO$ERSTO_ENDOF_INP
       194**DCL-ENT  7379--CALL
KVO$OTPLCL
       195**DCL-ENT  7111--CALL
KVO$PST
       196**DCL-ENT  7127--CALL     7216--CALL     7255--CALL     7276--CALL     7378--CALL
KVO$VFCAFTPRM
       197**DCL-ENT  7113--CALL
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:123  
KVO$VFCBFRPRM
       198**DCL-ENT  7096--CALL
KVV$CALUSR
       199**DCL-ENT  7324--CALL
KV_SETCLK
      6473**DCL      7336>>ASSIGN
KV_SETCLK.UID
      6489**DCL      6490--REDEF    6491--REDEF
KV_USR_OTPMRK_REDTIMOUT
      6636**DCL      7320>>ASSIGN
KV_USR_OTPMRK_REDTIMOUT.DAT.ID
      6667**DCL      6667--REDEF    6668--REDEF
KV_VDH_OTPLCL_PRM
      6707**DCL      7102>>ASSIGN
KV_VDH_PST_0_VRT
       182**DCL      7216<>CALL     7255<>CALL     7378<>CALL
KV_VDH_PST_NEWLIN_VRT
       183**DCL      7127<>CALL
KV_VDH_PST_VRT
       184**DCL      7276<>CALL
Y$INCINPFLDSIZ
      7145**LABEL    7381--GOTO
Y$LOP
      7079**LABEL    7260--EXIT     7266--EXIT
Y@FLDSIZ
      6766**DCL      7072<<ASSIGN   7149<<ASSIGN   7177>>IF       7181>>ASSIGN   7369<<ASSIGN
Y@INPECH
      6778**DCL      7356<<ASSIGN   7359>>ASSIGN
Y@SRD$
      6750**DCL      5216--IMP-PTR  7071<<ASSIGN   7074>>IF       7075>>ASSIGN   7098>>ASSIGN   7116>>IF
      7120>>IF       7120>>IF       7121>>ASSIGN   7121>>ASSIGN   7123>>ASSIGN   7123>>ASSIGN   7123>>ASSIGN
      7123>>ASSIGN   7123>>ASSIGN   7123>>ASSIGN   7126>>IF       7126>>IF       7128>>ASSIGN   7128>>ASSIGN
      7129>>ASSIGN   7129>>ASSIGN   7129>>ASSIGN   7130>>ASSIGN   7135>>ASSIGN   7136>>IF       7137>>ASSIGN
      7203>>ASSIGN   7203>>ASSIGN   7203>>ASSIGN   7205>>IF       7205>>IF       7208>>ASSIGN   7211>>ASSIGN
      7217>>IF       7222>>ASSIGN   7223>>IF       7223>>IF       7229>>ASSIGN   7231>>ASSIGN   7249>>ASSIGN
      7249>>ASSIGN   7250>>ASSIGN   7250>>ASSIGN   7251>>ASSIGN   7251>>ASSIGN   7251>>ASSIGN   7252>>ASSIGN
PL6.E3A0      #003=KVI$ENBRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:03 Page:124  
      7254>>ASSIGN   7274>>ASSIGN   7274>>ASSIGN   7275>>ASSIGN   7368<<ASSIGN   7369>>ASSIGN   7369>>ASSIGN
      7369>>ASSIGN   7369>>ASSIGN   7369>>ASSIGN   7369>>ASSIGN   7373>>ASSIGN   7373>>ASSIGN   7375>>ASSIGN
      7375>>ASSIGN   7377>>ASSIGN   7380>>ASSIGN
Y@TMPSTR$
      6754**DCL      7155<<ASSIGN   7156>>DOUNTIL  7160>>IF       7165>>ASSIGN   7167<<ASSIGN   7167>>ASSIGN
Y@TMPWRD1
      6770**DCL      7133<<ASSIGN   7134>>IF       7135<<ASSIGN   7136>>IF       7136>>IF       7137<<ASSIGN
      7138>>ASSIGN   7203<<ASSIGN   7207<<ASSIGN   7207>>ASSIGN   7208<<ASSIGN   7208>>ASSIGN   7209>>IF
      7210>>ASSIGN   7211>>ASSIGN   7221<<ASSIGN   7222<<ASSIGN   7222>>ASSIGN   7223>>IF       7223>>IF
      7229<<ASSIGN   7231>>ASSIGN   7289<<ASSIGN   7293>>ASSIGN   7333<<ASSIGN   7334<<ASSIGN   7335>>IF
      7339>>ASSIGN
Y@TMPWRD2
      6774**DCL      7154<<ASSIGN   7160>>IF       7165<<ASSIGN   7169>>IF       7175<<ASSIGN   7177>>IF
      7181<<ASSIGN   7187>>ASSIGN   7211<<ASSIGN   7212>>IF       7213>>ASSIGN   7221>>ASSIGN
Y@VRTLIN0
      6758**DCL      7075<<ASSIGN   7077<<ASSIGN   7097>>IF       7098<<ASSIGN   7116>>IF       7150<<ASSIGN
      7199>>IF       7217>>IF       7277<<ASSIGN   7380<<ASSIGN

PL6.E3A0      #004=KVI$ACTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:04 Page:125  
      797        1        /*T***********************************************************/
      798        2        /*T*                                                         */
      799        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      800        4        /*T*                                                         */
      801        5        /*T***********************************************************/
      802        6        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IND=0,IAD=3 */
      803        7        KVI$ACTRED: PROC(PRM_VDH_DAT);
      804        8        /*
      805        9        This entry point expects a KV$VDH_DAT to be passed, with all
      806       10        fields defaulted, except .CMPCOD, .DATCTRCHR and .DATCTRCHRTYP
      807       11        should often be set to non-default values.
      808       12        */
      809       13        %INCLUDE KV_INT_M;
      810      156
      811      157        %KV$BOX(PAGE = YES, TITLE = "Send data");

PL6.E3A0      #004=KVI$ACTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:04 Page:126  
               175        /***************************************************************************
               176         *                                                                         *
               177         *                                 Send data                               *
               178         *                                                                         *
               179         ***************************************************************************/

      812      184        /*
      813      185        Declare SYMREFs.
      814      186        */
      815      187    1   DCL KV_VDH_PST_ENDFRM UBIN WORD SYMREF READONLY;
      816      188        /*
      817      189        Declare external procedures CALLed.
      818      190        */
      819      191    1   DCL KVE$ACTRED ENTRY(1) ALTRET;
      820      192    1   DCL KVF$PST ENTRY(1);
      821      193    1   DCL KVI$TRMRED_VDH_DAT ENTRY(1);
      822      194    1   DCL KVM$SND ENTRY(1) ALTRET;
      823      195    1   DCL KVS$RLSBFR ENTRY(1) ALTRET;
      824      196        /*
      825      197        INCLUDE files, constants, based structures,
      826      198        and static data contained elsewhere.
      827      199        */
      828      200
      829      201        %INCLUDE F_ERRORS_C;
      830      441
      831      442        %INCLUDE LCP_6;
      832      633
      833      634        %INCLUDE KV_INT;
      834      673
      835      674 S      %INCLUDE KV_GLBCNS_E;
      836      675        %KV_BFRRLSDSP_E;
      837      681        %KV#VD_ORG_E;
      838      689        %KV_CMPCOD_E;
      839      703        %KV_INPUNT_E;
      840      708        %KV_STRTYP_E;
      841      746        %KV_USR_EVT_ID_E;
      842      766        %KV_VDH_EVT_ID_E;
PL6.E3A0      #004=KVI$ACTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:04 Page:127  
      843      772
      844      773        %INCLUDE KL_MACRO_C;
      845     4125        %INCLUDE KL_AFCN_C;
      846     4226        %INCLUDE K_ID_E;
      847     4276        %K#LYRID_E;
      848     4283        %K#ENTID_E;
      849     4302
      850     4303 S      %INCLUDE KV$GLB;
      851     4304        %KV$STT;
      852     4698
      853     4699 S      %INCLUDE KV$GLBCTX;
      854     4700        %KV$MRD;
      855     4747        %KV$MVD;
      856     4791        %KV$PTR;
      857     4834        %KV$SRD;
      858     5109        %KV$SSN;
      859     5188        %KV$STR;
      860     5275        %KV$USRPRM;
      861     5326        %KV$VDI;
      862     5397
      863     5398 S      %INCLUDE KV$INT;
      864     5399
      865     5400 S      %INCLUDE KV$SND;
      866     5401        %KV_SND_FNC_E;
      867     5417
      868     5418 S      %INCLUDE KV$USR;
      869     5419
      870     5420 S      %INCLUDE KV$VDH;
      871     5421        %KV$VDH_DAT (NAME=PRM_VDH_DAT, VDOVLPARY=NIL, STCLASS= );
      872     5501        %KV$SND (NAME=PRM_VLP, HDR=NO);
      873     5534
      874     5535 S      %INCLUDE KV$VDO;
      875     5536        %KV_DATCTRCHRTYP_E;
      876     5542        %KV_VDOVLP_E;
      877     5556
      878     5557        /*
      879     5558        Static data contained within this procedure.
PL6.E3A0      #004=KVI$ACTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:04 Page:128  
      880     5559        */
      881     5560        %KV$VDH_RLSBFR (NAME = KV_VDH_RLSBFR, STCLASS = SYMREF READONLY);
      882     5596        %KV$VDOVLP_ERR (NAME=Y_VDOVLP_ERR, STCLASS=CONSTANT,
      883     5597         FCG=KV, MID=I, MON='1'B, ERR#=0, SEV=4);
      884     5694        /* This is a table parallel to the CMPCOD values. Keep it lined up. */
      885     5695    1   DCL KV_CMPCOD_TO_ERR#(0:13) CONSTANT SYMDEF UBIN INIT(
      886     5696    1    0, %E$EOF, %E$DI, %E$DI,               /* NRM, EOF, RATERR, PRTERR,          */
      887     5697    1    %E$TIMO, %E$LDSC, %E$LD, %E$LD,        /* TIMOUT, DSC, BFROVRRUN, BFRLMTEXC, */
      888     5698    1    %E$LDSC, %E$LDSC, %E$READ, %E$DACTR,   /* 8, 9, NOTINPUT, CLS,               */
      889     5699    1    %E$OPER, %E$IOERR);                    /* DLT, DVCERR.                       */
      890     5700        /*E* ERROR: KVI-E$DI
      891     5701             MESSAGE:Terminal input error% using %DC%.
      892     5702        */
      893     5703        %KV$SND_DAT (NAME = KV_SND_DAT, STCLASS = SYMREF);
      894     5822        /*
      895     5823        AUTO variables.
      896     5824        */
      897     5825        %KV$SND_DAT (NAME = KV@SND_DAT, STCLASS = AUTO);
      898     5944        %KV$VDH_RLSBFR (NAME = KV@VDH_RLSBFR, STCLASS = AUTO);
      899     5980        %KV$VDOVLP_ERR (NAME=Y@VDOVLP_ERR, STCLASS=AUTO);
      900     6077
      901     6078    1      IF NOT %KV_SSN.REDRQSPND THEN
      902     6079        /*
      903     6080        There's no read pending, so there's nothing to do.
      904     6081        */
      905     6082    1      RETURN;
      906     6083    2      IF %KV_MVD.ORG=%KV#VD_ORG_FORM THEN DO;
      907     6084        /*
      908     6085        This is a read to a forms virtual device being activated.
      909     6086        Go to the forms virtual device logic instead of just sending
      910     6087        a data message.
      911     6088        */
      912     6089    2         %KV_SSN.INPCHR = PRM_VDH_DAT.DATCTRCHR;
      913     6090    2         %KV_STR.ERR.COD = KV_CMPCOD_TO_ERR# (PRM_VDH_DAT.CMPCOD);
      914     6091    2         CALL KVF$PST(KV_VDH_PST_ENDFRM);
      915     6092    2         RETURN;
      916     6093    2      END; ELSE IF %KV_MVD.ORG=%KV#VD_ORG_SE THEN DO;
PL6.E3A0      #004=KVI$ACTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:04 Page:129  
      917     6094        /*
      918     6095           Similarly for editor devices.
      919     6096        */
      920     6097    2         CALL KVE$ACTRED (PRM_VDH_DAT);
      921     6098    2         RETURN;
      922     6099    2      END; ELSE DO;
      923     6100        /*
      924     6101        This isn't a read to a forms virtual device.
      925     6102        Set up for sending a data message.
      926     6103        */
      927     6104    2         PRM_VDH_DAT.DAT__ = %KV_SSN.REDBFR__;
      928     6105    2      END; /* END ELSE ORG = FORM */
      929     6106    1   KVI$SNDDAT: ENTRY(PRM_VDH_DAT);
      930     6107    2      IF PRM_VDH_DAT.DAT__.ADR$ ~= ADDR(NIL) THEN DO;
      931     6108        /*
      932     6109        There is a data buffer to send.
      933     6110        */
      934     6111    2         IF NOT KV$PTR.INPCNDPND.TRN
      935     6112    2           AND %KV_VDI.INPUNT~=%KV_INPUNT_RCR
      936     6113    2           AND %KV_MRD.INPUT
      937     6114    2           AND PRM_VDH_DAT.DAT__.DATBYTSIZ>=%KV_SSN.MINEDTBFRSIZ
      938     6115    3           AND %KV_MVD.DISPINPUT THEN DO;
      939     6116        /*
      940     6117        The current read buffer contains more than the minimum
      941     6118        number of characters required to save the buffer and
      942     6119        isn't transparent and we're operating in the echplex mode.
      943     6120        This isn't a read to a forms virtual device, and
      944     6121        we do input presentation.
      945     6122
      946     6123        Save the current read buffer as the input edit buffer.
      947     6124        The check for echoplex is for security reasons; it prevents
      948     6125        the later display of the input data via ESC-D.
      949     6126        First release any existing edit buffer.
      950     6127        */
      951     6128    4            IF %KV_STR.EDTBFR__.BFRRLSDSP=%KV_BFRRLSDSP_MSG THEN DO;
      952     6129        /*
      953     6130        The current (old) edit buffer should be released.
PL6.E3A0      #004=KVI$ACTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:04 Page:130  
      954     6131        */
      955     6132    4               KV@VDH_RLSBFR = KV_VDH_RLSBFR;
      956     6133    4               KV@VDH_RLSBFR.BFR$ = %KV_STR.EDTBFR__.ADR$;
      957     6134    4               KV@VDH_RLSBFR.BYTSIZ = %KV_STR.EDTBFR__.BFRBYTSIZ;
      958     6135    4               KV@VDH_RLSBFR.STRTYP = %KV_STR.EDTBFR__.STRTYP;
      959     6136    4               CALL KVS$RLSBFR(KV@VDH_RLSBFR);
      960     6137    4            END;       /* END IF %KV_STR.EDTBFR__.BFRRLSDSP=%KV_BFRRLSDSP_MSG    */
      961     6138    3            %KV_STR.EDTBFR__ = PRM_VDH_DAT.DAT__;
      962     6139        /*
      963     6140        Set the buffer release disposition to none on the call to
      964     6141        KVM$SND, so it won't release the buffer we want to save as
      965     6142        the input edit buffer.
      966     6143        */
      967     6144    3            PRM_VDH_DAT.DAT__.BFRRLSDSP = %KV_BFRRLSDSP_NON;
      968     6145    3            %KV_STR.RE_REDCLM = 0;
      969     6146    3            %KV_SSN.LSTEDTBFRSTRID = %KV_STR.ID;
      970     6147    3         END;                              /* END IF DISPINPUT ....              */
      971     6148    2      END;                                 /* END IF DAT__.ADR$ ~= NIL           */
      972     6149    1      KV@SND_DAT = KV_SND_DAT;
      973     6150    1      IF %KV_SSN.REDBFR.EDTHI_X<%KV_SSN.REDBFR.NXTX AND NOT %KV_SSN.LGN
      974     6151    1      THEN KV@SND_DAT.ACTPOS = %KV_SSN.REDBFR.EDTHI_X-%KV_SSN.REDBFR__.BYTX+1;
      975     6152    1      CALL KVI$TRMRED_VDH_DAT(PRM_VDH_DAT);
      976     6153    1      KV@SND_DAT.DAT__ = PRM_VDH_DAT.DAT__;
      977     6154    1      KV@SND_DAT.DATMOD = PRM_VDH_DAT.DATMOD;
      978     6155    1      KV@SND_DAT.DATCTRCHRTYP = PRM_VDH_DAT.DATCTRCHRTYP;
      979     6156    1      KV@SND_DAT.DATCTRCHR = PRM_VDH_DAT.DATCTRCHR;
      980     6157    1      KV@SND_DAT.CTN = PRM_VDH_DAT.CTN;
      981     6158        /*N* DO WE REALLY WANT CONTINUE HERE? */
      982     6159    1      IF PRM_VDH_DAT.VDOVLP
      983     6160    1      THEN KV@SND_DAT.VDOVLP = PRM_VDH_DAT.VDOVLPARY$->PRM_VLP;
      984     6161    2      IF PRM_VDH_DAT.CMPCOD~=0 THEN DO;
      985     6162    2         KV@SND_DAT.VDOVLP.ERR$ = ADDR(Y@VDOVLP_ERR);
      986     6163    2         Y@VDOVLP_ERR = Y_VDOVLP_ERR;
      987     6164    2         Y@VDOVLP_ERR.ERRCODE.ERR# = KV_CMPCOD_TO_ERR# (PRM_VDH_DAT.CMPCOD);
      988     6165    2      END;
      989     6166        /*N* INPCNDPND.TRN USED TO BE MOVED TO MSG HERE */
      990     6167    1      %KV_STR.DFLINPFLDSIZ = PRM_VDH_DAT.DAT__.DATBYTSIZ;
PL6.E3A0      #004=KVI$ACTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:04 Page:131  
      991     6168    1      CALL KVM$SND(KV@SND_DAT);
      992     6169    1   END KVI$ACTRED;
      993     6170        %EOD;

PL6.E3A0      #004=KVI$ACTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:04 Page:132  
--  Include file information  --

   K_ID_E.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KV_INT.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   KV_INT_M.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is referenced.
   KV$VDH.:E05TOU  was found in the system file and is referenced.
   KV$USR.:E05TOU  was found in the system file and is referenced.
   KV$SND.:E05TOU  was found in the system file and is referenced.
   KV$INT.:E05TOU  was found in the system file and is referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KVI$ACTRED.

   Procedure KVI$ACTRED requires 336 words for executable code.
   Procedure KVI$ACTRED requires 42 words of local(AUTO) storage.

PL6.E3A0      #004=KVI$ACTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:04 Page:133  

 Object Unit name= KVI$ACTRED                                 File name= KVI$RED.:E05TOU
 UTS= JUL 30 '97 02:04:42.72 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS     17     11  KVI$ACTRED
    1   Proc  even  none   336    150  KVI$ACTRED
    2  RoData even  none     2      2  KVI$ACTRED

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        1  KVI$ACTRED
     1     4D                  yes      Std        1  KVI$SNDDAT

  ****  Data defs  ****

 Sect HexLoc  Name                           Sect HexLoc  Name
    0      3  KV_CMPCOD_TO_ERR#

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 KVF$PST
 yes     yes           Std       1 KVE$ACTRED
 yes     yes           Std       1 KVS$RLSBFR
 yes     yes           Std       1 KVM$SND
         yes           Std       1 KVI$TRMRED_VDH_DAT
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET
PL6.E3A0      #004=KVI$ACTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:04 Page:134  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    KV_VDH_PST_ENDFRM                     KV$PTR$                          r    KV_VDH_RLSBFR
     KV_SND_DAT                       r    G$ROS$
PL6.E3A0      #004=KVI$ACTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:04 Page:135  


      797        1        /*T***********************************************************/
      798        2        /*T*                                                         */
      799        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      800        4        /*T*                                                         */
      801        5        /*T***********************************************************/
      802        6        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IND=0,IAD=3 */
      803        7        KVI$ACTRED: PROC(PRM_VDH_DAT);

      7   1 000000  D380 0000 0000  xent KVI$ACTRED      LNJ,B5   X6A_AUTO_1
          1 000003       002A 0001                       DC       42,1

      804        8        /*
      805        9        This entry point expects a KV$VDH_DAT to be passed, with all
      806       10        fields defaulted, except .CMPCOD, .DATCTRCHR and .DATCTRCHRTYP
      807       11        should often be set to non-default values.
      808       12        */
      809       13        %INCLUDE KV_INT_M;
      810      156
      811      157        %KV$BOX(PAGE = YES, TITLE = "Send data");

PL6.E3A0      #004=KVI$ACTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:04 Page:136  
               175        /***************************************************************************
               176         *                                                                         *
               177         *                                 Send data                               *
               178         *                                                                         *
               179         ***************************************************************************/

      812      184        /*
      813      185        Declare SYMREFs.
      814      186        */
      815      187    1   DCL KV_VDH_PST_ENDFRM UBIN WORD SYMREF READONLY;
      816      188        /*
      817      189        Declare external procedures CALLed.
      818      190        */
      819      191    1   DCL KVE$ACTRED ENTRY(1) ALTRET;
      820      192    1   DCL KVF$PST ENTRY(1);
      821      193    1   DCL KVI$TRMRED_VDH_DAT ENTRY(1);
      822      194    1   DCL KVM$SND ENTRY(1) ALTRET;
      823      195    1   DCL KVS$RLSBFR ENTRY(1) ALTRET;
      824      196        /*
      825      197        INCLUDE files, constants, based structures,
      826      198        and static data contained elsewhere.
      827      199        */
      828      200
      829      201        %INCLUDE F_ERRORS_C;
      830      441
      831      442        %INCLUDE LCP_6;
      832      633
      833      634        %INCLUDE KV_INT;
      834      673
      835      674 S      %INCLUDE KV_GLBCNS_E;
      836      675        %KV_BFRRLSDSP_E;
      837      681        %KV#VD_ORG_E;
      838      689        %KV_CMPCOD_E;
      839      703        %KV_INPUNT_E;
      840      708        %KV_STRTYP_E;
      841      746        %KV_USR_EVT_ID_E;
      842      766        %KV_VDH_EVT_ID_E;
PL6.E3A0      #004=KVI$ACTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:04 Page:137  
      843      772
      844      773        %INCLUDE KL_MACRO_C;
      845     4125        %INCLUDE KL_AFCN_C;
      846     4226        %INCLUDE K_ID_E;
      847     4276        %K#LYRID_E;
      848     4283        %K#ENTID_E;
      849     4302
      850     4303 S      %INCLUDE KV$GLB;
      851     4304        %KV$STT;
      852     4698
      853     4699 S      %INCLUDE KV$GLBCTX;
      854     4700        %KV$MRD;
      855     4747        %KV$MVD;
      856     4791        %KV$PTR;
      857     4834        %KV$SRD;
      858     5109        %KV$SSN;
      859     5188        %KV$STR;
      860     5275        %KV$USRPRM;
      861     5326        %KV$VDI;
      862     5397
      863     5398 S      %INCLUDE KV$INT;
      864     5399
      865     5400 S      %INCLUDE KV$SND;
      866     5401        %KV_SND_FNC_E;
      867     5417
      868     5418 S      %INCLUDE KV$USR;
      869     5419
      870     5420 S      %INCLUDE KV$VDH;
      871     5421        %KV$VDH_DAT (NAME=PRM_VDH_DAT, VDOVLPARY=NIL, STCLASS= );
      872     5501        %KV$SND (NAME=PRM_VLP, HDR=NO);
      873     5534
      874     5535 S      %INCLUDE KV$VDO;
      875     5536        %KV_DATCTRCHRTYP_E;
      876     5542        %KV_VDOVLP_E;
      877     5556
      878     5557        /*
      879     5558        Static data contained within this procedure.
PL6.E3A0      #004=KVI$ACTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:04 Page:138  
      880     5559        */
      881     5560        %KV$VDH_RLSBFR (NAME = KV_VDH_RLSBFR, STCLASS = SYMREF READONLY);
      882     5596        %KV$VDOVLP_ERR (NAME=Y_VDOVLP_ERR, STCLASS=CONSTANT,
      883     5597         FCG=KV, MID=I, MON='1'B, ERR#=0, SEV=4);
      884     5694        /* This is a table parallel to the CMPCOD values. Keep it lined up. */
      885     5695    1   DCL KV_CMPCOD_TO_ERR#(0:13) CONSTANT SYMDEF UBIN INIT(
      886     5696    1    0, %E$EOF, %E$DI, %E$DI,               /* NRM, EOF, RATERR, PRTERR,          */
      887     5697    1    %E$TIMO, %E$LDSC, %E$LD, %E$LD,        /* TIMOUT, DSC, BFROVRRUN, BFRLMTEXC, */
      888     5698    1    %E$LDSC, %E$LDSC, %E$READ, %E$DACTR,   /* 8, 9, NOTINPUT, CLS,               */
      889     5699    1    %E$OPER, %E$IOERR);                    /* DLT, DVCERR.                       */
      890     5700        /*E* ERROR: KVI-E$DI
      891     5701             MESSAGE:Terminal input error% using %DC%.
      892     5702        */
      893     5703        %KV$SND_DAT (NAME = KV_SND_DAT, STCLASS = SYMREF);
      894     5822        /*
      895     5823        AUTO variables.
      896     5824        */
      897     5825        %KV$SND_DAT (NAME = KV@SND_DAT, STCLASS = AUTO);
      898     5944        %KV$VDH_RLSBFR (NAME = KV@VDH_RLSBFR, STCLASS = AUTO);
      899     5980        %KV$VDOVLP_ERR (NAME=Y@VDOVLP_ERR, STCLASS=AUTO);
      900     6077
      901     6078    1      IF NOT %KV_SSN.REDRQSPND THEN

   6078   1 000005  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 000008  DCC6 0002                            LDB,B5   2,B6
          1 00000A  82C5 0028                            LB,'0002'X        40,B5
          1 00000C       0002
          1 00000D  0501 0004                            BBT      s:6083,PREL

      902     6079        /*
      903     6080        There's no read pending, so there's nothing to do.
      904     6081        */
      905     6082    1      RETURN;

   6082   1 00000F  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      906     6083    2      IF %KV_MVD.ORG=%KV#VD_ORG_FORM THEN DO;
PL6.E3A0      #004=KVI$ACTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:04 Page:139  

   6083   1 000012  CCC6 0006                            LDB,B4   6,B6
          1 000014  E2C4 0015                            LLH,R6   21,B4
          1 000016  6D04                                 CMV,R6   4
          1 000017  0981 001E                            BNE      s:6093,PREL

      907     6084        /*
      908     6085        This is a read to a forms virtual device being activated.
      909     6086        Go to the forms virtual device logic instead of just sending
      910     6087        a data message.
      911     6088        */
      912     6089    2         %KV_SSN.INPCHR = PRM_VDH_DAT.DATCTRCHR;

   6089   1 000019  BCC7 0004                            LDB,B3   @PRM_VDH_DAT,AUTO
          1 00001B  D843 0007                            LDR,R5   7,B3
          1 00001D  5008                                 SOL,R5   8
          1 00001E  5068                                 SAR,R5   8
          1 00001F  D7C5 0029                            STH,R5   41,B5

      913     6090    2         %KV_STR.ERR.COD = KV_CMPCOD_TO_ERR# (PRM_VDH_DAT.CMPCOD);

   6090   1 000021  DCC6 0004                            LDB,B5   4,B6
          1 000023  B2C3 0007                            LLH,R3   7,B3
          1 000025  E830 0000 0003  00                   LDR,R6   KV_CMPCOD_TO_ERR#,R3
          1 000028  EF45 0013                            STR,R6   19,B5

      914     6091    2         CALL KVF$PST(KV_VDH_PST_ENDFRM);

   6091   1 00002A  BB80 0000 0000  02                   LAB,B3   0
          1 00002D  CBF0 0100                            LAB,B4   256,IMO
          1 00002F  E380 0000 0000  xent                 LNJ,B6   KVF$PST
          1 000032       0001                            DC       s:6092,PREL

      915     6092    2         RETURN;

   6092   1 000033  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

PL6.E3A0      #004=KVI$ACTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:04 Page:140  
      916     6093    2      END; ELSE IF %KV_MVD.ORG=%KV#VD_ORG_SE THEN DO;

   6093   1 000036  6D05                                 CMV,R6   5
          1 000037  0981 000C                            BNE      s:6104,PREL

      917     6094        /*
      918     6095           Similarly for editor devices.
      919     6096        */
      920     6097    2         CALL KVE$ACTRED (PRM_VDH_DAT);

   6097   1 000039  BBC7 0004                            LAB,B3   @PRM_VDH_DAT,AUTO
          1 00003B  CBF0 0100                            LAB,B4   256,IMO
          1 00003D  E380 0000 0000  xent                 LNJ,B6   KVE$ACTRED
          1 000040       0001                            DC       s:6098,PREL

      921     6098    2         RETURN;

   6098   1 000041  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      922     6099    2      END; ELSE DO;

      923     6100        /*
      924     6101        This isn't a read to a forms virtual device.
      925     6102        Set up for sending a data message.
      926     6103        */
      927     6104    2         PRM_VDH_DAT.DAT__ = %KV_SSN.REDBFR__;

   6104   1 000044  AB85                                 LAB,B2   ,B5
          1 000045  2C60                                 LDV,R2   96
          1 000046  6C0C                                 LDV,R6   12
          1 000047  BCC7 0004                            LDB,B3   @PRM_VDH_DAT,AUTO
          1 000049  3C02                                 LDV,R3   2
          1 00004A  0008                                 MMM

      928     6105    2      END; /* END ELSE ORG = FORM */

   6105   1 00004B  0F81 0006                            B        s:6107,PREL
PL6.E3A0      #004=KVI$ACTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:04 Page:141  

      929     6106    1   KVI$SNDDAT: ENTRY(PRM_VDH_DAT);

   6106   1 00004D  D380 0000 0000  xent KVI$SNDDAT      LNJ,B5   X6A_AUTO_1
          1 000050       002A 0001                       DC       42,1

      930     6107    2      IF PRM_VDH_DAT.DAT__.ADR$ ~= ADDR(NIL) THEN DO;

   6107   1 000052  ECC7 0004                            LDB,B6   @PRM_VDH_DAT,AUTO
          1 000054  8DC6 0001                            CMN      1,B6
          1 000056  0901 0079                            BE       s:6149,PREL

      931     6108        /*
      932     6109        There is a data buffer to send.
      933     6110        */
      934     6111    2         IF NOT KV$PTR.INPCNDPND.TRN

   6111   1 000058  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 00005B  89C5 001B                            CMZ      27,B5
          1 00005D  0801 0072                            BAL      s:6149,PREL
          1 00005F  CC85                                 LDB,B4   ,B5
          1 000060  E844 001D                            LDR,R6   29,B4
          1 000062  6045                                 SOR,R6   5
          1 000063  E570 0003                            AND,R6   3,IMO
          1 000065  6D02                                 CMV,R6   2
          1 000066  0901 0069                            BE       s:6149,PREL
          1 000068  BCC5 0008                            LDB,B3   8,B5
          1 00006A  82C3 0016                            LB,'0010'X        22,B3
          1 00006C       0010
          1 00006D  0581 0062                            BBF      s:6149,PREL
          1 00006F  ACC5 0002                            LDB,B2   2,B5
          1 000071  D842 0025                            LDR,R5   37,B2
          1 000073  D570 00FF                            AND,R5   255,IMO
          1 000075  D946 0004                            CMR,R5   4,B6
          1 000077  0301 0058                            BG       s:6149,PREL
          1 000079  9CC5 0006                            LDB,B1   6,B5
          1 00007B  82C1 0015                            LB,'0080'X        21,B1
PL6.E3A0      #004=KVI$ACTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:04 Page:142  
          1 00007D       0080
          1 00007E  0581 0051                            BBF      s:6149,PREL

      935     6112    2           AND %KV_VDI.INPUNT~=%KV_INPUNT_RCR
      936     6113    2           AND %KV_MRD.INPUT
      937     6114    2           AND PRM_VDH_DAT.DAT__.DATBYTSIZ>=%KV_SSN.MINEDTBFRSIZ
      938     6115    3           AND %KV_MVD.DISPINPUT THEN DO;

      939     6116        /*
      940     6117        The current read buffer contains more than the minimum
      941     6118        number of characters required to save the buffer and
      942     6119        isn't transparent and we're operating in the echplex mode.
      943     6120        This isn't a read to a forms virtual device, and
      944     6121        we do input presentation.
      945     6122
      946     6123        Save the current read buffer as the input edit buffer.
      947     6124        The check for echoplex is for security reasons; it prevents
      948     6125        the later display of the input data via ESC-D.
      949     6126        First release any existing edit buffer.
      950     6127        */
      951     6128    4            IF %KV_STR.EDTBFR__.BFRRLSDSP=%KV_BFRRLSDSP_MSG THEN DO;

   6128   1 000080  ECC5 0004                            LDB,B6   4,B5
          1 000082  C846 0011                            LDR,R4   17,B6
          1 000084  C570 00FF                            AND,R4   255,IMO
          1 000086  4D01                                 CMV,R4   1
          1 000087  0981 002A                            BNE      s:6138,PREL

      952     6129        /*
      953     6130        The current (old) edit buffer should be released.
      954     6131        */
      955     6132    4               KV@VDH_RLSBFR = KV_VDH_RLSBFR;

   6132   1 000089  AB80 0000 0000  xsym                 LAB,B2   KV_VDH_RLSBFR
          1 00008C  2C00                                 LDV,R2   0
          1 00008D  6C0E                                 LDV,R6   14
          1 00008E  BB87                                 LAB,B3   ,AUTO
PL6.E3A0      #004=KVI$ACTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:04 Page:143  
          1 00008F  3C3A                                 LDV,R3   58
          1 000090  0008                                 MMM

      956     6133    4               KV@VDH_RLSBFR.BFR$ = %KV_STR.EDTBFR__.ADR$;

   6133   1 000091  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 000094  DCC6 0004                            LDB,B5   4,B6
          1 000096  CCC5 000C                            LDB,B4   12,B5
          1 000098  CFC7 001E                            STB,B4   KV@VDH_RLSBFR+1,AUTO

      957     6134    4               KV@VDH_RLSBFR.BYTSIZ = %KV_STR.EDTBFR__.BFRBYTSIZ;

   6134   1 00009A  DCC6 0004                            LDB,B5   4,B6
          1 00009C  E845 0010                            LDR,R6   16,B5
          1 00009E  EF47 0020                            STR,R6   KV@VDH_RLSBFR+3,AUTO

      958     6135    4               KV@VDH_RLSBFR.STRTYP = %KV_STR.EDTBFR__.STRTYP;

   6135   1 0000A0  DCC6 0004                            LDB,B5   4,B6
          1 0000A2  D2C5 0011                            LLH,R5   17,B5
          1 0000A4  D7C7 0023                            STH,R5   KV@VDH_RLSBFR+6,AUTO

      959     6136    4               CALL KVS$RLSBFR(KV@VDH_RLSBFR);

   6136   1 0000A6  DBC7 001D                            LAB,B5   KV@VDH_RLSBFR,AUTO
          1 0000A8  DFC7 0028                            STB,B5   Y@VDOVLP_ERR+4,AUTO
          1 0000AA  BBC7 0028                            LAB,B3   Y@VDOVLP_ERR+4,AUTO
          1 0000AC  CBF0 0100                            LAB,B4   256,IMO
          1 0000AE  E380 0000 0000  xent                 LNJ,B6   KVS$RLSBFR
          1 0000B1       0001                            DC       s:6138,PREL

      960     6137    4            END;       /* END IF %KV_STR.EDTBFR__.BFRRLSDSP=%KV_BFRRLSDSP_MSG    */

      961     6138    3            %KV_STR.EDTBFR__ = PRM_VDH_DAT.DAT__;

   6138   1 0000B2  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 0000B5  DCC6 0004                            LDB,B5   4,B6
PL6.E3A0      #004=KVI$ACTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:04 Page:144  
          1 0000B7  ACC7 0004                            LDB,B2   @PRM_VDH_DAT,AUTO
          1 0000B9  2C02                                 LDV,R2   2
          1 0000BA  6C0C                                 LDV,R6   12
          1 0000BB  BB85                                 LAB,B3   ,B5
          1 0000BC  3C18                                 LDV,R3   24
          1 0000BD  0008                                 MMM

      962     6139        /*
      963     6140        Set the buffer release disposition to none on the call to
      964     6141        KVM$SND, so it won't release the buffer we want to save as
      965     6142        the input edit buffer.
      966     6143        */
      967     6144    3            PRM_VDH_DAT.DAT__.BFRRLSDSP = %KV_BFRRLSDSP_NON;

   6144   1 0000BE  8842 0006                            LBF,'00FF'X       6,B2
   6144   1 0000C0       00FF

      968     6145    3            %KV_STR.RE_REDCLM = 0;

   6145   1 0000C1  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 0000C4  CCC6 0004                            LDB,B4   4,B6
          1 0000C6  8744 0012                            CL       18,B4

      969     6146    3            %KV_SSN.LSTEDTBFRSTRID = %KV_STR.ID;

   6146   1 0000C8  CCC6 0002                            LDB,B4   2,B6
          1 0000CA  9CC6 0004                            LDB,B1   4,B6
          1 0000CC  E2C1 001C                            LLH,R6   28,B1
          1 0000CE  E7C4 0026                            STH,R6   38,B4

      970     6147    3         END;                              /* END IF DISPINPUT ....              */

      971     6148    2      END;                                 /* END IF DAT__.ADR$ ~= NIL           */

      972     6149    1      KV@SND_DAT = KV_SND_DAT;

   6149   1 0000D0  AB80 0000 0000  xsym                 LAB,B2   KV_SND_DAT
PL6.E3A0      #004=KVI$ACTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:04 Page:145  
          1 0000D3  2C00                                 LDV,R2   0
          1 0000D4  6C2E                                 LDV,R6   46
          1 0000D5  BB87                                 LAB,B3   ,AUTO
          1 0000D6  3C0C                                 LDV,R3   12
          1 0000D7  0008                                 MMM

      973     6150    1      IF %KV_SSN.REDBFR.EDTHI_X<%KV_SSN.REDBFR.NXTX AND NOT %KV_SSN.LGN

   6150   1 0000D8  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 0000DB  DCC6 0002                            LDB,B5   2,B6
          1 0000DD  E845 002C                            LDR,R6   44,B5
          1 0000DF  E945 002A                            CMR,R6   42,B5
          1 0000E1  0881 000B                            BAGE     s:6152,PREL
          1 0000E3  82C5 0027                            LB,'0001'X        39,B5
          1 0000E5       0001
          1 0000E6  0501 0006                            BBT      s:6152,PREL

      974     6151    1      THEN KV@SND_DAT.ACTPOS = %KV_SSN.REDBFR.EDTHI_X-%KV_SSN.REDBFR__.BYTX+1;

   6151   1 0000E8  E245 0032                            SUB,R6   50,B5
          1 0000EA  6E01                                 ADV,R6   1
          1 0000EB  EF47 001C                            STR,R6   KV@SND_DAT+22,AUTO

      975     6152    1      CALL KVI$TRMRED_VDH_DAT(PRM_VDH_DAT);

   6152   1 0000ED  BBC7 0004                            LAB,B3   @PRM_VDH_DAT,AUTO
          1 0000EF  CBF0 0100                            LAB,B4   256,IMO
          1 0000F1  E380 0000 0000  xent                 LNJ,B6   KVI$TRMRED_VDH_DAT
          1 0000F4       0001                            DC       s:6153,PREL

      976     6153    1      KV@SND_DAT.DAT__ = PRM_VDH_DAT.DAT__;

   6153   1 0000F5  ACC7 0004                            LDB,B2   @PRM_VDH_DAT,AUTO
          1 0000F7  2C02                                 LDV,R2   2
          1 0000F8  6C0C                                 LDV,R6   12
          1 0000F9  BB87                                 LAB,B3   ,AUTO
          1 0000FA  3C2A                                 LDV,R3   42
PL6.E3A0      #004=KVI$ACTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:04 Page:146  
          1 0000FB  0008                                 MMM

      977     6154    1      KV@SND_DAT.DATMOD = PRM_VDH_DAT.DATMOD;

   6154   1 0000FC  E802                                 LDR,R6   ,B2
          1 0000FD  6042                                 SOR,R6   2
          1 0000FE  EAC7 0006                            SRM,R6,'0003'X    KV@SND_DAT,AUTO
          1 000100       0003

      978     6155    1      KV@SND_DAT.DATCTRCHRTYP = PRM_VDH_DAT.DATCTRCHRTYP;

   6155   1 000101  E802                                 LDR,R6   ,B2
          1 000102  6042                                 SOR,R6   2
          1 000103  EAC7 0006                            SRM,R6,'000C'X    KV@SND_DAT,AUTO
          1 000105       000C

      979     6156    1      KV@SND_DAT.DATCTRCHR = PRM_VDH_DAT.DATCTRCHR;

   6156   1 000106  E842 0007                            LDR,R6   7,B2
          1 000108  6008                                 SOL,R6   8
          1 000109  6068                                 SAR,R6   8
          1 00010A  E7C7 001B                            STH,R6   KV@SND_DAT+21,AUTO

      980     6157    1      KV@SND_DAT.CTN = PRM_VDH_DAT.CTN;

   6157   1 00010C  D802                                 LDR,R5   ,B2
          1 00010D  5042                                 SOR,R5   2
          1 00010E  DAC7 0006                            SRM,R5,'0010'X    KV@SND_DAT,AUTO
          1 000110       0010

      981     6158        /*N* DO WE REALLY WANT CONTINUE HERE? */
      982     6159    1      IF PRM_VDH_DAT.VDOVLP

   6159   1 000111  8282                                 LB,'0001'X        ,B2
   6159   1 000112       0001
          1 000113  0581 0009                            BBF      s:6161,PREL

PL6.E3A0      #004=KVI$ACTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:04 Page:147  
      983     6160    1      THEN KV@SND_DAT.VDOVLP = PRM_VDH_DAT.VDOVLPARY$->PRM_VLP;

   6160   1 000115  ECC2 0008                            LDB,B6   8,B2
          1 000117  AB86                                 LAB,B2   ,B6
          1 000118  2C00                                 LDV,R2   0
          1 000119  6C1C                                 LDV,R6   28
          1 00011A  BB87                                 LAB,B3   ,AUTO
          1 00011B  3C0E                                 LDV,R3   14
          1 00011C  0008                                 MMM

      984     6161    2      IF PRM_VDH_DAT.CMPCOD~=0 THEN DO;

   6161   1 00011D  ECC7 0004                            LDB,B6   @PRM_VDH_DAT,AUTO
          1 00011F  E2C6 0007                            LLH,R6   7,B6
          1 000121  6901 0016                            BEZ,R6   s:6167,PREL

      985     6162    2         KV@SND_DAT.VDOVLP.ERR$ = ADDR(Y@VDOVLP_ERR);

   6162   1 000123  DBC7 0024                            LAB,B5   Y@VDOVLP_ERR,AUTO
          1 000125  DFC7 000D                            STB,B5   KV@SND_DAT+7,AUTO

      986     6163    2         Y@VDOVLP_ERR = Y_VDOVLP_ERR;

   6163   1 000127  AB80 0000 0000  00                   LAB,B2   Y_VDOVLP_ERR
          1 00012A  2C00                                 LDV,R2   0
          1 00012B  6C06                                 LDV,R6   6
          1 00012C  BB87                                 LAB,B3   ,AUTO
          1 00012D  3C48                                 LDV,R3   72
          1 00012E  0008                                 MMM

      987     6164    2         Y@VDOVLP_ERR.ERRCODE.ERR# = KV_CMPCOD_TO_ERR# (PRM_VDH_DAT.CMPCOD);

   6164   1 00012F  B2C6 0007                            LLH,R3   7,B6
          1 000131  E830 0000 0003  00                   LDR,R6   KV_CMPCOD_TO_ERR#,R3
          1 000134  6003                                 SOL,R6   3
          1 000135  EAC7 0026                            SRM,R6,'FFF8'X    Y@VDOVLP_ERR+2,AUTO
          1 000137       FFF8
PL6.E3A0      #004=KVI$ACTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:04 Page:148  

      988     6165    2      END;

      989     6166        /*N* INPCNDPND.TRN USED TO BE MOVED TO MSG HERE */
      990     6167    1      %KV_STR.DFLINPFLDSIZ = PRM_VDH_DAT.DAT__.DATBYTSIZ;

   6167   1 000138  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 00013B  CCC5 0004                            LDB,B4   4,B5
          1 00013D  E846 0004                            LDR,R6   4,B6
          1 00013F  EF44 0016                            STR,R6   22,B4

      991     6168    1      CALL KVM$SND(KV@SND_DAT);

   6168   1 000141  CBC7 0006                            LAB,B4   KV@SND_DAT,AUTO
          1 000143  CFC7 0028                            STB,B4   Y@VDOVLP_ERR+4,AUTO
          1 000145  BBC7 0028                            LAB,B3   Y@VDOVLP_ERR+4,AUTO
          1 000147  CBF0 0100                            LAB,B4   256,IMO
          1 000149  E380 0000 0000  xent                 LNJ,B6   KVM$SND
          1 00014C       0001                            DC       s:6169,PREL

      992     6169    1   END KVI$ACTRED;

   6169   1 00014D  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      993     6170        %EOD;

PL6.E3A0      #004=KVI$ACTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:04 Page:149  
--  Include file information  --

   K_ID_E.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KV_INT.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   KV_INT_M.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is referenced.
   KV$VDH.:E05TOU  was found in the system file and is referenced.
   KV$USR.:E05TOU  was found in the system file and is referenced.
   KV$SND.:E05TOU  was found in the system file and is referenced.
   KV$INT.:E05TOU  was found in the system file and is referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KVI$ACTRED.
PL6.E3A0      #004=KVI$ACTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:04 Page:150  

 **** Variables and constants ****

  ****  Section 000 RoData KVI$ACTRED

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w UBIN(16)    r     1 KV_CMPCOD_TO_ERR#(0:13)
     0-0-0/w STRC(48)    r     1 Y_VDOVLP_ERR

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @PRM_VDH_DAT               6-0-0/w STRC(368)   r     1 KV@SND_DAT
    1D-0-0/w STRC(112)   r     1 KV@VDH_RLSBFR             *0-0-0/w STRC(160)   r     1 PRM_VDH_DAT
    24-0-0/w STRC(48)    r     1 Y@VDOVLP_ERR

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 KV$PTR$                    0-0-0/w STRC(368)   r     1 KV_SND_DAT
     0-0-0/w UBIN(16)    r     1 KV_VDH_PST_ENDFRM          0-0-0/w STRC(112)   r     1 KV_VDH_RLSBFR

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(512)   r     1 KV$MRD                     0-0-0/w STRC(512)   r     1 KV$MVD
     0-0-0/w STRC(480)   r     1 KV$PTR                     0-0-0/w STRC(1024)  r     1 KV$SSN
     0-0-0/w STRC(512)   r     1 KV$STR                     0-0-0/w STRC(512)   r     1 KV$VDI
     0-0-0/w STRC(224)   r     1 PRM_VLP

PL6.E3A0      #004=KVI$ACTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:04 Page:151  

   Procedure KVI$ACTRED requires 336 words for executable code.
   Procedure KVI$ACTRED requires 42 words of local(AUTO) storage.
PL6.E3A0      #004=KVI$ACTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:04 Page:152  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=KVI$ACTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:04 Page:153  
          MINI XREF LISTING

KV$MRD.INPUT
      4728**DCL      6111>>IF
KV$MVD.DISPINPUT
      4774**DCL      6111>>IF
KV$MVD.ORG
      4774**DCL      6083>>IF       6093>>IF
KV$PTR.INPCNDPND
      4818**DCL      4827--REDEF    4831--REDEF
KV$PTR.INPCNDPND.TRN
      4822**DCL      6111>>IF
KV$PTR.LINLST$
      4814**DCL      4815--REDEF
KV$PTR.MRD$
      4813**DCL      6111>>IF
KV$PTR.MVD$
      4813**DCL      6083>>IF       6093>>IF       6111>>IF
KV$PTR.SSN$
      4812**DCL      6078>>IF       6089>>ASSIGN   6104>>ASSIGN   6111>>IF       6146>>ASSIGN   6150>>IF
      6150>>IF       6150>>IF       6151>>ASSIGN   6151>>ASSIGN
KV$PTR.STR$
      4812**DCL      6090>>ASSIGN   6128>>IF       6133>>ASSIGN   6134>>ASSIGN   6135>>ASSIGN   6138>>ASSIGN
      6145>>ASSIGN   6146>>ASSIGN   6167>>ASSIGN
KV$PTR.VDI$
      4812**DCL      6111>>IF
KV$PTR$
      4806**DCL      4812--IMP-PTR  6078>>IF       6083>>IF       6089>>ASSIGN   6090>>ASSIGN   6093>>IF
      6104>>ASSIGN   6111>>IF       6111>>IF       6111>>IF       6111>>IF       6111>>IF       6128>>IF
      6133>>ASSIGN   6134>>ASSIGN   6135>>ASSIGN   6138>>ASSIGN   6145>>ASSIGN   6146>>ASSIGN   6146>>ASSIGN
      6150>>IF       6150>>IF       6150>>IF       6151>>ASSIGN   6151>>ASSIGN   6167>>ASSIGN
KV$SRD.BTMRHT
      4951**DCL      4956--REDEF
KV$SRD.CRT
PL6.E3A0      #004=KVI$ACTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:04 Page:154  
      5027**DCL      5032--REDEF
KV$SRD.FLDEND
      4991**DCL      4996--REDEF
KV$SRD.HI_NONBLN
      5061**DCL      5066--REDEF
KV$SRD.ORG
      4883**DCL      4888--REDEF
KV$SRD.SRDEND
      5096**DCL      5101--REDEF
KV$SRD.TOPLFT
      4917**DCL      4922--REDEF
KV$SSN.INPCHR
      5150**DCL      6089<<ASSIGN
KV$SSN.LGN
      5146**DCL      6150>>IF
KV$SSN.LSTEDTBFRSTRID
      5143**DCL      6146<<ASSIGN
KV$SSN.MINEDTBFRSIZ
      5142**DCL      6111>>IF
KV$SSN.REDBFR.EDTHI_X
      5152**DCL      6150>>IF       6151>>ASSIGN
KV$SSN.REDBFR.NXTX
      5151**DCL      6150>>IF
KV$SSN.REDBFR__
      5176**DCL      6104>>ASSIGN
KV$SSN.REDBFR__.BYTX
      5178**DCL      6151>>ASSIGN
KV$SSN.REDRQSPND
      5150**DCL      6078>>IF
KV$SSN.REDRSPCNT
      5138**DCL      5139--REDEF
KV$STR.DFLINPFLDSIZ
      5266**DCL      6167<<ASSIGN
KV$STR.EDTBFR__
      5233**DCL      6138<<ASSIGN
KV$STR.EDTBFR__.ADR$
PL6.E3A0      #004=KVI$ACTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:04 Page:155  
      5235**DCL      6133>>ASSIGN
KV$STR.EDTBFR__.BFRBYTSIZ
      5236**DCL      6134>>ASSIGN
KV$STR.EDTBFR__.BFRRLSDSP
      5237**DCL      6128>>IF
KV$STR.EDTBFR__.STRTYP
      5236**DCL      6135>>ASSIGN
KV$STR.ERR.COD
      5263**DCL      6090<<ASSIGN
KV$STR.ID
      5269**DCL      6146>>ASSIGN
KV$STR.RE_REDCLM
      5239**DCL      6145<<ASSIGN
KV$STT.REQSTATS.DSPMSK
      4577**DCL      4583--REDEF
KV$STT.REQSTATS.SLCMSK
      4618**DCL      4625--REDEF
KV$VDI.INPUNT
      5388**DCL      6111>>IF
KV@SND_DAT
      5839**DCL      6149<<ASSIGN   6168<>CALL
KV@SND_DAT.ACTPOS
      5942**DCL      6151<<ASSIGN
KV@SND_DAT.CTN
      5877**DCL      6157<<ASSIGN
KV@SND_DAT.DATCTRCHR
      5941**DCL      6156<<ASSIGN
KV@SND_DAT.DATCTRCHRTYP
      5877**DCL      6155<<ASSIGN
KV@SND_DAT.DATMOD
      5877**DCL      6154<<ASSIGN
KV@SND_DAT.DAT__
      5935**DCL      6153<<ASSIGN
KV@SND_DAT.VDOVLP
      5907**DCL      5910--REDEF    6160<<ASSIGN
KV@SND_DAT.VDOVLP.ERR$
PL6.E3A0      #004=KVI$ACTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:04 Page:156  
      5908**DCL      6162<<ASSIGN
KV@VDH_RLSBFR
      5971**DCL      6132<<ASSIGN   6136<>CALL
KV@VDH_RLSBFR.BFR$
      5977**DCL      6133<<ASSIGN
KV@VDH_RLSBFR.BYTSIZ
      5977**DCL      6134<<ASSIGN
KV@VDH_RLSBFR.STRTYP
      5977**DCL      6135<<ASSIGN
KVE$ACTRED
       191**DCL-ENT  6097--CALL
KVF$PST
       192**DCL-ENT  6091--CALL
KVI$TRMRED_VDH_DAT
       193**DCL-ENT  6152--CALL
KVM$SND
       194**DCL-ENT  6168--CALL
KVS$RLSBFR
       195**DCL-ENT  6136--CALL
KV_CMPCOD_TO_ERR#
      5695**DCL      6090>>ASSIGN   6164>>ASSIGN
KV_SND_DAT
      5717**DCL      6149>>ASSIGN
KV_SND_DAT.VDOVLP
      5785**DCL      5788--REDEF
KV_VDH_PST_ENDFRM
       187**DCL      6091<>CALL
KV_VDH_RLSBFR
      5587**DCL      6132>>ASSIGN
PRM_VDH_DAT
      5454**DCL         7--PROC     6097<>CALL     6106--ENTRY    6152<>CALL
PRM_VDH_DAT.CMPCOD
      5494**DCL      6090>>ASSIGN   6161>>IF       6164>>ASSIGN
PRM_VDH_DAT.CTN
      5461**DCL      6157>>ASSIGN
PRM_VDH_DAT.DATCTRCHR
PL6.E3A0      #004=KVI$ACTRED File=KVI$RED.:E05TSI                               WED 07/30/97 02:04 Page:157  
      5498**DCL      6089>>ASSIGN   6156>>ASSIGN
PRM_VDH_DAT.DATCTRCHRTYP
      5461**DCL      6155>>ASSIGN
PRM_VDH_DAT.DATMOD
      5462**DCL      6154>>ASSIGN
PRM_VDH_DAT.DAT__
      5488**DCL      6104<<ASSIGN   6138>>ASSIGN   6153>>ASSIGN
PRM_VDH_DAT.DAT__.ADR$
      5490**DCL      6107>>IF
PRM_VDH_DAT.DAT__.BFRRLSDSP
      5492**DCL      6144<<ASSIGN
PRM_VDH_DAT.DAT__.DATBYTSIZ
      5490**DCL      6111>>IF       6167>>ASSIGN
PRM_VDH_DAT.VDOVLP
      5465**DCL      6159>>IF
PRM_VDH_DAT.VDOVLPARY$
      5498**DCL      6160>>ASSIGN
PRM_VLP
      5516**DCL      6160>>ASSIGN
PRM_VLP.VDOVLP
      5528**DCL      5531--REDEF
Y@VDOVLP_ERR
      6015**DCL      6162--ASSIGN   6163<<ASSIGN
Y@VDOVLP_ERR.ERRCODE.ERR#
      6073**DCL      6164<<ASSIGN
Y_VDOVLP_ERR
      5632**DCL      6163>>ASSIGN

PL6.E3A0      #005=KVI$CPYEDTBFR File=KVI$RED.:E05TSI                            WED 07/30/97 02:05 Page:158  
      994        1        /*T***********************************************************/
      995        2        /*T*                                                         */
      996        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      997        4        /*T*                                                         */
      998        5        /*T***********************************************************/
      999        6        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IND=0,IAD=3 */
     1000        7        KVI$CPYEDTBFR: PROC;
     1001        8        %INCLUDE KV_INT_M;
     1002      151        %KV$BOX (PAGE = NO, TITLE = "Copy edit buffer to read buffer");

               169        /***************************************************************************
               170         *                                                                         *
               171         *                      Copy edit buffer to read buffer                    *
               172         *                                                                         *
               173         ***************************************************************************/

     1003      178
     1004      179        /*
     1005      180        Declare SYMREFs.
     1006      181        */
     1007      182        /*
     1008      183        Declare external procedures CALLed.
     1009      184        */
     1010      185    1   DCL KVI$EDTX_TO_VRTCLM ENTRY(1);
     1011      186    1   DCL KVI$SCPVRTCLMLOWX ENTRY;
     1012      187    1   DCL KVS$GETREDBFR ENTRY(1) ALTRET;
     1013      188        /*
     1014      189        INCLUDE files, constants, based structures,
     1015      190        and static data contained elsewhere.
     1016      191        */
     1017      192
     1018      193        %INCLUDE KV_INT;
     1019      232
     1020      233 S      %INCLUDE KV_GLBCNS_E;
     1021      234        %KV#VD_ORG_E;
     1022      242 S      %INCLUDE KV$GLB;
     1023      243 S      %INCLUDE KV$GLBCTX;
PL6.E3A0      #005=KVI$CPYEDTBFR File=KVI$RED.:E05TSI                            WED 07/30/97 02:05 Page:159  
     1024      244 S      %INCLUDE KV$INT;
     1025      245        %KV$MVD;
     1026      289        %KV$RCR;
     1027      319        %KV$RCRLST;
     1028      355        %KV$PTR;
     1029      398        %KV$SSN;
     1030      477        %KV$STR;
     1031      564        %KV$STR (NAME=Y$STR, STCLASS="BASED(Y@TMPSTR$)");
     1032      651        %KV$VDI;
     1033      722
     1034      723        /*
     1035      724        Character string declaration, for move.
     1036      725        */
     1037      726    1   DCL Y$CHR CHAR(Y@TMPWRD) BASED;
     1038      727
     1039      728        /*
     1040      729        AUTO variables.
     1041      730        */
     1042      731
     1043      732        /* Temporary word */
     1044      733
     1045      734    1   DCL Y@TMPWRD UBIN WORD AUTO;
     1046      735
     1047      736        /* Temporary stream (KV$STR) pointer. */
     1048      737
     1049      738    1   DCL Y@TMPSTR$ PTR AUTO;
     1050      739
     1051      740        /* Edit buffer descriptor.  Copied or built from KV$RCR. */
     1052      741
     1053      742        %KV$BFRDSC (NAME=Y@EDTBFR__, STCLASS=AUTO);
     1054      769
     1055      770    1   KVI$CPYSSNEDTBFRTO_REDBFR: ENTRY;
     1056      771
     1057      772        /* copy the last edit buffer saved for this session to the                    */
     1058      773        /* read buffer.                                                               */
     1059      774
     1060      775    1      Y@TMPSTR$ = %KV_SSN.STR$;
PL6.E3A0      #005=KVI$CPYEDTBFR File=KVI$RED.:E05TSI                            WED 07/30/97 02:05 Page:160  
     1061      776    2      DO WHILE Y@TMPSTR$~=ADDR(NIL);
     1062      777        /* Search for the appropriate stream. */
     1063      778
     1064      779    3         IF Y$STR.ID=%KV_SSN.LSTEDTBFRSTRID THEN DO;
     1065      780    3            Y@EDTBFR__ = Y$STR.EDTBFR__;
     1066      781    3            GOTO SUBCOMMON;
     1067      782    3         END;
     1068      783    2         Y@TMPSTR$ = Y$STR.LNK$;
     1069      784    2      END;
     1070      785
     1071      786        /* copy the edit buffer for this stream to the read buffer.                   */
     1072      787
     1073      788    1   KVI$CPYSTREDTBFRTO_REDBFR: ENTRY;
     1074      789    1      Y@EDTBFR__ = %KV_STR.EDTBFR__;
     1075      790    2      IF %KV_MVD.ORG=%KV#VD_ORG_SE AND KV$PTR.INPCNDPND.OPRX~=0 THEN DO;
     1076      791    2         IF %KV_RCRLST.CRTRCR<KV$PTR.INPCNDPND.OPRX
     1077      792    2           OR %KV_RCRLST.CRTRCR-KV$PTR.INPCNDPND.OPRX>=%KV_RCRLST.RCRCNT
     1078      793    2         THEN EXIT;
     1079      794    2         Y@TMPSTR$ = %KV_RCRLST.RCR$(%KV_RCRLST.CRTRCR-KV$PTR.INPCNDPND.OPRX);
     1080      795    2         Y@EDTBFR__.ADR$ = Y@TMPSTR$;
     1081      796    2         Y@EDTBFR__.BYTX = %KV_RCRLST.KEYLNG+LENGTHV(KV$RCR);
     1082      797    2         Y@EDTBFR__.DATBYTSIZ = Y@TMPSTR$->KV$RCR.RCRBYTSIZ;
     1083      798    2      END;
     1084      799    1      Y@TMPSTR$ = KV$PTR.STR$;
     1085      800    1   SUBCOMMON:
     1086      801    2      IF Y$STR.EDTBFR__.ADR$~=ADDR(NIL) THEN DO;
     1087      802
     1088      803        /* there is an edit buffer.                                                   */
     1089      804
     1090      805    2         Y@TMPWRD = MAXIMUM(Y@EDTBFR__.DATBYTSIZ, Y$STR.RE_REDCLM-1);
     1091      806    2         %KV_SSN.RE_REDCLM = Y$STR.RE_REDCLM;
     1092      807    3         IF (Y@TMPWRD >= %KV_STR.MAXRCRBYTSIZ) THEN DO;
     1093      808
     1094      809        /* the input edit buffer's text size is sufficient to cause activation on     */
     1095      810        /* size (if the code actually worked that way). we'll have to                 */
     1096      811        /* truncate the size to just below the activation-on-size point.              */
     1097      812
PL6.E3A0      #005=KVI$CPYEDTBFR File=KVI$RED.:E05TSI                            WED 07/30/97 02:05 Page:161  
     1098      813    3            Y@TMPWRD = %KV_STR.MAXRCRBYTSIZ;
     1099      814    4            IF %KV_MVD.ORG=%KV#VD_ORG_UR OR Y$STR.RE_REDCLM=0 THEN DO;
     1100      815    4               Y@TMPWRD = Y@TMPWRD-1;
     1101      816    4            END;                           /* IF                                 */
     1102      817    3            IF Y@TMPWRD<%KV_SSN.RE_REDCLM
     1103      818    3            THEN %KV_SSN.RE_REDCLM = Y@TMPWRD;
     1104      819    3         END;                              /* IF                                 */
     1105      820    2         IF Y@TMPWRD>%KV_SSN.REDBFR__.BFRBYTSIZ-%KV_SSN.REDBFR__.BYTX
     1106      821    2           OR %KV_SSN.REDBFR__.ADR$=ADDR(NIL)
     1107      822        /* Get a big enough buffer. */
     1108      823
     1109      824    3         THEN CALL KVS$GETREDBFR(Y@TMPWRD) WHENALTRETURN DO; RETURN; END;
     1110      825    2         %KV_SSN.REDBFR__.DATBYTSIZ = Y@TMPWRD;
     1111      826    3         IF Y@TMPWRD>Y@EDTBFR__.DATBYTSIZ THEN DO;
     1112      827    3            SUBSTR(%KV_SSN.REDBFR__.ADR$->Y$CHR,
     1113      828    3              %KV_SSN.REDBFR__.BYTX+Y@EDTBFR__.DATBYTSIZ,
     1114      829    3              Y@TMPWRD-Y@EDTBFR__.DATBYTSIZ) = ' ';
     1115      830    3            Y@TMPWRD = Y@EDTBFR__.DATBYTSIZ;
     1116      831    3         END;
     1117      832    2         PINCRC (%KV_SSN.REDBFR__.ADR$, %KV_SSN.REDBFR__.BYTX)->Y$CHR =
     1118      833    2           PINCRC (Y@EDTBFR__.ADR$, Y@EDTBFR__.BYTX)->Y$CHR;
     1119      834    2         %KV_SSN.REDBFR.INSLOWX = %KV_SSN.REDBFR__.BYTX;
     1120      835    2         %KV_VDI.RE_DSPLOWX = %KV_SSN.REDBFR__.BYTX;
     1121      836    2         Y@TMPWRD = Y@TMPWRD+%KV_SSN.REDBFR__.BYTX;
     1122      837    2         %KV_SSN.REDBFR.NXTX = Y@TMPWRD;
     1123      838    2         %KV_SSN.REDBFR.INSMODX = Y@TMPWRD;
     1124      839    2         %KV_SSN.REDBFR.EDTLOWX = Y@TMPWRD;
     1125      840    2         %KV_SSN.CLMIS_BYTX = '0'B;
     1126      841    2         CALL KVI$EDTX_TO_VRTCLM (Y@TMPSTR$); /* Set CLMIS_BYTX properly         */
     1127      842    2         IF %KV_SSN.RE_REDCLM~=0
     1128      843    2         THEN Y@TMPWRD = %KV_SSN.RE_REDCLM-1+%KV_SSN.REDBFR__.BYTX;
     1129      844    2         %KV_SSN.REDBFR.EDTLOWX = Y@TMPWRD;
     1130      845    2         CALL KVI$SCPVRTCLMLOWX;
     1131      846    2      END;                                 /* IF                                 */
     1132      847    1   END KVI$CPYEDTBFR;

PL6.E3A0      #005=KVI$CPYEDTBFR File=KVI$RED.:E05TSI                            WED 07/30/97 02:05 Page:162  
--  Include file information  --

   KV_INT.:E05TOU  is referenced.
   KV_INT_M.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is never referenced.
   KV$USR.:E05TOU  was found in the system file and is never referenced.
   KV$SND.:E05TOU  was found in the system file and is never referenced.
   KV$INT.:E05TOU  was found in the system file and is referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KVI$CPYEDTBFR.

   Procedure KVI$CPYEDTBFR requires 362 words for executable code.
   Procedure KVI$CPYEDTBFR requires 18 words of local(AUTO) storage.

    No errors detected in file KVI$RED.:E05TSI    .

PL6.E3A0      #005=KVI$CPYEDTBFR File=KVI$RED.:E05TSI                            WED 07/30/97 02:05 Page:163  

 Object Unit name= KVI$CPYEDTBFR                              File name= KVI$RED.:E05TOU
 UTS= JUL 30 '97 02:05:10.64 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none   362    16A  KVI$CPYEDTBFR
    1  RoData even  none     1      1  KVI$CPYEDTBFR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        0  KVI$CPYEDTBFR
     0      7                  yes      Std        0  KVI$CPYSSNEDTBFRTO_REDBFR
     0     36                  yes      Std        0  KVI$CPYSTREDTBFRTO_REDBFR

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 KVS$GETREDBFR
         yes           Std       1 KVI$EDTX_TO_VRTCLM
         yes           Std       0 KVI$SCPVRTCLMLOWX
                       nStd      0 X6A_AUTO_0
                       nStd      0 X6A_ARET
                       nStd      0 X6C_ALR
PL6.E3A0      #005=KVI$CPYEDTBFR File=KVI$RED.:E05TSI                            WED 07/30/97 02:05 Page:164  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KV$PTR$                          r    G$ROS$
PL6.E3A0      #005=KVI$CPYEDTBFR File=KVI$RED.:E05TSI                            WED 07/30/97 02:05 Page:165  


      994        1        /*T***********************************************************/
      995        2        /*T*                                                         */
      996        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      997        4        /*T*                                                         */
      998        5        /*T***********************************************************/
      999        6        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IND=0,IAD=3 */
     1000        7        KVI$CPYEDTBFR: PROC;

      7   0 000000  D380 0000 0000  xent KVI$CPYEDTBFR   LNJ,B5   X6A_AUTO_0
          0 000003       0012 0000                       DC       18,0
          0 000005  0F81 0006                            B        s:775,PREL

     1001        8        %INCLUDE KV_INT_M;
     1002      151        %KV$BOX (PAGE = NO, TITLE = "Copy edit buffer to read buffer");

               169        /***************************************************************************
               170         *                                                                         *
               171         *                      Copy edit buffer to read buffer                    *
               172         *                                                                         *
               173         ***************************************************************************/

     1003      178
     1004      179        /*
     1005      180        Declare SYMREFs.
     1006      181        */
     1007      182        /*
     1008      183        Declare external procedures CALLed.
     1009      184        */
     1010      185    1   DCL KVI$EDTX_TO_VRTCLM ENTRY(1);
     1011      186    1   DCL KVI$SCPVRTCLMLOWX ENTRY;
     1012      187    1   DCL KVS$GETREDBFR ENTRY(1) ALTRET;
     1013      188        /*
     1014      189        INCLUDE files, constants, based structures,
     1015      190        and static data contained elsewhere.
     1016      191        */
     1017      192
PL6.E3A0      #005=KVI$CPYEDTBFR File=KVI$RED.:E05TSI                            WED 07/30/97 02:05 Page:166  
     1018      193        %INCLUDE KV_INT;
     1019      232
     1020      233 S      %INCLUDE KV_GLBCNS_E;
     1021      234        %KV#VD_ORG_E;
     1022      242 S      %INCLUDE KV$GLB;
     1023      243 S      %INCLUDE KV$GLBCTX;
     1024      244 S      %INCLUDE KV$INT;
     1025      245        %KV$MVD;
     1026      289        %KV$RCR;
     1027      319        %KV$RCRLST;
     1028      355        %KV$PTR;
     1029      398        %KV$SSN;
     1030      477        %KV$STR;
     1031      564        %KV$STR (NAME=Y$STR, STCLASS="BASED(Y@TMPSTR$)");
     1032      651        %KV$VDI;
     1033      722
     1034      723        /*
     1035      724        Character string declaration, for move.
     1036      725        */
     1037      726    1   DCL Y$CHR CHAR(Y@TMPWRD) BASED;
     1038      727
     1039      728        /*
     1040      729        AUTO variables.
     1041      730        */
     1042      731
     1043      732        /* Temporary word */
     1044      733
     1045      734    1   DCL Y@TMPWRD UBIN WORD AUTO;
     1046      735
     1047      736        /* Temporary stream (KV$STR) pointer. */
     1048      737
     1049      738    1   DCL Y@TMPSTR$ PTR AUTO;
     1050      739
     1051      740        /* Edit buffer descriptor.  Copied or built from KV$RCR. */
     1052      741
     1053      742        %KV$BFRDSC (NAME=Y@EDTBFR__, STCLASS=AUTO);
     1054      769
PL6.E3A0      #005=KVI$CPYEDTBFR File=KVI$RED.:E05TSI                            WED 07/30/97 02:05 Page:167  
     1055      770    1   KVI$CPYSSNEDTBFRTO_REDBFR: ENTRY;

    770   0 000007  D380 0000 0000  xent KVI$CPYSSNEDTBF*LNJ,B5   X6A_AUTO_0
          0 00000A       0012 0000                       DC       18,0

     1056      771
     1057      772        /* copy the last edit buffer saved for this session to the                    */
     1058      773        /* read buffer.                                                               */
     1059      774
     1060      775    1      Y@TMPSTR$ = %KV_SSN.STR$;

    775   0 00000C  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 00000F  DCC6 0002                            LDB,B5   2,B6
          0 000011  CCC5 0004                            LDB,B4   4,B5
          0 000013  CFC7 0005                            STB,B4   Y@TMPSTR$,AUTO

     1061      776    2      DO WHILE Y@TMPSTR$~=ADDR(NIL);

    776   0 000015  0F81 001B                            B        s:784,PREL

     1062      777        /* Search for the appropriate stream. */
     1063      778
     1064      779    3         IF Y$STR.ID=%KV_SSN.LSTEDTBFRSTRID THEN DO;

    779   0 000017  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 00001A  DCC6 0002                            LDB,B5   2,B6
          0 00001C  CCC7 0005                            LDB,B4   Y@TMPSTR$,AUTO
          0 00001E  E2C4 001C                            LLH,R6   28,B4
          0 000020  D2C5 0026                            LLH,R5   38,B5
          0 000022  E955                                 CMR,R6   R5
          0 000023  0981 0009                            BNE      s:783,PREL

     1065      780    3            Y@EDTBFR__ = Y$STR.EDTBFR__;

    780   0 000025  AB84                                 LAB,B2   ,B4
          0 000026  2C18                                 LDV,R2   24
          0 000027  6C0C                                 LDV,R6   12
PL6.E3A0      #005=KVI$CPYEDTBFR File=KVI$RED.:E05TSI                            WED 07/30/97 02:05 Page:168  
          0 000028  BB87                                 LAB,B3   ,AUTO
          0 000029  3C0E                                 LDV,R3   14
          0 00002A  0008                                 MMM

     1066      781    3            GOTO SUBCOMMON;

    781   0 00002B  0F81 0055                            B        s:801,PREL

     1067      782    3         END;
     1068      783    2         Y@TMPSTR$ = Y$STR.LNK$;

    783   0 00002D  BCC4 0002                            LDB,B3   2,B4
          0 00002F  BFC7 0005                            STB,B3   Y@TMPSTR$,AUTO

     1069      784    2      END;

    784   0 000031  8DC7 0005                            CMN      Y@TMPSTR$,AUTO
          0 000033  09E4                                 BNE      s:779,SPREL
          0 000034  0F81 0006                            B        s:789,PREL

     1070      785
     1071      786        /* copy the edit buffer for this stream to the read buffer.                   */
     1072      787
     1073      788    1   KVI$CPYSTREDTBFRTO_REDBFR: ENTRY;

    788   0 000036  D380 0000 0000  xent KVI$CPYSTREDTBF*LNJ,B5   X6A_AUTO_0
          0 000039       0012 0000                       DC       18,0

     1074      789    1      Y@EDTBFR__ = %KV_STR.EDTBFR__;

    789   0 00003B  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 00003E  DCC6 0004                            LDB,B5   4,B6
          0 000040  AB85                                 LAB,B2   ,B5
          0 000041  2C18                                 LDV,R2   24
          0 000042  6C0C                                 LDV,R6   12
          0 000043  BB87                                 LAB,B3   ,AUTO
          0 000044  3C0E                                 LDV,R3   14
PL6.E3A0      #005=KVI$CPYEDTBFR File=KVI$RED.:E05TSI                            WED 07/30/97 02:05 Page:169  
          0 000045  0008                                 MMM

     1075      790    2      IF %KV_MVD.ORG=%KV#VD_ORG_SE AND KV$PTR.INPCNDPND.OPRX~=0 THEN DO;

    790   0 000046  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 000049  CCC6 0006                            LDB,B4   6,B6
          0 00004B  E2C4 0015                            LLH,R6   21,B4
          0 00004D  6D05                                 CMV,R6   5
          0 00004E  0981 002B                            BNE      s:799,PREL
          0 000050  D846 001C                            LDR,R5   28,B6
          0 000052  5901 0027                            BEZ,R5   s:799,PREL

     1076      791    2         IF %KV_RCRLST.CRTRCR<KV$PTR.INPCNDPND.OPRX

    791   0 000054  9CC6 000E                            LDB,B1   14,B6
          0 000056  D941 0006                            CMR,R5   6,B1
          0 000058  0A01 0021                            BAG      s:799,PREL
          0 00005A  D241 0006                            SUB,R5   6,B1
          0 00005C  8255                                 NEG      R5
          0 00005D  D941 0001                            CMR,R5   1,B1
          0 00005F  0881 001A                            BAGE     s:799,PREL

     1077      792    2           OR %KV_RCRLST.CRTRCR-KV$PTR.INPCNDPND.OPRX>=%KV_RCRLST.RCRCNT
     1078      793    2         THEN EXIT;
     1079      794    2         Y@TMPSTR$ = %KV_RCRLST.RCR$(%KV_RCRLST.CRTRCR-KV$PTR.INPCNDPND.OPRX);

    794   0 000061  D841 0006                            LDR,R5   6,B1
          0 000063  D246 001C                            SUB,R5   28,B6
          0 000065  B855                                 LDR,R3   R5
          0 000066  3E08                                 ADV,R3   8
          0 000067  ECB1                                 LDB,B6   ,B1,R3
          0 000068  EFC7 0005                            STB,B6   Y@TMPSTR$,AUTO

     1080      795    2         Y@EDTBFR__.ADR$ = Y@TMPSTR$;

    795   0 00006A  EFC7 0007                            STB,B6   Y@EDTBFR__,AUTO

PL6.E3A0      #005=KVI$CPYEDTBFR File=KVI$RED.:E05TSI                            WED 07/30/97 02:05 Page:170  
     1081      796    2         Y@EDTBFR__.BYTX = %KV_RCRLST.KEYLNG+LENGTHV(KV$RCR);

    796   0 00006C  CC80 0000 0000  xsym                 LDB,B4   KV$PTR$
          0 00006F  9CC4 000E                            LDB,B1   14,B4
          0 000071  E2C1 000B                            LLH,R6   11,B1
          0 000073  6E06                                 ADV,R6   6
          0 000074  EF47 0009                            STR,R6   Y@EDTBFR__+2,AUTO

     1082      797    2         Y@EDTBFR__.DATBYTSIZ = Y@TMPSTR$->KV$RCR.RCRBYTSIZ;

    797   0 000076  D846 0001                            LDR,R5   1,B6
          0 000078  DF47 000A                            STR,R5   Y@EDTBFR__+3,AUTO

     1083      798    2      END;

     1084      799    1      Y@TMPSTR$ = KV$PTR.STR$;

    799   0 00007A  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 00007D  CCC6 0004                            LDB,B4   4,B6
          0 00007F  CFC7 0005                            STB,B4   Y@TMPSTR$,AUTO

     1085      800    1   SUBCOMMON:
     1086      801    2      IF Y$STR.EDTBFR__.ADR$~=ADDR(NIL) THEN DO;

    801   0 000081  ECC7 0005            SUBCOMMON       LDB,B6   Y@TMPSTR$,AUTO
          0 000083  8DC6 000C                            CMN      12,B6
          0 000085  0901 00E1                            BE       s:847,PREL

     1087      802
     1088      803        /* there is an edit buffer.                                                   */
     1089      804
     1090      805    2         Y@TMPWRD = MAXIMUM(Y@EDTBFR__.DATBYTSIZ, Y$STR.RE_REDCLM-1);

    805   0 000087  E846 0012                            LDR,R6   18,B6
          0 000089  6EFF                                 ADV,R6   -1
          0 00008A  E947 000A                            CMR,R6   Y@EDTBFR__+3,AUTO
          0 00008C  0881 0003                            BAGE     s:805+9,PREL
PL6.E3A0      #005=KVI$CPYEDTBFR File=KVI$RED.:E05TSI                            WED 07/30/97 02:05 Page:171  
          0 00008E  E847 000A                            LDR,R6   Y@EDTBFR__+3,AUTO
          0 000090  EF47 0004                            STR,R6   Y@TMPWRD,AUTO

     1091      806    2         %KV_SSN.RE_REDCLM = Y$STR.RE_REDCLM;

    806   0 000092  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          0 000095  CCC5 0002                            LDB,B4   2,B5
          0 000097  D846 0012                            LDR,R5   18,B6
          0 000099  DF44 0036                            STR,R5   54,B4

     1092      807    3         IF (Y@TMPWRD >= %KV_STR.MAXRCRBYTSIZ) THEN DO;

    807   0 00009B  CCC5 0004                            LDB,B4   4,B5
          0 00009D  E944 0015                            CMR,R6   21,B4
          0 00009F  0201 001C                            BL       s:820,PREL

     1093      808
     1094      809        /* the input edit buffer's text size is sufficient to cause activation on     */
     1095      810        /* size (if the code actually worked that way). we'll have to                 */
     1096      811        /* truncate the size to just below the activation-on-size point.              */
     1097      812
     1098      813    3            Y@TMPWRD = %KV_STR.MAXRCRBYTSIZ;

    813   0 0000A1  E844 0015                            LDR,R6   21,B4
          0 0000A3  EF47 0004                            STR,R6   Y@TMPWRD,AUTO

     1099      814    4            IF %KV_MVD.ORG=%KV#VD_ORG_UR OR Y$STR.RE_REDCLM=0 THEN DO;

    814   0 0000A5  CCC5 0006                            LDB,B4   6,B5
          0 0000A7  D2C4 0015                            LLH,R5   21,B4
          0 0000A9  5D01                                 CMV,R5   1
          0 0000AA  0901 0005                            BE       s:815,PREL
          0 0000AC  C846 0012                            LDR,R4   18,B6
          0 0000AE  4981 0003                            BNEZ,R4  s:817,PREL

     1100      815    4               Y@TMPWRD = Y@TMPWRD-1;

PL6.E3A0      #005=KVI$CPYEDTBFR File=KVI$RED.:E05TSI                            WED 07/30/97 02:05 Page:172  
    815   0 0000B0  88C7 0004                            DEC      Y@TMPWRD,AUTO

     1101      816    4            END;                           /* IF                                 */

     1102      817    3            IF Y@TMPWRD<%KV_SSN.RE_REDCLM

    817   0 0000B2  ACC5 0002                            LDB,B2   2,B5
          0 0000B4  E847 0004                            LDR,R6   Y@TMPWRD,AUTO
          0 0000B6  E942 0036                            CMR,R6   54,B2
          0 0000B8  0281 0003                            BGE      s:820,PREL

     1103      818    3            THEN %KV_SSN.RE_REDCLM = Y@TMPWRD;

    818   0 0000BA  EF42 0036                            STR,R6   54,B2

     1104      819    3         END;                              /* IF                                 */

     1105      820    2         IF Y@TMPWRD>%KV_SSN.REDBFR__.BFRBYTSIZ-%KV_SSN.REDBFR__.BYTX

    820   0 0000BC  CCC5 0002                            LDB,B4   2,B5
          0 0000BE  D844 0034                            LDR,R5   52,B4
          0 0000C0  D244 0032                            SUB,R5   50,B4
          0 0000C2  5801 0008                            BLZ,R5   s:824,PREL
          0 0000C4  D956                                 CMR,R5   R6
          0 0000C5  0201 0005                            BL       s:824,PREL
          0 0000C7  8DC4 0030                            CMN      48,B4
          0 0000C9  0981 0012                            BNE      s:825,PREL

     1106      821    2           OR %KV_SSN.REDBFR__.ADR$=ADDR(NIL)
     1107      822        /* Get a big enough buffer. */
     1108      823
     1109      824    3         THEN CALL KVS$GETREDBFR(Y@TMPWRD) WHENALTRETURN DO; RETURN; END;

    824   0 0000CB  ABC7 0004                            LAB,B2   Y@TMPWRD,AUTO
          0 0000CD  AFC7 000E                            STB,B2   Y@EDTBFR__+7,AUTO
          0 0000CF  BBC7 000E                            LAB,B3   Y@EDTBFR__+7,AUTO
          0 0000D1  CBF0 0100                            LAB,B4   256,IMO
PL6.E3A0      #005=KVI$CPYEDTBFR File=KVI$RED.:E05TSI                            WED 07/30/97 02:05 Page:173  
          0 0000D3  E380 0000 0000  xent                 LNJ,B6   KVS$GETREDBFR
          0 0000D6       0003                            DC       s:824+14,PREL
          0 0000D7  0F81 0004                            B        s:825,PREL

    824   0 0000D9  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1110      825    2         %KV_SSN.REDBFR__.DATBYTSIZ = Y@TMPWRD;

    825   0 0000DC  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 0000DF  DCC6 0002                            LDB,B5   2,B6
          0 0000E1  E847 0004                            LDR,R6   Y@TMPWRD,AUTO
          0 0000E3  EF45 0033                            STR,R6   51,B5

     1111      826    3         IF Y@TMPWRD>Y@EDTBFR__.DATBYTSIZ THEN DO;

    826   0 0000E5  E947 000A                            CMR,R6   Y@EDTBFR__+3,AUTO
          0 0000E7  0381 0021                            BLE      s:832,PREL

     1112      827    3            SUBSTR(%KV_SSN.REDBFR__.ADR$->Y$CHR,

    827   0 0000E9  DCC6 0002                            LDB,B5   2,B6
          0 0000EB  CCC5 0030                            LDB,B4   48,B5
          0 0000ED  D845 0032                            LDR,R5   50,B5
          0 0000EF  DA47 000A                            ADD,R5   Y@EDTBFR__+3,AUTO
          0 0000F1  E247 000A                            SUB,R6   Y@EDTBFR__+3,AUTO
          0 0000F3  DF47 000E                            STR,R5   Y@EDTBFR__+7,AUTO
          0 0000F5  EF47 000F                            STR,R6   Y@EDTBFR__+8,AUTO
          0 0000F7  CFC7 0010                            STB,B4   Y@EDTBFR__+9,AUTO
          0 0000F9  AB80 0000 0000  01                   LAB,B2   0
          0 0000FC  2C00                                 LDV,R2   0
          0 0000FD  6C01                                 LDV,R6   1
          0 0000FE  BB84                                 LAB,B3   ,B4
          0 0000FF  B855                                 LDR,R3   R5
          0 000100  F847 000F                            LDR,R7   Y@EDTBFR__+8,AUTO
          0 000102  D380 0000 0000  xent                 LNJ,B5   X6C_ALR

     1113      828    3              %KV_SSN.REDBFR__.BYTX+Y@EDTBFR__.DATBYTSIZ,
PL6.E3A0      #005=KVI$CPYEDTBFR File=KVI$RED.:E05TSI                            WED 07/30/97 02:05 Page:174  
     1114      829    3              Y@TMPWRD-Y@EDTBFR__.DATBYTSIZ) = ' ';
     1115      830    3            Y@TMPWRD = Y@EDTBFR__.DATBYTSIZ;

    830   0 000105  E847 000A                            LDR,R6   Y@EDTBFR__+3,AUTO
          0 000107  EF47 0004                            STR,R6   Y@TMPWRD,AUTO

     1116      831    3         END;

     1117      832    2         PINCRC (%KV_SSN.REDBFR__.ADR$, %KV_SSN.REDBFR__.BYTX)->Y$CHR =

    832   0 000109  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 00010C  DCC6 0002                            LDB,B5   2,B6
          0 00010E  B845 0032                            LDR,R3   50,B5
          0 000110  CCC5 0030                            LDB,B4   48,B5
          0 000112  ACC7 0007                            LDB,B2   Y@EDTBFR__,AUTO
          0 000114  A847 0009                            LDR,R2   Y@EDTBFR__+2,AUTO
          0 000116  BB84                                 LAB,B3   ,B4
          0 000117  0008                                 MMM

     1118      833    2           PINCRC (Y@EDTBFR__.ADR$, Y@EDTBFR__.BYTX)->Y$CHR;
     1119      834    2         %KV_SSN.REDBFR.INSLOWX = %KV_SSN.REDBFR__.BYTX;

    834   0 000118  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 00011B  DCC6 0002                            LDB,B5   2,B6
          0 00011D  E845 0032                            LDR,R6   50,B5
          0 00011F  EF45 002D                            STR,R6   45,B5

     1120      835    2         %KV_VDI.RE_DSPLOWX = %KV_SSN.REDBFR__.BYTX;

    835   0 000121  DC86                                 LDB,B5   ,B6
          0 000122  ACC6 0002                            LDB,B2   2,B6
          0 000124  E842 0032                            LDR,R6   50,B2
          0 000126  EF45 0016                            STR,R6   22,B5

     1121      836    2         Y@TMPWRD = Y@TMPWRD+%KV_SSN.REDBFR__.BYTX;

    836   0 000128  DCC6 0002                            LDB,B5   2,B6
PL6.E3A0      #005=KVI$CPYEDTBFR File=KVI$RED.:E05TSI                            WED 07/30/97 02:05 Page:175  
          0 00012A  E847 0004                            LDR,R6   Y@TMPWRD,AUTO
          0 00012C  EA45 0032                            ADD,R6   50,B5
          0 00012E  EF47 0004                            STR,R6   Y@TMPWRD,AUTO

     1122      837    2         %KV_SSN.REDBFR.NXTX = Y@TMPWRD;

    837   0 000130  DCC6 0002                            LDB,B5   2,B6
          0 000132  EF45 002A                            STR,R6   42,B5

     1123      838    2         %KV_SSN.REDBFR.INSMODX = Y@TMPWRD;

    838   0 000134  DCC6 0002                            LDB,B5   2,B6
          0 000136  EF45 002E                            STR,R6   46,B5

     1124      839    2         %KV_SSN.REDBFR.EDTLOWX = Y@TMPWRD;

    839   0 000138  DCC6 0002                            LDB,B5   2,B6
          0 00013A  EF45 002B                            STR,R6   43,B5

     1125      840    2         %KV_SSN.CLMIS_BYTX = '0'B;

    840   0 00013C  DCC6 0002                            LDB,B5   2,B6
          0 00013E  8845 0037                            LBF,'0080'X       55,B5
          0 000140       0080

     1126      841    2         CALL KVI$EDTX_TO_VRTCLM (Y@TMPSTR$); /* Set CLMIS_BYTX properly         */

    841   0 000141  DBC7 0005                            LAB,B5   Y@TMPSTR$,AUTO
          0 000143  DFC7 000E                            STB,B5   Y@EDTBFR__+7,AUTO
          0 000145  BBC7 000E                            LAB,B3   Y@EDTBFR__+7,AUTO
          0 000147  CBF0 0100                            LAB,B4   256,IMO
          0 000149  E380 0000 0000  xent                 LNJ,B6   KVI$EDTX_TO_VRTCLM
          0 00014C       0001                            DC       s:842,PREL

     1127      842    2         IF %KV_SSN.RE_REDCLM~=0

    842   0 00014D  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
PL6.E3A0      #005=KVI$CPYEDTBFR File=KVI$RED.:E05TSI                            WED 07/30/97 02:05 Page:176  
          0 000150  DCC6 0002                            LDB,B5   2,B6
          0 000152  E845 0036                            LDR,R6   54,B5
          0 000154  6901 0006                            BEZ,R6   s:844,PREL

     1128      843    2         THEN Y@TMPWRD = %KV_SSN.RE_REDCLM-1+%KV_SSN.REDBFR__.BYTX;

    843   0 000156  EA45 0032                            ADD,R6   50,B5
          0 000158  6EFF                                 ADV,R6   -1
          0 000159  EF47 0004                            STR,R6   Y@TMPWRD,AUTO

     1129      844    2         %KV_SSN.REDBFR.EDTLOWX = Y@TMPWRD;

    844   0 00015B  DCC6 0002                            LDB,B5   2,B6
          0 00015D  E847 0004                            LDR,R6   Y@TMPWRD,AUTO
          0 00015F  EF45 002B                            STR,R6   43,B5

     1130      845    2         CALL KVI$SCPVRTCLMLOWX;

    845   0 000161  CBF0 0000                            LAB,B4   0,IMO
          0 000163  E380 0000 0000  xent                 LNJ,B6   KVI$SCPVRTCLMLOWX
          0 000166       0001                            DC       s:847,PREL

     1131      846    2      END;                                 /* IF                                 */

     1132      847    1   END KVI$CPYEDTBFR;

    847   0 000167  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

PL6.E3A0      #005=KVI$CPYEDTBFR File=KVI$RED.:E05TSI                            WED 07/30/97 02:05 Page:177  
--  Include file information  --

   KV_INT.:E05TOU  is referenced.
   KV_INT_M.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is never referenced.
   KV$USR.:E05TOU  was found in the system file and is never referenced.
   KV$SND.:E05TOU  was found in the system file and is never referenced.
   KV$INT.:E05TOU  was found in the system file and is referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KVI$CPYEDTBFR.
PL6.E3A0      #005=KVI$CPYEDTBFR File=KVI$RED.:E05TSI                            WED 07/30/97 02:05 Page:178  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     7-0-0/w STRC(96)    r     1 Y@EDTBFR__                 5-0-0/w PTR         r     1 Y@TMPSTR$
     4-0-0/w UBIN(16)    r     1 Y@TMPWRD

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 KV$PTR$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(512)   r     1 KV$MVD                     0-0-0/w STRC(480)   r     1 KV$PTR
     0-0-0/w STRC(56)    r     1 KV$RCR                     0-0-0/w STRC(288)   r     1 KV$RCRLST
     0-0-0/w STRC(1024)  r     1 KV$SSN                     0-0-0/w STRC(512)   r     1 KV$STR
     0-0-0/w STRC(512)   r     1 KV$VDI                     0-0-0/c ACHR        r     1 Y$CHR
     0-0-0/w STRC(512)   r     1 Y$STR


   Procedure KVI$CPYEDTBFR requires 362 words for executable code.
   Procedure KVI$CPYEDTBFR requires 18 words of local(AUTO) storage.

    No errors detected in file KVI$RED.:E05TSI    .
PL6.E3A0      #005=KVI$CPYEDTBFR File=KVI$RED.:E05TSI                            WED 07/30/97 02:05 Page:179  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=KVI$CPYEDTBFR File=KVI$RED.:E05TSI                            WED 07/30/97 02:05 Page:180  
          MINI XREF LISTING

KV$MVD.ORG
       272**DCL       790>>IF        814>>IF
KV$PTR.INPCNDPND
       382**DCL       391--REDEF     395--REDEF
KV$PTR.INPCNDPND.OPRX
       391**DCL       790>>IF        791>>IF        791>>IF        794>>ASSIGN
KV$PTR.LINLST$
       378**DCL       379--REDEF
KV$PTR.MVD$
       377**DCL       790>>IF        814>>IF
KV$PTR.RCRLST$
       379**DCL       791>>IF        791>>IF        791>>IF        794>>ASSIGN    794>>ASSIGN    796>>ASSIGN
KV$PTR.SSN$
       376**DCL       775>>ASSIGN    779>>IF        806>>ASSIGN    817>>IF        818>>ASSIGN    820>>IF
       820>>IF        820>>IF        825>>ASSIGN    827>>ASSIGN    827>>ASSIGN    832>>ASSIGN    832>>ASSIGN
       834>>ASSIGN    834>>ASSIGN    835>>ASSIGN    836>>ASSIGN    837>>ASSIGN    838>>ASSIGN    839>>ASSIGN
       840>>ASSIGN    842>>IF        843>>ASSIGN    843>>ASSIGN    844>>ASSIGN
KV$PTR.STR$
       376**DCL       789>>ASSIGN    799>>ASSIGN    807>>IF        813>>ASSIGN
KV$PTR.VDI$
       376**DCL       835>>ASSIGN
KV$PTR$
       370**DCL       376--IMP-PTR   775>>ASSIGN    779>>IF        789>>ASSIGN    790>>IF        790>>IF
       791>>IF        791>>IF        791>>IF        791>>IF        791>>IF        794>>ASSIGN    794>>ASSIGN
       794>>ASSIGN    796>>ASSIGN    799>>ASSIGN    806>>ASSIGN    807>>IF        813>>ASSIGN    814>>IF
       817>>IF        818>>ASSIGN    820>>IF        820>>IF        820>>IF        825>>ASSIGN    827>>ASSIGN
       827>>ASSIGN    832>>ASSIGN    832>>ASSIGN    834>>ASSIGN    834>>ASSIGN    835>>ASSIGN    835>>ASSIGN
       836>>ASSIGN    837>>ASSIGN    838>>ASSIGN    839>>ASSIGN    840>>ASSIGN    842>>IF        843>>ASSIGN
       843>>ASSIGN    844>>ASSIGN
KV$RCR
       310**DCL       796--ASSIGN
KV$RCR.RCRBYTSIZ
PL6.E3A0      #005=KVI$CPYEDTBFR File=KVI$RED.:E05TSI                            WED 07/30/97 02:05 Page:181  
       310**DCL       797>>ASSIGN
KV$RCRLST.CRTRCR
       343**DCL       791>>IF        791>>IF        794>>ASSIGN
KV$RCRLST.KEYLNG
       346**DCL       796>>ASSIGN
KV$RCRLST.RCR$
       353**DCL       794>>ASSIGN
KV$RCRLST.RCRCNT
       341**DCL       791>>IF
KV$SSN.CLMIS_BYTX
       471**DCL       840<<ASSIGN
KV$SSN.LSTEDTBFRSTRID
       432**DCL       779>>IF
KV$SSN.REDBFR.EDTLOWX
       441**DCL       839<<ASSIGN    844<<ASSIGN
KV$SSN.REDBFR.INSLOWX
       442**DCL       834<<ASSIGN
KV$SSN.REDBFR.INSMODX
       442**DCL       838<<ASSIGN
KV$SSN.REDBFR.NXTX
       440**DCL       837<<ASSIGN
KV$SSN.REDBFR__.ADR$
       467**DCL       820>>IF        827>>ASSIGN    832>>ASSIGN
KV$SSN.REDBFR__.BFRBYTSIZ
       468**DCL       820>>IF
KV$SSN.REDBFR__.BYTX
       467**DCL       820>>IF        827>>ASSIGN    832>>ASSIGN    834>>ASSIGN    835>>ASSIGN    836>>ASSIGN
       843>>ASSIGN
KV$SSN.REDBFR__.DATBYTSIZ
       467**DCL       825<<ASSIGN
KV$SSN.REDRSPCNT
       427**DCL       428--REDEF
KV$SSN.RE_REDCLM
       471**DCL       806<<ASSIGN    817>>IF        818<<ASSIGN    842>>IF        843>>ASSIGN
KV$SSN.STR$
       421**DCL       775>>ASSIGN
PL6.E3A0      #005=KVI$CPYEDTBFR File=KVI$RED.:E05TSI                            WED 07/30/97 02:05 Page:182  
KV$STR.EDTBFR__
       522**DCL       789>>ASSIGN
KV$STR.MAXRCRBYTSIZ
       555**DCL       807>>IF        813>>ASSIGN
KV$VDI.RE_DSPLOWX
       703**DCL       835<<ASSIGN
KVI$EDTX_TO_VRTCLM
       185**DCL-ENT   841--CALL
KVI$SCPVRTCLMLOWX
       186**DCL-ENT   845--CALL
KVS$GETREDBFR
       187**DCL-ENT   824--CALL
SUBCOMMON
       801**LABEL     781--GOTO
Y$CHR
       726**DCL       827<<ASSIGN    832<<ASSIGN    832>>ASSIGN
Y$STR.EDTBFR__
       609**DCL       780>>ASSIGN
Y$STR.EDTBFR__.ADR$
       611**DCL       801>>IF
Y$STR.ID
       645**DCL       779>>IF
Y$STR.LNK$
       585**DCL       783>>ASSIGN
Y$STR.RE_REDCLM
       615**DCL       805>>ASSIGN    806>>ASSIGN    814>>IF
Y@EDTBFR__
       761**DCL       780<<ASSIGN    789<<ASSIGN
Y@EDTBFR__.ADR$
       765**DCL       795<<ASSIGN    832>>ASSIGN
Y@EDTBFR__.BYTX
       765**DCL       796<<ASSIGN    832>>ASSIGN
Y@EDTBFR__.DATBYTSIZ
       765**DCL       797<<ASSIGN    805>>ASSIGN    826>>IF        827>>ASSIGN    827>>ASSIGN    830>>ASSIGN
Y@TMPSTR$
       738**DCL       585--IMP-PTR   775<<ASSIGN    776>>DOWHILE   779>>IF        780>>ASSIGN    783<<ASSIGN
PL6.E3A0      #005=KVI$CPYEDTBFR File=KVI$RED.:E05TSI                            WED 07/30/97 02:05 Page:183  
       783>>ASSIGN    794<<ASSIGN    795>>ASSIGN    797>>ASSIGN    799<<ASSIGN    801>>IF        805>>ASSIGN
       806>>ASSIGN    814>>IF        841<>CALL
Y@TMPWRD
       734**DCL       726--IMP-SIZ   805<<ASSIGN    807>>IF        813<<ASSIGN    815<<ASSIGN    815>>ASSIGN
       817>>IF        818>>ASSIGN    820>>IF        824<>CALL      825>>ASSIGN    826>>IF        827>>ASSIGN
       827>>ASSIGN    830<<ASSIGN    832>>ASSIGN    832>>ASSIGN    836<<ASSIGN    836>>ASSIGN    837>>ASSIGN
       838>>ASSIGN    839>>ASSIGN    843<<ASSIGN    844>>ASSIGN
