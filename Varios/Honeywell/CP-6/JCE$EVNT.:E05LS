VERSION E05

PL6.E3A0      #001=JCE$EVNT File=JCE$EVNT.:E05TSI                                TUE 07/29/97 23:17 Page:1    
        1        1        /*M* JCE$EVNT   Event level routines for SLUG ghost */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DTI=2,DCI=4,THI=2,CSI=2,ECI=2,STI=2,IND=2,ENI=2 */
        8        8        /**/
        9        9        /**/
       10       10        JCE$EVNT: PROC ASYNC;
       11       11        /**/
       12       12        /**/
       13       13        %INCLUDE CP_6;
       14       94        %INCLUDE JC_SUBS_C;
       15      107        %INCLUDE JG_EVID_C;
       16      332        %INCLUDE JM_SCODE_C;
       17      359        %INCLUDE KL_DATA_R;
       18      823        /**/
       19      824        %B$TCB;
       20      827        %B$NWIO;
       21      912        %B$ALT;
       22      920        %B$EXCFR;
       23      938        %SUB_EXC;
       24      985        /**/
       25      986    1   DCL M$ACCTLG DCB;
       26      987        %FPT_TRUNC (DCB = M$ACCTLG, STCLASS = CONSTANT);
       27     1001        /**/
       28     1002    1   DCL STK$ PTR;
       29     1003    1   DCL RENV UBIN WORD;
       30     1004    1   DCL JC_MARS UBIN SYMREF;
       31     1005    1   DCL KL_MSGTYP CHAR(8) SYMREF;
       32     1006    1   DCL KL_STATION CHAR(8) SYMREF;
       33     1007    1   DCL B$TCB$ PTR SYMREF;
       34     1008    1   DCL JCE$EVENT ENTRY(1);
       35     1009    1   DCL JMM$EVENT ENTRY(2);
       36     1010    1   DCL FOI$CRASH ENTRY(3) ALTRET;
       37     1011        /**/
PL6.E3A0      #001=JCE$EVNT File=JCE$EVNT.:E05TSI                                TUE 07/29/97 23:17 Page:2    
       38     1012        %SUB F_JC='1203'O;
       39     1013        %SUB M_E='05'O;
       40     1014        /**/
       41     1015        %VLP_STATION (FPTN=JC_RPLYSTA,STCLASS="STATIC SYMDEF");
       42     1042        %EJECT;
PL6.E3A0      #001=JCE$EVNT File=JCE$EVNT.:E05TSI                                TUE 07/29/97 23:17 Page:3    
       43     1043    1           STK$=B$TCB$->B$TCB.STK$;
       44     1044    1           RENV=0;
       45     1045    1           CALL M$SENV ALTRET (NORENV);
       46     1046    1           RENV=1;
       47     1047    1   NORENV: ;
       48     1048    1           IF STK$ -> B$EXCFR.SUBC = %SUBC_JRNLERR#
       49     1049    2             THEN DO;
       50     1050    2               CALL M$TRUNC (FPT_TRUNC);
       51     1051    2               END;
       52     1052    2             ELSE DO CASE (STK$->B$NWIO.EVID);
       53     1053    2               CASE(JM_CSRD#);        /* Station MBS on CG/CSCG read complete    */
       54     1054    2                 CALL JMM$EVENT (STK$,STK$->B$NWIO.EVID);
       55     1055    2               CASE(JC_CSRD#);        /* Station SLUG on CG/CSCG read complete   */
       56     1056    2                 JC_RPLYSTA.STATION#=STK$->B$NWIO.CGPARM.STATION#;
       57     1057    2                 JC_RPLYSTA.MSGTYP# = STK$->B$NWIO.CGPARM.MSGTYP#;
       58     1058    2                 JC_MARS = STK$->B$NWIO.ARS;
       59     1059    2                 CALL JCE$EVENT(JCQEV_CSRD#);
       60     1060    2               CASE(KL_FERD#);   /* Station HLPADMIN on CG/HLPCG read complete   */
       61     1061    2                 KL_STATION = STK$->B$NWIO.CGPARM.STATION#;
       62     1062    2                 KL_MSGTYP = STK$->B$NWIO.CGPARM.MSGTYP#;
       63     1063    2                 KL_MARS = STK$->B$NWIO.ARS;
       64     1064    2                 CALL JCE$EVENT(JCQEV_HLPRD#);
       65     1065    2               END;
       66     1066    1           IF RENV~=0 THEN CALL M$RENV;
       67     1067    1           RETURN;
       68     1068        %EJECT;
PL6.E3A0      #001=JCE$EVNT File=JCE$EVNT.:E05TSI                                TUE 07/29/97 23:17 Page:4    
       69     1069        /*F* NAME:         JCE$XCON
       70     1070             PURPOSE:      To SCREECH when SLUG aborts
       71     1071             DESCRIPTION:  EXIT CONTROL receiver for the SLUG ghost.
       72     1072                           Pulls the rug on the system by an M$SCREECH.
       73     1073        */
       74     1074    1   JCE$XCON: ENTRY ASYNC;
       75     1075        /**/
       76     1076    1           CALL FOI$CRASH (%S$SLUGX,F_JC,M_E);
       77     1077        /*S* SCREECH_CODE: JCE-S$SLUGX
       78     1078             TYPE:         SCREECH
       79     1079             MESSAGE:      SLUG has aborted
       80     1080             REMARKS:      Reported when the SLUG ghost receives
       81     1081                           exit control, indicating that he aborted.
       82     1082                           The reason for the abort will be found in
       83     1083                           the XCON frame in SLUG's TCB. */
       84     1084        /**/
       85     1085    1   END;
       86     1086        /**/
       87     1087        /**/
       88     1088        %EOD;

PL6.E3A0      #001=JCE$EVNT File=JCE$EVNT.:E05TSI                                TUE 07/29/97 23:17 Page:5    
--  Include file information  --

   KL_NETWORK_M.:E05TOU  is referenced.
   OC$MESSHD_C.:E05TOU  is referenced.
   KL_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   JM_SCODE_C.:E05TOU  is referenced.
   JG_EVID_C.:E05TOU  is referenced.
   JC_SUBS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure JCE$EVNT.

   Procedure JCE$EVNT requires 75 words for executable code.
   Procedure JCE$EVNT requires 8 words of local(AUTO) storage.

PL6.E3A0      #001=JCE$EVNT File=JCE$EVNT.:E05TSI                                TUE 07/29/97 23:17 Page:6    

 Object Unit name= JCE$EVNT                                   File name= JCE$EVNT.:E05TOU
 UTS= JUL 29 '97 23:17:20.48 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$HLP
    2   DCB   even  none     0      0  M$ACCTLG
    3  RoData even  UTS      4      4  JCE$EVNT
    4   Data  even  none     8     10  JCE$EVNT
    5   Proc  even  none    75    113  JCE$EVNT
    6  RoData even  none     8     10  JCE$EVNT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     5      0   yes            yes     Async       0  JCE$EVNT
     5    104                  yes     Async       0  JCE$XCON

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    4      0  JC_RPLYSTA
PL6.E3A0      #001=JCE$EVNT File=JCE$EVNT.:E05TSI                                TUE 07/29/97 23:17 Page:7    

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 JMM$EVENT
         yes           Std       1 JCE$EVENT
 yes     yes           Std       3 FOI$CRASH
                       nStd      0 X66_AAUTO
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  M$HLP                                 KL_MARS
     M$ACCTLG                              JC_MARS                               KL_MSGTYP
     KL_STATION                            B$TCB$                                B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=JCE$EVNT File=JCE$EVNT.:E05TSI                                TUE 07/29/97 23:17 Page:8    


        1        1        /*M* JCE$EVNT   Event level routines for SLUG ghost */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DTI=2,DCI=4,THI=2,CSI=2,ECI=2,STI=2,IND=2,ENI=2 */
        8        8        /**/
        9        9        /**/
       10       10        JCE$EVNT: PROC ASYNC;

     10  5 000000   000000 700200 xent  JCE$EVNT     TSX0  ! X66_AAUTO
         5 000001   000010 000000                    ZERO    8,0

       11       11        /**/
       12       12        /**/
       13       13        %INCLUDE CP_6;
       14       94        %INCLUDE JC_SUBS_C;
       15      107        %INCLUDE JG_EVID_C;
       16      332        %INCLUDE JM_SCODE_C;
       17      359        %INCLUDE KL_DATA_R;
       18      823        /**/
       19      824        %B$TCB;
       20      827        %B$NWIO;
       21      912        %B$ALT;
       22      920        %B$EXCFR;
       23      938        %SUB_EXC;
       24      985        /**/
       25      986    1   DCL M$ACCTLG DCB;
       26      987        %FPT_TRUNC (DCB = M$ACCTLG, STCLASS = CONSTANT);
       27     1001        /**/
       28     1002    1   DCL STK$ PTR;
       29     1003    1   DCL RENV UBIN WORD;
       30     1004    1   DCL JC_MARS UBIN SYMREF;
       31     1005    1   DCL KL_MSGTYP CHAR(8) SYMREF;
       32     1006    1   DCL KL_STATION CHAR(8) SYMREF;
PL6.E3A0      #001=JCE$EVNT File=JCE$EVNT.:E05TSI                                TUE 07/29/97 23:17 Page:9    
       33     1007    1   DCL B$TCB$ PTR SYMREF;
       34     1008    1   DCL JCE$EVENT ENTRY(1);
       35     1009    1   DCL JMM$EVENT ENTRY(2);
       36     1010    1   DCL FOI$CRASH ENTRY(3) ALTRET;
       37     1011        /**/
       38     1012        %SUB F_JC='1203'O;
       39     1013        %SUB M_E='05'O;
       40     1014        /**/
       41     1015        %VLP_STATION (FPTN=JC_RPLYSTA,STCLASS="STATIC SYMDEF");
       42     1042        %EJECT;
PL6.E3A0      #001=JCE$EVNT File=JCE$EVNT.:E05TSI                                TUE 07/29/97 23:17 Page:10   
       43     1043    1           STK$=B$TCB$->B$TCB.STK$;

   1043  5 000002   000000 470400 xsym               LDP0    B$TCB$
         5 000003   000001 236100                    LDQ     1,,PR0
         5 000004   200003 756100                    STQ     STK$,,AUTO

       44     1044    1           RENV=0;

   1044  5 000005   200004 450100                    STZ     RENV,,AUTO

       45     1045    1           CALL M$SENV ALTRET (NORENV);

   1045  5 000006   410011 713400                    CLIMB   alt,+4105
         5 000007   000000 401760                    pmme    nvectors=0
         5 000010   000013 702000 5                  TSX2    NORENV

       46     1046    1           RENV=1;

   1046  5 000011   000001 235007                    LDA     1,DL
         5 000012   200004 755100                    STA     RENV,,AUTO

   1046  5 000013                       NORENV       null
       47     1047    1   NORENV: ;
       48     1048    1           IF STK$ -> B$EXCFR.SUBC = %SUBC_JRNLERR#

   1048  5 000013   200003 470500                    LDP0    STK$,,AUTO
         5 000014   000100 720100                    LXL0    64,,PR0
         5 000015   000003 100003                    CMPX0   3,DU
         5 000016   000023 601000 5                  TNZ     s:1052

       49     1049    2             THEN DO;

       50     1050    2               CALL M$TRUNC (FPT_TRUNC);

   1050  5 000017   000000 630400 3                  EPPR0   FPT_TRUNC
         5 000020   050003 713400                    CLIMB   20483
         5 000021   400000 401760                    pmme    nvectors=1
PL6.E3A0      #001=JCE$EVNT File=JCE$EVNT.:E05TSI                                TUE 07/29/97 23:17 Page:11   

       51     1051    2               END;

   1051  5 000022   000077 710000 5                  TRA     s:1066

       52     1052    2             ELSE DO CASE (STK$->B$NWIO.EVID);

   1052  5 000023   000101 235100                    LDA     65,,PR0
         5 000024   000005 115007                    CMPA    5,DL
         5 000025   000027 602005 5                  TNC     s:1052+4,AL
         5 000026   000077 710000 5                  TRA     s:1066
         5 000027   000077 710000 5                  TRA     s:1066
         5 000030   000046 710000 5                  TRA     s:1056
         5 000031   000063 710000 5                  TRA     s:1061
         5 000032   000077 710000 5                  TRA     s:1066
         5 000033   000034 710000 5                  TRA     s:1054

       53     1053    2               CASE(JM_CSRD#);        /* Station MBS on CG/CSCG read complete    */

       54     1054    2                 CALL JMM$EVENT (STK$,STK$->B$NWIO.EVID);

   1054  5 000034   200003 236100                    LDQ     STK$,,AUTO
         5 000035   000101 036003                    ADLQ    65,DU
         5 000036   200007 756100                    STQ     RENV+3,,AUTO
         5 000037   200003 631500                    EPPR1   STK$,,AUTO
         5 000040   200006 451500                    STP1    RENV+2,,AUTO
         5 000041   200006 630500                    EPPR0   RENV+2,,AUTO
         5 000042   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000043   000000 701000 xent               TSX1    JMM$EVENT
         5 000044   000000 011000                    NOP     0
         5 000045   000077 710000 5                  TRA     s:1066

       55     1055    2               CASE(JC_CSRD#);        /* Station SLUG on CG/CSCG read complete   */

       56     1056    2                 JC_RPLYSTA.STATION#=STK$->B$NWIO.CGPARM.STATION#;

   1056  5 000046   040000 100500                    MLR     fill='040'O
PL6.E3A0      #001=JCE$EVNT File=JCE$EVNT.:E05TSI                                TUE 07/29/97 23:17 Page:12   
         5 000047   000107 000010                    ADSC9   71,,PR0                  cn=0,n=8
         5 000050   000000 000010 4                  ADSC9   JC_RPLYSTA               cn=0,n=8

       57     1057    2                 JC_RPLYSTA.MSGTYP# = STK$->B$NWIO.CGPARM.MSGTYP#;

   1057  5 000051   040000 100500                    MLR     fill='040'O
         5 000052   000111 000010                    ADSC9   73,,PR0                  cn=0,n=8
         5 000053   000002 000010 4                  ADSC9   JC_RPLYSTA+2             cn=0,n=8

       58     1058    2                 JC_MARS = STK$->B$NWIO.ARS;

   1058  5 000054   000105 235100                    LDA     69,,PR0
         5 000055   000000 755000 xsym               STA     JC_MARS

       59     1059    2                 CALL JCE$EVENT(JCQEV_CSRD#);

   1059  5 000056   000000 630400 6                  EPPR0   0
         5 000057   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 000060   000000 701000 xent               TSX1    JCE$EVENT
         5 000061   000000 011000                    NOP     0
         5 000062   000077 710000 5                  TRA     s:1066

       60     1060    2               CASE(KL_FERD#);   /* Station HLPADMIN on CG/HLPCG read complete   */

       61     1061    2                 KL_STATION = STK$->B$NWIO.CGPARM.STATION#;

   1061  5 000063   040000 100500                    MLR     fill='040'O
         5 000064   000107 000010                    ADSC9   71,,PR0                  cn=0,n=8
         5 000065   000000 000010 xsym               ADSC9   KL_STATION               cn=0,n=8

       62     1062    2                 KL_MSGTYP = STK$->B$NWIO.CGPARM.MSGTYP#;

   1062  5 000066   040000 100500                    MLR     fill='040'O
         5 000067   000111 000010                    ADSC9   73,,PR0                  cn=0,n=8
         5 000070   000000 000010 xsym               ADSC9   KL_MSGTYP                cn=0,n=8

       63     1063    2                 KL_MARS = STK$->B$NWIO.ARS;
PL6.E3A0      #001=JCE$EVNT File=JCE$EVNT.:E05TSI                                TUE 07/29/97 23:17 Page:13   

   1063  5 000071   000105 235100                    LDA     69,,PR0
         5 000072   000000 755000 xsym               STA     KL_MARS

       64     1064    2                 CALL JCE$EVENT(JCQEV_HLPRD#);

   1064  5 000073   000001 630400 6                  EPPR0   1
         5 000074   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 000075   000000 701000 xent               TSX1    JCE$EVENT
         5 000076   000000 011000                    NOP     0

       65     1065    2               END;

       66     1066    1           IF RENV~=0 THEN CALL M$RENV;

   1066  5 000077   200004 235100                    LDA     RENV,,AUTO
         5 000100   000103 600000 5                  TZE     s:1067

   1066  5 000101   010016 713400                    CLIMB   4110
         5 000102   000000 401760                    pmme    nvectors=0

       67     1067    1           RETURN;

   1067  5 000103   000000 702200 xent               TSX2  ! X66_AARET

       68     1068        %EJECT;
PL6.E3A0      #001=JCE$EVNT File=JCE$EVNT.:E05TSI                                TUE 07/29/97 23:17 Page:14   
       69     1069        /*F* NAME:         JCE$XCON
       70     1070             PURPOSE:      To SCREECH when SLUG aborts
       71     1071             DESCRIPTION:  EXIT CONTROL receiver for the SLUG ghost.
       72     1072                           Pulls the rug on the system by an M$SCREECH.
       73     1073        */
       74     1074    1   JCE$XCON: ENTRY ASYNC;

   1074  5 000104   000000 700200 xent  JCE$XCON     TSX0  ! X66_AAUTO
         5 000105   000010 000000                    ZERO    8,0

       75     1075        /**/
       76     1076    1           CALL FOI$CRASH (%S$SLUGX,F_JC,M_E);

   1076  5 000106   000005 630400 6                  EPPR0   5
         5 000107   000021 631400 xsym               EPPR1   B_VECTNIL+17
         5 000110   000000 701000 xent               TSX1    FOI$CRASH
         5 000111   000000 011000                    NOP     0

       77     1077        /*S* SCREECH_CODE: JCE-S$SLUGX
       78     1078             TYPE:         SCREECH
       79     1079             MESSAGE:      SLUG has aborted
       80     1080             REMARKS:      Reported when the SLUG ghost receives
       81     1081                           exit control, indicating that he aborted.
       82     1082                           The reason for the abort will be found in
       83     1083                           the XCON frame in SLUG's TCB. */
       84     1084        /**/
       85     1085    1   END;

   1085  5 000112   000000 702200 xent               TSX2  ! X66_AARET
       86     1086        /**/
       87     1087        /**/
       88     1088        %EOD;

PL6.E3A0      #001=JCE$EVNT File=JCE$EVNT.:E05TSI                                TUE 07/29/97 23:17 Page:15   
--  Include file information  --

   KL_NETWORK_M.:E05TOU  is referenced.
   OC$MESSHD_C.:E05TOU  is referenced.
   KL_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   JM_SCODE_C.:E05TOU  is referenced.
   JG_EVID_C.:E05TOU  is referenced.
   JC_SUBS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure JCE$EVNT.
PL6.E3A0      #001=JCE$EVNT File=JCE$EVNT.:E05TSI                                TUE 07/29/97 23:17 Page:16   

 **** Variables and constants ****

  ****  Section 003 RoData JCE$EVNT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(144)   r     1 FPT_TRUNC

  ****  Section 004  Data  JCE$EVNT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(288)   r     1 JC_RPLYSTA

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w UBIN        r     1 RENV                       3-0-0/w PTR         r     1 STK$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/w UBIN        r     1 JC_MARS
     0-0-0/w UBIN        r     1 KL_MARS                    0-0-0/c CHAR(8)     r     1 KL_MSGTYP
     0-0-0/c CHAR(8)     r     1 KL_STATION

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

PL6.E3A0      #001=JCE$EVNT File=JCE$EVNT.:E05TSI                                TUE 07/29/97 23:17 Page:17   
     0-0-0/w STRC(2448)  r     1 B$EXCFR                    0-0-0/w STRC(2880)  r     1 B$NWIO
     0-0-0/w STRC(144)   r     1 B$TCB                      0-0-0N  NULL        r     1 M$ACCTLG


   Procedure JCE$EVNT requires 75 words for executable code.
   Procedure JCE$EVNT requires 8 words of local(AUTO) storage.
PL6.E3A0      #001=JCE$EVNT File=JCE$EVNT.:E05TSI                                TUE 07/29/97 23:17 Page:18   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=JCE$EVNT File=JCE$EVNT.:E05TSI                                TUE 07/29/97 23:17 Page:19   
          MINI XREF LISTING

B$ALT.CODE
       914**DCL       914--REDEF     915--REDEF     915--REDEF
B$ALT.ERR.ERR#
       916**DCL       916--REDEF
B$ALT.EVID
       915**DCL       915--REDEF     915--REDEF
B$EXCFR.ASL
       921**DCL       921--REDEF
B$EXCFR.ERR.ERR#
       935**DCL       935--REDEF
B$EXCFR.EVID
       934**DCL       934--REDEF     935--REDEF
B$EXCFR.IR
       922**DCL       922--REDEF
B$EXCFR.PREVSZ
       921**DCL       921--REDEF
B$EXCFR.SUBC
       933**DCL       933--REDEF     934--REDEF     934--REDEF    1048>>IF
B$NWIO.ARS
       837**DCL      1058>>ASSIGN   1063>>ASSIGN
B$NWIO.CGPARM.MSGIDXT
       861**DCL       864--REDEF
B$NWIO.CGPARM.MSGTYP#
       855**DCL      1057>>ASSIGN   1062>>ASSIGN
B$NWIO.CGPARM.STATION#
       855**DCL      1056>>ASSIGN   1061>>ASSIGN
B$NWIO.CODE
       830**DCL       830--REDEF     831--REDEF     831--REDEF
B$NWIO.ERR.ERR#
       832**DCL       832--REDEF
B$NWIO.EVID
       831**DCL       831--REDEF     831--REDEF    1052>>DOCASE   1054<>CALL
PL6.E3A0      #001=JCE$EVNT File=JCE$EVNT.:E05TSI                                TUE 07/29/97 23:17 Page:20   
B$TCB.STK$
       825**DCL      1043>>ASSIGN
B$TCB$
      1007**DCL      1043>>ASSIGN
FOI$CRASH
      1010**DCL-ENT  1076--CALL
FPT_TRUNC
       998**DCL      1050<>CALL
FPT_TRUNC.V
       998**DCL       998--DCLINIT
JCE$EVENT
      1008**DCL-ENT  1059--CALL     1064--CALL
JC_MARS
      1004**DCL      1058<<ASSIGN
JC_RPLYSTA.MSGIDXT
      1037**DCL      1040--REDEF
JC_RPLYSTA.MSGTYP#
      1031**DCL      1057<<ASSIGN
JC_RPLYSTA.STATION#
      1031**DCL      1056<<ASSIGN
JMM$EVENT
      1009**DCL-ENT  1054--CALL
KL_AUTOFAIL.FLAGS
       663**DCL       664--REDEF
KL_AUTOFAIL.MSGID
       659**DCL       660--REDEF
KL_AUTOFAIL.WSN
       666**DCL       667--REDEF
KL_FEMSG.FLAGS
       613**DCL       614--REDEF
KL_FEMSG.MSGID
       609**DCL       610--REDEF
KL_FEMSG.WSN
       616**DCL       617--REDEF
KL_MARS
       586**DCL      1063<<ASSIGN
PL6.E3A0      #001=JCE$EVNT File=JCE$EVNT.:E05TSI                                TUE 07/29/97 23:17 Page:21   
KL_MSGTYP
      1005**DCL      1062<<ASSIGN
KL_NETWORK_BUF.TERMINAL_ID.TERM
       803**DCL       812--REDEF
KL_NETWORK_KEY.KEY.TERMID.TERM
       729**DCL       738--REDEF
KL_RDBF.FEL#
       572**DCL       573--REDEF
KL_STATION
      1006**DCL      1061<<ASSIGN
KL_TMSG.FLAGS
       635**DCL       636--REDEF
KL_TMSG.MSGID
       631**DCL       632--REDEF
KL_TMSG.WSN
       638**DCL       639--REDEF
M$RENV
        78**DCL-ENT  1066--CALL
M$SENV
        78**DCL-ENT  1045--CALL
M$TRUNC
        23**DCL-ENT  1050--CALL
NORENV
      1046**LABEL    1045--CALLALT
RENV
      1003**DCL      1044<<ASSIGN   1046<<ASSIGN   1066>>IF
STK$
      1002**DCL      1043<<ASSIGN   1048>>IF       1052>>DOCASE   1054<>CALL     1054>>CALL     1056>>ASSIGN
      1057>>ASSIGN   1058>>ASSIGN   1061>>ASSIGN   1062>>ASSIGN   1063>>ASSIGN

PL6.E3A0      #002=JCE$EVENT File=JCE$EVNT.:E05TSI                               TUE 07/29/97 23:17 Page:22   
       89        1        /*T***********************************************************/
       90        2        /*T*                                                         */
       91        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       92        4        /*T*                                                         */
       93        5        /*T***********************************************************/
       94        6        JCE$EVENT: PROC(EVID);
       95        7        /*D* NAME:        JCE$EVENT
       96        8             PURPOSE:     To place an event onto SLUG's event queue
       97        9             CALL:        CALL JCE$EVENT(EVID);
       98       10                             where EVID is JCQEV_xxxx# from JC_KEYINS_C and
       99       11                             represents the type of event being queued
      100       12             DESCRIPTION: JCE$EVENT obtains a free event block from the free
      101       13                          chain, fills it in with EVID, and places it at the
      102       14                          tail of SLUG's event queue.                                */
      103       15        /**/
      104       16        /* PARAMETERS */
      105       17        /**/
      106       18    1   DCL EVID UBIN;
      107       19        /**/
      108       20        /* INCLUDES */
      109       21        /**/
      110       22        %INCLUDE JC_MACRO_C;
      111      136        %INCLUDE JC_DATA_R;
      112      174        /**/
      113      175        /* AUTO */
      114      176        /**/
      115      177    1   DCL EV$ PTR;
      116      178        /**/
      117      179        /* BASED */
      118      180        /**/
      119      181        %JC_QEV (FPTN=JC$QEV,STCLASS=BASED);
      120      208        %EJECT;
PL6.E3A0      #002=JCE$EVENT File=JCE$EVNT.:E05TSI                               TUE 07/29/97 23:17 Page:23   
      121      209    2           DO INHIBIT;
      122      210    2             EV$ = JC_FQHD$;
      123      211    2             JC_FQHD$ = EV$->JC$QEV.LNK$;
      124      212    2             EV$->JC$QEV.EVNT = EVID;
      125      213    2             IF JC_EVQCNT=0
      126      214    2               THEN JC_EVQHD$ = EV$;
      127      215    2               ELSE JC_EVQTL$->JC$QEV.LNK$ = EV$;
      128      216    2             JC_EVQTL$ = EV$;
      129      217    2             JC_EVQCNT = JC_EVQCNT+1;
      130      218    2             END;
      131      219    1           RETURN;
      132      220    1   END JCE$EVENT;

PL6.E3A0      #002=JCE$EVENT File=JCE$EVNT.:E05TSI                               TUE 07/29/97 23:17 Page:24   
--  Include file information  --

   JC_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   JC_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure JCE$EVENT.

   Procedure JCE$EVENT requires 22 words for executable code.
   Procedure JCE$EVENT requires 6 words of local(AUTO) storage.

    No errors detected in file JCE$EVNT.:E05TSI    .

PL6.E3A0      #002=JCE$EVENT File=JCE$EVNT.:E05TSI                               TUE 07/29/97 23:17 Page:25   

 Object Unit name= JCE$EVENT                                  File name= JCE$EVNT.:E05TOU
 UTS= JUL 29 '97 23:17:51.04 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    22     26  JCE$EVENT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  JCE$EVENT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     JC_EVQCNT                             JC_EVQHD$                             JC_EVQTL$
     JC_FQHD$
PL6.E3A0      #002=JCE$EVENT File=JCE$EVNT.:E05TSI                               TUE 07/29/97 23:17 Page:26   


       89        1        /*T***********************************************************/
       90        2        /*T*                                                         */
       91        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       92        4        /*T*                                                         */
       93        5        /*T***********************************************************/
       94        6        JCE$EVENT: PROC(EVID);

      6  0 000000   000000 700200 xent  JCE$EVENT    TSX0  ! X66_AUTO_1
         0 000001   000006 000001                    ZERO    6,1

       95        7        /*D* NAME:        JCE$EVENT
       96        8             PURPOSE:     To place an event onto SLUG's event queue
       97        9             CALL:        CALL JCE$EVENT(EVID);
       98       10                             where EVID is JCQEV_xxxx# from JC_KEYINS_C and
       99       11                             represents the type of event being queued
      100       12             DESCRIPTION: JCE$EVENT obtains a free event block from the free
      101       13                          chain, fills it in with EVID, and places it at the
      102       14                          tail of SLUG's event queue.                                */
      103       15        /**/
      104       16        /* PARAMETERS */
      105       17        /**/
      106       18    1   DCL EVID UBIN;
      107       19        /**/
      108       20        /* INCLUDES */
      109       21        /**/
      110       22        %INCLUDE JC_MACRO_C;
      111      136        %INCLUDE JC_DATA_R;
      112      174        /**/
      113      175        /* AUTO */
      114      176        /**/
      115      177    1   DCL EV$ PTR;
      116      178        /**/
      117      179        /* BASED */
      118      180        /**/
      119      181        %JC_QEV (FPTN=JC$QEV,STCLASS=BASED);
      120      208        %EJECT;
PL6.E3A0      #002=JCE$EVENT File=JCE$EVNT.:E05TSI                               TUE 07/29/97 23:17 Page:27   
      121      209    2           DO INHIBIT;

      122      210    2             EV$ = JC_FQHD$;

    210  0 000002   000000 236200 xsym               LDQ   ! JC_FQHD$
         0 000003   200004 756300                    STQ   ! EV$,,AUTO

      123      211    2             JC_FQHD$ = EV$->JC$QEV.LNK$;

    211  0 000004   200004 470700                    LDP0  ! EV$,,AUTO
         0 000005   000001 236300                    LDQ   ! 1,,PR0
         0 000006   000000 756200 xsym               STQ   ! JC_FQHD$

      124      212    2             EV$->JC$QEV.EVNT = EVID;

    212  0 000007   200003 471700                    LDP1  ! @EVID,,AUTO
         0 000010   100000 235300                    LDA   ! 0,,PR1
         0 000011   000000 755300                    STA   ! 0,,PR0

      125      213    2             IF JC_EVQCNT=0

    213  0 000012   000000 235200 xsym               LDA   ! JC_EVQCNT
         0 000013   000017 601200 0                  TNZ   ! s:215

      126      214    2               THEN JC_EVQHD$ = EV$;

    214  0 000014   200004 236300                    LDQ   ! EV$,,AUTO
         0 000015   000000 756200 xsym               STQ   ! JC_EVQHD$
         0 000016   000022 710200 0                  TRA   ! s:216

      127      215    2               ELSE JC_EVQTL$->JC$QEV.LNK$ = EV$;

    215  0 000017   200004 236300                    LDQ   ! EV$,,AUTO
         0 000020   000000 473600 xsym               LDP3  ! JC_EVQTL$
         0 000021   300001 756300                    STQ   ! 1,,PR3

      128      216    2             JC_EVQTL$ = EV$;
PL6.E3A0      #002=JCE$EVENT File=JCE$EVNT.:E05TSI                               TUE 07/29/97 23:17 Page:28   

    216  0 000022   000000 756200 xsym               STQ   ! JC_EVQTL$

      129      217    2             JC_EVQCNT = JC_EVQCNT+1;

    217  0 000023   000001 035207                    ADLA  ! 1,DL
         0 000024   000000 755200 xsym               STA   ! JC_EVQCNT

      130      218    2             END;

      131      219    1           RETURN;

    219  0 000025   000000 702200 xent               TSX2  ! X66_ARET
      132      220    1   END JCE$EVENT;

PL6.E3A0      #002=JCE$EVENT File=JCE$EVNT.:E05TSI                               TUE 07/29/97 23:17 Page:29   
--  Include file information  --

   JC_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   JC_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure JCE$EVENT.
PL6.E3A0      #002=JCE$EVENT File=JCE$EVNT.:E05TSI                               TUE 07/29/97 23:17 Page:30   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @EVID                      4-0-0/w PTR         r     1 EV$
    *0-0-0/w UBIN        r     1 EVID

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 JC_EVQCNT                  0-0-0/w PTR         r     1 JC_EVQHD$
     0-0-0/w PTR         r     1 JC_EVQTL$                  0-0-0/w PTR         r     1 JC_FQHD$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(360)   r     1 JC$QEV


   Procedure JCE$EVENT requires 22 words for executable code.
   Procedure JCE$EVENT requires 6 words of local(AUTO) storage.

    No errors detected in file JCE$EVNT.:E05TSI    .
PL6.E3A0      #002=JCE$EVENT File=JCE$EVNT.:E05TSI                               TUE 07/29/97 23:17 Page:31   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=JCE$EVENT File=JCE$EVNT.:E05TSI                               TUE 07/29/97 23:17 Page:32   
          MINI XREF LISTING

EV$
       177**DCL       210<<ASSIGN    211>>ASSIGN    212>>ASSIGN    214>>ASSIGN    215>>ASSIGN    216>>ASSIGN
EVID
        18**DCL         6--PROC      212>>ASSIGN
JC$QEV.EVNT
       199**DCL       212<<ASSIGN
JC$QEV.LNK$
       202**DCL       211>>ASSIGN    215<<ASSIGN
JC_EVQCNT
       144**DCL       213>>IF        217<<ASSIGN    217>>ASSIGN
JC_EVQHD$
       173**DCL       214<<ASSIGN
JC_EVQTL$
       173**DCL       215>>ASSIGN    216<<ASSIGN
JC_FQHD$
       173**DCL       210>>ASSIGN    211<<ASSIGN
