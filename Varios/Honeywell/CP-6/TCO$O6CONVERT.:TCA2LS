VERSION A02

 14:22 NOV 16 '97 TCO$O6CONVERT                            TCO$O6CONVERT         Page 1
         1  $COM*M* TCO$O6CONVERT   APL source for O6CONVERT program
         2  $COM*T***********************************************************
         3  $COM*T*                                                         *
         4  $COM*T* Copyright (c) Bull HN Information Systems Inc., 1997    *
         5  $COM*T*                                                         *
         6  $COM*T***********************************************************
         7  $COM
         8  $COM    This source is derived from VDHWS.MAGHOST
         9  $COM
        10        $QIO_0
        11        $QPP_10
        12        $QCT_1E-13
        13        $QPW_80
        14        $QLX_'VDHDATA'
        15      " Z_N BITHEX Y
        16  [1]  $COM Converts bit vector to hex representation vector
        17  [2]   $GO($QNC 'N')/3 $DMD N_1
        18  [3]   Z_,'0123456789ABCDEF'[2$DCD$TPS(($MAX($RY)%4),4)$RY,0 0 0 0]"
        19      " Z_BITINT Y
        20  [1]  $COM Converts bit vector into an integer
        21  [2]   Z_2$DCDY"
        22      " Z_X CHRBIT Y
        23  [1]  $COM Converts charbyte vector to bit vector of length X, from either end
        24  [2]   Z_X$TAK1 1 $QCVT Y"
        25      " Z_N CHRHEX Y
        26  [1]  $COM Converts charbyte vector to hex representation vector
        27  [2]   $GO($QNC 'N')/3 $DMD N_1
        28  [3]   Z_,'0123456789ABCDEF'[$TPS16 16$ECD3 9 $QCVT Y]"
        29      " Z_CHRINT Y
        30  [1]  $COM Converts charbyte vector to integer
        31  [2]   Z_512$DCD3 9 $QCVT Y"
        32      " Z_CHROCT Y
        33  [1]  $COM Converts charbyte vector to octal representation vector
        34  [2]   Z_,'01234567'[$TPS8 8 8$ECD3 9 $QCVT Y]"
        35      " CLOSE
        36  [1]   $QFCLOSE $QFNUMS
        37  [2]   _$QEX 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' $QNL 2"

 14:22 NOV 16 '97 TCO$O6CONVERT                            TCO$O6CONVERT         Page 2
        38      " DUMPRELOC;I;V;N;O;Z
        39  [1]   N_$RV_($QSSS R TAG),$RR $DMD I_0
        40  [2]  LOOP:$GO(N$LEI_I+1)/DONE
        41  [3]   Z_R[V[I$-1]+$I$-/V[I$-0 1]]
        42  [4]   O_B[I$-1]+512$DCD$QAV$IZ[4 5]
        43  [5]   (2 INTOCT O),': ',CHROCT Z
        44  [6]   $GOLOOP
        45  [7]  DONE:"
        46      " EMIT Y
        47  [1]  $COM Writes the record Y on the output stream, initializing if necessary
        48  [2]   $GO($QNC 'OFID')/3 $DMD Y $DMD $GO0
        49  [3]   $GO(ostream$E$QFNUMS)/OK $DMD (OFID,',CREATE,NEWFILE')$QFOPEN ostream
        50  [4]  OK:Y $QFAPPEND ostream '' 3 $DMD $GOtrace$DRP0 $DMD Y"
        51      " EMITDATA Y;X;K
        52  [1]  $COM Emit data defs for offsets PTBL[Y[0];] thru PTBL[Y[1];]
        53  [2]   (X Y)_Y $DMD $GO(PTBL[Y;1]=0)/0
        54  [3]   Y_PTBL[Y;1] $DMD Y_Y+~(Y+1)$EPTBL[;1] $DMD K_1+Y$-PTBL[X;1]
        55  [4]   EMITVAR V[(16#PTBL[X;1])+$I16#K]"
        56      " EMITLBL Y;I;T
        57  [1]  $COM Emits a label for variable Y
        58  [2]   I_VTBL[;0]$IY $DMD $GO(0=VTBL[I;2])$DRPL1
        59  [3]   T_TOEXTERNAL TOLOWER VAR1 -10000+Y $DMD $GOL2
        60  [4]  L1:T_TOEXTERNAL TOLOWER NAME VTBL[I;0]
        61  [5]  L2:$GO(T$EQVprevlbl)/0 $DMD prevlbl_T
        62  [6]   EMIT ' ' $DMD $GO(VTBL[I;4]=0)/L3 $DMD EMIT 'def(',T,')' $DMD $GOL4
        63  [7]  L3:EMIT T,':'
        64  [8]  L4:$GO(1=Y+.=VTBL[;0])/0
        65  [9]   VTBL[I;0]_$-VTBL[I;0] $COM horrid hack to make dup lvl>1 names work
        66      "
        67      " EMITREF Y;I
        68  [1]  $COM Emits a reference for variable Y, or a dummy variable if needed
        69  [2]   $GO(Y$LE0)/L1
        70  [3]   EMIT '        long    $R$R',$FMT4 INTHEX Y $DMD $GO0
        71  [4]  L1:I_$-Y
        72  [5]   EMIT '        long    ',TOEXTERNAL TOLOWER NAME VTBL[I;0]"
        73      " EMITVAR Y;B;W;N;I;Q;Z
        74  [1]  $COM Emits data initializers for bit vector Y

 14:22 NOV 16 '97 TCO$O6CONVERT                            TCO$O6CONVERT         Page 3
        75  [2]   $GO(0=$RY)/0 $DMD Z_-1
        76  [3]   B_'0x????,0x????,0x????,0x????,0x????,0x????,0x????,0x????'
        77  [4]   W_(B='?')/$I$RB $DMD I_0 $DMD N_$RY
        78  [5]  LOOP:B[($RQ)$TAKW]_Q_32 BITHEX Y[I+$I128$MINN]
        79  [6]   $GO((Z=0)$OR0$NE8|Z_Z+1)/DOIT $DMD EMIT ' ' $DMD $QQ_'.'
        80  [7]  DOIT:EMIT '        short   ',(($RB)$MIN-1+7#$MAXN%16)$TAKB
        81  [8]   I_I+128 $DMD $GO(0<N_N$-128)/LOOP"
        82      " GETACTIONS;K;M;T;L
        83  [1]  $COM Builds ATBL: N-by-4 array of type,idx1,idx2,misc quads
        84  [2]   L_+/$"($ENCPTBL[;1])<$"VTBL[;1]
        85  [3]   ATBL_('L',L,[0.5]L),VTBL[;0] $COM build label entries
        86  [4]   K_(PTBL[;3]=17920)/$I1$TAK$RPTBL
        87  [5]   T_BITINT$"$ENC[1]V[(16#PTBL[K$-1;1])$SC.+$I32]
        88  [6]   M_('R',K$SC.+-1 0),VTBL[;1]$IT
        89  [7]   M[;3]_$-M[;3]#M[;3]$NE1$TAK$RVTBL $COM refs to known names
        90  [8]   M[K;3]_T[K_(0=M[;3])/$I$RT] $COM refs to unknown names
        91  [9]   ATBL_ATBL,[0]M $COM append ref entries
        92  [10]  K_(1$TAK$RPTBL)$R1 $DMD K[ATBL[;1 2]]_0
        93  [11]  M_(K&0=-1$REVK)/$I$RK $DMD M_M$-M$EL+1
        94  [12]  M_M,[0.5](K&0=1$REVK)/$I$RK
        95  [13]  ATBL_ATBL,[0]'D',M,0 $COM append data chunk entries
        96  [14]  ATBL_ATBL[$GUATBL[;1];] $COM sort by offset
        97      "
        98      " Z_FUDGE Y
        99  [1]   Z_Y $DMD Z[(Z='$_')/$I$RZ]_'_'"
       100      " GETPROG;P;X;K;Q;T
       101  [1]  $COM Builds PTBL, which encodes info about prog (relocation) records
       102  [2]   GETRECORDS 10 $COM read all prog records
       103  [3]  $COM PTBL is an N-by-4 array of index,offset,bytsiz,tag quads
       104  [4]  $COM index is byte index into R10 vector, offset is load offset in words
       105  [5]  $COM heuristics are used to find the reloc items; looping takes too long
       106  [6]   P_$DSC,/$QSSS$"($ENC$ENCR10),$"$ENC$"OCTCHR$"tags
       107  [7]   P_UNIQ(~#4|P)/P $COM delete errors and dups, then sort
       108  [8]   X_((1$DRPP)$--1$DRPP),($RR10)$--1$TAKP
       109  [9]   $GO(16&.$GEX)/MORE $COM sanity check
       110  [10]  'GETPROG heuristics bad.  I quit!' $DMD $GO0
       111  [11] MORE:K_$MINOCTINT$"tags $COM get halfword integer encoding of tags

 14:22 NOV 16 '97 TCO$O6CONVERT                            TCO$O6CONVERT         Page 4
       112  [12]  K_K$IT_$MINCHRINT R10[Q_0 1$SC.+P] $COM get tag encodings and class
       113  [13]  K_4 4 4 2 4 4[K] $COM index into reloc item where offset (disp) is located
       114  [14]  K_$MINCHRINT R10[Q+($RQ)$RK] $COM here's raw offsets
       115  [15]  K_K+PROGBASES[-1++/[0]P10$SC.$LEP] $COM corrected
       116  [16]  PTBL_P,[1]K,[1]X,[0.5]T"
       117      " Z_GETREC Y
       118  [1]  $COM Given octal representation of a key, reads and returns the record
       119  [2]   Z_$QFREAD file(OCTCHR Y)0 3"
       120      " GETRECORDS Y;R;N;I;V;P
       121  [1]  $COM Reads and concatenates all records of the given type
       122  [2]   N_$RV_$XEC'K',$FMTY $DMD I_-1 $DMD R_'' $DMD P_0
       123  [3]  LOOP:$GO(N=I_I+1)/DONE $DMD R_R,GETREC$DSCV[I] $DMD P_P,$RR $DMD $GOLOOP
       124  [4]  DONE:$XEC'R',($FMTY),'_R' $DMD $XEC'P',($FMTY),'_-1$DRP P'"
       125      " GETVARS;Q;V
       126  [1]  $COM Builds VTBL, which encodes info about debug variables
       127  [2]   GETRECORDS 1 $COM read all externally defined name records
       128  [3]   GETRECORDS 6 $COM read all SYMDEF records
       129  [4]   GETRECORDS 15 $COM read all debug name table records
       130  [5]   GETRECORDS 14 $COM read all debug variable table records
       131  [6]  $COM VTBL is an N-by-5 array of name,offset,bytsiz,level,symdef quints
       132  [7]   VTBL_0 5$R0 $DMD $GO(0=$RR6)/L14
       133  [8]   R6_$TPS((($RR6)%8),8)$RR6
       134  [9]   V_10000+512$DCD$QAV$IR6[4 5;] $COM get npointers
       135  [10]  V_V,[0.5]512$DCD$QAV$IR6[2 3;] $COM laminate the offsets
       136  [11]  V_V,((1$TAK$RV),3)$R0 1 1 $COM laminate bytsiz,level,symdef
       137  [12]  VTBL_VTBL,[0]V
       138  [13] L14:$GO(0=$RR14)/0
       139  [14]  R14_$TPS((0.05#$RR14),20)$RR14
       140  [15]  V_512$DCD$QAV$IR14[18 19;] $COM get npointers
       141  [16]  Q_(2 INTCHR$"$R$"Q),$"Q_VAR$"V
       142  [17]  V_V,[0.5]512$DCD$QAV$IR14[0 1;] $COM laminate the offsets
       143  [18]  V_V,512$DCD$QAV$IR14[4 5;] $COM laminate the raw sizes
       144  [19]  V_V,$MIN($QAV$IR14[6;])%8 $COM laminate levels
       145  [20]  V_V,0$NE$DSC,/$R$"$QSSS$"($ENC$ENCR1),$"$ENC$"Q $COM symdefs
       146  [21]  V[;2]_$MIN0.125#7+V[;2]#256>$QAV$IR14[7;] $COM make bytsiz
       147  [22]  VTBL_V,[0]VTBL
       148  [23]  VTBL_VTBL[$GUVTBL[;1];] $COM sort by offset

 14:22 NOV 16 '97 TCO$O6CONVERT                            TCO$O6CONVERT         Page 5
       149      "
       150      " Z_X INTCHR Y
       151  [1]  $COM Converts integer Y into X-byte character vector
       152  [2]   $GO(0=$QNC 'X')$DRP3 $DMD X_1
       153  [3]   Z_($-X)$TAK2 36 $QCVT(X$R0),Y+0"
       154      " Z_N INTHEX Y
       155  [1]  $COM Converts integer to hex representation vector
       156  [2]   $GO($QNC 'N')/3 $DMD N_1
       157  [3]   Z_,'0123456789ABCDEF'[((N#2)$R16)$ECDY]"
       158      " Z_N INTOCT Y
       159  [1]  $COM Converts integer to octal representation vector
       160  [2]   $GO($QNC 'N')/3 $DMD N_1
       161  [3]   Z_,'01234567'[((N#3)$R8)$ECDY]"
       162      " MAKEVARS;F;N;I;Z;E
       163  [1]  $COM Emits everything needed to define all data for the module
       164  [2]   EMIT '        include(m4$_asm.h)'
       165  [3]   EMIT TOEXTERNAL '        fname(',(F_TOLOWER 1$DRPOFID),'.s)'
       166  [4]   EMIT '        text'
       167  [5]   EMIT '        even'
       168  [6]   EMIT ' '
       169  [7]   EMIT TOEXTERNAL 'def(',F,')'
       170  [8]   V_(16#2+PTBL[-1+N_1$TAK$RPTBL;1])$RZ_0 $COM init data var
       171  [9]   I_-1 $DMD E_OCTINT$"tags $COM provide this for RELOCATE
       172  [10] L1:$GO(N$LEI_I+1)/L2
       173  [11]  $GO(trace$OR0$NE25|Z_Z+1)/OK $DMD $QQ_($FMTZ),' '
       174  [12] OK:(16#PTBL[I;1])RELOCATE I $DMD $GOL1
       175  [13] L2:GETACTIONS $COM Build ATBL
       176  [14]  N_1$TAK$RATBL $DMD I_-1 $DMD ATBL[;0]_'?LRD'$IATBL[;0]
       177  [15] LOOP:$GO(N$LEI_I+1)/DONE $DMD $GOLOOP+ATBL[I;0]
       178  [16]  EMITLBL ATBL[I;3] $DMD $GOLOOP
       179  [17]  EMITREF ATBL[I;3] $DMD $GOLOOP
       180  [18]  EMITDATA ATBL[I;1 2] $DMD $GOLOOP
       181  [19] DONE:' '"
       182      " Z_NAME Y;I
       183  [1]  $COM Returns the fully-qualified name from the debug variable table
       184  [2]   Z_-1+$RI_$REVVTBL[$I1+VTBL[;0]$IY;3]
       185  [3]   I_Z$-I$I1+$I1$TAKI

 14:22 NOV 16 '97 TCO$O6CONVERT                            TCO$O6CONVERT         Page 6
       186  [4]   Z_1$DRP$DSC,/'$_',$"VAR$"|VTBL[I;0]"
       187      " Z_OCTCHR Y;N
       188  [1]  $COM Converts octal representation vector to charbyte vector
       189  [2]   N_($RY_OCTFIX Y)%3
       190  [3]   Z_$QAV[8$DCD$TPS(N,3)$R'01234567'$IY]"
       191      " Z_OCTFIX Y
       192  [1]  $COM Munges arbitrary octal representation vector into canonical form
       193  [2]   Z_,Y
       194  [3]  $COM MORE PLANNED FOR LATER...
       195      "
       196      " Z_OCTINT Y
       197  [1]  $COM Converts octal representation vector to integer
       198  [2]   Z_8$DCD'01234567'$IY"
       199      " OPEN F
       200  [1]  $COM Opens file F for ou busting
       201  [2]   $GO(file$E$QFNUMS)$DRP3 $DMD CLOSE
       202  [3]   (F,',IN')$QFOPEN file
       203  [4]   K0_K1_K2_K3_K4_K5_K6_K7_K8_K9_K10_K11_K12_K13_K14_K15_''"
       204      " OUANLZ K;T;X
       205  [1]  $COM Analyze one record from the ou file.  Record type in K[5].
       206  [2]   $GO((OCTCHR '777')$NE1$TAKK)$RL1
       207  [3]   'Record type'(T_$QAV$IK[5])'at key',X_CHROCT K
       208  [4]   $XEC'K',($FMTT),'_K',($FMTT),',$ENC X'
       209  [5]   $GO0
       210  [6]  L1:$GO((OCTCHR '042')$NE1$TAKK)$RL2
       211  [7]   '*** Object Unit: ',(FUDGE TOEXTERNAL 1$DRPK),' ***'
       212  [8]  L2:
       213  [9]   'HEAD Record at key  ',CHROCT K"
       214      " OUBUST F
       215  [1]  $COM Busts (analyzes) the contents of the named object file
       216  [2]   OPEN F $DMD OUANLZ$"$"OUKEYS$"OUHEADS"
       217      " Z_OUHEADS;R;K
       218  [1]  $COM Returns vector of char vectors naming all object units in the file
       219  [2]   Z_''
       220  [3]  LOOP:R_$QFREAD file '' 0 3 $DMD $GO((OCTCHR '042')$NE1$TAK$QFRKEY file,2)$RDONE
       221  [4]   Z_Z,$ENC1$DRP$QFRKEY file,2 $DMD $GOLOOP
       222  [5]  DONE:"

 14:22 NOV 16 '97 TCO$O6CONVERT                            TCO$O6CONVERT         Page 7
       223      " Z_OUKEYS OU;R;K
       224  [1]  $COM Returns vector of char vectors naming the keys for an object unit
       225  [2]   (1 2$RDONE,79)$QSM 'OUKEYS'
       226  [3]   K_4$TAK$QFREAD file(Z_(OCTCHR '042'),OU)0 3 $DMD Z_$ENCZ
       227  [4]   K_(OCTCHR '777'),K,OCTCHR '001000' $DMD R_$QFREAD file K 0 3
       228  [5]   Z_Z,$ENCK $DMD K_-2$DRPK
       229  [6]  LOOP:R_$QFREAD file '' 0 3 $DMD $GO(K$NQV5$TAK$QFRKEY file,2)$RDONE
       230  [7]   Z_Z,$ENC$QFRKEY file,2 $DMD $GOLOOP
       231  [8]  DONE:"
       232      " Z_PROGBASES
       233  [1]  $COM returns vector of offsets starting each prog record
       234  [2]   Z_$MINOCTINT$"6$TAK$"24$DRP$"$DSC$"K10"
       235      " B RELOCATE Y;L;T;X;K;U
       236  [1]  $COM Load data bits from reloc entry Y into variable V at base B
       237  [2]   T_PTBL[Y;3] $DMD Y_R10[PTBL[Y;0]+$IPTBL[Y;2]]
       238  [3]   $GOtrace$DRPLOOK $DMD $QQ_CHROCT Y
       239  [4]  LOOK:$GOL002037 L002016 L002017 L043000 L002036 L002176[E$IT]
       240  [5]  OOPS:$QQ_'Reloc type ',(CHROCT 2$TAKY),' skipped ' $DMD $GO0
       241  [6]  L002016:T_1 $DMD X_nulnul,Y[2 3] $DMD $GOCOMMON
       242  [7]  L002017:T_2 $DMD X_Y[2 3],nulnul $DMD $GOCOMMON
       243  [8]  L002036:T_4 $DMD X_Y[8 9 10 11] $DMD $GOCOMMON
       244  [9]  L002037:T_3 $DMD X_Y[8 9 10 11] $DMD $GOCOMMON
       245  [10] L002176:T_5 $DMD X_Y[8 9 10 11] $DMD K_CHRINT Y[2 3] $DMD $GOCOMMON
       246  [11] L043000:$GO0 $COM handled elsewhere...
       247  [12] COMMON:L_1+(3 9 $QCVT Y[7])$-U_3 9 $QCVT Y[6] $DMD $GOCOMMON+T
       248  [13] T1:L_$-L $DMD $GOT3
       249  [14] T2: $COM fall thru
       250  [15] T3:V[B+U+$I|L]_T_L CHRBIT X $DMD $GODONE
       251  [16] T4:L_$-L $DMD $GOT3
       252  [17] T5:$GO(($RV)>T_B+U+K#L)/T50 $DMD V_T$TAKV $COM rep count in last chunk
       253  [18] T50:V[B+U+$I$RT]_T_(K#$RT)$RT_L CHRBIT X
       254  [19] DONE:$GOtrace$DRP0 $DMD ' -> 0x',BITHEX T"
       255      " Z_X SPLITVECT Y
       256  [1]  $COM Partitions integer vector Y at each X.  Returns index of each part.
       257  [2]   Z_(X=Y)/$I$RY $DMD Z_(~(Z$-1)$EZ)/Z"
       258      " Z_X THRU Y
       259  [1]  $COM Returns vector of integers from X thru Y, where X $LE Y and both >0

 14:22 NOV 16 '97 TCO$O6CONVERT                            TCO$O6CONVERT         Page 8
       260  [2]   Z_X+$I1+Y$-X"
       261      " Z_TOEXTERNAL Y
       262  [1]  $COM Returns copy of character vector Y with APL chars mapped to external
       263  [2]   Z_external $QXL Y"
       264      " Z_TOLOWER Y
       265  [1]  $COM Returns copy of character vector Y with uppercase chars lowered
       266  [2]   Z_lower $QXL Y"
       267      " Z_UNIQ Y
       268  [1]  $COM Returns a sorted copy of integer vector Y with duplicates removed
       269  [2]   Z_Y[$GUY] $DMD Z_(1,(-1$DRPZ)$NE1$DRPZ)/Z"
       270      " Z_VAR Y
       271  [1]  $COM Returns the name from the debug variable table at offset Y words
       272  [2]   Z_CHRINT R15[0 1+4#Y]
       273  [3]   Z_R15[(2+4#Y)+$IZ]"
       274      " Z_VAR1 Y
       275  [1]  $COM Returns the name from the name table at offset Y words
       276  [2]   Z_CHRINT R1[0 1+4#Y]
       277  [3]   Z_R1[(2+4#Y)+$IZ]"
       278      " VDHDATA;IFID;OFID
       279  [1]   $GO(0=$R$QSP)/0 $DMD $XEC')TERM OUTPUT 4'
       280  [2]   '*** VDH Data Module Exporter ***'
       281  [3]   '    Reading from file ',FUDGE TOEXTERNAL IFID_$QSP
       282  [4]   '    Exporting to file ',FUDGE TOEXTERNAL OFID_'*',(&\IFID$NE'.')/IFID
       283  [5]   ' ' $DMD OUBUST IFID $DMD ' '
       284  [6]   GETPROG $DMD $GO(0=$QNC 'PTBL')/DONE
       285  [7]   '    Number of relocation entries: ',$FMT1$TAK$RPTBL
       286  [8]   GETVARS $DMD '    Number of variables defined: ',$FMT1$TAK$RVTBL
       287  [9]   '    Now relocating and emitting variables..'
       288  [10]  MAKEVARS
       289  [11]  '    Done.'
       290  [12]  '*** Export to file ',(FUDGE TOEXTERNAL OFID),' finished ***'
       291  [13] DONE:CLOSE
       292  [14]  $XEC')END'
       293      "
       294        external_512$R$QAV[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
             28 29 30 31],' !$"$NE$_',$QAV[37],'$CAP''()*+,$-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]$
            TAK',$Q

 14:22 NOV 16 '97 TCO$O6CONVERT                            TCO$O6CONVERT         Page 9
       295       '$_$ENCabcdefghijklmnopqrstuvwxyz{|}~',$QAV[127 128 129 130 131 132 133 134 135 136 137 138 1
            39 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160],'$SC$RD1$C
            UP',$Q
       296       '$XP1$GD$LOK$XEC$FMT$QQ$LOG$RV1$MDV$TBR$IB$UDL$TPS$GU$NND$NOR$REV$Q0$Q1$Q2$Q3$Q4$Q5$Q6$Q7$Q8$
            Q9',$QAV[191],'$MIN$E',$QAV[194],'$DLT$I#%$MAX$DRP',$QAV[201],'$W$DSC&$"-$LE$GE$OR$DMD$LTK$RTK$Q$O
            $GO_',$Q
       297       '$DCD$ECD$COM$EQV$NQV$FDI$FND',$QAV[224 225 226 227 228 229 230 231 232 233 234 235 236 237 2
            38 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262
             263],$Q
       298    $QAV[264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286
             287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 3
            11 312],$Q
       299      $QAV[313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 3
            35 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359
             360],$Q
       300    $QAV[361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383
             384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 4
            08 409],$Q
       301      $QAV[410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 4
            32 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456
             457],$Q
       302    $QAV[458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480
             481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 5
            05 506],$Q
       303      $QAV[507 508 509 510 511]
       304        file_21
       305        lower_512$R$QAV[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28
             29 30 31],' !$"$NE$',$QAV[37],'$CAP''()*+,$-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\]$TAK$
            _',$Q
       306       '$ENCabcdefghijklmnopqrstuvwxyz{|}~',$QAV[127 128 129 130 131 132 133 134 135 136 137 138 139
             140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160],'$SC$RD1$CUP
            $XP1',$Q
       307       '$GD$LOK$XEC$FMT$QQ$LOG$RV1$MDV$TBR$IB$UDL$TPS$GU$NND$NOR$REV$Q0$Q1$Q2$Q3$Q4$Q5$Q6$Q7$Q8$Q9',
            $QAV[191],'$MIN$E',$QAV[194],'$DLT$I#%$MAX$DRP',$QAV[201],'$W$DSC&"-$LE$GE$OR$DMD$LTK$RTK$Q$O$GO_$
            DCD',$Q
       308       '$ECD$COM$EQV$NQV$FDI$FND',$QAV[224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 2
            39 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263

 14:22 NOV 16 '97 TCO$O6CONVERT                            TCO$O6CONVERT         Page 10
             264],$Q
       309    $QAV[265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287
             288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 3
            12 313],$Q
       310      $QAV[314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 3
            36 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360
             361],$Q
       311    $QAV[362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384
             385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 4
            09 410],$Q
       312      $QAV[411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 4
            33 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457
             458],$Q
       313    $QAV[459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481
             482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 5
            06 507],$Q
       314      $QAV[508 509 510 511]
       315        nulnul_2$R$QAV[0 0]
       316        ostream_13
       317        prevlbl_0$R' '
       318        tags_6$R(6$R'002037') (6$R'002016') (6$R'002017') (6$R'043000') (6$R'002036') (6$R'002176')
       319        trace_0
       320        )SET INPUT ME

 14:22 NOV 16 '97 TABLE OF CONTENTS                        TCO$O6CONVERT         Page 11
 TCO$O6CONVERT...............................1     TCO$O6CONVERT...............................1

 APL E00
                                
CLEAR WS
      )CONTINUE OFF
      )CLEAR
                                
CLEAR WS
      )IBEX DONT Echo
      )SAVE TCO$O6CONVERT.:TCA2TOU
 TCO$O6CONVERT SAVED 14:22 NOV 16 '97
      )END
