

14:33 JUL 28 '97 GH_GATE_M.:E05SI                                          1    
    1      /*M*  MACROS to LOCK, UNLOCK and define gates                     */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7      /*P*    NAME: GH_GATE_M
    8
    9              PURPOSE:  To provide Macros to generate calls to gate
   10              lock and unlock routines and to generate gate SYMDEFs
   11              and SYMREFs.                                             */
   12
   13
   14
   15      /*F*    NAME: LOCK
   16              PURPOSE: Generate call to lock a gate                     */
   17
   18      %MACRO LOCK (G=" ");
   19      %LSET LISTDIR='0'B;
   20      %LSET LISTEXP='1'B;
   21      %LSET LISTCOM='0'B;
   22      %LSET LISTSUB='1'B;
   23
   24              CALL GHH$LOCK (G  );
   25
   26      %MEND;
   27
   28      /*F*    NAME: UNLOCK
   29              PURPOSE: To generate a call to lock a gate                */
   30
   31      %MACRO UNLOCK (G=" "  );
   32      %LSET LISTDIR='0'B;
   33      %LSET LISTEXP='1'B;
   34      %LSET LISTCOM='0'B;
   35      %LSET LISTSUB='1'B;
   36
   37              CALL GHH$UNLOCK (G  );
14:33 JUL 28 '97 GH_GATE_M.:E05SI                                          2    
   38
   39      %MEND;
   40
   41      /*F*    NAME: GATE
   42              PURPOSE: Define a gate                                   */
   43
   44      %MACRO GATE (FPTN="", LVL=1,ALGN=WALIGNED,
   45        LAST(YES=";",NO=",",ANY)=";",
   46        STCLASS=STATIC);
   47
   48
   49      %LSET LISTDIR='0'B;
   50      %LSET LISTEXP='1'B;
   51      %LSET LISTCOM='0'B;
   52      %LSET LISTSUB='1'B;
   53
   54      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
   55      %IF (SUBSTR(STR,0,6)='STATIC') OR
   56      (SUBSTR(STR,0,8)='CONSTANT') OR
   57      (SUBSTR(STR,0,3)='EXT');
   58      %LSET INIT=CHARTEXT('INIT');
   59      %ELSE;
   60      %LSET INIT=CHARTEXT('/*');
   61      %ENDIF;
   62
   63      %IF LVL=1;
   64      DCL 1 FPTN STCLASS ALGN,
   65      %ELSE;
   66              %LVL FPTN,
   67      %ENDIF;
   68           %(LVL+1) FLG BIT(1) UNAL %INIT('1'B) %CHARTEXT('/**/'),
   69           %(LVL+1) *  BIT(11) UNAL %INIT('0'B) %CHARTEXT('/**/'),
   70           %(LVL+1) A  UBIN(20) UNAL %INIT(0) %CHARTEXT('/**/'),
   71              /*K*  FLG = VALUE-BIT(1) indicates if the gate is locked(0),
   72                    or unlocked (1).
   73                                                                         */
   74              /*K*  A = VALUE is the address of the last accessor of the
14:33 JUL 28 '97 GH_GATE_M.:E05SI                                          3    
   75                    gate, either the lockor, or unlockor.
   76                                                                         */
   77           %(LVL+1) SREG  UBIN(16) CALIGNED %INIT(0) %CHARTEXT('/**/') LAST
   78              /*K* SREG - UBIN WORD  contains the contents of the
   79                   Status Register at the time the gate was last
   80                   locked or unlocked.
   81              */
   82      %MEND;
   83      DCL GHH$LOCK ENTRY(1) ALTRET;
   84      DCL GHH$UNLOCK ENTRY(1) ALTRET;

