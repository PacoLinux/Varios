

14:13 JUL 28 '97 B_MHJMAC_C.:E05SI                                         1    
    1      /*M* B_MHJMAC_C MACROs to define the monitor HJIT */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7      /*X* DMC,PLM=4,IND=0,SDI=2,CTI=0,ENU=0,AND,DCI=4,CSU=2,ECU=4,THI=0,DTI=2 */
    8
    9
   10
   11
   12
   13      /*D* NAME:         B_MSDS
   14           PURPOSE:      To generate the special descriptor portion of the monitor HJIT. */
   15      %MACRO B_MSDS (FPTN=B_MSDS,STCLASS=BASED,LVL=1,LAST=";");
   16
   17       %LSET LISTDIR='0'B;
   18       %LSET LISTEXP='1'B;
   19       %LSET LISTCOM='0'B;
   20       %LSET LISTSUB='1'B;
   21       %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
   22       %IF (SUBSTR(STR,0,6)='STATIC') OR
   23       (SUBSTR(STR,0,8)='CONSTANT') OR
   24       (SUBSTR(STR,0,3)='EXT');
   25       %LSET INIT=CHARTEXT('INIT');
   26       %ELSE;
   27       %LSET INIT=CHARTEXT('/*');
   28       %ENDIF;
   29
   30       %IF LVL=1;
   31      DCL 1 FPTN STCLASS DALIGNED,
   32       %ELSE;
   33          %LVL FPTN DALIGNED,
   34       %ENDIF;
   35          %(LVL+1) * (0:7) BIT(72) %INIT('0'B*0)%CHARTEXT('/**/') LAST
   36      %MEND;
   37
14:13 JUL 28 '97 B_MHJMAC_C.:E05SI                                         2    
   38
   39
   40
   41
   42      /*D* NAME:         B_MSSS
   43           PURPOSE:      To generate the safe store portion of the monitor HJIT. */
   44      %MACRO B_MSSS (FPTN=B_MSSS,STCLASS=BASED,LVL=1,LAST=";");
   45
   46       %LSET LISTDIR='0'B;
   47       %LSET LISTEXP='1'B;
   48       %LSET LISTCOM='0'B;
   49       %LSET LISTSUB='1'B;
   50       %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
   51       %IF (SUBSTR(STR,0,6)='STATIC') OR
   52       (SUBSTR(STR,0,8)='CONSTANT') OR
   53       (SUBSTR(STR,0,3)='EXT');
   54       %LSET INIT=CHARTEXT('INIT');
   55       %ELSE;
   56       %LSET INIT=CHARTEXT('/*');
   57       %ENDIF;
   58
   59       %IF LVL=1;
   60      DCL 1 FPTN STCLASS DALIGNED,
   61       %ELSE;
   62          %LVL FPTN DALIGNED,
   63       %ENDIF;
   64          %(LVL+1) FRAME1,                       /* FRAME #1: (16 WORDS)               */
   65
   66          %(LVL+2) * UBIN(36) %INIT(0)%CHARTEXT('/**/'),
   67          %(LVL+2) * BIT(36) %INIT('000000777773'O)%CHARTEXT('/**/'),
   68          %(LVL+2) * (0:1) UBIN(36) %INIT(0*0)%CHARTEXT('/**/'),
   69
   70          %(LVL+2) IC UBIN(18) UNAL %INIT(0)%CHARTEXT('/**/'),           /* INSTRUCTION COUNTER                */
   71          %(LVL+2) IR BIT(18) UNAL %INIT('004210'O)%CHARTEXT('/**/'),
   72                  /* OVERFLOW MASK - MASTER MODE - HEX FLOATING POINT */
   73
   74          %(LVL+2) * UBIN(10) UNAL %INIT(0)%CHARTEXT('/**/'),
14:13 JUL 28 '97 B_MHJMAC_C.:E05SI                                         3    
   75          %(LVL+2) SSF BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'), /* SSS FULL FLAG                      */
   76          %(LVL+2) FICODE UBIN(7) UNAL %INIT(0)%CHARTEXT('/**/'), /* FAULT/INTERRUPT CODE              */
   77          %(LVL+2) * UBIN(2) UNAL %INIT(0)%CHARTEXT('/**/'),
   78          %(LVL+2) CP UBIN(2) UNAL %INIT(0)%CHARTEXT('/**/'),    /* CPU #                              */
   79          %(LVL+2) SCR BIT(2) UNAL %INIT('00'B)%CHARTEXT('/**/'), /* NEXT FRAME = 16 WORDS             */
   80          %(LVL+2) SID BIT(12) UNAL %INIT('6000'O)%CHARTEXT('/**/'), /* SEGID = MONITOR ISR            */
   81
   82          %(LVL+2) DSAR UBIN(17) UNAL %INIT(0)%CHARTEXT('/**/'),
   83          %(LVL+2) * UBIN(10) UNAL %INIT(0)%CHARTEXT('/**/'),
   84          %(LVL+2) EWSQ UBIN(9) UNAL %INIT(0)%CHARTEXT('/**/'),  /* WSQ = MONWSQ = 0                   */
   85
   86          %(LVL+2) * UBIN(36) %INIT(0)%CHARTEXT('/**/'),
   87
   88          %(LVL+2) ISR,                        /* ISR = MONITOR ISR                  */
   89          %(LVL+3) BOUND UBIN(20) UNAL %INIT(IS_BOUND)%CHARTEXT('/**/'),
   90          %(LVL+3) FLGS BIT(9) UNAL %INIT('743'O)%CHARTEXT('/**/'), /* NO-EXECUTE -- FORCES A FAULT  */
   91          %(LVL+3) WSR UBIN(3) UNAL %INIT(0)%CHARTEXT('/**/'),
   92          %(LVL+3) TYP UBIN(4) UNAL %INIT(0)%CHARTEXT('/**/'),
   93          %(LVL+3) BASE UBIN(36) %INIT(IS_BASE)%CHARTEXT('/**/'),
   94
   95          %(LVL+2) ASR,                        /* ASR = EMPTY                        */
   96          %(LVL+3) BOUND UBIN(20) UNAL %INIT(0)%CHARTEXT('/**/'),
   97          %(LVL+3) FLGS BIT(9) UNAL %INIT('741'O)%CHARTEXT('/**/'),
   98          %(LVL+3) WSR UBIN(3) UNAL %INIT(0)%CHARTEXT('/**/'),
   99          %(LVL+3) TYP UBIN(4) UNAL %INIT(1)%CHARTEXT('/**/'),
  100          %(LVL+3) BASE UBIN(36) %INIT(MON_AS_BASE)%CHARTEXT('/**/'),
  101
  102          %(LVL+2) LSR,                        /* LSR = MONITOR LSEG                 */
  103          %(LVL+3) BOUND UBIN(20) UNAL %INIT(MLS_BOUND)%CHARTEXT('/**/'),
  104          %(LVL+3) FLGS BIT(9) UNAL %INIT('543'O)%CHARTEXT('/**/'),
  105          %(LVL+3) WSR UBIN(3) UNAL %INIT(0)%CHARTEXT('/**/'),
  106          %(LVL+3) TYP UBIN(4) UNAL %INIT(1)%CHARTEXT('/**/'),
  107          %(LVL+3) BASE UBIN(36) %INIT(MLS_BASE)%CHARTEXT('/**/'),
  108
  109          %(LVL+2) PSR,                        /* PSR = NULL                         */
  110          %(LVL+3) BOUND UBIN(20) UNAL %INIT(0)%CHARTEXT('/**/'),
  111          %(LVL+3) FLGS BIT(9) UNAL %INIT('101'O)%CHARTEXT('/**/'),
14:13 JUL 28 '97 B_MHJMAC_C.:E05SI                                         4    
  112          %(LVL+3) WSR UBIN(3) UNAL %INIT(0)%CHARTEXT('/**/'),
  113          %(LVL+3) TYP UBIN(4) UNAL %INIT(1)%CHARTEXT('/**/'),
  114          %(LVL+3) BASE UBIN(36) %INIT(0)%CHARTEXT('/**/'),
  115
  116          %(LVL+1) FRAME2,                       /* FRAME #2: (64 WORDS)               */
  117
  118          %(LVL+2) *  UBIN(36) %INIT(0)%CHARTEXT('/**/'),
  119          %(LVL+2) * BIT(36) %INIT('000000777773'O)%CHARTEXT('/**/'),
  120          %(LVL+2) * (0:1) UBIN(36) %INIT(0*0)%CHARTEXT('/**/'),
  121
  122          %(LVL+2) IC UBIN(18) UNAL %INIT(0)%CHARTEXT('/**/'),           /* INSTRUCTION COUNTER                */
  123          %(LVL+2) IR BIT(18) UNAL %INIT('004210'O)%CHARTEXT('/**/'),
  124                  /* OVERFLOW MASK - MASTER MODE - HEX FLOATING POINT */
  125
  126          %(LVL+2) * UBIN(10) UNAL %INIT(0)%CHARTEXT('/**/'),
  127          %(LVL+2) SSF BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'), /* SSS FULL FLAG                      */
  128          %(LVL+2) FICODE UBIN(7) UNAL %INIT(0)%CHARTEXT('/**/'), /* FAULT/INTERRUPT CODE              */
  129          %(LVL+2) * UBIN(2) UNAL %INIT(0)%CHARTEXT('/**/'),
  130          %(LVL+2) CP UBIN(2) UNAL %INIT(0)%CHARTEXT('/**/'),    /* CPU #                              */
  131          %(LVL+2) SCR BIT(2) UNAL %INIT('00'B)%CHARTEXT('/**/'), /* NEXT FRAME = 16 WORDS             */
  132          %(LVL+2) SID BIT(12) UNAL %INIT('6000'O)%CHARTEXT('/**/'), /* SEGID = MONITOR ISR            */
  133
  134          %(LVL+2) DSAR UBIN(17) UNAL %INIT(0)%CHARTEXT('/**/'),
  135          %(LVL+2) * UBIN(10) UNAL %INIT(0)%CHARTEXT('/**/'),
  136          %(LVL+2) EWSQ UBIN(9) UNAL %INIT(0)%CHARTEXT('/**/'),  /* WSQ = MONWSQ = 0                   */
  137
  138          %(LVL+2) * UBIN(36) %INIT(0)%CHARTEXT('/**/'),
  139
  140          %(LVL+2) ISR,                        /* ISR = MONITOR ISR                  */
  141          %(LVL+3) BOUND UBIN(20) UNAL %INIT(IS_BOUND)%CHARTEXT('/**/'),
  142          %(LVL+3) FLGS BIT(9) UNAL %INIT('757'O)%CHARTEXT('/**/'),
  143          %(LVL+3) WSR UBIN(3) UNAL %INIT(0)%CHARTEXT('/**/'),
  144          %(LVL+3) TYP UBIN(4) UNAL %INIT(0)%CHARTEXT('/**/'),
  145          %(LVL+3) BASE UBIN(36) %INIT(IS_BASE)%CHARTEXT('/**/'),
  146
  147          %(LVL+2) ASR,                        /* ASR = EMPTY                        */
  148          %(LVL+3) BOUND UBIN(20) UNAL %INIT(0)%CHARTEXT('/**/'),
14:13 JUL 28 '97 B_MHJMAC_C.:E05SI                                         5    
  149          %(LVL+3) FLGS BIT(9) UNAL %INIT('741'O)%CHARTEXT('/**/'),
  150          %(LVL+3) WSR UBIN(3) UNAL %INIT(0)%CHARTEXT('/**/'),
  151          %(LVL+3) TYP UBIN(4) UNAL %INIT(1)%CHARTEXT('/**/'),
  152          %(LVL+3) BASE UBIN(36) %INIT(MON_AS_BASE)%CHARTEXT('/**/'),
  153
  154          %(LVL+2) LSR,                        /* LSR = MONITOR LSEG                 */
  155          %(LVL+3) BOUND UBIN(20) UNAL %INIT(MLS_BOUND)%CHARTEXT('/**/'),
  156          %(LVL+3) FLGS BIT(9) UNAL %INIT('543'O)%CHARTEXT('/**/'),
  157          %(LVL+3) WSR UBIN(3) UNAL %INIT(0)%CHARTEXT('/**/'),
  158          %(LVL+3) TYP UBIN(4) UNAL %INIT(1)%CHARTEXT('/**/'),
  159          %(LVL+3) BASE UBIN(36) %INIT(MLS_BASE)%CHARTEXT('/**/'),
  160
  161          %(LVL+2) PSR,                        /* PSR = NULL                         */
  162          %(LVL+3) BOUND UBIN(20) UNAL %INIT(0)%CHARTEXT('/**/'),
  163          %(LVL+3) FLGS BIT(9) UNAL %INIT('101'O)%CHARTEXT('/**/'),
  164          %(LVL+3) WSR UBIN(3) UNAL %INIT(0)%CHARTEXT('/**/'),
  165          %(LVL+3) TYP UBIN(4) UNAL %INIT(1)%CHARTEXT('/**/'),
  166          %(LVL+3) BASE UBIN(36) %INIT(0)%CHARTEXT('/**/'),
  167
  168          %(LVL+2) AR_SID(0:7) UBIN(36) %INIT(3072,3088,3072,3072,3072,3072,3072,3072)%CHARTEXT('/**/'),
  169
  170          %(LVL+2) DR0,                        /* DR0 = MONITOR ISR                  */
  171          %(LVL+3) BOUND UBIN(20) UNAL %INIT(IS_BOUND)%CHARTEXT('/**/'),
  172          %(LVL+3) FLGS BIT(9) UNAL %INIT('753'O)%CHARTEXT('/**/'),
  173          %(LVL+3) WSR UBIN(3) UNAL %INIT(0)%CHARTEXT('/**/'),
  174          %(LVL+3) TYP UBIN(4) UNAL %INIT(0)%CHARTEXT('/**/'),
  175          %(LVL+3) BASE UBIN(36) %INIT(IS_BASE)%CHARTEXT('/**/'),
  176
  177          %(LVL+2) DR1,                        /* DR1 = MONITOR ISR                  */
  178          %(LVL+3) BOUND UBIN(20) UNAL %INIT(IS_BOUND)%CHARTEXT('/**/'),
  179          %(LVL+3) FLGS BIT(9) UNAL %INIT('743'O)%CHARTEXT('/**/'),
  180          %(LVL+3) WSR UBIN(3) UNAL %INIT(7)%CHARTEXT('/**/'),
  181          %(LVL+3) TYP UBIN(4) UNAL %INIT(0)%CHARTEXT('/**/'),
  182          %(LVL+3) BASE UBIN(36) %INIT(IS_BASE)%CHARTEXT('/**/'),
  183      /**/
  184          %(LVL+2) DR2,                       /* DR2 = MONITOR AUTO                  */
  185          %(LVL+3) BOUND UBIN(20) UNAL %INIT(MTSTK_BOUND)%CHARTEXT('/**/'),
14:13 JUL 28 '97 B_MHJMAC_C.:E05SI                                         6    
  186          %(LVL+3) FLGS BIT(9) UNAL %INIT('753'O)%CHARTEXT('/**/'),
  187          %(LVL+3) WSR UBIN(3) UNAL %INIT(0)%CHARTEXT('/**/'),
  188          %(LVL+3) TYP UBIN(4) UNAL %INIT(0)%CHARTEXT('/**/'),
  189          %(LVL+3) BASE UBIN(36) %INIT(TSTK_BASE)%CHARTEXT('/**/'),
  190
  191          %(LVL+2) DR3,                        /* DR3 = MONITOR ISR                  */
  192          %(LVL+3) BOUND UBIN(20) UNAL %INIT(IS_BOUND)%CHARTEXT('/**/'),
  193          %(LVL+3) FLGS BIT(9) UNAL %INIT('753'O)%CHARTEXT('/**/'),
  194          %(LVL+3) WSR UBIN(3) UNAL %INIT(0)%CHARTEXT('/**/'),
  195          %(LVL+3) TYP UBIN(4) UNAL %INIT(0)%CHARTEXT('/**/'),
  196          %(LVL+3) BASE UBIN(36) %INIT(IS_BASE)%CHARTEXT('/**/'),
  197
  198          %(LVL+2) DR4,                        /* DR4 = MONITOR ISR                  */
  199          %(LVL+3) BOUND UBIN(20) UNAL %INIT(IS_BOUND)%CHARTEXT('/**/'),
  200          %(LVL+3) FLGS BIT(9) UNAL %INIT('753'O)%CHARTEXT('/**/'),
  201          %(LVL+3) WSR UBIN(3) UNAL %INIT(0)%CHARTEXT('/**/'),
  202          %(LVL+3) TYP UBIN(4) UNAL %INIT(0)%CHARTEXT('/**/'),
  203          %(LVL+3) BASE UBIN(36) %INIT(IS_BASE)%CHARTEXT('/**/'),
  204
  205          %(LVL+2) DR5,                        /* DR5 = MONITOR ISR                  */
  206          %(LVL+3) BOUND UBIN(20) UNAL %INIT(IS_BOUND)%CHARTEXT('/**/'),
  207          %(LVL+3) FLGS BIT(9) UNAL %INIT('753'O)%CHARTEXT('/**/'),
  208          %(LVL+3) WSR UBIN(3) UNAL %INIT(0)%CHARTEXT('/**/'),
  209          %(LVL+3) TYP UBIN(4) UNAL %INIT(0)%CHARTEXT('/**/'),
  210          %(LVL+3) BASE UBIN(36) %INIT(IS_BASE)%CHARTEXT('/**/'),
  211
  212          %(LVL+2) DR6,                        /* DR6 = MONITOR ISR                  */
  213          %(LVL+3) BOUND UBIN(20) UNAL %INIT(IS_BOUND)%CHARTEXT('/**/'),
  214          %(LVL+3) FLGS BIT(9) UNAL %INIT('753'O)%CHARTEXT('/**/'),
  215          %(LVL+3) WSR UBIN(3) UNAL %INIT(0)%CHARTEXT('/**/'),
  216          %(LVL+3) TYP UBIN(4) UNAL %INIT(0)%CHARTEXT('/**/'),
  217          %(LVL+3) BASE UBIN(36) %INIT(IS_BASE)%CHARTEXT('/**/'),
  218
  219          %(LVL+2) DR7,                        /* DR7 = MONITOR ISR                  */
  220          %(LVL+3) BOUND UBIN(20) UNAL %INIT(IS_BOUND)%CHARTEXT('/**/'),
  221          %(LVL+3) FLGS BIT(9) UNAL %INIT('753'O)%CHARTEXT('/**/'),
  222          %(LVL+3) WSR UBIN(3) UNAL %INIT(0)%CHARTEXT('/**/'),
14:13 JUL 28 '97 B_MHJMAC_C.:E05SI                                         7    
  223          %(LVL+3) TYP UBIN(4) UNAL %INIT(0)%CHARTEXT('/**/'),
  224          %(LVL+3) BASE UBIN(36) %INIT(IS_BASE)%CHARTEXT('/**/'),
  225
  226          %(LVL+2) X(0:7) UBIN(18) UNAL %INIT(0,0,0,0,0,0,0,0)%CHARTEXT('/**/'),
  227          %(LVL+2) A UBIN(36) %INIT(0)%CHARTEXT('/**/'),
  228          %(LVL+2) Q UBIN(36) %INIT(0)%CHARTEXT('/**/'),
  229          %(LVL+2) FILL(0:17) ,                /* FILL OUT 64-WORD FRAME             */
  230          %(LVL+3) WORDS UBIN(36) %INIT(0*18)%CHARTEXT('/**/'),
  231
  232          %(LVL+1) FILL(0:1535),           /* FILL OUT 1616-WORD SAFE STORE AREA */
  233          %(LVL+2) WORDS UBIN(36) %INIT(0*1536)%CHARTEXT('/**/') LAST
  234      %MEND;
  235
  236
  237
  238
  239
  240      /*D* NAME:         B_MAS
  241           PURPOSE:      To generate the Argument Stack portion of the monitor HJIT. */
  242      %MACRO B_MAS (FPTN=B_MAS,STCLASS=BASED,LVL=1,LAST=";");
  243
  244       %LSET LISTDIR='0'B;
  245       %LSET LISTEXP='1'B;
  246       %LSET LISTCOM='0'B;
  247       %LSET LISTSUB='1'B;
  248       %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
  249       %IF (SUBSTR(STR,0,6)='STATIC') OR
  250       (SUBSTR(STR,0,8)='CONSTANT') OR
  251       (SUBSTR(STR,0,3)='EXT');
  252       %LSET INIT=CHARTEXT('INIT');
  253       %ELSE;
  254       %LSET INIT=CHARTEXT('/*');
  255       %ENDIF;
  256
  257       %IF LVL=1;
  258      DCL 1 FPTN STCLASS DALIGNED,
  259       %ELSE;
14:13 JUL 28 '97 B_MHJMAC_C.:E05SI                                         8    
  260          %LVL FPTN DALIGNED,
  261       %ENDIF;
  262          %(LVL+1) * (0:63) BIT(72) INIT('0'B*0) LAST /* USER ARGUMENT STACK AREA           */
  263      %MEND;
  264
  265
  266
  267
  268
  269      /*D* NAME:         B_MHJIT
  270           PURPOSE:      To generate the entire monitor HJIT. */
  271      %MACRO B_MHJIT (FPTN=B_MHJIT,STCLASS=BASED);
  272
  273       %LSET LISTDIR='0'B;
  274       %LSET LISTEXP='1'B;
  275       %LSET LISTCOM='0'B;
  276       %LSET LISTSUB='1'B;
  277       %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
  278       %IF (SUBSTR(STR,0,6)='STATIC') OR
  279       (SUBSTR(STR,0,8)='CONSTANT') OR
  280       (SUBSTR(STR,0,3)='EXT');
  281       %LSET INIT=CHARTEXT('INIT');
  282       %ELSE;
  283       %LSET INIT=CHARTEXT('/*');
  284       %ENDIF;
  285
  286      DCL 1 FPTN STCLASS DALIGNED,
  287          %B_MLS    (FPTN=MLNK,     STCLASS=STCLASS,LVL=2,LAST=",");
  288          %B_MSDS   (FPTN=SDS_SPACE,STCLASS=STCLASS,LVL=2,LAST=",");
  289          %B_MSSS   (FPTN=SSS,      STCLASS=STCLASS,LVL=2,LAST=",");
  290          %B_MAS    (FPTN=AS,       STCLASS=STCLASS,LVL=2,LAST=";");
  291      %MEND;

