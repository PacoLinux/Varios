VERSION E05

PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:1    
        1        1        /*M* KVV$VDI Virtual device interface (VDI)                                   */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IND=0,IAD=3 */
        8        8        %SET REALSTUFF = '0'B;
        9        9        %SET LISTCON = '1'B;
       10       10
       11       11        KVV$VDI: PROC(KV$VDH_X) ALTRET;
       12       12        /*F* NAME: KVV$VDI
       13       13             PURPOSE:
       14       14                  handler VDI (virtual device interface)
       15       15             DESCRIPTION:
       16       16             Virtual device interface. All calls to VDH (virtual device
       17       17             handler) thru VDI (virtual device interface) come here, with
       18       18             the exception of KV$VDH_INT (initialize), which goes to
       19       19             KVV$INT.                                                                 */
       20       20
       21       21        %INCLUDE KH$CLK;
       22      391        %INCLUDE KH$TRC;
       23      420        %INCLUDE KH_CLKFNC_E;
       24      465        %INCLUDE KH_SCREECH_M;
       25      476        %INCLUDE KH_TRC;
       26      498        %INCLUDE KH_TRC_M;
       27      546        %INCLUDE KL_AFCN_C;
       28      647        %INCLUDE KL_MACRO_C;
       29     3999        %INCLUDE K_ID_E;
       30     4049        %K#ENTID_E;
       31     4068        %K#LYRID_E;
       32     4075 S      %INCLUDE KV$GLB;                        /* VDH Global structures              */
       33     4076 S      %INCLUDE KV$GLBCTX;                     /* VDH Global context                 */
       34     4077        %INCLUDE KV$INPFNC;                     /* VDH input function definitions     */
       35     4636 S      %INCLUDE KV$INT;                        /* VDH internal structures            */
       36     4637        %INCLUDE KV$PRM;                   /* VDH parameter structure substructures   */
       37     4850 S      %INCLUDE KV$SND;                        /* VDH send message structures        */
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:2    
       38     4851 S      %INCLUDE KV$USR;                        /* VDH to VDH-user request structures */
       39     4852 S      %INCLUDE KV$VDH;                        /* VDH-user to VDH request structures */
       40     4853 S      %INCLUDE KV$VDO;                   /* CP-6 Presentation protocol definition   */
       41     4854 S      %INCLUDE KV_GLBCNS_E;                   /* Virtual device handler constants   */
       42     4855        %INCLUDE KV_INT_M;                      /* VDH internal MACROs                */
       43     4998        %INCLUDE KV_SCODE_C;
       44     5019        %INCLUDE LCP_6;
       45     5210        %VLP_SCODE (FPTN=KVV_MRKTYP,FCG=KV,MID=V,STCLASS=CONSTANT,ERR#=%S$KV_MRKTYP);
       46     5271        %VLP_SCODE (FPTN=KVV_VDHFNC,FCG=KV,MID=V,STCLASS=CONSTANT,ERR#=%S$KV_VDHFNC);
       47     5332        %VLP_SCODE (FPTN=KVV_VDHEVT,FCG=KV,MID=V,STCLASS=CONSTANT,ERR#=%S$KV_VDHEVT);
       48     5393
       49     5394        %KV$ERR;                                /*  VDH ERROR REPORTING STRUCTURE     */
       50     5420        %KV$MRD;                                /*  MASTER REAL DEVICE CONTEXT BLOCK  */
       51     5467        %KV$MVD;                                /*  MASTER VIRTUAL DEVICE             */
       52     5511        %KV$PTR;                                /*  VDH POINTER BLOCK                 */
       53     5554        %KV$STR;                                /*  STREAM CONETEX                    */
       54     5641        %KV$SRD;                                /*  VDH subordinate real device       */
       55     5916        %KV$SSN (STCLASS="BASED(Y@SSN$)");      /*  VDH session                       */
       56     5995        %EQU KV_SSN=CHARTEXT('KV$SSN');
       57     5996    1   DCL KV_RCVSSN$ PTR SYMREF;         /* Pointer to SSN currently active in RCV  */
       58     5997        %KV$STT (STCLASS="BASED(P1$)");         /*  VDH STATS                         */
       59     6391        %EQU KV_STT=CHARTEXT('KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT');
       60     6392        %KV$TRCBFR;
       61     6450        %KV$TRCENT;
       62     6479        %KV$TRNTBL;                             /* Translate table definition         */
       63     6537        %KV$TYPAHDBFR(STCLASS="BASED(P1$)");    /*  VDH type-ahead buffer             */
       64     6562        %KV$TYPAHDBFR(STCLASS=SYMREF,NAME=KV_TYPAHDBFR);
       65     6587    1   DCL KV_TYPAHDBFRLMT UBIN SYMREF;
       66     6588        %KV$USRPRM (STCLASS="BASED(P1$)");      /*  USER PARAMS                       */
       67     6639        %EQU KV_USRPRM=CHARTEXT('KV$VDI.USRPRM$->KV$USRPRM');
       68     6640        %KV$VDI (STCLASS="BASED(Y@VDI$)");      /*  VDI CONTEXT BLOCK                 */
       69     6711        %EQU KV_VDI=CHARTEXT('KV$VDI');
       70     6712        %KV#VD_ORG_E;
       71     6720        %KV#TRCENT_TYP_E;
       72     6730        %KV_VDH_FNC_E;                          /*  VDH GLOBAL CONSTANTS              */
       73     6750        %KV_USR_FNC_E;
       74     6766        %KV_VDH_EVT_ID_E;
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:3    
       75     6772        %KV_USR_EVT_ID_E;
       76     6792        %KV_SND_FNC_E;
       77     6808        %KV#DATMOD_E;
       78     6814        %KV_INPUNT_E;
       79     6819        %KV_STRTYP_E;
       80     6857        %KV#TRC_COD_E;
       81     6861        %KV_BFRRLSDSP_E;
       82     6867        %KV_CLKNMB_E;
       83     6876        %KV_CLKUNT_E;
       84     6881        %KV_CMPCOD_E;
       85     6895        %KV_EVTTYP_E;
       86     6899        %KV_MRKTYP_E;
       87     6907
       88     6908        /* The parameter is any of many FPTs - here they are */
       89     6909
       90     6910    1   DCL KV$VDH_X CHAR(KV$COPY);   /* Parameter defined variable so any redef ok   */
       91     6911    1   DCL KV$COPY REDEF KV$VDH_X UBIN; /* Simple parameter to pass on to next subr  */
       92     6912        %KV$USR_EVT(STCLASS = REDEF KV$VDH_X);  /*  REPORT EVENT TO USER              */
       93     6947        %KV$USR_OTPMRK (STCLASS=REDEF KV$VDH_X);
       94     7009        %KV$USR_PST(STCLASS = REDEF KV$VDH_X);  /*  Position                          */
       95     7079        %KV$USR_RQSDAT(STCLASS = REDEF KV$VDH_X); /*  Request data                    */
       96     7142        %KV$USR_SETATR(STCLASS = REDEF KV$VDH_X); /* Set Attributes                   */
       97     7265        %KV$VDH_DCLLCLPST(STCLASS = REDEF KV$VDH_X); /* LOCAL POSITION                */
       98     7334        %KV$VDH_DSC(STCLASS = REDEF KV$VDH_X);  /*  VDH DISCONNECT                    */
       99     7370        %KV$VDH_DAT(STCLASS = REDEF KV$VDH_X);  /*  VDH DATA                          */
      100     7450        %KV$VDH_EVT(STCLASS = REDEF KV$VDH_X);  /*  VDH Event                         */
      101     7485        %KV$VDH_INT(STCLASS = REDEF KV$VDH_X);  /*  FPT FOR INITIAL CONNECT           */
      102     7522        %KV$VDH_GETBFR(STCLASS = REDEF KV$VDH_X); /*                                  */
      103     7587        %KV$VDH_RLSBFR(STCLASS = REDEF KV$VDH_X); /*                                  */
      104     7623        %KV$VDH_OTPMRK(STCLASS = REDEF KV$VDH_X); /*                                  */
      105     7685        %KV$VDH_PST(STCLASS = REDEF KV$VDH_X);  /*                                    */
      106     7759        %KV$VDH_SETCLK(STCLASS = REDEF KV$VDH_X); /*                                  */
      107     7795
      108     7796        %KH$CLK (FPTN=KV_SETCLK, FNC=%KH#CLK_SETCLK, STCLASS=CONSTANT SYMDEF,
      109     7797         UVAL=%KV_CLKNMB_REDTIMOUT, PRDUNT=%KV_CLKUNT_MNT, NO_CTB=YES, VDH_CLK=YES);
      110     7946        %KH_TRC;
      111     7961
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:4    
      112     7962        %KV$SND_EVT (NAME = KV_SND_EVT_BRK, STCLASS = SYMREF READONLY); /* Send break */
      113     8053        %KV$SND_EVT (NAME = KV_SND_EVT_MNTATN, STCLASS = SYMREF READONLY);
              8053            /* Monitor attention */
      114     8144        %KV$SND_MRK (NAME = KV_SND_MRK, STCLASS = SYMREF READONLY); /* Marker         */
      115     8200        %KV$SND_RQSDAT_GNR (NAME = KV_SND_RQSDAT_GNR, STCLASS = SYMREF READONLY);
              8200            /* Request data, general */
      116     8255        %KV$SND_SCHLCLSSN (NAME = KV_SND_SCHLCLSSN, STCLASS = SYMREF READONLY);
      117     8310        %KV$USR_EVT(NAME = KV_USR_EVT, STCLASS = SYMREF);
      118     8345        %KV$USR_PST(NAME = KV_USR_PST, STCLASS = SYMREF);
      119     8415        %KV$USR_RQSDAT(NAME = KV_USR_RQSDAT, STCLASS = SYMREF);
      120     8478        %KV$VDH_GETBFR(NAME = KV_VDH_GETBFR, STCLASS = SYMREF);
      121     8543        %KV$VDH_PST(NAME = KV_VDH_PST_ABS, STCLASS = SYMREF);
      122     8617        %KV$VDH_RLSBFR(NAME = KV_VDH_RLSBFR, STCLASS = SYMREF);
      123     8653
      124     8654    1   DCL KHC$CLOCK ENTRY(1) ALTRET;
      125     8655    1   DCL KHD$SCREECH ENTRY(1);
      126     8656    1   DCL KHD$TRC ENTRY(1);
      127     8657    1   DCL KVC$CNC ENTRY(1) ALTRET;
      128     8658    1   DCL KVC$RLSSSN ENTRY;
      129     8659    1   DCL KVC$RLSVDI ENTRY;
      130     8660    1   DCL KVF$PST ENTRY(1);
      131     8661    1   DCL KVI$INPCHR ENTRY;
      132     8662    1   DCL KVI$INPCHR_INPFNCIMD ENTRY;
      133     8663    1   DCL KVI$INPCHR_TYPAHD ENTRY;
      134     8664    1   DCL KVI$INTINPOPR ENTRY(1);
      135     8665    1   DCL KVI$PRGTYPAHDINPFNC ENTRY;
      136     8666    1   DCL KVI$RE_DSPINP ENTRY;
      137     8667    1   DCL KVC$DSC ENTRY(1);
      138     8668    1   DCL KVI$ENBNO_WATRED ENTRY;
      139     8669    1   DCL KVM$SND ENTRY(1) ALTRET;
      140     8670    1   DCL KVI$SNDDAT ENTRY(1);
      141     8671    1   DCL KVO$PST ENTRY(1);
      142     8672    1   DCL KVO$OTPLCL ENTRY(1);
      143     8673    1   DCL KVP$GETPRM ENTRY(1);
      144     8674    1   DCL KVP$SETPRM ENTRY(1);
      145     8675    1   DCL KVS$GETBFR ENTRY(1)ALTRET;
      146     8676    1   DCL KVS$GETREDBFR ENTRY(1) ALTRET;
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:5    
      147     8677    1   DCL KVS$RLSBFR ENTRY(1) ALTRET;
      148     8678    1   DCL KVS$SETSTR ENTRY(1);
      149     8679    1   DCL KVO$ERS ENTRY(1);
      150     8680    1   DCL KVO$GNRPST ENTRY(1);
      151     8681    1   DCL KVO$SETATR ENTRY(1);
      152     8682    1   DCL KVQ$CPYDAT ENTRY(2) ALTRET;
      153     8683        %EJECT;
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:6    
      154     8684
      155     8685        /* Trace VDI ->VDH function calls. Indexed by VDH function code,
      156     8686           (%KV_VDH_FNC_...)
      157     8687           indicates we should trace this call.                                       */
      158     8688
      159     8689    1   DCL KV_TRCVDHFNC(0:%KV_VDH_FNC_HI) BIT(1) STATIC SYMDEF INIT('1'B*0);
      160     8690
      161     8691        /* Trace VDI ->VDH function calls. Indexed by VDH function code,
      162     8692           indicates we should trace this call.
      163     8693           (%KV_VDH_EVT_ID_...)                                                       */
      164     8694
      165     8695    1   DCL KV_TRCVDHEVT(0:%KV_VDH_EVT_ID_HI) BIT(1) STATIC SYMDEF INIT('1'B*0);
      166     8696
      167     8697        /* Trace VDI ->VDH-USER function calls. Indexed by USR function code,
      168     8698           (%KV_USR_FNC_...)
      169     8699           indicates we should trace this call.                                       */
      170     8700
      171     8701    1   DCL KV_TRCUSRFNC(0:%KV_USR_FNC_HI) BIT(1) STATIC SYMDEF INIT('1'B*0);
      172     8702
      173     8703        /* Trace VDI ->VDH-USER function calls. Indexed by USR function code,
      174     8704           (%KV_USR_EVT_ID_...)
      175     8705           indicates we should trace this call.                                       */
      176     8706
      177     8707    1   DCL KV_TRCUSREVT(0:%KV_USR_EVT_ID_HI) BIT(1) STATIC SYMDEF INIT('1'B*0);
      178     8708
      179     8709    1   DCL KV_VDHFNCOK_NO_SSN(0:%KV_VDH_FNC_HI) BIT(1) CONSTANT SYMDEF INIT(
      180     8710    1   '0'B,'1'B,'0'B*4,'1'B*4,'0'B,'1'B*2,'0'B,'1'B*0);
      181     8711        /*
      182     8712        Initialized copies of KV$TRCENT.
      183     8713        */
      184     8714        %KV$TRCENT (NAME = Y_TRCENT_VDHVDI, STCLASS = CONSTANT, TYP = %KV#TRCENT_TYP_VDHVDI)
              8714            ;
      185     8743        %KV$TRCENT (NAME = Y_TRCENT_USRVDI, STCLASS = CONSTANT, TYP = %KV#TRCENT_TYP_USRVDI)
              8743            ;
      186     8772        %KV$TRCENT (NAME = Y_TRCENT_VDHVDIEVT, STCLASS = CONSTANT, TYP =
              8772            %KV#TRCENT_TYP_VDHVDIEVT);
      187     8801        %KV$TRCENT (NAME = Y_TRCENT_USRVDIEVT, STCLASS = CONSTANT, TYP =
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:7    
              8801            %KV#TRCENT_TYP_USRVDIEVT);
      188     8830        %KV$TRCENT (NAME = Y_TRCENT_USRVDIPST, STCLASS = CONSTANT, TYP =
              8830            %KV#TRCENT_TYP_USRVDI, FNC = %KV_USR_FNC_PST);
      189     8859        %EJECT;
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:8    
      190     8860        /*
      191     8861        Based variables.
      192     8862        */
      193     8863
      194     8864        /*
      195     8865        CHARacter string.
      196     8866        */
      197     8867    1   DCL Y$CHR CHAR(256) BASED;
      198     8868        /*
      199     8869        KV$TRCBFR (VDH trace buffer) declaration.
      200     8870        */
      201     8871        %KV$TRCBFR (NAME = Y$TRCBFR, STCLASS = "BASED(Y@TRCBFR$)");
      202     8929        %EJECT;
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:9    
      203     8930        /* AUTO VARIABLES */
      204     8931    1   DCL Y@VDI$ PTR;
      205     8932    1   DCL Y@SSN$ PTR;
      206     8933    1   DCL P1$ PTR;                            /* Handy pointer                      */
      207     8934        /*
      208     8935        Auto copy of a VDH trace entry.
      209     8936        */
      210     8937        %KV$TRCENT (NAME = Y@TRCENT, STCLASS = AUTO);
      211     8966        /*
      212     8967        Pointer to KV$TRCBFR.
      213     8968        */
      214     8969    1   DCL Y@TRCBFR$ PTR AUTO;
      215     8970
      216     8971    1   DCL FPT(0:16) UBIN;                     /* SPACE FOR FPTS                     */
      217     8972        %KH$CLK (FPTN=KH@CLK);
      218     9121        %EQU KH@CLK = CHARTEXT('ADDR(FPT)->KH@CLK');
      219     9122        %KV$USR_EVT(NAME = USR_EVT);
      220     9157        %EQU USR_EVT = CHARTEXT('ADDR(FPT)->USR_EVT');
      221     9158        %KV$USR_PST(NAME = USR_PST);
      222     9228        %EQU USR_PST = CHARTEXT('ADDR(FPT)->USR_PST');
      223     9229        %KV$USR_RQSDAT(NAME = USR_RQSDAT);
      224     9292        %EQU USR_RQSDAT = CHARTEXT('ADDR(FPT)->USR_RQSDAT');
      225     9293        %KV$VDH_DAT(NAME = VDH_DAT);
      226     9373        %EQU VDH_DAT = CHARTEXT('ADDR(FPT)->VDH_DAT');
      227     9374        %KV$VDH_GETBFR(NAME = VDH_GETBFR);
      228     9439        %EQU VDH_GETBFR = CHARTEXT('ADDR(FPT)->VDH_GETBFR');
      229     9440        %KV$VDH_RLSBFR(NAME = VDH_RLSBFR);
      230     9476        %EQU VDH_RLSBFR = CHARTEXT('ADDR(FPT)->VDH_RLSBFR');
      231     9477        %KV$VDH_PST(NAME = VDH_PST);
      232     9551        %EQU VDH_PST = CHARTEXT('ADDR(FPT)->VDH_PST');
      233     9552        %KV$ERR(NAME = ERR);
      234     9578        %EQU ERR = CHARTEXT('ADDR(FPT)->ERR');
      235     9579
      236     9580
      237     9581        %KV$SND_MRK (NAME = KV@SND_MRK);        /* Marker                             */
      238     9637        %EQU KV@SND_MRK = CHARTEXT('ADDR(FPT)->KV@SND_MRK');
      239     9638
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:10   
      240     9639        %EJECT;
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:11   
      241     9640        /* Trace VDH entry                                                            */
      242     9641
      243     9642         %KH$CALTRC (CND=USR, USRTST="KV_TRCVDHFNC(KV$VDH_DAT.FNC)",
      244     9643         COD=%KV#TRC_COD_CALVDH, BFR1$=KV$VDH_X, BFR1_BYTSIZ=32);
      245     9678    1      Y@VDI$ = KV$PTR.VDI$;
      246     9679    1      Y@SSN$ = KV$PTR.SSN$;
      247     9680    1      IF ADDR(%KV_SSN)=ADDR(NIL) OR %KV_SSN.SSNCNCID=0
      248     9681    1      THEN IF NOT KV_VDHFNCOK_NO_SSN(KV$VDH_DAT.FNC) THEN ALTRETURN;
      249     9682
      250     9683    1      Y@TRCBFR$ = %KV_VDI.TRCBFR$;
      251     9684    2      IF Y@TRCBFR$~=ADDR(NIL) THEN DO;
      252     9685        /*
      253     9686        The VDH trace buffer does exist.  Do VDH tracing.
      254     9687        */
      255     9688    3         IF KV$VDH_EVT.FNC = %KV_VDH_FNC_EVT THEN DO;
      256     9689    3            Y@TRCENT = Y_TRCENT_VDHVDIEVT;
      257     9690    3            Y@TRCENT.FNC = KV$VDH_EVT.ID;
      258     9691    3         END; ELSE DO;                     /* ELSE IF .FNC = EVT                 */
      259     9692    3            Y@TRCENT = Y_TRCENT_VDHVDI;
      260     9693    3            Y@TRCENT.FNC = KV$VDH_EVT.FNC;
      261     9694    3         END;                              /* END IF .FNC = EVT                  */
      262     9695    2         CALL Y$TRC;
      263     9696    2      END; /* END IF TRCBFR$ ~= NIL */
      264     9697
      265     9698    1      %KV_STT.VDIVDHFNCCNT(KV$VDH_DAT.FNC) =
      266     9699    1        %KV_STT.VDIVDHFNCCNT(KV$VDH_DAT.FNC) + 1;
      267     9700    1      GOTO SUBCOMOMON;
      268     9701
      269     9702        /* KVV$VDI entry, for internal (from VDH) calls. No trace.                    */
      270     9703
      271     9704    1   KVV$VDIINT: ENTRY(KV$VDH_X) ALTRET;
      272     9705
      273     9706    1      Y@VDI$ = KV$PTR.VDI$;
      274     9707    1      Y@SSN$ = KV$PTR.SSN$;
      275     9708    1      Y@TRCBFR$ = %KV_VDI.TRCBFR$;
      276     9709
      277     9710    1   SUBCOMOMON:;
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:12   
      278     9711
      279     9712        /* Separate out processing functions. The KV$VDH_DAT structure
      280     9713           is used for convenience only.                                              */
      281     9714
      282     9715    2      DO CASE( KV$VDH_DAT.FNC );
      283     9716
      284     9717        /* Connect request                                                            */
      285     9718
      286     9719    2      CASE(%KV_VDH_FNC_CNC );
      287     9720    3         CALL KVC$CNC (KV$COPY) WHENALTRETURN DO; ALTRETURN; END;
      288     9721
      289     9722        /* Data                                                                       */
      290     9723
      291     9724    2      CASE(%KV_VDH_FNC_DAT );
      292     9725
      293     9726    2         %KV_STT.INPCHRCNT =
      294     9727    2           %KV_STT.INPCHRCNT + KV$VDH_DAT.DAT__.DATBYTSIZ;
      295     9728    2         %KV_SSN.INPCHRCNT =
      296     9729    2           %KV_SSN.INPCHRCNT + KV$VDH_DAT.DAT__.DATBYTSIZ;
      297     9730    3         DO CASE( %KV_VDI.INPUNT );
      298     9731    3         CASE(%KV_INPUNT_BLK );
      299     9732
      300     9733        /* Input is taking place in units of blocks of characters.
      301     9734           This is the last block of input data is this logical input string.         */
      302     9735
      303     9736    3            %KV_VDI.USRRQSDAT.TYPAHD = '0'B;
      304     9737    3            IF NOT KV$PTR.INPCNDPND.TRN
      305     9738    3            THEN %KV_VDI.RE_DSPINP = '1'B;
      306     9739    3            %KV_VDI.RE_DSPLOWX = 0;
      307     9740    3            CALL Y$INPCHRLOP ALTRET(BAD_CLOCK);
      308     9741    4            IF (%KV_VDI.RE_DSPINP AND NOT KV$VDH_DAT.CTN) THEN DO;
      309     9742
      310     9743        /* We're to re-display the input data.                                        */
      311     9744
      312     9745    4               CALL KVI$RE_DSPINP;
      313     9746    4            END;                           /* IF                                 */
      314     9747    3         CASE(%KV_INPUNT_CHR );
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:13   
      315     9748
      316     9749        /* Input is taking place in units of a character (string).                    */
      317     9750
      318     9751    3            CALL Y$INPCHRLOP ALTRET(BAD_CLOCK);
      319     9752    3         CASE(%KV_INPUNT_RCR );
      320     9753
      321     9754        /* Input is taking place in units of a record.                                */
      322     9755
      323     9756    3            IF KV$VDH_DAT.DATMOD = %KV#DATMOD_NRM
      324     9757    4              AND %KV_TRNTBL.INPTRN1$ ~= ADDR(NIL) THEN DO;
      325     9758        /*
      326     9759        This data isn't transparent or binary,
      327     9760        and there is an input translation table, so translate it.
      328     9761        */
      329     9762    5               IF KV$VDH_DAT.DAT__.DATBYTSIZ>%KV_SSN.REDBFR__.BFRBYTSIZ THEN DO;
      330     9763        /*
      331     9764        The user's data won't fit into the current read buffer (if any).
      332     9765        Allocate a (larger) buffer.
      333     9766        */
      334     9767    5                  %VDH_GETBFR.BYTSIZ =
      335     9768    5                    MAXIMUM(MINIMUM(%KV_STR.MAXRCRBYTSIZ, 133), KV$VDH_DAT.DAT__.
              9768                             DATBYTSIZ);
      336     9769    6                  CALL KVS$GETREDBFR(%VDH_GETBFR.BYTSIZ) WHENRETURN DO;
      337     9770        /*
      338     9771        We got the new read buffer.
      339     9772        */
      340     9773    6                     %KV_SSN.REDBFR__.BFRRLSDSP = %KV_BFRRLSDSP_DSC;
      341     9774    6                  END;                     /* WHENRETURN                         */
      342     9775    6                  WHENALTRETURN DO;
      343     9776        /*
      344     9777        We didn't get the buffer.
      345     9778        */
      346     9779    6                     ALTRETURN;
      347     9780    6                  END;                     /* WHENALTRETURN                      */
      348     9781    5               END;              /* END IF DATBYTSIZ>%KV_SSN.REDBFR__.BFRBYTSIZ  */
      349     9782    4               FPT(0) = KV$VDH_DAT.DAT__.DATBYTSIZ;
      350     9783    4               FPT(2) = KV$VDH_DAT.DAT__.BYTX;
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:14   
      351     9784    4               P1$ = %KV_SSN.REDBFR__.ADR$;
      352     9785    4               FPT(1) = %KV_SSN.REDBFR__.BYTX;
      353     9786    4               Y@TRCBFR$ = %KV_TRNTBL.INPTRN1$;
      354     9787    4               CALL XLATE(
      355     9788    4                 SUBSTR(P1$->Y$CHR, FPT(1), FPT(0)),
      356     9789    4                 Y@TRCBFR$->Y$CHR,
      357     9790    4                 SUBSTR(KV$VDH_DAT.DAT__.ADR$->Y$CHR, FPT(2), FPT(0)));
      358     9791    4               %KV_SSN.REDBFR__.DATBYTSIZ = FPT(0);
      359     9792    4               %VDH_DAT = KV$VDH_DAT;
      360     9793    4               %VDH_DAT.DAT__ = %KV_SSN.REDBFR__;
      361     9794    4               CALL KVI$SNDDAT (%VDH_DAT);
      362     9795    4            END; ELSE DO;                  /* END IF DATMOD = NRM                */
      363     9796        /*
      364     9797        Translation isn't required.
      365     9798        */
      366     9799    4               CALL KVI$SNDDAT(KV$COPY);
      367     9800    4            END;                           /* END ELSE IF DATMOD = NRM           */
      368     9801    4            IF (KV$VDH_DAT.CMPCOD = %KV_CMPCOD_EOF) THEN DO;
      369     9802
      370     9803        /* End of file was just reported. For now, reset the credits
      371     9804           we have for sending records, until the other end takes some action. */
      372     9805
      373     9806    4               %KV_STR.SNDMAXNMBRCR = 0;
      374     9807    4            END;
      375     9808    4            ELSE DO WHILE %KV_STR.SNDMAXNMBRCR>0
      376     9809
      377     9810        /* There are still outstanding credits for data.                              */
      378     9811
      379     9812    4              AND NOT %KV_VDI.INTREDINH AND NOT %KV_VDI.USRRQSDAT.RED;
      380     9813
      381     9814        /* Initializing reads isn't inhibited.
      382     9815           Try for another USR_RQSDAT.                                             */
      383     9816
      384     9817    4               %KV_VDI.INTREDINH = '1'B;
      385     9818    4               %KV_SSN.REDRQSPND = '1'B;
      386     9819    4               %KV_VDI.USRRQSDAT.RED = '1'B;
      387     9820    4               %USR_RQSDAT = KV_USR_RQSDAT;
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:15   
      388     9821    4               %USR_RQSDAT.MAXRCRBYTSIZ = %KV_STR.MAXRCRBYTSIZ;
      389     9822
      390     9823    4               IF KV$PTR.INPCNDPND.TRN THEN
      391     9824        /*
      392     9825        This is a transparent mode read.
      393     9826        */
      394     9827    4               %USR_RQSDAT.DATMOD = %KV#DATMOD_TRN;
      395     9828    4               ELSE
      396     9829        /*
      397     9830        This read isn't in transparent mode.
      398     9831        */
      399     9832    4               %USR_RQSDAT.DATMOD = %KV#DATMOD_NRM;
      400     9833    4               CALL KVV$CALUSR (%USR_RQSDAT);
      401     9834    4               %KV_VDI.INTREDINH = '0'B;
      402     9835    4            END;                           /* IF                                 */
      403     9836    3         END /* CASE */;
      404     9837
      405     9838        /* Declare local position                                                     */
      406     9839
      407     9840    2      CASE(%KV_VDH_FNC_DCLLCLPST);
      408     9841    3         IF %KV_VDI.SSNCNT>1 THEN DO;
      409     9842    3            CALL KVI$PRGTYPAHDINPFNC;
      410     9843    3            %KV_SSN.TYPAHD.BFRCHR = '0'B;
      411     9844    3            FPT(0) = %KV_SSN.SSNID;
      412     9845    4            DO WHILE KV$VDH_DCLLCLPST.PHSPST.LIN<%KV_SRD.TOPLFT.LIN
      413     9846    4              OR KV$VDH_DCLLCLPST.PHSPST.LIN>%KV_SRD.SRDEND.LIN
      414     9847    4              OR KV$VDH_DCLLCLPST.PHSPST.CLM>%KV_SRD.SRDEND.CLM
      415     9848    4              OR KV$VDH_DCLLCLPST.PHSPST.CLM<%KV_SRD.TOPLFT.CLM;
      416     9849    4               IF %KV_SSN.LNK$=ADDR(NIL)
      417     9850    4               THEN KV$PTR$ = %KV_VDI.SSN$->KV$SSN.SNCPTR$;
      418     9851    4               ELSE KV$PTR$ = %KV_SSN.LNK$->KV$SSN.SNCPTR$;
      419     9852    4               Y@SSN$ = KV$PTR.SSN$;
      420     9853    4               IF %KV_SSN.SSNID = FPT(0) THEN EXIT;
      421     9854    4            END;
      422     9855    3            FPT(0) = %KV_STR.ID;
      423     9856    3            CALL KVS$SETSTR (FPT);
      424     9857    3            %KV_VDI.RE_DSPINP = '1'B;
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:16   
      425     9858    3         END;
      426     9859    3         IF %KV_MVD.ORG=%KV#VD_ORG_FORM AND %KV_SSN.REDRQSPND THEN DO;
      427     9860    3            %VDH_PST = KV_VDH_PST_ABS;
      428     9861    3            %VDH_PST.PSTVAL = KV$VDH_DCLLCLPST.PHSPST;
      429     9862    3            CALL KVF$PST(FPT);
      430     9863    3         END;                              /* IF                                 */
      431     9864    2         %KV_SSN.REDBFR = '0'B;
      432     9865    2         %KV_SSN.REDBFR__.DATBYTSIZ = 0;
      433     9866
      434     9867        /* Disconnect request                                                         */
      435     9868
      436     9869    2      CASE(%KV_VDH_FNC_DSC );
      437     9870    2         CALL KVC$DSC(KV$COPY);
      438     9871
      439     9872        /* DEVICE ERROR. Report the device error to the host, for
      440     9873           action (possibly) by keyin.                                                */
      441     9874
      442     9875
      443     9876        /* Report event                                                               */
      444     9877
      445     9878    2      CASE(%KV_VDH_FNC_EVT );
      446     9879
      447     9880        /* Trace if indicated */
      448     9881
      449     9882              %KH$CALTRC (CND=USR, USRTST="KV_TRCVDHEVT(KV$VDH_EVT.ID)",
      450     9883              COD=%KV#TRC_COD_CALVDH, BFR1$=KV$VDH_X, BFR1_BYTSIZ=32);
      451     9918
      452     9919    2         %KV_STT.VDIVDHEVTCNT(KV$VDH_EVT.ID) =
      453     9920    2           %KV_STT.VDIVDHEVTCNT(KV$VDH_EVT.ID) + 1;
      454     9921
      455     9922    3         DO CASE( KV$VDH_EVT.ID );
      456     9923
      457     9924        /* Attention (e.g., CP-5 control-Y or break).                                 */
      458     9925
      459     9926    3         CASE(%KV_VDH_EVT_ID_ATN );
      460     9927    3            IF %KV_SSN.SSNCNCID=0 THEN ALTRETURN;
      461     9928    3            IF NOT %KV_SSN.WATINPDLTMRK AND NOT %KV_SSN.WATOTPDLTMRK
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:17   
      462     9929    3            THEN %KV_SSN.MRKRQSENB = '1'B;
      463     9930    4            IF (KV$VDH_EVT.PRM > 0) THEN DO;
      464     9931
      465     9932        /* The parameter is greater than 0; send a break.                             */
      466     9933    4               CALL KVM$SND (KV_SND_EVT_BRK);
      467     9934    4            END; ELSE DO;
      468     9935
      469     9936        /* The parameter is 0. Send a monitor attention request.                      */
      470     9937
      471     9938    4               CALL KVM$SND (KV_SND_EVT_MNTATN);
      472     9939    4            END;                           /* IF                                 */
      473     9940
      474     9941        /* Complete output.                                                           */
      475     9942
      476     9943    3         CASE(%KV_VDH_EVT_ID_CMPOTP );
      477     9944    3   CMPOTP:  ;
      478     9945    4            IF %KV_VDI.OTPCNDPND.PST ~= 0 THEN DO;
      479     9946
      480     9947        /* The physical and device cursor positions don't
      481     9948           match, and we are to complete output, so we
      482     9949           have to generate whatever is required to move
      483     9950           the cursor to the physical position.                                       */
      484     9951
      485     9952    4               %USR_PST = KV_USR_PST;
      486     9953    4               %USR_PST.PHSPST = %KV_SRD.CRT;
      487     9954    4               %USR_PST.PHSPSTMOD = %KV_VDI.OTPCNDPND.PST;
      488     9955    4               %KV_VDI.OTPCNDPND.PST = 0;
      489     9956    4               %KV_STT.VDIUSRFNCCNT(%KV_USR_FNC_PST) =
      490     9957    4                 %KV_STT.VDIUSRFNCCNT(%KV_USR_FNC_PST) +1;
      491     9958    5               IF Y@TRCBFR$~=ADDR(NIL) THEN DO;
      492     9959        /*
      493     9960        The VDH trace buffer does exist.  Do VDH tracing.
      494     9961        */
      495     9962    5                  Y@TRCENT = Y_TRCENT_USRVDIPST;
      496     9963    5                  CALL Y$TRC;
      497     9964    5               END;                        /* END IF TRCBFR$ ~= NIL              */
      498     9965    5               IF %KV_MRD.CALUSR_PST THEN DO;
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:18   
      499     9966    5                  CALL %KV_USRPRM.USRSBR$ (FPT);
      500     9967    5               END; ELSE DO;               /* ELSE IF CALUSR_PST                 */
      501     9968    5                  CALL KVO$GNRPST (FPT);
      502     9969    5               END;                        /* END IF CALUSR_PST                  */
      503     9970    4            END;                           /* IF                                 */
      504     9971
      505     9972        /* Release VDI.                                                               */
      506     9973
      507     9974    3         CASE(%KV_VDH_EVT_ID_RLSVDI );
      508     9975    4            IF (%KV_VDI.SSN$ ~= ADDR(NIL)) THEN DO;
      509     9976
      510     9977        /* We have at least one session associated with this instance
      511     9978           of VDI.                                                                    */
      512     9979
      513     9980    4               %KV_VDI.VDHEVTENB(%KV_VDH_EVT_ID_RLSVDI) = '0'B;
      514     9981
      515     9982
      516     9983        /* Have path management schedule this session.                                */
      517     9984
      518     9985    4               IF KV_RCVSSN$~=Y@SSN$
      519     9986        /* Unless we're already processing for this session. */
      520     9987
      521     9988    4               THEN CALL KVM$SND (KV_SND_SCHLCLSSN);
      522     9989    4            END; ELSE DO;
      523     9990
      524     9991        /* We succeeded on KV$VDH_INT, and failed on KV$VDH_CNC.
      525     9992           Release the instance of VDI created by KV$VDH_INT.                         */
      526     9993
      527     9994    4               CALL KVC$RLSVDI;
      528     9995    4            END;                           /* IF                                 */
      529     9996
      530     9997        /* Request output.                                                            */
      531     9998
      532     9999    3         CASE(%KV_VDH_EVT_ID_RQSOTP );
      533    10000    3            P1$ = KV$PTR$;
      534    10001    3            Y@SSN$ = %KV_VDI.SSN$;
      535    10002    3            IF NOT %KV_MRD.OUTPUT THEN %KV_VDI.RQSOTP = '0'B;
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:19   
      536    10003    4            DO WHILE Y@SSN$~=ADDR(NIL);
      537    10004    4               IF (NOT %KV_SSN.REDRQSPND OR %KV_SSN.SNCPTR$->KV$PTR.INPCNDPND.TRN
      538    10005    4                 OR %KV_SSN.VDI$->KV$VDI.INPUNT=%KV_INPUNT_RCR)
      539    10006    4                 AND %KV_SSN.SSNCNCID~=0 AND NOT %KV_SSN.OTPBLK\%KV_VDI.RQSOTP
      540    10007
      541    10008        /* There is no message Q, and the VDH-user wants more output.                 */
      542    10009
      543    10010    5               THEN DO;
      544    10011    5                  KV$PTR$ = %KV_SSN.SNCPTR$;
      545    10012    5                  CALL KVM$SND (KV_SND_RQSDAT_GNR);
      546    10013    5               END;
      547    10014    4               Y@SSN$ = %KV_SSN.LNK$;
      548    10015    4            END;                           /* END IF                             */
      549    10016    3            KV$PTR$ = P1$;
      550    10017    3            RETURN;
      551    10018    3         CASE(ELSE);
      552    10019
      553    10020        /* We got an event we don't understand.                                       */
      554    10021
      555    10022        /*S* SCREECH_CODE: KVV-S$KV_VDHEVT
      556    10023             MESSAGE: VDH got a KV$VDH_EVT.ID it didn't understand
      557    10024        */
      558    10025                 %KH$SCREECH(COD=KVV_VDHEVT);
      559    10029    3         END /* CASE */;
      560    10030
      561    10031        /* Find input tab                                                             */
      562    10032
      563    10033    2      CASE(%KV_VDH_FNC_FNDINPTAB );
      564    10034        /*S* SCREECH_CODE: KVV-S$KV_VDHFNC
      565    10035             MESSAGE: VDH got a KV$VDH_FNC.FNC it didn't understand
      566    10036        */
      567    10037              %KH$SCREECH(COD=KVV_VDHFNC);
      568    10041
      569    10042        /* Get buffer request                                                         */
      570    10043
      571    10044    2      CASE(%KV_VDH_FNC_GETBFR );
      572    10045    2         CALL KVS$GETBFR(KV$COPY)
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:20   
      573    10046    3         WHENALTRETURN DO;
      574    10047    3            ALTRETURN;
      575    10048    3         END;
      576    10049
      577    10050        /* Get parameter.                                                             */
      578    10051
      579    10052    2      CASE(%KV_VDH_FNC_GETPRM );
      580    10053    2         CALL KVP$GETPRM(KV$COPY);
      581    10054
      582    10055        /* Interpret input operator(s)                                                */
      583    10056
      584    10057    2      CASE(%KV_VDH_FNC_INTINPOPR );
      585    10058
      586    10059    2         CALL KVI$INTINPOPR(KV$COPY);
      587    10060
      588    10061        /* Output local (output specified data to local device as opposed
      589    10062           to sending it to the other end.                                            */
      590    10063
      591    10064    2      CASE(%KV_VDH_FNC_OTPLCL );
      592    10065
      593    10066    2         CALL KVO$OTPLCL(KV$COPY);
      594    10067
      595    10068        /* Output marker. We previously sent the VDH-user KV$USR_OTPMRK;
      596    10069          The VDH-user is now returning the data we passed it.  */
      597    10070
      598    10071    2      CASE(%KV_VDH_FNC_OTPMRK );
      599    10072    2         P1$ = KV$PTR$;
      600    10073
      601    10074        /* First make sure we're dealing with the right session context. */
      602    10075
      603    10076    3         IF KV$VDH_OTPMRK.DAT.SSNID~=%KV_SSN.SSNID THEN DO;
      604    10077    3            Y@SSN$ = %KV_VDI.SSN$;
      605    10078    4            DO WHILE KV$VDH_OTPMRK.DAT.SSNID~=%KV_SSN.SSNID;
      606    10079    5               IF %KV_SSN.LNK$=ADDR(NIL) THEN DO;
      607    10080    5                  ALTRETURN;
      608    10081    5               END;
      609    10082    4               Y@SSN$ = %KV_SSN.LNK$;
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:21   
      610    10083    4            END;
      611    10084    3            KV$PTR$ = %KV_SSN.SNCPTR$;
      612    10085    3         END;
      613    10086    3         DO CASE( KV$VDH_OTPMRK.DAT.TYP );
      614    10087    3         CASE(%KV_MRKTYP_SAVLSTRCRID );
      615    10088
      616    10089        /* This marker is for tracking the last successfully-processed
      617    10090           record ID (which is probably symbiont deblocker block and
      618    10091           record number). We simply save the ID if the output was successful.        */
      619    10092
      620    10093    4            IF (KV$VDH_OTPMRK.CMPCOD = 0) THEN DO;
      621    10094
      622    10095        /* The record was successfully processed.                                     */
      623    10096
      624    10097    4               %KV_SSN.LSTOTPRCRID = KV$VDH_OTPMRK.DAT.ID;
      625    10098    4            END;                           /* IF                                 */
      626    10099    3         CASE(%KV_MRKTYP_SNDLSTRCRID,
      627    10100    3              %KV_MRKTYP_MRK,
      628    10101    3              %KV_MRKTYP_ACK);
      629    10102    3            %KV@SND_MRK = KV_SND_MRK;
      630    10103    3            %KV@SND_MRK.VDH_MRK$ = ADDR(KV$VDH_X);
      631    10104    3            CALL KVM$SND(%KV@SND_MRK);
      632    10105    3         CASE (%KV_MRKTYP_REDTIMOUT);
      633    10106
      634    10107        /* Start a read-timout clock.  The prompt has been displayed. */
      635    10108    3            IF NOT %KV_VDI.USRRQSDAT.RED
      636    10109    3              OR %KV_SSN.REDTIMOUT.MRKNMB~=KV$VDH_OTPMRK.DAT.ID_WRD(1) THEN EXIT;
      637    10110    3            %KH@CLK = KV_SETCLK;
      638    10111    3            %KH@CLK.UID$ = ADDR(%KV_SSN);
      639    10112    3            %KH@CLK.UVAL = %KV_CLKNMB_USRREDTIMOUT;
      640    10113    3            %KH@CLK.PRDUNT = KV$VDH_OTPMRK.DAT.ID_BYT(0);
      641    10114    3            %KH@CLK.PRD = KV$VDH_OTPMRK.DAT.ID_BYT(1);
      642    10115    4            CALL KHC$CLOCK (FPT) WHENRETURN DO;
      643    10116    4               %KV_SSN.CLKSET(%KV_CLKNMB_USRREDTIMOUT)='1'B;
      644    10117    4            END;
      645    10118    3         CASE ELSE;
      646    10119        /*S*  SCREECH_CODE: KVV-S$KV_MRKTYP
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:22   
      647    10120              MESSAGE: VDH got a marker whose type was invalid.
      648    10121        */
      649    10122                 %KH$SCREECH(COD=KVV_MRKTYP);
      650    10126    3         END /* CASE */;
      651    10127
      652    10128    2         KV$PTR$ = P1$;
      653    10129        /* Perform virtual or physical positioning                                    */
      654    10130
      655    10131    2      CASE(%KV_VDH_FNC_PST );
      656    10132
      657    10133    2         CALL KVO$PST(KV$COPY);
      658    10134
      659    10135        /* Request to release a buffer                                                */
      660    10136
      661    10137    2      CASE(%KV_VDH_FNC_RLSBFR );
      662    10138
      663    10139    2         CALL KVS$RLSBFR(KV$COPY);
      664    10140
      665    10141        /* Request data                                                               */
      666    10142
      667    10143    2      CASE(%KV_VDH_FNC_RQSDAT );
      668    10144              %KH$SCREECH(COD=KVV_VDHFNC);
      669    10148
      670    10149        /* Set clock.                                                                 */
      671    10150
      672    10151    2      CASE(%KV_VDH_FNC_SETCLK );
      673    10152    2         %KH@CLK = KV_SETCLK;
      674    10153    2         %KH@CLK.PRDUNT = KV$VDH_SETCLK.UNT;
      675    10154    2         %KH@CLK.PRD = KV$VDH_SETCLK.PRD;
      676    10155    2         %KH@CLK.UVAL = KV$VDH_SETCLK.CLKNMB;
      677    10156    2         IF %KH@CLK.UVAL>7 THEN GOTO BAD_CLOCK;
      678    10157    2         IF %KV_SSN.CLKSET(%KH@CLK.UVAL) THEN %KH@CLK.FNC = %KH#CLK_RESET;
      679    10158    2         %KH@CLK.UID$ = ADDR(%KV_SSN);
      680    10159    3         CALL KHC$CLOCK (FPT) WHENRETURN DO;
      681    10160    3            %KV_SSN.CLKSET(%KH@CLK.UVAL) = '1'B;
      682    10161    3         END;
      683    10162    3         WHENALTRETURN DO;
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:23   
      684    10163
      685    10164        /* We can't set the clock.                                                    */
      686    10165
      687    10166    3   BAD_CLOCK: ALTRETURN;
      688    10167    3         END;
      689    10168
      690    10169        /* Set parameters                                                             */
      691    10170
      692    10171    2      CASE(%KV_VDH_FNC_SETPRM );
      693    10172
      694    10173    2         CALL KVP$SETPRM(KV$COPY);
      695    10174
      696    10175        /* Search for input function                                                  */
      697    10176
      698    10177    2      CASE(%KV_VDH_FNC_SRCINPFNCID );
      699    10178              %KH$SCREECH(COD=KVV_VDHFNC);
      700    10182    2      CASE(ELSE);
      701    10183              %KH$SCREECH(COD=KVV_VDHFNC);
      702    10187    2      END /* CASE */;
      703    10188    1      RETURN;
      704    10189        %EJECT;
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:24   
      705    10190        /*I* NAME: Y$INPCHRLOP.
      706    10191             DESCRIPTION: Input character loop. Process all characters passed via the
      707    10192             via the KV$VDH_DAT structure. This may involve the following:
      708    10193
      709    10194             Characters passed directly via KV$VDH_DAT, including
      710    10195             complete processing or buffering in type-ahead buffers.
      711    10196
      712    10197             Processing characters previously saved in type-ahead buffers.  */
      713    10198
      714    10199    1   Y$INPCHRLOP: PROC ALTRET;
      715    10200        %G$LOW_MEM (STCLASS="BASED(G$LOW_MEM$)");
      716    10249    2   DCL G$LOW_MEM$ PTR SYMREF READONLY;
      717    10250    2   DCL Y$CHR(0:0) BASED CHAR(1);
      718    10251    2   DCL INPFNCFLG BIT(1);
      719    10252    2   DCL INPCND BIT(32);
      720    10253    2   DCL INPCNDFLG SBIN;
      721    10254
      722    10255        /* Save INPCNDPND in case we clobber it processing typeahead. */
      723    10256
      724    10257    2      INPCNDFLG = 0;                       /* 0=First time,1=in typahd, -1=done  */
      725    10258    2      INPCND = KV$PTR.INPCNDPND;
      726    10259    3      DO WHILE ('1'B);                     /* LOOP START                         */
      727    10260
      728    10261        /* This loop is traversed once for each
      729    10262           input character processed.                                                 */
      730    10263    3         IF G$LOW_MEM.WDT_CURR<50 THEN ALTRETURN;
      731    10264        /* Initialize processing flags for this trip thru the loop.                   */
      732    10265    3         IF NOT %KV_VDI.HALFDUPLEXPAPERTAPE AND NOT %KV_VDI.RE_DSPINP
      733    10266        /* We're not in half duplex paper tape mode,
      734    10267           and this device operates in character mode.                                */
      735    10268    3         THEN %KV_SSN.INPECH = '1'B;
      736    10269    3         ELSE %KV_SSN.INPECH = '0'B;
      737    10270    3         %KV_SSN.TYPAHD = '0'B;
      738    10271    4   PRC:  DO;                               /* GROUP START                        */
      739    10272        /* This group is exited when the character being processed has
      740    10273           been processed.                                                            */
      741    10274    5            IF %KV_VDI.USRRQSDAT.RED THEN DO;
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:25   
      742    10275
      743    10276        /* There is an enabled read. do read processing.                              */
      744    10277    5               P1$ = %KV_SSN.TYPAHDBFRHED$;
      745    10278    6               IF KV$TYPAHDBFR.CHRX_HI>=KV$TYPAHDBFR.CHRX THEN DO;
      746    10279
      747    10280        /* There is type-ahead.                                                       */
      748    10281    7                  IF INPCNDFLG=0 THEN DO;
      749    10282        /* First character for the read, there's no INPCND except TRN. */
      750    10283
      751    10284    7                     INPCNDFLG = 1;
      752    10285    7                     KV$PTR.INPCNDPND = %KV_SSN.TYPCND;
      753    10286    7                  END;
      754    10287    6                  INPFNCFLG = KV$TYPAHDBFR.INPFNCTXT;
      755    10288    6                  %KV_SSN.INPCHR = KV$TYPAHDBFR_CHR(KV$TYPAHDBFR.CHRX);
      756    10289    7                  IF KV$TYPAHDBFR.CHRX>=KV$TYPAHDBFR.CHRX_HI THEN DO;
      757    10290
      758    10291        /* This is the last character in this buffer.                                 */
      759    10292    8                     IF KV$TYPAHDBFR.LNK$~=ADDR(NIL) THEN DO;
      760    10293        /* The link in this buffer isn't addr(nil). release the buffer.
             10293        */
      761    10294    8                        %KV_SSN.TYPAHDBFRHED$ = KV$TYPAHDBFR.LNK$;
      762    10295    8                        IF P1$=%KV_SSN.TYPAHDBFRINS$
      763    10296
      764    10297        /* The type-ahead buffer insert pointer pointed into the buffer
      765    10298           we're releasing. advance it to the next buffer also.                       */
      766    10299    8                        THEN %KV_SSN.TYPAHDBFRINS$ = KV$TYPAHDBFR.LNK$;
      767    10300    8                        %KV_SSN.TYPAHDBFRCNT = %KV_SSN.TYPAHDBFRCNT-1;
      768    10301    8                        %VDH_RLSBFR = KV_VDH_RLSBFR;
      769    10302    8                        %VDH_RLSBFR.BFR$ = P1$;
      770    10303    8                        %VDH_RLSBFR.STRTYP = %KV_STRTYP_TYPAHDBFR;
      771    10304    8                        CALL KVS$RLSBFR(FPT);
      772    10305    8                     END; ELSE DO;
      773    10306
      774    10307        /* The link in this buffer is addr(nil)* in the chain. don't release it,
      775    10308           just re-initialize it to be empty,  after clearing any input function
      776    10309           pointer into the type ahead buffer chain.    */
      777    10310    8                        %KV_SSN.TYPAHDBFRINPFNC$ = ADDR(NIL);
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:26   
      778    10311    8                        %KV_SSN.TYPCND.NOT_TRN = '0'B;
      779    10312    8                        KV$TYPAHDBFR = KV_TYPAHDBFR;
      780    10313        /* INPCNDPND is accurate now. Don't muck with it anymore. */
      781    10314    8                        INPCNDFLG = -1;
      782    10315    8                     END;                  /* IF                                 */
      783    10316    7                  END; ELSE DO;
      784    10317
      785    10318        /* This isn't the last character in this buffer.                              */
      786    10319    7                     KV$TYPAHDBFR.CHRX = KV$TYPAHDBFR.CHRX+1;
      787    10320    7                  END;                     /* IF                                 */
      788    10321
      789    10322        /* If the buffer that the current character came from was
      790    10323           created by an input function, don't translate the character,
      791    10324           or allow user input function processing on it.                             */
      792    10325    6                  IF INPFNCFLG THEN CALL KVI$INPCHR_INPFNCIMD;
      793    10326
      794    10327        /* Otherwise, the character was copied directly from the input buffer,
      795    10328           so do full character processing on it, except "immediate" functions.          */
      796    10329    6                  ELSE CALL KVI$INPCHR_TYPAHD;
      797    10330
      798    10331        /* We're done processing this character.                                      */
      799    10332    6                  EXIT PRC;
      800    10333    6               END;
      801    10334
      802    10335        /* There is no type-ahead. we are doing immediate processing,
      803    10336           and read processing.                                                       */
      804    10337    5               INPCNDFLG = -1;             /* We're in sync now.                 */
      805    10338    5            END; ELSE DO;
      806    10339
      807    10340        /* There is no enabled read. do immediate character
      808    10341           processing only.                                                           */
      809    10342    6               IF INPCNDFLG>=0 THEN DO;
      810    10343        /* The read finished; if the typahead didnt, restore INPCNDPND. */
      811    10344    6                  IF INPCNDFLG>0 THEN KV$PTR.INPCNDPND = INPCND;
      812    10345    6                  INPCNDFLG = -1;
      813    10346    6               END;
      814    10347    5            END;                           /* IF                                 */
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:27   
      815    10348
      816    10349        /* We're not processing type-ahead.                                           */
      817    10350    5            IF KV$VDH_DAT.DAT__.DATBYTSIZ~=0 THEN DO;
      818    10351
      819    10352        /* There is more data in the buffer. Process a character.      */
      820    10353
      821    10354    5               %KV_SSN.INPCHR = KV$VDH_DAT.DAT__.ADR$->
      822    10355    5                 Y$CHR(KV$VDH_DAT.DAT__.BYTX);
      823    10356    5               IF KV$VDH_DAT.CNTFNCCHRS
      824    10357    5               THEN IF KV$PTR.INPCNDPND.ESC
      825    10358    5               THEN KV$VDH_DAT.CMPCOD = KV$VDH_DAT.CMPCOD+1;
      826    10359    5               KV$VDH_DAT.DAT__.DATBYTSIZ = KV$VDH_DAT.DAT__.DATBYTSIZ-1;
      827    10360    5               KV$VDH_DAT.DAT__.BYTX = KV$VDH_DAT.DAT__.BYTX+1;
      828    10361    5               INPFNCFLG = %KV_SSN.NO_WATREDTRG; /* Remember what it was         */
      829    10362
      830    10363        /* For transparent reads, use a fast routine to bypass the translation. */
      831    10364
      832    10365    5               IF KV$PTR.INPCNDFLG.BITS='8000'X
      833    10366    5               THEN CALL KVQ$CPYDAT (KV$PTR, KV$VDH_DAT)
      834    10367    6               WHENRETURN DO;         /* If it copied all the input, we're done  */
      835    10368    6                  RETURN;
      836    10369    6               END;
      837    10370    5               CALL KVI$INPCHR;
      838    10371    6               IF NOT %KV_VDI.USRRQSDAT.RED AND %KV_SSN.TYPAHD THEN DO;
      839    10372
      840    10373        /* We're not doing read processing, and character processing
      841    10374           determined that this character should be retained for read
      842    10375           processing, at least until the need is more clearly established.           */
      843    10376    6                  P1$ = %KV_SSN.TYPAHDBFRINS$;
      844    10377    6                  IF KV$TYPAHDBFR.CHRX_HI>=%KV_TYPAHDBFR_CHRX_HI
      845    10378    6                  THEN IF %KV_SSN.TYPAHDBFRCNT>=KV_TYPAHDBFRLMT THEN EXIT;
      846    10379        /* If we already have enough typeahead, only process Immed functions. */
      847    10380    7                  ELSE DO;
      848    10381
      849    10382        /* The current insert type-ahead buffer is full. go on to the
      850    10383           next in the chain, or get another.                                         */
      851    10384    8                     IF KV$TYPAHDBFR.LNK$~=ADDR(NIL) THEN DO;
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:28   
      852    10385
      853    10386        /* The current insert buffer isn't the last in the chain.
      854    10387           go on to the next.                                                         */
      855    10388    8                        P1$ = KV$TYPAHDBFR.LNK$;
      856    10389    8                        KV$TYPAHDBFR.INPFNCTXT = '0'B;
      857    10390    8                        KV$TYPAHDBFR.CHRX = SIZEC(KV$TYPAHDBFR);
      858    10391    8                        KV$TYPAHDBFR.CHRX_HI = SIZEC(KV$TYPAHDBFR)-1;
      859    10392    8                     END; ELSE DO;
      860    10393
      861    10394        /* The current insert buffer is the last in the chain. get
      862    10395           another buffer, and q it onto the current insert (tail).                   */
      863    10396    8                        %VDH_GETBFR = KV_VDH_GETBFR;
      864    10397    8                        %VDH_GETBFR.STRTYP = %KV_STRTYP_TYPAHDBFR;
      865    10398    9                        CALL KVS$GETBFR(FPT) WHENRETURN DO;
      866    10399
      867    10400        /* We got a buffer.                                                           */
      868    10401    9                           KV$TYPAHDBFR.LNK$ = %VDH_GETBFR.BFR$;
      869    10402    9                           %KV_SSN.TYPAHDBFRCNT = %KV_SSN.TYPAHDBFRCNT+1;
      870    10403    9                           P1$ = %VDH_GETBFR.BFR$;
      871    10404    9                        END; WHENALTRETURN DO;
      872    10405
      873    10406        /* We didn't get a buffer.                                                    */
      874    10407        /*n* throw in lost-data code.                                                 */
      875    10408    9                           RETURN;
      876    10409    9                        END;
      877    10410    8                     END;                  /* IF                                 */
      878    10411    7                     %KV_SSN.TYPAHDBFRINS$ = P1$;
      879    10412    7                  END;
      880    10413
      881    10414        /* The current type-ahead insert buffer isn't full.                           */
      882    10415    6                  KV$TYPAHDBFR.CHRX_HI = KV$TYPAHDBFR.CHRX_HI+1;
      883    10416    6                  KV$TYPAHDBFR_CHR(KV$TYPAHDBFR.CHRX_HI) = %KV_SSN.INPCHR;
      884    10417    6                  IF %KV_SSN.TYPAHD.BFRCHR
      885    10418
      886    10419        /* KV$SSN.TYPAHD.BFRCHR and KV$SSN.TYPAHD.BFRINPFNCCHR.
      887    10420           this character completes an input function invocation
      888    10421           that needs to be buffered for read processing.
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:29   
      889    10422
      890    10423           Examples: double INPCTRSTRCHR_INT, ESC-R, and BS.
      891    10424           not ESC-Q.
      892    10425
      893    10426           -- or --
      894    10427
      895    10428           KV$SSN.TYPAHD.BFRCHR and not KV$SSN.TYPAHD.BFRINPFNCCHR.
      896    10429           This character is a simple character that has no input
      897    10430           function significance.                                                     */
      898    10431    7                  THEN DO;
      899    10432    7                     %KV_SSN.TYPAHDBFRINPFNC$ = ADDR(NIL);
      900    10433    7                  END;
      901    10434    6                  ELSE IF %KV_SSN.TYPAHD.BFRINPFNCCHR
      902    10435
      903    10436        /* This character is part (but not the last part) of a
      904    10437           string that invokes an input function. we don't yet know
      905    10438           if we need to leave it in the buffer for later read
      906    10439           processing, so leave it for now. E.g., the ESC in ESC-R.            */
      907    10440    7                    AND %KV_SSN.TYPAHDBFRINPFNC$=ADDR(NIL) THEN DO;
      908    10441    7                     %KV_SSN.TYPAHDBFRINPFNC$ = P1$;
      909    10442    7                     %KV_SSN.TYPAHDBFRINPFNCX = KV$TYPAHDBFR.CHRX_HI-1;
      910    10443    7                  END;                     /* IF                                 */
      911    10444    6               END;
      912    10445    6               IF %KV_SSN.NO_WATREDTRG AND NOT INPFNCFLG THEN DO;
      913    10446
      914    10447        /* There is a delayed read request to be enabled, and it's
      915    10448           ok to enable it.                                                           */
      916    10449    6                  CALL KVI$ENBNO_WATRED;
      917    10450    6               END;                        /* IF                                 */
      918    10451    5            END;                           /* IF                                 */
      919    10452        /* There are no characters left to process, so don't.  */
      920    10453    4            ELSE RETURN;
      921    10454    4         END PRC;
      922    10455    3         Y@SSN$ = KV$PTR.SSN$; /* An input function might have changed it on us  */
      923    10456        /* We dont need to do it right after the call to KVI$INPCHR, because if
      924    10457          if did something, it isn't going to need saving in TYPAHD, usefully, anyway */
      925    10458    3      END /* LOOP */;
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:30   
      926    10459    2   END; /* SUBROUTINE */
      927    10460        %KV$BOX(PAGE = YES, TITLE = "Do VDH tracing");
             10468        %IF '1'B;

PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:31   
             10470        %ELSE;
             10471 C      %SPACE %SPACEVALUE;
             10472        %ENDIF;
             10478    2   /***************************************************************************
             10479    2    *                                                                         *
             10480    2    *                               Do VDH tracing                            *
             10481    2    *                                                                         *
             10482    2    ***************************************************************************/

      928    10487    1   Y$TRC: PROC;
      929    10488    3      IF Y@TRCENT = (Y$TRCBFR.TRCENT(Y$TRCBFR.TRCENTX) & %KV#TRCENT_MSK) THEN DO;
      930    10489        /*
      931    10490        The last trace entry is identical to the entry we're about
      932    10491        to put in, with the possible exception of the multiple
      933    10492        entry bit.  Just set the multiple entry bit, and don't add
      934    10493        another entry.
      935    10494        */
      936    10495    3         Y$TRCBFR.TRCENT.MLT(Y$TRCBFR.TRCENTX) = '1'B;
      937    10496    3      END; ELSE DO;
      938    10497        /*
      939    10498        The last entry isn't identical to the entry we're about to
      940    10499        add.  Add another entry, possibly wrapping the index first.
      941    10500        */
      942    10501    3         Y$TRCBFR.TRCENTX = Y$TRCBFR.TRCENTX + 1;
      943    10502    3         IF Y$TRCBFR.TRCENTX > Y$TRCBFR.MAXTRCENTX THEN
      944    10503    3         Y$TRCBFR.TRCENTX = 0;
      945    10504
      946    10505    3         Y$TRCBFR.TRCENT(Y$TRCBFR.TRCENTX) = Y@TRCENT;
      947    10506    3      END; /* END ELSE IF TRCENTX = MAXTRCENTX */
      948    10507    2   END Y$TRC;
      949    10508
      950    10509        %EJECT;
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:32   
      951    10510    1   KVV$INT: ENTRY(KV$VDH_X) ALTRET;
      952    10511        /*F* NAME: KVV$INT
      953    10512             DESCRIPTION:
      954    10513             This routine handles the initial connection from an RDH to VDH
      955    10514             for a device. It will allocate an KV$VDI block for the user and
      956    10515             fill in the approiate defaults. All parameters are passed in a
      957    10516             structure KV$VDH_INT.                                                    */
      958    10517
      959    10518
      960    10519
      961    10520        /* Be sure the pointer to the KV$PTR structure is null,
      962    10521           so nobody tries to use it during KV$VDH_INT.                               */
      963    10522
      964    10523    1      KV$PTR$ = ADDR(NIL);
      965    10524
      966    10525        /* Get a buffer for the KV$VDI context                                        */
      967    10526
      968    10527    1      %VDH_GETBFR = KV_VDH_GETBFR;
      969    10528    1      %VDH_GETBFR.STT$ = KV$VDH_INT.USRPRM$->KV$USRPRM.STT$;
      970    10529    1      %VDH_GETBFR.STRTYP = %KV_STRTYP_VDI;
      971    10530    1      CALL KVS$GETBFR(FPT)
      972    10531
      973    10532        /* Check if an error was encountered                                          */
      974    10533
      975    10534    2      WHENALTRETURN DO;
      976    10535    2         ALTRETURN;
      977    10536    2      END; /* IF */
      978    10537
      979    10538        /* Pass back the address of KV$VDI                                            */
      980    10539
      981    10540    1      KV$VDH_INT.VDI$ = %VDH_GETBFR.BFR$;
      982    10541
      983    10542        /* Get the KV$PTR for this KV$VDI                                             */
      984    10543
      985    10544    1      %VDH_GETBFR.STRTYP = %KV_STRTYP_PTR;
      986    10545    1      CALL KVS$GETBFR(FPT)
      987    10546
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:33   
      988    10547        /* Check if an error occured                                                  */
      989    10548
      990    10549    2      WHENALTRETURN DO;
      991    10550    2         %VDH_RLSBFR = KV_VDH_RLSBFR;
      992    10551    2         %VDH_RLSBFR.STT$ = KV$VDH_INT.USRPRM$->KV$USRPRM.STT$;
      993    10552    2         %VDH_RLSBFR.STRTYP = %KV_STRTYP_VDI;
      994    10553    2         %VDH_RLSBFR.BFR$ = KV$VDH_INT.VDI$;
      995    10554    2         CALL KVS$RLSBFR(FPT);
      996    10555    2         ALTRETURN;
      997    10556    2      END; /* IF */
      998    10557
      999    10558        /* Initialize KV$PTR                                                          */
     1000    10559
     1001    10560    1      KV$PTR$ = %VDH_GETBFR.BFR$;
     1002    10561    1      Y@VDI$ = KV$VDH_INT.VDI$;
     1003    10562    1      KV$PTR.VDI$ = Y@VDI$;
     1004    10563
     1005    10564        /* Initialize KV$VDI                                                          */
     1006    10565
     1007    10566    1      %KV_VDI.CHN$ = KV$VDH_INT.CHN$;
     1008    10567    1      %KV_VDI.USRCTX$ = KV$VDH_INT.USRCTX$;
     1009    10568    1      %KV_VDI.USRPRM$ = KV$VDH_INT.USRPRM$;
     1010    10569    1      %KV_VDI.RCVFLWCTRMAXCRD = KV$VDH_INT.RCVFLWCTRMAXCRD;
     1011    10570    1      %KV_VDI.RCVFLWCTRMINCRDINC = KV$VDH_INT.RCVFLWCTRMAXCRD/4;
     1012    10571    1      %KV_VDI.SHRTRCBFR = KV$VDH_INT.SHRTRCBFR;
     1013    10572    1      %KV_VDI.ASNINPPTR$ = KV$PTR$;
     1014    10573
     1015    10574        /* Get the trace buffer, if requested. */
     1016    10575
     1017    10576    2      IF KV$VDH_INT.TRCBFRBYTSIZ > 8 THEN DO;
     1018    10577    2         %VDH_GETBFR.BYTSIZ = KV$VDH_INT.TRCBFRBYTSIZ;
     1019    10578    2         %VDH_GETBFR.STRTYP = %KV_STRTYP_TRCBFR;
     1020    10579    2         CALL KVS$GETBFR(FPT)
     1021    10580    3         WHENRETURN DO;
     1022    10581
     1023    10582        /* We got the trace buffer.  Initialize it. */
     1024    10583
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:34   
     1025    10584    3            %KV_VDI.TRCBFR$ = %VDH_GETBFR.BFR$;
     1026    10585    3            %KV_VDI.TRCBFRBYTSIZ = %VDH_GETBFR.BYTSIZ;
     1027    10586    3            %VDH_GETBFR.BFR$->KV$TRCBFR.MAXTRCENTX =
     1028    10587    3              (%VDH_GETBFR.BYTSIZ/2-SIZEW(KV$TRCBFR))/SIZEW(KV$TRCENT);
     1029    10588    3            %VDH_GETBFR.BFR$->KV$TRCBFR.TRCENTX = 0;
     1030    10589    3         END;                              /* END WHENRETURN                     */
     1031    10590    2      END; /* END IF TRCBFRBYTSIZ > 8 */
     1032    10591
     1033    10592        /* Return to caller                                                           */
     1034    10593
     1035    10594    1      %KV_VDI.VDHEVTENB(%KV_VDH_EVT_ID_RLSVDI) = '1'B;
     1036    10595
     1037    10596    1      RETURN;
     1038    10597
     1039    10598        %EJECT;
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:35   
     1040    10599        /* Gather a few stats, do a trace and enter the user                          */
     1041    10600
     1042    10601    1   KVV$CALUSR: ENTRY(KV$VDH_X) ALTRET;
     1043    10602
     1044    10603    1      Y@VDI$ = KV$PTR.VDI$;
     1045    10604    1      %KV_STT.VDIUSRFNCCNT(KV$USR_PST.FNC) =
     1046    10605    1        %KV_STT.VDIUSRFNCCNT(KV$USR_PST.FNC) +1;
     1047    10606           %KH$CALTRC (CND=USR, USRTST="KV_TRCUSRFNC(KV$USR_PST.FNC)",
     1048    10607           COD=%KV#TRC_COD_CALUSR, BFR1$=KV$VDH_X, BFR1_BYTSIZ=32);
     1049    10642
     1050    10643    1      Y@TRCBFR$ = %KV_VDI.TRCBFR$;
     1051    10644    2      IF Y@TRCBFR$~=ADDR(NIL) THEN DO;
     1052    10645        /*
     1053    10646        The VDH trace buffer does exist.  Do VDH tracing.
     1054    10647        */
     1055    10648    2         Y@TRCENT = Y_TRCENT_USRVDI;
     1056    10649    2         Y@TRCENT.FNC = KV$USR_PST.FNC;
     1057    10650    2         CALL Y$TRC;
     1058    10651    2      END; /* END IF TRCBFR$ ~= NIL */
     1059    10652
     1060    10653    2      DO CASE( KV$USR_PST.FNC );
     1061    10654    2      CASE(%KV_USR_FNC_ERS );
     1062    10655    2         IF %KV_MRD.CALUSR_ERS THEN GOTO Y_CALUSR;
     1063    10656
     1064    10657        /* We're not to call the VDH-user for erase - call the VDH routine.           */
     1065    10658
     1066    10659    2         CALL KVO$ERS(KV$COPY);
     1067    10660    2      CASE(%KV_USR_FNC_PST );
     1068    10661        /* Clear any "position-pending" status so it doesn't get in the way */
     1069    10662    2         %KV_VDI.OTPCNDPND.PST = 0;
     1070    10663
     1071    10664    2         IF %KV_MRD.CALUSR_PST THEN GOTO Y_CALUSR;
     1072    10665
     1073    10666        /* We're not to call the VDH-user for position - call the VDH routine.        */
     1074    10667
     1075    10668    2         CALL KVO$GNRPST(KV$COPY);
     1076    10669    2      CASE(%KV_USR_FNC_SETATR );
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:36   
     1077    10670    2         %KV_MRD.DVCATR = KV$USR_SETATR.GRPRND;
     1078    10671    2         IF %KV_MRD.CALUSR_SETATR THEN GOTO Y_CALUSR;
     1079    10672
     1080    10673    2         CALL KVO$SETATR(KV$COPY);
     1081    10674    2      CASE(%KV_USR_FNC_OTPMRK);
     1082    10675    2         KV$USR_OTPMRK.DAT.SSNID = KV$PTR.SSN$->KV$SSN.SSNID;
     1083    10676    2         GOTO Y_CALUSR;
     1084    10677    2      CASE(ELSE);
     1085    10678    2   Y_CALUSR:;
     1086    10679    2         CALL %KV_USRPRM.USRSBR$(KV$COPY)
     1087    10680    3         WHENALTRETURN DO; ALTRETURN; END;
     1088    10681    2      END /* CASE */;
     1089    10682
     1090    10683    1      RETURN;
     1091    10684
     1092    10685        %EJECT;
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:37   
     1093    10686        /* Gather a few stats, do a trace and enter the user                          */
     1094    10687
     1095    10688    1   KVV$CALUSR_EVT: ENTRY(KV$VDH_X) ALTRET;
     1096    10689
     1097    10690    1      %USR_EVT = KV$USR_EVT;
     1098    10691    2      IF %USR_EVT.FNC = 0 THEN DO;
     1099    10692        /* The call has no FPT, just a UBIN event number */
     1100    10693    2         %USR_EVT.FNC = %KV_USR_FNC_EVT;
     1101    10694    2         %USR_EVT.PRM = 0;
     1102    10695    2      END;
     1103    10696    1      Y@VDI$ = KV$PTR.VDI$;
     1104    10697    1      %KV_STT.VDIUSRFNCCNT(%KV_USR_FNC_EVT) =
     1105    10698    1        %KV_STT.VDIUSRFNCCNT(%KV_USR_FNC_EVT) +1;
     1106    10699    1      %KV_STT.VDIUSREVTCNT(%USR_EVT.ID) =
     1107    10700    1        %KV_STT.VDIUSREVTCNT(%USR_EVT.ID) +1;
     1108    10701
     1109    10702           %KH$CALTRC (CND=USR, USRTST="KV_TRCUSREVT(KV$USR_EVT.ID)",
     1110    10703           COD=%KV#TRC_COD_CALUSR, BFR1$=KV$VDH_X, BFR1_BYTSIZ=32);
     1111    10738
     1112    10739    1      Y@TRCBFR$ = %KV_VDI.TRCBFR$;
     1113    10740    2      IF Y@TRCBFR$~=ADDR(NIL) THEN DO;
     1114    10741        /*
     1115    10742        The VDH trace buffer does exist.  Do VDH tracing.
     1116    10743        */
     1117    10744    2         Y@TRCENT = Y_TRCENT_USRVDIEVT;
     1118    10745    2         Y@TRCENT.FNC = KV$USR_EVT.ID;
     1119    10746    2         CALL Y$TRC;
     1120    10747    2      END; /* END IF TRCBFR$ ~= NIL */
     1121    10748
     1122    10749    1      CALL %KV_USRPRM.USRSBR$(FPT)
     1123    10750    2      WHENRETURN DO;
     1124    10751    2         %USR_EVT.ACT = '1'B;
     1125    10752    2      END;
     1126    10753
     1127    10754        /* Do event specific items. */
     1128    10755
     1129    10756    2      DO SELECT (%USR_EVT.ID);
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:38   
     1130    10757    2         SELECT (%KV_USR_EVT_ID_DLTOTP);
     1131    10758        /* Delete output. See if VDH has some output pending. */
     1132    10759
     1133    10760    3         IF %KV_VDI.OTPCNDPND OR %USR_EVT.ACT THEN DO;
     1134    10761    3            %KV_VDI.OTPCNDPND = '0'B;
     1135    10762    3            %KV_VDI.UN_KNWPST = '1'B;
     1136    10763    3            %KV_VDI.PRG.OTP = '1'B;
     1137    10764    3            P1$ = %KV_MRD.SRD$;
     1138    10765
     1139    10766        /* Mark all the SRDs lost position */
     1140    10767
     1141    10768    4            DO WHILE P1$~=ADDR(NIL);
     1142    10769    4               P1$->KV$SRD.CRT.CLM = P1$->KV$SRD.TOPLFT.CLM;
     1143    10770    4               P1$->KV$SRD.UNKPST = '1'B;
     1144    10771    4               P1$ = P1$->KV$SRD.LNK$;
     1145    10772    4            END;
     1146    10773    3            %KV_MRD.DVCCLM = 1;
     1147    10774    3            RETURN;
     1148    10775    3         END;
     1149    10776    2      END /* SELECT */;
     1150    10777    1      IF NOT %USR_EVT.ACT THEN ALTRETURN;
     1151    10778
     1152    10779    1      RETURN;
     1153    10780        %EJECT;
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:39   
     1154    10781    1   KVV$CALUSR_PST: ENTRY ALTRET;
     1155    10782        /* Entry point to perform the same function as CMPOTP, but no FPT */
     1156    10783    1      Y@VDI$ = KV$PTR.VDI$;
     1157    10784    1      Y@TRCBFR$ = %KV_VDI.TRCBFR$;
     1158    10785        /* Y@SSN$ = KV$PTR.SSN$;  SSN isn't used for this function */
     1159    10786    1      GOTO CMPOTP;
     1160    10787    1   END /* SUBROUTINE */;
     1161    10788        %EOD;

PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:40   
--  Include file information  --

   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KV_SCODE_C.:E05TOU  is referenced.
   KV_INT_M.:E05TOU  is referenced.
   KV$PRM.:E05TOU  is referenced.
   KV$INPFNC.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KH_TRC_M.:E05TOU  is referenced.
   KH_TRC.:E05TOU  is referenced.
   KH_SCREECH_M.:E05TOU  is referenced.
   KH_CLKFNC_E.:E05TOU  is referenced.
   KH$TRC.:E05TOU  is referenced.
   KH$CLK.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is referenced.
   KV$VDH.:E05TOU  was found in the system file and is referenced.
   KV$USR.:E05TOU  was found in the system file and is referenced.
   KV$SND.:E05TOU  was found in the system file and is referenced.
   KV$INT.:E05TOU  was found in the system file and is referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KVV$VDI.

   Procedure KVV$VDI requires 2457 words for executable code.
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:41   
   Procedure KVV$VDI requires 42 words of local(AUTO) storage.

PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:42   

 Object Unit name= KVV$VDI                                    File name= KVV$VDI.:E05TOU
 UTS= JUL 30 '97 02:15:48.24 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS     27     1B  KVV$VDI
    1   Data  even  none     6      6  KVV$VDI
    2   Proc  even  none  2457    999  KVV$VDI
    3  RoData even  none    15      F  KVV$VDI

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        1  KVV$VDI
     2     59          yes     yes      Std        1  KVV$VDIINT
     2    766          yes     yes      Std        1  KVV$INT
     2    82B          yes     yes      Std        1  KVV$CALUSR
     2    8DE          yes     yes      Std        1  KVV$CALUSR_EVT
     2    988          yes     yes      Std        0  KVV$CALUSR_PST

  ****  Data defs  ****

 Sect HexLoc  Name                           Sect HexLoc  Name
    0      9  KV_SETCLK                          1      0  KV_TRCVDHFNC
    1      2  KV_TRCVDHEVT                       1      3  KV_TRCUSRFNC
    1      4  KV_TRCUSREVT                       0     14  KV_VDHFNCOK_NO_SSN
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:43   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 KVC$CNC
         yes           Std       1 KVF$PST
         yes           Std       1 KVS$SETSTR
         yes           Std       1 KVO$GNRPST
 yes     yes           Std       1 KVS$GETBFR
         yes           Std       1 KVP$GETPRM
 yes     yes           Std       1 KVS$RLSBFR
         yes           Std       0 KVI$RE_DSPINP
 yes     yes           Std       1 KVS$GETREDBFR
         yes           Std       1 KVC$DSC
 yes     yes           Std       1 KHC$CLOCK
         yes           Std       1 KVI$SNDDAT
         yes           Std       0 KVI$PRGTYPAHDINPFNC
         yes           Std       1 KVI$INTINPOPR
         yes           Std       1 KVP$SETPRM
         yes           Std       1 KVO$ERS
 yes     yes           Std       1 KVM$SND
         yes           Std       0 KVC$RLSVDI
         yes           Std       1 KVO$OTPLCL
         yes           Std       1 KHD$SCREECH
         yes           Std       1 KVO$PST
         yes           Std       1 KVO$SETATR
         yes           Std       0 KVI$INPCHR_INPFNCIMD
         yes           Std       0 KVI$INPCHR_TYPAHD
 yes     yes           Std       2 KVQ$CPYDAT
         yes           Std       0 KVI$INPCHR
         yes           Std       0 KVI$ENBNO_WATRED
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_AALT
                       nStd      0 X6C_MAT
                       nStd      0 X6A_ARET
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:44   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KV$PTR$                               KV_RCVSSN$                            KV_TYPAHDBFR
     KV_TYPAHDBFRLMT                  r    KV_SND_EVT_BRK                   r    KV_SND_EVT_MNTATN
r    KV_SND_MRK                       r    KV_SND_RQSDAT_GNR                r    KV_SND_SCHLCLSSN
     KV_USR_PST                            KV_USR_RQSDAT                         KV_VDH_GETBFR
     KV_VDH_PST_ABS                        KV_VDH_RLSBFR                    r    G$LOW_MEM$
r    G$ROS$
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:45   


        1        1        /*M* KVV$VDI Virtual device interface (VDI)                                   */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IND=0,IAD=3 */
        8        8        %SET REALSTUFF = '0'B;
        9        9        %SET LISTCON = '1'B;
       10       10
       11       11        KVV$VDI: PROC(KV$VDH_X) ALTRET;

     11   2 000000  D380 0000 0000  xent KVV$VDI         LNJ,B5   X6A_AUTO_1
          2 000003       002A 0001                       DC       42,1

       12       12        /*F* NAME: KVV$VDI
       13       13             PURPOSE:
       14       14                  handler VDI (virtual device interface)
       15       15             DESCRIPTION:
       16       16             Virtual device interface. All calls to VDH (virtual device
       17       17             handler) thru VDI (virtual device interface) come here, with
       18       18             the exception of KV$VDH_INT (initialize), which goes to
       19       19             KVV$INT.                                                                 */
       20       20
       21       21        %INCLUDE KH$CLK;
       22      391        %INCLUDE KH$TRC;
       23      420        %INCLUDE KH_CLKFNC_E;
       24      465        %INCLUDE KH_SCREECH_M;
       25      476        %INCLUDE KH_TRC;
       26      498        %INCLUDE KH_TRC_M;
       27      546        %INCLUDE KL_AFCN_C;
       28      647        %INCLUDE KL_MACRO_C;
       29     3999        %INCLUDE K_ID_E;
       30     4049        %K#ENTID_E;
       31     4068        %K#LYRID_E;
       32     4075 S      %INCLUDE KV$GLB;                        /* VDH Global structures              */
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:46   
       33     4076 S      %INCLUDE KV$GLBCTX;                     /* VDH Global context                 */
       34     4077        %INCLUDE KV$INPFNC;                     /* VDH input function definitions     */
       35     4636 S      %INCLUDE KV$INT;                        /* VDH internal structures            */
       36     4637        %INCLUDE KV$PRM;                   /* VDH parameter structure substructures   */
       37     4850 S      %INCLUDE KV$SND;                        /* VDH send message structures        */
       38     4851 S      %INCLUDE KV$USR;                        /* VDH to VDH-user request structures */
       39     4852 S      %INCLUDE KV$VDH;                        /* VDH-user to VDH request structures */
       40     4853 S      %INCLUDE KV$VDO;                   /* CP-6 Presentation protocol definition   */
       41     4854 S      %INCLUDE KV_GLBCNS_E;                   /* Virtual device handler constants   */
       42     4855        %INCLUDE KV_INT_M;                      /* VDH internal MACROs                */
       43     4998        %INCLUDE KV_SCODE_C;
       44     5019        %INCLUDE LCP_6;
       45     5210        %VLP_SCODE (FPTN=KVV_MRKTYP,FCG=KV,MID=V,STCLASS=CONSTANT,ERR#=%S$KV_MRKTYP);
       46     5271        %VLP_SCODE (FPTN=KVV_VDHFNC,FCG=KV,MID=V,STCLASS=CONSTANT,ERR#=%S$KV_VDHFNC);
       47     5332        %VLP_SCODE (FPTN=KVV_VDHEVT,FCG=KV,MID=V,STCLASS=CONSTANT,ERR#=%S$KV_VDHEVT);
       48     5393
       49     5394        %KV$ERR;                                /*  VDH ERROR REPORTING STRUCTURE     */
       50     5420        %KV$MRD;                                /*  MASTER REAL DEVICE CONTEXT BLOCK  */
       51     5467        %KV$MVD;                                /*  MASTER VIRTUAL DEVICE             */
       52     5511        %KV$PTR;                                /*  VDH POINTER BLOCK                 */
       53     5554        %KV$STR;                                /*  STREAM CONETEX                    */
       54     5641        %KV$SRD;                                /*  VDH subordinate real device       */
       55     5916        %KV$SSN (STCLASS="BASED(Y@SSN$)");      /*  VDH session                       */
       56     5995        %EQU KV_SSN=CHARTEXT('KV$SSN');
       57     5996    1   DCL KV_RCVSSN$ PTR SYMREF;         /* Pointer to SSN currently active in RCV  */
       58     5997        %KV$STT (STCLASS="BASED(P1$)");         /*  VDH STATS                         */
       59     6391        %EQU KV_STT=CHARTEXT('KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT');
       60     6392        %KV$TRCBFR;
       61     6450        %KV$TRCENT;
       62     6479        %KV$TRNTBL;                             /* Translate table definition         */
       63     6537        %KV$TYPAHDBFR(STCLASS="BASED(P1$)");    /*  VDH type-ahead buffer             */
       64     6562        %KV$TYPAHDBFR(STCLASS=SYMREF,NAME=KV_TYPAHDBFR);
       65     6587    1   DCL KV_TYPAHDBFRLMT UBIN SYMREF;
       66     6588        %KV$USRPRM (STCLASS="BASED(P1$)");      /*  USER PARAMS                       */
       67     6639        %EQU KV_USRPRM=CHARTEXT('KV$VDI.USRPRM$->KV$USRPRM');
       68     6640        %KV$VDI (STCLASS="BASED(Y@VDI$)");      /*  VDI CONTEXT BLOCK                 */
       69     6711        %EQU KV_VDI=CHARTEXT('KV$VDI');
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:47   
       70     6712        %KV#VD_ORG_E;
       71     6720        %KV#TRCENT_TYP_E;
       72     6730        %KV_VDH_FNC_E;                          /*  VDH GLOBAL CONSTANTS              */
       73     6750        %KV_USR_FNC_E;
       74     6766        %KV_VDH_EVT_ID_E;
       75     6772        %KV_USR_EVT_ID_E;
       76     6792        %KV_SND_FNC_E;
       77     6808        %KV#DATMOD_E;
       78     6814        %KV_INPUNT_E;
       79     6819        %KV_STRTYP_E;
       80     6857        %KV#TRC_COD_E;
       81     6861        %KV_BFRRLSDSP_E;
       82     6867        %KV_CLKNMB_E;
       83     6876        %KV_CLKUNT_E;
       84     6881        %KV_CMPCOD_E;
       85     6895        %KV_EVTTYP_E;
       86     6899        %KV_MRKTYP_E;
       87     6907
       88     6908        /* The parameter is any of many FPTs - here they are */
       89     6909
       90     6910    1   DCL KV$VDH_X CHAR(KV$COPY);   /* Parameter defined variable so any redef ok   */
       91     6911    1   DCL KV$COPY REDEF KV$VDH_X UBIN; /* Simple parameter to pass on to next subr  */
       92     6912        %KV$USR_EVT(STCLASS = REDEF KV$VDH_X);  /*  REPORT EVENT TO USER              */
       93     6947        %KV$USR_OTPMRK (STCLASS=REDEF KV$VDH_X);
       94     7009        %KV$USR_PST(STCLASS = REDEF KV$VDH_X);  /*  Position                          */
       95     7079        %KV$USR_RQSDAT(STCLASS = REDEF KV$VDH_X); /*  Request data                    */
       96     7142        %KV$USR_SETATR(STCLASS = REDEF KV$VDH_X); /* Set Attributes                   */
       97     7265        %KV$VDH_DCLLCLPST(STCLASS = REDEF KV$VDH_X); /* LOCAL POSITION                */
       98     7334        %KV$VDH_DSC(STCLASS = REDEF KV$VDH_X);  /*  VDH DISCONNECT                    */
       99     7370        %KV$VDH_DAT(STCLASS = REDEF KV$VDH_X);  /*  VDH DATA                          */
      100     7450        %KV$VDH_EVT(STCLASS = REDEF KV$VDH_X);  /*  VDH Event                         */
      101     7485        %KV$VDH_INT(STCLASS = REDEF KV$VDH_X);  /*  FPT FOR INITIAL CONNECT           */
      102     7522        %KV$VDH_GETBFR(STCLASS = REDEF KV$VDH_X); /*                                  */
      103     7587        %KV$VDH_RLSBFR(STCLASS = REDEF KV$VDH_X); /*                                  */
      104     7623        %KV$VDH_OTPMRK(STCLASS = REDEF KV$VDH_X); /*                                  */
      105     7685        %KV$VDH_PST(STCLASS = REDEF KV$VDH_X);  /*                                    */
      106     7759        %KV$VDH_SETCLK(STCLASS = REDEF KV$VDH_X); /*                                  */
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:48   
      107     7795
      108     7796        %KH$CLK (FPTN=KV_SETCLK, FNC=%KH#CLK_SETCLK, STCLASS=CONSTANT SYMDEF,
      109     7797         UVAL=%KV_CLKNMB_REDTIMOUT, PRDUNT=%KV_CLKUNT_MNT, NO_CTB=YES, VDH_CLK=YES);
      110     7946        %KH_TRC;
      111     7961
      112     7962        %KV$SND_EVT (NAME = KV_SND_EVT_BRK, STCLASS = SYMREF READONLY); /* Send break */
      113     8053        %KV$SND_EVT (NAME = KV_SND_EVT_MNTATN, STCLASS = SYMREF READONLY);
              8053            /* Monitor attention */
      114     8144        %KV$SND_MRK (NAME = KV_SND_MRK, STCLASS = SYMREF READONLY); /* Marker         */
      115     8200        %KV$SND_RQSDAT_GNR (NAME = KV_SND_RQSDAT_GNR, STCLASS = SYMREF READONLY);
              8200            /* Request data, general */
      116     8255        %KV$SND_SCHLCLSSN (NAME = KV_SND_SCHLCLSSN, STCLASS = SYMREF READONLY);
      117     8310        %KV$USR_EVT(NAME = KV_USR_EVT, STCLASS = SYMREF);
      118     8345        %KV$USR_PST(NAME = KV_USR_PST, STCLASS = SYMREF);
      119     8415        %KV$USR_RQSDAT(NAME = KV_USR_RQSDAT, STCLASS = SYMREF);
      120     8478        %KV$VDH_GETBFR(NAME = KV_VDH_GETBFR, STCLASS = SYMREF);
      121     8543        %KV$VDH_PST(NAME = KV_VDH_PST_ABS, STCLASS = SYMREF);
      122     8617        %KV$VDH_RLSBFR(NAME = KV_VDH_RLSBFR, STCLASS = SYMREF);
      123     8653
      124     8654    1   DCL KHC$CLOCK ENTRY(1) ALTRET;
      125     8655    1   DCL KHD$SCREECH ENTRY(1);
      126     8656    1   DCL KHD$TRC ENTRY(1);
      127     8657    1   DCL KVC$CNC ENTRY(1) ALTRET;
      128     8658    1   DCL KVC$RLSSSN ENTRY;
      129     8659    1   DCL KVC$RLSVDI ENTRY;
      130     8660    1   DCL KVF$PST ENTRY(1);
      131     8661    1   DCL KVI$INPCHR ENTRY;
      132     8662    1   DCL KVI$INPCHR_INPFNCIMD ENTRY;
      133     8663    1   DCL KVI$INPCHR_TYPAHD ENTRY;
      134     8664    1   DCL KVI$INTINPOPR ENTRY(1);
      135     8665    1   DCL KVI$PRGTYPAHDINPFNC ENTRY;
      136     8666    1   DCL KVI$RE_DSPINP ENTRY;
      137     8667    1   DCL KVC$DSC ENTRY(1);
      138     8668    1   DCL KVI$ENBNO_WATRED ENTRY;
      139     8669    1   DCL KVM$SND ENTRY(1) ALTRET;
      140     8670    1   DCL KVI$SNDDAT ENTRY(1);
      141     8671    1   DCL KVO$PST ENTRY(1);
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:49   
      142     8672    1   DCL KVO$OTPLCL ENTRY(1);
      143     8673    1   DCL KVP$GETPRM ENTRY(1);
      144     8674    1   DCL KVP$SETPRM ENTRY(1);
      145     8675    1   DCL KVS$GETBFR ENTRY(1)ALTRET;
      146     8676    1   DCL KVS$GETREDBFR ENTRY(1) ALTRET;
      147     8677    1   DCL KVS$RLSBFR ENTRY(1) ALTRET;
      148     8678    1   DCL KVS$SETSTR ENTRY(1);
      149     8679    1   DCL KVO$ERS ENTRY(1);
      150     8680    1   DCL KVO$GNRPST ENTRY(1);
      151     8681    1   DCL KVO$SETATR ENTRY(1);
      152     8682    1   DCL KVQ$CPYDAT ENTRY(2) ALTRET;
      153     8683        %EJECT;
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:50   
      154     8684
      155     8685        /* Trace VDI ->VDH function calls. Indexed by VDH function code,
      156     8686           (%KV_VDH_FNC_...)
      157     8687           indicates we should trace this call.                                       */
      158     8688
      159     8689    1   DCL KV_TRCVDHFNC(0:%KV_VDH_FNC_HI) BIT(1) STATIC SYMDEF INIT('1'B*0);
      160     8690
      161     8691        /* Trace VDI ->VDH function calls. Indexed by VDH function code,
      162     8692           indicates we should trace this call.
      163     8693           (%KV_VDH_EVT_ID_...)                                                       */
      164     8694
      165     8695    1   DCL KV_TRCVDHEVT(0:%KV_VDH_EVT_ID_HI) BIT(1) STATIC SYMDEF INIT('1'B*0);
      166     8696
      167     8697        /* Trace VDI ->VDH-USER function calls. Indexed by USR function code,
      168     8698           (%KV_USR_FNC_...)
      169     8699           indicates we should trace this call.                                       */
      170     8700
      171     8701    1   DCL KV_TRCUSRFNC(0:%KV_USR_FNC_HI) BIT(1) STATIC SYMDEF INIT('1'B*0);
      172     8702
      173     8703        /* Trace VDI ->VDH-USER function calls. Indexed by USR function code,
      174     8704           (%KV_USR_EVT_ID_...)
      175     8705           indicates we should trace this call.                                       */
      176     8706
      177     8707    1   DCL KV_TRCUSREVT(0:%KV_USR_EVT_ID_HI) BIT(1) STATIC SYMDEF INIT('1'B*0);
      178     8708
      179     8709    1   DCL KV_VDHFNCOK_NO_SSN(0:%KV_VDH_FNC_HI) BIT(1) CONSTANT SYMDEF INIT(
      180     8710    1   '0'B,'1'B,'0'B*4,'1'B*4,'0'B,'1'B*2,'0'B,'1'B*0);
      181     8711        /*
      182     8712        Initialized copies of KV$TRCENT.
      183     8713        */
      184     8714       %KV$TRCENT (NAME = Y_TRCENT_VDHVDI, STCLASS = CONSTANT, TYP = %KV#TRCENT_TYP_VDHVDI)
              8714            ;
      185     8743       %KV$TRCENT (NAME = Y_TRCENT_USRVDI, STCLASS = CONSTANT, TYP = %KV#TRCENT_TYP_USRVDI)
              8743            ;
      186     8772        %KV$TRCENT (NAME = Y_TRCENT_VDHVDIEVT, STCLASS = CONSTANT, TYP =
              8772            %KV#TRCENT_TYP_VDHVDIEVT);
      187     8801        %KV$TRCENT (NAME = Y_TRCENT_USRVDIEVT, STCLASS = CONSTANT, TYP =
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:51   
              8801            %KV#TRCENT_TYP_USRVDIEVT);
      188     8830        %KV$TRCENT (NAME = Y_TRCENT_USRVDIPST, STCLASS = CONSTANT, TYP =
              8830            %KV#TRCENT_TYP_USRVDI, FNC = %KV_USR_FNC_PST);
      189     8859        %EJECT;
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:52   
      190     8860        /*
      191     8861        Based variables.
      192     8862        */
      193     8863
      194     8864        /*
      195     8865        CHARacter string.
      196     8866        */
      197     8867    1   DCL Y$CHR CHAR(256) BASED;
      198     8868        /*
      199     8869        KV$TRCBFR (VDH trace buffer) declaration.
      200     8870        */
      201     8871        %KV$TRCBFR (NAME = Y$TRCBFR, STCLASS = "BASED(Y@TRCBFR$)");
      202     8929        %EJECT;
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:53   
      203     8930        /* AUTO VARIABLES */
      204     8931    1   DCL Y@VDI$ PTR;
      205     8932    1   DCL Y@SSN$ PTR;
      206     8933    1   DCL P1$ PTR;                            /* Handy pointer                      */
      207     8934        /*
      208     8935        Auto copy of a VDH trace entry.
      209     8936        */
      210     8937        %KV$TRCENT (NAME = Y@TRCENT, STCLASS = AUTO);
      211     8966        /*
      212     8967        Pointer to KV$TRCBFR.
      213     8968        */
      214     8969    1   DCL Y@TRCBFR$ PTR AUTO;
      215     8970
      216     8971    1   DCL FPT(0:16) UBIN;                     /* SPACE FOR FPTS                     */
      217     8972        %KH$CLK (FPTN=KH@CLK);
      218     9121        %EQU KH@CLK = CHARTEXT('ADDR(FPT)->KH@CLK');
      219     9122        %KV$USR_EVT(NAME = USR_EVT);
      220     9157        %EQU USR_EVT = CHARTEXT('ADDR(FPT)->USR_EVT');
      221     9158        %KV$USR_PST(NAME = USR_PST);
      222     9228        %EQU USR_PST = CHARTEXT('ADDR(FPT)->USR_PST');
      223     9229        %KV$USR_RQSDAT(NAME = USR_RQSDAT);
      224     9292        %EQU USR_RQSDAT = CHARTEXT('ADDR(FPT)->USR_RQSDAT');
      225     9293        %KV$VDH_DAT(NAME = VDH_DAT);
      226     9373        %EQU VDH_DAT = CHARTEXT('ADDR(FPT)->VDH_DAT');
      227     9374        %KV$VDH_GETBFR(NAME = VDH_GETBFR);
      228     9439        %EQU VDH_GETBFR = CHARTEXT('ADDR(FPT)->VDH_GETBFR');
      229     9440        %KV$VDH_RLSBFR(NAME = VDH_RLSBFR);
      230     9476        %EQU VDH_RLSBFR = CHARTEXT('ADDR(FPT)->VDH_RLSBFR');
      231     9477        %KV$VDH_PST(NAME = VDH_PST);
      232     9551        %EQU VDH_PST = CHARTEXT('ADDR(FPT)->VDH_PST');
      233     9552        %KV$ERR(NAME = ERR);
      234     9578        %EQU ERR = CHARTEXT('ADDR(FPT)->ERR');
      235     9579
      236     9580
      237     9581        %KV$SND_MRK (NAME = KV@SND_MRK);        /* Marker                             */
      238     9637        %EQU KV@SND_MRK = CHARTEXT('ADDR(FPT)->KV@SND_MRK');
      239     9638
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:54   
      240     9639        %EJECT;
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:55   
      241     9640        /* Trace VDH entry                                                            */
      242     9641
      243     9642         %KH$CALTRC (CND=USR, USRTST="KV_TRCVDHFNC(KV$VDH_DAT.FNC)",
      244     9643         COD=%KV#TRC_COD_CALVDH, BFR1$=KV$VDH_X, BFR1_BYTSIZ=32);

      245     9678    1      Y@VDI$ = KV$PTR.VDI$;

   9678   2 000005  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 000008  DC86                                 LDB,B5   ,B6
          2 000009  DFC7 0006                            STB,B5   Y@VDI$,AUTO

      246     9679    1      Y@SSN$ = KV$PTR.SSN$;

   9679   2 00000B  CCC6 0002                            LDB,B4   2,B6
          2 00000D  CFC7 0008                            STB,B4   Y@SSN$,AUTO

      247     9680    1      IF ADDR(%KV_SSN)=ADDR(NIL) OR %KV_SSN.SSNCNCID=0

   9680   2 00000F  8DD4                                 CMN      B4
          2 000010  0901 0005                            BE       s:9681,PREL
          2 000012  E844 0024                            LDR,R6   36,B4
          2 000014  6981 000C                            BNEZ,R6  s:9683,PREL

      248     9681    1      THEN IF NOT KV_VDHFNCOK_NO_SSN(KV$VDH_DAT.FNC) THEN ALTRETURN;

   9681   2 000016  BCC7 0004                            LDB,B3   @KV$VDH_X,AUTO
          2 000018  B283                                 LLH,R3   ,B3
          2 000019  82B0 0000 0014  00                   LB       KV_VDHFNCOK_NO_SSN,R3
          2 00001C  0501 0004                            BBT      s:9683,PREL

   9681   2 00001E  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      249     9682
      250     9683    1      Y@TRCBFR$ = %KV_VDI.TRCBFR$;

   9683   2 000021  BCC5 0012                            LDB,B3   18,B5
          2 000023  BFC7 000D                            STB,B3   Y@TRCBFR$,AUTO
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:56   

      251     9684    2      IF Y@TRCBFR$~=ADDR(NIL) THEN DO;

   9684   2 000025  8DC7 000D                            CMN      Y@TRCBFR$,AUTO
          2 000027  0901 001D                            BE       s:9698,PREL

      252     9685        /*
      253     9686        The VDH trace buffer does exist.  Do VDH tracing.
      254     9687        */
      255     9688    3         IF KV$VDH_EVT.FNC = %KV_VDH_FNC_EVT THEN DO;

   9688   2 000029  ACC7 0004                            LDB,B2   @KV$VDH_X,AUTO
          2 00002B  E282                                 LLH,R6   ,B2
          2 00002C  6D06                                 CMV,R6   6
          2 00002D  0981 000C                            BNE      s:9692,PREL

      256     9689    3            Y@TRCENT = Y_TRCENT_VDHVDIEVT;

   9689   2 00002F  D800 0000 0018  00                   LDR,R5   Y_TRCENT_VDHVDIEVT
          2 000032  DF47 000C                            STR,R5   Y@TRCENT,AUTO

      257     9690    3            Y@TRCENT.FNC = KV$VDH_EVT.ID;

   9690   2 000034  C802                                 LDR,R4   ,B2
          2 000035  CAC7 000C                            SRM,R4,'00FF'X    Y@TRCENT,AUTO
          2 000037       00FF

      258     9691    3         END; ELSE DO;                     /* ELSE IF .FNC = EVT                 */

   9691   2 000038  0F81 0009                            B        s:9695,PREL

      259     9692    3            Y@TRCENT = Y_TRCENT_VDHVDI;

   9692   2 00003A  D800 0000 0016  00                   LDR,R5   Y_TRCENT_VDHVDI
          2 00003D  DF47 000C                            STR,R5   Y@TRCENT,AUTO

      260     9693    3            Y@TRCENT.FNC = KV$VDH_EVT.FNC;
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:57   

   9693   2 00003F  EAC7 000C                            SRM,R6,'00FF'X    Y@TRCENT,AUTO
   9693   2 000041       00FF

      261     9694    3         END;                              /* END IF .FNC = EVT                  */

      262     9695    2         CALL Y$TRC;

   9695   2 000042  E3C0 06F7                            LNJ,B6   s:0,PREL
          2 000044       0001                            DC       s:9698,PREL

      263     9696    2      END; /* END IF TRCBFR$ ~= NIL */

      264     9697
      265     9698    1      %KV_STT.VDIVDHFNCCNT(KV$VDH_DAT.FNC) =

   9698   2 000045  ECC7 0006                            LDB,B6   Y@VDI$,AUTO
          2 000047  DCC6 0008                            LDB,B5   8,B6
          2 000049  CCC5 0033                            LDB,B4   51,B5
          2 00004B  BCC7 0004                            LDB,B3   @KV$VDH_X,AUTO
          2 00004D  B283                                 LLH,R3   ,B3
          2 00004E  ABC4 01B8                            LAB,B2   440,B4
          2 000050  9BC4 01B8                            LAB,B1   440,B4
          2 000052  8CB2                                 LDI      ,B2,R3
          2 000053  8470 0000 0001                       AID      1,IMO
          2 000056  8D31                                 SDI      ,B1,R3

      266     9699    1        %KV_STT.VDIVDHFNCCNT(KV$VDH_DAT.FNC) + 1;
      267     9700    1      GOTO SUBCOMOMON;

   9700   2 000057  0F81 0014                            B        s:9708,PREL

      268     9701
      269     9702        /* KVV$VDI entry, for internal (from VDH) calls. No trace.                    */
      270     9703
      271     9704    1   KVV$VDIINT: ENTRY(KV$VDH_X) ALTRET;

PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:58   
   9704   2 000059  D380 0000 0000  xent KVV$VDIINT      LNJ,B5   X6A_AUTO_1
          2 00005C       002A 0001                       DC       42,1

      272     9705
      273     9706    1      Y@VDI$ = KV$PTR.VDI$;

   9706   2 00005E  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 000061  DC86                                 LDB,B5   ,B6
          2 000062  DFC7 0006                            STB,B5   Y@VDI$,AUTO

      274     9707    1      Y@SSN$ = KV$PTR.SSN$;

   9707   2 000064  CCC6 0002                            LDB,B4   2,B6
          2 000066  CFC7 0008                            STB,B4   Y@SSN$,AUTO

      275     9708    1      Y@TRCBFR$ = %KV_VDI.TRCBFR$;

   9708   2 000068  BCC5 0012                            LDB,B3   18,B5
          2 00006A  BFC7 000D                            STB,B3   Y@TRCBFR$,AUTO

   9708   2                              SUBCOMOMON      null
      276     9709
      277     9710    1   SUBCOMOMON:;
      278     9711
      279     9712        /* Separate out processing functions. The KV$VDH_DAT structure
      280     9713           is used for convenience only.                                              */
      281     9714
      282     9715    2      DO CASE( KV$VDH_DAT.FNC );

   9715   2 00006C  ECC7 0004            SUBCOMOMON      LDB,B6   @KV$VDH_X,AUTO
          2 00006E  B286                                 LLH,R3   ,B6
          2 00006F  3D14                                 CMV,R3   20
          2 000070  0281 04DD                            BGE      s:10185,PREL
          2 000072  A830 0000 0078  02                   LDR,R2   SUBCOMOMON+12,R3
          2 000075  83A0 0000 008C  02                   JMP      s:9720,R2
          2 000078       04C2                            DC       s:10185,PREL
          2 000079       0000                            DC       s:9720,PREL
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:59   
          2 00007A       000F                            DC       s:9726,PREL
          2 00007B       0168                            DC       s:9841,PREL
          2 00007C       020E                            DC       s:9870,PREL
          2 00007D       04C2                            DC       s:10185,PREL
          2 00007E       0218                            DC       s:9919,PREL
          2 00007F       0355                            DC       s:10039,PREL
          2 000080       0360                            DC       s:10045,PREL
          2 000081       036F                            DC       s:10053,PREL
          2 000082       04C2                            DC       s:10185,PREL
          2 000083       0379                            DC       s:10059,PREL
          2 000084       0383                            DC       s:10066,PREL
          2 000085       038D                            DC       s:10072,PREL
          2 000086       044B                            DC       s:10133,PREL
          2 000087       0455                            DC       s:10139,PREL
          2 000088       045F                            DC       s:10146,PREL
          2 000089       046A                            DC       s:10152,PREL
          2 00008A       04AD                            DC       s:10173,PREL
          2 00008B       04B7                            DC       s:10180,PREL

      283     9716
      284     9717        /* Connect request                                                            */
      285     9718
      286     9719    2      CASE(%KV_VDH_FNC_CNC );

      287     9720    3         CALL KVC$CNC (KV$COPY) WHENALTRETURN DO; ALTRETURN; END;

   9720   2 00008C  BBC7 0004                            LAB,B3   @KV$VDH_X,AUTO
          2 00008E  CBF0 0100                            LAB,B4   256,IMO
          2 000090  E380 0000 0000  xent                 LNJ,B6   KVC$CNC
          2 000093       0003                            DC       s:9720+10,PREL
          2 000094  0F81 0004                            B        s:9720+13,PREL

   9720   2 000096  C380 0000 0000  xent                 LNJ,B4   X6A_AALT
          2 000099  0F81 04BD                            B        s:10188,PREL

      288     9721
      289     9722        /* Data                                                                       */
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:60   
      290     9723
      291     9724    2      CASE(%KV_VDH_FNC_DAT );

      292     9725
      293     9726    2         %KV_STT.INPCHRCNT =

   9726   2 00009B  DCC7 0006                            LDB,B5   Y@VDI$,AUTO
          2 00009D  CCC5 0008                            LDB,B4   8,B5
          2 00009F  BCC4 0033                            LDB,B3   51,B4
          2 0000A1  F846 0004                            LDR,R7   4,B6
          2 0000A3  6C00                                 LDV,R6   0
          2 0000A4  8443 0032                            AID      50,B3
          2 0000A6  8D43 0032                            SDI      50,B3

      294     9727    2           %KV_STT.INPCHRCNT + KV$VDH_DAT.DAT__.DATBYTSIZ;
      295     9728    2         %KV_SSN.INPCHRCNT =

   9728   2 0000A8  CCC7 0008                            LDB,B4   Y@SSN$,AUTO
          2 0000AA  F846 0004                            LDR,R7   4,B6
          2 0000AC  6C00                                 LDV,R6   0
          2 0000AD  8444 0012                            AID      18,B4
          2 0000AF  8D44 0012                            SDI      18,B4

      296     9729    2           %KV_SSN.INPCHRCNT + KV$VDH_DAT.DAT__.DATBYTSIZ;
      297     9730    3         DO CASE( %KV_VDI.INPUNT );

   9730   2 0000B1  B845 001D                            LDR,R3   29,B5
          2 0000B3  3045                                 SOR,R3   5
          2 0000B4  B570 0003                            AND,R3   3,IMO
          2 0000B6  3D04                                 CMV,R3   4
          2 0000B7  0281 049F                            BGE      s:10188,PREL
          2 0000B9  A830 0000 00BF  02                   LDR,R2   s:9730+14,R3
          2 0000BC  83A0 0000 00C3  02                   JMP      s:9736,R2
          2 0000BF       012F                            DC       s:9836,PREL
          2 0000C0       0027                            DC       s:9751,PREL
          2 0000C1       002C                            DC       s:9756,PREL
          2 0000C2       0000                            DC       s:9736,PREL
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:61   

      298     9731    3         CASE(%KV_INPUNT_BLK );

      299     9732
      300     9733        /* Input is taking place in units of blocks of characters.
      301     9734           This is the last block of input data is this logical input string.         */
      302     9735
      303     9736    3            %KV_VDI.USRRQSDAT.TYPAHD = '0'B;

   9736   2 0000C3  8845 001D                            LBF,'0008'X       29,B5
   9736   2 0000C5       0008

      304     9737    3            IF NOT KV$PTR.INPCNDPND.TRN

   9737   2 0000C6  BC80 0000 0000  xsym                 LDB,B3   KV$PTR$
          2 0000C9  89C3 001B                            CMZ      27,B3
          2 0000CB  0801 0004                            BAL      s:9739,PREL

      305     9738    3            THEN %KV_VDI.RE_DSPINP = '1'B;

   9738   2 0000CD  8945 0019                            LBT,'0010'X       25,B5
   9738   2 0000CF       0010

      306     9739    3            %KV_VDI.RE_DSPLOWX = 0;

   9739   2 0000D0  8745 0016                            CL       22,B5

      307     9740    3            CALL Y$INPCHRLOP ALTRET(BAD_CLOCK);

   9740   2 0000D2  E3C0 0487                            LNJ,B6   s:0,PREL
          2 0000D4       0460                            DC       s:10162,PREL

      308     9741    4            IF (%KV_VDI.RE_DSPINP AND NOT KV$VDH_DAT.CTN) THEN DO;

   9741   2 0000D5  ECC7 0006                            LDB,B6   Y@VDI$,AUTO
          2 0000D7  82C6 0019                            LB,'0010'X        25,B6
          2 0000D9       0010
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:62   
          2 0000DA  0581 047C                            BBF      s:10188,PREL
          2 0000DC  DCC7 0004                            LDB,B5   @KV$VDH_X,AUTO
          2 0000DE  8285                                 LB,'0040'X        ,B5
          2 0000DF       0040
          2 0000E0  0501 0476                            BBT      s:10188,PREL

      309     9742
      310     9743        /* We're to re-display the input data.                                        */
      311     9744
      312     9745    4               CALL KVI$RE_DSPINP;

   9745   2 0000E2  CBF0 0000                            LAB,B4   0,IMO
          2 0000E4  E380 0000 0000  xent                 LNJ,B6   KVI$RE_DSPINP
          2 0000E7       0001                            DC       s:9746,PREL

      313     9746    4            END;                           /* IF                                 */

   9746   2 0000E8  0F81 046E                            B        s:10188,PREL

      314     9747    3         CASE(%KV_INPUNT_CHR );

      315     9748
      316     9749        /* Input is taking place in units of a character (string).                    */
      317     9750
      318     9751    3            CALL Y$INPCHRLOP ALTRET(BAD_CLOCK);

   9751   2 0000EA  E3C0 046F                            LNJ,B6   s:0,PREL
          2 0000EC       0448                            DC       s:10162,PREL
          2 0000ED  0F81 0469                            B        s:10188,PREL

      319     9752    3         CASE(%KV_INPUNT_RCR );

      320     9753
      321     9754        /* Input is taking place in units of a record.                                */
      322     9755
      323     9756    3            IF KV$VDH_DAT.DATMOD = %KV#DATMOD_NRM

PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:63   
   9756   2 0000EF  8286                                 LB,'000C'X        ,B6
   9756   2 0000F0       000C
          2 0000F1  0501 0097                            BBT      s:9799,PREL
          2 0000F3  BC80 0000 0000  xsym                 LDB,B3   KV$PTR$
          2 0000F6  ACC3 0006                            LDB,B2   6,B3
          2 0000F8  9CC2 000E                            LDB,B1   14,B2
          2 0000FA  8DC1 0008                            CMN      8,B1
          2 0000FC  0901 008C                            BE       s:9799,PREL

      324     9757    4              AND %KV_TRNTBL.INPTRN1$ ~= ADDR(NIL) THEN DO;

      325     9758        /*
      326     9759        This data isn't transparent or binary,
      327     9760        and there is an input translation table, so translate it.
      328     9761        */
      329     9762    5               IF KV$VDH_DAT.DAT__.DATBYTSIZ>%KV_SSN.REDBFR__.BFRBYTSIZ THEN DO;

   9762   2 0000FE  D846 0004                            LDR,R5   4,B6
          2 000100  D944 0034                            CMR,R5   52,B4
          2 000102  0381 002C                            BLE      s:9782,PREL

      330     9763        /*
      331     9764        The user's data won't fit into the current read buffer (if any).
      332     9765        Allocate a (larger) buffer.
      333     9766        */
      334     9767    5                  %VDH_GETBFR.BYTSIZ =

   9767   2 000104  ECC3 0004                            LDB,B6   4,B3
          2 000106  D870 0085                            LDR,R5   133,IMO
          2 000108  D946 0015                            CMR,R5   21,B6
          2 00010A  0381 0003                            BLE      s:9767+10,PREL
          2 00010C  D846 0015                            LDR,R5   21,B6
          2 00010E  ECC7 0004                            LDB,B6   @KV$VDH_X,AUTO
          2 000110  D946 0004                            CMR,R5   4,B6
          2 000112  0281 0003                            BGE      s:9767+18,PREL
          2 000114  D846 0004                            LDR,R5   4,B6
          2 000116  DF47 0012                            STR,R5   FPT+3,AUTO
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:64   

      335     9768    5                    MAXIMUM(MINIMUM(%KV_STR.MAXRCRBYTSIZ, 133), KV$VDH_DAT.DAT__.
              9768                             DATBYTSIZ);
      336     9769    6                  CALL KVS$GETREDBFR(%VDH_GETBFR.BYTSIZ) WHENRETURN DO;

   9769   2 000118  ABC7 0012                            LAB,B2   FPT+3,AUTO
          2 00011A  AFC7 0026                            STB,B2   INPCNDFLG+1,AUTO
          2 00011C  BBC7 0026                            LAB,B3   INPCNDFLG+1,AUTO
          2 00011E  CBF0 0100                            LAB,B4   256,IMO
          2 000120  E380 0000 0000  xent                 LNJ,B6   KVS$GETREDBFR
          2 000123       0009                            DC       s:9779,PREL

      337     9770        /*
      338     9771        We got the new read buffer.
      339     9772        */
      340     9773    6                     %KV_SSN.REDBFR__.BFRRLSDSP = %KV_BFRRLSDSP_DSC;

   9773   2 000124  6C03                                 LDV,R6   3
          2 000125  ECC7 0008                            LDB,B6   Y@SSN$,AUTO
          2 000127  EAC6 0035                            SRM,R6,'00FF'X    53,B6
          2 000129       00FF

      341     9774    6                  END;                     /* WHENRETURN                         */

   9774   2 00012A  0F81 0004                            B        s:9782,PREL

      342     9775    6                  WHENALTRETURN DO;

      343     9776        /*
      344     9777        We didn't get the buffer.
      345     9778        */
      346     9779    6                     ALTRETURN;

   9779   2 00012C  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      347     9780    6                  END;                     /* WHENALTRETURN                      */
      348     9781    5               END;              /* END IF DATBYTSIZ>%KV_SSN.REDBFR__.BFRBYTSIZ  */
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:65   

      349     9782    4               FPT(0) = KV$VDH_DAT.DAT__.DATBYTSIZ;

   9782   2 00012F  ECC7 0004                            LDB,B6   @KV$VDH_X,AUTO
          2 000131  E846 0004                            LDR,R6   4,B6
          2 000133  EF47 000F                            STR,R6   FPT,AUTO

      350     9783    4               FPT(2) = KV$VDH_DAT.DAT__.BYTX;

   9783   2 000135  D846 0003                            LDR,R5   3,B6
          2 000137  DF47 0011                            STR,R5   FPT+2,AUTO

      351     9784    4               P1$ = %KV_SSN.REDBFR__.ADR$;

   9784   2 000139  DCC7 0008                            LDB,B5   Y@SSN$,AUTO
          2 00013B  CCC5 0030                            LDB,B4   48,B5
          2 00013D  CFC7 000A                            STB,B4   P1$,AUTO

      352     9785    4               FPT(1) = %KV_SSN.REDBFR__.BYTX;

   9785   2 00013F  C845 0032                            LDR,R4   50,B5
          2 000141  CF47 0010                            STR,R4   FPT+1,AUTO

      353     9786    4               Y@TRCBFR$ = %KV_TRNTBL.INPTRN1$;

   9786   2 000143  BC80 0000 0000  xsym                 LDB,B3   KV$PTR$
          2 000146  ACC3 0006                            LDB,B2   6,B3
          2 000148  9CC2 000E                            LDB,B1   14,B2
          2 00014A  ECC1 0008                            LDB,B6   8,B1
          2 00014C  EFC7 000D                            STB,B6   Y@TRCBFR$,AUTO

      354     9787    4               CALL XLATE(

   9787   2 00014E  ECC7 0004                            LDB,B6   @KV$VDH_X,AUTO
          2 000150  DCC6 0001                            LDB,B5   1,B6
          2 000152  B800 0000 0000  03                   LDR,R3   0
          2 000155  EBB0 0000 0000  02                   LAB,B6   s:11,R3
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:66   
          2 000158  DFC7 0026                            STB,B5   INPCNDFLG+1,AUTO
          2 00015A  AB85                                 LAB,B2   ,B5
          2 00015B  A855                                 LDR,R2   R5
          2 00015C  BB84                                 LAB,B3   ,B4
          2 00015D  B854                                 LDR,R3   R4
          2 00015E  F856                                 LDR,R7   R6
          2 00015F  9CC7 000D                            LDB,B1   Y@TRCBFR$,AUTO
          2 000161  1C00                                 LDV,R1   0
          2 000162  D870 00FF                            LDR,R5   255,IMO
          2 000164  D380 0000 0000  xent                 LNJ,B5   X6C_MAT

      355     9788    4                 SUBSTR(P1$->Y$CHR, FPT(1), FPT(0)),
      356     9789    4                 Y@TRCBFR$->Y$CHR,
      357     9790    4                 SUBSTR(KV$VDH_DAT.DAT__.ADR$->Y$CHR, FPT(2), FPT(0)));
      358     9791    4               %KV_SSN.REDBFR__.DATBYTSIZ = FPT(0);

   9791   2 000167  ECC7 0008                            LDB,B6   Y@SSN$,AUTO
          2 000169  E847 000F                            LDR,R6   FPT,AUTO
          2 00016B  EF46 0033                            STR,R6   51,B6

      359     9792    4               %VDH_DAT = KV$VDH_DAT;

   9792   2 00016D  ACC7 0004                            LDB,B2   @KV$VDH_X,AUTO
          2 00016F  2C00                                 LDV,R2   0
          2 000170  6C10                                 LDV,R6   16
          2 000171  BB87                                 LAB,B3   ,AUTO
          2 000172  3C1E                                 LDV,R3   30
          2 000173  0008                                 MMM

      360     9793    4               %VDH_DAT.DAT__ = %KV_SSN.REDBFR__;

   9793   2 000174  ACC7 0008                            LDB,B2   Y@SSN$,AUTO
          2 000176  2C60                                 LDV,R2   96
          2 000177  6C0C                                 LDV,R6   12
          2 000178  BB87                                 LAB,B3   ,AUTO
          2 000179  3C20                                 LDV,R3   32
          2 00017A  0008                                 MMM
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:67   

      361     9794    4               CALL KVI$SNDDAT (%VDH_DAT);

   9794   2 00017B  EBC7 000F                            LAB,B6   FPT,AUTO
          2 00017D  EFC7 0026                            STB,B6   INPCNDFLG+1,AUTO
          2 00017F  BBC7 0026                            LAB,B3   INPCNDFLG+1,AUTO
          2 000181  CBF0 0100                            LAB,B4   256,IMO
          2 000183  E380 0000 0000  xent                 LNJ,B6   KVI$SNDDAT
          2 000186       0001                            DC       s:9795,PREL

      362     9795    4            END; ELSE DO;                  /* END IF DATMOD = NRM                */

   9795   2 000187  0F81 0009                            B        s:9801,PREL

      363     9796        /*
      364     9797        Translation isn't required.
      365     9798        */
      366     9799    4               CALL KVI$SNDDAT(KV$COPY);

   9799   2 000189  BBC7 0004                            LAB,B3   @KV$VDH_X,AUTO
          2 00018B  CBF0 0100                            LAB,B4   256,IMO
          2 00018D  E380 0000 0000  xent                 LNJ,B6   KVI$SNDDAT
          2 000190       0001                            DC       s:9801,PREL

      367     9800    4            END;                           /* END ELSE IF DATMOD = NRM           */

      368     9801    4            IF (KV$VDH_DAT.CMPCOD = %KV_CMPCOD_EOF) THEN DO;

   9801   2 000191  ECC7 0004                            LDB,B6   @KV$VDH_X,AUTO
          2 000193  E2C6 0007                            LLH,R6   7,B6
          2 000195  6D01                                 CMV,R6   1
          2 000196  0981 000A                            BNE      s:9808,PREL

      369     9802
      370     9803        /* End of file was just reported. For now, reset the credits
      371     9804           we have for sending records, until the other end takes some action. */
      372     9805
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:68   
      373     9806    4               %KV_STR.SNDMAXNMBRCR = 0;

   9806   2 000198  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 00019B  CCC5 0004                            LDB,B4   4,B5
          2 00019D  8744 0019                            CL       25,B4

      374     9807    4            END;

   9807   2 00019F  0F81 03B7                            B        s:10188,PREL

      375     9808    4            ELSE DO WHILE %KV_STR.SNDMAXNMBRCR>0

   9808   2 0001A1  0F81 003C                            B        s:9835,PREL

      376     9809
      377     9810        /* There are still outstanding credits for data.                              */
      378     9811
      379     9812    4              AND NOT %KV_VDI.INTREDINH AND NOT %KV_VDI.USRRQSDAT.RED;
      380     9813
      381     9814        /* Initializing reads isn't inhibited.
      382     9815           Try for another USR_RQSDAT.                                             */
      383     9816
      384     9817    4               %KV_VDI.INTREDINH = '1'B;

   9817   2 0001A3  ECC7 0006                            LDB,B6   Y@VDI$,AUTO
          2 0001A5  8946 001D                            LBT,'8000'X       29,B6
          2 0001A7       8000

      385     9818    4               %KV_SSN.REDRQSPND = '1'B;

   9818   2 0001A8  DCC7 0008                            LDB,B5   Y@SSN$,AUTO
          2 0001AA  8945 0028                            LBT,'0002'X       40,B5
          2 0001AC       0002

      386     9819    4               %KV_VDI.USRRQSDAT.RED = '1'B;

   9819   2 0001AD  8946 001D                            LBT,'0010'X       29,B6
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:69   
   9819   2 0001AF       0010

      387     9820    4               %USR_RQSDAT = KV_USR_RQSDAT;

   9820   2 0001B0  AB80 0000 0000  xsym                 LAB,B2   KV_USR_RQSDAT
          2 0001B3  2C00                                 LDV,R2   0
          2 0001B4  6C0C                                 LDV,R6   12
          2 0001B5  BB87                                 LAB,B3   ,AUTO
          2 0001B6  3C1E                                 LDV,R3   30
          2 0001B7  0008                                 MMM

      388     9821    4               %USR_RQSDAT.MAXRCRBYTSIZ = %KV_STR.MAXRCRBYTSIZ;

   9821   2 0001B8  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 0001BB  DCC6 0004                            LDB,B5   4,B6
          2 0001BD  E845 0015                            LDR,R6   21,B5
          2 0001BF  EF47 0014                            STR,R6   FPT+5,AUTO

      389     9822
      390     9823    4               IF KV$PTR.INPCNDPND.TRN THEN

   9823   2 0001C1  89C6 001B                            CMZ      27,B6
          2 0001C3  0881 0007                            BAGE     s:9832,PREL

      391     9824        /*
      392     9825        This is a transparent mode read.
      393     9826        */
      394     9827    4               %USR_RQSDAT.DATMOD = %KV#DATMOD_TRN;

   9827   2 0001C5  5C20                                 LDV,R5   32
          2 0001C6  DAC7 000F                            SRM,R5,'0060'X    FPT,AUTO
          2 0001C8       0060
          2 0001C9  0F81 0004                            B        s:9833,PREL

      395     9828    4               ELSE
      396     9829        /*
      397     9830        This read isn't in transparent mode.
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:70   
      398     9831        */
      399     9832    4               %USR_RQSDAT.DATMOD = %KV#DATMOD_NRM;

   9832   2 0001CB  8847 000F                            LBF,'0060'X       FPT,AUTO
   9832   2 0001CD       0060

      400     9833    4               CALL KVV$CALUSR (%USR_RQSDAT);

   9833   2 0001CE  DBC7 000F                            LAB,B5   FPT,AUTO
          2 0001D0  DFC7 0026                            STB,B5   INPCNDFLG+1,AUTO
          2 0001D2  BBC7 0026                            LAB,B3   INPCNDFLG+1,AUTO
          2 0001D4  CBF0 0100                            LAB,B4   256,IMO
          2 0001D6  E3C0 0654                            LNJ,B6   s:10601,PREL
          2 0001D8       0001                            DC       s:9834,PREL

      401     9834    4               %KV_VDI.INTREDINH = '0'B;

   9834   2 0001D9  ECC7 0006                            LDB,B6   Y@VDI$,AUTO
          2 0001DB  8846 001D                            LBF,'8000'X       29,B6
          2 0001DD       8000

      402     9835    4            END;                           /* IF                                 */

   9835   2 0001DE  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 0001E1  DCC6 0004                            LDB,B5   4,B6
          2 0001E3  E845 0019                            LDR,R6   25,B5
          2 0001E5  6A81 000C                            BLEZ,R6  s:9836,PREL
          2 0001E7  CCC7 0006                            LDB,B4   Y@VDI$,AUTO
          2 0001E9  89C4 001D                            CMZ      29,B4
          2 0001EB  0801 0006                            BAL      s:9836,PREL
          2 0001ED  82C4 001D                            LB,'0010'X        29,B4
          2 0001EF       0010
          2 0001F0  0581 FFB2                            BBF      s:9817,PREL

      403     9836    3         END /* CASE */;

   9836   2 0001F2  0F81 0364                            B        s:10188,PREL
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:71   

      404     9837
      405     9838        /* Declare local position                                                     */
      406     9839
      407     9840    2      CASE(%KV_VDH_FNC_DCLLCLPST);

      408     9841    3         IF %KV_VDI.SSNCNT>1 THEN DO;

   9841   2 0001F4  DCC7 0006                            LDB,B5   Y@VDI$,AUTO
          2 0001F6  E845 000E                            LDR,R6   14,B5
          2 0001F8  6D01                                 CMV,R6   1
          2 0001F9  0381 0068                            BLE      s:9859,PREL

      409     9842    3            CALL KVI$PRGTYPAHDINPFNC;

   9842   2 0001FB  CBF0 0000                            LAB,B4   0,IMO
          2 0001FD  E380 0000 0000  xent                 LNJ,B6   KVI$PRGTYPAHDINPFNC
          2 000200       0001                            DC       s:9843,PREL

      410     9843    3            %KV_SSN.TYPAHD.BFRCHR = '0'B;

   9843   2 000201  ECC7 0008                            LDB,B6   Y@SSN$,AUTO
          2 000203  8846 0027                            LBF,'0020'X       39,B6
          2 000205       0020

      411     9844    3            FPT(0) = %KV_SSN.SSNID;

   9844   2 000206  E2C6 0037                            LLH,R6   55,B6
          2 000208  EF47 000F                            STR,R6   FPT,AUTO

      412     9845    4            DO WHILE KV$VDH_DCLLCLPST.PHSPST.LIN<%KV_SRD.TOPLFT.LIN

   9845   2 00020A  0F81 0026                            B        s:9854,PREL

      413     9846    4              OR KV$VDH_DCLLCLPST.PHSPST.LIN>%KV_SRD.SRDEND.LIN
      414     9847    4              OR KV$VDH_DCLLCLPST.PHSPST.CLM>%KV_SRD.SRDEND.CLM
      415     9848    4              OR KV$VDH_DCLLCLPST.PHSPST.CLM<%KV_SRD.TOPLFT.CLM;
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:72   
      416     9849    4               IF %KV_SSN.LNK$=ADDR(NIL)

   9849   2 00020C  ECC7 0008                            LDB,B6   Y@SSN$,AUTO
          2 00020E  8DC6 0002                            CMN      2,B6
          2 000210  0981 000C                            BNE      s:9851,PREL

      417     9850    4               THEN KV$PTR$ = %KV_VDI.SSN$->KV$SSN.SNCPTR$;

   9850   2 000212  DCC7 0006                            LDB,B5   Y@VDI$,AUTO
          2 000214  CCC5 0004                            LDB,B4   4,B5
          2 000216  BCC4 0008                            LDB,B3   8,B4
          2 000218  BF80 0000 0000  xsym                 STB,B3   KV$PTR$
          2 00021B  0F81 0008                            B        s:9852,PREL

      418     9851    4               ELSE KV$PTR$ = %KV_SSN.LNK$->KV$SSN.SNCPTR$;

   9851   2 00021D  DCC6 0002                            LDB,B5   2,B6
          2 00021F  CCC5 0008                            LDB,B4   8,B5
          2 000221  CF80 0000 0000  xsym                 STB,B4   KV$PTR$

      419     9852    4               Y@SSN$ = KV$PTR.SSN$;

   9852   2 000224  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 000227  CCC5 0002                            LDB,B4   2,B5
          2 000229  CFC7 0008                            STB,B4   Y@SSN$,AUTO

      420     9853    4               IF %KV_SSN.SSNID = FPT(0) THEN EXIT;

   9853   2 00022B  E2C4 0037                            LLH,R6   55,B4
          2 00022D  E947 000F                            CMR,R6   FPT,AUTO
          2 00022F  0901 0018                            BE       s:9855,PREL

      421     9854    4            END;

   9854   2 000231  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 000234  DCC6 000A                            LDB,B5   10,B6
          2 000236  CCC7 0004                            LDB,B4   @KV$VDH_X,AUTO
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:73   
          2 000238  E844 0001                            LDR,R6   1,B4
          2 00023A  E945 0009                            CMR,R6   9,B5
          2 00023C  0850                                 BAL      s:9849,SPREL
          2 00023D  E945 001A                            CMR,R6   26,B5
          2 00023F  0A4D                                 BAG      s:9849,SPREL
          2 000240  D844 0002                            LDR,R5   2,B4
          2 000242  D945 001B                            CMR,R5   27,B5
          2 000244  0A48                                 BAG      s:9849,SPREL
          2 000245  D945 000A                            CMR,R5   10,B5
          2 000247  0845                                 BAL      s:9849,SPREL

      422     9855    3            FPT(0) = %KV_STR.ID;

   9855   2 000248  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 00024B  DCC6 0004                            LDB,B5   4,B6
          2 00024D  E2C5 001C                            LLH,R6   28,B5
          2 00024F  EF47 000F                            STR,R6   FPT,AUTO

      423     9856    3            CALL KVS$SETSTR (FPT);

   9856   2 000251  DBC7 000F                            LAB,B5   FPT,AUTO
          2 000253  DFC7 0026                            STB,B5   INPCNDFLG+1,AUTO
          2 000255  BBC7 0026                            LAB,B3   INPCNDFLG+1,AUTO
          2 000257  CBF0 0100                            LAB,B4   256,IMO
          2 000259  E380 0000 0000  xent                 LNJ,B6   KVS$SETSTR
          2 00025C       0001                            DC       s:9857,PREL

      424     9857    3            %KV_VDI.RE_DSPINP = '1'B;

   9857   2 00025D  ECC7 0006                            LDB,B6   Y@VDI$,AUTO
          2 00025F  8946 0019                            LBT,'0010'X       25,B6
          2 000261       0010

      425     9858    3         END;

      426     9859    3         IF %KV_MVD.ORG=%KV#VD_ORG_FORM AND %KV_SSN.REDRQSPND THEN DO;

PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:74   
   9859   2 000262  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 000265  DCC6 0006                            LDB,B5   6,B6
          2 000267  E2C5 0015                            LLH,R6   21,B5
          2 000269  6D04                                 CMV,R6   4
          2 00026A  0981 0022                            BNE      s:9864,PREL
          2 00026C  CCC7 0008                            LDB,B4   Y@SSN$,AUTO
          2 00026E  82C4 0028                            LB,'0002'X        40,B4
          2 000270       0002
          2 000271  0581 001B                            BBF      s:9864,PREL

      427     9860    3            %VDH_PST = KV_VDH_PST_ABS;

   9860   2 000273  AB80 0000 0000  xsym                 LAB,B2   KV_VDH_PST_ABS
          2 000276  2C00                                 LDV,R2   0
          2 000277  6C08                                 LDV,R6   8
          2 000278  BB87                                 LAB,B3   ,AUTO
          2 000279  3C1E                                 LDV,R3   30
          2 00027A  0008                                 MMM

      428     9861    3            %VDH_PST.PSTVAL = KV$VDH_DCLLCLPST.PHSPST;

   9861   2 00027B  ECC7 0004                            LDB,B6   @KV$VDH_X,AUTO
          2 00027D  8CC6 0001                            LDI      1,B6
          2 00027F  8D47 0011                            SDI      FPT+2,AUTO

      429     9862    3            CALL KVF$PST(FPT);

   9862   2 000281  DBC7 000F                            LAB,B5   FPT,AUTO
          2 000283  DFC7 0026                            STB,B5   INPCNDFLG+1,AUTO
          2 000285  BBC7 0026                            LAB,B3   INPCNDFLG+1,AUTO
          2 000287  CBF0 0100                            LAB,B4   256,IMO
          2 000289  E380 0000 0000  xent                 LNJ,B6   KVF$PST
          2 00028C       0001                            DC       s:9864,PREL

      430     9863    3         END;                              /* IF                                 */

      431     9864    2         %KV_SSN.REDBFR = '0'B;
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:75   

   9864   2 00028D  ECC7 0008                            LDB,B6   Y@SSN$,AUTO
          2 00028F  5C0C                                 LDV,R5   12
          2 000290  0021                                 ALR      ;
          2 000291       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          2 000293       4006 002A                                ALPHANUM(42,B6,,R5,FILL)

      432     9865    2         %KV_SSN.REDBFR__.DATBYTSIZ = 0;

   9865   2 000295  437F                                 CSYNC    s:9864+7,SPREL
          2 000296  8746 0033                            CL       51,B6
          2 000298  0F81 02BE                            B        s:10188,PREL

      433     9866
      434     9867        /* Disconnect request                                                         */
      435     9868
      436     9869    2      CASE(%KV_VDH_FNC_DSC );

      437     9870    2         CALL KVC$DSC(KV$COPY);

   9870   2 00029A  BBC7 0004                            LAB,B3   @KV$VDH_X,AUTO
          2 00029C  CBF0 0100                            LAB,B4   256,IMO
          2 00029E  E380 0000 0000  xent                 LNJ,B6   KVC$DSC
          2 0002A1       0001                            DC       s:9870+8,PREL
          2 0002A2  0F81 02B4                            B        s:10188,PREL

      438     9871
      439     9872        /* DEVICE ERROR. Report the device error to the host, for
      440     9873           action (possibly) by keyin.                                                */
      441     9874
      442     9875
      443     9876        /* Report event                                                               */
      444     9877
      445     9878    2      CASE(%KV_VDH_FNC_EVT );

      446     9879
      447     9880        /* Trace if indicated */
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:76   
      448     9881
      449     9882              %KH$CALTRC (CND=USR, USRTST="KV_TRCVDHEVT(KV$VDH_EVT.ID)",
      450     9883              COD=%KV#TRC_COD_CALVDH, BFR1$=KV$VDH_X, BFR1_BYTSIZ=32);

      451     9918
      452     9919    2         %KV_STT.VDIVDHEVTCNT(KV$VDH_EVT.ID) =

   9919   2 0002A4  DCC7 0006                            LDB,B5   Y@VDI$,AUTO
          2 0002A6  CCC5 0008                            LDB,B4   8,B5
          2 0002A8  BCC4 0033                            LDB,B3   51,B4
          2 0002AA  9806                                 LDR,R1   ,B6
          2 0002AB  9570 00FF                            AND,R1   255,IMO
          2 0002AD  ABC3 0200                            LAB,B2   512,B3
          2 0002AF  9BC3 0200                            LAB,B1   512,B3
          2 0002B1  8C92                                 LDI      ,B2,R1
          2 0002B2  8470 0000 0001                       AID      1,IMO
          2 0002B5  8D11                                 SDI      ,B1,R1

      453     9920    2           %KV_STT.VDIVDHEVTCNT(KV$VDH_EVT.ID) + 1;
      454     9921
      455     9922    3         DO CASE( KV$VDH_EVT.ID );

   9922   2 0002B6  B806                                 LDR,R3   ,B6
          2 0002B7  B570 00FF                            AND,R3   255,IMO
          2 0002B9  3D05                                 CMV,R3   5
          2 0002BA  0281 011B                            BGE      s:10027,PREL
          2 0002BC  A830 0000 02C2  02                   LDR,R2   s:9922+12,R3
          2 0002BF  83A0 0000 02C7  02                   JMP      s:9927,R2
          2 0002C2       010F                            DC       s:10027,PREL
          2 0002C3       0030                            DC       s:9943,PREL
          2 0002C4       00B2                            DC       s:10000,PREL
          2 0002C5       0091                            DC       s:9975,PREL
          2 0002C6       0000                            DC       s:9927,PREL

      456     9923
      457     9924        /* Attention (e.g., CP-5 control-Y or break).                                 */
      458     9925
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:77   
      459     9926    3         CASE(%KV_VDH_EVT_ID_ATN );

      460     9927    3            IF %KV_SSN.SSNCNCID=0 THEN ALTRETURN;

   9927   2 0002C7  CCC7 0008                            LDB,B4   Y@SSN$,AUTO
          2 0002C9  E844 0024                            LDR,R6   36,B4
          2 0002CB  6981 0004                            BNEZ,R6  s:9928,PREL

   9927   2 0002CD  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      461     9928    3            IF NOT %KV_SSN.WATINPDLTMRK AND NOT %KV_SSN.WATOTPDLTMRK

   9928   2 0002D0  82C4 0028                            LB,'1000'X        40,B4
   9928   2 0002D2       1000
          2 0002D3  0501 0009                            BBT      s:9930,PREL
          2 0002D5  82C4 0028                            LB,'2000'X        40,B4
          2 0002D7       2000
          2 0002D8  0501 0004                            BBT      s:9930,PREL

      462     9929    3            THEN %KV_SSN.MRKRQSENB = '1'B;

   9929   2 0002DA  8944 0028                            LBT,'8000'X       40,B4
   9929   2 0002DC       8000

      463     9930    4            IF (KV$VDH_EVT.PRM > 0) THEN DO;

   9930   2 0002DD  D846 0001                            LDR,R5   1,B6
          2 0002DF  5901 000C                            BEZ,R5   s:9938,PREL

      464     9931
      465     9932        /* The parameter is greater than 0; send a break.                             */
      466     9933    4               CALL KVM$SND (KV_SND_EVT_BRK);

   9933   2 0002E1  BB80 0000 0001  03                   LAB,B3   +1
          2 0002E4  CBF0 0100                            LAB,B4   256,IMO
          2 0002E6  E380 0000 0000  xent                 LNJ,B6   KVM$SND
          2 0002E9       0001                            DC       s:9934,PREL
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:78   

      467     9934    4            END; ELSE DO;

   9934   2 0002EA  0F81 026C                            B        s:10188,PREL

      468     9935
      469     9936        /* The parameter is 0. Send a monitor attention request.                      */
      470     9937
      471     9938    4               CALL KVM$SND (KV_SND_EVT_MNTATN);

   9938   2 0002EC  BB80 0000 0003  03                   LAB,B3   +3
          2 0002EF  CBF0 0100                            LAB,B4   256,IMO
          2 0002F1  E380 0000 0000  xent                 LNJ,B6   KVM$SND
          2 0002F4       0001                            DC       s:9939,PREL

      472     9939    4            END;                           /* IF                                 */

   9939   2 0002F5  0F81 0261                            B        s:10188,PREL

      473     9940
      474     9941        /* Complete output.                                                           */
      475     9942
      476     9943    3         CASE(%KV_VDH_EVT_ID_CMPOTP );

   9930   2                              CMPOTP          null
      477     9944    3   CMPOTP:  ;
      478     9945    4            IF %KV_VDI.OTPCNDPND.PST ~= 0 THEN DO;

   9945   2 0002F7  ECC7 0006            CMPOTP          LDB,B6   Y@VDI$,AUTO
          2 0002F9  E846 001A                            LDR,R6   26,B6
          2 0002FB  6901 025B                            BEZ,R6   s:10188,PREL

      479     9946
      480     9947        /* The physical and device cursor positions don't
      481     9948           match, and we are to complete output, so we
      482     9949           have to generate whatever is required to move
      483     9950           the cursor to the physical position.                                       */
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:79   
      484     9951
      485     9952    4               %USR_PST = KV_USR_PST;

   9952   2 0002FD  AB80 0000 0000  xsym                 LAB,B2   KV_USR_PST
          2 000300  2C00                                 LDV,R2   0
          2 000301  6C08                                 LDV,R6   8
          2 000302  BB87                                 LAB,B3   ,AUTO
          2 000303  3C1E                                 LDV,R3   30
          2 000304  0008                                 MMM

      486     9953    4               %USR_PST.PHSPST = %KV_SRD.CRT;

   9953   2 000305  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 000308  DCC6 000A                            LDB,B5   10,B6
          2 00030A  8CC5 0015                            LDI      21,B5
          2 00030C  8D47 0010                            SDI      FPT+1,AUTO

      487     9954    4               %USR_PST.PHSPSTMOD = %KV_VDI.OTPCNDPND.PST;

   9954   2 00030E  DCC7 0006                            LDB,B5   Y@VDI$,AUTO
          2 000310  D845 001A                            LDR,R5   26,B5
          2 000312  D7C7 0012                            STH,R5   FPT+3,AUTO

      488     9955    4               %KV_VDI.OTPCNDPND.PST = 0;

   9955   2 000314  8745 001A                            CL       26,B5

      489     9956    4               %KV_STT.VDIUSRFNCCNT(%KV_USR_FNC_PST) =

   9956   2 000316  CCC5 0008                            LDB,B4   8,B5
          2 000318  ACC4 0033                            LDB,B2   51,B4
          2 00031A  8AC2 01F9                            INC      505,B2
          2 00031C  8EC2 01F8                            CAD      504,B2

      490     9957    4                 %KV_STT.VDIUSRFNCCNT(%KV_USR_FNC_PST) +1;
      491     9958    5               IF Y@TRCBFR$~=ADDR(NIL) THEN DO;

PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:80   
   9958   2 00031E  8DC7 000D                            CMN      Y@TRCBFR$,AUTO
          2 000320  0901 0009                            BE       s:9965,PREL

      492     9959        /*
      493     9960        The VDH trace buffer does exist.  Do VDH tracing.
      494     9961        */
      495     9962    5                  Y@TRCENT = Y_TRCENT_USRVDIPST;

   9962   2 000322  D800 0000 001A  00                   LDR,R5   Y_TRCENT_USRVDIPST
          2 000325  DF47 000C                            STR,R5   Y@TRCENT,AUTO

      496     9963    5                  CALL Y$TRC;

   9963   2 000327  E3C0 0412                            LNJ,B6   s:0,PREL
          2 000329       0001                            DC       s:9965,PREL

      497     9964    5               END;                        /* END IF TRCBFR$ ~= NIL              */

      498     9965    5               IF %KV_MRD.CALUSR_PST THEN DO;

   9965   2 00032A  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 00032D  DCC6 0008                            LDB,B5   8,B6
          2 00032F  82C5 000C                            LB,'0040'X        12,B5
          2 000331       0040
          2 000332  0581 0017                            BBF      s:9968,PREL

      499     9966    5                  CALL %KV_USRPRM.USRSBR$ (FPT);

   9966   2 000334  CCC7 0006                            LDB,B4   Y@VDI$,AUTO
          2 000336  BCC4 0008                            LDB,B3   8,B4
          2 000338  ABC7 000F                            LAB,B2   FPT,AUTO
          2 00033A  AFC7 0026                            STB,B2   INPCNDFLG+1,AUTO
          2 00033C  BFC7 0028                            STB,B3   INPCNDFLG+3,AUTO
          2 00033E  BBC7 0026                            LAB,B3   INPCNDFLG+1,AUTO
          2 000340  DCC7 0028                            LDB,B5   INPCNDFLG+3,AUTO
          2 000342  9CC5 0035                            LDB,B1   53,B5
          2 000344  CBF0 0100                            LAB,B4   256,IMO
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:81   
          2 000346  E381                                 LNJ,B6   ,B1
          2 000347       0001                            DC       s:9967,PREL

      500     9967    5               END; ELSE DO;               /* ELSE IF CALUSR_PST                 */

   9967   2 000348  0F81 020E                            B        s:10188,PREL

      501     9968    5                  CALL KVO$GNRPST (FPT);

   9968   2 00034A  CBC7 000F                            LAB,B4   FPT,AUTO
          2 00034C  CFC7 0026                            STB,B4   INPCNDFLG+1,AUTO
          2 00034E  BBC7 0026                            LAB,B3   INPCNDFLG+1,AUTO
          2 000350  CBF0 0100                            LAB,B4   256,IMO
          2 000352  E380 0000 0000  xent                 LNJ,B6   KVO$GNRPST
          2 000355       0001                            DC       s:9970,PREL

      502     9969    5               END;                        /* END IF CALUSR_PST                  */

      503     9970    4            END;                           /* IF                                 */

   9970   2 000356  0F81 0200                            B        s:10188,PREL

      504     9971
      505     9972        /* Release VDI.                                                               */
      506     9973
      507     9974    3         CASE(%KV_VDH_EVT_ID_RLSVDI );

      508     9975    4            IF (%KV_VDI.SSN$ ~= ADDR(NIL)) THEN DO;

   9975   2 000358  8DC5 0004                            CMN      4,B5
          2 00035A  0901 0016                            BE       s:9994,PREL

      509     9976
      510     9977        /* We have at least one session associated with this instance
      511     9978           of VDI.                                                                    */
      512     9979
      513     9980    4               %KV_VDI.VDHEVTENB(%KV_VDH_EVT_ID_RLSVDI) = '0'B;
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:82   

   9980   2 00035C  8845 001F                            LBF,'0002'X       31,B5
   9980   2 00035E       0002

      514     9981
      515     9982
      516     9983        /* Have path management schedule this session.                                */
      517     9984
      518     9985    4               IF KV_RCVSSN$~=Y@SSN$

   9985   2 00035F  CC80 0000 0000  xsym                 LDB,B4   KV_RCVSSN$
          2 000362  CDC7 0008                            CMB,B4   Y@SSN$,AUTO
          2 000364  0901 01F2                            BE       s:10188,PREL

      519     9986        /* Unless we're already processing for this session. */
      520     9987
      521     9988    4               THEN CALL KVM$SND (KV_SND_SCHLCLSSN);

   9988   2 000366  BB80 0000 0005  03                   LAB,B3   +5
          2 000369  CBF0 0100                            LAB,B4   256,IMO
          2 00036B  E380 0000 0000  xent                 LNJ,B6   KVM$SND
          2 00036E       0001                            DC       s:9989,PREL

      522     9989    4            END; ELSE DO;

   9989   2 00036F  0F81 01E7                            B        s:10188,PREL

      523     9990
      524     9991        /* We succeeded on KV$VDH_INT, and failed on KV$VDH_CNC.
      525     9992           Release the instance of VDI created by KV$VDH_INT.                         */
      526     9993
      527     9994    4               CALL KVC$RLSVDI;

   9994   2 000371  CBF0 0000                            LAB,B4   0,IMO
          2 000373  E380 0000 0000  xent                 LNJ,B6   KVC$RLSVDI
          2 000376       0001                            DC       s:9995,PREL

PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:83   
      528     9995    4            END;                           /* IF                                 */

   9995   2 000377  0F81 01DF                            B        s:10188,PREL

      529     9996
      530     9997        /* Request output.                                                            */
      531     9998
      532     9999    3         CASE(%KV_VDH_EVT_ID_RQSOTP );

      533    10000    3            P1$ = KV$PTR$;

  10000   2 000379  CC80 0000 0000  xsym                 LDB,B4   KV$PTR$
          2 00037C  CFC7 000A                            STB,B4   P1$,AUTO

      534    10001    3            Y@SSN$ = %KV_VDI.SSN$;

  10001   2 00037E  BCC5 0004                            LDB,B3   4,B5
          2 000380  BFC7 0008                            STB,B3   Y@SSN$,AUTO

      535    10002    3            IF NOT %KV_MRD.OUTPUT THEN %KV_VDI.RQSOTP = '0'B;

  10002   2 000382  ACC4 0008                            LDB,B2   8,B4
          2 000384  82C2 0016                            LB,'0008'X        22,B2
          2 000386       0008
          2 000387  0501 0004                            BBT      s:10003,PREL

  10002   2 000389  8845 0019                            LBF,'0008'X       25,B5
  10002   2 00038B       0008

      536    10003    4            DO WHILE Y@SSN$~=ADDR(NIL);

  10003   2 00038C  0F81 003E                            B        s:10015,PREL

      537    10004    4               IF (NOT %KV_SSN.REDRQSPND OR %KV_SSN.SNCPTR$->KV$PTR.INPCNDPND.TRN

  10004   2 00038E  ECC7 0008                            LDB,B6   Y@SSN$,AUTO
          2 000390  82C6 0028                            LB,'0002'X        40,B6
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:84   
          2 000392       0002
          2 000393  0581 0010                            BBF      s:10004+22,PREL
          2 000395  DCC6 0008                            LDB,B5   8,B6
          2 000397  89C5 001B                            CMZ      27,B5
          2 000399  0801 000A                            BAL      s:10004+22,PREL
          2 00039B  CC86                                 LDB,B4   ,B6
          2 00039C  E844 001D                            LDR,R6   29,B4
          2 00039E  6045                                 SOR,R6   5
          2 00039F  E570 0003                            AND,R6   3,IMO
          2 0003A1  6D02                                 CMV,R6   2
          2 0003A2  0981 0022                            BNE      s:10014,PREL
          2 0003A4  E846 0024                            LDR,R6   36,B6
          2 0003A6  6901 001E                            BEZ,R6   s:10014,PREL
          2 0003A8  D846 0028                            LDR,R5   40,B6
          2 0003AA  5001                                 SOL,R5   1
          2 0003AB  D570 8000                            AND,R5   -32768,IMO
          2 0003AD  DCC7 0006                            LDB,B5   Y@VDI$,AUTO
          2 0003AF  C845 0019                            LDR,R4   25,B5
          2 0003B1  400C                                 SOL,R4   12
          2 0003B2  C570 8000                            AND,R4   -32768,IMO
          2 0003B4  D654                                 XOR,R5   R4
          2 0003B5  5981 000F                            BNEZ,R5  s:10014,PREL

      538    10005    4                 OR %KV_SSN.VDI$->KV$VDI.INPUNT=%KV_INPUNT_RCR)
      539    10006    4                 AND %KV_SSN.SSNCNCID~=0 AND NOT %KV_SSN.OTPBLK\%KV_VDI.RQSOTP
      540    10007
      541    10008        /* There is no message Q, and the VDH-user wants more output.                 */
      542    10009
      543    10010    5               THEN DO;

      544    10011    5                  KV$PTR$ = %KV_SSN.SNCPTR$;

  10011   2 0003B7  CCC6 0008                            LDB,B4   8,B6
          2 0003B9  CF80 0000 0000  xsym                 STB,B4   KV$PTR$

      545    10012    5                  CALL KVM$SND (KV_SND_RQSDAT_GNR);

PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:85   
  10012   2 0003BC  BB80 0000 0007  03                   LAB,B3   +7
          2 0003BF  CBF0 0100                            LAB,B4   256,IMO
          2 0003C1  E380 0000 0000  xent                 LNJ,B6   KVM$SND
          2 0003C4       0001                            DC       s:10014,PREL

      546    10013    5               END;

      547    10014    4               Y@SSN$ = %KV_SSN.LNK$;

  10014   2 0003C5  ECC7 0008                            LDB,B6   Y@SSN$,AUTO
          2 0003C7  DCC6 0002                            LDB,B5   2,B6
          2 0003C9  DFC7 0008                            STB,B5   Y@SSN$,AUTO

      548    10015    4            END;                           /* END IF                             */

  10015   2 0003CB  8DC7 0008                            CMN      Y@SSN$,AUTO
          2 0003CD  09C1                                 BNE      s:10004,SPREL

      549    10016    3            KV$PTR$ = P1$;

  10016   2 0003CE  ECC7 000A                            LDB,B6   P1$,AUTO
          2 0003D0  EF80 0000 0000  xsym                 STB,B6   KV$PTR$

      550    10017    3            RETURN;

  10017   2 0003D3  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      551    10018    3         CASE(ELSE);

      552    10019
      553    10020        /* We got an event we don't understand.                                       */
      554    10021
      555    10022        /*S* SCREECH_CODE: KVV-S$KV_VDHEVT
      556    10023             MESSAGE: VDH got a KV$VDH_EVT.ID it didn't understand
      557    10024        */
      558    10025                 %KH$SCREECH(COD=KVV_VDHEVT);

PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:86   
  10027   2 0003D6  BB80 0000 0009  03                   LAB,B3   +9
          2 0003D9  CBF0 0100                            LAB,B4   256,IMO
          2 0003DB  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          2 0003DE       0001                            DC       s:10029,PREL

      559    10029    3         END /* CASE */;

  10029   2 0003DF  0F81 0177                            B        s:10188,PREL

      560    10030
      561    10031        /* Find input tab                                                             */
      562    10032
      563    10033    2      CASE(%KV_VDH_FNC_FNDINPTAB );

      564    10034        /*S* SCREECH_CODE: KVV-S$KV_VDHFNC
      565    10035             MESSAGE: VDH got a KV$VDH_FNC.FNC it didn't understand
      566    10036        */
      567    10037              %KH$SCREECH(COD=KVV_VDHFNC);

  10039   2 0003E1  BB80 0000 000B  03                   LAB,B3   +11
          2 0003E4  CBF0 0100                            LAB,B4   256,IMO
          2 0003E6  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          2 0003E9       0001                            DC       s:10039+9,PREL
          2 0003EA  0F81 016C                            B        s:10188,PREL

      568    10041
      569    10042        /* Get buffer request                                                         */
      570    10043
      571    10044    2      CASE(%KV_VDH_FNC_GETBFR );

      572    10045    2         CALL KVS$GETBFR(KV$COPY)

  10045   2 0003EC  BBC7 0004                            LAB,B3   @KV$VDH_X,AUTO
          2 0003EE  CBF0 0100                            LAB,B4   256,IMO
          2 0003F0  E380 0000 0000  xent                 LNJ,B6   KVS$GETBFR
          2 0003F3       0003                            DC       s:10047,PREL
          2 0003F4  0F81 0004                            B        s:10047+3,PREL
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:87   

      573    10046    3         WHENALTRETURN DO;

      574    10047    3            ALTRETURN;

  10047   2 0003F6  C380 0000 0000  xent                 LNJ,B4   X6A_AALT
          2 0003F9  0F81 015D                            B        s:10188,PREL

      575    10048    3         END;
      576    10049
      577    10050        /* Get parameter.                                                             */
      578    10051
      579    10052    2      CASE(%KV_VDH_FNC_GETPRM );

      580    10053    2         CALL KVP$GETPRM(KV$COPY);

  10053   2 0003FB  BBC7 0004                            LAB,B3   @KV$VDH_X,AUTO
          2 0003FD  CBF0 0100                            LAB,B4   256,IMO
          2 0003FF  E380 0000 0000  xent                 LNJ,B6   KVP$GETPRM
          2 000402       0001                            DC       s:10053+8,PREL
          2 000403  0F81 0153                            B        s:10188,PREL

      581    10054
      582    10055        /* Interpret input operator(s)                                                */
      583    10056
      584    10057    2      CASE(%KV_VDH_FNC_INTINPOPR );

      585    10058
      586    10059    2         CALL KVI$INTINPOPR(KV$COPY);

  10059   2 000405  BBC7 0004                            LAB,B3   @KV$VDH_X,AUTO
          2 000407  CBF0 0100                            LAB,B4   256,IMO
          2 000409  E380 0000 0000  xent                 LNJ,B6   KVI$INTINPOPR
          2 00040C       0001                            DC       s:10059+8,PREL
          2 00040D  0F81 0149                            B        s:10188,PREL

      587    10060
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:88   
      588    10061        /* Output local (output specified data to local device as opposed
      589    10062           to sending it to the other end.                                            */
      590    10063
      591    10064    2      CASE(%KV_VDH_FNC_OTPLCL );

      592    10065
      593    10066    2         CALL KVO$OTPLCL(KV$COPY);

  10066   2 00040F  BBC7 0004                            LAB,B3   @KV$VDH_X,AUTO
          2 000411  CBF0 0100                            LAB,B4   256,IMO
          2 000413  E380 0000 0000  xent                 LNJ,B6   KVO$OTPLCL
          2 000416       0001                            DC       s:10066+8,PREL
          2 000417  0F81 013F                            B        s:10188,PREL

      594    10067
      595    10068        /* Output marker. We previously sent the VDH-user KV$USR_OTPMRK;
      596    10069          The VDH-user is now returning the data we passed it.  */
      597    10070
      598    10071    2      CASE(%KV_VDH_FNC_OTPMRK );

      599    10072    2         P1$ = KV$PTR$;

  10072   2 000419  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 00041C  DFC7 000A                            STB,B5   P1$,AUTO

      600    10073
      601    10074        /* First make sure we're dealing with the right session context. */
      602    10075
      603    10076    3         IF KV$VDH_OTPMRK.DAT.SSNID~=%KV_SSN.SSNID THEN DO;

  10076   2 00041E  E846 0001                            LDR,R6   1,B6
          2 000420  6048                                 SOR,R6   8
          2 000421  E570 007F                            AND,R6   127,IMO
          2 000423  CCC7 0008                            LDB,B4   Y@SSN$,AUTO
          2 000425  D2C4 0037                            LLH,R5   55,B4
          2 000427  E955                                 CMR,R6   R5
          2 000428  0901 002B                            BE       s:10086,PREL
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:89   

      604    10077    3            Y@SSN$ = %KV_VDI.SSN$;

  10077   2 00042A  BCC7 0006                            LDB,B3   Y@VDI$,AUTO
          2 00042C  ACC3 0004                            LDB,B2   4,B3
          2 00042E  AFC7 0008                            STB,B2   Y@SSN$,AUTO

      605    10078    4            DO WHILE KV$VDH_OTPMRK.DAT.SSNID~=%KV_SSN.SSNID;

  10078   2 000430  D2C2 0037                            LLH,R5   55,B2
          2 000432  E955                                 CMR,R6   R5
          2 000433  0901 0019                            BE       s:10084,PREL

      606    10079    5               IF %KV_SSN.LNK$=ADDR(NIL) THEN DO;

  10079   2 000435  ECC7 0008                            LDB,B6   Y@SSN$,AUTO
          2 000437  8DC6 0002                            CMN      2,B6
          2 000439  0981 0004                            BNE      s:10082,PREL

      607    10080    5                  ALTRETURN;

  10080   2 00043B  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      608    10081    5               END;
      609    10082    4               Y@SSN$ = %KV_SSN.LNK$;

  10082   2 00043E  DCC6 0002                            LDB,B5   2,B6
          2 000440  DFC7 0008                            STB,B5   Y@SSN$,AUTO

      610    10083    4            END;

  10083   2 000442  ECC7 0004                            LDB,B6   @KV$VDH_X,AUTO
          2 000444  E846 0001                            LDR,R6   1,B6
          2 000446  6048                                 SOR,R6   8
          2 000447  E570 007F                            AND,R6   127,IMO
          2 000449  D2C5 0037                            LLH,R5   55,B5
          2 00044B  E955                                 CMR,R6   R5
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:90   
          2 00044C  09E9                                 BNE      s:10079,SPREL

      611    10084    3            KV$PTR$ = %KV_SSN.SNCPTR$;

  10084   2 00044D  DCC7 0008                            LDB,B5   Y@SSN$,AUTO
          2 00044F  CCC5 0008                            LDB,B4   8,B5
          2 000451  CF80 0000 0000  xsym                 STB,B4   KV$PTR$

      612    10085    3         END;

      613    10086    3         DO CASE( KV$VDH_OTPMRK.DAT.TYP );

  10086   2 000454  B846 0001                            LDR,R3   1,B6
          2 000456  B570 00FF                            AND,R3   255,IMO
          2 000458  3D06                                 CMV,R3   6
          2 000459  0281 006D                            BGE      s:10124,PREL
          2 00045B  A830 0000 0461  02                   LDR,R2   s:10086+13,R3
          2 00045E  83A0 0000 0467  02                   JMP      s:10093,R2
          2 000461       0060                            DC       s:10124,PREL
          2 000462       0000                            DC       s:10093,PREL
          2 000463       000C                            DC       s:10102,PREL
          2 000464       000C                            DC       s:10102,PREL
          2 000465       000C                            DC       s:10102,PREL
          2 000466       0024                            DC       s:10108,PREL

      614    10087    3         CASE(%KV_MRKTYP_SAVLSTRCRID );

      615    10088
      616    10089        /* This marker is for tracking the last successfully-processed
      617    10090           record ID (which is probably symbiont deblocker block and
      618    10091           record number). We simply save the ID if the output was successful.        */
      619    10092
      620    10093    4            IF (KV$VDH_OTPMRK.CMPCOD = 0) THEN DO;

  10093   2 000467  E846 0004                            LDR,R6   4,B6
          2 000469  6981 0066                            BNEZ,R6  s:10128,PREL

PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:91   
      621    10094
      622    10095        /* The record was successfully processed.                                     */
      623    10096
      624    10097    4               %KV_SSN.LSTOTPRCRID = KV$VDH_OTPMRK.DAT.ID;

  10097   2 00046B  8CC6 0002                            LDI      2,B6
          2 00046D  DCC7 0008                            LDB,B5   Y@SSN$,AUTO
          2 00046F  8D45 001C                            SDI      28,B5

      625    10098    4            END;                           /* IF                                 */

  10098   2 000471  0F81 005E                            B        s:10128,PREL

      626    10099    3         CASE(%KV_MRKTYP_SNDLSTRCRID,

      627    10100    3              %KV_MRKTYP_MRK,
      628    10101    3              %KV_MRKTYP_ACK);
      629    10102    3            %KV@SND_MRK = KV_SND_MRK;

  10102   2 000473  AB80 0000 0000  xsym                 LAB,B2   KV_SND_MRK
          2 000476  2C00                                 LDV,R2   0
          2 000477  6C22                                 LDV,R6   34
          2 000478  BB87                                 LAB,B3   ,AUTO
          2 000479  3C1E                                 LDV,R3   30
          2 00047A  0008                                 MMM

      630    10103    3            %KV@SND_MRK.VDH_MRK$ = ADDR(KV$VDH_X);

  10103   2 00047B  EFC7 001E                            STB,B6   FPT+15,AUTO

      631    10104    3            CALL KVM$SND(%KV@SND_MRK);

  10104   2 00047D  DBC7 000F                            LAB,B5   FPT,AUTO
          2 00047F  DFC7 0026                            STB,B5   INPCNDFLG+1,AUTO
          2 000481  BBC7 0026                            LAB,B3   INPCNDFLG+1,AUTO
          2 000483  CBF0 0100                            LAB,B4   256,IMO
          2 000485  E380 0000 0000  xent                 LNJ,B6   KVM$SND
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:92   
          2 000488       0001                            DC       s:10104+12,PREL
          2 000489  0F81 0046                            B        s:10128,PREL

      632    10105    3         CASE (%KV_MRKTYP_REDTIMOUT);

      633    10106
      634    10107        /* Start a read-timout clock.  The prompt has been displayed. */
      635    10108    3            IF NOT %KV_VDI.USRRQSDAT.RED

  10108   2 00048B  DCC7 0006                            LDB,B5   Y@VDI$,AUTO
          2 00048D  82C5 001D                            LB,'0010'X        29,B5
          2 00048F       0010
          2 000490  0581 003F                            BBF      s:10128,PREL
          2 000492  CCC7 0008                            LDB,B4   Y@SSN$,AUTO
          2 000494  E844 001B                            LDR,R6   27,B4
          2 000496  E946 0003                            CMR,R6   3,B6
          2 000498  0981 0037                            BNE      s:10128,PREL

      636    10109    3              OR %KV_SSN.REDTIMOUT.MRKNMB~=KV$VDH_OTPMRK.DAT.ID_WRD(1) THEN EXIT;
      637    10110    3            %KH@CLK = KV_SETCLK;

  10110   2 00049A  AB80 0000 0000  00                   LAB,B2   KVV_MRKTYP
          2 00049D  2C12                                 LDV,R2   18
          2 00049E  6C16                                 LDV,R6   22
          2 00049F  BB87                                 LAB,B3   ,AUTO
          2 0004A0  3C1E                                 LDV,R3   30
          2 0004A1  0008                                 MMM

      638    10111    3            %KH@CLK.UID$ = ADDR(%KV_SSN);

  10111   2 0004A2  DCC7 0008                            LDB,B5   Y@SSN$,AUTO
          2 0004A4  DFC7 0011                            STB,B5   FPT+2,AUTO

      639    10112    3            %KH@CLK.UVAL = %KV_CLKNMB_USRREDTIMOUT;

  10112   2 0004A6  6C02                                 LDV,R6   2
          2 0004A7  EF47 0013                            STR,R6   FPT+4,AUTO
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:93   

      640    10113    3            %KH@CLK.PRDUNT = KV$VDH_OTPMRK.DAT.ID_BYT(0);

  10113   2 0004A9  D2C6 0002                            LLH,R5   2,B6
          2 0004AB  DAC7 0015                            SRM,R5,'00FF'X    FPT+6,AUTO
          2 0004AD       00FF

      641    10114    3            %KH@CLK.PRD = KV$VDH_OTPMRK.DAT.ID_BYT(1);

  10114   2 0004AE  D846 0002                            LDR,R5   2,B6
          2 0004B0  D570 00FF                            AND,R5   255,IMO
          2 0004B2  DF47 0019                            STR,R5   FPT+10,AUTO

      642    10115    4            CALL KHC$CLOCK (FPT) WHENRETURN DO;

  10115   2 0004B4  CBC7 000F                            LAB,B4   FPT,AUTO
          2 0004B6  CFC7 0026                            STB,B4   INPCNDFLG+1,AUTO
          2 0004B8  BBC7 0026                            LAB,B3   INPCNDFLG+1,AUTO
          2 0004BA  CBF0 0100                            LAB,B4   256,IMO
          2 0004BC  E380 0000 0000  xent                 LNJ,B6   KHC$CLOCK
          2 0004BF       0006                            DC       s:10117,PREL

      643    10116    4               %KV_SSN.CLKSET(%KV_CLKNMB_USRREDTIMOUT)='1'B;

  10116   2 0004C0  ECC7 0008                            LDB,B6   Y@SSN$,AUTO
          2 0004C2  8946 0029                            LBT,'0020'X       41,B6
          2 0004C4       0020

      644    10117    4            END;

  10117   2 0004C5  0F81 000A                            B        s:10128,PREL

      645    10118    3         CASE ELSE;

      646    10119        /*S*  SCREECH_CODE: KVV-S$KV_MRKTYP
      647    10120              MESSAGE: VDH got a marker whose type was invalid.
      648    10121        */
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:94   
      649    10122                 %KH$SCREECH(COD=KVV_MRKTYP);

  10124   2 0004C7  BB80 0000 000D  03                   LAB,B3   +13
          2 0004CA  CBF0 0100                            LAB,B4   256,IMO
          2 0004CC  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          2 0004CF       0001                            DC       s:10128,PREL

      650    10126    3         END /* CASE */;

      651    10127
      652    10128    2         KV$PTR$ = P1$;

  10128   2 0004D0  ECC7 000A                            LDB,B6   P1$,AUTO
          2 0004D2  EF80 0000 0000  xsym                 STB,B6   KV$PTR$
          2 0004D5  0F81 0081                            B        s:10188,PREL

      653    10129        /* Perform virtual or physical positioning                                    */
      654    10130
      655    10131    2      CASE(%KV_VDH_FNC_PST );

      656    10132
      657    10133    2         CALL KVO$PST(KV$COPY);

  10133   2 0004D7  BBC7 0004                            LAB,B3   @KV$VDH_X,AUTO
          2 0004D9  CBF0 0100                            LAB,B4   256,IMO
          2 0004DB  E380 0000 0000  xent                 LNJ,B6   KVO$PST
          2 0004DE       0001                            DC       s:10133+8,PREL
          2 0004DF  0F81 0077                            B        s:10188,PREL

      658    10134
      659    10135        /* Request to release a buffer                                                */
      660    10136
      661    10137    2      CASE(%KV_VDH_FNC_RLSBFR );

      662    10138
      663    10139    2         CALL KVS$RLSBFR(KV$COPY);

PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:95   
  10139   2 0004E1  BBC7 0004                            LAB,B3   @KV$VDH_X,AUTO
          2 0004E3  CBF0 0100                            LAB,B4   256,IMO
          2 0004E5  E380 0000 0000  xent                 LNJ,B6   KVS$RLSBFR
          2 0004E8       0001                            DC       s:10139+8,PREL
          2 0004E9  0F81 006D                            B        s:10188,PREL

      664    10140
      665    10141        /* Request data                                                               */
      666    10142
      667    10143    2      CASE(%KV_VDH_FNC_RQSDAT );

      668    10144              %KH$SCREECH(COD=KVV_VDHFNC);

  10146   2 0004EB  BB80 0000 000B  03                   LAB,B3   +11
          2 0004EE  CBF0 0100                            LAB,B4   256,IMO
          2 0004F0  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          2 0004F3       0001                            DC       s:10146+9,PREL
          2 0004F4  0F81 0062                            B        s:10188,PREL

      669    10148
      670    10149        /* Set clock.                                                                 */
      671    10150
      672    10151    2      CASE(%KV_VDH_FNC_SETCLK );

      673    10152    2         %KH@CLK = KV_SETCLK;

  10152   2 0004F6  AB80 0000 0000  00                   LAB,B2   KVV_MRKTYP
          2 0004F9  2C12                                 LDV,R2   18
          2 0004FA  6C16                                 LDV,R6   22
          2 0004FB  BB87                                 LAB,B3   ,AUTO
          2 0004FC  3C1E                                 LDV,R3   30
          2 0004FD  0008                                 MMM

      674    10153    2         %KH@CLK.PRDUNT = KV$VDH_SETCLK.UNT;

  10153   2 0004FE  E806                                 LDR,R6   ,B6
          2 0004FF  EAC7 0015                            SRM,R6,'00FF'X    FPT+6,AUTO
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:96   
          2 000501       00FF

      675    10154    2         %KH@CLK.PRD = KV$VDH_SETCLK.PRD;

  10154   2 000502  E2C6 0001                            LLH,R6   1,B6
          2 000504  EF47 0019                            STR,R6   FPT+10,AUTO

      676    10155    2         %KH@CLK.UVAL = KV$VDH_SETCLK.CLKNMB;

  10155   2 000506  D846 0001                            LDR,R5   1,B6
          2 000508  D570 00FF                            AND,R5   255,IMO
          2 00050A  DF47 0013                            STR,R5   FPT+4,AUTO

      677    10156    2         IF %KH@CLK.UVAL>7 THEN GOTO BAD_CLOCK;

  10156   2 00050C  5D07                                 CMV,R5   7
          2 00050D  0301 0026                            BG       s:10162,PREL

      678    10157    2         IF %KV_SSN.CLKSET(%KH@CLK.UVAL) THEN %KH@CLK.FNC = %KH#CLK_RESET;

  10157   2 00050F  DCC7 0008                            LDB,B5   Y@SSN$,AUTO
          2 000511  CBC5 0029                            LAB,B4   41,B5
          2 000513  B855                                 LDR,R3   R5
          2 000514  3E08                                 ADV,R3   8
          2 000515  82B4                                 LB       ,B4,R3
          2 000516  0581 0005                            BBF      s:10158,PREL

  10157   2 000518  4C04                                 LDV,R4   4
          2 000519  CAC7 0014                            SRM,R4,'00FF'X    FPT+5,AUTO
          2 00051B       00FF

      679    10158    2         %KH@CLK.UID$ = ADDR(%KV_SSN);

  10158   2 00051C  DFC7 0011                            STB,B5   FPT+2,AUTO

      680    10159    3         CALL KHC$CLOCK (FPT) WHENRETURN DO;

PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:97   
  10159   2 00051E  CBC7 000F                            LAB,B4   FPT,AUTO
          2 000520  CFC7 0026                            STB,B4   INPCNDFLG+1,AUTO
          2 000522  BBC7 0026                            LAB,B3   INPCNDFLG+1,AUTO
          2 000524  CBF0 0100                            LAB,B4   256,IMO
          2 000526  E380 0000 0000  xent                 LNJ,B6   KHC$CLOCK
          2 000529       000B                            DC       s:10162,PREL

      681    10160    3            %KV_SSN.CLKSET(%KH@CLK.UVAL) = '1'B;

  10160   2 00052A  ECC7 0008                            LDB,B6   Y@SSN$,AUTO
          2 00052C  DBC6 0029                            LAB,B5   41,B6
          2 00052E  B847 0013                            LDR,R3   FPT+4,AUTO
          2 000530  3E08                                 ADV,R3   8
          2 000531  8935                                 LBT      ,B5,R3

      682    10161    3         END;

  10161   2 000532  0F81 0004                            B        s:10162+3,PREL

      683    10162    3         WHENALTRETURN DO;

      684    10163
      685    10164        /* We can't set the clock.                                                    */
      686    10165
      687    10166    3   BAD_CLOCK: ALTRETURN;

  10166   2 000534  C380 0000 0000  xent BAD_CLOCK       LNJ,B4   X6A_AALT
          2 000537  0F81 001F                            B        s:10188,PREL

      688    10167    3         END;
      689    10168
      690    10169        /* Set parameters                                                             */
      691    10170
      692    10171    2      CASE(%KV_VDH_FNC_SETPRM );

      693    10172
      694    10173    2         CALL KVP$SETPRM(KV$COPY);
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:98   

  10173   2 000539  BBC7 0004                            LAB,B3   @KV$VDH_X,AUTO
          2 00053B  CBF0 0100                            LAB,B4   256,IMO
          2 00053D  E380 0000 0000  xent                 LNJ,B6   KVP$SETPRM
          2 000540       0001                            DC       s:10173+8,PREL
          2 000541  0F81 0015                            B        s:10188,PREL

      695    10174
      696    10175        /* Search for input function                                                  */
      697    10176
      698    10177    2      CASE(%KV_VDH_FNC_SRCINPFNCID );

      699    10178              %KH$SCREECH(COD=KVV_VDHFNC);

  10180   2 000543  BB80 0000 000B  03                   LAB,B3   +11
          2 000546  CBF0 0100                            LAB,B4   256,IMO
          2 000548  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          2 00054B       0001                            DC       s:10180+9,PREL
          2 00054C  0F81 000A                            B        s:10188,PREL

      700    10182    2      CASE(ELSE);

      701    10183              %KH$SCREECH(COD=KVV_VDHFNC);

  10185   2 00054E  BB80 0000 000B  03                   LAB,B3   +11
          2 000551  CBF0 0100                            LAB,B4   256,IMO
          2 000553  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          2 000556       0001                            DC       s:10188,PREL

      702    10187    2      END /* CASE */;

      703    10188    1      RETURN;

  10188   2 000557  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      704    10189        %EJECT;
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:99   
      705    10190        /*I* NAME: Y$INPCHRLOP.
      706    10191             DESCRIPTION: Input character loop. Process all characters passed via the
      707    10192             via the KV$VDH_DAT structure. This may involve the following:
      708    10193
      709    10194             Characters passed directly via KV$VDH_DAT, including
      710    10195             complete processing or buffering in type-ahead buffers.
      711    10196
      712    10197             Processing characters previously saved in type-ahead buffers.  */
      713    10198
      714    10199    1   Y$INPCHRLOP: PROC ALTRET;

  10199   2 00055A  EFC7 0020            Y$INPCHRLOP     STB,B6   FPT+17,AUTO

      715    10200        %G$LOW_MEM (STCLASS="BASED(G$LOW_MEM$)");
      716    10249    2   DCL G$LOW_MEM$ PTR SYMREF READONLY;
      717    10250    2   DCL Y$CHR(0:0) BASED CHAR(1);
      718    10251    2   DCL INPFNCFLG BIT(1);
      719    10252    2   DCL INPCND BIT(32);
      720    10253    2   DCL INPCNDFLG SBIN;
      721    10254
      722    10255        /* Save INPCNDPND in case we clobber it processing typeahead. */
      723    10256
      724    10257    2      INPCNDFLG = 0;                       /* 0=First time,1=in typahd, -1=done  */

  10257   2 00055C  8747 0025                            CL       INPCNDFLG,AUTO

      725    10258    2      INPCND = KV$PTR.INPCNDPND;

  10258   2 00055E  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 000561  8CC5 001B                            LDI      27,B5
          2 000563  8D47 0023                            SDI      INPCND,AUTO

      726    10259    3      DO WHILE ('1'B);                     /* LOOP START                         */

      727    10260
      728    10261        /* This loop is traversed once for each
      729    10262           input character processed.                                                 */
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:100  
      730    10263    3         IF G$LOW_MEM.WDT_CURR<50 THEN ALTRETURN;

  10263   2 000565  EC80 0000 0000  xsym                 LDB,B6   G$LOW_MEM$
          2 000568  E846 0017                            LDR,R6   23,B6
          2 00056A  6D32                                 CMV,R6   50
          2 00056B  0281 0005                            BGE      s:10265,PREL

  10263   2 00056D  ECC7 0020                            LDB,B6   FPT+17,AUTO
          2 00056F  B806                                 LDR,R3   ,B6
          2 000570  C3B6                                 LNJ,B4   ,B6,R3

      731    10264        /* Initialize processing flags for this trip thru the loop.                   */
      732    10265    3         IF NOT %KV_VDI.HALFDUPLEXPAPERTAPE AND NOT %KV_VDI.RE_DSPINP

  10265   2 000571  DCC7 0006                            LDB,B5   Y@VDI$,AUTO
          2 000573  82C5 0019                            LB,'0002'X        25,B5
          2 000575       0002
          2 000576  0501 000D                            BBT      s:10269,PREL
          2 000578  82C5 0019                            LB,'0010'X        25,B5
          2 00057A       0010
          2 00057B  0501 0008                            BBT      s:10269,PREL

      733    10266        /* We're not in half duplex paper tape mode,
      734    10267           and this device operates in character mode.                                */
      735    10268    3         THEN %KV_SSN.INPECH = '1'B;

  10268   2 00057D  CCC7 0008                            LDB,B4   Y@SSN$,AUTO
          2 00057F  8944 0028                            LBT,'0001'X       40,B4
          2 000581       0001
          2 000582  0F81 0006                            B        s:10270,PREL

      736    10269    3         ELSE %KV_SSN.INPECH = '0'B;

  10269   2 000584  CCC7 0008                            LDB,B4   Y@SSN$,AUTO
          2 000586  8844 0028                            LBF,'0001'X       40,B4
          2 000588       0001

PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:101  
      737    10270    3         %KV_SSN.TYPAHD = '0'B;

  10270   2 000589  8844 0027                            LBF,'0030'X       39,B4
  10270   2 00058B       0030

      738    10271    4   PRC:  DO;                               /* GROUP START                        */

  10271   2                              PRC             null
      739    10272        /* This group is exited when the character being processed has
      740    10273           been processed.                                                            */
      741    10274    5            IF %KV_VDI.USRRQSDAT.RED THEN DO;

  10274   2 00058C  82C5 001D            PRC             LB,'0010'X        29,B5
  10274   2 00058E       0010
          2 00058F  0581 009C                            BBF      s:10342,PREL

      742    10275
      743    10276        /* There is an enabled read. do read processing.                              */
      744    10277    5               P1$ = %KV_SSN.TYPAHDBFRHED$;

  10277   2 000591  BCC4 000A                            LDB,B3   10,B4
          2 000593  BFC7 000A                            STB,B3   P1$,AUTO

      745    10278    6               IF KV$TYPAHDBFR.CHRX_HI>=KV$TYPAHDBFR.CHRX THEN DO;

  10278   2 000595  E843 0002                            LDR,R6   2,B3
          2 000597  E570 00FF                            AND,R6   255,IMO
          2 000599  D843 0002                            LDR,R5   2,B3
          2 00059B  5048                                 SOR,R5   8
          2 00059C  D570 007F                            AND,R5   127,IMO
          2 00059E  E955                                 CMR,R6   R5
          2 00059F  0801 0087                            BAL      s:10337,PREL

      746    10279
      747    10280        /* There is type-ahead.                                                       */
      748    10281    7                  IF INPCNDFLG=0 THEN DO;

PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:102  
  10281   2 0005A1  C847 0025                            LDR,R4   INPCNDFLG,AUTO
          2 0005A3  4981 000B                            BNEZ,R4  s:10287,PREL

      749    10282        /* First character for the read, there's no INPCND except TRN. */
      750    10283
      751    10284    7                     INPCNDFLG = 1;

  10284   2 0005A5  4C01                                 LDV,R4   1
          2 0005A6  CF47 0025                            STR,R4   INPCNDFLG,AUTO

      752    10285    7                     KV$PTR.INPCNDPND = %KV_SSN.TYPCND;

  10285   2 0005A8  8CC4 0039                            LDI      57,B4
          2 0005AA  AC80 0000 0000  xsym                 LDB,B2   KV$PTR$
          2 0005AD  8D42 001B                            SDI      27,B2

      753    10286    7                  END;

      754    10287    6                  INPFNCFLG = KV$TYPAHDBFR.INPFNCTXT;

  10287   2 0005AF  E843 0002                            LDR,R6   2,B3
          2 0005B1  E570 8000                            AND,R6   -32768,IMO
          2 0005B3  EF47 0022                            STR,R6   INPFNCFLG,AUTO

      755    10288    6                  %KV_SSN.INPCHR = KV$TYPAHDBFR_CHR(KV$TYPAHDBFR.CHRX);

  10288   2 0005B5  B843 0002                            LDR,R3   2,B3
          2 0005B7  3048                                 SOR,R3   8
          2 0005B8  B570 007F                            AND,R3   127,IMO
          2 0005BA  D0B3                                 LDH,R5   ,B3,R3
          2 0005BB  D7C4 0029                            STH,R5   41,B4

      756    10289    7                  IF KV$TYPAHDBFR.CHRX>=KV$TYPAHDBFR.CHRX_HI THEN DO;

  10289   2 0005BD  E843 0002                            LDR,R6   2,B3
          2 0005BF  6048                                 SOR,R6   8
          2 0005C0  E570 007F                            AND,R6   127,IMO
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:103  
          2 0005C2  B843 0002                            LDR,R3   2,B3
          2 0005C4  B570 00FF                            AND,R3   255,IMO
          2 0005C6  E953                                 CMR,R6   R3
          2 0005C7  0801 0044                            BAL      s:10319,PREL

      757    10290
      758    10291        /* This is the last character in this buffer.                                 */
      759    10292    8                     IF KV$TYPAHDBFR.LNK$~=ADDR(NIL) THEN DO;

  10292   2 0005C9  8D83                                 CMN      ,B3
          2 0005CA  0901 002D                            BE       s:10310,PREL

      760    10293        /* The link in this buffer isn't addr(nil). release the buffer.
             10293        */
      761    10294    8                        %KV_SSN.TYPAHDBFRHED$ = KV$TYPAHDBFR.LNK$;

  10294   2 0005CC  AC83                                 LDB,B2   ,B3
          2 0005CD  AFC4 000A                            STB,B2   10,B4

      762    10295    8                        IF P1$=%KV_SSN.TYPAHDBFRINS$

  10295   2 0005CF  BDC4 000E                            CMB,B3   14,B4
          2 0005D1  0981 0004                            BNE      s:10300,PREL

      763    10296
      764    10297        /* The type-ahead buffer insert pointer pointed into the buffer
      765    10298           we're releasing. advance it to the next buffer also.                       */
      766    10299    8                        THEN %KV_SSN.TYPAHDBFRINS$ = KV$TYPAHDBFR.LNK$;

  10299   2 0005D3  9C83                                 LDB,B1   ,B3
          2 0005D4  9FC4 000E                            STB,B1   14,B4

      767    10300    8                        %KV_SSN.TYPAHDBFRCNT = %KV_SSN.TYPAHDBFRCNT-1;

  10300   2 0005D6  E2C4 0027                            LLH,R6   39,B4
          2 0005D8  6EFF                                 ADV,R6   -1
          2 0005D9  E7C4 0027                            STH,R6   39,B4
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:104  

      768    10301    8                        %VDH_RLSBFR = KV_VDH_RLSBFR;

  10301   2 0005DB  AB80 0000 0000  xsym                 LAB,B2   KV_VDH_RLSBFR
          2 0005DE  2C00                                 LDV,R2   0
          2 0005DF  6C0E                                 LDV,R6   14
          2 0005E0  BB87                                 LAB,B3   ,AUTO
          2 0005E1  3C1E                                 LDV,R3   30
          2 0005E2  0008                                 MMM

      769    10302    8                        %VDH_RLSBFR.BFR$ = P1$;

  10302   2 0005E3  DCC7 000A                            LDB,B5   P1$,AUTO
          2 0005E5  DFC7 0010                            STB,B5   FPT+1,AUTO

      770    10303    8                        %VDH_RLSBFR.STRTYP = %KV_STRTYP_TYPAHDBFR;

  10303   2 0005E7  6C19                                 LDV,R6   25
          2 0005E8  E7C7 0015                            STH,R6   FPT+6,AUTO

      771    10304    8                        CALL KVS$RLSBFR(FPT);

  10304   2 0005EA  CBC7 000F                            LAB,B4   FPT,AUTO
          2 0005EC  CFC7 0026                            STB,B4   INPCNDFLG+1,AUTO
          2 0005EE  BBC7 0026                            LAB,B3   INPCNDFLG+1,AUTO
          2 0005F0  CBF0 0100                            LAB,B4   256,IMO
          2 0005F2  E380 0000 0000  xent                 LNJ,B6   KVS$RLSBFR
          2 0005F5       0001                            DC       s:10305,PREL

      772    10305    8                     END; ELSE DO;

  10305   2 0005F6  0F81 001C                            B        s:10325,PREL

      773    10306
      774    10307        /* The link in this buffer is addr(nil)* in the chain. don't release it,
      775    10308           just re-initialize it to be empty,  after clearing any input function
      776    10309           pointer into the type ahead buffer chain.    */
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:105  
      777    10310    8                        %KV_SSN.TYPAHDBFRINPFNC$ = ADDR(NIL);

  10310   2 0005F8  AB80 0000 0000                       LAB,B2   0
          2 0005FB  AFC4 000C                            STB,B2   12,B4

      778    10311    8                        %KV_SSN.TYPCND.NOT_TRN = '0'B;

  10311   2 0005FD  8844 0039                            LBF,'7FFF'X       57,B4
  10311   2 0005FF       7FFF

      779    10312    8                        KV$TYPAHDBFR = KV_TYPAHDBFR;

  10312   2 000600  AB80 0000 0000  xsym                 LAB,B2   KV_TYPAHDBFR
          2 000603  2C00                                 LDV,R2   0
          2 000604  6C06                                 LDV,R6   6
          2 000605  3C00                                 LDV,R3   0
          2 000606  0008                                 MMM

      780    10313        /* INPCNDPND is accurate now. Don't muck with it anymore. */
      781    10314    8                        INPCNDFLG = -1;

  10314   2 000607  8947 0025                            LBT,'FFFF'X       INPCNDFLG,AUTO
  10314   2 000609       FFFF

      782    10315    8                     END;                  /* IF                                 */

      783    10316    7                  END; ELSE DO;

  10316   2 00060A  0F81 0008                            B        s:10325,PREL

      784    10317
      785    10318        /* This isn't the last character in this buffer.                              */
      786    10319    7                     KV$TYPAHDBFR.CHRX = KV$TYPAHDBFR.CHRX+1;

  10319   2 00060C  A843 0002                            LDR,R2   2,B3
          2 00060E  AA70 0100                            ADD,R2   256,IMO
          2 000610  AAC3 0002                            SRM,R2,'7F00'X    2,B3
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:106  
          2 000612       7F00

      787    10320    7                  END;                     /* IF                                 */

      788    10321
      789    10322        /* If the buffer that the current character came from was
      790    10323           created by an input function, don't translate the character,
      791    10324           or allow user input function processing on it.                             */
      792    10325    6                  IF INPFNCFLG THEN CALL KVI$INPCHR_INPFNCIMD;

  10325   2 000613  89C7 0022                            CMZ      INPFNCFLG,AUTO
          2 000615  0881 0009                            BAGE     s:10329,PREL

  10325   2 000617  CBF0 0000                            LAB,B4   0,IMO
          2 000619  E380 0000 0000  xent                 LNJ,B6   KVI$INPCHR_INPFNCIMD
          2 00061C       0001                            DC       s:10325+10,PREL
          2 00061D  0F81 0007                            B        s:10332,PREL

      793    10326
      794    10327        /* Otherwise, the character was copied directly from the input buffer,
      795    10328           so do full character processing on it, except "immediate" functions.          */
      796    10329    6                  ELSE CALL KVI$INPCHR_TYPAHD;

  10329   2 00061F  CBF0 0000                            LAB,B4   0,IMO
          2 000621  E380 0000 0000  xent                 LNJ,B6   KVI$INPCHR_TYPAHD
          2 000624       0001                            DC       s:10332,PREL

      797    10330
      798    10331        /* We're done processing this character.                                      */
      799    10332    6                  EXIT PRC;

  10332   2 000625  0F81 010B                            B        s:10455,PREL

      800    10333    6               END;
      801    10334
      802    10335        /* There is no type-ahead. we are doing immediate processing,
      803    10336           and read processing.                                                       */
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:107  
      804    10337    5               INPCNDFLG = -1;             /* We're in sync now.                 */

  10337   2 000627  8947 0025                            LBT,'FFFF'X       INPCNDFLG,AUTO
  10337   2 000629       FFFF

      805    10338    5            END; ELSE DO;

  10338   2 00062A  0F81 0011                            B        s:10350,PREL

      806    10339
      807    10340        /* There is no enabled read. do immediate character
      808    10341           processing only.                                                           */
      809    10342    6               IF INPCNDFLG>=0 THEN DO;

  10342   2 00062C  E847 0025                            LDR,R6   INPCNDFLG,AUTO
          2 00062E  6801 000D                            BLZ,R6   s:10350,PREL

      810    10343        /* The read finished; if the typahead didnt, restore INPCNDPND. */
      811    10344    6                  IF INPCNDFLG>0 THEN KV$PTR.INPCNDPND = INPCND;

  10344   2 000630  6A81 0008                            BLEZ,R6  s:10345,PREL

  10344   2 000632  8CC7 0023                            LDI      INPCND,AUTO
          2 000634  BC80 0000 0000  xsym                 LDB,B3   KV$PTR$
          2 000637  8D43 001B                            SDI      27,B3

      812    10345    6                  INPCNDFLG = -1;

  10345   2 000639  8947 0025                            LBT,'FFFF'X       INPCNDFLG,AUTO
  10345   2 00063B       FFFF

      813    10346    6               END;

      814    10347    5            END;                           /* IF                                 */

      815    10348
      816    10349        /* We're not processing type-ahead.                                           */
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:108  
      817    10350    5            IF KV$VDH_DAT.DAT__.DATBYTSIZ~=0 THEN DO;

  10350   2 00063C  BCC7 0004                            LDB,B3   @KV$VDH_X,AUTO
          2 00063E  E843 0004                            LDR,R6   4,B3
          2 000640  6901 00EC                            BEZ,R6   s:10453,PREL

      818    10351
      819    10352        /* There is more data in the buffer. Process a character.      */
      820    10353
      821    10354    5               %KV_SSN.INPCHR = KV$VDH_DAT.DAT__.ADR$->

  10354   2 000642  ACC3 0001                            LDB,B2   1,B3
          2 000644  B843 0003                            LDR,R3   3,B3
          2 000646  D0B2                                 LDH,R5   ,B2,R3
          2 000647  D7C4 0029                            STH,R5   41,B4

      822    10355    5                 Y$CHR(KV$VDH_DAT.DAT__.BYTX);
      823    10356    5               IF KV$VDH_DAT.CNTFNCCHRS

  10356   2 000649  8283                                 LB,'0080'X        ,B3
  10356   2 00064A       0080
          2 00064B  0581 000E                            BBF      s:10359,PREL

      824    10357    5               THEN IF KV$PTR.INPCNDPND.ESC

  10357   2 00064D  AC80 0000 0000  xsym                 LDB,B2   KV$PTR$
          2 000650  82C2 001B                            LB,'00FF'X        27,B2
          2 000652       00FF
          2 000653  0581 0006                            BBF      s:10359,PREL

      825    10358    5               THEN KV$VDH_DAT.CMPCOD = KV$VDH_DAT.CMPCOD+1;

  10358   2 000655  E2C3 0007                            LLH,R6   7,B3
          2 000657  6E01                                 ADV,R6   1
          2 000658  E7C3 0007                            STH,R6   7,B3

      826    10359    5               KV$VDH_DAT.DAT__.DATBYTSIZ = KV$VDH_DAT.DAT__.DATBYTSIZ-1;
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:109  

  10359   2 00065A  88C3 0004                            DEC      4,B3

      827    10360    5               KV$VDH_DAT.DAT__.BYTX = KV$VDH_DAT.DAT__.BYTX+1;

  10360   2 00065C  8AC3 0003                            INC      3,B3

      828    10361    5               INPFNCFLG = %KV_SSN.NO_WATREDTRG; /* Remember what it was         */

  10361   2 00065E  E844 0028                            LDR,R6   40,B4
          2 000660  600D                                 SOL,R6   13
          2 000661  E570 8000                            AND,R6   -32768,IMO
          2 000663  EF47 0022                            STR,R6   INPFNCFLG,AUTO

      829    10362
      830    10363        /* For transparent reads, use a fast routine to bypass the translation. */
      831    10364
      832    10365    5               IF KV$PTR.INPCNDFLG.BITS='8000'X

  10365   2 000665  AC80 0000 0000  xsym                 LDB,B2   KV$PTR$
          2 000668  D842 001B                            LDR,R5   27,B2
          2 00066A  D970 8000                            CMR,R5   -32768,IMO
          2 00066C  0981 0011                            BNE      s:10370,PREL

      833    10366    5               THEN CALL KVQ$CPYDAT (KV$PTR, KV$VDH_DAT)

  10366   2 00066E  BFC7 0028                            STB,B3   INPCNDFLG+3,AUTO
          2 000670  AFC7 0026                            STB,B2   INPCNDFLG+1,AUTO
          2 000672  BBC7 0026                            LAB,B3   INPCNDFLG+1,AUTO
          2 000674  CBF0 0200                            LAB,B4   512,IMO
          2 000676  E380 0000 0000  xent                 LNJ,B6   KVQ$CPYDAT
          2 000679       0005                            DC       s:10370,PREL

      834    10367    6               WHENRETURN DO;         /* If it copied all the input, we're done  */

      835    10368    6                  RETURN;

PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:110  
  10368   2 00067A  ECC7 0020                            LDB,B6   FPT+17,AUTO
          2 00067C  C3C6 0001                            LNJ,B4   1,B6

      836    10369    6               END;
      837    10370    5               CALL KVI$INPCHR;

  10370   2 00067E  CBF0 0000                            LAB,B4   0,IMO
          2 000680  E380 0000 0000  xent                 LNJ,B6   KVI$INPCHR
          2 000683       0001                            DC       s:10371,PREL

      838    10371    6               IF NOT %KV_VDI.USRRQSDAT.RED AND %KV_SSN.TYPAHD THEN DO;

  10371   2 000684  ECC7 0006                            LDB,B6   Y@VDI$,AUTO
          2 000686  82C6 001D                            LB,'0010'X        29,B6
          2 000688       0010
          2 000689  0501 0090                            BBT      s:10445,PREL
          2 00068B  DCC7 0008                            LDB,B5   Y@SSN$,AUTO
          2 00068D  82C5 0027                            LB,'0030'X        39,B5
          2 00068F       0030
          2 000690  0581 0089                            BBF      s:10445,PREL

      839    10372
      840    10373        /* We're not doing read processing, and character processing
      841    10374           determined that this character should be retained for read
      842    10375           processing, at least until the need is more clearly established.           */
      843    10376    6                  P1$ = %KV_SSN.TYPAHDBFRINS$;

  10376   2 000692  CCC5 000E                            LDB,B4   14,B5
          2 000694  CFC7 000A                            STB,B4   P1$,AUTO

      844    10377    6                  IF KV$TYPAHDBFR.CHRX_HI>=%KV_TYPAHDBFR_CHRX_HI

  10377   2 000696  E844 0002                            LDR,R6   2,B4
          2 000698  E570 00FF                            AND,R6   255,IMO
          2 00069A  6D1F                                 CMV,R6   31
          2 00069B  0201 004F                            BL       s:10415,PREL

PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:111  
      845    10378    6                  THEN IF %KV_SSN.TYPAHDBFRCNT>=KV_TYPAHDBFRLMT THEN EXIT;

  10378   2 00069D  D2C5 0027                            LLH,R5   39,B5
          2 00069F  D900 0000 0000  xsym                 CMR,R5   KV_TYPAHDBFRLMT
          2 0006A2  0281 0077                            BGE      s:10445,PREL

      846    10379        /* If we already have enough typeahead, only process Immed functions. */
      847    10380    7                  ELSE DO;

      848    10381
      849    10382        /* The current insert type-ahead buffer is full. go on to the
      850    10383           next in the chain, or get another.                                         */
      851    10384    8                     IF KV$TYPAHDBFR.LNK$~=ADDR(NIL) THEN DO;

  10384   2 0006A4  8D84                                 CMN      ,B4
          2 0006A5  0901 0012                            BE       s:10396,PREL

      852    10385
      853    10386        /* The current insert buffer isn't the last in the chain.
      854    10387           go on to the next.                                                         */
      855    10388    8                        P1$ = KV$TYPAHDBFR.LNK$;

  10388   2 0006A7  BC84                                 LDB,B3   ,B4
          2 0006A8  BFC7 000A                            STB,B3   P1$,AUTO

      856    10389    8                        KV$TYPAHDBFR.INPFNCTXT = '0'B;

  10389   2 0006AA  8843 0002                            LBF,'8000'X       2,B3
  10389   2 0006AC       8000

      857    10390    8                        KV$TYPAHDBFR.CHRX = SIZEC(KV$TYPAHDBFR);

  10390   2 0006AD  E870 0600                            LDR,R6   1536,IMO
          2 0006AF  EAC3 0002                            SRM,R6,'7F00'X    2,B3
          2 0006B1       7F00

      858    10391    8                        KV$TYPAHDBFR.CHRX_HI = SIZEC(KV$TYPAHDBFR)-1;
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:112  

  10391   2 0006B2  5C05                                 LDV,R5   5
          2 0006B3  DAC3 0002                            SRM,R5,'00FF'X    2,B3
          2 0006B5       00FF

      859    10392    8                     END; ELSE DO;

  10392   2 0006B6  0F81 002E                            B        s:10411,PREL

      860    10393
      861    10394        /* The current insert buffer is the last in the chain. get
      862    10395           another buffer, and q it onto the current insert (tail).                   */
      863    10396    8                        %VDH_GETBFR = KV_VDH_GETBFR;

  10396   2 0006B8  AB80 0000 0000  xsym                 LAB,B2   KV_VDH_GETBFR
          2 0006BB  2C00                                 LDV,R2   0
          2 0006BC  6C16                                 LDV,R6   22
          2 0006BD  BB87                                 LAB,B3   ,AUTO
          2 0006BE  3C1E                                 LDV,R3   30
          2 0006BF  0008                                 MMM

      864    10397    8                        %VDH_GETBFR.STRTYP = %KV_STRTYP_TYPAHDBFR;

  10397   2 0006C0  6C19                                 LDV,R6   25
          2 0006C1  E7C7 0015                            STH,R6   FPT+6,AUTO

      865    10398    9                        CALL KVS$GETBFR(FPT) WHENRETURN DO;

  10398   2 0006C3  EBC7 000F                            LAB,B6   FPT,AUTO
          2 0006C5  EFC7 0026                            STB,B6   INPCNDFLG+1,AUTO
          2 0006C7  BBC7 0026                            LAB,B3   INPCNDFLG+1,AUTO
          2 0006C9  CBF0 0100                            LAB,B4   256,IMO
          2 0006CB  E380 0000 0000  xent                 LNJ,B6   KVS$GETBFR
          2 0006CE       0013                            DC       s:10408,PREL

      866    10399
      867    10400        /* We got a buffer.                                                           */
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:113  
      868    10401    9                           KV$TYPAHDBFR.LNK$ = %VDH_GETBFR.BFR$;

  10401   2 0006CF  ECC7 0010                            LDB,B6   FPT+1,AUTO
          2 0006D1  DCC7 000A                            LDB,B5   P1$,AUTO
          2 0006D3  EF85                                 STB,B6   ,B5

      869    10402    9                           %KV_SSN.TYPAHDBFRCNT = %KV_SSN.TYPAHDBFRCNT+1;

  10402   2 0006D4  CCC7 0008                            LDB,B4   Y@SSN$,AUTO
          2 0006D6  E2C4 0027                            LLH,R6   39,B4
          2 0006D8  6E01                                 ADV,R6   1
          2 0006D9  E7C4 0027                            STH,R6   39,B4

      870    10403    9                           P1$ = %VDH_GETBFR.BFR$;

  10403   2 0006DB  ECC7 0010                            LDB,B6   FPT+1,AUTO
          2 0006DD  EFC7 000A                            STB,B6   P1$,AUTO

      871    10404    9                        END; WHENALTRETURN DO;

  10404   2 0006DF  0F81 0005                            B        s:10411,PREL

      872    10405
      873    10406        /* We didn't get a buffer.                                                    */
      874    10407        /*n* throw in lost-data code.                                                 */
      875    10408    9                           RETURN;

  10408   2 0006E1  ECC7 0020                            LDB,B6   FPT+17,AUTO
          2 0006E3  C3C6 0001                            LNJ,B4   1,B6

      876    10409    9                        END;
      877    10410    8                     END;                  /* IF                                 */

      878    10411    7                     %KV_SSN.TYPAHDBFRINS$ = P1$;

  10411   2 0006E5  ECC7 000A                            LDB,B6   P1$,AUTO
          2 0006E7  DCC7 0008                            LDB,B5   Y@SSN$,AUTO
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:114  
          2 0006E9  EFC5 000E                            STB,B6   14,B5

      879    10412    7                  END;

      880    10413
      881    10414        /* The current type-ahead insert buffer isn't full.                           */
      882    10415    6                  KV$TYPAHDBFR.CHRX_HI = KV$TYPAHDBFR.CHRX_HI+1;

  10415   2 0006EB  ECC7 000A                            LDB,B6   P1$,AUTO
          2 0006ED  E846 0002                            LDR,R6   2,B6
          2 0006EF  EA70 0001                            ADD,R6   1,IMO
          2 0006F1  EAC6 0002                            SRM,R6,'00FF'X    2,B6
          2 0006F3       00FF

      883    10416    6                  KV$TYPAHDBFR_CHR(KV$TYPAHDBFR.CHRX_HI) = %KV_SSN.INPCHR;

  10416   2 0006F4  B846 0002                            LDR,R3   2,B6
          2 0006F6  B570 00FF                            AND,R3   255,IMO
          2 0006F8  E0C5 0029                            LDH,R6   41,B5
          2 0006FA  E7B6                                 STH,R6   ,B6,R3

      884    10417    6                  IF %KV_SSN.TYPAHD.BFRCHR

  10417   2 0006FB  82C5 0027                            LB,'0020'X        39,B5
  10417   2 0006FD       0020
          2 0006FE  0581 0008                            BBF      s:10434,PREL

      885    10418
      886    10419        /* KV$SSN.TYPAHD.BFRCHR and KV$SSN.TYPAHD.BFRINPFNCCHR.
      887    10420           this character completes an input function invocation
      888    10421           that needs to be buffered for read processing.
      889    10422
      890    10423           Examples: double INPCTRSTRCHR_INT, ESC-R, and BS.
      891    10424           not ESC-Q.
      892    10425
      893    10426           -- or --
      894    10427
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:115  
      895    10428           KV$SSN.TYPAHD.BFRCHR and not KV$SSN.TYPAHD.BFRINPFNCCHR.
      896    10429           This character is a simple character that has no input
      897    10430           function significance.                                                     */
      898    10431    7                  THEN DO;

      899    10432    7                     %KV_SSN.TYPAHDBFRINPFNC$ = ADDR(NIL);

  10432   2 000700  CB80 0000 0000                       LAB,B4   0
          2 000703  CFC5 000C                            STB,B4   12,B5

      900    10433    7                  END;

  10433   2 000705  0F81 0014                            B        s:10445,PREL

      901    10434    6                  ELSE IF %KV_SSN.TYPAHD.BFRINPFNCCHR

  10434   2 000707  82C5 0027                            LB,'0010'X        39,B5
  10434   2 000709       0010
          2 00070A  0581 000F                            BBF      s:10445,PREL
          2 00070C  8DC5 000C                            CMN      12,B5
          2 00070E  0981 000B                            BNE      s:10445,PREL

      902    10435
      903    10436        /* This character is part (but not the last part) of a
      904    10437           string that invokes an input function. we don't yet know
      905    10438           if we need to leave it in the buffer for later read
      906    10439           processing, so leave it for now. E.g., the ESC in ESC-R.            */
      907    10440    7                    AND %KV_SSN.TYPAHDBFRINPFNC$=ADDR(NIL) THEN DO;

      908    10441    7                     %KV_SSN.TYPAHDBFRINPFNC$ = P1$;

  10441   2 000710  EFC5 000C                            STB,B6   12,B5

      909    10442    7                     %KV_SSN.TYPAHDBFRINPFNCX = KV$TYPAHDBFR.CHRX_HI-1;

  10442   2 000712  E846 0002                            LDR,R6   2,B6
          2 000714  E570 00FF                            AND,R6   255,IMO
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:116  
          2 000716  6EFF                                 ADV,R6   -1
          2 000717  EAC5 0026                            SRM,R6,'00FF'X    38,B5
          2 000719       00FF

      910    10443    7                  END;                     /* IF                                 */

      911    10444    6               END;

      912    10445    6               IF %KV_SSN.NO_WATREDTRG AND NOT INPFNCFLG THEN DO;

  10445   2 00071A  ECC7 0008                            LDB,B6   Y@SSN$,AUTO
          2 00071C  82C6 0028                            LB,'0004'X        40,B6
          2 00071E       0004
          2 00071F  0581 0011                            BBF      s:10455,PREL
          2 000721  89C7 0022                            CMZ      INPFNCFLG,AUTO
          2 000723  0801 000D                            BAL      s:10455,PREL

      913    10446
      914    10447        /* There is a delayed read request to be enabled, and it's
      915    10448           ok to enable it.                                                           */
      916    10449    6                  CALL KVI$ENBNO_WATRED;

  10449   2 000725  CBF0 0000                            LAB,B4   0,IMO
          2 000727  E380 0000 0000  xent                 LNJ,B6   KVI$ENBNO_WATRED
          2 00072A       0001                            DC       s:10451,PREL

      917    10450    6               END;                        /* IF                                 */

      918    10451    5            END;                           /* IF                                 */

  10451   2 00072B  0F81 0005                            B        s:10455,PREL

      919    10452        /* There are no characters left to process, so don't.  */
      920    10453    4            ELSE RETURN;

  10453   2 00072D  ECC7 0020                            LDB,B6   FPT+17,AUTO
          2 00072F  C3C6 0001                            LNJ,B4   1,B6
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:117  

      921    10454    4         END PRC;
      922    10455    3         Y@SSN$ = KV$PTR.SSN$; /* An input function might have changed it on us  */

  10455   2 000731  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 000734  DCC6 0002                            LDB,B5   2,B6
          2 000736  DFC7 0008                            STB,B5   Y@SSN$,AUTO

      923    10456        /* We dont need to do it right after the call to KVI$INPCHR, because if
      924    10457          if did something, it isn't going to need saving in TYPAHD, usefully, anyway */
      925    10458    3      END /* LOOP */;

  10458   2 000738  0F81 FE2C                            B        s:10263,PREL

      926    10459    2   END; /* SUBROUTINE */
      927    10460        %KV$BOX(PAGE = YES, TITLE = "Do VDH tracing");
             10468        %IF '1'B;

PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:118  
             10470        %ELSE;
             10471 C      %SPACE %SPACEVALUE;
             10472        %ENDIF;
             10478    2   /***************************************************************************
             10479    2    *                                                                         *
             10480    2    *                               Do VDH tracing                            *
             10481    2    *                                                                         *
             10482    2    ***************************************************************************/

      928    10487    1   Y$TRC: PROC;

  10487   2 00073A  EFC7 0020            Y$TRC           STB,B6   FPT+17,AUTO

      929    10488    3      IF Y@TRCENT = (Y$TRCBFR.TRCENT(Y$TRCBFR.TRCENTX) & %KV#TRCENT_MSK) THEN DO;

  10488   2 00073C  DCC7 000D                            LDB,B5   Y@TRCBFR$,AUTO
          2 00073E  B845 0001                            LDR,R3   1,B5
          2 000740  BF47 0026                            STR,R3   INPCNDFLG+1,AUTO
          2 000742  3E02                                 ADV,R3   2
          2 000743  B847 0026                            LDR,R3   INPCNDFLG+1,AUTO
          2 000745  3E02                                 ADV,R3   2
          2 000746  E835                                 LDR,R6   ,B5,R3
          2 000747  E570 7FFF                            AND,R6   32767,IMO
          2 000749  D847 000C                            LDR,R5   Y@TRCENT,AUTO
          2 00074B  D956                                 CMR,R5   R6
          2 00074C  0981 0008                            BNE      s:10501,PREL

      930    10489        /*
      931    10490        The last trace entry is identical to the entry we're about
      932    10491        to put in, with the possible exception of the multiple
      933    10492        entry bit.  Just set the multiple entry bit, and don't add
      934    10493        another entry.
      935    10494        */
      936    10495    3         Y$TRCBFR.TRCENT.MLT(Y$TRCBFR.TRCENTX) = '1'B;

  10495   2 00074E  A845 0001                            LDR,R2   1,B5
          2 000750  2004                                 SOL,R2   4
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:119  
          2 000751  2E20                                 ADV,R2   32
          2 000752  8925                                 LBT      ,B5,R2

      937    10496    3      END; ELSE DO;

  10496   2 000753  0F81 000E                            B        s:10507,PREL

      938    10497        /*
      939    10498        The last entry isn't identical to the entry we're about to
      940    10499        add.  Add another entry, possibly wrapping the index first.
      941    10500        */
      942    10501    3         Y$TRCBFR.TRCENTX = Y$TRCBFR.TRCENTX + 1;

  10501   2 000755  8AC5 0001                            INC      1,B5

      943    10502    3         IF Y$TRCBFR.TRCENTX > Y$TRCBFR.MAXTRCENTX THEN

  10502   2 000757  E845 0001                            LDR,R6   1,B5
          2 000759  E905                                 CMR,R6   ,B5
          2 00075A  0A81 0003                            BALE     s:10505,PREL

      944    10503    3         Y$TRCBFR.TRCENTX = 0;

  10503   2 00075C  8745 0001                            CL       1,B5

      945    10504
      946    10505    3         Y$TRCBFR.TRCENT(Y$TRCBFR.TRCENTX) = Y@TRCENT;

  10505   2 00075E  A845 0001                            LDR,R2   1,B5
          2 000760  2E02                                 ADV,R2   2
          2 000761  DF25                                 STR,R5   ,B5,R2

      947    10506    3      END; /* END ELSE IF TRCENTX = MAXTRCENTX */

      948    10507    2   END Y$TRC;

  10507   2 000762  ECC7 0020                            LDB,B6   FPT+17,AUTO
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:120  
          2 000764  C3C6 0001                            LNJ,B4   1,B6

      949    10508
      950    10509        %EJECT;
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:121  
      951    10510    1   KVV$INT: ENTRY(KV$VDH_X) ALTRET;

  10510   2 000766  D380 0000 0000  xent KVV$INT         LNJ,B5   X6A_AUTO_1
          2 000769       002A 0001                       DC       42,1

      952    10511        /*F* NAME: KVV$INT
      953    10512             DESCRIPTION:
      954    10513             This routine handles the initial connection from an RDH to VDH
      955    10514             for a device. It will allocate an KV$VDI block for the user and
      956    10515             fill in the approiate defaults. All parameters are passed in a
      957    10516             structure KV$VDH_INT.                                                    */
      958    10517
      959    10518
      960    10519
      961    10520        /* Be sure the pointer to the KV$PTR structure is null,
      962    10521           so nobody tries to use it during KV$VDH_INT.                               */
      963    10522
      964    10523    1      KV$PTR$ = ADDR(NIL);

  10523   2 00076B  EB80 0000 0000                       LAB,B6   0
          2 00076E  EF80 0000 0000  xsym                 STB,B6   KV$PTR$

      965    10524
      966    10525        /* Get a buffer for the KV$VDI context                                        */
      967    10526
      968    10527    1      %VDH_GETBFR = KV_VDH_GETBFR;

  10527   2 000771  AB80 0000 0000  xsym                 LAB,B2   KV_VDH_GETBFR
          2 000774  2C00                                 LDV,R2   0
          2 000775  6C16                                 LDV,R6   22
          2 000776  BB87                                 LAB,B3   ,AUTO
          2 000777  3C1E                                 LDV,R3   30
          2 000778  0008                                 MMM

      969    10528    1      %VDH_GETBFR.STT$ = KV$VDH_INT.USRPRM$->KV$USRPRM.STT$;

  10528   2 000779  ECC7 0004                            LDB,B6   @KV$VDH_X,AUTO
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:122  
          2 00077B  DCC6 0007                            LDB,B5   7,B6
          2 00077D  CCC5 0033                            LDB,B4   51,B5
          2 00077F  CFC7 0013                            STB,B4   FPT+4,AUTO

      970    10529    1      %VDH_GETBFR.STRTYP = %KV_STRTYP_VDI;

  10529   2 000781  6C1D                                 LDV,R6   29
          2 000782  E7C7 0015                            STH,R6   FPT+6,AUTO

      971    10530    1      CALL KVS$GETBFR(FPT)

  10530   2 000784  DBC7 000F                            LAB,B5   FPT,AUTO
          2 000786  DFC7 0026                            STB,B5   INPCNDFLG+1,AUTO
          2 000788  BBC7 0026                            LAB,B3   INPCNDFLG+1,AUTO
          2 00078A  CBF0 0100                            LAB,B4   256,IMO
          2 00078C  E380 0000 0000  xent                 LNJ,B6   KVS$GETBFR
          2 00078F       0003                            DC       s:10535,PREL
          2 000790  0F81 0004                            B        s:10540,PREL

      972    10531
      973    10532        /* Check if an error was encountered                                          */
      974    10533
      975    10534    2      WHENALTRETURN DO;

      976    10535    2         ALTRETURN;

  10535   2 000792  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      977    10536    2      END; /* IF */
      978    10537
      979    10538        /* Pass back the address of KV$VDI                                            */
      980    10539
      981    10540    1      KV$VDH_INT.VDI$ = %VDH_GETBFR.BFR$;

  10540   2 000795  ECC7 0010                            LDB,B6   FPT+1,AUTO
          2 000797  DCC7 0004                            LDB,B5   @KV$VDH_X,AUTO
          2 000799  EFC5 0005                            STB,B6   5,B5
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:123  

      982    10541
      983    10542        /* Get the KV$PTR for this KV$VDI                                             */
      984    10543
      985    10544    1      %VDH_GETBFR.STRTYP = %KV_STRTYP_PTR;

  10544   2 00079B  6C10                                 LDV,R6   16
          2 00079C  E7C7 0015                            STH,R6   FPT+6,AUTO

      986    10545    1      CALL KVS$GETBFR(FPT)

  10545   2 00079E  EBC7 000F                            LAB,B6   FPT,AUTO
          2 0007A0  EFC7 0026                            STB,B6   INPCNDFLG+1,AUTO
          2 0007A2  BBC7 0026                            LAB,B3   INPCNDFLG+1,AUTO
          2 0007A4  CBF0 0100                            LAB,B4   256,IMO
          2 0007A6  E380 0000 0000  xent                 LNJ,B6   KVS$GETBFR
          2 0007A9       0003                            DC       s:10550,PREL
          2 0007AA  0F81 0027                            B        s:10560,PREL

      987    10546
      988    10547        /* Check if an error occured                                                  */
      989    10548
      990    10549    2      WHENALTRETURN DO;

      991    10550    2         %VDH_RLSBFR = KV_VDH_RLSBFR;

  10550   2 0007AC  AB80 0000 0000  xsym                 LAB,B2   KV_VDH_RLSBFR
          2 0007AF  2C00                                 LDV,R2   0
          2 0007B0  6C0E                                 LDV,R6   14
          2 0007B1  BB87                                 LAB,B3   ,AUTO
          2 0007B2  3C1E                                 LDV,R3   30
          2 0007B3  0008                                 MMM

      992    10551    2         %VDH_RLSBFR.STT$ = KV$VDH_INT.USRPRM$->KV$USRPRM.STT$;

  10551   2 0007B4  ECC7 0004                            LDB,B6   @KV$VDH_X,AUTO
          2 0007B6  DCC6 0007                            LDB,B5   7,B6
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:124  
          2 0007B8  CCC5 0033                            LDB,B4   51,B5
          2 0007BA  CFC7 0013                            STB,B4   FPT+4,AUTO

      993    10552    2         %VDH_RLSBFR.STRTYP = %KV_STRTYP_VDI;

  10552   2 0007BC  6C1D                                 LDV,R6   29
          2 0007BD  E7C7 0015                            STH,R6   FPT+6,AUTO

      994    10553    2         %VDH_RLSBFR.BFR$ = KV$VDH_INT.VDI$;

  10553   2 0007BF  DCC6 0005                            LDB,B5   5,B6
          2 0007C1  DFC7 0010                            STB,B5   FPT+1,AUTO

      995    10554    2         CALL KVS$RLSBFR(FPT);

  10554   2 0007C3  ABC7 000F                            LAB,B2   FPT,AUTO
          2 0007C5  AFC7 0026                            STB,B2   INPCNDFLG+1,AUTO
          2 0007C7  BBC7 0026                            LAB,B3   INPCNDFLG+1,AUTO
          2 0007C9  CBF0 0100                            LAB,B4   256,IMO
          2 0007CB  E380 0000 0000  xent                 LNJ,B6   KVS$RLSBFR
          2 0007CE       0001                            DC       s:10555,PREL

      996    10555    2         ALTRETURN;

  10555   2 0007CF  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      997    10556    2      END; /* IF */
      998    10557
      999    10558        /* Initialize KV$PTR                                                          */
     1000    10559
     1001    10560    1      KV$PTR$ = %VDH_GETBFR.BFR$;

  10560   2 0007D2  ECC7 0010                            LDB,B6   FPT+1,AUTO
          2 0007D4  EF80 0000 0000  xsym                 STB,B6   KV$PTR$

     1002    10561    1      Y@VDI$ = KV$VDH_INT.VDI$;

PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:125  
  10561   2 0007D7  DCC7 0004                            LDB,B5   @KV$VDH_X,AUTO
          2 0007D9  CCC5 0005                            LDB,B4   5,B5
          2 0007DB  CFC7 0006                            STB,B4   Y@VDI$,AUTO

     1003    10562    1      KV$PTR.VDI$ = Y@VDI$;

  10562   2 0007DD  CF86                                 STB,B4   ,B6

     1004    10563
     1005    10564        /* Initialize KV$VDI                                                          */
     1006    10565
     1007    10566    1      %KV_VDI.CHN$ = KV$VDH_INT.CHN$;

  10566   2 0007DE  ECC5 0001                            LDB,B6   1,B5
          2 0007E0  EF84                                 STB,B6   ,B4

     1008    10567    1      %KV_VDI.USRCTX$ = KV$VDH_INT.USRCTX$;

  10567   2 0007E1  BCC5 0003                            LDB,B3   3,B5
          2 0007E3  BFC4 0002                            STB,B3   2,B4

     1009    10568    1      %KV_VDI.USRPRM$ = KV$VDH_INT.USRPRM$;

  10568   2 0007E5  ACC5 0007                            LDB,B2   7,B5
          2 0007E7  AFC4 0008                            STB,B2   8,B4

     1010    10569    1      %KV_VDI.RCVFLWCTRMAXCRD = KV$VDH_INT.RCVFLWCTRMAXCRD;

  10569   2 0007E9  E845 0009                            LDR,R6   9,B5
          2 0007EB  EF44 0017                            STR,R6   23,B4

     1011    10570    1      %KV_VDI.RCVFLWCTRMINCRDINC = KV$VDH_INT.RCVFLWCTRMAXCRD/4;

  10570   2 0007ED  D845 0009                            LDR,R5   9,B5
          2 0007EF  5042                                 SOR,R5   2
          2 0007F0  DF44 001B                            STR,R5   27,B4

PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:126  
     1012    10571    1      %KV_VDI.SHRTRCBFR = KV$VDH_INT.SHRTRCBFR;

  10571   2 0007F2  C805                                 LDR,R4   ,B5
          2 0007F3  4045                                 SOR,R4   5
          2 0007F4  CAC4 001D                            SRM,R4,'0002'X    29,B4
          2 0007F6       0002

     1013    10572    1      %KV_VDI.ASNINPPTR$ = KV$PTR$;

  10572   2 0007F7  9C80 0000 0000  xsym                 LDB,B1   KV$PTR$
          2 0007FA  9FC4 0006                            STB,B1   6,B4

     1014    10573
     1015    10574        /* Get the trace buffer, if requested. */
     1016    10575
     1017    10576    2      IF KV$VDH_INT.TRCBFRBYTSIZ > 8 THEN DO;

  10576   2 0007FC  C845 000A                            LDR,R4   10,B5
          2 0007FE  4D08                                 CMV,R4   8
          2 0007FF  0381 0023                            BLE      s:10594,PREL

     1018    10577    2         %VDH_GETBFR.BYTSIZ = KV$VDH_INT.TRCBFRBYTSIZ;

  10577   2 000801  CF47 0012                            STR,R4   FPT+3,AUTO

     1019    10578    2         %VDH_GETBFR.STRTYP = %KV_STRTYP_TRCBFR;

  10578   2 000803  3C21                                 LDV,R3   33
          2 000804  B7C7 0015                            STH,R3   FPT+6,AUTO

     1020    10579    2         CALL KVS$GETBFR(FPT)

  10579   2 000806  EBC7 000F                            LAB,B6   FPT,AUTO
          2 000808  EFC7 0026                            STB,B6   INPCNDFLG+1,AUTO
          2 00080A  BBC7 0026                            LAB,B3   INPCNDFLG+1,AUTO
          2 00080C  CBF0 0100                            LAB,B4   256,IMO
          2 00080E  E380 0000 0000  xent                 LNJ,B6   KVS$GETBFR
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:127  
          2 000811       0012                            DC       s:10594,PREL

     1021    10580    3         WHENRETURN DO;

     1022    10581
     1023    10582        /* We got the trace buffer.  Initialize it. */
     1024    10583
     1025    10584    3            %KV_VDI.TRCBFR$ = %VDH_GETBFR.BFR$;

  10584   2 000812  ECC7 0010                            LDB,B6   FPT+1,AUTO
          2 000814  DCC7 0006                            LDB,B5   Y@VDI$,AUTO
          2 000816  EFC5 0012                            STB,B6   18,B5

     1026    10585    3            %KV_VDI.TRCBFRBYTSIZ = %VDH_GETBFR.BYTSIZ;

  10585   2 000818  E847 0012                            LDR,R6   FPT+3,AUTO
          2 00081A  EF45 0014                            STR,R6   20,B5

     1027    10586    3            %VDH_GETBFR.BFR$->KV$TRCBFR.MAXTRCENTX =

  10586   2 00081C  6041                                 SOR,R6   1
          2 00081D  6EFD                                 ADV,R6   -3
          2 00081E  EF06                                 STR,R6   ,B6

     1028    10587    3              (%VDH_GETBFR.BYTSIZ/2-SIZEW(KV$TRCBFR))/SIZEW(KV$TRCENT);
     1029    10588    3            %VDH_GETBFR.BFR$->KV$TRCBFR.TRCENTX = 0;

  10588   2 00081F  ECC7 0010                            LDB,B6   FPT+1,AUTO
          2 000821  8746 0001                            CL       1,B6

     1030    10589    3         END;                              /* END WHENRETURN                     */

     1031    10590    2      END; /* END IF TRCBFRBYTSIZ > 8 */

     1032    10591
     1033    10592        /* Return to caller                                                           */
     1034    10593
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:128  
     1035    10594    1      %KV_VDI.VDHEVTENB(%KV_VDH_EVT_ID_RLSVDI) = '1'B;

  10594   2 000823  ECC7 0006                            LDB,B6   Y@VDI$,AUTO
          2 000825  8946 001F                            LBT,'0002'X       31,B6
          2 000827       0002

     1036    10595
     1037    10596    1      RETURN;

  10596   2 000828  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1038    10597
     1039    10598        %EJECT;
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:129  
     1040    10599        /* Gather a few stats, do a trace and enter the user                          */
     1041    10600
     1042    10601    1   KVV$CALUSR: ENTRY(KV$VDH_X) ALTRET;

  10601   2 00082B  D380 0000 0000  xent KVV$CALUSR      LNJ,B5   X6A_AUTO_1
          2 00082E       002A 0001                       DC       42,1

     1043    10602
     1044    10603    1      Y@VDI$ = KV$PTR.VDI$;

  10603   2 000830  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 000833  DC86                                 LDB,B5   ,B6
          2 000834  DFC7 0006                            STB,B5   Y@VDI$,AUTO

     1045    10604    1      %KV_STT.VDIUSRFNCCNT(KV$USR_PST.FNC) =

  10604   2 000836  CCC5 0008                            LDB,B4   8,B5
          2 000838  BCC4 0033                            LDB,B3   51,B4
          2 00083A  ACC7 0004                            LDB,B2   @KV$VDH_X,AUTO
          2 00083C  B282                                 LLH,R3   ,B2
          2 00083D  9BC3 01E0                            LAB,B1   480,B3
          2 00083F  EBC3 01E0                            LAB,B6   480,B3
          2 000841  8CB1                                 LDI      ,B1,R3
          2 000842  8470 0000 0001                       AID      1,IMO
          2 000845  8D36                                 SDI      ,B6,R3

     1046    10605    1        %KV_STT.VDIUSRFNCCNT(KV$USR_PST.FNC) +1;
     1047    10606           %KH$CALTRC (CND=USR, USRTST="KV_TRCUSRFNC(KV$USR_PST.FNC)",
     1048    10607           COD=%KV#TRC_COD_CALUSR, BFR1$=KV$VDH_X, BFR1_BYTSIZ=32);

     1049    10642
     1050    10643    1      Y@TRCBFR$ = %KV_VDI.TRCBFR$;

  10643   2 000846  ECC5 0012                            LDB,B6   18,B5
          2 000848  EFC7 000D                            STB,B6   Y@TRCBFR$,AUTO

     1051    10644    2      IF Y@TRCBFR$~=ADDR(NIL) THEN DO;
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:130  

  10644   2 00084A  8DC7 000D                            CMN      Y@TRCBFR$,AUTO
          2 00084C  0901 000D                            BE       s:10653,PREL

     1052    10645        /*
     1053    10646        The VDH trace buffer does exist.  Do VDH tracing.
     1054    10647        */
     1055    10648    2         Y@TRCENT = Y_TRCENT_USRVDI;

  10648   2 00084E  E800 0000 0017  00                   LDR,R6   Y_TRCENT_USRVDI
          2 000851  EF47 000C                            STR,R6   Y@TRCENT,AUTO

     1056    10649    2         Y@TRCENT.FNC = KV$USR_PST.FNC;

  10649   2 000853  D282                                 LLH,R5   ,B2
          2 000854  DAC7 000C                            SRM,R5,'00FF'X    Y@TRCENT,AUTO
          2 000856       00FF

     1057    10650    2         CALL Y$TRC;

  10650   2 000857  E3C0 FEE2                            LNJ,B6   s:0,PREL
          2 000859       0001                            DC       s:10653,PREL

     1058    10651    2      END; /* END IF TRCBFR$ ~= NIL */

     1059    10652
     1060    10653    2      DO CASE( KV$USR_PST.FNC );

  10653   2 00085A  ECC7 0004                            LDB,B6   @KV$VDH_X,AUTO
          2 00085C  B286                                 LLH,R3   ,B6
          2 00085D  3D0F                                 CMV,R3   15
          2 00085E  0281 006B                            BGE      s:10677,PREL
          2 000860  A830 0000 0866  02                   LDR,R2   s:10653+12,R3
          2 000863  83A0 0000 0875  02                   JMP      s:10655,R2
          2 000866       0055                            DC       s:10677,PREL
          2 000867       0055                            DC       s:10677,PREL
          2 000868       0055                            DC       s:10677,PREL
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:131  
          2 000869       0000                            DC       s:10655,PREL
          2 00086A       0055                            DC       s:10677,PREL
          2 00086B       0055                            DC       s:10677,PREL
          2 00086C       0055                            DC       s:10677,PREL
          2 00086D       0055                            DC       s:10677,PREL
          2 00086E       0055                            DC       s:10677,PREL
          2 00086F       0055                            DC       s:10677,PREL
          2 000870       0048                            DC       s:10675,PREL
          2 000871       0055                            DC       s:10677,PREL
          2 000872       0014                            DC       s:10662,PREL
          2 000873       0055                            DC       s:10677,PREL
          2 000874       002C                            DC       s:10670,PREL

     1061    10654    2      CASE(%KV_USR_FNC_ERS );

     1062    10655    2         IF %KV_MRD.CALUSR_ERS THEN GOTO Y_CALUSR;

  10655   2 000875  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 000878  CCC5 0008                            LDB,B4   8,B5
          2 00087A  82C4 000C                            LB,'0080'X        12,B4
          2 00087C       0080
          2 00087D  0501 004C                            BBT      s:10677,PREL

     1063    10656
     1064    10657        /* We're not to call the VDH-user for erase - call the VDH routine.           */
     1065    10658
     1066    10659    2         CALL KVO$ERS(KV$COPY);

  10659   2 00087F  BBC7 0004                            LAB,B3   @KV$VDH_X,AUTO
          2 000881  CBF0 0100                            LAB,B4   256,IMO
          2 000883  E380 0000 0000  xent                 LNJ,B6   KVO$ERS
          2 000886       0001                            DC       s:10659+8,PREL
          2 000887  0F81 0053                            B        s:10683,PREL

     1067    10660    2      CASE(%KV_USR_FNC_PST );

     1068    10661        /* Clear any "position-pending" status so it doesn't get in the way */
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:132  
     1069    10662    2         %KV_VDI.OTPCNDPND.PST = 0;

  10662   2 000889  DCC7 0006                            LDB,B5   Y@VDI$,AUTO
          2 00088B  8745 001A                            CL       26,B5

     1070    10663
     1071    10664    2         IF %KV_MRD.CALUSR_PST THEN GOTO Y_CALUSR;

  10664   2 00088D  CC80 0000 0000  xsym                 LDB,B4   KV$PTR$
          2 000890  BCC4 0008                            LDB,B3   8,B4
          2 000892  82C3 000C                            LB,'0040'X        12,B3
          2 000894       0040
          2 000895  0501 0034                            BBT      s:10677,PREL

     1072    10665
     1073    10666        /* We're not to call the VDH-user for position - call the VDH routine.        */
     1074    10667
     1075    10668    2         CALL KVO$GNRPST(KV$COPY);

  10668   2 000897  BBC7 0004                            LAB,B3   @KV$VDH_X,AUTO
          2 000899  CBF0 0100                            LAB,B4   256,IMO
          2 00089B  E380 0000 0000  xent                 LNJ,B6   KVO$GNRPST
          2 00089E       0001                            DC       s:10668+8,PREL
          2 00089F  0F81 003B                            B        s:10683,PREL

     1076    10669    2      CASE(%KV_USR_FNC_SETATR );

     1077    10670    2         %KV_MRD.DVCATR = KV$USR_SETATR.GRPRND;

  10670   2 0008A1  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 0008A4  CCC5 0008                            LDB,B4   8,B5
          2 0008A6  E846 0003                            LDR,R6   3,B6
          2 0008A8  6008                                 SOL,R6   8
          2 0008A9  6048                                 SOR,R6   8
          2 0008AA  E7C4 001F                            STH,R6   31,B4

     1078    10671    2         IF %KV_MRD.CALUSR_SETATR THEN GOTO Y_CALUSR;
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:133  

  10671   2 0008AC  CCC5 0008                            LDB,B4   8,B5
          2 0008AE  82C4 000C                            LB,'0020'X        12,B4
          2 0008B0       0020
          2 0008B1  0501 0018                            BBT      s:10677,PREL

     1079    10672
     1080    10673    2         CALL KVO$SETATR(KV$COPY);

  10673   2 0008B3  BBC7 0004                            LAB,B3   @KV$VDH_X,AUTO
          2 0008B5  CBF0 0100                            LAB,B4   256,IMO
          2 0008B7  E380 0000 0000  xent                 LNJ,B6   KVO$SETATR
          2 0008BA       0001                            DC       s:10673+8,PREL
          2 0008BB  0F81 001F                            B        s:10683,PREL

     1081    10674    2      CASE(%KV_USR_FNC_OTPMRK);

     1082    10675    2         KV$USR_OTPMRK.DAT.SSNID = KV$PTR.SSN$->KV$SSN.SSNID;

  10675   2 0008BD  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 0008C0  CCC5 0002                            LDB,B4   2,B5
          2 0008C2  E2C4 0037                            LLH,R6   55,B4
          2 0008C4  6008                                 SOL,R6   8
          2 0008C5  EAC6 0001                            SRM,R6,'7F00'X    1,B6
          2 0008C7       7F00

     1083    10676    2         GOTO Y_CALUSR;

  10676   2 0008C8  0F81 0001                            B        s:10677,PREL

     1084    10677    2      CASE(ELSE);

  10676   2                              Y_CALUSR        null
     1085    10678    2   Y_CALUSR:;
     1086    10679    2         CALL %KV_USRPRM.USRSBR$(KV$COPY)

  10679   2 0008CA  DCC7 0006            Y_CALUSR        LDB,B5   Y@VDI$,AUTO
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:134  
          2 0008CC  CCC5 0008                            LDB,B4   8,B5
          2 0008CE  BBC7 0004                            LAB,B3   @KV$VDH_X,AUTO
          2 0008D0  9CC4 0035                            LDB,B1   53,B4
          2 0008D2  CBF0 0100                            LAB,B4   256,IMO
          2 0008D4  E381                                 LNJ,B6   ,B1
          2 0008D5       0003                            DC       s:10680,PREL
          2 0008D6  0F81 0004                            B        s:10683,PREL

     1087    10680    3         WHENALTRETURN DO; ALTRETURN; END;

  10680   2 0008D8  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

     1088    10681    2      END /* CASE */;

     1089    10682
     1090    10683    1      RETURN;

  10683   2 0008DB  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1091    10684
     1092    10685        %EJECT;
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:135  
     1093    10686        /* Gather a few stats, do a trace and enter the user                          */
     1094    10687
     1095    10688    1   KVV$CALUSR_EVT: ENTRY(KV$VDH_X) ALTRET;

  10688   2 0008DE  D380 0000 0000  xent KVV$CALUSR_EVT  LNJ,B5   X6A_AUTO_1
          2 0008E1       002A 0001                       DC       42,1

     1096    10689
     1097    10690    1      %USR_EVT = KV$USR_EVT;

  10690   2 0008E3  ECC7 0004                            LDB,B6   @KV$VDH_X,AUTO
          2 0008E5  8C86                                 LDI      ,B6
          2 0008E6  8D47 000F                            SDI      FPT,AUTO

     1098    10691    2      IF %USR_EVT.FNC = 0 THEN DO;

  10691   2 0008E8  D2C7 000F                            LLH,R5   FPT,AUTO
          2 0008EA  5981 0006                            BNEZ,R5  s:10696,PREL

     1099    10692        /* The call has no FPT, just a UBIN event number */
     1100    10693    2         %USR_EVT.FNC = %KV_USR_FNC_EVT;

  10693   2 0008EC  4C04                                 LDV,R4   4
          2 0008ED  C7C7 000F                            STH,R4   FPT,AUTO

     1101    10694    2         %USR_EVT.PRM = 0;

  10694   2 0008EF  8747 0010                            CL       FPT+1,AUTO

     1102    10695    2      END;

     1103    10696    1      Y@VDI$ = KV$PTR.VDI$;

  10696   2 0008F1  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 0008F4  CC85                                 LDB,B4   ,B5
          2 0008F5  CFC7 0006                            STB,B4   Y@VDI$,AUTO

PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:136  
     1104    10697    1      %KV_STT.VDIUSRFNCCNT(%KV_USR_FNC_EVT) =

  10697   2 0008F7  BCC4 0008                            LDB,B3   8,B4
          2 0008F9  ACC3 0033                            LDB,B2   51,B3
          2 0008FB  8AC2 01E9                            INC      489,B2
          2 0008FD  8EC2 01E8                            CAD      488,B2

     1105    10698    1        %KV_STT.VDIUSRFNCCNT(%KV_USR_FNC_EVT) +1;
     1106    10699    1      %KV_STT.VDIUSREVTCNT(%USR_EVT.ID) =

  10699   2 0008FF  BCC4 0008                            LDB,B3   8,B4
          2 000901  ACC3 0033                            LDB,B2   51,B3
          2 000903  B847 000F                            LDR,R3   FPT,AUTO
          2 000905  B570 007F                            AND,R3   127,IMO
          2 000907  9BC2 020A                            LAB,B1   522,B2
          2 000909  EBC2 020A                            LAB,B6   522,B2
          2 00090B  8CB1                                 LDI      ,B1,R3
          2 00090C  8470 0000 0001                       AID      1,IMO
          2 00090F  8D36                                 SDI      ,B6,R3

     1107    10700    1        %KV_STT.VDIUSREVTCNT(%USR_EVT.ID) +1;
     1108    10701
     1109    10702           %KH$CALTRC (CND=USR, USRTST="KV_TRCUSREVT(KV$USR_EVT.ID)",
     1110    10703           COD=%KV#TRC_COD_CALUSR, BFR1$=KV$VDH_X, BFR1_BYTSIZ=32);

     1111    10738
     1112    10739    1      Y@TRCBFR$ = %KV_VDI.TRCBFR$;

  10739   2 000910  ECC4 0012                            LDB,B6   18,B4
          2 000912  EFC7 000D                            STB,B6   Y@TRCBFR$,AUTO

     1113    10740    2      IF Y@TRCBFR$~=ADDR(NIL) THEN DO;

  10740   2 000914  8DC7 000D                            CMN      Y@TRCBFR$,AUTO
          2 000916  0901 0011                            BE       s:10749,PREL

     1114    10741        /*
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:137  
     1115    10742        The VDH trace buffer does exist.  Do VDH tracing.
     1116    10743        */
     1117    10744    2         Y@TRCENT = Y_TRCENT_USRVDIEVT;

  10744   2 000918  E800 0000 0019  00                   LDR,R6   Y_TRCENT_USRVDIEVT
          2 00091B  EF47 000C                            STR,R6   Y@TRCENT,AUTO

     1118    10745    2         Y@TRCENT.FNC = KV$USR_EVT.ID;

  10745   2 00091D  DCC7 0004                            LDB,B5   @KV$VDH_X,AUTO
          2 00091F  D805                                 LDR,R5   ,B5
          2 000920  D570 007F                            AND,R5   127,IMO
          2 000922  DAC7 000C                            SRM,R5,'00FF'X    Y@TRCENT,AUTO
          2 000924       00FF

     1119    10746    2         CALL Y$TRC;

  10746   2 000925  E3C0 FE14                            LNJ,B6   s:0,PREL
          2 000927       0001                            DC       s:10749,PREL

     1120    10747    2      END; /* END IF TRCBFR$ ~= NIL */

     1121    10748
     1122    10749    1      CALL %KV_USRPRM.USRSBR$(FPT)

  10749   2 000928  ECC7 0006                            LDB,B6   Y@VDI$,AUTO
          2 00092A  DCC6 0008                            LDB,B5   8,B6
          2 00092C  CBC7 000F                            LAB,B4   FPT,AUTO
          2 00092E  CFC7 0026                            STB,B4   INPCNDFLG+1,AUTO
          2 000930  BBC7 0026                            LAB,B3   INPCNDFLG+1,AUTO
          2 000932  9CC5 0035                            LDB,B1   53,B5
          2 000934  CBF0 0100                            LAB,B4   256,IMO
          2 000936  E381                                 LNJ,B6   ,B1
          2 000937       0004                            DC       s:10756,PREL

     1123    10750    2      WHENRETURN DO;

PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:138  
     1124    10751    2         %USR_EVT.ACT = '1'B;

  10751   2 000938  8947 000F                            LBT,'0080'X       FPT,AUTO
  10751   2 00093A       0080

     1125    10752    2      END;

     1126    10753
     1127    10754        /* Do event specific items. */
     1128    10755
     1129    10756    2      DO SELECT (%USR_EVT.ID);

  10756   2 00093B  E847 000F                            LDR,R6   FPT,AUTO
          2 00093D  E570 007F                            AND,R6   127,IMO
          2 00093F  6D03                                 CMV,R6   3
          2 000940  0981 003C                            BNE      s:10777,PREL
          2 000942  0F81 0001                            B        s:10760,PREL

     1130    10757    2         SELECT (%KV_USR_EVT_ID_DLTOTP);

     1131    10758        /* Delete output. See if VDH has some output pending. */
     1132    10759
     1133    10760    3         IF %KV_VDI.OTPCNDPND OR %USR_EVT.ACT THEN DO;

  10760   2 000944  ECC7 0006                            LDB,B6   Y@VDI$,AUTO
          2 000946  D846 001A                            LDR,R5   26,B6
          2 000948  5981 0006                            BNEZ,R5  s:10761,PREL
          2 00094A  82C7 000F                            LB,'0080'X        FPT,AUTO
          2 00094C       0080
          2 00094D  0581 002F                            BBF      s:10777,PREL

     1134    10761    3            %KV_VDI.OTPCNDPND = '0'B;

  10761   2 00094F  8746 001A                            CL       26,B6

     1135    10762    3            %KV_VDI.UN_KNWPST = '1'B;

PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:139  
  10762   2 000951  8946 001D                            LBT,'1000'X       29,B6
  10762   2 000953       1000

     1136    10763    3            %KV_VDI.PRG.OTP = '1'B;

  10763   2 000954  8946 0018                            LBT,'0400'X       24,B6
  10763   2 000956       0400

     1137    10764    3            P1$ = %KV_MRD.SRD$;

  10764   2 000957  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 00095A  CCC5 0008                            LDB,B4   8,B5
          2 00095C  BCC4 0002                            LDB,B3   2,B4
          2 00095E  BFC7 000A                            STB,B3   P1$,AUTO

     1138    10765
     1139    10766        /* Mark all the SRDs lost position */
     1140    10767
     1141    10768    4            DO WHILE P1$~=ADDR(NIL);

  10768   2 000960  0F81 000E                            B        s:10772,PREL

     1142    10769    4               P1$->KV$SRD.CRT.CLM = P1$->KV$SRD.TOPLFT.CLM;

  10769   2 000962  ECC7 000A                            LDB,B6   P1$,AUTO
          2 000964  E846 000A                            LDR,R6   10,B6
          2 000966  EF46 0016                            STR,R6   22,B6

     1143    10770    4               P1$->KV$SRD.UNKPST = '1'B;

  10770   2 000968  8946 001C                            LBT,'4000'X       28,B6
  10770   2 00096A       4000

     1144    10771    4               P1$ = P1$->KV$SRD.LNK$;

  10771   2 00096B  DCC6 0002                            LDB,B5   2,B6
          2 00096D  DFC7 000A                            STB,B5   P1$,AUTO
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:140  

     1145    10772    4            END;

  10772   2 00096F  8DC7 000A                            CMN      P1$,AUTO
          2 000971  09F1                                 BNE      s:10769,SPREL

     1146    10773    3            %KV_MRD.DVCCLM = 1;

  10773   2 000972  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 000975  DCC6 0008                            LDB,B5   8,B6
          2 000977  6C01                                 LDV,R6   1
          2 000978  EF45 001E                            STR,R6   30,B5

     1147    10774    3            RETURN;

  10774   2 00097A  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1148    10775    3         END;
     1149    10776    2      END /* SELECT */;

     1150    10777    1      IF NOT %USR_EVT.ACT THEN ALTRETURN;

  10777   2 00097D  82C7 000F                            LB,'0080'X        FPT,AUTO
  10777   2 00097F       0080
          2 000980  0501 0004                            BBT      s:10779,PREL

  10777   2 000982  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

     1151    10778
     1152    10779    1      RETURN;

  10779   2 000985  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1153    10780        %EJECT;
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:141  
     1154    10781    1   KVV$CALUSR_PST: ENTRY ALTRET;

  10781   2 000988  D380 0000 0000  xent KVV$CALUSR_PST  LNJ,B5   X6A_AUTO_1
          2 00098B       002A 0001                       DC       42,1

     1155    10782        /* Entry point to perform the same function as CMPOTP, but no FPT */
     1156    10783    1      Y@VDI$ = KV$PTR.VDI$;

  10783   2 00098D  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 000990  DC86                                 LDB,B5   ,B6
          2 000991  DFC7 0006                            STB,B5   Y@VDI$,AUTO

     1157    10784    1      Y@TRCBFR$ = %KV_VDI.TRCBFR$;

  10784   2 000993  CCC5 0012                            LDB,B4   18,B5
          2 000995  CFC7 000D                            STB,B4   Y@TRCBFR$,AUTO

     1158    10785        /* Y@SSN$ = KV$PTR.SSN$;  SSN isn't used for this function */
     1159    10786    1      GOTO CMPOTP;

  10786   2 000997  0F81 F95F                            B        s:9943,PREL
     1160    10787    1   END /* SUBROUTINE */;
     1161    10788        %EOD;

PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:142  
--  Include file information  --

   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KV_SCODE_C.:E05TOU  is referenced.
   KV_INT_M.:E05TOU  is referenced.
   KV$PRM.:E05TOU  is referenced.
   KV$INPFNC.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KH_TRC_M.:E05TOU  is referenced.
   KH_TRC.:E05TOU  is referenced.
   KH_SCREECH_M.:E05TOU  is referenced.
   KH_CLKFNC_E.:E05TOU  is referenced.
   KH$TRC.:E05TOU  is referenced.
   KH$CLK.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is referenced.
   KV$VDH.:E05TOU  was found in the system file and is referenced.
   KV$USR.:E05TOU  was found in the system file and is referenced.
   KV$SND.:E05TOU  was found in the system file and is referenced.
   KV$INT.:E05TOU  was found in the system file and is referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KVV$VDI.
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:143  

 **** Variables and constants ****

  ****  Section 000 RoData KVV$VDI

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(48)    r     1 KVV_MRKTYP                 6-0-0/w STRC(48)    r     1 KVV_VDHEVT
     3-0-0/w STRC(48)    r     1 KVV_VDHFNC                 9-0-0/w STRC(176)   r     1 KV_SETCLK
    14-0-0/b BIT         r     1 KV_VDHFNCOK_NO_SSN(0:19)
    17-0-0/w STRC(16)    r     1 Y_TRCENT_USRVDI           19-0-0/w STRC(16)    r     1 Y_TRCENT_USRVDIEVT
    1A-0-0/w STRC(16)    r     1 Y_TRCENT_USRVDIPST        16-0-0/w STRC(16)    r     1 Y_TRCENT_VDHVDI
    18-0-0/w STRC(16)    r     1 Y_TRCENT_VDHVDIEVT

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @KV$VDH_X                  F-0-0/w UBIN(16)    r     1 FPT(0:16)
    23-0-0/b BIT (32)    r     1 INPCND                    25-0-0/w SBIN(16)    r     1 INPCNDFLG
    22-0-0/b BIT         r     1 INPFNCFLG                 *0-0-0/w UBIN(16)    r     1 KV$COPY
    *0-0-0/w STRC(32)    r     1 KV$USR_EVT                *0-0-0/w STRC(64)    r     1 KV$USR_OTPMRK
    *0-0-0/w STRC(64)    r     1 KV$USR_PST                *0-0-0/w STRC(64)    r     1 KV$USR_SETATR
    *0-0-0/w STRC(128)   r     1 KV$VDH_DAT                *0-0-0/w STRC(64)    r     1 KV$VDH_DCLLCLPST
    *0-0-0/w STRC(32)    r     1 KV$VDH_EVT                *0-0-0/w STRC(176)   r     1 KV$VDH_INT
    *0-0-0/w STRC(80)    r     1 KV$VDH_OTPMRK             *0-0-0/w STRC(32)    r     1 KV$VDH_SETCLK
    *0-0-0/w ACHR        r     1 KV$VDH_X                   A-0-0/w PTR         r     1 P1$
     8-0-0/w PTR         r     1 Y@SSN$                     D-0-0/w PTR         r     1 Y@TRCBFR$
     C-0-0/w STRC(16)    r     1 Y@TRCENT                   6-0-0/w PTR         r     1 Y@VDI$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 G$LOW_MEM$                 0-0-0/w PTR         r     1 KV$PTR$
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:144  
     0-0-0/w PTR         r     1 KV_RCVSSN$                 0-0-0/w STRC(256)   r     1 KV_SND_EVT_BRK
     0-0-0/w STRC(256)   r     1 KV_SND_EVT_MNTATN          0-0-0/w STRC(272)   r     1 KV_SND_MRK
     0-0-0/w STRC(240)   r     1 KV_SND_RQSDAT_GNR          0-0-0/w STRC(240)   r     1 KV_SND_SCHLCLSSN
     0-0-0/w STRC(48)    r     1 KV_TYPAHDBFR               0-0-0/w UBIN(16)    r     1 KV_TYPAHDBFRLMT
     0-0-0/w STRC(64)    r     1 KV_USR_PST                 0-0-0/w STRC(96)    r     1 KV_USR_RQSDAT
     0-0-0/w STRC(176)   r     1 KV_VDH_GETBFR              0-0-0/w STRC(64)    r     1 KV_VDH_PST_ABS
     0-0-0/w STRC(112)   r     1 KV_VDH_RLSBFR

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(4096)  r     1 G$LOW_MEM                  0-0-0/w STRC(176)   r     1 KH@CLK
     0-0-0/w STRC(512)   r     1 KV$MRD                     0-0-0/w STRC(512)   r     1 KV$MVD
     0-0-0/w STRC(480)   r     1 KV$PTR                     0-0-0/w STRC(496)   r     1 KV$SRD
     0-0-0/w STRC(1024)  r     1 KV$SSN                     0-0-0/w STRC(512)   r     1 KV$STR
     0-0-0/w STRC(8960)  r     1 KV$STT                     0-0-0/w STRC(48)    r     1 KV$TRCBFR
     0-0-0/w STRC(16)    r     1 KV$TRCENT                  0-0-0/w STRC(499)   r     1 KV$TRNTBL
     0-0-0/w STRC(48)    r     1 KV$TYPAHDBFR
     0-0-0/w CHAR        r     1 KV$TYPAHDBFR_CHR(0:5)
     0-0-0/w STRC(912)   r     1 KV$USRPRM                  0-0-0/w STRC(512)   r     1 KV$VDI
     0-0-0/w STRC(272)   r     1 KV@SND_MRK                 0-0-0/w STRC(32)    r     1 USR_EVT
     0-0-0/w STRC(64)    r     1 USR_PST                    0-0-0/w STRC(96)    r     1 USR_RQSDAT
     0-0-0/w STRC(128)   r     1 VDH_DAT                    0-0-0/w STRC(176)   r     1 VDH_GETBFR
     0-0-0/w STRC(64)    r     1 VDH_PST                    0-0-0/w STRC(112)   r     1 VDH_RLSBFR
     0-0-0/c CHAR(256)   r     1 Y$CHR                      0-0-0/c CHAR        r     1 Y$CHR(0:0)
     0-0-0/w STRC(48)    r     1 Y$TRCBFR


   Procedure KVV$VDI requires 2457 words for executable code.
   Procedure KVV$VDI requires 42 words of local(AUTO) storage.
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:145  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:146  
          MINI XREF LISTING

BAD_CLOCK
     10166**LABEL    9740--CALLALT  9751--CALLALT 10156--GOTO
CMPOTP
      9930**LABEL   10786--GOTO
FPT
      8971**DCL      9767--ASSIGN   9769--CALL     9782<<ASSIGN   9783<<ASSIGN   9785<<ASSIGN   9787>>CALLBLT
      9787>>CALLBLT  9787>>CALLBLT  9787>>CALLBLT  9791>>ASSIGN   9792--ASSIGN   9793--ASSIGN   9794--CALL
      9820--ASSIGN   9821--ASSIGN   9827--ASSIGN   9832--ASSIGN   9833--CALL     9844<<ASSIGN   9853>>IF
      9855<<ASSIGN   9856<>CALL     9860--ASSIGN   9861--ASSIGN   9862<>CALL     9952--ASSIGN   9953--ASSIGN
      9954--ASSIGN   9966<>CALL     9968<>CALL    10102--ASSIGN  10103--ASSIGN  10104--CALL    10110--ASSIGN
     10111--ASSIGN  10112--ASSIGN  10113--ASSIGN  10114--ASSIGN  10115<>CALL    10152--ASSIGN  10153--ASSIGN
     10154--ASSIGN  10155--ASSIGN  10156--IF      10157--IF      10157--ASSIGN  10158--ASSIGN  10159<>CALL
     10160--ASSIGN  10301--ASSIGN  10302--ASSIGN  10303--ASSIGN  10304<>CALL    10396--ASSIGN  10397--ASSIGN
     10398<>CALL    10401--ASSIGN  10403--ASSIGN  10527--ASSIGN  10528--ASSIGN  10529--ASSIGN  10530<>CALL
     10540--ASSIGN  10544--ASSIGN  10545<>CALL    10550--ASSIGN  10551--ASSIGN  10552--ASSIGN  10553--ASSIGN
     10554<>CALL    10560--ASSIGN  10577--ASSIGN  10578--ASSIGN  10579<>CALL    10584--ASSIGN  10585--ASSIGN
     10586--ASSIGN  10586--ASSIGN  10588--ASSIGN  10690--ASSIGN  10691--IF      10693--ASSIGN  10694--ASSIGN
     10699--ASSIGN  10699--ASSIGN  10749<>CALL    10751--ASSIGN  10756--DOSELCT 10760--IF      10777--IF
G$LOW_MEM.IV.IL$ IN PROCEDURE Y$INPCHRLOP
     10242**DCL     10242--REDEF
G$LOW_MEM.IV.INT.I#00$ IN PROCEDURE Y$INPCHRLOP
     10242**DCL     10242--REDEF
G$LOW_MEM.IV.INT.I#01$ IN PROCEDURE Y$INPCHRLOP
     10242**DCL     10242--REDEF
G$LOW_MEM.IV.INT.I#02$ IN PROCEDURE Y$INPCHRLOP
     10243**DCL     10243--REDEF
G$LOW_MEM.IV.INT.I#03$ IN PROCEDURE Y$INPCHRLOP
     10243**DCL     10243--REDEF
G$LOW_MEM.IV.INT.I#04$ IN PROCEDURE Y$INPCHRLOP
     10243**DCL     10244--REDEF
G$LOW_MEM.IV.INT.I#05$ IN PROCEDURE Y$INPCHRLOP
     10244**DCL     10244--REDEF
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:147  
G$LOW_MEM.IV.INT.I#61$ IN PROCEDURE Y$INPCHRLOP
     10245**DCL     10245--REDEF
G$LOW_MEM.IV.INT.I#62$ IN PROCEDURE Y$INPCHRLOP
     10245**DCL     10245--REDEF
G$LOW_MEM.IV.INT.I#63$ IN PROCEDURE Y$INPCHRLOP
     10245**DCL     10245--REDEF
G$LOW_MEM.TV.T#01$ IN PROCEDURE Y$INPCHRLOP
     10230**DCL     10230--REDEF
G$LOW_MEM.TV.T#02$ IN PROCEDURE Y$INPCHRLOP
     10230**DCL     10230--REDEF
G$LOW_MEM.TV.T#03$ IN PROCEDURE Y$INPCHRLOP
     10229**DCL     10229--REDEF
G$LOW_MEM.TV.T#05$ IN PROCEDURE Y$INPCHRLOP
     10229**DCL     10229--REDEF
G$LOW_MEM.TV.T#06$ IN PROCEDURE Y$INPCHRLOP
     10228**DCL     10228--REDEF
G$LOW_MEM.TV.T#07$ IN PROCEDURE Y$INPCHRLOP
     10228**DCL     10228--REDEF
G$LOW_MEM.TV.T#08$ IN PROCEDURE Y$INPCHRLOP
     10227**DCL     10228--REDEF
G$LOW_MEM.TV.T#09$ IN PROCEDURE Y$INPCHRLOP
     10227**DCL     10227--REDEF
G$LOW_MEM.TV.T#10$ IN PROCEDURE Y$INPCHRLOP
     10227**DCL     10227--REDEF
G$LOW_MEM.TV.T#12$ IN PROCEDURE Y$INPCHRLOP
     10226**DCL     10226--REDEF
G$LOW_MEM.TV.T#13$ IN PROCEDURE Y$INPCHRLOP
     10226**DCL     10226--REDEF
G$LOW_MEM.TV.T#14$ IN PROCEDURE Y$INPCHRLOP
     10225**DCL     10225--REDEF
G$LOW_MEM.TV.T#15$ IN PROCEDURE Y$INPCHRLOP
     10225**DCL     10225--REDEF
G$LOW_MEM.TV.T#16$ IN PROCEDURE Y$INPCHRLOP
     10224**DCL     10225--REDEF
G$LOW_MEM.TV.T#17$ IN PROCEDURE Y$INPCHRLOP
     10224**DCL     10224--REDEF
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:148  
G$LOW_MEM.TV.T#19$ IN PROCEDURE Y$INPCHRLOP
     10223**DCL     10224--REDEF
G$LOW_MEM.TV.T#20$ IN PROCEDURE Y$INPCHRLOP
     10223**DCL     10223--REDEF
G$LOW_MEM.TV.T#21$ IN PROCEDURE Y$INPCHRLOP
     10223**DCL     10223--REDEF
G$LOW_MEM.TV.T#22$ IN PROCEDURE Y$INPCHRLOP
     10222**DCL     10222--REDEF
G$LOW_MEM.TV.T#23$ IN PROCEDURE Y$INPCHRLOP
     10222**DCL     10222--REDEF
G$LOW_MEM.TV.T#24$ IN PROCEDURE Y$INPCHRLOP
     10221**DCL     10222--REDEF
G$LOW_MEM.TV.T#25$ IN PROCEDURE Y$INPCHRLOP
     10221**DCL     10221--REDEF
G$LOW_MEM.TV.T#26$ IN PROCEDURE Y$INPCHRLOP
     10221**DCL     10221--REDEF
G$LOW_MEM.TV.T#27$ IN PROCEDURE Y$INPCHRLOP
     10220**DCL     10220--REDEF
G$LOW_MEM.TV.T#28$ IN PROCEDURE Y$INPCHRLOP
     10220**DCL     10220--REDEF
G$LOW_MEM.TV.T#29$ IN PROCEDURE Y$INPCHRLOP
     10219**DCL     10220--REDEF
G$LOW_MEM.TV.T#30$ IN PROCEDURE Y$INPCHRLOP
     10219**DCL     10219--REDEF
G$LOW_MEM.TV.T#31$ IN PROCEDURE Y$INPCHRLOP
     10219**DCL     10219--REDEF
G$LOW_MEM.TV.T#32$ IN PROCEDURE Y$INPCHRLOP
     10218**DCL     10218--REDEF
G$LOW_MEM.TV.T#33$ IN PROCEDURE Y$INPCHRLOP
     10218**DCL     10218--REDEF
G$LOW_MEM.WDT_CURR IN PROCEDURE Y$INPCHRLOP
     10206**DCL     10263>>IF
G$LOW_MEM$ IN PROCEDURE Y$INPCHRLOP
     10249**DCL     10205--IMP-PTR 10263>>IF
INPCND IN PROCEDURE Y$INPCHRLOP
     10252**DCL     10258<<ASSIGN  10344>>ASSIGN
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:149  
INPCNDFLG IN PROCEDURE Y$INPCHRLOP
     10253**DCL     10257<<ASSIGN  10281>>IF      10284<<ASSIGN  10314<<ASSIGN  10337<<ASSIGN  10342>>IF
     10344>>IF      10345<<ASSIGN
INPFNCFLG IN PROCEDURE Y$INPCHRLOP
     10251**DCL     10287<<ASSIGN  10325>>IF      10361<<ASSIGN  10445>>IF
KH@CLK
      8986**DCL     10110<<ASSIGN  10152<<ASSIGN
KH@CLK.FNC
      9028**DCL     10157<<ASSIGN
KH@CLK.PRD
      9107**DCL     10114<<ASSIGN  10154<<ASSIGN
KH@CLK.PRDUNT
      9089**DCL     10113<<ASSIGN  10153<<ASSIGN
KH@CLK.UID
      9002**DCL      9003--REDEF    9004--REDEF
KH@CLK.UID$
      9003**DCL     10111<<ASSIGN  10158<<ASSIGN
KH@CLK.UVAL
      9009**DCL     10112<<ASSIGN  10155<<ASSIGN  10156>>IF      10157>>IF      10160>>ASSIGN
KHC$CLOCK
      8654**DCL-ENT 10115--CALL    10159--CALL
KHD$SCREECH
      8655**DCL-ENT 10027--CALL    10039--CALL    10124--CALL    10146--CALL    10180--CALL    10185--CALL
KV$COPY
      6911**DCL      6910--IMP-SIZ  9720<>CALL     9799<>CALL     9870<>CALL    10045<>CALL    10053<>CALL
     10059<>CALL    10066<>CALL    10133<>CALL    10139<>CALL    10173<>CALL    10659<>CALL    10668<>CALL
     10673<>CALL    10679<>CALL
KV$MRD.CALUSR_ERS
      5444**DCL     10655>>IF
KV$MRD.CALUSR_PST
      5444**DCL      9965>>IF      10664>>IF
KV$MRD.CALUSR_SETATR
      5445**DCL     10671>>IF
KV$MRD.DVCATR
      5464**DCL     10670<<ASSIGN
KV$MRD.DVCCLM
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:150  
      5464**DCL     10773<<ASSIGN
KV$MRD.OUTPUT
      5448**DCL     10002>>IF
KV$MRD.SRD$
      5441**DCL     10764>>ASSIGN
KV$MVD.ORG
      5494**DCL      9859>>IF
KV$MVD.TRNTBL$
      5491**DCL      9756>>IF       9786>>ASSIGN
KV$PTR
      5532**DCL     10366<>CALL
KV$PTR.INPCNDFLG.BITS
      5551**DCL     10365>>IF
KV$PTR.INPCNDPND
      5538**DCL      5547--REDEF    5551--REDEF   10258>>ASSIGN  10285<<ASSIGN  10344<<ASSIGN
KV$PTR.INPCNDPND.ESC
      5546**DCL     10357>>IF
KV$PTR.INPCNDPND.TRN
      5542**DCL      9737>>IF       9823>>IF      10004>>IF
KV$PTR.LINLST$
      5534**DCL      5535--REDEF
KV$PTR.MRD$
      5533**DCL      9965>>IF      10002>>IF      10655>>IF      10664>>IF      10670>>ASSIGN  10671>>IF
     10764>>ASSIGN  10773>>ASSIGN
KV$PTR.MVD$
      5533**DCL      9756>>IF       9786>>ASSIGN   9859>>IF
KV$PTR.SRD$
      5534**DCL      9845>>DOWHILE  9845>>DOWHILE  9845>>DOWHILE  9845>>DOWHILE  9953>>ASSIGN
KV$PTR.SSN$
      5532**DCL      9679>>ASSIGN   9707>>ASSIGN   9852>>ASSIGN  10455>>ASSIGN  10675>>ASSIGN
KV$PTR.STR$
      5532**DCL      9767>>ASSIGN   9806>>ASSIGN   9808>>DOWHILE  9821>>ASSIGN   9855>>ASSIGN
KV$PTR.VDI$
      5532**DCL      9678>>ASSIGN   9706>>ASSIGN  10562<<ASSIGN  10603>>ASSIGN  10696>>ASSIGN  10783>>ASSIGN
KV$PTR$
      5526**DCL      5532--IMP-PTR  9678>>ASSIGN   9679>>ASSIGN   9706>>ASSIGN   9707>>ASSIGN   9737>>IF
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:151  
      9756>>IF       9767>>ASSIGN   9786>>ASSIGN   9806>>ASSIGN   9808>>DOWHILE  9821>>ASSIGN   9823>>IF
      9845>>DOWHILE  9845>>DOWHILE  9845>>DOWHILE  9845>>DOWHILE  9850<<ASSIGN   9851<<ASSIGN   9852>>ASSIGN
      9855>>ASSIGN   9859>>IF       9953>>ASSIGN   9965>>IF      10000>>ASSIGN  10002>>IF      10011<<ASSIGN
     10016<<ASSIGN  10072>>ASSIGN  10084<<ASSIGN  10128<<ASSIGN  10258>>ASSIGN  10285>>ASSIGN  10344>>ASSIGN
     10357>>IF      10365>>IF      10366>>CALL    10455>>ASSIGN  10523<<ASSIGN  10560<<ASSIGN  10562>>ASSIGN
     10572>>ASSIGN  10603>>ASSIGN  10655>>IF      10664>>IF      10670>>ASSIGN  10671>>IF      10675>>ASSIGN
     10696>>ASSIGN  10764>>ASSIGN  10773>>ASSIGN  10783>>ASSIGN
KV$SRD.BTMRHT
      5758**DCL      5763--REDEF
KV$SRD.CRT
      5834**DCL      5839--REDEF    9953>>ASSIGN
KV$SRD.CRT.CLM
      5836**DCL     10769<<ASSIGN
KV$SRD.FLDEND
      5798**DCL      5803--REDEF
KV$SRD.HI_NONBLN
      5868**DCL      5873--REDEF
KV$SRD.LNK$
      5662**DCL     10771>>ASSIGN
KV$SRD.ORG
      5690**DCL      5695--REDEF
KV$SRD.SRDEND
      5903**DCL      5908--REDEF
KV$SRD.SRDEND.CLM
      5905**DCL      9845>>DOWHILE
KV$SRD.SRDEND.LIN
      5905**DCL      9845>>DOWHILE
KV$SRD.TOPLFT
      5724**DCL      5729--REDEF
KV$SRD.TOPLFT.CLM
      5726**DCL      9845>>DOWHILE 10769>>ASSIGN
KV$SRD.TOPLFT.LIN
      5726**DCL      9845>>DOWHILE
KV$SRD.UNKPST
      5911**DCL     10770<<ASSIGN
KV$SSN
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:152  
      5939**DCL      9680--IF      10111--ASSIGN  10158--ASSIGN
KV$SSN.CLKSET
      5958**DCL     10116<<ASSIGN  10157>>IF      10160<<ASSIGN
KV$SSN.INPCHR
      5957**DCL     10288<<ASSIGN  10354<<ASSIGN  10416>>ASSIGN
KV$SSN.INPCHRCNT
      5942**DCL      9728<<ASSIGN   9728>>ASSIGN
KV$SSN.INPECH
      5957**DCL     10268<<ASSIGN  10269<<ASSIGN
KV$SSN.LNK$
      5939**DCL      9849>>IF       9851>>ASSIGN  10014>>ASSIGN  10079>>IF      10082>>ASSIGN
KV$SSN.LSTOTPRCRID
      5946**DCL     10097<<ASSIGN
KV$SSN.MRKRQSENB
      5953**DCL      9929<<ASSIGN
KV$SSN.NO_WATREDTRG
      5957**DCL     10361>>ASSIGN  10445>>IF
KV$SSN.OTPBLK
      5953**DCL     10004>>IF
KV$SSN.REDBFR
      5958**DCL      9864<<ASSIGN
KV$SSN.REDBFR__
      5983**DCL      9793>>ASSIGN
KV$SSN.REDBFR__.ADR$
      5985**DCL      9784>>ASSIGN
KV$SSN.REDBFR__.BFRBYTSIZ
      5986**DCL      9762>>IF
KV$SSN.REDBFR__.BFRRLSDSP
      5987**DCL      9773<<ASSIGN
KV$SSN.REDBFR__.BYTX
      5985**DCL      9785>>ASSIGN
KV$SSN.REDBFR__.DATBYTSIZ
      5985**DCL      9791<<ASSIGN   9865<<ASSIGN
KV$SSN.REDRQSPND
      5957**DCL      9818<<ASSIGN   9859>>IF      10004>>IF
KV$SSN.REDRSPCNT
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:153  
      5945**DCL      5946--REDEF
KV$SSN.REDTIMOUT.MRKNMB
      5946**DCL     10108>>IF
KV$SSN.SNCPTR$
      5940**DCL      9850>>ASSIGN   9851>>ASSIGN  10004>>IF      10011>>ASSIGN  10084>>ASSIGN
KV$SSN.SSNCNCID
      5948**DCL      9680>>IF       9927>>IF      10004>>IF
KV$SSN.SSNID
      5989**DCL      9844>>ASSIGN   9853>>IF      10076>>IF      10078>>DOWHILE 10675>>ASSIGN
KV$SSN.TYPAHD
      5951**DCL     10270<<ASSIGN  10371>>IF
KV$SSN.TYPAHD.BFRCHR
      5951**DCL      9843<<ASSIGN  10417>>IF
KV$SSN.TYPAHD.BFRINPFNCCHR
      5952**DCL     10434>>IF
KV$SSN.TYPAHDBFRCNT
      5950**DCL     10300<<ASSIGN  10300>>ASSIGN  10378>>IF      10402<<ASSIGN  10402>>ASSIGN
KV$SSN.TYPAHDBFRHED$
      5941**DCL     10277>>ASSIGN  10294<<ASSIGN
KV$SSN.TYPAHDBFRINPFNC$
      5941**DCL     10310<<ASSIGN  10432<<ASSIGN  10434>>IF      10441<<ASSIGN
KV$SSN.TYPAHDBFRINPFNCX
      5950**DCL     10442<<ASSIGN
KV$SSN.TYPAHDBFRINS$
      5942**DCL     10295>>IF      10299<<ASSIGN  10376>>ASSIGN  10411<<ASSIGN
KV$SSN.TYPCND
      5991**DCL     10285>>ASSIGN
KV$SSN.TYPCND.NOT_TRN
      5992**DCL     10311<<ASSIGN
KV$SSN.VDI$
      5939**DCL     10004>>IF
KV$SSN.WATINPDLTMRK
      5954**DCL      9928>>IF
KV$SSN.WATOTPDLTMRK
      5954**DCL      9928>>IF
KV$STR.ID
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:154  
      5635**DCL      9855>>ASSIGN
KV$STR.MAXRCRBYTSIZ
      5632**DCL      9767>>ASSIGN   9821>>ASSIGN
KV$STR.SNDMAXNMBRCR
      5633**DCL      9806<<ASSIGN   9808>>DOWHILE
KV$STT.INPCHRCNT
      6379**DCL      9726<<ASSIGN   9726>>ASSIGN
KV$STT.REQSTATS.DSPMSK
      6270**DCL      6276--REDEF
KV$STT.REQSTATS.SLCMSK
      6311**DCL      6318--REDEF
KV$STT.VDIUSREVTCNT
      6389**DCL     10699<<ASSIGN  10699>>ASSIGN
KV$STT.VDIUSRFNCCNT
      6387**DCL      9956<<ASSIGN   9956>>ASSIGN  10604<<ASSIGN  10604>>ASSIGN  10697<<ASSIGN  10697>>ASSIGN
KV$STT.VDIVDHEVTCNT
      6388**DCL      9919<<ASSIGN   9919>>ASSIGN
KV$STT.VDIVDHFNCCNT
      6387**DCL      9698<<ASSIGN   9698>>ASSIGN
KV$TRCBFR
      6411**DCL     10586--ASSIGN
KV$TRCBFR.MAXTRCENTX
      6417**DCL     10586<<ASSIGN
KV$TRCBFR.TRCENTX
      6417**DCL     10588<<ASSIGN
KV$TRCENT
      6469**DCL     10586--ASSIGN
KV$TRNTBL.INPTRN1$
      6527**DCL      9756>>IF       9786>>ASSIGN
KV$TRNTBL.OTPESCCHR
      6530**DCL      6530--REDEF
KV$TYPAHDBFR
      6555**DCL      6558--REDEF   10312<<ASSIGN  10390--ASSIGN  10391--ASSIGN
KV$TYPAHDBFR.CHRX
      6555**DCL     10278>>IF      10288>>ASSIGN  10289>>IF      10319<<ASSIGN  10319>>ASSIGN  10390<<ASSIGN
KV$TYPAHDBFR.CHRX_HI
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:155  
      6556**DCL     10278>>IF      10289>>IF      10377>>IF      10391<<ASSIGN  10415<<ASSIGN  10415>>ASSIGN
     10416>>ASSIGN  10442>>ASSIGN
KV$TYPAHDBFR.INPFNCTXT
      6555**DCL     10287>>ASSIGN  10389<<ASSIGN
KV$TYPAHDBFR.LNK$
      6555**DCL     10292>>IF      10294>>ASSIGN  10299>>ASSIGN  10384>>IF      10388>>ASSIGN  10401<<ASSIGN
KV$TYPAHDBFR_CHR
      6558**DCL     10288>>ASSIGN  10416<<ASSIGN
KV$USRPRM.STT$
      6636**DCL      9698>>ASSIGN   9698>>ASSIGN   9726>>ASSIGN   9726>>ASSIGN   9919>>ASSIGN   9919>>ASSIGN
      9956>>ASSIGN   9956>>ASSIGN  10528>>ASSIGN  10551>>ASSIGN  10604>>ASSIGN  10604>>ASSIGN  10697>>ASSIGN
     10697>>ASSIGN  10699>>ASSIGN  10699>>ASSIGN
KV$USRPRM.USRSBR$
      6636**DCL      9966>>CALL    10679>>CALL    10749>>CALL
KV$USR_EVT
      6939**DCL     10690>>ASSIGN
KV$USR_EVT.ID
      6945**DCL     10745>>ASSIGN
KV$USR_OTPMRK.DAT.ID
      7005**DCL      7005--REDEF    7006--REDEF
KV$USR_OTPMRK.DAT.SSNID
      7004**DCL     10675<<ASSIGN
KV$USR_PST.FNC
      7040**DCL     10604>>ASSIGN  10604>>ASSIGN  10649>>ASSIGN  10653>>DOCASE
KV$USR_PST.PHSPST
      7069**DCL      7074--REDEF
KV$USR_SETATR.GRPRND
      7258**DCL     10670>>ASSIGN
KV$USR_SETATR.PHSPST
      7202**DCL      7207--REDEF
KV$VDH_DAT
      7403**DCL      9792>>ASSIGN  10366<>CALL
KV$VDH_DAT.CMPCOD
      7443**DCL      9801>>IF      10358<<ASSIGN  10358>>ASSIGN
KV$VDH_DAT.CNTFNCCHRS
      7410**DCL     10356>>IF
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:156  
KV$VDH_DAT.CTN
      7410**DCL      9741>>IF
KV$VDH_DAT.DATMOD
      7411**DCL      9756>>IF
KV$VDH_DAT.DAT__.ADR$
      7439**DCL      9787>>CALLBLT 10354>>ASSIGN
KV$VDH_DAT.DAT__.BYTX
      7439**DCL      9783>>ASSIGN  10354>>ASSIGN  10360<<ASSIGN  10360>>ASSIGN
KV$VDH_DAT.DAT__.DATBYTSIZ
      7439**DCL      9726>>ASSIGN   9728>>ASSIGN   9762>>IF       9767>>ASSIGN   9782>>ASSIGN  10350>>IF
     10359<<ASSIGN  10359>>ASSIGN
KV$VDH_DAT.FNC
      7407**DCL      9681>>IF       9698>>ASSIGN   9698>>ASSIGN   9715>>DOCASE
KV$VDH_DCLLCLPST.PHSPST
      7324**DCL      7329--REDEF    9861>>ASSIGN
KV$VDH_DCLLCLPST.PHSPST.CLM
      7326**DCL      9845>>DOWHILE  9845>>DOWHILE
KV$VDH_DCLLCLPST.PHSPST.LIN
      7326**DCL      9845>>DOWHILE  9845>>DOWHILE
KV$VDH_EVT.FNC
      7481**DCL      9688>>IF       9693>>ASSIGN
KV$VDH_EVT.ID
      7483**DCL      9690>>ASSIGN   9919>>ASSIGN   9919>>ASSIGN   9922>>DOCASE
KV$VDH_EVT.PRM
      7483**DCL      9930>>IF
KV$VDH_INT.CHN$
      7518**DCL     10566>>ASSIGN
KV$VDH_INT.RCVFLWCTRMAXCRD
      7519**DCL     10569>>ASSIGN  10570>>ASSIGN
KV$VDH_INT.SHRTRCBFR
      7518**DCL     10571>>ASSIGN
KV$VDH_INT.TRCBFRBYTSIZ
      7520**DCL     10576>>IF      10577>>ASSIGN
KV$VDH_INT.USRCTX$
      7518**DCL     10567>>ASSIGN
KV$VDH_INT.USRPRM$
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:157  
      7519**DCL     10528>>ASSIGN  10551>>ASSIGN  10568>>ASSIGN
KV$VDH_INT.VDI$
      7519**DCL     10540<<ASSIGN  10553>>ASSIGN  10561>>ASSIGN
KV$VDH_OTPMRK.CMPCOD
      7683**DCL     10093>>IF
KV$VDH_OTPMRK.DAT.ID
      7680**DCL      7680--REDEF    7681--REDEF   10097>>ASSIGN
KV$VDH_OTPMRK.DAT.ID_BYT
      7681**DCL     10113>>ASSIGN  10114>>ASSIGN
KV$VDH_OTPMRK.DAT.ID_WRD
      7680**DCL     10108>>IF
KV$VDH_OTPMRK.DAT.SSNID
      7679**DCL     10076>>IF      10078>>DOWHILE
KV$VDH_OTPMRK.DAT.TYP
      7679**DCL     10086>>DOCASE
KV$VDH_PST.PSTVAL
      7750**DCL      7755--REDEF
KV$VDH_SETCLK.CLKNMB
      7792**DCL     10155>>ASSIGN
KV$VDH_SETCLK.PRD
      7792**DCL     10154>>ASSIGN
KV$VDH_SETCLK.UNT
      7792**DCL     10153>>ASSIGN
KV$VDH_X
      6910**DCL        11--PROC     6911--REDEF    6939--REDEF    6974--REDEF    7036--REDEF    7106--REDEF
      7169--REDEF    7292--REDEF    7361--REDEF    7403--REDEF    7477--REDEF    7512--REDEF    7549--REDEF
      7614--REDEF    7650--REDEF    7712--REDEF    7786--REDEF    9704--ENTRY   10103--ASSIGN  10510--ENTRY
     10601--ENTRY   10688--ENTRY
KV$VDI.ASNINPPTR$
      6662**DCL     10572<<ASSIGN
KV$VDI.CHN$
      6661**DCL     10566<<ASSIGN
KV$VDI.HALFDUPLEXPAPERTAPE
      6697**DCL     10265>>IF
KV$VDI.INPUNT
      6702**DCL      9730>>DOCASE  10004>>IF
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:158  
KV$VDI.INTREDINH
      6699**DCL      9808>>DOWHILE  9817<<ASSIGN   9834<<ASSIGN
KV$VDI.OTPCNDPND
      6698**DCL     10760>>IF      10761<<ASSIGN
KV$VDI.OTPCNDPND.PST
      6698**DCL      9945>>IF       9954>>ASSIGN   9955<<ASSIGN  10662<<ASSIGN
KV$VDI.PRG.OTP
      6694**DCL     10763<<ASSIGN
KV$VDI.RCVFLWCTRMAXCRD
      6692**DCL     10569<<ASSIGN
KV$VDI.RCVFLWCTRMINCRDINC
      6698**DCL     10570<<ASSIGN
KV$VDI.RE_DSPINP
      6696**DCL      9738<<ASSIGN   9741>>IF       9857<<ASSIGN  10265>>IF
KV$VDI.RE_DSPLOWX
      6692**DCL      9739<<ASSIGN
KV$VDI.RQSOTP
      6697**DCL     10002<<ASSIGN  10004>>IF
KV$VDI.SHRTRCBFR
      6703**DCL     10571<<ASSIGN
KV$VDI.SSN$
      6661**DCL      9850>>ASSIGN   9975>>IF      10001>>ASSIGN  10077>>ASSIGN
KV$VDI.SSNCNT
      6690**DCL      9841>>IF
KV$VDI.TRCBFR$
      6691**DCL      9683>>ASSIGN   9708>>ASSIGN  10584<<ASSIGN  10643>>ASSIGN  10739>>ASSIGN  10784>>ASSIGN
KV$VDI.TRCBFRBYTSIZ
      6691**DCL     10585<<ASSIGN
KV$VDI.UN_KNWPST
      6700**DCL     10762<<ASSIGN
KV$VDI.USRCTX$
      6661**DCL     10567<<ASSIGN
KV$VDI.USRPRM$
      6662**DCL      9698>>ASSIGN   9698>>ASSIGN   9726>>ASSIGN   9726>>ASSIGN   9919>>ASSIGN   9919>>ASSIGN
      9956>>ASSIGN   9956>>ASSIGN   9966>>CALL    10568<<ASSIGN  10604>>ASSIGN  10604>>ASSIGN  10679>>CALL
     10697>>ASSIGN  10697>>ASSIGN  10699>>ASSIGN  10699>>ASSIGN  10749>>CALL
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:159  
KV$VDI.USRRQSDAT.RED
      6702**DCL      9808>>DOWHILE  9819<<ASSIGN  10108>>IF      10274>>IF      10371>>IF
KV$VDI.USRRQSDAT.TYPAHD
      6703**DCL      9736<<ASSIGN
KV$VDI.VDHEVTENB
      6709**DCL      9980<<ASSIGN  10594<<ASSIGN
KV@SND_MRK
      9595**DCL     10102<<ASSIGN  10104<>CALL
KV@SND_MRK.VDH_MRK$
      9635**DCL     10103<<ASSIGN
KV@SND_MRK.VDOVLP
      9629**DCL      9632--REDEF
KVC$CNC
      8657**DCL-ENT  9720--CALL
KVC$DSC
      8667**DCL-ENT  9870--CALL
KVC$RLSVDI
      8659**DCL-ENT  9994--CALL
KVF$PST
      8660**DCL-ENT  9862--CALL
KVI$ENBNO_WATRED
      8668**DCL-ENT 10449--CALL
KVI$INPCHR
      8661**DCL-ENT 10370--CALL
KVI$INPCHR_INPFNCIMD
      8662**DCL-ENT 10325--CALL
KVI$INPCHR_TYPAHD
      8663**DCL-ENT 10329--CALL
KVI$INTINPOPR
      8664**DCL-ENT 10059--CALL
KVI$PRGTYPAHDINPFNC
      8665**DCL-ENT  9842--CALL
KVI$RE_DSPINP
      8666**DCL-ENT  9745--CALL
KVI$SNDDAT
      8670**DCL-ENT  9794--CALL     9799--CALL
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:160  
KVM$SND
      8669**DCL-ENT  9933--CALL     9938--CALL     9988--CALL    10012--CALL    10104--CALL
KVO$ERS
      8679**DCL-ENT 10659--CALL
KVO$GNRPST
      8680**DCL-ENT  9968--CALL    10668--CALL
KVO$OTPLCL
      8672**DCL-ENT 10066--CALL
KVO$PST
      8671**DCL-ENT 10133--CALL
KVO$SETATR
      8681**DCL-ENT 10673--CALL
KVP$GETPRM
      8673**DCL-ENT 10053--CALL
KVP$SETPRM
      8674**DCL-ENT 10173--CALL
KVQ$CPYDAT
      8682**DCL-ENT 10366--CALL
KVS$GETBFR
      8675**DCL-ENT 10045--CALL    10398--CALL    10530--CALL    10545--CALL    10579--CALL
KVS$GETREDBFR
      8676**DCL-ENT  9769--CALL
KVS$RLSBFR
      8677**DCL-ENT 10139--CALL    10304--CALL    10554--CALL
KVS$SETSTR
      8678**DCL-ENT  9856--CALL
KVV$CALUSR
     10601**ENTRY    9833--CALL
KVV_MRKTYP
      5237**DCL     10124<>CALL
KVV_VDHEVT
      5359**DCL     10027<>CALL
KVV_VDHFNC
      5298**DCL     10039<>CALL    10146<>CALL    10180<>CALL    10185<>CALL
KV_RCVSSN$
      5996**DCL      9985>>IF
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:161  
KV_SETCLK
      7811**DCL     10110>>ASSIGN  10152>>ASSIGN
KV_SETCLK.UID
      7827**DCL      7828--REDEF    7829--REDEF
KV_SND_EVT_BRK
      7976**DCL      9933<>CALL
KV_SND_EVT_BRK.VDOVLP
      8044**DCL      8047--REDEF
KV_SND_EVT_MNTATN
      8067**DCL      9938<>CALL
KV_SND_EVT_MNTATN.VDOVLP
      8135**DCL      8138--REDEF
KV_SND_MRK
      8158**DCL     10102>>ASSIGN
KV_SND_MRK.VDOVLP
      8192**DCL      8195--REDEF
KV_SND_RQSDAT_GNR
      8214**DCL     10012<>CALL
KV_SND_RQSDAT_GNR.VDOVLP
      8248**DCL      8251--REDEF
KV_SND_SCHLCLSSN
      8269**DCL      9988<>CALL
KV_SND_SCHLCLSSN.VDOVLP
      8303**DCL      8306--REDEF
KV_TYPAHDBFR
      6580**DCL      6583--REDEF   10312>>ASSIGN
KV_TYPAHDBFRLMT
      6587**DCL     10378>>IF
KV_USR_PST
      8372**DCL      9952>>ASSIGN
KV_USR_PST.PHSPST
      8405**DCL      8410--REDEF
KV_USR_RQSDAT
      8442**DCL      9820>>ASSIGN
KV_VDHFNCOK_NO_SSN
      8709**DCL      9681>>IF
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:162  
KV_VDH_GETBFR
      8505**DCL     10396>>ASSIGN  10527>>ASSIGN
KV_VDH_PST_ABS
      8570**DCL      9860>>ASSIGN
KV_VDH_PST_ABS.PSTVAL
      8608**DCL      8613--REDEF
KV_VDH_RLSBFR
      8644**DCL     10301>>ASSIGN  10550>>ASSIGN
P1$
      8933**DCL      6024--IMP-PTR  6555--IMP-PTR  6558--IMP-PTR  6609--IMP-PTR  9784<<ASSIGN   9787>>CALLBLT
     10000<<ASSIGN  10016>>ASSIGN  10072<<ASSIGN  10128>>ASSIGN  10277<<ASSIGN  10278>>IF      10278>>IF
     10287>>ASSIGN  10288>>ASSIGN  10288>>ASSIGN  10289>>IF      10289>>IF      10292>>IF      10294>>ASSIGN
     10295>>IF      10299>>ASSIGN  10302>>ASSIGN  10312>>ASSIGN  10319>>ASSIGN  10319>>ASSIGN  10376<<ASSIGN
     10377>>IF      10384>>IF      10388<<ASSIGN  10388>>ASSIGN  10389>>ASSIGN  10390>>ASSIGN  10391>>ASSIGN
     10401>>ASSIGN  10403<<ASSIGN  10411>>ASSIGN  10415>>ASSIGN  10415>>ASSIGN  10416>>ASSIGN  10416>>ASSIGN
     10441>>ASSIGN  10442>>ASSIGN  10764<<ASSIGN  10768>>DOWHILE 10769>>ASSIGN  10769>>ASSIGN  10770>>ASSIGN
     10771<<ASSIGN  10771>>ASSIGN
PRC IN PROCEDURE Y$INPCHRLOP
     10271**LABEL   10332--EXIT
SUBCOMOMON
      9708**LABEL    9700--GOTO
USR_EVT
      9149**DCL     10690<<ASSIGN
USR_EVT.ACT
      9155**DCL     10751<<ASSIGN  10760>>IF      10777>>IF
USR_EVT.FNC
      9153**DCL     10691>>IF      10693<<ASSIGN
USR_EVT.ID
      9155**DCL     10699>>ASSIGN  10699>>ASSIGN  10756>>DOSELCT
USR_EVT.PRM
      9155**DCL     10694<<ASSIGN
USR_PST
      9185**DCL      9952<<ASSIGN
USR_PST.PHSPST
      9218**DCL      9223--REDEF    9953<<ASSIGN
USR_PST.PHSPSTMOD
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:163  
      9226**DCL      9954<<ASSIGN
USR_RQSDAT
      9256**DCL      9820<<ASSIGN   9833<>CALL
USR_RQSDAT.DATMOD
      9262**DCL      9827<<ASSIGN   9832<<ASSIGN
USR_RQSDAT.MAXRCRBYTSIZ
      9290**DCL      9821<<ASSIGN
VDH_DAT
      9326**DCL      9792<<ASSIGN   9794<>CALL
VDH_DAT.DAT__
      9360**DCL      9793<<ASSIGN
VDH_GETBFR
      9401**DCL     10396<<ASSIGN  10527<<ASSIGN
VDH_GETBFR.BFR$
      9407**DCL     10401>>ASSIGN  10403>>ASSIGN  10540>>ASSIGN  10560>>ASSIGN  10584>>ASSIGN  10586>>ASSIGN
     10588>>ASSIGN
VDH_GETBFR.BYTSIZ
      9407**DCL      9767<<ASSIGN   9769<>CALL    10577<<ASSIGN  10585>>ASSIGN  10586>>ASSIGN
VDH_GETBFR.STRTYP
      9407**DCL     10397<<ASSIGN  10529<<ASSIGN  10544<<ASSIGN  10578<<ASSIGN
VDH_GETBFR.STT$
      9407**DCL     10528<<ASSIGN
VDH_PST
      9504**DCL      9860<<ASSIGN
VDH_PST.PSTVAL
      9542**DCL      9547--REDEF    9861<<ASSIGN
VDH_RLSBFR
      9467**DCL     10301<<ASSIGN  10550<<ASSIGN
VDH_RLSBFR.BFR$
      9473**DCL     10302<<ASSIGN  10553<<ASSIGN
VDH_RLSBFR.STRTYP
      9473**DCL     10303<<ASSIGN  10552<<ASSIGN
VDH_RLSBFR.STT$
      9473**DCL     10551<<ASSIGN
Y$CHR
      8867**DCL      9787<<CALLBLT  9787>>CALLBLT  9787>>CALLBLT
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:164  
Y$CHR IN PROCEDURE Y$INPCHRLOP
     10250**DCL     10354>>ASSIGN
Y$INPCHRLOP
     10199**PROC     9740--CALL     9751--CALL
Y$TRC
     10487**PROC     9695--CALL     9963--CALL    10650--CALL    10746--CALL
Y$TRCBFR.MAXTRCENTX
      8896**DCL     10502>>IF
Y$TRCBFR.TRCENT
      8921**DCL     10488>>IF      10505<<ASSIGN
Y$TRCBFR.TRCENT.MLT
      8925**DCL     10495<<ASSIGN
Y$TRCBFR.TRCENTX
      8896**DCL     10488>>IF      10495>>ASSIGN  10501<<ASSIGN  10501>>ASSIGN  10502>>IF      10503<<ASSIGN
     10505>>ASSIGN
Y@SSN$
      8932**DCL      5939--IMP-PTR  9679<<ASSIGN   9680>>IF       9680>>IF       9707<<ASSIGN   9728>>ASSIGN
      9728>>ASSIGN   9762>>IF       9773>>ASSIGN   9784>>ASSIGN   9785>>ASSIGN   9791>>ASSIGN   9793>>ASSIGN
      9818>>ASSIGN   9843>>ASSIGN   9844>>ASSIGN   9849>>IF       9851>>ASSIGN   9852<<ASSIGN   9853>>IF
      9859>>IF       9864>>ASSIGN   9865>>ASSIGN   9927>>IF       9928>>IF       9928>>IF       9929>>ASSIGN
      9985>>IF      10001<<ASSIGN  10003>>DOWHILE 10004>>IF      10004>>IF      10004>>IF      10004>>IF
     10004>>IF      10011>>ASSIGN  10014<<ASSIGN  10014>>ASSIGN  10076>>IF      10077<<ASSIGN  10078>>DOWHILE
     10079>>IF      10082<<ASSIGN  10082>>ASSIGN  10084>>ASSIGN  10097>>ASSIGN  10108>>IF      10111>>ASSIGN
     10116>>ASSIGN  10157>>IF      10158>>ASSIGN  10160>>ASSIGN  10268>>ASSIGN  10269>>ASSIGN  10270>>ASSIGN
     10277>>ASSIGN  10285>>ASSIGN  10288>>ASSIGN  10294>>ASSIGN  10295>>IF      10299>>ASSIGN  10300>>ASSIGN
     10300>>ASSIGN  10310>>ASSIGN  10311>>ASSIGN  10354>>ASSIGN  10361>>ASSIGN  10371>>IF      10376>>ASSIGN
     10378>>IF      10402>>ASSIGN  10402>>ASSIGN  10411>>ASSIGN  10416>>ASSIGN  10417>>IF      10432>>ASSIGN
     10434>>IF      10434>>IF      10441>>ASSIGN  10442>>ASSIGN  10445>>IF      10455<<ASSIGN
Y@TRCBFR$
      8969**DCL      8890--IMP-PTR  9683<<ASSIGN   9684>>IF       9708<<ASSIGN   9786<<ASSIGN   9787>>CALLBLT
      9958>>IF      10488>>IF      10488>>IF      10495>>ASSIGN  10495>>ASSIGN  10501>>ASSIGN  10501>>ASSIGN
     10502>>IF      10502>>IF      10503>>ASSIGN  10505>>ASSIGN  10505>>ASSIGN  10643<<ASSIGN  10644>>IF
     10739<<ASSIGN  10740>>IF      10784<<ASSIGN
Y@TRCENT
      8956**DCL      9689<<ASSIGN   9692<<ASSIGN   9962<<ASSIGN  10488>>IF      10505>>ASSIGN  10648<<ASSIGN
     10744<<ASSIGN
PL6.E3A0      #001=KVV$VDI File=KVV$VDI.:E05TSI                                  WED 07/30/97 02:15 Page:165  
Y@TRCENT.FNC
      8964**DCL      9690<<ASSIGN   9693<<ASSIGN  10649<<ASSIGN  10745<<ASSIGN
Y@VDI$
      8931**DCL      6661--IMP-PTR  9678<<ASSIGN   9683>>ASSIGN   9698>>ASSIGN   9698>>ASSIGN   9706<<ASSIGN
      9708>>ASSIGN   9726>>ASSIGN   9726>>ASSIGN   9730>>DOCASE   9736>>ASSIGN   9738>>ASSIGN   9739>>ASSIGN
      9741>>IF       9808>>DOWHILE  9808>>DOWHILE  9817>>ASSIGN   9819>>ASSIGN   9834>>ASSIGN   9841>>IF
      9850>>ASSIGN   9857>>ASSIGN   9919>>ASSIGN   9919>>ASSIGN   9945>>IF       9954>>ASSIGN   9955>>ASSIGN
      9956>>ASSIGN   9956>>ASSIGN   9966>>CALL     9975>>IF       9980>>ASSIGN  10001>>ASSIGN  10002>>ASSIGN
     10004>>IF      10077>>ASSIGN  10108>>IF      10265>>IF      10265>>IF      10274>>IF      10371>>IF
     10561<<ASSIGN  10562>>ASSIGN  10566>>ASSIGN  10567>>ASSIGN  10568>>ASSIGN  10569>>ASSIGN  10570>>ASSIGN
     10571>>ASSIGN  10572>>ASSIGN  10584>>ASSIGN  10585>>ASSIGN  10594>>ASSIGN  10603<<ASSIGN  10604>>ASSIGN
     10604>>ASSIGN  10643>>ASSIGN  10662>>ASSIGN  10679>>CALL    10696<<ASSIGN  10697>>ASSIGN  10697>>ASSIGN
     10699>>ASSIGN  10699>>ASSIGN  10739>>ASSIGN  10749>>CALL    10760>>IF      10761>>ASSIGN  10762>>ASSIGN
     10763>>ASSIGN  10783<<ASSIGN  10784>>ASSIGN
Y_CALUSR
     10676**LABEL   10655--GOTO    10664--GOTO    10671--GOTO    10676--GOTO
Y_TRCENT_USRVDI
      8762**DCL     10648>>ASSIGN
Y_TRCENT_USRVDIEVT
      8820**DCL     10744>>ASSIGN
Y_TRCENT_USRVDIPST
      8849**DCL      9962>>ASSIGN
Y_TRCENT_VDHVDI
      8733**DCL      9692>>ASSIGN
Y_TRCENT_VDHVDIEVT
      8791**DCL      9689>>ASSIGN

PL6.E3A0      #002=KVV$VDHINT File=KVV$VDI.:E05TSI                               WED 07/30/97 02:17 Page:166  
     1162        1        /*T***********************************************************/
     1163        2        /*T*                                                         */
     1164        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1165        4        /*T*                                                         */
     1166        5        /*T***********************************************************/
     1167        6        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IND=0,IAD=3 */
     1168        7        KVV$VDHINT: PROC(KV$VDH_VDHINT) ALTRET;
     1169        8        /*F* NAME: KVV$VDHINT - Initialize VDH Buffers and the Circular Queue
     1170        9        The KVV$VDHINT routine is to be called by the handler to initialize
     1171       10        VDH context and buffer pools.
     1172       11
     1173       12        The system default memory pool, which is zero, is initialized by
     1174       13        this routine.
     1175       14        This routine will also create a DCB, M$CQ, that VDH may use to write
     1176       15        messages to the handler's circular queue, and open that DCB.
     1177       16        The alternate return will be taken if the DCB cannot be created or
     1178       17        opened.
     1179       18
     1180       19        The form of this call is:
     1181       20
     1182       21             CALL KVV$VDHINT(kv$vdh_vdhint) ALTRET(label);
     1183       22
     1184       23        where:
     1185       24        */
     1186       25        /*K* kv$vdh_vdhint - is a structure that contains all the necessary
     1187       26        information required to initialize the default memory pool and the
     1188       27        circular queue.
     1189       28
     1190       29        The KV$VDH_VDHINT macro is to be used to generate this structure.
     1191       30        Please refer to the description of that macro for details.
     1192       31        */
     1193       32
     1194       33    1   DCL G$HAND_Q$ PTR SYMREF;
     1195       34
     1196       35        %INCLUDE LCP_6;
     1197      226        %FPT_GETDCB (FPTN=FPT_GETDCB, DCBNAME=VLP_NAME_M$CQ, STCLASS=CONSTANT);
     1198      246        %FPT_GETDCB (FPTN=FPT@GETDCB, STCLASS=AUTO);
PL6.E3A0      #002=KVV$VDHINT File=KVV$VDI.:E05TSI                               WED 07/30/97 02:17 Page:167  
     1199      266    1   DCL DCB# UBIN AUTO;
     1200      267        %VLP_NAME (FPTN = VLP_NAME_M$CQ, NAME = 'M$CQ', LEN = 4, STCLASS = CONSTANT);
     1201      282        %FPT_OPEN (FPTN=FPT_OPEN_CQ, ORG=CQ, HMI=VLP_HMI, STCLASS=CONSTANT);
     1202      310        %FPT_OPEN (FPTN=FPT@OPEN_CQ, STCLASS=AUTO);
     1203      338        %FPT_WRTMLT (FPTN = KV_FPT_WRTMLT, STCLASS = SYMREF);
     1204      358
     1205      359        %INCLUDE KNH_MACRO_C;
     1206      642        %KNH$QHDR (FPTN = KNH_QHDR, STCLASS = "BASED(G$HAND_Q$)");
     1207      655        %VLP_HMI (FPTN=VLP_HMI, IO=NO, CTXSIZE=2, STCLASS=CONSTANT);
     1208      671        %VLP_HMI (FPTN=VLP@HMI, STCLASS=AUTO);
     1209      687
     1210      688 S      %INCLUDE KV_GLBCNS_E;
     1211      689 S      %INCLUDE KV$GLB;
     1212      690        %INCLUDE KV_GLB;
     1213      713 S      %INCLUDE KV$GLBCTX;
     1214      714 S      %INCLUDE KV$VDH;
     1215      715        %KV#CQ_HNDID_E;
     1216      720        %KV_CQ;
     1217      736        %KV$USRPRM;
     1218      787        %KV$VDH_VDHINT(STCLASS = );
     1219      806
     1220      807    1   DCL KVB$INT ENTRY(1) ALTRET;
     1221      808
     1222      809        /* Now call other initializers that need it */
     1223      810    1      CALL KVB$INT(KV$VDH_VDHINT);
     1224      811        /* Set up the circular Qs for conversing with the monitor
     1225      812        and session layer */
     1226      813    1      FPT@GETDCB = FPT_GETDCB;
     1227      814    1      FPT@GETDCB.DCBNUM_ = VECTOR (DCB#);
     1228      815    1      VLP@HMI = VLP_HMI;
     1229      816    1      FPT@OPEN_CQ = FPT_OPEN_CQ;
     1230      817    1      VBASE (FPT@OPEN_CQ.V_) = ADDR (FPT@OPEN_CQ.V);
     1231      818    1      VBASE (FPT@OPEN_CQ.HMI_) = ADDR (VLP@HMI);
     1232      819    1      VLP@HMI.SCQSIZE = KV$VDH_VDHINT.SNDCQ_BYTSIZ;
     1233      820    1      VLP@HMI.RCQSIZE = KV$VDH_VDHINT.RCVCQ_BYTSIZ;
     1234      821
     1235      822    1      CALL M$GETDCB (FPT@GETDCB)
PL6.E3A0      #002=KVV$VDHINT File=KVV$VDI.:E05TSI                               WED 07/30/97 02:17 Page:168  
     1236      823    2      WHENALTRETURN DO;
     1237      824    2         ALTRETURN;
     1238      825    2      END; /* END WHENALTRETURN DO */
     1239      826
     1240      827    1      KV_FPT_WRTMLT.V.DCB# = DCB#;
     1241      828    1      FPT@OPEN_CQ.V.DCB# = DCB#;
     1242      829
     1243      830    1      CALL M$OPEN(FPT@OPEN_CQ)
     1244      831
     1245      832    2      WHENRETURN DO;
     1246      833    2         KV_SNDCQ_QHDR$ = G$HAND_Q$;
     1247      834    2         KV_RCVCQ$ = PINCRW(G$HAND_Q$, KNH_QHDR.RCQ.OFFSET);
     1248      835    2         RETURN;
     1249      836    2      END; /* END WHENRETURN DO */
     1250      837
     1251      838    2      WHENALTRETURN DO;
     1252      839    2         ALTRETURN;
     1253      840    2      END; /* END WHENALTRETURN DO */
     1254      841    1   END;

PL6.E3A0      #002=KVV$VDHINT File=KVV$VDI.:E05TSI                               WED 07/30/97 02:17 Page:169  
--  Include file information  --

   KV_GLB.:E05TOU  is referenced.
   KNH_MACRO_C.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is referenced.
   KV$USR.:E05TOU  was found in the system file and is never referenced.
   KV$SND.:E05TOU  was found in the system file and is never referenced.
   KV$INT.:E05TOU  was found in the system file and is never referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KVV$VDHINT.

   Procedure KVV$VDHINT requires 116 words for executable code.
   Procedure KVV$VDHINT requires 73 words of local(AUTO) storage.

    No errors detected in file KVV$VDI.:E05TSI    .

PL6.E3A0      #002=KVV$VDHINT File=KVV$VDI.:E05TSI                               WED 07/30/97 02:17 Page:170  

 Object Unit name= KVV$VDHINT                                 File name= KVV$VDI.:E05TOU
 UTS= JUL 30 '97 02:17:11.96 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS     66     42  KVV$VDHINT
    1   Proc  even  none   116     74  KVV$VDHINT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        1  KVV$VDHINT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 KVB$INT
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_AALT
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     G$HAND_Q$                             KV_FPT_WRTMLT                         KV_CQ_HNDSBR$
     KV_RCVCQ$                             KV_SNDCQ_QHDR$                   r    G$ROS$
PL6.E3A0      #002=KVV$VDHINT File=KVV$VDI.:E05TSI                               WED 07/30/97 02:17 Page:171  


     1162        1        /*T***********************************************************/
     1163        2        /*T*                                                         */
     1164        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1165        4        /*T*                                                         */
     1166        5        /*T***********************************************************/
     1167        6        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IND=0,IAD=3 */
     1168        7        KVV$VDHINT: PROC(KV$VDH_VDHINT) ALTRET;

      7   1 000000  D380 0000 0000  xent KVV$VDHINT      LNJ,B5   X6A_AUTO_1
          1 000003       0049 0001                       DC       73,1

     1169        8        /*F* NAME: KVV$VDHINT - Initialize VDH Buffers and the Circular Queue
     1170        9        The KVV$VDHINT routine is to be called by the handler to initialize
     1171       10        VDH context and buffer pools.
     1172       11
     1173       12        The system default memory pool, which is zero, is initialized by
     1174       13        this routine.
     1175       14        This routine will also create a DCB, M$CQ, that VDH may use to write
     1176       15        messages to the handler's circular queue, and open that DCB.
     1177       16        The alternate return will be taken if the DCB cannot be created or
     1178       17        opened.
     1179       18
     1180       19        The form of this call is:
     1181       20
     1182       21             CALL KVV$VDHINT(kv$vdh_vdhint) ALTRET(label);
     1183       22
     1184       23        where:
     1185       24        */
     1186       25        /*K* kv$vdh_vdhint - is a structure that contains all the necessary
     1187       26        information required to initialize the default memory pool and the
     1188       27        circular queue.
     1189       28
     1190       29        The KV$VDH_VDHINT macro is to be used to generate this structure.
     1191       30        Please refer to the description of that macro for details.
     1192       31        */
     1193       32
PL6.E3A0      #002=KVV$VDHINT File=KVV$VDI.:E05TSI                               WED 07/30/97 02:17 Page:172  
     1194       33    1   DCL G$HAND_Q$ PTR SYMREF;
     1195       34
     1196       35        %INCLUDE LCP_6;
     1197      226        %FPT_GETDCB (FPTN=FPT_GETDCB, DCBNAME=VLP_NAME_M$CQ, STCLASS=CONSTANT);
     1198      246        %FPT_GETDCB (FPTN=FPT@GETDCB, STCLASS=AUTO);
     1199      266    1   DCL DCB# UBIN AUTO;
     1200      267        %VLP_NAME (FPTN = VLP_NAME_M$CQ, NAME = 'M$CQ', LEN = 4, STCLASS = CONSTANT);
     1201      282        %FPT_OPEN (FPTN=FPT_OPEN_CQ, ORG=CQ, HMI=VLP_HMI, STCLASS=CONSTANT);
     1202      310        %FPT_OPEN (FPTN=FPT@OPEN_CQ, STCLASS=AUTO);
     1203      338        %FPT_WRTMLT (FPTN = KV_FPT_WRTMLT, STCLASS = SYMREF);
     1204      358
     1205      359        %INCLUDE KNH_MACRO_C;
     1206      642        %KNH$QHDR (FPTN = KNH_QHDR, STCLASS = "BASED(G$HAND_Q$)");
     1207      655        %VLP_HMI (FPTN=VLP_HMI, IO=NO, CTXSIZE=2, STCLASS=CONSTANT);
     1208      671        %VLP_HMI (FPTN=VLP@HMI, STCLASS=AUTO);
     1209      687
     1210      688 S      %INCLUDE KV_GLBCNS_E;
     1211      689 S      %INCLUDE KV$GLB;
     1212      690        %INCLUDE KV_GLB;
     1213      713 S      %INCLUDE KV$GLBCTX;
     1214      714 S      %INCLUDE KV$VDH;
     1215      715        %KV#CQ_HNDID_E;
     1216      720        %KV_CQ;
     1217      736        %KV$USRPRM;
     1218      787        %KV$VDH_VDHINT(STCLASS = );
     1219      806
     1220      807    1   DCL KVB$INT ENTRY(1) ALTRET;
     1221      808
     1222      809        /* Now call other initializers that need it */
     1223      810    1      CALL KVB$INT(KV$VDH_VDHINT);

    810   1 000005  BBC7 0004                            LAB,B3   @KV$VDH_VDHINT,AUTO
          1 000007  CBF0 0100                            LAB,B4   256,IMO
          1 000009  E380 0000 0000  xent                 LNJ,B6   KVB$INT
          1 00000C       0001                            DC       s:813,PREL

     1224      811        /* Set up the circular Qs for conversing with the monitor
PL6.E3A0      #002=KVV$VDHINT File=KVV$VDI.:E05TSI                               WED 07/30/97 02:17 Page:173  
     1225      812        and session layer */
     1226      813    1      FPT@GETDCB = FPT_GETDCB;

    813   1 00000D  AB80 0000 0000  00                   LAB,B2   FPT_GETDCB
          1 000010  2C00                                 LDV,R2   0
          1 000011  6C18                                 LDV,R6   24
          1 000012  BB87                                 LAB,B3   ,AUTO
          1 000013  3C0C                                 LDV,R3   12
          1 000014  0008                                 MMM

     1227      814    1      FPT@GETDCB.DCBNUM_ = VECTOR (DCB#);

    814   1 000015  EBC7 0012                            LAB,B6   DCB#,AUTO
          1 000017  EFC7 0047                            STB,B6   VLP@HMI+5,AUTO
          1 000019  6C01                                 LDV,R6   1
          1 00001A  EF47 0046                            STR,R6   VLP@HMI+4,AUTO
          1 00001C  ABC7 0046                            LAB,B2   VLP@HMI+4,AUTO
          1 00001E  2C00                                 LDV,R2   0
          1 00001F  6C06                                 LDV,R6   6
          1 000020  BB87                                 LAB,B3   ,AUTO
          1 000021  3C18                                 LDV,R3   24
          1 000022  0008                                 MMM

     1228      815    1      VLP@HMI = VLP_HMI;

    815   1 000023  AB80 0000 0000  00                   LAB,B2   FPT_GETDCB
          1 000026  2C7C                                 LDV,R2   124
          1 000027  6C08                                 LDV,R6   8
          1 000028  BBC7 0042                            LAB,B3   VLP@HMI,AUTO
          1 00002A  3C00                                 LDV,R3   0
          1 00002B  0008                                 MMM

     1229      816    1      FPT@OPEN_CQ = FPT_OPEN_CQ;

    816   1 00002C  AB80 0000 0000  00                   LAB,B2   FPT_GETDCB
          1 00002F  2C1E                                 LDV,R2   30
          1 000030  6C5E                                 LDV,R6   94
PL6.E3A0      #002=KVV$VDHINT File=KVV$VDI.:E05TSI                               WED 07/30/97 02:17 Page:174  
          1 000031  BB87                                 LAB,B3   ,AUTO
          1 000032  3C26                                 LDV,R3   38
          1 000033  0008                                 MMM

     1230      817    1      VBASE (FPT@OPEN_CQ.V_) = ADDR (FPT@OPEN_CQ.V);

    817   1 000034  EBC7 003A                            LAB,B6   FPT@OPEN_CQ+39,AUTO
          1 000036  EFC7 0014                            STB,B6   FPT@OPEN_CQ+1,AUTO

     1231      818    1      VBASE (FPT@OPEN_CQ.HMI_) = ADDR (VLP@HMI);

    818   1 000038  DBC7 0042                            LAB,B5   VLP@HMI,AUTO
          1 00003A  DFC7 0017                            STB,B5   FPT@OPEN_CQ+4,AUTO

     1232      819    1      VLP@HMI.SCQSIZE = KV$VDH_VDHINT.SNDCQ_BYTSIZ;

    819   1 00003C  CCC7 0004                            LDB,B4   @KV$VDH_VDHINT,AUTO
          1 00003E  E844 0007                            LDR,R6   7,B4
          1 000040  EF47 0042                            STR,R6   VLP@HMI,AUTO

     1233      820    1      VLP@HMI.RCQSIZE = KV$VDH_VDHINT.RCVCQ_BYTSIZ;

    820   1 000042  D844 0006                            LDR,R5   6,B4
          1 000044  DF47 0043                            STR,R5   VLP@HMI+1,AUTO

     1234      821
     1235      822    1      CALL M$GETDCB (FPT@GETDCB)

    822   1 000046  BBC7 0006                            LAB,B3   FPT@GETDCB,AUTO
          1 000048  B870 0D45                            LDR,R3   3397,IMO
          1 00004A  0001                                 MCL
          1 00004B       0003                            DC       s:824,PREL
          1 00004C  0F81 0004                            B        s:827,PREL

     1236      823    2      WHENALTRETURN DO;

     1237      824    2         ALTRETURN;
PL6.E3A0      #002=KVV$VDHINT File=KVV$VDI.:E05TSI                               WED 07/30/97 02:17 Page:175  

    824   1 00004E  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

     1238      825    2      END; /* END WHENALTRETURN DO */
     1239      826
     1240      827    1      KV_FPT_WRTMLT.V.DCB# = DCB#;

    827   1 000051  E847 0012                            LDR,R6   DCB#,AUTO
          1 000053  E780 0000 000C  xsym                 STH,R6   KV_FPT_WRTMLT+12

     1241      828    1      FPT@OPEN_CQ.V.DCB# = DCB#;

    828   1 000056  E7C7 003A                            STH,R6   FPT@OPEN_CQ+39,AUTO

     1242      829
     1243      830    1      CALL M$OPEN(FPT@OPEN_CQ)

    830   1 000058  BBC7 0013                            LAB,B3   FPT@OPEN_CQ,AUTO
          1 00005A  B870 3540                            LDR,R3   13632,IMO
          1 00005C  0001                                 MCL
          1 00005D       0014                            DC       s:839,PREL

     1244      831
     1245      832    2      WHENRETURN DO;

     1246      833    2         KV_SNDCQ_QHDR$ = G$HAND_Q$;

    833   1 00005E  EC80 0000 0000  xsym                 LDB,B6   G$HAND_Q$
          1 000061  EF80 0000 0000  xsym                 STB,B6   KV_SNDCQ_QHDR$

     1247      834    2         KV_RCVCQ$ = PINCRW(G$HAND_Q$, KNH_QHDR.RCQ.OFFSET);

    834   1 000064  B846 0003                            LDR,R3   3,B6
          1 000066  F853                                 LDR,R7   R3
          1 000067  6C00                                 LDV,R6   0
          1 000068  8400 0000 0000  xsym                 AID      G$HAND_Q$
          1 00006B  8D00 0000 0000  xsym                 SDI      KV_RCVCQ$
PL6.E3A0      #002=KVV$VDHINT File=KVV$VDI.:E05TSI                               WED 07/30/97 02:17 Page:176  

     1248      835    2         RETURN;

    835   1 00006E  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1249      836    2      END; /* END WHENRETURN DO */
     1250      837
     1251      838    2      WHENALTRETURN DO;

     1252      839    2         ALTRETURN;

    839   1 000071  C380 0000 0000  xent                 LNJ,B4   X6A_AALT
     1253      840    2      END; /* END WHENALTRETURN DO */
     1254      841    1   END;

PL6.E3A0      #002=KVV$VDHINT File=KVV$VDI.:E05TSI                               WED 07/30/97 02:17 Page:177  
--  Include file information  --

   KV_GLB.:E05TOU  is referenced.
   KNH_MACRO_C.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is referenced.
   KV$USR.:E05TOU  was found in the system file and is never referenced.
   KV$SND.:E05TOU  was found in the system file and is never referenced.
   KV$INT.:E05TOU  was found in the system file and is never referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KVV$VDHINT.
PL6.E3A0      #002=KVV$VDHINT File=KVV$VDI.:E05TSI                               WED 07/30/97 02:17 Page:178  

 **** Variables and constants ****

  ****  Section 000 RoData KVV$VDHINT

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(192)   r     1 FPT_GETDCB                 F-0-0/w STRC(752)   r     1 FPT_OPEN_CQ
    3E-0-0/w STRC(64)    r     1 VLP_HMI                    C-0-0/c STRC(40)    r     1 VLP_NAME_M$CQ

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @KV$VDH_VDHINT            12-0-0/w UBIN(16)    r     1 DCB#
     6-0-0/w STRC(192)   r     1 FPT@GETDCB                13-0-0/w STRC(752)   r     1 FPT@OPEN_CQ
    *0-0-0/w STRC(128)   r     1 KV$VDH_VDHINT             42-0-0/w STRC(64)    r     1 VLP@HMI

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 G$HAND_Q$
     0-0-0/w EPTR        r     1 KV_CQ_HNDSBR$(0:2)
     0-0-0/w STRC(207)   r     1 KV_FPT_WRTMLT              0-0-0/w PTR         r     1 KV_RCVCQ$
     0-0-0/w PTR         r     1 KV_SNDCQ_QHDR$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(384)   r     1 KNH_QHDR

PL6.E3A0      #002=KVV$VDHINT File=KVV$VDI.:E05TSI                               WED 07/30/97 02:17 Page:179  

   Procedure KVV$VDHINT requires 116 words for executable code.
   Procedure KVV$VDHINT requires 73 words of local(AUTO) storage.

    No errors detected in file KVV$VDI.:E05TSI    .
PL6.E3A0      #002=KVV$VDHINT File=KVV$VDI.:E05TSI                               WED 07/30/97 02:17 Page:180  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=KVV$VDHINT File=KVV$VDI.:E05TSI                               WED 07/30/97 02:17 Page:181  
          MINI XREF LISTING

DCB#
       266**DCL       814--ASSIGN    827>>ASSIGN    828>>ASSIGN
FPT@GETDCB
       259**DCL       813<<ASSIGN    822<>CALL
FPT@GETDCB.DCBNUM_
       261**DCL       814<<ASSIGN
FPT@OPEN_CQ
       323**DCL       816<<ASSIGN    830<>CALL
FPT@OPEN_CQ.HMI_
       325**DCL       818<<ASSIGN
FPT@OPEN_CQ.V
       331**DCL       817--ASSIGN
FPT@OPEN_CQ.V.DCB#
       331**DCL       828<<ASSIGN
FPT@OPEN_CQ.V_
       325**DCL       817<<ASSIGN
FPT_GETDCB
       239**DCL       813>>ASSIGN
FPT_GETDCB.V
       243**DCL       241--DCLINIT
FPT_OPEN_CQ
       295**DCL       816>>ASSIGN
FPT_OPEN_CQ.V
       303**DCL       297--DCLINIT
G$HAND_Q$
        33**DCL       643--IMP-PTR   833>>ASSIGN    834>>ASSIGN    834>>ASSIGN
KNH_QHDR.RCQ
       643**DCL       643--REDEF
KNH_QHDR.RCQ.OFFSET
       643**DCL       834>>ASSIGN
KV$VDH_VDHINT
       800**DCL         7--PROC      810<>CALL
PL6.E3A0      #002=KVV$VDHINT File=KVV$VDI.:E05TSI                               WED 07/30/97 02:17 Page:182  
KV$VDH_VDHINT.RCVCQ_BYTSIZ
       804**DCL       820>>ASSIGN
KV$VDH_VDHINT.SNDCQ_BYTSIZ
       804**DCL       819>>ASSIGN
KVB$INT
       807**DCL-ENT   810--CALL
KV_FPT_WRTMLT.V.DCB#
       356**DCL       827<<ASSIGN
KV_RCVCQ$
       733**DCL       834<<ASSIGN
KV_SNDCQ_QHDR$
       733**DCL       833<<ASSIGN
M$GETDCB
       208**DCL-ENT   822--CALL
M$OPEN
       207**DCL-ENT   830--CALL
VLP@HMI
       684**DCL       815<<ASSIGN    818--ASSIGN
VLP@HMI.RCQSIZE
       684**DCL       820<<ASSIGN
VLP@HMI.SCQSIZE
       684**DCL       819<<ASSIGN
VLP_HMI
       668**DCL       297--DCLINIT   815>>ASSIGN
VLP_NAME_M$CQ
       280**DCL       241--DCLINIT
