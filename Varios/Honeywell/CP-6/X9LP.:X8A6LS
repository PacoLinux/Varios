VERSION A06

PL6.E3A0      #001=X9LP$PRINT File=X9LP.:X8A6TSI                                 SAT 08/09/97 10:56 Page:1    
        1        1        /*M* X9LP$PRINT -- Display string on the output device (CP-6)   */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*P*
        9        9
       10       10
       11       11              NAME: X9LP$PRINT
       12       12           PURPOSE: To call a system output routine to output a string
       13       13                    upon a specified device.
       14       14
       15       15        */
       16       16        /*D*
       17       17
       18       18              NAME: X9LP$PRINT
       19       19              CALL: CALL X9LP$PRINT (output_string, length, display_code);
       20       20
       21       21             INPUT: OUTPUT_BUFFER -- string to be displayed.
       22       22                    LENGTH        -- length of the string to be display.
       23       23                    DISPLAY_CODE  -- type of display to perform.
       24       24
       25       25            OUTPUT: None
       26       26           SCRATCH: None
       27       27         REFERENCE: Module X8LC$DOCUMENT
       28       28
       29       29        */
       30       30        %EJECT;
PL6.E3A0      #001=X9LP$PRINT File=X9LP.:X8A6TSI                                 SAT 08/09/97 10:56 Page:2    
       31       31        /*--------*/
       32       32        X9LP$PRINT:            PROC (OUTPUT_BUFFER, LENGTH, DISPLAY_CODE);
       33       33        /*--------*/
       34       34
       35       35            %INCLUDE X8A_SYS_FILE ;
       36     6305            %INCLUDE X8A_LIBCOM ;
       37     6525            %INCLUDE X8A_MACROS;
       38     6782
       39     6783    1       DCL OUTPUT_BUFFER         CHAR (LENGTH);
       40     6784    1       DCL LENGTH                UBIN WORD;
       41     6785    1       DCL DISPLAY_CODE          UBIN WORD;
       42     6786    1       DCL TEMP_LENGTH           UBIN WORD;
       43     6787    1       DCL ONE_LINE              CHAR(1);
       44     6788    1       DCL OUTPUT_BUFFER_TEMP    CHAR (133);
       45     6789    1       DCL NULL_PRINT            CHAR(1);
       46     6790    1       DCL X9LP$GETDCB#          ENTRY;
       47     6791
       48     6792
       49     6793
       50     6794        %FPT_WRITE (FPTN=WRTMENOADV, VFC=YES,  BP = YES );
       51     6825
       52     6826        %FPT_KEYIN (FPTN=WRTMEOCONSL, WHO=W );
       53     6845
       54     6846        %FPT_WRITE (FPTN=WRTMEADV, VFC=YES );
       55     6877        %EJECT;
PL6.E3A0      #001=X9LP$PRINT File=X9LP.:X8A6TSI                                 SAT 08/09/97 10:56 Page:3    
       56     6878        /*V*                   Get_DCB
       57     6879
       58     6880                On the first call to X9LP,  the DCB for M$LO needs to be
       59     6881                assigned.  Fill in this DCB number for Display and for
       60     6882                Display with No Advancing.
       61     6883        */
       62     6884
       63     6885    1       IF NOT  LIBCOM.M_LO_ASSIGNED THEN
       64     6886    2         DO;
       65     6887    2           LIBCOM.M_LO_ASSIGNED = %TRUE;
       66     6888    2           CALL X9LP$GETDCB#;
       67     6889    2         END;
       68     6890    1       WRTMEADV.V.DCB# = LIBCOM.M_LO;
       69     6891    1       WRTMENOADV.V.DCB# = LIBCOM.M_LO;
       70     6892        %EJECT;
PL6.E3A0      #001=X9LP$PRINT File=X9LP.:X8A6TSI                                 SAT 08/09/97 10:56 Page:4    
       71     6893        /*V*                   VFC_Check
       72     6894
       73     6895                Check the Cobol-74 option (LIBCOM.COBOL-74);  if it is
       74     6896                on we will use a lowercase 'a'  as the vfc.  Otherwise, the
       75     6897                vfc will be an uppercase 'A'.  In all cases, the vfc for
       76     6898                Display With No Advancing with be an at-sign '@'.
       77     6899        */
       78     6900
       79     6901    1       IF LIBCOM.COBOL_74 THEN
       80     6902    2         DO;
       81     6903    2           ONE_LINE = 'a';              /* VFC IS SMALL A FOR COBOL_74 */
       82     6904    2           NULL_PRINT = 'a';
       83     6905    2         END;
       84     6906    1       ELSE
       85     6907    2         DO;
       86     6908    2           ONE_LINE = 'A';
       87     6909    2           NULL_PRINT = 'A';
       88     6910    2         END;
       89     6911        %EJECT;
PL6.E3A0      #001=X9LP$PRINT File=X9LP.:X8A6TSI                                 SAT 08/09/97 10:56 Page:5    
       90     6912    2   DO CASE (DISPLAY_CODE);
       91     6913
       92     6914        /*V*
       93     6915
       94     6916                            SYSOUT
       95     6917             If the option bit is set for SYSOUT , simply write using M$WRITE.
       96     6918
       97     6919        */
       98     6920
       99     6921    2     CASE (%DISPLAY_SYSOUT);
      100     6922
      101     6923    2       IF LIBCOM.PREVIOUS_NO_ADVANCE THEN
      102     6924    3         DO;
      103     6925    3           LIBCOM.PREVIOUS_NO_ADVANCE = %FALSE;
      104     6926    3           CALL CONCAT (OUTPUT_BUFFER_TEMP, '@', OUTPUT_BUFFER);
      105     6927    3           WRTMEADV.BUF_ = VECTOR (SUBSTR (OUTPUT_BUFFER_TEMP, 0, LENGTH + 1));
      106     6928    3           CALL M$WRITE (WRTMEADV);
      107     6929    3           WRTMEADV.BUF_ = VECTOR (NULL_PRINT);
      108     6930    3           CALL M$WRITE (WRTMEADV);
      109     6931    3         END;
      110     6932    2       ELSE
      111     6933    3         DO;
      112     6934    3           CALL CONCAT (OUTPUT_BUFFER_TEMP, ONE_LINE, OUTPUT_BUFFER);
      113     6935    3           WRTMEADV.BUF_ = VECTOR (SUBSTR (OUTPUT_BUFFER_TEMP, 0, LENGTH + 1));
      114     6936    3           CALL M$WRITE (WRTMEADV);
      115     6937    3         END;
      116     6938        %EJECT;
PL6.E3A0      #001=X9LP$PRINT File=X9LP.:X8A6TSI                                 SAT 08/09/97 10:56 Page:6    
      117     6939        /*V*                   Display_No_Advancing
      118     6940
      119     6941             If the option bit is set for DISPLAY on sysout WITH NO ADVANCING,
      120     6942             then insert the '@' at the front of the output string and write
      121     6943             it via M$WRITE.
      122     6944        */
      123     6945
      124     6946    2     CASE (%DISPLAY_NO_ADVANCING);
      125     6947
      126     6948    2       CALL CONCAT (OUTPUT_BUFFER_TEMP, '@', OUTPUT_BUFFER) ;
      127     6949    2       WRTMENOADV.BUF_ = VECTOR (SUBSTR (OUTPUT_BUFFER_TEMP, 0, LENGTH + 1)) ;
      128     6950    2       CALL M$WRITE (WRTMENOADV) ;
      129     6951    2       LIBCOM.PREVIOUS_NO_ADVANCE = %TRUE ;
      130     6952
      131     6953        %EJECT;
PL6.E3A0      #001=X9LP$PRINT File=X9LP.:X8A6TSI                                 SAT 08/09/97 10:56 Page:7    
      132     6954        /*V*
      133     6955
      134     6956                            CONSOLE
      135     6957             If the option bit is set for the CONSOLE, take the first 72 characters
      136     6958             and write them to the console using the M$KEYIN facility.
      137     6959
      138     6960        */
      139     6961
      140     6962    2     CASE (%DISPLAY_CONSOLE);                                   /*31940*/
      141     6963
      142     6964    2       WRTMEOCONSL.MESS_ = VECTOR(SUBSTR(OUTPUT_BUFFER,0,LENGTH));
      143     6965    2       CALL M$KEYIN(WRTMEOCONSL);
      144     6966    2   END;  /* case display_code */
      145     6967
      146     6968    1   END X9LP$PRINT;  /* proc */
      147     6969        %EJECT;
PL6.E3A0      #001=X9LP$PRINT File=X9LP.:X8A6TSI                                 SAT 08/09/97 10:56 Page:8    
      148     6970        %EOD;

PL6.E3A0      #001=X9LP$PRINT File=X9LP.:X8A6TSI                                 SAT 08/09/97 10:56 Page:9    
--  Include file information  --

   X8A_COM_MACS.:X8A6TOU  is referenced.
   X8A_MACROS.:X8A6TOU  is referenced.
   X8A_LIBCOM.:X8A6TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:LIB_E04  is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
   Z9A_FLAGS.:Z8A6TOU  is referenced.
   X8A_SYS_FILE.:X8A6TOU  is referenced.
      No diagnostics issued in procedure X9LP$PRINT.

   Procedure X9LP$PRINT requires 122 words for executable code.
   Procedure X9LP$PRINT requires 82 words of local(AUTO) storage.

PL6.E3A0      #001=X9LP$PRINT File=X9LP.:X8A6TSI                                 SAT 08/09/97 10:56 Page:10   

 Object Unit name= X9LP$PRINT                                 File name= X9LP.:X8A6TOU
 UTS= AUG 09 '97 10:56:17.32 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  LblCom even  none    20     24  LIBCOM
    2  LblCom even  none     1      1  DEC_OR_COMMA
    3  LblCom even  none    20     24  IN_TEMP
    4  LblCom even  none     1      1  OVRCHR
    5  LblCom even  none     1      1  SELECT_TIME
    6  LblCom even  none     1      1  NO_ADVANCE_OFFSET
    7  LblCom even  none    18     22  DSPLY_SAVE
    8  LblCom even  none     3      3  D_DATE
    9  LblCom even  none     3      3  D_TIME
   10  LblCom even  none     1      1  D_DAY
   11  LblCom even  none     2      2  C_DATE
   12  LblCom even  none     2      2  C_TIME
   13  LblCom even  none     2      2  C_DAY
   14  LblCom even  none     1      1  RTHOLD2
   15  LblCom even  none     1      1  LTHOLD2
   16  LblCom even  none     1      1  NDX2
   17  LblCom even  none     1      1  IN_LEN
   18   Data  even  none    38     46  X9LP$PRINT
   19   Proc  even  none   122    172  X9LP$PRINT
   20  RoData even  none     2      2  X9LP$PRINT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    19      0   yes            yes      Std        3  X9LP$PRINT
PL6.E3A0      #001=X9LP$PRINT File=X9LP.:X8A6TSI                                 SAT 08/09/97 10:56 Page:11   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 X9LP$GETDCB#
                       nStd      0 X66_AUTO_3
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #001=X9LP$PRINT File=X9LP.:X8A6TSI                                 SAT 08/09/97 10:56 Page:12   


        1        1        /*M* X9LP$PRINT -- Display string on the output device (CP-6)   */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*P*
        9        9
       10       10
       11       11              NAME: X9LP$PRINT
       12       12           PURPOSE: To call a system output routine to output a string
       13       13                    upon a specified device.
       14       14
       15       15        */
       16       16        /*D*
       17       17
       18       18              NAME: X9LP$PRINT
       19       19              CALL: CALL X9LP$PRINT (output_string, length, display_code);
       20       20
       21       21             INPUT: OUTPUT_BUFFER -- string to be displayed.
       22       22                    LENGTH        -- length of the string to be display.
       23       23                    DISPLAY_CODE  -- type of display to perform.
       24       24
       25       25            OUTPUT: None
       26       26           SCRATCH: None
       27       27         REFERENCE: Module X8LC$DOCUMENT
       28       28
       29       29        */
       30       30        %EJECT;
PL6.E3A0      #001=X9LP$PRINT File=X9LP.:X8A6TSI                                 SAT 08/09/97 10:56 Page:13   
       31       31        /*--------*/
       32       32        X9LP$PRINT:            PROC (OUTPUT_BUFFER, LENGTH, DISPLAY_CODE);

     32 19 000000   000000 700200 xent  X9LP$PRINT   TSX0  ! X66_AUTO_3
        19 000001   000122 000003                    ZERO    82,3

       33       33        /*--------*/
       34       34
       35       35            %INCLUDE X8A_SYS_FILE ;
       36     6305            %INCLUDE X8A_LIBCOM ;
       37     6525            %INCLUDE X8A_MACROS;
       38     6782
       39     6783    1       DCL OUTPUT_BUFFER         CHAR (LENGTH);
       40     6784    1       DCL LENGTH                UBIN WORD;
       41     6785    1       DCL DISPLAY_CODE          UBIN WORD;
       42     6786    1       DCL TEMP_LENGTH           UBIN WORD;
       43     6787    1       DCL ONE_LINE              CHAR(1);
       44     6788    1       DCL OUTPUT_BUFFER_TEMP    CHAR (133);
       45     6789    1       DCL NULL_PRINT            CHAR(1);
       46     6790    1       DCL X9LP$GETDCB#          ENTRY;
       47     6791
       48     6792
       49     6793
       50     6794        %FPT_WRITE (FPTN=WRTMENOADV, VFC=YES,  BP = YES );
       51     6825
       52     6826        %FPT_KEYIN (FPTN=WRTMEOCONSL, WHO=W );
       53     6845
       54     6846        %FPT_WRITE (FPTN=WRTMEADV, VFC=YES );
       55     6877        %EJECT;
PL6.E3A0      #001=X9LP$PRINT File=X9LP.:X8A6TSI                                 SAT 08/09/97 10:56 Page:14   
       56     6878        /*V*                   Get_DCB
       57     6879
       58     6880                On the first call to X9LP,  the DCB for M$LO needs to be
       59     6881                assigned.  Fill in this DCB number for Display and for
       60     6882                Display with No Advancing.
       61     6883        */
       62     6884
       63     6885    1       IF NOT  LIBCOM.M_LO_ASSIGNED THEN

   6885 19 000002   000012 234000 1                  SZN     LIBCOM+10
        19 000003   000011 604000 19                 TMI     s:6890

       64     6886    2         DO;

       65     6887    2           LIBCOM.M_LO_ASSIGNED = %TRUE;

   6887 19 000004   400000 236003                    LDQ     -131072,DU
        19 000005   000012 756000 1                  STQ     LIBCOM+10

       66     6888    2           CALL X9LP$GETDCB#;

   6888 19 000006   000000 631400 20                 EPPR1   0
        19 000007   000000 701000 xent               TSX1    X9LP$GETDCB#
        19 000010   000000 011000                    NOP     0

       67     6889    2         END;

       68     6890    1       WRTMEADV.V.DCB# = LIBCOM.M_LO;

   6890 19 000011   000016 720000 1                  LXL0    LIBCOM+14
        19 000012   000042 740000 18                 STX0    WRTMEADV+8

       69     6891    1       WRTMENOADV.V.DCB# = LIBCOM.M_LO;

   6891 19 000013   000010 740000 18                 STX0    WRTMENOADV+8

       70     6892        %EJECT;
PL6.E3A0      #001=X9LP$PRINT File=X9LP.:X8A6TSI                                 SAT 08/09/97 10:56 Page:15   
       71     6893        /*V*                   VFC_Check
       72     6894
       73     6895                Check the Cobol-74 option (LIBCOM.COBOL-74);  if it is
       74     6896                on we will use a lowercase 'a'  as the vfc.  Otherwise, the
       75     6897                vfc will be an uppercase 'A'.  In all cases, the vfc for
       76     6898                Display With No Advancing with be an at-sign '@'.
       77     6899        */
       78     6900
       79     6901    1       IF LIBCOM.COBOL_74 THEN

   6901 19 000014   000000 234000 1                  SZN     LIBCOM
        19 000015   000022 605000 19                 TPL     s:6908

       80     6902    2         DO;

       81     6903    2           ONE_LINE = 'a';              /* VFC IS SMALL A FOR COBOL_74 */

   6903 19 000016   141000 236003                    LDQ     49664,DU
        19 000017   200054 756100                    STQ     ONE_LINE,,AUTO

       82     6904    2           NULL_PRINT = 'a';

   6904 19 000020   200117 756100                    STQ     NULL_PRINT,,AUTO

       83     6905    2         END;

   6905 19 000021   000025 710000 19                 TRA     s:6912

       84     6906    1       ELSE
       85     6907    2         DO;

       86     6908    2           ONE_LINE = 'A';

   6908 19 000022   101000 236003                    LDQ     33280,DU
        19 000023   200054 756100                    STQ     ONE_LINE,,AUTO

       87     6909    2           NULL_PRINT = 'A';
PL6.E3A0      #001=X9LP$PRINT File=X9LP.:X8A6TSI                                 SAT 08/09/97 10:56 Page:16   

   6909 19 000024   200117 756100                    STQ     NULL_PRINT,,AUTO

       88     6910    2         END;

       89     6911        %EJECT;
PL6.E3A0      #001=X9LP$PRINT File=X9LP.:X8A6TSI                                 SAT 08/09/97 10:56 Page:17   
       90     6912    2   DO CASE (DISPLAY_CODE);

   6912 19 000025   200005 470500                    LDP0    @DISPLAY_CODE,,AUTO
        19 000026   000000 235100                    LDA     0,,PR0
        19 000027   000004 115007                    CMPA    4,DL
        19 000030   000032 602005 19                 TNC     s:6912+5,AL
        19 000031   000171 710000 19                 TRA     s:6968
        19 000032   000171 710000 19                 TRA     s:6968
        19 000033   000036 710000 19                 TRA     s:6923
        19 000034   000127 710000 19                 TRA     s:6948
        19 000035   000157 710000 19                 TRA     s:6964

       91     6913
       92     6914        /*V*
       93     6915
       94     6916                            SYSOUT
       95     6917             If the option bit is set for SYSOUT , simply write using M$WRITE.
       96     6918
       97     6919        */
       98     6920
       99     6921    2     CASE (%DISPLAY_SYSOUT);

      100     6922
      101     6923    2       IF LIBCOM.PREVIOUS_NO_ADVANCE THEN

   6923 19 000036   000013 234000 1                  SZN     LIBCOM+11
        19 000037   000077 605000 19                 TPL     s:6934

      102     6924    3         DO;

      103     6925    3           LIBCOM.PREVIOUS_NO_ADVANCE = %FALSE;

   6925 19 000040   000013 450000 1                  STZ     LIBCOM+11

      104     6926    3           CALL CONCAT (OUTPUT_BUFFER_TEMP, '@', OUTPUT_BUFFER);

   6926 19 000041   200004 471500                    LDP1    @LENGTH,,AUTO
PL6.E3A0      #001=X9LP$PRINT File=X9LP.:X8A6TSI                                 SAT 08/09/97 10:56 Page:18   
        19 000042   100000 721100                    LXL1    0,,PR1
        19 000043   100000 236003                    LDQ     32768,DU
        19 000044   200055 756100                    STQ     OUTPUT_BUFFER_TEMP,,AUTO
        19 000045   200003 473500                    LDP3    @OUTPUT_BUFFER,,AUTO
        19 000046   040100 100540                    MLR     fill='040'O
        19 000047   300000 000011                    ADSC9   0,,PR3                   cn=0,n=*X1
        19 000050   200055 200204                    ADSC9   OUTPUT_BUFFER_TEMP,,AUTO cn=1,n=132

      105     6927    3           WRTMEADV.BUF_ = VECTOR (SUBSTR (OUTPUT_BUFFER_TEMP, 0, LENGTH + 1));

   6927 19 000051   200004 470500                    LDP0    @LENGTH,,AUTO
        19 000052   000000 720100                    LXL0    0,,PR0
        19 000053   000001 621010                    EAX1    1,X0
        19 000054   000000 635011                    EAA     0,X1
        19 000055   000002 771000                    ARL     2
        19 000056   000140 135007                    SBLA    96,DL
        19 000057   200120 452500                    STP2    NULL_PRINT+1,,AUTO
        19 000060   200120 236100                    LDQ     NULL_PRINT+1,,AUTO
        19 000061   000055 036003                    ADLQ    45,DU
        19 000062   000036 757000 18                 STAQ    WRTMEADV+4

      106     6928    3           CALL M$WRITE (WRTMEADV);

   6928 19 000063   000032 630400 18                 EPPR0   WRTMEADV
        19 000064   040001 713400                    CLIMB   write
        19 000065   401400 401760                    pmme    nvectors=4

      107     6929    3           WRTMEADV.BUF_ = VECTOR (NULL_PRINT);

   6929 19 000066   177640 235007                    LDA     65440,DL
        19 000067   200120 452500                    STP2    NULL_PRINT+1,,AUTO
        19 000070   200120 236100                    LDQ     NULL_PRINT+1,,AUTO
        19 000071   000117 036003                    ADLQ    79,DU
        19 000072   000036 757000 18                 STAQ    WRTMEADV+4

      108     6930    3           CALL M$WRITE (WRTMEADV);

PL6.E3A0      #001=X9LP$PRINT File=X9LP.:X8A6TSI                                 SAT 08/09/97 10:56 Page:19   
   6930 19 000073   000032 630400 18                 EPPR0   WRTMEADV
        19 000074   040001 713400                    CLIMB   write
        19 000075   401400 401760                    pmme    nvectors=4

      109     6931    3         END;

   6931 19 000076   000171 710000 19                 TRA     s:6968

      110     6932    2       ELSE
      111     6933    3         DO;

      112     6934    3           CALL CONCAT (OUTPUT_BUFFER_TEMP, ONE_LINE, OUTPUT_BUFFER);

   6934 19 000077   200004 471500                    LDP1    @LENGTH,,AUTO
        19 000100   100000 721100                    LXL1    0,,PR1
        19 000101   200054 236100                    LDQ     ONE_LINE,,AUTO
        19 000102   777000 376003                    ANQ     -512,DU
        19 000103   000001 276000 20                 ORQ     1
        19 000104   200055 756100                    STQ     OUTPUT_BUFFER_TEMP,,AUTO
        19 000105   200003 473500                    LDP3    @OUTPUT_BUFFER,,AUTO
        19 000106   040100 100540                    MLR     fill='040'O
        19 000107   300000 000011                    ADSC9   0,,PR3                   cn=0,n=*X1
        19 000110   200055 200204                    ADSC9   OUTPUT_BUFFER_TEMP,,AUTO cn=1,n=132

      113     6935    3           WRTMEADV.BUF_ = VECTOR (SUBSTR (OUTPUT_BUFFER_TEMP, 0, LENGTH + 1));

   6935 19 000111   200004 470500                    LDP0    @LENGTH,,AUTO
        19 000112   000000 720100                    LXL0    0,,PR0
        19 000113   000001 621010                    EAX1    1,X0
        19 000114   000000 635011                    EAA     0,X1
        19 000115   000002 771000                    ARL     2
        19 000116   000140 135007                    SBLA    96,DL
        19 000117   200120 452500                    STP2    NULL_PRINT+1,,AUTO
        19 000120   200120 236100                    LDQ     NULL_PRINT+1,,AUTO
        19 000121   000055 036003                    ADLQ    45,DU
        19 000122   000036 757000 18                 STAQ    WRTMEADV+4

PL6.E3A0      #001=X9LP$PRINT File=X9LP.:X8A6TSI                                 SAT 08/09/97 10:56 Page:20   
      114     6936    3           CALL M$WRITE (WRTMEADV);

   6936 19 000123   000032 630400 18                 EPPR0   WRTMEADV
        19 000124   040001 713400                    CLIMB   write
        19 000125   401400 401760                    pmme    nvectors=4

      115     6937    3         END;

   6937 19 000126   000171 710000 19                 TRA     s:6968

      116     6938        %EJECT;
PL6.E3A0      #001=X9LP$PRINT File=X9LP.:X8A6TSI                                 SAT 08/09/97 10:56 Page:21   
      117     6939        /*V*                   Display_No_Advancing
      118     6940
      119     6941             If the option bit is set for DISPLAY on sysout WITH NO ADVANCING,
      120     6942             then insert the '@' at the front of the output string and write
      121     6943             it via M$WRITE.
      122     6944        */
      123     6945
      124     6946    2     CASE (%DISPLAY_NO_ADVANCING);

      125     6947
      126     6948    2       CALL CONCAT (OUTPUT_BUFFER_TEMP, '@', OUTPUT_BUFFER) ;

   6948 19 000127   200004 471500                    LDP1    @LENGTH,,AUTO
        19 000130   100000 721100                    LXL1    0,,PR1
        19 000131   100000 236003                    LDQ     32768,DU
        19 000132   200055 756100                    STQ     OUTPUT_BUFFER_TEMP,,AUTO
        19 000133   200003 473500                    LDP3    @OUTPUT_BUFFER,,AUTO
        19 000134   040100 100540                    MLR     fill='040'O
        19 000135   300000 000011                    ADSC9   0,,PR3                   cn=0,n=*X1
        19 000136   200055 200204                    ADSC9   OUTPUT_BUFFER_TEMP,,AUTO cn=1,n=132

      127     6949    2       WRTMENOADV.BUF_ = VECTOR (SUBSTR (OUTPUT_BUFFER_TEMP, 0, LENGTH + 1)) ;

   6949 19 000137   200004 470500                    LDP0    @LENGTH,,AUTO
        19 000140   000000 720100                    LXL0    0,,PR0
        19 000141   000001 621010                    EAX1    1,X0
        19 000142   000000 635011                    EAA     0,X1
        19 000143   000002 771000                    ARL     2
        19 000144   000140 135007                    SBLA    96,DL
        19 000145   200120 452500                    STP2    NULL_PRINT+1,,AUTO
        19 000146   200120 236100                    LDQ     NULL_PRINT+1,,AUTO
        19 000147   000055 036003                    ADLQ    45,DU
        19 000150   000004 757000 18                 STAQ    WRTMENOADV+4

      128     6950    2       CALL M$WRITE (WRTMENOADV) ;

   6950 19 000151   000000 630400 18                 EPPR0   WRTMENOADV
PL6.E3A0      #001=X9LP$PRINT File=X9LP.:X8A6TSI                                 SAT 08/09/97 10:56 Page:22   
        19 000152   040001 713400                    CLIMB   write
        19 000153   401400 401760                    pmme    nvectors=4

      129     6951    2       LIBCOM.PREVIOUS_NO_ADVANCE = %TRUE ;

   6951 19 000154   400000 236003                    LDQ     -131072,DU
        19 000155   000013 756000 1                  STQ     LIBCOM+11
        19 000156   000171 710000 19                 TRA     s:6968

      130     6952
      131     6953        %EJECT;
PL6.E3A0      #001=X9LP$PRINT File=X9LP.:X8A6TSI                                 SAT 08/09/97 10:56 Page:23   
      132     6954        /*V*
      133     6955
      134     6956                            CONSOLE
      135     6957             If the option bit is set for the CONSOLE, take the first 72 characters
      136     6958             and write them to the console using the M$KEYIN facility.
      137     6959
      138     6960        */
      139     6961
      140     6962    2     CASE (%DISPLAY_CONSOLE);                                   /*31940*/

      141     6963
      142     6964    2       WRTMEOCONSL.MESS_ = VECTOR(SUBSTR(OUTPUT_BUFFER,0,LENGTH));

   6964 19 000157   200004 471500                    LDP1    @LENGTH,,AUTO
        19 000160   100000 721100                    LXL1    0,,PR1
        19 000161   000000 635011                    EAA     0,X1
        19 000162   000002 771000                    ARL     2
        19 000163   000140 135007                    SBLA    96,DL
        19 000164   200003 236100                    LDQ     @OUTPUT_BUFFER,,AUTO
        19 000165   000016 757000 18                 STAQ    WRTMEOCONSL+2

      143     6965    2       CALL M$KEYIN(WRTMEOCONSL);

   6965 19 000166   000014 630400 18                 EPPR0   WRTMEOCONSL
        19 000167   120000 713400                    CLIMB   40960
        19 000170   401400 401760                    pmme    nvectors=4

      144     6966    2   END;  /* case display_code */

      145     6967
      146     6968    1   END X9LP$PRINT;  /* proc */

   6968 19 000171   000000 702200 xent               TSX2  ! X66_ARET
      147     6969        %EJECT;
PL6.E3A0      #001=X9LP$PRINT File=X9LP.:X8A6TSI                                 SAT 08/09/97 10:56 Page:24   
      148     6970        %EOD;

PL6.E3A0      #001=X9LP$PRINT File=X9LP.:X8A6TSI                                 SAT 08/09/97 10:56 Page:25   
--  Include file information  --

   X8A_COM_MACS.:X8A6TOU  is referenced.
   X8A_MACROS.:X8A6TOU  is referenced.
   X8A_LIBCOM.:X8A6TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:LIB_E04  is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
   Z9A_FLAGS.:Z8A6TOU  is referenced.
   X8A_SYS_FILE.:X8A6TOU  is referenced.
      No diagnostics issued in procedure X9LP$PRINT.
PL6.E3A0      #001=X9LP$PRINT File=X9LP.:X8A6TSI                                 SAT 08/09/97 10:56 Page:26   

 **** Variables and constants ****

  ****  Section 001 LblCom LIBCOM

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(720)   r     1 LIBCOM

  ****  Section 002 LblCom DEC_OR_COMMA

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR              1 DEC_OR_COMMA

  ****  Section 003 LblCom IN_TEMP

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(80)          1 IN_TEMP

  ****  Section 004 LblCom OVRCHR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR              1 OVRCHR

  ****  Section 005 LblCom SELECT_TIME

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 SELECT_TIME

PL6.E3A0      #001=X9LP$PRINT File=X9LP.:X8A6TSI                                 SAT 08/09/97 10:56 Page:27   
  ****  Section 006 LblCom NO_ADVANCE_OFFSET

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 NO_ADVANCE_OFFSET

  ****  Section 007 LblCom DSPLY_SAVE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(72)          1 DSPLY_SAVE

  ****  Section 008 LblCom D_DATE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(10)          1 D_DATE

  ****  Section 009 LblCom D_TIME

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(11)          1 D_TIME

  ****  Section 010 LblCom D_DAY

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(3)           1 D_DAY

  ****  Section 011 LblCom C_DATE

PL6.E3A0      #001=X9LP$PRINT File=X9LP.:X8A6TSI                                 SAT 08/09/97 10:56 Page:28   
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(6)           1 C_DATE

  ****  Section 012 LblCom C_TIME

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(8)           1 C_TIME

  ****  Section 013 LblCom C_DAY

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(5)           1 C_DAY

  ****  Section 014 LblCom RTHOLD2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 RTHOLD2

  ****  Section 015 LblCom LTHOLD2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 LTHOLD2

  ****  Section 016 LblCom NDX2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #001=X9LP$PRINT File=X9LP.:X8A6TSI                                 SAT 08/09/97 10:56 Page:29   

     0-0-0/w SBIN              1 NDX2

  ****  Section 017 LblCom IN_LEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 IN_LEN

  ****  Section 018  Data  X9LP$PRINT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    32-0-0/d STRC(432)   r     1 WRTMEADV                   0-0-0/d STRC(432)   r     1 WRTMENOADV
    14-0-0/d STRC(504)   r     1 WRTMEOCONSL

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     5-0-0/w PTR         r     1 @DISPLAY_CODE              4-0-0/w PTR         r     1 @LENGTH
     3-0-0/w PTR         r     1 @OUTPUT_BUFFER            *0-0-0/w UBIN        r     1 DISPLAY_CODE
    *0-0-0/w UBIN        r     1 LENGTH                     6-0-0/w SBIN              1 LT
     7-0-0/c CHAR(65)          1 LTHOLD                    51-0-0/w SBIN              1 NDX
    52-0-0/w SBIN              1 NDX3                     117-0-0/c CHAR        r     1 NULL_PRINT
    54-0-0/c CHAR        r     1 ONE_LINE                  *0-0-0/c ACHR        r     1 OUTPUT_BUFFER
    55-0-0/c CHAR(133)   r     1 OUTPUT_BUFFER_TEMP        30-0-0/c CHAR(65)          1 RTHOLD
    53-0-0/w UBIN              1 TEMP_LENGTH

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

PL6.E3A0      #001=X9LP$PRINT File=X9LP.:X8A6TSI                                 SAT 08/09/97 10:56 Page:30   
     0-0-0N  NULL        r     1 M$UC


   Procedure X9LP$PRINT requires 122 words for executable code.
   Procedure X9LP$PRINT requires 82 words of local(AUTO) storage.

PL6.E3A0      #002=X9LP$GETDCB# File=X9LP.:X8A6TSI                               SAT 08/09/97 10:57 Page:31   
      149        1        /*T***********************************************************/
      150        2        /*T*                                                         */
      151        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      152        4        /*T*                                                         */
      153        5        /*T***********************************************************/
      154        6        X9LP$GETDCB#:  PROC;
      155        7
      156        8            %INCLUDE X8A_SYS_FILE;
      157     6278            %INCLUDE X8A_LIBCOM;
      158     6498
      159     6499            %VLP_NAME   (FPTN=MLO,NAME='M$LO');
      160     6526            %FPT_GETDCB (FPTN=SYSOUT,DCBNAME=MLO,DCBNUM=LIBCOM.M_LO,
      161     6527                         MERGE=YES);
      162     6542
      163     6543
      164     6544    1       CALL M$GETDCB( SYSOUT );
      165     6545
      166     6546
      167     6547    1   END X9LP$GETDCB#;  /* proc */
      168     6548
      169     6549        %EJECT;
PL6.E3A0      #002=X9LP$GETDCB# File=X9LP.:X8A6TSI                               SAT 08/09/97 10:57 Page:32   

PL6.E3A0      #002=X9LP$GETDCB# File=X9LP.:X8A6TSI                               SAT 08/09/97 10:57 Page:33   
--  Include file information  --

   X8A_LIBCOM.:X8A6TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:LIB_E04  is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
   Z9A_FLAGS.:Z8A6TOU  is referenced.
   X8A_SYS_FILE.:X8A6TOU  is referenced.
      No diagnostics issued in procedure X9LP$GETDCB#.

   Procedure X9LP$GETDCB# requires 6 words for executable code.
   Procedure X9LP$GETDCB# requires 40 words of local(AUTO) storage.

    No errors detected in file X9LP.:X8A6TSI    .

PL6.E3A0      #002=X9LP$GETDCB# File=X9LP.:X8A6TSI                               SAT 08/09/97 10:57 Page:34   

 Object Unit name= X9LP$GETDCB#                               File name= X9LP.:X8A6TOU
 UTS= AUG 09 '97 10:57:53.16 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  LblCom even  none    20     24  LIBCOM
    2  LblCom even  none     1      1  DEC_OR_COMMA
    3  LblCom even  none    20     24  IN_TEMP
    4  LblCom even  none     1      1  OVRCHR
    5  LblCom even  none     1      1  SELECT_TIME
    6  LblCom even  none     1      1  NO_ADVANCE_OFFSET
    7  LblCom even  none    18     22  DSPLY_SAVE
    8  LblCom even  none     3      3  D_DATE
    9  LblCom even  none     3      3  D_TIME
   10  LblCom even  none     1      1  D_DAY
   11  LblCom even  none     2      2  C_DATE
   12  LblCom even  none     2      2  C_TIME
   13  LblCom even  none     2      2  C_DAY
   14  LblCom even  none     1      1  RTHOLD2
   15  LblCom even  none     1      1  LTHOLD2
   16  LblCom even  none     1      1  NDX2
   17  LblCom even  none     1      1  IN_LEN
   18   Data  even  none    10     12  X9LP$GETDCB#
   19   Proc  even  none     6      6  X9LP$GETDCB#

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    19      0   yes            yes      Std        0  X9LP$GETDCB#
PL6.E3A0      #002=X9LP$GETDCB# File=X9LP.:X8A6TSI                               SAT 08/09/97 10:57 Page:35   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #002=X9LP$GETDCB# File=X9LP.:X8A6TSI                               SAT 08/09/97 10:57 Page:36   


      149        1        /*T***********************************************************/
      150        2        /*T*                                                         */
      151        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      152        4        /*T*                                                         */
      153        5        /*T***********************************************************/
      154        6        X9LP$GETDCB#:  PROC;

      6 19 000000   000000 700200 xent  X9LP$GETDCB# TSX0  ! X66_AUTO_0
        19 000001   000050 000000                    ZERO    40,0

      155        7
      156        8            %INCLUDE X8A_SYS_FILE;
      157     6278            %INCLUDE X8A_LIBCOM;
      158     6498
      159     6499            %VLP_NAME   (FPTN=MLO,NAME='M$LO');
      160     6526            %FPT_GETDCB (FPTN=SYSOUT,DCBNAME=MLO,DCBNUM=LIBCOM.M_LO,
      161     6527                         MERGE=YES);
      162     6542
      163     6543
      164     6544    1       CALL M$GETDCB( SYSOUT );

   6544 19 000002   000002 630400 18                 EPPR0   SYSOUT
        19 000003   060002 713400                    CLIMB   24578
        19 000004   401000 401760                    pmme    nvectors=3

      165     6545
      166     6546
      167     6547    1   END X9LP$GETDCB#;  /* proc */

   6547 19 000005   000000 702200 xent               TSX2  ! X66_ARET
      168     6548
      169     6549        %EJECT;
PL6.E3A0      #002=X9LP$GETDCB# File=X9LP.:X8A6TSI                               SAT 08/09/97 10:57 Page:37   

PL6.E3A0      #002=X9LP$GETDCB# File=X9LP.:X8A6TSI                               SAT 08/09/97 10:57 Page:38   
--  Include file information  --

   X8A_LIBCOM.:X8A6TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:LIB_E04  is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
   Z9A_FLAGS.:Z8A6TOU  is referenced.
   X8A_SYS_FILE.:X8A6TOU  is referenced.
      No diagnostics issued in procedure X9LP$GETDCB#.
PL6.E3A0      #002=X9LP$GETDCB# File=X9LP.:X8A6TSI                               SAT 08/09/97 10:57 Page:39   

 **** Variables and constants ****

  ****  Section 001 LblCom LIBCOM

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(720)   r     1 LIBCOM

  ****  Section 002 LblCom DEC_OR_COMMA

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR              1 DEC_OR_COMMA

  ****  Section 003 LblCom IN_TEMP

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(80)          1 IN_TEMP

  ****  Section 004 LblCom OVRCHR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR              1 OVRCHR

  ****  Section 005 LblCom SELECT_TIME

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 SELECT_TIME

PL6.E3A0      #002=X9LP$GETDCB# File=X9LP.:X8A6TSI                               SAT 08/09/97 10:57 Page:40   
  ****  Section 006 LblCom NO_ADVANCE_OFFSET

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 NO_ADVANCE_OFFSET

  ****  Section 007 LblCom DSPLY_SAVE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(72)          1 DSPLY_SAVE

  ****  Section 008 LblCom D_DATE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(10)          1 D_DATE

  ****  Section 009 LblCom D_TIME

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(11)          1 D_TIME

  ****  Section 010 LblCom D_DAY

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(3)           1 D_DAY

  ****  Section 011 LblCom C_DATE

PL6.E3A0      #002=X9LP$GETDCB# File=X9LP.:X8A6TSI                               SAT 08/09/97 10:57 Page:41   
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(6)           1 C_DATE

  ****  Section 012 LblCom C_TIME

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(8)           1 C_TIME

  ****  Section 013 LblCom C_DAY

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(5)           1 C_DAY

  ****  Section 014 LblCom RTHOLD2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 RTHOLD2

  ****  Section 015 LblCom LTHOLD2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 LTHOLD2

  ****  Section 016 LblCom NDX2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #002=X9LP$GETDCB# File=X9LP.:X8A6TSI                               SAT 08/09/97 10:57 Page:42   

     0-0-0/w SBIN              1 NDX2

  ****  Section 017 LblCom IN_LEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 IN_LEN

  ****  Section 018  Data  X9LP$GETDCB#

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(45)    r     1 MLO                        2-0-0/d STRC(288)   r     1 SYSOUT

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w SBIN              1 LT                         4-0-0/c CHAR(65)          1 LTHOLD
    46-0-0/w SBIN              1 NDX                       47-0-0/w SBIN              1 NDX3
    25-0-0/c CHAR(65)          1 RTHOLD

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0N  NULL        r     1 M$UC


   Procedure X9LP$GETDCB# requires 6 words for executable code.
   Procedure X9LP$GETDCB# requires 40 words of local(AUTO) storage.
PL6.E3A0      #002=X9LP$GETDCB# File=X9LP.:X8A6TSI                               SAT 08/09/97 10:57 Page:43   

    No errors detected in file X9LP.:X8A6TSI    .
