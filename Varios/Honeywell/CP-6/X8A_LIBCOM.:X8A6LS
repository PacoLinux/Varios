

09:06 AUG 09 '97 X8A_LIBCOM.:X8A6SI/X8A_LIBCOM.:X8A6TUI                    1    
    1      /*T***********************************************************/
    2      /*T*                                                         */
    3      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    4      /*T*                                                         */
    5      /*T***********************************************************/
    6      /*
    7                        Include file  X8A_LIBCOM
    8                common variables and equs for the  COBOL8x library
    9      */
   10
   11
   12      /*       The following variables are globally accessed by the
   13               library modules of the COBOL8x library
   14      */
   15
   16      /* If size of LIBCOM changes then change template in X9OS, too */
   17      DCL 1 LIBCOM    EXT ALIGNED,
   18            2 COBOL_74       BIT(1) ALIGNED,
   19            2 CONTINUE       BIT(1) ALIGNED,
   20            2 STATS          BIT(1) ALIGNED,
   21            2 KEEP           BIT(1) ALIGNED,  /* NESS TO KEEP DISPLAY  */
   22            2 SAVE           BIT(1) ALIGNED,  /* SAVE PREVIOUS CONS DISPLAY */
   23            2 NO_ADV         BIT(1) ALIGNED,  /* NO ADVANCE OPTION     */
   24            2 O_CONSOL       BIT(1) ALIGNED,  /* OPERATOR CONSOL OPT'N */
   25            2 COMMA_DECIMAL  BIT(1) ALIGNED,
   26            2 SLEW_ONE_LINE BIT(1) ALIGNED, /* BIT INDICATING SLEW A LINE*/
   27            2 FIRST_ACCT_CALL BIT(1) ALIGNED, /* DETERMINES IF DCB'S ARE BUILT*/
   28            2 M_LO_ASSIGNED  BIT(1) ALIGNED, /*DETERMINES IF DCB'S ARE BUILT*/
   29            2 PREVIOUS_NO_ADVANCE BIT(1) ALIGNED ,/* A PREVIOUS NO ADVANCE */
   30            2 RE_ENTER            BIT(1) ALIGNED ,/*RE_ENTER ERROR FLAG */
   31            2 ERROR_FLAG          BIT(1) ALIGNED ,
   32            2 M_LO                UBIN WORD ALIGNED,/*DCB # FOR M$LO */
   33            2 X1                  UBIN WORD ALIGNED,/*SAVE X1 FOR DELTA TRACE*/
   34            2 ERROR_SUPPRESS      BIT(1) ALIGNED,   /*SUPPRESS ERROR FOR X8DT */
   35            2 KANJI               BIT(1)  ALIGNED,
   36            2 USE_PROC            BIT(1) ALIGNED,
   37            2 EXIT_PROG_IN_DECL   BIT(1) ALIGNED;
09:06 AUG 09 '97 X8A_LIBCOM.:X8A6SI/X8A_LIBCOM.:X8A6TUI                    2    
   38      %EJECT;

09:06 AUG 09 '97 X8A_LIBCOM.:X8A6SI/X8A_LIBCOM.:X8A6TUI                    3    
   39          %EQU TRUE  = '1'B;
   40          %EQU FALSE = '0'B;
   41          %EQU YES   = '1'B;
   42          %EQU NO    = '0'B;
   43
   44      DCL DEC_OR_COMMA CHAR(1) EXT;
   45      DCL IN_TEMP      CHAR(80)  EXT ;/* INPUT VARIABLE FOR ACCEPT    */
   46      DCL OVRCHR       CHAR(1)   EXT ;/* CONTAINS THE OVERPUNCH CHAR  */
   47      DCL SELECT_TIME  UBIN WORD EXT ;/* WHICH OPTION IN ACCEPT(TIMES)*/
   48      DCL NO_ADVANCE_OFFSET UBIN WORD EXT;/* PREVIOUS OFFSET FOR DISPLAY NO ADVANCE */
   49      DCL DSPLY_SAVE   CHAR(72) EXT;  /* TEMP HOLDING SAVED DISPLAY   */
   50      DCL LT           SBIN WORD ;/* #PLACES TO LT. OF RADIX POINT*/
   51      DCL D_DATE       CHAR(10) EXT;
   52      DCL D_TIME       CHAR(11) EXT;
   53      DCL D_DAY        CHAR(3)  EXT;
   54      DCL C_DATE       CHAR(6) EXT;
   55      DCL C_TIME       CHAR(8) EXT;
   56      DCL C_DAY        CHAR(5) EXT;
   57      DCL LTHOLD       CHAR(65)  ;/* CHARS TO LT. OF POINT        */
   58      DCL RTHOLD       CHAR(65)  ;/* CHARS TO RT. OF POINT        */
   59      DCL RTHOLD2      UBIN WORD EXT;/* CONTAINS THE # OF DIGITS TO RT OF PT.*/
   60      DCL LTHOLD2      UBIN WORD EXT;/* CONTAINS THE # OF DIGITS TO LT OF PT.*/
   61      DCL NDX          SBIN WORD ;/* RESULT VAR FOR INDEX,SEARCH  */
   62      DCL NDX2         SBIN WORD EXT;/* RESULT VAR FOR INDEX,SEARCH  */
   63      DCL NDX3         SBIN WORD ;/* RESULT VAR FOR SEARCH        */
   64      DCL IN_LEN       UBIN WORD EXT;/* CONTAINS LENGTH OF VAR       */
   65
   66      %EQU CHAR_ZERO  = '0'    ; /* THE CHARACTER ZERO            */
   67      %EQU ZERO       = 0      ; /* THE CONSTANT ZERO             */
   68      %EQU OVERFLOW_CHECK = 0  ; /* THE FAULT CODE FOR OVERFLOW*/
   69      %EQU DIVIDE_CHECK   = 1  ; /* THE FAULT CODE FOR DIVIDE-CHECK*/
   70      %EQU ONE        = 1      ; /* THE CONSTANT ONE              */
   71      %EQU TWO        = 2      ; /* THE CONSTANT TWO              */
   72      %EQU THREE      = 3      ; /* THE CONSTANT THREE            */
   73      %EQU FOUR       = 4      ; /* THE CONSTANT FOUR             */
   74      %EQU EIGHT      = 8      ; /* THE CONSTANT EIGHT            */
   75      %EQU NINE       = 9      ; /* THE CONSTANT NINE             */
09:06 AUG 09 '97 X8A_LIBCOM.:X8A6SI/X8A_LIBCOM.:X8A6TUI                    4    
   76      %EJECT;

09:06 AUG 09 '97 X8A_LIBCOM.:X8A6SI/X8A_LIBCOM.:X8A6TUI                    5    
   77      /*
   78                             SIGN TYPES
   79                             ---- -----
   80      */
   81
   82      %EQU SIGN_DEFAULT                 = '00'B;
   83      %EQU FLOATING_POINT_LEADING_SIGN  = '00'B;
   84      %EQU LEADING_SIGN                 = '01'B;
   85      %EQU TRAILING_SIGN                = '10'B;
   86      %EQU NO_SIGN                      = '11'B;
   87
   88      %EQU NDSC4                         ='1'B;
   89      %EQU NDSC9                         ='0'B;
   90      %EJECT;

09:06 AUG 09 '97 X8A_LIBCOM.:X8A6SI/X8A_LIBCOM.:X8A6TUI                    6    
   91      /*
   92                       Accept  Codes
   93                       ------  -----
   94      */
   95
   96      %EQU ACCEPT_CONSOLE           = 1;
   97      %EQU ACCEPT_DEFAULT           = 2;
   98      %EQU ACCEPT_DATE              = 3;
   99      %EQU ACCEPT_TIME              = 4;
  100      %EQU ACCEPT_DAY               = 5;
  101      %EQU ACCEPT_DAY_OF_WEEK       = 6;
  102    * %EQU ACCEPT_DATE4             = 7;
  103    * %EQU ACCEPT_DAY4              = 8;
  104
  105
  106
  107
  108
  109      /*
  110                       Display Codes
  111                       ------- -----
  112      */
  113
  114      %EQU DISPLAY_SYSOUT            = 1;
  115      %EQU DISPLAY_NO_ADVANCING      = 2;
  116      %EQU DISPLAY_CONSOLE           = 3;
  117      %EQU DISPLAY_ERROR_MESSAGE     = 4;
  118
  119
  120
  121      /*
  122                             KANJI  characters
  123                             -----  ----------
  124      */
  125      %EQU A_REG = BITBIN('05'O) ; /* REG VALUE FOR A REGISTER */
  126
  127      %EQU KANJI_START  =  BITASC ('216'O);
09:06 AUG 09 '97 X8A_LIBCOM.:X8A6SI/X8A_LIBCOM.:X8A6TUI                    7    
  128      %EQU KANJI_END    =  BITASC ('217'O);
  129      %EQU KANJI_SPACE  =  BITASC ('241'O);
  130
  131      %EJECT;

09:06 AUG 09 '97 X8A_LIBCOM.:X8A6SI/X8A_LIBCOM.:X8A6TUI                    8    
  132      %EQU Q_REG = BITBIN('06'O) ; /* REG VALUE FOR Q REGISTER */
  133      %EQU X0    = BITBIN('10'O) ; /* REG VALUE FOR INDEX REG 0 */
  134      %EQU X1    = BITBIN('11'O) ; /* REG VALUE FOR INDEX REG 1 */
  135      %EQU X2    = BITBIN('12'O) ; /* REG VALUE FOR INDEX REG 2 */
  136      %EQU X3    = BITBIN('13'O) ; /* REG VALUE FOR INDEX REG 3 */
  137      %EQU X4    = BITBIN('14'O) ; /* REG VALUE FOR INDEX REG 4 */
  138      %EQU X5    = BITBIN('15'O) ; /* REG VALUE FOR INDEX REG 5 */
  139      %EQU X6    = BITBIN('16'O) ; /* REG VALUE FOR INDEX REG 6 */
  140      %EQU X7    = BITBIN('17'O) ; /* REG VALUE FOR INDEX REG 7 */
  141      %EQU FOUR_BIT   = 8      ; /* THE NUMBER OF BYTES IN A 4 BIT WORD */
  142      %EQU NINE_BIT   = 4      ; /* THE NUMBER OF BYTES IN A 9 BIT WORD */
  143      %EQU PASSED_CHAR= 1      ; /* USED FOR SEARCH FCN           */
  144      %EQU OPEN_BRACE = '{'    ; /* THE CHARATER OPEN BRACE       */
  145      %EQU BLANC      = ' '    ; /* THE CHARACTER BLANK           */
  146      %EQU PLUS_SIGN  = '+'    ; /* THE CHARACTER +               */
  147      %EQU MINUS_SIGN = '-'    ; /* THE CHARACTER '-'             */
  148      %EQU DOLLAR_SIGN = '$'   ; /* THE CHARACTER '$'            */
  149      %EQU ASTERISK   = '*'    ; /* THE CHARACTER '*'           */
  150      %EQU SYSOUT_LINE_LENGTH = 132;/*LINE LENGTH FOR SYSOUT      */
  151      %EQU MAX_EXPONENT_CHAR = '127' ;/* MAX EXPONENT-CHARACTER   */
  152      %EQU NEG_MAX_EXPONT    = '128' ;/* MAX NEGATIVE EXPONENT    */
  153      %EQU MAX_EXPONENT      = 127 ;  /* MAX EXPONENT             */
  154      %EQU THREE_ZEROS       = '000' ;/* THREE CHARACTER ZEROS    */
  155      %EQU IPR_FAULT         = 3     ;/* CASE VALUE FOR IPR FAULT */
  156      %EQU DECIMAL_POINT     = '.'   ;/* DECIMAL POINT            */
  157      %EQU CAP_E     = 'E' ;     /* CAPITAL LETTER "E"            */
  158      %EQU SMALL_E   = 'e' ;     /* LOWER CASE(SMALL) "e"         */
  159      %EQU EXIT_LOOP  = 99999  ; /* FLAG TO EXIT A LOOP           */
  160      %EQU BIN_1       = ASCBIN('1') ;  /*  BIN EQUIVALENT OF CHAR '1'      */
  161      %EQU BIN_2       = ASCBIN('2') ;  /*  BIN EQUIVALENT OF CHAR '2'      */
  162      %EQU BIN_3       = ASCBIN('3') ;  /*  BIN EQUIVALENT OF CHAR '3'      */
  163      %EQU BIN_4       = ASCBIN('4') ;  /*  BIN EQUIVALENT OF CHAR '4'      */
  164      %EQU BIN_5       = ASCBIN('5') ;  /*  BIN EQUIVALENT OF CHAR '5'      */
  165      %EQU BIN_6       = ASCBIN('6') ;  /*  BIN EQUIVALENT OF CHAR '6'      */
  166      %EQU BIN_7       = ASCBIN('7') ;  /*  BIN EQUIVALENT OF CHAR '7'      */
  167      %EQU BIN_8       = ASCBIN('8') ;  /*  BIN EQUIVALENT OF CHAR '8'      */
  168      %EQU BIN_9       = ASCBIN('9') ;  /*  BIN EQUIVALENT OF CHAR '9'      */
09:06 AUG 09 '97 X8A_LIBCOM.:X8A6SI/X8A_LIBCOM.:X8A6TUI                    9    
  169      %EQU BIN_0       = ASCBIN('0') ;  /*  BIN EQUIVALENT OF CHAR '0'      */
  170      %EQU BIN_PLUS    = ASCBIN('+') ;  /*  BIN EQUIVALENT OF CHAR '+'      */
  171      %EQU BIN_NEG     = ASCBIN('-') ;  /*  BIN EQUIVALENT OF CHAR '-'      */
  172      %EQU BIN_ASTK    = ASCBIN('*') ;  /*  BIN EQUIVALENT OF CHAR '*'      */
  173      %EQU BIN_$       = ASCBIN('$') ;  /*  BIN EQUIVALENT OF CHAR '$'      */
  174      %EQU BIN_DECIMAL = ASCBIN('.') ;  /*  BIN EQUIVALENT OF CHAR '.'      */
  175      %EQU BIN_SLASH   = ASCBIN('/') ;  /*  BIN EQUIVALENT OF CHAR '/'      */
  176      %EQU BIN_COMMA   = ASCBIN(',') ;  /*  BIN EQUIVALENT OF CHAR ','      */
  177      %EQU BIN_L_PARA  = ASCBIN('(') ;  /*  BIN EQUIVALENT OF CHAR '('     */
  178      %EQU BIN_BRC     = ASCBIN('{');  /* BIN  EQUIVALENT OF CHAR '['   */
  179      %EQU BIN_CBRC    = ASCBIN('}');  /*  BIN EQUIVALENT OF CHAR ']'   */
  180      %EQU BIN_BLANK   =ASCBIN(' ');  /*  BIN EQUIVALENT OF A BLANK    */
  181      %EQU A   = ASCBIN('A');  /*  BIN EQUIVALENT OF CHAR 'A'   */
  182      %EQU B   = ASCBIN('B');  /*  BIN EQUIVALENT OF CHAR 'B'   */
  183      %EQU C   = ASCBIN('C');  /*  BIN EQUIVALENT OF CHAR 'C'   */
  184      %EQU D   = ASCBIN('D');  /*  BIN EQUIVALENT OF CHAR 'D'   */
  185      %EQU E   = ASCBIN('E');  /*  BIN EQUIVALENT OF CHAR'E'    */
  186      %EQU F   = ASCBIN('F');  /*  BIN EQUIVALENT OF CHAR 'F'   */
  187      %EQU G   = ASCBIN('G');  /*  BIN EQUIVALENT OF CHAR 'G'   */
  188      %EQU H   = ASCBIN('H');  /*  BIN EQUIVALENT OF CHAR 'H'   */
  189      %EQU I   = ASCBIN('I');  /*  BIN EQUIVALENT OF CHAR 'I'   */
  190      %EQU J   = ASCBIN('J');  /*  BIN EQUIVALENT OF CHAR 'J'   */
  191      %EQU K   = ASCBIN('K');  /*  BIN EQUIVALENT OF CHAR 'K'   */
  192      %EQU L   = ASCBIN('L');  /*  BIN EQUIVALENT OF CHAR 'L'   */
  193      %EQU M   = ASCBIN('M');  /*  BIN EQUIVALENT OF CHAR 'M'   */
  194      %EQU N   = ASCBIN('N');  /*  BIN EQUIVALENT OF CHAR 'N'   */
  195      %EQU O   = ASCBIN('O');  /*  BIN EQUIVALENT OF CHAR 'O'   */
  196      %EQU P   = ASCBIN('P');  /*  BIN EQUIVALENT OF CHAR 'P'   */
  197      %EQU Q   = ASCBIN('Q');  /*  BIN EQUIVALENT OF CHAR 'Q'   */
  198      %EQU R   = ASCBIN('R');  /*  BIN EQUIVALENT OF CHAR 'R'   */
  199      %EQU X   = ASCBIN('X');  /*  BIN EQUIVALENT OF CHAR 'X'   */
  200      /*  THE NEXT SET OF BINARY EQUIVALENTS ARE FOR LOWER CASE */
  201      %EQU LA  = ASCBIN('a');  /*  BIN EQUIVALENT OF CHAR 'a'   */
  202      %EQU LB  = ASCBIN('b');  /*  BIN EQUIVALENT OF CHAR 'b'   */
  203      %EQU LC  = ASCBIN('c');  /*  BIN EQUIVALENT OF CHAR 'c'   */
  204      %EQU LD  = ASCBIN('d');  /*  BIN EQUIVALENT OF CHAR 'd'   */
  205      %EQU LE  = ASCBIN('e');  /*  BIN EQUIVALENT OF CHAR 'e'   */
09:06 AUG 09 '97 X8A_LIBCOM.:X8A6SI/X8A_LIBCOM.:X8A6TUI                    10   
  206      %EQU LF  = ASCBIN('f');  /*  BIN EQUIVALENT OF CHAR 'f'   */
  207      %EQU LG  = ASCBIN('g');  /*  BIN EQUIVALENT OF CHAR 'g'   */
  208      %EQU LH  = ASCBIN('h');  /*  BIN EQUIVALENT OF CHAR 'h'   */
  209      %EQU LI  = ASCBIN('i');  /*  BIN EQUIVALENT OF CHAR 'i'   */
  210      %EQU LJ  = ASCBIN('j');  /*  BIN EQUIVALENT OF CHAR 'j'   */
  211      %EQU LK  = ASCBIN('k');  /*  BIN EQUIVALENT OF CHAR 'k'   */
  212      %EQU LL  = ASCBIN('l');  /*  BIN EQUIVALENT OF CHAR 'l'   */
  213      %EQU LM  = ASCBIN('m');  /*  BIN EQUIVALENT OF CHAR 'm'   */
  214      %EQU LN  = ASCBIN('n');  /*  BIN EQUIVALENT OF CHAR 'N'   */
  215      %EQU LO  = ASCBIN('o');  /*  BIN EQUIVALENT OF CHAR 'o'   */
  216      %EQU LP  = ASCBIN('p');  /*  BIN EQUIVALENT OF CHAR 'p'   */
  217      %EQU LQ  = ASCBIN('q');  /*  BIN EQUIVALENT OF CHAR 'q'   */
  218      %EQU LR  = ASCBIN('r');  /*  BIN EQUIVALENT OF CHAR 'r'   */
  219      %EJECT;


