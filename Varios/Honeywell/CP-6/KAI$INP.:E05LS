VERSION E05

PL6.E3A0      #001=KAI$INP File=KAI$INP.:E05TSI                                  TUE 07/29/97 23:56 Page:1    
        1        1        /*M* KAI$INP ASYNC HANDLER MLCP INTERFACE FOR INPUT                           */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IAD=3,IND=0 */
        8        8        KAI$INP: PROC ASYNC;
        9        9
       10       10
       11       11        %INCLUDE LCP_6;
       12      202        %FPT_INTRET;
       13      222
       14      223        %INCLUDE KL_AFCN_C;
       15      324        %INCLUDE KL_MACRO_C;
       16     3676        %INCLUDE K_ID_E;
       17     3726        %INCLUDE KV$BPC;
       18     3755        %K#ENTID_E;
       19     3774        %K#LYRID_E;
       20     3781 S      %INCLUDE KV_GLBCNS_E;
       21     3782        %KV_VDH_EVT_ID_E;
       22     3788        %KV_SCHRSN_E;
       23     3795
       24     3796        %INCLUDE KH$STT;                        /* For KA_STT                         */
       25     3826        %INCLUDE KH_TRC;
       26     3848        %INCLUDE KH$TRC;
       27     3877
       28     3878 S      %INCLUDE KV$GLB;
       29     3879 S      %INCLUDE KV$GLBCTX;
       30     3880        %INCLUDE KA$GLB;
       31     4021        %INCLUDE KA_GLB;
       32     4098        %INCLUDE KA_GLB_E;
       33     4176        %KA_STT;
       34     4539        %KA_HLTOTP_E;
       35     4548        %KA_TRC_E;
       36     4565 S      %INCLUDE KV$VDH;
       37     4566        %KA$CTX;                           /*  ASYNC CONTEXT BLOCK ITEM DEFINITIONS   */
PL6.E3A0      #001=KAI$INP File=KAI$INP.:E05TSI                                  TUE 07/29/97 23:56 Page:2    
       38     4690 S      %INCLUDE KV$USR;
       39     4691        %INCLUDE KV_GLB_M;                      /*  VDH-user macros                   */
       40     4813        %INCLUDE KV_INT;
       41     4852 S      %INCLUDE KV$INT;
       42     4853        %KH_TRC;                                /* DCLs needed to use KH$CALTRC       */
       43     4868        %INCLUDE KNH_MACRO_C;
       44     5151        %KNH$QHDR (STCLASS="BASED(G$HAND_Q$)");
       45     5164    1   DCL G$HAND_Q$ PTR SYMREF READONLY;
       46     5165        %INCLUDE KV_INT_M;
       47     5308        %INCLUDE KH_TRC_M;                      /*  TRACE ROUTINES                    */
       48     5356        %INCLUDE KH$CHN;
       49     5478        %KH$CHN (STCLASS="BASED(BCHN$)");       /*  CHANNEL TABLES ITEM DEFINITONS    */
       50     5602        %EQU KH_CHN=CHARTEXT('KH$CHN');
       51     5603        %INCLUDE KH_CHN;
       52     5643        %KH_CHNDAT;                             /*  CHANNEL TABLES ITEM DEFINITONS    */
       53     5661        %KV$PTR;                                /*  VDH Pointers, status              */
       54     5704        %KV$VDI;                                /*  VDI (VDH < ->VDH user interface)  */
       55     5775        %INCLUDE KA_PERR_C;
       56     5794 S      %INCLUDE GT_LCP6_M;
       57     5795        %FPT_WRSYSLOG (FPTN = FPT_WRSYSLOG_BADCHNSTT, STCLASS = CONSTANT, FCG = KA, MID = I,
              5795            ERR = %E$ASN_BADCHNSTT, SEV = 3);
       58     5890        %FPT_WRSYSLOG (FPTN=FPT_WRSYSLOG_INVINT, FCG=KA, MID=I, ERR=%E$ASN_INVINT, SEV=3);
       59     5985    1   DCL KAI$INPINT ENTRY;
       60     5986    1   DCL KAS$RQSCNC ENTRY(1);
       61     5987    1   DCL X6A_INTRET ENTRY(1);
       62     5988    1   DCL KHC$XEQ2 ENTRY(1) ALTRET;
       63     5989
       64     5990        /* debug/diagnostics calls */
       65     5991
       66     5992    1   DCL KHA$ERRLOG ENTRY(1) ALTRET;
       67     5993    1   DCL KHD$ERRLOG_SETTERMID_CHN ENTRY(2) ALTRET;
       68     5994    1   DCL KHD$TRC ENTRY(2);
       69     5995
       70     5996
       71     5997        %INCLUDE G_JIT_M;
       72     6262        %G$JIT(STCLASS="BASED(G$JIT$)");
       73     6676    1   DCL G$JIT$ PTR SYMREF;
PL6.E3A0      #001=KAI$INP File=KAI$INP.:E05TSI                                  TUE 07/29/97 23:56 Page:3    
       74     6677
       75     6678        %INCLUDE G_HJIT_M;
       76     6823        %G$UHJIT(STCLASS="BASED(G$UHJIT$)");
       77     9797    1   DCL G$UHJIT$ PTR SYMREF;
       78     9798        %KV$STT (NAME = KV_STT, STCLASS = SYMREF);
       79    10192
       80    10193    1   DCL Y@CHN UBIN;
       81    10194    1   DCL BCHN$ PTR;
       82    10195    1   DCL BCTX$ PTR;
       83    10196        %KV@USRENT;
       84    10216        %KH$TRC(NAME=KH@TRC,STCLASS=AUTO);
       85    10238        /*
       86    10239        Saved execution time (from the JIT).
       87    10240        */
       88    10241    1   DCL Y@SVDEXCTIM UBIN(32) AUTO;
       89    10242        /*
       90    10243        Current execution time (from the JIT).
       91    10244        */
       92    10245    1   DCL Y@CRTEXCTIM UBIN(32) AUTO;
       93    10246
       94    10247        %KV$BOX (PAGE=YES, TITLE=Async Input Interrupt Processing);

PL6.E3A0      #001=KAI$INP File=KAI$INP.:E05TSI                                  TUE 07/29/97 23:56 Page:4    
             10265    1   /***************************************************************************
             10266    1    *                                                                         *
             10267    1    *                      Async Input Interrupt Processing                   *
             10268    1    *                                                                         *
             10269    1    ***************************************************************************/

       95    10274
       96    10275    1      CALL KHC$XEQ2(Y@SVDEXCTIM);
       97    10276
       98    10277    1      Y@CHN = BITBIN(G$UHJIT.ISA_USR.DEV);
       99    10278    2      IF (Y@CHN > KH_CHNHI) THEN DO;
      100    10279        /*E* ERROR: KAI-E$ASN_INVINT
      101    10280             MESSAGE: Invalid interrupt
      102    10281             REMARKS: An interrupt was received whose DEV is outside
      103    10282              the range of the channel tables.                                         */
      104    10283    2         FPT_WRSYSLOG_INVINT.V.TERMID.TERM.CHANNEL = Y@CHN;
      105    10284    2         CALL KHA$ERRLOG (FPT_WRSYSLOG_INVINT);
      106    10285              %KH$CALTRC (CND=NON,COD=%KA#TRC_INPINT);
      107    10320    2      END; ELSE DO;
      108    10321
      109    10322        /* CHANNEL NUMBER IS IN THE RANGE OF NUMBERS CONTAINED IN THE                 */
      110    10323        /* CHN TBL.                                                                   */
      111    10324
      112    10325        /* COMPUTE THE ADR OF THE CHN TBL ENTRY FOR THIS CHANNEL                      */
      113    10326
      114    10327    2         BCHN$ = PINCRW(KH_CHNLOW$, SIZEW(KH$CHN) * (Y@CHN / 128));
      115    10328    2         %KH_CHN.INTCNT = %KH_CHN.INTCNT+1;
      116    10329
      117    10330        /* MOVE CTX ADR TO BASE REGISTER                                              */
      118    10331
      119    10332    2         BCTX$ = %KH_CHN.CTX$;
      120    10333              %KH$CALTRC (CND=DFL,COD=%KA#TRC_INPINT);
      121    10368
      122    10369        /* INTERRUPT VALIDATION                                                       */
      123    10370
      124    10371    3         IF (G$JIT.SYSID ~= %KH_CHN.SYSID) THEN DO;
      125    10372
PL6.E3A0      #001=KAI$INP File=KAI$INP.:E05TSI                                  TUE 07/29/97 23:56 Page:5    
      126    10373        /* We don't own this channel. */
      127    10374
      128    10375        /*E* ERROR: KAI-E$ASN_BADCHNSTT
      129    10376             MESSAGE: Async handler got input interrupt for channel it doesn't own
      130    10377             REMARKS: KH$CHN.SYSID doesn't match G$JIT.SYSID */
      131    10378    3            CALL KHD$ERRLOG_SETTERMID_CHN (FPT_WRSYSLOG_BADCHNSTT, %KH_CHN);
      132    10379    3         END; ELSE DO;
      133    10380
      134    10381        /* THIS IS AN INTERRUPT FROM AN ASYNCHRONOUS LINE.                            */
      135    10382
      136    10383    3            KA_STT.KHSTT.INPINTCNT = KA_STT.KHSTT.INPINTCNT+1;
      137    10384    4            IF (BCTX$ ~= ADDR(NIL)) THEN DO;
      138    10385
      139    10386        /* THE CONTEXT POINTER  IS NON-NULL, INDICATING WE HAVE                */
      140    10387        /* A CONTEXT BLOCK ASSOCIATED WITH THIS LINE.                                 */
      141    10388
      142    10389    4               BCTX$->KA$CTX.INPINTCNT = BCTX$->KA$CTX.INPINTCNT+1;
      143    10390                    %KV$USRENT (VDI$=BCTX$->KA$CTX.VDI$, DFR$=Y@DFR,
      144    10391                    SCHRSN=%KV_SCHRSN_DFR1, STT=KV_STT);
             10404    4           KV_STT.USRENTCNT = KV_STT.USRENTCNT + 1;
             10405    5           IF NOT BCTX$->KA$CTX.VDI$->KV$VDI.BSY THEN DO;
             10406    5              BCTX$->KA$CTX.VDI$->KV$VDI.BSY = '1'B;
             10407    5              KV@USRENT.SVDPTR$ = KV$PTR$;
             10408    5              KV$PTR$ = BCTX$->KA$CTX.VDI$->KV$VDI.ASNINPPTR$;
             10409    5              END;                         /* ELSE IF ~BSY                       */
             10410    5           ELSE DO;
             10411    5              BCTX$->KA$CTX.VDI$->KV$VDI.DFR.USR(1) = '1'B;
             10412    5           KV_STT.USRENTDFRCNT = KV_STT.USRENTDFRCNT + 1;
             10413    5              GOTO Y@DFR;
             10414    5              END;                         /* END IF                             */
      145    10417    4               CALL KAI$INPINT ;
      146    10418                    %KV$USREXT;
             10424    4           KV$PTR.VDI$->KV$VDI.BSY = '0'B;
             10426    4           KV$PTR$ = KV@USRENT.SVDPTR$;
      147    10428    4   Y@DFR:
      148    10429    4            END; ELSE DO;
      149    10430
PL6.E3A0      #001=KAI$INP File=KAI$INP.:E05TSI                                  TUE 07/29/97 23:56 Page:6    
      150    10431        /* THERE IS NO CONTEXT BLOCK ASSOCIATED WITH THIS LINE.                       */
      151    10432
      152    10433                    %KV$USRENT (VDI$ = "ADDR(NIL)");
             10439    4              KV@USRENT.SVDPTR$ = KV$PTR$;
      153    10459    4               CALL KAS$RQSCNC(BCHN$);     /*  REQUEST CONNECTION                */
      154    10460        /*
      155    10461        Note that we leave the busy bit set so we don't try to send
      156    10462        any messages until we receive the ack from nodeadmin giving
      157    10463        us the address used in sending further messages.
      158    10464        */
      159    10465                    %KV$USREXT (VDI$ = "ADDR(NIL)");
             10473    4           KV$PTR$ = KV@USRENT.SVDPTR$;
      160    10475    4            END /* IF */;
      161    10476    3         END /* IF */;
      162    10477    2      END /* IF */;
      163    10478
      164    10479    1      CALL KHC$XEQ2(Y@CRTEXCTIM);
      165    10480    1      KA_STT.KHSTT.INPINTISATIM = KA_STT.KHSTT.INPINTISATIM + Y@CRTEXCTIM - Y@SVDEXCTIM
             10480               ;
      166    10481
      167    10482        /* DONE PROCESSING THIS INTERRUPT. GO TO SLEEP UNTIL THE NEXT.                */
      168    10483
      169    10484    1      IF KNH$QHDR.SCQ.IPTR=KNH$QHDR.SCQ.RPTR
      170    10485    1      THEN CALL X6A_INTRET;
      171    10486    1      ELSE CALL X6A_INTRET(FPT_INTRET);    /* Only scan if needed                */
      172    10487    1   END KAI$INP;
      173    10488
      174    10489        %EOD;

PL6.E3A0      #001=KAI$INP File=KAI$INP.:E05TSI                                  TUE 07/29/97 23:56 Page:7    
--  Include file information  --

   G_HJIT_M.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   KA_PERR_C.:E05TOU  is referenced.
   KH_CHN.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   KH_TRC_M.:E05TOU  is referenced.
   KV_INT_M.:E05TOU  is referenced.
   KNH_MACRO_C.:E05TOU  is referenced.
   KV_INT.:E05TOU  is referenced.
   KV_GLB_M.:E05TOU  is referenced.
   KA_GLB_E.:E05TOU  is referenced.
   KA_GLB.:E05TOU  is referenced.
   KA$GLB.:E05TOU  is referenced.
   KH$TRC.:E05TOU  is referenced.
   KH_TRC.:E05TOU  is referenced.
   KH$STT.:E05TOU  is referenced.
   KV$BPC.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is referenced.
   KV$USR.:E05TOU  was found in the system file and is referenced.
   KV$SND.:E05TOU  was found in the system file and is never referenced.
   KV$INT.:E05TOU  was found in the system file and is referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
PL6.E3A0      #001=KAI$INP File=KAI$INP.:E05TSI                                  TUE 07/29/97 23:56 Page:8    
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KAI$INP.

   Procedure KAI$INP requires 234 words for executable code.
   Procedure KAI$INP requires 26 words of local(AUTO) storage.

PL6.E3A0      #001=KAI$INP File=KAI$INP.:E05TSI                                  TUE 07/29/97 23:56 Page:9    

 Object Unit name= KAI$INP                                    File name= KAI$INP.:E05TOU
 UTS= JUL 29 '97 23:56:13.80 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Data  even  none    28     1C  KAI$INP
    1  RoData even  UTS     21     15  KAI$INP
    2   Proc  even  none   234     EA  KAI$INP
    3  RoData even  none     4      4  KAI$INP

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes     Async       0  KAI$INP

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 KHC$XEQ2
 yes     yes           Std       1 KHA$ERRLOG
 yes     yes           Std       2 KHD$ERRLOG_SETTERMID_CHN
         yes           Std       0 KAI$INPINT
         yes           Std       1 KAS$RQSCNC
         yes           Std       1 X6A_INTRET
                       nStd      0 X6A_AAUTO
                       nStd      0 X6A_AARET
PL6.E3A0      #001=KAI$INP File=KAI$INP.:E05TSI                                  TUE 07/29/97 23:56 Page:10   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KA_STT                           r    G$HAND_Q$                        r    KH_CHNLOW$
r    KH_CHNHI                         r    KH_CHNLOW                             KV$PTR$
     G$JIT$                                G$UHJIT$                              KV_STT
r    G$ROS$
PL6.E3A0      #001=KAI$INP File=KAI$INP.:E05TSI                                  TUE 07/29/97 23:56 Page:11   


        1        1        /*M* KAI$INP ASYNC HANDLER MLCP INTERFACE FOR INPUT                           */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IAD=3,IND=0 */
        8        8        KAI$INP: PROC ASYNC;

      8   2 000000  D380 0000 0000  xent KAI$INP         LNJ,B5   X6A_AAUTO
          2 000003       001A 0000                       DC       26,0

        9        9
       10       10
       11       11        %INCLUDE LCP_6;
       12      202        %FPT_INTRET;
       13      222
       14      223        %INCLUDE KL_AFCN_C;
       15      324        %INCLUDE KL_MACRO_C;
       16     3676        %INCLUDE K_ID_E;
       17     3726        %INCLUDE KV$BPC;
       18     3755        %K#ENTID_E;
       19     3774        %K#LYRID_E;
       20     3781 S      %INCLUDE KV_GLBCNS_E;
       21     3782        %KV_VDH_EVT_ID_E;
       22     3788        %KV_SCHRSN_E;
       23     3795
       24     3796        %INCLUDE KH$STT;                        /* For KA_STT                         */
       25     3826        %INCLUDE KH_TRC;
       26     3848        %INCLUDE KH$TRC;
       27     3877
       28     3878 S      %INCLUDE KV$GLB;
       29     3879 S      %INCLUDE KV$GLBCTX;
       30     3880        %INCLUDE KA$GLB;
       31     4021        %INCLUDE KA_GLB;
       32     4098        %INCLUDE KA_GLB_E;
PL6.E3A0      #001=KAI$INP File=KAI$INP.:E05TSI                                  TUE 07/29/97 23:56 Page:12   
       33     4176        %KA_STT;
       34     4539        %KA_HLTOTP_E;
       35     4548        %KA_TRC_E;
       36     4565 S      %INCLUDE KV$VDH;
       37     4566        %KA$CTX;                           /*  ASYNC CONTEXT BLOCK ITEM DEFINITIONS   */
       38     4690 S      %INCLUDE KV$USR;
       39     4691        %INCLUDE KV_GLB_M;                      /*  VDH-user macros                   */
       40     4813        %INCLUDE KV_INT;
       41     4852 S      %INCLUDE KV$INT;
       42     4853        %KH_TRC;                                /* DCLs needed to use KH$CALTRC       */
       43     4868        %INCLUDE KNH_MACRO_C;
       44     5151        %KNH$QHDR (STCLASS="BASED(G$HAND_Q$)");
       45     5164    1   DCL G$HAND_Q$ PTR SYMREF READONLY;
       46     5165        %INCLUDE KV_INT_M;
       47     5308        %INCLUDE KH_TRC_M;                      /*  TRACE ROUTINES                    */
       48     5356        %INCLUDE KH$CHN;
       49     5478        %KH$CHN (STCLASS="BASED(BCHN$)");       /*  CHANNEL TABLES ITEM DEFINITONS    */
       50     5602        %EQU KH_CHN=CHARTEXT('KH$CHN');
       51     5603        %INCLUDE KH_CHN;
       52     5643        %KH_CHNDAT;                             /*  CHANNEL TABLES ITEM DEFINITONS    */
       53     5661        %KV$PTR;                                /*  VDH Pointers, status              */
       54     5704        %KV$VDI;                                /*  VDI (VDH < ->VDH user interface)  */
       55     5775        %INCLUDE KA_PERR_C;
       56     5794 S      %INCLUDE GT_LCP6_M;
       57     5795       %FPT_WRSYSLOG (FPTN = FPT_WRSYSLOG_BADCHNSTT, STCLASS = CONSTANT, FCG = KA, MID = I,
              5795            ERR = %E$ASN_BADCHNSTT, SEV = 3);
       58     5890        %FPT_WRSYSLOG (FPTN=FPT_WRSYSLOG_INVINT, FCG=KA, MID=I, ERR=%E$ASN_INVINT, SEV=3);
       59     5985    1   DCL KAI$INPINT ENTRY;
       60     5986    1   DCL KAS$RQSCNC ENTRY(1);
       61     5987    1   DCL X6A_INTRET ENTRY(1);
       62     5988    1   DCL KHC$XEQ2 ENTRY(1) ALTRET;
       63     5989
       64     5990        /* debug/diagnostics calls */
       65     5991
       66     5992    1   DCL KHA$ERRLOG ENTRY(1) ALTRET;
       67     5993    1   DCL KHD$ERRLOG_SETTERMID_CHN ENTRY(2) ALTRET;
       68     5994    1   DCL KHD$TRC ENTRY(2);
PL6.E3A0      #001=KAI$INP File=KAI$INP.:E05TSI                                  TUE 07/29/97 23:56 Page:13   
       69     5995
       70     5996
       71     5997        %INCLUDE G_JIT_M;
       72     6262        %G$JIT(STCLASS="BASED(G$JIT$)");
       73     6676    1   DCL G$JIT$ PTR SYMREF;
       74     6677
       75     6678        %INCLUDE G_HJIT_M;
       76     6823        %G$UHJIT(STCLASS="BASED(G$UHJIT$)");
       77     9797    1   DCL G$UHJIT$ PTR SYMREF;
       78     9798        %KV$STT (NAME = KV_STT, STCLASS = SYMREF);
       79    10192
       80    10193    1   DCL Y@CHN UBIN;
       81    10194    1   DCL BCHN$ PTR;
       82    10195    1   DCL BCTX$ PTR;
       83    10196        %KV@USRENT;
       84    10216        %KH$TRC(NAME=KH@TRC,STCLASS=AUTO);
       85    10238        /*
       86    10239        Saved execution time (from the JIT).
       87    10240        */
       88    10241    1   DCL Y@SVDEXCTIM UBIN(32) AUTO;
       89    10242        /*
       90    10243        Current execution time (from the JIT).
       91    10244        */
       92    10245    1   DCL Y@CRTEXCTIM UBIN(32) AUTO;
       93    10246
       94    10247        %KV$BOX (PAGE=YES, TITLE=Async Input Interrupt Processing);

PL6.E3A0      #001=KAI$INP File=KAI$INP.:E05TSI                                  TUE 07/29/97 23:56 Page:14   
             10265    1   /***************************************************************************
             10266    1    *                                                                         *
             10267    1    *                      Async Input Interrupt Processing                   *
             10268    1    *                                                                         *
             10269    1    ***************************************************************************/

       95    10274
       96    10275    1      CALL KHC$XEQ2(Y@SVDEXCTIM);

  10275   2 000005  EBC7 0012                            LAB,B6   Y@SVDEXCTIM,AUTO
          2 000007  EFC7 0016                            STB,B6   Y@CRTEXCTIM+2,AUTO
          2 000009  BBC7 0016                            LAB,B3   Y@CRTEXCTIM+2,AUTO
          2 00000B  CBF0 0100                            LAB,B4   256,IMO
          2 00000D  E380 0000 0000  xent                 LNJ,B6   KHC$XEQ2
          2 000010       0001                            DC       s:10277,PREL

       97    10276
       98    10277    1      Y@CHN = BITBIN(G$UHJIT.ISA_USR.DEV);

  10277   2 000011  EC80 0000 0000  xsym                 LDB,B6   G$UHJIT$
          2 000014  E846 0081                            LDR,R6   129,B6
          2 000016  EF47 0004                            STR,R6   Y@CHN,AUTO

       99    10278    2      IF (Y@CHN > KH_CHNHI) THEN DO;

  10278   2 000018  E900 0000 0000  xsym                 CMR,R6   KH_CHNHI
          2 00001B  0381 000F                            BLE      s:10327,PREL

      100    10279        /*E* ERROR: KAI-E$ASN_INVINT
      101    10280             MESSAGE: Invalid interrupt
      102    10281             REMARKS: An interrupt was received whose DEV is outside
      103    10282              the range of the channel tables.                                         */
      104    10283    2         FPT_WRSYSLOG_INVINT.V.TERMID.TERM.CHANNEL = Y@CHN;

  10283   2 00001D  EF00 0000 0010  00                   STR,R6   FPT_WRSYSLOG_INVINT+9

      105    10284    2         CALL KHA$ERRLOG (FPT_WRSYSLOG_INVINT);
PL6.E3A0      #001=KAI$INP File=KAI$INP.:E05TSI                                  TUE 07/29/97 23:56 Page:15   

  10284   2 000020  BB80 0000 0000  03                   LAB,B3   0
          2 000023  CBF0 0100                            LAB,B4   256,IMO
          2 000025  E380 0000 0000  xent                 LNJ,B6   KHA$ERRLOG
          2 000028       0001                            DC       s:10320,PREL

      106    10285              %KH$CALTRC (CND=NON,COD=%KA#TRC_INPINT);

      107    10320    2      END; ELSE DO;

  10320   2 000029  0F81 008D                            B        s:10479,PREL

      108    10321
      109    10322        /* CHANNEL NUMBER IS IN THE RANGE OF NUMBERS CONTAINED IN THE                 */
      110    10323        /* CHN TBL.                                                                   */
      111    10324
      112    10325        /* COMPUTE THE ADR OF THE CHN TBL ENTRY FOR THIS CHANNEL                      */
      113    10326
      114    10327    2         BCHN$ = PINCRW(KH_CHNLOW$, SIZEW(KH$CHN) * (Y@CHN / 128));

  10327   2 00002B  6047                                 SOR,R6   7
          2 00002C  F856                                 LDR,R7   R6
          2 00002D  6C00                                 LDV,R6   0
          2 00002E  7085                                 DOL,R7   5
          2 00002F  8400 0000 0000  xsym                 AID      KH_CHNLOW$
          2 000032  8D47 0005                            SDI      BCHN$,AUTO

      115    10328    2         %KH_CHN.INTCNT = %KH_CHN.INTCNT+1;

  10328   2 000034  DCC7 0005                            LDB,B5   BCHN$,AUTO
          2 000036  8AC5 000F                            INC      15,B5
          2 000038  8EC5 000E                            CAD      14,B5

      116    10329
      117    10330        /* MOVE CTX ADR TO BASE REGISTER                                              */
      118    10331
      119    10332    2         BCTX$ = %KH_CHN.CTX$;
PL6.E3A0      #001=KAI$INP File=KAI$INP.:E05TSI                                  TUE 07/29/97 23:56 Page:16   

  10332   2 00003A  CCC5 000C                            LDB,B4   12,B5
          2 00003C  CFC7 0007                            STB,B4   BCTX$,AUTO

      120    10333              %KH$CALTRC (CND=DFL,COD=%KA#TRC_INPINT);

      121    10368
      122    10369        /* INTERRUPT VALIDATION                                                       */
      123    10370
      124    10371    3         IF (G$JIT.SYSID ~= %KH_CHN.SYSID) THEN DO;

  10371   2 00003E  BC80 0000 0000  xsym                 LDB,B3   G$JIT$
          2 000041  D843 0005                            LDR,R5   5,B3
          2 000043  D945 0006                            CMR,R5   6,B5
          2 000045  0901 0012                            BE       s:10383,PREL

      125    10372
      126    10373        /* We don't own this channel. */
      127    10374
      128    10375        /*E* ERROR: KAI-E$ASN_BADCHNSTT
      129    10376             MESSAGE: Async handler got input interrupt for channel it doesn't own
      130    10377             REMARKS: KH$CHN.SYSID doesn't match G$JIT.SYSID */
      131    10378    3            CALL KHD$ERRLOG_SETTERMID_CHN (FPT_WRSYSLOG_BADCHNSTT, %KH_CHN);

  10378   2 000047  DFC7 0018                            STB,B5   Y@CRTEXCTIM+4,AUTO
          2 000049  AB80 0000 0000  01                   LAB,B2   FPT_WRSYSLOG_BADCHNSTT
          2 00004C  AFC7 0016                            STB,B2   Y@CRTEXCTIM+2,AUTO
          2 00004E  BBC7 0016                            LAB,B3   Y@CRTEXCTIM+2,AUTO
          2 000050  CBF0 0200                            LAB,B4   512,IMO
          2 000052  E380 0000 0000  xent                 LNJ,B6   KHD$ERRLOG_SETTERMID_CHN
          2 000055       0001                            DC       s:10379,PREL

      132    10379    3         END; ELSE DO;

  10379   2 000056  0F81 0060                            B        s:10479,PREL

      133    10380
PL6.E3A0      #001=KAI$INP File=KAI$INP.:E05TSI                                  TUE 07/29/97 23:56 Page:17   
      134    10381        /* THIS IS AN INTERRUPT FROM AN ASYNCHRONOUS LINE.                            */
      135    10382
      136    10383    3            KA_STT.KHSTT.INPINTCNT = KA_STT.KHSTT.INPINTCNT+1;

  10383   2 000058  8A80 0000 0015  xsym                 INC      KA_STT+21
          2 00005B  8E80 0000 0014  xsym                 CAD      KA_STT+20

      137    10384    4            IF (BCTX$ ~= ADDR(NIL)) THEN DO;

  10384   2 00005E  8DC7 0007                            CMN      BCTX$,AUTO
          2 000060  0901 0040                            BE       s:10439,PREL

      138    10385
      139    10386        /* THE CONTEXT POINTER  IS NON-NULL, INDICATING WE HAVE                */
      140    10387        /* A CONTEXT BLOCK ASSOCIATED WITH THIS LINE.                                 */
      141    10388
      142    10389    4               BCTX$->KA$CTX.INPINTCNT = BCTX$->KA$CTX.INPINTCNT+1;

  10389   2 000062  8AC4 0009                            INC      9,B4
          2 000064  8EC4 0008                            CAD      8,B4

      143    10390                    %KV$USRENT (VDI$=BCTX$->KA$CTX.VDI$, DFR$=Y@DFR,
      144    10391                    SCHRSN=%KV_SCHRSN_DFR1, STT=KV_STT);
             10404    4           KV_STT.USRENTCNT = KV_STT.USRENTCNT + 1;

  10404   2 000066  8A80 0000 0039  xsym                 INC      KV_STT+57
          2 000069  8E80 0000 0038  xsym                 CAD      KV_STT+56

             10405    5           IF NOT BCTX$->KA$CTX.VDI$->KV$VDI.BSY THEN DO;

  10405   2 00006C  AC84                                 LDB,B2   ,B4
          2 00006D  82C2 0019                            LB,'0080'X        25,B2
          2 00006F       0080
          2 000070  0501 0011                            BBT      s:10411,PREL

             10406    5              BCTX$->KA$CTX.VDI$->KV$VDI.BSY = '1'B;

PL6.E3A0      #001=KAI$INP File=KAI$INP.:E05TSI                                  TUE 07/29/97 23:56 Page:18   
  10406   2 000072  8942 0019                            LBT,'0080'X       25,B2
  10406   2 000074       0080

             10407    5              KV@USRENT.SVDPTR$ = KV$PTR$;

  10407   2 000075  AC80 0000 0000  xsym                 LDB,B2   KV$PTR$
          2 000078  AFC7 0009                            STB,B2   KV@USRENT,AUTO

             10408    5              KV$PTR$ = BCTX$->KA$CTX.VDI$->KV$VDI.ASNINPPTR$;

  10408   2 00007A  9C84                                 LDB,B1   ,B4
          2 00007B  ECC1 0006                            LDB,B6   6,B1
          2 00007D  EF80 0000 0000  xsym                 STB,B6   KV$PTR$

             10409    5              END;                         /* ELSE IF ~BSY                       */

  10409   2 000080  0F81 000C                            B        s:10417,PREL

             10410    5           ELSE DO;

             10411    5              BCTX$->KA$CTX.VDI$->KV$VDI.DFR.USR(1) = '1'B;

  10411   2 000082  8942 0018                            LBT,'4000'X       24,B2
  10411   2 000084       4000

             10412    5           KV_STT.USRENTDFRCNT = KV_STT.USRENTDFRCNT + 1;

  10412   2 000085  8A80 0000 003B  xsym                 INC      KV_STT+59
          2 000088  8E80 0000 003A  xsym                 CAD      KV_STT+58

             10413    5              GOTO Y@DFR;

  10413   2 00008B  0F81 0013                            B        s:10429,PREL

             10414    5              END;                         /* END IF                             */
      145    10417    4               CALL KAI$INPINT ;

PL6.E3A0      #001=KAI$INP File=KAI$INP.:E05TSI                                  TUE 07/29/97 23:56 Page:19   
  10417   2 00008D  CBF0 0000                            LAB,B4   0,IMO
          2 00008F  E380 0000 0000  xent                 LNJ,B6   KAI$INPINT
          2 000092       0001                            DC       s:10424,PREL

      146    10418                    %KV$USREXT;
             10424    4           KV$PTR.VDI$->KV$VDI.BSY = '0'B;

  10424   2 000093  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 000096  DC86                                 LDB,B5   ,B6
          2 000097  8845 0019                            LBF,'0080'X       25,B5
          2 000099       0080

             10426    4           KV$PTR$ = KV@USRENT.SVDPTR$;

  10426   2 00009A  DCC7 0009                            LDB,B5   KV@USRENT,AUTO
          2 00009C  DF80 0000 0000  xsym                 STB,B5   KV$PTR$

      147    10428    4   Y@DFR:
      148    10429    4            END; ELSE DO;

  10429   2 00009F  0F81 0017            Y@DFR           B        s:10479,PREL

      149    10430
      150    10431        /* THERE IS NO CONTEXT BLOCK ASSOCIATED WITH THIS LINE.                       */
      151    10432
      152    10433                    %KV$USRENT (VDI$ = "ADDR(NIL)");
             10439    4              KV@USRENT.SVDPTR$ = KV$PTR$;

  10439   2 0000A1  AC80 0000 0000  xsym                 LDB,B2   KV$PTR$
          2 0000A4  AFC7 0009                            STB,B2   KV@USRENT,AUTO

      153    10459    4               CALL KAS$RQSCNC(BCHN$);     /*  REQUEST CONNECTION                */

  10459   2 0000A6  9BC7 0005                            LAB,B1   BCHN$,AUTO
          2 0000A8  9FC7 0016                            STB,B1   Y@CRTEXCTIM+2,AUTO
          2 0000AA  BBC7 0016                            LAB,B3   Y@CRTEXCTIM+2,AUTO
          2 0000AC  CBF0 0100                            LAB,B4   256,IMO
PL6.E3A0      #001=KAI$INP File=KAI$INP.:E05TSI                                  TUE 07/29/97 23:56 Page:20   
          2 0000AE  E380 0000 0000  xent                 LNJ,B6   KAS$RQSCNC
          2 0000B1       0001                            DC       s:10473,PREL

      154    10460        /*
      155    10461        Note that we leave the busy bit set so we don't try to send
      156    10462        any messages until we receive the ack from nodeadmin giving
      157    10463        us the address used in sending further messages.
      158    10464        */
      159    10465                    %KV$USREXT (VDI$ = "ADDR(NIL)");
             10473    4           KV$PTR$ = KV@USRENT.SVDPTR$;

  10473   2 0000B2  ECC7 0009                            LDB,B6   KV@USRENT,AUTO
          2 0000B4  EF80 0000 0000  xsym                 STB,B6   KV$PTR$

      160    10475    4            END /* IF */;

      161    10476    3         END /* IF */;

      162    10477    2      END /* IF */;

      163    10478
      164    10479    1      CALL KHC$XEQ2(Y@CRTEXCTIM);

  10479   2 0000B7  EBC7 0014                            LAB,B6   Y@CRTEXCTIM,AUTO
          2 0000B9  EFC7 0016                            STB,B6   Y@CRTEXCTIM+2,AUTO
          2 0000BB  BBC7 0016                            LAB,B3   Y@CRTEXCTIM+2,AUTO
          2 0000BD  CBF0 0100                            LAB,B4   256,IMO
          2 0000BF  E380 0000 0000  xent                 LNJ,B6   KHC$XEQ2
          2 0000C2       0001                            DC       s:10480,PREL

      165    10480    1     KA_STT.KHSTT.INPINTISATIM = KA_STT.KHSTT.INPINTISATIM + Y@CRTEXCTIM - Y@SVDEXCTIM
             10480               ;

  10480   2 0000C3  8C80 0000 0018  xsym                 LDI      KA_STT+24
          2 0000C6  8447 0014                            AID      Y@CRTEXCTIM,AUTO
          2 0000C8  84C7 0012                            SID      Y@SVDEXCTIM,AUTO
          2 0000CA  8D00 0000 0018  xsym                 SDI      KA_STT+24
PL6.E3A0      #001=KAI$INP File=KAI$INP.:E05TSI                                  TUE 07/29/97 23:56 Page:21   

      166    10481
      167    10482        /* DONE PROCESSING THIS INTERRUPT. GO TO SLEEP UNTIL THE NEXT.                */
      168    10483
      169    10484    1      IF KNH$QHDR.SCQ.IPTR=KNH$QHDR.SCQ.RPTR

  10484   2 0000CD  EC80 0000 0000  xsym                 LDB,B6   G$HAND_Q$
          2 0000D0  D846 0004                            LDR,R5   4,B6
          2 0000D2  D946 0005                            CMR,R5   5,B6
          2 0000D4  0981 0009                            BNE      s:10486,PREL

      170    10485    1      THEN CALL X6A_INTRET;

  10485   2 0000D6  CBF0 0000                            LAB,B4   0,IMO
          2 0000D8  E380 0000 0000  xent                 LNJ,B6   X6A_INTRET
          2 0000DB       0001                            DC       s:10485+6,PREL
          2 0000DC  0F81 000A                            B        s:10487,PREL

      171    10486    1      ELSE CALL X6A_INTRET(FPT_INTRET);    /* Only scan if needed                */

  10486   2 0000DE  BB80 0000 0002  03                   LAB,B3   +2
          2 0000E1  CBF0 0100                            LAB,B4   256,IMO
          2 0000E3  E380 0000 0000  xent                 LNJ,B6   X6A_INTRET
          2 0000E6       0001                            DC       s:10487,PREL

      172    10487    1   END KAI$INP;

  10487   2 0000E7  C380 0000 0000  xent                 LNJ,B4   X6A_AARET
      173    10488
      174    10489        %EOD;

PL6.E3A0      #001=KAI$INP File=KAI$INP.:E05TSI                                  TUE 07/29/97 23:56 Page:22   
--  Include file information  --

   G_HJIT_M.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   KA_PERR_C.:E05TOU  is referenced.
   KH_CHN.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   KH_TRC_M.:E05TOU  is referenced.
   KV_INT_M.:E05TOU  is referenced.
   KNH_MACRO_C.:E05TOU  is referenced.
   KV_INT.:E05TOU  is referenced.
   KV_GLB_M.:E05TOU  is referenced.
   KA_GLB_E.:E05TOU  is referenced.
   KA_GLB.:E05TOU  is referenced.
   KA$GLB.:E05TOU  is referenced.
   KH$TRC.:E05TOU  is referenced.
   KH_TRC.:E05TOU  is referenced.
   KH$STT.:E05TOU  is referenced.
   KV$BPC.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is referenced.
   KV$USR.:E05TOU  was found in the system file and is referenced.
   KV$SND.:E05TOU  was found in the system file and is never referenced.
   KV$INT.:E05TOU  was found in the system file and is referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
PL6.E3A0      #001=KAI$INP File=KAI$INP.:E05TSI                                  TUE 07/29/97 23:56 Page:23   
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KAI$INP.
PL6.E3A0      #001=KAI$INP File=KAI$INP.:E05TSI                                  TUE 07/29/97 23:56 Page:24   

 **** Variables and constants ****

  ****  Section 000  Data  KAI$INP

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(112)   r     1 FPT_INTRET                 7-0-0/w STRC(336)   r     1 FPT_WRSYSLOG_INVINT

  ****  Section 001 RoData KAI$INP

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(336)   r     1 FPT_WRSYSLOG_BADCHNSTT

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     5-0-0/w PTR         r     1 BCHN$                      7-0-0/w PTR         r     1 BCTX$
     9-0-0/w STRC(32)    r     1 KV@USRENT                  4-0-0/w UBIN(16)    r     1 Y@CHN
    14-0-0/w UBIN(32)    r     1 Y@CRTEXCTIM               12-0-0/w UBIN(32)    r     1 Y@SVDEXCTIM

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 G$HAND_Q$                  0-0-0/w PTR         r     1 G$JIT$
     0-0-0/w PTR         r     1 G$UHJIT$                   0-0-0/w STRC(2528)  r     1 KA_STT
     0-0-0/w UBIN(16)    r     1 KH_CHNHI                   0-0-0/w PTR         r     1 KH_CHNLOW$
     0-0-0/w PTR         r     1 KV$PTR$                    0-0-0/w STRC(8960)  r     1 KV_STT

  ****  BASED and DCB variables  ****

PL6.E3A0      #001=KAI$INP File=KAI$INP.:E05TSI                                  TUE 07/29/97 23:56 Page:25   
  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(5616)  r     1 G$JIT                      0-0-0/w STRC(6480)  r     1 G$UHJIT
     0-0-0/w STRC(512)   r     1 KA$CTX                     0-0-0/w STRC(512)   r     1 KH$CHN
     0-0-0/w STRC(384)   r     1 KNH$QHDR                   0-0-0/w STRC(480)   r     1 KV$PTR
     0-0-0/w STRC(512)   r     1 KV$VDI


   Procedure KAI$INP requires 234 words for executable code.
   Procedure KAI$INP requires 26 words of local(AUTO) storage.
PL6.E3A0      #001=KAI$INP File=KAI$INP.:E05TSI                                  TUE 07/29/97 23:56 Page:26   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KAI$INP File=KAI$INP.:E05TSI                                  TUE 07/29/97 23:56 Page:27   
          MINI XREF LISTING

BCHN$
     10194**DCL      5493--IMP-PTR 10327<<ASSIGN  10328>>ASSIGN  10328>>ASSIGN  10332>>ASSIGN  10371>>IF
     10378>>CALL    10459<>CALL
BCTX$
     10195**DCL     10332<<ASSIGN  10384>>IF      10389>>ASSIGN  10389>>ASSIGN  10405>>IF      10406>>ASSIGN
     10408>>ASSIGN  10411>>ASSIGN
FPT_INTRET
       215**DCL     10486<>CALL
FPT_INTRET.V
       219**DCL       217--DCLINIT
FPT_WRSYSLOG_BADCHNSTT
      5808**DCL     10378<>CALL
FPT_WRSYSLOG_BADCHNSTT.V
      5812**DCL      5810--DCLINIT
FPT_WRSYSLOG_BADCHNSTT.V.TERMID.TERM
      5877**DCL      5886--REDEF
FPT_WRSYSLOG_INVINT
      5903**DCL     10284<>CALL
FPT_WRSYSLOG_INVINT.V
      5907**DCL      5905--DCLINIT
FPT_WRSYSLOG_INVINT.V.TERMID.TERM
      5972**DCL      5981--REDEF
FPT_WRSYSLOG_INVINT.V.TERMID.TERM.CHANNEL
      5978**DCL     10283<<ASSIGN
G$HAND_Q$
      5164**DCL      5152--IMP-PTR 10484>>IF      10484>>IF
G$JIT.ERRLOG
      6606**DCL      6609--REDEF
G$JIT.JSUNIT
      6345**DCL      6346--REDEF
G$JIT.MCLS
      6344**DCL      6344--REDEF
PL6.E3A0      #001=KAI$INP File=KAI$INP.:E05TSI                                  TUE 07/29/97 23:56 Page:28   
G$JIT.SYSID
      6334**DCL     10371>>IF
G$JIT.TMRZ
      6613**DCL      6614--REDEF
G$JIT.USER_EXTIME
      6337**DCL      6338--REDEF
G$JIT.USER_MEMTIME
      6340**DCL      6340--REDEF
G$JIT.USER_SVTIME
      6339**DCL      6339--REDEF
G$JIT$
      6676**DCL      6276--IMP-PTR 10371>>IF
G$UHJIT.ISA_USR
      8263**DCL      8558--REDEF
G$UHJIT.ISA_USR.DEV
      8285**DCL     10277>>ASSIGN
G$UHJIT.ISA_USR.P$$
      8338**DCL      8338--REDEF
G$UHJIT.TSA_CP.ISA.P$$
      9545**DCL      9545--REDEF
G$UHJIT.TSA_CP.P$$
      9416**DCL      9416--REDEF    9417--REDEF
G$UHJIT.TSA_DB.ISA.P$$
      9157**DCL      9157--REDEF
G$UHJIT.TSA_DB.P$$
      9028**DCL      9028--REDEF    9029--REDEF
G$UHJIT.TSA_RTT.P$$
      9791**DCL      9791--REDEF    9792--REDEF
G$UHJIT.TSA_USR.ISA.P$$
      8747**DCL      8747--REDEF
G$UHJIT.TSA_USR.P$$
      8618**DCL      8618--REDEF    8619--REDEF
G$UHJIT$
      9797**DCL      6840--IMP-PTR 10277>>ASSIGN
KA$CTX.HLTOTP
      4680**DCL      4682--REDEF
PL6.E3A0      #001=KAI$INP File=KAI$INP.:E05TSI                                  TUE 07/29/97 23:56 Page:29   
KA$CTX.HLTOTPNXTBFR
      4684**DCL      4685--REDEF
KA$CTX.INPINTCNT
      4593**DCL     10389<<ASSIGN  10389>>ASSIGN
KA$CTX.VDI$
      4592**DCL     10405>>IF      10406>>ASSIGN  10408>>ASSIGN  10411>>ASSIGN
KAI$INPINT
      5985**DCL-ENT 10417--CALL
KAS$RQSCNC
      5986**DCL-ENT 10459--CALL
KA_STT.KHSTT.INPINTCNT
      4507**DCL     10383<<ASSIGN  10383>>ASSIGN
KA_STT.KHSTT.INPINTISATIM
      4508**DCL     10480<<ASSIGN  10480>>ASSIGN
KA_STT.REQSTATS.DSPMSK
      4437**DCL      4443--REDEF
KA_STT.REQSTATS.SLCMSK
      4478**DCL      4485--REDEF
KH$CHN
      5493**DCL     10327--ASSIGN  10378<>CALL
KH$CHN.CTX$
      5563**DCL     10332>>ASSIGN
KH$CHN.INTCNT
      5569**DCL     10328<<ASSIGN  10328>>ASSIGN
KH$CHN.SYSID
      5526**DCL     10371>>IF
KH$CHN.TERMID.TERM
      5589**DCL      5598--REDEF
KHA$ERRLOG
      5992**DCL-ENT 10284--CALL
KHC$XEQ2
      5988**DCL-ENT 10275--CALL    10479--CALL
KHD$ERRLOG_SETTERMID_CHN
      5993**DCL-ENT 10378--CALL
KH_CHNHI
      5656**DCL      5657--REDEF   10278>>IF
PL6.E3A0      #001=KAI$INP File=KAI$INP.:E05TSI                                  TUE 07/29/97 23:56 Page:30   
KH_CHNLOW
      5657**DCL      5658--REDEF
KH_CHNLOW$
      5656**DCL     10327>>ASSIGN
KNH$QHDR.RCQ
      5152**DCL      5152--REDEF
KNH$QHDR.SCQ.IPTR
      5153**DCL     10484>>IF
KNH$QHDR.SCQ.RPTR
      5153**DCL     10484>>IF
KV$PTR.INPCNDPND
      5688**DCL      5697--REDEF    5701--REDEF
KV$PTR.LINLST$
      5684**DCL      5685--REDEF
KV$PTR.VDI$
      5682**DCL     10424>>ASSIGN
KV$PTR$
      5676**DCL      5682--IMP-PTR 10407>>ASSIGN  10408<<ASSIGN  10424>>ASSIGN  10426<<ASSIGN  10439>>ASSIGN
     10473<<ASSIGN
KV$VDI.ASNINPPTR$
      5726**DCL     10408>>ASSIGN
KV$VDI.BSY
      5760**DCL     10405>>IF      10406<<ASSIGN  10424<<ASSIGN
KV$VDI.DFR.USR
      5757**DCL     10411<<ASSIGN
KV@USRENT.SVDPTR$
     10214**DCL     10407<<ASSIGN  10426>>ASSIGN  10439<<ASSIGN  10473>>ASSIGN
KV_STT.REQSTATS.DSPMSK
     10071**DCL     10077--REDEF
KV_STT.REQSTATS.SLCMSK
     10112**DCL     10119--REDEF
KV_STT.USRENTCNT
     10181**DCL     10404<<ASSIGN  10404>>ASSIGN
KV_STT.USRENTDFRCNT
     10182**DCL     10412<<ASSIGN  10412>>ASSIGN
X6A_INTRET
PL6.E3A0      #001=KAI$INP File=KAI$INP.:E05TSI                                  TUE 07/29/97 23:56 Page:31   
      5987**DCL-ENT 10485--CALL    10486--CALL
Y@CHN
     10193**DCL     10277<<ASSIGN  10278>>IF      10283>>ASSIGN  10327>>ASSIGN
Y@CRTEXCTIM
     10245**DCL     10479<>CALL    10480>>ASSIGN
Y@DFR
     10429**LABEL   10413--GOTO
Y@SVDEXCTIM
     10241**DCL     10275<>CALL    10480>>ASSIGN

PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:32   
      175        1        /*T***********************************************************/
      176        2        /*T*                                                         */
      177        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      178        4        /*T*                                                         */
      179        5        /*T***********************************************************/
      180        6        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IAD=3,IND=0 */
      181        7
      182        8
      183        9
      184       10
      185       11
      186       12        /* Process all characters in the ASYNC input buffer.                          */
      187       13
      188       14
      189       15        KAI$INPINT: PROC ;
      190       16        %INCLUDE KV_GLBASM_E;
      191       34 S      %INCLUDE KV_GLBCNS_E;
      192       35        %KV_SCHRSN_E;                           /*  Schedule reasons                  */
      193       42
      194       43    1   DCL KHD$ERRLOG_SETTERMID_CHN ENTRY(2) ALTRET;
      195       44 S      %INCLUDE KV$GLB;
      196       45 S      %INCLUDE KV$GLBCTX;
      197       46        %INCLUDE KA$GLB;
      198      187        %INCLUDE KA_GLB;
      199      264        %INCLUDE KA_GLB_E;
      200      342        %KA_HLTOTP_E;
      201      351        %EQU KA_CTX=CHARTEXT('KA$CTX');
      202      352        %KA$CTX (STCLASS="BASED(Y@CTX$)"); /*  ASYNC CONTEXT BLOCK ITEM DEFINITIONS   */
      203      476        %KA$INPBFR;                             /*  ASYNC INPUT BUFFER DEFINITIONS    */
      204      501        %INCLUDE KV_GLB_M;                      /*  VDH-user macros                   */
      205      623        %INCLUDE LCP_6;
      206      814        %INCLUDE KH$CHN;
      207      936        %KH$CHN (STCLASS="BASED(Y@CHN$)");      /*  CHANNEL TABLES ITEM DEFINITONS    */
      208     1060        %EQU KH_CHN = CHARTEXT('KH$CHN');
      209     1061        %INCLUDE KH$CLK;
      210     1431        %INCLUDE KH_CLKFNC_E;
      211     1476        %KH$CLK (FPTN=KA_POLCLK, STCLASS=STATIC, SBR=KAI$POL, PRD=50,
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:33   
      212     1477         FNC=%KH#CLK_SETCLK, EXPINH=YES);
      213     1626    1   DCL KHC$CLOCK ENTRY(1) ALTRET;
      214     1627    1   DCL KHC$UTS ENTRY(1) ALTRET;
      215     1628    1   DCL KAI$POL ENTRY(1);
      216     1629    1   DCL KA_POLLMT UBIN STATIC SYMDEF INIT(25);
      217     1630    1   DCL KA_POLHED$ PTR STATIC SYMDEF INIT(ADDR(NIL));
      218     1631        %INCLUDE GH_IOFNC_E;                    /*  IO FUNCTION CODES                 */
      219     1700        %INCLUDE KW_LCT_E;                      /*  MLCP LCT DEFINITIONS              */
      220     2055        %INCLUDE KW_ALCT_E;                     /*  MLCP ASYNC LCT DEFINITIONS        */
      221     2245        /* Includes and invocations for KA_STT */
      222     2246        %INCLUDE KL_MACRO_C;
      223     5598        %INCLUDE KL_AFCN_C;
      224     5699        %INCLUDE K_ID_E;
      225     5749        %K#LYRID_E;
      226     5756        %K#ENTID_E;
      227     5775        %INCLUDE KH$STT;
      228     5805        %INCLUDE KV$BPC;
      229     5834        %KA_STT;
      230     6197
      231     6198        %KV$PTR;                                /*  VDH Pointers, status              */
      232     6241        %KV$SSN;                                /*  Session context                   */
      233     6320        %KV$VDI;                                /*  VDI (VDH < ->VDH user interface)  */
      234     6391        %INCLUDE KA_LCT_E;                 /*  MLCP ASYNC HANDLER LCT DEFINITIONS     */
      235     6515        %INCLUDE KH$IO;                         /* MACROS FOR BUILD PARMS TO IO CALLS */
      236     6762        %KH$IO(FPTN=KH_IO_INPRNG,FNC=%GH#IO_INPRNG,STCLASS=CONSTANT);
      237     6876        %KH$IO(FPTN=KH_IO_INPNXTCCBSTT,FNC=%GH#IO_INPNXTCCBSTT,STCLASS=CONSTANT);
      238     6990        %KH$IO(FPTN=KH_IO_INPLCTBYT,FNC=%GH#IO_INPLCTBYT,STCLASS=CONSTANT);
      239     7104        %KH$IO(FPTN=KH_IO_OTPLCTBYT,FNC=%GH#IO_OTPLCTBYT,STCLASS=CONSTANT);
      240     7218        %KH$IOLD(FPTN=KH_IOLD,STCLASS=CONSTANT,INTCPU=YES,VLDCCB=YES);
      241     7269
      242     7270    1   DCL Y_BFRMAXBYTSIZ(0:15) CONSTANT UBIN INIT
      243     7271    1   (32*6 /* <200 baud */, 64, 128*2 /* 300, 600, 1050 */, 256*3 /* 1200-2000 */,
      244     7272    1    512 /* 2400 */, 1024 /* 4800 */, 2048 /* 9600 */, 4096 /* 19200 */);
      245     7273        %INCLUDE KA_PERR_C;
      246     7292        %FPT_WRSYSLOG (FPTN = FPT_WRSYSLOG_IO_ERR, STCLASS = CONSTANT, FCG = KA, MID = I,
              7292            ERR = %E$ASN_IO_ERR, SEV = 3);
      247     7387        %FPT_WRSYSLOG (FPTN = FPT_WRSYSLOG_INVRNG, STCLASS = CONSTANT, FCG = KA, MID = I,
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:34   
              7387            ERR = %E$ASN_INVRNG, SEV = 3);
      248     7482    1   DCL KHI$IO_INP ENTRY(2) ALTRET;
      249     7483    1   DCL KHI$IO_OTP ENTRY(2) ALTRET;
      250     7484    1   DCL KHI$IO_INPLCTBYT ENTRY(2) ALTRET;
      251     7485    1   DCL KHI$IO_OTPLCTBYT ENTRY(2) ALTRET;
      252     7486    1   DCL KHI$IOLD ENTRY(2) ALTRET;
      253     7487    1   DCL KAO$ASNRQSRSMOTP ENTRY(1);
      254     7488    1   DCL KAO$IOLD_OTP ENTRY;
      255     7489
      256     7490    1   DCL KV_VDH_EVT_CMPOTP UBIN SYMREF;
      257     7491    1   DCL KV_VDH_EVT_RLSVDI UBIN SYMREF;
      258     7492    1   DCL KVB$GET2NSYS ENTRY(2) ALTRET;
      259     7493    1   DCL KVB$RLS2NSYS ENTRY(2) ALTRET;
      260     7494    1   DCL KVI$RE_DSPINP ENTRY;
      261     7495    1   DCL KVV$VDI ENTRY(1) ALTRET;            /* USED IN KV$CMPOTP                  */
      262     7496
      263     7497    1   DCL Y@CHN$ PTR;
      264     7498    1   DCL Y@CTX$ PTR;
      265     7499    1   DCL Y@BFR$ PTR;
      266     7500    1   DCL Y@MAXBYTX SBIN WORD;
      267     7501    1   DCL Y@UTS UBIN;
      268     7502        %KV$BFRDSC (NAME=Y$NEWBFR__, STCLASS="BASED(Y@BFR$)");
      269     7529        %KV$VECTOR (NAME=Y$NEWBFR_, STCLASS="BASED(Y@BFR$)");
      270     7555    1   DCL Y$U UBIN BASED ALIGNED;
      271     7556        %KH$IO(FPTN=KH@IO_INPNXTCCBSTT,FNC=%GH#IO_INPNXTCCBSTT,STCLASS=AUTO);
      272     7670        %KH$IO(FPTN=KH@IO_INPRNG,FNC=%GH#IO_INPRNG,STCLASS=AUTO);
      273     7784        %KH$IO(FPTN=KH@IO_INPLCTBYT,FNC=%GH#IO_INPLCTBYT,STCLASS=AUTO);
      274     7898        %KH$IO(FPTN=KH@IO_OTPLCTBYT,FNC=%GH#IO_OTPLCTBYT,STCLASS=AUTO);
      275     8012        %KH$IOLD(FPTN=KH@IOLD,STCLASS=AUTO);
      276     8063
      277     8064    1      Y@CHN$ = %KV_VDI.CHN$;
      278     8065    1      Y@CTX$ = %KH_CHN.CTX$;
      279     8066    1      Y@BFR$ = %KA_CTX.VDH_DAT.DAT__.ADR$;
      280     8067    1      Y@MAXBYTX = %KA_CTX.VDH_DAT.DAT__.BFRBYTSIZ/2;
      281     8068    1      IF Y@MAXBYTX<=%KA_CTX.VDH_DAT.DAT__.BYTX
      282     8069    1      THEN Y@MAXBYTX = Y@MAXBYTX+Y@MAXBYTX;
      283     8070    1      Y@UTS = 0;
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:35   
      284     8071    2      IF KV$PTR.INPCNDPND.ESC.PRF AND NOT %KA_CTX.LCTSTT.PLD THEN DO;
      285     8072
      286     8073        /* Make it possible to enter e.g. ESC-3-HT on a terminal where ESC-3 is
      287     8074           a function key, just by typing it slowly enough */
      288     8075
      289     8076    2         Y@UTS = %KA_CTX.LSTUTS;
      290     8077    2         CALL KHC$UTS (KH@IO_INPRNG);
      291     8078    2         Y@UTS = KH@IO_INPRNG.RNG-Y@UTS;
      292     8079    2         IF Y@UTS>=3 THEN KV$PTR.INPCNDPND.ESC.PRF = '0'B;
      293     8080    2         Y@UTS = Y@UTS+%KA_CTX.LSTUTS;
      294     8081    2      END;
      295     8082    1      KH@IO_INPRNG = KH_IO_INPRNG;
      296     8083    2   MAIN_LOOP: DO WHILE ('1'B);             /* LOOP START                         */
      297     8084
      298     8085        /* This loop is traversed once for each                                       */
      299     8086        /* group of characters in the input buffer. Groups never                      */
      300     8087        /* span input buffer halves. Typically we only process one                    */
      301     8088        /* character for an iteration of the loop. However, if                        */
      302     8089        /* we're running behind the input character stream, we                        */
      303     8090        /* may process more than one character.                                       */
      304     8091
      305     8092
      306     8093        /* FIND OUT WHERE WE ARE IN THE INPUT BUFFER.                                 */
      307     8094        /* DO IO (INPUT RANGE), ERROR CHECKING                                        */
      308     8095
      309     8096    2         CALL KHI$IO_INP(%KH_CHN,KH@IO_INPRNG) WHENALTRETURN
      310     8097    3         DO;
      311     8098        /*N* IONAK'ed. Throw in error recovery  */
      312     8099    3            EXIT MAIN_LOOP;
      313     8100    3         END;
      314     8101
      315     8102        /* IO (INPUT RANGE) WAS SUCCESSFUL.                                           */
      316     8103
      317     8104    2         IF KH@IO_INPRNG.RNG~=%KA_CTX.INPRNG
      318     8105
      319     8106        /* There are new characters to process.                                       */
      320     8107
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:36   
      321     8108    3         THEN FETCH: DO WHILE ('1'B);      /* LOOP START                         */
      322     8109    4            IF KH@IO_INPRNG.RNG>Y@MAXBYTX-%KA_CTX.VDH_DAT.DAT__.BYTX THEN DO;
      323     8110    4               CALL KHD$ERRLOG_SETTERMID_CHN (FPT_WRSYSLOG_INVRNG, %KH_CHN);
      324     8111        /*E* ERROR: KAI-E$ASN_INVRNG
      325     8112             MESSAGE: Out of range range obtained by ASYNC
      326     8113             REMARKS: The range exceeded the size of the buffer we were supposed
      327     8114                      to be using.  ASYNC switches to another buffer.
      328     8115        */
      329     8116    4               KH@IO_INPRNG.RNG = 0;
      330     8117    4            END;
      331     8118    3            %KA_CTX.INPRNG = KH@IO_INPRNG.RNG;
      332     8119
      333     8120        /* This loop is re-iterated when we try to get a character from               */
      334     8121        /* the CLC RAM (because its not in the buffer) and receive more               */
      335     8122        /* than 1 more character while trying.                                        */
      336     8123
      337     8124    3            IF NOT BINBIT(KH@IO_INPRNG.RNG,1) THEN
      338     8125        /* We didn't have any complications due to a character still                  */
      339     8126        /* being out in the com line controller.                                      */
      340     8127    3            EXIT FETCH;
      341     8128    4            ELSE DO;
      342     8129
      343     8130        /* THE LAST CHARACTER TO PROCESS IS STILL IN THE                              */
      344     8131        /* COMMUNICATIONS LINE CONTROLLER, BECAUSE IT                                 */
      345     8132        /* GENERALLY TRANSFERS 2 BYTES AT A TIME ON THE                               */
      346     8133        /* MEGABUS. WE'LL HAVE TO GET THE CHARACTER VIA                               */
      347     8134        /* THE INPUT-LCT-BYTE MECHANISM.                                              */
      348     8135        /* THE DATA BYTE WE NEED IS IN LCT10.                                         */
      349     8136
      350     8137    4               KH@IO_INPLCTBYT = KH_IO_INPLCTBYT;
      351     8138    4               KH@IO_INPLCTBYT.LCTBYT.ADR = 10;
      352     8139    4               CALL KHI$IO_INPLCTBYT(%KH_CHN,KH@IO_INPLCTBYT) WHENALTRETURN
      353     8140    5               DO;
      354     8141        /* THE IO (INPUT LCT BYTE) OR IO (OUTPUT LCT BYTE) FAILED.                    */
      355     8142
      356     8143        /*N* **** > THROW IN ERROR RECOVERY < ****                                      */
      357     8144    5                  EXIT FETCH;              /* LOOK BELOW                         */
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:37   
      358     8145    5               END;
      359     8146
      360     8147        /* INPUT LCT BYTE WAS SUCCESSFUL.                                             */
      361     8148        /* RE-CHECK THE INPUT RANGE TO MAKE SURE THAT LCT10                           */
      362     8149        /* IS VALID* CLC, AND IT JUST TRANSFERRED MORE DATA, LCT10 MIGHT              */
      363     8150        /* NOW CONTAIN THE NEW DATA RATHER THAN THE OLDER DATA                        */
      364     8151        /* THAT WE ARE TRYING TO PROCESS.                                             */
      365     8152
      366     8153        /* DO IO (INPUT RANGE), ERROR CHECKING                                        */
      367     8154
      368     8155    4               CALL KHI$IO_INP(%KH_CHN,KH@IO_INPRNG) WHENALTRETURN
      369     8156    5               DO;
      370     8157        /* IO (INPUT RANGE) failed.     */
      371     8158        /*N* ****> throw in error recovery <*******  */
      372     8159    5                  EXIT FETCH;
      373     8160    5               END;
      374     8161
      375     8162        /* IO (INPUT RANGE) WAS SUCCESSFUL.                                           */
      376     8163        /* CHECK TO SEE IF OUR CHARACTER IS STILL VALID.                              */
      377     8164
      378     8165    5               IF NOT BINBIT(KH@IO_INPRNG.RNG,1) THEN DO;
      379     8166
      380     8167        /* An odd number of characters have come in. They filled to an even           */
      381     8168        /* byte, so we don't have any problems finding the characters.                */
      382     8169    5                  %KA_CTX.INPRNG = KH@IO_INPRNG.RNG;
      383     8170    5                  EXIT FETCH;              /* LOOK BELOW                         */
      384     8171    5               END; ELSE IF KH@IO_INPRNG.RNG=%KA_CTX.INPRNG THEN DO;
      385     8172
      386     8173        /* No more characters have come in since we did the input                     */
      387     8174        /* range IO before the input LCT byte.                                        */
      388     8175        /* Store the character we got from input LCT byte into the buffer.            */
      389     8176
      390     8177    5                  Y@BFR$->KA$INPBFR.CHR(Y@MAXBYTX-KH@IO_INPRNG.RNG-1) =
      391     8178    5                    KH@IO_INPLCTBYT.LCTBYT.DAT;
      392     8179    5                  EXIT FETCH;              /* LOOK BELOW                         */
      393     8180
      394     8181    5               END;
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:38   
      395     8182
      396     8183    4            END;                           /* IF MOD(  ,2)=1                     */
      397     8184
      398     8185    3         END /* FETCH_LOOP */;
      399     8186
      400     8187        /* COMPUTE THE NUMBER OF UNPROCESSED CHARACTERS IN THIS HALF                  */
      401     8188        /* OF THE BUFFER.                                                             */
      402     8189
      403     8190    2         %KA_CTX.VDH_DAT.DAT__.DATBYTSIZ =
      404     8191    2           Y@MAXBYTX - %KA_CTX.INPRNG - %KA_CTX.VDH_DAT.DAT__.BYTX;
      405     8192
      406     8193        /* Call VDH with the input characters.                                        */
      407     8194
      408     8195    3         IF %KA_CTX.VDH_DAT.DAT__.DATBYTSIZ~=0 THEN DO;
      409     8196    3            %KA_CTX.INPCHRSNCUTS = %KA_CTX.INPCHRSNCUTS +
      410     8197    3              %KA_CTX.VDH_DAT.DAT__.DATBYTSIZ;
      411     8198    4            IF %KA_CTX.REDHLT THEN DO;
      412     8199        /* esc-h typed after the prompt, make it easy to continue */
      413     8200    4               %KA_CTX.REDHLT = '0'B;
      414     8201    4               CALL KAO$ASNRQSRSMOTP (%KA#HLTOTP_USRX);
      415     8202    4            END;
      416     8203    4            CALL KVV$VDI(%KA_CTX.VDH_DAT) WHENALTRETURN DO;
      417     8204    4               %KA_CTX.INPCHRSNCUTS = %KA_CTX.INPCHRSNCUTS -
      418     8205    4                 %KA_CTX.VDH_DAT.DAT__.DATBYTSIZ;
      419     8206    4               %KV_VDI.DFR.USR(%KV_SCHRSN_DFR1) = '1'B;
      420     8207    4               IF ADDR(%KV_SSN)~=ADDR(NIL)
      421     8208    4               THEN IF %KV_SSN.SSNCNCID~=0
      422     8209    4               THEN CALL KVV$VDI (KV_VDH_EVT_RLSVDI);
      423     8210    4               RETURN;
      424     8211    4            END;
      425     8212    3            %KA_CTX.INPCHRSNCUTS = %KA_CTX.INPCHRSNCUTS-%KA_CTX.VDH_DAT.CMPCOD;
      426     8213    3            %KA_CTX.VDH_DAT.CMPCOD = 0;
      427     8214    3         END;
      428     8215    2         IF KH@IO_INPRNG.RNG~=0 THEN EXIT MAIN_LOOP;
      429     8216
      430     8217        /* WE'RE AT THE END OF THE BUFFER HALF.                                       */
      431     8218        /* WE'LL DO AN IO (INPUT NEXT CCB STATUS) TO                                  */
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:39   
      432     8219        /* ADVANCE THE STATUS POINTER TO THE NEXT                                     */
      433     8220        /* IN-USE CCB.                                                                */
      434     8221
      435     8222        /* CLOBBER THE INPUT RANGE VALUE                                              */
      436     8223
      437     8224    2         %KA_CTX.INPRNG = %KA_CTX.INPRNG-1;
      438     8225
      439     8226        /* DO IO (INPUT NEXT CCB STATUS)                                              */
      440     8227
      441     8228    2         KH@IO_INPNXTCCBSTT = KH_IO_INPNXTCCBSTT;
      442     8229    2         CALL KHI$IO_INP(%KH_CHN,KH@IO_INPNXTCCBSTT) WHENALTRETURN
      443     8230    3         DO;
      444     8231
      445     8232        /* IO (INPUT NEXT CCB STATUS) FAILED.                                         */
      446     8233
      447     8234    3            EXIT MAIN_LOOP;                /* LOOK BELOW                         */
      448     8235    3         END;                              /* WHENALTRETURN                      */
      449     8236        /*E* ERROR:         KAI-E$ASN_IO_ERR
      450     8237             MESSAGE:       IO error (Bad CCB status)
      451     8238             REMARKS:   The CCB status indicated an IO error occurred. */
      452     8239              %KAC$CLCERRCHK(CCBSTT=KH@IO_INPNXTCCBSTT.CCBSTT,
      453     8240              CCBSRVERR=YES,
      454     8241              DATCHKERR=YES,
      455     8242              INVMMRADR=YES,
      456     8243              BUSPRTERR=YES,
      457     8244              UN_CRCMMRERR=YES);
      458     8250
      459     8251        /* GET THE WAIT-FOR-INTERRUPT FLAG FROM THE CONTROLLER.                       */
      460     8252    2         KH@IO_INPLCTBYT = KH_IO_INPLCTBYT;
      461     8253    2         KH@IO_INPLCTBYT.LCTBYT.ADR = %KA_LCT_CNCSTT;
      462     8254    2         CALL KHI$IO_INPLCTBYT(%KH_CHN,KH@IO_INPLCTBYT) ;
      463     8255
      464     8256        /* DO AN IOLD AND IO (OUTPUT CCB CONTROL) TO Q THE                            */
      465     8257        /* INPUT BUFFER ONTO THE COMMUNICATIONS LINE CONTROLLER                       */
      466     8258        /* AGAIN.                                                                     */
      467     8259
      468     8260    2         KH@IOLD = KH_IOLD;
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:40   
      469     8261    2         KH@IOLD.BFR_.BYTSIZ = %KA_CTX.VDH_DAT.DAT__.BFRBYTSIZ/2;
      470     8262    2         KH@IOLD.BFR_.ADR$ = Y@BFR$;
      471     8263    2         KH@IOLD.BFR_.BYTX = Y@MAXBYTX-KH@IOLD.BFR_.BYTSIZ;
      472     8264    2         IF KH@IOLD.BFR_.BYTX~=0 THEN %KA_CTX.VDH_DAT.DAT__.BYTX = 0;
      473     8265    2         Y@MAXBYTX = %KA_CTX.VDH_DAT.DAT__.BYTX+KH@IOLD.BFR_.BYTSIZ;
      474     8266    2         IF %KA_CTX.LCTSTT.PLD THEN KH@IOLD.CCBCTR.INTCPU = '0'B;
      475     8267
      476     8268        /* Check to see if we should try getting a bigger buffer. */
      477     8269
      478     8270    2         IF KH@IO_INPLCTBYT.LCTBYT&%KA_LCT_CNCSTT_WATFORINT@S
      479     8271    2           AND NOT %KA_CTX.BFRGRWPND AND %KA_CTX.VDH_DAT.DAT__.BFRBYTSIZ<
      480     8272    3           Y_BFRMAXBYTSIZ (%KV_VDI.LINSPD) THEN DO;
      481     8273
      482     8274        /* Yup, lets give it a shot.  First form a pointer to the just-completed
      483     8275           buffer half, to save the new buffers parameters in. */
      484     8276
      485     8277    3            Y@BFR$ = PINCRW(Y@BFR$,ADDR(KH@IOLD.BFR_.BYTX)->Y$U/2);
      486     8278    3            Y$NEWBFR__.DATBYTSIZ = %KA_CTX.VDH_DAT.DAT__.BFRBYTSIZ;
      487     8279    3            CALL KVB$GET2NSYS (Y$NEWBFR__.DATBYTSIZ, Y$NEWBFR__.ADR$)
      488     8280    4            WHENRETURN DO;
      489     8281    4               Y$NEWBFR__.BFRBYTSIZ = Y$NEWBFR__.DATBYTSIZ*2;
      490     8282    4               KA_STT.KHSTT.INPBFRBYTUTL = KA_STT.KHSTT.INPBFRBYTUTL +
      491     8283    4                 Y$NEWBFR__.BFRBYTSIZ;
      492     8284    4               Y$NEWBFR__.BYTX = 0;
      493     8285    4               KH@IOLD.BFR_ = Y$NEWBFR_;
      494     8286    4               Y$NEWBFR__.BYTX = Y$NEWBFR__.DATBYTSIZ;
      495     8287    4               %KA_CTX.BFRGRWPND = '1'B;
      496     8288    4            END /* WHENRETURN */;
      497     8289    3            Y@BFR$ = %KA_CTX.VDH_DAT.DAT__.ADR$;
      498     8290    3         END; ELSE IF %KA_CTX.BFRGRWPND THEN DO;
      499     8291
      500     8292        /* We got a bigger buffer last time.  IOLD its second half, release the old
      501     8293           one, and start using the new one. */
      502     8294
      503     8295    3            Y@BFR$ = PINCRW(Y@BFR$,ADDR(%KA_CTX.VDH_DAT.DAT__.BYTX)->Y$U/2);
      504     8296    3            %KA_CTX.VDH_DAT.DAT__ = Y$NEWBFR__;
      505     8297    3            KH@IOLD.BFR_.ADR$->Y$U = KH@IOLD.BFR_.BYTSIZ;
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:41   
      506     8298    3            CALL KVB$RLS2NSYS (KH@IOLD.BFR_.ADR$->Y$U);
      507     8299    3            KA_STT.KHSTT.INPBFRBYTUTL = KA_STT.KHSTT.INPBFRBYTUTL-
      508     8300    3              KH@IOLD.BFR_.BYTSIZ*2;
      509     8301    3            KH@IOLD.BFR_ = ADDR(%KA_CTX.VDH_DAT.DAT__)->Y$NEWBFR_;
      510     8302    3            %KA_CTX.VDH_DAT.DAT__.BYTX = 0;
      511     8303    3            %KA_CTX.BFRGRWPND = '0'B;
      512     8304    3            Y@BFR$ = KH@IOLD.BFR_.ADR$;
      513     8305    3            Y@MAXBYTX = KH@IOLD.BFR_.BYTX;
      514     8306    3         END;
      515     8307    2         CALL KHI$IOLD(%KH_CHN,KH@IOLD) WHENALTRETURN
      516     8308    3         DO;
      517     8309        /* THE IOLD OR IO (OUTPUT CCB CONTROL) FAILED.                         */
      518     8310
      519     8311        /*N* THROW IN ERROR RECOVERY                                                  */
      520     8312    3            EXIT MAIN_LOOP;                /* LOOK BELOW                         */
      521     8313    3         END;
      522     8314
      523     8315        /* CHECK THE WAIT-FOR-INTERRUPT FLAG FROM THE CONTROLLER.                     */
      524     8316
      525     8317    2         IF KH@IO_INPLCTBYT.LCTBYT&%KA_LCT_CNCSTT_WATFORINT@S THEN
      526     8318    3         DO;
      527     8319
      528     8320        /* THE RECEIVE CCP IS WAITING FOR A CCB.                                      */
      529     8321
      530     8322        /* RESET THE RECEIVE STATUS FLAGS IN THE CLC LCT. THIS WILL CAUSE             */
      531     8323        /* A DATASET SCAN INTERRUPT ON THE RECEIVE SIDE IN THE CLC, TO                */
      532     8324        /* GET THE RECEIVE CCP GOING AGAIN.                                           */
      533     8325    3            KH@IO_OTPLCTBYT = KH_IO_OTPLCTBYT;
      534     8326    3            KH@IO_OTPLCTBYT.LCTBYT.ADR = %KW#RCVSTT;
      535     8327    3            KH@IO_OTPLCTBYT.LCTBYT.DAT = 0;
      536     8328    3            CALL KHI$IO_OTPLCTBYT(%KH_CHN,KH@IO_OTPLCTBYT);
      537     8329    3         END /* IF */;
      538     8330    2      END /* MAIN_LOOP */;
      539     8331
      540     8332        /* Check the input rate for possible polled operation. */
      541     8333
      542     8334    2      IF %KA_CTX.INPCHRSNCUTS/4>KA_POLLMT THEN DO;
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:42   
      543     8335    2         CALL KHC$UTS (KH@IO_INPRNG);
      544     8336    2         Y@UTS = KH@IO_INPRNG.RNG-%KA_CTX.LSTUTS;
      545     8337    2         %KA_CTX.LSTUTS = KH@IO_INPRNG.RNG;
      546     8338    2         %KA_CTX.INPCHRSNCUTS = 0;
      547     8339    3         IF Y@UTS<30 AND NOT %KA_CTX.LCTSTT.PLD THEN DO;
      548     8340    3            %KA_CTX.LCTSTT.PLD = '1'B;
      549     8341    3            KH@IO_OTPLCTBYT = KH_IO_OTPLCTBYT;
      550     8342    3            KH@IO_OTPLCTBYT.LCTBYT.ADR = %KA_LCT_L6_STT;
      551     8343    3            KH@IO_OTPLCTBYT.LCTBYT.DAT = BITBIN(%KA_CTX.LCTSTT);
      552     8344    3            CALL KHI$IO_OTPLCTBYT (%KH_CHN, KH@IO_OTPLCTBYT);
      553     8345    3            KA_POLCLK.CTBCTX$ = ADDR(NIL);
      554     8346    3            IF KA_POLHED$=ADDR(NIL) THEN CALL KHC$CLOCK (KA_POLCLK);
      555     8347    3            %KA_CTX.POLLNK$ = KA_POLHED$;
      556     8348    3            KA_POLHED$ = ADDR(%KA_CTX);
      557     8349    3         END;
      558     8350    2      END; ELSE IF %KA_CTX.LCTSTT.PLD THEN DO;
      559     8351
      560     8352        /* Check to see if we should start interrupting again. */
      561     8353
      562     8354    2         CALL KHC$UTS (KH@IO_INPRNG);
      563     8355    2         Y@UTS = KH@IO_INPRNG.RNG-%KA_CTX.LSTUTS;
      564     8356    3         IF %KA_CTX.INPCHRSNCUTS~=KA_POLLMT THEN DO;
      565     8357    3            %KA_CTX.INPCHRSNCUTS = 0;
      566     8358    3            %KA_CTX.LSTUTS = KH@IO_INPRNG.RNG;
      567     8359    3         END; ELSE IF Y@UTS>7 THEN DO;
      568     8360
      569     8361        /* A full second with no characters, start the interrupts again. */
      570     8362
      571     8363    3            KH@IO_OTPLCTBYT = KH_IO_OTPLCTBYT;
      572     8364    3            %KA_CTX.LCTSTT.PLD = '0'B;
      573     8365    3            KH@IO_OTPLCTBYT.LCTBYT.ADR = %KA_LCT_L6_STT;
      574     8366    3            KH@IO_OTPLCTBYT.LCTBYT.DAT = BITBIN(%KA_CTX.LCTSTT);
      575     8367    3            CALL KHI$IO_OTPLCTBYT (%KH_CHN, KH@IO_OTPLCTBYT);
      576     8368    3            Y@BFR$ = KA_POLHED$;
      577     8369    4            IF Y@BFR$=ADDR(%KA_CTX) THEN DO;
      578     8370    4               KA_POLHED$ = %KA_CTX.POLLNK$;
      579     8371    4            END; ELSE UNLINKPOL: DO WHILE Y@BFR$~=ADDR(NIL);
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:43   
      580     8372    5               IF Y@BFR$->KA$CTX.POLLNK$=ADDR(%KA_CTX) THEN DO;
      581     8373    5                  Y@BFR$->KA$CTX.POLLNK$ = %KA_CTX.POLLNK$;
      582     8374    5                  EXIT UNLINKPOL;
      583     8375    5               END;
      584     8376    4               Y@BFR$ = Y@BFR$->KA$CTX.POLLNK$;
      585     8377    4            END;
      586     8378    3         END;
      587     8379    2      END; ELSE IF KV$PTR.INPCNDPND.ESC.PRF THEN DO;
      588     8380
      589     8381        /* Set a clock to make sure the function key was used to generate its chars */
      590     8382
      591     8383    2         CALL KHC$UTS (KH@IO_INPRNG);
      592     8384    2         %KA_CTX.LSTUTS = KH@IO_INPRNG.RNG;
      593     8385    2         %KA_CTX.INPCHRSNCUTS = 0;
      594     8386    2      END;
      595     8387    2      IF %KH_CHN.OTPCCBCNT=0 AND NOT %KA_CTX.HLTOTP THEN DO;
      596     8388
      597     8389        /* THE OUTPUT CCB COUNT IS ZERO, SO POSITIONING AND/OR                        */
      598     8390        /* OUTPUT BUFFER TRUNCATING WON'T BE DONE BY THE OUTPUT                       */
      599     8391        /* INTERRUPT ROUTINE.                                                         */
      600     8392
      601     8393        /* Force completion of any pending output operations.                         */
      602     8394
      603     8395    3         IF %KV_VDI.RE_DSPINP THEN DO;
      604     8396    3            CALL KVI$RE_DSPINP;
      605     8397    3         END;
      606     8398
      607     8399              %KV$CMPOTP;
              8404    3           IF KV$PTR.VDI$->KV$VDI.OTPCNDPND THEN DO;
              8405    3              CALL KVV$VDI(KV_VDH_EVT_CMPOTP);
              8406    3              END;                         /* END IF                             */
      608     8408    3         IF (%KA_CTX.OTPBFRBYTCNT ~= 0) THEN DO;
      609     8409
      610     8410        /* THERE IS AN OUTPUT BUFFER THAT NEEDS TO BE TRUNCATED/IOLD'D.               */
      611     8411
      612     8412    3            CALL KAO$IOLD_OTP ;
      613     8413    3         END /* IF */;
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:44   
      614     8414    2      END /* IF */;
      615     8415    1   END KAI$INPINT;
      616     8416        %EOD;

PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:45   
--  Include file information  --

   KA_PERR_C.:E05TOU  is referenced.
   KH$IO.:E05TOU  is referenced.
   KA_LCT_E.:E05TOU  is referenced.
   KV$BPC.:E05TOU  is referenced.
   KH$STT.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KW_ALCT_E.:E05TOU  is referenced.
   KW_LCT_E.:E05TOU  is referenced.
   GH_IOFNC_E.:E05TOU  is referenced.
   KH_CLKFNC_E.:E05TOU  is referenced.
   KH$CLK.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KV_GLB_M.:E05TOU  is referenced.
   KA_GLB_E.:E05TOU  is referenced.
   KA_GLB.:E05TOU  is referenced.
   KA$GLB.:E05TOU  is referenced.
   KV_GLBASM_E.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is never referenced.
   KV$USR.:E05TOU  was found in the system file and is never referenced.
   KV$SND.:E05TOU  was found in the system file and is never referenced.
   KV$INT.:E05TOU  was found in the system file and is never referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:46   
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KAI$INPINT.

   Procedure KAI$INPINT requires 992 words for executable code.
   Procedure KAI$INPINT requires 30 words of local(AUTO) storage.

PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:47   

 Object Unit name= KAI$INPINT                                 File name= KAI$INP.:E05TOU
 UTS= JUL 29 '97 23:57:22.08 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Data  even  none    14      E  KAI$INPINT
    1  RoData even  UTS     71     47  KAI$INPINT
    2   Proc  even  none   992    3E0  KAI$INPINT
    3  RoData even  none     9      9  KAI$INPINT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        0  KAI$INPINT

  ****  Data defs  ****

 Sect HexLoc  Name                           Sect HexLoc  Name
    0      B  KA_POLLMT                          0      C  KA_POLHED$
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:48   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 KAI$POL
 yes     yes           Std       1 KHC$UTS
 yes     yes           Std       2 KVB$GET2NSYS
 yes     yes           Std       2 KVB$RLS2NSYS
 yes     yes           Std       2 KHI$IO_INP
 yes     yes           Std       2 KHD$ERRLOG_SETTERMID_CHN
         yes           Std       1 KAO$ASNRQSRSMOTP
 yes     yes           Std       1 KHC$CLOCK
         yes           Std       0 KAO$IOLD_OTP
 yes     yes           Std       1 KVV$VDI
         yes           Std       0 KVI$RE_DSPINP
 yes     yes           Std       2 KHI$IO_INPLCTBYT
 yes     yes           Std       2 KHI$IOLD
 yes     yes           Std       2 KHI$IO_OTPLCTBYT
                       nStd      0 X6A_AUTO_0
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KA_STT                                KV$PTR$                               KV_VDH_EVT_CMPOTP
     KV_VDH_EVT_RLSVDI                r    G$ROS$
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:49   


      175        1        /*T***********************************************************/
      176        2        /*T*                                                         */
      177        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      178        4        /*T*                                                         */
      179        5        /*T***********************************************************/
      180        6        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IAD=3,IND=0 */
      181        7
      182        8
      183        9
      184       10
      185       11
      186       12        /* Process all characters in the ASYNC input buffer.                          */
      187       13
      188       14
      189       15        KAI$INPINT: PROC ;

     15   2 000000  D380 0000 0000  xent KAI$INPINT      LNJ,B5   X6A_AUTO_0
          2 000003       001E 0000                       DC       30,0

      190       16        %INCLUDE KV_GLBASM_E;
      191       34 S      %INCLUDE KV_GLBCNS_E;
      192       35        %KV_SCHRSN_E;                           /*  Schedule reasons                  */
      193       42
      194       43    1   DCL KHD$ERRLOG_SETTERMID_CHN ENTRY(2) ALTRET;
      195       44 S      %INCLUDE KV$GLB;
      196       45 S      %INCLUDE KV$GLBCTX;
      197       46        %INCLUDE KA$GLB;
      198      187        %INCLUDE KA_GLB;
      199      264        %INCLUDE KA_GLB_E;
      200      342        %KA_HLTOTP_E;
      201      351        %EQU KA_CTX=CHARTEXT('KA$CTX');
      202      352        %KA$CTX (STCLASS="BASED(Y@CTX$)"); /*  ASYNC CONTEXT BLOCK ITEM DEFINITIONS   */
      203      476        %KA$INPBFR;                             /*  ASYNC INPUT BUFFER DEFINITIONS    */
      204      501        %INCLUDE KV_GLB_M;                      /*  VDH-user macros                   */
      205      623        %INCLUDE LCP_6;
      206      814        %INCLUDE KH$CHN;
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:50   
      207      936        %KH$CHN (STCLASS="BASED(Y@CHN$)");      /*  CHANNEL TABLES ITEM DEFINITONS    */
      208     1060        %EQU KH_CHN = CHARTEXT('KH$CHN');
      209     1061        %INCLUDE KH$CLK;
      210     1431        %INCLUDE KH_CLKFNC_E;
      211     1476        %KH$CLK (FPTN=KA_POLCLK, STCLASS=STATIC, SBR=KAI$POL, PRD=50,
      212     1477         FNC=%KH#CLK_SETCLK, EXPINH=YES);
      213     1626    1   DCL KHC$CLOCK ENTRY(1) ALTRET;
      214     1627    1   DCL KHC$UTS ENTRY(1) ALTRET;
      215     1628    1   DCL KAI$POL ENTRY(1);
      216     1629    1   DCL KA_POLLMT UBIN STATIC SYMDEF INIT(25);
      217     1630    1   DCL KA_POLHED$ PTR STATIC SYMDEF INIT(ADDR(NIL));
      218     1631        %INCLUDE GH_IOFNC_E;                    /*  IO FUNCTION CODES                 */
      219     1700        %INCLUDE KW_LCT_E;                      /*  MLCP LCT DEFINITIONS              */
      220     2055        %INCLUDE KW_ALCT_E;                     /*  MLCP ASYNC LCT DEFINITIONS        */
      221     2245        /* Includes and invocations for KA_STT */
      222     2246        %INCLUDE KL_MACRO_C;
      223     5598        %INCLUDE KL_AFCN_C;
      224     5699        %INCLUDE K_ID_E;
      225     5749        %K#LYRID_E;
      226     5756        %K#ENTID_E;
      227     5775        %INCLUDE KH$STT;
      228     5805        %INCLUDE KV$BPC;
      229     5834        %KA_STT;
      230     6197
      231     6198        %KV$PTR;                                /*  VDH Pointers, status              */
      232     6241        %KV$SSN;                                /*  Session context                   */
      233     6320        %KV$VDI;                                /*  VDI (VDH < ->VDH user interface)  */
      234     6391        %INCLUDE KA_LCT_E;                 /*  MLCP ASYNC HANDLER LCT DEFINITIONS     */
      235     6515        %INCLUDE KH$IO;                         /* MACROS FOR BUILD PARMS TO IO CALLS */
      236     6762        %KH$IO(FPTN=KH_IO_INPRNG,FNC=%GH#IO_INPRNG,STCLASS=CONSTANT);
      237     6876        %KH$IO(FPTN=KH_IO_INPNXTCCBSTT,FNC=%GH#IO_INPNXTCCBSTT,STCLASS=CONSTANT);
      238     6990        %KH$IO(FPTN=KH_IO_INPLCTBYT,FNC=%GH#IO_INPLCTBYT,STCLASS=CONSTANT);
      239     7104        %KH$IO(FPTN=KH_IO_OTPLCTBYT,FNC=%GH#IO_OTPLCTBYT,STCLASS=CONSTANT);
      240     7218        %KH$IOLD(FPTN=KH_IOLD,STCLASS=CONSTANT,INTCPU=YES,VLDCCB=YES);
      241     7269
      242     7270    1   DCL Y_BFRMAXBYTSIZ(0:15) CONSTANT UBIN INIT
      243     7271    1   (32*6 /* <200 baud */, 64, 128*2 /* 300, 600, 1050 */, 256*3 /* 1200-2000 */,
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:51   
      244     7272    1    512 /* 2400 */, 1024 /* 4800 */, 2048 /* 9600 */, 4096 /* 19200 */);
      245     7273        %INCLUDE KA_PERR_C;
      246     7292        %FPT_WRSYSLOG (FPTN = FPT_WRSYSLOG_IO_ERR, STCLASS = CONSTANT, FCG = KA, MID = I,
              7292            ERR = %E$ASN_IO_ERR, SEV = 3);
      247     7387        %FPT_WRSYSLOG (FPTN = FPT_WRSYSLOG_INVRNG, STCLASS = CONSTANT, FCG = KA, MID = I,
              7387            ERR = %E$ASN_INVRNG, SEV = 3);
      248     7482    1   DCL KHI$IO_INP ENTRY(2) ALTRET;
      249     7483    1   DCL KHI$IO_OTP ENTRY(2) ALTRET;
      250     7484    1   DCL KHI$IO_INPLCTBYT ENTRY(2) ALTRET;
      251     7485    1   DCL KHI$IO_OTPLCTBYT ENTRY(2) ALTRET;
      252     7486    1   DCL KHI$IOLD ENTRY(2) ALTRET;
      253     7487    1   DCL KAO$ASNRQSRSMOTP ENTRY(1);
      254     7488    1   DCL KAO$IOLD_OTP ENTRY;
      255     7489
      256     7490    1   DCL KV_VDH_EVT_CMPOTP UBIN SYMREF;
      257     7491    1   DCL KV_VDH_EVT_RLSVDI UBIN SYMREF;
      258     7492    1   DCL KVB$GET2NSYS ENTRY(2) ALTRET;
      259     7493    1   DCL KVB$RLS2NSYS ENTRY(2) ALTRET;
      260     7494    1   DCL KVI$RE_DSPINP ENTRY;
      261     7495    1   DCL KVV$VDI ENTRY(1) ALTRET;            /* USED IN KV$CMPOTP                  */
      262     7496
      263     7497    1   DCL Y@CHN$ PTR;
      264     7498    1   DCL Y@CTX$ PTR;
      265     7499    1   DCL Y@BFR$ PTR;
      266     7500    1   DCL Y@MAXBYTX SBIN WORD;
      267     7501    1   DCL Y@UTS UBIN;
      268     7502        %KV$BFRDSC (NAME=Y$NEWBFR__, STCLASS="BASED(Y@BFR$)");
      269     7529        %KV$VECTOR (NAME=Y$NEWBFR_, STCLASS="BASED(Y@BFR$)");
      270     7555    1   DCL Y$U UBIN BASED ALIGNED;
      271     7556        %KH$IO(FPTN=KH@IO_INPNXTCCBSTT,FNC=%GH#IO_INPNXTCCBSTT,STCLASS=AUTO);
      272     7670        %KH$IO(FPTN=KH@IO_INPRNG,FNC=%GH#IO_INPRNG,STCLASS=AUTO);
      273     7784        %KH$IO(FPTN=KH@IO_INPLCTBYT,FNC=%GH#IO_INPLCTBYT,STCLASS=AUTO);
      274     7898        %KH$IO(FPTN=KH@IO_OTPLCTBYT,FNC=%GH#IO_OTPLCTBYT,STCLASS=AUTO);
      275     8012        %KH$IOLD(FPTN=KH@IOLD,STCLASS=AUTO);
      276     8063
      277     8064    1      Y@CHN$ = %KV_VDI.CHN$;

PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:52   
   8064   2 000005  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 000008  DC86                                 LDB,B5   ,B6
          2 000009  CC85                                 LDB,B4   ,B5
          2 00000A  CFC7 0004                            STB,B4   Y@CHN$,AUTO

      278     8065    1      Y@CTX$ = %KH_CHN.CTX$;

   8065   2 00000C  BCC4 000C                            LDB,B3   12,B4
          2 00000E  BFC7 0006                            STB,B3   Y@CTX$,AUTO

      279     8066    1      Y@BFR$ = %KA_CTX.VDH_DAT.DAT__.ADR$;

   8066   2 000010  ACC3 0011                            LDB,B2   17,B3
          2 000012  AFC7 0008                            STB,B2   Y@BFR$,AUTO

      280     8067    1      Y@MAXBYTX = %KA_CTX.VDH_DAT.DAT__.BFRBYTSIZ/2;

   8067   2 000014  E843 0015                            LDR,R6   21,B3
          2 000016  6041                                 SOR,R6   1
          2 000017  EF47 000A                            STR,R6   Y@MAXBYTX,AUTO

      281     8068    1      IF Y@MAXBYTX<=%KA_CTX.VDH_DAT.DAT__.BYTX

   8068   2 000019  E943 0013                            CMR,R6   19,B3
          2 00001B  0A01 0004                            BAG      s:8070,PREL

      282     8069    1      THEN Y@MAXBYTX = Y@MAXBYTX+Y@MAXBYTX;

   8069   2 00001D  6001                                 SOL,R6   1
          2 00001E  EF47 000A                            STR,R6   Y@MAXBYTX,AUTO

      283     8070    1      Y@UTS = 0;

   8070   2 000020  8747 000B                            CL       Y@UTS,AUTO

      284     8071    2      IF KV$PTR.INPCNDPND.ESC.PRF AND NOT %KA_CTX.LCTSTT.PLD THEN DO;

PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:53   
   8071   2 000022  82C6 001B                            LB,'00C0'X        27,B6
   8071   2 000024       00C0
          2 000025  0581 002B                            BBF      s:8082,PREL
          2 000027  82C3 001C                            LB,'0080'X        28,B3
          2 000029       0080
          2 00002A  0501 0026                            BBT      s:8082,PREL

      285     8072
      286     8073        /* Make it possible to enter e.g. ESC-3-HT on a terminal where ESC-3 is
      287     8074           a function key, just by typing it slowly enough */
      288     8075
      289     8076    2         Y@UTS = %KA_CTX.LSTUTS;

   8076   2 00002C  D843 000D                            LDR,R5   13,B3
          2 00002E  DF47 000B                            STR,R5   Y@UTS,AUTO

      290     8077    2         CALL KHC$UTS (KH@IO_INPRNG);

   8077   2 000030  9BC7 000E                            LAB,B1   KH@IO_INPRNG,AUTO
          2 000032  9FC7 001A                            STB,B1   KH@IOLD+6,AUTO
          2 000034  BBC7 001A                            LAB,B3   KH@IOLD+6,AUTO
          2 000036  CBF0 0100                            LAB,B4   256,IMO
          2 000038  E380 0000 0000  xent                 LNJ,B6   KHC$UTS
          2 00003B       0001                            DC       s:8078,PREL

      291     8078    2         Y@UTS = KH@IO_INPRNG.RNG-Y@UTS;

   8078   2 00003C  E847 000F                            LDR,R6   KH@IO_INPRNG+1,AUTO
          2 00003E  E247 000B                            SUB,R6   Y@UTS,AUTO
          2 000040  EF47 000B                            STR,R6   Y@UTS,AUTO

      292     8079    2         IF Y@UTS>=3 THEN KV$PTR.INPCNDPND.ESC.PRF = '0'B;

   8079   2 000042  6D03                                 CMV,R6   3
          2 000043  0201 0007                            BL       s:8080,PREL

   8079   2 000045  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:54   
          2 000048  8846 001B                            LBF,'00C0'X       27,B6
          2 00004A       00C0

      293     8080    2         Y@UTS = Y@UTS+%KA_CTX.LSTUTS;

   8080   2 00004B  ECC7 0006                            LDB,B6   Y@CTX$,AUTO
          2 00004D  EA46 000D                            ADD,R6   13,B6
          2 00004F  EF47 000B                            STR,R6   Y@UTS,AUTO

      294     8081    2      END;

      295     8082    1      KH@IO_INPRNG = KH_IO_INPRNG;

   8082   2 000051  8C80 0000 0000  01                   LDI      KH_IO_INPRNG
          2 000054  8D47 000E                            SDI      KH@IO_INPRNG,AUTO

      296     8083    2   MAIN_LOOP: DO WHILE ('1'B);             /* LOOP START                         */

   8083   2                              MAIN_LOOP       null
      297     8084
      298     8085        /* This loop is traversed once for each                                       */
      299     8086        /* group of characters in the input buffer. Groups never                      */
      300     8087        /* span input buffer halves. Typically we only process one                    */
      301     8088        /* character for an iteration of the loop. However, if                        */
      302     8089        /* we're running behind the input character stream, we                        */
      303     8090        /* may process more than one character.                                       */
      304     8091
      305     8092
      306     8093        /* FIND OUT WHERE WE ARE IN THE INPUT BUFFER.                                 */
      307     8094        /* DO IO (INPUT RANGE), ERROR CHECKING                                        */
      308     8095
      309     8096    2         CALL KHI$IO_INP(%KH_CHN,KH@IO_INPRNG) WHENALTRETURN

   8096   2 000056  EBC7 000E            MAIN_LOOP       LAB,B6   KH@IO_INPRNG,AUTO
          2 000058  EFC7 001C                            STB,B6   KH@IOLD+8,AUTO
          2 00005A  DCC7 0004                            LDB,B5   Y@CHN$,AUTO
          2 00005C  DFC7 001A                            STB,B5   KH@IOLD+6,AUTO
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:55   
          2 00005E  BBC7 001A                            LAB,B3   KH@IOLD+6,AUTO
          2 000060  CBF0 0200                            LAB,B4   512,IMO
          2 000062  E380 0000 0000  xent                 LNJ,B6   KHI$IO_INP
          2 000065       0003                            DC       s:8099,PREL
          2 000066  0F81 0003                            B        s:8104,PREL

      310     8097    3         DO;

      311     8098        /*N* IONAK'ed. Throw in error recovery  */
      312     8099    3            EXIT MAIN_LOOP;

   8099   2 000068  0F81 0238                            B        s:8334,PREL

      313     8100    3         END;
      314     8101
      315     8102        /* IO (INPUT RANGE) WAS SUCCESSFUL.                                           */
      316     8103
      317     8104    2         IF KH@IO_INPRNG.RNG~=%KA_CTX.INPRNG

   8104   2 00006A  ECC7 0006                            LDB,B6   Y@CTX$,AUTO
          2 00006C  E847 000F                            LDR,R6   KH@IO_INPRNG+1,AUTO
          2 00006E  E946 000A                            CMR,R6   10,B6
          2 000070  0901 007C                            BE       s:8190,PREL

      318     8105
      319     8106        /* There are new characters to process.                                       */
      320     8107
      321     8108    3         THEN FETCH: DO WHILE ('1'B);      /* LOOP START                         */

   8108   2                              FETCH           null
      322     8109    4            IF KH@IO_INPRNG.RNG>Y@MAXBYTX-%KA_CTX.VDH_DAT.DAT__.BYTX THEN DO;

   8109   2 000072  ECC7 0006            FETCH           LDB,B6   Y@CTX$,AUTO
          2 000074  E847 000A                            LDR,R6   Y@MAXBYTX,AUTO
          2 000076  E246 0013                            SUB,R6   19,B6
          2 000078  6801 0005                            BLZ,R6   s:8110,PREL
          2 00007A  E947 000F                            CMR,R6   KH@IO_INPRNG+1,AUTO
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:56   
          2 00007C  0281 0014                            BGE      s:8118,PREL

      323     8110    4               CALL KHD$ERRLOG_SETTERMID_CHN (FPT_WRSYSLOG_INVRNG, %KH_CHN);

   8110   2 00007E  DCC7 0004                            LDB,B5   Y@CHN$,AUTO
          2 000080  DFC7 001C                            STB,B5   KH@IOLD+8,AUTO
          2 000082  CB80 0000 0032  01                   LAB,B4   FPT_WRSYSLOG_INVRNG
          2 000085  CFC7 001A                            STB,B4   KH@IOLD+6,AUTO
          2 000087  BBC7 001A                            LAB,B3   KH@IOLD+6,AUTO
          2 000089  CBF0 0200                            LAB,B4   512,IMO
          2 00008B  E380 0000 0000  xent                 LNJ,B6   KHD$ERRLOG_SETTERMID_CHN
          2 00008E       0001                            DC       s:8116,PREL

      324     8111        /*E* ERROR: KAI-E$ASN_INVRNG
      325     8112             MESSAGE: Out of range range obtained by ASYNC
      326     8113             REMARKS: The range exceeded the size of the buffer we were supposed
      327     8114                      to be using.  ASYNC switches to another buffer.
      328     8115        */
      329     8116    4               KH@IO_INPRNG.RNG = 0;

   8116   2 00008F  8747 000F                            CL       KH@IO_INPRNG+1,AUTO

      330     8117    4            END;

      331     8118    3            %KA_CTX.INPRNG = KH@IO_INPRNG.RNG;

   8118   2 000091  ECC7 0006                            LDB,B6   Y@CTX$,AUTO
          2 000093  E847 000F                            LDR,R6   KH@IO_INPRNG+1,AUTO
          2 000095  EF46 000A                            STR,R6   10,B6

      332     8119
      333     8120        /* This loop is re-iterated when we try to get a character from               */
      334     8121        /* the CLC RAM (because its not in the buffer) and receive more               */
      335     8122        /* than 1 more character while trying.                                        */
      336     8123
      337     8124    3            IF NOT BINBIT(KH@IO_INPRNG.RNG,1) THEN

PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:57   
   8124   2 000097  D847 000F                            LDR,R5   KH@IO_INPRNG+1,AUTO
          2 000099  500F                                 SOL,R5   15
          2 00009A  5901 0052                            BEZ,R5   s:8190,PREL

      338     8125        /* We didn't have any complications due to a character still                  */
      339     8126        /* being out in the com line controller.                                      */
      340     8127    3            EXIT FETCH;
      341     8128    4            ELSE DO;

      342     8129
      343     8130        /* THE LAST CHARACTER TO PROCESS IS STILL IN THE                              */
      344     8131        /* COMMUNICATIONS LINE CONTROLLER, BECAUSE IT                                 */
      345     8132        /* GENERALLY TRANSFERS 2 BYTES AT A TIME ON THE                               */
      346     8133        /* MEGABUS. WE'LL HAVE TO GET THE CHARACTER VIA                               */
      347     8134        /* THE INPUT-LCT-BYTE MECHANISM.                                              */
      348     8135        /* THE DATA BYTE WE NEED IS IN LCT10.                                         */
      349     8136
      350     8137    4               KH@IO_INPLCTBYT = KH_IO_INPLCTBYT;

   8137   2 00009C  8C80 0000 0004  01                   LDI      KH_IO_INPLCTBYT
          2 00009F  8D47 0010                            SDI      KH@IO_INPLCTBYT,AUTO

      351     8138    4               KH@IO_INPLCTBYT.LCTBYT.ADR = 10;

   8138   2 0000A1  5C0A                                 LDV,R5   10
          2 0000A2  DAC7 0011                            SRM,R5,'00FF'X    KH@IO_INPLCTBYT+1,AUTO
          2 0000A4       00FF

      352     8139    4               CALL KHI$IO_INPLCTBYT(%KH_CHN,KH@IO_INPLCTBYT) WHENALTRETURN

   8139   2 0000A5  DBC7 0010                            LAB,B5   KH@IO_INPLCTBYT,AUTO
          2 0000A7  DFC7 001C                            STB,B5   KH@IOLD+8,AUTO
          2 0000A9  CCC7 0004                            LDB,B4   Y@CHN$,AUTO
          2 0000AB  CFC7 001A                            STB,B4   KH@IOLD+6,AUTO
          2 0000AD  BBC7 001A                            LAB,B3   KH@IOLD+6,AUTO
          2 0000AF  CBF0 0200                            LAB,B4   512,IMO
          2 0000B1  E380 0000 0000  xent                 LNJ,B6   KHI$IO_INPLCTBYT
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:58   
          2 0000B4       0003                            DC       s:8144,PREL
          2 0000B5  0F81 0003                            B        s:8155,PREL

      353     8140    5               DO;

      354     8141        /* THE IO (INPUT LCT BYTE) OR IO (OUTPUT LCT BYTE) FAILED.                    */
      355     8142
      356     8143        /*N* **** > THROW IN ERROR RECOVERY < ****                                      */
      357     8144    5                  EXIT FETCH;              /* LOOK BELOW                         */

   8144   2 0000B7  0F81 0035                            B        s:8190,PREL

      358     8145    5               END;
      359     8146
      360     8147        /* INPUT LCT BYTE WAS SUCCESSFUL.                                             */
      361     8148        /* RE-CHECK THE INPUT RANGE TO MAKE SURE THAT LCT10                           */
      362     8149        /* IS VALID* CLC, AND IT JUST TRANSFERRED MORE DATA, LCT10 MIGHT              */
      363     8150        /* NOW CONTAIN THE NEW DATA RATHER THAN THE OLDER DATA                        */
      364     8151        /* THAT WE ARE TRYING TO PROCESS.                                             */
      365     8152
      366     8153        /* DO IO (INPUT RANGE), ERROR CHECKING                                        */
      367     8154
      368     8155    4               CALL KHI$IO_INP(%KH_CHN,KH@IO_INPRNG) WHENALTRETURN

   8155   2 0000B9  EBC7 000E                            LAB,B6   KH@IO_INPRNG,AUTO
          2 0000BB  EFC7 001C                            STB,B6   KH@IOLD+8,AUTO
          2 0000BD  DCC7 0004                            LDB,B5   Y@CHN$,AUTO
          2 0000BF  DFC7 001A                            STB,B5   KH@IOLD+6,AUTO
          2 0000C1  BBC7 001A                            LAB,B3   KH@IOLD+6,AUTO
          2 0000C3  CBF0 0200                            LAB,B4   512,IMO
          2 0000C5  E380 0000 0000  xent                 LNJ,B6   KHI$IO_INP
          2 0000C8       0003                            DC       s:8159,PREL
          2 0000C9  0F81 0003                            B        s:8165,PREL

      369     8156    5               DO;

      370     8157        /* IO (INPUT RANGE) failed.     */
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:59   
      371     8158        /*N* ****> throw in error recovery <*******  */
      372     8159    5                  EXIT FETCH;

   8159   2 0000CB  0F81 0021                            B        s:8190,PREL

      373     8160    5               END;
      374     8161
      375     8162        /* IO (INPUT RANGE) WAS SUCCESSFUL.                                           */
      376     8163        /* CHECK TO SEE IF OUR CHARACTER IS STILL VALID.                              */
      377     8164
      378     8165    5               IF NOT BINBIT(KH@IO_INPRNG.RNG,1) THEN DO;

   8165   2 0000CD  E847 000F                            LDR,R6   KH@IO_INPRNG+1,AUTO
          2 0000CF  600F                                 SOL,R6   15
          2 0000D0  6981 0009                            BNEZ,R6  s:8171,PREL

      379     8166
      380     8167        /* An odd number of characters have come in. They filled to an even           */
      381     8168        /* byte, so we don't have any problems finding the characters.                */
      382     8169    5                  %KA_CTX.INPRNG = KH@IO_INPRNG.RNG;

   8169   2 0000D2  ECC7 0006                            LDB,B6   Y@CTX$,AUTO
          2 0000D4  E847 000F                            LDR,R6   KH@IO_INPRNG+1,AUTO
          2 0000D6  EF46 000A                            STR,R6   10,B6

      383     8170    5                  EXIT FETCH;              /* LOOK BELOW                         */

   8170   2 0000D8  0F81 0014                            B        s:8190,PREL

      384     8171    5               END; ELSE IF KH@IO_INPRNG.RNG=%KA_CTX.INPRNG THEN DO;

   8171   2 0000DA  ECC7 0006                            LDB,B6   Y@CTX$,AUTO
          2 0000DC  E847 000F                            LDR,R6   KH@IO_INPRNG+1,AUTO
          2 0000DE  E946 000A                            CMR,R6   10,B6
          2 0000E0  0981 FF91                            BNE      s:8108,PREL

      385     8172
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:60   
      386     8173        /* No more characters have come in since we did the input                     */
      387     8174        /* range IO before the input LCT byte.                                        */
      388     8175        /* Store the character we got from input LCT byte into the buffer.            */
      389     8176
      390     8177    5                  Y@BFR$->KA$INPBFR.CHR(Y@MAXBYTX-KH@IO_INPRNG.RNG-1) =

   8177   2 0000E2  E247 000A                            SUB,R6   Y@MAXBYTX,AUTO
          2 0000E4  D2C7 0011                            LLH,R5   KH@IO_INPLCTBYT+1,AUTO
          2 0000E6  DCC7 0008                            LDB,B5   Y@BFR$,AUTO
          2 0000E8  B856                                 LDR,R3   R6
          2 0000E9  8653                                 CPL      R3
          2 0000EA  D7B5                                 STH,R5   ,B5,R3

      391     8178    5                    KH@IO_INPLCTBYT.LCTBYT.DAT;
      392     8179    5                  EXIT FETCH;              /* LOOK BELOW                         */

   8179   2 0000EB  0F81 0001                            B        s:8190,PREL

      393     8180
      394     8181    5               END;
      395     8182
      396     8183    4            END;                           /* IF MOD(  ,2)=1                     */
      397     8184
      398     8185    3         END /* FETCH_LOOP */;

      399     8186
      400     8187        /* COMPUTE THE NUMBER OF UNPROCESSED CHARACTERS IN THIS HALF                  */
      401     8188        /* OF THE BUFFER.                                                             */
      402     8189
      403     8190    2         %KA_CTX.VDH_DAT.DAT__.DATBYTSIZ =

   8190   2 0000ED  ECC7 0006                            LDB,B6   Y@CTX$,AUTO
          2 0000EF  E847 000A                            LDR,R6   Y@MAXBYTX,AUTO
          2 0000F1  E246 000A                            SUB,R6   10,B6
          2 0000F3  E246 0013                            SUB,R6   19,B6
          2 0000F5  EF46 0014                            STR,R6   20,B6

PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:61   
      404     8191    2           Y@MAXBYTX - %KA_CTX.INPRNG - %KA_CTX.VDH_DAT.DAT__.BYTX;
      405     8192
      406     8193        /* Call VDH with the input characters.                                        */
      407     8194
      408     8195    3         IF %KA_CTX.VDH_DAT.DAT__.DATBYTSIZ~=0 THEN DO;

   8195   2 0000F7  6901 0055                            BEZ,R6   s:8215,PREL

      409     8196    3            %KA_CTX.INPCHRSNCUTS = %KA_CTX.INPCHRSNCUTS +

   8196   2 0000F9  EA46 0018                            ADD,R6   24,B6
          2 0000FB  EF46 0018                            STR,R6   24,B6

      410     8197    3              %KA_CTX.VDH_DAT.DAT__.DATBYTSIZ;
      411     8198    4            IF %KA_CTX.REDHLT THEN DO;

   8198   2 0000FD  82C6 001D                            LB,'2000'X        29,B6
   8198   2 0000FF       2000
          2 000100  0581 000D                            BBF      s:8203,PREL

      412     8199        /* esc-h typed after the prompt, make it easy to continue */
      413     8200    4               %KA_CTX.REDHLT = '0'B;

   8200   2 000102  8846 001D                            LBF,'2000'X       29,B6
   8200   2 000104       2000

      414     8201    4               CALL KAO$ASNRQSRSMOTP (%KA#HLTOTP_USRX);

   8201   2 000105  BB80 0000 0001  03                   LAB,B3   +1
          2 000108  CBF0 0100                            LAB,B4   256,IMO
          2 00010A  E380 0000 0000  xent                 LNJ,B6   KAO$ASNRQSRSMOTP
          2 00010D       0001                            DC       s:8203,PREL

      415     8202    4            END;

      416     8203    4            CALL KVV$VDI(%KA_CTX.VDH_DAT) WHENALTRETURN DO;

PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:62   
   8203   2 00010E  ECC7 0006                            LDB,B6   Y@CTX$,AUTO
          2 000110  DBC6 0010                            LAB,B5   16,B6
          2 000112  DFC7 001A                            STB,B5   KH@IOLD+6,AUTO
          2 000114  BBC7 001A                            LAB,B3   KH@IOLD+6,AUTO
          2 000116  CBF0 0100                            LAB,B4   256,IMO
          2 000118  E380 0000 0000  xent                 LNJ,B6   KVV$VDI
          2 00011B       0003                            DC       s:8204,PREL
          2 00011C  0F81 0025                            B        s:8212,PREL

      417     8204    4               %KA_CTX.INPCHRSNCUTS = %KA_CTX.INPCHRSNCUTS -

   8204   2 00011E  ECC7 0006                            LDB,B6   Y@CTX$,AUTO
          2 000120  E846 0018                            LDR,R6   24,B6
          2 000122  E246 0014                            SUB,R6   20,B6
          2 000124  EF46 0018                            STR,R6   24,B6

      418     8205    4                 %KA_CTX.VDH_DAT.DAT__.DATBYTSIZ;
      419     8206    4               %KV_VDI.DFR.USR(%KV_SCHRSN_DFR1) = '1'B;

   8206   2 000126  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 000129  CC85                                 LDB,B4   ,B5
          2 00012A  8944 0018                            LBT,'4000'X       24,B4
          2 00012C       4000

      420     8207    4               IF ADDR(%KV_SSN)~=ADDR(NIL)

   8207   2 00012D  CCC5 0002                            LDB,B4   2,B5
          2 00012F  8DD4                                 CMN      B4
          2 000130  0901 000E                            BE       s:8210,PREL

      421     8208    4               THEN IF %KV_SSN.SSNCNCID~=0

   8208   2 000132  E844 0024                            LDR,R6   36,B4
          2 000134  6901 000A                            BEZ,R6   s:8210,PREL

      422     8209    4               THEN CALL KVV$VDI (KV_VDH_EVT_RLSVDI);

PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:63   
   8209   2 000136  BB80 0000 0003  03                   LAB,B3   +3
          2 000139  CBF0 0100                            LAB,B4   256,IMO
          2 00013B  E380 0000 0000  xent                 LNJ,B6   KVV$VDI
          2 00013E       0001                            DC       s:8210,PREL

      423     8210    4               RETURN;

   8210   2 00013F  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      424     8211    4            END;
      425     8212    3            %KA_CTX.INPCHRSNCUTS = %KA_CTX.INPCHRSNCUTS-%KA_CTX.VDH_DAT.CMPCOD;

   8212   2 000142  ECC7 0006                            LDB,B6   Y@CTX$,AUTO
          2 000144  E2C6 0017                            LLH,R6   23,B6
          2 000146  E246 0018                            SUB,R6   24,B6
          2 000148  8256                                 NEG      R6
          2 000149  EF46 0018                            STR,R6   24,B6

      426     8213    3            %KA_CTX.VDH_DAT.CMPCOD = 0;

   8213   2 00014B  87C6 0017                            CLH      23,B6

      427     8214    3         END;

      428     8215    2         IF KH@IO_INPRNG.RNG~=0 THEN EXIT MAIN_LOOP;

   8215   2 00014D  E847 000F                            LDR,R6   KH@IO_INPRNG+1,AUTO
          2 00014F  6981 0151                            BNEZ,R6  s:8334,PREL

      429     8216
      430     8217        /* WE'RE AT THE END OF THE BUFFER HALF.                                       */
      431     8218        /* WE'LL DO AN IO (INPUT NEXT CCB STATUS) TO                                  */
      432     8219        /* ADVANCE THE STATUS POINTER TO THE NEXT                                     */
      433     8220        /* IN-USE CCB.                                                                */
      434     8221
      435     8222        /* CLOBBER THE INPUT RANGE VALUE                                              */
      436     8223
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:64   
      437     8224    2         %KA_CTX.INPRNG = %KA_CTX.INPRNG-1;

   8224   2 000151  88C6 000A                            DEC      10,B6

      438     8225
      439     8226        /* DO IO (INPUT NEXT CCB STATUS)                                              */
      440     8227
      441     8228    2         KH@IO_INPNXTCCBSTT = KH_IO_INPNXTCCBSTT;

   8228   2 000153  8C80 0000 0002  01                   LDI      KH_IO_INPNXTCCBSTT
          2 000156  8D47 000C                            SDI      KH@IO_INPNXTCCBSTT,AUTO

      442     8229    2         CALL KHI$IO_INP(%KH_CHN,KH@IO_INPNXTCCBSTT) WHENALTRETURN

   8229   2 000158  DBC7 000C                            LAB,B5   KH@IO_INPNXTCCBSTT,AUTO
          2 00015A  DFC7 001C                            STB,B5   KH@IOLD+8,AUTO
          2 00015C  CCC7 0004                            LDB,B4   Y@CHN$,AUTO
          2 00015E  CFC7 001A                            STB,B4   KH@IOLD+6,AUTO
          2 000160  BBC7 001A                            LAB,B3   KH@IOLD+6,AUTO
          2 000162  CBF0 0200                            LAB,B4   512,IMO
          2 000164  E380 0000 0000  xent                 LNJ,B6   KHI$IO_INP
          2 000167       0003                            DC       s:8234,PREL
          2 000168  0F81 0003                            B        s:8248,PREL

      443     8230    3         DO;

      444     8231
      445     8232        /* IO (INPUT NEXT CCB STATUS) FAILED.                                         */
      446     8233
      447     8234    3            EXIT MAIN_LOOP;                /* LOOK BELOW                         */

   8234   2 00016A  0F81 0136                            B        s:8334,PREL

      448     8235    3         END;                              /* WHENALTRETURN                      */
      449     8236        /*E* ERROR:         KAI-E$ASN_IO_ERR
      450     8237             MESSAGE:       IO error (Bad CCB status)
      451     8238             REMARKS:   The CCB status indicated an IO error occurred. */
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:65   
      452     8239              %KAC$CLCERRCHK(CCBSTT=KH@IO_INPNXTCCBSTT.CCBSTT,
      453     8240              CCBSRVERR=YES,
      454     8241              DATCHKERR=YES,
      455     8242              INVMMRADR=YES,
      456     8243              BUSPRTERR=YES,
      457     8244              UN_CRCMMRERR=YES);

   8248   2 00016C  E847 000D                            LDR,R6   KH@IO_INPNXTCCBSTT+1,AUTO
          2 00016E  E570 0847                            AND,R6   2119,IMO
          2 000170  6901 0012                            BEZ,R6   s:8252,PREL

   8248   2 000172  ECC7 0004                            LDB,B6   Y@CHN$,AUTO
          2 000174  EFC7 001C                            STB,B6   KH@IOLD+8,AUTO
          2 000176  DB80 0000 001D  01                   LAB,B5   FPT_WRSYSLOG_IO_ERR
          2 000179  DFC7 001A                            STB,B5   KH@IOLD+6,AUTO
          2 00017B  BBC7 001A                            LAB,B3   KH@IOLD+6,AUTO
          2 00017D  CBF0 0200                            LAB,B4   512,IMO
          2 00017F  E380 0000 0000  xent                 LNJ,B6   KHD$ERRLOG_SETTERMID_CHN
          2 000182       0001                            DC       s:8252,PREL

      458     8250
      459     8251        /* GET THE WAIT-FOR-INTERRUPT FLAG FROM THE CONTROLLER.                       */
      460     8252    2         KH@IO_INPLCTBYT = KH_IO_INPLCTBYT;

   8252   2 000183  8C80 0000 0004  01                   LDI      KH_IO_INPLCTBYT
          2 000186  8D47 0010                            SDI      KH@IO_INPLCTBYT,AUTO

      461     8253    2         KH@IO_INPLCTBYT.LCTBYT.ADR = %KA_LCT_CNCSTT;

   8253   2 000188  5C1A                                 LDV,R5   26
          2 000189  DAC7 0011                            SRM,R5,'00FF'X    KH@IO_INPLCTBYT+1,AUTO
          2 00018B       00FF

      462     8254    2         CALL KHI$IO_INPLCTBYT(%KH_CHN,KH@IO_INPLCTBYT) ;

   8254   2 00018C  EBC7 0010                            LAB,B6   KH@IO_INPLCTBYT,AUTO
          2 00018E  EFC7 001C                            STB,B6   KH@IOLD+8,AUTO
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:66   
          2 000190  DCC7 0004                            LDB,B5   Y@CHN$,AUTO
          2 000192  DFC7 001A                            STB,B5   KH@IOLD+6,AUTO
          2 000194  BBC7 001A                            LAB,B3   KH@IOLD+6,AUTO
          2 000196  CBF0 0200                            LAB,B4   512,IMO
          2 000198  E380 0000 0000  xent                 LNJ,B6   KHI$IO_INPLCTBYT
          2 00019B       0001                            DC       s:8260,PREL

      463     8255
      464     8256        /* DO AN IOLD AND IO (OUTPUT CCB CONTROL) TO Q THE                            */
      465     8257        /* INPUT BUFFER ONTO THE COMMUNICATIONS LINE CONTROLLER                       */
      466     8258        /* AGAIN.                                                                     */
      467     8259
      468     8260    2         KH@IOLD = KH_IOLD;

   8260   2 00019C  AB80 0000 0000  01                   LAB,B2   KH_IO_INPRNG
          2 00019F  2C10                                 LDV,R2   16
          2 0001A0  6C0A                                 LDV,R6   10
          2 0001A1  BB87                                 LAB,B3   ,AUTO
          2 0001A2  3C28                                 LDV,R3   40
          2 0001A3  0008                                 MMM

      469     8261    2         KH@IOLD.BFR_.BYTSIZ = %KA_CTX.VDH_DAT.DAT__.BFRBYTSIZ/2;

   8261   2 0001A4  ECC7 0006                            LDB,B6   Y@CTX$,AUTO
          2 0001A6  E846 0015                            LDR,R6   21,B6
          2 0001A8  6041                                 SOR,R6   1
          2 0001A9  EF47 0018                            STR,R6   KH@IOLD+4,AUTO

      470     8262    2         KH@IOLD.BFR_.ADR$ = Y@BFR$;

   8262   2 0001AB  DCC7 0008                            LDB,B5   Y@BFR$,AUTO
          2 0001AD  DFC7 0015                            STB,B5   KH@IOLD+1,AUTO

      471     8263    2         KH@IOLD.BFR_.BYTX = Y@MAXBYTX-KH@IOLD.BFR_.BYTSIZ;

   8263   2 0001AF  E247 000A                            SUB,R6   Y@MAXBYTX,AUTO
          2 0001B1  8256                                 NEG      R6
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:67   
          2 0001B2  EF47 0017                            STR,R6   KH@IOLD+3,AUTO

      472     8264    2         IF KH@IOLD.BFR_.BYTX~=0 THEN %KA_CTX.VDH_DAT.DAT__.BYTX = 0;

   8264   2 0001B4  6901 0003                            BEZ,R6   s:8265,PREL

   8264   2 0001B6  8746 0013                            CL       19,B6

      473     8265    2         Y@MAXBYTX = %KA_CTX.VDH_DAT.DAT__.BYTX+KH@IOLD.BFR_.BYTSIZ;

   8265   2 0001B8  E846 0013                            LDR,R6   19,B6
          2 0001BA  EA47 0018                            ADD,R6   KH@IOLD+4,AUTO
          2 0001BC  EF47 000A                            STR,R6   Y@MAXBYTX,AUTO

      474     8266    2         IF %KA_CTX.LCTSTT.PLD THEN KH@IOLD.CCBCTR.INTCPU = '0'B;

   8266   2 0001BE  82C6 001C                            LB,'0080'X        28,B6
   8266   2 0001C0       0080
          2 0001C1  0581 0004                            BBF      s:8270,PREL

   8266   2 0001C3  8847 0014                            LBF,'8000'X       KH@IOLD,AUTO
   8266   2 0001C5       8000

      475     8267
      476     8268        /* Check to see if we should try getting a bigger buffer. */
      477     8269
      478     8270    2         IF KH@IO_INPLCTBYT.LCTBYT&%KA_LCT_CNCSTT_WATFORINT@S

   8270   2 0001C6  D847 0011                            LDR,R5   KH@IO_INPLCTBYT+1,AUTO
          2 0001C8  D570 0800                            AND,R5   2048,IMO
          2 0001CA  5901 0058                            BEZ,R5   s:8290+2,PREL
          2 0001CC  82C6 001D                            LB,'0100'X        29,B6
          2 0001CE       0100
          2 0001CF  0501 0053                            BBT      s:8290+2,PREL
          2 0001D1  CC80 0000 0000  xsym                 LDB,B4   KV$PTR$
          2 0001D4  AC84                                 LDB,B2   ,B4
          2 0001D5  B2C2 001E                            LLH,R3   30,B2
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:68   
          2 0001D7  D846 0015                            LDR,R5   21,B6
          2 0001D9  D930 0000 000D  01                   CMR,R5   Y_BFRMAXBYTSIZ,R3
          2 0001DC  0281 0046                            BGE      s:8290+2,PREL

      479     8271    2           AND NOT %KA_CTX.BFRGRWPND AND %KA_CTX.VDH_DAT.DAT__.BFRBYTSIZ<
      480     8272    3           Y_BFRMAXBYTSIZ (%KV_VDI.LINSPD) THEN DO;

      481     8273
      482     8274        /* Yup, lets give it a shot.  First form a pointer to the just-completed
      483     8275           buffer half, to save the new buffers parameters in. */
      484     8276
      485     8277    3            Y@BFR$ = PINCRW(Y@BFR$,ADDR(KH@IOLD.BFR_.BYTX)->Y$U/2);

   8277   2 0001DE  C847 0017                            LDR,R4   KH@IOLD+3,AUTO
          2 0001E0  4041                                 SOR,R4   1
          2 0001E1  F854                                 LDR,R7   R4
          2 0001E2  6C00                                 LDV,R6   0
          2 0001E3  8447 0008                            AID      Y@BFR$,AUTO
          2 0001E5  8D47 0008                            SDI      Y@BFR$,AUTO

      486     8278    3            Y$NEWBFR__.DATBYTSIZ = %KA_CTX.VDH_DAT.DAT__.BFRBYTSIZ;

   8278   2 0001E7  DCC7 0008                            LDB,B5   Y@BFR$,AUTO
          2 0001E9  DF45 0003                            STR,R5   3,B5

      487     8279    3            CALL KVB$GET2NSYS (Y$NEWBFR__.DATBYTSIZ, Y$NEWBFR__.ADR$)

   8279   2 0001EB  DFC7 001C                            STB,B5   KH@IOLD+8,AUTO
          2 0001ED  ABC5 0003                            LAB,B2   3,B5
          2 0001EF  AFC7 001A                            STB,B2   KH@IOLD+6,AUTO
          2 0001F1  BBC7 001A                            LAB,B3   KH@IOLD+6,AUTO
          2 0001F3  CBF0 0200                            LAB,B4   512,IMO
          2 0001F5  E380 0000 0000  xent                 LNJ,B6   KVB$GET2NSYS
          2 0001F8       0023                            DC       s:8289,PREL

      488     8280    4            WHENRETURN DO;

PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:69   
      489     8281    4               Y$NEWBFR__.BFRBYTSIZ = Y$NEWBFR__.DATBYTSIZ*2;

   8281   2 0001F9  ECC7 0008                            LDB,B6   Y@BFR$,AUTO
          2 0001FB  E846 0003                            LDR,R6   3,B6
          2 0001FD  6001                                 SOL,R6   1
          2 0001FE  EF46 0004                            STR,R6   4,B6

      490     8282    4               KA_STT.KHSTT.INPBFRBYTUTL = KA_STT.KHSTT.INPBFRBYTUTL +

   8282   2 000200  F856                                 LDR,R7   R6
          2 000201  6C00                                 LDV,R6   0
          2 000202  8400 0000 001C  xsym                 AID      KA_STT+28
          2 000205  8D00 0000 001C  xsym                 SDI      KA_STT+28

      491     8283    4                 Y$NEWBFR__.BFRBYTSIZ;
      492     8284    4               Y$NEWBFR__.BYTX = 0;

   8284   2 000208  8746 0002                            CL       2,B6

      493     8285    4               KH@IOLD.BFR_ = Y$NEWBFR_;

   8285   2 00020A  AB86                                 LAB,B2   ,B6
          2 00020B  2C00                                 LDV,R2   0
          2 00020C  6C08                                 LDV,R6   8
          2 00020D  BB87                                 LAB,B3   ,AUTO
          2 00020E  3C2A                                 LDV,R3   42
          2 00020F  0008                                 MMM

      494     8286    4               Y$NEWBFR__.BYTX = Y$NEWBFR__.DATBYTSIZ;

   8286   2 000210  DCC7 0008                            LDB,B5   Y@BFR$,AUTO
          2 000212  E845 0003                            LDR,R6   3,B5
          2 000214  EF45 0002                            STR,R6   2,B5

      495     8287    4               %KA_CTX.BFRGRWPND = '1'B;

   8287   2 000216  CCC7 0006                            LDB,B4   Y@CTX$,AUTO
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:70   
          2 000218  8944 001D                            LBT,'0100'X       29,B4
          2 00021A       0100

      496     8288    4            END /* WHENRETURN */;

      497     8289    3            Y@BFR$ = %KA_CTX.VDH_DAT.DAT__.ADR$;

   8289   2 00021B  ECC7 0006                            LDB,B6   Y@CTX$,AUTO
          2 00021D  DCC6 0011                            LDB,B5   17,B6
          2 00021F  DFC7 0008                            STB,B5   Y@BFR$,AUTO

      498     8290    3         END; ELSE IF %KA_CTX.BFRGRWPND THEN DO;

   8290   2 000221  0F81 0048                            B        s:8307,PREL

   8290   2 000223  82C6 001D                            LB,'0100'X        29,B6
   8290   2 000225       0100
          2 000226  0581 0043                            BBF      s:8307,PREL

      499     8291
      500     8292        /* We got a bigger buffer last time.  IOLD its second half, release the old
      501     8293           one, and start using the new one. */
      502     8294
      503     8295    3            Y@BFR$ = PINCRW(Y@BFR$,ADDR(%KA_CTX.VDH_DAT.DAT__.BYTX)->Y$U/2);

   8295   2 000228  D846 0013                            LDR,R5   19,B6
          2 00022A  5041                                 SOR,R5   1
          2 00022B  F855                                 LDR,R7   R5
          2 00022C  6C00                                 LDV,R6   0
          2 00022D  8447 0008                            AID      Y@BFR$,AUTO
          2 00022F  8D47 0008                            SDI      Y@BFR$,AUTO

      504     8296    3            %KA_CTX.VDH_DAT.DAT__ = Y$NEWBFR__;

   8296   2 000231  ACC7 0008                            LDB,B2   Y@BFR$,AUTO
          2 000233  2C00                                 LDV,R2   0
          2 000234  6C0C                                 LDV,R6   12
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:71   
          2 000235  BB86                                 LAB,B3   ,B6
          2 000236  3C22                                 LDV,R3   34
          2 000237  0008                                 MMM

      505     8297    3            KH@IOLD.BFR_.ADR$->Y$U = KH@IOLD.BFR_.BYTSIZ;

   8297   2 000238  DCC7 0015                            LDB,B5   KH@IOLD+1,AUTO
          2 00023A  E847 0018                            LDR,R6   KH@IOLD+4,AUTO
          2 00023C  EF05                                 STR,R6   ,B5

      506     8298    3            CALL KVB$RLS2NSYS (KH@IOLD.BFR_.ADR$->Y$U);

   8298   2 00023D  BBC7 0015                            LAB,B3   KH@IOLD+1,AUTO
          2 00023F  CBF0 0100                            LAB,B4   256,IMO
          2 000241  E380 0000 0000  xent                 LNJ,B6   KVB$RLS2NSYS
          2 000244       0001                            DC       s:8299,PREL

      507     8299    3            KA_STT.KHSTT.INPBFRBYTUTL = KA_STT.KHSTT.INPBFRBYTUTL-

   8299   2 000245  F847 0018                            LDR,R7   KH@IOLD+4,AUTO
          2 000247  6C00                                 LDV,R6   0
          2 000248  7081                                 DOL,R7   1
          2 000249  8656                                 CPL      R6
          2 00024A  8657                                 CPL      R7
          2 00024B  8470 0000 0001                       AID      1,IMO
          2 00024E  8400 0000 001C  xsym                 AID      KA_STT+28
          2 000251  8D00 0000 001C  xsym                 SDI      KA_STT+28

      508     8300    3              KH@IOLD.BFR_.BYTSIZ*2;
      509     8301    3            KH@IOLD.BFR_ = ADDR(%KA_CTX.VDH_DAT.DAT__)->Y$NEWBFR_;

   8301   2 000254  ACC7 0006                            LDB,B2   Y@CTX$,AUTO
          2 000256  2C22                                 LDV,R2   34
          2 000257  6C08                                 LDV,R6   8
          2 000258  BB87                                 LAB,B3   ,AUTO
          2 000259  3C2A                                 LDV,R3   42
          2 00025A  0008                                 MMM
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:72   

      510     8302    3            %KA_CTX.VDH_DAT.DAT__.BYTX = 0;

   8302   2 00025B  ECC7 0006                            LDB,B6   Y@CTX$,AUTO
          2 00025D  8746 0013                            CL       19,B6

      511     8303    3            %KA_CTX.BFRGRWPND = '0'B;

   8303   2 00025F  8846 001D                            LBF,'0100'X       29,B6
   8303   2 000261       0100

      512     8304    3            Y@BFR$ = KH@IOLD.BFR_.ADR$;

   8304   2 000262  DCC7 0015                            LDB,B5   KH@IOLD+1,AUTO
          2 000264  DFC7 0008                            STB,B5   Y@BFR$,AUTO

      513     8305    3            Y@MAXBYTX = KH@IOLD.BFR_.BYTX;

   8305   2 000266  E847 0017                            LDR,R6   KH@IOLD+3,AUTO
          2 000268  EF47 000A                            STR,R6   Y@MAXBYTX,AUTO

      514     8306    3         END;

      515     8307    2         CALL KHI$IOLD(%KH_CHN,KH@IOLD) WHENALTRETURN

   8307   2 00026A  CBC7 0014                            LAB,B4   KH@IOLD,AUTO
          2 00026C  CFC7 001C                            STB,B4   KH@IOLD+8,AUTO
          2 00026E  BCC7 0004                            LDB,B3   Y@CHN$,AUTO
          2 000270  BFC7 001A                            STB,B3   KH@IOLD+6,AUTO
          2 000272  BBC7 001A                            LAB,B3   KH@IOLD+6,AUTO
          2 000274  CBF0 0200                            LAB,B4   512,IMO
          2 000276  E380 0000 0000  xent                 LNJ,B6   KHI$IOLD
          2 000279       0003                            DC       s:8312,PREL
          2 00027A  0F81 0003                            B        s:8317,PREL

      516     8308    3         DO;

PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:73   
      517     8309        /* THE IOLD OR IO (OUTPUT CCB CONTROL) FAILED.                         */
      518     8310
      519     8311        /*N* THROW IN ERROR RECOVERY                                                  */
      520     8312    3            EXIT MAIN_LOOP;                /* LOOK BELOW                         */

   8312   2 00027C  0F81 0024                            B        s:8334,PREL

      521     8313    3         END;
      522     8314
      523     8315        /* CHECK THE WAIT-FOR-INTERRUPT FLAG FROM THE CONTROLLER.                     */
      524     8316
      525     8317    2         IF KH@IO_INPLCTBYT.LCTBYT&%KA_LCT_CNCSTT_WATFORINT@S THEN

   8317   2 00027E  E847 0011                            LDR,R6   KH@IO_INPLCTBYT+1,AUTO
          2 000280  E570 0800                            AND,R6   2048,IMO
          2 000282  6901 FDD3                            BEZ,R6   s:8083,PREL

      526     8318    3         DO;

      527     8319
      528     8320        /* THE RECEIVE CCP IS WAITING FOR A CCB.                                      */
      529     8321
      530     8322        /* RESET THE RECEIVE STATUS FLAGS IN THE CLC LCT. THIS WILL CAUSE             */
      531     8323        /* A DATASET SCAN INTERRUPT ON THE RECEIVE SIDE IN THE CLC, TO                */
      532     8324        /* GET THE RECEIVE CCP GOING AGAIN.                                           */
      533     8325    3            KH@IO_OTPLCTBYT = KH_IO_OTPLCTBYT;

   8325   2 000284  8C80 0000 0006  01                   LDI      KH_IO_OTPLCTBYT
          2 000287  8D47 0012                            SDI      KH@IO_OTPLCTBYT,AUTO

      534     8326    3            KH@IO_OTPLCTBYT.LCTBYT.ADR = %KW#RCVSTT;

   8326   2 000289  5C0E                                 LDV,R5   14
          2 00028A  DAC7 0013                            SRM,R5,'00FF'X    KH@IO_OTPLCTBYT+1,AUTO
          2 00028C       00FF

      535     8327    3            KH@IO_OTPLCTBYT.LCTBYT.DAT = 0;
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:74   

   8327   2 00028D  87C7 0013                            CLH      KH@IO_OTPLCTBYT+1,AUTO

      536     8328    3            CALL KHI$IO_OTPLCTBYT(%KH_CHN,KH@IO_OTPLCTBYT);

   8328   2 00028F  EBC7 0012                            LAB,B6   KH@IO_OTPLCTBYT,AUTO
          2 000291  EFC7 001C                            STB,B6   KH@IOLD+8,AUTO
          2 000293  DCC7 0004                            LDB,B5   Y@CHN$,AUTO
          2 000295  DFC7 001A                            STB,B5   KH@IOLD+6,AUTO
          2 000297  BBC7 001A                            LAB,B3   KH@IOLD+6,AUTO
          2 000299  CBF0 0200                            LAB,B4   512,IMO
          2 00029B  E380 0000 0000  xent                 LNJ,B6   KHI$IO_OTPLCTBYT
          2 00029E       0001                            DC       s:8330,PREL

      537     8329    3         END /* IF */;

      538     8330    2      END /* MAIN_LOOP */;

   8330   2 00029F  0F81 FDB6                            B        s:8083,PREL

      539     8331
      540     8332        /* Check the input rate for possible polled operation. */
      541     8333
      542     8334    2      IF %KA_CTX.INPCHRSNCUTS/4>KA_POLLMT THEN DO;

   8334   2 0002A1  ECC7 0006                            LDB,B6   Y@CTX$,AUTO
          2 0002A3  E846 0018                            LDR,R6   24,B6
          2 0002A5  6042                                 SOR,R6   2
          2 0002A6  E900 0000 000B  00                   CMR,R6   KA_POLLMT
          2 0002A9  0381 0065                            BLE      s:8350+2,PREL

      543     8335    2         CALL KHC$UTS (KH@IO_INPRNG);

   8335   2 0002AB  DBC7 000E                            LAB,B5   KH@IO_INPRNG,AUTO
          2 0002AD  DFC7 001A                            STB,B5   KH@IOLD+6,AUTO
          2 0002AF  BBC7 001A                            LAB,B3   KH@IOLD+6,AUTO
          2 0002B1  CBF0 0100                            LAB,B4   256,IMO
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:75   
          2 0002B3  E380 0000 0000  xent                 LNJ,B6   KHC$UTS
          2 0002B6       0001                            DC       s:8336,PREL

      544     8336    2         Y@UTS = KH@IO_INPRNG.RNG-%KA_CTX.LSTUTS;

   8336   2 0002B7  ECC7 0006                            LDB,B6   Y@CTX$,AUTO
          2 0002B9  E847 000F                            LDR,R6   KH@IO_INPRNG+1,AUTO
          2 0002BB  E246 000D                            SUB,R6   13,B6
          2 0002BD  EF47 000B                            STR,R6   Y@UTS,AUTO

      545     8337    2         %KA_CTX.LSTUTS = KH@IO_INPRNG.RNG;

   8337   2 0002BF  D847 000F                            LDR,R5   KH@IO_INPRNG+1,AUTO
          2 0002C1  DF46 000D                            STR,R5   13,B6

      546     8338    2         %KA_CTX.INPCHRSNCUTS = 0;

   8338   2 0002C3  8746 0018                            CL       24,B6

      547     8339    3         IF Y@UTS<30 AND NOT %KA_CTX.LCTSTT.PLD THEN DO;

   8339   2 0002C5  6D1E                                 CMV,R6   30
          2 0002C6  0281 00DC                            BGE      s:8387,PREL
          2 0002C8  82C6 001C                            LB,'0080'X        28,B6
          2 0002CA       0080
          2 0002CB  0501 00D7                            BBT      s:8387,PREL

      548     8340    3            %KA_CTX.LCTSTT.PLD = '1'B;

   8340   2 0002CD  8946 001C                            LBT,'0080'X       28,B6
   8340   2 0002CF       0080

      549     8341    3            KH@IO_OTPLCTBYT = KH_IO_OTPLCTBYT;

   8341   2 0002D0  8C80 0000 0006  01                   LDI      KH_IO_OTPLCTBYT
          2 0002D3  8D47 0012                            SDI      KH@IO_OTPLCTBYT,AUTO

PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:76   
      550     8342    3            KH@IO_OTPLCTBYT.LCTBYT.ADR = %KA_LCT_L6_STT;

   8342   2 0002D5  5C1E                                 LDV,R5   30
          2 0002D6  DAC7 0013                            SRM,R5,'00FF'X    KH@IO_OTPLCTBYT+1,AUTO
          2 0002D8       00FF

      551     8343    3            KH@IO_OTPLCTBYT.LCTBYT.DAT = BITBIN(%KA_CTX.LCTSTT);

   8343   2 0002D9  C846 001C                            LDR,R4   28,B6
          2 0002DB  C570 00FF                            AND,R4   255,IMO
          2 0002DD  C7C7 0013                            STH,R4   KH@IO_OTPLCTBYT+1,AUTO

      552     8344    3            CALL KHI$IO_OTPLCTBYT (%KH_CHN, KH@IO_OTPLCTBYT);

   8344   2 0002DF  DBC7 0012                            LAB,B5   KH@IO_OTPLCTBYT,AUTO
          2 0002E1  DFC7 001C                            STB,B5   KH@IOLD+8,AUTO
          2 0002E3  CCC7 0004                            LDB,B4   Y@CHN$,AUTO
          2 0002E5  CFC7 001A                            STB,B4   KH@IOLD+6,AUTO
          2 0002E7  BBC7 001A                            LAB,B3   KH@IOLD+6,AUTO
          2 0002E9  CBF0 0200                            LAB,B4   512,IMO
          2 0002EB  E380 0000 0000  xent                 LNJ,B6   KHI$IO_OTPLCTBYT
          2 0002EE       0001                            DC       s:8345,PREL

      553     8345    3            KA_POLCLK.CTBCTX$ = ADDR(NIL);

   8345   2 0002EF  EB80 0000 0000                       LAB,B6   0
          2 0002F2  EF80 0000 0000  00                   STB,B6   KA_POLCLK

      554     8346    3            IF KA_POLHED$=ADDR(NIL) THEN CALL KHC$CLOCK (KA_POLCLK);

   8346   2 0002F5  8D80 0000 000C  00                   CMN      KA_POLHED$
          2 0002F8  0981 000A                            BNE      s:8347,PREL

   8346   2 0002FA  BB80 0000 0005  03                   LAB,B3   +5
          2 0002FD  CBF0 0100                            LAB,B4   256,IMO
          2 0002FF  E380 0000 0000  xent                 LNJ,B6   KHC$CLOCK
          2 000302       0001                            DC       s:8347,PREL
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:77   

      555     8347    3            %KA_CTX.POLLNK$ = KA_POLHED$;

   8347   2 000303  EC80 0000 000C  00                   LDB,B6   KA_POLHED$
          2 000306  DCC7 0006                            LDB,B5   Y@CTX$,AUTO
          2 000308  EFC5 001A                            STB,B6   26,B5

      556     8348    3            KA_POLHED$ = ADDR(%KA_CTX);

   8348   2 00030A  DF80 0000 000C  00                   STB,B5   KA_POLHED$

      557     8349    3         END;

      558     8350    2      END; ELSE IF %KA_CTX.LCTSTT.PLD THEN DO;

   8350   2 00030D  0F81 0095                            B        s:8387,PREL

   8350   2 00030F  82C6 001C                            LB,'0080'X        28,B6
   8350   2 000311       0080
          2 000312  0581 0074                            BBF      s:8379+2,PREL

      559     8351
      560     8352        /* Check to see if we should start interrupting again. */
      561     8353
      562     8354    2         CALL KHC$UTS (KH@IO_INPRNG);

   8354   2 000314  DBC7 000E                            LAB,B5   KH@IO_INPRNG,AUTO
          2 000316  DFC7 001A                            STB,B5   KH@IOLD+6,AUTO
          2 000318  BBC7 001A                            LAB,B3   KH@IOLD+6,AUTO
          2 00031A  CBF0 0100                            LAB,B4   256,IMO
          2 00031C  E380 0000 0000  xent                 LNJ,B6   KHC$UTS
          2 00031F       0001                            DC       s:8355,PREL

      563     8355    2         Y@UTS = KH@IO_INPRNG.RNG-%KA_CTX.LSTUTS;

   8355   2 000320  ECC7 0006                            LDB,B6   Y@CTX$,AUTO
          2 000322  E847 000F                            LDR,R6   KH@IO_INPRNG+1,AUTO
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:78   
          2 000324  E246 000D                            SUB,R6   13,B6
          2 000326  EF47 000B                            STR,R6   Y@UTS,AUTO

      564     8356    3         IF %KA_CTX.INPCHRSNCUTS~=KA_POLLMT THEN DO;

   8356   2 000328  D846 0018                            LDR,R5   24,B6
          2 00032A  D900 0000 000B  00                   CMR,R5   KA_POLLMT
          2 00032D  0901 0009                            BE       s:8359+2,PREL

      565     8357    3            %KA_CTX.INPCHRSNCUTS = 0;

   8357   2 00032F  8746 0018                            CL       24,B6

      566     8358    3            %KA_CTX.LSTUTS = KH@IO_INPRNG.RNG;

   8358   2 000331  D847 000F                            LDR,R5   KH@IO_INPRNG+1,AUTO
          2 000333  DF46 000D                            STR,R5   13,B6

      567     8359    3         END; ELSE IF Y@UTS>7 THEN DO;

   8359   2 000335  0F81 006D                            B        s:8387,PREL

   8359   2 000337  6D07                                 CMV,R6   7
          2 000338  0381 006A                            BLE      s:8387,PREL

      568     8360
      569     8361        /* A full second with no characters, start the interrupts again. */
      570     8362
      571     8363    3            KH@IO_OTPLCTBYT = KH_IO_OTPLCTBYT;

   8363   2 00033A  8C80 0000 0006  01                   LDI      KH_IO_OTPLCTBYT
          2 00033D  8D47 0012                            SDI      KH@IO_OTPLCTBYT,AUTO

      572     8364    3            %KA_CTX.LCTSTT.PLD = '0'B;

   8364   2 00033F  8846 001C                            LBF,'0080'X       28,B6
   8364   2 000341       0080
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:79   

      573     8365    3            KH@IO_OTPLCTBYT.LCTBYT.ADR = %KA_LCT_L6_STT;

   8365   2 000342  4C1E                                 LDV,R4   30
          2 000343  CAC7 0013                            SRM,R4,'00FF'X    KH@IO_OTPLCTBYT+1,AUTO
          2 000345       00FF

      574     8366    3            KH@IO_OTPLCTBYT.LCTBYT.DAT = BITBIN(%KA_CTX.LCTSTT);

   8366   2 000346  B846 001C                            LDR,R3   28,B6
          2 000348  B570 00FF                            AND,R3   255,IMO
          2 00034A  B7C7 0013                            STH,R3   KH@IO_OTPLCTBYT+1,AUTO

      575     8367    3            CALL KHI$IO_OTPLCTBYT (%KH_CHN, KH@IO_OTPLCTBYT);

   8367   2 00034C  DBC7 0012                            LAB,B5   KH@IO_OTPLCTBYT,AUTO
          2 00034E  DFC7 001C                            STB,B5   KH@IOLD+8,AUTO
          2 000350  CCC7 0004                            LDB,B4   Y@CHN$,AUTO
          2 000352  CFC7 001A                            STB,B4   KH@IOLD+6,AUTO
          2 000354  BBC7 001A                            LAB,B3   KH@IOLD+6,AUTO
          2 000356  CBF0 0200                            LAB,B4   512,IMO
          2 000358  E380 0000 0000  xent                 LNJ,B6   KHI$IO_OTPLCTBYT
          2 00035B       0001                            DC       s:8368,PREL

      576     8368    3            Y@BFR$ = KA_POLHED$;

   8368   2 00035C  EC80 0000 000C  00                   LDB,B6   KA_POLHED$
          2 00035F  EFC7 0008                            STB,B6   Y@BFR$,AUTO

      577     8369    4            IF Y@BFR$=ADDR(%KA_CTX) THEN DO;

   8369   2 000361  EDC7 0006                            CMB,B6   Y@CTX$,AUTO
          2 000363  0981 000A                            BNE      s:8371,PREL

      578     8370    4               KA_POLHED$ = %KA_CTX.POLLNK$;

   8370   2 000365  DCC7 0006                            LDB,B5   Y@CTX$,AUTO
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:80   
          2 000367  CCC5 001A                            LDB,B4   26,B5
          2 000369  CF80 0000 000C  00                   STB,B4   KA_POLHED$

      579     8371    4            END; ELSE UNLINKPOL: DO WHILE Y@BFR$~=ADDR(NIL);

   8371   2 00036C  0F81 0036                            B        s:8387,PREL

   8371   2 00036E  0F81 0013            UNLINKPOL       B        s:8377,PREL

      580     8372    5               IF Y@BFR$->KA$CTX.POLLNK$=ADDR(%KA_CTX) THEN DO;

   8372   2 000370  ECC7 0008                            LDB,B6   Y@BFR$,AUTO
          2 000372  DCC6 001A                            LDB,B5   26,B6
          2 000374  DDC7 0006                            CMB,B5   Y@CTX$,AUTO
          2 000376  0981 0009                            BNE      s:8376,PREL

      581     8373    5                  Y@BFR$->KA$CTX.POLLNK$ = %KA_CTX.POLLNK$;

   8373   2 000378  CCC7 0006                            LDB,B4   Y@CTX$,AUTO
          2 00037A  BCC4 001A                            LDB,B3   26,B4
          2 00037C  BFC6 001A                            STB,B3   26,B6

      582     8374    5                  EXIT UNLINKPOL;

   8374   2 00037E  0F81 0006                            B        s:8379,PREL

      583     8375    5               END;
      584     8376    4               Y@BFR$ = Y@BFR$->KA$CTX.POLLNK$;

   8376   2 000380  DFC7 0008                            STB,B5   Y@BFR$,AUTO

      585     8377    4            END;

   8377   2 000382  8DC7 0008                            CMN      Y@BFR$,AUTO
          2 000384  09EC                                 BNE      s:8372,SPREL

      586     8378    3         END;
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:81   

      587     8379    2      END; ELSE IF KV$PTR.INPCNDPND.ESC.PRF THEN DO;

   8379   2 000385  0F81 001D                            B        s:8387,PREL

   8379   2 000387  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 00038A  82C5 001B                            LB,'00C0'X        27,B5
          2 00038C       00C0
          2 00038D  0581 0015                            BBF      s:8387,PREL

      588     8380
      589     8381        /* Set a clock to make sure the function key was used to generate its chars */
      590     8382
      591     8383    2         CALL KHC$UTS (KH@IO_INPRNG);

   8383   2 00038F  CBC7 000E                            LAB,B4   KH@IO_INPRNG,AUTO
          2 000391  CFC7 001A                            STB,B4   KH@IOLD+6,AUTO
          2 000393  BBC7 001A                            LAB,B3   KH@IOLD+6,AUTO
          2 000395  CBF0 0100                            LAB,B4   256,IMO
          2 000397  E380 0000 0000  xent                 LNJ,B6   KHC$UTS
          2 00039A       0001                            DC       s:8384,PREL

      592     8384    2         %KA_CTX.LSTUTS = KH@IO_INPRNG.RNG;

   8384   2 00039B  ECC7 0006                            LDB,B6   Y@CTX$,AUTO
          2 00039D  E847 000F                            LDR,R6   KH@IO_INPRNG+1,AUTO
          2 00039F  EF46 000D                            STR,R6   13,B6

      593     8385    2         %KA_CTX.INPCHRSNCUTS = 0;

   8385   2 0003A1  8746 0018                            CL       24,B6

      594     8386    2      END;

      595     8387    2      IF %KH_CHN.OTPCCBCNT=0 AND NOT %KA_CTX.HLTOTP THEN DO;

   8387   2 0003A3  ECC7 0004                            LDB,B6   Y@CHN$,AUTO
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:82   
          2 0003A5  82C6 0007                            LB,'000F'X        7,B6
          2 0003A7       000F
          2 0003A8  0501 0034                            BBT      s:8415,PREL
          2 0003AA  DCC7 0006                            LDB,B5   Y@CTX$,AUTO
          2 0003AC  82C5 001C                            LB,'C000'X        28,B5
          2 0003AE       C000
          2 0003AF  0501 002D                            BBT      s:8415,PREL

      596     8388
      597     8389        /* THE OUTPUT CCB COUNT IS ZERO, SO POSITIONING AND/OR                        */
      598     8390        /* OUTPUT BUFFER TRUNCATING WON'T BE DONE BY THE OUTPUT                       */
      599     8391        /* INTERRUPT ROUTINE.                                                         */
      600     8392
      601     8393        /* Force completion of any pending output operations.                         */
      602     8394
      603     8395    3         IF %KV_VDI.RE_DSPINP THEN DO;

   8395   2 0003B1  CC80 0000 0000  xsym                 LDB,B4   KV$PTR$
          2 0003B4  BC84                                 LDB,B3   ,B4
          2 0003B5  82C3 0019                            LB,'0010'X        25,B3
          2 0003B7       0010
          2 0003B8  0581 0007                            BBF      s:8404,PREL

      604     8396    3            CALL KVI$RE_DSPINP;

   8396   2 0003BA  CBF0 0000                            LAB,B4   0,IMO
          2 0003BC  E380 0000 0000  xent                 LNJ,B6   KVI$RE_DSPINP
          2 0003BF       0001                            DC       s:8404,PREL

      605     8397    3         END;

      606     8398
      607     8399              %KV$CMPOTP;
              8404    3           IF KV$PTR.VDI$->KV$VDI.OTPCNDPND THEN DO;

   8404   2 0003C0  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 0003C3  DC86                                 LDB,B5   ,B6
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:83   
          2 0003C4  E845 001A                            LDR,R6   26,B5
          2 0003C6  6901 000A                            BEZ,R6   s:8408,PREL

              8405    3              CALL KVV$VDI(KV_VDH_EVT_CMPOTP);

   8405   2 0003C8  BB80 0000 0007  03                   LAB,B3   +7
          2 0003CB  CBF0 0100                            LAB,B4   256,IMO
          2 0003CD  E380 0000 0000  xent                 LNJ,B6   KVV$VDI
          2 0003D0       0001                            DC       s:8408,PREL

              8406    3              END;                         /* END IF                             */

      608     8408    3         IF (%KA_CTX.OTPBFRBYTCNT ~= 0) THEN DO;

   8408   2 0003D1  ECC7 0006                            LDB,B6   Y@CTX$,AUTO
          2 0003D3  E846 000B                            LDR,R6   11,B6
          2 0003D5  6901 0007                            BEZ,R6   s:8415,PREL

      609     8409
      610     8410        /* THERE IS AN OUTPUT BUFFER THAT NEEDS TO BE TRUNCATED/IOLD'D.               */
      611     8411
      612     8412    3            CALL KAO$IOLD_OTP ;

   8412   2 0003D7  CBF0 0000                            LAB,B4   0,IMO
          2 0003D9  E380 0000 0000  xent                 LNJ,B6   KAO$IOLD_OTP
          2 0003DC       0001                            DC       s:8415,PREL

      613     8413    3         END /* IF */;

      614     8414    2      END /* IF */;

      615     8415    1   END KAI$INPINT;

   8415   2 0003DD  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      616     8416        %EOD;

PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:84   
--  Include file information  --

   KA_PERR_C.:E05TOU  is referenced.
   KH$IO.:E05TOU  is referenced.
   KA_LCT_E.:E05TOU  is referenced.
   KV$BPC.:E05TOU  is referenced.
   KH$STT.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KW_ALCT_E.:E05TOU  is referenced.
   KW_LCT_E.:E05TOU  is referenced.
   GH_IOFNC_E.:E05TOU  is referenced.
   KH_CLKFNC_E.:E05TOU  is referenced.
   KH$CLK.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KV_GLB_M.:E05TOU  is referenced.
   KA_GLB_E.:E05TOU  is referenced.
   KA_GLB.:E05TOU  is referenced.
   KA$GLB.:E05TOU  is referenced.
   KV_GLBASM_E.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is never referenced.
   KV$USR.:E05TOU  was found in the system file and is never referenced.
   KV$SND.:E05TOU  was found in the system file and is never referenced.
   KV$INT.:E05TOU  was found in the system file and is never referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:85   
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KAI$INPINT.
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:86   

 **** Variables and constants ****

  ****  Section 000  Data  KAI$INPINT

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(176)   r     1 KA_POLCLK                  C-0-0/w PTR         r     1 KA_POLHED$
     B-0-0/w UBIN(16)    r     1 KA_POLLMT

  ****  Section 001 RoData KAI$INPINT

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

    32-0-0/w STRC(336)   r     1 FPT_WRSYSLOG_INVRNG       1D-0-0/w STRC(336)   r     1 FPT_WRSYSLOG_IO_ERR
     8-0-0/w STRC(80)    r     1 KH_IOLD                    4-0-0/w STRC(32)    r     1 KH_IO_INPLCTBYT
     2-0-0/w STRC(32)    r     1 KH_IO_INPNXTCCBSTT         0-0-0/w STRC(32)    r     1 KH_IO_INPRNG
     6-0-0/w STRC(32)    r     1 KH_IO_OTPLCTBYT
     D-0-0/w UBIN(16)    r     1 Y_BFRMAXBYTSIZ(0:15)

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

    14-0-0/w STRC(80)    r     1 KH@IOLD                   10-0-0/w STRC(32)    r     1 KH@IO_INPLCTBYT
     C-0-0/w STRC(32)    r     1 KH@IO_INPNXTCCBSTT         E-0-0/w STRC(32)    r     1 KH@IO_INPRNG
    12-0-0/w STRC(32)    r     1 KH@IO_OTPLCTBYT            8-0-0/w PTR         r     1 Y@BFR$
     4-0-0/w PTR         r     1 Y@CHN$                     6-0-0/w PTR         r     1 Y@CTX$
     A-0-0/w SBIN(16)    r     1 Y@MAXBYTX                  B-0-0/w UBIN(16)    r     1 Y@UTS

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:87   
     0-0-0/w STRC(2528)  r     1 KA_STT                     0-0-0/w PTR         r     1 KV$PTR$
     0-0-0/w UBIN(16)    r     1 KV_VDH_EVT_CMPOTP          0-0-0/w UBIN(16)    r     1 KV_VDH_EVT_RLSVDI

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(512)   r     1 KA$CTX                     0-0-0/w STRC(8)     r     1 KA$INPBFR
     0-0-0/w STRC(512)   r     1 KH$CHN                     0-0-0/w STRC(480)   r     1 KV$PTR
     0-0-0/w STRC(1024)  r     1 KV$SSN                     0-0-0/w STRC(512)   r     1 KV$VDI
     0-0-0/w STRC(64)    r     1 Y$NEWBFR_                  0-0-0/w STRC(96)    r     1 Y$NEWBFR__
     0-0-0/w UBIN(16)    r     1 Y$U


   Procedure KAI$INPINT requires 992 words for executable code.
   Procedure KAI$INPINT requires 30 words of local(AUTO) storage.
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:88   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:89   
          MINI XREF LISTING

FETCH
      8108**LABEL    8127--EXIT     8144--EXIT     8159--EXIT     8170--EXIT     8179--EXIT
FPT_WRSYSLOG_INVRNG
      7400**DCL      8110<>CALL
FPT_WRSYSLOG_INVRNG.V
      7404**DCL      7402--DCLINIT
FPT_WRSYSLOG_INVRNG.V.TERMID.TERM
      7469**DCL      7478--REDEF
FPT_WRSYSLOG_IO_ERR
      7305**DCL      8248<>CALL
FPT_WRSYSLOG_IO_ERR.V
      7309**DCL      7307--DCLINIT
FPT_WRSYSLOG_IO_ERR.V.TERMID.TERM
      7374**DCL      7383--REDEF
KA$CTX
       371**DCL      8348--ASSIGN   8369--IF       8372--IF
KA$CTX.BFRGRWPND
       473**DCL      8270>>IF       8287<<ASSIGN   8290>>IF       8303<<ASSIGN
KA$CTX.HLTOTP
       466**DCL       468--REDEF    8387>>IF
KA$CTX.HLTOTPNXTBFR
       470**DCL       471--REDEF
KA$CTX.INPCHRSNCUTS
       465**DCL      8196<<ASSIGN   8196>>ASSIGN   8204<<ASSIGN   8204>>ASSIGN   8212<<ASSIGN   8212>>ASSIGN
      8334>>IF       8338<<ASSIGN   8356>>IF       8357<<ASSIGN   8385<<ASSIGN
KA$CTX.INPRNG
       380**DCL      8104>>IF       8118<<ASSIGN   8169<<ASSIGN   8171>>IF       8190>>ASSIGN   8224<<ASSIGN
      8224>>ASSIGN
KA$CTX.LCTSTT
       470**DCL      8343>>ASSIGN   8366>>ASSIGN
KA$CTX.LCTSTT.PLD
       470**DCL      8071>>IF       8266>>IF       8339>>IF       8340<<ASSIGN   8350>>IF       8364<<ASSIGN
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:90   
KA$CTX.LSTUTS
       382**DCL      8076>>ASSIGN   8080>>ASSIGN   8336>>ASSIGN   8337<<ASSIGN   8355>>ASSIGN   8358<<ASSIGN
      8384<<ASSIGN
KA$CTX.OTPBFRBYTCNT
       381**DCL      8408>>IF
KA$CTX.POLLNK$
       466**DCL      8347<<ASSIGN   8370>>ASSIGN   8372>>IF       8373<<ASSIGN   8373>>ASSIGN   8376>>ASSIGN
KA$CTX.REDHLT
       472**DCL      8198>>IF       8200<<ASSIGN
KA$CTX.VDH_DAT
       420**DCL      8203<>CALL
KA$CTX.VDH_DAT.CMPCOD
       458**DCL      8212>>ASSIGN   8213<<ASSIGN
KA$CTX.VDH_DAT.DAT__
       452**DCL      8296<<ASSIGN   8301--ASSIGN
KA$CTX.VDH_DAT.DAT__.ADR$
       454**DCL      8066>>ASSIGN   8289>>ASSIGN
KA$CTX.VDH_DAT.DAT__.BFRBYTSIZ
       455**DCL      8067>>ASSIGN   8261>>ASSIGN   8270>>IF       8278>>ASSIGN
KA$CTX.VDH_DAT.DAT__.BYTX
       454**DCL      8068>>IF       8109>>IF       8190>>ASSIGN   8264<<ASSIGN   8265>>ASSIGN   8295--ASSIGN
      8302<<ASSIGN
KA$CTX.VDH_DAT.DAT__.DATBYTSIZ
       454**DCL      8190<<ASSIGN   8195>>IF       8196>>ASSIGN   8204>>ASSIGN
KA$INPBFR.CHR
       499**DCL      8177<<ASSIGN
KAI$POL
      1628**DCL-ENT  1608--DCLINIT
KAO$ASNRQSRSMOTP
      7487**DCL-ENT  8201--CALL
KAO$IOLD_OTP
      7488**DCL-ENT  8412--CALL
KA_POLCLK
      1491**DCL      8346<>CALL
KA_POLCLK.CTBCTX$
      1497**DCL      8345<<ASSIGN
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:91   
KA_POLCLK.UID
      1507**DCL      1508--REDEF    1509--REDEF
KA_POLHED$
      1630**DCL      8346>>IF       8347>>ASSIGN   8348<<ASSIGN   8368>>ASSIGN   8370<<ASSIGN
KA_POLLMT
      1629**DCL      8334>>IF       8356>>IF
KA_STT.KHSTT.INPBFRBYTUTL
      6167**DCL      8282<<ASSIGN   8282>>ASSIGN   8299<<ASSIGN   8299>>ASSIGN
KA_STT.REQSTATS.DSPMSK
      6095**DCL      6101--REDEF
KA_STT.REQSTATS.SLCMSK
      6136**DCL      6143--REDEF
KH$CHN
       951**DCL      8096<>CALL     8110<>CALL     8139<>CALL     8155<>CALL     8229<>CALL     8248<>CALL
      8254<>CALL     8307<>CALL     8328<>CALL     8344<>CALL     8367<>CALL
KH$CHN.CTX$
      1021**DCL      8065>>ASSIGN
KH$CHN.OTPCCBCNT
       995**DCL      8387>>IF
KH$CHN.TERMID.TERM
      1047**DCL      1056--REDEF
KH@IOLD
      8026**DCL      8260<<ASSIGN   8307<>CALL
KH@IOLD.BFR_
      8057**DCL      8285<<ASSIGN   8301<<ASSIGN
KH@IOLD.BFR_.ADR$
      8059**DCL      8262<<ASSIGN   8297>>ASSIGN   8298>>CALL     8304>>ASSIGN
KH@IOLD.BFR_.BYTSIZ
      8059**DCL      8261<<ASSIGN   8263>>ASSIGN   8265>>ASSIGN   8297>>ASSIGN   8299>>ASSIGN
KH@IOLD.BFR_.BYTX
      8059**DCL      8263<<ASSIGN   8264>>IF       8277--ASSIGN   8305>>ASSIGN
KH@IOLD.CCBCTR.INTCPU
      8033**DCL      8266<<ASSIGN
KH@IO_INPLCTBYT
      7796**DCL      8137<<ASSIGN   8139<>CALL     8252<<ASSIGN   8254<>CALL
KH@IO_INPLCTBYT.ASNSTT
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:92   
      7805**DCL      7806--REDEF    7812--REDEF    7817--REDEF    7821--REDEF    7825--REDEF    7829--REDEF
      7836--REDEF    7842--REDEF    7848--REDEF    7853--REDEF    7860--REDEF    7863--REDEF    7867--REDEF
      7874--REDEF    7878--REDEF    7882--REDEF    7886--REDEF    7891--REDEF    7895--REDEF
KH@IO_INPLCTBYT.LCTBYT
      7812**DCL      8270>>IF       8317>>IF
KH@IO_INPLCTBYT.LCTBYT.ADR
      7812**DCL      8138<<ASSIGN   8253<<ASSIGN
KH@IO_INPLCTBYT.LCTBYT.DAT
      7812**DCL      8177>>ASSIGN
KH@IO_INPNXTCCBSTT
      7568**DCL      8228<<ASSIGN   8229<>CALL
KH@IO_INPNXTCCBSTT.ASNSTT
      7577**DCL      7578--REDEF    7584--REDEF    7589--REDEF    7593--REDEF    7597--REDEF    7601--REDEF
      7608--REDEF    7614--REDEF    7620--REDEF    7625--REDEF    7632--REDEF    7635--REDEF    7639--REDEF
      7646--REDEF    7650--REDEF    7654--REDEF    7658--REDEF    7663--REDEF    7667--REDEF
KH@IO_INPNXTCCBSTT.CCBSTT
      7639**DCL      8248>>IF
KH@IO_INPRNG
      7682**DCL      8077<>CALL     8082<<ASSIGN   8096<>CALL     8155<>CALL     8335<>CALL     8354<>CALL
      8383<>CALL
KH@IO_INPRNG.ASNSTT
      7691**DCL      7692--REDEF    7698--REDEF    7703--REDEF    7707--REDEF    7711--REDEF    7715--REDEF
      7722--REDEF    7728--REDEF    7734--REDEF    7739--REDEF    7746--REDEF    7749--REDEF    7753--REDEF
      7760--REDEF    7764--REDEF    7768--REDEF    7772--REDEF    7777--REDEF    7781--REDEF
KH@IO_INPRNG.RNG
      7703**DCL      8078>>ASSIGN   8104>>IF       8109>>IF       8116<<ASSIGN   8118>>ASSIGN   8124>>IF
      8165>>IF       8169>>ASSIGN   8171>>IF       8177>>ASSIGN   8215>>IF       8336>>ASSIGN   8337>>ASSIGN
      8355>>ASSIGN   8358>>ASSIGN   8384>>ASSIGN
KH@IO_OTPLCTBYT
      7910**DCL      8325<<ASSIGN   8328<>CALL     8341<<ASSIGN   8344<>CALL     8363<<ASSIGN   8367<>CALL
KH@IO_OTPLCTBYT.ASNSTT
      7919**DCL      7920--REDEF    7926--REDEF    7931--REDEF    7935--REDEF    7939--REDEF    7943--REDEF
      7950--REDEF    7956--REDEF    7962--REDEF    7967--REDEF    7974--REDEF    7977--REDEF    7981--REDEF
      7988--REDEF    7992--REDEF    7996--REDEF    8000--REDEF    8005--REDEF    8009--REDEF
KH@IO_OTPLCTBYT.LCTBYT.ADR
      7926**DCL      8326<<ASSIGN   8342<<ASSIGN   8365<<ASSIGN
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:93   
KH@IO_OTPLCTBYT.LCTBYT.DAT
      7926**DCL      8327<<ASSIGN   8343<<ASSIGN   8366<<ASSIGN
KHC$CLOCK
      1626**DCL-ENT  8346--CALL
KHC$UTS
      1627**DCL-ENT  8077--CALL     8335--CALL     8354--CALL     8383--CALL
KHD$ERRLOG_SETTERMID_CHN
        43**DCL-ENT  8110--CALL     8248--CALL
KHI$IOLD
      7486**DCL-ENT  8307--CALL
KHI$IO_INP
      7482**DCL-ENT  8096--CALL     8155--CALL     8229--CALL
KHI$IO_INPLCTBYT
      7484**DCL-ENT  8139--CALL     8254--CALL
KHI$IO_OTPLCTBYT
      7485**DCL-ENT  8328--CALL     8344--CALL     8367--CALL
KH_IOLD
      7232**DCL      8260>>ASSIGN
KH_IO_INPLCTBYT
      7002**DCL      8137>>ASSIGN   8252>>ASSIGN
KH_IO_INPNXTCCBSTT
      6888**DCL      8228>>ASSIGN
KH_IO_INPRNG
      6774**DCL      8082>>ASSIGN
KH_IO_OTPLCTBYT
      7116**DCL      8325>>ASSIGN   8341>>ASSIGN   8363>>ASSIGN
KV$PTR.INPCNDPND
      6225**DCL      6234--REDEF    6238--REDEF
KV$PTR.INPCNDPND.ESC.PRF
      6233**DCL      8071>>IF       8079<<ASSIGN   8379>>IF
KV$PTR.LINLST$
      6221**DCL      6222--REDEF
KV$PTR.SSN$
      6219**DCL      8207>>IF       8208>>IF
KV$PTR.VDI$
      6219**DCL      8064>>ASSIGN   8206>>ASSIGN   8270>>IF       8395>>IF       8404>>IF
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:94   
KV$PTR$
      6213**DCL      6219--IMP-PTR  8064>>ASSIGN   8071>>IF       8079>>ASSIGN   8206>>ASSIGN   8207>>IF
      8208>>IF       8270>>IF       8379>>IF       8395>>IF       8404>>IF
KV$SSN
      6264**DCL      8207--IF
KV$SSN.REDRSPCNT
      6270**DCL      6271--REDEF
KV$SSN.SSNCNCID
      6273**DCL      8208>>IF
KV$VDI.CHN$
      6341**DCL      8064>>ASSIGN
KV$VDI.DFR.USR
      6373**DCL      8206<<ASSIGN
KV$VDI.LINSPD
      6383**DCL      8270>>IF
KV$VDI.OTPCNDPND
      6378**DCL      8404>>IF
KV$VDI.RE_DSPINP
      6376**DCL      8395>>IF
KVB$GET2NSYS
      7492**DCL-ENT  8279--CALL
KVB$RLS2NSYS
      7493**DCL-ENT  8298--CALL
KVI$RE_DSPINP
      7494**DCL-ENT  8396--CALL
KVV$VDI
      7495**DCL-ENT  8203--CALL     8209--CALL     8405--CALL
KV_VDH_EVT_CMPOTP
      7490**DCL      8405<>CALL
KV_VDH_EVT_RLSVDI
      7491**DCL      8209<>CALL
MAIN_LOOP
      8083**LABEL    8099--EXIT     8215--EXIT     8234--EXIT     8312--EXIT
UNLINKPOL
      8371**LABEL    8374--EXIT
Y$NEWBFR_
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:95   
      7548**DCL      8285>>ASSIGN   8301>>ASSIGN
Y$NEWBFR__
      7521**DCL      8296>>ASSIGN
Y$NEWBFR__.ADR$
      7525**DCL      8279<>CALL
Y$NEWBFR__.BFRBYTSIZ
      7526**DCL      8281<<ASSIGN   8282>>ASSIGN
Y$NEWBFR__.BYTX
      7525**DCL      8284<<ASSIGN   8286<<ASSIGN
Y$NEWBFR__.DATBYTSIZ
      7525**DCL      8278<<ASSIGN   8279<>CALL     8281>>ASSIGN   8286>>ASSIGN
Y$U
      7555**DCL      8277>>ASSIGN   8295>>ASSIGN   8297<<ASSIGN   8298<>CALL
Y@BFR$
      7499**DCL      7521--IMP-PTR  7548--IMP-PTR  8066<<ASSIGN   8177>>ASSIGN   8262>>ASSIGN   8277<<ASSIGN
      8277>>ASSIGN   8278>>ASSIGN   8279>>CALL     8279>>CALL     8281>>ASSIGN   8281>>ASSIGN   8282>>ASSIGN
      8284>>ASSIGN   8285>>ASSIGN   8286>>ASSIGN   8286>>ASSIGN   8289<<ASSIGN   8295<<ASSIGN   8295>>ASSIGN
      8296>>ASSIGN   8304<<ASSIGN   8368<<ASSIGN   8369>>IF       8371>>DOWHILE  8372>>IF       8373>>ASSIGN
      8376<<ASSIGN   8376>>ASSIGN
Y@CHN$
      7497**DCL       951--IMP-PTR  8064<<ASSIGN   8065>>ASSIGN   8096>>CALL     8110>>CALL     8139>>CALL
      8155>>CALL     8229>>CALL     8248>>CALL     8254>>CALL     8307>>CALL     8328>>CALL     8344>>CALL
      8367>>CALL     8387>>IF
Y@CTX$
      7498**DCL       371--IMP-PTR  8065<<ASSIGN   8066>>ASSIGN   8067>>ASSIGN   8068>>IF       8071>>IF
      8076>>ASSIGN   8080>>ASSIGN   8104>>IF       8109>>IF       8118>>ASSIGN   8169>>ASSIGN   8171>>IF
      8190>>ASSIGN   8190>>ASSIGN   8190>>ASSIGN   8195>>IF       8196>>ASSIGN   8196>>ASSIGN   8196>>ASSIGN
      8198>>IF       8200>>ASSIGN   8203>>CALL     8204>>ASSIGN   8204>>ASSIGN   8204>>ASSIGN   8212>>ASSIGN
      8212>>ASSIGN   8212>>ASSIGN   8213>>ASSIGN   8224>>ASSIGN   8224>>ASSIGN   8261>>ASSIGN   8264>>ASSIGN
      8265>>ASSIGN   8266>>IF       8270>>IF       8270>>IF       8278>>ASSIGN   8287>>ASSIGN   8289>>ASSIGN
      8290>>IF       8295>>ASSIGN   8296>>ASSIGN   8301>>ASSIGN   8302>>ASSIGN   8303>>ASSIGN   8334>>IF
      8336>>ASSIGN   8337>>ASSIGN   8338>>ASSIGN   8339>>IF       8340>>ASSIGN   8343>>ASSIGN   8347>>ASSIGN
      8348>>ASSIGN   8350>>IF       8355>>ASSIGN   8356>>IF       8357>>ASSIGN   8358>>ASSIGN   8364>>ASSIGN
      8366>>ASSIGN   8369>>IF       8370>>ASSIGN   8372>>IF       8373>>ASSIGN   8384>>ASSIGN   8385>>ASSIGN
      8387>>IF       8408>>IF
Y@MAXBYTX
PL6.E3A0      #002=KAI$INPINT File=KAI$INP.:E05TSI                               TUE 07/29/97 23:57 Page:96   
      7500**DCL      8067<<ASSIGN   8068>>IF       8069<<ASSIGN   8069>>ASSIGN   8069>>ASSIGN   8109>>IF
      8177>>ASSIGN   8190>>ASSIGN   8263>>ASSIGN   8265<<ASSIGN   8305<<ASSIGN
Y@UTS
      7501**DCL      8070<<ASSIGN   8076<<ASSIGN   8078<<ASSIGN   8078>>ASSIGN   8079>>IF       8080<<ASSIGN
      8080>>ASSIGN   8336<<ASSIGN   8339>>IF       8355<<ASSIGN   8359>>IF
Y_BFRMAXBYTSIZ
      7270**DCL      8270>>IF

PL6.E3A0      #003=KAI$POL File=KAI$INP.:E05TSI                                  TUE 07/29/97 23:58 Page:97   
      617        1        /*T***********************************************************/
      618        2        /*T*                                                         */
      619        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      620        4        /*T*                                                         */
      621        5        /*T***********************************************************/
      622        6        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IAD=3,IND=0 */
      623        7        /*F* NAME: KAI$POL
      624        8             PURPOSE: Runs every half-second or so,  simulating an input
      625        9             interrupt on those lines that have had their per-character
      626       10             interrupts turned off.
      627       11        */
      628       12
      629       13        KAI$POL: PROC (KH$EXP);
      630       14
      631       15        %INCLUDE LCP_6;
      632      206        %INCLUDE KA$GLB;
      633      347        %KA$CTX (STCLASS="BASED(Y@CTX$)");
      634      471        %EQU KA_CTX=CHARTEXT('KA$CTX');
      635      472        %INCLUDE KH$CLK;
      636      842        %KH$EXP (STCLASS=PARAM);
      637      905        %KH$CTBCTX;
      638      978        %INCLUDE KL_AFCN_C;
      639     1079        %INCLUDE KL_MACRO_C;
      640     4431        %INCLUDE K_ID_E;
      641     4481        %INCLUDE KV$BPC;
      642     4510        %K#ENTID_E;
      643     4529        %K#LYRID_E;
      644     4536 S      %INCLUDE KV_GLBCNS_E;
      645     4537 S      %INCLUDE KV$GLB;
      646     4538 S      %INCLUDE KV$GLBCTX;
      647     4539        %KV$PTR;
      648     4582        %KV$VDI;
      649     4653        %INCLUDE KV_GLB_M;
      650     4775        %KV_VDH_EVT_ID_E;
      651     4781        %KV_SCHRSN_E;
      652     4788
      653     4789        %INCLUDE KH$STT;                        /* For KV_STT                         */
PL6.E3A0      #003=KAI$POL File=KAI$INP.:E05TSI                                  TUE 07/29/97 23:58 Page:98   
      654     4819        %INCLUDE KA_GLB;
      655     4896        %KV$STT (NAME=KV_STT, STCLASS=SYMREF);
      656     5290
      657     5291    1   DCL KAI$INPINT ENTRY;
      658     5292    1   DCL KA_INT_LEV UBIN SYMREF;
      659     5293    1   DCL KA_POLHED$ PTR SYMREF;
      660     5294    1   DCL KHC$UTS ENTRY(1) ALTRET;
      661     5295    1   DCL KHI$DISABLE ENTRY(1) ALTRET;
      662     5296    1   DCL KHI$ENABLE ENTRY;
      663     5297
      664     5298        /* AUTO */
      665     5299
      666     5300    1   DCL Y@CTX$ PTR;
      667     5301    1   DCL Y@TEMP UBIN;
      668     5302        %KV@USRENT;
      669     5322
      670     5323        %EJECT;
PL6.E3A0      #003=KAI$POL File=KAI$INP.:E05TSI                                  TUE 07/29/97 23:58 Page:99   
      671     5324        /* The code */
      672     5325
      673     5326    1      Y@CTX$ = KA_POLHED$;
      674     5327    2      DO WHILE Y@CTX$~=ADDR(NIL);
      675     5328
      676     5329              %KV$USRENT (VDI$=%KA_CTX.VDI$, STT=KV_STT,
      677     5330              DFR$=Y@DFR, SCHRSN=%KV_SCHRSN_DFR1);
              5343    2           KV_STT.USRENTCNT = KV_STT.USRENTCNT + 1;
              5344    3           IF NOT KA$CTX.VDI$->KV$VDI.BSY THEN DO;
              5345    3              KA$CTX.VDI$->KV$VDI.BSY = '1'B;
              5346    3              KV@USRENT.SVDPTR$ = KV$PTR$;
              5347    3              KV$PTR$ = KA$CTX.VDI$->KV$VDI.ASNINPPTR$;
              5348    3              END;                         /* ELSE IF ~BSY                       */
              5349    3           ELSE DO;
              5350    3              KA$CTX.VDI$->KV$VDI.DFR.USR(1) = '1'B;
              5351    3           KV_STT.USRENTDFRCNT = KV_STT.USRENTDFRCNT + 1;
              5352    3              GOTO Y@DFR;
              5353    3              END;                         /* END IF                             */
      678     5356    2         Y@CTX$ = %KA_CTX.POLLNK$;
      679     5357    2         CALL KAI$INPINT;
      680     5358              %KV$USREXT;
              5364    2           KV$PTR.VDI$->KV$VDI.BSY = '0'B;
              5366    2           KV$PTR$ = KV@USRENT.SVDPTR$;
      681     5368    2         CALL KHI$ENABLE;
      682     5369    2         Y@TEMP = KA_INT_LEV;
      683     5370    2         CALL KHI$DISABLE (Y@TEMP);
      684     5371    3         DO WHILE '0'B;
      685     5372    3   Y@DFR:   Y@CTX$ = %KA_CTX.POLLNK$;
      686     5373    3         END;
      687     5374    2      END;
      688     5375
      689     5376        /* If there's none to poll anymore, cancel the clock. */
      690     5377
      691     5378    1      IF KA_POLHED$=ADDR(NIL) THEN KH$EXP.CTBCTX$->KH$CTBCTX.PERM = '0'B;
      692     5379    2      ELSE DO;
      693     5380
      694     5381        /* Otherwise, set it to go off again in 500 ms (from now, not from when we
PL6.E3A0      #003=KAI$POL File=KAI$INP.:E05TSI                                  TUE 07/29/97 23:58 Page:100  
      695     5382           got entered. */
      696     5383
      697     5384    2         KH$EXP.CTBCTX$->KH$CTBCTX.PERM = '1'B;
      698     5385    2         CALL KHC$UTS (KH$EXP.CTBCTX$->KH$CTBCTX.UTS);
      699     5386    2      END;
      700     5387    1      RETURN;
      701     5388    1   END KAI$POL;
      702     5389        %EOD;

PL6.E3A0      #003=KAI$POL File=KAI$INP.:E05TSI                                  TUE 07/29/97 23:58 Page:101  
--  Include file information  --

   KA_GLB.:E05TOU  is referenced.
   KH$STT.:E05TOU  is referenced.
   KV_GLB_M.:E05TOU  is referenced.
   KV$BPC.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KH$CLK.:E05TOU  is referenced.
   KA$GLB.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is never referenced.
   KV$USR.:E05TOU  was found in the system file and is never referenced.
   KV$SND.:E05TOU  was found in the system file and is never referenced.
   KV$INT.:E05TOU  was found in the system file and is never referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KAI$POL.

   Procedure KAI$POL requires 146 words for executable code.
   Procedure KAI$POL requires 14 words of local(AUTO) storage.

PL6.E3A0      #003=KAI$POL File=KAI$INP.:E05TSI                                  TUE 07/29/97 23:58 Page:102  

 Object Unit name= KAI$POL                                    File name= KAI$INP.:E05TOU
 UTS= JUL 29 '97 23:58:25.32 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none   146     92  KAI$POL

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  KAI$POL

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 KAI$INPINT
 yes     yes           Std       1 KHC$UTS
         yes           Std       0 KHI$ENABLE
 yes     yes           Std       1 KHI$DISABLE
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KV$PTR$                               KV_STT                                KA_INT_LEV
     KA_POLHED$                       r    G$ROS$
PL6.E3A0      #003=KAI$POL File=KAI$INP.:E05TSI                                  TUE 07/29/97 23:58 Page:103  


      617        1        /*T***********************************************************/
      618        2        /*T*                                                         */
      619        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      620        4        /*T*                                                         */
      621        5        /*T***********************************************************/
      622        6        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IAD=3,IND=0 */
      623        7        /*F* NAME: KAI$POL
      624        8             PURPOSE: Runs every half-second or so,  simulating an input
      625        9             interrupt on those lines that have had their per-character
      626       10             interrupts turned off.
      627       11        */
      628       12
      629       13        KAI$POL: PROC (KH$EXP);

     13   0 000000  D380 0000 0000  xent KAI$POL         LNJ,B5   X6A_AUTO_1
          0 000003       000E 0001                       DC       14,1

      630       14
      631       15        %INCLUDE LCP_6;
      632      206        %INCLUDE KA$GLB;
      633      347        %KA$CTX (STCLASS="BASED(Y@CTX$)");
      634      471        %EQU KA_CTX=CHARTEXT('KA$CTX');
      635      472        %INCLUDE KH$CLK;
      636      842        %KH$EXP (STCLASS=PARAM);
      637      905        %KH$CTBCTX;
      638      978        %INCLUDE KL_AFCN_C;
      639     1079        %INCLUDE KL_MACRO_C;
      640     4431        %INCLUDE K_ID_E;
      641     4481        %INCLUDE KV$BPC;
      642     4510        %K#ENTID_E;
      643     4529        %K#LYRID_E;
      644     4536 S      %INCLUDE KV_GLBCNS_E;
      645     4537 S      %INCLUDE KV$GLB;
      646     4538 S      %INCLUDE KV$GLBCTX;
      647     4539        %KV$PTR;
      648     4582        %KV$VDI;
PL6.E3A0      #003=KAI$POL File=KAI$INP.:E05TSI                                  TUE 07/29/97 23:58 Page:104  
      649     4653        %INCLUDE KV_GLB_M;
      650     4775        %KV_VDH_EVT_ID_E;
      651     4781        %KV_SCHRSN_E;
      652     4788
      653     4789        %INCLUDE KH$STT;                        /* For KV_STT                         */
      654     4819        %INCLUDE KA_GLB;
      655     4896        %KV$STT (NAME=KV_STT, STCLASS=SYMREF);
      656     5290
      657     5291    1   DCL KAI$INPINT ENTRY;
      658     5292    1   DCL KA_INT_LEV UBIN SYMREF;
      659     5293    1   DCL KA_POLHED$ PTR SYMREF;
      660     5294    1   DCL KHC$UTS ENTRY(1) ALTRET;
      661     5295    1   DCL KHI$DISABLE ENTRY(1) ALTRET;
      662     5296    1   DCL KHI$ENABLE ENTRY;
      663     5297
      664     5298        /* AUTO */
      665     5299
      666     5300    1   DCL Y@CTX$ PTR;
      667     5301    1   DCL Y@TEMP UBIN;
      668     5302        %KV@USRENT;
      669     5322
      670     5323        %EJECT;
PL6.E3A0      #003=KAI$POL File=KAI$INP.:E05TSI                                  TUE 07/29/97 23:58 Page:105  
      671     5324        /* The code */
      672     5325
      673     5326    1      Y@CTX$ = KA_POLHED$;

   5326   0 000005  EC80 0000 0000  xsym                 LDB,B6   KA_POLHED$
          0 000008  EFC7 0006                            STB,B6   Y@CTX$,AUTO

      674     5327    2      DO WHILE Y@CTX$~=ADDR(NIL);

   5327   0 00000A  0F81 005D                            B        s:5374,PREL

      675     5328
      676     5329              %KV$USRENT (VDI$=%KA_CTX.VDI$, STT=KV_STT,
      677     5330              DFR$=Y@DFR, SCHRSN=%KV_SCHRSN_DFR1);
              5343    2           KV_STT.USRENTCNT = KV_STT.USRENTCNT + 1;

   5343   0 00000C  8A80 0000 0039  xsym                 INC      KV_STT+57
          0 00000F  8E80 0000 0038  xsym                 CAD      KV_STT+56

              5344    3           IF NOT KA$CTX.VDI$->KV$VDI.BSY THEN DO;

   5344   0 000012  ECC7 0006                            LDB,B6   Y@CTX$,AUTO
          0 000014  DC86                                 LDB,B5   ,B6
          0 000015  82C5 0019                            LB,'0080'X        25,B5
          0 000017       0080
          0 000018  0501 0011                            BBT      s:5350,PREL

              5345    3              KA$CTX.VDI$->KV$VDI.BSY = '1'B;

   5345   0 00001A  8945 0019                            LBT,'0080'X       25,B5
   5345   0 00001C       0080

              5346    3              KV@USRENT.SVDPTR$ = KV$PTR$;

   5346   0 00001D  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          0 000020  DFC7 0009                            STB,B5   KV@USRENT,AUTO

PL6.E3A0      #003=KAI$POL File=KAI$INP.:E05TSI                                  TUE 07/29/97 23:58 Page:106  
              5347    3              KV$PTR$ = KA$CTX.VDI$->KV$VDI.ASNINPPTR$;

   5347   0 000022  CC86                                 LDB,B4   ,B6
          0 000023  BCC4 0006                            LDB,B3   6,B4
          0 000025  BF80 0000 0000  xsym                 STB,B3   KV$PTR$

              5348    3              END;                         /* ELSE IF ~BSY                       */

   5348   0 000028  0F81 000C                            B        s:5356,PREL

              5349    3           ELSE DO;

              5350    3              KA$CTX.VDI$->KV$VDI.DFR.USR(1) = '1'B;

   5350   0 00002A  8945 0018                            LBT,'4000'X       24,B5
   5350   0 00002C       4000

              5351    3           KV_STT.USRENTDFRCNT = KV_STT.USRENTDFRCNT + 1;

   5351   0 00002D  8A80 0000 003B  xsym                 INC      KV_STT+59
          0 000030  8E80 0000 003A  xsym                 CAD      KV_STT+58

              5352    3              GOTO Y@DFR;

   5352   0 000033  0F81 0030                            B        s:5372,PREL

              5353    3              END;                         /* END IF                             */
      678     5356    2         Y@CTX$ = %KA_CTX.POLLNK$;

   5356   0 000035  CCC6 001A                            LDB,B4   26,B6
          0 000037  CFC7 0006                            STB,B4   Y@CTX$,AUTO

      679     5357    2         CALL KAI$INPINT;

   5357   0 000039  CBF0 0000                            LAB,B4   0,IMO
          0 00003B  E380 0000 0000  xent                 LNJ,B6   KAI$INPINT
          0 00003E       0001                            DC       s:5364,PREL
PL6.E3A0      #003=KAI$POL File=KAI$INP.:E05TSI                                  TUE 07/29/97 23:58 Page:107  

      680     5358              %KV$USREXT;
              5364    2           KV$PTR.VDI$->KV$VDI.BSY = '0'B;

   5364   0 00003F  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 000042  DC86                                 LDB,B5   ,B6
          0 000043  8845 0019                            LBF,'0080'X       25,B5
          0 000045       0080

              5366    2           KV$PTR$ = KV@USRENT.SVDPTR$;

   5366   0 000046  DCC7 0009                            LDB,B5   KV@USRENT,AUTO
          0 000048  DF80 0000 0000  xsym                 STB,B5   KV$PTR$

      681     5368    2         CALL KHI$ENABLE;

   5368   0 00004B  CBF0 0000                            LAB,B4   0,IMO
          0 00004D  E380 0000 0000  xent                 LNJ,B6   KHI$ENABLE
          0 000050       0001                            DC       s:5369,PREL

      682     5369    2         Y@TEMP = KA_INT_LEV;

   5369   0 000051  E800 0000 0000  xsym                 LDR,R6   KA_INT_LEV
          0 000054  EF47 0008                            STR,R6   Y@TEMP,AUTO

      683     5370    2         CALL KHI$DISABLE (Y@TEMP);

   5370   0 000056  EBC7 0008                            LAB,B6   Y@TEMP,AUTO
          0 000058  EFC7 000C                            STB,B6   KV@USRENT+3,AUTO
          0 00005A  BBC7 000C                            LAB,B3   KV@USRENT+3,AUTO
          0 00005C  CBF0 0100                            LAB,B4   256,IMO
          0 00005E  E380 0000 0000  xent                 LNJ,B6   KHI$DISABLE
          0 000061       0001                            DC       s:5371,PREL

      684     5371    3         DO WHILE '0'B;

   5371   0 000062  0F81 0005                            B        s:5374,PREL
PL6.E3A0      #003=KAI$POL File=KAI$INP.:E05TSI                                  TUE 07/29/97 23:58 Page:108  

      685     5372    3   Y@DFR:   Y@CTX$ = %KA_CTX.POLLNK$;

   5372   0 000064  DCC6 001A            Y@DFR           LDB,B5   26,B6
          0 000066  DFC7 0006                            STB,B5   Y@CTX$,AUTO

      686     5373    3         END;

      687     5374    2      END;

   5374   0 000068  8DC7 0006                            CMN      Y@CTX$,AUTO
          0 00006A  0981 FFA1                            BNE      s:5343,PREL

      688     5375
      689     5376        /* If there's none to poll anymore, cancel the clock. */
      690     5377
      691     5378    1      IF KA_POLHED$=ADDR(NIL) THEN KH$EXP.CTBCTX$->KH$CTBCTX.PERM = '0'B;

   5378   0 00006C  8D80 0000 0000  xsym                 CMN      KA_POLHED$
          0 00006F  0981 000A                            BNE      s:5384,PREL

   5378   0 000071  ECC7 0004                            LDB,B6   @KH$EXP,AUTO
          0 000073  DCC6 0003                            LDB,B5   3,B6
          0 000075  8845 000C                            LBF,'0010'X       12,B5
          0 000077       0010
          0 000078  0F81 0016                            B        s:5387,PREL

      692     5379    2      ELSE DO;

      693     5380
      694     5381        /* Otherwise, set it to go off again in 500 ms (from now, not from when we
      695     5382           got entered. */
      696     5383
      697     5384    2         KH$EXP.CTBCTX$->KH$CTBCTX.PERM = '1'B;

   5384   0 00007A  ECC7 0004                            LDB,B6   @KH$EXP,AUTO
          0 00007C  DCC6 0003                            LDB,B5   3,B6
PL6.E3A0      #003=KAI$POL File=KAI$INP.:E05TSI                                  TUE 07/29/97 23:58 Page:109  
          0 00007E  8945 000C                            LBT,'0010'X       12,B5
          0 000080       0010

      698     5385    2         CALL KHC$UTS (KH$EXP.CTBCTX$->KH$CTBCTX.UTS);

   5385   0 000081  DCC6 0003                            LDB,B5   3,B6
          0 000083  CBC5 0004                            LAB,B4   4,B5
          0 000085  CFC7 000C                            STB,B4   KV@USRENT+3,AUTO
          0 000087  BBC7 000C                            LAB,B3   KV@USRENT+3,AUTO
          0 000089  CBF0 0100                            LAB,B4   256,IMO
          0 00008B  E380 0000 0000  xent                 LNJ,B6   KHC$UTS
          0 00008E       0001                            DC       s:5387,PREL

      699     5386    2      END;

      700     5387    1      RETURN;

   5387   0 00008F  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      701     5388    1   END KAI$POL;
      702     5389        %EOD;

PL6.E3A0      #003=KAI$POL File=KAI$INP.:E05TSI                                  TUE 07/29/97 23:58 Page:110  
--  Include file information  --

   KA_GLB.:E05TOU  is referenced.
   KH$STT.:E05TOU  is referenced.
   KV_GLB_M.:E05TOU  is referenced.
   KV$BPC.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KH$CLK.:E05TOU  is referenced.
   KA$GLB.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is never referenced.
   KV$USR.:E05TOU  was found in the system file and is never referenced.
   KV$SND.:E05TOU  was found in the system file and is never referenced.
   KV$INT.:E05TOU  was found in the system file and is never referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KAI$POL.
PL6.E3A0      #003=KAI$POL File=KAI$INP.:E05TSI                                  TUE 07/29/97 23:58 Page:111  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @KH$EXP                   *0-0-0/w STRC(96)    r     1 KH$EXP
     9-0-0/w STRC(32)    r     1 KV@USRENT                  6-0-0/w PTR         r     1 Y@CTX$
     8-0-0/w UBIN(16)    r     1 Y@TEMP

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN(16)    r     1 KA_INT_LEV                 0-0-0/w PTR         r     1 KA_POLHED$
     0-0-0/w PTR         r     1 KV$PTR$                    0-0-0/w STRC(8960)  r     1 KV_STT

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(512)   r     1 KA$CTX                     0-0-0/w STRC(224)   r     1 KH$CTBCTX
     0-0-0/w STRC(480)   r     1 KV$PTR                     0-0-0/w STRC(512)   r     1 KV$VDI


   Procedure KAI$POL requires 146 words for executable code.
   Procedure KAI$POL requires 14 words of local(AUTO) storage.
PL6.E3A0      #003=KAI$POL File=KAI$INP.:E05TSI                                  TUE 07/29/97 23:58 Page:112  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=KAI$POL File=KAI$INP.:E05TSI                                  TUE 07/29/97 23:58 Page:113  
          MINI XREF LISTING

KA$CTX.HLTOTP
       461**DCL       463--REDEF
KA$CTX.HLTOTPNXTBFR
       465**DCL       466--REDEF
KA$CTX.POLLNK$
       461**DCL      5356>>ASSIGN   5372>>ASSIGN
KA$CTX.VDI$
       373**DCL      5344>>IF       5345>>ASSIGN   5347>>ASSIGN   5350>>ASSIGN
KAI$INPINT
      5291**DCL-ENT  5357--CALL
KA_INT_LEV
      5292**DCL      5369>>ASSIGN
KA_POLHED$
      5293**DCL      5326>>ASSIGN   5378>>IF
KH$CTBCTX.PERM
       967**DCL      5378<<ASSIGN   5384<<ASSIGN
KH$CTBCTX.UID
       943**DCL       944--REDEF
KH$CTBCTX.UTS
       931**DCL      5385<>CALL
KH$EXP
       856**DCL        13--PROC
KH$EXP.CTBCTX$
       871**DCL      5378>>ASSIGN   5384>>ASSIGN   5385>>CALL
KH$EXP.UID
       862**DCL       863--REDEF
KHC$UTS
      5294**DCL-ENT  5385--CALL
KHI$DISABLE
      5295**DCL-ENT  5370--CALL
KHI$ENABLE
      5296**DCL-ENT  5368--CALL
PL6.E3A0      #003=KAI$POL File=KAI$INP.:E05TSI                                  TUE 07/29/97 23:58 Page:114  
KV$PTR.INPCNDPND
      4566**DCL      4575--REDEF    4579--REDEF
KV$PTR.LINLST$
      4562**DCL      4563--REDEF
KV$PTR.VDI$
      4560**DCL      5364>>ASSIGN
KV$PTR$
      4554**DCL      4560--IMP-PTR  5346>>ASSIGN   5347<<ASSIGN   5364>>ASSIGN   5366<<ASSIGN
KV$VDI.ASNINPPTR$
      4604**DCL      5347>>ASSIGN
KV$VDI.BSY
      4638**DCL      5344>>IF       5345<<ASSIGN   5364<<ASSIGN
KV$VDI.DFR.USR
      4635**DCL      5350<<ASSIGN
KV@USRENT.SVDPTR$
      5320**DCL      5346<<ASSIGN   5366>>ASSIGN
KV_STT.REQSTATS.DSPMSK
      5169**DCL      5175--REDEF
KV_STT.REQSTATS.SLCMSK
      5210**DCL      5217--REDEF
KV_STT.USRENTCNT
      5279**DCL      5343<<ASSIGN   5343>>ASSIGN
KV_STT.USRENTDFRCNT
      5280**DCL      5351<<ASSIGN   5351>>ASSIGN
Y@CTX$
      5300**DCL       366--IMP-PTR  5326<<ASSIGN   5327>>DOWHILE  5344>>IF       5345>>ASSIGN   5347>>ASSIGN
      5350>>ASSIGN   5356<<ASSIGN   5356>>ASSIGN   5372<<ASSIGN   5372>>ASSIGN
Y@DFR
      5372**LABEL    5352--GOTO
Y@TEMP
      5301**DCL      5369<<ASSIGN   5370<>CALL

PL6.E3A0      #004=KAI$EXTINPTRN File=KAI$INP.:E05TSI                            TUE 07/29/97 23:58 Page:115  
      703        1        /*T***********************************************************/
      704        2        /*T*                                                         */
      705        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      706        4        /*T*                                                         */
      707        5        /*T***********************************************************/
      708        6        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IAD=3,IND=0 */
      709        7
      710        8
      711        9        /* Process KV$USR_EXTINPTRN (extended input translation),                     */
      712       10        /* which for ASYNC means SPCESC (special escape) processing.                  */
      713       11
      714       12        KAI$EXTINPTRN: PROC(PRM_USR_EXTINPTRN) ALTRET;
      715       13        %INCLUDE LCP_6;
      716      204
      717      205        %INCLUDE KV_GLBASM_E;
      718      223 S      %INCLUDE KV_GLBCNS_E;
      719      224        %INCLUDE KV_ASCCHR_E;                   /*  EQU'S FOR ASCII CHR'S             */
      720      361        %KV_INPOPRX_E;
      721      373        %KV_STRTYP_E;
      722      411        %KV_VDH_FNC_E;
      723      431        %KV_USR_FNC_E;
      724      447        %KV_VDH_EVT_ID_E;
      725      453
      726      454 S      %INCLUDE KV$GLB;
      727      455 S      %INCLUDE KV$GLBCTX;
      728      456        %INCLUDE KA$GLB;
      729      597        %INCLUDE KA_GLB;
      730      674        %INCLUDE KA_GLB_E;
      731      752        %KA_HLTOTP_E;
      732      761
      733      762 S      %INCLUDE KV$VDH;
      734      763        %KA$CTX;
      735      887        %KA_MSC;
      736      909        %KA$OTPBFR;
      737      937 S      %INCLUDE KV$USR;
      738      938        %INCLUDE KH$CHN;
      739     1060        %KH$CHN;                                /*  CHANNEL TABLES ITEM DEFINITONS    */
PL6.E3A0      #004=KAI$EXTINPTRN File=KAI$INP.:E05TSI                            TUE 07/29/97 23:58 Page:116  
      740     1184        %INCLUDE KH_CHN;
      741     1224        %KH_CHNDAT;                             /*  CHANNEL TABLES ITEM DEFINITONS    */
      742     1242        %KV$MRD;                                /*  VDH Master real device            */
      743     1289        %KV$MVD;                                /*  VDH Master virtual device         */
      744     1333        %KV$SSN;                                /*  VDH Session                       */
      745     1412        %KV$PTR;                                /*  VDH Pointers, status              */
      746     1455        %KV$VDI;                                /*  VDI (VDH < ->VDH user interface)  */
      747     1526        %KV$ERD;                           /*  VDH extended real device description   */
      748     1610 S      %INCLUDE KV$INT;
      749     1611        %KV$TRNTBL;                             /*  VDH translate table               */
      750     1669    1   DCL KAO$ASNRQSRSMOTP ENTRY(1);
      751     1670    1   DCL KAO$ASNRQSHLTOTP ENTRY(1);
      752     1671        %KV$USR_EXTINPTRN(NAME=PRM_USR_EXTINPTRN,STCLASS=);
      753     1707    2      DO SELECT(ASCBIT(PRM_USR_EXTINPTRN.ORGCHR)
      754     1708    2        & BINBIT(BITBIN(%KV_TRNTBL.INPCHRMSK),8));
      755     1709    2         SELECT (%ASCIIDEL,%ASCIINUL);
      756     1710
      757     1711        /* THIS IS A DEL OR NUL CHARACTER. IF IN PAPER TAPE MODE AND NOT              */
      758     1712        /* DOING A TRANSPARENT READ, IGNORE IT.                                       */
      759     1713
      760     1714    3         IF NOT KV$PTR.INPCNDPND.TRN THEN DO;
      761     1715
      762     1716        /* WE'RE NOT IN TRANSPARENT MODE.                                             */
      763     1717
      764     1718    4            IF (%KV_VDI.HALFDUPLEXPAPERTAPE OR %KV_VDI.FULLDUPLEXPAPERTAPE) THEN DO;
      765     1719
      766     1720        /* WE'RE IN A PAPER TAPE MODE. IGNORE THE CHARACTER.                          */
      767     1721
      768     1722    4               RETURN;
      769     1723    4            END /* IF PAPER TAPE MODE */;
      770     1724    3         END /* IF TRNASPARENT MODE */;
      771     1725    2         SELECT(%ASCIICR);
      772     1726    2         IF (%KA_CTX.HLTOTP.BITT(%KA#HLTOTP_USRX)
      773     1727    3           AND PRM_USR_EXTINPTRN.IMD) THEN DO;
      774     1728
      775     1729        /* THIS IS A CR (CARRIAGE RETURN).                                            */
      776     1730        /* THERE IS A USER OUTPUT HALT IN EFFECT* OTHERWISE IGNORE THE CR.            */
PL6.E3A0      #004=KAI$EXTINPTRN File=KAI$INP.:E05TSI                            TUE 07/29/97 23:58 Page:117  
      777     1731
      778     1732    3            CALL KAO$ASNRQSRSMOTP(%KA#HLTOTP_USRX);
      779     1733    3            RETURN;
      780     1734    3         END;
      781     1735    2         SELECT(%ASCIIACK);
      782     1736
      783     1737        /* THIS IS AN ACK CHARACTER.                                                  */
      784     1738
      785     1739    3         IF KA_DVCFLWCTRCHR(%KV_MRD.DVCFLWCTRALG)~=0 THEN DO;
      786     1740
      787     1741        /* THIS DEVICE SENDS ACK CHARACTERS TO CONTROL THE                            */
      788     1742        /* FLOW OF DATA TO IT. RESUME OUTPUT, AND IGNORE THE CHARACTER.               */
      789     1743
      790     1744    4            IF NOT %KA_CTX.HLTOTP.BITT(%KA#HLTOTP_DVCX) THEN DO;
      791     1745
      792     1746        /* OUTPUT HAS BEEN HALTED, BUT WE DON'T KNOW THAT YET. THE FLOW               */
      793     1747        /* CONTROL CHARACTER HAS BEEN SENT, BUT WE HAVEN'T PROCESSED THE              */
      794     1748        /* OUTPUT INTERRRUPT YET THAT MARKS OUTPUT AS BEING HALTED.                   */
      795     1749        /* WE'VE RECEIVED THE GO-AHEAD CHARACTER (WE GOT IT FAST), SO RESET           */
      796     1750        /* THE BITS THAT ARE ABOUT TO CAUSE US TO HALT.                               */
      797     1751
      798     1752    4               IF %KA_CTX.OTPBFRNXTLOD$ ~= ADDR(NIL) AND
      799     1753    5                 %KA_CTX.OTPBFRNXTLOD$->KA$OTPBFR.HLTOTP.BITT(%KA#HLTOTP_DVCX) THEN DO;
      800     1754
      801     1755        /* THE NEXT BUFFER TO BE IOLD'D IS THE ONE WITH THE HALT BIT.                 */
      802     1756
      803     1757    5                  %KA_CTX.OTPBFRNXTLOD$->KA$OTPBFR.HLTOTP.BITT(%KA#HLTOTP_DVCX) = '0'B;
      804     1758    5               END; ELSE IF %KA_CTX.HLTOTPNXTBFR.BITT(%KA#HLTOTP_DVCX) THEN DO;
      805     1759
      806     1760        /* THE LAST BUFFER IN THE CHAIN IS THE ONE THAT CONTAINED                     */
      807     1761        /* THE FLOW CONTROL CHARACTER.                                                */
      808     1762
      809     1763    5                  %KA_CTX.HLTOTPNXTBFR.BITT(%KA#HLTOTP_DVCX) = '0'B;
      810     1764    5               END /* IF */;
      811     1765    4            END; ELSE DO;
      812     1766
      813     1767        /* OUR OUTPUT STATUS INDICATES WE KNOW WE'RE HALTED.                          */
PL6.E3A0      #004=KAI$EXTINPTRN File=KAI$INP.:E05TSI                            TUE 07/29/97 23:58 Page:118  
      814     1768        /* RESUME OUTPUT.                                                             */
      815     1769
      816     1770    4               CALL KAO$ASNRQSRSMOTP(%KA#HLTOTP_DVCX);
      817     1771    4            END /* IF */;
      818     1772    3            RETURN;
      819     1773    3         END /* IF */;
      820     1774    2      END;                                 /* SELECT                             */
      821     1775        /* We dont know about this character, say we didnt do anything. */
      822     1776
      823     1777    1      ALTRETURN;
      824     1778    1   END KAI$EXTINPTRN;

PL6.E3A0      #004=KAI$EXTINPTRN File=KAI$INP.:E05TSI                            TUE 07/29/97 23:58 Page:119  
--  Include file information  --

   KH_CHN.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   KA_GLB_E.:E05TOU  is referenced.
   KA_GLB.:E05TOU  is referenced.
   KA$GLB.:E05TOU  is referenced.
   KV_ASCCHR_E.:E05TOU  is referenced.
   KV_GLBASM_E.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is referenced.
   KV$USR.:E05TOU  was found in the system file and is referenced.
   KV$SND.:E05TOU  was found in the system file and is never referenced.
   KV$INT.:E05TOU  was found in the system file and is referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KAI$EXTINPTRN.

   Procedure KAI$EXTINPTRN requires 147 words for executable code.
   Procedure KAI$EXTINPTRN requires 6 words of local(AUTO) storage.

    No errors detected in file KAI$INP.:E05TSI    .

PL6.E3A0      #004=KAI$EXTINPTRN File=KAI$INP.:E05TSI                            TUE 07/29/97 23:58 Page:120  

 Object Unit name= KAI$EXTINPTRN                              File name= KAI$INP.:E05TOU
 UTS= JUL 29 '97 23:58:50.08 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none   147     93  KAI$EXTINPTRN
    1  RoData even  none     6      6  KAI$EXTINPTRN

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        1  KAI$EXTINPTRN

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 KAO$ASNRQSRSMOTP
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET
                       nStd      0 X6A_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KA_DVCFLWCTRCHR                  r    KH_CHNHI                         r    KH_CHNLOW
     KV$PTR$                          r    G$ROS$
PL6.E3A0      #004=KAI$EXTINPTRN File=KAI$INP.:E05TSI                            TUE 07/29/97 23:58 Page:121  


      703        1        /*T***********************************************************/
      704        2        /*T*                                                         */
      705        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      706        4        /*T*                                                         */
      707        5        /*T***********************************************************/
      708        6        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IAD=3,IND=0 */
      709        7
      710        8
      711        9        /* Process KV$USR_EXTINPTRN (extended input translation),                     */
      712       10        /* which for ASYNC means SPCESC (special escape) processing.                  */
      713       11
      714       12        KAI$EXTINPTRN: PROC(PRM_USR_EXTINPTRN) ALTRET;

     12   0 000000  D380 0000 0000  xent KAI$EXTINPTRN   LNJ,B5   X6A_AUTO_1
          0 000003       0006 0001                       DC       6,1

      715       13        %INCLUDE LCP_6;
      716      204
      717      205        %INCLUDE KV_GLBASM_E;
      718      223 S      %INCLUDE KV_GLBCNS_E;
      719      224        %INCLUDE KV_ASCCHR_E;                   /*  EQU'S FOR ASCII CHR'S             */
      720      361        %KV_INPOPRX_E;
      721      373        %KV_STRTYP_E;
      722      411        %KV_VDH_FNC_E;
      723      431        %KV_USR_FNC_E;
      724      447        %KV_VDH_EVT_ID_E;
      725      453
      726      454 S      %INCLUDE KV$GLB;
      727      455 S      %INCLUDE KV$GLBCTX;
      728      456        %INCLUDE KA$GLB;
      729      597        %INCLUDE KA_GLB;
      730      674        %INCLUDE KA_GLB_E;
      731      752        %KA_HLTOTP_E;
      732      761
      733      762 S      %INCLUDE KV$VDH;
      734      763        %KA$CTX;
PL6.E3A0      #004=KAI$EXTINPTRN File=KAI$INP.:E05TSI                            TUE 07/29/97 23:58 Page:122  
      735      887        %KA_MSC;
      736      909        %KA$OTPBFR;
      737      937 S      %INCLUDE KV$USR;
      738      938        %INCLUDE KH$CHN;
      739     1060        %KH$CHN;                                /*  CHANNEL TABLES ITEM DEFINITONS    */
      740     1184        %INCLUDE KH_CHN;
      741     1224        %KH_CHNDAT;                             /*  CHANNEL TABLES ITEM DEFINITONS    */
      742     1242        %KV$MRD;                                /*  VDH Master real device            */
      743     1289        %KV$MVD;                                /*  VDH Master virtual device         */
      744     1333        %KV$SSN;                                /*  VDH Session                       */
      745     1412        %KV$PTR;                                /*  VDH Pointers, status              */
      746     1455        %KV$VDI;                                /*  VDI (VDH < ->VDH user interface)  */
      747     1526        %KV$ERD;                           /*  VDH extended real device description   */
      748     1610 S      %INCLUDE KV$INT;
      749     1611        %KV$TRNTBL;                             /*  VDH translate table               */
      750     1669    1   DCL KAO$ASNRQSRSMOTP ENTRY(1);
      751     1670    1   DCL KAO$ASNRQSHLTOTP ENTRY(1);
      752     1671        %KV$USR_EXTINPTRN(NAME=PRM_USR_EXTINPTRN,STCLASS=);
      753     1707    2      DO SELECT(ASCBIT(PRM_USR_EXTINPTRN.ORGCHR)

   1707   0 000005  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 000008  DCC6 0006                            LDB,B5   6,B6
          0 00000A  CCC5 000E                            LDB,B4   14,B5
          0 00000C  E844 001A                            LDR,R6   26,B4
          0 00000E  6008                                 SOL,R6   8
          0 00000F  BCC7 0004                            LDB,B3   @PRM_USR_EXTINPTRN,AUTO
          0 000011  D843 0001                            LDR,R5   1,B3
          0 000013  5008                                 SOL,R5   8
          0 000014  E555                                 AND,R6   R5
          0 000015  E970 0D00                            CMR,R6   3328,IMO
          0 000017  0201 0009                            BL       s:1707+28,PREL
          0 000019  0901 0021                            BE       s:1726,PREL
          0 00001B  E970 7F00                            CMR,R6   32512,IMO
          0 00001D  0981 0072                            BNE      s:1777,PREL
          0 00001F  0F81 0009                            B        s:1714,PREL
          0 000021  6901 0007                            BEZ,R6   s:1714,PREL
          0 000023  E970 0600                            CMR,R6   1536,IMO
PL6.E3A0      #004=KAI$EXTINPTRN File=KAI$INP.:E05TSI                            TUE 07/29/97 23:58 Page:123  
          0 000025  0981 006A                            BNE      s:1777,PREL
          0 000027  0F81 002B                            B        s:1739,PREL

      754     1708    2        & BINBIT(BITBIN(%KV_TRNTBL.INPCHRMSK),8));
      755     1709    2         SELECT (%ASCIIDEL,%ASCIINUL);

      756     1710
      757     1711        /* THIS IS A DEL OR NUL CHARACTER. IF IN PAPER TAPE MODE AND NOT              */
      758     1712        /* DOING A TRANSPARENT READ, IGNORE IT.                                       */
      759     1713
      760     1714    3         IF NOT KV$PTR.INPCNDPND.TRN THEN DO;

   1714   0 000029  89C6 001B                            CMZ      27,B6
          0 00002B  0801 0064                            BAL      s:1777,PREL

      761     1715
      762     1716        /* WE'RE NOT IN TRANSPARENT MODE.                                             */
      763     1717
      764     1718    4            IF (%KV_VDI.HALFDUPLEXPAPERTAPE OR %KV_VDI.FULLDUPLEXPAPERTAPE) THEN DO;

   1718   0 00002D  AC86                                 LDB,B2   ,B6
          0 00002E  82C2 0019                            LB,'0002'X        25,B2
          0 000030       0002
          0 000031  0501 0006                            BBT      s:1722,PREL
          0 000033  82C2 0019                            LB,'0020'X        25,B2
          0 000035       0020
          0 000036  0581 0059                            BBF      s:1777,PREL

      765     1719
      766     1720        /* WE'RE IN A PAPER TAPE MODE. IGNORE THE CHARACTER.                          */
      767     1721
      768     1722    4               RETURN;

   1722   0 000038  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      769     1723    4            END /* IF PAPER TAPE MODE */;
      770     1724    3         END /* IF TRNASPARENT MODE */;
PL6.E3A0      #004=KAI$EXTINPTRN File=KAI$INP.:E05TSI                            TUE 07/29/97 23:58 Page:124  
      771     1725    2         SELECT(%ASCIICR);

      772     1726    2         IF (%KA_CTX.HLTOTP.BITT(%KA#HLTOTP_USRX)

   1726   0 00003B  AC86                                 LDB,B2   ,B6
          0 00003C  9CC2 0002                            LDB,B1   2,B2
          0 00003E  82C1 001C                            LB,'4000'X        28,B1
          0 000040       4000
          0 000041  0581 004E                            BBF      s:1777,PREL
          0 000043  8283                                 LB,'0040'X        ,B3
          0 000044       0040
          0 000045  0581 004A                            BBF      s:1777,PREL

      773     1727    3           AND PRM_USR_EXTINPTRN.IMD) THEN DO;

      774     1728
      775     1729        /* THIS IS A CR (CARRIAGE RETURN).                                            */
      776     1730        /* THERE IS A USER OUTPUT HALT IN EFFECT* OTHERWISE IGNORE THE CR.            */
      777     1731
      778     1732    3            CALL KAO$ASNRQSRSMOTP(%KA#HLTOTP_USRX);

   1732   0 000047  BB80 0000 0001  01                   LAB,B3   +1
          0 00004A  CBF0 0100                            LAB,B4   256,IMO
          0 00004C  E380 0000 0000  xent                 LNJ,B6   KAO$ASNRQSRSMOTP
          0 00004F       0001                            DC       s:1733,PREL

      779     1733    3            RETURN;

   1733   0 000050  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      780     1734    3         END;
      781     1735    2         SELECT(%ASCIIACK);

      782     1736
      783     1737        /* THIS IS AN ACK CHARACTER.                                                  */
      784     1738
      785     1739    3         IF KA_DVCFLWCTRCHR(%KV_MRD.DVCFLWCTRALG)~=0 THEN DO;
PL6.E3A0      #004=KAI$EXTINPTRN File=KAI$INP.:E05TSI                            TUE 07/29/97 23:58 Page:125  

   1739   0 000053  ACC6 0008                            LDB,B2   8,B6
          0 000055  B842 0015                            LDR,R3   21,B2
          0 000057  B570 00FF                            AND,R3   255,IMO
          0 000059  3001                                 SOL,R3   1
          0 00005A  E2B0 0000 0000  xsym                 LLH,R6   KA_DVCFLWCTRCHR,R3
          0 00005D  6901 0032                            BEZ,R6   s:1777,PREL

      786     1740
      787     1741        /* THIS DEVICE SENDS ACK CHARACTERS TO CONTROL THE                            */
      788     1742        /* FLOW OF DATA TO IT. RESUME OUTPUT, AND IGNORE THE CHARACTER.               */
      789     1743
      790     1744    4            IF NOT %KA_CTX.HLTOTP.BITT(%KA#HLTOTP_DVCX) THEN DO;

   1744   0 00005F  9C86                                 LDB,B1   ,B6
          0 000060  ECC1 0002                            LDB,B6   2,B1
          0 000062  89C6 001C                            CMZ      28,B6
          0 000064  0801 001F                            BAL      s:1770,PREL

      791     1745
      792     1746        /* OUTPUT HAS BEEN HALTED, BUT WE DON'T KNOW THAT YET. THE FLOW               */
      793     1747        /* CONTROL CHARACTER HAS BEEN SENT, BUT WE HAVEN'T PROCESSED THE              */
      794     1748        /* OUTPUT INTERRRUPT YET THAT MARKS OUTPUT AS BEING HALTED.                   */
      795     1749        /* WE'VE RECEIVED THE GO-AHEAD CHARACTER (WE GOT IT FAST), SO RESET           */
      796     1750        /* THE BITS THAT ARE ABOUT TO CAUSE US TO HALT.                               */
      797     1751
      798     1752    4               IF %KA_CTX.OTPBFRNXTLOD$ ~= ADDR(NIL) AND

   1752   0 000066  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 000069  DC86                                 LDB,B5   ,B6
          0 00006A  CCC5 0002                            LDB,B4   2,B5
          0 00006C  8DC4 0004                            CMN      4,B4
          0 00006E  0901 000C                            BE       s:1758+2,PREL
          0 000070  ACC4 0004                            LDB,B2   4,B4
          0 000072  89C2 0002                            CMZ      2,B2
          0 000074  0881 0006                            BAGE     s:1758+2,PREL

PL6.E3A0      #004=KAI$EXTINPTRN File=KAI$INP.:E05TSI                            TUE 07/29/97 23:58 Page:126  
      799     1753    5                %KA_CTX.OTPBFRNXTLOD$->KA$OTPBFR.HLTOTP.BITT(%KA#HLTOTP_DVCX) THEN DO;

      800     1754
      801     1755        /* THE NEXT BUFFER TO BE IOLD'D IS THE ONE WITH THE HALT BIT.                 */
      802     1756
      803     1757    5                 %KA_CTX.OTPBFRNXTLOD$->KA$OTPBFR.HLTOTP.BITT(%KA#HLTOTP_DVCX) = '0'B;

   1757   0 000076  8842 0002                            LBF,'8000'X       2,B2
   1757   0 000078       8000

      804     1758    5               END; ELSE IF %KA_CTX.HLTOTPNXTBFR.BITT(%KA#HLTOTP_DVCX) THEN DO;

   1758   0 000079  0F81 0013                            B        s:1772,PREL

   1758   0 00007B  89C4 001D                            CMZ      29,B4
          0 00007D  0881 000F                            BAGE     s:1772,PREL

      805     1759
      806     1760        /* THE LAST BUFFER IN THE CHAIN IS THE ONE THAT CONTAINED                     */
      807     1761        /* THE FLOW CONTROL CHARACTER.                                                */
      808     1762
      809     1763    5                  %KA_CTX.HLTOTPNXTBFR.BITT(%KA#HLTOTP_DVCX) = '0'B;

   1763   0 00007F  8844 001D                            LBF,'8000'X       29,B4
   1763   0 000081       8000

      810     1764    5               END /* IF */;

      811     1765    4            END; ELSE DO;

   1765   0 000082  0F81 000A                            B        s:1772,PREL

      812     1766
      813     1767        /* OUR OUTPUT STATUS INDICATES WE KNOW WE'RE HALTED.                          */
      814     1768        /* RESUME OUTPUT.                                                             */
      815     1769
      816     1770    4               CALL KAO$ASNRQSRSMOTP(%KA#HLTOTP_DVCX);
PL6.E3A0      #004=KAI$EXTINPTRN File=KAI$INP.:E05TSI                            TUE 07/29/97 23:58 Page:127  

   1770   0 000084  BB80 0000 0004  01                   LAB,B3   +4
          0 000087  CBF0 0100                            LAB,B4   256,IMO
          0 000089  E380 0000 0000  xent                 LNJ,B6   KAO$ASNRQSRSMOTP
          0 00008C       0001                            DC       s:1772,PREL

      817     1771    4            END /* IF */;

      818     1772    3            RETURN;

   1772   0 00008D  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      819     1773    3         END /* IF */;
      820     1774    2      END;                                 /* SELECT                             */

      821     1775        /* We dont know about this character, say we didnt do anything. */
      822     1776
      823     1777    1      ALTRETURN;

   1777   0 000090  C380 0000 0000  xent                 LNJ,B4   X6A_AALT
      824     1778    1   END KAI$EXTINPTRN;

PL6.E3A0      #004=KAI$EXTINPTRN File=KAI$INP.:E05TSI                            TUE 07/29/97 23:58 Page:128  
--  Include file information  --

   KH_CHN.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   KA_GLB_E.:E05TOU  is referenced.
   KA_GLB.:E05TOU  is referenced.
   KA$GLB.:E05TOU  is referenced.
   KV_ASCCHR_E.:E05TOU  is referenced.
   KV_GLBASM_E.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is referenced.
   KV$USR.:E05TOU  was found in the system file and is referenced.
   KV$SND.:E05TOU  was found in the system file and is never referenced.
   KV$INT.:E05TOU  was found in the system file and is referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KAI$EXTINPTRN.
PL6.E3A0      #004=KAI$EXTINPTRN File=KAI$INP.:E05TSI                            TUE 07/29/97 23:58 Page:129  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @PRM_USR_EXTINPTRN        *0-0-0/w STRC(32)    r     1 PRM_USR_EXTINPTRN

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN(8)     r     1 KA_DVCFLWCTRCHR(0:3)
     0-0-0/w PTR         r     1 KV$PTR$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(512)   r     1 KA$CTX                     0-0-0/w STRC(64)    r     1 KA$OTPBFR
     0-0-0/w STRC(512)   r     1 KV$MRD                     0-0-0/w STRC(512)   r     1 KV$MVD
     0-0-0/w STRC(480)   r     1 KV$PTR                     0-0-0/w STRC(499)   r     1 KV$TRNTBL
     0-0-0/w STRC(512)   r     1 KV$VDI


   Procedure KAI$EXTINPTRN requires 147 words for executable code.
   Procedure KAI$EXTINPTRN requires 6 words of local(AUTO) storage.

    No errors detected in file KAI$INP.:E05TSI    .
PL6.E3A0      #004=KAI$EXTINPTRN File=KAI$INP.:E05TSI                            TUE 07/29/97 23:58 Page:130  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=KAI$EXTINPTRN File=KAI$INP.:E05TSI                            TUE 07/29/97 23:58 Page:131  
          MINI XREF LISTING

KA$CTX.HLTOTP
       877**DCL       879--REDEF
KA$CTX.HLTOTP.BITT
       879**DCL      1726>>IF       1744>>IF
KA$CTX.HLTOTPNXTBFR
       881**DCL       882--REDEF
KA$CTX.HLTOTPNXTBFR.BITT
       882**DCL      1758>>IF       1763<<ASSIGN
KA$CTX.OTPBFRNXTLOD$
       789**DCL      1752>>IF       1752>>IF       1757>>ASSIGN
KA$OTPBFR.HLTOTP
       932**DCL       933--REDEF
KA$OTPBFR.HLTOTP.BITT
       932**DCL      1752>>IF       1757<<ASSIGN
KAO$ASNRQSRSMOTP
      1669**DCL-ENT  1732--CALL     1770--CALL
KA_DVCFLWCTRCHR
       905**DCL      1739>>IF
KH$CHN.TERMID.TERM
      1171**DCL      1180--REDEF
KH_CHNHI
      1237**DCL      1238--REDEF
KH_CHNLOW
      1238**DCL      1239--REDEF
KV$ERD.EXTSRD_CHR
      1604**DCL      1604--REDEF    1605--REDEF
KV$MRD.DVCFLWCTRALG
      1268**DCL      1739>>IF
KV$MVD.TRNTBL$
      1313**DCL      1707>>DOSELCT
KV$PTR.INPCNDPND
      1439**DCL      1448--REDEF    1452--REDEF
PL6.E3A0      #004=KAI$EXTINPTRN File=KAI$INP.:E05TSI                            TUE 07/29/97 23:58 Page:132  
KV$PTR.INPCNDPND.TRN
      1443**DCL      1714>>IF
KV$PTR.LINLST$
      1435**DCL      1436--REDEF
KV$PTR.MRD$
      1434**DCL      1739>>IF
KV$PTR.MVD$
      1434**DCL      1707>>DOSELCT
KV$PTR.VDI$
      1433**DCL      1718>>IF       1718>>IF       1726>>IF       1744>>IF       1752>>IF       1752>>IF
      1757>>ASSIGN   1758>>IF       1763>>ASSIGN
KV$PTR$
      1427**DCL      1433--IMP-PTR  1707>>DOSELCT  1714>>IF       1718>>IF       1718>>IF       1726>>IF
      1739>>IF       1744>>IF       1752>>IF       1752>>IF       1757>>ASSIGN   1758>>IF       1763>>ASSIGN
KV$SSN.REDRSPCNT
      1362**DCL      1363--REDEF
KV$TRNTBL.INPCHRMSK
      1661**DCL      1707>>DOSELCT
KV$TRNTBL.OTPESCCHR
      1662**DCL      1662--REDEF
KV$VDI.FULLDUPLEXPAPERTAPE
      1511**DCL      1718>>IF
KV$VDI.HALFDUPLEXPAPERTAPE
      1512**DCL      1718>>IF
KV$VDI.USRCTX$
      1476**DCL      1726>>IF       1744>>IF       1752>>IF       1752>>IF       1757>>ASSIGN   1758>>IF
      1763>>ASSIGN
PRM_USR_EXTINPTRN
      1698**DCL        12--PROC
PRM_USR_EXTINPTRN.IMD
      1704**DCL      1726>>IF
PRM_USR_EXTINPTRN.ORGCHR
      1705**DCL      1707>>DOSELCT
