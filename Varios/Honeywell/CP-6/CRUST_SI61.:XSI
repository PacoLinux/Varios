/*M* RUCMPR - CoMPaRe two Run Units and see what has changed. */
/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
/*T*                                                         */
/*T***********************************************************/
/*X* DMR,PLM=5,IND=3,CTI=3,SDI=3,MCL=10,CSI=0,ECI=0 */
                                   /*
                                        Author: D.R Calkins, LADC
                                        Date: 7/89
                                                                  */
RUCMPR: PROC MAIN;
 
%INCLUDE CP_6;
%INCLUDE CRUST_C61;
%INCLUDE B$JIT;
 
%F$DCB;
 
DCL B$JIT$ PTR SYMREF;
%FPT_YC(CMD=COMMAND,
        LINK=YES,
        NOERR=YES);
 
DCL COMMAND CHAR(80) STATIC INIT (' ');
 
%FPT_TRAP (FPTN=FPT_TRAP,
           STCLASS=CONSTANT SYMDEF,
           ERRORS=TRAP_PROC,
            MEMORY=TRAP);
 
DCL TRAP_PROC ENTRY ASYNC;
DCL READ_FILE ENTRY(2);
DCL CHANGE ENTRY(3);
DCL PRINT  ENTRY(4);
 
 
DCL M$SI DCB;
DCL M$UI DCB;
DCL M$LO DCB;
DCL M$DO DCB;
 
DCL M$SI$ PTR;
DCL M$UI$ PTR;
 
%FPT_WRITE(FPTN=FILE_ERR,
           DCB=M$DO,
           BUF=ERR_MSG);
 
DCL ERR_MSG CHAR(0) STATIC INIT (
'COMPARING, as a concept, must have a choice of 2 items ');
 
%FPT_EXIT(FPTN=XXX,STEPCC=4);
 
 
%FPT_OPEN(FPTN=SI_OPEN,
          ASN=FILE,
          DCB=M$SI);
 
%FPT_OPEN(FPTN=UI_OPEN,
          ASN=FILE,
          DCB=M$UI);
 
%FPT_OPEN(FPTN=LO_OPEN,
          CTG = YES,
          DCB=M$LO);
 
%FPT_OPEN(DCB = M$SI,
          FPTN=OPEN_SI,
          ASN=FILE,
          FUN=IN,
          NAME=SI_NAME);
 
%FPT_OPEN(DCB = M$UI,
          FPTN=OPEN_UI,
          ASN=FILE,
          FUN=IN,
          NAME=UI_NAME);
 
%VLP_NAME(FPTN=SI_NAME,
          NAME='*SI');
 
%VLP_NAME(FPTN=UI_NAME,
          NAME='*UI');
 
%FPT_CLOSE(FPTN=CLOSE_SI,
           DCB=M$SI);
 
%FPT_CLOSE(FPTN=CLOSE_UI,
           DCB=M$UI);
 
%FPT_CLOSE(FPTN=CLOSE_LO,
           DCB=M$LO);
 
%FPT_READ(FPTN=READ_SI,
          DCB=M$SI,
          BUF=TEMP_LINE,
          STRPVFC=YES,
          WAIT=YES);
 
%FPT_READ(FPTN=READ_UI,
          DCB=M$UI,
          BUF=TEMP_LINE,
          STRPVFC=YES,
          WAIT=YES);
 
DCL TEMP_LINE CHAR(132) STATIC;
DCL TEMP$ PTR STATIC SYMDEF INIT (ADDR(TEMP_LINE));
DCL BREAK_DOWN BIT(1);
 
%TABLE (FPTN = SI_TABLE,STCLASS="STATIC AREADEF(DS3SID)");
%TABLE (FPTN=UI_TABLE,STCLASS="STATIC AREADEF(DS4SID)");
%CHANGES (FPTN=CH_TABLE,STCLASS="STATIC AREADEF(DS5SID)");
 
/*   PROGRAM BEGINS HERE   */
 
     BREAK_DOWN = (B$JIT.CCARS ~= B$JIT.CCDISP) ;
 
     CALL M$OPEN (SI_OPEN) ALTRET(ERR);
     CALL M$OPEN (UI_OPEN) ALTRET(ERR);
     CALL M$OPEN(LO_OPEN);
 
     DO WHILE('0'B);
ERR:    ;
        CALL M$WRITE(FILE_ERR);
        CALL M$EXIT (XXX);
        END;
 
     M$SI$ = DCBADDR(DCBNUM(M$SI));
     M$UI$ = DCBADDR(DCBNUM(M$UI));
 
/*  MAP the two run units, if necessary  */
     IF (SUBSTR(M$SI$->F$DCB.TYPE#,0,1) = 'R')
     THEN DO;
        CALL M$CLOSE (CLOSE_SI);
        CALL CONCAT(COMMAND,
           'MAP ',
           SUBSTR(M$SI$->F$DCB.NAME#.C,0,M$SI$->F$DCB.NAME#.L),
           '.',M$SI$->F$DCB.ACCT#,
           ' OVER *SI');
        CALL M$YC (FPT_YC);
        CALL M$OPEN(OPEN_SI);
        END;
 
     IF (SUBSTR(M$UI$->F$DCB.TYPE#,0,1) = 'R')
     THEN DO;
        CALL M$CLOSE (CLOSE_UI);
        CALL CONCAT(COMMAND,
           'MAP ',
           SUBSTR(M$UI$->F$DCB.NAME#.C,0,M$UI$->F$DCB.NAME#.L),
           '.',M$UI$->F$DCB.ACCT#,
           ' OVER *UI');
        CALL M$YC (FPT_YC);
        CALL M$OPEN(OPEN_UI);
        END;
 
 
/* This call to M$TRAP sets up TRAP_PROC to be called whenever we
get a MEMORY FAULT.  See DESC under TRAP_PROC for a description. */
     CALL M$TRAP(FPT_TRAP);
 
/* READ each file into program's tables */
     CALL READ_FILE (READ_SI,SI_TABLE);
     CALL READ_FILE (READ_UI,UI_TABLE);
 
/* COMPARE the two tables */
     CALL CHANGE (SI_TABLE,UI_TABLE,CH_TABLE);
 
/*  Print the differences found  */
     CALL PRINT  (SI_TABLE,UI_TABLE,CH_TABLE,BREAK_DOWN);
 
 
/* CLOSE FILES */
     CALL M$CLOSE(CLOSE_SI);
     CALL M$CLOSE(CLOSE_UI);
     IF (DCBADDR(DCBNUM(M$LO))->F$DCB.ASN#=1)
     THEN CALL M$CLOSE(CLOSE_LO);
END;
