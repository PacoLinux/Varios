VERSION E05

PL6.E3A0      #001=ITR$READ File=ITR$READ.:E05TSI                                TUE 07/29/97 23:07 Page:1    
        1        1        /*M*     TIGR read routine */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /**/
        8        8        /*X*/
        9        9        ITR$READ: PROC (BUFFER_VEC,NCHAR) ALTRET;
       10       10        /**/
       11       11    1   DCL NCHAR SBIN(36);                     /* NUMBER CHAR READ                   */
       12       12    1   DCL BUFFER_VEC BIT(72) ALIGNED;        /* VECTOR FRAMING BUFFER              */
       13       13    1   DCL 1 BUF_VEC REDEF BUFFER_VEC,
       14       14    1         2 BOUND UBIN(20) UNAL,
       15       15    1         2 * BIT(16) UNAL,
       16       16    1         2 PTR$ PTR;
       17       17        /**/
       18       18        /*  AUTOMATIC  */
       19       19        /**/
       20       20    1   DCL ARS SBIN WORD;
       21       21    1   DCL I SBIN;
       22       22    1   DCL J SBIN;
       23       23    1   DCL SAVEOUT SBIN WORD;
       24       24    1   DCL 1 READ_VEC,
       25       25    1         2 BOUND UBIN(20) UNAL,
       26       26    1         2 * BIT(16) UNAL,
       27       27    1         2 PTR$ PTR;
       28       28        /**/
       29       29        /*  BASED  */
       30       30        /**/
       31       31    1   DCL IT$TEXT CHAR(80) BASED;
       32       32    1   DCL CHAR$1 CHAR(1) BASED;
       33       33        /**/
       34       34        /*  ENTRY DCLS  */
       35       35        /**/
       36       36    1   DCL ITQ$READ ENTRY(2) ALTRET;
       37       37    1   DCL ITQ$WRITE ENTRY(2);
PL6.E3A0      #001=ITR$READ File=ITR$READ.:E05TSI                                TUE 07/29/97 23:07 Page:2    
       38       38        /**/
       39       39        /*  CONSTANT  */
       40       40        /**/
       41       41    1   DCL IT_CRLF BIT(36) SYMREF /*INIT('015015015012'O)*/;
                41            /* CR CR CR LF               */
       42       42    1   DCL TIGRHERE(0:2) BIT(36) ALIGNED SYMREF;
       43       43    1   DCL TIGR_FIRST BIT(1) ALIGNED SYMREF;
       44       44    1   DCL TIGRPROMPT BIT(36) ALIGNED SYMREF;
       45       45        /**/
       46       46        /*  SYMREFS  */
       47       47        /**/
       48       48    1   DCL IT_INDEV UBIN WORD SYMREF;
       49       49    1   DCL IT_OUTDEV SBIN WORD SYMREF;
       50       50    1   DCL IT_ECHODEV UBIN WORD SYMREF;
       51       51    1   DCL IT_MINIQ_ME UBIN WORD SYMREF;
       52       52    1   DCL TIGR_BUF CHAR(80) SYMREF;
       53       53        %EJECT;
PL6.E3A0      #001=ITR$READ File=ITR$READ.:E05TSI                                TUE 07/29/97 23:07 Page:3    
       54       54        /**/
       55       55    1           READ_VEC = BUFFER_VEC;
       56       56    1           NCHAR = 0;
       57       57        /**/
       58       58    1   READ_CMD:
       59       59    2           IF (IT_INDEV = IT_MINIQ_ME) THEN DO; /* WRITE PROMPT ON CONSOLE READS */
       60       60    2              SAVEOUT = IT_OUTDEV;
       61       61    2              IT_OUTDEV = IT_MINIQ_ME;
       62       62    3              IF TIGR_FIRST THEN DO;
       63       63    3                 TIGR_FIRST = '0'B;
       64       64    3                 CALL ITQ$WRITE (ADDR(TIGRHERE),3);
       65       65    3                 END;
       66       66    2              CALL ITQ$WRITE(ADDR(TIGRPROMPT),1);
       67       67    2              IT_OUTDEV = SAVEOUT;
       68       68    2              END;
       69       69        /**/
       70       70    1           TIGR_BUF = 'OUTOFCARDS';
       71       71        /**/
       72       72    1           SAVEOUT = IT_OUTDEV;
       73       73    1           IT_OUTDEV = IT_ECHODEV;
       74       74        /**/
       75       75    1           CALL ITQ$READ(ADDR(TIGR_BUF),ARS) ALTRET (READ_ERR);
       76       76    1           CALL EDIT_INPUT (TIGR_BUF, ARS);
       77       77        /**/
       78       78    1           IT_OUTDEV = SAVEOUT;
       79       79        /**/
       80       80    2           IF (TIGR_BUF = 'OUTOFCARDS') THEN DO; /* HE LEFT OUT A 'READ ME'      */
       81       81    2              IT_INDEV = IT_MINIQ_ME;
       82       82    2              RETURN;
       83       83    2              END;
       84       84        /**/
       85       85    1           IF (TIGR_BUF = '!EOD') THEN     /* AARDVARK SAYS THATS ALL            */
       86       86    1              TIGR_BUF = 'END';
       87       87    1           CALL INSERT (TIGR_BUF,ARS,80-ARS,' ');
       88       88    1           CALL INDEX(I,BINASC(0),TIGR_BUF) ALTRET(NO_NULL);
       89       89    1           CALL INSERT(TIGR_BUF,I,,' ');
       90       90    1   NO_NULL:;
PL6.E3A0      #001=ITR$READ File=ITR$READ.:E05TSI                                TUE 07/29/97 23:07 Page:4    
       91       91    1           IT_OUTDEV = -1;                 /* WRITE TO PATCH FILE                */
       92       92    1           CALL ITQ$WRITE (ADDR(TIGR_BUF),20);
       93       93    1           IT_OUTDEV = SAVEOUT;
       94       94        /**/
       95       95    1           READ_VEC.PTR$ -> IT$TEXT = TIGR_BUF;
       96       96    1           NCHAR = NCHAR+ARS;
       97       97        /**/
       98       98    1           CALL INDEX(I,';',SUBSTR(READ_VEC.PTR$ -> IT$TEXT,0,ARS)) ALTRET (READ_RET);
       99       99    1           CALL INSERT(READ_VEC.PTR$ -> IT$TEXT,I,1,' ');
      100      100    1           READ_VEC.BOUND = READ_VEC.BOUND - ARS;
      101      101        /**/
      102      102    1           IF (READ_VEC.BOUND < 80) THEN ALTRETURN;
      103      103        /**/
      104      104    1           READ_VEC.PTR$ = PINCRC(READ_VEC.PTR$,ARS);
      105      105    1           GOTO READ_CMD;
      106      106        /**/
      107      107    1   READ_RET:
      108      108    1           RETURN;
      109      109        /**/
      110      110    1   READ_ERR:
      111      111    1           ALTRETURN;
      112      112        %EJECT;
PL6.E3A0      #001=ITR$READ File=ITR$READ.:E05TSI                                TUE 07/29/97 23:07 Page:5    
      113      113        /**/
      114      114    1   ITR$WRITE: ENTRY(BUFFER_VEC,NCHAR) ALTRET;
      115      115        /**/
      116      116    1           IF (IT_OUTDEV = IT_MINIQ_ME) THEN CALL ITQ$WRITE(ADDR(IT_CRLF),1);
      117      117        /**/
      118      118    1           ARS = NCHAR/4;
      119      119    1           I = MOD(NCHAR,4);
      120      120    2           IF (I > 0) THEN DO J = 0 TO 3-I;
      121      121    2              PINCRC(BUF_VEC.PTR$,NCHAR+J) -> CHAR$1 = ' ';
      122      122    2              END;
      123      123    1           ARS = ARS + 1;
      124      124    1           CALL ITQ$WRITE(BUF_VEC.PTR$,ARS);
      125      125    1           RETURN;
      126      126        %EJECT;
PL6.E3A0      #001=ITR$READ File=ITR$READ.:E05TSI                                TUE 07/29/97 23:07 Page:6    
      127      127    1   EDIT_INPUT: PROC(BUF,ARS);
      128      128        /* Edits a console input string */
      129      129        /* (any character followed by DEL or BS is deleted) */
      130      130        /**/
      131      131    2   DCL  BUF CHAR(80);
      132      132    2   DCL ARS SBIN WORD;
      133      133        /**/
      134      134    2   DCL BDEL BIT(9) CALIGNED CONSTANT INIT('177'O); /* ASCII for DEL                */
      135      135    2   DCL DEL REDEF BDEL CHAR(1);
      136      136    2   DCL BBS BIT(9) CALIGNED CONSTANT INIT('010'O); /* ASCII for BS                  */
      137      137    2   DCL BS REDEF BBS CHAR(1);
      138      138    2   DCL CH CHAR(1);
      139      139    2   DCL I SBIN WORD;
      140      140    2   DCL J SBIN WORD;
      141      141        /**/
      142      142    2           I=0;
      143      143    3           DO J=0 TO ARS-1;
      144      144    3              CH=SUBSTR(BUF,I,1);
      145      145    4              IF CH=DEL OR CH=BS THEN DO;
      146      146    4                 IF I=0 THEN SUBSTR(BUF,0)=SUBSTR(BUF,1);
      147      147    5                 ELSE DO;
      148      148    5                    SUBSTR(BUF,I-1)=SUBSTR(BUF,I+1);
      149      149    5                    I=I-1;
      150      150    5                    END;                   /* ELSE                               */
      151      151    4                 END;                      /*THEN                                */
      152      152    3              ELSE I=I+1;
      153      153    3              END;                         /* DO                                 */
      154      154    2           RETURN;
      155      155    2   END EDIT_INPUT;
      156      156
      157      157    1   END ITR$READ;

PL6.E3A0      #001=ITR$READ File=ITR$READ.:E05TSI                                TUE 07/29/97 23:07 Page:7    
      No diagnostics issued in procedure ITR$READ.

   Procedure ITR$READ requires 241 words for executable code.
   Procedure ITR$READ requires 22 words of local(AUTO) storage.

    No errors detected in file ITR$READ.:E05TSI    .

PL6.E3A0      #001=ITR$READ File=ITR$READ.:E05TSI                                TUE 07/29/97 23:07 Page:8    

 Object Unit name= ITR$READ                                   File name= ITR$READ.:E05TOU
 UTS= JUL 29 '97 23:07:41.92 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      7      7  ITR$READ
    1   Proc  even  none   241    361  ITR$READ
    2  RoData even  none    10     12  ITR$READ

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        2  ITR$READ
     1    225          yes     yes      Std        2  ITR$WRITE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 ITQ$WRITE
 yes     yes           Std       2 ITQ$READ
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #001=ITR$READ File=ITR$READ.:E05TSI                                TUE 07/29/97 23:07 Page:9    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     IT_CRLF                               TIGRHERE                              TIGR_FIRST
     TIGRPROMPT                            IT_INDEV                              IT_OUTDEV
     IT_ECHODEV                            IT_MINIQ_ME                           TIGR_BUF
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=ITR$READ File=ITR$READ.:E05TSI                                TUE 07/29/97 23:07 Page:10   


        1        1        /*M*     TIGR read routine */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /**/
        8        8        /*X*/
        9        9        ITR$READ: PROC (BUFFER_VEC,NCHAR) ALTRET;

      9  1 000000   000000 700200 xent  ITR$READ     TSX0  ! X66_AUTO_2
         1 000001   000026 000002                    ZERO    22,2

       10       10        /**/
       11       11    1   DCL NCHAR SBIN(36);                     /* NUMBER CHAR READ                   */
       12       12    1   DCL BUFFER_VEC BIT(72) ALIGNED;        /* VECTOR FRAMING BUFFER              */
       13       13    1   DCL 1 BUF_VEC REDEF BUFFER_VEC,
       14       14    1         2 BOUND UBIN(20) UNAL,
       15       15    1         2 * BIT(16) UNAL,
       16       16    1         2 PTR$ PTR;
       17       17        /**/
       18       18        /*  AUTOMATIC  */
       19       19        /**/
       20       20    1   DCL ARS SBIN WORD;
       21       21    1   DCL I SBIN;
       22       22    1   DCL J SBIN;
       23       23    1   DCL SAVEOUT SBIN WORD;
       24       24    1   DCL 1 READ_VEC,
       25       25    1         2 BOUND UBIN(20) UNAL,
       26       26    1         2 * BIT(16) UNAL,
       27       27    1         2 PTR$ PTR;
       28       28        /**/
       29       29        /*  BASED  */
       30       30        /**/
       31       31    1   DCL IT$TEXT CHAR(80) BASED;
       32       32    1   DCL CHAR$1 CHAR(1) BASED;
PL6.E3A0      #001=ITR$READ File=ITR$READ.:E05TSI                                TUE 07/29/97 23:07 Page:11   
       33       33        /**/
       34       34        /*  ENTRY DCLS  */
       35       35        /**/
       36       36    1   DCL ITQ$READ ENTRY(2) ALTRET;
       37       37    1   DCL ITQ$WRITE ENTRY(2);
       38       38        /**/
       39       39        /*  CONSTANT  */
       40       40        /**/
       41       41    1   DCL IT_CRLF BIT(36) SYMREF /*INIT('015015015012'O)*/;
                41            /* CR CR CR LF               */
       42       42    1   DCL TIGRHERE(0:2) BIT(36) ALIGNED SYMREF;
       43       43    1   DCL TIGR_FIRST BIT(1) ALIGNED SYMREF;
       44       44    1   DCL TIGRPROMPT BIT(36) ALIGNED SYMREF;
       45       45        /**/
       46       46        /*  SYMREFS  */
       47       47        /**/
       48       48    1   DCL IT_INDEV UBIN WORD SYMREF;
       49       49    1   DCL IT_OUTDEV SBIN WORD SYMREF;
       50       50    1   DCL IT_ECHODEV UBIN WORD SYMREF;
       51       51    1   DCL IT_MINIQ_ME UBIN WORD SYMREF;
       52       52    1   DCL TIGR_BUF CHAR(80) SYMREF;
       53       53        %EJECT;
PL6.E3A0      #001=ITR$READ File=ITR$READ.:E05TSI                                TUE 07/29/97 23:07 Page:12   
       54       54        /**/
       55       55    1           READ_VEC = BUFFER_VEC;

     55  1 000002   200003 470500                    LDP0    @BUFFER_VEC,,AUTO
         1 000003   000100 100500                    MLR     fill='000'O
         1 000004   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         1 000005   200011 000010                    ADSC9   READ_VEC,,AUTO           cn=0,n=8

       56       56    1           NCHAR = 0;

     56  1 000006   200004 471500                    LDP1    @NCHAR,,AUTO
         1 000007   100000 450100                    STZ     0,,PR1

       57       57        /**/
       58       58    1   READ_CMD:
       59       59    2           IF (IT_INDEV = IT_MINIQ_ME) THEN DO; /* WRITE PROMPT ON CONSOLE READS */

     59  1 000010   000000 236000 xsym  READ_CMD     LDQ     IT_INDEV
         1 000011   000000 116000 xsym               CMPQ    IT_MINIQ_ME
         1 000012   000050 601000 1                  TNZ     s:70

       60       60    2              SAVEOUT = IT_OUTDEV;

     60  1 000013   000000 235000 xsym               LDA     IT_OUTDEV
         1 000014   200010 755100                    STA     SAVEOUT,,AUTO

       61       61    2              IT_OUTDEV = IT_MINIQ_ME;

     61  1 000015   000000 235000 xsym               LDA     IT_MINIQ_ME
         1 000016   000000 755000 xsym               STA     IT_OUTDEV

       62       62    3              IF TIGR_FIRST THEN DO;

     62  1 000017   000000 234000 xsym               SZN     TIGR_FIRST
         1 000020   000034 605000 1                  TPL     s:66

       63       63    3                 TIGR_FIRST = '0'B;
PL6.E3A0      #001=ITR$READ File=ITR$READ.:E05TSI                                TUE 07/29/97 23:07 Page:13   

     63  1 000021   000000 450000 xsym               STZ     TIGR_FIRST

       64       64    3                 CALL ITQ$WRITE (ADDR(TIGRHERE),3);

     64  1 000022   000000 236000 2                  LDQ     0
         1 000023   200022 756100                    STQ     J+1,,AUTO
         1 000024   000001 236000 2                  LDQ     1
         1 000025   200025 756100                    STQ     J+4,,AUTO
         1 000026   200022 630500                    EPPR0   J+1,,AUTO
         1 000027   200024 450500                    STP0    J+3,,AUTO
         1 000030   200024 630500                    EPPR0   J+3,,AUTO
         1 000031   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000032   000000 701000 xent               TSX1    ITQ$WRITE
         1 000033   000000 011000                    NOP     0

       65       65    3                 END;

       66       66    2              CALL ITQ$WRITE(ADDR(TIGRPROMPT),1);

     66  1 000034   000002 236000 2                  LDQ     2
         1 000035   200022 756100                    STQ     J+1,,AUTO
         1 000036   000003 236000 2                  LDQ     3
         1 000037   200025 756100                    STQ     J+4,,AUTO
         1 000040   200022 630500                    EPPR0   J+1,,AUTO
         1 000041   200024 450500                    STP0    J+3,,AUTO
         1 000042   200024 630500                    EPPR0   J+3,,AUTO
         1 000043   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000044   000000 701000 xent               TSX1    ITQ$WRITE
         1 000045   000000 011000                    NOP     0

       67       67    2              IT_OUTDEV = SAVEOUT;

     67  1 000046   200010 235100                    LDA     SAVEOUT,,AUTO
         1 000047   000000 755000 xsym               STA     IT_OUTDEV

       68       68    2              END;
PL6.E3A0      #001=ITR$READ File=ITR$READ.:E05TSI                                TUE 07/29/97 23:07 Page:14   

       69       69        /**/
       70       70    1           TIGR_BUF = 'OUTOFCARDS';

     70  1 000050   040000 100400                    MLR     fill='040'O
         1 000051   000002 000012 0                  ADSC9   BBS+1                    cn=0,n=10
         1 000052   000000 000120 xsym               ADSC9   TIGR_BUF                 cn=0,n=80

       71       71        /**/
       72       72    1           SAVEOUT = IT_OUTDEV;

     72  1 000053   000000 235000 xsym               LDA     IT_OUTDEV
         1 000054   200010 755100                    STA     SAVEOUT,,AUTO

       73       73    1           IT_OUTDEV = IT_ECHODEV;

     73  1 000055   000000 236000 xsym               LDQ     IT_ECHODEV
         1 000056   000000 756000 xsym               STQ     IT_OUTDEV

       74       74        /**/
       75       75    1           CALL ITQ$READ(ADDR(TIGR_BUF),ARS) ALTRET (READ_ERR);

     75  1 000057   000004 236000 2                  LDQ     4
         1 000060   200022 756100                    STQ     J+1,,AUTO
         1 000061   200005 630500                    EPPR0   ARS,,AUTO
         1 000062   200025 450500                    STP0    J+4,,AUTO
         1 000063   200022 631500                    EPPR1   J+1,,AUTO
         1 000064   200024 451500                    STP1    J+3,,AUTO
         1 000065   200024 630500                    EPPR0   J+3,,AUTO
         1 000066   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000067   000000 701000 xent               TSX1    ITQ$READ
         1 000070   000224 702000 1                  TSX2    READ_ERR

       76       76    1           CALL EDIT_INPUT (TIGR_BUF, ARS);

     76  1 000071   200005 630500                    EPPR0   ARS,,AUTO
         1 000072   200016 450500                    STP0    @BUF+1,,AUTO
PL6.E3A0      #001=ITR$READ File=ITR$READ.:E05TSI                                TUE 07/29/97 23:07 Page:15   
         1 000073   000004 236000 2                  LDQ     4
         1 000074   200015 756100                    STQ     READ_VEC+4,,AUTO
         1 000075   000310 701000 1                  TSX1    EDIT_INPUT
         1 000076   000000 011000                    NOP     0

       77       77        /**/
       78       78    1           IT_OUTDEV = SAVEOUT;

     78  1 000077   200010 235100                    LDA     SAVEOUT,,AUTO
         1 000100   000000 755000 xsym               STA     IT_OUTDEV

       79       79        /**/
       80       80    2           IF (TIGR_BUF = 'OUTOFCARDS') THEN DO; /* HE LEFT OUT A 'READ ME'      */

     80  1 000101   040000 106400                    CMPC    fill='040'O
         1 000102   000000 000120 xsym               ADSC9   TIGR_BUF                 cn=0,n=80
         1 000103   000002 000012 0                  ADSC9   BBS+1                    cn=0,n=10
         1 000104   000110 601000 1                  TNZ     s:85

       81       81    2              IT_INDEV = IT_MINIQ_ME;

     81  1 000105   000000 236000 xsym               LDQ     IT_MINIQ_ME
         1 000106   000000 756000 xsym               STQ     IT_INDEV

       82       82    2              RETURN;

     82  1 000107   000000 702200 xent               TSX2  ! X66_ARET

       83       83    2              END;
       84       84        /**/
       85       85    1           IF (TIGR_BUF = '!EOD') THEN     /* AARDVARK SAYS THATS ALL            */

     85  1 000110   040000 106400                    CMPC    fill='040'O
         1 000111   000000 000120 xsym               ADSC9   TIGR_BUF                 cn=0,n=80
         1 000112   000005 000004 0                  ADSC9   BBS+4                    cn=0,n=4
         1 000113   000117 601000 1                  TNZ     s:87

PL6.E3A0      #001=ITR$READ File=ITR$READ.:E05TSI                                TUE 07/29/97 23:07 Page:16   
       86       86    1              TIGR_BUF = 'END';

     86  1 000114   040000 100400                    MLR     fill='040'O
         1 000115   000006 000003 0                  ADSC9   BBS+5                    cn=0,n=3
         1 000116   000000 000120 xsym               ADSC9   TIGR_BUF                 cn=0,n=80

       87       87    1           CALL INSERT (TIGR_BUF,ARS,80-ARS,' ');

     87  1 000117   200005 720100                    LXL0    ARS,,AUTO
         1 000120   777657 620010                    EAX0    -81,X0
         1 000121   777777 660003                    ERX0    -1,DU
         1 000122   200005 236100                    LDQ     ARS,,AUTO
         1 000123   040046 100400                    MLR     fill='040'O
         1 000124   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         1 000125   000000 000010 xsym               ADSC9   TIGR_BUF,Q               cn=0,n=*X0

       88       88    1           CALL INDEX(I,BINASC(0),TIGR_BUF) ALTRET(NO_NULL);

     88  1 000126   000000 124400                    SCM     mask='000'O
         1 000127   000000 000120 xsym               ADSC9   TIGR_BUF                 cn=0,n=80
         1 000130   000005 000001 2                  ADSC9   5                        cn=0,n=1
         1 000131   200006 000100                    ARG     I,,AUTO
         1 000132   000142 606400 1                  TTN     NO_NULL

       89       89    1           CALL INSERT(TIGR_BUF,I,,' ');

     89  1 000133   200006 721100                    LXL1    I,,AUTO
         1 000134   777657 621011                    EAX1    -81,X1
         1 000135   777777 661003                    ERX1    -1,DU
         1 000136   200006 235100                    LDA     I,,AUTO
         1 000137   040045 100400                    MLR     fill='040'O
         1 000140   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         1 000141   000000 000011 xsym               ADSC9   TIGR_BUF,A               cn=0,n=*X1

     89  1 000142                       NO_NULL      null
       90       90    1   NO_NULL:;
       91       91    1           IT_OUTDEV = -1;                 /* WRITE TO PATCH FILE                */
PL6.E3A0      #001=ITR$READ File=ITR$READ.:E05TSI                                TUE 07/29/97 23:07 Page:17   

     91  1 000142   000001 335007                    LCA     1,DL
         1 000143   000000 755000 xsym               STA     IT_OUTDEV

       92       92    1           CALL ITQ$WRITE (ADDR(TIGR_BUF),20);

     92  1 000144   000004 236000 2                  LDQ     4
         1 000145   200022 756100                    STQ     J+1,,AUTO
         1 000146   000007 236000 2                  LDQ     7
         1 000147   200025 756100                    STQ     J+4,,AUTO
         1 000150   200022 630500                    EPPR0   J+1,,AUTO
         1 000151   200024 450500                    STP0    J+3,,AUTO
         1 000152   200024 630500                    EPPR0   J+3,,AUTO
         1 000153   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000154   000000 701000 xent               TSX1    ITQ$WRITE
         1 000155   000000 011000                    NOP     0

       93       93    1           IT_OUTDEV = SAVEOUT;

     93  1 000156   200010 235100                    LDA     SAVEOUT,,AUTO
         1 000157   000000 755000 xsym               STA     IT_OUTDEV

       94       94        /**/
       95       95    1           READ_VEC.PTR$ -> IT$TEXT = TIGR_BUF;

     95  1 000160   200012 470500                    LDP0    READ_VEC+1,,AUTO
         1 000161   040100 100400                    MLR     fill='040'O
         1 000162   000000 000120 xsym               ADSC9   TIGR_BUF                 cn=0,n=80
         1 000163   000000 000120                    ADSC9   0,,PR0                   cn=0,n=80

       96       96    1           NCHAR = NCHAR+ARS;

     96  1 000164   200004 471500                    LDP1    @NCHAR,,AUTO
         1 000165   100000 236100                    LDQ     0,,PR1
         1 000166   200005 036100                    ADLQ    ARS,,AUTO
         1 000167   100000 756100                    STQ     0,,PR1

PL6.E3A0      #001=ITR$READ File=ITR$READ.:E05TSI                                TUE 07/29/97 23:07 Page:18   
       97       97        /**/
       98       98    1           CALL INDEX(I,';',SUBSTR(READ_VEC.PTR$ -> IT$TEXT,0,ARS)) ALTRET (READ_RET);

     98  1 000170   200005 720100                    LXL0    ARS,,AUTO
         1 000171   000000 124540                    SCM     mask='000'O
         1 000172   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         1 000173   000010 000001 2                  ADSC9   8                        cn=0,n=1
         1 000174   200006 000100                    ARG     I,,AUTO
         1 000175   000223 606400 1                  TTN     READ_RET

       99       99    1           CALL INSERT(READ_VEC.PTR$ -> IT$TEXT,I,1,' ');

     99  1 000176   200006 235100                    LDA     I,,AUTO
         1 000177   040105 100400                    MLR     fill='040'O
         1 000200   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         1 000201   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1

      100      100    1           READ_VEC.BOUND = READ_VEC.BOUND - ARS;

    100  1 000202   200011 236100                    LDQ     READ_VEC,,AUTO
         1 000203   000020 772000                    QRL     16
         1 000204   200005 136100                    SBLQ    ARS,,AUTO
         1 000205   000020 736000                    QLS     16
         1 000206   200011 676100                    ERQ     READ_VEC,,AUTO
         1 000207   000034 376000 xsym               ANQ     B_VECTNIL+28
         1 000210   200011 656100                    ERSQ    READ_VEC,,AUTO

      101      101        /**/
      102      102    1           IF (READ_VEC.BOUND < 80) THEN ALTRETURN;

    102  1 000211   200011 236100                    LDQ     READ_VEC,,AUTO
         1 000212   000034 376000 xsym               ANQ     B_VECTNIL+28
         1 000213   000024 116003                    CMPQ    20,DU
         1 000214   000216 603000 1                  TRC     s:104

    102  1 000215   000000 702200 xent               TSX2  ! X66_AALT

PL6.E3A0      #001=ITR$READ File=ITR$READ.:E05TSI                                TUE 07/29/97 23:07 Page:19   
      103      103        /**/
      104      104    1           READ_VEC.PTR$ = PINCRC(READ_VEC.PTR$,ARS);

    104  1 000216   200005 236100                    LDQ     ARS,,AUTO
         1 000217   000020 736000                    QLS     16
         1 000220   200012 036100                    ADLQ    READ_VEC+1,,AUTO
         1 000221   200012 756100                    STQ     READ_VEC+1,,AUTO

      105      105    1           GOTO READ_CMD;

    105  1 000222   000010 710000 1                  TRA     READ_CMD

      106      106        /**/
      107      107    1   READ_RET:
      108      108    1           RETURN;

    108  1 000223   000000 702200 xent  READ_RET     TSX2  ! X66_ARET

      109      109        /**/
      110      110    1   READ_ERR:
      111      111    1           ALTRETURN;

    111  1 000224   000000 702200 xent  READ_ERR     TSX2  ! X66_AALT

      112      112        %EJECT;
PL6.E3A0      #001=ITR$READ File=ITR$READ.:E05TSI                                TUE 07/29/97 23:07 Page:20   
      113      113        /**/
      114      114    1   ITR$WRITE: ENTRY(BUFFER_VEC,NCHAR) ALTRET;

    114  1 000225   000000 700200 xent  ITR$WRITE    TSX0  ! X66_AUTO_2
         1 000226   000026 000002                    ZERO    22,2

      115      115        /**/
      116      116    1           IF (IT_OUTDEV = IT_MINIQ_ME) THEN CALL ITQ$WRITE(ADDR(IT_CRLF),1);

    116  1 000227   000000 236000 xsym               LDQ     IT_OUTDEV
         1 000230   000245 604000 1                  TMI     s:118
         1 000231   000000 116000 xsym               CMPQ    IT_MINIQ_ME
         1 000232   000245 601000 1                  TNZ     s:118

    116  1 000233   000011 236000 2                  LDQ     9
         1 000234   200022 756100                    STQ     J+1,,AUTO
         1 000235   000003 236000 2                  LDQ     3
         1 000236   200025 756100                    STQ     J+4,,AUTO
         1 000237   200022 630500                    EPPR0   J+1,,AUTO
         1 000240   200024 450500                    STP0    J+3,,AUTO
         1 000241   200024 630500                    EPPR0   J+3,,AUTO
         1 000242   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000243   000000 701000 xent               TSX1    ITQ$WRITE
         1 000244   000000 011000                    NOP     0

      117      117        /**/
      118      118    1           ARS = NCHAR/4;

    118  1 000245   200004 470500                    LDP0    @NCHAR,,AUTO
         1 000246   000000 236100                    LDQ     0,,PR0
         1 000247   000004 506007                    DIV     4,DL
         1 000250   200005 756100                    STQ     ARS,,AUTO

      119      119    1           I = MOD(NCHAR,4);

    119  1 000251   000000 236100                    LDQ     0,,PR0
         1 000252   000004 506007                    DIV     4,DL
PL6.E3A0      #001=ITR$READ File=ITR$READ.:E05TSI                                TUE 07/29/97 23:07 Page:21   
         1 000253   200006 755100                    STA     I,,AUTO

      120      120    2           IF (I > 0) THEN DO J = 0 TO 3-I;

    120  1 000254   000000 115003                    CMPA    0,DU
         1 000255   000275 604400 1                  TMOZ    s:123

    120  1 000256   200007 450100                    STZ     J,,AUTO
         1 000257   000271 710000 1                  TRA     s:122+1

      121      121    2              PINCRC(BUF_VEC.PTR$,NCHAR+J) -> CHAR$1 = ' ';

    121  1 000260   200004 470500                    LDP0    @NCHAR,,AUTO
         1 000261   000000 236100                    LDQ     0,,PR0
         1 000262   200007 036100                    ADLQ    J,,AUTO
         1 000263   200003 471500                    LDP1    @BUFFER_VEC,,AUTO
         1 000264   100001 473500                    LDP3    1,,PR1
         1 000265   040106 100400                    MLR     fill='040'O
         1 000266   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         1 000267   300000 000001                    ADSC9   0,Q,PR3                  cn=0,n=1

      122      122    2              END;

    122  1 000270   200007 054100                    AOS     J,,AUTO
         1 000271   000003 236007                    LDQ     3,DL
         1 000272   200006 136100                    SBLQ    I,,AUTO
         1 000273   200007 116100                    CMPQ    J,,AUTO
         1 000274   000260 605000 1                  TPL     s:121

      123      123    1           ARS = ARS + 1;

    123  1 000275   200005 054100                    AOS     ARS,,AUTO

      124      124    1           CALL ITQ$WRITE(BUF_VEC.PTR$,ARS);

    124  1 000276   200005 631500                    EPPR1   ARS,,AUTO
         1 000277   200023 451500                    STP1    J+2,,AUTO
PL6.E3A0      #001=ITR$READ File=ITR$READ.:E05TSI                                TUE 07/29/97 23:07 Page:22   
         1 000300   200003 236100                    LDQ     @BUFFER_VEC,,AUTO
         1 000301   000001 036003                    ADLQ    1,DU
         1 000302   200022 756100                    STQ     J+1,,AUTO
         1 000303   200022 630500                    EPPR0   J+1,,AUTO
         1 000304   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000305   000000 701000 xent               TSX1    ITQ$WRITE
         1 000306   000000 011000                    NOP     0

      125      125    1           RETURN;

    125  1 000307   000000 702200 xent               TSX2  ! X66_ARET

      126      126        %EJECT;
PL6.E3A0      #001=ITR$READ File=ITR$READ.:E05TSI                                TUE 07/29/97 23:07 Page:23   
      127      127    1   EDIT_INPUT: PROC(BUF,ARS);

    127  1 000310   200014 741300       EDIT_INPUT   STX1  ! READ_VEC+3,,AUTO

      128      128        /* Edits a console input string */
      129      129        /* (any character followed by DEL or BS is deleted) */
      130      130        /**/
      131      131    2   DCL  BUF CHAR(80);
      132      132    2   DCL ARS SBIN WORD;
      133      133        /**/
      134      134    2   DCL BDEL BIT(9) CALIGNED CONSTANT INIT('177'O); /* ASCII for DEL                */
      135      135    2   DCL DEL REDEF BDEL CHAR(1);
      136      136    2   DCL BBS BIT(9) CALIGNED CONSTANT INIT('010'O); /* ASCII for BS                  */
      137      137    2   DCL BS REDEF BBS CHAR(1);
      138      138    2   DCL CH CHAR(1);
      139      139    2   DCL I SBIN WORD;
      140      140    2   DCL J SBIN WORD;
      141      141        /**/
      142      142    2           I=0;

    142  1 000311   200020 450100                    STZ     I,,AUTO

      143      143    3           DO J=0 TO ARS-1;

    143  1 000312   200021 450100                    STZ     J,,AUTO
         1 000313   000353 710000 1                  TRA     s:153+1

      144      144    3              CH=SUBSTR(BUF,I,1);

    144  1 000314   200015 470500                    LDP0    @BUF,,AUTO
         1 000315   200020 235100                    LDA     I,,AUTO
         1 000316   040100 100505                    MLR     fill='040'O
         1 000317   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         1 000320   200017 000001                    ADSC9   CH,,AUTO                 cn=0,n=1

      145      145    4              IF CH=DEL OR CH=BS THEN DO;

PL6.E3A0      #001=ITR$READ File=ITR$READ.:E05TSI                                TUE 07/29/97 23:07 Page:24   
    145  1 000321   200017 236100                    LDQ     CH,,AUTO
         1 000322   000000 676000 0                  ERQ     BDEL
         1 000323   777000 376003                    ANQ     -512,DU
         1 000324   000331 600000 1                  TZE     s:146
         1 000325   200017 236100                    LDQ     CH,,AUTO
         1 000326   000001 676000 0                  ERQ     BBS
         1 000327   777000 376003                    ANQ     -512,DU
         1 000330   000351 601000 1                  TNZ     s:152

      146      146    4                 IF I=0 THEN SUBSTR(BUF,0)=SUBSTR(BUF,1);

    146  1 000331   000000 115003                    CMPA    0,DU
         1 000332   000337 601000 1                  TNZ     s:148

    146  1 000333   040100 100500                    MLR     fill='040'O
         1 000334   000000 200117                    ADSC9   0,,PR0                   cn=1,n=79
         1 000335   000000 000120                    ADSC9   0,,PR0                   cn=0,n=80
         1 000336   000352 710000 1                  TRA     s:153

      147      147    5                 ELSE DO;

      148      148    5                    SUBSTR(BUF,I-1)=SUBSTR(BUF,I+1);

    148  1 000337   777660 620005                    EAX0    -80,AL
         1 000340   777777 660003                    ERX0    -1,DU
         1 000341   777656 621005                    EAX1    -82,AL
         1 000342   777777 661003                    ERX1    -1,DU
         1 000343   040145 100545                    MLR     fill='040'O
         1 000344   000000 200010                    ADSC9   0,A,PR0                  cn=1,n=*X0
         1 000345   077777 600011                    ADSC9   -1,A,PR0                 cn=3,n=*X1

      149      149    5                    I=I-1;

    149  1 000346   000001 336007                    LCQ     1,DL
         1 000347   200020 056100                    ASQ     I,,AUTO

      150      150    5                    END;                   /* ELSE                               */
PL6.E3A0      #001=ITR$READ File=ITR$READ.:E05TSI                                TUE 07/29/97 23:07 Page:25   

      151      151    4                 END;                      /*THEN                                */

    151  1 000350   000352 710000 1                  TRA     s:153

      152      152    3              ELSE I=I+1;

    152  1 000351   200020 054100                    AOS     I,,AUTO

      153      153    3              END;                         /* DO                                 */

    153  1 000352   200021 054100                    AOS     J,,AUTO
         1 000353   200016 470500                    LDP0    @ARS,,AUTO
         1 000354   200021 236100                    LDQ     J,,AUTO
         1 000355   000000 116100                    CMPQ    0,,PR0
         1 000356   000314 604000 1                  TMI     s:144

      154      154    2           RETURN;

    154  1 000357   200014 221300                    LDX1  ! READ_VEC+3,,AUTO
         1 000360   000001 702211                    TSX2  ! 1,X1

BDEL
 Sect OctLoc
   0     000   177*** ******                                                    ....

BBS
 Sect OctLoc
   0     001   010*** ******                                                    ....

(unnamed)
 Sect OctLoc
   0     002   117125 124117   106103 101122   104123 040040   041105 117104    OUTOFCARDS  !EOD
   0     006   105116 104040                                                    END

(unnamed)
 Sect OctLoc
PL6.E3A0      #001=ITR$READ File=ITR$READ.:E05TSI                                TUE 07/29/97 23:07 Page:26   
   2     000   000000 006000   000005 006000   000000 006000   000003 006000    ................
   2     004   000000 006000   000040 040040   000000 000024   000006 006000    .....   ........
   2     010   073040 040040   000000 006000                                    ;   ....
      155      155    2   END EDIT_INPUT;
      156      156
      157      157    1   END ITR$READ;

PL6.E3A0      #001=ITR$READ File=ITR$READ.:E05TSI                                TUE 07/29/97 23:07 Page:27   
      No diagnostics issued in procedure ITR$READ.
PL6.E3A0      #001=ITR$READ File=ITR$READ.:E05TSI                                TUE 07/29/97 23:07 Page:28   

 **** Variables and constants ****

  ****  Section 000 RoData ITR$READ

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     1-0-0/c BIT (9)     r     1 BBS                        0-0-0/c BIT (9)     r     1 BDEL
     1-0-0/c CHAR        r     1 BS                         0-0-0/c CHAR        r     1 DEL

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    16-0-0/w PTR         r     1 @ARS                      15-0-0/w PTR         r     1 @BUF
     3-0-0/w PTR         r     1 @BUFFER_VEC                4-0-0/w PTR         r     1 @NCHAR
     5-0-0/w SBIN        r     1 ARS                       *0-0-0/w SBIN        r     1 ARS
    *0-0-0/c CHAR(80)    r     1 BUF                       *0-0-0/w BIT (72)    r     1 BUFFER_VEC
    *0-0-0/w STRC(72)    r     1 BUF_VEC                   17-0-0/c CHAR        r     1 CH
     6-0-0/w SBIN        r     1 I                         20-0-0/w SBIN        r     1 I
     7-0-0/w SBIN        r     1 J                         21-0-0/w SBIN        r     1 J
    *0-0-0/w SBIN        r     1 NCHAR                     11-0-0/w STRC(72)    r     1 READ_VEC
    10-0-0/w SBIN        r     1 SAVEOUT

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT         r     1 IT_CRLF                    0-0-0/w UBIN        r     1 IT_ECHODEV
     0-0-0/w UBIN        r     1 IT_INDEV                   0-0-0/w UBIN        r     1 IT_MINIQ_ME
     0-0-0/w SBIN        r     1 IT_OUTDEV
     0-0-0/w BIT         r     1 TIGRHERE(0:2)
     0-0-0/w BIT         r     1 TIGRPROMPT                 0-0-0/c CHAR(80)    r     1 TIGR_BUF
     0-0-0/w BIT         r     1 TIGR_FIRST

PL6.E3A0      #001=ITR$READ File=ITR$READ.:E05TSI                                TUE 07/29/97 23:07 Page:29   
  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR        r     1 CHAR$1                     0-0-0/c CHAR(80)    r     1 IT$TEXT


   Procedure ITR$READ requires 241 words for executable code.
   Procedure ITR$READ requires 22 words of local(AUTO) storage.

    No errors detected in file ITR$READ.:E05TSI    .
PL6.E3A0      #001=ITR$READ File=ITR$READ.:E05TSI                                TUE 07/29/97 23:07 Page:30   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=ITR$READ File=ITR$READ.:E05TSI                                TUE 07/29/97 23:07 Page:31   
          MINI XREF LISTING

ARS
        20**DCL        75<>CALL       76<>CALL       87>>CALLBLT    87>>CALLBLT    96>>ASSIGN     98>>CALLBLT
       100>>ASSIGN    104>>ASSIGN    118<<ASSIGN    123<<ASSIGN    123>>ASSIGN    124<>CALL
ARS IN PROCEDURE EDIT_INPUT
       132**DCL       127--PROC      143>>DOINDEX
BBS IN PROCEDURE EDIT_INPUT
       136**DCL       137--REDEF
BDEL IN PROCEDURE EDIT_INPUT
       134**DCL       135--REDEF
BS IN PROCEDURE EDIT_INPUT
       137**DCL       145>>IF
BUF IN PROCEDURE EDIT_INPUT
       131**DCL       127--PROC      144>>ASSIGN    146<<ASSIGN    146>>ASSIGN    148<<ASSIGN    148>>ASSIGN
BUFFER_VEC
        12**DCL         9--PROC       13--REDEF      55>>ASSIGN    114--ENTRY
BUF_VEC.PTR$
        16**DCL       121>>ASSIGN    124<>CALL
CH IN PROCEDURE EDIT_INPUT
       138**DCL       144<<ASSIGN    145>>IF        145>>IF
CHAR$1
        32**DCL       121<<ASSIGN
DEL IN PROCEDURE EDIT_INPUT
       135**DCL       145>>IF
EDIT_INPUT
       127**PROC       76--CALL
I
        21**DCL        88<<CALLBLT    89>>CALLBLT    98<<CALLBLT    99>>CALLBLT   119<<ASSIGN    120>>IF
       120>>DOINDEX
I IN PROCEDURE EDIT_INPUT
       139**DCL       142<<ASSIGN    144>>ASSIGN    146>>IF        148>>ASSIGN    148>>ASSIGN    149<<ASSIGN
       149>>ASSIGN    152<<ASSIGN    152>>ASSIGN
IT$TEXT
PL6.E3A0      #001=ITR$READ File=ITR$READ.:E05TSI                                TUE 07/29/97 23:07 Page:32   
        31**DCL        95<<ASSIGN     98>>CALLBLT    99<<CALLBLT
ITQ$READ
        36**DCL-ENT    75--CALL
ITQ$WRITE
        37**DCL-ENT    64--CALL       66--CALL       92--CALL      116--CALL      124--CALL
IT_CRLF
        41**DCL       116--CALL
IT_ECHODEV
        50**DCL        73>>ASSIGN
IT_INDEV
        48**DCL        59>>IF         81<<ASSIGN
IT_MINIQ_ME
        51**DCL        59>>IF         61>>ASSIGN     81>>ASSIGN    116>>IF
IT_OUTDEV
        49**DCL        60>>ASSIGN     61<<ASSIGN     67<<ASSIGN     72>>ASSIGN     73<<ASSIGN     78<<ASSIGN
        91<<ASSIGN     93<<ASSIGN    116>>IF
J
        22**DCL       120<<DOINDEX   121>>ASSIGN
J IN PROCEDURE EDIT_INPUT
       140**DCL       143<<DOINDEX
NCHAR
        11**DCL         9--PROC       56<<ASSIGN     96<<ASSIGN     96>>ASSIGN    114--ENTRY     118>>ASSIGN
       119>>ASSIGN    121>>ASSIGN
NO_NULL
        89**LABEL      88--CALLALT
READ_CMD
        59**LABEL     105--GOTO
READ_ERR
       111**LABEL      75--CALLALT
READ_RET
       108**LABEL      98--CALLALT
READ_VEC
        24**DCL        55<<ASSIGN
READ_VEC.BOUND
        25**DCL       100<<ASSIGN    100>>ASSIGN    102>>IF
READ_VEC.PTR$
PL6.E3A0      #001=ITR$READ File=ITR$READ.:E05TSI                                TUE 07/29/97 23:07 Page:33   
        27**DCL        95>>ASSIGN     98>>CALLBLT    99>>CALLBLT   104<<ASSIGN    104>>ASSIGN
SAVEOUT
        23**DCL        60<<ASSIGN     67>>ASSIGN     72<<ASSIGN     78>>ASSIGN     93>>ASSIGN
TIGRHERE
        42**DCL        64--CALL
TIGRPROMPT
        44**DCL        66--CALL
TIGR_BUF
        52**DCL        70<<ASSIGN     75--CALL       76<>CALL       80>>IF         85>>IF         86<<ASSIGN
        87<<CALLBLT    88>>CALLBLT    89<<CALLBLT    92--CALL       95>>ASSIGN
TIGR_FIRST
        43**DCL        62>>IF         63<<ASSIGN
