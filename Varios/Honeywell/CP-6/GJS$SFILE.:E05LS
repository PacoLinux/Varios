VERSION E05

PL6.E3A0      #001=GJS$CLOSE_SHARED File=GJS$SFILE.:E05TSI                       TUE 07/29/97 22:03 Page:1    
        1        1        /*M* GJS$SFILE   Routines to maintain the shared files table.  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=3,IND=5,ENU=0,ECU=0,CRM=70  */
        8        8
        9        9        /*F*    NAME:   GJS$CLOSE_SHARED
       10       10
       11       11                PURPOSE: To disassociate a user from a shared file.
       12       12
       13       13                CALL:   CALL GJS$CLOSE_SHARED(PNUM) ALTRET(label);
       14       14
       15       15                INPUT:  PNUM - Index into the shared file table for
       16       16                               the file to be disassociated.
       17       17
       18       18        */
       19       19
       20       20        GJS$CLOSE_SHARED: PROC(PNUM) ALTRET;
       21       21
       22       22        %INCLUDE G_SFILE_M;
       23       82        %INCLUDE GH_GATE_M;
       24      123        %INCLUDE GH_SCHD_E;
       25      219
       26      220                                                /* Input parameters         */
       27      221    1   DCL PNUM UBIN;
       28      222
       29      223                                                /* AUTO storage             */
       30      224    1   DCL G$SFILE$ PTR;
       31      225    1   DCL SFILE$ PTR;
       32      226    1   DCL LCP6_FLGS BIT(16) ALIGNED;
       33      227
       34      228
       35      229                                                /* External Data            */
       36      230    1   DCL GJ_SFILE_START$ PTR SYMREF READONLY;
       37      231
PL6.E3A0      #001=GJS$CLOSE_SHARED File=GJS$SFILE.:E05TSI                       TUE 07/29/97 22:03 Page:2    
       38      232        %GATE (FPTN=G_SLOCK,STCLASS=SYMREF);
       39      251
       40      252                                                /* BASED Data               */
       41      253        %G$SFILE (FPTN=G_SFILE,STCLASS="BASED(GJ_SFILE_START$)");
       42      290        %G$SFILE (FPTN=G$SFILE,STCLASS="BASED(SFILE$)",ARRAYED=NO);
       43      327
       44      328                                                /* External Procedures      */
       45      329    1   DCL GJS$REL_SLOT ENTRY(1) ALTRET;
       46      330    1   DCL GHS$RUE ENTRY(4) ALTRET;
       47      331        %EJECT;
PL6.E3A0      #001=GJS$CLOSE_SHARED File=GJS$SFILE.:E05TSI                       TUE 07/29/97 22:03 Page:3    
       48      332        /*D*    NAME: GJS$CLOSE_SHARED
       49      333
       50      334                DESCRIPTION:
       51      335        */
       52      336
       53      337    1      IF PNUM = 0 THEN RETURN;
       54      338
       55      339
       56      340        /*D* The use count is decremented.  Then if there are still other
       57      341             users associated with this file, GJS$CLOSE_SHARED simply returns.
       58      342        */
       59      343    1      SFILE$ = ADDR(G_SFILE(PNUM));
       60      344           %LOCK (G=G_SLOCK);
       61      351    1      G$SFILE.UC = G$SFILE.UC - 1;
       62      352
       63      353    1      IF (G$SFILE.UC ~= 0)
       64      354    2      THEN DO;
       65      355                %UNLOCK (G=G_SLOCK);
       66      362    2           RETURN;
       67      363    2           END;
       68      364
       69      365    1      LCP6_FLGS = G$SFILE.LCP6_FLGS;
       70      366           %UNLOCK (G=G_SLOCK);
       71      373
       72      374        /*D* If the use count goes to zero, and the "installing" flag is set,
       73      375             GJS$STEP must be aborting the fetch.  As the processor may be
       74      376             only partially installed, the GJS$REL_SLOT routine is called to
       75      377             return the shared processor pages and release the shared file
       76      378             table entry.  GJS$REL_SLOT is also called if this were the last
       77      379             user of a shared file that is being replaced.
       78      380        */
       79      381    1      IF (LCP6_FLGS & (%LCP6_INST# | %LCP6_REP#))
       80      382    2      THEN DO;
       81      383    2           CALL GJS$REL_SLOT(PNUM)
       82      384    3           WHENALTRETURN DO;
       83      385
       84      386    3                END;
PL6.E3A0      #001=GJS$CLOSE_SHARED File=GJS$SFILE.:E05TSI                       TUE 07/29/97 22:03 Page:4    
       85      387    2           END;
       86      388
       87      389        /*D* If this were STEP aborting the installing process, a call is
       88      390             made to GHS$RUE to wake-up any users that may be waiting for
       89      391             the file.  The file will then be installed by one of those
       90      392             users that was waiting for it.
       91      393        */
       92      394    1      IF (LCP6_FLGS & %LCP6_INST#)
       93      395    1      THEN CALL GHS$RUE(%GH_EVUQFP);
       94      396
       95      397    1   END GJS$CLOSE_SHARED;
       96      398        %EOD;

PL6.E3A0      #001=GJS$CLOSE_SHARED File=GJS$SFILE.:E05TSI                       TUE 07/29/97 22:03 Page:5    
--  Include file information  --

   GH_SCHD_E.:E05TOU  is referenced.
   GH_GATE_M.:E05TOU  cannot be made into a system file and is referenced.
   G_SFILE_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure GJS$CLOSE_SHARED.

   Procedure GJS$CLOSE_SHARED requires 101 words for executable code.
   Procedure GJS$CLOSE_SHARED requires 12 words of local(AUTO) storage.

PL6.E3A0      #001=GJS$CLOSE_SHARED File=GJS$SFILE.:E05TSI                       TUE 07/29/97 22:03 Page:6    

 Object Unit name= GJS$CLOSE_SHARED                           File name= GJS$SFILE.:E05TOU
 UTS= JUL 29 '97 22:03:01.84 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none   101     65  GJS$CLOSE_SHARED
    1  RoData even  none     5      5  GJS$CLOSE_SHARED

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        1  GJS$CLOSE_SHARED

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 GHH$LOCK
 yes     yes           Std       1 GHH$UNLOCK
 yes     yes           Std       4 GHS$RUE
 yes     yes           Std       1 GJS$REL_SLOT
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    GJ_SFILE_START$                       G_SLOCK                          r    G$ROS$
PL6.E3A0      #001=GJS$CLOSE_SHARED File=GJS$SFILE.:E05TSI                       TUE 07/29/97 22:03 Page:7    


        1        1        /*M* GJS$SFILE   Routines to maintain the shared files table.  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=3,IND=5,ENU=0,ECU=0,CRM=70  */
        8        8
        9        9        /*F*    NAME:   GJS$CLOSE_SHARED
       10       10
       11       11                PURPOSE: To disassociate a user from a shared file.
       12       12
       13       13                CALL:   CALL GJS$CLOSE_SHARED(PNUM) ALTRET(label);
       14       14
       15       15                INPUT:  PNUM - Index into the shared file table for
       16       16                               the file to be disassociated.
       17       17
       18       18        */
       19       19
       20       20        GJS$CLOSE_SHARED: PROC(PNUM) ALTRET;

     20   0 000000  D380 0000 0000  xent GJS$CLOSE_SHAREDLNJ,B5   X6A_AUTO_1
          0 000003       000C 0001                       DC       12,1

       21       21
       22       22        %INCLUDE G_SFILE_M;
       23       82        %INCLUDE GH_GATE_M;
       24      123        %INCLUDE GH_SCHD_E;
       25      219
       26      220                                                /* Input parameters         */
       27      221    1   DCL PNUM UBIN;
       28      222
       29      223                                                /* AUTO storage             */
       30      224    1   DCL G$SFILE$ PTR;
       31      225    1   DCL SFILE$ PTR;
       32      226    1   DCL LCP6_FLGS BIT(16) ALIGNED;
PL6.E3A0      #001=GJS$CLOSE_SHARED File=GJS$SFILE.:E05TSI                       TUE 07/29/97 22:03 Page:8    
       33      227
       34      228
       35      229                                                /* External Data            */
       36      230    1   DCL GJ_SFILE_START$ PTR SYMREF READONLY;
       37      231
       38      232        %GATE (FPTN=G_SLOCK,STCLASS=SYMREF);
       39      251
       40      252                                                /* BASED Data               */
       41      253        %G$SFILE (FPTN=G_SFILE,STCLASS="BASED(GJ_SFILE_START$)");
       42      290        %G$SFILE (FPTN=G$SFILE,STCLASS="BASED(SFILE$)",ARRAYED=NO);
       43      327
       44      328                                                /* External Procedures      */
       45      329    1   DCL GJS$REL_SLOT ENTRY(1) ALTRET;
       46      330    1   DCL GHS$RUE ENTRY(4) ALTRET;
       47      331        %EJECT;
PL6.E3A0      #001=GJS$CLOSE_SHARED File=GJS$SFILE.:E05TSI                       TUE 07/29/97 22:03 Page:9    
       48      332        /*D*    NAME: GJS$CLOSE_SHARED
       49      333
       50      334                DESCRIPTION:
       51      335        */
       52      336
       53      337    1      IF PNUM = 0 THEN RETURN;

    337   0 000005  ECC7 0004                            LDB,B6   @PNUM,AUTO
          0 000007  E806                                 LDR,R6   ,B6
          0 000008  6981 0004                            BNEZ,R6  s:343,PREL

    337   0 00000A  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

       54      338
       55      339
       56      340        /*D* The use count is decremented.  Then if there are still other
       57      341             users associated with this file, GJS$CLOSE_SHARED simply returns.
       58      342        */
       59      343    1      SFILE$ = ADDR(G_SFILE(PNUM));

    343   0 00000D  B856                                 LDR,R3   R6
          0 00000E  DC80 0000 0000  xsym                 LDB,B5   GJ_SFILE_START$
          0 000011  3F30                                 MLV,R3   48
          0 000012  CBB5                                 LAB,B4   ,B5,R3
          0 000013  CFC7 0008                            STB,B4   SFILE$,AUTO

       60      344           %LOCK (G=G_SLOCK);

    349   0 000015  BB80 0000 0000  01                   LAB,B3   0
          0 000018  CBF0 0100                            LAB,B4   256,IMO
          0 00001A  E380 0000 0000  xent                 LNJ,B6   GHH$LOCK
          0 00001D       0001                            DC       s:351,PREL

       61      351    1      G$SFILE.UC = G$SFILE.UC - 1;

    351   0 00001E  ECC7 0008                            LDB,B6   SFILE$,AUTO
          0 000020  E2C6 001F                            LLH,R6   31,B6
PL6.E3A0      #001=GJS$CLOSE_SHARED File=GJS$SFILE.:E05TSI                       TUE 07/29/97 22:03 Page:10   
          0 000022  6EFF                                 ADV,R6   -1
          0 000023  E7C6 001F                            STH,R6   31,B6

       62      352
       63      353    1      IF (G$SFILE.UC ~= 0)

    353   0 000025  E2C6 001F                            LLH,R6   31,B6
          0 000027  6901 000D                            BEZ,R6   s:365,PREL

       64      354    2      THEN DO;

       65      355                %UNLOCK (G=G_SLOCK);

    360   0 000029  BB80 0000 0000  01                   LAB,B3   0
          0 00002C  CBF0 0100                            LAB,B4   256,IMO
          0 00002E  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
          0 000031       0001                            DC       s:362,PREL

       66      362    2           RETURN;

    362   0 000032  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

       67      363    2           END;
       68      364
       69      365    1      LCP6_FLGS = G$SFILE.LCP6_FLGS;

    365   0 000035  D2C6 001E                            LLH,R5   30,B6
          0 000037  5008                                 SOL,R5   8
          0 000038  DF47 000A                            STR,R5   LCP6_FLGS,AUTO

       70      366           %UNLOCK (G=G_SLOCK);

    371   0 00003A  BB80 0000 0000  01                   LAB,B3   0
          0 00003D  CBF0 0100                            LAB,B4   256,IMO
          0 00003F  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
          0 000042       0001                            DC       s:381,PREL

PL6.E3A0      #001=GJS$CLOSE_SHARED File=GJS$SFILE.:E05TSI                       TUE 07/29/97 22:03 Page:11   
       71      373
       72      374        /*D* If the use count goes to zero, and the "installing" flag is set,
       73      375             GJS$STEP must be aborting the fetch.  As the processor may be
       74      376             only partially installed, the GJS$REL_SLOT routine is called to
       75      377             return the shared processor pages and release the shared file
       76      378             table entry.  GJS$REL_SLOT is also called if this were the last
       77      379             user of a shared file that is being replaced.
       78      380        */
       79      381    1      IF (LCP6_FLGS & (%LCP6_INST# | %LCP6_REP#))

    381   0 000043  E847 000A                            LDR,R6   LCP6_FLGS,AUTO
          0 000045  E570 0300                            AND,R6   768,IMO
          0 000047  6901 000B                            BEZ,R6   s:394,PREL

       80      382    2      THEN DO;

       81      383    2           CALL GJS$REL_SLOT(PNUM)

    383   0 000049  BBC7 0004                            LAB,B3   @PNUM,AUTO
          0 00004B  CBF0 0100                            LAB,B4   256,IMO
          0 00004D  E380 0000 0000  xent                 LNJ,B6   GJS$REL_SLOT
          0 000050       0003                            DC       s:394,PREL
          0 000051  0F81 0001                            B        s:394,PREL

       82      384    3           WHENALTRETURN DO;

       83      385
       84      386    3                END;

       85      387    2           END;

       86      388
       87      389        /*D* If this were STEP aborting the installing process, a call is
       88      390             made to GHS$RUE to wake-up any users that may be waiting for
       89      391             the file.  The file will then be installed by one of those
       90      392             users that was waiting for it.
       91      393        */
PL6.E3A0      #001=GJS$CLOSE_SHARED File=GJS$SFILE.:E05TSI                       TUE 07/29/97 22:03 Page:12   
       92      394    1      IF (LCP6_FLGS & %LCP6_INST#)

    394   0 000053  E847 000A                            LDR,R6   LCP6_FLGS,AUTO
          0 000055  E570 0200                            AND,R6   512,IMO
          0 000057  6901 000A                            BEZ,R6   s:397,PREL

       93      395    1      THEN CALL GHS$RUE(%GH_EVUQFP);

    395   0 000059  BB80 0000 0003  01                   LAB,B3   +3
          0 00005C  CBF0 0100                            LAB,B4   256,IMO
          0 00005E  E380 0000 0000  xent                 LNJ,B6   GHS$RUE
          0 000061       0001                            DC       s:397,PREL

       94      396
       95      397    1   END GJS$CLOSE_SHARED;

    397   0 000062  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
       96      398        %EOD;

PL6.E3A0      #001=GJS$CLOSE_SHARED File=GJS$SFILE.:E05TSI                       TUE 07/29/97 22:03 Page:13   
--  Include file information  --

   GH_SCHD_E.:E05TOU  is referenced.
   GH_GATE_M.:E05TOU  cannot be made into a system file and is referenced.
   G_SFILE_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure GJS$CLOSE_SHARED.
PL6.E3A0      #001=GJS$CLOSE_SHARED File=GJS$SFILE.:E05TSI                       TUE 07/29/97 22:03 Page:14   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @PNUM                      A-0-0/w BIT (16)    r     1 LCP6_FLGS
    *0-0-0/w UBIN(16)    r     1 PNUM                       8-0-0/w PTR         r     1 SFILE$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 GJ_SFILE_START$            0-0-0/w STRC(48)    r     1 G_SLOCK

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(768)   r     1 G$SFILE
     0-0-0/w STRC(768)   r     1 G_SFILE(0:0)


   Procedure GJS$CLOSE_SHARED requires 101 words for executable code.
   Procedure GJS$CLOSE_SHARED requires 12 words of local(AUTO) storage.
PL6.E3A0      #001=GJS$CLOSE_SHARED File=GJS$SFILE.:E05TSI                       TUE 07/29/97 22:03 Page:15   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=GJS$CLOSE_SHARED File=GJS$SFILE.:E05TSI                       TUE 07/29/97 22:03 Page:16   
          MINI XREF LISTING

G$SFILE.LCP6_FLGS
       317**DCL       365>>ASSIGN
G$SFILE.LIB_WDSZ_DATA
       322**DCL       323--REDEF
G$SFILE.UC
       321**DCL       351<<ASSIGN    351>>ASSIGN    353>>IF
GHH$LOCK
       122**DCL-ENT   349--CALL
GHH$UNLOCK
       122**DCL-ENT   360--CALL      371--CALL
GHS$RUE
       330**DCL-ENT   395--CALL
GJS$REL_SLOT
       329**DCL-ENT   383--CALL
GJ_SFILE_START$
       230**DCL       267--IMP-PTR   343>>ASSIGN
G_SFILE
       267**DCL       343--ASSIGN
G_SFILE.LIB_WDSZ_DATA
       285**DCL       286--REDEF
G_SLOCK
       244**DCL       349<>CALL      360<>CALL      371<>CALL
LCP6_FLGS
       226**DCL       365<<ASSIGN    381>>IF        394>>IF
PNUM
       221**DCL        20--PROC      337>>IF        343>>ASSIGN    383<>CALL
SFILE$
       225**DCL       306--IMP-PTR   343<<ASSIGN    351>>ASSIGN    351>>ASSIGN    353>>IF        365>>ASSIGN

PL6.E3A0      #002=GJS$OPEN_SHARED File=GJS$SFILE.:E05TSI                        TUE 07/29/97 22:03 Page:17   
       97        1        /*T***********************************************************/
       98        2        /*T*                                                         */
       99        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      100        4        /*T*                                                         */
      101        5        /*T***********************************************************/
      102        6
      103        7
      104        8        /*F*   NAME:   GJS$OPEN_SHARED
      105        9
      106       10               PURPOSE: To find an entity in the shared file tables,
      107       11                        verify its type, and return its entry number.
      108       12
      109       13               CALL:  CALL GJS$OPEN_SHARED(GJ_SFILE_PARAMS) ALTRET(label);
      110       14
      111       15               INPUT:  GJ_SFILE_PARAMS.  See file GJ_MACROS_M for a full
      112       16                       description.
      113       17
      114       18        */
      115       19
      116       20        /*D*   NAME:    GJS$OPEN_SHARED
      117       21
      118       22               DESCRIPTION:
      119       23        */
      120       24        GJS$OPEN_SHARED: PROC(PARAMS) ALTRET;
      121       25
      122       26
      123       27        %INCLUDE G_SFILE_M;
      124       87 S      %INCLUDE GU_LCP6_M;
      125       88        %INCLUDE GJ_MACROS_M;
      126      561        %INCLUDE GH_GATE_M;
      127      602        %INCLUDE J_ERRORS_C;
      128      689        %INCLUDE GH_SCHD_E;
      129      785
      130      786                                                /* Input parameters         */
      131      787        %GJ_SFILE_PARAMS (FPTN=PARAMS,
      132      788           STCLASS= );
      133      928
PL6.E3A0      #002=GJS$OPEN_SHARED File=GJS$SFILE.:E05TSI                        TUE 07/29/97 22:03 Page:18   
      134      929                                                /* AUTO storage             */
      135      930    1   DCL SAVE_TYPE BIT(16);
      136      931    1   DCL SFILE$ PTR;
      137      932    1   DCL T$ PTR;
      138      933    1   DCL I UBIN;
      139      934
      140      935                                                /* External data            */
      141      936        %GATE (FPTN=G_SLOCK,STCLASS=SYMREF);
      142      955    1   DCL G_BOOTTIME UBIN(32) SYMREF;
      143      956    1   DCL GJ_SFILE_MAX# UBIN SYMREF;
      144      957    1   DCL GJ_SFILE_CURR# UBIN SYMREF;
      145      958    1   DCL GJ_SFILE_PEAK# UBIN SYMREF;
      146      959    1   DCL GJ_SFILE_START$ PTR SYMREF;
      147      960    1   DCL GJ_SFILE_REL_4SFILE UBIN SYMREF;
      148      961    1   DCL GJ_SFILE_TBL_FULL UBIN SYMREF;
      149      962
      150      963                                                /* BASED Data               */
      151      964        %GJ_FID (FPTN=FID,STCLASS=BASED);
      152      992        %G$SFILE (FPTN=G_SFILE,STCLASS="BASED(GJ_SFILE_START$)");
      153     1029        %G$SFILE (FPTN=G$SFILE,STCLASS="BASED(SFILE$)",ARRAYED=NO);
      154     1066    1   DCL 1 G$NAME BASED,
      155     1067    1         2 L UBIN BYTE UNAL,
      156     1068    1         2 TEXT CHAR(G$NAME.L) UNAL;
      157     1069
      158     1070                                                /* External Procedures      */
      159     1071    1   DCL GHI$UTS ENTRY(1);
      160     1072    1   DCL GHS$REG ENTRY(2) ALTRET;
      161     1073    1   DCL GJS$REL_SLOT ENTRY(1) ALTRET;
      162     1074
      163     1075                                                /* Internal Data            */
      164     1076        %VLP_ERRCODE (FPTN=EBADSSP,ERR#=%E$BADSSP,SEV=G_SEV_ERROR#,
      165     1077                            STCLASS=CONSTANT,FCG=GJ,MID=S,MON='1'B);
      166     1123        %VLP_ERRCODE (FPTN=EWRONGTYPE,ERR#=%E$WRONGTYPE,SEV=G_SEV_ERROR#,
      167     1124                            STCLASS=CONSTANT,FCG=GJ,MID=S,MON='1'B);
      168     1170        %VLP_ERRCODE (FPTN=ENOPROC,ERR#=%E$NOPROC,SEV=G_SEV_ERROR#,
      169     1171                            STCLASS=CONSTANT,FCG=GJ,MID=S,MON='1'B);
      170     1217        %VLP_ERRCODE (FPTN=ESTING,ERR#=%E$STING,SEV=G_SEV_ERROR#,
PL6.E3A0      #002=GJS$OPEN_SHARED File=GJS$SFILE.:E05TSI                        TUE 07/29/97 22:03 Page:19   
      171     1218                            STCLASS=CONSTANT,FCG=GJ,MID=S,MON='1'B);
      172     1264
      173     1265                                                /* String Substitutions     */
      174     1266        %GJ_SHARE#;
      175     1272        %EJECT;
PL6.E3A0      #002=GJS$OPEN_SHARED File=GJS$SFILE.:E05TSI                        TUE 07/29/97 22:03 Page:20   
      176     1273
      177     1274    1      SAVE_TYPE = PARAMS.PTYPE;
      178     1275    1      PARAMS.PNUM = 0;
      179     1276    1      PARAMS.ERR='0'B;
      180     1277
      181     1278    1   LOOK_AGAIN: ;
      182     1279           %LOCK (G=G_SLOCK);
      183     1286
      184     1287    2      DO I = 1 TO GJ_SFILE_MAX#;
      185     1288    2           SFILE$ = ADDR(G_SFILE(I));
      186     1289    2           T$ = ADDR(G$SFILE.NAME);
      187     1290
      188     1291        /*D* Begin by searching the shared file tables for a match on FID.
      189     1292        */
      190     1293    2           IF PARAMS.FID$->G$NAME = T$->G$NAME
      191     1294    2             AND PARAMS.FID$->FID.ACCT = G$SFILE.ACCT
      192     1295    2             AND PARAMS.FID$->FID.PASS = G$SFILE.PASS
      193     1296    2             AND PARAMS.FID$->FID.PSN = G$SFILE.PSN
      194     1297    2             AND G$SFILE.LCP6_FLGS.REP='0'B
      195     1298
      196     1299        /*D* If the FID and MODTIME both match, return the entry number and
      197     1300             the flags to the calling routine.
      198     1301        */
      199     1302    3           THEN DO;
      200     1303    3                IF PARAMS.FID$->FID.MODTIME = G$SFILE.MODTIME
      201     1304    4                THEN DO;
      202     1305    4                     PARAMS.PNUM = I;
      203     1306    4                     PARAMS.PTYPE = (G$SFILE.RU_FLGS & %RU_PROC#);
      204     1307
      205     1308        /*D* If the flags don't match that of the requested type, then
      206     1309             ALTRET to the calling routine.
      207     1310        */
      208     1311    4                     IF SAVE_TYPE ~= '0'B
      209     1312    5                     THEN DO;
      210     1313    5                          IF NOT((SAVE_TYPE & %RU_PROC#) & G$SFILE.RU_FLGS)
      211     1314    6                          THEN DO;
      212     1315                                    %UNLOCK (G=G_SLOCK);
PL6.E3A0      #002=GJS$OPEN_SHARED File=GJS$SFILE.:E05TSI                        TUE 07/29/97 22:03 Page:21   
      213     1322    6                               PARAMS.ERR=EWRONGTYPE;
      214     1323    6                               ALTRETURN;
      215     1324    6                               END;
      216     1325    5                          END;
      217     1326        /*E*   ERROR:   GJS-E$WRONGTYPE-E
      218     1327               MESSAGE:  That shared processor is not of the requested type.
      219     1328        */
      220     1329
      221     1330        /*D* If another user is in the process of installing this shared
      222     1331             file, and the WAIT parameter was specified, the user is REGed.
      223     1332             On return, the shared file table will be searched again.  If
      224     1333             the WAIT parameters is not specified, the error code is set
      225     1334             to E$BADSSP and GJS$OPEN_SHARED altreturns to the calling
      226     1335             routine.
      227     1336        */
      228     1337    4                     IF G$SFILE.LCP6_FLGS.INST = '1'B
      229     1338    5                     THEN DO;
      230     1339    5                          IF PARAMS.WAIT ~= 0
      231     1340    6                          THEN DO;
      232     1341                                    %UNLOCK (G=G_SLOCK);
      233     1348    6                               CALL GHS$REG(%GH_EVQFP);
      234     1349    6                               GOTO LOOK_AGAIN;
      235     1350    6                               END;
      236     1351    6                          ELSE DO;
      237     1352                                    %UNLOCK (G=G_SLOCK);
      238     1359    6                               PARAMS.ERR=EBADSSP;
      239     1360    6                               ALTRETURN;
      240     1361    6                               END;
      241     1362    5                          END;
      242     1363        /*E* ERROR: GJS-E$BADSSP-E
      243     1364             MESSAGE:  That shared file is now being installed.
      244     1365             DESCRIPTION:  Used internally.  The user should never see
      245     1366                           this error message.
      246     1367        */
      247     1368
      248     1369        /*D* If this is an open request, bump the use count and the
      249     1370             frequency count and return to the caller.
PL6.E3A0      #002=GJS$OPEN_SHARED File=GJS$SFILE.:E05TSI                        TUE 07/29/97 22:03 Page:22   
      250     1371        */
      251     1372    4                     IF PARAMS.FCN = %GJ_OPEN_PROC#
      252     1373    5                     THEN DO;
      253     1374    5                          G$SFILE.UC = G$SFILE.UC + 1;
      254     1375    5                          G$SFILE.FRQ = G$SFILE.FRQ + 1;
      255     1376    5                          PARAMS.TYC.SFILE$ = ADDR(G_SFILE(I));
      256     1377    5                          PARAMS.TYC.GET_PROC = 0;
      257     1378    5                          PARAMS.TYC.SHARE_PROC = 0;
      258     1379    5                          END;
      259     1380                          %UNLOCK (G=G_SLOCK);
      260     1387    4                     RETURN;
      261     1388    4                     END;                  /* end MODTIME match        */
      262     1389
      263     1390        /*D* If the FID matches, but the MODTIME doesn't, mark the old
      264     1391             processor as being replaced.  Then when it's use count goes
      265     1392             to zero, the pages and the shared file table entry can be
      266     1393             released.
      267     1394        */
      268     1395    4                ELSE DO;
      269     1396    4                     G$SFILE.LCP6_FLGS.REP = '1'B;
      270     1397    4                     END;
      271     1398    3                END;                       /* end FID match            */
      272     1399
      273     1400    2           END;                            /*DO to SFILE#              */
      274     1401
      275     1402        %EJECT;
PL6.E3A0      #002=GJS$OPEN_SHARED File=GJS$SFILE.:E05TSI                        TUE 07/29/97 22:03 Page:23   
      276     1403
      277     1404        /*D* If the file does not exist in the table, and this is not an
      278     1405             open request, ALTRET to the calling routine.
      279     1406        */
      280     1407    1      IF PARAMS.FCN ~= %GJ_OPEN_PROC#
      281     1408    2      THEN DO;
      282     1409                %UNLOCK (G=G_SLOCK);
      283     1416    2           PARAMS.ERR=ENOPROC;
      284     1417    2           ALTRETURN;
      285     1418    2           END;
      286     1419        /*E*   ERROR:   GJS-E$NOPROC-E
      287     1420               MESSAGE:  That Special Shared Processor doesn't exist.
      288     1421        */
      289     1422
      290     1423
      291     1424        /*D* If the file does not exist in the table, and this is an
      292     1425             open request, search the shared file tables for an available
      293     1426             slot so that the calling routine may then install this
      294     1427             shared file.
      295     1428        */
      296     1429    1      PARAMS.TYC.GET_PROC = 1;
      297     1430
      298     1431    2      DO I = 1 TO GJ_SFILE_MAX#;
      299     1432    2   INSTALL_SFILE: ;
      300     1433    2           SFILE$ = ADDR(G_SFILE(I));
      301     1434
      302     1435        /*D* When an available slot is found, move the FID, MODTIME and
      303     1436             flags to that entry.  Set the initial use count and frequency
      304     1437             count.  Mark LCP6_FLGS so that the calling routine will know
      305     1438             he is the initial user and must finish installing the shared
      306     1439             file.  Then return normally to the calling routine.
      307     1440        */
      308     1441    2           IF G$SFILE.INSTTIME = 0
      309     1442    3           THEN DO;
      310     1443    3                G$SFILE.INSTTIME = 1;
      311     1444    3                G$SFILE.NAME = PARAMS.FID$->FID.NAME;
      312     1445    3                G$SFILE.ACCT = PARAMS.FID$->FID.ACCT;
PL6.E3A0      #002=GJS$OPEN_SHARED File=GJS$SFILE.:E05TSI                        TUE 07/29/97 22:03 Page:24   
      313     1446    3                G$SFILE.PASS = PARAMS.FID$->FID.PASS;
      314     1447    3                G$SFILE.PSN = PARAMS.FID$->FID.PSN;
      315     1448    3                G$SFILE.MODTIME = PARAMS.FID$->FID.MODTIME;
      316     1449    3                G$SFILE.RU_FLGS = SAVE_TYPE;
      317     1450    3                G$SFILE.UC = 1;
      318     1451    3                G$SFILE.FRQ = 1;
      319     1452    3                G$SFILE.LCP6_FLGS = %LCP6_INST#;
      320     1453    3                CALL GHI$UTS(G$SFILE.INSTTIME);
      321     1454    3                G$SFILE.INSTTIME = G$SFILE.INSTTIME + G_BOOTTIME;
      322     1455    3                PARAMS.PNUM = I;
      323     1456    3                PARAMS.TYC.SFILE$ = SFILE$;
      324     1457    3                PARAMS.TYC.SHARE_PROC = %GJ_SHARE#;
      325     1458
      326     1459    3                GJ_SFILE_CURR# = GJ_SFILE_CURR# +1;
      327     1460    3                IF GJ_SFILE_CURR# > GJ_SFILE_PEAK#
      328     1461    3                THEN GJ_SFILE_PEAK# = GJ_SFILE_CURR#;
      329     1462
      330     1463                     %UNLOCK (G=G_SLOCK);
      331     1470    3                RETURN;
      332     1471    3                END;
      333     1472    2           END;                            /* DO to SFILE#             */
      334     1473
      335     1474        /*D* When there is no available slot, attempt to free one by calling
      336     1475             GJS$REL_SLOT.  Then if there is one available, go use it.
      337     1476        */
      338     1477    1      I = 0;
      339     1478    1      CALL GJS$REL_SLOT(I)
      340     1479    2      WHENRETURN DO;
      341     1480    2           GJ_SFILE_REL_4SFILE = GJ_SFILE_REL_4SFILE +1;
      342     1481    2           GOTO INSTALL_SFILE;
      343     1482    2           END;
      344     1483
      345     1484        /*D* When all entries in the shared file tables are truly in use,
      346     1485            indicate that none are available in the returned parameters.
      347     1486            This is still a normal return to the caller.
      348     1487        */
      349     1488    2      WHENALTRETURN DO;
PL6.E3A0      #002=GJS$OPEN_SHARED File=GJS$SFILE.:E05TSI                        TUE 07/29/97 22:03 Page:25   
      350     1489    2           GJ_SFILE_TBL_FULL = GJ_SFILE_TBL_FULL +1;
      351     1490    2           PARAMS.ERR = ESTING;
      352     1491    2           PARAMS.TYC.SFILE$ = ADDR(NIL);
      353     1492    2           PARAMS.TYC.SHARE_PROC = %GJ_DONTSHARE#;
      354     1493                %UNLOCK (G=G_SLOCK);
      355     1500    2           RETURN;
      356     1501    2           END;
      357     1502        /*E* ERROR: GJS-E$STING-E
      358     1503             MESSAGE:  Attempt to open (create) a shared file and there
      359     1504                       are no available entries in the shared file table.
      360     1505        */
      361     1506
      362     1507    1   END GJS$OPEN_SHARED;
      363     1508        %EOD;

PL6.E3A0      #002=GJS$OPEN_SHARED File=GJS$SFILE.:E05TSI                        TUE 07/29/97 22:03 Page:26   
--  Include file information  --

   GH_SCHD_E.:E05TOU  is referenced.
   J_ERRORS_C.:E05TOU  is referenced.
   GH_GATE_M.:E05TOU  cannot be made into a system file and is referenced.
   GJ_MACROS_M.:E05TOU  is referenced.
   G_SFILE_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure GJS$OPEN_SHARED.

   Procedure GJS$OPEN_SHARED requires 475 words for executable code.
   Procedure GJS$OPEN_SHARED requires 16 words of local(AUTO) storage.

PL6.E3A0      #002=GJS$OPEN_SHARED File=GJS$SFILE.:E05TSI                        TUE 07/29/97 22:03 Page:27   

 Object Unit name= GJS$OPEN_SHARED                            File name= GJS$SFILE.:E05TOU
 UTS= JUL 29 '97 22:03:14.60 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS      8      8  GJS$OPEN_SHARED
    1   Proc  even  none   475    1DB  GJS$OPEN_SHARED
    2  RoData even  none     5      5  GJS$OPEN_SHARED

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        1  GJS$OPEN_SHARED

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 GHH$LOCK
 yes     yes           Std       1 GHH$UNLOCK
 yes     yes           Std       2 GHS$REG
 yes     yes           Std       1 GJS$REL_SLOT
         yes           Std       1 GHI$UTS
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6C_ACMZ
                       nStd      0 X6A_AALT
                       nStd      0 X6A_ARET
PL6.E3A0      #002=GJS$OPEN_SHARED File=GJS$SFILE.:E05TSI                        TUE 07/29/97 22:03 Page:28   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     G_SLOCK                               G_BOOTTIME                            GJ_SFILE_MAX#
     GJ_SFILE_CURR#                        GJ_SFILE_PEAK#                        GJ_SFILE_START$
     GJ_SFILE_REL_4SFILE                   GJ_SFILE_TBL_FULL                r    G$ROS$
PL6.E3A0      #002=GJS$OPEN_SHARED File=GJS$SFILE.:E05TSI                        TUE 07/29/97 22:03 Page:29   


       97        1        /*T***********************************************************/
       98        2        /*T*                                                         */
       99        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      100        4        /*T*                                                         */
      101        5        /*T***********************************************************/
      102        6
      103        7
      104        8        /*F*   NAME:   GJS$OPEN_SHARED
      105        9
      106       10               PURPOSE: To find an entity in the shared file tables,
      107       11                        verify its type, and return its entry number.
      108       12
      109       13               CALL:  CALL GJS$OPEN_SHARED(GJ_SFILE_PARAMS) ALTRET(label);
      110       14
      111       15               INPUT:  GJ_SFILE_PARAMS.  See file GJ_MACROS_M for a full
      112       16                       description.
      113       17
      114       18        */
      115       19
      116       20        /*D*   NAME:    GJS$OPEN_SHARED
      117       21
      118       22               DESCRIPTION:
      119       23        */
      120       24        GJS$OPEN_SHARED: PROC(PARAMS) ALTRET;

     24   1 000000  D380 0000 0000  xent GJS$OPEN_SHARED LNJ,B5   X6A_AUTO_1
          1 000003       0010 0001                       DC       16,1

      121       25
      122       26
      123       27        %INCLUDE G_SFILE_M;
      124       87 S      %INCLUDE GU_LCP6_M;
      125       88        %INCLUDE GJ_MACROS_M;
      126      561        %INCLUDE GH_GATE_M;
      127      602        %INCLUDE J_ERRORS_C;
      128      689        %INCLUDE GH_SCHD_E;
PL6.E3A0      #002=GJS$OPEN_SHARED File=GJS$SFILE.:E05TSI                        TUE 07/29/97 22:03 Page:30   
      129      785
      130      786                                                /* Input parameters         */
      131      787        %GJ_SFILE_PARAMS (FPTN=PARAMS,
      132      788           STCLASS= );
      133      928
      134      929                                                /* AUTO storage             */
      135      930    1   DCL SAVE_TYPE BIT(16);
      136      931    1   DCL SFILE$ PTR;
      137      932    1   DCL T$ PTR;
      138      933    1   DCL I UBIN;
      139      934
      140      935                                                /* External data            */
      141      936        %GATE (FPTN=G_SLOCK,STCLASS=SYMREF);
      142      955    1   DCL G_BOOTTIME UBIN(32) SYMREF;
      143      956    1   DCL GJ_SFILE_MAX# UBIN SYMREF;
      144      957    1   DCL GJ_SFILE_CURR# UBIN SYMREF;
      145      958    1   DCL GJ_SFILE_PEAK# UBIN SYMREF;
      146      959    1   DCL GJ_SFILE_START$ PTR SYMREF;
      147      960    1   DCL GJ_SFILE_REL_4SFILE UBIN SYMREF;
      148      961    1   DCL GJ_SFILE_TBL_FULL UBIN SYMREF;
      149      962
      150      963                                                /* BASED Data               */
      151      964        %GJ_FID (FPTN=FID,STCLASS=BASED);
      152      992        %G$SFILE (FPTN=G_SFILE,STCLASS="BASED(GJ_SFILE_START$)");
      153     1029        %G$SFILE (FPTN=G$SFILE,STCLASS="BASED(SFILE$)",ARRAYED=NO);
      154     1066    1   DCL 1 G$NAME BASED,
      155     1067    1         2 L UBIN BYTE UNAL,
      156     1068    1         2 TEXT CHAR(G$NAME.L) UNAL;
      157     1069
      158     1070                                                /* External Procedures      */
      159     1071    1   DCL GHI$UTS ENTRY(1);
      160     1072    1   DCL GHS$REG ENTRY(2) ALTRET;
      161     1073    1   DCL GJS$REL_SLOT ENTRY(1) ALTRET;
      162     1074
      163     1075                                                /* Internal Data            */
      164     1076        %VLP_ERRCODE (FPTN=EBADSSP,ERR#=%E$BADSSP,SEV=G_SEV_ERROR#,
      165     1077                            STCLASS=CONSTANT,FCG=GJ,MID=S,MON='1'B);
PL6.E3A0      #002=GJS$OPEN_SHARED File=GJS$SFILE.:E05TSI                        TUE 07/29/97 22:03 Page:31   
      166     1123        %VLP_ERRCODE (FPTN=EWRONGTYPE,ERR#=%E$WRONGTYPE,SEV=G_SEV_ERROR#,
      167     1124                            STCLASS=CONSTANT,FCG=GJ,MID=S,MON='1'B);
      168     1170        %VLP_ERRCODE (FPTN=ENOPROC,ERR#=%E$NOPROC,SEV=G_SEV_ERROR#,
      169     1171                            STCLASS=CONSTANT,FCG=GJ,MID=S,MON='1'B);
      170     1217        %VLP_ERRCODE (FPTN=ESTING,ERR#=%E$STING,SEV=G_SEV_ERROR#,
      171     1218                            STCLASS=CONSTANT,FCG=GJ,MID=S,MON='1'B);
      172     1264
      173     1265                                                /* String Substitutions     */
      174     1266        %GJ_SHARE#;
      175     1272        %EJECT;
PL6.E3A0      #002=GJS$OPEN_SHARED File=GJS$SFILE.:E05TSI                        TUE 07/29/97 22:03 Page:32   
      176     1273
      177     1274    1      SAVE_TYPE = PARAMS.PTYPE;

   1274   1 000005  ECC7 0004                            LDB,B6   @PARAMS,AUTO
          1 000007  E846 0003                            LDR,R6   3,B6
          1 000009  EF47 0006                            STR,R6   SAVE_TYPE,AUTO

      178     1275    1      PARAMS.PNUM = 0;

   1275   1 00000B  8846 0002                            LBF,'00FF'X       2,B6
   1275   1 00000D       00FF

      179     1276    1      PARAMS.ERR='0'B;

   1276   1 00000E  8746 0004                            CL       4,B6
          1 000010  8746 0005                            CL       5,B6

   1276   1                              LOOK_AGAIN      null
      180     1277
      181     1278    1   LOOK_AGAIN: ;
      182     1279           %LOCK (G=G_SLOCK);

   1284   1 000012  BB80 0000 0000  02   LOOK_AGAIN      LAB,B3   0
          1 000015  CBF0 0100                            LAB,B4   256,IMO
          1 000017  E380 0000 0000  xent                 LNJ,B6   GHH$LOCK
          1 00001A       0001                            DC       s:1287,PREL

      183     1286
      184     1287    2      DO I = 1 TO GJ_SFILE_MAX#;

   1287   1 00001B  6C01                                 LDV,R6   1
          1 00001C  EF47 000B                            STR,R6   I,AUTO
          1 00001E  0F81 00D1                            B        s:1400+2,PREL

      185     1288    2           SFILE$ = ADDR(G_SFILE(I));

   1288   1 000020  EC80 0000 0000  xsym                 LDB,B6   GJ_SFILE_START$
PL6.E3A0      #002=GJS$OPEN_SHARED File=GJS$SFILE.:E05TSI                        TUE 07/29/97 22:03 Page:33   
          1 000023  B847 000B                            LDR,R3   I,AUTO
          1 000025  3F30                                 MLV,R3   48
          1 000026  DBB6                                 LAB,B5   ,B6,R3
          1 000027  DFC7 0007                            STB,B5   SFILE$,AUTO

      186     1289    2           T$ = ADDR(G$SFILE.NAME);

   1289   1 000029  DFC7 0009                            STB,B5   T$,AUTO

      187     1290
      188     1291        /*D* Begin by searching the shared file tables for a match on FID.
      189     1292        */
      190     1293    2           IF PARAMS.FID$->G$NAME = T$->G$NAME

   1293   1 00002B  CCC7 0004                            LDB,B4   @PARAMS,AUTO
          1 00002D  BC84                                 LDB,B3   ,B4
          1 00002E  E283                                 LLH,R6   ,B3
          1 00002F  D285                                 LLH,R5   ,B5
          1 000030  DF47 000C                            STR,R5   I+1,AUTO
          1 000032  EF47 000D                            STR,R6   I+2,AUTO
          1 000034  BFC7 000E                            STB,B3   I+3,AUTO
          1 000036  AB83                                 LAB,B2   ,B3
          1 000037  2C00                                 LDV,R2   0
          1 000038  6E01                                 ADV,R6   1
          1 000039  BB85                                 LAB,B3   ,B5
          1 00003A  3C00                                 LDV,R3   0
          1 00003B  F855                                 LDR,R7   R5
          1 00003C  7E01                                 ADV,R7   1
          1 00003D  D380 0000 0000  xent                 LNJ,B5   X6C_ACMZ
          1 000040  5301 00AD                            CBNE     s:1400,PREL
          1 000042  ECC7 0004                            LDB,B6   @PARAMS,AUTO
          1 000044  DC86                                 LDB,B5   ,B6
          1 000045  CCC7 0007                            LDB,B4   SFILE$,AUTO
          1 000047  0022                                 ACM      ;
          1 000048       4805 0010                                ALPHANUM(16,B5,,8,FILL),;
          1 00004A       4804 0010                                ALPHANUM(16,B4,,8,FILL)
          1 00004C  5301 00A1                            CBNE     s:1400,PREL
PL6.E3A0      #002=GJS$OPEN_SHARED File=GJS$SFILE.:E05TSI                        TUE 07/29/97 22:03 Page:34   
          1 00004E  0022                                 ACM      ;
          1 00004F       4805 0014                                ALPHANUM(20,B5,,8,FILL),;
          1 000051       4804 0014                                ALPHANUM(20,B4,,8,FILL)
          1 000053  5301 009A                            CBNE     s:1400,PREL
          1 000055  0022                                 ACM      ;
          1 000056       4605 0018                                ALPHANUM(24,B5,,6,FILL),;
          1 000058       4604 0018                                ALPHANUM(24,B4,,6,FILL)
          1 00005A  5301 0093                            CBNE     s:1400,PREL
          1 00005C  82C4 001E                            LB,'0100'X        30,B4
          1 00005E       0100
          1 00005F  0501 008E                            BBT      s:1400,PREL

      191     1294    2             AND PARAMS.FID$->FID.ACCT = G$SFILE.ACCT
      192     1295    2             AND PARAMS.FID$->FID.PASS = G$SFILE.PASS
      193     1296    2             AND PARAMS.FID$->FID.PSN = G$SFILE.PSN
      194     1297    2             AND G$SFILE.LCP6_FLGS.REP='0'B
      195     1298
      196     1299        /*D* If the FID and MODTIME both match, return the entry number and
      197     1300             the flags to the calling routine.
      198     1301        */
      199     1302    3           THEN DO;

      200     1303    3                IF PARAMS.FID$->FID.MODTIME = G$SFILE.MODTIME

   1303   1 000061  8CC5 001B                            LDI      27,B5
          1 000063  84C4 001B                            SID      27,B4
          1 000065  6981 0085                            BNEZ,R6  s:1396,PREL
          1 000067  7981 0083                            BNEZ,R7  s:1396,PREL

      201     1304    4                THEN DO;

      202     1305    4                     PARAMS.PNUM = I;

   1305   1 000069  E847 000B                            LDR,R6   I,AUTO
          1 00006B  EAC6 0002                            SRM,R6,'00FF'X    2,B6
          1 00006D       00FF

PL6.E3A0      #002=GJS$OPEN_SHARED File=GJS$SFILE.:E05TSI                        TUE 07/29/97 22:03 Page:35   
      203     1306    4                     PARAMS.PTYPE = (G$SFILE.RU_FLGS & %RU_PROC#);

   1306   1 00006E  E844 001D                            LDR,R6   29,B4
          1 000070  E570 5880                            AND,R6   22656,IMO
          1 000072  EF46 0003                            STR,R6   3,B6

      204     1307
      205     1308        /*D* If the flags don't match that of the requested type, then
      206     1309             ALTRET to the calling routine.
      207     1310        */
      208     1311    4                     IF SAVE_TYPE ~= '0'B

   1311   1 000074  D847 0006                            LDR,R5   SAVE_TYPE,AUTO
          1 000076  5901 001A                            BEZ,R5   s:1337,PREL

      209     1312    5                     THEN DO;

      210     1313    5                          IF NOT((SAVE_TYPE & %RU_PROC#) & G$SFILE.RU_FLGS)

   1313   1 000078  D570 5880                            AND,R5   22656,IMO
          1 00007A  D544 001D                            AND,R5   29,B4
          1 00007C  5981 0014                            BNEZ,R5  s:1337,PREL

      211     1314    6                          THEN DO;

      212     1315                                    %UNLOCK (G=G_SLOCK);

   1320   1 00007E  BB80 0000 0000  02                   LAB,B3   0
          1 000081  CBF0 0100                            LAB,B4   256,IMO
          1 000083  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
          1 000086       0001                            DC       s:1322,PREL

      213     1322    6                               PARAMS.ERR=EWRONGTYPE;

   1322   1 000087  8C80 0000 0002  00                   LDI      EWRONGTYPE
          1 00008A  ECC7 0004                            LDB,B6   @PARAMS,AUTO
          1 00008C  8D46 0004                            SDI      4,B6
PL6.E3A0      #002=GJS$OPEN_SHARED File=GJS$SFILE.:E05TSI                        TUE 07/29/97 22:03 Page:36   

      214     1323    6                               ALTRETURN;

   1323   1 00008E  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      215     1324    6                               END;
      216     1325    5                          END;
      217     1326        /*E*   ERROR:   GJS-E$WRONGTYPE-E
      218     1327               MESSAGE:  That shared processor is not of the requested type.
      219     1328        */
      220     1329
      221     1330        /*D* If another user is in the process of installing this shared
      222     1331             file, and the WAIT parameter was specified, the user is REGed.
      223     1332             On return, the shared file table will be searched again.  If
      224     1333             the WAIT parameters is not specified, the error code is set
      225     1334             to E$BADSSP and GJS$OPEN_SHARED altreturns to the calling
      226     1335             routine.
      227     1336        */
      228     1337    4                     IF G$SFILE.LCP6_FLGS.INST = '1'B

   1337   1 000091  82C4 001E                            LB,'0200'X        30,B4
   1337   1 000093       0200
          1 000094  0581 002C                            BBF      s:1372,PREL

      229     1338    5                     THEN DO;

      230     1339    5                          IF PARAMS.WAIT ~= 0

   1339   1 000096  D846 0006                            LDR,R5   6,B6
          1 000098  5901 0015                            BEZ,R5   s:1357,PREL

      231     1340    6                          THEN DO;

      232     1341                                    %UNLOCK (G=G_SLOCK);

   1346   1 00009A  BB80 0000 0000  02                   LAB,B3   0
          1 00009D  CBF0 0100                            LAB,B4   256,IMO
PL6.E3A0      #002=GJS$OPEN_SHARED File=GJS$SFILE.:E05TSI                        TUE 07/29/97 22:03 Page:37   
          1 00009F  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
          1 0000A2       0001                            DC       s:1348,PREL

      233     1348    6                               CALL GHS$REG(%GH_EVQFP);

   1348   1 0000A3  BB80 0000 0003  02                   LAB,B3   +3
          1 0000A6  CBF0 0100                            LAB,B4   256,IMO
          1 0000A8  E380 0000 0000  xent                 LNJ,B6   GHS$REG
          1 0000AB       0001                            DC       s:1349,PREL

      234     1349    6                               GOTO LOOK_AGAIN;

   1349   1 0000AC  0F81 FF65                            B        s:1276,PREL

      235     1350    6                               END;
      236     1351    6                          ELSE DO;

      237     1352                                    %UNLOCK (G=G_SLOCK);

   1357   1 0000AE  BB80 0000 0000  02                   LAB,B3   0
          1 0000B1  CBF0 0100                            LAB,B4   256,IMO
          1 0000B3  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
          1 0000B6       0001                            DC       s:1359,PREL

      238     1359    6                               PARAMS.ERR=EBADSSP;

   1359   1 0000B7  8C80 0000 0000  00                   LDI      EBADSSP
          1 0000BA  ECC7 0004                            LDB,B6   @PARAMS,AUTO
          1 0000BC  8D46 0004                            SDI      4,B6

      239     1360    6                               ALTRETURN;

   1360   1 0000BE  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      240     1361    6                               END;
      241     1362    5                          END;
      242     1363        /*E* ERROR: GJS-E$BADSSP-E
PL6.E3A0      #002=GJS$OPEN_SHARED File=GJS$SFILE.:E05TSI                        TUE 07/29/97 22:03 Page:38   
      243     1364             MESSAGE:  That shared file is now being installed.
      244     1365             DESCRIPTION:  Used internally.  The user should never see
      245     1366                           this error message.
      246     1367        */
      247     1368
      248     1369        /*D* If this is an open request, bump the use count and the
      249     1370             frequency count and return to the caller.
      250     1371        */
      251     1372    4                     IF PARAMS.FCN = %GJ_OPEN_PROC#

   1372   1 0000C1  D2C6 0002                            LLH,R5   2,B6
          1 0000C3  5D01                                 CMV,R5   1
          1 0000C4  0981 001A                            BNE      s:1385,PREL

      252     1373    5                     THEN DO;

      253     1374    5                          G$SFILE.UC = G$SFILE.UC + 1;

   1374   1 0000C6  C2C4 001F                            LLH,R4   31,B4
          1 0000C8  4E01                                 ADV,R4   1
          1 0000C9  C7C4 001F                            STH,R4   31,B4

      254     1375    5                          G$SFILE.FRQ = G$SFILE.FRQ + 1;

   1375   1 0000CB  E844 001F                            LDR,R6   31,B4
          1 0000CD  EA70 0001                            ADD,R6   1,IMO
          1 0000CF  EAC4 001F                            SRM,R6,'00FF'X    31,B4
          1 0000D1       00FF

      255     1376    5                          PARAMS.TYC.SFILE$ = ADDR(G_SFILE(I));

   1376   1 0000D2  DC80 0000 0000  xsym                 LDB,B5   GJ_SFILE_START$
          1 0000D5  B847 000B                            LDR,R3   I,AUTO
          1 0000D7  3F30                                 MLV,R3   48
          1 0000D8  BBB5                                 LAB,B3   ,B5,R3
          1 0000D9  BFC6 0007                            STB,B3   7,B6

PL6.E3A0      #002=GJS$OPEN_SHARED File=GJS$SFILE.:E05TSI                        TUE 07/29/97 22:03 Page:39   
      256     1377    5                          PARAMS.TYC.GET_PROC = 0;

   1377   1 0000DB  8746 0009                            CL       9,B6

      257     1378    5                          PARAMS.TYC.SHARE_PROC = 0;

   1378   1 0000DD  8746 000A                            CL       10,B6

      258     1379    5                          END;

      259     1380                          %UNLOCK (G=G_SLOCK);

   1385   1 0000DF  BB80 0000 0000  02                   LAB,B3   0
          1 0000E2  CBF0 0100                            LAB,B4   256,IMO
          1 0000E4  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
          1 0000E7       0001                            DC       s:1387,PREL

      260     1387    4                     RETURN;

   1387   1 0000E8  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      261     1388    4                     END;                  /* end MODTIME match        */
      262     1389
      263     1390        /*D* If the FID matches, but the MODTIME doesn't, mark the old
      264     1391             processor as being replaced.  Then when it's use count goes
      265     1392             to zero, the pages and the shared file table entry can be
      266     1393             released.
      267     1394        */
      268     1395    4                ELSE DO;

      269     1396    4                     G$SFILE.LCP6_FLGS.REP = '1'B;

   1396   1 0000EB  8944 001E                            LBT,'0100'X       30,B4
   1396   1 0000ED       0100

      270     1397    4                     END;

PL6.E3A0      #002=GJS$OPEN_SHARED File=GJS$SFILE.:E05TSI                        TUE 07/29/97 22:03 Page:40   
      271     1398    3                END;                       /* end FID match            */

      272     1399
      273     1400    2           END;                            /*DO to SFILE#              */

   1400   1 0000EE  8AC7 000B                            INC      I,AUTO
          1 0000F0  E847 000B                            LDR,R6   I,AUTO
          1 0000F2  E900 0000 0000  xsym                 CMR,R6   GJ_SFILE_MAX#
          1 0000F5  0381 FF2A                            BLE      s:1288,PREL

      274     1401
      275     1402        %EJECT;
PL6.E3A0      #002=GJS$OPEN_SHARED File=GJS$SFILE.:E05TSI                        TUE 07/29/97 22:03 Page:41   
      276     1403
      277     1404        /*D* If the file does not exist in the table, and this is not an
      278     1405             open request, ALTRET to the calling routine.
      279     1406        */
      280     1407    1      IF PARAMS.FCN ~= %GJ_OPEN_PROC#

   1407   1 0000F7  ECC7 0004                            LDB,B6   @PARAMS,AUTO
          1 0000F9  D2C6 0002                            LLH,R5   2,B6
          1 0000FB  5D01                                 CMV,R5   1
          1 0000FC  0901 0014                            BE       s:1429,PREL

      281     1408    2      THEN DO;

      282     1409                %UNLOCK (G=G_SLOCK);

   1414   1 0000FE  BB80 0000 0000  02                   LAB,B3   0
          1 000101  CBF0 0100                            LAB,B4   256,IMO
          1 000103  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
          1 000106       0001                            DC       s:1416,PREL

      283     1416    2           PARAMS.ERR=ENOPROC;

   1416   1 000107  8C80 0000 0004  00                   LDI      ENOPROC
          1 00010A  ECC7 0004                            LDB,B6   @PARAMS,AUTO
          1 00010C  8D46 0004                            SDI      4,B6

      284     1417    2           ALTRETURN;

   1417   1 00010E  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      285     1418    2           END;
      286     1419        /*E*   ERROR:   GJS-E$NOPROC-E
      287     1420               MESSAGE:  That Special Shared Processor doesn't exist.
      288     1421        */
      289     1422
      290     1423
      291     1424        /*D* If the file does not exist in the table, and this is an
PL6.E3A0      #002=GJS$OPEN_SHARED File=GJS$SFILE.:E05TSI                        TUE 07/29/97 22:03 Page:42   
      292     1425             open request, search the shared file tables for an available
      293     1426             slot so that the calling routine may then install this
      294     1427             shared file.
      295     1428        */
      296     1429    1      PARAMS.TYC.GET_PROC = 1;

   1429   1 000111  4C01                                 LDV,R4   1
          1 000112  CF46 0009                            STR,R4   9,B6

      297     1430
      298     1431    2      DO I = 1 TO GJ_SFILE_MAX#;

   1431   1 000114  CF47 000B                            STR,R4   I,AUTO
          1 000116  0F81 008D                            B        s:1472+2,PREL

   1431   1                              INSTALL_SFILE   null
      299     1432    2   INSTALL_SFILE: ;
      300     1433    2           SFILE$ = ADDR(G_SFILE(I));

   1433   1 000118  EC80 0000 0000  xsym INSTALL_SFILE   LDB,B6   GJ_SFILE_START$
          1 00011B  B847 000B                            LDR,R3   I,AUTO
          1 00011D  3F30                                 MLV,R3   48
          1 00011E  DBB6                                 LAB,B5   ,B6,R3
          1 00011F  DFC7 0007                            STB,B5   SFILE$,AUTO

      301     1434
      302     1435        /*D* When an available slot is found, move the FID, MODTIME and
      303     1436             flags to that entry.  Set the initial use count and frequency
      304     1437             count.  Mark LCP6_FLGS so that the calling routine will know
      305     1438             he is the initial user and must finish installing the shared
      306     1439             file.  Then return normally to the calling routine.
      307     1440        */
      308     1441    2           IF G$SFILE.INSTTIME = 0

   1441   1 000121  8CC5 0020                            LDI      32,B5
          1 000123  84F0 0000 0000                       SID      0,IMO
          1 000126  6981 007B                            BNEZ,R6  s:1472,PREL
PL6.E3A0      #002=GJS$OPEN_SHARED File=GJS$SFILE.:E05TSI                        TUE 07/29/97 22:03 Page:43   
          1 000128  7981 0079                            BNEZ,R7  s:1472,PREL

      309     1442    3           THEN DO;

      310     1443    3                G$SFILE.INSTTIME = 1;

   1443   1 00012A  8CF0 0000 0001                       LDI      1,IMO
          1 00012D  8D45 0020                            SDI      32,B5

      311     1444    3                G$SFILE.NAME = PARAMS.FID$->FID.NAME;

   1444   1 00012F  CCC7 0004                            LDB,B4   @PARAMS,AUTO
          1 000131  BC84                                 LDB,B3   ,B4
          1 000132  AB83                                 LAB,B2   ,B3
          1 000133  2C00                                 LDV,R2   0
          1 000134  6C20                                 LDV,R6   32
          1 000135  BB85                                 LAB,B3   ,B5
          1 000136  3C00                                 LDV,R3   0
          1 000137  0008                                 MMM

      312     1445    3                G$SFILE.ACCT = PARAMS.FID$->FID.ACCT;

   1445   1 000138  EC84                                 LDB,B6   ,B4
          1 000139  AB86                                 LAB,B2   ,B6
          1 00013A  2C20                                 LDV,R2   32
          1 00013B  6C08                                 LDV,R6   8
          1 00013C  BCC7 0007                            LDB,B3   SFILE$,AUTO
          1 00013E  3C20                                 LDV,R3   32
          1 00013F  0008                                 MMM

      313     1446    3                G$SFILE.PASS = PARAMS.FID$->FID.PASS;

   1446   1 000140  BC84                                 LDB,B3   ,B4
          1 000141  AB83                                 LAB,B2   ,B3
          1 000142  2C28                                 LDV,R2   40
          1 000143  6C08                                 LDV,R6   8
          1 000144  BCC7 0007                            LDB,B3   SFILE$,AUTO
PL6.E3A0      #002=GJS$OPEN_SHARED File=GJS$SFILE.:E05TSI                        TUE 07/29/97 22:03 Page:44   
          1 000146  3C28                                 LDV,R3   40
          1 000147  0008                                 MMM

      314     1447    3                G$SFILE.PSN = PARAMS.FID$->FID.PSN;

   1447   1 000148  BC84                                 LDB,B3   ,B4
          1 000149  AB83                                 LAB,B2   ,B3
          1 00014A  2C30                                 LDV,R2   48
          1 00014B  6C06                                 LDV,R6   6
          1 00014C  BCC7 0007                            LDB,B3   SFILE$,AUTO
          1 00014E  3C30                                 LDV,R3   48
          1 00014F  0008                                 MMM

      315     1448    3                G$SFILE.MODTIME = PARAMS.FID$->FID.MODTIME;

   1448   1 000150  BC84                                 LDB,B3   ,B4
          1 000151  8CC3 001B                            LDI      27,B3
          1 000153  ACC7 0007                            LDB,B2   SFILE$,AUTO
          1 000155  8D42 001B                            SDI      27,B2

      316     1449    3                G$SFILE.RU_FLGS = SAVE_TYPE;

   1449   1 000157  D847 0006                            LDR,R5   SAVE_TYPE,AUTO
          1 000159  DF42 001D                            STR,R5   29,B2

      317     1450    3                G$SFILE.UC = 1;

   1450   1 00015B  4C01                                 LDV,R4   1
          1 00015C  C7C2 001F                            STH,R4   31,B2

      318     1451    3                G$SFILE.FRQ = 1;

   1451   1 00015E  3C01                                 LDV,R3   1
          1 00015F  BAC2 001F                            SRM,R3,'00FF'X    31,B2
          1 000161       00FF

      319     1452    3                G$SFILE.LCP6_FLGS = %LCP6_INST#;
PL6.E3A0      #002=GJS$OPEN_SHARED File=GJS$SFILE.:E05TSI                        TUE 07/29/97 22:03 Page:45   

   1452   1 000162  A870 0200                            LDR,R2   512,IMO
          1 000164  2048                                 SOR,R2   8
          1 000165  A7C2 001E                            STH,R2   30,B2

      320     1453    3                CALL GHI$UTS(G$SFILE.INSTTIME);

   1453   1 000167  BBC2 0020                            LAB,B3   32,B2
          1 000169  BFC7 000C                            STB,B3   I+1,AUTO
          1 00016B  BBC7 000C                            LAB,B3   I+1,AUTO
          1 00016D  CBF0 0100                            LAB,B4   256,IMO
          1 00016F  E380 0000 0000  xent                 LNJ,B6   GHI$UTS
          1 000172       0001                            DC       s:1454,PREL

      321     1454    3                G$SFILE.INSTTIME = G$SFILE.INSTTIME + G_BOOTTIME;

   1454   1 000173  ECC7 0007                            LDB,B6   SFILE$,AUTO
          1 000175  8CC6 0020                            LDI      32,B6
          1 000177  8400 0000 0000  xsym                 AID      G_BOOTTIME
          1 00017A  8D46 0020                            SDI      32,B6

      322     1455    3                PARAMS.PNUM = I;

   1455   1 00017C  D847 000B                            LDR,R5   I,AUTO
          1 00017E  DCC7 0004                            LDB,B5   @PARAMS,AUTO
          1 000180  DAC5 0002                            SRM,R5,'00FF'X    2,B5
          1 000182       00FF

      323     1456    3                PARAMS.TYC.SFILE$ = SFILE$;

   1456   1 000183  EFC5 0007                            STB,B6   7,B5

      324     1457    3                PARAMS.TYC.SHARE_PROC = %GJ_SHARE#;

   1457   1 000185  6C01                                 LDV,R6   1
          1 000186  EF45 000A                            STR,R6   10,B5

PL6.E3A0      #002=GJS$OPEN_SHARED File=GJS$SFILE.:E05TSI                        TUE 07/29/97 22:03 Page:46   
      325     1458
      326     1459    3                GJ_SFILE_CURR# = GJ_SFILE_CURR# +1;

   1459   1 000188  8A80 0000 0000  xsym                 INC      GJ_SFILE_CURR#

      327     1460    3                IF GJ_SFILE_CURR# > GJ_SFILE_PEAK#

   1460   1 00018B  D800 0000 0000  xsym                 LDR,R5   GJ_SFILE_CURR#
          1 00018E  D900 0000 0000  xsym                 CMR,R5   GJ_SFILE_PEAK#
          1 000191  0381 0004                            BLE      s:1468,PREL

      328     1461    3                THEN GJ_SFILE_PEAK# = GJ_SFILE_CURR#;

   1461   1 000193  DF00 0000 0000  xsym                 STR,R5   GJ_SFILE_PEAK#

      329     1462
      330     1463                     %UNLOCK (G=G_SLOCK);

   1468   1 000196  BB80 0000 0000  02                   LAB,B3   0
          1 000199  CBF0 0100                            LAB,B4   256,IMO
          1 00019B  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
          1 00019E       0001                            DC       s:1470,PREL

      331     1470    3                RETURN;

   1470   1 00019F  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      332     1471    3                END;
      333     1472    2           END;                            /* DO to SFILE#             */

   1472   1 0001A2  8AC7 000B                            INC      I,AUTO
          1 0001A4  E847 000B                            LDR,R6   I,AUTO
          1 0001A6  E900 0000 0000  xsym                 CMR,R6   GJ_SFILE_MAX#
          1 0001A9  0381 FF6E                            BLE      s:1431,PREL

      334     1473
      335     1474        /*D* When there is no available slot, attempt to free one by calling
PL6.E3A0      #002=GJS$OPEN_SHARED File=GJS$SFILE.:E05TSI                        TUE 07/29/97 22:03 Page:47   
      336     1475             GJS$REL_SLOT.  Then if there is one available, go use it.
      337     1476        */
      338     1477    1      I = 0;

   1477   1 0001AB  8747 000B                            CL       I,AUTO

      339     1478    1      CALL GJS$REL_SLOT(I)

   1478   1 0001AD  EBC7 000B                            LAB,B6   I,AUTO
          1 0001AF  EFC7 000C                            STB,B6   I+1,AUTO
          1 0001B1  BBC7 000C                            LAB,B3   I+1,AUTO
          1 0001B3  CBF0 0100                            LAB,B4   256,IMO
          1 0001B5  E380 0000 0000  xent                 LNJ,B6   GJS$REL_SLOT
          1 0001B8       0006                            DC       s:1489,PREL

      340     1479    2      WHENRETURN DO;

      341     1480    2           GJ_SFILE_REL_4SFILE = GJ_SFILE_REL_4SFILE +1;

   1480   1 0001B9  8A80 0000 0000  xsym                 INC      GJ_SFILE_REL_4SFILE

      342     1481    2           GOTO INSTALL_SFILE;

   1481   1 0001BC  0F81 FF5B                            B        s:1431,PREL

      343     1482    2           END;
      344     1483
      345     1484        /*D* When all entries in the shared file tables are truly in use,
      346     1485            indicate that none are available in the returned parameters.
      347     1486            This is still a normal return to the caller.
      348     1487        */
      349     1488    2      WHENALTRETURN DO;

      350     1489    2           GJ_SFILE_TBL_FULL = GJ_SFILE_TBL_FULL +1;

   1489   1 0001BE  8A80 0000 0000  xsym                 INC      GJ_SFILE_TBL_FULL

PL6.E3A0      #002=GJS$OPEN_SHARED File=GJS$SFILE.:E05TSI                        TUE 07/29/97 22:03 Page:48   
      351     1490    2           PARAMS.ERR = ESTING;

   1490   1 0001C1  8C80 0000 0006  00                   LDI      ESTING
          1 0001C4  ECC7 0004                            LDB,B6   @PARAMS,AUTO
          1 0001C6  8D46 0004                            SDI      4,B6

      352     1491    2           PARAMS.TYC.SFILE$ = ADDR(NIL);

   1491   1 0001C8  DB80 0000 0000                       LAB,B5   0
          1 0001CB  DFC6 0007                            STB,B5   7,B6

      353     1492    2           PARAMS.TYC.SHARE_PROC = %GJ_DONTSHARE#;

   1492   1 0001CD  8746 000A                            CL       10,B6

      354     1493                %UNLOCK (G=G_SLOCK);

   1498   1 0001CF  BB80 0000 0000  02                   LAB,B3   0
          1 0001D2  CBF0 0100                            LAB,B4   256,IMO
          1 0001D4  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
          1 0001D7       0001                            DC       s:1500,PREL

      355     1500    2           RETURN;

   1500   1 0001D8  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      356     1501    2           END;
      357     1502        /*E* ERROR: GJS-E$STING-E
      358     1503             MESSAGE:  Attempt to open (create) a shared file and there
      359     1504                       are no available entries in the shared file table.
      360     1505        */
      361     1506
      362     1507    1   END GJS$OPEN_SHARED;
      363     1508        %EOD;

PL6.E3A0      #002=GJS$OPEN_SHARED File=GJS$SFILE.:E05TSI                        TUE 07/29/97 22:03 Page:49   
--  Include file information  --

   GH_SCHD_E.:E05TOU  is referenced.
   J_ERRORS_C.:E05TOU  is referenced.
   GH_GATE_M.:E05TOU  cannot be made into a system file and is referenced.
   GJ_MACROS_M.:E05TOU  is referenced.
   G_SFILE_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure GJS$OPEN_SHARED.
PL6.E3A0      #002=GJS$OPEN_SHARED File=GJS$SFILE.:E05TSI                        TUE 07/29/97 22:03 Page:50   

 **** Variables and constants ****

  ****  Section 000 RoData GJS$OPEN_SHARED

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(32)    r     1 EBADSSP                    4-0-0/w STRC(32)    r     1 ENOPROC
     6-0-0/w STRC(32)    r     1 ESTING                     2-0-0/w STRC(32)    r     1 EWRONGTYPE

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @PARAMS                    B-0-0/w UBIN(16)    r     1 I
    *0-0-0/w STRC(176)   r     1 PARAMS                     6-0-0/b BIT (16)    r     1 SAVE_TYPE
     7-0-0/w PTR         r     1 SFILE$                     9-0-0/w PTR         r     1 T$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN(16)    r     1 GJ_SFILE_CURR#             0-0-0/w UBIN(16)    r     1 GJ_SFILE_MAX#
     0-0-0/w UBIN(16)    r     1 GJ_SFILE_PEAK#             0-0-0/w UBIN(16)    r     1 GJ_SFILE_REL_4SFILE
     0-0-0/w PTR         r     1 GJ_SFILE_START$            0-0-0/w UBIN(16)    r     1 GJ_SFILE_TBL_FULL
     0-0-0/w UBIN(32)    r     1 G_BOOTTIME                 0-0-0/w STRC(48)    r     1 G_SLOCK

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(464)   r     1 FID                        0-0-0/c ASTR(8)     r     1 G$NAME
     0-0-0/w STRC(768)   r     1 G$SFILE
     0-0-0/w STRC(768)   r     1 G_SFILE(0:0)
PL6.E3A0      #002=GJS$OPEN_SHARED File=GJS$SFILE.:E05TSI                        TUE 07/29/97 22:03 Page:51   


   Procedure GJS$OPEN_SHARED requires 475 words for executable code.
   Procedure GJS$OPEN_SHARED requires 16 words of local(AUTO) storage.
PL6.E3A0      #002=GJS$OPEN_SHARED File=GJS$SFILE.:E05TSI                        TUE 07/29/97 22:03 Page:52   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=GJS$OPEN_SHARED File=GJS$SFILE.:E05TSI                        TUE 07/29/97 22:03 Page:53   
          MINI XREF LISTING

EBADSSP
      1091**DCL      1359>>ASSIGN
ENOPROC
      1185**DCL      1416>>ASSIGN
ESTING
      1232**DCL      1490>>ASSIGN
EWRONGTYPE
      1138**DCL      1322>>ASSIGN
FID.ACCT
       975**DCL      1293>>IF       1445>>ASSIGN
FID.MODTIME
       987**DCL      1303>>IF       1448>>ASSIGN
FID.NAME
       970**DCL      1444>>ASSIGN
FID.PASS
       979**DCL      1293>>IF       1446>>ASSIGN
FID.PSN
       983**DCL      1293>>IF       1447>>ASSIGN
G$NAME
      1066**DCL      1293>>IF       1293>>IF
G$NAME.L
      1067**DCL      1068--IMP-SIZ  1293>>IF       1293>>IF
G$SFILE.ACCT
      1047**DCL      1293>>IF       1445<<ASSIGN
G$SFILE.FRQ
      1060**DCL      1375<<ASSIGN   1375>>ASSIGN   1451<<ASSIGN
G$SFILE.INSTTIME
      1061**DCL      1441>>IF       1443<<ASSIGN   1453<>CALL     1454<<ASSIGN   1454>>ASSIGN
G$SFILE.LCP6_FLGS
      1056**DCL      1452<<ASSIGN
G$SFILE.LCP6_FLGS.INST
      1060**DCL      1337>>IF
PL6.E3A0      #002=GJS$OPEN_SHARED File=GJS$SFILE.:E05TSI                        TUE 07/29/97 22:03 Page:54   
G$SFILE.LCP6_FLGS.REP
      1060**DCL      1293>>IF       1396<<ASSIGN
G$SFILE.LIB_WDSZ_DATA
      1061**DCL      1062--REDEF
G$SFILE.MODTIME
      1047**DCL      1303>>IF       1448<<ASSIGN
G$SFILE.NAME
      1047**DCL      1289--ASSIGN   1444<<ASSIGN
G$SFILE.PASS
      1047**DCL      1293>>IF       1446<<ASSIGN
G$SFILE.PSN
      1047**DCL      1293>>IF       1447<<ASSIGN
G$SFILE.RU_FLGS
      1048**DCL      1306>>ASSIGN   1313>>IF       1449<<ASSIGN
G$SFILE.UC
      1060**DCL      1374<<ASSIGN   1374>>ASSIGN   1450<<ASSIGN
GHH$LOCK
       601**DCL-ENT  1284--CALL
GHH$UNLOCK
       601**DCL-ENT  1320--CALL     1346--CALL     1357--CALL     1385--CALL     1414--CALL     1468--CALL
      1498--CALL
GHI$UTS
      1071**DCL-ENT  1453--CALL
GHS$REG
      1072**DCL-ENT  1348--CALL
GJS$REL_SLOT
      1073**DCL-ENT  1478--CALL
GJ_SFILE_CURR#
       957**DCL      1459<<ASSIGN   1459>>ASSIGN   1460>>IF       1461>>ASSIGN
GJ_SFILE_MAX#
       956**DCL      1287>>DOINDEX  1431>>DOINDEX
GJ_SFILE_PEAK#
       958**DCL      1460>>IF       1461<<ASSIGN
GJ_SFILE_REL_4SFILE
       960**DCL      1480<<ASSIGN   1480>>ASSIGN
GJ_SFILE_START$
PL6.E3A0      #002=GJS$OPEN_SHARED File=GJS$SFILE.:E05TSI                        TUE 07/29/97 22:03 Page:55   
       959**DCL      1006--IMP-PTR  1288>>ASSIGN   1376>>ASSIGN   1433>>ASSIGN
GJ_SFILE_TBL_FULL
       961**DCL      1489<<ASSIGN   1489>>ASSIGN
G_BOOTTIME
       955**DCL      1454>>ASSIGN
G_SFILE
      1006**DCL      1288--ASSIGN   1376--ASSIGN   1433--ASSIGN
G_SFILE.LIB_WDSZ_DATA
      1024**DCL      1025--REDEF
G_SLOCK
       948**DCL      1284<>CALL     1320<>CALL     1346<>CALL     1357<>CALL     1385<>CALL     1414<>CALL
      1468<>CALL     1498<>CALL
I
       933**DCL      1287<<DOINDEX  1288>>ASSIGN   1305>>ASSIGN   1376>>ASSIGN   1431<<DOINDEX  1433>>ASSIGN
      1455>>ASSIGN   1477<<ASSIGN   1478<>CALL
INSTALL_SFILE
      1431**LABEL    1481--GOTO
LOOK_AGAIN
      1276**LABEL    1349--GOTO
PARAMS
       793**DCL        24--PROC
PARAMS.ERR
       853**DCL      1276<<ASSIGN   1322<<ASSIGN   1359<<ASSIGN   1416<<ASSIGN   1490<<ASSIGN
PARAMS.FCN
       799**DCL      1372>>IF       1407>>IF
PARAMS.FID$
       794**DCL      1293>>IF       1293>>IF       1293>>IF       1293>>IF       1293>>IF       1303>>IF
      1444>>ASSIGN   1445>>ASSIGN   1446>>ASSIGN   1447>>ASSIGN   1448>>ASSIGN
PARAMS.PNUM
       820**DCL      1275<<ASSIGN   1305<<ASSIGN   1455<<ASSIGN
PARAMS.PTYPE
       827**DCL      1274>>ASSIGN   1306<<ASSIGN
PARAMS.TYC.GET_PROC
       900**DCL      1377<<ASSIGN   1429<<ASSIGN
PARAMS.TYC.SFILE$
       896**DCL      1376<<ASSIGN   1456<<ASSIGN   1491<<ASSIGN
PL6.E3A0      #002=GJS$OPEN_SHARED File=GJS$SFILE.:E05TSI                        TUE 07/29/97 22:03 Page:56   
PARAMS.TYC.SHARE_PROC
       910**DCL      1378<<ASSIGN   1457<<ASSIGN   1492<<ASSIGN
PARAMS.WAIT
       883**DCL      1339>>IF
SAVE_TYPE
       930**DCL      1274<<ASSIGN   1311>>IF       1313>>IF       1449>>ASSIGN
SFILE$
       931**DCL      1045--IMP-PTR  1288<<ASSIGN   1289>>ASSIGN   1293>>IF       1293>>IF       1293>>IF
      1293>>IF       1303>>IF       1306>>ASSIGN   1313>>IF       1337>>IF       1374>>ASSIGN   1374>>ASSIGN
      1375>>ASSIGN   1375>>ASSIGN   1396>>ASSIGN   1433<<ASSIGN   1441>>IF       1443>>ASSIGN   1444>>ASSIGN
      1445>>ASSIGN   1446>>ASSIGN   1447>>ASSIGN   1448>>ASSIGN   1449>>ASSIGN   1450>>ASSIGN   1451>>ASSIGN
      1452>>ASSIGN   1453>>CALL     1454>>ASSIGN   1454>>ASSIGN   1456>>ASSIGN
T$
       932**DCL      1289<<ASSIGN   1293>>IF       1293>>IF

PL6.E3A0      #003=GJS$REL_SHARED File=GJS$SFILE.:E05TSI                         TUE 07/29/97 22:03 Page:57   
      364        1        /*T***********************************************************/
      365        2        /*T*                                                         */
      366        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      367        4        /*T*                                                         */
      368        5        /*T***********************************************************/
      369        6
      370        7        /*F*  NAME: GJS$REL_SHARED
      371        8
      372        9              PURPOSE:  To release entry(s) in the shared file table.
      373       10
      374       11             DESCRIPTION:
      375       12                        The GJS$REL_SHARED module contains two entry points.
      376       13
      377       14                        The first, GJS$REL_SLOT, is used by the Step logic
      378       15                        to either a) release a specified SFILE entry when that
      379       16                        file has been replaced, or b) to find and release any
      380       17                        currently unused file in order that an Fprg or library
      381       18                        in the process of being fetched my be made shared.
      382       19
      383       20                        The other, GJS$REL_ALL, is used by memory management
      384       21                        to release all pages occupied by shared files that
      385       22                        have no current user associated with them.
      386       23
      387       24              ENTRY:    %LOCK (G_SLOCK);
      388       25                        CALL GJS$REL_SLOT(PNUM) ALTRET(label);
      389       26
      390       27                        PNUM - if 0 will search the entire table for
      391       28                               a slot to free and set PNUM to the index
      392       29                               of the slot that is released.
      393       30
      394       31                             - if non-zero will attempt to release the
      395       32                               specified slot.
      396       33
      397       34                        Returns if one slot is released.
      398       35                        ALTRETs if all, or the specified one, are busy.
      399       36
      400       37                        Always returns with the gate still locked.
PL6.E3A0      #003=GJS$REL_SHARED File=GJS$SFILE.:E05TSI                         TUE 07/29/97 22:03 Page:58   
      401       38
      402       39              ENTRY:    CALL GJS$REL_ALL(PNUM) ALTRET(label);
      403       40
      404       41                        PNUM - is to contain the number of pages that
      405       42                               the caller hopes to obtain by releasing
      406       43                               currently unused shared files.
      407       44
      408       45                        Returns if the requested number of pages have  been
      409       46                        released, otherwise, ALTRETs.
      410       47
      411       48              INPUT:    PNUM - UBIN WORD
      412       49
      413       50        */
      414       51
      415       52        /*D*   NAME: GJS$REL_SHARED
      416       53
      417       54               DESCRIPTION:
      418       55        */
      419       56
      420       57        GJS$REL_SHARED: PROC(PNUM) ALTRET;
      421       58
      422       59        %INCLUDE G_SFILE_M;
      423      119        %INCLUDE GH_GATE_M;
      424      160
      425      161                                                /* Input parameters         */
      426      162    1   DCL PNUM UBIN;
      427      163
      428      164                                                /* AUTO Storage             */
      429      165    1   DCL I UBIN;
      430      166    1   DCL J UBIN;
      431      167    1   DCL SFILE$ PTR;
      432      168    1   DCL START UBIN;
      433      169    1   DCL FINISH UBIN;
      434      170    1   DCL PP_SEG$ PTR;
      435      171    1   DCL PAGE# UBIN;
      436      172    1   DCL NO_PGS UBIN;
      437      173    1   DCL PG_SIZE UBIN;
PL6.E3A0      #003=GJS$REL_SHARED File=GJS$SFILE.:E05TSI                         TUE 07/29/97 22:03 Page:59   
      438      174    1   DCL REL_ALL UBIN;
      439      175    1   DCL REL_LIB UBIN;
      440      176    1   DCL PGS_RELEASED UBIN;
      441      177
      442      178                                                /* External data            */
      443      179    1   DCL GH_LEV_SCHD UBIN SYMREF;
      444      180        %GATE (FPTN=G_SLOCK, STCLASS=SYMREF);
      445      199    1   DCL GJ_SFILE_LIB_DATA UBIN SYMREF;
      446      200    1   DCL GJ_SFILE_CUR_DATA UBIN SYMREF;
      447      201    1   DCL GJ_SFILE_CUR_PROC UBIN SYMREF;
      448      202    1   DCL GJ_SFILE_CURR#    UBIN SYMREF;
      449      203    1   DCL GJ_SFILE_REL_4MEM UBIN SYMREF;
      450      204    1   DCL GJ_SFILE_MAX#     UBIN SYMREF;
      451      205    1   DCL GJ_SFILE_START$ PTR SYMREF READONLY;
      452      206
      453      207                                                /* BASED Data               */
      454      208        %G$SFILE (FPTN=G_SFILE,STCLASS="BASED(GJ_SFILE_START$)");
      455      245        %G$SFILE (FPTN=G$SFILE,STCLASS="BASED(SFILE$)",ARRAYED=NO);
      456      282
      457      283    1   DCL B$PP_SEG(0:6) UBIN BASED;           /* G$SFILE.PP_SEGn          */
      458      284
      459      285                                                /* External Routines        */
      460      286    1   DCL GHH$LEV ENTRY(1);
      461      287    1   DCL GHQ$MCLEND ENTRY ALTRET;
      462      288    1   DCL GMA$RELPS ENTRY(2) ALTRET;
      463      289
      464      290        %EJECT;
PL6.E3A0      #003=GJS$REL_SHARED File=GJS$SFILE.:E05TSI                         TUE 07/29/97 22:03 Page:60   
      465      291    1      ALTRETURN/*calls to GJS$REL_SHARED are not allowed*/;
      466      292
      467      293        /*D* If called to release entries in the SFILE table via GJS$REL_ALL,
      468      294             initialize auto to search the entire table and release all
      469      295             entries where the use count is zero.
      470      296        */
      471      297    1   GJS$REL_ALL: ENTRY(PNUM) ALTRET;
      472      298    1      GJ_SFILE_REL_4MEM = GJ_SFILE_REL_4MEM +1;
      473      299    1      REL_ALL = 1;
      474      300    1      PGS_RELEASED = 0;
      475      301    1      REL_LIB = 0;
      476      302    1   RETRY: ;
      477      303           %LOCK (G=G_SLOCK);
      478      310    1      GOTO DO_ALL;
      479      311
      480      312        /*D* If called via the GJS$REL_SLOT entry, release one entry only.
      481      313             If the input parameter "PNUM" is zero, get set to search the
      482      314             entire table for a slot to release.
      483      315        */
      484      316    1   GJS$REL_SLOT: ENTRY(PNUM) ALTRET;
      485      317    1      REL_ALL = 0;
      486      318    1      PGS_RELEASED = 0;
      487      319    1      IF PNUM = 0
      488      320    2      THEN DO;
      489      321    2           REL_LIB = 0;
      490      322    2   DO_ALL: ;
      491      323    2           START = 1;
      492      324    2           FINISH = GJ_SFILE_MAX#;
      493      325    2           END;
      494      326
      495      327        /*D* Otherwise, get set to look only at the specified entry.
      496      328        */
      497      329    2      ELSE DO;
      498      330    2           REL_LIB = 1;
      499      331    2           START = PNUM;
      500      332    2           FINISH = PNUM;
      501      333    2           END;
PL6.E3A0      #003=GJS$REL_SHARED File=GJS$SFILE.:E05TSI                         TUE 07/29/97 22:03 Page:61   
      502      334
      503      335        /*D* Check the INSTTIME field for non-zero to determine if we have an
      504      336             active entry, and check the UC to be sure no users are associated.
      505      337             If called to gather memory, don't release libraries.
      506      338        */
      507      339    2      DO I = START TO FINISH;
      508      340    2           SFILE$ = ADDR(G_SFILE(I));
      509      341
      510      342    2           IF (G$SFILE.INSTTIME ~= 0) AND (G$SFILE.UC = 0)
      511      343    3           THEN DO;
      512      344    3                IF (G$SFILE.RU_FLGS.LIB) AND (REL_LIB = 0)
      513      345    3                THEN EXIT;
      514      346
      515      347        /*    OK to release it.
      516      348        */
      517      349    3                PP_SEG$ = ADDR(G$SFILE.PP_SEG1);
      518      350
      519      351        /*D* If this shared file may be released, do so by calling
      520      352             RELEASE_PAGES to return the physical pages for each read
      521      353             only segment, data segment and then procedure segment.
      522      354        */
      523      355    3                IF G$SFILE.PGSZ_ROS ~= 0
      524      356    4                THEN DO;
      525      357    4                     NO_PGS = G$SFILE.PGSZ_ROS;
      526      358    4                     CALL GMA$RELPS(G$SFILE.PP_ROS,NO_PGS);
      527      359    4                     GJ_SFILE_CUR_DATA = GJ_SFILE_CUR_DATA - NO_PGS;
      528      360    4                     PGS_RELEASED = PGS_RELEASED + NO_PGS;
      529      361    4                     END;
      530      362
      531      363    3                IF G$SFILE.PGSZ_DATA ~= 0
      532      364    4                THEN DO;
      533      365    4                     IF G$SFILE.RU_FLGS.LIB
      534      366    5                     THEN DO;
      535      367    5                          PG_SIZE = G$SFILE.PGSZ_DATA;
      536      368    5                          GJ_SFILE_LIB_DATA = GJ_SFILE_LIB_DATA - PG_SIZE;
      537      369    5                          END;
      538      370
PL6.E3A0      #003=GJS$REL_SHARED File=GJS$SFILE.:E05TSI                         TUE 07/29/97 22:03 Page:62   
      539      371    5                     ELSE DO;
      540      372    5                          PG_SIZE = G$SFILE.USR_DATA.PGSZ_DATA1;
      541      373    5                          J = G$SFILE.SEG_1ST_DATA;
      542      374    5                          GJ_SFILE_CUR_DATA = GJ_SFILE_CUR_DATA - PG_SIZE;
      543      375    5                          CALL RELEASE_PAGES;
      544      376
      545      377    5                          PG_SIZE = G$SFILE.PGSZ_DATA - G$SFILE.USR_DATA.PGSZ_DATA1;
      546      378    5                          G$SFILE.SEG_1ST_DATA = G$SFILE.SEG_1ST_DATA + 1;
      547      379    5                          END;
      548      380
      549      381    4                     IF NOT(G$SFILE.RU_FLGS.LIB)
      550      382    4                     THEN GJ_SFILE_CUR_DATA = GJ_SFILE_CUR_DATA - PG_SIZE;
      551      383
      552      384    5                     DO J=G$SFILE.SEG_1ST_DATA TO G$SFILE.SEG_1ST_PROC-1;
      553      385    5                          CALL RELEASE_PAGES;
      554      386    5                          END;
      555      387
      556      388    4                     END;
      557      389
      558      390    3                IF G$SFILE.PGSZ_PROC ~= 0
      559      391    4                THEN DO;
      560      392    4                     PG_SIZE = G$SFILE.PGSZ_PROC;
      561      393    4                     GJ_SFILE_CUR_PROC = GJ_SFILE_CUR_PROC - PG_SIZE;
      562      394
      563      395    5                     DO J=G$SFILE.SEG_1ST_PROC TO 6;
      564      396    5                          CALL RELEASE_PAGES;
      565      397    5                          END;
      566      398
      567      399    4                     END;
      568      400
      569      401        %EJECT;
PL6.E3A0      #003=GJS$REL_SHARED File=GJS$SFILE.:E05TSI                         TUE 07/29/97 22:03 Page:63   
      570      402        /*D* Release the entry in the shared file tables by setting
      571      403             the entry to zero.
      572      404        */
      573      405    3                G$SFILE = '0'B;
      574      406    3                GJ_SFILE_CURR# = GJ_SFILE_CURR# -1;
      575      407
      576      408        /*D*  If called to release a specified entry, or to free up one
      577      409              entry, return the index to the entry just released and
      578      410              return to the caller.
      579      411        */
      580      412    3                IF (REL_ALL = 0)
      581      413    4                THEN DO;
      582      414    4                     PNUM = I;
      583      415    4                     RETURN;
      584      416    4                     END;
      585      417
      586      418        /*D*  If called to free mem from unused entries, unlock the gate
      587      419              and call QEND to prevent Watch Dog Timer Runout.
      588      420              Then back up to search the entire table again until all
      589      421              entries with no current user are released.
      590      422        */
      591      423    4                ELSE DO;
      592      424                          %UNLOCK (G=G_SLOCK);
      593      431    4                     IF PNUM <= PGS_RELEASED
      594      432    4                     THEN RETURN;
      595      433
      596      434    4   TSTQEND:          CALL GHQ$MCLEND ALTRET(QEND);
      597      435
      598      436    5                     DO WHILE ('0'B);
      599      437    5   QEND:                  CALL GHH$LEV(GH_LEV_SCHD);
      600      438    5                          GOTO TSTQEND;
      601      439    5                          END;
      602      440
      603      441    4                     GOTO RETRY;
      604      442    4                     END/*do if rel_all ~= 0*/;
      605      443
      606      444    3                END/*do if UC=0*/;
PL6.E3A0      #003=GJS$REL_SHARED File=GJS$SFILE.:E05TSI                         TUE 07/29/97 22:03 Page:64   
      607      445    2           END/*do start to finish*/;
      608      446
      609      447        %EJECT;
PL6.E3A0      #003=GJS$REL_SHARED File=GJS$SFILE.:E05TSI                         TUE 07/29/97 22:03 Page:65   
      610      448        /*D*  If no unused entries can be found after searching the entire
      611      449              table, or if the specific entry as specified by the call, has
      612      450              a non-zero use count, ALTRET to the caller.
      613      451        */
      614      452    1      IF REL_ALL = 0 THEN ALTRETURN;
      615      453
      616      454        /*D*  If called to free up memory pages, check to see if the first
      617      455              pass through the table has obtained enough to satisfy the
      618      456              callers request.  If not, make another pass through the table
      619      457              to also release the pages occupied by run-time libraries with
      620      458              not current users.  If this fails to release enough pages,
      621      459              ALTRET to the GJS$REL_ALL caller.
      622      460        */
      623      461           %UNLOCK (G=G_SLOCK);
      624      468    1      IF PNUM <= PGS_RELEASED
      625      469    1      THEN RETURN;
      626      470    2      ELSE DO;
      627      471    2           IF REL_LIB = 1 THEN ALTRETURN;
      628      472    2           REL_LIB = 1/*release unused libraries too*/;
      629      473                %LOCK (G=G_SLOCK);
      630      480    2           GOTO DO_ALL;
      631      481    2           END;
      632      482        %EJECT;
PL6.E3A0      #003=GJS$REL_SHARED File=GJS$SFILE.:E05TSI                         TUE 07/29/97 22:03 Page:66   
      633      483
      634      484        /*I* NAME: RELEASE_PAGES
      635      485
      636      486             PURPOSE: To release the pages assigned to a specified segment.
      637      487
      638      488             CALL:   J = index into G$SFILE.PP_SEGn
      639      489                     PG_SIZE = maximum nunber of pages to release
      640      490                     CALL RELEASE_PAGES;
      641      491
      642      492             DESCRIPTION:  GMA$RELPGS is called to release the pages.  If
      643      493                     PG_SIZE is greater than 256, only 256 will actually be
      644      494                     released.  In any event, PG_SIZE will be decremented
      645      495                     by the number released.
      646      496        */
      647      497
      648      498    1   RELEASE_PAGES: PROC;
      649      499    2      PAGE# = PP_SEG$->B$PP_SEG(J);
      650      500
      651      501    2      IF PG_SIZE > 256
      652      502    2      THEN NO_PGS = 256;
      653      503    2      ELSE NO_PGS = PG_SIZE;
      654      504
      655      505    2      PG_SIZE = PG_SIZE - NO_PGS;
      656      506
      657      507    2      IF NO_PGS ~= 0
      658      508    2      THEN CALL GMA$RELPS(PAGE#,NO_PGS);
      659      509
      660      510    2      PGS_RELEASED = PGS_RELEASED + NO_PGS;
      661      511    2      PP_SEG$->B$PP_SEG(J) = 0;
      662      512    2   END RELEASE_PAGES;
      663      513    1   END GJS$REL_SHARED;

PL6.E3A0      #003=GJS$REL_SHARED File=GJS$SFILE.:E05TSI                         TUE 07/29/97 22:03 Page:67   
--  Include file information  --

   GH_GATE_M.:E05TOU  cannot be made into a system file and is referenced.
   G_SFILE_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure GJS$REL_SHARED.

   Procedure GJS$REL_SHARED requires 437 words for executable code.
   Procedure GJS$REL_SHARED requires 26 words of local(AUTO) storage.

    No errors detected in file GJS$SFILE.:E05TSI    .

PL6.E3A0      #003=GJS$REL_SHARED File=GJS$SFILE.:E05TSI                         TUE 07/29/97 22:03 Page:68   

 Object Unit name= GJS$REL_SHARED                             File name= GJS$SFILE.:E05TOU
 UTS= JUL 29 '97 22:03:47.76 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none   437    1B5  GJS$REL_SHARED
    1  RoData even  none     4      4  GJS$REL_SHARED

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        1  GJS$REL_SHARED
     0      8          yes     yes      Std        1  GJS$REL_ALL
     0     22          yes     yes      Std        1  GJS$REL_SLOT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 GHH$LOCK
 yes     yes           Std       1 GHH$UNLOCK
         yes           Std       1 GHH$LEV
 yes     yes           Std       2 GMA$RELPS
 yes     yes           Std       0 GHQ$MCLEND
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_AALT
                       nStd      0 X6A_ARET
PL6.E3A0      #003=GJS$REL_SHARED File=GJS$SFILE.:E05TSI                         TUE 07/29/97 22:03 Page:69   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     GH_LEV_SCHD                           G_SLOCK                               GJ_SFILE_LIB_DATA
     GJ_SFILE_CUR_DATA                     GJ_SFILE_CUR_PROC                     GJ_SFILE_CURR#
     GJ_SFILE_REL_4MEM                     GJ_SFILE_MAX#                    r    GJ_SFILE_START$
r    G$ROS$
PL6.E3A0      #003=GJS$REL_SHARED File=GJS$SFILE.:E05TSI                         TUE 07/29/97 22:03 Page:70   


      364        1        /*T***********************************************************/
      365        2        /*T*                                                         */
      366        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      367        4        /*T*                                                         */
      368        5        /*T***********************************************************/
      369        6
      370        7        /*F*  NAME: GJS$REL_SHARED
      371        8
      372        9              PURPOSE:  To release entry(s) in the shared file table.
      373       10
      374       11             DESCRIPTION:
      375       12                        The GJS$REL_SHARED module contains two entry points.
      376       13
      377       14                        The first, GJS$REL_SLOT, is used by the Step logic
      378       15                        to either a) release a specified SFILE entry when that
      379       16                        file has been replaced, or b) to find and release any
      380       17                        currently unused file in order that an Fprg or library
      381       18                        in the process of being fetched my be made shared.
      382       19
      383       20                        The other, GJS$REL_ALL, is used by memory management
      384       21                        to release all pages occupied by shared files that
      385       22                        have no current user associated with them.
      386       23
      387       24              ENTRY:    %LOCK (G_SLOCK);
      388       25                        CALL GJS$REL_SLOT(PNUM) ALTRET(label);
      389       26
      390       27                        PNUM - if 0 will search the entire table for
      391       28                               a slot to free and set PNUM to the index
      392       29                               of the slot that is released.
      393       30
      394       31                             - if non-zero will attempt to release the
      395       32                               specified slot.
      396       33
      397       34                        Returns if one slot is released.
      398       35                        ALTRETs if all, or the specified one, are busy.
      399       36
PL6.E3A0      #003=GJS$REL_SHARED File=GJS$SFILE.:E05TSI                         TUE 07/29/97 22:03 Page:71   
      400       37                        Always returns with the gate still locked.
      401       38
      402       39              ENTRY:    CALL GJS$REL_ALL(PNUM) ALTRET(label);
      403       40
      404       41                        PNUM - is to contain the number of pages that
      405       42                               the caller hopes to obtain by releasing
      406       43                               currently unused shared files.
      407       44
      408       45                        Returns if the requested number of pages have  been
      409       46                        released, otherwise, ALTRETs.
      410       47
      411       48              INPUT:    PNUM - UBIN WORD
      412       49
      413       50        */
      414       51
      415       52        /*D*   NAME: GJS$REL_SHARED
      416       53
      417       54               DESCRIPTION:
      418       55        */
      419       56
      420       57        GJS$REL_SHARED: PROC(PNUM) ALTRET;

     57   0 000000  D380 0000 0000  xent GJS$REL_SHARED  LNJ,B5   X6A_AUTO_1
          0 000003       001A 0001                       DC       26,1

      421       58
      422       59        %INCLUDE G_SFILE_M;
      423      119        %INCLUDE GH_GATE_M;
      424      160
      425      161                                                /* Input parameters         */
      426      162    1   DCL PNUM UBIN;
      427      163
      428      164                                                /* AUTO Storage             */
      429      165    1   DCL I UBIN;
      430      166    1   DCL J UBIN;
      431      167    1   DCL SFILE$ PTR;
      432      168    1   DCL START UBIN;
PL6.E3A0      #003=GJS$REL_SHARED File=GJS$SFILE.:E05TSI                         TUE 07/29/97 22:03 Page:72   
      433      169    1   DCL FINISH UBIN;
      434      170    1   DCL PP_SEG$ PTR;
      435      171    1   DCL PAGE# UBIN;
      436      172    1   DCL NO_PGS UBIN;
      437      173    1   DCL PG_SIZE UBIN;
      438      174    1   DCL REL_ALL UBIN;
      439      175    1   DCL REL_LIB UBIN;
      440      176    1   DCL PGS_RELEASED UBIN;
      441      177
      442      178                                                /* External data            */
      443      179    1   DCL GH_LEV_SCHD UBIN SYMREF;
      444      180        %GATE (FPTN=G_SLOCK, STCLASS=SYMREF);
      445      199    1   DCL GJ_SFILE_LIB_DATA UBIN SYMREF;
      446      200    1   DCL GJ_SFILE_CUR_DATA UBIN SYMREF;
      447      201    1   DCL GJ_SFILE_CUR_PROC UBIN SYMREF;
      448      202    1   DCL GJ_SFILE_CURR#    UBIN SYMREF;
      449      203    1   DCL GJ_SFILE_REL_4MEM UBIN SYMREF;
      450      204    1   DCL GJ_SFILE_MAX#     UBIN SYMREF;
      451      205    1   DCL GJ_SFILE_START$ PTR SYMREF READONLY;
      452      206
      453      207                                                /* BASED Data               */
      454      208        %G$SFILE (FPTN=G_SFILE,STCLASS="BASED(GJ_SFILE_START$)");
      455      245        %G$SFILE (FPTN=G$SFILE,STCLASS="BASED(SFILE$)",ARRAYED=NO);
      456      282
      457      283    1   DCL B$PP_SEG(0:6) UBIN BASED;           /* G$SFILE.PP_SEGn          */
      458      284
      459      285                                                /* External Routines        */
      460      286    1   DCL GHH$LEV ENTRY(1);
      461      287    1   DCL GHQ$MCLEND ENTRY ALTRET;
      462      288    1   DCL GMA$RELPS ENTRY(2) ALTRET;
      463      289
      464      290        %EJECT;
PL6.E3A0      #003=GJS$REL_SHARED File=GJS$SFILE.:E05TSI                         TUE 07/29/97 22:03 Page:73   
      465      291    1      ALTRETURN/*calls to GJS$REL_SHARED are not allowed*/;

    291   0 000005  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      466      292
      467      293        /*D* If called to release entries in the SFILE table via GJS$REL_ALL,
      468      294             initialize auto to search the entire table and release all
      469      295             entries where the use count is zero.
      470      296        */
      471      297    1   GJS$REL_ALL: ENTRY(PNUM) ALTRET;

    297   0 000008  D380 0000 0000  xent GJS$REL_ALL     LNJ,B5   X6A_AUTO_1
          0 00000B       001A 0001                       DC       26,1

      472      298    1      GJ_SFILE_REL_4MEM = GJ_SFILE_REL_4MEM +1;

    298   0 00000D  8A80 0000 0000  xsym                 INC      GJ_SFILE_REL_4MEM

      473      299    1      REL_ALL = 1;

    299   0 000010  6C01                                 LDV,R6   1
          0 000011  EF47 0011                            STR,R6   REL_ALL,AUTO

      474      300    1      PGS_RELEASED = 0;

    300   0 000013  8747 0013                            CL       PGS_RELEASED,AUTO

      475      301    1      REL_LIB = 0;

    301   0 000015  8747 0012                            CL       REL_LIB,AUTO

    301   0                              RETRY           null
      476      302    1   RETRY: ;
      477      303           %LOCK (G=G_SLOCK);

    308   0 000017  BB80 0000 0000  01   RETRY           LAB,B3   0
          0 00001A  CBF0 0100                            LAB,B4   256,IMO
PL6.E3A0      #003=GJS$REL_SHARED File=GJS$SFILE.:E05TSI                         TUE 07/29/97 22:03 Page:74   
          0 00001C  E380 0000 0000  xent                 LNJ,B6   GHH$LOCK
          0 00001F       0001                            DC       s:310,PREL

      478      310    1      GOTO DO_ALL;

    310   0 000020  0F81 0011                            B        s:321,PREL

      479      311
      480      312        /*D* If called via the GJS$REL_SLOT entry, release one entry only.
      481      313             If the input parameter "PNUM" is zero, get set to search the
      482      314             entire table for a slot to release.
      483      315        */
      484      316    1   GJS$REL_SLOT: ENTRY(PNUM) ALTRET;

    316   0 000022  D380 0000 0000  xent GJS$REL_SLOT    LNJ,B5   X6A_AUTO_1
          0 000025       001A 0001                       DC       26,1

      485      317    1      REL_ALL = 0;

    317   0 000027  8747 0011                            CL       REL_ALL,AUTO

      486      318    1      PGS_RELEASED = 0;

    318   0 000029  8747 0013                            CL       PGS_RELEASED,AUTO

      487      319    1      IF PNUM = 0

    319   0 00002B  ECC7 0004                            LDB,B6   @PNUM,AUTO
          0 00002D  E806                                 LDR,R6   ,B6
          0 00002E  6981 000D                            BNEZ,R6  s:330,PREL

      488      320    2      THEN DO;

      489      321    2           REL_LIB = 0;

    321   0 000030  8747 0012                            CL       REL_LIB,AUTO

PL6.E3A0      #003=GJS$REL_SHARED File=GJS$SFILE.:E05TSI                         TUE 07/29/97 22:03 Page:75   
    321   0                              DO_ALL          null
      490      322    2   DO_ALL: ;
      491      323    2           START = 1;

    323   0 000032  6C01                 DO_ALL          LDV,R6   1
          0 000033  EF47 000A                            STR,R6   START,AUTO

      492      324    2           FINISH = GJ_SFILE_MAX#;

    324   0 000035  D800 0000 0000  xsym                 LDR,R5   GJ_SFILE_MAX#
          0 000038  DF47 000B                            STR,R5   FINISH,AUTO

      493      325    2           END;

    325   0 00003A  0F81 0008                            B        s:339,PREL

      494      326
      495      327        /*D* Otherwise, get set to look only at the specified entry.
      496      328        */
      497      329    2      ELSE DO;

      498      330    2           REL_LIB = 1;

    330   0 00003C  5C01                                 LDV,R5   1
          0 00003D  DF47 0012                            STR,R5   REL_LIB,AUTO

      499      331    2           START = PNUM;

    331   0 00003F  EF47 000A                            STR,R6   START,AUTO

      500      332    2           FINISH = PNUM;

    332   0 000041  EF47 000B                            STR,R6   FINISH,AUTO

      501      333    2           END;

      502      334
PL6.E3A0      #003=GJS$REL_SHARED File=GJS$SFILE.:E05TSI                         TUE 07/29/97 22:03 Page:76   
      503      335        /*D* Check the INSTTIME field for non-zero to determine if we have an
      504      336             active entry, and check the UC to be sure no users are associated.
      505      337             If called to gather memory, don't release libraries.
      506      338        */
      507      339    2      DO I = START TO FINISH;

    339   0 000043  EF47 0006                            STR,R6   I,AUTO
          0 000045  0F81 00FB                            B        s:445+2,PREL

      508      340    2           SFILE$ = ADDR(G_SFILE(I));

    340   0 000047  EC80 0000 0000  xsym                 LDB,B6   GJ_SFILE_START$
          0 00004A  B847 0006                            LDR,R3   I,AUTO
          0 00004C  3F30                                 MLV,R3   48
          0 00004D  DBB6                                 LAB,B5   ,B6,R3
          0 00004E  DFC7 0008                            STB,B5   SFILE$,AUTO

      509      341
      510      342    2           IF (G$SFILE.INSTTIME ~= 0) AND (G$SFILE.UC = 0)

    342   0 000050  8CC5 0020                            LDI      32,B5
          0 000052  84F0 0000 0000                       SID      0,IMO
          0 000055  6981 0003                            BNEZ,R6  s:342+9,PREL
          0 000057  7901 00E7                            BEZ,R7   s:445,PREL
          0 000059  E2C5 001F                            LLH,R6   31,B5
          0 00005B  6981 00E3                            BNEZ,R6  s:445,PREL

      511      343    3           THEN DO;

      512      344    3                IF (G$SFILE.RU_FLGS.LIB) AND (REL_LIB = 0)

    344   0 00005D  82C5 001D                            LB,'4000'X        29,B5
    344   0 00005F       4000
          0 000060  0581 0005                            BBF      s:349,PREL
          0 000062  D847 0012                            LDR,R5   REL_LIB,AUTO
          0 000064  5901 00DA                            BEZ,R5   s:445,PREL

PL6.E3A0      #003=GJS$REL_SHARED File=GJS$SFILE.:E05TSI                         TUE 07/29/97 22:03 Page:77   
      513      345    3                THEN EXIT;
      514      346
      515      347        /*    OK to release it.
      516      348        */
      517      349    3                PP_SEG$ = ADDR(G$SFILE.PP_SEG1);

    349   0 000066  CBC5 0029                            LAB,B4   41,B5
          0 000068  CFC7 000C                            STB,B4   PP_SEG$,AUTO

      518      350
      519      351        /*D* If this shared file may be released, do so by calling
      520      352             RELEASE_PAGES to return the physical pages for each read
      521      353             only segment, data segment and then procedure segment.
      522      354        */
      523      355    3                IF G$SFILE.PGSZ_ROS ~= 0

    355   0 00006A  82C5 001E                            LB,'00FF'X        30,B5
    355   0 00006C       00FF
          0 00006D  0581 0025                            BBF      s:363,PREL

      524      356    4                THEN DO;

      525      357    4                     NO_PGS = G$SFILE.PGSZ_ROS;

    357   0 00006F  D845 001E                            LDR,R5   30,B5
          0 000071  D570 00FF                            AND,R5   255,IMO
          0 000073  DF47 000F                            STR,R5   NO_PGS,AUTO

      526      358    4                     CALL GMA$RELPS(G$SFILE.PP_ROS,NO_PGS);

    358   0 000075  BBC7 000F                            LAB,B3   NO_PGS,AUTO
          0 000077  BFC7 0018                            STB,B3   PGS_RELEASED+5,AUTO
          0 000079  ABC5 0028                            LAB,B2   40,B5
          0 00007B  AFC7 0016                            STB,B2   PGS_RELEASED+3,AUTO
          0 00007D  BBC7 0016                            LAB,B3   PGS_RELEASED+3,AUTO
          0 00007F  CBF0 0200                            LAB,B4   512,IMO
          0 000081  E380 0000 0000  xent                 LNJ,B6   GMA$RELPS
PL6.E3A0      #003=GJS$REL_SHARED File=GJS$SFILE.:E05TSI                         TUE 07/29/97 22:03 Page:78   
          0 000084       0001                            DC       s:359,PREL

      527      359    4                     GJ_SFILE_CUR_DATA = GJ_SFILE_CUR_DATA - NO_PGS;

    359   0 000085  E800 0000 0000  xsym                 LDR,R6   GJ_SFILE_CUR_DATA
          0 000088  E247 000F                            SUB,R6   NO_PGS,AUTO
          0 00008A  EF00 0000 0000  xsym                 STR,R6   GJ_SFILE_CUR_DATA

      528      360    4                     PGS_RELEASED = PGS_RELEASED + NO_PGS;

    360   0 00008D  D847 0013                            LDR,R5   PGS_RELEASED,AUTO
          0 00008F  DA47 000F                            ADD,R5   NO_PGS,AUTO
          0 000091  DF47 0013                            STR,R5   PGS_RELEASED,AUTO

      529      361    4                     END;

      530      362
      531      363    3                IF G$SFILE.PGSZ_DATA ~= 0

    363   0 000093  ECC7 0008                            LDB,B6   SFILE$,AUTO
          0 000095  E846 0026                            LDR,R6   38,B6
          0 000097  6901 004C                            BEZ,R6   s:390,PREL

      532      364    4                THEN DO;

      533      365    4                     IF G$SFILE.RU_FLGS.LIB

    365   0 000099  82C6 001D                            LB,'4000'X        29,B6
    365   0 00009B       4000
          0 00009C  0581 000C                            BBF      s:372,PREL

      534      366    5                     THEN DO;

      535      367    5                          PG_SIZE = G$SFILE.PGSZ_DATA;

    367   0 00009E  EF47 0010                            STR,R6   PG_SIZE,AUTO

PL6.E3A0      #003=GJS$REL_SHARED File=GJS$SFILE.:E05TSI                         TUE 07/29/97 22:03 Page:79   
      536      368    5                          GJ_SFILE_LIB_DATA = GJ_SFILE_LIB_DATA - PG_SIZE;

    368   0 0000A0  E200 0000 0000  xsym                 SUB,R6   GJ_SFILE_LIB_DATA
          0 0000A3  8256                                 NEG      R6
          0 0000A4  EF00 0000 0000  xsym                 STR,R6   GJ_SFILE_LIB_DATA

      537      369    5                          END;

    369   0 0000A7  0F81 001D                            B        s:381,PREL

      538      370
      539      371    5                     ELSE DO;

      540      372    5                          PG_SIZE = G$SFILE.USR_DATA.PGSZ_DATA1;

    372   0 0000A9  D846 0025                            LDR,R5   37,B6
          0 0000AB  DF47 0010                            STR,R5   PG_SIZE,AUTO

      541      373    5                          J = G$SFILE.SEG_1ST_DATA;

    373   0 0000AD  C846 0022                            LDR,R4   34,B6
          0 0000AF  CF47 0007                            STR,R4   J,AUTO

      542      374    5                          GJ_SFILE_CUR_DATA = GJ_SFILE_CUR_DATA - PG_SIZE;

    374   0 0000B1  D200 0000 0000  xsym                 SUB,R5   GJ_SFILE_CUR_DATA
          0 0000B4  8255                                 NEG      R5
          0 0000B5  DF00 0000 0000  xsym                 STR,R5   GJ_SFILE_CUR_DATA

      543      375    5                          CALL RELEASE_PAGES;

    375   0 0000B8  E3C0 00BE                            LNJ,B6   s:0,PREL
          0 0000BA       0001                            DC       s:377,PREL

      544      376
      545      377    5                          PG_SIZE = G$SFILE.PGSZ_DATA - G$SFILE.USR_DATA.PGSZ_DATA1;

PL6.E3A0      #003=GJS$REL_SHARED File=GJS$SFILE.:E05TSI                         TUE 07/29/97 22:03 Page:80   
    377   0 0000BB  ECC7 0008                            LDB,B6   SFILE$,AUTO
          0 0000BD  E846 0026                            LDR,R6   38,B6
          0 0000BF  E246 0025                            SUB,R6   37,B6
          0 0000C1  EF47 0010                            STR,R6   PG_SIZE,AUTO

      546      378    5                          G$SFILE.SEG_1ST_DATA = G$SFILE.SEG_1ST_DATA + 1;

    378   0 0000C3  8AC6 0022                            INC      34,B6

      547      379    5                          END;

      548      380
      549      381    4                     IF NOT(G$SFILE.RU_FLGS.LIB)

    381   0 0000C5  82C6 001D                            LB,'4000'X        29,B6
    381   0 0000C7       4000
          0 0000C8  0501 0009                            BBT      s:384,PREL

      550      382    4                     THEN GJ_SFILE_CUR_DATA = GJ_SFILE_CUR_DATA - PG_SIZE;

    382   0 0000CA  E800 0000 0000  xsym                 LDR,R6   GJ_SFILE_CUR_DATA
          0 0000CD  E247 0010                            SUB,R6   PG_SIZE,AUTO
          0 0000CF  EF00 0000 0000  xsym                 STR,R6   GJ_SFILE_CUR_DATA

      551      383
      552      384    5                     DO J=G$SFILE.SEG_1ST_DATA TO G$SFILE.SEG_1ST_PROC-1;

    384   0 0000D2  E846 0022                            LDR,R6   34,B6
          0 0000D4  EF47 0007                            STR,R6   J,AUTO
          0 0000D6  0F81 0006                            B        s:386+2,PREL

      553      385    5                          CALL RELEASE_PAGES;

    385   0 0000D8  E3C0 009E                            LNJ,B6   s:0,PREL
          0 0000DA       0001                            DC       s:386,PREL

      554      386    5                          END;
PL6.E3A0      #003=GJS$REL_SHARED File=GJS$SFILE.:E05TSI                         TUE 07/29/97 22:03 Page:81   

    386   0 0000DB  8AC7 0007                            INC      J,AUTO
          0 0000DD  ECC7 0008                            LDB,B6   SFILE$,AUTO
          0 0000DF  E847 0007                            LDR,R6   J,AUTO
          0 0000E1  E946 0023                            CMR,R6   35,B6
          0 0000E3  0275                                 BL       s:385,SPREL

      555      387
      556      388    4                     END;

      557      389
      558      390    3                IF G$SFILE.PGSZ_PROC ~= 0

    390   0 0000E4  E846 0027                            LDR,R6   39,B6
          0 0000E6  6901 0019                            BEZ,R6   s:405,PREL

      559      391    4                THEN DO;

      560      392    4                     PG_SIZE = G$SFILE.PGSZ_PROC;

    392   0 0000E8  EF47 0010                            STR,R6   PG_SIZE,AUTO

      561      393    4                     GJ_SFILE_CUR_PROC = GJ_SFILE_CUR_PROC - PG_SIZE;

    393   0 0000EA  E200 0000 0000  xsym                 SUB,R6   GJ_SFILE_CUR_PROC
          0 0000ED  8256                                 NEG      R6
          0 0000EE  EF00 0000 0000  xsym                 STR,R6   GJ_SFILE_CUR_PROC

      562      394
      563      395    5                     DO J=G$SFILE.SEG_1ST_PROC TO 6;

    395   0 0000F1  D846 0023                            LDR,R5   35,B6
          0 0000F3  DF47 0007                            STR,R5   J,AUTO
          0 0000F5  0F81 0006                            B        s:397+2,PREL

      564      396    5                          CALL RELEASE_PAGES;

PL6.E3A0      #003=GJS$REL_SHARED File=GJS$SFILE.:E05TSI                         TUE 07/29/97 22:03 Page:82   
    396   0 0000F7  E3C0 007F                            LNJ,B6   s:0,PREL
          0 0000F9       0001                            DC       s:397,PREL

      565      397    5                          END;

    397   0 0000FA  8AC7 0007                            INC      J,AUTO
          0 0000FC  E847 0007                            LDR,R6   J,AUTO
          0 0000FE  6D06                                 CMV,R6   6
          0 0000FF  03F8                                 BLE      s:396,SPREL

      566      398
      567      399    4                     END;

      568      400
      569      401        %EJECT;
PL6.E3A0      #003=GJS$REL_SHARED File=GJS$SFILE.:E05TSI                         TUE 07/29/97 22:03 Page:83   
      570      402        /*D* Release the entry in the shared file tables by setting
      571      403             the entry to zero.
      572      404        */
      573      405    3                G$SFILE = '0'B;

    405   0 000100  ECC7 0008                            LDB,B6   SFILE$,AUTO
          0 000102  5C60                                 LDV,R5   96
          0 000103  0021                                 ALR      ;
          0 000104       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          0 000106       4006 0000                                ALPHANUM(0,B6,,R5,FILL)

      574      406    3                GJ_SFILE_CURR# = GJ_SFILE_CURR# -1;

    406   0 000108  437F                                 CSYNC    s:405+7,SPREL
          0 000109  8880 0000 0000  xsym                 DEC      GJ_SFILE_CURR#

      575      407
      576      408        /*D*  If called to release a specified entry, or to free up one
      577      409              entry, return the index to the entry just released and
      578      410              return to the caller.
      579      411        */
      580      412    3                IF (REL_ALL = 0)

    412   0 00010C  E847 0011                            LDR,R6   REL_ALL,AUTO
          0 00010E  6981 0009                            BNEZ,R6  s:429,PREL

      581      413    4                THEN DO;

      582      414    4                     PNUM = I;

    414   0 000110  ECC7 0004                            LDB,B6   @PNUM,AUTO
          0 000112  C847 0006                            LDR,R4   I,AUTO
          0 000114  CF06                                 STR,R4   ,B6

      583      415    4                     RETURN;

    415   0 000115  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
PL6.E3A0      #003=GJS$REL_SHARED File=GJS$SFILE.:E05TSI                         TUE 07/29/97 22:03 Page:84   

      584      416    4                     END;
      585      417
      586      418        /*D*  If called to free mem from unused entries, unlock the gate
      587      419              and call QEND to prevent Watch Dog Timer Runout.
      588      420              Then back up to search the entire table again until all
      589      421              entries with no current user are released.
      590      422        */
      591      423    4                ELSE DO;

      592      424                          %UNLOCK (G=G_SLOCK);

    429   0 000118  BB80 0000 0000  01                   LAB,B3   0
          0 00011B  CBF0 0100                            LAB,B4   256,IMO
          0 00011D  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
          0 000120       0001                            DC       s:431,PREL

      593      431    4                     IF PNUM <= PGS_RELEASED

    431   0 000121  ECC7 0004                            LDB,B6   @PNUM,AUTO
          0 000123  E806                                 LDR,R6   ,B6
          0 000124  E947 0013                            CMR,R6   PGS_RELEASED,AUTO
          0 000126  0301 0004                            BG       s:434,PREL

      594      432    4                     THEN RETURN;

    432   0 000128  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      595      433
      596      434    4   TSTQEND:          CALL GHQ$MCLEND ALTRET(QEND);

    434   0 00012B  CBF0 0000            TSTQEND         LAB,B4   0,IMO
          0 00012D  E380 0000 0000  xent                 LNJ,B6   GHQ$MCLEND
          0 000130       0003                            DC       s:437,PREL

      597      435
      598      436    5                     DO WHILE ('0'B);
PL6.E3A0      #003=GJS$REL_SHARED File=GJS$SFILE.:E05TSI                         TUE 07/29/97 22:03 Page:85   

    436   0 000131  0F81 000B                            B        s:441,PREL

      599      437    5   QEND:                  CALL GHH$LEV(GH_LEV_SCHD);

    437   0 000133  BB80 0000 0002  01   QEND            LAB,B3   +2
          0 000136  CBF0 0100                            LAB,B4   256,IMO
          0 000138  E380 0000 0000  xent                 LNJ,B6   GHH$LEV
          0 00013B       0001                            DC       s:438,PREL

      600      438    5                          GOTO TSTQEND;

    438   0 00013C  0FEF                                 B        s:434,SPREL

      601      439    5                          END;

      602      440
      603      441    4                     GOTO RETRY;

    441   0 00013D  0F81 FED9                            B        s:301,PREL

      604      442    4                     END/*do if rel_all ~= 0*/;
      605      443
      606      444    3                END/*do if UC=0*/;
      607      445    2           END/*do start to finish*/;

    445   0 00013F  8AC7 0006                            INC      I,AUTO
          0 000141  E847 0006                            LDR,R6   I,AUTO
          0 000143  E947 000B                            CMR,R6   FINISH,AUTO
          0 000145  0381 FF01                            BLE      s:340,PREL

      608      446
      609      447        %EJECT;
PL6.E3A0      #003=GJS$REL_SHARED File=GJS$SFILE.:E05TSI                         TUE 07/29/97 22:03 Page:86   
      610      448        /*D*  If no unused entries can be found after searching the entire
      611      449              table, or if the specific entry as specified by the call, has
      612      450              a non-zero use count, ALTRET to the caller.
      613      451        */
      614      452    1      IF REL_ALL = 0 THEN ALTRETURN;

    452   0 000147  D847 0011                            LDR,R5   REL_ALL,AUTO
          0 000149  5981 0004                            BNEZ,R5  s:466,PREL

    452   0 00014B  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      615      453
      616      454        /*D*  If called to free up memory pages, check to see if the first
      617      455              pass through the table has obtained enough to satisfy the
      618      456              callers request.  If not, make another pass through the table
      619      457              to also release the pages occupied by run-time libraries with
      620      458              not current users.  If this fails to release enough pages,
      621      459              ALTRET to the GJS$REL_ALL caller.
      622      460        */
      623      461           %UNLOCK (G=G_SLOCK);

    466   0 00014E  BB80 0000 0000  01                   LAB,B3   0
          0 000151  CBF0 0100                            LAB,B4   256,IMO
          0 000153  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
          0 000156       0001                            DC       s:468,PREL

      624      468    1      IF PNUM <= PGS_RELEASED

    468   0 000157  ECC7 0004                            LDB,B6   @PNUM,AUTO
          0 000159  E806                                 LDR,R6   ,B6
          0 00015A  E947 0013                            CMR,R6   PGS_RELEASED,AUTO
          0 00015C  0301 0004                            BG       s:471,PREL

      625      469    1      THEN RETURN;

    469   0 00015E  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

PL6.E3A0      #003=GJS$REL_SHARED File=GJS$SFILE.:E05TSI                         TUE 07/29/97 22:03 Page:87   
      626      470    2      ELSE DO;

      627      471    2           IF REL_LIB = 1 THEN ALTRETURN;

    471   0 000161  D847 0012                            LDR,R5   REL_LIB,AUTO
          0 000163  5D01                                 CMV,R5   1
          0 000164  0981 0004                            BNE      s:472,PREL

    471   0 000166  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      628      472    2           REL_LIB = 1/*release unused libraries too*/;

    472   0 000169  5C01                                 LDV,R5   1
          0 00016A  DF47 0012                            STR,R5   REL_LIB,AUTO

      629      473                %LOCK (G=G_SLOCK);

    478   0 00016C  BB80 0000 0000  01                   LAB,B3   0
          0 00016F  CBF0 0100                            LAB,B4   256,IMO
          0 000171  E380 0000 0000  xent                 LNJ,B6   GHH$LOCK
          0 000174       0001                            DC       s:480,PREL

      630      480    2           GOTO DO_ALL;

    480   0 000175  0F81 FEBC                            B        s:321,PREL

      631      481    2           END;
      632      482        %EJECT;
PL6.E3A0      #003=GJS$REL_SHARED File=GJS$SFILE.:E05TSI                         TUE 07/29/97 22:03 Page:88   
      633      483
      634      484        /*I* NAME: RELEASE_PAGES
      635      485
      636      486             PURPOSE: To release the pages assigned to a specified segment.
      637      487
      638      488             CALL:   J = index into G$SFILE.PP_SEGn
      639      489                     PG_SIZE = maximum nunber of pages to release
      640      490                     CALL RELEASE_PAGES;
      641      491
      642      492             DESCRIPTION:  GMA$RELPGS is called to release the pages.  If
      643      493                     PG_SIZE is greater than 256, only 256 will actually be
      644      494                     released.  In any event, PG_SIZE will be decremented
      645      495                     by the number released.
      646      496        */
      647      497
      648      498    1   RELEASE_PAGES: PROC;

    498   0 000177  EFC7 0014            RELEASE_PAGES   STB,B6   PGS_RELEASED+1,AUTO

      649      499    2      PAGE# = PP_SEG$->B$PP_SEG(J);

    499   0 000179  DCC7 000C                            LDB,B5   PP_SEG$,AUTO
          0 00017B  B847 0007                            LDR,R3   J,AUTO
          0 00017D  E835                                 LDR,R6   ,B5,R3
          0 00017E  EF47 000E                            STR,R6   PAGE#,AUTO

      650      500
      651      501    2      IF PG_SIZE > 256

    501   0 000180  D847 0010                            LDR,R5   PG_SIZE,AUTO
          0 000182  D970 0100                            CMR,R5   256,IMO
          0 000184  0381 0007                            BLE      s:503,PREL

      652      502    2      THEN NO_PGS = 256;

    502   0 000186  C870 0100                            LDR,R4   256,IMO
          0 000188  CF47 000F                            STR,R4   NO_PGS,AUTO
PL6.E3A0      #003=GJS$REL_SHARED File=GJS$SFILE.:E05TSI                         TUE 07/29/97 22:03 Page:89   
          0 00018A  0F81 0003                            B        s:505,PREL

      653      503    2      ELSE NO_PGS = PG_SIZE;

    503   0 00018C  DF47 000F                            STR,R5   NO_PGS,AUTO

      654      504
      655      505    2      PG_SIZE = PG_SIZE - NO_PGS;

    505   0 00018E  D247 000F                            SUB,R5   NO_PGS,AUTO
          0 000190  DF47 0010                            STR,R5   PG_SIZE,AUTO

      656      506
      657      507    2      IF NO_PGS ~= 0

    507   0 000192  C847 000F                            LDR,R4   NO_PGS,AUTO
          0 000194  4901 0011                            BEZ,R4   s:510,PREL

      658      508    2      THEN CALL GMA$RELPS(PAGE#,NO_PGS);

    508   0 000196  CBC7 000F                            LAB,B4   NO_PGS,AUTO
          0 000198  CFC7 0018                            STB,B4   PGS_RELEASED+5,AUTO
          0 00019A  BBC7 000E                            LAB,B3   PAGE#,AUTO
          0 00019C  BFC7 0016                            STB,B3   PGS_RELEASED+3,AUTO
          0 00019E  BBC7 0016                            LAB,B3   PGS_RELEASED+3,AUTO
          0 0001A0  CBF0 0200                            LAB,B4   512,IMO
          0 0001A2  E380 0000 0000  xent                 LNJ,B6   GMA$RELPS
          0 0001A5       0001                            DC       s:510,PREL

      659      509
      660      510    2      PGS_RELEASED = PGS_RELEASED + NO_PGS;

    510   0 0001A6  E847 0013                            LDR,R6   PGS_RELEASED,AUTO
          0 0001A8  EA47 000F                            ADD,R6   NO_PGS,AUTO
          0 0001AA  EF47 0013                            STR,R6   PGS_RELEASED,AUTO

      661      511    2      PP_SEG$->B$PP_SEG(J) = 0;
PL6.E3A0      #003=GJS$REL_SHARED File=GJS$SFILE.:E05TSI                         TUE 07/29/97 22:03 Page:90   

    511   0 0001AC  ECC7 000C                            LDB,B6   PP_SEG$,AUTO
          0 0001AE  B847 0007                            LDR,R3   J,AUTO
          0 0001B0  8736                                 CL       ,B6,R3

      662      512    2   END RELEASE_PAGES;

    512   0 0001B1  ECC7 0014                            LDB,B6   PGS_RELEASED+1,AUTO
          0 0001B3  C3C6 0001                            LNJ,B4   1,B6
      663      513    1   END GJS$REL_SHARED;

PL6.E3A0      #003=GJS$REL_SHARED File=GJS$SFILE.:E05TSI                         TUE 07/29/97 22:03 Page:91   
--  Include file information  --

   GH_GATE_M.:E05TOU  cannot be made into a system file and is referenced.
   G_SFILE_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure GJS$REL_SHARED.
PL6.E3A0      #003=GJS$REL_SHARED File=GJS$SFILE.:E05TSI                         TUE 07/29/97 22:03 Page:92   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @PNUM                      B-0-0/w UBIN(16)    r     1 FINISH
     6-0-0/w UBIN(16)    r     1 I                          7-0-0/w UBIN(16)    r     1 J
     F-0-0/w UBIN(16)    r     1 NO_PGS                     E-0-0/w UBIN(16)    r     1 PAGE#
    13-0-0/w UBIN(16)    r     1 PGS_RELEASED              10-0-0/w UBIN(16)    r     1 PG_SIZE
    *0-0-0/w UBIN(16)    r     1 PNUM                       C-0-0/w PTR         r     1 PP_SEG$
    11-0-0/w UBIN(16)    r     1 REL_ALL                   12-0-0/w UBIN(16)    r     1 REL_LIB
     8-0-0/w PTR         r     1 SFILE$                     A-0-0/w UBIN(16)    r     1 START

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN(16)    r     1 GH_LEV_SCHD                0-0-0/w UBIN(16)    r     1 GJ_SFILE_CURR#
     0-0-0/w UBIN(16)    r     1 GJ_SFILE_CUR_DATA          0-0-0/w UBIN(16)    r     1 GJ_SFILE_CUR_PROC
     0-0-0/w UBIN(16)    r     1 GJ_SFILE_LIB_DATA          0-0-0/w UBIN(16)    r     1 GJ_SFILE_MAX#
     0-0-0/w UBIN(16)    r     1 GJ_SFILE_REL_4MEM          0-0-0/w PTR         r     1 GJ_SFILE_START$
     0-0-0/w STRC(48)    r     1 G_SLOCK

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN(16)    r     1 B$PP_SEG(0:6)
     0-0-0/w STRC(768)   r     1 G$SFILE
     0-0-0/w STRC(768)   r     1 G_SFILE(0:0)

PL6.E3A0      #003=GJS$REL_SHARED File=GJS$SFILE.:E05TSI                         TUE 07/29/97 22:03 Page:93   

   Procedure GJS$REL_SHARED requires 437 words for executable code.
   Procedure GJS$REL_SHARED requires 26 words of local(AUTO) storage.

    No errors detected in file GJS$SFILE.:E05TSI    .
PL6.E3A0      #003=GJS$REL_SHARED File=GJS$SFILE.:E05TSI                         TUE 07/29/97 22:03 Page:94   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=GJS$REL_SHARED File=GJS$SFILE.:E05TSI                         TUE 07/29/97 22:03 Page:95   
          MINI XREF LISTING

B$PP_SEG
       283**DCL       499>>ASSIGN    511<<ASSIGN
DO_ALL
       321**LABEL     310--GOTO      480--GOTO
FINISH
       169**DCL       324<<ASSIGN    332<<ASSIGN    339>>DOINDEX
G$SFILE
       261**DCL       405<<ASSIGN
G$SFILE.INSTTIME
       277**DCL       342>>IF
G$SFILE.LIB_WDSZ_DATA
       277**DCL       278--REDEF
G$SFILE.PGSZ_DATA
       278**DCL       363>>IF        367>>ASSIGN    377>>ASSIGN
G$SFILE.PGSZ_PROC
       278**DCL       390>>IF        392>>ASSIGN
G$SFILE.PGSZ_ROS
       276**DCL       355>>IF        357>>ASSIGN
G$SFILE.PP_ROS
       279**DCL       358<>CALL
G$SFILE.PP_SEG1
       279**DCL       349--ASSIGN
G$SFILE.RU_FLGS.LIB
       268**DCL       344>>IF        365>>IF        381>>IF
G$SFILE.SEG_1ST_DATA
       277**DCL       373>>ASSIGN    378<<ASSIGN    378>>ASSIGN    384>>DOINDEX
G$SFILE.SEG_1ST_PROC
       277**DCL       384>>DOINDEX   395>>DOINDEX
G$SFILE.UC
       276**DCL       342>>IF
G$SFILE.USR_DATA.PGSZ_DATA1
       278**DCL       372>>ASSIGN    377>>ASSIGN
PL6.E3A0      #003=GJS$REL_SHARED File=GJS$SFILE.:E05TSI                         TUE 07/29/97 22:03 Page:96   
GHH$LEV
       286**DCL-ENT   437--CALL
GHH$LOCK
       159**DCL-ENT   308--CALL      478--CALL
GHH$UNLOCK
       159**DCL-ENT   429--CALL      466--CALL
GHQ$MCLEND
       287**DCL-ENT   434--CALL
GH_LEV_SCHD
       179**DCL       437<>CALL
GJ_SFILE_CURR#
       202**DCL       406<<ASSIGN    406>>ASSIGN
GJ_SFILE_CUR_DATA
       200**DCL       359<<ASSIGN    359>>ASSIGN    374<<ASSIGN    374>>ASSIGN    382<<ASSIGN    382>>ASSIGN
GJ_SFILE_CUR_PROC
       201**DCL       393<<ASSIGN    393>>ASSIGN
GJ_SFILE_LIB_DATA
       199**DCL       368<<ASSIGN    368>>ASSIGN
GJ_SFILE_MAX#
       204**DCL       324>>ASSIGN
GJ_SFILE_REL_4MEM
       203**DCL       298<<ASSIGN    298>>ASSIGN
GJ_SFILE_START$
       205**DCL       222--IMP-PTR   340>>ASSIGN
GMA$RELPS
       288**DCL-ENT   358--CALL      508--CALL
G_SFILE
       222**DCL       340--ASSIGN
G_SFILE.LIB_WDSZ_DATA
       240**DCL       241--REDEF
G_SLOCK
       192**DCL       308<>CALL      429<>CALL      466<>CALL      478<>CALL
I
       165**DCL       339<<DOINDEX   340>>ASSIGN    414>>ASSIGN
J
       166**DCL       373<<ASSIGN    384<<DOINDEX   395<<DOINDEX   499>>ASSIGN    511>>ASSIGN
PL6.E3A0      #003=GJS$REL_SHARED File=GJS$SFILE.:E05TSI                         TUE 07/29/97 22:03 Page:97   
NO_PGS
       172**DCL       357<<ASSIGN    358<>CALL      359>>ASSIGN    360>>ASSIGN    502<<ASSIGN    503<<ASSIGN
       505>>ASSIGN    507>>IF        508<>CALL      510>>ASSIGN
PAGE#
       171**DCL       499<<ASSIGN    508<>CALL
PGS_RELEASED
       176**DCL       300<<ASSIGN    318<<ASSIGN    360<<ASSIGN    360>>ASSIGN    431>>IF        468>>IF
       510<<ASSIGN    510>>ASSIGN
PG_SIZE
       173**DCL       367<<ASSIGN    368>>ASSIGN    372<<ASSIGN    374>>ASSIGN    377<<ASSIGN    382>>ASSIGN
       392<<ASSIGN    393>>ASSIGN    501>>IF        503>>ASSIGN    505<<ASSIGN    505>>ASSIGN
PNUM
       162**DCL        57--PROC      297--ENTRY     316--ENTRY     319>>IF        331>>ASSIGN    332>>ASSIGN
       414<<ASSIGN    431>>IF        468>>IF
PP_SEG$
       170**DCL       349<<ASSIGN    499>>ASSIGN    511>>ASSIGN
QEND
       437**LABEL     434--CALLALT
RELEASE_PAGES
       498**PROC      375--CALL      385--CALL      396--CALL
REL_ALL
       174**DCL       299<<ASSIGN    317<<ASSIGN    412>>IF        452>>IF
REL_LIB
       175**DCL       301<<ASSIGN    321<<ASSIGN    330<<ASSIGN    344>>IF        471>>IF        472<<ASSIGN
RETRY
       301**LABEL     441--GOTO
SFILE$
       167**DCL       261--IMP-PTR   340<<ASSIGN    342>>IF        342>>IF        344>>IF        349>>ASSIGN
       355>>IF        357>>ASSIGN    358>>CALL      363>>IF        365>>IF        367>>ASSIGN    372>>ASSIGN
       373>>ASSIGN    377>>ASSIGN    377>>ASSIGN    378>>ASSIGN    378>>ASSIGN    381>>IF        384>>DOINDEX
       384>>DOINDEX   390>>IF        392>>ASSIGN    395>>DOINDEX   405>>ASSIGN
START
       168**DCL       323<<ASSIGN    331<<ASSIGN    339>>DOINDEX
TSTQEND
       434**LABEL     438--GOTO
