VERSION E05

PL6.E3A0      #001=CPE$GENRUAM File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:38 Page:1    
        1        1        /*M* CPE$GENRUAM, CPE$LISTOUT, CPE$RFEXT, CPE$RZEROS */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*  DMC,DFC   */
        8        8        /*F*   NAME:   CPE$GENRUAM
        9        9               PURPOSE: Generate assign merge records for run unit output assignments
       10       10                       for object,listout, and diagnostic output. These assignments
       11       11                       are made for the LIST,COMMENT and run unit commands
       12       12                       containing ON/OVER/INTO keywords.
       13       13               DESCRIPTION: A determination is made whether ON,OVER or INTO was
       14       14                       specified. If OVER or ON is specified the options FUN=CREATE
       15       15                       and EXIST=NEWFILE are set. If INTO is specified
       16       16                       the options FUN=CREATE and EXIST=OLDFILE are set. If ON is
       17       17                       specified, and EXIST_CHK_FLG is set, a check is made for the
       18       18                       absence of the specified file. An assign-merge record is created
       19       19                       for the specified dcb.
       20       20        */
       21       21        /*D*   NAME:   CPE$GENRUAM
       22       22               CALL:   CALL CPE$GENRUAM(BLK$,ONOVERINTO$,FID$,DCBNAME,EXIST_CHK_FLG)
       23       23               INTERFACE: CXB$BLDAM,CXC$WRITEAM,CPC$GETDCB
       24       24               INPUT:  BLK$ - pointer to parsed ouput
       25       25                       ONOVERINTO$ - pointer to parse block containing ON,OVER,INTO
       26       26                       DCBNAME$ - ptr to dcb name for A/M generation
       27       27                       FID$ - pointer to fid
       28       28                       EXIST_CHK_FLG - Flg to indicate whether to check for existence.
       29       29               OUTPUT: keyed record to *A file
       30       30               DESCRIPTION: If ON is specified, and EXIST_CHK_FLG is true, a test is
       31       31                       performed to determine file absence or presence. An error return
       32       32                       is made if found for ON. For ON and
       33       33                       OVER FUN is set to CREATE and EXIST to NEWFILE. For INTO
       34       34                       FUN is set to UPDATE. An assign merge record is written to
       35       35                       the *A file for the specified dcb.
       36       36        */
       37       37        /*************************************************************************/
PL6.E3A0      #001=CPE$GENRUAM File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:38 Page:2    
       38       38        CPE$GENRUAM: PROC(BLK$,ONOVERINTO$,FID$,DCBNAME$,EXIST_CHK_FLG) ALTRET;
       39       39                   %INCLUDE CP_6;
       40      120                   %INCLUDE B$JIT;
       41      410                   %INCLUDE XU_MACRO_C;
       42     3516                   %INCLUDE CP_DATA_R;
       43     6079                   %INCLUDE CP_6_SUBS;
       44     6619                   %INCLUDE CP_MACROS_C;
       45     7371                   %INCLUDE CP_SUBS_C;
       46     8288                   %INCLUDE CP_PERR_C;
       47     8626                   %INCLUDE B_MACROS_C;
       48     8737                   %INCLUDE XU_SUBS_C;
       49     8829                   %INCLUDE CX_MACROS_M ;
       50     8880    1   DCL BLK$ PTR;                           /*Ptr to parse output*/
       51     8881    1   DCL ONOVERINTO$ PTR;                    /*Ptr to on/over/into*/
       52     8882    1   DCL FID$ PTR;                           /*Ptr to fid*/
       53     8883    1   DCL DCBNAME$ PTR;
       54     8884    1   DCL EXIST_CHK_FLG BIT(1) PARAM ;
       55     8885        %VLP_NAME (FPTN=FID_NAME,LEN=31,STCLASS=AUTO);
       56     8912        %VLP_ACCT (FPTN=FID_ACCT,STCLASS=AUTO);
       57     8925        %VLP_PASS (FPTN=FID_PASS,STCLASS=AUTO);
       58     8938        %VLP_WSN (FPTN=FID_WSN,STCLASS=AUTO);
       59     8951        %VLP_SN (FPTN=FID_SN,N=50,STCLASS=AUTO);
       60     8964    1   DCL FID_ASN UBIN(9);
       61     8965    1   DCL FID_RES CHAR(4);
       62     8966        %CPSL_COMMAND_PARAMETERS (NAME=CPSL_PARAM, STCLASS=AUTO) ;
       63     8984    1   DCL 1 M$DODCB CONSTANT DALIGNED,
       64     8985    1          2 CNT UBIN(9) INIT(4) UNAL,
       65     8986    1          2 TXT CHAR(4) INIT('M$DO');
       66     8987    1   DCL 1 DCB#3 CONSTANT DALIGNED,
       67     8988    1          2 CNT UBIN(9) INIT(2) UNAL,
       68     8989    1          2 TXT CHAR(2) INIT('#3');
       69     8990    1     DCL DCB# UBIN WORD;
       70     8991        /***** Fpts *****/
       71     8992          %FPT_FID (FPTN=FPT_FID,STCLASS=AUTO);
       72     9015          %VLR_FID (FPTN=FID_RESULTS,STCLASS=AUTO);
       73     9034          %FPT_OPEN (FPTN=FPT_OPEN,STCLASS=AUTO);
       74     9143        /***** Based structures *****/
PL6.E3A0      #001=CPE$GENRUAM File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:38 Page:3    
       75     9144          %SEG$2;
       76     9204          %B$EXCFR;
       77     9222          %B$TCB (STCLASS="BASED(B$TCB$)");
       78     9225          %TEXTC;
       79     9230          %F$DCB;
       80     9287          %PARSE$OUT (NAME=P$B);
       81     9332          %FPT_CLOSE(FPTN=FPT$CLOSE,STCLASS=BASED);
       82     9374          %FPT_OPEN(FPTN=AMR$REC$,STCLASS="BASED(SEG3$)",PFMT="PTR");
       83     9483          %VLP_ACCT(FPTN=AM$ACCT,STCLASS=BASED);
       84     9496          %VLP_SN(FPTN=AM$SN,STCLASS=BASED);
       85     9509        /***** External routines *****/
       86     9510    1     DCL CPC$GETDCB ENTRY(2);                /*Get spec'd dcb*/
       87     9511    1     DCL CPC$WRITEMSGE ENTRY(6);
       88     9512    1     DCL CPC$RELDCB ENTRY(1);                /*Release spec'd dcb*/
       89     9513    1     DCL CXB$BLDAM ENTRY(4) ;                /*Bld spec'd a/m record*/
       90     9514    1     DCL CXC$WRITEAM ENTRY(3) ;              /*Gen spec'd a/m record*/
       91     9515    1     DCL CXP$POSTERR ENTRY(5);
       92     9516    1     DCL CPB$OPENCS ENTRY;
       93     9517        /***** Error codes *****/
       94     9518          %ERR_CODE (NAME=E_ONFID,MID#=CPE$IBEXMID,CODE#=E$ONFID,STCLASS=CONSTANT);
       95     9538             %EJECT;
PL6.E3A0      #001=CPE$GENRUAM File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:38 Page:4    
       96     9539        /*
       97     9540          **** Get the spec'd fid
       98     9541        */
       99     9542    1     FPT_FID=CFPT_FID;
      100     9543    1     FPT_FID.V_=VECTOR(FPT_FID.V);
      101     9544    1     FPT_FID.TEXTFID_=VECTOR(FID$->TEXTC.TEXT);
      102     9545    1     FPT_FID.NAME_=VECTOR(FID_NAME);
      103     9546    1     FPT_FID.ACCT_=VECTOR(FID_ACCT);
      104     9547    1     FPT_FID.PASS_=VECTOR(FID_PASS);
      105     9548    1     FPT_FID.SN_=VECTOR(FID_SN);
      106     9549    1     FPT_FID.WSN_=VECTOR(FID_WSN);
      107     9550    1     FPT_FID.ASN_=VECTOR(FID_ASN);
      108     9551    1     FPT_FID.RES_=VECTOR(FID_RES);
      109     9552    1     FPT_FID.RESULTS_=VECTOR(FID_RESULTS);
      110     9553    1     CALL M$FID(FPT_FID) ALTRET(GENRUAM50);
      111     9554        /*
      112     9555          **** If file type fid and on spec'd, must init. Open fpt to
      113     9556               determine file existence
      114     9557        */
      115     9558    1     DCB# = 0;
      116     9559    1     IF (FID_ASN=%FILE# AND ONOVERINTO$->P$B.CODE=ONOPT AND EXIST_CHK_FLG)
      117     9560
      118     9561    1        THEN
      119     9562    2           DO;
      120     9563    2              FPT_OPEN=CFPT_OPEN;
      121     9564    2              FPT_OPEN.V_=VECTOR(FPT_OPEN.V);
      122     9565    2              FPT_OPEN.NAME_ = FPT_FID.NAME_;
      123     9566    2              FPT_OPEN.ACCT_ = FPT_FID.ACCT_;
      124     9567    2              FPT_OPEN.PASS_ = FPT_FID.PASS_;
      125     9568    2              FPT_OPEN.SN_ = FPT_FID.SN_;
      126     9569    2              FPT_OPEN.WSN_ = FPT_FID.WSN_;
      127     9570    2              IF (FID_RESULTS.RES=%YES#)
      128     9571    2                 THEN
      129     9572    2                    FPT_OPEN.V.RES#=FID_RES;
      130     9573    2              CALL CPC$GETDCB(M$IBEX2_NUM, IBEX2TXTC);
      131     9574    2              DCB# = M$IBEX2_NUM;
      132     9575    2              FPT_OPEN.V.DCB#=M$IBEX2_NUM;
PL6.E3A0      #001=CPE$GENRUAM File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:38 Page:5    
      133     9576    2              FPT_OPEN.V.ASN#=FID_ASN;
      134     9577    2              FPT_OPEN.V.ACS#=%SEQUEN#;
      135     9578    2              FPT_OPEN.V.OPER.TEST#=%YES#;
      136     9579        /*
      137     9580          **** Make sure file non-existant for on
      138     9581        */
      139     9582    2              CALL M$OPEN(FPT_OPEN) ALTRET(GENRUAM10);
      140     9583                                                /* File exists - error                */
      141     9584    2              GOTO GENRUAM60;
      142     9585    2   GENRUAM10: ;
      143     9586    2           END;
      144     9587        /*
      145     9588          **** Build the desired a/m record
      146     9589        */
      147     9590    1     CPSL_PARAM = %NO# ;
      148     9591    1     CALL CXB$BLDAM(BLK$,FID$,M$IBEX1_NUM,CPSL_PARAM) ;
      149     9592    1     IF B$JIT.USRERR ~= %NO#
      150     9593    1         THEN
      151     9594    1             GOTO GENRUAM70 ;
      152     9595        /*
      153     9596          **** For in and over, set parameters to create newfile and for into,
      154     9597               create oldfile.
      155     9598        */
      156     9599    1     AMR$REC$.V.FUN#=%CREATE#;
      157     9600    2     DO CASE (ONOVERINTO$->P$B.CODE) ;
      158     9601
      159     9602    2         CASE (INTOOPT) ;
      160     9603    2             AMR$REC$.V.EXIST# = %OLDFILE# ;
      161     9604
      162     9605    2         CASE (OVEROPT) ;
      163     9606    2             AMR$REC$.V.EXIST# = %NEWFILE# ;
      164     9607
      165     9608    2         CASE (ELSE) ; /* ONOPT */
      166     9609    2             AMR$REC$.V.EXIST# = %ERROR# ;
      167     9610
      168     9611    2     END ;   /* Do Case */
      169     9612        /*
PL6.E3A0      #001=CPE$GENRUAM File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:38 Page:6    
      170     9613          ****  Assure proper output formatting for list and comment commands
      171     9614        */
      172     9615    1     IF (DCBNAME$->TEXTC=LISTDCB) OR (DCBNAME$->TEXTC=M$DODCB)
      173     9616    1        THEN
      174     9617    1           AMR$REC$.V.ORG#=%UR#;
      175     9618        /*
      176     9619          ****  If dcb is #3 and FID name is *G the set CP_DONTRFEXT3# in B$JIT.
      177     9620        */
      178     9621    1     IF DCBNAME$->TEXTC=DCB#3 AND FID_NAME.NAME# = '*G'
      179     9622    1        THEN
      180     9623    1           B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 | %CP_DONTRFEXT3# ;
      181     9624        /*
      182     9625          ****  ASSIGN MERGE RECORD FOR DRIBBLE MUST CONTAIN AN ACCOUNT
      183     9626        */
      184     9627    1     IF (DCBNAME$ -> TEXTC = DRIBBLEDCB) AND (FID_RESULTS.ACCT = %NO#)
      185     9628    1        THEN
      186     9629    1           IF AMR$REC$.ACCT_ ~= ADDR(NIL)
      187     9630    1              THEN
      188     9631    2                 DO ;
      189     9632    2                   AMR$REC$.ACCT_ -> AM$ACCT.ACCT# = B$JIT.FACCN;
      190     9633    2                   IF NOT FID_RESULTS.SN
      191     9634    2                     THEN
      192     9635    3                       DO ;
      193     9636    3                         AMR$REC$.SN_ -> AM$SN.NUM# = 1 ;
      194     9637    3                         AMR$REC$.SN_ -> AM$SN.SN#(0) = B$JIT.FPSN ;
      195     9638    3                       END ; /* Then Do */
      196     9639    2                 END ; /* Then Do */
      197     9640    1     CPSL_PARAM = %NO# ;
      198     9641    1     CALL CXC$WRITEAM(DCBNAME$,M$IBEX1_NUM,CPSL_PARAM) ;
      199     9642    1     IF CPSL_PARAM.ERRCODE ~= %NO#
      200     9643    1         THEN
      201     9644    1             IF CPSL_PARAM.FLAGS.REPORTED_TO_USER
      202     9645    1               THEN
      203     9646    1                 GOTO GENRUAM70 ;
      204     9647    1                   ELSE
      205     9648    2                     DO ;
      206     9649    2                       B$JIT.USRERR = CPSL_PARAM.FLAGS.REPORTED_TO_USER ;
PL6.E3A0      #001=CPE$GENRUAM File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:38 Page:7    
      207     9650    2                       GOTO GENRUAM70 ;
      208     9651    2                     END ;
      209     9652    1     IF DCB# ~= 0
      210     9653    1        THEN
      211     9654    2           DO;
      212     9655    2              CALL CPC$RELDCB (M$IBEX2_NUM);
      213     9656    2           END;
      214     9657    1     RETURN;
      215     9658    1   GENRUAM50:;
      216     9659    1     B$JIT.USRERR = B$TCB.ALT$ -> B$EXCFR.ERR;
      217     9660    1     ALTRETURN;
      218     9661    1   GENRUAM60:;
      219     9662        /*E*       ERROR: CPE-E$ONFID-E
      220     9663                   MESSAGE: ON FILE %U1 exists
      221     9664                   DESCRIPTION: The file following the keyword ON already exists.
      222     9665        */
      223     9666    1     IF B$JIT.CPFLAGS1.YCPMME
      224     9667    1       THEN
      225     9668    1         CALL CXP$POSTERR (ADDR(SEG$2.ERRBUF), 511, E_ONFID,,M$IBEX_NUM);
      226     9669    1       ELSE
      227     9670    1         CALL CPC$WRITEMSGE(E_ONFID,,FID_NAME,,,%YES#);
      228     9671    1     B$JIT.STEPCC = %CC_ERR#;
      229     9672    1   GENRUAM70:;
      230     9673    1     IF (DCB# ~= 0)
      231     9674    1        THEN
      232     9675    1           CALL CPC$RELDCB(M$IBEX2_NUM);
      233     9676        /*
      234     9677          ****     If we used M$IBEX and it's also being used for reading control
      235     9678                   commands, get it back and open to command stream.
      236     9679        */
      237     9680    1     IF (DCB#=M$IBEX_NUM)
      238     9681    1        THEN
      239     9682    1           CALL CPB$OPENCS;
      240     9683    1   GENRUAM75:;
      241     9684    1     ALTRETURN;
      242     9685    1   END CPE$GENRUAM;
      243     9686                   %EOD;
PL6.E3A0      #001=CPE$GENRUAM File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:38 Page:8    

PL6.E3A0      #001=CPE$GENRUAM File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:38 Page:9    
--  Include file information  --

   CX_MACROS_M.:E05TOU  is referenced.
   XU_SUBS_C.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   CP_PERR_C.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPE$GENRUAM.

   Procedure CPE$GENRUAM requires 321 words for executable code.
   Procedure CPE$GENRUAM requires 204 words of local(AUTO) storage.

PL6.E3A0      #001=CPE$GENRUAM File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:38 Page:10   

 Object Unit name= CPE$GENRUAM                                File name= CPE$SUBR.:E05TOU
 UTS= JUL 29 '97 11:38:06.08 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS      7      7  CPE$GENRUAM
    2   Proc  even  none   321    501  CPE$GENRUAM
    3  RoData even  none    15     17  CPE$GENRUAM

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        5  CPE$GENRUAM

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 CPC$GETDCB
         yes           Std       4 CXB$BLDAM
         yes           Std       6 CPC$WRITEMSGE
         yes           Std       0 CPB$OPENCS
         yes           Std       3 CXC$WRITEAM
         yes           Std       5 CXP$POSTERR
         yes           Std       1 CPC$RELDCB
                       nStd      0 X66_AUTO_5
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #001=CPE$GENRUAM File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:38 Page:11   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  CFPT_OPEN                             CFPT_FID
     DRIBBLEDCB                       r    SEG2$                            r    SEG3$
r    B$JIT$                           r    B$TCB$                                M$IBEX_NUM
     M$IBEX1_NUM                           M$IBEX2_NUM                           IBEX2TXTC
     LISTDCB                               B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=CPE$GENRUAM File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:38 Page:12   


        1        1        /*M* CPE$GENRUAM, CPE$LISTOUT, CPE$RFEXT, CPE$RZEROS */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*  DMC,DFC   */
        8        8        /*F*   NAME:   CPE$GENRUAM
        9        9               PURPOSE: Generate assign merge records for run unit output assignments
       10       10                       for object,listout, and diagnostic output. These assignments
       11       11                       are made for the LIST,COMMENT and run unit commands
       12       12                       containing ON/OVER/INTO keywords.
       13       13               DESCRIPTION: A determination is made whether ON,OVER or INTO was
       14       14                       specified. If OVER or ON is specified the options FUN=CREATE
       15       15                       and EXIST=NEWFILE are set. If INTO is specified
       16       16                       the options FUN=CREATE and EXIST=OLDFILE are set. If ON is
       17       17                       specified, and EXIST_CHK_FLG is set, a check is made for the
       18       18                       absence of the specified file. An assign-merge record is created
       19       19                       for the specified dcb.
       20       20        */
       21       21        /*D*   NAME:   CPE$GENRUAM
       22       22               CALL:   CALL CPE$GENRUAM(BLK$,ONOVERINTO$,FID$,DCBNAME,EXIST_CHK_FLG)
       23       23               INTERFACE: CXB$BLDAM,CXC$WRITEAM,CPC$GETDCB
       24       24               INPUT:  BLK$ - pointer to parsed ouput
       25       25                       ONOVERINTO$ - pointer to parse block containing ON,OVER,INTO
       26       26                       DCBNAME$ - ptr to dcb name for A/M generation
       27       27                       FID$ - pointer to fid
       28       28                       EXIST_CHK_FLG - Flg to indicate whether to check for existence.
       29       29               OUTPUT: keyed record to *A file
       30       30               DESCRIPTION: If ON is specified, and EXIST_CHK_FLG is true, a test is
       31       31                       performed to determine file absence or presence. An error return
       32       32                       is made if found for ON. For ON and
       33       33                       OVER FUN is set to CREATE and EXIST to NEWFILE. For INTO
       34       34                       FUN is set to UPDATE. An assign merge record is written to
       35       35                       the *A file for the specified dcb.
       36       36        */
PL6.E3A0      #001=CPE$GENRUAM File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:38 Page:13   
       37       37        /*************************************************************************/
       38       38        CPE$GENRUAM: PROC(BLK$,ONOVERINTO$,FID$,DCBNAME$,EXIST_CHK_FLG) ALTRET;

     38  2 000000   000000 700200 xent  CPE$GENRUAM  TSX0  ! X66_AUTO_5
         2 000001   000314 000005                    ZERO    204,5

       39       39                   %INCLUDE CP_6;
       40      120                   %INCLUDE B$JIT;
       41      410                   %INCLUDE XU_MACRO_C;
       42     3516                   %INCLUDE CP_DATA_R;
       43     6079                   %INCLUDE CP_6_SUBS;
       44     6619                   %INCLUDE CP_MACROS_C;
       45     7371                   %INCLUDE CP_SUBS_C;
       46     8288                   %INCLUDE CP_PERR_C;
       47     8626                   %INCLUDE B_MACROS_C;
       48     8737                   %INCLUDE XU_SUBS_C;
       49     8829                   %INCLUDE CX_MACROS_M ;
       50     8880    1   DCL BLK$ PTR;                           /*Ptr to parse output*/
       51     8881    1   DCL ONOVERINTO$ PTR;                    /*Ptr to on/over/into*/
       52     8882    1   DCL FID$ PTR;                           /*Ptr to fid*/
       53     8883    1   DCL DCBNAME$ PTR;
       54     8884    1   DCL EXIST_CHK_FLG BIT(1) PARAM ;
       55     8885        %VLP_NAME (FPTN=FID_NAME,LEN=31,STCLASS=AUTO);
       56     8912        %VLP_ACCT (FPTN=FID_ACCT,STCLASS=AUTO);
       57     8925        %VLP_PASS (FPTN=FID_PASS,STCLASS=AUTO);
       58     8938        %VLP_WSN (FPTN=FID_WSN,STCLASS=AUTO);
       59     8951        %VLP_SN (FPTN=FID_SN,N=50,STCLASS=AUTO);
       60     8964    1   DCL FID_ASN UBIN(9);
       61     8965    1   DCL FID_RES CHAR(4);
       62     8966        %CPSL_COMMAND_PARAMETERS (NAME=CPSL_PARAM, STCLASS=AUTO) ;
       63     8984    1   DCL 1 M$DODCB CONSTANT DALIGNED,
       64     8985    1          2 CNT UBIN(9) INIT(4) UNAL,
       65     8986    1          2 TXT CHAR(4) INIT('M$DO');
       66     8987    1   DCL 1 DCB#3 CONSTANT DALIGNED,
       67     8988    1          2 CNT UBIN(9) INIT(2) UNAL,
       68     8989    1          2 TXT CHAR(2) INIT('#3');
       69     8990    1     DCL DCB# UBIN WORD;
PL6.E3A0      #001=CPE$GENRUAM File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:38 Page:14   
       70     8991        /***** Fpts *****/
       71     8992          %FPT_FID (FPTN=FPT_FID,STCLASS=AUTO);
       72     9015          %VLR_FID (FPTN=FID_RESULTS,STCLASS=AUTO);
       73     9034          %FPT_OPEN (FPTN=FPT_OPEN,STCLASS=AUTO);
       74     9143        /***** Based structures *****/
       75     9144          %SEG$2;
       76     9204          %B$EXCFR;
       77     9222          %B$TCB (STCLASS="BASED(B$TCB$)");
       78     9225          %TEXTC;
       79     9230          %F$DCB;
       80     9287          %PARSE$OUT (NAME=P$B);
       81     9332          %FPT_CLOSE(FPTN=FPT$CLOSE,STCLASS=BASED);
       82     9374          %FPT_OPEN(FPTN=AMR$REC$,STCLASS="BASED(SEG3$)",PFMT="PTR");
       83     9483          %VLP_ACCT(FPTN=AM$ACCT,STCLASS=BASED);
       84     9496          %VLP_SN(FPTN=AM$SN,STCLASS=BASED);
       85     9509        /***** External routines *****/
       86     9510    1     DCL CPC$GETDCB ENTRY(2);                /*Get spec'd dcb*/
       87     9511    1     DCL CPC$WRITEMSGE ENTRY(6);
       88     9512    1     DCL CPC$RELDCB ENTRY(1);                /*Release spec'd dcb*/
       89     9513    1     DCL CXB$BLDAM ENTRY(4) ;                /*Bld spec'd a/m record*/
       90     9514    1     DCL CXC$WRITEAM ENTRY(3) ;              /*Gen spec'd a/m record*/
       91     9515    1     DCL CXP$POSTERR ENTRY(5);
       92     9516    1     DCL CPB$OPENCS ENTRY;
       93     9517        /***** Error codes *****/
       94     9518          %ERR_CODE (NAME=E_ONFID,MID#=CPE$IBEXMID,CODE#=E$ONFID,STCLASS=CONSTANT);
       95     9538             %EJECT;
PL6.E3A0      #001=CPE$GENRUAM File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:38 Page:15   
       96     9539        /*
       97     9540          **** Get the spec'd fid
       98     9541        */
       99     9542    1     FPT_FID=CFPT_FID;

   9542  2 000002   000100 100400                    MLR     fill='000'O
         2 000003   000000 000140 xsym               ADSC9   CFPT_FID                 cn=0,n=96
         2 000004   200152 000140                    ADSC9   FPT_FID,,AUTO            cn=0,n=96

      100     9543    1     FPT_FID.V_=VECTOR(FPT_FID.V);

   9543  2 000005   000000 235000 3                  LDA     0
         2 000006   200306 452500                    STP2    FPT_OPEN+58,,AUTO
         2 000007   200306 236100                    LDQ     FPT_OPEN+58,,AUTO
         2 000010   000176 036003                    ADLQ    126,DU
         2 000011   200152 757100                    STAQ    FPT_FID,,AUTO

      101     9544    1     FPT_FID.TEXTFID_=VECTOR(FID$->TEXTC.TEXT);

   9544  2 000012   200005 470500                    LDP0    @FID$,,AUTO
         2 000013   000000 471500                    LDP1    0,,PR0
         2 000014   000100 101500                    MRL     fill='000'O
         2 000015   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 000016   200306 000002                    ADSC9   FPT_OPEN+58,,AUTO        cn=0,n=2
         2 000017   200306 220100                    LDX0    FPT_OPEN+58,,AUTO
         2 000020   000000 635010                    EAA     0,X0
         2 000021   000002 771000                    ARL     2
         2 000022   000140 135007                    SBLA    96,DL
         2 000023   200307 451500                    STP1    FPT_OPEN+59,,AUTO
         2 000024   200307 236100                    LDQ     FPT_OPEN+59,,AUTO
         2 000025   200000 036007                    ADLQ    65536,DL
         2 000026   200154 757100                    STAQ    FPT_FID+2,,AUTO

      102     9545    1     FPT_FID.NAME_=VECTOR(FID_NAME);

   9545  2 000027   000001 235000 3                  LDA     1
         2 000030   200306 452500                    STP2    FPT_OPEN+58,,AUTO
PL6.E3A0      #001=CPE$GENRUAM File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:38 Page:16   
         2 000031   200306 236100                    LDQ     FPT_OPEN+58,,AUTO
         2 000032   000010 036003                    ADLQ    8,DU
         2 000033   200156 757100                    STAQ    FPT_FID+4,,AUTO

      103     9546    1     FPT_FID.ACCT_=VECTOR(FID_ACCT);

   9546  2 000034   000002 235000 3                  LDA     2
         2 000035   200306 452500                    STP2    FPT_OPEN+58,,AUTO
         2 000036   200306 236100                    LDQ     FPT_OPEN+58,,AUTO
         2 000037   000020 036003                    ADLQ    16,DU
         2 000040   200160 757100                    STAQ    FPT_FID+6,,AUTO

      104     9547    1     FPT_FID.PASS_=VECTOR(FID_PASS);

   9547  2 000041   000002 235000 3                  LDA     2
         2 000042   200306 452500                    STP2    FPT_OPEN+58,,AUTO
         2 000043   200306 236100                    LDQ     FPT_OPEN+58,,AUTO
         2 000044   000022 036003                    ADLQ    18,DU
         2 000045   200162 757100                    STAQ    FPT_FID+8,,AUTO

      105     9548    1     FPT_FID.SN_=VECTOR(FID_SN);

   9548  2 000046   000003 235000 3                  LDA     3
         2 000047   200306 452500                    STP2    FPT_OPEN+58,,AUTO
         2 000050   200306 236100                    LDQ     FPT_OPEN+58,,AUTO
         2 000051   000026 036003                    ADLQ    22,DU
         2 000052   200164 757100                    STAQ    FPT_FID+10,,AUTO

      106     9549    1     FPT_FID.WSN_=VECTOR(FID_WSN);

   9549  2 000053   000002 235000 3                  LDA     2
         2 000054   200306 452500                    STP2    FPT_OPEN+58,,AUTO
         2 000055   200306 236100                    LDQ     FPT_OPEN+58,,AUTO
         2 000056   000024 036003                    ADLQ    20,DU
         2 000057   200166 757100                    STAQ    FPT_FID+12,,AUTO

      107     9550    1     FPT_FID.ASN_=VECTOR(FID_ASN);
PL6.E3A0      #001=CPE$GENRUAM File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:38 Page:17   

   9550  2 000060   777640 235007                    LDA     -96,DL
         2 000061   200306 452500                    STP2    FPT_OPEN+58,,AUTO
         2 000062   200306 236100                    LDQ     FPT_OPEN+58,,AUTO
         2 000063   000142 036003                    ADLQ    98,DU
         2 000064   200170 757100                    STAQ    FPT_FID+14,,AUTO

      108     9551    1     FPT_FID.RES_=VECTOR(FID_RES);

   9551  2 000065   777640 235007                    LDA     -96,DL
         2 000066   200306 452500                    STP2    FPT_OPEN+58,,AUTO
         2 000067   200306 236100                    LDQ     FPT_OPEN+58,,AUTO
         2 000070   000143 036003                    ADLQ    99,DU
         2 000071   200172 757100                    STAQ    FPT_FID+16,,AUTO

      109     9552    1     FPT_FID.RESULTS_=VECTOR(FID_RESULTS);

   9552  2 000072   000004 235000 3                  LDA     4
         2 000073   200306 452500                    STP2    FPT_OPEN+58,,AUTO
         2 000074   200306 236100                    LDQ     FPT_OPEN+58,,AUTO
         2 000075   000202 036003                    ADLQ    130,DU
         2 000076   200174 757100                    STAQ    FPT_FID+18,,AUTO

      110     9553    1     CALL M$FID(FPT_FID) ALTRET(GENRUAM50);

   9553  2 000077   200152 630500                    EPPR0   FPT_FID,,AUTO
         2 000100   420001 713400                    CLIMB   alt,+8193
         2 000101   404400 401760                    pmme    nvectors=10
         2 000102   000413 702000 2                  TSX2    GENRUAM50

      111     9554        /*
      112     9555          **** If file type fid and on spec'd, must init. Open fpt to
      113     9556               determine file existence
      114     9557        */
      115     9558    1     DCB# = 0;

   9558  2 000103   200151 450100                    STZ     DCB#,,AUTO
PL6.E3A0      #001=CPE$GENRUAM File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:38 Page:18   

      116     9559    1     IF (FID_ASN=%FILE# AND ONOVERINTO$->P$B.CODE=ONOPT AND EXIST_CHK_FLG)

   9559  2 000104   200142 236100                    LDQ     FID_ASN,,AUTO
         2 000105   777000 376003                    ANQ     -512,DU
         2 000106   001000 116003                    CMPQ    512,DU
         2 000107   000175 601000 2                  TNZ     GENRUAM10
         2 000110   200004 470500                    LDP0    @ONOVERINTO$,,AUTO
         2 000111   000000 471500                    LDP1    0,,PR0
         2 000112   100000 720100                    LXL0    0,,PR1
         2 000113   000004 100003                    CMPX0   4,DU
         2 000114   000175 601000 2                  TNZ     GENRUAM10
         2 000115   200007 473500                    LDP3    @EXIST_CHK_FLG,,AUTO
         2 000116   000000 066500                    CMPB    filb='0'B
         2 000117   300000 000001                    BDSC    0,,PR3                   by=0,bit=0,n=1
         2 000120   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         2 000121   000175 600000 2                  TZE     GENRUAM10

      117     9560
      118     9561    1        THEN
      119     9562    2           DO;

      120     9563    2              FPT_OPEN=CFPT_OPEN;

   9563  2 000122   000100 100400                    MLR     fill='000'O
         2 000123   000000 000350 xsym               ADSC9   CFPT_OPEN                cn=0,n=232
         2 000124   200214 000350                    ADSC9   FPT_OPEN,,AUTO           cn=0,n=232

      121     9564    2              FPT_OPEN.V_=VECTOR(FPT_OPEN.V);

   9564  2 000125   000005 235000 3                  LDA     5
         2 000126   200306 452500                    STP2    FPT_OPEN+58,,AUTO
         2 000127   200306 236100                    LDQ     FPT_OPEN+58,,AUTO
         2 000130   000260 036003                    ADLQ    176,DU
         2 000131   200214 757100                    STAQ    FPT_OPEN,,AUTO

      122     9565    2              FPT_OPEN.NAME_ = FPT_FID.NAME_;
PL6.E3A0      #001=CPE$GENRUAM File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:38 Page:19   

   9565  2 000132   200156 237100                    LDAQ    FPT_FID+4,,AUTO
         2 000133   200222 757100                    STAQ    FPT_OPEN+6,,AUTO

      123     9566    2              FPT_OPEN.ACCT_ = FPT_FID.ACCT_;

   9566  2 000134   200160 237100                    LDAQ    FPT_FID+6,,AUTO
         2 000135   200240 757100                    STAQ    FPT_OPEN+20,,AUTO

      124     9567    2              FPT_OPEN.PASS_ = FPT_FID.PASS_;

   9567  2 000136   200162 237100                    LDAQ    FPT_FID+8,,AUTO
         2 000137   200224 757100                    STAQ    FPT_OPEN+8,,AUTO

      125     9568    2              FPT_OPEN.SN_ = FPT_FID.SN_;

   9568  2 000140   200164 237100                    LDAQ    FPT_FID+10,,AUTO
         2 000141   200216 757100                    STAQ    FPT_OPEN+2,,AUTO

      126     9569    2              FPT_OPEN.WSN_ = FPT_FID.WSN_;

   9569  2 000142   200166 237100                    LDAQ    FPT_FID+12,,AUTO
         2 000143   200246 757100                    STAQ    FPT_OPEN+26,,AUTO

      127     9570    2              IF (FID_RESULTS.RES=%YES#)

   9570  2 000144   200202 236100                    LDQ     FID_RESULTS,,AUTO
         2 000145   004000 316003                    CANQ    2048,DU
         2 000146   000151 600000 2                  TZE     s:9573

      128     9571    2                 THEN
      129     9572    2                    FPT_OPEN.V.RES#=FID_RES;

   9572  2 000147   200143 236100                    LDQ     FID_RES,,AUTO
         2 000150   200264 756100                    STQ     FPT_OPEN+40,,AUTO

      130     9573    2              CALL CPC$GETDCB(M$IBEX2_NUM, IBEX2TXTC);
PL6.E3A0      #001=CPE$GENRUAM File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:38 Page:20   

   9573  2 000151   000006 630400 3                  EPPR0   6
         2 000152   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000153   000000 701000 xent               TSX1    CPC$GETDCB
         2 000154   000000 011000                    NOP     0

      131     9574    2              DCB# = M$IBEX2_NUM;

   9574  2 000155   000000 235000 xsym               LDA     M$IBEX2_NUM
         2 000156   200151 755100                    STA     DCB#,,AUTO

      132     9575    2              FPT_OPEN.V.DCB#=M$IBEX2_NUM;

   9575  2 000157   000000 620005                    EAX0    0,AL
         2 000160   200260 740100                    STX0    FPT_OPEN+36,,AUTO

      133     9576    2              FPT_OPEN.V.ASN#=FID_ASN;

   9576  2 000161   200142 236100                    LDQ     FID_ASN,,AUTO
         2 000162   000033 772000                    QRL     27
         2 000163   200261 552104                    STBQ    FPT_OPEN+37,'04'O,AUTO

      134     9577    2              FPT_OPEN.V.ACS#=%SEQUEN#;

   9577  2 000164   000001 236007                    LDQ     1,DL
         2 000165   200262 552104                    STBQ    FPT_OPEN+38,'04'O,AUTO

      135     9578    2              FPT_OPEN.V.OPER.TEST#=%YES#;

   9578  2 000166   020000 236007                    LDQ     8192,DL
         2 000167   200260 256100                    ORSQ    FPT_OPEN+36,,AUTO

      136     9579        /*
      137     9580          **** Make sure file non-existant for on
      138     9581        */
      139     9582    2              CALL M$OPEN(FPT_OPEN) ALTRET(GENRUAM10);

PL6.E3A0      #001=CPE$GENRUAM File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:38 Page:21   
   9582  2 000170   200214 630500                    EPPR0   FPT_OPEN,,AUTO
         2 000171   450000 713400                    CLIMB   alt,open
         2 000172   410400 401760                    pmme    nvectors=18
         2 000173   000175 702000 2                  TSX2    GENRUAM10

      140     9583                                                /* File exists - error                */
      141     9584    2              GOTO GENRUAM60;

   9584  2 000174   000421 710000 2                  TRA     GENRUAM60

   9578  2 000175                       GENRUAM10    null
      142     9585    2   GENRUAM10: ;
      143     9586    2           END;

      144     9587        /*
      145     9588          **** Build the desired a/m record
      146     9589        */
      147     9590    1     CPSL_PARAM = %NO# ;

   9590  2 000175   000100 100400                    MLR     fill='000'O
         2 000176   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         2 000177   200144 000024                    ADSC9   CPSL_PARAM,,AUTO         cn=0,n=20

      148     9591    1     CALL CXB$BLDAM(BLK$,FID$,M$IBEX1_NUM,CPSL_PARAM) ;

   9591  2 000200   200144 630500                    EPPR0   CPSL_PARAM,,AUTO
         2 000201   200311 450500                    STP0    FPT_OPEN+61,,AUTO
         2 000202   000010 236000 3                  LDQ     8
         2 000203   200310 756100                    STQ     FPT_OPEN+60,,AUTO
         2 000204   200005 236100                    LDQ     @FID$,,AUTO
         2 000205   200003 235100                    LDA     @BLK$,,AUTO
         2 000206   200306 757100                    STAQ    FPT_OPEN+58,,AUTO
         2 000207   200306 630500                    EPPR0   FPT_OPEN+58,,AUTO
         2 000210   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 000211   000000 701000 xent               TSX1    CXB$BLDAM
         2 000212   000000 011000                    NOP     0

PL6.E3A0      #001=CPE$GENRUAM File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:38 Page:22   
      149     9592    1     IF B$JIT.USRERR ~= %NO#

   9592  2 000213   000000 470400 xsym               LDP0    B$JIT$
         2 000214   000144 235100                    LDA     100,,PR0
         2 000215   000464 601000 2                  TNZ     GENRUAM70

      150     9593    1         THEN
      151     9594    1             GOTO GENRUAM70 ;
      152     9595        /*
      153     9596          **** For in and over, set parameters to create newfile and for into,
      154     9597               create oldfile.
      155     9598        */
      156     9599    1     AMR$REC$.V.FUN#=%CREATE#;

   9599  2 000216   000000 471400 xsym               LDP1    SEG3$
         2 000217   003000 236007                    LDQ     1536,DL
         2 000220   100023 552110                    STBQ    19,'10'O,PR1

      157     9600    2     DO CASE (ONOVERINTO$->P$B.CODE) ;

   9600  2 000221   200004 473500                    LDP3    @ONOVERINTO$,,AUTO
         2 000222   300000 474500                    LDP4    0,,PR3
         2 000223   400000 236100                    LDQ     0,,PR4
         2 000224   777777 376007                    ANQ     -1,DL
         2 000225   000005 136007                    SBLQ    5,DL
         2 000226   000002 116007                    CMPQ    2,DL
         2 000227   000231 602006 2                  TNC     s:9600+8,QL
         2 000230   000243 710000 2                  TRA     s:9609
         2 000231   000240 710000 2                  TRA     s:9606
         2 000232   000233 710000 2                  TRA     s:9603

      158     9601
      159     9602    2         CASE (INTOOPT) ;

      160     9603    2             AMR$REC$.V.EXIST# = %OLDFILE# ;

   9603  2 000233   100022 236100                    LDQ     18,,PR1
PL6.E3A0      #001=CPE$GENRUAM File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:38 Page:23   
         2 000234   000011 376000 3                  ANQ     9
         2 000235   000400 276007                    ORQ     256,DL
         2 000236   100022 756100                    STQ     18,,PR1
         2 000237   000247 710000 2                  TRA     s:9615

      161     9604
      162     9605    2         CASE (OVEROPT) ;

      163     9606    2             AMR$REC$.V.EXIST# = %NEWFILE# ;

   9606  2 000240   000600 236007                    LDQ     384,DL
         2 000241   100022 256100                    ORSQ    18,,PR1
         2 000242   000247 710000 2                  TRA     s:9615

      164     9607
      165     9608    2         CASE (ELSE) ; /* ONOPT */

      166     9609    2             AMR$REC$.V.EXIST# = %ERROR# ;

   9609  2 000243   100022 236100                    LDQ     18,,PR1
         2 000244   000011 376000 3                  ANQ     9
         2 000245   000200 276007                    ORQ     128,DL
         2 000246   100022 756100                    STQ     18,,PR1

      167     9610
      168     9611    2     END ;   /* Do Case */

      169     9612        /*
      170     9613          ****  Assure proper output formatting for list and comment commands
      171     9614        */
      172     9615    1     IF (DCBNAME$->TEXTC=LISTDCB) OR (DCBNAME$->TEXTC=M$DODCB)

   9615  2 000247   200006 474500                    LDP4    @DCBNAME$,,AUTO
         2 000250   400000 475500                    LDP5    0,,PR4
         2 000251   000100 101500                    MRL     fill='000'O
         2 000252   500000 000001                    ADSC9   0,,PR5                   cn=0,n=1
         2 000253   200306 000002                    ADSC9   FPT_OPEN+58,,AUTO        cn=0,n=2
PL6.E3A0      #001=CPE$GENRUAM File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:38 Page:24   
         2 000254   200306 220100                    LDX0    FPT_OPEN+58,,AUTO
         2 000255   000001 621010                    EAX1    1,X0
         2 000256   000000 106540                    CMPC    fill='000'O
         2 000257   500000 000011                    ADSC9   0,,PR5                   cn=0,n=*X1
         2 000260   000000 000003 xsym               ADSC9   LISTDCB                  cn=0,n=3
         2 000261   000274 600000 2                  TZE     s:9617
         2 000262   400000 475500                    LDP5    0,,PR4
         2 000263   000100 101500                    MRL     fill='000'O
         2 000264   500000 000001                    ADSC9   0,,PR5                   cn=0,n=1
         2 000265   200307 000002                    ADSC9   FPT_OPEN+59,,AUTO        cn=0,n=2
         2 000266   200307 222100                    LDX2    FPT_OPEN+59,,AUTO
         2 000267   000001 623012                    EAX3    1,X2
         2 000270   000000 106540                    CMPC    fill='000'O
         2 000271   500000 000013                    ADSC9   0,,PR5                   cn=0,n=*X3
         2 000272   000000 000005 1                  ADSC9   M$DODCB                  cn=0,n=5
         2 000273   000276 601000 2                  TNZ     s:9621

      173     9616    1        THEN
      174     9617    1           AMR$REC$.V.ORG#=%UR#;

   9617  2 000274   004000 236007                    LDQ     2048,DL
         2 000275   100024 552110                    STBQ    20,'10'O,PR1

      175     9618        /*
      176     9619          ****  If dcb is #3 and FID name is *G the set CP_DONTRFEXT3# in B$JIT.
      177     9620        */
      178     9621    1     IF DCBNAME$->TEXTC=DCB#3 AND FID_NAME.NAME# = '*G'

   9621  2 000276   400000 475500                    LDP5    0,,PR4
         2 000277   000100 101500                    MRL     fill='000'O
         2 000300   500000 000001                    ADSC9   0,,PR5                   cn=0,n=1
         2 000301   200306 000002                    ADSC9   FPT_OPEN+58,,AUTO        cn=0,n=2
         2 000302   200306 220100                    LDX0    FPT_OPEN+58,,AUTO
         2 000303   000001 621010                    EAX1    1,X0
         2 000304   000000 106540                    CMPC    fill='000'O
         2 000305   500000 000011                    ADSC9   0,,PR5                   cn=0,n=*X1
         2 000306   000002 000003 1                  ADSC9   DCB#3                    cn=0,n=3
PL6.E3A0      #001=CPE$GENRUAM File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:38 Page:25   
         2 000307   000317 601000 2                  TNZ     s:9627
         2 000310   040000 106500                    CMPC    fill='040'O
         2 000311   200010 200037                    ADSC9   FID_NAME,,AUTO           cn=1,n=31
         2 000312   000005 000002 1                  ADSC9   E_ONFID+1                cn=0,n=2
         2 000313   000317 601000 2                  TNZ     s:9627

      179     9622    1        THEN
      180     9623    1           B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 | %CP_DONTRFEXT3# ;

   9623  2 000314   000143 236100                    LDQ     99,,PR0
         2 000315   000006 276000 1                  ORQ     E_ONFID+2
         2 000316   000143 756100                    STQ     99,,PR0

      181     9624        /*
      182     9625          ****  ASSIGN MERGE RECORD FOR DRIBBLE MUST CONTAIN AN ACCOUNT
      183     9626        */
      184     9627    1     IF (DCBNAME$ -> TEXTC = DRIBBLEDCB) AND (FID_RESULTS.ACCT = %NO#)

   9627  2 000317   400000 475500                    LDP5    0,,PR4
         2 000320   000100 101500                    MRL     fill='000'O
         2 000321   500000 000001                    ADSC9   0,,PR5                   cn=0,n=1
         2 000322   200306 000002                    ADSC9   FPT_OPEN+58,,AUTO        cn=0,n=2
         2 000323   200306 220100                    LDX0    FPT_OPEN+58,,AUTO
         2 000324   000001 621010                    EAX1    1,X0
         2 000325   000000 106540                    CMPC    fill='000'O
         2 000326   500000 000011                    ADSC9   0,,PR5                   cn=0,n=*X1
         2 000327   000000 000005 xsym               ADSC9   DRIBBLEDCB               cn=0,n=5
         2 000330   000355 601000 2                  TNZ     s:9640
         2 000331   200202 236100                    LDQ     FID_RESULTS,,AUTO
         2 000332   200000 316003                    CANQ    65536,DU
         2 000333   000355 601000 2                  TNZ     s:9640

      185     9628    1        THEN
      186     9629    1           IF AMR$REC$.ACCT_ ~= ADDR(NIL)

   9629  2 000334   100012 236100                    LDQ     10,,PR1
         2 000335   000001 116000 xsym               CMPQ    B_VECTNIL+1
PL6.E3A0      #001=CPE$GENRUAM File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:38 Page:26   
         2 000336   000355 600000 2                  TZE     s:9640

      187     9630    1              THEN
      188     9631    2                 DO ;

      189     9632    2                   AMR$REC$.ACCT_ -> AM$ACCT.ACCT# = B$JIT.FACCN;

   9632  2 000337   100012 475500                    LDP5    10,,PR1
         2 000340   040100 100500                    MLR     fill='040'O
         2 000341   000006 000010                    ADSC9   6,,PR0                   cn=0,n=8
         2 000342   500000 000010                    ADSC9   0,,PR5                   cn=0,n=8

      190     9633    2                   IF NOT FID_RESULTS.SN

   9633  2 000343   200202 236100                    LDQ     FID_RESULTS,,AUTO
         2 000344   040000 316003                    CANQ    16384,DU
         2 000345   000355 601000 2                  TNZ     s:9640

      191     9634    2                     THEN
      192     9635    3                       DO ;

      193     9636    3                         AMR$REC$.SN_ -> AM$SN.NUM# = 1 ;

   9636  2 000346   100001 475500                    LDP5    1,,PR1
         2 000347   000001 235007                    LDA     1,DL
         2 000350   500000 755100                    STA     0,,PR5

      194     9637    3                         AMR$REC$.SN_ -> AM$SN.SN#(0) = B$JIT.FPSN ;

   9637  2 000351   100001 475500                    LDP5    1,,PR1
         2 000352   040100 100500                    MLR     fill='040'O
         2 000353   000021 000006                    ADSC9   17,,PR0                  cn=0,n=6
         2 000354   500001 000006                    ADSC9   1,,PR5                   cn=0,n=6

      195     9638    3                       END ; /* Then Do */

      196     9639    2                 END ; /* Then Do */
PL6.E3A0      #001=CPE$GENRUAM File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:38 Page:27   

      197     9640    1     CPSL_PARAM = %NO# ;

   9640  2 000355   000100 100400                    MLR     fill='000'O
         2 000356   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         2 000357   200144 000024                    ADSC9   CPSL_PARAM,,AUTO         cn=0,n=20

      198     9641    1     CALL CXC$WRITEAM(DCBNAME$,M$IBEX1_NUM,CPSL_PARAM) ;

   9641  2 000360   200144 635500                    EPPR5   CPSL_PARAM,,AUTO
         2 000361   200310 455500                    STP5    FPT_OPEN+60,,AUTO
         2 000362   000010 236000 3                  LDQ     8
         2 000363   200006 235100                    LDA     @DCBNAME$,,AUTO
         2 000364   200306 757100                    STAQ    FPT_OPEN+58,,AUTO
         2 000365   200306 630500                    EPPR0   FPT_OPEN+58,,AUTO
         2 000366   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000367   000000 701000 xent               TSX1    CXC$WRITEAM
         2 000370   000000 011000                    NOP     0

      199     9642    1     IF CPSL_PARAM.ERRCODE ~= %NO#

   9642  2 000371   200146 235100                    LDA     CPSL_PARAM+2,,AUTO
         2 000372   000404 600000 2                  TZE     s:9652

      200     9643    1         THEN
      201     9644    1             IF CPSL_PARAM.FLAGS.REPORTED_TO_USER

   9644  2 000373   200145 236100                    LDQ     CPSL_PARAM+1,,AUTO
         2 000374   100000 316003                    CANQ    32768,DU
         2 000375   000464 601000 2                  TNZ     GENRUAM70

      202     9645    1               THEN
      203     9646    1                 GOTO GENRUAM70 ;
      204     9647    1                   ELSE
      205     9648    2                     DO ;

      206     9649    2                       B$JIT.USRERR = CPSL_PARAM.FLAGS.REPORTED_TO_USER ;
PL6.E3A0      #001=CPE$GENRUAM File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:38 Page:28   

   9649  2 000376   200145 236100                    LDQ     CPSL_PARAM+1,,AUTO
         2 000377   000002 736000                    QLS     2
         2 000400   400000 376003                    ANQ     -131072,DU
         2 000401   000000 470400 xsym               LDP0    B$JIT$
         2 000402   000144 756100                    STQ     100,,PR0

      207     9650    2                       GOTO GENRUAM70 ;

   9650  2 000403   000464 710000 2                  TRA     GENRUAM70

      208     9651    2                     END ;
      209     9652    1     IF DCB# ~= 0

   9652  2 000404   200151 236100                    LDQ     DCB#,,AUTO
         2 000405   000412 600000 2                  TZE     s:9657

      210     9653    1        THEN
      211     9654    2           DO;

      212     9655    2              CALL CPC$RELDCB (M$IBEX2_NUM);

   9655  2 000406   000006 630400 3                  EPPR0   6
         2 000407   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000410   000000 701000 xent               TSX1    CPC$RELDCB
         2 000411   000000 011000                    NOP     0

      213     9656    2           END;

      214     9657    1     RETURN;

   9657  2 000412   000000 702200 xent               TSX2  ! X66_ARET

   9652  2 000413                       GENRUAM50    null
      215     9658    1   GENRUAM50:;
      216     9659    1     B$JIT.USRERR = B$TCB.ALT$ -> B$EXCFR.ERR;

PL6.E3A0      #001=CPE$GENRUAM File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:38 Page:29   
   9659  2 000413   000000 470400 xsym               LDP0    B$TCB$
         2 000414   000000 471500                    LDP1    0,,PR0
         2 000415   100102 236100                    LDQ     66,,PR1
         2 000416   000000 473400 xsym               LDP3    B$JIT$
         2 000417   300144 756100                    STQ     100,,PR3

      217     9660    1     ALTRETURN;

   9660  2 000420   000000 702200 xent               TSX2  ! X66_AALT

   9659  2 000421                       GENRUAM60    null
      218     9661    1   GENRUAM60:;
      219     9662        /*E*       ERROR: CPE-E$ONFID-E
      220     9663                   MESSAGE: ON FILE %U1 exists
      221     9664                   DESCRIPTION: The file following the keyword ON already exists.
      222     9665        */
      223     9666    1     IF B$JIT.CPFLAGS1.YCPMME

   9666  2 000421   000000 470400 xsym               LDP0    B$JIT$
         2 000422   000143 236100                    LDQ     99,,PR0
         2 000423   020000 316003                    CANQ    8192,DU
         2 000424   000444 600000 2                  TZE     s:9670

      224     9667    1       THEN
      225     9668    1         CALL CXP$POSTERR (ADDR(SEG$2.ERRBUF), 511, E_ONFID,,M$IBEX_NUM);

   9668  2 000425   000000 236000 xsym               LDQ     SEG2$
         2 000426   000003 036003                    ADLQ    3,DU
         2 000427   200306 756100                    STQ     FPT_OPEN+58,,AUTO
         2 000430   000013 236000 3                  LDQ     11
         2 000431   000001 235000 xsym               LDA     B_VECTNIL+1
         2 000432   200312 757100                    STAQ    FPT_OPEN+62,,AUTO
         2 000433   000014 237000 3                  LDAQ    12
         2 000434   200310 757100                    STAQ    FPT_OPEN+60,,AUTO
         2 000435   200306 631500                    EPPR1   FPT_OPEN+58,,AUTO
         2 000436   200307 451500                    STP1    FPT_OPEN+59,,AUTO
         2 000437   200307 630500                    EPPR0   FPT_OPEN+59,,AUTO
PL6.E3A0      #001=CPE$GENRUAM File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:38 Page:30   
         2 000440   000023 631400 xsym               EPPR1   B_VECTNIL+19
         2 000441   000000 701000 xent               TSX1    CXP$POSTERR
         2 000442   000000 011000                    NOP     0
         2 000443   000461 710000 2                  TRA     s:9671

      226     9669    1       ELSE
      227     9670    1         CALL CPC$WRITEMSGE(E_ONFID,,FID_NAME,,,%YES#);

   9670  2 000444   000016 236000 3                  LDQ     14
         2 000445   000001 235000 xsym               LDA     B_VECTNIL+1
         2 000446   200312 757100                    STAQ    FPT_OPEN+62,,AUTO
         2 000447   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000450   200311 756100                    STQ     FPT_OPEN+61,,AUTO
         2 000451   200010 631500                    EPPR1   FID_NAME,,AUTO
         2 000452   200310 451500                    STP1    FPT_OPEN+60,,AUTO
         2 000453   000015 235000 3                  LDA     13
         2 000454   200306 757100                    STAQ    FPT_OPEN+58,,AUTO
         2 000455   200306 630500                    EPPR0   FPT_OPEN+58,,AUTO
         2 000456   000024 631400 xsym               EPPR1   B_VECTNIL+20
         2 000457   000000 701000 xent               TSX1    CPC$WRITEMSGE
         2 000460   000000 011000                    NOP     0

      228     9671    1     B$JIT.STEPCC = %CC_ERR#;

   9671  2 000461   000000 470400 xsym               LDP0    B$JIT$
         2 000462   000004 236003                    LDQ     4,DU
         2 000463   000316 552120                    STBQ    206,'20'O,PR0

   9671  2 000464                       GENRUAM70    null
      229     9672    1   GENRUAM70:;
      230     9673    1     IF (DCB# ~= 0)

   9673  2 000464   200151 235100                    LDA     DCB#,,AUTO
         2 000465   000472 600000 2                  TZE     s:9680

      231     9674    1        THEN
      232     9675    1           CALL CPC$RELDCB(M$IBEX2_NUM);
PL6.E3A0      #001=CPE$GENRUAM File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:38 Page:31   

   9675  2 000466   000006 630400 3                  EPPR0   6
         2 000467   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000470   000000 701000 xent               TSX1    CPC$RELDCB
         2 000471   000000 011000                    NOP     0

      233     9676        /*
      234     9677          ****     If we used M$IBEX and it's also being used for reading control
      235     9678                   commands, get it back and open to command stream.
      236     9679        */
      237     9680    1     IF (DCB#=M$IBEX_NUM)

   9680  2 000472   200151 236100                    LDQ     DCB#,,AUTO
         2 000473   000000 116000 xsym               CMPQ    M$IBEX_NUM
         2 000474   000500 601000 2                  TNZ     GENRUAM75

      238     9681    1        THEN
      239     9682    1           CALL CPB$OPENCS;

   9682  2 000475   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000476   000000 701000 xent               TSX1    CPB$OPENCS
         2 000477   000000 011000                    NOP     0

   9680  2 000500                       GENRUAM75    null
      240     9683    1   GENRUAM75:;
      241     9684    1     ALTRETURN;

   9684  2 000500   000000 702200 xent               TSX2  ! X66_AALT
      242     9685    1   END CPE$GENRUAM;
      243     9686                   %EOD;

PL6.E3A0      #001=CPE$GENRUAM File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:38 Page:32   
--  Include file information  --

   CX_MACROS_M.:E05TOU  is referenced.
   XU_SUBS_C.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   CP_PERR_C.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPE$GENRUAM.
PL6.E3A0      #001=CPE$GENRUAM File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:38 Page:33   

 **** Variables and constants ****

  ****  Section 001 RoData CPE$GENRUAM

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     2-0-0/d STRC(27)    r     1 DCB#3                      4-0-0/w STRC        r     1 E_ONFID
     0-0-0/d STRC(45)    r     1 M$DODCB

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @BLK$                      6-0-0/w PTR         r     1 @DCBNAME$
     7-0-0/w PTR         r     1 @EXIST_CHK_FLG             5-0-0/w PTR         r     1 @FID$
     4-0-0/w PTR         r     1 @ONOVERINTO$              *0-0-0/w PTR         r     1 BLK$
   144-0-0/w STRC(180)   r     1 CPSL_PARAM               151-0-0/w UBIN        r     1 DCB#
    *0-0-0/w PTR         r     1 DCBNAME$                  *0-0-0/b BIT         r     1 EXIST_CHK_FLG
    *0-0-0/w PTR         r     1 FID$                      20-0-0/c STRC(72)    r     1 FID_ACCT
   142-0-0/w UBIN(9)     r     1 FID_ASN                   10-0-0/c STRC(288)   r     1 FID_NAME
    22-0-0/c STRC(72)    r     1 FID_PASS                 143-0-0/c CHAR(4)     r     1 FID_RES
   202-0-0/d STRC(324)   r     1 FID_RESULTS               26-0-0/d STRC(2736)  r     1 FID_SN
    24-0-0/c STRC(72)    r     1 FID_WSN                  152-0-0/d STRC(864)   r     1 FPT_FID
   214-0-0/d STRC(2088)  r     1 FPT_OPEN                  *0-0-0/w PTR         r     1 ONOVERINTO$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$TCB$
     0-0-0/d STRC(864)   r     1 CFPT_FID                   0-0-0/d STRC(2088)  r     1 CFPT_OPEN
     0-0-0/c STRC(45)    r     1 DRIBBLEDCB                 0-0-0/d STRC(72)    r     1 IBEX2TXTC
     0-0-0/d STRC(27)    r     1 LISTDCB                    0-0-0/w UBIN        r     1 M$IBEX1_NUM
     0-0-0/w UBIN        r     1 M$IBEX2_NUM                0-0-0/w UBIN        r     1 M$IBEX_NUM
PL6.E3A0      #001=CPE$GENRUAM File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:38 Page:34   
     0-0-0/w PTR         r     1 SEG2$                      0-0-0/w PTR         r     1 SEG3$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(72)    r     1 AM$ACCT                    0-0-0/d STRC(90)    r     1 AM$SN
     0-0-0/d STRC(1440)  r     1 AMR$REC$                   0-0-0/w STRC(2448)  r     1 B$EXCFR
     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0/w STRC(144)   r     1 P$B
     0-0-0/w STRC(6264)  r     1 SEG$2                      0-0-0/c ASTR(9)     r     1 TEXTC


   Procedure CPE$GENRUAM requires 321 words for executable code.
   Procedure CPE$GENRUAM requires 204 words of local(AUTO) storage.
PL6.E3A0      #001=CPE$GENRUAM File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:38 Page:35   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=CPE$GENRUAM File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:38 Page:36   
          MINI XREF LISTING

AM$ACCT.ACCT#
      9494**DCL      9632<<ASSIGN
AM$SN.NUM#
      9507**DCL      9636<<ASSIGN
AM$SN.SN#
      9507**DCL      9637<<ASSIGN
AMR$REC$.ACCT_
      9443**DCL      9629>>IF       9632>>ASSIGN
AMR$REC$.ACSVEH_
      9441**DCL      9442--REDEF
AMR$REC$.ALTKEYS_
      9447**DCL      9448--REDEF    9448--REDEF
AMR$REC$.HDR_
      9446**DCL      9447--REDEF
AMR$REC$.SN_
      9439**DCL      9636>>ASSIGN   9637>>ASSIGN
AMR$REC$.TAB_
      9445**DCL      9446--REDEF
AMR$REC$.UHL_
      9439**DCL      9440--REDEF    9440--REDEF
AMR$REC$.V.EXIST#
      9452**DCL      9603<<ASSIGN   9606<<ASSIGN   9609<<ASSIGN
AMR$REC$.V.FSN#
      9479**DCL      9479--REDEF    9479--REDEF
AMR$REC$.V.FUN#
      9458**DCL      9599<<ASSIGN
AMR$REC$.V.ORG#
      9459**DCL      9617<<ASSIGN
AMR$REC$.WSN_
      9445**DCL      9445--REDEF
B$EXCFR.ASL
      9205**DCL      9205--REDEF
PL6.E3A0      #001=CPE$GENRUAM File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:38 Page:37   
B$EXCFR.ERR
      9219**DCL      9659>>ASSIGN
B$EXCFR.ERR.ERR#
      9219**DCL      9219--REDEF
B$EXCFR.EVID
      9218**DCL      9218--REDEF    9219--REDEF
B$EXCFR.IR
      9206**DCL      9206--REDEF
B$EXCFR.PREVSZ
      9205**DCL      9205--REDEF
B$EXCFR.SUBC
      9217**DCL      9217--REDEF    9218--REDEF    9218--REDEF
B$JIT.CPFLAGS1
       223**DCL      9623<<ASSIGN   9623>>ASSIGN
B$JIT.CPFLAGS1.SLEAZE
       228**DCL       228--REDEF
B$JIT.CPFLAGS1.YCPMME
       224**DCL      9666>>IF
B$JIT.ERR.MID
       135**DCL       135--REDEF
B$JIT.FACCN
       134**DCL      9632>>ASSIGN
B$JIT.FPSN
       215**DCL      9637>>ASSIGN
B$JIT.JRESPEAK
       296**DCL       297--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       405**DCL       405--REDEF     406--REDEF
B$JIT.PNR
       309**DCL       309--REDEF
B$JIT.STEPCC
       361**DCL      9671<<ASSIGN
B$JIT.TSLINE
       403**DCL       404--REDEF
B$JIT.USRERR
       270**DCL      9592>>IF       9649<<ASSIGN   9659<<ASSIGN
PL6.E3A0      #001=CPE$GENRUAM File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:38 Page:38   
B$JIT$
      6012**DCL       129--IMP-PTR  9592>>IF       9623>>ASSIGN   9623>>ASSIGN   9632>>ASSIGN   9637>>ASSIGN
      9649>>ASSIGN   9659>>ASSIGN   9666>>IF       9671>>ASSIGN
B$TCB.ALT$
      9223**DCL      9659>>ASSIGN
B$TCB$
      6014**DCL      9223--IMP-PTR  9659>>ASSIGN
BLK$
      8880**DCL        38--PROC     9293--IMP-PTR  9591<>CALL
CAMR_REC.ACSVEH_
      5051**DCL      5052--REDEF
CAMR_REC.ALTKEYS_
      5057**DCL      5058--REDEF    5058--REDEF
CAMR_REC.HDR_
      5056**DCL      5057--REDEF
CAMR_REC.TAB_
      5055**DCL      5056--REDEF
CAMR_REC.UHL_
      5049**DCL      5050--REDEF    5050--REDEF
CAMR_REC.V.FSN#
      5089**DCL      5089--REDEF    5089--REDEF
CAMR_REC.WSN_
      5055**DCL      5055--REDEF
CFPT_CLOSE.SN_
      3893**DCL      3893--REDEF
CFPT_CLOSE.UTL_
      3894**DCL      3894--REDEF
CFPT_CLOSE.V.EXPIRE#
      3908**DCL      3908--REDEF
CFPT_CLOSE.V.TYPE#
      3906**DCL      3906--REDEF
CFPT_CLOSE.V.XTNSIZE#
      3903**DCL      3903--REDEF    3905--REDEF
CFPT_FID
      4200**DCL      9542>>ASSIGN
CFPT_OPEN
PL6.E3A0      #001=CPE$GENRUAM File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:38 Page:39   
      3826**DCL      9563>>ASSIGN
CFPT_OPEN.ACSVEH_
      3828**DCL      3829--REDEF
CFPT_OPEN.ALTKEYS_
      3834**DCL      3835--REDEF    3835--REDEF
CFPT_OPEN.HDR_
      3833**DCL      3834--REDEF
CFPT_OPEN.TAB_
      3832**DCL      3833--REDEF
CFPT_OPEN.UHL_
      3826**DCL      3827--REDEF    3827--REDEF
CFPT_OPEN.V.FSN#
      3866**DCL      3866--REDEF    3866--REDEF
CFPT_OPEN.WSN_
      3832**DCL      3832--REDEF
CFPT_READ.STATION_
      3932**DCL      3933--REDEF
CFPT_READ.V.DVBYTE.REREAD#
      3944**DCL      3944--REDEF
CFPT_READ.V.INDX#
      3942**DCL      3942--REDEF
CFPT_READUC.STATION_
      4302**DCL      4303--REDEF
CFPT_READUC.V.DVBYTE.REREAD#
      4314**DCL      4314--REDEF
CFPT_READUC.V.INDX#
      4312**DCL      4312--REDEF
CFPT_TRTN.V.IR#
      4538**DCL      4539--REDEF
CFPT_WRITE.STATION_
      3970**DCL      3970--REDEF
CFPT_WRITE.V.DVBYTE.VFC#
      3977**DCL      3977--REDEF
CFPT_WRITEUC.STATION_
      4270**DCL      4270--REDEF
CFPT_WRITEUC.V.DVBYTE.VFC#
PL6.E3A0      #001=CPE$GENRUAM File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:38 Page:40   
      4277**DCL      4277--REDEF
CFPT_XXX.V.STEPCC#
      5250**DCL      5250--REDEF
CGETCMD.OUT$
      5271**DCL      5277--REDEF
CPB$OPENCS
      9516**DCL-ENT  9682--CALL
CPC$GETDCB
      9510**DCL-ENT  9573--CALL
CPC$RELDCB
      9512**DCL-ENT  9655--CALL     9675--CALL
CPC$WRITEMSGE
      9511**DCL-ENT  9670--CALL
CPSL_PARAM
      8967**DCL      9590<<ASSIGN   9591<>CALL     9640<<ASSIGN   9641<>CALL
CPSL_PARAM.ERRCODE
      8975**DCL      9642>>IF
CPSL_PARAM.FLAGS.REPORTED_TO_USER
      8972**DCL      9644>>IF       9649>>ASSIGN
CVLP_TRMCTL.BREAKCOUNT
      4862**DCL      4863--REDEF
CVLP_WINDOW.FWINDOW#
      4958**DCL      4958--REDEF    4959--REDEF
CXB$BLDAM
      9513**DCL-ENT  9591--CALL
CXC$WRITEAM
      9514**DCL-ENT  9641--CALL
CXP$POSTERR
      9515**DCL-ENT  9668--CALL
DCB#
      8990**DCL      9558<<ASSIGN   9574<<ASSIGN   9652>>IF       9673>>IF       9680>>IF
DCB#3
      8987**DCL      9621>>IF
DCBNAME$
      8883**DCL        38--PROC     9615>>IF       9615>>IF       9615>>IF       9615>>IF       9621>>IF
      9621>>IF       9627>>IF       9627>>IF       9641<>CALL
PL6.E3A0      #001=CPE$GENRUAM File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:38 Page:41   
DRIBBLEDCB
      4693**DCL      9627>>IF
EXIST_CHK_FLG
      8884**DCL        38--PROC     9559>>IF
E_ONFID
      9531**DCL      9668<>CALL     9670<>CALL
F$DCB.ACTPOS
      9263**DCL      9263--REDEF
F$DCB.ARS#
      9237**DCL      9237--REDEF
F$DCB.ATTR
      9256**DCL      9257--REDEF
F$DCB.BORROW
      9271**DCL      9271--REDEF    9271--REDEF    9271--REDEF
F$DCB.DCBNAME.L
      9285**DCL      9285--IMP-SIZ
F$DCB.EOMCHAR#
      9241**DCL      9241--REDEF
F$DCB.FLDID
      9266**DCL      9266--REDEF
F$DCB.FORM$
      9260**DCL      9260--REDEF
F$DCB.FSECT
      9276**DCL      9276--REDEF
F$DCB.FSN#
      9253**DCL      9253--REDEF    9253--REDEF    9254--REDEF
F$DCB.HEADER$
      9259**DCL      9259--REDEF
F$DCB.IXTNSIZE#
      9257**DCL      9257--REDEF
F$DCB.LASTSTA$
      9246**DCL      9246--REDEF
F$DCB.LVL
      9272**DCL      9272--REDEF
F$DCB.NAME#.C
      9247**DCL      9247--REDEF
PL6.E3A0      #001=CPE$GENRUAM File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:38 Page:42   
F$DCB.NOEOF
      9269**DCL      9269--REDEF
F$DCB.NRECS#
      9258**DCL      9258--REDEF
F$DCB.NRECX
      9277**DCL      9277--REDEF
F$DCB.OHDR
      9269**DCL      9269--REDEF
F$DCB.ORG#
      9252**DCL      9252--REDEF
F$DCB.PRECNO
      9275**DCL      9275--REDEF
F$DCB.RCSZ
      9281**DCL      9281--REDEF
F$DCB.RES#
      9248**DCL      9248--REDEF
F$DCB.SETX
      9260**DCL      9260--REDEF
F$DCB.TAB$
      9260**DCL      9260--REDEF
F$DCB.TDA
      9274**DCL      9275--REDEF
F$DCB.WSN#
      9248**DCL      9248--REDEF
FID$
      8882**DCL        38--PROC     9544>>ASSIGN   9544>>ASSIGN   9591<>CALL
FID_ACCT
      8923**DCL      9546--ASSIGN
FID_ASN
      8964**DCL      9550--ASSIGN   9559>>IF       9576>>ASSIGN
FID_NAME
      8910**DCL      9545--ASSIGN   9670<>CALL
FID_NAME.NAME#
      8910**DCL      9621>>IF
FID_PASS
      8936**DCL      9547--ASSIGN
PL6.E3A0      #001=CPE$GENRUAM File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:38 Page:43   
FID_RES
      8965**DCL      9551--ASSIGN   9572>>ASSIGN
FID_RESULTS
      9026**DCL      9552--ASSIGN
FID_RESULTS.ACCT
      9026**DCL      9627>>IF
FID_RESULTS.RES
      9026**DCL      9570>>IF
FID_RESULTS.SN
      9026**DCL      9633>>IF
FID_SN
      8962**DCL      9548--ASSIGN
FID_WSN
      8949**DCL      9549--ASSIGN
FPT$CLOSE.SN_
      9355**DCL      9355--REDEF
FPT$CLOSE.UTL_
      9356**DCL      9356--REDEF
FPT$CLOSE.V.EXPIRE#
      9370**DCL      9370--REDEF
FPT$CLOSE.V.TYPE#
      9368**DCL      9368--REDEF
FPT$CLOSE.V.XTNSIZE#
      9365**DCL      9365--REDEF    9367--REDEF
FPT_FID
      9003**DCL      9542<<ASSIGN   9553<>CALL
FPT_FID.ACCT_
      9004**DCL      9546<<ASSIGN   9566>>ASSIGN
FPT_FID.ASN_
      9006**DCL      9550<<ASSIGN
FPT_FID.NAME_
      9004**DCL      9545<<ASSIGN   9565>>ASSIGN
FPT_FID.PASS_
      9004**DCL      9547<<ASSIGN   9567>>ASSIGN
FPT_FID.RESULTS_
      9006**DCL      9552<<ASSIGN
PL6.E3A0      #001=CPE$GENRUAM File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:38 Page:44   
FPT_FID.RES_
      9006**DCL      9551<<ASSIGN
FPT_FID.SN_
      9005**DCL      9548<<ASSIGN   9568>>ASSIGN
FPT_FID.TEXTFID_
      9003**DCL      9544<<ASSIGN
FPT_FID.V
      9007**DCL      9543--ASSIGN
FPT_FID.V_
      9003**DCL      9543<<ASSIGN
FPT_FID.WSN_
      9005**DCL      9549<<ASSIGN   9569>>ASSIGN
FPT_OPEN
      9099**DCL      9563<<ASSIGN   9582<>CALL
FPT_OPEN.ACCT_
      9103**DCL      9566<<ASSIGN
FPT_OPEN.ACSVEH_
      9101**DCL      9102--REDEF
FPT_OPEN.ALTKEYS_
      9107**DCL      9108--REDEF    9108--REDEF
FPT_OPEN.HDR_
      9106**DCL      9107--REDEF
FPT_OPEN.NAME_
      9100**DCL      9565<<ASSIGN
FPT_OPEN.PASS_
      9101**DCL      9567<<ASSIGN
FPT_OPEN.SN_
      9099**DCL      9568<<ASSIGN
FPT_OPEN.TAB_
      9105**DCL      9106--REDEF
FPT_OPEN.UHL_
      9099**DCL      9100--REDEF    9100--REDEF
FPT_OPEN.V
      9108**DCL      9564--ASSIGN
FPT_OPEN.V.ACS#
      9119**DCL      9577<<ASSIGN
PL6.E3A0      #001=CPE$GENRUAM File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:38 Page:45   
FPT_OPEN.V.ASN#
      9118**DCL      9576<<ASSIGN
FPT_OPEN.V.DCB#
      9108**DCL      9575<<ASSIGN
FPT_OPEN.V.FSN#
      9139**DCL      9139--REDEF    9139--REDEF
FPT_OPEN.V.OPER.TEST#
      9110**DCL      9578<<ASSIGN
FPT_OPEN.V.RES#
      9123**DCL      9572<<ASSIGN
FPT_OPEN.V_
      9099**DCL      9564<<ASSIGN
FPT_OPEN.WSN_
      9105**DCL      9105--REDEF    9569<<ASSIGN
GENRUAM10
      9578**LABEL    9582--CALLALT
GENRUAM50
      9652**LABEL    9553--CALLALT
GENRUAM60
      9659**LABEL    9584--GOTO
GENRUAM70
      9671**LABEL    9594--GOTO     9646--GOTO     9650--GOTO
IBEX2TXTC
      6027**DCL      9573<>CALL
LISTDCB
      6067**DCL      9615>>IF
M$DODCB
      8984**DCL      9615>>IF
M$FID
       111**DCL-ENT  9553--CALL
M$IBEX1_NUM
      6018**DCL      9591<>CALL     9641<>CALL
M$IBEX2_NUM
      6019**DCL      9573<>CALL     9574>>ASSIGN   9575>>ASSIGN   9655<>CALL     9675<>CALL
M$IBEX_NUM
      6017**DCL      9668<>CALL     9680>>IF
PL6.E3A0      #001=CPE$GENRUAM File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:38 Page:46   
M$OPEN
        48**DCL-ENT  9582--CALL
ONOVERINTO$
      8881**DCL        38--PROC     9559>>IF       9600>>DOCASE
P$B.CODE
      9301**DCL      9559>>IF       9600>>DOCASE
SEG$2.ERRBUF
      9170**DCL      9668--CALL
SEG2$
      6005**DCL      9145--IMP-PTR  9668>>CALL
SEG3$
      6006**DCL      9439--IMP-PTR  9599>>ASSIGN   9603>>ASSIGN   9606>>ASSIGN   9609>>ASSIGN   9617>>ASSIGN
      9629>>IF       9632>>ASSIGN   9636>>ASSIGN   9637>>ASSIGN
TEXTC
      9226**DCL      9615>>IF       9615>>IF       9621>>IF       9627>>IF
TEXTC.SIZ
      9227**DCL      9228--IMP-SIZ  9544>>ASSIGN   9615>>IF       9615>>IF       9621>>IF       9627>>IF
TEXTC.TEXT
      9228**DCL      9544--ASSIGN

PL6.E3A0      #002=CPE$LISTOUT File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:39 Page:47   
      244        1        /*T***********************************************************/
      245        2        /*T*                                                         */
      246        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      247        4        /*T*                                                         */
      248        5        /*T***********************************************************/
      249        6        /***********************************************************************/
      250        7        /*F*   NAME:   CPE$LISTOUT
      251        8               PURPOSE: Lists specified output to the appropriate listing device
      252        9               DESCRIPTION: Output is written through the M$UC dcb if a user
      253       10                       is in interactive mode. Otherwise it is written through
      254       11                       M$LL.
      255       12        */
      256       13        /*     NAME:   CPE$LISTOUT
      257       14               CALL:   Call CPE$LISTOUT(FPT_WR$)
      258       15               INTERFACE: CPC$GETDCB,CPC$WRITEMSGE,CPC$RELDCB
      259       16               INPUT:  FPT_WR$ - pointer to fpt through which the
      260       17                       write is to occur
      261       18               OUTPUT: output to the appropriate device
      262       19               DESCRIPTION: If a user is in interactive mode, output is written
      263       20                       through M$UC. Otherwise a dcb is obtained(M$LL) and
      264       21                       output is written to the logical resource 'ME'. If an error
      265       22                       occurs during the write, an error message is generated and
      266       23                       the output is echoed through the M$DO dcb before an error
      267       24                       return is taken.
      268       25        */
      269       26        /***********************************************************************/
      270       27        CPE$LISTOUT: PROC(FPT_WR$)  ALTRET;
      271       28                   %INCLUDE B$JIT;
      272      318                   %INCLUDE B_MACROS_C;
      273      429                   %INCLUDE CP_6;
      274      510                   %INCLUDE CP_SUBS_C;
      275     1427                   %INCLUDE CP_PERR_C;
      276     1765                   %INCLUDE CP_MACROS_C;
      277     2517                   %INCLUDE XU_MACRO_C;
      278     5623                   %INCLUDE CP_6_SUBS;
      279     6163                   %INCLUDE CP_DATA_R;
      280     8726                   %INCLUDE NK_VFC_C;
PL6.E3A0      #002=CPE$LISTOUT File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:39 Page:48   
      281     8800        /***** parameters *****/
      282     8801    1     DCL FPT_WR$ PTR;
      283     8802        /***** local variables *****/
      284     8803    1     DCL LLDCB# UBIN WORD;
      285     8804    1     DCL DCB# UBIN WORD;
      286     8805        /***** Based structures *****/
      287     8806          %B$EXCFR;
      288     8824          %B$TCB (STCLASS="BASED(B$TCB$)");
      289     8827        /***** external routines *****/
      290     8828    1     DCL CPC$OPEN_DO ENTRY;
      291     8829    1     DCL CPC$OPEN_LL ENTRY;
      292     8830    1     DCL CPC$WRITEMSGE ENTRY(6);
      293     8831        /***** fpts *****/
      294     8832          %FPT_OPEN(FPTN=FPT_OPEN,STCLASS=AUTO);
      295     8941          %FPT_WRITE(FPTN=FPT$WRITE,STCLASS=BASED);
      296     8972          %F$DCB;
      297     9029          %SEG$2;
      298     9089        /***** error codes *****/
      299     9090        %ERR_CODE (NAME=E_LLDCB,MID#=CPE$IBEXMID,CODE#=E$LLDCB,STCLASS=CONSTANT);
      300     9110        %EJECT;
PL6.E3A0      #002=CPE$LISTOUT File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:39 Page:49   
      301     9111        /*
      302     9112             ***** If break then dont list.
      303     9113                   This allows the termination of long listings
      304     9114                   but allows the command to complete...
      305     9115        */
      306     9116    1     IF B$JIT.CPFLAGS1 & %CP_BRK#
      307     9117    1        THEN
      308     9118    1           RETURN;
      309     9119        /*
      310     9120             ***** Get M$LL (or M$UC) ...
      311     9121        */
      312     9122    1     CALL CPC$OPEN_LL;
      313     9123        /*
      314     9124             ***** Do the write ...
      315     9125        */
      316     9126    1     FPT_WR$ -> FPT$WRITE.V.DCB# = SEG$2.LLDCB#;
      317     9127    1     CALL M$WRITE (FPT_WR$->FPT$WRITE) ALTRET(E_WRITE);
      318     9128    1     RETURN;
      319     9129    1   E_WRITE:
      320     9130        /*
      321     9131             ***** Output both error messages so problem is identified...
      322     9132        */
      323     9133    1     CALL CPC$WRITEMSGE (B$TCB.ALT$ -> B$EXCFR.ERR,SEG$2.LLDCB#,,,,%YES#);
      324     9134        /*E*       ERROR: CPE-E$LLDCB-E
      325     9135                   MESSAGE: Severe error on %DC dcb
      326     9136                   DESCRIPTION: An error occurred while attempting to write
      327     9137                                through the M$LL or M$UC dcb.
      328     9138        */
      329     9139    1     CALL CPC$WRITEMSGE(E_LLDCB,DCB#,,,,%YES#);
      330     9140    1     B$JIT.USRERR = '0'O; /* throw away error */
      331     9141        /*
      332     9142             ***** Can't write thru M$LL so try M$DO...
      333     9143                   And abort.
      334     9144        */
      335     9145        %EJECT;
PL6.E3A0      #002=CPE$LISTOUT File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:39 Page:50   
      336     9146    1   CPE$DIAGOUT: ENTRY(FPT_WR$)  ALTRET;
      337     9147        /*
      338     9148             ***** This entry allows setup just as for CPE$LISTOUT
      339     9149                   but the write is thru M$DO. Should be used for
      340     9150                   all diagnostic listings...
      341     9151        */
      342     9152        /*
      343     9153             ***** If M$DO is not open then open it.
      344     9154                   Force assignments to be merged ...
      345     9155        */
      346     9156    1     CALL CPC$OPEN_DO ;
      347     9157        /*
      348     9158             ***** Do the write ...
      349     9159        */
      350     9160    1     FPT_WR$ -> FPT$WRITE.V.DCB# = %M$DO#;
      351     9161    1     CALL M$WRITE(FPT_WR$->FPT$WRITE) ALTRET(E_LISTOUT);
      352     9162    1     RETURN;
      353     9163    1   E_LISTOUT:
      354     9164    1     CALL CPC$WRITEMSGE (B$TCB.ALT$ -> B$EXCFR.ERR,M$DO_NUM,,,,%YES#);
      355     9165    1     B$JIT.USRERR = '0'O; /* throw away error */
      356     9166    1     ALTRETURN;
      357     9167    1   END CPE$LISTOUT;
      358     9168                   %EOD;

PL6.E3A0      #002=CPE$LISTOUT File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:39 Page:51   
--  Include file information  --

   NK_VFC_C.:E05TOU  is referenced.
   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_PERR_C.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPE$LISTOUT.

   Procedure CPE$LISTOUT requires 89 words for executable code.
   Procedure CPE$LISTOUT requires 70 words of local(AUTO) storage.

PL6.E3A0      #002=CPE$LISTOUT File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:39 Page:52   

 Object Unit name= CPE$LISTOUT                                File name= CPE$SUBR.:E05TOU
 UTS= JUL 29 '97 11:39:08.88 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS      1      1  CPE$LISTOUT
    2   Proc  even  none    89    131  CPE$LISTOUT
    3  RoData even  none     3      3  CPE$LISTOUT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        1  CPE$LISTOUT
     2     67          yes     yes      Std        1  CPE$DIAGOUT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 CPC$OPEN_LL
         yes           Std       0 CPC$OPEN_DO
         yes           Std       6 CPC$WRITEMSGE
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #002=CPE$LISTOUT File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:39 Page:53   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    SEG2$                            r    B$JIT$
r    B$TCB$                                M$DO_NUM                              B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #002=CPE$LISTOUT File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:39 Page:54   


      244        1        /*T***********************************************************/
      245        2        /*T*                                                         */
      246        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      247        4        /*T*                                                         */
      248        5        /*T***********************************************************/
      249        6        /***********************************************************************/
      250        7        /*F*   NAME:   CPE$LISTOUT
      251        8               PURPOSE: Lists specified output to the appropriate listing device
      252        9               DESCRIPTION: Output is written through the M$UC dcb if a user
      253       10                       is in interactive mode. Otherwise it is written through
      254       11                       M$LL.
      255       12        */
      256       13        /*     NAME:   CPE$LISTOUT
      257       14               CALL:   Call CPE$LISTOUT(FPT_WR$)
      258       15               INTERFACE: CPC$GETDCB,CPC$WRITEMSGE,CPC$RELDCB
      259       16               INPUT:  FPT_WR$ - pointer to fpt through which the
      260       17                       write is to occur
      261       18               OUTPUT: output to the appropriate device
      262       19               DESCRIPTION: If a user is in interactive mode, output is written
      263       20                       through M$UC. Otherwise a dcb is obtained(M$LL) and
      264       21                       output is written to the logical resource 'ME'. If an error
      265       22                       occurs during the write, an error message is generated and
      266       23                       the output is echoed through the M$DO dcb before an error
      267       24                       return is taken.
      268       25        */
      269       26        /***********************************************************************/
      270       27        CPE$LISTOUT: PROC(FPT_WR$)  ALTRET;

     27  2 000000   000000 700200 xent  CPE$LISTOUT  TSX0  ! X66_AUTO_1
         2 000001   000106 000001                    ZERO    70,1

      271       28                   %INCLUDE B$JIT;
      272      318                   %INCLUDE B_MACROS_C;
      273      429                   %INCLUDE CP_6;
      274      510                   %INCLUDE CP_SUBS_C;
      275     1427                   %INCLUDE CP_PERR_C;
PL6.E3A0      #002=CPE$LISTOUT File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:39 Page:55   
      276     1765                   %INCLUDE CP_MACROS_C;
      277     2517                   %INCLUDE XU_MACRO_C;
      278     5623                   %INCLUDE CP_6_SUBS;
      279     6163                   %INCLUDE CP_DATA_R;
      280     8726                   %INCLUDE NK_VFC_C;
      281     8800        /***** parameters *****/
      282     8801    1     DCL FPT_WR$ PTR;
      283     8802        /***** local variables *****/
      284     8803    1     DCL LLDCB# UBIN WORD;
      285     8804    1     DCL DCB# UBIN WORD;
      286     8805        /***** Based structures *****/
      287     8806          %B$EXCFR;
      288     8824          %B$TCB (STCLASS="BASED(B$TCB$)");
      289     8827        /***** external routines *****/
      290     8828    1     DCL CPC$OPEN_DO ENTRY;
      291     8829    1     DCL CPC$OPEN_LL ENTRY;
      292     8830    1     DCL CPC$WRITEMSGE ENTRY(6);
      293     8831        /***** fpts *****/
      294     8832          %FPT_OPEN(FPTN=FPT_OPEN,STCLASS=AUTO);
      295     8941          %FPT_WRITE(FPTN=FPT$WRITE,STCLASS=BASED);
      296     8972          %F$DCB;
      297     9029          %SEG$2;
      298     9089        /***** error codes *****/
      299     9090        %ERR_CODE (NAME=E_LLDCB,MID#=CPE$IBEXMID,CODE#=E$LLDCB,STCLASS=CONSTANT);
      300     9110        %EJECT;
PL6.E3A0      #002=CPE$LISTOUT File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:39 Page:56   
      301     9111        /*
      302     9112             ***** If break then dont list.
      303     9113                   This allows the termination of long listings
      304     9114                   but allows the command to complete...
      305     9115        */
      306     9116    1     IF B$JIT.CPFLAGS1 & %CP_BRK#

   9116  2 000002   000000 470400 xsym               LDP0    B$JIT$
         2 000003   000143 236100                    LDQ     99,,PR0
         2 000004   000006 376000 xsym               ANQ     B_VECTNIL+6
         2 000005   000007 600000 2                  TZE     s:9122

      307     9117    1        THEN
      308     9118    1           RETURN;

   9118  2 000006   000000 702200 xent               TSX2  ! X66_ARET

      309     9119        /*
      310     9120             ***** Get M$LL (or M$UC) ...
      311     9121        */
      312     9122    1     CALL CPC$OPEN_LL;

   9122  2 000007   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000010   000000 701000 xent               TSX1    CPC$OPEN_LL
         2 000011   000000 011000                    NOP     0

      313     9123        /*
      314     9124             ***** Do the write ...
      315     9125        */
      316     9126    1     FPT_WR$ -> FPT$WRITE.V.DCB# = SEG$2.LLDCB#;

   9126  2 000012   200003 470500                    LDP0    @FPT_WR$,,AUTO
         2 000013   000000 471500                    LDP1    0,,PR0
         2 000014   000000 473400 xsym               LDP3    SEG2$
         2 000015   300000 720100                    LXL0    0,,PR3
         2 000016   100010 740100                    STX0    8,,PR1

PL6.E3A0      #002=CPE$LISTOUT File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:39 Page:57   
      317     9127    1     CALL M$WRITE (FPT_WR$->FPT$WRITE) ALTRET(E_WRITE);

   9127  2 000017   000000 471500                    LDP1    0,,PR0
         2 000020   100000 630500                    EPPR0   0,,PR1
         2 000021   440001 713400                    CLIMB   alt,write
         2 000022   401400 401760                    pmme    nvectors=4
         2 000023   000025 702000 2                  TSX2    E_WRITE

      318     9128    1     RETURN;

   9128  2 000024   000000 702200 xent               TSX2  ! X66_ARET

      319     9129    1   E_WRITE:
      320     9130        /*
      321     9131             ***** Output both error messages so problem is identified...
      322     9132        */
      323     9133    1     CALL CPC$WRITEMSGE (B$TCB.ALT$ -> B$EXCFR.ERR,SEG$2.LLDCB#,,,,%YES#);

   9133  2 000025   000000 470400 xsym  E_WRITE      LDP0    B$TCB$
         2 000026   000000 471500                    LDP1    0,,PR0
         2 000027   000000 236000 3                  LDQ     0
         2 000030   000001 235000 xsym               LDA     B_VECTNIL+1
         2 000031   200104 757100                    STAQ    DCB#+63,,AUTO
         2 000032   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000033   000001 235000 xsym               LDA     B_VECTNIL+1
         2 000034   200102 757100                    STAQ    DCB#+61,,AUTO
         2 000035   000000 236000 xsym               LDQ     SEG2$
         2 000036   400000 036007                    ADLQ    -131072,DL
         2 000037   200101 756100                    STQ     DCB#+60,,AUTO
         2 000040   100102 633500                    EPPR3   66,,PR1
         2 000041   200100 453500                    STP3    DCB#+59,,AUTO
         2 000042   200100 630500                    EPPR0   DCB#+59,,AUTO
         2 000043   000024 631400 xsym               EPPR1   B_VECTNIL+20
         2 000044   000000 701000 xent               TSX1    CPC$WRITEMSGE
         2 000045   000000 011000                    NOP     0

      324     9134        /*E*       ERROR: CPE-E$LLDCB-E
PL6.E3A0      #002=CPE$LISTOUT File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:39 Page:58   
      325     9135                   MESSAGE: Severe error on %DC dcb
      326     9136                   DESCRIPTION: An error occurred while attempting to write
      327     9137                                through the M$LL or M$UC dcb.
      328     9138        */
      329     9139    1     CALL CPC$WRITEMSGE(E_LLDCB,DCB#,,,,%YES#);

   9139  2 000046   000000 236000 3                  LDQ     0
         2 000047   000001 235000 xsym               LDA     B_VECTNIL+1
         2 000050   200104 757100                    STAQ    DCB#+63,,AUTO
         2 000051   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000052   000001 235000 xsym               LDA     B_VECTNIL+1
         2 000053   200102 757100                    STAQ    DCB#+61,,AUTO
         2 000054   200005 630500                    EPPR0   DCB#,,AUTO
         2 000055   200101 450500                    STP0    DCB#+60,,AUTO
         2 000056   000001 236000 3                  LDQ     1
         2 000057   200100 756100                    STQ     DCB#+59,,AUTO
         2 000060   200100 630500                    EPPR0   DCB#+59,,AUTO
         2 000061   000024 631400 xsym               EPPR1   B_VECTNIL+20
         2 000062   000000 701000 xent               TSX1    CPC$WRITEMSGE
         2 000063   000000 011000                    NOP     0

      330     9140    1     B$JIT.USRERR = '0'O; /* throw away error */

   9140  2 000064   000000 470400 xsym               LDP0    B$JIT$
         2 000065   000144 450100                    STZ     100,,PR0
         2 000066   000071 710000 2                  TRA     s:9156

      331     9141        /*
      332     9142             ***** Can't write thru M$LL so try M$DO...
      333     9143                   And abort.
      334     9144        */
      335     9145        %EJECT;
PL6.E3A0      #002=CPE$LISTOUT File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:39 Page:59   
      336     9146    1   CPE$DIAGOUT: ENTRY(FPT_WR$)  ALTRET;

   9146  2 000067   000000 700200 xent  CPE$DIAGOUT  TSX0  ! X66_AUTO_1
         2 000070   000106 000001                    ZERO    70,1

      337     9147        /*
      338     9148             ***** This entry allows setup just as for CPE$LISTOUT
      339     9149                   but the write is thru M$DO. Should be used for
      340     9150                   all diagnostic listings...
      341     9151        */
      342     9152        /*
      343     9153             ***** If M$DO is not open then open it.
      344     9154                   Force assignments to be merged ...
      345     9155        */
      346     9156    1     CALL CPC$OPEN_DO ;

   9156  2 000071   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000072   000000 701000 xent               TSX1    CPC$OPEN_DO
         2 000073   000000 011000                    NOP     0

      347     9157        /*
      348     9158             ***** Do the write ...
      349     9159        */
      350     9160    1     FPT_WR$ -> FPT$WRITE.V.DCB# = %M$DO#;

   9160  2 000074   200003 470500                    LDP0    @FPT_WR$,,AUTO
         2 000075   000000 471500                    LDP1    0,,PR0
         2 000076   000004 220003                    LDX0    4,DU
         2 000077   100010 740100                    STX0    8,,PR1

      351     9161    1     CALL M$WRITE(FPT_WR$->FPT$WRITE) ALTRET(E_LISTOUT);

   9161  2 000100   000000 471500                    LDP1    0,,PR0
         2 000101   100000 630500                    EPPR0   0,,PR1
         2 000102   440001 713400                    CLIMB   alt,write
         2 000103   401400 401760                    pmme    nvectors=4
         2 000104   000106 702000 2                  TSX2    E_LISTOUT
PL6.E3A0      #002=CPE$LISTOUT File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:39 Page:60   

      352     9162    1     RETURN;

   9162  2 000105   000000 702200 xent               TSX2  ! X66_ARET

      353     9163    1   E_LISTOUT:
      354     9164    1     CALL CPC$WRITEMSGE (B$TCB.ALT$ -> B$EXCFR.ERR,M$DO_NUM,,,,%YES#);

   9164  2 000106   000000 470400 xsym  E_LISTOUT    LDP0    B$TCB$
         2 000107   000000 471500                    LDP1    0,,PR0
         2 000110   000000 236000 3                  LDQ     0
         2 000111   000001 235000 xsym               LDA     B_VECTNIL+1
         2 000112   200104 757100                    STAQ    DCB#+63,,AUTO
         2 000113   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000114   000001 235000 xsym               LDA     B_VECTNIL+1
         2 000115   200102 757100                    STAQ    DCB#+61,,AUTO
         2 000116   000002 236000 3                  LDQ     2
         2 000117   200101 756100                    STQ     DCB#+60,,AUTO
         2 000120   100102 633500                    EPPR3   66,,PR1
         2 000121   200100 453500                    STP3    DCB#+59,,AUTO
         2 000122   200100 630500                    EPPR0   DCB#+59,,AUTO
         2 000123   000024 631400 xsym               EPPR1   B_VECTNIL+20
         2 000124   000000 701000 xent               TSX1    CPC$WRITEMSGE
         2 000125   000000 011000                    NOP     0

      355     9165    1     B$JIT.USRERR = '0'O; /* throw away error */

   9165  2 000126   000000 470400 xsym               LDP0    B$JIT$
         2 000127   000144 450100                    STZ     100,,PR0

      356     9166    1     ALTRETURN;

   9166  2 000130   000000 702200 xent               TSX2  ! X66_AALT
      357     9167    1   END CPE$LISTOUT;
      358     9168                   %EOD;

PL6.E3A0      #002=CPE$LISTOUT File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:39 Page:61   
--  Include file information  --

   NK_VFC_C.:E05TOU  is referenced.
   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_PERR_C.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPE$LISTOUT.
PL6.E3A0      #002=CPE$LISTOUT File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:39 Page:62   

 **** Variables and constants ****

  ****  Section 001 RoData CPE$LISTOUT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC        r     1 E_LLDCB

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @FPT_WR$                   5-0-0/w UBIN        r     1 DCB#
    *0-0-0/w PTR         r     1 FPT_WR$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$TCB$
     0-0-0/w UBIN        r     1 M$DO_NUM                   0-0-0/w PTR         r     1 SEG2$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$EXCFR                    0-0-0/d STRC(8856)  r     1 B$JIT
     0-0-0/w STRC(144)   r     1 B$TCB                      0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/d STRC(432)   r     1 FPT$WRITE                  0-0-0/w STRC(6264)  r     1 SEG$2


   Procedure CPE$LISTOUT requires 89 words for executable code.
PL6.E3A0      #002=CPE$LISTOUT File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:39 Page:63   
   Procedure CPE$LISTOUT requires 70 words of local(AUTO) storage.
PL6.E3A0      #002=CPE$LISTOUT File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:39 Page:64   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=CPE$LISTOUT File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:39 Page:65   
          MINI XREF LISTING

B$EXCFR.ASL
      8807**DCL      8807--REDEF
B$EXCFR.ERR
      8821**DCL      9133<>CALL     9164<>CALL
B$EXCFR.ERR.ERR#
      8821**DCL      8821--REDEF
B$EXCFR.EVID
      8820**DCL      8820--REDEF    8821--REDEF
B$EXCFR.IR
      8808**DCL      8808--REDEF
B$EXCFR.PREVSZ
      8807**DCL      8807--REDEF
B$EXCFR.SUBC
      8819**DCL      8819--REDEF    8820--REDEF    8820--REDEF
B$JIT.CPFLAGS1
       131**DCL      9116>>IF
B$JIT.CPFLAGS1.SLEAZE
       136**DCL       136--REDEF
B$JIT.ERR.MID
        43**DCL        43--REDEF
B$JIT.JRESPEAK
       204**DCL       205--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       313**DCL       313--REDEF     314--REDEF
B$JIT.PNR
       217**DCL       217--REDEF
B$JIT.TSLINE
       311**DCL       312--REDEF
B$JIT.USRERR
       178**DCL      9140<<ASSIGN   9165<<ASSIGN
B$JIT$
      8659**DCL        37--IMP-PTR  9116>>IF       9140>>ASSIGN   9165>>ASSIGN
PL6.E3A0      #002=CPE$LISTOUT File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:39 Page:66   
B$TCB.ALT$
      8825**DCL      9133>>CALL     9164>>CALL
B$TCB$
      8661**DCL      8825--IMP-PTR  9133>>CALL     9164>>CALL
CAMR_REC.ACSVEH_
      7698**DCL      7699--REDEF
CAMR_REC.ALTKEYS_
      7704**DCL      7705--REDEF    7705--REDEF
CAMR_REC.HDR_
      7703**DCL      7704--REDEF
CAMR_REC.TAB_
      7702**DCL      7703--REDEF
CAMR_REC.UHL_
      7696**DCL      7697--REDEF    7697--REDEF
CAMR_REC.V.FSN#
      7736**DCL      7736--REDEF    7736--REDEF
CAMR_REC.WSN_
      7702**DCL      7702--REDEF
CFPT_CLOSE.SN_
      6540**DCL      6540--REDEF
CFPT_CLOSE.UTL_
      6541**DCL      6541--REDEF
CFPT_CLOSE.V.EXPIRE#
      6555**DCL      6555--REDEF
CFPT_CLOSE.V.TYPE#
      6553**DCL      6553--REDEF
CFPT_CLOSE.V.XTNSIZE#
      6550**DCL      6550--REDEF    6552--REDEF
CFPT_OPEN.ACSVEH_
      6475**DCL      6476--REDEF
CFPT_OPEN.ALTKEYS_
      6481**DCL      6482--REDEF    6482--REDEF
CFPT_OPEN.HDR_
      6480**DCL      6481--REDEF
CFPT_OPEN.TAB_
      6479**DCL      6480--REDEF
PL6.E3A0      #002=CPE$LISTOUT File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:39 Page:67   
CFPT_OPEN.UHL_
      6473**DCL      6474--REDEF    6474--REDEF
CFPT_OPEN.V.FSN#
      6513**DCL      6513--REDEF    6513--REDEF
CFPT_OPEN.WSN_
      6479**DCL      6479--REDEF
CFPT_READ.STATION_
      6579**DCL      6580--REDEF
CFPT_READ.V.DVBYTE.REREAD#
      6591**DCL      6591--REDEF
CFPT_READ.V.INDX#
      6589**DCL      6589--REDEF
CFPT_READUC.STATION_
      6949**DCL      6950--REDEF
CFPT_READUC.V.DVBYTE.REREAD#
      6961**DCL      6961--REDEF
CFPT_READUC.V.INDX#
      6959**DCL      6959--REDEF
CFPT_TRTN.V.IR#
      7185**DCL      7186--REDEF
CFPT_WRITE.STATION_
      6617**DCL      6617--REDEF
CFPT_WRITE.V.DVBYTE.VFC#
      6624**DCL      6624--REDEF
CFPT_WRITEUC.STATION_
      6917**DCL      6917--REDEF
CFPT_WRITEUC.V.DVBYTE.VFC#
      6924**DCL      6924--REDEF
CFPT_XXX.V.STEPCC#
      7897**DCL      7897--REDEF
CGETCMD.OUT$
      7918**DCL      7924--REDEF
CPC$OPEN_DO
      8828**DCL-ENT  9156--CALL
CPC$OPEN_LL
      8829**DCL-ENT  9122--CALL
PL6.E3A0      #002=CPE$LISTOUT File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:39 Page:68   
CPC$WRITEMSGE
      8830**DCL-ENT  9133--CALL     9139--CALL     9164--CALL
CVLP_TRMCTL.BREAKCOUNT
      7509**DCL      7510--REDEF
CVLP_WINDOW.FWINDOW#
      7605**DCL      7605--REDEF    7606--REDEF
DCB#
      8804**DCL      9139<>CALL
E_LISTOUT
      9164**LABEL    9161--CALLALT
E_LLDCB
      9103**DCL      9139<>CALL
E_WRITE
      9133**LABEL    9127--CALLALT
F$DCB.ACTPOS
      9005**DCL      9005--REDEF
F$DCB.ARS#
      8979**DCL      8979--REDEF
F$DCB.ATTR
      8998**DCL      8999--REDEF
F$DCB.BORROW
      9013**DCL      9013--REDEF    9013--REDEF    9013--REDEF
F$DCB.DCBNAME.L
      9027**DCL      9027--IMP-SIZ
F$DCB.EOMCHAR#
      8983**DCL      8983--REDEF
F$DCB.FLDID
      9008**DCL      9008--REDEF
F$DCB.FORM$
      9002**DCL      9002--REDEF
F$DCB.FSECT
      9018**DCL      9018--REDEF
F$DCB.FSN#
      8995**DCL      8995--REDEF    8995--REDEF    8996--REDEF
F$DCB.HEADER$
      9001**DCL      9001--REDEF
PL6.E3A0      #002=CPE$LISTOUT File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:39 Page:69   
F$DCB.IXTNSIZE#
      8999**DCL      8999--REDEF
F$DCB.LASTSTA$
      8988**DCL      8988--REDEF
F$DCB.LVL
      9014**DCL      9014--REDEF
F$DCB.NAME#.C
      8989**DCL      8989--REDEF
F$DCB.NOEOF
      9011**DCL      9011--REDEF
F$DCB.NRECS#
      9000**DCL      9000--REDEF
F$DCB.NRECX
      9019**DCL      9019--REDEF
F$DCB.OHDR
      9011**DCL      9011--REDEF
F$DCB.ORG#
      8994**DCL      8994--REDEF
F$DCB.PRECNO
      9017**DCL      9017--REDEF
F$DCB.RCSZ
      9023**DCL      9023--REDEF
F$DCB.RES#
      8990**DCL      8990--REDEF
F$DCB.SETX
      9002**DCL      9002--REDEF
F$DCB.TAB$
      9002**DCL      9002--REDEF
F$DCB.TDA
      9016**DCL      9017--REDEF
F$DCB.WSN#
      8990**DCL      8990--REDEF
FPT$WRITE
      8958**DCL      9127<>CALL     9161<>CALL
FPT$WRITE.STATION_
      8960**DCL      8960--REDEF
PL6.E3A0      #002=CPE$LISTOUT File=CPE$SUBR.:E05TSI                             TUE 07/29/97 11:39 Page:70   
FPT$WRITE.V.DCB#
      8961**DCL      9126<<ASSIGN   9160<<ASSIGN
FPT$WRITE.V.DVBYTE.VFC#
      8967**DCL      8967--REDEF
FPT_OPEN.ACSVEH_
      8899**DCL      8900--REDEF
FPT_OPEN.ALTKEYS_
      8905**DCL      8906--REDEF    8906--REDEF
FPT_OPEN.HDR_
      8904**DCL      8905--REDEF
FPT_OPEN.TAB_
      8903**DCL      8904--REDEF
FPT_OPEN.UHL_
      8897**DCL      8898--REDEF    8898--REDEF
FPT_OPEN.V.FSN#
      8937**DCL      8937--REDEF    8937--REDEF
FPT_OPEN.WSN_
      8903**DCL      8903--REDEF
FPT_WR$
      8801**DCL        27--PROC     9126>>ASSIGN   9127>>CALL     9146--ENTRY    9160>>ASSIGN   9161>>CALL
M$DO_NUM
      8663**DCL      9164<>CALL
M$WRITE
       439**DCL-ENT  9127--CALL     9161--CALL
SEG$2.LLDCB#
      9050**DCL      9126>>ASSIGN   9133<>CALL
SEG2$
      8652**DCL      9030--IMP-PTR  9126>>ASSIGN   9133>>CALL

PL6.E3A0      #003=CPE$RFEXT File=CPE$SUBR.:E05TSI                               TUE 07/29/97 11:39 Page:71   
      359        1        /*T***********************************************************/
      360        2        /*T*                                                         */
      361        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      362        4        /*T*                                                         */
      363        5        /*T***********************************************************/
      364        6        /*F*   NAME:   CPE$RFEXT
      365        7               PURPOSE: Resets file extension bit for specified op label
      366        8               DESCRIPTION: The file extension bit corresponding to the specified
      367        9                       op label is reset if the op label being processed is a
      368       10                       system op label.
      369       11        */
      370       12        /*D*   NAME:   CPE$RFEXT
      371       13               CALL:   CALL CPE$RFEXT(DCB$)
      372       14               INTERFACE:
      373       15               INPUT:  DCB$ - pointer to dcb
      374       16                       F_OPLBL - op label name table
      375       17               OUTPUT: B$JIT.FEXT - file extension bit reset if op label
      376       18                       encountered
      377       19               DESCRIPTION: The file extension bit corresponding to the op label
      378       20                       is reset in the JIT if the op label being processed
      379       21                       is a system op label, i.e m$yy, where yy is found in the
      380       22                       system op label table.
      381       23        */
      382       24        /***********************************************************************/
      383       25        CPE$RFEXT: PROC(DCB$);
      384       26                   %INCLUDE CP_6;
      385      107                   %INCLUDE B_MACROS_C;
      386      218                   %INCLUDE B$JIT;
      387      508                   %INCLUDE CP_6_SUBS;
      388     1048                   %INCLUDE FM_OPLBL_R;
      389     1062                   %INCLUDE XU_MACRO_C;
      390     4168                   %INCLUDE CP_DATA_R;
      391     6731                   %TEXTC (NAME=TEXTC,STCLASS=BASED);
      392     6736    1   DCL I UBIN(36) ALIGNED;                 /*Temp. Location for indexes*/
      393     6737    1   DCL DCB$ PTR;                           /*Ptr to dcb name*/
      394     6738    1   DCL 1 DCBNAME CALIGNED BASED (DCB$),
      395     6739    1         2 LEN UBIN BYTE CALIGNED,         /*Length of name (ignored)*/
PL6.E3A0      #003=CPE$RFEXT File=CPE$SUBR.:E05TSI                               TUE 07/29/97 11:39 Page:72   
      396     6740    1         2 PREFIX CHAR(2) CALIGNED,        /*name prefix - 'M$' */
      397     6741    1         2 SUFFIX CHAR(2) CALIGNED;        /*name suffix - after M$ */
      398     6742        /**/
      399     6743    1     IF (DCBNAME.PREFIX = 'M$')   /* must be a system dcb */
      400     6744    2       THEN DO;
      401     6745    3         DO I = F_NUMOPS DOWNTO 1; /* look for DCB in op label table */
      402     6746    3           IF (DCBNAME.SUFFIX=F_OPLBL(I))
      403     6747    4             THEN DO;
      404     6748    4               B$JIT.FEXT(I)=%NO#;  /* found! reset file extension bit */
      405     6749    4               RETURN;
      406     6750    4             END;
      407     6751    3         END; /* DO I = */
      408     6752    2       END; /* DCBNAME.PREFIX = 'M$' */
      409     6753        /**/
      410     6754    1     RETURN;
      411     6755    1   END CPE$RFEXT;
      412     6756                   %EOD;

PL6.E3A0      #003=CPE$RFEXT File=CPE$SUBR.:E05TSI                               TUE 07/29/97 11:39 Page:73   
--  Include file information  --

   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   FM_OPLBL_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPE$RFEXT.

   Procedure CPE$RFEXT requires 29 words for executable code.
   Procedure CPE$RFEXT requires 6 words of local(AUTO) storage.

PL6.E3A0      #003=CPE$RFEXT File=CPE$SUBR.:E05TSI                               TUE 07/29/97 11:39 Page:74   

 Object Unit name= CPE$RFEXT                                  File name= CPE$SUBR.:E05TOU
 UTS= JUL 29 '97 11:39:55.40 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS      1      1  CPE$RFEXT
    2   Proc  even  none    29     35  CPE$RFEXT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        1  CPE$RFEXT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    F_OPLBL                          r    B$JIT$
     B_VECTNIL
PL6.E3A0      #003=CPE$RFEXT File=CPE$SUBR.:E05TSI                               TUE 07/29/97 11:39 Page:75   


      359        1        /*T***********************************************************/
      360        2        /*T*                                                         */
      361        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      362        4        /*T*                                                         */
      363        5        /*T***********************************************************/
      364        6        /*F*   NAME:   CPE$RFEXT
      365        7               PURPOSE: Resets file extension bit for specified op label
      366        8               DESCRIPTION: The file extension bit corresponding to the specified
      367        9                       op label is reset if the op label being processed is a
      368       10                       system op label.
      369       11        */
      370       12        /*D*   NAME:   CPE$RFEXT
      371       13               CALL:   CALL CPE$RFEXT(DCB$)
      372       14               INTERFACE:
      373       15               INPUT:  DCB$ - pointer to dcb
      374       16                       F_OPLBL - op label name table
      375       17               OUTPUT: B$JIT.FEXT - file extension bit reset if op label
      376       18                       encountered
      377       19               DESCRIPTION: The file extension bit corresponding to the op label
      378       20                       is reset in the JIT if the op label being processed
      379       21                       is a system op label, i.e m$yy, where yy is found in the
      380       22                       system op label table.
      381       23        */
      382       24        /***********************************************************************/
      383       25        CPE$RFEXT: PROC(DCB$);

     25  2 000000   000000 700200 xent  CPE$RFEXT    TSX0  ! X66_AUTO_1
         2 000001   000006 000001                    ZERO    6,1

      384       26                   %INCLUDE CP_6;
      385      107                   %INCLUDE B_MACROS_C;
      386      218                   %INCLUDE B$JIT;
      387      508                   %INCLUDE CP_6_SUBS;
      388     1048                   %INCLUDE FM_OPLBL_R;
      389     1062                   %INCLUDE XU_MACRO_C;
      390     4168                   %INCLUDE CP_DATA_R;
PL6.E3A0      #003=CPE$RFEXT File=CPE$SUBR.:E05TSI                               TUE 07/29/97 11:39 Page:76   
      391     6731                   %TEXTC (NAME=TEXTC,STCLASS=BASED);
      392     6736    1   DCL I UBIN(36) ALIGNED;                 /*Temp. Location for indexes*/
      393     6737    1   DCL DCB$ PTR;                           /*Ptr to dcb name*/
      394     6738    1   DCL 1 DCBNAME CALIGNED BASED (DCB$),
      395     6739    1         2 LEN UBIN BYTE CALIGNED,         /*Length of name (ignored)*/
      396     6740    1         2 PREFIX CHAR(2) CALIGNED,        /*name prefix - 'M$' */
      397     6741    1         2 SUFFIX CHAR(2) CALIGNED;        /*name suffix - after M$ */
      398     6742        /**/
      399     6743    1     IF (DCBNAME.PREFIX = 'M$')   /* must be a system dcb */

   6743  2 000002   200003 470500                    LDP0    @DCB$,,AUTO
         2 000003   000000 471500                    LDP1    0,,PR0
         2 000004   040000 106500                    CMPC    fill='040'O
         2 000005   100000 200002                    ADSC9   0,,PR1                   cn=1,n=2
         2 000006   000000 000002 1                  ADSC9   0                        cn=0,n=2
         2 000007   000034 601000 2                  TNZ     s:6754

      400     6744    2       THEN DO;

      401     6745    3         DO I = F_NUMOPS DOWNTO 1; /* look for DCB in op label table */

   6745  2 000010   000020 235007                    LDA     16,DL
         2 000011   200004 755100                    STA     I,,AUTO

      402     6746    3           IF (DCBNAME.SUFFIX=F_OPLBL(I))

   6746  2 000012   200003 470500                    LDP0    @DCB$,,AUTO
         2 000013   000000 471500                    LDP1    0,,PR0
         2 000014   200004 235100                    LDA     I,,AUTO
         2 000015   000001 735000                    ALS     1
         2 000016   040005 106500                    CMPC    fill='040'O
         2 000017   100000 600002                    ADSC9   0,,PR1                   cn=3,n=2
         2 000020   000000 000002 xsym               ADSC9   F_OPLBL,A                cn=0,n=2
         2 000021   000030 601000 2                  TNZ     s:6751

      403     6747    4             THEN DO;

PL6.E3A0      #003=CPE$RFEXT File=CPE$SUBR.:E05TSI                               TUE 07/29/97 11:39 Page:77   
      404     6748    4               B$JIT.FEXT(I)=%NO#;  /* found! reset file extension bit */

   6748  2 000022   000000 473400 xsym               LDP3    B$JIT$
         2 000023   200004 236100                    LDQ     I,,AUTO
         2 000024   003106 060400                    CSL     bolr='003'O
         2 000025   000002 000001 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=1
         2 000026   300220 000001                    BDSC    144,Q,PR3                by=0,bit=0,n=1

      405     6749    4               RETURN;

   6749  2 000027   000000 702200 xent               TSX2  ! X66_ARET

      406     6750    4             END;
      407     6751    3         END; /* DO I = */

   6751  2 000030   200004 236100                    LDQ     I,,AUTO
         2 000031   000001 136007                    SBLQ    1,DL
         2 000032   200004 756100                    STQ     I,,AUTO
         2 000033   000012 601000 2                  TNZ     s:6746

      408     6752    2       END; /* DCBNAME.PREFIX = 'M$' */

      409     6753        /**/
      410     6754    1     RETURN;

   6754  2 000034   000000 702200 xent               TSX2  ! X66_ARET
      411     6755    1   END CPE$RFEXT;
      412     6756                   %EOD;

PL6.E3A0      #003=CPE$RFEXT File=CPE$SUBR.:E05TSI                               TUE 07/29/97 11:39 Page:78   
--  Include file information  --

   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   FM_OPLBL_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPE$RFEXT.
PL6.E3A0      #003=CPE$RFEXT File=CPE$SUBR.:E05TSI                               TUE 07/29/97 11:39 Page:79   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @DCB$                     *0-0-0/w PTR         r     1 DCB$
     4-0-0/w UBIN        r     1 I

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/c CHAR(2)     r     1 F_OPLBL(0:8191)

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/c STRC(45)    r     1 DCBNAME
     0-0-0/c ASTR(9)     r     1 TEXTC


   Procedure CPE$RFEXT requires 29 words for executable code.
   Procedure CPE$RFEXT requires 6 words of local(AUTO) storage.
PL6.E3A0      #003=CPE$RFEXT File=CPE$SUBR.:E05TSI                               TUE 07/29/97 11:39 Page:80   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=CPE$RFEXT File=CPE$SUBR.:E05TSI                               TUE 07/29/97 11:39 Page:81   
          MINI XREF LISTING

B$JIT.CPFLAGS1.SLEAZE
       326**DCL       326--REDEF
B$JIT.ERR.MID
       233**DCL       233--REDEF
B$JIT.FEXT
       400**DCL      6748<<ASSIGN
B$JIT.JRESPEAK
       394**DCL       395--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       503**DCL       503--REDEF     504--REDEF
B$JIT.PNR
       407**DCL       407--REDEF
B$JIT.TSLINE
       501**DCL       502--REDEF
B$JIT$
      6664**DCL       227--IMP-PTR  6748>>ASSIGN
CAMR_REC.ACSVEH_
      5703**DCL      5704--REDEF
CAMR_REC.ALTKEYS_
      5709**DCL      5710--REDEF    5710--REDEF
CAMR_REC.HDR_
      5708**DCL      5709--REDEF
CAMR_REC.TAB_
      5707**DCL      5708--REDEF
CAMR_REC.UHL_
      5701**DCL      5702--REDEF    5702--REDEF
CAMR_REC.V.FSN#
      5741**DCL      5741--REDEF    5741--REDEF
CAMR_REC.WSN_
      5707**DCL      5707--REDEF
CFPT_CLOSE.SN_
      4545**DCL      4545--REDEF
PL6.E3A0      #003=CPE$RFEXT File=CPE$SUBR.:E05TSI                               TUE 07/29/97 11:39 Page:82   
CFPT_CLOSE.UTL_
      4546**DCL      4546--REDEF
CFPT_CLOSE.V.EXPIRE#
      4560**DCL      4560--REDEF
CFPT_CLOSE.V.TYPE#
      4558**DCL      4558--REDEF
CFPT_CLOSE.V.XTNSIZE#
      4555**DCL      4555--REDEF    4557--REDEF
CFPT_OPEN.ACSVEH_
      4480**DCL      4481--REDEF
CFPT_OPEN.ALTKEYS_
      4486**DCL      4487--REDEF    4487--REDEF
CFPT_OPEN.HDR_
      4485**DCL      4486--REDEF
CFPT_OPEN.TAB_
      4484**DCL      4485--REDEF
CFPT_OPEN.UHL_
      4478**DCL      4479--REDEF    4479--REDEF
CFPT_OPEN.V.FSN#
      4518**DCL      4518--REDEF    4518--REDEF
CFPT_OPEN.WSN_
      4484**DCL      4484--REDEF
CFPT_READ.STATION_
      4584**DCL      4585--REDEF
CFPT_READ.V.DVBYTE.REREAD#
      4596**DCL      4596--REDEF
CFPT_READ.V.INDX#
      4594**DCL      4594--REDEF
CFPT_READUC.STATION_
      4954**DCL      4955--REDEF
CFPT_READUC.V.DVBYTE.REREAD#
      4966**DCL      4966--REDEF
CFPT_READUC.V.INDX#
      4964**DCL      4964--REDEF
CFPT_TRTN.V.IR#
      5190**DCL      5191--REDEF
PL6.E3A0      #003=CPE$RFEXT File=CPE$SUBR.:E05TSI                               TUE 07/29/97 11:39 Page:83   
CFPT_WRITE.STATION_
      4622**DCL      4622--REDEF
CFPT_WRITE.V.DVBYTE.VFC#
      4629**DCL      4629--REDEF
CFPT_WRITEUC.STATION_
      4922**DCL      4922--REDEF
CFPT_WRITEUC.V.DVBYTE.VFC#
      4929**DCL      4929--REDEF
CFPT_XXX.V.STEPCC#
      5902**DCL      5902--REDEF
CGETCMD.OUT$
      5923**DCL      5929--REDEF
CVLP_TRMCTL.BREAKCOUNT
      5514**DCL      5515--REDEF
CVLP_WINDOW.FWINDOW#
      5610**DCL      5610--REDEF    5611--REDEF
DCB$
      6737**DCL        25--PROC     6738--IMP-PTR  6743>>IF       6746>>IF
DCBNAME.PREFIX
      6740**DCL      6743>>IF
DCBNAME.SUFFIX
      6741**DCL      6746>>IF
F_OPLBL
      1057**DCL      6746>>IF
I
      6736**DCL      6745<<DOINDEX  6746>>IF       6748>>ASSIGN
TEXTC.SIZ
      6733**DCL      6734--IMP-SIZ

PL6.E3A0      #004=CPE$RZEROS File=CPE$SUBR.:E05TSI                              TUE 07/29/97 11:40 Page:84   
      413        1        /*T***********************************************************/
      414        2        /*T*                                                         */
      415        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      416        4        /*T*                                                         */
      417        5        /*T***********************************************************/
      418        6        /**********************************************************************/
      419        7        /*F*   NAME:   CPE$RZEROS
      420        8               PURPOSE: Remove leading zeros from a specified character string
      421        9               DESCRIPTION: The specified character string is left adjusted
      422       10                       removing leading zeros.
      423       11        */
      424       12        /*D*   NAME:   CPE$RZEROS
      425       13               CALL:   CALL CPE$RZEROS(BUFF,BUFFSZE,NCHARS)
      426       14               INPUT:  BUFF   - buffer containing text
      427       15                       BUFFSZE - buffer size
      428       16               OUTPUT: BUFF   - buffer containing text left adjusted
      429       17                       NCHARS - actual string size
      430       18               DECRIPTION: Leading zeros are removed and the text value  left
      431       19                       adjusted. Blanks are appended to the text value.
      432       20                       If the buffer contains all zeros it is set to zero.
      433       21                       The number of characters is returned to the calling
      434       22                       program if the NCHARS parameter is specified.
      435       23        */
      436       24        CPE$RZEROS: PROC(BUFF,BUFFSZE,NCHARS);
      437       25    1   DCL BUFF CHAR(BUFFSZE);                          /*Buffer*/
      438       26    1   DCL BUFFA(0:11) REDEF BUFF CHAR(1);
      439       27    1   DCL I UBIN WORD;                      /*Index*/
      440       28    1   DCL BUFFSZE UBIN WORD;                /*Buffer size*/
      441       29    1   DCL NCHARS UBIN WORD;                 /*Number of CHARS.*/
      442       30    1     I=0;
      443       31    2     DO WHILE (BUFFA(I)='0' AND I<BUFFSZE);
      444       32    2        I=I+1;
      445       33    2     END;
      446       34    1     BUFF=SUBSTR(BUFF,I,BUFFSZE-I);
      447       35        /*         **** Return only single zero if all zeros in buffer*/
      448       36    1     IF I=BUFFSZE
      449       37    1        THEN
PL6.E3A0      #004=CPE$RZEROS File=CPE$SUBR.:E05TSI                              TUE 07/29/97 11:40 Page:85   
      450       38    1           BUFF='0';
      451       39    1     IF ADDR(NCHARS) ~= ADDR(NIL)
      452       40    1        THEN
      453       41    1           CALL INDEX(NCHARS,' ',BUFF);       /*Return # chars*/
      454       42    1     RETURN;
      455       43    1   END CPE$RZEROS;

PL6.E3A0      #004=CPE$RZEROS File=CPE$SUBR.:E05TSI                              TUE 07/29/97 11:40 Page:86   
--  Include file information  --

   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure CPE$RZEROS.

   Procedure CPE$RZEROS requires 42 words for executable code.
   Procedure CPE$RZEROS requires 8 words of local(AUTO) storage.

    No errors detected in file CPE$SUBR.:E05TSI    .

PL6.E3A0      #004=CPE$RZEROS File=CPE$SUBR.:E05TSI                              TUE 07/29/97 11:40 Page:87   

 Object Unit name= CPE$RZEROS                                 File name= CPE$SUBR.:E05TOU
 UTS= JUL 29 '97 11:40:15.92 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    42     52  CPE$RZEROS
    1  RoData even  none     1      1  CPE$RZEROS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        3  CPE$RZEROS

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_3
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B_VECTNIL
PL6.E3A0      #004=CPE$RZEROS File=CPE$SUBR.:E05TSI                              TUE 07/29/97 11:40 Page:88   


      413        1        /*T***********************************************************/
      414        2        /*T*                                                         */
      415        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      416        4        /*T*                                                         */
      417        5        /*T***********************************************************/
      418        6        /**********************************************************************/
      419        7        /*F*   NAME:   CPE$RZEROS
      420        8               PURPOSE: Remove leading zeros from a specified character string
      421        9               DESCRIPTION: The specified character string is left adjusted
      422       10                       removing leading zeros.
      423       11        */
      424       12        /*D*   NAME:   CPE$RZEROS
      425       13               CALL:   CALL CPE$RZEROS(BUFF,BUFFSZE,NCHARS)
      426       14               INPUT:  BUFF   - buffer containing text
      427       15                       BUFFSZE - buffer size
      428       16               OUTPUT: BUFF   - buffer containing text left adjusted
      429       17                       NCHARS - actual string size
      430       18               DECRIPTION: Leading zeros are removed and the text value  left
      431       19                       adjusted. Blanks are appended to the text value.
      432       20                       If the buffer contains all zeros it is set to zero.
      433       21                       The number of characters is returned to the calling
      434       22                       program if the NCHARS parameter is specified.
      435       23        */
      436       24        CPE$RZEROS: PROC(BUFF,BUFFSZE,NCHARS);

     24  0 000000   000000 700200 xent  CPE$RZEROS   TSX0  ! X66_AUTO_3
         0 000001   000010 000003                    ZERO    8,3

      437       25    1   DCL BUFF CHAR(BUFFSZE);                          /*Buffer*/
      438       26    1   DCL BUFFA(0:11) REDEF BUFF CHAR(1);
      439       27    1   DCL I UBIN WORD;                      /*Index*/
      440       28    1   DCL BUFFSZE UBIN WORD;                /*Buffer size*/
      441       29    1   DCL NCHARS UBIN WORD;                 /*Number of CHARS.*/
      442       30    1     I=0;

     30  0 000002   200006 450100                    STZ     I,,AUTO
PL6.E3A0      #004=CPE$RZEROS File=CPE$SUBR.:E05TSI                              TUE 07/29/97 11:40 Page:89   

      443       31    2     DO WHILE (BUFFA(I)='0' AND I<BUFFSZE);

     31  0 000003   000007 710000 0                  TRA     s:33

      444       32    2        I=I+1;

     32  0 000004   200006 235100                    LDA     I,,AUTO
         0 000005   000001 035007                    ADLA    1,DL
         0 000006   200006 755100                    STA     I,,AUTO

      445       33    2     END;

     33  0 000007   200003 470500                    LDP0    @BUFF,,AUTO
         0 000010   200006 235100                    LDA     I,,AUTO
         0 000011   040000 106505                    CMPC    fill='040'O
         0 000012   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         0 000013   000000 000001 1                  ADSC9   0                        cn=0,n=1
         0 000014   000021 601000 0                  TNZ     s:34
         0 000015   200004 471500                    LDP1    @BUFFSZE,,AUTO
         0 000016   200006 236100                    LDQ     I,,AUTO
         0 000017   100000 116100                    CMPQ    0,,PR1
         0 000020   000004 602000 0                  TNC     s:32

      446       34    1     BUFF=SUBSTR(BUFF,I,BUFFSZE-I);

     34  0 000021   200004 471500                    LDP1    @BUFFSZE,,AUTO
         0 000022   100000 720100                    LXL0    0,,PR1
         0 000023   100000 236100                    LDQ     0,,PR1
         0 000024   200006 136100                    SBLQ    I,,AUTO
         0 000025   000000 621006                    EAX1    0,QL
         0 000026   040140 100545                    MLR     fill='040'O
         0 000027   000000 000011                    ADSC9   0,A,PR0                  cn=0,n=*X1
         0 000030   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0

      447       35        /*         **** Return only single zero if all zeros in buffer*/
      448       36    1     IF I=BUFFSZE
PL6.E3A0      #004=CPE$RZEROS File=CPE$SUBR.:E05TSI                              TUE 07/29/97 11:40 Page:90   

     36  0 000031   200006 236100                    LDQ     I,,AUTO
         0 000032   100000 116100                    CMPQ    0,,PR1
         0 000033   000040 601000 0                  TNZ     s:39

      449       37    1        THEN
      450       38    1           BUFF='0';

     38  0 000034   100000 720100                    LXL0    0,,PR1
         0 000035   040140 100400                    MLR     fill='040'O
         0 000036   000000 000001 1                  ADSC9   0                        cn=0,n=1
         0 000037   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0

      451       39    1     IF ADDR(NCHARS) ~= ADDR(NIL)

     39  0 000040   200005 236100                    LDQ     @NCHARS,,AUTO
         0 000041   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000042   000051 600000 0                  TZE     s:42

      452       40    1        THEN
      453       41    1           CALL INDEX(NCHARS,' ',BUFF);       /*Return # chars*/

     41  0 000043   100000 720100                    LXL0    0,,PR1
         0 000044   200005 473500                    LDP3    @NCHARS,,AUTO
         0 000045   000000 124540                    SCM     mask='000'O
         0 000046   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         0 000047   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         0 000050   300000 000100                    ARG     0,,PR3

      454       42    1     RETURN;

     42  0 000051   000000 702200 xent               TSX2  ! X66_ARET
      455       43    1   END CPE$RZEROS;

PL6.E3A0      #004=CPE$RZEROS File=CPE$SUBR.:E05TSI                              TUE 07/29/97 11:40 Page:91   
--  Include file information  --

   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure CPE$RZEROS.
PL6.E3A0      #004=CPE$RZEROS File=CPE$SUBR.:E05TSI                              TUE 07/29/97 11:40 Page:92   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @BUFF                      4-0-0/w PTR         r     1 @BUFFSZE
     5-0-0/w PTR         r     1 @NCHARS                   *0-0-0/c ACHR        r     1 BUFF
    *0-0-0/c CHAR        r     1 BUFFA(0:11)               *0-0-0/w UBIN        r     1 BUFFSZE
     6-0-0/w UBIN        r     1 I                         *0-0-0/w UBIN        r     1 NCHARS


   Procedure CPE$RZEROS requires 42 words for executable code.
   Procedure CPE$RZEROS requires 8 words of local(AUTO) storage.

    No errors detected in file CPE$SUBR.:E05TSI    .
PL6.E3A0      #004=CPE$RZEROS File=CPE$SUBR.:E05TSI                              TUE 07/29/97 11:40 Page:93   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=CPE$RZEROS File=CPE$SUBR.:E05TSI                              TUE 07/29/97 11:40 Page:94   
          MINI XREF LISTING

BUFF
        25**DCL        24--PROC       26--REDEF      34<<ASSIGN     34>>ASSIGN     38<<ASSIGN     41>>CALLBLT
BUFFA
        26**DCL        31>>DOWHILE
BUFFSZE
        28**DCL        24--PROC       25--IMP-SIZ    31>>DOWHILE    34>>ASSIGN     34>>ASSIGN     34>>ASSIGN
        36>>IF         38>>ASSIGN     41>>CALLBLT
I
        27**DCL        30<<ASSIGN     31>>DOWHILE    31>>DOWHILE    32<<ASSIGN     32>>ASSIGN     34>>ASSIGN
        34>>ASSIGN     36>>IF
NCHARS
        29**DCL        24--PROC       39--IF         41<<CALLBLT
