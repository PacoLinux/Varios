VERSION A05

PL6.E3A0      #001=VDA$READERS File=VDA$READERS.:VDA5TSI                         FRI 07/04/97 11:08 Page:1    
        1        1        /*M* VDA$READERS - Reader-routines for predefined file nodes */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* MCR=NO, DMC=YES */
        9        9        /*T*/
       10       10
       11       11        /*P* NAME: VDA$READERS
       12       12            PURPOSE:  Routines to read the nodes of predefined files.
       13       13            DESCRIPTION:
       14       14                This module contains several entry-points.  Each
       15       15                entry is called when a node at a specific level of
       16       16                a specific predefined file is called.  The Spec-type
       17       17                (%SPT_) of the node determines which of the following
       18       18                entries is called.
       19       19
       20       20                The entries are called after the node has been read
       21       21                into the Port.  The entries can change the Spec and/or
       22       22                Data components in the Port (not in the file, please),
       23       23                or they can return and do nothing.
       24       24
       25       25                VDA$RNAMES
       26       26                If the Spec component specifies special handling of the
       27       27                Data component, then perform the appropriate routine; this
       28       28                routine will replace the Data component.  Usually
       29       29                this is used to access a global internal value.
       30       30        */
       31       31
       32       32        /*D* NAME: VDA$READERS
       33       33            PARAMETERS:
       34       34                PORT - VD$PORT into which a node from a predefined file has been
       35       35                    read.  PORT.LEVEL.SPEC (n) and PORT.LEVEL.DATA$ (n)
       36       36                    contain copies of the Spec and Data components of the
       37       37                    node; the level ("n") must be known based on the
PL6.E3A0      #001=VDA$READERS File=VDA$READERS.:VDA5TSI                         FRI 07/04/97 11:08 Page:2    
       38       38                    Spec-type which gets us to a particular entry-point.
       39       39            INPUT:
       40       40            OUTPUT:
       41       41                PORT.LEVEL.DATA$ (n) may point to a new VD$BUFFER; if so,
       42       42                    it's old buffer will be freed.
       43       43            DESCRIPTION:
       44       44                Either do nothing; or free the old Spec and/or Data components
       45       45                from PORT and build new ones.
       46       46                Sometimes, we build a new component from some internal
       47       47                information.
       48       48        */
       49       49
       50       50        VDA$READERS: PROC (PORT) ALTRET;
       51       51
       52       52        %INCLUDE CP_6;
       53      133        %INCLUDE VD_MACROS_M;
       54     2348        %INCLUDE VD_PERR_C;
       55     2496
       56     2497
       57     2498        %VD$PORT (NAME=PORT, STCLASS=PARAM);
       58     2596
       59     2597
       60     2598    1   DCL VDG$OALLOC              ENTRY (3) ALTRET;
       61     2599    1   DCL VDG$OFREE               ENTRY (1) ALTRET;
       62     2600    1   DCL VDG$OCOPY               ENTRY (2) ALTRET;
       63     2601    1   DCL VDG$OCOPY_RANGE         ENTRY (2) ALTRET;
       64     2602    1   DCL VDG$OCOPY_LOCATION      ENTRY (2) ALTRET;
       65     2603    1   DCL VDG$ESCREECH            ENTRY (3);
       66     2604
       67     2605
       68     2606        %VD_6E (STCLASS=SYMREF);
       69     2642    1   DCL VD_CURRENT_WINDOW$ PTR SYMREF;
       70     2643
       71     2644
       72     2645
       73     2646    1   DCL SPEC$ PTR;
       74     2647    1   DCL DATA$ PTR;
PL6.E3A0      #001=VDA$READERS File=VDA$READERS.:VDA5TSI                         FRI 07/04/97 11:08 Page:3    
       75     2648    1   DCL L0_NODE$ PTR;
       76     2649    1   DCL L1_NODE$ PTR;
       77     2650    1   DCL WINDOWS_PORT$ PTR;
       78     2651    1   DCL FILE_PORT$ PTR;
       79     2652    1   DCL WINDOW_NUMBER SBIN;
       80     2653    1   DCL EDIT_BLOCK$ PTR;
       81     2654    1   DCL CURR_WINDOW$ PTR;
       82     2655    1   DCL SEL_EVAL$ PTR;
       83     2656    1   DCL VD_LOCATION$ PTR;
       84     2657
       85     2658
       86     2659        %VD$NAME_SPEC (NAME=NAME$SPEC, STCLASS="BASED(SPEC$)");
       87     2707        %VD$STREAM;
       88     2813        %VD$PORT (NAME=WINDOWS$PORT, STCLASS="BASED(WINDOWS_PORT$)");
       89     2911        %VD$PORT (NAME=FILE$PORT, STCLASS="BASED(FILE_PORT$)");
       90     3009        %VD$FILE_NODE (NAME=L0$NODE, STCLASS="BASED(L0_NODE$)");
       91     3102        %VD$FILE_NODE (NAME=L1$NODE, STCLASS="BASED(L1_NODE$)");
       92     3195        %VD$WINDOW_SPEC (NAME=CURR$WINDOW, STCLASS="BASED(CURR_WINDOW$)");
       93     3261        %VD$BLOCK_DESC (NAME=EDIT$BLOCK, STCLASS="BASED(EDIT_BLOCK$)");
       94     3408        %VD$EVAL (NAME=SEL$EVAL, STCLASS="BASED(SEL_EVAL$)");
       95     3653        %VD$BLOCK_DESC (NAME=SRC$EDIT_BLOCK,
       96     3654            STCLASS="BASED(VD_6E.SOURCE.OPERAND.EDIT_BLOCK$)");
       97     3801        %VD$EVAL (NAME=SRC$EVAL, STCLASS="BASED(VD_6E.SOURCE.OPERAND.EVAL$)");
       98     4046        %VD$LOCATION (NAME=VD$LOCATION, STCLASS="BASED(VD_LOCATION$)");
       99     4074        %VD$KEY_NUMBER;
      100     4089        %VD$BUFFER;
      101     4147        %VD$BUFFER_HEADER;
      102     4183        %VD$FILE_KEY;
      103     4232        %F$DCB;
      104     4289        %VD$NUMBER;
      105     4334        %VD$FILE_NODE;
      106     4427
      107     4428
      108     4429        %BOX (TITLE=VDA$RNAMES, PAGE=YES);
              4437    1
              4441    1   /***************************************************************************
              4443    1    *                                                                         *
PL6.E3A0      #001=VDA$READERS File=VDA$READERS.:VDA5TSI                         FRI 07/04/97 11:08 Page:4    
              4447    1            *                                 VDA$RNAMES                              *
              4449    1            *                                                                         *
              4451    1           ***************************************************************************/

      109     4455
      110     4456        /*D* NAME: VDA$RNAMES
      111     4457            PARAMETERS:
      112     4458                PORT - VD$PORT into which a level-1 Names file record has been
      113     4459                    read.
      114     4460            INPUT:
      115     4461                VD_CURRENT_WINDOW$ - Ptr to VD$FILE_NODE at level-1 of the
      116     4462                    Windows file, of the current editing window.  NIL if
      117     4463                    there is no current editing window.
      118     4464            OUTPUT:
      119     4465                PORT.LEVEL.DATA$ (%LVL_LOWER) will point to a new VD$BUFFER;
      120     4466                    it's old buffer will be freed.
      121     4467            DESCRIPTION:
      122     4468                Look at the record's Spec:  if it specifies a READER$$,
      123     4469                then free the current Data component and call the reader.
      124     4470                The reader will build a new Data component.
      125     4471        */
      126     4472
      127     4473    1   VDA$RNAMES: ENTRY (PORT) ALTRET;
      128     4474
      129     4475    1           SPEC$ = PORT.LEVEL.SPEC.V$ (%LVL_LOWER);
      130     4476    1           IF NAME$SPEC.READER# = 0 THEN
      131     4477    1              RETURN;
      132     4478
      133     4479    2           IF PORT.LEVEL.DATA$ (%LVL_LOWER) ~= ADDR(NIL) THEN DO;
      134     4480    2              IF NAME$SPEC.READER# = %RDR_$FILETYPE THEN EXIT;
      135     4481    2              CALL VDG$OFREE (PORT.LEVEL.DATA$ (%LVL_LOWER) -> VD$BUFFER)
      136     4482    2                ALTRET (OFREE_FAILED);
      137     4483    2              PORT.LEVEL.DATA$ (%LVL_LOWER) = ADDR(NIL);
      138     4484    2              END;
      139     4485
      140     4486    1           CURR_WINDOW$ = ADDR(NIL);
      141     4487    1           IF VD_CURRENT_WINDOW$ ~= ADDR(NIL) THEN
PL6.E3A0      #001=VDA$READERS File=VDA$READERS.:VDA5TSI                         FRI 07/04/97 11:08 Page:5    
      142     4488    1              CURR_WINDOW$ = VD_CURRENT_WINDOW$->VD$FILE_NODE.DESC.SPEC.V$;
      143     4489
      144     4490    2           DO CASE (NAME$SPEC.READER#);
      145     4491    2            CASE (ELSE); /* All depend on the current edit block */
      146     4492    2              EDIT_BLOCK$ = ADDR(NIL);
      147     4493    2              SEL_EVAL$ = ADDR(NIL);
      148     4494    3              IF CURR_WINDOW$ ~= ADDR(NIL) THEN DO;
      149     4495    3                 EDIT_BLOCK$ = CURR$WINDOW.OPERAND.EDIT_BLOCK$;
      150     4496    3                 SEL_EVAL$ = CURR$WINDOW.OPERAND.EVAL$;
      151     4497    3                 END;
      152     4498    2              IF NAME$SPEC.READER# ~= %RDR_$FILETYPE THEN
      153     4499    2                 IF EDIT_BLOCK$ = ADDR(NIL)
      154     4500    2                   OR (NAME$SPEC.READER# ~= %RDR_CURRENT
      155     4501    3                   AND SEL_EVAL$ = ADDR(NIL)) THEN DO;
      156     4502    3                    CALL RNAME_BLOCK (PORT)
      157     4503    3                      ALTRET (RNAME_BLOCK_FAILED);
      158     4504    3                    RETURN;    /* Return an empty buffer */
      159     4505    3                    END;
      160     4506
      161     4507    2            CASE (%RDR_$ENCLOSING_SOURCE, %RDR_$RANGE_SOURCE, %RDR_$FP_SOURCE);
      162     4508    2              IF VD_6E.SOURCE.OPERAND.EDIT_BLOCK$ = ADDR(NIL)
      163     4509    3                OR VD_6E.SOURCE.OPERAND.EVAL$ = ADDR(NIL) THEN DO;
      164     4510    3                 CALL RNAME_BLOCK (PORT)
      165     4511    3                   ALTRET (RNAME_BLOCK_FAILED);
      166     4512    3                 RETURN;       /* Return an empty buffer */
      167     4513    3                 END;
      168     4514
      169     4515    2            END;
      170     4516
      171     4517
      172     4518    1   READER_CASES:
      173     4519    2           DO CASE (NAME$SPEC.READER#);
      174     4520
      175     4521    2            CASE (%RDR_CURRENT);
      176     4522    2              CALL RNAME_BLOCK (PORT, EDIT$BLOCK)
      177     4523    2                ALTRET (RNAME_BLOCK_FAILED);
      178     4524
PL6.E3A0      #001=VDA$READERS File=VDA$READERS.:VDA5TSI                         FRI 07/04/97 11:08 Page:6    
      179     4525    2            CASE (%RDR_$ENCLOSING);
      180     4526    2              CALL RNAME_BLOCK (PORT, EDIT$BLOCK,
      181     4527    2                SEL$EVAL.ENCLOSING.START, SEL$EVAL.ENCLOSING.ENDD)
      182     4528    2                ALTRET (RNAME_BLOCK_FAILED);
      183     4529
      184     4530    2            CASE (%RDR_$RANGE, %RDR_THAT);
      185     4531    2              CALL RNAME_BLOCK (PORT, EDIT$BLOCK,
      186     4532    2                SEL$EVAL.RANGE.START, SEL$EVAL.RANGE.ENDD)
      187     4533    2                ALTRET (RNAME_BLOCK_FAILED);
      188     4534
      189     4535    2            CASE (%RDR_$FP, %RDR_HERE);
      190     4536    2              IF SEL$EVAL.STATE# = %EVST_END THEN
      191     4537    2                 VD_LOCATION$ = ADDR(SEL$EVAL.RANGE.ENDD);
      192     4538    2              ELSE
      193     4539    2                 VD_LOCATION$ = ADDR(SEL$EVAL.RANGE.START);
      194     4540    2              CALL RNAME_BLOCK (PORT, EDIT$BLOCK, VD$LOCATION, VD$LOCATION)
      195     4541    2                ALTRET (RNAME_BLOCK_FAILED);
      196     4542
      197     4543
      198     4544                    /*
      199     4545                    *   The source operand needs its own set of names for
      200     4546                    *       $ENCLOSING, $RANGE, and $FP only, 'cause these
      201     4547                    *       are re-read on each evaluation of the InTree.
      202     4548                    *       CURRENT, THAT, and HERE are read once, when
      203     4549                    *       the parse tree is first evaluated.  Since the
      204     4550                    *       InTree for the source operand is a copy of the
      205     4551                    *       InTree for the Selected operand, CURRENT, THAT,
      206     4552                    *       and HERE always refer to the Selected operand.
      207     4553                    *   However, at the time the Selected operand's InTree is
      208     4554                    *       copied to the source operand, all references to
      209     4555                    *       $ENCLOSING, $RANGE, and $FP (which are still in
      210     4556                    *       the form of references to names in the Locations
      211     4557                    *       file) are changed to references to $x_SOURCE.
      212     4558                    */
      213     4559
      214     4560    2            CASE (%RDR_$ENCLOSING_SOURCE);
      215     4561    2              CALL RNAME_BLOCK (PORT, SRC$EDIT_BLOCK,
PL6.E3A0      #001=VDA$READERS File=VDA$READERS.:VDA5TSI                         FRI 07/04/97 11:08 Page:7    
      216     4562    2                SRC$EVAL.ENCLOSING.START, SRC$EVAL.ENCLOSING.ENDD)
      217     4563    2                ALTRET (RNAME_BLOCK_FAILED);
      218     4564
      219     4565    2            CASE (%RDR_$RANGE_SOURCE);
      220     4566    2              CALL RNAME_BLOCK (PORT, SRC$EDIT_BLOCK,
      221     4567    2                SRC$EVAL.RANGE.START, SRC$EVAL.RANGE.ENDD)
      222     4568    2                ALTRET (RNAME_BLOCK_FAILED);
      223     4569
      224     4570    2            CASE (%RDR_$FP_SOURCE);
      225     4571    2              IF SRC$EVAL.STATE# = %EVST_END THEN
      226     4572    2                 VD_LOCATION$ = ADDR(SRC$EVAL.RANGE.ENDD);
      227     4573    2              ELSE
      228     4574    2                 VD_LOCATION$ = ADDR(SRC$EVAL.RANGE.START);
      229     4575    2              CALL RNAME_BLOCK (PORT, SRC$EDIT_BLOCK, VD$LOCATION, VD$LOCATION)
      230     4576    2                ALTRET (RNAME_BLOCK_FAILED);
      231     4577
      232     4578
      233     4579                    /*
      234     4580                    * The rest are values obtained from the attributes of the
      235     4581                    *     currently open file.
      236     4582                    */
      237     4583    2            CASE (%RDR_$FILETYPE);
      238     4584    2              IF EDIT_BLOCK$ = ADDR(NIL) THEN EXIT; /* Correct value is there */
      239     4585    2              FILE_PORT$ = CURR$WINDOW.OPERAND.STREAM$ -> VD$STREAM.PORT$;
      240     4586    2              IF FILE$PORT.DCB# = 0 THEN EXIT;
      241     4587    2              PORT.LEVEL.DATA$ (%LVL_LOWER) -> VD$BUFFER.LENGTH# = 2;
      242     4588    2              PORT.LEVEL.DATA$ (%LVL_LOWER) -> VD$BUFFER.BYTES =
      243     4589    2                DCBADDR (FILE$PORT.DCB#) -> F$DCB.TYPE#;
      244     4590
      245     4591    2            CASE (%RDR_$FILERECORDS);
      246     4592    2              FILE_PORT$ = CURR$WINDOW.OPERAND.STREAM$ -> VD$STREAM.PORT$;
      247     4593    2              CALL VDG$OALLOC (%CLS_NUMBER, PORT.LEVEL.DATA$ (%LVL_LOWER))
      248     4594    2                ALTRET (OALLOC_FAILED);
      249     4595    2              PORT.LEVEL.DATA$ (%LVL_LOWER) -> VD$NUMBER.V# =
      250     4596    2                DCBADDR (FILE$PORT.DCB#) -> F$DCB.NRECS#;
      251     4597
      252     4598    2            CASE (%RDR_$FILEORG);
PL6.E3A0      #001=VDA$READERS File=VDA$READERS.:VDA5TSI                         FRI 07/04/97 11:08 Page:8    
      253     4599    2              FILE_PORT$ = CURR$WINDOW.OPERAND.STREAM$ -> VD$STREAM.PORT$;
      254     4600    2              CALL VDG$OALLOC (%CLS_ORG, PORT.LEVEL.DATA$ (%LVL_LOWER))
      255     4601    2                ALTRET (OALLOC_FAILED);
      256     4602    2              PORT.LEVEL.DATA$ (%LVL_LOWER) -> VD$NUMBER.V# =
      257     4603    2                FILE$PORT.LEVEL.ORG# (%LVL_EXT_REC);
      258     4604
      259     4605    2            END READER_CASES;
      260     4606
      261     4607    1           RETURN;
      262     4608
      263     4609
      264     4610
      265     4611    1   OFREE_FAILED: ;
      266     4612    1   OALLOC_FAILED: ;
      267     4613    1   RNAME_BLOCK_FAILED: ;
      268     4614    1           ALTRETURN;
      269     4615
      270     4616
      271     4617        %BOX (TITLE=RNAME_BLOCK, PAGE=YES);
              4625    1
              4629    1   /***************************************************************************
              4631    1    *                                                                         *
              4635    1            *                                RNAME_BLOCK                              *
              4637    1            *                                                                         *
              4639    1           ***************************************************************************/

      272     4643
      273     4644        /*I* NAME: RNAME_BLOCK
      274     4645            PARAMETERS:
      275     4646                PORT - Same as for main routine.
      276     4647                ENCLOSING - VD$BLOCK_DESC specifying the enclosing block.
      277     4648                START - Optional VD$LOCATION specifying the starting location
      278     4649                    of the range.  Omit if ENCLOSING contains the range.
      279     4650                ENDD - Optional VD$LOCATION specifying the ending location of
      280     4651                    the range.  Omit if ENCLOSING contains the range.
      281     4652            INPUT:
      282     4653                PORT.LEVEL.DATA$ (%LVL_LOWER) must be NIL.
PL6.E3A0      #001=VDA$READERS File=VDA$READERS.:VDA5TSI                         FRI 07/04/97 11:08 Page:9    
      283     4654            OUTPUT:
      284     4655                PORT.LEVEL.DATA$ (%LVL_LOWER) will point to a new VD$BUFFER.
      285     4656            DESCRIPTION:
      286     4657                If we weren't passed a START or ENDD, allocate a
      287     4658                    VD$POINTER which points to ENCLOSING, and point the Port
      288     4659                    to it.
      289     4660                Else, allocate a VD$BUFFER which contains a VD$BLOCK_DESC
      290     4661                    (object class CLS_BLOCK_BUFFER).  Copy most of ENCLOSING
      291     4662                    (all but ENCLOSING.RANGE) to the buffer, then build the
      292     4663                    range from START and ENDD.  Point the Port at the buffer.
      293     4664        */
      294     4665
      295     4666    1   RNAME_BLOCK: PROC (PORT, ENCLOSING, START, ENDD) ALTRET;
      296     4667
      297     4668        %VD$PORT (NAME=PORT, STCLASS=PARAM);
      298     4766        %VD$BLOCK_DESC (NAME=ENCLOSING, STCLASS=PARAM);
      299     4913        %VD$LOCATION (NAME=START, STCLASS=PARAM);
      300     4941        %VD$LOCATION (NAME=ENDD, STCLASS=PARAM);
      301     4969
      302     4970
      303     4971    2   DCL BLOCK_BUFFER$ PTR;
      304     4972    2   DCL BLOCK_DESC$ PTR;
      305     4973
      306     4974
      307     4975        %VD$BUFFER (NAME=BLOCK$BUFFER, STCLASS="BASED(BLOCK_BUFFER$)");
      308     5033        %VD$BLOCK_DESC (NAME=BLOCK$DESC, STCLASS="BASED(BLOCK_DESC$)");
      309     5180        %VD$BUFFER;
      310     5238        %VD$POINTER;
      311     5283        %VD$TEXTC_REMOTE;
      312     5344
      313     5345
      314     5346
      315     5347    3           IF ADDR(START) = ADDR(NIL) THEN DO;
      316     5348    3              CALL VDG$OALLOC (%CLS_PTR_BLOCK_DESC,
      317     5349    3                PORT.LEVEL.DATA$ (%LVL_LOWER))
      318     5350    3                ALTRET (OALLOC_FAILED);
      319     5351    3              PORT.LEVEL.DATA$ (%LVL_LOWER) -> VD$POINTER.V$ = ADDR(ENCLOSING);
PL6.E3A0      #001=VDA$READERS File=VDA$READERS.:VDA5TSI                         FRI 07/04/97 11:08 Page:10   
      320     5352    3              END;
      321     5353    3           ELSE DO;
      322     5354    3              CALL VDG$OALLOC (%CLS_BLOCK_BUFFER, BLOCK_BUFFER$)
      323     5355    3                ALTRET (OALLOC_FAILED);
      324     5356    3              BLOCK_DESC$ = PINCRW(BLOCK_BUFFER$,
      325     5357    3                SIZEW(VD$BUFFER_HEADER));
      326     5358    3              BLOCK$BUFFER.LENGTH# = (BLOCK$BUFFER.OBJECT.SIZE# * %NB_PER_WORD) -
      327     5359    3                LENGTHC(VD$BUFFER_HEADER);
      328     5360    3              BLOCK$DESC = ENCLOSING;
      329     5361    4              IF BLOCK$DESC.FILE_KEY.REP# = %REP_REMOTE THEN DO;
      330     5362    4                 CALL VDG$OCOPY (ENCLOSING.FILE_KEY.V$ -> VD$TEXTC_REMOTE,
      331     5363    4                   BLOCK$DESC.FILE_KEY.V$)
      332     5364    4                   ALTRET (OCOPY_FAILED);
      333     5365    4                 END;
      334     5366    3              BLOCK$DESC.RANGE = %CLEAR;
      335     5367    3              CALL VDG$OCOPY_LOCATION (START, BLOCK$DESC.RANGE.START)
      336     5368    3                ALTRET (OCOPY_LOCATION_FAILED);
      337     5369    3              CALL VDG$OCOPY_LOCATION (ENDD, BLOCK$DESC.RANGE.ENDD)
      338     5370    3                ALTRET (OCOPY_LOCATION_FAILED);
      339     5371    3              PORT.LEVEL.DATA$ (%LVL_LOWER) = BLOCK_BUFFER$;
      340     5372    3              END;
      341     5373
      342     5374    2           RETURN;
      343     5375
      344     5376
      345     5377    2   OALLOC_FAILED: ;
      346     5378    2   OCOPY_FAILED: ;
      347     5379    2   OCOPY_LOCATION_FAILED: ;
      348     5380    2           ALTRETURN;
      349     5381
      350     5382    2   END RNAME_BLOCK;
      351     5383
      352     5384    1   END VDA$READERS;

PL6.E3A0      #001=VDA$READERS File=VDA$READERS.:VDA5TSI                         FRI 07/04/97 11:08 Page:11   
--  Include file information  --

   VD_PERR_C.:VDA5TOU  is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VDA$READERS.

   Procedure VDA$READERS requires 345 words for executable code.
   Procedure VDA$READERS requires 26 words of local(AUTO) storage.

    No errors detected in file VDA$READERS.:VDA5TSI    .

PL6.E3A0      #001=VDA$READERS File=VDA$READERS.:VDA5TSI                         FRI 07/04/97 11:08 Page:12   

 Object Unit name= VDA$READERS                                File name= VDA$READERS.:VDA5TOU
 UTS= JUL 04 '97 11:08:42.72 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Proc  even  none   345    531  VDA$READERS
    2  RoData even  none     8     10  VDA$READERS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        1  VDA$READERS
     1      3          yes     yes      Std        1  VDA$RNAMES

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 VDG$OFREE
 yes     yes           Std       3 VDG$OALLOC
 yes     yes           Std       2 VDG$OCOPY
 yes     yes           Std       2 VDG$OCOPY_LOCATION
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
PL6.E3A0      #001=VDA$READERS File=VDA$READERS.:VDA5TSI                         FRI 07/04/97 11:08 Page:13   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  VD_6E                                 VD_CURRENT_WINDOW$
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ROSID                                 ISSID
PL6.E3A0      #001=VDA$READERS File=VDA$READERS.:VDA5TSI                         FRI 07/04/97 11:08 Page:14   


        1        1        /*M* VDA$READERS - Reader-routines for predefined file nodes */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* MCR=NO, DMC=YES */
        9        9        /*T*/
       10       10
       11       11        /*P* NAME: VDA$READERS
       12       12            PURPOSE:  Routines to read the nodes of predefined files.
       13       13            DESCRIPTION:
       14       14                This module contains several entry-points.  Each
       15       15                entry is called when a node at a specific level of
       16       16                a specific predefined file is called.  The Spec-type
       17       17                (%SPT_) of the node determines which of the following
       18       18                entries is called.
       19       19
       20       20                The entries are called after the node has been read
       21       21                into the Port.  The entries can change the Spec and/or
       22       22                Data components in the Port (not in the file, please),
       23       23                or they can return and do nothing.
       24       24
       25       25                VDA$RNAMES
       26       26                If the Spec component specifies special handling of the
       27       27                Data component, then perform the appropriate routine; this
       28       28                routine will replace the Data component.  Usually
       29       29                this is used to access a global internal value.
       30       30        */
       31       31
       32       32        /*D* NAME: VDA$READERS
       33       33            PARAMETERS:
       34       34                PORT - VD$PORT into which a node from a predefined file has been
       35       35                    read.  PORT.LEVEL.SPEC (n) and PORT.LEVEL.DATA$ (n)
       36       36                    contain copies of the Spec and Data components of the
PL6.E3A0      #001=VDA$READERS File=VDA$READERS.:VDA5TSI                         FRI 07/04/97 11:08 Page:15   
       37       37                    node; the level ("n") must be known based on the
       38       38                    Spec-type which gets us to a particular entry-point.
       39       39            INPUT:
       40       40            OUTPUT:
       41       41                PORT.LEVEL.DATA$ (n) may point to a new VD$BUFFER; if so,
       42       42                    it's old buffer will be freed.
       43       43            DESCRIPTION:
       44       44                Either do nothing; or free the old Spec and/or Data components
       45       45                from PORT and build new ones.
       46       46                Sometimes, we build a new component from some internal
       47       47                information.
       48       48        */
       49       49
       50       50        VDA$READERS: PROC (PORT) ALTRET;

     50  1 000000   000000 700200 xent  VDA$READERS  TSX0  ! X66_AUTO_1
         1 000001   000032 000001                    ZERO    26,1
         1 000002   000005 710000 1                  TRA     s:4475

       51       51
       52       52        %INCLUDE CP_6;
       53      133        %INCLUDE VD_MACROS_M;
       54     2348        %INCLUDE VD_PERR_C;
       55     2496
       56     2497
       57     2498        %VD$PORT (NAME=PORT, STCLASS=PARAM);
       58     2596
       59     2597
       60     2598    1   DCL VDG$OALLOC              ENTRY (3) ALTRET;
       61     2599    1   DCL VDG$OFREE               ENTRY (1) ALTRET;
       62     2600    1   DCL VDG$OCOPY               ENTRY (2) ALTRET;
       63     2601    1   DCL VDG$OCOPY_RANGE         ENTRY (2) ALTRET;
       64     2602    1   DCL VDG$OCOPY_LOCATION      ENTRY (2) ALTRET;
       65     2603    1   DCL VDG$ESCREECH            ENTRY (3);
       66     2604
       67     2605
       68     2606        %VD_6E (STCLASS=SYMREF);
PL6.E3A0      #001=VDA$READERS File=VDA$READERS.:VDA5TSI                         FRI 07/04/97 11:08 Page:16   
       69     2642    1   DCL VD_CURRENT_WINDOW$ PTR SYMREF;
       70     2643
       71     2644
       72     2645
       73     2646    1   DCL SPEC$ PTR;
       74     2647    1   DCL DATA$ PTR;
       75     2648    1   DCL L0_NODE$ PTR;
       76     2649    1   DCL L1_NODE$ PTR;
       77     2650    1   DCL WINDOWS_PORT$ PTR;
       78     2651    1   DCL FILE_PORT$ PTR;
       79     2652    1   DCL WINDOW_NUMBER SBIN;
       80     2653    1   DCL EDIT_BLOCK$ PTR;
       81     2654    1   DCL CURR_WINDOW$ PTR;
       82     2655    1   DCL SEL_EVAL$ PTR;
       83     2656    1   DCL VD_LOCATION$ PTR;
       84     2657
       85     2658
       86     2659        %VD$NAME_SPEC (NAME=NAME$SPEC, STCLASS="BASED(SPEC$)");
       87     2707        %VD$STREAM;
       88     2813        %VD$PORT (NAME=WINDOWS$PORT, STCLASS="BASED(WINDOWS_PORT$)");
       89     2911        %VD$PORT (NAME=FILE$PORT, STCLASS="BASED(FILE_PORT$)");
       90     3009        %VD$FILE_NODE (NAME=L0$NODE, STCLASS="BASED(L0_NODE$)");
       91     3102        %VD$FILE_NODE (NAME=L1$NODE, STCLASS="BASED(L1_NODE$)");
       92     3195        %VD$WINDOW_SPEC (NAME=CURR$WINDOW, STCLASS="BASED(CURR_WINDOW$)");
       93     3261        %VD$BLOCK_DESC (NAME=EDIT$BLOCK, STCLASS="BASED(EDIT_BLOCK$)");
       94     3408        %VD$EVAL (NAME=SEL$EVAL, STCLASS="BASED(SEL_EVAL$)");
       95     3653        %VD$BLOCK_DESC (NAME=SRC$EDIT_BLOCK,
       96     3654            STCLASS="BASED(VD_6E.SOURCE.OPERAND.EDIT_BLOCK$)");
       97     3801        %VD$EVAL (NAME=SRC$EVAL, STCLASS="BASED(VD_6E.SOURCE.OPERAND.EVAL$)");
       98     4046        %VD$LOCATION (NAME=VD$LOCATION, STCLASS="BASED(VD_LOCATION$)");
       99     4074        %VD$KEY_NUMBER;
      100     4089        %VD$BUFFER;
      101     4147        %VD$BUFFER_HEADER;
      102     4183        %VD$FILE_KEY;
      103     4232        %F$DCB;
      104     4289        %VD$NUMBER;
      105     4334        %VD$FILE_NODE;
PL6.E3A0      #001=VDA$READERS File=VDA$READERS.:VDA5TSI                         FRI 07/04/97 11:08 Page:17   
      106     4427
      107     4428
      108     4429        %BOX (TITLE=VDA$RNAMES, PAGE=YES);
              4437    1
              4441    1   /***************************************************************************
              4443    1    *                                                                         *
              4447    1            *                                 VDA$RNAMES                             *
              4449    1            *                                                                        *
              4451    1          ***************************************************************************/

      109     4455
      110     4456        /*D* NAME: VDA$RNAMES
      111     4457            PARAMETERS:
      112     4458                PORT - VD$PORT into which a level-1 Names file record has been
      113     4459                    read.
      114     4460            INPUT:
      115     4461                VD_CURRENT_WINDOW$ - Ptr to VD$FILE_NODE at level-1 of the
      116     4462                    Windows file, of the current editing window.  NIL if
      117     4463                    there is no current editing window.
      118     4464            OUTPUT:
      119     4465                PORT.LEVEL.DATA$ (%LVL_LOWER) will point to a new VD$BUFFER;
      120     4466                    it's old buffer will be freed.
      121     4467            DESCRIPTION:
      122     4468                Look at the record's Spec:  if it specifies a READER$$,
      123     4469                then free the current Data component and call the reader.
      124     4470                The reader will build a new Data component.
      125     4471        */
      126     4472
      127     4473    1   VDA$RNAMES: ENTRY (PORT) ALTRET;

   4473  1 000003   000000 700200 xent  VDA$RNAMES   TSX0  ! X66_AUTO_1
         1 000004   000032 000001                    ZERO    26,1

      128     4474
      129     4475    1           SPEC$ = PORT.LEVEL.SPEC.V$ (%LVL_LOWER);

   4475  1 000005   200003 470500                    LDP0    @PORT,,AUTO
PL6.E3A0      #001=VDA$READERS File=VDA$READERS.:VDA5TSI                         FRI 07/04/97 11:08 Page:18   
         1 000006   000035 236100                    LDQ     29,,PR0
         1 000007   200004 756100                    STQ     SPEC$,,AUTO

      130     4476    1           IF NAME$SPEC.READER# = 0 THEN

   4476  1 000010   200004 471500                    LDP1    SPEC$,,AUTO
         1 000011   100006 220100                    LDX0    6,,PR1
         1 000012   000014 601000 1                  TNZ     s:4479

      131     4477    1              RETURN;

   4477  1 000013   000000 702200 xent               TSX2  ! X66_ARET

      132     4478
      133     4479    2           IF PORT.LEVEL.DATA$ (%LVL_LOWER) ~= ADDR(NIL) THEN DO;

   4479  1 000014   000036 236100                    LDQ     30,,PR0
         1 000015   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000016   000032 600000 1                  TZE     s:4486

      134     4480    2              IF NAME$SPEC.READER# = %RDR_$FILETYPE THEN EXIT;

   4480  1 000017   000012 100003                    CMPX0   10,DU
         1 000020   000032 600000 1                  TZE     s:4486

      135     4481    2              CALL VDG$OFREE (PORT.LEVEL.DATA$ (%LVL_LOWER) -> VD$BUFFER)

   4481  1 000021   000036 473500                    LDP3    30,,PR0
         1 000022   200030 453500                    STP3    BLOCK_DESC$+2,,AUTO
         1 000023   200030 630500                    EPPR0   BLOCK_DESC$+2,,AUTO
         1 000024   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000025   000000 701000 xent               TSX1    VDG$OFREE
         1 000026   000412 702000 1                  TSX2    OFREE_FAILED

      136     4482    2                ALTRET (OFREE_FAILED);
      137     4483    2              PORT.LEVEL.DATA$ (%LVL_LOWER) = ADDR(NIL);

PL6.E3A0      #001=VDA$READERS File=VDA$READERS.:VDA5TSI                         FRI 07/04/97 11:08 Page:19   
   4483  1 000027   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000030   200003 470500                    LDP0    @PORT,,AUTO
         1 000031   000036 756100                    STQ     30,,PR0

      138     4484    2              END;

      139     4485
      140     4486    1           CURR_WINDOW$ = ADDR(NIL);

   4486  1 000032   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000033   200014 756100                    STQ     CURR_WINDOW$,,AUTO

      141     4487    1           IF VD_CURRENT_WINDOW$ ~= ADDR(NIL) THEN

   4487  1 000034   000000 236000 xsym               LDQ     VD_CURRENT_WINDOW$
         1 000035   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000036   000042 600000 1                  TZE     s:4490

      142     4488    1              CURR_WINDOW$ = VD_CURRENT_WINDOW$->VD$FILE_NODE.DESC.SPEC.V$;

   4488  1 000037   000000 471400 xsym               LDP1    VD_CURRENT_WINDOW$
         1 000040   100007 236100                    LDQ     7,,PR1
         1 000041   200014 756100                    STQ     CURR_WINDOW$,,AUTO

      143     4489
      144     4490    2           DO CASE (NAME$SPEC.READER#);

   4490  1 000042   200004 471500                    LDP1    SPEC$,,AUTO
         1 000043   100006 236100                    LDQ     6,,PR1
         1 000044   000022 772000                    QRL     18
         1 000045   000007 136007                    SBLQ    7,DL
         1 000046   000003 116007                    CMPQ    3,DL
         1 000047   000051 602006 1                  TNC     s:4490+7,QL
         1 000050   000054 710000 1                  TRA     s:4492
         1 000051   000113 710000 1                  TRA     s:4508
         1 000052   000113 710000 1                  TRA     s:4508
         1 000053   000113 710000 1                  TRA     s:4508
PL6.E3A0      #001=VDA$READERS File=VDA$READERS.:VDA5TSI                         FRI 07/04/97 11:08 Page:20   

      145     4491    2            CASE (ELSE); /* All depend on the current edit block */

      146     4492    2              EDIT_BLOCK$ = ADDR(NIL);

   4492  1 000054   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000055   200013 756100                    STQ     EDIT_BLOCK$,,AUTO

      147     4493    2              SEL_EVAL$ = ADDR(NIL);

   4493  1 000056   200015 756100                    STQ     SEL_EVAL$,,AUTO

      148     4494    3              IF CURR_WINDOW$ ~= ADDR(NIL) THEN DO;

   4494  1 000057   200014 236100                    LDQ     CURR_WINDOW$,,AUTO
         1 000060   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000061   000067 600000 1                  TZE     s:4498

      149     4495    3                 EDIT_BLOCK$ = CURR$WINDOW.OPERAND.EDIT_BLOCK$;

   4495  1 000062   200014 473500                    LDP3    CURR_WINDOW$,,AUTO
         1 000063   300012 236100                    LDQ     10,,PR3
         1 000064   200013 756100                    STQ     EDIT_BLOCK$,,AUTO

      150     4496    3                 SEL_EVAL$ = CURR$WINDOW.OPERAND.EVAL$;

   4496  1 000065   300013 236100                    LDQ     11,,PR3
         1 000066   200015 756100                    STQ     SEL_EVAL$,,AUTO

      151     4497    3                 END;

      152     4498    2              IF NAME$SPEC.READER# ~= %RDR_$FILETYPE THEN

   4498  1 000067   100006 220100                    LDX0    6,,PR1
         1 000070   000012 100003                    CMPX0   10,DU
         1 000071   000132 600000 1                  TZE     READER_CASES

PL6.E3A0      #001=VDA$READERS File=VDA$READERS.:VDA5TSI                         FRI 07/04/97 11:08 Page:21   
      153     4499    2                 IF EDIT_BLOCK$ = ADDR(NIL)

   4499  1 000072   200013 236100                    LDQ     EDIT_BLOCK$,,AUTO
         1 000073   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000074   000102 600000 1                  TZE     s:4502
         1 000075   000004 100003                    CMPX0   4,DU
         1 000076   000132 600000 1                  TZE     READER_CASES
         1 000077   200015 236100                    LDQ     SEL_EVAL$,,AUTO
         1 000100   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000101   000132 601000 1                  TNZ     READER_CASES

      154     4500    2                   OR (NAME$SPEC.READER# ~= %RDR_CURRENT
      155     4501    3                   AND SEL_EVAL$ = ADDR(NIL)) THEN DO;

      156     4502    3                    CALL RNAME_BLOCK (PORT)

   4502  1 000102   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000103   200024 756100                    STQ     @START+1,,AUTO
         1 000104   000001 235000 xsym               LDA     B_VECTNIL+1
         1 000105   200022 757100                    STAQ    @PORT+1,,AUTO
         1 000106   200003 236100                    LDQ     @PORT,,AUTO
         1 000107   200021 756100                    STQ     VD_LOCATION$+3,,AUTO
         1 000110   000413 701000 1                  TSX1    RNAME_BLOCK
         1 000111   000412 702000 1                  TSX2    OFREE_FAILED

      157     4503    3                      ALTRET (RNAME_BLOCK_FAILED);
      158     4504    3                    RETURN;    /* Return an empty buffer */

   4504  1 000112   000000 702200 xent               TSX2  ! X66_ARET

      159     4505    3                    END;
      160     4506
      161     4507    2            CASE (%RDR_$ENCLOSING_SOURCE, %RDR_$RANGE_SOURCE, %RDR_$FP_SOURCE);

      162     4508    2              IF VD_6E.SOURCE.OPERAND.EDIT_BLOCK$ = ADDR(NIL)

   4508  1 000113   000022 236000 xsym               LDQ     VD_6E+18
PL6.E3A0      #001=VDA$READERS File=VDA$READERS.:VDA5TSI                         FRI 07/04/97 11:08 Page:22   
         1 000114   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000115   000121 600000 1                  TZE     s:4510
         1 000116   000023 236000 xsym               LDQ     VD_6E+19
         1 000117   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000120   000132 601000 1                  TNZ     READER_CASES

      163     4509    3                OR VD_6E.SOURCE.OPERAND.EVAL$ = ADDR(NIL) THEN DO;

      164     4510    3                 CALL RNAME_BLOCK (PORT)

   4510  1 000121   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000122   200024 756100                    STQ     @START+1,,AUTO
         1 000123   000001 235000 xsym               LDA     B_VECTNIL+1
         1 000124   200022 757100                    STAQ    @PORT+1,,AUTO
         1 000125   200003 236100                    LDQ     @PORT,,AUTO
         1 000126   200021 756100                    STQ     VD_LOCATION$+3,,AUTO
         1 000127   000413 701000 1                  TSX1    RNAME_BLOCK
         1 000130   000412 702000 1                  TSX2    OFREE_FAILED

      165     4511    3                   ALTRET (RNAME_BLOCK_FAILED);
      166     4512    3                 RETURN;       /* Return an empty buffer */

   4512  1 000131   000000 702200 xent               TSX2  ! X66_ARET

      167     4513    3                 END;
      168     4514
      169     4515    2            END;

      170     4516
      171     4517
      172     4518    1   READER_CASES:
      173     4519    2           DO CASE (NAME$SPEC.READER#);

   4519  1 000132   100006 220100       READER_CASES LDX0    6,,PR1
         1 000133   000015 100003                    CMPX0   13,DU
         1 000134   000136 602010 1                  TNC     READER_CASES+4,X0
         1 000135   000411 710000 1                  TRA     s:4607
PL6.E3A0      #001=VDA$READERS File=VDA$READERS.:VDA5TSI                         FRI 07/04/97 11:08 Page:23   
         1 000136   000411 710000 1                  TRA     s:4607
         1 000137   000164 710000 1                  TRA     s:4526
         1 000140   000200 710000 1                  TRA     s:4531
         1 000141   000214 710000 1                  TRA     s:4536
         1 000142   000153 710000 1                  TRA     s:4522
         1 000143   000200 710000 1                  TRA     s:4531
         1 000144   000214 710000 1                  TRA     s:4536
         1 000145   000237 710000 1                  TRA     s:4561
         1 000146   000253 710000 1                  TRA     s:4566
         1 000147   000267 710000 1                  TRA     s:4571
         1 000150   000312 710000 1                  TRA     s:4584
         1 000151   000341 710000 1                  TRA     s:4592
         1 000152   000367 710000 1                  TRA     s:4599

      174     4520
      175     4521    2            CASE (%RDR_CURRENT);

      176     4522    2              CALL RNAME_BLOCK (PORT, EDIT$BLOCK)

   4522  1 000153   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000154   200024 756100                    STQ     @START+1,,AUTO
         1 000155   200013 235100                    LDA     EDIT_BLOCK$,,AUTO
         1 000156   200022 757100                    STAQ    @PORT+1,,AUTO
         1 000157   200003 236100                    LDQ     @PORT,,AUTO
         1 000160   200021 756100                    STQ     VD_LOCATION$+3,,AUTO
         1 000161   000413 701000 1                  TSX1    RNAME_BLOCK
         1 000162   000412 702000 1                  TSX2    OFREE_FAILED
         1 000163   000411 710000 1                  TRA     s:4607

      177     4523    2                ALTRET (RNAME_BLOCK_FAILED);
      178     4524
      179     4525    2            CASE (%RDR_$ENCLOSING);

      180     4526    2              CALL RNAME_BLOCK (PORT, EDIT$BLOCK,

   4526  1 000164   200015 236100                    LDQ     SEL_EVAL$,,AUTO
         1 000165   000013 036003                    ADLQ    11,DU
PL6.E3A0      #001=VDA$READERS File=VDA$READERS.:VDA5TSI                         FRI 07/04/97 11:08 Page:24   
         1 000166   200024 756100                    STQ     @START+1,,AUTO
         1 000167   200015 236100                    LDQ     SEL_EVAL$,,AUTO
         1 000170   000002 036003                    ADLQ    2,DU
         1 000171   200013 235100                    LDA     EDIT_BLOCK$,,AUTO
         1 000172   200022 757100                    STAQ    @PORT+1,,AUTO
         1 000173   200003 236100                    LDQ     @PORT,,AUTO
         1 000174   200021 756100                    STQ     VD_LOCATION$+3,,AUTO
         1 000175   000413 701000 1                  TSX1    RNAME_BLOCK
         1 000176   000412 702000 1                  TSX2    OFREE_FAILED
         1 000177   000411 710000 1                  TRA     s:4607

      181     4527    2                SEL$EVAL.ENCLOSING.START, SEL$EVAL.ENCLOSING.ENDD)
      182     4528    2                ALTRET (RNAME_BLOCK_FAILED);
      183     4529
      184     4530    2            CASE (%RDR_$RANGE, %RDR_THAT);

      185     4531    2              CALL RNAME_BLOCK (PORT, EDIT$BLOCK,

   4531  1 000200   200015 236100                    LDQ     SEL_EVAL$,,AUTO
         1 000201   000035 036003                    ADLQ    29,DU
         1 000202   200024 756100                    STQ     @START+1,,AUTO
         1 000203   200015 236100                    LDQ     SEL_EVAL$,,AUTO
         1 000204   000024 036003                    ADLQ    20,DU
         1 000205   200013 235100                    LDA     EDIT_BLOCK$,,AUTO
         1 000206   200022 757100                    STAQ    @PORT+1,,AUTO
         1 000207   200003 236100                    LDQ     @PORT,,AUTO
         1 000210   200021 756100                    STQ     VD_LOCATION$+3,,AUTO
         1 000211   000413 701000 1                  TSX1    RNAME_BLOCK
         1 000212   000412 702000 1                  TSX2    OFREE_FAILED
         1 000213   000411 710000 1                  TRA     s:4607

      186     4532    2                SEL$EVAL.RANGE.START, SEL$EVAL.RANGE.ENDD)
      187     4533    2                ALTRET (RNAME_BLOCK_FAILED);
      188     4534
      189     4535    2            CASE (%RDR_$FP, %RDR_HERE);

      190     4536    2              IF SEL$EVAL.STATE# = %EVST_END THEN
PL6.E3A0      #001=VDA$READERS File=VDA$READERS.:VDA5TSI                         FRI 07/04/97 11:08 Page:25   

   4536  1 000214   200015 473500                    LDP3    SEL_EVAL$,,AUTO
         1 000215   300070 221100                    LDX1    56,,PR3
         1 000216   000003 101003                    CMPX1   3,DU
         1 000217   000224 601000 1                  TNZ     s:4539

      191     4537    2                 VD_LOCATION$ = ADDR(SEL$EVAL.RANGE.ENDD);

   4537  1 000220   200015 236100                    LDQ     SEL_EVAL$,,AUTO
         1 000221   000035 036003                    ADLQ    29,DU
         1 000222   200016 756100                    STQ     VD_LOCATION$,,AUTO
         1 000223   000227 710000 1                  TRA     s:4540

      192     4538    2              ELSE
      193     4539    2                 VD_LOCATION$ = ADDR(SEL$EVAL.RANGE.START);

   4539  1 000224   200015 236100                    LDQ     SEL_EVAL$,,AUTO
         1 000225   000024 036003                    ADLQ    20,DU
         1 000226   200016 756100                    STQ     VD_LOCATION$,,AUTO

      194     4540    2              CALL RNAME_BLOCK (PORT, EDIT$BLOCK, VD$LOCATION, VD$LOCATION)

   4540  1 000227   200024 756100                    STQ     @START+1,,AUTO
         1 000230   200013 235100                    LDA     EDIT_BLOCK$,,AUTO
         1 000231   200022 757100                    STAQ    @PORT+1,,AUTO
         1 000232   200003 236100                    LDQ     @PORT,,AUTO
         1 000233   200021 756100                    STQ     VD_LOCATION$+3,,AUTO
         1 000234   000413 701000 1                  TSX1    RNAME_BLOCK
         1 000235   000412 702000 1                  TSX2    OFREE_FAILED
         1 000236   000411 710000 1                  TRA     s:4607

      195     4541    2                ALTRET (RNAME_BLOCK_FAILED);
      196     4542
      197     4543
      198     4544                    /*
      199     4545                    *   The source operand needs its own set of names for
      200     4546                    *       $ENCLOSING, $RANGE, and $FP only, 'cause these
PL6.E3A0      #001=VDA$READERS File=VDA$READERS.:VDA5TSI                         FRI 07/04/97 11:08 Page:26   
      201     4547                    *       are re-read on each evaluation of the InTree.
      202     4548                    *       CURRENT, THAT, and HERE are read once, when
      203     4549                    *       the parse tree is first evaluated.  Since the
      204     4550                    *       InTree for the source operand is a copy of the
      205     4551                    *       InTree for the Selected operand, CURRENT, THAT,
      206     4552                    *       and HERE always refer to the Selected operand.
      207     4553                    *   However, at the time the Selected operand's InTree is
      208     4554                    *       copied to the source operand, all references to
      209     4555                    *       $ENCLOSING, $RANGE, and $FP (which are still in
      210     4556                    *       the form of references to names in the Locations
      211     4557                    *       file) are changed to references to $x_SOURCE.
      212     4558                    */
      213     4559
      214     4560    2            CASE (%RDR_$ENCLOSING_SOURCE);

      215     4561    2              CALL RNAME_BLOCK (PORT, SRC$EDIT_BLOCK,

   4561  1 000237   000023 236000 xsym               LDQ     VD_6E+19
         1 000240   000013 036003                    ADLQ    11,DU
         1 000241   200024 756100                    STQ     @START+1,,AUTO
         1 000242   000023 236000 xsym               LDQ     VD_6E+19
         1 000243   000002 036003                    ADLQ    2,DU
         1 000244   000022 235000 xsym               LDA     VD_6E+18
         1 000245   200022 757100                    STAQ    @PORT+1,,AUTO
         1 000246   200003 236100                    LDQ     @PORT,,AUTO
         1 000247   200021 756100                    STQ     VD_LOCATION$+3,,AUTO
         1 000250   000413 701000 1                  TSX1    RNAME_BLOCK
         1 000251   000412 702000 1                  TSX2    OFREE_FAILED
         1 000252   000411 710000 1                  TRA     s:4607

      216     4562    2                SRC$EVAL.ENCLOSING.START, SRC$EVAL.ENCLOSING.ENDD)
      217     4563    2                ALTRET (RNAME_BLOCK_FAILED);
      218     4564
      219     4565    2            CASE (%RDR_$RANGE_SOURCE);

      220     4566    2              CALL RNAME_BLOCK (PORT, SRC$EDIT_BLOCK,

PL6.E3A0      #001=VDA$READERS File=VDA$READERS.:VDA5TSI                         FRI 07/04/97 11:08 Page:27   
   4566  1 000253   000023 236000 xsym               LDQ     VD_6E+19
         1 000254   000035 036003                    ADLQ    29,DU
         1 000255   200024 756100                    STQ     @START+1,,AUTO
         1 000256   000023 236000 xsym               LDQ     VD_6E+19
         1 000257   000024 036003                    ADLQ    20,DU
         1 000260   000022 235000 xsym               LDA     VD_6E+18
         1 000261   200022 757100                    STAQ    @PORT+1,,AUTO
         1 000262   200003 236100                    LDQ     @PORT,,AUTO
         1 000263   200021 756100                    STQ     VD_LOCATION$+3,,AUTO
         1 000264   000413 701000 1                  TSX1    RNAME_BLOCK
         1 000265   000412 702000 1                  TSX2    OFREE_FAILED
         1 000266   000411 710000 1                  TRA     s:4607

      221     4567    2                SRC$EVAL.RANGE.START, SRC$EVAL.RANGE.ENDD)
      222     4568    2                ALTRET (RNAME_BLOCK_FAILED);
      223     4569
      224     4570    2            CASE (%RDR_$FP_SOURCE);

      225     4571    2              IF SRC$EVAL.STATE# = %EVST_END THEN

   4571  1 000267   000023 473400 xsym               LDP3    VD_6E+19
         1 000270   300070 221100                    LDX1    56,,PR3
         1 000271   000003 101003                    CMPX1   3,DU
         1 000272   000277 601000 1                  TNZ     s:4574

      226     4572    2                 VD_LOCATION$ = ADDR(SRC$EVAL.RANGE.ENDD);

   4572  1 000273   000023 236000 xsym               LDQ     VD_6E+19
         1 000274   000035 036003                    ADLQ    29,DU
         1 000275   200016 756100                    STQ     VD_LOCATION$,,AUTO
         1 000276   000302 710000 1                  TRA     s:4575

      227     4573    2              ELSE
      228     4574    2                 VD_LOCATION$ = ADDR(SRC$EVAL.RANGE.START);

   4574  1 000277   000023 236000 xsym               LDQ     VD_6E+19
         1 000300   000024 036003                    ADLQ    20,DU
PL6.E3A0      #001=VDA$READERS File=VDA$READERS.:VDA5TSI                         FRI 07/04/97 11:08 Page:28   
         1 000301   200016 756100                    STQ     VD_LOCATION$,,AUTO

      229     4575    2              CALL RNAME_BLOCK (PORT, SRC$EDIT_BLOCK, VD$LOCATION, VD$LOCATION)

   4575  1 000302   200024 756100                    STQ     @START+1,,AUTO
         1 000303   000022 235000 xsym               LDA     VD_6E+18
         1 000304   200022 757100                    STAQ    @PORT+1,,AUTO
         1 000305   200003 236100                    LDQ     @PORT,,AUTO
         1 000306   200021 756100                    STQ     VD_LOCATION$+3,,AUTO
         1 000307   000413 701000 1                  TSX1    RNAME_BLOCK
         1 000310   000412 702000 1                  TSX2    OFREE_FAILED
         1 000311   000411 710000 1                  TRA     s:4607

      230     4576    2                ALTRET (RNAME_BLOCK_FAILED);
      231     4577
      232     4578
      233     4579                    /*
      234     4580                    * The rest are values obtained from the attributes of the
      235     4581                    *     currently open file.
      236     4582                    */
      237     4583    2            CASE (%RDR_$FILETYPE);

      238     4584    2              IF EDIT_BLOCK$ = ADDR(NIL) THEN EXIT; /* Correct value is there */

   4584  1 000312   200013 236100                    LDQ     EDIT_BLOCK$,,AUTO
         1 000313   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000314   000411 600000 1                  TZE     s:4607

      239     4585    2              FILE_PORT$ = CURR$WINDOW.OPERAND.STREAM$ -> VD$STREAM.PORT$;

   4585  1 000315   200014 473500                    LDP3    CURR_WINDOW$,,AUTO
         1 000316   300010 474500                    LDP4    8,,PR3
         1 000317   400001 236100                    LDQ     1,,PR4
         1 000320   200011 756100                    STQ     FILE_PORT$,,AUTO

      240     4586    2              IF FILE$PORT.DCB# = 0 THEN EXIT;

PL6.E3A0      #001=VDA$READERS File=VDA$READERS.:VDA5TSI                         FRI 07/04/97 11:08 Page:29   
   4586  1 000321   200011 475500                    LDP5    FILE_PORT$,,AUTO
         1 000322   500004 721100                    LXL1    4,,PR5
         1 000323   000411 600000 1                  TZE     s:4607

      241     4587    2              PORT.LEVEL.DATA$ (%LVL_LOWER) -> VD$BUFFER.LENGTH# = 2;

   4587  1 000324   000036 476500                    LDP6    30,,PR0
         1 000325   000002 222003                    LDX2    2,DU
         1 000326   600002 742100                    STX2    2,,PR6

      242     4588    2              PORT.LEVEL.DATA$ (%LVL_LOWER) -> VD$BUFFER.BYTES =

   4588  1 000327   000036 474500                    LDP4    30,,PR0
         1 000330   400002 220100                    LDX0    2,,PR4
         1 000331   000000 476400 2                  LDP6    0
         1 000332   600000 477500                    LDP7    0,,PR6
         1 000333   500004 721100                    LXL1    4,,PR5
         1 000334   700000 470511                    LDP0    0,X1,PR7
         1 000335   040140 100500                    MLR     fill='040'O
         1 000336   000025 400002                    ADSC9   21,,PR0                  cn=2,n=2
         1 000337   400002 400010                    ADSC9   2,,PR4                   cn=2,n=*X0
         1 000340   000411 710000 1                  TRA     s:4607

      243     4589    2                DCBADDR (FILE$PORT.DCB#) -> F$DCB.TYPE#;
      244     4590
      245     4591    2            CASE (%RDR_$FILERECORDS);

      246     4592    2              FILE_PORT$ = CURR$WINDOW.OPERAND.STREAM$ -> VD$STREAM.PORT$;

   4592  1 000341   200014 473500                    LDP3    CURR_WINDOW$,,AUTO
         1 000342   300010 474500                    LDP4    8,,PR3
         1 000343   400001 236100                    LDQ     1,,PR4
         1 000344   200011 756100                    STQ     FILE_PORT$,,AUTO

      247     4593    2              CALL VDG$OALLOC (%CLS_NUMBER, PORT.LEVEL.DATA$ (%LVL_LOWER))

   4593  1 000345   200003 236100                    LDQ     @PORT,,AUTO
PL6.E3A0      #001=VDA$READERS File=VDA$READERS.:VDA5TSI                         FRI 07/04/97 11:08 Page:30   
         1 000346   000036 036003                    ADLQ    30,DU
         1 000347   000002 235000 2                  LDA     2
         1 000350   200030 757100                    STAQ    BLOCK_DESC$+2,,AUTO
         1 000351   200030 630500                    EPPR0   BLOCK_DESC$+2,,AUTO
         1 000352   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000353   000000 701000 xent               TSX1    VDG$OALLOC
         1 000354   000412 702000 1                  TSX2    OFREE_FAILED

      248     4594    2                ALTRET (OALLOC_FAILED);
      249     4595    2              PORT.LEVEL.DATA$ (%LVL_LOWER) -> VD$NUMBER.V# =

   4595  1 000355   200003 470500                    LDP0    @PORT,,AUTO
         1 000356   000036 471500                    LDP1    30,,PR0
         1 000357   000000 473400 2                  LDP3    0
         1 000360   300000 474500                    LDP4    0,,PR3
         1 000361   200011 475500                    LDP5    FILE_PORT$,,AUTO
         1 000362   500004 720100                    LXL0    4,,PR5
         1 000363   400000 476510                    LDP6    0,X0,PR4
         1 000364   600042 235100                    LDA     34,,PR6
         1 000365   100003 755100                    STA     3,,PR1
         1 000366   000411 710000 1                  TRA     s:4607

      250     4596    2                DCBADDR (FILE$PORT.DCB#) -> F$DCB.NRECS#;
      251     4597
      252     4598    2            CASE (%RDR_$FILEORG);

      253     4599    2              FILE_PORT$ = CURR$WINDOW.OPERAND.STREAM$ -> VD$STREAM.PORT$;

   4599  1 000367   200014 473500                    LDP3    CURR_WINDOW$,,AUTO
         1 000370   300010 474500                    LDP4    8,,PR3
         1 000371   400001 236100                    LDQ     1,,PR4
         1 000372   200011 756100                    STQ     FILE_PORT$,,AUTO

      254     4600    2              CALL VDG$OALLOC (%CLS_ORG, PORT.LEVEL.DATA$ (%LVL_LOWER))

   4600  1 000373   200003 236100                    LDQ     @PORT,,AUTO
         1 000374   000036 036003                    ADLQ    30,DU
PL6.E3A0      #001=VDA$READERS File=VDA$READERS.:VDA5TSI                         FRI 07/04/97 11:08 Page:31   
         1 000375   000004 235000 2                  LDA     4
         1 000376   200030 757100                    STAQ    BLOCK_DESC$+2,,AUTO
         1 000377   200030 630500                    EPPR0   BLOCK_DESC$+2,,AUTO
         1 000400   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000401   000000 701000 xent               TSX1    VDG$OALLOC
         1 000402   000412 702000 1                  TSX2    OFREE_FAILED

      255     4601    2                ALTRET (OALLOC_FAILED);
      256     4602    2              PORT.LEVEL.DATA$ (%LVL_LOWER) -> VD$NUMBER.V# =

   4602  1 000403   200003 470500                    LDP0    @PORT,,AUTO
         1 000404   000036 471500                    LDP1    30,,PR0
         1 000405   200011 473500                    LDP3    FILE_PORT$,,AUTO
         1 000406   300032 236100                    LDQ     26,,PR3
         1 000407   000022 772000                    QRL     18
         1 000410   100003 756100                    STQ     3,,PR1

      257     4603    2                FILE$PORT.LEVEL.ORG# (%LVL_EXT_REC);
      258     4604
      259     4605    2            END READER_CASES;

      260     4606
      261     4607    1           RETURN;

   4607  1 000411   000000 702200 xent               TSX2  ! X66_ARET

   4600  1 000412                       OFREE_FAILED null
   4600  1 000412                       OALLOC_FAIL* null
   4600  1 000412                       RNAME_BLOCK* null
      262     4608
      263     4609
      264     4610
      265     4611    1   OFREE_FAILED: ;
      266     4612    1   OALLOC_FAILED: ;
      267     4613    1   RNAME_BLOCK_FAILED: ;
      268     4614    1           ALTRETURN;

PL6.E3A0      #001=VDA$READERS File=VDA$READERS.:VDA5TSI                         FRI 07/04/97 11:08 Page:32   
   4614  1 000412   000000 702200 xent               TSX2  ! X66_AALT

      269     4615
      270     4616
      271     4617        %BOX (TITLE=RNAME_BLOCK, PAGE=YES);
              4625    1
              4629    1   /***************************************************************************
              4631    1    *                                                                         *
              4635    1            *                                RNAME_BLOCK                             *
              4637    1            *                                                                        *
              4639    1          ***************************************************************************/

      272     4643
      273     4644        /*I* NAME: RNAME_BLOCK
      274     4645            PARAMETERS:
      275     4646                PORT - Same as for main routine.
      276     4647                ENCLOSING - VD$BLOCK_DESC specifying the enclosing block.
      277     4648                START - Optional VD$LOCATION specifying the starting location
      278     4649                    of the range.  Omit if ENCLOSING contains the range.
      279     4650                ENDD - Optional VD$LOCATION specifying the ending location of
      280     4651                    the range.  Omit if ENCLOSING contains the range.
      281     4652            INPUT:
      282     4653                PORT.LEVEL.DATA$ (%LVL_LOWER) must be NIL.
      283     4654            OUTPUT:
      284     4655                PORT.LEVEL.DATA$ (%LVL_LOWER) will point to a new VD$BUFFER.
      285     4656            DESCRIPTION:
      286     4657                If we weren't passed a START or ENDD, allocate a
      287     4658                    VD$POINTER which points to ENCLOSING, and point the Port
      288     4659                    to it.
      289     4660                Else, allocate a VD$BUFFER which contains a VD$BLOCK_DESC
      290     4661                    (object class CLS_BLOCK_BUFFER).  Copy most of ENCLOSING
      291     4662                    (all but ENCLOSING.RANGE) to the buffer, then build the
      292     4663                    range from START and ENDD.  Point the Port at the buffer.
      293     4664        */
      294     4665
      295     4666    1   RNAME_BLOCK: PROC (PORT, ENCLOSING, START, ENDD) ALTRET;

PL6.E3A0      #001=VDA$READERS File=VDA$READERS.:VDA5TSI                         FRI 07/04/97 11:08 Page:33   
   4666  1 000413   200020 741300       RNAME_BLOCK  STX1  ! VD_LOCATION$+2,,AUTO

      296     4667
      297     4668        %VD$PORT (NAME=PORT, STCLASS=PARAM);
      298     4766        %VD$BLOCK_DESC (NAME=ENCLOSING, STCLASS=PARAM);
      299     4913        %VD$LOCATION (NAME=START, STCLASS=PARAM);
      300     4941        %VD$LOCATION (NAME=ENDD, STCLASS=PARAM);
      301     4969
      302     4970
      303     4971    2   DCL BLOCK_BUFFER$ PTR;
      304     4972    2   DCL BLOCK_DESC$ PTR;
      305     4973
      306     4974
      307     4975        %VD$BUFFER (NAME=BLOCK$BUFFER, STCLASS="BASED(BLOCK_BUFFER$)");
      308     5033        %VD$BLOCK_DESC (NAME=BLOCK$DESC, STCLASS="BASED(BLOCK_DESC$)");
      309     5180        %VD$BUFFER;
      310     5238        %VD$POINTER;
      311     5283        %VD$TEXTC_REMOTE;
      312     5344
      313     5345
      314     5346
      315     5347    3           IF ADDR(START) = ADDR(NIL) THEN DO;

   5347  1 000414   200023 236100                    LDQ     @START,,AUTO
         1 000415   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000416   000434 601000 1                  TNZ     s:5354

      316     5348    3              CALL VDG$OALLOC (%CLS_PTR_BLOCK_DESC,

   5348  1 000417   200021 236100                    LDQ     @PORT,,AUTO
         1 000420   000036 036003                    ADLQ    30,DU
         1 000421   000006 235000 2                  LDA     6
         1 000422   200030 757100                    STAQ    BLOCK_DESC$+2,,AUTO
         1 000423   200030 630500                    EPPR0   BLOCK_DESC$+2,,AUTO
         1 000424   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000425   000000 701000 xent               TSX1    VDG$OALLOC
         1 000426   000527 702000 1                  TSX2    OALLOC_FAILED
PL6.E3A0      #001=VDA$READERS File=VDA$READERS.:VDA5TSI                         FRI 07/04/97 11:08 Page:34   

      317     5349    3                PORT.LEVEL.DATA$ (%LVL_LOWER))
      318     5350    3                ALTRET (OALLOC_FAILED);
      319     5351    3              PORT.LEVEL.DATA$ (%LVL_LOWER) -> VD$POINTER.V$ = ADDR(ENCLOSING);

   5351  1 000427   200021 470500                    LDP0    @PORT,,AUTO
         1 000430   000036 471500                    LDP1    30,,PR0
         1 000431   200022 236100                    LDQ     @ENCLOSING,,AUTO
         1 000432   100003 756100                    STQ     3,,PR1

      320     5352    3              END;

   5352  1 000433   000525 710000 1                  TRA     s:5374

      321     5353    3           ELSE DO;

      322     5354    3              CALL VDG$OALLOC (%CLS_BLOCK_BUFFER, BLOCK_BUFFER$)

   5354  1 000434   200025 630500                    EPPR0   BLOCK_BUFFER$,,AUTO
         1 000435   200031 450500                    STP0    BLOCK_DESC$+3,,AUTO
         1 000436   000007 236000 2                  LDQ     7
         1 000437   200030 756100                    STQ     BLOCK_DESC$+2,,AUTO
         1 000440   200030 630500                    EPPR0   BLOCK_DESC$+2,,AUTO
         1 000441   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000442   000000 701000 xent               TSX1    VDG$OALLOC
         1 000443   000527 702000 1                  TSX2    OALLOC_FAILED

      323     5355    3                ALTRET (OALLOC_FAILED);
      324     5356    3              BLOCK_DESC$ = PINCRW(BLOCK_BUFFER$,

   5356  1 000444   200025 236100                    LDQ     BLOCK_BUFFER$,,AUTO
         1 000445   000003 036003                    ADLQ    3,DU
         1 000446   200026 756100                    STQ     BLOCK_DESC$,,AUTO

      325     5357    3                SIZEW(VD$BUFFER_HEADER));
      326     5358    3              BLOCK$BUFFER.LENGTH# = (BLOCK$BUFFER.OBJECT.SIZE# * %NB_PER_WORD) -

PL6.E3A0      #001=VDA$READERS File=VDA$READERS.:VDA5TSI                         FRI 07/04/97 11:08 Page:35   
   5358  1 000447   200025 470500                    LDP0    BLOCK_BUFFER$,,AUTO
         1 000450   000000 236100                    LDQ     0,,PR0
         1 000451   000022 736000                    QLS     18
         1 000452   000020 732000                    QRS     16
         1 000453   777766 620006                    EAX0    -10,QL
         1 000454   000002 740100                    STX0    2,,PR0

      327     5359    3                LENGTHC(VD$BUFFER_HEADER);
      328     5360    3              BLOCK$DESC = ENCLOSING;

   5360  1 000455   200022 470500                    LDP0    @ENCLOSING,,AUTO
         1 000456   200026 471500                    LDP1    BLOCK_DESC$,,AUTO
         1 000457   000100 100500                    MLR     fill='000'O
         1 000460   000000 000150                    ADSC9   0,,PR0                   cn=0,n=104
         1 000461   100000 000150                    ADSC9   0,,PR1                   cn=0,n=104

      329     5361    4              IF BLOCK$DESC.FILE_KEY.REP# = %REP_REMOTE THEN DO;

   5361  1 000462   100001 720100                    LXL0    1,,PR1
         1 000463   000002 100003                    CMPX0   2,DU
         1 000464   000476 601000 1                  TNZ     s:5366

      330     5362    4                 CALL VDG$OCOPY (ENCLOSING.FILE_KEY.V$ -> VD$TEXTC_REMOTE,

   5362  1 000465   000002 473500                    LDP3    2,,PR0
         1 000466   200026 236100                    LDQ     BLOCK_DESC$,,AUTO
         1 000467   000002 036003                    ADLQ    2,DU
         1 000470   200031 756100                    STQ     BLOCK_DESC$+3,,AUTO
         1 000471   200030 453500                    STP3    BLOCK_DESC$+2,,AUTO
         1 000472   200030 630500                    EPPR0   BLOCK_DESC$+2,,AUTO
         1 000473   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000474   000000 701000 xent               TSX1    VDG$OCOPY
         1 000475   000527 702000 1                  TSX2    OALLOC_FAILED

      331     5363    4                   BLOCK$DESC.FILE_KEY.V$)
      332     5364    4                   ALTRET (OCOPY_FAILED);
      333     5365    4                 END;
PL6.E3A0      #001=VDA$READERS File=VDA$READERS.:VDA5TSI                         FRI 07/04/97 11:08 Page:36   

      334     5366    3              BLOCK$DESC.RANGE = %CLEAR;

   5366  1 000476   200026 470500                    LDP0    BLOCK_DESC$,,AUTO
         1 000477   000100 100400                    MLR     fill='000'O
         1 000500   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         1 000501   000003 000110                    ADSC9   3,,PR0                   cn=0,n=72

      335     5367    3              CALL VDG$OCOPY_LOCATION (START, BLOCK$DESC.RANGE.START)

   5367  1 000502   200026 236100                    LDQ     BLOCK_DESC$,,AUTO
         1 000503   000003 036003                    ADLQ    3,DU
         1 000504   200023 235100                    LDA     @START,,AUTO
         1 000505   200030 757100                    STAQ    BLOCK_DESC$+2,,AUTO
         1 000506   200030 630500                    EPPR0   BLOCK_DESC$+2,,AUTO
         1 000507   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000510   000000 701000 xent               TSX1    VDG$OCOPY_LOCATION
         1 000511   000527 702000 1                  TSX2    OALLOC_FAILED

      336     5368    3                ALTRET (OCOPY_LOCATION_FAILED);
      337     5369    3              CALL VDG$OCOPY_LOCATION (ENDD, BLOCK$DESC.RANGE.ENDD)

   5369  1 000512   200026 236100                    LDQ     BLOCK_DESC$,,AUTO
         1 000513   000014 036003                    ADLQ    12,DU
         1 000514   200024 235100                    LDA     @ENDD,,AUTO
         1 000515   200030 757100                    STAQ    BLOCK_DESC$+2,,AUTO
         1 000516   200030 630500                    EPPR0   BLOCK_DESC$+2,,AUTO
         1 000517   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000520   000000 701000 xent               TSX1    VDG$OCOPY_LOCATION
         1 000521   000527 702000 1                  TSX2    OALLOC_FAILED

      338     5370    3                ALTRET (OCOPY_LOCATION_FAILED);
      339     5371    3              PORT.LEVEL.DATA$ (%LVL_LOWER) = BLOCK_BUFFER$;

   5371  1 000522   200025 236100                    LDQ     BLOCK_BUFFER$,,AUTO
         1 000523   200021 470500                    LDP0    @PORT,,AUTO
         1 000524   000036 756100                    STQ     30,,PR0
PL6.E3A0      #001=VDA$READERS File=VDA$READERS.:VDA5TSI                         FRI 07/04/97 11:08 Page:37   

      340     5372    3              END;

      341     5373
      342     5374    2           RETURN;

   5374  1 000525   200020 221300                    LDX1  ! VD_LOCATION$+2,,AUTO
         1 000526   000001 702211                    TSX2  ! 1,X1

   5369  1 000527                       OALLOC_FAIL* null
   5369  1 000527                       OCOPY_FAILED null
   5369  1 000527                       OCOPY_LOCAT* null
      343     5375
      344     5376
      345     5377    2   OALLOC_FAILED: ;
      346     5378    2   OCOPY_FAILED: ;
      347     5379    2   OCOPY_LOCATION_FAILED: ;
      348     5380    2           ALTRETURN;

   5380  1 000527   200020 221300                    LDX1  ! VD_LOCATION$+2,,AUTO
         1 000530   000000 702211                    TSX2  ! 0,X1
      349     5381
      350     5382    2   END RNAME_BLOCK;
      351     5383
      352     5384    1   END VDA$READERS;

PL6.E3A0      #001=VDA$READERS File=VDA$READERS.:VDA5TSI                         FRI 07/04/97 11:08 Page:38   
--  Include file information  --

   VD_PERR_C.:VDA5TOU  is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VDA$READERS.
PL6.E3A0      #001=VDA$READERS File=VDA$READERS.:VDA5TSI                         FRI 07/04/97 11:08 Page:39   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    22-0-0/w PTR         r     1 @ENCLOSING                24-0-0/w PTR         r     1 @ENDD
     3-0-0/w PTR         r     1 @PORT                     21-0-0/w PTR         r     1 @PORT
    23-0-0/w PTR         r     1 @START                    25-0-0/w PTR         r     1 BLOCK_BUFFER$
    26-0-0/w PTR         r     1 BLOCK_DESC$               14-0-0/w PTR         r     1 CURR_WINDOW$
    13-0-0/w PTR         r     1 EDIT_BLOCK$               *0-0-0/w STRC(936)   r     1 ENCLOSING
    *0-0-0/w STRC(324)   r     1 ENDD                      11-0-0/w PTR         r     1 FILE_PORT$
     6-0-0/w PTR         r     1 L0_NODE$                   7-0-0/w PTR         r     1 L1_NODE$
    *0-0-0/w STRC(1944)  r     1 PORT                      *0-0-0/w STRC(1944)  r     1 PORT
    15-0-0/w PTR         r     1 SEL_EVAL$                  4-0-0/w PTR         r     1 SPEC$
    *0-0-0/w STRC(324)   r     1 START                     16-0-0/w PTR         r     1 VD_LOCATION$
    10-0-0/w PTR         r     1 WINDOWS_PORT$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(22644) r     1 VD_6E                      0-0-0/w PTR         r     1 VD_CURRENT_WINDOW$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w ASTR(90)    r     1 BLOCK$BUFFER               0-0-0/w STRC(936)   r     1 BLOCK$DESC
     0-0-0/w STRC(900)   r     1 CURR$WINDOW                0-0-0/w STRC(936)   r     1 EDIT$BLOCK
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0/w STRC(1944)  r     1 FILE$PORT
     0-0-0/w STRC(252)   r     1 NAME$SPEC                  0-0-0/w STRC(2124)  r     1 SEL$EVAL
     0-0-0/w STRC(936)   r     1 SRC$EDIT_BLOCK             0-0-0/w STRC(2124)  r     1 SRC$EVAL
     0-0-0/w ASTR(90)    r     1 VD$BUFFER                  0-0-0/w ASTR(90)    r     1 VD$BUFFER
PL6.E3A0      #001=VDA$READERS File=VDA$READERS.:VDA5TSI                         FRI 07/04/97 11:08 Page:40   
     0-0-0/w STRC(90)    r     1 VD$BUFFER_HEADER           0-0-0/w STRC(468)   r     1 VD$FILE_NODE
     0-0-0/w STRC(324)   r     1 VD$LOCATION                0-0-0/w STRC(144)   r     1 VD$NUMBER
     0-0-0/w STRC(144)   r     1 VD$POINTER                 0-0-0/w STRC(864)   r     1 VD$STREAM
     0-0-0/w ASTR(81)    r     1 VD$TEXTC_REMOTE


   Procedure VDA$READERS requires 345 words for executable code.
   Procedure VDA$READERS requires 26 words of local(AUTO) storage.

    No errors detected in file VDA$READERS.:VDA5TSI    .
PL6.E3A0      #001=VDA$READERS File=VDA$READERS.:VDA5TSI                         FRI 07/04/97 11:08 Page:41   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=VDA$READERS File=VDA$READERS.:VDA5TSI                         FRI 07/04/97 11:08 Page:42   
          MINI XREF LISTING

BLOCK$BUFFER.LENGTH# IN PROCEDURE RNAME_BLOCK
      5026**DCL      5028--IMP-SIZ  5358<<ASSIGN
BLOCK$BUFFER.OBJECT.SIZE# IN PROCEDURE RNAME_BLOCK
      5024**DCL      5358>>ASSIGN
BLOCK$DESC IN PROCEDURE RNAME_BLOCK
      5041**DCL      5360<<ASSIGN
BLOCK$DESC.FILE_KEY.REP# IN PROCEDURE RNAME_BLOCK
      5079**DCL      5361>>IF
BLOCK$DESC.FILE_KEY.V$ IN PROCEDURE RNAME_BLOCK
      5079**DCL      5362<>CALL
BLOCK$DESC.RANGE IN PROCEDURE RNAME_BLOCK
      5091**DCL      5366<<ASSIGN
BLOCK$DESC.RANGE.ENDD IN PROCEDURE RNAME_BLOCK
      5131**DCL      5369<>CALL
BLOCK$DESC.RANGE.START IN PROCEDURE RNAME_BLOCK
      5103**DCL      5367<>CALL
BLOCK_BUFFER$ IN PROCEDURE RNAME_BLOCK
      4971**DCL      5000--IMP-PTR  5354<>CALL     5356>>ASSIGN   5358>>ASSIGN   5358>>ASSIGN   5371>>ASSIGN
BLOCK_DESC$ IN PROCEDURE RNAME_BLOCK
      4972**DCL      5041--IMP-PTR  5356<<ASSIGN   5360>>ASSIGN   5361>>IF       5362>>CALL     5366>>ASSIGN
      5367>>CALL     5369>>CALL
CURR$WINDOW.OPERAND.EDIT_BLOCK$
      3244**DCL      4495>>ASSIGN
CURR$WINDOW.OPERAND.EVAL$
      3244**DCL      4496>>ASSIGN
CURR$WINDOW.OPERAND.STREAM$
      3244**DCL      4585>>ASSIGN   4592>>ASSIGN   4599>>ASSIGN
CURR_WINDOW$
      2654**DCL      3203--IMP-PTR  4486<<ASSIGN   4488<<ASSIGN   4494>>IF       4495>>ASSIGN   4496>>ASSIGN
      4585>>ASSIGN   4592>>ASSIGN   4599>>ASSIGN
EDIT$BLOCK
      3269**DCL      4522<>CALL     4526<>CALL     4531<>CALL     4540<>CALL
PL6.E3A0      #001=VDA$READERS File=VDA$READERS.:VDA5TSI                         FRI 07/04/97 11:08 Page:43   
EDIT_BLOCK$
      2653**DCL      3269--IMP-PTR  4492<<ASSIGN   4495<<ASSIGN   4499>>IF       4522>>CALL     4526>>CALL
      4531>>CALL     4540>>CALL     4584>>IF
ENCLOSING IN PROCEDURE RNAME_BLOCK
      4774**DCL      4666--PROC     5351--ASSIGN   5360>>ASSIGN
ENCLOSING.FILE_KEY.V$ IN PROCEDURE RNAME_BLOCK
      4812**DCL      5362>>CALL     5362>>CALL
ENDD IN PROCEDURE RNAME_BLOCK
      4949**DCL      4666--PROC     5369<>CALL
F$DCB.ACTPOS
      4265**DCL      4265--REDEF
F$DCB.ARS#
      4239**DCL      4239--REDEF
F$DCB.ATTR
      4258**DCL      4259--REDEF
F$DCB.BORROW
      4273**DCL      4273--REDEF    4273--REDEF    4273--REDEF
F$DCB.DCBNAME.L
      4287**DCL      4287--IMP-SIZ
F$DCB.EOMCHAR#
      4243**DCL      4243--REDEF
F$DCB.FLDID
      4268**DCL      4268--REDEF
F$DCB.FORM$
      4262**DCL      4262--REDEF
F$DCB.FSECT
      4278**DCL      4278--REDEF
F$DCB.FSN#
      4255**DCL      4255--REDEF    4255--REDEF    4256--REDEF
F$DCB.HEADER$
      4261**DCL      4261--REDEF
F$DCB.IXTNSIZE#
      4259**DCL      4259--REDEF
F$DCB.LASTSTA$
      4248**DCL      4248--REDEF
F$DCB.LVL
PL6.E3A0      #001=VDA$READERS File=VDA$READERS.:VDA5TSI                         FRI 07/04/97 11:08 Page:44   
      4274**DCL      4274--REDEF
F$DCB.NAME#.C
      4249**DCL      4249--REDEF
F$DCB.NOEOF
      4271**DCL      4271--REDEF
F$DCB.NRECS#
      4260**DCL      4260--REDEF    4595>>ASSIGN
F$DCB.NRECX
      4279**DCL      4279--REDEF
F$DCB.OHDR
      4271**DCL      4271--REDEF
F$DCB.ORG#
      4254**DCL      4254--REDEF
F$DCB.PRECNO
      4277**DCL      4277--REDEF
F$DCB.RCSZ
      4283**DCL      4283--REDEF
F$DCB.RES#
      4250**DCL      4250--REDEF
F$DCB.SETX
      4262**DCL      4262--REDEF
F$DCB.TAB$
      4262**DCL      4262--REDEF
F$DCB.TDA
      4276**DCL      4277--REDEF
F$DCB.TYPE#
      4250**DCL      4588>>ASSIGN
F$DCB.WSN#
      4250**DCL      4250--REDEF
FILE$PORT.DCB#
      2946**DCL      4586>>IF       4588--ASSIGN   4595--ASSIGN
FILE$PORT.LEVEL.ORG#
      2990**DCL      4602>>ASSIGN
FILE_PORT$
      2651**DCL      2919--IMP-PTR  4585<<ASSIGN   4586>>IF       4588>>ASSIGN   4592<<ASSIGN   4595>>ASSIGN
      4599<<ASSIGN   4602>>ASSIGN
PL6.E3A0      #001=VDA$READERS File=VDA$READERS.:VDA5TSI                         FRI 07/04/97 11:08 Page:45   
L0_NODE$
      2648**DCL      3017--IMP-PTR
L1_NODE$
      2649**DCL      3110--IMP-PTR
NAME$SPEC.READER#
      2704**DCL      4476>>IF       4480>>IF       4490>>DOCASE   4498>>IF       4499>>IF       4519>>DOCASE
OALLOC_FAILED
      4600**LABEL    4593--CALLALT  4600--CALLALT
OALLOC_FAILED IN PROCEDURE RNAME_BLOCK
      5369**LABEL    5348--CALLALT  5354--CALLALT
OCOPY_FAILED IN PROCEDURE RNAME_BLOCK
      5369**LABEL    5362--CALLALT
OCOPY_LOCATION_FAILED IN PROCEDURE RNAME_BLOCK
      5369**LABEL    5367--CALLALT  5369--CALLALT
OFREE_FAILED
      4600**LABEL    4481--CALLALT
PORT
      2506**DCL        50--PROC     4473--ENTRY    4502<>CALL     4510<>CALL     4522<>CALL     4526<>CALL
      4531<>CALL     4540<>CALL     4561<>CALL     4566<>CALL     4575<>CALL
PORT.LEVEL.DATA$
      2593**DCL      4479>>IF       4481>>CALL     4481>>CALL     4483<<ASSIGN   4587>>ASSIGN   4588>>ASSIGN
      4588>>ASSIGN   4593<>CALL     4595>>ASSIGN   4600<>CALL     4602>>ASSIGN
PORT.LEVEL.SPEC.V$
      2591**DCL      4475>>ASSIGN
PORT IN PROCEDURE RNAME_BLOCK
      4676**DCL      4666--PROC
PORT.LEVEL.DATA$ IN PROCEDURE RNAME_BLOCK
      4763**DCL      5348<>CALL     5351>>ASSIGN   5371<<ASSIGN
RNAME_BLOCK
      4666**PROC     4502--CALL     4510--CALL     4522--CALL     4526--CALL     4531--CALL     4540--CALL
      4561--CALL     4566--CALL     4575--CALL
RNAME_BLOCK_FAILED
      4600**LABEL    4502--CALLALT  4510--CALLALT  4522--CALLALT  4526--CALLALT  4531--CALLALT  4540--CALLALT
      4561--CALLALT  4566--CALLALT  4575--CALLALT
SEL$EVAL.ENCLOSING.ENDD
      3493**DCL      4526<>CALL
PL6.E3A0      #001=VDA$READERS File=VDA$READERS.:VDA5TSI                         FRI 07/04/97 11:08 Page:46   
SEL$EVAL.ENCLOSING.START
      3465**DCL      4526<>CALL
SEL$EVAL.RANGE.ENDD
      3562**DCL      4531<>CALL     4537--ASSIGN
SEL$EVAL.RANGE.START
      3534**DCL      4531<>CALL     4539--ASSIGN
SEL$EVAL.STATE#
      3650**DCL      4536>>IF
SEL_EVAL$
      2655**DCL      3416--IMP-PTR  4493<<ASSIGN   4496<<ASSIGN   4499>>IF       4526>>CALL     4526>>CALL
      4531>>CALL     4531>>CALL     4536>>IF       4537>>ASSIGN   4539>>ASSIGN
SPEC$
      2646**DCL      2675--IMP-PTR  4475<<ASSIGN   4476>>IF       4480>>IF       4490>>DOCASE   4498>>IF
      4499>>IF       4519>>DOCASE
SRC$EDIT_BLOCK
      3662**DCL      4561<>CALL     4566<>CALL     4575<>CALL
SRC$EVAL.ENCLOSING.ENDD
      3886**DCL      4561<>CALL
SRC$EVAL.ENCLOSING.START
      3858**DCL      4561<>CALL
SRC$EVAL.RANGE.ENDD
      3955**DCL      4566<>CALL     4572--ASSIGN
SRC$EVAL.RANGE.START
      3927**DCL      4566<>CALL     4574--ASSIGN
SRC$EVAL.STATE#
      4043**DCL      4571>>IF
START IN PROCEDURE RNAME_BLOCK
      4921**DCL      4666--PROC     5347--IF       5367<>CALL
VD$BUFFER
      4114**DCL      4481<>CALL
VD$BUFFER.BYTES
      4142**DCL      4588<<ASSIGN
VD$BUFFER.LENGTH#
      4140**DCL      4142--IMP-SIZ  4481>>CALL     4587<<ASSIGN   4588>>ASSIGN
VD$BUFFER.LENGTH# IN PROCEDURE RNAME_BLOCK
      5231**DCL      5233--IMP-SIZ
PL6.E3A0      #001=VDA$READERS File=VDA$READERS.:VDA5TSI                         FRI 07/04/97 11:08 Page:47   
VD$BUFFER_HEADER
      4155**DCL      5356--ASSIGN   5358--ASSIGN
VD$FILE_NODE.DESC.SPEC.V$
      4421**DCL      4488>>ASSIGN
VD$LOCATION
      4054**DCL      4540<>CALL     4540<>CALL     4575<>CALL     4575<>CALL
VD$NUMBER.V#
      4331**DCL      4595<<ASSIGN   4602<<ASSIGN
VD$POINTER.V$ IN PROCEDURE RNAME_BLOCK
      5280**DCL      5351<<ASSIGN
VD$STREAM.PORT$
      2741**DCL      4585>>ASSIGN   4592>>ASSIGN   4599>>ASSIGN
VD$TEXTC_REMOTE IN PROCEDURE RNAME_BLOCK
      5308**DCL      5362<>CALL
VD$TEXTC_REMOTE.LENGTH# IN PROCEDURE RNAME_BLOCK
      5337**DCL      5339--IMP-SIZ  5362>>CALL
VDG$OALLOC
      2598**DCL-ENT  4593--CALL     4600--CALL     5348--CALL     5354--CALL
VDG$OCOPY
      2600**DCL-ENT  5362--CALL
VDG$OCOPY_LOCATION
      2602**DCL-ENT  5367--CALL     5369--CALL
VDG$OFREE
      2599**DCL-ENT  4481--CALL
VD_6E.SOURCE.OPERAND.EDIT_BLOCK$
      2635**DCL      3662--IMP-PTR  4508>>IF       4561>>CALL     4566>>CALL     4575>>CALL
VD_6E.SOURCE.OPERAND.EVAL$
      2635**DCL      3809--IMP-PTR  4508>>IF       4561>>CALL     4561>>CALL     4566>>CALL     4566>>CALL
      4571>>IF       4572>>ASSIGN   4574>>ASSIGN
VD_CURRENT_WINDOW$
      2642**DCL      4487>>IF       4488>>ASSIGN
VD_LOCATION$
      2656**DCL      4054--IMP-PTR  4537<<ASSIGN   4539<<ASSIGN   4540>>CALL     4540>>CALL     4572<<ASSIGN
      4574<<ASSIGN   4575>>CALL     4575>>CALL
WINDOWS_PORT$
      2650**DCL      2821--IMP-PTR
