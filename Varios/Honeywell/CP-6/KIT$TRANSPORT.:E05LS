VERSION E05

PL6.E3A0      #001=KIT_DATA_D File=KIT$TRANSPORT.:E05TSI                         WED 07/30/97 00:42 Page:1    
        1        1        /*M* KIT$TRANSPORT - Host Transport Routines. */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=3,IND=5,ENU=0,ECU=0  */
        8        8
        9        9        /*P* NAME: KIT$TRANSPORT
       10       10
       11       11        The file KIT$TRANSPORT contains the following modules/routines:
       12       12
       13       13        KIT_DATA_D
       14       14        KIT$GETTCTX and KIT$RELTCTX
       15       15        KIT$SEND
       16       16        KIT$SEND_TPDU
       17       17        KIT$RECV
       18       18        KIT$REPDISC
       19       19        */
       20       20
       21       21        /*M* KIT_DATA_D - Data used by the transport layer.   */
       22       22        /*X* MEC,MOC,EXM=20,CLM=30,CRM=80                                */
       23       23
       24       24
       25       25        /*F* NAME: KIT_DATA_D
       26       26
       27       27        */
       28       28        KIT_DATA_D: PROC;
       29       29
       30       30        %INCLUDE K_TRANSPORT_E;
       31      355        %INCLUDE K_TRANSPORT_M;
       32     2139        %INCLUDE K_ADDRESS_M;
       33     2642
       34     2643                                      /* Based data used to determine byte sizes      */
       35     2644        %K$TPDU_CR_CC (NAME=K$TPDU_C, ALGN=CALIGNED);
       36     2713        %K$TPDU_DR (ALGN=CALIGNED);
       37     2756        %K$TPDU_DC (ALGN=CALIGNED);
PL6.E3A0      #001=KIT_DATA_D File=KIT$TRANSPORT.:E05TSI                         WED 07/30/97 00:42 Page:2    
       38     2795        %K$TPDU_DT (ALGN=CALIGNED);
       39     2845        %K$TPDU_DT_EXT (ALGN=CALIGNED);
       40     2909        %K$TPDU_AK (ALGN=CALIGNED);
       41     2957        %K$TPDU_AK_EXT (ALGN=CALIGNED);
       42     3001        %K$TPDU_EA (ALGN=CALIGNED);
       43     3027        %K$TPDU_EA_EXT (ALGN=CALIGNED);
       44     3053        %K$TPDU_ER (ALGN=CALIGNED);
       45     3092        %K$TPDU_CP6 (ALGN=CALIGNED);
       46     3127
       47     3128        %K$NSAP;
       48     3180        %K$TSAP;
       49     3215
       50     3216    1   DCL K_TSAP_SZ UBIN CONSTANT SYMDEF INIT(LENGTHC(K$TSAP));
       51     3217        /*K* K_TSAP_SZ - UBIN.
       52     3218        Contains the maximum size of a TSAP on CP-6.  This size
       53     3219        is determined by the K$TSAP macro.
       54     3220        */
       55     3221
       56     3222    1   DCL K_NSAP_SZ UBIN CONSTANT SYMDEF INIT(LENGTHC(K$NSAP));
       57     3223        /*K* K_NSAP_SZ - UBIN.
       58     3224        Contains the maximum size of a NSAP on CP-6.  This size
       59     3225        is determined by the K$NSAP macro.
       60     3226        */
       61     3227
       62     3228        %K$TPARM_CHKSUM (NAME=K_CKSUM_INIT, STCLASS = CONSTANT SYMDEF);
       63     3268
       64     3269    1   DCL KIT_RECV_LOCK BIT(72) STATIC SYMDEF INIT('1'B);
       65     3270    1   DCL KIT_SEND_LOCK BIT(72) STATIC SYMDEF INIT('1'B);
       66     3271
       67     3272    1   DCL K_TPDU_SIZE(0:15) SBIN CONSTANT SYMDEF INIT(
       68     3273    1           LENGTHC(K$TPDU_CP6),
       69     3274    1           LENGTHC(K$TPDU_DT),
       70     3275    1           LENGTHC(K$TPDU_EA),
       71     3276    1           255/* 3 is not used*/,
       72     3277    1           255/* 4 is not used*/,
       73     3278    1           255/* RJ only used with class 1*/,
       74     3279    1           LENGTHC(K$TPDU_AK),
PL6.E3A0      #001=KIT_DATA_D File=KIT$TRANSPORT.:E05TSI                         WED 07/30/97 00:42 Page:3    
       75     3280    1           LENGTHC(K$TPDU_ER),
       76     3281    1           LENGTHC(K$TPDU_DR),
       77     3282    1           255/* 9 is not used*/,
       78     3283    1           255/* 10 is not used*/,
       79     3284    1           255/* 11 is not used*/,
       80     3285    1           LENGTHC(K$TPDU_DC),
       81     3286    1           LENGTHC(K$TPDU_C),
       82     3287    1           LENGTHC(K$TPDU_C),
       83     3288    1           LENGTHC(K$TPDU_DT));
       84     3289
       85     3290    1   DCL K_TPDU_SIZE_EXT(0:15) SBIN CONSTANT SYMDEF INIT(
       86     3291    1           LENGTHC(K$TPDU_CP6),
       87     3292    1           LENGTHC(K$TPDU_DT_EXT),
       88     3293    1           LENGTHC(K$TPDU_EA_EXT),
       89     3294    1           255/* 3 is not used*/,
       90     3295    1           255/* 4 is not used*/,
       91     3296    1           255/* RJ only used with class 1*/,
       92     3297    1           LENGTHC(K$TPDU_AK_EXT),
       93     3298    1           LENGTHC(K$TPDU_ER),
       94     3299    1           LENGTHC(K$TPDU_DR),
       95     3300    1           255/* 9 is not used*/,
       96     3301    1           255/* 10 is not used*/,
       97     3302    1           255/* 11 is not used*/,
       98     3303    1           LENGTHC(K$TPDU_DC),
       99     3304    1           LENGTHC(K$TPDU_C),
      100     3305    1           LENGTHC(K$TPDU_C),
      101     3306    1           LENGTHC(K$TPDU_DT_EXT));
      102     3307
      103     3308    1   DCL K_TPDUSZ_VALUES(0:13) SBIN CONSTANT SYMDEF INIT(
      104     3309    1                   0,0,0,0,0,0,0,
      105     3310    1                   128,256,512,1024,2048,4096,8192);
      106     3311
      107     3312        /*K* K_TPDUSZ_VALUES - ARRAY(0:13).
      108     3313        Contains the maximum TPDU size given a value from K$TPARM_TPDU.SIZE
      109     3314        to be used as an index.  See K_TPDUSIZE_equ in file K_TRANSPORT_E.
      110     3315        */
      111     3316
PL6.E3A0      #001=KIT_DATA_D File=KIT$TRANSPORT.:E05TSI                         WED 07/30/97 00:42 Page:4    
      112     3317        %EJECT;
PL6.E3A0      #001=KIT_DATA_D File=KIT$TRANSPORT.:E05TSI                         WED 07/30/97 00:42 Page:5    
      113     3318        /*******************************************************************/
      114     3319        /*                                                                 */
      115     3320        /*                                                                 */
      116     3321        /*              Defaults for transport options                     */
      117     3322        /*                                                                 */
      118     3323        /*                                                                 */
      119     3324        /*******************************************************************/
      120     3325
      121     3326    1   DCL KIT_TRANSFER_SZ UBIN STATIC SYMDEF INIT(9000);
      122     3327        /*K* KIT_TRANSFER_SZ - UBIN.
      123     3328        Contains the byte size of the largest tpdu that host transport
      124     3329        will send over the coupler.
      125     3330        Default is 9000 (8192 + large osi transport and network headers).
      126     3331        */
      127     3332
      128     3333    1   DCL KIT_DO_CHKSUM UBIN STATIC SYMDEF INIT(0);
      129     3334        /*K* KIT_DO_CHKSUM - UBIN.
      130     3335        If set to zero will cause all outbound transport connections
      131     3336        to be created with the non-use of the checksum facility.
      132     3337        */
      133     3338        %EJECT;
PL6.E3A0      #001=KIT_DATA_D File=KIT$TRANSPORT.:E05TSI                         WED 07/30/97 00:42 Page:6    
      134     3339        /*******************************************************************/
      135     3340        /*                                                                 */
      136     3341        /*                                                                 */
      137     3342        /*              Counts that should be in STATS                     */
      138     3343        /*                                                                 */
      139     3344        /*                                                                 */
      140     3345        /*******************************************************************/
      141     3346
      142     3347    1   DCL KIT_DISCARDED_TPDUS UBIN STATIC SYMDEF INIT(0);
      143     3348        /*K* KIT_DISCARDED_TPDUS - UBIN.
      144     3349        Contains a count of all the tpdus that have been discarded.
      145     3350        */
      146     3351
      147     3352    1   DCL KIT_NOT_DATAXFER UBIN STATIC SYMDEF INIT(0);
      148     3353        /*K* KIT_NOT_DATAXFER - UBIN.
      149     3354        Contains a count of the number of times session called KIT$SEND
      150     3355        when K$RWPARM.TCTX# referenced a closed transport connection.
      151     3356        */
      152     3357
      153     3358    1   DCL KIT_BAD_TSTATE UBIN STATIC SYMDEF INIT(0);
      154     3359        /*K* KIT_BAD_TSTATE - UBIN.
      155     3360        Contains a count of the number of times that session called KIT$SEND
      156     3361        with a function request that was invalid for the transport state.
      157     3362        */
      158     3363
      159     3364    1   DCL KIT_KIN_ALTRET UBIN STATIC SYMDEF INIT(0);
      160     3365        /*K* KIT_KIN_ALTRET - UBIN.
      161     3366        Contains a count of the number of times the KIN$SEND routine
      162     3367        has ALTRETURNed.  The error code is temporarily remembered
      163     3368        in KN$TCTX.ERR.
      164     3369        */
      165     3370
      166     3371        %EJECT;
PL6.E3A0      #001=KIT_DATA_D File=KIT$TRANSPORT.:E05TSI                         WED 07/30/97 00:42 Page:7    
      167     3372        /*******************************************************************/
      168     3373        /*                                                                 */
      169     3374        /*                                                                 */
      170     3375        /*     Options that may be set to aid debugging transport          */
      171     3376        /*                                                                 */
      172     3377        /*                                                                 */
      173     3378        /*******************************************************************/
      174     3379
      175     3380
      176     3381    1   DCL KIT_OSI_SNAP UBIN STATIC SYMDEF INIT(1);
      177     3382        /*K* KIT_OSI_SNAP - UBIN.
      178     3383        If set to non-zero will cause transport to take a
      179     3384        snapshot dump on altrets from OSI Session.
      180     3385        */
      181     3386
      182     3387    1   DCL KIT_ERROR_SNAP UBIN STATIC SYMDEF INIT(1);
      183     3388        /*K* KIT_ERROR_SNAP - UBIN.
      184     3389        If set to non-zero will cause transport to take a
      185     3390        snapshot dump when discarding a bad tpdu.
      186     3391        */
      187     3392
      188     3393    1   DCL KIT_DUMP_FEP UBIN STATIC SYMDEF INIT(0);
      189     3394        /*K* KIT_DUMP_FEP - UBIN.
      190     3395        If set to non-zero will cause transport to also crash the fep
      191     3396        if taking a snapshot dump when discarding a bad tpdu.
      192     3397        */
      193     3398
      194     3399    1   END KIT_DATA_D;
      195     3400        %EOD;

PL6.E3A0      #001=KIT_DATA_D File=KIT$TRANSPORT.:E05TSI                         WED 07/30/97 00:42 Page:8    
--  Include file information  --

   K_ADDRESS_M.:E05TOU  is referenced.
   K_TRANSPORT_M.:E05TOU  is referenced.
   K_TRANSPORT_E.:E05TOU  is referenced.
      No diagnostics issued in procedure KIT_DATA_D.

   No code generated for procedure KIT_DATA_D .
   Procedure KIT_DATA_D requires 4 words of local(AUTO) storage.

PL6.E3A0      #001=KIT_DATA_D File=KIT$TRANSPORT.:E05TSI                         WED 07/30/97 00:42 Page:9    

 Object Unit name= KIT_DATA_D                                 File name= KIT$TRANSPORT.:E05TOU
 UTS= JUL 30 '97 00:42:04.88 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS     49     61  KIT_DATA_D
    1   Data  even  none    13     15  KIT_DATA_D
    2   Proc  even  none     0      0  KIT_DATA_D

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes     ~proc       0  KIT_DATA_D
PL6.E3A0      #001=KIT_DATA_D File=KIT$TRANSPORT.:E05TSI                         WED 07/30/97 00:42 Page:10   

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    0      0  K_TSAP_SZ                          0      1  K_NSAP_SZ
    0      2  K_CKSUM_INIT                       1      0  KIT_RECV_LOCK
    1      2  KIT_SEND_LOCK                      0      3  K_TPDU_SIZE
    0     23  K_TPDU_SIZE_EXT                    0     43  K_TPDUSZ_VALUES
    1      4  KIT_TRANSFER_SZ                    1      5  KIT_DO_CHKSUM
    1      6  KIT_DISCARDED_TPDUS                1      7  KIT_NOT_DATAXFER
    1     10  KIT_BAD_TSTATE                     1     11  KIT_KIN_ALTRET
    1     12  KIT_OSI_SNAP                       1     13  KIT_ERROR_SNAP
    1     14  KIT_DUMP_FEP
PL6.E3A0      #001=KIT_DATA_D File=KIT$TRANSPORT.:E05TSI                         WED 07/30/97 00:42 Page:11   


(unnamed)
 Sect OctLoc
   0     000   000000 000042   000000 000026   303002 000000   000000 000004    ..."............
   0     004   000000 000005   000000 000005   000000 000377   000000 000377    ................
   0     010   000000 000377   000000 000005   000000 000005   000000 000007    ................
   0     014   000000 000377   000000 000377   000000 000377   000000 000006    ................
   0     020   000000 000007   000000 000007   000000 000005   000000 000004    ................
   0     024   000000 000010   000000 000010   000000 000377   000000 000377    ................
   0     030   000000 000377   000000 000012   000000 000005   000000 000007    ................
   0     034   000000 000377   000000 000377   000000 000377   000000 000006    ................
   0     040   000000 000007   000000 000007   000000 000010   000000 000000    ................
   0     044   000000 000000   000000 000000   000000 000000   000000 000000    ................
   0     050   000000 000000   000000 000000   000000 000200   000000 000400    ................
   0     054   000000 001000   000000 002000   000000 004000   000000 010000    ................
   0     060   000000 020000                                                    ....

(unnamed)
 Sect OctLoc
   1     000   400000 000000   000000 000000   400000 000000   000000 000000    ................
   1     004   000000 021450   000000 000000   000000 000000   000000 000000    ................
   1     010   000000 000000   000000 000000   000000 000001   000000 000001    ................
   1     014   000000 000000                                                    ....
        1        1        /*M* KIT$TRANSPORT - Host Transport Routines. */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=3,IND=5,ENU=0,ECU=0  */
        8        8
        9        9        /*P* NAME: KIT$TRANSPORT
       10       10
       11       11        The file KIT$TRANSPORT contains the following modules/routines:
       12       12
       13       13        KIT_DATA_D
       14       14        KIT$GETTCTX and KIT$RELTCTX
PL6.E3A0      #001=KIT_DATA_D File=KIT$TRANSPORT.:E05TSI                         WED 07/30/97 00:42 Page:12   
       15       15        KIT$SEND
       16       16        KIT$SEND_TPDU
       17       17        KIT$RECV
       18       18        KIT$REPDISC
       19       19        */
       20       20
       21       21        /*M* KIT_DATA_D - Data used by the transport layer.   */
       22       22        /*X* MEC,MOC,EXM=20,CLM=30,CRM=80                                */
       23       23
       24       24
       25       25        /*F* NAME: KIT_DATA_D
       26       26
       27       27        */
       28       28        KIT_DATA_D: PROC;
       29       29
       30       30        %INCLUDE K_TRANSPORT_E;
       31      355        %INCLUDE K_TRANSPORT_M;
       32     2139        %INCLUDE K_ADDRESS_M;
       33     2642
       34     2643                                      /* Based data used to determine byte sizes      */
       35     2644        %K$TPDU_CR_CC (NAME=K$TPDU_C, ALGN=CALIGNED);
       36     2713        %K$TPDU_DR (ALGN=CALIGNED);
       37     2756        %K$TPDU_DC (ALGN=CALIGNED);
       38     2795        %K$TPDU_DT (ALGN=CALIGNED);
       39     2845        %K$TPDU_DT_EXT (ALGN=CALIGNED);
       40     2909        %K$TPDU_AK (ALGN=CALIGNED);
       41     2957        %K$TPDU_AK_EXT (ALGN=CALIGNED);
       42     3001        %K$TPDU_EA (ALGN=CALIGNED);
       43     3027        %K$TPDU_EA_EXT (ALGN=CALIGNED);
       44     3053        %K$TPDU_ER (ALGN=CALIGNED);
       45     3092        %K$TPDU_CP6 (ALGN=CALIGNED);
       46     3127
       47     3128        %K$NSAP;
       48     3180        %K$TSAP;
       49     3215
       50     3216    1   DCL K_TSAP_SZ UBIN CONSTANT SYMDEF INIT(LENGTHC(K$TSAP));
       51     3217        /*K* K_TSAP_SZ - UBIN.
PL6.E3A0      #001=KIT_DATA_D File=KIT$TRANSPORT.:E05TSI                         WED 07/30/97 00:42 Page:13   
       52     3218        Contains the maximum size of a TSAP on CP-6.  This size
       53     3219        is determined by the K$TSAP macro.
       54     3220        */
       55     3221
       56     3222    1   DCL K_NSAP_SZ UBIN CONSTANT SYMDEF INIT(LENGTHC(K$NSAP));
       57     3223        /*K* K_NSAP_SZ - UBIN.
       58     3224        Contains the maximum size of a NSAP on CP-6.  This size
       59     3225        is determined by the K$NSAP macro.
       60     3226        */
       61     3227
       62     3228        %K$TPARM_CHKSUM (NAME=K_CKSUM_INIT, STCLASS = CONSTANT SYMDEF);
       63     3268
       64     3269    1   DCL KIT_RECV_LOCK BIT(72) STATIC SYMDEF INIT('1'B);
       65     3270    1   DCL KIT_SEND_LOCK BIT(72) STATIC SYMDEF INIT('1'B);
       66     3271
       67     3272    1   DCL K_TPDU_SIZE(0:15) SBIN CONSTANT SYMDEF INIT(
       68     3273    1           LENGTHC(K$TPDU_CP6),
       69     3274    1           LENGTHC(K$TPDU_DT),
       70     3275    1           LENGTHC(K$TPDU_EA),
       71     3276    1           255/* 3 is not used*/,
       72     3277    1           255/* 4 is not used*/,
       73     3278    1           255/* RJ only used with class 1*/,
       74     3279    1           LENGTHC(K$TPDU_AK),
       75     3280    1           LENGTHC(K$TPDU_ER),
       76     3281    1           LENGTHC(K$TPDU_DR),
       77     3282    1           255/* 9 is not used*/,
       78     3283    1           255/* 10 is not used*/,
       79     3284    1           255/* 11 is not used*/,
       80     3285    1           LENGTHC(K$TPDU_DC),
       81     3286    1           LENGTHC(K$TPDU_C),
       82     3287    1           LENGTHC(K$TPDU_C),
       83     3288    1           LENGTHC(K$TPDU_DT));
       84     3289
       85     3290    1   DCL K_TPDU_SIZE_EXT(0:15) SBIN CONSTANT SYMDEF INIT(
       86     3291    1           LENGTHC(K$TPDU_CP6),
       87     3292    1           LENGTHC(K$TPDU_DT_EXT),
       88     3293    1           LENGTHC(K$TPDU_EA_EXT),
PL6.E3A0      #001=KIT_DATA_D File=KIT$TRANSPORT.:E05TSI                         WED 07/30/97 00:42 Page:14   
       89     3294    1           255/* 3 is not used*/,
       90     3295    1           255/* 4 is not used*/,
       91     3296    1           255/* RJ only used with class 1*/,
       92     3297    1           LENGTHC(K$TPDU_AK_EXT),
       93     3298    1           LENGTHC(K$TPDU_ER),
       94     3299    1           LENGTHC(K$TPDU_DR),
       95     3300    1           255/* 9 is not used*/,
       96     3301    1           255/* 10 is not used*/,
       97     3302    1           255/* 11 is not used*/,
       98     3303    1           LENGTHC(K$TPDU_DC),
       99     3304    1           LENGTHC(K$TPDU_C),
      100     3305    1           LENGTHC(K$TPDU_C),
      101     3306    1           LENGTHC(K$TPDU_DT_EXT));
      102     3307
      103     3308    1   DCL K_TPDUSZ_VALUES(0:13) SBIN CONSTANT SYMDEF INIT(
      104     3309    1                   0,0,0,0,0,0,0,
      105     3310    1                   128,256,512,1024,2048,4096,8192);
      106     3311
      107     3312        /*K* K_TPDUSZ_VALUES - ARRAY(0:13).
      108     3313        Contains the maximum TPDU size given a value from K$TPARM_TPDU.SIZE
      109     3314        to be used as an index.  See K_TPDUSIZE_equ in file K_TRANSPORT_E.
      110     3315        */
      111     3316
      112     3317        %EJECT;
PL6.E3A0      #001=KIT_DATA_D File=KIT$TRANSPORT.:E05TSI                         WED 07/30/97 00:42 Page:15   
      113     3318        /*******************************************************************/
      114     3319        /*                                                                 */
      115     3320        /*                                                                 */
      116     3321        /*              Defaults for transport options                     */
      117     3322        /*                                                                 */
      118     3323        /*                                                                 */
      119     3324        /*******************************************************************/
      120     3325
      121     3326    1   DCL KIT_TRANSFER_SZ UBIN STATIC SYMDEF INIT(9000);
      122     3327        /*K* KIT_TRANSFER_SZ - UBIN.
      123     3328        Contains the byte size of the largest tpdu that host transport
      124     3329        will send over the coupler.
      125     3330        Default is 9000 (8192 + large osi transport and network headers).
      126     3331        */
      127     3332
      128     3333    1   DCL KIT_DO_CHKSUM UBIN STATIC SYMDEF INIT(0);
      129     3334        /*K* KIT_DO_CHKSUM - UBIN.
      130     3335        If set to zero will cause all outbound transport connections
      131     3336        to be created with the non-use of the checksum facility.
      132     3337        */
      133     3338        %EJECT;
PL6.E3A0      #001=KIT_DATA_D File=KIT$TRANSPORT.:E05TSI                         WED 07/30/97 00:42 Page:16   
      134     3339        /*******************************************************************/
      135     3340        /*                                                                 */
      136     3341        /*                                                                 */
      137     3342        /*              Counts that should be in STATS                     */
      138     3343        /*                                                                 */
      139     3344        /*                                                                 */
      140     3345        /*******************************************************************/
      141     3346
      142     3347    1   DCL KIT_DISCARDED_TPDUS UBIN STATIC SYMDEF INIT(0);
      143     3348        /*K* KIT_DISCARDED_TPDUS - UBIN.
      144     3349        Contains a count of all the tpdus that have been discarded.
      145     3350        */
      146     3351
      147     3352    1   DCL KIT_NOT_DATAXFER UBIN STATIC SYMDEF INIT(0);
      148     3353        /*K* KIT_NOT_DATAXFER - UBIN.
      149     3354        Contains a count of the number of times session called KIT$SEND
      150     3355        when K$RWPARM.TCTX# referenced a closed transport connection.
      151     3356        */
      152     3357
      153     3358    1   DCL KIT_BAD_TSTATE UBIN STATIC SYMDEF INIT(0);
      154     3359        /*K* KIT_BAD_TSTATE - UBIN.
      155     3360        Contains a count of the number of times that session called KIT$SEND
      156     3361        with a function request that was invalid for the transport state.
      157     3362        */
      158     3363
      159     3364    1   DCL KIT_KIN_ALTRET UBIN STATIC SYMDEF INIT(0);
      160     3365        /*K* KIT_KIN_ALTRET - UBIN.
      161     3366        Contains a count of the number of times the KIN$SEND routine
      162     3367        has ALTRETURNed.  The error code is temporarily remembered
      163     3368        in KN$TCTX.ERR.
      164     3369        */
      165     3370
      166     3371        %EJECT;
PL6.E3A0      #001=KIT_DATA_D File=KIT$TRANSPORT.:E05TSI                         WED 07/30/97 00:42 Page:17   
      167     3372        /*******************************************************************/
      168     3373        /*                                                                 */
      169     3374        /*                                                                 */
      170     3375        /*     Options that may be set to aid debugging transport          */
      171     3376        /*                                                                 */
      172     3377        /*                                                                 */
      173     3378        /*******************************************************************/
      174     3379
      175     3380
      176     3381    1   DCL KIT_OSI_SNAP UBIN STATIC SYMDEF INIT(1);
      177     3382        /*K* KIT_OSI_SNAP - UBIN.
      178     3383        If set to non-zero will cause transport to take a
      179     3384        snapshot dump on altrets from OSI Session.
      180     3385        */
      181     3386
      182     3387    1   DCL KIT_ERROR_SNAP UBIN STATIC SYMDEF INIT(1);
      183     3388        /*K* KIT_ERROR_SNAP - UBIN.
      184     3389        If set to non-zero will cause transport to take a
      185     3390        snapshot dump when discarding a bad tpdu.
      186     3391        */
      187     3392
      188     3393    1   DCL KIT_DUMP_FEP UBIN STATIC SYMDEF INIT(0);
      189     3394        /*K* KIT_DUMP_FEP - UBIN.
      190     3395        If set to non-zero will cause transport to also crash the fep
      191     3396        if taking a snapshot dump when discarding a bad tpdu.
      192     3397        */
      193     3398
      194     3399    1   END KIT_DATA_D;
      195     3400        %EOD;

PL6.E3A0      #001=KIT_DATA_D File=KIT$TRANSPORT.:E05TSI                         WED 07/30/97 00:42 Page:18   
--  Include file information  --

   K_ADDRESS_M.:E05TOU  is referenced.
   K_TRANSPORT_M.:E05TOU  is referenced.
   K_TRANSPORT_E.:E05TOU  is referenced.
      No diagnostics issued in procedure KIT_DATA_D.
PL6.E3A0      #001=KIT_DATA_D File=KIT$TRANSPORT.:E05TSI                         WED 07/30/97 00:42 Page:19   

 **** Variables and constants ****

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(198)   r     1 K$NSAP                     0-0-0/c STRC(45)    r     1 K$TPDU_AK
     0-0-0/c STRC(90)    r     1 K$TPDU_AK_EXT              0-0-0/c STRC(63)    r     1 K$TPDU_C
     0-0-0/c STRC        r     1 K$TPDU_CP6                 0-0-0/c STRC(54)    r     1 K$TPDU_DC
     0-0-0/c STRC(63)    r     1 K$TPDU_DR                  0-0-0/c STRC(45)    r     1 K$TPDU_DT
     0-0-0/c STRC(72)    r     1 K$TPDU_DT_EXT              0-0-0/c STRC(45)    r     1 K$TPDU_EA
     0-0-0/c STRC(72)    r     1 K$TPDU_EA_EXT              0-0-0/c STRC(45)    r     1 K$TPDU_ER
     0-0-0/w STRC(306)   r     1 K$TSAP


   No code generated for procedure KIT_DATA_D .
   Procedure KIT_DATA_D requires 4 words of local(AUTO) storage.
PL6.E3A0      #001=KIT_DATA_D File=KIT$TRANSPORT.:E05TSI                         WED 07/30/97 00:42 Page:20   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KIT_DATA_D File=KIT$TRANSPORT.:E05TSI                         WED 07/30/97 00:42 Page:21   
          MINI XREF LISTING

K$NSAP
      3144**DCL      3222--DCLINIT
K$NSAP.ADDRESS_N
      3176**DCL      3177--REDEF
K$TPDU_AK
      2925**DCL      3279--DCLINIT
K$TPDU_AK_EXT
      2973**DCL      3297--DCLINIT
K$TPDU_C
      2660**DCL      3286--DCLINIT  3287--DCLINIT  3304--DCLINIT  3305--DCLINIT
K$TPDU_CP6
      3108**DCL      3273--DCLINIT  3291--DCLINIT
K$TPDU_DC
      2772**DCL      3285--DCLINIT  3303--DCLINIT
K$TPDU_DR
      2729**DCL      3281--DCLINIT  3299--DCLINIT
K$TPDU_DT
      2811**DCL      3274--DCLINIT  3288--DCLINIT
K$TPDU_DT_EXT
      2861**DCL      3292--DCLINIT  3306--DCLINIT
K$TPDU_DT_EXT.TPDU_NR
      2888**DCL      2896--REDEF    2904--REDEF
K$TPDU_EA
      3017**DCL      3275--DCLINIT
K$TPDU_EA_EXT
      3043**DCL      3293--DCLINIT
K$TPDU_ER
      3069**DCL      3280--DCLINIT  3298--DCLINIT
K$TSAP
      3196**DCL      3216--DCLINIT

PL6.E3A0      #002=KIT$GETTCTX File=KIT$TRANSPORT.:E05TSI                        WED 07/30/97 00:42 Page:22   
      196        1        /*T***********************************************************/
      197        2        /*T*                                                         */
      198        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      199        4        /*T*                                                         */
      200        5        /*T***********************************************************/
      201        6
      202        7        /*M* KIT$GETTCTX - Get and release host transport context blocks */
      203        8        /*X* PLM=3,IND=5,ENU=0,ECU=0   */
      204        9
      205       10        KIT$GETTCTX: PROC(TCTX$) ALTRET;
      206       11
      207       12                                                /* Include files                      */
      208       13        %INCLUDE K_ADDRESS_M;
      209      516        %INCLUDE K_INTERFACE_M;
      210      925        %INCLUDE KI_MACROS_C;
      211     1533
      212     1534                                                /* Automatic data                     */
      213     1535    1   DCL TCTX$ PTR;
      214     1536
      215     1537                                                /* Parameter definitions              */
      216     1538    1   DCL TCTX# UBIN;
      217     1539
      218     1540                                                /* Based data                         */
      219     1541    1   DCL KI$TCTX$(0:0) PTR BASED(KI_TCTX$$);
      220     1542        %KI$TCTX(NAME=KI$TCTX, STCLASS="BASED(TCTX$)");
      221     2100
      222     2101                                                /* Static definitions                 */
      223     2102    1   DCL KI_TCTX$$ PTR SYMREF;
      224     2103    1   DCL KI_TCTX_USE# UBIN SYMREF;
      225     2104    1   DCL KI_TCTX_PEAK# UBIN SYMREF;
      226     2105    1   DCL KI_TCTX_MAX# UBIN SYMREF;
      227     2106
      228     2107                                                /* External Procedures                */
      229     2108    1   DCL SC_BADTCTX ENTRY CONV(2,0);
      230     2109
      231     2110        %EJECT;
PL6.E3A0      #002=KIT$GETTCTX File=KIT$TRANSPORT.:E05TSI                        WED 07/30/97 00:42 Page:23   
      232     2111        /*N* Find one that has never been used first.
      233     2112             This first search can be deleted after debugging is complete.
      234     2113        */
      235     2114    1      TCTX# = 1;
      236     2115    2      DO WHILE ( TCTX# <= KI_TCTX_MAX# );
      237     2116    2           TCTX$ = KI$TCTX$(TCTX#);
      238     2117    2           IF KI$TCTX.STATE = %KI_TSTATE_NULL
      239     2118    2           THEN GOTO GOT_TCTX;
      240     2119    2           TCTX# = TCTX# + 1;
      241     2120    2           END;
      242     2121
      243     2122
      244     2123        /* Assign a new context block, or re-use one that is now closed.
      245     2124        */
      246     2125    1      TCTX# = 1;
      247     2126    2      DO WHILE ( TCTX# <= KI_TCTX_MAX# );
      248     2127    2           TCTX$ = KI$TCTX$(TCTX#);
      249     2128    2           IF KI$TCTX.STATE=%KI_TSTATE_NULL OR KI$TCTX.STATE=%KI_TSTATE_CLOSED
      250     2129    2           THEN GOTO GOT_TCTX;
      251     2130    2           TCTX# = TCTX# + 1;
      252     2131    2           END;
      253     2132
      254     2133    1      ALTRETURN;
      255     2134
      256     2135    1   GOT_TCTX: ;
      257     2136    1      KI_TCTX_USE# = KI_TCTX_USE# +1;
      258     2137    1      IF KI_TCTX_USE# > KI_TCTX_PEAK#
      259     2138    1      THEN KI_TCTX_PEAK# = KI_TCTX_USE#;
      260     2139
      261     2140    1      KI$TCTX = '0'B;
      262     2141    1      KI$TCTX.SRC_REF = TCTX#;
      263     2142    1      KI$TCTX.STATE = %KI_TSTATE_CLOSED;
      264     2143
      265     2144    1      RETURN;
      266     2145
      267     2146
      268     2147    1   KIT$RELTCTX: ENTRY(TCTX$) ALTRET;
PL6.E3A0      #002=KIT$GETTCTX File=KIT$TRANSPORT.:E05TSI                        WED 07/30/97 00:42 Page:24   
      269     2148    1      IF TCTX$ = ADDR(NIL)
      270     2149    1      THEN GOTO SNAP_IT;
      271     2150
      272     2151    1      IF KI$TCTX.STATE ~= %KI_TSTATE_CLOSED
      273     2152    2      THEN DO;
      274     2153    2   SNAP_IT:
      275     2154    2           CALL SC_BADTCTX;                /* snap                               */
      276     2155    2           END;
      277     2156
      278     2157    1      KI_TCTX_USE# = KI_TCTX_USE# -1;
      279     2158
      280     2159    1      RETURN;
      281     2160    1   END KIT$GETTCTX;
      282     2161
      283     2162        /*S* SCREECH_CODE: KIT-S$BADTCTX
      284     2163             TYPE: SNAP
      285     2164             MESSAGE: Bad transport context index
      286     2165        */
      287     2166        %EOD;

PL6.E3A0      #002=KIT$GETTCTX File=KIT$TRANSPORT.:E05TSI                        WED 07/30/97 00:42 Page:25   
--  Include file information  --

   KI_MACROS_C.:E05TOU  is referenced.
   K_INTERFACE_M.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
      No diagnostics issued in procedure KIT$GETTCTX.

   Procedure KIT$GETTCTX requires 80 words for executable code.
   Procedure KIT$GETTCTX requires 6 words of local(AUTO) storage.

PL6.E3A0      #002=KIT$GETTCTX File=KIT$TRANSPORT.:E05TSI                        WED 07/30/97 00:42 Page:26   

 Object Unit name= KIT$GETTCTX                                File name= KIT$TRANSPORT.:E05TOU
 UTS= JUL 30 '97 00:42:22.60 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    80    120  KIT$GETTCTX

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        1  KIT$GETTCTX
     0     77          yes     yes      Std        1  KIT$RELTCTX

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_AALT
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     SC_BADTCTX                            KI_TCTX$$                             KI_TCTX_USE#
     KI_TCTX_PEAK#                         KI_TCTX_MAX#                          B_VECTNIL
PL6.E3A0      #002=KIT$GETTCTX File=KIT$TRANSPORT.:E05TSI                        WED 07/30/97 00:42 Page:27   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ASLENTSID
PL6.E3A0      #002=KIT$GETTCTX File=KIT$TRANSPORT.:E05TSI                        WED 07/30/97 00:42 Page:28   


      196        1        /*T***********************************************************/
      197        2        /*T*                                                         */
      198        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      199        4        /*T*                                                         */
      200        5        /*T***********************************************************/
      201        6
      202        7        /*M* KIT$GETTCTX - Get and release host transport context blocks */
      203        8        /*X* PLM=3,IND=5,ENU=0,ECU=0   */
      204        9
      205       10        KIT$GETTCTX: PROC(TCTX$) ALTRET;

     10  0 000000   000000 700200 xent  KIT$GETTCTX  TSX0  ! X66_AUTO_1
         0 000001   000006 000001                    ZERO    6,1

      206       11
      207       12                                                /* Include files                      */
      208       13        %INCLUDE K_ADDRESS_M;
      209      516        %INCLUDE K_INTERFACE_M;
      210      925        %INCLUDE KI_MACROS_C;
      211     1533
      212     1534                                                /* Automatic data                     */
      213     1535    1   DCL TCTX$ PTR;
      214     1536
      215     1537                                                /* Parameter definitions              */
      216     1538    1   DCL TCTX# UBIN;
      217     1539
      218     1540                                                /* Based data                         */
      219     1541    1   DCL KI$TCTX$(0:0) PTR BASED(KI_TCTX$$);
      220     1542        %KI$TCTX(NAME=KI$TCTX, STCLASS="BASED(TCTX$)");
      221     2100
      222     2101                                                /* Static definitions                 */
      223     2102    1   DCL KI_TCTX$$ PTR SYMREF;
      224     2103    1   DCL KI_TCTX_USE# UBIN SYMREF;
      225     2104    1   DCL KI_TCTX_PEAK# UBIN SYMREF;
      226     2105    1   DCL KI_TCTX_MAX# UBIN SYMREF;
      227     2106
PL6.E3A0      #002=KIT$GETTCTX File=KIT$TRANSPORT.:E05TSI                        WED 07/30/97 00:42 Page:29   
      228     2107                                                /* External Procedures                */
      229     2108    1   DCL SC_BADTCTX ENTRY CONV(2,0);
      230     2109
      231     2110        %EJECT;
PL6.E3A0      #002=KIT$GETTCTX File=KIT$TRANSPORT.:E05TSI                        WED 07/30/97 00:42 Page:30   
      232     2111        /*N* Find one that has never been used first.
      233     2112             This first search can be deleted after debugging is complete.
      234     2113        */
      235     2114    1      TCTX# = 1;

   2114  0 000002   000001 235007                    LDA     1,DL
         0 000003   200004 755100                    STA     TCTX#,,AUTO

      236     2115    2      DO WHILE ( TCTX# <= KI_TCTX_MAX# );

   2115  0 000004   000000 236000 xsym               LDQ     KI_TCTX_MAX#
         0 000005   200004 116100                    CMPQ    TCTX#,,AUTO
         0 000006   000026 602000 0                  TNC     s:2125

      237     2116    2           TCTX$ = KI$TCTX$(TCTX#);

   2116  0 000007   000000 470400 xsym               LDP0    KI_TCTX$$
         0 000010   200004 720100                    LXL0    TCTX#,,AUTO
         0 000011   000000 236110                    LDQ     0,X0,PR0
         0 000012   200003 471500                    LDP1    @TCTX$,,AUTO
         0 000013   100000 756100                    STQ     0,,PR1

      238     2117    2           IF KI$TCTX.STATE = %KI_TSTATE_NULL

   2117  0 000014   100000 470500                    LDP0    0,,PR1
         0 000015   000000 236100                    LDQ     0,,PR0
         0 000016   777000 316003                    CANQ    -512,DU
         0 000017   000056 600000 0                  TZE     GOT_TCTX

      239     2118    2           THEN GOTO GOT_TCTX;
      240     2119    2           TCTX# = TCTX# + 1;

   2119  0 000020   200004 235100                    LDA     TCTX#,,AUTO
         0 000021   000001 035007                    ADLA    1,DL
         0 000022   200004 755100                    STA     TCTX#,,AUTO

      241     2120    2           END;
PL6.E3A0      #002=KIT$GETTCTX File=KIT$TRANSPORT.:E05TSI                        WED 07/30/97 00:42 Page:31   

   2120  0 000023   000000 236000 xsym               LDQ     KI_TCTX_MAX#
         0 000024   200004 116100                    CMPQ    TCTX#,,AUTO
         0 000025   000007 603000 0                  TRC     s:2116

      242     2121
      243     2122
      244     2123        /* Assign a new context block, or re-use one that is now closed.
      245     2124        */
      246     2125    1      TCTX# = 1;

   2125  0 000026   000001 235007                    LDA     1,DL
         0 000027   200004 755100                    STA     TCTX#,,AUTO

      247     2126    2      DO WHILE ( TCTX# <= KI_TCTX_MAX# );

   2126  0 000030   200004 116100                    CMPQ    TCTX#,,AUTO
         0 000031   000055 602000 0                  TNC     s:2133

      248     2127    2           TCTX$ = KI$TCTX$(TCTX#);

   2127  0 000032   000000 470400 xsym               LDP0    KI_TCTX$$
         0 000033   200004 720100                    LXL0    TCTX#,,AUTO
         0 000034   000000 236110                    LDQ     0,X0,PR0
         0 000035   200003 471500                    LDP1    @TCTX$,,AUTO
         0 000036   100000 756100                    STQ     0,,PR1

      249     2128    2           IF KI$TCTX.STATE=%KI_TSTATE_NULL OR KI$TCTX.STATE=%KI_TSTATE_CLOSED

   2128  0 000037   100000 470500                    LDP0    0,,PR1
         0 000040   000000 236100                    LDQ     0,,PR0
         0 000041   777000 316003                    CANQ    -512,DU
         0 000042   000056 600000 0                  TZE     GOT_TCTX
         0 000043   000000 236100                    LDQ     0,,PR0
         0 000044   777000 376003                    ANQ     -512,DU
         0 000045   002000 116003                    CMPQ    1024,DU
         0 000046   000056 600000 0                  TZE     GOT_TCTX
PL6.E3A0      #002=KIT$GETTCTX File=KIT$TRANSPORT.:E05TSI                        WED 07/30/97 00:42 Page:32   

      250     2129    2           THEN GOTO GOT_TCTX;
      251     2130    2           TCTX# = TCTX# + 1;

   2130  0 000047   200004 235100                    LDA     TCTX#,,AUTO
         0 000050   000001 035007                    ADLA    1,DL
         0 000051   200004 755100                    STA     TCTX#,,AUTO

      252     2131    2           END;

   2131  0 000052   000000 236000 xsym               LDQ     KI_TCTX_MAX#
         0 000053   200004 116100                    CMPQ    TCTX#,,AUTO
         0 000054   000032 603000 0                  TRC     s:2127

      253     2132
      254     2133    1      ALTRETURN;

   2133  0 000055   000000 702200 xent               TSX2  ! X66_AALT

   2127  0 000056                       GOT_TCTX     null
      255     2134
      256     2135    1   GOT_TCTX: ;
      257     2136    1      KI_TCTX_USE# = KI_TCTX_USE# +1;

   2136  0 000056   000000 235000 xsym               LDA     KI_TCTX_USE#
         0 000057   000001 035007                    ADLA    1,DL
         0 000060   000000 755000 xsym               STA     KI_TCTX_USE#

      258     2137    1      IF KI_TCTX_USE# > KI_TCTX_PEAK#

   2137  0 000061   000000 236000 xsym               LDQ     KI_TCTX_PEAK#
         0 000062   000000 116000 xsym               CMPQ    KI_TCTX_USE#
         0 000063   000065 603000 0                  TRC     s:2140

      259     2138    1      THEN KI_TCTX_PEAK# = KI_TCTX_USE#;

   2138  0 000064   000000 755000 xsym               STA     KI_TCTX_PEAK#
PL6.E3A0      #002=KIT$GETTCTX File=KIT$TRANSPORT.:E05TSI                        WED 07/30/97 00:42 Page:33   

      260     2139
      261     2140    1      KI$TCTX = '0'B;

   2140  0 000065   100000 470500                    LDP0    0,,PR1
         0 000066   000100 100400                    MLR     fill='000'O
         0 000067   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         0 000070   000000 000264                    ADSC9   0,,PR0                   cn=0,n=180

      262     2141    1      KI$TCTX.SRC_REF = TCTX#;

   2141  0 000071   100000 470500                    LDP0    0,,PR1
         0 000072   000001 440100                    SXL0    1,,PR0

      263     2142    1      KI$TCTX.STATE = %KI_TSTATE_CLOSED;

   2142  0 000073   100000 470500                    LDP0    0,,PR1
         0 000074   002000 236003                    LDQ     1024,DU
         0 000075   000000 552140                    STBQ    0,'40'O,PR0

      264     2143
      265     2144    1      RETURN;

   2144  0 000076   000000 702200 xent               TSX2  ! X66_ARET

      266     2145
      267     2146
      268     2147    1   KIT$RELTCTX: ENTRY(TCTX$) ALTRET;

   2147  0 000077   000000 700200 xent  KIT$RELTCTX  TSX0  ! X66_AUTO_1
         0 000100   000006 000001                    ZERO    6,1

      269     2148    1      IF TCTX$ = ADDR(NIL)

   2148  0 000101   200003 470500                    LDP0    @TCTX$,,AUTO
         0 000102   000000 236100                    LDQ     0,,PR0
         0 000103   000001 116000 xsym               CMPQ    B_VECTNIL+1
PL6.E3A0      #002=KIT$GETTCTX File=KIT$TRANSPORT.:E05TSI                        WED 07/30/97 00:42 Page:34   
         0 000104   000112 600000 0                  TZE     SNAP_IT

      270     2149    1      THEN GOTO SNAP_IT;
      271     2150
      272     2151    1      IF KI$TCTX.STATE ~= %KI_TSTATE_CLOSED

   2151  0 000105   000000 471500                    LDP1    0,,PR0
         0 000106   100000 236100                    LDQ     0,,PR1
         0 000107   777000 376003                    ANQ     -512,DU
         0 000110   002000 116003                    CMPQ    1024,DU
         0 000111   000114 600000 0                  TZE     s:2157

      273     2152    2      THEN DO;

      274     2153    2   SNAP_IT:
      275     2154    2           CALL SC_BADTCTX;                /* snap                               */

   2154  0 000112   000000 713400 xsym  SNAP_IT      CLIMB   SC_BADTCTX
         0 000113   000000 600000 xsid               climb   nvectors=         0

      276     2155    2           END;

      277     2156
      278     2157    1      KI_TCTX_USE# = KI_TCTX_USE# -1;

   2157  0 000114   000000 235000 xsym               LDA     KI_TCTX_USE#
         0 000115   000001 135007                    SBLA    1,DL
         0 000116   000000 755000 xsym               STA     KI_TCTX_USE#

      279     2158
      280     2159    1      RETURN;

   2159  0 000117   000000 702200 xent               TSX2  ! X66_ARET
      281     2160    1   END KIT$GETTCTX;
      282     2161
      283     2162        /*S* SCREECH_CODE: KIT-S$BADTCTX
      284     2163             TYPE: SNAP
PL6.E3A0      #002=KIT$GETTCTX File=KIT$TRANSPORT.:E05TSI                        WED 07/30/97 00:42 Page:35   
      285     2164             MESSAGE: Bad transport context index
      286     2165        */
      287     2166        %EOD;

PL6.E3A0      #002=KIT$GETTCTX File=KIT$TRANSPORT.:E05TSI                        WED 07/30/97 00:42 Page:36   
--  Include file information  --

   KI_MACROS_C.:E05TOU  is referenced.
   K_INTERFACE_M.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
      No diagnostics issued in procedure KIT$GETTCTX.
PL6.E3A0      #002=KIT$GETTCTX File=KIT$TRANSPORT.:E05TSI                        WED 07/30/97 00:42 Page:37   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @TCTX$                     4-0-0/w UBIN        r     1 TCTX#
    *0-0-0/w PTR         r     1 TCTX$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 KI_TCTX$$                  0-0-0/w UBIN        r     1 KI_TCTX_MAX#
     0-0-0/w UBIN        r     1 KI_TCTX_PEAK#              0-0-0/w UBIN        r     1 KI_TCTX_USE#

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(1620)  r     1 KI$TCTX
     0-0-0/w PTR         r     1 KI$TCTX$(0:0)


   Procedure KIT$GETTCTX requires 80 words for executable code.
   Procedure KIT$GETTCTX requires 6 words of local(AUTO) storage.
PL6.E3A0      #002=KIT$GETTCTX File=KIT$TRANSPORT.:E05TSI                        WED 07/30/97 00:42 Page:38   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=KIT$GETTCTX File=KIT$TRANSPORT.:E05TSI                        WED 07/30/97 00:42 Page:39   
          MINI XREF LISTING

GOT_TCTX
      2127**LABEL    2118--GOTO     2129--GOTO
KI$TCTX
      1543**DCL      2140<<ASSIGN
KI$TCTX.SRC_REF
      1578**DCL      2141<<ASSIGN
KI$TCTX.SSN.DST_NSAP.ADDRESS_N
      1999**DCL      2000--REDEF
KI$TCTX.SSN.SRC_NSAP.ADDRESS_N
      1939**DCL      1940--REDEF
KI$TCTX.SSN.TPDUSIZE
      1702**DCL      1703--REDEF
KI$TCTX.STATE
      1544**DCL      2117>>IF       2128>>IF       2128>>IF       2142<<ASSIGN   2151>>IF
KI$TCTX$
      1541**DCL      2116>>ASSIGN   2127>>ASSIGN
KI_TCTX$$
      2102**DCL      1541--IMP-PTR  2116>>ASSIGN   2127>>ASSIGN
KI_TCTX_MAX#
      2105**DCL      2115>>DOWHILE  2126>>DOWHILE
KI_TCTX_PEAK#
      2104**DCL      2137>>IF       2138<<ASSIGN
KI_TCTX_USE#
      2103**DCL      2136<<ASSIGN   2136>>ASSIGN   2137>>IF       2138>>ASSIGN   2157<<ASSIGN   2157>>ASSIGN
SC_BADTCTX
      2108**DCL-ENT  2154--CALL
SNAP_IT
      2154**LABEL    2149--GOTO
TCTX#
      1538**DCL      2114<<ASSIGN   2115>>DOWHILE  2116>>ASSIGN   2119<<ASSIGN   2119>>ASSIGN   2125<<ASSIGN
      2126>>DOWHILE  2127>>ASSIGN   2130<<ASSIGN   2130>>ASSIGN   2141>>ASSIGN
TCTX$
PL6.E3A0      #002=KIT$GETTCTX File=KIT$TRANSPORT.:E05TSI                        WED 07/30/97 00:42 Page:40   
      1535**DCL        10--PROC     1543--IMP-PTR  2116<<ASSIGN   2117>>IF       2127<<ASSIGN   2128>>IF
      2128>>IF       2140>>ASSIGN   2141>>ASSIGN   2142>>ASSIGN   2147--ENTRY    2148>>IF       2151>>IF

PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:41   
      288        1        /*M* KIT$SEND - Send outbound TPDUs on the host.   */
      289        2        /*T***********************************************************/
      290        3        /*T*                                                         */
      291        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      292        5        /*T*                                                         */
      293        6        /*T***********************************************************/
      294        7
      295        8        /*X* PLM=3,IND=5,ENU=0,ECU=0   */
      296        9
      297       10        KIT$SEND: PROC (K$RWPARM) ALTRET;
      298       11
      299       12                                                /* Include files                      */
      300       13        %INCLUDE K$RWPARM;
      301      399        %INCLUDE K_SUBS_C;
      302      432        %INCLUDE K_TRANSPORT_M;
      303     2216        %INCLUDE K_TRANSPORT_E;
      304     2541        %INCLUDE K_ADDRESS_M;
      305     3044        %INCLUDE K_INTERFACE_M;
      306     3453        %INCLUDE KI_MACROS_C;
      307     4061        %INCLUDE HF_LOCK_C;
      308     4075        %INCLUDE UM_CP6;
      309     4927        %INCLUDE KI_ERRORS_C;
      310     5012        %INCLUDE UD_SEV_C;
      311     5026
      312     5027                                                /* Parameter definitions              */
      313     5028        %K$RWPARM (NAME=K$RWPARM);
      314     5344
      315     5345                                                /* Automatic data                     */
      316     5346    1   DCL TCTX$ PTR;
      317     5347    1   DCL TCTX# UBIN AUTO;
      318     5348    1   DCL FPT$ PTR;
      319     5349    1   DCL TPDU$ PTR;
      320     5350    1   DCL NEXT$ PTR;
      321     5351    1   DCL THDR_SZ UBIN;
      322     5352    1   DCL SPDU_SZ UBIN;
      323     5353    1   DCL FUNCTION UBIN;
      324     5354    1   DCL TEMP UBIN;
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:42   
      325     5355    1   DCL TPDU_NR UBIN;
      326     5356    1   DCL 1 NR REDEF TPDU_NR,
      327     5357    1         2 * BIT(5) UNAL,
      328     5358    1         2 BYTE0 UBIN(7) UNAL,
      329     5359    1         2 BYTE1 UBIN(8) UNAL,
      330     5360    1         2 BYTE2 UBIN(8) UNAL,
      331     5361    1         2 BYTE3 UBIN(8) UNAL;
      332     5362
      333     5363        %K$TPDU_DT_EXT (STCLASS=AUTO, NAME=K$TPDU_DT);
      334     5427
      335     5428                                                /* Based data                         */
      336     5429    1   DCL KI$TCTX$(0:0) PTR BASED(KI_TCTX$$);
      337     5430    1   DCL B$NEXT UBIN(36) BASED;
      338     5431        %KI$TCTX(NAME=KI$TCTX, STCLASS="BASED(TCTX$)");
      339     5989        %K$TPDU_GENERIC (NAME=TPDU,ALGN=CALIGNED);
      340     6049        %K$TPDU_DT (NAME=TPDU_DT,ALGN=CALIGNED);
      341     6099        %K$TPDU_DT_EXT (NAME=TPDU_DT_EXT,ALGN=CALIGNED);
      342     6163        %K$TPARM_CHKSUM (ALGN=CALIGNED);
      343     6203
      344     6204        %K$FPT_CONNECT_OSI(NAME=FPT_CONNECT_OSI, STCLASS="BASED(FPT$)");
      345     6541
      346     6542        %K$TPDU_CP6 (NAME=B$TPDU_CP6_CRDT, LAST=",");
      347     6577           %K$TPARM_SSN_CRDT(LVL=2,NAME=P);
      348     6616
      349     6617        %K$TPDU_CP6 (NAME=B$TPDU_CP6_OPTN, ALGN=CALIGNED, LAST=",");
      350     6652           %K$TPARM_CP6_OPTIONS(LVL=2, NAME=P);
      351     6697
      352     6698                                                /* Static definitions                 */
      353     6699    1   DCL KI_TCTX$$ PTR SYMREF;
      354     6700    1   DCL KI_TCTX_USE# UBIN SYMREF;
      355     6701    1   DCL KI_TCTX_MAX# UBIN SYMREF;
      356     6702    1   DCL KIT_DO_CHKSUM UBIN SYMREF;
      357     6703    1   DCL K_TPDUSZ_VALUES(0:13) SBIN SYMREF;
      358     6704    1   DCL KIT_SEND_LOCK BIT(72) SYMREF;
      359     6705
      360     6706    1   DCL KIT_KIN_ALTRET UBIN SYMREF;
      361     6707    1   DCL KIT_TRANSFER_SZ UBIN SYMREF;
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:43   
      362     6708    1   DCL KIT_NOT_DATAXFER UBIN SYMREF;
      363     6709    1   DCL KIT_BAD_TSTATE UBIN SYMREF;
      364     6710
      365     6711    1   DCL KIT_OSI_SNAP UBIN SYMREF;
      366     6712    1   DCL KIT_ERROR_SNAP UBIN SYMREF;
      367     6713
      368     6714        %VLP_ERRCODE (FPTN=E$DATA_SZ,FCG=KI,MID=T,ERR#=%E$DATA_SZ,SEV=SEV_ERR#,MON='1'B);
      369     6759        %VLP_ERRCODE (FPTN=E$NOEXPD,FCG=KI,MID=T,ERR#=%E$NOEXPD,SEV=SEV_ERR#,MON='1'B);
      370     6804        %VLP_ERRCODE (FPTN=E$CLASSOPT,FCG=KI,MID=T,ERR#=%E$CLASSOPT,SEV=SEV_ERR#,MON='1'B);
      371     6849        %VLP_ERRCODE (FPTN=E$NOTCTX,FCG=KI,MID=T,ERR#=%E$NOTCTX,SEV=SEV_ERR#,MON='1'B);
      372     6894        %VLP_ERRCODE (FPTN=E$TR_STATE,FCG=KI,MID=T,ERR#=%E$TR_STATE,SEV=SEV_ERR#,MON='1'B);
      373     6939                                                /* Entry point references             */
      374     6940    1   DCL KIN$SEND ENTRY(1) ALTRET;
      375     6941    1   DCL KIS$OSI_RECV ENTRY(1) ALTRET;
      376     6942    1   DCL KIT$GETTCTX ENTRY(1) ALTRET;
      377     6943    1   DCL KIT$RELTCTX ENTRY(1) ALTRET;
      378     6944    1   DCL KIT$SEND_CR ENTRY(1) ALTRET;
      379     6945    1   DCL KIT$SEND_CC ENTRY(1) ALTRET;
      380     6946    1   DCL KIT$SEND_DR ENTRY(1) ALTRET;
      381     6947    1   DCL SC_BADFNC ENTRY CONV(2,0);
      382     6948    1   DCL SC_PRTCL_SNAP ENTRY CONV(2,0);
      383     6949    1   DCL SC_BADTCTX ENTRY CONV(2,0);
      384     6950        %EJECT;
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:44   
      385     6951        /*F* NAME: KIT$SEND
      386     6952
      387     6953        KIT$SEND is called with the K$RWPARM parameter:
      388     6954
      389     6955        .fif
      390     6956        }     FUNCTION - Indicates the function to be performed.
      391     6957        }
      392     6958        }                For CP-6 Session connections: K_WRITE
      393     6959        }
      394     6960        }                For OSI Session connections:  K_TCONNECT_REQ
      395     6961        }                                              K_TCONNECT_RSP
      396     6962        }                                              K_TDATA_REQ
      397     6963        }                                              K_TEXPD_DATA_REQ
      398     6964        }                                              K_TDISCONNECT_REQ
      399     6965        }                                              K_TCREDIT
      400     6966        }
      401     6967        }     TCTX#    - Contains the index into the TCTX Pointer Array for
      402     6968        }                the session connection making the request.
      403     6969        }                Contains 0 if request is K_TCONNECT_REQ
      404     6970        }
      405     6971        }     FPT$     - Contains the address of FPT_CONNECT_OSI
      406     6972        }                Only used on OSI connections
      407     6973        }                when FUNCTION is K_TCONNECT_REQ or K_TCONNECT_RESP
      408     6974        }
      409     6975        }     ERR      - Contains a code to indicate the REASON.
      410     6976        }                Only used when FUNCTION is K_TDISCONNECT_REQ
      411     6977        }
      412     6978        }     FEX      - Contains the node number of the destination end-point
      413     6979        }                Only used on CP6 connections.
      414     6980        }
      415     6981        .fin
      416     6982
      417     6983        KIT$SEND will build the transport header and forward the message by
      418     6984        calling KIN$SEND after further initialization of K$RWPARM as follows:
      419     6985
      420     6986        .fif
      421     6987        }     FUNCTION - Indicates the function to be performed.
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:45   
      422     6988        }                For CP-6 Session connections: K_WRITE
      423     6989        }                For OSI Session connections:  K_NDATA
      424     6990        }
      425     6991        }     SRC_ADDR$- Contains the address of Source Network Address
      426     6992        }                Only used on OSI connections.
      427     6993        }
      428     6994        }     DST_ADDR$- Contains the address of Destination Network Address
      429     6995        }                Only used on OSI connections.
      430     6996        }
      431     6997        .fin
      432     6998        */
      433     6999    1      TCTX# = K$RWPARM.TCTX#;
      434     7000    1      TCTX$ = ADDR(NIL);
      435     7001    1      FPT$ = K$RWPARM.FPT$;
      436     7002    1      FUNCTION = K$RWPARM.FUNCTION;
      437     7003    1      TPDU$ = ADDR(K$TPDU_DT);
      438     7004
      439     7005    1      K$RWPARM.ERR = 0;
      440     7006    1      K$RWPARM.MSG_ERRCODE = '0'B;
      441     7007
      442     7008           %LOCK (G=KIT_SEND_LOCK);
      443     7011
      444     7012    1      IF (TCTX# = 0) AND (FUNCTION ~= %K_TCONNECT_REQ)
      445     7013    1      THEN GOTO REPORT_BAD_TSTATE;         /*connection not yet completed        */
      446     7014
      447     7015    1      IF TCTX# > KI_TCTX_MAX#
      448     7016    1      THEN GOTO SET_BAD_TCTX;
      449     7017
      450     7018    1      TCTX$ = KI$TCTX$(TCTX#);
      451     7019
      452     7020    1      IF TCTX$ = ADDR(NIL) AND (FUNCTION ~= %K_TCONNECT_REQ)
      453     7021    1      THEN GOTO SET_BAD_TCTX;
      454     7022
      455     7023    1      IF FUNCTION = %K_WRITE
      456     7024    1      THEN GOTO SEND_DATA;                 /*fast path                           */
      457     7025
      458     7026        %EJECT;
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:46   
      459     7027    2      DO CASE(FUNCTION);
      460     7028
      461     7029    2       CASE(%K_WRITE, %K_TDATA_REQ, %K_TEXPD_DATA_REQ);
      462     7030
      463     7031    2   SEND_DATA: ;
      464     7032        /* First check for state legal for data transfer.
      465     7033        */
      466     7034    2         IF KI$TCTX.STATE~=%KI_TSTATE_OPEN AND KI$TCTX.STATE~=%KI_TSTATE_AKWAIT
      467     7035    3         THEN DO;
      468     7036
      469     7037    3              IF KI$TCTX.STATE = %KI_TSTATE_CLOSED
      470     7038    3                OR KI$TCTX.STATE = %KI_TSTATE_CLOSING
      471     7039    3                OR KI$TCTX.STATE = %KI_TSTATE_NULL
      472     7040    4              THEN DO;
      473     7041    4                   KIT_NOT_DATAXFER = KIT_NOT_DATAXFER+1;
      474     7042    4                   GOTO UNLOCK_N_RETURN;
      475     7043    4                   END;
      476     7044
      477     7045    3              IF KI$TCTX.SSN.TR_FLAGS.OSI = '0'B
      478     7046    4              THEN DO;
      479     7047    4                   IF K$RWPARM.FEX ~= KI$TCTX.NODE
      480     7048    5                   THEN DO;
      481     7049    5   SET_BAD_TCTX:        ;
      482     7050    5                        CALL SC_BADTCTX;   /* snap                               */
      483     7051
      484     7052    5                        GOTO UNLOCK_N_ALTRETURN;
      485     7053    5                        END;
      486     7054    4                   END;
      487     7055
      488     7056    3              GOTO REPORT_BAD_TSTATE;
      489     7057    3              END/*do if tctx not open*/;
      490     7058
      491     7059    2         SPDU_SZ = K$RWPARM.SHDRSZ + K$RWPARM.UHDRSZ + K$RWPARM.MSGSZ;
      492     7060
      493     7061    2         IF FUNCTION = %K_TEXPD_DATA_REQ
      494     7062    3         THEN DO;
      495     7063    3              IF KI$TCTX.SSN.TR_FLAGS.EXPEDITED = '0'B
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:47   
      496     7064    4              THEN DO;
      497     7065    4                   K$RWPARM.MSG_ERRCODE = E$NOEXPD;
      498     7066    4                   GOTO UNLOCK_N_ALTRETURN;
      499     7067    4                   END;
      500     7068    3              IF SPDU_SZ > 16
      501     7069    4              THEN DO;
      502     7070    4                   K$RWPARM.MSG_ERRCODE = E$DATA_SZ;
      503     7071    4                   GOTO UNLOCK_N_ALTRETURN;
      504     7072    4                   END;
      505     7073    3              END;
      506     7074
      507     7075        /*E* ERROR: KIT-E$DATA_SZ-E
      508     7076             MESSAGE: OSI user data exceeds the maximum allowed.
      509     7077        */
      510     7078
      511     7079        /*E* ERROR: KIT-E$NOEXPD-E
      512     7080             MESSAGE: Expedited data is not allowed on that OSI connection.
      513     7081        */
      514     7082
      515     7083        /* Transport state is legal - compose the TPDU and send it.
      516     7084        */
      517     7085
      518     7086        /* Set up the transport header size to send over the coupler.
      519     7087        */
      520     7088    2         THDR_SZ = SIZEC(TPDU_DT_EXT);
      521     7089
      522     7090        /* See if its bigger than what we should send over the coupler.
      523     7091        */
      524     7092    2         IF THDR_SZ + SPDU_SZ > KIT_TRANSFER_SZ
      525     7093    3         THEN DO;
      526     7094    3              KI$TCTX.ERR = %K_ERROR_TPDU_LEN;
      527     7095    3              K$RWPARM.MSG_ERRCODE = E$DATA_SZ;
      528     7096    3              GOTO UNLOCK_N_ALTRETURN;
      529     7097    3              END;
      530     7098
      531     7099    2         K$RWPARM.THDR$ = TPDU$;
      532     7100    2         K$RWPARM.THDRSZ = THDR_SZ;
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:48   
      533     7101
      534     7102        /* Build the common information in the TPDU header.
      535     7103        */
      536     7104    2         TPDU$->TPDU.LI = THDR_SZ - 1;
      537     7105    2         TPDU$->TPDU.DST_REF = KI$TCTX.DST_REF; /*maintained unpacked*/
      538     7106    2         TPDU$->TPDU.CDT = 0;
      539     7107
      540     7108        /* Finish building the TPDU header depending on type - DT or ED.
      541     7109        */
      542     7110    2         IF FUNCTION = %K_TEXPD_DATA_REQ
      543     7111    3         THEN DO;
      544     7112    3              TPDU$->TPDU.TYPE = %K_TPDU_TYPE_ED;
      545     7113    3              NEXT$ = ADDR(KI$TCTX.SEND_EXPD);
      546     7114    3              END/*do if expidated data*/;
      547     7115
      548     7116    3         ELSE DO;
      549     7117    3              TPDU$->TPDU.TYPE = %K_TPDU_TYPE_DT;
      550     7118    3              NEXT$ = ADDR(KI$TCTX.SEND_NEXT);
      551     7119    3              END/*do if normal data*/;
      552     7120
      553     7121        /* Unpack the sequence number to send over the coupler.
      554     7122        */
      555     7123    2         TPDU_NR = NEXT$->B$NEXT;
      556     7124
      557     7125    2         TPDU$->TPDU_DT_EXT.TPDU_NR_UNPK.BYTE0 = NR.BYTE0;
      558     7126    2         TPDU$->TPDU_DT_EXT.TPDU_NR_UNPK.BYTE1 = NR.BYTE1;
      559     7127    2         TPDU$->TPDU_DT_EXT.TPDU_NR_UNPK.BYTE2 = NR.BYTE2;
      560     7128    2         TPDU$->TPDU_DT_EXT.TPDU_NR_UNPK.BYTE3 = NR.BYTE3;
      561     7129
      562     7130    2         TPDU$->TPDU_DT_EXT.EOT = '1'B;
      563     7131
      564     7132        /* Forward the message by calling KIN$SEND.
      565     7133        */
      566     7134    2         IF KI$TCTX.SSN.TR_FLAGS.OSI
      567     7135    2         THEN K$RWPARM.FUNCTION = %K_NDATA;
      568     7136    2         ELSE K$RWPARM.FUNCTION = %K_WRITE;
      569     7137
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:49   
      570     7138    2         K$RWPARM.FEX = KI$TCTX.NODE;
      571     7139
      572     7140    2         CALL KIN$SEND(K$RWPARM)
      573     7141    3         WHENRETURN DO;
      574     7142    3              NEXT$->B$NEXT = NEXT$->B$NEXT + 1;
      575     7143    3              END/*ret from kin$send*/;
      576     7144
      577     7145    3         WHENALTRETURN DO;
      578     7146    3   LOG_ALTRET:
      579     7147    3              IF K$RWPARM.ERR ~= %K$USER_ERR
      580     7148    4              THEN DO;
      581     7149    4                   KIT_KIN_ALTRET = KIT_KIN_ALTRET+1;
      582     7150
      583     7151    4                   IF KI$TCTX.SSN.TR_FLAGS.OSI AND KIT_OSI_SNAP ~= 0
      584     7152    4                   THEN CALL SC_PRTCL_SNAP;
      585     7153    4                   END;
      586     7154
      587     7155    3              GOTO UNLOCK_N_ALTRETURN;
      588     7156    3              END/*altret from kin$send*/;
      589     7157
      590     7158    2         IF KI$TCTX.STATE = %KI_TSTATE_AKWAIT
      591     7159    3         THEN DO;
      592     7160    3              KI$TCTX.FLOW_CONTROLLED = '1'B;
      593     7161        /*N*       K$RWPARM.ERR = %K$QFULL equivalent */
      594     7162    3              GOTO UNLOCK_N_ALTRETURN;
      595     7163    3              END;
      596     7164
      597     7165    2         ELSE GOTO UNLOCK_N_RETURN;
      598     7166
      599     7167        %EJECT;
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:50   
      600     7168        /* Connect request received from OSI Session.
      601     7169        */
      602     7170    2       CASE(%K_TCONNECT_REQ);
      603     7171
      604     7172    2         IF FPT_CONNECT_OSI.CLASS = 2
      605     7173    3         THEN DO;
      606     7174    3              IF (FPT_CONNECT_OSI.TR_FLAGS & %KI_TRFLGS_CLASS2)
      607     7175    3                OR ( (FPT_CONNECT_OSI.TR_FLAGS.EXPEDITED)
      608     7176    3                AND NOT (FPT_CONNECT_OSI.TR_FLAGS.CLASS_2_FLOW) )
      609     7177    3              THEN GOTO SET_BAD_OPT;
      610     7178    3              END;
      611     7179
      612     7180    2         IF FPT_CONNECT_OSI.CLASS = 0
      613     7181    3         THEN DO;
      614     7182    3              IF (FPT_CONNECT_OSI.TR_FLAGS & %KI_TRFLGS_CLASS0)
      615     7183    4              THEN DO;
      616     7184    4   SET_BAD_OPT:
      617     7185    4                   K$RWPARM.MSG_ERRCODE = E$CLASSOPT;
      618     7186    4                   GOTO UNLOCK_N_ALTRETURN;
      619     7187    4                   END;
      620     7188    3              END;
      621     7189
      622     7190        /*E* ERROR: KIT-E$CLASSOPT-E
      623     7191             MESSAGE: Invalid option requested for transport class specification.
      624     7192        */
      625     7193
      626     7194    2         CALL KIT$GETTCTX(TCTX$)
      627     7195    3         WHENALTRETURN DO;
      628     7196    3              K$RWPARM.MSG_ERRCODE = E$NOTCTX;
      629     7197    3              GOTO UNLOCK_N_ALTRETURN;
      630     7198    3              END;
      631     7199
      632     7200        /*E* ERROR: KIT-E$NOTCTX-E
      633     7201             MESSAGE: Can't open OSI connection - no host transport context
      634     7202        */
      635     7203
      636     7204
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:51   
      637     7205    2         TCTX# =KI$TCTX.SRC_REF;
      638     7206    2         K$RWPARM.TCTX# = TCTX#;
      639     7207
      640     7208    2         KI$TCTX.SSN = FPT_CONNECT_OSI;    /*this sets most of the options*/
      641     7209    2         KI$TCTX.SSN.TR_FLAGS.OSI = '1'B;
      642     7210
      643     7211    2         KI$TCTX.OUTBOUND = '1'B;
      644     7212
      645     7213    2         KI$TCTX.STATE = %KI_TSTATE_WFCC;
      646     7214
      647     7215    2         IF KIT_DO_CHKSUM=0 THEN KI$TCTX.SSN.TR_FLAGS.CHKSUM='0'B;
      648     7216
      649     7217    3         DO TEMP = %K_TPDUSIZE_128 TO %K_TPDUSIZE_8192;
      650     7218    3              IF FPT_CONNECT_OSI.TPDUSIZE <= K_TPDUSZ_VALUES(TEMP)
      651     7219    4              THEN DO;
      652     7220    4                   KI$TCTX.SSN.TPDUSZ_PARM = TEMP;
      653     7221    4                   GOTO CHECK_TPDUSZ;
      654     7222    4                   END;
      655     7223    3              END/*do 7 to 13*/;
      656     7224
      657     7225    2   CHECK_TPDUSZ:
      658     7226    2         IF KI$TCTX.SSN.CLASS ~= 0
      659     7227    3         THEN DO;
      660     7228    3              IF KI$TCTX.SSN.TPDUSZ_PARM = 0
      661     7229    3              THEN KI$TCTX.SSN.TPDUSZ_PARM = %K_TPDUSIZE_8192;
      662     7230    3              END;
      663     7231    3         ELSE DO;
      664     7232    3              IF KI$TCTX.SSN.TPDUSZ_PARM=0 OR KI$TCTX.SSN.TPDUSZ_PARM>%K_TPDUSIZE_2048
      665     7233    3              THEN KI$TCTX.SSN.TPDUSZ_PARM = %K_TPDUSIZE_2048;
      666     7234    3              END;
      667     7235
      668     7236    2         IF KI$TCTX.SSN.TR_FLAGS.EXTENDED = '0'B
      669     7237    2         THEN KI$TCTX.SSN.WINDOWSZ = 15;
      670     7238
      671     7239    2         K$RWPARM.FPT$ = ADDR(KI$TCTX.SSN);
      672     7240
      673     7241    2         CALL KIT$SEND_CR(K$RWPARM)
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:52   
      674     7242    3         WHENRETURN DO;
      675     7243    3              KI$TCTX.NODE = K$RWPARM.FEX;
      676     7244    3              KI$TCTX.LOCAL_FEP = K$RWPARM.LOCAL_FEP;
      677     7245    3              END;
      678     7246    3         WHENALTRETURN DO;
      679     7247    3   RELTCTX_N_ALTRETURN: ;
      680     7248    3              K$RWPARM.TCTX# = 0;
      681     7249    3              KI$TCTX.STATE = %KI_TSTATE_CLOSED;
      682     7250    3              CALL KIT$RELTCTX(TCTX$);
      683     7251    3              GOTO UNLOCK_N_ALTRETURN;
      684     7252    3              END;
      685     7253
      686     7254
      687     7255    2         GOTO UNLOCK_N_RETURN;
      688     7256
      689     7257        %EJECT;
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:53   
      690     7258        /* Connect response received from OSI Session.
      691     7259        */
      692     7260    2       CASE(%K_TCONNECT_RSP);
      693     7261
      694     7262    2         IF KI$TCTX.STATE = %KI_TSTATE_WFTRESP
      695     7263    3         THEN DO;
      696     7264    3              KI$TCTX.SSN.SCID = FPT_CONNECT_OSI.SCID;
      697     7265    3              KI$TCTX.SSN.TR_FLAGS.TRACE = FPT_CONNECT_OSI.TR_FLAGS.TRACE;
      698     7266
      699     7267    3              IF KI$TCTX.SSN.CLASS = 4
      700     7268    3              THEN KI$TCTX.STATE = %KI_TSTATE_AKWAIT;
      701     7269    4              ELSE DO;
      702     7270    4                   KI$TCTX.STATE = %KI_TSTATE_OPEN;
      703     7271    4                   K$RWPARM.FEX = KI$TCTX.NODE;
      704     7272    4                   END;
      705     7273
      706     7274    3              CALL KIT$SEND_CC(K$RWPARM) ALTRET(UNLOCK_N_ALTRETURN);
      707     7275
      708     7276    3              IF (KI$TCTX.SSN.TR_FLAGS & %KI_TRFLGS_CP6)
      709     7277    4              THEN DO;
      710     7278    4                   TPDU$->B$TPDU_CP6_OPTN.P = '0'B;
      711     7279    4                   TPDU$->B$TPDU_CP6_OPTN.P.CODE = %K_TPARM_CP6_OPTIONS;
      712     7280    4                   TPDU$->B$TPDU_CP6_OPTN.P.LEN = 2;
      713     7281    4                   TPDU$->B$TPDU_CP6_OPTN.P.OPTION = KI$TCTX.SSN.TR_FLAGS;
      714     7282
      715     7283    4                   TPDU$->B$TPDU_CP6_OPTN.LI = SIZEC(B$TPDU_CP6_OPTN) -1;
      716     7284    4                   GOTO SEND_TPDU_CP6;
      717     7285    4                   END;
      718     7286    3              GOTO UNLOCK_N_RETURN;
      719     7287    3              END;
      720     7288
      721     7289    3         ELSE DO;
      722     7290    3              K$RWPARM.FUNCTION = %K_TDISCONNECT_IND;
      723     7291    3              K$RWPARM.TCTX$ = ADDR(KI$TCTX);
      724     7292    3              KI$TCTX.STATE = %KI_TSTATE_CLOSING;
      725     7293
      726     7294    3              CALL KIS$OSI_RECV(K$RWPARM);
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:54   
      727     7295    3              GOTO SKIP_DR;
      728     7296    3              END;
      729     7297
      730     7298        %EJECT;
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:55   
      731     7299        /* Disconnect request received from OSI Session.
      732     7300        */
      733     7301    2       CASE(%K_TDISCONNECT_REQ);
      734     7302
      735     7303    2         KI$TCTX.REASON = %K_REASON_NORMAL;
      736     7304
      737     7305    2         IF K$RWPARM.ERR ~= 0
      738     7306    2         THEN KI$TCTX.ERR = K$RWPARM.ERR;
      739     7307    2         ELSE KI$TCTX.ERR = %K_ERROR_DISCONNECT_REQ;
      740     7308
      741     7309    2         TEMP = KI$TCTX.SRC_REF;
      742     7310
      743     7311    3         DO CASE(KI$TCTX.STATE);
      744     7312
      745     7313    3          CASE(%KI_TSTATE_WFCC, %KI_TSTATE_OPEN, %KI_TSTATE_AKWAIT);
      746     7314    3   SEND_DR: ;
      747     7315    3            K$RWPARM.TCTX$ = TCTX$;
      748     7316    3            CALL KIT$SEND_DR (K$RWPARM);
      749     7317    3   SKIP_DR:
      750     7318    3            KI$TCTX.STATE = %KI_TSTATE_CLOSED;
      751     7319    3            KI$TCTX.SRC_REF = TEMP;
      752     7320    3            CALL KIT$RELTCTX(TCTX$);
      753     7321
      754     7322    3          CASE(%KI_TSTATE_WFTRESP);
      755     7323    3            KI$TCTX.SRC_REF = 0;
      756     7324    3            GOTO SEND_DR;
      757     7325
      758     7326    3          CASE(%KI_TSTATE_WBCL);
      759     7327    3            GOTO SKIP_DR;
      760     7328
      761     7329    3            END/*select tstate*/;
      762     7330
      763     7331    2         GOTO UNLOCK_N_RETURN;
      764     7332
      765     7333
      766     7334        %EJECT;
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:56   
      767     7335        /* Adjust Credit request received from OSI Session.
      768     7336        */
      769     7337
      770     7338    2       CASE(%K_TCREDIT);
      771     7339
      772     7340    2         TPDU$->B$TPDU_CP6_CRDT.LI = SIZEC(B$TPDU_CP6_OPTN) -1;
      773     7341    2         TPDU$->B$TPDU_CP6_CRDT.P.CODE = %K_TPARM_SSN_CRDT;
      774     7342    2         TPDU$->B$TPDU_CP6_CRDT.P.LEN = 2;
      775     7343
      776     7344    2         IF K$RWPARM.SSN_CRDT > 0
      777     7345    3         THEN DO;
      778     7346    3              KI$TCTX.SSN_CRDT = KI$TCTX.SSN_CRDT + K$RWPARM.SSN_CRDT;
      779     7347    3              TPDU$->B$TPDU_CP6_CRDT.P.CREDIT = K$RWPARM.SSN_CRDT;
      780     7348    3              END;
      781     7349    3         ELSE DO;
      782     7350    3              KI$TCTX.SSN_CRDT = 0;
      783     7351    3              TPDU$->B$TPDU_CP6_CRDT.P.CREDIT = 0;
      784     7352    3              END;
      785     7353
      786     7354    2         IF (KI$TCTX.STATE~=%KI_TSTATE_OPEN) AND (KI$TCTX.STATE~=%KI_TSTATE_AKWAIT)
      787     7355    2         THEN GOTO UNLOCK_N_RETURN;
      788     7356
      789     7357    2   SEND_TPDU_CP6:
      790     7358    2         TPDU$->B$TPDU_CP6_CRDT.TYPE = %K_TPDU_TYPE_CP6;
      791     7359    2         TPDU$->B$TPDU_CP6_CRDT.MBZ = 0;
      792     7360    2         TPDU$->B$TPDU_CP6_CRDT.DST_REF = KI$TCTX.DST_REF;
      793     7361
      794     7362    2         K$RWPARM.THDR$ = TPDU$;
      795     7363    2         K$RWPARM.THDRSZ = TPDU$->B$TPDU_CP6_CRDT.LI +1;
      796     7364    2         K$RWPARM.FUNCTION = %K_NDATA;
      797     7365    2         K$RWPARM.FEX = KI$TCTX.NODE;
      798     7366
      799     7367    2         CALL KIN$SEND(K$RWPARM) ALTRET(LOG_ALTRET);
      800     7368
      801     7369    2         GOTO UNLOCK_N_RETURN;
      802     7370
      803     7371
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:57   
      804     7372    2       CASE(ELSE);
      805     7373    2         CALL SC_BADFNC;                   /*full screech*/
      806     7374
      807     7375    2         GOTO UNLOCK_N_RETURN;
      808     7376
      809     7377    2         END/*do case(function)*/;
      810     7378
      811     7379        %EJECT;
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:58   
      812     7380
      813     7381    1   REPORT_BAD_TSTATE: ;
      814     7382    1      KIT_BAD_TSTATE = KIT_BAD_TSTATE +1;
      815     7383    1      K$RWPARM.MSG_ERRCODE = E$TR_STATE;
      816     7384
      817     7385        /*E* ERROR: KIT-E$TR_STATE-E
      818     7386             MESSAGE: The transport connection is not open
      819     7387        */
      820     7388
      821     7389    1   UNLOCK_N_ALTRETURN: ;
      822     7390    1      IF TCTX$ ~= ADDR(NIL)
      823     7391    1      THEN KI$TCTX.ERR = K$RWPARM.ERR;
      824     7392
      825     7393    1      IF K$RWPARM.MSG_ERRCODE ~= '0'B
      826     7394    1      THEN K$RWPARM.ERR = %K$USER_ERR;
      827     7395
      828     7396           %UNLOCK (G=KIT_SEND_LOCK);
      829     7399    1      ALTRETURN;
      830     7400
      831     7401
      832     7402    1   UNLOCK_N_RETURN: ;
      833     7403    1      IF TCTX$ ~= ADDR(NIL)
      834     7404    1      THEN KI$TCTX.ERR = K$RWPARM.ERR;
      835     7405
      836     7406           %UNLOCK (G=KIT_SEND_LOCK);
      837     7409    1      RETURN;
      838     7410    1   END KIT$SEND;
      839     7411        %EOD;

PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:59   
--  Include file information  --

   UD_SEV_C.:E05TOU  is referenced.
   KI_ERRORS_C.:E05TOU  is referenced.
   UM_CP6.:E05TOU  is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   KI_MACROS_C.:E05TOU  is referenced.
   K_INTERFACE_M.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   K_TRANSPORT_E.:E05TOU  is referenced.
   K_TRANSPORT_M.:E05TOU  is referenced.
   K_SUBS_C.:E05TOU  is referenced.
   K$RWPARM.:E05TOU  is referenced.
      No diagnostics issued in procedure KIT$SEND.

   Procedure KIT$SEND requires 567 words for executable code.
   Procedure KIT$SEND requires 18 words of local(AUTO) storage.

PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:60   

 Object Unit name= KIT$SEND                                   File name= KIT$TRANSPORT.:E05TOU
 UTS= JUL 30 '97 00:42:35.32 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none     5      5  KIT$SEND
    1   Proc  even  none   567   1067  KIT$SEND
    2  RoData even  none     5      5  KIT$SEND

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        1  KIT$SEND

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 HFC$LOCK
 yes     yes           Std       1 KIN$SEND
 yes     yes           Std       1 KIT$GETTCTX
 yes     yes           Std       1 KIT$SEND_DR
 yes     yes           Std       1 KIT$SEND_CR
         yes           Std       1 HFC$UNLOCK
 yes     yes           Std       1 KIT$SEND_CC
 yes     yes           Std       1 KIT$RELTCTX
 yes     yes           Std       1 KIS$OSI_RECV
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:61   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     SC_BADTCTX                            SC_BADFNC                             SC_PRTCL_SNAP
     KI_TCTX$$                             KI_TCTX_MAX#                          KIT_DO_CHKSUM
     K_TPDUSZ_VALUES                       KIT_SEND_LOCK                         KIT_KIN_ALTRET
     KIT_TRANSFER_SZ                       KIT_NOT_DATAXFER                      KIT_BAD_TSTATE
     KIT_OSI_SNAP                          B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ASLENTSID                             ISSID
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:62   


      288        1        /*M* KIT$SEND - Send outbound TPDUs on the host.   */
      289        2        /*T***********************************************************/
      290        3        /*T*                                                         */
      291        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      292        5        /*T*                                                         */
      293        6        /*T***********************************************************/
      294        7
      295        8        /*X* PLM=3,IND=5,ENU=0,ECU=0   */
      296        9
      297       10        KIT$SEND: PROC (K$RWPARM) ALTRET;

     10  1 000000   000000 700200 xent  KIT$SEND     TSX0  ! X66_AUTO_1
         1 000001   000022 000001                    ZERO    18,1

      298       11
      299       12                                                /* Include files                      */
      300       13        %INCLUDE K$RWPARM;
      301      399        %INCLUDE K_SUBS_C;
      302      432        %INCLUDE K_TRANSPORT_M;
      303     2216        %INCLUDE K_TRANSPORT_E;
      304     2541        %INCLUDE K_ADDRESS_M;
      305     3044        %INCLUDE K_INTERFACE_M;
      306     3453        %INCLUDE KI_MACROS_C;
      307     4061        %INCLUDE HF_LOCK_C;
      308     4075        %INCLUDE UM_CP6;
      309     4927        %INCLUDE KI_ERRORS_C;
      310     5012        %INCLUDE UD_SEV_C;
      311     5026
      312     5027                                                /* Parameter definitions              */
      313     5028        %K$RWPARM (NAME=K$RWPARM);
      314     5344
      315     5345                                                /* Automatic data                     */
      316     5346    1   DCL TCTX$ PTR;
      317     5347    1   DCL TCTX# UBIN AUTO;
      318     5348    1   DCL FPT$ PTR;
      319     5349    1   DCL TPDU$ PTR;
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:63   
      320     5350    1   DCL NEXT$ PTR;
      321     5351    1   DCL THDR_SZ UBIN;
      322     5352    1   DCL SPDU_SZ UBIN;
      323     5353    1   DCL FUNCTION UBIN;
      324     5354    1   DCL TEMP UBIN;
      325     5355    1   DCL TPDU_NR UBIN;
      326     5356    1   DCL 1 NR REDEF TPDU_NR,
      327     5357    1         2 * BIT(5) UNAL,
      328     5358    1         2 BYTE0 UBIN(7) UNAL,
      329     5359    1         2 BYTE1 UBIN(8) UNAL,
      330     5360    1         2 BYTE2 UBIN(8) UNAL,
      331     5361    1         2 BYTE3 UBIN(8) UNAL;
      332     5362
      333     5363        %K$TPDU_DT_EXT (STCLASS=AUTO, NAME=K$TPDU_DT);
      334     5427
      335     5428                                                /* Based data                         */
      336     5429    1   DCL KI$TCTX$(0:0) PTR BASED(KI_TCTX$$);
      337     5430    1   DCL B$NEXT UBIN(36) BASED;
      338     5431        %KI$TCTX(NAME=KI$TCTX, STCLASS="BASED(TCTX$)");
      339     5989        %K$TPDU_GENERIC (NAME=TPDU,ALGN=CALIGNED);
      340     6049        %K$TPDU_DT (NAME=TPDU_DT,ALGN=CALIGNED);
      341     6099        %K$TPDU_DT_EXT (NAME=TPDU_DT_EXT,ALGN=CALIGNED);
      342     6163        %K$TPARM_CHKSUM (ALGN=CALIGNED);
      343     6203
      344     6204        %K$FPT_CONNECT_OSI(NAME=FPT_CONNECT_OSI, STCLASS="BASED(FPT$)");
      345     6541
      346     6542        %K$TPDU_CP6 (NAME=B$TPDU_CP6_CRDT, LAST=",");
      347     6577           %K$TPARM_SSN_CRDT(LVL=2,NAME=P);
      348     6616
      349     6617        %K$TPDU_CP6 (NAME=B$TPDU_CP6_OPTN, ALGN=CALIGNED, LAST=",");
      350     6652           %K$TPARM_CP6_OPTIONS(LVL=2, NAME=P);
      351     6697
      352     6698                                                /* Static definitions                 */
      353     6699    1   DCL KI_TCTX$$ PTR SYMREF;
      354     6700    1   DCL KI_TCTX_USE# UBIN SYMREF;
      355     6701    1   DCL KI_TCTX_MAX# UBIN SYMREF;
      356     6702    1   DCL KIT_DO_CHKSUM UBIN SYMREF;
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:64   
      357     6703    1   DCL K_TPDUSZ_VALUES(0:13) SBIN SYMREF;
      358     6704    1   DCL KIT_SEND_LOCK BIT(72) SYMREF;
      359     6705
      360     6706    1   DCL KIT_KIN_ALTRET UBIN SYMREF;
      361     6707    1   DCL KIT_TRANSFER_SZ UBIN SYMREF;
      362     6708    1   DCL KIT_NOT_DATAXFER UBIN SYMREF;
      363     6709    1   DCL KIT_BAD_TSTATE UBIN SYMREF;
      364     6710
      365     6711    1   DCL KIT_OSI_SNAP UBIN SYMREF;
      366     6712    1   DCL KIT_ERROR_SNAP UBIN SYMREF;
      367     6713
      368     6714        %VLP_ERRCODE (FPTN=E$DATA_SZ,FCG=KI,MID=T,ERR#=%E$DATA_SZ,SEV=SEV_ERR#,MON='1'B);
      369     6759        %VLP_ERRCODE (FPTN=E$NOEXPD,FCG=KI,MID=T,ERR#=%E$NOEXPD,SEV=SEV_ERR#,MON='1'B);
      370     6804        %VLP_ERRCODE (FPTN=E$CLASSOPT,FCG=KI,MID=T,ERR#=%E$CLASSOPT,SEV=SEV_ERR#,MON='1'B);
      371     6849        %VLP_ERRCODE (FPTN=E$NOTCTX,FCG=KI,MID=T,ERR#=%E$NOTCTX,SEV=SEV_ERR#,MON='1'B);
      372     6894        %VLP_ERRCODE (FPTN=E$TR_STATE,FCG=KI,MID=T,ERR#=%E$TR_STATE,SEV=SEV_ERR#,MON='1'B);
      373     6939                                                /* Entry point references             */
      374     6940    1   DCL KIN$SEND ENTRY(1) ALTRET;
      375     6941    1   DCL KIS$OSI_RECV ENTRY(1) ALTRET;
      376     6942    1   DCL KIT$GETTCTX ENTRY(1) ALTRET;
      377     6943    1   DCL KIT$RELTCTX ENTRY(1) ALTRET;
      378     6944    1   DCL KIT$SEND_CR ENTRY(1) ALTRET;
      379     6945    1   DCL KIT$SEND_CC ENTRY(1) ALTRET;
      380     6946    1   DCL KIT$SEND_DR ENTRY(1) ALTRET;
      381     6947    1   DCL SC_BADFNC ENTRY CONV(2,0);
      382     6948    1   DCL SC_PRTCL_SNAP ENTRY CONV(2,0);
      383     6949    1   DCL SC_BADTCTX ENTRY CONV(2,0);
      384     6950        %EJECT;
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:65   
      385     6951        /*F* NAME: KIT$SEND
      386     6952
      387     6953        KIT$SEND is called with the K$RWPARM parameter:
      388     6954
      389     6955        .fif
      390     6956        }     FUNCTION - Indicates the function to be performed.
      391     6957        }
      392     6958        }                For CP-6 Session connections: K_WRITE
      393     6959        }
      394     6960        }                For OSI Session connections:  K_TCONNECT_REQ
      395     6961        }                                              K_TCONNECT_RSP
      396     6962        }                                              K_TDATA_REQ
      397     6963        }                                              K_TEXPD_DATA_REQ
      398     6964        }                                              K_TDISCONNECT_REQ
      399     6965        }                                              K_TCREDIT
      400     6966        }
      401     6967        }     TCTX#    - Contains the index into the TCTX Pointer Array for
      402     6968        }                the session connection making the request.
      403     6969        }                Contains 0 if request is K_TCONNECT_REQ
      404     6970        }
      405     6971        }     FPT$     - Contains the address of FPT_CONNECT_OSI
      406     6972        }                Only used on OSI connections
      407     6973        }                when FUNCTION is K_TCONNECT_REQ or K_TCONNECT_RESP
      408     6974        }
      409     6975        }     ERR      - Contains a code to indicate the REASON.
      410     6976        }                Only used when FUNCTION is K_TDISCONNECT_REQ
      411     6977        }
      412     6978        }     FEX      - Contains the node number of the destination end-point
      413     6979        }                Only used on CP6 connections.
      414     6980        }
      415     6981        .fin
      416     6982
      417     6983        KIT$SEND will build the transport header and forward the message by
      418     6984        calling KIN$SEND after further initialization of K$RWPARM as follows:
      419     6985
      420     6986        .fif
      421     6987        }     FUNCTION - Indicates the function to be performed.
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:66   
      422     6988        }                For CP-6 Session connections: K_WRITE
      423     6989        }                For OSI Session connections:  K_NDATA
      424     6990        }
      425     6991        }     SRC_ADDR$- Contains the address of Source Network Address
      426     6992        }                Only used on OSI connections.
      427     6993        }
      428     6994        }     DST_ADDR$- Contains the address of Destination Network Address
      429     6995        }                Only used on OSI connections.
      430     6996        }
      431     6997        .fin
      432     6998        */
      433     6999    1      TCTX# = K$RWPARM.TCTX#;

   6999  1 000002   200003 470500                    LDP0    @K$RWPARM,,AUTO
         1 000003   000033 236100                    LDQ     27,,PR0
         1 000004   000022 772000                    QRL     18
         1 000005   200005 756100                    STQ     TCTX#,,AUTO

      434     7000    1      TCTX$ = ADDR(NIL);

   7000  1 000006   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000007   200004 756100                    STQ     TCTX$,,AUTO

      435     7001    1      FPT$ = K$RWPARM.FPT$;

   7001  1 000010   000017 236100                    LDQ     15,,PR0
         1 000011   200006 756100                    STQ     FPT$,,AUTO

      436     7002    1      FUNCTION = K$RWPARM.FUNCTION;

   7002  1 000012   000020 235100                    LDA     16,,PR0
         1 000013   200013 755100                    STA     FUNCTION,,AUTO

      437     7003    1      TPDU$ = ADDR(K$TPDU_DT);

   7003  1 000014   200016 631500                    EPPR1   K$TPDU_DT,,AUTO
         1 000015   200007 451500                    STP1    TPDU$,,AUTO
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:67   

      438     7004
      439     7005    1      K$RWPARM.ERR = 0;

   7005  1 000016   000013 450100                    STZ     11,,PR0

      440     7006    1      K$RWPARM.MSG_ERRCODE = '0'B;

   7006  1 000017   000037 450100                    STZ     31,,PR0

      441     7007
      442     7008           %LOCK (G=KIT_SEND_LOCK);

   7009  1 000020   000000 630400 2                  EPPR0   0
         1 000021   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000022   000000 701000 xent               TSX1    HFC$LOCK
         1 000023   000000 011000                    NOP     0

      443     7011
      444     7012    1      IF (TCTX# = 0) AND (FUNCTION ~= %K_TCONNECT_REQ)

   7012  1 000024   200005 235100                    LDA     TCTX#,,AUTO
         1 000025   000031 601000 1                  TNZ     s:7015
         1 000026   200013 236100                    LDQ     FUNCTION,,AUTO
         1 000027   000025 116007                    CMPQ    21,DL
         1 000030   001024 601000 1                  TNZ     REPORT_BAD_TSTATE

      445     7013    1      THEN GOTO REPORT_BAD_TSTATE;         /*connection not yet completed        */
      446     7014
      447     7015    1      IF TCTX# > KI_TCTX_MAX#

   7015  1 000031   000000 236000 xsym               LDQ     KI_TCTX_MAX#
         1 000032   200005 116100                    CMPQ    TCTX#,,AUTO
         1 000033   000140 602000 1                  TNC     SET_BAD_TCTX

      448     7016    1      THEN GOTO SET_BAD_TCTX;
      449     7017
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:68   
      450     7018    1      TCTX$ = KI$TCTX$(TCTX#);

   7018  1 000034   000000 470400 xsym               LDP0    KI_TCTX$$
         1 000035   000000 236105                    LDQ     0,AL,PR0
         1 000036   200004 756100                    STQ     TCTX$,,AUTO

      451     7019
      452     7020    1      IF TCTX$ = ADDR(NIL) AND (FUNCTION ~= %K_TCONNECT_REQ)

   7020  1 000037   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000040   000044 601000 1                  TNZ     s:7023
         1 000041   200013 235100                    LDA     FUNCTION,,AUTO
         1 000042   000025 115007                    CMPA    21,DL
         1 000043   000140 601000 1                  TNZ     SET_BAD_TCTX

      453     7021    1      THEN GOTO SET_BAD_TCTX;
      454     7022
      455     7023    1      IF FUNCTION = %K_WRITE

   7023  1 000044   200013 235100                    LDA     FUNCTION,,AUTO
         1 000045   000001 115007                    CMPA    1,DL
         1 000046   000105 600000 1                  TZE     SEND_DATA

      456     7024    1      THEN GOTO SEND_DATA;                 /*fast path                           */
      457     7025
      458     7026        %EJECT;
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:69   
      459     7027    2      DO CASE(FUNCTION);

   7027  1 000047   000033 115007                    CMPA    27,DL
         1 000050   000052 602005 1                  TNC     s:7027+3,AL
         1 000051   001021 710000 1                  TRA     s:7373
         1 000052   001021 710000 1                  TRA     s:7373
         1 000053   000105 710000 1                  TRA     SEND_DATA
         1 000054   001021 710000 1                  TRA     s:7373
         1 000055   001021 710000 1                  TRA     s:7373
         1 000056   001021 710000 1                  TRA     s:7373
         1 000057   001021 710000 1                  TRA     s:7373
         1 000060   001021 710000 1                  TRA     s:7373
         1 000061   001021 710000 1                  TRA     s:7373
         1 000062   001021 710000 1                  TRA     s:7373
         1 000063   001021 710000 1                  TRA     s:7373
         1 000064   001021 710000 1                  TRA     s:7373
         1 000065   001021 710000 1                  TRA     s:7373
         1 000066   001021 710000 1                  TRA     s:7373
         1 000067   001021 710000 1                  TRA     s:7373
         1 000070   001021 710000 1                  TRA     s:7373
         1 000071   001021 710000 1                  TRA     s:7373
         1 000072   001021 710000 1                  TRA     s:7373
         1 000073   001021 710000 1                  TRA     s:7373
         1 000074   001021 710000 1                  TRA     s:7373
         1 000075   001021 710000 1                  TRA     s:7373
         1 000076   001021 710000 1                  TRA     s:7373
         1 000077   000344 710000 1                  TRA     s:7172
         1 000100   000540 710000 1                  TRA     s:7262
         1 000101   000105 710000 1                  TRA     SEND_DATA
         1 000102   000105 710000 1                  TRA     SEND_DATA
         1 000103   000642 710000 1                  TRA     s:7303
         1 000104   000731 710000 1                  TRA     s:7340

      460     7028
      461     7029    2       CASE(%K_WRITE, %K_TDATA_REQ, %K_TEXPD_DATA_REQ);

   7029  1 000105                       SEND_DATA    null
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:70   
      462     7030
      463     7031    2   SEND_DATA: ;
      464     7032        /* First check for state legal for data transfer.
      465     7033        */
      466     7034    2         IF KI$TCTX.STATE~=%KI_TSTATE_OPEN AND KI$TCTX.STATE~=%KI_TSTATE_AKWAIT

   7034  1 000105   200004 471500                    LDP1    TCTX$,,AUTO
         1 000106   100000 236100                    LDQ     0,,PR1
         1 000107   777000 376003                    ANQ     -512,DU
         1 000110   005000 116003                    CMPQ    2560,DU
         1 000111   000144 600000 1                  TZE     s:7059
         1 000112   007000 116003                    CMPQ    3584,DU
         1 000113   000144 600000 1                  TZE     s:7059

      467     7035    3         THEN DO;

      468     7036
      469     7037    3              IF KI$TCTX.STATE = %KI_TSTATE_CLOSED

   7037  1 000114   002000 116003                    CMPQ    1024,DU
         1 000115   000123 600000 1                  TZE     s:7041
         1 000116   010000 116003                    CMPQ    4096,DU
         1 000117   000123 600000 1                  TZE     s:7041
         1 000120   100000 236100                    LDQ     0,,PR1
         1 000121   777000 316003                    CANQ    -512,DU
         1 000122   000127 601000 1                  TNZ     s:7045

      470     7038    3                OR KI$TCTX.STATE = %KI_TSTATE_CLOSING
      471     7039    3                OR KI$TCTX.STATE = %KI_TSTATE_NULL
      472     7040    4              THEN DO;

      473     7041    4                   KIT_NOT_DATAXFER = KIT_NOT_DATAXFER+1;

   7041  1 000123   000000 236000 xsym               LDQ     KIT_NOT_DATAXFER
         1 000124   000001 036007                    ADLQ    1,DL
         1 000125   000000 756000 xsym               STQ     KIT_NOT_DATAXFER

PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:71   
      474     7042    4                   GOTO UNLOCK_N_RETURN;

   7042  1 000126   001053 710000 1                  TRA     UNLOCK_N_RETURN

      475     7043    4                   END;
      476     7044
      477     7045    3              IF KI$TCTX.SSN.TR_FLAGS.OSI = '0'B

   7045  1 000127   100016 236100                    LDQ     14,,PR1
         1 000130   000020 316007                    CANQ    16,DL
         1 000131   000143 601000 1                  TNZ     s:7056

      478     7046    4              THEN DO;

      479     7047    4                   IF K$RWPARM.FEX ~= KI$TCTX.NODE

   7047  1 000132   200003 473500                    LDP3    @K$RWPARM,,AUTO
         1 000133   100000 236100                    LDQ     0,,PR1
         1 000134   000022 772000                    QRL     18
         1 000135   000777 376007                    ANQ     511,DL
         1 000136   300021 116100                    CMPQ    17,,PR3
         1 000137   000143 600000 1                  TZE     s:7056

      480     7048    5                   THEN DO;

      481     7049    5   SET_BAD_TCTX:        ;

   7049  1 000140                       SET_BAD_TCTX null
      482     7050    5                        CALL SC_BADTCTX;   /* snap                               */

   7050  1 000140   000000 713400 xsym               CLIMB   SC_BADTCTX
         1 000141   000000 600000 xsid               climb   nvectors=         0

      483     7051
      484     7052    5                        GOTO UNLOCK_N_ALTRETURN;

   7052  1 000142   001032 710000 1                  TRA     UNLOCK_N_ALTRETURN
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:72   

      485     7053    5                        END;
      486     7054    4                   END;
      487     7055
      488     7056    3              GOTO REPORT_BAD_TSTATE;

   7056  1 000143   001024 710000 1                  TRA     REPORT_BAD_TSTATE

      489     7057    3              END/*do if tctx not open*/;
      490     7058
      491     7059    2         SPDU_SZ = K$RWPARM.SHDRSZ + K$RWPARM.UHDRSZ + K$RWPARM.MSGSZ;

   7059  1 000144   200003 473500                    LDP3    @K$RWPARM,,AUTO
         1 000145   300023 236100                    LDQ     19,,PR3
         1 000146   300015 036100                    ADLQ    13,,PR3
         1 000147   300001 036100                    ADLQ    1,,PR3
         1 000150   200012 756100                    STQ     SPDU_SZ,,AUTO

      492     7060
      493     7061    2         IF FUNCTION = %K_TEXPD_DATA_REQ

   7061  1 000151   000030 115007                    CMPA    24,DL
         1 000152   000167 601000 1                  TNZ     s:7088

      494     7062    3         THEN DO;

      495     7063    3              IF KI$TCTX.SSN.TR_FLAGS.EXPEDITED = '0'B

   7063  1 000153   100016 236100                    LDQ     14,,PR1
         1 000154   000002 316007                    CANQ    2,DL
         1 000155   000161 601000 1                  TNZ     s:7068

      496     7064    4              THEN DO;

      497     7065    4                   K$RWPARM.MSG_ERRCODE = E$NOEXPD;

   7065  1 000156   000001 236000 0                  LDQ     E$NOEXPD
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:73   
         1 000157   300037 756100                    STQ     31,,PR3

      498     7066    4                   GOTO UNLOCK_N_ALTRETURN;

   7066  1 000160   001032 710000 1                  TRA     UNLOCK_N_ALTRETURN

      499     7067    4                   END;
      500     7068    3              IF SPDU_SZ > 16

   7068  1 000161   200012 235100                    LDA     SPDU_SZ,,AUTO
         1 000162   000021 115007                    CMPA    17,DL
         1 000163   000167 602000 1                  TNC     s:7088

      501     7069    4              THEN DO;

      502     7070    4                   K$RWPARM.MSG_ERRCODE = E$DATA_SZ;

   7070  1 000164   000000 236000 0                  LDQ     E$DATA_SZ
         1 000165   300037 756100                    STQ     31,,PR3

      503     7071    4                   GOTO UNLOCK_N_ALTRETURN;

   7071  1 000166   001032 710000 1                  TRA     UNLOCK_N_ALTRETURN

      504     7072    4                   END;
      505     7073    3              END;
      506     7074
      507     7075        /*E* ERROR: KIT-E$DATA_SZ-E
      508     7076             MESSAGE: OSI user data exceeds the maximum allowed.
      509     7077        */
      510     7078
      511     7079        /*E* ERROR: KIT-E$NOEXPD-E
      512     7080             MESSAGE: Expedited data is not allowed on that OSI connection.
      513     7081        */
      514     7082
      515     7083        /* Transport state is legal - compose the TPDU and send it.
      516     7084        */
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:74   
      517     7085
      518     7086        /* Set up the transport header size to send over the coupler.
      519     7087        */
      520     7088    2         THDR_SZ = SIZEC(TPDU_DT_EXT);

   7088  1 000167   000010 235007                    LDA     8,DL
         1 000170   200011 755100                    STA     THDR_SZ,,AUTO

      521     7089
      522     7090        /* See if its bigger than what we should send over the coupler.
      523     7091        */
      524     7092    2         IF THDR_SZ + SPDU_SZ > KIT_TRANSFER_SZ

   7092  1 000171   200011 236100                    LDQ     THDR_SZ,,AUTO
         1 000172   200012 036100                    ADLQ    SPDU_SZ,,AUTO
         1 000173   000000 116000 xsym               CMPQ    KIT_TRANSFER_SZ
         1 000174   000203 602000 1                  TNC     s:7099
         1 000175   000203 600000 1                  TZE     s:7099

      525     7093    3         THEN DO;

      526     7094    3              KI$TCTX.ERR = %K_ERROR_TPDU_LEN;

   7094  1 000176   000347 236007                    LDQ     231,DL
         1 000177   100000 552104                    STBQ    0,'04'O,PR1

      527     7095    3              K$RWPARM.MSG_ERRCODE = E$DATA_SZ;

   7095  1 000200   000000 236000 0                  LDQ     E$DATA_SZ
         1 000201   300037 756100                    STQ     31,,PR3

      528     7096    3              GOTO UNLOCK_N_ALTRETURN;

   7096  1 000202   001032 710000 1                  TRA     UNLOCK_N_ALTRETURN

      529     7097    3              END;
      530     7098
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:75   
      531     7099    2         K$RWPARM.THDR$ = TPDU$;

   7099  1 000203   200007 236100                    LDQ     TPDU$,,AUTO
         1 000204   300024 756100                    STQ     20,,PR3

      532     7100    2         K$RWPARM.THDRSZ = THDR_SZ;

   7100  1 000205   300025 755100                    STA     21,,PR3

      533     7101
      534     7102        /* Build the common information in the TPDU header.
      535     7103        */
      536     7104    2         TPDU$->TPDU.LI = THDR_SZ - 1;

   7104  1 000206   200011 236100                    LDQ     THDR_SZ,,AUTO
         1 000207   000001 136007                    SBLQ    1,DL
         1 000210   200020 756100                    STQ     K$TPDU_DT+2,,AUTO
         1 000211   200007 474500                    LDP4    TPDU$,,AUTO
         1 000212   000100 101500                    MRL     fill='000'O
         1 000213   200020 000004                    ADSC9   K$TPDU_DT+2,,AUTO        cn=0,n=4
         1 000214   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1

      537     7105    2         TPDU$->TPDU.DST_REF = KI$TCTX.DST_REF; /*maintained unpacked*/

   7105  1 000215   200004 470500                    LDP0    TCTX$,,AUTO
         1 000216   000100 100500                    MLR     fill='000'O
         1 000217   000001 000002                    ADSC9   1,,PR0                   cn=0,n=2
         1 000220   400000 400002                    ADSC9   0,,PR4                   cn=2,n=2

      538     7106    2         TPDU$->TPDU.CDT = 0;

   7106  1 000221   003100 061400                    CSR     bolr='003'O
         1 000222   000002 000044 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=36
         1 000223   400000 250004                    BDSC    0,,PR4                   by=1,bit=5,n=4

      539     7107
      540     7108        /* Finish building the TPDU header depending on type - DT or ED.
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:76   
      541     7109        */
      542     7110    2         IF FUNCTION = %K_TEXPD_DATA_REQ

   7110  1 000224   200013 235100                    LDA     FUNCTION,,AUTO
         1 000225   000030 115007                    CMPA    24,DL
         1 000226   000236 601000 1                  TNZ     s:7117

      543     7111    3         THEN DO;

      544     7112    3              TPDU$->TPDU.TYPE = %K_TPDU_TYPE_ED;

   7112  1 000227   003100 061400                    CSR     bolr='003'O
         1 000230   000003 000044 xsym               BDSC    B_VECTNIL+3              by=0,bit=0,n=36
         1 000231   400000 210004                    BDSC    0,,PR4                   by=1,bit=1,n=4

      545     7113    3              NEXT$ = ADDR(KI$TCTX.SEND_EXPD);

   7113  1 000232   200004 236100                    LDQ     TCTX$,,AUTO
         1 000233   000007 036003                    ADLQ    7,DU
         1 000234   200010 756100                    STQ     NEXT$,,AUTO

      546     7114    3              END/*do if expidated data*/;

   7114  1 000235   000244 710000 1                  TRA     s:7123

      547     7115
      548     7116    3         ELSE DO;

      549     7117    3              TPDU$->TPDU.TYPE = %K_TPDU_TYPE_DT;

   7117  1 000236   003100 061400                    CSR     bolr='003'O
         1 000237   000001 000044 2                  BDSC    1                        by=0,bit=0,n=36
         1 000240   400000 210004                    BDSC    0,,PR4                   by=1,bit=1,n=4

      550     7118    3              NEXT$ = ADDR(KI$TCTX.SEND_NEXT);

   7118  1 000241   200004 236100                    LDQ     TCTX$,,AUTO
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:77   
         1 000242   000006 036003                    ADLQ    6,DU
         1 000243   200010 756100                    STQ     NEXT$,,AUTO

      551     7119    3              END/*do if normal data*/;

      552     7120
      553     7121        /* Unpack the sequence number to send over the coupler.
      554     7122        */
      555     7123    2         TPDU_NR = NEXT$->B$NEXT;

   7123  1 000244   200010 470500                    LDP0    NEXT$,,AUTO
         1 000245   000000 235100                    LDA     0,,PR0
         1 000246   200015 755100                    STA     TPDU_NR,,AUTO

      556     7124
      557     7125    2         TPDU$->TPDU_DT_EXT.TPDU_NR_UNPK.BYTE0 = NR.BYTE0;

   7125  1 000247   003100 060500                    CSL     bolr='003'O
         1 000250   200015 050007                    BDSC    TPDU_NR,,AUTO            by=0,bit=5,n=7
         1 000251   400001 020007                    BDSC    1,,PR4                   by=0,bit=2,n=7

      558     7126    2         TPDU$->TPDU_DT_EXT.TPDU_NR_UNPK.BYTE1 = NR.BYTE1;

   7126  1 000252   003100 060500                    CSL     bolr='003'O
         1 000253   200015 230010                    BDSC    TPDU_NR,,AUTO            by=1,bit=3,n=8
         1 000254   400001 210010                    BDSC    1,,PR4                   by=1,bit=1,n=8

      559     7127    2         TPDU$->TPDU_DT_EXT.TPDU_NR_UNPK.BYTE2 = NR.BYTE2;

   7127  1 000255   003100 060500                    CSL     bolr='003'O
         1 000256   200015 420010                    BDSC    TPDU_NR,,AUTO            by=2,bit=2,n=8
         1 000257   400001 410010                    BDSC    1,,PR4                   by=2,bit=1,n=8

      560     7128    2         TPDU$->TPDU_DT_EXT.TPDU_NR_UNPK.BYTE3 = NR.BYTE3;

   7128  1 000260   003100 060500                    CSL     bolr='003'O
         1 000261   200015 610010                    BDSC    TPDU_NR,,AUTO            by=3,bit=1,n=8
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:78   
         1 000262   400001 610010                    BDSC    1,,PR4                   by=3,bit=1,n=8

      561     7129
      562     7130    2         TPDU$->TPDU_DT_EXT.EOT = '1'B;

   7130  1 000263   003100 060400                    CSL     bolr='003'O
         1 000264   000030 000001 xsym               BDSC    B_VECTNIL+24             by=0,bit=0,n=1
         1 000265   400001 010001                    BDSC    1,,PR4                   by=0,bit=1,n=1

      563     7131
      564     7132        /* Forward the message by calling KIN$SEND.
      565     7133        */
      566     7134    2         IF KI$TCTX.SSN.TR_FLAGS.OSI

   7134  1 000266   200004 471500                    LDP1    TCTX$,,AUTO
         1 000267   100016 236100                    LDQ     14,,PR1
         1 000270   000020 316007                    CANQ    16,DL
         1 000271   000275 600000 1                  TZE     s:7136

      567     7135    2         THEN K$RWPARM.FUNCTION = %K_NDATA;

   7135  1 000272   000041 235007                    LDA     33,DL
         1 000273   300020 755100                    STA     16,,PR3
         1 000274   000277 710000 1                  TRA     s:7138

      568     7136    2         ELSE K$RWPARM.FUNCTION = %K_WRITE;

   7136  1 000275   000001 235007                    LDA     1,DL
         1 000276   300020 755100                    STA     16,,PR3

      569     7137
      570     7138    2         K$RWPARM.FEX = KI$TCTX.NODE;

   7138  1 000277   100000 236100                    LDQ     0,,PR1
         1 000300   000022 772000                    QRL     18
         1 000301   000777 376007                    ANQ     511,DL
         1 000302   300021 756100                    STQ     17,,PR3
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:79   

      571     7139
      572     7140    2         CALL KIN$SEND(K$RWPARM)

   7140  1 000303   200003 630500                    EPPR0   @K$RWPARM,,AUTO
         1 000304   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000305   000000 701000 xent               TSX1    KIN$SEND
         1 000306   000314 702000 1                  TSX2    LOG_ALTRET

      573     7141    3         WHENRETURN DO;

      574     7142    3              NEXT$->B$NEXT = NEXT$->B$NEXT + 1;

   7142  1 000307   200010 470500                    LDP0    NEXT$,,AUTO
         1 000310   000000 235100                    LDA     0,,PR0
         1 000311   000001 035007                    ADLA    1,DL
         1 000312   000000 755100                    STA     0,,PR0

      575     7143    3              END/*ret from kin$send*/;

   7143  1 000313   000334 710000 1                  TRA     s:7158

      576     7144
      577     7145    3         WHENALTRETURN DO;

      578     7146    3   LOG_ALTRET:
      579     7147    3              IF K$RWPARM.ERR ~= %K$USER_ERR

   7147  1 000314   200003 470500       LOG_ALTRET   LDP0    @K$RWPARM,,AUTO
         1 000315   000013 235100                    LDA     11,,PR0
         1 000316   000010 115007                    CMPA    8,DL
         1 000317   000333 600000 1                  TZE     s:7155

      580     7148    4              THEN DO;

      581     7149    4                   KIT_KIN_ALTRET = KIT_KIN_ALTRET+1;

PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:80   
   7149  1 000320   000000 236000 xsym               LDQ     KIT_KIN_ALTRET
         1 000321   000001 036007                    ADLQ    1,DL
         1 000322   000000 756000 xsym               STQ     KIT_KIN_ALTRET

      582     7150
      583     7151    4                   IF KI$TCTX.SSN.TR_FLAGS.OSI AND KIT_OSI_SNAP ~= 0

   7151  1 000323   200004 471500                    LDP1    TCTX$,,AUTO
         1 000324   100016 236100                    LDQ     14,,PR1
         1 000325   000020 316007                    CANQ    16,DL
         1 000326   000333 600000 1                  TZE     s:7155
         1 000327   000000 235000 xsym               LDA     KIT_OSI_SNAP
         1 000330   000333 600000 1                  TZE     s:7155

      584     7152    4                   THEN CALL SC_PRTCL_SNAP;

   7152  1 000331   000000 713400 xsym               CLIMB   SC_PRTCL_SNAP
         1 000332   000000 600000 xsid               climb   nvectors=         0

      585     7153    4                   END;

      586     7154
      587     7155    3              GOTO UNLOCK_N_ALTRETURN;

   7155  1 000333   001032 710000 1                  TRA     UNLOCK_N_ALTRETURN

      588     7156    3              END/*altret from kin$send*/;
      589     7157
      590     7158    2         IF KI$TCTX.STATE = %KI_TSTATE_AKWAIT

   7158  1 000334   200004 471500                    LDP1    TCTX$,,AUTO
         1 000335   100000 236100                    LDQ     0,,PR1
         1 000336   777000 376003                    ANQ     -512,DU
         1 000337   007000 116003                    CMPQ    3584,DU
         1 000340   001053 601000 1                  TNZ     UNLOCK_N_RETURN

      591     7159    3         THEN DO;
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:81   

      592     7160    3              KI$TCTX.FLOW_CONTROLLED = '1'B;

   7160  1 000341   000002 236007                    LDQ     2,DL
         1 000342   100002 256100                    ORSQ    2,,PR1

      593     7161        /*N*       K$RWPARM.ERR = %K$QFULL equivalent */
      594     7162    3              GOTO UNLOCK_N_ALTRETURN;

   7162  1 000343   001032 710000 1                  TRA     UNLOCK_N_ALTRETURN

      595     7163    3              END;
      596     7164
      597     7165    2         ELSE GOTO UNLOCK_N_RETURN;
      598     7166
      599     7167        %EJECT;
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:82   
      600     7168        /* Connect request received from OSI Session.
      601     7169        */
      602     7170    2       CASE(%K_TCONNECT_REQ);

      603     7171
      604     7172    2         IF FPT_CONNECT_OSI.CLASS = 2

   7172  1 000344   200006 471500                    LDP1    FPT$,,AUTO
         1 000345   100004 236100                    LDQ     4,,PR1
         1 000346   000777 376003                    ANQ     511,DU
         1 000347   000002 116003                    CMPQ    2,DU
         1 000350   000361 601000 1                  TNZ     s:7180

      605     7173    3         THEN DO;

      606     7174    3              IF (FPT_CONNECT_OSI.TR_FLAGS & %KI_TRFLGS_CLASS2)

   7174  1 000351   100004 720100                    LXL0    4,,PR1
         1 000352   000001 360003                    ANX0    1,DU
         1 000353   000367 601000 1                  TNZ     SET_BAD_OPT
         1 000354   100004 236100                    LDQ     4,,PR1
         1 000355   000002 316007                    CANQ    2,DL
         1 000356   000361 600000 1                  TZE     s:7180
         1 000357   000010 316007                    CANQ    8,DL
         1 000360   000367 600000 1                  TZE     SET_BAD_OPT

      607     7175    3                OR ( (FPT_CONNECT_OSI.TR_FLAGS.EXPEDITED)
      608     7176    3                AND NOT (FPT_CONNECT_OSI.TR_FLAGS.CLASS_2_FLOW) )
      609     7177    3              THEN GOTO SET_BAD_OPT;
      610     7178    3              END;

      611     7179
      612     7180    2         IF FPT_CONNECT_OSI.CLASS = 0

   7180  1 000361   100004 236100                    LDQ     4,,PR1
         1 000362   000777 316003                    CANQ    511,DU
         1 000363   000373 601000 1                  TNZ     s:7194
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:83   

      613     7181    3         THEN DO;

      614     7182    3              IF (FPT_CONNECT_OSI.TR_FLAGS & %KI_TRFLGS_CLASS0)

   7182  1 000364   100004 720100                    LXL0    4,,PR1
         1 000365   000057 360003                    ANX0    47,DU
         1 000366   000373 600000 1                  TZE     s:7194

      615     7183    4              THEN DO;

      616     7184    4   SET_BAD_OPT:
      617     7185    4                   K$RWPARM.MSG_ERRCODE = E$CLASSOPT;

   7185  1 000367   000002 236000 0     SET_BAD_OPT  LDQ     E$CLASSOPT
         1 000370   200003 473500                    LDP3    @K$RWPARM,,AUTO
         1 000371   300037 756100                    STQ     31,,PR3

      618     7186    4                   GOTO UNLOCK_N_ALTRETURN;

   7186  1 000372   001032 710000 1                  TRA     UNLOCK_N_ALTRETURN

      619     7187    4                   END;
      620     7188    3              END;
      621     7189
      622     7190        /*E* ERROR: KIT-E$CLASSOPT-E
      623     7191             MESSAGE: Invalid option requested for transport class specification.
      624     7192        */
      625     7193
      626     7194    2         CALL KIT$GETTCTX(TCTX$)

   7194  1 000373   200004 633500                    EPPR3   TCTX$,,AUTO
         1 000374   200020 453500                    STP3    K$TPDU_DT+2,,AUTO
         1 000375   200020 630500                    EPPR0   K$TPDU_DT+2,,AUTO
         1 000376   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000377   000000 701000 xent               TSX1    KIT$GETTCTX
         1 000400   000402 702000 1                  TSX2    s:7196
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:84   
         1 000401   000406 710000 1                  TRA     s:7205

      627     7195    3         WHENALTRETURN DO;

      628     7196    3              K$RWPARM.MSG_ERRCODE = E$NOTCTX;

   7196  1 000402   000003 236000 0                  LDQ     E$NOTCTX
         1 000403   200003 470500                    LDP0    @K$RWPARM,,AUTO
         1 000404   000037 756100                    STQ     31,,PR0

      629     7197    3              GOTO UNLOCK_N_ALTRETURN;

   7197  1 000405   001032 710000 1                  TRA     UNLOCK_N_ALTRETURN

      630     7198    3              END;
      631     7199
      632     7200        /*E* ERROR: KIT-E$NOTCTX-E
      633     7201             MESSAGE: Can't open OSI connection - no host transport context
      634     7202        */
      635     7203
      636     7204
      637     7205    2         TCTX# =KI$TCTX.SRC_REF;

   7205  1 000406   200004 470500                    LDP0    TCTX$,,AUTO
         1 000407   000001 236100                    LDQ     1,,PR0
         1 000410   777777 376007                    ANQ     -1,DL
         1 000411   200005 756100                    STQ     TCTX#,,AUTO

      638     7206    2         K$RWPARM.TCTX# = TCTX#;

   7206  1 000412   000000 620006                    EAX0    0,QL
         1 000413   200003 471500                    LDP1    @K$RWPARM,,AUTO
         1 000414   100033 740100                    STX0    27,,PR1

      639     7207
      640     7208    2         KI$TCTX.SSN = FPT_CONNECT_OSI;    /*this sets most of the options*/

PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:85   
   7208  1 000415   200006 473500                    LDP3    FPT$,,AUTO
         1 000416   000100 100500                    MLR     fill='000'O
         1 000417   300000 000214                    ADSC9   0,,PR3                   cn=0,n=140
         1 000420   000012 000214                    ADSC9   10,,PR0                  cn=0,n=140

      641     7209    2         KI$TCTX.SSN.TR_FLAGS.OSI = '1'B;

   7209  1 000421   000020 236007                    LDQ     16,DL
         1 000422   000016 256100                    ORSQ    14,,PR0

      642     7210
      643     7211    2         KI$TCTX.OUTBOUND = '1'B;

   7211  1 000423   000010 236007                    LDQ     8,DL
         1 000424   000002 256100                    ORSQ    2,,PR0

      644     7212
      645     7213    2         KI$TCTX.STATE = %KI_TSTATE_WFCC;

   7213  1 000425   200004 470500                    LDP0    TCTX$,,AUTO
         1 000426   003000 236003                    LDQ     1536,DU
         1 000427   000000 552140                    STBQ    0,'40'O,PR0

      646     7214
      647     7215    2         IF KIT_DO_CHKSUM=0 THEN KI$TCTX.SSN.TR_FLAGS.CHKSUM='0'B;

   7215  1 000430   000000 235000 xsym               LDA     KIT_DO_CHKSUM
         1 000431   000435 601000 1                  TNZ     s:7217

   7215  1 000432   200004 470500                    LDP0    TCTX$,,AUTO
         1 000433   000002 236000 2                  LDQ     2
         1 000434   000016 356100                    ANSQ    14,,PR0

      648     7216
      649     7217    3         DO TEMP = %K_TPDUSIZE_128 TO %K_TPDUSIZE_8192;

   7217  1 000435   000007 236007                    LDQ     7,DL
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:86   
         1 000436   200014 756100                    STQ     TEMP,,AUTO

      650     7218    3              IF FPT_CONNECT_OSI.TPDUSIZE <= K_TPDUSZ_VALUES(TEMP)

   7218  1 000437   200014 720100                    LXL0    TEMP,,AUTO
         1 000440   200006 470500                    LDP0    FPT$,,AUTO
         1 000441   000002 236100                    LDQ     2,,PR0
         1 000442   000022 772000                    QRL     18
         1 000443   000000 116010 xsym               CMPQ    K_TPDUSZ_VALUES,X0
         1 000444   000450 605400 1                  TPNZ    s:7223

      651     7219    4              THEN DO;

      652     7220    4                   KI$TCTX.SSN.TPDUSZ_PARM = TEMP;

   7220  1 000445   200004 471500                    LDP1    TCTX$,,AUTO
         1 000446   100014 740100                    STX0    12,,PR1

      653     7221    4                   GOTO CHECK_TPDUSZ;

   7221  1 000447   000455 710000 1                  TRA     CHECK_TPDUSZ

      654     7222    4                   END;
      655     7223    3              END/*do 7 to 13*/;

   7223  1 000450   200014 235100                    LDA     TEMP,,AUTO
         1 000451   000001 035007                    ADLA    1,DL
         1 000452   200014 755100                    STA     TEMP,,AUTO
         1 000453   000016 115007                    CMPA    14,DL
         1 000454   000437 602000 1                  TNC     s:7218

      656     7224
      657     7225    2   CHECK_TPDUSZ:
      658     7226    2         IF KI$TCTX.SSN.CLASS ~= 0

   7226  1 000455   200004 471500       CHECK_TPDUSZ LDP1    TCTX$,,AUTO
         1 000456   100016 236100                    LDQ     14,,PR1
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:87   
         1 000457   000777 316003                    CANQ    511,DU
         1 000460   000466 600000 1                  TZE     s:7232

      659     7227    3         THEN DO;

      660     7228    3              IF KI$TCTX.SSN.TPDUSZ_PARM = 0

   7228  1 000461   100014 220100                    LDX0    12,,PR1
         1 000462   000474 601000 1                  TNZ     s:7236

      661     7229    3              THEN KI$TCTX.SSN.TPDUSZ_PARM = %K_TPDUSIZE_8192;

   7229  1 000463   000015 221003                    LDX1    13,DU
         1 000464   100014 741100                    STX1    12,,PR1

      662     7230    3              END;

   7230  1 000465   000474 710000 1                  TRA     s:7236

      663     7231    3         ELSE DO;

      664     7232    3              IF KI$TCTX.SSN.TPDUSZ_PARM=0 OR KI$TCTX.SSN.TPDUSZ_PARM>%K_TPDUSIZE_2048

   7232  1 000466   100014 220100                    LDX0    12,,PR1
         1 000467   000472 600000 1                  TZE     s:7233
         1 000470   000014 100003                    CMPX0   12,DU
         1 000471   000474 602000 1                  TNC     s:7236

      665     7233    3              THEN KI$TCTX.SSN.TPDUSZ_PARM = %K_TPDUSIZE_2048;

   7233  1 000472   000013 221003                    LDX1    11,DU
         1 000473   100014 741100                    STX1    12,,PR1

      666     7234    3              END;

      667     7235
      668     7236    2         IF KI$TCTX.SSN.TR_FLAGS.EXTENDED = '0'B
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:88   

   7236  1 000474   000004 316007                    CANQ    4,DL
         1 000475   000500 601000 1                  TNZ     s:7239

      669     7237    2         THEN KI$TCTX.SSN.WINDOWSZ = 15;

   7237  1 000476   000017 220003                    LDX0    15,DU
         1 000477   100014 440100                    SXL0    12,,PR1

      670     7238
      671     7239    2         K$RWPARM.FPT$ = ADDR(KI$TCTX.SSN);

   7239  1 000500   200004 236100                    LDQ     TCTX$,,AUTO
         1 000501   000012 036003                    ADLQ    10,DU
         1 000502   200003 473500                    LDP3    @K$RWPARM,,AUTO
         1 000503   300017 756100                    STQ     15,,PR3

      672     7240
      673     7241    2         CALL KIT$SEND_CR(K$RWPARM)

   7241  1 000504   200003 630500                    EPPR0   @K$RWPARM,,AUTO
         1 000505   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000506   000000 701000 xent               TSX1    KIT$SEND_CR
         1 000507   000522 702000 1                  TSX2    RELTCTX_N_ALTRETURN

      674     7242    3         WHENRETURN DO;

      675     7243    3              KI$TCTX.NODE = K$RWPARM.FEX;

   7243  1 000510   200004 470500                    LDP0    TCTX$,,AUTO
         1 000511   200003 471500                    LDP1    @K$RWPARM,,AUTO
         1 000512   100021 236100                    LDQ     17,,PR1
         1 000513   000022 736000                    QLS     18
         1 000514   000000 552120                    STBQ    0,'20'O,PR0

      676     7244    3              KI$TCTX.LOCAL_FEP = K$RWPARM.LOCAL_FEP;

PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:89   
   7244  1 000515   200004 470500                    LDP0    TCTX$,,AUTO
         1 000516   100032 236100                    LDQ     26,,PR1
         1 000517   000033 736000                    QLS     27
         1 000520   000002 552140                    STBQ    2,'40'O,PR0

      677     7245    3              END;

   7245  1 000521   000537 710000 1                  TRA     s:7255

      678     7246    3         WHENALTRETURN DO;

   7244  1 000522                       RELTCTX_N_A* null
      679     7247    3   RELTCTX_N_ALTRETURN: ;
      680     7248    3              K$RWPARM.TCTX# = 0;

   7248  1 000522   000000 220003                    LDX0    0,DU
         1 000523   200003 470500                    LDP0    @K$RWPARM,,AUTO
         1 000524   000033 740100                    STX0    27,,PR0

      681     7249    3              KI$TCTX.STATE = %KI_TSTATE_CLOSED;

   7249  1 000525   200004 471500                    LDP1    TCTX$,,AUTO
         1 000526   002000 236003                    LDQ     1024,DU
         1 000527   100000 552140                    STBQ    0,'40'O,PR1

      682     7250    3              CALL KIT$RELTCTX(TCTX$);

   7250  1 000530   200004 631500                    EPPR1   TCTX$,,AUTO
         1 000531   200020 451500                    STP1    K$TPDU_DT+2,,AUTO
         1 000532   200020 630500                    EPPR0   K$TPDU_DT+2,,AUTO
         1 000533   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000534   000000 701000 xent               TSX1    KIT$RELTCTX
         1 000535   000000 011000                    NOP     0

      683     7251    3              GOTO UNLOCK_N_ALTRETURN;

   7251  1 000536   001032 710000 1                  TRA     UNLOCK_N_ALTRETURN
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:90   

      684     7252    3              END;
      685     7253
      686     7254
      687     7255    2         GOTO UNLOCK_N_RETURN;

   7255  1 000537   001053 710000 1                  TRA     UNLOCK_N_RETURN

      688     7256
      689     7257        %EJECT;
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:91   
      690     7258        /* Connect response received from OSI Session.
      691     7259        */
      692     7260    2       CASE(%K_TCONNECT_RSP);

      693     7261
      694     7262    2         IF KI$TCTX.STATE = %KI_TSTATE_WFTRESP

   7262  1 000540   200004 471500                    LDP1    TCTX$,,AUTO
         1 000541   100000 236100                    LDQ     0,,PR1
         1 000542   777000 376003                    ANQ     -512,DU
         1 000543   006000 116003                    CMPQ    3072,DU
         1 000544   000626 601000 1                  TNZ     s:7290

      695     7263    3         THEN DO;

      696     7264    3              KI$TCTX.SSN.SCID = FPT_CONNECT_OSI.SCID;

   7264  1 000545   200006 473500                    LDP3    FPT$,,AUTO
         1 000546   300005 235100                    LDA     5,,PR3
         1 000547   100017 755100                    STA     15,,PR1

      697     7265    3              KI$TCTX.SSN.TR_FLAGS.TRACE = FPT_CONNECT_OSI.TR_FLAGS.TRACE;

   7265  1 000550   300004 236100                    LDQ     4,,PR3
         1 000551   100016 676100                    ERQ     14,,PR1
         1 000552   000100 376007                    ANQ     64,DL
         1 000553   100016 656100                    ERSQ    14,,PR1

      698     7266
      699     7267    3              IF KI$TCTX.SSN.CLASS = 4

   7267  1 000554   100016 236100                    LDQ     14,,PR1
         1 000555   000777 376003                    ANQ     511,DU
         1 000556   000004 116003                    CMPQ    4,DU
         1 000557   000563 601000 1                  TNZ     s:7270

      700     7268    3              THEN KI$TCTX.STATE = %KI_TSTATE_AKWAIT;
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:92   

   7268  1 000560   007000 236003                    LDQ     3584,DU
         1 000561   100000 552140                    STBQ    0,'40'O,PR1
         1 000562   000573 710000 1                  TRA     s:7274

      701     7269    4              ELSE DO;

      702     7270    4                   KI$TCTX.STATE = %KI_TSTATE_OPEN;

   7270  1 000563   005000 236003                    LDQ     2560,DU
         1 000564   100000 552140                    STBQ    0,'40'O,PR1

      703     7271    4                   K$RWPARM.FEX = KI$TCTX.NODE;

   7271  1 000565   200004 470500                    LDP0    TCTX$,,AUTO
         1 000566   000000 236100                    LDQ     0,,PR0
         1 000567   000022 772000                    QRL     18
         1 000570   000777 376007                    ANQ     511,DL
         1 000571   200003 471500                    LDP1    @K$RWPARM,,AUTO
         1 000572   100021 756100                    STQ     17,,PR1

      704     7272    4                   END;

      705     7273
      706     7274    3              CALL KIT$SEND_CC(K$RWPARM) ALTRET(UNLOCK_N_ALTRETURN);

   7274  1 000573   200003 630500                    EPPR0   @K$RWPARM,,AUTO
         1 000574   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000575   000000 701000 xent               TSX1    KIT$SEND_CC
         1 000576   001032 702000 1                  TSX2    UNLOCK_N_ALTRETURN

      707     7275
      708     7276    3              IF (KI$TCTX.SSN.TR_FLAGS & %KI_TRFLGS_CP6)

   7276  1 000577   200004 470500                    LDP0    TCTX$,,AUTO
         1 000600   000016 720100                    LXL0    14,,PR0
         1 000601   000700 360003                    ANX0    448,DU
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:93   
         1 000602   000625 600000 1                  TZE     s:7286

      709     7277    4              THEN DO;

      710     7278    4                   TPDU$->B$TPDU_CP6_OPTN.P = '0'B;

   7278  1 000603   200007 471500                    LDP1    TPDU$,,AUTO
         1 000604   000100 100400                    MLR     fill='000'O
         1 000605   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         1 000606   100001 000004                    ADSC9   1,,PR1                   cn=0,n=4

      711     7279    4                   TPDU$->B$TPDU_CP6_OPTN.P.CODE = %K_TPARM_CP6_OPTIONS;

   7279  1 000607   000100 101400                    MRL     fill='000'O
         1 000610   000004 000004 xsym               ADSC9   B_VECTNIL+4              cn=0,n=4
         1 000611   100001 000001                    ADSC9   1,,PR1                   cn=0,n=1

      712     7280    4                   TPDU$->B$TPDU_CP6_OPTN.P.LEN = 2;

   7280  1 000612   000100 101400                    MRL     fill='000'O
         1 000613   000004 000004 xsym               ADSC9   B_VECTNIL+4              cn=0,n=4
         1 000614   100001 200001                    ADSC9   1,,PR1                   cn=1,n=1

      713     7281    4                   TPDU$->B$TPDU_CP6_OPTN.P.OPTION = KI$TCTX.SSN.TR_FLAGS;

   7281  1 000615   200004 470500                    LDP0    TCTX$,,AUTO
         1 000616   000100 100500                    MLR     fill='000'O
         1 000617   000016 400002                    ADSC9   14,,PR0                  cn=2,n=2
         1 000620   100001 400002                    ADSC9   1,,PR1                   cn=2,n=2

      714     7282
      715     7283    4                   TPDU$->B$TPDU_CP6_OPTN.LI = SIZEC(B$TPDU_CP6_OPTN) -1;

   7283  1 000621   000100 101400                    MRL     fill='000'O
         1 000622   000011 000004 xsym               ADSC9   B_VECTNIL+9              cn=0,n=4
         1 000623   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1

PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:94   
      716     7284    4                   GOTO SEND_TPDU_CP6;

   7284  1 000624   000767 710000 1                  TRA     SEND_TPDU_CP6

      717     7285    4                   END;
      718     7286    3              GOTO UNLOCK_N_RETURN;

   7286  1 000625   001053 710000 1                  TRA     UNLOCK_N_RETURN

      719     7287    3              END;
      720     7288
      721     7289    3         ELSE DO;

      722     7290    3              K$RWPARM.FUNCTION = %K_TDISCONNECT_IND;

   7290  1 000626   000031 235007                    LDA     25,DL
         1 000627   200003 473500                    LDP3    @K$RWPARM,,AUTO
         1 000630   300020 755100                    STA     16,,PR3

      723     7291    3              K$RWPARM.TCTX$ = ADDR(KI$TCTX);

   7291  1 000631   200004 236100                    LDQ     TCTX$,,AUTO
         1 000632   300017 756100                    STQ     15,,PR3

      724     7292    3              KI$TCTX.STATE = %KI_TSTATE_CLOSING;

   7292  1 000633   010000 236003                    LDQ     4096,DU
         1 000634   100000 552140                    STBQ    0,'40'O,PR1

      725     7293
      726     7294    3              CALL KIS$OSI_RECV(K$RWPARM);

   7294  1 000635   200003 630500                    EPPR0   @K$RWPARM,,AUTO
         1 000636   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000637   000000 701000 xent               TSX1    KIS$OSI_RECV
         1 000640   000000 011000                    NOP     0

PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:95   
      727     7295    3              GOTO SKIP_DR;

   7295  1 000641   000707 710000 1                  TRA     SKIP_DR

      728     7296    3              END;
      729     7297
      730     7298        %EJECT;
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:96   
      731     7299        /* Disconnect request received from OSI Session.
      732     7300        */
      733     7301    2       CASE(%K_TDISCONNECT_REQ);

      734     7302
      735     7303    2         KI$TCTX.REASON = %K_REASON_NORMAL;

   7303  1 000642   200004 471500                    LDP1    TCTX$,,AUTO
         1 000643   200000 236007                    LDQ     65536,DL
         1 000644   100000 552110                    STBQ    0,'10'O,PR1

      736     7304
      737     7305    2         IF K$RWPARM.ERR ~= 0

   7305  1 000645   200003 470500                    LDP0    @K$RWPARM,,AUTO
         1 000646   000013 235100                    LDA     11,,PR0
         1 000647   000654 600000 1                  TZE     s:7307

      738     7306    2         THEN KI$TCTX.ERR = K$RWPARM.ERR;

   7306  1 000650   200004 471500                    LDP1    TCTX$,,AUTO
         1 000651   000013 236100                    LDQ     11,,PR0
         1 000652   100000 552104                    STBQ    0,'04'O,PR1
         1 000653   000657 710000 1                  TRA     s:7309

      739     7307    2         ELSE KI$TCTX.ERR = %K_ERROR_DISCONNECT_REQ;

   7307  1 000654   200004 471500                    LDP1    TCTX$,,AUTO
         1 000655   000367 236007                    LDQ     247,DL
         1 000656   100000 552104                    STBQ    0,'04'O,PR1

      740     7308
      741     7309    2         TEMP = KI$TCTX.SRC_REF;

   7309  1 000657   200004 471500                    LDP1    TCTX$,,AUTO
         1 000660   100001 236100                    LDQ     1,,PR1
         1 000661   777777 376007                    ANQ     -1,DL
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:97   
         1 000662   200014 756100                    STQ     TEMP,,AUTO

      742     7310
      743     7311    3         DO CASE(KI$TCTX.STATE);

   7311  1 000663   100000 236100                    LDQ     0,,PR1
         1 000664   000033 772000                    QRL     27
         1 000665   000010 116007                    CMPQ    8,DL
         1 000666   000670 602006 1                  TNC     s:7311+5,QL
         1 000667   000730 710000 1                  TRA     s:7331
         1 000670   000730 710000 1                  TRA     s:7331
         1 000671   000730 710000 1                  TRA     s:7331
         1 000672   000730 710000 1                  TRA     s:7331
         1 000673   000700 710000 1                  TRA     SEND_DR
         1 000674   000727 710000 1                  TRA     s:7327
         1 000675   000700 710000 1                  TRA     SEND_DR
         1 000676   000724 710000 1                  TRA     s:7323
         1 000677   000700 710000 1                  TRA     SEND_DR

      744     7312
      745     7313    3          CASE(%KI_TSTATE_WFCC, %KI_TSTATE_OPEN, %KI_TSTATE_AKWAIT);

   7307  1 000700                       SEND_DR      null
      746     7314    3   SEND_DR: ;
      747     7315    3            K$RWPARM.TCTX$ = TCTX$;

   7315  1 000700   200004 236100                    LDQ     TCTX$,,AUTO
         1 000701   200003 470500                    LDP0    @K$RWPARM,,AUTO
         1 000702   000017 756100                    STQ     15,,PR0

      748     7316    3            CALL KIT$SEND_DR (K$RWPARM);

   7316  1 000703   200003 630500                    EPPR0   @K$RWPARM,,AUTO
         1 000704   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000705   000000 701000 xent               TSX1    KIT$SEND_DR
         1 000706   000000 011000                    NOP     0

PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:98   
      749     7317    3   SKIP_DR:
      750     7318    3            KI$TCTX.STATE = %KI_TSTATE_CLOSED;

   7318  1 000707   200004 470500       SKIP_DR      LDP0    TCTX$,,AUTO
         1 000710   002000 236003                    LDQ     1024,DU
         1 000711   000000 552140                    STBQ    0,'40'O,PR0

      751     7319    3            KI$TCTX.SRC_REF = TEMP;

   7319  1 000712   200014 720100                    LXL0    TEMP,,AUTO
         1 000713   200004 470500                    LDP0    TCTX$,,AUTO
         1 000714   000001 440100                    SXL0    1,,PR0

      752     7320    3            CALL KIT$RELTCTX(TCTX$);

   7320  1 000715   200004 630500                    EPPR0   TCTX$,,AUTO
         1 000716   200020 450500                    STP0    K$TPDU_DT+2,,AUTO
         1 000717   200020 630500                    EPPR0   K$TPDU_DT+2,,AUTO
         1 000720   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000721   000000 701000 xent               TSX1    KIT$RELTCTX
         1 000722   000000 011000                    NOP     0
         1 000723   000730 710000 1                  TRA     s:7331

      753     7321
      754     7322    3          CASE(%KI_TSTATE_WFTRESP);

      755     7323    3            KI$TCTX.SRC_REF = 0;

   7323  1 000724   000000 220003                    LDX0    0,DU
         1 000725   100001 440100                    SXL0    1,,PR1

      756     7324    3            GOTO SEND_DR;

   7324  1 000726   000700 710000 1                  TRA     SEND_DR

      757     7325
      758     7326    3          CASE(%KI_TSTATE_WBCL);
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:99   

      759     7327    3            GOTO SKIP_DR;

   7327  1 000727   000707 710000 1                  TRA     SKIP_DR

      760     7328
      761     7329    3            END/*select tstate*/;

      762     7330
      763     7331    2         GOTO UNLOCK_N_RETURN;

   7331  1 000730   001053 710000 1                  TRA     UNLOCK_N_RETURN

      764     7332
      765     7333
      766     7334        %EJECT;
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:100  
      767     7335        /* Adjust Credit request received from OSI Session.
      768     7336        */
      769     7337
      770     7338    2       CASE(%K_TCREDIT);

      771     7339
      772     7340    2         TPDU$->B$TPDU_CP6_CRDT.LI = SIZEC(B$TPDU_CP6_OPTN) -1;

   7340  1 000731   200007 471500                    LDP1    TPDU$,,AUTO
         1 000732   007000 236003                    LDQ     3584,DU
         1 000733   100000 552140                    STBQ    0,'40'O,PR1

      773     7341    2         TPDU$->B$TPDU_CP6_CRDT.P.CODE = %K_TPARM_SSN_CRDT;

   7341  1 000734   001000 236003                    LDQ     512,DU
         1 000735   100001 552140                    STBQ    1,'40'O,PR1

      774     7342    2         TPDU$->B$TPDU_CP6_CRDT.P.LEN = 2;

   7342  1 000736   000002 236003                    LDQ     2,DU
         1 000737   100001 552120                    STBQ    1,'20'O,PR1

      775     7343
      776     7344    2         IF K$RWPARM.SSN_CRDT > 0

   7344  1 000740   200003 470500                    LDP0    @K$RWPARM,,AUTO
         1 000741   000025 235100                    LDA     21,,PR0
         1 000742   000754 604400 1                  TMOZ    s:7350

      777     7345    3         THEN DO;

      778     7346    3              KI$TCTX.SSN_CRDT = KI$TCTX.SSN_CRDT + K$RWPARM.SSN_CRDT;

   7346  1 000743   200004 473500                    LDP3    TCTX$,,AUTO
         1 000744   300011 236100                    LDQ     9,,PR3
         1 000745   000022 772000                    QRL     18
         1 000746   000025 036100                    ADLQ    21,,PR0
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:101  
         1 000747   000000 620006                    EAX0    0,QL
         1 000750   300011 740100                    STX0    9,,PR3

      779     7347    3              TPDU$->B$TPDU_CP6_CRDT.P.CREDIT = K$RWPARM.SSN_CRDT;

   7347  1 000751   000025 721100                    LXL1    21,,PR0
         1 000752   100001 441100                    SXL1    1,,PR1

      780     7348    3              END;

   7348  1 000753   000760 710000 1                  TRA     s:7354

      781     7349    3         ELSE DO;

      782     7350    3              KI$TCTX.SSN_CRDT = 0;

   7350  1 000754   000000 220003                    LDX0    0,DU
         1 000755   200004 473500                    LDP3    TCTX$,,AUTO
         1 000756   300011 740100                    STX0    9,,PR3

      783     7351    3              TPDU$->B$TPDU_CP6_CRDT.P.CREDIT = 0;

   7351  1 000757   100001 440100                    SXL0    1,,PR1

      784     7352    3              END;

      785     7353
      786     7354    2         IF (KI$TCTX.STATE~=%KI_TSTATE_OPEN) AND (KI$TCTX.STATE~=%KI_TSTATE_AKWAIT)

   7354  1 000760   200004 473500                    LDP3    TCTX$,,AUTO
         1 000761   300000 236100                    LDQ     0,,PR3
         1 000762   777000 376003                    ANQ     -512,DU
         1 000763   005000 116003                    CMPQ    2560,DU
         1 000764   000767 600000 1                  TZE     SEND_TPDU_CP6
         1 000765   007000 116003                    CMPQ    3584,DU
         1 000766   001053 601000 1                  TNZ     UNLOCK_N_RETURN

PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:102  
      787     7355    2         THEN GOTO UNLOCK_N_RETURN;
      788     7356
      789     7357    2   SEND_TPDU_CP6:
      790     7358    2         TPDU$->B$TPDU_CP6_CRDT.TYPE = %K_TPDU_TYPE_CP6;

   7358  1 000767   000003 236000 2     SEND_TPDU_C* LDQ     3
         1 000770   100000 356100                    ANSQ    0,,PR1

      791     7359    2         TPDU$->B$TPDU_CP6_CRDT.MBZ = 0;

   7359  1 000771   000004 236000 2                  LDQ     4
         1 000772   100000 356100                    ANSQ    0,,PR1

      792     7360    2         TPDU$->B$TPDU_CP6_CRDT.DST_REF = KI$TCTX.DST_REF;

   7360  1 000773   200004 470500                    LDP0    TCTX$,,AUTO
         1 000774   000001 220100                    LDX0    1,,PR0
         1 000775   100000 440100                    SXL0    0,,PR1

      793     7361
      794     7362    2         K$RWPARM.THDR$ = TPDU$;

   7362  1 000776   200007 236100                    LDQ     TPDU$,,AUTO
         1 000777   200003 470500                    LDP0    @K$RWPARM,,AUTO
         1 001000   000024 756100                    STQ     20,,PR0

      795     7363    2         K$RWPARM.THDRSZ = TPDU$->B$TPDU_CP6_CRDT.LI +1;

   7363  1 001001   100000 236100                    LDQ     0,,PR1
         1 001002   000033 772000                    QRL     27
         1 001003   000001 036007                    ADLQ    1,DL
         1 001004   000025 756100                    STQ     21,,PR0

      796     7364    2         K$RWPARM.FUNCTION = %K_NDATA;

   7364  1 001005   000041 235007                    LDA     33,DL
         1 001006   000020 755100                    STA     16,,PR0
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:103  

      797     7365    2         K$RWPARM.FEX = KI$TCTX.NODE;

   7365  1 001007   200004 473500                    LDP3    TCTX$,,AUTO
         1 001010   300000 236100                    LDQ     0,,PR3
         1 001011   000022 772000                    QRL     18
         1 001012   000777 376007                    ANQ     511,DL
         1 001013   000021 756100                    STQ     17,,PR0

      798     7366
      799     7367    2         CALL KIN$SEND(K$RWPARM) ALTRET(LOG_ALTRET);

   7367  1 001014   200003 630500                    EPPR0   @K$RWPARM,,AUTO
         1 001015   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001016   000000 701000 xent               TSX1    KIN$SEND
         1 001017   000314 702000 1                  TSX2    LOG_ALTRET

      800     7368
      801     7369    2         GOTO UNLOCK_N_RETURN;

   7369  1 001020   001053 710000 1                  TRA     UNLOCK_N_RETURN

      802     7370
      803     7371
      804     7372    2       CASE(ELSE);

      805     7373    2         CALL SC_BADFNC;                   /*full screech*/

   7373  1 001021   000000 713400 xsym               CLIMB   SC_BADFNC
         1 001022   000000 600000 xsid               climb   nvectors=         0

      806     7374
      807     7375    2         GOTO UNLOCK_N_RETURN;

   7375  1 001023   001053 710000 1                  TRA     UNLOCK_N_RETURN

      808     7376
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:104  
      809     7377    2         END/*do case(function)*/;

      810     7378
      811     7379        %EJECT;
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:105  
      812     7380
      813     7381    1   REPORT_BAD_TSTATE: ;

   7381  1 001024                       REPORT_BAD_* null
      814     7382    1      KIT_BAD_TSTATE = KIT_BAD_TSTATE +1;

   7382  1 001024   000000 235000 xsym               LDA     KIT_BAD_TSTATE
         1 001025   000001 035007                    ADLA    1,DL
         1 001026   000000 755000 xsym               STA     KIT_BAD_TSTATE

      815     7383    1      K$RWPARM.MSG_ERRCODE = E$TR_STATE;

   7383  1 001027   000004 236000 0                  LDQ     E$TR_STATE
         1 001030   200003 470500                    LDP0    @K$RWPARM,,AUTO
         1 001031   000037 756100                    STQ     31,,PR0

   7383  1 001032                       UNLOCK_N_AL* null
      816     7384
      817     7385        /*E* ERROR: KIT-E$TR_STATE-E
      818     7386             MESSAGE: The transport connection is not open
      819     7387        */
      820     7388
      821     7389    1   UNLOCK_N_ALTRETURN: ;
      822     7390    1      IF TCTX$ ~= ADDR(NIL)

   7390  1 001032   200004 236100                    LDQ     TCTX$,,AUTO
         1 001033   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 001034   001041 600000 1                  TZE     s:7393

      823     7391    1      THEN KI$TCTX.ERR = K$RWPARM.ERR;

   7391  1 001035   200003 470500                    LDP0    @K$RWPARM,,AUTO
         1 001036   200004 471500                    LDP1    TCTX$,,AUTO
         1 001037   000013 236100                    LDQ     11,,PR0
         1 001040   100000 552104                    STBQ    0,'04'O,PR1

      824     7392
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:106  
      825     7393    1      IF K$RWPARM.MSG_ERRCODE ~= '0'B

   7393  1 001041   200003 470500                    LDP0    @K$RWPARM,,AUTO
         1 001042   000037 235100                    LDA     31,,PR0
         1 001043   001046 600000 1                  TZE     s:7397

      826     7394    1      THEN K$RWPARM.ERR = %K$USER_ERR;

   7394  1 001044   000010 236007                    LDQ     8,DL
         1 001045   000013 756100                    STQ     11,,PR0

      827     7395
      828     7396           %UNLOCK (G=KIT_SEND_LOCK);

   7397  1 001046   000000 630400 2                  EPPR0   0
         1 001047   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001050   000000 701000 xent               TSX1    HFC$UNLOCK
         1 001051   000000 011000                    NOP     0

      829     7399    1      ALTRETURN;

   7399  1 001052   000000 702200 xent               TSX2  ! X66_AALT

   7393  1 001053                       UNLOCK_N_RE* null
      830     7400
      831     7401
      832     7402    1   UNLOCK_N_RETURN: ;
      833     7403    1      IF TCTX$ ~= ADDR(NIL)

   7403  1 001053   200004 236100                    LDQ     TCTX$,,AUTO
         1 001054   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 001055   001062 600000 1                  TZE     s:7407

      834     7404    1      THEN KI$TCTX.ERR = K$RWPARM.ERR;

   7404  1 001056   200003 470500                    LDP0    @K$RWPARM,,AUTO
         1 001057   200004 471500                    LDP1    TCTX$,,AUTO
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:107  
         1 001060   000013 236100                    LDQ     11,,PR0
         1 001061   100000 552104                    STBQ    0,'04'O,PR1

      835     7405
      836     7406           %UNLOCK (G=KIT_SEND_LOCK);

   7407  1 001062   000000 630400 2                  EPPR0   0
         1 001063   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001064   000000 701000 xent               TSX1    HFC$UNLOCK
         1 001065   000000 011000                    NOP     0

      837     7409    1      RETURN;

   7409  1 001066   000000 702200 xent               TSX2  ! X66_ARET

E$DATA_SZ
 Sect OctLoc
   0     000   131124 431564                                                    YT..

E$NOEXPD
 Sect OctLoc
   0     001   131124 431574                                                    YT..

E$CLASSOPT
 Sect OctLoc
   0     002   131124 431604                                                    YT..

E$NOTCTX
 Sect OctLoc
   0     003   131124 431614                                                    YT..

E$TR_STATE
 Sect OctLoc
   0     004   131124 431624                                                    YT..

(unnamed)
 Sect OctLoc
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:108  
   2     000   000000 006000   000000 000017   777777 777776   777417 777777    ................
   2     004   777760 777777                                                    ....
      838     7410    1   END KIT$SEND;
      839     7411        %EOD;

PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:109  
--  Include file information  --

   UD_SEV_C.:E05TOU  is referenced.
   KI_ERRORS_C.:E05TOU  is referenced.
   UM_CP6.:E05TOU  is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   KI_MACROS_C.:E05TOU  is referenced.
   K_INTERFACE_M.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   K_TRANSPORT_E.:E05TOU  is referenced.
   K_TRANSPORT_M.:E05TOU  is referenced.
   K_SUBS_C.:E05TOU  is referenced.
   K$RWPARM.:E05TOU  is referenced.
      No diagnostics issued in procedure KIT$SEND.
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:110  

 **** Variables and constants ****

  ****  Section 000  Data  KIT$SEND

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     2-0-0/w STRC        r     1 E$CLASSOPT                 0-0-0/w STRC        r     1 E$DATA_SZ
     1-0-0/w STRC        r     1 E$NOEXPD                   3-0-0/w STRC        r     1 E$NOTCTX
     4-0-0/w STRC        r     1 E$TR_STATE

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @K$RWPARM                  6-0-0/w PTR         r     1 FPT$
    13-0-0/w UBIN        r     1 FUNCTION                  *0-0-0/d STRC(1404)  r     1 K$RWPARM
    16-0-0/w STRC(72)    r     1 K$TPDU_DT                 10-0-0/w PTR         r     1 NEXT$
    15-0-0/w STRC        r     1 NR                        12-0-0/w UBIN        r     1 SPDU_SZ
     5-0-0/w UBIN        r     1 TCTX#                      4-0-0/w PTR         r     1 TCTX$
    14-0-0/w UBIN        r     1 TEMP                      11-0-0/w UBIN        r     1 THDR_SZ
     7-0-0/w PTR         r     1 TPDU$                     15-0-0/w UBIN        r     1 TPDU_NR

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 KIT_BAD_TSTATE             0-0-0/w UBIN        r     1 KIT_DO_CHKSUM
     0-0-0/w UBIN        r     1 KIT_KIN_ALTRET             0-0-0/w UBIN        r     1 KIT_NOT_DATAXFER
     0-0-0/w UBIN        r     1 KIT_OSI_SNAP               0-0-0/b BIT (72)    r     1 KIT_SEND_LOCK
     0-0-0/w UBIN        r     1 KIT_TRANSFER_SZ            0-0-0/w PTR         r     1 KI_TCTX$$
     0-0-0/w UBIN        r     1 KI_TCTX_MAX#
     0-0-0/w SBIN        r     1 K_TPDUSZ_VALUES(0:13)

  ****  BASED and DCB variables  ****
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:111  

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 B$NEXT                     0-0-0/w STRC(72)    r     1 B$TPDU_CP6_CRDT
     0-0-0/c STRC(72)    r     1 B$TPDU_CP6_OPTN            0-0-0/w STRC(1260)  r     1 FPT_CONNECT_OSI
     0-0-0/w STRC(1620)  r     1 KI$TCTX
     0-0-0/w PTR         r     1 KI$TCTX$(0:0)
     0-0-0/c STRC(63)    r     1 TPDU                       0-0-0/c STRC(72)    r     1 TPDU_DT_EXT


   Procedure KIT$SEND requires 567 words for executable code.
   Procedure KIT$SEND requires 18 words of local(AUTO) storage.
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:112  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:113  
          MINI XREF LISTING

B$NEXT
      5430**DCL      7123>>ASSIGN   7142<<ASSIGN   7142>>ASSIGN
B$TPDU_CP6_CRDT.DST_REF
      6572**DCL      7360<<ASSIGN
B$TPDU_CP6_CRDT.LI
      6559**DCL      7340<<ASSIGN   7363>>ASSIGN
B$TPDU_CP6_CRDT.MBZ
      6571**DCL      7359<<ASSIGN
B$TPDU_CP6_CRDT.P.CODE
      6598**DCL      7341<<ASSIGN
B$TPDU_CP6_CRDT.P.CREDIT
      6608**DCL      7347<<ASSIGN   7351<<ASSIGN
B$TPDU_CP6_CRDT.P.LEN
      6603**DCL      7342<<ASSIGN
B$TPDU_CP6_CRDT.TYPE
      6566**DCL      7358<<ASSIGN
B$TPDU_CP6_OPTN
      6633**DCL      7283--ASSIGN   7340--ASSIGN
B$TPDU_CP6_OPTN.LI
      6634**DCL      7283<<ASSIGN
B$TPDU_CP6_OPTN.P
      6671**DCL      7278<<ASSIGN
B$TPDU_CP6_OPTN.P.CODE
      6673**DCL      7279<<ASSIGN
B$TPDU_CP6_OPTN.P.LEN
      6678**DCL      7280<<ASSIGN
B$TPDU_CP6_OPTN.P.OPTION
      6683**DCL      7281<<ASSIGN
CHECK_TPDUSZ
      7226**LABEL    7221--GOTO
E$CLASSOPT
      6816**DCL      7185>>ASSIGN
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:114  
E$DATA_SZ
      6726**DCL      7070>>ASSIGN   7095>>ASSIGN
E$NOEXPD
      6771**DCL      7065>>ASSIGN
E$NOTCTX
      6861**DCL      7196>>ASSIGN
E$TR_STATE
      6906**DCL      7383>>ASSIGN
FPT$
      5348**DCL      6221--IMP-PTR  7001<<ASSIGN   7172>>IF       7174>>IF       7174>>IF       7174>>IF
      7180>>IF       7182>>IF       7208>>ASSIGN   7218>>IF       7264>>ASSIGN   7265>>ASSIGN
FPT_CONNECT_OSI
      6221**DCL      7208>>ASSIGN
FPT_CONNECT_OSI.CLASS
      6260**DCL      7172>>IF       7180>>IF
FPT_CONNECT_OSI.DST_NSAP.ADDRESS_N
      6527**DCL      6528--REDEF
FPT_CONNECT_OSI.SCID
      6331**DCL      7264>>ASSIGN
FPT_CONNECT_OSI.SRC_NSAP.ADDRESS_N
      6467**DCL      6468--REDEF
FPT_CONNECT_OSI.TPDUSIZE
      6230**DCL      6231--REDEF    7218>>IF
FPT_CONNECT_OSI.TR_FLAGS
      6267**DCL      7174>>IF       7182>>IF
FPT_CONNECT_OSI.TR_FLAGS.CLASS_2_FLOW
      6298**DCL      7174>>IF
FPT_CONNECT_OSI.TR_FLAGS.EXPEDITED
      6312**DCL      7174>>IF
FPT_CONNECT_OSI.TR_FLAGS.TRACE
      6277**DCL      7265>>ASSIGN
FUNCTION
      5353**DCL      7002<<ASSIGN   7012>>IF       7020>>IF       7023>>IF       7027>>DOCASE   7061>>IF
      7110>>IF
HFC$LOCK
      4074**DCL-ENT  7009--CALL
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:115  
HFC$UNLOCK
      4074**DCL-ENT  7397--CALL     7407--CALL
K$RWPARM
      5049**DCL        10--PROC     7140<>CALL     7241<>CALL     7274<>CALL     7294<>CALL     7316<>CALL
      7367<>CALL
K$RWPARM.BLKREC
      5075**DCL      5100--REDEF
K$RWPARM.BLKREC.BLKU#
      5076**DCL      5078--REDEF
K$RWPARM.BLKREC.RECU#
      5088**DCL      5090--REDEF
K$RWPARM.DVE.DVBYTE.VFC
      5115**DCL      5116--REDEF
K$RWPARM.DVE.EOMCHAR
      5123**DCL      5127--REDEF
K$RWPARM.ERR
      5187**DCL      5192--REDEF    7005<<ASSIGN   7147>>IF       7305>>IF       7306>>ASSIGN   7391>>ASSIGN
      7394<<ASSIGN   7404>>ASSIGN
K$RWPARM.FC
      5151**DCL      5152--REDEF
K$RWPARM.FEX
      5233**DCL      7047>>IF       7138<<ASSIGN   7243>>ASSIGN   7271<<ASSIGN   7365<<ASSIGN
K$RWPARM.FLDID
      5333**DCL      5334--REDEF
K$RWPARM.FPT$
      5214**DCL      5221--REDEF    7001>>ASSIGN   7239<<ASSIGN
K$RWPARM.FUNCTION
      5228**DCL      7002>>ASSIGN   7135<<ASSIGN   7136<<ASSIGN   7290<<ASSIGN   7364<<ASSIGN
K$RWPARM.KEYTYPE
      5340**DCL      5341--REDEF
K$RWPARM.LOCAL_FEP
      5280**DCL      7244>>ASSIGN
K$RWPARM.MSG$
      5050**DCL      5056--REDEF
K$RWPARM.MSGID
      5162**DCL      5167--REDEF
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:116  
K$RWPARM.MSGIDXT
      5175**DCL      5179--REDEF
K$RWPARM.MSGSZ
      5057**DCL      7059>>ASSIGN
K$RWPARM.MSG_ERRCODE
      5310**DCL      7006<<ASSIGN   7065<<ASSIGN   7070<<ASSIGN   7095<<ASSIGN   7185<<ASSIGN   7196<<ASSIGN
      7383<<ASSIGN   7393>>IF
K$RWPARM.ORG
      5311**DCL      5312--REDEF
K$RWPARM.SHDRSZ
      5247**DCL      7059>>ASSIGN
K$RWPARM.SSN_CRDT
      5259**DCL      7344>>IF       7346>>ASSIGN   7347>>ASSIGN
K$RWPARM.TCTX#
      5285**DCL      6999>>ASSIGN   7206<<ASSIGN   7248<<ASSIGN
K$RWPARM.TCTX$
      5221**DCL      7291<<ASSIGN   7315<<ASSIGN
K$RWPARM.THDR$
      5251**DCL      7099<<ASSIGN   7362<<ASSIGN
K$RWPARM.THDRSZ
      5255**DCL      5259--REDEF    7100<<ASSIGN   7363<<ASSIGN
K$RWPARM.UHDRSZ
      5205**DCL      7059>>ASSIGN
K$RWPARM.VDOFLGS
      5313**DCL      5324--REDEF
K$TPDU_DT
      5379**DCL      7003--ASSIGN
K$TPDU_DT.TPDU_NR
      5406**DCL      5414--REDEF    5422--REDEF
KI$TCTX
      5432**DCL      7291--ASSIGN
KI$TCTX.DST_REF
      5459**DCL      7105>>ASSIGN   7360>>ASSIGN
KI$TCTX.ERR
      5453**DCL      7094<<ASSIGN   7306<<ASSIGN   7307<<ASSIGN   7391<<ASSIGN   7404<<ASSIGN
KI$TCTX.FLOW_CONTROLLED
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:117  
      5512**DCL      7160<<ASSIGN
KI$TCTX.LOCAL_FEP
      5475**DCL      7244<<ASSIGN
KI$TCTX.NODE
      5439**DCL      7047>>IF       7138>>ASSIGN   7243<<ASSIGN   7271>>ASSIGN   7365>>ASSIGN
KI$TCTX.OUTBOUND
      5504**DCL      7211<<ASSIGN
KI$TCTX.REASON
      5447**DCL      7303<<ASSIGN
KI$TCTX.SEND_EXPD
      5551**DCL      7113--ASSIGN
KI$TCTX.SEND_NEXT
      5543**DCL      7118--ASSIGN
KI$TCTX.SRC_REF
      5467**DCL      7205>>ASSIGN   7309>>ASSIGN   7319<<ASSIGN   7323<<ASSIGN
KI$TCTX.SSN
      5584**DCL      7208<<ASSIGN   7239--ASSIGN
KI$TCTX.SSN.CLASS
      5621**DCL      7226>>IF       7267>>IF
KI$TCTX.SSN.DST_NSAP.ADDRESS_N
      5888**DCL      5889--REDEF
KI$TCTX.SSN.SCID
      5692**DCL      7264<<ASSIGN
KI$TCTX.SSN.SRC_NSAP.ADDRESS_N
      5828**DCL      5829--REDEF
KI$TCTX.SSN.TPDUSIZE
      5591**DCL      5592--REDEF
KI$TCTX.SSN.TPDUSZ_PARM
      5592**DCL      7220<<ASSIGN   7228>>IF       7229<<ASSIGN   7232>>IF       7232>>IF       7233<<ASSIGN
KI$TCTX.SSN.TR_FLAGS
      5628**DCL      7276>>IF       7281>>ASSIGN
KI$TCTX.SSN.TR_FLAGS.CHKSUM
      5685**DCL      7215<<ASSIGN
KI$TCTX.SSN.TR_FLAGS.EXPEDITED
      5673**DCL      7063>>IF
KI$TCTX.SSN.TR_FLAGS.EXTENDED
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:118  
      5666**DCL      7236>>IF
KI$TCTX.SSN.TR_FLAGS.OSI
      5653**DCL      7045>>IF       7134>>IF       7151>>IF       7209<<ASSIGN
KI$TCTX.SSN.TR_FLAGS.TRACE
      5638**DCL      7265<<ASSIGN
KI$TCTX.SSN.WINDOWSZ
      5599**DCL      7237<<ASSIGN
KI$TCTX.SSN_CRDT
      5557**DCL      7346<<ASSIGN   7346>>ASSIGN   7350<<ASSIGN
KI$TCTX.STATE
      5433**DCL      7034>>IF       7034>>IF       7037>>IF       7037>>IF       7037>>IF       7158>>IF
      7213<<ASSIGN   7249<<ASSIGN   7262>>IF       7268<<ASSIGN   7270<<ASSIGN   7292<<ASSIGN   7311>>DOCASE
      7318<<ASSIGN   7354>>IF       7354>>IF
KI$TCTX$
      5429**DCL      7018>>ASSIGN
KIN$SEND
      6940**DCL-ENT  7140--CALL     7367--CALL
KIS$OSI_RECV
      6941**DCL-ENT  7294--CALL
KIT$GETTCTX
      6942**DCL-ENT  7194--CALL
KIT$RELTCTX
      6943**DCL-ENT  7250--CALL     7320--CALL
KIT$SEND_CC
      6945**DCL-ENT  7274--CALL
KIT$SEND_CR
      6944**DCL-ENT  7241--CALL
KIT$SEND_DR
      6946**DCL-ENT  7316--CALL
KIT_BAD_TSTATE
      6709**DCL      7382<<ASSIGN   7382>>ASSIGN
KIT_DO_CHKSUM
      6702**DCL      7215>>IF
KIT_KIN_ALTRET
      6706**DCL      7149<<ASSIGN   7149>>ASSIGN
KIT_NOT_DATAXFER
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:119  
      6708**DCL      7041<<ASSIGN   7041>>ASSIGN
KIT_OSI_SNAP
      6711**DCL      7151>>IF
KIT_SEND_LOCK
      6704**DCL      7009<>CALL     7397<>CALL     7407<>CALL
KIT_TRANSFER_SZ
      6707**DCL      7092>>IF
KI_TCTX$$
      6699**DCL      5429--IMP-PTR  7018>>ASSIGN
KI_TCTX_MAX#
      6701**DCL      7015>>IF
K_TPDUSZ_VALUES
      6703**DCL      7218>>IF
LOG_ALTRET
      7147**LABEL    7367--CALLALT
NEXT$
      5350**DCL      7113<<ASSIGN   7118<<ASSIGN   7123>>ASSIGN   7142>>ASSIGN   7142>>ASSIGN
NR.BYTE0
      5358**DCL      7125>>ASSIGN
NR.BYTE1
      5359**DCL      7126>>ASSIGN
NR.BYTE2
      5360**DCL      7127>>ASSIGN
NR.BYTE3
      5361**DCL      7128>>ASSIGN
REPORT_BAD_TSTATE
      7381**LABEL    7013--GOTO     7056--GOTO
SC_BADFNC
      6947**DCL-ENT  7373--CALL
SC_BADTCTX
      6949**DCL-ENT  7050--CALL
SC_PRTCL_SNAP
      6948**DCL-ENT  7152--CALL
SEND_DATA
      7029**LABEL    7024--GOTO
SEND_DR
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:120  
      7307**LABEL    7324--GOTO
SEND_TPDU_CP6
      7358**LABEL    7284--GOTO
SET_BAD_OPT
      7185**LABEL    7177--GOTO
SET_BAD_TCTX
      7049**LABEL    7016--GOTO     7021--GOTO
SKIP_DR
      7318**LABEL    7295--GOTO     7327--GOTO
SPDU_SZ
      5352**DCL      7059<<ASSIGN   7068>>IF       7092>>IF
TCTX#
      5347**DCL      6999<<ASSIGN   7012>>IF       7015>>IF       7018>>ASSIGN   7205<<ASSIGN   7206>>ASSIGN
TCTX$
      5346**DCL      5432--IMP-PTR  7000<<ASSIGN   7018<<ASSIGN   7020>>IF       7034>>IF       7034>>IF
      7037>>IF       7037>>IF       7037>>IF       7045>>IF       7047>>IF       7063>>IF       7094>>ASSIGN
      7105>>ASSIGN   7113>>ASSIGN   7118>>ASSIGN   7134>>IF       7138>>ASSIGN   7151>>IF       7158>>IF
      7160>>ASSIGN   7194<>CALL     7205>>ASSIGN   7208>>ASSIGN   7209>>ASSIGN   7211>>ASSIGN   7213>>ASSIGN
      7215>>ASSIGN   7220>>ASSIGN   7226>>IF       7228>>IF       7229>>ASSIGN   7232>>IF       7232>>IF
      7233>>ASSIGN   7236>>IF       7237>>ASSIGN   7239>>ASSIGN   7243>>ASSIGN   7244>>ASSIGN   7249>>ASSIGN
      7250<>CALL     7262>>IF       7264>>ASSIGN   7265>>ASSIGN   7267>>IF       7268>>ASSIGN   7270>>ASSIGN
      7271>>ASSIGN   7276>>IF       7281>>ASSIGN   7291>>ASSIGN   7292>>ASSIGN   7303>>ASSIGN   7306>>ASSIGN
      7307>>ASSIGN   7309>>ASSIGN   7311>>DOCASE   7315>>ASSIGN   7318>>ASSIGN   7319>>ASSIGN   7320<>CALL
      7323>>ASSIGN   7346>>ASSIGN   7346>>ASSIGN   7350>>ASSIGN   7354>>IF       7354>>IF       7360>>ASSIGN
      7365>>ASSIGN   7390>>IF       7391>>ASSIGN   7403>>IF       7404>>ASSIGN
TEMP
      5354**DCL      7217<<DOINDEX  7218>>IF       7220>>ASSIGN   7309<<ASSIGN   7319>>ASSIGN
THDR_SZ
      5351**DCL      7088<<ASSIGN   7092>>IF       7100>>ASSIGN   7104>>ASSIGN
TPDU.CDT
      6022**DCL      7106<<ASSIGN
TPDU.DST_REF
      6033**DCL      7105<<ASSIGN
TPDU.LI
      6006**DCL      7104<<ASSIGN
TPDU.TYPE
PL6.E3A0      #003=KIT$SEND File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:42 Page:121  
      6016**DCL      7112<<ASSIGN   7117<<ASSIGN
TPDU$
      5349**DCL      7003<<ASSIGN   7099>>ASSIGN   7104>>ASSIGN   7105>>ASSIGN   7106>>ASSIGN   7112>>ASSIGN
      7117>>ASSIGN   7125>>ASSIGN   7126>>ASSIGN   7127>>ASSIGN   7128>>ASSIGN   7130>>ASSIGN   7278>>ASSIGN
      7279>>ASSIGN   7280>>ASSIGN   7281>>ASSIGN   7283>>ASSIGN   7340>>ASSIGN   7341>>ASSIGN   7342>>ASSIGN
      7347>>ASSIGN   7351>>ASSIGN   7358>>ASSIGN   7359>>ASSIGN   7360>>ASSIGN   7362>>ASSIGN   7363>>ASSIGN
TPDU_DT_EXT
      6115**DCL      7088--ASSIGN
TPDU_DT_EXT.EOT
      6137**DCL      7130<<ASSIGN
TPDU_DT_EXT.TPDU_NR
      6142**DCL      6150--REDEF    6158--REDEF
TPDU_DT_EXT.TPDU_NR_UNPK.BYTE0
      6151**DCL      7125<<ASSIGN
TPDU_DT_EXT.TPDU_NR_UNPK.BYTE1
      6153**DCL      7126<<ASSIGN
TPDU_DT_EXT.TPDU_NR_UNPK.BYTE2
      6155**DCL      7127<<ASSIGN
TPDU_DT_EXT.TPDU_NR_UNPK.BYTE3
      6157**DCL      7128<<ASSIGN
TPDU_NR
      5355**DCL      5356--REDEF    7123<<ASSIGN
UNLOCK_N_ALTRETURN
      7383**LABEL    7052--GOTO     7066--GOTO     7071--GOTO     7096--GOTO     7155--GOTO     7162--GOTO
      7186--GOTO     7197--GOTO     7251--GOTO     7274--CALLALT
UNLOCK_N_RETURN
      7393**LABEL    7042--GOTO     7165--GOTO     7255--GOTO     7286--GOTO     7331--GOTO     7355--GOTO
      7369--GOTO     7375--GOTO

PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:122  
      840        1        /*M* KIT$SEND_TPDU - Compose and send most of the TPDUs. */
      841        2        /*T***********************************************************/
      842        3        /*T*                                                         */
      843        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      844        5        /*T*                                                         */
      845        6        /*T***********************************************************/
      846        7        /*X* PLM=3,IND=5,ENU=0,ECU=0     */
      847        8
      848        9        /*P* NAME: KIT$SEND_TPDU
      849       10
      850       11        PURPOSE:  To compose and send to the peers most of the TPDUs.
      851       12
      852       13        */
      853       14        KIT$SEND_TPDU: PROC(K$RWPARM)  ALTRET;
      854       15
      855       16        %INCLUDE K$RWPARM;
      856      402        %INCLUDE K_ADDRESS_M;
      857      905        %INCLUDE KI_MACROS_C;
      858     1513        %INCLUDE K_TRANSPORT_E;
      859     1838        %INCLUDE K_TRANSPORT_M;
      860     3622        %INCLUDE K_INTERFACE_M;
      861     4031        %INCLUDE K_SUBS_C;
      862     4064        %INCLUDE UM_CP6;
      863     4916        %INCLUDE KI_ERRORS_C;
      864     5001        %INCLUDE UD_SEV_C;
      865     5015
      866     5016                                                /* Input parameters                   */
      867     5017        %K$RWPARM (NAME=K$RWPARM);
      868     5333
      869     5334                                                /* Auto Storage                       */
      870     5335    1   DCL CTX$ PTR;
      871     5336    1   DCL TPDU$ PTR;
      872     5337    1   DCL DPTR$ PTR;
      873     5338    1   DCL THDR_SZ SBIN;
      874     5339    1   DCL SPDU_SZ SBIN;
      875     5340    1   DCL TEMP SBIN;
      876     5341    1   DCL EXTRA REDEF TEMP SBIN;
PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:123  
      877     5342    1   DCL CDT SBIN(32);
      878     5343    1   DCL ENTRY_SWITCH SBIN;
      879     5344    1   DCL CHKOFF SBIN;
      880     5345    1   DCL SAVE_CHKSUM BIT(1) ALIGNED;
      881     5346
      882     5347        /* Reserve space in auto for the largest TPDU.
      883     5348        */
      884     5349        %K$TPDU_CR_CC(NAME=K$TPDU,STCLASS=AUTO,LAST=",");
      885     5418        %K$TPARM_TPDUSZ(NAME=ALLOC_TPDUSZ,LVL=2,LAST=",");
      886     5457        %K$TPARM_TSAP_ID(NAME=ALLOC_TSAP,LVL=2,LAST=",");
      887     5494        %K$TPARM_TSAP_ID(NAME=ALLOC_TSAP1,LVL=2,LAST=",");
      888     5531        %K$TPARM_CHKSUM(NAME=ALLOC_CHK,LVL=2,LAST=",");
      889     5571        %K$TPARM_OPTION(NAME=ALLOC_OPT,LVL=2,LAST=";");
      890     5618
      891     5619        %K$RWPARM (NAME=K@RWPARM, STCLASS=AUTO);
      892     5935
      893     5936                                                /* External Procedures                */
      894     5937    1   DCL KIN$SEND ENTRY(1) ALTRET;
      895     5938    1   DCL SC_PRTCL_SNAP ENTRY CONV(2,0);
      896     5939
      897     5940                                                /* BASED Data                         */
      898     5941    1   DCL KI$TCTX$(0:0) PTR BASED(KI_TCTX$$);
      899     5942        %KI$TCTX (NAME=CTX,STCLASS="BASED(CTX$)");
      900     6500
      901     6501        %K$TPDU_DC(NAME=TPDU_DC, STCLASS="BASED(TPDU$)", ALGN=ALIGNED);
      902     6540        %K$TPDU_DR(NAME=TPDU_DR, STCLASS="BASED(TPDU$)", ALGN=ALIGNED);
      903     6583        %K$TPDU_CR_CC(NAME=TPDU_C, STCLASS="BASED(TPDU$)", ALGN=ALIGNED);
      904     6652        %K$TPDU_ER(NAME=TPDU_ER, STCLASS="BASED(TPDU$)", ALGN=ALIGNED);
      905     6691
      906     6692
      907     6693        /* Generate the structures for sizec values */
      908     6694        %K$TPDU_CR_CC (ALGN=CALIGNED);
      909     6763        %K$TPDU_DR (ALGN=CALIGNED);
      910     6806        %K$TPDU_DC (ALGN=CALIGNED);
      911     6845        %K$TPDU_ER (ALGN=CALIGNED);
      912     6884        %K$TPARM_CHKSUM (ALGN=CALIGNED);
      913     6924        %K$TPARM_GENERIC (ALGN=CALIGNED);
PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:124  
      914     6959        %K$TPARM_TPDUSZ (ALGN=CALIGNED);
      915     6998        %K$TPARM_TSAP_ID (ALGN=CALIGNED);
      916     7035        %K$TPARM_OPTION (ALGN=CALIGNED);
      917     7082        %K$TPARM_CLR_INFO (ALGN=CALIGNED);
      918     7131
      919     7132    1   DCL CHR4BSD CHAR(4) BASED CALIGNED;
      920     7133    1   DCL CHR3BSD CHAR(3) BASED CALIGNED;
      921     7134    1   DCL CHR2BSD CHAR(2) BASED CALIGNED;
      922     7135    1   DCL B$CHAR CHAR(TEMP) BASED CALIGNED;
      923     7136    1   DCL B$CHAR_ALGN CHAR(TEMP) BASED ALIGNED;
      924     7137
      925     7138                                                /* External Data                      */
      926     7139    1   DCL KI_TCTX$$ PTR SYMREF;
      927     7140        %K$RWPARM (NAME=K_RWPARM_CON, STCLASS=SYMREF);
      928     7456    1   DCL K_CKSUM_INIT CHAR(4) SYMREF;
      929     7457    1   DCL KIT_KIN_ALTRET UBIN SYMREF;
      930     7458    1   DCL KIT_OSI_SNAP UBIN SYMREF;
      931     7459
      932     7460    1   DCL 1 PARM_HDRS CONSTANT,
      933     7461    1         2 SIZE UBIN BYTE CALIGNED INIT(%K_TPARM_TPDUSZ),
      934     7462    1         2 * UBIN BYTE CALIGNED INIT(1),
      935     7463    1         2 OPTION UBIN BYTE CALIGNED INIT(%K_TPARM_OPTION),
      936     7464    1         2 * UBIN BYTE CALIGNED INIT(1),
      937     7465    1         2 * UBIN BYTE CALIGNED INIT(0),
      938     7466    1         2 CLR_INFO UBIN BYTE CALIGNED INIT(%K_TPARM_CLR_INFO),
      939     7467    1         2 * UBIN BYTE CALIGNED INIT(1),
      940     7468    1         2 * UBIN BYTE CALIGNED INIT(0);
      941     7469
      942     7470        %VLP_ERRCODE (FPTN=E$DATA_SZ,FCG=KI,MID=T,ERR#=%E$DATA_SZ,SEV=SEV_ERR#,MON='1'B);
      943     7515
      944     7516        %EJECT;
PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:125  
      945     7517        /*F* NAME: KIT$SEND_DR - Send disconnect request TPDU
      946     7518
      947     7519        Called from KIT$SEND and KIT$RECV_OSI.
      948     7520        */
      949     7521
      950     7522    1   KIT$SEND_DR: ENTRY(K$RWPARM) ALTRET;
      951     7523    1      CTX$ = K$RWPARM.TCTX$;
      952     7524    1      ENTRY_SWITCH = %K_TPDU_TYPE_DR;
      953     7525
      954     7526    1      THDR_SZ = SIZEC(K$TPDU_DR);
      955     7527
      956     7528    1      IF CTX.SSN.CLASS=4 OR CTX.SSN.CLASS=2
      957     7529    1      THEN THDR_SZ = THDR_SZ + SIZEC(K$TPARM_CLR_INFO);
      958     7530
      959     7531    2      ELSE DO;
      960     7532    2           IF CTX.REASON > %K_REASON_ADDRESS_UNKNOWN
      961     7533    3           THEN DO;
      962     7534    3                IF CTX.ERR = 0
      963     7535    3                THEN CTX.ERR = CTX.REASON;
      964     7536    3                CTX.REASON = %K_REASON_NOTSPEC;
      965     7537    3                END;
      966     7538    2           END;
      967     7539
      968     7540    1      CTX.LOCAL_TERM = '1'B;
      969     7541    1      GOTO GOT_INIT_THDR_SZ;
      970     7542
      971     7543        %EJECT;
PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:126  
      972     7544        /*F* NAME: KIT$SEND_CR - Send connect request TPDU
      973     7545
      974     7546        Called from KIT$SEND.
      975     7547        */
      976     7548    1   KIT$SEND_CR: ENTRY(K$RWPARM) ALTRET;
      977     7549    1      CTX$ = KI$TCTX$(K$RWPARM.TCTX#);
      978     7550    1      ENTRY_SWITCH = %K_TPDU_TYPE_CR;
      979     7551
      980     7552    1      SAVE_CHKSUM = CTX.SSN.TR_FLAGS.CHKSUM;
      981     7553
      982     7554    1      IF CTX.SSN.TR_FLAGS.OSI AND CTX.SSN.CLASS = 4
      983     7555    1      THEN CTX.SSN.TR_FLAGS.CHKSUM = '1'B;
      984     7556
      985     7557    1      GOTO GET_INIT_THDR_SZ;
      986     7558
      987     7559        %EJECT;
PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:127  
      988     7560        /*F* NAME: KIT$SEND_CC - Send connect confirm TPDU
      989     7561
      990     7562        Called from KIT$SEND.
      991     7563        Also called from KIT$RECV when a TPDU_CR has just been processed
      992     7564        for a non-OSI connection.
      993     7565        */
      994     7566    1   KIT$SEND_CC: ENTRY(K$RWPARM)  ALTRET;
      995     7567    1      CTX$ = KI$TCTX$(K$RWPARM.TCTX#);
      996     7568    1      ENTRY_SWITCH = %K_TPDU_TYPE_CC;
      997     7569
      998     7570    1   GET_INIT_THDR_SZ:;
      999     7571    1      THDR_SZ = SIZEC(K$TPDU_CR_CC)
     1000     7572    1        + SIZEC(K$TPARM_TPDUSZ);
     1001     7573
     1002     7574    1      IF CTX.SSN.DST_TSAP.LEN > 0
     1003     7575    1      THEN THDR_SZ = THDR_SZ +2 + CTX.SSN.DST_TSAP.LEN;
     1004     7576
     1005     7577    1      IF CTX.SSN.SRC_TSAP.LEN > 0
     1006     7578    1      THEN THDR_SZ = THDR_SZ +2 + CTX.SSN.SRC_TSAP.LEN;
     1007     7579
     1008     7580    1      IF CTX.SSN.CLASS=4 OR CTX.SSN.CLASS=2
     1009     7581    1      THEN THDR_SZ = THDR_SZ + SIZEC(K$TPARM_OPTION);
     1010     7582
     1011     7583
     1012     7584    1   GOT_INIT_THDR_SZ:;
     1013     7585    1      IF CTX.SSN.TR_FLAGS.CHKSUM~='0'B AND CTX.SSN.CLASS=4
     1014     7586    1      THEN THDR_SZ = THDR_SZ + SIZEC(K$TPARM_CHKSUM);
     1015     7587
     1016     7588    1      SPDU_SZ = K$RWPARM.SHDRSZ + K$RWPARM.UHDRSZ + K$RWPARM.MSGSZ;
     1017     7589
     1018     7590    1      IF (CTX.SSN.TR_FLAGS.OSI) AND (CTX.SSN.CLASS = 0) AND (SPDU_SZ > 0)
     1019     7591    1      THEN GOTO SET_BADSZ;
     1020     7592
     1021     7593    1      IF (ENTRY_SWITCH=%K_TPDU_TYPE_DR AND SPDU_SZ>64 )
     1022     7594    1        OR (ENTRY_SWITCH=%K_TPDU_TYPE_CC AND SPDU_SZ>32 )
     1023     7595    1        OR (ENTRY_SWITCH =%K_TPDU_TYPE_CR AND SPDU_SZ>32 )
     1024     7596    2      THEN DO;
PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:128  
     1025     7597    2   SET_BADSZ: ;
     1026     7598    2           K$RWPARM.MSG_ERRCODE = E$DATA_SZ;
     1027     7599    2           ALTRETURN;
     1028     7600    2           END;
     1029     7601
     1030     7602    1      TPDU$ = ADDR(K$TPDU);
     1031     7603    1      TPDU_C.LI = THDR_SZ - 1;
     1032     7604    1      TPDU_C.MBZ = 0;
     1033     7605    1      TPDU_C.SRC_REF = CTX.SRC_REF;
     1034     7606    1      TPDU_C.DST_REF = CTX.DST_REF;
     1035     7607
     1036     7608    1      IF ENTRY_SWITCH = %K_TPDU_TYPE_DR
     1037     7609    2      THEN DO;
     1038     7610    2           TPDU_DR.TYPE = %K_TPDU_TYPE_DR;
     1039     7611    2           TPDU_DR.REASON = CTX.REASON;
     1040     7612    2           TPDU_DR.MBZ = 0;
     1041     7613
     1042     7614    2           IF CTX.SSN.CLASS=4 OR CTX.SSN.CLASS=2
     1043     7615    3           THEN DO;
     1044     7616    3                DPTR$ = PINCRC(TPDU$, SIZEC(K$TPDU_DR) );
     1045     7617    3                DPTR$->CHR3BSD = ADDR(PARM_HDRS.CLR_INFO)->CHR3BSD;
     1046     7618    3                DPTR$->K$TPARM_CLR_INFO.ERR = CTX.ERR;
     1047     7619    3                END;
     1048     7620
     1049     7621    2           GOTO FINISH_UP;
     1050     7622    2           END;
     1051     7623
     1052     7624    1      TPDU_C.TYPE = ENTRY_SWITCH;          /* set either CR or CC                */
     1053     7625
     1054     7626    1      TPDU_C.CLASS = CTX.SSN.CLASS;
     1055     7627
     1056     7628    1      IF CTX.SSN.CLASS = 2
     1057     7629    1      THEN IF CTX.SSN.TR_FLAGS.CLASS_2_FLOW = '0'B
     1058     7630    1           THEN TPDU_C.CLASS_2_FLOW = '1'B; /*set means dont use*/
     1059     7631    1           ELSE TPDU_C.CLASS_2_FLOW = '0'B;
     1060     7632
     1061     7633    1      TPDU_C.EXT_FMT_FLAG = CTX.SSN.TR_FLAGS.EXTENDED;
PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:129  
     1062     7634    1      TPDU_C.CDT = 0;                      /* set when it arrives on fep         */
     1063     7635
     1064     7636        /* Initialize the options pointer.
     1065     7637        */
     1066     7638    1      DPTR$ = PINCRC(TPDU$, SIZEC(K$TPDU_CR_CC) );
     1067     7639
     1068     7640        /* Build the TPDU_size parameter.
     1069     7641        */
     1070     7642    1      DPTR$->CHR2BSD = ADDR(PARM_HDRS.SIZE)->CHR2BSD;
     1071     7643    1      DPTR$->K$TPARM_TPDUSZ.SIZE = CTX.SSN.TPDUSZ_PARM;
     1072     7644    1      DPTR$ = PINCRC(DPTR$, SIZEC(K$TPARM_TPDUSZ));
     1073     7645
     1074     7646        /* Build the TSAP ID parameters.
     1075     7647        */
     1076     7648    1      TEMP = CTX.SSN.DST_TSAP.LEN;
     1077     7649    1      IF TEMP > 0
     1078     7650    2      THEN DO;
     1079     7651    2           DPTR$->K$TPARM_TSAP_ID.CODE = %K_TPARM_CALLED_TSAP;
     1080     7652
     1081     7653    2           DPTR$->K$TPARM_TSAP_ID.LEN = CTX.SSN.DST_TSAP.LEN;
     1082     7654    2           ADDR(DPTR$->K$TPARM_TSAP_ID.ID)->B$CHAR = ADDR(CTX.SSN.DST_TSAP.TSAP)->
              7654                    B$CHAR;
     1083     7655    2           DPTR$ = PINCRC(DPTR$,TEMP+2);
     1084     7656    2           END;
     1085     7657
     1086     7658    1      TEMP = CTX.SSN.SRC_TSAP.LEN;
     1087     7659    1      IF TEMP > 0
     1088     7660    2      THEN DO;
     1089     7661    2           DPTR$->K$TPARM_TSAP_ID.CODE = %K_TPARM_CALLING_TSAP;
     1090     7662
     1091     7663    2           DPTR$->K$TPARM_TSAP_ID.LEN = CTX.SSN.SRC_TSAP.LEN;
     1092     7664    2           ADDR(DPTR$->K$TPARM_TSAP_ID.ID)->B$CHAR = ADDR(CTX.SSN.SRC_TSAP.TSAP)->
              7664                    B$CHAR;
     1093     7665    2           DPTR$ = PINCRC(DPTR$,TEMP+2);
     1094     7666    2           END;
     1095     7667
     1096     7668    1      IF CTX.SSN.CLASS = 0
PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:130  
     1097     7669    1      THEN GOTO SEND_TO_NET;
     1098     7670
     1099     7671    1      IF CTX.SSN.CLASS = 2
     1100     7672    1      THEN GOTO BUILD_OPT;
     1101     7673
     1102     7674        /* Build the checksum parameter.
     1103     7675        */
     1104     7676    1      IF CTX.SSN.TR_FLAGS.CHKSUM ~= '0'B
     1105     7677    2      THEN DO;
     1106     7678    2           DPTR$->CHR4BSD = ADDR(K_CKSUM_INIT)->CHR4BSD;
     1107     7679    2           DPTR$ = PINCRC(DPTR$, SIZEC(K$TPARM_CHKSUM));
     1108     7680    2           CHKOFF = POFFC(DPTR$,TPDU$) - 1;
     1109     7681    2           END;
     1110     7682
     1111     7683    1      IF ENTRY_SWITCH = %K_TPDU_TYPE_CR
     1112     7684    2      THEN DO;
     1113     7685    2           CTX.SSN.TR_FLAGS.CHKSUM = SAVE_CHKSUM;
     1114     7686    2           END;
     1115     7687
     1116     7688        /* Build the options parameter.
     1117     7689        */
     1118     7690    1   BUILD_OPT:
     1119     7691    1      DPTR$->CHR3BSD = ADDR(PARM_HDRS.OPTION)->CHR3BSD;
     1120     7692    1      TEMP = 0;
     1121     7693
     1122     7694    1      IF CTX.SSN.TR_FLAGS.CHKSUM='0'B AND CTX.SSN.CLASS=4
     1123     7695    1      THEN TEMP = 2;                       /*set means dont use*/
     1124     7696
     1125     7697    1      IF CTX.SSN.TR_FLAGS.EXPEDITED ~= '0'B
     1126     7698    1      THEN TEMP = TEMP + 1;
     1127     7699
     1128     7700    1      DPTR$->K$TPARM_GENERIC.PVALUE = TEMP;
     1129     7701    1      DPTR$ = PINCRC(DPTR$, SIZEC(K$TPARM_OPTION));
     1130     7702
     1131     7703    1      GOTO SEND_TO_NET;
     1132     7704
     1133     7705        %EJECT;
PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:131  
     1134     7706    1   FINISH_UP: ;
     1135     7707    1      K$TPDU.DST_REF = CTX.DST_REF;
     1136     7708
     1137     7709    1      IF CTX.SSN.TR_FLAGS.CHKSUM ~= '0'B
     1138     7710    2      THEN DO;
     1139     7711    2           CHKOFF = K$TPDU.LI + 4;
     1140     7712    2           K$TPDU.LI = K$TPDU.LI + SIZEC(K$TPARM_CHKSUM) +2;
     1141     7713    2           PINCRC(ADDR(K$TPDU),CHKOFF-3)->CHR4BSD = ADDR(K_CKSUM_INIT)->CHR4BSD;
     1142     7714    2           END;
     1143     7715
     1144     7716    1   SEND_TO_NET:;
     1145     7717    1      K@RWPARM = K_RWPARM_CON;
     1146     7718    1      K@RWPARM.TCTX# = CTX.SRC_REF;
     1147     7719    1      K@RWPARM.FEX = CTX.NODE;
     1148     7720    1      K@RWPARM.THDR$ = TPDU$;
     1149     7721    1      K@RWPARM.THDRSZ = K$TPDU.LI +1;
     1150     7722
     1151     7723    1      K@RWPARM.FUNCTION = %K_WRITE;
     1152     7724
     1153     7725    1      IF CTX.SSN.TR_FLAGS.OSI
     1154     7726    2      THEN DO;
     1155     7727    2           IF ENTRY_SWITCH = %K_TPDU_TYPE_CR
     1156     7728    3           THEN DO;
     1157     7729    3                CTX.SSN.TR_FLAGS.HOST_REF = CTX.SRC_REF;
     1158     7730    3                K@RWPARM.FPT$ = K$RWPARM.FPT$;
     1159     7731
     1160     7732    3                K@RWPARM.FUNCTION = %K_NCONNECT_REQ; /*so NW will build big hdr*/
     1161     7733    3                K@RWPARM.SRC_ADDR$ = ADDR(CTX.SSN.SRC_NSAP);
     1162     7734    3                K@RWPARM.DST_ADDR$ = ADDR(CTX.SSN.DST_NSAP);
     1163     7735    3                END;
     1164     7736    2           ELSE K@RWPARM.FUNCTION = %K_NDATA; /*so NW will build little hdr*/
     1165     7737    2           END;
     1166     7738
     1167     7739    1      CALL KIN$SEND(K@RWPARM)
     1168     7740    2      WHENALTRETURN DO;
     1169     7741    2           KIT_KIN_ALTRET = KIT_KIN_ALTRET+1;
     1170     7742
PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:132  
     1171     7743    2           K$RWPARM.ERR = K@RWPARM.ERR;
     1172     7744    2           K$RWPARM.MSG_ERRCODE = K@RWPARM.MSG_ERRCODE;
     1173     7745
     1174     7746    2           IF K@RWPARM.ERR = %K$USER_ERR
     1175     7747    2           THEN ALTRETURN;
     1176     7748
     1177     7749    2           IF CTX.SSN.TR_FLAGS.OSI AND KIT_OSI_SNAP ~= 0
     1178     7750    2           THEN CALL SC_PRTCL_SNAP;
     1179     7751
     1180     7752    2           ALTRETURN;
     1181     7753    2           END;
     1182     7754
     1183     7755        /* Set the node info in case it was a TPDU_CR.
     1184     7756        */
     1185     7757    1      IF ENTRY_SWITCH = %K_TPDU_TYPE_CR
     1186     7758    2      THEN DO;
     1187     7759    2           K$RWPARM.FEX = K@RWPARM.FEX;
     1188     7760    2           K$RWPARM.LOCAL_FEP = K@RWPARM.LOCAL_FEP;
     1189     7761    2           END;
     1190     7762    1      RETURN;
     1191     7763
     1192     7764    1   END KIT$SEND_TPDU;
     1193     7765        %EOD;

PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:133  
--  Include file information  --

   UD_SEV_C.:E05TOU  is referenced.
   KI_ERRORS_C.:E05TOU  is referenced.
   UM_CP6.:E05TOU  is referenced.
   K_SUBS_C.:E05TOU  is referenced.
   K_INTERFACE_M.:E05TOU  is referenced.
   K_TRANSPORT_M.:E05TOU  is referenced.
   K_TRANSPORT_E.:E05TOU  is referenced.
   KI_MACROS_C.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   K$RWPARM.:E05TOU  is referenced.
      No diagnostics issued in procedure KIT$SEND_TPDU.

   Procedure KIT$SEND_TPDU requires 407 words for executable code.
   Procedure KIT$SEND_TPDU requires 78 words of local(AUTO) storage.

PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:134  

 Object Unit name= KIT$SEND_TPDU                              File name= KIT$TRANSPORT.:E05TOU
 UTS= JUL 30 '97 00:43:29.72 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      2      2  KIT$SEND_TPDU
    1   Data  even  none     1      1  KIT$SEND_TPDU
    2   Proc  even  none   407    627  KIT$SEND_TPDU
    3  RoData even  none     8     10  KIT$SEND_TPDU

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        1  KIT$SEND_TPDU
     2      3          yes     yes      Std        1  KIT$SEND_DR
     2     44          yes     yes      Std        1  KIT$SEND_CR
     2     73          yes     yes      Std        1  KIT$SEND_CC

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 KIN$SEND
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:135  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     SC_PRTCL_SNAP                         KI_TCTX$$                             K_RWPARM_CON
     K_CKSUM_INIT                          KIT_KIN_ALTRET                        KIT_OSI_SNAP
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ASLENTSID
PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:136  


      840        1        /*M* KIT$SEND_TPDU - Compose and send most of the TPDUs. */
      841        2        /*T***********************************************************/
      842        3        /*T*                                                         */
      843        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      844        5        /*T*                                                         */
      845        6        /*T***********************************************************/
      846        7        /*X* PLM=3,IND=5,ENU=0,ECU=0     */
      847        8
      848        9        /*P* NAME: KIT$SEND_TPDU
      849       10
      850       11        PURPOSE:  To compose and send to the peers most of the TPDUs.
      851       12
      852       13        */
      853       14        KIT$SEND_TPDU: PROC(K$RWPARM)  ALTRET;

     14  2 000000   000000 700200 xent  KIT$SEND_TP* TSX0  ! X66_AUTO_1
         2 000001   000116 000001                    ZERO    78,1
         2 000002   000005 710000 2                  TRA     s:7523

      854       15
      855       16        %INCLUDE K$RWPARM;
      856      402        %INCLUDE K_ADDRESS_M;
      857      905        %INCLUDE KI_MACROS_C;
      858     1513        %INCLUDE K_TRANSPORT_E;
      859     1838        %INCLUDE K_TRANSPORT_M;
      860     3622        %INCLUDE K_INTERFACE_M;
      861     4031        %INCLUDE K_SUBS_C;
      862     4064        %INCLUDE UM_CP6;
      863     4916        %INCLUDE KI_ERRORS_C;
      864     5001        %INCLUDE UD_SEV_C;
      865     5015
      866     5016                                                /* Input parameters                   */
      867     5017        %K$RWPARM (NAME=K$RWPARM);
      868     5333
      869     5334                                                /* Auto Storage                       */
      870     5335    1   DCL CTX$ PTR;
PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:137  
      871     5336    1   DCL TPDU$ PTR;
      872     5337    1   DCL DPTR$ PTR;
      873     5338    1   DCL THDR_SZ SBIN;
      874     5339    1   DCL SPDU_SZ SBIN;
      875     5340    1   DCL TEMP SBIN;
      876     5341    1   DCL EXTRA REDEF TEMP SBIN;
      877     5342    1   DCL CDT SBIN(32);
      878     5343    1   DCL ENTRY_SWITCH SBIN;
      879     5344    1   DCL CHKOFF SBIN;
      880     5345    1   DCL SAVE_CHKSUM BIT(1) ALIGNED;
      881     5346
      882     5347        /* Reserve space in auto for the largest TPDU.
      883     5348        */
      884     5349        %K$TPDU_CR_CC(NAME=K$TPDU,STCLASS=AUTO,LAST=",");
      885     5418        %K$TPARM_TPDUSZ(NAME=ALLOC_TPDUSZ,LVL=2,LAST=",");
      886     5457        %K$TPARM_TSAP_ID(NAME=ALLOC_TSAP,LVL=2,LAST=",");
      887     5494        %K$TPARM_TSAP_ID(NAME=ALLOC_TSAP1,LVL=2,LAST=",");
      888     5531        %K$TPARM_CHKSUM(NAME=ALLOC_CHK,LVL=2,LAST=",");
      889     5571        %K$TPARM_OPTION(NAME=ALLOC_OPT,LVL=2,LAST=";");
      890     5618
      891     5619        %K$RWPARM (NAME=K@RWPARM, STCLASS=AUTO);
      892     5935
      893     5936                                                /* External Procedures                */
      894     5937    1   DCL KIN$SEND ENTRY(1) ALTRET;
      895     5938    1   DCL SC_PRTCL_SNAP ENTRY CONV(2,0);
      896     5939
      897     5940                                                /* BASED Data                         */
      898     5941    1   DCL KI$TCTX$(0:0) PTR BASED(KI_TCTX$$);
      899     5942        %KI$TCTX (NAME=CTX,STCLASS="BASED(CTX$)");
      900     6500
      901     6501        %K$TPDU_DC(NAME=TPDU_DC, STCLASS="BASED(TPDU$)", ALGN=ALIGNED);
      902     6540        %K$TPDU_DR(NAME=TPDU_DR, STCLASS="BASED(TPDU$)", ALGN=ALIGNED);
      903     6583        %K$TPDU_CR_CC(NAME=TPDU_C, STCLASS="BASED(TPDU$)", ALGN=ALIGNED);
      904     6652        %K$TPDU_ER(NAME=TPDU_ER, STCLASS="BASED(TPDU$)", ALGN=ALIGNED);
      905     6691
      906     6692
      907     6693        /* Generate the structures for sizec values */
PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:138  
      908     6694        %K$TPDU_CR_CC (ALGN=CALIGNED);
      909     6763        %K$TPDU_DR (ALGN=CALIGNED);
      910     6806        %K$TPDU_DC (ALGN=CALIGNED);
      911     6845        %K$TPDU_ER (ALGN=CALIGNED);
      912     6884        %K$TPARM_CHKSUM (ALGN=CALIGNED);
      913     6924        %K$TPARM_GENERIC (ALGN=CALIGNED);
      914     6959        %K$TPARM_TPDUSZ (ALGN=CALIGNED);
      915     6998        %K$TPARM_TSAP_ID (ALGN=CALIGNED);
      916     7035        %K$TPARM_OPTION (ALGN=CALIGNED);
      917     7082        %K$TPARM_CLR_INFO (ALGN=CALIGNED);
      918     7131
      919     7132    1   DCL CHR4BSD CHAR(4) BASED CALIGNED;
      920     7133    1   DCL CHR3BSD CHAR(3) BASED CALIGNED;
      921     7134    1   DCL CHR2BSD CHAR(2) BASED CALIGNED;
      922     7135    1   DCL B$CHAR CHAR(TEMP) BASED CALIGNED;
      923     7136    1   DCL B$CHAR_ALGN CHAR(TEMP) BASED ALIGNED;
      924     7137
      925     7138                                                /* External Data                      */
      926     7139    1   DCL KI_TCTX$$ PTR SYMREF;
      927     7140        %K$RWPARM (NAME=K_RWPARM_CON, STCLASS=SYMREF);
      928     7456    1   DCL K_CKSUM_INIT CHAR(4) SYMREF;
      929     7457    1   DCL KIT_KIN_ALTRET UBIN SYMREF;
      930     7458    1   DCL KIT_OSI_SNAP UBIN SYMREF;
      931     7459
      932     7460    1   DCL 1 PARM_HDRS CONSTANT,
      933     7461    1         2 SIZE UBIN BYTE CALIGNED INIT(%K_TPARM_TPDUSZ),
      934     7462    1         2 * UBIN BYTE CALIGNED INIT(1),
      935     7463    1         2 OPTION UBIN BYTE CALIGNED INIT(%K_TPARM_OPTION),
      936     7464    1         2 * UBIN BYTE CALIGNED INIT(1),
      937     7465    1         2 * UBIN BYTE CALIGNED INIT(0),
      938     7466    1         2 CLR_INFO UBIN BYTE CALIGNED INIT(%K_TPARM_CLR_INFO),
      939     7467    1         2 * UBIN BYTE CALIGNED INIT(1),
      940     7468    1         2 * UBIN BYTE CALIGNED INIT(0);
      941     7469
      942     7470        %VLP_ERRCODE (FPTN=E$DATA_SZ,FCG=KI,MID=T,ERR#=%E$DATA_SZ,SEV=SEV_ERR#,MON='1'B);
      943     7515
      944     7516        %EJECT;
PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:139  
      945     7517        /*F* NAME: KIT$SEND_DR - Send disconnect request TPDU
      946     7518
      947     7519        Called from KIT$SEND and KIT$RECV_OSI.
      948     7520        */
      949     7521
      950     7522    1   KIT$SEND_DR: ENTRY(K$RWPARM) ALTRET;

   7522  2 000003   000000 700200 xent  KIT$SEND_DR  TSX0  ! X66_AUTO_1
         2 000004   000116 000001                    ZERO    78,1

      951     7523    1      CTX$ = K$RWPARM.TCTX$;

   7523  2 000005   200003 470500                    LDP0    @K$RWPARM,,AUTO
         2 000006   000017 236100                    LDQ     15,,PR0
         2 000007   200004 756100                    STQ     CTX$,,AUTO

      952     7524    1      ENTRY_SWITCH = %K_TPDU_TYPE_DR;

   7524  2 000010   000010 235007                    LDA     8,DL
         2 000011   200013 755100                    STA     ENTRY_SWITCH,,AUTO

      953     7525
      954     7526    1      THDR_SZ = SIZEC(K$TPDU_DR);

   7526  2 000012   000007 235007                    LDA     7,DL
         2 000013   200007 755100                    STA     THDR_SZ,,AUTO

      955     7527
      956     7528    1      IF CTX.SSN.CLASS=4 OR CTX.SSN.CLASS=2

   7528  2 000014   200004 471500                    LDP1    CTX$,,AUTO
         2 000015   100016 236100                    LDQ     14,,PR1
         2 000016   000777 376003                    ANQ     511,DU
         2 000017   000004 116003                    CMPQ    4,DU
         2 000020   000023 600000 2                  TZE     s:7529
         2 000021   000002 116003                    CMPQ    2,DU
         2 000022   000026 601000 2                  TNZ     s:7532
PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:140  

      957     7529    1      THEN THDR_SZ = THDR_SZ + SIZEC(K$TPARM_CLR_INFO);

   7529  2 000023   000003 236007                    LDQ     3,DL
         2 000024   200007 056100                    ASQ     THDR_SZ,,AUTO
         2 000025   000041 710000 2                  TRA     s:7540

      958     7530
      959     7531    2      ELSE DO;

      960     7532    2           IF CTX.REASON > %K_REASON_ADDRESS_UNKNOWN

   7532  2 000026   100000 236100                    LDQ     0,,PR1
         2 000027   777000 376007                    ANQ     -512,DL
         2 000030   004000 116007                    CMPQ    2048,DL
         2 000031   000041 602000 2                  TNC     s:7540

      961     7533    3           THEN DO;

      962     7534    3                IF CTX.ERR = 0

   7534  2 000032   100000 236100                    LDQ     0,,PR1
         2 000033   000777 316007                    CANQ    511,DL
         2 000034   000037 601000 2                  TNZ     s:7536

      963     7535    3                THEN CTX.ERR = CTX.REASON;

   7535  2 000035   000011 772000                    QRL     9
         2 000036   100000 552104                    STBQ    0,'04'O,PR1

      964     7536    3                CTX.REASON = %K_REASON_NOTSPEC;

   7536  2 000037   000000 236003                    LDQ     0,DU
         2 000040   100000 552110                    STBQ    0,'10'O,PR1

      965     7537    3                END;

PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:141  
      966     7538    2           END;

      967     7539
      968     7540    1      CTX.LOCAL_TERM = '1'B;

   7540  2 000041   000040 236007                    LDQ     32,DL
         2 000042   100002 256100                    ORSQ    2,,PR1

      969     7541    1      GOTO GOT_INIT_THDR_SZ;

   7541  2 000043   000135 710000 2                  TRA     GOT_INIT_THDR_SZ

      970     7542
      971     7543        %EJECT;
PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:142  
      972     7544        /*F* NAME: KIT$SEND_CR - Send connect request TPDU
      973     7545
      974     7546        Called from KIT$SEND.
      975     7547        */
      976     7548    1   KIT$SEND_CR: ENTRY(K$RWPARM) ALTRET;

   7548  2 000044   000000 700200 xent  KIT$SEND_CR  TSX0  ! X66_AUTO_1
         2 000045   000116 000001                    ZERO    78,1

      977     7549    1      CTX$ = KI$TCTX$(K$RWPARM.TCTX#);

   7549  2 000046   200003 470500                    LDP0    @K$RWPARM,,AUTO
         2 000047   000033 220100                    LDX0    27,,PR0
         2 000050   000000 471400 xsym               LDP1    KI_TCTX$$
         2 000051   100000 236110                    LDQ     0,X0,PR1
         2 000052   200004 756100                    STQ     CTX$,,AUTO

      978     7550    1      ENTRY_SWITCH = %K_TPDU_TYPE_CR;

   7550  2 000053   000016 235007                    LDA     14,DL
         2 000054   200013 755100                    STA     ENTRY_SWITCH,,AUTO

      979     7551
      980     7552    1      SAVE_CHKSUM = CTX.SSN.TR_FLAGS.CHKSUM;

   7552  2 000055   200004 473500                    LDP3    CTX$,,AUTO
         2 000056   300016 236100                    LDQ     14,,PR3
         2 000057   000043 736000                    QLS     35
         2 000060   200015 756100                    STQ     SAVE_CHKSUM,,AUTO

      981     7553
      982     7554    1      IF CTX.SSN.TR_FLAGS.OSI AND CTX.SSN.CLASS = 4

   7554  2 000061   300016 236100                    LDQ     14,,PR3
         2 000062   000020 316007                    CANQ    16,DL
         2 000063   000072 600000 2                  TZE     s:7557
         2 000064   300016 236100                    LDQ     14,,PR3
PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:143  
         2 000065   000777 376003                    ANQ     511,DU
         2 000066   000004 116003                    CMPQ    4,DU
         2 000067   000072 601000 2                  TNZ     s:7557

      983     7555    1      THEN CTX.SSN.TR_FLAGS.CHKSUM = '1'B;

   7555  2 000070   000001 236007                    LDQ     1,DL
         2 000071   300016 256100                    ORSQ    14,,PR3

      984     7556
      985     7557    1      GOTO GET_INIT_THDR_SZ;

   7557  2 000072   000104 710000 2                  TRA     GET_INIT_THDR_SZ

      986     7558
      987     7559        %EJECT;
PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:144  
      988     7560        /*F* NAME: KIT$SEND_CC - Send connect confirm TPDU
      989     7561
      990     7562        Called from KIT$SEND.
      991     7563        Also called from KIT$RECV when a TPDU_CR has just been processed
      992     7564        for a non-OSI connection.
      993     7565        */
      994     7566    1   KIT$SEND_CC: ENTRY(K$RWPARM)  ALTRET;

   7566  2 000073   000000 700200 xent  KIT$SEND_CC  TSX0  ! X66_AUTO_1
         2 000074   000116 000001                    ZERO    78,1

      995     7567    1      CTX$ = KI$TCTX$(K$RWPARM.TCTX#);

   7567  2 000075   200003 470500                    LDP0    @K$RWPARM,,AUTO
         2 000076   000033 220100                    LDX0    27,,PR0
         2 000077   000000 471400 xsym               LDP1    KI_TCTX$$
         2 000100   100000 236110                    LDQ     0,X0,PR1
         2 000101   200004 756100                    STQ     CTX$,,AUTO

      996     7568    1      ENTRY_SWITCH = %K_TPDU_TYPE_CC;

   7568  2 000102   000015 235007                    LDA     13,DL
         2 000103   200013 755100                    STA     ENTRY_SWITCH,,AUTO

   7568  2 000104                       GET_INIT_TH* null
      997     7569
      998     7570    1   GET_INIT_THDR_SZ:;
      999     7571    1      THDR_SZ = SIZEC(K$TPDU_CR_CC)

   7571  2 000104   000012 236007                    LDQ     10,DL
         2 000105   200007 756100                    STQ     THDR_SZ,,AUTO

     1000     7572    1        + SIZEC(K$TPARM_TPDUSZ);
     1001     7573
     1002     7574    1      IF CTX.SSN.DST_TSAP.LEN > 0

   7574  2 000106   200004 473500                    LDP3    CTX$,,AUTO
PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:145  
         2 000107   300031 220100                    LDX0    25,,PR3
         2 000110   000116 600000 2                  TZE     s:7577

     1003     7575    1      THEN THDR_SZ = THDR_SZ +2 + CTX.SSN.DST_TSAP.LEN;

   7575  2 000111   300031 236100                    LDQ     25,,PR3
         2 000112   000022 772000                    QRL     18
         2 000113   200007 036100                    ADLQ    THDR_SZ,,AUTO
         2 000114   000002 036007                    ADLQ    2,DL
         2 000115   200007 756100                    STQ     THDR_SZ,,AUTO

     1004     7576
     1005     7577    1      IF CTX.SSN.SRC_TSAP.LEN > 0

   7577  2 000116   300020 221100                    LDX1    16,,PR3
         2 000117   000125 600000 2                  TZE     s:7580

     1006     7578    1      THEN THDR_SZ = THDR_SZ +2 + CTX.SSN.SRC_TSAP.LEN;

   7578  2 000120   300020 236100                    LDQ     16,,PR3
         2 000121   000022 772000                    QRL     18
         2 000122   200007 036100                    ADLQ    THDR_SZ,,AUTO
         2 000123   000002 036007                    ADLQ    2,DL
         2 000124   200007 756100                    STQ     THDR_SZ,,AUTO

     1007     7579
     1008     7580    1      IF CTX.SSN.CLASS=4 OR CTX.SSN.CLASS=2

   7580  2 000125   300016 236100                    LDQ     14,,PR3
         2 000126   000777 376003                    ANQ     511,DU
         2 000127   000004 116003                    CMPQ    4,DU
         2 000130   000133 600000 2                  TZE     s:7581
         2 000131   000002 116003                    CMPQ    2,DU
         2 000132   000135 601000 2                  TNZ     GOT_INIT_THDR_SZ

     1009     7581    1      THEN THDR_SZ = THDR_SZ + SIZEC(K$TPARM_OPTION);

PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:146  
   7581  2 000133   000003 236007                    LDQ     3,DL
         2 000134   200007 056100                    ASQ     THDR_SZ,,AUTO

   7580  2 000135                       GOT_INIT_TH* null
     1010     7582
     1011     7583
     1012     7584    1   GOT_INIT_THDR_SZ:;
     1013     7585    1      IF CTX.SSN.TR_FLAGS.CHKSUM~='0'B AND CTX.SSN.CLASS=4

   7585  2 000135   200004 471500                    LDP1    CTX$,,AUTO
         2 000136   100016 236100                    LDQ     14,,PR1
         2 000137   000001 316007                    CANQ    1,DL
         2 000140   000147 600000 2                  TZE     s:7588
         2 000141   100016 236100                    LDQ     14,,PR1
         2 000142   000777 376003                    ANQ     511,DU
         2 000143   000004 116003                    CMPQ    4,DU
         2 000144   000147 601000 2                  TNZ     s:7588

     1014     7586    1      THEN THDR_SZ = THDR_SZ + SIZEC(K$TPARM_CHKSUM);

   7586  2 000145   000004 236007                    LDQ     4,DL
         2 000146   200007 056100                    ASQ     THDR_SZ,,AUTO

     1015     7587
     1016     7588    1      SPDU_SZ = K$RWPARM.SHDRSZ + K$RWPARM.UHDRSZ + K$RWPARM.MSGSZ;

   7588  2 000147   000023 236100                    LDQ     19,,PR0
         2 000150   000015 036100                    ADLQ    13,,PR0
         2 000151   000001 036100                    ADLQ    1,,PR0
         2 000152   200010 756100                    STQ     SPDU_SZ,,AUTO

     1017     7589
     1018     7590    1      IF (CTX.SSN.TR_FLAGS.OSI) AND (CTX.SSN.CLASS = 0) AND (SPDU_SZ > 0)

   7590  2 000153   100016 236100                    LDQ     14,,PR1
         2 000154   000020 316007                    CANQ    16,DL
         2 000155   000162 600000 2                  TZE     s:7593
PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:147  
         2 000156   000777 316003                    CANQ    511,DU
         2 000157   000162 601000 2                  TNZ     s:7593
         2 000160   200010 235100                    LDA     SPDU_SZ,,AUTO
         2 000161   000204 605400 2                  TPNZ    SET_BADSZ

     1019     7591    1      THEN GOTO SET_BADSZ;
     1020     7592
     1021     7593    1      IF (ENTRY_SWITCH=%K_TPDU_TYPE_DR AND SPDU_SZ>64 )

   7593  2 000162   200013 235100                    LDA     ENTRY_SWITCH,,AUTO
         2 000163   000010 115007                    CMPA    8,DL
         2 000164   000170 601000 2                  TNZ     s:7593+6
         2 000165   200010 235100                    LDA     SPDU_SZ,,AUTO
         2 000166   000100 115007                    CMPA    64,DL
         2 000167   000204 605400 2                  TPNZ    SET_BADSZ
         2 000170   200013 235100                    LDA     ENTRY_SWITCH,,AUTO
         2 000171   000015 115007                    CMPA    13,DL
         2 000172   000176 601000 2                  TNZ     s:7593+12
         2 000173   200010 235100                    LDA     SPDU_SZ,,AUTO
         2 000174   000040 115007                    CMPA    32,DL
         2 000175   000204 605400 2                  TPNZ    SET_BADSZ
         2 000176   200013 235100                    LDA     ENTRY_SWITCH,,AUTO
         2 000177   000016 115007                    CMPA    14,DL
         2 000200   000207 601000 2                  TNZ     s:7602
         2 000201   200010 235100                    LDA     SPDU_SZ,,AUTO
         2 000202   000040 115007                    CMPA    32,DL
         2 000203   000207 604400 2                  TMOZ    s:7602

     1022     7594    1        OR (ENTRY_SWITCH=%K_TPDU_TYPE_CC AND SPDU_SZ>32 )
     1023     7595    1        OR (ENTRY_SWITCH =%K_TPDU_TYPE_CR AND SPDU_SZ>32 )
     1024     7596    2      THEN DO;

   7593  2 000204                       SET_BADSZ    null
     1025     7597    2   SET_BADSZ: ;
     1026     7598    2           K$RWPARM.MSG_ERRCODE = E$DATA_SZ;

   7598  2 000204   000000 236000 1                  LDQ     E$DATA_SZ
PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:148  
         2 000205   000037 756100                    STQ     31,,PR0

     1027     7599    2           ALTRETURN;

   7599  2 000206   000000 702200 xent               TSX2  ! X66_AALT

     1028     7600    2           END;
     1029     7601
     1030     7602    1      TPDU$ = ADDR(K$TPDU);

   7602  2 000207   200016 633500                    EPPR3   K$TPDU,,AUTO
         2 000210   200005 453500                    STP3    TPDU$,,AUTO

     1031     7603    1      TPDU_C.LI = THDR_SZ - 1;

   7603  2 000211   200007 236100                    LDQ     THDR_SZ,,AUTO
         2 000212   000001 136007                    SBLQ    1,DL
         2 000213   000033 736000                    QLS     27
         2 000214   300000 552140                    STBQ    0,'40'O,PR3

     1032     7604    1      TPDU_C.MBZ = 0;

   7604  2 000215   000000 236000 3                  LDQ     0
         2 000216   300001 356100                    ANSQ    1,,PR3

     1033     7605    1      TPDU_C.SRC_REF = CTX.SRC_REF;

   7605  2 000217   100001 720100                    LXL0    1,,PR1
         2 000220   300001 740100                    STX0    1,,PR3

     1034     7606    1      TPDU_C.DST_REF = CTX.DST_REF;

   7606  2 000221   100001 221100                    LDX1    1,,PR1
         2 000222   300000 441100                    SXL1    0,,PR3

     1035     7607
     1036     7608    1      IF ENTRY_SWITCH = %K_TPDU_TYPE_DR
PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:149  

   7608  2 000223   200013 235100                    LDA     ENTRY_SWITCH,,AUTO
         2 000224   000010 115007                    CMPA    8,DL
         2 000225   000257 601000 2                  TNZ     s:7624

     1037     7609    2      THEN DO;

     1038     7610    2           TPDU_DR.TYPE = %K_TPDU_TYPE_DR;

   7610  2 000226   300000 236100                    LDQ     0,,PR3
         2 000227   000001 376000 3                  ANQ     1
         2 000230   000200 276003                    ORQ     128,DU
         2 000231   300000 756100                    STQ     0,,PR3

     1039     7611    2           TPDU_DR.REASON = CTX.REASON;

   7611  2 000232   100000 236100                    LDQ     0,,PR1
         2 000233   300001 552110                    STBQ    1,'10'O,PR3

     1040     7612    2           TPDU_DR.MBZ = 0;

   7612  2 000234   000002 236000 3                  LDQ     2
         2 000235   300000 356100                    ANSQ    0,,PR3

     1041     7613
     1042     7614    2           IF CTX.SSN.CLASS=4 OR CTX.SSN.CLASS=2

   7614  2 000236   100016 236100                    LDQ     14,,PR1
         2 000237   000777 376003                    ANQ     511,DU
         2 000240   000004 116003                    CMPQ    4,DU
         2 000241   000244 600000 2                  TZE     s:7616
         2 000242   000002 116003                    CMPQ    2,DU
         2 000243   000256 601000 2                  TNZ     s:7621

     1043     7615    3           THEN DO;

     1044     7616    3                DPTR$ = PINCRC(TPDU$, SIZEC(K$TPDU_DR) );
PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:150  

   7616  2 000244   200005 236100                    LDQ     TPDU$,,AUTO
         2 000245   000003 036000 3                  ADLQ    3
         2 000246   200006 756100                    STQ     DPTR$,,AUTO

     1045     7617    3                DPTR$->CHR3BSD = ADDR(PARM_HDRS.CLR_INFO)->CHR3BSD;

   7617  2 000247   200006 474500                    LDP4    DPTR$,,AUTO
         2 000250   040100 100400                    MLR     fill='040'O
         2 000251   000001 200003 0                  ADSC9   PARM_HDRS+1              cn=1,n=3
         2 000252   400000 000003                    ADSC9   0,,PR4                   cn=0,n=3

     1046     7618    3                DPTR$->K$TPARM_CLR_INFO.ERR = CTX.ERR;

   7618  2 000253   000100 100500                    MLR     fill='000'O
         2 000254   100000 600001                    ADSC9   0,,PR1                   cn=3,n=1
         2 000255   400000 400001                    ADSC9   0,,PR4                   cn=2,n=1

     1047     7619    3                END;

     1048     7620
     1049     7621    2           GOTO FINISH_UP;

   7621  2 000256   000473 710000 2                  TRA     FINISH_UP

     1050     7622    2           END;
     1051     7623
     1052     7624    1      TPDU_C.TYPE = ENTRY_SWITCH;          /* set either CR or CC                */

   7624  2 000257   200013 236100                    LDQ     ENTRY_SWITCH,,AUTO
         2 000260   000026 736000                    QLS     22
         2 000261   300000 676100                    ERQ     0,,PR3
         2 000262   000360 376003                    ANQ     240,DU
         2 000263   300000 656100                    ERSQ    0,,PR3

     1053     7625
     1054     7626    1      TPDU_C.CLASS = CTX.SSN.CLASS;
PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:151  

   7626  2 000264   100016 236100                    LDQ     14,,PR1
         2 000265   000005 772000                    QRL     5
         2 000266   300001 676100                    ERQ     1,,PR3
         2 000267   360000 376007                    ANQ     122880,DL
         2 000270   300001 656100                    ERSQ    1,,PR3

     1055     7627
     1056     7628    1      IF CTX.SSN.CLASS = 2

   7628  2 000271   100016 236100                    LDQ     14,,PR1
         2 000272   000777 376003                    ANQ     511,DU
         2 000273   000002 116003                    CMPQ    2,DU
         2 000274   000305 601000 2                  TNZ     s:7633

     1057     7629    1      THEN IF CTX.SSN.TR_FLAGS.CLASS_2_FLOW = '0'B

   7629  2 000275   100016 236100                    LDQ     14,,PR1
         2 000276   000010 316007                    CANQ    8,DL
         2 000277   000303 601000 2                  TNZ     s:7631

     1058     7630    1           THEN TPDU_C.CLASS_2_FLOW = '1'B; /*set means dont use*/

   7630  2 000300   001000 236007                    LDQ     512,DL
         2 000301   300001 256100                    ORSQ    1,,PR3
         2 000302   000305 710000 2                  TRA     s:7633

     1059     7631    1           ELSE TPDU_C.CLASS_2_FLOW = '0'B;

   7631  2 000303   000004 236000 3                  LDQ     4
         2 000304   300001 356100                    ANSQ    1,,PR3

     1060     7632
     1061     7633    1      TPDU_C.EXT_FMT_FLAG = CTX.SSN.TR_FLAGS.EXTENDED;

   7633  2 000305   100016 236100                    LDQ     14,,PR1
         2 000306   000010 736000                    QLS     8
PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:152  
         2 000307   300001 676100                    ERQ     1,,PR3
         2 000310   002000 376007                    ANQ     1024,DL
         2 000311   300001 656100                    ERSQ    1,,PR3

     1062     7634    1      TPDU_C.CDT = 0;                      /* set when it arrives on fep         */

   7634  2 000312   000002 236000 3                  LDQ     2
         2 000313   300000 356100                    ANSQ    0,,PR3

     1063     7635
     1064     7636        /* Initialize the options pointer.
     1065     7637        */
     1066     7638    1      DPTR$ = PINCRC(TPDU$, SIZEC(K$TPDU_CR_CC) );

   7638  2 000314   200005 236100                    LDQ     TPDU$,,AUTO
         2 000315   000003 036000 3                  ADLQ    3
         2 000316   200006 756100                    STQ     DPTR$,,AUTO

     1067     7639
     1068     7640        /* Build the TPDU_size parameter.
     1069     7641        */
     1070     7642    1      DPTR$->CHR2BSD = ADDR(PARM_HDRS.SIZE)->CHR2BSD;

   7642  2 000317   200006 474500                    LDP4    DPTR$,,AUTO
         2 000320   040100 100400                    MLR     fill='040'O
         2 000321   000000 000002 0                  ADSC9   PARM_HDRS                cn=0,n=2
         2 000322   400000 000002                    ADSC9   0,,PR4                   cn=0,n=2

     1071     7643    1      DPTR$->K$TPARM_TPDUSZ.SIZE = CTX.SSN.TPDUSZ_PARM;

   7643  2 000323   000100 101500                    MRL     fill='000'O
         2 000324   100014 000002                    ADSC9   12,,PR1                  cn=0,n=2
         2 000325   400000 400001                    ADSC9   0,,PR4                   cn=2,n=1

     1072     7644    1      DPTR$ = PINCRC(DPTR$, SIZEC(K$TPARM_TPDUSZ));

   7644  2 000326   600000 036007                    ADLQ    -65536,DL
PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:153  
         2 000327   200006 756100                    STQ     DPTR$,,AUTO

     1073     7645
     1074     7646        /* Build the TSAP ID parameters.
     1075     7647        */
     1076     7648    1      TEMP = CTX.SSN.DST_TSAP.LEN;

   7648  2 000330   100031 236100                    LDQ     25,,PR1
         2 000331   000022 772000                    QRL     18
         2 000332   200011 756100                    STQ     TEMP,,AUTO

     1077     7649    1      IF TEMP > 0

   7649  2 000333   000355 604400 2                  TMOZ    s:7658

     1078     7650    2      THEN DO;

     1079     7651    2           DPTR$->K$TPARM_TSAP_ID.CODE = %K_TPARM_CALLED_TSAP;

   7651  2 000334   200006 474500                    LDP4    DPTR$,,AUTO
         2 000335   000100 101400                    MRL     fill='000'O
         2 000336   000005 000004 3                  ADSC9   5                        cn=0,n=4
         2 000337   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1

     1080     7652
     1081     7653    2           DPTR$->K$TPARM_TSAP_ID.LEN = CTX.SSN.DST_TSAP.LEN;

   7653  2 000340   000100 101500                    MRL     fill='000'O
         2 000341   100031 000002                    ADSC9   25,,PR1                  cn=0,n=2
         2 000342   400000 200001                    ADSC9   0,,PR4                   cn=1,n=1

     1082     7654    2           ADDR(DPTR$->K$TPARM_TSAP_ID.ID)->B$CHAR = ADDR(CTX.SSN.DST_TSAP.TSAP)->
              7654                    B$CHAR;

   7654  2 000343   000000 620006                    EAX0    0,QL
         2 000344   200011 721100                    LXL1    TEMP,,AUTO
         2 000345   040140 100540                    MLR     fill='040'O
PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:154  
         2 000346   100031 400010                    ADSC9   25,,PR1                  cn=2,n=*X0
         2 000347   400000 400011                    ADSC9   0,,PR4                   cn=2,n=*X1

     1083     7655    2           DPTR$ = PINCRC(DPTR$,TEMP+2);

   7655  2 000350   200011 236100                    LDQ     TEMP,,AUTO
         2 000351   000020 736000                    QLS     16
         2 000352   400000 036007                    ADLQ    -131072,DL
         2 000353   200006 036100                    ADLQ    DPTR$,,AUTO
         2 000354   200006 756100                    STQ     DPTR$,,AUTO

     1084     7656    2           END;

     1085     7657
     1086     7658    1      TEMP = CTX.SSN.SRC_TSAP.LEN;

   7658  2 000355   100020 236100                    LDQ     16,,PR1
         2 000356   000022 772000                    QRL     18
         2 000357   200011 756100                    STQ     TEMP,,AUTO

     1087     7659    1      IF TEMP > 0

   7659  2 000360   000402 604400 2                  TMOZ    s:7668

     1088     7660    2      THEN DO;

     1089     7661    2           DPTR$->K$TPARM_TSAP_ID.CODE = %K_TPARM_CALLING_TSAP;

   7661  2 000361   200006 474500                    LDP4    DPTR$,,AUTO
         2 000362   000100 101400                    MRL     fill='000'O
         2 000363   000006 000004 3                  ADSC9   6                        cn=0,n=4
         2 000364   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1

     1090     7662
     1091     7663    2           DPTR$->K$TPARM_TSAP_ID.LEN = CTX.SSN.SRC_TSAP.LEN;

   7663  2 000365   000100 101500                    MRL     fill='000'O
PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:155  
         2 000366   100020 000002                    ADSC9   16,,PR1                  cn=0,n=2
         2 000367   400000 200001                    ADSC9   0,,PR4                   cn=1,n=1

     1092     7664    2           ADDR(DPTR$->K$TPARM_TSAP_ID.ID)->B$CHAR = ADDR(CTX.SSN.SRC_TSAP.TSAP)->
              7664                    B$CHAR;

   7664  2 000370   000000 620006                    EAX0    0,QL
         2 000371   200011 721100                    LXL1    TEMP,,AUTO
         2 000372   040140 100540                    MLR     fill='040'O
         2 000373   100020 400010                    ADSC9   16,,PR1                  cn=2,n=*X0
         2 000374   400000 400011                    ADSC9   0,,PR4                   cn=2,n=*X1

     1093     7665    2           DPTR$ = PINCRC(DPTR$,TEMP+2);

   7665  2 000375   200011 236100                    LDQ     TEMP,,AUTO
         2 000376   000020 736000                    QLS     16
         2 000377   400000 036007                    ADLQ    -131072,DL
         2 000400   200006 036100                    ADLQ    DPTR$,,AUTO
         2 000401   200006 756100                    STQ     DPTR$,,AUTO

     1094     7666    2           END;

     1095     7667
     1096     7668    1      IF CTX.SSN.CLASS = 0

   7668  2 000402   100016 236100                    LDQ     14,,PR1
         2 000403   000777 316003                    CANQ    511,DU
         2 000404   000513 600000 2                  TZE     SEND_TO_NET

     1097     7669    1      THEN GOTO SEND_TO_NET;
     1098     7670
     1099     7671    1      IF CTX.SSN.CLASS = 2

   7671  2 000405   100016 236100                    LDQ     14,,PR1
         2 000406   000777 376003                    ANQ     511,DU
         2 000407   000002 116003                    CMPQ    2,DU
         2 000410   000442 600000 2                  TZE     BUILD_OPT
PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:156  

     1100     7672    1      THEN GOTO BUILD_OPT;
     1101     7673
     1102     7674        /* Build the checksum parameter.
     1103     7675        */
     1104     7676    1      IF CTX.SSN.TR_FLAGS.CHKSUM ~= '0'B

   7676  2 000411   100016 236100                    LDQ     14,,PR1
         2 000412   000001 316007                    CANQ    1,DL
         2 000413   000433 600000 2                  TZE     s:7683

     1105     7677    2      THEN DO;

     1106     7678    2           DPTR$->CHR4BSD = ADDR(K_CKSUM_INIT)->CHR4BSD;

   7678  2 000414   200006 474500                    LDP4    DPTR$,,AUTO
         2 000415   040100 100400                    MLR     fill='040'O
         2 000416   000000 000004 xsym               ADSC9   K_CKSUM_INIT             cn=0,n=4
         2 000417   400000 000004                    ADSC9   0,,PR4                   cn=0,n=4

     1107     7679    2           DPTR$ = PINCRC(DPTR$, SIZEC(K$TPARM_CHKSUM));

   7679  2 000420   200006 236100                    LDQ     DPTR$,,AUTO
         2 000421   000001 036003                    ADLQ    1,DU
         2 000422   200006 756100                    STQ     DPTR$,,AUTO

     1108     7680    2           CHKOFF = POFFC(DPTR$,TPDU$) - 1;

   7680  2 000423   200005 236100                    LDQ     TPDU$,,AUTO
         2 000424   000020 772000                    QRL     16
         2 000425   200114 756100                    STQ     K@RWPARM+40,,AUTO
         2 000426   200006 236100                    LDQ     DPTR$,,AUTO
         2 000427   000020 772000                    QRL     16
         2 000430   200114 136100                    SBLQ    K@RWPARM+40,,AUTO
         2 000431   000001 136007                    SBLQ    1,DL
         2 000432   200014 756100                    STQ     CHKOFF,,AUTO

PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:157  
     1109     7681    2           END;

     1110     7682
     1111     7683    1      IF ENTRY_SWITCH = %K_TPDU_TYPE_CR

   7683  2 000433   000016 115007                    CMPA    14,DL
         2 000434   000442 601000 2                  TNZ     BUILD_OPT

     1112     7684    2      THEN DO;

     1113     7685    2           CTX.SSN.TR_FLAGS.CHKSUM = SAVE_CHKSUM;

   7685  2 000435   200015 236100                    LDQ     SAVE_CHKSUM,,AUTO
         2 000436   000043 772000                    QRL     35
         2 000437   100016 676100                    ERQ     14,,PR1
         2 000440   000001 376007                    ANQ     1,DL
         2 000441   100016 656100                    ERSQ    14,,PR1

     1114     7686    2           END;

     1115     7687
     1116     7688        /* Build the options parameter.
     1117     7689        */
     1118     7690    1   BUILD_OPT:
     1119     7691    1      DPTR$->CHR3BSD = ADDR(PARM_HDRS.OPTION)->CHR3BSD;

   7691  2 000442   200006 474500       BUILD_OPT    LDP4    DPTR$,,AUTO
         2 000443   040100 100400                    MLR     fill='040'O
         2 000444   000000 400003 0                  ADSC9   PARM_HDRS                cn=2,n=3
         2 000445   400000 000003                    ADSC9   0,,PR4                   cn=0,n=3

     1120     7692    1      TEMP = 0;

   7692  2 000446   200011 450100                    STZ     TEMP,,AUTO

     1121     7693
     1122     7694    1      IF CTX.SSN.TR_FLAGS.CHKSUM='0'B AND CTX.SSN.CLASS=4
PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:158  

   7694  2 000447   100016 236100                    LDQ     14,,PR1
         2 000450   000001 316007                    CANQ    1,DL
         2 000451   000460 601000 2                  TNZ     s:7697
         2 000452   100016 236100                    LDQ     14,,PR1
         2 000453   000777 376003                    ANQ     511,DU
         2 000454   000004 116003                    CMPQ    4,DU
         2 000455   000460 601000 2                  TNZ     s:7697

     1123     7695    1      THEN TEMP = 2;                       /*set means dont use*/

   7695  2 000456   000002 235007                    LDA     2,DL
         2 000457   200011 755100                    STA     TEMP,,AUTO

     1124     7696
     1125     7697    1      IF CTX.SSN.TR_FLAGS.EXPEDITED ~= '0'B

   7697  2 000460   100016 236100                    LDQ     14,,PR1
         2 000461   000002 316007                    CANQ    2,DL
         2 000462   000464 600000 2                  TZE     s:7700

     1126     7698    1      THEN TEMP = TEMP + 1;

   7698  2 000463   200011 054100                    AOS     TEMP,,AUTO

     1127     7699
     1128     7700    1      DPTR$->K$TPARM_GENERIC.PVALUE = TEMP;

   7700  2 000464   000100 101500                    MRL     fill='000'O
         2 000465   200011 000004                    ADSC9   TEMP,,AUTO               cn=0,n=4
         2 000466   400000 400001                    ADSC9   0,,PR4                   cn=2,n=1

     1129     7701    1      DPTR$ = PINCRC(DPTR$, SIZEC(K$TPARM_OPTION));

   7701  2 000467   200006 236100                    LDQ     DPTR$,,AUTO
         2 000470   600000 036007                    ADLQ    -65536,DL
         2 000471   200006 756100                    STQ     DPTR$,,AUTO
PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:159  

     1130     7702
     1131     7703    1      GOTO SEND_TO_NET;

   7703  2 000472   000513 710000 2                  TRA     SEND_TO_NET

   7701  2 000473                       FINISH_UP    null
     1132     7704
     1133     7705        %EJECT;
PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:160  
     1134     7706    1   FINISH_UP: ;
     1135     7707    1      K$TPDU.DST_REF = CTX.DST_REF;

   7707  2 000473   100001 220100                    LDX0    1,,PR1
         2 000474   200016 440100                    SXL0    K$TPDU,,AUTO

     1136     7708
     1137     7709    1      IF CTX.SSN.TR_FLAGS.CHKSUM ~= '0'B

   7709  2 000475   100016 236100                    LDQ     14,,PR1
         2 000476   000001 316007                    CANQ    1,DL
         2 000477   000513 600000 2                  TZE     SEND_TO_NET

     1138     7710    2      THEN DO;

     1139     7711    2           CHKOFF = K$TPDU.LI + 4;

   7711  2 000500   200016 236100                    LDQ     K$TPDU,,AUTO
         2 000501   000033 772000                    QRL     27
         2 000502   000004 036007                    ADLQ    4,DL
         2 000503   200014 756100                    STQ     CHKOFF,,AUTO

     1140     7712    2           K$TPDU.LI = K$TPDU.LI + SIZEC(K$TPARM_CHKSUM) +2;

   7712  2 000504   200016 236100                    LDQ     K$TPDU,,AUTO
         2 000505   006000 036003                    ADLQ    3072,DU
         2 000506   200016 552140                    STBQ    K$TPDU,'40'O,AUTO

     1141     7713    2           PINCRC(ADDR(K$TPDU),CHKOFF-3)->CHR4BSD = ADDR(K_CKSUM_INIT)->CHR4BSD;

   7713  2 000507   200014 236100                    LDQ     CHKOFF,,AUTO
         2 000510   040106 100400                    MLR     fill='040'O
         2 000511   000000 000004 xsym               ADSC9   K_CKSUM_INIT             cn=0,n=4
         2 000512   200015 200004                    ADSC9   SAVE_CHKSUM,Q,AUTO       cn=1,n=4

     1142     7714    2           END;

PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:161  
   7713  2 000513                       SEND_TO_NET  null
     1143     7715
     1144     7716    1   SEND_TO_NET:;
     1145     7717    1      K@RWPARM = K_RWPARM_CON;

   7717  2 000513   000100 100400                    MLR     fill='000'O
         2 000514   000000 000234 xsym               ADSC9   K_RWPARM_CON             cn=0,n=156
         2 000515   200044 000234                    ADSC9   K@RWPARM,,AUTO           cn=0,n=156

     1146     7718    1      K@RWPARM.TCTX# = CTX.SRC_REF;

   7718  2 000516   100001 720100                    LXL0    1,,PR1
         2 000517   200077 740100                    STX0    K@RWPARM+27,,AUTO

     1147     7719    1      K@RWPARM.FEX = CTX.NODE;

   7719  2 000520   100000 236100                    LDQ     0,,PR1
         2 000521   000022 772000                    QRL     18
         2 000522   000777 376007                    ANQ     511,DL
         2 000523   200065 756100                    STQ     K@RWPARM+17,,AUTO

     1148     7720    1      K@RWPARM.THDR$ = TPDU$;

   7720  2 000524   200005 236100                    LDQ     TPDU$,,AUTO
         2 000525   200070 756100                    STQ     K@RWPARM+20,,AUTO

     1149     7721    1      K@RWPARM.THDRSZ = K$TPDU.LI +1;

   7721  2 000526   200016 236100                    LDQ     K$TPDU,,AUTO
         2 000527   000033 772000                    QRL     27
         2 000530   000001 036007                    ADLQ    1,DL
         2 000531   200071 756100                    STQ     K@RWPARM+21,,AUTO

     1150     7722
     1151     7723    1      K@RWPARM.FUNCTION = %K_WRITE;

   7723  2 000532   000001 235007                    LDA     1,DL
PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:162  
         2 000533   200064 755100                    STA     K@RWPARM+16,,AUTO

     1152     7724
     1153     7725    1      IF CTX.SSN.TR_FLAGS.OSI

   7725  2 000534   100016 236100                    LDQ     14,,PR1
         2 000535   000020 316007                    CANQ    16,DL
         2 000536   000562 600000 2                  TZE     s:7739

     1154     7726    2      THEN DO;

     1155     7727    2           IF ENTRY_SWITCH = %K_TPDU_TYPE_CR

   7727  2 000537   200013 235100                    LDA     ENTRY_SWITCH,,AUTO
         2 000540   000016 115007                    CMPA    14,DL
         2 000541   000560 601000 2                  TNZ     s:7736

     1156     7728    3           THEN DO;

     1157     7729    3                CTX.SSN.TR_FLAGS.HOST_REF = CTX.SRC_REF;

   7729  2 000542   100001 236100                    LDQ     1,,PR1
         2 000543   000011 736000                    QLS     9
         2 000544   100016 552110                    STBQ    14,'10'O,PR1

     1158     7730    3                K@RWPARM.FPT$ = K$RWPARM.FPT$;

   7730  2 000545   000017 236100                    LDQ     15,,PR0
         2 000546   200063 756100                    STQ     K@RWPARM+15,,AUTO

     1159     7731
     1160     7732    3                K@RWPARM.FUNCTION = %K_NCONNECT_REQ; /*so NW will build big hdr*/

   7732  2 000547   000037 235007                    LDA     31,DL
         2 000550   200064 755100                    STA     K@RWPARM+16,,AUTO

     1161     7733    3                K@RWPARM.SRC_ADDR$ = ADDR(CTX.SSN.SRC_NSAP);
PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:163  

   7733  2 000551   200004 236100                    LDQ     CTX$,,AUTO
         2 000552   000042 036003                    ADLQ    34,DU
         2 000553   200100 756100                    STQ     K@RWPARM+28,,AUTO

     1162     7734    3                K@RWPARM.DST_ADDR$ = ADDR(CTX.SSN.DST_NSAP);

   7734  2 000554   200004 236100                    LDQ     CTX$,,AUTO
         2 000555   000007 036000 3                  ADLQ    7
         2 000556   200101 756100                    STQ     K@RWPARM+29,,AUTO

     1163     7735    3                END;

   7735  2 000557   000562 710000 2                  TRA     s:7739

     1164     7736    2           ELSE K@RWPARM.FUNCTION = %K_NDATA; /*so NW will build little hdr*/

   7736  2 000560   000041 235007                    LDA     33,DL
         2 000561   200064 755100                    STA     K@RWPARM+16,,AUTO

     1165     7737    2           END;

     1166     7738
     1167     7739    1      CALL KIN$SEND(K@RWPARM)

   7739  2 000562   200044 634500                    EPPR4   K@RWPARM,,AUTO
         2 000563   200114 454500                    STP4    K@RWPARM+40,,AUTO
         2 000564   200114 630500                    EPPR0   K@RWPARM+40,,AUTO
         2 000565   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000566   000000 701000 xent               TSX1    KIN$SEND
         2 000567   000571 702000 2                  TSX2    s:7741
         2 000570   000616 710000 2                  TRA     s:7757

     1168     7740    2      WHENALTRETURN DO;

     1169     7741    2           KIT_KIN_ALTRET = KIT_KIN_ALTRET+1;

PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:164  
   7741  2 000571   000000 235000 xsym               LDA     KIT_KIN_ALTRET
         2 000572   000001 035007                    ADLA    1,DL
         2 000573   000000 755000 xsym               STA     KIT_KIN_ALTRET

     1170     7742
     1171     7743    2           K$RWPARM.ERR = K@RWPARM.ERR;

   7743  2 000574   200003 470500                    LDP0    @K$RWPARM,,AUTO
         2 000575   200057 236100                    LDQ     K@RWPARM+11,,AUTO
         2 000576   000013 756100                    STQ     11,,PR0

     1172     7744    2           K$RWPARM.MSG_ERRCODE = K@RWPARM.MSG_ERRCODE;

   7744  2 000577   200103 236100                    LDQ     K@RWPARM+31,,AUTO
         2 000600   000037 756100                    STQ     31,,PR0

     1173     7745
     1174     7746    2           IF K@RWPARM.ERR = %K$USER_ERR

   7746  2 000601   200057 235100                    LDA     K@RWPARM+11,,AUTO
         2 000602   000010 115007                    CMPA    8,DL
         2 000603   000605 601000 2                  TNZ     s:7749

     1175     7747    2           THEN ALTRETURN;

   7747  2 000604   000000 702200 xent               TSX2  ! X66_AALT

     1176     7748
     1177     7749    2           IF CTX.SSN.TR_FLAGS.OSI AND KIT_OSI_SNAP ~= 0

   7749  2 000605   200004 471500                    LDP1    CTX$,,AUTO
         2 000606   100016 236100                    LDQ     14,,PR1
         2 000607   000020 316007                    CANQ    16,DL
         2 000610   000615 600000 2                  TZE     s:7752
         2 000611   000000 235000 xsym               LDA     KIT_OSI_SNAP
         2 000612   000615 600000 2                  TZE     s:7752

PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:165  
     1178     7750    2           THEN CALL SC_PRTCL_SNAP;

   7750  2 000613   000000 713400 xsym               CLIMB   SC_PRTCL_SNAP
         2 000614   000000 600000 xsid               climb   nvectors=         0

     1179     7751
     1180     7752    2           ALTRETURN;

   7752  2 000615   000000 702200 xent               TSX2  ! X66_AALT

     1181     7753    2           END;
     1182     7754
     1183     7755        /* Set the node info in case it was a TPDU_CR.
     1184     7756        */
     1185     7757    1      IF ENTRY_SWITCH = %K_TPDU_TYPE_CR

   7757  2 000616   200013 235100                    LDA     ENTRY_SWITCH,,AUTO
         2 000617   000016 115007                    CMPA    14,DL
         2 000620   000626 601000 2                  TNZ     s:7762

     1186     7758    2      THEN DO;

     1187     7759    2           K$RWPARM.FEX = K@RWPARM.FEX;

   7759  2 000621   200003 470500                    LDP0    @K$RWPARM,,AUTO
         2 000622   200065 236100                    LDQ     K@RWPARM+17,,AUTO
         2 000623   000021 756100                    STQ     17,,PR0

     1188     7760    2           K$RWPARM.LOCAL_FEP = K@RWPARM.LOCAL_FEP;

   7760  2 000624   200076 236100                    LDQ     K@RWPARM+26,,AUTO
         2 000625   000032 552104                    STBQ    26,'04'O,PR0

     1189     7761    2           END;

     1190     7762    1      RETURN;

PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:166  
   7762  2 000626   000000 702200 xent               TSX2  ! X66_ARET

PARM_HDRS
 Sect OctLoc
   0     000   300001 306001   000340 001000                                    ........

E$DATA_SZ
 Sect OctLoc
   1     000   131124 431564                                                    YT..

(unnamed)
 Sect OctLoc
   3     000   777777 763777   777417 777777   777760 777777   000001 600000    ................
   3     004   777777 776777   000000 000302   000000 000301   000047 400000    .............'..
     1191     7763
     1192     7764    1   END KIT$SEND_TPDU;
     1193     7765        %EOD;

PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:167  
--  Include file information  --

   UD_SEV_C.:E05TOU  is referenced.
   KI_ERRORS_C.:E05TOU  is referenced.
   UM_CP6.:E05TOU  is referenced.
   K_SUBS_C.:E05TOU  is referenced.
   K_INTERFACE_M.:E05TOU  is referenced.
   K_TRANSPORT_M.:E05TOU  is referenced.
   K_TRANSPORT_E.:E05TOU  is referenced.
   KI_MACROS_C.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   K$RWPARM.:E05TOU  is referenced.
      No diagnostics issued in procedure KIT$SEND_TPDU.
PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:168  

 **** Variables and constants ****

  ****  Section 000 RoData KIT$SEND_TPDU

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(72)    r     1 PARM_HDRS

  ****  Section 001  Data  KIT$SEND_TPDU

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC        r     1 E$DATA_SZ

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @K$RWPARM                 14-0-0/w SBIN        r     1 CHKOFF
     4-0-0/w PTR         r     1 CTX$                       6-0-0/w PTR         r     1 DPTR$
    13-0-0/w SBIN        r     1 ENTRY_SWITCH              *0-0-0/d STRC(1404)  r     1 K$RWPARM
    16-0-0/w STRC(765)   r     1 K$TPDU                    44-0-0/d STRC(1404)  r     1 K@RWPARM
    15-0-0/w BIT         r     1 SAVE_CHKSUM               10-0-0/w SBIN        r     1 SPDU_SZ
    11-0-0/w SBIN        r     1 TEMP                       7-0-0/w SBIN        r     1 THDR_SZ
     5-0-0/w PTR         r     1 TPDU$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 KIT_KIN_ALTRET             0-0-0/w UBIN        r     1 KIT_OSI_SNAP
     0-0-0/w PTR         r     1 KI_TCTX$$                  0-0-0/c CHAR(4)     r     1 K_CKSUM_INIT
     0-0-0/d STRC(1404)  r     1 K_RWPARM_CON
PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:169  

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c ACHR        r     1 B$CHAR                     0-0-0/c CHAR(2)     r     1 CHR2BSD
     0-0-0/c CHAR(3)     r     1 CHR3BSD                    0-0-0/c CHAR(4)     r     1 CHR4BSD
     0-0-0/w STRC(1620)  r     1 CTX                        0-0-0/c STRC        r     1 K$TPARM_CHKSUM
     0-0-0/c STRC(27)    r     1 K$TPARM_CLR_INFO           0-0-0/c STRC(27)    r     1 K$TPARM_GENERIC
     0-0-0/c STRC(27)    r     1 K$TPARM_OPTION             0-0-0/c STRC(27)    r     1 K$TPARM_TPDUSZ
     0-0-0/c STRC(306)   r     1 K$TPARM_TSAP_ID            0-0-0/c STRC(63)    r     1 K$TPDU_CR_CC
     0-0-0/c STRC(63)    r     1 K$TPDU_DR
     0-0-0/w PTR         r     1 KI$TCTX$(0:0)
     0-0-0/w STRC(63)    r     1 TPDU_C                     0-0-0/w STRC(63)    r     1 TPDU_DR


   Procedure KIT$SEND_TPDU requires 407 words for executable code.
   Procedure KIT$SEND_TPDU requires 78 words of local(AUTO) storage.
PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:170  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:171  
          MINI XREF LISTING

B$CHAR
      7135**DCL      7654<<ASSIGN   7654>>ASSIGN   7664<<ASSIGN   7664>>ASSIGN
BUILD_OPT
      7691**LABEL    7672--GOTO
CHKOFF
      5344**DCL      7680<<ASSIGN   7711<<ASSIGN   7713>>ASSIGN
CHR2BSD
      7134**DCL      7642<<ASSIGN   7642>>ASSIGN
CHR3BSD
      7133**DCL      7617<<ASSIGN   7617>>ASSIGN   7691<<ASSIGN   7691>>ASSIGN
CHR4BSD
      7132**DCL      7678<<ASSIGN   7678>>ASSIGN   7713<<ASSIGN   7713>>ASSIGN
CTX.DST_REF
      5970**DCL      7606>>ASSIGN   7707>>ASSIGN
CTX.ERR
      5964**DCL      7534>>IF       7535<<ASSIGN   7618>>ASSIGN
CTX.LOCAL_TERM
      6007**DCL      7540<<ASSIGN
CTX.NODE
      5950**DCL      7719>>ASSIGN
CTX.REASON
      5958**DCL      7532>>IF       7535>>ASSIGN   7536<<ASSIGN   7611>>ASSIGN
CTX.SRC_REF
      5978**DCL      7605>>ASSIGN   7718>>ASSIGN   7729>>ASSIGN
CTX.SSN.CLASS
      6132**DCL      7528>>IF       7528>>IF       7554>>IF       7580>>IF       7580>>IF       7585>>IF
      7590>>IF       7614>>IF       7614>>IF       7626>>ASSIGN   7628>>IF       7668>>IF       7671>>IF
      7694>>IF
CTX.SSN.DST_NSAP
      6369**DCL      7734--ASSIGN
CTX.SSN.DST_NSAP.ADDRESS_N
      6399**DCL      6400--REDEF
PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:172  
CTX.SSN.DST_TSAP.LEN
      6269**DCL      7574>>IF       7575>>ASSIGN   7648>>ASSIGN   7653>>ASSIGN
CTX.SSN.DST_TSAP.TSAP
      6277**DCL      7654--ASSIGN
CTX.SSN.SRC_NSAP
      6309**DCL      7733--ASSIGN
CTX.SSN.SRC_NSAP.ADDRESS_N
      6339**DCL      6340--REDEF
CTX.SSN.SRC_TSAP.LEN
      6227**DCL      7577>>IF       7578>>ASSIGN   7658>>ASSIGN   7663>>ASSIGN
CTX.SSN.SRC_TSAP.TSAP
      6235**DCL      7664--ASSIGN
CTX.SSN.TPDUSIZE
      6102**DCL      6103--REDEF
CTX.SSN.TPDUSZ_PARM
      6103**DCL      7643>>ASSIGN
CTX.SSN.TR_FLAGS.CHKSUM
      6196**DCL      7552>>ASSIGN   7555<<ASSIGN   7585>>IF       7676>>IF       7685<<ASSIGN   7694>>IF
      7709>>IF
CTX.SSN.TR_FLAGS.CLASS_2_FLOW
      6170**DCL      7629>>IF
CTX.SSN.TR_FLAGS.EXPEDITED
      6184**DCL      7697>>IF
CTX.SSN.TR_FLAGS.EXTENDED
      6177**DCL      7633>>ASSIGN
CTX.SSN.TR_FLAGS.HOST_REF
      6140**DCL      7729<<ASSIGN
CTX.SSN.TR_FLAGS.OSI
      6164**DCL      7554>>IF       7590>>IF       7725>>IF       7749>>IF
CTX$
      5335**DCL      5943--IMP-PTR  7523<<ASSIGN   7528>>IF       7528>>IF       7532>>IF       7534>>IF
      7535>>ASSIGN   7535>>ASSIGN   7536>>ASSIGN   7540>>ASSIGN   7549<<ASSIGN   7552>>ASSIGN   7554>>IF
      7554>>IF       7555>>ASSIGN   7567<<ASSIGN   7574>>IF       7575>>ASSIGN   7577>>IF       7578>>ASSIGN
      7580>>IF       7580>>IF       7585>>IF       7585>>IF       7590>>IF       7590>>IF       7605>>ASSIGN
      7606>>ASSIGN   7611>>ASSIGN   7614>>IF       7614>>IF       7618>>ASSIGN   7626>>ASSIGN   7628>>IF
      7629>>IF       7633>>ASSIGN   7643>>ASSIGN   7648>>ASSIGN   7653>>ASSIGN   7654>>ASSIGN   7658>>ASSIGN
PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:173  
      7663>>ASSIGN   7664>>ASSIGN   7668>>IF       7671>>IF       7676>>IF       7685>>ASSIGN   7694>>IF
      7694>>IF       7697>>IF       7707>>ASSIGN   7709>>IF       7718>>ASSIGN   7719>>ASSIGN   7725>>IF
      7729>>ASSIGN   7729>>ASSIGN   7733>>ASSIGN   7734>>ASSIGN   7749>>IF
DPTR$
      5337**DCL      7616<<ASSIGN   7617>>ASSIGN   7618>>ASSIGN   7638<<ASSIGN   7642>>ASSIGN   7643>>ASSIGN
      7644<<ASSIGN   7644>>ASSIGN   7651>>ASSIGN   7653>>ASSIGN   7654>>ASSIGN   7655<<ASSIGN   7655>>ASSIGN
      7661>>ASSIGN   7663>>ASSIGN   7664>>ASSIGN   7665<<ASSIGN   7665>>ASSIGN   7678>>ASSIGN   7679<<ASSIGN
      7679>>ASSIGN   7680>>ASSIGN   7691>>ASSIGN   7700>>ASSIGN   7701<<ASSIGN   7701>>ASSIGN
E$DATA_SZ
      7482**DCL      7598>>ASSIGN
ENTRY_SWITCH
      5343**DCL      7524<<ASSIGN   7550<<ASSIGN   7568<<ASSIGN   7593>>IF       7593>>IF       7593>>IF
      7608>>IF       7624>>ASSIGN   7683>>IF       7727>>IF       7757>>IF
FINISH_UP
      7701**LABEL    7621--GOTO
GET_INIT_THDR_SZ
      7568**LABEL    7557--GOTO
GOT_INIT_THDR_SZ
      7580**LABEL    7541--GOTO
K$RWPARM
      5038**DCL        14--PROC     7522--ENTRY    7548--ENTRY    7566--ENTRY
K$RWPARM.BLKREC
      5064**DCL      5089--REDEF
K$RWPARM.BLKREC.BLKU#
      5065**DCL      5067--REDEF
K$RWPARM.BLKREC.RECU#
      5077**DCL      5079--REDEF
K$RWPARM.DVE.DVBYTE.VFC
      5104**DCL      5105--REDEF
K$RWPARM.DVE.EOMCHAR
      5112**DCL      5116--REDEF
K$RWPARM.ERR
      5176**DCL      5181--REDEF    7743<<ASSIGN
K$RWPARM.FC
      5140**DCL      5141--REDEF
K$RWPARM.FEX
PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:174  
      5222**DCL      7759<<ASSIGN
K$RWPARM.FLDID
      5322**DCL      5323--REDEF
K$RWPARM.FPT$
      5203**DCL      5210--REDEF    7730>>ASSIGN
K$RWPARM.KEYTYPE
      5329**DCL      5330--REDEF
K$RWPARM.LOCAL_FEP
      5269**DCL      7760<<ASSIGN
K$RWPARM.MSG$
      5039**DCL      5045--REDEF
K$RWPARM.MSGID
      5151**DCL      5156--REDEF
K$RWPARM.MSGIDXT
      5164**DCL      5168--REDEF
K$RWPARM.MSGSZ
      5046**DCL      7588>>ASSIGN
K$RWPARM.MSG_ERRCODE
      5299**DCL      7598<<ASSIGN   7744<<ASSIGN
K$RWPARM.ORG
      5300**DCL      5301--REDEF
K$RWPARM.SHDRSZ
      5236**DCL      7588>>ASSIGN
K$RWPARM.TCTX#
      5274**DCL      7549>>ASSIGN   7567>>ASSIGN
K$RWPARM.TCTX$
      5210**DCL      7523>>ASSIGN
K$RWPARM.THDRSZ
      5244**DCL      5248--REDEF
K$RWPARM.UHDRSZ
      5194**DCL      7588>>ASSIGN
K$RWPARM.VDOFLGS
      5302**DCL      5313--REDEF
K$TPARM_CHKSUM
      6901**DCL      7586--ASSIGN   7679--ASSIGN   7712--ASSIGN
K$TPARM_CLR_INFO
PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:175  
      7099**DCL      7529--ASSIGN
K$TPARM_CLR_INFO.ERR
      7123**DCL      7618<<ASSIGN
K$TPARM_CLR_INFO.PVALUE
      7116**DCL      7123--REDEF
K$TPARM_GENERIC.PVALUE
      6952**DCL      7700<<ASSIGN
K$TPARM_OPTION
      7052**DCL      7581--ASSIGN   7701--ASSIGN
K$TPARM_TPDUSZ
      6976**DCL      7571--ASSIGN   7644--ASSIGN
K$TPARM_TPDUSZ.SIZE
      6989**DCL      7643<<ASSIGN
K$TPARM_TSAP_ID.CODE
      7019**DCL      7651<<ASSIGN   7661<<ASSIGN
K$TPARM_TSAP_ID.ID
      7030**DCL      7654--ASSIGN   7664--ASSIGN
K$TPARM_TSAP_ID.LEN
      7025**DCL      7653<<ASSIGN   7663<<ASSIGN
K$TPDU
      5365**DCL      7602--ASSIGN   7713--ASSIGN
K$TPDU.DST_REF
      5383**DCL      7707<<ASSIGN
K$TPDU.LI
      5366**DCL      7711>>ASSIGN   7712<<ASSIGN   7712>>ASSIGN   7721>>ASSIGN
K$TPDU_CR_CC
      6710**DCL      7571--ASSIGN   7638--ASSIGN
K$TPDU_DR
      6779**DCL      7526--ASSIGN   7616--ASSIGN
K@RWPARM
      5640**DCL      7717<<ASSIGN   7739<>CALL
K@RWPARM.BLKREC
      5666**DCL      5691--REDEF
K@RWPARM.BLKREC.BLKU#
      5667**DCL      5669--REDEF
K@RWPARM.BLKREC.RECU#
PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:176  
      5679**DCL      5681--REDEF
K@RWPARM.DST_ADDR$
      5891**DCL      7734<<ASSIGN
K@RWPARM.DVE.DVBYTE.VFC
      5706**DCL      5707--REDEF
K@RWPARM.DVE.EOMCHAR
      5714**DCL      5718--REDEF
K@RWPARM.ERR
      5778**DCL      5783--REDEF    7743>>ASSIGN   7746>>IF
K@RWPARM.FC
      5742**DCL      5743--REDEF
K@RWPARM.FEX
      5824**DCL      7719<<ASSIGN   7759>>ASSIGN
K@RWPARM.FLDID
      5924**DCL      5925--REDEF
K@RWPARM.FPT$
      5805**DCL      5812--REDEF    7730<<ASSIGN
K@RWPARM.FUNCTION
      5819**DCL      7723<<ASSIGN   7732<<ASSIGN   7736<<ASSIGN
K@RWPARM.KEYTYPE
      5931**DCL      5932--REDEF
K@RWPARM.LOCAL_FEP
      5871**DCL      7760>>ASSIGN
K@RWPARM.MSG$
      5641**DCL      5647--REDEF
K@RWPARM.MSGID
      5753**DCL      5758--REDEF
K@RWPARM.MSGIDXT
      5766**DCL      5770--REDEF
K@RWPARM.MSG_ERRCODE
      5901**DCL      7744>>ASSIGN
K@RWPARM.ORG
      5902**DCL      5903--REDEF
K@RWPARM.SRC_ADDR$
      5886**DCL      7733<<ASSIGN
K@RWPARM.TCTX#
PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:177  
      5876**DCL      7718<<ASSIGN
K@RWPARM.THDR$
      5842**DCL      7720<<ASSIGN
K@RWPARM.THDRSZ
      5846**DCL      5850--REDEF    7721<<ASSIGN
K@RWPARM.VDOFLGS
      5904**DCL      5915--REDEF
KI$TCTX$
      5941**DCL      7549>>ASSIGN   7567>>ASSIGN
KIN$SEND
      5937**DCL-ENT  7739--CALL
KIT_KIN_ALTRET
      7457**DCL      7741<<ASSIGN   7741>>ASSIGN
KIT_OSI_SNAP
      7458**DCL      7749>>IF
KI_TCTX$$
      7139**DCL      5941--IMP-PTR  7549>>ASSIGN   7567>>ASSIGN
K_CKSUM_INIT
      7456**DCL      7678--ASSIGN   7713--ASSIGN
K_RWPARM_CON
      7161**DCL      7717>>ASSIGN
K_RWPARM_CON.BLKREC
      7187**DCL      7212--REDEF
K_RWPARM_CON.BLKREC.BLKU#
      7188**DCL      7190--REDEF
K_RWPARM_CON.BLKREC.RECU#
      7200**DCL      7202--REDEF
K_RWPARM_CON.DVE.DVBYTE.VFC
      7227**DCL      7228--REDEF
K_RWPARM_CON.DVE.EOMCHAR
      7235**DCL      7239--REDEF
K_RWPARM_CON.ERR
      7299**DCL      7304--REDEF
K_RWPARM_CON.FC
      7263**DCL      7264--REDEF
K_RWPARM_CON.FLDID
PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:178  
      7445**DCL      7446--REDEF
K_RWPARM_CON.FPT$
      7326**DCL      7333--REDEF
K_RWPARM_CON.KEYTYPE
      7452**DCL      7453--REDEF
K_RWPARM_CON.MSG$
      7162**DCL      7168--REDEF
K_RWPARM_CON.MSGID
      7274**DCL      7279--REDEF
K_RWPARM_CON.MSGIDXT
      7287**DCL      7291--REDEF
K_RWPARM_CON.ORG
      7423**DCL      7424--REDEF
K_RWPARM_CON.THDRSZ
      7367**DCL      7371--REDEF
K_RWPARM_CON.VDOFLGS
      7425**DCL      7436--REDEF
PARM_HDRS.CLR_INFO
      7466**DCL      7617--ASSIGN
PARM_HDRS.OPTION
      7463**DCL      7691--ASSIGN
PARM_HDRS.SIZE
      7461**DCL      7642--ASSIGN
SAVE_CHKSUM
      5345**DCL      7552<<ASSIGN   7685>>ASSIGN
SC_PRTCL_SNAP
      5938**DCL-ENT  7750--CALL
SEND_TO_NET
      7713**LABEL    7669--GOTO     7703--GOTO
SET_BADSZ
      7593**LABEL    7591--GOTO
SPDU_SZ
      5339**DCL      7588<<ASSIGN   7590>>IF       7593>>IF       7593>>IF       7593>>IF
TEMP
      5340**DCL      5341--REDEF    7135--IMP-SIZ  7136--IMP-SIZ  7648<<ASSIGN   7649>>IF       7654>>ASSIGN
      7654>>ASSIGN   7655>>ASSIGN   7658<<ASSIGN   7659>>IF       7664>>ASSIGN   7664>>ASSIGN   7665>>ASSIGN
PL6.E3A0      #004=KIT$SEND_TPDU File=KIT$TRANSPORT.:E05TSI                      WED 07/30/97 00:43 Page:179  
      7692<<ASSIGN   7695<<ASSIGN   7698<<ASSIGN   7698>>ASSIGN   7700>>ASSIGN
THDR_SZ
      5338**DCL      7526<<ASSIGN   7529<<ASSIGN   7529>>ASSIGN   7571<<ASSIGN   7575<<ASSIGN   7575>>ASSIGN
      7578<<ASSIGN   7578>>ASSIGN   7581<<ASSIGN   7581>>ASSIGN   7586<<ASSIGN   7586>>ASSIGN   7603>>ASSIGN
TPDU$
      5336**DCL      6517--IMP-PTR  6556--IMP-PTR  6599--IMP-PTR  6668--IMP-PTR  7602<<ASSIGN   7603>>ASSIGN
      7604>>ASSIGN   7605>>ASSIGN   7606>>ASSIGN   7610>>ASSIGN   7611>>ASSIGN   7612>>ASSIGN   7616>>ASSIGN
      7624>>ASSIGN   7626>>ASSIGN   7630>>ASSIGN   7631>>ASSIGN   7633>>ASSIGN   7634>>ASSIGN   7638>>ASSIGN
      7680>>ASSIGN   7720>>ASSIGN
TPDU_C.CDT
      6613**DCL      7634<<ASSIGN
TPDU_C.CLASS
      6632**DCL      7626<<ASSIGN
TPDU_C.CLASS_2_FLOW
      6645**DCL      7630<<ASSIGN   7631<<ASSIGN
TPDU_C.DST_REF
      6617**DCL      7606<<ASSIGN
TPDU_C.EXT_FMT_FLAG
      6640**DCL      7633<<ASSIGN
TPDU_C.LI
      6600**DCL      7603<<ASSIGN
TPDU_C.MBZ
      6639**DCL      7604<<ASSIGN
TPDU_C.SRC_REF
      6625**DCL      7605<<ASSIGN
TPDU_C.TYPE
      6607**DCL      7624<<ASSIGN
TPDU_DR.MBZ
      6569**DCL      7612<<ASSIGN
TPDU_DR.REASON
      6578**DCL      7611<<ASSIGN
TPDU_DR.TYPE
      6564**DCL      7610<<ASSIGN

PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:180  
     1194        1        /*M* KIT$RECV - Receive inbound TPDUs on the host.   */
     1195        2        /*T***********************************************************/
     1196        3        /*T*                                                         */
     1197        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1198        5        /*T*                                                         */
     1199        6        /*T***********************************************************/
     1200        7
     1201        8        /*X* PLM=3,IND=5,ENU=0,ECU=0   */
     1202        9
     1203       10        KIT$RECV: PROC(K$RWPARM) ALTRET;
     1204       11
     1205       12                                                /* Include files                      */
     1206       13        %INCLUDE K$RWPARM;
     1207      399        %INCLUDE K_SUBS_C;
     1208      432        %INCLUDE K_TRANSPORT_M;
     1209     2216        %INCLUDE K_TRANSPORT_E;
     1210     2541        %INCLUDE K_ADDRESS_M;
     1211     3044        %INCLUDE K_INTERFACE_M;
     1212     3453        %INCLUDE KI_MACROS_C;
     1213     4061        %INCLUDE KL_AFCN_C;
     1214     4162        %INCLUDE KL_MACRO_C;
     1215     7514        %INCLUDE HF_LOCK_C;
     1216     7528
     1217     7529                                                /* Parameter definitions              */
     1218     7530        %K$RWPARM (NAME=K$RWPARM);
     1219     7846
     1220     7847                                                /* Automatic data                     */
     1221     7848    1   DCL TCTX$ PTR;
     1222     7849    1   DCL TCTX# UBIN AUTO;
     1223     7850    1   DCL TEMP UBIN;
     1224     7851    1   DCL TYPE UBIN;
     1225     7852    1   DCL LI UBIN;
     1226     7853    1   DCL PARM$ PTR;
     1227     7854    1   DCL PARMSIZE SBIN;
     1228     7855    1   DCL DATA$ PTR;
     1229     7856    1   DCL DATASIZE UBIN;
     1230     7857    1   DCL TPDU_NR$ PTR;
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:181  
     1231     7858    1   DCL TPDU_NR UBIN;
     1232     7859    1   DCL 1 NR REDEF TPDU_NR,
     1233     7860    1         2 * BIT(5) UNAL,
     1234     7861    1         2 BYTE0 UBIN(7) UNAL,
     1235     7862    1         2 BYTE1 UBIN(8) UNAL,
     1236     7863    1         2 BYTE2 UBIN(8) UNAL,
     1237     7864    1         2 BYTE3 UBIN(8) UNAL;
     1238     7865
     1239     7866        %K$TPDU_CR_CC (STCLASS=AUTO, NAME=K$TPDU_CC);
     1240     7935        %KI$TCTX (NAME=K@TCTX, STCLASS=AUTO, FULL=NO);
     1241     8323
     1242     8324
     1243     8325        %KL_FEPST (STCLASS=AUTO);
     1244     8360                                                /* Based data                         */
     1245     8361    1   DCL KI$TCTX$(0:0) PTR BASED(KI_TCTX$$);
     1246     8362        %KI$TCTX(NAME=KI$TCTX, STCLASS="BASED(TCTX$)");
     1247     8920
     1248     8921        %K$TPDU_GENERIC (STCLASS="BASED(K$RWPARM.THDR$)", NAME=B$TPDU_GENERIC);
     1249     8981
     1250     8982        %K$TPDU_CR_CC (STCLASS="BASED(K$RWPARM.THDR$)", NAME=B$TPDU_CR);
     1251     9051
     1252     9052        %K$TPDU_DR (STCLASS="BASED(K$RWPARM.THDR$)", NAME=B$TPDU_DR);
     1253     9095        %K$TPDU_ER (STCLASS="BASED(K$RWPARM.THDR$)", NAME=B$TPDU_ER);
     1254     9134
     1255     9135        %K$TPDU_DT (STCLASS="BASED(K$RWPARM.THDR$)", NAME=B$TPDU_DT);
     1256     9185
     1257     9186        %K$TPARM_CP6_OPTIONS;
     1258     9231
     1259     9232        %K$NSAP (FPTN=B$NSAP);
     1260     9284
     1261     9285    1   DCL B$NEXT UBIN BASED;
     1262     9286    1   DCL CHRBSD CHAR(TEMP) BASED;
     1263     9287                                                /* Static definitions                 */
     1264     9288    1   DCL KI_TCTX$$ PTR SYMREF;
     1265     9289    1   DCL KIT_RECV_LOCK BIT(72) SYMREF;
     1266     9290    1   DCL KI_TCTX_USE# UBIN SYMREF;
     1267     9291    1   DCL KI_TCTX_MAX# UBIN SYMREF;
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:182  
     1268     9292
     1269     9293    1   DCL KIT_DISCARDED_TPDUS UBIN SYMREF;
     1270     9294
     1271     9295    1   DCL K_TPDU_SIZE(0:15) SBIN SYMREF;
     1272     9296    1   DCL K_TPDU_SIZE_EXT(0:15) SBIN SYMREF;
     1273     9297    1   DCL K_TPDUSZ_VALUES(0:0) UBIN SYMREF;
     1274     9298
     1275     9299    1   DCL KIT_ERROR_SNAP UBIN SYMREF;
     1276     9300    1   DCL KIT_OSI_SNAP UBIN SYMREF;
     1277     9301    1   DCL KIT_DUMP_FEP UBIN SYMREF;
     1278     9302
     1279     9303                                                /* Entry point references             */
     1280     9304    1   DCL KIN$SEND ENTRY(1) ALTRET;
     1281     9305    1   DCL KIS$OSI_RECV ENTRY(1) ALTRET;
     1282     9306    1   DCL KIS$RECV ENTRY(1) ALTRET;
     1283     9307    1   DCL KIS$REP_TERM ENTRY(1);
     1284     9308    1   DCL KIT$GETTCTX ENTRY(1) ALTRET;
     1285     9309    1   DCL KIT$RELTCTX ENTRY(1) ALTRET;
     1286     9310    1   DCL KIT$SEND_CC ENTRY(1) ALTRET;
     1287     9311    1   DCL KIT$SEND_DR ENTRY(1) ALTRET;
     1288     9312    1   DCL KUB$WRITE ENTRY(3) ALTRET;
     1289     9313    1   DCL SC_BADFNC ENTRY CONV(2,0);
     1290     9314    1   DCL SC_PRTCL_SNAP ENTRY CONV(2,0);
     1291     9315        %EJECT;
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:183  
     1292     9316        /*F* NAME: KIT$RECV
     1293     9317
     1294     9318        This routine is called from KIN$RECV. It is the interface
     1295     9319        for the lower layers to pass the incoming messages up to the
     1296     9320        user through the transport and session layers.
     1297     9321
     1298     9322        KIT$RECV is called with the K$RWPARM parameter:
     1299     9323
     1300     9324        .fif
     1301     9325        }    FUNCTION - Indicates the function to be performed.
     1302     9326        }               K_NDATA for OSI Session connections
     1303     9327        }               K_RECV for CP-6 Session connections.
     1304     9328        }
     1305     9329        }     SRC_ADDR$- Contains the address of Source Network Address
     1306     9330        }                Only set on OSI connections.
     1307     9331        }
     1308     9332        }     DST_ADDR$- Contains the address of Destination Network Address
     1309     9333        }                Only set on OSI connections.
     1310     9334        .fin
     1311     9335
     1312     9336        The action taken is dependent on the type for TPDU that has been received.
     1313     9337        See K_TPDU_TYPE_equs in file K_TRANSPORT_E for a full listing of the
     1314     9338        possible TPDU types.
     1315     9339
     1316     9340        TPDU types received are:
     1317     9341        .fif
     1318     9342        }    K_TPDU_TYPE_DT  - Data
     1319     9343        }    K_TPDU_TYPE_ED  - Expedited Data (not Class 0)
     1320     9344        }    K_TPDU_TYPE_CR  - Connect Request
     1321     9345        }    K_TPDU_TYPE_CC  - Connect Confirm
     1322     9346        }    K_TPDU_TYPE_DR  - Disconnect Request
     1323     9347        }    K_TPDU_TYPE_AK  - Acknowledge (Connect Confirm Class 4 only)
     1324     9348        }    K_TPDU_TYPE_ER  - TPDU Error
     1325     9349        .fin
     1326     9350        .fin
     1327     9351        */
     1328     9352        %EJECT;
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:184  
     1329     9353
     1330     9354        /* Screech if the function is not K_RECV or K_NDATA.
     1331     9355        */
     1332     9356    1      IF (K$RWPARM.FUNCTION ~= %K_RECV) AND (K$RWPARM.FUNCTION ~= %K_NDATA)
     1333     9357    2      THEN DO;
     1334     9358    2           CALL SC_BADFNC;                 /*full screech*/
     1335     9359
     1336     9360    2           RETURN;
     1337     9361    2           END;
     1338     9362
     1339     9363        /*S* SCREECH_CODE: KIT-S$BADFNC
     1340     9364             TYPE: SNAP
     1341     9365             MESSAGE: Bad function code passed to transport
     1342     9366        */
     1343     9367
     1344     9368    1      TYPE = B$TPDU_GENERIC.TYPE;
     1345     9369    1      LI = B$TPDU_GENERIC.LI;
     1346     9370    1      DATA$ = PINCRC(K$RWPARM.THDR$, LI +1);
     1347     9371    1      DATASIZE = K$RWPARM.THDRSZ - LI -1;
     1348     9372
     1349     9373    1      IF TYPE = %K_TPDU_TYPE_CR
     1350     9374    1      THEN GOTO FIND_PARMS;
     1351     9375
     1352     9376        /* Find the transport context block.
     1353     9377        */
     1354     9378    1      TCTX# = B$TPDU_DT.DST_REF;
     1355     9379    1      IF (TCTX#=0) OR (TCTX# > KI_TCTX_MAX#)
     1356     9380    1      THEN GOTO DISCARD_TPDU;
     1357     9381
     1358     9382    1      TCTX$ = KI$TCTX$(TCTX#);
     1359     9383    1      IF TCTX$ = ADDR(NIL)
     1360     9384    1      THEN GOTO DISCARD_TPDU;
     1361     9385
     1362     9386    1      K$RWPARM.TCTX# = TCTX#;
     1363     9387
     1364     9388        /* Find where the variable length parameters start.
     1365     9389        */
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:185  
     1366     9390    1      IF KI$TCTX.SSN.TR_FLAGS.EXTENDED = '0'B
     1367     9391    2      THEN DO;
     1368     9392    2   FIND_PARMS: ;
     1369     9393    2           TEMP = K_TPDU_SIZE(TYPE);
     1370     9394    2           END;
     1371     9395    1      ELSE TEMP = K_TPDU_SIZE_EXT(TYPE);
     1372     9396
     1373     9397    1      PARM$ = PINCRC(K$RWPARM.THDR$,TEMP);
     1374     9398    1      PARMSIZE = LI - TEMP + 1;
     1375     9399
     1376     9400
     1377     9401        /* Get set to pass the message up to session.
     1378     9402        */
     1379     9403    1      K$RWPARM.SHDR$ = DATA$;
     1380     9404    1      K$RWPARM.SHDRSZ = DATASIZE;
     1381     9405
     1382     9406
     1383     9407    2      DO CASE(TYPE);
     1384     9408
     1385     9409        %EJECT;
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:186  
     1386     9410        /*F* NAME: KIT$RECV - Data, Expedited, or Acknowledge TPDU
     1387     9411
     1388     9412        The TPDU_AK will arrive on the host only to indicate that the
     1389     9413        other end-point has responded to our Connect Confirm with an AK.
     1390     9414        The only thing that needs to be done is to mark the transport
     1391     9415        context block to indicate that the connection is open.
     1392     9416
     1393     9417        When the TPDU is data or expediated data, the session
     1394     9418        header address and size in K$RWPARM are updated to
     1395     9419        reflect the stripping off of the transport header and we call
     1396     9420        KIS$RECV or KIS$OSI_RECV passing the single parameter K$RWPARM.
     1397     9421        There is no check on the received sequence number.
     1398     9422        */
     1399     9423
     1400     9424    2       CASE( %K_TPDU_TYPE_DT, %K_TPDU_TYPE_ED, %K_TPDU_TYPE_AK);
     1401     9425
     1402     9426        /* Dont bother with I$CHK_PARMS as the local fep will have done that.
     1403     9427        */
     1404     9428
     1405     9429    2         IF KI$TCTX.STATE = %KI_TSTATE_AKWAIT
     1406     9430    3         THEN DO;
     1407     9431    3              KI$TCTX.STATE = %KI_TSTATE_OPEN;
     1408     9432    3              KI$TCTX.FLOW_CONTROLLED = '0'B;
     1409     9433
     1410     9434        /*N*       unreg for QFULL equivalent   */
     1411     9435    3              IF TYPE = %K_TPDU_TYPE_AK
     1412     9436    3              THEN RETURN;
     1413     9437    3              END;
     1414     9438
     1415     9439    2         IF TYPE = %K_TPDU_TYPE_AK
     1416     9440    2         THEN GOTO LOG_BAD_TPDU;
     1417     9441
     1418     9442    2         IF KI$TCTX.STATE ~= %KI_TSTATE_OPEN
     1419     9443    3         THEN DO;
     1420     9444    3              IF KI$TCTX.STATE = %KI_TSTATE_CLOSED
     1421     9445    3              THEN RETURN;
     1422     9446    3              ELSE GOTO LOG_BAD_TPDU;
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:187  
     1423     9447    3              END;
     1424     9448
     1425     9449    2   XMIT_TO_SESSION:
     1426     9450    2         IF KI$TCTX.SSN.TR_FLAGS.OSI
     1427     9451    3         THEN DO;
     1428     9452    3              IF TYPE = %K_TPDU_TYPE_DT
     1429     9453    4              THEN DO;
     1430     9454    4                   KI$TCTX.SSN_CRDT = KI$TCTX.SSN_CRDT -1;
     1431     9455    4                   K$RWPARM.FUNCTION = %K_TDATA_IND;
     1432     9456    4                   END;
     1433     9457    3              ELSE K$RWPARM.FUNCTION = %K_TEXPD_DATA_IND;
     1434     9458
     1435     9459    3              K$RWPARM.TCTX$ = ADDR(KI$TCTX);
     1436     9460
     1437     9461    3              CALL KIS$OSI_RECV(K$RWPARM)
     1438     9462    4              WHENALTRETURN DO;
     1439     9463    4                   CALL I$CHECK_SNAP;
     1440     9464
     1441     9465    4                   IF K$RWPARM.ERR = %K$WAIT_READ
     1442     9466    4                   THEN ALTRETURN;
     1443     9467
     1444     9468    4                   IF K$RWPARM.ERR = %K$DEFER_IO
     1445     9469    4                   THEN ALTRETURN;
     1446     9470
     1447     9471    4                   END/*altret from kis$osi_recv*/;
     1448     9472    3              END/*do if osi*/;
     1449     9473
     1450     9474    3         ELSE DO;
     1451     9475    3              CALL KIS$RECV (K$RWPARM)
     1452     9476    4              WHENALTRETURN DO;
     1453     9477    4                   IF K$RWPARM.ERR = %K$DEFER_IO
     1454     9478    4                   THEN ALTRETURN;
     1455     9479    4                   END/*whenaltreturn*/;
     1456     9480    3              END/*do if not osi connection*/;
     1457     9481
     1458     9482    2         IF TYPE = %K_TPDU_TYPE_DT
     1459     9483    2         THEN TPDU_NR$ = ADDR(KI$TCTX.RECV_NEXT);
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:188  
     1460     9484    2         ELSE TPDU_NR$ = ADDR(KI$TCTX.RECV_EXPD);
     1461     9485
     1462     9486    2         TPDU_NR$->B$NEXT = TPDU_NR$->B$NEXT +1;
     1463     9487
     1464     9488    2         IF K$RWPARM.ERR = %K$WAIT_READ
     1465     9489    2         THEN ALTRETURN;
     1466     9490    2         ELSE RETURN;
     1467     9491
     1468     9492        %EJECT;
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:189  
     1469     9493        /*F* NAME: KIT$RECV - Connect Request TPDU
     1470     9494
     1471     9495        A Connect Request may be received for either an OSI Transport
     1472     9496        connection or a CP-6 Transport connection.
     1473     9497        */
     1474     9498    2       CASE( %K_TPDU_TYPE_CR);
     1475     9499    2         IF K$RWPARM.THDRSZ < LENGTHC(B$TPDU_CR)
     1476     9500    2         THEN GOTO LOG_BAD_TPDU;
     1477     9501
     1478     9502        /* Assign a Transport level context block.
     1479     9503        */
     1480     9504              %LOCK (G=KIT_RECV_LOCK);
     1481     9507
     1482     9508    2         K@TCTX = '0'B;
     1483     9509    2         CALL KIT$GETTCTX(TCTX$)
     1484     9510    3         WHENALTRETURN DO;
     1485     9511    3              K@TCTX.REASON = %K_REASON_CONGESTION;
     1486     9512    3              K@TCTX.ERR = %K_ERROR_NO_TCTX;
     1487     9513    3   RETURN_TPDU_DR2: ;
     1488     9514                   %UNLOCK (G=KIT_RECV_LOCK);
     1489     9517
     1490     9518    3              K@TCTX.SSN.CLASS = B$TPDU_CR.CLASS;
     1491     9519    3              K@TCTX.NODE = K$RWPARM.FEX;
     1492     9520    3              K@TCTX.DST_REF = B$TPDU_CR.SRC_REF;
     1493     9521
     1494     9522    3              IF K$RWPARM.FUNCTION = %K_NDATA
     1495     9523    3              THEN K@TCTX.SSN.TR_FLAGS.OSI = '1'B;
     1496     9524
     1497     9525    3              K$RWPARM.TCTX$ = ADDR(K@TCTX);
     1498     9526    3              K$RWPARM.SHDRSZ = 0;
     1499     9527    3              K$RWPARM.UHDRSZ = 0;
     1500     9528    3              K$RWPARM.MSGSZ = 0;
     1501     9529
     1502     9530    3              CALL KIT$SEND_DR (K$RWPARM);
     1503     9531    3              GOTO LOG_BAD_TPDU;
     1504     9532    3              END;
     1505     9533
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:190  
     1506     9534    2         TCTX# = KI$TCTX.SRC_REF;
     1507     9535    2         K$RWPARM.TCTX# = TCTX#;
     1508     9536
     1509     9537    2         KI$TCTX.SSN.CLASS = B$TPDU_CR.CLASS;
     1510     9538
     1511     9539    2         KI$TCTX.SSN.TPDUSZ_PARM = %K_TPDUSIZE_8192;
     1512     9540
     1513     9541    2         CALL I$CHK_PARMS
     1514     9542    3         WHENALTRETURN DO;
     1515     9543    3              K@TCTX.REASON = KI$TCTX.REASON;
     1516     9544    3              K@TCTX.ERR = KI$TCTX.ERR;
     1517     9545    3              CALL KIT$RELTCTX(TCTX$);     /*state is still marked closed        */
     1518     9546    3              GOTO RETURN_TPDU_DR2;
     1519     9547    3              END;
     1520     9548
     1521     9549    2         KI$TCTX.SSN.QOS = K$RWPARM.QOS;
     1522     9550    2         KI$TCTX.NODE = K$RWPARM.FEX;
     1523     9551    2         KI$TCTX.LOCAL_FEP = K$RWPARM.LOCAL_FEP;
     1524     9552    2         KI$TCTX.SSN.SCID = -1;
     1525     9553    2         KI$TCTX.INBOUND = '1'B;
     1526     9554
     1527     9555    2         KI$TCTX.DST_REF = B$TPDU_CR.SRC_REF; /*maintain unpacked*/
     1528     9556    2         KI$TCTX.SSN.TR_FLAGS.EXTENDED = B$TPDU_CR.EXT_FMT_FLAG;
     1529     9557
     1530     9558    2         IF KI$TCTX.SSN.CLASS=2
     1531     9559    2           AND B$TPDU_CR.CLASS_2_FLOW='0'B /*set means dont use*/
     1532     9560    2         THEN KI$TCTX.SSN.TR_FLAGS.CLASS_2_FLOW = '1'B;
     1533     9561
     1534     9562    2         IF K$RWPARM.SRC_ADDR$ ~= ADDR(NIL)
     1535     9563    3         THEN DO;
     1536     9564    3              TEMP = K$RWPARM.SRC_ADDR$->B$NSAP.LEN +1;
     1537     9565    3              ADDR(KI$TCTX.SSN.SRC_NSAP)->CHRBSD = K$RWPARM.SRC_ADDR$->CHRBSD;
     1538     9566    3              END;
     1539     9567
     1540     9568    2         IF K$RWPARM.DST_ADDR$ ~= ADDR(NIL)
     1541     9569    3         THEN DO;
     1542     9570    3              TEMP = K$RWPARM.DST_ADDR$->B$NSAP.LEN +1;
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:191  
     1543     9571    3              ADDR(KI$TCTX.SSN.DST_NSAP)->CHRBSD = K$RWPARM.DST_ADDR$->CHRBSD;
     1544     9572    3              END;
     1545     9573
     1546     9574              %UNLOCK (G=KIT_RECV_LOCK);
     1547     9577
     1548     9578        /* If this is an OSI connection, the connection is marked waiting for
     1549     9579           tconnect response and we call OSI Session to let him know of the
     1550     9580          new connection.
     1551     9581        */
     1552     9582    2         IF K$RWPARM.FUNCTION = %K_NDATA
     1553     9583    3         THEN DO;
     1554     9584    3              KI$TCTX.SSN.TR_FLAGS.OSI = '1'B;
     1555     9585    3              KI$TCTX.STATE = %KI_TSTATE_WFTRESP;
     1556     9586
     1557     9587    3              K$RWPARM.TCTX$ = ADDR(KI$TCTX);
     1558     9588    3              K$RWPARM.FUNCTION = %K_TCONNECT_IND;
     1559     9589
     1560     9590    3              CALL KIS$OSI_RECV(K$RWPARM) ALTRET(CHECK_SNAP_N_RETURN);
     1561     9591    3              END;
     1562     9592
     1563     9593        /* If this isn't a connection for OSI Session, the connection is open.
     1564     9594           Call KIT$SEND_CC to construct a Connection Confirm TPDU and return
     1565     9595           it to the other end-point.
     1566     9596           Then call CP-6 Session so he will know of the new connection.
     1567     9597        */
     1568     9598    3         ELSE DO;
     1569     9599    3              TEMP = K$RWPARM.SHDRSZ;
     1570     9600    3              K$RWPARM.MSGSZ = 0;
     1571     9601    3              K$RWPARM.UHDRSZ = 0;
     1572     9602    3              K$RWPARM.SHDRSZ = 0;
     1573     9603
     1574     9604    3              CALL KIT$SEND_CC(K$RWPARM);
     1575     9605
     1576     9606    3              KI$TCTX.STATE = %KI_TSTATE_OPEN;
     1577     9607
     1578     9608    3              IF TEMP > 3
     1579     9609    4              THEN DO;
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:192  
     1580     9610    4                   CALL KIS$RECV(K$RWPARM) ALTRET(TAKE_QDP_SNAP);
     1581     9611    4                   END;
     1582     9612    4              ELSE DO;
     1583     9613    4   TAKE_QDP_SNAP:
     1584     9614    4                   CALL SC_PRTCL_SNAP;
     1585     9615    4                   END;
     1586     9616    3              END/*do if not osi*/;
     1587     9617
     1588     9618    2         RETURN;
     1589     9619
     1590     9620        %EJECT;
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:193  
     1591     9621        /*F* NAME: KIT$RECV - Connect Confirm TPDU
     1592     9622
     1593     9623        A Connect Confirm may be received only for an OSI Transport connection.
     1594     9624        */
     1595     9625    2       CASE( %K_TPDU_TYPE_CC);
     1596     9626
     1597     9627    2         KI$TCTX.SSN.CLASS = B$TPDU_CR.CLASS;
     1598     9628
     1599     9629    2         CALL I$CHK_PARMS ALTRET(LOG_BAD_TPDU);
     1600     9630
     1601     9631    2         IF KI$TCTX.SSN.TR_FLAGS.OSI = '0'B
     1602     9632    2         THEN GOTO LOG_BAD_TPDU;
     1603     9633
     1604     9634    2         IF KI$TCTX.STATE = %KI_TSTATE_WFCC
     1605     9635    3         THEN DO;
     1606     9636    3              KI$TCTX.DST_REF = B$TPDU_CR.SRC_REF;
     1607     9637    3              IF KI$TCTX.SSN.CLASS = 0
     1608     9638    4              THEN DO;
     1609     9639    4                   KI$TCTX.SSN.TR_FLAGS.EXTENDED = '0'B;
     1610     9640    4                   KI$TCTX.SSN.TR_FLAGS.EXPEDITED = '0'B;
     1611     9641    4                   END;
     1612     9642
     1613     9643    3              IF KI$TCTX.SSN.CLASS ~= 2
     1614     9644    4              THEN DO;
     1615     9645    4                   KI$TCTX.SSN.TR_FLAGS.CLASS_2_FLOW = '0'B;
     1616     9646    4                   END;
     1617     9647
     1618     9648    3              IF KI$TCTX.SSN.CLASS ~= 4
     1619     9649    4              THEN DO;
     1620     9650    4                   KI$TCTX.SSN.TR_FLAGS.CHKSUM = '0'B;
     1621     9651    4                   END;
     1622     9652
     1623     9653    3              KI$TCTX.SSN.TR_FLAGS.EXTENDED = B$TPDU_CR.EXT_FMT_FLAG;
     1624     9654
     1625     9655    3              KI$TCTX.STATE = %KI_TSTATE_OPEN;
     1626     9656
     1627     9657    3              K$RWPARM.TCTX$ = ADDR(KI$TCTX);
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:194  
     1628     9658    3              K$RWPARM.FUNCTION = %K_TCONNECT_CFM;
     1629     9659
     1630     9660    3              CALL KIS$OSI_RECV(K$RWPARM) ALTRET(CHECK_SNAP_N_RETURN);
     1631     9661
     1632     9662    3              RETURN;
     1633     9663    3              END/*do if waitcc*/;
     1634     9664
     1635     9665    3         ELSE DO;
     1636     9666    3   LOG_BAD_TPDU:
     1637     9667    3              CALL I$CHECK_SNAP;
     1638     9668    3   DISCARD_TPDU: ;
     1639     9669    3              KIT_DISCARDED_TPDUS = KIT_DISCARDED_TPDUS +1;
     1640     9670    3              RETURN;
     1641     9671    3              END;
     1642     9672
     1643     9673        %EJECT;
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:195  
     1644     9674        /*F* NAME: KIT$RECV - Disconnect Request TPDU
     1645     9675
     1646     9676        A Disconnect Request may be received only for either an OSI or CP-6 connections.
     1647     9677
     1648     9678        The Disconnect Confirm TPDU has already been sent by this host's
     1649     9679        local fep.  All that needs to be done is to notify Session of the
     1650     9680        Transport Disconnect indication and mark the transport connection
     1651     9681        closed.
     1652     9682        */
     1653     9683    2       CASE( %K_TPDU_TYPE_DR);
     1654     9684
     1655     9685    2         CALL I$CHK_PARMS ALTRET(LOG_BAD_TPDU);
     1656     9686    2         KI$TCTX.REASON = B$TPDU_DR.REASON;
     1657     9687
     1658     9688    2   REPORT_TDISCONNECT: ;
     1659     9689    2         K$RWPARM.FUNCTION = %K_TDISCONNECT_IND;
     1660     9690    2         K$RWPARM.TCTX$ = ADDR(KI$TCTX);
     1661     9691    2         K$RWPARM.TCTX# = KI$TCTX.SRC_REF;
     1662     9692
     1663     9693    2         IF KI$TCTX.SSN.TR_FLAGS.OSI='0'B
     1664     9694    2         THEN CALL KIS$REP_TERM(TCTX#);
     1665     9695    3         ELSE DO;
     1666     9696    3              CALL KIS$OSI_RECV(K$RWPARM)
     1667     9697    4              WHENALTRETURN DO;
     1668     9698    4                   CALL I$CHECK_SNAP;
     1669     9699    4                   END;
     1670     9700    3              END;
     1671     9701
     1672     9702    2         KI$TCTX.STATE = %KI_TSTATE_CLOSED;
     1673     9703    2         KI$TCTX.REMOTE_TERM = '1'B;
     1674     9704    2         CALL KIT$RELTCTX(TCTX$);
     1675     9705
     1676     9706    2         RETURN;
     1677     9707
     1678     9708        /* An Error TPDU may be received only for either an OSI or CP-6.
     1679     9709           All processing will have been done by the local Fep; all that
     1680     9710           is needed here is to report the disconnect to session and
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:196  
     1681     9711           close the transport connection.
     1682     9712        */
     1683     9713    2       CASE( %K_TPDU_TYPE_ER);
     1684     9714    2         KI$TCTX.REASON = B$TPDU_ER.REJECT_CAUSE;
     1685     9715    2         GOTO REPORT_TDISCONNECT;
     1686     9716
     1687     9717        %EJECT;
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:197  
     1688     9718        /*F* NAME: KIT$RECV - CP6 Control TPDU
     1689     9719
     1690     9720        A CP6 Control TPDU may be received for an OSI connection only.
     1691     9721        */
     1692     9722    2       CASE( %K_TPDU_TYPE_CP6);
     1693     9723
     1694     9724    2         IF KI$TCTX.SSN.TR_FLAGS.OSI = '0'B
     1695     9725    2         THEN GOTO LOG_BAD_TPDU;
     1696     9726
     1697     9727    2         K$RWPARM.TCTX$ = ADDR(KI$TCTX);
     1698     9728
     1699     9729    2         IF PARM$->K$TPARM_CP6_OPTIONS.CODE = %K_TPARM_FLOW_STOP
     1700     9730    3         THEN DO;
     1701     9731    3              KI$TCTX.SESSION_FLOW_STOPPED = '1'B;
     1702     9732    3              K$RWPARM.FUNCTION = %K_TFLOW_STOP;
     1703     9733    3              CALL KIS$OSI_RECV(K$RWPARM) ALTRET(CHECK_SNAP_N_RETURN);
     1704     9734    3              RETURN;
     1705     9735    3              END;
     1706     9736
     1707     9737    2         IF PARM$->K$TPARM_CP6_OPTIONS.CODE = %K_TPARM_FLOW_START
     1708     9738    3         THEN DO;
     1709     9739    3              KI$TCTX.SESSION_FLOW_STOPPED = '0'B;
     1710     9740    3              K$RWPARM.FUNCTION = %K_TFLOW_START;
     1711     9741    3              CALL KIS$OSI_RECV(K$RWPARM) ALTRET(CHECK_SNAP_N_RETURN);
     1712     9742    3              RETURN;
     1713     9743    3              END;
     1714     9744
     1715     9745    2         IF PARM$->K$TPARM_CP6_OPTIONS.CODE = %K_TPARM_SSN_CRDT_ACK
     1716     9746    3         THEN DO;
     1717     9747    3              K$RWPARM.FUNCTION = %K_TCREDIT_ACK;
     1718     9748
     1719     9749    3              CALL KIS$OSI_RECV(K$RWPARM)
     1720     9750    4              WHENALTRETURN DO;
     1721     9751    4   CHECK_SNAP_N_RETURN:
     1722     9752    4                   CALL I$CHECK_SNAP;
     1723     9753    4                   END;
     1724     9754
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:198  
     1725     9755    3              RETURN;
     1726     9756    3              END;
     1727     9757
     1728     9758    2         GOTO LOG_BAD_TPDU;
     1729     9759
     1730     9760        %EJECT;
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:199  
     1731     9761        /*F* NAME: KIT$RECV - Unrecognized TPDU
     1732     9762
     1733     9763        For an unrecognized TPDU, we first take a dump of the host to
     1734     9764        capture the host ICQ, and then request a GJA-166-3 dump from
     1735     9765        the fep.
     1736     9766        */
     1737     9767    2       CASE(ELSE);
     1738     9768    2         CALL SC_PRTCL_SNAP;
     1739     9769    2         CALL I$CHECK_FEP_DUMP;
     1740     9770    2         RETURN;
     1741     9771
     1742     9772        /*S* SCREECH_CODE: KI-S$PRTCLERR
     1743     9773             TYPE: SNAP
     1744     9774             MESSAGE: Communications protocol error.
     1745     9775             REMARKS: Full screech if unrecoverable; snap if message ignored.
     1746     9776        */
     1747     9777
     1748     9778    2         END/*do case(type)*/;
     1749     9779
     1750     9780        %EJECT;
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:200  
     1751     9781        /*I* NAME: I$CHECK_SNAP
     1752     9782
     1753     9783        The I$CHECK_SNAP subroutine provides a single place to check for
     1754     9784        the need to take a snapshot dump, and to take the dump if required.
     1755     9785        */
     1756     9786
     1757     9787    1   I$CHECK_SNAP: PROC;
     1758     9788
     1759     9789    2      IF KIT_ERROR_SNAP ~= 0
     1760     9790    2        OR (KI$TCTX.SSN.TR_FLAGS.OSI AND KIT_OSI_SNAP~=0)
     1761     9791    2      THEN CALL SC_PRTCL_SNAP;
     1762     9792
     1763     9793    2   I$CHECK_FEP_DUMP: ENTRY;
     1764     9794    2      IF KIT_DUMP_FEP ~= 0
     1765     9795    3      THEN DO;
     1766     9796    3           KL_FEPST.FEP = K$RWPARM.FEX;
     1767     9797    3           KL_FEPST.FCN = IGA_CRASHFEP_BF;
     1768     9798    3           CALL KUB$WRITE(KL_FEPST, LENGTHC(KL_FEPST), 'HLPADMIN');
     1769     9799    3           END;
     1770     9800
     1771     9801    2      RETURN;
     1772     9802
     1773     9803    2   END I$CHECK_SNAP;
     1774     9804        %EJECT;
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:201  
     1775     9805        /*I* NAME: I$CHK_PARMS
     1776     9806
     1777     9807        */
     1778     9808    1   I$CHK_PARMS: PROC ALTRET;
     1779     9809
     1780     9810                                                /* Auto Storage                       */
     1781     9811        %K$TPARM_TSAP_ID (NAME=K$TPARM, STCLASS=AUTO, ALGN=CALIGNED);
     1782     9848    2   DCL 1 B$TPARM REDEF K$TPARM CHAR(34);
     1783     9849
     1784     9850    2   DCL K$TPARM$ PTR;
     1785     9851    2   DCL PARMLEN SBIN;
     1786     9852
     1787     9853
     1788     9854                                                /* Based Data                         */
     1789     9855        %K$TPDU_GENERIC (NAME=TPDU);
     1790     9915    2   DCL K$TPARM_GENERIC CHAR(PARMSIZE) BASED;
     1791     9916        %K$TPARM_TPDUSZ (ALGN=ALIGNED, STCLASS="BASED(K$TPARM$)");
     1792     9955        %K$TPARM_OPTION (ALGN=ALIGNED, STCLASS="BASED(K$TPARM$)");
     1793    10002        %K$TPARM_TSAP_ID (ALGN=ALIGNED, STCLASS="BASED(K$TPARM$)");
     1794    10039        %K$TPARM_VERSION (ALGN=ALIGNED, STCLASS="BASED(K$TPARM$)");
     1795    10075        %K$TPARM_CHKSUM (ALGN=ALIGNED, STCLASS="BASED(K$TPARM$)");
     1796    10115        %K$TPARM_CLR_INFO (ALGN=CALIGNED, STCLASS="BASED(K$TPARM$)");
     1797    10164
     1798    10165    2   DCL B$TSAP CHAR(PARMLEN) BASED;
     1799    10166
     1800    10167                                                /* External data                      */
     1801    10168    2   DCL K_TSAP_SZ UBIN SYMREF;
     1802    10169
     1803    10170        %EJECT;
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:202  
     1804    10171        /* Initialize check_parmas auto.
     1805    10172        */
     1806    10173    2      K$TPARM$ = ADDR(K$TPARM);
     1807    10174
     1808    10175    3      DO WHILE (PARMSIZE > 1 );       /*use 1 because it may be a CP-6 connection*/
     1809    10176    3           B$TPARM = PARM$->K$TPARM_GENERIC;
     1810    10177    3           PARMLEN = K$TPARM.LEN;
     1811    10178
     1812    10179    3           IF PARMLEN > PARMSIZE-2
     1813    10180    4           THEN DO;
     1814    10181    4   SET_INVLEN:  ;
     1815    10182    4                KI$TCTX.REASON = %K_REASON_LEN_INV;
     1816    10183    4                ALTRETURN;
     1817    10184    4                END;
     1818    10185
     1819    10186    4           DO SELECT (K$TPARM.CODE);
     1820    10187
     1821    10188        /* First check for the parameters that aren't limited to CR and CC.
     1822    10189        */
     1823    10190    4                SELECT(%K_TPARM_CHKSUM);
     1824    10191    4                GOTO GET_NEXT_PARM;
     1825    10192
     1826    10193    4                SELECT(%K_TPARM_SUBSEQ);
     1827    10194    4   CHECK_AK:    ;
     1828    10195    4                IF TYPE ~= %K_TPDU_TYPE_AK
     1829    10196    5                THEN DO;
     1830    10197    5   SET_INVPARM:      ;
     1831    10198    5                     KI$TCTX.REASON = %K_REASON_PROTOCOL;
     1832    10199    5                     KI$TCTX.ERR = %K_ERROR_INVPARM;
     1833    10200    5                     ALTRETURN;
     1834    10201    5                     END;
     1835    10202
     1836    10203    4                GOTO GET_NEXT_PARM;
     1837    10204
     1838    10205    4                SELECT(%K_TPARM_FCC);
     1839    10206    4                GOTO CHECK_AK;
     1840    10207
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:203  
     1841    10208    4                SELECT(%K_TPARM_CLR_INFO);
     1842    10209    4                KI$TCTX.ERR = K$TPARM_CLR_INFO.ERR;
     1843    10210    4                GOTO GET_NEXT_PARM;
     1844    10211
     1845    10212    4                SELECT(%K_TPARM_INVALID_TPDU);
             10212                         /* this is the same code for CALLING_TSAP*/
     1846    10213    4                IF TYPE = %K_TPDU_TYPE_ER
     1847    10214    4                THEN GOTO GET_NEXT_PARM;
     1848    10215
     1849    10216    4                END/*do select*/;
     1850    10217
     1851    10218        %EJECT;
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:204  
     1852    10219        /* Now check those that are valid only with CR or CC.
     1853    10220        */
     1854    10221    3           IF (TYPE ~= %K_TPDU_TYPE_CR) AND (TYPE ~= %K_TPDU_TYPE_CC)
     1855    10222    3           THEN GOTO SET_INVPARM;
     1856    10223
     1857    10224    4           DO SELECT (K$TPARM.CODE);
     1858    10225    4                SELECT (%K_TPARM_TPDUSZ);
     1859    10226    4                IF PARMLEN ~= 1
     1860    10227    4                THEN GOTO SET_INVLEN;
     1861    10228
     1862    10229    4                IF (K$TPARM_TPDUSZ.SIZE < %K_TPDUSIZE_128) OR
     1863    10230    4                  (K$TPARM_TPDUSZ.SIZE > %K_TPDUSIZE_8192)
     1864    10231    4                THEN GOTO SET_NEGOTIATION;
     1865    10232
     1866    10233    4                IF K$TPARM_TPDUSZ.SIZE > KI$TCTX.SSN.TPDUSZ_PARM
     1867    10234    4                  AND TYPE = %K_TPDU_TYPE_CC
     1868    10235    4                THEN GOTO SET_NEGOTIATION;
     1869    10236
     1870    10237    4                KI$TCTX.SSN.TPDUSZ_PARM = K$TPARM_TPDUSZ.SIZE;
     1871    10238
     1872    10239
     1873    10240    4                SELECT(%K_TPARM_OPTION);
     1874    10241    4                IF PARMLEN ~= 1
     1875    10242    4                THEN GOTO SET_INVLEN;
     1876    10243
     1877    10244    4                IF K$TPARM_OPTION.EXPD
     1878    10245    4                THEN KI$TCTX.SSN.TR_FLAGS.EXPEDITED = '1'B;
     1879    10246    4                ELSE KI$TCTX.SSN.TR_FLAGS.EXPEDITED = '0'B;
     1880    10247
     1881    10248    4                IF TYPE = %K_TPDU_TYPE_CC
     1882    10249    4                  AND KI$TCTX.SSN.TR_FLAGS.CHKSUM ~= '0'B
     1883    10250    4                  AND K$TPARM_OPTION.CHKSUM /*means dont use chksum if set*/
     1884    10251    5                THEN DO;
     1885    10252    5   SET_NEGOTIATION:  ;
     1886    10253    5                     KI$TCTX.REASON = %K_REASON_NEGOTIATION;
     1887    10254    5                     ALTRETURN;
     1888    10255    5                     END;
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:205  
     1889    10256
     1890    10257    4                IF ~(K$TPARM_OPTION.CHKSUM) AND KI$TCTX.SSN.CLASS=4
     1891    10258    4                THEN KI$TCTX.SSN.TR_FLAGS.CHKSUM = '1'B;
     1892    10259    4                ELSE KI$TCTX.SSN.TR_FLAGS.CHKSUM = '0'B;
     1893    10260
     1894    10261    4                SELECT(%K_TPARM_CALLED_TSAP);
     1895    10262    4                IF PARMLEN > K_TSAP_SZ
     1896    10263    4                THEN GOTO SET_INVLEN;
     1897    10264
     1898    10265    4                IF TYPE = %K_TPDU_TYPE_CR
     1899    10266    5                THEN DO;
     1900    10267    5                     KI$TCTX.SSN.DST_TSAP.LEN = PARMLEN;
     1901    10268    5                     KI$TCTX.SSN.DST_TSAP.TSAP = ADDR(K$TPARM_TSAP_ID.ID)->B$TSAP;
     1902    10269    5                     END;
     1903    10270    5                ELSE DO;
     1904    10271    5                     IF KI$TCTX.SSN.DST_TSAP.LEN = PARMLEN
     1905    10272    5                     THEN IF ADDR(KI$TCTX.SSN.DST_TSAP.TSAP)->B$TSAP
     1906    10273    5                            = ADDR(K$TPARM_TSAP_ID.ID)->B$TSAP
     1907    10274    5                          THEN EXIT;
     1908    10275    5   SET_BADTSAP:      ;
     1909    10276    5                     KI$TCTX.REASON = %K_REASON_ADDRESS_UNKNOWN;
     1910    10277    5                     ALTRETURN;
     1911    10278    5                     END;
     1912    10279
     1913    10280    4                SELECT(%K_TPARM_CALLING_TSAP);
     1914    10281    4                IF PARMLEN > K_TSAP_SZ
     1915    10282    4                THEN GOTO SET_INVLEN;
     1916    10283
     1917    10284    4                IF TYPE = %K_TPDU_TYPE_CR
     1918    10285    5                THEN DO;
     1919    10286    5                     KI$TCTX.SSN.SRC_TSAP.LEN = PARMLEN;
     1920    10287    5                     KI$TCTX.SSN.SRC_TSAP.TSAP = ADDR(K$TPARM_TSAP_ID.ID)->B$TSAP;
     1921    10288    5                     END;
     1922    10289    5                ELSE DO;
     1923    10290    5                     IF KI$TCTX.SSN.SRC_TSAP.LEN = PARMLEN
     1924    10291    5                     THEN IF ADDR(KI$TCTX.SSN.SRC_TSAP.TSAP)->B$TSAP
     1925    10292    5                            = ADDR(K$TPARM_TSAP_ID.ID)->B$TSAP
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:206  
     1926    10293    5                          THEN EXIT;
     1927    10294    5                          ELSE GOTO SET_BADTSAP;
     1928    10295    5                     END;
     1929    10296
     1930    10297    4                SELECT(%K_TPARM_VERSION);
     1931    10298    4                IF PARMLEN ~= 1
     1932    10299    4                THEN GOTO SET_INVLEN;
     1933    10300
     1934    10301    4                KI$TCTX.VERS = K$TPARM_VERSION.VERS;
     1935    10302
     1936    10303    4                SELECT(%K_TPARM_SECURITY, %K_TPARM_ALT_CLASS,
     1937    10304    4                  %K_TPARM_ACK_TIME, %K_TPARM_THROUGHPUT,
     1938    10305    4                  %K_TPARM_ERR_RATE, %K_TPARM_PRIORITY,
     1939    10306    4                  %K_TPARM_TRANSIT_DELAY, %K_TPARM_REASS_TIME);
     1940    10307
     1941    10308        /* The NBS Implmentation Agreements says to ignore unknown parameters.
     1942    10309        */
     1943    10310
     1944    10311    4                SELECT (ELSE);
     1945    10312
     1946    10313    4                END/*do select*/;
     1947    10314
     1948    10315    3   GET_NEXT_PARM: ;
     1949    10316    3      PARMSIZE = PARMSIZE - PARMLEN - 2;
     1950    10317    3      PARM$ =PINCRC(PARM$,PARMLEN+2);
     1951    10318    3           END/*do while parmsize > 1*/;
     1952    10319
     1953    10320    2      IF PARMSIZE < 0
     1954    10321    3      THEN DO;
     1955    10322    3           KI$TCTX.REASON = %K_REASON_PROTOCOL;
     1956    10323    3           KI$TCTX.ERR = %K_ERROR_INVPARM_LEN;
     1957    10324    3           ALTRETURN;
     1958    10325    3           END;
     1959    10326
     1960    10327    2      RETURN;
     1961    10328
     1962    10329    2   END I$CHK_PARMS;
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:207  
     1963    10330    1   END KIT$RECV;
     1964    10331        %EOD;

PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:208  
--  Include file information  --

   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KI_MACROS_C.:E05TOU  is referenced.
   K_INTERFACE_M.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   K_TRANSPORT_E.:E05TOU  is referenced.
   K_TRANSPORT_M.:E05TOU  is referenced.
   K_SUBS_C.:E05TOU  is referenced.
   K$RWPARM.:E05TOU  is referenced.
      No diagnostics issued in procedure KIT$RECV.

   Procedure KIT$RECV requires 852 words for executable code.
   Procedure KIT$RECV requires 52 words of local(AUTO) storage.

PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:209  

 Object Unit name= KIT$RECV                                   File name= KIT$TRANSPORT.:E05TOU
 UTS= JUL 30 '97 00:44:14.28 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      2      2  KIT$RECV
    1   Proc  even  none   852   1524  KIT$RECV
    2  RoData even  none     8     10  KIT$RECV

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        1  KIT$RECV
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:210  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 KIS$OSI_RECV
 yes     yes           Std       1 KIS$RECV
 yes     yes           Std       1 KIT$GETTCTX
 yes     yes           Std       1 KIT$SEND_DR
         yes           Std       1 HFC$UNLOCK
 yes     yes           Std       1 KIT$SEND_CC
         yes           Std       1 KIS$REP_TERM
         yes           Std       1 HFC$LOCK
 yes     yes           Std       1 KIT$RELTCTX
 yes     yes           Std       3 KUB$WRITE
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     SC_BADFNC                             SC_PRTCL_SNAP                         KI_TCTX$$
     KIT_RECV_LOCK                         KI_TCTX_MAX#                          KIT_DISCARDED_TPDUS
     K_TPDU_SIZE                           K_TPDU_SIZE_EXT                       KIT_ERROR_SNAP
     KIT_OSI_SNAP                          KIT_DUMP_FEP                          K_TSAP_SZ
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ASLENTSID                             ISSID
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:211  


     1194        1        /*M* KIT$RECV - Receive inbound TPDUs on the host.   */
     1195        2        /*T***********************************************************/
     1196        3        /*T*                                                         */
     1197        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1198        5        /*T*                                                         */
     1199        6        /*T***********************************************************/
     1200        7
     1201        8        /*X* PLM=3,IND=5,ENU=0,ECU=0   */
     1202        9
     1203       10        KIT$RECV: PROC(K$RWPARM) ALTRET;

     10  1 000000   000000 700200 xent  KIT$RECV     TSX0  ! X66_AUTO_1
         1 000001   000064 000001                    ZERO    52,1

     1204       11
     1205       12                                                /* Include files                      */
     1206       13        %INCLUDE K$RWPARM;
     1207      399        %INCLUDE K_SUBS_C;
     1208      432        %INCLUDE K_TRANSPORT_M;
     1209     2216        %INCLUDE K_TRANSPORT_E;
     1210     2541        %INCLUDE K_ADDRESS_M;
     1211     3044        %INCLUDE K_INTERFACE_M;
     1212     3453        %INCLUDE KI_MACROS_C;
     1213     4061        %INCLUDE KL_AFCN_C;
     1214     4162        %INCLUDE KL_MACRO_C;
     1215     7514        %INCLUDE HF_LOCK_C;
     1216     7528
     1217     7529                                                /* Parameter definitions              */
     1218     7530        %K$RWPARM (NAME=K$RWPARM);
     1219     7846
     1220     7847                                                /* Automatic data                     */
     1221     7848    1   DCL TCTX$ PTR;
     1222     7849    1   DCL TCTX# UBIN AUTO;
     1223     7850    1   DCL TEMP UBIN;
     1224     7851    1   DCL TYPE UBIN;
     1225     7852    1   DCL LI UBIN;
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:212  
     1226     7853    1   DCL PARM$ PTR;
     1227     7854    1   DCL PARMSIZE SBIN;
     1228     7855    1   DCL DATA$ PTR;
     1229     7856    1   DCL DATASIZE UBIN;
     1230     7857    1   DCL TPDU_NR$ PTR;
     1231     7858    1   DCL TPDU_NR UBIN;
     1232     7859    1   DCL 1 NR REDEF TPDU_NR,
     1233     7860    1         2 * BIT(5) UNAL,
     1234     7861    1         2 BYTE0 UBIN(7) UNAL,
     1235     7862    1         2 BYTE1 UBIN(8) UNAL,
     1236     7863    1         2 BYTE2 UBIN(8) UNAL,
     1237     7864    1         2 BYTE3 UBIN(8) UNAL;
     1238     7865
     1239     7866        %K$TPDU_CR_CC (STCLASS=AUTO, NAME=K$TPDU_CC);
     1240     7935        %KI$TCTX (NAME=K@TCTX, STCLASS=AUTO, FULL=NO);
     1241     8323
     1242     8324
     1243     8325        %KL_FEPST (STCLASS=AUTO);
     1244     8360                                                /* Based data                         */
     1245     8361    1   DCL KI$TCTX$(0:0) PTR BASED(KI_TCTX$$);
     1246     8362        %KI$TCTX(NAME=KI$TCTX, STCLASS="BASED(TCTX$)");
     1247     8920
     1248     8921        %K$TPDU_GENERIC (STCLASS="BASED(K$RWPARM.THDR$)", NAME=B$TPDU_GENERIC);
     1249     8981
     1250     8982        %K$TPDU_CR_CC (STCLASS="BASED(K$RWPARM.THDR$)", NAME=B$TPDU_CR);
     1251     9051
     1252     9052        %K$TPDU_DR (STCLASS="BASED(K$RWPARM.THDR$)", NAME=B$TPDU_DR);
     1253     9095        %K$TPDU_ER (STCLASS="BASED(K$RWPARM.THDR$)", NAME=B$TPDU_ER);
     1254     9134
     1255     9135        %K$TPDU_DT (STCLASS="BASED(K$RWPARM.THDR$)", NAME=B$TPDU_DT);
     1256     9185
     1257     9186        %K$TPARM_CP6_OPTIONS;
     1258     9231
     1259     9232        %K$NSAP (FPTN=B$NSAP);
     1260     9284
     1261     9285    1   DCL B$NEXT UBIN BASED;
     1262     9286    1   DCL CHRBSD CHAR(TEMP) BASED;
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:213  
     1263     9287                                                /* Static definitions                 */
     1264     9288    1   DCL KI_TCTX$$ PTR SYMREF;
     1265     9289    1   DCL KIT_RECV_LOCK BIT(72) SYMREF;
     1266     9290    1   DCL KI_TCTX_USE# UBIN SYMREF;
     1267     9291    1   DCL KI_TCTX_MAX# UBIN SYMREF;
     1268     9292
     1269     9293    1   DCL KIT_DISCARDED_TPDUS UBIN SYMREF;
     1270     9294
     1271     9295    1   DCL K_TPDU_SIZE(0:15) SBIN SYMREF;
     1272     9296    1   DCL K_TPDU_SIZE_EXT(0:15) SBIN SYMREF;
     1273     9297    1   DCL K_TPDUSZ_VALUES(0:0) UBIN SYMREF;
     1274     9298
     1275     9299    1   DCL KIT_ERROR_SNAP UBIN SYMREF;
     1276     9300    1   DCL KIT_OSI_SNAP UBIN SYMREF;
     1277     9301    1   DCL KIT_DUMP_FEP UBIN SYMREF;
     1278     9302
     1279     9303                                                /* Entry point references             */
     1280     9304    1   DCL KIN$SEND ENTRY(1) ALTRET;
     1281     9305    1   DCL KIS$OSI_RECV ENTRY(1) ALTRET;
     1282     9306    1   DCL KIS$RECV ENTRY(1) ALTRET;
     1283     9307    1   DCL KIS$REP_TERM ENTRY(1);
     1284     9308    1   DCL KIT$GETTCTX ENTRY(1) ALTRET;
     1285     9309    1   DCL KIT$RELTCTX ENTRY(1) ALTRET;
     1286     9310    1   DCL KIT$SEND_CC ENTRY(1) ALTRET;
     1287     9311    1   DCL KIT$SEND_DR ENTRY(1) ALTRET;
     1288     9312    1   DCL KUB$WRITE ENTRY(3) ALTRET;
     1289     9313    1   DCL SC_BADFNC ENTRY CONV(2,0);
     1290     9314    1   DCL SC_PRTCL_SNAP ENTRY CONV(2,0);
     1291     9315        %EJECT;
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:214  
     1292     9316        /*F* NAME: KIT$RECV
     1293     9317
     1294     9318        This routine is called from KIN$RECV. It is the interface
     1295     9319        for the lower layers to pass the incoming messages up to the
     1296     9320        user through the transport and session layers.
     1297     9321
     1298     9322        KIT$RECV is called with the K$RWPARM parameter:
     1299     9323
     1300     9324        .fif
     1301     9325        }    FUNCTION - Indicates the function to be performed.
     1302     9326        }               K_NDATA for OSI Session connections
     1303     9327        }               K_RECV for CP-6 Session connections.
     1304     9328        }
     1305     9329        }     SRC_ADDR$- Contains the address of Source Network Address
     1306     9330        }                Only set on OSI connections.
     1307     9331        }
     1308     9332        }     DST_ADDR$- Contains the address of Destination Network Address
     1309     9333        }                Only set on OSI connections.
     1310     9334        .fin
     1311     9335
     1312     9336        The action taken is dependent on the type for TPDU that has been received.
     1313     9337        See K_TPDU_TYPE_equs in file K_TRANSPORT_E for a full listing of the
     1314     9338        possible TPDU types.
     1315     9339
     1316     9340        TPDU types received are:
     1317     9341        .fif
     1318     9342        }    K_TPDU_TYPE_DT  - Data
     1319     9343        }    K_TPDU_TYPE_ED  - Expedited Data (not Class 0)
     1320     9344        }    K_TPDU_TYPE_CR  - Connect Request
     1321     9345        }    K_TPDU_TYPE_CC  - Connect Confirm
     1322     9346        }    K_TPDU_TYPE_DR  - Disconnect Request
     1323     9347        }    K_TPDU_TYPE_AK  - Acknowledge (Connect Confirm Class 4 only)
     1324     9348        }    K_TPDU_TYPE_ER  - TPDU Error
     1325     9349        .fin
     1326     9350        .fin
     1327     9351        */
     1328     9352        %EJECT;
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:215  
     1329     9353
     1330     9354        /* Screech if the function is not K_RECV or K_NDATA.
     1331     9355        */
     1332     9356    1      IF (K$RWPARM.FUNCTION ~= %K_RECV) AND (K$RWPARM.FUNCTION ~= %K_NDATA)

   9356  1 000002   200003 470500                    LDP0    @K$RWPARM,,AUTO
         1 000003   000020 235100                    LDA     16,,PR0
         1 000004   000005 115007                    CMPA    5,DL
         1 000005   000013 600000 1                  TZE     s:9368
         1 000006   000041 115007                    CMPA    33,DL
         1 000007   000013 600000 1                  TZE     s:9368

     1333     9357    2      THEN DO;

     1334     9358    2           CALL SC_BADFNC;                 /*full screech*/

   9358  1 000010   000000 713400 xsym               CLIMB   SC_BADFNC
         1 000011   000000 600000 xsid               climb   nvectors=         0

     1335     9359
     1336     9360    2           RETURN;

   9360  1 000012   000000 702200 xent               TSX2  ! X66_ARET

     1337     9361    2           END;
     1338     9362
     1339     9363        /*S* SCREECH_CODE: KIT-S$BADFNC
     1340     9364             TYPE: SNAP
     1341     9365             MESSAGE: Bad function code passed to transport
     1342     9366        */
     1343     9367
     1344     9368    1      TYPE = B$TPDU_GENERIC.TYPE;

   9368  1 000013   000024 471500                    LDP1    20,,PR0
         1 000014   100000 236100                    LDQ     0,,PR1
         1 000015   000026 772000                    QRL     22
         1 000016   000017 376007                    ANQ     15,DL
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:216  
         1 000017   200007 756100                    STQ     TYPE,,AUTO

     1345     9369    1      LI = B$TPDU_GENERIC.LI;

   9369  1 000020   100000 236100                    LDQ     0,,PR1
         1 000021   000033 772000                    QRL     27
         1 000022   200010 756100                    STQ     LI,,AUTO

     1346     9370    1      DATA$ = PINCRC(K$RWPARM.THDR$, LI +1);

   9370  1 000023   000011 402007                    MPY     9,DL
         1 000024   000011 036007                    ADLQ    9,DL
         1 000025   100000 503506                    ABD     0,QL,PR1
         1 000026   200013 451500                    STP1    DATA$,,AUTO

     1347     9371    1      DATASIZE = K$RWPARM.THDRSZ - LI -1;

   9371  1 000027   000025 236100                    LDQ     21,,PR0
         1 000030   200010 136100                    SBLQ    LI,,AUTO
         1 000031   000001 136007                    SBLQ    1,DL
         1 000032   200014 756100                    STQ     DATASIZE,,AUTO

     1348     9372
     1349     9373    1      IF TYPE = %K_TPDU_TYPE_CR

   9373  1 000033   200007 235100                    LDA     TYPE,,AUTO
         1 000034   000016 115007                    CMPA    14,DL
         1 000035   000061 600000 1                  TZE     FIND_PARMS

     1350     9374    1      THEN GOTO FIND_PARMS;
     1351     9375
     1352     9376        /* Find the transport context block.
     1353     9377        */
     1354     9378    1      TCTX# = B$TPDU_DT.DST_REF;

   9378  1 000036   000024 473500                    LDP3    20,,PR0
         1 000037   300000 236100                    LDQ     0,,PR3
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:217  
         1 000040   777777 376007                    ANQ     -1,DL
         1 000041   200005 756100                    STQ     TCTX#,,AUTO

     1355     9379    1      IF (TCTX#=0) OR (TCTX# > KI_TCTX_MAX#)

   9379  1 000042   000652 600000 1                  TZE     DISCARD_TPDU
         1 000043   000000 116000 xsym               CMPQ    KI_TCTX_MAX#
         1 000044   000046 600000 1                  TZE     s:9382
         1 000045   000652 603000 1                  TRC     DISCARD_TPDU

     1356     9380    1      THEN GOTO DISCARD_TPDU;
     1357     9381
     1358     9382    1      TCTX$ = KI$TCTX$(TCTX#);

   9382  1 000046   000000 474400 xsym               LDP4    KI_TCTX$$
         1 000047   400000 236106                    LDQ     0,QL,PR4
         1 000050   200004 756100                    STQ     TCTX$,,AUTO

     1359     9383    1      IF TCTX$ = ADDR(NIL)

   9383  1 000051   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000052   000652 600000 1                  TZE     DISCARD_TPDU

     1360     9384    1      THEN GOTO DISCARD_TPDU;
     1361     9385
     1362     9386    1      K$RWPARM.TCTX# = TCTX#;

   9386  1 000053   200005 720100                    LXL0    TCTX#,,AUTO
         1 000054   000033 740100                    STX0    27,,PR0

     1363     9387
     1364     9388        /* Find where the variable length parameters start.
     1365     9389        */
     1366     9390    1      IF KI$TCTX.SSN.TR_FLAGS.EXTENDED = '0'B

   9390  1 000055   200004 475500                    LDP5    TCTX$,,AUTO
         1 000056   500016 236100                    LDQ     14,,PR5
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:218  
         1 000057   000004 316007                    CANQ    4,DL
         1 000060   000064 601000 1                  TNZ     s:9395

     1367     9391    2      THEN DO;

   9390  1 000061                       FIND_PARMS   null
     1368     9392    2   FIND_PARMS: ;
     1369     9393    2           TEMP = K_TPDU_SIZE(TYPE);

   9393  1 000061   000000 235005 xsym               LDA     K_TPDU_SIZE,AL
         1 000062   200006 755100                    STA     TEMP,,AUTO

     1370     9394    2           END;

   9394  1 000063   000066 710000 1                  TRA     s:9397

     1371     9395    1      ELSE TEMP = K_TPDU_SIZE_EXT(TYPE);

   9395  1 000064   000000 235005 xsym               LDA     K_TPDU_SIZE_EXT,AL
         1 000065   200006 755100                    STA     TEMP,,AUTO

     1372     9396
     1373     9397    1      PARM$ = PINCRC(K$RWPARM.THDR$,TEMP);

   9397  1 000066   000024 473500                    LDP3    20,,PR0
         1 000067   200006 236100                    LDQ     TEMP,,AUTO
         1 000070   000011 402007                    MPY     9,DL
         1 000071   300000 503506                    ABD     0,QL,PR3
         1 000072   200011 453500                    STP3    PARM$,,AUTO

     1374     9398    1      PARMSIZE = LI - TEMP + 1;

   9398  1 000073   200010 236100                    LDQ     LI,,AUTO
         1 000074   200006 136100                    SBLQ    TEMP,,AUTO
         1 000075   000001 036007                    ADLQ    1,DL
         1 000076   200012 756100                    STQ     PARMSIZE,,AUTO

PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:219  
     1375     9399
     1376     9400
     1377     9401        /* Get set to pass the message up to session.
     1378     9402        */
     1379     9403    1      K$RWPARM.SHDR$ = DATA$;

   9403  1 000077   200013 236100                    LDQ     DATA$,,AUTO
         1 000100   000022 756100                    STQ     18,,PR0

     1380     9404    1      K$RWPARM.SHDRSZ = DATASIZE;

   9404  1 000101   200014 235100                    LDA     DATASIZE,,AUTO
         1 000102   000023 755100                    STA     19,,PR0

     1381     9405
     1382     9406
     1383     9407    2      DO CASE(TYPE);

   9407  1 000103   200007 235100                    LDA     TYPE,,AUTO
         1 000104   000020 115007                    CMPA    16,DL
         1 000105   000107 602005 1                  TNC     s:9407+4,AL
         1 000106   001014 710000 1                  TRA     s:9768
         1 000107   000741 710000 1                  TRA     s:9724
         1 000110   000127 710000 1                  TRA     s:9429
         1 000111   001014 710000 1                  TRA     s:9768
         1 000112   001014 710000 1                  TRA     s:9768
         1 000113   001014 710000 1                  TRA     s:9768
         1 000114   001014 710000 1                  TRA     s:9768
         1 000115   000127 710000 1                  TRA     s:9429
         1 000116   000733 710000 1                  TRA     s:9714
         1 000117   000656 710000 1                  TRA     s:9685
         1 000120   001014 710000 1                  TRA     s:9768
         1 000121   001014 710000 1                  TRA     s:9768
         1 000122   001014 710000 1                  TRA     s:9768
         1 000123   001014 710000 1                  TRA     s:9768
         1 000124   000557 710000 1                  TRA     s:9627
         1 000125   000253 710000 1                  TRA     s:9499
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:220  
         1 000126   000127 710000 1                  TRA     s:9429

     1384     9408
     1385     9409        %EJECT;
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:221  
     1386     9410        /*F* NAME: KIT$RECV - Data, Expedited, or Acknowledge TPDU
     1387     9411
     1388     9412        The TPDU_AK will arrive on the host only to indicate that the
     1389     9413        other end-point has responded to our Connect Confirm with an AK.
     1390     9414        The only thing that needs to be done is to mark the transport
     1391     9415        context block to indicate that the connection is open.
     1392     9416
     1393     9417        When the TPDU is data or expediated data, the session
     1394     9418        header address and size in K$RWPARM are updated to
     1395     9419        reflect the stripping off of the transport header and we call
     1396     9420        KIS$RECV or KIS$OSI_RECV passing the single parameter K$RWPARM.
     1397     9421        There is no check on the received sequence number.
     1398     9422        */
     1399     9423
     1400     9424    2       CASE( %K_TPDU_TYPE_DT, %K_TPDU_TYPE_ED, %K_TPDU_TYPE_AK);

     1401     9425
     1402     9426        /* Dont bother with I$CHK_PARMS as the local fep will have done that.
     1403     9427        */
     1404     9428
     1405     9429    2         IF KI$TCTX.STATE = %KI_TSTATE_AKWAIT

   9429  1 000127   200004 474500                    LDP4    TCTX$,,AUTO
         1 000130   400000 236100                    LDQ     0,,PR4
         1 000131   777000 376003                    ANQ     -512,DU
         1 000132   007000 116003                    CMPQ    3584,DU
         1 000133   000144 601000 1                  TNZ     s:9439

     1406     9430    3         THEN DO;

     1407     9431    3              KI$TCTX.STATE = %KI_TSTATE_OPEN;

   9431  1 000134   005000 236003                    LDQ     2560,DU
         1 000135   400000 552140                    STBQ    0,'40'O,PR4

     1408     9432    3              KI$TCTX.FLOW_CONTROLLED = '0'B;

PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:222  
   9432  1 000136   200004 474500                    LDP4    TCTX$,,AUTO
         1 000137   000000 236000 2                  LDQ     0
         1 000140   400002 356100                    ANSQ    2,,PR4

     1409     9433
     1410     9434        /*N*       unreg for QFULL equivalent   */
     1411     9435    3              IF TYPE = %K_TPDU_TYPE_AK

   9435  1 000141   000006 115007                    CMPA    6,DL
         1 000142   000144 601000 1                  TNZ     s:9439

     1412     9436    3              THEN RETURN;

   9436  1 000143   000000 702200 xent               TSX2  ! X66_ARET

     1413     9437    3              END;
     1414     9438
     1415     9439    2         IF TYPE = %K_TPDU_TYPE_AK

   9439  1 000144   000006 115007                    CMPA    6,DL
         1 000145   000650 600000 1                  TZE     LOG_BAD_TPDU

     1416     9440    2         THEN GOTO LOG_BAD_TPDU;
     1417     9441
     1418     9442    2         IF KI$TCTX.STATE ~= %KI_TSTATE_OPEN

   9442  1 000146   200004 474500                    LDP4    TCTX$,,AUTO
         1 000147   400000 236100                    LDQ     0,,PR4
         1 000150   777000 376003                    ANQ     -512,DU
         1 000151   005000 116003                    CMPQ    2560,DU
         1 000152   000156 600000 1                  TZE     XMIT_TO_SESSION

     1419     9443    3         THEN DO;

     1420     9444    3              IF KI$TCTX.STATE = %KI_TSTATE_CLOSED

   9444  1 000153   002000 116003                    CMPQ    1024,DU
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:223  
         1 000154   000650 601000 1                  TNZ     LOG_BAD_TPDU

     1421     9445    3              THEN RETURN;

   9445  1 000155   000000 702200 xent               TSX2  ! X66_ARET

     1422     9446    3              ELSE GOTO LOG_BAD_TPDU;
     1423     9447    3              END;
     1424     9448
     1425     9449    2   XMIT_TO_SESSION:
     1426     9450    2         IF KI$TCTX.SSN.TR_FLAGS.OSI

   9450  1 000156   400016 236100       XMIT_TO_SES* LDQ     14,,PR4
         1 000157   000020 316007                    CANQ    16,DL
         1 000160   000215 600000 1                  TZE     s:9475

     1427     9451    3         THEN DO;

     1428     9452    3              IF TYPE = %K_TPDU_TYPE_DT

   9452  1 000161   000017 115007                    CMPA    15,DL
         1 000162   000171 601000 1                  TNZ     s:9457

     1429     9453    4              THEN DO;

     1430     9454    4                   KI$TCTX.SSN_CRDT = KI$TCTX.SSN_CRDT -1;

   9454  1 000163   400011 220100                    LDX0    9,,PR4
         1 000164   777777 621010                    EAX1    -1,X0
         1 000165   400011 741100                    STX1    9,,PR4

     1431     9455    4                   K$RWPARM.FUNCTION = %K_TDATA_IND;

   9455  1 000166   000027 235007                    LDA     23,DL
         1 000167   000020 755100                    STA     16,,PR0

     1432     9456    4                   END;
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:224  

   9456  1 000170   000173 710000 1                  TRA     s:9459

     1433     9457    3              ELSE K$RWPARM.FUNCTION = %K_TEXPD_DATA_IND;

   9457  1 000171   000030 235007                    LDA     24,DL
         1 000172   000020 755100                    STA     16,,PR0

     1434     9458
     1435     9459    3              K$RWPARM.TCTX$ = ADDR(KI$TCTX);

   9459  1 000173   200004 236100                    LDQ     TCTX$,,AUTO
         1 000174   000017 756100                    STQ     15,,PR0

     1436     9460
     1437     9461    3              CALL KIS$OSI_RECV(K$RWPARM)

   9461  1 000175   200003 630500                    EPPR0   @K$RWPARM,,AUTO
         1 000176   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000177   000000 701000 xent               TSX1    KIS$OSI_RECV
         1 000200   000202 702000 1                  TSX2    s:9463
         1 000201   000214 710000 1                  TRA     s:9472

     1438     9462    4              WHENALTRETURN DO;

     1439     9463    4                   CALL I$CHECK_SNAP;

   9463  1 000202   001021 701000 1                  TSX1    I$CHECK_SNAP
         1 000203   000000 011000                    NOP     0

     1440     9464
     1441     9465    4                   IF K$RWPARM.ERR = %K$WAIT_READ

   9465  1 000204   200003 470500                    LDP0    @K$RWPARM,,AUTO
         1 000205   000013 235100                    LDA     11,,PR0
         1 000206   000006 115007                    CMPA    6,DL
         1 000207   000211 601000 1                  TNZ     s:9468
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:225  

     1442     9466    4                   THEN ALTRETURN;

   9466  1 000210   000000 702200 xent               TSX2  ! X66_AALT

     1443     9467
     1444     9468    4                   IF K$RWPARM.ERR = %K$DEFER_IO

   9468  1 000211   000003 115007                    CMPA    3,DL
         1 000212   000214 601000 1                  TNZ     s:9472

     1445     9469    4                   THEN ALTRETURN;

   9469  1 000213   000000 702200 xent               TSX2  ! X66_AALT

     1446     9470
     1447     9471    4                   END/*altret from kis$osi_recv*/;
     1448     9472    3              END/*do if osi*/;

   9472  1 000214   000227 710000 1                  TRA     s:9482

     1449     9473
     1450     9474    3         ELSE DO;

     1451     9475    3              CALL KIS$RECV (K$RWPARM)

   9475  1 000215   200003 630500                    EPPR0   @K$RWPARM,,AUTO
         1 000216   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000217   000000 701000 xent               TSX1    KIS$RECV
         1 000220   000222 702000 1                  TSX2    s:9477
         1 000221   000227 710000 1                  TRA     s:9482

     1452     9476    4              WHENALTRETURN DO;

     1453     9477    4                   IF K$RWPARM.ERR = %K$DEFER_IO

   9477  1 000222   200003 470500                    LDP0    @K$RWPARM,,AUTO
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:226  
         1 000223   000013 235100                    LDA     11,,PR0
         1 000224   000003 115007                    CMPA    3,DL
         1 000225   000227 601000 1                  TNZ     s:9482

     1454     9478    4                   THEN ALTRETURN;

   9478  1 000226   000000 702200 xent               TSX2  ! X66_AALT

     1455     9479    4                   END/*whenaltreturn*/;
     1456     9480    3              END/*do if not osi connection*/;

     1457     9481
     1458     9482    2         IF TYPE = %K_TPDU_TYPE_DT

   9482  1 000227   200007 235100                    LDA     TYPE,,AUTO
         1 000230   000017 115007                    CMPA    15,DL
         1 000231   000236 601000 1                  TNZ     s:9484

     1459     9483    2         THEN TPDU_NR$ = ADDR(KI$TCTX.RECV_NEXT);

   9483  1 000232   200004 236100                    LDQ     TCTX$,,AUTO
         1 000233   000004 036003                    ADLQ    4,DU
         1 000234   200015 756100                    STQ     TPDU_NR$,,AUTO
         1 000235   000241 710000 1                  TRA     s:9486

     1460     9484    2         ELSE TPDU_NR$ = ADDR(KI$TCTX.RECV_EXPD);

   9484  1 000236   200004 236100                    LDQ     TCTX$,,AUTO
         1 000237   000005 036003                    ADLQ    5,DU
         1 000240   200015 756100                    STQ     TPDU_NR$,,AUTO

     1461     9485
     1462     9486    2         TPDU_NR$->B$NEXT = TPDU_NR$->B$NEXT +1;

   9486  1 000241   200015 470500                    LDP0    TPDU_NR$,,AUTO
         1 000242   000000 235100                    LDA     0,,PR0
         1 000243   000001 035007                    ADLA    1,DL
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:227  
         1 000244   000000 755100                    STA     0,,PR0

     1463     9487
     1464     9488    2         IF K$RWPARM.ERR = %K$WAIT_READ

   9488  1 000245   200003 471500                    LDP1    @K$RWPARM,,AUTO
         1 000246   100013 235100                    LDA     11,,PR1
         1 000247   000006 115007                    CMPA    6,DL
         1 000250   000252 601000 1                  TNZ     s:9490

     1465     9489    2         THEN ALTRETURN;

   9489  1 000251   000000 702200 xent               TSX2  ! X66_AALT

     1466     9490    2         ELSE RETURN;

   9490  1 000252   000000 702200 xent               TSX2  ! X66_ARET

     1467     9491
     1468     9492        %EJECT;
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:228  
     1469     9493        /*F* NAME: KIT$RECV - Connect Request TPDU
     1470     9494
     1471     9495        A Connect Request may be received for either an OSI Transport
     1472     9496        connection or a CP-6 Transport connection.
     1473     9497        */
     1474     9498    2       CASE( %K_TPDU_TYPE_CR);

     1475     9499    2         IF K$RWPARM.THDRSZ < LENGTHC(B$TPDU_CR)

   9499  1 000253   000025 235100                    LDA     21,,PR0
         1 000254   000007 115007                    CMPA    7,DL
         1 000255   000650 602000 1                  TNC     LOG_BAD_TPDU

     1476     9500    2         THEN GOTO LOG_BAD_TPDU;
     1477     9501
     1478     9502        /* Assign a Transport level context block.
     1479     9503        */
     1480     9504              %LOCK (G=KIT_RECV_LOCK);

   9505  1 000256   000001 630400 2                  EPPR0   1
         1 000257   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000260   000000 701000 xent               TSX1    HFC$LOCK
         1 000261   000000 011000                    NOP     0

     1481     9507
     1482     9508    2         K@TCTX = '0'B;

   9508  1 000262   000100 100400                    MLR     fill='000'O
         1 000263   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         1 000264   200021 000074                    ADSC9   K@TCTX,,AUTO             cn=0,n=60

     1483     9509    2         CALL KIT$GETTCTX(TCTX$)

   9509  1 000265   200004 630500                    EPPR0   TCTX$,,AUTO
         1 000266   200060 450500                    STP0    PARMLEN+1,,AUTO
         1 000267   200060 630500                    EPPR0   PARMLEN+1,,AUTO
         1 000270   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:229  
         1 000271   000000 701000 xent               TSX1    KIT$GETTCTX
         1 000272   000274 702000 1                  TSX2    s:9511
         1 000273   000337 710000 1                  TRA     s:9534

     1484     9510    3         WHENALTRETURN DO;

     1485     9511    3              K@TCTX.REASON = %K_REASON_CONGESTION;

   9511  1 000274   001000 236007                    LDQ     512,DL
         1 000275   200021 552110                    STBQ    K@TCTX,'10'O,AUTO

     1486     9512    3              K@TCTX.ERR = %K_ERROR_NO_TCTX;

   9512  1 000276   000352 236007                    LDQ     234,DL
         1 000277   200021 552104                    STBQ    K@TCTX,'04'O,AUTO

   9512  1 000300                       RETURN_TPDU* null
     1487     9513    3   RETURN_TPDU_DR2: ;
     1488     9514                   %UNLOCK (G=KIT_RECV_LOCK);

   9515  1 000300   000001 630400 2                  EPPR0   1
         1 000301   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000302   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000303   000000 011000                    NOP     0

     1489     9517
     1490     9518    3              K@TCTX.SSN.CLASS = B$TPDU_CR.CLASS;

   9518  1 000304   200003 470500                    LDP0    @K$RWPARM,,AUTO
         1 000305   000024 471500                    LDP1    20,,PR0
         1 000306   100001 236100                    LDQ     1,,PR1
         1 000307   360000 376007                    ANQ     122880,DL
         1 000310   000005 736000                    QLS     5
         1 000311   200037 552120                    STBQ    K@TCTX+14,'20'O,AUTO

     1491     9519    3              K@TCTX.NODE = K$RWPARM.FEX;

PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:230  
   9519  1 000312   000021 236100                    LDQ     17,,PR0
         1 000313   000022 736000                    QLS     18
         1 000314   200021 552120                    STBQ    K@TCTX,'20'O,AUTO

     1492     9520    3              K@TCTX.DST_REF = B$TPDU_CR.SRC_REF;

   9520  1 000315   000024 471500                    LDP1    20,,PR0
         1 000316   100001 220100                    LDX0    1,,PR1
         1 000317   200022 740100                    STX0    K@TCTX+1,,AUTO

     1493     9521
     1494     9522    3              IF K$RWPARM.FUNCTION = %K_NDATA

   9522  1 000320   000020 235100                    LDA     16,,PR0
         1 000321   000041 115007                    CMPA    33,DL
         1 000322   000325 601000 1                  TNZ     s:9525

     1495     9523    3              THEN K@TCTX.SSN.TR_FLAGS.OSI = '1'B;

   9523  1 000323   000020 236007                    LDQ     16,DL
         1 000324   200037 256100                    ORSQ    K@TCTX+14,,AUTO

     1496     9524
     1497     9525    3              K$RWPARM.TCTX$ = ADDR(K@TCTX);

   9525  1 000325   200021 631500                    EPPR1   K@TCTX,,AUTO
         1 000326   000017 451500                    STP1    15,,PR0

     1498     9526    3              K$RWPARM.SHDRSZ = 0;

   9526  1 000327   000023 450100                    STZ     19,,PR0

     1499     9527    3              K$RWPARM.UHDRSZ = 0;

   9527  1 000330   000015 450100                    STZ     13,,PR0

     1500     9528    3              K$RWPARM.MSGSZ = 0;
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:231  

   9528  1 000331   000001 450100                    STZ     1,,PR0

     1501     9529
     1502     9530    3              CALL KIT$SEND_DR (K$RWPARM);

   9530  1 000332   200003 630500                    EPPR0   @K$RWPARM,,AUTO
         1 000333   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000334   000000 701000 xent               TSX1    KIT$SEND_DR
         1 000335   000000 011000                    NOP     0

     1503     9531    3              GOTO LOG_BAD_TPDU;

   9531  1 000336   000650 710000 1                  TRA     LOG_BAD_TPDU

     1504     9532    3              END;
     1505     9533
     1506     9534    2         TCTX# = KI$TCTX.SRC_REF;

   9534  1 000337   200004 470500                    LDP0    TCTX$,,AUTO
         1 000340   000001 236100                    LDQ     1,,PR0
         1 000341   777777 376007                    ANQ     -1,DL
         1 000342   200005 756100                    STQ     TCTX#,,AUTO

     1507     9535    2         K$RWPARM.TCTX# = TCTX#;

   9535  1 000343   000000 620006                    EAX0    0,QL
         1 000344   200003 471500                    LDP1    @K$RWPARM,,AUTO
         1 000345   100033 740100                    STX0    27,,PR1

     1508     9536
     1509     9537    2         KI$TCTX.SSN.CLASS = B$TPDU_CR.CLASS;

   9537  1 000346   100024 473500                    LDP3    20,,PR1
         1 000347   300001 236100                    LDQ     1,,PR3
         1 000350   360000 376007                    ANQ     122880,DL
         1 000351   000005 736000                    QLS     5
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:232  
         1 000352   000016 552120                    STBQ    14,'20'O,PR0

     1510     9538
     1511     9539    2         KI$TCTX.SSN.TPDUSZ_PARM = %K_TPDUSIZE_8192;

   9539  1 000353   000015 220003                    LDX0    13,DU
         1 000354   000014 740100                    STX0    12,,PR0

     1512     9540
     1513     9541    2         CALL I$CHK_PARMS

   9541  1 000355   001062 701000 1                  TSX1    I$CHK_PARMS
         1 000356   000360 702000 1                  TSX2    s:9543
         1 000357   000374 710000 1                  TRA     s:9549

     1514     9542    3         WHENALTRETURN DO;

     1515     9543    3              K@TCTX.REASON = KI$TCTX.REASON;

   9543  1 000360   200004 470500                    LDP0    TCTX$,,AUTO
         1 000361   000000 236100                    LDQ     0,,PR0
         1 000362   200021 552110                    STBQ    K@TCTX,'10'O,AUTO

     1516     9544    3              K@TCTX.ERR = KI$TCTX.ERR;

   9544  1 000363   000000 236100                    LDQ     0,,PR0
         1 000364   200021 552104                    STBQ    K@TCTX,'04'O,AUTO

     1517     9545    3              CALL KIT$RELTCTX(TCTX$);     /*state is still marked closed        */

   9545  1 000365   200004 631500                    EPPR1   TCTX$,,AUTO
         1 000366   200060 451500                    STP1    PARMLEN+1,,AUTO
         1 000367   200060 630500                    EPPR0   PARMLEN+1,,AUTO
         1 000370   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000371   000000 701000 xent               TSX1    KIT$RELTCTX
         1 000372   000000 011000                    NOP     0

PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:233  
     1518     9546    3              GOTO RETURN_TPDU_DR2;

   9546  1 000373   000300 710000 1                  TRA     RETURN_TPDU_DR2

     1519     9547    3              END;
     1520     9548
     1521     9549    2         KI$TCTX.SSN.QOS = K$RWPARM.QOS;

   9549  1 000374   200003 470500                    LDP0    @K$RWPARM,,AUTO
         1 000375   200004 471500                    LDP1    TCTX$,,AUTO
         1 000376   000033 236100                    LDQ     27,,PR0
         1 000377   000033 736000                    QLS     27
         1 000400   100016 552140                    STBQ    14,'40'O,PR1

     1522     9550    2         KI$TCTX.NODE = K$RWPARM.FEX;

   9550  1 000401   000021 236100                    LDQ     17,,PR0
         1 000402   000022 736000                    QLS     18
         1 000403   100000 552120                    STBQ    0,'20'O,PR1

     1523     9551    2         KI$TCTX.LOCAL_FEP = K$RWPARM.LOCAL_FEP;

   9551  1 000404   200004 471500                    LDP1    TCTX$,,AUTO
         1 000405   000032 236100                    LDQ     26,,PR0
         1 000406   000033 736000                    QLS     27
         1 000407   100002 552140                    STBQ    2,'40'O,PR1

     1524     9552    2         KI$TCTX.SSN.SCID = -1;

   9552  1 000410   000001 335007                    LCA     1,DL
         1 000411   200004 471500                    LDP1    TCTX$,,AUTO
         1 000412   100017 755100                    STA     15,,PR1

     1525     9553    2         KI$TCTX.INBOUND = '1'B;

   9553  1 000413   000004 236007                    LDQ     4,DL
         1 000414   100002 256100                    ORSQ    2,,PR1
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:234  

     1526     9554
     1527     9555    2         KI$TCTX.DST_REF = B$TPDU_CR.SRC_REF; /*maintain unpacked*/

   9555  1 000415   000024 471500                    LDP1    20,,PR0
         1 000416   100001 220100                    LDX0    1,,PR1
         1 000417   200004 473500                    LDP3    TCTX$,,AUTO
         1 000420   300001 740100                    STX0    1,,PR3

     1528     9556    2         KI$TCTX.SSN.TR_FLAGS.EXTENDED = B$TPDU_CR.EXT_FMT_FLAG;

   9556  1 000421   000024 471500                    LDP1    20,,PR0
         1 000422   200004 473500                    LDP3    TCTX$,,AUTO
         1 000423   100001 236100                    LDQ     1,,PR1
         1 000424   000010 772000                    QRL     8
         1 000425   300016 676100                    ERQ     14,,PR3
         1 000426   000004 376007                    ANQ     4,DL
         1 000427   300016 656100                    ERSQ    14,,PR3

     1529     9557
     1530     9558    2         IF KI$TCTX.SSN.CLASS=2

   9558  1 000430   300016 236100                    LDQ     14,,PR3
         1 000431   000777 376003                    ANQ     511,DU
         1 000432   000002 116003                    CMPQ    2,DU
         1 000433   000442 601000 1                  TNZ     s:9562
         1 000434   000024 471500                    LDP1    20,,PR0
         1 000435   100001 236100                    LDQ     1,,PR1
         1 000436   001000 316007                    CANQ    512,DL
         1 000437   000442 601000 1                  TNZ     s:9562

     1531     9559    2           AND B$TPDU_CR.CLASS_2_FLOW='0'B /*set means dont use*/
     1532     9560    2         THEN KI$TCTX.SSN.TR_FLAGS.CLASS_2_FLOW = '1'B;

   9560  1 000440   000010 236007                    LDQ     8,DL
         1 000441   300016 256100                    ORSQ    14,,PR3

PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:235  
     1533     9561
     1534     9562    2         IF K$RWPARM.SRC_ADDR$ ~= ADDR(NIL)

   9562  1 000442   000034 236100                    LDQ     28,,PR0
         1 000443   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000444   000462 600000 1                  TZE     s:9568

     1535     9563    3         THEN DO;

     1536     9564    3              TEMP = K$RWPARM.SRC_ADDR$->B$NSAP.LEN +1;

   9564  1 000445   000034 471500                    LDP1    28,,PR0
         1 000446   000100 101500                    MRL     fill='000'O
         1 000447   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 000450   200060 000004                    ADSC9   PARMLEN+1,,AUTO          cn=0,n=4
         1 000451   200060 236100                    LDQ     PARMLEN+1,,AUTO
         1 000452   000001 036007                    ADLQ    1,DL
         1 000453   200006 756100                    STQ     TEMP,,AUTO

     1537     9565    3              ADDR(KI$TCTX.SSN.SRC_NSAP)->CHRBSD = K$RWPARM.SRC_ADDR$->CHRBSD;

   9565  1 000454   000034 471500                    LDP1    28,,PR0
         1 000455   000000 620006                    EAX0    0,QL
         1 000456   200006 721100                    LXL1    TEMP,,AUTO
         1 000457   040140 100540                    MLR     fill='040'O
         1 000460   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         1 000461   300042 000011                    ADSC9   34,,PR3                  cn=0,n=*X1

     1538     9566    3              END;

     1539     9567
     1540     9568    2         IF K$RWPARM.DST_ADDR$ ~= ADDR(NIL)

   9568  1 000462   000035 236100                    LDQ     29,,PR0
         1 000463   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000464   000502 600000 1                  TZE     s:9575

PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:236  
     1541     9569    3         THEN DO;

     1542     9570    3              TEMP = K$RWPARM.DST_ADDR$->B$NSAP.LEN +1;

   9570  1 000465   000035 471500                    LDP1    29,,PR0
         1 000466   000100 101500                    MRL     fill='000'O
         1 000467   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 000470   200060 000004                    ADSC9   PARMLEN+1,,AUTO          cn=0,n=4
         1 000471   200060 236100                    LDQ     PARMLEN+1,,AUTO
         1 000472   000001 036007                    ADLQ    1,DL
         1 000473   200006 756100                    STQ     TEMP,,AUTO

     1543     9571    3              ADDR(KI$TCTX.SSN.DST_NSAP)->CHRBSD = K$RWPARM.DST_ADDR$->CHRBSD;

   9571  1 000474   000035 471500                    LDP1    29,,PR0
         1 000475   000000 620006                    EAX0    0,QL
         1 000476   200006 721100                    LXL1    TEMP,,AUTO
         1 000477   040140 100540                    MLR     fill='040'O
         1 000500   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         1 000501   300047 400011                    ADSC9   39,,PR3                  cn=2,n=*X1

     1544     9572    3              END;

     1545     9573
     1546     9574              %UNLOCK (G=KIT_RECV_LOCK);

   9575  1 000502   000001 630400 2                  EPPR0   1
         1 000503   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000504   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000505   000000 011000                    NOP     0

     1547     9577
     1548     9578        /* If this is an OSI connection, the connection is marked waiting for
     1549     9579           tconnect response and we call OSI Session to let him know of the
     1550     9580          new connection.
     1551     9581        */
     1552     9582    2         IF K$RWPARM.FUNCTION = %K_NDATA
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:237  

   9582  1 000506   200003 470500                    LDP0    @K$RWPARM,,AUTO
         1 000507   000020 235100                    LDA     16,,PR0
         1 000510   000041 115007                    CMPA    33,DL
         1 000511   000530 601000 1                  TNZ     s:9599

     1553     9583    3         THEN DO;

     1554     9584    3              KI$TCTX.SSN.TR_FLAGS.OSI = '1'B;

   9584  1 000512   200004 471500                    LDP1    TCTX$,,AUTO
         1 000513   000020 236007                    LDQ     16,DL
         1 000514   100016 256100                    ORSQ    14,,PR1

     1555     9585    3              KI$TCTX.STATE = %KI_TSTATE_WFTRESP;

   9585  1 000515   006000 236003                    LDQ     3072,DU
         1 000516   100000 552140                    STBQ    0,'40'O,PR1

     1556     9586
     1557     9587    3              K$RWPARM.TCTX$ = ADDR(KI$TCTX);

   9587  1 000517   200004 236100                    LDQ     TCTX$,,AUTO
         1 000520   000017 756100                    STQ     15,,PR0

     1558     9588    3              K$RWPARM.FUNCTION = %K_TCONNECT_IND;

   9588  1 000521   000025 235007                    LDA     21,DL
         1 000522   000020 755100                    STA     16,,PR0

     1559     9589
     1560     9590    3              CALL KIS$OSI_RECV(K$RWPARM) ALTRET(CHECK_SNAP_N_RETURN);

   9590  1 000523   200003 630500                    EPPR0   @K$RWPARM,,AUTO
         1 000524   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000525   000000 701000 xent               TSX1    KIS$OSI_RECV
         1 000526   001010 702000 1                  TSX2    CHECK_SNAP_N_RETURN
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:238  

     1561     9591    3              END;

   9591  1 000527   000556 710000 1                  TRA     s:9618

     1562     9592
     1563     9593        /* If this isn't a connection for OSI Session, the connection is open.
     1564     9594           Call KIT$SEND_CC to construct a Connection Confirm TPDU and return
     1565     9595           it to the other end-point.
     1566     9596           Then call CP-6 Session so he will know of the new connection.
     1567     9597        */
     1568     9598    3         ELSE DO;

     1569     9599    3              TEMP = K$RWPARM.SHDRSZ;

   9599  1 000530   000023 235100                    LDA     19,,PR0
         1 000531   200006 755100                    STA     TEMP,,AUTO

     1570     9600    3              K$RWPARM.MSGSZ = 0;

   9600  1 000532   000001 450100                    STZ     1,,PR0

     1571     9601    3              K$RWPARM.UHDRSZ = 0;

   9601  1 000533   000015 450100                    STZ     13,,PR0

     1572     9602    3              K$RWPARM.SHDRSZ = 0;

   9602  1 000534   000023 450100                    STZ     19,,PR0

     1573     9603
     1574     9604    3              CALL KIT$SEND_CC(K$RWPARM);

   9604  1 000535   200003 630500                    EPPR0   @K$RWPARM,,AUTO
         1 000536   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000537   000000 701000 xent               TSX1    KIT$SEND_CC
         1 000540   000000 011000                    NOP     0
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:239  

     1575     9605
     1576     9606    3              KI$TCTX.STATE = %KI_TSTATE_OPEN;

   9606  1 000541   200004 470500                    LDP0    TCTX$,,AUTO
         1 000542   005000 236003                    LDQ     2560,DU
         1 000543   000000 552140                    STBQ    0,'40'O,PR0

     1577     9607
     1578     9608    3              IF TEMP > 3

   9608  1 000544   200006 235100                    LDA     TEMP,,AUTO
         1 000545   000004 115007                    CMPA    4,DL
         1 000546   000554 602000 1                  TNC     TAKE_QDP_SNAP

     1579     9609    4              THEN DO;

     1580     9610    4                   CALL KIS$RECV(K$RWPARM) ALTRET(TAKE_QDP_SNAP);

   9610  1 000547   200003 630500                    EPPR0   @K$RWPARM,,AUTO
         1 000550   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000551   000000 701000 xent               TSX1    KIS$RECV
         1 000552   000554 702000 1                  TSX2    TAKE_QDP_SNAP

     1581     9611    4                   END;

   9611  1 000553   000556 710000 1                  TRA     s:9618

     1582     9612    4              ELSE DO;

     1583     9613    4   TAKE_QDP_SNAP:
     1584     9614    4                   CALL SC_PRTCL_SNAP;

   9614  1 000554   000000 713400 xsym  TAKE_QDP_SN* CLIMB   SC_PRTCL_SNAP
         1 000555   000000 600000 xsid               climb   nvectors=         0

     1585     9615    4                   END;
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:240  

     1586     9616    3              END/*do if not osi*/;

     1587     9617
     1588     9618    2         RETURN;

   9618  1 000556   000000 702200 xent               TSX2  ! X66_ARET

     1589     9619
     1590     9620        %EJECT;
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:241  
     1591     9621        /*F* NAME: KIT$RECV - Connect Confirm TPDU
     1592     9622
     1593     9623        A Connect Confirm may be received only for an OSI Transport connection.
     1594     9624        */
     1595     9625    2       CASE( %K_TPDU_TYPE_CC);

     1596     9626
     1597     9627    2         KI$TCTX.SSN.CLASS = B$TPDU_CR.CLASS;

   9627  1 000557   000024 474500                    LDP4    20,,PR0
         1 000560   200004 475500                    LDP5    TCTX$,,AUTO
         1 000561   400001 236100                    LDQ     1,,PR4
         1 000562   360000 376007                    ANQ     122880,DL
         1 000563   000005 736000                    QLS     5
         1 000564   500016 552120                    STBQ    14,'20'O,PR5

     1598     9628
     1599     9629    2         CALL I$CHK_PARMS ALTRET(LOG_BAD_TPDU);

   9629  1 000565   001062 701000 1                  TSX1    I$CHK_PARMS
         1 000566   000650 702000 1                  TSX2    LOG_BAD_TPDU

     1600     9630
     1601     9631    2         IF KI$TCTX.SSN.TR_FLAGS.OSI = '0'B

   9631  1 000567   200004 470500                    LDP0    TCTX$,,AUTO
         1 000570   000016 236100                    LDQ     14,,PR0
         1 000571   000020 316007                    CANQ    16,DL
         1 000572   000650 600000 1                  TZE     LOG_BAD_TPDU

     1602     9632    2         THEN GOTO LOG_BAD_TPDU;
     1603     9633
     1604     9634    2         IF KI$TCTX.STATE = %KI_TSTATE_WFCC

   9634  1 000573   000000 236100                    LDQ     0,,PR0
         1 000574   777000 376003                    ANQ     -512,DU
         1 000575   003000 116003                    CMPQ    1536,DU
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:242  
         1 000576   000650 601000 1                  TNZ     LOG_BAD_TPDU

     1605     9635    3         THEN DO;

     1606     9636    3              KI$TCTX.DST_REF = B$TPDU_CR.SRC_REF;

   9636  1 000577   200003 471500                    LDP1    @K$RWPARM,,AUTO
         1 000600   100024 473500                    LDP3    20,,PR1
         1 000601   300001 220100                    LDX0    1,,PR3
         1 000602   000001 740100                    STX0    1,,PR0

     1607     9637    3              IF KI$TCTX.SSN.CLASS = 0

   9637  1 000603   200004 470500                    LDP0    TCTX$,,AUTO
         1 000604   000016 236100                    LDQ     14,,PR0
         1 000605   000777 316003                    CANQ    511,DU
         1 000606   000613 601000 1                  TNZ     s:9643

     1608     9638    4              THEN DO;

     1609     9639    4                   KI$TCTX.SSN.TR_FLAGS.EXTENDED = '0'B;

   9639  1 000607   000002 236000 2                  LDQ     2
         1 000610   000016 356100                    ANSQ    14,,PR0

     1610     9640    4                   KI$TCTX.SSN.TR_FLAGS.EXPEDITED = '0'B;

   9640  1 000611   000000 236000 2                  LDQ     0
         1 000612   000016 356100                    ANSQ    14,,PR0

     1611     9641    4                   END;

     1612     9642
     1613     9643    3              IF KI$TCTX.SSN.CLASS ~= 2

   9643  1 000613   000016 236100                    LDQ     14,,PR0
         1 000614   000777 376003                    ANQ     511,DU
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:243  
         1 000615   000002 116003                    CMPQ    2,DU
         1 000616   000621 600000 1                  TZE     s:9648

     1614     9644    4              THEN DO;

     1615     9645    4                   KI$TCTX.SSN.TR_FLAGS.CLASS_2_FLOW = '0'B;

   9645  1 000617   000003 236000 2                  LDQ     3
         1 000620   000016 356100                    ANSQ    14,,PR0

     1616     9646    4                   END;

     1617     9647
     1618     9648    3              IF KI$TCTX.SSN.CLASS ~= 4

   9648  1 000621   000016 236100                    LDQ     14,,PR0
         1 000622   000777 376003                    ANQ     511,DU
         1 000623   000004 116003                    CMPQ    4,DU
         1 000624   000627 600000 1                  TZE     s:9653

     1619     9649    4              THEN DO;

     1620     9650    4                   KI$TCTX.SSN.TR_FLAGS.CHKSUM = '0'B;

   9650  1 000625   000004 236000 2                  LDQ     4
         1 000626   000016 356100                    ANSQ    14,,PR0

     1621     9651    4                   END;

     1622     9652
     1623     9653    3              KI$TCTX.SSN.TR_FLAGS.EXTENDED = B$TPDU_CR.EXT_FMT_FLAG;

   9653  1 000627   100024 473500                    LDP3    20,,PR1
         1 000630   300001 236100                    LDQ     1,,PR3
         1 000631   000010 772000                    QRL     8
         1 000632   000016 676100                    ERQ     14,,PR0
         1 000633   000004 376007                    ANQ     4,DL
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:244  
         1 000634   000016 656100                    ERSQ    14,,PR0

     1624     9654
     1625     9655    3              KI$TCTX.STATE = %KI_TSTATE_OPEN;

   9655  1 000635   005000 236003                    LDQ     2560,DU
         1 000636   000000 552140                    STBQ    0,'40'O,PR0

     1626     9656
     1627     9657    3              K$RWPARM.TCTX$ = ADDR(KI$TCTX);

   9657  1 000637   200004 236100                    LDQ     TCTX$,,AUTO
         1 000640   100017 756100                    STQ     15,,PR1

     1628     9658    3              K$RWPARM.FUNCTION = %K_TCONNECT_CFM;

   9658  1 000641   000026 235007                    LDA     22,DL
         1 000642   100020 755100                    STA     16,,PR1

     1629     9659
     1630     9660    3              CALL KIS$OSI_RECV(K$RWPARM) ALTRET(CHECK_SNAP_N_RETURN);

   9660  1 000643   200003 630500                    EPPR0   @K$RWPARM,,AUTO
         1 000644   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000645   000000 701000 xent               TSX1    KIS$OSI_RECV
         1 000646   001010 702000 1                  TSX2    CHECK_SNAP_N_RETURN

     1631     9661
     1632     9662    3              RETURN;

   9662  1 000647   000000 702200 xent               TSX2  ! X66_ARET

     1633     9663    3              END/*do if waitcc*/;
     1634     9664
     1635     9665    3         ELSE DO;

     1636     9666    3   LOG_BAD_TPDU:
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:245  
     1637     9667    3              CALL I$CHECK_SNAP;

   9667  1 000650   001021 701000 1     LOG_BAD_TPDU TSX1    I$CHECK_SNAP
         1 000651   000000 011000                    NOP     0

   9667  1 000652                       DISCARD_TPDU null
     1638     9668    3   DISCARD_TPDU: ;
     1639     9669    3              KIT_DISCARDED_TPDUS = KIT_DISCARDED_TPDUS +1;

   9669  1 000652   000000 235000 xsym               LDA     KIT_DISCARDED_TPDUS
         1 000653   000001 035007                    ADLA    1,DL
         1 000654   000000 755000 xsym               STA     KIT_DISCARDED_TPDUS

     1640     9670    3              RETURN;

   9670  1 000655   000000 702200 xent               TSX2  ! X66_ARET

     1641     9671    3              END;
     1642     9672
     1643     9673        %EJECT;
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:246  
     1644     9674        /*F* NAME: KIT$RECV - Disconnect Request TPDU
     1645     9675
     1646     9676        A Disconnect Request may be received only for either an OSI or CP-6 connections.
     1647     9677
     1648     9678        The Disconnect Confirm TPDU has already been sent by this host's
     1649     9679        local fep.  All that needs to be done is to notify Session of the
     1650     9680        Transport Disconnect indication and mark the transport connection
     1651     9681        closed.
     1652     9682        */
     1653     9683    2       CASE( %K_TPDU_TYPE_DR);

     1654     9684
     1655     9685    2         CALL I$CHK_PARMS ALTRET(LOG_BAD_TPDU);

   9685  1 000656   001062 701000 1                  TSX1    I$CHK_PARMS
         1 000657   000650 702000 1                  TSX2    LOG_BAD_TPDU

     1656     9686    2         KI$TCTX.REASON = B$TPDU_DR.REASON;

   9686  1 000660   200003 470500                    LDP0    @K$RWPARM,,AUTO
         1 000661   000024 471500                    LDP1    20,,PR0
         1 000662   200004 473500                    LDP3    TCTX$,,AUTO
         1 000663   100001 236100                    LDQ     1,,PR1
         1 000664   300000 552110                    STBQ    0,'10'O,PR3

   9686  1 000665                       REPORT_TDIS* null
     1657     9687
     1658     9688    2   REPORT_TDISCONNECT: ;
     1659     9689    2         K$RWPARM.FUNCTION = %K_TDISCONNECT_IND;

   9689  1 000665   000031 235007                    LDA     25,DL
         1 000666   200003 470500                    LDP0    @K$RWPARM,,AUTO
         1 000667   000020 755100                    STA     16,,PR0

     1660     9690    2         K$RWPARM.TCTX$ = ADDR(KI$TCTX);

   9690  1 000670   200004 236100                    LDQ     TCTX$,,AUTO
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:247  
         1 000671   000017 756100                    STQ     15,,PR0

     1661     9691    2         K$RWPARM.TCTX# = KI$TCTX.SRC_REF;

   9691  1 000672   200004 471500                    LDP1    TCTX$,,AUTO
         1 000673   100001 720100                    LXL0    1,,PR1
         1 000674   000033 740100                    STX0    27,,PR0

     1662     9692
     1663     9693    2         IF KI$TCTX.SSN.TR_FLAGS.OSI='0'B

   9693  1 000675   100016 236100                    LDQ     14,,PR1
         1 000676   000020 316007                    CANQ    16,DL
         1 000677   000707 601000 1                  TNZ     s:9696

     1664     9694    2         THEN CALL KIS$REP_TERM(TCTX#);

   9694  1 000700   200005 633500                    EPPR3   TCTX#,,AUTO
         1 000701   200060 453500                    STP3    PARMLEN+1,,AUTO
         1 000702   200060 630500                    EPPR0   PARMLEN+1,,AUTO
         1 000703   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000704   000000 701000 xent               TSX1    KIS$REP_TERM
         1 000705   000000 011000                    NOP     0
         1 000706   000716 710000 1                  TRA     s:9702

     1665     9695    3         ELSE DO;

     1666     9696    3              CALL KIS$OSI_RECV(K$RWPARM)

   9696  1 000707   200003 630500                    EPPR0   @K$RWPARM,,AUTO
         1 000710   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000711   000000 701000 xent               TSX1    KIS$OSI_RECV
         1 000712   000714 702000 1                  TSX2    s:9698
         1 000713   000716 710000 1                  TRA     s:9702

     1667     9697    4              WHENALTRETURN DO;

PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:248  
     1668     9698    4                   CALL I$CHECK_SNAP;

   9698  1 000714   001021 701000 1                  TSX1    I$CHECK_SNAP
         1 000715   000000 011000                    NOP     0

     1669     9699    4                   END;

     1670     9700    3              END;

     1671     9701
     1672     9702    2         KI$TCTX.STATE = %KI_TSTATE_CLOSED;

   9702  1 000716   200004 470500                    LDP0    TCTX$,,AUTO
         1 000717   002000 236003                    LDQ     1024,DU
         1 000720   000000 552140                    STBQ    0,'40'O,PR0

     1673     9703    2         KI$TCTX.REMOTE_TERM = '1'B;

   9703  1 000721   200004 470500                    LDP0    TCTX$,,AUTO
         1 000722   000020 236007                    LDQ     16,DL
         1 000723   000002 256100                    ORSQ    2,,PR0

     1674     9704    2         CALL KIT$RELTCTX(TCTX$);

   9704  1 000724   200004 630500                    EPPR0   TCTX$,,AUTO
         1 000725   200060 450500                    STP0    PARMLEN+1,,AUTO
         1 000726   200060 630500                    EPPR0   PARMLEN+1,,AUTO
         1 000727   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000730   000000 701000 xent               TSX1    KIT$RELTCTX
         1 000731   000000 011000                    NOP     0

     1675     9705
     1676     9706    2         RETURN;

   9706  1 000732   000000 702200 xent               TSX2  ! X66_ARET

     1677     9707
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:249  
     1678     9708        /* An Error TPDU may be received only for either an OSI or CP-6.
     1679     9709           All processing will have been done by the local Fep; all that
     1680     9710           is needed here is to report the disconnect to session and
     1681     9711           close the transport connection.
     1682     9712        */
     1683     9713    2       CASE( %K_TPDU_TYPE_ER);

     1684     9714    2         KI$TCTX.REASON = B$TPDU_ER.REJECT_CAUSE;

   9714  1 000733   000024 474500                    LDP4    20,,PR0
         1 000734   200004 475500                    LDP5    TCTX$,,AUTO
         1 000735   400001 236100                    LDQ     1,,PR4
         1 000736   000022 772000                    QRL     18
         1 000737   500000 552110                    STBQ    0,'10'O,PR5

     1685     9715    2         GOTO REPORT_TDISCONNECT;

   9715  1 000740   000665 710000 1                  TRA     REPORT_TDISCONNECT

     1686     9716
     1687     9717        %EJECT;
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:250  
     1688     9718        /*F* NAME: KIT$RECV - CP6 Control TPDU
     1689     9719
     1690     9720        A CP6 Control TPDU may be received for an OSI connection only.
     1691     9721        */
     1692     9722    2       CASE( %K_TPDU_TYPE_CP6);

     1693     9723
     1694     9724    2         IF KI$TCTX.SSN.TR_FLAGS.OSI = '0'B

   9724  1 000741   200004 474500                    LDP4    TCTX$,,AUTO
         1 000742   400016 236100                    LDQ     14,,PR4
         1 000743   000020 316007                    CANQ    16,DL
         1 000744   000650 600000 1                  TZE     LOG_BAD_TPDU

     1695     9725    2         THEN GOTO LOG_BAD_TPDU;
     1696     9726
     1697     9727    2         K$RWPARM.TCTX$ = ADDR(KI$TCTX);

   9727  1 000745   200004 236100                    LDQ     TCTX$,,AUTO
         1 000746   000017 756100                    STQ     15,,PR0

     1698     9728
     1699     9729    2         IF PARM$->K$TPARM_CP6_OPTIONS.CODE = %K_TPARM_FLOW_STOP

   9729  1 000747   300000 236100                    LDQ     0,,PR3
         1 000750   777000 376003                    ANQ     -512,DU
         1 000751   003000 116003                    CMPQ    1536,DU
         1 000752   000764 601000 1                  TNZ     s:9737

     1700     9730    3         THEN DO;

     1701     9731    3              KI$TCTX.SESSION_FLOW_STOPPED = '1'B;

   9731  1 000753   000001 236007                    LDQ     1,DL
         1 000754   400002 256100                    ORSQ    2,,PR4

     1702     9732    3              K$RWPARM.FUNCTION = %K_TFLOW_STOP;
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:251  

   9732  1 000755   000033 235007                    LDA     27,DL
         1 000756   000020 755100                    STA     16,,PR0

     1703     9733    3              CALL KIS$OSI_RECV(K$RWPARM) ALTRET(CHECK_SNAP_N_RETURN);

   9733  1 000757   200003 630500                    EPPR0   @K$RWPARM,,AUTO
         1 000760   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000761   000000 701000 xent               TSX1    KIS$OSI_RECV
         1 000762   001010 702000 1                  TSX2    CHECK_SNAP_N_RETURN

     1704     9734    3              RETURN;

   9734  1 000763   000000 702200 xent               TSX2  ! X66_ARET

     1705     9735    3              END;
     1706     9736
     1707     9737    2         IF PARM$->K$TPARM_CP6_OPTIONS.CODE = %K_TPARM_FLOW_START

   9737  1 000764   004000 116003                    CMPQ    2048,DU
         1 000765   000777 601000 1                  TNZ     s:9745

     1708     9738    3         THEN DO;

     1709     9739    3              KI$TCTX.SESSION_FLOW_STOPPED = '0'B;

   9739  1 000766   000004 236000 2                  LDQ     4
         1 000767   400002 356100                    ANSQ    2,,PR4

     1710     9740    3              K$RWPARM.FUNCTION = %K_TFLOW_START;

   9740  1 000770   000034 235007                    LDA     28,DL
         1 000771   000020 755100                    STA     16,,PR0

     1711     9741    3              CALL KIS$OSI_RECV(K$RWPARM) ALTRET(CHECK_SNAP_N_RETURN);

   9741  1 000772   200003 630500                    EPPR0   @K$RWPARM,,AUTO
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:252  
         1 000773   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000774   000000 701000 xent               TSX1    KIS$OSI_RECV
         1 000775   001010 702000 1                  TSX2    CHECK_SNAP_N_RETURN

     1712     9742    3              RETURN;

   9742  1 000776   000000 702200 xent               TSX2  ! X66_ARET

     1713     9743    3              END;
     1714     9744
     1715     9745    2         IF PARM$->K$TPARM_CP6_OPTIONS.CODE = %K_TPARM_SSN_CRDT_ACK

   9745  1 000777   005000 116003                    CMPQ    2560,DU
         1 001000   001013 601000 1                  TNZ     s:9758

     1716     9746    3         THEN DO;

     1717     9747    3              K$RWPARM.FUNCTION = %K_TCREDIT_ACK;

   9747  1 001001   000032 235007                    LDA     26,DL
         1 001002   000020 755100                    STA     16,,PR0

     1718     9748
     1719     9749    3              CALL KIS$OSI_RECV(K$RWPARM)

   9749  1 001003   200003 630500                    EPPR0   @K$RWPARM,,AUTO
         1 001004   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001005   000000 701000 xent               TSX1    KIS$OSI_RECV
         1 001006   001010 702000 1                  TSX2    CHECK_SNAP_N_RETURN
         1 001007   001012 710000 1                  TRA     s:9755

     1720     9750    4              WHENALTRETURN DO;

     1721     9751    4   CHECK_SNAP_N_RETURN:
     1722     9752    4                   CALL I$CHECK_SNAP;

   9752  1 001010   001021 701000 1     CHECK_SNAP_* TSX1    I$CHECK_SNAP
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:253  
         1 001011   000000 011000                    NOP     0

     1723     9753    4                   END;

     1724     9754
     1725     9755    3              RETURN;

   9755  1 001012   000000 702200 xent               TSX2  ! X66_ARET

     1726     9756    3              END;
     1727     9757
     1728     9758    2         GOTO LOG_BAD_TPDU;

   9758  1 001013   000650 710000 1                  TRA     LOG_BAD_TPDU

     1729     9759
     1730     9760        %EJECT;
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:254  
     1731     9761        /*F* NAME: KIT$RECV - Unrecognized TPDU
     1732     9762
     1733     9763        For an unrecognized TPDU, we first take a dump of the host to
     1734     9764        capture the host ICQ, and then request a GJA-166-3 dump from
     1735     9765        the fep.
     1736     9766        */
     1737     9767    2       CASE(ELSE);

     1738     9768    2         CALL SC_PRTCL_SNAP;

   9768  1 001014   000000 713400 xsym               CLIMB   SC_PRTCL_SNAP
         1 001015   000000 600000 xsid               climb   nvectors=         0

     1739     9769    2         CALL I$CHECK_FEP_DUMP;

   9769  1 001016   001035 701000 1                  TSX1    I$CHECK_FEP_DUMP
         1 001017   000000 011000                    NOP     0

     1740     9770    2         RETURN;

   9770  1 001020   000000 702200 xent               TSX2  ! X66_ARET

     1741     9771
     1742     9772        /*S* SCREECH_CODE: KI-S$PRTCLERR
     1743     9773             TYPE: SNAP
     1744     9774             MESSAGE: Communications protocol error.
     1745     9775             REMARKS: Full screech if unrecoverable; snap if message ignored.
     1746     9776        */
     1747     9777
     1748     9778    2         END/*do case(type)*/;

     1749     9779
     1750     9780        %EJECT;
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:255  
     1751     9781        /*I* NAME: I$CHECK_SNAP
     1752     9782
     1753     9783        The I$CHECK_SNAP subroutine provides a single place to check for
     1754     9784        the need to take a snapshot dump, and to take the dump if required.
     1755     9785        */
     1756     9786
     1757     9787    1   I$CHECK_SNAP: PROC;

   9787  1 001021   200044 741300       I$CHECK_SNAP STX1  ! KL_FEPST+4,,AUTO

     1758     9788
     1759     9789    2      IF KIT_ERROR_SNAP ~= 0

   9789  1 001022   000000 235000 xsym               LDA     KIT_ERROR_SNAP
         1 001023   001032 601000 1                  TNZ     s:9791
         1 001024   200004 470500                    LDP0    TCTX$,,AUTO
         1 001025   000016 236100                    LDQ     14,,PR0
         1 001026   000020 316007                    CANQ    16,DL
         1 001027   001034 600000 1                  TZE     s:9791+2
         1 001030   000000 235000 xsym               LDA     KIT_OSI_SNAP
         1 001031   001034 600000 1                  TZE     s:9791+2

     1760     9790    2        OR (KI$TCTX.SSN.TR_FLAGS.OSI AND KIT_OSI_SNAP~=0)
     1761     9791    2      THEN CALL SC_PRTCL_SNAP;

   9791  1 001032   000000 713400 xsym               CLIMB   SC_PRTCL_SNAP
         1 001033   000000 600000 xsid               climb   nvectors=         0
         1 001034   001036 710000 1                  TRA     s:9794

     1762     9792
     1763     9793    2   I$CHECK_FEP_DUMP: ENTRY;

   9793  1 001035   200044 741300       I$CHECK_FEP* STX1  ! KL_FEPST+4,,AUTO

     1764     9794    2      IF KIT_DUMP_FEP ~= 0

   9794  1 001036   000000 235000 xsym               LDA     KIT_DUMP_FEP
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:256  
         1 001037   001060 600000 1                  TZE     s:9801

     1765     9795    3      THEN DO;

     1766     9796    3           KL_FEPST.FEP = K$RWPARM.FEX;

   9796  1 001040   200003 470500                    LDP0    @K$RWPARM,,AUTO
         1 001041   000021 236100                    LDQ     17,,PR0
         1 001042   000022 736000                    QLS     18
         1 001043   200040 552120                    STBQ    KL_FEPST,'20'O,AUTO

     1767     9797    3           KL_FEPST.FCN = IGA_CRASHFEP_BF;

   9797  1 001044   120000 236003                    LDQ     40960,DU
         1 001045   200040 552140                    STBQ    KL_FEPST,'40'O,AUTO

     1768     9798    3           CALL KUB$WRITE(KL_FEPST, LENGTHC(KL_FEPST), 'HLPADMIN');

   9798  1 001046   000006 236000 2                  LDQ     6
         1 001047   200062 756100                    STQ     PARMLEN+3,,AUTO
         1 001050   000007 236000 2                  LDQ     7
         1 001051   200061 756100                    STQ     PARMLEN+2,,AUTO
         1 001052   200040 631500                    EPPR1   KL_FEPST,,AUTO
         1 001053   200060 451500                    STP1    PARMLEN+1,,AUTO
         1 001054   200060 630500                    EPPR0   PARMLEN+1,,AUTO
         1 001055   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 001056   000000 701000 xent               TSX1    KUB$WRITE
         1 001057   000000 011000                    NOP     0

     1769     9799    3           END;

     1770     9800
     1771     9801    2      RETURN;

   9801  1 001060   200044 221300                    LDX1  ! KL_FEPST+4,,AUTO
         1 001061   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:257  
     1772     9802
     1773     9803    2   END I$CHECK_SNAP;
     1774     9804        %EJECT;
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:258  
     1775     9805        /*I* NAME: I$CHK_PARMS
     1776     9806
     1777     9807        */
     1778     9808    1   I$CHK_PARMS: PROC ALTRET;

   9808  1 001062   200044 741300       I$CHK_PARMS  STX1  ! KL_FEPST+4,,AUTO

     1779     9809
     1780     9810                                                /* Auto Storage                       */
     1781     9811        %K$TPARM_TSAP_ID (NAME=K$TPARM, STCLASS=AUTO, ALGN=CALIGNED);
     1782     9848    2   DCL 1 B$TPARM REDEF K$TPARM CHAR(34);
     1783     9849
     1784     9850    2   DCL K$TPARM$ PTR;
     1785     9851    2   DCL PARMLEN SBIN;
     1786     9852
     1787     9853
     1788     9854                                                /* Based Data                         */
     1789     9855        %K$TPDU_GENERIC (NAME=TPDU);
     1790     9915    2   DCL K$TPARM_GENERIC CHAR(PARMSIZE) BASED;
     1791     9916        %K$TPARM_TPDUSZ (ALGN=ALIGNED, STCLASS="BASED(K$TPARM$)");
     1792     9955        %K$TPARM_OPTION (ALGN=ALIGNED, STCLASS="BASED(K$TPARM$)");
     1793    10002        %K$TPARM_TSAP_ID (ALGN=ALIGNED, STCLASS="BASED(K$TPARM$)");
     1794    10039        %K$TPARM_VERSION (ALGN=ALIGNED, STCLASS="BASED(K$TPARM$)");
     1795    10075        %K$TPARM_CHKSUM (ALGN=ALIGNED, STCLASS="BASED(K$TPARM$)");
     1796    10115        %K$TPARM_CLR_INFO (ALGN=CALIGNED, STCLASS="BASED(K$TPARM$)");
     1797    10164
     1798    10165    2   DCL B$TSAP CHAR(PARMLEN) BASED;
     1799    10166
     1800    10167                                                /* External data                      */
     1801    10168    2   DCL K_TSAP_SZ UBIN SYMREF;
     1802    10169
     1803    10170        %EJECT;
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:259  
     1804    10171        /* Initialize check_parmas auto.
     1805    10172        */
     1806    10173    2      K$TPARM$ = ADDR(K$TPARM);

  10173  1 001063   200045 630500                    EPPR0   K$TPARM,,AUTO
         1 001064   200056 450500                    STP0    K$TPARM$,,AUTO

     1807    10174
     1808    10175    3      DO WHILE (PARMSIZE > 1 );       /*use 1 because it may be a CP-6 connection*/

  10175  1 001065   200012 235100                    LDA     PARMSIZE,,AUTO
         1 001066   000001 115007                    CMPA    1,DL
         1 001067   001510 604400 1                  TMOZ    s:10320

     1809    10176    3           B$TPARM = PARM$->K$TPARM_GENERIC;

  10176  1 001070   200011 470500                    LDP0    PARM$,,AUTO
         1 001071   200012 720100                    LXL0    PARMSIZE,,AUTO
         1 001072   040100 100540                    MLR     fill='040'O
         1 001073   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         1 001074   200045 000042                    ADSC9   K$TPARM,,AUTO            cn=0,n=34

     1810    10177    3           PARMLEN = K$TPARM.LEN;

  10177  1 001075   200045 236100                    LDQ     K$TPARM,,AUTO
         1 001076   000022 772000                    QRL     18
         1 001077   000777 376007                    ANQ     511,DL
         1 001100   200057 756100                    STQ     PARMLEN,,AUTO

     1811    10178
     1812    10179    3           IF PARMLEN > PARMSIZE-2

  10179  1 001101   200012 236100                    LDQ     PARMSIZE,,AUTO
         1 001102   000002 136007                    SBLQ    2,DL
         1 001103   200057 116100                    CMPQ    PARMLEN,,AUTO
         1 001104   001112 605000 1                  TPL     s:10186

PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:260  
     1813    10180    4           THEN DO;

  10173  1 001105                       SET_INVLEN   null
     1814    10181    4   SET_INVLEN:  ;
     1815    10182    4                KI$TCTX.REASON = %K_REASON_LEN_INV;

  10182  1 001105   200004 470500                    LDP0    TCTX$,,AUTO
         1 001106   212000 236007                    LDQ     70656,DL
         1 001107   000000 552110                    STBQ    0,'10'O,PR0

     1816    10183    4                ALTRETURN;

  10183  1 001110   200044 221300                    LDX1  ! KL_FEPST+4,,AUTO
         1 001111   000000 702211                    TSX2  ! 0,X1

     1817    10184    4                END;
     1818    10185
     1819    10186    4           DO SELECT (K$TPARM.CODE);

  10186  1 001112   200045 236100                    LDQ     K$TPARM,,AUTO
         1 001113   000033 772000                    QRL     27
         1 001114   000214 116007                    CMPQ    140,DL
         1 001115   001133 602000 1                  TNC     s:10186+17
         1 001116   001155 600000 1                  TZE     s:10206
         1 001117   000303 116007                    CMPQ    195,DL
         1 001120   001126 602000 1                  TNC     s:10186+12
         1 001121   001140 600000 1                  TZE     s:10191
         1 001122   000033 736000                    QLS     27
         1 001123   340000 116003                    CMPQ    114688,DU
         1 001124   001167 601000 1                  TNZ     s:10221
         1 001125   001156 710000 1                  TRA     s:10209
         1 001126   200045 236100                    LDQ     K$TPARM,,AUTO
         1 001127   777000 376003                    ANQ     -512,DU
         1 001130   301000 116003                    CMPQ    98816,DU
         1 001131   001167 601000 1                  TNZ     s:10221
         1 001132   001164 710000 1                  TRA     s:10213
         1 001133   200045 236100                    LDQ     K$TPARM,,AUTO
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:261  
         1 001134   777000 376003                    ANQ     -512,DU
         1 001135   212000 116003                    CMPQ    70656,DU
         1 001136   001167 601000 1                  TNZ     s:10221
         1 001137   001141 710000 1                  TRA     CHECK_AK

     1820    10187
     1821    10188        /* First check for the parameters that aren't limited to CR and CC.
     1822    10189        */
     1823    10190    4                SELECT(%K_TPARM_CHKSUM);

     1824    10191    4                GOTO GET_NEXT_PARM;

  10191  1 001140   001474 710000 1                  TRA     GET_NEXT_PARM

     1825    10192
     1826    10193    4                SELECT(%K_TPARM_SUBSEQ);

  10193  1 001141                       CHECK_AK     null
     1827    10194    4   CHECK_AK:    ;
     1828    10195    4                IF TYPE ~= %K_TPDU_TYPE_AK

  10195  1 001141   200007 235100                    LDA     TYPE,,AUTO
         1 001142   000006 115007                    CMPA    6,DL
         1 001143   001154 600000 1                  TZE     s:10203

     1829    10196    5                THEN DO;

  10194  1 001144                       SET_INVPARM  null
     1830    10197    5   SET_INVPARM:      ;
     1831    10198    5                     KI$TCTX.REASON = %K_REASON_PROTOCOL;

  10198  1 001144   200004 470500                    LDP0    TCTX$,,AUTO
         1 001145   205000 236007                    LDQ     68096,DL
         1 001146   000000 552110                    STBQ    0,'10'O,PR0

     1832    10199    5                     KI$TCTX.ERR = %K_ERROR_INVPARM;

PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:262  
  10199  1 001147   200004 470500                    LDP0    TCTX$,,AUTO
         1 001150   000342 236007                    LDQ     226,DL
         1 001151   000000 552104                    STBQ    0,'04'O,PR0

     1833    10200    5                     ALTRETURN;

  10200  1 001152   200044 221300                    LDX1  ! KL_FEPST+4,,AUTO
         1 001153   000000 702211                    TSX2  ! 0,X1

     1834    10201    5                     END;
     1835    10202
     1836    10203    4                GOTO GET_NEXT_PARM;

  10203  1 001154   001474 710000 1                  TRA     GET_NEXT_PARM

     1837    10204
     1838    10205    4                SELECT(%K_TPARM_FCC);

     1839    10206    4                GOTO CHECK_AK;

  10206  1 001155   001141 710000 1                  TRA     CHECK_AK

     1840    10207
     1841    10208    4                SELECT(%K_TPARM_CLR_INFO);

     1842    10209    4                KI$TCTX.ERR = K$TPARM_CLR_INFO.ERR;

  10209  1 001156   200056 471500                    LDP1    K$TPARM$,,AUTO
         1 001157   200004 473500                    LDP3    TCTX$,,AUTO
         1 001160   000100 100500                    MLR     fill='000'O
         1 001161   100000 400001                    ADSC9   0,,PR1                   cn=2,n=1
         1 001162   300000 600001                    ADSC9   0,,PR3                   cn=3,n=1

     1843    10210    4                GOTO GET_NEXT_PARM;

  10210  1 001163   001474 710000 1                  TRA     GET_NEXT_PARM

PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:263  
     1844    10211
     1845    10212    4                SELECT(%K_TPARM_INVALID_TPDU);
             10212                         /* this is the same code for CALLING_TSAP*/

     1846    10213    4                IF TYPE = %K_TPDU_TYPE_ER

  10213  1 001164   200007 235100                    LDA     TYPE,,AUTO
         1 001165   000007 115007                    CMPA    7,DL
         1 001166   001474 600000 1                  TZE     GET_NEXT_PARM

     1847    10214    4                THEN GOTO GET_NEXT_PARM;
     1848    10215
     1849    10216    4                END/*do select*/;

     1850    10217
     1851    10218        %EJECT;
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:264  
     1852    10219        /* Now check those that are valid only with CR or CC.
     1853    10220        */
     1854    10221    3           IF (TYPE ~= %K_TPDU_TYPE_CR) AND (TYPE ~= %K_TPDU_TYPE_CC)

  10221  1 001167   200007 235100                    LDA     TYPE,,AUTO
         1 001170   000016 115007                    CMPA    14,DL
         1 001171   001174 600000 1                  TZE     s:10224
         1 001172   000015 115007                    CMPA    13,DL
         1 001173   001144 601000 1                  TNZ     SET_INVPARM

     1855    10222    3           THEN GOTO SET_INVPARM;
     1856    10223
     1857    10224    4           DO SELECT (K$TPARM.CODE);

  10224  1 001174   200045 236100                    LDQ     K$TPARM,,AUTO
         1 001175   000033 772000                    QRL     27
         1 001176   000302 116007                    CMPQ    194,DL
         1 001177   001220 602000 1                  TNC     s:10224+20
         1 001200   001370 600000 1                  TZE     s:10262
         1 001201   000305 116007                    CMPQ    197,DL
         1 001202   001213 602000 1                  TNC     s:10224+15
         1 001203   001473 600000 1                  TZE     s:10303
         1 001204   000306 116007                    CMPQ    198,DL
         1 001205   001474 602000 1                  TNC     GET_NEXT_PARM
         1 001206   001315 600000 1                  TZE     s:10241
         1 001207   000033 736000                    QLS     27
         1 001210   307000 116003                    CMPQ    101888,DU
         1 001211   001474 601000 1                  TNZ     GET_NEXT_PARM
         1 001212   001473 710000 1                  TRA     s:10303
         1 001213   200045 236100                    LDQ     K$TPARM,,AUTO
         1 001214   777000 376003                    ANQ     -512,DU
         1 001215   304000 116003                    CMPQ    100352,DU
         1 001216   001474 601000 1                  TNZ     GET_NEXT_PARM
         1 001217   001462 710000 1                  TRA     s:10298
         1 001220   200045 236100                    LDQ     K$TPARM,,AUTO
         1 001221   000033 772000                    QRL     27
         1 001222   000211 116007                    CMPQ    137,DL
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:265  
         1 001223   001241 602000 1                  TNC     s:10224+37
         1 001224   001473 600000 1                  TZE     s:10303
         1 001225   000300 116007                    CMPQ    192,DL
         1 001226   001234 602000 1                  TNC     s:10224+32
         1 001227   001262 600000 1                  TZE     s:10226
         1 001230   000033 736000                    QLS     27
         1 001231   301000 116003                    CMPQ    98816,DU
         1 001232   001474 601000 1                  TNZ     GET_NEXT_PARM
         1 001233   001427 710000 1                  TRA     s:10281
         1 001234   200045 236100                    LDQ     K$TPARM,,AUTO
         1 001235   777000 376003                    ANQ     -512,DU
         1 001236   213000 116003                    CMPQ    71168,DU
         1 001237   001474 601000 1                  TNZ     GET_NEXT_PARM
         1 001240   001473 710000 1                  TRA     s:10303
         1 001241   200045 236100                    LDQ     K$TPARM,,AUTO
         1 001242   000033 772000                    QRL     27
         1 001243   000206 116007                    CMPQ    134,DL
         1 001244   001255 602000 1                  TNC     s:10224+49
         1 001245   001473 600000 1                  TZE     s:10303
         1 001246   000207 116007                    CMPQ    135,DL
         1 001247   001474 602000 1                  TNC     GET_NEXT_PARM
         1 001250   001473 600000 1                  TZE     s:10303
         1 001251   000033 736000                    QLS     27
         1 001252   210000 116003                    CMPQ    69632,DU
         1 001253   001474 601000 1                  TNZ     GET_NEXT_PARM
         1 001254   001473 710000 1                  TRA     s:10303
         1 001255   200045 236100                    LDQ     K$TPARM,,AUTO
         1 001256   777000 376003                    ANQ     -512,DU
         1 001257   205000 116003                    CMPQ    68096,DU
         1 001260   001474 601000 1                  TNZ     GET_NEXT_PARM
         1 001261   001473 710000 1                  TRA     s:10303

     1858    10225    4                SELECT (%K_TPARM_TPDUSZ);

     1859    10226    4                IF PARMLEN ~= 1

  10226  1 001262   200057 236100                    LDQ     PARMLEN,,AUTO
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:266  
         1 001263   000001 116007                    CMPQ    1,DL
         1 001264   001105 601000 1                  TNZ     SET_INVLEN

     1860    10227    4                THEN GOTO SET_INVLEN;
     1861    10228
     1862    10229    4                IF (K$TPARM_TPDUSZ.SIZE < %K_TPDUSIZE_128) OR

  10229  1 001265   200056 471500                    LDP1    K$TPARM$,,AUTO
         1 001266   100000 236100                    LDQ     0,,PR1
         1 001267   777000 376007                    ANQ     -512,DL
         1 001270   007000 116007                    CMPQ    3584,DL
         1 001271   001344 602000 1                  TNC     SET_NEGOTIATION
         1 001272   016000 116007                    CMPQ    7168,DL
         1 001273   001344 603000 1                  TRC     SET_NEGOTIATION

     1863    10230    4                  (K$TPARM_TPDUSZ.SIZE > %K_TPDUSIZE_8192)
     1864    10231    4                THEN GOTO SET_NEGOTIATION;
     1865    10232
     1866    10233    4                IF K$TPARM_TPDUSZ.SIZE > KI$TCTX.SSN.TPDUSZ_PARM

  10233  1 001274   100000 236100                    LDQ     0,,PR1
         1 001275   000011 772000                    QRL     9
         1 001276   000777 376007                    ANQ     511,DL
         1 001277   200060 756100                    STQ     PARMLEN+1,,AUTO
         1 001300   200004 473500                    LDP3    TCTX$,,AUTO
         1 001301   300014 236100                    LDQ     12,,PR3
         1 001302   000022 772000                    QRL     18
         1 001303   200060 116100                    CMPQ    PARMLEN+1,,AUTO
         1 001304   001307 605000 1                  TPL     s:10237
         1 001305   000015 115007                    CMPA    13,DL
         1 001306   001344 600000 1                  TZE     SET_NEGOTIATION

     1867    10234    4                  AND TYPE = %K_TPDU_TYPE_CC
     1868    10235    4                THEN GOTO SET_NEGOTIATION;
     1869    10236
     1870    10237    4                KI$TCTX.SSN.TPDUSZ_PARM = K$TPARM_TPDUSZ.SIZE;

PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:267  
  10237  1 001307   100000 236100                    LDQ     0,,PR1
         1 001310   000011 772000                    QRL     9
         1 001311   000777 376007                    ANQ     511,DL
         1 001312   000000 621006                    EAX1    0,QL
         1 001313   300014 741100                    STX1    12,,PR3
         1 001314   001474 710000 1                  TRA     GET_NEXT_PARM

     1871    10238
     1872    10239
     1873    10240    4                SELECT(%K_TPARM_OPTION);

     1874    10241    4                IF PARMLEN ~= 1

  10241  1 001315   200057 235100                    LDA     PARMLEN,,AUTO
         1 001316   000001 115007                    CMPA    1,DL
         1 001317   001105 601000 1                  TNZ     SET_INVLEN

     1875    10242    4                THEN GOTO SET_INVLEN;
     1876    10243
     1877    10244    4                IF K$TPARM_OPTION.EXPD

  10244  1 001320   200056 471500                    LDP1    K$TPARM$,,AUTO
         1 001321   100000 236100                    LDQ     0,,PR1
         1 001322   001000 316007                    CANQ    512,DL
         1 001323   001330 600000 1                  TZE     s:10246

     1878    10245    4                THEN KI$TCTX.SSN.TR_FLAGS.EXPEDITED = '1'B;

  10245  1 001324   200004 473500                    LDP3    TCTX$,,AUTO
         1 001325   000002 236007                    LDQ     2,DL
         1 001326   300016 256100                    ORSQ    14,,PR3
         1 001327   001333 710000 1                  TRA     s:10248

     1879    10246    4                ELSE KI$TCTX.SSN.TR_FLAGS.EXPEDITED = '0'B;

  10246  1 001330   200004 473500                    LDP3    TCTX$,,AUTO
         1 001331   000000 236000 2                  LDQ     0
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:268  
         1 001332   300016 356100                    ANSQ    14,,PR3

     1880    10247
     1881    10248    4                IF TYPE = %K_TPDU_TYPE_CC

  10248  1 001333   200007 236100                    LDQ     TYPE,,AUTO
         1 001334   000015 116007                    CMPQ    13,DL
         1 001335   001351 601000 1                  TNZ     s:10257
         1 001336   300016 236100                    LDQ     14,,PR3
         1 001337   000001 316007                    CANQ    1,DL
         1 001340   001351 600000 1                  TZE     s:10257
         1 001341   100000 236100                    LDQ     0,,PR1
         1 001342   002000 316007                    CANQ    1024,DL
         1 001343   001351 600000 1                  TZE     s:10257

     1882    10249    4                  AND KI$TCTX.SSN.TR_FLAGS.CHKSUM ~= '0'B
     1883    10250    4                  AND K$TPARM_OPTION.CHKSUM /*means dont use chksum if set*/
     1884    10251    5                THEN DO;

  10246  1 001344                       SET_NEGOTIA* null
     1885    10252    5   SET_NEGOTIATION:  ;
     1886    10253    5                     KI$TCTX.REASON = %K_REASON_NEGOTIATION;

  10253  1 001344   200004 473500                    LDP3    TCTX$,,AUTO
         1 001345   202000 236007                    LDQ     66560,DL
         1 001346   300000 552110                    STBQ    0,'10'O,PR3

     1887    10254    5                     ALTRETURN;

  10254  1 001347   200044 221300                    LDX1  ! KL_FEPST+4,,AUTO
         1 001350   000000 702211                    TSX2  ! 0,X1

     1888    10255    5                     END;
     1889    10256
     1890    10257    4                IF ~(K$TPARM_OPTION.CHKSUM) AND KI$TCTX.SSN.CLASS=4

  10257  1 001351   100000 236100                    LDQ     0,,PR1
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:269  
         1 001352   000031 736000                    QLS     25
         1 001353   400000 376003                    ANQ     -131072,DU
         1 001354   400000 676003                    ERQ     -131072,DU
         1 001355   001365 600000 1                  TZE     s:10259
         1 001356   300016 236100                    LDQ     14,,PR3
         1 001357   000777 376003                    ANQ     511,DU
         1 001360   000004 116003                    CMPQ    4,DU
         1 001361   001365 601000 1                  TNZ     s:10259

     1891    10258    4                THEN KI$TCTX.SSN.TR_FLAGS.CHKSUM = '1'B;

  10258  1 001362   000001 236007                    LDQ     1,DL
         1 001363   300016 256100                    ORSQ    14,,PR3
         1 001364   001474 710000 1                  TRA     GET_NEXT_PARM

     1892    10259    4                ELSE KI$TCTX.SSN.TR_FLAGS.CHKSUM = '0'B;

  10259  1 001365   000004 236000 2                  LDQ     4
         1 001366   300016 356100                    ANSQ    14,,PR3
         1 001367   001474 710000 1                  TRA     GET_NEXT_PARM

     1893    10260
     1894    10261    4                SELECT(%K_TPARM_CALLED_TSAP);

     1895    10262    4                IF PARMLEN > K_TSAP_SZ

  10262  1 001370   000000 236000 xsym               LDQ     K_TSAP_SZ
         1 001371   001374 604000 1                  TMI     s:10265
         1 001372   200057 116100                    CMPQ    PARMLEN,,AUTO
         1 001373   001105 604000 1                  TMI     SET_INVLEN

     1896    10263    4                THEN GOTO SET_INVLEN;
     1897    10264
     1898    10265    4                IF TYPE = %K_TPDU_TYPE_CR

  10265  1 001374   000016 115007                    CMPA    14,DL
         1 001375   001406 601000 1                  TNZ     s:10271
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:270  

     1899    10266    5                THEN DO;

     1900    10267    5                     KI$TCTX.SSN.DST_TSAP.LEN = PARMLEN;

  10267  1 001376   200057 721100                    LXL1    PARMLEN,,AUTO
         1 001377   200004 471500                    LDP1    TCTX$,,AUTO
         1 001400   100031 741100                    STX1    25,,PR1

     1901    10268    5                     KI$TCTX.SSN.DST_TSAP.TSAP = ADDR(K$TPARM_TSAP_ID.ID)->B$TSAP;

  10268  1 001401   200056 473500                    LDP3    K$TPARM$,,AUTO
         1 001402   040100 100540                    MLR     fill='040'O
         1 001403   300000 400011                    ADSC9   0,,PR3                   cn=2,n=*X1
         1 001404   100031 400040                    ADSC9   25,,PR1                  cn=2,n=32

     1902    10269    5                     END;

  10269  1 001405   001474 710000 1                  TRA     GET_NEXT_PARM

     1903    10270    5                ELSE DO;

     1904    10271    5                     IF KI$TCTX.SSN.DST_TSAP.LEN = PARMLEN

  10271  1 001406   200004 471500                    LDP1    TCTX$,,AUTO
         1 001407   100031 236100                    LDQ     25,,PR1
         1 001410   000022 772000                    QRL     18
         1 001411   200057 116100                    CMPQ    PARMLEN,,AUTO
         1 001412   001421 601000 1                  TNZ     SET_BADTSAP

     1905    10272    5                     THEN IF ADDR(KI$TCTX.SSN.DST_TSAP.TSAP)->B$TSAP

  10272  1 001413   200057 721100                    LXL1    PARMLEN,,AUTO
         1 001414   200056 473500                    LDP3    K$TPARM$,,AUTO
         1 001415   040140 106540                    CMPC    fill='040'O
         1 001416   100031 400011                    ADSC9   25,,PR1                  cn=2,n=*X1
         1 001417   300000 400011                    ADSC9   0,,PR3                   cn=2,n=*X1
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:271  
         1 001420   001426 600000 1                  TZE     s:10277+2

  10272  1 001421                       SET_BADTSAP  null
     1906    10273    5                            = ADDR(K$TPARM_TSAP_ID.ID)->B$TSAP
     1907    10274    5                          THEN EXIT;
     1908    10275    5   SET_BADTSAP:      ;
     1909    10276    5                     KI$TCTX.REASON = %K_REASON_ADDRESS_UNKNOWN;

  10276  1 001421   200004 470500                    LDP0    TCTX$,,AUTO
         1 001422   003000 236007                    LDQ     1536,DL
         1 001423   000000 552110                    STBQ    0,'10'O,PR0

     1910    10277    5                     ALTRETURN;

  10277  1 001424   200044 221300                    LDX1  ! KL_FEPST+4,,AUTO
         1 001425   000000 702211                    TSX2  ! 0,X1
         1 001426   001474 710000 1                  TRA     GET_NEXT_PARM

     1911    10278    5                     END;
     1912    10279
     1913    10280    4                SELECT(%K_TPARM_CALLING_TSAP);

     1914    10281    4                IF PARMLEN > K_TSAP_SZ

  10281  1 001427   000000 236000 xsym               LDQ     K_TSAP_SZ
         1 001430   001433 604000 1                  TMI     s:10284
         1 001431   200057 116100                    CMPQ    PARMLEN,,AUTO
         1 001432   001105 604000 1                  TMI     SET_INVLEN

     1915    10282    4                THEN GOTO SET_INVLEN;
     1916    10283
     1917    10284    4                IF TYPE = %K_TPDU_TYPE_CR

  10284  1 001433   000016 115007                    CMPA    14,DL
         1 001434   001445 601000 1                  TNZ     s:10290

     1918    10285    5                THEN DO;
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:272  

     1919    10286    5                     KI$TCTX.SSN.SRC_TSAP.LEN = PARMLEN;

  10286  1 001435   200057 721100                    LXL1    PARMLEN,,AUTO
         1 001436   200004 471500                    LDP1    TCTX$,,AUTO
         1 001437   100020 741100                    STX1    16,,PR1

     1920    10287    5                     KI$TCTX.SSN.SRC_TSAP.TSAP = ADDR(K$TPARM_TSAP_ID.ID)->B$TSAP;

  10287  1 001440   200056 473500                    LDP3    K$TPARM$,,AUTO
         1 001441   040100 100540                    MLR     fill='040'O
         1 001442   300000 400011                    ADSC9   0,,PR3                   cn=2,n=*X1
         1 001443   100020 400040                    ADSC9   16,,PR1                  cn=2,n=32

     1921    10288    5                     END;

  10288  1 001444   001474 710000 1                  TRA     GET_NEXT_PARM

     1922    10289    5                ELSE DO;

     1923    10290    5                     IF KI$TCTX.SSN.SRC_TSAP.LEN = PARMLEN

  10290  1 001445   200004 471500                    LDP1    TCTX$,,AUTO
         1 001446   100020 236100                    LDQ     16,,PR1
         1 001447   000022 772000                    QRL     18
         1 001450   200057 116100                    CMPQ    PARMLEN,,AUTO
         1 001451   001474 601000 1                  TNZ     GET_NEXT_PARM

     1924    10291    5                     THEN IF ADDR(KI$TCTX.SSN.SRC_TSAP.TSAP)->B$TSAP

  10291  1 001452   200057 721100                    LXL1    PARMLEN,,AUTO
         1 001453   200056 473500                    LDP3    K$TPARM$,,AUTO
         1 001454   040140 106540                    CMPC    fill='040'O
         1 001455   100020 400011                    ADSC9   16,,PR1                  cn=2,n=*X1
         1 001456   300000 400011                    ADSC9   0,,PR3                   cn=2,n=*X1
         1 001457   001461 600000 1                  TZE     s:10294+1

PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:273  
     1925    10292    5                            = ADDR(K$TPARM_TSAP_ID.ID)->B$TSAP
     1926    10293    5                          THEN EXIT;
     1927    10294    5                          ELSE GOTO SET_BADTSAP;

  10294  1 001460   001421 710000 1                  TRA     SET_BADTSAP
         1 001461   001474 710000 1                  TRA     GET_NEXT_PARM

     1928    10295    5                     END;
     1929    10296
     1930    10297    4                SELECT(%K_TPARM_VERSION);

     1931    10298    4                IF PARMLEN ~= 1

  10298  1 001462   200057 235100                    LDA     PARMLEN,,AUTO
         1 001463   000001 115007                    CMPA    1,DL
         1 001464   001105 601000 1                  TNZ     SET_INVLEN

     1932    10299    4                THEN GOTO SET_INVLEN;
     1933    10300
     1934    10301    4                KI$TCTX.VERS = K$TPARM_VERSION.VERS;

  10301  1 001465   200056 471500                    LDP1    K$TPARM$,,AUTO
         1 001466   200004 473500                    LDP3    TCTX$,,AUTO
         1 001467   100000 236100                    LDQ     0,,PR1
         1 001470   000011 736000                    QLS     9
         1 001471   300002 552120                    STBQ    2,'20'O,PR3
         1 001472   001474 710000 1                  TRA     GET_NEXT_PARM

     1935    10302
     1936    10303    4                SELECT(%K_TPARM_SECURITY, %K_TPARM_ALT_CLASS,

  10303  1 001473   001474 710000 1                  TRA     GET_NEXT_PARM

     1937    10304    4                  %K_TPARM_ACK_TIME, %K_TPARM_THROUGHPUT,
     1938    10305    4                  %K_TPARM_ERR_RATE, %K_TPARM_PRIORITY,
     1939    10306    4                  %K_TPARM_TRANSIT_DELAY, %K_TPARM_REASS_TIME);
     1940    10307
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:274  
     1941    10308        /* The NBS Implmentation Agreements says to ignore unknown parameters.
     1942    10309        */
     1943    10310
     1944    10311    4                SELECT (ELSE);

     1945    10312
     1946    10313    4                END/*do select*/;

  10306  1 001474                       GET_NEXT_PA* null
     1947    10314
     1948    10315    3   GET_NEXT_PARM: ;
     1949    10316    3      PARMSIZE = PARMSIZE - PARMLEN - 2;

  10316  1 001474   200012 236100                    LDQ     PARMSIZE,,AUTO
         1 001475   200057 136100                    SBLQ    PARMLEN,,AUTO
         1 001476   000002 136007                    SBLQ    2,DL
         1 001477   200012 756100                    STQ     PARMSIZE,,AUTO

     1950    10317    3      PARM$ =PINCRC(PARM$,PARMLEN+2);

  10317  1 001500   200057 236100                    LDQ     PARMLEN,,AUTO
         1 001501   000020 736000                    QLS     16
         1 001502   400000 036007                    ADLQ    -131072,DL
         1 001503   200011 036100                    ADLQ    PARM$,,AUTO
         1 001504   200011 756100                    STQ     PARM$,,AUTO

     1951    10318    3           END/*do while parmsize > 1*/;

  10318  1 001505   200012 235100                    LDA     PARMSIZE,,AUTO
         1 001506   000001 115007                    CMPA    1,DL
         1 001507   001070 605400 1                  TPNZ    s:10176

     1952    10319
     1953    10320    2      IF PARMSIZE < 0

  10320  1 001510   000000 115003                    CMPA    0,DU
         1 001511   001522 605000 1                  TPL     s:10327
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:275  

     1954    10321    3      THEN DO;

     1955    10322    3           KI$TCTX.REASON = %K_REASON_PROTOCOL;

  10322  1 001512   200004 470500                    LDP0    TCTX$,,AUTO
         1 001513   205000 236007                    LDQ     68096,DL
         1 001514   000000 552110                    STBQ    0,'10'O,PR0

     1956    10323    3           KI$TCTX.ERR = %K_ERROR_INVPARM_LEN;

  10323  1 001515   200004 470500                    LDP0    TCTX$,,AUTO
         1 001516   000343 236007                    LDQ     227,DL
         1 001517   000000 552104                    STBQ    0,'04'O,PR0

     1957    10324    3           ALTRETURN;

  10324  1 001520   200044 221300                    LDX1  ! KL_FEPST+4,,AUTO
         1 001521   000000 702211                    TSX2  ! 0,X1

     1958    10325    3           END;
     1959    10326
     1960    10327    2      RETURN;

  10327  1 001522   200044 221300                    LDX1  ! KL_FEPST+4,,AUTO
         1 001523   000001 702211                    TSX2  ! 1,X1

(unnamed)
 Sect OctLoc
   0     000   110114 120101   104115 111116                                    HLPADMIN

(unnamed)
 Sect OctLoc
   2     000   777777 777775   000000 006000   777777 777773   777777 777767    ................
   2     004   777777 777776   000000 000016   000000 006000   000005 006000    ................
     1961    10328
     1962    10329    2   END I$CHK_PARMS;
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:276  
     1963    10330    1   END KIT$RECV;
     1964    10331        %EOD;

PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:277  
--  Include file information  --

   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KI_MACROS_C.:E05TOU  is referenced.
   K_INTERFACE_M.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   K_TRANSPORT_E.:E05TOU  is referenced.
   K_TRANSPORT_M.:E05TOU  is referenced.
   K_SUBS_C.:E05TOU  is referenced.
   K$RWPARM.:E05TOU  is referenced.
      No diagnostics issued in procedure KIT$RECV.
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:278  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @K$RWPARM                 45-0-0/c CHAR(34)    r     1 B$TPARM
    13-0-0/w PTR         r     1 DATA$                     14-0-0/w UBIN        r     1 DATASIZE
    *0-0-0/d STRC(1404)  r     1 K$RWPARM                  45-0-0/c STRC(306)   r     1 K$TPARM
    56-0-0/w PTR         r     1 K$TPARM$                  21-0-0/w STRC(540)   r     1 K@TCTX
    40-0-0/w STRC(126)   r     1 KL_FEPST                  10-0-0/w UBIN        r     1 LI
    11-0-0/w PTR         r     1 PARM$                     57-0-0/w SBIN        r     1 PARMLEN
    12-0-0/w SBIN        r     1 PARMSIZE                   5-0-0/w UBIN        r     1 TCTX#
     4-0-0/w PTR         r     1 TCTX$                      6-0-0/w UBIN        r     1 TEMP
    15-0-0/w PTR         r     1 TPDU_NR$                   7-0-0/w UBIN        r     1 TYPE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 KIT_DISCARDED_TPDUS        0-0-0/w UBIN        r     1 KIT_DUMP_FEP
     0-0-0/w UBIN        r     1 KIT_ERROR_SNAP             0-0-0/w UBIN        r     1 KIT_OSI_SNAP
     0-0-0/b BIT (72)    r     1 KIT_RECV_LOCK              0-0-0/w PTR         r     1 KI_TCTX$$
     0-0-0/w UBIN        r     1 KI_TCTX_MAX#
     0-0-0/w SBIN        r     1 K_TPDU_SIZE(0:15)
     0-0-0/w SBIN        r     1 K_TPDU_SIZE_EXT(0:15)
     0-0-0/w UBIN        r     1 K_TSAP_SZ

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 B$NEXT                     0-0-0/c STRC(198)   r     1 B$NSAP
     0-0-0/w STRC(63)    r     1 B$TPDU_CR                  0-0-0/w STRC(63)    r     1 B$TPDU_DR
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:279  
     0-0-0/w STRC(45)    r     1 B$TPDU_DT                  0-0-0/w STRC(45)    r     1 B$TPDU_ER
     0-0-0/w STRC(63)    r     1 B$TPDU_GENERIC             0-0-0/c ACHR        r     1 B$TSAP
     0-0-0/c ACHR        r     1 CHRBSD                     0-0-0/c STRC(27)    r     1 K$TPARM_CLR_INFO
     0-0-0/w STRC        r     1 K$TPARM_CP6_OPTIONS        0-0-0/c ACHR        r     1 K$TPARM_GENERIC
     0-0-0/w STRC(27)    r     1 K$TPARM_OPTION             0-0-0/w STRC(27)    r     1 K$TPARM_TPDUSZ
     0-0-0/w STRC(306)   r     1 K$TPARM_TSAP_ID            0-0-0/w STRC(27)    r     1 K$TPARM_VERSION
     0-0-0/w STRC(1620)  r     1 KI$TCTX
     0-0-0/w PTR         r     1 KI$TCTX$(0:0)


   Procedure KIT$RECV requires 852 words for executable code.
   Procedure KIT$RECV requires 52 words of local(AUTO) storage.
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:280  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:281  
          MINI XREF LISTING

B$NEXT
      9285**DCL      9486<<ASSIGN   9486>>ASSIGN
B$NSAP.ADDRESS_N
      9280**DCL      9281--REDEF
B$NSAP.LEN
      9252**DCL      9564>>ASSIGN   9570>>ASSIGN
B$TPARM IN PROCEDURE I$CHK_PARMS
      9848**DCL     10176<<ASSIGN
B$TPDU_CR
      8998**DCL      9499--IF
B$TPDU_CR.CLASS
      9031**DCL      9518>>ASSIGN   9537>>ASSIGN   9627>>ASSIGN
B$TPDU_CR.CLASS_2_FLOW
      9044**DCL      9558>>IF
B$TPDU_CR.EXT_FMT_FLAG
      9039**DCL      9556>>ASSIGN   9653>>ASSIGN
B$TPDU_CR.SRC_REF
      9024**DCL      9520>>ASSIGN   9555>>ASSIGN   9636>>ASSIGN
B$TPDU_DR.REASON
      9090**DCL      9686>>ASSIGN
B$TPDU_DT.DST_REF
      9166**DCL      9378>>ASSIGN
B$TPDU_ER.REJECT_CAUSE
      9129**DCL      9714>>ASSIGN
B$TPDU_GENERIC.LI
      8938**DCL      9369>>ASSIGN
B$TPDU_GENERIC.TYPE
      8948**DCL      9368>>ASSIGN
B$TSAP IN PROCEDURE I$CHK_PARMS
     10165**DCL     10268>>ASSIGN  10272>>IF      10272>>IF      10287>>ASSIGN  10291>>IF      10291>>IF
CHECK_AK IN PROCEDURE I$CHK_PARMS
     10193**LABEL   10206--GOTO
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:282  
CHECK_SNAP_N_RETURN
      9752**LABEL    9590--CALLALT  9660--CALLALT  9733--CALLALT  9741--CALLALT
CHRBSD
      9286**DCL      9565<<ASSIGN   9565>>ASSIGN   9571<<ASSIGN   9571>>ASSIGN
DATA$
      7855**DCL      9370<<ASSIGN   9403>>ASSIGN
DATASIZE
      7856**DCL      9371<<ASSIGN   9404>>ASSIGN
DISCARD_TPDU
      9667**LABEL    9380--GOTO     9384--GOTO
FIND_PARMS
      9390**LABEL    9374--GOTO
GET_NEXT_PARM IN PROCEDURE I$CHK_PARMS
     10306**LABEL   10191--GOTO    10203--GOTO    10210--GOTO    10214--GOTO
HFC$LOCK
      7527**DCL-ENT  9505--CALL
HFC$UNLOCK
      7527**DCL-ENT  9515--CALL     9575--CALL
I$CHECK_FEP_DUMP IN PROCEDURE I$CHECK_SNAP
      9793**ENTRY    9769--CALL
I$CHECK_SNAP
      9787**PROC     9463--CALL     9667--CALL     9698--CALL     9752--CALL
I$CHK_PARMS
      9808**PROC     9541--CALL     9629--CALL     9685--CALL
K$RWPARM
      7551**DCL        10--PROC     9461<>CALL     9475<>CALL     9530<>CALL     9590<>CALL     9604<>CALL
      9610<>CALL     9660<>CALL     9696<>CALL     9733<>CALL     9741<>CALL     9749<>CALL
K$RWPARM.BLKREC
      7577**DCL      7602--REDEF
K$RWPARM.BLKREC.BLKU#
      7578**DCL      7580--REDEF
K$RWPARM.BLKREC.RECU#
      7590**DCL      7592--REDEF
K$RWPARM.DST_ADDR$
      7802**DCL      9568>>IF       9570>>ASSIGN   9571>>ASSIGN
K$RWPARM.DVE.DVBYTE.VFC
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:283  
      7617**DCL      7618--REDEF
K$RWPARM.DVE.EOMCHAR
      7625**DCL      7629--REDEF
K$RWPARM.ERR
      7689**DCL      7694--REDEF    9465>>IF       9468>>IF       9477>>IF       9488>>IF
K$RWPARM.FC
      7653**DCL      7654--REDEF
K$RWPARM.FEX
      7735**DCL      9519>>ASSIGN   9550>>ASSIGN   9796>>ASSIGN
K$RWPARM.FLDID
      7835**DCL      7836--REDEF
K$RWPARM.FPT$
      7716**DCL      7723--REDEF
K$RWPARM.FUNCTION
      7730**DCL      9356>>IF       9356>>IF       9455<<ASSIGN   9457<<ASSIGN   9522>>IF       9582>>IF
      9588<<ASSIGN   9658<<ASSIGN   9689<<ASSIGN   9732<<ASSIGN   9740<<ASSIGN   9747<<ASSIGN
K$RWPARM.KEYTYPE
      7842**DCL      7843--REDEF
K$RWPARM.LOCAL_FEP
      7782**DCL      9551>>ASSIGN
K$RWPARM.MSG$
      7552**DCL      7558--REDEF
K$RWPARM.MSGID
      7664**DCL      7669--REDEF
K$RWPARM.MSGIDXT
      7677**DCL      7681--REDEF
K$RWPARM.MSGSZ
      7559**DCL      9528<<ASSIGN   9600<<ASSIGN
K$RWPARM.ORG
      7813**DCL      7814--REDEF
K$RWPARM.QOS
      7794**DCL      9549>>ASSIGN
K$RWPARM.SHDR$
      7745**DCL      9403<<ASSIGN
K$RWPARM.SHDRSZ
      7749**DCL      9404<<ASSIGN   9526<<ASSIGN   9599>>ASSIGN   9602<<ASSIGN
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:284  
K$RWPARM.SRC_ADDR$
      7797**DCL      9562>>IF       9564>>ASSIGN   9565>>ASSIGN
K$RWPARM.TCTX#
      7787**DCL      9386<<ASSIGN   9535<<ASSIGN   9691<<ASSIGN
K$RWPARM.TCTX$
      7723**DCL      9459<<ASSIGN   9525<<ASSIGN   9587<<ASSIGN   9657<<ASSIGN   9690<<ASSIGN   9727<<ASSIGN
K$RWPARM.THDR$
      7753**DCL      8937--IMP-PTR  8998--IMP-PTR  9068--IMP-PTR  9111--IMP-PTR  9151--IMP-PTR  9368>>ASSIGN
      9369>>ASSIGN   9370>>ASSIGN   9378>>ASSIGN   9397>>ASSIGN   9518>>ASSIGN   9520>>ASSIGN   9537>>ASSIGN
      9555>>ASSIGN   9556>>ASSIGN   9558>>IF       9627>>ASSIGN   9636>>ASSIGN   9653>>ASSIGN   9686>>ASSIGN
      9714>>ASSIGN
K$RWPARM.THDRSZ
      7757**DCL      7761--REDEF    9371>>ASSIGN   9499>>IF
K$RWPARM.UHDRSZ
      7707**DCL      9527<<ASSIGN   9601<<ASSIGN
K$RWPARM.VDOFLGS
      7815**DCL      7826--REDEF
K$TPARM IN PROCEDURE I$CHK_PARMS
      9828**DCL      9848--REDEF   10173--ASSIGN
K$TPARM.CODE IN PROCEDURE I$CHK_PARMS
      9832**DCL     10186>>DOSELCT 10224>>DOSELCT
K$TPARM.LEN IN PROCEDURE I$CHK_PARMS
      9838**DCL     10177>>ASSIGN
K$TPARM$ IN PROCEDURE I$CHK_PARMS
      9850**DCL      9933--IMP-PTR  9972--IMP-PTR 10019--IMP-PTR 10056--IMP-PTR 10092--IMP-PTR 10132--IMP-PTR
     10173<<ASSIGN  10209>>ASSIGN  10229>>IF      10229>>IF      10233>>IF      10237>>ASSIGN  10244>>IF
     10248>>IF      10257>>IF      10268>>ASSIGN  10272>>IF      10287>>ASSIGN  10291>>IF      10301>>ASSIGN
K$TPARM_CLR_INFO.ERR IN PROCEDURE I$CHK_PARMS
     10156**DCL     10209>>ASSIGN
K$TPARM_CLR_INFO.PVALUE IN PROCEDURE I$CHK_PARMS
     10149**DCL     10156--REDEF
K$TPARM_CP6_OPTIONS.CODE
      9207**DCL      9729>>IF       9737>>IF       9745>>IF
K$TPARM_GENERIC IN PROCEDURE I$CHK_PARMS
      9915**DCL     10176>>ASSIGN
K$TPARM_OPTION.CHKSUM IN PROCEDURE I$CHK_PARMS
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:285  
      9989**DCL     10248>>IF      10257>>IF
K$TPARM_OPTION.EXPD IN PROCEDURE I$CHK_PARMS
      9995**DCL     10244>>IF
K$TPARM_TPDUSZ.SIZE IN PROCEDURE I$CHK_PARMS
      9946**DCL     10229>>IF      10229>>IF      10233>>IF      10237>>ASSIGN
K$TPARM_TSAP_ID.ID IN PROCEDURE I$CHK_PARMS
     10034**DCL     10268--ASSIGN  10272--IF      10287--ASSIGN  10291--IF
K$TPARM_VERSION.VERS IN PROCEDURE I$CHK_PARMS
     10069**DCL     10301>>ASSIGN
K@TCTX
      7936**DCL      9508<<ASSIGN   9525--ASSIGN
K@TCTX.DST_REF
      7963**DCL      9520<<ASSIGN
K@TCTX.ERR
      7957**DCL      9512<<ASSIGN   9544<<ASSIGN
K@TCTX.NODE
      7943**DCL      9519<<ASSIGN
K@TCTX.REASON
      7951**DCL      9511<<ASSIGN   9543<<ASSIGN
K@TCTX.SSN.CLASS
      8125**DCL      9518<<ASSIGN
K@TCTX.SSN.TPDUSIZE
      8095**DCL      8096--REDEF
K@TCTX.SSN.TR_FLAGS.OSI
      8157**DCL      9523<<ASSIGN
KI$TCTX
      8363**DCL      9459--ASSIGN   9587--ASSIGN   9657--ASSIGN   9690--ASSIGN   9727--ASSIGN
KI$TCTX.DST_REF
      8390**DCL      9555<<ASSIGN   9636<<ASSIGN
KI$TCTX.ERR
      8384**DCL      9544>>ASSIGN  10199<<ASSIGN  10209<<ASSIGN  10323<<ASSIGN
KI$TCTX.FLOW_CONTROLLED
      8443**DCL      9432<<ASSIGN
KI$TCTX.INBOUND
      8439**DCL      9553<<ASSIGN
KI$TCTX.LOCAL_FEP
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:286  
      8406**DCL      9551<<ASSIGN
KI$TCTX.NODE
      8370**DCL      9550<<ASSIGN
KI$TCTX.REASON
      8378**DCL      9543>>ASSIGN   9686<<ASSIGN   9714<<ASSIGN  10182<<ASSIGN  10198<<ASSIGN  10253<<ASSIGN
     10276<<ASSIGN  10322<<ASSIGN
KI$TCTX.RECV_EXPD
      8469**DCL      9484--ASSIGN
KI$TCTX.RECV_NEXT
      8461**DCL      9483--ASSIGN
KI$TCTX.REMOTE_TERM
      8431**DCL      9703<<ASSIGN
KI$TCTX.SESSION_FLOW_STOPPED
      8452**DCL      9731<<ASSIGN   9739<<ASSIGN
KI$TCTX.SRC_REF
      8398**DCL      9534>>ASSIGN   9691>>ASSIGN
KI$TCTX.SSN.CLASS
      8552**DCL      9537<<ASSIGN   9558>>IF       9627<<ASSIGN   9637>>IF       9643>>IF       9648>>IF
     10257>>IF
KI$TCTX.SSN.DST_NSAP
      8789**DCL      9571--ASSIGN
KI$TCTX.SSN.DST_NSAP.ADDRESS_N
      8819**DCL      8820--REDEF
KI$TCTX.SSN.DST_TSAP.LEN
      8689**DCL     10267<<ASSIGN  10271>>IF
KI$TCTX.SSN.DST_TSAP.TSAP
      8697**DCL     10268<<ASSIGN  10272--IF
KI$TCTX.SSN.QOS
      8546**DCL      9549<<ASSIGN
KI$TCTX.SSN.SCID
      8623**DCL      9552<<ASSIGN
KI$TCTX.SSN.SRC_NSAP
      8729**DCL      9565--ASSIGN
KI$TCTX.SSN.SRC_NSAP.ADDRESS_N
      8759**DCL      8760--REDEF
KI$TCTX.SSN.SRC_TSAP.LEN
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:287  
      8647**DCL     10286<<ASSIGN  10290>>IF
KI$TCTX.SSN.SRC_TSAP.TSAP
      8655**DCL     10287<<ASSIGN  10291--IF
KI$TCTX.SSN.TPDUSIZE
      8522**DCL      8523--REDEF
KI$TCTX.SSN.TPDUSZ_PARM
      8523**DCL      9539<<ASSIGN  10233>>IF      10237<<ASSIGN
KI$TCTX.SSN.TR_FLAGS.CHKSUM
      8616**DCL      9650<<ASSIGN  10248>>IF      10258<<ASSIGN  10259<<ASSIGN
KI$TCTX.SSN.TR_FLAGS.CLASS_2_FLOW
      8590**DCL      9560<<ASSIGN   9645<<ASSIGN
KI$TCTX.SSN.TR_FLAGS.EXPEDITED
      8604**DCL      9640<<ASSIGN  10245<<ASSIGN  10246<<ASSIGN
KI$TCTX.SSN.TR_FLAGS.EXTENDED
      8597**DCL      9390>>IF       9556<<ASSIGN   9639<<ASSIGN   9653<<ASSIGN
KI$TCTX.SSN.TR_FLAGS.OSI
      8584**DCL      9450>>IF       9584<<ASSIGN   9631>>IF       9693>>IF       9724>>IF       9789>>IF
KI$TCTX.SSN_CRDT
      8488**DCL      9454<<ASSIGN   9454>>ASSIGN
KI$TCTX.STATE
      8364**DCL      9429>>IF       9431<<ASSIGN   9442>>IF       9444>>IF       9585<<ASSIGN   9606<<ASSIGN
      9634>>IF       9655<<ASSIGN   9702<<ASSIGN
KI$TCTX.VERS
      8411**DCL     10301<<ASSIGN
KI$TCTX$
      8361**DCL      9382>>ASSIGN
KIS$OSI_RECV
      9305**DCL-ENT  9461--CALL     9590--CALL     9660--CALL     9696--CALL     9733--CALL     9741--CALL
      9749--CALL
KIS$RECV
      9306**DCL-ENT  9475--CALL     9610--CALL
KIS$REP_TERM
      9307**DCL-ENT  9694--CALL
KIT$GETTCTX
      9308**DCL-ENT  9509--CALL
KIT$RELTCTX
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:288  
      9309**DCL-ENT  9545--CALL     9704--CALL
KIT$SEND_CC
      9310**DCL-ENT  9604--CALL
KIT$SEND_DR
      9311**DCL-ENT  9530--CALL
KIT_DISCARDED_TPDUS
      9293**DCL      9669<<ASSIGN   9669>>ASSIGN
KIT_DUMP_FEP
      9301**DCL      9794>>IF
KIT_ERROR_SNAP
      9299**DCL      9789>>IF
KIT_OSI_SNAP
      9300**DCL      9789>>IF
KIT_RECV_LOCK
      9289**DCL      9505<>CALL     9515<>CALL     9575<>CALL
KI_TCTX$$
      9288**DCL      8361--IMP-PTR  9382>>ASSIGN
KI_TCTX_MAX#
      9291**DCL      9379>>IF
KL_FEPST
      8338**DCL      9798<>CALL     9798--CALL
KL_FEPST.FCN
      8339**DCL      9797<<ASSIGN
KL_FEPST.FEP
      8341**DCL      9796<<ASSIGN
KUB$WRITE
      9312**DCL-ENT  9798--CALL
K_TPDU_SIZE
      9295**DCL      9393>>ASSIGN
K_TPDU_SIZE_EXT
      9296**DCL      9395>>ASSIGN
K_TSAP_SZ IN PROCEDURE I$CHK_PARMS
     10168**DCL     10262>>IF      10281>>IF
LI
      7852**DCL      9369<<ASSIGN   9370>>ASSIGN   9371>>ASSIGN   9398>>ASSIGN
LOG_BAD_TPDU
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:289  
      9667**LABEL    9440--GOTO     9446--GOTO     9500--GOTO     9531--GOTO     9629--CALLALT  9632--GOTO
      9685--CALLALT  9725--GOTO     9758--GOTO
PARM$
      7853**DCL      9397<<ASSIGN   9729>>IF       9737>>IF       9745>>IF      10176>>ASSIGN  10317<<ASSIGN
     10317>>ASSIGN
PARMLEN IN PROCEDURE I$CHK_PARMS
      9851**DCL     10165--IMP-SIZ 10177<<ASSIGN  10179>>IF      10226>>IF      10241>>IF      10262>>IF
     10267>>ASSIGN  10268>>ASSIGN  10271>>IF      10272>>IF      10272>>IF      10281>>IF      10286>>ASSIGN
     10287>>ASSIGN  10290>>IF      10291>>IF      10291>>IF      10298>>IF      10316>>ASSIGN  10317>>ASSIGN
PARMSIZE
      7854**DCL      9398<<ASSIGN   9915--IMP-SIZ 10175>>DOWHILE 10176>>ASSIGN  10179>>IF      10316<<ASSIGN
     10316>>ASSIGN  10320>>IF
REPORT_TDISCONNECT
      9686**LABEL    9715--GOTO
RETURN_TPDU_DR2
      9512**LABEL    9546--GOTO
SC_BADFNC
      9313**DCL-ENT  9358--CALL
SC_PRTCL_SNAP
      9314**DCL-ENT  9614--CALL     9768--CALL     9791--CALL
SET_BADTSAP IN PROCEDURE I$CHK_PARMS
     10272**LABEL   10294--GOTO
SET_INVLEN IN PROCEDURE I$CHK_PARMS
     10173**LABEL   10227--GOTO    10242--GOTO    10263--GOTO    10282--GOTO    10299--GOTO
SET_INVPARM IN PROCEDURE I$CHK_PARMS
     10194**LABEL   10222--GOTO
SET_NEGOTIATION IN PROCEDURE I$CHK_PARMS
     10246**LABEL   10231--GOTO    10235--GOTO
TAKE_QDP_SNAP
      9614**LABEL    9610--CALLALT
TCTX#
      7849**DCL      9378<<ASSIGN   9379>>IF       9379>>IF       9382>>ASSIGN   9386>>ASSIGN   9534<<ASSIGN
      9535>>ASSIGN   9694<>CALL
TCTX$
      7848**DCL      8363--IMP-PTR  9382<<ASSIGN   9383>>IF       9390>>IF       9429>>IF       9431>>ASSIGN
      9432>>ASSIGN   9442>>IF       9444>>IF       9450>>IF       9454>>ASSIGN   9454>>ASSIGN   9459>>ASSIGN
PL6.E3A0      #005=KIT$RECV File=KIT$TRANSPORT.:E05TSI                           WED 07/30/97 00:44 Page:290  
      9483>>ASSIGN   9484>>ASSIGN   9509<>CALL     9534>>ASSIGN   9537>>ASSIGN   9539>>ASSIGN   9543>>ASSIGN
      9544>>ASSIGN   9545<>CALL     9549>>ASSIGN   9550>>ASSIGN   9551>>ASSIGN   9552>>ASSIGN   9553>>ASSIGN
      9555>>ASSIGN   9556>>ASSIGN   9558>>IF       9560>>ASSIGN   9565>>ASSIGN   9571>>ASSIGN   9584>>ASSIGN
      9585>>ASSIGN   9587>>ASSIGN   9606>>ASSIGN   9627>>ASSIGN   9631>>IF       9634>>IF       9636>>ASSIGN
      9637>>IF       9639>>ASSIGN   9640>>ASSIGN   9643>>IF       9645>>ASSIGN   9648>>IF       9650>>ASSIGN
      9653>>ASSIGN   9655>>ASSIGN   9657>>ASSIGN   9686>>ASSIGN   9690>>ASSIGN   9691>>ASSIGN   9693>>IF
      9702>>ASSIGN   9703>>ASSIGN   9704<>CALL     9714>>ASSIGN   9724>>IF       9727>>ASSIGN   9731>>ASSIGN
      9739>>ASSIGN   9789>>IF      10182>>ASSIGN  10198>>ASSIGN  10199>>ASSIGN  10209>>ASSIGN  10233>>IF
     10237>>ASSIGN  10245>>ASSIGN  10246>>ASSIGN  10248>>IF      10253>>ASSIGN  10257>>IF      10258>>ASSIGN
     10259>>ASSIGN  10267>>ASSIGN  10268>>ASSIGN  10271>>IF      10272>>IF      10276>>ASSIGN  10286>>ASSIGN
     10287>>ASSIGN  10290>>IF      10291>>IF      10301>>ASSIGN  10322>>ASSIGN  10323>>ASSIGN
TEMP
      7850**DCL      9286--IMP-SIZ  9393<<ASSIGN   9395<<ASSIGN   9397>>ASSIGN   9398>>ASSIGN   9564<<ASSIGN
      9565>>ASSIGN   9565>>ASSIGN   9570<<ASSIGN   9571>>ASSIGN   9571>>ASSIGN   9599<<ASSIGN   9608>>IF
TPDU_NR
      7858**DCL      7859--REDEF
TPDU_NR$
      7857**DCL      9483<<ASSIGN   9484<<ASSIGN   9486>>ASSIGN   9486>>ASSIGN
TYPE
      7851**DCL      9368<<ASSIGN   9373>>IF       9393>>ASSIGN   9395>>ASSIGN   9407>>DOCASE   9435>>IF
      9439>>IF       9452>>IF       9482>>IF      10195>>IF      10213>>IF      10221>>IF      10221>>IF
     10233>>IF      10248>>IF      10265>>IF      10284>>IF

PL6.E3A0      #006=KIT$REPDISC File=KIT$TRANSPORT.:E05TSI                        WED 07/30/97 00:45 Page:291  
     1965        1        /*M* KIT$REPDISC - To terminate a CP-6 transport connection   */
     1966        2        /*T***********************************************************/
     1967        3        /*T*                                                         */
     1968        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1969        5        /*T*                                                         */
     1970        6        /*T***********************************************************/
     1971        7        /*X* PLM=3,IND=5,ENU=0,ECU=0   */
     1972        8
     1973        9        KIT$REPDISC: PROC(NODE);
     1974       10
     1975       11                                                /* Include files                      */
     1976       12        %INCLUDE K$RWPARM;
     1977      398        %INCLUDE K_ADDRESS_M;
     1978      901        %INCLUDE K_INTERFACE_M;
     1979     1310        %INCLUDE K_TRANSPORT_E;
     1980     1635        %INCLUDE KI_MACROS_C;
     1981     2243        %INCLUDE HF_LOCK_C;
     1982     2257
     1983     2258                                                /* Parameter definitions              */
     1984     2259    1   DCL NODE UBIN;
     1985     2260
     1986     2261                                                /* Automatic data                     */
     1987     2262    1   DCL TCTX$ PTR;
     1988     2263    1   DCL TCTX# UBIN AUTO;
     1989     2264    1   DCL REMOTE_NODE UBIN;
     1990     2265    1   DCL STATE UBIN;
     1991     2266        %K$RWPARM (NAME=K$RWPARM, STCLASS=AUTO);
     1992     2582
     1993     2583                                                /* Based data                         */
     1994     2584    1   DCL KI$TCTX$(0:0) PTR BASED(KI_TCTX$$);
     1995     2585        %KI$TCTX(NAME=KI$TCTX, STCLASS="BASED(TCTX$)");
     1996     3143
     1997     3144                                                /* External Data                      */
     1998     3145    1   DCL KI_TCTX$$ PTR SYMREF;
     1999     3146    1   DCL KI_TCTX_USE# UBIN SYMREF;
     2000     3147    1   DCL KIT_RECV_LOCK BIT(72) SYMREF;
     2001     3148    1   DCL KI_TCTX_MAX# UBIN SYMREF;
PL6.E3A0      #006=KIT$REPDISC File=KIT$TRANSPORT.:E05TSI                        WED 07/30/97 00:45 Page:292  
     2002     3149    1   DCL KIT_OSI_SNAP UBIN SYMREF;
     2003     3150        %K$RWPARM (NAME=K_RWPARM_CON, STCLASS=SYMREF);
     2004     3466
     2005     3467                                                /* Entry point references             */
     2006     3468    1   DCL KIS$REP_DISC ENTRY(1);
     2007     3469    1   DCL KIS$OSI_RECV ENTRY(1) ALTRET;
     2008     3470    1   DCL KIT$RELTCTX ENTRY(1) ALTRET;
     2009     3471    1   DCL SC_PRTCL_SNAP ENTRY CONV(2,0);
     2010     3472
     2011     3473        %EJECT;
PL6.E3A0      #006=KIT$REPDISC File=KIT$TRANSPORT.:E05TSI                        WED 07/30/97 00:45 Page:293  
     2012     3474        /*F* NAME: KIT$REPDISC
     2013     3475
     2014     3476        KIT$REPDISC is called from KIN$NODECHG to report that the node
     2015     3477        specified by the input parameter, NODE, has disconnected.
     2016     3478
     2017     3479        We run through the TCTXs looking for one that has TCTX.NODE or TCTX.LOCAL_FEP
     2018     3480        equal to that specified in RWPARM.FEX.
     2019     3481
     2020     3482        If we find a match on node and the connection is OSI, it is the local
     2021     3483        fep that has our intermediate context block that has gone down, so
     2022     3484        we call OSI Session specify the TCTX# in RWPARM.
     2023     3485
     2024     3486        If we find a match on node for a CP-6 connection we call CP-6 Session
     2025     3487        always specifying the node number of the remote node.
     2026     3488
     2027     3489        */
     2028     3490
     2029     3491    1      TCTX# = 1;
     2030     3492
     2031     3493    2      DO WHILE ( TCTX# <= KI_TCTX_MAX# );
     2032     3494    2           TCTX$ = KI$TCTX$(TCTX#);
     2033     3495
     2034     3496    2           IF (NODE = KI$TCTX.NODE    OR   NODE = KI$TCTX.LOCAL_FEP)
     2035     3497    2             AND (KI$TCTX.STATE > %KI_TSTATE_CLOSED)
     2036     3498    3           THEN DO;
     2037     3499                     %LOCK (G=KIT_RECV_LOCK);
     2038     3502
     2039     3503    3                K$RWPARM = K_RWPARM_CON;
     2040     3504    3                K$RWPARM.FUNCTION = %K_TDISCONNECT_IND;
     2041     3505    3                K$RWPARM.TCTX$ = ADDR(KI$TCTX);
     2042     3506    3                K$RWPARM.TCTX# = KI$TCTX.SRC_REF;
     2043     3507
     2044     3508    3                STATE = KI$TCTX.STATE;
     2045     3509    3                KI$TCTX.STATE = %KI_TSTATE_CLOSING;
     2046     3510    3                KI$TCTX.ERR = %K_ERROR_TERM;
     2047     3511
     2048     3512    3                IF KI$TCTX.SSN.TR_FLAGS.OSI
PL6.E3A0      #006=KIT$REPDISC File=KIT$TRANSPORT.:E05TSI                        WED 07/30/97 00:45 Page:294  
     2049     3513    4                THEN DO;
     2050     3514    4                     IF (STATE = %KI_TSTATE_WBCL)
     2051     3515    4                       OR (STATE = %KI_TSTATE_CLOSING)
     2052     3516    4                     THEN GOTO UNLOCK_GATE;
     2053     3517
     2054     3518    4                     IF (STATE = %KI_TSTATE_WFTRESP)
     2055     3519    5                     THEN DO;
     2056     3520    5                          KI$TCTX.STATE = %KI_TSTATE_WBCL;
     2057     3521    5                          GOTO UNLOCK_GATE;
     2058     3522    5                          END;
     2059     3523
     2060     3524    4                     CALL KIS$OSI_RECV(K$RWPARM)
     2061     3525    5                     WHENALTRETURN DO;
     2062     3526    5                          IF KIT_OSI_SNAP ~= 0
     2063     3527    5                          THEN CALL SC_PRTCL_SNAP;
     2064     3528    5                          END;
     2065     3529    4                     END/*do for osi connections*/;
     2066     3530
     2067     3531    4                ELSE DO;
     2068     3532    4                     IF NODE = KI$TCTX.LOCAL_FEP
     2069     3533    5                     THEN DO;
     2070     3534    5                          REMOTE_NODE = KI$TCTX.NODE;
     2071     3535    5                          CALL KIS$REP_DISC(REMOTE_NODE); /*local disconnected*/
     2072     3536    5                          END;
     2073     3537    4                     ELSE CALL KIS$REP_DISC(NODE); /*remote disconnected*/
     2074     3538    4                     END/*do for cp-6 connections*/;
     2075     3539
     2076     3540    3                KI$TCTX.STATE = %KI_TSTATE_CLOSED;
     2077     3541    3                CALL KIT$RELTCTX(TCTX$);
     2078     3542    3   UNLOCK_GATE:
     2079     3543                     %UNLOCK (G=KIT_RECV_LOCK);
     2080     3546    3                END;
     2081     3547    2           TCTX# = TCTX# + 1;
     2082     3548    2           END;
     2083     3549
     2084     3550    1      RETURN;
     2085     3551
PL6.E3A0      #006=KIT$REPDISC File=KIT$TRANSPORT.:E05TSI                        WED 07/30/97 00:45 Page:295  
     2086     3552    1   END KIT$REPDISC;
     2087     3553
     2088     3554

PL6.E3A0      #006=KIT$REPDISC File=KIT$TRANSPORT.:E05TSI                        WED 07/30/97 00:45 Page:296  
--  Include file information  --

   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   KI_MACROS_C.:E05TOU  is referenced.
   K_TRANSPORT_E.:E05TOU  is referenced.
   K_INTERFACE_M.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   K$RWPARM.:E05TOU  is referenced.
      No diagnostics issued in procedure KIT$REPDISC.

   Procedure KIT$REPDISC requires 114 words for executable code.
   Procedure KIT$REPDISC requires 50 words of local(AUTO) storage.

    No errors detected in file KIT$TRANSPORT.:E05TSI    .

PL6.E3A0      #006=KIT$REPDISC File=KIT$TRANSPORT.:E05TSI                        WED 07/30/97 00:45 Page:297  

 Object Unit name= KIT$REPDISC                                File name= KIT$TRANSPORT.:E05TOU
 UTS= JUL 30 '97 00:45:18.04 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   114    162  KIT$REPDISC
    1  RoData even  none     1      1  KIT$REPDISC

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  KIT$REPDISC

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 HFC$LOCK
         yes           Std       1 HFC$UNLOCK
 yes     yes           Std       1 KIS$OSI_RECV
         yes           Std       1 KIS$REP_DISC
 yes     yes           Std       1 KIT$RELTCTX
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #006=KIT$REPDISC File=KIT$TRANSPORT.:E05TSI                        WED 07/30/97 00:45 Page:298  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     SC_PRTCL_SNAP                         KI_TCTX$$                             KIT_RECV_LOCK
     KI_TCTX_MAX#                          KIT_OSI_SNAP                          K_RWPARM_CON
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ASLENTSID                             ISSID
PL6.E3A0      #006=KIT$REPDISC File=KIT$TRANSPORT.:E05TSI                        WED 07/30/97 00:45 Page:299  


     1965        1        /*M* KIT$REPDISC - To terminate a CP-6 transport connection   */
     1966        2        /*T***********************************************************/
     1967        3        /*T*                                                         */
     1968        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1969        5        /*T*                                                         */
     1970        6        /*T***********************************************************/
     1971        7        /*X* PLM=3,IND=5,ENU=0,ECU=0   */
     1972        8
     1973        9        KIT$REPDISC: PROC(NODE);

      9  0 000000   000000 700200 xent  KIT$REPDISC  TSX0  ! X66_AUTO_1
         0 000001   000062 000001                    ZERO    50,1

     1974       10
     1975       11                                                /* Include files                      */
     1976       12        %INCLUDE K$RWPARM;
     1977      398        %INCLUDE K_ADDRESS_M;
     1978      901        %INCLUDE K_INTERFACE_M;
     1979     1310        %INCLUDE K_TRANSPORT_E;
     1980     1635        %INCLUDE KI_MACROS_C;
     1981     2243        %INCLUDE HF_LOCK_C;
     1982     2257
     1983     2258                                                /* Parameter definitions              */
     1984     2259    1   DCL NODE UBIN;
     1985     2260
     1986     2261                                                /* Automatic data                     */
     1987     2262    1   DCL TCTX$ PTR;
     1988     2263    1   DCL TCTX# UBIN AUTO;
     1989     2264    1   DCL REMOTE_NODE UBIN;
     1990     2265    1   DCL STATE UBIN;
     1991     2266        %K$RWPARM (NAME=K$RWPARM, STCLASS=AUTO);
     1992     2582
     1993     2583                                                /* Based data                         */
     1994     2584    1   DCL KI$TCTX$(0:0) PTR BASED(KI_TCTX$$);
     1995     2585        %KI$TCTX(NAME=KI$TCTX, STCLASS="BASED(TCTX$)");
     1996     3143
PL6.E3A0      #006=KIT$REPDISC File=KIT$TRANSPORT.:E05TSI                        WED 07/30/97 00:45 Page:300  
     1997     3144                                                /* External Data                      */
     1998     3145    1   DCL KI_TCTX$$ PTR SYMREF;
     1999     3146    1   DCL KI_TCTX_USE# UBIN SYMREF;
     2000     3147    1   DCL KIT_RECV_LOCK BIT(72) SYMREF;
     2001     3148    1   DCL KI_TCTX_MAX# UBIN SYMREF;
     2002     3149    1   DCL KIT_OSI_SNAP UBIN SYMREF;
     2003     3150        %K$RWPARM (NAME=K_RWPARM_CON, STCLASS=SYMREF);
     2004     3466
     2005     3467                                                /* Entry point references             */
     2006     3468    1   DCL KIS$REP_DISC ENTRY(1);
     2007     3469    1   DCL KIS$OSI_RECV ENTRY(1) ALTRET;
     2008     3470    1   DCL KIT$RELTCTX ENTRY(1) ALTRET;
     2009     3471    1   DCL SC_PRTCL_SNAP ENTRY CONV(2,0);
     2010     3472
     2011     3473        %EJECT;
PL6.E3A0      #006=KIT$REPDISC File=KIT$TRANSPORT.:E05TSI                        WED 07/30/97 00:45 Page:301  
     2012     3474        /*F* NAME: KIT$REPDISC
     2013     3475
     2014     3476        KIT$REPDISC is called from KIN$NODECHG to report that the node
     2015     3477        specified by the input parameter, NODE, has disconnected.
     2016     3478
     2017     3479        We run through the TCTXs looking for one that has TCTX.NODE or TCTX.LOCAL_FEP
     2018     3480        equal to that specified in RWPARM.FEX.
     2019     3481
     2020     3482        If we find a match on node and the connection is OSI, it is the local
     2021     3483        fep that has our intermediate context block that has gone down, so
     2022     3484        we call OSI Session specify the TCTX# in RWPARM.
     2023     3485
     2024     3486        If we find a match on node for a CP-6 connection we call CP-6 Session
     2025     3487        always specifying the node number of the remote node.
     2026     3488
     2027     3489        */
     2028     3490
     2029     3491    1      TCTX# = 1;

   3491  0 000002   000001 235007                    LDA     1,DL
         0 000003   200005 755100                    STA     TCTX#,,AUTO

     2030     3492
     2031     3493    2      DO WHILE ( TCTX# <= KI_TCTX_MAX# );

   3493  0 000004   000000 236000 xsym               LDQ     KI_TCTX_MAX#
         0 000005   200005 116100                    CMPQ    TCTX#,,AUTO
         0 000006   000161 602000 0                  TNC     s:3550

     2032     3494    2           TCTX$ = KI$TCTX$(TCTX#);

   3494  0 000007   000000 470400 xsym               LDP0    KI_TCTX$$
         0 000010   200005 720100                    LXL0    TCTX#,,AUTO
         0 000011   000000 236110                    LDQ     0,X0,PR0
         0 000012   200004 756100                    STQ     TCTX$,,AUTO

     2033     3495
PL6.E3A0      #006=KIT$REPDISC File=KIT$TRANSPORT.:E05TSI                        WED 07/30/97 00:45 Page:302  
     2034     3496    2           IF (NODE = KI$TCTX.NODE    OR   NODE = KI$TCTX.LOCAL_FEP)

   3496  0 000013   200003 471500                    LDP1    @NODE,,AUTO
         0 000014   200004 473500                    LDP3    TCTX$,,AUTO
         0 000015   300000 236100                    LDQ     0,,PR3
         0 000016   000022 772000                    QRL     18
         0 000017   000777 376007                    ANQ     511,DL
         0 000020   100000 116100                    CMPQ    0,,PR1
         0 000021   000026 600000 0                  TZE     s:3496+11
         0 000022   300002 236100                    LDQ     2,,PR3
         0 000023   000033 772000                    QRL     27
         0 000024   100000 116100                    CMPQ    0,,PR1
         0 000025   000153 601000 0                  TNZ     s:3547
         0 000026   300000 236100                    LDQ     0,,PR3
         0 000027   777000 376003                    ANQ     -512,DU
         0 000030   003000 116003                    CMPQ    1536,DU
         0 000031   000153 602000 0                  TNC     s:3547

     2035     3497    2             AND (KI$TCTX.STATE > %KI_TSTATE_CLOSED)
     2036     3498    3           THEN DO;

     2037     3499                     %LOCK (G=KIT_RECV_LOCK);

   3500  0 000032   000000 630400 1                  EPPR0   0
         0 000033   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000034   000000 701000 xent               TSX1    HFC$LOCK
         0 000035   000000 011000                    NOP     0

     2038     3502
     2039     3503    3                K$RWPARM = K_RWPARM_CON;

   3503  0 000036   000100 100400                    MLR     fill='000'O
         0 000037   000000 000234 xsym               ADSC9   K_RWPARM_CON             cn=0,n=156
         0 000040   200010 000234                    ADSC9   K$RWPARM,,AUTO           cn=0,n=156

     2040     3504    3                K$RWPARM.FUNCTION = %K_TDISCONNECT_IND;

PL6.E3A0      #006=KIT$REPDISC File=KIT$TRANSPORT.:E05TSI                        WED 07/30/97 00:45 Page:303  
   3504  0 000041   000031 235007                    LDA     25,DL
         0 000042   200030 755100                    STA     K$RWPARM+16,,AUTO

     2041     3505    3                K$RWPARM.TCTX$ = ADDR(KI$TCTX);

   3505  0 000043   200004 236100                    LDQ     TCTX$,,AUTO
         0 000044   200027 756100                    STQ     K$RWPARM+15,,AUTO

     2042     3506    3                K$RWPARM.TCTX# = KI$TCTX.SRC_REF;

   3506  0 000045   200004 470500                    LDP0    TCTX$,,AUTO
         0 000046   000001 720100                    LXL0    1,,PR0
         0 000047   200043 740100                    STX0    K$RWPARM+27,,AUTO

     2043     3507
     2044     3508    3                STATE = KI$TCTX.STATE;

   3508  0 000050   000000 236100                    LDQ     0,,PR0
         0 000051   000033 772000                    QRL     27
         0 000052   200007 756100                    STQ     STATE,,AUTO

     2045     3509    3                KI$TCTX.STATE = %KI_TSTATE_CLOSING;

   3509  0 000053   010000 236003                    LDQ     4096,DU
         0 000054   000000 552140                    STBQ    0,'40'O,PR0

     2046     3510    3                KI$TCTX.ERR = %K_ERROR_TERM;

   3510  0 000055   200004 470500                    LDP0    TCTX$,,AUTO
         0 000056   000365 236007                    LDQ     245,DL
         0 000057   000000 552104                    STBQ    0,'04'O,PR0

     2047     3511
     2048     3512    3                IF KI$TCTX.SSN.TR_FLAGS.OSI

   3512  0 000060   200004 470500                    LDP0    TCTX$,,AUTO
         0 000061   000016 236100                    LDQ     14,,PR0
PL6.E3A0      #006=KIT$REPDISC File=KIT$TRANSPORT.:E05TSI                        WED 07/30/97 00:45 Page:304  
         0 000062   000020 316007                    CANQ    16,DL
         0 000063   000112 600000 0                  TZE     s:3532

     2049     3513    4                THEN DO;

     2050     3514    4                     IF (STATE = %KI_TSTATE_WBCL)

   3514  0 000064   200007 235100                    LDA     STATE,,AUTO
         0 000065   000004 115007                    CMPA    4,DL
         0 000066   000147 600000 0                  TZE     UNLOCK_GATE
         0 000067   000010 115007                    CMPA    8,DL
         0 000070   000147 600000 0                  TZE     UNLOCK_GATE

     2051     3515    4                       OR (STATE = %KI_TSTATE_CLOSING)
     2052     3516    4                     THEN GOTO UNLOCK_GATE;
     2053     3517
     2054     3518    4                     IF (STATE = %KI_TSTATE_WFTRESP)

   3518  0 000071   000006 115007                    CMPA    6,DL
         0 000072   000076 601000 0                  TNZ     s:3524

     2055     3519    5                     THEN DO;

     2056     3520    5                          KI$TCTX.STATE = %KI_TSTATE_WBCL;

   3520  0 000073   004000 236003                    LDQ     2048,DU
         0 000074   000000 552140                    STBQ    0,'40'O,PR0

     2057     3521    5                          GOTO UNLOCK_GATE;

   3521  0 000075   000147 710000 0                  TRA     UNLOCK_GATE

     2058     3522    5                          END;
     2059     3523
     2060     3524    4                     CALL KIS$OSI_RECV(K$RWPARM)

   3524  0 000076   200010 631500                    EPPR1   K$RWPARM,,AUTO
PL6.E3A0      #006=KIT$REPDISC File=KIT$TRANSPORT.:E05TSI                        WED 07/30/97 00:45 Page:305  
         0 000077   200060 451500                    STP1    K$RWPARM+40,,AUTO
         0 000100   200060 630500                    EPPR0   K$RWPARM+40,,AUTO
         0 000101   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000102   000000 701000 xent               TSX1    KIS$OSI_RECV
         0 000103   000105 702000 0                  TSX2    s:3526
         0 000104   000111 710000 0                  TRA     s:3529

     2061     3525    5                     WHENALTRETURN DO;

     2062     3526    5                          IF KIT_OSI_SNAP ~= 0

   3526  0 000105   000000 235000 xsym               LDA     KIT_OSI_SNAP
         0 000106   000111 600000 0                  TZE     s:3529

     2063     3527    5                          THEN CALL SC_PRTCL_SNAP;

   3527  0 000107   000000 713400 xsym               CLIMB   SC_PRTCL_SNAP
         0 000110   000000 600000 xsid               climb   nvectors=         0

     2064     3528    5                          END;

     2065     3529    4                     END/*do for osi connections*/;

   3529  0 000111   000136 710000 0                  TRA     s:3540

     2066     3530
     2067     3531    4                ELSE DO;

     2068     3532    4                     IF NODE = KI$TCTX.LOCAL_FEP

   3532  0 000112   200003 471500                    LDP1    @NODE,,AUTO
         0 000113   000002 236100                    LDQ     2,,PR0
         0 000114   000033 772000                    QRL     27
         0 000115   100000 116100                    CMPQ    0,,PR1
         0 000116   000132 601000 0                  TNZ     s:3537

     2069     3533    5                     THEN DO;
PL6.E3A0      #006=KIT$REPDISC File=KIT$TRANSPORT.:E05TSI                        WED 07/30/97 00:45 Page:306  

     2070     3534    5                          REMOTE_NODE = KI$TCTX.NODE;

   3534  0 000117   000000 236100                    LDQ     0,,PR0
         0 000120   000022 772000                    QRL     18
         0 000121   000777 376007                    ANQ     511,DL
         0 000122   200006 756100                    STQ     REMOTE_NODE,,AUTO

     2071     3535    5                          CALL KIS$REP_DISC(REMOTE_NODE); /*local disconnected*/

   3535  0 000123   200006 633500                    EPPR3   REMOTE_NODE,,AUTO
         0 000124   200060 453500                    STP3    K$RWPARM+40,,AUTO
         0 000125   200060 630500                    EPPR0   K$RWPARM+40,,AUTO
         0 000126   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000127   000000 701000 xent               TSX1    KIS$REP_DISC
         0 000130   000000 011000                    NOP     0

     2072     3536    5                          END;

   3536  0 000131   000136 710000 0                  TRA     s:3540

     2073     3537    4                     ELSE CALL KIS$REP_DISC(NODE); /*remote disconnected*/

   3537  0 000132   200003 630500                    EPPR0   @NODE,,AUTO
         0 000133   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000134   000000 701000 xent               TSX1    KIS$REP_DISC
         0 000135   000000 011000                    NOP     0

     2074     3538    4                     END/*do for cp-6 connections*/;

     2075     3539
     2076     3540    3                KI$TCTX.STATE = %KI_TSTATE_CLOSED;

   3540  0 000136   200004 470500                    LDP0    TCTX$,,AUTO
         0 000137   002000 236003                    LDQ     1024,DU
         0 000140   000000 552140                    STBQ    0,'40'O,PR0

PL6.E3A0      #006=KIT$REPDISC File=KIT$TRANSPORT.:E05TSI                        WED 07/30/97 00:45 Page:307  
     2077     3541    3                CALL KIT$RELTCTX(TCTX$);

   3541  0 000141   200004 630500                    EPPR0   TCTX$,,AUTO
         0 000142   200060 450500                    STP0    K$RWPARM+40,,AUTO
         0 000143   200060 630500                    EPPR0   K$RWPARM+40,,AUTO
         0 000144   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000145   000000 701000 xent               TSX1    KIT$RELTCTX
         0 000146   000000 011000                    NOP     0

     2078     3542    3   UNLOCK_GATE:
     2079     3543                     %UNLOCK (G=KIT_RECV_LOCK);

   3544  0 000147   000000 630400 1     UNLOCK_GATE  EPPR0   0
         0 000150   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000151   000000 701000 xent               TSX1    HFC$UNLOCK
         0 000152   000000 011000                    NOP     0

     2080     3546    3                END;

     2081     3547    2           TCTX# = TCTX# + 1;

   3547  0 000153   200005 235100                    LDA     TCTX#,,AUTO
         0 000154   000001 035007                    ADLA    1,DL
         0 000155   200005 755100                    STA     TCTX#,,AUTO

     2082     3548    2           END;

   3548  0 000156   000000 236000 xsym               LDQ     KI_TCTX_MAX#
         0 000157   200005 116100                    CMPQ    TCTX#,,AUTO
         0 000160   000007 603000 0                  TRC     s:3494

     2083     3549
     2084     3550    1      RETURN;

   3550  0 000161   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
PL6.E3A0      #006=KIT$REPDISC File=KIT$TRANSPORT.:E05TSI                        WED 07/30/97 00:45 Page:308  
 Sect OctLoc
   1     000   000000 006000                                                    ....
     2085     3551
     2086     3552    1   END KIT$REPDISC;
     2087     3553
     2088     3554

PL6.E3A0      #006=KIT$REPDISC File=KIT$TRANSPORT.:E05TSI                        WED 07/30/97 00:45 Page:309  
--  Include file information  --

   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   KI_MACROS_C.:E05TOU  is referenced.
   K_TRANSPORT_E.:E05TOU  is referenced.
   K_INTERFACE_M.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   K$RWPARM.:E05TOU  is referenced.
      No diagnostics issued in procedure KIT$REPDISC.
PL6.E3A0      #006=KIT$REPDISC File=KIT$TRANSPORT.:E05TSI                        WED 07/30/97 00:45 Page:310  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @NODE                     10-0-0/d STRC(1404)  r     1 K$RWPARM
    *0-0-0/w UBIN        r     1 NODE                       6-0-0/w UBIN        r     1 REMOTE_NODE
     7-0-0/w UBIN        r     1 STATE                      5-0-0/w UBIN        r     1 TCTX#
     4-0-0/w PTR         r     1 TCTX$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 KIT_OSI_SNAP               0-0-0/b BIT (72)    r     1 KIT_RECV_LOCK
     0-0-0/w PTR         r     1 KI_TCTX$$                  0-0-0/w UBIN        r     1 KI_TCTX_MAX#
     0-0-0/d STRC(1404)  r     1 K_RWPARM_CON

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(1620)  r     1 KI$TCTX
     0-0-0/w PTR         r     1 KI$TCTX$(0:0)


   Procedure KIT$REPDISC requires 114 words for executable code.
   Procedure KIT$REPDISC requires 50 words of local(AUTO) storage.

    No errors detected in file KIT$TRANSPORT.:E05TSI    .
PL6.E3A0      #006=KIT$REPDISC File=KIT$TRANSPORT.:E05TSI                        WED 07/30/97 00:45 Page:311  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #006=KIT$REPDISC File=KIT$TRANSPORT.:E05TSI                        WED 07/30/97 00:45 Page:312  
          MINI XREF LISTING

HFC$LOCK
      2256**DCL-ENT  3500--CALL
HFC$UNLOCK
      2256**DCL-ENT  3544--CALL
K$RWPARM
      2287**DCL      3503<<ASSIGN   3524<>CALL
K$RWPARM.BLKREC
      2313**DCL      2338--REDEF
K$RWPARM.BLKREC.BLKU#
      2314**DCL      2316--REDEF
K$RWPARM.BLKREC.RECU#
      2326**DCL      2328--REDEF
K$RWPARM.DVE.DVBYTE.VFC
      2353**DCL      2354--REDEF
K$RWPARM.DVE.EOMCHAR
      2361**DCL      2365--REDEF
K$RWPARM.ERR
      2425**DCL      2430--REDEF
K$RWPARM.FC
      2389**DCL      2390--REDEF
K$RWPARM.FLDID
      2571**DCL      2572--REDEF
K$RWPARM.FPT$
      2452**DCL      2459--REDEF
K$RWPARM.FUNCTION
      2466**DCL      3504<<ASSIGN
K$RWPARM.KEYTYPE
      2578**DCL      2579--REDEF
K$RWPARM.MSG$
      2288**DCL      2294--REDEF
K$RWPARM.MSGID
      2400**DCL      2405--REDEF
PL6.E3A0      #006=KIT$REPDISC File=KIT$TRANSPORT.:E05TSI                        WED 07/30/97 00:45 Page:313  
K$RWPARM.MSGIDXT
      2413**DCL      2417--REDEF
K$RWPARM.ORG
      2549**DCL      2550--REDEF
K$RWPARM.TCTX#
      2523**DCL      3506<<ASSIGN
K$RWPARM.TCTX$
      2459**DCL      3505<<ASSIGN
K$RWPARM.THDRSZ
      2493**DCL      2497--REDEF
K$RWPARM.VDOFLGS
      2551**DCL      2562--REDEF
KI$TCTX
      2586**DCL      3505--ASSIGN
KI$TCTX.ERR
      2607**DCL      3510<<ASSIGN
KI$TCTX.LOCAL_FEP
      2629**DCL      3496>>IF       3532>>IF
KI$TCTX.NODE
      2593**DCL      3496>>IF       3534>>ASSIGN
KI$TCTX.SRC_REF
      2621**DCL      3506>>ASSIGN
KI$TCTX.SSN.DST_NSAP.ADDRESS_N
      3042**DCL      3043--REDEF
KI$TCTX.SSN.SRC_NSAP.ADDRESS_N
      2982**DCL      2983--REDEF
KI$TCTX.SSN.TPDUSIZE
      2745**DCL      2746--REDEF
KI$TCTX.SSN.TR_FLAGS.OSI
      2807**DCL      3512>>IF
KI$TCTX.STATE
      2587**DCL      3496>>IF       3508>>ASSIGN   3509<<ASSIGN   3520<<ASSIGN   3540<<ASSIGN
KI$TCTX$
      2584**DCL      3494>>ASSIGN
KIS$OSI_RECV
      3469**DCL-ENT  3524--CALL
PL6.E3A0      #006=KIT$REPDISC File=KIT$TRANSPORT.:E05TSI                        WED 07/30/97 00:45 Page:314  
KIS$REP_DISC
      3468**DCL-ENT  3535--CALL     3537--CALL
KIT$RELTCTX
      3470**DCL-ENT  3541--CALL
KIT_OSI_SNAP
      3149**DCL      3526>>IF
KIT_RECV_LOCK
      3147**DCL      3500<>CALL     3544<>CALL
KI_TCTX$$
      3145**DCL      2584--IMP-PTR  3494>>ASSIGN
KI_TCTX_MAX#
      3148**DCL      3493>>DOWHILE
K_RWPARM_CON
      3171**DCL      3503>>ASSIGN
K_RWPARM_CON.BLKREC
      3197**DCL      3222--REDEF
K_RWPARM_CON.BLKREC.BLKU#
      3198**DCL      3200--REDEF
K_RWPARM_CON.BLKREC.RECU#
      3210**DCL      3212--REDEF
K_RWPARM_CON.DVE.DVBYTE.VFC
      3237**DCL      3238--REDEF
K_RWPARM_CON.DVE.EOMCHAR
      3245**DCL      3249--REDEF
K_RWPARM_CON.ERR
      3309**DCL      3314--REDEF
K_RWPARM_CON.FC
      3273**DCL      3274--REDEF
K_RWPARM_CON.FLDID
      3455**DCL      3456--REDEF
K_RWPARM_CON.FPT$
      3336**DCL      3343--REDEF
K_RWPARM_CON.KEYTYPE
      3462**DCL      3463--REDEF
K_RWPARM_CON.MSG$
      3172**DCL      3178--REDEF
PL6.E3A0      #006=KIT$REPDISC File=KIT$TRANSPORT.:E05TSI                        WED 07/30/97 00:45 Page:315  
K_RWPARM_CON.MSGID
      3284**DCL      3289--REDEF
K_RWPARM_CON.MSGIDXT
      3297**DCL      3301--REDEF
K_RWPARM_CON.ORG
      3433**DCL      3434--REDEF
K_RWPARM_CON.THDRSZ
      3377**DCL      3381--REDEF
K_RWPARM_CON.VDOFLGS
      3435**DCL      3446--REDEF
NODE
      2259**DCL         9--PROC     3496>>IF       3496>>IF       3532>>IF       3537<>CALL
REMOTE_NODE
      2264**DCL      3534<<ASSIGN   3535<>CALL
SC_PRTCL_SNAP
      3471**DCL-ENT  3527--CALL
STATE
      2265**DCL      3508<<ASSIGN   3514>>IF       3514>>IF       3518>>IF
TCTX#
      2263**DCL      3491<<ASSIGN   3493>>DOWHILE  3494>>ASSIGN   3547<<ASSIGN   3547>>ASSIGN
TCTX$
      2262**DCL      2586--IMP-PTR  3494<<ASSIGN   3496>>IF       3496>>IF       3496>>IF       3505>>ASSIGN
      3506>>ASSIGN   3508>>ASSIGN   3509>>ASSIGN   3510>>ASSIGN   3512>>IF       3520>>ASSIGN   3532>>IF
      3534>>ASSIGN   3540>>ASSIGN   3541<>CALL
UNLOCK_GATE
      3544**LABEL    3516--GOTO     3521--GOTO
