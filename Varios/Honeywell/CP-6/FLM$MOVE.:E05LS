VERSION E05

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:1    
        1        1        /*M* FLM$MOVE - EFT CHECK command */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* THI=1,PLM=3 */
        8        8        FLM$MOVE: PROC( COMMAND ) ALTRET;
        9        9        /*F*  NAME: FLM$MOVE
       10       10              PURPOSE: Perform EFT CHECK command.
       11       11        */
       12       12
       13       13        /***
       14       14         *** Parameters
       15       15         ***/
       16       16
       17       17    1   DCL COMMAND SBIN;
       18       18
       19       19        /***
       20       20         *** INCLUDE
       21       21         ***/
       22       22
       23       23        %INCLUDE B_ERRORS_C;
       24     1150        %INCLUDE CP_6;
       25     6709        %INCLUDE CP_6_SUBS;
       26     7249        %INCLUDE FLE_DATA_R;
       27    13200        %INCLUDE FLI_DATA_R;
       28    14614        %INCLUDE FLN_DATA_R;
       29    15351        %INCLUDE FLS_DATA_R;
       30    17151        %INCLUDE FLW_DATA_R;
       31    17165        %INCLUDE FM$FIT;
       32    17386        %INCLUDE FM$GRAN;
       33    17455
       34    17456        /***
       35    17457         *** ENTRY
       36    17458         ***/
       37    17459
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:2    
       38    17460    1   DCL FLC$CRIT_CHECK ENTRY(2) ALTRET;
       39    17461    1   DCL FLC$TAPE_IO_INIT ENTRY;
       40    17462    1   DCL FLC$TAPE_OPEN_NEXT ENTRY(3) ALTRET;
       41    17463    1   DCL FLC$TAPE_READ_NEXT ENTRY(3) ALTRET;
       42    17464    1   DCL FLC$TAPE_CLOSE_NEXT ENTRY(1) ALTRET;
       43    17465    1   DCL FLC$TAPE_CLOSE ENTRY(1) ALTRET;
       44    17466    1   DCL FLI$ALLOC ENTRY(2);
       45    17467    1   DCL FLI$ALLOC_BUF ENTRY(2);
       46    17468    1   DCL FLI$DISK_READ ENTRY(5) ALTRET;
       47    17469    1   DCL FLI$DISK_READ_FILE_INIT ENTRY(1);
       48    17470    1   DCL FLI$DISK_READ_INIT ENTRY(1);
       49    17471    1   DCL FLI$RETURN_BUF ENTRY(1);
       50    17472    1   DCL FLI$RPT_ERR ENTRY(5);
       51    17473    1   DCL FLI$TSN_USED ENTRY(2) ALTRET;
       52    17474    1   DCL FLN$DISK_CLOSE_ALL ENTRY;
       53    17475    1   DCL FLN$DISK_CLOSE_NEXT ENTRY(1);
       54    17476    1   DCL FLN$DISK_IO_INIT ENTRY;
       55    17477    1   DCL FLN$DISK_OPEN_NEXT ENTRY(5) ALTRET;
       56    17478    1   DCL FLP$WR_FILE_INFO ENTRY(9) ALTRET;
       57    17479    1   DCL FLS$FILE_PACKER ENTRY(10) ALTRET;
       58    17480    1   DCL FLS$FILE_PACKER_INIT ENTRY;
       59    17481    1   DCL FLS$FILE_PACKER_FIN ENTRY(1) ALTRET;
       60    17482    1   DCL FLS$SCRUB ENTRY(1);
       61    17483    1   DCL XSF$LOCCODP ENTRY(2) ALTRET;
       62    17484    1   DCL XSF$LOCCODE ENTRY(2) ALTRET;
       63    17485    1   DCL FLI$BUILD_$$EFT ENTRY(1) ALTRET;
       64    17486    1   DCL FLI$NUMFREEGRANS ENTRY(3) ALTRET;
       65    17487
       66    17488        /***
       67    17489         *** SYMREF
       68    17490         ***/
       69    17491
       70    17492    1   DCL BREAK_COUNT SBIN SYMREF;
       71    17493    1   DCL BREAK_TASK CHAR(18) SYMREF;
       72    17494    1   DCL RESTORE_FROM_TAPE BIT(1) SYMREF;
       73    17495    1   DCL CHECK_TAPE BIT(1) SYMREF;
       74    17496
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:3    
       75    17497        /***
       76    17498         *** DCB
       77    17499         ***/
       78    17500
       79    17501    1   DCL M$DISK_OUT DCB;
       80    17502    1   DCL M$DEL_LIST DCB;
       81    17503    1   DCL M$LO DCB;
       82    17504    1   DCL M$OPEN_PRIME_DUAL_PACK DCB;
       83    17505
       84    17506        /***
       85    17507         *** STATIC
       86    17508         ***/
       87    17509
       88    17510    1   DCL 1 DEL_LIST_REC STATIC ALIGNED,
       89    17511    1         2 VLP_SN ALIGNED,
       90    17512    1           3 NUM# UBIN WORD INIT(1),
       91    17513    1           3 SN#(0:0) CHAR(6),
       92    17514    1           3 * CHAR(2) INIT(' '),
       93    17515    1         2 ACCT CHAR(8) ALIGNED,
       94    17516    1         2 NAME# ALIGNED,
       95    17517    1           3 L UBIN BYTE CALIGNED,
       96    17518    1           3 C CHAR(31),
       97    17519    1         2 SN CHAR (6),
       98    17520    1         2 CSN CHAR(6),
       99    17521    1         2 RES CHAR(4) CALIGNED,
      100    17522    1         2 TO_ACCT CHAR(8) CALIGNED,
      101    17523    1         2 TO_SN CHAR(8) CALIGNED,
      102    17524    1         2 * BIT(18) CALIGNED,
      103    17525    1         2 CFSN SBIN ALIGNED,
      104    17526    1         2 FSN UBIN(16) HALIGNED,
      105    17527    1         2 INACTIVATE BIT(1),
      106    17528    1         2 * BIT(19) INIT('0'B),
      107    17529
      108    17530    1         2 TIME UBIN;
      109    17531
      110    17532    1   DCL 1 FILE_DISP_REC STATIC,
      111    17533    1         2 * CHAR(1) INIT(' '),
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:4    
      112    17534    1         2 NBR CHAR(5),
      113    17535    1         2 WHAT CHAR(10),
      114    17536    1         2 DISP CHAR(11);
      115    17537
      116    17538        %VLP_SN( FPTN=SOURCE_TAPE_SN,
      117    17539                 N=1 );
      118    17552        %VLP_ACCT( FPTN=SKIP_ACCT );
      119    17565        %VLP_ACCT( FPTN=TO_DISK_ACCT );
      120    17578        %VLP_ACCT( FPTN=VID_ACCT );
      121    17591        %VLP_SN( FPTN=TO_DISK_SN,
      122    17592                 N=1 );
      123    17605        %VLP_NAME( FPTN=TO_DISK_NAME,
      124    17606                   L=31 );
      125    17633        %VLP_SN( FPTN=MAD_SN,
      126    17634                   N=1,
      127    17635                   STCLASS=STATIC );
      128    17648    1   DCL GRANULE_NBR SBIN INIT(0) STATIC;    /* Granule number to read             */
      129    17649        %LIST;
      130    17650        %FM$VID( FM$VID=VIDBUF,
      131    17651                 BASED="STATIC" );
             17652    1   DCL 1 FM$VID BASED ALIGNED,2 ID CHAR(4),2 INSTID BIT(36),2 VSN UBIN,2 PSN CHAR(6),2
             17652            VOLCNT UBIN HALF UNAL,2 SYSSIZE UBIN,2 SYSDIRDA
             17653    1   UBIN WORD,2 INITTIME UBIN,2 SECTSTRT(0:25)UBIN,2 MIRROR ALIGNED,3 C CHAR(8)CALIGNED,
             17653            3 UTS UBIN ALIGNED,3 STATE(0:1)UBIN(6)UNAL,3 *
             17654    1   BIT(24),2 *(0:153)UBIN,2 DGT(0:63),3 FGRAN UBIN(18)UNAL,3 LGRAN UBIN(18)UNAL,2 DTT(0
             17654            :63)UBIN(18),2 DT(0:63)REDEF DTT,3 CYL UBIN(10)
             17655    1   UNAL,3 HD UBIN(8)UNAL,3 * BIT(18),2 SNLIST(0:175),3 VSN,4 S UBIN BYTE UNAL,4 N UBIN(
             17655            27)UNAL,3 SIZE UBIN,3 TYPE CHAR(8);
      132    17657        %PLIST;
      133    17658
      134    17659        /***
      135    17660         *** AUTO
      136    17661         ***/
      137    17662
      138    17663    1   DCL BIX SBIN AUTO;
      139    17664    1   DCL CODE SBIN AUTO;
      140    17665    1   DCL CODE$ PTR AUTO;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:5    
      141    17666    1   DCL CODE04$ PTR AUTO;
      142    17667    1   DCL DISK_CODE06$ PTR AUTO;
      143    17668    1   DCL TAPE_CODE04$ PTR AUTO;
      144    17669    1   DCL DISK_CODE04$ PTR AUTO;
      145    17670    1   DCL SOURCE_CODE$ PTR AUTO;
      146    17671    1   DCL SOURCE_DCB$ PTR AUTO;
      147    17672    1   DCL FIT$ PTR AUTO;
      148    17673    1   DCL 1 FPARAM_ DALIGNED AUTO,
      149    17674    1         2 BOUND UBIN(20) UNAL,
      150    17675    1         2 * BIT(16) UNAL,
      151    17676    1         2 PTR$ PTR;
      152    17677    1   DCL 1 ERR AUTO,
      153    17678    1         2 * BIT(12) UNAL,
      154    17679    1         2 * BIT(6) UNAL,
      155    17680    1         2 * BIT(1) UNAL,
      156    17681    1         2 CODE UBIN(14) UNAL,
      157    17682    1         2 * UBIN(3) UNAL;
      158    17683    1   DCL 1 SAVE_ERR AUTO,
      159    17684    1         2 * BIT(12) UNAL,
      160    17685    1         2 * BIT(6) UNAL,
      161    17686    1         2 * BIT(1) UNAL,
      162    17687    1         2 CODE UBIN(14) UNAL,
      163    17688    1         2 * UBIN(3) UNAL;
      164    17689    1   DCL NBR_GRANS_TO_READ SBIN AUTO;
      165    17690    1   DCL SOURCE_FILE_TYPE SBIN AUTO;
      166    17691    1   DCL DEST_FILE_TYPE SBIN AUTO;
      167    17692    1   DCL SAVE_DCB$ PTR AUTO;
      168    17693    1   DCL 1 SAVE_FIT_ DALIGNED AUTO,
      169    17694    1         2 * BIT(36),
      170    17695    1         2 PTR$ PTR;
      171    17696    1   DCL 1 SAVE_AD_FD_FIT_ DALIGNED AUTO,
      172    17697    1         2 * BIT(36),
      173    17698    1         2 PTR$ PTR;
      174    17699    1   DCL 1 DISK_FIT_ DALIGNED AUTO,
      175    17700    1         2 * BIT(36),
      176    17701    1         2 PTR$ PTR;
      177    17702    1   DCL 1 MODIFIED_FIT_ DALIGNED AUTO,
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:6    
      178    17703    1         2 BOUND UBIN(20) UNAL,
      179    17704    1         2 * BIT(16) UNAL,
      180    17705    1         2 PTR$ PTR;
      181    17706    1   DCL SAVE_SN CHAR(6) AUTO;
      182    17707    1   DCL SAVE_FSN SBIN AUTO;
      183    17708    1   DCL SAVE_DISK_OPTION_DIR BIT(1) AUTO;
      184    17709    1   DCL GOING_TO_DEST BIT(1) AUTO;
      185    17710    1   DCL FIT_UPDATE BIT(1) AUTO;        /* Flag indicating only FIT was updated    */
      186    17711    1   DCL 1 BUF_ DALIGNED AUTO,
      187    17712    1         2 * BIT(36),
      188    17713    1         2 PTR$ PTR;
      189    17714    1   DCL ARS SBIN ALIGNED AUTO;
      190    17715    1   DCL OLD_SN CHAR(6) AUTO;
      191    17716    1   DCL VSN CHAR(6) AUTO;              /* Volume serial number used in DUALing    */
      192    17717    1   DCL USE_TSN_USED BIT(1) AUTO;
      193    17718    1   DCL SET_NBR SBIN AUTO;
      194    17719    1   DCL SOURCE_UTS UBIN WORD;
      195    17720    1   DCL DEST_UTS UBIN WORD;
      196    17721    1   DCL TEMP_U UBIN WORD AUTO;
      197    17722    1   DCL TEMP_S SBIN WORD AUTO;
      198    17723    1   DCL M$DISK_OUT$ PTR AUTO;
      199    17724    1   DCL M$DISK_IN$ PTR AUTO;
      200    17725    1   DCL DISK_KEY SBIN WORD AUTO;
      201    17726    1   DCL NBR_CONSEC_GRANS SBIN AUTO;
      202    17727    1   DCL DCB_NBR UBIN  AUTO;
      203    17728    1   DCL DCB# UBIN WORD AUTO;
      204    17729    1   DCL NBR_DEL_FILES SBIN AUTO;
      205    17730    1   DCL SOURCE SBIN AUTO;
      206    17731    1   DCL DEST SBIN AUTO;
      207    17732    1   DCL PR_DEV_LT BIT(1) AUTO; /* Print routine device flags, true=LT, false=DP   */
      208    17733    1   DCL ABORT BIT(1) AUTO ALIGNED;     /* Action flag - set by FLS$FILEPACKER     */
      209    17734    1   DCL FIT_ONLY_SAVED BIT(1) AUTO ALIGNED; /* Flag indicating only FIT was saved */
      210    17735    1   DCL FIT_ONLY_RSTRD BIT(1) AUTO;    /* Flag indicating only FIT was restored   */
      211    17736    1   DCL ANY_FILES_FOUND BIT(1) AUTO;
      212    17737
      213    17738        /***
      214    17739         *** FPTs
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:7    
      215    17740         ***/
      216    17741
      217    17742        %FPT_OPEN( FPTN=REPLACE_AD_OR_FD,
      218    17743                   DCB=M$DISK_OUT,
      219    17744                   RES='DP',
      220    17745                   SN=TO_DISK_SN,
      221    17746                   ACCT=TO_DISK_ACCT,
      222    17747                   NAME=ERASE,
      223    17748                   FUN=CREATE,
      224    17749                   ASN=DEVICE,
      225    17750                   SCRUB=YES,
      226    17751                   REASSIGN=NO,
      227    17752                   STCLASS=STATIC );
      228    17861
      229    17862        %FPT_OPEN( FPTN=GET_AD_OR_FD,
      230    17863                   DCB=M$DISK_OUT,
      231    17864                   RES='DP',
      232    17865                   SN=TO_DISK_SN,
      233    17866                   ACCT=TO_DISK_ACCT,
      234    17867                   NAME=ERASE,
      235    17868                   FUN=IN,
      236    17869                   ASN=DEVICE,
      237    17870                   SCRUB=YES,
      238    17871                   REASSIGN=NO,
      239    17872                   STCLASS=STATIC );
      240    17981
      241    17982        %VLP_SN (FPTN = VLP_SN,
      242    17983                 N= 1,
      243    17984                 SN = ' ',
      244    17985                 STCLASS = STATIC);
      245    17998
      246    17999        %VLP_NAME (FPTN = DELETE_FILE_NAME,
      247    18000                   NAME = '*DELETED_LIST',
      248    18001                   STCLASS = CONSTANT );
      249    18028
      250    18029        %FPT_OPEN (FPTN = OPEN_DELETE_LIST,
      251    18030                   DCB = M$DEL_LIST,
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:8    
      252    18031                   ASN = FILE,
      253    18032                   FUN = CREATE,
      254    18033                   ORG = INDEXED,
      255    18034                   ACS = DIRECT,
      256    18035                   KEYX = 0,
      257    18036                   KEYL = 52,
      258    18037                   XTNSIZE = 20,
      259    18038                   CTG = YES,
      260    18039                   NAME = DELETE_FILE_NAME,
      261    18040                   STCLASS = STATIC );
      262    18149
      263    18150        %FPT_OPEN( FPTN=DISK_REOPEN,
      264    18151                   RES='DP',
      265    18152                   SN=DISK_SN,
      266    18153                   NXTF=NO,
      267    18154                   THISF=YES,
      268    18155                   ASN=FILE,
      269    18156                   ACS=BLOCK,
      270    18157                   FUN=UPDATE,
      271    18158                   SHARE=IN,
      272    18159                   STCLASS="STATIC SYMDEF" );
      273    18268
      274    18269        %FPT_WRITE (FPTN = WRITE_DELETE_LIST,
      275    18270                    BUF = DEL_LIST_REC,
      276    18271                    DCB = M$DEL_LIST,
      277    18272                    ONEWKEY = YES,
      278    18273                    STCLASS = STATIC );
      279    18304
      280    18305        %FPT_PFIL( FPTN = PFIL_DELETE_LIST,
      281    18306                   DCB = M$DEL_LIST,
      282    18307                   BOF = YES );
      283    18322
      284    18323        %FPT_READ( FPTN = READ_DELETE_LIST,
      285    18324                   DCB = M$DEL_LIST,
      286    18325                   BUF = DEL_LIST_REC );
      287    18364
      288    18365        %FPT_WRITE( FPTN = REWRITE_DELETE_LIST,
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:9    
      289    18366                    DCB = M$DEL_LIST,
      290    18367                    REWRITE = YES,
      291    18368                    BUF = DEL_LIST_REC );
      292    18399
      293    18400        %FPT_CLOSE (FPTN = CLOSE_DELETE_LIST,
      294    18401                    DCB = M$DEL_LIST,
      295    18402                    DISP = SAVE,
      296    18403                    STCLASS = CONSTANT );
      297    18445
      298    18446        %FPT_OPEN( FPTN = OPEN_BLOCK,
      299    18447                   DCB = M$DISK_OUT,
      300    18448                   ASN = FILE,
      301    18449                   ACS = BLOCK,
      302    18450                   FUN = IN,
      303    18451                   THISF = YES,
      304    18452                   NXTF = YES,
      305    18453                   ANYF = YES,
      306    18454                   SN = DEL_LIST_REC.VLP_SN,
      307    18455                   ACCT = DEL_LIST_REC.ACCT,
      308    18456                   NAME = DEL_LIST_REC.NAME# );
      309    18565
      310    18566        %FPT_WRITE( FPTN = WRITE_FILE_DISP_REC,
      311    18567                    DCB=M$LO,
      312    18568                    BUF=FILE_DISP_REC );
      313    18599
      314    18600        %FPT_OPEN( FPTN=CLEANUP_ACCT,
      315    18601                   DCB=M$DISK_OUT,
      316    18602                   RES='DP',
      317    18603                   SN=DEL_LIST_REC.VLP_SN,
      318    18604                   ACCT=DEL_LIST_REC.ACCT,
      319    18605                   NAME=ERASE,
      320    18606                   FUN=IN,
      321    18607                   ASN=DEVICE,
      322    18608                   DELETE=YES,
      323    18609                   SCRUB=YES,
      324    18610                   FPARAM=NIL,
      325    18611                   IFPARAM=NIL,
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:10   
      326    18612                   REASSIGN=NO,
      327    18613                   EXPIRE=0,
      328    18614                   STCLASS="STATIC SYMDEF" );
      329    18723
      330    18724        %FPT_MADMUCK( FPTN=DEL_ACCT_FROM_MAD,
      331    18725                      DELETE = YES,
      332    18726                      ACCT=DEL_LIST_REC.ACCT,
      333    18727                      SN=DEL_LIST_REC.VLP_SN );
      334    18743
      335    18744        %FPT_MADMUCK( FPTN=ADD_ACCT_TO_MAD,
      336    18745                      WRITE=YES,
      337    18746                      ACCT=DEL_LIST_REC.TO_ACCT,
      338    18747                      SN=TO_DISK_SN,
      339    18748                      STCLASS=STATIC );
      340    18764
      341    18765        %FPT_MADMUCK( FPTN=GET_PSN_FROM_MAD,
      342    18766                      READ=YES,
      343    18767                      ACCT=DEL_LIST_REC.ACCT,
      344    18768                      SN=MAD_SN,
      345    18769                      STCLASS=STATIC );
      346    18785
      347    18786        %FPT_OPEN( FPTN=OPEN_DP,
      348    18787                   PFMT=VECTOR,
      349    18788                   RES='DP',
      350    18789                   DCB=M$STATUS,
      351    18790                   ASN=DEVICE,
      352    18791                   ACCT=VID_ACCT,
      353    18792                   FUN=IN,
      354    18793                   STCLASS=STATIC );
      355    18902
      356    18903        %FPT_CLOSE( FPTN=CLOSE_DP,
      357    18904                    DCB=M$STATUS,
      358    18905                    STCLASS=STATIC );
      359    18947
      360    18948        %FPT_READ( FPTN=READ_VID,
      361    18949                   DCB=M$STATUS,
      362    18950                   BUF=VIDBUF,
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:11   
      363    18951                   KEYS=YES,
      364    18952                   KEY=GRANULE_NBR,
      365    18953                   STCLASS=STATIC );
      366    18992
      367    18993        %FPT_REM (FPTN=FPT_REM);
      368    19007
      369    19008        %FPT_REW( FPTN=REWIND_TAPE );
      370    19023
      371    19024        /***
      372    19025         *** CONSTANT
      373    19026         ***/
      374    19027
      375    19028    1   DCL NO_LEADING_5_ZEROS BIT(9) CONSTANT CALIGNED INIT( %MVZB5 );
      376    19029
      377    19030        /***
      378    19031         *** BASED
      379    19032         ***/
      380    19033
      381    19034        %F$DCB( STCLASS="BASED(M$DISK_OUT$)" );
      382    19091        %FM$GRAN;
      383    19095        %B$TCB( STCLASS="BASED(B$TCB$)" );
      384    19098        %B$ALT;
      385    19106        %FM$FIT(BASED="BASED(FIT$)");
      386    19109        %CODE03( BASED="BASED(CODE$)" );
      387    19116        %CODE04( BASED="BASED(CODE$)" );
      388    19124        %CODE05( BASED="BASED(CODE$)" );
      389    19127        %CODE06( BASED="BASED(CODE$)" );
      390    19131        %CODE14( BASED="BASED(CODE$)" );
      391    19141    1   DCL 1 ONE_GRAN BASED ALIGNED,
      392    19142    1         2 *(0:1023) UBIN WORD;
      393    19143
      394    19144        /***
      395    19145         *** EQUs
      396    19146         ***/
      397    19147
      398    19148        %EQU TAPE@ = 0;
      399    19149        %EQU DISK@ = 1;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:12   
      400    19150        %EQU NULL@ = 2;
      401    19151
      402    19152        /***************************************/
      403    19153
      404    19154        /***
      405    19155         *** Make initialization calls.  Note that FLC$TAPE_IO_INIT must be
      406    19156         *** called after FLI$ALLOC_BUF since the tape buffer could grow over
      407    19157         *** the SAVE_FIT if FLI$ALLOC_BUF was called after FLC$TAPE_IO_INIT.
      408    19158         ***/
      409    19159
      410    19160    1      CALL FLP$WR_FILE_INFO;
      411    19161
      412    19162    2      DO CASE( COMMAND );
      413    19163    2       CASE( %SAVE, %BACKUP, %PURGE, %ARCHIVE_CMD, %OPEN_CREATE, %OPEN_EXTEND);
             19163                /* Generic SAVE */
      414    19164    2         SOURCE = %DISK@;
      415    19165    2         DEST = %TAPE@;
      416    19166    2         PR_DEV_LT = '1'B;
      417    19167
      418    19168    2       CASE( %RETRIEVE );
      419    19169    2         SOURCE = %TAPE@;
      420    19170    2         DEST = %DISK@;
      421    19171    2         PR_DEV_LT = '1'B;
      422    19172
      423    19173    2       CASE( %RESTORE );                   /* Generic RESTORE                    */
      424    19174    2         IF RESTORE_FROM_TAPE
      425    19175    2          THEN SOURCE = %TAPE@;
      426    19176    2          ELSE SOURCE = %DISK@;
      427    19177    2         DEST = %DISK@;
      428    19178    2         PR_DEV_LT = '1'B;
      429    19179
      430    19180    2       CASE( %REBUILD );
      431    19181    2         SOURCE = %TAPE@;
      432    19182    2         DEST = %DISK@;
      433    19183    2         PR_DEV_LT = '1'B;
      434    19184
      435    19185    2       CASE( %CHECK );                     /* Generic CHECK                      */
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:13   
      436    19186    2         SOURCE = %TAPE@;
      437    19187    2         DEST = %NULL@;
      438    19188    2         PR_DEV_LT = '1'B;
      439    19189
      440    19190    2       CASE( %DUAL, %REAL_DUAL );
      441    19191    2         SOURCE = %DISK@;
      442    19192    2         DEST = %DISK@;
      443    19193    2         PR_DEV_LT = '0'B;
      444    19194    2         CROSSED = ' ';
      445    19195    2         VID_ACCT.ACCT# = BINASC(0);
      446    19196    2         CALL FLI$ALLOC_BUF( SAVE_AD_FD_FIT_, 1 );
      447    19197
      448    19198    2       END;
      449    19199
      450    19200    2      DO CASE( DEST );
      451    19201    2       CASE( %TAPE@ );
      452    19202    2         CALL FLS$FILE_PACKER_INIT;
      453    19203    2       CASE( %DISK@ );
      454    19204    2         CALL FLI$ALLOC_BUF( DISK_FIT_, 1 );
      455    19205    2       END;
      456    19206
      457    19207    2      DO CASE( SOURCE );
      458    19208    2       CASE( %DISK@ );
      459    19209    2         DISK_OPEN_NEXT.V.OPER.TEST# = %NO#;
      460    19210    2         CALL FLN$DISK_IO_INIT;
      461    19211    2         CALL FLI$DISK_READ_INIT( DEFAULT_GRANS_PER_DISK_BUF );
      462    19212    2         CALL M$OPEN( OPEN_DELETE_LIST )
      463    19213    3          WHENALTRETURN DO;
      464    19214    3            CALL FLI$RPT_ERR;
      465    19215    3            ALTRETURN;
      466    19216    3            END;
      467    19217    2       CASE( %TAPE@ );
      468    19218    2         CALL FLI$ALLOC_BUF( SAVE_FIT_, 1 ); /* Get DCB saver                    */
      469    19219    2         SAVE_DCB$ = SAVE_FIT_.PTR$;
      470    19220    2         CALL FLI$ALLOC_BUF( SAVE_FIT_, 1 );
      471    19221    2         CALL FLC$TAPE_IO_INIT;
      472    19222    2         SAVE_DCB$->F$DCB.DCBNAME.L = 0;   /* So we know this (fake) DCB's size  */
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:14   
      473    19223
      474    19224    2         IF COMMAND = %RESTORE
      475    19225    2           OR COMMAND = %REBUILD
      476    19226    3          THEN DO;
      477    19227    3            NODATA_SN.SN#(0) = DISK_DEST_SN.SN#(0); /* Open :NODATA file         */
      478    19228    3            OPEN_NODATA_LIST.V.RES# = DISK_DEST_RES.NAME;
      479    19229    3            OPEN_NODATA_LIST.V.FUN# = %CREATE#;
      480    19230    3            CALL M$OPEN( OPEN_NODATA_LIST )
      481    19231    4             WHENALTRETURN DO;
      482    19232    4               IF B$TCB.ALT$->B$ALT.ERR.CODE = %E$NONEWFD
      483    19233    5                THEN DO;
      484    19234    5                  CALL FLI$BUILD_$$EFT( NODATA_SN.SN#(0) ) ALTRET( CREATEALT );
      485    19235    5                  CALL M$OPEN( OPEN_NODATA_LIST ) ALTRET( CREATEALT );
      486    19236    5                  END;
      487    19237    5                ELSE DO;
      488    19238    5   CREATEALT:     ;
      489    19239    5                  CALL FLI$RPT_ERR;
      490    19240    5                  ALTRETURN;
      491    19241    5                  END;
      492    19242    4               END;
      493    19243    3            END;
      494    19244    2       END;
      495    19245
      496    19246        /***
      497    19247         *** If we will be writing to disk, set up disk FPTs.
      498    19248         ***/
      499    19249
      500    19250    1      IF COMMAND = %RETRIEVE THEN TAPE_OPTION.PROTTYPE = %UNPROTECTED;
      501    19251
      502    19252    1      IF DEST = %DISK@
      503    19253    2       THEN DO;
      504    19254    2         DISK_WRITE.V.WAIT# = '1'B;
      505    19255    2         DISK_WRITE.V.EVENT# = 0;
      506    19256    2         DISK_WRITE.V.DCB# = DCBNUM(M$DISK_OUT);
      507    19257    2         DISK_CLOSE.V.DCB# = DCBNUM(M$DISK_OUT);
      508    19258    2         DISK_OPEN.V.DCB# = DCBNUM(M$DISK_OUT);
      509    19259    2         DISK_OPEN.V.FUN# = %CREATE#;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:15   
      510    19260
      511    19261    2         IF DISK_DEST_SN.SN#(0) ~= ' '
      512    19262    2          THEN TO_DISK_SN.SN#(0) = DISK_DEST_SN.SN#(0);
      513    19263    2         DISK_OPEN.SN_ = VECTOR(TO_DISK_SN);
      514    19264    2         DISK_OPEN.V.RES# = DISK_DEST_RES.NAME;
      515    19265    2         REPLACE_AD_OR_FD.SN_ = DISK_OPEN.SN_;
      516    19266    2         GET_AD_OR_FD.SN_ = DISK_OPEN.SN_;
      517    19267
      518    19268    2         IF DISK_DEST_ACCT.ACCT# ~= ' '
      519    19269    2          THEN TO_DISK_ACCT = DISK_DEST_ACCT;
      520    19270    2         DISK_OPEN.ACCT_ = VECTOR(TO_DISK_ACCT);
      521    19271
      522    19272    2         REPLACE_AD_OR_FD.ACCT_ = VECTOR(TO_DISK_ACCT);
      523    19273    2         GET_AD_OR_FD.ACCT_ = VECTOR(TO_DISK_ACCT);
      524    19274
      525    19275    2         DISK_OPEN.NAME_ = VECTOR(TO_DISK_NAME);
      526    19276    2         DISK_CLOSE.SN_ = VECTOR(SOURCE_TAPE_SN);
      527    19277
      528    19278    3         DO CASE( TAPE_OPTION.PROTTYPE );
      529    19279    3          CASE( %PROTECTED );
      530    19280    3            IF DISK_DEST_EXIST = 0
      531    19281    3             THEN DISK_DEST_EXIST = %ERROR#;
      532    19282    3          CASE( %UNPROTECTED );
      533    19283    3            IF COMMAND = %DUAL   /* Honor TO/OVER specif. for OPEN UPDATE as     */
      534    19284    3             THEN;               /* UNPROTECT does not apply to a dest. file     */
      535    19285    3             ELSE DISK_DEST_EXIST = %NEWFILE#;
      536    19286    3          CASE( %INCREMENTAL );
      537    19287    3            DISK_DEST_EXIST = %NEWFILE#;
      538    19288                                      /* But we must check as files are encountered   */
      539    19289    3          CASE( ELSE );
      540    19290         /* Leave DISK_DEST_EXIST to default value set by ON, OVER, or TO specification */
      541    19291    3          END;
      542    19292
      543    19293    2         DISK_OPEN.V.EXIST# = DISK_DEST_EXIST;
      544    19294    2         END;
      545    19295
      546    19296        /***
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:16   
      547    19297         *** Handle special DUAL operations.
      548    19298         ***/
      549    19299
      550    19300    1      IF COMMAND = %REAL_DUAL
      551    19301    2       THEN DO;
      552    19302    2         IF TAPE_OPTION.PROTTYPE ~= %INCREMENTAL
      553    19303    3          THEN DO;                         /* DUAL ALL                           */
      554    19304    3            OPEN_PRIME_DUAL.SN_ = VECTOR(TO_DISK_SN);
      555    19305    3            OPEN_PRIME_DUAL.V.RES# = DISK_DEST_RES.NAME;
      556    19306    3            OPEN_PRIME_DUAL.V.OPER.NXTA# = '1'B;
      557    19307    3            OPEN_PRIME_DUAL.V.OPER.NXTF# = '1'B;
      558    19308    3            OPEN_PRIME_DUAL.NAME_ = VECTOR ( ERASE );
      559    19309    3            OPEN_PRIME_DUAL.V.FUN# = %IN#;
      560    19310    3            OPEN_PRIME_DUAL.ACCT_ = VECTOR ( BACKUP_ACCT );
      561    19311    3            CALL M$OPEN ( OPEN_PRIME_DUAL )
      562    19312    4             WHENRETURN DO;
      563    19313    4               CALL FLI$RPT_ERR( E_NOT_SCRATCH_PACK );
      564    19314    4               GOTO CLSALT;
      565    19315    4               END;
      566    19316    4             WHENALTRETURN DO;
      567    19317    4               OPEN_PRIME_DUAL.V.INITZ.SCRUB# = '0'B;
      568    19318    4               OPEN_PRIME_DUAL.ACCT_ = VECTOR(NIL);
      569    19319    4   KEEP_OPENING: ;
      570    19320    5               DO SELECT ( B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.CODE );
      571    19321    5                  SELECT ( %E$NOKEY );
      572    19322    5                  CALL M$OPEN ( OPEN_PRIME_DUAL ) ALTRET ( KEEP_OPENING );
      573    19323    5                  CALL FLI$RPT_ERR( E_NOT_SCRATCH_PACK );
      574    19324    5                  GOTO CLSALT;
      575    19325    5                  SELECT ( %E$ADEOF );
      576    19326    5                  SELECT ( ELSE );
      577    19327    5               CALL FLI$RPT_ERR;
      578    19328    5               GOTO CLSALT;
      579    19329    5                  END;
      580    19330    4               END;
      581    19331    3            OPEN_PRIME_DUAL.SN_ = VECTOR(DPLIST);
      582    19332    3            OPEN_PRIME_DUAL.V.RES# = DPRESLIST.NAME(0);
      583    19333    3            OPEN_PRIME_DUAL.NAME_ = VECTOR(PRIME_FILE);
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:17   
      584    19334    3            OPEN_PRIME_DUAL.ACCT_ = VECTOR(BACKUP_ACCT);
      585    19335    3            OPEN_PRIME_DUAL.V.OPER = '0'B;
      586    19336    3            OPEN_PRIME_DUAL.V.INITZ.SCRUB# = '1'B;
      587    19337         /***
      588    19338          *** Build record for :PRIME and :DUAL files. Use volume serial number from VID.
      589    19339          ***/
      590    19340    3            CALL FLM_GET_PRIME_VSN( PRIME_DUAL_BUF.PRIME ) ALTRET(ERRCLSALT);
      591    19341    3            PRIME_DUAL_BUF.DUAL = TO_DISK_SN.SN#(0);
      592    19342    3            CALL M$TIME( GET_NOW_UTS );
      593    19343    3            PRIME_DUAL_BUF.UTS = NOW_UTS;
      594    19344
      595    19345    3            OPEN_PRIME_DUAL.V.FUN# = %CREATE#;
      596    19346    3            OPEN_PRIME_DUAL.V.EXPIRE# = %NEVER#;
      597    19347    3            CALL M$OPEN( OPEN_PRIME_DUAL )
      598    19348    4             WHENALTRETURN DO;
      599    19349    4               IF B$TCB.ALT$->B$ALT.ERR.CODE = %E$NONEWFD
      600    19350    5                THEN DO;
      601    19351    5                  CALL FLI$BUILD_$$EFT ( DPLIST.SN#(0))  ALTRET(ERRCLSALT);
      602    19352    5                  CALL M$OPEN( OPEN_PRIME_DUAL ) ALTRET( ERRCLSALT );
      603    19353    5                  END;
      604    19354    5                ELSE DO;
      605    19355    5   ERRCLSALT:     ;
      606    19356    5                  CALL FLI$RPT_ERR;
      607    19357    5   CLSALT:        ;
      608    19358    5                  IF DCBADDR(DCBNUM(M$STATUS))->F$DCB.FCD#
      609    19359    5                   THEN CALL M$CLOSE( CLOSE_PRIME_DUAL )
      610    19360    6                      WHENALTRETURN DO;
      611    19361    6                        END;
      612    19362    5                  IF FPT_EXIT.V.STEPCC# < %SERIOUS_ERROR
      613    19363    5                   THEN FPT_EXIT.V.STEPCC# = %SERIOUS_ERROR;
      614    19364    5                  IF DCBADDR(DCBNUM(M$DEL_LIST))->F$DCB.FCD#
      615    19365    5                   THEN CALL M$CLOSE( CLOSE_DELETE_LIST )
      616    19366    6                      WHENALTRETURN DO;
      617    19367    6                        END;
      618    19368    5                  IF DCBADDR(DCBNUM(M$NODATA_LIST))->F$DCB.FCD#
      619    19369    5                   THEN CALL M$CLOSE( CLOSE_NODATA_LIST )
      620    19370    6                      WHENALTRETURN DO;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:18   
      621    19371    6                        END;
      622    19372    5                  ALTRETURN;
      623    19373    5                  END;
      624    19374    4               END;
      625    19375    3            CALL M$WRITE( WRITE_PRIME_DUAL ) ALTRET( ERRCLSALT );
      626    19376    3            CALL M$CLOSE( CLOSE_PRIME_DUAL ) ALTRET( ERRCLSALT );
      627    19377
      628    19378    3            OPEN_PRIME_DUAL.SN_ = VECTOR(TO_DISK_SN);
      629    19379    3            OPEN_PRIME_DUAL.V.RES# = DISK_DEST_RES.NAME;
      630    19380    3            OPEN_PRIME_DUAL.ACCT_ = VECTOR ( BACKUP_ACCT );
      631    19381    3            OPEN_PRIME_DUAL.NAME_ = VECTOR(DUAL_FILE);
      632    19382    3            OPEN_PRIME_DUAL.V.FUN# = %CREATE#;
      633    19383    3            OPEN_PRIME_DUAL.V.EXPIRE# = %NEVER#;
      634    19384    3            CALL M$OPEN( OPEN_PRIME_DUAL )
      635    19385    4             WHENALTRETURN DO;
      636    19386    4               IF B$TCB.ALT$->B$ALT.ERR.CODE = %E$NONEWFD
      637    19387    5                THEN DO;
      638    19388    5                  CALL FLI$BUILD_$$EFT ( TO_DISK_SN.SN#(0))  ALTRET(ERRCLSALT);
      639    19389    5                  CALL M$OPEN( OPEN_PRIME_DUAL ) ALTRET( ERRCLSALT );
      640    19390    5                  END;
      641    19391    4                ELSE GOTO ERRCLSALT;
      642    19392    4               END;
      643    19393    3            CALL M$WRITE( WRITE_PRIME_DUAL ) ALTRET( ERRCLSALT );
      644    19394    3            CALL M$CLOSE( CLOSE_PRIME_DUAL ) ALTRET( ERRCLSALT );
      645    19395    3            END;
      646    19396    3          ELSE DO;                         /* DUAL INCREMENTAL                   */
      647    19397    3            OPEN_PRIME_DUAL.V.OPER = '0'B;
      648    19398    3            OPEN_PRIME_DUAL.V.INITZ.SCRUB# = '1'B;
      649    19399    3            OPEN_PRIME_DUAL.SN_ = VECTOR(DPLIST);
      650    19400    3            OPEN_PRIME_DUAL.V.RES# = DPRESLIST.NAME(0);
      651    19401    3            OPEN_PRIME_DUAL.NAME_ = VECTOR(PRIME_FILE);
      652    19402    3            OPEN_PRIME_DUAL.ACCT_ = VECTOR(BACKUP_ACCT);
      653    19403    3            OPEN_PRIME_DUAL.V.FUN# = %IN#;
      654    19404    3            CALL M$OPEN( OPEN_PRIME_DUAL ) ALTRET( ERRCLSALT );
      655    19405    3            CALL M$READ( READ_PRIME_DUAL ) ALTRET( ERRCLSALT );
      656    19406    3            IF DISK_DEST_SN.SN#(0) = ' '
      657    19407    4             THEN DO;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:19   
      658    19408    4               TO_DISK_SN.SN#(0) = PRIME_DUAL_BUF.DUAL;
      659    19409    4               DISK_DEST_SN.SN#(0) = PRIME_DUAL_BUF.DUAL;
      660    19410    4               END;
      661    19411    3            IF PRIME_DUAL_BUF.DUAL ~= TO_DISK_SN.SN#(0)
      662    19412    4             THEN DO;                      /* Incorrect DUAL volume              */
      663    19413    4               CALL FLI$RPT_ERR( E_WRONG_DUAL );
      664    19414    4               GOTO CLSALT;
      665    19415    4               END;
      666    19416    3            CALL M$CLOSE( CLOSE_PRIME_DUAL ) ALTRET( ERRCLSALT );
      667    19417
      668    19418    3            OPEN_PRIME_DUAL.SN_ = VECTOR(TO_DISK_SN);
      669    19419    3            OPEN_PRIME_DUAL.V.RES# = DISK_DEST_RES.NAME;
      670    19420    3            OPEN_PRIME_DUAL.NAME_ = VECTOR(DUAL_FILE);
      671    19421    3            CALL M$OPEN( OPEN_PRIME_DUAL ) ALTRET( ERRCLSALT );
      672    19422    3            CALL M$READ( READ_PRIME_DUAL ) ALTRET( ERRCLSALT );
      673    19423    3            CALL M$CLOSE( CLOSE_PRIME_DUAL ) ALTRET( ERRCLSALT );
      674    19424
      675    19425    3            CALL FLM_GET_PRIME_VSN( VSN ) ALTRET(ERRCLSALT); /* Get prime pack VSN */
      676    19426    3            IF PRIME_DUAL_BUF.PRIME ~= VSN
      677    19427    4             THEN DO;                      /* Incorrect PRIME volume             */
      678    19428    4               CALL FLI$RPT_ERR( E_WRONG_PRIME );
      679    19429    4               GOTO CLSALT;
      680    19430    4               END;
      681    19431    3            OPEN_PRIME_DUAL.V.FUN# = %CREATE#;
      682    19432    3            OPEN_PRIME_DUAL.V.EXIST# = %OLDFILE#;
      683    19433    3            OPEN_PRIME_DUAL.V.EXPIRE# = %NEVER#;
      684    19434    3            CALL M$TIME( GET_NOW_UTS );
      685    19435    3            PRIME_DUAL_BUF.UTS = NOW_UTS;
      686    19436    3            CALL M$OPEN( OPEN_PRIME_DUAL ) ALTRET( ERRCLSALT );
      687    19437    3            CALL M$WRITE( WRITE_PRIME_DUAL ) ALTRET( ERRCLSALT );
      688    19438    3            CALL M$CLOSE( CLOSE_PRIME_DUAL ) ALTRET( ERRCLSALT );
      689    19439
      690    19440    3            OPEN_PRIME_DUAL.NAME_ = VECTOR(PRIME_FILE);
      691    19441    3            OPEN_PRIME_DUAL.SN_ = VECTOR(DPLIST);
      692    19442    3            OPEN_PRIME_DUAL.V.RES# = DPRESLIST.NAME(0);
      693    19443    3            CALL M$OPEN( OPEN_PRIME_DUAL ) ALTRET( ERRCLSALT );
      694    19444    3            CALL M$WRITE( WRITE_PRIME_DUAL ) ALTRET( ERRCLSALT );
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:20   
      695    19445    3            CALL M$CLOSE( CLOSE_PRIME_DUAL ) ALTRET( ERRCLSALT );
      696    19446    3            END;
      697    19447    2         END;
      698    19448
      699    19449        /***
      700    19450         *** Erased SN list means reuse the last reels used.
      701    19451         ***/
      702    19452
      703    19453    1      IF TAPE_OPEN.SN_ = VECTOR(ERASE) AND COMMAND = %CHECK
      704    19454    2       THEN DO;                            /* Use the last reels used            */
      705    19455    2         USE_TSN_USED = '1'B;
      706    19456    2         SET_NBR = 1;
      707    19457    2         CALL FLI$TSN_USED( 1,SNLIST_NBR )
      708    19458    3          WHENALTRETURN DO;                /* Not even one previous SN list      */
      709    19459    3            CALL FLI$RPT_ERR( E_NO_PREVIOUS_SAVE );
      710    19460    3            ALTRETURN;
      711    19461    3            END;
      712    19462    2         END;
      713    19463    1       ELSE USE_TSN_USED = '0'B;
      714    19464
      715    19465        /***
      716    19466         *** Initialize for main loop.
      717    19467         ***/
      718    19468
      719    19469    1      ANY_FILES_FOUND = '0'B;
      720    19470    1      OLD_SN = ' ';
      721    19471    1      DEL_LIST_REC.CSN = ' ';
      722    19472    1      DEL_LIST_REC.CFSN = 0;
      723    19473    1      NBR_DEL_FILES = 0;
      724    19474    1      M$DISK_OUT$ = DCBADDR(DCBNUM(M$DISK_OUT));
      725    19475    1      M$DISK_IN$ = DCBADDR(DCBNUM(M$DISK_IN));
      726    19476
      727    19477    1      IF TAPE_OPTION.CHECK AND COMMAND = %CHECK
      728    19478    1       THEN CATALOG_ON = '0'B;             /* Don't catalog during CHECK phase   */
      729    19479
      730    19480    1      ERR = '0'B;
      731    19481    1      SAVE_ERR = '0'B;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:21   
      732    19482    1      GOING_TO_DEST = '0'B;
      733    19483    1      FIT_UPDATE = '0'B;
      734    19484    1      FIT_ONLY_SAVED = '0'B;
      735    19485    1      SKIP_ACCT.ACCT# = ' ';
      736    19486
      737    19487    1      SAVE_SN = ' ';
      738    19488    1      SAVE_FSN = 0;
      739    19489
      740    19490        /***
      741    19491         *** Go for it!
      742    19492         ***/
      743    19493
      744    19494    2      DO WHILE('1'B);
      745    19495
      746    19496
      747    19497    2   MAIN_LOOP:
      748    19498    3         DO WHILE( BREAK_COUNT = 0 );
      749    19499
      750    19500
      751    19501    4            DO CASE( SOURCE );
      752    19502    4             CASE( %DISK@ );
      753    19503    4               CALL FLN$DISK_OPEN_NEXT( SOURCE_DCB$, DCB#, DCB_NBR, FPARAM_, ERR )
             19503                        ALTRET( JUSTDONE );
      754    19504    4   PROCESS_DISK_FILE:
      755    19505    5               DO SELECT( ERR.CODE );
      756    19506    5                  SELECT( %E$ADEOF );
      757    19507    5                  SOURCE_FILE_TYPE = %ACCT_DIR;
      758    19508    5                  IF COMMAND = %REAL_DUAL AND TAPE_OPTION.PROTTYPE = %INCREMENTAL
      759    19509    6                   THEN DO;
      760    19510    6                     SAVE_AD_FD_FIT_.PTR$->ONE_GRAN = FPARAM_.PTR$->ONE_GRAN;
      761    19511    6                     END;
      762    19512    5                  SELECT( %E$NOKEY );
      763    19513    5                  SOURCE_FILE_TYPE = %DEL_ACCT;
      764    19514    5                  SELECT( %E$FDEOF );
      765    19515    5                  SOURCE_FILE_TYPE = %FILE_DIR;
      766    19516    5                  IF COMMAND = %REAL_DUAL AND TAPE_OPTION.PROTTYPE = %INCREMENTAL
      767    19517    6                   THEN DO;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:22   
      768    19518    6                     SAVE_AD_FD_FIT_.PTR$->ONE_GRAN = FPARAM_.PTR$->ONE_GRAN;
      769    19519    6                     END;
      770    19520    5                  SELECT( %E$NOFILE );
      771    19521    5                  SOURCE_FILE_TYPE = %CLEANUP_FILE;
      772    19522    5                  SELECT( %E$NOPROC );
      773    19523    5                  SOURCE_FILE_TYPE = %CLEANUP_ACCT;
      774    19524    5                  SELECT( 0 );
      775    19525    5                  IF SOURCE_DCB$->F$DCB.DESC.DELF#
      776    19526    5                   THEN IF SOURCE_DCB$->F$DCB.DESC.ARCHIVE#
      777    19527    5                      THEN SOURCE_FILE_TYPE = %INACTIVE_FILE;
      778    19528    5                      ELSE SOURCE_FILE_TYPE = %DEL_FILE;
      779    19529    6                   ELSE DO;
      780    19530    6                     SOURCE_FILE_TYPE = %REG_FILE;
      781    19531    6                     CODE$ = PINCRW( FPARAM_.PTR$, SIZEW(FM$GRAN) );
      782    19532    6                     CALL XSF$LOCCODP( CODE$, 03 )
      783    19533    7                      WHENRETURN DO;
      784    19534    7                        NBR_GRANS_TO_READ = CODE03.UGRANS - SOURCE_DCB$->F$DCB.CRECNO;
      785    19535                                                /* Some handling of ACUP option       */
      786    19536    7                        END;
      787    19537    7                      WHENALTRETURN DO; /* Shouldn't get here, but assume ACUP   */
      788    19538    7                        NBR_GRANS_TO_READ = 0;
      789    19539    7                        END;
      790    19540    6                     END;
      791    19541    5                  SELECT( ELSE );
      792    19542    5               SOURCE_FILE_TYPE = %REG_FILE; /* Channel through error reporting  */
      793    19543    5                  END;
      794    19544    4             CASE( %TAPE@ );
      795    19545    4               IF COMMAND = %REBUILD
      796    19546    5                THEN DO;              /* Always get file directory for rebuild   */
      797    19547    5                  SAVE_DISK_OPTION_DIR = DISK_OPTION.DIR;
      798    19548    5                  DISK_OPTION.DIR = '1'B;
      799    19549        /***
      800    19550         *** If a block count error as a result of trying to continue after a tape read,
      801    19551         *** or an I/O error encountered, continue processing.
      802    19552         ***/
      803    19553    5   OPEN_REBUILD_TAPE_FILE:
      804    19554    5                  CALL FLC$TAPE_OPEN_NEXT( SOURCE_DCB$, FPARAM_, ERR )
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:23   
      805    19555    6                   WHENALTRETURN DO;
      806    19556    6                     IF (TAPE_OPEN.V.IOERROK# AND ERR.CODE = %E$BLKCNT)
      807    19557    6                       OR (TAPE_OPEN.V.IOERROK# AND ERR.CODE = %E$IO_ERR)
      808    19558    6                      THEN GOTO OPEN_REBUILD_TAPE_FILE;
      809    19559    6                      ELSE GOTO CHKALT;
      810    19560    6                     END;
      811    19561        /***
      812    19562         *** Write out rebuild record so that EFT can continue from this point
      813    19563         *** on a rebuild continuation rather than starting from the beginning and
      814    19564         *** restoring all files should an error occur. REBUILD_BUF info. also used
      815    19565         *** when attempting to continue after avail. pack space exceeded.
      816    19566         ***/
      817    19567    6                  DO CASE( BLK_TAG.TYPE );
      818    19568    6                   CASE( %ACCT_DIR );
      819    19569    6                     REBUILD_BUF.START.ACCT = FIRST_ACCT;
      820    19570    6                     REBUILD_BUF.START.FILE.L# = FIRST_FILE.L#;
      821    19571    6                     REBUILD_BUF.START.FILE.NAME# = FIRST_FILE.NAME#;
      822    19572    6                   CASE( %FILE_DIR, %DEL_ACCT, %CLEANUP_ACCT );
      823    19573    6                     REBUILD_BUF.START.ACCT.ACCT# = SOURCE_DCB$->F$DCB.ACCT#;
      824    19574    6                     REBUILD_BUF.START.FILE.L# = FIRST_FILE.L#;
      825    19575    6                     REBUILD_BUF.START.FILE.NAME# = FIRST_FILE.NAME#;
      826    19576    6                   CASE( ELSE);            /* All file types                     */
      827    19577    6                     REBUILD_BUF.START.ACCT.ACCT# = SOURCE_DCB$->F$DCB.ACCT#;
      828    19578    6                     REBUILD_BUF.START.FILE = SOURCE_DCB$->F$DCB.NAME#;
      829    19579    6                   END;
      830    19580    5                  REBUILD_BUF.VOLUME = SOURCE_DCB$->F$DCB.VOL#;
      831    19581    5                  REBUILD_BUF.FSN = TAPE_FSN;
      832    19582    5                  REBUILD_BUF.TSN = TAPE_SN;
      833    19583    5                  REBUILD_BUF.DEN = M$TAPE00$->F$DCB.DENSITY#;
      834    19584    5                  REBUILD_BUF.DIR = SAVE_DISK_OPTION_DIR;
      835    19585    5                  REBUILD_BUF.PAD = DISK_OPTION.PAD;
      836    19586    5                  REBUILD_BUF.IOERRORC = TAPE_OPTION.IOERRORC;
      837    19587    5                  WRITE_REBUILD.BUF_ = VECTOR(REBUILD_BUF);
      838    19588    5                  WRITE_REBUILD.KEY_ = VECTOR(REBUILD_KEY);
      839    19589    5                  CALL M$WRITE( WRITE_REBUILD ) ALTRET(JUSTSTOP);
      840    19590
      841    19591    5                  DISK_OPTION.DIR = SAVE_DISK_OPTION_DIR;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:24   
      842    19592    5                  END;
      843    19593    5                ELSE DO;
      844    19594    5   OPEN_TAPE_FILE:
      845    19595    5                  CALL FLC$TAPE_OPEN_NEXT( SOURCE_DCB$, FPARAM_, ERR )
      846    19596    6                   WHENALTRETURN DO;
      847    19597        /***
      848    19598         *** If end of volume on first attempt to find file on tape (on an OPEN
      849    19599         *** specifying one file per line), rewind and search from the beginning
      850    19600         *** of tape.
      851    19601         ***/
      852    19602    6                     IF (ERR.CODE = %E$EOSET AND SAVE_ERR.CODE ~= %E$EOSET) /* 1st? */
      853    19603    6                       AND (COMMAND = %RESTORE /* Open input command?            */
      854    19604    6                       AND TAPE_OPTION.OPEN_FUNCTION = %OPEN_INPUT)
      855    19605    6                       AND (DISK_FILE_SPEC.NBR = 1 /* One file per line copy?    */
      856    19606    6                       AND DISK_FILE_SPEC.SPEC.START.FILE.NAME#(0) =
      857    19607    6                       DISK_FILE_SPEC.SPEC.STOP.FILE.NAME#(0))
      858    19608    7                      THEN DO;        /* Check if EOSET after file was copied    */
      859    19609    7                        IF SAVE_DCB$->F$DCB.NAME#.C = DISK_FILE_SPEC.SPEC.START.FILE.
             19609                                 NAME#(0)
      860    19610    7                          AND SAVE_DCB$->F$DCB.ACCT# = DISK_FILE_SPEC.SPEC.START.ACCT.
             19610                                   ACCT#(0)
      861    19611    7                         THEN GOTO CHKALT;
      862    19612    7                        SAVE_ERR = ERR; /* File not found, rewind and try again  */
      863    19613    7                        REWIND_TAPE.V.PSN# = TAPE_SN;
      864    19614    7                        CALL M$REW( REWIND_TAPE )
      865    19615    8                         WHENALTRETURN DO;
      866    19616    8                           END;
      867    19617    7                        GOTO OPEN_TAPE_FILE;
      868    19618    7                        END;
      869    19619    7                      ELSE DO;
      870    19620        /***
      871    19621         *** If a block count error as a result of trying to continue after a tape read
      872    19622         *** or an I/O error was encountered, continue processing.
      873    19623         ***/
      874    19624    7                        IF (TAPE_OPEN.V.IOERROK# AND ERR.CODE = %E$BLKCNT)
      875    19625    7                          OR (TAPE_OPEN.V.IOERROK# AND ERR.CODE = %E$IO_ERR)
      876    19626    7                         THEN GOTO OPEN_TAPE_FILE;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:25   
      877    19627    7                         ELSE GOTO CHKALT;
      878    19628    7                        END;
      879    19629    6                     END;
      880    19630    5                  END;
      881    19631    4               SAVE_ERR = '0'B;
      882    19632    4               SOURCE_FILE_TYPE = BLK_TAG.TYPE;
      883    19633    4               SAVE_SN = TAPE_SN;
      884    19634    4               SAVE_FSN = TAPE_FSN;
      885    19635    4             END;
      886    19636
      887    19637    4            DO CASE( SOURCE_FILE_TYPE );
      888    19638
      889    19639    4             CASE( %FILE_DIR, %ACCT_DIR, %DEL_ACCT, %CLEANUP_ACCT );
      890    19640    4               IF NOT (TAPE_OPTION.CHECK AND COMMAND = %CHECK)
      891    19641    5                THEN DO;
      892    19642    6                  DO CASE( DEST );
      893    19643    6                   CASE( %DISK@ );
      894    19644    6                     CALL FLM_ACCOUNT_TO_DISK_HANDLING ALTRET(JUSTSTOP);
      895    19645    6                     DEL_LIST_REC.TO_ACCT = TO_DISK_ACCT.ACCT#;
      896    19646    6                     DEL_LIST_REC.TO_SN = TO_DISK_SN.SN#(0);
      897    19647    6                   CASE( %TAPE@ );
      898    19648    6                     CALL FLS$FILE_PACKER( SOURCE_DCB$, DCB#, FPARAM_, SAVE_SN,
      899    19649    6                       SAVE_FSN, CROSSED, ERR, ABORT, FIT_ONLY_SAVED, COMMAND )
      900    19650    7                      WHENALTRETURN DO;
      901    19651        /***
      902    19652         *** If disc read error, ouput error message and continue with processing
      903    19653         *** next file. Terminate on tape write error.
      904    19654        ***/
      905    19655    7                        IF ABORT
      906    19656    7                         THEN GOTO JUSTSTOP;
      907    19657    7                        CALL FLI$RPT_ERR (E_BAD_TAPE_FILE, DCB#);
      908    19658    7                        IF FPT_EXIT.V.STEPCC# < %DISK_ERROR
      909    19659    7                         THEN FPT_EXIT.V.STEPCC# = %DISK_ERROR;
      910    19660    7                        END;
      911    19661    6                     DEL_LIST_REC.TO_ACCT = ' ';
      912    19662    6                     DEL_LIST_REC.TO_SN = ' ';
      913    19663    6                   END;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:26   
      914    19664    5                  IF DISK_OPTION.DELETE
      915    19665    5                    OR (DISK_OPTION.CLEANUP AND SOURCE_FILE_TYPE = %DEL_ACCT)
      916    19666    5                   THEN CALL FLM_ADD_TO_DEL_LIST( '0'B ) ALTRET( JUSTSTOP );
      917    19667    5                  IF SOURCE = %TAPE@
      918    19668    5                   THEN CALL FLP$WR_FILE_INFO( SOURCE_DCB$, FPARAM_.PTR$, TAPE_SN,
      919    19669    5                       TAPE_FSN, CROSSED, '1'B, ERR, PR_DEV_LT, '0'B )
      920    19670    5                       ALTRET( JUSTSTOP );
      921    19671    5                   ELSE CALL FLP$WR_FILE_INFO( SOURCE_DCB$, FPARAM_.PTR$, SAVE_SN,
      922    19672    5                       SAVE_FSN, CROSSED, '1'B, ERR, PR_DEV_LT, '0'B )
      923    19673    5                       ALTRET (JUSTSTOP );
      924    19674    6                  DO SELECT( ERR.CODE );
      925    19675    6                     SELECT( 0, %E$FDEOF, %E$ADEOF, %E$NEWREC, %E$NOKEY, %E$NOPROC );
      926    19676                       /* Normally expected "errors" (internally used error codes)    */
      927    19677    6                     SELECT( ELSE );
      928    19678    6                  CALL FLI$RPT_ERR( ERR, DCB# );
      929    19679    6                     END;
      930    19680    5               IF SOURCE = %DISK@
      931    19681    5                THEN CALL FLN$DISK_CLOSE_NEXT( DCB_NBR );
      932    19682        /***
      933    19683         *** If 1st pass on DUAL INCR (deleting files), must delete files on the dual
      934    19684         *** packset which don't exist on the prime packset. FM does not maintain
      935    19685         *** deleted file entries in directory for NOBACKUP accounts so DELF search
      936    19686         *** won't work as when used for BACKUP,DEF BACKUP accounts. Also deleted file
      937    19687         *** entries will not exist if the command sequence DUAL ALL,SAVE,DUAL INCR IS
      938    19688         *** executed (files from a backup acct. deleted prior to a SAVE).
      939    19689         ***/
      940    19690    5               IF COMMAND = %REAL_DUAL
      941    19691    5                 AND TAPE_OPTION.PROTTYPE = %INCREMENTAL
      942    19692    5                 AND DISK_SRCHCOND.DELF#
      943    19693    5                THEN CALL FLM_DELETE_DUAL_FILES; /* Del. files on dual packset   */
      944    19694    5                  END;
      945    19695    4               ANY_FILES_FOUND = '1'B;
      946    19696
      947    19697    4             CASE( %INACTIVE_FILE, %REG_FILE, %ACUP_FILE, %DEL_FILE, %CLEANUP_FILE, %
             19697                      IDS_FAST_FILE );
      948    19698    4               IF ERR AND SOURCE = %DISK@
      949    19699    5                THEN DO;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:27   
      950    19700        /***
      951    19701         *** If file busy on a SAVE,BACKUP,TRANSPORT or TRANSFER (PROTECTED), try
      952    19702         *** opening with fun=update,share=in as it should be permissable to save or
      953    19703         *** copy a file already opened share=all,fun=in.
      954    19704        ***/
      955    19705    5                  IF ERR.CODE = %E$FILEBUSY
      956    19706    6                   THEN DO;
      957    19707    6                     IF (COMMAND = %SAVE)
      958    19708    6                       OR (COMMAND = %BACKUP)
      959    19709    6                       OR (COMMAND = %OPEN_CREATE AND TAPE_OPTION.PROTTYPE ~= %
             19709                                UNPROTECTED)
      960    19710    6                       OR (COMMAND = %OPEN_EXTEND AND TAPE_OPTION.PROTTYPE ~= %
             19710                                UNPROTECTED)
      961    19711    6                       OR (COMMAND = %DUAL AND TAPE_OPTION.PROTTYPE ~= %UNPROTECTED)
      962    19712    7                      THEN DO;
      963    19713    7                        DISK_REOPEN.V.DCB# = DCB#;
      964    19714    7                        DISK_REOPEN.FPARAM_ = FPARAM_;
      965    19715    7                        CALL M$OPEN( DISK_REOPEN )
      966    19716    8                         WHENRETURN DO;    /* Was able to open busy file         */
      967    19717    8                           ERR = '0'B;
      968    19718    8                           GOTO PROCESS_DISK_FILE;
      969    19719    8                           END;
      970    19720    7                        END;
      971    19721    6                     END;
      972    19722    5                  CALL FLP$WR_FILE_INFO( SOURCE_DCB$, ADDR(NIL), SAVE_SN, SAVE_FSN,
             19722                           CROSSED, , ERR, PR_DEV_LT,'0'B);
      973    19723    5                  CALL FLI$RPT_ERR( ERR, DCB# );
      974    19724    5                  IF ERR.CODE = %E$FILEBUSY OR ERR.CODE = %E$NOACCESS
      975    19725    5                    OR ERR.CODE = %E$JRNLERR OR ERR.CODE = %E$NOFILE
      976    19726    5                    OR ERR.CODE = %E$NOSHRDS OR ERR.CODE = %E$BADFIT
      977    19727    5                    OR ERR.CODE = %E$IOERR   OR ERR.CODE = %E$BROKEN
      978    19728    6                   THEN DO;
      979    19729    6                     IF FPT_EXIT.V.STEPCC#<%MINOR_ERROR
      980    19730    6                      THEN FPT_EXIT.V.STEPCC# = %MINOR_ERROR;
      981    19731    6                     END;
      982    19732    5                   ELSE GOTO JUSTSTOP;
      983    19733    5   IGNORE_FILE:   ;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:28   
      984    19734    5                  CALL FLN$DISK_CLOSE_NEXT( DCB_NBR );
      985    19735    5                  END;
      986    19736    5                ELSE DO;
      987    19737    6                  DO CASE( SOURCE );
      988    19738    6                   CASE( %DISK@ );
      989    19739    6                     CALL FLC$CRIT_CHECK( SOURCE_DCB$, FPARAM_.PTR$ ) ALTRET(
             19739                              IGNORE_FILE );
      990    19740        /***
      991    19741         *** On a SAVE or BACKUP operation, if file attribute is nbackup, don't
      992    19742         *** save the file.
      993    19743        ***/
      994    19744    6                     IF (SOURCE_FILE_TYPE = %REG_FILE) AND (COMMAND = %BACKUP)
      995    19745    6                       OR (SOURCE_FILE_TYPE = %REG_FILE) AND (COMMAND = %SAVE)
      996    19746    7                      THEN DO;
      997    19747    7                        IF NOT CODE03.DESC.BUPM
      998    19748    8                         THEN DO;
      999    19749    8                           ERR.CODE = %E$CANT_SAVE_FILE;
     1000    19750    8                           CALL FLP$WR_FILE_INFO( SOURCE_DCB$, ADDR(NIL), SAVE_SN,
     1001    19751    8                             SAVE_FSN, CROSSED, , ERR, PR_DEV_LT,'0'B);
     1002    19752    8                           CALL FLI$RPT_ERR( E_CANT_SAVE_FILE, DCB# );
     1003    19753    8                           GOTO IGNORE_FILE;
     1004    19754    8                           END;
     1005    19755    7                        END;
     1006    19756        /***
     1007    19757         *** On a DUAL operation, don't move newly created :PRIME.$$EFT file or
     1008    19758         *** a :DUAL.$EFT file to dest. pack. :PRIME does not belong on the dest. pack
     1009    19759         *** and a source :DUAL will clobber the newly created :DUAL on the dest.
     1010    19760         *** pack or delete if it's a deleted file.
     1011    19761         ***/
     1012    19762    6                     IF (COMMAND = %REAL_DUAL)
     1013    19763    6                       AND (SOURCE_DCB$->F$DCB.ACCT# = BACKUP_ACCT.ACCT#)
     1014    19764    7                      THEN DO;
     1015    19765    7                        IF (SOURCE_DCB$->F$DCB.NAME#.C = PRIME_FILE.NAME#)
     1016    19766    7                          OR (SOURCE_DCB$->F$DCB.NAME#.C = DUAL_FILE.NAME#)
     1017    19767    7                         THEN GOTO IGNORE_FILE;
     1018    19768    7                        END;
     1019    19769    6                     SAVE_DCB$ = SOURCE_DCB$;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:29   
     1020    19770    6                     SAVE_FIT_ = FPARAM_;
     1021    19771    6                   CASE( %TAPE@ );
     1022    19772    6                     SAVE_DCB$->F$DCB = SOURCE_DCB$->F$DCB;
     1023    19773    6                     SAVE_FIT_.PTR$->ONE_GRAN = FPARAM_.PTR$->ONE_GRAN;
     1024    19774    6                   END;
     1025    19775
     1026    19776    6                  DO CASE( DEST );
     1027    19777    6                   CASE( %DISK@ );
     1028    19778    6                     TO_DISK_NAME = SAVE_DCB$->F$DCB.NAME#;
     1029    19779    6                     IF DISK_DEST_SN.SN#(0) = ' '
     1030    19780    6                      THEN TO_DISK_SN.SN#(0) = SAVE_DCB$->F$DCB.PSN#;
     1031    19781    6                     IF SOURCE = %DISK@
     1032    19782    6                      THEN SAVE_SN = TO_DISK_SN.SN#(0);
     1033    19783    6                     IF DISK_DEST_ACCT.ACCT# = ' '
     1034    19784    6                      THEN TO_DISK_ACCT.ACCT# = SAVE_DCB$->F$DCB.ACCT#;
     1035    19785    6                     CALL FLM_FILE_TO_DISK_HANDLING( FIT_UPDATE ) ALTRET( JUSTSTOP );
     1036    19786    6                   CASE( %TAPE@ );
     1037    19787    6                     CALL FLS$FILE_PACKER( SOURCE_DCB$, DCB#, FPARAM_, SAVE_SN,
     1038    19788    6                       SAVE_FSN, CROSSED, ERR, ABORT, FIT_ONLY_SAVED, COMMAND )
     1039    19789    7                      WHENALTRETURN DO;
     1040    19790        /***
     1041    19791         *** If disc read error, ouput error message and continue with procesing
     1042    19792         *** next file. Terminate on tape write error.
     1043    19793        */
     1044    19794    7                        IF ABORT
     1045    19795    7                         THEN GOTO JUSTSTOP;
     1046    19796    7                        CALL FLI$RPT_ERR (E_BAD_TAPE_FILE, DCB#);
     1047    19797    7                        IF FPT_EXIT.V.STEPCC# < %DISK_ERROR
     1048    19798    7                         THEN FPT_EXIT.V.STEPCC# = %DISK_ERROR;
     1049    19799    7                        END;
     1050    19800    6                     GOING_TO_DEST = '1'B;
     1051    19801    6                   CASE( %NULL@ );
     1052    19802    6                     GOING_TO_DEST = '1'B;
     1053    19803    6                   END;
     1054    19804
     1055    19805    5                  IF ERR.CODE = %E$EOF THEN ERR = '0'B;
     1056    19806    5                  IF GOING_TO_DEST
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:30   
     1057    19807    6                   THEN DO;                /* File actually went to destination  */
     1058    19808    6                     IF DEST = %DISK@
     1059    19809    6                      THEN CALL FLM_FILE_TO_DISK_WRAPUP ALTRET(JUSTSTOP);
     1060    19810    6                     IF SOURCE = %DISK@
     1061    19811    7                      THEN DO;
     1062    19812        /***
     1063    19813         *** If disc read error when archiving or purging, don't delete the source
     1064    19814         *** file or update the fit to indicate it was archived. If read error
     1065    19815         *** due to hardware, next read attempt may net a good file.
     1066    19816         ***/
     1067    19817    7                        IF (ERR.CODE = %E$IOERR)
     1068    19818    7                          AND (COMMAND = %ARCHIVE_CMD
     1069    19819    7                          OR (COMMAND = %PURGE AND ARCHIVE$ ~= ADDR(NIL)))
     1070    19820    7                         THEN;
     1071    19821    7                         ELSE CALL FLM_FILE_FROM_DISK_WRAPUP ALTRET(JUSTSTOP);
     1072    19822    7                        END;
     1073    19823    6                     IF TAPE_OPTION.CHECK AND COMMAND = %CHECK
     1074    19824    6                      THEN /* Don't list each file...only volume changes */ ;
     1075    19825    7                      ELSE DO;
     1076    19826    7                        IF (NOT ERR AND FIT_ONLY_SAVED) /* Tell user if only FIT. */
     1077    19827    7                          OR (NOT ERR AND FIT_ONLY_RSTRD)
     1078    19828    7                          OR (NOT ERR AND COMMAND = %CHECK AND SOURCE_FILE_TYPE = %
             19828                                   ACUP_FILE)
     1079    19829    7                         THEN CALL FLP$WR_FILE_INFO( SAVE_DCB$, SAVE_FIT_.PTR$,
     1080    19830    7                             SAVE_SN, SAVE_FSN, CROSSED, , FIT_ONLY_CODE,
     1081    19831    7                             PR_DEV_LT, '0'B ) ALTRET( JUSTSTOP );
     1082    19832    7                         ELSE CALL FLP$WR_FILE_INFO( SAVE_DCB$, SAVE_FIT_.PTR$,
     1083    19833    7                             SAVE_SN, SAVE_FSN, CROSSED, , ERR, PR_DEV_LT, '0'B )
     1084    19834    7                             ALTRET( JUSTSTOP );
     1085    19835    7                        END;
     1086    19836    6                     IF ERR AND ERR.CODE ~= %E$NOFILE
     1087    19837    7                      THEN DO;             /* Report unexpected error            */
     1088    19838    7                        IF (ERR.CODE = %E$DI AND SOURCE_DCB$->F$DCB.ORG# ~= %RANDOM#
     1089    19839    7                          AND SOURCE_DCB$->F$DCB.ORG# ~= %RELATIVE#
     1090    19840    7                          AND SOURCE_DCB$->F$DCB.ORG# ~= %IDS#
     1091    19841    7                          AND SOURCE_DCB$->F$DCB.ORG# ~= %CG#)
     1092    19842    7                          OR ERR.CODE ~= %E$DI
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:31   
     1093    19843    8                         THEN DO;
     1094    19844    8                           IF SOURCE = %DISK@ AND ERR.CODE = %E$DI
     1095    19845    8                            THEN CALL FLI$RPT_ERR ( ERR, DCB# );
     1096    19846    8                            ELSE CALL FLI$RPT_ERR( ERR, 0 );
     1097    19847    8                           IF FPT_EXIT.V.STEPCC#<%MINOR_ERROR
     1098    19848    8                            THEN FPT_EXIT.V.STEPCC# = %MINOR_ERROR;
     1099    19849    8                           IF ERR.CODE = %E$SETDOWN OR ERR.CODE = %E$XCLSET
     1100    19850    9                            THEN DO;
     1101    19851    9                              FPT_EXIT.V.STEPCC# = %OPER_ERROR;
     1102    19852    9                              ALTRETURN;   /* Can't continue after this error    */
     1103    19853    9                              END;
     1104    19854    8                           END;
     1105    19855    7                        END;
     1106    19856    6                     END;
     1107    19857    6                   ELSE DO; /* File didn't go to disk. But FIT may have been mod. */
     1108    19858    6                     IF NOT ERR AND NOT FIT_UPDATE /* such as for DUAL ACUP      */
     1109    19859    6                      THEN ERR = '777777777777'O; /* Skipped                     */
     1110    19860    6                     IF (COMMAND = %REBUILD /* Output file info. only after      */
     1111    19861    6                       AND ERR.CODE = %E$PSGRANS /* attempting to delete any deleted */
     1112    19862    6                       AND TAPE_SN ~= OLD_SN) /* files found on current tape     */
     1113    19863    6                       OR (COMMAND = %RETRIEVE /* Don't output skip *** for      */
     1114    19864    6                       AND ERR = '777777777777'O) /* RETRIEVEs                   */
     1115    19865    6                       OR (COMMAND = %REAL_DUAL /* Don't output skip *** for     */
     1116    19866    6                       AND TAPE_OPTION.PROTTYPE = %INCREMENTAL /* DUAL INCRs     */
     1117    19867    6                       AND ERR = '777777777777'O)
     1118    19868    6                      THEN;
     1119    19869    6                      ELSE
     1120    19870    6                        CALL FLP$WR_FILE_INFO( SAVE_DCB$, SAVE_FIT_.PTR$, SAVE_SN,
     1121    19871    6                          SAVE_FSN, CROSSED, , ERR, PR_DEV_LT,'0'B) ALTRET( JUSTSTOP );
     1122    19872    6                     IF ERR
     1123    19873    6                       AND ERR ~= '777777777777'O
     1124    19874    6                       AND ERR.CODE ~= %E$NOFILE
     1125    19875    7                      THEN DO;
     1126    19876    7                        IF COMMAND = %REBUILD /* Output error msge. only after   */
     1127    19877    7                          AND ERR.CODE = %E$PSGRANS /* attempting to delete any  */
     1128    19878    8                         THEN DO;     /* deleted files found on current tape     */
     1129    19879    8                           IF TAPE_SN = OLD_SN
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:32   
     1130    19880    9                            THEN DO;
     1131    19881    9                              CALL FLI$RPT_ERR( ERR, 0 );
     1132    19882    9                              FPT_EXIT.V.STEPCC# = %OPER_ERROR;
     1133    19883    9                              ALTRETURN;   /* Can't continue                     */
     1134    19884    9                              END;
     1135    19885    8                            ELSE;
     1136    19886    8                           END;
     1137    19887    8                         ELSE DO;
     1138    19888    8                           IF SOURCE = %TAPE@ /* Output file name - busy dest. file */
     1139    19889    8                             AND ERR.CODE = %E$FILEBUSY
     1140    19890    9                            THEN DO;
     1141    19891    9                              TEMP_U = F$DCB.DCB#;
     1142    19892    9                              CALL FLI$RPT_ERR( ERR, TEMP_U );
     1143    19893    9                              END;
     1144    19894    8                            ELSE CALL FLI$RPT_ERR( ERR, 0 );
     1145    19895    8                           END;
     1146    19896    7                        IF ERR.CODE = %E$SETDOWN OR ERR.CODE = %E$XCLSET
     1147    19897    8                         THEN DO;
     1148    19898    8                           FPT_EXIT.V.STEPCC# = %OPER_ERROR;
     1149    19899    8                           IF DCBADDR(DCBNUM(M$NODATA_LIST))->F$DCB.FCD#
     1150    19900    8                            THEN CALL M$CLOSE( CLOSE_NODATA_LIST )
     1151    19901    9                               WHENALTRETURN DO;
     1152    19902    9                                 END;
     1153    19903    8                           IF M$TAPE00$->F$DCB.FCD# /* Close input tape, if open */
     1154    19904    8                            THEN CALL M$CLOSE( TAPE_CLOSE )
     1155    19905    9                               WHENALTRETURN DO;
     1156    19906    9                                 END;
     1157    19907    8                           ALTRETURN;      /* Can't continue after this error    */
     1158    19908    8                           END;
     1159    19909    8                         ELSE DO;
     1160    19910    8                           IF ERR.CODE = %E$PSGRANS
     1161    19911    9                            THEN DO;
     1162    19912    9                              SAVE_ERR = ERR;
     1163    19913    9                              IF COMMAND = %REBUILD
     1164    19914   10                               THEN DO;
     1165    19915        /***
     1166    19916         *** Search tape for deleted files and delete corresponding file on disk.
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:33   
     1167    19917         *** Hopefully this will gain enough space so that rebuilding may continue.
     1168    19918         ***/
     1169    19919   10                                 CALL FLM_FILES_FROM_TAPE_DELETE
     1170    19920   11                                  WHENALTRETURN DO;
     1171    19921   11                                    IF FPT_EXIT.V.STEPCC# < %SERIOUS_ERROR
     1172    19922   11                                     THEN FPT_EXIT.V.STEPCC# = %SERIOUS_ERROR;
     1173    19923   11                                    CALL FLC$TAPE_CLOSE( ERR )
     1174    19924   12                                     WHENALTRETURN DO;
     1175    19925   12                                       END;
     1176    19926   11                                    ALTRETURN;
     1177    19927   11                                    END;
     1178    19928   10                                 GOTO CASE_END; /* Retry rebuilding              */
     1179    19929   10                                 END;
     1180    19930   10                               ELSE DO;
     1181    19931   10                                 FPT_EXIT.V.STEPCC# = %OPER_ERROR;
     1182    19932   10                                 GOTO JUSTSTOP; /* Can't continue                */
     1183    19933   10                                 END;
     1184    19934    9                              END;
     1185    19935    9                            ELSE DO;
     1186    19936    9                              IF FPT_EXIT.V.STEPCC#<%MINOR_ERROR
     1187    19937    9                               THEN FPT_EXIT.V.STEPCC# = %MINOR_ERROR;
     1188    19938    9                              END;
     1189    19939    8                           END;
     1190    19940    7                        END;
     1191    19941    6                     END;
     1192    19942
     1193    19943    6                  DO CASE( SOURCE );
     1194    19944    6                   CASE( %DISK@ );
     1195    19945    6                     CALL FLN$DISK_CLOSE_NEXT( DCB_NBR );
     1196    19946    6                   CASE( %TAPE@ );
     1197    19947    6                     CALL FLC$TAPE_CLOSE_NEXT ( ERR )
     1198    19948    7                      WHENALTRETURN DO;
     1199    19949    7                        IF NOT (ERR.CODE = %E$IO_ERR AND TAPE_OPEN.V.IOERROK#)
     1200    19950    7                         THEN GOTO JUSTSTOP;
     1201    19951    7                        END;
     1202    19952    6                   END;
     1203    19953
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:34   
     1204    19954    5                  END;
     1205    19955    4               ANY_FILES_FOUND = '1'B;
     1206    19956    4             END;
     1207    19957
     1208    19958    3   CASE_END:
     1209    19959    3            IF TAPE_OPTION.CHECK AND COMMAND = %CHECK
     1210    19960    4             THEN DO;                      /* During automatic check...          */
     1211    19961    4               IF OLD_SN ~= SAVE_SN
     1212    19962    5                THEN DO;                   /* ...report volume changes           */
     1213    19963    5                  ERR = '0'B;
     1214    19964    5                  ERR.CODE = %E$EOVOL;
     1215    19965    5                  CALL FLP$WR_FILE_INFO( SOURCE_DCB$, FPARAM_.PTR$, SAVE_SN, SAVE_FSN,
             19965                           CROSSED, '1'B, ERR, '1'B, '0'B) ALTRET( JUSTSTOP );
     1216    19966    5                  OLD_SN = SAVE_SN;
     1217    19967    5                  END;
     1218    19968    4               END;
     1219    19969
     1220    19970    3            IF SOURCE = %TAPE@
     1221    19971    3             THEN BLK_TAG$ = PINCRW( BLK_TAG$, -SIZEW(BLK_TAG) );
     1222    19972
     1223    19973        /***
     1224    19974         *** After retrieving or restoring specific file(s) within specific FSN(s)
     1225    19975         *** just terminate. Continuing to search the rest of the EFT_RESTRICT_FILE is
     1226    19976         *** meaningless.
     1227    19977         ***/
     1228    19978    4            DO CASE( COMMAND );
     1229    19979    4             CASE( %RETRIEVE, %RESTORE );
     1230    19980    4               SPEC.STOP.ACCT.ACCT# = EFTFILE_DCB$->F$DCB.ACCT#;
     1231    19981    4               SPEC.STOP.FILE.L# = EFTFILE_DCB$->F$DCB.NAME#.L;
     1232    19982    4               SPEC.STOP.FILE.NAME# = EFTFILE_DCB$->F$DCB.NAME#.C;
     1233    19983    4               IF COMMAND = %RETRIEVE
     1234    19984    5                THEN DO;
     1235    19985    5                  IF SPEC.STOP >= DISK_FILE_SPEC.SPEC.STOP(DISK_FILE_SPEC.NBR - 1)
     1236    19986    5                   THEN EXIT MAIN_LOOP;
     1237    19987    5                  END;
     1238    19988    5                ELSE DO;
     1239    19989    5                  IF SPEC.STOP >= DISK_FILE_SPEC.SPEC.STOP(DISK_FILE_SPEC.NBR - 1)
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:35   
     1240    19990    5                    AND M$TAPE00$->F$DCB.FSN# >= LAST_TAPE_FSN
     1241    19991    5                   THEN EXIT MAIN_LOOP;
     1242    19992    5                  END;
     1243    19993    4             END;
     1244    19994    3            END;                           /* DO WHILE end  MAIN_LOOP            */
     1245    19995
     1246    19996    2   CHKALT: ;
     1247    19997    3         DO CASE( SOURCE );
     1248    19998    3          CASE( %DISK@ );
     1249    19999    3   JUSTDONE: ;
     1250    20000    3            IF NOT ANY_FILES_FOUND
     1251    20001    4             THEN DO;
     1252    20002    4               IF FPT_EXIT.V.STEPCC#<%MINOR_ERROR
     1253    20003    4                THEN FPT_EXIT.V.STEPCC# = %MINOR_ERROR;
     1254    20004    4               CALL FLI$RPT_ERR( E_NOTHING_FOUND );
     1255    20005    4               END;
     1256    20006    3            CALL FLM_FILE_FROM_DISK_CLEANUP(SAVE_ERR)
     1257    20007    4             WHENALTRETURN DO;
     1258    20008    4               ALTRETURN;
     1259    20009    4               END;
     1260    20010    3            IF NOT ANY_FILES_FOUND
     1261    20011    3             THEN ALTRETURN;
     1262    20012    3            RETURN;
     1263    20013    3          CASE( %TAPE@ );
     1264    20014    3            IF NOT ANY_FILES_FOUND
     1265    20015    4             THEN DO;
     1266    20016    4               IF ERR.CODE = %E$EOSET
     1267    20017    4                THEN CALL FLI$RPT_ERR;
     1268    20018    4                ELSE IF NOT ERR OR ERR.CODE = %E$EOF
     1269    20019    5                   THEN DO;
     1270    20020    5                     IF FPT_EXIT.V.STEPCC#<%MINOR_ERROR
     1271    20021    5                      THEN FPT_EXIT.V.STEPCC# = %MINOR_ERROR;
     1272    20022    5                     CALL FLI$RPT_ERR( E_NOTHING_FOUND );
     1273    20023    5                     END;
     1274    20024    4               END;
     1275    20025    4             ELSE DO;
     1276    20026        /***
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:36   
     1277    20027         *** If check just completed for unprotected transfer, must delete the
     1278    20028         *** source files that were previously moved if not bad tape.
     1279    20029         ***/
     1280    20030    4               IF (COMMAND = %CHECK
     1281    20031    4                 AND TAPE_OPTION.CHECK
     1282    20032    4                 AND DISK_OPTION.XFER
     1283    20033    4                 AND DISK_OPTION.DELETE
     1284    20034    4                 AND NOT TAPE_BAD)
     1285    20035    5                THEN DO;
     1286    20036    5                  CALL FLM_CLEANUP (SAVE_ERR);
     1287    20037    5                  CALL M$CLOSE(CLOSE_DELETE_LIST)
     1288    20038    6                   WHENALTRETURN DO;
     1289    20039    6                     CALL FLI$RPT_ERR;
     1290    20040    6                     END;
     1291    20041    5                  END;
     1292    20042    4               END;
     1293    20043    3            CALL FLC$TAPE_CLOSE( ERR )
     1294    20044    4             WHENALTRETURN DO;
     1295    20045    4               END;
     1296    20046    3            IF DCBADDR(DCBNUM(M$NODATA_LIST))->F$DCB.FCD#
     1297    20047    3             THEN CALL M$CLOSE( CLOSE_NODATA_LIST )
     1298    20048    4                WHENALTRETURN DO;
     1299    20049    4                  END;
     1300    20050    3            IF USE_TSN_USED
     1301    20051    4             THEN DO;       /* Must set up SN list from previous information     */
     1302    20052    4               SET_NBR = SET_NBR + 1;      /* Use next list                      */
     1303    20053    4               CALL FLI$TSN_USED( SET_NBR,SNLIST_NBR )
     1304    20054    5                WHENALTRETURN DO;
     1305    20055    5                  IF TAPE_BAD
     1306    20056    6                   THEN DO;
     1307    20057    6                     IF FPT_EXIT.V.STEPCC#<%SERIOUS_ERROR
     1308    20058    6                      THEN FPT_EXIT.V.STEPCC# = %SERIOUS_ERROR;
     1309    20059    6                     ALTRETURN;
     1310    20060    6                     END;
     1311    20061    6                  DO WHILE ( SNLIST_NBR + 1  < NBR_SNLISTS );
     1312    20062    6                     SNLIST_NBR = SNLIST_NBR + 1;
     1313    20063    6                     BREAK_TASK = 'Autochecking!';
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:37   
     1314    20064    6                     TAPE_OPEN.SN_ = VECTOR(ERASE); /* Indicate internal SN list */
     1315    20065    6                     CALL FLM$MOVE( %CHECK )
     1316    20066    7                      WHENALTRETURN DO;
     1317    20067    7                        ALTRETURN;
     1318    20068    7                        END;
     1319    20069    6                     FPT_REM.V.PSN# = TAPE_DCBLIST.DCB$(SNLIST_NBR)->F$DCB.PSN#;
     1320    20070    6                     CALL M$REM( FPT_REM ) /* Remove duplicate tape set          */
     1321    20071    7                      WHENALTRETURN DO;
     1322    20072    7                        END;
     1323    20073    6                     END;
     1324    20074    5                  RETURN;
     1325    20075    5                  END;
     1326    20076    4               END;
     1327    20077    4             ELSE DO;
     1328    20078    4               IF TAPE_BAD
     1329    20079    5                THEN DO;
     1330    20080    5                  IF FPT_EXIT.V.STEPCC#<%SERIOUS_ERROR
     1331    20081    5                   THEN FPT_EXIT.V.STEPCC# = %SERIOUS_ERROR;
     1332    20082    5                  ALTRETURN;
     1333    20083    5                  END;
     1334    20084    4               RETURN;
     1335    20085    4               END;
     1336    20086    3          END;
     1337    20087    2         END;
     1338    20088
     1339    20089    1   JUSTSTOP: ;
     1340    20090    1      IF FPT_EXIT.V.STEPCC# < %SERIOUS_ERROR
     1341    20091    1       THEN FPT_EXIT.V.STEPCC# = %SERIOUS_ERROR;
     1342    20092    2      DO CASE( SOURCE );
     1343    20093    2       CASE( %DISK@ );
     1344    20094    2         CALL FLN$DISK_CLOSE_ALL;
     1345    20095    2         CALL M$CLOSE( CLOSE_DELETE_LIST )
     1346    20096    3          WHENALTRETURN DO;
     1347    20097    3            END;
     1348    20098    2       CASE( %TAPE@ );
     1349    20099    2         CALL FLC$TAPE_CLOSE( ERR )
     1350    20100    3          WHENALTRETURN DO;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:38   
     1351    20101    3            END;
     1352    20102    2         IF DCBADDR(DCBNUM(M$NODATA_LIST))->F$DCB.FCD#
     1353    20103    2          THEN CALL M$CLOSE( CLOSE_NODATA_LIST )
     1354    20104    3             WHENALTRETURN DO;
     1355    20105    3               END;
     1356    20106    2       END;
     1357    20107
     1358    20108    2      DO CASE( DEST );
     1359    20109    2       CASE( %TAPE@ );
     1360    20110    2         CALL FLM_UPDATE_RUN_INFO;
     1361    20111    2         CALL FLS$FILE_PACKER_FIN( COMMAND )
     1362    20112    3          WHENALTRETURN DO;
     1363    20113
     1364    20114        /***
     1365    20115         *** All files contained in the last block that did not get written due
     1366    20116         *** to an error, requeue for stowing (QS).
     1367    20117         ***/
     1368    20118    3            IF COMMAND = %ARCHIVE_CMD
     1369    20119    3              OR (COMMAND = %PURGE AND ARCHIVE$ ~= ADDR(NIL))
     1370    20120    4             THEN DO;
     1371    20121    4               CALL FLM_REQUEUE_FILES_FOR_STOW;
     1372    20122    4               END;
     1373    20123    3            END;
     1374    20124    2       END;
     1375    20125    1      IF NOT ANY_FILES_FOUND
     1376    20126    1       THEN ALTRETURN;
     1377    20127    1      RETURN;
     1378    20128
     1379    20129
     1380    20130
     1381    20131    1   FLM_UPDATE_RUN_INFO: PROC;
     1382    20132
     1383    20133    2   DCL M$TSN_USED$ PTR AUTO;
     1384    20134    2   DCL DPX SBIN AUTO;
     1385    20135    2   DCL DP_RUN_NBR SBIN AUTO;
     1386    20136    2   DCL 1 UPDATE_FPARAM_ DALIGNED,
     1387    20137    2         2 BOUND UBIN (20) UNAL,
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:39   
     1388    20138    2         2 * BIT (16) UNAL,
     1389    20139    2         2 PTR$ PTR;
     1390    20140
     1391    20141    2   DCL 1 STATUS_KEY_SAVE AUTO,
     1392    20142    2         2 L UBIN BYTE CALIGNED,
     1393    20143    2         2 RUN_NBR UBIN BYTE CALIGNED,
     1394    20144    2         2 TSN_SET_NBR UBIN BYTE CALIGNED,
     1395    20145    2         2 TSN_VOL UBIN BYTE CALIGNED;
     1396    20146
     1397    20147    2   DCL 1 TSN_USED_BUF_SAVE AUTO,
     1398    20148    2         2 UTS UBIN WORD,
     1399    20149    2         2 FIRST_ACCT CHAR(8),
     1400    20150    2         2 LAST_ACCT CHAR(8),
     1401    20151    2         2 TSN CHAR(6),
     1402    20152    2         2 FSN UBIN HALF CALIGNED,
     1403    20153    2         2 BACKUP_FSN UBIN HALF CALIGNED;
     1404    20154
     1405    20155        /********************/
     1406    20156
     1407    20157    2      IF NOT ANY_FILES_FOUND THEN RETURN;
     1408    20158
     1409    20159    2      M$TSN_USED$ = DCBADDR(DCBNUM(M$TSN_USED));
     1410    20160    2      IF M$TSN_USED$->F$DCB.FCD#
     1411    20161    3       THEN DO;                            /* Update file                        */
     1412    20162    3         TSN_USED_KEY.L = LENGTHV(TSN_USED_KEY);
     1413    20163    3         TSN_USED_KEY.RUN_NBR = 0;
     1414    20164    3         TSN_USED_KEY.TSN_SET_NBR = 0;
     1415    20165    3         TSN_USED_KEY.TSN_VOL = 0;
     1416    20166    3         TSN_USED_KEY.TSN_SNLIST_NBR = 0;
     1417    20167    3         TSN_USED_BUF = '0'B;
     1418    20168    3         TSN_USED_BUF.UTS = RUN_NBR;
     1419    20169    3         CALL M$WRITE( WRITE_TSN_USED )
     1420    20170    4          WHENALTRETURN DO;
     1421    20171    4            CALL FLI$RPT_ERR;
     1422    20172    4            END;
     1423    20173
     1424    20174    3         IF COMMAND = %SAVE OR COMMAND = %BACKUP
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:40   
     1425    20175    4          THEN DO;
     1426    20176    4            IF COMMAND = %SAVE
     1427    20177    4             THEN OPEN_STATUS.V.EXIST# = %NEWFILE#;
     1428    20178    4            OPEN_STATUS.V.FUN# = %CREATE#;
     1429    20179    4            OPEN_STATUS.V.EXPIRE# = %NEVER#;
     1430    20180    5            DO DPX=0 TO DPLIST.NUM#-1;
     1431    20181    5               BACKUP_SN.SN#(0) = DPLIST.SN#(DPX);
     1432    20182    5               OPEN_STATUS.V.RES# = DPRESLIST.NAME(DPX);
     1433    20183    5               CALL FLI$BUILD_$$EFT ( DPLIST.SN#(DPX) )
     1434    20184    6                WHENALTRETURN DO;
     1435    20185    6                  END;
     1436    20186    5               CALL M$OPEN( OPEN_STATUS )
     1437    20187    6                WHENRETURN DO;
     1438    20188    6                  IF COMMAND ~= %SAVE
     1439    20189    7                   THEN DO;
     1440    20190    7                     STATUS_KEY.L = LENGTHV(STATUS_KEY);
     1441    20191    7                     STATUS_KEY.RUN_NBR = 0;
     1442    20192    7                     STATUS_KEY.TSN_SET_NBR = 0;
     1443    20193    7                     STATUS_KEY.TSN_VOL = 0;
     1444    20194    7                     READ_STATUS.V.KEYS# = '1'B;
     1445    20195    7                     CALL M$READ( READ_STATUS )
     1446    20196    8                      WHENRETURN DO;
     1447    20197    8                        DP_RUN_NBR = TSN_USED_BUF.UTS + 1;
     1448    20198    8                        END;
     1449    20199    8                      WHENALTRETURN DO;
     1450    20200    8                        DP_RUN_NBR = 1;
     1451    20201    8                        END;
     1452    20202    7                     END;
     1453    20203    6                   ELSE DP_RUN_NBR = 1;
     1454    20204    6                  STATUS_KEY.L = LENGTHV(STATUS_KEY);
     1455    20205    6                  STATUS_KEY.RUN_NBR = DP_RUN_NBR;
     1456    20206    6                  STATUS_KEY.TSN_SET_NBR = TSN_SET_NBR;
     1457    20207        /***
     1458    20208         *** If no files qualified for backup, TSN_VOL does not get set. Init.
     1459    20209         *** STATUS_KEY.TSN_VOL to first volume.
     1460    20210         *** Note that the FSN for the :BACKUP file when written to tape is expected to
     1461    20211         *** be one greater than the current FSN. This set in advance so that the value
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:41   
     1462    20212         *** for BACKUP_FSN is correct on the backup tape in case a rebuild is required.
     1463    20213        ***/
     1464    20214    6                  IF TSN_VOL ~= 0
     1465    20215    6                   THEN STATUS_KEY.TSN_VOL = TSN_VOL;
     1466    20216    6                   ELSE STATUS_KEY.TSN_VOL = 1;
     1467    20217    6                  TSN_USED_BUF.TSN = TAPE_SN;
     1468    20218    6                  TSN_USED_BUF.FSN = TAPE_FSN;
     1469    20219    6                  TSN_USED_BUF.BACKUP_FSN = TAPE_FSN  + 1;
     1470    20220    6                  CALL M$TIME( GET_NOW_UTS );
     1471    20221    6                  TSN_USED_BUF.UTS = NOW_UTS;
     1472    20222    6                  TSN_USED_BUF.FIRST_ACCT = DISK_ACCT_FIRST.ACCT#;
     1473    20223    6                  TSN_USED_BUF.LAST_ACCT = DISK_ACCT_LAST.ACCT#;
     1474    20224    6                  CALL M$WRITE( WRITE_STATUS )
     1475    20225    7                   WHENALTRETURN DO;
     1476    20226    7                     END;
     1477    20227
     1478    20228    6                  STATUS_KEY_SAVE = STATUS_KEY;
     1479    20229    6                  TSN_USED_BUF_SAVE = TSN_USED_BUF;
     1480    20230
     1481    20231    6                  STATUS_KEY.L = LENGTHV(STATUS_KEY);
     1482    20232    6                  STATUS_KEY.RUN_NBR = 0;
     1483    20233    6                  STATUS_KEY.TSN_SET_NBR = 0;
     1484    20234    6                  STATUS_KEY.TSN_VOL = 0;
     1485    20235    6                  TSN_USED_BUF.TSN = ' ';
     1486    20236    6                  TSN_USED_BUF.FSN = 0;
     1487    20237    6                  TSN_USED_BUF.UTS = DP_RUN_NBR;
     1488    20238    6                  CALL M$WRITE( WRITE_STATUS )
     1489    20239    7                   WHENALTRETURN DO;
     1490    20240    7                     END;
     1491    20241    6                  CALL M$CLOSE( CLOSE_STATUS )
     1492    20242    7                   WHENALTRETURN DO;
     1493    20243    7                     END;
     1494    20244        /***
     1495    20245         *** Save the :BACKUP files. However if previous tape write error, don't attempt
     1496    20246         *** to save. Each :BACKUP file written to a separate file so that it can
     1497    20247         *** selected for REBUILDing packsets.
     1498    20248         ***/
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:42   
     1499    20249    6                  IF NOT ABORT
     1500    20250    7                   THEN DO;
     1501    20251    7                     OPEN_STATUS.V.EXIST# = %OLDFILE#;
     1502    20252    7                     OPEN_STATUS.V.FUN# = %IN#;
     1503    20253    7                     OPEN_STATUS.V.ACS# = %BLOCK#;
     1504    20254    7                     CALL FLI$ALLOC_BUF( UPDATE_FPARAM_, 1 );
     1505    20255    7                     OPEN_STATUS.FPARAM_ = UPDATE_FPARAM_;
     1506    20256
     1507    20257    7                     CALL M$OPEN( OPEN_STATUS )
     1508    20258    8                      WHENRETURN DO;
     1509    20259    8                        LAST_TYPE = %CLEANUP_FILE;
     1510    20260    8                        CALL FLS$FILE_PACKER( DCBADDR(DCBNUM(M$STATUS)),
     1511    20261    8                          DCBNUM(M$STATUS), UPDATE_FPARAM_, SAVE_SN,
     1512    20262    8                          SAVE_FSN, CROSSED, ERR, ABORT, FIT_ONLY_SAVED, COMMAND )
     1513    20263    9                         WHENRETURN DO;
     1514    20264        /***
     1515    20265         *** Rewrite the last :BACKUP record to update BACKUP_FSN value.
     1516    20266         ***/
     1517    20267    9                           CALL M$CLOSE ( CLOSE_STATUS )
     1518    20268   10                            WHENALTRETURN DO;
     1519    20269   10                              END;
     1520    20270    9                           OPEN_STATUS.V.EXIST# = %OLDFILE#;
     1521    20271    9                           OPEN_STATUS.V.FUN# = %UPDATE#;
     1522    20272    9                           OPEN_STATUS.V.ACS# = %DIRECT#;
     1523    20273    9                           OPEN_STATUS.FPARAM_ = VECTOR(NIL);
     1524    20274    9                           CALL M$OPEN ( OPEN_STATUS )
     1525    20275   10                            WHENRETURN DO;
     1526    20276   10                              STATUS_KEY = STATUS_KEY_SAVE;
     1527    20277   10                              TSN_USED_BUF = TSN_USED_BUF_SAVE;
     1528    20278   10                              TSN_USED_BUF.BACKUP_FSN = SAVE_FSN;
     1529    20279   10                              CALL M$WRITE( WRITE_STATUS )
     1530    20280   11                               WHENALTRETURN DO;
     1531    20281   11                                 END;
     1532    20282   10                              END;
     1533    20283   10                            WHENALTRETURN DO;
     1534    20284   10                              CALL FLI$RPT_ERR;
     1535    20285   10                              END;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:43   
     1536    20286    9                           ERR = '0'B;
     1537    20287    9                           END;
     1538    20288    9                         WHENALTRETURN DO;
     1539    20289    9                           END;
     1540    20290    8                        CALL FLP$WR_FILE_INFO( DCBADDR(DCBNUM(M$STATUS)),
     1541    20291    8                          UPDATE_FPARAM_.PTR$, SAVE_SN, SAVE_FSN, CROSSED, , ERR,
     1542    20292    8                          PR_DEV_LT, '0'B )
     1543    20293    9                         WHENALTRETURN DO;
     1544    20294    9                           CALL FLI$RPT_ERR;
     1545    20295    9                           END;
     1546    20296    8                        CALL M$CLOSE ( CLOSE_STATUS )
     1547    20297    9                         WHENALTRETURN DO;
     1548    20298    9                           END;
     1549    20299    8                        END;
     1550    20300    8                      WHENALTRETURN DO;
     1551    20301    8                        CALL FLI$RPT_ERR;
     1552    20302    8                        END;
     1553    20303    7                     IF COMMAND = %SAVE    /* Set the FPT's parameters back      */
     1554    20304    7                      THEN OPEN_STATUS.V.EXIST# = %NEWFILE#;
     1555    20305    7                      ELSE OPEN_STATUS.V.EXIST# = %OLDFILE#;
     1556    20306    7                     OPEN_STATUS.V.FUN# = %CREATE#;
     1557    20307    7                     OPEN_STATUS.V.ACS# = %DIRECT#;
     1558    20308    7                     OPEN_STATUS.FPARAM_ = VECTOR(NIL);
     1559    20309    7                     END;
     1560    20310    6                  END;
     1561    20311    6                WHENALTRETURN DO;
     1562    20312    6                  CALL FLI$RPT_ERR;
     1563    20313    6                  END;
     1564    20314    5               END;
     1565    20315    4            END;
     1566    20316    3         OPEN_STATUS.V.EXIST# = %OLDFILE#;
     1567    20317    3         END;
     1568    20318
     1569    20319    2      RETURN;
     1570    20320
     1571    20321    2   END FLM_UPDATE_RUN_INFO;
     1572    20322
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:44   
     1573    20323
     1574    20324    1   FLM_ACCOUNT_TO_DISK_HANDLING: PROC ALTRET;
     1575    20325
     1576    20326        /********************/
     1577    20327
     1578    20328        /***
     1579    20329         *** Note that it's possible that the user has specified a
     1580    20330         *** different packset and/or account than the source (tape)
     1581    20331         *** account originally came from.
     1582    20332         ***/
     1583    20333
     1584    20334    2      IF DISK_DEST_SN.SN#(0) = ' '
     1585    20335    2       THEN TO_DISK_SN.SN#(0) = SOURCE_DCB$->F$DCB.PSN#;
     1586    20336    2      IF DISK_DEST_ACCT.ACCT# = ' '
     1587    20337    2       THEN TO_DISK_ACCT.ACCT# = SOURCE_DCB$->F$DCB.ACCT#;
     1588    20338    2      SAVE_SN = TO_DISK_SN.SN#(0);
     1589    20339
     1590    20340    2      CALL FLM_GET_SOURCE_UTS;
     1591    20341
     1592    20342    2      IF DISK_DEST_EXIST = %ERROR#
     1593    20343    2        OR TAPE_OPTION.PROTTYPE = %INCREMENTAL
     1594    20344    3       THEN DO;                       /* Need to check if account already there  */
     1595    20345    3         GET_AD_OR_FD.FPARAM_ = DISK_FIT_;
     1596    20346    3         CALL M$OPEN( GET_AD_OR_FD )
     1597    20347    4          WHENRETURN DO;                   /* Account is already there           */
     1598    20348    4            IF DISK_DEST_EXIST = %ERROR#
     1599    20349    4             THEN GOING_TO_DEST = '0'B; /* PROT - Don't replace existing account */
     1600    20350    5             ELSE DO;                      /* INCR - Replace existing account... */
     1601    20351    5               CALL FLM_GET_DEST_ACCT_UTS;
     1602    20352    5               IF SOURCE_UTS > DEST_UTS    /* ...only if it's not newer          */
     1603    20353    5                THEN GOING_TO_DEST = '1'B;
     1604    20354    5                ELSE GOING_TO_DEST = '0'B;
     1605    20355    5               END;
     1606    20356    4            END;
     1607    20357    4          WHENALTRETURN DO;
     1608    20358    4            IF B$TCB.ALT$->B$ALT.ERR.CODE ~= %E$NOKEY
     1609    20359    5             THEN DO;                      /* Unexpected error...pass it along   */
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:45   
     1610    20360    5               ERR = B$TCB.ALT$->B$ALT.ERR;
     1611    20361    5               GOING_TO_DEST = '0'B;
     1612    20362    5               END;
     1613    20363    5             ELSE DO;            /* Account either doesn't exist or is deleted   */
     1614    20364    5               IF DISK_DEST_EXIST = %ERROR#
     1615    20365    6                THEN DO;                   /* PROT - Replace deleted account...  */
     1616    20366    6                  IF SOURCE_FILE_TYPE = %CLEANUP_ACCT
     1617    20367    6                   THEN GOING_TO_DEST = '0'B; /* ...but not with a cleaned account */
     1618    20368    6                   ELSE GOING_TO_DEST = '1'B;
     1619    20369    6                  END;
     1620    20370    6                ELSE DO;                   /* INCR - Delete existing account...  */
     1621    20371    6                  DEST_UTS = F$DCB.EXPIRE#;
     1622    20372    6                  IF SOURCE_UTS > DEST_UTS /* ... only if it's not newer         */
     1623    20373    6                   THEN GOING_TO_DEST = '1'B;
     1624    20374    6                   ELSE GOING_TO_DEST = '0'B;
     1625    20375    6                  END;
     1626    20376    5               END;
     1627    20377    4            IF NOT GOING_TO_DEST
     1628    20378    4             THEN SKIP_ACCT = TO_DISK_ACCT;
             20378                      /* Skip all files in this skipped deleted account */
     1629    20379    4            END;
     1630    20380    3         END;
     1631    20381    2       ELSE GOING_TO_DEST = '1'B;          /* UNPROT - take no prisoners!        */
     1632    20382
     1633    20383    2      IF COMMAND = %REBUILD
     1634    20384    3       THEN DO;
     1635    20385    4         DO CASE( SOURCE_FILE_TYPE );
     1636    20386    4          CASE( %FILE_DIR, %DEL_ACCT, %CLEANUP_ACCT );
     1637    20387        /***
     1638    20388         *** Restore the file directory fit if:
     1639    20389         *** 1. The DIR option has been specified.
     1640    20390         *** 2. The file directory fit did not exist at the beginning of rebuilding
     1641    20391         ***    this packset.
     1642    20392         *** Note: EFT keeps track of which directories have been restored by
     1643    20393         *** maintaining a record in the :REBUILD file.
     1644    20394         ***/
     1645    20395    4            REBUILD_DIR_KEY.NAME# = SOURCE_DCB$->F$DCB.ACCT#;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:46   
     1646    20396    4            WRITE_REBUILD.KEY_ = VECTOR(REBUILD_DIR_KEY);
     1647    20397    4            IF DISK_OPTION.DIR             /* DIR spec'd?                        */
     1648    20398    5             THEN DO;
     1649    20399    5               WRITE_REBUILD.BUF_ = VECTOR(NIL);
     1650    20400    5               CALL M$WRITE( WRITE_REBUILD ) ALTRET(JUSTALT);
     1651    20401    5               END;
     1652    20402    5             ELSE DO; /* Check if dir fit was previously restored on this rebuild */
     1653    20403    5               CALL M$READ ( READ_REBUILD )
     1654    20404    6                WHENRETURN DO;             /* Previously restored                */
     1655    20405    6                  END;
     1656    20406    6                WHENALTRETURN DO;          /* Not previously restored            */
     1657    20407    6                  IF B$TCB.ALT$->B$ALT.ERR.CODE = %E$NOFILE
     1658    20408    6                    OR B$TCB.ALT$->B$ALT.ERR.CODE = %E$EOF
     1659    20409    6                    OR B$TCB.ALT$->B$ALT.ERR.CODE = %E$NOKEY
     1660    20410    7                   THEN DO;                /* Does dir already exist?            */
     1661    20411    7                     GET_AD_OR_FD.FPARAM_ = DISK_FIT_;
     1662    20412    7                     CALL M$OPEN( GET_AD_OR_FD )
     1663    20413    8                      WHENRETURN DO;       /* Exists - don't restore             */
     1664    20414    8                        GOING_TO_DEST = '0'B;
     1665    20415    8                        END;
     1666    20416    8                      WHENALTRETURN DO;    /* Doesn't exist - restore            */
     1667    20417    8                        WRITE_REBUILD.BUF_ = VECTOR(NIL);
     1668    20418    8                        CALL M$WRITE( WRITE_REBUILD ) ALTRET(JUSTALT);
     1669    20419    8                        END;
     1670    20420    7                     END;
     1671    20421    7                   ELSE DO;      /* Terminate rebuild as it can't be determined  */
     1672    20422    7                     CALL FLI$RPT_ERR; /* whether this dir. fit should be restored */
     1673    20423    7                     ALTRETURN;
     1674    20424    7                     END;
     1675    20425    6                  END;
     1676    20426    5               END;
     1677    20427    4          CASE( %ACCT_DIR );
     1678    20428    4          END;
     1679    20429    3         END;
     1680    20430    2      IF TAPE_OPTION.PROTTYPE = %INCREMENTAL
     1681    20431    2        AND SOURCE_FILE_TYPE = %CLEANUP_ACCT
     1682    20432    2       THEN GOING_TO_DEST = '0'B;          /* INCR - ignore cleaned up accounts  */
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:47   
     1683    20433
     1684    20434    2      IF GOING_TO_DEST
     1685    20435    3       THEN DO;        /* We've decided to lay waste to whatever's out there     */
     1686    20436    3         IF SOURCE_FILE_TYPE = %FILE_DIR OR SOURCE_FILE_TYPE = %ACCT_DIR
     1687    20437    3          THEN REPLACE_AD_OR_FD.IFPARAM_ = FPARAM_; /* Use FD from source        */
     1688    20438    3          ELSE REPLACE_AD_OR_FD.IFPARAM_ = A_FD_;
             20438                   /* Use canned FD...will be deleted later */
     1689    20439    3         CALL M$OPEN( REPLACE_AD_OR_FD )
     1690    20440    4          WHENRETURN DO;                   /* Account created                    */
     1691    20441    4   DEL_CLNUP:
     1692    20442    4            IF SOURCE_FILE_TYPE = %DEL_ACCT
     1693    20443    4              OR SOURCE_FILE_TYPE = %CLEANUP_ACCT
     1694    20444    5             THEN DO;                      /* Now delete it or clean it up       */
     1695    20445    5               IF SOURCE_FILE_TYPE = %CLEANUP_ACCT
     1696    20446    5                THEN GET_AD_OR_FD.V.EXPIRE# = 0; /* Clean up                     */
     1697    20447    5                ELSE GET_AD_OR_FD.V.EXPIRE# = SOURCE_UTS;
             20447                         /* Deletion...use the right time */
     1698    20448    5               GET_AD_OR_FD.V.DELETE# = %YES#;
     1699    20449    5               GET_AD_OR_FD.FPARAM_ = A_FD_;
     1700    20450    5               CALL M$OPEN( GET_AD_OR_FD )
     1701    20451    6                WHENALTRETURN DO;
     1702    20452    6                  ERR = B$TCB.ALT$->B$ALT.ERR; /* Unexpected error               */
     1703    20453    6                  END;
     1704    20454    5               GET_AD_OR_FD.V.DELETE# = %NO#;
     1705    20455    5               END;
     1706    20456    4            END;
     1707    20457    4          WHENALTRETURN DO;
     1708    20458        /***
     1709    20459         *** Ignore disk space error since account will be deleted anyway.
     1710    20460         ***/
     1711    20461    4            IF (SOURCE_FILE_TYPE = %DEL_ACCT
     1712    20462    4              OR SOURCE_FILE_TYPE = %CLEANUP_ACCT)
     1713    20463    4              AND B$TCB.ALT$->B$ALT.ERR.CODE= %E$ACGRANS
     1714    20464    4             THEN GOTO DEL_CLNUP;
     1715    20465
     1716    20466    4            ERR = B$TCB.ALT$->B$ALT.ERR;   /* Unexpected                         */
     1717    20467    4            END;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:48   
     1718    20468    3         END;
     1719    20469    3       ELSE DO;                            /* Not going to disk                  */
     1720    20470    3         ERR.CODE = %E$NEWREC;             /* ...give skipped error message      */
     1721    20471    3         END;
     1722    20472    2      RETURN;
     1723    20473
     1724    20474    2   JUSTALT:
     1725    20475    2      ALTRETURN;
     1726    20476
     1727    20477    2   END FLM_ACCOUNT_TO_DISK_HANDLING;
     1728    20478
     1729    20479
     1730    20480    1   FLM_FILE_TO_DISK_HANDLING: PROC( FIT_UPDATE ) ALTRET;
     1731    20481
     1732    20482    2   DCL FIT_UPDATE BIT(1) ALIGNED;
     1733    20483
     1734    20484    2   DCL FREE_GRANS SBIN AUTO;
     1735    20485    2   DCL DCB# SBIN AUTO;
     1736    20486
     1737    20487        /********************/
     1738    20488
     1739    20489    2      GOING_TO_DEST = '0'B;
     1740    20490    2      FIT_UPDATE = '0'B;
     1741    20491    2      FIT_ONLY_RSTRD = '0'B;
     1742    20492
     1743    20493    2      IF SKIP_ACCT.ACCT# = SAVE_DCB$->F$DCB.ACCT#
     1744    20494    2       THEN RETURN;              /* Ignore files from accounts to be skipped     */
     1745    20495
     1746    20496    2      IF TAPE_OPTION.PROTTYPE = %INCREMENTAL
     1747    20497    3       THEN DO;
     1748    20498    3         IF SOURCE_FILE_TYPE = %CLEANUP_FILE
     1749    20499    3          THEN GOING_TO_DEST = '0'B; /* Don't cleanup during incremental restore */
     1750    20500    4          ELSE DO;                    /* INCR - replace existing file or granule */
     1751    20501    4            CALL FLM_GET_SOURCE_UTS;
     1752    20502    4            CALL FLM_GET_DEST_FILE_UTS;
     1753    20503    4            IF SOURCE_FILE_TYPE = %IDS_FAST_FILE
     1754    20504    4             THEN GOING_TO_DEST = '1'B;    /* Replace on a granule basis         */
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:49   
     1755    20505    5             ELSE DO;
     1756    20506    5               IF SOURCE_UTS > DEST_UTS    /* ...if tape file is newer           */
     1757    20507    5                THEN GOING_TO_DEST = '1'B; /* Replace existing file              */
     1758    20508    5               END;
     1759    20509    4            END;
     1760    20510    3         END;
     1761    20511    3       ELSE DO;                            /* PROT or UNPROT                     */
     1762    20512    3         CALL FLM_GET_SOURCE_UTS;
     1763    20513    3         CALL FLM_GET_DEST_FILE_UTS;
     1764    20514    3         IF COMMAND = %RETRIEVE
     1765    20515    3          THEN IF DEST_UTS > 0 AND F$DCB.DESC.QS# AND F$DCB.DESC.FETCH# AND F$DCB.DESC.
             20515                   ARCHIVE#
     1766    20516    3             THEN IF DISK_CODE06$ ~= ADDR(NIL)
     1767    20517    3                THEN IF DISK_CODE06$->CODE06.STOW.REEL = SAVE_SN
     1768    20518    3                    OR TAPE_OPTION.DUPLICATE_TAPESET /* Retrieving dup. tapeset  */
     1769    20519    4                   THEN DO;
     1770    20520    4                     EFTWORD = DISK_CODE06$->CODE06.STOW.EFT;
     1771    20521    4                     IF F$DCB.DESC.ODSTOW#
     1772    20522    5                      THEN DO;
     1773    20523    5                        IF EFTWORDEXPIRE = SAVE_FSN /* FSN is halfword for OD    */
     1774    20524    5                         THEN GOING_TO_DEST = '1'B;
     1775    20525    5                        END;
     1776    20526    5                      ELSE DO;
     1777    20527    5                        IF EFTWORD.FSN = SAVE_FSN
     1778    20528    5                         THEN GOING_TO_DEST = '1'B;
     1779    20529    5                        END;
     1780    20530    4                     END;
     1781    20531    3                   ELSE ;                  /* Not same reel...not going to disk  */
     1782    20532    3                ELSE ;                     /* No CODE06?                         */
     1783    20533    3             ELSE ;                   /* Not a fetched, previously archived file */
     1784    20534    4          ELSE DO;
     1785    20535    5            DO CASE( COMMAND );
     1786    20536    5             CASE( %RESTORE );
     1787    20537    5               IF DISK_DEST_EXIST = %NEWFILE# AND TAPE_OPTION.PROTTYPE ~= %PROTECTED
     1788    20538    5                THEN GOING_TO_DEST = '1'B; /* UNPROT - send source to disk       */
     1789    20539    5                ELSE CALL CHECK_DEST_FILE;
     1790    20540    5             CASE( ELSE );
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:50   
     1791    20541    5               IF DISK_DEST_EXIST = %NEWFILE#
     1792    20542    5                THEN GOING_TO_DEST = '1'B; /* UNPROT - send source to disk       */
     1793    20543    5                ELSE CALL CHECK_DEST_FILE;
     1794    20544    5             END;
     1795    20545    4            END;
     1796    20546    3         END;
     1797    20547
     1798    20548        /***
     1799    20549         ***  If file is going to disk, set up FPTs and related information
     1800    20550         ***  that will make the file turn out like it's supposed to.
     1801    20551         ***/
     1802    20552
     1803    20553    2      IF GOING_TO_DEST THEN
     1804    20554    3   GOING: DO;                              /* Restore or retrieve this file      */
     1805    20555    3         IF COMMAND = %RETRIEVE
     1806    20556    4          THEN DO;
     1807    20557        /***
     1808    20558         *** Before deleting file, determine if we have a minimum number of granules
     1809    20559         *** for recreating this archived file in case pack space is exceeded.
     1810    20560         *** (File must be left in queued-for-fetch state so file is eventually
     1811    20561         *** retrieved.)
     1812    20562         ***/
     1813    20563    4            DCB# = DISK_OPEN.V.DCB#;
     1814    20564    4            CALL FLI$NUMFREEGRANS ( ADDR(TO_DISK_SN), FREE_GRANS, ERR )
     1815    20565    5             WHENALTRETURN DO;             /* Output skipped line                */
     1816    20566    5               CALL FLP$WR_FILE_INFO( SAVE_DCB$, SAVE_FIT_.PTR$, SAVE_SN,
     1817    20567    5                 SAVE_FSN, CROSSED, , ERR, PR_DEV_LT, '0'B) ALTRET( JUSTALT );
     1818    20568    5               CALL FLI$RPT_ERR ( ERR, DCB# );
     1819    20569    5               IF FPT_EXIT.V.STEPCC# < %MINOR_ERROR
     1820    20570    5                THEN FPT_EXIT.V.STEPCC# = %MINOR_ERROR;
     1821    20571    5               GOING_TO_DEST = '0'B;
     1822    20572    5               ERR = '0'B;
     1823    20573    5               EXIT GOING;
     1824    20574    5               END;
     1825    20575    4            IF FREE_GRANS < 5
     1826    20576    5             THEN DO;                      /* Output skipped line                */
     1827    20577    5               ERR = '777777777777'O;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:51   
     1828    20578    5               CALL FLP$WR_FILE_INFO( SAVE_DCB$, SAVE_FIT_.PTR$, SAVE_SN,
     1829    20579    5                 SAVE_FSN, CROSSED, , ERR, PR_DEV_LT, '0'B) ALTRET( JUSTALT );
     1830    20580    5               CALL FLI$RPT_ERR ( E_CANT_RETRIEVE, DCB# );
     1831    20581    5               IF FPT_EXIT.V.STEPCC# < %MINOR_ERROR
     1832    20582    5                THEN FPT_EXIT.V.STEPCC# = %MINOR_ERROR;
     1833    20583    5               GOING_TO_DEST = '0'B;
     1834    20584    5               EXIT GOING;
     1835    20585    5               END;
     1836    20586    4            END;
     1837    20587    3         CALL FLM_DELETE_TO_DISK_FILE;
     1838    20588    4         DO CASE( SOURCE_FILE_TYPE );
     1839    20589
     1840    20590    4          CASE( %REG_FILE, %ACUP_FILE, %IDS_FAST_FILE );
     1841    20591    4            IF DISK_OPTION.SCRUB
     1842    20592    4             THEN CALL FLS$SCRUB( PINCRW( FPARAM_.PTR$, SIZEW(FM$GRAN) ) );
     1843    20593    4            DISK_OPEN.IFPARAM_ = FPARAM_;  /* Just need FIT                      */
     1844    20594
     1845    20595    4          CASE( %INACTIVE_FILE );
     1846    20596    4            DISK_OPEN.IFPARAM_ = VECTOR(A_FIT);
     1847    20597    4            CODE$ = PINCRW( ADDR(A_FIT), SIZEW(FM$GRAN) );
     1848    20598    4            CALL XSF$LOCCODP( CODE$, 06 )
     1849    20599    5             WHENALTRETURN DO;
     1850    20600    5               CALL M$XXX;                 /* We know our FIT has a CODE06       */
     1851    20601    5               END;
     1852    20602    4            SOURCE_CODE$ = FPARAM_.PTR$;
     1853    20603    4            CALL XSF$LOCCODP( SOURCE_CODE$, 06 )
     1854    20604    5             WHENRETURN DO;
     1855    20605    5               CODE06 = SOURCE_CODE$->CODE06; /* Put the right SN in CODE06      */
     1856    20606    5               END;
     1857    20607    5             WHENALTRETURN DO;
     1858    20608    5               CODE06 = '0'B;
     1859    20609    5               END;
     1860    20610    4            CODE$ = PINCRW( ADDR(A_FIT), SIZEW(FM$GRAN) );
     1861    20611    4            CALL XSF$LOCCODP( CODE$, 03 )
     1862    20612    5             WHENALTRETURN DO;
     1863    20613    5               CALL M$XXX;                 /* We know our FIT has a CODE03       */
     1864    20614    5               END;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:52   
     1865    20615    4            CODE03.DESC = '0'B;
     1866    20616    4            CODE03.DESC.ARCHIVE = '1'B;
     1867    20617
     1868    20618    4          CASE( %DEL_FILE, %CLEANUP_FILE );
     1869    20619    4            IF SOURCE = %DISK@
     1870    20620    4             THEN CALL FLM_ADD_TO_DEL_LIST( '0'B ) ALTRET( JUSTALT );
     1871    20621    4            DISK_OPEN.IFPARAM_ = VECTOR(A_FIT);
     1872    20622    4            CODE$ = PINCRW( ADDR(A_FIT), SIZEW(FM$GRAN) );
     1873    20623    4            CALL XSF$LOCCODP( CODE$, 03 )
     1874    20624    5             WHENALTRETURN DO;
     1875    20625    5               CALL M$XXX;                 /* We know our FIT has a CODE03       */
     1876    20626    5               END;
     1877    20627    4            CODE03.DESC = '0'B;
     1878    20628    4            DISK_OPEN.V.EXPIRE# = SOURCE_UTS;
     1879    20629
     1880    20630    4          END;
     1881    20631    3         CALL FLM_COPY_FILE_TO_DISK;
     1882    20632
     1883    20633    3         IF GOING_TO_DEST                  /* File went to destination           */
     1884    20634    4          THEN DO;
     1885    20635    5            DO CASE( COMMAND );
     1886    20636    5             CASE( %RESTORE, %REBUILD );
     1887    20637        /***
     1888    20638         *** If destination file ended up as a FIT-only file (no data), add
     1889    20639         *** name to :DATA.$$EFT.
     1890    20640         *** If destination file was a FIT-only file prior to this file being copied,
     1891    20641         *** delete name from the :NODATA.$$EFT file. Note: May eventually have
     1892    20642         *** to check all files so that :NODATA.$$EFT is always current.
     1893    20643         *** (i.e., If FIT-only file gets deleted via PCL, won't get deleted from :NODATA.)
     1894    20644         ***/
     1895    20645    5               IF FIT_ONLY_RSTRD
     1896    20646    6                THEN DO;
     1897    20647    6                  NODATA_KEY.ACCT# = SAVE_DCB$->F$DCB.ACCT#;
     1898    20648    6                  NODATA_KEY.NAME#.L = SAVE_DCB$->F$DCB.NAME#.L;
     1899    20649    6                  NODATA_KEY.NAME#.C = SAVE_DCB$->F$DCB.NAME#.C;
     1900    20650    6                  CALL M$WRITE( WRITE_NODATA_LIST )
     1901    20651    7                   WHENALTRETURN DO;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:53   
     1902    20652    7                     CALL FLI$RPT_ERR;
     1903    20653    7                     GOTO JUSTALT;
     1904    20654    7                     END;
     1905    20655    6                  END;
     1906    20656    6                ELSE DO;
     1907    20657    6                  IF DEST_FILE_TYPE = %ACUP_FILE
     1908    20658    7                   THEN DO;
     1909    20659    7                     NODATA_KEY.ACCT# = SAVE_DCB$->F$DCB.ACCT#;
     1910    20660    7                     NODATA_KEY.NAME#.L = SAVE_DCB$->F$DCB.NAME#.L;
     1911    20661    7                     NODATA_KEY.NAME#.C = SAVE_DCB$->F$DCB.NAME#.C;
     1912    20662    7                     CALL M$DELREC( DEL_NODATA_REC )
     1913    20663    8                      WHENALTRETURN DO;
     1914    20664    8                        CALL FLI$RPT_ERR;
     1915    20665    8                        END;
     1916    20666    7                     END;
     1917    20667    6                  END;
     1918    20668    5             END;
     1919    20669    4            END;
     1920    20670    3         END;
     1921    20671    3       ELSE DO;                            /* Not copying tape file to disk      */
     1922    20672        /***
     1923    20673         *** Update access time on DUAL pack if DUALing incrementally with ACUP set.
     1924    20674         *** Since file was not copied it is a candidate.
     1925    20675         ***/
     1926    20676    3         IF COMMAND = %REAL_DUAL
     1927    20677    3           AND TAPE_OPTION.PROTTYPE = %INCREMENTAL
     1928    20678    3           AND DISK_OPTION.ACUP
     1929    20679    3           AND NOT DISK_SRCHCOND.DELF#     /* Set on 1st pass of DUAL INCR       */
     1930    20680    4          THEN DO;
     1931    20681    5   DUAL_DO: DO CASE (SOURCE_FILE_TYPE );
     1932    20682    5             CASE (%REG_FILE, %ACUP_FILE, %IDS_FAST_FILE);
     1933    20683    5               CODE$ = SAVE_AD_FD_FIT_.PTR$;
     1934    20684    5               CALL XSF$LOCCODP( CODE$, 14 )
     1935    20685    6                WHENALTRETURN DO;
     1936    20686    6                  EXIT DUAL_DO;            /* Exit since code14 can't be found   */
     1937    20687    6                  END;
     1938    20688    5               IF NOT CODE14.ACCESS.NOACUP AND FPARAM_.PTR$ ~= ADDR(NIL)
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:54   
     1939    20689    6                THEN DO;         /* O.K. to update the access date in dest. FIT  */
     1940    20690    6                  CODE04$ = PINCRW( FPARAM_.PTR$, SIZEW(FM$GRAN) );
     1941    20691    6                  CALL XSF$LOCCODP( CODE04$, 04 ) /* Get source file code 04     */
     1942    20692    7                   WHENALTRETURN DO;
     1943    20693    7                     EXIT DUAL_DO;
     1944    20694    7                     END;
     1945    20695    6                  CODE$ = PINCRW( FPARAM_.PTR$, SIZEW(FM$GRAN) );
     1946    20696    6                  CALL XSF$LOCCODP( CODE$, 05 ) /* Get source file code 05       */
     1947    20697    7                   WHENALTRETURN DO;
     1948    20698    7                     EXIT DUAL_DO;
     1949    20699    7                     END;
     1950    20700        /***
     1951    20701         *** If source file was accessed since last DUAL and access date is not
     1952    20702         *** the same as the destination access time, update destination access time.
     1953    20703         ***/
     1954    20704    6                  IF CODE04$->CODE04.ACCESS.TIME > CODE$->CODE05.BACKUP.TIME
     1955    20705    7                   THEN DO;
     1956    20706    7                     MODIFIED_FIT_ = DISK_FIT_;
     1957    20707    7                     CODE$ = PINCRW( MODIFIED_FIT_.PTR$, SIZEW(FM$GRAN) );
     1958    20708    7                     CALL XSF$LOCCODP( CODE$, 04 ) /* Dest. file code 04         */
     1959    20709    8                      WHENALTRETURN DO;
     1960    20710    8                        EXIT DUAL_DO;
     1961    20711    8                        END;
     1962    20712    7                     IF CODE04.ACCESS.TIME = CODE04$->CODE04.ACCESS.TIME
     1963    20713    7                      THEN EXIT DUAL_DO;   /* Previously updated, exit           */
     1964    20714    7                     CODE04.ACCESS.TIME = CODE04$->CODE04.ACCESS.TIME;
     1965    20715    7                     MODIFIED_FIT_.PTR$ = PINCRW( MODIFIED_FIT_.PTR$, SIZEW(FM$GRAN) );
     1966    20716    7                     MODIFIED_FIT_.BOUND = MODIFIED_FIT_.BOUND - SIZEC(FM$GRAN);
     1967    20717    7                     DISK_CLOSE.IFPARAM_ = MODIFIED_FIT_;
     1968    20718    7                     DISK_CLOSE.V.DESC = M$DISK_OUT$->F$DCB.DESC;
     1969    20719    7                     DISK_CLOSE.V.EFTOPER.UPDDESC# = %YES#;
     1970    20720    7                     DISK_CLOSE.V.DISP# = %SAVE#;
     1971    20721    7                     CALL M$CLOSE( DISK_CLOSE );
     1972    20722    7                     DISK_CLOSE.IFPARAM_ = VECTOR(NIL);
     1973    20723    7                     DISK_CLOSE.V.EFTOPER = '0'B;
     1974    20724    7                     FIT_UPDATE = '1'B;
     1975    20725    7                     END;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:55   
     1976    20726    6                  END;
     1977    20727    5             END;
     1978    20728    4            END;
     1979    20729    3         IF F$DCB.FCD#
     1980    20730    4          THEN DO;                         /* Just close it                      */
     1981    20731    4            DISK_CLOSE.V.EFTOPER = '0'B;
     1982    20732    4            DISK_CLOSE.V.DISP# = %SAVE#;
     1983    20733    4            CALL M$CLOSE( DISK_CLOSE )
     1984    20734    5             WHENALTRETURN DO;
     1985    20735    5               END;
     1986    20736    4            END;
     1987    20737    3         END;
     1988    20738
     1989    20739    2      RETURN;
     1990    20740
     1991    20741    2   JUSTALT: ;
     1992    20742    2      ALTRETURN;
     1993    20743
     1994    20744    2   CHECK_DEST_FILE: PROC;
     1995    20745
     1996    20746        /********************/
     1997    20747
     1998    20748    3      IF DEST_FILE_TYPE = %CLEANUP_FILE
     1999    20749    3       THEN GOING_TO_DEST = '1'B;          /* Nothing there                      */
     2000    20750    3       ELSE IF DEST_FILE_TYPE = %DEL_FILE
     2001    20751    3          THEN IF SOURCE_FILE_TYPE ~= %CLEANUP_FILE
     2002    20752    3              AND SOURCE_FILE_TYPE ~= %DEL_FILE
     2003    20753    3             THEN GOING_TO_DEST = '1'B;
     2004    20754    3      RETURN;
     2005    20755    3   END CHECK_DEST_FILE;
     2006    20756
     2007    20757    2   END FLM_FILE_TO_DISK_HANDLING;
     2008    20758
     2009    20759
     2010    20760    1   FLM_FILE_FROM_DISK_WRAPUP: PROC ALTRET;
     2011    20761
     2012    20762        /********************/
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:56   
     2013    20763
     2014    20764    2      IF DISK_OPTION.XFER
     2015    20765    2       THEN IF DISK_OPTION.DELETE
     2016    20766    2          THEN ;
     2017    20767    2          ELSE RETURN;
     2018    20768    2       ELSE IF DISK_OPTION.NOUPDATE
     2019    20769    2          THEN RETURN;
     2020    20770    2          ELSE ;
     2021    20771
     2022    20772    2      EFTWORD = '0'B;
     2023    20773    2      IF CROSSED = '*' THEN EFTWORD.CROSS = '1'B;
     2024    20774    2      IF (COMMAND = %PURGE OR COMMAND = %ARCHIVE_CMD)
     2025    20775    2        AND SUBSTR(TAPE_DCBLIST.DCB$(0)->F$DCB.RES#,0,2) = 'OD'
     2026    20776    2       THEN EFTWORDEXPIRE = SAVE_FSN;
     2027    20777    2       ELSE EFTWORD.FSN = SAVE_FSN;
     2028    20778    2      DISK_CLOSE_NEXT.SN_ = VECTOR(VLP_SN);
     2029    20779    2      DISK_CLOSE_NEXT.V.EFTOPER.UPDDESC# = '1'B;
     2030    20780    2      DISK_CLOSE_NEXT.V.DESC = SOURCE_DCB$->F$DCB.DESC;
     2031    20781    2      IF NOT (COMMAND = %RESTORE AND SOURCE = %DISK@)
     2032    20782    3       THEN DO;
     2033    20783    4         DO CASE( DEST );
     2034    20784    4          CASE( %DISK@ );
     2035    20785    4            DISK_CLOSE_NEXT.V.DESC.TPB# = '0'B;
     2036    20786    4            VLP_SN.SN#(0) = SAVE_SN;
     2037    20787    4          CASE( %TAPE@ );
     2038    20788    4            DISK_CLOSE_NEXT.V.DESC.TPB# = '1'B;
     2039    20789    4            VLP_SN.SN#(0) = SAVE_SN;
     2040    20790    4          END;
     2041    20791    3         END;
     2042    20792
     2043    20793    2      IF DISK_OPTION.DELETE
     2044    20794    2        OR (DISK_OPTION.CLEANUP AND SOURCE_FILE_TYPE = %DEL_FILE)
     2045    20795    2       THEN CALL FLM_ADD_TO_DEL_LIST( '0'B ) ALTRET( JUSTALT );
     2046    20796    3       ELSE DO;
     2047    20797    3         IF COMMAND ~= %PURGE AND COMMAND ~= %ARCHIVE_CMD
     2048    20798    4          THEN DO;
     2049    20799    4            IF (SOURCE_DCB$->F$DCB.ORG# = %IDS# /* Don't update CODE05 on FAST save */
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:57   
     2050    20800    4              AND DISK_OPTION.IDSS = %FAST) /* or disk restore                   */
     2051    20801    4              OR (COMMAND = %RESTORE AND SOURCE = %DISK@)
     2052    20802    4              OR (COMMAND = %BACKUP /* or ACUP type of backup where only the FIT */
     2053    20803    4              AND DISK_OPTION.ACUP         /* was saved.                         */
     2054    20804    4              AND FIT_ONLY_SAVED)
     2055    20805    4             THEN;
     2056    20806    4             ELSE DISK_CLOSE_NEXT.V.EFTOPER.BACKUP# = '1'B;
     2057    20807    4            IF ERR.CODE = %E$DI
     2058    20808    5             THEN DO;
     2059    20809    5               DISK_CLOSE_NEXT.V.DESC.BAD# = '1'B;
     2060    20810    5               IF FPT_EXIT.V.STEPCC# < %MINOR_ERROR
     2061    20811    5                THEN FPT_EXIT.V.STEPCC# = %MINOR_ERROR;
     2062    20812    5               END;
     2063    20813    4            END;
     2064    20814    4          ELSE DO;
     2065    20815    4            DISK_CLOSE_NEXT.V.EFTOPER.ASTOW# = '1'B;
     2066    20816    4            DISK_CLOSE_NEXT.V.DESC.ARCHIVE# = '1'B;
     2067    20817    4            IF ((NOT SOURCE_DCB$->F$DCB.DESC.ACTIVE#) OR DISK_OPTION.INACTIVATE)
     2068    20818    4              AND NOT SOURCE_DCB$->F$DCB.DESC.DELF#
     2069    20819    5             THEN DO;
     2070    20820    5               CALL FLM_ADD_TO_DEL_LIST( '1'B ) ALTRET( JUSTALT );
     2071    20821    5               END;
     2072    20822    4             ELSE DISK_CLOSE_NEXT.V.DESC.ACTIVE# = '0'B;
     2073    20823    4            IF SUBSTR(TAPE_DCBLIST.DCB$(0)->F$DCB.RES#,0,2) = 'OD'
     2074    20824    4             THEN DISK_CLOSE_NEXT.V.DESC.ODSTOW# = '1'B; /* Archvd. to opt. disk */
     2075    20825    4             ELSE DISK_CLOSE_NEXT.V.DESC.ODSTOW# = '0'B; /* Archvd. to tape      */
     2076    20826    4            END;
     2077    20827    3         END;
     2078    20828
     2079    20829    2      DISK_CLOSE_NEXT.V.EXPIRE# = EFTWORDEXPIRE;
     2080    20830    2      RETURN;
     2081    20831
     2082    20832    2   JUSTALT: ;
     2083    20833    2      ALTRETURN;
     2084    20834
     2085    20835    2   END FLM_FILE_FROM_DISK_WRAPUP;
     2086    20836
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:58   
     2087    20837
     2088    20838    1   FLM_FILE_TO_DISK_WRAPUP: PROC ALTRET;
     2089    20839
     2090    20840        /********************/
     2091    20841
     2092    20842    2      IF CROSSED ~= ' ' THEN EFTWORD.CROSS = '1'B;
     2093    20843    2      DISK_CLOSE.V.EXPIRE# = EFTWORDEXPIRE;
     2094    20844
     2095    20845    2      IF SOURCE_FILE_TYPE = %ACUP_FILE AND F$DCB.FUN# = %IN#
     2096    20846    2        OR SOURCE_FILE_TYPE = %ACUP_FILE AND F$DCB.FUN# = %UPDATE#
     2097    20847    3       THEN DO;                            /* Update FIT                         */
     2098    20848    3         FPARAM_.PTR$ = PINCRW( FPARAM_.PTR$, SIZEW(FM$GRAN) );
     2099    20849    3         FPARAM_.BOUND = FPARAM_.BOUND - SIZEC(FM$GRAN);
     2100    20850    3         DISK_CLOSE.IFPARAM_ = FPARAM_;
     2101    20851    3         END;
     2102    20852
     2103    20853    2      CALL M$CLOSE( DISK_CLOSE )
     2104    20854    3       WHENALTRETURN DO;
     2105    20855    3         IF SOURCE_FILE_TYPE = %CLEANUP_FILE
     2106    20856    3          THEN SOURCE_FILE_TYPE = %DEL_FILE; /* Don't clean up if error          */
     2107    20857    3         ERR = B$TCB.ALT$->B$ALT.ERR;
     2108    20858    3         END;
     2109    20859
     2110    20860    2      DISK_CLOSE.IFPARAM_ = VECTOR(NIL);
     2111    20861    2      DISK_CLOSE.V.DESC = '0'B;
     2112    20862    2      DISK_CLOSE.V.EFTOPER = '0'B;
     2113    20863
     2114    20864    2      IF SOURCE_FILE_TYPE = %CLEANUP_FILE
     2115    20865    3       THEN DO;                            /* Cleanup file directory entry       */
     2116    20866    3         DISK_OPEN.V.FUN# = %IN#;
     2117    20867    3         CALL M$OPEN( DISK_OPEN )
     2118    20868    4          WHENRETURN DO;
     2119    20869    4            DISK_CLOSE.V.EFTOPER.DELFDE# = %YES#;
     2120    20870    4            DISK_CLOSE.V.DISP# = %SAVE#;
     2121    20871    4            CALL M$CLOSE( DISK_CLOSE )     /* Got it                             */
     2122    20872    5             WHENALTRETURN DO;
     2123    20873    5               END;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:59   
     2124    20874    4            ERR.CODE = %E$NOFILE;
     2125    20875    4            END;
     2126    20876    4          WHENALTRETURN DO;
     2127    20877    4            ERR = B$TCB.ALT$->B$ALT.ERR;
     2128    20878    4            END;
     2129    20879    3         END;
     2130    20880
     2131    20881    2      RETURN;
     2132    20882
     2133    20883    2   END FLM_FILE_TO_DISK_WRAPUP;
     2134    20884
     2135    20885
     2136    20886
     2137    20887    1   FLM_FILE_FROM_DISK_CLEANUP: PROC(TERM_ERR) ALTRET;
     2138    20888
     2139    20889    2   DCL TERM_ERR BIT(36) ALIGNED;           /* Error when processing terminated   */
     2140    20890
     2141    20891    2   DCL TERM_ERR_SAVE BIT(36) ALIGNED AUTO;
     2142    20892
     2143    20893        /********************/
     2144    20894
     2145    20895        /***
     2146    20896         *** Write cleanup information to tape.
     2147    20897         ***/
     2148    20898
     2149    20899    2      TERM_ERR_SAVE = TERM_ERR;
     2150    20900    2      SAVE_SN = ' ';
     2151    20901    2      SAVE_FSN = 0;
     2152    20902    2      IF NOT DISK_OPTION.XFER
     2153    20903    3       THEN DO;
     2154    20904    3         CALL M$PFIL( PFIL_DELETE_LIST )
     2155    20905    4          WHENRETURN DO;
     2156    20906    4            ERR = '0'B;
     2157    20907    5            DO WHILE( NOT ERR );
     2158    20908    5               CALL M$READ( READ_DELETE_LIST )
     2159    20909    6                WHENRETURN DO;
     2160    20910    6                  EFTFILE_DCB$->F$DCB.NAME#.C = DEL_LIST_REC.NAME#.C;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:60   
     2161    20911    6                  IF DEL_LIST_REC.NAME#.L = 32
     2162    20912    6                   THEN EFTFILE_DCB$->F$DCB.NAME#.L = 0;
     2163    20913    6                   ELSE EFTFILE_DCB$->F$DCB.NAME#.L = DEL_LIST_REC.NAME#.L;
     2164    20914    6                  EFTFILE_DCB$->F$DCB.ACCT# = DEL_LIST_REC.ACCT;
     2165    20915    6                  EFTFILE_DCB$->F$DCB.PSN# = DEL_LIST_REC.VLP_SN.SN#(0);
     2166    20916    6                  EFTFILE_DCB$->F$DCB.DESC = '0'B;
     2167    20917    6                  IF EFTFILE_DCB$->F$DCB.NAME#.C = ' '
     2168    20918    6                    AND EFTFILE_DCB$->F$DCB.NAME#.L = 0
     2169    20919    7                   THEN DO;           /* Write cleaned up account information    */
     2170    20920    7                     ERR.CODE = %E$NOPROC;
     2171    20921    7                     IF NOT DEST = %DISK@
     2172    20922    7                      THEN CALL FLS$FILE_PACKER(EFTFILE_DCB$,0,FPARAM_,SAVE_SN,
     2173    20923    7                          SAVE_FSN,CROSSED,ERR,ABORT,FIT_ONLY_SAVED,COMMAND)
     2174    20924    7                          ALTRET(ERROR_EXIT);
     2175    20925    7                     ERR = '0'B;
     2176    20926    7                     END;
     2177    20927    6                   ELSE IF NOT DEL_LIST_REC.INACTIVATE
     2178    20928    7                      THEN DO;             /* Write cleaned up file information  */
     2179    20929    7                        ERR.CODE = %E$NOFILE;
     2180    20930    7                        IF NOT DEST = %DISK@
     2181    20931    7                         THEN CALL FLS$FILE_PACKER(EFTFILE_DCB$,0,FPARAM_,SAVE_SN,
     2182    20932    7                             SAVE_FSN,CROSSED,ERR,ABORT,FIT_ONLY_SAVED,COMMAND)
     2183    20933    7                             ALTRET(ERROR_EXIT);
     2184    20934    7                        ERR = '0'B;
     2185    20935    7                        END;
     2186    20936    6                  IF NOT ERR
     2187    20937    7                   THEN DO;
     2188    20938    7                     DEL_LIST_REC.CSN = SAVE_SN;
     2189    20939    7                     DEL_LIST_REC.CFSN = SAVE_FSN;
     2190    20940    7                     CALL M$WRITE( REWRITE_DELETE_LIST )
     2191    20941    8                      WHENALTRETURN DO;
     2192    20942    8                        CALL FLI$RPT_ERR;
     2193    20943    8                        ERR = '1'B;
     2194    20944    8                        END;
     2195    20945    7                     END;
     2196    20946    6                  END;
     2197    20947    6                WHENALTRETURN DO;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:61   
     2198    20948    6                  ERR = '1'B;
     2199    20949    6                  END;
     2200    20950    5               END;
     2201    20951    4            END;
     2202    20952    4          WHENALTRETURN DO;
     2203    20953    4            END;
     2204    20954    3         END;
     2205    20955    2      IF DEST = %TAPE@
     2206    20956    3       THEN DO;
     2207    20957    3         CALL FLM_UPDATE_RUN_INFO;
     2208    20958    3         CALL FLS$FILE_PACKER_FIN( COMMAND )
     2209    20959    4          WHENALTRETURN DO; /* Serious error - Unable to write remainderof file  */
     2210    20960    4            CALL FLN$DISK_CLOSE_ALL;
     2211    20961    4            IF COMMAND = %ARCHIVE_CMD
     2212    20962    4              OR (COMMAND = %PURGE AND ARCHIVE$ ~= ADDR(NIL))
     2213    20963    5             THEN DO;
     2214    20964        /***
     2215    20965         *** All files contained in the last block that did not get written due
     2216    20966         *** to an error, requeue for stowing (QS).
     2217    20967         ***/
     2218    20968    5               CALL FLM_REQUEUE_FILES_FOR_STOW;
     2219    20969    5               END;
     2220    20970    4            ALTRETURN;
     2221    20971    4            END;
     2222    20972    3         END;
     2223    20973    2      CALL FLN$DISK_CLOSE_ALL;
     2224    20974
     2225    20975        /***
     2226    20976         *** Check if required. Note that files may have been found (ANY_FILES_FOUND)
     2227    20977         *** but not necessarily copied to tape due to flunking spec'd criterion.
     2228    20978         ***/
     2229    20979
     2230    20980    2      IF TAPE_OPTION.CHECK AND ANY_FILES_FOUND
     2231    20981    3       THEN DO;
     2232    20982    3         CALL FLI$TSN_USED( 1,0 )          /* Any files copied?                  */
     2233    20983    4          WHENRETURN DO;
     2234    20984    4            CALL M$CLOSE( CLOSE_TSN_USED ) /* Yep, check them                    */
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:62   
     2235    20985    5             WHENALTRETURN DO;
     2236    20986    5               END;
     2237    20987    4            CALL FLI$ALLOC_BUF;       /* Free buffers...don't need all for check */
     2238    20988    4            TAPE_OPEN.SN_ = VECTOR(ERASE); /* Indicate intrnl sn lst to FLC$CHECK */
     2239    20989    4            BREAK_TASK = 'Autochecking!';
     2240    20990    4            IF (ARCHIVE$ ~= ADDR(NIL) AND COMMAND = %PURGE)
     2241    20991    5             THEN DO;            /* Reset criteria - not required for checking   */
     2242    20992    5               DISK_CRIT.TIM = '0'B;
     2243    20993    5               DATE_CRIT.EXPD = '0'B;
     2244    20994    5               END;
     2245    20995    4            CALL FLM$MOVE( %CHECK ) ALTRET( DELALT );
     2246    20996    4            END;
     2247    20997    4          WHENALTRETURN DO;
     2248    20998    4            CALL M$CLOSE( CLOSE_TSN_USED )
     2249    20999    5             WHENALTRETURN DO;
     2250    21000    5               END;
     2251    21001    4            END;
     2252    21002    3         END;
     2253    21003
     2254    21004        /***
     2255    21005         *** Now it's time to cleanup/inactivate files.
     2256    21006         ***/
     2257    21007
     2258    21008    2      IF NOT DISK_OPTION.NOUPDATE
     2259    21009    2       THEN CALL FLM_CLEANUP(TERM_ERR_SAVE);
     2260    21010    3       ELSE DO;
     2261    21011    3         IF DISK_OPTION.XFER AND DISK_OPTION.DELETE /* Transferring unprot.?     */
     2262    21012    4          THEN DO;
     2263    21013    5            DO CASE( COMMAND );
     2264    21014    5             CASE( %OPEN_CREATE,%OPEN_EXTEND );
     2265    21015        /***
     2266    21016         *** Copying to tape. If check specified, then checking must be performed before
     2267    21017         *** files are deleted. Otherwise, o.k. to delete files now.
     2268    21018         ***/
     2269    21019    5               IF NOT CHECK_TAPE
     2270    21020    5                THEN CALL FLM_CLEANUP(TERM_ERR_SAVE);
     2271    21021    5             CASE( ELSE );
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:63   
     2272    21022    5               CALL FLM_CLEANUP(TERM_ERR_SAVE);
     2273    21023    5             END;
     2274    21024    4            END;
     2275    21025    3         END;
     2276    21026    2      CALL M$CLOSE(CLOSE_DELETE_LIST)
     2277    21027    2       WHENALTRETURN
     2278    21028    3      DO;
     2279    21029    3         CALL FLI$RPT_ERR;
     2280    21030    3         END;
     2281    21031
     2282    21032    2      RETURN;
     2283    21033
     2284    21034    2   ERROR_EXIT: ;
     2285    21035    2      CALL FLS$FILE_PACKER_FIN( COMMAND )
     2286    21036    3       WHENALTRETURN DO;
     2287    21037    3         END;
     2288    21038    2      CALL FLN$DISK_CLOSE_ALL;
     2289    21039
     2290    21040    2   DELALT: ;
     2291    21041    2      CALL M$CLOSE(CLOSE_DELETE_LIST)
     2292    21042    3       WHENALTRETURN DO;
     2293    21043    3         END;
     2294    21044    2      IF NBR_DEL_FILES > 0
     2295    21045    2       THEN CALL FLI$RPT_ERR( E_DEL_FILES_REMAIN );
     2296    21046
     2297    21047    2   JUSTALT: ;
     2298    21048    2      ALTRETURN;
     2299    21049
     2300    21050    2   END FLM_FILE_FROM_DISK_CLEANUP;
     2301    21051
     2302    21052
     2303    21053    1   FLM_GET_DEST_ACCT_UTS: PROC;
     2304    21054
     2305    21055        /********************/
     2306    21056
     2307    21057    2      IF ERR.CODE = %E$FDEOF OR ERR.CODE = %E$ADEOF
     2308    21058    3       THEN DO;                            /* Have FIT                           */
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:64   
     2309    21059    3         CODE$ = DISK_FIT_.PTR$;
     2310    21060    3         CALL XSF$LOCCODP( CODE$, 04 )
     2311    21061    4          WHENRETURN DO;
     2312    21062    4            DEST_UTS = CODE04.MODIFY.TIME;
     2313    21063    4            END;
     2314    21064    4          WHENALTRETURN DO;
     2315    21065    4            DEST_UTS = 0;
     2316    21066    4            END;
     2317    21067    3         END;
     2318    21068    2       ELSE DEST_UTS = 0;
     2319    21069
     2320    21070    2      RETURN;
     2321    21071
     2322    21072    2   END FLM_GET_DEST_ACCT_UTS;
     2323    21073
     2324    21074
     2325    21075    1   FLM_GET_SOURCE_UTS: PROC;
     2326    21076
     2327    21077        /********************/
     2328    21078
     2329    21079    2      CODE$ = ADDR(NIL);
     2330    21080    3      DO CASE( SOURCE_FILE_TYPE );
     2331    21081
     2332    21082    3       CASE( %DEL_FILE, %CLEANUP_ACCT, %CLEANUP_FILE );
     2333    21083    3         IF SOURCE = %DISK@
     2334    21084    3          THEN SOURCE_UTS = SOURCE_DCB$->F$DCB.EXPIRE#;
     2335    21085    3          ELSE SOURCE_UTS = BLK_TAG.UTS;
     2336    21086
     2337    21087    3       CASE( %INACTIVE_FILE );
     2338    21088    3         CODE = 06;
     2339    21089    3         CODE$ = FPARAM_.PTR$;
     2340    21090
     2341    21091    3       CASE( %REG_FILE, %ACUP_FILE, %IDS_FAST_FILE );
     2342    21092    3         CODE = 04;
     2343    21093    3         IF FPARAM_.PTR$ = ADDR(NIL)
     2344    21094    3          THEN SOURCE_UTS = 0;
     2345    21095    3          ELSE CODE$ = PINCRW( FPARAM_.PTR$, SIZEW(FM$GRAN) );
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:65   
     2346    21096
     2347    21097    3       CASE( %FILE_DIR, %ACCT_DIR );
     2348    21098    3         CODE = 04;
     2349    21099    3         CODE$ = FPARAM_.PTR$;
     2350    21100    3         SOURCE_UTS = 0;
     2351    21101
     2352    21102    3       END;
     2353    21103
     2354    21104    2      IF CODE$ ~= ADDR(NIL)
     2355    21105    3       THEN DO;
     2356    21106    3         CALL XSF$LOCCODP( CODE$, CODE )
     2357    21107    4          WHENRETURN DO;
     2358    21108    4            IF CODE = 04
     2359    21109    4             THEN SOURCE_UTS = CODE04.MODIFY.TIME;
     2360    21110    4             ELSE SOURCE_UTS = CODE06.STOW.TIME;
     2361    21111    4            END;
     2362    21112    4          WHENALTRETURN DO;
     2363    21113    4            SOURCE_UTS = 0;
     2364    21114    4            END;
     2365    21115    3         END;
     2366    21116
     2367    21117    2      TAPE_CODE04$ = CODE$;
     2368    21118    2      RETURN;
     2369    21119
     2370    21120    2   END FLM_GET_SOURCE_UTS;
     2371    21121
     2372    21122
     2373    21123    1   FLM_GET_DEST_FILE_UTS: PROC;
     2374    21124
     2375    21125        /********************/
     2376    21126
     2377    21127    2      DISK_OPEN.V.FUN# = %IN#;
     2378    21128    2      DISK_OPEN.IFPARAM_ = VECTOR(NIL);
     2379    21129    2      DISK_OPEN.FPARAM_ = DISK_FIT_;
     2380    21130    2      DISK_CODE06$ = ADDR(NIL);
     2381    21131    2      DISK_CODE04$ = ADDR(NIL);
     2382    21132    2      DEST_FILE_TYPE = %CLEANUP_FILE;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:66   
     2383    21133
     2384    21134    2      CALL M$OPEN( DISK_OPEN )
     2385    21135    3       WHENRETURN DO;                      /* File may exist                     */
     2386    21136    3         DISK_DESC_SAVE = F$DCB.DESC;
     2387    21137    3         IF TO_DISK_NAME = F$DCB.NAME#
     2388    21138    3           AND TO_DISK_ACCT.ACCT# = F$DCB.ACCT#
     2389    21139    4          THEN DO;                         /* File (may be deleted) exists       */
     2390    21140    4            IF F$DCB.DESC.DELF#
     2391    21141    4             THEN IF F$DCB.DESC.ARCHIVE#
     2392    21142    5                THEN DO;                   /* Inactively archived                */
     2393    21143    5                  DEST_FILE_TYPE = %INACTIVE_FILE;
     2394    21144    5                  CODE$ = DISK_FIT_.PTR$;
     2395    21145    5                  CALL XSF$LOCCODP( CODE$, 06 )
     2396    21146    6                   WHENRETURN DO;
     2397    21147    6                     DEST_UTS = CODE06.STOW.TIME;
     2398    21148    6                     DISK_CODE06$ = CODE$;
     2399    21149    6                     END;
     2400    21150    6                   WHENALTRETURN DO;
     2401    21151    6                     DEST_UTS = 0;
     2402    21152    6                     END;
     2403    21153    5                  END;
     2404    21154    5                ELSE DO;                   /* Deleted                            */
     2405    21155    5                  DEST_FILE_TYPE = %DEL_FILE;
     2406    21156    5                  DEST_UTS = F$DCB.EXPIRE#;
     2407    21157    5                  END;
     2408    21158    5             ELSE DO;                      /* Ordinary file                      */
     2409    21159    5               DEST_FILE_TYPE = %REG_FILE;
     2410    21160    5               IF COMMAND = %RETRIEVE
     2411    21161    5                THEN CODE = 06;
     2412    21162    5                ELSE CODE = 04;
     2413    21163    5               CODE$ = PINCRW( DISK_FIT_.PTR$, SIZEW(FM$GRAN) );
     2414    21164    5               CALL XSF$LOCCODP( CODE$, CODE )
     2415    21165    6                WHENRETURN DO;
     2416    21166    6                  IF CODE = 04
     2417    21167    7                   THEN DO;
     2418    21168    7                     DEST_UTS = CODE04.MODIFY.TIME;
     2419    21169    7                     DISK_CODE04$ = CODE$;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:67   
     2420    21170    7                     IF CODE04.CREATOR.ACCT = ' ' AND CODE04.CREATOR.NAME =
             21170                              '!EFT_NO_DATA'
     2421    21171    8                      THEN DO;             /* FIT-only file on disk              */
     2422    21172    8                        DEST_FILE_TYPE = %ACUP_FILE;
     2423    21173    8                        END;
     2424    21174    7                     END;
     2425    21175    7                   ELSE DO;
     2426    21176    7                     DEST_UTS = CODE06.STOW.TIME;
     2427    21177    7                     DISK_CODE06$ = CODE$;
     2428    21178    7                     END;
     2429    21179    6                  END;
     2430    21180    6                WHENALTRETURN DO;
     2431    21181    6                  DEST_UTS = 0;
     2432    21182    6                  END;
     2433    21183    5               END;
     2434    21184    4            END;
     2435    21185    4          ELSE DO;
     2436    21186    4            DEST_UTS = 0;
     2437    21187    4            DISK_CLOSE.V.EFTOPER = '0'B;
     2438    21188    4            DISK_CLOSE.V.DISP# = %SAVE#;
     2439    21189    4            CALL M$CLOSE( DISK_CLOSE )
     2440    21190    5             WHENALTRETURN DO;
     2441    21191    5               END;
     2442    21192    4            END;
     2443    21193    3         END;
     2444    21194    3       WHENALTRETURN DO;
     2445    21195    3         DEST_UTS = 0;
     2446    21196    3         END;
     2447    21197
     2448    21198    2      IF TAPE_OPTION.PROTTYPE = %INCREMENTAL
     2449    21199    3       THEN DO;
     2450    21200    3         IF SOURCE_FILE_TYPE = %ACUP_FILE OR DEST_FILE_TYPE = %ACUP_FILE
     2451    21201    4          THEN DO;               /* Only bring back FIT if newer than old FIT    */
     2452    21202    4            IF DISK_CODE04$ = ADDR(NIL) OR TAPE_CODE04$ = ADDR(NIL)
     2453    21203    4             THEN ;
     2454    21204    4             ELSE IF TAPE_CODE04$->CODE04.MODIFY.TIME > DISK_CODE04$->CODE04.MODIFY.
             21204                      TIME
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:68   
     2455    21205    4                THEN SOURCE_UTS = DEST_UTS + 1;
     2456    21206    4                ELSE IF TAPE_CODE04$->CODE04.ACCESS.TIME > DISK_CODE04$->CODE04.ACCESS.
             21206                         TIME
     2457    21207    4                   THEN SOURCE_UTS = DEST_UTS + 1;
     2458    21208    4            END;
     2459    21209
     2460    21210    3         IF SOURCE_FILE_TYPE = %ACUP_FILE
     2461    21211    4          THEN DO;
     2462    21212    4            IF SOURCE_UTS >= DEST_UTS
     2463    21213    5             THEN DO;                      /* Bring back file                    */
     2464    21214    5               IF DEST_FILE_TYPE ~= %REG_FILE
     2465    21215    6                THEN DO;         /* File doesn't exist...bring back FIT only     */
     2466    21216    6                  DISK_OPEN.V.FUN# = %CREATE#;
     2467    21217    6                  TAPE_CODE04$->CODE04.CREATOR.ACCT = ' ';
     2468    21218    6                  TAPE_CODE04$->CODE04.CREATOR.NAME = '!EFT_NO_DATA';
     2469    21219    6                  FIT_ONLY_RSTRD = '1'B;
     2470    21220    6                  END;
     2471    21221    6                ELSE DO;
     2472    21222    6                  DISK_OPEN.V.FUN# = %IN#;
     2473    21223    6                  END;
     2474    21224    5               END;
     2475    21225    4            END;
     2476    21226    4          ELSE DO;
     2477    21227    4            DISK_OPEN.V.FUN# = %CREATE#;
     2478    21228    4            IF DEST_FILE_TYPE = %ACUP_FILE
     2479    21229    5             THEN DO;                      /* But bring back data granules       */
     2480    21230              /*N* We could figure out here if CODE03.UGRANS from the disk file
     2481    21231                   matches CODE03.UGRANS from the tape file.  If not, there'll
     2482    21232                   be trouble in Dixie tonight */
     2483    21233    5               FPARAM_ = DISK_FIT_;        /* Use existing file's FIT            */
     2484    21234    5               IF TAPE_CODE04$ ~= ADDR(NIL) AND DISK_CODE04$ ~= ADDR(NIL)
     2485    21235    5                THEN DISK_CODE04$->CODE04.CREATOR = TAPE_CODE04$->CODE04.CREATOR;
     2486    21236    5               SOURCE_UTS = DEST_UTS + 1;
     2487    21237    5               END;
     2488    21238    4            END;
     2489    21239    3         END;
     2490    21240    3       ELSE DO;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:69   
     2491    21241    3         DISK_OPEN.V.FUN# = %CREATE#;
     2492    21242    3         IF SOURCE_FILE_TYPE = %ACUP_FILE AND DEST_FILE_TYPE ~= %REG_FILE
     2493    21243    4          THEN DO;
     2494    21244    4            TAPE_CODE04$->CODE04.CREATOR.ACCT = ' ';
     2495    21245    4            TAPE_CODE04$->CODE04.CREATOR.NAME = '!EFT_NO_DATA';
     2496    21246    4            FIT_ONLY_RSTRD = '1'B;
     2497    21247    4            END;
     2498    21248    3         END;
     2499    21249
     2500    21250    2      IF DISK_OPEN.V.FUN# = %CREATE#
     2501    21251    2       THEN DISK_OPEN.FPARAM_ = VECTOR(NIL);
     2502    21252    2      RETURN;
     2503    21253
     2504    21254    2   END FLM_GET_DEST_FILE_UTS;
     2505    21255
     2506    21256
     2507    21257    1   FLM_DELETE_TO_DISK_FILE: PROC;
     2508    21258        /*F*  NAME: FLM_DELETE_TO_DISK_FILE
     2509    21259              PURPOSE: Delete deleted and inactively archived file directory
     2510    21260                 entries.  Unarchive actively archived files to permit them
     2511    21261                 to be deleted.
     2512    21262        */
     2513    21263
     2514    21264        /********************/
     2515    21265
     2516    21266    2      IF NOT F$DCB.FCD#
     2517    21267    2       THEN RETURN;                        /* Didn't exist                       */
     2518    21268
     2519    21269    2      DISK_CLOSE.V.EFTOPER = '0'B;
     2520    21270    2      DISK_CLOSE.V.DESC.TERMINATE# = %NO#;
     2521    21271    2      IF F$DCB.DESC.DELF#
     2522    21272    2       THEN DISK_CLOSE.V.EFTOPER.DELFDE# = %YES#;
     2523    21273    3       ELSE DO;
     2524    21274    3         IF F$DCB.DESC.ARCHIVE#
     2525    21275    4          THEN DO;
     2526    21276    4            DISK_CLOSE.V.EFTOPER.UPDDESC# = %YES#;
     2527    21277    4            DISK_CLOSE.V.DESC.TERMINATE# = %YES#;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:70   
     2528    21278    4            END;
     2529    21279    3          ELSE IF DISK_DEST_EXIST = %NEWFILE#
     2530    21280    4             THEN DO;
     2531    21281    5               DO CASE( SOURCE_FILE_TYPE );
     2532    21282    5                CASE( %ACUP_FILE );
     2533    21283    5                  DISK_CLOSE.V.DISP# = %SAVE#; /* Don't delete the dest. data    */
     2534    21284    5                  DISK_OPEN.V.FUN# = %UPDATE#;
     2535    21285    5                CASE( %IDS_FAST_FILE );
     2536    21286    5                  IF TAPE_OPTION.PROTTYPE = %INCREMENTAL
     2537    21287    6                   THEN DO;
     2538    21288    6                     DISK_CLOSE.V.DISP# = %SAVE#; /* Don't delete the dest. file */
     2539    21289    6                     DISK_OPEN.V.EXIST# = %OLDFILE#; /* Each gran. must be checked */
     2540    21290    6                     DISK_OPEN.V.FUN# = %CREATE#;
     2541    21291    6                     END;
     2542    21292    5                   ELSE DISK_CLOSE.V.DISP# = %RELEASE#;
     2543    21293    5                CASE( ELSE );
     2544    21294    5                  DISK_CLOSE.V.DISP# = %RELEASE#;
     2545    21295    5                END;
     2546    21296    4               END;
     2547    21297    3         END;
     2548    21298
     2549    21299                       /* We want to delete the file on the destination.  One of the  */
     2550    21300                       /* reasons is to make sure DUAL will be able to provide needed */
     2551    21301                                                /* granules on the DUAL pack.         */
     2552    21302
     2553    21303    2      CALL M$CLOSE( DISK_CLOSE )
     2554    21304    3       WHENALTRETURN DO;
     2555    21305    3         CALL FLI$RPT_ERR;
     2556    21306    3         END;
     2557    21307    2      DISK_CLOSE.V.DISP# = %SAVE#;
     2558    21308    2      IF DISK_CLOSE.V.DESC.TERMINATE#
     2559    21309    2        AND DISK_DEST_EXIST = %NEWFILE#
     2560    21310    3       THEN DO;
     2561    21311    3         DISK_OPEN.V.FUN# = %IN#;
     2562    21312    3         DISK_OPEN.V.DELETE# = %YES#;
     2563    21313    3         CALL M$OPEN ( DISK_OPEN )
     2564    21314    4          WHENALTRETURN DO;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:71   
     2565    21315    4            CALL FLI$RPT_ERR;
     2566    21316    4            END;
     2567    21317    3         DISK_OPEN.V.FUN# = %CREATE#;
     2568    21318    3         DISK_OPEN.V.DELETE# = %NO#;
     2569    21319    3         END;
     2570    21320    2      RETURN;
     2571    21321
     2572    21322    2   END FLM_DELETE_TO_DISK_FILE;
     2573    21323
     2574    21324
     2575    21325        /*F*    NAME: FLM_DELETE_DUAL_FILES
     2576    21326               PURPOSE: Used by DUAL INCR and determines if a file in the current dual
     2577    21327                  account still exists on the prime packset as a regular or deleted file
     2578    21328                  and if not is deleted from the dual packset. This is performed for the
     2579    21329                  entire account.
     2580    21330        */
     2581    21331    1   FLM_DELETE_DUAL_FILES: PROC;
     2582    21332
     2583    21333    2   DCL 1 ERR AUTO,
     2584    21334    2         2 * BIT(12) UNAL,
     2585    21335    2         2 * BIT(6) UNAL,
     2586    21336    2         2 * BIT(1) UNAL,
     2587    21337    2         2 CODE UBIN(14) UNAL,
     2588    21338    2         2 * UBIN(3) UNAL;
     2589    21339
     2590    21340        %FPT_OPEN( FPTN = DISK_OPEN_DUAL,
     2591    21341                   DCB = M$DISK_OUT,
     2592    21342                   ACCT = TO_DISK_ACCT,
     2593    21343                   RES = 'DP',
     2594    21344                   SN = TO_DISK_SN,
     2595    21345                   NXTF = YES,
     2596    21346                   THISF = NO,
     2597    21347                   ASN = FILE,
     2598    21348                   ACS = BLOCK,
     2599    21349                   FUN = IN,
     2600    21350                   TEST = YES,
     2601    21351                   STCLASS = STATIC);
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:72   
     2602    21460
     2603    21461        %FPT_OPEN( FPTN = DISK_OPEN_PRIME,
     2604    21462                   DCB = M$DISK_IN,
     2605    21463                   NAME = TO_DISK_NAME,
     2606    21464                   ACCT = TO_DISK_ACCT,
     2607    21465                   RES = 'DP',
     2608    21466                   ASN = FILE,
     2609    21467                   ACS = BLOCK,
     2610    21468                   FUN = IN,
     2611    21469                   TEST = YES,
     2612    21470                   STCLASS = STATIC);
     2613    21579
     2614    21580    2   DCL BLANK6 CHAR(0) STATIC INIT('      ');
     2615    21581
     2616    21582        /********************/
     2617    21583
     2618    21584    2      DISK_OPEN_PRIME.V.RES# = DPRESLIST.NAME(0);
     2619    21585    2      DISK_OPEN_PRIME.SN_ = VECTOR(DPLIST);
     2620    21586    2      DISK_OPEN_DUAL.V.RES# = DISK_DEST_RES.NAME;
     2621    21587    2      DISK_CLOSE.IFPARAM_ = VECTOR(NIL);
     2622    21588    2      DISK_CLOSE.V.EFTOPER = '0'B;
     2623    21589    2      DISK_CLOSE.V.DESC.TERMINATE# = %NO#;
     2624    21590    2      DISK_CLOSE.V.DISP# = %SAVE#;
     2625    21591    2      SOURCE_FILE_TYPE = 0;
     2626    21592
     2627    21593    3      DO WHILE( '1'B );
     2628    21594    3   READ_NEXT_FILE:
     2629    21595    3         CALL M$OPEN( DISK_OPEN_DUAL )     /* Find next file on dual             */
     2630    21596    4          WHENRETURN DO;
     2631    21597    4            TO_DISK_NAME = M$DISK_OUT$->F$DCB.NAME#; /* Same file exist on prime? */
     2632    21598    4            CALL M$OPEN( DISK_OPEN_PRIME )
     2633    21599    5             WHENALTRETURN DO;
     2634    21600    5               IF (TO_DISK_ACCT.ACCT# ~= BACKUP_ACCT.ACCT# /* No, but don,t delete */
     2635    21601    5                 AND TO_DISK_NAME.NAME# ~= DUAL_FILE.NAME#) /* :DUAL             */
     2636    21602    6                THEN DO;
     2637    21603    6                  IF B$TCB.ALT$->B$ALT.ERR.CODE = %E$NOFILE
     2638    21604    7                   THEN DO;           /* Check if deleted source file exists     */
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:73   
     2639    21605    7                     DISK_OPEN_PRIME.V.OPER.NXTF# = '1'B;
     2640    21606    7                     DISK_OPEN_PRIME.V.OPER.THISF# = '1'B;
     2641    21607    7                     DISK_OPEN_PRIME.V.SRCHCOND.DELF# = '1'B;
     2642    21608    7                     CALL M$OPEN( DISK_OPEN_PRIME )
     2643    21609    8                      WHENRETURN DO; /* If deleted file with same name, don't del. */
     2644    21610    8                        DISK_OPEN_PRIME.V.OPER.NXTF# = '0'B;
     2645    21611    8                        DISK_OPEN_PRIME.V.OPER.THISF# = '0'B;
     2646    21612    8                        DISK_OPEN_PRIME.V.SRCHCOND.DELF# = '0'B;
     2647    21613    8                        IF M$DISK_IN$->F$DCB.NAME# = TO_DISK_NAME
     2648    21614    8                         THEN GOTO READ_NEXT_FILE; /* Deleted file - don't delete */
     2649    21615    8                        END;
     2650    21616    8                      WHENALTRETURN DO;
     2651    21617    8                        END;
     2652    21618
     2653    21619    7                     DISK_OPEN_PRIME.V.OPER.NXTF# = '0'B;
     2654    21620    7                     DISK_OPEN_PRIME.V.OPER.THISF# = '0'B;
     2655    21621    7                     DISK_OPEN_PRIME.V.SRCHCOND.DELF# = '0'B;
     2656    21622    7                     DISK_OPEN_DUAL.V.OPER.TEST# = '0'B;
     2657    21623    7                     DISK_OPEN_DUAL.V.OPER.THISF# = '1'B;
     2658    21624    7                     CALL M$OPEN( DISK_OPEN_DUAL )
     2659    21625    8                      WHENALTRETURN DO;
     2660    21626    8                        CALL FLI$RPT_ERR;  /* Should not occur                   */
     2661    21627    8                        END;
     2662    21628    7                     DISK_OPEN_DUAL.V.OPER.TEST# = '1'B;
     2663    21629    7                     DISK_OPEN_DUAL.V.OPER.THISF# = '0'B;
     2664    21630    7                     CALL FLM_DELETE_TO_DISK_FILE;
     2665    21631
     2666    21632    7                     DISK_CLOSE.V.EFTOPER = '0'B;
     2667    21633    7                     DISK_CLOSE.V.DESC.TERMINATE# = %NO#;
     2668    21634    7                     DISK_CLOSE.V.DISP# = %SAVE#;
     2669    21635
     2670    21636    7                     ERR.CODE = %E$NOPRS;
     2671    21637    7                     CALL M$OPEN( DISK_OPEN_PRIME ) /* Restores file name to DCB */
     2672    21638    8                      WHENALTRETURN DO;
     2673    21639    8                        END;
     2674    21640    7                     CALL FLP$WR_FILE_INFO(M$DISK_IN$, ,SAVE_SN,0,' ', ,ERR,PR_DEV_LT,
             21640                              '0'B);
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:74   
     2675    21641    7                     END;
     2676    21642    6                   ELSE CALL FLI$RPT_ERR;
     2677    21643    6                  END;
     2678    21644    5               END;
     2679    21645    4            END;
     2680    21646    4          WHENALTRETURN DO;
     2681    21647    4            IF B$TCB.ALT$->B$ALT.ERR.CODE = %E$ADEOF
     2682    21648    4              OR B$TCB.ALT$->B$ALT.ERR.CODE = %E$FDEOF
     2683    21649    4             THEN RETURN;                  /* Finished reading this account      */
     2684    21650    4             ELSE CALL FLI$RPT_ERR;        /* Output error but continue          */
     2685    21651    4            END;
     2686    21652    3         END;
     2687    21653
     2688    21654    2   END FLM_DELETE_DUAL_FILES;
     2689    21655
     2690    21656
     2691    21657    1   FLM_COPY_FILE_TO_DISK: PROC;
     2692    21658
     2693    21659    2   DCL 1 IDS_GRANULE_ DALIGNED,
     2694    21660    2         2 * BIT(36),
     2695    21661    2         2 PTR$ PTR;
     2696    21662    2   DCL IDS_FAST_INCR BIT(1) AUTO; /* IDS grans. saved FAST, restrd incrementally. */
     2697    21663
     2698    21664        %FPT_READ( FPTN = READ_IDS_FILE,
     2699    21665                   DCB = M$DISK_OUT,
     2700    21666                   KEYS = YES,
     2701    21667                   WAIT= YES,
     2702    21668                   STCLASS = STATIC);
     2703    21707
     2704    21708        /********************/
     2705    21709
     2706    21710    2      DISK_CLOSE.V.EFTOPER = '0'B;
     2707    21711
     2708    21712    3      DO CASE( SOURCE_FILE_TYPE );
     2709    21713    3       CASE( %REG_FILE, %ACUP_FILE, %IDS_FAST_FILE );
     2710    21714        /***
     2711    21715         *** Qualify file being moved for backup if account authorization allows.
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:75   
     2712    21716         *** By definition, TRANSPORTs are performed w/o altering the source file.
     2713    21717         ***/
     2714    21718    3         IF COMMAND = %DUAL AND DISK_OPTION.OPEN_MODE = %TRANSFER
     2715    21719    4          THEN DO;
     2716    21720    4            GET_AD_OR_FD.FPARAM_ = SAVE_AD_FD_FIT_; /* Get account directory     */
     2717    21721    4            CALL M$OPEN( GET_AD_OR_FD )
     2718    21722    5             WHENRETURN DO;
     2719    21723    5               CODE$ = SAVE_AD_FD_FIT_.PTR$;
     2720    21724    5               CALL XSF$LOCCODP( CODE$, 14 )
     2721    21725    6                WHENRETURN DO;
     2722    21726    6                  IF CODE14.ACCESS.BUPF    /* File backup permitted?             */
     2723    21727    7                   THEN DO;
     2724    21728    7                     DISK_CLOSE.V.DESC = SOURCE_DCB$->F$DCB.DESC;
     2725    21729    7                     DISK_CLOSE.V.DESC.BUF# = '1'B;
     2726    21730    7                     DISK_CLOSE.V.EFTOPER.UPDDESC# = '1'B;
     2727    21731    7                     END;
     2728    21732    6                  END;
     2729    21733    6                WHENALTRETURN DO;
     2730    21734    6                  END;
     2731    21735    5               END;
     2732    21736    5             WHENALTRETURN DO;
     2733    21737    5               END;
     2734    21738    4            END;
     2735    21739    3       END;
     2736    21740
     2737    21741    2      IF COMMAND = %RETRIEVE
     2738    21742    3       THEN DO;
     2739    21743    3         CODE$ = PINCRW (FPARAM_.PTR$, SIZEW (FM$GRAN));
     2740    21744    3         CALL XSF$LOCCODP( CODE$, 03 )
     2741    21745    4          WHENRETURN DO;
     2742    21746    4            CODE03.DESC.FETCH = '1'B;      /* Keep on while RETRIEVE in process  */
     2743    21747    4            END;
     2744    21748    4          WHENALTRETURN DO;
     2745    21749    4            END;
     2746    21750    3         END;
     2747    21751
     2748    21752    2      CALL M$OPEN( DISK_OPEN )
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:76   
     2749    21753    3       WHENRETURN DO;
     2750    21754    3         GOING_TO_DEST = '1'B;
     2751    21755    3         ERR = '0'B;
     2752    21756    3         IF SOURCE = %DISK@
     2753    21757    4          THEN DO;
     2754    21758    4            IF SOURCE_FILE_TYPE = %REG_FILE
     2755    21759    5             THEN DO;
     2756    21760    5               CALL FLI$DISK_READ_FILE_INIT( NBR_GRANS_TO_READ );
     2757    21761    5               DISK_WRITE.KEY_ = VECTOR(NIL);
     2758    21762    6               DO WHILE( NOT ERR );
     2759    21763    6                  CALL FLI$DISK_READ( BUF_, BIX, ARS, ERR, DCB# )
     2760    21764    7                   WHENALTRETURN DO;
     2761    21765    7                     IF ERR.CODE = %E$DI
     2762    21766    7                      THEN ERR = '0'B;
     2763    21767    7                      ELSE IF ERR.CODE ~= %E$EOF
     2764    21768    7                         THEN IF FPT_EXIT.V.STEPCC# < %DISK_ERROR
     2765    21769    7                            THEN FPT_EXIT.V.STEPCC# = %DISK_ERROR;
     2766    21770    7                            ELSE;
     2767    21771    7                     END;
     2768    21772    6                  IF NOT ERR
     2769    21773    6                    OR ERR.CODE = %E$DI
     2770    21774    7                   THEN DO;
     2771    21775    7                     IF F$DCB.ORG# ~= %RANDOM#
     2772    21776    7                       AND F$DCB.ORG# ~= %RELATIVE#
     2773    21777    7                       AND F$DCB.ORG# ~= %IDS#
     2774    21778    7                       AND F$DCB.ORG# ~= %CG#
     2775    21779    8                      THEN DO;
     2776    21780        /***
     2777    21781         *** Write Consec.,keyed,indexed,irel,.... type files.
     2778    21782         ***/
     2779    21783    8                        IF ERR
     2780    21784    8                         THEN EXIT;
     2781    21785    8                        DISK_WRITE.BUF_ = BUF_;
     2782    21786    8                        DISK_WRITE.BUF_.BOUND = ARS - 1;
     2783    21787    8                        CALL M$WRITE( DISK_WRITE )
     2784    21788    9                         WHENALTRETURN DO;
     2785    21789    9                           ERR = B$TCB.ALT$->B$ALT.ERR;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:77   
     2786    21790    9                           IF FPT_EXIT.V.STEPCC# < %DISK_ERROR
     2787    21791    9                            THEN FPT_EXIT.V.STEPCC# = %DISK_ERROR;
     2788    21792    9                           END;
     2789    21793    8                        CALL FLI$RETURN_BUF( BIX );
     2790    21794    8                        END;
     2791    21795    8                      ELSE DO;
     2792    21796        /***
     2793    21797         *** Write Random,relative,IDS or CG type files.
     2794    21798         *** Write out contiguos granules, unwritten granules are ignored.
     2795    21799         ***/
     2796    21800    8                        ERR = '0'B;
     2797    21801    8                        DISK_WRITE.KEY_ = VECTOR(DISK_KEY);
     2798    21802    8                        NBR_CONSEC_GRANS = 0;
     2799    21803    9                        DO WHILE( ARS > 0);
     2800    21804    9                           IF BUF_.PTR$->GRAN_KEY ~= -1
     2801    21805   10                            THEN DO;
     2802    21806   10                              IF NBR_CONSEC_GRANS = 0
     2803    21807   11                               THEN DO;
     2804    21808   11                                 DISK_WRITE.BUF_ = BUF_;
     2805    21809   11                                 DISK_KEY = BUF_.PTR$->GRAN_KEY;
     2806    21810   11                                 END;
     2807    21811   10                              NBR_CONSEC_GRANS = NBR_CONSEC_GRANS + 1;
     2808    21812   10                              END;
     2809    21813   10                            ELSE DO;
     2810    21814   10                              IF NBR_CONSEC_GRANS > 0
     2811    21815   11                               THEN DO;
     2812    21816   11                                 CALL FLM_WR_GRANS;
     2813    21817   11                                 NBR_CONSEC_GRANS = 0;
     2814    21818   11                                 END;
     2815    21819   10                              END;
     2816    21820    9                           ARS = ARS - 4096;
     2817    21821    9                           BUF_.PTR$ = PINCRW( BUF_.PTR$, 1024 );
     2818    21822    9                           END;
     2819    21823    8                        IF NBR_CONSEC_GRANS > 0
     2820    21824    8                         THEN CALL FLM_WR_GRANS;
     2821    21825    8                        CALL FLI$RETURN_BUF( BIX );
     2822    21826    8                        END;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:78   
     2823    21827    7                     END;
     2824    21828    6                  END;
     2825    21829    5               END;
     2826    21830    4            END;
     2827    21831    4          ELSE DO;
     2828    21832    4            IF F$DCB.ORG# ~= %RANDOM# AND F$DCB.ORG# ~= %RELATIVE# AND F$DCB.ORG# ~= %
             21832                     IDS#
     2829    21833    5             THEN DO;
     2830    21834    5               DISK_WRITE.KEY_ = VECTOR(NIL);
     2831    21835    6               DO WHILE( NOT ERR );
     2832    21836    6                  CALL FLC$TAPE_READ_NEXT( BUF_, ARS, ERR )
     2833    21837    7                   WHENRETURN DO;
     2834    21838    7                     DISK_WRITE.BUF_ = BUF_;
     2835    21839    7                     DISK_WRITE.BUF_.BOUND = ARS - 1;
     2836    21840    7                     CALL M$WRITE( DISK_WRITE )
     2837    21841    8                      WHENALTRETURN DO;
     2838    21842    8                        ERR = B$TCB.ALT$->B$ALT.ERR;
     2839    21843    8                        IF FPT_EXIT.V.STEPCC# < %DISK_ERROR
     2840    21844    8                         THEN FPT_EXIT.V.STEPCC# = %DISK_ERROR;
     2841    21845    8                        END;
     2842    21846    7                     END;
     2843    21847    7                   WHENALTRETURN DO;
     2844    21848    7                     END;
     2845    21849    6                  END;
     2846    21850    5               END;
     2847    21851    5             ELSE DO;       /* Individual granules file RANDOM, RELATIVE, or IDS */
     2848    21852    5               IF F$DCB.ORG# = %IDS# AND SOURCE_FILE_TYPE = %IDS_FAST_FILE
     2849    21853    5                 AND TAPE_OPTION.PROTTYPE = %INCREMENTAL
     2850    21854    6                THEN DO;
     2851    21855    6                  IDS_FAST_INCR = %YES#;
     2852    21856    6                  CALL FLI$ALLOC_BUF( IDS_GRANULE_, 1 );
     2853    21857    6                  READ_IDS_FILE.BUF_ = IDS_GRANULE_;
     2854    21858    6                  END;
     2855    21859    5                ELSE IDS_FAST_INCR = %NO#;
     2856    21860    5               DISK_WRITE.KEY_ = VECTOR(DISK_KEY);
     2857    21861    6   READ_LOOP:  DO WHILE( NOT ERR );
     2858    21862    6                  CALL FLC$TAPE_READ_NEXT( BUF_, ARS, ERR )
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:79   
     2859    21863    7                   WHENRETURN DO;
     2860    21864        /***
     2861    21865         *** Skip past unwritten granules at beginning of file.
     2862    21866         ***/
     2863    21867    8                     DO WHILE( ARS > 0 AND BUF_.PTR$->GRAN_KEY = -1 );
     2864    21868    8                        ARS = ARS - 4096;
     2865    21869    8                        BUF_.PTR$ = PINCRW( BUF_.PTR$, 1024 );
     2866    21870    8                        END;
     2867    21871        /***
     2868    21872         *** If restoring an IDS file incrementally which was backed up IDS(FAST),
     2869    21873         *** then get the next granule which is qualified for the restore
     2870    21874         *** (source granule must be newer than the destination granule or the source
     2871    21875         *** source granule is written and the destination granule is unwritten).
     2872    21876        */
     2873    21877    7                     IF IDS_FAST_INCR
     2874    21878    8                      THEN DO;
     2875    21879    8                        CALL FLM_GET_NEXT_QUAL_GRAN
     2876    21880    9                         WHENALTRETURN DO;
     2877    21881    9                           EXIT READ_LOOP;
     2878    21882    9                           END;
     2879    21883    8                        END;
     2880    21884    7                     IF ARS = 0
     2881    21885    7                      THEN GOTO READ_LOOP; /* No qual. or unwritten grans. fnd.  */
     2882    21886    7                     DISK_WRITE.BUF_ = BUF_;
     2883    21887    7                     DISK_KEY = BUF_.PTR$->GRAN_KEY;
     2884    21888    7                     NBR_CONSEC_GRANS = 1;
     2885    21889    7                     ARS = ARS - 4096;
     2886    21890    8   WRITE_LOOP:       DO WHILE( ARS > 0 AND NOT ERR );
     2887    21891    8                        BUF_.PTR$ = PINCRW( BUF_.PTR$, 1024 );
     2888    21892    8                        IF IDS_FAST_INCR
     2889    21893    9                         THEN DO;
     2890    21894    9                           CALL FLM_GET_NEXT_QUAL_GRAN /* Get next qualified gran. */
     2891    21895   10                            WHENALTRETURN DO;
     2892    21896   10                              EXIT WRITE_LOOP;
     2893    21897   10                              END;
     2894    21898    9                           END;
     2895    21899    8                        IF BUF_.PTR$->GRAN_KEY = DISK_KEY + NBR_CONSEC_GRANS
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:80   
     2896    21900    8                          AND ARS ~= 0
     2897    21901    8                         THEN NBR_CONSEC_GRANS = NBR_CONSEC_GRANS + 1;
     2898    21902    9                         ELSE DO;
     2899    21903    9                           CALL FLM_WR_GRANS;
     2900    21904   10                           DO WHILE( ARS > 0 AND BUF_.PTR$->GRAN_KEY = -1 );
     2901    21905   10                              ARS = ARS - 4096;
     2902    21906   10                              BUF_.PTR$ = PINCRW( BUF_.PTR$, 1024 );
     2903    21907   10                              END;
     2904    21908    9                           DISK_WRITE.BUF_ = BUF_;
     2905    21909    9                           DISK_KEY = BUF_.PTR$->GRAN_KEY;
     2906    21910    9                           IF ARS ~= 0
     2907    21911    9                            THEN NBR_CONSEC_GRANS = 1;
     2908    21912    9                            ELSE NBR_CONSEC_GRANS = 0;
     2909    21913    9                           END;
     2910    21914    8                        ARS = ARS - 4096;
     2911    21915    8                        END;
     2912    21916    7                     IF NOT ERR AND NBR_CONSEC_GRANS ~= 0
     2913    21917    7                      THEN CALL FLM_WR_GRANS;
     2914    21918    7                     END;
     2915    21919    7                   WHENALTRETURN DO;
     2916    21920    7                     END;
     2917    21921    6                  END;
     2918    21922    5               END;
     2919    21923    4            END;
     2920    21924    4         DO CASE( SOURCE_FILE_TYPE );
     2921    21925    4          CASE( %REG_FILE, %ACUP_FILE, %IDS_FAST_FILE );
     2922    21926        /***
     2923    21927         *** If only part of a tape file is restored, delete for the following conditions:
     2924    21928         *** 1. File spans tape volumes but user only specified a single tape (LT - not CT).
     2925    21929         *** 2. I/O error on a file restore.
     2926    21930        ***/
     2927    21931    4            IF ERR.CODE = %E$VOLORDER
     2928    21932    4              OR ERR.CODE = %E$IOERR
     2929    21933    4             THEN DISK_CLOSE.V.DISP# = %RELEASE#;
     2930    21934    4             ELSE DISK_CLOSE.V.DISP# = %SAVE#;
     2931    21935    4            IF COMMAND = %RETRIEVE
     2932    21936    4             THEN IF NOT DISK_OPTION.SCRUB.STOW
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:81   
     2933    21937    4                 AND ERR.CODE ~= %E$PSGRANS
     2934    21938    4                 AND ERR.CODE ~= %E$IOERR
     2935    21939        /***
     2936    21940         *** Move source file descriptors to dest. file and update stow info.
     2937    21941         *** Also must remember if file was stowed to tape or opt. disk and set
     2938    21942         *** desc. bit accordingly. This done in case a reSTOW is performed prior
     2939    21943         *** to an UNARCHIVE in which case file does not have to be rearchived.
     2940    21944         ***/
     2941    21945    5                THEN DO;
     2942    21946    5                  MODIFIED_FIT_ = SAVE_FIT_;
     2943    21947    5                  FIT$ = PINCRW(MODIFIED_FIT_.PTR$,SIZEW(FM$GRAN));
     2944    21948    5                  CODE$ = FIT$;
     2945    21949    5                  CODE = 06;
     2946    21950    5                  CALL XSF$LOCCODE( CODE$, CODE)
     2947    21951    6                   WHENRETURN DO;
     2948    21952    6                     FM$FIT.CODES.NDW(CODE) = SIZEW(CODE06);
     2949    21953    6                     CODE06 = DISK_CODE06$->CODE06;
     2950    21954    6                     MODIFIED_FIT_.PTR$ = PINCRW( MODIFIED_FIT_.PTR$, SIZEW(FM$GRAN) );
     2951    21955    6                     MODIFIED_FIT_.BOUND = MODIFIED_FIT_.BOUND - SIZEC(FM$GRAN);
     2952    21956    6                     DISK_CLOSE.IFPARAM_ = MODIFIED_FIT_;
     2953    21957    6                     DISK_CLOSE.V.DESC = SOURCE_DCB$->F$DCB.DESC;
     2954    21958    6                     IF DISK_DESC_SAVE.ODSTOW#
     2955    21959    6                      THEN DISK_CLOSE.V.DESC.ODSTOW# = '1'B;
     2956    21960    6                     DISK_CLOSE.V.DESC.QS# = '0'B;
     2957    21961    6                     DISK_CLOSE.V.EFTOPER.UPDDESC# = '1'B;
     2958    21962    6                     END;
     2959    21963    6                   WHENALTRETURN DO;
     2960    21964    6                     END;
     2961    21965    5                  END;
     2962    21966    5                ELSE DO;
     2963    21967        /***
     2964    21968         *** Delete partially retrieved file to regain disk space and recreate
     2965    21969         *** file using previous archival info. with QF status.
     2966    21970         ***/
     2967    21971    5                  IF B$TCB.ALT$->B$ALT.ERR.CODE = %E$PSGRANS
     2968    21972    5                    OR ERR.CODE = %E$IOERR
     2969    21973    6                   THEN DO;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:82   
     2970    21974    6                     GOING_TO_DEST = '0'B;
     2971    21975    6                     IF B$TCB.ALT$->B$ALT.ERR.CODE = %E$PSGRANS
     2972    21976    6                      THEN ERR = B$TCB.ALT$->B$ALT.ERR;
     2973    21977    6                     CALL FLM_RECREATE_QF_FILE;
     2974    21978    6                     END;
     2975    21979    5                  END;
     2976    21980    4             ELSE;
     2977    21981    4          CASE( %INACTIVE_FILE );
     2978    21982    4            DISK_CLOSE.V.DISP# = %SAVE#;
     2979    21983    4            DISK_CLOSE.V.EFTOPER.ISTOW# = '1'B;
     2980    21984    4            IF SOURCE_DCB$->F$DCB.DESC.ODSTOW# /* Must set if rstrng archvd file */
     2981    21985    5             THEN DO;
     2982    21986    5               DISK_CLOSE.V.DESC.ODSTOW# = '1'B;
     2983    21987    5               DISK_CLOSE.V.EFTOPER.UPDDESC# = '1'B;
     2984    21988    5               END;
     2985    21989    4          CASE( %DEL_FILE, %CLEANUP_FILE );
     2986    21990    4            DISK_CLOSE.V.DISP# = %RELEASE#;
     2987    21991    4          END;
     2988    21992    3         EFTWORD = '0'B;
     2989    21993    3         IF COMMAND = %RETRIEVE AND DISK_DESC_SAVE.ODSTOW#
     2990    21994    3          THEN EFTWORDEXPIRE = SAVE_FSN;   /* FSN is a halfword for OD           */
     2991    21995    3          ELSE EFTWORD.FSN = SAVE_FSN;     /* Probably no longer needed for      */
     2992    21996    3         SOURCE_TAPE_SN.SN#(0) = SAVE_SN;  /* RETRIEVing as ASTOW# no longer set */
     2993    21997    3         END;
     2994    21998    3       WHENALTRETURN DO;
     2995    21999    3         GOING_TO_DEST = '0'B;
     2996    22000    3         ERR = B$TCB.ALT$->B$ALT.ERR;
     2997    22001    3         IF COMMAND = %RETRIEVE AND ERR.CODE = %E$PSGRANS
     2998    22002    3          THEN CALL FLM_RECREATE_QF_FILE;  /* Recreate the file with QF status   */
     2999    22003    3         END;
     3000    22004    2      RETURN;
     3001    22005
     3002    22006    2   FLM_WR_GRANS: PROC;
     3003    22007        /*F*  NAME: FLM_WR_GRANS
     3004    22008              PURPOSE: Write specified granules to disk
     3005    22009        */
     3006    22010
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:83   
     3007    22011        /********************/
     3008    22012
     3009    22013    3      DISK_WRITE.BUF_.BOUND = NBR_CONSEC_GRANS * 4096 - 1;
     3010    22014    3      CALL M$WRITE( DISK_WRITE )
     3011    22015    4       WHENALTRETURN DO;
     3012    22016    4         ERR = B$TCB.ALT$->B$ALT.ERR;
     3013    22017    4         IF FPT_EXIT.V.STEPCC# < %DISK_ERROR
     3014    22018    4          THEN FPT_EXIT.V.STEPCC# = %DISK_ERROR;
     3015    22019    4         END;
     3016    22020    3      RETURN;
     3017    22021    3   END FLM_WR_GRANS;
     3018    22022
     3019    22023    2   FLM_GET_NEXT_QUAL_GRAN: PROC ALTRET;
     3020    22024        /*F*  NAME: FLM_GET_NEXT_GRAN
     3021    22025              PURPOSE: Determines the next IDS source granule that may be restored
     3022    22026                 (source granule must be newer than the destination granule).
     3023    22027                 This routine is used solely for IDS incremental restores.
     3024    22028        */
     3025    22029
     3026    22030    3   DCL DEST_GRAN_UTS UBIN WORD AUTO;
     3027    22031    3   DCL GRAN_MOD_TIME UBIN WORD ALIGNED BASED;
     3028    22032        /********************/
     3029    22033
     3030    22034    4      DO WHILE ( ARS > 0 AND NOT ERR );
     3031    22035    4         READ_IDS_FILE.KEY_ = VECTOR(BUF_.PTR$->GRAN_KEY);
     3032    22036    4         CALL M$READ(READ_IDS_FILE)
     3033    22037    5          WHENRETURN DO;
     3034    22038    5            DEST_GRAN_UTS = PINCRW(IDS_GRANULE_.PTR$, 1)->GRAN_MOD_TIME;
     3035    22039    5            END;
     3036    22040    5          WHENALTRETURN DO; /* Error trying to read specified source granule     */
     3037    22041    5            IF B$TCB.ALT$->B$ALT.ERR.CODE = %E$DI
     3038    22042    6             THEN DO;
     3039    22043    6               ERR = '0'B;
     3040    22044    6               DEST_GRAN_UTS = 0;
     3041    22045    6               END;
     3042    22046    6             ELSE DO;
     3043    22047    6               ERR = B$TCB.ALT$->B$ALT.ERR;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:84   
     3044    22048    6               IF FPT_EXIT.V.STEPCC# < %DISK_ERROR
     3045    22049    6                THEN FPT_EXIT.V.STEPCC# = %DISK_ERROR;
     3046    22050    6               ALTRETURN;
     3047    22051    6               END;
     3048    22052    5            END;
     3049    22053
     3050    22054    4         IF PINCRW(BUF_.PTR$, 1)->GRAN_MOD_TIME <= DEST_GRAN_UTS
     3051    22055    5          THEN DO;
     3052    22056    5            BUF_.PTR$ = PINCRW(BUF_.PTR$, 1024); /* Source gran. is older        */
     3053    22057    5            ARS = ARS - 4096;
     3054    22058    5            END;
     3055    22059    4          ELSE RETURN;                /* Found granule qualified for restoration */
     3056    22060    4         END;
     3057    22061    3      RETURN;               /* Didn't find a granule qualified for restoration   */
     3058    22062    3   END FLM_GET_NEXT_QUAL_GRAN;
     3059    22063
     3060    22064    2   FLM_RECREATE_QF_FILE: PROC;
     3061    22065        /*F* NAME: FLM_RECREATE_QF_FILE:
     3062    22066             PURPOSE: Delete existing file and recreate dummy file - queued for fetch.
     3063    22067        */
     3064    22068
     3065    22069        /********************/
     3066    22070
     3067    22071    3      DISK_CLOSE.V.DISP# = %SAVE#;
     3068    22072    3      DISK_CLOSE.V.EFTOPER.UPDDESC# = %YES#;
     3069    22073    3      DISK_CLOSE.V.DESC.TERMINATE# = %YES#;
     3070    22074    3      IF F$DCB.FCD#
     3071    22075    4       THEN DO;
     3072    22076    4         CALL M$CLOSE( DISK_CLOSE )        /* Unarchive to delete file           */
     3073    22077    5          WHENALTRETURN DO;
     3074    22078    5            CALL FLI$RPT_ERR;
     3075    22079    5            END;
     3076    22080    4         END;
     3077    22081
     3078    22082    3      DISK_OPEN.V.FUN# = %IN#;
     3079    22083    3      DISK_OPEN.V.SRCHCOND.ANYF# = %NO#;
     3080    22084    3      DISK_OPEN.V.OPER.NXTF# = %NO#;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:85   
     3081    22085    3      DISK_OPEN.V.OPER.TEST# = %YES#;      /* Delete if file exists              */
     3082    22086    3      CALL M$OPEN( DISK_OPEN )
     3083    22087    4       WHENRETURN DO;
     3084    22088    4         DISK_OPEN.V.OPER.TEST# = %NO#;
     3085    22089    4         DISK_OPEN.V.DELETE# = %YES#;
     3086    22090    4         CALL M$OPEN( DISK_OPEN )
     3087    22091    5          WHENALTRETURN DO;
     3088    22092    5            END;
     3089    22093    4         END;
     3090    22094    4       WHENALTRETURN DO;
     3091    22095    4         DISK_OPEN.V.OPER.TEST# = %NO#;
     3092    22096    4         END;
     3093    22097
     3094    22098    3      DISK_OPEN.V.FUN# = %CREATE#;         /* Create fake file using same fit    */
     3095    22099    3      DISK_OPEN.V.DELETE# = %NO#;
     3096    22100    3      DISK_OPEN.V.ACS# = %BLOCK#;
     3097    22101    3      DISK_OPEN.V.EXPIRE# = -1;
     3098    22102    3      DISK_OPEN.FPARAM_ = VECTOR(NIL);
     3099    22103    3      DISK_OPEN.IFPARAM_ = DISK_FIT_;
     3100    22104    3      CALL M$OPEN( DISK_OPEN )
     3101    22105    4       WHENALTRETURN DO;
     3102    22106    4         CALL FLI$RPT_ERR;
     3103    22107    4         END;
     3104    22108    3      DISK_OPEN.IFPARAM_ = VECTOR(NIL);
     3105    22109
     3106    22110    3      DISK_CLOSE.V.DESC = DISK_DESC_SAVE;  /* Update descriptors and CODE06      */
     3107    22111    3      IF DISK_DESC_SAVE.ODSTOW#
     3108    22112    3       THEN EFTWORDEXPIRE = SAVE_FSN;
     3109    22113    3       ELSE EFTWORD.FSN = SAVE_FSN;
     3110    22114    3      DISK_CLOSE.V.EXPIRE# = EFTWORDEXPIRE;
     3111    22115    3      SOURCE_TAPE_SN.SN#(0) = SAVE_SN;
     3112    22116    3      DISK_CLOSE.SN_ = VECTOR(SOURCE_TAPE_SN);
     3113    22117    3      DISK_CLOSE.V.EFTOPER.ASTOW# = %YES#;
     3114    22118    3      CALL M$CLOSE( DISK_CLOSE )
     3115    22119    4       WHENALTRETURN DO;
     3116    22120    4         CALL FLI$RPT_ERR;
     3117    22121    4         END;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:86   
     3118    22122
     3119    22123    3      DISK_OPEN.V.FUN# = %IN#; /* Additional OPEN/CLOSE required to set QS,FETCH */
     3120    22124    3      CALL M$OPEN (DISK_OPEN )
     3121    22125    4       WHENALTRETURN DO;
     3122    22126    4         CALL FLI$RPT_ERR;
     3123    22127    4         END;
     3124    22128
     3125    22129    3      DISK_CLOSE.V.EFTOPER = %NO#;
     3126    22130    3      DISK_CLOSE.V.EFTOPER.UPDDESC# = %YES#;
     3127    22131    3      DISK_CLOSE.V.DESC = F$DCB.DESC;
     3128    22132    3      DISK_CLOSE.V.DESC.QS# = %YES#;
     3129    22133    3      DISK_CLOSE.V.DESC.FETCH# = %YES#;
     3130    22134    3      CALL M$CLOSE( DISK_CLOSE )
     3131    22135    4       WHENALTRETURN DO;
     3132    22136    4         CALL FLI$RPT_ERR;
     3133    22137    4         END;
     3134    22138
     3135    22139    3      DISK_CLOSE.V.EFTOPER = %NO#;         /* Reinit. FPT's                      */
     3136    22140    3      DISK_CLOSE.V.DESC = %NO#;
     3137    22141    3      DISK_CLOSE.V.EXPIRE# = 0;
     3138    22142    3      DISK_CLOSE.SN_ = VECTOR(NIL);
     3139    22143    3      DISK_OPEN.V.SRCHCOND.ANYF# = %YES#;
     3140    22144    3      DISK_OPEN.V.OPER.NXTF# = %YES#;
     3141    22145    3      RETURN;
     3142    22146
     3143    22147    3   END FLM_RECREATE_QF_FILE;
     3144    22148    2   END FLM_COPY_FILE_TO_DISK;
     3145    22149
     3146    22150
     3147    22151    1   FLM_ADD_TO_DEL_LIST: PROC( INACTIVATE ) ALTRET;
     3148    22152        /*F*  NAME: FLM_ADD_TO_DEL_LIST
     3149    22153              PURPOSE: Adds current file to delete list.
     3150    22154        */
     3151    22155
     3152    22156    2   DCL INACTIVATE BIT(1) ALIGNED;
     3153    22157
     3154    22158        /********************/
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:87   
     3155    22159
     3156    22160    2      DEL_LIST_REC.VLP_SN.SN#(0) = SOURCE_DCB$->F$DCB.PSN#;
     3157    22161    2      DEL_LIST_REC.ACCT = SOURCE_DCB$->F$DCB.ACCT#;
     3158    22162    2      DEL_LIST_REC.NAME#.C = SOURCE_DCB$->F$DCB.NAME#.C;
     3159    22163    2      IF SOURCE_DCB$->F$DCB.NAME#.L = 0
     3160    22164    2       THEN DEL_LIST_REC.NAME#.L = 32;     /* Account after its files            */
     3161    22165    2       ELSE DEL_LIST_REC.NAME#.L = SOURCE_DCB$->F$DCB.NAME#.L;
     3162    22166    2      DEL_LIST_REC.RES = SOURCE_DCB$->F$DCB.RES#;
     3163    22167    2      DEL_LIST_REC.SN = SAVE_SN;
     3164    22168    2      DEL_LIST_REC.FSN = SAVE_FSN;
     3165    22169    2      DEL_LIST_REC.INACTIVATE = INACTIVATE;
     3166    22170    2      CALL M$TIME ( GET_NOW_UTS );
     3167    22171    2      DEL_LIST_REC.TIME = NOW_UTS;
     3168    22172
     3169    22173    2      CALL M$WRITE(WRITE_DELETE_LIST)
     3170    22174    3       WHENRETURN DO;
     3171    22175    3         NBR_DEL_FILES = NBR_DEL_FILES + 1;
     3172    22176    3         RETURN;
     3173    22177    3         END;
     3174    22178    3       WHENALTRETURN DO;
     3175    22179    3         CALL FLI$RPT_ERR;
     3176    22180    3         ALTRETURN;
     3177    22181    3         END;
     3178    22182
     3179    22183    2   END FLM_ADD_TO_DEL_LIST;
     3180    22184
     3181    22185
     3182    22186    1   FLM_CLEANUP: PROC(TERM_ERR);
     3183    22187        /*F*  NAME: FLM_CLEANUP
     3184    22188              PURPOSE: Inactivates files, cleans up file directory and
     3185    22189                 account entries, and deletes files.
     3186    22190        */
     3187    22191
     3188    22192    2   DCL 1 TERM_ERR ALIGNED,
     3189    22193    2         2 * BIT(12) UNAL,
     3190    22194    2         2 * BIT(6) UNAL,
     3191    22195    2         2 * BIT(1) UNAL,
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:88   
     3192    22196    2         2 CODE UBIN(14) UNAL,
     3193    22197    2         2 * UBIN(3) UNAL;
     3194    22198
     3195    22199        /***
     3196    22200         *** Auto
     3197    22201         ***/
     3198    22202
     3199    22203    2   DCL NBR_FILES_INACTIVATED SBIN AUTO;
     3200    22204    2   DCL NBR_FILES_DELETED SBIN AUTO;
     3201    22205    2   DCL NBR_ACCTS_DELETED SBIN AUTO;
     3202    22206    2   DCL 1 CLNUP_FPARAM_ DALIGNED,
     3203    22207    2         2 BOUND UBIN (20) UNAL,
     3204    22208    2         2 * BIT (16) UNAL,
     3205    22209    2         2 PTR$ PTR;
     3206    22210    2   DCL 1 SAVE_SOURCE_DCB_ DALIGNED AUTO,
     3207    22211    2         2 * BIT(36),
     3208    22212    2         2 PTR$ PTR;
     3209    22213    2   DCL SAVE_SOURCE_DCB$ PTR AUTO;
     3210    22214
     3211    22215        /********************/
     3212    22216
     3213    22217    2      DCB$ = DCBADDR(DCBNUM(M$DISK_OUT));
     3214    22218    2      NBR_FILES_DELETED = 0;
     3215    22219    2      NBR_FILES_INACTIVATED = 0;
     3216    22220    2      NBR_ACCTS_DELETED = 0;
     3217    22221    2      ERR = '0'B;
     3218    22222    2      CALL FLI$ALLOC_BUF( SAVE_SOURCE_DCB_, 1 );
     3219    22223    2      SAVE_SOURCE_DCB$ = SAVE_SOURCE_DCB_.PTR$;
     3220    22224
     3221    22225    2      CLEANUP_ACCT.FPARAM_ = A_FIT_;  /* Something non-nil or cleanup won't work */
     3222    22226    2      CALL FLI$ALLOC_BUF ( CLNUP_FPARAM_, 1 );
     3223    22227    2      OPEN_BLOCK.FPARAM_ = CLNUP_FPARAM_;
     3224    22228
     3225    22229        /***
     3226    22230         *** File will not be open when deleting files on second pass through MOVE.
     3227    22231         *** A second pass is required on an OPEN command if checking is spec'd.
     3228    22232         ***/
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:89   
     3229    22233
     3230    22234    2      IF NOT DCBADDR(DCBNUM(M$DEL_LIST))->F$DCB.FCD#
     3231    22235    3       THEN DO;
     3232    22236    3         OPEN_DELETE_LIST.V.FUN# = %IN#;
     3233    22237    3         CALL M$OPEN( OPEN_DELETE_LIST )
     3234    22238    4          WHENALTRETURN DO;
     3235    22239    4            CALL FLI$RPT_ERR;
     3236    22240    4            OPEN_DELETE_LIST.V.FUN# = %IN#;
     3237    22241    4            RETURN;
     3238    22242    4            END;
     3239    22243    3         OPEN_DELETE_LIST.V.FUN# = %CREATE#;
     3240    22244    3         END;
     3241    22245
     3242    22246        /***
     3243    22247         *** Position to beginning of delete list.
     3244    22248         ***/
     3245    22249
     3246    22250    2      CALL M$PFIL( PFIL_DELETE_LIST )
     3247    22251    3       WHENALTRETURN DO;
     3248    22252    3         CALL FLI$RPT_ERR;
     3249    22253    3         RETURN;
     3250    22254    3         END;
     3251    22255
     3252    22256    2      DISK_CLOSE_NEXT.V.DCB# = DCBNUM(M$DISK_OUT);
     3253    22257    2      SOURCE_DCB$ = DCBADDR(DCBNUM(M$DISK_OUT));
     3254    22258    2      CALL FLP$WR_FILE_INFO;
     3255    22259
     3256    22260         /***
     3257    22261          *** Read through delete list until end or error.
     3258    22262          ***/
     3259    22263
     3260    22264    3      DO WHILE( NOT ERR );
     3261    22265    3         CALL M$READ( READ_DELETE_LIST )
     3262    22266    4          WHENRETURN DO;
     3263    22267    4            DISK_CLOSE_NEXT.V.EFTOPER = '0'B;
     3264    22268    4            DISK_CLOSE_NEXT.V.DESC = '0'B;
     3265    22269    4            IF DEL_LIST_REC.NAME#.L = 32
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:90   
     3266    22270    4             THEN DEL_LIST_REC.NAME#.L = 0;
     3267    22271    4            IF DEL_LIST_REC.NAME#.C = ' ' /* Account indicated by missing file name */
     3268    22272    4              AND DEL_LIST_REC.NAME#.L = 0
     3269    22273    5             THEN DO;
     3270    22274        /***
     3271    22275         *** If we terminated due to exceeding the granule limit, then we don't want
     3272    22276         *** to delete the source account as it still may contain files.
     3273    22277         *** Don't delete source account if break hit.
     3274    22278         ***/
     3275    22279    5               IF (TERM_ERR.CODE = %E$PSGRANS
     3276    22280    5                 AND SOURCE_DCB$ -> F$DCB.ACCT# = DEL_LIST_REC.ACCT)
     3277    22281    5                THEN EXIT;
     3278    22282    5               IF BREAK_COUNT > 0
     3279    22283    5                THEN EXIT;
     3280    22284    5               CALL FLM_CLEANUP_ACCOUNT;
     3281    22285    5               END;
     3282    22286    5             ELSE DO;                      /* Inactivate or cleanup file         */
     3283    22287    5               OPEN_BLOCK.V.RES# = DEL_LIST_REC.RES;
     3284    22288    5               CALL M$OPEN( OPEN_BLOCK )
     3285    22289    6                WHENRETURN DO;
     3286    22290    6                  IF DEL_LIST_REC.VLP_SN.SN#(0) = SOURCE_DCB$->F$DCB.PSN#
     3287    22291    6                    AND DEL_LIST_REC.ACCT = SOURCE_DCB$->F$DCB.ACCT#
     3288    22292    6                    AND DEL_LIST_REC.NAME#.C = SOURCE_DCB$->F$DCB.NAME#.C
     3289    22293    6                    AND DEL_LIST_REC.NAME#.L = SOURCE_DCB$->F$DCB.NAME#.L
     3290    22294    7                   THEN DO;
     3291    22295    7                     IF SOURCE_DCB$ -> F$DCB.DESC.DELF# AND
     3292    22296    7                       SOURCE_DCB$ -> F$DCB.DESC.ARCHIVE#
     3293    22297    8                      THEN DO;
     3294    22298    8                        CODE$ = CLNUP_FPARAM_.PTR$;
     3295    22299    8                        CALL XSF$LOCCODP ( CODE$, 06 )
     3296    22300    9                         WHENRETURN DO;
     3297    22301    9                           IF CODE$ -> CODE06.STOW.TIME < DEL_LIST_REC.TIME
     3298    22302    9                            THEN CALL FLM_CLEANUP_FILE;
     3299    22303    9                            ELSE CALL M$CLOSE ( DISK_CLOSE_NEXT )
     3300    22304   10                               WHENALTRETURN DO;
     3301    22305   10                                 CALL FLI$RPT_ERR;
     3302    22306   10                                 END;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:91   
     3303    22307    9                           END;
     3304    22308    9                         WHENALTRETURN DO;
     3305    22309    9                           CALL FLI$RPT_ERR;
     3306    22310    9                           END;
     3307    22311    8                        END;
     3308    22312    7                      ELSE IF SOURCE_DCB$ -> F$DCB.DESC.DELF# AND ( NOT
     3309    22313    7                          SOURCE_DCB$ -> F$DCB.DESC.ARCHIVE# )
     3310    22314    7                         THEN IF SOURCE_DCB$ -> F$DCB.EXPIRE# < DEL_LIST_REC.TIME
     3311    22315    7                            THEN CALL FLM_CLEANUP_FILE;
     3312    22316    7                            ELSE CALL M$CLOSE ( DISK_CLOSE_NEXT )
     3313    22317    8                               WHENALTRETURN DO;
     3314    22318    8                                 CALL FLI$RPT_ERR;
     3315    22319    8                                 END;
     3316    22320    8                         ELSE DO;
     3317    22321    8                           CODE$ = PINCRW ( CLNUP_FPARAM_.PTR$, SIZEW ( FM$GRAN ) );
     3318    22322    8                           CALL XSF$LOCCODP ( CODE$, 04 )
     3319    22323    9                            WHENRETURN DO;
     3320    22324    9                              IF CODE$ -> CODE04.MODIFY.TIME <
     3321    22325    9                                DEL_LIST_REC.TIME
     3322    22326    9                               THEN CALL FLM_CLEANUP_FILE;
     3323    22327    9                               ELSE CALL M$CLOSE ( DISK_CLOSE_NEXT )
     3324    22328   10                                  WHENALTRETURN DO;
     3325    22329   10                                    CALL FLI$RPT_ERR;
     3326    22330   10                                    END;
     3327    22331    9                              END;
     3328    22332    9                            WHENALTRETURN DO;
     3329    22333    9                              CALL M$CLOSE ( DISK_CLOSE_NEXT )
     3330    22334   10                               WHENALTRETURN DO;
     3331    22335   10                                 CALL FLI$RPT_ERR;
     3332    22336   10                                 END;
     3333    22337    9                              END;
     3334    22338    8                           END;
     3335    22339    7                     END;
     3336    22340    7                   ELSE DO;                /* File's not there anymore...oh well */
     3337    22341                                /*N* Probably should say which file */
     3338    22342    7                     CALL M$CLOSE( DISK_CLOSE_NEXT )
     3339    22343    8                      WHENALTRETURN DO;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:92   
     3340    22344    8                        CALL FLI$RPT_ERR;
     3341    22345    8                        END;
     3342    22346    7                     END;
     3343    22347    6                  END;
     3344    22348    6                WHENALTRETURN DO;          /* OPEN_BLOCK                         */
     3345    22349    6                  CALL FLI$RPT_ERR;
     3346    22350    6                  END;
     3347    22351    5               END;                        /* Inactivate or cleanup file         */
     3348    22352    4            END;
     3349    22353    4          WHENALTRETURN DO;
     3350    22354    4            IF B$TCB.ALT$->B$ALT.ERR.CODE ~= %E$EOF
     3351    22355    5             THEN DO;
     3352    22356    5               CALL FLI$RPT_ERR;
     3353    22357                 /*N* Possibly another message saying that some files remain to
     3354    22358                      be cleaned up or inactivated, possibly giving their names */
     3355    22359    5               END;
     3356    22360    4            ERR = '1'B;
     3357    22361    4            END;
     3358    22362    3         END;
     3359    22363
     3360    22364        /***
     3361    22365         *** Report how many files and accounts were affected.
     3362    22366         ***/
     3363    22367
     3364    22368    2      OPEN_BLOCK.FPARAM_ = VECTOR ( NIL );
     3365    22369    2      IF NBR_FILES_DELETED ~= 0 OR NBR_FILES_INACTIVATED ~= 0 OR NBR_ACCTS_DELETED ~= 0
     3366    22370    3       THEN DO;
     3367    22371    3         FILE_DISP_REC.NBR = ' ';
     3368    22372    3         FILE_DISP_REC.WHAT = ' ';
     3369    22373    3         FILE_DISP_REC.DISP = ' ';
     3370    22374    3         CALL M$WRITE( WRITE_FILE_DISP_REC )
     3371    22375    4          WHENALTRETURN DO;
     3372    22376    4            CALL FLI$RPT_ERR;
     3373    22377    4            END;
     3374    22378    3         CALL FLM_DISP( NBR_ACCTS_DELETED, ' accounts ', 'cleaned up ' );
     3375    22379    3         CALL FLM_DISP( NBR_FILES_DELETED, ' files    ', 'cleaned up ' );
     3376    22380    3         CALL FLM_DISP( NBR_FILES_INACTIVATED, ' files    ', 'inactivated' );
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:93   
     3377    22381    3         END;
     3378    22382
     3379    22383    2      RETURN;
     3380    22384
     3381    22385
     3382    22386    2   FLM_DISP: PROC( NBR_FILES, WHAT, DISP );
     3383    22387
     3384    22388    3   DCL NBR_FILES SBIN;
     3385    22389    3   DCL WHAT CHAR(10);
     3386    22390    3   DCL DISP CHAR(11);
     3387    22391
     3388    22392        /********************/
     3389    22393
     3390    22394    3      IF NBR_FILES > 0
     3391    22395    4       THEN DO;
     3392    22396    4         FILE_DISP_REC.DISP = DISP;
     3393    22397    4         FILE_DISP_REC.WHAT = WHAT;
     3394    22398    4         CALL BINCHAR( FILE_DISP_REC.NBR, NBR_FILES );
     3395    22399    4         CALL EDITCHAR( FILE_DISP_REC.NBR, , , NO_LEADING_5_ZEROS, FILE_DISP_REC.NBR );
     3396    22400    4         CALL M$WRITE( WRITE_FILE_DISP_REC )
     3397    22401    5          WHENALTRETURN DO;
     3398    22402    5            CALL FLI$RPT_ERR;
     3399    22403    5            END;
     3400    22404    4         END;
     3401    22405    3      RETURN;
     3402    22406
     3403    22407    3   END FLM_DISP;
     3404    22408
     3405    22409
     3406    22410    2   FLM_CLEANUP_ACCOUNT: PROC;
     3407    22411        /*F*  NAME: FLM_CLEANUP_ACCOUNT
     3408    22412              PURPOSE: Clean up deleted account entry.
     3409    22413        */
     3410    22414
     3411    22415        /********************/
     3412    22416
     3413    22417        /*
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:94   
     3414    22418          ***** Only delete the source acct. on a TRANSFER UNPROCT if ANYF is set.
     3415    22419        */
     3416    22420    3      IF DISK_OPTION.DELETE AND DISK_OPTION.XFER AND (NOT DISK_SRCHCOND.ANYF#)
     3417    22421    3       THEN GOTO DONTDELACCT;
     3418    22422    3      CALL M$OPEN( CLEANUP_ACCT ) ALTRET(REPERRRET);
     3419    22423    3      NBR_ACCTS_DELETED = NBR_ACCTS_DELETED + 1;
     3420    22424    3      ERR.CODE = %E$NOPROC;
     3421    22425    3      CALL FLP$WR_FILE_INFO(DCB$,ADDR(NIL),DEL_LIST_REC.CSN,DEL_LIST_REC.CFSN,' ','1'B,
             22425               ERR,PR_DEV_LT,'0'B);
     3422    22426    3   DONTDELACCT: ;
     3423    22427        /*
     3424    22428          **** Delete the account from the MAD only if the account does not
     3425    22429          **** exist on another packset.
     3426    22430        */
     3427    22431    3      CALL M$MADMUCK (GET_PSN_FROM_MAD)
     3428    22432    4       WHENALTRETURN DO;
     3429    22433    4         IF B$TCB.ALT$->B$ALT.ERR.CODE ~= %E$NOKEY
     3430    22434    4          THEN GOTO REPERRRET;
     3431    22435    4         MAD_SN.SN#(0) = DEL_LIST_REC.VLP_SN.SN#(0);
     3432    22436    4         END;
     3433    22437    3      IF DEL_LIST_REC.VLP_SN.SN#(0) = MAD_SN.SN#(0)
     3434    22438    4       THEN DO;
     3435    22439    4         CALL M$MADMUCK( DEL_ACCT_FROM_MAD )
     3436    22440    5          WHENALTRETURN DO;
     3437    22441    5            END;
     3438    22442    4         IF DISK_OPTION.XFER AND DISK_OPTION.DELETE
     3439    22443    4           AND DEL_LIST_REC.TO_ACCT ~= ' ' AND DEL_LIST_REC.TO_SN ~= ' '
     3440    22444    4          THEN CALL M$MADMUCK( ADD_ACCT_TO_MAD )
     3441    22445    5             WHENALTRETURN DO;
     3442    22446    5               CALL FLI$RPT_ERR;
     3443    22447    5               END;
     3444    22448    4         END;
     3445    22449    3      ERR = '0'B;
     3446    22450    4      DO WHILE ( '0'B );
     3447    22451    4   REPERRRET: ;
     3448    22452    4         CALL FLI$RPT_ERR;
     3449    22453    4         END;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:95   
     3450    22454    3      RETURN;
     3451    22455
     3452    22456    3   END FLM_CLEANUP_ACCOUNT;
     3453    22457
     3454    22458
     3455    22459    2   FLM_CLEANUP_FILE: PROC;
     3456    22460        /*F*  NAME: FLM_CLEANUP_FILE
     3457    22461              PURPOSE: Inactivate file, delete file and/or clean deleted
     3458    22462                 file directory entry.
     3459    22463        */
     3460    22464
     3461    22465        /********************/
     3462    22466
     3463    22467    3      IF DEL_LIST_REC.INACTIVATE
     3464    22468    3       THEN IF ( NOT F$DCB.DESC.DELF# )
     3465    22469    3          THEN DISK_CLOSE_NEXT.V.EFTOPER.ISTOW# = '1'B;
     3466    22470    3          ELSE ;
     3467    22471    3       ELSE CALL FLM_CLEAN ALTRET( JUSTRET );
     3468    22472    3      IF F$DCB.FCD#
     3469    22473    4       THEN DO;
     3470    22474    4         CALL M$CLOSE( DISK_CLOSE_NEXT )
     3471    22475    5          WHENRETURN DO;
     3472    22476    5            IF DEL_LIST_REC.INACTIVATE
     3473    22477    5             THEN NBR_FILES_INACTIVATED = NBR_FILES_INACTIVATED + 1;
     3474    22478    5            END;
     3475    22479    5          WHENALTRETURN DO;
     3476    22480    5            CALL FLI$RPT_ERR;
     3477    22481    5            END;
     3478    22482    4         END;
     3479    22483
     3480    22484    3   JUSTRET: ;
     3481    22485    3      RETURN;
     3482    22486
     3483    22487    3   END FLM_CLEANUP_FILE;
     3484    22488
     3485    22489
     3486    22490    2   FLM_CLEAN: PROC ALTRET;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:96   
     3487    22491        /*F*  NAME: FLM_CLEAN
     3488    22492              PURPOSE: Unarchive and/or delete existing disk file.
     3489    22493        */
     3490    22494
     3491    22495        /********************/
     3492    22496
     3493    22497    3      IF NOT SOURCE_DCB$->F$DCB.DESC.DELF#
     3494    22498    4       THEN DO;
     3495    22499    4         IF SOURCE_DCB$->F$DCB.DESC.ARCHIVE#
     3496    22500    4           OR SOURCE_DCB$->F$DCB.DESC.QS#
     3497    22501    5          THEN DO;                         /* File must be unarchived first      */
     3498    22502    5            DISK_CLOSE_NEXT.V.EFTOPER.UPDDESC# = '1'B;
     3499    22503    5            DISK_CLOSE_NEXT.V.DESC.TERMINATE# = '1'B;
     3500    22504    5            END;
     3501    22505    4          ELSE DISK_CLOSE_NEXT.V.DISP# = %RELEASE#;
     3502    22506    4         CALL M$CLOSE( DISK_CLOSE_NEXT )
     3503    22507    5          WHENRETURN DO;         /* File is now either unarchived or deleted     */
     3504    22508    5            IF DISK_CLOSE_NEXT.V.DISP# = %RELEASE#
     3505    22509    5             THEN DISK_CLOSE_NEXT.V.DISP# = %SAVE#;
     3506    22510    6             ELSE DO;            /* File was unarchived and must now be deleted  */
     3507    22511    6               OPEN_BLOCK.V.DELETE# = '1'B;
     3508    22512    6               CALL M$OPEN( OPEN_BLOCK ) ALTRET( REPERRALT );
     3509    22513    6               OPEN_BLOCK.V.DELETE# = '0'B;
     3510    22514    6               END;
     3511    22515    5            SAVE_SOURCE_DCB$->F$DCB = SOURCE_DCB$->F$DCB;
     3512    22516    5            CALL M$OPEN( OPEN_BLOCK ) ALTRET( CHKERRALT );
     3513    22517    5            IF NOT DEL_LIST_REC.INACTIVATE
     3514    22518    6             THEN DO;
     3515    22519    6               NBR_FILES_DELETED = NBR_FILES_DELETED + 1;
     3516    22520    6               ERR.CODE = %E$NOFILE;
     3517    22521    6               CALL FLP$WR_FILE_INFO(SAVE_SOURCE_DCB$,ADDR(NIL),DEL_LIST_REC.CSN,
             22521                        DEL_LIST_REC.CFSN,' ',,ERR,PR_DEV_LT,'0'B);
     3518    22522    6               ERR = '0'B;
     3519    22523    6               END;
     3520    22524    5            IF DEL_LIST_REC.VLP_SN.SN#(0) = SOURCE_DCB$->F$DCB.PSN#
     3521    22525    5              AND DEL_LIST_REC.ACCT = SOURCE_DCB$->F$DCB.ACCT#
     3522    22526    5              AND DEL_LIST_REC.NAME#.C = SOURCE_DCB$->F$DCB.NAME#.C
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:97   
     3523    22527    5              AND DEL_LIST_REC.NAME#.L = SOURCE_DCB$->F$DCB.NAME#.L
     3524    22528    5             THEN ;              /* Correct file...it's ready to be cleaned up   */
     3525    22529    6             ELSE DO;  /* Not the right file...must have deleted correct file    */
     3526    22530    6               DISK_CLOSE_NEXT.V.EFTOPER = '0'B;
     3527    22531    6               DISK_CLOSE_NEXT.V.DISP# = %SAVE#;
     3528    22532    6               RETURN;
     3529    22533    6               END;
     3530    22534    5            END;
     3531    22535    4         END;
     3532    22536
     3533    22537        /***
     3534    22538         *** File is deleted by this point.  We're ready for clean up.
     3535    22539         ***/
     3536    22540
     3537    22541    3      DISK_CLOSE_NEXT.V.EFTOPER = '0'B;
     3538    22542    3      DISK_CLOSE_NEXT.V.EFTOPER.DELFDE# = '1'B;
     3539    22543
     3540    22544    3      RETURN;
     3541    22545
     3542    22546    3   CHKERRALT: ;
     3543    22547    3      IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE = %E$FDEOF
     3544    22548    4       THEN DO;        /* Not the right file...must have deleted correct file    */
     3545    22549    4         DISK_CLOSE_NEXT.V.EFTOPER = '0'B;
     3546    22550    4         DISK_CLOSE_NEXT.V.DISP# = %SAVE#;
     3547    22551    4         IF NOT DEL_LIST_REC.INACTIVATE
     3548    22552    5          THEN DO;
     3549    22553    5            NBR_FILES_DELETED = NBR_FILES_DELETED + 1;
     3550    22554    5            ERR.CODE = %E$NOFILE;
     3551    22555    5            CALL FLP$WR_FILE_INFO(SAVE_SOURCE_DCB$,ADDR(NIL),DEL_LIST_REC.CSN,
             22555                     DEL_LIST_REC.CFSN,' ',,ERR,PR_DEV_LT,'0'B);
     3552    22556    5            ERR = '0'B;
     3553    22557    5            END;
     3554    22558    4         RETURN;
     3555    22559    4         END;
     3556    22560
     3557    22561    3   REPERRALT: ;
     3558    22562    3      CALL FLI$RPT_ERR;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:98   
     3559    22563    3      DISK_CLOSE_NEXT.V.DISP# = %SAVE#;
     3560    22564    3      OPEN_BLOCK.V.DELETE# = '0'B;
     3561    22565    3      ALTRETURN;
     3562    22566
     3563    22567    3   END FLM_CLEAN;
     3564    22568
     3565    22569    2   END FLM_CLEANUP;
     3566    22570
     3567    22571
     3568    22572    1   FLM_FILES_FROM_TAPE_DELETE: PROC ALTRET;
     3569    22573        /*F*   NAME: FLM_FILES_FROM_TAPE_DELETE
     3570    22574               PURPOSE: Searches current tape for deleted files and deletes
     3571    22575                  corresponding file on packset being rebuilt.
     3572    22576        */
     3573    22577
     3574    22578        /*** Auto ***/
     3575    22579    2   DCL DISK_SRCHCOND_SAVE BIT(18) AUTO;
     3576    22580    2   DCL FILE_TYPE_SAVE BIT(18) AUTO;
     3577    22581
     3578    22582        /********************/
     3579    22583
     3580    22584        /***
     3581    22585         *** Attempt to recover some pack space by searching the remainder of the
     3582    22586         *** currently mounted tape for deleted files and delete corresponding files
     3583    22587         *** from packset before attempting to continue the REBUILD.
     3584    22588         ***/
     3585    22589    2      OLD_SN = TAPE_SN;          /* Indicates which tape was previously searched */
     3586    22590
     3587    22591    2      CALL FLC$TAPE_CLOSE_NEXT ALTRET( JUSTALT );
     3588    22592    2      TAPE_OPEN.V.CVOL# = %YES#;
     3589    22593    2      DISK_SRCHCOND_SAVE = DISK_SRCHCOND;
     3590    22594    2      DISK_SRCHCOND = '0'B;
     3591    22595    2      DISK_SRCHCOND.DELF# = '1'B;
     3592    22596    2      FILE_TYPE_SAVE = FILE_TYPE;
     3593    22597    2      FILE_TYPE = '0'B;
     3594    22598    2      FILE_TYPE.DF = '1'B;
     3595    22599
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:99   
     3596    22600    3      DO WHILE ( '1'B );                   /* Search tape for deleted files      */
     3597    22601    3         CALL FLC$TAPE_OPEN_NEXT( SOURCE_DCB$, FPARAM_, ERR) ALTRET( CHKALT );
     3598    22602    3         CALL FLC$TAPE_CLOSE_NEXT ALTRET( JUSTALT );
     3599    22603
     3600    22604    3         TO_DISK_NAME = SOURCE_DCB$->F$DCB.NAME#; /* Open same file on dest. pack */
     3601    22605    3         TO_DISK_ACCT.ACCT# = SOURCE_DCB$->F$DCB.ACCT#;
     3602    22606    3         TO_DISK_SN.SN#(0) = SOURCE_DCB$->F$DCB.PSN#;
     3603    22607    3         DISK_OPEN.V.FUN# = %IN#;
     3604    22608    3         DISK_OPEN.IFPARAM_ = VECTOR(NIL);
     3605    22609    3         DISK_OPEN.FPARAM_ = VECTOR(NIL);
     3606    22610    3         CALL M$OPEN( DISK_OPEN )
     3607    22611    4          WHENRETURN DO;
     3608    22612    4            DISK_CLOSE.V.EFTOPER = '0'B;   /* Delete corresponding file on disk  */
     3609    22613    4            DISK_CLOSE.V.DESC.TERMINATE# = %NO#;
     3610    22614    4            IF F$DCB.DESC.DELF#
     3611    22615    4             THEN DISK_CLOSE.V.EFTOPER.DELFDE# = %YES#;
     3612    22616    4             ELSE DISK_CLOSE.V.DISP# = %RELEASE#;
     3613    22617    4            CALL M$CLOSE( DISK_CLOSE )
     3614    22618    5             WHENALTRETURN DO;
     3615    22619    5               CALL FLI$RPT_ERR;
     3616    22620    5               END;
     3617    22621    4            END;
     3618    22622    4          WHENALTRETURN DO;                /* Assume file non-existant on pack   */
     3619    22623    4            END;
     3620    22624
     3621    22625    3         BLK_TAG$ = PINCRW( BLK_TAG$, -SIZEW( BLK_TAG ) );
     3622    22626    3         END;
     3623    22627
     3624    22628    2   CHKALT:
     3625    22629    2      CALL FLC$TAPE_CLOSE ALTRET( JUSTALT );
     3626    22630    2      REWIND_TAPE.V.PSN# = TAPE_SN;
     3627    22631    2      CALL M$REW( REWIND_TAPE ) ALTRET( JUSTALT );
     3628    22632    2      IF ERR.CODE = %E$EOSET
     3629    22633    3       THEN DO;
     3630    22634        /***
     3631    22635         *** Set up OPEN FPT so that we will continue rebuilding with the file that
     3632    22636         *** caused packset space to be exceeded.
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:100  
     3633    22637         ***/
     3634    22638    3         TAPE_OPEN.V.CVOL# = %NO#;
     3635    22639    3         DISK_SRCHCOND = DISK_SRCHCOND_SAVE;
     3636    22640    3         FILE_TYPE = FILE_TYPE_SAVE;
     3637    22641    3         DISK_FILE_SPEC.NBR = 1;
     3638    22642    3         DISK_FILE_SPEC.SPEC.START.ACCT.ACCT#(0) = REBUILD_BUF.START.ACCT.ACCT#;
     3639    22643    3         DISK_FILE_SPEC.SPEC.START.FILE.L#(0) = REBUILD_BUF.START.FILE.L#;
     3640    22644    3         DISK_FILE_SPEC.SPEC.START.FILE.NAME#(0) = REBUILD_BUF.START.FILE.NAME#;
     3641    22645    3         TAPE_OPEN.V.FSN# = REBUILD_BUF.FSN;
     3642    22646    3         RETURN;
     3643    22647    3         END;
     3644    22648    2   JUSTALT:
     3645    22649    2      ALTRETURN;
     3646    22650    2   END FLM_FILES_FROM_TAPE_DELETE;
     3647    22651
     3648    22652
     3649    22653    1   FLM_REQUEUE_FILES_FOR_STOW: PROC;
     3650    22654        /*F* NAME: FLM_REQUEUE_FILES_FOR_STOW
     3651    22655             PURPOSE: Requeue (QS) all files from the current output block that did not
     3652    22656                      get written to the output media successfully so that they get
     3653    22657                      stowed on a subsequent archive.
     3654    22658        */
     3655    22659
     3656    22660    2   DCL BLK_TAGT$ PTR AUTO;                 /* Temporary block tag pointer        */
     3657    22661    2   DCL 1 BLK_TAGT BASED(BLK_TAGT$),
     3658    22662           %BLOCK_TAG;
     3659    22667    2   DCL DCB# UBIN WORD AUTO;
     3660    22668
     3661    22669    2   DCL 1 FILE_DESC AUTO,                   /* Exactly like M$DCB.DESC            */
     3662    22670    2         2 DELF# BIT(1),
     3663    22671    2         2 NOLIST# BIT(1),
     3664    22672    2         2 BUF# BIT(1),
     3665    22673    2         2 ODSTOW# BIT(1),
     3666    22674    2         2 BAD# BIT(1),
     3667    22675    2         2 QS# BIT(1),
     3668    22676    2         2 * BIT(2),
     3669    22677    2         2 ARCHIVE# BIT(1),
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:101  
     3670    22678    2         2 BUPM# BIT(1),
     3671    22679    2         2 NBUF# BIT(1),
     3672    22680    2         2 ACTIVE# BIT(1),
     3673    22681    2         2 TPB# BIT(1),
     3674    22682    2         2 TERMINATE# BIT(1),
     3675    22683    2         2 FETCH# BIT(1),
     3676    22684    2         2 * BIT(3);
     3677    22685
     3678    22686        /********************/
     3679    22687
     3680    22688    2      IF LOW_BLK_TAG$ = BLK_TAG0$          /* Just return, no files in block     */
     3681    22689    2       THEN RETURN;
     3682    22690
     3683    22691    2      DCB# = DCBNUM(M$DISK_IN);
     3684    22692    2      CALL FLI$ALLOC_BUF( FIT_AREA,1 );
     3685    22693    2      OPEN_BLOCK_FILE.FPARAM_ = FIT_AREA;
     3686    22694
     3687    22695        /***
     3688    22696         *** Scan current block for files that did not get written out.
     3689    22697         ***/
     3690    22698    2      BLK_TAGT$ = PINCRW( BLK_TAG0$, -SIZEW(BLK_TAG) ); /* Start at first tag    */
     3691    22699
     3692    22700    3      DO WHILE( BLK_TAGT$ >= LOW_BLK_TAG$ );
     3693    22701    4         DO CASE( BLK_TAGT.TYPE );
     3694    22702
     3695    22703    4          CASE( %REG_FILE, %ACUP_FILE, %IDS_FAST_FILE );
     3696    22704    4            FROM_DISK_SN.SN#(0) = BLK_TAG0.WHERE.PSN;
     3697    22705    4            FROM_DISK_ACCT.ACCT# = BLK_TAG0.WHERE.ACCT;
     3698    22706    4            FROM_DISK_NAME = BLK_TAGT.NAME;
     3699    22707    4            CALL M$OPEN ( OPEN_BLOCK_FILE )
     3700    22708    5             WHENRETURN DO;
     3701    22709    5               MODIFIED_FIT_ = FIT_AREA;   /* Reset stow info. if CODE06 exists  */
     3702    22710    5               FIT$ = PINCRW( MODIFIED_FIT_.PTR$, SIZEW( FM$GRAN ));
     3703    22711    5               CODE$ = FIT$;
     3704    22712    5               CALL XSF$LOCCODP( CODE$, 06 )
     3705    22713    6                WHENRETURN DO;
     3706    22714    6                  FM$FIT.CODES.NDW(06) = 0;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:102  
     3707    22715    6                  MODIFIED_FIT_.PTR$ = PINCRW( MODIFIED_FIT_.PTR$, SIZEW(FM$GRAN));
     3708    22716    6                  MODIFIED_FIT_.BOUND = MODIFIED_FIT_.BOUND - SIZEC(FM$GRAN);
     3709    22717    6                  CLOSE_BLOCK_FILE.IFPARAM_ = MODIFIED_FIT_;
     3710    22718    6                  END;
     3711    22719    6                WHENALTRETURN DO;          /* No CODE06, just ignore             */
     3712    22720    6                  CLOSE_BLOCK_FILE.IFPARAM_ = VECTOR(NIL);
     3713    22721    6                  END;
     3714    22722
     3715    22723        /***
     3716    22724         *** Determine if file is to be requeued actively or inactively.
     3717    22725         ***/
     3718    22726    5               CLOSE_BLOCK_FILE.V.DESC = DCBADDR(DCB#)->F$DCB.DESC;
     3719    22727    5               CLOSE_BLOCK_FILE.V.EFTOPER.UPDDESC# = '1'B;
     3720    22728    5               CLOSE_BLOCK_FILE.V.DESC.QS# = '1'B;
     3721    22729    5               CLOSE_BLOCK_FILE.V.DESC.ARCHIVE# = '1'B;
     3722    22730    5               CLOSE_BLOCK_FILE.V.DESC.ODSTOW# = '0'B;
     3723    22731
     3724    22732    5               FILE_DESC = BLK_TAGT.DESC;
     3725    22733    5               IF FILE_DESC.ACTIVE#
     3726    22734    5                THEN CLOSE_BLOCK_FILE.V.DESC.ACTIVE# = '1'B;
     3727    22735    5                ELSE CLOSE_BLOCK_FILE.V.DESC.ACTIVE# = '0'B;
     3728    22736
     3729    22737    5               CALL M$CLOSE( CLOSE_BLOCK_FILE );
     3730    22738    5               END;
     3731    22739    5             WHENALTRETURN DO;
     3732    22740    5               CALL FLI$RPT_ERR;
     3733    22741    5               END;
     3734    22742
     3735    22743    4          CASE( ELSE );
     3736    22744
     3737    22745    4          END;
     3738    22746    3         BLK_TAGT$ = PINCRW( BLK_TAGT$, -SIZEW(BLK_TAG) );
     3739    22747    3         END;                              /* Do WHILE end                       */
     3740    22748
     3741    22749    2      RETURN;
     3742    22750
     3743    22751    2   END FLM_REQUEUE_FILES_FOR_STOW;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:103  
     3744    22752
     3745    22753
     3746    22754    1   FLM_GET_PRIME_VSN: PROC( PRIME_VSN ) ALTRET;
     3747    22755        /*F* NAME: FLM_GET_PRIME_VSN
     3748    22756             PURPOSE: Obtains the VSN for the prime packset from the VID.
     3749    22757        */
     3750    22758
     3751    22759    2   DCL PRIME_VSN CHAR(6);
     3752    22760
     3753    22761        /********************/
     3754    22762
     3755    22763    2      OPEN_DP.SN_ = VECTOR(DPLIST);
     3756    22764    2      CALL M$OPEN( OPEN_DP ) ALTRET(JUSTALT);
     3757    22765    2      CALL M$READ( READ_VID ) ALTRET(JUSTALT);
     3758    22766    2      CALL M$CLOSE( CLOSE_DP ) ALTRET(JUSTALT);
     3759    22767    2      CALL BINCHAR(PRIME_VSN,MOD(VIDBUF.SNLIST.VSN.N(0),100000));
     3760    22768    2      IF VIDBUF.SNLIST.VSN.S(0)=0
     3761    22769    2       THEN TEMP_S = ASCBIN('D');
     3762    22770    2       ELSE TEMP_S = VIDBUF.SNLIST.VSN.S(0)+ASCBIN('@');
     3763    22771    2      CALL INSERT(PRIME_VSN,0,1,BINASC(TEMP_S));
     3764    22772    2      RETURN;
     3765    22773
     3766    22774    2   JUSTALT:
     3767    22775    2      ALTRETURN;
     3768    22776
     3769    22777
     3770    22778    2   END FLM_GET_PRIME_VSN;
     3771    22779
     3772    22780
     3773    22781    1   END FLM$MOVE;
     3774    22782        %EOD;

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:104  
--  Include file information  --

   FM$GRAN.:E05TOU  is referenced.
   FM$FIT.:E05TOU  is referenced.
   FLW_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   FLS_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   FLN_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   FLB_SUBS_C.:E05TOU  is referenced.
   FLI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   FL_PERR_C.:E05TOU  is referenced.
   FLE_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure FLM$MOVE.

   Procedure FLM$MOVE requires 6159 words for executable code.
   Procedure FLM$MOVE requires 96 words of local(AUTO) storage.

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:105  

 Object Unit name= FLM$MOVE                                   File name= FLM$MOVE.:E05TOU
 UTS= JUL 29 '97 16:03:19.88 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$PRE_RET
    2   Data  even  none  1868   3514  FLM$MOVE
    3   DCB   even  none     0      0  M$DISK_IN
    4   DCB   even  none     0      0  M$DISK00
    5   DCB   even  none     0      0  M$DISK01
    6   DCB   even  none     0      0  M$DISK02
    7   DCB   even  none     0      0  M$DISK03
    8   DCB   even  none     0      0  M$TSN_USED
    9   DCB   even  none     0      0  M$STATUS
   10   DCB   even  none     0      0  M$REBUILD
   11   DCB   even  none     0      0  M$ARCHIVE
   12   DCB   even  none     0      0  M$NODATA_LIST
   13   DCB   even  none     0      0  M$DISK_OUT
   14   DCB   even  none     0      0  M$DEL_LIST
   15   DCB   even  none     0      0  M$LO
   16   DCB   even  none     0      0  M$OPEN_PRIME_DUAL_PACK
   17  RoData even  UTS     55     67  FLM$MOVE
   18   Proc  even  none  6159  14017  FLM$MOVE
   19  RoData even  none    97    141  FLM$MOVE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    18      0   yes    yes     yes      Std        1  FLM$MOVE
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:106  

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    2   2534  DISK_REOPEN                        2   3006  CLEANUP_ACCT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       9 FLP$WR_FILE_INFO
         yes           Std       1 FLI$DISK_READ_INIT
         yes           Std       0 FLC$TAPE_IO_INIT
 yes     yes           Std       3 FLC$TAPE_OPEN_NEXT
         yes           Std       2 FLI$ALLOC_BUF
         yes           Std       0 FLS$FILE_PACKER_INIT
         yes           Std       0 FLN$DISK_IO_INIT
 yes     yes           Std       1 FLI$BUILD_$$EFT
 yes     yes           Std      10 FLS$FILE_PACKER
 yes     yes           Std       1 FLC$TAPE_CLOSE_NEXT
         yes           Std       5 FLI$RPT_ERR
 yes     yes           Std       5 FLN$DISK_OPEN_NEXT
 yes     yes           Std       2 FLC$CRIT_CHECK
 yes     yes           Std       2 XSF$LOCCODP
 yes     yes           Std       1 FLS$FILE_PACKER_FIN
 yes     yes           Std       2 FLI$TSN_USED
         yes           Std       1 FLN$DISK_CLOSE_NEXT
         yes           Std       0 FLN$DISK_CLOSE_ALL
 yes     yes           Std       1 FLC$TAPE_CLOSE
 yes     yes           Std       3 FLI$NUMFREEGRANS
         yes           Std       1 FLS$SCRUB
         yes           Std       1 FLI$RETURN_BUF
 yes     yes           Std       3 FLC$TAPE_READ_NEXT
         yes           Std       1 FLI$DISK_READ_FILE_INIT
 yes     yes           Std       5 FLI$DISK_READ
 yes     yes           Std       2 XSF$LOCCODE
                       Std       0 B_CONSPOOL_D
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:107  
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    E_NOTHING_FOUND                  r    E_NO_PREVIOUS_SAVE
r    E_DEL_FILES_REMAIN               r    E_BAD_TAPE_FILE                  r    E_WRONG_DUAL
r    E_WRONG_PRIME                    r    E_NOT_SCRATCH_PACK               r    E_CANT_SAVE_FILE
r    E_CANT_RETRIEVE                       NBR_SNLISTS                           TAPE_DCBLIST$
     FPT_EXIT                              DISK_OPEN                             DISK_WRITE
     DISK_CLOSE                            TAPE_OPEN                             TAPE_CLOSE
     SNVECLIST$                            B$TCB$                                DEFAULT_GRANS_PER_DISK_BUF
     NOW_UTS                               GET_NOW_UTS                           DPLIST$
     DPRESLIST$                            DISK_FILE_SPEC$                       SPECCHARS
     DISK_SRCHCOND                         DISK_OPTION                           FILE_TYPE
     DISK_CRIT                             DATE_CRIT                             DISK_DESC_SAVE
r    FIRST_ACCT                       r    FIRST_FILE                            DISK_DEST_SN
     DISK_DEST_ACCT                        DISK_DEST_RES                         DISK_DEST_EXIST
     LAST_TAPE_FSN                         EFTWORD                               TAPE_OPTION
     M$PRE_RET                             RET_CMDS_NAME                    r    FIT_ONLY_CODE
     M$DISK_IN                             ARCHIVE$                              M$DISK00
     M$DISK01                              M$DISK02                              M$DISK03
     FROM_DISK_NAME                        FROM_DISK_ACCT                        DISK_SN
     FROM_DISK_SN                          DISK_OPEN_NEXT                        DISK_CLOSE_NEXT
     DISK_ACCT_FIRST                       DISK_ACCT_LAST                        M$TSN_USED
     M$STATUS                              M$REBUILD                             M$ARCHIVE
     M$NODATA_LIST                         DCB$                                  M$TAPE00$
     LOW_BLK_TAG$                          BLK_TAG$                              BLK_TAG0$
     NBR_BYTES_TO_MOVE                     DISK_GRAN$                            BLOCK_GRAN$
r    A_FIT_                                A_FIT                            r    A_FD_
     CROSSED                          r    EFTFILE_DCB$                     r    EFT_CVOL_FILE
r    EFT_RESTRICT_FILE                     TAPE_SN                               TAPE_FSN
     LAST_TYPE                             RUN_NBR                               TSN_SET_NBR
     TSN_VOL                               TAPE_BAD                              SNLIST_NBR
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:108  
     TSN_USED_KEY                          STATUS_KEY                            TSN_USED_BUF
     TSN_USED_NAME                         WRITE_TSN_USED                        CLOSE_TSN_USED
     OPEN_STATUS                           BACKUP_NAME                           BACKUP_SN
     WRITE_STATUS                          READ_STATUS                           CLOSE_STATUS
r    ARCHIVE_NAME                          PRIME_DUAL_BUF                   r    PRIME_FILE
r    DUAL_FILE                             OPEN_PRIME_DUAL                       READ_PRIME_DUAL
     WRITE_PRIME_DUAL                      CLOSE_PRIME_DUAL                      REBUILD_NAME
     WRITE_REBUILD                         READ_REBUILD                          REBUILD_DIR_KEY
     REBUILD_KEY                           REBUILD_BUF                           OPEN_NODATA_LIST
     NODATA_FILE_NAME                      NODATA_SN                             CLOSE_NODATA_LIST
     WRITE_NODATA_LIST                     NODATA_KEY                            CAT_KEY
     CATALOG_ON                            BREAK_COUNT                           BREAK_TASK
     RESTORE_FROM_TAPE                     CHECK_TAPE                            M$DISK_OUT
     M$DEL_LIST                            M$LO                                  M$OPEN_PRIME_DUAL_PACK
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:109  


        1        1        /*M* FLM$MOVE - EFT CHECK command */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* THI=1,PLM=3 */
        8        8        FLM$MOVE: PROC( COMMAND ) ALTRET;

      8 18 000000   000000 700200 xent  FLM$MOVE     TSX0  ! X66_AUTO_1
        18 000001   000140 000001                    ZERO    96,1

        9        9        /*F*  NAME: FLM$MOVE
       10       10              PURPOSE: Perform EFT CHECK command.
       11       11        */
       12       12
       13       13        /***
       14       14         *** Parameters
       15       15         ***/
       16       16
       17       17    1   DCL COMMAND SBIN;
       18       18
       19       19        /***
       20       20         *** INCLUDE
       21       21         ***/
       22       22
       23       23        %INCLUDE B_ERRORS_C;
       24     1150        %INCLUDE CP_6;
       25     6709        %INCLUDE CP_6_SUBS;
       26     7249        %INCLUDE FLE_DATA_R;
       27    13200        %INCLUDE FLI_DATA_R;
       28    14614        %INCLUDE FLN_DATA_R;
       29    15351        %INCLUDE FLS_DATA_R;
       30    17151        %INCLUDE FLW_DATA_R;
       31    17165        %INCLUDE FM$FIT;
       32    17386        %INCLUDE FM$GRAN;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:110  
       33    17455
       34    17456        /***
       35    17457         *** ENTRY
       36    17458         ***/
       37    17459
       38    17460    1   DCL FLC$CRIT_CHECK ENTRY(2) ALTRET;
       39    17461    1   DCL FLC$TAPE_IO_INIT ENTRY;
       40    17462    1   DCL FLC$TAPE_OPEN_NEXT ENTRY(3) ALTRET;
       41    17463    1   DCL FLC$TAPE_READ_NEXT ENTRY(3) ALTRET;
       42    17464    1   DCL FLC$TAPE_CLOSE_NEXT ENTRY(1) ALTRET;
       43    17465    1   DCL FLC$TAPE_CLOSE ENTRY(1) ALTRET;
       44    17466    1   DCL FLI$ALLOC ENTRY(2);
       45    17467    1   DCL FLI$ALLOC_BUF ENTRY(2);
       46    17468    1   DCL FLI$DISK_READ ENTRY(5) ALTRET;
       47    17469    1   DCL FLI$DISK_READ_FILE_INIT ENTRY(1);
       48    17470    1   DCL FLI$DISK_READ_INIT ENTRY(1);
       49    17471    1   DCL FLI$RETURN_BUF ENTRY(1);
       50    17472    1   DCL FLI$RPT_ERR ENTRY(5);
       51    17473    1   DCL FLI$TSN_USED ENTRY(2) ALTRET;
       52    17474    1   DCL FLN$DISK_CLOSE_ALL ENTRY;
       53    17475    1   DCL FLN$DISK_CLOSE_NEXT ENTRY(1);
       54    17476    1   DCL FLN$DISK_IO_INIT ENTRY;
       55    17477    1   DCL FLN$DISK_OPEN_NEXT ENTRY(5) ALTRET;
       56    17478    1   DCL FLP$WR_FILE_INFO ENTRY(9) ALTRET;
       57    17479    1   DCL FLS$FILE_PACKER ENTRY(10) ALTRET;
       58    17480    1   DCL FLS$FILE_PACKER_INIT ENTRY;
       59    17481    1   DCL FLS$FILE_PACKER_FIN ENTRY(1) ALTRET;
       60    17482    1   DCL FLS$SCRUB ENTRY(1);
       61    17483    1   DCL XSF$LOCCODP ENTRY(2) ALTRET;
       62    17484    1   DCL XSF$LOCCODE ENTRY(2) ALTRET;
       63    17485    1   DCL FLI$BUILD_$$EFT ENTRY(1) ALTRET;
       64    17486    1   DCL FLI$NUMFREEGRANS ENTRY(3) ALTRET;
       65    17487
       66    17488        /***
       67    17489         *** SYMREF
       68    17490         ***/
       69    17491
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:111  
       70    17492    1   DCL BREAK_COUNT SBIN SYMREF;
       71    17493    1   DCL BREAK_TASK CHAR(18) SYMREF;
       72    17494    1   DCL RESTORE_FROM_TAPE BIT(1) SYMREF;
       73    17495    1   DCL CHECK_TAPE BIT(1) SYMREF;
       74    17496
       75    17497        /***
       76    17498         *** DCB
       77    17499         ***/
       78    17500
       79    17501    1   DCL M$DISK_OUT DCB;
       80    17502    1   DCL M$DEL_LIST DCB;
       81    17503    1   DCL M$LO DCB;
       82    17504    1   DCL M$OPEN_PRIME_DUAL_PACK DCB;
       83    17505
       84    17506        /***
       85    17507         *** STATIC
       86    17508         ***/
       87    17509
       88    17510    1   DCL 1 DEL_LIST_REC STATIC ALIGNED,
       89    17511    1         2 VLP_SN ALIGNED,
       90    17512    1           3 NUM# UBIN WORD INIT(1),
       91    17513    1           3 SN#(0:0) CHAR(6),
       92    17514    1           3 * CHAR(2) INIT(' '),
       93    17515    1         2 ACCT CHAR(8) ALIGNED,
       94    17516    1         2 NAME# ALIGNED,
       95    17517    1           3 L UBIN BYTE CALIGNED,
       96    17518    1           3 C CHAR(31),
       97    17519    1         2 SN CHAR (6),
       98    17520    1         2 CSN CHAR(6),
       99    17521    1         2 RES CHAR(4) CALIGNED,
      100    17522    1         2 TO_ACCT CHAR(8) CALIGNED,
      101    17523    1         2 TO_SN CHAR(8) CALIGNED,
      102    17524    1         2 * BIT(18) CALIGNED,
      103    17525    1         2 CFSN SBIN ALIGNED,
      104    17526    1         2 FSN UBIN(16) HALIGNED,
      105    17527    1         2 INACTIVATE BIT(1),
      106    17528    1         2 * BIT(19) INIT('0'B),
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:112  
      107    17529
      108    17530    1         2 TIME UBIN;
      109    17531
      110    17532    1   DCL 1 FILE_DISP_REC STATIC,
      111    17533    1         2 * CHAR(1) INIT(' '),
      112    17534    1         2 NBR CHAR(5),
      113    17535    1         2 WHAT CHAR(10),
      114    17536    1         2 DISP CHAR(11);
      115    17537
      116    17538        %VLP_SN( FPTN=SOURCE_TAPE_SN,
      117    17539                 N=1 );
      118    17552        %VLP_ACCT( FPTN=SKIP_ACCT );
      119    17565        %VLP_ACCT( FPTN=TO_DISK_ACCT );
      120    17578        %VLP_ACCT( FPTN=VID_ACCT );
      121    17591        %VLP_SN( FPTN=TO_DISK_SN,
      122    17592                 N=1 );
      123    17605        %VLP_NAME( FPTN=TO_DISK_NAME,
      124    17606                   L=31 );
      125    17633        %VLP_SN( FPTN=MAD_SN,
      126    17634                   N=1,
      127    17635                   STCLASS=STATIC );
      128    17648    1   DCL GRANULE_NBR SBIN INIT(0) STATIC;    /* Granule number to read             */
      129    17649        %LIST;
      130    17650        %FM$VID( FM$VID=VIDBUF,
      131    17651                 BASED="STATIC" );
             17652    1   DCL 1 FM$VID BASED ALIGNED,2 ID CHAR(4),2 INSTID BIT(36),2 VSN UBIN,2 PSN CHAR(6),2
             17652            VOLCNT UBIN HALF UNAL,2 SYSSIZE UBIN,2 SYSDIRDA
             17653    1  UBIN WORD,2 INITTIME UBIN,2 SECTSTRT(0:25)UBIN,2 MIRROR ALIGNED,3 C CHAR(8)CALIGNED,
             17653            3 UTS UBIN ALIGNED,3 STATE(0:1)UBIN(6)UNAL,3 *
             17654    1  BIT(24),2 *(0:153)UBIN,2 DGT(0:63),3 FGRAN UBIN(18)UNAL,3 LGRAN UBIN(18)UNAL,2 DTT(0
             17654            :63)UBIN(18),2 DT(0:63)REDEF DTT,3 CYL UBIN(10)
             17655    1  UNAL,3 HD UBIN(8)UNAL,3 * BIT(18),2 SNLIST(0:175),3 VSN,4 S UBIN BYTE UNAL,4 N UBIN(
             17655            27)UNAL,3 SIZE UBIN,3 TYPE CHAR(8);
      132    17657        %PLIST;
      133    17658
      134    17659        /***
      135    17660         *** AUTO
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:113  
      136    17661         ***/
      137    17662
      138    17663    1   DCL BIX SBIN AUTO;
      139    17664    1   DCL CODE SBIN AUTO;
      140    17665    1   DCL CODE$ PTR AUTO;
      141    17666    1   DCL CODE04$ PTR AUTO;
      142    17667    1   DCL DISK_CODE06$ PTR AUTO;
      143    17668    1   DCL TAPE_CODE04$ PTR AUTO;
      144    17669    1   DCL DISK_CODE04$ PTR AUTO;
      145    17670    1   DCL SOURCE_CODE$ PTR AUTO;
      146    17671    1   DCL SOURCE_DCB$ PTR AUTO;
      147    17672    1   DCL FIT$ PTR AUTO;
      148    17673    1   DCL 1 FPARAM_ DALIGNED AUTO,
      149    17674    1         2 BOUND UBIN(20) UNAL,
      150    17675    1         2 * BIT(16) UNAL,
      151    17676    1         2 PTR$ PTR;
      152    17677    1   DCL 1 ERR AUTO,
      153    17678    1         2 * BIT(12) UNAL,
      154    17679    1         2 * BIT(6) UNAL,
      155    17680    1         2 * BIT(1) UNAL,
      156    17681    1         2 CODE UBIN(14) UNAL,
      157    17682    1         2 * UBIN(3) UNAL;
      158    17683    1   DCL 1 SAVE_ERR AUTO,
      159    17684    1         2 * BIT(12) UNAL,
      160    17685    1         2 * BIT(6) UNAL,
      161    17686    1         2 * BIT(1) UNAL,
      162    17687    1         2 CODE UBIN(14) UNAL,
      163    17688    1         2 * UBIN(3) UNAL;
      164    17689    1   DCL NBR_GRANS_TO_READ SBIN AUTO;
      165    17690    1   DCL SOURCE_FILE_TYPE SBIN AUTO;
      166    17691    1   DCL DEST_FILE_TYPE SBIN AUTO;
      167    17692    1   DCL SAVE_DCB$ PTR AUTO;
      168    17693    1   DCL 1 SAVE_FIT_ DALIGNED AUTO,
      169    17694    1         2 * BIT(36),
      170    17695    1         2 PTR$ PTR;
      171    17696    1   DCL 1 SAVE_AD_FD_FIT_ DALIGNED AUTO,
      172    17697    1         2 * BIT(36),
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:114  
      173    17698    1         2 PTR$ PTR;
      174    17699    1   DCL 1 DISK_FIT_ DALIGNED AUTO,
      175    17700    1         2 * BIT(36),
      176    17701    1         2 PTR$ PTR;
      177    17702    1   DCL 1 MODIFIED_FIT_ DALIGNED AUTO,
      178    17703    1         2 BOUND UBIN(20) UNAL,
      179    17704    1         2 * BIT(16) UNAL,
      180    17705    1         2 PTR$ PTR;
      181    17706    1   DCL SAVE_SN CHAR(6) AUTO;
      182    17707    1   DCL SAVE_FSN SBIN AUTO;
      183    17708    1   DCL SAVE_DISK_OPTION_DIR BIT(1) AUTO;
      184    17709    1   DCL GOING_TO_DEST BIT(1) AUTO;
      185    17710    1   DCL FIT_UPDATE BIT(1) AUTO;        /* Flag indicating only FIT was updated    */
      186    17711    1   DCL 1 BUF_ DALIGNED AUTO,
      187    17712    1         2 * BIT(36),
      188    17713    1         2 PTR$ PTR;
      189    17714    1   DCL ARS SBIN ALIGNED AUTO;
      190    17715    1   DCL OLD_SN CHAR(6) AUTO;
      191    17716    1   DCL VSN CHAR(6) AUTO;              /* Volume serial number used in DUALing    */
      192    17717    1   DCL USE_TSN_USED BIT(1) AUTO;
      193    17718    1   DCL SET_NBR SBIN AUTO;
      194    17719    1   DCL SOURCE_UTS UBIN WORD;
      195    17720    1   DCL DEST_UTS UBIN WORD;
      196    17721    1   DCL TEMP_U UBIN WORD AUTO;
      197    17722    1   DCL TEMP_S SBIN WORD AUTO;
      198    17723    1   DCL M$DISK_OUT$ PTR AUTO;
      199    17724    1   DCL M$DISK_IN$ PTR AUTO;
      200    17725    1   DCL DISK_KEY SBIN WORD AUTO;
      201    17726    1   DCL NBR_CONSEC_GRANS SBIN AUTO;
      202    17727    1   DCL DCB_NBR UBIN  AUTO;
      203    17728    1   DCL DCB# UBIN WORD AUTO;
      204    17729    1   DCL NBR_DEL_FILES SBIN AUTO;
      205    17730    1   DCL SOURCE SBIN AUTO;
      206    17731    1   DCL DEST SBIN AUTO;
      207    17732    1   DCL PR_DEV_LT BIT(1) AUTO; /* Print routine device flags, true=LT, false=DP   */
      208    17733    1   DCL ABORT BIT(1) AUTO ALIGNED;     /* Action flag - set by FLS$FILEPACKER     */
      209    17734    1   DCL FIT_ONLY_SAVED BIT(1) AUTO ALIGNED; /* Flag indicating only FIT was saved */
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:115  
      210    17735    1   DCL FIT_ONLY_RSTRD BIT(1) AUTO;    /* Flag indicating only FIT was restored   */
      211    17736    1   DCL ANY_FILES_FOUND BIT(1) AUTO;
      212    17737
      213    17738        /***
      214    17739         *** FPTs
      215    17740         ***/
      216    17741
      217    17742        %FPT_OPEN( FPTN=REPLACE_AD_OR_FD,
      218    17743                   DCB=M$DISK_OUT,
      219    17744                   RES='DP',
      220    17745                   SN=TO_DISK_SN,
      221    17746                   ACCT=TO_DISK_ACCT,
      222    17747                   NAME=ERASE,
      223    17748                   FUN=CREATE,
      224    17749                   ASN=DEVICE,
      225    17750                   SCRUB=YES,
      226    17751                   REASSIGN=NO,
      227    17752                   STCLASS=STATIC );
      228    17861
      229    17862        %FPT_OPEN( FPTN=GET_AD_OR_FD,
      230    17863                   DCB=M$DISK_OUT,
      231    17864                   RES='DP',
      232    17865                   SN=TO_DISK_SN,
      233    17866                   ACCT=TO_DISK_ACCT,
      234    17867                   NAME=ERASE,
      235    17868                   FUN=IN,
      236    17869                   ASN=DEVICE,
      237    17870                   SCRUB=YES,
      238    17871                   REASSIGN=NO,
      239    17872                   STCLASS=STATIC );
      240    17981
      241    17982        %VLP_SN (FPTN = VLP_SN,
      242    17983                 N= 1,
      243    17984                 SN = ' ',
      244    17985                 STCLASS = STATIC);
      245    17998
      246    17999        %VLP_NAME (FPTN = DELETE_FILE_NAME,
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:116  
      247    18000                   NAME = '*DELETED_LIST',
      248    18001                   STCLASS = CONSTANT );
      249    18028
      250    18029        %FPT_OPEN (FPTN = OPEN_DELETE_LIST,
      251    18030                   DCB = M$DEL_LIST,
      252    18031                   ASN = FILE,
      253    18032                   FUN = CREATE,
      254    18033                   ORG = INDEXED,
      255    18034                   ACS = DIRECT,
      256    18035                   KEYX = 0,
      257    18036                   KEYL = 52,
      258    18037                   XTNSIZE = 20,
      259    18038                   CTG = YES,
      260    18039                   NAME = DELETE_FILE_NAME,
      261    18040                   STCLASS = STATIC );
      262    18149
      263    18150        %FPT_OPEN( FPTN=DISK_REOPEN,
      264    18151                   RES='DP',
      265    18152                   SN=DISK_SN,
      266    18153                   NXTF=NO,
      267    18154                   THISF=YES,
      268    18155                   ASN=FILE,
      269    18156                   ACS=BLOCK,
      270    18157                   FUN=UPDATE,
      271    18158                   SHARE=IN,
      272    18159                   STCLASS="STATIC SYMDEF" );
      273    18268
      274    18269        %FPT_WRITE (FPTN = WRITE_DELETE_LIST,
      275    18270                    BUF = DEL_LIST_REC,
      276    18271                    DCB = M$DEL_LIST,
      277    18272                    ONEWKEY = YES,
      278    18273                    STCLASS = STATIC );
      279    18304
      280    18305        %FPT_PFIL( FPTN = PFIL_DELETE_LIST,
      281    18306                   DCB = M$DEL_LIST,
      282    18307                   BOF = YES );
      283    18322
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:117  
      284    18323        %FPT_READ( FPTN = READ_DELETE_LIST,
      285    18324                   DCB = M$DEL_LIST,
      286    18325                   BUF = DEL_LIST_REC );
      287    18364
      288    18365        %FPT_WRITE( FPTN = REWRITE_DELETE_LIST,
      289    18366                    DCB = M$DEL_LIST,
      290    18367                    REWRITE = YES,
      291    18368                    BUF = DEL_LIST_REC );
      292    18399
      293    18400        %FPT_CLOSE (FPTN = CLOSE_DELETE_LIST,
      294    18401                    DCB = M$DEL_LIST,
      295    18402                    DISP = SAVE,
      296    18403                    STCLASS = CONSTANT );
      297    18445
      298    18446        %FPT_OPEN( FPTN = OPEN_BLOCK,
      299    18447                   DCB = M$DISK_OUT,
      300    18448                   ASN = FILE,
      301    18449                   ACS = BLOCK,
      302    18450                   FUN = IN,
      303    18451                   THISF = YES,
      304    18452                   NXTF = YES,
      305    18453                   ANYF = YES,
      306    18454                   SN = DEL_LIST_REC.VLP_SN,
      307    18455                   ACCT = DEL_LIST_REC.ACCT,
      308    18456                   NAME = DEL_LIST_REC.NAME# );
      309    18565
      310    18566        %FPT_WRITE( FPTN = WRITE_FILE_DISP_REC,
      311    18567                    DCB=M$LO,
      312    18568                    BUF=FILE_DISP_REC );
      313    18599
      314    18600        %FPT_OPEN( FPTN=CLEANUP_ACCT,
      315    18601                   DCB=M$DISK_OUT,
      316    18602                   RES='DP',
      317    18603                   SN=DEL_LIST_REC.VLP_SN,
      318    18604                   ACCT=DEL_LIST_REC.ACCT,
      319    18605                   NAME=ERASE,
      320    18606                   FUN=IN,
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:118  
      321    18607                   ASN=DEVICE,
      322    18608                   DELETE=YES,
      323    18609                   SCRUB=YES,
      324    18610                   FPARAM=NIL,
      325    18611                   IFPARAM=NIL,
      326    18612                   REASSIGN=NO,
      327    18613                   EXPIRE=0,
      328    18614                   STCLASS="STATIC SYMDEF" );
      329    18723
      330    18724        %FPT_MADMUCK( FPTN=DEL_ACCT_FROM_MAD,
      331    18725                      DELETE = YES,
      332    18726                      ACCT=DEL_LIST_REC.ACCT,
      333    18727                      SN=DEL_LIST_REC.VLP_SN );
      334    18743
      335    18744        %FPT_MADMUCK( FPTN=ADD_ACCT_TO_MAD,
      336    18745                      WRITE=YES,
      337    18746                      ACCT=DEL_LIST_REC.TO_ACCT,
      338    18747                      SN=TO_DISK_SN,
      339    18748                      STCLASS=STATIC );
      340    18764
      341    18765        %FPT_MADMUCK( FPTN=GET_PSN_FROM_MAD,
      342    18766                      READ=YES,
      343    18767                      ACCT=DEL_LIST_REC.ACCT,
      344    18768                      SN=MAD_SN,
      345    18769                      STCLASS=STATIC );
      346    18785
      347    18786        %FPT_OPEN( FPTN=OPEN_DP,
      348    18787                   PFMT=VECTOR,
      349    18788                   RES='DP',
      350    18789                   DCB=M$STATUS,
      351    18790                   ASN=DEVICE,
      352    18791                   ACCT=VID_ACCT,
      353    18792                   FUN=IN,
      354    18793                   STCLASS=STATIC );
      355    18902
      356    18903        %FPT_CLOSE( FPTN=CLOSE_DP,
      357    18904                    DCB=M$STATUS,
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:119  
      358    18905                    STCLASS=STATIC );
      359    18947
      360    18948        %FPT_READ( FPTN=READ_VID,
      361    18949                   DCB=M$STATUS,
      362    18950                   BUF=VIDBUF,
      363    18951                   KEYS=YES,
      364    18952                   KEY=GRANULE_NBR,
      365    18953                   STCLASS=STATIC );
      366    18992
      367    18993        %FPT_REM (FPTN=FPT_REM);
      368    19007
      369    19008        %FPT_REW( FPTN=REWIND_TAPE );
      370    19023
      371    19024        /***
      372    19025         *** CONSTANT
      373    19026         ***/
      374    19027
      375    19028    1   DCL NO_LEADING_5_ZEROS BIT(9) CONSTANT CALIGNED INIT( %MVZB5 );
      376    19029
      377    19030        /***
      378    19031         *** BASED
      379    19032         ***/
      380    19033
      381    19034        %F$DCB( STCLASS="BASED(M$DISK_OUT$)" );
      382    19091        %FM$GRAN;
      383    19095        %B$TCB( STCLASS="BASED(B$TCB$)" );
      384    19098        %B$ALT;
      385    19106        %FM$FIT(BASED="BASED(FIT$)");
      386    19109        %CODE03( BASED="BASED(CODE$)" );
      387    19116        %CODE04( BASED="BASED(CODE$)" );
      388    19124        %CODE05( BASED="BASED(CODE$)" );
      389    19127        %CODE06( BASED="BASED(CODE$)" );
      390    19131        %CODE14( BASED="BASED(CODE$)" );
      391    19141    1   DCL 1 ONE_GRAN BASED ALIGNED,
      392    19142    1         2 *(0:1023) UBIN WORD;
      393    19143
      394    19144        /***
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:120  
      395    19145         *** EQUs
      396    19146         ***/
      397    19147
      398    19148        %EQU TAPE@ = 0;
      399    19149        %EQU DISK@ = 1;
      400    19150        %EQU NULL@ = 2;
      401    19151
      402    19152        /***************************************/
      403    19153
      404    19154        /***
      405    19155         *** Make initialization calls.  Note that FLC$TAPE_IO_INIT must be
      406    19156         *** called after FLI$ALLOC_BUF since the tape buffer could grow over
      407    19157         *** the SAVE_FIT if FLI$ALLOC_BUF was called after FLC$TAPE_IO_INIT.
      408    19158         ***/
      409    19159
      410    19160    1      CALL FLP$WR_FILE_INFO;

  19160 18 000002   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 000003   000000 701000 xent               TSX1    FLP$WR_FILE_INFO
        18 000004   000000 011000                    NOP     0

      411    19161
      412    19162    2      DO CASE( COMMAND );

  19162 18 000005   200003 470500                    LDP0    @COMMAND,,AUTO
        18 000006   000000 235100                    LDA     0,,PR0
        18 000007   000057 115007                    CMPA    47,DL
        18 000010   000012 602005 18                 TNC     s:19162+5,AL
        18 000011   000155 710000 18                 TRA     s:19200
        18 000012   000155 710000 18                 TRA     s:19200
        18 000013   000155 710000 18                 TRA     s:19200
        18 000014   000155 710000 18                 TRA     s:19200
        18 000015   000126 710000 18                 TRA     s:19186
        18 000016   000155 710000 18                 TRA     s:19200
        18 000017   000155 710000 18                 TRA     s:19200
        18 000020   000071 710000 18                 TRA     s:19164
        18 000021   000155 710000 18                 TRA     s:19200
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:121  
        18 000022   000071 710000 18                 TRA     s:19164
        18 000023   000105 710000 18                 TRA     s:19174
        18 000024   000155 710000 18                 TRA     s:19200
        18 000025   000155 710000 18                 TRA     s:19200
        18 000026   000155 710000 18                 TRA     s:19200
        18 000027   000155 710000 18                 TRA     s:19200
        18 000030   000155 710000 18                 TRA     s:19200
        18 000031   000155 710000 18                 TRA     s:19200
        18 000032   000155 710000 18                 TRA     s:19200
        18 000033   000155 710000 18                 TRA     s:19200
        18 000034   000155 710000 18                 TRA     s:19200
        18 000035   000155 710000 18                 TRA     s:19200
        18 000036   000155 710000 18                 TRA     s:19200
        18 000037   000155 710000 18                 TRA     s:19200
        18 000040   000155 710000 18                 TRA     s:19200
        18 000041   000071 710000 18                 TRA     s:19164
        18 000042   000071 710000 18                 TRA     s:19164
        18 000043   000155 710000 18                 TRA     s:19200
        18 000044   000155 710000 18                 TRA     s:19200
        18 000045   000155 710000 18                 TRA     s:19200
        18 000046   000077 710000 18                 TRA     s:19169
        18 000047   000155 710000 18                 TRA     s:19200
        18 000050   000155 710000 18                 TRA     s:19200
        18 000051   000155 710000 18                 TRA     s:19200
        18 000052   000155 710000 18                 TRA     s:19200
        18 000053   000155 710000 18                 TRA     s:19200
        18 000054   000155 710000 18                 TRA     s:19200
        18 000055   000134 710000 18                 TRA     s:19191
        18 000056   000155 710000 18                 TRA     s:19200
        18 000057   000071 710000 18                 TRA     s:19164
        18 000060   000071 710000 18                 TRA     s:19164
        18 000061   000155 710000 18                 TRA     s:19200
        18 000062   000155 710000 18                 TRA     s:19200
        18 000063   000155 710000 18                 TRA     s:19200
        18 000064   000155 710000 18                 TRA     s:19200
        18 000065   000155 710000 18                 TRA     s:19200
        18 000066   000155 710000 18                 TRA     s:19200
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:122  
        18 000067   000134 710000 18                 TRA     s:19191
        18 000070   000120 710000 18                 TRA     s:19181

      413    19163    2       CASE( %SAVE, %BACKUP, %PURGE, %ARCHIVE_CMD, %OPEN_CREATE, %OPEN_EXTEND);
             19163                /* Generic SAVE */

      414    19164    2         SOURCE = %DISK@;

  19164 18 000071   000001 236007                    LDQ     1,DL
        18 000072   200070 756100                    STQ     SOURCE,,AUTO

      415    19165    2         DEST = %TAPE@;

  19165 18 000073   200071 450100                    STZ     DEST,,AUTO

      416    19166    2         PR_DEV_LT = '1'B;

  19166 18 000074   400000 236003                    LDQ     -131072,DU
        18 000075   200072 756100                    STQ     PR_DEV_LT,,AUTO
        18 000076   000155 710000 18                 TRA     s:19200

      417    19167
      418    19168    2       CASE( %RETRIEVE );

      419    19169    2         SOURCE = %TAPE@;

  19169 18 000077   200070 450100                    STZ     SOURCE,,AUTO

      420    19170    2         DEST = %DISK@;

  19170 18 000100   000001 236007                    LDQ     1,DL
        18 000101   200071 756100                    STQ     DEST,,AUTO

      421    19171    2         PR_DEV_LT = '1'B;

  19171 18 000102   400000 236003                    LDQ     -131072,DU
        18 000103   200072 756100                    STQ     PR_DEV_LT,,AUTO
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:123  
        18 000104   000155 710000 18                 TRA     s:19200

      422    19172
      423    19173    2       CASE( %RESTORE );                   /* Generic RESTORE                    */

      424    19174    2         IF RESTORE_FROM_TAPE

  19174 18 000105   000000 234000 xsym               SZN     RESTORE_FROM_TAPE
        18 000106   000111 605000 18                 TPL     s:19176

      425    19175    2          THEN SOURCE = %TAPE@;

  19175 18 000107   200070 450100                    STZ     SOURCE,,AUTO
        18 000110   000113 710000 18                 TRA     s:19177

      426    19176    2          ELSE SOURCE = %DISK@;

  19176 18 000111   000001 236007                    LDQ     1,DL
        18 000112   200070 756100                    STQ     SOURCE,,AUTO

      427    19177    2         DEST = %DISK@;

  19177 18 000113   000001 236007                    LDQ     1,DL
        18 000114   200071 756100                    STQ     DEST,,AUTO

      428    19178    2         PR_DEV_LT = '1'B;

  19178 18 000115   400000 236003                    LDQ     -131072,DU
        18 000116   200072 756100                    STQ     PR_DEV_LT,,AUTO
        18 000117   000155 710000 18                 TRA     s:19200

      429    19179
      430    19180    2       CASE( %REBUILD );

      431    19181    2         SOURCE = %TAPE@;

  19181 18 000120   200070 450100                    STZ     SOURCE,,AUTO
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:124  

      432    19182    2         DEST = %DISK@;

  19182 18 000121   000001 236007                    LDQ     1,DL
        18 000122   200071 756100                    STQ     DEST,,AUTO

      433    19183    2         PR_DEV_LT = '1'B;

  19183 18 000123   400000 236003                    LDQ     -131072,DU
        18 000124   200072 756100                    STQ     PR_DEV_LT,,AUTO
        18 000125   000155 710000 18                 TRA     s:19200

      434    19184
      435    19185    2       CASE( %CHECK );                     /* Generic CHECK                      */

      436    19186    2         SOURCE = %TAPE@;

  19186 18 000126   200070 450100                    STZ     SOURCE,,AUTO

      437    19187    2         DEST = %NULL@;

  19187 18 000127   000002 236007                    LDQ     2,DL
        18 000130   200071 756100                    STQ     DEST,,AUTO

      438    19188    2         PR_DEV_LT = '1'B;

  19188 18 000131   400000 236003                    LDQ     -131072,DU
        18 000132   200072 756100                    STQ     PR_DEV_LT,,AUTO
        18 000133   000155 710000 18                 TRA     s:19200

      439    19189
      440    19190    2       CASE( %DUAL, %REAL_DUAL );

      441    19191    2         SOURCE = %DISK@;

  19191 18 000134   000001 236007                    LDQ     1,DL
        18 000135   200070 756100                    STQ     SOURCE,,AUTO
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:125  

      442    19192    2         DEST = %DISK@;

  19192 18 000136   200071 756100                    STQ     DEST,,AUTO

      443    19193    2         PR_DEV_LT = '0'B;

  19193 18 000137   200072 450100                    STZ     PR_DEV_LT,,AUTO

      444    19194    2         CROSSED = ' ';

  19194 18 000140   040000 236003                    LDQ     16384,DU
        18 000141   000000 756000 xsym               STQ     CROSSED

      445    19195    2         VID_ACCT.ACCT# = BINASC(0);

  19195 18 000142   000000 235000 19                 LDA     0
        18 000143   000035 236000 xsym               LDQ     B_VECTNIL+29
        18 000144   000226 757000 2                  STAQ    VID_ACCT

      446    19196    2         CALL FLI$ALLOC_BUF( SAVE_AD_FD_FIT_, 1 );

  19196 18 000145   000001 236000 19                 LDQ     1
        18 000146   200125 756100                    STQ     @DISP+2,,AUTO
        18 000147   200030 631500                    EPPR1   SAVE_AD_FD_FIT_,,AUTO
        18 000150   200124 451500                    STP1    @DISP+1,,AUTO
        18 000151   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 000152   000020 631400 xsym               EPPR1   B_VECTNIL+16
        18 000153   000000 701000 xent               TSX1    FLI$ALLOC_BUF
        18 000154   000000 011000                    NOP     0

      447    19197
      448    19198    2       END;

      449    19199
      450    19200    2      DO CASE( DEST );

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:126  
  19200 18 000155   200071 235100                    LDA     DEST,,AUTO
        18 000156   000002 115007                    CMPA    2,DL
        18 000157   000161 602005 18                 TNC     s:19200+4,AL
        18 000160   000177 710000 18                 TRA     s:19207
        18 000161   000163 710000 18                 TRA     s:19202
        18 000162   000167 710000 18                 TRA     s:19204

      451    19201    2       CASE( %TAPE@ );

      452    19202    2         CALL FLS$FILE_PACKER_INIT;

  19202 18 000163   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 000164   000000 701000 xent               TSX1    FLS$FILE_PACKER_INIT
        18 000165   000000 011000                    NOP     0
        18 000166   000177 710000 18                 TRA     s:19207

      453    19203    2       CASE( %DISK@ );

      454    19204    2         CALL FLI$ALLOC_BUF( DISK_FIT_, 1 );

  19204 18 000167   000001 236000 19                 LDQ     1
        18 000170   200125 756100                    STQ     @DISP+2,,AUTO
        18 000171   200032 630500                    EPPR0   DISK_FIT_,,AUTO
        18 000172   200124 450500                    STP0    @DISP+1,,AUTO
        18 000173   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 000174   000020 631400 xsym               EPPR1   B_VECTNIL+16
        18 000175   000000 701000 xent               TSX1    FLI$ALLOC_BUF
        18 000176   000000 011000                    NOP     0

      455    19205    2       END;

      456    19206
      457    19207    2      DO CASE( SOURCE );

  19207 18 000177   200070 235100                    LDA     SOURCE,,AUTO
        18 000200   000002 115007                    CMPA    2,DL
        18 000201   000203 602005 18                 TNC     s:19207+4,AL
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:127  
        18 000202   000325 710000 18                 TRA     s:19250
        18 000203   000230 710000 18                 TRA     s:19218
        18 000204   000205 710000 18                 TRA     s:19209

      458    19208    2       CASE( %DISK@ );

      459    19209    2         DISK_OPEN_NEXT.V.OPER.TEST# = %NO#;

  19209 18 000205   000002 236000 19                 LDQ     2
        18 000206   000044 356000 xsym               ANSQ    DISK_OPEN_NEXT+36

      460    19210    2         CALL FLN$DISK_IO_INIT;

  19210 18 000207   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 000210   000000 701000 xent               TSX1    FLN$DISK_IO_INIT
        18 000211   000000 011000                    NOP     0

      461    19211    2         CALL FLI$DISK_READ_INIT( DEFAULT_GRANS_PER_DISK_BUF );

  19211 18 000212   000003 630400 19                 EPPR0   3
        18 000213   000017 631400 xsym               EPPR1   B_VECTNIL+15
        18 000214   000000 701000 xent               TSX1    FLI$DISK_READ_INIT
        18 000215   000000 011000                    NOP     0

      462    19212    2         CALL M$OPEN( OPEN_DELETE_LIST )

  19212 18 000216   002442 630400 2                  EPPR0   OPEN_DELETE_LIST
        18 000217   450000 713400                    CLIMB   alt,open
        18 000220   410400 401760                    pmme    nvectors=18
        18 000221   000223 702000 18                 TSX2    s:19214
        18 000222   000227 710000 18                 TRA     s:19215+1

      463    19213    3          WHENALTRETURN DO;

      464    19214    3            CALL FLI$RPT_ERR;

  19214 18 000223   000002 631400 xsym               EPPR1   B_VECTNIL+2
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:128  
        18 000224   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 000225   000000 011000                    NOP     0

      465    19215    3            ALTRETURN;

  19215 18 000226   000000 702200 xent               TSX2  ! X66_AALT
        18 000227   000325 710000 18                 TRA     s:19250

      466    19216    3            END;
      467    19217    2       CASE( %TAPE@ );

      468    19218    2         CALL FLI$ALLOC_BUF( SAVE_FIT_, 1 ); /* Get DCB saver                    */

  19218 18 000230   000001 236000 19                 LDQ     1
        18 000231   200125 756100                    STQ     @DISP+2,,AUTO
        18 000232   200026 630500                    EPPR0   SAVE_FIT_,,AUTO
        18 000233   200124 450500                    STP0    @DISP+1,,AUTO
        18 000234   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 000235   000020 631400 xsym               EPPR1   B_VECTNIL+16
        18 000236   000000 701000 xent               TSX1    FLI$ALLOC_BUF
        18 000237   000000 011000                    NOP     0

      469    19219    2         SAVE_DCB$ = SAVE_FIT_.PTR$;

  19219 18 000240   200027 236100                    LDQ     SAVE_FIT_+1,,AUTO
        18 000241   200025 756100                    STQ     SAVE_DCB$,,AUTO

      470    19220    2         CALL FLI$ALLOC_BUF( SAVE_FIT_, 1 );

  19220 18 000242   000001 236000 19                 LDQ     1
        18 000243   200125 756100                    STQ     @DISP+2,,AUTO
        18 000244   200026 630500                    EPPR0   SAVE_FIT_,,AUTO
        18 000245   200124 450500                    STP0    @DISP+1,,AUTO
        18 000246   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 000247   000020 631400 xsym               EPPR1   B_VECTNIL+16
        18 000250   000000 701000 xent               TSX1    FLI$ALLOC_BUF
        18 000251   000000 011000                    NOP     0
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:129  

      471    19221    2         CALL FLC$TAPE_IO_INIT;

  19221 18 000252   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 000253   000000 701000 xent               TSX1    FLC$TAPE_IO_INIT
        18 000254   000000 011000                    NOP     0

      472    19222    2         SAVE_DCB$->F$DCB.DCBNAME.L = 0;   /* So we know this (fake) DCB's size  */

  19222 18 000255   200025 470500                    LDP0    SAVE_DCB$,,AUTO
        18 000256   000004 236000 19                 LDQ     4
        18 000257   000140 356100                    ANSQ    96,,PR0

      473    19223
      474    19224    2         IF COMMAND = %RESTORE

  19224 18 000260   200003 471500                    LDP1    @COMMAND,,AUTO
        18 000261   100000 235100                    LDA     0,,PR1
        18 000262   000011 115007                    CMPA    9,DL
        18 000263   000266 600000 18                 TZE     s:19227
        18 000264   000056 115007                    CMPA    46,DL
        18 000265   000325 601000 18                 TNZ     s:19250

      475    19225    2           OR COMMAND = %REBUILD
      476    19226    3          THEN DO;

      477    19227    3            NODATA_SN.SN#(0) = DISK_DEST_SN.SN#(0); /* Open :NODATA file         */

  19227 18 000266   040000 100400                    MLR     fill='040'O
        18 000267   000001 000006 xsym               ADSC9   DISK_DEST_SN+1           cn=0,n=6
        18 000270   000001 000006 xsym               ADSC9   NODATA_SN+1              cn=0,n=6

      478    19228    3            OPEN_NODATA_LIST.V.RES# = DISK_DEST_RES.NAME;

  19228 18 000271   000001 236000 xsym               LDQ     DISK_DEST_RES+1
        18 000272   000050 756000 xsym               STQ     OPEN_NODATA_LIST+40

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:130  
      479    19229    3            OPEN_NODATA_LIST.V.FUN# = %CREATE#;

  19229 18 000273   003000 236007                    LDQ     1536,DL
        18 000274   000045 552010 xsym               STBQ    OPEN_NODATA_LIST+37,'10'O

      480    19230    3            CALL M$OPEN( OPEN_NODATA_LIST )

  19230 18 000275   000000 630400 xsym               EPPR0   OPEN_NODATA_LIST
        18 000276   450000 713400                    CLIMB   alt,open
        18 000277   410400 401760                    pmme    nvectors=18
        18 000300   000302 702000 18                 TSX2    s:19232
        18 000301   000325 710000 18                 TRA     s:19250

      481    19231    4             WHENALTRETURN DO;

      482    19232    4               IF B$TCB.ALT$->B$ALT.ERR.CODE = %E$NONEWFD

  19232 18 000302   000000 470400 xsym               LDP0    B$TCB$
        18 000303   000000 471500                    LDP1    0,,PR0
        18 000304   100102 236100                    LDQ     66,,PR1
        18 000305   377770 376007                    ANQ     131064,DL
        18 000306   001760 116007                    CMPQ    1008,DL
        18 000307   000321 601000 18                 TNZ     CREATEALT

      483    19233    5                THEN DO;

      484    19234    5                  CALL FLI$BUILD_$$EFT( NODATA_SN.SN#(0) ) ALTRET( CREATEALT );

  19234 18 000310   000005 630400 19                 EPPR0   5
        18 000311   000017 631400 xsym               EPPR1   B_VECTNIL+15
        18 000312   000000 701000 xent               TSX1    FLI$BUILD_$$EFT
        18 000313   000321 702000 18                 TSX2    CREATEALT

      485    19235    5                  CALL M$OPEN( OPEN_NODATA_LIST ) ALTRET( CREATEALT );

  19235 18 000314   000000 630400 xsym               EPPR0   OPEN_NODATA_LIST
        18 000315   450000 713400                    CLIMB   alt,open
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:131  
        18 000316   410400 401760                    pmme    nvectors=18
        18 000317   000321 702000 18                 TSX2    CREATEALT

      486    19236    5                  END;

  19236 18 000320   000325 710000 18                 TRA     s:19250

      487    19237    5                ELSE DO;

  19235 18 000321                       CREATEALT    null
      488    19238    5   CREATEALT:     ;
      489    19239    5                  CALL FLI$RPT_ERR;

  19239 18 000321   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 000322   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 000323   000000 011000                    NOP     0

      490    19240    5                  ALTRETURN;

  19240 18 000324   000000 702200 xent               TSX2  ! X66_AALT

      491    19241    5                  END;
      492    19242    4               END;
      493    19243    3            END;

      494    19244    2       END;

      495    19245
      496    19246        /***
      497    19247         *** If we will be writing to disk, set up disk FPTs.
      498    19248         ***/
      499    19249
      500    19250    1      IF COMMAND = %RETRIEVE THEN TAPE_OPTION.PROTTYPE = %UNPROTECTED;

  19250 18 000325   200003 470500                    LDP0    @COMMAND,,AUTO
        18 000326   000000 235100                    LDA     0,,PR0
        18 000327   000034 115007                    CMPA    28,DL
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:132  
        18 000330   000333 601000 18                 TNZ     s:19252

  19250 18 000331   200000 236003                    LDQ     65536,DU
        18 000332   000001 756000 xsym               STQ     TAPE_OPTION+1

      501    19251
      502    19252    1      IF DEST = %DISK@

  19252 18 000333   200071 235100                    LDA     DEST,,AUTO
        18 000334   000001 115007                    CMPA    1,DL
        18 000335   000450 601000 18                 TNZ     s:19300

      503    19253    2       THEN DO;

      504    19254    2         DISK_WRITE.V.WAIT# = '1'B;

  19254 18 000336   400000 236007                    LDQ     -131072,DL
        18 000337   000010 256000 xsym               ORSQ    DISK_WRITE+8

      505    19255    2         DISK_WRITE.V.EVENT# = 0;

  19255 18 000340   000011 450000 xsym               STZ     DISK_WRITE+9

      506    19256    2         DISK_WRITE.V.DCB# = DCBNUM(M$DISK_OUT);

  19256 18 000341   000000 236007 xsym               LDQ     M$DISK_OUT,DL
        18 000342   000000 620006                    EAX0    0,QL
        18 000343   000010 740000 xsym               STX0    DISK_WRITE+8

      507    19257    2         DISK_CLOSE.V.DCB# = DCBNUM(M$DISK_OUT);

  19257 18 000344   000000 236007 xsym               LDQ     M$DISK_OUT,DL
        18 000345   000000 621006                    EAX1    0,QL
        18 000346   000032 741000 xsym               STX1    DISK_CLOSE+26

      508    19258    2         DISK_OPEN.V.DCB# = DCBNUM(M$DISK_OUT);

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:133  
  19258 18 000347   000000 236007 xsym               LDQ     M$DISK_OUT,DL
        18 000350   000000 622006                    EAX2    0,QL
        18 000351   000044 742000 xsym               STX2    DISK_OPEN+36

      509    19259    2         DISK_OPEN.V.FUN# = %CREATE#;

  19259 18 000352   003000 236007                    LDQ     1536,DL
        18 000353   000045 552010 xsym               STBQ    DISK_OPEN+37,'10'O

      510    19260
      511    19261    2         IF DISK_DEST_SN.SN#(0) ~= ' '

  19261 18 000354   040000 106400                    CMPC    fill='040'O
        18 000355   000001 000006 xsym               ADSC9   DISK_DEST_SN+1           cn=0,n=6
        18 000356   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        18 000357   000363 600000 18                 TZE     s:19263

      512    19262    2          THEN TO_DISK_SN.SN#(0) = DISK_DEST_SN.SN#(0);

  19262 18 000360   040000 100400                    MLR     fill='040'O
        18 000361   000001 000006 xsym               ADSC9   DISK_DEST_SN+1           cn=0,n=6
        18 000362   000231 000006 2                  ADSC9   TO_DISK_SN+1             cn=0,n=6

      513    19263    2         DISK_OPEN.SN_ = VECTOR(TO_DISK_SN);

  19263 18 000363   000006 237000 19                 LDAQ    6
        18 000364   000002 757000 xsym               STAQ    DISK_OPEN+2

      514    19264    2         DISK_OPEN.V.RES# = DISK_DEST_RES.NAME;

  19264 18 000365   000001 236000 xsym               LDQ     DISK_DEST_RES+1
        18 000366   000050 756000 xsym               STQ     DISK_OPEN+40

      515    19265    2         REPLACE_AD_OR_FD.SN_ = DISK_OPEN.SN_;

  19265 18 000367   000002 237000 xsym               LDAQ    DISK_OPEN+2
        18 000370   002254 757000 2                  STAQ    REPLACE_AD_OR_FD+2
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:134  

      516    19266    2         GET_AD_OR_FD.SN_ = DISK_OPEN.SN_;

  19266 18 000371   000002 237000 xsym               LDAQ    DISK_OPEN+2
        18 000372   002346 757000 2                  STAQ    GET_AD_OR_FD+2

      517    19267
      518    19268    2         IF DISK_DEST_ACCT.ACCT# ~= ' '

  19268 18 000373   040000 106400                    CMPC    fill='040'O
        18 000374   000000 000010 xsym               ADSC9   DISK_DEST_ACCT           cn=0,n=8
        18 000375   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        18 000376   000402 600000 18                 TZE     s:19270

      519    19269    2          THEN TO_DISK_ACCT = DISK_DEST_ACCT;

  19269 18 000377   000000 100400                    MLR     fill='000'O
        18 000400   000000 000010 xsym               ADSC9   DISK_DEST_ACCT           cn=0,n=8
        18 000401   000224 000010 2                  ADSC9   TO_DISK_ACCT             cn=0,n=8

      520    19270    2         DISK_OPEN.ACCT_ = VECTOR(TO_DISK_ACCT);

  19270 18 000402   000010 237000 19                 LDAQ    8
        18 000403   000024 757000 xsym               STAQ    DISK_OPEN+20

      521    19271
      522    19272    2         REPLACE_AD_OR_FD.ACCT_ = VECTOR(TO_DISK_ACCT);

  19272 18 000404   000010 237000 19                 LDAQ    8
        18 000405   002276 757000 2                  STAQ    REPLACE_AD_OR_FD+20

      523    19273    2         GET_AD_OR_FD.ACCT_ = VECTOR(TO_DISK_ACCT);

  19273 18 000406   000010 237000 19                 LDAQ    8
        18 000407   002370 757000 2                  STAQ    GET_AD_OR_FD+20

      524    19274
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:135  
      525    19275    2         DISK_OPEN.NAME_ = VECTOR(TO_DISK_NAME);

  19275 18 000410   000012 237000 19                 LDAQ    10
        18 000411   000006 757000 xsym               STAQ    DISK_OPEN+6

      526    19276    2         DISK_CLOSE.SN_ = VECTOR(SOURCE_TAPE_SN);

  19276 18 000412   000014 237000 19                 LDAQ    12
        18 000413   000002 757000 xsym               STAQ    DISK_CLOSE+2

      527    19277
      528    19278    3         DO CASE( TAPE_OPTION.PROTTYPE );

  19278 18 000414   000001 236000 xsym               LDQ     TAPE_OPTION+1
        18 000415   000041 772000                    QRL     33
        18 000416   000004 116007                    CMPQ    4,DL
        18 000417   000421 602006 18                 TNC     s:19278+5,QL
        18 000420   000443 710000 18                 TRA     s:19293
        18 000421   000443 710000 18                 TRA     s:19293
        18 000422   000425 710000 18                 TRA     s:19280
        18 000423   000432 710000 18                 TRA     s:19283
        18 000424   000440 710000 18                 TRA     s:19287

      529    19279    3          CASE( %PROTECTED );

      530    19280    3            IF DISK_DEST_EXIST = 0

  19280 18 000425   000000 235000 xsym               LDA     DISK_DEST_EXIST
        18 000426   000443 601000 18                 TNZ     s:19293

      531    19281    3             THEN DISK_DEST_EXIST = %ERROR#;

  19281 18 000427   000001 235007                    LDA     1,DL
        18 000430   000000 755000 xsym               STA     DISK_DEST_EXIST
        18 000431   000443 710000 18                 TRA     s:19293

      532    19282    3          CASE( %UNPROTECTED );
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:136  

      533    19283    3            IF COMMAND = %DUAL   /* Honor TO/OVER specif. for OPEN UPDATE as     */

  19283 18 000432   000000 235100                    LDA     0,,PR0
        18 000433   000043 115007                    CMPA    35,DL
        18 000434   000443 600000 18                 TZE     s:19293

      534    19284    3             THEN;               /* UNPROTECT does not apply to a dest. file     */
      535    19285    3             ELSE DISK_DEST_EXIST = %NEWFILE#;

  19285 18 000435   000003 235007                    LDA     3,DL
        18 000436   000000 755000 xsym               STA     DISK_DEST_EXIST
        18 000437   000443 710000 18                 TRA     s:19293

      536    19286    3          CASE( %INCREMENTAL );

      537    19287    3            DISK_DEST_EXIST = %NEWFILE#;

  19287 18 000440   000003 235007                    LDA     3,DL
        18 000441   000000 755000 xsym               STA     DISK_DEST_EXIST
        18 000442   000443 710000 18                 TRA     s:19293

      538    19288                                      /* But we must check as files are encountered   */
      539    19289    3          CASE( ELSE );

      540    19290         /* Leave DISK_DEST_EXIST to default value set by ON, OVER, or TO specification */
      541    19291    3          END;

      542    19292
      543    19293    2         DISK_OPEN.V.EXIST# = DISK_DEST_EXIST;

  19293 18 000443   000000 236000 xsym               LDQ     DISK_DEST_EXIST
        18 000444   000007 736000                    QLS     7
        18 000445   000044 676000 xsym               ERQ     DISK_OPEN+36
        18 000446   000600 376007                    ANQ     384,DL
        18 000447   000044 656000 xsym               ERSQ    DISK_OPEN+36

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:137  
      544    19294    2         END;

      545    19295
      546    19296        /***
      547    19297         *** Handle special DUAL operations.
      548    19298         ***/
      549    19299
      550    19300    1      IF COMMAND = %REAL_DUAL

  19300 18 000450   000000 235100                    LDA     0,,PR0
        18 000451   000055 115007                    CMPA    45,DL
        18 000452   001221 601000 18                 TNZ     s:19453

      551    19301    2       THEN DO;

      552    19302    2         IF TAPE_OPTION.PROTTYPE ~= %INCREMENTAL

  19302 18 000453   000001 236000 xsym               LDQ     TAPE_OPTION+1
        18 000454   700000 376003                    ANQ     -32768,DU
        18 000455   300000 116003                    CMPQ    98304,DU
        18 000456   001004 600000 18                 TZE     s:19397

      553    19303    3          THEN DO;                         /* DUAL ALL                           */

      554    19304    3            OPEN_PRIME_DUAL.SN_ = VECTOR(TO_DISK_SN);

  19304 18 000457   000006 237000 19                 LDAQ    6
        18 000460   000002 757000 xsym               STAQ    OPEN_PRIME_DUAL+2

      555    19305    3            OPEN_PRIME_DUAL.V.RES# = DISK_DEST_RES.NAME;

  19305 18 000461   000001 236000 xsym               LDQ     DISK_DEST_RES+1
        18 000462   000050 756000 xsym               STQ     OPEN_PRIME_DUAL+40

      556    19306    3            OPEN_PRIME_DUAL.V.OPER.NXTA# = '1'B;

  19306 18 000463   010000 236007                    LDQ     4096,DL
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:138  
        18 000464   000044 256000 xsym               ORSQ    OPEN_PRIME_DUAL+36

      557    19307    3            OPEN_PRIME_DUAL.V.OPER.NXTF# = '1'B;

  19307 18 000465   004000 236007                    LDQ     2048,DL
        18 000466   000044 256000 xsym               ORSQ    OPEN_PRIME_DUAL+36

      558    19308    3            OPEN_PRIME_DUAL.NAME_ = VECTOR ( ERASE );

  19308 18 000467   000016 237000 19                 LDAQ    14
        18 000470   000006 757000 xsym               STAQ    OPEN_PRIME_DUAL+6

      559    19309    3            OPEN_PRIME_DUAL.V.FUN# = %IN#;

  19309 18 000471   002000 236007                    LDQ     1024,DL
        18 000472   000045 552010 xsym               STBQ    OPEN_PRIME_DUAL+37,'10'O

      560    19310    3            OPEN_PRIME_DUAL.ACCT_ = VECTOR ( BACKUP_ACCT );

  19310 18 000473   000020 237000 19                 LDAQ    16
        18 000474   000024 757000 xsym               STAQ    OPEN_PRIME_DUAL+20

      561    19311    3            CALL M$OPEN ( OPEN_PRIME_DUAL )

  19311 18 000475   000000 630400 xsym               EPPR0   OPEN_PRIME_DUAL
        18 000476   450000 713400                    CLIMB   alt,open
        18 000477   410400 401760                    pmme    nvectors=18
        18 000500   000506 702000 18                 TSX2    s:19317

      562    19312    4             WHENRETURN DO;

      563    19313    4               CALL FLI$RPT_ERR( E_NOT_SCRATCH_PACK );

  19313 18 000501   000022 630400 19                 EPPR0   18
        18 000502   000017 631400 xsym               EPPR1   B_VECTNIL+15
        18 000503   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 000504   000000 011000                    NOP     0
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:139  

      564    19314    4               GOTO CLSALT;

  19314 18 000505   000642 710000 18                 TRA     CLSALT

      565    19315    4               END;
      566    19316    4             WHENALTRETURN DO;

      567    19317    4               OPEN_PRIME_DUAL.V.INITZ.SCRUB# = '0'B;

  19317 18 000506   000023 236000 19                 LDQ     19
        18 000507   000044 356000 xsym               ANSQ    OPEN_PRIME_DUAL+36

      568    19318    4               OPEN_PRIME_DUAL.ACCT_ = VECTOR(NIL);

  19318 18 000510   000024 237000 19                 LDAQ    20
        18 000511   000024 757000 xsym               STAQ    OPEN_PRIME_DUAL+20

  19318 18 000512                       KEEP_OPENING null
      569    19319    4   KEEP_OPENING: ;
      570    19320    5               DO SELECT ( B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.CODE );

  19320 18 000512   000000 470400 xsym               LDP0    B$TCB$
        18 000513   000000 471500                    LDP1    0,,PR0
        18 000514   100102 236100                    LDQ     66,,PR1
        18 000515   000003 772000                    QRL     3
        18 000516   037777 376007                    ANQ     16383,DL
        18 000517   000102 116007                    CMPQ    66,DL
        18 000520   000540 602000 18                 TNC     s:19327
        18 000521   000526 600000 18                 TZE     s:19322
        18 000522   000003 736000                    QLS     3
        18 000523   001750 116007                    CMPQ    1000,DL
        18 000524   000540 601000 18                 TNZ     s:19327
        18 000525   000537 710000 18                 TRA     s:19325

      571    19321    5                  SELECT ( %E$NOKEY );

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:140  
      572    19322    5                  CALL M$OPEN ( OPEN_PRIME_DUAL ) ALTRET ( KEEP_OPENING );

  19322 18 000526   000000 630400 xsym               EPPR0   OPEN_PRIME_DUAL
        18 000527   450000 713400                    CLIMB   alt,open
        18 000530   410400 401760                    pmme    nvectors=18
        18 000531   000512 702000 18                 TSX2    KEEP_OPENING

      573    19323    5                  CALL FLI$RPT_ERR( E_NOT_SCRATCH_PACK );

  19323 18 000532   000022 630400 19                 EPPR0   18
        18 000533   000017 631400 xsym               EPPR1   B_VECTNIL+15
        18 000534   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 000535   000000 011000                    NOP     0

      574    19324    5                  GOTO CLSALT;

  19324 18 000536   000642 710000 18                 TRA     CLSALT

      575    19325    5                  SELECT ( %E$ADEOF );

  19325 18 000537   000544 710000 18                 TRA     s:19331

      576    19326    5                  SELECT ( ELSE );

      577    19327    5               CALL FLI$RPT_ERR;

  19327 18 000540   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 000541   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 000542   000000 011000                    NOP     0

      578    19328    5               GOTO CLSALT;

  19328 18 000543   000642 710000 18                 TRA     CLSALT

      579    19329    5                  END;

      580    19330    4               END;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:141  
      581    19331    3            OPEN_PRIME_DUAL.SN_ = VECTOR(DPLIST);

  19331 18 000544   000006 235000 19                 LDA     6
        18 000545   000000 236000 xsym               LDQ     DPLIST$
        18 000546   000002 757000 xsym               STAQ    OPEN_PRIME_DUAL+2

      582    19332    3            OPEN_PRIME_DUAL.V.RES# = DPRESLIST.NAME(0);

  19332 18 000547   000000 471400 xsym               LDP1    DPRESLIST$
        18 000550   100001 236100                    LDQ     1,,PR1
        18 000551   000050 756000 xsym               STQ     OPEN_PRIME_DUAL+40

      583    19333    3            OPEN_PRIME_DUAL.NAME_ = VECTOR(PRIME_FILE);

  19333 18 000552   000000 236000 xsym               LDQ     PRIME_FILE
        18 000553   000033 772000                    QRL     27
        18 000554   000001 620006                    EAX0    1,QL
        18 000555   000000 635010                    EAA     0,X0
        18 000556   000002 771000                    ARL     2
        18 000557   000140 135007                    SBLA    96,DL
        18 000560   000026 236000 19                 LDQ     22
        18 000561   000006 757000 xsym               STAQ    OPEN_PRIME_DUAL+6

      584    19334    3            OPEN_PRIME_DUAL.ACCT_ = VECTOR(BACKUP_ACCT);

  19334 18 000562   000020 237000 19                 LDAQ    16
        18 000563   000024 757000 xsym               STAQ    OPEN_PRIME_DUAL+20

      585    19335    3            OPEN_PRIME_DUAL.V.OPER = '0'B;

  19335 18 000564   000027 236000 19                 LDQ     23
        18 000565   000044 356000 xsym               ANSQ    OPEN_PRIME_DUAL+36

      586    19336    3            OPEN_PRIME_DUAL.V.INITZ.SCRUB# = '1'B;

  19336 18 000566   400000 236007                    LDQ     -131072,DL
        18 000567   000044 256000 xsym               ORSQ    OPEN_PRIME_DUAL+36
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:142  

      587    19337         /***
      588    19338          *** Build record for :PRIME and :DUAL files. Use volume serial number from VID.
      589    19339          ***/
      590    19340    3            CALL FLM_GET_PRIME_VSN( PRIME_DUAL_BUF.PRIME ) ALTRET(ERRCLSALT);

  19340 18 000570   000030 236000 19                 LDQ     24
        18 000571   200101 756100                    STQ     ANY_FILES_FOUND+3,,AUTO
        18 000572   013741 701000 18                 TSX1    FLM_GET_PRIME_VSN
        18 000573   000637 702000 18                 TSX2    ERRCLSALT

      591    19341    3            PRIME_DUAL_BUF.DUAL = TO_DISK_SN.SN#(0);

  19341 18 000574   040000 100400                    MLR     fill='040'O
        18 000575   000231 000006 2                  ADSC9   TO_DISK_SN+1             cn=0,n=6
        18 000576   000002 400006 xsym               ADSC9   PRIME_DUAL_BUF+2         cn=2,n=6

      592    19342    3            CALL M$TIME( GET_NOW_UTS );

  19342 18 000577   000000 630400 xsym               EPPR0   GET_NOW_UTS
        18 000600   020004 713400                    CLIMB   8196
        18 000601   402000 401760                    pmme    nvectors=5

      593    19343    3            PRIME_DUAL_BUF.UTS = NOW_UTS;

  19343 18 000602   000000 235000 xsym               LDA     NOW_UTS
        18 000603   000000 755000 xsym               STA     PRIME_DUAL_BUF

      594    19344
      595    19345    3            OPEN_PRIME_DUAL.V.FUN# = %CREATE#;

  19345 18 000604   003000 236007                    LDQ     1536,DL
        18 000605   000045 552010 xsym               STBQ    OPEN_PRIME_DUAL+37,'10'O

      596    19346    3            OPEN_PRIME_DUAL.V.EXPIRE# = %NEVER#;

  19346 18 000606   000001 335007                    LCA     1,DL
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:143  
        18 000607   000057 755000 xsym               STA     OPEN_PRIME_DUAL+47

      597    19347    3            CALL M$OPEN( OPEN_PRIME_DUAL )

  19347 18 000610   000000 630400 xsym               EPPR0   OPEN_PRIME_DUAL
        18 000611   450000 713400                    CLIMB   alt,open
        18 000612   410400 401760                    pmme    nvectors=18
        18 000613   000615 702000 18                 TSX2    s:19349
        18 000614   000715 710000 18                 TRA     s:19375

      598    19348    4             WHENALTRETURN DO;

      599    19349    4               IF B$TCB.ALT$->B$ALT.ERR.CODE = %E$NONEWFD

  19349 18 000615   000000 470400 xsym               LDP0    B$TCB$
        18 000616   000000 471500                    LDP1    0,,PR0
        18 000617   100102 236100                    LDQ     66,,PR1
        18 000620   377770 376007                    ANQ     131064,DL
        18 000621   001760 116007                    CMPQ    1008,DL
        18 000622   000637 601000 18                 TNZ     ERRCLSALT

      600    19350    5                THEN DO;

      601    19351    5                  CALL FLI$BUILD_$$EFT ( DPLIST.SN#(0))  ALTRET(ERRCLSALT);

  19351 18 000623   000000 236000 xsym               LDQ     DPLIST$
        18 000624   000001 036003                    ADLQ    1,DU
        18 000625   200124 756100                    STQ     @DISP+1,,AUTO
        18 000626   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 000627   000017 631400 xsym               EPPR1   B_VECTNIL+15
        18 000630   000000 701000 xent               TSX1    FLI$BUILD_$$EFT
        18 000631   000637 702000 18                 TSX2    ERRCLSALT

      602    19352    5                  CALL M$OPEN( OPEN_PRIME_DUAL ) ALTRET( ERRCLSALT );

  19352 18 000632   000000 630400 xsym               EPPR0   OPEN_PRIME_DUAL
        18 000633   450000 713400                    CLIMB   alt,open
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:144  
        18 000634   410400 401760                    pmme    nvectors=18
        18 000635   000637 702000 18                 TSX2    ERRCLSALT

      603    19353    5                  END;

  19353 18 000636   000715 710000 18                 TRA     s:19375

      604    19354    5                ELSE DO;

  19352 18 000637                       ERRCLSALT    null
      605    19355    5   ERRCLSALT:     ;
      606    19356    5                  CALL FLI$RPT_ERR;

  19356 18 000637   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 000640   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 000641   000000 011000                    NOP     0

  19352 18 000642                       CLSALT       null
      607    19357    5   CLSALT:        ;
      608    19358    5                  IF DCBADDR(DCBNUM(M$STATUS))->F$DCB.FCD#

  19358 18 000642   000000 236007 xsym               LDQ     M$STATUS,DL
        18 000643   000031 470400 19                 LDP0    25
        18 000644   000000 471500                    LDP1    0,,PR0
        18 000645   100000 473506                    LDP3    0,QL,PR1
        18 000646   300031 236100                    LDQ     25,,PR3
        18 000647   020000 316007                    CANQ    8192,DL
        18 000650   000656 600000 18                 TZE     s:19362

      609    19359    5                   THEN CALL M$CLOSE( CLOSE_PRIME_DUAL )

  19359 18 000651   000000 630400 xsym               EPPR0   CLOSE_PRIME_DUAL
        18 000652   450001 713400                    CLIMB   alt,close
        18 000653   406000 401760                    pmme    nvectors=13
        18 000654   000656 702000 18                 TSX2    s:19362
        18 000655   000656 710000 18                 TRA     s:19362

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:145  
      610    19360    6                      WHENALTRETURN DO;

      611    19361    6                        END;

      612    19362    5                  IF FPT_EXIT.V.STEPCC# < %SERIOUS_ERROR

  19362 18 000656   000004 236000 xsym               LDQ     FPT_EXIT+4
        18 000657   777000 376003                    ANQ     -512,DU
        18 000660   002000 116003                    CMPQ    1024,DU
        18 000661   000664 603000 18                 TRC     s:19364

      613    19363    5                   THEN FPT_EXIT.V.STEPCC# = %SERIOUS_ERROR;

  19363 18 000662   002000 236003                    LDQ     1024,DU
        18 000663   000004 552040 xsym               STBQ    FPT_EXIT+4,'40'O

      614    19364    5                  IF DCBADDR(DCBNUM(M$DEL_LIST))->F$DCB.FCD#

  19364 18 000664   000000 236007 xsym               LDQ     M$DEL_LIST,DL
        18 000665   000031 470400 19                 LDP0    25
        18 000666   000000 471500                    LDP1    0,,PR0
        18 000667   100000 473506                    LDP3    0,QL,PR1
        18 000670   300031 236100                    LDQ     25,,PR3
        18 000671   020000 316007                    CANQ    8192,DL
        18 000672   000700 600000 18                 TZE     s:19368

      615    19365    5                   THEN CALL M$CLOSE( CLOSE_DELETE_LIST )

  19365 18 000673   000004 630400 17                 EPPR0   CLOSE_DELETE_LIST
        18 000674   450001 713400                    CLIMB   alt,close
        18 000675   406000 401760                    pmme    nvectors=13
        18 000676   000700 702000 18                 TSX2    s:19368
        18 000677   000700 710000 18                 TRA     s:19368

      616    19366    6                      WHENALTRETURN DO;

      617    19367    6                        END;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:146  

      618    19368    5                  IF DCBADDR(DCBNUM(M$NODATA_LIST))->F$DCB.FCD#

  19368 18 000700   000000 236007 xsym               LDQ     M$NODATA_LIST,DL
        18 000701   000031 470400 19                 LDP0    25
        18 000702   000000 471500                    LDP1    0,,PR0
        18 000703   100000 473506                    LDP3    0,QL,PR1
        18 000704   300031 236100                    LDQ     25,,PR3
        18 000705   020000 316007                    CANQ    8192,DL
        18 000706   000714 600000 18                 TZE     s:19372

      619    19369    5                   THEN CALL M$CLOSE( CLOSE_NODATA_LIST )

  19369 18 000707   000000 630400 xsym               EPPR0   CLOSE_NODATA_LIST
        18 000710   450001 713400                    CLIMB   alt,close
        18 000711   406000 401760                    pmme    nvectors=13
        18 000712   000714 702000 18                 TSX2    s:19372
        18 000713   000714 710000 18                 TRA     s:19372

      620    19370    6                      WHENALTRETURN DO;

      621    19371    6                        END;

      622    19372    5                  ALTRETURN;

  19372 18 000714   000000 702200 xent               TSX2  ! X66_AALT

      623    19373    5                  END;
      624    19374    4               END;
      625    19375    3            CALL M$WRITE( WRITE_PRIME_DUAL ) ALTRET( ERRCLSALT );

  19375 18 000715   000000 630400 xsym               EPPR0   WRITE_PRIME_DUAL
        18 000716   440001 713400                    CLIMB   alt,write
        18 000717   401400 401760                    pmme    nvectors=4
        18 000720   000637 702000 18                 TSX2    ERRCLSALT

      626    19376    3            CALL M$CLOSE( CLOSE_PRIME_DUAL ) ALTRET( ERRCLSALT );
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:147  

  19376 18 000721   000000 630400 xsym               EPPR0   CLOSE_PRIME_DUAL
        18 000722   450001 713400                    CLIMB   alt,close
        18 000723   406000 401760                    pmme    nvectors=13
        18 000724   000637 702000 18                 TSX2    ERRCLSALT

      627    19377
      628    19378    3            OPEN_PRIME_DUAL.SN_ = VECTOR(TO_DISK_SN);

  19378 18 000725   000006 237000 19                 LDAQ    6
        18 000726   000002 757000 xsym               STAQ    OPEN_PRIME_DUAL+2

      629    19379    3            OPEN_PRIME_DUAL.V.RES# = DISK_DEST_RES.NAME;

  19379 18 000727   000001 236000 xsym               LDQ     DISK_DEST_RES+1
        18 000730   000050 756000 xsym               STQ     OPEN_PRIME_DUAL+40

      630    19380    3            OPEN_PRIME_DUAL.ACCT_ = VECTOR ( BACKUP_ACCT );

  19380 18 000731   000020 237000 19                 LDAQ    16
        18 000732   000024 757000 xsym               STAQ    OPEN_PRIME_DUAL+20

      631    19381    3            OPEN_PRIME_DUAL.NAME_ = VECTOR(DUAL_FILE);

  19381 18 000733   000000 236000 xsym               LDQ     DUAL_FILE
        18 000734   000033 772000                    QRL     27
        18 000735   000001 620006                    EAX0    1,QL
        18 000736   000000 635010                    EAA     0,X0
        18 000737   000002 771000                    ARL     2
        18 000740   000140 135007                    SBLA    96,DL
        18 000741   000032 236000 19                 LDQ     26
        18 000742   000006 757000 xsym               STAQ    OPEN_PRIME_DUAL+6

      632    19382    3            OPEN_PRIME_DUAL.V.FUN# = %CREATE#;

  19382 18 000743   003000 236007                    LDQ     1536,DL
        18 000744   000045 552010 xsym               STBQ    OPEN_PRIME_DUAL+37,'10'O
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:148  

      633    19383    3            OPEN_PRIME_DUAL.V.EXPIRE# = %NEVER#;

  19383 18 000745   000001 335007                    LCA     1,DL
        18 000746   000057 755000 xsym               STA     OPEN_PRIME_DUAL+47

      634    19384    3            CALL M$OPEN( OPEN_PRIME_DUAL )

  19384 18 000747   000000 630400 xsym               EPPR0   OPEN_PRIME_DUAL
        18 000750   450000 713400                    CLIMB   alt,open
        18 000751   410400 401760                    pmme    nvectors=18
        18 000752   000754 702000 18                 TSX2    s:19386
        18 000753   000773 710000 18                 TRA     s:19393

      635    19385    4             WHENALTRETURN DO;

      636    19386    4               IF B$TCB.ALT$->B$ALT.ERR.CODE = %E$NONEWFD

  19386 18 000754   000000 470400 xsym               LDP0    B$TCB$
        18 000755   000000 471500                    LDP1    0,,PR0
        18 000756   100102 236100                    LDQ     66,,PR1
        18 000757   377770 376007                    ANQ     131064,DL
        18 000760   001760 116007                    CMPQ    1008,DL
        18 000761   000637 601000 18                 TNZ     ERRCLSALT

      637    19387    5                THEN DO;

      638    19388    5                  CALL FLI$BUILD_$$EFT ( TO_DISK_SN.SN#(0))  ALTRET(ERRCLSALT);

  19388 18 000762   000033 630400 19                 EPPR0   27
        18 000763   000017 631400 xsym               EPPR1   B_VECTNIL+15
        18 000764   000000 701000 xent               TSX1    FLI$BUILD_$$EFT
        18 000765   000637 702000 18                 TSX2    ERRCLSALT

      639    19389    5                  CALL M$OPEN( OPEN_PRIME_DUAL ) ALTRET( ERRCLSALT );

  19389 18 000766   000000 630400 xsym               EPPR0   OPEN_PRIME_DUAL
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:149  
        18 000767   450000 713400                    CLIMB   alt,open
        18 000770   410400 401760                    pmme    nvectors=18
        18 000771   000637 702000 18                 TSX2    ERRCLSALT

      640    19390    5                  END;

  19390 18 000772   000773 710000 18                 TRA     s:19393

      641    19391    4                ELSE GOTO ERRCLSALT;
      642    19392    4               END;
      643    19393    3            CALL M$WRITE( WRITE_PRIME_DUAL ) ALTRET( ERRCLSALT );

  19393 18 000773   000000 630400 xsym               EPPR0   WRITE_PRIME_DUAL
        18 000774   440001 713400                    CLIMB   alt,write
        18 000775   401400 401760                    pmme    nvectors=4
        18 000776   000637 702000 18                 TSX2    ERRCLSALT

      644    19394    3            CALL M$CLOSE( CLOSE_PRIME_DUAL ) ALTRET( ERRCLSALT );

  19394 18 000777   000000 630400 xsym               EPPR0   CLOSE_PRIME_DUAL
        18 001000   450001 713400                    CLIMB   alt,close
        18 001001   406000 401760                    pmme    nvectors=13
        18 001002   000637 702000 18                 TSX2    ERRCLSALT

      645    19395    3            END;

  19395 18 001003   001221 710000 18                 TRA     s:19453

      646    19396    3          ELSE DO;                         /* DUAL INCREMENTAL                   */

      647    19397    3            OPEN_PRIME_DUAL.V.OPER = '0'B;

  19397 18 001004   000027 236000 19                 LDQ     23
        18 001005   000044 356000 xsym               ANSQ    OPEN_PRIME_DUAL+36

      648    19398    3            OPEN_PRIME_DUAL.V.INITZ.SCRUB# = '1'B;

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:150  
  19398 18 001006   400000 236007                    LDQ     -131072,DL
        18 001007   000044 256000 xsym               ORSQ    OPEN_PRIME_DUAL+36

      649    19399    3            OPEN_PRIME_DUAL.SN_ = VECTOR(DPLIST);

  19399 18 001010   000006 235000 19                 LDA     6
        18 001011   000000 236000 xsym               LDQ     DPLIST$
        18 001012   000002 757000 xsym               STAQ    OPEN_PRIME_DUAL+2

      650    19400    3            OPEN_PRIME_DUAL.V.RES# = DPRESLIST.NAME(0);

  19400 18 001013   000000 471400 xsym               LDP1    DPRESLIST$
        18 001014   100001 236100                    LDQ     1,,PR1
        18 001015   000050 756000 xsym               STQ     OPEN_PRIME_DUAL+40

      651    19401    3            OPEN_PRIME_DUAL.NAME_ = VECTOR(PRIME_FILE);

  19401 18 001016   000000 236000 xsym               LDQ     PRIME_FILE
        18 001017   000033 772000                    QRL     27
        18 001020   000001 620006                    EAX0    1,QL
        18 001021   000000 635010                    EAA     0,X0
        18 001022   000002 771000                    ARL     2
        18 001023   000140 135007                    SBLA    96,DL
        18 001024   000026 236000 19                 LDQ     22
        18 001025   000006 757000 xsym               STAQ    OPEN_PRIME_DUAL+6

      652    19402    3            OPEN_PRIME_DUAL.ACCT_ = VECTOR(BACKUP_ACCT);

  19402 18 001026   000020 237000 19                 LDAQ    16
        18 001027   000024 757000 xsym               STAQ    OPEN_PRIME_DUAL+20

      653    19403    3            OPEN_PRIME_DUAL.V.FUN# = %IN#;

  19403 18 001030   002000 236007                    LDQ     1024,DL
        18 001031   000045 552010 xsym               STBQ    OPEN_PRIME_DUAL+37,'10'O

      654    19404    3            CALL M$OPEN( OPEN_PRIME_DUAL ) ALTRET( ERRCLSALT );
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:151  

  19404 18 001032   000000 630400 xsym               EPPR0   OPEN_PRIME_DUAL
        18 001033   450000 713400                    CLIMB   alt,open
        18 001034   410400 401760                    pmme    nvectors=18
        18 001035   000637 702000 18                 TSX2    ERRCLSALT

      655    19405    3            CALL M$READ( READ_PRIME_DUAL ) ALTRET( ERRCLSALT );

  19405 18 001036   000000 630400 xsym               EPPR0   READ_PRIME_DUAL
        18 001037   440000 713400                    CLIMB   alt,read
        18 001040   401400 401760                    pmme    nvectors=4
        18 001041   000637 702000 18                 TSX2    ERRCLSALT

      656    19406    3            IF DISK_DEST_SN.SN#(0) = ' '

  19406 18 001042   040000 106400                    CMPC    fill='040'O
        18 001043   000001 000006 xsym               ADSC9   DISK_DEST_SN+1           cn=0,n=6
        18 001044   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        18 001045   001054 601000 18                 TNZ     s:19411

      657    19407    4             THEN DO;

      658    19408    4               TO_DISK_SN.SN#(0) = PRIME_DUAL_BUF.DUAL;

  19408 18 001046   040000 100400                    MLR     fill='040'O
        18 001047   000002 400006 xsym               ADSC9   PRIME_DUAL_BUF+2         cn=2,n=6
        18 001050   000231 000006 2                  ADSC9   TO_DISK_SN+1             cn=0,n=6

      659    19409    4               DISK_DEST_SN.SN#(0) = PRIME_DUAL_BUF.DUAL;

  19409 18 001051   040000 100400                    MLR     fill='040'O
        18 001052   000002 400006 xsym               ADSC9   PRIME_DUAL_BUF+2         cn=2,n=6
        18 001053   000001 000006 xsym               ADSC9   DISK_DEST_SN+1           cn=0,n=6

      660    19410    4               END;

      661    19411    3            IF PRIME_DUAL_BUF.DUAL ~= TO_DISK_SN.SN#(0)
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:152  

  19411 18 001054   040000 106400                    CMPC    fill='040'O
        18 001055   000002 400006 xsym               ADSC9   PRIME_DUAL_BUF+2         cn=2,n=6
        18 001056   000231 000006 2                  ADSC9   TO_DISK_SN+1             cn=0,n=6
        18 001057   001065 600000 18                 TZE     s:19416

      662    19412    4             THEN DO;                      /* Incorrect DUAL volume              */

      663    19413    4               CALL FLI$RPT_ERR( E_WRONG_DUAL );

  19413 18 001060   000034 630400 19                 EPPR0   28
        18 001061   000017 631400 xsym               EPPR1   B_VECTNIL+15
        18 001062   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 001063   000000 011000                    NOP     0

      664    19414    4               GOTO CLSALT;

  19414 18 001064   000642 710000 18                 TRA     CLSALT

      665    19415    4               END;
      666    19416    3            CALL M$CLOSE( CLOSE_PRIME_DUAL ) ALTRET( ERRCLSALT );

  19416 18 001065   000000 630400 xsym               EPPR0   CLOSE_PRIME_DUAL
        18 001066   450001 713400                    CLIMB   alt,close
        18 001067   406000 401760                    pmme    nvectors=13
        18 001070   000637 702000 18                 TSX2    ERRCLSALT

      667    19417
      668    19418    3            OPEN_PRIME_DUAL.SN_ = VECTOR(TO_DISK_SN);

  19418 18 001071   000006 237000 19                 LDAQ    6
        18 001072   000002 757000 xsym               STAQ    OPEN_PRIME_DUAL+2

      669    19419    3            OPEN_PRIME_DUAL.V.RES# = DISK_DEST_RES.NAME;

  19419 18 001073   000001 236000 xsym               LDQ     DISK_DEST_RES+1
        18 001074   000050 756000 xsym               STQ     OPEN_PRIME_DUAL+40
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:153  

      670    19420    3            OPEN_PRIME_DUAL.NAME_ = VECTOR(DUAL_FILE);

  19420 18 001075   000000 236000 xsym               LDQ     DUAL_FILE
        18 001076   000033 772000                    QRL     27
        18 001077   000001 620006                    EAX0    1,QL
        18 001100   000000 635010                    EAA     0,X0
        18 001101   000002 771000                    ARL     2
        18 001102   000140 135007                    SBLA    96,DL
        18 001103   000032 236000 19                 LDQ     26
        18 001104   000006 757000 xsym               STAQ    OPEN_PRIME_DUAL+6

      671    19421    3            CALL M$OPEN( OPEN_PRIME_DUAL ) ALTRET( ERRCLSALT );

  19421 18 001105   000000 630400 xsym               EPPR0   OPEN_PRIME_DUAL
        18 001106   450000 713400                    CLIMB   alt,open
        18 001107   410400 401760                    pmme    nvectors=18
        18 001110   000637 702000 18                 TSX2    ERRCLSALT

      672    19422    3            CALL M$READ( READ_PRIME_DUAL ) ALTRET( ERRCLSALT );

  19422 18 001111   000000 630400 xsym               EPPR0   READ_PRIME_DUAL
        18 001112   440000 713400                    CLIMB   alt,read
        18 001113   401400 401760                    pmme    nvectors=4
        18 001114   000637 702000 18                 TSX2    ERRCLSALT

      673    19423    3            CALL M$CLOSE( CLOSE_PRIME_DUAL ) ALTRET( ERRCLSALT );

  19423 18 001115   000000 630400 xsym               EPPR0   CLOSE_PRIME_DUAL
        18 001116   450001 713400                    CLIMB   alt,close
        18 001117   406000 401760                    pmme    nvectors=13
        18 001120   000637 702000 18                 TSX2    ERRCLSALT

      674    19424
      675    19425    3            CALL FLM_GET_PRIME_VSN( VSN ) ALTRET(ERRCLSALT); /* Get prime pack VSN */

  19425 18 001121   200051 630500                    EPPR0   VSN,,AUTO
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:154  
        18 001122   200101 450500                    STP0    ANY_FILES_FOUND+3,,AUTO
        18 001123   013741 701000 18                 TSX1    FLM_GET_PRIME_VSN
        18 001124   000637 702000 18                 TSX2    ERRCLSALT

      676    19426    3            IF PRIME_DUAL_BUF.PRIME ~= VSN

  19426 18 001125   040100 106400                    CMPC    fill='040'O
        18 001126   000001 000006 xsym               ADSC9   PRIME_DUAL_BUF+1         cn=0,n=6
        18 001127   200051 000006                    ADSC9   VSN,,AUTO                cn=0,n=6
        18 001130   001136 600000 18                 TZE     s:19431

      677    19427    4             THEN DO;                      /* Incorrect PRIME volume             */

      678    19428    4               CALL FLI$RPT_ERR( E_WRONG_PRIME );

  19428 18 001131   000035 630400 19                 EPPR0   29
        18 001132   000017 631400 xsym               EPPR1   B_VECTNIL+15
        18 001133   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 001134   000000 011000                    NOP     0

      679    19429    4               GOTO CLSALT;

  19429 18 001135   000642 710000 18                 TRA     CLSALT

      680    19430    4               END;
      681    19431    3            OPEN_PRIME_DUAL.V.FUN# = %CREATE#;

  19431 18 001136   003000 236007                    LDQ     1536,DL
        18 001137   000045 552010 xsym               STBQ    OPEN_PRIME_DUAL+37,'10'O

      682    19432    3            OPEN_PRIME_DUAL.V.EXIST# = %OLDFILE#;

  19432 18 001140   000044 236000 xsym               LDQ     OPEN_PRIME_DUAL+36
        18 001141   000036 376000 19                 ANQ     30
        18 001142   000400 276007                    ORQ     256,DL
        18 001143   000044 756000 xsym               STQ     OPEN_PRIME_DUAL+36

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:155  
      683    19433    3            OPEN_PRIME_DUAL.V.EXPIRE# = %NEVER#;

  19433 18 001144   000001 335007                    LCA     1,DL
        18 001145   000057 755000 xsym               STA     OPEN_PRIME_DUAL+47

      684    19434    3            CALL M$TIME( GET_NOW_UTS );

  19434 18 001146   000000 630400 xsym               EPPR0   GET_NOW_UTS
        18 001147   020004 713400                    CLIMB   8196
        18 001150   402000 401760                    pmme    nvectors=5

      685    19435    3            PRIME_DUAL_BUF.UTS = NOW_UTS;

  19435 18 001151   000000 235000 xsym               LDA     NOW_UTS
        18 001152   000000 755000 xsym               STA     PRIME_DUAL_BUF

      686    19436    3            CALL M$OPEN( OPEN_PRIME_DUAL ) ALTRET( ERRCLSALT );

  19436 18 001153   000000 630400 xsym               EPPR0   OPEN_PRIME_DUAL
        18 001154   450000 713400                    CLIMB   alt,open
        18 001155   410400 401760                    pmme    nvectors=18
        18 001156   000637 702000 18                 TSX2    ERRCLSALT

      687    19437    3            CALL M$WRITE( WRITE_PRIME_DUAL ) ALTRET( ERRCLSALT );

  19437 18 001157   000000 630400 xsym               EPPR0   WRITE_PRIME_DUAL
        18 001160   440001 713400                    CLIMB   alt,write
        18 001161   401400 401760                    pmme    nvectors=4
        18 001162   000637 702000 18                 TSX2    ERRCLSALT

      688    19438    3            CALL M$CLOSE( CLOSE_PRIME_DUAL ) ALTRET( ERRCLSALT );

  19438 18 001163   000000 630400 xsym               EPPR0   CLOSE_PRIME_DUAL
        18 001164   450001 713400                    CLIMB   alt,close
        18 001165   406000 401760                    pmme    nvectors=13
        18 001166   000637 702000 18                 TSX2    ERRCLSALT

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:156  
      689    19439
      690    19440    3            OPEN_PRIME_DUAL.NAME_ = VECTOR(PRIME_FILE);

  19440 18 001167   000000 236000 xsym               LDQ     PRIME_FILE
        18 001170   000033 772000                    QRL     27
        18 001171   000001 620006                    EAX0    1,QL
        18 001172   000000 635010                    EAA     0,X0
        18 001173   000002 771000                    ARL     2
        18 001174   000140 135007                    SBLA    96,DL
        18 001175   000026 236000 19                 LDQ     22
        18 001176   000006 757000 xsym               STAQ    OPEN_PRIME_DUAL+6

      691    19441    3            OPEN_PRIME_DUAL.SN_ = VECTOR(DPLIST);

  19441 18 001177   000006 235000 19                 LDA     6
        18 001200   000000 236000 xsym               LDQ     DPLIST$
        18 001201   000002 757000 xsym               STAQ    OPEN_PRIME_DUAL+2

      692    19442    3            OPEN_PRIME_DUAL.V.RES# = DPRESLIST.NAME(0);

  19442 18 001202   000000 470400 xsym               LDP0    DPRESLIST$
        18 001203   000001 236100                    LDQ     1,,PR0
        18 001204   000050 756000 xsym               STQ     OPEN_PRIME_DUAL+40

      693    19443    3            CALL M$OPEN( OPEN_PRIME_DUAL ) ALTRET( ERRCLSALT );

  19443 18 001205   000000 630400 xsym               EPPR0   OPEN_PRIME_DUAL
        18 001206   450000 713400                    CLIMB   alt,open
        18 001207   410400 401760                    pmme    nvectors=18
        18 001210   000637 702000 18                 TSX2    ERRCLSALT

      694    19444    3            CALL M$WRITE( WRITE_PRIME_DUAL ) ALTRET( ERRCLSALT );

  19444 18 001211   000000 630400 xsym               EPPR0   WRITE_PRIME_DUAL
        18 001212   440001 713400                    CLIMB   alt,write
        18 001213   401400 401760                    pmme    nvectors=4
        18 001214   000637 702000 18                 TSX2    ERRCLSALT
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:157  

      695    19445    3            CALL M$CLOSE( CLOSE_PRIME_DUAL ) ALTRET( ERRCLSALT );

  19445 18 001215   000000 630400 xsym               EPPR0   CLOSE_PRIME_DUAL
        18 001216   450001 713400                    CLIMB   alt,close
        18 001217   406000 401760                    pmme    nvectors=13
        18 001220   000637 702000 18                 TSX2    ERRCLSALT

      696    19446    3            END;

      697    19447    2         END;

      698    19448
      699    19449        /***
      700    19450         *** Erased SN list means reuse the last reels used.
      701    19451         ***/
      702    19452
      703    19453    1      IF TAPE_OPEN.SN_ = VECTOR(ERASE) AND COMMAND = %CHECK

  19453 18 001221   000002 237000 xsym               LDAQ    TAPE_OPEN+2
        18 001222   000016 117000 19                 CMPAQ   14
        18 001223   001247 601000 18                 TNZ     s:19463
        18 001224   200003 470500                    LDP0    @COMMAND,,AUTO
        18 001225   000000 235100                    LDA     0,,PR0
        18 001226   000003 115007                    CMPA    3,DL
        18 001227   001247 601000 18                 TNZ     s:19463

      704    19454    2       THEN DO;                            /* Use the last reels used            */

      705    19455    2         USE_TSN_USED = '1'B;

  19455 18 001230   400000 236003                    LDQ     -131072,DU
        18 001231   200053 756100                    STQ     USE_TSN_USED,,AUTO

      706    19456    2         SET_NBR = 1;

  19456 18 001232   000001 235007                    LDA     1,DL
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:158  
        18 001233   200054 755100                    STA     SET_NBR,,AUTO

      707    19457    2         CALL FLI$TSN_USED( 1,SNLIST_NBR )

  19457 18 001234   000037 630400 19                 EPPR0   31
        18 001235   000020 631400 xsym               EPPR1   B_VECTNIL+16
        18 001236   000000 701000 xent               TSX1    FLI$TSN_USED
        18 001237   001241 702000 18                 TSX2    s:19459
        18 001240   001246 710000 18                 TRA     s:19462

      708    19458    3          WHENALTRETURN DO;                /* Not even one previous SN list      */

      709    19459    3            CALL FLI$RPT_ERR( E_NO_PREVIOUS_SAVE );

  19459 18 001241   000041 630400 19                 EPPR0   33
        18 001242   000017 631400 xsym               EPPR1   B_VECTNIL+15
        18 001243   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 001244   000000 011000                    NOP     0

      710    19460    3            ALTRETURN;

  19460 18 001245   000000 702200 xent               TSX2  ! X66_AALT

      711    19461    3            END;
      712    19462    2         END;

  19462 18 001246   001250 710000 18                 TRA     s:19469

      713    19463    1       ELSE USE_TSN_USED = '0'B;

  19463 18 001247   200053 450100                    STZ     USE_TSN_USED,,AUTO

      714    19464
      715    19465        /***
      716    19466         *** Initialize for main loop.
      717    19467         ***/
      718    19468
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:159  
      719    19469    1      ANY_FILES_FOUND = '0'B;

  19469 18 001250   200076 450100                    STZ     ANY_FILES_FOUND,,AUTO

      720    19470    1      OLD_SN = ' ';

  19470 18 001251   040100 100400                    MLR     fill='040'O
        18 001252   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        18 001253   200047 000006                    ADSC9   OLD_SN,,AUTO             cn=0,n=6

      721    19471    1      DEL_LIST_REC.CSN = ' ';

  19471 18 001254   040000 100400                    MLR     fill='040'O
        18 001255   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        18 001256   000172 400006 2                  ADSC9   DEL_LIST_REC+14          cn=2,n=6

      722    19472    1      DEL_LIST_REC.CFSN = 0;

  19472 18 001257   000202 450000 2                  STZ     DEL_LIST_REC+22

      723    19473    1      NBR_DEL_FILES = 0;

  19473 18 001260   200067 450100                    STZ     NBR_DEL_FILES,,AUTO

      724    19474    1      M$DISK_OUT$ = DCBADDR(DCBNUM(M$DISK_OUT));

  19474 18 001261   000000 236007 xsym               LDQ     M$DISK_OUT,DL
        18 001262   000031 470400 19                 LDP0    25
        18 001263   000000 471500                    LDP1    0,,PR0
        18 001264   100000 236106                    LDQ     0,QL,PR1
        18 001265   200061 756100                    STQ     M$DISK_OUT$,,AUTO

      725    19475    1      M$DISK_IN$ = DCBADDR(DCBNUM(M$DISK_IN));

  19475 18 001266   000000 236007 xsym               LDQ     M$DISK_IN,DL
        18 001267   100000 236106                    LDQ     0,QL,PR1
        18 001270   200062 756100                    STQ     M$DISK_IN$,,AUTO
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:160  

      726    19476
      727    19477    1      IF TAPE_OPTION.CHECK AND COMMAND = %CHECK

  19477 18 001271   000000 234000 xsym               SZN     TAPE_OPTION
        18 001272   001300 605000 18                 TPL     s:19480
        18 001273   200003 473500                    LDP3    @COMMAND,,AUTO
        18 001274   300000 235100                    LDA     0,,PR3
        18 001275   000003 115007                    CMPA    3,DL
        18 001276   001300 601000 18                 TNZ     s:19480

      728    19478    1       THEN CATALOG_ON = '0'B;             /* Don't catalog during CHECK phase   */

  19478 18 001277   000000 450000 xsym               STZ     CATALOG_ON

      729    19479
      730    19480    1      ERR = '0'B;

  19480 18 001300   200020 450100                    STZ     ERR,,AUTO

      731    19481    1      SAVE_ERR = '0'B;

  19481 18 001301   200021 450100                    STZ     SAVE_ERR,,AUTO

      732    19482    1      GOING_TO_DEST = '0'B;

  19482 18 001302   200042 450100                    STZ     GOING_TO_DEST,,AUTO

      733    19483    1      FIT_UPDATE = '0'B;

  19483 18 001303   200043 450100                    STZ     FIT_UPDATE,,AUTO

      734    19484    1      FIT_ONLY_SAVED = '0'B;

  19484 18 001304   200074 450100                    STZ     FIT_ONLY_SAVED,,AUTO

      735    19485    1      SKIP_ACCT.ACCT# = ' ';
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:161  

  19485 18 001305   000035 235000 xsym               LDA     B_VECTNIL+29
        18 001306   000035 236000 xsym               LDQ     B_VECTNIL+29
        18 001307   000222 757000 2                  STAQ    SKIP_ACCT

      736    19486
      737    19487    1      SAVE_SN = ' ';

  19487 18 001310   040100 100400                    MLR     fill='040'O
        18 001311   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        18 001312   200036 000006                    ADSC9   SAVE_SN,,AUTO            cn=0,n=6

      738    19488    1      SAVE_FSN = 0;

  19488 18 001313   200040 450100                    STZ     SAVE_FSN,,AUTO

      739    19489
      740    19490        /***
      741    19491         *** Go for it!
      742    19492         ***/
      743    19493
      744    19494    2      DO WHILE('1'B);

      745    19495
      746    19496
      747    19497    2   MAIN_LOOP:
      748    19498    3         DO WHILE( BREAK_COUNT = 0 );

  19498 18 001314   000000 235000 xsym  MAIN_LOOP    LDA     BREAK_COUNT
        18 001315   003731 601000 18                 TNZ     CHKALT

      749    19499
      750    19500
      751    19501    4            DO CASE( SOURCE );

  19501 18 001316   200070 235100                    LDA     SOURCE,,AUTO
        18 001317   000002 115007                    CMPA    2,DL
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:162  
        18 001320   001322 602005 18                 TNC     s:19501+4,AL
        18 001321   002027 710000 18                 TRA     s:19637
        18 001322   001515 710000 18                 TRA     s:19545
        18 001323   001324 710000 18                 TRA     s:19503

      752    19502    4             CASE( %DISK@ );

      753    19503    4               CALL FLN$DISK_OPEN_NEXT( SOURCE_DCB$, DCB#, DCB_NBR, FPARAM_, ERR )
             19503                        ALTRET( JUSTDONE );

  19503 18 001324   200020 630500                    EPPR0   ERR,,AUTO
        18 001325   200130 450500                    STP0    @DISP+5,,AUTO
        18 001326   200016 631500                    EPPR1   FPARAM_,,AUTO
        18 001327   200127 451500                    STP1    @DISP+4,,AUTO
        18 001330   200065 633500                    EPPR3   DCB_NBR,,AUTO
        18 001331   200126 453500                    STP3    @DISP+3,,AUTO
        18 001332   200066 634500                    EPPR4   DCB#,,AUTO
        18 001333   200125 454500                    STP4    @DISP+2,,AUTO
        18 001334   200014 635500                    EPPR5   SOURCE_DCB$,,AUTO
        18 001335   200124 455500                    STP5    @DISP+1,,AUTO
        18 001336   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 001337   000023 631400 xsym               EPPR1   B_VECTNIL+19
        18 001340   000000 701000 xent               TSX1    FLN$DISK_OPEN_NEXT
        18 001341   003737 702000 18                 TSX2    JUSTDONE

      754    19504    4   PROCESS_DISK_FILE:
      755    19505    5               DO SELECT( ERR.CODE );

  19505 18 001342   200020 236100       PROCESS_DIS* LDQ     ERR,,AUTO
        18 001343   000003 772000                    QRL     3
        18 001344   037777 376007                    ANQ     16383,DL
        18 001345   000154 116007                    CMPQ    108,DL
        18 001346   001364 602000 18                 TNC     PROCESS_DISK_FILE+18
        18 001347   001423 600000 18                 TZE     s:19515
        18 001350   000175 116007                    CMPQ    125,DL
        18 001351   001357 602000 18                 TNC     PROCESS_DISK_FILE+13
        18 001352   001377 600000 18                 TZE     s:19507
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:163  
        18 001353   000003 736000                    QLS     3
        18 001354   003520 116007                    CMPQ    1872,DL
        18 001355   001513 601000 18                 TNZ     s:19542
        18 001356   001447 710000 18                 TRA     s:19523
        18 001357   200020 236100                    LDQ     ERR,,AUTO
        18 001360   377770 376007                    ANQ     131064,DL
        18 001361   001610 116007                    CMPQ    904,DL
        18 001362   001513 601000 18                 TNZ     s:19542
        18 001363   001444 710000 18                 TRA     s:19521
        18 001364   200020 236100                    LDQ     ERR,,AUTO
        18 001365   000003 772000                    QRL     3
        18 001366   037777 376007                    ANQ     16383,DL
        18 001367   000102 116007                    CMPQ    66,DL
        18 001370   001373 602000 18                 TNC     PROCESS_DISK_FILE+25
        18 001371   001420 600000 18                 TZE     s:19513
        18 001372   001513 710000 18                 TRA     s:19542
        18 001373   200020 236100                    LDQ     ERR,,AUTO
        18 001374   377770 316007                    CANQ    131064,DL
        18 001375   001452 600000 18                 TZE     s:19525
        18 001376   001513 710000 18                 TRA     s:19542

      756    19506    5                  SELECT( %E$ADEOF );

      757    19507    5                  SOURCE_FILE_TYPE = %ACCT_DIR;

  19507 18 001377   000005 235007                    LDA     5,DL
        18 001400   200023 755100                    STA     SOURCE_FILE_TYPE,,AUTO

      758    19508    5                  IF COMMAND = %REAL_DUAL AND TAPE_OPTION.PROTTYPE = %INCREMENTAL

  19508 18 001401   200003 470500                    LDP0    @COMMAND,,AUTO
        18 001402   000000 235100                    LDA     0,,PR0
        18 001403   000055 115007                    CMPA    45,DL
        18 001404   002027 601000 18                 TNZ     s:19637
        18 001405   000001 236000 xsym               LDQ     TAPE_OPTION+1
        18 001406   700000 376003                    ANQ     -32768,DU
        18 001407   300000 116003                    CMPQ    98304,DU
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:164  
        18 001410   002027 601000 18                 TNZ     s:19637

      759    19509    6                   THEN DO;

      760    19510    6                     SAVE_AD_FD_FIT_.PTR$->ONE_GRAN = FPARAM_.PTR$->ONE_GRAN;

  19510 18 001411   200017 471500                    LDP1    FPARAM_+1,,AUTO
        18 001412   010000 220003                    LDX0    4096,DU
        18 001413   200031 473500                    LDP3    SAVE_AD_FD_FIT_+1,,AUTO
        18 001414   000140 100540                    MLR     fill='000'O
        18 001415   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
        18 001416   300000 000010                    ADSC9   0,,PR3                   cn=0,n=*X0

      761    19511    6                     END;

  19511 18 001417   002027 710000 18                 TRA     s:19637

      762    19512    5                  SELECT( %E$NOKEY );

      763    19513    5                  SOURCE_FILE_TYPE = %DEL_ACCT;

  19513 18 001420   000006 235007                    LDA     6,DL
        18 001421   200023 755100                    STA     SOURCE_FILE_TYPE,,AUTO
        18 001422   002027 710000 18                 TRA     s:19637

      764    19514    5                  SELECT( %E$FDEOF );

      765    19515    5                  SOURCE_FILE_TYPE = %FILE_DIR;

  19515 18 001423   000004 235007                    LDA     4,DL
        18 001424   200023 755100                    STA     SOURCE_FILE_TYPE,,AUTO

      766    19516    5                  IF COMMAND = %REAL_DUAL AND TAPE_OPTION.PROTTYPE = %INCREMENTAL

  19516 18 001425   200003 470500                    LDP0    @COMMAND,,AUTO
        18 001426   000000 235100                    LDA     0,,PR0
        18 001427   000055 115007                    CMPA    45,DL
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:165  
        18 001430   002027 601000 18                 TNZ     s:19637
        18 001431   000001 236000 xsym               LDQ     TAPE_OPTION+1
        18 001432   700000 376003                    ANQ     -32768,DU
        18 001433   300000 116003                    CMPQ    98304,DU
        18 001434   002027 601000 18                 TNZ     s:19637

      767    19517    6                   THEN DO;

      768    19518    6                     SAVE_AD_FD_FIT_.PTR$->ONE_GRAN = FPARAM_.PTR$->ONE_GRAN;

  19518 18 001435   200017 471500                    LDP1    FPARAM_+1,,AUTO
        18 001436   010000 220003                    LDX0    4096,DU
        18 001437   200031 473500                    LDP3    SAVE_AD_FD_FIT_+1,,AUTO
        18 001440   000140 100540                    MLR     fill='000'O
        18 001441   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
        18 001442   300000 000010                    ADSC9   0,,PR3                   cn=0,n=*X0

      769    19519    6                     END;

  19519 18 001443   002027 710000 18                 TRA     s:19637

      770    19520    5                  SELECT( %E$NOFILE );

      771    19521    5                  SOURCE_FILE_TYPE = %CLEANUP_FILE;

  19521 18 001444   000010 235007                    LDA     8,DL
        18 001445   200023 755100                    STA     SOURCE_FILE_TYPE,,AUTO
        18 001446   002027 710000 18                 TRA     s:19637

      772    19522    5                  SELECT( %E$NOPROC );

      773    19523    5                  SOURCE_FILE_TYPE = %CLEANUP_ACCT;

  19523 18 001447   000007 235007                    LDA     7,DL
        18 001450   200023 755100                    STA     SOURCE_FILE_TYPE,,AUTO
        18 001451   002027 710000 18                 TRA     s:19637

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:166  
      774    19524    5                  SELECT( 0 );

      775    19525    5                  IF SOURCE_DCB$->F$DCB.DESC.DELF#

  19525 18 001452   200014 470500                    LDP0    SOURCE_DCB$,,AUTO
        18 001453   000005 236100                    LDQ     5,,PR0
        18 001454   400000 316007                    CANQ    -131072,DL
        18 001455   001466 600000 18                 TZE     s:19530

      776    19526    5                   THEN IF SOURCE_DCB$->F$DCB.DESC.ARCHIVE#

  19526 18 001456   001000 316007                    CANQ    512,DL
        18 001457   001463 600000 18                 TZE     s:19528

      777    19527    5                      THEN SOURCE_FILE_TYPE = %INACTIVE_FILE;

  19527 18 001460   000002 235007                    LDA     2,DL
        18 001461   200023 755100                    STA     SOURCE_FILE_TYPE,,AUTO
        18 001462   002027 710000 18                 TRA     s:19637

      778    19528    5                      ELSE SOURCE_FILE_TYPE = %DEL_FILE;

  19528 18 001463   000001 235007                    LDA     1,DL
        18 001464   200023 755100                    STA     SOURCE_FILE_TYPE,,AUTO
        18 001465   002027 710000 18                 TRA     s:19637

      779    19529    6                   ELSE DO;

      780    19530    6                     SOURCE_FILE_TYPE = %REG_FILE;

  19530 18 001466   200023 450100                    STZ     SOURCE_FILE_TYPE,,AUTO

      781    19531    6                     CODE$ = PINCRW( FPARAM_.PTR$, SIZEW(FM$GRAN) );

  19531 18 001467   200017 236100                    LDQ     FPARAM_+1,,AUTO
        18 001470   000005 036003                    ADLQ    5,DU
        18 001471   200006 756100                    STQ     CODE$,,AUTO
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:167  

      782    19532    6                     CALL XSF$LOCCODP( CODE$, 03 )

  19532 18 001472   000042 236000 19                 LDQ     34
        18 001473   200125 756100                    STQ     @DISP+2,,AUTO
        18 001474   200006 631500                    EPPR1   CODE$,,AUTO
        18 001475   200124 451500                    STP1    @DISP+1,,AUTO
        18 001476   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 001477   000020 631400 xsym               EPPR1   B_VECTNIL+16
        18 001500   000000 701000 xent               TSX1    XSF$LOCCODP
        18 001501   001511 702000 18                 TSX2    s:19538

      783    19533    7                      WHENRETURN DO;

      784    19534    7                        NBR_GRANS_TO_READ = CODE03.UGRANS - SOURCE_DCB$->F$DCB.CRECNO;

  19534 18 001502   200014 470500                    LDP0    SOURCE_DCB$,,AUTO
        18 001503   200006 471500                    LDP1    CODE$,,AUTO
        18 001504   100000 236100                    LDQ     0,,PR1
        18 001505   000032 376000 xsym               ANQ     B_VECTNIL+26
        18 001506   000071 136100                    SBLQ    57,,PR0
        18 001507   200022 756100                    STQ     NBR_GRANS_TO_READ,,AUTO

      785    19535                                                /* Some handling of ACUP option       */
      786    19536    7                        END;

  19536 18 001510   001512 710000 18                 TRA     s:19540

      787    19537    7                      WHENALTRETURN DO; /* Shouldn't get here, but assume ACUP   */

      788    19538    7                        NBR_GRANS_TO_READ = 0;

  19538 18 001511   200022 450100                    STZ     NBR_GRANS_TO_READ,,AUTO

      789    19539    7                        END;

      790    19540    6                     END;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:168  

  19540 18 001512   002027 710000 18                 TRA     s:19637

      791    19541    5                  SELECT( ELSE );

      792    19542    5               SOURCE_FILE_TYPE = %REG_FILE; /* Channel through error reporting  */

  19542 18 001513   200023 450100                    STZ     SOURCE_FILE_TYPE,,AUTO

      793    19543    5                  END;

  19543 18 001514   002027 710000 18                 TRA     s:19637

      794    19544    4             CASE( %TAPE@ );

      795    19545    4               IF COMMAND = %REBUILD

  19545 18 001515   200003 470500                    LDP0    @COMMAND,,AUTO
        18 001516   000000 235100                    LDA     0,,PR0
        18 001517   000056 115007                    CMPA    46,DL
        18 001520   001707 601000 18                 TNZ     OPEN_TAPE_FILE

      796    19546    5                THEN DO;              /* Always get file directory for rebuild   */

      797    19547    5                  SAVE_DISK_OPTION_DIR = DISK_OPTION.DIR;

  19547 18 001521   000000 236000 xsym               LDQ     DISK_OPTION
        18 001522   400000 376003                    ANQ     -131072,DU
        18 001523   200041 756100                    STQ     SAVE_DISK_OPTION_DIR,,AUTO

      798    19548    5                  DISK_OPTION.DIR = '1'B;

  19548 18 001524   400000 236003                    LDQ     -131072,DU
        18 001525   000000 256000 xsym               ORSQ    DISK_OPTION

      799    19549        /***
      800    19550         *** If a block count error as a result of trying to continue after a tape read,
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:169  
      801    19551         *** or an I/O error encountered, continue processing.
      802    19552         ***/
      803    19553    5   OPEN_REBUILD_TAPE_FILE:
      804    19554    5                  CALL FLC$TAPE_OPEN_NEXT( SOURCE_DCB$, FPARAM_, ERR )

  19554 18 001526   200020 630500       OPEN_REBUIL* EPPR0   ERR,,AUTO
        18 001527   200126 450500                    STP0    @DISP+3,,AUTO
        18 001530   200016 631500                    EPPR1   FPARAM_,,AUTO
        18 001531   200125 451500                    STP1    @DISP+2,,AUTO
        18 001532   200014 633500                    EPPR3   SOURCE_DCB$,,AUTO
        18 001533   200124 453500                    STP3    @DISP+1,,AUTO
        18 001534   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 001535   000021 631400 xsym               EPPR1   B_VECTNIL+17
        18 001536   000000 701000 xent               TSX1    FLC$TAPE_OPEN_NEXT
        18 001537   001541 702000 18                 TSX2    s:19556
        18 001540   001560 710000 18                 TRA     s:19567

      805    19555    6                   WHENALTRETURN DO;

      806    19556    6                     IF (TAPE_OPEN.V.IOERROK# AND ERR.CODE = %E$BLKCNT)

  19556 18 001541   000060 236000 xsym               LDQ     TAPE_OPEN+48
        18 001542   003000 316003                    CANQ    1536,DU
        18 001543   001550 600000 18                 TZE     s:19556+7
        18 001544   200020 236100                    LDQ     ERR,,AUTO
        18 001545   377770 376007                    ANQ     131064,DL
        18 001546   013250 116007                    CMPQ    5800,DL
        18 001547   001526 600000 18                 TZE     OPEN_REBUILD_TAPE_FILE
        18 001550   000060 236000 xsym               LDQ     TAPE_OPEN+48
        18 001551   003000 316003                    CANQ    1536,DU
        18 001552   001557 600000 18                 TZE     s:19559
        18 001553   200020 236100                    LDQ     ERR,,AUTO
        18 001554   377770 376007                    ANQ     131064,DL
        18 001555   000100 116007                    CMPQ    64,DL
        18 001556   001526 600000 18                 TZE     OPEN_REBUILD_TAPE_FILE

      807    19557    6                       OR (TAPE_OPEN.V.IOERROK# AND ERR.CODE = %E$IO_ERR)
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:170  
      808    19558    6                      THEN GOTO OPEN_REBUILD_TAPE_FILE;
      809    19559    6                      ELSE GOTO CHKALT;

  19559 18 001557   003731 710000 18                 TRA     CHKALT

      810    19560    6                     END;
      811    19561        /***
      812    19562         *** Write out rebuild record so that EFT can continue from this point
      813    19563         *** on a rebuild continuation rather than starting from the beginning and
      814    19564         *** restoring all files should an error occur. REBUILD_BUF info. also used
      815    19565         *** when attempting to continue after avail. pack space exceeded.
      816    19566         ***/
      817    19567    6                  DO CASE( BLK_TAG.TYPE );

  19567 18 001560   000000 470400 xsym               LDP0    BLK_TAG$
        18 001561   000000 236100                    LDQ     0,,PR0
        18 001562   000077 376007                    ANQ     63,DL
        18 001563   000004 136007                    SBLQ    4,DL
        18 001564   000004 116007                    CMPQ    4,DL
        18 001565   001567 602006 18                 TNC     s:19567+7,QL
        18 001566   001620 710000 18                 TRA     s:19577
        18 001567   001605 710000 18                 TRA     s:19573
        18 001570   001573 710000 18                 TRA     s:19569
        18 001571   001605 710000 18                 TRA     s:19573
        18 001572   001605 710000 18                 TRA     s:19573

      818    19568    6                   CASE( %ACCT_DIR );

      819    19569    6                     REBUILD_BUF.START.ACCT = FIRST_ACCT;

  19569 18 001573   000000 100400                    MLR     fill='000'O
        18 001574   000000 000010 xsym               ADSC9   FIRST_ACCT               cn=0,n=8
        18 001575   000000 000010 xsym               ADSC9   REBUILD_BUF              cn=0,n=8

      820    19570    6                     REBUILD_BUF.START.FILE.L# = FIRST_FILE.L#;

  19570 18 001576   000007 236000 xsym               LDQ     FIRST_FILE+7
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:171  
        18 001577   000033 736000                    QLS     27
        18 001600   000002 552040 xsym               STBQ    REBUILD_BUF+2,'40'O

      821    19571    6                     REBUILD_BUF.START.FILE.NAME# = FIRST_FILE.NAME#;

  19571 18 001601   040000 100400                    MLR     fill='040'O
        18 001602   000000 000037 xsym               ADSC9   FIRST_FILE               cn=0,n=31
        18 001603   000002 200037 xsym               ADSC9   REBUILD_BUF+2            cn=1,n=31
        18 001604   001627 710000 18                 TRA     s:19580

      822    19572    6                   CASE( %FILE_DIR, %DEL_ACCT, %CLEANUP_ACCT );

      823    19573    6                     REBUILD_BUF.START.ACCT.ACCT# = SOURCE_DCB$->F$DCB.ACCT#;

  19573 18 001605   200014 471500                    LDP1    SOURCE_DCB$,,AUTO
        18 001606   100020 237100                    LDAQ    16,,PR1
        18 001607   000000 755000 xsym               STA     REBUILD_BUF
        18 001610   000001 756000 xsym               STQ     REBUILD_BUF+1

      824    19574    6                     REBUILD_BUF.START.FILE.L# = FIRST_FILE.L#;

  19574 18 001611   000007 236000 xsym               LDQ     FIRST_FILE+7
        18 001612   000033 736000                    QLS     27
        18 001613   000002 552040 xsym               STBQ    REBUILD_BUF+2,'40'O

      825    19575    6                     REBUILD_BUF.START.FILE.NAME# = FIRST_FILE.NAME#;

  19575 18 001614   040000 100400                    MLR     fill='040'O
        18 001615   000000 000037 xsym               ADSC9   FIRST_FILE               cn=0,n=31
        18 001616   000002 200037 xsym               ADSC9   REBUILD_BUF+2            cn=1,n=31
        18 001617   001627 710000 18                 TRA     s:19580

      826    19576    6                   CASE( ELSE);            /* All file types                     */

      827    19577    6                     REBUILD_BUF.START.ACCT.ACCT# = SOURCE_DCB$->F$DCB.ACCT#;

  19577 18 001620   200014 471500                    LDP1    SOURCE_DCB$,,AUTO
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:172  
        18 001621   100020 237100                    LDAQ    16,,PR1
        18 001622   000000 755000 xsym               STA     REBUILD_BUF
        18 001623   000001 756000 xsym               STQ     REBUILD_BUF+1

      828    19578    6                     REBUILD_BUF.START.FILE = SOURCE_DCB$->F$DCB.NAME#;

  19578 18 001624   000000 100500                    MLR     fill='000'O
        18 001625   100010 000040                    ADSC9   8,,PR1                   cn=0,n=32
        18 001626   000002 000040 xsym               ADSC9   REBUILD_BUF+2            cn=0,n=32

      829    19579    6                   END;

      830    19580    5                  REBUILD_BUF.VOLUME = SOURCE_DCB$->F$DCB.VOL#;

  19580 18 001627   200014 471500                    LDP1    SOURCE_DCB$,,AUTO
        18 001630   100043 236100                    LDQ     35,,PR1
        18 001631   000014 552040 xsym               STBQ    REBUILD_BUF+12,'40'O

      831    19581    5                  REBUILD_BUF.FSN = TAPE_FSN;

  19581 18 001632   000000 720000 xsym               LXL0    TAPE_FSN
        18 001633   000013 440000 xsym               SXL0    REBUILD_BUF+11

      832    19582    5                  REBUILD_BUF.TSN = TAPE_SN;

  19582 18 001634   040000 100400                    MLR     fill='040'O
        18 001635   000000 000006 xsym               ADSC9   TAPE_SN                  cn=0,n=6
        18 001636   000012 000006 xsym               ADSC9   REBUILD_BUF+10           cn=0,n=6

      833    19583    5                  REBUILD_BUF.DEN = M$TAPE00$->F$DCB.DENSITY#;

  19583 18 001637   000000 473400 xsym               LDP3    M$TAPE00$
        18 001640   300043 236100                    LDQ     35,,PR3
        18 001641   000025 736000                    QLS     21
        18 001642   000014 676000 xsym               ERQ     REBUILD_BUF+12
        18 001643   000770 376003                    ANQ     504,DU
        18 001644   000014 656000 xsym               ERSQ    REBUILD_BUF+12
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:173  

      834    19584    5                  REBUILD_BUF.DIR = SAVE_DISK_OPTION_DIR;

  19584 18 001645   200041 236100                    LDQ     SAVE_DISK_OPTION_DIR,,AUTO
        18 001646   000017 772000                    QRL     15
        18 001647   000014 676000 xsym               ERQ     REBUILD_BUF+12
        18 001650   000004 376003                    ANQ     4,DU
        18 001651   000014 656000 xsym               ERSQ    REBUILD_BUF+12

      835    19585    5                  REBUILD_BUF.PAD = DISK_OPTION.PAD;

  19585 18 001652   000000 236000 xsym               LDQ     DISK_OPTION
        18 001653   000014 772000                    QRL     12
        18 001654   000014 676000 xsym               ERQ     REBUILD_BUF+12
        18 001655   000002 376003                    ANQ     2,DU
        18 001656   000014 656000 xsym               ERSQ    REBUILD_BUF+12

      836    19586    5                  REBUILD_BUF.IOERRORC = TAPE_OPTION.IOERRORC;

  19586 18 001657   000002 236000 xsym               LDQ     TAPE_OPTION+2
        18 001660   000014 772000                    QRL     12
        18 001661   000014 676000 xsym               ERQ     REBUILD_BUF+12
        18 001662   000001 376003                    ANQ     1,DU
        18 001663   000014 656000 xsym               ERSQ    REBUILD_BUF+12

      837    19587    5                  WRITE_REBUILD.BUF_ = VECTOR(REBUILD_BUF);

  19587 18 001664   000044 237000 19                 LDAQ    36
        18 001665   000004 757000 xsym               STAQ    WRITE_REBUILD+4

      838    19588    5                  WRITE_REBUILD.KEY_ = VECTOR(REBUILD_KEY);

  19588 18 001666   000000 236000 xsym               LDQ     REBUILD_KEY
        18 001667   000033 772000                    QRL     27
        18 001670   000001 621006                    EAX1    1,QL
        18 001671   000000 635011                    EAA     0,X1
        18 001672   000002 771000                    ARL     2
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:174  
        18 001673   000140 135007                    SBLA    96,DL
        18 001674   000046 236000 19                 LDQ     38
        18 001675   000002 757000 xsym               STAQ    WRITE_REBUILD+2

      839    19589    5                  CALL M$WRITE( WRITE_REBUILD ) ALTRET(JUSTSTOP);

  19589 18 001676   000000 630400 xsym               EPPR0   WRITE_REBUILD
        18 001677   440001 713400                    CLIMB   alt,write
        18 001700   401400 401760                    pmme    nvectors=4
        18 001701   004166 702000 18                 TSX2    JUSTSTOP

      840    19590
      841    19591    5                  DISK_OPTION.DIR = SAVE_DISK_OPTION_DIR;

  19591 18 001702   200041 236100                    LDQ     SAVE_DISK_OPTION_DIR,,AUTO
        18 001703   000000 676000 xsym               ERQ     DISK_OPTION
        18 001704   400000 376003                    ANQ     -131072,DU
        18 001705   000000 656000 xsym               ERSQ    DISK_OPTION

      842    19592    5                  END;

  19592 18 001706   002015 710000 18                 TRA     s:19631

      843    19593    5                ELSE DO;

      844    19594    5   OPEN_TAPE_FILE:
      845    19595    5                  CALL FLC$TAPE_OPEN_NEXT( SOURCE_DCB$, FPARAM_, ERR )

  19595 18 001707   200020 630500       OPEN_TAPE_F* EPPR0   ERR,,AUTO
        18 001710   200126 450500                    STP0    @DISP+3,,AUTO
        18 001711   200016 631500                    EPPR1   FPARAM_,,AUTO
        18 001712   200125 451500                    STP1    @DISP+2,,AUTO
        18 001713   200014 633500                    EPPR3   SOURCE_DCB$,,AUTO
        18 001714   200124 453500                    STP3    @DISP+1,,AUTO
        18 001715   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 001716   000021 631400 xsym               EPPR1   B_VECTNIL+17
        18 001717   000000 701000 xent               TSX1    FLC$TAPE_OPEN_NEXT
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:175  
        18 001720   001722 702000 18                 TSX2    s:19602
        18 001721   002015 710000 18                 TRA     s:19631

      846    19596    6                   WHENALTRETURN DO;

      847    19597        /***
      848    19598         *** If end of volume on first attempt to find file on tape (on an OPEN
      849    19599         *** specifying one file per line), rewind and search from the beginning
      850    19600         *** of tape.
      851    19601         ***/
      852    19602    6                     IF (ERR.CODE = %E$EOSET AND SAVE_ERR.CODE ~= %E$EOSET) /* 1st? */

  19602 18 001722   200020 236100                    LDQ     ERR,,AUTO
        18 001723   377770 376007                    ANQ     131064,DL
        18 001724   013140 116007                    CMPQ    5728,DL
        18 001725   001776 601000 18                 TNZ     s:19624
        18 001726   200021 236100                    LDQ     SAVE_ERR,,AUTO
        18 001727   377770 376007                    ANQ     131064,DL
        18 001730   013140 116007                    CMPQ    5728,DL
        18 001731   001776 600000 18                 TZE     s:19624
        18 001732   200003 470500                    LDP0    @COMMAND,,AUTO
        18 001733   000000 235100                    LDA     0,,PR0
        18 001734   000011 115007                    CMPA    9,DL
        18 001735   001776 601000 18                 TNZ     s:19624
        18 001736   000003 236000 xsym               LDQ     TAPE_OPTION+3
        18 001737   777000 376003                    ANQ     -512,DU
        18 001740   047000 116003                    CMPQ    19968,DU
        18 001741   001776 601000 18                 TNZ     s:19624
        18 001742   000000 471400 xsym               LDP1    DISK_FILE_SPEC$
        18 001743   100000 235100                    LDA     0,,PR1
        18 001744   000001 115007                    CMPA    1,DL
        18 001745   001776 601000 18                 TNZ     s:19624
        18 001746   040100 106500                    CMPC    fill='040'O
        18 001747   100010 000037                    ADSC9   8,,PR1                   cn=0,n=31
        18 001750   100022 000037                    ADSC9   18,,PR1                  cn=0,n=31
        18 001751   001776 601000 18                 TNZ     s:19624

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:176  
      853    19603    6                       AND (COMMAND = %RESTORE /* Open input command?            */
      854    19604    6                       AND TAPE_OPTION.OPEN_FUNCTION = %OPEN_INPUT)
      855    19605    6                       AND (DISK_FILE_SPEC.NBR = 1 /* One file per line copy?    */
      856    19606    6                       AND DISK_FILE_SPEC.SPEC.START.FILE.NAME#(0) =
      857    19607    6                       DISK_FILE_SPEC.SPEC.STOP.FILE.NAME#(0))
      858    19608    7                      THEN DO;        /* Check if EOSET after file was copied    */

      859    19609    7                        IF SAVE_DCB$->F$DCB.NAME#.C = DISK_FILE_SPEC.SPEC.START.FILE.
             19609                                 NAME#(0)

  19609 18 001752   200025 473500                    LDP3    SAVE_DCB$,,AUTO
        18 001753   040100 106500                    CMPC    fill='040'O
        18 001754   300010 200037                    ADSC9   8,,PR3                   cn=1,n=31
        18 001755   100010 000037                    ADSC9   8,,PR1                   cn=0,n=31
        18 001756   001763 601000 18                 TNZ     s:19612
        18 001757   040100 106500                    CMPC    fill='040'O
        18 001760   300020 000010                    ADSC9   16,,PR3                  cn=0,n=8
        18 001761   100006 000010                    ADSC9   6,,PR1                   cn=0,n=8
        18 001762   003731 600000 18                 TZE     CHKALT

      860    19610    7                          AND SAVE_DCB$->F$DCB.ACCT# = DISK_FILE_SPEC.SPEC.START.ACCT.
             19610                                   ACCT#(0)
      861    19611    7                         THEN GOTO CHKALT;
      862    19612    7                        SAVE_ERR = ERR; /* File not found, rewind and try again  */

  19612 18 001763   200020 236100                    LDQ     ERR,,AUTO
        18 001764   200021 756100                    STQ     SAVE_ERR,,AUTO

      863    19613    7                        REWIND_TAPE.V.PSN# = TAPE_SN;

  19613 18 001765   040000 100400                    MLR     fill='040'O
        18 001766   000000 000006 xsym               ADSC9   TAPE_SN                  cn=0,n=6
        18 001767   003305 400006 2                  ADSC9   REWIND_TAPE+3            cn=2,n=6

      864    19614    7                        CALL M$REW( REWIND_TAPE )

  19614 18 001770   003302 630400 2                  EPPR0   REWIND_TAPE
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:177  
        18 001771   440006 713400                    CLIMB   alt,+16390
        18 001772   400000 401760                    pmme    nvectors=1
        18 001773   001775 702000 18                 TSX2    s:19617
        18 001774   001775 710000 18                 TRA     s:19617

      865    19615    8                         WHENALTRETURN DO;

      866    19616    8                           END;

      867    19617    7                        GOTO OPEN_TAPE_FILE;

  19617 18 001775   001707 710000 18                 TRA     OPEN_TAPE_FILE

      868    19618    7                        END;
      869    19619    7                      ELSE DO;

      870    19620        /***
      871    19621         *** If a block count error as a result of trying to continue after a tape read
      872    19622         *** or an I/O error was encountered, continue processing.
      873    19623         ***/
      874    19624    7                        IF (TAPE_OPEN.V.IOERROK# AND ERR.CODE = %E$BLKCNT)

  19624 18 001776   000060 236000 xsym               LDQ     TAPE_OPEN+48
        18 001777   003000 316003                    CANQ    1536,DU
        18 002000   002005 600000 18                 TZE     s:19624+7
        18 002001   200020 236100                    LDQ     ERR,,AUTO
        18 002002   377770 376007                    ANQ     131064,DL
        18 002003   013250 116007                    CMPQ    5800,DL
        18 002004   001707 600000 18                 TZE     OPEN_TAPE_FILE
        18 002005   000060 236000 xsym               LDQ     TAPE_OPEN+48
        18 002006   003000 316003                    CANQ    1536,DU
        18 002007   002014 600000 18                 TZE     s:19627
        18 002010   200020 236100                    LDQ     ERR,,AUTO
        18 002011   377770 376007                    ANQ     131064,DL
        18 002012   000100 116007                    CMPQ    64,DL
        18 002013   001707 600000 18                 TZE     OPEN_TAPE_FILE

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:178  
      875    19625    7                          OR (TAPE_OPEN.V.IOERROK# AND ERR.CODE = %E$IO_ERR)
      876    19626    7                         THEN GOTO OPEN_TAPE_FILE;
      877    19627    7                         ELSE GOTO CHKALT;

  19627 18 002014   003731 710000 18                 TRA     CHKALT

      878    19628    7                        END;
      879    19629    6                     END;
      880    19630    5                  END;

      881    19631    4               SAVE_ERR = '0'B;

  19631 18 002015   200021 450100                    STZ     SAVE_ERR,,AUTO

      882    19632    4               SOURCE_FILE_TYPE = BLK_TAG.TYPE;

  19632 18 002016   000000 470400 xsym               LDP0    BLK_TAG$
        18 002017   000000 236100                    LDQ     0,,PR0
        18 002020   000077 376007                    ANQ     63,DL
        18 002021   200023 756100                    STQ     SOURCE_FILE_TYPE,,AUTO

      883    19633    4               SAVE_SN = TAPE_SN;

  19633 18 002022   040100 100400                    MLR     fill='040'O
        18 002023   000000 000006 xsym               ADSC9   TAPE_SN                  cn=0,n=6
        18 002024   200036 000006                    ADSC9   SAVE_SN,,AUTO            cn=0,n=6

      884    19634    4               SAVE_FSN = TAPE_FSN;

  19634 18 002025   000000 235000 xsym               LDA     TAPE_FSN
        18 002026   200040 755100                    STA     SAVE_FSN,,AUTO

      885    19635    4             END;

      886    19636
      887    19637    4            DO CASE( SOURCE_FILE_TYPE );

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:179  
  19637 18 002027   200023 235100                    LDA     SOURCE_FILE_TYPE,,AUTO
        18 002030   000012 115007                    CMPA    10,DL
        18 002031   002033 602005 18                 TNC     s:19637+4,AL
        18 002032   003557 710000 18                 TRA     CASE_END
        18 002033   002335 710000 18                 TRA     s:19698
        18 002034   002335 710000 18                 TRA     s:19698
        18 002035   002335 710000 18                 TRA     s:19698
        18 002036   002335 710000 18                 TRA     s:19698
        18 002037   002045 710000 18                 TRA     s:19640
        18 002040   002045 710000 18                 TRA     s:19640
        18 002041   002045 710000 18                 TRA     s:19640
        18 002042   002045 710000 18                 TRA     s:19640
        18 002043   002335 710000 18                 TRA     s:19698
        18 002044   002335 710000 18                 TRA     s:19698

      888    19638
      889    19639    4             CASE( %FILE_DIR, %ACCT_DIR, %DEL_ACCT, %CLEANUP_ACCT );

      890    19640    4               IF NOT (TAPE_OPTION.CHECK AND COMMAND = %CHECK)

  19640 18 002045   000000 234000 xsym               SZN     TAPE_OPTION
        18 002046   002053 605000 18                 TPL     s:19642
        18 002047   200003 470500                    LDP0    @COMMAND,,AUTO
        18 002050   000000 235100                    LDA     0,,PR0
        18 002051   000003 115007                    CMPA    3,DL
        18 002052   002332 600000 18                 TZE     s:19695

      891    19641    5                THEN DO;

      892    19642    6                  DO CASE( DEST );

  19642 18 002053   200071 235100                    LDA     DEST,,AUTO
        18 002054   000002 115007                    CMPA    2,DL
        18 002055   002057 602005 18                 TNC     s:19642+4,AL
        18 002056   002153 710000 18                 TRA     s:19664
        18 002057   002072 710000 18                 TRA     s:19648
        18 002060   002061 710000 18                 TRA     s:19644
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:180  

      893    19643    6                   CASE( %DISK@ );

      894    19644    6                     CALL FLM_ACCOUNT_TO_DISK_HANDLING ALTRET(JUSTSTOP);

  19644 18 002061   005000 701000 18                 TSX1    FLM_ACCOUNT_TO_DISK_HANDLING
        18 002062   004166 702000 18                 TSX2    JUSTSTOP

      895    19645    6                     DEL_LIST_REC.TO_ACCT = TO_DISK_ACCT.ACCT#;

  19645 18 002063   000224 237000 2                  LDAQ    TO_DISK_ACCT
        18 002064   000175 755000 2                  STA     DEL_LIST_REC+17
        18 002065   000176 756000 2                  STQ     DEL_LIST_REC+18

      896    19646    6                     DEL_LIST_REC.TO_SN = TO_DISK_SN.SN#(0);

  19646 18 002066   040000 100400                    MLR     fill='040'O
        18 002067   000231 000006 2                  ADSC9   TO_DISK_SN+1             cn=0,n=6
        18 002070   000177 000010 2                  ADSC9   DEL_LIST_REC+19          cn=0,n=8
        18 002071   002153 710000 18                 TRA     s:19664

      897    19647    6                   CASE( %TAPE@ );

      898    19648    6                     CALL FLS$FILE_PACKER( SOURCE_DCB$, DCB#, FPARAM_, SAVE_SN,

  19648 18 002072   200003 236100                    LDQ     @COMMAND,,AUTO
        18 002073   200135 756100                    STQ     @DISP+10,,AUTO
        18 002074   200074 630500                    EPPR0   FIT_ONLY_SAVED,,AUTO
        18 002075   200134 450500                    STP0    @DISP+9,,AUTO
        18 002076   200073 631500                    EPPR1   ABORT,,AUTO
        18 002077   200133 451500                    STP1    @DISP+8,,AUTO
        18 002100   200020 633500                    EPPR3   ERR,,AUTO
        18 002101   200132 453500                    STP3    @DISP+7,,AUTO
        18 002102   000050 236000 19                 LDQ     40
        18 002103   200131 756100                    STQ     @DISP+6,,AUTO
        18 002104   200040 634500                    EPPR4   SAVE_FSN,,AUTO
        18 002105   200130 454500                    STP4    @DISP+5,,AUTO
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:181  
        18 002106   200036 635500                    EPPR5   SAVE_SN,,AUTO
        18 002107   200127 455500                    STP5    @DISP+4,,AUTO
        18 002110   200016 636500                    EPPR6   FPARAM_,,AUTO
        18 002111   200126 456500                    STP6    @DISP+3,,AUTO
        18 002112   200066 637500                    EPPR7   DCB#,,AUTO
        18 002113   200125 457500                    STP7    @DISP+2,,AUTO
        18 002114   200014 630500                    EPPR0   SOURCE_DCB$,,AUTO
        18 002115   200124 450500                    STP0    @DISP+1,,AUTO
        18 002116   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 002117   000047 631400 19                 EPPR1   39
        18 002120   000000 701000 xent               TSX1    FLS$FILE_PACKER
        18 002121   002123 702000 18                 TSX2    s:19655
        18 002122   002143 710000 18                 TRA     s:19661

      899    19649    6                       SAVE_FSN, CROSSED, ERR, ABORT, FIT_ONLY_SAVED, COMMAND )
      900    19650    7                      WHENALTRETURN DO;

      901    19651        /***
      902    19652         *** If disc read error, ouput error message and continue with processing
      903    19653         *** next file. Terminate on tape write error.
      904    19654        ***/
      905    19655    7                        IF ABORT

  19655 18 002123   200073 234100                    SZN     ABORT,,AUTO
        18 002124   004166 604000 18                 TMI     JUSTSTOP

      906    19656    7                         THEN GOTO JUSTSTOP;
      907    19657    7                        CALL FLI$RPT_ERR (E_BAD_TAPE_FILE, DCB#);

  19657 18 002125   200066 630500                    EPPR0   DCB#,,AUTO
        18 002126   200125 450500                    STP0    @DISP+2,,AUTO
        18 002127   000051 236000 19                 LDQ     41
        18 002130   200124 756100                    STQ     @DISP+1,,AUTO
        18 002131   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 002132   000020 631400 xsym               EPPR1   B_VECTNIL+16
        18 002133   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 002134   000000 011000                    NOP     0
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:182  

      908    19658    7                        IF FPT_EXIT.V.STEPCC# < %DISK_ERROR

  19658 18 002135   000004 236000 xsym               LDQ     FPT_EXIT+4
        18 002136   777000 376003                    ANQ     -512,DU
        18 002137   003000 116003                    CMPQ    1536,DU
        18 002140   002143 603000 18                 TRC     s:19661

      909    19659    7                         THEN FPT_EXIT.V.STEPCC# = %DISK_ERROR;

  19659 18 002141   003000 236003                    LDQ     1536,DU
        18 002142   000004 552040 xsym               STBQ    FPT_EXIT+4,'40'O

      910    19660    7                        END;

      911    19661    6                     DEL_LIST_REC.TO_ACCT = ' ';

  19661 18 002143   000035 235000 xsym               LDA     B_VECTNIL+29
        18 002144   000035 236000 xsym               LDQ     B_VECTNIL+29
        18 002145   000175 755000 2                  STA     DEL_LIST_REC+17
        18 002146   000176 756000 2                  STQ     DEL_LIST_REC+18

      912    19662    6                     DEL_LIST_REC.TO_SN = ' ';

  19662 18 002147   000035 235000 xsym               LDA     B_VECTNIL+29
        18 002150   000035 236000 xsym               LDQ     B_VECTNIL+29
        18 002151   000177 755000 2                  STA     DEL_LIST_REC+19
        18 002152   000200 756000 2                  STQ     DEL_LIST_REC+20

      913    19663    6                   END;

      914    19664    5                  IF DISK_OPTION.DELETE

  19664 18 002153   000002 236000 xsym               LDQ     DISK_OPTION+2
        18 002154   040000 316003                    CANQ    16384,DU
        18 002155   002164 601000 18                 TNZ     s:19666
        18 002156   000000 236000 xsym               LDQ     DISK_OPTION
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:183  
        18 002157   100000 316003                    CANQ    32768,DU
        18 002160   002170 600000 18                 TZE     s:19667
        18 002161   200023 235100                    LDA     SOURCE_FILE_TYPE,,AUTO
        18 002162   000006 115007                    CMPA    6,DL
        18 002163   002170 601000 18                 TNZ     s:19667

      915    19665    5                    OR (DISK_OPTION.CLEANUP AND SOURCE_FILE_TYPE = %DEL_ACCT)
      916    19666    5                   THEN CALL FLM_ADD_TO_DEL_LIST( '0'B ) ALTRET( JUSTSTOP );

  19666 18 002164   000052 236000 19                 LDQ     42
        18 002165   200105 756100                    STQ     DCB#+2,,AUTO
        18 002166   012132 701000 18                 TSX1    FLM_ADD_TO_DEL_LIST
        18 002167   004166 702000 18                 TSX2    JUSTSTOP

      917    19667    5                  IF SOURCE = %TAPE@

  19667 18 002170   200070 235100                    LDA     SOURCE,,AUTO
        18 002171   002215 601000 18                 TNZ     s:19671

      918    19668    5                   THEN CALL FLP$WR_FILE_INFO( SOURCE_DCB$, FPARAM_.PTR$, TAPE_SN,

  19668 18 002172   000052 236000 19                 LDQ     42
        18 002173   200134 756100                    STQ     @DISP+9,,AUTO
        18 002174   200072 630500                    EPPR0   PR_DEV_LT,,AUTO
        18 002175   200133 450500                    STP0    @DISP+8,,AUTO
        18 002176   200020 631500                    EPPR1   ERR,,AUTO
        18 002177   200132 451500                    STP1    @DISP+7,,AUTO
        18 002200   000054 237000 19                 LDAQ    44
        18 002201   200130 757100                    STAQ    @DISP+5,,AUTO
        18 002202   000056 237000 19                 LDAQ    46
        18 002203   200126 757100                    STAQ    @DISP+3,,AUTO
        18 002204   200017 633500                    EPPR3   FPARAM_+1,,AUTO
        18 002205   200125 453500                    STP3    @DISP+2,,AUTO
        18 002206   200014 634500                    EPPR4   SOURCE_DCB$,,AUTO
        18 002207   200124 454500                    STP4    @DISP+1,,AUTO
        18 002210   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 002211   000053 631400 19                 EPPR1   43
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:184  
        18 002212   000000 701000 xent               TSX1    FLP$WR_FILE_INFO
        18 002213   004166 702000 18                 TSX2    JUSTSTOP
        18 002214   002241 710000 18                 TRA     s:19674

      919    19669    5                       TAPE_FSN, CROSSED, '1'B, ERR, PR_DEV_LT, '0'B )
      920    19670    5                       ALTRET( JUSTSTOP );
      921    19671    5                   ELSE CALL FLP$WR_FILE_INFO( SOURCE_DCB$, FPARAM_.PTR$, SAVE_SN,

  19671 18 002215   000052 236000 19                 LDQ     42
        18 002216   200134 756100                    STQ     @DISP+9,,AUTO
        18 002217   200072 630500                    EPPR0   PR_DEV_LT,,AUTO
        18 002220   200133 450500                    STP0    @DISP+8,,AUTO
        18 002221   200020 631500                    EPPR1   ERR,,AUTO
        18 002222   200132 451500                    STP1    @DISP+7,,AUTO
        18 002223   000054 237000 19                 LDAQ    44
        18 002224   200130 757100                    STAQ    @DISP+5,,AUTO
        18 002225   200040 633500                    EPPR3   SAVE_FSN,,AUTO
        18 002226   200127 453500                    STP3    @DISP+4,,AUTO
        18 002227   200036 634500                    EPPR4   SAVE_SN,,AUTO
        18 002230   200126 454500                    STP4    @DISP+3,,AUTO
        18 002231   200017 635500                    EPPR5   FPARAM_+1,,AUTO
        18 002232   200125 455500                    STP5    @DISP+2,,AUTO
        18 002233   200014 636500                    EPPR6   SOURCE_DCB$,,AUTO
        18 002234   200124 456500                    STP6    @DISP+1,,AUTO
        18 002235   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 002236   000053 631400 19                 EPPR1   43
        18 002237   000000 701000 xent               TSX1    FLP$WR_FILE_INFO
        18 002240   004166 702000 18                 TSX2    JUSTSTOP

      922    19672    5                       SAVE_FSN, CROSSED, '1'B, ERR, PR_DEV_LT, '0'B )
      923    19673    5                       ALTRET (JUSTSTOP );
      924    19674    6                  DO SELECT( ERR.CODE );

  19674 18 002241   200020 236100                    LDQ     ERR,,AUTO
        18 002242   000003 772000                    QRL     3
        18 002243   037777 376007                    ANQ     16383,DL
        18 002244   000154 116007                    CMPQ    108,DL
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:185  
        18 002245   002256 602000 18                 TNC     s:19674+13
        18 002246   002274 600000 18                 TZE     s:19675
        18 002247   000175 116007                    CMPQ    125,DL
        18 002250   002275 602000 18                 TNC     s:19678
        18 002251   002274 600000 18                 TZE     s:19675
        18 002252   000003 736000                    QLS     3
        18 002253   003520 116007                    CMPQ    1872,DL
        18 002254   002275 601000 18                 TNZ     s:19678
        18 002255   002274 710000 18                 TRA     s:19675
        18 002256   200020 236100                    LDQ     ERR,,AUTO
        18 002257   000003 772000                    QRL     3
        18 002260   037777 376007                    ANQ     16383,DL
        18 002261   000076 116007                    CMPQ    62,DL
        18 002262   002270 602000 18                 TNC     s:19674+23
        18 002263   002274 600000 18                 TZE     s:19675
        18 002264   000003 736000                    QLS     3
        18 002265   001020 116007                    CMPQ    528,DL
        18 002266   002275 601000 18                 TNZ     s:19678
        18 002267   002274 710000 18                 TRA     s:19675
        18 002270   200020 236100                    LDQ     ERR,,AUTO
        18 002271   377770 316007                    CANQ    131064,DL
        18 002272   002274 600000 18                 TZE     s:19675
        18 002273   002275 710000 18                 TRA     s:19678

      925    19675    6                     SELECT( 0, %E$FDEOF, %E$ADEOF, %E$NEWREC, %E$NOKEY, %E$NOPROC );

  19675 18 002274   002305 710000 18                 TRA     s:19680

      926    19676                       /* Normally expected "errors" (internally used error codes)    */
      927    19677    6                     SELECT( ELSE );

      928    19678    6                  CALL FLI$RPT_ERR( ERR, DCB# );

  19678 18 002275   200066 630500                    EPPR0   DCB#,,AUTO
        18 002276   200125 450500                    STP0    @DISP+2,,AUTO
        18 002277   200020 631500                    EPPR1   ERR,,AUTO
        18 002300   200124 451500                    STP1    @DISP+1,,AUTO
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:186  
        18 002301   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 002302   000020 631400 xsym               EPPR1   B_VECTNIL+16
        18 002303   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 002304   000000 011000                    NOP     0

      929    19679    6                     END;

      930    19680    5               IF SOURCE = %DISK@

  19680 18 002305   200070 235100                    LDA     SOURCE,,AUTO
        18 002306   000001 115007                    CMPA    1,DL
        18 002307   002316 601000 18                 TNZ     s:19690

      931    19681    5                THEN CALL FLN$DISK_CLOSE_NEXT( DCB_NBR );

  19681 18 002310   200065 630500                    EPPR0   DCB_NBR,,AUTO
        18 002311   200124 450500                    STP0    @DISP+1,,AUTO
        18 002312   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 002313   000017 631400 xsym               EPPR1   B_VECTNIL+15
        18 002314   000000 701000 xent               TSX1    FLN$DISK_CLOSE_NEXT
        18 002315   000000 011000                    NOP     0

      932    19682        /***
      933    19683         *** If 1st pass on DUAL INCR (deleting files), must delete files on the dual
      934    19684         *** packset which don't exist on the prime packset. FM does not maintain
      935    19685         *** deleted file entries in directory for NOBACKUP accounts so DELF search
      936    19686         *** won't work as when used for BACKUP,DEF BACKUP accounts. Also deleted file
      937    19687         *** entries will not exist if the command sequence DUAL ALL,SAVE,DUAL INCR IS
      938    19688         *** executed (files from a backup acct. deleted prior to a SAVE).
      939    19689         ***/
      940    19690    5               IF COMMAND = %REAL_DUAL

  19690 18 002316   200003 470500                    LDP0    @COMMAND,,AUTO
        18 002317   000000 235100                    LDA     0,,PR0
        18 002320   000055 115007                    CMPA    45,DL
        18 002321   002332 601000 18                 TNZ     s:19695
        18 002322   000001 236000 xsym               LDQ     TAPE_OPTION+1
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:187  
        18 002323   700000 376003                    ANQ     -32768,DU
        18 002324   300000 116003                    CMPQ    98304,DU
        18 002325   002332 601000 18                 TNZ     s:19695
        18 002326   000000 234000 xsym               SZN     DISK_SRCHCOND
        18 002327   002332 605000 18                 TPL     s:19695

      941    19691    5                 AND TAPE_OPTION.PROTTYPE = %INCREMENTAL
      942    19692    5                 AND DISK_SRCHCOND.DELF#
      943    19693    5                THEN CALL FLM_DELETE_DUAL_FILES; /* Del. files on dual packset   */

  19693 18 002330   010305 701000 18                 TSX1    FLM_DELETE_DUAL_FILES
        18 002331   000000 011000                    NOP     0

      944    19694    5                  END;

      945    19695    4               ANY_FILES_FOUND = '1'B;

  19695 18 002332   400000 236003                    LDQ     -131072,DU
        18 002333   200076 756100                    STQ     ANY_FILES_FOUND,,AUTO
        18 002334   003557 710000 18                 TRA     CASE_END

      946    19696
      947    19697    4             CASE( %INACTIVE_FILE, %REG_FILE, %ACUP_FILE, %DEL_FILE, %CLEANUP_FILE, %
             19697                      IDS_FAST_FILE );

      948    19698    4               IF ERR AND SOURCE = %DISK@

  19698 18 002335   200020 236100                    LDQ     ERR,,AUTO
        18 002336   002507 600000 18                 TZE     s:19737
        18 002337   200070 235100                    LDA     SOURCE,,AUTO
        18 002340   000001 115007                    CMPA    1,DL
        18 002341   002507 601000 18                 TNZ     s:19737

      949    19699    5                THEN DO;

      950    19700        /***
      951    19701         *** If file busy on a SAVE,BACKUP,TRANSPORT or TRANSFER (PROTECTED), try
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:188  
      952    19702         *** opening with fun=update,share=in as it should be permissable to save or
      953    19703         *** copy a file already opened share=all,fun=in.
      954    19704        ***/
      955    19705    5                  IF ERR.CODE = %E$FILEBUSY

  19705 18 002342   200020 236100                    LDQ     ERR,,AUTO
        18 002343   377770 376007                    ANQ     131064,DL
        18 002344   001550 116007                    CMPQ    872,DL
        18 002345   002410 601000 18                 TNZ     s:19722

      956    19706    6                   THEN DO;

      957    19707    6                     IF (COMMAND = %SAVE)

  19707 18 002346   200003 470500                    LDP0    @COMMAND,,AUTO
        18 002347   000000 235100                    LDA     0,,PR0
        18 002350   000006 115007                    CMPA    6,DL
        18 002351   002376 600000 18                 TZE     s:19713
        18 002352   000010 115007                    CMPA    8,DL
        18 002353   002376 600000 18                 TZE     s:19713
        18 002354   000045 115007                    CMPA    37,DL
        18 002355   002362 601000 18                 TNZ     s:19707+12
        18 002356   000001 236000 xsym               LDQ     TAPE_OPTION+1
        18 002357   700000 376003                    ANQ     -32768,DU
        18 002360   200000 116003                    CMPQ    65536,DU
        18 002361   002376 601000 18                 TNZ     s:19713
        18 002362   000046 115007                    CMPA    38,DL
        18 002363   002370 601000 18                 TNZ     s:19707+18
        18 002364   000001 236000 xsym               LDQ     TAPE_OPTION+1
        18 002365   700000 376003                    ANQ     -32768,DU
        18 002366   200000 116003                    CMPQ    65536,DU
        18 002367   002376 601000 18                 TNZ     s:19713
        18 002370   000043 115007                    CMPA    35,DL
        18 002371   002410 601000 18                 TNZ     s:19722
        18 002372   000001 236000 xsym               LDQ     TAPE_OPTION+1
        18 002373   700000 376003                    ANQ     -32768,DU
        18 002374   200000 116003                    CMPQ    65536,DU
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:189  
        18 002375   002410 600000 18                 TZE     s:19722

      958    19708    6                       OR (COMMAND = %BACKUP)
      959    19709    6                       OR (COMMAND = %OPEN_CREATE AND TAPE_OPTION.PROTTYPE ~= %
             19709                                UNPROTECTED)
      960    19710    6                       OR (COMMAND = %OPEN_EXTEND AND TAPE_OPTION.PROTTYPE ~= %
             19710                                UNPROTECTED)
      961    19711    6                       OR (COMMAND = %DUAL AND TAPE_OPTION.PROTTYPE ~= %UNPROTECTED)
      962    19712    7                      THEN DO;

      963    19713    7                        DISK_REOPEN.V.DCB# = DCB#;

  19713 18 002376   200066 720100                    LXL0    DCB#,,AUTO
        18 002377   002600 740000 2                  STX0    DISK_REOPEN+36

      964    19714    7                        DISK_REOPEN.FPARAM_ = FPARAM_;

  19714 18 002400   200016 237100                    LDAQ    FPARAM_,,AUTO
        18 002401   002564 757000 2                  STAQ    DISK_REOPEN+24

      965    19715    7                        CALL M$OPEN( DISK_REOPEN )

  19715 18 002402   002534 630400 2                  EPPR0   DISK_REOPEN
        18 002403   450000 713400                    CLIMB   alt,open
        18 002404   410400 401760                    pmme    nvectors=18
        18 002405   002410 702000 18                 TSX2    s:19722

      966    19716    8                         WHENRETURN DO;    /* Was able to open busy file         */

      967    19717    8                           ERR = '0'B;

  19717 18 002406   200020 450100                    STZ     ERR,,AUTO

      968    19718    8                           GOTO PROCESS_DISK_FILE;

  19718 18 002407   001342 710000 18                 TRA     PROCESS_DISK_FILE

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:190  
      969    19719    8                           END;
      970    19720    7                        END;

      971    19721    6                     END;

      972    19722    5                  CALL FLP$WR_FILE_INFO( SOURCE_DCB$, ADDR(NIL), SAVE_SN, SAVE_FSN,
             19722                           CROSSED, , ERR, PR_DEV_LT,'0'B);

  19722 18 002410   000001 236000 xsym               LDQ     B_VECTNIL+1
        18 002411   200124 756100                    STQ     @DISP+1,,AUTO
        18 002412   000052 236000 19                 LDQ     42
        18 002413   200135 756100                    STQ     @DISP+10,,AUTO
        18 002414   200072 630500                    EPPR0   PR_DEV_LT,,AUTO
        18 002415   200134 450500                    STP0    @DISP+9,,AUTO
        18 002416   200020 631500                    EPPR1   ERR,,AUTO
        18 002417   200133 451500                    STP1    @DISP+8,,AUTO
        18 002420   000001 236000 xsym               LDQ     B_VECTNIL+1
        18 002421   200132 756100                    STQ     @DISP+7,,AUTO
        18 002422   000050 236000 19                 LDQ     40
        18 002423   200131 756100                    STQ     @DISP+6,,AUTO
        18 002424   200040 633500                    EPPR3   SAVE_FSN,,AUTO
        18 002425   200130 453500                    STP3    @DISP+5,,AUTO
        18 002426   200036 634500                    EPPR4   SAVE_SN,,AUTO
        18 002427   200127 454500                    STP4    @DISP+4,,AUTO
        18 002430   200124 635500                    EPPR5   @DISP+1,,AUTO
        18 002431   200126 455500                    STP5    @DISP+3,,AUTO
        18 002432   200014 636500                    EPPR6   SOURCE_DCB$,,AUTO
        18 002433   200125 456500                    STP6    @DISP+2,,AUTO
        18 002434   200125 630500                    EPPR0   @DISP+2,,AUTO
        18 002435   000053 631400 19                 EPPR1   43
        18 002436   000000 701000 xent               TSX1    FLP$WR_FILE_INFO
        18 002437   000000 011000                    NOP     0

      973    19723    5                  CALL FLI$RPT_ERR( ERR, DCB# );

  19723 18 002440   200066 630500                    EPPR0   DCB#,,AUTO
        18 002441   200125 450500                    STP0    @DISP+2,,AUTO
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:191  
        18 002442   200020 631500                    EPPR1   ERR,,AUTO
        18 002443   200124 451500                    STP1    @DISP+1,,AUTO
        18 002444   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 002445   000020 631400 xsym               EPPR1   B_VECTNIL+16
        18 002446   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 002447   000000 011000                    NOP     0

      974    19724    5                  IF ERR.CODE = %E$FILEBUSY OR ERR.CODE = %E$NOACCESS

  19724 18 002450   200020 236100                    LDQ     ERR,,AUTO
        18 002451   377770 376007                    ANQ     131064,DL
        18 002452   001550 116007                    CMPQ    872,DL
        18 002453   002472 600000 18                 TZE     s:19729
        18 002454   001640 116007                    CMPQ    928,DL
        18 002455   002472 600000 18                 TZE     s:19729
        18 002456   001710 116007                    CMPQ    968,DL
        18 002457   002472 600000 18                 TZE     s:19729
        18 002460   001610 116007                    CMPQ    904,DL
        18 002461   002472 600000 18                 TZE     s:19729
        18 002462   001740 116007                    CMPQ    992,DL
        18 002463   002472 600000 18                 TZE     s:19729
        18 002464   002570 116007                    CMPQ    1400,DL
        18 002465   002472 600000 18                 TZE     s:19729
        18 002466   000100 116007                    CMPQ    64,DL
        18 002467   002472 600000 18                 TZE     s:19729
        18 002470   001350 116007                    CMPQ    744,DL
        18 002471   004166 601000 18                 TNZ     JUSTSTOP

      975    19725    5                    OR ERR.CODE = %E$JRNLERR OR ERR.CODE = %E$NOFILE
      976    19726    5                    OR ERR.CODE = %E$NOSHRDS OR ERR.CODE = %E$BADFIT
      977    19727    5                    OR ERR.CODE = %E$IOERR   OR ERR.CODE = %E$BROKEN
      978    19728    6                   THEN DO;

      979    19729    6                     IF FPT_EXIT.V.STEPCC#<%MINOR_ERROR

  19729 18 002472   000004 236000 xsym               LDQ     FPT_EXIT+4
        18 002473   777000 316003                    CANQ    -512,DU
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:192  
        18 002474   002500 601000 18                 TNZ     IGNORE_FILE

      980    19730    6                      THEN FPT_EXIT.V.STEPCC# = %MINOR_ERROR;

  19730 18 002475   001000 236003                    LDQ     512,DU
        18 002476   000004 552040 xsym               STBQ    FPT_EXIT+4,'40'O

      981    19731    6                     END;

  19731 18 002477   002500 710000 18                 TRA     IGNORE_FILE

  19729 18 002500                       IGNORE_FILE  null
      982    19732    5                   ELSE GOTO JUSTSTOP;
      983    19733    5   IGNORE_FILE:   ;
      984    19734    5                  CALL FLN$DISK_CLOSE_NEXT( DCB_NBR );

  19734 18 002500   200065 630500                    EPPR0   DCB_NBR,,AUTO
        18 002501   200124 450500                    STP0    @DISP+1,,AUTO
        18 002502   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 002503   000017 631400 xsym               EPPR1   B_VECTNIL+15
        18 002504   000000 701000 xent               TSX1    FLN$DISK_CLOSE_NEXT
        18 002505   000000 011000                    NOP     0

      985    19735    5                  END;

  19735 18 002506   003555 710000 18                 TRA     s:19955

      986    19736    5                ELSE DO;

      987    19737    6                  DO CASE( SOURCE );

  19737 18 002507   200070 235100                    LDA     SOURCE,,AUTO
        18 002510   000002 115007                    CMPA    2,DL
        18 002511   002513 602005 18                 TNC     s:19737+4,AL
        18 002512   002670 710000 18                 TRA     s:19776
        18 002513   002645 710000 18                 TRA     s:19772
        18 002514   002515 710000 18                 TRA     s:19739
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:193  

      988    19738    6                   CASE( %DISK@ );

      989    19739    6                     CALL FLC$CRIT_CHECK( SOURCE_DCB$, FPARAM_.PTR$ ) ALTRET(
             19739                              IGNORE_FILE );

  19739 18 002515   200017 630500                    EPPR0   FPARAM_+1,,AUTO
        18 002516   200125 450500                    STP0    @DISP+2,,AUTO
        18 002517   200014 631500                    EPPR1   SOURCE_DCB$,,AUTO
        18 002520   200124 451500                    STP1    @DISP+1,,AUTO
        18 002521   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 002522   000020 631400 xsym               EPPR1   B_VECTNIL+16
        18 002523   000000 701000 xent               TSX1    FLC$CRIT_CHECK
        18 002524   002500 702000 18                 TSX2    IGNORE_FILE

      990    19740        /***
      991    19741         *** On a SAVE or BACKUP operation, if file attribute is nbackup, don't
      992    19742         *** save the file.
      993    19743        ***/
      994    19744    6                     IF (SOURCE_FILE_TYPE = %REG_FILE) AND (COMMAND = %BACKUP)

  19744 18 002525   200023 235100                    LDA     SOURCE_FILE_TYPE,,AUTO
        18 002526   002533 601000 18                 TNZ     s:19744+6
        18 002527   200003 470500                    LDP0    @COMMAND,,AUTO
        18 002530   000000 235100                    LDA     0,,PR0
        18 002531   000010 115007                    CMPA    8,DL
        18 002532   002541 600000 18                 TZE     s:19747
        18 002533   200023 235100                    LDA     SOURCE_FILE_TYPE,,AUTO
        18 002534   002612 601000 18                 TNZ     s:19762
        18 002535   200003 470500                    LDP0    @COMMAND,,AUTO
        18 002536   000000 235100                    LDA     0,,PR0
        18 002537   000006 115007                    CMPA    6,DL
        18 002540   002612 601000 18                 TNZ     s:19762

      995    19745    6                       OR (SOURCE_FILE_TYPE = %REG_FILE) AND (COMMAND = %SAVE)
      996    19746    7                      THEN DO;

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:194  
      997    19747    7                        IF NOT CODE03.DESC.BUPM

  19747 18 002541   200006 471500                    LDP1    CODE$,,AUTO
        18 002542   100001 236100                    LDQ     1,,PR1
        18 002543   000400 316003                    CANQ    256,DU
        18 002544   002612 601000 18                 TNZ     s:19762

      998    19748    8                         THEN DO;

      999    19749    8                           ERR.CODE = %E$CANT_SAVE_FILE;

  19749 18 002545   200020 236100                    LDQ     ERR,,AUTO
        18 002546   000060 376000 19                 ANQ     48
        18 002547   001560 276007                    ORQ     880,DL
        18 002550   200020 756100                    STQ     ERR,,AUTO

     1000    19750    8                           CALL FLP$WR_FILE_INFO( SOURCE_DCB$, ADDR(NIL), SAVE_SN,

  19750 18 002551   000001 236000 xsym               LDQ     B_VECTNIL+1
        18 002552   200124 756100                    STQ     @DISP+1,,AUTO
        18 002553   000052 236000 19                 LDQ     42
        18 002554   200135 756100                    STQ     @DISP+10,,AUTO
        18 002555   200072 633500                    EPPR3   PR_DEV_LT,,AUTO
        18 002556   200134 453500                    STP3    @DISP+9,,AUTO
        18 002557   200020 634500                    EPPR4   ERR,,AUTO
        18 002560   200133 454500                    STP4    @DISP+8,,AUTO
        18 002561   000001 236000 xsym               LDQ     B_VECTNIL+1
        18 002562   200132 756100                    STQ     @DISP+7,,AUTO
        18 002563   000050 236000 19                 LDQ     40
        18 002564   200131 756100                    STQ     @DISP+6,,AUTO
        18 002565   200040 635500                    EPPR5   SAVE_FSN,,AUTO
        18 002566   200130 455500                    STP5    @DISP+5,,AUTO
        18 002567   200036 636500                    EPPR6   SAVE_SN,,AUTO
        18 002570   200127 456500                    STP6    @DISP+4,,AUTO
        18 002571   200124 637500                    EPPR7   @DISP+1,,AUTO
        18 002572   200126 457500                    STP7    @DISP+3,,AUTO
        18 002573   200014 630500                    EPPR0   SOURCE_DCB$,,AUTO
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:195  
        18 002574   200125 450500                    STP0    @DISP+2,,AUTO
        18 002575   200125 630500                    EPPR0   @DISP+2,,AUTO
        18 002576   000053 631400 19                 EPPR1   43
        18 002577   000000 701000 xent               TSX1    FLP$WR_FILE_INFO
        18 002600   000000 011000                    NOP     0

     1001    19751    8                             SAVE_FSN, CROSSED, , ERR, PR_DEV_LT,'0'B);
     1002    19752    8                           CALL FLI$RPT_ERR( E_CANT_SAVE_FILE, DCB# );

  19752 18 002601   200066 630500                    EPPR0   DCB#,,AUTO
        18 002602   200125 450500                    STP0    @DISP+2,,AUTO
        18 002603   000061 236000 19                 LDQ     49
        18 002604   200124 756100                    STQ     @DISP+1,,AUTO
        18 002605   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 002606   000020 631400 xsym               EPPR1   B_VECTNIL+16
        18 002607   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 002610   000000 011000                    NOP     0

     1003    19753    8                           GOTO IGNORE_FILE;

  19753 18 002611   002500 710000 18                 TRA     IGNORE_FILE

     1004    19754    8                           END;
     1005    19755    7                        END;
     1006    19756        /***
     1007    19757         *** On a DUAL operation, don't move newly created :PRIME.$$EFT file or
     1008    19758         *** a :DUAL.$EFT file to dest. pack. :PRIME does not belong on the dest. pack
     1009    19759         *** and a source :DUAL will clobber the newly created :DUAL on the dest.
     1010    19760         *** pack or delete if it's a deleted file.
     1011    19761         ***/
     1012    19762    6                     IF (COMMAND = %REAL_DUAL)

  19762 18 002612   200003 470500                    LDP0    @COMMAND,,AUTO
        18 002613   000000 235100                    LDA     0,,PR0
        18 002614   000055 115007                    CMPA    45,DL
        18 002615   002640 601000 18                 TNZ     s:19769
        18 002616   200014 471500                    LDP1    SOURCE_DCB$,,AUTO
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:196  
        18 002617   100020 237100                    LDAQ    16,,PR1
        18 002620   000140 117000 2                  CMPAQ   BACKUP_ACCT
        18 002621   002640 601000 18                 TNZ     s:19769

     1013    19763    6                       AND (SOURCE_DCB$->F$DCB.ACCT# = BACKUP_ACCT.ACCT#)
     1014    19764    7                      THEN DO;

     1015    19765    7                        IF (SOURCE_DCB$->F$DCB.NAME#.C = PRIME_FILE.NAME#)

  19765 18 002622   000000 236000 xsym               LDQ     PRIME_FILE
        18 002623   000033 772000                    QRL     27
        18 002624   000000 620006                    EAX0    0,QL
        18 002625   040040 106500                    CMPC    fill='040'O
        18 002626   100010 200037                    ADSC9   8,,PR1                   cn=1,n=31
        18 002627   000000 200010 xsym               ADSC9   PRIME_FILE               cn=1,n=*X0
        18 002630   002500 600000 18                 TZE     IGNORE_FILE
        18 002631   000000 236000 xsym               LDQ     DUAL_FILE
        18 002632   000033 772000                    QRL     27
        18 002633   000000 621006                    EAX1    0,QL
        18 002634   040040 106500                    CMPC    fill='040'O
        18 002635   100010 200037                    ADSC9   8,,PR1                   cn=1,n=31
        18 002636   000000 200011 xsym               ADSC9   DUAL_FILE                cn=1,n=*X1
        18 002637   002500 600000 18                 TZE     IGNORE_FILE

     1016    19766    7                          OR (SOURCE_DCB$->F$DCB.NAME#.C = DUAL_FILE.NAME#)
     1017    19767    7                         THEN GOTO IGNORE_FILE;
     1018    19768    7                        END;

     1019    19769    6                     SAVE_DCB$ = SOURCE_DCB$;

  19769 18 002640   200014 236100                    LDQ     SOURCE_DCB$,,AUTO
        18 002641   200025 756100                    STQ     SAVE_DCB$,,AUTO

     1020    19770    6                     SAVE_FIT_ = FPARAM_;

  19770 18 002642   200016 237100                    LDAQ    FPARAM_,,AUTO
        18 002643   200026 757100                    STAQ    SAVE_FIT_,,AUTO
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:197  
        18 002644   002670 710000 18                 TRA     s:19776

     1021    19771    6                   CASE( %TAPE@ );

     1022    19772    6                     SAVE_DCB$->F$DCB = SOURCE_DCB$->F$DCB;

  19772 18 002645   200025 470500                    LDP0    SAVE_DCB$,,AUTO
        18 002646   000140 236100                    LDQ     96,,PR0
        18 002647   000033 772000                    QRL     27
        18 002650   000037 376007                    ANQ     31,DL
        18 002651   000601 620006                    EAX0    385,QL
        18 002652   200014 471500                    LDP1    SOURCE_DCB$,,AUTO
        18 002653   100140 236100                    LDQ     96,,PR1
        18 002654   000033 772000                    QRL     27
        18 002655   000037 376007                    ANQ     31,DL
        18 002656   000601 621006                    EAX1    385,QL
        18 002657   000140 100540                    MLR     fill='000'O
        18 002660   100000 000011                    ADSC9   0,,PR1                   cn=0,n=*X1
        18 002661   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0

     1023    19773    6                     SAVE_FIT_.PTR$->ONE_GRAN = FPARAM_.PTR$->ONE_GRAN;

  19773 18 002662   200017 470500                    LDP0    FPARAM_+1,,AUTO
        18 002663   010000 220003                    LDX0    4096,DU
        18 002664   200027 471500                    LDP1    SAVE_FIT_+1,,AUTO
        18 002665   000140 100540                    MLR     fill='000'O
        18 002666   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
        18 002667   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0

     1024    19774    6                   END;

     1025    19775
     1026    19776    6                  DO CASE( DEST );

  19776 18 002670   200071 235100                    LDA     DEST,,AUTO
        18 002671   000003 115007                    CMPA    3,DL
        18 002672   002674 602005 18                 TNC     s:19776+4,AL
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:198  
        18 002673   003011 710000 18                 TRA     s:19805
        18 002674   002733 710000 18                 TRA     s:19787
        18 002675   002677 710000 18                 TRA     s:19778
        18 002676   003007 710000 18                 TRA     s:19802

     1027    19777    6                   CASE( %DISK@ );

     1028    19778    6                     TO_DISK_NAME = SAVE_DCB$->F$DCB.NAME#;

  19778 18 002677   200025 470500                    LDP0    SAVE_DCB$,,AUTO
        18 002700   000000 100500                    MLR     fill='000'O
        18 002701   000010 000040                    ADSC9   8,,PR0                   cn=0,n=32
        18 002702   000234 000040 2                  ADSC9   TO_DISK_NAME             cn=0,n=32

     1029    19779    6                     IF DISK_DEST_SN.SN#(0) = ' '

  19779 18 002703   040000 106400                    CMPC    fill='040'O
        18 002704   000001 000006 xsym               ADSC9   DISK_DEST_SN+1           cn=0,n=6
        18 002705   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        18 002706   002712 601000 18                 TNZ     s:19781

     1030    19780    6                      THEN TO_DISK_SN.SN#(0) = SAVE_DCB$->F$DCB.PSN#;

  19780 18 002707   040000 100500                    MLR     fill='040'O
        18 002710   000024 000006                    ADSC9   20,,PR0                  cn=0,n=6
        18 002711   000231 000006 2                  ADSC9   TO_DISK_SN+1             cn=0,n=6

     1031    19781    6                     IF SOURCE = %DISK@

  19781 18 002712   200070 236100                    LDQ     SOURCE,,AUTO
        18 002713   000001 116007                    CMPQ    1,DL
        18 002714   002720 601000 18                 TNZ     s:19783

     1032    19782    6                      THEN SAVE_SN = TO_DISK_SN.SN#(0);

  19782 18 002715   040100 100400                    MLR     fill='040'O
        18 002716   000231 000006 2                  ADSC9   TO_DISK_SN+1             cn=0,n=6
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:199  
        18 002717   200036 000006                    ADSC9   SAVE_SN,,AUTO            cn=0,n=6

     1033    19783    6                     IF DISK_DEST_ACCT.ACCT# = ' '

  19783 18 002720   040000 106400                    CMPC    fill='040'O
        18 002721   000000 000010 xsym               ADSC9   DISK_DEST_ACCT           cn=0,n=8
        18 002722   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        18 002723   002726 601000 18                 TNZ     s:19785

     1034    19784    6                      THEN TO_DISK_ACCT.ACCT# = SAVE_DCB$->F$DCB.ACCT#;

  19784 18 002724   000020 237100                    LDAQ    16,,PR0
        18 002725   000224 757000 2                  STAQ    TO_DISK_ACCT

     1035    19785    6                     CALL FLM_FILE_TO_DISK_HANDLING( FIT_UPDATE ) ALTRET( JUSTSTOP );

  19785 18 002726   200043 631500                    EPPR1   FIT_UPDATE,,AUTO
        18 002727   200101 451500                    STP1    ANY_FILES_FOUND+3,,AUTO
        18 002730   005351 701000 18                 TSX1    FLM_FILE_TO_DISK_HANDLING
        18 002731   004166 702000 18                 TSX2    JUSTSTOP
        18 002732   003011 710000 18                 TRA     s:19805

     1036    19786    6                   CASE( %TAPE@ );

     1037    19787    6                     CALL FLS$FILE_PACKER( SOURCE_DCB$, DCB#, FPARAM_, SAVE_SN,

  19787 18 002733   200003 236100                    LDQ     @COMMAND,,AUTO
        18 002734   200135 756100                    STQ     @DISP+10,,AUTO
        18 002735   200074 630500                    EPPR0   FIT_ONLY_SAVED,,AUTO
        18 002736   200134 450500                    STP0    @DISP+9,,AUTO
        18 002737   200073 631500                    EPPR1   ABORT,,AUTO
        18 002740   200133 451500                    STP1    @DISP+8,,AUTO
        18 002741   200020 633500                    EPPR3   ERR,,AUTO
        18 002742   200132 453500                    STP3    @DISP+7,,AUTO
        18 002743   000050 236000 19                 LDQ     40
        18 002744   200131 756100                    STQ     @DISP+6,,AUTO
        18 002745   200040 634500                    EPPR4   SAVE_FSN,,AUTO
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:200  
        18 002746   200130 454500                    STP4    @DISP+5,,AUTO
        18 002747   200036 635500                    EPPR5   SAVE_SN,,AUTO
        18 002750   200127 455500                    STP5    @DISP+4,,AUTO
        18 002751   200016 636500                    EPPR6   FPARAM_,,AUTO
        18 002752   200126 456500                    STP6    @DISP+3,,AUTO
        18 002753   200066 637500                    EPPR7   DCB#,,AUTO
        18 002754   200125 457500                    STP7    @DISP+2,,AUTO
        18 002755   200014 630500                    EPPR0   SOURCE_DCB$,,AUTO
        18 002756   200124 450500                    STP0    @DISP+1,,AUTO
        18 002757   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 002760   000047 631400 19                 EPPR1   39
        18 002761   000000 701000 xent               TSX1    FLS$FILE_PACKER
        18 002762   002764 702000 18                 TSX2    s:19794
        18 002763   003004 710000 18                 TRA     s:19800

     1038    19788    6                       SAVE_FSN, CROSSED, ERR, ABORT, FIT_ONLY_SAVED, COMMAND )
     1039    19789    7                      WHENALTRETURN DO;

     1040    19790        /***
     1041    19791         *** If disc read error, ouput error message and continue with procesing
     1042    19792         *** next file. Terminate on tape write error.
     1043    19793        */
     1044    19794    7                        IF ABORT

  19794 18 002764   200073 234100                    SZN     ABORT,,AUTO
        18 002765   004166 604000 18                 TMI     JUSTSTOP

     1045    19795    7                         THEN GOTO JUSTSTOP;
     1046    19796    7                        CALL FLI$RPT_ERR (E_BAD_TAPE_FILE, DCB#);

  19796 18 002766   200066 630500                    EPPR0   DCB#,,AUTO
        18 002767   200125 450500                    STP0    @DISP+2,,AUTO
        18 002770   000051 236000 19                 LDQ     41
        18 002771   200124 756100                    STQ     @DISP+1,,AUTO
        18 002772   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 002773   000020 631400 xsym               EPPR1   B_VECTNIL+16
        18 002774   000000 701000 xent               TSX1    FLI$RPT_ERR
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:201  
        18 002775   000000 011000                    NOP     0

     1047    19797    7                        IF FPT_EXIT.V.STEPCC# < %DISK_ERROR

  19797 18 002776   000004 236000 xsym               LDQ     FPT_EXIT+4
        18 002777   777000 376003                    ANQ     -512,DU
        18 003000   003000 116003                    CMPQ    1536,DU
        18 003001   003004 603000 18                 TRC     s:19800

     1048    19798    7                         THEN FPT_EXIT.V.STEPCC# = %DISK_ERROR;

  19798 18 003002   003000 236003                    LDQ     1536,DU
        18 003003   000004 552040 xsym               STBQ    FPT_EXIT+4,'40'O

     1049    19799    7                        END;

     1050    19800    6                     GOING_TO_DEST = '1'B;

  19800 18 003004   400000 236003                    LDQ     -131072,DU
        18 003005   200042 756100                    STQ     GOING_TO_DEST,,AUTO
        18 003006   003011 710000 18                 TRA     s:19805

     1051    19801    6                   CASE( %NULL@ );

     1052    19802    6                     GOING_TO_DEST = '1'B;

  19802 18 003007   400000 236003                    LDQ     -131072,DU
        18 003010   200042 756100                    STQ     GOING_TO_DEST,,AUTO

     1053    19803    6                   END;

     1054    19804
     1055    19805    5                  IF ERR.CODE = %E$EOF THEN ERR = '0'B;

  19805 18 003011   200020 236100                    LDQ     ERR,,AUTO
        18 003012   377770 376007                    ANQ     131064,DL
        18 003013   000060 116007                    CMPQ    48,DL
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:202  
        18 003014   003016 601000 18                 TNZ     s:19806

  19805 18 003015   200020 450100                    STZ     ERR,,AUTO

     1056    19806    5                  IF GOING_TO_DEST

  19806 18 003016   200042 234100                    SZN     GOING_TO_DEST,,AUTO
        18 003017   003246 605000 18                 TPL     s:19858

     1057    19807    6                   THEN DO;                /* File actually went to destination  */

     1058    19808    6                     IF DEST = %DISK@

  19808 18 003020   200071 235100                    LDA     DEST,,AUTO
        18 003021   000001 115007                    CMPA    1,DL
        18 003022   003025 601000 18                 TNZ     s:19810

     1059    19809    6                      THEN CALL FLM_FILE_TO_DISK_WRAPUP ALTRET(JUSTSTOP);

  19809 18 003023   006704 701000 18                 TSX1    FLM_FILE_TO_DISK_WRAPUP
        18 003024   004166 702000 18                 TSX2    JUSTSTOP

     1060    19810    6                     IF SOURCE = %DISK@

  19810 18 003025   200070 235100                    LDA     SOURCE,,AUTO
        18 003026   000001 115007                    CMPA    1,DL
        18 003027   003047 601000 18                 TNZ     s:19823

     1061    19811    7                      THEN DO;

     1062    19812        /***
     1063    19813         *** If disc read error when archiving or purging, don't delete the source
     1064    19814         *** file or update the fit to indicate it was archived. If read error
     1065    19815         *** due to hardware, next read attempt may net a good file.
     1066    19816         ***/
     1067    19817    7                        IF (ERR.CODE = %E$IOERR)

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:203  
  19817 18 003030   200020 236100                    LDQ     ERR,,AUTO
        18 003031   377770 376007                    ANQ     131064,DL
        18 003032   000100 116007                    CMPQ    64,DL
        18 003033   003045 601000 18                 TNZ     s:19821
        18 003034   200003 470500                    LDP0    @COMMAND,,AUTO
        18 003035   000000 235100                    LDA     0,,PR0
        18 003036   000027 115007                    CMPA    23,DL
        18 003037   003047 600000 18                 TZE     s:19823
        18 003040   000030 115007                    CMPA    24,DL
        18 003041   003045 601000 18                 TNZ     s:19821
        18 003042   000000 236000 xsym               LDQ     ARCHIVE$
        18 003043   000001 116000 xsym               CMPQ    B_VECTNIL+1
        18 003044   003047 601000 18                 TNZ     s:19823

     1068    19818    7                          AND (COMMAND = %ARCHIVE_CMD
     1069    19819    7                          OR (COMMAND = %PURGE AND ARCHIVE$ ~= ADDR(NIL)))
     1070    19820    7                         THEN;
     1071    19821    7                         ELSE CALL FLM_FILE_FROM_DISK_WRAPUP ALTRET(JUSTSTOP);

  19821 18 003045   006450 701000 18                 TSX1    FLM_FILE_FROM_DISK_WRAPUP
        18 003046   004166 702000 18                 TSX2    JUSTSTOP

     1072    19822    7                        END;

     1073    19823    6                     IF TAPE_OPTION.CHECK AND COMMAND = %CHECK

  19823 18 003047   000000 234000 xsym               SZN     TAPE_OPTION
        18 003050   003055 605000 18                 TPL     s:19826
        18 003051   200003 470500                    LDP0    @COMMAND,,AUTO
        18 003052   000000 235100                    LDA     0,,PR0
        18 003053   000003 115007                    CMPA    3,DL
        18 003054   003151 600000 18                 TZE     s:19836

     1074    19824    6                      THEN /* Don't list each file...only volume changes */ ;
     1075    19825    7                      ELSE DO;

     1076    19826    7                        IF (NOT ERR AND FIT_ONLY_SAVED) /* Tell user if only FIT. */
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:204  

  19826 18 003055   200020 235100                    LDA     ERR,,AUTO
        18 003056   003061 601000 18                 TNZ     s:19826+4
        18 003057   200074 234100                    SZN     FIT_ONLY_SAVED,,AUTO
        18 003060   003076 604000 18                 TMI     s:19829
        18 003061   000000 115003                    CMPA    0,DU
        18 003062   003065 601000 18                 TNZ     s:19826+8
        18 003063   200075 234100                    SZN     FIT_ONLY_RSTRD,,AUTO
        18 003064   003076 604000 18                 TMI     s:19829
        18 003065   000000 115003                    CMPA    0,DU
        18 003066   003124 601000 18                 TNZ     s:19832
        18 003067   200003 470500                    LDP0    @COMMAND,,AUTO
        18 003070   000000 235100                    LDA     0,,PR0
        18 003071   000003 115007                    CMPA    3,DL
        18 003072   003124 601000 18                 TNZ     s:19832
        18 003073   200023 236100                    LDQ     SOURCE_FILE_TYPE,,AUTO
        18 003074   000003 116007                    CMPQ    3,DL
        18 003075   003124 601000 18                 TNZ     s:19832

     1077    19827    7                          OR (NOT ERR AND FIT_ONLY_RSTRD)
     1078    19828    7                          OR (NOT ERR AND COMMAND = %CHECK AND SOURCE_FILE_TYPE = %
             19828                                   ACUP_FILE)
     1079    19829    7                         THEN CALL FLP$WR_FILE_INFO( SAVE_DCB$, SAVE_FIT_.PTR$,

  19829 18 003076   000052 236000 19                 LDQ     42
        18 003077   200134 756100                    STQ     @DISP+9,,AUTO
        18 003100   200072 630500                    EPPR0   PR_DEV_LT,,AUTO
        18 003101   200133 450500                    STP0    @DISP+8,,AUTO
        18 003102   000062 236000 19                 LDQ     50
        18 003103   200132 756100                    STQ     @DISP+7,,AUTO
        18 003104   000001 236000 xsym               LDQ     B_VECTNIL+1
        18 003105   000050 235000 19                 LDA     40
        18 003106   200130 757100                    STAQ    @DISP+5,,AUTO
        18 003107   200040 631500                    EPPR1   SAVE_FSN,,AUTO
        18 003110   200127 451500                    STP1    @DISP+4,,AUTO
        18 003111   200036 633500                    EPPR3   SAVE_SN,,AUTO
        18 003112   200126 453500                    STP3    @DISP+3,,AUTO
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:205  
        18 003113   200027 634500                    EPPR4   SAVE_FIT_+1,,AUTO
        18 003114   200125 454500                    STP4    @DISP+2,,AUTO
        18 003115   200025 635500                    EPPR5   SAVE_DCB$,,AUTO
        18 003116   200124 455500                    STP5    @DISP+1,,AUTO
        18 003117   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 003120   000053 631400 19                 EPPR1   43
        18 003121   000000 701000 xent               TSX1    FLP$WR_FILE_INFO
        18 003122   004166 702000 18                 TSX2    JUSTSTOP
        18 003123   003151 710000 18                 TRA     s:19836

     1080    19830    7                             SAVE_SN, SAVE_FSN, CROSSED, , FIT_ONLY_CODE,
     1081    19831    7                             PR_DEV_LT, '0'B ) ALTRET( JUSTSTOP );
     1082    19832    7                         ELSE CALL FLP$WR_FILE_INFO( SAVE_DCB$, SAVE_FIT_.PTR$,

  19832 18 003124   000052 236000 19                 LDQ     42
        18 003125   200134 756100                    STQ     @DISP+9,,AUTO
        18 003126   200072 630500                    EPPR0   PR_DEV_LT,,AUTO
        18 003127   200133 450500                    STP0    @DISP+8,,AUTO
        18 003130   200020 631500                    EPPR1   ERR,,AUTO
        18 003131   200132 451500                    STP1    @DISP+7,,AUTO
        18 003132   000001 236000 xsym               LDQ     B_VECTNIL+1
        18 003133   000050 235000 19                 LDA     40
        18 003134   200130 757100                    STAQ    @DISP+5,,AUTO
        18 003135   200040 633500                    EPPR3   SAVE_FSN,,AUTO
        18 003136   200127 453500                    STP3    @DISP+4,,AUTO
        18 003137   200036 634500                    EPPR4   SAVE_SN,,AUTO
        18 003140   200126 454500                    STP4    @DISP+3,,AUTO
        18 003141   200027 635500                    EPPR5   SAVE_FIT_+1,,AUTO
        18 003142   200125 455500                    STP5    @DISP+2,,AUTO
        18 003143   200025 636500                    EPPR6   SAVE_DCB$,,AUTO
        18 003144   200124 456500                    STP6    @DISP+1,,AUTO
        18 003145   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 003146   000053 631400 19                 EPPR1   43
        18 003147   000000 701000 xent               TSX1    FLP$WR_FILE_INFO
        18 003150   004166 702000 18                 TSX2    JUSTSTOP

     1083    19833    7                             SAVE_SN, SAVE_FSN, CROSSED, , ERR, PR_DEV_LT, '0'B )
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:206  
     1084    19834    7                             ALTRET( JUSTSTOP );
     1085    19835    7                        END;

     1086    19836    6                     IF ERR AND ERR.CODE ~= %E$NOFILE

  19836 18 003151   200020 235100                    LDA     ERR,,AUTO
        18 003152   003522 600000 18                 TZE     s:19943
        18 003153   200020 236100                    LDQ     ERR,,AUTO
        18 003154   377770 376007                    ANQ     131064,DL
        18 003155   001610 116007                    CMPQ    904,DL
        18 003156   003522 600000 18                 TZE     s:19943

     1087    19837    7                      THEN DO;             /* Report unexpected error            */

     1088    19838    7                        IF (ERR.CODE = %E$DI AND SOURCE_DCB$->F$DCB.ORG# ~= %RANDOM#

  19838 18 003157   000110 116007                    CMPQ    72,DL
        18 003160   003174 601000 18                 TNZ     s:19838+13
        18 003161   200014 470500                    LDP0    SOURCE_DCB$,,AUTO
        18 003162   000032 236100                    LDQ     26,,PR0
        18 003163   777000 376003                    ANQ     -512,DU
        18 003164   003000 116003                    CMPQ    1536,DU
        18 003165   003174 600000 18                 TZE     s:19838+13
        18 003166   005000 116003                    CMPQ    2560,DU
        18 003167   003174 600000 18                 TZE     s:19838+13
        18 003170   007000 116003                    CMPQ    3584,DU
        18 003171   003174 600000 18                 TZE     s:19838+13
        18 003172   013000 116003                    CMPQ    5632,DU
        18 003173   003200 601000 18                 TNZ     s:19844
        18 003174   200020 236100                    LDQ     ERR,,AUTO
        18 003175   377770 376007                    ANQ     131064,DL
        18 003176   000110 116007                    CMPQ    72,DL
        18 003177   003522 600000 18                 TZE     s:19943

     1089    19839    7                          AND SOURCE_DCB$->F$DCB.ORG# ~= %RELATIVE#
     1090    19840    7                          AND SOURCE_DCB$->F$DCB.ORG# ~= %IDS#
     1091    19841    7                          AND SOURCE_DCB$->F$DCB.ORG# ~= %CG#)
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:207  
     1092    19842    7                          OR ERR.CODE ~= %E$DI
     1093    19843    8                         THEN DO;

     1094    19844    8                           IF SOURCE = %DISK@ AND ERR.CODE = %E$DI

  19844 18 003200   200070 236100                    LDQ     SOURCE,,AUTO
        18 003201   000001 116007                    CMPQ    1,DL
        18 003202   003220 601000 18                 TNZ     s:19846
        18 003203   200020 236100                    LDQ     ERR,,AUTO
        18 003204   377770 376007                    ANQ     131064,DL
        18 003205   000110 116007                    CMPQ    72,DL
        18 003206   003220 601000 18                 TNZ     s:19846

     1095    19845    8                            THEN CALL FLI$RPT_ERR ( ERR, DCB# );

  19845 18 003207   200066 630500                    EPPR0   DCB#,,AUTO
        18 003210   200125 450500                    STP0    @DISP+2,,AUTO
        18 003211   200020 631500                    EPPR1   ERR,,AUTO
        18 003212   200124 451500                    STP1    @DISP+1,,AUTO
        18 003213   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 003214   000020 631400 xsym               EPPR1   B_VECTNIL+16
        18 003215   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 003216   000000 011000                    NOP     0
        18 003217   003230 710000 18                 TRA     s:19847

     1096    19846    8                            ELSE CALL FLI$RPT_ERR( ERR, 0 );

  19846 18 003220   000052 236000 19                 LDQ     42
        18 003221   200125 756100                    STQ     @DISP+2,,AUTO
        18 003222   200020 630500                    EPPR0   ERR,,AUTO
        18 003223   200124 450500                    STP0    @DISP+1,,AUTO
        18 003224   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 003225   000020 631400 xsym               EPPR1   B_VECTNIL+16
        18 003226   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 003227   000000 011000                    NOP     0

     1097    19847    8                           IF FPT_EXIT.V.STEPCC#<%MINOR_ERROR
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:208  

  19847 18 003230   000004 236000 xsym               LDQ     FPT_EXIT+4
        18 003231   777000 316003                    CANQ    -512,DU
        18 003232   003235 601000 18                 TNZ     s:19849

     1098    19848    8                            THEN FPT_EXIT.V.STEPCC# = %MINOR_ERROR;

  19848 18 003233   001000 236003                    LDQ     512,DU
        18 003234   000004 552040 xsym               STBQ    FPT_EXIT+4,'40'O

     1099    19849    8                           IF ERR.CODE = %E$SETDOWN OR ERR.CODE = %E$XCLSET

  19849 18 003235   200020 236100                    LDQ     ERR,,AUTO
        18 003236   377770 376007                    ANQ     131064,DL
        18 003237   002200 116007                    CMPQ    1152,DL
        18 003240   003243 600000 18                 TZE     s:19851
        18 003241   002170 116007                    CMPQ    1144,DL
        18 003242   003522 601000 18                 TNZ     s:19943

     1100    19850    9                            THEN DO;

     1101    19851    9                              FPT_EXIT.V.STEPCC# = %OPER_ERROR;

  19851 18 003243   005000 236003                    LDQ     2560,DU
        18 003244   000004 552040 xsym               STBQ    FPT_EXIT+4,'40'O

     1102    19852    9                              ALTRETURN;   /* Can't continue after this error    */

  19852 18 003245   000000 702200 xent               TSX2  ! X66_AALT

     1103    19853    9                              END;
     1104    19854    8                           END;
     1105    19855    7                        END;
     1106    19856    6                     END;
     1107    19857    6                   ELSE DO; /* File didn't go to disk. But FIT may have been mod. */

     1108    19858    6                     IF NOT ERR AND NOT FIT_UPDATE /* such as for DUAL ACUP      */
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:209  

  19858 18 003246   200020 235100                    LDA     ERR,,AUTO
        18 003247   003254 601000 18                 TNZ     s:19860
        18 003250   200043 234100                    SZN     FIT_UPDATE,,AUTO
        18 003251   003254 604000 18                 TMI     s:19860

     1109    19859    6                      THEN ERR = '777777777777'O; /* Skipped                     */

  19859 18 003252   000027 236000 xsym               LDQ     B_VECTNIL+23
        18 003253   200020 756100                    STQ     ERR,,AUTO

     1110    19860    6                     IF (COMMAND = %REBUILD /* Output file info. only after      */

  19860 18 003254   200003 470500                    LDP0    @COMMAND,,AUTO
        18 003255   000000 235100                    LDA     0,,PR0
        18 003256   000056 115007                    CMPA    46,DL
        18 003257   003270 601000 18                 TNZ     s:19860+12
        18 003260   200020 236100                    LDQ     ERR,,AUTO
        18 003261   377770 376007                    ANQ     131064,DL
        18 003262   002140 116007                    CMPQ    1120,DL
        18 003263   003270 601000 18                 TNZ     s:19860+12
        18 003264   040100 106400                    CMPC    fill='040'O
        18 003265   000000 000006 xsym               ADSC9   TAPE_SN                  cn=0,n=6
        18 003266   200047 000006                    ADSC9   OLD_SN,,AUTO             cn=0,n=6
        18 003267   003333 601000 18                 TNZ     s:19872
        18 003270   000034 115007                    CMPA    28,DL
        18 003271   003275 601000 18                 TNZ     s:19860+17
        18 003272   200020 236100                    LDQ     ERR,,AUTO
        18 003273   000027 116000 xsym               CMPQ    B_VECTNIL+23
        18 003274   003333 600000 18                 TZE     s:19872
        18 003275   000055 115007                    CMPA    45,DL
        18 003276   003306 601000 18                 TNZ     s:19870
        18 003277   000001 236000 xsym               LDQ     TAPE_OPTION+1
        18 003300   700000 376003                    ANQ     -32768,DU
        18 003301   300000 116003                    CMPQ    98304,DU
        18 003302   003306 601000 18                 TNZ     s:19870
        18 003303   200020 236100                    LDQ     ERR,,AUTO
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:210  
        18 003304   000027 116000 xsym               CMPQ    B_VECTNIL+23
        18 003305   003333 600000 18                 TZE     s:19872

     1111    19861    6                      AND ERR.CODE = %E$PSGRANS /* attempting to delete any deleted */
     1112    19862    6                       AND TAPE_SN ~= OLD_SN) /* files found on current tape     */
     1113    19863    6                       OR (COMMAND = %RETRIEVE /* Don't output skip *** for      */
     1114    19864    6                       AND ERR = '777777777777'O) /* RETRIEVEs                   */
     1115    19865    6                       OR (COMMAND = %REAL_DUAL /* Don't output skip *** for     */
     1116    19866    6                       AND TAPE_OPTION.PROTTYPE = %INCREMENTAL /* DUAL INCRs     */
     1117    19867    6                       AND ERR = '777777777777'O)
     1118    19868    6                      THEN;
     1119    19869    6                      ELSE
     1120    19870    6                        CALL FLP$WR_FILE_INFO( SAVE_DCB$, SAVE_FIT_.PTR$, SAVE_SN,

  19870 18 003306   000052 236000 19                 LDQ     42
        18 003307   200134 756100                    STQ     @DISP+9,,AUTO
        18 003310   200072 631500                    EPPR1   PR_DEV_LT,,AUTO
        18 003311   200133 451500                    STP1    @DISP+8,,AUTO
        18 003312   200020 633500                    EPPR3   ERR,,AUTO
        18 003313   200132 453500                    STP3    @DISP+7,,AUTO
        18 003314   000001 236000 xsym               LDQ     B_VECTNIL+1
        18 003315   000050 235000 19                 LDA     40
        18 003316   200130 757100                    STAQ    @DISP+5,,AUTO
        18 003317   200040 634500                    EPPR4   SAVE_FSN,,AUTO
        18 003320   200127 454500                    STP4    @DISP+4,,AUTO
        18 003321   200036 635500                    EPPR5   SAVE_SN,,AUTO
        18 003322   200126 455500                    STP5    @DISP+3,,AUTO
        18 003323   200027 636500                    EPPR6   SAVE_FIT_+1,,AUTO
        18 003324   200125 456500                    STP6    @DISP+2,,AUTO
        18 003325   200025 637500                    EPPR7   SAVE_DCB$,,AUTO
        18 003326   200124 457500                    STP7    @DISP+1,,AUTO
        18 003327   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 003330   000053 631400 19                 EPPR1   43
        18 003331   000000 701000 xent               TSX1    FLP$WR_FILE_INFO
        18 003332   004166 702000 18                 TSX2    JUSTSTOP

     1121    19871    6                         SAVE_FSN, CROSSED, , ERR, PR_DEV_LT,'0'B) ALTRET( JUSTSTOP );
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:211  
     1122    19872    6                     IF ERR

  19872 18 003333   200020 235100                    LDA     ERR,,AUTO
        18 003334   003522 600000 18                 TZE     s:19943
        18 003335   200020 236100                    LDQ     ERR,,AUTO
        18 003336   000027 116000 xsym               CMPQ    B_VECTNIL+23
        18 003337   003522 600000 18                 TZE     s:19943
        18 003340   200020 236100                    LDQ     ERR,,AUTO
        18 003341   377770 376007                    ANQ     131064,DL
        18 003342   001610 116007                    CMPQ    904,DL
        18 003343   003522 600000 18                 TZE     s:19943

     1123    19873    6                       AND ERR ~= '777777777777'O
     1124    19874    6                       AND ERR.CODE ~= %E$NOFILE
     1125    19875    7                      THEN DO;

     1126    19876    7                        IF COMMAND = %REBUILD /* Output error msge. only after   */

  19876 18 003344   200003 470500                    LDP0    @COMMAND,,AUTO
        18 003345   000000 235100                    LDA     0,,PR0
        18 003346   000056 115007                    CMPA    46,DL
        18 003347   003371 601000 18                 TNZ     s:19888
        18 003350   002140 116007                    CMPQ    1120,DL
        18 003351   003371 601000 18                 TNZ     s:19888

     1127    19877    7                          AND ERR.CODE = %E$PSGRANS /* attempting to delete any  */
     1128    19878    8                         THEN DO;     /* deleted files found on current tape     */

     1129    19879    8                           IF TAPE_SN = OLD_SN

  19879 18 003352   040100 106400                    CMPC    fill='040'O
        18 003353   000000 000006 xsym               ADSC9   TAPE_SN                  cn=0,n=6
        18 003354   200047 000006                    ADSC9   OLD_SN,,AUTO             cn=0,n=6
        18 003355   003422 601000 18                 TNZ     s:19896

     1130    19880    9                            THEN DO;

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:212  
     1131    19881    9                              CALL FLI$RPT_ERR( ERR, 0 );

  19881 18 003356   000052 236000 19                 LDQ     42
        18 003357   200125 756100                    STQ     @DISP+2,,AUTO
        18 003360   200020 631500                    EPPR1   ERR,,AUTO
        18 003361   200124 451500                    STP1    @DISP+1,,AUTO
        18 003362   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 003363   000020 631400 xsym               EPPR1   B_VECTNIL+16
        18 003364   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 003365   000000 011000                    NOP     0

     1132    19882    9                              FPT_EXIT.V.STEPCC# = %OPER_ERROR;

  19882 18 003366   005000 236003                    LDQ     2560,DU
        18 003367   000004 552040 xsym               STBQ    FPT_EXIT+4,'40'O

     1133    19883    9                              ALTRETURN;   /* Can't continue                     */

  19883 18 003370   000000 702200 xent               TSX2  ! X66_AALT

     1134    19884    9                              END;
     1135    19885    8                            ELSE;
     1136    19886    8                           END;
     1137    19887    8                         ELSE DO;

     1138    19888    8                           IF SOURCE = %TAPE@ /* Output file name - busy dest. file */

  19888 18 003371   200070 235100                    LDA     SOURCE,,AUTO
        18 003372   003412 601000 18                 TNZ     s:19894
        18 003373   001550 116007                    CMPQ    872,DL
        18 003374   003412 601000 18                 TNZ     s:19894

     1139    19889    8                             AND ERR.CODE = %E$FILEBUSY
     1140    19890    9                            THEN DO;

     1141    19891    9                              TEMP_U = F$DCB.DCB#;

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:213  
  19891 18 003375   200061 471500                    LDP1    M$DISK_OUT$,,AUTO
        18 003376   100060 236100                    LDQ     48,,PR1
        18 003377   000033 772000                    QRL     27
        18 003400   200057 756100                    STQ     TEMP_U,,AUTO

     1142    19892    9                              CALL FLI$RPT_ERR( ERR, TEMP_U );

  19892 18 003401   200057 633500                    EPPR3   TEMP_U,,AUTO
        18 003402   200125 453500                    STP3    @DISP+2,,AUTO
        18 003403   200020 634500                    EPPR4   ERR,,AUTO
        18 003404   200124 454500                    STP4    @DISP+1,,AUTO
        18 003405   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 003406   000020 631400 xsym               EPPR1   B_VECTNIL+16
        18 003407   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 003410   000000 011000                    NOP     0

     1143    19893    9                              END;

  19893 18 003411   003422 710000 18                 TRA     s:19896

     1144    19894    8                            ELSE CALL FLI$RPT_ERR( ERR, 0 );

  19894 18 003412   000052 236000 19                 LDQ     42
        18 003413   200125 756100                    STQ     @DISP+2,,AUTO
        18 003414   200020 631500                    EPPR1   ERR,,AUTO
        18 003415   200124 451500                    STP1    @DISP+1,,AUTO
        18 003416   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 003417   000020 631400 xsym               EPPR1   B_VECTNIL+16
        18 003420   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 003421   000000 011000                    NOP     0

     1145    19895    8                           END;

     1146    19896    7                        IF ERR.CODE = %E$SETDOWN OR ERR.CODE = %E$XCLSET

  19896 18 003422   200020 236100                    LDQ     ERR,,AUTO
        18 003423   377770 376007                    ANQ     131064,DL
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:214  
        18 003424   002200 116007                    CMPQ    1152,DL
        18 003425   003430 600000 18                 TZE     s:19898
        18 003426   002170 116007                    CMPQ    1144,DL
        18 003427   003460 601000 18                 TNZ     s:19910

     1147    19897    8                         THEN DO;

     1148    19898    8                           FPT_EXIT.V.STEPCC# = %OPER_ERROR;

  19898 18 003430   005000 236003                    LDQ     2560,DU
        18 003431   000004 552040 xsym               STBQ    FPT_EXIT+4,'40'O

     1149    19899    8                           IF DCBADDR(DCBNUM(M$NODATA_LIST))->F$DCB.FCD#

  19899 18 003432   000000 236007 xsym               LDQ     M$NODATA_LIST,DL
        18 003433   000031 470400 19                 LDP0    25
        18 003434   000000 471500                    LDP1    0,,PR0
        18 003435   100000 473506                    LDP3    0,QL,PR1
        18 003436   300031 236100                    LDQ     25,,PR3
        18 003437   020000 316007                    CANQ    8192,DL
        18 003440   003446 600000 18                 TZE     s:19903

     1150    19900    8                            THEN CALL M$CLOSE( CLOSE_NODATA_LIST )

  19900 18 003441   000000 630400 xsym               EPPR0   CLOSE_NODATA_LIST
        18 003442   450001 713400                    CLIMB   alt,close
        18 003443   406000 401760                    pmme    nvectors=13
        18 003444   003446 702000 18                 TSX2    s:19903
        18 003445   003446 710000 18                 TRA     s:19903

     1151    19901    9                               WHENALTRETURN DO;

     1152    19902    9                                 END;

     1153    19903    8                           IF M$TAPE00$->F$DCB.FCD# /* Close input tape, if open */

  19903 18 003446   000000 470400 xsym               LDP0    M$TAPE00$
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:215  
        18 003447   000031 236100                    LDQ     25,,PR0
        18 003450   020000 316007                    CANQ    8192,DL
        18 003451   003457 600000 18                 TZE     s:19907

     1154    19904    8                            THEN CALL M$CLOSE( TAPE_CLOSE )

  19904 18 003452   000000 630400 xsym               EPPR0   TAPE_CLOSE
        18 003453   450001 713400                    CLIMB   alt,close
        18 003454   406000 401760                    pmme    nvectors=13
        18 003455   003457 702000 18                 TSX2    s:19907
        18 003456   003457 710000 18                 TRA     s:19907

     1155    19905    9                               WHENALTRETURN DO;

     1156    19906    9                                 END;

     1157    19907    8                           ALTRETURN;      /* Can't continue after this error    */

  19907 18 003457   000000 702200 xent               TSX2  ! X66_AALT

     1158    19908    8                           END;
     1159    19909    8                         ELSE DO;

     1160    19910    8                           IF ERR.CODE = %E$PSGRANS

  19910 18 003460   002140 116007                    CMPQ    1120,DL
        18 003461   003515 601000 18                 TNZ     s:19936

     1161    19911    9                            THEN DO;

     1162    19912    9                              SAVE_ERR = ERR;

  19912 18 003462   200020 236100                    LDQ     ERR,,AUTO
        18 003463   200021 756100                    STQ     SAVE_ERR,,AUTO

     1163    19913    9                              IF COMMAND = %REBUILD

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:216  
  19913 18 003464   200003 470500                    LDP0    @COMMAND,,AUTO
        18 003465   000000 235100                    LDA     0,,PR0
        18 003466   000056 115007                    CMPA    46,DL
        18 003467   003512 601000 18                 TNZ     s:19931

     1164    19914   10                               THEN DO;

     1165    19915        /***
     1166    19916         *** Search tape for deleted files and delete corresponding file on disk.
     1167    19917         *** Hopefully this will gain enough space so that rebuilding may continue.
     1168    19918         ***/
     1169    19919   10                                 CALL FLM_FILES_FROM_TAPE_DELETE

  19919 18 003470   013362 701000 18                 TSX1    FLM_FILES_FROM_TAPE_DELETE
        18 003471   003473 702000 18                 TSX2    s:19921
        18 003472   003511 710000 18                 TRA     s:19928

     1170    19920   11                                  WHENALTRETURN DO;

     1171    19921   11                                    IF FPT_EXIT.V.STEPCC# < %SERIOUS_ERROR

  19921 18 003473   000004 236000 xsym               LDQ     FPT_EXIT+4
        18 003474   777000 376003                    ANQ     -512,DU
        18 003475   002000 116003                    CMPQ    1024,DU
        18 003476   003501 603000 18                 TRC     s:19923

     1172    19922   11                                     THEN FPT_EXIT.V.STEPCC# = %SERIOUS_ERROR;

  19922 18 003477   002000 236003                    LDQ     1024,DU
        18 003500   000004 552040 xsym               STBQ    FPT_EXIT+4,'40'O

     1173    19923   11                                    CALL FLC$TAPE_CLOSE( ERR )

  19923 18 003501   200020 630500                    EPPR0   ERR,,AUTO
        18 003502   200124 450500                    STP0    @DISP+1,,AUTO
        18 003503   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 003504   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:217  
        18 003505   000000 701000 xent               TSX1    FLC$TAPE_CLOSE
        18 003506   003510 702000 18                 TSX2    s:19926
        18 003507   003510 710000 18                 TRA     s:19926

     1174    19924   12                                     WHENALTRETURN DO;

     1175    19925   12                                       END;

     1176    19926   11                                    ALTRETURN;

  19926 18 003510   000000 702200 xent               TSX2  ! X66_AALT

     1177    19927   11                                    END;
     1178    19928   10                                 GOTO CASE_END; /* Retry rebuilding              */

  19928 18 003511   003557 710000 18                 TRA     CASE_END

     1179    19929   10                                 END;
     1180    19930   10                               ELSE DO;

     1181    19931   10                                 FPT_EXIT.V.STEPCC# = %OPER_ERROR;

  19931 18 003512   005000 236003                    LDQ     2560,DU
        18 003513   000004 552040 xsym               STBQ    FPT_EXIT+4,'40'O

     1182    19932   10                                 GOTO JUSTSTOP; /* Can't continue                */

  19932 18 003514   004166 710000 18                 TRA     JUSTSTOP

     1183    19933   10                                 END;
     1184    19934    9                              END;
     1185    19935    9                            ELSE DO;

     1186    19936    9                              IF FPT_EXIT.V.STEPCC#<%MINOR_ERROR

  19936 18 003515   000004 236000 xsym               LDQ     FPT_EXIT+4
        18 003516   777000 316003                    CANQ    -512,DU
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:218  
        18 003517   003522 601000 18                 TNZ     s:19943

     1187    19937    9                               THEN FPT_EXIT.V.STEPCC# = %MINOR_ERROR;

  19937 18 003520   001000 236003                    LDQ     512,DU
        18 003521   000004 552040 xsym               STBQ    FPT_EXIT+4,'40'O

     1188    19938    9                              END;

     1189    19939    8                           END;

     1190    19940    7                        END;

     1191    19941    6                     END;

     1192    19942
     1193    19943    6                  DO CASE( SOURCE );

  19943 18 003522   200070 235100                    LDA     SOURCE,,AUTO
        18 003523   000002 115007                    CMPA    2,DL
        18 003524   003526 602005 18                 TNC     s:19943+4,AL
        18 003525   003555 710000 18                 TRA     s:19955
        18 003526   003537 710000 18                 TRA     s:19947
        18 003527   003530 710000 18                 TRA     s:19945

     1194    19944    6                   CASE( %DISK@ );

     1195    19945    6                     CALL FLN$DISK_CLOSE_NEXT( DCB_NBR );

  19945 18 003530   200065 630500                    EPPR0   DCB_NBR,,AUTO
        18 003531   200124 450500                    STP0    @DISP+1,,AUTO
        18 003532   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 003533   000017 631400 xsym               EPPR1   B_VECTNIL+15
        18 003534   000000 701000 xent               TSX1    FLN$DISK_CLOSE_NEXT
        18 003535   000000 011000                    NOP     0
        18 003536   003555 710000 18                 TRA     s:19955

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:219  
     1196    19946    6                   CASE( %TAPE@ );

     1197    19947    6                     CALL FLC$TAPE_CLOSE_NEXT ( ERR )

  19947 18 003537   200020 630500                    EPPR0   ERR,,AUTO
        18 003540   200124 450500                    STP0    @DISP+1,,AUTO
        18 003541   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 003542   000017 631400 xsym               EPPR1   B_VECTNIL+15
        18 003543   000000 701000 xent               TSX1    FLC$TAPE_CLOSE_NEXT
        18 003544   003546 702000 18                 TSX2    s:19949
        18 003545   003555 710000 18                 TRA     s:19955

     1198    19948    7                      WHENALTRETURN DO;

     1199    19949    7                        IF NOT (ERR.CODE = %E$IO_ERR AND TAPE_OPEN.V.IOERROK#)

  19949 18 003546   200020 236100                    LDQ     ERR,,AUTO
        18 003547   377770 376007                    ANQ     131064,DL
        18 003550   000100 116007                    CMPQ    64,DL
        18 003551   004166 601000 18                 TNZ     JUSTSTOP
        18 003552   000060 236000 xsym               LDQ     TAPE_OPEN+48
        18 003553   003000 316003                    CANQ    1536,DU
        18 003554   004166 600000 18                 TZE     JUSTSTOP

     1200    19950    7                         THEN GOTO JUSTSTOP;
     1201    19951    7                        END;

     1202    19952    6                   END;

     1203    19953
     1204    19954    5                  END;

     1205    19955    4               ANY_FILES_FOUND = '1'B;

  19955 18 003555   400000 236003                    LDQ     -131072,DU
        18 003556   200076 756100                    STQ     ANY_FILES_FOUND,,AUTO

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:220  
     1206    19956    4             END;

     1207    19957
     1208    19958    3   CASE_END:
     1209    19959    3            IF TAPE_OPTION.CHECK AND COMMAND = %CHECK

  19959 18 003557   000000 234000 xsym  CASE_END     SZN     TAPE_OPTION
        18 003560   003625 605000 18                 TPL     s:19970
        18 003561   200003 470500                    LDP0    @COMMAND,,AUTO
        18 003562   000000 235100                    LDA     0,,PR0
        18 003563   000003 115007                    CMPA    3,DL
        18 003564   003625 601000 18                 TNZ     s:19970

     1210    19960    4             THEN DO;                      /* During automatic check...          */

     1211    19961    4               IF OLD_SN ~= SAVE_SN

  19961 18 003565   040100 106500                    CMPC    fill='040'O
        18 003566   200047 000006                    ADSC9   OLD_SN,,AUTO             cn=0,n=6
        18 003567   200036 000006                    ADSC9   SAVE_SN,,AUTO            cn=0,n=6
        18 003570   003625 600000 18                 TZE     s:19970

     1212    19962    5                THEN DO;                   /* ...report volume changes           */

     1213    19963    5                  ERR = '0'B;

  19963 18 003571   200020 450100                    STZ     ERR,,AUTO

     1214    19964    5                  ERR.CODE = %E$EOVOL;

  19964 18 003572   200020 236100                    LDQ     ERR,,AUTO
        18 003573   000060 376000 19                 ANQ     48
        18 003574   013130 276007                    ORQ     5720,DL
        18 003575   200020 756100                    STQ     ERR,,AUTO

     1215    19965    5                  CALL FLP$WR_FILE_INFO( SOURCE_DCB$, FPARAM_.PTR$, SAVE_SN, SAVE_FSN,
             19965                           CROSSED, '1'B, ERR, '1'B, '0'B) ALTRET( JUSTSTOP );
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:221  

  19965 18 003576   000052 236000 19                 LDQ     42
        18 003577   200134 756100                    STQ     @DISP+9,,AUTO
        18 003600   000055 236000 19                 LDQ     45
        18 003601   200133 756100                    STQ     @DISP+8,,AUTO
        18 003602   200020 631500                    EPPR1   ERR,,AUTO
        18 003603   200132 451500                    STP1    @DISP+7,,AUTO
        18 003604   000054 237000 19                 LDAQ    44
        18 003605   200130 757100                    STAQ    @DISP+5,,AUTO
        18 003606   200040 633500                    EPPR3   SAVE_FSN,,AUTO
        18 003607   200127 453500                    STP3    @DISP+4,,AUTO
        18 003610   200036 634500                    EPPR4   SAVE_SN,,AUTO
        18 003611   200126 454500                    STP4    @DISP+3,,AUTO
        18 003612   200017 635500                    EPPR5   FPARAM_+1,,AUTO
        18 003613   200125 455500                    STP5    @DISP+2,,AUTO
        18 003614   200014 636500                    EPPR6   SOURCE_DCB$,,AUTO
        18 003615   200124 456500                    STP6    @DISP+1,,AUTO
        18 003616   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 003617   000053 631400 19                 EPPR1   43
        18 003620   000000 701000 xent               TSX1    FLP$WR_FILE_INFO
        18 003621   004166 702000 18                 TSX2    JUSTSTOP

     1216    19966    5                  OLD_SN = SAVE_SN;

  19966 18 003622   040100 100500                    MLR     fill='040'O
        18 003623   200036 000006                    ADSC9   SAVE_SN,,AUTO            cn=0,n=6
        18 003624   200047 000006                    ADSC9   OLD_SN,,AUTO             cn=0,n=6

     1217    19967    5                  END;

     1218    19968    4               END;

     1219    19969
     1220    19970    3            IF SOURCE = %TAPE@

  19970 18 003625   200070 235100                    LDA     SOURCE,,AUTO
        18 003626   003632 601000 18                 TNZ     s:19978
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:222  

     1221    19971    3             THEN BLK_TAG$ = PINCRW( BLK_TAG$, -SIZEW(BLK_TAG) );

  19971 18 003627   000000 236000 xsym               LDQ     BLK_TAG$
        18 003630   777765 036003                    ADLQ    -11,DU
        18 003631   000000 756000 xsym               STQ     BLK_TAG$

     1222    19972
     1223    19973        /***
     1224    19974         *** After retrieving or restoring specific file(s) within specific FSN(s)
     1225    19975         *** just terminate. Continuing to search the rest of the EFT_RESTRICT_FILE is
     1226    19976         *** meaningless.
     1227    19977         ***/
     1228    19978    4            DO CASE( COMMAND );

  19978 18 003632   200003 470500                    LDP0    @COMMAND,,AUTO
        18 003633   000000 235100                    LDA     0,,PR0
        18 003634   000011 135007                    SBLA    9,DL
        18 003635   000024 115007                    CMPA    20,DL
        18 003636   003640 602005 18                 TNC     s:19978+6,AL
        18 003637   003727 710000 18                 TRA     s:19994
        18 003640   003664 710000 18                 TRA     s:19980
        18 003641   003727 710000 18                 TRA     s:19994
        18 003642   003727 710000 18                 TRA     s:19994
        18 003643   003727 710000 18                 TRA     s:19994
        18 003644   003727 710000 18                 TRA     s:19994
        18 003645   003727 710000 18                 TRA     s:19994
        18 003646   003727 710000 18                 TRA     s:19994
        18 003647   003727 710000 18                 TRA     s:19994
        18 003650   003727 710000 18                 TRA     s:19994
        18 003651   003727 710000 18                 TRA     s:19994
        18 003652   003727 710000 18                 TRA     s:19994
        18 003653   003727 710000 18                 TRA     s:19994
        18 003654   003727 710000 18                 TRA     s:19994
        18 003655   003727 710000 18                 TRA     s:19994
        18 003656   003727 710000 18                 TRA     s:19994
        18 003657   003727 710000 18                 TRA     s:19994
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:223  
        18 003660   003727 710000 18                 TRA     s:19994
        18 003661   003727 710000 18                 TRA     s:19994
        18 003662   003727 710000 18                 TRA     s:19994
        18 003663   003664 710000 18                 TRA     s:19980

     1229    19979    4             CASE( %RETRIEVE, %RESTORE );

     1230    19980    4               SPEC.STOP.ACCT.ACCT# = EFTFILE_DCB$->F$DCB.ACCT#;

  19980 18 003664   000000 471400 xsym               LDP1    EFTFILE_DCB$
        18 003665   100020 237100                    LDAQ    16,,PR1
        18 003666   000013 755000 xsym               STA     SPECCHARS+11
        18 003667   000014 756000 xsym               STQ     SPECCHARS+12

     1231    19981    4               SPEC.STOP.FILE.L# = EFTFILE_DCB$->F$DCB.NAME#.L;

  19981 18 003670   100010 236100                    LDQ     8,,PR1
        18 003671   000033 772000                    QRL     27
        18 003672   000024 552004 xsym               STBQ    SPECCHARS+20,'04'O

     1232    19982    4               SPEC.STOP.FILE.NAME# = EFTFILE_DCB$->F$DCB.NAME#.C;

  19982 18 003673   040000 100500                    MLR     fill='040'O
        18 003674   100010 200037                    ADSC9   8,,PR1                   cn=1,n=31
        18 003675   000015 000037 xsym               ADSC9   SPECCHARS+13             cn=0,n=31

     1233    19983    4               IF COMMAND = %RETRIEVE

  19983 18 003676   000000 235100                    LDA     0,,PR0
        18 003677   000034 115007                    CMPA    28,DL
        18 003700   003712 601000 18                 TNZ     s:19989

     1234    19984    5                THEN DO;

     1235    19985    5                  IF SPEC.STOP >= DISK_FILE_SPEC.SPEC.STOP(DISK_FILE_SPEC.NBR - 1)

  19985 18 003701   000000 473400 xsym               LDP3    DISK_FILE_SPEC$
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:224  
        18 003702   300000 236100                    LDQ     0,,PR3
        18 003703   000025 402007                    MPY     21,DL
        18 003704   000002 736000                    QLS     2
        18 003705   000106 106400                    CMPC    fill='000'O
        18 003706   000013 000050 xsym               ADSC9   SPECCHARS+11             cn=0,n=40
        18 003707   377773 000050                    ADSC9   -5,Q,PR3                 cn=0,n=40
        18 003710   003731 603000 18                 TRC     CHKALT

     1236    19986    5                   THEN EXIT MAIN_LOOP;
     1237    19987    5                  END;

  19987 18 003711   003727 710000 18                 TRA     s:19994

     1238    19988    5                ELSE DO;

     1239    19989    5                  IF SPEC.STOP >= DISK_FILE_SPEC.SPEC.STOP(DISK_FILE_SPEC.NBR - 1)

  19989 18 003712   000000 473400 xsym               LDP3    DISK_FILE_SPEC$
        18 003713   300000 236100                    LDQ     0,,PR3
        18 003714   000025 402007                    MPY     21,DL
        18 003715   000002 736000                    QLS     2
        18 003716   000106 106400                    CMPC    fill='000'O
        18 003717   000013 000050 xsym               ADSC9   SPECCHARS+11             cn=0,n=40
        18 003720   377773 000050                    ADSC9   -5,Q,PR3                 cn=0,n=40
        18 003721   003727 602000 18                 TNC     s:19994
        18 003722   000000 474400 xsym               LDP4    M$TAPE00$
        18 003723   400034 236100                    LDQ     28,,PR4
        18 003724   000022 772000                    QRL     18
        18 003725   000000 116000 xsym               CMPQ    LAST_TAPE_FSN
        18 003726   003731 605000 18                 TPL     CHKALT

     1240    19990    5                    AND M$TAPE00$->F$DCB.FSN# >= LAST_TAPE_FSN
     1241    19991    5                   THEN EXIT MAIN_LOOP;
     1242    19992    5                  END;

     1243    19993    4             END;

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:225  
     1244    19994    3            END;                           /* DO WHILE end  MAIN_LOOP            */

  19994 18 003727   000000 235000 xsym               LDA     BREAK_COUNT
        18 003730   001316 600000 18                 TZE     s:19501

  19994 18 003731                       CHKALT       null
     1245    19995
     1246    19996    2   CHKALT: ;
     1247    19997    3         DO CASE( SOURCE );

  19997 18 003731   200070 235100                    LDA     SOURCE,,AUTO
        18 003732   000002 115007                    CMPA    2,DL
        18 003733   003735 602005 18                 TNC     CHKALT+4,AL
        18 003734   001314 710000 18                 TRA     MAIN_LOOP
        18 003735   003764 710000 18                 TRA     s:20014
        18 003736   003737 710000 18                 TRA     JUSTDONE

     1248    19998    3          CASE( %DISK@ );

  19989 18 003737                       JUSTDONE     null
     1249    19999    3   JUSTDONE: ;
     1250    20000    3            IF NOT ANY_FILES_FOUND

  20000 18 003737   200076 234100                    SZN     ANY_FILES_FOUND,,AUTO
        18 003740   003752 604000 18                 TMI     s:20006

     1251    20001    4             THEN DO;

     1252    20002    4               IF FPT_EXIT.V.STEPCC#<%MINOR_ERROR

  20002 18 003741   000004 236000 xsym               LDQ     FPT_EXIT+4
        18 003742   777000 316003                    CANQ    -512,DU
        18 003743   003746 601000 18                 TNZ     s:20004

     1253    20003    4                THEN FPT_EXIT.V.STEPCC# = %MINOR_ERROR;

  20003 18 003744   001000 236003                    LDQ     512,DU
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:226  
        18 003745   000004 552040 xsym               STBQ    FPT_EXIT+4,'40'O

     1254    20004    4               CALL FLI$RPT_ERR( E_NOTHING_FOUND );

  20004 18 003746   000063 630400 19                 EPPR0   51
        18 003747   000017 631400 xsym               EPPR1   B_VECTNIL+15
        18 003750   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 003751   000000 011000                    NOP     0

     1255    20005    4               END;

     1256    20006    3            CALL FLM_FILE_FROM_DISK_CLEANUP(SAVE_ERR)

  20006 18 003752   200021 630500                    EPPR0   SAVE_ERR,,AUTO
        18 003753   200101 450500                    STP0    ANY_FILES_FOUND+3,,AUTO
        18 003754   007031 701000 18                 TSX1    FLM_FILE_FROM_DISK_CLEANUP
        18 003755   003757 702000 18                 TSX2    s:20008
        18 003756   003760 710000 18                 TRA     s:20010

     1257    20007    4             WHENALTRETURN DO;

     1258    20008    4               ALTRETURN;

  20008 18 003757   000000 702200 xent               TSX2  ! X66_AALT

     1259    20009    4               END;
     1260    20010    3            IF NOT ANY_FILES_FOUND

  20010 18 003760   200076 234100                    SZN     ANY_FILES_FOUND,,AUTO
        18 003761   003763 604000 18                 TMI     s:20012

     1261    20011    3             THEN ALTRETURN;

  20011 18 003762   000000 702200 xent               TSX2  ! X66_AALT

     1262    20012    3            RETURN;

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:227  
  20012 18 003763   000000 702200 xent               TSX2  ! X66_ARET

     1263    20013    3          CASE( %TAPE@ );

     1264    20014    3            IF NOT ANY_FILES_FOUND

  20014 18 003764   200076 234100                    SZN     ANY_FILES_FOUND,,AUTO
        18 003765   004014 604000 18                 TMI     s:20030

     1265    20015    4             THEN DO;

     1266    20016    4               IF ERR.CODE = %E$EOSET

  20016 18 003766   200020 236100                    LDQ     ERR,,AUTO
        18 003767   377770 376007                    ANQ     131064,DL
        18 003770   013140 116007                    CMPQ    5728,DL
        18 003771   003776 601000 18                 TNZ     s:20018

     1267    20017    4                THEN CALL FLI$RPT_ERR;

  20017 18 003772   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 003773   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 003774   000000 011000                    NOP     0
        18 003775   004045 710000 18                 TRA     s:20043

     1268    20018    4                ELSE IF NOT ERR OR ERR.CODE = %E$EOF

  20018 18 003776   200020 235100                    LDA     ERR,,AUTO
        18 003777   004002 600000 18                 TZE     s:20020
        18 004000   000060 116007                    CMPQ    48,DL
        18 004001   004045 601000 18                 TNZ     s:20043

     1269    20019    5                   THEN DO;

     1270    20020    5                     IF FPT_EXIT.V.STEPCC#<%MINOR_ERROR

  20020 18 004002   000004 236000 xsym               LDQ     FPT_EXIT+4
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:228  
        18 004003   777000 316003                    CANQ    -512,DU
        18 004004   004007 601000 18                 TNZ     s:20022

     1271    20021    5                      THEN FPT_EXIT.V.STEPCC# = %MINOR_ERROR;

  20021 18 004005   001000 236003                    LDQ     512,DU
        18 004006   000004 552040 xsym               STBQ    FPT_EXIT+4,'40'O

     1272    20022    5                     CALL FLI$RPT_ERR( E_NOTHING_FOUND );

  20022 18 004007   000063 630400 19                 EPPR0   51
        18 004010   000017 631400 xsym               EPPR1   B_VECTNIL+15
        18 004011   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 004012   000000 011000                    NOP     0

     1273    20023    5                     END;

     1274    20024    4               END;

  20024 18 004013   004045 710000 18                 TRA     s:20043

     1275    20025    4             ELSE DO;

     1276    20026        /***
     1277    20027         *** If check just completed for unprotected transfer, must delete the
     1278    20028         *** source files that were previously moved if not bad tape.
     1279    20029         ***/
     1280    20030    4               IF (COMMAND = %CHECK

  20030 18 004014   200003 470500                    LDP0    @COMMAND,,AUTO
        18 004015   000000 235100                    LDA     0,,PR0
        18 004016   000003 115007                    CMPA    3,DL
        18 004017   004045 601000 18                 TNZ     s:20043
        18 004020   000000 234000 xsym               SZN     TAPE_OPTION
        18 004021   004045 605000 18                 TPL     s:20043
        18 004022   000002 236000 xsym               LDQ     DISK_OPTION+2
        18 004023   000400 316003                    CANQ    256,DU
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:229  
        18 004024   004045 600000 18                 TZE     s:20043
        18 004025   040000 316003                    CANQ    16384,DU
        18 004026   004045 600000 18                 TZE     s:20043
        18 004027   000000 234000 xsym               SZN     TAPE_BAD
        18 004030   004045 604000 18                 TMI     s:20043

     1281    20031    4                 AND TAPE_OPTION.CHECK
     1282    20032    4                 AND DISK_OPTION.XFER
     1283    20033    4                 AND DISK_OPTION.DELETE
     1284    20034    4                 AND NOT TAPE_BAD)
     1285    20035    5                THEN DO;

     1286    20036    5                  CALL FLM_CLEANUP (SAVE_ERR);

  20036 18 004031   200021 631500                    EPPR1   SAVE_ERR,,AUTO
        18 004032   200105 451500                    STP1    DCB#+2,,AUTO
        18 004033   012215 701000 18                 TSX1    FLM_CLEANUP
        18 004034   000000 011000                    NOP     0

     1287    20037    5                  CALL M$CLOSE(CLOSE_DELETE_LIST)

  20037 18 004035   000004 630400 17                 EPPR0   CLOSE_DELETE_LIST
        18 004036   450001 713400                    CLIMB   alt,close
        18 004037   406000 401760                    pmme    nvectors=13
        18 004040   004042 702000 18                 TSX2    s:20039
        18 004041   004045 710000 18                 TRA     s:20043

     1288    20038    6                   WHENALTRETURN DO;

     1289    20039    6                     CALL FLI$RPT_ERR;

  20039 18 004042   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 004043   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 004044   000000 011000                    NOP     0

     1290    20040    6                     END;

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:230  
     1291    20041    5                  END;

     1292    20042    4               END;

     1293    20043    3            CALL FLC$TAPE_CLOSE( ERR )

  20043 18 004045   200020 630500                    EPPR0   ERR,,AUTO
        18 004046   200124 450500                    STP0    @DISP+1,,AUTO
        18 004047   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 004050   000017 631400 xsym               EPPR1   B_VECTNIL+15
        18 004051   000000 701000 xent               TSX1    FLC$TAPE_CLOSE
        18 004052   004054 702000 18                 TSX2    s:20046
        18 004053   004054 710000 18                 TRA     s:20046

     1294    20044    4             WHENALTRETURN DO;

     1295    20045    4               END;

     1296    20046    3            IF DCBADDR(DCBNUM(M$NODATA_LIST))->F$DCB.FCD#

  20046 18 004054   000000 236007 xsym               LDQ     M$NODATA_LIST,DL
        18 004055   000031 470400 19                 LDP0    25
        18 004056   000000 471500                    LDP1    0,,PR0
        18 004057   100000 473506                    LDP3    0,QL,PR1
        18 004060   300031 236100                    LDQ     25,,PR3
        18 004061   020000 316007                    CANQ    8192,DL
        18 004062   004070 600000 18                 TZE     s:20050

     1297    20047    3             THEN CALL M$CLOSE( CLOSE_NODATA_LIST )

  20047 18 004063   000000 630400 xsym               EPPR0   CLOSE_NODATA_LIST
        18 004064   450001 713400                    CLIMB   alt,close
        18 004065   406000 401760                    pmme    nvectors=13
        18 004066   004070 702000 18                 TSX2    s:20050
        18 004067   004070 710000 18                 TRA     s:20050

     1298    20048    4                WHENALTRETURN DO;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:231  

     1299    20049    4                  END;

     1300    20050    3            IF USE_TSN_USED

  20050 18 004070   200053 234100                    SZN     USE_TSN_USED,,AUTO
        18 004071   004154 605000 18                 TPL     s:20078

     1301    20051    4             THEN DO;       /* Must set up SN list from previous information     */

     1302    20052    4               SET_NBR = SET_NBR + 1;      /* Use next list                      */

  20052 18 004072   200054 054100                    AOS     SET_NBR,,AUTO

     1303    20053    4               CALL FLI$TSN_USED( SET_NBR,SNLIST_NBR )

  20053 18 004073   000040 236000 19                 LDQ     32
        18 004074   200125 756100                    STQ     @DISP+2,,AUTO
        18 004075   200054 630500                    EPPR0   SET_NBR,,AUTO
        18 004076   200124 450500                    STP0    @DISP+1,,AUTO
        18 004077   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 004100   000020 631400 xsym               EPPR1   B_VECTNIL+16
        18 004101   000000 701000 xent               TSX1    FLI$TSN_USED
        18 004102   004104 702000 18                 TSX2    s:20055
        18 004103   004153 710000 18                 TRA     s:20076

     1304    20054    5                WHENALTRETURN DO;

     1305    20055    5                  IF TAPE_BAD

  20055 18 004104   000000 234000 xsym               SZN     TAPE_BAD
        18 004105   004115 605000 18                 TPL     s:20061

     1306    20056    6                   THEN DO;

     1307    20057    6                     IF FPT_EXIT.V.STEPCC#<%SERIOUS_ERROR

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:232  
  20057 18 004106   000004 236000 xsym               LDQ     FPT_EXIT+4
        18 004107   777000 376003                    ANQ     -512,DU
        18 004110   002000 116003                    CMPQ    1024,DU
        18 004111   004114 603000 18                 TRC     s:20059

     1308    20058    6                      THEN FPT_EXIT.V.STEPCC# = %SERIOUS_ERROR;

  20058 18 004112   002000 236003                    LDQ     1024,DU
        18 004113   000004 552040 xsym               STBQ    FPT_EXIT+4,'40'O

     1309    20059    6                     ALTRETURN;

  20059 18 004114   000000 702200 xent               TSX2  ! X66_AALT

     1310    20060    6                     END;
     1311    20061    6                  DO WHILE ( SNLIST_NBR + 1  < NBR_SNLISTS );

  20061 18 004115   004146 710000 18                 TRA     s:20073

     1312    20062    6                     SNLIST_NBR = SNLIST_NBR + 1;

  20062 18 004116   000000 054000 xsym               AOS     SNLIST_NBR

     1313    20063    6                     BREAK_TASK = 'Autochecking!';

  20063 18 004117   040000 100400                    MLR     fill='040'O
        18 004120   000043 000015 17                 ADSC9   NO_LEADING_5_ZEROS+1     cn=0,n=13
        18 004121   000000 000022 xsym               ADSC9   BREAK_TASK               cn=0,n=18

     1314    20064    6                     TAPE_OPEN.SN_ = VECTOR(ERASE); /* Indicate internal SN list */

  20064 18 004122   000016 237000 19                 LDAQ    14
        18 004123   000002 757000 xsym               STAQ    TAPE_OPEN+2

     1315    20065    6                     CALL FLM$MOVE( %CHECK )

  20065 18 004124   000042 630400 19                 EPPR0   34
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:233  
        18 004125   000017 631400 xsym               EPPR1   B_VECTNIL+15
        18 004126   000000 701000 18                 TSX1    s:8
        18 004127   004131 702000 18                 TSX2    s:20067
        18 004130   004132 710000 18                 TRA     s:20069

     1316    20066    7                      WHENALTRETURN DO;

     1317    20067    7                        ALTRETURN;

  20067 18 004131   000000 702200 xent               TSX2  ! X66_AALT

     1318    20068    7                        END;
     1319    20069    6                     FPT_REM.V.PSN# = TAPE_DCBLIST.DCB$(SNLIST_NBR)->F$DCB.PSN#;

  20069 18 004132   000000 235000 xsym               LDA     SNLIST_NBR
        18 004133   000001 735000                    ALS     1
        18 004134   000000 470400 xsym               LDP0    TAPE_DCBLIST$
        18 004135   000001 471505                    LDP1    1,AL,PR0
        18 004136   040000 100500                    MLR     fill='040'O
        18 004137   100024 000006                    ADSC9   20,,PR1                  cn=0,n=6
        18 004140   003300 400006 2                  ADSC9   FPT_REM+2                cn=2,n=6

     1320    20070    6                     CALL M$REM( FPT_REM ) /* Remove duplicate tape set          */

  20070 18 004141   003276 630400 2                  EPPR0   FPT_REM
        18 004142   460006 713400                    CLIMB   alt,+24582
        18 004143   400000 401760                    pmme    nvectors=1
        18 004144   004146 702000 18                 TSX2    s:20073
        18 004145   004146 710000 18                 TRA     s:20073

     1321    20071    7                      WHENALTRETURN DO;

     1322    20072    7                        END;

     1323    20073    6                     END;

  20073 18 004146   000000 236000 xsym               LDQ     SNLIST_NBR
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:234  
        18 004147   000001 036007                    ADLQ    1,DL
        18 004150   000000 116000 xsym               CMPQ    NBR_SNLISTS
        18 004151   004116 604000 18                 TMI     s:20062

     1324    20074    5                  RETURN;

  20074 18 004152   000000 702200 xent               TSX2  ! X66_ARET

     1325    20075    5                  END;
     1326    20076    4               END;

  20076 18 004153   001314 710000 18                 TRA     MAIN_LOOP

     1327    20077    4             ELSE DO;

     1328    20078    4               IF TAPE_BAD

  20078 18 004154   000000 234000 xsym               SZN     TAPE_BAD
        18 004155   004165 605000 18                 TPL     s:20084

     1329    20079    5                THEN DO;

     1330    20080    5                  IF FPT_EXIT.V.STEPCC#<%SERIOUS_ERROR

  20080 18 004156   000004 236000 xsym               LDQ     FPT_EXIT+4
        18 004157   777000 376003                    ANQ     -512,DU
        18 004160   002000 116003                    CMPQ    1024,DU
        18 004161   004164 603000 18                 TRC     s:20082

     1331    20081    5                   THEN FPT_EXIT.V.STEPCC# = %SERIOUS_ERROR;

  20081 18 004162   002000 236003                    LDQ     1024,DU
        18 004163   000004 552040 xsym               STBQ    FPT_EXIT+4,'40'O

     1332    20082    5                  ALTRETURN;

  20082 18 004164   000000 702200 xent               TSX2  ! X66_AALT
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:235  

     1333    20083    5                  END;
     1334    20084    4               RETURN;

  20084 18 004165   000000 702200 xent               TSX2  ! X66_ARET

     1335    20085    4               END;
     1336    20086    3          END;

     1337    20087    2         END;

  20081 18 004166                       JUSTSTOP     null
     1338    20088
     1339    20089    1   JUSTSTOP: ;
     1340    20090    1      IF FPT_EXIT.V.STEPCC# < %SERIOUS_ERROR

  20090 18 004166   000004 236000 xsym               LDQ     FPT_EXIT+4
        18 004167   777000 376003                    ANQ     -512,DU
        18 004170   002000 116003                    CMPQ    1024,DU
        18 004171   004174 603000 18                 TRC     s:20092

     1341    20091    1       THEN FPT_EXIT.V.STEPCC# = %SERIOUS_ERROR;

  20091 18 004172   002000 236003                    LDQ     1024,DU
        18 004173   000004 552040 xsym               STBQ    FPT_EXIT+4,'40'O

     1342    20092    2      DO CASE( SOURCE );

  20092 18 004174   200070 235100                    LDA     SOURCE,,AUTO
        18 004175   000002 115007                    CMPA    2,DL
        18 004176   004200 602005 18                 TNC     s:20092+4,AL
        18 004177   004236 710000 18                 TRA     s:20108
        18 004200   004213 710000 18                 TRA     s:20099
        18 004201   004202 710000 18                 TRA     s:20094

     1343    20093    2       CASE( %DISK@ );

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:236  
     1344    20094    2         CALL FLN$DISK_CLOSE_ALL;

  20094 18 004202   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 004203   000000 701000 xent               TSX1    FLN$DISK_CLOSE_ALL
        18 004204   000000 011000                    NOP     0

     1345    20095    2         CALL M$CLOSE( CLOSE_DELETE_LIST )

  20095 18 004205   000004 630400 17                 EPPR0   CLOSE_DELETE_LIST
        18 004206   450001 713400                    CLIMB   alt,close
        18 004207   406000 401760                    pmme    nvectors=13
        18 004210   004212 702000 18                 TSX2    s:20097
        18 004211   004212 710000 18                 TRA     s:20097

     1346    20096    3          WHENALTRETURN DO;

     1347    20097    3            END;

  20097 18 004212   004236 710000 18                 TRA     s:20108

     1348    20098    2       CASE( %TAPE@ );

     1349    20099    2         CALL FLC$TAPE_CLOSE( ERR )

  20099 18 004213   200020 630500                    EPPR0   ERR,,AUTO
        18 004214   200124 450500                    STP0    @DISP+1,,AUTO
        18 004215   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 004216   000017 631400 xsym               EPPR1   B_VECTNIL+15
        18 004217   000000 701000 xent               TSX1    FLC$TAPE_CLOSE
        18 004220   004222 702000 18                 TSX2    s:20102
        18 004221   004222 710000 18                 TRA     s:20102

     1350    20100    3          WHENALTRETURN DO;

     1351    20101    3            END;

     1352    20102    2         IF DCBADDR(DCBNUM(M$NODATA_LIST))->F$DCB.FCD#
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:237  

  20102 18 004222   000000 236007 xsym               LDQ     M$NODATA_LIST,DL
        18 004223   000031 470400 19                 LDP0    25
        18 004224   000000 471500                    LDP1    0,,PR0
        18 004225   100000 473506                    LDP3    0,QL,PR1
        18 004226   300031 236100                    LDQ     25,,PR3
        18 004227   020000 316007                    CANQ    8192,DL
        18 004230   004236 600000 18                 TZE     s:20108

     1353    20103    2          THEN CALL M$CLOSE( CLOSE_NODATA_LIST )

  20103 18 004231   000000 630400 xsym               EPPR0   CLOSE_NODATA_LIST
        18 004232   450001 713400                    CLIMB   alt,close
        18 004233   406000 401760                    pmme    nvectors=13
        18 004234   004236 702000 18                 TSX2    s:20108
        18 004235   004236 710000 18                 TRA     s:20108

     1354    20104    3             WHENALTRETURN DO;

     1355    20105    3               END;

     1356    20106    2       END;

     1357    20107
     1358    20108    2      DO CASE( DEST );

  20108 18 004236   200071 235100                    LDA     DEST,,AUTO
        18 004237   000001 115007                    CMPA    1,DL
        18 004240   004242 602005 18                 TNC     s:20108+4,AL
        18 004241   004265 710000 18                 TRA     s:20125
        18 004242   004243 710000 18                 TRA     s:20110

     1359    20109    2       CASE( %TAPE@ );

     1360    20110    2         CALL FLM_UPDATE_RUN_INFO;

  20110 18 004243   004271 701000 18                 TSX1    FLM_UPDATE_RUN_INFO
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:238  
        18 004244   000000 011000                    NOP     0

     1361    20111    2         CALL FLS$FILE_PACKER_FIN( COMMAND )

  20111 18 004245   200003 630500                    EPPR0   @COMMAND,,AUTO
        18 004246   000017 631400 xsym               EPPR1   B_VECTNIL+15
        18 004247   000000 701000 xent               TSX1    FLS$FILE_PACKER_FIN
        18 004250   004252 702000 18                 TSX2    s:20118
        18 004251   004265 710000 18                 TRA     s:20125

     1362    20112    3          WHENALTRETURN DO;

     1363    20113
     1364    20114        /***
     1365    20115         *** All files contained in the last block that did not get written due
     1366    20116         *** to an error, requeue for stowing (QS).
     1367    20117         ***/
     1368    20118    3            IF COMMAND = %ARCHIVE_CMD

  20118 18 004252   200003 470500                    LDP0    @COMMAND,,AUTO
        18 004253   000000 235100                    LDA     0,,PR0
        18 004254   000027 115007                    CMPA    23,DL
        18 004255   004263 600000 18                 TZE     s:20121
        18 004256   000030 115007                    CMPA    24,DL
        18 004257   004265 601000 18                 TNZ     s:20125
        18 004260   000000 236000 xsym               LDQ     ARCHIVE$
        18 004261   000001 116000 xsym               CMPQ    B_VECTNIL+1
        18 004262   004265 600000 18                 TZE     s:20125

     1369    20119    3              OR (COMMAND = %PURGE AND ARCHIVE$ ~= ADDR(NIL))
     1370    20120    4             THEN DO;

     1371    20121    4               CALL FLM_REQUEUE_FILES_FOR_STOW;

  20121 18 004263   013551 701000 18                 TSX1    FLM_REQUEUE_FILES_FOR_STOW
        18 004264   000000 011000                    NOP     0

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:239  
     1372    20122    4               END;

     1373    20123    3            END;

     1374    20124    2       END;

     1375    20125    1      IF NOT ANY_FILES_FOUND

  20125 18 004265   200076 234100                    SZN     ANY_FILES_FOUND,,AUTO
        18 004266   004270 604000 18                 TMI     s:20127

     1376    20126    1       THEN ALTRETURN;

  20126 18 004267   000000 702200 xent               TSX2  ! X66_AALT

     1377    20127    1      RETURN;

  20127 18 004270   000000 702200 xent               TSX2  ! X66_ARET

     1378    20128
     1379    20129
     1380    20130
     1381    20131    1   FLM_UPDATE_RUN_INFO: PROC;

  20131 18 004271   200104 741300       FLM_UPDATE_* STX1  ! DCB#+1,,AUTO

     1382    20132
     1383    20133    2   DCL M$TSN_USED$ PTR AUTO;
     1384    20134    2   DCL DPX SBIN AUTO;
     1385    20135    2   DCL DP_RUN_NBR SBIN AUTO;
     1386    20136    2   DCL 1 UPDATE_FPARAM_ DALIGNED,
     1387    20137    2         2 BOUND UBIN (20) UNAL,
     1388    20138    2         2 * BIT (16) UNAL,
     1389    20139    2         2 PTR$ PTR;
     1390    20140
     1391    20141    2   DCL 1 STATUS_KEY_SAVE AUTO,
     1392    20142    2         2 L UBIN BYTE CALIGNED,
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:240  
     1393    20143    2         2 RUN_NBR UBIN BYTE CALIGNED,
     1394    20144    2         2 TSN_SET_NBR UBIN BYTE CALIGNED,
     1395    20145    2         2 TSN_VOL UBIN BYTE CALIGNED;
     1396    20146
     1397    20147    2   DCL 1 TSN_USED_BUF_SAVE AUTO,
     1398    20148    2         2 UTS UBIN WORD,
     1399    20149    2         2 FIRST_ACCT CHAR(8),
     1400    20150    2         2 LAST_ACCT CHAR(8),
     1401    20151    2         2 TSN CHAR(6),
     1402    20152    2         2 FSN UBIN HALF CALIGNED,
     1403    20153    2         2 BACKUP_FSN UBIN HALF CALIGNED;
     1404    20154
     1405    20155        /********************/
     1406    20156
     1407    20157    2      IF NOT ANY_FILES_FOUND THEN RETURN;

  20157 18 004272   200076 234100                    SZN     ANY_FILES_FOUND,,AUTO
        18 004273   004275 604000 18                 TMI     s:20159

  20157 18 004274   000001 702211                    TSX2  ! 1,X1

     1408    20158
     1409    20159    2      M$TSN_USED$ = DCBADDR(DCBNUM(M$TSN_USED));

  20159 18 004275   000000 236007 xsym               LDQ     M$TSN_USED,DL
        18 004276   000031 470400 19                 LDP0    25
        18 004277   000000 471500                    LDP1    0,,PR0
        18 004300   100000 236106                    LDQ     0,QL,PR1
        18 004301   200105 756100                    STQ     M$TSN_USED$,,AUTO

     1410    20160    2      IF M$TSN_USED$->F$DCB.FCD#

  20160 18 004302   200105 473500                    LDP3    M$TSN_USED$,,AUTO
        18 004303   300031 236100                    LDQ     25,,PR3
        18 004304   020000 316007                    CANQ    8192,DL
        18 004305   004776 600000 18                 TZE     s:20319

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:241  
     1411    20161    3       THEN DO;                            /* Update file                        */

     1412    20162    3         TSN_USED_KEY.L = LENGTHV(TSN_USED_KEY);

  20162 18 004306   004000 236003                    LDQ     2048,DU
        18 004307   000000 552040 xsym               STBQ    TSN_USED_KEY,'40'O

     1413    20163    3         TSN_USED_KEY.RUN_NBR = 0;

  20163 18 004310   000000 236003                    LDQ     0,DU
        18 004311   000000 552020 xsym               STBQ    TSN_USED_KEY,'20'O

     1414    20164    3         TSN_USED_KEY.TSN_SET_NBR = 0;

  20164 18 004312   000000 552010 xsym               STBQ    TSN_USED_KEY,'10'O

     1415    20165    3         TSN_USED_KEY.TSN_VOL = 0;

  20165 18 004313   000000 552004 xsym               STBQ    TSN_USED_KEY,'04'O

     1416    20166    3         TSN_USED_KEY.TSN_SNLIST_NBR = 0;

  20166 18 004314   000001 552040 xsym               STBQ    TSN_USED_KEY+1,'40'O

     1417    20167    3         TSN_USED_BUF = '0'B;

  20167 18 004315   000000 100400                    MLR     fill='000'O
        18 004316   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
        18 004317   000000 000036 xsym               ADSC9   TSN_USED_BUF             cn=0,n=30

     1418    20168    3         TSN_USED_BUF.UTS = RUN_NBR;

  20168 18 004320   000000 235000 xsym               LDA     RUN_NBR
        18 004321   000000 755000 xsym               STA     TSN_USED_BUF

     1419    20169    3         CALL M$WRITE( WRITE_TSN_USED )

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:242  
  20169 18 004322   000000 630400 xsym               EPPR0   WRITE_TSN_USED
        18 004323   440001 713400                    CLIMB   alt,write
        18 004324   401400 401760                    pmme    nvectors=4
        18 004325   004327 702000 18                 TSX2    s:20171
        18 004326   004332 710000 18                 TRA     s:20174

     1420    20170    4          WHENALTRETURN DO;

     1421    20171    4            CALL FLI$RPT_ERR;

  20171 18 004327   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 004330   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 004331   000000 011000                    NOP     0

     1422    20172    4            END;

     1423    20173
     1424    20174    3         IF COMMAND = %SAVE OR COMMAND = %BACKUP

  20174 18 004332   200003 470500                    LDP0    @COMMAND,,AUTO
        18 004333   000000 235100                    LDA     0,,PR0
        18 004334   000006 115007                    CMPA    6,DL
        18 004335   004340 600000 18                 TZE     s:20176
        18 004336   000010 115007                    CMPA    8,DL
        18 004337   004772 601000 18                 TNZ     s:20316

     1425    20175    4          THEN DO;

     1426    20176    4            IF COMMAND = %SAVE

  20176 18 004340   000006 115007                    CMPA    6,DL
        18 004341   004344 601000 18                 TNZ     s:20178

     1427    20177    4             THEN OPEN_STATUS.V.EXIST# = %NEWFILE#;

  20177 18 004342   000600 236007                    LDQ     384,DL
        18 004343   000044 256000 xsym               ORSQ    OPEN_STATUS+36
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:243  

     1428    20178    4            OPEN_STATUS.V.FUN# = %CREATE#;

  20178 18 004344   003000 236007                    LDQ     1536,DL
        18 004345   000045 552010 xsym               STBQ    OPEN_STATUS+37,'10'O

     1429    20179    4            OPEN_STATUS.V.EXPIRE# = %NEVER#;

  20179 18 004346   000001 335007                    LCA     1,DL
        18 004347   000057 755000 xsym               STA     OPEN_STATUS+47

     1430    20180    5            DO DPX=0 TO DPLIST.NUM#-1;

  20180 18 004350   200106 450100                    STZ     DPX,,AUTO
        18 004351   004766 710000 18                 TRA     s:20314+1

     1431    20181    5               BACKUP_SN.SN#(0) = DPLIST.SN#(DPX);

  20181 18 004352   200106 236100                    LDQ     DPX,,AUTO
        18 004353   000006 402007                    MPY     6,DL
        18 004354   000000 470400 xsym               LDP0    DPLIST$
        18 004355   040000 100506                    MLR     fill='040'O
        18 004356   000001 000006                    ADSC9   1,Q,PR0                  cn=0,n=6
        18 004357   000001 000006 xsym               ADSC9   BACKUP_SN+1              cn=0,n=6

     1432    20182    5               OPEN_STATUS.V.RES# = DPRESLIST.NAME(DPX);

  20182 18 004360   000000 471400 xsym               LDP1    DPRESLIST$
        18 004361   200106 720100                    LXL0    DPX,,AUTO
        18 004362   100001 236110                    LDQ     1,X0,PR1
        18 004363   000050 756000 xsym               STQ     OPEN_STATUS+40

     1433    20183    5               CALL FLI$BUILD_$$EFT ( DPLIST.SN#(DPX) )

  20183 18 004364   200106 236100                    LDQ     DPX,,AUTO
        18 004365   000064 402000 19                 MPY     52
        18 004366   000001 036003                    ADLQ    1,DU
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:244  
        18 004367   000000 036000 xsym               ADLQ    DPLIST$
        18 004370   200124 756100                    STQ     @DISP+1,,AUTO
        18 004371   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 004372   000017 631400 xsym               EPPR1   B_VECTNIL+15
        18 004373   000000 701000 xent               TSX1    FLI$BUILD_$$EFT
        18 004374   004376 702000 18                 TSX2    s:20186
        18 004375   004376 710000 18                 TRA     s:20186

     1434    20184    6                WHENALTRETURN DO;

     1435    20185    6                  END;

     1436    20186    5               CALL M$OPEN( OPEN_STATUS )

  20186 18 004376   000000 630400 xsym               EPPR0   OPEN_STATUS
        18 004377   450000 713400                    CLIMB   alt,open
        18 004400   410400 401760                    pmme    nvectors=18
        18 004401   004762 702000 18                 TSX2    s:20312

     1437    20187    6                WHENRETURN DO;

     1438    20188    6                  IF COMMAND ~= %SAVE

  20188 18 004402   200003 470500                    LDP0    @COMMAND,,AUTO
        18 004403   000000 235100                    LDA     0,,PR0
        18 004404   000006 115007                    CMPA    6,DL
        18 004405   004431 600000 18                 TZE     s:20203

     1439    20189    7                   THEN DO;

     1440    20190    7                     STATUS_KEY.L = LENGTHV(STATUS_KEY);

  20190 18 004406   003000 236003                    LDQ     1536,DU
        18 004407   000000 552040 xsym               STBQ    STATUS_KEY,'40'O

     1441    20191    7                     STATUS_KEY.RUN_NBR = 0;

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:245  
  20191 18 004410   000000 236003                    LDQ     0,DU
        18 004411   000000 552020 xsym               STBQ    STATUS_KEY,'20'O

     1442    20192    7                     STATUS_KEY.TSN_SET_NBR = 0;

  20192 18 004412   000000 552010 xsym               STBQ    STATUS_KEY,'10'O

     1443    20193    7                     STATUS_KEY.TSN_VOL = 0;

  20193 18 004413   000000 552004 xsym               STBQ    STATUS_KEY,'04'O

     1444    20194    7                     READ_STATUS.V.KEYS# = '1'B;

  20194 18 004414   200000 236007                    LDQ     65536,DL
        18 004415   000010 256000 xsym               ORSQ    READ_STATUS+8

     1445    20195    7                     CALL M$READ( READ_STATUS )

  20195 18 004416   000000 630400 xsym               EPPR0   READ_STATUS
        18 004417   440000 713400                    CLIMB   alt,read
        18 004420   401400 401760                    pmme    nvectors=4
        18 004421   004426 702000 18                 TSX2    s:20200

     1446    20196    8                      WHENRETURN DO;

     1447    20197    8                        DP_RUN_NBR = TSN_USED_BUF.UTS + 1;

  20197 18 004422   000000 235000 xsym               LDA     TSN_USED_BUF
        18 004423   000001 035007                    ADLA    1,DL
        18 004424   200107 755100                    STA     DP_RUN_NBR,,AUTO

     1448    20198    8                        END;

  20198 18 004425   004430 710000 18                 TRA     s:20202

     1449    20199    8                      WHENALTRETURN DO;

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:246  
     1450    20200    8                        DP_RUN_NBR = 1;

  20200 18 004426   000001 235007                    LDA     1,DL
        18 004427   200107 755100                    STA     DP_RUN_NBR,,AUTO

     1451    20201    8                        END;

     1452    20202    7                     END;

  20202 18 004430   004433 710000 18                 TRA     s:20204

     1453    20203    6                   ELSE DP_RUN_NBR = 1;

  20203 18 004431   000001 236007                    LDQ     1,DL
        18 004432   200107 756100                    STQ     DP_RUN_NBR,,AUTO

     1454    20204    6                  STATUS_KEY.L = LENGTHV(STATUS_KEY);

  20204 18 004433   003000 236003                    LDQ     1536,DU
        18 004434   000000 552040 xsym               STBQ    STATUS_KEY,'40'O

     1455    20205    6                  STATUS_KEY.RUN_NBR = DP_RUN_NBR;

  20205 18 004435   200107 236100                    LDQ     DP_RUN_NBR,,AUTO
        18 004436   000022 736000                    QLS     18
        18 004437   000000 552020 xsym               STBQ    STATUS_KEY,'20'O

     1456    20206    6                  STATUS_KEY.TSN_SET_NBR = TSN_SET_NBR;

  20206 18 004440   000000 236000 xsym               LDQ     TSN_SET_NBR
        18 004441   000011 736000                    QLS     9
        18 004442   000000 552010 xsym               STBQ    STATUS_KEY,'10'O

     1457    20207        /***
     1458    20208         *** If no files qualified for backup, TSN_VOL does not get set. Init.
     1459    20209         *** STATUS_KEY.TSN_VOL to first volume.
     1460    20210         *** Note that the FSN for the :BACKUP file when written to tape is expected to
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:247  
     1461    20211         *** be one greater than the current FSN. This set in advance so that the value
     1462    20212         *** for BACKUP_FSN is correct on the backup tape in case a rebuild is required.
     1463    20213        ***/
     1464    20214    6                  IF TSN_VOL ~= 0

  20214 18 004443   000000 235000 xsym               LDA     TSN_VOL
        18 004444   004450 600000 18                 TZE     s:20216

     1465    20215    6                   THEN STATUS_KEY.TSN_VOL = TSN_VOL;

  20215 18 004445   000000 236000 xsym               LDQ     TSN_VOL
        18 004446   000000 552004 xsym               STBQ    STATUS_KEY,'04'O
        18 004447   004452 710000 18                 TRA     s:20217

     1466    20216    6                   ELSE STATUS_KEY.TSN_VOL = 1;

  20216 18 004450   000001 236007                    LDQ     1,DL
        18 004451   000000 552004 xsym               STBQ    STATUS_KEY,'04'O

     1467    20217    6                  TSN_USED_BUF.TSN = TAPE_SN;

  20217 18 004452   040000 100400                    MLR     fill='040'O
        18 004453   000000 000006 xsym               ADSC9   TAPE_SN                  cn=0,n=6
        18 004454   000005 000006 xsym               ADSC9   TSN_USED_BUF+5           cn=0,n=6

     1468    20218    6                  TSN_USED_BUF.FSN = TAPE_FSN;

  20218 18 004455   000000 720000 xsym               LXL0    TAPE_FSN
        18 004456   000006 440000 xsym               SXL0    TSN_USED_BUF+6

     1469    20219    6                  TSN_USED_BUF.BACKUP_FSN = TAPE_FSN  + 1;

  20219 18 004457   000001 621010                    EAX1    1,X0
        18 004460   000007 741000 xsym               STX1    TSN_USED_BUF+7

     1470    20220    6                  CALL M$TIME( GET_NOW_UTS );

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:248  
  20220 18 004461   000000 630400 xsym               EPPR0   GET_NOW_UTS
        18 004462   020004 713400                    CLIMB   8196
        18 004463   402000 401760                    pmme    nvectors=5

     1471    20221    6                  TSN_USED_BUF.UTS = NOW_UTS;

  20221 18 004464   000000 235000 xsym               LDA     NOW_UTS
        18 004465   000000 755000 xsym               STA     TSN_USED_BUF

     1472    20222    6                  TSN_USED_BUF.FIRST_ACCT = DISK_ACCT_FIRST.ACCT#;

  20222 18 004466   040000 100400                    MLR     fill='040'O
        18 004467   000000 000010 xsym               ADSC9   DISK_ACCT_FIRST          cn=0,n=8
        18 004470   000001 000010 xsym               ADSC9   TSN_USED_BUF+1           cn=0,n=8

     1473    20223    6                  TSN_USED_BUF.LAST_ACCT = DISK_ACCT_LAST.ACCT#;

  20223 18 004471   040000 100400                    MLR     fill='040'O
        18 004472   000000 000010 xsym               ADSC9   DISK_ACCT_LAST           cn=0,n=8
        18 004473   000003 000010 xsym               ADSC9   TSN_USED_BUF+3           cn=0,n=8

     1474    20224    6                  CALL M$WRITE( WRITE_STATUS )

  20224 18 004474   000000 630400 xsym               EPPR0   WRITE_STATUS
        18 004475   440001 713400                    CLIMB   alt,write
        18 004476   401400 401760                    pmme    nvectors=4
        18 004477   004501 702000 18                 TSX2    s:20228
        18 004500   004501 710000 18                 TRA     s:20228

     1475    20225    7                   WHENALTRETURN DO;

     1476    20226    7                     END;

     1477    20227
     1478    20228    6                  STATUS_KEY_SAVE = STATUS_KEY;

  20228 18 004501   000000 236000 xsym               LDQ     STATUS_KEY
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:249  
        18 004502   200112 756100                    STQ     STATUS_KEY_SAVE,,AUTO

     1479    20229    6                  TSN_USED_BUF_SAVE = TSN_USED_BUF;

  20229 18 004503   000100 100400                    MLR     fill='000'O
        18 004504   000000 000036 xsym               ADSC9   TSN_USED_BUF             cn=0,n=30
        18 004505   200113 000036                    ADSC9   TSN_USED_BUF_SAVE,,AUTO  cn=0,n=30

     1480    20230
     1481    20231    6                  STATUS_KEY.L = LENGTHV(STATUS_KEY);

  20231 18 004506   003000 236003                    LDQ     1536,DU
        18 004507   000000 552040 xsym               STBQ    STATUS_KEY,'40'O

     1482    20232    6                  STATUS_KEY.RUN_NBR = 0;

  20232 18 004510   000000 236003                    LDQ     0,DU
        18 004511   000000 552020 xsym               STBQ    STATUS_KEY,'20'O

     1483    20233    6                  STATUS_KEY.TSN_SET_NBR = 0;

  20233 18 004512   000000 552010 xsym               STBQ    STATUS_KEY,'10'O

     1484    20234    6                  STATUS_KEY.TSN_VOL = 0;

  20234 18 004513   000000 552004 xsym               STBQ    STATUS_KEY,'04'O

     1485    20235    6                  TSN_USED_BUF.TSN = ' ';

  20235 18 004514   040000 100400                    MLR     fill='040'O
        18 004515   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        18 004516   000005 000006 xsym               ADSC9   TSN_USED_BUF+5           cn=0,n=6

     1486    20236    6                  TSN_USED_BUF.FSN = 0;

  20236 18 004517   000000 220003                    LDX0    0,DU
        18 004520   000006 440000 xsym               SXL0    TSN_USED_BUF+6
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:250  

     1487    20237    6                  TSN_USED_BUF.UTS = DP_RUN_NBR;

  20237 18 004521   200107 235100                    LDA     DP_RUN_NBR,,AUTO
        18 004522   000000 755000 xsym               STA     TSN_USED_BUF

     1488    20238    6                  CALL M$WRITE( WRITE_STATUS )

  20238 18 004523   000000 630400 xsym               EPPR0   WRITE_STATUS
        18 004524   440001 713400                    CLIMB   alt,write
        18 004525   401400 401760                    pmme    nvectors=4
        18 004526   004530 702000 18                 TSX2    s:20241
        18 004527   004530 710000 18                 TRA     s:20241

     1489    20239    7                   WHENALTRETURN DO;

     1490    20240    7                     END;

     1491    20241    6                  CALL M$CLOSE( CLOSE_STATUS )

  20241 18 004530   000000 630400 xsym               EPPR0   CLOSE_STATUS
        18 004531   450001 713400                    CLIMB   alt,close
        18 004532   406000 401760                    pmme    nvectors=13
        18 004533   004535 702000 18                 TSX2    s:20249
        18 004534   004535 710000 18                 TRA     s:20249

     1492    20242    7                   WHENALTRETURN DO;

     1493    20243    7                     END;

     1494    20244        /***
     1495    20245         *** Save the :BACKUP files. However if previous tape write error, don't attempt
     1496    20246         *** to save. Each :BACKUP file written to a separate file so that it can
     1497    20247         *** selected for REBUILDing packsets.
     1498    20248         ***/
     1499    20249    6                  IF NOT ABORT

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:251  
  20249 18 004535   200073 234100                    SZN     ABORT,,AUTO
        18 004536   004761 604000 18                 TMI     s:20310

     1500    20250    7                   THEN DO;

     1501    20251    7                     OPEN_STATUS.V.EXIST# = %OLDFILE#;

  20251 18 004537   000044 236000 xsym               LDQ     OPEN_STATUS+36
        18 004540   000036 376000 19                 ANQ     30
        18 004541   000400 276007                    ORQ     256,DL
        18 004542   000044 756000 xsym               STQ     OPEN_STATUS+36

     1502    20252    7                     OPEN_STATUS.V.FUN# = %IN#;

  20252 18 004543   002000 236007                    LDQ     1024,DL
        18 004544   000045 552010 xsym               STBQ    OPEN_STATUS+37,'10'O

     1503    20253    7                     OPEN_STATUS.V.ACS# = %BLOCK#;

  20253 18 004545   000003 236007                    LDQ     3,DL
        18 004546   000046 552004 xsym               STBQ    OPEN_STATUS+38,'04'O

     1504    20254    7                     CALL FLI$ALLOC_BUF( UPDATE_FPARAM_, 1 );

  20254 18 004547   000001 236000 19                 LDQ     1
        18 004550   200125 756100                    STQ     @DISP+2,,AUTO
        18 004551   200110 630500                    EPPR0   UPDATE_FPARAM_,,AUTO
        18 004552   200124 450500                    STP0    @DISP+1,,AUTO
        18 004553   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 004554   000020 631400 xsym               EPPR1   B_VECTNIL+16
        18 004555   000000 701000 xent               TSX1    FLI$ALLOC_BUF
        18 004556   000000 011000                    NOP     0

     1505    20255    7                     OPEN_STATUS.FPARAM_ = UPDATE_FPARAM_;

  20255 18 004557   200110 237100                    LDAQ    UPDATE_FPARAM_,,AUTO
        18 004560   000030 757000 xsym               STAQ    OPEN_STATUS+24
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:252  

     1506    20256
     1507    20257    7                     CALL M$OPEN( OPEN_STATUS )

  20257 18 004561   000000 630400 xsym               EPPR0   OPEN_STATUS
        18 004562   450000 713400                    CLIMB   alt,open
        18 004563   410400 401760                    pmme    nvectors=18
        18 004564   004735 702000 18                 TSX2    s:20301

     1508    20258    8                      WHENRETURN DO;

     1509    20259    8                        LAST_TYPE = %CLEANUP_FILE;

  20259 18 004565   000010 235007                    LDA     8,DL
        18 004566   000000 755000 xsym               STA     LAST_TYPE

     1510    20260    8                        CALL FLS$FILE_PACKER( DCBADDR(DCBNUM(M$STATUS)),

  20260 18 004567   000000 236007 xsym               LDQ     M$STATUS,DL
        18 004570   000031 470400 19                 LDP0    25
        18 004571   000000 471500                    LDP1    0,,PR0
        18 004572   000000 620006                    EAX0    0,QL
        18 004573   000000 236007 xsym               LDQ     M$STATUS,DL
        18 004574   200124 756100                    STQ     @DISP+1,,AUTO
        18 004575   200003 236100                    LDQ     @COMMAND,,AUTO
        18 004576   200137 756100                    STQ     @DISP+12,,AUTO
        18 004577   200074 633500                    EPPR3   FIT_ONLY_SAVED,,AUTO
        18 004600   200136 453500                    STP3    @DISP+11,,AUTO
        18 004601   200073 634500                    EPPR4   ABORT,,AUTO
        18 004602   200135 454500                    STP4    @DISP+10,,AUTO
        18 004603   200020 635500                    EPPR5   ERR,,AUTO
        18 004604   200134 455500                    STP5    @DISP+9,,AUTO
        18 004605   000050 236000 19                 LDQ     40
        18 004606   200133 756100                    STQ     @DISP+8,,AUTO
        18 004607   200040 636500                    EPPR6   SAVE_FSN,,AUTO
        18 004610   200132 456500                    STP6    @DISP+7,,AUTO
        18 004611   200036 637500                    EPPR7   SAVE_SN,,AUTO
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:253  
        18 004612   200131 457500                    STP7    @DISP+6,,AUTO
        18 004613   200110 630500                    EPPR0   UPDATE_FPARAM_,,AUTO
        18 004614   200130 450500                    STP0    @DISP+5,,AUTO
        18 004615   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 004616   200127 450500                    STP0    @DISP+4,,AUTO
        18 004617   100000 630510                    EPPR0   0,X0,PR1
        18 004620   200126 450500                    STP0    @DISP+3,,AUTO
        18 004621   200126 630500                    EPPR0   @DISP+3,,AUTO
        18 004622   000047 631400 19                 EPPR1   39
        18 004623   000000 701000 xent               TSX1    FLS$FILE_PACKER
        18 004624   004672 702000 18                 TSX2    s:20290

     1511    20261    8                          DCBNUM(M$STATUS), UPDATE_FPARAM_, SAVE_SN,
     1512    20262    8                          SAVE_FSN, CROSSED, ERR, ABORT, FIT_ONLY_SAVED, COMMAND )
     1513    20263    9                         WHENRETURN DO;

     1514    20264        /***
     1515    20265         *** Rewrite the last :BACKUP record to update BACKUP_FSN value.
     1516    20266         ***/
     1517    20267    9                           CALL M$CLOSE ( CLOSE_STATUS )

  20267 18 004625   000000 630400 xsym               EPPR0   CLOSE_STATUS
        18 004626   450001 713400                    CLIMB   alt,close
        18 004627   406000 401760                    pmme    nvectors=13
        18 004630   004632 702000 18                 TSX2    s:20270
        18 004631   004632 710000 18                 TRA     s:20270

     1518    20268   10                            WHENALTRETURN DO;

     1519    20269   10                              END;

     1520    20270    9                           OPEN_STATUS.V.EXIST# = %OLDFILE#;

  20270 18 004632   000044 236000 xsym               LDQ     OPEN_STATUS+36
        18 004633   000036 376000 19                 ANQ     30
        18 004634   000400 276007                    ORQ     256,DL
        18 004635   000044 756000 xsym               STQ     OPEN_STATUS+36
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:254  

     1521    20271    9                           OPEN_STATUS.V.FUN# = %UPDATE#;

  20271 18 004636   001000 236007                    LDQ     512,DL
        18 004637   000045 552010 xsym               STBQ    OPEN_STATUS+37,'10'O

     1522    20272    9                           OPEN_STATUS.V.ACS# = %DIRECT#;

  20272 18 004640   000002 236007                    LDQ     2,DL
        18 004641   000046 552004 xsym               STBQ    OPEN_STATUS+38,'04'O

     1523    20273    9                           OPEN_STATUS.FPARAM_ = VECTOR(NIL);

  20273 18 004642   000024 237000 19                 LDAQ    20
        18 004643   000030 757000 xsym               STAQ    OPEN_STATUS+24

     1524    20274    9                           CALL M$OPEN ( OPEN_STATUS )

  20274 18 004644   000000 630400 xsym               EPPR0   OPEN_STATUS
        18 004645   450000 713400                    CLIMB   alt,open
        18 004646   410400 401760                    pmme    nvectors=18
        18 004647   004665 702000 18                 TSX2    s:20284

     1525    20275   10                            WHENRETURN DO;

     1526    20276   10                              STATUS_KEY = STATUS_KEY_SAVE;

  20276 18 004650   200112 236100                    LDQ     STATUS_KEY_SAVE,,AUTO
        18 004651   000000 756000 xsym               STQ     STATUS_KEY

     1527    20277   10                              TSN_USED_BUF = TSN_USED_BUF_SAVE;

  20277 18 004652   000000 100500                    MLR     fill='000'O
        18 004653   200113 000036                    ADSC9   TSN_USED_BUF_SAVE,,AUTO  cn=0,n=30
        18 004654   000000 000036 xsym               ADSC9   TSN_USED_BUF             cn=0,n=30

     1528    20278   10                              TSN_USED_BUF.BACKUP_FSN = SAVE_FSN;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:255  

  20278 18 004655   200040 720100                    LXL0    SAVE_FSN,,AUTO
        18 004656   000007 740000 xsym               STX0    TSN_USED_BUF+7

     1529    20279   10                              CALL M$WRITE( WRITE_STATUS )

  20279 18 004657   000000 630400 xsym               EPPR0   WRITE_STATUS
        18 004660   440001 713400                    CLIMB   alt,write
        18 004661   401400 401760                    pmme    nvectors=4
        18 004662   004664 702000 18                 TSX2    s:20282
        18 004663   004664 710000 18                 TRA     s:20282

     1530    20280   11                               WHENALTRETURN DO;

     1531    20281   11                                 END;

     1532    20282   10                              END;

  20282 18 004664   004670 710000 18                 TRA     s:20286

     1533    20283   10                            WHENALTRETURN DO;

     1534    20284   10                              CALL FLI$RPT_ERR;

  20284 18 004665   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 004666   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 004667   000000 011000                    NOP     0

     1535    20285   10                              END;

     1536    20286    9                           ERR = '0'B;

  20286 18 004670   200020 450100                    STZ     ERR,,AUTO

     1537    20287    9                           END;

  20287 18 004671   004672 710000 18                 TRA     s:20290
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:256  

     1538    20288    9                         WHENALTRETURN DO;

     1539    20289    9                           END;

     1540    20290    8                        CALL FLP$WR_FILE_INFO( DCBADDR(DCBNUM(M$STATUS)),

  20290 18 004672   000000 236007 xsym               LDQ     M$STATUS,DL
        18 004673   000031 470400 19                 LDP0    25
        18 004674   000000 471500                    LDP1    0,,PR0
        18 004675   000000 620006                    EAX0    0,QL
        18 004676   000052 236000 19                 LDQ     42
        18 004677   200134 756100                    STQ     @DISP+9,,AUTO
        18 004700   200072 633500                    EPPR3   PR_DEV_LT,,AUTO
        18 004701   200133 453500                    STP3    @DISP+8,,AUTO
        18 004702   200020 634500                    EPPR4   ERR,,AUTO
        18 004703   200132 454500                    STP4    @DISP+7,,AUTO
        18 004704   000001 236000 xsym               LDQ     B_VECTNIL+1
        18 004705   000050 235000 19                 LDA     40
        18 004706   200130 757100                    STAQ    @DISP+5,,AUTO
        18 004707   200040 635500                    EPPR5   SAVE_FSN,,AUTO
        18 004710   200127 455500                    STP5    @DISP+4,,AUTO
        18 004711   200036 636500                    EPPR6   SAVE_SN,,AUTO
        18 004712   200126 456500                    STP6    @DISP+3,,AUTO
        18 004713   200111 637500                    EPPR7   NBR_ACCTS_DELETED+1,,AUTO
        18 004714   200125 457500                    STP7    @DISP+2,,AUTO
        18 004715   100000 630510                    EPPR0   0,X0,PR1
        18 004716   200124 450500                    STP0    @DISP+1,,AUTO
        18 004717   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 004720   000053 631400 19                 EPPR1   43
        18 004721   000000 701000 xent               TSX1    FLP$WR_FILE_INFO
        18 004722   004724 702000 18                 TSX2    s:20294
        18 004723   004727 710000 18                 TRA     s:20296

     1541    20291    8                          UPDATE_FPARAM_.PTR$, SAVE_SN, SAVE_FSN, CROSSED, , ERR,
     1542    20292    8                          PR_DEV_LT, '0'B )
     1543    20293    9                         WHENALTRETURN DO;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:257  

     1544    20294    9                           CALL FLI$RPT_ERR;

  20294 18 004724   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 004725   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 004726   000000 011000                    NOP     0

     1545    20295    9                           END;

     1546    20296    8                        CALL M$CLOSE ( CLOSE_STATUS )

  20296 18 004727   000000 630400 xsym               EPPR0   CLOSE_STATUS
        18 004730   450001 713400                    CLIMB   alt,close
        18 004731   406000 401760                    pmme    nvectors=13
        18 004732   004734 702000 18                 TSX2    s:20299
        18 004733   004734 710000 18                 TRA     s:20299

     1547    20297    9                         WHENALTRETURN DO;

     1548    20298    9                           END;

     1549    20299    8                        END;

  20299 18 004734   004740 710000 18                 TRA     s:20303

     1550    20300    8                      WHENALTRETURN DO;

     1551    20301    8                        CALL FLI$RPT_ERR;

  20301 18 004735   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 004736   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 004737   000000 011000                    NOP     0

     1552    20302    8                        END;

     1553    20303    7                     IF COMMAND = %SAVE    /* Set the FPT's parameters back      */

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:258  
  20303 18 004740   200003 470500                    LDP0    @COMMAND,,AUTO
        18 004741   000000 235100                    LDA     0,,PR0
        18 004742   000006 115007                    CMPA    6,DL
        18 004743   004747 601000 18                 TNZ     s:20305

     1554    20304    7                      THEN OPEN_STATUS.V.EXIST# = %NEWFILE#;

  20304 18 004744   000600 236007                    LDQ     384,DL
        18 004745   000044 256000 xsym               ORSQ    OPEN_STATUS+36
        18 004746   004753 710000 18                 TRA     s:20306

     1555    20305    7                      ELSE OPEN_STATUS.V.EXIST# = %OLDFILE#;

  20305 18 004747   000044 236000 xsym               LDQ     OPEN_STATUS+36
        18 004750   000036 376000 19                 ANQ     30
        18 004751   000400 276007                    ORQ     256,DL
        18 004752   000044 756000 xsym               STQ     OPEN_STATUS+36

     1556    20306    7                     OPEN_STATUS.V.FUN# = %CREATE#;

  20306 18 004753   003000 236007                    LDQ     1536,DL
        18 004754   000045 552010 xsym               STBQ    OPEN_STATUS+37,'10'O

     1557    20307    7                     OPEN_STATUS.V.ACS# = %DIRECT#;

  20307 18 004755   000002 236007                    LDQ     2,DL
        18 004756   000046 552004 xsym               STBQ    OPEN_STATUS+38,'04'O

     1558    20308    7                     OPEN_STATUS.FPARAM_ = VECTOR(NIL);

  20308 18 004757   000024 237000 19                 LDAQ    20
        18 004760   000030 757000 xsym               STAQ    OPEN_STATUS+24

     1559    20309    7                     END;

     1560    20310    6                  END;

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:259  
  20310 18 004761   004765 710000 18                 TRA     s:20314

     1561    20311    6                WHENALTRETURN DO;

     1562    20312    6                  CALL FLI$RPT_ERR;

  20312 18 004762   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 004763   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 004764   000000 011000                    NOP     0

     1563    20313    6                  END;

     1564    20314    5               END;

  20314 18 004765   200106 054100                    AOS     DPX,,AUTO
        18 004766   000000 470400 xsym               LDP0    DPLIST$
        18 004767   200106 236100                    LDQ     DPX,,AUTO
        18 004770   000000 116100                    CMPQ    0,,PR0
        18 004771   004352 604000 18                 TMI     s:20181

     1565    20315    4            END;

     1566    20316    3         OPEN_STATUS.V.EXIST# = %OLDFILE#;

  20316 18 004772   000044 236000 xsym               LDQ     OPEN_STATUS+36
        18 004773   000036 376000 19                 ANQ     30
        18 004774   000400 276007                    ORQ     256,DL
        18 004775   000044 756000 xsym               STQ     OPEN_STATUS+36

     1567    20317    3         END;

     1568    20318
     1569    20319    2      RETURN;

  20319 18 004776   200104 221300                    LDX1  ! DCB#+1,,AUTO
        18 004777   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:260  
     1570    20320
     1571    20321    2   END FLM_UPDATE_RUN_INFO;
     1572    20322
     1573    20323
     1574    20324    1   FLM_ACCOUNT_TO_DISK_HANDLING: PROC ALTRET;

  20324 18 005000   200100 741300       FLM_ACCOUNT* STX1  ! ANY_FILES_FOUND+2,,AUTO

     1575    20325
     1576    20326        /********************/
     1577    20327
     1578    20328        /***
     1579    20329         *** Note that it's possible that the user has specified a
     1580    20330         *** different packset and/or account than the source (tape)
     1581    20331         *** account originally came from.
     1582    20332         ***/
     1583    20333
     1584    20334    2      IF DISK_DEST_SN.SN#(0) = ' '

  20334 18 005001   040000 106400                    CMPC    fill='040'O
        18 005002   000001 000006 xsym               ADSC9   DISK_DEST_SN+1           cn=0,n=6
        18 005003   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        18 005004   005011 601000 18                 TNZ     s:20336

     1585    20335    2       THEN TO_DISK_SN.SN#(0) = SOURCE_DCB$->F$DCB.PSN#;

  20335 18 005005   200014 470500                    LDP0    SOURCE_DCB$,,AUTO
        18 005006   040000 100500                    MLR     fill='040'O
        18 005007   000024 000006                    ADSC9   20,,PR0                  cn=0,n=6
        18 005010   000231 000006 2                  ADSC9   TO_DISK_SN+1             cn=0,n=6

     1586    20336    2      IF DISK_DEST_ACCT.ACCT# = ' '

  20336 18 005011   040000 106400                    CMPC    fill='040'O
        18 005012   000000 000010 xsym               ADSC9   DISK_DEST_ACCT           cn=0,n=8
        18 005013   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        18 005014   005020 601000 18                 TNZ     s:20338
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:261  

     1587    20337    2       THEN TO_DISK_ACCT.ACCT# = SOURCE_DCB$->F$DCB.ACCT#;

  20337 18 005015   200014 470500                    LDP0    SOURCE_DCB$,,AUTO
        18 005016   000020 237100                    LDAQ    16,,PR0
        18 005017   000224 757000 2                  STAQ    TO_DISK_ACCT

     1588    20338    2      SAVE_SN = TO_DISK_SN.SN#(0);

  20338 18 005020   040100 100400                    MLR     fill='040'O
        18 005021   000231 000006 2                  ADSC9   TO_DISK_SN+1             cn=0,n=6
        18 005022   200036 000006                    ADSC9   SAVE_SN,,AUTO            cn=0,n=6

     1589    20339
     1590    20340    2      CALL FLM_GET_SOURCE_UTS;

  20340 18 005023   007477 701000 18                 TSX1    FLM_GET_SOURCE_UTS
        18 005024   000000 011000                    NOP     0

     1591    20341
     1592    20342    2      IF DISK_DEST_EXIST = %ERROR#

  20342 18 005025   000000 235000 xsym               LDA     DISK_DEST_EXIST
        18 005026   000001 115007                    CMPA    1,DL
        18 005027   005034 600000 18                 TZE     s:20345
        18 005030   000001 236000 xsym               LDQ     TAPE_OPTION+1
        18 005031   700000 376003                    ANQ     -32768,DU
        18 005032   300000 116003                    CMPQ    98304,DU
        18 005033   005125 601000 18                 TNZ     s:20381

     1593    20343    2        OR TAPE_OPTION.PROTTYPE = %INCREMENTAL
     1594    20344    3       THEN DO;                       /* Need to check if account already there  */

     1595    20345    3         GET_AD_OR_FD.FPARAM_ = DISK_FIT_;

  20345 18 005034   200032 237100                    LDAQ    DISK_FIT_,,AUTO
        18 005035   002374 757000 2                  STAQ    GET_AD_OR_FD+24
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:262  

     1596    20346    3         CALL M$OPEN( GET_AD_OR_FD )

  20346 18 005036   002344 630400 2                  EPPR0   GET_AD_OR_FD
        18 005037   450000 713400                    CLIMB   alt,open
        18 005040   410400 401760                    pmme    nvectors=18
        18 005041   005061 702000 18                 TSX2    s:20358

     1597    20347    4          WHENRETURN DO;                   /* Account is already there           */

     1598    20348    4            IF DISK_DEST_EXIST = %ERROR#

  20348 18 005042   000000 235000 xsym               LDA     DISK_DEST_EXIST
        18 005043   000001 115007                    CMPA    1,DL
        18 005044   005047 601000 18                 TNZ     s:20351

     1599    20349    4             THEN GOING_TO_DEST = '0'B; /* PROT - Don't replace existing account */

  20349 18 005045   200042 450100                    STZ     GOING_TO_DEST,,AUTO
        18 005046   005060 710000 18                 TRA     s:20356

     1600    20350    5             ELSE DO;                      /* INCR - Replace existing account... */

     1601    20351    5               CALL FLM_GET_DEST_ACCT_UTS;

  20351 18 005047   007445 701000 18                 TSX1    FLM_GET_DEST_ACCT_UTS
        18 005050   000000 011000                    NOP     0

     1602    20352    5               IF SOURCE_UTS > DEST_UTS    /* ...only if it's not newer          */

  20352 18 005051   200056 236100                    LDQ     DEST_UTS,,AUTO
        18 005052   200055 116100                    CMPQ    SOURCE_UTS,,AUTO
        18 005053   005057 603000 18                 TRC     s:20354

     1603    20353    5                THEN GOING_TO_DEST = '1'B;

  20353 18 005054   400000 236003                    LDQ     -131072,DU
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:263  
        18 005055   200042 756100                    STQ     GOING_TO_DEST,,AUTO
        18 005056   005060 710000 18                 TRA     s:20356

     1604    20354    5                ELSE GOING_TO_DEST = '0'B;

  20354 18 005057   200042 450100                    STZ     GOING_TO_DEST,,AUTO

     1605    20355    5               END;

     1606    20356    4            END;

  20356 18 005060   005124 710000 18                 TRA     s:20380

     1607    20357    4          WHENALTRETURN DO;

     1608    20358    4            IF B$TCB.ALT$->B$ALT.ERR.CODE ~= %E$NOKEY

  20358 18 005061   000000 470400 xsym               LDP0    B$TCB$
        18 005062   000000 471500                    LDP1    0,,PR0
        18 005063   100102 236100                    LDQ     66,,PR1
        18 005064   377770 376007                    ANQ     131064,DL
        18 005065   001020 116007                    CMPQ    528,DL
        18 005066   005073 600000 18                 TZE     s:20364

     1609    20359    5             THEN DO;                      /* Unexpected error...pass it along   */

     1610    20360    5               ERR = B$TCB.ALT$->B$ALT.ERR;

  20360 18 005067   100102 236100                    LDQ     66,,PR1
        18 005070   200020 756100                    STQ     ERR,,AUTO

     1611    20361    5               GOING_TO_DEST = '0'B;

  20361 18 005071   200042 450100                    STZ     GOING_TO_DEST,,AUTO

     1612    20362    5               END;

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:264  
  20362 18 005072   005120 710000 18                 TRA     s:20377

     1613    20363    5             ELSE DO;            /* Account either doesn't exist or is deleted   */

     1614    20364    5               IF DISK_DEST_EXIST = %ERROR#

  20364 18 005073   000000 235000 xsym               LDA     DISK_DEST_EXIST
        18 005074   000001 115007                    CMPA    1,DL
        18 005075   005106 601000 18                 TNZ     s:20371

     1615    20365    6                THEN DO;                   /* PROT - Replace deleted account...  */

     1616    20366    6                  IF SOURCE_FILE_TYPE = %CLEANUP_ACCT

  20366 18 005076   200023 235100                    LDA     SOURCE_FILE_TYPE,,AUTO
        18 005077   000007 115007                    CMPA    7,DL
        18 005100   005103 601000 18                 TNZ     s:20368

     1617    20367    6                   THEN GOING_TO_DEST = '0'B; /* ...but not with a cleaned account */

  20367 18 005101   200042 450100                    STZ     GOING_TO_DEST,,AUTO
        18 005102   005120 710000 18                 TRA     s:20377

     1618    20368    6                   ELSE GOING_TO_DEST = '1'B;

  20368 18 005103   400000 236003                    LDQ     -131072,DU
        18 005104   200042 756100                    STQ     GOING_TO_DEST,,AUTO

     1619    20369    6                  END;

  20369 18 005105   005120 710000 18                 TRA     s:20377

     1620    20370    6                ELSE DO;                   /* INCR - Delete existing account...  */

     1621    20371    6                  DEST_UTS = F$DCB.EXPIRE#;

  20371 18 005106   200061 473500                    LDP3    M$DISK_OUT$,,AUTO
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:265  
        18 005107   300035 235100                    LDA     29,,PR3
        18 005110   200056 755100                    STA     DEST_UTS,,AUTO

     1622    20372    6                  IF SOURCE_UTS > DEST_UTS /* ... only if it's not newer         */

  20372 18 005111   200056 236100                    LDQ     DEST_UTS,,AUTO
        18 005112   200055 116100                    CMPQ    SOURCE_UTS,,AUTO
        18 005113   005117 603000 18                 TRC     s:20374

     1623    20373    6                   THEN GOING_TO_DEST = '1'B;

  20373 18 005114   400000 236003                    LDQ     -131072,DU
        18 005115   200042 756100                    STQ     GOING_TO_DEST,,AUTO
        18 005116   005120 710000 18                 TRA     s:20377

     1624    20374    6                   ELSE GOING_TO_DEST = '0'B;

  20374 18 005117   200042 450100                    STZ     GOING_TO_DEST,,AUTO

     1625    20375    6                  END;

     1626    20376    5               END;

     1627    20377    4            IF NOT GOING_TO_DEST

  20377 18 005120   200042 234100                    SZN     GOING_TO_DEST,,AUTO
        18 005121   005124 604000 18                 TMI     s:20380

     1628    20378    4             THEN SKIP_ACCT = TO_DISK_ACCT;
             20378                      /* Skip all files in this skipped deleted account */

  20378 18 005122   000224 237000 2                  LDAQ    TO_DISK_ACCT
        18 005123   000222 757000 2                  STAQ    SKIP_ACCT

     1629    20379    4            END;

     1630    20380    3         END;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:266  

  20380 18 005124   005127 710000 18                 TRA     s:20383

     1631    20381    2       ELSE GOING_TO_DEST = '1'B;          /* UNPROT - take no prisoners!        */

  20381 18 005125   400000 236003                    LDQ     -131072,DU
        18 005126   200042 756100                    STQ     GOING_TO_DEST,,AUTO

     1632    20382
     1633    20383    2      IF COMMAND = %REBUILD

  20383 18 005127   200003 470500                    LDP0    @COMMAND,,AUTO
        18 005130   000000 235100                    LDA     0,,PR0
        18 005131   000056 115007                    CMPA    46,DL
        18 005132   005236 601000 18                 TNZ     s:20430

     1634    20384    3       THEN DO;

     1635    20385    4         DO CASE( SOURCE_FILE_TYPE );

  20385 18 005133   200023 236100                    LDQ     SOURCE_FILE_TYPE,,AUTO
        18 005134   000004 136007                    SBLQ    4,DL
        18 005135   000004 116007                    CMPQ    4,DL
        18 005136   005140 602006 18                 TNC     s:20385+5,QL
        18 005137   005236 710000 18                 TRA     s:20430
        18 005140   005144 710000 18                 TRA     s:20395
        18 005141   005236 710000 18                 TRA     s:20430
        18 005142   005144 710000 18                 TRA     s:20395
        18 005143   005144 710000 18                 TRA     s:20395

     1636    20386    4          CASE( %FILE_DIR, %DEL_ACCT, %CLEANUP_ACCT );

     1637    20387        /***
     1638    20388         *** Restore the file directory fit if:
     1639    20389         *** 1. The DIR option has been specified.
     1640    20390         *** 2. The file directory fit did not exist at the beginning of rebuilding
     1641    20391         ***    this packset.
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:267  
     1642    20392         *** Note: EFT keeps track of which directories have been restored by
     1643    20393         *** maintaining a record in the :REBUILD file.
     1644    20394         ***/
     1645    20395    4            REBUILD_DIR_KEY.NAME# = SOURCE_DCB$->F$DCB.ACCT#;

  20395 18 005144   000000 236000 xsym               LDQ     REBUILD_DIR_KEY
        18 005145   000033 772000                    QRL     27
        18 005146   200014 471500                    LDP1    SOURCE_DCB$,,AUTO
        18 005147   000000 620006                    EAX0    0,QL
        18 005150   040040 100500                    MLR     fill='040'O
        18 005151   100020 000010                    ADSC9   16,,PR1                  cn=0,n=8
        18 005152   000000 200010 xsym               ADSC9   REBUILD_DIR_KEY          cn=1,n=*X0

     1646    20396    4            WRITE_REBUILD.KEY_ = VECTOR(REBUILD_DIR_KEY);

  20396 18 005153   000001 621010                    EAX1    1,X0
        18 005154   000000 635011                    EAA     0,X1
        18 005155   000002 771000                    ARL     2
        18 005156   000140 135007                    SBLA    96,DL
        18 005157   000065 236000 19                 LDQ     53
        18 005160   000002 757000 xsym               STAQ    WRITE_REBUILD+2

     1647    20397    4            IF DISK_OPTION.DIR             /* DIR spec'd?                        */

  20397 18 005161   000000 234000 xsym               SZN     DISK_OPTION
        18 005162   005172 605000 18                 TPL     s:20403

     1648    20398    5             THEN DO;

     1649    20399    5               WRITE_REBUILD.BUF_ = VECTOR(NIL);

  20399 18 005163   000024 237000 19                 LDAQ    20
        18 005164   000004 757000 xsym               STAQ    WRITE_REBUILD+4

     1650    20400    5               CALL M$WRITE( WRITE_REBUILD ) ALTRET(JUSTALT);

  20400 18 005165   000000 630400 xsym               EPPR0   WRITE_REBUILD
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:268  
        18 005166   440001 713400                    CLIMB   alt,write
        18 005167   401400 401760                    pmme    nvectors=4
        18 005170   005347 702000 18                 TSX2    JUSTALT

     1651    20401    5               END;

  20401 18 005171   005236 710000 18                 TRA     s:20430

     1652    20402    5             ELSE DO; /* Check if dir fit was previously restored on this rebuild */

     1653    20403    5               CALL M$READ ( READ_REBUILD )

  20403 18 005172   000000 630400 xsym               EPPR0   READ_REBUILD
        18 005173   440000 713400                    CLIMB   alt,read
        18 005174   401400 401760                    pmme    nvectors=4
        18 005175   005177 702000 18                 TSX2    s:20407

     1654    20404    6                WHENRETURN DO;             /* Previously restored                */

     1655    20405    6                  END;

  20405 18 005176   005235 710000 18                 TRA     s:20426

     1656    20406    6                WHENALTRETURN DO;          /* Not previously restored            */

     1657    20407    6                  IF B$TCB.ALT$->B$ALT.ERR.CODE = %E$NOFILE

  20407 18 005177   000000 470400 xsym               LDP0    B$TCB$
        18 005200   000000 471500                    LDP1    0,,PR0
        18 005201   100102 236100                    LDQ     66,,PR1
        18 005202   377770 376007                    ANQ     131064,DL
        18 005203   001610 116007                    CMPQ    904,DL
        18 005204   005211 600000 18                 TZE     s:20411
        18 005205   000060 116007                    CMPQ    48,DL
        18 005206   005211 600000 18                 TZE     s:20411
        18 005207   001020 116007                    CMPQ    528,DL
        18 005210   005230 601000 18                 TNZ     s:20422
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:269  

     1658    20408    6                    OR B$TCB.ALT$->B$ALT.ERR.CODE = %E$EOF
     1659    20409    6                    OR B$TCB.ALT$->B$ALT.ERR.CODE = %E$NOKEY
     1660    20410    7                   THEN DO;                /* Does dir already exist?            */

     1661    20411    7                     GET_AD_OR_FD.FPARAM_ = DISK_FIT_;

  20411 18 005211   200032 237100                    LDAQ    DISK_FIT_,,AUTO
        18 005212   002374 757000 2                  STAQ    GET_AD_OR_FD+24

     1662    20412    7                     CALL M$OPEN( GET_AD_OR_FD )

  20412 18 005213   002344 630400 2                  EPPR0   GET_AD_OR_FD
        18 005214   450000 713400                    CLIMB   alt,open
        18 005215   410400 401760                    pmme    nvectors=18
        18 005216   005221 702000 18                 TSX2    s:20417

     1663    20413    8                      WHENRETURN DO;       /* Exists - don't restore             */

     1664    20414    8                        GOING_TO_DEST = '0'B;

  20414 18 005217   200042 450100                    STZ     GOING_TO_DEST,,AUTO

     1665    20415    8                        END;

  20415 18 005220   005227 710000 18                 TRA     s:20420

     1666    20416    8                      WHENALTRETURN DO;    /* Doesn't exist - restore            */

     1667    20417    8                        WRITE_REBUILD.BUF_ = VECTOR(NIL);

  20417 18 005221   000024 237000 19                 LDAQ    20
        18 005222   000004 757000 xsym               STAQ    WRITE_REBUILD+4

     1668    20418    8                        CALL M$WRITE( WRITE_REBUILD ) ALTRET(JUSTALT);

  20418 18 005223   000000 630400 xsym               EPPR0   WRITE_REBUILD
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:270  
        18 005224   440001 713400                    CLIMB   alt,write
        18 005225   401400 401760                    pmme    nvectors=4
        18 005226   005347 702000 18                 TSX2    JUSTALT

     1669    20419    8                        END;

     1670    20420    7                     END;

  20420 18 005227   005235 710000 18                 TRA     s:20426

     1671    20421    7                   ELSE DO;      /* Terminate rebuild as it can't be determined  */

     1672    20422    7                     CALL FLI$RPT_ERR; /* whether this dir. fit should be restored */

  20422 18 005230   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 005231   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 005232   000000 011000                    NOP     0

     1673    20423    7                     ALTRETURN;

  20423 18 005233   200100 221300                    LDX1  ! ANY_FILES_FOUND+2,,AUTO
        18 005234   000000 702211                    TSX2  ! 0,X1

     1674    20424    7                     END;
     1675    20425    6                  END;
     1676    20426    5               END;

  20426 18 005235   005236 710000 18                 TRA     s:20430

     1677    20427    4          CASE( %ACCT_DIR );

     1678    20428    4          END;

     1679    20429    3         END;

     1680    20430    2      IF TAPE_OPTION.PROTTYPE = %INCREMENTAL

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:271  
  20430 18 005236   000001 236000 xsym               LDQ     TAPE_OPTION+1
        18 005237   700000 376003                    ANQ     -32768,DU
        18 005240   300000 116003                    CMPQ    98304,DU
        18 005241   005246 601000 18                 TNZ     s:20434
        18 005242   200023 235100                    LDA     SOURCE_FILE_TYPE,,AUTO
        18 005243   000007 115007                    CMPA    7,DL
        18 005244   005246 601000 18                 TNZ     s:20434

     1681    20431    2        AND SOURCE_FILE_TYPE = %CLEANUP_ACCT
     1682    20432    2       THEN GOING_TO_DEST = '0'B;          /* INCR - ignore cleaned up accounts  */

  20432 18 005245   200042 450100                    STZ     GOING_TO_DEST,,AUTO

     1683    20433
     1684    20434    2      IF GOING_TO_DEST

  20434 18 005246   200042 234100                    SZN     GOING_TO_DEST,,AUTO
        18 005247   005341 605000 18                 TPL     s:20470

     1685    20435    3       THEN DO;        /* We've decided to lay waste to whatever's out there     */

     1686    20436    3         IF SOURCE_FILE_TYPE = %FILE_DIR OR SOURCE_FILE_TYPE = %ACCT_DIR

  20436 18 005250   200023 235100                    LDA     SOURCE_FILE_TYPE,,AUTO
        18 005251   000004 115007                    CMPA    4,DL
        18 005252   005255 600000 18                 TZE     s:20437
        18 005253   000005 115007                    CMPA    5,DL
        18 005254   005260 601000 18                 TNZ     s:20438

     1687    20437    3          THEN REPLACE_AD_OR_FD.IFPARAM_ = FPARAM_; /* Use FD from source        */

  20437 18 005255   200016 237100                    LDAQ    FPARAM_,,AUTO
        18 005256   002300 757000 2                  STAQ    REPLACE_AD_OR_FD+22
        18 005257   005262 710000 18                 TRA     s:20439

     1688    20438    3          ELSE REPLACE_AD_OR_FD.IFPARAM_ = A_FD_;
             20438                   /* Use canned FD...will be deleted later */
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:272  

  20438 18 005260   000000 237000 xsym               LDAQ    A_FD_
        18 005261   002300 757000 2                  STAQ    REPLACE_AD_OR_FD+22

     1689    20439    3         CALL M$OPEN( REPLACE_AD_OR_FD )

  20439 18 005262   002252 630400 2                  EPPR0   REPLACE_AD_OR_FD
        18 005263   450000 713400                    CLIMB   alt,open
        18 005264   410400 401760                    pmme    nvectors=18
        18 005265   005321 702000 18                 TSX2    s:20461

     1690    20440    4          WHENRETURN DO;                   /* Account created                    */

     1691    20441    4   DEL_CLNUP:
     1692    20442    4            IF SOURCE_FILE_TYPE = %DEL_ACCT

  20442 18 005266   200023 235100       DEL_CLNUP    LDA     SOURCE_FILE_TYPE,,AUTO
        18 005267   000006 115007                    CMPA    6,DL
        18 005270   005273 600000 18                 TZE     s:20445
        18 005271   000007 115007                    CMPA    7,DL
        18 005272   005320 601000 18                 TNZ     s:20456

     1693    20443    4              OR SOURCE_FILE_TYPE = %CLEANUP_ACCT
     1694    20444    5             THEN DO;                      /* Now delete it or clean it up       */

     1695    20445    5               IF SOURCE_FILE_TYPE = %CLEANUP_ACCT

  20445 18 005273   000007 115007                    CMPA    7,DL
        18 005274   005277 601000 18                 TNZ     s:20447

     1696    20446    5                THEN GET_AD_OR_FD.V.EXPIRE# = 0; /* Clean up                     */

  20446 18 005275   002423 450000 2                  STZ     GET_AD_OR_FD+47
        18 005276   005301 710000 18                 TRA     s:20448

     1697    20447    5                ELSE GET_AD_OR_FD.V.EXPIRE# = SOURCE_UTS;
             20447                         /* Deletion...use the right time */
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:273  

  20447 18 005277   200055 236100                    LDQ     SOURCE_UTS,,AUTO
        18 005300   002423 756000 2                  STQ     GET_AD_OR_FD+47

     1698    20448    5               GET_AD_OR_FD.V.DELETE# = %YES#;

  20448 18 005301   040000 236007                    LDQ     16384,DL
        18 005302   002410 256000 2                  ORSQ    GET_AD_OR_FD+36

     1699    20449    5               GET_AD_OR_FD.FPARAM_ = A_FD_;

  20449 18 005303   000000 237000 xsym               LDAQ    A_FD_
        18 005304   002374 757000 2                  STAQ    GET_AD_OR_FD+24

     1700    20450    5               CALL M$OPEN( GET_AD_OR_FD )

  20450 18 005305   002344 630400 2                  EPPR0   GET_AD_OR_FD
        18 005306   450000 713400                    CLIMB   alt,open
        18 005307   410400 401760                    pmme    nvectors=18
        18 005310   005312 702000 18                 TSX2    s:20452
        18 005311   005316 710000 18                 TRA     s:20454

     1701    20451    6                WHENALTRETURN DO;

     1702    20452    6                  ERR = B$TCB.ALT$->B$ALT.ERR; /* Unexpected error               */

  20452 18 005312   000000 470400 xsym               LDP0    B$TCB$
        18 005313   000000 471500                    LDP1    0,,PR0
        18 005314   100102 236100                    LDQ     66,,PR1
        18 005315   200020 756100                    STQ     ERR,,AUTO

     1703    20453    6                  END;

     1704    20454    5               GET_AD_OR_FD.V.DELETE# = %NO#;

  20454 18 005316   000066 236000 19                 LDQ     54
        18 005317   002410 356000 2                  ANSQ    GET_AD_OR_FD+36
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:274  

     1705    20455    5               END;

     1706    20456    4            END;

  20456 18 005320   005340 710000 18                 TRA     s:20468

     1707    20457    4          WHENALTRETURN DO;

     1708    20458        /***
     1709    20459         *** Ignore disk space error since account will be deleted anyway.
     1710    20460         ***/
     1711    20461    4            IF (SOURCE_FILE_TYPE = %DEL_ACCT

  20461 18 005321   200023 235100                    LDA     SOURCE_FILE_TYPE,,AUTO
        18 005322   000006 115007                    CMPA    6,DL
        18 005323   005326 600000 18                 TZE     s:20461+5
        18 005324   000007 115007                    CMPA    7,DL
        18 005325   005334 601000 18                 TNZ     s:20466
        18 005326   000000 470400 xsym               LDP0    B$TCB$
        18 005327   000000 471500                    LDP1    0,,PR0
        18 005330   100102 236100                    LDQ     66,,PR1
        18 005331   377770 376007                    ANQ     131064,DL
        18 005332   002160 116007                    CMPQ    1136,DL
        18 005333   005266 600000 18                 TZE     DEL_CLNUP

     1712    20462    4              OR SOURCE_FILE_TYPE = %CLEANUP_ACCT)
     1713    20463    4              AND B$TCB.ALT$->B$ALT.ERR.CODE= %E$ACGRANS
     1714    20464    4             THEN GOTO DEL_CLNUP;
     1715    20465
     1716    20466    4            ERR = B$TCB.ALT$->B$ALT.ERR;   /* Unexpected                         */

  20466 18 005334   000000 470400 xsym               LDP0    B$TCB$
        18 005335   000000 471500                    LDP1    0,,PR0
        18 005336   100102 236100                    LDQ     66,,PR1
        18 005337   200020 756100                    STQ     ERR,,AUTO

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:275  
     1717    20467    4            END;

     1718    20468    3         END;

  20468 18 005340   005345 710000 18                 TRA     s:20472

     1719    20469    3       ELSE DO;                            /* Not going to disk                  */

     1720    20470    3         ERR.CODE = %E$NEWREC;             /* ...give skipped error message      */

  20470 18 005341   200020 236100                    LDQ     ERR,,AUTO
        18 005342   000060 376000 19                 ANQ     48
        18 005343   000760 276007                    ORQ     496,DL
        18 005344   200020 756100                    STQ     ERR,,AUTO

     1721    20471    3         END;

     1722    20472    2      RETURN;

  20472 18 005345   200100 221300                    LDX1  ! ANY_FILES_FOUND+2,,AUTO
        18 005346   000001 702211                    TSX2  ! 1,X1

     1723    20473
     1724    20474    2   JUSTALT:
     1725    20475    2      ALTRETURN;

  20475 18 005347   200100 221300       JUSTALT      LDX1  ! ANY_FILES_FOUND+2,,AUTO
        18 005350   000000 702211                    TSX2  ! 0,X1

     1726    20476
     1727    20477    2   END FLM_ACCOUNT_TO_DISK_HANDLING;
     1728    20478
     1729    20479
     1730    20480    1   FLM_FILE_TO_DISK_HANDLING: PROC( FIT_UPDATE ) ALTRET;

  20480 18 005351   200100 741300       FLM_FILE_TO* STX1  ! ANY_FILES_FOUND+2,,AUTO

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:276  
     1731    20481
     1732    20482    2   DCL FIT_UPDATE BIT(1) ALIGNED;
     1733    20483
     1734    20484    2   DCL FREE_GRANS SBIN AUTO;
     1735    20485    2   DCL DCB# SBIN AUTO;
     1736    20486
     1737    20487        /********************/
     1738    20488
     1739    20489    2      GOING_TO_DEST = '0'B;

  20489 18 005352   200042 450100                    STZ     GOING_TO_DEST,,AUTO

     1740    20490    2      FIT_UPDATE = '0'B;

  20490 18 005353   200101 470500                    LDP0    @FIT_UPDATE,,AUTO
        18 005354   000000 450100                    STZ     0,,PR0

     1741    20491    2      FIT_ONLY_RSTRD = '0'B;

  20491 18 005355   200075 450100                    STZ     FIT_ONLY_RSTRD,,AUTO

     1742    20492
     1743    20493    2      IF SKIP_ACCT.ACCT# = SAVE_DCB$->F$DCB.ACCT#

  20493 18 005356   200025 471500                    LDP1    SAVE_DCB$,,AUTO
        18 005357   000222 237000 2                  LDAQ    SKIP_ACCT
        18 005360   100020 117100                    CMPAQ   16,,PR1
        18 005361   005364 601000 18                 TNZ     s:20496

     1744    20494    2       THEN RETURN;              /* Ignore files from accounts to be skipped     */

  20494 18 005362   200100 221300                    LDX1  ! ANY_FILES_FOUND+2,,AUTO
        18 005363   000001 702211                    TSX2  ! 1,X1

     1745    20495
     1746    20496    2      IF TAPE_OPTION.PROTTYPE = %INCREMENTAL

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:277  
  20496 18 005364   000001 236000 xsym               LDQ     TAPE_OPTION+1
        18 005365   700000 376003                    ANQ     -32768,DU
        18 005366   300000 116003                    CMPQ    98304,DU
        18 005367   005415 601000 18                 TNZ     s:20512

     1747    20497    3       THEN DO;

     1748    20498    3         IF SOURCE_FILE_TYPE = %CLEANUP_FILE

  20498 18 005370   200023 235100                    LDA     SOURCE_FILE_TYPE,,AUTO
        18 005371   000010 115007                    CMPA    8,DL
        18 005372   005375 601000 18                 TNZ     s:20501

     1749    20499    3          THEN GOING_TO_DEST = '0'B; /* Don't cleanup during incremental restore */

  20499 18 005373   200042 450100                    STZ     GOING_TO_DEST,,AUTO
        18 005374   005530 710000 18                 TRA     s:20553

     1750    20500    4          ELSE DO;                    /* INCR - replace existing file or granule */

     1751    20501    4            CALL FLM_GET_SOURCE_UTS;

  20501 18 005375   007477 701000 18                 TSX1    FLM_GET_SOURCE_UTS
        18 005376   000000 011000                    NOP     0

     1752    20502    4            CALL FLM_GET_DEST_FILE_UTS;

  20502 18 005377   007612 701000 18                 TSX1    FLM_GET_DEST_FILE_UTS
        18 005400   000000 011000                    NOP     0

     1753    20503    4            IF SOURCE_FILE_TYPE = %IDS_FAST_FILE

  20503 18 005401   200023 235100                    LDA     SOURCE_FILE_TYPE,,AUTO
        18 005402   000011 115007                    CMPA    9,DL
        18 005403   005407 601000 18                 TNZ     s:20506

     1754    20504    4             THEN GOING_TO_DEST = '1'B;    /* Replace on a granule basis         */
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:278  

  20504 18 005404   400000 236003                    LDQ     -131072,DU
        18 005405   200042 756100                    STQ     GOING_TO_DEST,,AUTO
        18 005406   005530 710000 18                 TRA     s:20553

     1755    20505    5             ELSE DO;

     1756    20506    5               IF SOURCE_UTS > DEST_UTS    /* ...if tape file is newer           */

  20506 18 005407   200056 236100                    LDQ     DEST_UTS,,AUTO
        18 005410   200055 116100                    CMPQ    SOURCE_UTS,,AUTO
        18 005411   005530 603000 18                 TRC     s:20553

     1757    20507    5                THEN GOING_TO_DEST = '1'B; /* Replace existing file              */

  20507 18 005412   400000 236003                    LDQ     -131072,DU
        18 005413   200042 756100                    STQ     GOING_TO_DEST,,AUTO

     1758    20508    5               END;

     1759    20509    4            END;

     1760    20510    3         END;

  20510 18 005414   005530 710000 18                 TRA     s:20553

     1761    20511    3       ELSE DO;                            /* PROT or UNPROT                     */

     1762    20512    3         CALL FLM_GET_SOURCE_UTS;

  20512 18 005415   007477 701000 18                 TSX1    FLM_GET_SOURCE_UTS
        18 005416   000000 011000                    NOP     0

     1763    20513    3         CALL FLM_GET_DEST_FILE_UTS;

  20513 18 005417   007612 701000 18                 TSX1    FLM_GET_DEST_FILE_UTS
        18 005420   000000 011000                    NOP     0
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:279  

     1764    20514    3         IF COMMAND = %RETRIEVE

  20514 18 005421   200003 470500                    LDP0    @COMMAND,,AUTO
        18 005422   000000 235100                    LDA     0,,PR0
        18 005423   000034 115007                    CMPA    28,DL
        18 005424   005476 601000 18                 TNZ     s:20535

     1765    20515    3         THEN IF DEST_UTS > 0 AND F$DCB.DESC.QS# AND F$DCB.DESC.FETCH# AND F$DCB.DESC.
             20515                   ARCHIVE#

  20515 18 005425   200056 236100                    LDQ     DEST_UTS,,AUTO
        18 005426   005530 600000 18                 TZE     s:20553
        18 005427   200061 471500                    LDP1    M$DISK_OUT$,,AUTO
        18 005430   100005 236100                    LDQ     5,,PR1
        18 005431   010000 316007                    CANQ    4096,DL
        18 005432   005530 600000 18                 TZE     s:20553
        18 005433   000010 316007                    CANQ    8,DL
        18 005434   005530 600000 18                 TZE     s:20553
        18 005435   001000 316007                    CANQ    512,DL
        18 005436   005530 600000 18                 TZE     s:20553

     1766    20516    3             THEN IF DISK_CODE06$ ~= ADDR(NIL)

  20516 18 005437   200010 236100                    LDQ     DISK_CODE06$,,AUTO
        18 005440   000001 116000 xsym               CMPQ    B_VECTNIL+1
        18 005441   005530 600000 18                 TZE     s:20553

     1767    20517    3                THEN IF DISK_CODE06$->CODE06.STOW.REEL = SAVE_SN

  20517 18 005442   200010 473500                    LDP3    DISK_CODE06$,,AUTO
        18 005443   040100 106500                    CMPC    fill='040'O
        18 005444   300001 000006                    ADSC9   1,,PR3                   cn=0,n=6
        18 005445   200036 000006                    ADSC9   SAVE_SN,,AUTO            cn=0,n=6
        18 005446   005452 600000 18                 TZE     s:20520
        18 005447   000002 236000 xsym               LDQ     TAPE_OPTION+2
        18 005450   002000 316003                    CANQ    1024,DU
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:280  
        18 005451   005530 600000 18                 TZE     s:20553

     1768    20518    3                    OR TAPE_OPTION.DUPLICATE_TAPESET /* Retrieving dup. tapeset  */
     1769    20519    4                   THEN DO;

     1770    20520    4                     EFTWORD = DISK_CODE06$->CODE06.STOW.EFT;

  20520 18 005452   300002 720100                    LXL0    2,,PR3
        18 005453   000000 740000 xsym               STX0    EFTWORD

     1771    20521    4                     IF F$DCB.DESC.ODSTOW#

  20521 18 005454   100005 236100                    LDQ     5,,PR1
        18 005455   040000 316007                    CANQ    16384,DL
        18 005456   005466 600000 18                 TZE     s:20527

     1772    20522    5                      THEN DO;

     1773    20523    5                        IF EFTWORDEXPIRE = SAVE_FSN /* FSN is halfword for OD    */

  20523 18 005457   000000 236000 xsym               LDQ     EFTWORD
        18 005460   000022 732000                    QRS     18
        18 005461   200040 116100                    CMPQ    SAVE_FSN,,AUTO
        18 005462   005530 601000 18                 TNZ     s:20553

     1774    20524    5                         THEN GOING_TO_DEST = '1'B;

  20524 18 005463   400000 236003                    LDQ     -131072,DU
        18 005464   200042 756100                    STQ     GOING_TO_DEST,,AUTO

     1775    20525    5                        END;

  20525 18 005465   005530 710000 18                 TRA     s:20553

     1776    20526    5                      ELSE DO;

     1777    20527    5                        IF EFTWORD.FSN = SAVE_FSN
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:281  

  20527 18 005466   000000 236000 xsym               LDQ     EFTWORD
        18 005467   000022 772000                    QRL     18
        18 005470   037777 376007                    ANQ     16383,DL
        18 005471   200040 116100                    CMPQ    SAVE_FSN,,AUTO
        18 005472   005530 601000 18                 TNZ     s:20553

     1778    20528    5                         THEN GOING_TO_DEST = '1'B;

  20528 18 005473   400000 236003                    LDQ     -131072,DU
        18 005474   200042 756100                    STQ     GOING_TO_DEST,,AUTO

     1779    20529    5                        END;

     1780    20530    4                     END;

  20530 18 005475   005530 710000 18                 TRA     s:20553

     1781    20531    3                   ELSE ;                  /* Not same reel...not going to disk  */
     1782    20532    3                ELSE ;                     /* No CODE06?                         */
     1783    20533    3             ELSE ;                   /* Not a fetched, previously archived file */
     1784    20534    4          ELSE DO;

     1785    20535    5            DO CASE( COMMAND );

  20535 18 005476   000011 135007                    SBLA    9,DL
        18 005477   000001 115007                    CMPA    1,DL
        18 005500   005502 602005 18                 TNC     s:20535+4,AL
        18 005501   005520 710000 18                 TRA     s:20541
        18 005502   005503 710000 18                 TRA     s:20537

     1786    20536    5             CASE( %RESTORE );

     1787    20537    5               IF DISK_DEST_EXIST = %NEWFILE# AND TAPE_OPTION.PROTTYPE ~= %PROTECTED

  20537 18 005503   000000 236000 xsym               LDQ     DISK_DEST_EXIST
        18 005504   000003 116007                    CMPQ    3,DL
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:282  
        18 005505   005515 601000 18                 TNZ     s:20539
        18 005506   000001 236000 xsym               LDQ     TAPE_OPTION+1
        18 005507   700000 376003                    ANQ     -32768,DU
        18 005510   100000 116003                    CMPQ    32768,DU
        18 005511   005515 600000 18                 TZE     s:20539

     1788    20538    5                THEN GOING_TO_DEST = '1'B; /* UNPROT - send source to disk       */

  20538 18 005512   400000 236003                    LDQ     -131072,DU
        18 005513   200042 756100                    STQ     GOING_TO_DEST,,AUTO
        18 005514   005530 710000 18                 TRA     s:20553

     1789    20539    5                ELSE CALL CHECK_DEST_FILE;

  20539 18 005515   006427 701000 18                 TSX1    CHECK_DEST_FILE
        18 005516   000000 011000                    NOP     0
        18 005517   005530 710000 18                 TRA     s:20553

     1790    20540    5             CASE( ELSE );

     1791    20541    5               IF DISK_DEST_EXIST = %NEWFILE#

  20541 18 005520   000000 236000 xsym               LDQ     DISK_DEST_EXIST
        18 005521   000003 116007                    CMPQ    3,DL
        18 005522   005526 601000 18                 TNZ     s:20543

     1792    20542    5                THEN GOING_TO_DEST = '1'B; /* UNPROT - send source to disk       */

  20542 18 005523   400000 236003                    LDQ     -131072,DU
        18 005524   200042 756100                    STQ     GOING_TO_DEST,,AUTO
        18 005525   005530 710000 18                 TRA     s:20553

     1793    20543    5                ELSE CALL CHECK_DEST_FILE;

  20543 18 005526   006427 701000 18                 TSX1    CHECK_DEST_FILE
        18 005527   000000 011000                    NOP     0

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:283  
     1794    20544    5             END;

     1795    20545    4            END;

     1796    20546    3         END;

     1797    20547
     1798    20548        /***
     1799    20549         ***  If file is going to disk, set up FPTs and related information
     1800    20550         ***  that will make the file turn out like it's supposed to.
     1801    20551         ***/
     1802    20552
     1803    20553    2      IF GOING_TO_DEST THEN

  20553 18 005530   200042 234100                    SZN     GOING_TO_DEST,,AUTO
        18 005531   006207 605000 18                 TPL     s:20676

     1804    20554    3   GOING: DO;                              /* Restore or retrieve this file      */

  20554 18 005532                       GOING        null
     1805    20555    3         IF COMMAND = %RETRIEVE

  20555 18 005532   200003 470500                    LDP0    @COMMAND,,AUTO
        18 005533   000000 235100                    LDA     0,,PR0
        18 005534   000034 115007                    CMPA    28,DL
        18 005535   005674 601000 18                 TNZ     s:20587

     1806    20556    4          THEN DO;

     1807    20557        /***
     1808    20558         *** Before deleting file, determine if we have a minimum number of granules
     1809    20559         *** for recreating this archived file in case pack space is exceeded.
     1810    20560         *** (File must be left in queued-for-fetch state so file is eventually
     1811    20561         *** retrieved.)
     1812    20562         ***/
     1813    20563    4            DCB# = DISK_OPEN.V.DCB#;

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:284  
  20563 18 005536   000044 236000 xsym               LDQ     DISK_OPEN+36
        18 005537   000022 772000                    QRL     18
        18 005540   200103 756100                    STQ     DCB#,,AUTO

     1814    20564    4            CALL FLI$NUMFREEGRANS ( ADDR(TO_DISK_SN), FREE_GRANS, ERR )

  20564 18 005541   000007 236000 19                 LDQ     7
        18 005542   200124 756100                    STQ     @DISP+1,,AUTO
        18 005543   200020 631500                    EPPR1   ERR,,AUTO
        18 005544   200127 451500                    STP1    @DISP+4,,AUTO
        18 005545   200102 633500                    EPPR3   FREE_GRANS,,AUTO
        18 005546   200126 453500                    STP3    @DISP+3,,AUTO
        18 005547   200124 634500                    EPPR4   @DISP+1,,AUTO
        18 005550   200125 454500                    STP4    @DISP+2,,AUTO
        18 005551   200125 630500                    EPPR0   @DISP+2,,AUTO
        18 005552   000021 631400 xsym               EPPR1   B_VECTNIL+17
        18 005553   000000 701000 xent               TSX1    FLI$NUMFREEGRANS
        18 005554   005556 702000 18                 TSX2    s:20566
        18 005555   005623 710000 18                 TRA     s:20575

     1815    20565    5             WHENALTRETURN DO;             /* Output skipped line                */

     1816    20566    5               CALL FLP$WR_FILE_INFO( SAVE_DCB$, SAVE_FIT_.PTR$, SAVE_SN,

  20566 18 005556   000052 236000 19                 LDQ     42
        18 005557   200134 756100                    STQ     @DISP+9,,AUTO
        18 005560   200072 630500                    EPPR0   PR_DEV_LT,,AUTO
        18 005561   200133 450500                    STP0    @DISP+8,,AUTO
        18 005562   200020 631500                    EPPR1   ERR,,AUTO
        18 005563   200132 451500                    STP1    @DISP+7,,AUTO
        18 005564   000001 236000 xsym               LDQ     B_VECTNIL+1
        18 005565   000050 235000 19                 LDA     40
        18 005566   200130 757100                    STAQ    @DISP+5,,AUTO
        18 005567   200040 633500                    EPPR3   SAVE_FSN,,AUTO
        18 005570   200127 453500                    STP3    @DISP+4,,AUTO
        18 005571   200036 634500                    EPPR4   SAVE_SN,,AUTO
        18 005572   200126 454500                    STP4    @DISP+3,,AUTO
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:285  
        18 005573   200027 635500                    EPPR5   SAVE_FIT_+1,,AUTO
        18 005574   200125 455500                    STP5    @DISP+2,,AUTO
        18 005575   200025 636500                    EPPR6   SAVE_DCB$,,AUTO
        18 005576   200124 456500                    STP6    @DISP+1,,AUTO
        18 005577   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 005600   000053 631400 19                 EPPR1   43
        18 005601   000000 701000 xent               TSX1    FLP$WR_FILE_INFO
        18 005602   006425 702000 18                 TSX2    JUSTALT

     1817    20567    5                 SAVE_FSN, CROSSED, , ERR, PR_DEV_LT, '0'B) ALTRET( JUSTALT );
     1818    20568    5               CALL FLI$RPT_ERR ( ERR, DCB# );

  20568 18 005603   200103 630500                    EPPR0   DCB#,,AUTO
        18 005604   200125 450500                    STP0    @DISP+2,,AUTO
        18 005605   200020 631500                    EPPR1   ERR,,AUTO
        18 005606   200124 451500                    STP1    @DISP+1,,AUTO
        18 005607   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 005610   000020 631400 xsym               EPPR1   B_VECTNIL+16
        18 005611   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 005612   000000 011000                    NOP     0

     1819    20569    5               IF FPT_EXIT.V.STEPCC# < %MINOR_ERROR

  20569 18 005613   000004 236000 xsym               LDQ     FPT_EXIT+4
        18 005614   777000 316003                    CANQ    -512,DU
        18 005615   005620 601000 18                 TNZ     s:20571

     1820    20570    5                THEN FPT_EXIT.V.STEPCC# = %MINOR_ERROR;

  20570 18 005616   001000 236003                    LDQ     512,DU
        18 005617   000004 552040 xsym               STBQ    FPT_EXIT+4,'40'O

     1821    20571    5               GOING_TO_DEST = '0'B;

  20571 18 005620   200042 450100                    STZ     GOING_TO_DEST,,AUTO

     1822    20572    5               ERR = '0'B;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:286  

  20572 18 005621   200020 450100                    STZ     ERR,,AUTO

     1823    20573    5               EXIT GOING;

  20573 18 005622   006206 710000 18                 TRA     s:20670

     1824    20574    5               END;
     1825    20575    4            IF FREE_GRANS < 5

  20575 18 005623   200102 235100                    LDA     FREE_GRANS,,AUTO
        18 005624   000005 115007                    CMPA    5,DL
        18 005625   005674 605000 18                 TPL     s:20587

     1826    20576    5             THEN DO;                      /* Output skipped line                */

     1827    20577    5               ERR = '777777777777'O;

  20577 18 005626   000027 236000 xsym               LDQ     B_VECTNIL+23
        18 005627   200020 756100                    STQ     ERR,,AUTO

     1828    20578    5               CALL FLP$WR_FILE_INFO( SAVE_DCB$, SAVE_FIT_.PTR$, SAVE_SN,

  20578 18 005630   000052 236000 19                 LDQ     42
        18 005631   200134 756100                    STQ     @DISP+9,,AUTO
        18 005632   200072 630500                    EPPR0   PR_DEV_LT,,AUTO
        18 005633   200133 450500                    STP0    @DISP+8,,AUTO
        18 005634   200020 631500                    EPPR1   ERR,,AUTO
        18 005635   200132 451500                    STP1    @DISP+7,,AUTO
        18 005636   000001 236000 xsym               LDQ     B_VECTNIL+1
        18 005637   000050 235000 19                 LDA     40
        18 005640   200130 757100                    STAQ    @DISP+5,,AUTO
        18 005641   200040 633500                    EPPR3   SAVE_FSN,,AUTO
        18 005642   200127 453500                    STP3    @DISP+4,,AUTO
        18 005643   200036 634500                    EPPR4   SAVE_SN,,AUTO
        18 005644   200126 454500                    STP4    @DISP+3,,AUTO
        18 005645   200027 635500                    EPPR5   SAVE_FIT_+1,,AUTO
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:287  
        18 005646   200125 455500                    STP5    @DISP+2,,AUTO
        18 005647   200025 636500                    EPPR6   SAVE_DCB$,,AUTO
        18 005650   200124 456500                    STP6    @DISP+1,,AUTO
        18 005651   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 005652   000053 631400 19                 EPPR1   43
        18 005653   000000 701000 xent               TSX1    FLP$WR_FILE_INFO
        18 005654   006425 702000 18                 TSX2    JUSTALT

     1829    20579    5                 SAVE_FSN, CROSSED, , ERR, PR_DEV_LT, '0'B) ALTRET( JUSTALT );
     1830    20580    5               CALL FLI$RPT_ERR ( E_CANT_RETRIEVE, DCB# );

  20580 18 005655   200103 630500                    EPPR0   DCB#,,AUTO
        18 005656   200125 450500                    STP0    @DISP+2,,AUTO
        18 005657   000067 236000 19                 LDQ     55
        18 005660   200124 756100                    STQ     @DISP+1,,AUTO
        18 005661   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 005662   000020 631400 xsym               EPPR1   B_VECTNIL+16
        18 005663   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 005664   000000 011000                    NOP     0

     1831    20581    5               IF FPT_EXIT.V.STEPCC# < %MINOR_ERROR

  20581 18 005665   000004 236000 xsym               LDQ     FPT_EXIT+4
        18 005666   777000 316003                    CANQ    -512,DU
        18 005667   005672 601000 18                 TNZ     s:20583

     1832    20582    5                THEN FPT_EXIT.V.STEPCC# = %MINOR_ERROR;

  20582 18 005670   001000 236003                    LDQ     512,DU
        18 005671   000004 552040 xsym               STBQ    FPT_EXIT+4,'40'O

     1833    20583    5               GOING_TO_DEST = '0'B;

  20583 18 005672   200042 450100                    STZ     GOING_TO_DEST,,AUTO

     1834    20584    5               EXIT GOING;

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:288  
  20584 18 005673   006206 710000 18                 TRA     s:20670

     1835    20585    5               END;
     1836    20586    4            END;
     1837    20587    3         CALL FLM_DELETE_TO_DISK_FILE;

  20587 18 005674   010144 701000 18                 TSX1    FLM_DELETE_TO_DISK_FILE
        18 005675   000000 011000                    NOP     0

     1838    20588    4         DO CASE( SOURCE_FILE_TYPE );

  20588 18 005676   200023 235100                    LDA     SOURCE_FILE_TYPE,,AUTO
        18 005677   000012 115007                    CMPA    10,DL
        18 005700   005702 602005 18                 TNC     s:20588+4,AL
        18 005701   006055 710000 18                 TRA     s:20631
        18 005702   005714 710000 18                 TRA     s:20591
        18 005703   006022 710000 18                 TRA     s:20619
        18 005704   005733 710000 18                 TRA     s:20596
        18 005705   005714 710000 18                 TRA     s:20591
        18 005706   006055 710000 18                 TRA     s:20631
        18 005707   006055 710000 18                 TRA     s:20631
        18 005710   006055 710000 18                 TRA     s:20631
        18 005711   006055 710000 18                 TRA     s:20631
        18 005712   006022 710000 18                 TRA     s:20619
        18 005713   005714 710000 18                 TRA     s:20591

     1839    20589
     1840    20590    4          CASE( %REG_FILE, %ACUP_FILE, %IDS_FAST_FILE );

     1841    20591    4            IF DISK_OPTION.SCRUB

  20591 18 005714   000002 236000 xsym               LDQ     DISK_OPTION+2
        18 005715   700000 316003                    CANQ    -32768,DU
        18 005716   005730 600000 18                 TZE     s:20593

     1842    20592    4             THEN CALL FLS$SCRUB( PINCRW( FPARAM_.PTR$, SIZEW(FM$GRAN) ) );

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:289  
  20592 18 005717   200017 236100                    LDQ     FPARAM_+1,,AUTO
        18 005720   000005 036003                    ADLQ    5,DU
        18 005721   200124 756100                    STQ     @DISP+1,,AUTO
        18 005722   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 005723   200125 450500                    STP0    @DISP+2,,AUTO
        18 005724   200125 630500                    EPPR0   @DISP+2,,AUTO
        18 005725   000017 631400 xsym               EPPR1   B_VECTNIL+15
        18 005726   000000 701000 xent               TSX1    FLS$SCRUB
        18 005727   000000 011000                    NOP     0

     1843    20593    4            DISK_OPEN.IFPARAM_ = FPARAM_;  /* Just need FIT                      */

  20593 18 005730   200016 237100                    LDAQ    FPARAM_,,AUTO
        18 005731   000026 757000 xsym               STAQ    DISK_OPEN+22
        18 005732   006055 710000 18                 TRA     s:20631

     1844    20594
     1845    20595    4          CASE( %INACTIVE_FILE );

     1846    20596    4            DISK_OPEN.IFPARAM_ = VECTOR(A_FIT);

  20596 18 005733   000070 237000 19                 LDAQ    56
        18 005734   000026 757000 xsym               STAQ    DISK_OPEN+22

     1847    20597    4            CODE$ = PINCRW( ADDR(A_FIT), SIZEW(FM$GRAN) );

  20597 18 005735   000072 236000 19                 LDQ     58
        18 005736   200006 756100                    STQ     CODE$,,AUTO

     1848    20598    4            CALL XSF$LOCCODP( CODE$, 06 )

  20598 18 005737   000073 236000 19                 LDQ     59
        18 005740   200125 756100                    STQ     @DISP+2,,AUTO
        18 005741   200006 630500                    EPPR0   CODE$,,AUTO
        18 005742   200124 450500                    STP0    @DISP+1,,AUTO
        18 005743   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 005744   000020 631400 xsym               EPPR1   B_VECTNIL+16
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:290  
        18 005745   000000 701000 xent               TSX1    XSF$LOCCODP
        18 005746   005750 702000 18                 TSX2    s:20600
        18 005747   005752 710000 18                 TRA     s:20602

     1849    20599    5             WHENALTRETURN DO;

     1850    20600    5               CALL M$XXX;                 /* We know our FIT has a CODE06       */

  20600 18 005750   000003 713400                    CLIMB   3
        18 005751   000000 401760                    pmme    nvectors=0

     1851    20601    5               END;

     1852    20602    4            SOURCE_CODE$ = FPARAM_.PTR$;

  20602 18 005752   200017 236100                    LDQ     FPARAM_+1,,AUTO
        18 005753   200013 756100                    STQ     SOURCE_CODE$,,AUTO

     1853    20603    4            CALL XSF$LOCCODP( SOURCE_CODE$, 06 )

  20603 18 005754   000073 236000 19                 LDQ     59
        18 005755   200125 756100                    STQ     @DISP+2,,AUTO
        18 005756   200013 630500                    EPPR0   SOURCE_CODE$,,AUTO
        18 005757   200124 450500                    STP0    @DISP+1,,AUTO
        18 005760   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 005761   000020 631400 xsym               EPPR1   B_VECTNIL+16
        18 005762   000000 701000 xent               TSX1    XSF$LOCCODP
        18 005763   005772 702000 18                 TSX2    s:20608

     1854    20604    5             WHENRETURN DO;

     1855    20605    5               CODE06 = SOURCE_CODE$->CODE06; /* Put the right SN in CODE06      */

  20605 18 005764   200013 470500                    LDP0    SOURCE_CODE$,,AUTO
        18 005765   200006 471500                    LDP1    CODE$,,AUTO
        18 005766   000100 100500                    MLR     fill='000'O
        18 005767   000000 000014                    ADSC9   0,,PR0                   cn=0,n=12
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:291  
        18 005770   100000 000014                    ADSC9   0,,PR1                   cn=0,n=12

     1856    20606    5               END;

  20606 18 005771   005776 710000 18                 TRA     s:20610

     1857    20607    5             WHENALTRETURN DO;

     1858    20608    5               CODE06 = '0'B;

  20608 18 005772   200006 470500                    LDP0    CODE$,,AUTO
        18 005773   000100 100400                    MLR     fill='000'O
        18 005774   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
        18 005775   000000 000014                    ADSC9   0,,PR0                   cn=0,n=12

     1859    20609    5               END;

     1860    20610    4            CODE$ = PINCRW( ADDR(A_FIT), SIZEW(FM$GRAN) );

  20610 18 005776   000072 236000 19                 LDQ     58
        18 005777   200006 756100                    STQ     CODE$,,AUTO

     1861    20611    4            CALL XSF$LOCCODP( CODE$, 03 )

  20611 18 006000   000042 236000 19                 LDQ     34
        18 006001   200125 756100                    STQ     @DISP+2,,AUTO
        18 006002   200006 630500                    EPPR0   CODE$,,AUTO
        18 006003   200124 450500                    STP0    @DISP+1,,AUTO
        18 006004   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 006005   000020 631400 xsym               EPPR1   B_VECTNIL+16
        18 006006   000000 701000 xent               TSX1    XSF$LOCCODP
        18 006007   006011 702000 18                 TSX2    s:20613
        18 006010   006013 710000 18                 TRA     s:20615

     1862    20612    5             WHENALTRETURN DO;

     1863    20613    5               CALL M$XXX;                 /* We know our FIT has a CODE03       */
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:292  

  20613 18 006011   000003 713400                    CLIMB   3
        18 006012   000000 401760                    pmme    nvectors=0

     1864    20614    5               END;

     1865    20615    4            CODE03.DESC = '0'B;

  20615 18 006013   000000 220003                    LDX0    0,DU
        18 006014   200006 470500                    LDP0    CODE$,,AUTO
        18 006015   000001 740100                    STX0    1,,PR0

     1866    20616    4            CODE03.DESC.ARCHIVE = '1'B;

  20616 18 006016   200006 470500                    LDP0    CODE$,,AUTO
        18 006017   001000 236003                    LDQ     512,DU
        18 006020   000001 256100                    ORSQ    1,,PR0
        18 006021   006055 710000 18                 TRA     s:20631

     1867    20617
     1868    20618    4          CASE( %DEL_FILE, %CLEANUP_FILE );

     1869    20619    4            IF SOURCE = %DISK@

  20619 18 006022   200070 236100                    LDQ     SOURCE,,AUTO
        18 006023   000001 116007                    CMPQ    1,DL
        18 006024   006031 601000 18                 TNZ     s:20621

     1870    20620    4             THEN CALL FLM_ADD_TO_DEL_LIST( '0'B ) ALTRET( JUSTALT );

  20620 18 006025   000052 236000 19                 LDQ     42
        18 006026   200105 756100                    STQ     M$TSN_USED$,,AUTO
        18 006027   012132 701000 18                 TSX1    FLM_ADD_TO_DEL_LIST
        18 006030   006425 702000 18                 TSX2    JUSTALT

     1871    20621    4            DISK_OPEN.IFPARAM_ = VECTOR(A_FIT);

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:293  
  20621 18 006031   000070 237000 19                 LDAQ    56
        18 006032   000026 757000 xsym               STAQ    DISK_OPEN+22

     1872    20622    4            CODE$ = PINCRW( ADDR(A_FIT), SIZEW(FM$GRAN) );

  20622 18 006033   000072 236000 19                 LDQ     58
        18 006034   200006 756100                    STQ     CODE$,,AUTO

     1873    20623    4            CALL XSF$LOCCODP( CODE$, 03 )

  20623 18 006035   000042 236000 19                 LDQ     34
        18 006036   200125 756100                    STQ     @DISP+2,,AUTO
        18 006037   200006 630500                    EPPR0   CODE$,,AUTO
        18 006040   200124 450500                    STP0    @DISP+1,,AUTO
        18 006041   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 006042   000020 631400 xsym               EPPR1   B_VECTNIL+16
        18 006043   000000 701000 xent               TSX1    XSF$LOCCODP
        18 006044   006046 702000 18                 TSX2    s:20625
        18 006045   006050 710000 18                 TRA     s:20627

     1874    20624    5             WHENALTRETURN DO;

     1875    20625    5               CALL M$XXX;                 /* We know our FIT has a CODE03       */

  20625 18 006046   000003 713400                    CLIMB   3
        18 006047   000000 401760                    pmme    nvectors=0

     1876    20626    5               END;

     1877    20627    4            CODE03.DESC = '0'B;

  20627 18 006050   000000 220003                    LDX0    0,DU
        18 006051   200006 470500                    LDP0    CODE$,,AUTO
        18 006052   000001 740100                    STX0    1,,PR0

     1878    20628    4            DISK_OPEN.V.EXPIRE# = SOURCE_UTS;

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:294  
  20628 18 006053   200055 235100                    LDA     SOURCE_UTS,,AUTO
        18 006054   000057 755000 xsym               STA     DISK_OPEN+47

     1879    20629
     1880    20630    4          END;

     1881    20631    3         CALL FLM_COPY_FILE_TO_DISK;

  20631 18 006055   010531 701000 18                 TSX1    FLM_COPY_FILE_TO_DISK
        18 006056   000000 011000                    NOP     0

     1882    20632
     1883    20633    3         IF GOING_TO_DEST                  /* File went to destination           */

  20633 18 006057   200042 234100                    SZN     GOING_TO_DEST,,AUTO
        18 006060   006423 605000 18                 TPL     s:20739

     1884    20634    4          THEN DO;

     1885    20635    5            DO CASE( COMMAND );

  20635 18 006061   200003 470500                    LDP0    @COMMAND,,AUTO
        18 006062   000000 235100                    LDA     0,,PR0
        18 006063   000011 135007                    SBLA    9,DL
        18 006064   000046 115007                    CMPA    38,DL
        18 006065   006067 602005 18                 TNC     s:20635+6,AL
        18 006066   006423 710000 18                 TRA     s:20739
        18 006067   006135 710000 18                 TRA     s:20645
        18 006070   006206 710000 18                 TRA     s:20670
        18 006071   006206 710000 18                 TRA     s:20670
        18 006072   006206 710000 18                 TRA     s:20670
        18 006073   006206 710000 18                 TRA     s:20670
        18 006074   006206 710000 18                 TRA     s:20670
        18 006075   006206 710000 18                 TRA     s:20670
        18 006076   006206 710000 18                 TRA     s:20670
        18 006077   006206 710000 18                 TRA     s:20670
        18 006100   006206 710000 18                 TRA     s:20670
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:295  
        18 006101   006206 710000 18                 TRA     s:20670
        18 006102   006206 710000 18                 TRA     s:20670
        18 006103   006206 710000 18                 TRA     s:20670
        18 006104   006206 710000 18                 TRA     s:20670
        18 006105   006206 710000 18                 TRA     s:20670
        18 006106   006206 710000 18                 TRA     s:20670
        18 006107   006206 710000 18                 TRA     s:20670
        18 006110   006206 710000 18                 TRA     s:20670
        18 006111   006206 710000 18                 TRA     s:20670
        18 006112   006206 710000 18                 TRA     s:20670
        18 006113   006206 710000 18                 TRA     s:20670
        18 006114   006206 710000 18                 TRA     s:20670
        18 006115   006206 710000 18                 TRA     s:20670
        18 006116   006206 710000 18                 TRA     s:20670
        18 006117   006206 710000 18                 TRA     s:20670
        18 006120   006206 710000 18                 TRA     s:20670
        18 006121   006206 710000 18                 TRA     s:20670
        18 006122   006206 710000 18                 TRA     s:20670
        18 006123   006206 710000 18                 TRA     s:20670
        18 006124   006206 710000 18                 TRA     s:20670
        18 006125   006206 710000 18                 TRA     s:20670
        18 006126   006206 710000 18                 TRA     s:20670
        18 006127   006206 710000 18                 TRA     s:20670
        18 006130   006206 710000 18                 TRA     s:20670
        18 006131   006206 710000 18                 TRA     s:20670
        18 006132   006206 710000 18                 TRA     s:20670
        18 006133   006206 710000 18                 TRA     s:20670
        18 006134   006135 710000 18                 TRA     s:20645

     1886    20636    5             CASE( %RESTORE, %REBUILD );

     1887    20637        /***
     1888    20638         *** If destination file ended up as a FIT-only file (no data), add
     1889    20639         *** name to :DATA.$$EFT.
     1890    20640         *** If destination file was a FIT-only file prior to this file being copied,
     1891    20641         *** delete name from the :NODATA.$$EFT file. Note: May eventually have
     1892    20642         *** to check all files so that :NODATA.$$EFT is always current.
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:296  
     1893    20643         *** (i.e., If FIT-only file gets deleted via PCL, won't get deleted from :NODATA.)
     1894    20644         ***/
     1895    20645    5               IF FIT_ONLY_RSTRD

  20645 18 006135   200075 234100                    SZN     FIT_ONLY_RSTRD,,AUTO
        18 006136   006162 605000 18                 TPL     s:20657

     1896    20646    6                THEN DO;

     1897    20647    6                  NODATA_KEY.ACCT# = SAVE_DCB$->F$DCB.ACCT#;

  20647 18 006137   200025 471500                    LDP1    SAVE_DCB$,,AUTO
        18 006140   040000 100500                    MLR     fill='040'O
        18 006141   100020 000010                    ADSC9   16,,PR1                  cn=0,n=8
        18 006142   000000 200010 xsym               ADSC9   NODATA_KEY               cn=1,n=8

     1898    20648    6                  NODATA_KEY.NAME#.L = SAVE_DCB$->F$DCB.NAME#.L;

  20648 18 006143   100010 236100                    LDQ     8,,PR1
        18 006144   000012 552040 xsym               STBQ    NODATA_KEY+10,'40'O

     1899    20649    6                  NODATA_KEY.NAME#.C = SAVE_DCB$->F$DCB.NAME#.C;

  20649 18 006145   040000 100500                    MLR     fill='040'O
        18 006146   100010 200037                    ADSC9   8,,PR1                   cn=1,n=31
        18 006147   000002 200037 xsym               ADSC9   NODATA_KEY+2             cn=1,n=31

     1900    20650    6                  CALL M$WRITE( WRITE_NODATA_LIST )

  20650 18 006150   000000 630400 xsym               EPPR0   WRITE_NODATA_LIST
        18 006151   440001 713400                    CLIMB   alt,write
        18 006152   401400 401760                    pmme    nvectors=4
        18 006153   006155 702000 18                 TSX2    s:20652
        18 006154   006161 710000 18                 TRA     s:20655

     1901    20651    7                   WHENALTRETURN DO;

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:297  
     1902    20652    7                     CALL FLI$RPT_ERR;

  20652 18 006155   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 006156   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 006157   000000 011000                    NOP     0

     1903    20653    7                     GOTO JUSTALT;

  20653 18 006160   006425 710000 18                 TRA     JUSTALT

     1904    20654    7                     END;
     1905    20655    6                  END;

  20655 18 006161   006423 710000 18                 TRA     s:20739

     1906    20656    6                ELSE DO;

     1907    20657    6                  IF DEST_FILE_TYPE = %ACUP_FILE

  20657 18 006162   200024 236100                    LDQ     DEST_FILE_TYPE,,AUTO
        18 006163   000003 116007                    CMPQ    3,DL
        18 006164   006423 601000 18                 TNZ     s:20739

     1908    20658    7                   THEN DO;

     1909    20659    7                     NODATA_KEY.ACCT# = SAVE_DCB$->F$DCB.ACCT#;

  20659 18 006165   200025 471500                    LDP1    SAVE_DCB$,,AUTO
        18 006166   040000 100500                    MLR     fill='040'O
        18 006167   100020 000010                    ADSC9   16,,PR1                  cn=0,n=8
        18 006170   000000 200010 xsym               ADSC9   NODATA_KEY               cn=1,n=8

     1910    20660    7                     NODATA_KEY.NAME#.L = SAVE_DCB$->F$DCB.NAME#.L;

  20660 18 006171   100010 236100                    LDQ     8,,PR1
        18 006172   000012 552040 xsym               STBQ    NODATA_KEY+10,'40'O

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:298  
     1911    20661    7                     NODATA_KEY.NAME#.C = SAVE_DCB$->F$DCB.NAME#.C;

  20661 18 006173   040000 100500                    MLR     fill='040'O
        18 006174   100010 200037                    ADSC9   8,,PR1                   cn=1,n=31
        18 006175   000002 200037 xsym               ADSC9   NODATA_KEY+2             cn=1,n=31

     1912    20662    7                     CALL M$DELREC( DEL_NODATA_REC )

  20662 18 006176   000142 630400 2                  EPPR0   DEL_NODATA_REC
        18 006177   440002 713400                    CLIMB   alt,+16386
        18 006200   401400 401760                    pmme    nvectors=4
        18 006201   006203 702000 18                 TSX2    s:20664
        18 006202   006206 710000 18                 TRA     s:20670

     1913    20663    8                      WHENALTRETURN DO;

     1914    20664    8                        CALL FLI$RPT_ERR;

  20664 18 006203   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 006204   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 006205   000000 011000                    NOP     0

     1915    20665    8                        END;

     1916    20666    7                     END;

     1917    20667    6                  END;

     1918    20668    5             END;

     1919    20669    4            END;

     1920    20670    3         END;

  20670 18 006206   006423 710000 18                 TRA     s:20739

     1921    20671    3       ELSE DO;                            /* Not copying tape file to disk      */
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:299  

     1922    20672        /***
     1923    20673         *** Update access time on DUAL pack if DUALing incrementally with ACUP set.
     1924    20674         *** Since file was not copied it is a candidate.
     1925    20675         ***/
     1926    20676    3         IF COMMAND = %REAL_DUAL

  20676 18 006207   200003 470500                    LDP0    @COMMAND,,AUTO
        18 006210   000000 235100                    LDA     0,,PR0
        18 006211   000055 115007                    CMPA    45,DL
        18 006212   006406 601000 18                 TNZ     s:20729
        18 006213   000001 236000 xsym               LDQ     TAPE_OPTION+1
        18 006214   700000 376003                    ANQ     -32768,DU
        18 006215   300000 116003                    CMPQ    98304,DU
        18 006216   006406 601000 18                 TNZ     s:20729
        18 006217   000000 236000 xsym               LDQ     DISK_OPTION
        18 006220   004000 316003                    CANQ    2048,DU
        18 006221   006406 600000 18                 TZE     s:20729
        18 006222   000000 234000 xsym               SZN     DISK_SRCHCOND
        18 006223   006406 604000 18                 TMI     s:20729

     1927    20677    3           AND TAPE_OPTION.PROTTYPE = %INCREMENTAL
     1928    20678    3           AND DISK_OPTION.ACUP
     1929    20679    3           AND NOT DISK_SRCHCOND.DELF#     /* Set on 1st pass of DUAL INCR       */
     1930    20680    4          THEN DO;

     1931    20681    5   DUAL_DO: DO CASE (SOURCE_FILE_TYPE );

  20681 18 006224   200023 235100       DUAL_DO      LDA     SOURCE_FILE_TYPE,,AUTO
        18 006225   000012 115007                    CMPA    10,DL
        18 006226   006230 602005 18                 TNC     DUAL_DO+4,AL
        18 006227   006406 710000 18                 TRA     s:20729
        18 006230   006242 710000 18                 TRA     s:20683
        18 006231   006406 710000 18                 TRA     s:20729
        18 006232   006406 710000 18                 TRA     s:20729
        18 006233   006242 710000 18                 TRA     s:20683
        18 006234   006406 710000 18                 TRA     s:20729
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:300  
        18 006235   006406 710000 18                 TRA     s:20729
        18 006236   006406 710000 18                 TRA     s:20729
        18 006237   006406 710000 18                 TRA     s:20729
        18 006240   006406 710000 18                 TRA     s:20729
        18 006241   006242 710000 18                 TRA     s:20683

     1932    20682    5             CASE (%REG_FILE, %ACUP_FILE, %IDS_FAST_FILE);

     1933    20683    5               CODE$ = SAVE_AD_FD_FIT_.PTR$;

  20683 18 006242   200031 236100                    LDQ     SAVE_AD_FD_FIT_+1,,AUTO
        18 006243   200006 756100                    STQ     CODE$,,AUTO

     1934    20684    5               CALL XSF$LOCCODP( CODE$, 14 )

  20684 18 006244   000075 236000 19                 LDQ     61
        18 006245   200125 756100                    STQ     @DISP+2,,AUTO
        18 006246   200006 631500                    EPPR1   CODE$,,AUTO
        18 006247   200124 451500                    STP1    @DISP+1,,AUTO
        18 006250   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 006251   000020 631400 xsym               EPPR1   B_VECTNIL+16
        18 006252   000000 701000 xent               TSX1    XSF$LOCCODP
        18 006253   006255 702000 18                 TSX2    s:20686
        18 006254   006256 710000 18                 TRA     s:20688

     1935    20685    6                WHENALTRETURN DO;

     1936    20686    6                  EXIT DUAL_DO;            /* Exit since code14 can't be found   */

  20686 18 006255   006406 710000 18                 TRA     s:20729

     1937    20687    6                  END;
     1938    20688    5               IF NOT CODE14.ACCESS.NOACUP AND FPARAM_.PTR$ ~= ADDR(NIL)

  20688 18 006256   200006 470500                    LDP0    CODE$,,AUTO
        18 006257   000000 236100                    LDQ     0,,PR0
        18 006260   002000 316003                    CANQ    1024,DU
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:301  
        18 006261   006406 601000 18                 TNZ     s:20729
        18 006262   200017 236100                    LDQ     FPARAM_+1,,AUTO
        18 006263   000001 116000 xsym               CMPQ    B_VECTNIL+1
        18 006264   006406 600000 18                 TZE     s:20729

     1939    20689    6                THEN DO;         /* O.K. to update the access date in dest. FIT  */

     1940    20690    6                  CODE04$ = PINCRW( FPARAM_.PTR$, SIZEW(FM$GRAN) );

  20690 18 006265   000005 036003                    ADLQ    5,DU
        18 006266   200007 756100                    STQ     CODE04$,,AUTO

     1941    20691    6                  CALL XSF$LOCCODP( CODE04$, 04 ) /* Get source file code 04     */

  20691 18 006267   000076 236000 19                 LDQ     62
        18 006270   200125 756100                    STQ     @DISP+2,,AUTO
        18 006271   200007 631500                    EPPR1   CODE04$,,AUTO
        18 006272   200124 451500                    STP1    @DISP+1,,AUTO
        18 006273   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 006274   000020 631400 xsym               EPPR1   B_VECTNIL+16
        18 006275   000000 701000 xent               TSX1    XSF$LOCCODP
        18 006276   006300 702000 18                 TSX2    s:20693
        18 006277   006301 710000 18                 TRA     s:20695

     1942    20692    7                   WHENALTRETURN DO;

     1943    20693    7                     EXIT DUAL_DO;

  20693 18 006300   006406 710000 18                 TRA     s:20729

     1944    20694    7                     END;
     1945    20695    6                  CODE$ = PINCRW( FPARAM_.PTR$, SIZEW(FM$GRAN) );

  20695 18 006301   200017 236100                    LDQ     FPARAM_+1,,AUTO
        18 006302   000005 036003                    ADLQ    5,DU
        18 006303   200006 756100                    STQ     CODE$,,AUTO

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:302  
     1946    20696    6                  CALL XSF$LOCCODP( CODE$, 05 ) /* Get source file code 05       */

  20696 18 006304   000077 236000 19                 LDQ     63
        18 006305   200125 756100                    STQ     @DISP+2,,AUTO
        18 006306   200006 630500                    EPPR0   CODE$,,AUTO
        18 006307   200124 450500                    STP0    @DISP+1,,AUTO
        18 006310   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 006311   000020 631400 xsym               EPPR1   B_VECTNIL+16
        18 006312   000000 701000 xent               TSX1    XSF$LOCCODP
        18 006313   006315 702000 18                 TSX2    s:20698
        18 006314   006316 710000 18                 TRA     s:20704

     1947    20697    7                   WHENALTRETURN DO;

     1948    20698    7                     EXIT DUAL_DO;

  20698 18 006315   006406 710000 18                 TRA     s:20729

     1949    20699    7                     END;
     1950    20700        /***
     1951    20701         *** If source file was accessed since last DUAL and access date is not
     1952    20702         *** the same as the destination access time, update destination access time.
     1953    20703         ***/
     1954    20704    6                  IF CODE04$->CODE04.ACCESS.TIME > CODE$->CODE05.BACKUP.TIME

  20704 18 006316   200006 470500                    LDP0    CODE$,,AUTO
        18 006317   200007 471500                    LDP1    CODE04$,,AUTO
        18 006320   000000 236100                    LDQ     0,,PR0
        18 006321   100000 116100                    CMPQ    0,,PR1
        18 006322   006406 603000 18                 TRC     s:20729

     1955    20705    7                   THEN DO;

     1956    20706    7                     MODIFIED_FIT_ = DISK_FIT_;

  20706 18 006323   200032 237100                    LDAQ    DISK_FIT_,,AUTO
        18 006324   200034 757100                    STAQ    MODIFIED_FIT_,,AUTO
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:303  

     1957    20707    7                     CODE$ = PINCRW( MODIFIED_FIT_.PTR$, SIZEW(FM$GRAN) );

  20707 18 006325   200035 236100                    LDQ     MODIFIED_FIT_+1,,AUTO
        18 006326   000005 036003                    ADLQ    5,DU
        18 006327   200006 756100                    STQ     CODE$,,AUTO

     1958    20708    7                     CALL XSF$LOCCODP( CODE$, 04 ) /* Dest. file code 04         */

  20708 18 006330   000076 236000 19                 LDQ     62
        18 006331   200125 756100                    STQ     @DISP+2,,AUTO
        18 006332   200006 630500                    EPPR0   CODE$,,AUTO
        18 006333   200124 450500                    STP0    @DISP+1,,AUTO
        18 006334   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 006335   000020 631400 xsym               EPPR1   B_VECTNIL+16
        18 006336   000000 701000 xent               TSX1    XSF$LOCCODP
        18 006337   006341 702000 18                 TSX2    s:20710
        18 006340   006342 710000 18                 TRA     s:20712

     1959    20709    8                      WHENALTRETURN DO;

     1960    20710    8                        EXIT DUAL_DO;

  20710 18 006341   006406 710000 18                 TRA     s:20729

     1961    20711    8                        END;
     1962    20712    7                     IF CODE04.ACCESS.TIME = CODE04$->CODE04.ACCESS.TIME

  20712 18 006342   200006 470500                    LDP0    CODE$,,AUTO
        18 006343   200007 471500                    LDP1    CODE04$,,AUTO
        18 006344   000000 236100                    LDQ     0,,PR0
        18 006345   100000 116100                    CMPQ    0,,PR1
        18 006346   006406 600000 18                 TZE     s:20729

     1963    20713    7                      THEN EXIT DUAL_DO;   /* Previously updated, exit           */
     1964    20714    7                     CODE04.ACCESS.TIME = CODE04$->CODE04.ACCESS.TIME;

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:304  
  20714 18 006347   100000 235100                    LDA     0,,PR1
        18 006350   000000 755100                    STA     0,,PR0

     1965    20715    7                    MODIFIED_FIT_.PTR$ = PINCRW( MODIFIED_FIT_.PTR$, SIZEW(FM$GRAN) );

  20715 18 006351   200035 236100                    LDQ     MODIFIED_FIT_+1,,AUTO
        18 006352   000005 036003                    ADLQ    5,DU
        18 006353   200035 756100                    STQ     MODIFIED_FIT_+1,,AUTO

     1966    20716    7                     MODIFIED_FIT_.BOUND = MODIFIED_FIT_.BOUND - SIZEC(FM$GRAN);

  20716 18 006354   200034 236100                    LDQ     MODIFIED_FIT_,,AUTO
        18 006355   000020 772000                    QRL     16
        18 006356   000024 136007                    SBLQ    20,DL
        18 006357   000020 736000                    QLS     16
        18 006360   200034 676100                    ERQ     MODIFIED_FIT_,,AUTO
        18 006361   000034 376000 xsym               ANQ     B_VECTNIL+28
        18 006362   200034 656100                    ERSQ    MODIFIED_FIT_,,AUTO

     1967    20717    7                     DISK_CLOSE.IFPARAM_ = MODIFIED_FIT_;

  20717 18 006363   200034 237100                    LDAQ    MODIFIED_FIT_,,AUTO
        18 006364   000026 757000 xsym               STAQ    DISK_CLOSE+22

     1968    20718    7                     DISK_CLOSE.V.DESC = M$DISK_OUT$->F$DCB.DESC;

  20718 18 006365   200061 470500                    LDP0    M$DISK_OUT$,,AUTO
        18 006366   000005 720100                    LXL0    5,,PR0
        18 006367   000033 740000 xsym               STX0    DISK_CLOSE+27

     1969    20719    7                     DISK_CLOSE.V.EFTOPER.UPDDESC# = %YES#;

  20719 18 006370   004000 236007                    LDQ     2048,DL
        18 006371   000032 256000 xsym               ORSQ    DISK_CLOSE+26

     1970    20720    7                     DISK_CLOSE.V.DISP# = %SAVE#;

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:305  
  20720 18 006372   000002 236007                    LDQ     2,DL
        18 006373   000032 552004 xsym               STBQ    DISK_CLOSE+26,'04'O

     1971    20721    7                     CALL M$CLOSE( DISK_CLOSE );

  20721 18 006374   000000 630400 xsym               EPPR0   DISK_CLOSE
        18 006375   050001 713400                    CLIMB   close
        18 006376   406000 401760                    pmme    nvectors=13

     1972    20722    7                     DISK_CLOSE.IFPARAM_ = VECTOR(NIL);

  20722 18 006377   000024 237000 19                 LDAQ    20
        18 006400   000026 757000 xsym               STAQ    DISK_CLOSE+22

     1973    20723    7                     DISK_CLOSE.V.EFTOPER = '0'B;

  20723 18 006401   000100 236000 19                 LDQ     64
        18 006402   000032 356000 xsym               ANSQ    DISK_CLOSE+26

     1974    20724    7                     FIT_UPDATE = '1'B;

  20724 18 006403   400000 236003                    LDQ     -131072,DU
        18 006404   200101 470500                    LDP0    @FIT_UPDATE,,AUTO
        18 006405   000000 756100                    STQ     0,,PR0

     1975    20725    7                     END;

     1976    20726    6                  END;

     1977    20727    5             END;

     1978    20728    4            END;

     1979    20729    3         IF F$DCB.FCD#

  20729 18 006406   200061 470500                    LDP0    M$DISK_OUT$,,AUTO
        18 006407   000031 236100                    LDQ     25,,PR0
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:306  
        18 006410   020000 316007                    CANQ    8192,DL
        18 006411   006423 600000 18                 TZE     s:20739

     1980    20730    4          THEN DO;                         /* Just close it                      */

     1981    20731    4            DISK_CLOSE.V.EFTOPER = '0'B;

  20731 18 006412   000100 236000 19                 LDQ     64
        18 006413   000032 356000 xsym               ANSQ    DISK_CLOSE+26

     1982    20732    4            DISK_CLOSE.V.DISP# = %SAVE#;

  20732 18 006414   000002 236007                    LDQ     2,DL
        18 006415   000032 552004 xsym               STBQ    DISK_CLOSE+26,'04'O

     1983    20733    4            CALL M$CLOSE( DISK_CLOSE )

  20733 18 006416   000000 630400 xsym               EPPR0   DISK_CLOSE
        18 006417   450001 713400                    CLIMB   alt,close
        18 006420   406000 401760                    pmme    nvectors=13
        18 006421   006423 702000 18                 TSX2    s:20739
        18 006422   006423 710000 18                 TRA     s:20739

     1984    20734    5             WHENALTRETURN DO;

     1985    20735    5               END;

     1986    20736    4            END;

     1987    20737    3         END;

     1988    20738
     1989    20739    2      RETURN;

  20739 18 006423   200100 221300                    LDX1  ! ANY_FILES_FOUND+2,,AUTO
        18 006424   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:307  
  20733 18 006425                       JUSTALT      null
     1990    20740
     1991    20741    2   JUSTALT: ;
     1992    20742    2      ALTRETURN;

  20742 18 006425   200100 221300                    LDX1  ! ANY_FILES_FOUND+2,,AUTO
        18 006426   000000 702211                    TSX2  ! 0,X1

     1993    20743
     1994    20744    2   CHECK_DEST_FILE: PROC;

  20744 18 006427   200104 741300       CHECK_DEST_* STX1  ! DCB#+1,,AUTO

     1995    20745
     1996    20746        /********************/
     1997    20747
     1998    20748    3      IF DEST_FILE_TYPE = %CLEANUP_FILE

  20748 18 006430   200024 235100                    LDA     DEST_FILE_TYPE,,AUTO
        18 006431   000010 115007                    CMPA    8,DL
        18 006432   006436 601000 18                 TNZ     s:20750

     1999    20749    3       THEN GOING_TO_DEST = '1'B;          /* Nothing there                      */

  20749 18 006433   400000 236003                    LDQ     -131072,DU
        18 006434   200042 756100                    STQ     GOING_TO_DEST,,AUTO
        18 006435   006447 710000 18                 TRA     s:20754

     2000    20750    3       ELSE IF DEST_FILE_TYPE = %DEL_FILE

  20750 18 006436   000001 115007                    CMPA    1,DL
        18 006437   006447 601000 18                 TNZ     s:20754

     2001    20751    3          THEN IF SOURCE_FILE_TYPE ~= %CLEANUP_FILE

  20751 18 006440   200023 236100                    LDQ     SOURCE_FILE_TYPE,,AUTO
        18 006441   000010 116007                    CMPQ    8,DL
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:308  
        18 006442   006447 600000 18                 TZE     s:20754
        18 006443   000001 116007                    CMPQ    1,DL
        18 006444   006447 600000 18                 TZE     s:20754

     2002    20752    3              AND SOURCE_FILE_TYPE ~= %DEL_FILE
     2003    20753    3             THEN GOING_TO_DEST = '1'B;

  20753 18 006445   400000 236003                    LDQ     -131072,DU
        18 006446   200042 756100                    STQ     GOING_TO_DEST,,AUTO

     2004    20754    3      RETURN;

  20754 18 006447   000001 702211                    TSX2  ! 1,X1

     2005    20755    3   END CHECK_DEST_FILE;
     2006    20756
     2007    20757    2   END FLM_FILE_TO_DISK_HANDLING;
     2008    20758
     2009    20759
     2010    20760    1   FLM_FILE_FROM_DISK_WRAPUP: PROC ALTRET;

  20760 18 006450   200100 741300       FLM_FILE_FR* STX1  ! ANY_FILES_FOUND+2,,AUTO

     2011    20761
     2012    20762        /********************/
     2013    20763
     2014    20764    2      IF DISK_OPTION.XFER

  20764 18 006451   000002 236000 xsym               LDQ     DISK_OPTION+2
        18 006452   000400 316003                    CANQ    256,DU
        18 006453   006457 600000 18                 TZE     s:20768

     2015    20765    2       THEN IF DISK_OPTION.DELETE

  20765 18 006454   040000 316003                    CANQ    16384,DU
        18 006455   006462 601000 18                 TNZ     s:20772

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:309  
     2016    20766    2          THEN ;
     2017    20767    2          ELSE RETURN;

  20767 18 006456   000001 702211                    TSX2  ! 1,X1

     2018    20768    2       ELSE IF DISK_OPTION.NOUPDATE

  20768 18 006457   000000 430000 xsym               FSZN    DISK_OPTION
        18 006460   006462 605000 18                 TPL     s:20772

     2019    20769    2          THEN RETURN;

  20769 18 006461   000001 702211                    TSX2  ! 1,X1

     2020    20770    2          ELSE ;
     2021    20771
     2022    20772    2      EFTWORD = '0'B;

  20772 18 006462   000000 220003                    LDX0    0,DU
        18 006463   000000 740000 xsym               STX0    EFTWORD

     2023    20773    2      IF CROSSED = '*' THEN EFTWORD.CROSS = '1'B;

  20773 18 006464   000000 236000 xsym               LDQ     CROSSED
        18 006465   777000 376003                    ANQ     -512,DU
        18 006466   052000 116003                    CMPQ    21504,DU
        18 006467   006472 601000 18                 TNZ     s:20774

  20773 18 006470   400000 236003                    LDQ     -131072,DU
        18 006471   000000 256000 xsym               ORSQ    EFTWORD

     2024    20774    2      IF (COMMAND = %PURGE OR COMMAND = %ARCHIVE_CMD)

  20774 18 006472   200003 470500                    LDP0    @COMMAND,,AUTO
        18 006473   000000 235100                    LDA     0,,PR0
        18 006474   000030 115007                    CMPA    24,DL
        18 006475   006500 600000 18                 TZE     s:20774+6
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:310  
        18 006476   000027 115007                    CMPA    23,DL
        18 006477   006510 601000 18                 TNZ     s:20777
        18 006500   000000 471400 xsym               LDP1    TAPE_DCBLIST$
        18 006501   100001 473500                    LDP3    1,,PR1
        18 006502   300026 222100                    LDX2    22,,PR3
        18 006503   000047 102000 17                 CMPX2   NO_LEADING_5_ZEROS+5
        18 006504   006510 601000 18                 TNZ     s:20777

     2025    20775    2        AND SUBSTR(TAPE_DCBLIST.DCB$(0)->F$DCB.RES#,0,2) = 'OD'
     2026    20776    2       THEN EFTWORDEXPIRE = SAVE_FSN;

  20776 18 006505   200040 723100                    LXL3    SAVE_FSN,,AUTO
        18 006506   000000 743000 xsym               STX3    EFTWORD
        18 006507   006515 710000 18                 TRA     s:20778

     2027    20777    2       ELSE EFTWORD.FSN = SAVE_FSN;

  20777 18 006510   200040 236100                    LDQ     SAVE_FSN,,AUTO
        18 006511   000022 736000                    QLS     18
        18 006512   000000 676000 xsym               ERQ     EFTWORD
        18 006513   037777 376003                    ANQ     16383,DU
        18 006514   000000 656000 xsym               ERSQ    EFTWORD

     2028    20778    2      DISK_CLOSE_NEXT.SN_ = VECTOR(VLP_SN);

  20778 18 006515   000102 237000 19                 LDAQ    66
        18 006516   000002 757000 xsym               STAQ    DISK_CLOSE_NEXT+2

     2029    20779    2      DISK_CLOSE_NEXT.V.EFTOPER.UPDDESC# = '1'B;

  20779 18 006517   004000 236007                    LDQ     2048,DL
        18 006520   000032 256000 xsym               ORSQ    DISK_CLOSE_NEXT+26

     2030    20780    2      DISK_CLOSE_NEXT.V.DESC = SOURCE_DCB$->F$DCB.DESC;

  20780 18 006521   200014 471500                    LDP1    SOURCE_DCB$,,AUTO
        18 006522   100005 722100                    LXL2    5,,PR1
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:311  
        18 006523   000033 742000 xsym               STX2    DISK_CLOSE_NEXT+27

     2031    20781    2      IF NOT (COMMAND = %RESTORE AND SOURCE = %DISK@)

  20781 18 006524   000000 235100                    LDA     0,,PR0
        18 006525   000011 115007                    CMPA    9,DL
        18 006526   006532 601000 18                 TNZ     s:20783
        18 006527   200070 235100                    LDA     SOURCE,,AUTO
        18 006530   000001 115007                    CMPA    1,DL
        18 006531   006553 600000 18                 TZE     s:20793

     2032    20782    3       THEN DO;

     2033    20783    4         DO CASE( DEST );

  20783 18 006532   200071 235100                    LDA     DEST,,AUTO
        18 006533   000002 115007                    CMPA    2,DL
        18 006534   006536 602005 18                 TNC     s:20783+4,AL
        18 006535   006553 710000 18                 TRA     s:20793
        18 006536   006546 710000 18                 TRA     s:20788
        18 006537   006540 710000 18                 TRA     s:20785

     2034    20784    4          CASE( %DISK@ );

     2035    20785    4            DISK_CLOSE_NEXT.V.DESC.TPB# = '0'B;

  20785 18 006540   000101 236000 19                 LDQ     65
        18 006541   000033 356000 xsym               ANSQ    DISK_CLOSE_NEXT+27

     2036    20786    4            VLP_SN.SN#(0) = SAVE_SN;

  20786 18 006542   040000 100500                    MLR     fill='040'O
        18 006543   200036 000006                    ADSC9   SAVE_SN,,AUTO            cn=0,n=6
        18 006544   002437 000006 2                  ADSC9   VLP_SN+1                 cn=0,n=6
        18 006545   006553 710000 18                 TRA     s:20793

     2037    20787    4          CASE( %TAPE@ );
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:312  

     2038    20788    4            DISK_CLOSE_NEXT.V.DESC.TPB# = '1'B;

  20788 18 006546   000040 236003                    LDQ     32,DU
        18 006547   000033 256000 xsym               ORSQ    DISK_CLOSE_NEXT+27

     2039    20789    4            VLP_SN.SN#(0) = SAVE_SN;

  20789 18 006550   040000 100500                    MLR     fill='040'O
        18 006551   200036 000006                    ADSC9   SAVE_SN,,AUTO            cn=0,n=6
        18 006552   002437 000006 2                  ADSC9   VLP_SN+1                 cn=0,n=6

     2040    20790    4          END;

     2041    20791    3         END;

     2042    20792
     2043    20793    2      IF DISK_OPTION.DELETE

  20793 18 006553   000002 236000 xsym               LDQ     DISK_OPTION+2
        18 006554   040000 316003                    CANQ    16384,DU
        18 006555   006564 601000 18                 TNZ     s:20795
        18 006556   000000 236000 xsym               LDQ     DISK_OPTION
        18 006557   100000 316003                    CANQ    32768,DU
        18 006560   006571 600000 18                 TZE     s:20797
        18 006561   200023 235100                    LDA     SOURCE_FILE_TYPE,,AUTO
        18 006562   000001 115007                    CMPA    1,DL
        18 006563   006571 601000 18                 TNZ     s:20797

     2044    20794    2        OR (DISK_OPTION.CLEANUP AND SOURCE_FILE_TYPE = %DEL_FILE)
     2045    20795    2       THEN CALL FLM_ADD_TO_DEL_LIST( '0'B ) ALTRET( JUSTALT );

  20795 18 006564   000052 236000 19                 LDQ     42
        18 006565   200105 756100                    STQ     M$TSN_USED$,,AUTO
        18 006566   012132 701000 18                 TSX1    FLM_ADD_TO_DEL_LIST
        18 006567   006702 702000 18                 TSX2    JUSTALT
        18 006570   006676 710000 18                 TRA     s:20829
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:313  

     2046    20796    3       ELSE DO;

     2047    20797    3         IF COMMAND ~= %PURGE AND COMMAND ~= %ARCHIVE_CMD

  20797 18 006571   000000 235100                    LDA     0,,PR0
        18 006572   000030 115007                    CMPA    24,DL
        18 006573   006640 600000 18                 TZE     s:20815
        18 006574   000027 115007                    CMPA    23,DL
        18 006575   006640 600000 18                 TZE     s:20815

     2048    20798    4          THEN DO;

     2049    20799    4            IF (SOURCE_DCB$->F$DCB.ORG# = %IDS# /* Don't update CODE05 on FAST save */

  20799 18 006576   100032 236100                    LDQ     26,,PR1
        18 006577   777000 376003                    ANQ     -512,DU
        18 006600   007000 116003                    CMPQ    3584,DU
        18 006601   006606 601000 18                 TNZ     s:20799+8
        18 006602   000001 236000 xsym               LDQ     DISK_OPTION+1
        18 006603   700000 376003                    ANQ     -32768,DU
        18 006604   100000 116003                    CMPQ    32768,DU
        18 006605   006624 600000 18                 TZE     s:20807
        18 006606   000011 115007                    CMPA    9,DL
        18 006607   006613 601000 18                 TNZ     s:20799+13
        18 006610   200070 236100                    LDQ     SOURCE,,AUTO
        18 006611   000001 116007                    CMPQ    1,DL
        18 006612   006624 600000 18                 TZE     s:20807
        18 006613   000010 115007                    CMPA    8,DL
        18 006614   006622 601000 18                 TNZ     s:20806
        18 006615   000000 236000 xsym               LDQ     DISK_OPTION
        18 006616   004000 316003                    CANQ    2048,DU
        18 006617   006622 600000 18                 TZE     s:20806
        18 006620   200074 234100                    SZN     FIT_ONLY_SAVED,,AUTO
        18 006621   006624 604000 18                 TMI     s:20807

     2050    20800    4              AND DISK_OPTION.IDSS = %FAST) /* or disk restore                   */
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:314  
     2051    20801    4              OR (COMMAND = %RESTORE AND SOURCE = %DISK@)
     2052    20802    4              OR (COMMAND = %BACKUP /* or ACUP type of backup where only the FIT */
     2053    20803    4              AND DISK_OPTION.ACUP         /* was saved.                         */
     2054    20804    4              AND FIT_ONLY_SAVED)
     2055    20805    4             THEN;
     2056    20806    4             ELSE DISK_CLOSE_NEXT.V.EFTOPER.BACKUP# = '1'B;

  20806 18 006622   040000 236007                    LDQ     16384,DL
        18 006623   000032 256000 xsym               ORSQ    DISK_CLOSE_NEXT+26

     2057    20807    4            IF ERR.CODE = %E$DI

  20807 18 006624   200020 236100                    LDQ     ERR,,AUTO
        18 006625   377770 376007                    ANQ     131064,DL
        18 006626   000110 116007                    CMPQ    72,DL
        18 006627   006676 601000 18                 TNZ     s:20829

     2058    20808    5             THEN DO;

     2059    20809    5               DISK_CLOSE_NEXT.V.DESC.BAD# = '1'B;

  20809 18 006630   020000 236003                    LDQ     8192,DU
        18 006631   000033 256000 xsym               ORSQ    DISK_CLOSE_NEXT+27

     2060    20810    5               IF FPT_EXIT.V.STEPCC# < %MINOR_ERROR

  20810 18 006632   000004 236000 xsym               LDQ     FPT_EXIT+4
        18 006633   777000 316003                    CANQ    -512,DU
        18 006634   006676 601000 18                 TNZ     s:20829

     2061    20811    5                THEN FPT_EXIT.V.STEPCC# = %MINOR_ERROR;

  20811 18 006635   001000 236003                    LDQ     512,DU
        18 006636   000004 552040 xsym               STBQ    FPT_EXIT+4,'40'O

     2062    20812    5               END;

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:315  
     2063    20813    4            END;

  20813 18 006637   006676 710000 18                 TRA     s:20829

     2064    20814    4          ELSE DO;

     2065    20815    4            DISK_CLOSE_NEXT.V.EFTOPER.ASTOW# = '1'B;

  20815 18 006640   020000 236007                    LDQ     8192,DL
        18 006641   000032 256000 xsym               ORSQ    DISK_CLOSE_NEXT+26

     2066    20816    4            DISK_CLOSE_NEXT.V.DESC.ARCHIVE# = '1'B;

  20816 18 006642   001000 236003                    LDQ     512,DU
        18 006643   000033 256000 xsym               ORSQ    DISK_CLOSE_NEXT+27

     2067    20817    4            IF ((NOT SOURCE_DCB$->F$DCB.DESC.ACTIVE#) OR DISK_OPTION.INACTIVATE)

  20817 18 006644   100005 236100                    LDQ     5,,PR1
        18 006645   000100 316007                    CANQ    64,DL
        18 006646   006652 600000 18                 TZE     s:20817+6
        18 006647   000000 236000 xsym               LDQ     DISK_OPTION
        18 006650   010000 316003                    CANQ    4096,DU
        18 006651   006662 600000 18                 TZE     s:20822
        18 006652   100005 236100                    LDQ     5,,PR1
        18 006653   400000 316007                    CANQ    -131072,DL
        18 006654   006662 601000 18                 TNZ     s:20822

     2068    20818    4              AND NOT SOURCE_DCB$->F$DCB.DESC.DELF#
     2069    20819    5             THEN DO;

     2070    20820    5               CALL FLM_ADD_TO_DEL_LIST( '1'B ) ALTRET( JUSTALT );

  20820 18 006655   000055 236000 19                 LDQ     45
        18 006656   200105 756100                    STQ     M$TSN_USED$,,AUTO
        18 006657   012132 701000 18                 TSX1    FLM_ADD_TO_DEL_LIST
        18 006660   006702 702000 18                 TSX2    JUSTALT
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:316  

     2071    20821    5               END;

  20821 18 006661   006664 710000 18                 TRA     s:20823

     2072    20822    4             ELSE DISK_CLOSE_NEXT.V.DESC.ACTIVE# = '0'B;

  20822 18 006662   000104 236000 19                 LDQ     68
        18 006663   000033 356000 xsym               ANSQ    DISK_CLOSE_NEXT+27

     2073    20823    4            IF SUBSTR(TAPE_DCBLIST.DCB$(0)->F$DCB.RES#,0,2) = 'OD'

  20823 18 006664   000000 470400 xsym               LDP0    TAPE_DCBLIST$
        18 006665   000001 471500                    LDP1    1,,PR0
        18 006666   100026 220100                    LDX0    22,,PR1
        18 006667   000047 100000 17                 CMPX0   NO_LEADING_5_ZEROS+5
        18 006670   006674 601000 18                 TNZ     s:20825

     2074    20824    4             THEN DISK_CLOSE_NEXT.V.DESC.ODSTOW# = '1'B; /* Archvd. to opt. disk */

  20824 18 006671   040000 236003                    LDQ     16384,DU
        18 006672   000033 256000 xsym               ORSQ    DISK_CLOSE_NEXT+27
        18 006673   006676 710000 18                 TRA     s:20829

     2075    20825    4             ELSE DISK_CLOSE_NEXT.V.DESC.ODSTOW# = '0'B; /* Archvd. to tape      */

  20825 18 006674   000105 236000 19                 LDQ     69
        18 006675   000033 356000 xsym               ANSQ    DISK_CLOSE_NEXT+27

     2076    20826    4            END;

     2077    20827    3         END;

     2078    20828
     2079    20829    2      DISK_CLOSE_NEXT.V.EXPIRE# = EFTWORDEXPIRE;

  20829 18 006676   000000 220000 xsym               LDX0    EFTWORD
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:317  
        18 006677   000034 440000 xsym               SXL0    DISK_CLOSE_NEXT+28

     2080    20830    2      RETURN;

  20830 18 006700   200100 221300                    LDX1  ! ANY_FILES_FOUND+2,,AUTO
        18 006701   000001 702211                    TSX2  ! 1,X1

  20829 18 006702                       JUSTALT      null
     2081    20831
     2082    20832    2   JUSTALT: ;
     2083    20833    2      ALTRETURN;

  20833 18 006702   200100 221300                    LDX1  ! ANY_FILES_FOUND+2,,AUTO
        18 006703   000000 702211                    TSX2  ! 0,X1

     2084    20834
     2085    20835    2   END FLM_FILE_FROM_DISK_WRAPUP;
     2086    20836
     2087    20837
     2088    20838    1   FLM_FILE_TO_DISK_WRAPUP: PROC ALTRET;

  20838 18 006704   200100 741300       FLM_FILE_TO* STX1  ! ANY_FILES_FOUND+2,,AUTO

     2089    20839
     2090    20840        /********************/
     2091    20841
     2092    20842    2      IF CROSSED ~= ' ' THEN EFTWORD.CROSS = '1'B;

  20842 18 006705   000000 236000 xsym               LDQ     CROSSED
        18 006706   777000 376003                    ANQ     -512,DU
        18 006707   040000 116003                    CMPQ    16384,DU
        18 006710   006713 600000 18                 TZE     s:20843

  20842 18 006711   400000 236003                    LDQ     -131072,DU
        18 006712   000000 256000 xsym               ORSQ    EFTWORD

     2093    20843    2      DISK_CLOSE.V.EXPIRE# = EFTWORDEXPIRE;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:318  

  20843 18 006713   000000 220000 xsym               LDX0    EFTWORD
        18 006714   000034 440000 xsym               SXL0    DISK_CLOSE+28

     2094    20844
     2095    20845    2      IF SOURCE_FILE_TYPE = %ACUP_FILE AND F$DCB.FUN# = %IN#

  20845 18 006715   200023 235100                    LDA     SOURCE_FILE_TYPE,,AUTO
        18 006716   000003 115007                    CMPA    3,DL
        18 006717   006725 601000 18                 TNZ     s:20845+8
        18 006720   200061 470500                    LDP0    M$DISK_OUT$,,AUTO
        18 006721   000032 236100                    LDQ     26,,PR0
        18 006722   000777 376003                    ANQ     511,DU
        18 006723   000002 116003                    CMPQ    2,DU
        18 006724   006734 600000 18                 TZE     s:20848
        18 006725   000003 115007                    CMPA    3,DL
        18 006726   006750 601000 18                 TNZ     s:20853
        18 006727   200061 470500                    LDP0    M$DISK_OUT$,,AUTO
        18 006730   000032 236100                    LDQ     26,,PR0
        18 006731   000777 376003                    ANQ     511,DU
        18 006732   000001 116003                    CMPQ    1,DU
        18 006733   006750 601000 18                 TNZ     s:20853

     2096    20846    2        OR SOURCE_FILE_TYPE = %ACUP_FILE AND F$DCB.FUN# = %UPDATE#
     2097    20847    3       THEN DO;                            /* Update FIT                         */

     2098    20848    3         FPARAM_.PTR$ = PINCRW( FPARAM_.PTR$, SIZEW(FM$GRAN) );

  20848 18 006734   200017 236100                    LDQ     FPARAM_+1,,AUTO
        18 006735   000005 036003                    ADLQ    5,DU
        18 006736   200017 756100                    STQ     FPARAM_+1,,AUTO

     2099    20849    3         FPARAM_.BOUND = FPARAM_.BOUND - SIZEC(FM$GRAN);

  20849 18 006737   200016 236100                    LDQ     FPARAM_,,AUTO
        18 006740   000020 772000                    QRL     16
        18 006741   000024 136007                    SBLQ    20,DL
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:319  
        18 006742   000020 736000                    QLS     16
        18 006743   200016 676100                    ERQ     FPARAM_,,AUTO
        18 006744   000034 376000 xsym               ANQ     B_VECTNIL+28
        18 006745   200016 656100                    ERSQ    FPARAM_,,AUTO

     2100    20850    3         DISK_CLOSE.IFPARAM_ = FPARAM_;

  20850 18 006746   200016 237100                    LDAQ    FPARAM_,,AUTO
        18 006747   000026 757000 xsym               STAQ    DISK_CLOSE+22

     2101    20851    3         END;

     2102    20852
     2103    20853    2      CALL M$CLOSE( DISK_CLOSE )

  20853 18 006750   000000 630400 xsym               EPPR0   DISK_CLOSE
        18 006751   450001 713400                    CLIMB   alt,close
        18 006752   406000 401760                    pmme    nvectors=13
        18 006753   006755 702000 18                 TSX2    s:20855
        18 006754   006766 710000 18                 TRA     s:20860

     2104    20854    3       WHENALTRETURN DO;

     2105    20855    3         IF SOURCE_FILE_TYPE = %CLEANUP_FILE

  20855 18 006755   200023 235100                    LDA     SOURCE_FILE_TYPE,,AUTO
        18 006756   000010 115007                    CMPA    8,DL
        18 006757   006762 601000 18                 TNZ     s:20857

     2106    20856    3          THEN SOURCE_FILE_TYPE = %DEL_FILE; /* Don't clean up if error          */

  20856 18 006760   000001 236007                    LDQ     1,DL
        18 006761   200023 756100                    STQ     SOURCE_FILE_TYPE,,AUTO

     2107    20857    3         ERR = B$TCB.ALT$->B$ALT.ERR;

  20857 18 006762   000000 470400 xsym               LDP0    B$TCB$
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:320  
        18 006763   000000 471500                    LDP1    0,,PR0
        18 006764   100102 236100                    LDQ     66,,PR1
        18 006765   200020 756100                    STQ     ERR,,AUTO

     2108    20858    3         END;

     2109    20859
     2110    20860    2      DISK_CLOSE.IFPARAM_ = VECTOR(NIL);

  20860 18 006766   000024 237000 19                 LDAQ    20
        18 006767   000026 757000 xsym               STAQ    DISK_CLOSE+22

     2111    20861    2      DISK_CLOSE.V.DESC = '0'B;

  20861 18 006770   000000 220003                    LDX0    0,DU
        18 006771   000033 740000 xsym               STX0    DISK_CLOSE+27

     2112    20862    2      DISK_CLOSE.V.EFTOPER = '0'B;

  20862 18 006772   000100 236000 19                 LDQ     64
        18 006773   000032 356000 xsym               ANSQ    DISK_CLOSE+26

     2113    20863
     2114    20864    2      IF SOURCE_FILE_TYPE = %CLEANUP_FILE

  20864 18 006774   200023 235100                    LDA     SOURCE_FILE_TYPE,,AUTO
        18 006775   000010 115007                    CMPA    8,DL
        18 006776   007027 601000 18                 TNZ     s:20881

     2115    20865    3       THEN DO;                            /* Cleanup file directory entry       */

     2116    20866    3         DISK_OPEN.V.FUN# = %IN#;

  20866 18 006777   002000 236007                    LDQ     1024,DL
        18 007000   000045 552010 xsym               STBQ    DISK_OPEN+37,'10'O

     2117    20867    3         CALL M$OPEN( DISK_OPEN )
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:321  

  20867 18 007001   000000 630400 xsym               EPPR0   DISK_OPEN
        18 007002   450000 713400                    CLIMB   alt,open
        18 007003   410400 401760                    pmme    nvectors=18
        18 007004   007023 702000 18                 TSX2    s:20877

     2118    20868    4          WHENRETURN DO;

     2119    20869    4            DISK_CLOSE.V.EFTOPER.DELFDE# = %YES#;

  20869 18 007005   002000 236007                    LDQ     1024,DL
        18 007006   000032 256000 xsym               ORSQ    DISK_CLOSE+26

     2120    20870    4            DISK_CLOSE.V.DISP# = %SAVE#;

  20870 18 007007   000002 236007                    LDQ     2,DL
        18 007010   000032 552004 xsym               STBQ    DISK_CLOSE+26,'04'O

     2121    20871    4            CALL M$CLOSE( DISK_CLOSE )     /* Got it                             */

  20871 18 007011   000000 630400 xsym               EPPR0   DISK_CLOSE
        18 007012   450001 713400                    CLIMB   alt,close
        18 007013   406000 401760                    pmme    nvectors=13
        18 007014   007016 702000 18                 TSX2    s:20874
        18 007015   007016 710000 18                 TRA     s:20874

     2122    20872    5             WHENALTRETURN DO;

     2123    20873    5               END;

     2124    20874    4            ERR.CODE = %E$NOFILE;

  20874 18 007016   200020 236100                    LDQ     ERR,,AUTO
        18 007017   000060 376000 19                 ANQ     48
        18 007020   001610 276007                    ORQ     904,DL
        18 007021   200020 756100                    STQ     ERR,,AUTO

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:322  
     2125    20875    4            END;

  20875 18 007022   007027 710000 18                 TRA     s:20881

     2126    20876    4          WHENALTRETURN DO;

     2127    20877    4            ERR = B$TCB.ALT$->B$ALT.ERR;

  20877 18 007023   000000 470400 xsym               LDP0    B$TCB$
        18 007024   000000 471500                    LDP1    0,,PR0
        18 007025   100102 236100                    LDQ     66,,PR1
        18 007026   200020 756100                    STQ     ERR,,AUTO

     2128    20878    4            END;

     2129    20879    3         END;

     2130    20880
     2131    20881    2      RETURN;

  20881 18 007027   200100 221300                    LDX1  ! ANY_FILES_FOUND+2,,AUTO
        18 007030   000001 702211                    TSX2  ! 1,X1

     2132    20882
     2133    20883    2   END FLM_FILE_TO_DISK_WRAPUP;
     2134    20884
     2135    20885
     2136    20886
     2137    20887    1   FLM_FILE_FROM_DISK_CLEANUP: PROC(TERM_ERR) ALTRET;

  20887 18 007031   200100 741300       FLM_FILE_FR* STX1  ! ANY_FILES_FOUND+2,,AUTO

     2138    20888
     2139    20889    2   DCL TERM_ERR BIT(36) ALIGNED;           /* Error when processing terminated   */
     2140    20890
     2141    20891    2   DCL TERM_ERR_SAVE BIT(36) ALIGNED AUTO;
     2142    20892
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:323  
     2143    20893        /********************/
     2144    20894
     2145    20895        /***
     2146    20896         *** Write cleanup information to tape.
     2147    20897         ***/
     2148    20898
     2149    20899    2      TERM_ERR_SAVE = TERM_ERR;

  20899 18 007032   200101 470500                    LDP0    @TERM_ERR,,AUTO
        18 007033   000000 236100                    LDQ     0,,PR0
        18 007034   200102 756100                    STQ     TERM_ERR_SAVE,,AUTO

     2150    20900    2      SAVE_SN = ' ';

  20900 18 007035   040100 100400                    MLR     fill='040'O
        18 007036   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        18 007037   200036 000006                    ADSC9   SAVE_SN,,AUTO            cn=0,n=6

     2151    20901    2      SAVE_FSN = 0;

  20901 18 007040   200040 450100                    STZ     SAVE_FSN,,AUTO

     2152    20902    2      IF NOT DISK_OPTION.XFER

  20902 18 007041   000002 236000 xsym               LDQ     DISK_OPTION+2
        18 007042   000400 316003                    CANQ    256,DU
        18 007043   007241 601000 18                 TNZ     s:20955

     2153    20903    3       THEN DO;

     2154    20904    3         CALL M$PFIL( PFIL_DELETE_LIST )

  20904 18 007044   002642 630400 2                  EPPR0   PFIL_DELETE_LIST
        18 007045   440004 713400                    CLIMB   alt,+16388
        18 007046   400000 401760                    pmme    nvectors=1
        18 007047   007241 702000 18                 TSX2    s:20955

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:324  
     2155    20905    4          WHENRETURN DO;

     2156    20906    4            ERR = '0'B;

  20906 18 007050   200020 450100                    STZ     ERR,,AUTO

     2157    20907    5            DO WHILE( NOT ERR );

  20907 18 007051   007236 710000 18                 TRA     s:20950

     2158    20908    5               CALL M$READ( READ_DELETE_LIST )

  20908 18 007052   002646 630400 2                  EPPR0   READ_DELETE_LIST
        18 007053   440000 713400                    CLIMB   alt,read
        18 007054   401400 401760                    pmme    nvectors=4
        18 007055   007234 702000 18                 TSX2    s:20948

     2159    20909    6                WHENRETURN DO;

     2160    20910    6                  EFTFILE_DCB$->F$DCB.NAME#.C = DEL_LIST_REC.NAME#.C;

  20910 18 007056   000000 470400 xsym               LDP0    EFTFILE_DCB$
        18 007057   040100 100400                    MLR     fill='040'O
        18 007060   000161 200037 2                  ADSC9   DEL_LIST_REC+5           cn=1,n=31
        18 007061   000010 200037                    ADSC9   8,,PR0                   cn=1,n=31

     2161    20911    6                  IF DEL_LIST_REC.NAME#.L = 32

  20911 18 007062   000161 236000 2                  LDQ     DEL_LIST_REC+5
        18 007063   777000 376003                    ANQ     -512,DU
        18 007064   040000 116003                    CMPQ    16384,DU
        18 007065   007071 601000 18                 TNZ     s:20913

     2162    20912    6                   THEN EFTFILE_DCB$->F$DCB.NAME#.L = 0;

  20912 18 007066   000000 236003                    LDQ     0,DU
        18 007067   000010 552140                    STBQ    8,'40'O,PR0
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:325  
        18 007070   007073 710000 18                 TRA     s:20914

     2163    20913    6                   ELSE EFTFILE_DCB$->F$DCB.NAME#.L = DEL_LIST_REC.NAME#.L;

  20913 18 007071   000161 236000 2                  LDQ     DEL_LIST_REC+5
        18 007072   000010 552140                    STBQ    8,'40'O,PR0

     2164    20914    6                  EFTFILE_DCB$->F$DCB.ACCT# = DEL_LIST_REC.ACCT;

  20914 18 007073   040100 100400                    MLR     fill='040'O
        18 007074   000157 000010 2                  ADSC9   DEL_LIST_REC+3           cn=0,n=8
        18 007075   000020 000010                    ADSC9   16,,PR0                  cn=0,n=8

     2165    20915    6                  EFTFILE_DCB$->F$DCB.PSN# = DEL_LIST_REC.VLP_SN.SN#(0);

  20915 18 007076   040100 100400                    MLR     fill='040'O
        18 007077   000155 000006 2                  ADSC9   DEL_LIST_REC+1           cn=0,n=6
        18 007100   000024 000006                    ADSC9   20,,PR0                  cn=0,n=6

     2166    20916    6                  EFTFILE_DCB$->F$DCB.DESC = '0'B;

  20916 18 007101   000000 220003                    LDX0    0,DU
        18 007102   000005 440100                    SXL0    5,,PR0

     2167    20917    6                  IF EFTFILE_DCB$->F$DCB.NAME#.C = ' '

  20917 18 007103   040000 106500                    CMPC    fill='040'O
        18 007104   000010 200037                    ADSC9   8,,PR0                   cn=1,n=31
        18 007105   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        18 007106   007151 601000 18                 TNZ     s:20927
        18 007107   000010 236100                    LDQ     8,,PR0
        18 007110   777000 316003                    CANQ    -512,DU
        18 007111   007151 601000 18                 TNZ     s:20927

     2168    20918    6                    AND EFTFILE_DCB$->F$DCB.NAME#.L = 0
     2169    20919    7                   THEN DO;           /* Write cleaned up account information    */

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:326  
     2170    20920    7                     ERR.CODE = %E$NOPROC;

  20920 18 007112   200020 236100                    LDQ     ERR,,AUTO
        18 007113   000060 376000 19                 ANQ     48
        18 007114   003520 276007                    ORQ     1872,DL
        18 007115   200020 756100                    STQ     ERR,,AUTO

     2171    20921    7                     IF NOT DEST = %DISK@

  20921 18 007116   200071 235100                    LDA     DEST,,AUTO
        18 007117   000001 115007                    CMPA    1,DL
        18 007120   007147 600000 18                 TZE     s:20925

     2172    20922    7                      THEN CALL FLS$FILE_PACKER(EFTFILE_DCB$,0,FPARAM_,SAVE_SN,

  20922 18 007121   200003 236100                    LDQ     @COMMAND,,AUTO
        18 007122   200135 756100                    STQ     @DISP+10,,AUTO
        18 007123   200074 631500                    EPPR1   FIT_ONLY_SAVED,,AUTO
        18 007124   200134 451500                    STP1    @DISP+9,,AUTO
        18 007125   200073 633500                    EPPR3   ABORT,,AUTO
        18 007126   200133 453500                    STP3    @DISP+8,,AUTO
        18 007127   200020 634500                    EPPR4   ERR,,AUTO
        18 007130   200132 454500                    STP4    @DISP+7,,AUTO
        18 007131   000050 236000 19                 LDQ     40
        18 007132   200131 756100                    STQ     @DISP+6,,AUTO
        18 007133   200040 635500                    EPPR5   SAVE_FSN,,AUTO
        18 007134   200130 455500                    STP5    @DISP+5,,AUTO
        18 007135   200036 636500                    EPPR6   SAVE_SN,,AUTO
        18 007136   200127 456500                    STP6    @DISP+4,,AUTO
        18 007137   200016 637500                    EPPR7   FPARAM_,,AUTO
        18 007140   200126 457500                    STP7    @DISP+3,,AUTO
        18 007141   000106 237000 19                 LDAQ    70
        18 007142   200124 757100                    STAQ    @DISP+1,,AUTO
        18 007143   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 007144   000047 631400 19                 EPPR1   39
        18 007145   000000 701000 xent               TSX1    FLS$FILE_PACKER
        18 007146   007420 702000 18                 TSX2    ERROR_EXIT
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:327  

     2173    20923    7                          SAVE_FSN,CROSSED,ERR,ABORT,FIT_ONLY_SAVED,COMMAND)
     2174    20924    7                          ALTRET(ERROR_EXIT);
     2175    20925    7                     ERR = '0'B;

  20925 18 007147   200020 450100                    STZ     ERR,,AUTO

     2176    20926    7                     END;

  20926 18 007150   007212 710000 18                 TRA     s:20936

     2177    20927    6                   ELSE IF NOT DEL_LIST_REC.INACTIVATE

  20927 18 007151   000203 236000 2                  LDQ     DEL_LIST_REC+23
        18 007152   400000 316007                    CANQ    -131072,DL
        18 007153   007212 601000 18                 TNZ     s:20936

     2178    20928    7                      THEN DO;             /* Write cleaned up file information  */

     2179    20929    7                        ERR.CODE = %E$NOFILE;

  20929 18 007154   200020 236100                    LDQ     ERR,,AUTO
        18 007155   000060 376000 19                 ANQ     48
        18 007156   001610 276007                    ORQ     904,DL
        18 007157   200020 756100                    STQ     ERR,,AUTO

     2180    20930    7                        IF NOT DEST = %DISK@

  20930 18 007160   200071 235100                    LDA     DEST,,AUTO
        18 007161   000001 115007                    CMPA    1,DL
        18 007162   007211 600000 18                 TZE     s:20934

     2181    20931    7                         THEN CALL FLS$FILE_PACKER(EFTFILE_DCB$,0,FPARAM_,SAVE_SN,

  20931 18 007163   200003 236100                    LDQ     @COMMAND,,AUTO
        18 007164   200135 756100                    STQ     @DISP+10,,AUTO
        18 007165   200074 631500                    EPPR1   FIT_ONLY_SAVED,,AUTO
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:328  
        18 007166   200134 451500                    STP1    @DISP+9,,AUTO
        18 007167   200073 633500                    EPPR3   ABORT,,AUTO
        18 007170   200133 453500                    STP3    @DISP+8,,AUTO
        18 007171   200020 634500                    EPPR4   ERR,,AUTO
        18 007172   200132 454500                    STP4    @DISP+7,,AUTO
        18 007173   000050 236000 19                 LDQ     40
        18 007174   200131 756100                    STQ     @DISP+6,,AUTO
        18 007175   200040 635500                    EPPR5   SAVE_FSN,,AUTO
        18 007176   200130 455500                    STP5    @DISP+5,,AUTO
        18 007177   200036 636500                    EPPR6   SAVE_SN,,AUTO
        18 007200   200127 456500                    STP6    @DISP+4,,AUTO
        18 007201   200016 637500                    EPPR7   FPARAM_,,AUTO
        18 007202   200126 457500                    STP7    @DISP+3,,AUTO
        18 007203   000106 237000 19                 LDAQ    70
        18 007204   200124 757100                    STAQ    @DISP+1,,AUTO
        18 007205   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 007206   000047 631400 19                 EPPR1   39
        18 007207   000000 701000 xent               TSX1    FLS$FILE_PACKER
        18 007210   007420 702000 18                 TSX2    ERROR_EXIT

     2182    20932    7                             SAVE_FSN,CROSSED,ERR,ABORT,FIT_ONLY_SAVED,COMMAND)
     2183    20933    7                             ALTRET(ERROR_EXIT);
     2184    20934    7                        ERR = '0'B;

  20934 18 007211   200020 450100                    STZ     ERR,,AUTO

     2185    20935    7                        END;

     2186    20936    6                  IF NOT ERR

  20936 18 007212   200020 235100                    LDA     ERR,,AUTO
        18 007213   007233 601000 18                 TNZ     s:20946

     2187    20937    7                   THEN DO;

     2188    20938    7                     DEL_LIST_REC.CSN = SAVE_SN;

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:329  
  20938 18 007214   040000 100500                    MLR     fill='040'O
        18 007215   200036 000006                    ADSC9   SAVE_SN,,AUTO            cn=0,n=6
        18 007216   000172 400006 2                  ADSC9   DEL_LIST_REC+14          cn=2,n=6

     2189    20939    7                     DEL_LIST_REC.CFSN = SAVE_FSN;

  20939 18 007217   200040 236100                    LDQ     SAVE_FSN,,AUTO
        18 007220   000202 756000 2                  STQ     DEL_LIST_REC+22

     2190    20940    7                     CALL M$WRITE( REWRITE_DELETE_LIST )

  20940 18 007221   002664 630400 2                  EPPR0   REWRITE_DELETE_LIST
        18 007222   440001 713400                    CLIMB   alt,write
        18 007223   401400 401760                    pmme    nvectors=4
        18 007224   007226 702000 18                 TSX2    s:20942
        18 007225   007233 710000 18                 TRA     s:20946

     2191    20941    8                      WHENALTRETURN DO;

     2192    20942    8                        CALL FLI$RPT_ERR;

  20942 18 007226   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 007227   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 007230   000000 011000                    NOP     0

     2193    20943    8                        ERR = '1'B;

  20943 18 007231   400000 236003                    LDQ     -131072,DU
        18 007232   200020 756100                    STQ     ERR,,AUTO

     2194    20944    8                        END;

     2195    20945    7                     END;

     2196    20946    6                  END;

  20946 18 007233   007236 710000 18                 TRA     s:20950
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:330  

     2197    20947    6                WHENALTRETURN DO;

     2198    20948    6                  ERR = '1'B;

  20948 18 007234   400000 236003                    LDQ     -131072,DU
        18 007235   200020 756100                    STQ     ERR,,AUTO

     2199    20949    6                  END;

     2200    20950    5               END;

  20950 18 007236   200020 235100                    LDA     ERR,,AUTO
        18 007237   007052 600000 18                 TZE     s:20908

     2201    20951    4            END;

  20951 18 007240   007241 710000 18                 TRA     s:20955

     2202    20952    4          WHENALTRETURN DO;

     2203    20953    4            END;

     2204    20954    3         END;

     2205    20955    2      IF DEST = %TAPE@

  20955 18 007241   200071 235100                    LDA     DEST,,AUTO
        18 007242   007272 601000 18                 TNZ     s:20973

     2206    20956    3       THEN DO;

     2207    20957    3         CALL FLM_UPDATE_RUN_INFO;

  20957 18 007243   004271 701000 18                 TSX1    FLM_UPDATE_RUN_INFO
        18 007244   000000 011000                    NOP     0

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:331  
     2208    20958    3         CALL FLS$FILE_PACKER_FIN( COMMAND )

  20958 18 007245   200003 630500                    EPPR0   @COMMAND,,AUTO
        18 007246   000017 631400 xsym               EPPR1   B_VECTNIL+15
        18 007247   000000 701000 xent               TSX1    FLS$FILE_PACKER_FIN
        18 007250   007252 702000 18                 TSX2    s:20960
        18 007251   007272 710000 18                 TRA     s:20973

     2209    20959    4          WHENALTRETURN DO; /* Serious error - Unable to write remainderof file  */

     2210    20960    4            CALL FLN$DISK_CLOSE_ALL;

  20960 18 007252   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 007253   000000 701000 xent               TSX1    FLN$DISK_CLOSE_ALL
        18 007254   000000 011000                    NOP     0

     2211    20961    4            IF COMMAND = %ARCHIVE_CMD

  20961 18 007255   200003 470500                    LDP0    @COMMAND,,AUTO
        18 007256   000000 235100                    LDA     0,,PR0
        18 007257   000027 115007                    CMPA    23,DL
        18 007260   007266 600000 18                 TZE     s:20968
        18 007261   000030 115007                    CMPA    24,DL
        18 007262   007270 601000 18                 TNZ     s:20970
        18 007263   000000 236000 xsym               LDQ     ARCHIVE$
        18 007264   000001 116000 xsym               CMPQ    B_VECTNIL+1
        18 007265   007270 600000 18                 TZE     s:20970

     2212    20962    4              OR (COMMAND = %PURGE AND ARCHIVE$ ~= ADDR(NIL))
     2213    20963    5             THEN DO;

     2214    20964        /***
     2215    20965         *** All files contained in the last block that did not get written due
     2216    20966         *** to an error, requeue for stowing (QS).
     2217    20967         ***/
     2218    20968    5               CALL FLM_REQUEUE_FILES_FOR_STOW;

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:332  
  20968 18 007266   013551 701000 18                 TSX1    FLM_REQUEUE_FILES_FOR_STOW
        18 007267   000000 011000                    NOP     0

     2219    20969    5               END;

     2220    20970    4            ALTRETURN;

  20970 18 007270   200100 221300                    LDX1  ! ANY_FILES_FOUND+2,,AUTO
        18 007271   000000 702211                    TSX2  ! 0,X1

     2221    20971    4            END;
     2222    20972    3         END;

     2223    20973    2      CALL FLN$DISK_CLOSE_ALL;

  20973 18 007272   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 007273   000000 701000 xent               TSX1    FLN$DISK_CLOSE_ALL
        18 007274   000000 011000                    NOP     0

     2224    20974
     2225    20975        /***
     2226    20976         *** Check if required. Note that files may have been found (ANY_FILES_FOUND)
     2227    20977         *** but not necessarily copied to tape due to flunking spec'd criterion.
     2228    20978         ***/
     2229    20979
     2230    20980    2      IF TAPE_OPTION.CHECK AND ANY_FILES_FOUND

  20980 18 007275   000000 234000 xsym               SZN     TAPE_OPTION
        18 007276   007347 605000 18                 TPL     s:21008
        18 007277   200076 234100                    SZN     ANY_FILES_FOUND,,AUTO
        18 007300   007347 605000 18                 TPL     s:21008

     2231    20981    3       THEN DO;

     2232    20982    3         CALL FLI$TSN_USED( 1,0 )          /* Any files copied?                  */

  20982 18 007301   000110 630400 19                 EPPR0   72
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:333  
        18 007302   000020 631400 xsym               EPPR1   B_VECTNIL+16
        18 007303   000000 701000 xent               TSX1    FLI$TSN_USED
        18 007304   007342 702000 18                 TSX2    s:20998

     2233    20983    4          WHENRETURN DO;

     2234    20984    4            CALL M$CLOSE( CLOSE_TSN_USED ) /* Yep, check them                    */

  20984 18 007305   000000 630400 xsym               EPPR0   CLOSE_TSN_USED
        18 007306   450001 713400                    CLIMB   alt,close
        18 007307   406000 401760                    pmme    nvectors=13
        18 007310   007312 702000 18                 TSX2    s:20987
        18 007311   007312 710000 18                 TRA     s:20987

     2235    20985    5             WHENALTRETURN DO;

     2236    20986    5               END;

     2237    20987    4            CALL FLI$ALLOC_BUF;       /* Free buffers...don't need all for check */

  20987 18 007312   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 007313   000000 701000 xent               TSX1    FLI$ALLOC_BUF
        18 007314   000000 011000                    NOP     0

     2238    20988    4            TAPE_OPEN.SN_ = VECTOR(ERASE); /* Indicate intrnl sn lst to FLC$CHECK */

  20988 18 007315   000016 237000 19                 LDAQ    14
        18 007316   000002 757000 xsym               STAQ    TAPE_OPEN+2

     2239    20989    4            BREAK_TASK = 'Autochecking!';

  20989 18 007317   040000 100400                    MLR     fill='040'O
        18 007320   000043 000015 17                 ADSC9   NO_LEADING_5_ZEROS+1     cn=0,n=13
        18 007321   000000 000022 xsym               ADSC9   BREAK_TASK               cn=0,n=18

     2240    20990    4            IF (ARCHIVE$ ~= ADDR(NIL) AND COMMAND = %PURGE)

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:334  
  20990 18 007322   000000 236000 xsym               LDQ     ARCHIVE$
        18 007323   000001 116000 xsym               CMPQ    B_VECTNIL+1
        18 007324   007335 600000 18                 TZE     s:20995
        18 007325   200003 470500                    LDP0    @COMMAND,,AUTO
        18 007326   000000 235100                    LDA     0,,PR0
        18 007327   000030 115007                    CMPA    24,DL
        18 007330   007335 601000 18                 TNZ     s:20995

     2241    20991    5             THEN DO;            /* Reset criteria - not required for checking   */

     2242    20992    5               DISK_CRIT.TIM = '0'B;

  20992 18 007331   000112 236000 19                 LDQ     74
        18 007332   000000 356000 xsym               ANSQ    DISK_CRIT

     2243    20993    5               DATE_CRIT.EXPD = '0'B;

  20993 18 007333   000113 236000 19                 LDQ     75
        18 007334   000000 356000 xsym               ANSQ    DATE_CRIT

     2244    20994    5               END;

     2245    20995    4            CALL FLM$MOVE( %CHECK ) ALTRET( DELALT );

  20995 18 007335   000042 630400 19                 EPPR0   34
        18 007336   000017 631400 xsym               EPPR1   B_VECTNIL+15
        18 007337   000000 701000 18                 TSX1    s:8
        18 007340   007430 702000 18                 TSX2    DELALT

     2246    20996    4            END;

  20996 18 007341   007347 710000 18                 TRA     s:21008

     2247    20997    4          WHENALTRETURN DO;

     2248    20998    4            CALL M$CLOSE( CLOSE_TSN_USED )

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:335  
  20998 18 007342   000000 630400 xsym               EPPR0   CLOSE_TSN_USED
        18 007343   450001 713400                    CLIMB   alt,close
        18 007344   406000 401760                    pmme    nvectors=13
        18 007345   007347 702000 18                 TSX2    s:21008
        18 007346   007347 710000 18                 TRA     s:21008

     2249    20999    5             WHENALTRETURN DO;

     2250    21000    5               END;

     2251    21001    4            END;

     2252    21002    3         END;

     2253    21003
     2254    21004        /***
     2255    21005         *** Now it's time to cleanup/inactivate files.
     2256    21006         ***/
     2257    21007
     2258    21008    2      IF NOT DISK_OPTION.NOUPDATE

  21008 18 007347   000000 430000 xsym               FSZN    DISK_OPTION
        18 007350   007356 604000 18                 TMI     s:21011

     2259    21009    2       THEN CALL FLM_CLEANUP(TERM_ERR_SAVE);

  21009 18 007351   200102 630500                    EPPR0   TERM_ERR_SAVE,,AUTO
        18 007352   200105 450500                    STP0    M$TSN_USED$,,AUTO
        18 007353   012215 701000 18                 TSX1    FLM_CLEANUP
        18 007354   000000 011000                    NOP     0
        18 007355   007406 710000 18                 TRA     s:21026

     2260    21010    3       ELSE DO;

     2261    21011    3         IF DISK_OPTION.XFER AND DISK_OPTION.DELETE /* Transferring unprot.?     */

  21011 18 007356   000002 236000 xsym               LDQ     DISK_OPTION+2
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:336  
        18 007357   000400 316003                    CANQ    256,DU
        18 007360   007406 600000 18                 TZE     s:21026
        18 007361   040000 316003                    CANQ    16384,DU
        18 007362   007406 600000 18                 TZE     s:21026

     2262    21012    4          THEN DO;

     2263    21013    5            DO CASE( COMMAND );

  21013 18 007363   200003 470500                    LDP0    @COMMAND,,AUTO
        18 007364   000000 235100                    LDA     0,,PR0
        18 007365   000045 135007                    SBLA    37,DL
        18 007366   000002 115007                    CMPA    2,DL
        18 007367   007371 602005 18                 TNC     s:21013+6,AL
        18 007370   007402 710000 18                 TRA     s:21022
        18 007371   007373 710000 18                 TRA     s:21019
        18 007372   007373 710000 18                 TRA     s:21019

     2264    21014    5             CASE( %OPEN_CREATE,%OPEN_EXTEND );

     2265    21015        /***
     2266    21016         *** Copying to tape. If check specified, then checking must be performed before
     2267    21017         *** files are deleted. Otherwise, o.k. to delete files now.
     2268    21018         ***/
     2269    21019    5               IF NOT CHECK_TAPE

  21019 18 007373   000000 234000 xsym               SZN     CHECK_TAPE
        18 007374   007406 604000 18                 TMI     s:21026

     2270    21020    5                THEN CALL FLM_CLEANUP(TERM_ERR_SAVE);

  21020 18 007375   200102 631500                    EPPR1   TERM_ERR_SAVE,,AUTO
        18 007376   200105 451500                    STP1    M$TSN_USED$,,AUTO
        18 007377   012215 701000 18                 TSX1    FLM_CLEANUP
        18 007400   000000 011000                    NOP     0
        18 007401   007406 710000 18                 TRA     s:21026

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:337  
     2271    21021    5             CASE( ELSE );

     2272    21022    5               CALL FLM_CLEANUP(TERM_ERR_SAVE);

  21022 18 007402   200102 631500                    EPPR1   TERM_ERR_SAVE,,AUTO
        18 007403   200105 451500                    STP1    M$TSN_USED$,,AUTO
        18 007404   012215 701000 18                 TSX1    FLM_CLEANUP
        18 007405   000000 011000                    NOP     0

     2273    21023    5             END;

     2274    21024    4            END;

     2275    21025    3         END;

     2276    21026    2      CALL M$CLOSE(CLOSE_DELETE_LIST)

  21026 18 007406   000004 630400 17                 EPPR0   CLOSE_DELETE_LIST
        18 007407   450001 713400                    CLIMB   alt,close
        18 007410   406000 401760                    pmme    nvectors=13
        18 007411   007413 702000 18                 TSX2    s:21029
        18 007412   007416 710000 18                 TRA     s:21032

     2277    21027    2       WHENALTRETURN
     2278    21028    3      DO;

     2279    21029    3         CALL FLI$RPT_ERR;

  21029 18 007413   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 007414   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 007415   000000 011000                    NOP     0

     2280    21030    3         END;

     2281    21031
     2282    21032    2      RETURN;

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:338  
  21032 18 007416   200100 221300                    LDX1  ! ANY_FILES_FOUND+2,,AUTO
        18 007417   000001 702211                    TSX2  ! 1,X1

  21021 18 007420                       ERROR_EXIT   null
     2283    21033
     2284    21034    2   ERROR_EXIT: ;
     2285    21035    2      CALL FLS$FILE_PACKER_FIN( COMMAND )

  21035 18 007420   200003 630500                    EPPR0   @COMMAND,,AUTO
        18 007421   000017 631400 xsym               EPPR1   B_VECTNIL+15
        18 007422   000000 701000 xent               TSX1    FLS$FILE_PACKER_FIN
        18 007423   007425 702000 18                 TSX2    s:21038
        18 007424   007425 710000 18                 TRA     s:21038

     2286    21036    3       WHENALTRETURN DO;

     2287    21037    3         END;

     2288    21038    2      CALL FLN$DISK_CLOSE_ALL;

  21038 18 007425   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 007426   000000 701000 xent               TSX1    FLN$DISK_CLOSE_ALL
        18 007427   000000 011000                    NOP     0

  21021 18 007430                       DELALT       null
     2289    21039
     2290    21040    2   DELALT: ;
     2291    21041    2      CALL M$CLOSE(CLOSE_DELETE_LIST)

  21041 18 007430   000004 630400 17                 EPPR0   CLOSE_DELETE_LIST
        18 007431   450001 713400                    CLIMB   alt,close
        18 007432   406000 401760                    pmme    nvectors=13
        18 007433   007435 702000 18                 TSX2    s:21044
        18 007434   007435 710000 18                 TRA     s:21044

     2292    21042    3       WHENALTRETURN DO;

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:339  
     2293    21043    3         END;

     2294    21044    2      IF NBR_DEL_FILES > 0

  21044 18 007435   200067 235100                    LDA     NBR_DEL_FILES,,AUTO
        18 007436   007443 604400 18                 TMOZ    JUSTALT

     2295    21045    2       THEN CALL FLI$RPT_ERR( E_DEL_FILES_REMAIN );

  21045 18 007437   000114 630400 19                 EPPR0   76
        18 007440   000017 631400 xsym               EPPR1   B_VECTNIL+15
        18 007441   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 007442   000000 011000                    NOP     0

  21044 18 007443                       JUSTALT      null
     2296    21046
     2297    21047    2   JUSTALT: ;
     2298    21048    2      ALTRETURN;

  21048 18 007443   200100 221300                    LDX1  ! ANY_FILES_FOUND+2,,AUTO
        18 007444   000000 702211                    TSX2  ! 0,X1

     2299    21049
     2300    21050    2   END FLM_FILE_FROM_DISK_CLEANUP;
     2301    21051
     2302    21052
     2303    21053    1   FLM_GET_DEST_ACCT_UTS: PROC;

  21053 18 007445   200102 741300       FLM_GET_DES* STX1  ! TERM_ERR_SAVE,,AUTO

     2304    21054
     2305    21055        /********************/
     2306    21056
     2307    21057    2      IF ERR.CODE = %E$FDEOF OR ERR.CODE = %E$ADEOF

  21057 18 007446   200020 236100                    LDQ     ERR,,AUTO
        18 007447   377770 376007                    ANQ     131064,DL
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:340  
        18 007450   001540 116007                    CMPQ    864,DL
        18 007451   007454 600000 18                 TZE     s:21059
        18 007452   001750 116007                    CMPQ    1000,DL
        18 007453   007474 601000 18                 TNZ     s:21068

     2308    21058    3       THEN DO;                            /* Have FIT                           */

     2309    21059    3         CODE$ = DISK_FIT_.PTR$;

  21059 18 007454   200033 236100                    LDQ     DISK_FIT_+1,,AUTO
        18 007455   200006 756100                    STQ     CODE$,,AUTO

     2310    21060    3         CALL XSF$LOCCODP( CODE$, 04 )

  21060 18 007456   000076 236000 19                 LDQ     62
        18 007457   200125 756100                    STQ     @DISP+2,,AUTO
        18 007460   200006 630500                    EPPR0   CODE$,,AUTO
        18 007461   200124 450500                    STP0    @DISP+1,,AUTO
        18 007462   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 007463   000020 631400 xsym               EPPR1   B_VECTNIL+16
        18 007464   000000 701000 xent               TSX1    XSF$LOCCODP
        18 007465   007472 702000 18                 TSX2    s:21065

     2311    21061    4          WHENRETURN DO;

     2312    21062    4            DEST_UTS = CODE04.MODIFY.TIME;

  21062 18 007466   200006 470500                    LDP0    CODE$,,AUTO
        18 007467   000001 235100                    LDA     1,,PR0
        18 007470   200056 755100                    STA     DEST_UTS,,AUTO

     2313    21063    4            END;

  21063 18 007471   007473 710000 18                 TRA     s:21067

     2314    21064    4          WHENALTRETURN DO;

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:341  
     2315    21065    4            DEST_UTS = 0;

  21065 18 007472   200056 450100                    STZ     DEST_UTS,,AUTO

     2316    21066    4            END;

     2317    21067    3         END;

  21067 18 007473   007475 710000 18                 TRA     s:21070

     2318    21068    2       ELSE DEST_UTS = 0;

  21068 18 007474   200056 450100                    STZ     DEST_UTS,,AUTO

     2319    21069
     2320    21070    2      RETURN;

  21070 18 007475   200102 221300                    LDX1  ! TERM_ERR_SAVE,,AUTO
        18 007476   000001 702211                    TSX2  ! 1,X1

     2321    21071
     2322    21072    2   END FLM_GET_DEST_ACCT_UTS;
     2323    21073
     2324    21074
     2325    21075    1   FLM_GET_SOURCE_UTS: PROC;

  21075 18 007477   200104 741300       FLM_GET_SOU* STX1  ! DCB#+1,,AUTO

     2326    21076
     2327    21077        /********************/
     2328    21078
     2329    21079    2      CODE$ = ADDR(NIL);

  21079 18 007500   000001 236000 xsym               LDQ     B_VECTNIL+1
        18 007501   200006 756100                    STQ     CODE$,,AUTO

     2330    21080    3      DO CASE( SOURCE_FILE_TYPE );
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:342  

  21080 18 007502   200023 235100                    LDA     SOURCE_FILE_TYPE,,AUTO
        18 007503   000012 115007                    CMPA    10,DL
        18 007504   007506 602005 18                 TNC     s:21080+4,AL
        18 007505   007557 710000 18                 TRA     s:21104
        18 007506   007540 710000 18                 TRA     s:21092
        18 007507   007520 710000 18                 TRA     s:21083
        18 007510   007533 710000 18                 TRA     s:21088
        18 007511   007540 710000 18                 TRA     s:21092
        18 007512   007552 710000 18                 TRA     s:21098
        18 007513   007552 710000 18                 TRA     s:21098
        18 007514   007557 710000 18                 TRA     s:21104
        18 007515   007520 710000 18                 TRA     s:21083
        18 007516   007520 710000 18                 TRA     s:21083
        18 007517   007540 710000 18                 TRA     s:21092

     2331    21081
     2332    21082    3       CASE( %DEL_FILE, %CLEANUP_ACCT, %CLEANUP_FILE );

     2333    21083    3         IF SOURCE = %DISK@

  21083 18 007520   200070 235100                    LDA     SOURCE,,AUTO
        18 007521   000001 115007                    CMPA    1,DL
        18 007522   007527 601000 18                 TNZ     s:21085

     2334    21084    3          THEN SOURCE_UTS = SOURCE_DCB$->F$DCB.EXPIRE#;

  21084 18 007523   200014 470500                    LDP0    SOURCE_DCB$,,AUTO
        18 007524   000035 235100                    LDA     29,,PR0
        18 007525   200055 755100                    STA     SOURCE_UTS,,AUTO
        18 007526   007557 710000 18                 TRA     s:21104

     2335    21085    3          ELSE SOURCE_UTS = BLK_TAG.UTS;

  21085 18 007527   000000 470400 xsym               LDP0    BLK_TAG$
        18 007530   000002 235100                    LDA     2,,PR0
        18 007531   200055 755100                    STA     SOURCE_UTS,,AUTO
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:343  
        18 007532   007557 710000 18                 TRA     s:21104

     2336    21086
     2337    21087    3       CASE( %INACTIVE_FILE );

     2338    21088    3         CODE = 06;

  21088 18 007533   000006 235007                    LDA     6,DL
        18 007534   200005 755100                    STA     CODE,,AUTO

     2339    21089    3         CODE$ = FPARAM_.PTR$;

  21089 18 007535   200017 236100                    LDQ     FPARAM_+1,,AUTO
        18 007536   200006 756100                    STQ     CODE$,,AUTO
        18 007537   007557 710000 18                 TRA     s:21104

     2340    21090
     2341    21091    3       CASE( %REG_FILE, %ACUP_FILE, %IDS_FAST_FILE );

     2342    21092    3         CODE = 04;

  21092 18 007540   000004 235007                    LDA     4,DL
        18 007541   200005 755100                    STA     CODE,,AUTO

     2343    21093    3         IF FPARAM_.PTR$ = ADDR(NIL)

  21093 18 007542   200017 236100                    LDQ     FPARAM_+1,,AUTO
        18 007543   000001 116000 xsym               CMPQ    B_VECTNIL+1
        18 007544   007547 601000 18                 TNZ     s:21095

     2344    21094    3          THEN SOURCE_UTS = 0;

  21094 18 007545   200055 450100                    STZ     SOURCE_UTS,,AUTO
        18 007546   007557 710000 18                 TRA     s:21104

     2345    21095    3          ELSE CODE$ = PINCRW( FPARAM_.PTR$, SIZEW(FM$GRAN) );

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:344  
  21095 18 007547   000005 036003                    ADLQ    5,DU
        18 007550   200006 756100                    STQ     CODE$,,AUTO
        18 007551   007557 710000 18                 TRA     s:21104

     2346    21096
     2347    21097    3       CASE( %FILE_DIR, %ACCT_DIR );

     2348    21098    3         CODE = 04;

  21098 18 007552   000004 235007                    LDA     4,DL
        18 007553   200005 755100                    STA     CODE,,AUTO

     2349    21099    3         CODE$ = FPARAM_.PTR$;

  21099 18 007554   200017 236100                    LDQ     FPARAM_+1,,AUTO
        18 007555   200006 756100                    STQ     CODE$,,AUTO

     2350    21100    3         SOURCE_UTS = 0;

  21100 18 007556   200055 450100                    STZ     SOURCE_UTS,,AUTO

     2351    21101
     2352    21102    3       END;

     2353    21103
     2354    21104    2      IF CODE$ ~= ADDR(NIL)

  21104 18 007557   200006 236100                    LDQ     CODE$,,AUTO
        18 007560   000001 116000 xsym               CMPQ    B_VECTNIL+1
        18 007561   007606 600000 18                 TZE     s:21117

     2355    21105    3       THEN DO;

     2356    21106    3         CALL XSF$LOCCODP( CODE$, CODE )

  21106 18 007562   200005 630500                    EPPR0   CODE,,AUTO
        18 007563   200125 450500                    STP0    @DISP+2,,AUTO
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:345  
        18 007564   200006 631500                    EPPR1   CODE$,,AUTO
        18 007565   200124 451500                    STP1    @DISP+1,,AUTO
        18 007566   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 007567   000020 631400 xsym               EPPR1   B_VECTNIL+16
        18 007570   000000 701000 xent               TSX1    XSF$LOCCODP
        18 007571   007605 702000 18                 TSX2    s:21113

     2357    21107    4          WHENRETURN DO;

     2358    21108    4            IF CODE = 04

  21108 18 007572   200005 235100                    LDA     CODE,,AUTO
        18 007573   000004 115007                    CMPA    4,DL
        18 007574   007601 601000 18                 TNZ     s:21110

     2359    21109    4             THEN SOURCE_UTS = CODE04.MODIFY.TIME;

  21109 18 007575   200006 470500                    LDP0    CODE$,,AUTO
        18 007576   000001 235100                    LDA     1,,PR0
        18 007577   200055 755100                    STA     SOURCE_UTS,,AUTO
        18 007600   007604 710000 18                 TRA     s:21111

     2360    21110    4             ELSE SOURCE_UTS = CODE06.STOW.TIME;

  21110 18 007601   200006 470500                    LDP0    CODE$,,AUTO
        18 007602   000000 235100                    LDA     0,,PR0
        18 007603   200055 755100                    STA     SOURCE_UTS,,AUTO

     2361    21111    4            END;

  21111 18 007604   007606 710000 18                 TRA     s:21117

     2362    21112    4          WHENALTRETURN DO;

     2363    21113    4            SOURCE_UTS = 0;

  21113 18 007605   200055 450100                    STZ     SOURCE_UTS,,AUTO
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:346  

     2364    21114    4            END;

     2365    21115    3         END;

     2366    21116
     2367    21117    2      TAPE_CODE04$ = CODE$;

  21117 18 007606   200006 236100                    LDQ     CODE$,,AUTO
        18 007607   200011 756100                    STQ     TAPE_CODE04$,,AUTO

     2368    21118    2      RETURN;

  21118 18 007610   200104 221300                    LDX1  ! DCB#+1,,AUTO
        18 007611   000001 702211                    TSX2  ! 1,X1

     2369    21119
     2370    21120    2   END FLM_GET_SOURCE_UTS;
     2371    21121
     2372    21122
     2373    21123    1   FLM_GET_DEST_FILE_UTS: PROC;

  21123 18 007612   200104 741300       FLM_GET_DES* STX1  ! DCB#+1,,AUTO

     2374    21124
     2375    21125        /********************/
     2376    21126
     2377    21127    2      DISK_OPEN.V.FUN# = %IN#;

  21127 18 007613   002000 236007                    LDQ     1024,DL
        18 007614   000045 552010 xsym               STBQ    DISK_OPEN+37,'10'O

     2378    21128    2      DISK_OPEN.IFPARAM_ = VECTOR(NIL);

  21128 18 007615   000024 237000 19                 LDAQ    20
        18 007616   000026 757000 xsym               STAQ    DISK_OPEN+22

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:347  
     2379    21129    2      DISK_OPEN.FPARAM_ = DISK_FIT_;

  21129 18 007617   200032 237100                    LDAQ    DISK_FIT_,,AUTO
        18 007620   000030 757000 xsym               STAQ    DISK_OPEN+24

     2380    21130    2      DISK_CODE06$ = ADDR(NIL);

  21130 18 007621   000001 236000 xsym               LDQ     B_VECTNIL+1
        18 007622   200010 756100                    STQ     DISK_CODE06$,,AUTO

     2381    21131    2      DISK_CODE04$ = ADDR(NIL);

  21131 18 007623   200012 756100                    STQ     DISK_CODE04$,,AUTO

     2382    21132    2      DEST_FILE_TYPE = %CLEANUP_FILE;

  21132 18 007624   000010 235007                    LDA     8,DL
        18 007625   200024 755100                    STA     DEST_FILE_TYPE,,AUTO

     2383    21133
     2384    21134    2      CALL M$OPEN( DISK_OPEN )

  21134 18 007626   000000 630400 xsym               EPPR0   DISK_OPEN
        18 007627   450000 713400                    CLIMB   alt,open
        18 007630   410400 401760                    pmme    nvectors=18
        18 007631   007775 702000 18                 TSX2    s:21195

     2385    21135    3       WHENRETURN DO;                      /* File may exist                     */

     2386    21136    3         DISK_DESC_SAVE = F$DCB.DESC;

  21136 18 007632   200061 470500                    LDP0    M$DISK_OUT$,,AUTO
        18 007633   000005 720100                    LXL0    5,,PR0
        18 007634   000000 740000 xsym               STX0    DISK_DESC_SAVE

     2387    21137    3         IF TO_DISK_NAME = F$DCB.NAME#

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:348  
  21137 18 007635   000100 106400                    CMPC    fill='000'O
        18 007636   000234 000040 2                  ADSC9   TO_DISK_NAME             cn=0,n=32
        18 007637   000010 000040                    ADSC9   8,,PR0                   cn=0,n=32
        18 007640   007762 601000 18                 TNZ     s:21186
        18 007641   000224 237000 2                  LDAQ    TO_DISK_ACCT
        18 007642   000020 117100                    CMPAQ   16,,PR0
        18 007643   007762 601000 18                 TNZ     s:21186

     2388    21138    3           AND TO_DISK_ACCT.ACCT# = F$DCB.ACCT#
     2389    21139    4          THEN DO;                         /* File (may be deleted) exists       */

     2390    21140    4            IF F$DCB.DESC.DELF#

  21140 18 007644   000005 236100                    LDQ     5,,PR0
        18 007645   400000 316007                    CANQ    -131072,DL
        18 007646   007702 600000 18                 TZE     s:21159

     2391    21141    4             THEN IF F$DCB.DESC.ARCHIVE#

  21141 18 007647   001000 316007                    CANQ    512,DL
        18 007650   007675 600000 18                 TZE     s:21155

     2392    21142    5                THEN DO;                   /* Inactively archived                */

     2393    21143    5                  DEST_FILE_TYPE = %INACTIVE_FILE;

  21143 18 007651   000002 235007                    LDA     2,DL
        18 007652   200024 755100                    STA     DEST_FILE_TYPE,,AUTO

     2394    21144    5                  CODE$ = DISK_FIT_.PTR$;

  21144 18 007653   200033 236100                    LDQ     DISK_FIT_+1,,AUTO
        18 007654   200006 756100                    STQ     CODE$,,AUTO

     2395    21145    5                  CALL XSF$LOCCODP( CODE$, 06 )

  21145 18 007655   000073 236000 19                 LDQ     59
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:349  
        18 007656   200125 756100                    STQ     @DISP+2,,AUTO
        18 007657   200006 631500                    EPPR1   CODE$,,AUTO
        18 007660   200124 451500                    STP1    @DISP+1,,AUTO
        18 007661   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 007662   000020 631400 xsym               EPPR1   B_VECTNIL+16
        18 007663   000000 701000 xent               TSX1    XSF$LOCCODP
        18 007664   007673 702000 18                 TSX2    s:21151

     2396    21146    6                   WHENRETURN DO;

     2397    21147    6                     DEST_UTS = CODE06.STOW.TIME;

  21147 18 007665   200006 470500                    LDP0    CODE$,,AUTO
        18 007666   000000 235100                    LDA     0,,PR0
        18 007667   200056 755100                    STA     DEST_UTS,,AUTO

     2398    21148    6                     DISK_CODE06$ = CODE$;

  21148 18 007670   200006 236100                    LDQ     CODE$,,AUTO
        18 007671   200010 756100                    STQ     DISK_CODE06$,,AUTO

     2399    21149    6                     END;

  21149 18 007672   007674 710000 18                 TRA     s:21153

     2400    21150    6                   WHENALTRETURN DO;

     2401    21151    6                     DEST_UTS = 0;

  21151 18 007673   200056 450100                    STZ     DEST_UTS,,AUTO

     2402    21152    6                     END;

     2403    21153    5                  END;

  21153 18 007674   007774 710000 18                 TRA     s:21193

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:350  
     2404    21154    5                ELSE DO;                   /* Deleted                            */

     2405    21155    5                  DEST_FILE_TYPE = %DEL_FILE;

  21155 18 007675   000001 235007                    LDA     1,DL
        18 007676   200024 755100                    STA     DEST_FILE_TYPE,,AUTO

     2406    21156    5                  DEST_UTS = F$DCB.EXPIRE#;

  21156 18 007677   000035 235100                    LDA     29,,PR0
        18 007700   200056 755100                    STA     DEST_UTS,,AUTO

     2407    21157    5                  END;

  21157 18 007701   007774 710000 18                 TRA     s:21193

     2408    21158    5             ELSE DO;                      /* Ordinary file                      */

     2409    21159    5               DEST_FILE_TYPE = %REG_FILE;

  21159 18 007702   200024 450100                    STZ     DEST_FILE_TYPE,,AUTO

     2410    21160    5               IF COMMAND = %RETRIEVE

  21160 18 007703   200003 471500                    LDP1    @COMMAND,,AUTO
        18 007704   100000 235100                    LDA     0,,PR1
        18 007705   000034 115007                    CMPA    28,DL
        18 007706   007712 601000 18                 TNZ     s:21162

     2411    21161    5                THEN CODE = 06;

  21161 18 007707   000006 235007                    LDA     6,DL
        18 007710   200005 755100                    STA     CODE,,AUTO
        18 007711   007714 710000 18                 TRA     s:21163

     2412    21162    5                ELSE CODE = 04;

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:351  
  21162 18 007712   000004 235007                    LDA     4,DL
        18 007713   200005 755100                    STA     CODE,,AUTO

     2413    21163    5               CODE$ = PINCRW( DISK_FIT_.PTR$, SIZEW(FM$GRAN) );

  21163 18 007714   200033 236100                    LDQ     DISK_FIT_+1,,AUTO
        18 007715   000005 036003                    ADLQ    5,DU
        18 007716   200006 756100                    STQ     CODE$,,AUTO

     2414    21164    5               CALL XSF$LOCCODP( CODE$, CODE )

  21164 18 007717   200005 633500                    EPPR3   CODE,,AUTO
        18 007720   200125 453500                    STP3    @DISP+2,,AUTO
        18 007721   200006 634500                    EPPR4   CODE$,,AUTO
        18 007722   200124 454500                    STP4    @DISP+1,,AUTO
        18 007723   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 007724   000020 631400 xsym               EPPR1   B_VECTNIL+16
        18 007725   000000 701000 xent               TSX1    XSF$LOCCODP
        18 007726   007760 702000 18                 TSX2    s:21181

     2415    21165    6                WHENRETURN DO;

     2416    21166    6                  IF CODE = 04

  21166 18 007727   200005 235100                    LDA     CODE,,AUTO
        18 007730   000004 115007                    CMPA    4,DL
        18 007731   007752 601000 18                 TNZ     s:21176

     2417    21167    7                   THEN DO;

     2418    21168    7                     DEST_UTS = CODE04.MODIFY.TIME;

  21168 18 007732   200006 470500                    LDP0    CODE$,,AUTO
        18 007733   000001 235100                    LDA     1,,PR0
        18 007734   200056 755100                    STA     DEST_UTS,,AUTO

     2419    21169    7                     DISK_CODE04$ = CODE$;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:352  

  21169 18 007735   200006 236100                    LDQ     CODE$,,AUTO
        18 007736   200012 756100                    STQ     DISK_CODE04$,,AUTO

     2420    21170    7                     IF CODE04.CREATOR.ACCT = ' ' AND CODE04.CREATOR.NAME =
             21170                              '!EFT_NO_DATA'

  21170 18 007737   040000 106500                    CMPC    fill='040'O
        18 007740   000003 000010                    ADSC9   3,,PR0                   cn=0,n=8
        18 007741   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        18 007742   007757 601000 18                 TNZ     s:21179
        18 007743   040000 106500                    CMPC    fill='040'O
        18 007744   000005 000014                    ADSC9   5,,PR0                   cn=0,n=12
        18 007745   000050 000014 17                 ADSC9   NO_LEADING_5_ZEROS+6     cn=0,n=12
        18 007746   007757 601000 18                 TNZ     s:21179

     2421    21171    8                      THEN DO;             /* FIT-only file on disk              */

     2422    21172    8                        DEST_FILE_TYPE = %ACUP_FILE;

  21172 18 007747   000003 235007                    LDA     3,DL
        18 007750   200024 755100                    STA     DEST_FILE_TYPE,,AUTO

     2423    21173    8                        END;

     2424    21174    7                     END;

  21174 18 007751   007757 710000 18                 TRA     s:21179

     2425    21175    7                   ELSE DO;

     2426    21176    7                     DEST_UTS = CODE06.STOW.TIME;

  21176 18 007752   200006 470500                    LDP0    CODE$,,AUTO
        18 007753   000000 235100                    LDA     0,,PR0
        18 007754   200056 755100                    STA     DEST_UTS,,AUTO

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:353  
     2427    21177    7                     DISK_CODE06$ = CODE$;

  21177 18 007755   200006 236100                    LDQ     CODE$,,AUTO
        18 007756   200010 756100                    STQ     DISK_CODE06$,,AUTO

     2428    21178    7                     END;

     2429    21179    6                  END;

  21179 18 007757   007761 710000 18                 TRA     s:21184

     2430    21180    6                WHENALTRETURN DO;

     2431    21181    6                  DEST_UTS = 0;

  21181 18 007760   200056 450100                    STZ     DEST_UTS,,AUTO

     2432    21182    6                  END;

     2433    21183    5               END;

     2434    21184    4            END;

  21184 18 007761   007774 710000 18                 TRA     s:21193

     2435    21185    4          ELSE DO;

     2436    21186    4            DEST_UTS = 0;

  21186 18 007762   200056 450100                    STZ     DEST_UTS,,AUTO

     2437    21187    4            DISK_CLOSE.V.EFTOPER = '0'B;

  21187 18 007763   000100 236000 19                 LDQ     64
        18 007764   000032 356000 xsym               ANSQ    DISK_CLOSE+26

     2438    21188    4            DISK_CLOSE.V.DISP# = %SAVE#;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:354  

  21188 18 007765   000002 236007                    LDQ     2,DL
        18 007766   000032 552004 xsym               STBQ    DISK_CLOSE+26,'04'O

     2439    21189    4            CALL M$CLOSE( DISK_CLOSE )

  21189 18 007767   000000 630400 xsym               EPPR0   DISK_CLOSE
        18 007770   450001 713400                    CLIMB   alt,close
        18 007771   406000 401760                    pmme    nvectors=13
        18 007772   007774 702000 18                 TSX2    s:21193
        18 007773   007774 710000 18                 TRA     s:21193

     2440    21190    5             WHENALTRETURN DO;

     2441    21191    5               END;

     2442    21192    4            END;

     2443    21193    3         END;

  21193 18 007774   007776 710000 18                 TRA     s:21198

     2444    21194    3       WHENALTRETURN DO;

     2445    21195    3         DEST_UTS = 0;

  21195 18 007775   200056 450100                    STZ     DEST_UTS,,AUTO

     2446    21196    3         END;

     2447    21197
     2448    21198    2      IF TAPE_OPTION.PROTTYPE = %INCREMENTAL

  21198 18 007776   000001 236000 xsym               LDQ     TAPE_OPTION+1
        18 007777   700000 376003                    ANQ     -32768,DU
        18 010000   300000 116003                    CMPQ    98304,DU
        18 010001   010113 601000 18                 TNZ     s:21241
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:355  

     2449    21199    3       THEN DO;

     2450    21200    3         IF SOURCE_FILE_TYPE = %ACUP_FILE OR DEST_FILE_TYPE = %ACUP_FILE

  21200 18 010002   200023 235100                    LDA     SOURCE_FILE_TYPE,,AUTO
        18 010003   000003 115007                    CMPA    3,DL
        18 010004   010010 600000 18                 TZE     s:21202
        18 010005   200024 235100                    LDA     DEST_FILE_TYPE,,AUTO
        18 010006   000003 115007                    CMPA    3,DL
        18 010007   010035 601000 18                 TNZ     s:21210

     2451    21201    4          THEN DO;               /* Only bring back FIT if newer than old FIT    */

     2452    21202    4            IF DISK_CODE04$ = ADDR(NIL) OR TAPE_CODE04$ = ADDR(NIL)

  21202 18 010010   200012 236100                    LDQ     DISK_CODE04$,,AUTO
        18 010011   000001 116000 xsym               CMPQ    B_VECTNIL+1
        18 010012   010035 600000 18                 TZE     s:21210
        18 010013   200011 236100                    LDQ     TAPE_CODE04$,,AUTO
        18 010014   000001 116000 xsym               CMPQ    B_VECTNIL+1
        18 010015   010035 600000 18                 TZE     s:21210

     2453    21203    4             THEN ;
     2454    21204    4             ELSE IF TAPE_CODE04$->CODE04.MODIFY.TIME > DISK_CODE04$->CODE04.MODIFY.
             21204                      TIME

  21204 18 010016   200012 470500                    LDP0    DISK_CODE04$,,AUTO
        18 010017   200011 471500                    LDP1    TAPE_CODE04$,,AUTO
        18 010020   000001 236100                    LDQ     1,,PR0
        18 010021   100001 116100                    CMPQ    1,,PR1
        18 010022   010027 603000 18                 TRC     s:21206

     2455    21205    4                THEN SOURCE_UTS = DEST_UTS + 1;

  21205 18 010023   200056 235100                    LDA     DEST_UTS,,AUTO
        18 010024   000001 035007                    ADLA    1,DL
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:356  
        18 010025   200055 755100                    STA     SOURCE_UTS,,AUTO
        18 010026   010035 710000 18                 TRA     s:21210

     2456    21206    4               ELSE IF TAPE_CODE04$->CODE04.ACCESS.TIME > DISK_CODE04$->CODE04.ACCESS.
             21206                         TIME

  21206 18 010027   000000 236100                    LDQ     0,,PR0
        18 010030   100000 116100                    CMPQ    0,,PR1
        18 010031   010035 603000 18                 TRC     s:21210

     2457    21207    4                   THEN SOURCE_UTS = DEST_UTS + 1;

  21207 18 010032   200056 235100                    LDA     DEST_UTS,,AUTO
        18 010033   000001 035007                    ADLA    1,DL
        18 010034   200055 755100                    STA     SOURCE_UTS,,AUTO

     2458    21208    4            END;

     2459    21209
     2460    21210    3         IF SOURCE_FILE_TYPE = %ACUP_FILE

  21210 18 010035   200023 235100                    LDA     SOURCE_FILE_TYPE,,AUTO
        18 010036   000003 115007                    CMPA    3,DL
        18 010037   010065 601000 18                 TNZ     s:21227

     2461    21211    4          THEN DO;

     2462    21212    4            IF SOURCE_UTS >= DEST_UTS

  21212 18 010040   200055 236100                    LDQ     SOURCE_UTS,,AUTO
        18 010041   200056 116100                    CMPQ    DEST_UTS,,AUTO
        18 010042   010134 602000 18                 TNC     s:21250

     2463    21213    5             THEN DO;                      /* Bring back file                    */

     2464    21214    5               IF DEST_FILE_TYPE ~= %REG_FILE

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:357  
  21214 18 010043   200024 235100                    LDA     DEST_FILE_TYPE,,AUTO
        18 010044   010062 600000 18                 TZE     s:21222

     2465    21215    6                THEN DO;         /* File doesn't exist...bring back FIT only     */

     2466    21216    6                  DISK_OPEN.V.FUN# = %CREATE#;

  21216 18 010045   003000 236007                    LDQ     1536,DL
        18 010046   000045 552010 xsym               STBQ    DISK_OPEN+37,'10'O

     2467    21217    6                  TAPE_CODE04$->CODE04.CREATOR.ACCT = ' ';

  21217 18 010047   200011 470500                    LDP0    TAPE_CODE04$,,AUTO
        18 010050   000035 235000 xsym               LDA     B_VECTNIL+29
        18 010051   000035 236000 xsym               LDQ     B_VECTNIL+29
        18 010052   000003 755100                    STA     3,,PR0
        18 010053   000004 756100                    STQ     4,,PR0

     2468    21218    6                  TAPE_CODE04$->CODE04.CREATOR.NAME = '!EFT_NO_DATA';

  21218 18 010054   040100 100400                    MLR     fill='040'O
        18 010055   000050 000014 17                 ADSC9   NO_LEADING_5_ZEROS+6     cn=0,n=12
        18 010056   000005 000014                    ADSC9   5,,PR0                   cn=0,n=12

     2469    21219    6                  FIT_ONLY_RSTRD = '1'B;

  21219 18 010057   400000 236003                    LDQ     -131072,DU
        18 010060   200075 756100                    STQ     FIT_ONLY_RSTRD,,AUTO

     2470    21220    6                  END;

  21220 18 010061   010134 710000 18                 TRA     s:21250

     2471    21221    6                ELSE DO;

     2472    21222    6                  DISK_OPEN.V.FUN# = %IN#;

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:358  
  21222 18 010062   002000 236007                    LDQ     1024,DL
        18 010063   000045 552010 xsym               STBQ    DISK_OPEN+37,'10'O

     2473    21223    6                  END;

     2474    21224    5               END;

     2475    21225    4            END;

  21225 18 010064   010134 710000 18                 TRA     s:21250

     2476    21226    4          ELSE DO;

     2477    21227    4            DISK_OPEN.V.FUN# = %CREATE#;

  21227 18 010065   003000 236007                    LDQ     1536,DL
        18 010066   000045 552010 xsym               STBQ    DISK_OPEN+37,'10'O

     2478    21228    4            IF DEST_FILE_TYPE = %ACUP_FILE

  21228 18 010067   200024 235100                    LDA     DEST_FILE_TYPE,,AUTO
        18 010070   000003 115007                    CMPA    3,DL
        18 010071   010134 601000 18                 TNZ     s:21250

     2479    21229    5             THEN DO;                      /* But bring back data granules       */

     2480    21230              /*N* We could figure out here if CODE03.UGRANS from the disk file
     2481    21231                   matches CODE03.UGRANS from the tape file.  If not, there'll
     2482    21232                   be trouble in Dixie tonight */
     2483    21233    5               FPARAM_ = DISK_FIT_;        /* Use existing file's FIT            */

  21233 18 010072   200032 237100                    LDAQ    DISK_FIT_,,AUTO
        18 010073   200016 757100                    STAQ    FPARAM_,,AUTO

     2484    21234    5               IF TAPE_CODE04$ ~= ADDR(NIL) AND DISK_CODE04$ ~= ADDR(NIL)

  21234 18 010074   200011 236100                    LDQ     TAPE_CODE04$,,AUTO
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:359  
        18 010075   000001 116000 xsym               CMPQ    B_VECTNIL+1
        18 010076   010107 600000 18                 TZE     s:21236
        18 010077   200012 236100                    LDQ     DISK_CODE04$,,AUTO
        18 010100   000001 116000 xsym               CMPQ    B_VECTNIL+1
        18 010101   010107 600000 18                 TZE     s:21236

     2485    21235    5                THEN DISK_CODE04$->CODE04.CREATOR = TAPE_CODE04$->CODE04.CREATOR;

  21235 18 010102   200011 470500                    LDP0    TAPE_CODE04$,,AUTO
        18 010103   200012 471500                    LDP1    DISK_CODE04$,,AUTO
        18 010104   000100 100500                    MLR     fill='000'O
        18 010105   000003 000024                    ADSC9   3,,PR0                   cn=0,n=20
        18 010106   100003 000024                    ADSC9   3,,PR1                   cn=0,n=20

     2486    21236    5               SOURCE_UTS = DEST_UTS + 1;

  21236 18 010107   200056 235100                    LDA     DEST_UTS,,AUTO
        18 010110   000001 035007                    ADLA    1,DL
        18 010111   200055 755100                    STA     SOURCE_UTS,,AUTO

     2487    21237    5               END;

     2488    21238    4            END;

     2489    21239    3         END;

  21239 18 010112   010134 710000 18                 TRA     s:21250

     2490    21240    3       ELSE DO;

     2491    21241    3         DISK_OPEN.V.FUN# = %CREATE#;

  21241 18 010113   003000 236007                    LDQ     1536,DL
        18 010114   000045 552010 xsym               STBQ    DISK_OPEN+37,'10'O

     2492    21242    3         IF SOURCE_FILE_TYPE = %ACUP_FILE AND DEST_FILE_TYPE ~= %REG_FILE

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:360  
  21242 18 010115   200023 235100                    LDA     SOURCE_FILE_TYPE,,AUTO
        18 010116   000003 115007                    CMPA    3,DL
        18 010117   010134 601000 18                 TNZ     s:21250
        18 010120   200024 235100                    LDA     DEST_FILE_TYPE,,AUTO
        18 010121   010134 600000 18                 TZE     s:21250

     2493    21243    4          THEN DO;

     2494    21244    4            TAPE_CODE04$->CODE04.CREATOR.ACCT = ' ';

  21244 18 010122   200011 470500                    LDP0    TAPE_CODE04$,,AUTO
        18 010123   000035 235000 xsym               LDA     B_VECTNIL+29
        18 010124   000035 236000 xsym               LDQ     B_VECTNIL+29
        18 010125   000003 755100                    STA     3,,PR0
        18 010126   000004 756100                    STQ     4,,PR0

     2495    21245    4            TAPE_CODE04$->CODE04.CREATOR.NAME = '!EFT_NO_DATA';

  21245 18 010127   040100 100400                    MLR     fill='040'O
        18 010130   000050 000014 17                 ADSC9   NO_LEADING_5_ZEROS+6     cn=0,n=12
        18 010131   000005 000014                    ADSC9   5,,PR0                   cn=0,n=12

     2496    21246    4            FIT_ONLY_RSTRD = '1'B;

  21246 18 010132   400000 236003                    LDQ     -131072,DU
        18 010133   200075 756100                    STQ     FIT_ONLY_RSTRD,,AUTO

     2497    21247    4            END;

     2498    21248    3         END;

     2499    21249
     2500    21250    2      IF DISK_OPEN.V.FUN# = %CREATE#

  21250 18 010134   000045 236000 xsym               LDQ     DISK_OPEN+37
        18 010135   777000 376007                    ANQ     -512,DL
        18 010136   003000 116007                    CMPQ    1536,DL
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:361  
        18 010137   010142 601000 18                 TNZ     s:21252

     2501    21251    2       THEN DISK_OPEN.FPARAM_ = VECTOR(NIL);

  21251 18 010140   000024 237000 19                 LDAQ    20
        18 010141   000030 757000 xsym               STAQ    DISK_OPEN+24

     2502    21252    2      RETURN;

  21252 18 010142   200104 221300                    LDX1  ! DCB#+1,,AUTO
        18 010143   000001 702211                    TSX2  ! 1,X1

     2503    21253
     2504    21254    2   END FLM_GET_DEST_FILE_UTS;
     2505    21255
     2506    21256
     2507    21257    1   FLM_DELETE_TO_DISK_FILE: PROC;

  21257 18 010144   200104 741300       FLM_DELETE_* STX1  ! DCB#+1,,AUTO

     2508    21258        /*F*  NAME: FLM_DELETE_TO_DISK_FILE
     2509    21259              PURPOSE: Delete deleted and inactively archived file directory
     2510    21260                 entries.  Unarchive actively archived files to permit them
     2511    21261                 to be deleted.
     2512    21262        */
     2513    21263
     2514    21264        /********************/
     2515    21265
     2516    21266    2      IF NOT F$DCB.FCD#

  21266 18 010145   200061 470500                    LDP0    M$DISK_OUT$,,AUTO
        18 010146   000031 236100                    LDQ     25,,PR0
        18 010147   020000 316007                    CANQ    8192,DL
        18 010150   010152 601000 18                 TNZ     s:21269

     2517    21267    2       THEN RETURN;                        /* Didn't exist                       */

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:362  
  21267 18 010151   000001 702211                    TSX2  ! 1,X1

     2518    21268
     2519    21269    2      DISK_CLOSE.V.EFTOPER = '0'B;

  21269 18 010152   000100 236000 19                 LDQ     64
        18 010153   000032 356000 xsym               ANSQ    DISK_CLOSE+26

     2520    21270    2      DISK_CLOSE.V.DESC.TERMINATE# = %NO#;

  21270 18 010154   000115 236000 19                 LDQ     77
        18 010155   000033 356000 xsym               ANSQ    DISK_CLOSE+27

     2521    21271    2      IF F$DCB.DESC.DELF#

  21271 18 010156   000005 236100                    LDQ     5,,PR0
        18 010157   400000 316007                    CANQ    -131072,DL
        18 010160   010164 600000 18                 TZE     s:21274

     2522    21272    2       THEN DISK_CLOSE.V.EFTOPER.DELFDE# = %YES#;

  21272 18 010161   002000 236007                    LDQ     1024,DL
        18 010162   000032 256000 xsym               ORSQ    DISK_CLOSE+26
        18 010163   010243 710000 18                 TRA     s:21303

     2523    21273    3       ELSE DO;

     2524    21274    3         IF F$DCB.DESC.ARCHIVE#

  21274 18 010164   001000 316007                    CANQ    512,DL
        18 010165   010173 600000 18                 TZE     s:21279

     2525    21275    4          THEN DO;

     2526    21276    4            DISK_CLOSE.V.EFTOPER.UPDDESC# = %YES#;

  21276 18 010166   004000 236007                    LDQ     2048,DL
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:363  
        18 010167   000032 256000 xsym               ORSQ    DISK_CLOSE+26

     2527    21277    4            DISK_CLOSE.V.DESC.TERMINATE# = %YES#;

  21277 18 010170   000020 236003                    LDQ     16,DU
        18 010171   000033 256000 xsym               ORSQ    DISK_CLOSE+27

     2528    21278    4            END;

  21278 18 010172   010243 710000 18                 TRA     s:21303

     2529    21279    3          ELSE IF DISK_DEST_EXIST = %NEWFILE#

  21279 18 010173   000000 235000 xsym               LDA     DISK_DEST_EXIST
        18 010174   000003 115007                    CMPA    3,DL
        18 010175   010243 601000 18                 TNZ     s:21303

     2530    21280    4             THEN DO;

     2531    21281    5               DO CASE( SOURCE_FILE_TYPE );

  21281 18 010176   200023 235100                    LDA     SOURCE_FILE_TYPE,,AUTO
        18 010177   000012 115007                    CMPA    10,DL
        18 010200   010202 602005 18                 TNC     s:21281+4,AL
        18 010201   010241 710000 18                 TRA     s:21294
        18 010202   010241 710000 18                 TRA     s:21294
        18 010203   010241 710000 18                 TRA     s:21294
        18 010204   010241 710000 18                 TRA     s:21294
        18 010205   010214 710000 18                 TRA     s:21283
        18 010206   010241 710000 18                 TRA     s:21294
        18 010207   010241 710000 18                 TRA     s:21294
        18 010210   010241 710000 18                 TRA     s:21294
        18 010211   010241 710000 18                 TRA     s:21294
        18 010212   010241 710000 18                 TRA     s:21294
        18 010213   010221 710000 18                 TRA     s:21286

     2532    21282    5                CASE( %ACUP_FILE );
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:364  

     2533    21283    5                  DISK_CLOSE.V.DISP# = %SAVE#; /* Don't delete the dest. data    */

  21283 18 010214   000002 236007                    LDQ     2,DL
        18 010215   000032 552004 xsym               STBQ    DISK_CLOSE+26,'04'O

     2534    21284    5                  DISK_OPEN.V.FUN# = %UPDATE#;

  21284 18 010216   001000 236007                    LDQ     512,DL
        18 010217   000045 552010 xsym               STBQ    DISK_OPEN+37,'10'O
        18 010220   010243 710000 18                 TRA     s:21303

     2535    21285    5                CASE( %IDS_FAST_FILE );

     2536    21286    5                  IF TAPE_OPTION.PROTTYPE = %INCREMENTAL

  21286 18 010221   000001 236000 xsym               LDQ     TAPE_OPTION+1
        18 010222   700000 376003                    ANQ     -32768,DU
        18 010223   300000 116003                    CMPQ    98304,DU
        18 010224   010236 601000 18                 TNZ     s:21292

     2537    21287    6                   THEN DO;

     2538    21288    6                     DISK_CLOSE.V.DISP# = %SAVE#; /* Don't delete the dest. file */

  21288 18 010225   000002 236007                    LDQ     2,DL
        18 010226   000032 552004 xsym               STBQ    DISK_CLOSE+26,'04'O

     2539    21289    6                     DISK_OPEN.V.EXIST# = %OLDFILE#; /* Each gran. must be checked */

  21289 18 010227   000044 236000 xsym               LDQ     DISK_OPEN+36
        18 010230   000036 376000 19                 ANQ     30
        18 010231   000400 276007                    ORQ     256,DL
        18 010232   000044 756000 xsym               STQ     DISK_OPEN+36

     2540    21290    6                     DISK_OPEN.V.FUN# = %CREATE#;

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:365  
  21290 18 010233   003000 236007                    LDQ     1536,DL
        18 010234   000045 552010 xsym               STBQ    DISK_OPEN+37,'10'O

     2541    21291    6                     END;

  21291 18 010235   010243 710000 18                 TRA     s:21303

     2542    21292    5                   ELSE DISK_CLOSE.V.DISP# = %RELEASE#;

  21292 18 010236   000001 236007                    LDQ     1,DL
        18 010237   000032 552004 xsym               STBQ    DISK_CLOSE+26,'04'O
        18 010240   010243 710000 18                 TRA     s:21303

     2543    21293    5                CASE( ELSE );

     2544    21294    5                  DISK_CLOSE.V.DISP# = %RELEASE#;

  21294 18 010241   000001 236007                    LDQ     1,DL
        18 010242   000032 552004 xsym               STBQ    DISK_CLOSE+26,'04'O

     2545    21295    5                END;

     2546    21296    4               END;

     2547    21297    3         END;

     2548    21298
     2549    21299                       /* We want to delete the file on the destination.  One of the  */
     2550    21300                       /* reasons is to make sure DUAL will be able to provide needed */
     2551    21301                                                /* granules on the DUAL pack.         */
     2552    21302
     2553    21303    2      CALL M$CLOSE( DISK_CLOSE )

  21303 18 010243   000000 630400 xsym               EPPR0   DISK_CLOSE
        18 010244   450001 713400                    CLIMB   alt,close
        18 010245   406000 401760                    pmme    nvectors=13
        18 010246   010250 702000 18                 TSX2    s:21305
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:366  
        18 010247   010253 710000 18                 TRA     s:21307

     2554    21304    3       WHENALTRETURN DO;

     2555    21305    3         CALL FLI$RPT_ERR;

  21305 18 010250   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 010251   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 010252   000000 011000                    NOP     0

     2556    21306    3         END;

     2557    21307    2      DISK_CLOSE.V.DISP# = %SAVE#;

  21307 18 010253   000002 236007                    LDQ     2,DL
        18 010254   000032 552004 xsym               STBQ    DISK_CLOSE+26,'04'O

     2558    21308    2      IF DISK_CLOSE.V.DESC.TERMINATE#

  21308 18 010255   000033 236000 xsym               LDQ     DISK_CLOSE+27
        18 010256   000020 316003                    CANQ    16,DU
        18 010257   010303 600000 18                 TZE     s:21320
        18 010260   000000 235000 xsym               LDA     DISK_DEST_EXIST
        18 010261   000003 115007                    CMPA    3,DL
        18 010262   010303 601000 18                 TNZ     s:21320

     2559    21309    2        AND DISK_DEST_EXIST = %NEWFILE#
     2560    21310    3       THEN DO;

     2561    21311    3         DISK_OPEN.V.FUN# = %IN#;

  21311 18 010263   002000 236007                    LDQ     1024,DL
        18 010264   000045 552010 xsym               STBQ    DISK_OPEN+37,'10'O

     2562    21312    3         DISK_OPEN.V.DELETE# = %YES#;

  21312 18 010265   040000 236007                    LDQ     16384,DL
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:367  
        18 010266   000044 256000 xsym               ORSQ    DISK_OPEN+36

     2563    21313    3         CALL M$OPEN ( DISK_OPEN )

  21313 18 010267   000000 630400 xsym               EPPR0   DISK_OPEN
        18 010270   450000 713400                    CLIMB   alt,open
        18 010271   410400 401760                    pmme    nvectors=18
        18 010272   010274 702000 18                 TSX2    s:21315
        18 010273   010277 710000 18                 TRA     s:21317

     2564    21314    4          WHENALTRETURN DO;

     2565    21315    4            CALL FLI$RPT_ERR;

  21315 18 010274   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 010275   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 010276   000000 011000                    NOP     0

     2566    21316    4            END;

     2567    21317    3         DISK_OPEN.V.FUN# = %CREATE#;

  21317 18 010277   003000 236007                    LDQ     1536,DL
        18 010300   000045 552010 xsym               STBQ    DISK_OPEN+37,'10'O

     2568    21318    3         DISK_OPEN.V.DELETE# = %NO#;

  21318 18 010301   000066 236000 19                 LDQ     54
        18 010302   000044 356000 xsym               ANSQ    DISK_OPEN+36

     2569    21319    3         END;

     2570    21320    2      RETURN;

  21320 18 010303   200104 221300                    LDX1  ! DCB#+1,,AUTO
        18 010304   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:368  
     2571    21321
     2572    21322    2   END FLM_DELETE_TO_DISK_FILE;
     2573    21323
     2574    21324
     2575    21325        /*F*    NAME: FLM_DELETE_DUAL_FILES
     2576    21326               PURPOSE: Used by DUAL INCR and determines if a file in the current dual
     2577    21327                  account still exists on the prime packset as a regular or deleted file
     2578    21328                  and if not is deleted from the dual packset. This is performed for the
     2579    21329                  entire account.
     2580    21330        */
     2581    21331    1   FLM_DELETE_DUAL_FILES: PROC;

  21331 18 010305   200100 741300       FLM_DELETE_* STX1  ! ANY_FILES_FOUND+2,,AUTO

     2582    21332
     2583    21333    2   DCL 1 ERR AUTO,
     2584    21334    2         2 * BIT(12) UNAL,
     2585    21335    2         2 * BIT(6) UNAL,
     2586    21336    2         2 * BIT(1) UNAL,
     2587    21337    2         2 CODE UBIN(14) UNAL,
     2588    21338    2         2 * UBIN(3) UNAL;
     2589    21339
     2590    21340        %FPT_OPEN( FPTN = DISK_OPEN_DUAL,
     2591    21341                   DCB = M$DISK_OUT,
     2592    21342                   ACCT = TO_DISK_ACCT,
     2593    21343                   RES = 'DP',
     2594    21344                   SN = TO_DISK_SN,
     2595    21345                   NXTF = YES,
     2596    21346                   THISF = NO,
     2597    21347                   ASN = FILE,
     2598    21348                   ACS = BLOCK,
     2599    21349                   FUN = IN,
     2600    21350                   TEST = YES,
     2601    21351                   STCLASS = STATIC);
     2602    21460
     2603    21461        %FPT_OPEN( FPTN = DISK_OPEN_PRIME,
     2604    21462                   DCB = M$DISK_IN,
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:369  
     2605    21463                   NAME = TO_DISK_NAME,
     2606    21464                   ACCT = TO_DISK_ACCT,
     2607    21465                   RES = 'DP',
     2608    21466                   ASN = FILE,
     2609    21467                   ACS = BLOCK,
     2610    21468                   FUN = IN,
     2611    21469                   TEST = YES,
     2612    21470                   STCLASS = STATIC);
     2613    21579
     2614    21580    2   DCL BLANK6 CHAR(0) STATIC INIT('      ');
     2615    21581
     2616    21582        /********************/
     2617    21583
     2618    21584    2      DISK_OPEN_PRIME.V.RES# = DPRESLIST.NAME(0);

  21584 18 010306   000000 470400 xsym               LDP0    DPRESLIST$
        18 010307   000001 236100                    LDQ     1,,PR0
        18 010310   003452 756000 2                  STQ     DISK_OPEN_PRIME+40

     2619    21585    2      DISK_OPEN_PRIME.SN_ = VECTOR(DPLIST);

  21585 18 010311   000006 235000 19                 LDA     6
        18 010312   000000 236000 xsym               LDQ     DPLIST$
        18 010313   003404 757000 2                  STAQ    DISK_OPEN_PRIME+2

     2620    21586    2      DISK_OPEN_DUAL.V.RES# = DISK_DEST_RES.NAME;

  21586 18 010314   000001 236000 xsym               LDQ     DISK_DEST_RES+1
        18 010315   003360 756000 2                  STQ     DISK_OPEN_DUAL+40

     2621    21587    2      DISK_CLOSE.IFPARAM_ = VECTOR(NIL);

  21587 18 010316   000024 237000 19                 LDAQ    20
        18 010317   000026 757000 xsym               STAQ    DISK_CLOSE+22

     2622    21588    2      DISK_CLOSE.V.EFTOPER = '0'B;

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:370  
  21588 18 010320   000100 236000 19                 LDQ     64
        18 010321   000032 356000 xsym               ANSQ    DISK_CLOSE+26

     2623    21589    2      DISK_CLOSE.V.DESC.TERMINATE# = %NO#;

  21589 18 010322   000115 236000 19                 LDQ     77
        18 010323   000033 356000 xsym               ANSQ    DISK_CLOSE+27

     2624    21590    2      DISK_CLOSE.V.DISP# = %SAVE#;

  21590 18 010324   000002 236007                    LDQ     2,DL
        18 010325   000032 552004 xsym               STBQ    DISK_CLOSE+26,'04'O

     2625    21591    2      SOURCE_FILE_TYPE = 0;

  21591 18 010326   200023 450100                    STZ     SOURCE_FILE_TYPE,,AUTO

     2626    21592
     2627    21593    3      DO WHILE( '1'B );

     2628    21594    3   READ_NEXT_FILE:
     2629    21595    3         CALL M$OPEN( DISK_OPEN_DUAL )     /* Find next file on dual             */

  21595 18 010327   003310 630400 2     READ_NEXT_F* EPPR0   DISK_OPEN_DUAL
        18 010330   450000 713400                    CLIMB   alt,open
        18 010331   410400 401760                    pmme    nvectors=18
        18 010332   010513 702000 18                 TSX2    s:21647

     2630    21596    4          WHENRETURN DO;

     2631    21597    4            TO_DISK_NAME = M$DISK_OUT$->F$DCB.NAME#; /* Same file exist on prime? */

  21597 18 010333   200061 470500                    LDP0    M$DISK_OUT$,,AUTO
        18 010334   000000 100500                    MLR     fill='000'O
        18 010335   000010 000040                    ADSC9   8,,PR0                   cn=0,n=32
        18 010336   000234 000040 2                  ADSC9   TO_DISK_NAME             cn=0,n=32

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:371  
     2632    21598    4            CALL M$OPEN( DISK_OPEN_PRIME )

  21598 18 010337   003402 630400 2                  EPPR0   DISK_OPEN_PRIME
        18 010340   450000 713400                    CLIMB   alt,open
        18 010341   410400 401760                    pmme    nvectors=18
        18 010342   010344 702000 18                 TSX2    s:21600
        18 010343   010512 710000 18                 TRA     s:21645

     2633    21599    5             WHENALTRETURN DO;

     2634    21600    5               IF (TO_DISK_ACCT.ACCT# ~= BACKUP_ACCT.ACCT# /* No, but don,t delete */

  21600 18 010344   000224 237000 2                  LDAQ    TO_DISK_ACCT
        18 010345   000140 117000 2                  CMPAQ   BACKUP_ACCT
        18 010346   010512 600000 18                 TZE     s:21645
        18 010347   000000 236000 xsym               LDQ     DUAL_FILE
        18 010350   000033 772000                    QRL     27
        18 010351   000000 620006                    EAX0    0,QL
        18 010352   040040 106400                    CMPC    fill='040'O
        18 010353   000234 200037 2                  ADSC9   TO_DISK_NAME             cn=1,n=31
        18 010354   000000 200010 xsym               ADSC9   DUAL_FILE                cn=1,n=*X0
        18 010355   010512 600000 18                 TZE     s:21645

     2635    21601    5                 AND TO_DISK_NAME.NAME# ~= DUAL_FILE.NAME#) /* :DUAL             */
     2636    21602    6                THEN DO;

     2637    21603    6                  IF B$TCB.ALT$->B$ALT.ERR.CODE = %E$NOFILE

  21603 18 010356   000000 470400 xsym               LDP0    B$TCB$
        18 010357   000000 471500                    LDP1    0,,PR0
        18 010360   100102 236100                    LDQ     66,,PR1
        18 010361   377770 376007                    ANQ     131064,DL
        18 010362   001610 116007                    CMPQ    904,DL
        18 010363   010507 601000 18                 TNZ     s:21642

     2638    21604    7                   THEN DO;           /* Check if deleted source file exists     */

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:372  
     2639    21605    7                     DISK_OPEN_PRIME.V.OPER.NXTF# = '1'B;

  21605 18 010364   004000 236007                    LDQ     2048,DL
        18 010365   003446 256000 2                  ORSQ    DISK_OPEN_PRIME+36

     2640    21606    7                     DISK_OPEN_PRIME.V.OPER.THISF# = '1'B;

  21606 18 010366   002000 236007                    LDQ     1024,DL
        18 010367   003446 256000 2                  ORSQ    DISK_OPEN_PRIME+36

     2641    21607    7                     DISK_OPEN_PRIME.V.SRCHCOND.DELF# = '1'B;

  21607 18 010370   400000 236003                    LDQ     -131072,DU
        18 010371   003447 256000 2                  ORSQ    DISK_OPEN_PRIME+37

     2642    21608    7                     CALL M$OPEN( DISK_OPEN_PRIME )

  21608 18 010372   003402 630400 2                  EPPR0   DISK_OPEN_PRIME
        18 010373   450000 713400                    CLIMB   alt,open
        18 010374   410400 401760                    pmme    nvectors=18
        18 010375   010412 702000 18                 TSX2    s:21619

     2643    21609    8                      WHENRETURN DO; /* If deleted file with same name, don't del. */

     2644    21610    8                        DISK_OPEN_PRIME.V.OPER.NXTF# = '0'B;

  21610 18 010376   000116 236000 19                 LDQ     78
        18 010377   003446 356000 2                  ANSQ    DISK_OPEN_PRIME+36

     2645    21611    8                        DISK_OPEN_PRIME.V.OPER.THISF# = '0'B;

  21611 18 010400   000117 236000 19                 LDQ     79
        18 010401   003446 356000 2                  ANSQ    DISK_OPEN_PRIME+36

     2646    21612    8                        DISK_OPEN_PRIME.V.SRCHCOND.DELF# = '0'B;

  21612 18 010402   000031 236000 xsym               LDQ     B_VECTNIL+25
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:373  
        18 010403   003447 356000 2                  ANSQ    DISK_OPEN_PRIME+37

     2647    21613    8                        IF M$DISK_IN$->F$DCB.NAME# = TO_DISK_NAME

  21613 18 010404   200062 470500                    LDP0    M$DISK_IN$,,AUTO
        18 010405   000000 106500                    CMPC    fill='000'O
        18 010406   000010 000040                    ADSC9   8,,PR0                   cn=0,n=32
        18 010407   000234 000040 2                  ADSC9   TO_DISK_NAME             cn=0,n=32
        18 010410   010327 600000 18                 TZE     READ_NEXT_FILE

     2648    21614    8                         THEN GOTO READ_NEXT_FILE; /* Deleted file - don't delete */
     2649    21615    8                        END;

  21615 18 010411   010412 710000 18                 TRA     s:21619

     2650    21616    8                      WHENALTRETURN DO;

     2651    21617    8                        END;

     2652    21618
     2653    21619    7                     DISK_OPEN_PRIME.V.OPER.NXTF# = '0'B;

  21619 18 010412   000116 236000 19                 LDQ     78
        18 010413   003446 356000 2                  ANSQ    DISK_OPEN_PRIME+36

     2654    21620    7                     DISK_OPEN_PRIME.V.OPER.THISF# = '0'B;

  21620 18 010414   000117 236000 19                 LDQ     79
        18 010415   003446 356000 2                  ANSQ    DISK_OPEN_PRIME+36

     2655    21621    7                     DISK_OPEN_PRIME.V.SRCHCOND.DELF# = '0'B;

  21621 18 010416   000031 236000 xsym               LDQ     B_VECTNIL+25
        18 010417   003447 356000 2                  ANSQ    DISK_OPEN_PRIME+37

     2656    21622    7                     DISK_OPEN_DUAL.V.OPER.TEST# = '0'B;

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:374  
  21622 18 010420   000002 236000 19                 LDQ     2
        18 010421   003354 356000 2                  ANSQ    DISK_OPEN_DUAL+36

     2657    21623    7                     DISK_OPEN_DUAL.V.OPER.THISF# = '1'B;

  21623 18 010422   002000 236007                    LDQ     1024,DL
        18 010423   003354 256000 2                  ORSQ    DISK_OPEN_DUAL+36

     2658    21624    7                     CALL M$OPEN( DISK_OPEN_DUAL )

  21624 18 010424   003310 630400 2                  EPPR0   DISK_OPEN_DUAL
        18 010425   450000 713400                    CLIMB   alt,open
        18 010426   410400 401760                    pmme    nvectors=18
        18 010427   010431 702000 18                 TSX2    s:21626
        18 010430   010434 710000 18                 TRA     s:21628

     2659    21625    8                      WHENALTRETURN DO;

     2660    21626    8                        CALL FLI$RPT_ERR;  /* Should not occur                   */

  21626 18 010431   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 010432   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 010433   000000 011000                    NOP     0

     2661    21627    8                        END;

     2662    21628    7                     DISK_OPEN_DUAL.V.OPER.TEST# = '1'B;

  21628 18 010434   020000 236007                    LDQ     8192,DL
        18 010435   003354 256000 2                  ORSQ    DISK_OPEN_DUAL+36

     2663    21629    7                     DISK_OPEN_DUAL.V.OPER.THISF# = '0'B;

  21629 18 010436   000117 236000 19                 LDQ     79
        18 010437   003354 356000 2                  ANSQ    DISK_OPEN_DUAL+36

     2664    21630    7                     CALL FLM_DELETE_TO_DISK_FILE;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:375  

  21630 18 010440   010144 701000 18                 TSX1    FLM_DELETE_TO_DISK_FILE
        18 010441   000000 011000                    NOP     0

     2665    21631
     2666    21632    7                     DISK_CLOSE.V.EFTOPER = '0'B;

  21632 18 010442   000100 236000 19                 LDQ     64
        18 010443   000032 356000 xsym               ANSQ    DISK_CLOSE+26

     2667    21633    7                     DISK_CLOSE.V.DESC.TERMINATE# = %NO#;

  21633 18 010444   000115 236000 19                 LDQ     77
        18 010445   000033 356000 xsym               ANSQ    DISK_CLOSE+27

     2668    21634    7                     DISK_CLOSE.V.DISP# = %SAVE#;

  21634 18 010446   000002 236007                    LDQ     2,DL
        18 010447   000032 552004 xsym               STBQ    DISK_CLOSE+26,'04'O

     2669    21635
     2670    21636    7                     ERR.CODE = %E$NOPRS;

  21636 18 010450   200101 236100                    LDQ     ERR,,AUTO
        18 010451   000060 376000 19                 ANQ     48
        18 010452   023010 276007                    ORQ     9736,DL
        18 010453   200101 756100                    STQ     ERR,,AUTO

     2671    21637    7                     CALL M$OPEN( DISK_OPEN_PRIME ) /* Restores file name to DCB */

  21637 18 010454   003402 630400 2                  EPPR0   DISK_OPEN_PRIME
        18 010455   450000 713400                    CLIMB   alt,open
        18 010456   410400 401760                    pmme    nvectors=18
        18 010457   010461 702000 18                 TSX2    s:21640
        18 010460   010461 710000 18                 TRA     s:21640

     2672    21638    8                      WHENALTRETURN DO;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:376  

     2673    21639    8                        END;

     2674    21640    7                     CALL FLP$WR_FILE_INFO(M$DISK_IN$, ,SAVE_SN,0,' ', ,ERR,PR_DEV_LT,
             21640                              '0'B);

  21640 18 010461   000052 236000 19                 LDQ     42
        18 010462   200134 756100                    STQ     @DISP+9,,AUTO
        18 010463   200072 630500                    EPPR0   PR_DEV_LT,,AUTO
        18 010464   200133 450500                    STP0    @DISP+8,,AUTO
        18 010465   200101 631500                    EPPR1   ERR,,AUTO
        18 010466   200132 451500                    STP1    @DISP+7,,AUTO
        18 010467   000001 236000 xsym               LDQ     B_VECTNIL+1
        18 010470   000120 235000 19                 LDA     80
        18 010471   200130 757100                    STAQ    @DISP+5,,AUTO
        18 010472   000052 236000 19                 LDQ     42
        18 010473   200127 756100                    STQ     @DISP+4,,AUTO
        18 010474   200036 633500                    EPPR3   SAVE_SN,,AUTO
        18 010475   200126 453500                    STP3    @DISP+3,,AUTO
        18 010476   000001 236000 xsym               LDQ     B_VECTNIL+1
        18 010477   200125 756100                    STQ     @DISP+2,,AUTO
        18 010500   200062 634500                    EPPR4   M$DISK_IN$,,AUTO
        18 010501   200124 454500                    STP4    @DISP+1,,AUTO
        18 010502   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 010503   000053 631400 19                 EPPR1   43
        18 010504   000000 701000 xent               TSX1    FLP$WR_FILE_INFO
        18 010505   000000 011000                    NOP     0

     2675    21641    7                     END;

  21641 18 010506   010512 710000 18                 TRA     s:21645

     2676    21642    6                   ELSE CALL FLI$RPT_ERR;

  21642 18 010507   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 010510   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 010511   000000 011000                    NOP     0
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:377  

     2677    21643    6                  END;

     2678    21644    5               END;

     2679    21645    4            END;

  21645 18 010512   010530 710000 18                 TRA     s:21652

     2680    21646    4          WHENALTRETURN DO;

     2681    21647    4            IF B$TCB.ALT$->B$ALT.ERR.CODE = %E$ADEOF

  21647 18 010513   000000 470400 xsym               LDP0    B$TCB$
        18 010514   000000 471500                    LDP1    0,,PR0
        18 010515   100102 236100                    LDQ     66,,PR1
        18 010516   377770 376007                    ANQ     131064,DL
        18 010517   001750 116007                    CMPQ    1000,DL
        18 010520   010523 600000 18                 TZE     s:21649
        18 010521   001540 116007                    CMPQ    864,DL
        18 010522   010525 601000 18                 TNZ     s:21650

     2682    21648    4              OR B$TCB.ALT$->B$ALT.ERR.CODE = %E$FDEOF
     2683    21649    4             THEN RETURN;                  /* Finished reading this account      */

  21649 18 010523   200100 221300                    LDX1  ! ANY_FILES_FOUND+2,,AUTO
        18 010524   000001 702211                    TSX2  ! 1,X1

     2684    21650    4             ELSE CALL FLI$RPT_ERR;        /* Output error but continue          */

  21650 18 010525   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 010526   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 010527   000000 011000                    NOP     0

     2685    21651    4            END;

     2686    21652    3         END;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:378  

  21652 18 010530   010327 710000 18                 TRA     READ_NEXT_FILE

     2687    21653
     2688    21654    2   END FLM_DELETE_DUAL_FILES;
     2689    21655
     2690    21656
     2691    21657    1   FLM_COPY_FILE_TO_DISK: PROC;

  21657 18 010531   200104 741300       FLM_COPY_FI* STX1  ! DCB#+1,,AUTO

     2692    21658
     2693    21659    2   DCL 1 IDS_GRANULE_ DALIGNED,
     2694    21660    2         2 * BIT(36),
     2695    21661    2         2 PTR$ PTR;
     2696    21662    2   DCL IDS_FAST_INCR BIT(1) AUTO; /* IDS grans. saved FAST, restrd incrementally. */
     2697    21663
     2698    21664        %FPT_READ( FPTN = READ_IDS_FILE,
     2699    21665                   DCB = M$DISK_OUT,
     2700    21666                   KEYS = YES,
     2701    21667                   WAIT= YES,
     2702    21668                   STCLASS = STATIC);
     2703    21707
     2704    21708        /********************/
     2705    21709
     2706    21710    2      DISK_CLOSE.V.EFTOPER = '0'B;

  21710 18 010532   000100 236000 19                 LDQ     64
        18 010533   000032 356000 xsym               ANSQ    DISK_CLOSE+26

     2707    21711
     2708    21712    3      DO CASE( SOURCE_FILE_TYPE );

  21712 18 010534   200023 235100                    LDA     SOURCE_FILE_TYPE,,AUTO
        18 010535   000012 115007                    CMPA    10,DL
        18 010536   010540 602005 18                 TNC     s:21712+4,AL
        18 010537   010616 710000 18                 TRA     s:21741
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:379  
        18 010540   010552 710000 18                 TRA     s:21718
        18 010541   010616 710000 18                 TRA     s:21741
        18 010542   010616 710000 18                 TRA     s:21741
        18 010543   010552 710000 18                 TRA     s:21718
        18 010544   010616 710000 18                 TRA     s:21741
        18 010545   010616 710000 18                 TRA     s:21741
        18 010546   010616 710000 18                 TRA     s:21741
        18 010547   010616 710000 18                 TRA     s:21741
        18 010550   010616 710000 18                 TRA     s:21741
        18 010551   010552 710000 18                 TRA     s:21718

     2709    21713    3       CASE( %REG_FILE, %ACUP_FILE, %IDS_FAST_FILE );

     2710    21714        /***
     2711    21715         *** Qualify file being moved for backup if account authorization allows.
     2712    21716         *** By definition, TRANSPORTs are performed w/o altering the source file.
     2713    21717         ***/
     2714    21718    3         IF COMMAND = %DUAL AND DISK_OPTION.OPEN_MODE = %TRANSFER

  21718 18 010552   200003 470500                    LDP0    @COMMAND,,AUTO
        18 010553   000000 235100                    LDA     0,,PR0
        18 010554   000043 115007                    CMPA    35,DL
        18 010555   010616 601000 18                 TNZ     s:21741
        18 010556   000003 236000 xsym               LDQ     DISK_OPTION+3
        18 010557   700000 316003                    CANQ    -32768,DU
        18 010560   010616 601000 18                 TNZ     s:21741

     2715    21719    4          THEN DO;

     2716    21720    4            GET_AD_OR_FD.FPARAM_ = SAVE_AD_FD_FIT_; /* Get account directory     */

  21720 18 010561   200030 237100                    LDAQ    SAVE_AD_FD_FIT_,,AUTO
        18 010562   002374 757000 2                  STAQ    GET_AD_OR_FD+24

     2717    21721    4            CALL M$OPEN( GET_AD_OR_FD )

  21721 18 010563   002344 630400 2                  EPPR0   GET_AD_OR_FD
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:380  
        18 010564   450000 713400                    CLIMB   alt,open
        18 010565   410400 401760                    pmme    nvectors=18
        18 010566   010616 702000 18                 TSX2    s:21741

     2718    21722    5             WHENRETURN DO;

     2719    21723    5               CODE$ = SAVE_AD_FD_FIT_.PTR$;

  21723 18 010567   200031 236100                    LDQ     SAVE_AD_FD_FIT_+1,,AUTO
        18 010570   200006 756100                    STQ     CODE$,,AUTO

     2720    21724    5               CALL XSF$LOCCODP( CODE$, 14 )

  21724 18 010571   000075 236000 19                 LDQ     61
        18 010572   200125 756100                    STQ     @DISP+2,,AUTO
        18 010573   200006 630500                    EPPR0   CODE$,,AUTO
        18 010574   200124 450500                    STP0    @DISP+1,,AUTO
        18 010575   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 010576   000020 631400 xsym               EPPR1   B_VECTNIL+16
        18 010577   000000 701000 xent               TSX1    XSF$LOCCODP
        18 010600   010615 702000 18                 TSX2    s:21735

     2721    21725    6                WHENRETURN DO;

     2722    21726    6                  IF CODE14.ACCESS.BUPF    /* File backup permitted?             */

  21726 18 010601   200006 470500                    LDP0    CODE$,,AUTO
        18 010602   000000 236100                    LDQ     0,,PR0
        18 010603   040000 316003                    CANQ    16384,DU
        18 010604   010614 600000 18                 TZE     s:21732

     2723    21727    7                   THEN DO;

     2724    21728    7                     DISK_CLOSE.V.DESC = SOURCE_DCB$->F$DCB.DESC;

  21728 18 010605   200014 471500                    LDP1    SOURCE_DCB$,,AUTO
        18 010606   100005 720100                    LXL0    5,,PR1
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:381  
        18 010607   000033 740000 xsym               STX0    DISK_CLOSE+27

     2725    21729    7                     DISK_CLOSE.V.DESC.BUF# = '1'B;

  21729 18 010610   100000 236003                    LDQ     32768,DU
        18 010611   000033 256000 xsym               ORSQ    DISK_CLOSE+27

     2726    21730    7                     DISK_CLOSE.V.EFTOPER.UPDDESC# = '1'B;

  21730 18 010612   004000 236007                    LDQ     2048,DL
        18 010613   000032 256000 xsym               ORSQ    DISK_CLOSE+26

     2727    21731    7                     END;

     2728    21732    6                  END;

  21732 18 010614   010615 710000 18                 TRA     s:21735

     2729    21733    6                WHENALTRETURN DO;

     2730    21734    6                  END;

     2731    21735    5               END;

  21735 18 010615   010616 710000 18                 TRA     s:21741

     2732    21736    5             WHENALTRETURN DO;

     2733    21737    5               END;

     2734    21738    4            END;

     2735    21739    3       END;

     2736    21740
     2737    21741    2      IF COMMAND = %RETRIEVE

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:382  
  21741 18 010616   200003 470500                    LDP0    @COMMAND,,AUTO
        18 010617   000000 235100                    LDA     0,,PR0
        18 010620   000034 115007                    CMPA    28,DL
        18 010621   010641 601000 18                 TNZ     s:21752

     2738    21742    3       THEN DO;

     2739    21743    3         CODE$ = PINCRW (FPARAM_.PTR$, SIZEW (FM$GRAN));

  21743 18 010622   200017 236100                    LDQ     FPARAM_+1,,AUTO
        18 010623   000005 036003                    ADLQ    5,DU
        18 010624   200006 756100                    STQ     CODE$,,AUTO

     2740    21744    3         CALL XSF$LOCCODP( CODE$, 03 )

  21744 18 010625   000042 236000 19                 LDQ     34
        18 010626   200125 756100                    STQ     @DISP+2,,AUTO
        18 010627   200006 631500                    EPPR1   CODE$,,AUTO
        18 010630   200124 451500                    STP1    @DISP+1,,AUTO
        18 010631   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 010632   000020 631400 xsym               EPPR1   B_VECTNIL+16
        18 010633   000000 701000 xent               TSX1    XSF$LOCCODP
        18 010634   010641 702000 18                 TSX2    s:21752

     2741    21745    4          WHENRETURN DO;

     2742    21746    4            CODE03.DESC.FETCH = '1'B;      /* Keep on while RETRIEVE in process  */

  21746 18 010635   200006 470500                    LDP0    CODE$,,AUTO
        18 010636   000010 236003                    LDQ     8,DU
        18 010637   000001 256100                    ORSQ    1,,PR0

     2743    21747    4            END;

  21747 18 010640   010641 710000 18                 TRA     s:21752

     2744    21748    4          WHENALTRETURN DO;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:383  

     2745    21749    4            END;

     2746    21750    3         END;

     2747    21751
     2748    21752    2      CALL M$OPEN( DISK_OPEN )

  21752 18 010641   000000 630400 xsym               EPPR0   DISK_OPEN
        18 010642   450000 713400                    CLIMB   alt,open
        18 010643   410400 401760                    pmme    nvectors=18
        18 010644   011564 702000 18                 TSX2    s:21999

     2749    21753    3       WHENRETURN DO;

     2750    21754    3         GOING_TO_DEST = '1'B;

  21754 18 010645   400000 236003                    LDQ     -131072,DU
        18 010646   200042 756100                    STQ     GOING_TO_DEST,,AUTO

     2751    21755    3         ERR = '0'B;

  21755 18 010647   200020 450100                    STZ     ERR,,AUTO

     2752    21756    3         IF SOURCE = %DISK@

  21756 18 010650   200070 235100                    LDA     SOURCE,,AUTO
        18 010651   000001 115007                    CMPA    1,DL
        18 010652   011062 601000 18                 TNZ     s:21832

     2753    21757    4          THEN DO;

     2754    21758    4            IF SOURCE_FILE_TYPE = %REG_FILE

  21758 18 010653   200023 235100                    LDA     SOURCE_FILE_TYPE,,AUTO
        18 010654   011341 601000 18                 TNZ     s:21924

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:384  
     2755    21759    5             THEN DO;

     2756    21760    5               CALL FLI$DISK_READ_FILE_INIT( NBR_GRANS_TO_READ );

  21760 18 010655   200022 630500                    EPPR0   NBR_GRANS_TO_READ,,AUTO
        18 010656   200124 450500                    STP0    @DISP+1,,AUTO
        18 010657   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 010660   000017 631400 xsym               EPPR1   B_VECTNIL+15
        18 010661   000000 701000 xent               TSX1    FLI$DISK_READ_FILE_INIT
        18 010662   000000 011000                    NOP     0

     2757    21761    5               DISK_WRITE.KEY_ = VECTOR(NIL);

  21761 18 010663   000024 237000 19                 LDAQ    20
        18 010664   000002 757000 xsym               STAQ    DISK_WRITE+2

     2758    21762    6               DO WHILE( NOT ERR );

  21762 18 010665   011057 710000 18                 TRA     s:21828

     2759    21763    6                  CALL FLI$DISK_READ( BUF_, BIX, ARS, ERR, DCB# )

  21763 18 010666   200066 630500                    EPPR0   DCB#,,AUTO
        18 010667   200130 450500                    STP0    @DISP+5,,AUTO
        18 010670   200020 631500                    EPPR1   ERR,,AUTO
        18 010671   200127 451500                    STP1    @DISP+4,,AUTO
        18 010672   200046 633500                    EPPR3   ARS,,AUTO
        18 010673   200126 453500                    STP3    @DISP+3,,AUTO
        18 010674   200004 634500                    EPPR4   BIX,,AUTO
        18 010675   200125 454500                    STP4    @DISP+2,,AUTO
        18 010676   200044 635500                    EPPR5   BUF_,,AUTO
        18 010677   200124 455500                    STP5    @DISP+1,,AUTO
        18 010700   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 010701   000023 631400 xsym               EPPR1   B_VECTNIL+19
        18 010702   000000 701000 xent               TSX1    FLI$DISK_READ
        18 010703   010705 702000 18                 TSX2    s:21765
        18 010704   010723 710000 18                 TRA     s:21772
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:385  

     2760    21764    7                   WHENALTRETURN DO;

     2761    21765    7                     IF ERR.CODE = %E$DI

  21765 18 010705   200020 236100                    LDQ     ERR,,AUTO
        18 010706   377770 376007                    ANQ     131064,DL
        18 010707   000110 116007                    CMPQ    72,DL
        18 010710   010713 601000 18                 TNZ     s:21767

     2762    21766    7                      THEN ERR = '0'B;

  21766 18 010711   200020 450100                    STZ     ERR,,AUTO
        18 010712   010723 710000 18                 TRA     s:21772

     2763    21767    7                      ELSE IF ERR.CODE ~= %E$EOF

  21767 18 010713   000060 116007                    CMPQ    48,DL
        18 010714   010723 600000 18                 TZE     s:21772

     2764    21768    7                         THEN IF FPT_EXIT.V.STEPCC# < %DISK_ERROR

  21768 18 010715   000004 236000 xsym               LDQ     FPT_EXIT+4
        18 010716   777000 376003                    ANQ     -512,DU
        18 010717   003000 116003                    CMPQ    1536,DU
        18 010720   010723 603000 18                 TRC     s:21772

     2765    21769    7                            THEN FPT_EXIT.V.STEPCC# = %DISK_ERROR;

  21769 18 010721   003000 236003                    LDQ     1536,DU
        18 010722   000004 552040 xsym               STBQ    FPT_EXIT+4,'40'O

     2766    21770    7                            ELSE;
     2767    21771    7                     END;

     2768    21772    6                  IF NOT ERR

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:386  
  21772 18 010723   200020 235100                    LDA     ERR,,AUTO
        18 010724   010731 600000 18                 TZE     s:21775
        18 010725   200020 236100                    LDQ     ERR,,AUTO
        18 010726   377770 376007                    ANQ     131064,DL
        18 010727   000110 116007                    CMPQ    72,DL
        18 010730   011057 601000 18                 TNZ     s:21828

     2769    21773    6                    OR ERR.CODE = %E$DI
     2770    21774    7                   THEN DO;

     2771    21775    7                     IF F$DCB.ORG# ~= %RANDOM#

  21775 18 010731   200061 470500                    LDP0    M$DISK_OUT$,,AUTO
        18 010732   000032 236100                    LDQ     26,,PR0
        18 010733   777000 376003                    ANQ     -512,DU
        18 010734   003000 116003                    CMPQ    1536,DU
        18 010735   011004 600000 18                 TZE     s:21800
        18 010736   005000 116003                    CMPQ    2560,DU
        18 010737   011004 600000 18                 TZE     s:21800
        18 010740   007000 116003                    CMPQ    3584,DU
        18 010741   011004 600000 18                 TZE     s:21800
        18 010742   013000 116003                    CMPQ    5632,DU
        18 010743   011004 600000 18                 TZE     s:21800

     2772    21776    7                       AND F$DCB.ORG# ~= %RELATIVE#
     2773    21777    7                       AND F$DCB.ORG# ~= %IDS#
     2774    21778    7                       AND F$DCB.ORG# ~= %CG#
     2775    21779    8                      THEN DO;

     2776    21780        /***
     2777    21781         *** Write Consec.,keyed,indexed,irel,.... type files.
     2778    21782         ***/
     2779    21783    8                        IF ERR

  21783 18 010744   000000 115003                    CMPA    0,DU
        18 010745   011003 601000 18                 TNZ     s:21794

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:387  
     2780    21784    8                         THEN EXIT;
     2781    21785    8                        DISK_WRITE.BUF_ = BUF_;

  21785 18 010746   200044 237100                    LDAQ    BUF_,,AUTO
        18 010747   000004 757000 xsym               STAQ    DISK_WRITE+4

     2782    21786    8                        DISK_WRITE.BUF_.BOUND = ARS - 1;

  21786 18 010750   200046 236100                    LDQ     ARS,,AUTO
        18 010751   000001 136007                    SBLQ    1,DL
        18 010752   000020 736000                    QLS     16
        18 010753   000004 676000 xsym               ERQ     DISK_WRITE+4
        18 010754   000034 376000 xsym               ANQ     B_VECTNIL+28
        18 010755   000004 656000 xsym               ERSQ    DISK_WRITE+4

     2783    21787    8                        CALL M$WRITE( DISK_WRITE )

  21787 18 010756   000000 630400 xsym               EPPR0   DISK_WRITE
        18 010757   440001 713400                    CLIMB   alt,write
        18 010760   401400 401760                    pmme    nvectors=4
        18 010761   010763 702000 18                 TSX2    s:21789
        18 010762   010775 710000 18                 TRA     s:21793

     2784    21788    9                         WHENALTRETURN DO;

     2785    21789    9                           ERR = B$TCB.ALT$->B$ALT.ERR;

  21789 18 010763   000000 470400 xsym               LDP0    B$TCB$
        18 010764   000000 471500                    LDP1    0,,PR0
        18 010765   100102 236100                    LDQ     66,,PR1
        18 010766   200020 756100                    STQ     ERR,,AUTO

     2786    21790    9                           IF FPT_EXIT.V.STEPCC# < %DISK_ERROR

  21790 18 010767   000004 236000 xsym               LDQ     FPT_EXIT+4
        18 010770   777000 376003                    ANQ     -512,DU
        18 010771   003000 116003                    CMPQ    1536,DU
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:388  
        18 010772   010775 603000 18                 TRC     s:21793

     2787    21791    9                            THEN FPT_EXIT.V.STEPCC# = %DISK_ERROR;

  21791 18 010773   003000 236003                    LDQ     1536,DU
        18 010774   000004 552040 xsym               STBQ    FPT_EXIT+4,'40'O

     2788    21792    9                           END;

     2789    21793    8                        CALL FLI$RETURN_BUF( BIX );

  21793 18 010775   200004 630500                    EPPR0   BIX,,AUTO
        18 010776   200124 450500                    STP0    @DISP+1,,AUTO
        18 010777   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 011000   000017 631400 xsym               EPPR1   B_VECTNIL+15
        18 011001   000000 701000 xent               TSX1    FLI$RETURN_BUF
        18 011002   000000 011000                    NOP     0

     2790    21794    8                        END;

  21794 18 011003   011057 710000 18                 TRA     s:21828

     2791    21795    8                      ELSE DO;

     2792    21796        /***
     2793    21797         *** Write Random,relative,IDS or CG type files.
     2794    21798         *** Write out contiguos granules, unwritten granules are ignored.
     2795    21799         ***/
     2796    21800    8                        ERR = '0'B;

  21800 18 011004   200020 450100                    STZ     ERR,,AUTO

     2797    21801    8                        DISK_WRITE.KEY_ = VECTOR(DISK_KEY);

  21801 18 011005   777640 235007                    LDA     -96,DL
        18 011006   200124 452500                    STP2    @DISP+1,,AUTO
        18 011007   200124 236100                    LDQ     @DISP+1,,AUTO
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:389  
        18 011010   000063 036003                    ADLQ    51,DU
        18 011011   000002 757000 xsym               STAQ    DISK_WRITE+2

     2798    21802    8                        NBR_CONSEC_GRANS = 0;

  21802 18 011012   200064 450100                    STZ     NBR_CONSEC_GRANS,,AUTO

     2799    21803    9                        DO WHILE( ARS > 0);

  21803 18 011013   200046 235100                    LDA     ARS,,AUTO
        18 011014   011045 604400 18                 TMOZ    s:21823

     2800    21804    9                           IF BUF_.PTR$->GRAN_KEY ~= -1

  21804 18 011015   200045 470500                    LDP0    BUF_+1,,AUTO
        18 011016   000000 235100                    LDA     0,,PR0
        18 011017   000027 115000 xsym               CMPA    B_VECTNIL+23
        18 011020   011031 600000 18                 TZE     s:21814

     2801    21805   10                            THEN DO;

     2802    21806   10                              IF NBR_CONSEC_GRANS = 0

  21806 18 011021   200064 236100                    LDQ     NBR_CONSEC_GRANS,,AUTO
        18 011022   011027 601000 18                 TNZ     s:21811

     2803    21807   11                               THEN DO;

     2804    21808   11                                 DISK_WRITE.BUF_ = BUF_;

  21808 18 011023   200044 237100                    LDAQ    BUF_,,AUTO
        18 011024   000004 757000 xsym               STAQ    DISK_WRITE+4

     2805    21809   11                                 DISK_KEY = BUF_.PTR$->GRAN_KEY;

  21809 18 011025   000000 235100                    LDA     0,,PR0
        18 011026   200063 755100                    STA     DISK_KEY,,AUTO
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:390  

     2806    21810   11                                 END;

     2807    21811   10                              NBR_CONSEC_GRANS = NBR_CONSEC_GRANS + 1;

  21811 18 011027   200064 054100                    AOS     NBR_CONSEC_GRANS,,AUTO

     2808    21812   10                              END;

  21812 18 011030   011036 710000 18                 TRA     s:21820

     2809    21813   10                            ELSE DO;

     2810    21814   10                              IF NBR_CONSEC_GRANS > 0

  21814 18 011031   200064 236100                    LDQ     NBR_CONSEC_GRANS,,AUTO
        18 011032   011036 604400 18                 TMOZ    s:21820

     2811    21815   11                               THEN DO;

     2812    21816   11                                 CALL FLM_WR_GRANS;

  21816 18 011033   011605 701000 18                 TSX1    FLM_WR_GRANS
        18 011034   000000 011000                    NOP     0

     2813    21817   11                                 NBR_CONSEC_GRANS = 0;

  21817 18 011035   200064 450100                    STZ     NBR_CONSEC_GRANS,,AUTO

     2814    21818   11                                 END;

     2815    21819   10                              END;

     2816    21820    9                           ARS = ARS - 4096;

  21820 18 011036   010000 336007                    LCQ     4096,DL
        18 011037   200046 056100                    ASQ     ARS,,AUTO
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:391  

     2817    21821    9                           BUF_.PTR$ = PINCRW( BUF_.PTR$, 1024 );

  21821 18 011040   200045 236100                    LDQ     BUF_+1,,AUTO
        18 011041   002000 036003                    ADLQ    1024,DU
        18 011042   200045 756100                    STQ     BUF_+1,,AUTO

     2818    21822    9                           END;

  21822 18 011043   200046 235100                    LDA     ARS,,AUTO
        18 011044   011015 605400 18                 TPNZ    s:21804

     2819    21823    8                        IF NBR_CONSEC_GRANS > 0

  21823 18 011045   200064 236100                    LDQ     NBR_CONSEC_GRANS,,AUTO
        18 011046   011051 604400 18                 TMOZ    s:21825

     2820    21824    8                         THEN CALL FLM_WR_GRANS;

  21824 18 011047   011605 701000 18                 TSX1    FLM_WR_GRANS
        18 011050   000000 011000                    NOP     0

     2821    21825    8                        CALL FLI$RETURN_BUF( BIX );

  21825 18 011051   200004 630500                    EPPR0   BIX,,AUTO
        18 011052   200124 450500                    STP0    @DISP+1,,AUTO
        18 011053   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 011054   000017 631400 xsym               EPPR1   B_VECTNIL+15
        18 011055   000000 701000 xent               TSX1    FLI$RETURN_BUF
        18 011056   000000 011000                    NOP     0

     2822    21826    8                        END;

     2823    21827    7                     END;

     2824    21828    6                  END;

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:392  
  21828 18 011057   200020 235100                    LDA     ERR,,AUTO
        18 011060   010666 600000 18                 TZE     s:21763

     2825    21829    5               END;

     2826    21830    4            END;

  21830 18 011061   011341 710000 18                 TRA     s:21924

     2827    21831    4          ELSE DO;

     2828    21832    4            IF F$DCB.ORG# ~= %RANDOM# AND F$DCB.ORG# ~= %RELATIVE# AND F$DCB.ORG# ~= %
             21832                     IDS#

  21832 18 011062   200061 470500                    LDP0    M$DISK_OUT$,,AUTO
        18 011063   000032 236100                    LDQ     26,,PR0
        18 011064   777000 376003                    ANQ     -512,DU
        18 011065   003000 116003                    CMPQ    1536,DU
        18 011066   011143 600000 18                 TZE     s:21852
        18 011067   005000 116003                    CMPQ    2560,DU
        18 011070   011143 600000 18                 TZE     s:21852
        18 011071   007000 116003                    CMPQ    3584,DU
        18 011072   011143 600000 18                 TZE     s:21852

     2829    21833    5             THEN DO;

     2830    21834    5               DISK_WRITE.KEY_ = VECTOR(NIL);

  21834 18 011073   000024 237000 19                 LDAQ    20
        18 011074   000002 757000 xsym               STAQ    DISK_WRITE+2

     2831    21835    6               DO WHILE( NOT ERR );

  21835 18 011075   011140 710000 18                 TRA     s:21849

     2832    21836    6                  CALL FLC$TAPE_READ_NEXT( BUF_, ARS, ERR )

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:393  
  21836 18 011076   200020 630500                    EPPR0   ERR,,AUTO
        18 011077   200126 450500                    STP0    @DISP+3,,AUTO
        18 011100   200046 631500                    EPPR1   ARS,,AUTO
        18 011101   200125 451500                    STP1    @DISP+2,,AUTO
        18 011102   200044 633500                    EPPR3   BUF_,,AUTO
        18 011103   200124 453500                    STP3    @DISP+1,,AUTO
        18 011104   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 011105   000021 631400 xsym               EPPR1   B_VECTNIL+17
        18 011106   000000 701000 xent               TSX1    FLC$TAPE_READ_NEXT
        18 011107   011140 702000 18                 TSX2    s:21849

     2833    21837    7                   WHENRETURN DO;

     2834    21838    7                     DISK_WRITE.BUF_ = BUF_;

  21838 18 011110   200044 237100                    LDAQ    BUF_,,AUTO
        18 011111   000004 757000 xsym               STAQ    DISK_WRITE+4

     2835    21839    7                     DISK_WRITE.BUF_.BOUND = ARS - 1;

  21839 18 011112   200046 236100                    LDQ     ARS,,AUTO
        18 011113   000001 136007                    SBLQ    1,DL
        18 011114   000020 736000                    QLS     16
        18 011115   000004 676000 xsym               ERQ     DISK_WRITE+4
        18 011116   000034 376000 xsym               ANQ     B_VECTNIL+28
        18 011117   000004 656000 xsym               ERSQ    DISK_WRITE+4

     2836    21840    7                     CALL M$WRITE( DISK_WRITE )

  21840 18 011120   000000 630400 xsym               EPPR0   DISK_WRITE
        18 011121   440001 713400                    CLIMB   alt,write
        18 011122   401400 401760                    pmme    nvectors=4
        18 011123   011125 702000 18                 TSX2    s:21842
        18 011124   011137 710000 18                 TRA     s:21846

     2837    21841    8                      WHENALTRETURN DO;

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:394  
     2838    21842    8                        ERR = B$TCB.ALT$->B$ALT.ERR;

  21842 18 011125   000000 470400 xsym               LDP0    B$TCB$
        18 011126   000000 471500                    LDP1    0,,PR0
        18 011127   100102 236100                    LDQ     66,,PR1
        18 011130   200020 756100                    STQ     ERR,,AUTO

     2839    21843    8                        IF FPT_EXIT.V.STEPCC# < %DISK_ERROR

  21843 18 011131   000004 236000 xsym               LDQ     FPT_EXIT+4
        18 011132   777000 376003                    ANQ     -512,DU
        18 011133   003000 116003                    CMPQ    1536,DU
        18 011134   011137 603000 18                 TRC     s:21846

     2840    21844    8                         THEN FPT_EXIT.V.STEPCC# = %DISK_ERROR;

  21844 18 011135   003000 236003                    LDQ     1536,DU
        18 011136   000004 552040 xsym               STBQ    FPT_EXIT+4,'40'O

     2841    21845    8                        END;

     2842    21846    7                     END;

  21846 18 011137   011140 710000 18                 TRA     s:21849

     2843    21847    7                   WHENALTRETURN DO;

     2844    21848    7                     END;

     2845    21849    6                  END;

  21849 18 011140   200020 235100                    LDA     ERR,,AUTO
        18 011141   011076 600000 18                 TZE     s:21836

     2846    21850    5               END;

  21850 18 011142   011341 710000 18                 TRA     s:21924
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:395  

     2847    21851    5             ELSE DO;       /* Individual granules file RANDOM, RELATIVE, or IDS */

     2848    21852    5               IF F$DCB.ORG# = %IDS# AND SOURCE_FILE_TYPE = %IDS_FAST_FILE

  21852 18 011143   007000 116003                    CMPQ    3584,DU
        18 011144   011171 601000 18                 TNZ     s:21859
        18 011145   200023 235100                    LDA     SOURCE_FILE_TYPE,,AUTO
        18 011146   000011 115007                    CMPA    9,DL
        18 011147   011171 601000 18                 TNZ     s:21859
        18 011150   000001 236000 xsym               LDQ     TAPE_OPTION+1
        18 011151   700000 376003                    ANQ     -32768,DU
        18 011152   300000 116003                    CMPQ    98304,DU
        18 011153   011171 601000 18                 TNZ     s:21859

     2849    21853    5                 AND TAPE_OPTION.PROTTYPE = %INCREMENTAL
     2850    21854    6                THEN DO;

     2851    21855    6                  IDS_FAST_INCR = %YES#;

  21855 18 011154   400000 236003                    LDQ     -131072,DU
        18 011155   200110 756100                    STQ     IDS_FAST_INCR,,AUTO

     2852    21856    6                  CALL FLI$ALLOC_BUF( IDS_GRANULE_, 1 );

  21856 18 011156   000001 236000 19                 LDQ     1
        18 011157   200125 756100                    STQ     @DISP+2,,AUTO
        18 011160   200106 631500                    EPPR1   IDS_GRANULE_,,AUTO
        18 011161   200124 451500                    STP1    @DISP+1,,AUTO
        18 011162   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 011163   000020 631400 xsym               EPPR1   B_VECTNIL+16
        18 011164   000000 701000 xent               TSX1    FLI$ALLOC_BUF
        18 011165   000000 011000                    NOP     0

     2853    21857    6                  READ_IDS_FILE.BUF_ = IDS_GRANULE_;

  21857 18 011166   200106 237100                    LDAQ    IDS_GRANULE_,,AUTO
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:396  
        18 011167   003502 757000 2                  STAQ    READ_IDS_FILE+4

     2854    21858    6                  END;

  21858 18 011170   011172 710000 18                 TRA     s:21860

     2855    21859    5                ELSE IDS_FAST_INCR = %NO#;

  21859 18 011171   200110 450100                    STZ     IDS_FAST_INCR,,AUTO

     2856    21860    5               DISK_WRITE.KEY_ = VECTOR(DISK_KEY);

  21860 18 011172   777640 235007                    LDA     -96,DL
        18 011173   200124 452500                    STP2    @DISP+1,,AUTO
        18 011174   200124 236100                    LDQ     @DISP+1,,AUTO
        18 011175   000063 036003                    ADLQ    51,DU
        18 011176   000002 757000 xsym               STAQ    DISK_WRITE+2

     2857    21861    6   READ_LOOP:  DO WHILE( NOT ERR );

  21861 18 011177   011337 710000 18    READ_LOOP    TRA     s:21921

     2858    21862    6                  CALL FLC$TAPE_READ_NEXT( BUF_, ARS, ERR )

  21862 18 011200   200020 630500                    EPPR0   ERR,,AUTO
        18 011201   200126 450500                    STP0    @DISP+3,,AUTO
        18 011202   200046 631500                    EPPR1   ARS,,AUTO
        18 011203   200125 451500                    STP1    @DISP+2,,AUTO
        18 011204   200044 633500                    EPPR3   BUF_,,AUTO
        18 011205   200124 453500                    STP3    @DISP+1,,AUTO
        18 011206   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 011207   000021 631400 xsym               EPPR1   B_VECTNIL+17
        18 011210   000000 701000 xent               TSX1    FLC$TAPE_READ_NEXT
        18 011211   011337 702000 18                 TSX2    s:21921

     2859    21863    7                   WHENRETURN DO;

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:397  
     2860    21864        /***
     2861    21865         *** Skip past unwritten granules at beginning of file.
     2862    21866         ***/
     2863    21867    8                     DO WHILE( ARS > 0 AND BUF_.PTR$->GRAN_KEY = -1 );

  21867 18 011212   011220 710000 18                 TRA     s:21870

     2864    21868    8                        ARS = ARS - 4096;

  21868 18 011213   010000 336007                    LCQ     4096,DL
        18 011214   200046 056100                    ASQ     ARS,,AUTO

     2865    21869    8                        BUF_.PTR$ = PINCRW( BUF_.PTR$, 1024 );

  21869 18 011215   200045 236100                    LDQ     BUF_+1,,AUTO
        18 011216   002000 036003                    ADLQ    1024,DU
        18 011217   200045 756100                    STQ     BUF_+1,,AUTO

     2866    21870    8                        END;

  21870 18 011220   200046 235100                    LDA     ARS,,AUTO
        18 011221   011226 604400 18                 TMOZ    s:21877
        18 011222   200045 470500                    LDP0    BUF_+1,,AUTO
        18 011223   000000 235100                    LDA     0,,PR0
        18 011224   000027 115000 xsym               CMPA    B_VECTNIL+23
        18 011225   011213 600000 18                 TZE     s:21868

     2867    21871        /***
     2868    21872         *** If restoring an IDS file incrementally which was backed up IDS(FAST),
     2869    21873         *** then get the next granule which is qualified for the restore
     2870    21874         *** (source granule must be newer than the destination granule or the source
     2871    21875         *** source granule is written and the destination granule is unwritten).
     2872    21876        */
     2873    21877    7                     IF IDS_FAST_INCR

  21877 18 011226   200110 234100                    SZN     IDS_FAST_INCR,,AUTO
        18 011227   011234 605000 18                 TPL     s:21884
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:398  

     2874    21878    8                      THEN DO;

     2875    21879    8                        CALL FLM_GET_NEXT_QUAL_GRAN

  21879 18 011230   011636 701000 18                 TSX1    FLM_GET_NEXT_QUAL_GRAN
        18 011231   011233 702000 18                 TSX2    s:21881
        18 011232   011234 710000 18                 TRA     s:21884

     2876    21880    9                         WHENALTRETURN DO;

     2877    21881    9                           EXIT READ_LOOP;

  21881 18 011233   011341 710000 18                 TRA     s:21924

     2878    21882    9                           END;
     2879    21883    8                        END;

     2880    21884    7                     IF ARS = 0

  21884 18 011234   200046 235100                    LDA     ARS,,AUTO
        18 011235   011177 600000 18                 TZE     READ_LOOP

     2881    21885    7                      THEN GOTO READ_LOOP; /* No qual. or unwritten grans. fnd.  */
     2882    21886    7                     DISK_WRITE.BUF_ = BUF_;

  21886 18 011236   200044 237100                    LDAQ    BUF_,,AUTO
        18 011237   000004 757000 xsym               STAQ    DISK_WRITE+4

     2883    21887    7                     DISK_KEY = BUF_.PTR$->GRAN_KEY;

  21887 18 011240   200045 470500                    LDP0    BUF_+1,,AUTO
        18 011241   000000 235100                    LDA     0,,PR0
        18 011242   200063 755100                    STA     DISK_KEY,,AUTO

     2884    21888    7                     NBR_CONSEC_GRANS = 1;

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:399  
  21888 18 011243   000001 235007                    LDA     1,DL
        18 011244   200064 755100                    STA     NBR_CONSEC_GRANS,,AUTO

     2885    21889    7                     ARS = ARS - 4096;

  21889 18 011245   010000 336007                    LCQ     4096,DL
        18 011246   200046 056100                    ASQ     ARS,,AUTO

     2886    21890    8   WRITE_LOOP:       DO WHILE( ARS > 0 AND NOT ERR );

  21890 18 011247   011325 710000 18    WRITE_LOOP   TRA     s:21915

     2887    21891    8                        BUF_.PTR$ = PINCRW( BUF_.PTR$, 1024 );

  21891 18 011250   200045 236100                    LDQ     BUF_+1,,AUTO
        18 011251   002000 036003                    ADLQ    1024,DU
        18 011252   200045 756100                    STQ     BUF_+1,,AUTO

     2888    21892    8                        IF IDS_FAST_INCR

  21892 18 011253   200110 234100                    SZN     IDS_FAST_INCR,,AUTO
        18 011254   011261 605000 18                 TPL     s:21899

     2889    21893    9                         THEN DO;

     2890    21894    9                           CALL FLM_GET_NEXT_QUAL_GRAN /* Get next qualified gran. */

  21894 18 011255   011636 701000 18                 TSX1    FLM_GET_NEXT_QUAL_GRAN
        18 011256   011260 702000 18                 TSX2    s:21896
        18 011257   011261 710000 18                 TRA     s:21899

     2891    21895   10                            WHENALTRETURN DO;

     2892    21896   10                              EXIT WRITE_LOOP;

  21896 18 011260   011330 710000 18                 TRA     s:21916

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:400  
     2893    21897   10                              END;
     2894    21898    9                           END;

     2895    21899    8                        IF BUF_.PTR$->GRAN_KEY = DISK_KEY + NBR_CONSEC_GRANS

  21899 18 011261   200063 236100                    LDQ     DISK_KEY,,AUTO
        18 011262   200064 036100                    ADLQ    NBR_CONSEC_GRANS,,AUTO
        18 011263   200045 470500                    LDP0    BUF_+1,,AUTO
        18 011264   000000 116100                    CMPQ    0,,PR0
        18 011265   011272 601000 18                 TNZ     s:21903
        18 011266   200046 235100                    LDA     ARS,,AUTO
        18 011267   011272 600000 18                 TZE     s:21903

     2896    21900    8                          AND ARS ~= 0
     2897    21901    8                         THEN NBR_CONSEC_GRANS = NBR_CONSEC_GRANS + 1;

  21901 18 011270   200064 054100                    AOS     NBR_CONSEC_GRANS,,AUTO
        18 011271   011323 710000 18                 TRA     s:21914

     2898    21902    9                         ELSE DO;

     2899    21903    9                           CALL FLM_WR_GRANS;

  21903 18 011272   011605 701000 18                 TSX1    FLM_WR_GRANS
        18 011273   000000 011000                    NOP     0

     2900    21904   10                           DO WHILE( ARS > 0 AND BUF_.PTR$->GRAN_KEY = -1 );

  21904 18 011274   011302 710000 18                 TRA     s:21907

     2901    21905   10                              ARS = ARS - 4096;

  21905 18 011275   010000 336007                    LCQ     4096,DL
        18 011276   200046 056100                    ASQ     ARS,,AUTO

     2902    21906   10                              BUF_.PTR$ = PINCRW( BUF_.PTR$, 1024 );

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:401  
  21906 18 011277   200045 236100                    LDQ     BUF_+1,,AUTO
        18 011300   002000 036003                    ADLQ    1024,DU
        18 011301   200045 756100                    STQ     BUF_+1,,AUTO

     2903    21907   10                              END;

  21907 18 011302   200046 235100                    LDA     ARS,,AUTO
        18 011303   011310 604400 18                 TMOZ    s:21908
        18 011304   200045 470500                    LDP0    BUF_+1,,AUTO
        18 011305   000000 235100                    LDA     0,,PR0
        18 011306   000027 115000 xsym               CMPA    B_VECTNIL+23
        18 011307   011275 600000 18                 TZE     s:21905

     2904    21908    9                           DISK_WRITE.BUF_ = BUF_;

  21908 18 011310   200044 237100                    LDAQ    BUF_,,AUTO
        18 011311   000004 757000 xsym               STAQ    DISK_WRITE+4

     2905    21909    9                           DISK_KEY = BUF_.PTR$->GRAN_KEY;

  21909 18 011312   200045 470500                    LDP0    BUF_+1,,AUTO
        18 011313   000000 235100                    LDA     0,,PR0
        18 011314   200063 755100                    STA     DISK_KEY,,AUTO

     2906    21910    9                           IF ARS ~= 0

  21910 18 011315   200046 235100                    LDA     ARS,,AUTO
        18 011316   011322 600000 18                 TZE     s:21912

     2907    21911    9                            THEN NBR_CONSEC_GRANS = 1;

  21911 18 011317   000001 235007                    LDA     1,DL
        18 011320   200064 755100                    STA     NBR_CONSEC_GRANS,,AUTO
        18 011321   011323 710000 18                 TRA     s:21914

     2908    21912    9                            ELSE NBR_CONSEC_GRANS = 0;

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:402  
  21912 18 011322   200064 450100                    STZ     NBR_CONSEC_GRANS,,AUTO

     2909    21913    9                           END;

     2910    21914    8                        ARS = ARS - 4096;

  21914 18 011323   010000 336007                    LCQ     4096,DL
        18 011324   200046 056100                    ASQ     ARS,,AUTO

     2911    21915    8                        END;

  21915 18 011325   011330 604400 18                 TMOZ    s:21916
        18 011326   200020 235100                    LDA     ERR,,AUTO
        18 011327   011250 600000 18                 TZE     s:21891

     2912    21916    7                     IF NOT ERR AND NBR_CONSEC_GRANS ~= 0

  21916 18 011330   200020 235100                    LDA     ERR,,AUTO
        18 011331   011336 601000 18                 TNZ     s:21918
        18 011332   200064 236100                    LDQ     NBR_CONSEC_GRANS,,AUTO
        18 011333   011336 600000 18                 TZE     s:21918

     2913    21917    7                      THEN CALL FLM_WR_GRANS;

  21917 18 011334   011605 701000 18                 TSX1    FLM_WR_GRANS
        18 011335   000000 011000                    NOP     0

     2914    21918    7                     END;

  21918 18 011336   011337 710000 18                 TRA     s:21921

     2915    21919    7                   WHENALTRETURN DO;

     2916    21920    7                     END;

     2917    21921    6                  END;

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:403  
  21921 18 011337   200020 235100                    LDA     ERR,,AUTO
        18 011340   011200 600000 18                 TZE     s:21862

     2918    21922    5               END;

     2919    21923    4            END;

     2920    21924    4         DO CASE( SOURCE_FILE_TYPE );

  21924 18 011341   200023 235100                    LDA     SOURCE_FILE_TYPE,,AUTO
        18 011342   000012 115007                    CMPA    10,DL
        18 011343   011345 602005 18                 TNC     s:21924+4,AL
        18 011344   011537 710000 18                 TRA     s:21992
        18 011345   011357 710000 18                 TRA     s:21931
        18 011346   011535 710000 18                 TRA     s:21990
        18 011347   011520 710000 18                 TRA     s:21982
        18 011350   011357 710000 18                 TRA     s:21931
        18 011351   011537 710000 18                 TRA     s:21992
        18 011352   011537 710000 18                 TRA     s:21992
        18 011353   011537 710000 18                 TRA     s:21992
        18 011354   011537 710000 18                 TRA     s:21992
        18 011355   011535 710000 18                 TRA     s:21990
        18 011356   011357 710000 18                 TRA     s:21931

     2921    21925    4          CASE( %REG_FILE, %ACUP_FILE, %IDS_FAST_FILE );

     2922    21926        /***
     2923    21927         *** If only part of a tape file is restored, delete for the following conditions:
     2924    21928        *** 1. File spans tape volumes but user only specified a single tape (LT - not CT).
     2925    21929         *** 2. I/O error on a file restore.
     2926    21930        ***/
     2927    21931    4            IF ERR.CODE = %E$VOLORDER

  21931 18 011357   200020 236100                    LDQ     ERR,,AUTO
        18 011360   377770 376007                    ANQ     131064,DL
        18 011361   013300 116007                    CMPQ    5824,DL
        18 011362   011365 600000 18                 TZE     s:21933
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:404  
        18 011363   000100 116007                    CMPQ    64,DL
        18 011364   011370 601000 18                 TNZ     s:21934

     2928    21932    4              OR ERR.CODE = %E$IOERR
     2929    21933    4             THEN DISK_CLOSE.V.DISP# = %RELEASE#;

  21933 18 011365   000001 236007                    LDQ     1,DL
        18 011366   000032 552004 xsym               STBQ    DISK_CLOSE+26,'04'O
        18 011367   011372 710000 18                 TRA     s:21935

     2930    21934    4             ELSE DISK_CLOSE.V.DISP# = %SAVE#;

  21934 18 011370   000002 236007                    LDQ     2,DL
        18 011371   000032 552004 xsym               STBQ    DISK_CLOSE+26,'04'O

     2931    21935    4            IF COMMAND = %RETRIEVE

  21935 18 011372   200003 470500                    LDP0    @COMMAND,,AUTO
        18 011373   000000 235100                    LDA     0,,PR0
        18 011374   000034 115007                    CMPA    28,DL
        18 011375   011537 601000 18                 TNZ     s:21992

     2932    21936    4             THEN IF NOT DISK_OPTION.SCRUB.STOW

  21936 18 011376   000002 236000 xsym               LDQ     DISK_OPTION+2
        18 011377   100000 316003                    CANQ    32768,DU
        18 011400   011474 601000 18                 TNZ     s:21971
        18 011401   200020 236100                    LDQ     ERR,,AUTO
        18 011402   377770 376007                    ANQ     131064,DL
        18 011403   002140 116007                    CMPQ    1120,DL
        18 011404   011474 600000 18                 TZE     s:21971
        18 011405   000100 116007                    CMPQ    64,DL
        18 011406   011474 600000 18                 TZE     s:21971

     2933    21937    4                 AND ERR.CODE ~= %E$PSGRANS
     2934    21938    4                 AND ERR.CODE ~= %E$IOERR
     2935    21939        /***
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:405  
     2936    21940         *** Move source file descriptors to dest. file and update stow info.
     2937    21941         *** Also must remember if file was stowed to tape or opt. disk and set
     2938    21942         *** desc. bit accordingly. This done in case a reSTOW is performed prior
     2939    21943         *** to an UNARCHIVE in which case file does not have to be rearchived.
     2940    21944         ***/
     2941    21945    5                THEN DO;

     2942    21946    5                  MODIFIED_FIT_ = SAVE_FIT_;

  21946 18 011407   200026 237100                    LDAQ    SAVE_FIT_,,AUTO
        18 011410   200034 757100                    STAQ    MODIFIED_FIT_,,AUTO

     2943    21947    5                  FIT$ = PINCRW(MODIFIED_FIT_.PTR$,SIZEW(FM$GRAN));

  21947 18 011411   200035 236100                    LDQ     MODIFIED_FIT_+1,,AUTO
        18 011412   000005 036003                    ADLQ    5,DU
        18 011413   200015 756100                    STQ     FIT$,,AUTO

     2944    21948    5                  CODE$ = FIT$;

  21948 18 011414   200006 756100                    STQ     CODE$,,AUTO

     2945    21949    5                  CODE = 06;

  21949 18 011415   000006 235007                    LDA     6,DL
        18 011416   200005 755100                    STA     CODE,,AUTO

     2946    21950    5                  CALL XSF$LOCCODE( CODE$, CODE)

  21950 18 011417   200005 631500                    EPPR1   CODE,,AUTO
        18 011420   200125 451500                    STP1    @DISP+2,,AUTO
        18 011421   200006 633500                    EPPR3   CODE$,,AUTO
        18 011422   200124 453500                    STP3    @DISP+1,,AUTO
        18 011423   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 011424   000020 631400 xsym               EPPR1   B_VECTNIL+16
        18 011425   000000 701000 xent               TSX1    XSF$LOCCODE
        18 011426   011473 702000 18                 TSX2    s:21965
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:406  

     2947    21951    6                   WHENRETURN DO;

     2948    21952    6                     FM$FIT.CODES.NDW(CODE) = SIZEW(CODE06);

  21952 18 011427   200015 470500                    LDP0    FIT$,,AUTO
        18 011430   200005 720100                    LXL0    CODE,,AUTO
        18 011431   000000 236110                    LDQ     0,X0,PR0
        18 011432   000121 376000 19                 ANQ     81
        18 011433   006000 276007                    ORQ     3072,DL
        18 011434   000000 756110                    STQ     0,X0,PR0

     2949    21953    6                     CODE06 = DISK_CODE06$->CODE06;

  21953 18 011435   200010 471500                    LDP1    DISK_CODE06$,,AUTO
        18 011436   200006 473500                    LDP3    CODE$,,AUTO
        18 011437   000100 100500                    MLR     fill='000'O
        18 011440   100000 000014                    ADSC9   0,,PR1                   cn=0,n=12
        18 011441   300000 000014                    ADSC9   0,,PR3                   cn=0,n=12

     2950    21954    6                    MODIFIED_FIT_.PTR$ = PINCRW( MODIFIED_FIT_.PTR$, SIZEW(FM$GRAN) );

  21954 18 011442   200035 236100                    LDQ     MODIFIED_FIT_+1,,AUTO
        18 011443   000005 036003                    ADLQ    5,DU
        18 011444   200035 756100                    STQ     MODIFIED_FIT_+1,,AUTO

     2951    21955    6                     MODIFIED_FIT_.BOUND = MODIFIED_FIT_.BOUND - SIZEC(FM$GRAN);

  21955 18 011445   200034 236100                    LDQ     MODIFIED_FIT_,,AUTO
        18 011446   000020 772000                    QRL     16
        18 011447   000024 136007                    SBLQ    20,DL
        18 011450   000020 736000                    QLS     16
        18 011451   200034 676100                    ERQ     MODIFIED_FIT_,,AUTO
        18 011452   000034 376000 xsym               ANQ     B_VECTNIL+28
        18 011453   200034 656100                    ERSQ    MODIFIED_FIT_,,AUTO

     2952    21956    6                     DISK_CLOSE.IFPARAM_ = MODIFIED_FIT_;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:407  

  21956 18 011454   200034 237100                    LDAQ    MODIFIED_FIT_,,AUTO
        18 011455   000026 757000 xsym               STAQ    DISK_CLOSE+22

     2953    21957    6                     DISK_CLOSE.V.DESC = SOURCE_DCB$->F$DCB.DESC;

  21957 18 011456   200014 473500                    LDP3    SOURCE_DCB$,,AUTO
        18 011457   300005 720100                    LXL0    5,,PR3
        18 011460   000033 740000 xsym               STX0    DISK_CLOSE+27

     2954    21958    6                     IF DISK_DESC_SAVE.ODSTOW#

  21958 18 011461   000000 236000 xsym               LDQ     DISK_DESC_SAVE
        18 011462   040000 316003                    CANQ    16384,DU
        18 011463   011466 600000 18                 TZE     s:21960

     2955    21959    6                      THEN DISK_CLOSE.V.DESC.ODSTOW# = '1'B;

  21959 18 011464   040000 236003                    LDQ     16384,DU
        18 011465   000033 256000 xsym               ORSQ    DISK_CLOSE+27

     2956    21960    6                     DISK_CLOSE.V.DESC.QS# = '0'B;

  21960 18 011466   000122 236000 19                 LDQ     82
        18 011467   000033 356000 xsym               ANSQ    DISK_CLOSE+27

     2957    21961    6                     DISK_CLOSE.V.EFTOPER.UPDDESC# = '1'B;

  21961 18 011470   004000 236007                    LDQ     2048,DL
        18 011471   000032 256000 xsym               ORSQ    DISK_CLOSE+26

     2958    21962    6                     END;

  21962 18 011472   011473 710000 18                 TRA     s:21965

     2959    21963    6                   WHENALTRETURN DO;

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:408  
     2960    21964    6                     END;

     2961    21965    5                  END;

  21965 18 011473   011537 710000 18                 TRA     s:21992

     2962    21966    5                ELSE DO;

     2963    21967        /***
     2964    21968         *** Delete partially retrieved file to regain disk space and recreate
     2965    21969         *** file using previous archival info. with QF status.
     2966    21970         ***/
     2967    21971    5                  IF B$TCB.ALT$->B$ALT.ERR.CODE = %E$PSGRANS

  21971 18 011474   000000 471400 xsym               LDP1    B$TCB$
        18 011475   100000 473500                    LDP3    0,,PR1
        18 011476   300102 236100                    LDQ     66,,PR3
        18 011477   377770 376007                    ANQ     131064,DL
        18 011500   002140 116007                    CMPQ    1120,DL
        18 011501   011506 600000 18                 TZE     s:21974
        18 011502   200020 236100                    LDQ     ERR,,AUTO
        18 011503   377770 376007                    ANQ     131064,DL
        18 011504   000100 116007                    CMPQ    64,DL
        18 011505   011537 601000 18                 TNZ     s:21992

     2968    21972    5                    OR ERR.CODE = %E$IOERR
     2969    21973    6                   THEN DO;

     2970    21974    6                     GOING_TO_DEST = '0'B;

  21974 18 011506   200042 450100                    STZ     GOING_TO_DEST,,AUTO

     2971    21975    6                     IF B$TCB.ALT$->B$ALT.ERR.CODE = %E$PSGRANS

  21975 18 011507   300102 236100                    LDQ     66,,PR3
        18 011510   377770 376007                    ANQ     131064,DL
        18 011511   002140 116007                    CMPQ    1120,DL
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:409  
        18 011512   011515 601000 18                 TNZ     s:21977

     2972    21976    6                      THEN ERR = B$TCB.ALT$->B$ALT.ERR;

  21976 18 011513   300102 236100                    LDQ     66,,PR3
        18 011514   200020 756100                    STQ     ERR,,AUTO

     2973    21977    6                     CALL FLM_RECREATE_QF_FILE;

  21977 18 011515   011720 701000 18                 TSX1    FLM_RECREATE_QF_FILE
        18 011516   000000 011000                    NOP     0

     2974    21978    6                     END;

     2975    21979    5                  END;

  21979 18 011517   011537 710000 18                 TRA     s:21992

     2976    21980    4             ELSE;
     2977    21981    4          CASE( %INACTIVE_FILE );

     2978    21982    4            DISK_CLOSE.V.DISP# = %SAVE#;

  21982 18 011520   000002 236007                    LDQ     2,DL
        18 011521   000032 552004 xsym               STBQ    DISK_CLOSE+26,'04'O

     2979    21983    4            DISK_CLOSE.V.EFTOPER.ISTOW# = '1'B;

  21983 18 011522   010000 236007                    LDQ     4096,DL
        18 011523   000032 256000 xsym               ORSQ    DISK_CLOSE+26

     2980    21984    4            IF SOURCE_DCB$->F$DCB.DESC.ODSTOW# /* Must set if rstrng archvd file */

  21984 18 011524   200014 470500                    LDP0    SOURCE_DCB$,,AUTO
        18 011525   000005 236100                    LDQ     5,,PR0
        18 011526   040000 316007                    CANQ    16384,DL
        18 011527   011537 600000 18                 TZE     s:21992
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:410  

     2981    21985    5             THEN DO;

     2982    21986    5               DISK_CLOSE.V.DESC.ODSTOW# = '1'B;

  21986 18 011530   040000 236003                    LDQ     16384,DU
        18 011531   000033 256000 xsym               ORSQ    DISK_CLOSE+27

     2983    21987    5               DISK_CLOSE.V.EFTOPER.UPDDESC# = '1'B;

  21987 18 011532   004000 236007                    LDQ     2048,DL
        18 011533   000032 256000 xsym               ORSQ    DISK_CLOSE+26

     2984    21988    5               END;

  21988 18 011534   011537 710000 18                 TRA     s:21992

     2985    21989    4          CASE( %DEL_FILE, %CLEANUP_FILE );

     2986    21990    4            DISK_CLOSE.V.DISP# = %RELEASE#;

  21990 18 011535   000001 236007                    LDQ     1,DL
        18 011536   000032 552004 xsym               STBQ    DISK_CLOSE+26,'04'O

     2987    21991    4          END;

     2988    21992    3         EFTWORD = '0'B;

  21992 18 011537   000000 220003                    LDX0    0,DU
        18 011540   000000 740000 xsym               STX0    EFTWORD

     2989    21993    3         IF COMMAND = %RETRIEVE AND DISK_DESC_SAVE.ODSTOW#

  21993 18 011541   200003 470500                    LDP0    @COMMAND,,AUTO
        18 011542   000000 235100                    LDA     0,,PR0
        18 011543   000034 115007                    CMPA    28,DL
        18 011544   011553 601000 18                 TNZ     s:21995
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:411  
        18 011545   000000 236000 xsym               LDQ     DISK_DESC_SAVE
        18 011546   040000 316003                    CANQ    16384,DU
        18 011547   011553 600000 18                 TZE     s:21995

     2990    21994    3          THEN EFTWORDEXPIRE = SAVE_FSN;   /* FSN is a halfword for OD           */

  21994 18 011550   200040 721100                    LXL1    SAVE_FSN,,AUTO
        18 011551   000000 741000 xsym               STX1    EFTWORD
        18 011552   011560 710000 18                 TRA     s:21996

     2991    21995    3          ELSE EFTWORD.FSN = SAVE_FSN;     /* Probably no longer needed for      */

  21995 18 011553   200040 236100                    LDQ     SAVE_FSN,,AUTO
        18 011554   000022 736000                    QLS     18
        18 011555   000000 676000 xsym               ERQ     EFTWORD
        18 011556   037777 376003                    ANQ     16383,DU
        18 011557   000000 656000 xsym               ERSQ    EFTWORD

     2992    21996    3         SOURCE_TAPE_SN.SN#(0) = SAVE_SN;  /* RETRIEVing as ASTOW# no longer set */

  21996 18 011560   040000 100500                    MLR     fill='040'O
        18 011561   200036 000006                    ADSC9   SAVE_SN,,AUTO            cn=0,n=6
        18 011562   000217 000006 2                  ADSC9   SOURCE_TAPE_SN+1         cn=0,n=6

     2993    21997    3         END;

  21997 18 011563   011603 710000 18                 TRA     s:22004

     2994    21998    3       WHENALTRETURN DO;

     2995    21999    3         GOING_TO_DEST = '0'B;

  21999 18 011564   200042 450100                    STZ     GOING_TO_DEST,,AUTO

     2996    22000    3         ERR = B$TCB.ALT$->B$ALT.ERR;

  22000 18 011565   000000 470400 xsym               LDP0    B$TCB$
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:412  
        18 011566   000000 471500                    LDP1    0,,PR0
        18 011567   100102 236100                    LDQ     66,,PR1
        18 011570   200020 756100                    STQ     ERR,,AUTO

     2997    22001    3         IF COMMAND = %RETRIEVE AND ERR.CODE = %E$PSGRANS

  22001 18 011571   200003 471500                    LDP1    @COMMAND,,AUTO
        18 011572   100000 235100                    LDA     0,,PR1
        18 011573   000034 115007                    CMPA    28,DL
        18 011574   011603 601000 18                 TNZ     s:22004
        18 011575   200020 236100                    LDQ     ERR,,AUTO
        18 011576   377770 376007                    ANQ     131064,DL
        18 011577   002140 116007                    CMPQ    1120,DL
        18 011600   011603 601000 18                 TNZ     s:22004

     2998    22002    3          THEN CALL FLM_RECREATE_QF_FILE;  /* Recreate the file with QF status   */

  22002 18 011601   011720 701000 18                 TSX1    FLM_RECREATE_QF_FILE
        18 011602   000000 011000                    NOP     0

     2999    22003    3         END;

     3000    22004    2      RETURN;

  22004 18 011603   200104 221300                    LDX1  ! DCB#+1,,AUTO
        18 011604   000001 702211                    TSX2  ! 1,X1

     3001    22005
     3002    22006    2   FLM_WR_GRANS: PROC;

  22006 18 011605   200112 741300       FLM_WR_GRANS STX1  ! STATUS_KEY_SAVE,,AUTO

     3003    22007        /*F*  NAME: FLM_WR_GRANS
     3004    22008              PURPOSE: Write specified granules to disk
     3005    22009        */
     3006    22010
     3007    22011        /********************/
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:413  
     3008    22012
     3009    22013    3      DISK_WRITE.BUF_.BOUND = NBR_CONSEC_GRANS * 4096 - 1;

  22013 18 011606   200064 236100                    LDQ     NBR_CONSEC_GRANS,,AUTO
        18 011607   000014 736000                    QLS     12
        18 011610   000001 136007                    SBLQ    1,DL
        18 011611   000020 736000                    QLS     16
        18 011612   000004 676000 xsym               ERQ     DISK_WRITE+4
        18 011613   000034 376000 xsym               ANQ     B_VECTNIL+28
        18 011614   000004 656000 xsym               ERSQ    DISK_WRITE+4

     3010    22014    3      CALL M$WRITE( DISK_WRITE )

  22014 18 011615   000000 630400 xsym               EPPR0   DISK_WRITE
        18 011616   440001 713400                    CLIMB   alt,write
        18 011617   401400 401760                    pmme    nvectors=4
        18 011620   011622 702000 18                 TSX2    s:22016
        18 011621   011634 710000 18                 TRA     s:22020

     3011    22015    4       WHENALTRETURN DO;

     3012    22016    4         ERR = B$TCB.ALT$->B$ALT.ERR;

  22016 18 011622   000000 470400 xsym               LDP0    B$TCB$
        18 011623   000000 471500                    LDP1    0,,PR0
        18 011624   100102 236100                    LDQ     66,,PR1
        18 011625   200020 756100                    STQ     ERR,,AUTO

     3013    22017    4         IF FPT_EXIT.V.STEPCC# < %DISK_ERROR

  22017 18 011626   000004 236000 xsym               LDQ     FPT_EXIT+4
        18 011627   777000 376003                    ANQ     -512,DU
        18 011630   003000 116003                    CMPQ    1536,DU
        18 011631   011634 603000 18                 TRC     s:22020

     3014    22018    4          THEN FPT_EXIT.V.STEPCC# = %DISK_ERROR;

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:414  
  22018 18 011632   003000 236003                    LDQ     1536,DU
        18 011633   000004 552040 xsym               STBQ    FPT_EXIT+4,'40'O

     3015    22019    4         END;

     3016    22020    3      RETURN;

  22020 18 011634   200112 221300                    LDX1  ! STATUS_KEY_SAVE,,AUTO
        18 011635   000001 702211                    TSX2  ! 1,X1

     3017    22021    3   END FLM_WR_GRANS;
     3018    22022
     3019    22023    2   FLM_GET_NEXT_QUAL_GRAN: PROC ALTRET;

  22023 18 011636   200112 741300       FLM_GET_NEX* STX1  ! STATUS_KEY_SAVE,,AUTO

     3020    22024        /*F*  NAME: FLM_GET_NEXT_GRAN
     3021    22025              PURPOSE: Determines the next IDS source granule that may be restored
     3022    22026                 (source granule must be newer than the destination granule).
     3023    22027                 This routine is used solely for IDS incremental restores.
     3024    22028        */
     3025    22029
     3026    22030    3   DCL DEST_GRAN_UTS UBIN WORD AUTO;
     3027    22031    3   DCL GRAN_MOD_TIME UBIN WORD ALIGNED BASED;
     3028    22032        /********************/
     3029    22033
     3030    22034    4      DO WHILE ( ARS > 0 AND NOT ERR );

  22034 18 011637   011712 710000 18                 TRA     s:22060

     3031    22035    4         READ_IDS_FILE.KEY_ = VECTOR(BUF_.PTR$->GRAN_KEY);

  22035 18 011640   777640 235007                    LDA     -96,DL
        18 011641   200045 236100                    LDQ     BUF_+1,,AUTO
        18 011642   003500 757000 2                  STAQ    READ_IDS_FILE+2

     3032    22036    4         CALL M$READ(READ_IDS_FILE)
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:415  

  22036 18 011643   003476 630400 2                  EPPR0   READ_IDS_FILE
        18 011644   440000 713400                    CLIMB   alt,read
        18 011645   401400 401760                    pmme    nvectors=4
        18 011646   011653 702000 18                 TSX2    s:22041

     3033    22037    5          WHENRETURN DO;

     3034    22038    5            DEST_GRAN_UTS = PINCRW(IDS_GRANULE_.PTR$, 1)->GRAN_MOD_TIME;

  22038 18 011647   200107 470500                    LDP0    DP_RUN_NBR,,AUTO
        18 011650   000001 235100                    LDA     1,,PR0
        18 011651   200113 755100                    STA     DEST_GRAN_UTS,,AUTO

     3035    22039    5            END;

  22039 18 011652   011676 710000 18                 TRA     s:22054

     3036    22040    5          WHENALTRETURN DO; /* Error trying to read specified source granule     */

     3037    22041    5            IF B$TCB.ALT$->B$ALT.ERR.CODE = %E$DI

  22041 18 011653   000000 470400 xsym               LDP0    B$TCB$
        18 011654   000000 471500                    LDP1    0,,PR0
        18 011655   100102 236100                    LDQ     66,,PR1
        18 011656   377770 376007                    ANQ     131064,DL
        18 011657   000110 116007                    CMPQ    72,DL
        18 011660   011664 601000 18                 TNZ     s:22047

     3038    22042    6             THEN DO;

     3039    22043    6               ERR = '0'B;

  22043 18 011661   200020 450100                    STZ     ERR,,AUTO

     3040    22044    6               DEST_GRAN_UTS = 0;

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:416  
  22044 18 011662   200113 450100                    STZ     DEST_GRAN_UTS,,AUTO

     3041    22045    6               END;

  22045 18 011663   011676 710000 18                 TRA     s:22054

     3042    22046    6             ELSE DO;

     3043    22047    6               ERR = B$TCB.ALT$->B$ALT.ERR;

  22047 18 011664   100102 236100                    LDQ     66,,PR1
        18 011665   200020 756100                    STQ     ERR,,AUTO

     3044    22048    6               IF FPT_EXIT.V.STEPCC# < %DISK_ERROR

  22048 18 011666   000004 236000 xsym               LDQ     FPT_EXIT+4
        18 011667   777000 376003                    ANQ     -512,DU
        18 011670   003000 116003                    CMPQ    1536,DU
        18 011671   011674 603000 18                 TRC     s:22050

     3045    22049    6                THEN FPT_EXIT.V.STEPCC# = %DISK_ERROR;

  22049 18 011672   003000 236003                    LDQ     1536,DU
        18 011673   000004 552040 xsym               STBQ    FPT_EXIT+4,'40'O

     3046    22050    6               ALTRETURN;

  22050 18 011674   200112 221300                    LDX1  ! STATUS_KEY_SAVE,,AUTO
        18 011675   000000 702211                    TSX2  ! 0,X1

     3047    22051    6               END;
     3048    22052    5            END;
     3049    22053
     3050    22054    4         IF PINCRW(BUF_.PTR$, 1)->GRAN_MOD_TIME <= DEST_GRAN_UTS

  22054 18 011676   200045 470500                    LDP0    BUF_+1,,AUTO
        18 011677   200113 236100                    LDQ     DEST_GRAN_UTS,,AUTO
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:417  
        18 011700   000001 116100                    CMPQ    1,,PR0
        18 011701   011710 602000 18                 TNC     s:22059

     3051    22055    5          THEN DO;

     3052    22056    5            BUF_.PTR$ = PINCRW(BUF_.PTR$, 1024); /* Source gran. is older        */

  22056 18 011702   200045 236100                    LDQ     BUF_+1,,AUTO
        18 011703   002000 036003                    ADLQ    1024,DU
        18 011704   200045 756100                    STQ     BUF_+1,,AUTO

     3053    22057    5            ARS = ARS - 4096;

  22057 18 011705   010000 336007                    LCQ     4096,DL
        18 011706   200046 056100                    ASQ     ARS,,AUTO

     3054    22058    5            END;

  22058 18 011707   011712 710000 18                 TRA     s:22060

     3055    22059    4          ELSE RETURN;                /* Found granule qualified for restoration */

  22059 18 011710   200112 221300                    LDX1  ! STATUS_KEY_SAVE,,AUTO
        18 011711   000001 702211                    TSX2  ! 1,X1

     3056    22060    4         END;

  22060 18 011712   200046 235100                    LDA     ARS,,AUTO
        18 011713   011716 604400 18                 TMOZ    s:22061
        18 011714   200020 236100                    LDQ     ERR,,AUTO
        18 011715   011640 600000 18                 TZE     s:22035

     3057    22061    3      RETURN;               /* Didn't find a granule qualified for restoration   */

  22061 18 011716   200112 221300                    LDX1  ! STATUS_KEY_SAVE,,AUTO
        18 011717   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:418  
     3058    22062    3   END FLM_GET_NEXT_QUAL_GRAN;
     3059    22063
     3060    22064    2   FLM_RECREATE_QF_FILE: PROC;

  22064 18 011720   200112 741300       FLM_RECREAT* STX1  ! STATUS_KEY_SAVE,,AUTO

     3061    22065        /*F* NAME: FLM_RECREATE_QF_FILE:
     3062    22066             PURPOSE: Delete existing file and recreate dummy file - queued for fetch.
     3063    22067        */
     3064    22068
     3065    22069        /********************/
     3066    22070
     3067    22071    3      DISK_CLOSE.V.DISP# = %SAVE#;

  22071 18 011721   000002 236007                    LDQ     2,DL
        18 011722   000032 552004 xsym               STBQ    DISK_CLOSE+26,'04'O

     3068    22072    3      DISK_CLOSE.V.EFTOPER.UPDDESC# = %YES#;

  22072 18 011723   004000 236007                    LDQ     2048,DL
        18 011724   000032 256000 xsym               ORSQ    DISK_CLOSE+26

     3069    22073    3      DISK_CLOSE.V.DESC.TERMINATE# = %YES#;

  22073 18 011725   000020 236003                    LDQ     16,DU
        18 011726   000033 256000 xsym               ORSQ    DISK_CLOSE+27

     3070    22074    3      IF F$DCB.FCD#

  22074 18 011727   200061 470500                    LDP0    M$DISK_OUT$,,AUTO
        18 011730   000031 236100                    LDQ     25,,PR0
        18 011731   020000 316007                    CANQ    8192,DL
        18 011732   011743 600000 18                 TZE     s:22082

     3071    22075    4       THEN DO;

     3072    22076    4         CALL M$CLOSE( DISK_CLOSE )        /* Unarchive to delete file           */
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:419  

  22076 18 011733   000000 630400 xsym               EPPR0   DISK_CLOSE
        18 011734   450001 713400                    CLIMB   alt,close
        18 011735   406000 401760                    pmme    nvectors=13
        18 011736   011740 702000 18                 TSX2    s:22078
        18 011737   011743 710000 18                 TRA     s:22082

     3073    22077    5          WHENALTRETURN DO;

     3074    22078    5            CALL FLI$RPT_ERR;

  22078 18 011740   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 011741   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 011742   000000 011000                    NOP     0

     3075    22079    5            END;

     3076    22080    4         END;

     3077    22081
     3078    22082    3      DISK_OPEN.V.FUN# = %IN#;

  22082 18 011743   002000 236007                    LDQ     1024,DL
        18 011744   000045 552010 xsym               STBQ    DISK_OPEN+37,'10'O

     3079    22083    3      DISK_OPEN.V.SRCHCOND.ANYF# = %NO#;

  22083 18 011745   000123 236000 19                 LDQ     83
        18 011746   000045 356000 xsym               ANSQ    DISK_OPEN+37

     3080    22084    3      DISK_OPEN.V.OPER.NXTF# = %NO#;

  22084 18 011747   000116 236000 19                 LDQ     78
        18 011750   000044 356000 xsym               ANSQ    DISK_OPEN+36

     3081    22085    3      DISK_OPEN.V.OPER.TEST# = %YES#;      /* Delete if file exists              */

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:420  
  22085 18 011751   020000 236007                    LDQ     8192,DL
        18 011752   000044 256000 xsym               ORSQ    DISK_OPEN+36

     3082    22086    3      CALL M$OPEN( DISK_OPEN )

  22086 18 011753   000000 630400 xsym               EPPR0   DISK_OPEN
        18 011754   450000 713400                    CLIMB   alt,open
        18 011755   410400 401760                    pmme    nvectors=18
        18 011756   011771 702000 18                 TSX2    s:22095

     3083    22087    4       WHENRETURN DO;

     3084    22088    4         DISK_OPEN.V.OPER.TEST# = %NO#;

  22088 18 011757   000002 236000 19                 LDQ     2
        18 011760   000044 356000 xsym               ANSQ    DISK_OPEN+36

     3085    22089    4         DISK_OPEN.V.DELETE# = %YES#;

  22089 18 011761   040000 236007                    LDQ     16384,DL
        18 011762   000044 256000 xsym               ORSQ    DISK_OPEN+36

     3086    22090    4         CALL M$OPEN( DISK_OPEN )

  22090 18 011763   000000 630400 xsym               EPPR0   DISK_OPEN
        18 011764   450000 713400                    CLIMB   alt,open
        18 011765   410400 401760                    pmme    nvectors=18
        18 011766   011770 702000 18                 TSX2    s:22093
        18 011767   011770 710000 18                 TRA     s:22093

     3087    22091    5          WHENALTRETURN DO;

     3088    22092    5            END;

     3089    22093    4         END;

  22093 18 011770   011773 710000 18                 TRA     s:22098
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:421  

     3090    22094    4       WHENALTRETURN DO;

     3091    22095    4         DISK_OPEN.V.OPER.TEST# = %NO#;

  22095 18 011771   000002 236000 19                 LDQ     2
        18 011772   000044 356000 xsym               ANSQ    DISK_OPEN+36

     3092    22096    4         END;

     3093    22097
     3094    22098    3      DISK_OPEN.V.FUN# = %CREATE#;         /* Create fake file using same fit    */

  22098 18 011773   003000 236007                    LDQ     1536,DL
        18 011774   000045 552010 xsym               STBQ    DISK_OPEN+37,'10'O

     3095    22099    3      DISK_OPEN.V.DELETE# = %NO#;

  22099 18 011775   000066 236000 19                 LDQ     54
        18 011776   000044 356000 xsym               ANSQ    DISK_OPEN+36

     3096    22100    3      DISK_OPEN.V.ACS# = %BLOCK#;

  22100 18 011777   000003 236007                    LDQ     3,DL
        18 012000   000046 552004 xsym               STBQ    DISK_OPEN+38,'04'O

     3097    22101    3      DISK_OPEN.V.EXPIRE# = -1;

  22101 18 012001   000001 335007                    LCA     1,DL
        18 012002   000057 755000 xsym               STA     DISK_OPEN+47

     3098    22102    3      DISK_OPEN.FPARAM_ = VECTOR(NIL);

  22102 18 012003   000024 237000 19                 LDAQ    20
        18 012004   000030 757000 xsym               STAQ    DISK_OPEN+24

     3099    22103    3      DISK_OPEN.IFPARAM_ = DISK_FIT_;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:422  

  22103 18 012005   200032 237100                    LDAQ    DISK_FIT_,,AUTO
        18 012006   000026 757000 xsym               STAQ    DISK_OPEN+22

     3100    22104    3      CALL M$OPEN( DISK_OPEN )

  22104 18 012007   000000 630400 xsym               EPPR0   DISK_OPEN
        18 012010   450000 713400                    CLIMB   alt,open
        18 012011   410400 401760                    pmme    nvectors=18
        18 012012   012014 702000 18                 TSX2    s:22106
        18 012013   012017 710000 18                 TRA     s:22108

     3101    22105    4       WHENALTRETURN DO;

     3102    22106    4         CALL FLI$RPT_ERR;

  22106 18 012014   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 012015   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 012016   000000 011000                    NOP     0

     3103    22107    4         END;

     3104    22108    3      DISK_OPEN.IFPARAM_ = VECTOR(NIL);

  22108 18 012017   000024 237000 19                 LDAQ    20
        18 012020   000026 757000 xsym               STAQ    DISK_OPEN+22

     3105    22109
     3106    22110    3      DISK_CLOSE.V.DESC = DISK_DESC_SAVE;  /* Update descriptors and CODE06      */

  22110 18 012021   000000 220000 xsym               LDX0    DISK_DESC_SAVE
        18 012022   000033 740000 xsym               STX0    DISK_CLOSE+27

     3107    22111    3      IF DISK_DESC_SAVE.ODSTOW#

  22111 18 012023   000000 236000 xsym               LDQ     DISK_DESC_SAVE
        18 012024   040000 316003                    CANQ    16384,DU
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:423  
        18 012025   012031 600000 18                 TZE     s:22113

     3108    22112    3       THEN EFTWORDEXPIRE = SAVE_FSN;

  22112 18 012026   200040 721100                    LXL1    SAVE_FSN,,AUTO
        18 012027   000000 741000 xsym               STX1    EFTWORD
        18 012030   012036 710000 18                 TRA     s:22114

     3109    22113    3       ELSE EFTWORD.FSN = SAVE_FSN;

  22113 18 012031   200040 236100                    LDQ     SAVE_FSN,,AUTO
        18 012032   000022 736000                    QLS     18
        18 012033   000000 676000 xsym               ERQ     EFTWORD
        18 012034   037777 376003                    ANQ     16383,DU
        18 012035   000000 656000 xsym               ERSQ    EFTWORD

     3110    22114    3      DISK_CLOSE.V.EXPIRE# = EFTWORDEXPIRE;

  22114 18 012036   000000 221000 xsym               LDX1    EFTWORD
        18 012037   000034 441000 xsym               SXL1    DISK_CLOSE+28

     3111    22115    3      SOURCE_TAPE_SN.SN#(0) = SAVE_SN;

  22115 18 012040   040000 100500                    MLR     fill='040'O
        18 012041   200036 000006                    ADSC9   SAVE_SN,,AUTO            cn=0,n=6
        18 012042   000217 000006 2                  ADSC9   SOURCE_TAPE_SN+1         cn=0,n=6

     3112    22116    3      DISK_CLOSE.SN_ = VECTOR(SOURCE_TAPE_SN);

  22116 18 012043   000014 237000 19                 LDAQ    12
        18 012044   000002 757000 xsym               STAQ    DISK_CLOSE+2

     3113    22117    3      DISK_CLOSE.V.EFTOPER.ASTOW# = %YES#;

  22117 18 012045   020000 236007                    LDQ     8192,DL
        18 012046   000032 256000 xsym               ORSQ    DISK_CLOSE+26

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:424  
     3114    22118    3      CALL M$CLOSE( DISK_CLOSE )

  22118 18 012047   000000 630400 xsym               EPPR0   DISK_CLOSE
        18 012050   450001 713400                    CLIMB   alt,close
        18 012051   406000 401760                    pmme    nvectors=13
        18 012052   012054 702000 18                 TSX2    s:22120
        18 012053   012057 710000 18                 TRA     s:22123

     3115    22119    4       WHENALTRETURN DO;

     3116    22120    4         CALL FLI$RPT_ERR;

  22120 18 012054   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 012055   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 012056   000000 011000                    NOP     0

     3117    22121    4         END;

     3118    22122
     3119    22123    3      DISK_OPEN.V.FUN# = %IN#; /* Additional OPEN/CLOSE required to set QS,FETCH */

  22123 18 012057   002000 236007                    LDQ     1024,DL
        18 012060   000045 552010 xsym               STBQ    DISK_OPEN+37,'10'O

     3120    22124    3      CALL M$OPEN (DISK_OPEN )

  22124 18 012061   000000 630400 xsym               EPPR0   DISK_OPEN
        18 012062   450000 713400                    CLIMB   alt,open
        18 012063   410400 401760                    pmme    nvectors=18
        18 012064   012066 702000 18                 TSX2    s:22126
        18 012065   012071 710000 18                 TRA     s:22129

     3121    22125    4       WHENALTRETURN DO;

     3122    22126    4         CALL FLI$RPT_ERR;

  22126 18 012066   000002 631400 xsym               EPPR1   B_VECTNIL+2
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:425  
        18 012067   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 012070   000000 011000                    NOP     0

     3123    22127    4         END;

     3124    22128
     3125    22129    3      DISK_CLOSE.V.EFTOPER = %NO#;

  22129 18 012071   000100 236000 19                 LDQ     64
        18 012072   000032 356000 xsym               ANSQ    DISK_CLOSE+26

     3126    22130    3      DISK_CLOSE.V.EFTOPER.UPDDESC# = %YES#;

  22130 18 012073   004000 236007                    LDQ     2048,DL
        18 012074   000032 256000 xsym               ORSQ    DISK_CLOSE+26

     3127    22131    3      DISK_CLOSE.V.DESC = F$DCB.DESC;

  22131 18 012075   200061 470500                    LDP0    M$DISK_OUT$,,AUTO
        18 012076   000005 720100                    LXL0    5,,PR0
        18 012077   000033 740000 xsym               STX0    DISK_CLOSE+27

     3128    22132    3      DISK_CLOSE.V.DESC.QS# = %YES#;

  22132 18 012100   010000 236003                    LDQ     4096,DU
        18 012101   000033 256000 xsym               ORSQ    DISK_CLOSE+27

     3129    22133    3      DISK_CLOSE.V.DESC.FETCH# = %YES#;

  22133 18 012102   000010 236003                    LDQ     8,DU
        18 012103   000033 256000 xsym               ORSQ    DISK_CLOSE+27

     3130    22134    3      CALL M$CLOSE( DISK_CLOSE )

  22134 18 012104   000000 630400 xsym               EPPR0   DISK_CLOSE
        18 012105   450001 713400                    CLIMB   alt,close
        18 012106   406000 401760                    pmme    nvectors=13
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:426  
        18 012107   012111 702000 18                 TSX2    s:22136
        18 012110   012114 710000 18                 TRA     s:22139

     3131    22135    4       WHENALTRETURN DO;

     3132    22136    4         CALL FLI$RPT_ERR;

  22136 18 012111   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 012112   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 012113   000000 011000                    NOP     0

     3133    22137    4         END;

     3134    22138
     3135    22139    3      DISK_CLOSE.V.EFTOPER = %NO#;         /* Reinit. FPT's                      */

  22139 18 012114   000100 236000 19                 LDQ     64
        18 012115   000032 356000 xsym               ANSQ    DISK_CLOSE+26

     3136    22140    3      DISK_CLOSE.V.DESC = %NO#;

  22140 18 012116   000000 220003                    LDX0    0,DU
        18 012117   000033 740000 xsym               STX0    DISK_CLOSE+27

     3137    22141    3      DISK_CLOSE.V.EXPIRE# = 0;

  22141 18 012120   000000 221003                    LDX1    0,DU
        18 012121   000034 441000 xsym               SXL1    DISK_CLOSE+28

     3138    22142    3      DISK_CLOSE.SN_ = VECTOR(NIL);

  22142 18 012122   000024 237000 19                 LDAQ    20
        18 012123   000002 757000 xsym               STAQ    DISK_CLOSE+2

     3139    22143    3      DISK_OPEN.V.SRCHCOND.ANYF# = %YES#;

  22143 18 012124   000400 236003                    LDQ     256,DU
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:427  
        18 012125   000045 256000 xsym               ORSQ    DISK_OPEN+37

     3140    22144    3      DISK_OPEN.V.OPER.NXTF# = %YES#;

  22144 18 012126   004000 236007                    LDQ     2048,DL
        18 012127   000044 256000 xsym               ORSQ    DISK_OPEN+36

     3141    22145    3      RETURN;

  22145 18 012130   200112 221300                    LDX1  ! STATUS_KEY_SAVE,,AUTO
        18 012131   000001 702211                    TSX2  ! 1,X1

     3142    22146
     3143    22147    3   END FLM_RECREATE_QF_FILE;
     3144    22148    2   END FLM_COPY_FILE_TO_DISK;
     3145    22149
     3146    22150
     3147    22151    1   FLM_ADD_TO_DEL_LIST: PROC( INACTIVATE ) ALTRET;

  22151 18 012132   200104 741300       FLM_ADD_TO_* STX1  ! DCB#+1,,AUTO

     3148    22152        /*F*  NAME: FLM_ADD_TO_DEL_LIST
     3149    22153              PURPOSE: Adds current file to delete list.
     3150    22154        */
     3151    22155
     3152    22156    2   DCL INACTIVATE BIT(1) ALIGNED;
     3153    22157
     3154    22158        /********************/
     3155    22159
     3156    22160    2      DEL_LIST_REC.VLP_SN.SN#(0) = SOURCE_DCB$->F$DCB.PSN#;

  22160 18 012133   200014 470500                    LDP0    SOURCE_DCB$,,AUTO
        18 012134   040000 100500                    MLR     fill='040'O
        18 012135   000024 000006                    ADSC9   20,,PR0                  cn=0,n=6
        18 012136   000155 000006 2                  ADSC9   DEL_LIST_REC+1           cn=0,n=6

     3157    22161    2      DEL_LIST_REC.ACCT = SOURCE_DCB$->F$DCB.ACCT#;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:428  

  22161 18 012137   000020 237100                    LDAQ    16,,PR0
        18 012140   000157 755000 2                  STA     DEL_LIST_REC+3
        18 012141   000160 756000 2                  STQ     DEL_LIST_REC+4

     3158    22162    2      DEL_LIST_REC.NAME#.C = SOURCE_DCB$->F$DCB.NAME#.C;

  22162 18 012142   040000 100500                    MLR     fill='040'O
        18 012143   000010 200037                    ADSC9   8,,PR0                   cn=1,n=31
        18 012144   000161 200037 2                  ADSC9   DEL_LIST_REC+5           cn=1,n=31

     3159    22163    2      IF SOURCE_DCB$->F$DCB.NAME#.L = 0

  22163 18 012145   000010 236100                    LDQ     8,,PR0
        18 012146   777000 316003                    CANQ    -512,DU
        18 012147   012153 601000 18                 TNZ     s:22165

     3160    22164    2       THEN DEL_LIST_REC.NAME#.L = 32;     /* Account after its files            */

  22164 18 012150   040000 236003                    LDQ     16384,DU
        18 012151   000161 552040 2                  STBQ    DEL_LIST_REC+5,'40'O
        18 012152   012154 710000 18                 TRA     s:22166

     3161    22165    2       ELSE DEL_LIST_REC.NAME#.L = SOURCE_DCB$->F$DCB.NAME#.L;

  22165 18 012153   000161 552040 2                  STBQ    DEL_LIST_REC+5,'40'O

     3162    22166    2      DEL_LIST_REC.RES = SOURCE_DCB$->F$DCB.RES#;

  22166 18 012154   000026 236100                    LDQ     22,,PR0
        18 012155   000174 756000 2                  STQ     DEL_LIST_REC+16

     3163    22167    2      DEL_LIST_REC.SN = SAVE_SN;

  22167 18 012156   040000 100500                    MLR     fill='040'O
        18 012157   200036 000006                    ADSC9   SAVE_SN,,AUTO            cn=0,n=6
        18 012160   000171 000006 2                  ADSC9   DEL_LIST_REC+13          cn=0,n=6
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:429  

     3164    22168    2      DEL_LIST_REC.FSN = SAVE_FSN;

  22168 18 012161   200040 236100                    LDQ     SAVE_FSN,,AUTO
        18 012162   000024 736000                    QLS     20
        18 012163   000203 676000 2                  ERQ     DEL_LIST_REC+23
        18 012164   777774 376003                    ANQ     -4,DU
        18 012165   000203 656000 2                  ERSQ    DEL_LIST_REC+23

     3165    22169    2      DEL_LIST_REC.INACTIVATE = INACTIVATE;

  22169 18 012166   200105 471500                    LDP1    @INACTIVATE,,AUTO
        18 012167   100000 236100                    LDQ     0,,PR1
        18 012170   000022 772000                    QRL     18
        18 012171   000203 676000 2                  ERQ     DEL_LIST_REC+23
        18 012172   400000 376007                    ANQ     -131072,DL
        18 012173   000203 656000 2                  ERSQ    DEL_LIST_REC+23

     3166    22170    2      CALL M$TIME ( GET_NOW_UTS );

  22170 18 012174   000000 630400 xsym               EPPR0   GET_NOW_UTS
        18 012175   020004 713400                    CLIMB   8196
        18 012176   402000 401760                    pmme    nvectors=5

     3167    22171    2      DEL_LIST_REC.TIME = NOW_UTS;

  22171 18 012177   000000 235000 xsym               LDA     NOW_UTS
        18 012200   000205 755000 2                  STA     DEL_LIST_REC+25

     3168    22172
     3169    22173    2      CALL M$WRITE(WRITE_DELETE_LIST)

  22173 18 012201   002626 630400 2                  EPPR0   WRITE_DELETE_LIST
        18 012202   440001 713400                    CLIMB   alt,write
        18 012203   401400 401760                    pmme    nvectors=4
        18 012204   012210 702000 18                 TSX2    s:22179

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:430  
     3170    22174    3       WHENRETURN DO;

     3171    22175    3         NBR_DEL_FILES = NBR_DEL_FILES + 1;

  22175 18 012205   200067 054100                    AOS     NBR_DEL_FILES,,AUTO

     3172    22176    3         RETURN;

  22176 18 012206   200104 221300                    LDX1  ! DCB#+1,,AUTO
        18 012207   000001 702211                    TSX2  ! 1,X1

     3173    22177    3         END;
     3174    22178    3       WHENALTRETURN DO;

     3175    22179    3         CALL FLI$RPT_ERR;

  22179 18 012210   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 012211   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 012212   000000 011000                    NOP     0

     3176    22180    3         ALTRETURN;

  22180 18 012213   200104 221300                    LDX1  ! DCB#+1,,AUTO
        18 012214   000000 702211                    TSX2  ! 0,X1

     3177    22181    3         END;
     3178    22182
     3179    22183    2   END FLM_ADD_TO_DEL_LIST;
     3180    22184
     3181    22185
     3182    22186    1   FLM_CLEANUP: PROC(TERM_ERR);

  22186 18 012215   200104 741300       FLM_CLEANUP  STX1  ! DCB#+1,,AUTO

     3183    22187        /*F*  NAME: FLM_CLEANUP
     3184    22188              PURPOSE: Inactivates files, cleans up file directory and
     3185    22189                 account entries, and deletes files.
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:431  
     3186    22190        */
     3187    22191
     3188    22192    2   DCL 1 TERM_ERR ALIGNED,
     3189    22193    2         2 * BIT(12) UNAL,
     3190    22194    2         2 * BIT(6) UNAL,
     3191    22195    2         2 * BIT(1) UNAL,
     3192    22196    2         2 CODE UBIN(14) UNAL,
     3193    22197    2         2 * UBIN(3) UNAL;
     3194    22198
     3195    22199        /***
     3196    22200         *** Auto
     3197    22201         ***/
     3198    22202
     3199    22203    2   DCL NBR_FILES_INACTIVATED SBIN AUTO;
     3200    22204    2   DCL NBR_FILES_DELETED SBIN AUTO;
     3201    22205    2   DCL NBR_ACCTS_DELETED SBIN AUTO;
     3202    22206    2   DCL 1 CLNUP_FPARAM_ DALIGNED,
     3203    22207    2         2 BOUND UBIN (20) UNAL,
     3204    22208    2         2 * BIT (16) UNAL,
     3205    22209    2         2 PTR$ PTR;
     3206    22210    2   DCL 1 SAVE_SOURCE_DCB_ DALIGNED AUTO,
     3207    22211    2         2 * BIT(36),
     3208    22212    2         2 PTR$ PTR;
     3209    22213    2   DCL SAVE_SOURCE_DCB$ PTR AUTO;
     3210    22214
     3211    22215        /********************/
     3212    22216
     3213    22217    2      DCB$ = DCBADDR(DCBNUM(M$DISK_OUT));

  22217 18 012216   000000 236007 xsym               LDQ     M$DISK_OUT,DL
        18 012217   000031 470400 19                 LDP0    25
        18 012220   000000 471500                    LDP1    0,,PR0
        18 012221   100000 236106                    LDQ     0,QL,PR1
        18 012222   000000 756000 xsym               STQ     DCB$

     3214    22218    2      NBR_FILES_DELETED = 0;

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:432  
  22218 18 012223   200107 450100                    STZ     NBR_FILES_DELETED,,AUTO

     3215    22219    2      NBR_FILES_INACTIVATED = 0;

  22219 18 012224   200106 450100                    STZ     NBR_FILES_INACTIVATED,,AUTO

     3216    22220    2      NBR_ACCTS_DELETED = 0;

  22220 18 012225   200110 450100                    STZ     NBR_ACCTS_DELETED,,AUTO

     3217    22221    2      ERR = '0'B;

  22221 18 012226   200020 450100                    STZ     ERR,,AUTO

     3218    22222    2      CALL FLI$ALLOC_BUF( SAVE_SOURCE_DCB_, 1 );

  22222 18 012227   000001 236000 19                 LDQ     1
        18 012230   200125 756100                    STQ     @DISP+2,,AUTO
        18 012231   200114 633500                    EPPR3   SAVE_SOURCE_DCB_,,AUTO
        18 012232   200124 453500                    STP3    @DISP+1,,AUTO
        18 012233   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 012234   000020 631400 xsym               EPPR1   B_VECTNIL+16
        18 012235   000000 701000 xent               TSX1    FLI$ALLOC_BUF
        18 012236   000000 011000                    NOP     0

     3219    22223    2      SAVE_SOURCE_DCB$ = SAVE_SOURCE_DCB_.PTR$;

  22223 18 012237   200115 236100                    LDQ     SAVE_SOURCE_DCB_+1,,AUTO
        18 012240   200116 756100                    STQ     SAVE_SOURCE_DCB$,,AUTO

     3220    22224
     3221    22225    2      CLEANUP_ACCT.FPARAM_ = A_FIT_;  /* Something non-nil or cleanup won't work */

  22225 18 012241   000000 237000 xsym               LDAQ    A_FIT_
        18 012242   003036 757000 2                  STAQ    CLEANUP_ACCT+24

     3222    22226    2      CALL FLI$ALLOC_BUF ( CLNUP_FPARAM_, 1 );
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:433  

  22226 18 012243   000001 236000 19                 LDQ     1
        18 012244   200125 756100                    STQ     @DISP+2,,AUTO
        18 012245   200112 630500                    EPPR0   CLNUP_FPARAM_,,AUTO
        18 012246   200124 450500                    STP0    @DISP+1,,AUTO
        18 012247   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 012250   000020 631400 xsym               EPPR1   B_VECTNIL+16
        18 012251   000000 701000 xent               TSX1    FLI$ALLOC_BUF
        18 012252   000000 011000                    NOP     0

     3223    22227    2      OPEN_BLOCK.FPARAM_ = CLNUP_FPARAM_;

  22227 18 012253   200112 237100                    LDAQ    CLNUP_FPARAM_,,AUTO
        18 012254   002730 757000 2                  STAQ    OPEN_BLOCK+24

     3224    22228
     3225    22229        /***
     3226    22230         *** File will not be open when deleting files on second pass through MOVE.
     3227    22231         *** A second pass is required on an OPEN command if checking is spec'd.
     3228    22232         ***/
     3229    22233
     3230    22234    2      IF NOT DCBADDR(DCBNUM(M$DEL_LIST))->F$DCB.FCD#

  22234 18 012255   000000 236007 xsym               LDQ     M$DEL_LIST,DL
        18 012256   000031 470400 19                 LDP0    25
        18 012257   000000 471500                    LDP1    0,,PR0
        18 012260   100000 473506                    LDP3    0,QL,PR1
        18 012261   300031 236100                    LDQ     25,,PR3
        18 012262   020000 316007                    CANQ    8192,DL
        18 012263   012304 601000 18                 TNZ     s:22250

     3231    22235    3       THEN DO;

     3232    22236    3         OPEN_DELETE_LIST.V.FUN# = %IN#;

  22236 18 012264   002000 236007                    LDQ     1024,DL
        18 012265   002507 552010 2                  STBQ    OPEN_DELETE_LIST+37,'10'O
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:434  

     3233    22237    3         CALL M$OPEN( OPEN_DELETE_LIST )

  22237 18 012266   002442 630400 2                  EPPR0   OPEN_DELETE_LIST
        18 012267   450000 713400                    CLIMB   alt,open
        18 012270   410400 401760                    pmme    nvectors=18
        18 012271   012273 702000 18                 TSX2    s:22239
        18 012272   012302 710000 18                 TRA     s:22243

     3234    22238    4          WHENALTRETURN DO;

     3235    22239    4            CALL FLI$RPT_ERR;

  22239 18 012273   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 012274   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 012275   000000 011000                    NOP     0

     3236    22240    4            OPEN_DELETE_LIST.V.FUN# = %IN#;

  22240 18 012276   002000 236007                    LDQ     1024,DL
        18 012277   002507 552010 2                  STBQ    OPEN_DELETE_LIST+37,'10'O

     3237    22241    4            RETURN;

  22241 18 012300   200104 221300                    LDX1  ! DCB#+1,,AUTO
        18 012301   000001 702211                    TSX2  ! 1,X1

     3238    22242    4            END;
     3239    22243    3         OPEN_DELETE_LIST.V.FUN# = %CREATE#;

  22243 18 012302   003000 236007                    LDQ     1536,DL
        18 012303   002507 552010 2                  STBQ    OPEN_DELETE_LIST+37,'10'O

     3240    22244    3         END;

     3241    22245
     3242    22246        /***
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:435  
     3243    22247         *** Position to beginning of delete list.
     3244    22248         ***/
     3245    22249
     3246    22250    2      CALL M$PFIL( PFIL_DELETE_LIST )

  22250 18 012304   002642 630400 2                  EPPR0   PFIL_DELETE_LIST
        18 012305   440004 713400                    CLIMB   alt,+16388
        18 012306   400000 401760                    pmme    nvectors=1
        18 012307   012311 702000 18                 TSX2    s:22252
        18 012310   012316 710000 18                 TRA     s:22256

     3247    22251    3       WHENALTRETURN DO;

     3248    22252    3         CALL FLI$RPT_ERR;

  22252 18 012311   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 012312   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 012313   000000 011000                    NOP     0

     3249    22253    3         RETURN;

  22253 18 012314   200104 221300                    LDX1  ! DCB#+1,,AUTO
        18 012315   000001 702211                    TSX2  ! 1,X1

     3250    22254    3         END;
     3251    22255
     3252    22256    2      DISK_CLOSE_NEXT.V.DCB# = DCBNUM(M$DISK_OUT);

  22256 18 012316   000000 236007 xsym               LDQ     M$DISK_OUT,DL
        18 012317   000000 620006                    EAX0    0,QL
        18 012320   000032 740000 xsym               STX0    DISK_CLOSE_NEXT+26

     3253    22257    2      SOURCE_DCB$ = DCBADDR(DCBNUM(M$DISK_OUT));

  22257 18 012321   000000 236007 xsym               LDQ     M$DISK_OUT,DL
        18 012322   000031 470400 19                 LDP0    25
        18 012323   000000 471500                    LDP1    0,,PR0
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:436  
        18 012324   100000 236106                    LDQ     0,QL,PR1
        18 012325   200014 756100                    STQ     SOURCE_DCB$,,AUTO

     3254    22258    2      CALL FLP$WR_FILE_INFO;

  22258 18 012326   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 012327   000000 701000 xent               TSX1    FLP$WR_FILE_INFO
        18 012330   000000 011000                    NOP     0

     3255    22259
     3256    22260         /***
     3257    22261          *** Read through delete list until end or error.
     3258    22262          ***/
     3259    22263
     3260    22264    3      DO WHILE( NOT ERR );

  22264 18 012331   012610 710000 18                 TRA     s:22362

     3261    22265    3         CALL M$READ( READ_DELETE_LIST )

  22265 18 012332   002646 630400 2                  EPPR0   READ_DELETE_LIST
        18 012333   440000 713400                    CLIMB   alt,read
        18 012334   401400 401760                    pmme    nvectors=4
        18 012335   012575 702000 18                 TSX2    s:22354

     3262    22266    4          WHENRETURN DO;

     3263    22267    4            DISK_CLOSE_NEXT.V.EFTOPER = '0'B;

  22267 18 012336   000100 236000 19                 LDQ     64
        18 012337   000032 356000 xsym               ANSQ    DISK_CLOSE_NEXT+26

     3264    22268    4            DISK_CLOSE_NEXT.V.DESC = '0'B;

  22268 18 012340   000000 220003                    LDX0    0,DU
        18 012341   000033 740000 xsym               STX0    DISK_CLOSE_NEXT+27

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:437  
     3265    22269    4            IF DEL_LIST_REC.NAME#.L = 32

  22269 18 012342   000161 236000 2                  LDQ     DEL_LIST_REC+5
        18 012343   777000 376003                    ANQ     -512,DU
        18 012344   040000 116003                    CMPQ    16384,DU
        18 012345   012350 601000 18                 TNZ     s:22271

     3266    22270    4             THEN DEL_LIST_REC.NAME#.L = 0;

  22270 18 012346   000000 236003                    LDQ     0,DU
        18 012347   000161 552040 2                  STBQ    DEL_LIST_REC+5,'40'O

     3267    22271    4            IF DEL_LIST_REC.NAME#.C = ' ' /* Account indicated by missing file name */

  22271 18 012350   040000 106400                    CMPC    fill='040'O
        18 012351   000161 200037 2                  ADSC9   DEL_LIST_REC+5           cn=1,n=31
        18 012352   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        18 012353   012376 601000 18                 TNZ     s:22287
        18 012354   000161 236000 2                  LDQ     DEL_LIST_REC+5
        18 012355   777000 316003                    CANQ    -512,DU
        18 012356   012376 601000 18                 TNZ     s:22287

     3268    22272    4              AND DEL_LIST_REC.NAME#.L = 0
     3269    22273    5             THEN DO;

     3270    22274        /***
     3271    22275         *** If we terminated due to exceeding the granule limit, then we don't want
     3272    22276         *** to delete the source account as it still may contain files.
     3273    22277         *** Don't delete source account if break hit.
     3274    22278         ***/
     3275    22279    5               IF (TERM_ERR.CODE = %E$PSGRANS

  22279 18 012357   200105 470500                    LDP0    @TERM_ERR,,AUTO
        18 012360   000000 236100                    LDQ     0,,PR0
        18 012361   377770 376007                    ANQ     131064,DL
        18 012362   002140 116007                    CMPQ    1120,DL
        18 012363   012371 601000 18                 TNZ     s:22282
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:438  
        18 012364   200014 471500                    LDP1    SOURCE_DCB$,,AUTO
        18 012365   040000 106500                    CMPC    fill='040'O
        18 012366   100020 000010                    ADSC9   16,,PR1                  cn=0,n=8
        18 012367   000157 000010 2                  ADSC9   DEL_LIST_REC+3           cn=0,n=8
        18 012370   012375 600000 18                 TZE     s:22285

     3276    22280    5                 AND SOURCE_DCB$ -> F$DCB.ACCT# = DEL_LIST_REC.ACCT)
     3277    22281    5                THEN EXIT;
     3278    22282    5               IF BREAK_COUNT > 0

  22282 18 012371   000000 235000 xsym               LDA     BREAK_COUNT
        18 012372   012375 605400 18                 TPNZ    s:22285

     3279    22283    5                THEN EXIT;
     3280    22284    5               CALL FLM_CLEANUP_ACCOUNT;

  22284 18 012373   012724 701000 18                 TSX1    FLM_CLEANUP_ACCOUNT
        18 012374   000000 011000                    NOP     0

     3281    22285    5               END;

  22285 18 012375   012574 710000 18                 TRA     s:22352

     3282    22286    5             ELSE DO;                      /* Inactivate or cleanup file         */

     3283    22287    5               OPEN_BLOCK.V.RES# = DEL_LIST_REC.RES;

  22287 18 012376   000174 236000 2                  LDQ     DEL_LIST_REC+16
        18 012377   002750 756000 2                  STQ     OPEN_BLOCK+40

     3284    22288    5               CALL M$OPEN( OPEN_BLOCK )

  22288 18 012400   002700 630400 2                  EPPR0   OPEN_BLOCK
        18 012401   450000 713400                    CLIMB   alt,open
        18 012402   410400 401760                    pmme    nvectors=18
        18 012403   012571 702000 18                 TSX2    s:22349

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:439  
     3285    22289    6                WHENRETURN DO;

     3286    22290    6                  IF DEL_LIST_REC.VLP_SN.SN#(0) = SOURCE_DCB$->F$DCB.PSN#

  22290 18 012404   200014 470500                    LDP0    SOURCE_DCB$,,AUTO
        18 012405   040100 106400                    CMPC    fill='040'O
        18 012406   000155 000006 2                  ADSC9   DEL_LIST_REC+1           cn=0,n=6
        18 012407   000024 000006                    ADSC9   20,,PR0                  cn=0,n=6
        18 012410   012560 601000 18                 TNZ     s:22342
        18 012411   040100 106400                    CMPC    fill='040'O
        18 012412   000157 000010 2                  ADSC9   DEL_LIST_REC+3           cn=0,n=8
        18 012413   000020 000010                    ADSC9   16,,PR0                  cn=0,n=8
        18 012414   012560 601000 18                 TNZ     s:22342
        18 012415   040100 106400                    CMPC    fill='040'O
        18 012416   000161 200037 2                  ADSC9   DEL_LIST_REC+5           cn=1,n=31
        18 012417   000010 200037                    ADSC9   8,,PR0                   cn=1,n=31
        18 012420   012560 601000 18                 TNZ     s:22342
        18 012421   000161 236000 2                  LDQ     DEL_LIST_REC+5
        18 012422   000010 676100                    ERQ     8,,PR0
        18 012423   777000 376003                    ANQ     -512,DU
        18 012424   012560 601000 18                 TNZ     s:22342

     3287    22291    6                    AND DEL_LIST_REC.ACCT = SOURCE_DCB$->F$DCB.ACCT#
     3288    22292    6                    AND DEL_LIST_REC.NAME#.C = SOURCE_DCB$->F$DCB.NAME#.C
     3289    22293    6                    AND DEL_LIST_REC.NAME#.L = SOURCE_DCB$->F$DCB.NAME#.L
     3290    22294    7                   THEN DO;

     3291    22295    7                     IF SOURCE_DCB$ -> F$DCB.DESC.DELF# AND

  22295 18 012425   000005 236100                    LDQ     5,,PR0
        18 012426   400000 316007                    CANQ    -131072,DL
        18 012427   012470 600000 18                 TZE     s:22312
        18 012430   001000 316007                    CANQ    512,DL
        18 012431   012470 600000 18                 TZE     s:22312

     3292    22296    7                       SOURCE_DCB$ -> F$DCB.DESC.ARCHIVE#
     3293    22297    8                      THEN DO;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:440  

     3294    22298    8                        CODE$ = CLNUP_FPARAM_.PTR$;

  22298 18 012432   200113 236100                    LDQ     DEST_GRAN_UTS,,AUTO
        18 012433   200006 756100                    STQ     CODE$,,AUTO

     3295    22299    8                        CALL XSF$LOCCODP ( CODE$, 06 )

  22299 18 012434   000073 236000 19                 LDQ     59
        18 012435   200125 756100                    STQ     @DISP+2,,AUTO
        18 012436   200006 631500                    EPPR1   CODE$,,AUTO
        18 012437   200124 451500                    STP1    @DISP+1,,AUTO
        18 012440   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 012441   000020 631400 xsym               EPPR1   B_VECTNIL+16
        18 012442   000000 701000 xent               TSX1    XSF$LOCCODP
        18 012443   012464 702000 18                 TSX2    s:22309

     3296    22300    9                         WHENRETURN DO;

     3297    22301    9                           IF CODE$ -> CODE06.STOW.TIME < DEL_LIST_REC.TIME

  22301 18 012444   200006 470500                    LDP0    CODE$,,AUTO
        18 012445   000000 236100                    LDQ     0,,PR0
        18 012446   000205 116000 2                  CMPQ    DEL_LIST_REC+25
        18 012447   012453 603000 18                 TRC     s:22303

     3298    22302    9                            THEN CALL FLM_CLEANUP_FILE;

  22302 18 012450   013057 701000 18                 TSX1    FLM_CLEANUP_FILE
        18 012451   000000 011000                    NOP     0
        18 012452   012463 710000 18                 TRA     s:22307

     3299    22303    9                            ELSE CALL M$CLOSE ( DISK_CLOSE_NEXT )

  22303 18 012453   000000 630400 xsym               EPPR0   DISK_CLOSE_NEXT
        18 012454   450001 713400                    CLIMB   alt,close
        18 012455   406000 401760                    pmme    nvectors=13
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:441  
        18 012456   012460 702000 18                 TSX2    s:22305
        18 012457   012463 710000 18                 TRA     s:22307

     3300    22304   10                               WHENALTRETURN DO;

     3301    22305   10                                 CALL FLI$RPT_ERR;

  22305 18 012460   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 012461   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 012462   000000 011000                    NOP     0

     3302    22306   10                                 END;

     3303    22307    9                           END;

  22307 18 012463   012467 710000 18                 TRA     s:22311

     3304    22308    9                         WHENALTRETURN DO;

     3305    22309    9                           CALL FLI$RPT_ERR;

  22309 18 012464   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 012465   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 012466   000000 011000                    NOP     0

     3306    22310    9                           END;

     3307    22311    8                        END;

  22311 18 012467   012570 710000 18                 TRA     s:22347

     3308    22312    7                      ELSE IF SOURCE_DCB$ -> F$DCB.DESC.DELF# AND ( NOT

  22312 18 012470   400000 316007                    CANQ    -131072,DL
        18 012471   012514 600000 18                 TZE     s:22321
        18 012472   001000 316007                    CANQ    512,DL
        18 012473   012514 601000 18                 TNZ     s:22321
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:442  

     3309    22313    7                          SOURCE_DCB$ -> F$DCB.DESC.ARCHIVE# )
     3310    22314    7                         THEN IF SOURCE_DCB$ -> F$DCB.EXPIRE# < DEL_LIST_REC.TIME

  22314 18 012474   000035 236100                    LDQ     29,,PR0
        18 012475   012500 604000 18                 TMI     s:22315
        18 012476   000205 116000 2                  CMPQ    DEL_LIST_REC+25
        18 012477   012503 603000 18                 TRC     s:22316

     3311    22315    7                            THEN CALL FLM_CLEANUP_FILE;

  22315 18 012500   013057 701000 18                 TSX1    FLM_CLEANUP_FILE
        18 012501   000000 011000                    NOP     0
        18 012502   012570 710000 18                 TRA     s:22347

     3312    22316    7                            ELSE CALL M$CLOSE ( DISK_CLOSE_NEXT )

  22316 18 012503   000000 630400 xsym               EPPR0   DISK_CLOSE_NEXT
        18 012504   450001 713400                    CLIMB   alt,close
        18 012505   406000 401760                    pmme    nvectors=13
        18 012506   012510 702000 18                 TSX2    s:22318
        18 012507   012513 710000 18                 TRA     s:22319

     3313    22317    8                               WHENALTRETURN DO;

     3314    22318    8                                 CALL FLI$RPT_ERR;

  22318 18 012510   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 012511   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 012512   000000 011000                    NOP     0

     3315    22319    8                                 END;

  22319 18 012513   012570 710000 18                 TRA     s:22347

     3316    22320    8                         ELSE DO;

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:443  
     3317    22321    8                           CODE$ = PINCRW ( CLNUP_FPARAM_.PTR$, SIZEW ( FM$GRAN ) );

  22321 18 012514   200113 236100                    LDQ     DEST_GRAN_UTS,,AUTO
        18 012515   000005 036003                    ADLQ    5,DU
        18 012516   200006 756100                    STQ     CODE$,,AUTO

     3318    22322    8                           CALL XSF$LOCCODP ( CODE$, 04 )

  22322 18 012517   000076 236000 19                 LDQ     62
        18 012520   200125 756100                    STQ     @DISP+2,,AUTO
        18 012521   200006 631500                    EPPR1   CODE$,,AUTO
        18 012522   200124 451500                    STP1    @DISP+1,,AUTO
        18 012523   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 012524   000020 631400 xsym               EPPR1   B_VECTNIL+16
        18 012525   000000 701000 xent               TSX1    XSF$LOCCODP
        18 012526   012547 702000 18                 TSX2    s:22333

     3319    22323    9                            WHENRETURN DO;

     3320    22324    9                              IF CODE$ -> CODE04.MODIFY.TIME <

  22324 18 012527   200006 470500                    LDP0    CODE$,,AUTO
        18 012530   000001 236100                    LDQ     1,,PR0
        18 012531   000205 116000 2                  CMPQ    DEL_LIST_REC+25
        18 012532   012536 603000 18                 TRC     s:22327

     3321    22325    9                                DEL_LIST_REC.TIME
     3322    22326    9                               THEN CALL FLM_CLEANUP_FILE;

  22326 18 012533   013057 701000 18                 TSX1    FLM_CLEANUP_FILE
        18 012534   000000 011000                    NOP     0
        18 012535   012546 710000 18                 TRA     s:22331

     3323    22327    9                               ELSE CALL M$CLOSE ( DISK_CLOSE_NEXT )

  22327 18 012536   000000 630400 xsym               EPPR0   DISK_CLOSE_NEXT
        18 012537   450001 713400                    CLIMB   alt,close
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:444  
        18 012540   406000 401760                    pmme    nvectors=13
        18 012541   012543 702000 18                 TSX2    s:22329
        18 012542   012546 710000 18                 TRA     s:22331

     3324    22328   10                                  WHENALTRETURN DO;

     3325    22329   10                                    CALL FLI$RPT_ERR;

  22329 18 012543   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 012544   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 012545   000000 011000                    NOP     0

     3326    22330   10                                    END;

     3327    22331    9                              END;

  22331 18 012546   012557 710000 18                 TRA     s:22339

     3328    22332    9                            WHENALTRETURN DO;

     3329    22333    9                              CALL M$CLOSE ( DISK_CLOSE_NEXT )

  22333 18 012547   000000 630400 xsym               EPPR0   DISK_CLOSE_NEXT
        18 012550   450001 713400                    CLIMB   alt,close
        18 012551   406000 401760                    pmme    nvectors=13
        18 012552   012554 702000 18                 TSX2    s:22335
        18 012553   012557 710000 18                 TRA     s:22339

     3330    22334   10                               WHENALTRETURN DO;

     3331    22335   10                                 CALL FLI$RPT_ERR;

  22335 18 012554   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 012555   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 012556   000000 011000                    NOP     0

     3332    22336   10                                 END;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:445  

     3333    22337    9                              END;

     3334    22338    8                           END;

     3335    22339    7                     END;

  22339 18 012557   012570 710000 18                 TRA     s:22347

     3336    22340    7                   ELSE DO;                /* File's not there anymore...oh well */

     3337    22341                                /*N* Probably should say which file */
     3338    22342    7                     CALL M$CLOSE( DISK_CLOSE_NEXT )

  22342 18 012560   000000 630400 xsym               EPPR0   DISK_CLOSE_NEXT
        18 012561   450001 713400                    CLIMB   alt,close
        18 012562   406000 401760                    pmme    nvectors=13
        18 012563   012565 702000 18                 TSX2    s:22344
        18 012564   012570 710000 18                 TRA     s:22347

     3339    22343    8                      WHENALTRETURN DO;

     3340    22344    8                        CALL FLI$RPT_ERR;

  22344 18 012565   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 012566   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 012567   000000 011000                    NOP     0

     3341    22345    8                        END;

     3342    22346    7                     END;

     3343    22347    6                  END;

  22347 18 012570   012574 710000 18                 TRA     s:22352

     3344    22348    6                WHENALTRETURN DO;          /* OPEN_BLOCK                         */
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:446  

     3345    22349    6                  CALL FLI$RPT_ERR;

  22349 18 012571   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 012572   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 012573   000000 011000                    NOP     0

     3346    22350    6                  END;

     3347    22351    5               END;                        /* Inactivate or cleanup file         */

     3348    22352    4            END;

  22352 18 012574   012610 710000 18                 TRA     s:22362

     3349    22353    4          WHENALTRETURN DO;

     3350    22354    4            IF B$TCB.ALT$->B$ALT.ERR.CODE ~= %E$EOF

  22354 18 012575   000000 470400 xsym               LDP0    B$TCB$
        18 012576   000000 471500                    LDP1    0,,PR0
        18 012577   100102 236100                    LDQ     66,,PR1
        18 012600   377770 376007                    ANQ     131064,DL
        18 012601   000060 116007                    CMPQ    48,DL
        18 012602   012606 600000 18                 TZE     s:22360

     3351    22355    5             THEN DO;

     3352    22356    5               CALL FLI$RPT_ERR;

  22356 18 012603   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 012604   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 012605   000000 011000                    NOP     0

     3353    22357                 /*N* Possibly another message saying that some files remain to
     3354    22358                      be cleaned up or inactivated, possibly giving their names */
     3355    22359    5               END;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:447  

     3356    22360    4            ERR = '1'B;

  22360 18 012606   400000 236003                    LDQ     -131072,DU
        18 012607   200020 756100                    STQ     ERR,,AUTO

     3357    22361    4            END;

     3358    22362    3         END;

  22362 18 012610   200020 235100                    LDA     ERR,,AUTO
        18 012611   012332 600000 18                 TZE     s:22265

     3359    22363
     3360    22364        /***
     3361    22365         *** Report how many files and accounts were affected.
     3362    22366         ***/
     3363    22367
     3364    22368    2      OPEN_BLOCK.FPARAM_ = VECTOR ( NIL );

  22368 18 012612   000024 237000 19                 LDAQ    20
        18 012613   002730 757000 2                  STAQ    OPEN_BLOCK+24

     3365    22369    2     IF NBR_FILES_DELETED ~= 0 OR NBR_FILES_INACTIVATED ~= 0 OR NBR_ACCTS_DELETED ~= 0

  22369 18 012614   200107 235100                    LDA     NBR_FILES_DELETED,,AUTO
        18 012615   012622 601000 18                 TNZ     s:22371
        18 012616   200106 235100                    LDA     NBR_FILES_INACTIVATED,,AUTO
        18 012617   012622 601000 18                 TNZ     s:22371
        18 012620   200110 235100                    LDA     NBR_ACCTS_DELETED,,AUTO
        18 012621   012665 600000 18                 TZE     s:22383

     3366    22370    3       THEN DO;

     3367    22371    3         FILE_DISP_REC.NBR = ' ';

  22371 18 012622   040000 100400                    MLR     fill='040'O
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:448  
        18 012623   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        18 012624   000206 200005 2                  ADSC9   FILE_DISP_REC            cn=1,n=5

     3368    22372    3         FILE_DISP_REC.WHAT = ' ';

  22372 18 012625   040000 100400                    MLR     fill='040'O
        18 012626   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        18 012627   000207 400012 2                  ADSC9   FILE_DISP_REC+1          cn=2,n=10

     3369    22373    3         FILE_DISP_REC.DISP = ' ';

  22373 18 012630   040000 100400                    MLR     fill='040'O
        18 012631   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        18 012632   000212 000013 2                  ADSC9   FILE_DISP_REC+4          cn=0,n=11

     3370    22374    3         CALL M$WRITE( WRITE_FILE_DISP_REC )

  22374 18 012633   002772 630400 2                  EPPR0   WRITE_FILE_DISP_REC
        18 012634   440001 713400                    CLIMB   alt,write
        18 012635   401400 401760                    pmme    nvectors=4
        18 012636   012640 702000 18                 TSX2    s:22376
        18 012637   012643 710000 18                 TRA     s:22378

     3371    22375    4          WHENALTRETURN DO;

     3372    22376    4            CALL FLI$RPT_ERR;

  22376 18 012640   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 012641   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 012642   000000 011000                    NOP     0

     3373    22377    4            END;

     3374    22378    3         CALL FLM_DISP( NBR_ACCTS_DELETED, ' accounts ', 'cleaned up ' );

  22378 18 012643   000124 237000 19                 LDAQ    84
        18 012644   200122 757100                    STAQ    @NBR_FILES+1,,AUTO
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:449  
        18 012645   200110 630500                    EPPR0   NBR_ACCTS_DELETED,,AUTO
        18 012646   200121 450500                    STP0    SAVE_SOURCE_DCB$+3,,AUTO
        18 012647   012667 701000 18                 TSX1    FLM_DISP
        18 012650   000000 011000                    NOP     0

     3375    22379    3         CALL FLM_DISP( NBR_FILES_DELETED, ' files    ', 'cleaned up ' );

  22379 18 012651   000126 237000 19                 LDAQ    86
        18 012652   200122 757100                    STAQ    @NBR_FILES+1,,AUTO
        18 012653   200107 630500                    EPPR0   NBR_FILES_DELETED,,AUTO
        18 012654   200121 450500                    STP0    SAVE_SOURCE_DCB$+3,,AUTO
        18 012655   012667 701000 18                 TSX1    FLM_DISP
        18 012656   000000 011000                    NOP     0

     3376    22380    3         CALL FLM_DISP( NBR_FILES_INACTIVATED, ' files    ', 'inactivated' );

  22380 18 012657   000130 237000 19                 LDAQ    88
        18 012660   200122 757100                    STAQ    @NBR_FILES+1,,AUTO
        18 012661   200106 630500                    EPPR0   NBR_FILES_INACTIVATED,,AUTO
        18 012662   200121 450500                    STP0    SAVE_SOURCE_DCB$+3,,AUTO
        18 012663   012667 701000 18                 TSX1    FLM_DISP
        18 012664   000000 011000                    NOP     0

     3377    22381    3         END;

     3378    22382
     3379    22383    2      RETURN;

  22383 18 012665   200104 221300                    LDX1  ! DCB#+1,,AUTO
        18 012666   000001 702211                    TSX2  ! 1,X1

     3380    22384
     3381    22385
     3382    22386    2   FLM_DISP: PROC( NBR_FILES, WHAT, DISP );

  22386 18 012667   200120 741300       FLM_DISP     STX1  ! SAVE_SOURCE_DCB$+2,,AUTO

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:450  
     3383    22387
     3384    22388    3   DCL NBR_FILES SBIN;
     3385    22389    3   DCL WHAT CHAR(10);
     3386    22390    3   DCL DISP CHAR(11);
     3387    22391
     3388    22392        /********************/
     3389    22393
     3390    22394    3      IF NBR_FILES > 0

  22394 18 012670   200121 470500                    LDP0    @NBR_FILES,,AUTO
        18 012671   000000 235100                    LDA     0,,PR0
        18 012672   012722 604400 18                 TMOZ    s:22405

     3391    22395    4       THEN DO;

     3392    22396    4         FILE_DISP_REC.DISP = DISP;

  22396 18 012673   200123 471500                    LDP1    @DISP,,AUTO
        18 012674   040000 100500                    MLR     fill='040'O
        18 012675   100000 000013                    ADSC9   0,,PR1                   cn=0,n=11
        18 012676   000212 000013 2                  ADSC9   FILE_DISP_REC+4          cn=0,n=11

     3393    22397    4         FILE_DISP_REC.WHAT = WHAT;

  22397 18 012677   200122 473500                    LDP3    @WHAT,,AUTO
        18 012700   040000 100500                    MLR     fill='040'O
        18 012701   300000 000012                    ADSC9   0,,PR3                   cn=0,n=10
        18 012702   000207 400012 2                  ADSC9   FILE_DISP_REC+1          cn=2,n=10

     3394    22398    4         CALL BINCHAR( FILE_DISP_REC.NBR, NBR_FILES );

  22398 18 012703   000000 301500                    BTD
        18 012704   000000 000004                    NDSC9   0,,PR0                   cn=0,s=lsgnf,sf=0,n=4
        18 012705   000206 230005 2                  NDSC9   FILE_DISP_REC            cn=1,s=nosgn,sf=0,n=5

     3395    22399    4        CALL EDITCHAR( FILE_DISP_REC.NBR, , , NO_LEADING_5_ZEROS, FILE_DISP_REC.NBR );

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:451  
  22399 18 012706   000000 024400                    MVNE
        18 012707   000206 230005 2                  NDSC9   FILE_DISP_REC            cn=1,s=nosgn,sf=0,n=5
        18 012710   000042 000001 17                 ADSC9   NO_LEADING_5_ZEROS       cn=0,n=1
        18 012711   000206 200005 2                  ADSC9   FILE_DISP_REC            cn=1,n=5

     3396    22400    4         CALL M$WRITE( WRITE_FILE_DISP_REC )

  22400 18 012712   002772 630400 2                  EPPR0   WRITE_FILE_DISP_REC
        18 012713   440001 713400                    CLIMB   alt,write
        18 012714   401400 401760                    pmme    nvectors=4
        18 012715   012717 702000 18                 TSX2    s:22402
        18 012716   012722 710000 18                 TRA     s:22405

     3397    22401    5          WHENALTRETURN DO;

     3398    22402    5            CALL FLI$RPT_ERR;

  22402 18 012717   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 012720   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 012721   000000 011000                    NOP     0

     3399    22403    5            END;

     3400    22404    4         END;

     3401    22405    3      RETURN;

  22405 18 012722   200120 221300                    LDX1  ! SAVE_SOURCE_DCB$+2,,AUTO
        18 012723   000001 702211                    TSX2  ! 1,X1

     3402    22406
     3403    22407    3   END FLM_DISP;
     3404    22408
     3405    22409
     3406    22410    2   FLM_CLEANUP_ACCOUNT: PROC;

  22410 18 012724   200120 741300       FLM_CLEANUP* STX1  ! SAVE_SOURCE_DCB$+2,,AUTO
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:452  

     3407    22411        /*F*  NAME: FLM_CLEANUP_ACCOUNT
     3408    22412              PURPOSE: Clean up deleted account entry.
     3409    22413        */
     3410    22414
     3411    22415        /********************/
     3412    22416
     3413    22417        /*
     3414    22418          ***** Only delete the source acct. on a TRANSFER UNPROCT if ANYF is set.
     3415    22419        */
     3416    22420    3      IF DISK_OPTION.DELETE AND DISK_OPTION.XFER AND (NOT DISK_SRCHCOND.ANYF#)

  22420 18 012725   000002 236000 xsym               LDQ     DISK_OPTION+2
        18 012726   040000 316003                    CANQ    16384,DU
        18 012727   012735 600000 18                 TZE     s:22422
        18 012730   000400 316003                    CANQ    256,DU
        18 012731   012735 600000 18                 TZE     s:22422
        18 012732   000000 236000 xsym               LDQ     DISK_SRCHCOND
        18 012733   000400 316003                    CANQ    256,DU
        18 012734   012774 600000 18                 TZE     DONTDELACCT

     3417    22421    3       THEN GOTO DONTDELACCT;
     3418    22422    3      CALL M$OPEN( CLEANUP_ACCT ) ALTRET(REPERRRET);

  22422 18 012735   003006 630400 2                  EPPR0   CLEANUP_ACCT
        18 012736   450000 713400                    CLIMB   alt,open
        18 012737   410400 401760                    pmme    nvectors=18
        18 012740   013052 702000 18                 TSX2    REPERRRET

     3419    22423    3      NBR_ACCTS_DELETED = NBR_ACCTS_DELETED + 1;

  22423 18 012741   200110 054100                    AOS     NBR_ACCTS_DELETED,,AUTO

     3420    22424    3      ERR.CODE = %E$NOPROC;

  22424 18 012742   200020 236100                    LDQ     ERR,,AUTO
        18 012743   000060 376000 19                 ANQ     48
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:453  
        18 012744   003520 276007                    ORQ     1872,DL
        18 012745   200020 756100                    STQ     ERR,,AUTO

     3421    22425    3     CALL FLP$WR_FILE_INFO(DCB$,ADDR(NIL),DEL_LIST_REC.CSN,DEL_LIST_REC.CFSN,' ','1'B,
             22425               ERR,PR_DEV_LT,'0'B);

  22425 18 012746   000001 236000 xsym               LDQ     B_VECTNIL+1
        18 012747   200124 756100                    STQ     @DISP+1,,AUTO
        18 012750   000052 236000 19                 LDQ     42
        18 012751   200135 756100                    STQ     @DISP+10,,AUTO
        18 012752   200072 630500                    EPPR0   PR_DEV_LT,,AUTO
        18 012753   200134 450500                    STP0    @DISP+9,,AUTO
        18 012754   200020 631500                    EPPR1   ERR,,AUTO
        18 012755   200133 451500                    STP1    @DISP+8,,AUTO
        18 012756   000055 236000 19                 LDQ     45
        18 012757   200132 756100                    STQ     @DISP+7,,AUTO
        18 012760   000132 237000 19                 LDAQ    90
        18 012761   200130 757100                    STAQ    @DISP+5,,AUTO
        18 012762   000134 236000 19                 LDQ     92
        18 012763   200127 756100                    STQ     @DISP+4,,AUTO
        18 012764   200124 633500                    EPPR3   @DISP+1,,AUTO
        18 012765   200126 453500                    STP3    @DISP+3,,AUTO
        18 012766   000135 236000 19                 LDQ     93
        18 012767   200125 756100                    STQ     @DISP+2,,AUTO
        18 012770   200125 630500                    EPPR0   @DISP+2,,AUTO
        18 012771   000053 631400 19                 EPPR1   43
        18 012772   000000 701000 xent               TSX1    FLP$WR_FILE_INFO
        18 012773   000000 011000                    NOP     0

  22424 18 012774                       DONTDELACCT  null
     3422    22426    3   DONTDELACCT: ;
     3423    22427        /*
     3424    22428          **** Delete the account from the MAD only if the account does not
     3425    22429          **** exist on another packset.
     3426    22430        */
     3427    22431    3      CALL M$MADMUCK (GET_PSN_FROM_MAD)

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:454  
  22431 18 012774   003120 630400 2                  EPPR0   GET_PSN_FROM_MAD
        18 012775   460005 713400                    CLIMB   alt,+24581
        18 012776   401000 401760                    pmme    nvectors=3
        18 012777   013001 702000 18                 TSX2    s:22433
        18 013000   013012 710000 18                 TRA     s:22437

     3428    22432    4       WHENALTRETURN DO;

     3429    22433    4         IF B$TCB.ALT$->B$ALT.ERR.CODE ~= %E$NOKEY

  22433 18 013001   000000 470400 xsym               LDP0    B$TCB$
        18 013002   000000 471500                    LDP1    0,,PR0
        18 013003   100102 236100                    LDQ     66,,PR1
        18 013004   377770 376007                    ANQ     131064,DL
        18 013005   001020 116007                    CMPQ    528,DL
        18 013006   013052 601000 18                 TNZ     REPERRRET

     3430    22434    4          THEN GOTO REPERRRET;
     3431    22435    4         MAD_SN.SN#(0) = DEL_LIST_REC.VLP_SN.SN#(0);

  22435 18 013007   040000 100400                    MLR     fill='040'O
        18 013010   000155 000006 2                  ADSC9   DEL_LIST_REC+1           cn=0,n=6
        18 013011   000245 000006 2                  ADSC9   MAD_SN+1                 cn=0,n=6

     3432    22436    4         END;

     3433    22437    3      IF DEL_LIST_REC.VLP_SN.SN#(0) = MAD_SN.SN#(0)

  22437 18 013012   040000 106400                    CMPC    fill='040'O
        18 013013   000155 000006 2                  ADSC9   DEL_LIST_REC+1           cn=0,n=6
        18 013014   000245 000006 2                  ADSC9   MAD_SN+1                 cn=0,n=6
        18 013015   013050 601000 18                 TNZ     s:22449

     3434    22438    4       THEN DO;

     3435    22439    4         CALL M$MADMUCK( DEL_ACCT_FROM_MAD )

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:455  
  22439 18 013016   003100 630400 2                  EPPR0   DEL_ACCT_FROM_MAD
        18 013017   460005 713400                    CLIMB   alt,+24581
        18 013020   401000 401760                    pmme    nvectors=3
        18 013021   013023 702000 18                 TSX2    s:22442
        18 013022   013023 710000 18                 TRA     s:22442

     3436    22440    5          WHENALTRETURN DO;

     3437    22441    5            END;

     3438    22442    4         IF DISK_OPTION.XFER AND DISK_OPTION.DELETE

  22442 18 013023   000002 236000 xsym               LDQ     DISK_OPTION+2
        18 013024   000400 316003                    CANQ    256,DU
        18 013025   013050 600000 18                 TZE     s:22449
        18 013026   040000 316003                    CANQ    16384,DU
        18 013027   013050 600000 18                 TZE     s:22449
        18 013030   040000 106400                    CMPC    fill='040'O
        18 013031   000175 000010 2                  ADSC9   DEL_LIST_REC+17          cn=0,n=8
        18 013032   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        18 013033   013050 600000 18                 TZE     s:22449
        18 013034   040000 106400                    CMPC    fill='040'O
        18 013035   000177 000010 2                  ADSC9   DEL_LIST_REC+19          cn=0,n=8
        18 013036   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        18 013037   013050 600000 18                 TZE     s:22449

     3439    22443    4           AND DEL_LIST_REC.TO_ACCT ~= ' ' AND DEL_LIST_REC.TO_SN ~= ' '
     3440    22444    4          THEN CALL M$MADMUCK( ADD_ACCT_TO_MAD )

  22444 18 013040   003110 630400 2                  EPPR0   ADD_ACCT_TO_MAD
        18 013041   460005 713400                    CLIMB   alt,+24581
        18 013042   401000 401760                    pmme    nvectors=3
        18 013043   013045 702000 18                 TSX2    s:22446
        18 013044   013050 710000 18                 TRA     s:22449

     3441    22445    5             WHENALTRETURN DO;

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:456  
     3442    22446    5               CALL FLI$RPT_ERR;

  22446 18 013045   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 013046   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 013047   000000 011000                    NOP     0

     3443    22447    5               END;

     3444    22448    4         END;

     3445    22449    3      ERR = '0'B;

  22449 18 013050   200020 450100                    STZ     ERR,,AUTO

     3446    22450    4      DO WHILE ( '0'B );

  22450 18 013051   013055 710000 18                 TRA     s:22454

  22449 18 013052                       REPERRRET    null
     3447    22451    4   REPERRRET: ;
     3448    22452    4         CALL FLI$RPT_ERR;

  22452 18 013052   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 013053   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 013054   000000 011000                    NOP     0

     3449    22453    4         END;

     3450    22454    3      RETURN;

  22454 18 013055   200120 221300                    LDX1  ! SAVE_SOURCE_DCB$+2,,AUTO
        18 013056   000001 702211                    TSX2  ! 1,X1

     3451    22455
     3452    22456    3   END FLM_CLEANUP_ACCOUNT;
     3453    22457
     3454    22458
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:457  
     3455    22459    2   FLM_CLEANUP_FILE: PROC;

  22459 18 013057   200120 741300       FLM_CLEANUP* STX1  ! SAVE_SOURCE_DCB$+2,,AUTO

     3456    22460        /*F*  NAME: FLM_CLEANUP_FILE
     3457    22461              PURPOSE: Inactivate file, delete file and/or clean deleted
     3458    22462                 file directory entry.
     3459    22463        */
     3460    22464
     3461    22465        /********************/
     3462    22466
     3463    22467    3      IF DEL_LIST_REC.INACTIVATE

  22467 18 013060   000203 236000 2                  LDQ     DEL_LIST_REC+23
        18 013061   400000 316007                    CANQ    -131072,DL
        18 013062   013072 600000 18                 TZE     s:22471

     3464    22468    3       THEN IF ( NOT F$DCB.DESC.DELF# )

  22468 18 013063   200061 470500                    LDP0    M$DISK_OUT$,,AUTO
        18 013064   000005 236100                    LDQ     5,,PR0
        18 013065   400000 316007                    CANQ    -131072,DL
        18 013066   013074 601000 18                 TNZ     s:22472

     3465    22469    3          THEN DISK_CLOSE_NEXT.V.EFTOPER.ISTOW# = '1'B;

  22469 18 013067   010000 236007                    LDQ     4096,DL
        18 013070   000032 256000 xsym               ORSQ    DISK_CLOSE_NEXT+26
        18 013071   013074 710000 18                 TRA     s:22472

     3466    22470    3          ELSE ;
     3467    22471    3       ELSE CALL FLM_CLEAN ALTRET( JUSTRET );

  22471 18 013072   013116 701000 18                 TSX1    FLM_CLEAN
        18 013073   013114 702000 18                 TSX2    JUSTRET

     3468    22472    3      IF F$DCB.FCD#
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:458  

  22472 18 013074   200061 470500                    LDP0    M$DISK_OUT$,,AUTO
        18 013075   000031 236100                    LDQ     25,,PR0
        18 013076   020000 316007                    CANQ    8192,DL
        18 013077   013114 600000 18                 TZE     JUSTRET

     3469    22473    4       THEN DO;

     3470    22474    4         CALL M$CLOSE( DISK_CLOSE_NEXT )

  22474 18 013100   000000 630400 xsym               EPPR0   DISK_CLOSE_NEXT
        18 013101   450001 713400                    CLIMB   alt,close
        18 013102   406000 401760                    pmme    nvectors=13
        18 013103   013111 702000 18                 TSX2    s:22480

     3471    22475    5          WHENRETURN DO;

     3472    22476    5            IF DEL_LIST_REC.INACTIVATE

  22476 18 013104   000203 236000 2                  LDQ     DEL_LIST_REC+23
        18 013105   400000 316007                    CANQ    -131072,DL
        18 013106   013110 600000 18                 TZE     s:22478

     3473    22477    5             THEN NBR_FILES_INACTIVATED = NBR_FILES_INACTIVATED + 1;

  22477 18 013107   200106 054100                    AOS     NBR_FILES_INACTIVATED,,AUTO

     3474    22478    5            END;

  22478 18 013110   013114 710000 18                 TRA     JUSTRET

     3475    22479    5          WHENALTRETURN DO;

     3476    22480    5            CALL FLI$RPT_ERR;

  22480 18 013111   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 013112   000000 701000 xent               TSX1    FLI$RPT_ERR
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:459  
        18 013113   000000 011000                    NOP     0

     3477    22481    5            END;

     3478    22482    4         END;

  22472 18 013114                       JUSTRET      null
     3479    22483
     3480    22484    3   JUSTRET: ;
     3481    22485    3      RETURN;

  22485 18 013114   200120 221300                    LDX1  ! SAVE_SOURCE_DCB$+2,,AUTO
        18 013115   000001 702211                    TSX2  ! 1,X1

     3482    22486
     3483    22487    3   END FLM_CLEANUP_FILE;
     3484    22488
     3485    22489
     3486    22490    2   FLM_CLEAN: PROC ALTRET;

  22490 18 013116   200122 741300       FLM_CLEAN    STX1  ! @WHAT,,AUTO

     3487    22491        /*F*  NAME: FLM_CLEAN
     3488    22492              PURPOSE: Unarchive and/or delete existing disk file.
     3489    22493        */
     3490    22494
     3491    22495        /********************/
     3492    22496
     3493    22497    3      IF NOT SOURCE_DCB$->F$DCB.DESC.DELF#

  22497 18 013117   200014 470500                    LDP0    SOURCE_DCB$,,AUTO
        18 013120   000005 236100                    LDQ     5,,PR0
        18 013121   400000 316007                    CANQ    -131072,DL
        18 013122   013270 601000 18                 TNZ     s:22541

     3494    22498    4       THEN DO;

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:460  
     3495    22499    4         IF SOURCE_DCB$->F$DCB.DESC.ARCHIVE#

  22499 18 013123   001000 316007                    CANQ    512,DL
        18 013124   013127 601000 18                 TNZ     s:22502
        18 013125   010000 316007                    CANQ    4096,DL
        18 013126   013134 600000 18                 TZE     s:22505

     3496    22500    4           OR SOURCE_DCB$->F$DCB.DESC.QS#
     3497    22501    5          THEN DO;                         /* File must be unarchived first      */

     3498    22502    5            DISK_CLOSE_NEXT.V.EFTOPER.UPDDESC# = '1'B;

  22502 18 013127   004000 236007                    LDQ     2048,DL
        18 013130   000032 256000 xsym               ORSQ    DISK_CLOSE_NEXT+26

     3499    22503    5            DISK_CLOSE_NEXT.V.DESC.TERMINATE# = '1'B;

  22503 18 013131   000020 236003                    LDQ     16,DU
        18 013132   000033 256000 xsym               ORSQ    DISK_CLOSE_NEXT+27

     3500    22504    5            END;

  22504 18 013133   013136 710000 18                 TRA     s:22506

     3501    22505    4          ELSE DISK_CLOSE_NEXT.V.DISP# = %RELEASE#;

  22505 18 013134   000001 236007                    LDQ     1,DL
        18 013135   000032 552004 xsym               STBQ    DISK_CLOSE_NEXT+26,'04'O

     3502    22506    4         CALL M$CLOSE( DISK_CLOSE_NEXT )

  22506 18 013136   000000 630400 xsym               EPPR0   DISK_CLOSE_NEXT
        18 013137   450001 713400                    CLIMB   alt,close
        18 013140   406000 401760                    pmme    nvectors=13
        18 013141   013270 702000 18                 TSX2    s:22541

     3503    22507    5          WHENRETURN DO;         /* File is now either unarchived or deleted     */
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:461  

     3504    22508    5            IF DISK_CLOSE_NEXT.V.DISP# = %RELEASE#

  22508 18 013142   000032 236000 xsym               LDQ     DISK_CLOSE_NEXT+26
        18 013143   000777 376007                    ANQ     511,DL
        18 013144   000001 116007                    CMPQ    1,DL
        18 013145   013151 601000 18                 TNZ     s:22511

     3505    22509    5             THEN DISK_CLOSE_NEXT.V.DISP# = %SAVE#;

  22509 18 013146   000002 236007                    LDQ     2,DL
        18 013147   000032 552004 xsym               STBQ    DISK_CLOSE_NEXT+26,'04'O
        18 013150   013161 710000 18                 TRA     s:22515

     3506    22510    6             ELSE DO;            /* File was unarchived and must now be deleted  */

     3507    22511    6               OPEN_BLOCK.V.DELETE# = '1'B;

  22511 18 013151   040000 236007                    LDQ     16384,DL
        18 013152   002744 256000 2                  ORSQ    OPEN_BLOCK+36

     3508    22512    6               CALL M$OPEN( OPEN_BLOCK ) ALTRET( REPERRALT );

  22512 18 013153   002700 630400 2                  EPPR0   OPEN_BLOCK
        18 013154   450000 713400                    CLIMB   alt,open
        18 013155   410400 401760                    pmme    nvectors=18
        18 013156   013351 702000 18                 TSX2    REPERRALT

     3509    22513    6               OPEN_BLOCK.V.DELETE# = '0'B;

  22513 18 013157   000066 236000 19                 LDQ     54
        18 013160   002744 356000 2                  ANSQ    OPEN_BLOCK+36

     3510    22514    6               END;

     3511    22515    5            SAVE_SOURCE_DCB$->F$DCB = SOURCE_DCB$->F$DCB;

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:462  
  22515 18 013161   200116 470500                    LDP0    SAVE_SOURCE_DCB$,,AUTO
        18 013162   000140 236100                    LDQ     96,,PR0
        18 013163   000033 772000                    QRL     27
        18 013164   000037 376007                    ANQ     31,DL
        18 013165   000601 620006                    EAX0    385,QL
        18 013166   200014 471500                    LDP1    SOURCE_DCB$,,AUTO
        18 013167   100140 236100                    LDQ     96,,PR1
        18 013170   000033 772000                    QRL     27
        18 013171   000037 376007                    ANQ     31,DL
        18 013172   000601 621006                    EAX1    385,QL
        18 013173   000140 100540                    MLR     fill='000'O
        18 013174   100000 000011                    ADSC9   0,,PR1                   cn=0,n=*X1
        18 013175   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0

     3512    22516    5            CALL M$OPEN( OPEN_BLOCK ) ALTRET( CHKERRALT );

  22516 18 013176   002700 630400 2                  EPPR0   OPEN_BLOCK
        18 013177   450000 713400                    CLIMB   alt,open
        18 013200   410400 401760                    pmme    nvectors=18
        18 013201   013276 702000 18                 TSX2    CHKERRALT

     3513    22517    5            IF NOT DEL_LIST_REC.INACTIVATE

  22517 18 013202   000203 236000 2                  LDQ     DEL_LIST_REC+23
        18 013203   400000 316007                    CANQ    -131072,DL
        18 013204   013241 601000 18                 TNZ     s:22524

     3514    22518    6             THEN DO;

     3515    22519    6               NBR_FILES_DELETED = NBR_FILES_DELETED + 1;

  22519 18 013205   200107 054100                    AOS     NBR_FILES_DELETED,,AUTO

     3516    22520    6               ERR.CODE = %E$NOFILE;

  22520 18 013206   200020 236100                    LDQ     ERR,,AUTO
        18 013207   000060 376000 19                 ANQ     48
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:463  
        18 013210   001610 276007                    ORQ     904,DL
        18 013211   200020 756100                    STQ     ERR,,AUTO

     3517    22521    6               CALL FLP$WR_FILE_INFO(SAVE_SOURCE_DCB$,ADDR(NIL),DEL_LIST_REC.CSN,
             22521                        DEL_LIST_REC.CFSN,' ',,ERR,PR_DEV_LT,'0'B);

  22521 18 013212   000001 236000 xsym               LDQ     B_VECTNIL+1
        18 013213   200124 756100                    STQ     @DISP+1,,AUTO
        18 013214   000052 236000 19                 LDQ     42
        18 013215   200135 756100                    STQ     @DISP+10,,AUTO
        18 013216   200072 630500                    EPPR0   PR_DEV_LT,,AUTO
        18 013217   200134 450500                    STP0    @DISP+9,,AUTO
        18 013220   200020 631500                    EPPR1   ERR,,AUTO
        18 013221   200133 451500                    STP1    @DISP+8,,AUTO
        18 013222   000001 236000 xsym               LDQ     B_VECTNIL+1
        18 013223   200132 756100                    STQ     @DISP+7,,AUTO
        18 013224   000132 237000 19                 LDAQ    90
        18 013225   200130 757100                    STAQ    @DISP+5,,AUTO
        18 013226   000134 236000 19                 LDQ     92
        18 013227   200127 756100                    STQ     @DISP+4,,AUTO
        18 013230   200124 633500                    EPPR3   @DISP+1,,AUTO
        18 013231   200126 453500                    STP3    @DISP+3,,AUTO
        18 013232   200116 634500                    EPPR4   SAVE_SOURCE_DCB$,,AUTO
        18 013233   200125 454500                    STP4    @DISP+2,,AUTO
        18 013234   200125 630500                    EPPR0   @DISP+2,,AUTO
        18 013235   000053 631400 19                 EPPR1   43
        18 013236   000000 701000 xent               TSX1    FLP$WR_FILE_INFO
        18 013237   000000 011000                    NOP     0

     3518    22522    6               ERR = '0'B;

  22522 18 013240   200020 450100                    STZ     ERR,,AUTO

     3519    22523    6               END;

     3520    22524    5            IF DEL_LIST_REC.VLP_SN.SN#(0) = SOURCE_DCB$->F$DCB.PSN#

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:464  
  22524 18 013241   200014 470500                    LDP0    SOURCE_DCB$,,AUTO
        18 013242   040100 106400                    CMPC    fill='040'O
        18 013243   000155 000006 2                  ADSC9   DEL_LIST_REC+1           cn=0,n=6
        18 013244   000024 000006                    ADSC9   20,,PR0                  cn=0,n=6
        18 013245   013262 601000 18                 TNZ     s:22530
        18 013246   040100 106400                    CMPC    fill='040'O
        18 013247   000157 000010 2                  ADSC9   DEL_LIST_REC+3           cn=0,n=8
        18 013250   000020 000010                    ADSC9   16,,PR0                  cn=0,n=8
        18 013251   013262 601000 18                 TNZ     s:22530
        18 013252   040100 106400                    CMPC    fill='040'O
        18 013253   000161 200037 2                  ADSC9   DEL_LIST_REC+5           cn=1,n=31
        18 013254   000010 200037                    ADSC9   8,,PR0                   cn=1,n=31
        18 013255   013262 601000 18                 TNZ     s:22530
        18 013256   000161 236000 2                  LDQ     DEL_LIST_REC+5
        18 013257   000010 676100                    ERQ     8,,PR0
        18 013260   777000 376003                    ANQ     -512,DU
        18 013261   013270 600000 18                 TZE     s:22541

     3521    22525    5              AND DEL_LIST_REC.ACCT = SOURCE_DCB$->F$DCB.ACCT#
     3522    22526    5              AND DEL_LIST_REC.NAME#.C = SOURCE_DCB$->F$DCB.NAME#.C
     3523    22527    5              AND DEL_LIST_REC.NAME#.L = SOURCE_DCB$->F$DCB.NAME#.L
     3524    22528    5             THEN ;              /* Correct file...it's ready to be cleaned up   */
     3525    22529    6             ELSE DO;  /* Not the right file...must have deleted correct file    */

     3526    22530    6               DISK_CLOSE_NEXT.V.EFTOPER = '0'B;

  22530 18 013262   000100 236000 19                 LDQ     64
        18 013263   000032 356000 xsym               ANSQ    DISK_CLOSE_NEXT+26

     3527    22531    6               DISK_CLOSE_NEXT.V.DISP# = %SAVE#;

  22531 18 013264   000002 236007                    LDQ     2,DL
        18 013265   000032 552004 xsym               STBQ    DISK_CLOSE_NEXT+26,'04'O

     3528    22532    6               RETURN;

  22532 18 013266   200122 221300                    LDX1  ! @WHAT,,AUTO
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:465  
        18 013267   000001 702211                    TSX2  ! 1,X1

     3529    22533    6               END;
     3530    22534    5            END;
     3531    22535    4         END;

     3532    22536
     3533    22537        /***
     3534    22538         *** File is deleted by this point.  We're ready for clean up.
     3535    22539         ***/
     3536    22540
     3537    22541    3      DISK_CLOSE_NEXT.V.EFTOPER = '0'B;

  22541 18 013270   000100 236000 19                 LDQ     64
        18 013271   000032 356000 xsym               ANSQ    DISK_CLOSE_NEXT+26

     3538    22542    3      DISK_CLOSE_NEXT.V.EFTOPER.DELFDE# = '1'B;

  22542 18 013272   002000 236007                    LDQ     1024,DL
        18 013273   000032 256000 xsym               ORSQ    DISK_CLOSE_NEXT+26

     3539    22543
     3540    22544    3      RETURN;

  22544 18 013274   200122 221300                    LDX1  ! @WHAT,,AUTO
        18 013275   000001 702211                    TSX2  ! 1,X1

  22542 18 013276                       CHKERRALT    null
     3541    22545
     3542    22546    3   CHKERRALT: ;
     3543    22547    3      IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE = %E$FDEOF

  22547 18 013276   000000 470400 xsym               LDP0    B$TCB$
        18 013277   000000 471500                    LDP1    0,,PR0
        18 013300   100102 236100                    LDQ     66,,PR1
        18 013301   377770 376007                    ANQ     131064,DL
        18 013302   001540 116007                    CMPQ    864,DL
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:466  
        18 013303   013351 601000 18                 TNZ     REPERRALT

     3544    22548    4       THEN DO;        /* Not the right file...must have deleted correct file    */

     3545    22549    4         DISK_CLOSE_NEXT.V.EFTOPER = '0'B;

  22549 18 013304   000100 236000 19                 LDQ     64
        18 013305   000032 356000 xsym               ANSQ    DISK_CLOSE_NEXT+26

     3546    22550    4         DISK_CLOSE_NEXT.V.DISP# = %SAVE#;

  22550 18 013306   000002 236007                    LDQ     2,DL
        18 013307   000032 552004 xsym               STBQ    DISK_CLOSE_NEXT+26,'04'O

     3547    22551    4         IF NOT DEL_LIST_REC.INACTIVATE

  22551 18 013310   000203 236000 2                  LDQ     DEL_LIST_REC+23
        18 013311   400000 316007                    CANQ    -131072,DL
        18 013312   013347 601000 18                 TNZ     s:22558

     3548    22552    5          THEN DO;

     3549    22553    5            NBR_FILES_DELETED = NBR_FILES_DELETED + 1;

  22553 18 013313   200107 054100                    AOS     NBR_FILES_DELETED,,AUTO

     3550    22554    5            ERR.CODE = %E$NOFILE;

  22554 18 013314   200020 236100                    LDQ     ERR,,AUTO
        18 013315   000060 376000 19                 ANQ     48
        18 013316   001610 276007                    ORQ     904,DL
        18 013317   200020 756100                    STQ     ERR,,AUTO

     3551    22555    5            CALL FLP$WR_FILE_INFO(SAVE_SOURCE_DCB$,ADDR(NIL),DEL_LIST_REC.CSN,
             22555                     DEL_LIST_REC.CFSN,' ',,ERR,PR_DEV_LT,'0'B);

  22555 18 013320   000001 236000 xsym               LDQ     B_VECTNIL+1
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:467  
        18 013321   200124 756100                    STQ     @DISP+1,,AUTO
        18 013322   000052 236000 19                 LDQ     42
        18 013323   200135 756100                    STQ     @DISP+10,,AUTO
        18 013324   200072 631500                    EPPR1   PR_DEV_LT,,AUTO
        18 013325   200134 451500                    STP1    @DISP+9,,AUTO
        18 013326   200020 633500                    EPPR3   ERR,,AUTO
        18 013327   200133 453500                    STP3    @DISP+8,,AUTO
        18 013330   000001 236000 xsym               LDQ     B_VECTNIL+1
        18 013331   200132 756100                    STQ     @DISP+7,,AUTO
        18 013332   000132 237000 19                 LDAQ    90
        18 013333   200130 757100                    STAQ    @DISP+5,,AUTO
        18 013334   000134 236000 19                 LDQ     92
        18 013335   200127 756100                    STQ     @DISP+4,,AUTO
        18 013336   200124 634500                    EPPR4   @DISP+1,,AUTO
        18 013337   200126 454500                    STP4    @DISP+3,,AUTO
        18 013340   200116 635500                    EPPR5   SAVE_SOURCE_DCB$,,AUTO
        18 013341   200125 455500                    STP5    @DISP+2,,AUTO
        18 013342   200125 630500                    EPPR0   @DISP+2,,AUTO
        18 013343   000053 631400 19                 EPPR1   43
        18 013344   000000 701000 xent               TSX1    FLP$WR_FILE_INFO
        18 013345   000000 011000                    NOP     0

     3552    22556    5            ERR = '0'B;

  22556 18 013346   200020 450100                    STZ     ERR,,AUTO

     3553    22557    5            END;

     3554    22558    4         RETURN;

  22558 18 013347   200122 221300                    LDX1  ! @WHAT,,AUTO
        18 013350   000001 702211                    TSX2  ! 1,X1

  22554 18 013351                       REPERRALT    null
     3555    22559    4         END;
     3556    22560
     3557    22561    3   REPERRALT: ;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:468  
     3558    22562    3      CALL FLI$RPT_ERR;

  22562 18 013351   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 013352   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 013353   000000 011000                    NOP     0

     3559    22563    3      DISK_CLOSE_NEXT.V.DISP# = %SAVE#;

  22563 18 013354   000002 236007                    LDQ     2,DL
        18 013355   000032 552004 xsym               STBQ    DISK_CLOSE_NEXT+26,'04'O

     3560    22564    3      OPEN_BLOCK.V.DELETE# = '0'B;

  22564 18 013356   000066 236000 19                 LDQ     54
        18 013357   002744 356000 2                  ANSQ    OPEN_BLOCK+36

     3561    22565    3      ALTRETURN;

  22565 18 013360   200122 221300                    LDX1  ! @WHAT,,AUTO
        18 013361   000000 702211                    TSX2  ! 0,X1

     3562    22566
     3563    22567    3   END FLM_CLEAN;
     3564    22568
     3565    22569    2   END FLM_CLEANUP;
     3566    22570
     3567    22571
     3568    22572    1   FLM_FILES_FROM_TAPE_DELETE: PROC ALTRET;

  22572 18 013362   200100 741300       FLM_FILES_F* STX1  ! ANY_FILES_FOUND+2,,AUTO

     3569    22573        /*F*   NAME: FLM_FILES_FROM_TAPE_DELETE
     3570    22574               PURPOSE: Searches current tape for deleted files and deletes
     3571    22575                  corresponding file on packset being rebuilt.
     3572    22576        */
     3573    22577
     3574    22578        /*** Auto ***/
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:469  
     3575    22579    2   DCL DISK_SRCHCOND_SAVE BIT(18) AUTO;
     3576    22580    2   DCL FILE_TYPE_SAVE BIT(18) AUTO;
     3577    22581
     3578    22582        /********************/
     3579    22583
     3580    22584        /***
     3581    22585         *** Attempt to recover some pack space by searching the remainder of the
     3582    22586         *** currently mounted tape for deleted files and delete corresponding files
     3583    22587         *** from packset before attempting to continue the REBUILD.
     3584    22588         ***/
     3585    22589    2      OLD_SN = TAPE_SN;          /* Indicates which tape was previously searched */

  22589 18 013363   040100 100400                    MLR     fill='040'O
        18 013364   000000 000006 xsym               ADSC9   TAPE_SN                  cn=0,n=6
        18 013365   200047 000006                    ADSC9   OLD_SN,,AUTO             cn=0,n=6

     3586    22590
     3587    22591    2      CALL FLC$TAPE_CLOSE_NEXT ALTRET( JUSTALT );

  22591 18 013366   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 013367   000000 701000 xent               TSX1    FLC$TAPE_CLOSE_NEXT
        18 013370   013547 702000 18                 TSX2    JUSTALT

     3588    22592    2      TAPE_OPEN.V.CVOL# = %YES#;

  22592 18 013371   000044 236000 xsym               LDQ     TAPE_OPEN+36
        18 013372   000136 376000 19                 ANQ     94
        18 013373   000004 276007                    ORQ     4,DL
        18 013374   000044 756000 xsym               STQ     TAPE_OPEN+36

     3589    22593    2      DISK_SRCHCOND_SAVE = DISK_SRCHCOND;

  22593 18 013375   000000 220000 xsym               LDX0    DISK_SRCHCOND
        18 013376   200101 740100                    STX0    DISK_SRCHCOND_SAVE,,AUTO

     3590    22594    2      DISK_SRCHCOND = '0'B;

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:470  
  22594 18 013377   000000 221003                    LDX1    0,DU
        18 013400   000000 741000 xsym               STX1    DISK_SRCHCOND

     3591    22595    2      DISK_SRCHCOND.DELF# = '1'B;

  22595 18 013401   400000 236003                    LDQ     -131072,DU
        18 013402   000000 256000 xsym               ORSQ    DISK_SRCHCOND

     3592    22596    2      FILE_TYPE_SAVE = FILE_TYPE;

  22596 18 013403   000000 222000 xsym               LDX2    FILE_TYPE
        18 013404   200102 742100                    STX2    FILE_TYPE_SAVE,,AUTO

     3593    22597    2      FILE_TYPE = '0'B;

  22597 18 013405   000000 741000 xsym               STX1    FILE_TYPE

     3594    22598    2      FILE_TYPE.DF = '1'B;

  22598 18 013406   004000 236003                    LDQ     2048,DU
        18 013407   000000 256000 xsym               ORSQ    FILE_TYPE

     3595    22599
     3596    22600    3      DO WHILE ( '1'B );                   /* Search tape for deleted files      */

     3597    22601    3         CALL FLC$TAPE_OPEN_NEXT( SOURCE_DCB$, FPARAM_, ERR) ALTRET( CHKALT );

  22601 18 013410   200020 630500                    EPPR0   ERR,,AUTO
        18 013411   200126 450500                    STP0    @DISP+3,,AUTO
        18 013412   200016 631500                    EPPR1   FPARAM_,,AUTO
        18 013413   200125 451500                    STP1    @DISP+2,,AUTO
        18 013414   200014 633500                    EPPR3   SOURCE_DCB$,,AUTO
        18 013415   200124 453500                    STP3    @DISP+1,,AUTO
        18 013416   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 013417   000021 631400 xsym               EPPR1   B_VECTNIL+17
        18 013420   000000 701000 xent               TSX1    FLC$TAPE_OPEN_NEXT
        18 013421   013502 702000 18                 TSX2    CHKALT
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:471  

     3598    22602    3         CALL FLC$TAPE_CLOSE_NEXT ALTRET( JUSTALT );

  22602 18 013422   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 013423   000000 701000 xent               TSX1    FLC$TAPE_CLOSE_NEXT
        18 013424   013547 702000 18                 TSX2    JUSTALT

     3599    22603
     3600    22604    3         TO_DISK_NAME = SOURCE_DCB$->F$DCB.NAME#; /* Open same file on dest. pack */

  22604 18 013425   200014 470500                    LDP0    SOURCE_DCB$,,AUTO
        18 013426   000000 100500                    MLR     fill='000'O
        18 013427   000010 000040                    ADSC9   8,,PR0                   cn=0,n=32
        18 013430   000234 000040 2                  ADSC9   TO_DISK_NAME             cn=0,n=32

     3601    22605    3         TO_DISK_ACCT.ACCT# = SOURCE_DCB$->F$DCB.ACCT#;

  22605 18 013431   000020 237100                    LDAQ    16,,PR0
        18 013432   000224 757000 2                  STAQ    TO_DISK_ACCT

     3602    22606    3         TO_DISK_SN.SN#(0) = SOURCE_DCB$->F$DCB.PSN#;

  22606 18 013433   040000 100500                    MLR     fill='040'O
        18 013434   000024 000006                    ADSC9   20,,PR0                  cn=0,n=6
        18 013435   000231 000006 2                  ADSC9   TO_DISK_SN+1             cn=0,n=6

     3603    22607    3         DISK_OPEN.V.FUN# = %IN#;

  22607 18 013436   002000 236007                    LDQ     1024,DL
        18 013437   000045 552010 xsym               STBQ    DISK_OPEN+37,'10'O

     3604    22608    3         DISK_OPEN.IFPARAM_ = VECTOR(NIL);

  22608 18 013440   000024 237000 19                 LDAQ    20
        18 013441   000026 757000 xsym               STAQ    DISK_OPEN+22

     3605    22609    3         DISK_OPEN.FPARAM_ = VECTOR(NIL);
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:472  

  22609 18 013442   000024 237000 19                 LDAQ    20
        18 013443   000030 757000 xsym               STAQ    DISK_OPEN+24

     3606    22610    3         CALL M$OPEN( DISK_OPEN )

  22610 18 013444   000000 630400 xsym               EPPR0   DISK_OPEN
        18 013445   450000 713400                    CLIMB   alt,open
        18 013446   410400 401760                    pmme    nvectors=18
        18 013447   013476 702000 18                 TSX2    s:22625

     3607    22611    4          WHENRETURN DO;

     3608    22612    4            DISK_CLOSE.V.EFTOPER = '0'B;   /* Delete corresponding file on disk  */

  22612 18 013450   000100 236000 19                 LDQ     64
        18 013451   000032 356000 xsym               ANSQ    DISK_CLOSE+26

     3609    22613    4            DISK_CLOSE.V.DESC.TERMINATE# = %NO#;

  22613 18 013452   000115 236000 19                 LDQ     77
        18 013453   000033 356000 xsym               ANSQ    DISK_CLOSE+27

     3610    22614    4            IF F$DCB.DESC.DELF#

  22614 18 013454   200061 470500                    LDP0    M$DISK_OUT$,,AUTO
        18 013455   000005 236100                    LDQ     5,,PR0
        18 013456   400000 316007                    CANQ    -131072,DL
        18 013457   013463 600000 18                 TZE     s:22616

     3611    22615    4             THEN DISK_CLOSE.V.EFTOPER.DELFDE# = %YES#;

  22615 18 013460   002000 236007                    LDQ     1024,DL
        18 013461   000032 256000 xsym               ORSQ    DISK_CLOSE+26
        18 013462   013465 710000 18                 TRA     s:22617

     3612    22616    4             ELSE DISK_CLOSE.V.DISP# = %RELEASE#;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:473  

  22616 18 013463   000001 236007                    LDQ     1,DL
        18 013464   000032 552004 xsym               STBQ    DISK_CLOSE+26,'04'O

     3613    22617    4            CALL M$CLOSE( DISK_CLOSE )

  22617 18 013465   000000 630400 xsym               EPPR0   DISK_CLOSE
        18 013466   450001 713400                    CLIMB   alt,close
        18 013467   406000 401760                    pmme    nvectors=13
        18 013470   013472 702000 18                 TSX2    s:22619
        18 013471   013475 710000 18                 TRA     s:22621

     3614    22618    5             WHENALTRETURN DO;

     3615    22619    5               CALL FLI$RPT_ERR;

  22619 18 013472   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 013473   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 013474   000000 011000                    NOP     0

     3616    22620    5               END;

     3617    22621    4            END;

  22621 18 013475   013476 710000 18                 TRA     s:22625

     3618    22622    4          WHENALTRETURN DO;                /* Assume file non-existant on pack   */

     3619    22623    4            END;

     3620    22624
     3621    22625    3         BLK_TAG$ = PINCRW( BLK_TAG$, -SIZEW( BLK_TAG ) );

  22625 18 013476   000000 236000 xsym               LDQ     BLK_TAG$
        18 013477   777765 036003                    ADLQ    -11,DU
        18 013500   000000 756000 xsym               STQ     BLK_TAG$

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:474  
     3622    22626    3         END;

  22626 18 013501   013410 710000 18                 TRA     s:22601

     3623    22627
     3624    22628    2   CHKALT:
     3625    22629    2      CALL FLC$TAPE_CLOSE ALTRET( JUSTALT );

  22629 18 013502   000002 631400 xsym  CHKALT       EPPR1   B_VECTNIL+2
        18 013503   000000 701000 xent               TSX1    FLC$TAPE_CLOSE
        18 013504   013547 702000 18                 TSX2    JUSTALT

     3626    22630    2      REWIND_TAPE.V.PSN# = TAPE_SN;

  22630 18 013505   040000 100400                    MLR     fill='040'O
        18 013506   000000 000006 xsym               ADSC9   TAPE_SN                  cn=0,n=6
        18 013507   003305 400006 2                  ADSC9   REWIND_TAPE+3            cn=2,n=6

     3627    22631    2      CALL M$REW( REWIND_TAPE ) ALTRET( JUSTALT );

  22631 18 013510   003302 630400 2                  EPPR0   REWIND_TAPE
        18 013511   440006 713400                    CLIMB   alt,+16390
        18 013512   400000 401760                    pmme    nvectors=1
        18 013513   013547 702000 18                 TSX2    JUSTALT

     3628    22632    2      IF ERR.CODE = %E$EOSET

  22632 18 013514   200020 236100                    LDQ     ERR,,AUTO
        18 013515   377770 376007                    ANQ     131064,DL
        18 013516   013140 116007                    CMPQ    5728,DL
        18 013517   013547 601000 18                 TNZ     JUSTALT

     3629    22633    3       THEN DO;

     3630    22634        /***
     3631    22635         *** Set up OPEN FPT so that we will continue rebuilding with the file that
     3632    22636         *** caused packset space to be exceeded.
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:475  
     3633    22637         ***/
     3634    22638    3         TAPE_OPEN.V.CVOL# = %NO#;

  22638 18 013520   000136 236000 19                 LDQ     94
        18 013521   000044 356000 xsym               ANSQ    TAPE_OPEN+36

     3635    22639    3         DISK_SRCHCOND = DISK_SRCHCOND_SAVE;

  22639 18 013522   200101 220100                    LDX0    DISK_SRCHCOND_SAVE,,AUTO
        18 013523   000000 740000 xsym               STX0    DISK_SRCHCOND

     3636    22640    3         FILE_TYPE = FILE_TYPE_SAVE;

  22640 18 013524   200102 221100                    LDX1    FILE_TYPE_SAVE,,AUTO
        18 013525   000000 741000 xsym               STX1    FILE_TYPE

     3637    22641    3         DISK_FILE_SPEC.NBR = 1;

  22641 18 013526   000001 235007                    LDA     1,DL
        18 013527   000000 470400 xsym               LDP0    DISK_FILE_SPEC$
        18 013530   000000 755100                    STA     0,,PR0

     3638    22642    3         DISK_FILE_SPEC.SPEC.START.ACCT.ACCT#(0) = REBUILD_BUF.START.ACCT.ACCT#;

  22642 18 013531   000000 470400 xsym               LDP0    DISK_FILE_SPEC$
        18 013532   040100 100400                    MLR     fill='040'O
        18 013533   000000 000010 xsym               ADSC9   REBUILD_BUF              cn=0,n=8
        18 013534   000006 000010                    ADSC9   6,,PR0                   cn=0,n=8

     3639    22643    3         DISK_FILE_SPEC.SPEC.START.FILE.L#(0) = REBUILD_BUF.START.FILE.L#;

  22643 18 013535   000002 236000 xsym               LDQ     REBUILD_BUF+2
        18 013536   000033 772000                    QRL     27
        18 013537   000017 552104                    STBQ    15,'04'O,PR0

     3640    22644    3         DISK_FILE_SPEC.SPEC.START.FILE.NAME#(0) = REBUILD_BUF.START.FILE.NAME#;

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:476  
  22644 18 013540   040100 100400                    MLR     fill='040'O
        18 013541   000002 200037 xsym               ADSC9   REBUILD_BUF+2            cn=1,n=31
        18 013542   000010 000037                    ADSC9   8,,PR0                   cn=0,n=31

     3641    22645    3         TAPE_OPEN.V.FSN# = REBUILD_BUF.FSN;

  22645 18 013543   000013 722000 xsym               LXL2    REBUILD_BUF+11
        18 013544   000066 742000 xsym               STX2    TAPE_OPEN+54

     3642    22646    3         RETURN;

  22646 18 013545   200100 221300                    LDX1  ! ANY_FILES_FOUND+2,,AUTO
        18 013546   000001 702211                    TSX2  ! 1,X1

     3643    22647    3         END;
     3644    22648    2   JUSTALT:
     3645    22649    2      ALTRETURN;

  22649 18 013547   200100 221300       JUSTALT      LDX1  ! ANY_FILES_FOUND+2,,AUTO
        18 013550   000000 702211                    TSX2  ! 0,X1

     3646    22650    2   END FLM_FILES_FROM_TAPE_DELETE;
     3647    22651
     3648    22652
     3649    22653    1   FLM_REQUEUE_FILES_FOR_STOW: PROC;

  22653 18 013551   200104 741300       FLM_REQUEUE* STX1  ! DCB#+1,,AUTO

     3650    22654        /*F* NAME: FLM_REQUEUE_FILES_FOR_STOW
     3651    22655             PURPOSE: Requeue (QS) all files from the current output block that did not
     3652    22656                      get written to the output media successfully so that they get
     3653    22657                      stowed on a subsequent archive.
     3654    22658        */
     3655    22659
     3656    22660    2   DCL BLK_TAGT$ PTR AUTO;                 /* Temporary block tag pointer        */
     3657    22661    2   DCL 1 BLK_TAGT BASED(BLK_TAGT$),
     3658    22662           %BLOCK_TAG;
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:477  
     3659    22667    2   DCL DCB# UBIN WORD AUTO;
     3660    22668
     3661    22669    2   DCL 1 FILE_DESC AUTO,                   /* Exactly like M$DCB.DESC            */
     3662    22670    2         2 DELF# BIT(1),
     3663    22671    2         2 NOLIST# BIT(1),
     3664    22672    2         2 BUF# BIT(1),
     3665    22673    2         2 ODSTOW# BIT(1),
     3666    22674    2         2 BAD# BIT(1),
     3667    22675    2         2 QS# BIT(1),
     3668    22676    2         2 * BIT(2),
     3669    22677    2         2 ARCHIVE# BIT(1),
     3670    22678    2         2 BUPM# BIT(1),
     3671    22679    2         2 NBUF# BIT(1),
     3672    22680    2         2 ACTIVE# BIT(1),
     3673    22681    2         2 TPB# BIT(1),
     3674    22682    2         2 TERMINATE# BIT(1),
     3675    22683    2         2 FETCH# BIT(1),
     3676    22684    2         2 * BIT(3);
     3677    22685
     3678    22686        /********************/
     3679    22687
     3680    22688    2      IF LOW_BLK_TAG$ = BLK_TAG0$          /* Just return, no files in block     */

  22688 18 013552   000000 236000 xsym               LDQ     LOW_BLK_TAG$
        18 013553   000000 116000 xsym               CMPQ    BLK_TAG0$
        18 013554   013556 601000 18                 TNZ     s:22691

     3681    22689    2       THEN RETURN;

  22689 18 013555   000001 702211                    TSX2  ! 1,X1

     3682    22690
     3683    22691    2      DCB# = DCBNUM(M$DISK_IN);

  22691 18 013556   000000 236007 xsym               LDQ     M$DISK_IN,DL
        18 013557   200106 756100                    STQ     DCB#,,AUTO

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:478  
     3684    22692    2      CALL FLI$ALLOC_BUF( FIT_AREA,1 );

  22692 18 013560   000137 630400 19                 EPPR0   95
        18 013561   000020 631400 xsym               EPPR1   B_VECTNIL+16
        18 013562   000000 701000 xent               TSX1    FLI$ALLOC_BUF
        18 013563   000000 011000                    NOP     0

     3685    22693    2      OPEN_BLOCK_FILE.FPARAM_ = FIT_AREA;

  22693 18 013564   000136 237000 2                  LDAQ    FIT_AREA
        18 013565   000036 757000 2                  STAQ    OPEN_BLOCK_FILE+24

     3686    22694
     3687    22695        /***
     3688    22696         *** Scan current block for files that did not get written out.
     3689    22697         ***/
     3690    22698    2      BLK_TAGT$ = PINCRW( BLK_TAG0$, -SIZEW(BLK_TAG) ); /* Start at first tag    */

  22698 18 013566   000000 236000 xsym               LDQ     BLK_TAG0$
        18 013567   777765 036003                    ADLQ    -11,DU
        18 013570   200105 756100                    STQ     BLK_TAGT$,,AUTO

     3691    22699
     3692    22700    3      DO WHILE( BLK_TAGT$ >= LOW_BLK_TAG$ );

  22700 18 013571   000000 116000 xsym               CMPQ    LOW_BLK_TAG$
        18 013572   013737 602000 18                 TNC     s:22749

     3693    22701    4         DO CASE( BLK_TAGT.TYPE );

  22701 18 013573   200105 470500                    LDP0    BLK_TAGT$,,AUTO
        18 013574   000000 720100                    LXL0    0,,PR0
        18 013575   000077 360003                    ANX0    63,DU
        18 013576   000012 100003                    CMPX0   10,DU
        18 013577   013601 602010 18                 TNC     s:22701+6,X0
        18 013600   013732 710000 18                 TRA     s:22746
        18 013601   013613 710000 18                 TRA     s:22704
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:479  
        18 013602   013732 710000 18                 TRA     s:22746
        18 013603   013732 710000 18                 TRA     s:22746
        18 013604   013613 710000 18                 TRA     s:22704
        18 013605   013732 710000 18                 TRA     s:22746
        18 013606   013732 710000 18                 TRA     s:22746
        18 013607   013732 710000 18                 TRA     s:22746
        18 013610   013732 710000 18                 TRA     s:22746
        18 013611   013732 710000 18                 TRA     s:22746
        18 013612   013613 710000 18                 TRA     s:22704

     3694    22702
     3695    22703    4          CASE( %REG_FILE, %ACUP_FILE, %IDS_FAST_FILE );

     3696    22704    4            FROM_DISK_SN.SN#(0) = BLK_TAG0.WHERE.PSN;

  22704 18 013613   000000 471400 xsym               LDP1    BLK_TAG0$
        18 013614   040000 100500                    MLR     fill='040'O
        18 013615   100003 000006                    ADSC9   3,,PR1                   cn=0,n=6
        18 013616   000001 000006 xsym               ADSC9   FROM_DISK_SN+1           cn=0,n=6

     3697    22705    4            FROM_DISK_ACCT.ACCT# = BLK_TAG0.WHERE.ACCT;

  22705 18 013617   040000 100500                    MLR     fill='040'O
        18 013620   100004 400010                    ADSC9   4,,PR1                   cn=2,n=8
        18 013621   000000 000010 xsym               ADSC9   FROM_DISK_ACCT           cn=0,n=8

     3698    22706    4            FROM_DISK_NAME = BLK_TAGT.NAME;

  22706 18 013622   000000 100500                    MLR     fill='000'O
        18 013623   000003 000040                    ADSC9   3,,PR0                   cn=0,n=32
        18 013624   000000 000040 xsym               ADSC9   FROM_DISK_NAME           cn=0,n=32

     3699    22707    4            CALL M$OPEN ( OPEN_BLOCK_FILE )

  22707 18 013625   000006 630400 2                  EPPR0   OPEN_BLOCK_FILE
        18 013626   450000 713400                    CLIMB   alt,open
        18 013627   410400 401760                    pmme    nvectors=18
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:480  
        18 013630   013726 702000 18                 TSX2    s:22740

     3700    22708    5             WHENRETURN DO;

     3701    22709    5               MODIFIED_FIT_ = FIT_AREA;   /* Reset stow info. if CODE06 exists  */

  22709 18 013631   000136 237000 2                  LDAQ    FIT_AREA
        18 013632   200034 757100                    STAQ    MODIFIED_FIT_,,AUTO

     3702    22710    5               FIT$ = PINCRW( MODIFIED_FIT_.PTR$, SIZEW( FM$GRAN ));

  22710 18 013633   200035 236100                    LDQ     MODIFIED_FIT_+1,,AUTO
        18 013634   000005 036003                    ADLQ    5,DU
        18 013635   200015 756100                    STQ     FIT$,,AUTO

     3703    22711    5               CODE$ = FIT$;

  22711 18 013636   200006 756100                    STQ     CODE$,,AUTO

     3704    22712    5               CALL XSF$LOCCODP( CODE$, 06 )

  22712 18 013637   000073 236000 19                 LDQ     59
        18 013640   200125 756100                    STQ     @DISP+2,,AUTO
        18 013641   200006 630500                    EPPR0   CODE$,,AUTO
        18 013642   200124 450500                    STP0    @DISP+1,,AUTO
        18 013643   200124 630500                    EPPR0   @DISP+1,,AUTO
        18 013644   000020 631400 xsym               EPPR1   B_VECTNIL+16
        18 013645   000000 701000 xent               TSX1    XSF$LOCCODP
        18 013646   013667 702000 18                 TSX2    s:22720

     3705    22713    6                WHENRETURN DO;

     3706    22714    6                  FM$FIT.CODES.NDW(06) = 0;

  22714 18 013647   200015 470500                    LDP0    FIT$,,AUTO
        18 013650   000121 236000 19                 LDQ     81
        18 013651   000006 356100                    ANSQ    6,,PR0
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:481  

     3707    22715    6                  MODIFIED_FIT_.PTR$ = PINCRW( MODIFIED_FIT_.PTR$, SIZEW(FM$GRAN));

  22715 18 013652   200035 236100                    LDQ     MODIFIED_FIT_+1,,AUTO
        18 013653   000005 036003                    ADLQ    5,DU
        18 013654   200035 756100                    STQ     MODIFIED_FIT_+1,,AUTO

     3708    22716    6                  MODIFIED_FIT_.BOUND = MODIFIED_FIT_.BOUND - SIZEC(FM$GRAN);

  22716 18 013655   200034 236100                    LDQ     MODIFIED_FIT_,,AUTO
        18 013656   000020 772000                    QRL     16
        18 013657   000024 136007                    SBLQ    20,DL
        18 013660   000020 736000                    QLS     16
        18 013661   200034 676100                    ERQ     MODIFIED_FIT_,,AUTO
        18 013662   000034 376000 xsym               ANQ     B_VECTNIL+28
        18 013663   200034 656100                    ERSQ    MODIFIED_FIT_,,AUTO

     3709    22717    6                  CLOSE_BLOCK_FILE.IFPARAM_ = MODIFIED_FIT_;

  22717 18 013664   200034 237100                    LDAQ    MODIFIED_FIT_,,AUTO
        18 013665   000126 757000 2                  STAQ    CLOSE_BLOCK_FILE+22

     3710    22718    6                  END;

  22718 18 013666   013671 710000 18                 TRA     s:22726

     3711    22719    6                WHENALTRETURN DO;          /* No CODE06, just ignore             */

     3712    22720    6                  CLOSE_BLOCK_FILE.IFPARAM_ = VECTOR(NIL);

  22720 18 013667   000024 237000 19                 LDAQ    20
        18 013670   000126 757000 2                  STAQ    CLOSE_BLOCK_FILE+22

     3713    22721    6                  END;

     3714    22722
     3715    22723        /***
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:482  
     3716    22724         *** Determine if file is to be requeued actively or inactively.
     3717    22725         ***/
     3718    22726    5               CLOSE_BLOCK_FILE.V.DESC = DCBADDR(DCB#)->F$DCB.DESC;

  22726 18 013671   000031 470400 19                 LDP0    25
        18 013672   000000 471500                    LDP1    0,,PR0
        18 013673   200106 720100                    LXL0    DCB#,,AUTO
        18 013674   100000 473510                    LDP3    0,X0,PR1
        18 013675   300005 721100                    LXL1    5,,PR3
        18 013676   000133 741000 2                  STX1    CLOSE_BLOCK_FILE+27

     3719    22727    5               CLOSE_BLOCK_FILE.V.EFTOPER.UPDDESC# = '1'B;

  22727 18 013677   004000 236007                    LDQ     2048,DL
        18 013700   000132 256000 2                  ORSQ    CLOSE_BLOCK_FILE+26

     3720    22728    5               CLOSE_BLOCK_FILE.V.DESC.QS# = '1'B;

  22728 18 013701   010000 236003                    LDQ     4096,DU
        18 013702   000133 256000 2                  ORSQ    CLOSE_BLOCK_FILE+27

     3721    22729    5               CLOSE_BLOCK_FILE.V.DESC.ARCHIVE# = '1'B;

  22729 18 013703   001000 236003                    LDQ     512,DU
        18 013704   000133 256000 2                  ORSQ    CLOSE_BLOCK_FILE+27

     3722    22730    5               CLOSE_BLOCK_FILE.V.DESC.ODSTOW# = '0'B;

  22730 18 013705   000105 236000 19                 LDQ     69
        18 013706   000133 356000 2                  ANSQ    CLOSE_BLOCK_FILE+27

     3723    22731
     3724    22732    5               FILE_DESC = BLK_TAGT.DESC;

  22732 18 013707   200105 474500                    LDP4    BLK_TAGT$,,AUTO
        18 013710   400001 721100                    LXL1    1,,PR4
        18 013711   200107 741100                    STX1    FILE_DESC,,AUTO
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:483  

     3725    22733    5               IF FILE_DESC.ACTIVE#

  22733 18 013712   200107 236100                    LDQ     FILE_DESC,,AUTO
        18 013713   000100 316003                    CANQ    64,DU
        18 013714   013720 600000 18                 TZE     s:22735

     3726    22734    5                THEN CLOSE_BLOCK_FILE.V.DESC.ACTIVE# = '1'B;

  22734 18 013715   000100 236003                    LDQ     64,DU
        18 013716   000133 256000 2                  ORSQ    CLOSE_BLOCK_FILE+27
        18 013717   013722 710000 18                 TRA     s:22737

     3727    22735    5                ELSE CLOSE_BLOCK_FILE.V.DESC.ACTIVE# = '0'B;

  22735 18 013720   000104 236000 19                 LDQ     68
        18 013721   000133 356000 2                  ANSQ    CLOSE_BLOCK_FILE+27

     3728    22736
     3729    22737    5               CALL M$CLOSE( CLOSE_BLOCK_FILE );

  22737 18 013722   000100 630400 2                  EPPR0   CLOSE_BLOCK_FILE
        18 013723   050001 713400                    CLIMB   close
        18 013724   406000 401760                    pmme    nvectors=13

     3730    22738    5               END;

  22738 18 013725   013731 710000 18                 TRA     s:22741

     3731    22739    5             WHENALTRETURN DO;

     3732    22740    5               CALL FLI$RPT_ERR;

  22740 18 013726   000002 631400 xsym               EPPR1   B_VECTNIL+2
        18 013727   000000 701000 xent               TSX1    FLI$RPT_ERR
        18 013730   000000 011000                    NOP     0

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:484  
     3733    22741    5               END;

  22741 18 013731   013732 710000 18                 TRA     s:22746

     3734    22742
     3735    22743    4          CASE( ELSE );

     3736    22744
     3737    22745    4          END;

     3738    22746    3         BLK_TAGT$ = PINCRW( BLK_TAGT$, -SIZEW(BLK_TAG) );

  22746 18 013732   200105 236100                    LDQ     BLK_TAGT$,,AUTO
        18 013733   777765 036003                    ADLQ    -11,DU
        18 013734   200105 756100                    STQ     BLK_TAGT$,,AUTO

     3739    22747    3         END;                              /* Do WHILE end                       */

  22747 18 013735   000000 116000 xsym               CMPQ    LOW_BLK_TAG$
        18 013736   013573 603000 18                 TRC     s:22701

     3740    22748
     3741    22749    2      RETURN;

  22749 18 013737   200104 221300                    LDX1  ! DCB#+1,,AUTO
        18 013740   000001 702211                    TSX2  ! 1,X1

     3742    22750
     3743    22751    2   END FLM_REQUEUE_FILES_FOR_STOW;
     3744    22752
     3745    22753
     3746    22754    1   FLM_GET_PRIME_VSN: PROC( PRIME_VSN ) ALTRET;

  22754 18 013741   200100 741300       FLM_GET_PRI* STX1  ! ANY_FILES_FOUND+2,,AUTO

     3747    22755        /*F* NAME: FLM_GET_PRIME_VSN
     3748    22756             PURPOSE: Obtains the VSN for the prime packset from the VID.
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:485  
     3749    22757        */
     3750    22758
     3751    22759    2   DCL PRIME_VSN CHAR(6);
     3752    22760
     3753    22761        /********************/
     3754    22762
     3755    22763    2      OPEN_DP.SN_ = VECTOR(DPLIST);

  22763 18 013742   000006 235000 19                 LDA     6
        18 013743   000000 236000 xsym               LDQ     DPLIST$
        18 013744   003132 757000 2                  STAQ    OPEN_DP+2

     3756    22764    2      CALL M$OPEN( OPEN_DP ) ALTRET(JUSTALT);

  22764 18 013745   003130 630400 2                  EPPR0   OPEN_DP
        18 013746   450000 713400                    CLIMB   alt,open
        18 013747   410400 401760                    pmme    nvectors=18
        18 013750   014015 702000 18                 TSX2    JUSTALT

     3757    22765    2      CALL M$READ( READ_VID ) ALTRET(JUSTALT);

  22765 18 013751   003260 630400 2                  EPPR0   READ_VID
        18 013752   440000 713400                    CLIMB   alt,read
        18 013753   401400 401760                    pmme    nvectors=4
        18 013754   014015 702000 18                 TSX2    JUSTALT

     3758    22766    2      CALL M$CLOSE( CLOSE_DP ) ALTRET(JUSTALT);

  22766 18 013755   003222 630400 2                  EPPR0   CLOSE_DP
        18 013756   450001 713400                    CLIMB   alt,close
        18 013757   406000 401760                    pmme    nvectors=13
        18 013760   014015 702000 18                 TSX2    JUSTALT

     3759    22767    2      CALL BINCHAR(PRIME_VSN,MOD(VIDBUF.SNLIST.VSN.N(0),100000));

  22767 18 013761   000751 236000 2                  LDQ     VIDBUF+320
        18 013762   000032 376000 xsym               ANQ     B_VECTNIL+26
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:486  
        18 013763   303240 506007                    DIV     100000,DL
        18 013764   000044 773000                    LRL     36
        18 013765   200124 757100                    STAQ    @DISP+1,,AUTO
        18 013766   200101 470500                    LDP0    @PRIME_VSN,,AUTO
        18 013767   000100 301500                    BTD
        18 013770   200124 000010                    NDSC9   @DISP+1,,AUTO            cn=0,s=lsgnf,sf=0,n=8
        18 013771   000000 030006                    NDSC9   0,,PR0                   cn=0,s=nosgn,sf=0,n=6

     3760    22768    2      IF VIDBUF.SNLIST.VSN.S(0)=0

  22768 18 013772   000751 236000 2                  LDQ     VIDBUF+320
        18 013773   777000 316003                    CANQ    -512,DU
        18 013774   014000 601000 18                 TNZ     s:22770

     3761    22769    2       THEN TEMP_S = ASCBIN('D');

  22769 18 013775   000104 235007                    LDA     68,DL
        18 013776   200060 755100                    STA     TEMP_S,,AUTO
        18 013777   014004 710000 18                 TRA     s:22771

     3762    22770    2       ELSE TEMP_S = VIDBUF.SNLIST.VSN.S(0)+ASCBIN('@');

  22770 18 014000   000751 236000 2                  LDQ     VIDBUF+320
        18 014001   000033 772000                    QRL     27
        18 014002   000100 036007                    ADLQ    64,DL
        18 014003   200060 756100                    STQ     TEMP_S,,AUTO

     3763    22771    2      CALL INSERT(PRIME_VSN,0,1,BINASC(TEMP_S));

  22771 18 014004   200060 236100                    LDQ     TEMP_S,,AUTO
        18 014005   000033 736000                    QLS     27
        18 014006   000000 276000 19                 ORQ     0
        18 014007   200124 756100                    STQ     @DISP+1,,AUTO
        18 014010   040100 100500                    MLR     fill='040'O
        18 014011   200124 000004                    ADSC9   @DISP+1,,AUTO            cn=0,n=4
        18 014012   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:487  
     3764    22772    2      RETURN;

  22772 18 014013   200100 221300                    LDX1  ! ANY_FILES_FOUND+2,,AUTO
        18 014014   000001 702211                    TSX2  ! 1,X1

     3765    22773
     3766    22774    2   JUSTALT:
     3767    22775    2      ALTRETURN;

  22775 18 014015   200100 221300       JUSTALT      LDX1  ! ANY_FILES_FOUND+2,,AUTO
        18 014016   000000 702211                    TSX2  ! 0,X1
     3768    22776
     3769    22777
     3770    22778    2   END FLM_GET_PRIME_VSN;
     3771    22779
     3772    22780
     3773    22781    1   END FLM$MOVE;
     3774    22782        %EOD;

PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:488  
--  Include file information  --

   FM$GRAN.:E05TOU  is referenced.
   FM$FIT.:E05TOU  is referenced.
   FLW_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   FLS_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   FLN_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   FLB_SUBS_C.:E05TOU  is referenced.
   FLI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   FL_PERR_C.:E05TOU  is referenced.
   FLE_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure FLM$MOVE.
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:489  

 **** Variables and constants ****

  ****  Section 002  Data  FLM$MOVE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

  3110-0-0/d STRC(288)   r     1 ADD_ACCT_TO_MAD          140-0-0/c STRC(72)    r     1 BACKUP_ACCT
  3006-0-0/d STRC(2088)  r     1 CLEANUP_ACCT             100-0-0/d STRC(1080)  r     1 CLOSE_BLOCK_FILE
  3222-0-0/d STRC(1080)  r     1 CLOSE_DP                3100-0-0/d STRC(288)   r     1 DEL_ACCT_FROM_MAD
   154-0-0/w STRC(936)   r     1 DEL_LIST_REC             142-0-0/d STRC(360)   r     1 DEL_NODATA_REC
  3310-0-0/d STRC(2088)  r     1 DISK_OPEN_DUAL          3402-0-0/d STRC(2088)  r     1 DISK_OPEN_PRIME
  2534-0-0/d STRC(2088)  r     1 DISK_REOPEN              206-0-0/c STRC(243)   r     1 FILE_DISP_REC
   136-0-0/d STRC(72)    r     1 FIT_AREA                3276-0-0/d STRC(144)   r     1 FPT_REM
  2344-0-0/d STRC(2088)  r     1 GET_AD_OR_FD            3120-0-0/d STRC(288)   r     1 GET_PSN_FROM_MAD
   250-0-0/w SBIN        r     1 GRANULE_NBR              244-0-0/d STRC(90)    r     1 MAD_SN
  2700-0-0/d STRC(2088)  r     1 OPEN_BLOCK                 6-0-0/d STRC(2088)  r     1 OPEN_BLOCK_FILE
  2442-0-0/d STRC(2088)  r     1 OPEN_DELETE_LIST        3130-0-0/d STRC(2088)  r     1 OPEN_DP
  2642-0-0/d STRC(144)   r     1 PFIL_DELETE_LIST        2646-0-0/d STRC(504)   r     1 READ_DELETE_LIST
  3476-0-0/d STRC(504)   r     1 READ_IDS_FILE           3260-0-0/d STRC(504)   r     1 READ_VID
  2252-0-0/d STRC(2088)  r     1 REPLACE_AD_OR_FD        3302-0-0/d STRC(216)   r     1 REWIND_TAPE
  2664-0-0/d STRC(432)   r     1 REWRITE_DELETE_LIST      222-0-0/c STRC(72)    r     1 SKIP_ACCT
   216-0-0/d STRC(90)    r     1 SOURCE_TAPE_SN           224-0-0/c STRC(72)    r     1 TO_DISK_ACCT
   234-0-0/c STRC(288)   r     1 TO_DISK_NAME             230-0-0/d STRC(90)    r     1 TO_DISK_SN
   251-0-0/w STRC(36864) r     1 VIDBUF                   226-0-0/c STRC(72)    r     1 VID_ACCT
  2436-0-0/d STRC(90)    r     1 VLP_SN                  2626-0-0/d STRC(432)   r     1 WRITE_DELETE_LIST
  2772-0-0/d STRC(432)   r     1 WRITE_FILE_DISP_REC

  ****  Section 017 RoData FLM$MOVE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/d STRC(1080)  r     1 CLOSE_DELETE_LIST          0-0-0/c STRC(126)   r     1 DELETE_FILE_NAME
    42-0-0/c BIT (9)     r     1 NO_LEADING_5_ZEROS

  ****  Auto variables  ****
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:490  

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @COMMAND                 123-0-0/w PTR         r     1 @DISP
   101-0-0/w PTR         r     1 @FIT_UPDATE              105-0-0/w PTR         r     1 @INACTIVATE
   121-0-0/w PTR         r     1 @NBR_FILES               101-0-0/w PTR         r     1 @PRIME_VSN
   101-0-0/w PTR         r     1 @TERM_ERR                105-0-0/w PTR         r     1 @TERM_ERR
   122-0-0/w PTR         r     1 @WHAT                     73-0-0/w BIT         r     1 ABORT
    76-0-0/b BIT         r     1 ANY_FILES_FOUND           46-0-0/w SBIN        r     1 ARS
     4-0-0/w SBIN        r     1 BIX                      105-0-0/w PTR         r     1 BLK_TAGT$
    44-0-0/d STRC(72)    r     1 BUF_                     112-0-0/d STRC(72)    r     1 CLNUP_FPARAM_
     5-0-0/w SBIN        r     1 CODE                       6-0-0/w PTR         r     1 CODE$
     7-0-0/w PTR         r     1 CODE04$                   *0-0-0/w SBIN        r     1 COMMAND
    66-0-0/w UBIN        r     1 DCB#                     103-0-0/w SBIN        r     1 DCB#
   106-0-0/w UBIN        r     1 DCB#                      65-0-0/w UBIN        r     1 DCB_NBR
    71-0-0/w SBIN        r     1 DEST                      24-0-0/w SBIN        r     1 DEST_FILE_TYPE
   113-0-0/w UBIN        r     1 DEST_GRAN_UTS             56-0-0/w UBIN        r     1 DEST_UTS
    12-0-0/w PTR         r     1 DISK_CODE04$              10-0-0/w PTR         r     1 DISK_CODE06$
    32-0-0/d STRC(72)    r     1 DISK_FIT_                 63-0-0/w SBIN        r     1 DISK_KEY
   101-0-0/b BIT (18)    r     1 DISK_SRCHCOND_SAVE        *0-0-0/c CHAR(11)    r     1 DISP
   106-0-0/w SBIN        r     1 DPX                      107-0-0/w SBIN        r     1 DP_RUN_NBR
    20-0-0/b STRC        r     1 ERR                      101-0-0/b STRC        r     1 ERR
   107-0-0/b STRC(18)    r     1 FILE_DESC                102-0-0/b BIT (18)    r     1 FILE_TYPE_SAVE
    15-0-0/w PTR         r     1 FIT$                      75-0-0/b BIT         r     1 FIT_ONLY_RSTRD
    74-0-0/w BIT         r     1 FIT_ONLY_SAVED            43-0-0/b BIT         r     1 FIT_UPDATE
    *0-0-0/w BIT         r     1 FIT_UPDATE                16-0-0/d STRC(72)    r     1 FPARAM_
   102-0-0/w SBIN        r     1 FREE_GRANS                42-0-0/b BIT         r     1 GOING_TO_DEST
   110-0-0/b BIT         r     1 IDS_FAST_INCR            106-0-0/d STRC(72)    r     1 IDS_GRANULE_
    *0-0-0/w BIT         r     1 INACTIVATE                62-0-0/w PTR         r     1 M$DISK_IN$
    61-0-0/w PTR         r     1 M$DISK_OUT$              105-0-0/w PTR         r     1 M$TSN_USED$
    34-0-0/d STRC(72)    r     1 MODIFIED_FIT_            110-0-0/w SBIN        r     1 NBR_ACCTS_DELETED
    64-0-0/w SBIN        r     1 NBR_CONSEC_GRANS          67-0-0/w SBIN        r     1 NBR_DEL_FILES
    *0-0-0/w SBIN        r     1 NBR_FILES                107-0-0/w SBIN        r     1 NBR_FILES_DELETED
   106-0-0/w SBIN        r     1 NBR_FILES_INACTIVATED
    22-0-0/w SBIN        r     1 NBR_GRANS_TO_READ         47-0-0/c CHAR(6)     r     1 OLD_SN
    *0-0-0/c CHAR(6)     r     1 PRIME_VSN                 72-0-0/b BIT         r     1 PR_DEV_LT
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:491  
    30-0-0/d STRC(72)    r     1 SAVE_AD_FD_FIT_           25-0-0/w PTR         r     1 SAVE_DCB$
    41-0-0/b BIT         r     1 SAVE_DISK_OPTION_DIR      21-0-0/b STRC        r     1 SAVE_ERR
    26-0-0/d STRC(72)    r     1 SAVE_FIT_                 40-0-0/w SBIN        r     1 SAVE_FSN
    36-0-0/c CHAR(6)     r     1 SAVE_SN                  116-0-0/w PTR         r     1 SAVE_SOURCE_DCB$
   114-0-0/d STRC(72)    r     1 SAVE_SOURCE_DCB_          54-0-0/w SBIN        r     1 SET_NBR
    70-0-0/w SBIN        r     1 SOURCE                    13-0-0/w PTR         r     1 SOURCE_CODE$
    14-0-0/w PTR         r     1 SOURCE_DCB$               23-0-0/w SBIN        r     1 SOURCE_FILE_TYPE
    55-0-0/w UBIN        r     1 SOURCE_UTS               112-0-0/c STRC        r     1 STATUS_KEY_SAVE
    11-0-0/w PTR         r     1 TAPE_CODE04$              60-0-0/w SBIN        r     1 TEMP_S
    57-0-0/w UBIN        r     1 TEMP_U                    *0-0-0/w BIT         r     1 TERM_ERR
    *0-0-0/w STRC        r     1 TERM_ERR                 102-0-0/w BIT         r     1 TERM_ERR_SAVE
   113-0-0/w STRC(270)   r     1 TSN_USED_BUF_SAVE        110-0-0/d STRC(72)    r     1 UPDATE_FPARAM_
    53-0-0/b BIT         r     1 USE_TSN_USED              51-0-0/c CHAR(6)     r     1 VSN
    *0-0-0/c CHAR(10)    r     1 WHAT

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 ARCHIVE$                   0-0-0/c ASTR(9)     r     1 ARCHIVE_NAME
     0-0-0/d VECT        r     1 A_FD_                      0-0-0/b BIT         r     1 A_FIT(0:1023)
     0-0-0/d VECT        r     1 A_FIT_                     0-0-0/w PTR         r     1 B$TCB$
     0-0-0/c ASTR(9)     r     1 BACKUP_NAME                0-0-0/d STRC(90)    r     1 BACKUP_SN
     0-0-0/w PTR         r     1 BLK_TAG$                   0-0-0/w PTR         r     1 BLK_TAG0$
     0-0-0/w PTR         r     1 BLOCK_GRAN$                0-0-0/w SBIN        r     1 BREAK_COUNT
     0-0-0/c CHAR(18)    r     1 BREAK_TASK                 0-0-0/b BIT         r     1 CATALOG_ON
     0-0-0/b BIT         r     1 CHECK_TAPE                 0-0-0/d STRC(1080)  r     1 CLOSE_NODATA_LIST
     0-0-0/d STRC(1080)  r     1 CLOSE_PRIME_DUAL           0-0-0/d STRC(1080)  r     1 CLOSE_STATUS
     0-0-0/d STRC(1080)  r     1 CLOSE_TSN_USED             0-0-0/c CHAR        r     1 CROSSED
     0-0-0/b STRC(12)    r     1 DATE_CRIT                  0-0-0/w PTR         r     1 DCB$
     0-0-0/w SBIN        r     1 DEFAULT_GRANS_PER_DISK_BUF
     0-0-0/c STRC(72)    r     1 DISK_ACCT_FIRST            0-0-0/c STRC(72)    r     1 DISK_ACCT_LAST
     0-0-0/d STRC(1080)  r     1 DISK_CLOSE                 0-0-0/d STRC(1080)  r     1 DISK_CLOSE_NEXT
     0-0-0/b STRC(3)     r     1 DISK_CRIT                  0-0-0/b STRC(18)    r     1 DISK_DESC_SAVE
     0-0-0/c STRC(72)    r     1 DISK_DEST_ACCT             0-0-0/w SBIN        r     1 DISK_DEST_EXIST
     0-0-0/w STRC(72)    r     1 DISK_DEST_RES              0-0-0/d STRC(90)    r     1 DISK_DEST_SN
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:492  
     0-0-0/w PTR         r     1 DISK_FILE_SPEC$            0-0-0/w PTR         r     1 DISK_GRAN$
     0-0-0/d STRC(2088)  r     1 DISK_OPEN                  0-0-0/d STRC(2088)  r     1 DISK_OPEN_NEXT
     0-0-0/w STRC(145)   r     1 DISK_OPTION                0-0-0/d STRC(90)    r     1 DISK_SN
     0-0-0/b STRC(18)    r     1 DISK_SRCHCOND              0-0-0/d STRC(432)   r     1 DISK_WRITE
     0-0-0/w PTR         r     1 DPLIST$                    0-0-0/w PTR         r     1 DPRESLIST$
     0-0-0/c ASTR(9)     r     1 DUAL_FILE                  0-0-0/w PTR         r     1 EFTFILE_DCB$
     0-0-0/b STRC(18)    r     1 EFTWORD                    0-0-0/b SBIN(18)    r     1 EFTWORDEXPIRE
     0-0-0/c ASTR(9)     r     1 EFT_CVOL_FILE              0-0-0/c ASTR(9)     r     1 EFT_RESTRICT_FILE
     0-0-0/w STRC        r     1 E_BAD_TAPE_FILE            0-0-0/w STRC        r     1 E_CANT_RETRIEVE
     0-0-0/w STRC        r     1 E_CANT_SAVE_FILE           0-0-0/w STRC        r     1 E_DEL_FILES_REMAIN
     0-0-0/w STRC        r     1 E_NOTHING_FOUND            0-0-0/w STRC        r     1 E_NOT_SCRATCH_PACK
     0-0-0/w STRC        r     1 E_NO_PREVIOUS_SAVE         0-0-0/w STRC        r     1 E_WRONG_DUAL
     0-0-0/w STRC        r     1 E_WRONG_PRIME              0-0-0/w STRC(18)    r     1 FILE_TYPE
     0-0-0/c STRC(72)    r     1 FIRST_ACCT                 0-0-0/c STRC(288)   r     1 FIRST_FILE
     0-0-0/b STRC        r     1 FIT_ONLY_CODE              0-0-0/d STRC(216)   r     1 FPT_EXIT
     0-0-0/c STRC(72)    r     1 FROM_DISK_ACCT             0-0-0/c STRC(288)   r     1 FROM_DISK_NAME
     0-0-0/d STRC(90)    r     1 FROM_DISK_SN               0-0-0/d STRC(432)   r     1 GET_NOW_UTS
     0-0-0/w SBIN        r     1 LAST_TAPE_FSN              0-0-0/w SBIN        r     1 LAST_TYPE
     0-0-0/w PTR         r     1 LOW_BLK_TAG$               0-0-0/w PTR         r     1 M$TAPE00$
     0-0-0/w SBIN        r     1 NBR_BYTES_TO_MOVE          0-0-0/w SBIN        r     1 NBR_SNLISTS
     0-0-0/c ASTR(9)     r     1 NODATA_FILE_NAME           0-0-0/c STRC(369)   r     1 NODATA_KEY
     0-0-0/d STRC(90)    r     1 NODATA_SN                  0-0-0/w UBIN        r     1 NOW_UTS
     0-0-0/d STRC(2088)  r     1 OPEN_NODATA_LIST           0-0-0/d STRC(2088)  r     1 OPEN_PRIME_DUAL
     0-0-0/d STRC(2088)  r     1 OPEN_STATUS                0-0-0/w STRC(144)   r     1 PRIME_DUAL_BUF
     0-0-0/c ASTR(9)     r     1 PRIME_FILE                 0-0-0/d STRC(504)   r     1 READ_PRIME_DUAL
     0-0-0/d STRC(504)   r     1 READ_REBUILD               0-0-0/d STRC(504)   r     1 READ_STATUS
     0-0-0/h STRC(450)   r     1 REBUILD_BUF                0-0-0/c ASTR(9)     r     1 REBUILD_DIR_KEY
     0-0-0/c ASTR(9)     r     1 REBUILD_KEY                0-0-0/c ASTR(9)     r     1 REBUILD_NAME
     0-0-0/b BIT         r     1 RESTORE_FROM_TAPE          0-0-0/c ASTR(9)     r     1 RET_CMDS_NAME
     0-0-0/w SBIN        r     1 RUN_NBR                    0-0-0/w SBIN        r     1 SNLIST_NBR
     0-0-0/w PTR         r     1 SNVECLIST$                 0-0-0/w STRC(756)   r     1 SPEC
     0-0-0/w CHAR(84)    r     1 SPECCHARS                  0-0-0/c STRC        r     1 STATUS_KEY
     0-0-0/b BIT         r     1 TAPE_BAD                   0-0-0/d STRC(1080)  r     1 TAPE_CLOSE
     0-0-0/w PTR         r     1 TAPE_DCBLIST$              0-0-0/w SBIN        r     1 TAPE_FSN
     0-0-0/d STRC(2088)  r     1 TAPE_OPEN                  0-0-0/w STRC(144)   r     1 TAPE_OPTION
     0-0-0/c CHAR(6)     r     1 TAPE_SN                    0-0-0/w SBIN        r     1 TSN_SET_NBR
     0-0-0/w STRC(270)   r     1 TSN_USED_BUF               0-0-0/c STRC(45)    r     1 TSN_USED_KEY
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:493  
     0-0-0/c ASTR(9)     r     1 TSN_USED_NAME              0-0-0/w SBIN        r     1 TSN_VOL
     0-0-0/d STRC(432)   r     1 WRITE_NODATA_LIST          0-0-0/d STRC(432)   r     1 WRITE_PRIME_DUAL
     0-0-0/d STRC(432)   r     1 WRITE_REBUILD              0-0-0/d STRC(432)   r     1 WRITE_STATUS
     0-0-0/d STRC(432)   r     1 WRITE_TSN_USED

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/w STRC(396)   r     1 BLK_TAG                    0-0-0/w STRC(396)   r     1 BLK_TAG0
     0-0-0/w STRC(396)   r     1 BLK_TAGT                   0-0-0/w STRC(324)   r     1 CODE03
     0-0-0/w STRC(396)   r     1 CODE04                     0-0-0/w STRC(108)   r     1 CODE05
     0-0-0/w STRC(108)   r     1 CODE06                     0-0-0/w STRC(288)   r     1 CODE14
     0-0-0/w STRC(936)   r     1 DISK_FILE_SPEC             0-0-0/d STRC(90)    r     1 DPLIST
     0-0-0/w STRC(72)    r     1 DPRESLIST                  0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/w STRC(1116)  r     1 FM$FIT                     0-0-0/w STRC(180)   r     1 FM$GRAN
     0-0-0/w SBIN        r     1 GRAN_KEY                   0-0-0/w UBIN        r     1 GRAN_MOD_TIME
     0-0-0N  NULL        r     1 M$DEL_LIST                 0-0-0N  NULL        r     1 M$DISK_IN
     0-0-0N  NULL        r     1 M$DISK_OUT                 0-0-0N  NULL        r     1 M$LO
     0-0-0N  NULL        r     1 M$NODATA_LIST              0-0-0N  NULL        r     1 M$STATUS
     0-0-0N  NULL        r     1 M$TSN_USED                 0-0-0/w STRC(36864) r     1 ONE_GRAN
     0-0-0/w STRC(72)    r     1 TAPE_DCBLIST(0:0)


   Procedure FLM$MOVE requires 6159 words for executable code.
   Procedure FLM$MOVE requires 96 words of local(AUTO) storage.
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:494  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:495  
          MINI XREF LISTING

ABORT
     17733**DCL     19648<>CALL    19655>>IF      19787<>CALL    19794>>IF      20249>>IF      20260<>CALL
     20922<>CALL    20931<>CALL
ADD_ACCT_TO_MAD
     18759**DCL     22444<>CALL
ADD_ACCT_TO_MAD.V
     18760**DCL     18759--DCLINIT
ANY_FILES_FOUND
     17736**DCL     19469<<ASSIGN  19695<<ASSIGN  19955<<ASSIGN  20000>>IF      20010>>IF      20014>>IF
     20125>>IF      20157>>IF      20980>>IF
ARCHIVE$
     14624**DCL     19817>>IF      20118>>IF      20961>>IF      20990>>IF
ARCHIVE_NAME.L#
     16243**DCL     16243--IMP-SIZ
ARS
     17714**DCL     21763<>CALL    21786>>ASSIGN  21803>>DOWHILE 21820<<ASSIGN  21820>>ASSIGN  21836<>CALL
     21839>>ASSIGN  21862<>CALL    21867>>DOWHILE 21868<<ASSIGN  21868>>ASSIGN  21884>>IF      21889<<ASSIGN
     21889>>ASSIGN  21890>>DOWHILE 21899>>IF      21904>>DOWHILE 21905<<ASSIGN  21905>>ASSIGN  21910>>IF
     21914<<ASSIGN  21914>>ASSIGN  22034>>DOWHILE 22057<<ASSIGN  22057>>ASSIGN
A_FD_
     15408**DCL     20438>>ASSIGN  20449>>ASSIGN
A_FIT
     15408**DCL     20596--ASSIGN  20597--ASSIGN  20610--ASSIGN  20621--ASSIGN  20622--ASSIGN
A_FIT_
     15408**DCL     22225>>ASSIGN
B$ALT.CODE
     19100**DCL     19100--REDEF   19101--REDEF   19101--REDEF
B$ALT.ERR
     19101**DCL     20360>>ASSIGN  20452>>ASSIGN  20466>>ASSIGN  20857>>ASSIGN  20877>>ASSIGN  21789>>ASSIGN
     21842>>ASSIGN  21976>>ASSIGN  22000>>ASSIGN  22016>>ASSIGN  22047>>ASSIGN
B$ALT.ERR.CODE
     19102**DCL     19232>>IF      19320>>DOSELCT 19349>>IF      19386>>IF      20358>>IF      20407>>IF
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:496  
     20407>>IF      20407>>IF      20461>>IF      21603>>IF      21647>>IF      21647>>IF      21971>>IF
     21975>>IF      22041>>IF      22354>>IF      22433>>IF      22547>>IF
B$ALT.ERR.ERR#
     19102**DCL     19102--REDEF
B$ALT.EVID
     19101**DCL     19101--REDEF   19101--REDEF
B$TCB.ALT$
     19096**DCL     19232>>IF      19320>>DOSELCT 19349>>IF      19386>>IF      20358>>IF      20360>>ASSIGN
     20407>>IF      20407>>IF      20407>>IF      20452>>ASSIGN  20461>>IF      20466>>ASSIGN  20857>>ASSIGN
     20877>>ASSIGN  21603>>IF      21647>>IF      21647>>IF      21789>>ASSIGN  21842>>ASSIGN  21971>>IF
     21975>>IF      21976>>ASSIGN  22000>>ASSIGN  22016>>ASSIGN  22041>>IF      22047>>ASSIGN  22354>>IF
     22433>>IF      22547>>IF
B$TCB$
     14131**DCL     19096--IMP-PTR 19232>>IF      19320>>DOSELCT 19349>>IF      19386>>IF      20358>>IF
     20360>>ASSIGN  20407>>IF      20407>>IF      20407>>IF      20452>>ASSIGN  20461>>IF      20466>>ASSIGN
     20857>>ASSIGN  20877>>ASSIGN  21603>>IF      21647>>IF      21647>>IF      21789>>ASSIGN  21842>>ASSIGN
     21971>>IF      21975>>IF      21976>>ASSIGN  22000>>ASSIGN  22016>>ASSIGN  22041>>IF      22047>>ASSIGN
     22354>>IF      22433>>IF      22547>>IF
BACKUP_ACCT
     15900**DCL     19310--ASSIGN  19334--ASSIGN  19380--ASSIGN  19402--ASSIGN
BACKUP_ACCT.ACCT#
     15900**DCL     19762>>IF      21600>>IF
BACKUP_NAME.L#
     15887**DCL     15887--IMP-SIZ
BACKUP_SN.SN#
     15913**DCL     20181<<ASSIGN
BIX
     17663**DCL     21763<>CALL    21793<>CALL    21825<>CALL
BLK_TAG
     15376**DCL     19971--ASSIGN  22625--ASSIGN  22698--ASSIGN  22746--ASSIGN
BLK_TAG.NAME
     15379**DCL     15379--REDEF
BLK_TAG.TYPE
     15378**DCL     19567>>DOCASE  19632>>ASSIGN
BLK_TAG.UTS
     15379**DCL     21085>>ASSIGN
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:497  
BLK_TAG$
     15376**DCL     15376--IMP-PTR 19567>>DOCASE  19632>>ASSIGN  19971<<ASSIGN  19971>>ASSIGN  21085>>ASSIGN
     22625<<ASSIGN  22625>>ASSIGN
BLK_TAG0.NAME
     15385**DCL     15385--REDEF
BLK_TAG0.WHERE.ACCT
     15385**DCL     22705>>ASSIGN
BLK_TAG0.WHERE.PSN
     15385**DCL     22704>>ASSIGN
BLK_TAG0$
     15382**DCL     15382--IMP-PTR 22688>>IF      22698>>ASSIGN  22704>>ASSIGN  22705>>ASSIGN
BLK_TAGT.DESC IN PROCEDURE FLM_REQUEUE_FILES_FOR_STOW
     22663**DCL     22732>>ASSIGN
BLK_TAGT.NAME IN PROCEDURE FLM_REQUEUE_FILES_FOR_STOW
     22664**DCL     22664--REDEF   22706>>ASSIGN
BLK_TAGT.TYPE IN PROCEDURE FLM_REQUEUE_FILES_FOR_STOW
     22663**DCL     22701>>DOCASE
BLK_TAGT$ IN PROCEDURE FLM_REQUEUE_FILES_FOR_STOW
     22660**DCL     22661--IMP-PTR 22698<<ASSIGN  22700>>DOWHILE 22701>>DOCASE  22706>>ASSIGN  22732>>ASSIGN
     22746<<ASSIGN  22746>>ASSIGN
BLOCK_GRAN$
     15389**DCL     15390--IMP-PTR
BREAK_COUNT
     17492**DCL     19498>>DOWHILE 22282>>IF
BREAK_TASK
     17493**DCL     20063<<ASSIGN  20989<<ASSIGN
BUF_
     17711**DCL     21763<>CALL    21785>>ASSIGN  21808>>ASSIGN  21836<>CALL    21838>>ASSIGN  21862<>CALL
     21886>>ASSIGN  21908>>ASSIGN
BUF_.PTR$
     17713**DCL     21804>>IF      21809>>ASSIGN  21821<<ASSIGN  21821>>ASSIGN  21867>>DOWHILE 21869<<ASSIGN
     21869>>ASSIGN  21887>>ASSIGN  21891<<ASSIGN  21891>>ASSIGN  21899>>IF      21904>>DOWHILE 21906<<ASSIGN
     21906>>ASSIGN  21909>>ASSIGN  22035>>ASSIGN  22054>>IF      22056<<ASSIGN  22056>>ASSIGN
CASE_END
     19959**LABEL   19928--GOTO
CATALOG_ON
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:498  
     17164**DCL     19478<<ASSIGN
CAT_KEY
     17158**DCL     17159--REDEF   17160--REDEF
CAT_REC.LT
     17161**DCL     17161--REDEF
CHECK_DEST_FILE IN PROCEDURE FLM_FILE_TO_DISK_HANDLING
     20744**PROC    20539--CALL    20543--CALL
CHECK_TAPE
     17495**DCL     21019>>IF
CHKALT
     19994**LABEL   19559--GOTO    19611--GOTO    19627--GOTO
CHKALT IN PROCEDURE FLM_FILES_FROM_TAPE_DELETE
     22629**LABEL   22601--CALLALT
CHKERRALT IN PROCEDURE FLM_CLEAN
     22542**LABEL   22516--CALLALT
CLEANUP_ACCT
     18679**DCL     22422<>CALL
CLEANUP_ACCT.ACSVEH_
     18681**DCL     18682--REDEF
CLEANUP_ACCT.ALTKEYS_
     18687**DCL     18688--REDEF   18688--REDEF
CLEANUP_ACCT.FPARAM_
     18684**DCL     22225<<ASSIGN
CLEANUP_ACCT.HDR_
     18686**DCL     18687--REDEF
CLEANUP_ACCT.TAB_
     18685**DCL     18686--REDEF
CLEANUP_ACCT.UHL_
     18679**DCL     18680--REDEF   18680--REDEF
CLEANUP_ACCT.V
     18688**DCL     18679--DCLINIT
CLEANUP_ACCT.V.FSN#
     18719**DCL     18719--REDEF   18719--REDEF
CLEANUP_ACCT.WSN_
     18685**DCL     18685--REDEF
CLNUP_FPARAM_ IN PROCEDURE FLM_CLEANUP
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:499  
     22206**DCL     22226<>CALL    22227>>ASSIGN
CLNUP_FPARAM_.PTR$ IN PROCEDURE FLM_CLEANUP
     22209**DCL     22298>>ASSIGN  22321>>ASSIGN
CLOSE_BLOCK_FILE
     15293**DCL     22737<>CALL
CLOSE_BLOCK_FILE.IFPARAM_
     15298**DCL     22717<<ASSIGN  22720<<ASSIGN
CLOSE_BLOCK_FILE.SN_
     15293**DCL     15293--REDEF
CLOSE_BLOCK_FILE.UTL_
     15294**DCL     15294--REDEF
CLOSE_BLOCK_FILE.V
     15298**DCL     15293--DCLINIT
CLOSE_BLOCK_FILE.V.DESC
     15303**DCL     22726<<ASSIGN
CLOSE_BLOCK_FILE.V.DESC.ACTIVE#
     15305**DCL     22734<<ASSIGN  22735<<ASSIGN
CLOSE_BLOCK_FILE.V.DESC.ARCHIVE#
     15304**DCL     22729<<ASSIGN
CLOSE_BLOCK_FILE.V.DESC.ODSTOW#
     15304**DCL     22730<<ASSIGN
CLOSE_BLOCK_FILE.V.DESC.QS#
     15304**DCL     22728<<ASSIGN
CLOSE_BLOCK_FILE.V.EFTOPER.UPDDESC#
     15301**DCL     22727<<ASSIGN
CLOSE_BLOCK_FILE.V.EXPIRE#
     15308**DCL     15308--REDEF
CLOSE_BLOCK_FILE.V.TYPE#
     15306**DCL     15306--REDEF
CLOSE_BLOCK_FILE.V.XTNSIZE#
     15303**DCL     15303--REDEF   15305--REDEF
CLOSE_DELETE_LIST
     18426**DCL     19365<>CALL    20037<>CALL    20095<>CALL    21026<>CALL    21041<>CALL
CLOSE_DELETE_LIST.SN_
     18426**DCL     18426--REDEF
CLOSE_DELETE_LIST.UTL_
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:500  
     18427**DCL     18427--REDEF
CLOSE_DELETE_LIST.V
     18431**DCL     18426--DCLINIT
CLOSE_DELETE_LIST.V.EXPIRE#
     18441**DCL     18441--REDEF
CLOSE_DELETE_LIST.V.TYPE#
     18439**DCL     18439--REDEF
CLOSE_DELETE_LIST.V.XTNSIZE#
     18436**DCL     18436--REDEF   18438--REDEF
CLOSE_DP
     18928**DCL     22766<>CALL
CLOSE_DP.SN_
     18928**DCL     18928--REDEF
CLOSE_DP.UTL_
     18929**DCL     18929--REDEF
CLOSE_DP.V
     18933**DCL     18928--DCLINIT
CLOSE_DP.V.EXPIRE#
     18943**DCL     18943--REDEF
CLOSE_DP.V.TYPE#
     18941**DCL     18941--REDEF
CLOSE_DP.V.XTNSIZE#
     18938**DCL     18938--REDEF   18940--REDEF
CLOSE_NODATA_LIST
     17041**DCL     19369<>CALL    19900<>CALL    20047<>CALL    20103<>CALL
CLOSE_NODATA_LIST.SN_
     17041**DCL     17041--REDEF
CLOSE_NODATA_LIST.UTL_
     17042**DCL     17042--REDEF
CLOSE_NODATA_LIST.V.EXPIRE#
     17056**DCL     17056--REDEF
CLOSE_NODATA_LIST.V.TYPE#
     17054**DCL     17054--REDEF
CLOSE_NODATA_LIST.V.XTNSIZE#
     17051**DCL     17051--REDEF   17053--REDEF
CLOSE_PRIME_DUAL
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:501  
     16518**DCL     19359<>CALL    19376<>CALL    19394<>CALL    19416<>CALL    19423<>CALL    19438<>CALL
     19445<>CALL
CLOSE_PRIME_DUAL.SN_
     16518**DCL     16518--REDEF
CLOSE_PRIME_DUAL.UTL_
     16519**DCL     16519--REDEF
CLOSE_PRIME_DUAL.V.EXPIRE#
     16533**DCL     16533--REDEF
CLOSE_PRIME_DUAL.V.TYPE#
     16531**DCL     16531--REDEF
CLOSE_PRIME_DUAL.V.XTNSIZE#
     16528**DCL     16528--REDEF   16530--REDEF
CLOSE_REBUILD.SN_
     16793**DCL     16793--REDEF
CLOSE_REBUILD.UTL_
     16794**DCL     16794--REDEF
CLOSE_REBUILD.V.EXPIRE#
     16808**DCL     16808--REDEF
CLOSE_REBUILD.V.TYPE#
     16806**DCL     16806--REDEF
CLOSE_REBUILD.V.XTNSIZE#
     16803**DCL     16803--REDEF   16805--REDEF
CLOSE_STATUS
     16008**DCL     20241<>CALL    20267<>CALL    20296<>CALL
CLOSE_STATUS.SN_
     16008**DCL     16008--REDEF
CLOSE_STATUS.UTL_
     16009**DCL     16009--REDEF
CLOSE_STATUS.V.EXPIRE#
     16023**DCL     16023--REDEF
CLOSE_STATUS.V.TYPE#
     16021**DCL     16021--REDEF
CLOSE_STATUS.V.XTNSIZE#
     16018**DCL     16018--REDEF   16020--REDEF
CLOSE_TSN_USED
     15718**DCL     20984<>CALL    20998<>CALL
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:502  
CLOSE_TSN_USED.SN_
     15718**DCL     15718--REDEF
CLOSE_TSN_USED.UTL_
     15719**DCL     15719--REDEF
CLOSE_TSN_USED.V.EXPIRE#
     15733**DCL     15733--REDEF
CLOSE_TSN_USED.V.TYPE#
     15731**DCL     15731--REDEF
CLOSE_TSN_USED.V.XTNSIZE#
     15728**DCL     15728--REDEF   15730--REDEF
CLSALT
     19352**LABEL   19314--GOTO    19324--GOTO    19328--GOTO    19414--GOTO    19429--GOTO
CODE
     17664**DCL     21088<<ASSIGN  21092<<ASSIGN  21098<<ASSIGN  21106<>CALL    21108>>IF      21161<<ASSIGN
     21162<<ASSIGN  21164<>CALL    21166>>IF      21949<<ASSIGN  21950<>CALL    21952>>ASSIGN
CODE$
     17665**DCL     19110--IMP-PTR 19119--IMP-PTR 19125--IMP-PTR 19128--IMP-PTR 19134--IMP-PTR 19531<<ASSIGN
     19532<>CALL    19534>>ASSIGN  19747>>IF      20597<<ASSIGN  20598<>CALL    20605>>ASSIGN  20608>>ASSIGN
     20610<<ASSIGN  20611<>CALL    20615>>ASSIGN  20616>>ASSIGN  20622<<ASSIGN  20623<>CALL    20627>>ASSIGN
     20683<<ASSIGN  20684<>CALL    20688>>IF      20695<<ASSIGN  20696<>CALL    20704>>IF      20707<<ASSIGN
     20708<>CALL    20712>>IF      20714>>ASSIGN  21059<<ASSIGN  21060<>CALL    21062>>ASSIGN  21079<<ASSIGN
     21089<<ASSIGN  21095<<ASSIGN  21099<<ASSIGN  21104>>IF      21106<>CALL    21109>>ASSIGN  21110>>ASSIGN
     21117>>ASSIGN  21144<<ASSIGN  21145<>CALL    21147>>ASSIGN  21148>>ASSIGN  21163<<ASSIGN  21164<>CALL
     21168>>ASSIGN  21169>>ASSIGN  21170>>IF      21170>>IF      21176>>ASSIGN  21177>>ASSIGN  21723<<ASSIGN
     21724<>CALL    21726>>IF      21743<<ASSIGN  21744<>CALL    21746>>ASSIGN  21948<<ASSIGN  21950<>CALL
     21953>>ASSIGN  22298<<ASSIGN  22299<>CALL    22301>>IF      22321<<ASSIGN  22322<>CALL    22324>>IF
     22711<<ASSIGN  22712<>CALL
CODE03.DESC
     19110**DCL     20615<<ASSIGN  20627<<ASSIGN
CODE03.DESC.ARCHIVE
     19111**DCL     20616<<ASSIGN
CODE03.DESC.BUPM
     19111**DCL     19747>>IF
CODE03.DESC.FETCH
     19112**DCL     21746<<ASSIGN
CODE03.UGRANS
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:503  
     19110**DCL     19534>>ASSIGN
CODE04.ACCESS.TIME
     19121**DCL     20704>>IF      20712>>IF      20712>>IF      20714<<ASSIGN  20714>>ASSIGN  21206>>IF
     21206>>IF
CODE04.CREATOR
     19121**DCL     21235<<ASSIGN  21235>>ASSIGN
CODE04.CREATOR.ACCT
     19121**DCL     21170>>IF      21217<<ASSIGN  21244<<ASSIGN
CODE04.CREATOR.NAME
     19121**DCL     21170>>IF      21218<<ASSIGN  21245<<ASSIGN
CODE04.MODIFY.TIME
     19121**DCL     21062>>ASSIGN  21109>>ASSIGN  21168>>ASSIGN  21204>>IF      21204>>IF      22324>>IF
CODE04$
     17666**DCL     20690<<ASSIGN  20691<>CALL    20704>>IF      20712>>IF      20714>>ASSIGN
CODE05.BACKUP.TIME
     19125**DCL     20704>>IF
CODE06
     19128**DCL     20605<<ASSIGN  20605>>ASSIGN  20608<<ASSIGN  21952--ASSIGN  21953<<ASSIGN  21953>>ASSIGN
CODE06.STOW.EFT
     19128**DCL     19129--REDEF   20520>>ASSIGN
CODE06.STOW.REEL
     19128**DCL     20517>>IF
CODE06.STOW.TIME
     19128**DCL     21110>>ASSIGN  21147>>ASSIGN  21176>>ASSIGN  22301>>IF
CODE14.ACCESS.BUPF
     19136**DCL     21726>>IF
CODE14.ACCESS.NOACUP
     19136**DCL     20688>>IF
COMMAND
        17**DCL         8--PROC    19162>>DOCASE  19224>>IF      19224>>IF      19250>>IF      19283>>IF
     19300>>IF      19453>>IF      19477>>IF      19508>>IF      19516>>IF      19545>>IF      19602>>IF
     19640>>IF      19648<>CALL    19690>>IF      19707>>IF      19707>>IF      19707>>IF      19707>>IF
     19707>>IF      19744>>IF      19744>>IF      19762>>IF      19787<>CALL    19817>>IF      19817>>IF
     19823>>IF      19826>>IF      19860>>IF      19860>>IF      19860>>IF      19876>>IF      19913>>IF
     19959>>IF      19978>>DOCASE  19983>>IF      20030>>IF      20111<>CALL    20118>>IF      20118>>IF
     20174>>IF      20174>>IF      20176>>IF      20188>>IF      20260<>CALL    20303>>IF      20383>>IF
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:504  
     20514>>IF      20535>>DOCASE  20555>>IF      20635>>DOCASE  20676>>IF      20774>>IF      20774>>IF
     20781>>IF      20797>>IF      20797>>IF      20799>>IF      20799>>IF      20922<>CALL    20931<>CALL
     20958<>CALL    20961>>IF      20961>>IF      20990>>IF      21013>>DOCASE  21035<>CALL    21160>>IF
     21718>>IF      21741>>IF      21935>>IF      21993>>IF      22001>>IF
CON_CLOSE_ARCHIVE.SN_
     16050**DCL     16050--REDEF
CON_CLOSE_ARCHIVE.UTL_
     16051**DCL     16051--REDEF
CON_CLOSE_ARCHIVE.V.EXPIRE#
     16065**DCL     16065--REDEF
CON_CLOSE_ARCHIVE.V.TYPE#
     16063**DCL     16063--REDEF
CON_CLOSE_ARCHIVE.V.XTNSIZE#
     16060**DCL     16060--REDEF   16062--REDEF
CON_OPEN_ARCHIVE_FILE.ACSVEH_
     16137**DCL     16138--REDEF
CON_OPEN_ARCHIVE_FILE.ALTKEYS_
     16143**DCL     16144--REDEF   16144--REDEF
CON_OPEN_ARCHIVE_FILE.HDR_
     16142**DCL     16143--REDEF
CON_OPEN_ARCHIVE_FILE.TAB_
     16141**DCL     16142--REDEF
CON_OPEN_ARCHIVE_FILE.UHL_
     16135**DCL     16136--REDEF   16136--REDEF
CON_OPEN_ARCHIVE_FILE.V.FSN#
     16175**DCL     16175--REDEF   16175--REDEF
CON_OPEN_ARCHIVE_FILE.WSN_
     16141**DCL     16141--REDEF
CON_READ_ARCHIVE_FILE.STATION_
     16199**DCL     16200--REDEF
CON_READ_ARCHIVE_FILE.V.DVBYTE.REREAD#
     16211**DCL     16211--REDEF
CON_READ_ARCHIVE_FILE.V.INDX#
     16209**DCL     16209--REDEF
CREATEALT
     19235**LABEL   19234--CALLALT 19235--CALLALT
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:505  
CROSSED
     15411**DCL     19194<<ASSIGN  19648<>CALL    19668<>CALL    19671<>CALL    19722<>CALL    19750<>CALL
     19787<>CALL    19829<>CALL    19832<>CALL    19870<>CALL    19965<>CALL    20260<>CALL    20290<>CALL
     20566<>CALL    20578<>CALL    20773>>IF      20842>>IF      20922<>CALL    20931<>CALL
CVOL_UTL.ULBL#
     15478**DCL     15478--REDEF
DATE_CRIT.EXPD
     14195**DCL     20993<<ASSIGN
DCB#
     17728**DCL     19503<>CALL    19648<>CALL    19657<>CALL    19678<>CALL    19713>>ASSIGN  19723<>CALL
     19752<>CALL    19787<>CALL    19796<>CALL    19845<>CALL    21763<>CALL
DCB# IN PROCEDURE FLM_FILE_TO_DISK_HANDLING
     20485**DCL     20563<<ASSIGN  20568<>CALL    20580<>CALL
DCB# IN PROCEDURE FLM_REQUEUE_FILES_FOR_STOW
     22667**DCL     22691<<ASSIGN  22726--ASSIGN
DCB$
     15375**DCL     22217<<ASSIGN  22425<>CALL
DCB_NBR
     17727**DCL     19503<>CALL    19681<>CALL    19734<>CALL    19945<>CALL
DEFAULT_GRANS_PER_DISK_BUF
     14134**DCL     19211<>CALL
DELALT IN PROCEDURE FLM_FILE_FROM_DISK_CLEANUP
     21021**LABEL   20995--CALLALT
DELETE_FILE_NAME
     18026**DCL     18106--DCLINIT
DEL_ACCT_FROM_MAD
     18738**DCL     22439<>CALL
DEL_ACCT_FROM_MAD.V
     18739**DCL     18738--DCLINIT
DEL_CLNUP IN PROCEDURE FLM_ACCOUNT_TO_DISK_HANDLING
     20442**LABEL   20464--GOTO
DEL_LIST_REC
     17510**DCL     18291--DCLINIT 18292--DCLINIT 18344--DCLINIT 18345--DCLINIT 18386--DCLINIT 18387--DCLINIT
DEL_LIST_REC.ACCT
     17515**DCL     18526--DCLINIT 18684--DCLINIT 18738--DCLINIT 18780--DCLINIT 20914>>ASSIGN  22161<<ASSIGN
     22279>>IF      22290>>IF      22524>>IF
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:506  
DEL_LIST_REC.CFSN
     17525**DCL     19472<<ASSIGN  20939<<ASSIGN  22425<>CALL    22521<>CALL    22555<>CALL
DEL_LIST_REC.CSN
     17520**DCL     19471<<ASSIGN  20938<<ASSIGN  22425<>CALL    22521<>CALL    22555<>CALL
DEL_LIST_REC.FSN
     17526**DCL     22168<<ASSIGN
DEL_LIST_REC.INACTIVATE
     17527**DCL     20927>>IF      22169<<ASSIGN  22467>>IF      22476>>IF      22517>>IF      22551>>IF
DEL_LIST_REC.NAME#
     17516**DCL     18522--DCLINIT
DEL_LIST_REC.NAME#.C
     17518**DCL     20910>>ASSIGN  22162<<ASSIGN  22271>>IF      22290>>IF      22524>>IF
DEL_LIST_REC.NAME#.L
     17517**DCL     20911>>IF      20913>>ASSIGN  22164<<ASSIGN  22165<<ASSIGN  22269>>IF      22270<<ASSIGN
     22271>>IF      22290>>IF      22524>>IF
DEL_LIST_REC.RES
     17521**DCL     22166<<ASSIGN  22287>>ASSIGN
DEL_LIST_REC.SN
     17519**DCL     22167<<ASSIGN
DEL_LIST_REC.TIME
     17530**DCL     22171<<ASSIGN  22301>>IF      22314>>IF      22324>>IF
DEL_LIST_REC.TO_ACCT
     17522**DCL     18759--DCLINIT 19645<<ASSIGN  19661<<ASSIGN  22442>>IF
DEL_LIST_REC.TO_SN
     17523**DCL     19646<<ASSIGN  19662<<ASSIGN  22442>>IF
DEL_LIST_REC.VLP_SN
     17511**DCL     18521--DCLINIT 18679--DCLINIT 18739--DCLINIT
DEL_LIST_REC.VLP_SN.SN#
     17513**DCL     20915>>ASSIGN  22160<<ASSIGN  22290>>IF      22435>>ASSIGN  22437>>IF      22524>>IF
DEL_NODATA_REC
     17141**DCL     20662<>CALL
DEL_NODATA_REC.V
     17144**DCL     17141--DCLINIT
DEST
     17731**DCL     19165<<ASSIGN  19170<<ASSIGN  19177<<ASSIGN  19182<<ASSIGN  19187<<ASSIGN  19192<<ASSIGN
     19200>>DOCASE  19252>>IF      19642>>DOCASE  19776>>DOCASE  19808>>IF      20108>>DOCASE  20783>>DOCASE
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:507  
     20921>>IF      20930>>IF      20955>>IF
DEST_FILE_TYPE
     17691**DCL     20657>>IF      20748>>IF      20750>>IF      21132<<ASSIGN  21143<<ASSIGN  21155<<ASSIGN
     21159<<ASSIGN  21172<<ASSIGN  21200>>IF      21214>>IF      21228>>IF      21242>>IF
DEST_GRAN_UTS IN PROCEDURE FLM_GET_NEXT_QUAL_GRAN
     22030**DCL     22038<<ASSIGN  22044<<ASSIGN  22054>>IF
DEST_UTS
     17720**DCL     20352>>IF      20371<<ASSIGN  20372>>IF      20506>>IF      20515>>IF      21062<<ASSIGN
     21065<<ASSIGN  21068<<ASSIGN  21147<<ASSIGN  21151<<ASSIGN  21156<<ASSIGN  21168<<ASSIGN  21176<<ASSIGN
     21181<<ASSIGN  21186<<ASSIGN  21195<<ASSIGN  21205>>ASSIGN  21207>>ASSIGN  21212>>IF      21236>>ASSIGN
DISK_ACCT_FIRST.ACCT#
     15336**DCL     20222>>ASSIGN
DISK_ACCT_LAST.ACCT#
     15349**DCL     20223>>ASSIGN
DISK_CLOSE
     13811**DCL     20721<>CALL    20733<>CALL    20853<>CALL    20871<>CALL    21189<>CALL    21303<>CALL
     22076<>CALL    22118<>CALL    22134<>CALL    22617<>CALL
DISK_CLOSE.IFPARAM_
     13816**DCL     20717<<ASSIGN  20722<<ASSIGN  20850<<ASSIGN  20860<<ASSIGN  21587<<ASSIGN  21956<<ASSIGN
DISK_CLOSE.SN_
     13811**DCL     13811--REDEF   19276<<ASSIGN  22116<<ASSIGN  22142<<ASSIGN
DISK_CLOSE.UTL_
     13812**DCL     13812--REDEF
DISK_CLOSE.V.DCB#
     13817**DCL     19257<<ASSIGN
DISK_CLOSE.V.DESC
     13821**DCL     20718<<ASSIGN  20861<<ASSIGN  21728<<ASSIGN  21957<<ASSIGN  22110<<ASSIGN  22131<<ASSIGN
     22140<<ASSIGN
DISK_CLOSE.V.DESC.BUF#
     13822**DCL     21729<<ASSIGN
DISK_CLOSE.V.DESC.FETCH#
     13823**DCL     22133<<ASSIGN
DISK_CLOSE.V.DESC.ODSTOW#
     13822**DCL     21959<<ASSIGN  21986<<ASSIGN
DISK_CLOSE.V.DESC.QS#
     13822**DCL     21960<<ASSIGN  22132<<ASSIGN
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:508  
DISK_CLOSE.V.DESC.TERMINATE#
     13823**DCL     21270<<ASSIGN  21277<<ASSIGN  21308>>IF      21589<<ASSIGN  21633<<ASSIGN  22073<<ASSIGN
     22613<<ASSIGN
DISK_CLOSE.V.DISP#
     13820**DCL     20720<<ASSIGN  20732<<ASSIGN  20870<<ASSIGN  21188<<ASSIGN  21283<<ASSIGN  21288<<ASSIGN
     21292<<ASSIGN  21294<<ASSIGN  21307<<ASSIGN  21590<<ASSIGN  21634<<ASSIGN  21933<<ASSIGN  21934<<ASSIGN
     21982<<ASSIGN  21990<<ASSIGN  22071<<ASSIGN  22616<<ASSIGN
DISK_CLOSE.V.EFTOPER
     13818**DCL     20723<<ASSIGN  20731<<ASSIGN  20862<<ASSIGN  21187<<ASSIGN  21269<<ASSIGN  21588<<ASSIGN
     21632<<ASSIGN  21710<<ASSIGN  22129<<ASSIGN  22139<<ASSIGN  22612<<ASSIGN
DISK_CLOSE.V.EFTOPER.ASTOW#
     13819**DCL     22117<<ASSIGN
DISK_CLOSE.V.EFTOPER.DELFDE#
     13820**DCL     20869<<ASSIGN  21272<<ASSIGN  22615<<ASSIGN
DISK_CLOSE.V.EFTOPER.ISTOW#
     13819**DCL     21983<<ASSIGN
DISK_CLOSE.V.EFTOPER.UPDDESC#
     13819**DCL     20719<<ASSIGN  21276<<ASSIGN  21730<<ASSIGN  21961<<ASSIGN  21987<<ASSIGN  22072<<ASSIGN
     22130<<ASSIGN
DISK_CLOSE.V.EXPIRE#
     13826**DCL     13826--REDEF   20843<<ASSIGN  22114<<ASSIGN  22141<<ASSIGN
DISK_CLOSE.V.TYPE#
     13824**DCL     13824--REDEF
DISK_CLOSE.V.XTNSIZE#
     13821**DCL     13821--REDEF   13823--REDEF
DISK_CLOSE_NEXT
     14990**DCL     22303<>CALL    22316<>CALL    22327<>CALL    22333<>CALL    22342<>CALL    22474<>CALL
     22506<>CALL
DISK_CLOSE_NEXT.SN_
     14990**DCL     14990--REDEF   20778<<ASSIGN
DISK_CLOSE_NEXT.UTL_
     14991**DCL     14991--REDEF
DISK_CLOSE_NEXT.V.DCB#
     14996**DCL     22256<<ASSIGN
DISK_CLOSE_NEXT.V.DESC
     15000**DCL     20780<<ASSIGN  22268<<ASSIGN
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:509  
DISK_CLOSE_NEXT.V.DESC.ACTIVE#
     15002**DCL     20822<<ASSIGN
DISK_CLOSE_NEXT.V.DESC.ARCHIVE#
     15001**DCL     20816<<ASSIGN
DISK_CLOSE_NEXT.V.DESC.BAD#
     15001**DCL     20809<<ASSIGN
DISK_CLOSE_NEXT.V.DESC.ODSTOW#
     15001**DCL     20824<<ASSIGN  20825<<ASSIGN
DISK_CLOSE_NEXT.V.DESC.TERMINATE#
     15002**DCL     22503<<ASSIGN
DISK_CLOSE_NEXT.V.DESC.TPB#
     15002**DCL     20785<<ASSIGN  20788<<ASSIGN
DISK_CLOSE_NEXT.V.DISP#
     14999**DCL     22505<<ASSIGN  22508>>IF      22509<<ASSIGN  22531<<ASSIGN  22550<<ASSIGN  22563<<ASSIGN
DISK_CLOSE_NEXT.V.EFTOPER
     14997**DCL     22267<<ASSIGN  22530<<ASSIGN  22541<<ASSIGN  22549<<ASSIGN
DISK_CLOSE_NEXT.V.EFTOPER.ASTOW#
     14998**DCL     20815<<ASSIGN
DISK_CLOSE_NEXT.V.EFTOPER.BACKUP#
     14997**DCL     20806<<ASSIGN
DISK_CLOSE_NEXT.V.EFTOPER.DELFDE#
     14999**DCL     22542<<ASSIGN
DISK_CLOSE_NEXT.V.EFTOPER.ISTOW#
     14998**DCL     22469<<ASSIGN
DISK_CLOSE_NEXT.V.EFTOPER.UPDDESC#
     14998**DCL     20779<<ASSIGN  22502<<ASSIGN
DISK_CLOSE_NEXT.V.EXPIRE#
     15005**DCL     15005--REDEF   20829<<ASSIGN
DISK_CLOSE_NEXT.V.TYPE#
     15003**DCL     15003--REDEF
DISK_CLOSE_NEXT.V.XTNSIZE#
     15000**DCL     15000--REDEF   15002--REDEF
DISK_CLOSE_ORDINARY.SN_
     15032**DCL     15032--REDEF
DISK_CLOSE_ORDINARY.UTL_
     15033**DCL     15033--REDEF
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:510  
DISK_CLOSE_ORDINARY.V.EXPIRE#
     15047**DCL     15047--REDEF
DISK_CLOSE_ORDINARY.V.TYPE#
     15045**DCL     15045--REDEF
DISK_CLOSE_ORDINARY.V.XTNSIZE#
     15042**DCL     15042--REDEF   15044--REDEF
DISK_CODE04$
     17669**DCL     21131<<ASSIGN  21169<<ASSIGN  21202>>IF      21204>>IF      21206>>IF      21234>>IF
     21235>>ASSIGN
DISK_CODE06$
     17667**DCL     20516>>IF      20517>>IF      20520>>ASSIGN  21130<<ASSIGN  21148<<ASSIGN  21177<<ASSIGN
     21953>>ASSIGN
DISK_CRIT.TIM
     14194**DCL     20992<<ASSIGN
DISK_DESC_SAVE
     14197**DCL     21136<<ASSIGN  22110>>ASSIGN
DISK_DESC_SAVE.ODSTOW#
     14197**DCL     21958>>IF      21993>>IF      22111>>IF
DISK_DEST_ACCT
     14293**DCL     19269>>ASSIGN
DISK_DEST_ACCT.ACCT#
     14293**DCL     19268>>IF      19783>>IF      20336>>IF
DISK_DEST_EXIST
     14295**DCL     19280>>IF      19281<<ASSIGN  19285<<ASSIGN  19287<<ASSIGN  19293>>ASSIGN  20342>>IF
     20348>>IF      20364>>IF      20537>>IF      20541>>IF      21279>>IF      21308>>IF
DISK_DEST_RES.NAME
     14295**DCL     19228>>ASSIGN  19264>>ASSIGN  19305>>ASSIGN  19379>>ASSIGN  19419>>ASSIGN  21586>>ASSIGN
DISK_DEST_SN.SN#
     14280**DCL     19227>>ASSIGN  19261>>IF      19262>>ASSIGN  19406>>IF      19409<<ASSIGN  19779>>IF
     20334>>IF
DISK_FILE_SPEC.NBR
     14176**DCL     19602>>IF      19985>>IF      19989>>IF      22641<<ASSIGN
DISK_FILE_SPEC.SPEC
     14176**DCL     14178--REDEF
DISK_FILE_SPEC.SPEC.START
     14177**DCL     14177--REDEF
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:511  
DISK_FILE_SPEC.SPEC.START.ACCT.ACCT#
     14177**DCL     19609>>IF      22642<<ASSIGN
DISK_FILE_SPEC.SPEC.START.FILE.L#
     14177**DCL     22643<<ASSIGN
DISK_FILE_SPEC.SPEC.START.FILE.NAME#
     14177**DCL     19602>>IF      19609>>IF      22644<<ASSIGN
DISK_FILE_SPEC.SPEC.STOP
     14178**DCL     14178--REDEF   19985>>IF      19989>>IF
DISK_FILE_SPEC.SPEC.STOP.FILE.NAME#
     14178**DCL     19602>>IF
DISK_FILE_SPEC$
     14175**DCL     14176--IMP-PTR 19602>>IF      19602>>IF      19602>>IF      19609>>IF      19609>>IF
     19985>>IF      19985>>IF      19989>>IF      19989>>IF      22641>>ASSIGN  22642>>ASSIGN  22643>>ASSIGN
     22644>>ASSIGN
DISK_FIT_
     17699**DCL     19204<>CALL    20345>>ASSIGN  20411>>ASSIGN  20706>>ASSIGN  21129>>ASSIGN  21233>>ASSIGN
     22103>>ASSIGN
DISK_FIT_.PTR$
     17701**DCL     21059>>ASSIGN  21144>>ASSIGN  21163>>ASSIGN
DISK_GRAN$
     15389**DCL     15389--IMP-PTR
DISK_KEY
     17725**DCL     21801--ASSIGN  21809<<ASSIGN  21860--ASSIGN  21887<<ASSIGN  21899>>IF      21909<<ASSIGN
DISK_OPEN
     13674**DCL     20867<>CALL    21134<>CALL    21313<>CALL    21752<>CALL    22086<>CALL    22090<>CALL
     22104<>CALL    22124<>CALL    22610<>CALL
DISK_OPEN.ACCT_
     13678**DCL     19270<<ASSIGN
DISK_OPEN.ACSVEH_
     13676**DCL     13677--REDEF
DISK_OPEN.ALTKEYS_
     13682**DCL     13683--REDEF   13683--REDEF
DISK_OPEN.FPARAM_
     13679**DCL     21129<<ASSIGN  21251<<ASSIGN  22102<<ASSIGN  22609<<ASSIGN
DISK_OPEN.HDR_
     13681**DCL     13682--REDEF
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:512  
DISK_OPEN.IFPARAM_
     13679**DCL     20593<<ASSIGN  20596<<ASSIGN  20621<<ASSIGN  21128<<ASSIGN  22103<<ASSIGN  22108<<ASSIGN
     22608<<ASSIGN
DISK_OPEN.NAME_
     13675**DCL     19275<<ASSIGN
DISK_OPEN.SN_
     13674**DCL     19263<<ASSIGN  19265>>ASSIGN  19266>>ASSIGN
DISK_OPEN.TAB_
     13680**DCL     13681--REDEF
DISK_OPEN.UHL_
     13674**DCL     13675--REDEF   13675--REDEF
DISK_OPEN.V.ACS#
     13694**DCL     22100<<ASSIGN
DISK_OPEN.V.DCB#
     13683**DCL     19258<<ASSIGN  20563>>ASSIGN
DISK_OPEN.V.DELETE#
     13685**DCL     21312<<ASSIGN  21318<<ASSIGN  22089<<ASSIGN  22099<<ASSIGN
DISK_OPEN.V.EXIST#
     13687**DCL     19293<<ASSIGN  21289<<ASSIGN
DISK_OPEN.V.EXPIRE#
     13703**DCL     20628<<ASSIGN  22101<<ASSIGN
DISK_OPEN.V.FSN#
     13714**DCL     13714--REDEF   13714--REDEF
DISK_OPEN.V.FUN#
     13693**DCL     19259<<ASSIGN  20866<<ASSIGN  21127<<ASSIGN  21216<<ASSIGN  21222<<ASSIGN  21227<<ASSIGN
     21241<<ASSIGN  21250>>IF      21284<<ASSIGN  21290<<ASSIGN  21311<<ASSIGN  21317<<ASSIGN  22082<<ASSIGN
     22098<<ASSIGN  22123<<ASSIGN  22607<<ASSIGN
DISK_OPEN.V.OPER.NXTF#
     13686**DCL     22084<<ASSIGN  22144<<ASSIGN
DISK_OPEN.V.OPER.TEST#
     13685**DCL     22085<<ASSIGN  22088<<ASSIGN  22095<<ASSIGN
DISK_OPEN.V.RES#
     13698**DCL     19264<<ASSIGN
DISK_OPEN.V.SRCHCOND.ANYF#
     13692**DCL     22083<<ASSIGN  22143<<ASSIGN
DISK_OPEN.WSN_
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:513  
     13680**DCL     13680--REDEF
DISK_OPEN_DUAL IN PROCEDURE FLM_DELETE_DUAL_FILES
     21416**DCL     21595<>CALL    21624<>CALL
DISK_OPEN_DUAL.ACSVEH_ IN PROCEDURE FLM_DELETE_DUAL_FILES
     21418**DCL     21419--REDEF
DISK_OPEN_DUAL.ALTKEYS_ IN PROCEDURE FLM_DELETE_DUAL_FILES
     21424**DCL     21425--REDEF   21425--REDEF
DISK_OPEN_DUAL.HDR_ IN PROCEDURE FLM_DELETE_DUAL_FILES
     21423**DCL     21424--REDEF
DISK_OPEN_DUAL.TAB_ IN PROCEDURE FLM_DELETE_DUAL_FILES
     21422**DCL     21423--REDEF
DISK_OPEN_DUAL.UHL_ IN PROCEDURE FLM_DELETE_DUAL_FILES
     21416**DCL     21417--REDEF   21417--REDEF
DISK_OPEN_DUAL.V IN PROCEDURE FLM_DELETE_DUAL_FILES
     21425**DCL     21416--DCLINIT
DISK_OPEN_DUAL.V.FSN# IN PROCEDURE FLM_DELETE_DUAL_FILES
     21456**DCL     21456--REDEF   21456--REDEF
DISK_OPEN_DUAL.V.OPER.TEST# IN PROCEDURE FLM_DELETE_DUAL_FILES
     21427**DCL     21622<<ASSIGN  21628<<ASSIGN
DISK_OPEN_DUAL.V.OPER.THISF# IN PROCEDURE FLM_DELETE_DUAL_FILES
     21428**DCL     21623<<ASSIGN  21629<<ASSIGN
DISK_OPEN_DUAL.V.RES# IN PROCEDURE FLM_DELETE_DUAL_FILES
     21440**DCL     21586<<ASSIGN
DISK_OPEN_DUAL.WSN_ IN PROCEDURE FLM_DELETE_DUAL_FILES
     21422**DCL     21422--REDEF
DISK_OPEN_NEXT.ACSVEH_
     14816**DCL     14817--REDEF
DISK_OPEN_NEXT.ALTKEYS_
     14822**DCL     14823--REDEF   14823--REDEF
DISK_OPEN_NEXT.HDR_
     14821**DCL     14822--REDEF
DISK_OPEN_NEXT.TAB_
     14820**DCL     14821--REDEF
DISK_OPEN_NEXT.UHL_
     14814**DCL     14815--REDEF   14815--REDEF
DISK_OPEN_NEXT.V.FSN#
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:514  
     14854**DCL     14854--REDEF   14854--REDEF
DISK_OPEN_NEXT.V.OPER.TEST#
     14825**DCL     19209<<ASSIGN
DISK_OPEN_NEXT.WSN_
     14820**DCL     14820--REDEF
DISK_OPEN_ORDINARY.ACSVEH_
     14925**DCL     14926--REDEF
DISK_OPEN_ORDINARY.ALTKEYS_
     14931**DCL     14932--REDEF   14932--REDEF
DISK_OPEN_ORDINARY.HDR_
     14930**DCL     14931--REDEF
DISK_OPEN_ORDINARY.TAB_
     14929**DCL     14930--REDEF
DISK_OPEN_ORDINARY.UHL_
     14923**DCL     14924--REDEF   14924--REDEF
DISK_OPEN_ORDINARY.V.FSN#
     14963**DCL     14963--REDEF   14963--REDEF
DISK_OPEN_ORDINARY.WSN_
     14929**DCL     14929--REDEF
DISK_OPEN_PRIME IN PROCEDURE FLM_DELETE_DUAL_FILES
     21535**DCL     21598<>CALL    21608<>CALL    21637<>CALL
DISK_OPEN_PRIME.ACSVEH_ IN PROCEDURE FLM_DELETE_DUAL_FILES
     21537**DCL     21538--REDEF
DISK_OPEN_PRIME.ALTKEYS_ IN PROCEDURE FLM_DELETE_DUAL_FILES
     21543**DCL     21544--REDEF   21544--REDEF
DISK_OPEN_PRIME.HDR_ IN PROCEDURE FLM_DELETE_DUAL_FILES
     21542**DCL     21543--REDEF
DISK_OPEN_PRIME.SN_ IN PROCEDURE FLM_DELETE_DUAL_FILES
     21535**DCL     21585<<ASSIGN
DISK_OPEN_PRIME.TAB_ IN PROCEDURE FLM_DELETE_DUAL_FILES
     21541**DCL     21542--REDEF
DISK_OPEN_PRIME.UHL_ IN PROCEDURE FLM_DELETE_DUAL_FILES
     21535**DCL     21536--REDEF   21536--REDEF
DISK_OPEN_PRIME.V IN PROCEDURE FLM_DELETE_DUAL_FILES
     21544**DCL     21535--DCLINIT
DISK_OPEN_PRIME.V.FSN# IN PROCEDURE FLM_DELETE_DUAL_FILES
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:515  
     21575**DCL     21575--REDEF   21575--REDEF
DISK_OPEN_PRIME.V.OPER.NXTF# IN PROCEDURE FLM_DELETE_DUAL_FILES
     21547**DCL     21605<<ASSIGN  21610<<ASSIGN  21619<<ASSIGN
DISK_OPEN_PRIME.V.OPER.THISF# IN PROCEDURE FLM_DELETE_DUAL_FILES
     21547**DCL     21606<<ASSIGN  21611<<ASSIGN  21620<<ASSIGN
DISK_OPEN_PRIME.V.RES# IN PROCEDURE FLM_DELETE_DUAL_FILES
     21559**DCL     21584<<ASSIGN
DISK_OPEN_PRIME.V.SRCHCOND.DELF# IN PROCEDURE FLM_DELETE_DUAL_FILES
     21550**DCL     21607<<ASSIGN  21612<<ASSIGN  21621<<ASSIGN
DISK_OPEN_PRIME.WSN_ IN PROCEDURE FLM_DELETE_DUAL_FILES
     21541**DCL     21541--REDEF
DISK_OPTION.ACUP
     14189**DCL     20676>>IF      20799>>IF
DISK_OPTION.CLEANUP
     14188**DCL     19664>>IF      20793>>IF
DISK_OPTION.DELETE
     14190**DCL     19664>>IF      20030>>IF      20765>>IF      20793>>IF      21011>>IF      22420>>IF
     22442>>IF
DISK_OPTION.DIR
     14188**DCL     19547>>ASSIGN  19548<<ASSIGN  19591<<ASSIGN  20397>>IF
DISK_OPTION.IDSS
     14189**DCL     20799>>IF
DISK_OPTION.INACTIVATE
     14189**DCL     20817>>IF
DISK_OPTION.NOUPDATE
     14189**DCL     20768>>IF      21008>>IF
DISK_OPTION.OPEN_MODE
     14191**DCL     21718>>IF
DISK_OPTION.PAD
     14189**DCL     19585>>ASSIGN
DISK_OPTION.SCRUB
     14189**DCL     20591>>IF
DISK_OPTION.SCRUB.STOW
     14190**DCL     21936>>IF
DISK_OPTION.XFER
     14191**DCL     20030>>IF      20764>>IF      20902>>IF      21011>>IF      22420>>IF      22442>>IF
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:516  
DISK_READ.STATION_
     13738**DCL     13739--REDEF
DISK_READ.V.DVBYTE.REREAD#
     13750**DCL     13750--REDEF
DISK_READ.V.INDX#
     13748**DCL     13748--REDEF
DISK_REOPEN
     18224**DCL     19715<>CALL
DISK_REOPEN.ACSVEH_
     18226**DCL     18227--REDEF
DISK_REOPEN.ALTKEYS_
     18232**DCL     18233--REDEF   18233--REDEF
DISK_REOPEN.FPARAM_
     18229**DCL     19714<<ASSIGN
DISK_REOPEN.HDR_
     18231**DCL     18232--REDEF
DISK_REOPEN.TAB_
     18230**DCL     18231--REDEF
DISK_REOPEN.UHL_
     18224**DCL     18225--REDEF   18225--REDEF
DISK_REOPEN.V
     18233**DCL     18224--DCLINIT
DISK_REOPEN.V.DCB#
     18233**DCL     19713<<ASSIGN
DISK_REOPEN.V.FSN#
     18264**DCL     18264--REDEF   18264--REDEF
DISK_REOPEN.WSN_
     18230**DCL     18230--REDEF
DISK_SN
     14720**DCL     18224--DCLINIT
DISK_SRCHCOND
     14181**DCL     22593>>ASSIGN  22594<<ASSIGN  22639<<ASSIGN
DISK_SRCHCOND.ANYF#
     14182**DCL     22420>>IF
DISK_SRCHCOND.DELF#
     14181**DCL     19690>>IF      20676>>IF      22595<<ASSIGN
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:517  
DISK_SRCHCOND_SAVE IN PROCEDURE FLM_FILES_FROM_TAPE_DELETE
     22579**DCL     22593<<ASSIGN  22639>>ASSIGN
DISK_WRITE
     13774**DCL     21787<>CALL    21840<>CALL    22014<>CALL
DISK_WRITE.BUF_
     13774**DCL     21785<<ASSIGN  21808<<ASSIGN  21838<<ASSIGN  21886<<ASSIGN  21908<<ASSIGN
DISK_WRITE.BUF_.BOUND
     13774**DCL     21786<<ASSIGN  21839<<ASSIGN  22013<<ASSIGN
DISK_WRITE.KEY_
     13774**DCL     21761<<ASSIGN  21801<<ASSIGN  21834<<ASSIGN  21860<<ASSIGN
DISK_WRITE.STATION_
     13776**DCL     13776--REDEF
DISK_WRITE.V.DCB#
     13777**DCL     19256<<ASSIGN
DISK_WRITE.V.DVBYTE.VFC#
     13783**DCL     13783--REDEF
DISK_WRITE.V.EVENT#
     13782**DCL     19255<<ASSIGN
DISK_WRITE.V.WAIT#
     13777**DCL     19254<<ASSIGN
DISP IN PROCEDURE FLM_DISP
     22390**DCL     22386--PROC    22396>>ASSIGN
DONTDELACCT IN PROCEDURE FLM_CLEANUP_ACCOUNT
     22424**LABEL   22421--GOTO
DPLIST
     14173**DCL     19331--ASSIGN  19399--ASSIGN  19441--ASSIGN  21585--ASSIGN  22763--ASSIGN
DPLIST.NUM#
     14173**DCL     20180>>DOINDEX
DPLIST.SN#
     14173**DCL     19351<>CALL    20181>>ASSIGN  20183<>CALL
DPLIST$
     14161**DCL     14173--IMP-PTR 19331>>ASSIGN  19351>>CALL    19399>>ASSIGN  19441>>ASSIGN  20180>>DOINDEX
     20181>>ASSIGN  20183>>CALL    21585>>ASSIGN  22763>>ASSIGN
DPRESLIST.NAME
     14175**DCL     19332>>ASSIGN  19400>>ASSIGN  19442>>ASSIGN  20182>>ASSIGN  21584>>ASSIGN
DPRESLIST$
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:518  
     14175**DCL     14175--IMP-PTR 19332>>ASSIGN  19400>>ASSIGN  19442>>ASSIGN  20182>>ASSIGN  21584>>ASSIGN
DPX IN PROCEDURE FLM_UPDATE_RUN_INFO
     20134**DCL     20180<<DOINDEX 20181>>ASSIGN  20182>>ASSIGN  20183>>CALL
DP_RUN_NBR IN PROCEDURE FLM_UPDATE_RUN_INFO
     20135**DCL     20197<<ASSIGN  20200<<ASSIGN  20203<<ASSIGN  20205>>ASSIGN  20237>>ASSIGN
DUAL_DO IN PROCEDURE FLM_FILE_TO_DISK_HANDLING
     20681**LABEL   20686--EXIT    20693--EXIT    20698--EXIT    20710--EXIT    20713--EXIT
DUAL_FILE
     16314**DCL     19381--ASSIGN  19420--ASSIGN
DUAL_FILE.L#
     16314**DCL     16314--IMP-SIZ 19381>>ASSIGN  19420>>ASSIGN  19765>>IF      21600>>IF
DUAL_FILE.NAME#
     16314**DCL     19765>>IF      21600>>IF
EFTFILE_DCB$
     15411**DCL     19980>>ASSIGN  19981>>ASSIGN  19982>>ASSIGN  20910>>ASSIGN  20912>>ASSIGN  20913>>ASSIGN
     20914>>ASSIGN  20915>>ASSIGN  20916>>ASSIGN  20917>>IF      20917>>IF      20922<>CALL    20931<>CALL
EFTWORD
     14296**DCL     14296--REDEF   20520<<ASSIGN  20772<<ASSIGN  21992<<ASSIGN
EFTWORD.CROSS
     14296**DCL     20773<<ASSIGN  20842<<ASSIGN
EFTWORD.FSN
     14296**DCL     20527>>IF      20777<<ASSIGN  21995<<ASSIGN  22113<<ASSIGN
EFTWORDEXPIRE
     14296**DCL     20523>>IF      20776<<ASSIGN  20829>>ASSIGN  20843>>ASSIGN  21994<<ASSIGN  22112<<ASSIGN
     22114>>ASSIGN
EFT_CVOL_FILE.L#
     15438**DCL     15438--IMP-SIZ
EFT_RESTRICT_FILE.L#
     15465**DCL     15465--IMP-SIZ
ERR
     17677**DCL     19480<<ASSIGN  19503<>CALL    19554<>CALL    19595<>CALL    19612>>ASSIGN  19648<>CALL
     19668<>CALL    19671<>CALL    19678<>CALL    19698>>IF      19717<<ASSIGN  19722<>CALL    19723<>CALL
     19750<>CALL    19787<>CALL    19805<<ASSIGN  19826>>IF      19826>>IF      19826>>IF      19832<>CALL
     19836>>IF      19845<>CALL    19846<>CALL    19858>>IF      19859<<ASSIGN  19860>>IF      19860>>IF
     19870<>CALL    19872>>IF      19872>>IF      19881<>CALL    19892<>CALL    19894<>CALL    19912>>ASSIGN
     19923<>CALL    19947<>CALL    19963<<ASSIGN  19965<>CALL    20018>>IF      20043<>CALL    20099<>CALL
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:519  
     20260<>CALL    20286<<ASSIGN  20290<>CALL    20360<<ASSIGN  20452<<ASSIGN  20466<<ASSIGN  20564<>CALL
     20566<>CALL    20568<>CALL    20572<<ASSIGN  20577<<ASSIGN  20578<>CALL    20857<<ASSIGN  20877<<ASSIGN
     20906<<ASSIGN  20907>>DOWHILE 20922<>CALL    20925<<ASSIGN  20931<>CALL    20934<<ASSIGN  20936>>IF
     20943<<ASSIGN  20948<<ASSIGN  21755<<ASSIGN  21762>>DOWHILE 21763<>CALL    21766<<ASSIGN  21772>>IF
     21783>>IF      21789<<ASSIGN  21800<<ASSIGN  21835>>DOWHILE 21836<>CALL    21842<<ASSIGN  21861>>DOWHILE
     21862<>CALL    21890>>DOWHILE 21916>>IF      21976<<ASSIGN  22000<<ASSIGN  22016<<ASSIGN  22034>>DOWHILE
     22043<<ASSIGN  22047<<ASSIGN  22221<<ASSIGN  22264>>DOWHILE 22360<<ASSIGN  22425<>CALL    22449<<ASSIGN
     22521<>CALL    22522<<ASSIGN  22555<>CALL    22556<<ASSIGN  22601<>CALL
ERR.CODE
     17681**DCL     19505>>DOSELCT 19556>>IF      19556>>IF      19602>>IF      19624>>IF      19624>>IF
     19674>>DOSELCT 19705>>IF      19724>>IF      19724>>IF      19724>>IF      19724>>IF      19724>>IF
     19724>>IF      19724>>IF      19724>>IF      19749<<ASSIGN  19805>>IF      19817>>IF      19836>>IF
     19838>>IF      19838>>IF      19844>>IF      19849>>IF      19849>>IF      19860>>IF      19872>>IF
     19876>>IF      19888>>IF      19896>>IF      19896>>IF      19910>>IF      19949>>IF      19964<<ASSIGN
     20016>>IF      20018>>IF      20470<<ASSIGN  20807>>IF      20874<<ASSIGN  20920<<ASSIGN  20929<<ASSIGN
     21057>>IF      21057>>IF      21765>>IF      21767>>IF      21772>>IF      21931>>IF      21931>>IF
     21936>>IF      21936>>IF      21971>>IF      22001>>IF      22424<<ASSIGN  22520<<ASSIGN  22554<<ASSIGN
     22632>>IF
ERR IN PROCEDURE FLM_DELETE_DUAL_FILES
     21333**DCL     21640<>CALL
ERR.CODE IN PROCEDURE FLM_DELETE_DUAL_FILES
     21337**DCL     21636<<ASSIGN
ERRCLSALT
     19352**LABEL   19340--CALLALT 19351--CALLALT 19352--CALLALT 19375--CALLALT 19376--CALLALT 19388--CALLALT
     19389--CALLALT 19391--GOTO    19393--CALLALT 19394--CALLALT 19404--CALLALT 19405--CALLALT 19416--CALLALT
     19421--CALLALT 19422--CALLALT 19423--CALLALT 19425--CALLALT 19436--CALLALT 19437--CALLALT 19438--CALLALT
     19443--CALLALT 19444--CALLALT 19445--CALLALT
ERROR_EXIT IN PROCEDURE FLM_FILE_FROM_DISK_CLEANUP
     21021**LABEL   20922--CALLALT 20931--CALLALT
E_BAD_TAPE_FILE
     11952**DCL     19657<>CALL    19796<>CALL
E_CANT_RETRIEVE
     12582**DCL     20580<>CALL
E_CANT_SAVE_FILE
     12267**DCL     19752<>CALL
E_DEL_FILES_REMAIN
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:520  
     10601**DCL     21045<>CALL
E_NOTHING_FOUND
     10421**DCL     20004<>CALL    20022<>CALL
E_NOT_SCRATCH_PACK
     12132**DCL     19313<>CALL    19323<>CALL
E_NO_PREVIOUS_SAVE
     10556**DCL     19459<>CALL
E_WRONG_DUAL
     11997**DCL     19413<>CALL
E_WRONG_PRIME
     12042**DCL     19428<>CALL
F$DCB
     19035**DCL     19772<<ASSIGN  19772>>ASSIGN  22515<<ASSIGN  22515>>ASSIGN
F$DCB.ACCT#
     19051**DCL     19573>>ASSIGN  19577>>ASSIGN  19609>>IF      19762>>IF      19784>>ASSIGN  19980>>ASSIGN
     20337>>ASSIGN  20395>>ASSIGN  20493>>IF      20647>>ASSIGN  20659>>ASSIGN  20914<<ASSIGN  21137>>IF
     22161>>ASSIGN  22279>>IF      22290>>IF      22524>>IF      22605>>ASSIGN
F$DCB.ACTPOS
     19067**DCL     19067--REDEF
F$DCB.ARS#
     19041**DCL     19041--REDEF
F$DCB.ATTR
     19060**DCL     19061--REDEF
F$DCB.BORROW
     19075**DCL     19075--REDEF   19075--REDEF   19075--REDEF
F$DCB.CRECNO
     19079**DCL     19534>>ASSIGN
F$DCB.DCB#
     19069**DCL     19891>>ASSIGN
F$DCB.DCBNAME.L
     19089**DCL     19089--IMP-SIZ 19222<<ASSIGN  19772>>ASSIGN  19772>>ASSIGN  22515>>ASSIGN  22515>>ASSIGN
F$DCB.DENSITY#
     19062**DCL     19583>>ASSIGN
F$DCB.DESC
     19048**DCL     20718>>ASSIGN  20780>>ASSIGN  20916<<ASSIGN  21136>>ASSIGN  21728>>ASSIGN  21957>>ASSIGN
     22131>>ASSIGN  22726>>ASSIGN
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:521  
F$DCB.DESC.ACTIVE#
     19050**DCL     20817>>IF
F$DCB.DESC.ARCHIVE#
     19049**DCL     19526>>IF      20515>>IF      21141>>IF      21274>>IF      22295>>IF      22312>>IF
     22499>>IF
F$DCB.DESC.DELF#
     19048**DCL     19525>>IF      20817>>IF      21140>>IF      21271>>IF      22295>>IF      22312>>IF
     22468>>IF      22497>>IF      22614>>IF
F$DCB.DESC.FETCH#
     19050**DCL     20515>>IF
F$DCB.DESC.ODSTOW#
     19049**DCL     20521>>IF      21984>>IF
F$DCB.DESC.QS#
     19049**DCL     20515>>IF      22499>>IF
F$DCB.EOMCHAR#
     19045**DCL     19045--REDEF
F$DCB.EXPIRE#
     19058**DCL     20371>>ASSIGN  21084>>ASSIGN  21156>>ASSIGN  22314>>IF
F$DCB.FCD#
     19054**DCL     19358>>IF      19364>>IF      19368>>IF      19899>>IF      19903>>IF      20046>>IF
     20102>>IF      20160>>IF      20729>>IF      21266>>IF      22074>>IF      22234>>IF      22472>>IF
F$DCB.FLDID
     19070**DCL     19070--REDEF
F$DCB.FORM$
     19064**DCL     19064--REDEF
F$DCB.FSECT
     19080**DCL     19080--REDEF
F$DCB.FSN#
     19057**DCL     19057--REDEF   19057--REDEF   19058--REDEF   19989>>IF
F$DCB.FUN#
     19056**DCL     20845>>IF      20845>>IF
F$DCB.HEADER$
     19063**DCL     19063--REDEF
F$DCB.IXTNSIZE#
     19061**DCL     19061--REDEF
F$DCB.LASTSTA$
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:522  
     19050**DCL     19050--REDEF
F$DCB.LVL
     19076**DCL     19076--REDEF
F$DCB.NAME#
     19051**DCL     19578>>ASSIGN  19778>>ASSIGN  21137>>IF      21597>>ASSIGN  21613>>IF      22604>>ASSIGN
F$DCB.NAME#.C
     19051**DCL     19051--REDEF   19609>>IF      19765>>IF      19765>>IF      19982>>ASSIGN  20649>>ASSIGN
     20661>>ASSIGN  20910<<ASSIGN  20917>>IF      22162>>ASSIGN  22290>>IF      22524>>IF
F$DCB.NAME#.L
     19051**DCL     19981>>ASSIGN  20648>>ASSIGN  20660>>ASSIGN  20912<<ASSIGN  20913<<ASSIGN  20917>>IF
     22163>>IF      22165>>ASSIGN  22290>>IF      22524>>IF
F$DCB.NOEOF
     19073**DCL     19073--REDEF
F$DCB.NRECS#
     19062**DCL     19062--REDEF
F$DCB.NRECX
     19081**DCL     19081--REDEF
F$DCB.OHDR
     19073**DCL     19073--REDEF
F$DCB.ORG#
     19056**DCL     19056--REDEF   19838>>IF      19838>>IF      19838>>IF      19838>>IF      20799>>IF
     21775>>IF      21775>>IF      21775>>IF      21775>>IF      21832>>IF      21832>>IF      21832>>IF
     21852>>IF
F$DCB.PRECNO
     19079**DCL     19079--REDEF
F$DCB.PSN#
     19051**DCL     19780>>ASSIGN  20069>>ASSIGN  20335>>ASSIGN  20915<<ASSIGN  22160>>ASSIGN  22290>>IF
     22524>>IF      22606>>ASSIGN
F$DCB.RCSZ
     19085**DCL     19085--REDEF
F$DCB.RES#
     19052**DCL     19052--REDEF   20774>>IF      20823>>IF      22166>>ASSIGN
F$DCB.SETX
     19064**DCL     19064--REDEF
F$DCB.TAB$
     19064**DCL     19064--REDEF
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:523  
F$DCB.TDA
     19078**DCL     19079--REDEF
F$DCB.VOL#
     19062**DCL     19580>>ASSIGN
F$DCB.WSN#
     19052**DCL     19052--REDEF
FILE_DESC IN PROCEDURE FLM_REQUEUE_FILES_FOR_STOW
     22669**DCL     22732<<ASSIGN
FILE_DESC.ACTIVE# IN PROCEDURE FLM_REQUEUE_FILES_FOR_STOW
     22680**DCL     22733>>IF
FILE_DISP_REC
     17532**DCL     18586--DCLINIT 18587--DCLINIT
FILE_DISP_REC.DISP
     17536**DCL     22373<<ASSIGN  22396<<ASSIGN
FILE_DISP_REC.NBR
     17534**DCL     22371<<ASSIGN  22398<<CALLBLT 22399<<CALLBLT 22399>>CALLBLT
FILE_DISP_REC.WHAT
     17535**DCL     22372<<ASSIGN  22397<<ASSIGN
FILE_TYPE
     14191**DCL     22596>>ASSIGN  22597<<ASSIGN  22640<<ASSIGN
FILE_TYPE.DF
     14192**DCL     22598<<ASSIGN
FILE_TYPE_SAVE IN PROCEDURE FLM_FILES_FROM_TAPE_DELETE
     22580**DCL     22596<<ASSIGN  22640>>ASSIGN
FIRST_ACCT
     14211**DCL     19569>>ASSIGN
FIRST_FILE.L#
     14252**DCL     19570>>ASSIGN  19574>>ASSIGN
FIRST_FILE.NAME#
     14252**DCL     19571>>ASSIGN  19575>>ASSIGN
FIT$
     17672**DCL     19107--IMP-PTR 21947<<ASSIGN  21948>>ASSIGN  21952>>ASSIGN  22710<<ASSIGN  22711>>ASSIGN
     22714>>ASSIGN
FIT_AREA
     15748**DCL     22692<>CALL    22693>>ASSIGN  22709>>ASSIGN
FIT_AREA.W2
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:524  
     15749**DCL     15750--REDEF
FIT_ONLY_CODE
     14613**DCL     19829<>CALL
FIT_ONLY_RSTRD
     17735**DCL     19826>>IF      20491<<ASSIGN  20645>>IF      21219<<ASSIGN  21246<<ASSIGN
FIT_ONLY_SAVED
     17734**DCL     19484<<ASSIGN  19648<>CALL    19787<>CALL    19826>>IF      20260<>CALL    20799>>IF
     20922<>CALL    20931<>CALL
FIT_UPDATE
     17710**DCL     19483<<ASSIGN  19785<>CALL    19858>>IF
FIT_UPDATE IN PROCEDURE FLM_FILE_TO_DISK_HANDLING
     20482**DCL     20480--PROC    20490<<ASSIGN  20724<<ASSIGN
FLC$CRIT_CHECK
     17460**DCL-ENT 19739--CALL
FLC$TAPE_CLOSE
     17465**DCL-ENT 19923--CALL    20043--CALL    20099--CALL    22629--CALL
FLC$TAPE_CLOSE_NEXT
     17464**DCL-ENT 19947--CALL    22591--CALL    22602--CALL
FLC$TAPE_IO_INIT
     17461**DCL-ENT 19221--CALL
FLC$TAPE_OPEN_NEXT
     17462**DCL-ENT 19554--CALL    19595--CALL    22601--CALL
FLC$TAPE_READ_NEXT
     17463**DCL-ENT 21836--CALL    21862--CALL
FLI$ALLOC_BUF
     17467**DCL-ENT 19196--CALL    19204--CALL    19218--CALL    19220--CALL    20254--CALL    20987--CALL
     21856--CALL    22222--CALL    22226--CALL    22692--CALL
FLI$BUILD_$$EFT
     17485**DCL-ENT 19234--CALL    19351--CALL    19388--CALL    20183--CALL
FLI$DISK_READ
     17468**DCL-ENT 21763--CALL
FLI$DISK_READ_FILE_INIT
     17469**DCL-ENT 21760--CALL
FLI$DISK_READ_INIT
     17470**DCL-ENT 19211--CALL
FLI$NUMFREEGRANS
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:525  
     17486**DCL-ENT 20564--CALL
FLI$RETURN_BUF
     17471**DCL-ENT 21793--CALL    21825--CALL
FLI$RPT_ERR
     17472**DCL-ENT 19214--CALL    19239--CALL    19313--CALL    19323--CALL    19327--CALL    19356--CALL
     19413--CALL    19428--CALL    19459--CALL    19657--CALL    19678--CALL    19723--CALL    19752--CALL
     19796--CALL    19845--CALL    19846--CALL    19881--CALL    19892--CALL    19894--CALL    20004--CALL
     20017--CALL    20022--CALL    20039--CALL    20171--CALL    20284--CALL    20294--CALL    20301--CALL
     20312--CALL    20422--CALL    20568--CALL    20580--CALL    20652--CALL    20664--CALL    20942--CALL
     21029--CALL    21045--CALL    21305--CALL    21315--CALL    21626--CALL    21642--CALL    21650--CALL
     22078--CALL    22106--CALL    22120--CALL    22126--CALL    22136--CALL    22179--CALL    22239--CALL
     22252--CALL    22305--CALL    22309--CALL    22318--CALL    22329--CALL    22335--CALL    22344--CALL
     22349--CALL    22356--CALL    22376--CALL    22402--CALL    22446--CALL    22452--CALL    22480--CALL
     22562--CALL    22619--CALL    22740--CALL
FLI$TSN_USED
     17473**DCL-ENT 19457--CALL    20053--CALL    20982--CALL
FLM$MOVE
         8**PROC    20065--CALL    20995--CALL
FLM_ACCOUNT_TO_DISK_HANDLING
     20324**PROC    19644--CALL
FLM_ADD_TO_DEL_LIST
     22151**PROC    19666--CALL    20620--CALL    20795--CALL    20820--CALL
FLM_CLEAN IN PROCEDURE FLM_CLEANUP
     22490**PROC    22471--CALL
FLM_CLEANUP
     22186**PROC    20036--CALL    21009--CALL    21020--CALL    21022--CALL
FLM_CLEANUP_ACCOUNT IN PROCEDURE FLM_CLEANUP
     22410**PROC    22284--CALL
FLM_CLEANUP_FILE IN PROCEDURE FLM_CLEANUP
     22459**PROC    22302--CALL    22315--CALL    22326--CALL
FLM_COPY_FILE_TO_DISK
     21657**PROC    20631--CALL
FLM_DELETE_DUAL_FILES
     21331**PROC    19693--CALL
FLM_DELETE_TO_DISK_FILE
     21257**PROC    20587--CALL    21630--CALL
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:526  
FLM_DISP IN PROCEDURE FLM_CLEANUP
     22386**PROC    22378--CALL    22379--CALL    22380--CALL
FLM_FILES_FROM_TAPE_DELETE
     22572**PROC    19919--CALL
FLM_FILE_FROM_DISK_CLEANUP
     20887**PROC    20006--CALL
FLM_FILE_FROM_DISK_WRAPUP
     20760**PROC    19821--CALL
FLM_FILE_TO_DISK_HANDLING
     20480**PROC    19785--CALL
FLM_FILE_TO_DISK_WRAPUP
     20838**PROC    19809--CALL
FLM_GET_DEST_ACCT_UTS
     21053**PROC    20351--CALL
FLM_GET_DEST_FILE_UTS
     21123**PROC    20502--CALL    20513--CALL
FLM_GET_NEXT_QUAL_GRAN IN PROCEDURE FLM_COPY_FILE_TO_DISK
     22023**PROC    21879--CALL    21894--CALL
FLM_GET_PRIME_VSN
     22754**PROC    19340--CALL    19425--CALL
FLM_GET_SOURCE_UTS
     21075**PROC    20340--CALL    20501--CALL    20512--CALL
FLM_RECREATE_QF_FILE IN PROCEDURE FLM_COPY_FILE_TO_DISK
     22064**PROC    21977--CALL    22002--CALL
FLM_REQUEUE_FILES_FOR_STOW
     22653**PROC    20121--CALL    20968--CALL
FLM_UPDATE_RUN_INFO
     20131**PROC    20110--CALL    20957--CALL
FLM_WR_GRANS IN PROCEDURE FLM_COPY_FILE_TO_DISK
     22006**PROC    21816--CALL    21824--CALL    21903--CALL    21917--CALL
FLN$DISK_CLOSE_ALL
     17474**DCL-ENT 20094--CALL    20960--CALL    20973--CALL    21038--CALL
FLN$DISK_CLOSE_NEXT
     17475**DCL-ENT 19681--CALL    19734--CALL    19945--CALL
FLN$DISK_IO_INIT
     17476**DCL-ENT 19210--CALL
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:527  
FLN$DISK_OPEN_NEXT
     17477**DCL-ENT 19503--CALL
FLP$WR_FILE_INFO
     17478**DCL-ENT 19160--CALL    19668--CALL    19671--CALL    19722--CALL    19750--CALL    19829--CALL
     19832--CALL    19870--CALL    19965--CALL    20290--CALL    20566--CALL    20578--CALL    21640--CALL
     22258--CALL    22425--CALL    22521--CALL    22555--CALL
FLS$FILE_PACKER
     17479**DCL-ENT 19648--CALL    19787--CALL    20260--CALL    20922--CALL    20931--CALL
FLS$FILE_PACKER_FIN
     17481**DCL-ENT 20111--CALL    20958--CALL    21035--CALL
FLS$FILE_PACKER_INIT
     17480**DCL-ENT 19202--CALL
FLS$SCRUB
     17482**DCL-ENT 20592--CALL
FM$FIT.CODES.NDW
     19107**DCL     21952<<ASSIGN  22714<<ASSIGN
FM$GRAN
     19092**DCL     19531--ASSIGN  20592--CALL    20597--ASSIGN  20610--ASSIGN  20622--ASSIGN  20690--ASSIGN
     20695--ASSIGN  20707--ASSIGN  20715--ASSIGN  20716--ASSIGN  20848--ASSIGN  20849--ASSIGN  21095--ASSIGN
     21163--ASSIGN  21743--ASSIGN  21947--ASSIGN  21954--ASSIGN  21955--ASSIGN  22321--ASSIGN  22710--ASSIGN
     22715--ASSIGN  22716--ASSIGN
FPARAM_
     17673**DCL     19503<>CALL    19554<>CALL    19595<>CALL    19648<>CALL    19714>>ASSIGN  19770>>ASSIGN
     19787<>CALL    20437>>ASSIGN  20593>>ASSIGN  20850>>ASSIGN  20922<>CALL    20931<>CALL    21233<<ASSIGN
     22601<>CALL
FPARAM_.BOUND
     17674**DCL     20849<<ASSIGN  20849>>ASSIGN
FPARAM_.PTR$
     17676**DCL     19510>>ASSIGN  19518>>ASSIGN  19531>>ASSIGN  19668<>CALL    19671<>CALL    19739<>CALL
     19773>>ASSIGN  19965<>CALL    20592>>CALL    20602>>ASSIGN  20688>>IF      20690>>ASSIGN  20695>>ASSIGN
     20848<<ASSIGN  20848>>ASSIGN  21089>>ASSIGN  21093>>IF      21095>>ASSIGN  21099>>ASSIGN  21743>>ASSIGN
FPT_EXIT.V.STEPCC#
     13601**DCL     13601--REDEF   19362>>IF      19363<<ASSIGN  19658>>IF      19659<<ASSIGN  19729>>IF
     19730<<ASSIGN  19797>>IF      19798<<ASSIGN  19847>>IF      19848<<ASSIGN  19851<<ASSIGN  19882<<ASSIGN
     19898<<ASSIGN  19921>>IF      19922<<ASSIGN  19931<<ASSIGN  19936>>IF      19937<<ASSIGN  20002>>IF
     20003<<ASSIGN  20020>>IF      20021<<ASSIGN  20057>>IF      20058<<ASSIGN  20080>>IF      20081<<ASSIGN
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:528  
     20090>>IF      20091<<ASSIGN  20569>>IF      20570<<ASSIGN  20581>>IF      20582<<ASSIGN  20810>>IF
     20811<<ASSIGN  21768>>IF      21769<<ASSIGN  21790>>IF      21791<<ASSIGN  21843>>IF      21844<<ASSIGN
     22017>>IF      22018<<ASSIGN  22048>>IF      22049<<ASSIGN
FPT_REM
     19004**DCL     20070<>CALL
FPT_REM.V
     19004**DCL     19004--DCLINIT
FPT_REM.V.PSN#
     19005**DCL     20069<<ASSIGN
FREE_GRANS IN PROCEDURE FLM_FILE_TO_DISK_HANDLING
     20484**DCL     20564<>CALL    20575>>IF
FROM_DISK_ACCT
     14707**DCL     15231--DCLINIT
FROM_DISK_ACCT.ACCT#
     14707**DCL     22705<<ASSIGN
FROM_DISK_NAME
     14681**DCL     15227--DCLINIT 22706<<ASSIGN
FROM_DISK_SN
     14733**DCL     15226--DCLINIT
FROM_DISK_SN.SN#
     14733**DCL     22704<<ASSIGN
GET_AD_OR_FD
     17937**DCL     20346<>CALL    20412<>CALL    20450<>CALL    21721<>CALL
GET_AD_OR_FD.ACCT_
     17941**DCL     19273<<ASSIGN
GET_AD_OR_FD.ACSVEH_
     17939**DCL     17940--REDEF
GET_AD_OR_FD.ALTKEYS_
     17945**DCL     17946--REDEF   17946--REDEF
GET_AD_OR_FD.FPARAM_
     17942**DCL     20345<<ASSIGN  20411<<ASSIGN  20449<<ASSIGN  21720<<ASSIGN
GET_AD_OR_FD.HDR_
     17944**DCL     17945--REDEF
GET_AD_OR_FD.SN_
     17937**DCL     19266<<ASSIGN
GET_AD_OR_FD.TAB_
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:529  
     17943**DCL     17944--REDEF
GET_AD_OR_FD.UHL_
     17937**DCL     17938--REDEF   17938--REDEF
GET_AD_OR_FD.V
     17946**DCL     17937--DCLINIT
GET_AD_OR_FD.V.DELETE#
     17948**DCL     20448<<ASSIGN  20454<<ASSIGN
GET_AD_OR_FD.V.EXPIRE#
     17966**DCL     20446<<ASSIGN  20447<<ASSIGN
GET_AD_OR_FD.V.FSN#
     17977**DCL     17977--REDEF   17977--REDEF
GET_AD_OR_FD.WSN_
     17943**DCL     17943--REDEF
GET_NOW_UTS
     14152**DCL     19342<>CALL    19434<>CALL    20220<>CALL    22170<>CALL
GET_PSN_FROM_MAD
     18780**DCL     22431<>CALL
GET_PSN_FROM_MAD.V
     18781**DCL     18780--DCLINIT
GOING IN PROCEDURE FLM_FILE_TO_DISK_HANDLING
     20554**LABEL   20573--EXIT    20584--EXIT
GOING_TO_DEST
     17709**DCL     19482<<ASSIGN  19800<<ASSIGN  19802<<ASSIGN  19806>>IF      20349<<ASSIGN  20353<<ASSIGN
     20354<<ASSIGN  20361<<ASSIGN  20367<<ASSIGN  20368<<ASSIGN  20373<<ASSIGN  20374<<ASSIGN  20377>>IF
     20381<<ASSIGN  20414<<ASSIGN  20432<<ASSIGN  20434>>IF      20489<<ASSIGN  20499<<ASSIGN  20504<<ASSIGN
     20507<<ASSIGN  20524<<ASSIGN  20528<<ASSIGN  20538<<ASSIGN  20542<<ASSIGN  20553>>IF      20571<<ASSIGN
     20583<<ASSIGN  20633>>IF      20749<<ASSIGN  20753<<ASSIGN  21754<<ASSIGN  21974<<ASSIGN  21999<<ASSIGN
GRANULE_NBR
     17648**DCL     18970--DCLINIT 18971--DCLINIT
GRAN_KEY
     15375**DCL     21804>>IF      21809>>ASSIGN  21867>>DOWHILE 21887>>ASSIGN  21899>>IF      21904>>DOWHILE
     21909>>ASSIGN  22035--ASSIGN
GRAN_MOD_TIME IN PROCEDURE FLM_GET_NEXT_QUAL_GRAN
     22031**DCL     22038>>ASSIGN  22054>>IF
IDS_FAST_INCR IN PROCEDURE FLM_COPY_FILE_TO_DISK
     21662**DCL     21855<<ASSIGN  21859<<ASSIGN  21877>>IF      21892>>IF
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:530  
IDS_GRANULE_ IN PROCEDURE FLM_COPY_FILE_TO_DISK
     21659**DCL     21856<>CALL    21857>>ASSIGN
IDS_GRANULE_.PTR$ IN PROCEDURE FLM_COPY_FILE_TO_DISK
     21661**DCL     22038>>ASSIGN
IGNORE_FILE
     19729**LABEL   19739--CALLALT 19753--GOTO    19767--GOTO
INACTIVATE IN PROCEDURE FLM_ADD_TO_DEL_LIST
     22156**DCL     22151--PROC    22169>>ASSIGN
JUSTALT IN PROCEDURE FLM_ACCOUNT_TO_DISK_HANDLING
     20475**LABEL   20400--CALLALT 20418--CALLALT
JUSTALT IN PROCEDURE FLM_FILES_FROM_TAPE_DELETE
     22649**LABEL   22591--CALLALT 22602--CALLALT 22629--CALLALT 22631--CALLALT
JUSTALT IN PROCEDURE FLM_FILE_FROM_DISK_WRAPUP
     20829**LABEL   20795--CALLALT 20820--CALLALT
JUSTALT IN PROCEDURE FLM_FILE_TO_DISK_HANDLING
     20733**LABEL   20566--CALLALT 20578--CALLALT 20620--CALLALT 20653--GOTO
JUSTALT IN PROCEDURE FLM_GET_PRIME_VSN
     22775**LABEL   22764--CALLALT 22765--CALLALT 22766--CALLALT
JUSTDONE
     19989**LABEL   19503--CALLALT
JUSTRET IN PROCEDURE FLM_CLEANUP_FILE
     22472**LABEL   22471--CALLALT
JUSTSTOP
     20081**LABEL   19589--CALLALT 19644--CALLALT 19656--GOTO    19666--CALLALT 19668--CALLALT 19671--CALLALT
     19732--GOTO    19785--CALLALT 19795--GOTO    19809--CALLALT 19821--CALLALT 19829--CALLALT 19832--CALLALT
     19870--CALLALT 19932--GOTO    19950--GOTO    19965--CALLALT
KEEP_OPENING
     19318**LABEL   19322--CALLALT
LAST_TAPE_FSN
     14295**DCL     19989>>IF
LAST_TYPE
     15481**DCL     20259<<ASSIGN
LOW_BLK_TAG$
     15376**DCL     22688>>IF      22700>>DOWHILE
M$CLOSE
      6637**DCL-ENT 19359--CALL    19365--CALL    19369--CALL    19376--CALL    19394--CALL    19416--CALL
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:531  
     19423--CALL    19438--CALL    19445--CALL    19900--CALL    19904--CALL    20037--CALL    20047--CALL
     20095--CALL    20103--CALL    20241--CALL    20267--CALL    20296--CALL    20721--CALL    20733--CALL
     20853--CALL    20871--CALL    20984--CALL    20998--CALL    21026--CALL    21041--CALL    21189--CALL
     21303--CALL    22076--CALL    22118--CALL    22134--CALL    22303--CALL    22316--CALL    22327--CALL
     22333--CALL    22342--CALL    22474--CALL    22506--CALL    22617--CALL    22737--CALL    22766--CALL
M$DELREC
      6639**DCL-ENT 20662--CALL
M$DEL_LIST
     17502**DCL     19364--IF      22234--IF
M$DISK_IN
     14622**DCL     19475--ASSIGN  22691>>ASSIGN
M$DISK_IN$
     17724**DCL     19475<<ASSIGN  21613>>IF      21640<>CALL
M$DISK_OUT
     17501**DCL     19256>>ASSIGN  19257>>ASSIGN  19258>>ASSIGN  19474--ASSIGN  22217--ASSIGN  22256>>ASSIGN
     22257--ASSIGN
M$DISK_OUT$
     17723**DCL     19035--IMP-PTR 19474<<ASSIGN  19891>>ASSIGN  20371>>ASSIGN  20515>>IF      20515>>IF
     20515>>IF      20521>>IF      20718>>ASSIGN  20729>>IF      20845>>IF      20845>>IF      21136>>ASSIGN
     21137>>IF      21137>>IF      21140>>IF      21141>>IF      21156>>ASSIGN  21266>>IF      21271>>IF
     21274>>IF      21597>>ASSIGN  21775>>IF      21775>>IF      21775>>IF      21775>>IF      21832>>IF
     21832>>IF      21832>>IF      21852>>IF      22074>>IF      22131>>ASSIGN  22468>>IF      22472>>IF
     22614>>IF
M$MADMUCK
      6645**DCL-ENT 22431--CALL    22439--CALL    22444--CALL
M$NODATA_LIST
     15359**DCL     19368--IF      19899--IF      20046--IF      20102--IF
M$OPEN
      6637**DCL-ENT 19212--CALL    19230--CALL    19235--CALL    19311--CALL    19322--CALL    19347--CALL
     19352--CALL    19384--CALL    19389--CALL    19404--CALL    19421--CALL    19436--CALL    19443--CALL
     19715--CALL    20186--CALL    20257--CALL    20274--CALL    20346--CALL    20412--CALL    20439--CALL
     20450--CALL    20867--CALL    21134--CALL    21313--CALL    21595--CALL    21598--CALL    21608--CALL
     21624--CALL    21637--CALL    21721--CALL    21752--CALL    22086--CALL    22090--CALL    22104--CALL
     22124--CALL    22237--CALL    22288--CALL    22422--CALL    22512--CALL    22516--CALL    22610--CALL
     22707--CALL    22764--CALL
M$PFIL
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:532  
      6639**DCL-ENT 20904--CALL    22250--CALL
M$READ
      6638**DCL-ENT 19405--CALL    19422--CALL    20195--CALL    20403--CALL    20908--CALL    22036--CALL
     22265--CALL    22765--CALL
M$REM
      6646**DCL-ENT 20070--CALL
M$REW
      6640**DCL-ENT 19614--CALL    22631--CALL
M$STATUS
     15359**DCL     19358--IF      20260--CALL    20260<>CALL    20290--CALL
M$TAPE00$
     15375**DCL     19583>>ASSIGN  19903>>IF      19989>>IF
M$TIME
      6704**DCL-ENT 19342--CALL    19434--CALL    20220--CALL    22170--CALL
M$TSN_USED
     15359**DCL     20159--ASSIGN
M$TSN_USED$ IN PROCEDURE FLM_UPDATE_RUN_INFO
     20133**DCL     20159<<ASSIGN  20160>>IF
M$WRITE
      6638**DCL-ENT 19375--CALL    19393--CALL    19437--CALL    19444--CALL    19589--CALL    20169--CALL
     20224--CALL    20238--CALL    20279--CALL    20400--CALL    20418--CALL    20650--CALL    20940--CALL
     21787--CALL    21840--CALL    22014--CALL    22173--CALL    22374--CALL    22400--CALL
M$XXX
      6649**DCL-ENT 20600--CALL    20613--CALL    20625--CALL
MAD_SN
     17646**DCL     18781--DCLINIT
MAD_SN.SN#
     17646**DCL     22435<<ASSIGN  22437>>IF
MAIN_LOOP
     19498**LABEL   19986--EXIT    19991--EXIT
MODIFIED_FIT_
     17702**DCL     20706<<ASSIGN  20717>>ASSIGN  21946<<ASSIGN  21956>>ASSIGN  22709<<ASSIGN  22717>>ASSIGN
MODIFIED_FIT_.BOUND
     17703**DCL     20716<<ASSIGN  20716>>ASSIGN  21955<<ASSIGN  21955>>ASSIGN  22716<<ASSIGN  22716>>ASSIGN
MODIFIED_FIT_.PTR$
     17705**DCL     20707>>ASSIGN  20715<<ASSIGN  20715>>ASSIGN  21947>>ASSIGN  21954<<ASSIGN  21954>>ASSIGN
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:533  
     22710>>ASSIGN  22715<<ASSIGN  22715>>ASSIGN
NBR_ACCTS_DELETED IN PROCEDURE FLM_CLEANUP
     22205**DCL     22220<<ASSIGN  22369>>IF      22378<>CALL    22423<<ASSIGN  22423>>ASSIGN
NBR_BYTES_TO_MOVE
     15388**DCL     15389--IMP-SIZ 15390--IMP-SIZ
NBR_CONSEC_GRANS
     17726**DCL     21802<<ASSIGN  21806>>IF      21811<<ASSIGN  21811>>ASSIGN  21814>>IF      21817<<ASSIGN
     21823>>IF      21888<<ASSIGN  21899>>IF      21901<<ASSIGN  21901>>ASSIGN  21911<<ASSIGN  21912<<ASSIGN
     21916>>IF      22013>>ASSIGN
NBR_DEL_FILES
     17729**DCL     19473<<ASSIGN  21044>>IF      22175<<ASSIGN  22175>>ASSIGN
NBR_FILES IN PROCEDURE FLM_DISP
     22388**DCL     22386--PROC    22394>>IF      22398>>CALLBLT
NBR_FILES_DELETED IN PROCEDURE FLM_CLEANUP
     22204**DCL     22218<<ASSIGN  22369>>IF      22379<>CALL    22519<<ASSIGN  22519>>ASSIGN  22553<<ASSIGN
     22553>>ASSIGN
NBR_FILES_INACTIVATED IN PROCEDURE FLM_CLEANUP
     22203**DCL     22219<<ASSIGN  22369>>IF      22380<>CALL    22477<<ASSIGN  22477>>ASSIGN
NBR_GRANS_TO_READ
     17689**DCL     19534<<ASSIGN  19538<<ASSIGN  21760<>CALL
NBR_SNLISTS
     13588**DCL     20061>>DOWHILE
NODATA_FILE_NAME.L#
     17003**DCL     17003--IMP-SIZ
NODATA_KEY
     17149**DCL     17141--DCLINIT 17142--DCLINIT
NODATA_KEY.ACCT#
     17149**DCL     20647<<ASSIGN  20659<<ASSIGN
NODATA_KEY.NAME#.C
     17149**DCL     20649<<ASSIGN  20661<<ASSIGN
NODATA_KEY.NAME#.L
     17149**DCL     20648<<ASSIGN  20660<<ASSIGN
NODATA_SN.SN#
     17016**DCL     19227<<ASSIGN  19234<>CALL
NOW_UTS
     14140**DCL     19343>>ASSIGN  19435>>ASSIGN  20221>>ASSIGN  22171>>ASSIGN
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:534  
NO_LEADING_5_ZEROS
     19028**DCL     22399>>CALLBLT
OLD_SN
     17715**DCL     19470<<ASSIGN  19860>>IF      19879>>IF      19961>>IF      19966<<ASSIGN  22589<<ASSIGN
ONE_GRAN
     19141**DCL     19510<<ASSIGN  19510>>ASSIGN  19518<<ASSIGN  19518>>ASSIGN  19773<<ASSIGN  19773>>ASSIGN
OPEN_BLOCK
     18521**DCL     22288<>CALL    22512<>CALL    22516<>CALL
OPEN_BLOCK.ACSVEH_
     18523**DCL     18524--REDEF
OPEN_BLOCK.ALTKEYS_
     18529**DCL     18530--REDEF   18530--REDEF
OPEN_BLOCK.FPARAM_
     18526**DCL     22227<<ASSIGN  22368<<ASSIGN
OPEN_BLOCK.HDR_
     18528**DCL     18529--REDEF
OPEN_BLOCK.TAB_
     18527**DCL     18528--REDEF
OPEN_BLOCK.UHL_
     18521**DCL     18522--REDEF   18522--REDEF
OPEN_BLOCK.V
     18530**DCL     18521--DCLINIT
OPEN_BLOCK.V.DELETE#
     18532**DCL     22511<<ASSIGN  22513<<ASSIGN  22564<<ASSIGN
OPEN_BLOCK.V.FSN#
     18561**DCL     18561--REDEF   18561--REDEF
OPEN_BLOCK.V.RES#
     18545**DCL     22287<<ASSIGN
OPEN_BLOCK.WSN_
     18527**DCL     18527--REDEF
OPEN_BLOCK_FILE
     15226**DCL     22707<>CALL
OPEN_BLOCK_FILE.ACSVEH_
     15228**DCL     15229--REDEF
OPEN_BLOCK_FILE.ALTKEYS_
     15234**DCL     15235--REDEF   15235--REDEF
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:535  
OPEN_BLOCK_FILE.FPARAM_
     15231**DCL     22693<<ASSIGN
OPEN_BLOCK_FILE.HDR_
     15233**DCL     15234--REDEF
OPEN_BLOCK_FILE.TAB_
     15232**DCL     15233--REDEF
OPEN_BLOCK_FILE.UHL_
     15226**DCL     15227--REDEF   15227--REDEF
OPEN_BLOCK_FILE.V
     15235**DCL     15226--DCLINIT
OPEN_BLOCK_FILE.V.FSN#
     15266**DCL     15266--REDEF   15266--REDEF
OPEN_BLOCK_FILE.WSN_
     15232**DCL     15232--REDEF
OPEN_DELETE_LIST
     18105**DCL     19212<>CALL    22237<>CALL
OPEN_DELETE_LIST.ACSVEH_
     18107**DCL     18108--REDEF
OPEN_DELETE_LIST.ALTKEYS_
     18113**DCL     18114--REDEF   18114--REDEF
OPEN_DELETE_LIST.HDR_
     18112**DCL     18113--REDEF
OPEN_DELETE_LIST.TAB_
     18111**DCL     18112--REDEF
OPEN_DELETE_LIST.UHL_
     18105**DCL     18106--REDEF   18106--REDEF
OPEN_DELETE_LIST.V
     18114**DCL     18105--DCLINIT
OPEN_DELETE_LIST.V.FSN#
     18145**DCL     18145--REDEF   18145--REDEF
OPEN_DELETE_LIST.V.FUN#
     18124**DCL     22236<<ASSIGN  22240<<ASSIGN  22243<<ASSIGN
OPEN_DELETE_LIST.WSN_
     18111**DCL     18111--REDEF
OPEN_DP
     18858**DCL     22764<>CALL
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:536  
OPEN_DP.ACSVEH_
     18860**DCL     18861--REDEF
OPEN_DP.ALTKEYS_
     18866**DCL     18867--REDEF   18867--REDEF
OPEN_DP.HDR_
     18865**DCL     18866--REDEF
OPEN_DP.SN_
     18858**DCL     22763<<ASSIGN
OPEN_DP.TAB_
     18864**DCL     18865--REDEF
OPEN_DP.UHL_
     18858**DCL     18859--REDEF   18859--REDEF
OPEN_DP.V
     18867**DCL     18858--DCLINIT
OPEN_DP.V.FSN#
     18898**DCL     18898--REDEF   18898--REDEF
OPEN_DP.WSN_
     18864**DCL     18864--REDEF
OPEN_NODATA_LIST
     16934**DCL     19230<>CALL    19235<>CALL
OPEN_NODATA_LIST.ACSVEH_
     16936**DCL     16937--REDEF
OPEN_NODATA_LIST.ALTKEYS_
     16942**DCL     16943--REDEF   16943--REDEF
OPEN_NODATA_LIST.HDR_
     16941**DCL     16942--REDEF
OPEN_NODATA_LIST.TAB_
     16940**DCL     16941--REDEF
OPEN_NODATA_LIST.UHL_
     16934**DCL     16935--REDEF   16935--REDEF
OPEN_NODATA_LIST.V.FSN#
     16974**DCL     16974--REDEF   16974--REDEF
OPEN_NODATA_LIST.V.FUN#
     16953**DCL     19229<<ASSIGN
OPEN_NODATA_LIST.V.RES#
     16958**DCL     19228<<ASSIGN
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:537  
OPEN_NODATA_LIST.WSN_
     16940**DCL     16940--REDEF
OPEN_PRIME_DUAL
     16381**DCL     19311<>CALL    19322<>CALL    19347<>CALL    19352<>CALL    19384<>CALL    19389<>CALL
     19404<>CALL    19421<>CALL    19436<>CALL    19443<>CALL
OPEN_PRIME_DUAL.ACCT_
     16385**DCL     19310<<ASSIGN  19318<<ASSIGN  19334<<ASSIGN  19380<<ASSIGN  19402<<ASSIGN
OPEN_PRIME_DUAL.ACSVEH_
     16383**DCL     16384--REDEF
OPEN_PRIME_DUAL.ALTKEYS_
     16389**DCL     16390--REDEF   16390--REDEF
OPEN_PRIME_DUAL.HDR_
     16388**DCL     16389--REDEF
OPEN_PRIME_DUAL.NAME_
     16382**DCL     19308<<ASSIGN  19333<<ASSIGN  19381<<ASSIGN  19401<<ASSIGN  19420<<ASSIGN  19440<<ASSIGN
OPEN_PRIME_DUAL.SN_
     16381**DCL     19304<<ASSIGN  19331<<ASSIGN  19378<<ASSIGN  19399<<ASSIGN  19418<<ASSIGN  19441<<ASSIGN
OPEN_PRIME_DUAL.TAB_
     16387**DCL     16388--REDEF
OPEN_PRIME_DUAL.UHL_
     16381**DCL     16382--REDEF   16382--REDEF
OPEN_PRIME_DUAL.V.EXIST#
     16394**DCL     19432<<ASSIGN
OPEN_PRIME_DUAL.V.EXPIRE#
     16410**DCL     19346<<ASSIGN  19383<<ASSIGN  19433<<ASSIGN
OPEN_PRIME_DUAL.V.FSN#
     16421**DCL     16421--REDEF   16421--REDEF
OPEN_PRIME_DUAL.V.FUN#
     16400**DCL     19309<<ASSIGN  19345<<ASSIGN  19382<<ASSIGN  19403<<ASSIGN  19431<<ASSIGN
OPEN_PRIME_DUAL.V.INITZ.SCRUB#
     16391**DCL     19317<<ASSIGN  19336<<ASSIGN  19398<<ASSIGN
OPEN_PRIME_DUAL.V.OPER
     16392**DCL     19335<<ASSIGN  19397<<ASSIGN
OPEN_PRIME_DUAL.V.OPER.NXTA#
     16393**DCL     19306<<ASSIGN
OPEN_PRIME_DUAL.V.OPER.NXTF#
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:538  
     16393**DCL     19307<<ASSIGN
OPEN_PRIME_DUAL.V.RES#
     16405**DCL     19305<<ASSIGN  19332<<ASSIGN  19379<<ASSIGN  19400<<ASSIGN  19419<<ASSIGN  19442<<ASSIGN
OPEN_PRIME_DUAL.WSN_
     16387**DCL     16387--REDEF
OPEN_REBUILD.ACSVEH_
     16618**DCL     16619--REDEF
OPEN_REBUILD.ALTKEYS_
     16624**DCL     16625--REDEF   16625--REDEF
OPEN_REBUILD.HDR_
     16623**DCL     16624--REDEF
OPEN_REBUILD.TAB_
     16622**DCL     16623--REDEF
OPEN_REBUILD.UHL_
     16616**DCL     16617--REDEF   16617--REDEF
OPEN_REBUILD.V.FSN#
     16656**DCL     16656--REDEF   16656--REDEF
OPEN_REBUILD.WSN_
     16622**DCL     16622--REDEF
OPEN_REBUILD_TAPE_FILE
     19554**LABEL   19558--GOTO
OPEN_STATUS
     15818**DCL     20186<>CALL    20257<>CALL    20274<>CALL
OPEN_STATUS.ACSVEH_
     15820**DCL     15821--REDEF
OPEN_STATUS.ALTKEYS_
     15826**DCL     15827--REDEF   15827--REDEF
OPEN_STATUS.FPARAM_
     15823**DCL     20255<<ASSIGN  20273<<ASSIGN  20308<<ASSIGN
OPEN_STATUS.HDR_
     15825**DCL     15826--REDEF
OPEN_STATUS.TAB_
     15824**DCL     15825--REDEF
OPEN_STATUS.UHL_
     15818**DCL     15819--REDEF   15819--REDEF
OPEN_STATUS.V.ACS#
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:539  
     15838**DCL     20253<<ASSIGN  20272<<ASSIGN  20307<<ASSIGN
OPEN_STATUS.V.EXIST#
     15831**DCL     20177<<ASSIGN  20251<<ASSIGN  20270<<ASSIGN  20304<<ASSIGN  20305<<ASSIGN  20316<<ASSIGN
OPEN_STATUS.V.EXPIRE#
     15847**DCL     20179<<ASSIGN
OPEN_STATUS.V.FSN#
     15858**DCL     15858--REDEF   15858--REDEF
OPEN_STATUS.V.FUN#
     15837**DCL     20178<<ASSIGN  20252<<ASSIGN  20271<<ASSIGN  20306<<ASSIGN
OPEN_STATUS.V.RES#
     15842**DCL     20182<<ASSIGN
OPEN_STATUS.WSN_
     15824**DCL     15824--REDEF
OPEN_TAPE_FILE
     19595**LABEL   19617--GOTO    19626--GOTO
OPEN_TSN_USED.ACSVEH_
     15556**DCL     15557--REDEF
OPEN_TSN_USED.ALTKEYS_
     15562**DCL     15563--REDEF   15563--REDEF
OPEN_TSN_USED.HDR_
     15561**DCL     15562--REDEF
OPEN_TSN_USED.TAB_
     15560**DCL     15561--REDEF
OPEN_TSN_USED.UHL_
     15554**DCL     15555--REDEF   15555--REDEF
OPEN_TSN_USED.V.FSN#
     15594**DCL     15594--REDEF   15594--REDEF
OPEN_TSN_USED.WSN_
     15560**DCL     15560--REDEF
PFIL_DELETE_LIST
     18318**DCL     20904<>CALL    22250<>CALL
PFIL_DELETE_LIST.V
     18318**DCL     18318--DCLINIT
PRE_RET_CLOSE.SN_
     14539**DCL     14539--REDEF
PRE_RET_CLOSE.UTL_
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:540  
     14540**DCL     14540--REDEF
PRE_RET_CLOSE.V.EXPIRE#
     14554**DCL     14554--REDEF
PRE_RET_CLOSE.V.TYPE#
     14552**DCL     14552--REDEF
PRE_RET_CLOSE.V.XTNSIZE#
     14549**DCL     14549--REDEF   14551--REDEF
PRE_RET_OPEN.ACSVEH_
     14474**DCL     14475--REDEF
PRE_RET_OPEN.ALTKEYS_
     14480**DCL     14481--REDEF   14481--REDEF
PRE_RET_OPEN.HDR_
     14479**DCL     14480--REDEF
PRE_RET_OPEN.TAB_
     14478**DCL     14479--REDEF
PRE_RET_OPEN.UHL_
     14472**DCL     14473--REDEF   14473--REDEF
PRE_RET_OPEN.V.FSN#
     14512**DCL     14512--REDEF   14512--REDEF
PRE_RET_OPEN.WSN_
     14478**DCL     14478--REDEF
PRE_RET_READ.STATION_
     14329**DCL     14330--REDEF
PRE_RET_READ.V.DVBYTE.REREAD#
     14341**DCL     14341--REDEF
PRE_RET_READ.V.INDX#
     14339**DCL     14339--REDEF
PRE_RET_WRITE.STATION_
     14367**DCL     14367--REDEF
PRE_RET_WRITE.V.DVBYTE.VFC#
     14374**DCL     14374--REDEF
PRIME_DUAL_BUF.DUAL
     16261**DCL     19341<<ASSIGN  19408>>ASSIGN  19409>>ASSIGN  19411>>IF
PRIME_DUAL_BUF.PRIME
     16261**DCL     19340<>CALL    19426>>IF
PRIME_DUAL_BUF.UTS
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:541  
     16261**DCL     19343<<ASSIGN  19435<<ASSIGN
PRIME_FILE
     16287**DCL     19333--ASSIGN  19401--ASSIGN  19440--ASSIGN
PRIME_FILE.L#
     16287**DCL     16287--IMP-SIZ 19333>>ASSIGN  19401>>ASSIGN  19440>>ASSIGN  19765>>IF
PRIME_FILE.NAME#
     16287**DCL     19765>>IF
PRIME_VSN IN PROCEDURE FLM_GET_PRIME_VSN
     22759**DCL     22754--PROC    22767<<CALLBLT 22771<<CALLBLT
PROCESS_DISK_FILE
     19505**LABEL   19718--GOTO
PR_DEV_LT
     17732**DCL     19166<<ASSIGN  19171<<ASSIGN  19178<<ASSIGN  19183<<ASSIGN  19188<<ASSIGN  19193<<ASSIGN
     19668<>CALL    19671<>CALL    19722<>CALL    19750<>CALL    19829<>CALL    19832<>CALL    19870<>CALL
     20290<>CALL    20566<>CALL    20578<>CALL    21640<>CALL    22425<>CALL    22521<>CALL    22555<>CALL
READ_AD_OR_FD.ACSVEH_
     15118**DCL     15119--REDEF
READ_AD_OR_FD.ALTKEYS_
     15124**DCL     15125--REDEF   15125--REDEF
READ_AD_OR_FD.HDR_
     15123**DCL     15124--REDEF
READ_AD_OR_FD.TAB_
     15122**DCL     15123--REDEF
READ_AD_OR_FD.UHL_
     15116**DCL     15117--REDEF   15117--REDEF
READ_AD_OR_FD.V.FSN#
     15156**DCL     15156--REDEF   15156--REDEF
READ_AD_OR_FD.WSN_
     15122**DCL     15122--REDEF
READ_DELETE_LIST
     18342**DCL     20908<>CALL    22265<>CALL
READ_DELETE_LIST.STATION_
     18345**DCL     18346--REDEF
READ_DELETE_LIST.V
     18346**DCL     18342--DCLINIT
READ_DELETE_LIST.V.DVBYTE.REREAD#
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:542  
     18357**DCL     18357--REDEF
READ_DELETE_LIST.V.INDX#
     18355**DCL     18355--REDEF
READ_IDS_FILE IN PROCEDURE FLM_COPY_FILE_TO_DISK
     21685**DCL     22036<>CALL
READ_IDS_FILE.BUF_ IN PROCEDURE FLM_COPY_FILE_TO_DISK
     21687**DCL     21857<<ASSIGN
READ_IDS_FILE.KEY_ IN PROCEDURE FLM_COPY_FILE_TO_DISK
     21685**DCL     22035<<ASSIGN
READ_IDS_FILE.STATION_ IN PROCEDURE FLM_COPY_FILE_TO_DISK
     21688**DCL     21689--REDEF
READ_IDS_FILE.V IN PROCEDURE FLM_COPY_FILE_TO_DISK
     21689**DCL     21685--DCLINIT
READ_IDS_FILE.V.DVBYTE.REREAD# IN PROCEDURE FLM_COPY_FILE_TO_DISK
     21700**DCL     21700--REDEF
READ_IDS_FILE.V.INDX# IN PROCEDURE FLM_COPY_FILE_TO_DISK
     21698**DCL     21698--REDEF
READ_LOOP IN PROCEDURE FLM_COPY_FILE_TO_DISK
     21861**LABEL   21881--EXIT    21885--GOTO
READ_NEXT_FILE IN PROCEDURE FLM_DELETE_DUAL_FILES
     21595**LABEL   21614--GOTO
READ_NODATA_LIST.STATION_
     17080**DCL     17081--REDEF
READ_NODATA_LIST.V.DVBYTE.REREAD#
     17092**DCL     17092--REDEF
READ_NODATA_LIST.V.INDX#
     17090**DCL     17090--REDEF
READ_PRIME_DUAL
     16442**DCL     19405<>CALL    19422<>CALL
READ_PRIME_DUAL.STATION_
     16445**DCL     16446--REDEF
READ_PRIME_DUAL.V.DVBYTE.REREAD#
     16457**DCL     16457--REDEF
READ_PRIME_DUAL.V.INDX#
     16455**DCL     16455--REDEF
READ_REBUILD
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:543  
     16748**DCL     20403<>CALL
READ_REBUILD.STATION_
     16751**DCL     16752--REDEF
READ_REBUILD.V.DVBYTE.REREAD#
     16763**DCL     16763--REDEF
READ_REBUILD.V.INDX#
     16761**DCL     16761--REDEF
READ_STATUS
     15963**DCL     20195<>CALL
READ_STATUS.STATION_
     15966**DCL     15967--REDEF
READ_STATUS.V.DVBYTE.REREAD#
     15978**DCL     15978--REDEF
READ_STATUS.V.INDX#
     15976**DCL     15976--REDEF
READ_STATUS.V.KEYS#
     15968**DCL     20194<<ASSIGN
READ_TSN_USED.STATION_
     15676**DCL     15677--REDEF
READ_TSN_USED.V.DVBYTE.REREAD#
     15688**DCL     15688--REDEF
READ_TSN_USED.V.INDX#
     15686**DCL     15686--REDEF
READ_VID
     18970**DCL     22765<>CALL
READ_VID.STATION_
     18973**DCL     18974--REDEF
READ_VID.V
     18974**DCL     18970--DCLINIT
READ_VID.V.DVBYTE.REREAD#
     18985**DCL     18985--REDEF
READ_VID.V.INDX#
     18983**DCL     18983--REDEF
REBUILD_BUF
     16866**DCL     19587--ASSIGN
REBUILD_BUF.DEN
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:544  
     16867**DCL     19583<<ASSIGN
REBUILD_BUF.DIR
     16867**DCL     19584<<ASSIGN
REBUILD_BUF.FSN
     16867**DCL     19581<<ASSIGN  22645>>ASSIGN
REBUILD_BUF.IOERRORC
     16867**DCL     19586<<ASSIGN
REBUILD_BUF.PAD
     16867**DCL     19585<<ASSIGN
REBUILD_BUF.START.ACCT
     16866**DCL     19569<<ASSIGN
REBUILD_BUF.START.ACCT.ACCT#
     16866**DCL     19573<<ASSIGN  19577<<ASSIGN  22642>>ASSIGN
REBUILD_BUF.START.FILE
     16866**DCL     19578<<ASSIGN
REBUILD_BUF.START.FILE.L#
     16866**DCL     19570<<ASSIGN  19574<<ASSIGN  22643>>ASSIGN
REBUILD_BUF.START.FILE.NAME#
     16866**DCL     19571<<ASSIGN  19575<<ASSIGN  22644>>ASSIGN
REBUILD_BUF.TSN
     16866**DCL     19582<<ASSIGN
REBUILD_BUF.VOLUME
     16867**DCL     19580<<ASSIGN
REBUILD_DIR_KEY
     16837**DCL     20396--ASSIGN
REBUILD_DIR_KEY.L#
     16837**DCL     16837--IMP-SIZ 20395>>ASSIGN  20396>>ASSIGN
REBUILD_DIR_KEY.NAME#
     16837**DCL     20395<<ASSIGN
REBUILD_KEY
     16864**DCL     19588--ASSIGN
REBUILD_KEY.L#
     16864**DCL     16864--IMP-SIZ 19588>>ASSIGN
REBUILD_NAME.L#
     16685**DCL     16685--IMP-SIZ
REPERRALT IN PROCEDURE FLM_CLEAN
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:545  
     22554**LABEL   22512--CALLALT
REPERRRET IN PROCEDURE FLM_CLEANUP_ACCOUNT
     22449**LABEL   22422--CALLALT 22434--GOTO
REPLACE_AD_OR_FD
     17817**DCL     20439<>CALL
REPLACE_AD_OR_FD.ACCT_
     17821**DCL     19272<<ASSIGN
REPLACE_AD_OR_FD.ACSVEH_
     17819**DCL     17820--REDEF
REPLACE_AD_OR_FD.ALTKEYS_
     17825**DCL     17826--REDEF   17826--REDEF
REPLACE_AD_OR_FD.HDR_
     17824**DCL     17825--REDEF
REPLACE_AD_OR_FD.IFPARAM_
     17822**DCL     20437<<ASSIGN  20438<<ASSIGN
REPLACE_AD_OR_FD.SN_
     17817**DCL     19265<<ASSIGN
REPLACE_AD_OR_FD.TAB_
     17823**DCL     17824--REDEF
REPLACE_AD_OR_FD.UHL_
     17817**DCL     17818--REDEF   17818--REDEF
REPLACE_AD_OR_FD.V
     17826**DCL     17817--DCLINIT
REPLACE_AD_OR_FD.V.FSN#
     17857**DCL     17857--REDEF   17857--REDEF
REPLACE_AD_OR_FD.WSN_
     17823**DCL     17823--REDEF
RESTORE_FROM_TAPE
     17494**DCL     19174>>IF
RET_CMDS_NAME.L#
     14583**DCL     14583--IMP-SIZ
REWIND_TAPE
     19019**DCL     19614<>CALL    22631<>CALL
REWIND_TAPE.V
     19019**DCL     19019--DCLINIT
REWIND_TAPE.V.PSN#
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:546  
     19021**DCL     19613<<ASSIGN  22630<<ASSIGN
REWRITE_DELETE_LIST
     18385**DCL     20940<>CALL
REWRITE_DELETE_LIST.STATION_
     18387**DCL     18387--REDEF
REWRITE_DELETE_LIST.V
     18388**DCL     18385--DCLINIT
REWRITE_DELETE_LIST.V.DVBYTE.VFC#
     18394**DCL     18394--REDEF
RUN_NBR
     15482**DCL     20168>>ASSIGN
SAVE_AD_FD_FIT_
     17696**DCL     19196<>CALL    21720>>ASSIGN
SAVE_AD_FD_FIT_.PTR$
     17698**DCL     19510>>ASSIGN  19518>>ASSIGN  20683>>ASSIGN  21723>>ASSIGN
SAVE_DCB$
     17692**DCL     19219<<ASSIGN  19222>>ASSIGN  19609>>IF      19609>>IF      19769<<ASSIGN  19772>>ASSIGN
     19772>>ASSIGN  19778>>ASSIGN  19780>>ASSIGN  19784>>ASSIGN  19829<>CALL    19832<>CALL    19870<>CALL
     20493>>IF      20566<>CALL    20578<>CALL    20647>>ASSIGN  20648>>ASSIGN  20649>>ASSIGN  20659>>ASSIGN
     20660>>ASSIGN  20661>>ASSIGN
SAVE_DISK_OPTION_DIR
     17708**DCL     19547<<ASSIGN  19584>>ASSIGN  19591>>ASSIGN
SAVE_ERR
     17683**DCL     19481<<ASSIGN  19612<<ASSIGN  19631<<ASSIGN  19912<<ASSIGN  20006<>CALL    20036<>CALL
SAVE_ERR.CODE
     17687**DCL     19602>>IF
SAVE_FIT_
     17693**DCL     19218<>CALL    19220<>CALL    19770<<ASSIGN  21946>>ASSIGN
SAVE_FIT_.PTR$
     17695**DCL     19219>>ASSIGN  19773>>ASSIGN  19829<>CALL    19832<>CALL    19870<>CALL    20566<>CALL
     20578<>CALL
SAVE_FSN
     17707**DCL     19488<<ASSIGN  19634<<ASSIGN  19648<>CALL    19671<>CALL    19722<>CALL    19750<>CALL
     19787<>CALL    19829<>CALL    19832<>CALL    19870<>CALL    19965<>CALL    20260<>CALL    20278>>ASSIGN
     20290<>CALL    20523>>IF      20527>>IF      20566<>CALL    20578<>CALL    20776>>ASSIGN  20777>>ASSIGN
     20901<<ASSIGN  20922<>CALL    20931<>CALL    20939>>ASSIGN  21994>>ASSIGN  21995>>ASSIGN  22112>>ASSIGN
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:547  
     22113>>ASSIGN  22168>>ASSIGN
SAVE_SN
     17706**DCL     19487<<ASSIGN  19633<<ASSIGN  19648<>CALL    19671<>CALL    19722<>CALL    19750<>CALL
     19782<<ASSIGN  19787<>CALL    19829<>CALL    19832<>CALL    19870<>CALL    19961>>IF      19965<>CALL
     19966>>ASSIGN  20260<>CALL    20290<>CALL    20338<<ASSIGN  20517>>IF      20566<>CALL    20578<>CALL
     20786>>ASSIGN  20789>>ASSIGN  20900<<ASSIGN  20922<>CALL    20931<>CALL    20938>>ASSIGN  21640<>CALL
     21996>>ASSIGN  22115>>ASSIGN  22167>>ASSIGN
SAVE_SOURCE_DCB$ IN PROCEDURE FLM_CLEANUP
     22213**DCL     22223<<ASSIGN  22515>>ASSIGN  22515>>ASSIGN  22521<>CALL    22555<>CALL
SAVE_SOURCE_DCB_ IN PROCEDURE FLM_CLEANUP
     22210**DCL     22222<>CALL
SAVE_SOURCE_DCB_.PTR$ IN PROCEDURE FLM_CLEANUP
     22212**DCL     22223>>ASSIGN
SET_NBR
     17718**DCL     19456<<ASSIGN  20052<<ASSIGN  20052>>ASSIGN  20053<>CALL
SKIP_ACCT
     17563**DCL     20378<<ASSIGN
SKIP_ACCT.ACCT#
     17563**DCL     19485<<ASSIGN  20493>>IF
SNLIST_NBR
     15483**DCL     19457<>CALL    20053<>CALL    20061>>DOWHILE 20062<<ASSIGN  20062>>ASSIGN  20069>>ASSIGN
SNVECLIST$
     14115**DCL     14115--IMP-PTR
SOURCE
     17730**DCL     19164<<ASSIGN  19169<<ASSIGN  19175<<ASSIGN  19176<<ASSIGN  19181<<ASSIGN  19186<<ASSIGN
     19191<<ASSIGN  19207>>DOCASE  19501>>DOCASE  19667>>IF      19680>>IF      19698>>IF      19737>>DOCASE
     19781>>IF      19810>>IF      19844>>IF      19888>>IF      19943>>DOCASE  19970>>IF      19997>>DOCASE
     20092>>DOCASE  20619>>IF      20781>>IF      20799>>IF      21083>>IF      21756>>IF
SOURCE_CODE$
     17670**DCL     20602<<ASSIGN  20603<>CALL    20605>>ASSIGN
SOURCE_DCB$
     17671**DCL     19503<>CALL    19525>>IF      19526>>IF      19534>>ASSIGN  19554<>CALL    19573>>ASSIGN
     19577>>ASSIGN  19578>>ASSIGN  19580>>ASSIGN  19595<>CALL    19648<>CALL    19668<>CALL    19671<>CALL
     19722<>CALL    19739<>CALL    19750<>CALL    19762>>IF      19765>>IF      19765>>IF      19769>>ASSIGN
     19772>>ASSIGN  19772>>ASSIGN  19787<>CALL    19838>>IF      19838>>IF      19838>>IF      19838>>IF
     19965<>CALL    20335>>ASSIGN  20337>>ASSIGN  20395>>ASSIGN  20780>>ASSIGN  20799>>IF      20817>>IF
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:548  
     20817>>IF      21084>>ASSIGN  21728>>ASSIGN  21957>>ASSIGN  21984>>IF      22160>>ASSIGN  22161>>ASSIGN
     22162>>ASSIGN  22163>>IF      22165>>ASSIGN  22166>>ASSIGN  22257<<ASSIGN  22279>>IF      22290>>IF
     22290>>IF      22290>>IF      22290>>IF      22295>>IF      22295>>IF      22312>>IF      22312>>IF
     22314>>IF      22497>>IF      22499>>IF      22499>>IF      22515>>ASSIGN  22515>>ASSIGN  22524>>IF
     22524>>IF      22524>>IF      22524>>IF      22601<>CALL    22604>>ASSIGN  22605>>ASSIGN  22606>>ASSIGN
SOURCE_FILE_TYPE
     17690**DCL     19507<<ASSIGN  19513<<ASSIGN  19515<<ASSIGN  19521<<ASSIGN  19523<<ASSIGN  19527<<ASSIGN
     19528<<ASSIGN  19530<<ASSIGN  19542<<ASSIGN  19632<<ASSIGN  19637>>DOCASE  19664>>IF      19744>>IF
     19744>>IF      19826>>IF      20366>>IF      20385>>DOCASE  20430>>IF      20436>>IF      20436>>IF
     20442>>IF      20442>>IF      20445>>IF      20461>>IF      20461>>IF      20498>>IF      20503>>IF
     20588>>DOCASE  20681>>DOCASE  20751>>IF      20751>>IF      20793>>IF      20845>>IF      20845>>IF
     20855>>IF      20856<<ASSIGN  20864>>IF      21080>>DOCASE  21200>>IF      21210>>IF      21242>>IF
     21281>>DOCASE  21591<<ASSIGN  21712>>DOCASE  21758>>IF      21852>>IF      21924>>DOCASE
SOURCE_TAPE_SN
     17550**DCL     19276--ASSIGN  22116--ASSIGN
SOURCE_TAPE_SN.SN#
     17550**DCL     21996<<ASSIGN  22115<<ASSIGN
SOURCE_UTS
     17719**DCL     20352>>IF      20372>>IF      20447>>ASSIGN  20506>>IF      20628>>ASSIGN  21084<<ASSIGN
     21085<<ASSIGN  21094<<ASSIGN  21100<<ASSIGN  21109<<ASSIGN  21110<<ASSIGN  21113<<ASSIGN  21205<<ASSIGN
     21207<<ASSIGN  21212>>IF      21236<<ASSIGN
SPEC.START
     14179**DCL     14180--REDEF
SPEC.STOP
     14180**DCL     14181--REDEF   19985>>IF      19989>>IF
SPEC.STOP.ACCT.ACCT#
     14180**DCL     19980<<ASSIGN
SPEC.STOP.FILE.L#
     14181**DCL     19981<<ASSIGN
SPEC.STOP.FILE.NAME#
     14180**DCL     19982<<ASSIGN
SPECCHARS
     14179**DCL     14179--REDEF
STATUS_KEY
     15484**DCL     20190--ASSIGN  20204--ASSIGN  20228>>ASSIGN  20231--ASSIGN  20276<<ASSIGN
STATUS_KEY.L
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:549  
     15484**DCL     20190<<ASSIGN  20204<<ASSIGN  20231<<ASSIGN
STATUS_KEY.RUN_NBR
     15485**DCL     20191<<ASSIGN  20205<<ASSIGN  20232<<ASSIGN
STATUS_KEY.TSN_SET_NBR
     15485**DCL     20192<<ASSIGN  20206<<ASSIGN  20233<<ASSIGN
STATUS_KEY.TSN_VOL
     15485**DCL     20193<<ASSIGN  20215<<ASSIGN  20216<<ASSIGN  20234<<ASSIGN
STATUS_KEY_SAVE IN PROCEDURE FLM_UPDATE_RUN_INFO
     20141**DCL     20228<<ASSIGN  20276>>ASSIGN
TAPE_BAD
     15483**DCL     20030>>IF      20055>>IF      20078>>IF
TAPE_BLOCK_.W2
     15404**DCL     15405--REDEF
TAPE_CLOSE
     14032**DCL     19904<>CALL
TAPE_CLOSE.SN_
     14032**DCL     14032--REDEF
TAPE_CLOSE.UTL_
     14033**DCL     14033--REDEF
TAPE_CLOSE.V.EXPIRE#
     14047**DCL     14047--REDEF
TAPE_CLOSE.V.TYPE#
     14045**DCL     14045--REDEF
TAPE_CLOSE.V.XTNSIZE#
     14042**DCL     14042--REDEF   14044--REDEF
TAPE_CODE04$
     17668**DCL     21117<<ASSIGN  21202>>IF      21204>>IF      21206>>IF      21217>>ASSIGN  21218>>ASSIGN
     21234>>IF      21235>>ASSIGN  21244>>ASSIGN  21245>>ASSIGN
TAPE_DCBLIST.DCB$
     13588**DCL     20069>>ASSIGN  20774>>IF      20823>>IF
TAPE_DCBLIST$
     13588**DCL     13588--IMP-PTR 20069>>ASSIGN  20774>>IF      20823>>IF
TAPE_FSN
     15481**DCL     19581>>ASSIGN  19634>>ASSIGN  19668<>CALL    20218>>ASSIGN  20219>>ASSIGN
TAPE_OPEN.ACSVEH_
     13897**DCL     13898--REDEF
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:550  
TAPE_OPEN.ALTKEYS_
     13903**DCL     13904--REDEF   13904--REDEF
TAPE_OPEN.HDR_
     13902**DCL     13903--REDEF
TAPE_OPEN.SN_
     13895**DCL     19453>>IF      20064<<ASSIGN  20988<<ASSIGN
TAPE_OPEN.TAB_
     13901**DCL     13902--REDEF
TAPE_OPEN.UHL_
     13895**DCL     13896--REDEF   13896--REDEF
TAPE_OPEN.V.CVOL#
     13909**DCL     22592<<ASSIGN  22638<<ASSIGN
TAPE_OPEN.V.FSN#
     13935**DCL     13935--REDEF   13935--REDEF   22645<<ASSIGN
TAPE_OPEN.V.IOERROK#
     13926**DCL     19556>>IF      19556>>IF      19624>>IF      19624>>IF      19949>>IF
TAPE_OPEN.WSN_
     13901**DCL     13901--REDEF
TAPE_OPTION.CHECK
     14299**DCL     19477>>IF      19640>>IF      19823>>IF      19959>>IF      20030>>IF      20980>>IF
TAPE_OPTION.DUPLICATE_TAPESET
     14300**DCL     20517>>IF
TAPE_OPTION.IOERRORC
     14300**DCL     19586>>ASSIGN
TAPE_OPTION.OPEN_FUNCTION
     14300**DCL     19602>>IF
TAPE_OPTION.PROTTYPE
     14299**DCL     19250<<ASSIGN  19278>>DOCASE  19302>>IF      19508>>IF      19516>>IF      19690>>IF
     19707>>IF      19707>>IF      19707>>IF      19860>>IF      20342>>IF      20430>>IF      20496>>IF
     20537>>IF      20676>>IF      21198>>IF      21286>>IF      21852>>IF
TAPE_READ.STATION_
     13959**DCL     13960--REDEF
TAPE_READ.V.DVBYTE.REREAD#
     13971**DCL     13971--REDEF
TAPE_READ.V.INDX#
     13969**DCL     13969--REDEF
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:551  
TAPE_SN
     15481**DCL     19582>>ASSIGN  19613>>ASSIGN  19633>>ASSIGN  19668<>CALL    19860>>IF      19879>>IF
     20217>>ASSIGN  22589>>ASSIGN  22630>>ASSIGN
TAPE_WRITE.STATION_
     13997**DCL     13997--REDEF
TAPE_WRITE.V.DVBYTE.VFC#
     14004**DCL     14004--REDEF
TEMP_S
     17722**DCL     22769<<ASSIGN  22770<<ASSIGN  22771>>CALLBLT
TEMP_U
     17721**DCL     19891<<ASSIGN  19892<>CALL
TERM_ERR IN PROCEDURE FLM_CLEANUP
     22192**DCL     22186--PROC
TERM_ERR.CODE IN PROCEDURE FLM_CLEANUP
     22196**DCL     22279>>IF
TERM_ERR IN PROCEDURE FLM_FILE_FROM_DISK_CLEANUP
     20889**DCL     20887--PROC    20899>>ASSIGN
TERM_ERR_SAVE IN PROCEDURE FLM_FILE_FROM_DISK_CLEANUP
     20891**DCL     20899<<ASSIGN  21009<>CALL    21020<>CALL    21022<>CALL
TO_DISK_ACCT
     17576**DCL     17822--DCLINIT 17942--DCLINIT 19269<<ASSIGN  19270--ASSIGN  19272--ASSIGN  19273--ASSIGN
     20378>>ASSIGN  21421--DCLINIT 21540--DCLINIT
TO_DISK_ACCT.ACCT#
     17576**DCL     19645>>ASSIGN  19784<<ASSIGN  20337<<ASSIGN  21137>>IF      21600>>IF      22605<<ASSIGN
TO_DISK_NAME
     17631**DCL     19275--ASSIGN  19778<<ASSIGN  21137>>IF      21536--DCLINIT 21597<<ASSIGN  21613>>IF
     22604<<ASSIGN
TO_DISK_NAME.NAME#
     17631**DCL     21600>>IF
TO_DISK_SN
     17603**DCL     17817--DCLINIT 17937--DCLINIT 18760--DCLINIT 19263--ASSIGN  19304--ASSIGN  19378--ASSIGN
     19418--ASSIGN  20564--CALL    21416--DCLINIT
TO_DISK_SN.SN#
     17603**DCL     19262<<ASSIGN  19341>>ASSIGN  19388<>CALL    19408<<ASSIGN  19411>>IF      19646>>ASSIGN
     19780<<ASSIGN  19782>>ASSIGN  20335<<ASSIGN  20338>>ASSIGN  22606<<ASSIGN
TSN_SET_NBR
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:552  
     15482**DCL     20206>>ASSIGN
TSN_USED_BUF
     15485**DCL     20167<<ASSIGN  20229>>ASSIGN  20277<<ASSIGN
TSN_USED_BUF.BACKUP_FSN
     15486**DCL     20219<<ASSIGN  20278<<ASSIGN
TSN_USED_BUF.FIRST_ACCT
     15486**DCL     20222<<ASSIGN
TSN_USED_BUF.FSN
     15486**DCL     20218<<ASSIGN  20236<<ASSIGN
TSN_USED_BUF.LAST_ACCT
     15486**DCL     20223<<ASSIGN
TSN_USED_BUF.TSN
     15486**DCL     20217<<ASSIGN  20235<<ASSIGN
TSN_USED_BUF.UTS
     15486**DCL     20168<<ASSIGN  20197>>ASSIGN  20221<<ASSIGN  20237<<ASSIGN
TSN_USED_BUF_SAVE IN PROCEDURE FLM_UPDATE_RUN_INFO
     20147**DCL     20229<<ASSIGN  20277>>ASSIGN
TSN_USED_KEY
     15483**DCL     20162--ASSIGN
TSN_USED_KEY.L
     15483**DCL     20162<<ASSIGN
TSN_USED_KEY.RUN_NBR
     15483**DCL     20163<<ASSIGN
TSN_USED_KEY.TSN_SET_NBR
     15484**DCL     20164<<ASSIGN
TSN_USED_KEY.TSN_SNLIST_NBR
     15484**DCL     20166<<ASSIGN
TSN_USED_KEY.TSN_VOL
     15484**DCL     20165<<ASSIGN
TSN_USED_NAME.L#
     15623**DCL     15623--IMP-SIZ
TSN_VOL
     15482**DCL     20214>>IF      20215>>ASSIGN
TVECTOR.W2
     14128**DCL     14129--REDEF
UPDATE_FPARAM_ IN PROCEDURE FLM_UPDATE_RUN_INFO
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:553  
     20136**DCL     20254<>CALL    20255>>ASSIGN  20260<>CALL
UPDATE_FPARAM_.PTR$ IN PROCEDURE FLM_UPDATE_RUN_INFO
     20139**DCL     20290<>CALL
USE_TSN_USED
     17717**DCL     19455<<ASSIGN  19463<<ASSIGN  20050>>IF
VIDBUF
     17652**DCL     18972--DCLINIT 18973--DCLINIT
VIDBUF.DTT
     17654**DCL     17654--REDEF
VIDBUF.SNLIST.VSN.N
     17655**DCL     22767>>CALLBLT
VIDBUF.SNLIST.VSN.S
     17655**DCL     22768>>IF      22770>>ASSIGN
VID_ACCT
     17589**DCL     18863--DCLINIT
VID_ACCT.ACCT#
     17589**DCL     19195<<ASSIGN
VLP_SN
     17996**DCL     20778--ASSIGN
VLP_SN.SN#
     17996**DCL     20786<<ASSIGN  20789<<ASSIGN
VSN
     17716**DCL     19425<>CALL    19426>>IF
WHAT IN PROCEDURE FLM_DISP
     22389**DCL     22386--PROC    22397>>ASSIGN
WRITE_DELETE_LIST
     18290**DCL     22173<>CALL
WRITE_DELETE_LIST.STATION_
     18292**DCL     18292--REDEF
WRITE_DELETE_LIST.V
     18293**DCL     18290--DCLINIT
WRITE_DELETE_LIST.V.DVBYTE.VFC#
     18299**DCL     18299--REDEF
WRITE_FILE_DISP_REC
     18585**DCL     22374<>CALL    22400<>CALL
WRITE_FILE_DISP_REC.STATION_
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:554  
     18587**DCL     18587--REDEF
WRITE_FILE_DISP_REC.V
     18588**DCL     18585--DCLINIT
WRITE_FILE_DISP_REC.V.DVBYTE.VFC#
     18594**DCL     18594--REDEF
WRITE_LOOP IN PROCEDURE FLM_COPY_FILE_TO_DISK
     21890**LABEL   21896--EXIT
WRITE_NODATA_LIST
     17116**DCL     20650<>CALL
WRITE_NODATA_LIST.STATION_
     17118**DCL     17118--REDEF
WRITE_NODATA_LIST.V.DVBYTE.VFC#
     17125**DCL     17125--REDEF
WRITE_PRIME_DUAL
     16481**DCL     19375<>CALL    19393<>CALL    19437<>CALL    19444<>CALL
WRITE_PRIME_DUAL.STATION_
     16483**DCL     16483--REDEF
WRITE_PRIME_DUAL.V.DVBYTE.VFC#
     16490**DCL     16490--REDEF
WRITE_REBUILD
     16717**DCL     19589<>CALL    20400<>CALL    20418<>CALL
WRITE_REBUILD.BUF_
     16717**DCL     19587<<ASSIGN  20399<<ASSIGN  20417<<ASSIGN
WRITE_REBUILD.KEY_
     16717**DCL     19588<<ASSIGN  20396<<ASSIGN
WRITE_REBUILD.STATION_
     16719**DCL     16719--REDEF
WRITE_REBUILD.V.DVBYTE.VFC#
     16726**DCL     16726--REDEF
WRITE_STATUS
     15932**DCL     20224<>CALL    20238<>CALL    20279<>CALL
WRITE_STATUS.STATION_
     15934**DCL     15934--REDEF
WRITE_STATUS.V.DVBYTE.VFC#
     15941**DCL     15941--REDEF
WRITE_TSN_USED
PL6.E3A0      #001=FLM$MOVE File=FLM$MOVE.:E05TSI                                TUE 07/29/97 16:03 Page:555  
     15642**DCL     20169<>CALL
WRITE_TSN_USED.STATION_
     15644**DCL     15644--REDEF
WRITE_TSN_USED.V.DVBYTE.VFC#
     15651**DCL     15651--REDEF
XSF$LOCCODE
     17484**DCL-ENT 21950--CALL
XSF$LOCCODP
     17483**DCL-ENT 19532--CALL    20598--CALL    20603--CALL    20611--CALL    20623--CALL    20684--CALL
     20691--CALL    20696--CALL    20708--CALL    21060--CALL    21106--CALL    21145--CALL    21164--CALL
     21724--CALL    21744--CALL    22299--CALL    22322--CALL    22712--CALL

PL6.E3A0      #002=FLM$SWITCH_PRIME_DUAL File=FLM$MOVE.:E05TSI                   TUE 07/29/97 16:12 Page:556  
     3775        1        /*T***********************************************************/
     3776        2        /*T*                                                         */
     3777        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     3778        4        /*T*                                                         */
     3779        5        /*T***********************************************************/
     3780        6        FLM$SWITCH_PRIME_DUAL: PROC ALTRET;
     3781        7        /*F*  NAME: FLM$SWITCH_PRIME_DUAL
     3782        8              PURPOSE: Switches the packsets making the prime packset the dual
     3783        9                       packset and the dual packset the prime packset.
     3784       10        */
     3785       11
     3786       12        /*** INCLUDE FILES ***/
     3787       13
     3788       14        %INCLUDE CP_6;
     3789     5573        %INCLUDE CP_6_SUBS;
     3790     6113        %INCLUDE B_ERRORS_C;
     3791     7240        %INCLUDE FLI_DATA_R;
     3792     8654        %INCLUDE FLS_DATA_R;
     3793    10454
     3794    10455        /*** ENTRIES ***/
     3795    10456
     3796    10457    1   DCL FLI$RPT_ERR ENTRY (5);
     3797    10458
     3798    10459        /*** MACROS ***/
     3799    10460
     3800    10461        %FPT_OPEN ( FPTN = OPEN_PRIME_DUAL_PACK,
     3801    10462                    DCB = M$OPEN_PRIME_DUAL_PACK,
     3802    10463                    ACCT = BACKUP_ACCT,
     3803    10464                    ORG = CONSEC,
     3804    10465                    ASN = FILE,
     3805    10466                    CTG = YES,
     3806    10467                    SCRUB = YES,
     3807    10468                    STCLASS = "STATIC" );
     3808    10577
     3809    10578        %FPT_READ ( FPTN = READ_PRIME_DUAL_FILE,
     3810    10579                    DCB = M$OPEN_PRIME_DUAL_PACK,
     3811    10580                    BUF = PRIME_DUAL_BUF,
PL6.E3A0      #002=FLM$SWITCH_PRIME_DUAL File=FLM$MOVE.:E05TSI                   TUE 07/29/97 16:12 Page:557  
     3812    10581                    STCLASS = "STATIC" );
     3813    10620
     3814    10621        %FPT_WRITE ( FPTN = WRITE_PRIME_DUAL_FILE,
     3815    10622                     DCB = M$OPEN_PRIME_DUAL_PACK,
     3816    10623                     BUF = PRIME_DUAL_BUF,
     3817    10624                     REWRITE = YES,
     3818    10625                     STCLASS = "STATIC" );
     3819    10656
     3820    10657        %FPT_CLOSE ( FPTN = CLOSE_PRIME_DUAL_PACK,
     3821    10658                     DCB = M$OPEN_PRIME_DUAL_PACK,
     3822    10659                     DISP = SAVE,
     3823    10660                     CHGATT = YES,
     3824    10661                     STCLASS = "STATIC" );
     3825    10703
     3826    10704
     3827    10705        /*** DCBS ***/
     3828    10706
     3829    10707    1   DCL M$OPEN_PRIME_DUAL_PACK DCB;
     3830    10708
     3831    10709        %B$TCB (  STCLASS="BASED(B$TCB$)" );
     3832    10712        %B$ALT;
     3833    10720        %F$DCB;
     3834    10777
     3835    10778        /*** VARIABLES ***/
     3836    10779
     3837    10780    1   DCL TEMP CHAR(6) UNAL;
     3838    10781
     3839    10782        /***
     3840    10783         *** Rename :DUAL file to :PRIME and switch contents of the first record
     3841    10784         *** making the former dual packset the prime and visa versa.
     3842    10785         ***/
     3843    10786    1      OPEN_PRIME_DUAL_PACK.SN_ = VECTOR ( DISK_DEST_SN );
     3844    10787    1      OPEN_PRIME_DUAL_PACK.NAME_ = VECTOR ( DUAL_FILE );
     3845    10788    1      OPEN_PRIME_DUAL_PACK.V.FUN# = %UPDATE#;
     3846    10789    1      OPEN_PRIME_DUAL_PACK.V.RES# = DISK_DEST_RES.NAME;
     3847    10790    1      CALL M$OPEN ( OPEN_PRIME_DUAL_PACK ) ALTRET ( CHECK_ALT );
     3848    10791    1      CALL M$READ ( READ_PRIME_DUAL_FILE ) ALTRET ( CHECK_ALT );
PL6.E3A0      #002=FLM$SWITCH_PRIME_DUAL File=FLM$MOVE.:E05TSI                   TUE 07/29/97 16:12 Page:558  
     3849    10792    1      TEMP = PRIME_DUAL_BUF.PRIME;
     3850    10793    1      PRIME_DUAL_BUF.PRIME = PRIME_DUAL_BUF.DUAL;
     3851    10794    1      PRIME_DUAL_BUF.DUAL = TEMP;
     3852    10795    1      CALL M$WRITE ( WRITE_PRIME_DUAL_FILE ) ALTRET ( CHECK_ALT );
     3853    10796    1      CLOSE_PRIME_DUAL_PACK.NAME_ = VECTOR( PRIME_FILE );
     3854    10797    1      CALL M$CLOSE ( CLOSE_PRIME_DUAL_PACK ) ALTRET( CHECK_ALT );
     3855    10798
     3856    10799        /***
     3857    10800         *** Rename :PRIME file to :DUAL and switch contents of the first record
     3858    10801         *** making the former prime packset the dual and visa versa.
     3859    10802         ***/
     3860    10803    1      OPEN_PRIME_DUAL_PACK.SN_ = VECTOR ( DPLIST );
     3861    10804    1      OPEN_PRIME_DUAL_PACK.V.RES# = DPRESLIST.NAME(0);
     3862    10805    1      OPEN_PRIME_DUAL_PACK.NAME_ = VECTOR ( PRIME_FILE );
     3863    10806    1      OPEN_PRIME_DUAL_PACK.V.FUN# = %UPDATE#;
     3864    10807    1      CALL M$OPEN ( OPEN_PRIME_DUAL_PACK ) ALTRET ( CHECK_ALT );
     3865    10808    1      CALL M$READ ( READ_PRIME_DUAL_FILE ) ALTRET ( CHECK_ALT );
     3866    10809    1      PRIME_DUAL_BUF.PRIME = PRIME_DUAL_BUF.DUAL;
     3867    10810    1      PRIME_DUAL_BUF.DUAL = TEMP;
     3868    10811    1      CALL M$WRITE ( WRITE_PRIME_DUAL_FILE ) ALTRET (CHECK_ALT );
     3869    10812    1      CLOSE_PRIME_DUAL_PACK.NAME_ = VECTOR( DUAL_FILE );
     3870    10813    1      CALL M$CLOSE ( CLOSE_PRIME_DUAL_PACK ) ALTRET ( CHECK_ALT );
     3871    10814    1      RETURN;
     3872    10815
     3873    10816    1   CHECK_ALT:
     3874    10817    1      IF DCBADDR(DCBNUM(M$OPEN_PRIME_DUAL_PACK))->F$DCB.FCD#
     3875    10818    1       THEN CALL M$CLOSE ( CLOSE_PRIME_DUAL_PACK );
     3876    10819    1      ALTRETURN;
     3877    10820    1   END FLM$SWITCH_PRIME_DUAL;
     3878    10821        %EOD;

PL6.E3A0      #002=FLM$SWITCH_PRIME_DUAL File=FLM$MOVE.:E05TSI                   TUE 07/29/97 16:12 Page:559  
--  Include file information  --

   FLS_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   FLB_SUBS_C.:E05TOU  is referenced.
   FLI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FLM$SWITCH_PRIME_DUAL.

   Procedure FLM$SWITCH_PRIME_DUAL requires 107 words for executable code.
   Procedure FLM$SWITCH_PRIME_DUAL requires 6 words of local(AUTO) storage.

PL6.E3A0      #002=FLM$SWITCH_PRIME_DUAL File=FLM$MOVE.:E05TSI                   TUE 07/29/97 16:12 Page:560  

 Object Unit name= FLM$SWITCH_PRIME_DUAL                      File name= FLM$MOVE.:E05TOU
 UTS= JUL 29 '97 16:12:04.44 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$PRE_RET
    2   Data  even  none   134    206  FLM$SWITCH_PRIME_DUAL
    3   DCB   even  none     0      0  M$TSN_USED
    4   DCB   even  none     0      0  M$STATUS
    5   DCB   even  none     0      0  M$REBUILD
    6   DCB   even  none     0      0  M$ARCHIVE
    7   DCB   even  none     0      0  M$NODATA_LIST
    8   DCB   even  none     0      0  M$OPEN_PRIME_DUAL_PACK
    9   Proc  even  none   107    153  FLM$SWITCH_PRIME_DUAL
   10  RoData even  none     5      5  FLM$SWITCH_PRIME_DUAL

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     9      0   yes    yes     yes      Std        0  FLM$SWITCH_PRIME_DUAL

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #002=FLM$SWITCH_PRIME_DUAL File=FLM$MOVE.:E05TSI                   TUE 07/29/97 16:12 Page:561  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  TAPE_DCBLIST$                         SNVECLIST$
     B$TCB$                                DPLIST$                               DPRESLIST$
     DISK_FILE_SPEC$                       SPECCHARS                             DISK_DEST_SN
     DISK_DEST_RES                         EFTWORD                               M$PRE_RET
     RET_CMDS_NAME                         M$TSN_USED                            M$STATUS
     M$REBUILD                             M$ARCHIVE                             M$NODATA_LIST
     BLK_TAG$                              BLK_TAG0$                             NBR_BYTES_TO_MOVE
     DISK_GRAN$                            BLOCK_GRAN$                      r    EFT_CVOL_FILE
r    EFT_RESTRICT_FILE                     TSN_USED_NAME                         BACKUP_NAME
r    ARCHIVE_NAME                          PRIME_DUAL_BUF                   r    PRIME_FILE
r    DUAL_FILE                             REBUILD_NAME                          REBUILD_DIR_KEY
     REBUILD_KEY                           NODATA_FILE_NAME                      NODATA_KEY
     M$OPEN_PRIME_DUAL_PACK

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #002=FLM$SWITCH_PRIME_DUAL File=FLM$MOVE.:E05TSI                   TUE 07/29/97 16:12 Page:562  


     3775        1        /*T***********************************************************/
     3776        2        /*T*                                                         */
     3777        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     3778        4        /*T*                                                         */
     3779        5        /*T***********************************************************/
     3780        6        FLM$SWITCH_PRIME_DUAL: PROC ALTRET;

      6  9 000000   000000 700200 xent  FLM$SWITCH_* TSX0  ! X66_AUTO_0
         9 000001   000006 000000                    ZERO    6,0

     3781        7        /*F*  NAME: FLM$SWITCH_PRIME_DUAL
     3782        8              PURPOSE: Switches the packsets making the prime packset the dual
     3783        9                       packset and the dual packset the prime packset.
     3784       10        */
     3785       11
     3786       12        /*** INCLUDE FILES ***/
     3787       13
     3788       14        %INCLUDE CP_6;
     3789     5573        %INCLUDE CP_6_SUBS;
     3790     6113        %INCLUDE B_ERRORS_C;
     3791     7240        %INCLUDE FLI_DATA_R;
     3792     8654        %INCLUDE FLS_DATA_R;
     3793    10454
     3794    10455        /*** ENTRIES ***/
     3795    10456
     3796    10457    1   DCL FLI$RPT_ERR ENTRY (5);
     3797    10458
     3798    10459        /*** MACROS ***/
     3799    10460
     3800    10461        %FPT_OPEN ( FPTN = OPEN_PRIME_DUAL_PACK,
     3801    10462                    DCB = M$OPEN_PRIME_DUAL_PACK,
     3802    10463                    ACCT = BACKUP_ACCT,
     3803    10464                    ORG = CONSEC,
     3804    10465                    ASN = FILE,
     3805    10466                    CTG = YES,
     3806    10467                    SCRUB = YES,
PL6.E3A0      #002=FLM$SWITCH_PRIME_DUAL File=FLM$MOVE.:E05TSI                   TUE 07/29/97 16:12 Page:563  
     3807    10468                    STCLASS = "STATIC" );
     3808    10577
     3809    10578        %FPT_READ ( FPTN = READ_PRIME_DUAL_FILE,
     3810    10579                    DCB = M$OPEN_PRIME_DUAL_PACK,
     3811    10580                    BUF = PRIME_DUAL_BUF,
     3812    10581                    STCLASS = "STATIC" );
     3813    10620
     3814    10621        %FPT_WRITE ( FPTN = WRITE_PRIME_DUAL_FILE,
     3815    10622                     DCB = M$OPEN_PRIME_DUAL_PACK,
     3816    10623                     BUF = PRIME_DUAL_BUF,
     3817    10624                     REWRITE = YES,
     3818    10625                     STCLASS = "STATIC" );
     3819    10656
     3820    10657        %FPT_CLOSE ( FPTN = CLOSE_PRIME_DUAL_PACK,
     3821    10658                     DCB = M$OPEN_PRIME_DUAL_PACK,
     3822    10659                     DISP = SAVE,
     3823    10660                     CHGATT = YES,
     3824    10661                     STCLASS = "STATIC" );
     3825    10703
     3826    10704
     3827    10705        /*** DCBS ***/
     3828    10706
     3829    10707    1   DCL M$OPEN_PRIME_DUAL_PACK DCB;
     3830    10708
     3831    10709        %B$TCB (  STCLASS="BASED(B$TCB$)" );
     3832    10712        %B$ALT;
     3833    10720        %F$DCB;
     3834    10777
     3835    10778        /*** VARIABLES ***/
     3836    10779
     3837    10780    1   DCL TEMP CHAR(6) UNAL;
     3838    10781
     3839    10782        /***
     3840    10783         *** Rename :DUAL file to :PRIME and switch contents of the first record
     3841    10784         *** making the former dual packset the prime and visa versa.
     3842    10785         ***/
     3843    10786    1      OPEN_PRIME_DUAL_PACK.SN_ = VECTOR ( DISK_DEST_SN );
PL6.E3A0      #002=FLM$SWITCH_PRIME_DUAL File=FLM$MOVE.:E05TSI                   TUE 07/29/97 16:12 Page:564  

  10786  9 000002   000000 237000 10                 LDAQ    0
         9 000003   000026 757000 2                  STAQ    OPEN_PRIME_DUAL_PACK+2

     3844    10787    1      OPEN_PRIME_DUAL_PACK.NAME_ = VECTOR ( DUAL_FILE );

  10787  9 000004   000000 236000 xsym               LDQ     DUAL_FILE
         9 000005   000033 772000                    QRL     27
         9 000006   000001 620006                    EAX0    1,QL
         9 000007   000000 635010                    EAA     0,X0
         9 000010   000002 771000                    ARL     2
         9 000011   000140 135007                    SBLA    96,DL
         9 000012   000002 236000 10                 LDQ     2
         9 000013   000032 757000 2                  STAQ    OPEN_PRIME_DUAL_PACK+6

     3845    10788    1      OPEN_PRIME_DUAL_PACK.V.FUN# = %UPDATE#;

  10788  9 000014   001000 236007                    LDQ     512,DL
         9 000015   000071 552010 2                  STBQ    OPEN_PRIME_DUAL_PACK+37,'10'O

     3846    10789    1      OPEN_PRIME_DUAL_PACK.V.RES# = DISK_DEST_RES.NAME;

  10789  9 000016   000001 236000 xsym               LDQ     DISK_DEST_RES+1
         9 000017   000074 756000 2                  STQ     OPEN_PRIME_DUAL_PACK+40

     3847    10790    1      CALL M$OPEN ( OPEN_PRIME_DUAL_PACK ) ALTRET ( CHECK_ALT );

  10790  9 000020   000024 630400 2                  EPPR0   OPEN_PRIME_DUAL_PACK
         9 000021   450000 713400                    CLIMB   alt,open
         9 000022   410400 401760                    pmme    nvectors=18
         9 000023   000140 702000 9                  TSX2    CHECK_ALT

     3848    10791    1      CALL M$READ ( READ_PRIME_DUAL_FILE ) ALTRET ( CHECK_ALT );

  10791  9 000024   000116 630400 2                  EPPR0   READ_PRIME_DUAL_FILE
         9 000025   440000 713400                    CLIMB   alt,read
         9 000026   401400 401760                    pmme    nvectors=4
PL6.E3A0      #002=FLM$SWITCH_PRIME_DUAL File=FLM$MOVE.:E05TSI                   TUE 07/29/97 16:12 Page:565  
         9 000027   000140 702000 9                  TSX2    CHECK_ALT

     3849    10792    1      TEMP = PRIME_DUAL_BUF.PRIME;

  10792  9 000030   040100 100400                    MLR     fill='040'O
         9 000031   000001 000006 xsym               ADSC9   PRIME_DUAL_BUF+1         cn=0,n=6
         9 000032   200003 000006                    ADSC9   TEMP,,AUTO               cn=0,n=6

     3850    10793    1      PRIME_DUAL_BUF.PRIME = PRIME_DUAL_BUF.DUAL;

  10793  9 000033   040000 100400                    MLR     fill='040'O
         9 000034   000002 400006 xsym               ADSC9   PRIME_DUAL_BUF+2         cn=2,n=6
         9 000035   000001 000006 xsym               ADSC9   PRIME_DUAL_BUF+1         cn=0,n=6

     3851    10794    1      PRIME_DUAL_BUF.DUAL = TEMP;

  10794  9 000036   040000 100500                    MLR     fill='040'O
         9 000037   200003 000006                    ADSC9   TEMP,,AUTO               cn=0,n=6
         9 000040   000002 400006 xsym               ADSC9   PRIME_DUAL_BUF+2         cn=2,n=6

     3852    10795    1      CALL M$WRITE ( WRITE_PRIME_DUAL_FILE ) ALTRET ( CHECK_ALT );

  10795  9 000041   000134 630400 2                  EPPR0   WRITE_PRIME_DUAL_FILE
         9 000042   440001 713400                    CLIMB   alt,write
         9 000043   401400 401760                    pmme    nvectors=4
         9 000044   000140 702000 9                  TSX2    CHECK_ALT

     3853    10796    1      CLOSE_PRIME_DUAL_PACK.NAME_ = VECTOR( PRIME_FILE );

  10796  9 000045   000000 236000 xsym               LDQ     PRIME_FILE
         9 000046   000033 772000                    QRL     27
         9 000047   000001 620006                    EAX0    1,QL
         9 000050   000000 635010                    EAA     0,X0
         9 000051   000002 771000                    ARL     2
         9 000052   000140 135007                    SBLA    96,DL
         9 000053   000003 236000 10                 LDQ     3
         9 000054   000156 757000 2                  STAQ    CLOSE_PRIME_DUAL_PACK+6
PL6.E3A0      #002=FLM$SWITCH_PRIME_DUAL File=FLM$MOVE.:E05TSI                   TUE 07/29/97 16:12 Page:566  

     3854    10797    1      CALL M$CLOSE ( CLOSE_PRIME_DUAL_PACK ) ALTRET( CHECK_ALT );

  10797  9 000055   000150 630400 2                  EPPR0   CLOSE_PRIME_DUAL_PACK
         9 000056   450001 713400                    CLIMB   alt,close
         9 000057   406000 401760                    pmme    nvectors=13
         9 000060   000140 702000 9                  TSX2    CHECK_ALT

     3855    10798
     3856    10799        /***
     3857    10800         *** Rename :PRIME file to :DUAL and switch contents of the first record
     3858    10801         *** making the former prime packset the dual and visa versa.
     3859    10802         ***/
     3860    10803    1      OPEN_PRIME_DUAL_PACK.SN_ = VECTOR ( DPLIST );

  10803  9 000061   000000 235000 10                 LDA     0
         9 000062   000000 236000 xsym               LDQ     DPLIST$
         9 000063   000026 757000 2                  STAQ    OPEN_PRIME_DUAL_PACK+2

     3861    10804    1      OPEN_PRIME_DUAL_PACK.V.RES# = DPRESLIST.NAME(0);

  10804  9 000064   000000 470400 xsym               LDP0    DPRESLIST$
         9 000065   000001 236100                    LDQ     1,,PR0
         9 000066   000074 756000 2                  STQ     OPEN_PRIME_DUAL_PACK+40

     3862    10805    1      OPEN_PRIME_DUAL_PACK.NAME_ = VECTOR ( PRIME_FILE );

  10805  9 000067   000000 236000 xsym               LDQ     PRIME_FILE
         9 000070   000033 772000                    QRL     27
         9 000071   000001 620006                    EAX0    1,QL
         9 000072   000000 635010                    EAA     0,X0
         9 000073   000002 771000                    ARL     2
         9 000074   000140 135007                    SBLA    96,DL
         9 000075   000003 236000 10                 LDQ     3
         9 000076   000032 757000 2                  STAQ    OPEN_PRIME_DUAL_PACK+6

     3863    10806    1      OPEN_PRIME_DUAL_PACK.V.FUN# = %UPDATE#;
PL6.E3A0      #002=FLM$SWITCH_PRIME_DUAL File=FLM$MOVE.:E05TSI                   TUE 07/29/97 16:12 Page:567  

  10806  9 000077   001000 236007                    LDQ     512,DL
         9 000100   000071 552010 2                  STBQ    OPEN_PRIME_DUAL_PACK+37,'10'O

     3864    10807    1      CALL M$OPEN ( OPEN_PRIME_DUAL_PACK ) ALTRET ( CHECK_ALT );

  10807  9 000101   000024 630400 2                  EPPR0   OPEN_PRIME_DUAL_PACK
         9 000102   450000 713400                    CLIMB   alt,open
         9 000103   410400 401760                    pmme    nvectors=18
         9 000104   000140 702000 9                  TSX2    CHECK_ALT

     3865    10808    1      CALL M$READ ( READ_PRIME_DUAL_FILE ) ALTRET ( CHECK_ALT );

  10808  9 000105   000116 630400 2                  EPPR0   READ_PRIME_DUAL_FILE
         9 000106   440000 713400                    CLIMB   alt,read
         9 000107   401400 401760                    pmme    nvectors=4
         9 000110   000140 702000 9                  TSX2    CHECK_ALT

     3866    10809    1      PRIME_DUAL_BUF.PRIME = PRIME_DUAL_BUF.DUAL;

  10809  9 000111   040000 100400                    MLR     fill='040'O
         9 000112   000002 400006 xsym               ADSC9   PRIME_DUAL_BUF+2         cn=2,n=6
         9 000113   000001 000006 xsym               ADSC9   PRIME_DUAL_BUF+1         cn=0,n=6

     3867    10810    1      PRIME_DUAL_BUF.DUAL = TEMP;

  10810  9 000114   040000 100500                    MLR     fill='040'O
         9 000115   200003 000006                    ADSC9   TEMP,,AUTO               cn=0,n=6
         9 000116   000002 400006 xsym               ADSC9   PRIME_DUAL_BUF+2         cn=2,n=6

     3868    10811    1      CALL M$WRITE ( WRITE_PRIME_DUAL_FILE ) ALTRET (CHECK_ALT );

  10811  9 000117   000134 630400 2                  EPPR0   WRITE_PRIME_DUAL_FILE
         9 000120   440001 713400                    CLIMB   alt,write
         9 000121   401400 401760                    pmme    nvectors=4
         9 000122   000140 702000 9                  TSX2    CHECK_ALT

PL6.E3A0      #002=FLM$SWITCH_PRIME_DUAL File=FLM$MOVE.:E05TSI                   TUE 07/29/97 16:12 Page:568  
     3869    10812    1      CLOSE_PRIME_DUAL_PACK.NAME_ = VECTOR( DUAL_FILE );

  10812  9 000123   000000 236000 xsym               LDQ     DUAL_FILE
         9 000124   000033 772000                    QRL     27
         9 000125   000001 620006                    EAX0    1,QL
         9 000126   000000 635010                    EAA     0,X0
         9 000127   000002 771000                    ARL     2
         9 000130   000140 135007                    SBLA    96,DL
         9 000131   000002 236000 10                 LDQ     2
         9 000132   000156 757000 2                  STAQ    CLOSE_PRIME_DUAL_PACK+6

     3870    10813    1      CALL M$CLOSE ( CLOSE_PRIME_DUAL_PACK ) ALTRET ( CHECK_ALT );

  10813  9 000133   000150 630400 2                  EPPR0   CLOSE_PRIME_DUAL_PACK
         9 000134   450001 713400                    CLIMB   alt,close
         9 000135   406000 401760                    pmme    nvectors=13
         9 000136   000140 702000 9                  TSX2    CHECK_ALT

     3871    10814    1      RETURN;

  10814  9 000137   000000 702200 xent               TSX2  ! X66_ARET

     3872    10815
     3873    10816    1   CHECK_ALT:
     3874    10817    1      IF DCBADDR(DCBNUM(M$OPEN_PRIME_DUAL_PACK))->F$DCB.FCD#

  10817  9 000140   000000 236007 xsym  CHECK_ALT    LDQ     M$OPEN_PRIME_DUAL_PACK,DL
         9 000141   000004 470400 10                 LDP0    4
         9 000142   000000 471500                    LDP1    0,,PR0
         9 000143   100000 473506                    LDP3    0,QL,PR1
         9 000144   300031 236100                    LDQ     25,,PR3
         9 000145   020000 316007                    CANQ    8192,DL
         9 000146   000152 600000 9                  TZE     s:10819

     3875    10818    1       THEN CALL M$CLOSE ( CLOSE_PRIME_DUAL_PACK );

  10818  9 000147   000150 630400 2                  EPPR0   CLOSE_PRIME_DUAL_PACK
PL6.E3A0      #002=FLM$SWITCH_PRIME_DUAL File=FLM$MOVE.:E05TSI                   TUE 07/29/97 16:12 Page:569  
         9 000150   050001 713400                    CLIMB   close
         9 000151   406000 401760                    pmme    nvectors=13

     3876    10819    1      ALTRETURN;

  10819  9 000152   000000 702200 xent               TSX2  ! X66_AALT
     3877    10820    1   END FLM$SWITCH_PRIME_DUAL;
     3878    10821        %EOD;

PL6.E3A0      #002=FLM$SWITCH_PRIME_DUAL File=FLM$MOVE.:E05TSI                   TUE 07/29/97 16:12 Page:570  
--  Include file information  --

   FLS_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   FLB_SUBS_C.:E05TOU  is referenced.
   FLI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FLM$SWITCH_PRIME_DUAL.
PL6.E3A0      #002=FLM$SWITCH_PRIME_DUAL File=FLM$MOVE.:E05TSI                   TUE 07/29/97 16:12 Page:571  

 **** Variables and constants ****

  ****  Section 002  Data  FLM$SWITCH_PRIME_DUAL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    10-0-0/c STRC(72)    r     1 BACKUP_ACCT
   150-0-0/d STRC(1080)  r     1 CLOSE_PRIME_DUAL_PACK
    12-0-0/d STRC(360)   r     1 DEL_NODATA_REC            24-0-0/d STRC(2088)  r     1 OPEN_PRIME_DUAL_PACK
   116-0-0/d STRC(504)   r     1 READ_PRIME_DUAL_FILE
   134-0-0/d STRC(432)   r     1 WRITE_PRIME_DUAL_FILE

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/c CHAR(6)     r     1 TEMP

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c ASTR(9)     r     1 ARCHIVE_NAME               0-0-0/w PTR         r     1 B$TCB$
     0-0-0/c ASTR(9)     r     1 BACKUP_NAME                0-0-0/w PTR         r     1 BLK_TAG$
     0-0-0/w PTR         r     1 BLK_TAG0$                  0-0-0/w PTR         r     1 BLOCK_GRAN$
     0-0-0/w STRC(72)    r     1 DISK_DEST_RES              0-0-0/d STRC(90)    r     1 DISK_DEST_SN
     0-0-0/w PTR         r     1 DISK_FILE_SPEC$            0-0-0/w PTR         r     1 DISK_GRAN$
     0-0-0/w PTR         r     1 DPLIST$                    0-0-0/w PTR         r     1 DPRESLIST$
     0-0-0/c ASTR(9)     r     1 DUAL_FILE                  0-0-0/c ASTR(9)     r     1 EFT_CVOL_FILE
     0-0-0/c ASTR(9)     r     1 EFT_RESTRICT_FILE          0-0-0/w SBIN        r     1 NBR_BYTES_TO_MOVE
     0-0-0/c ASTR(9)     r     1 NODATA_FILE_NAME           0-0-0/c STRC(369)   r     1 NODATA_KEY
     0-0-0/w STRC(144)   r     1 PRIME_DUAL_BUF             0-0-0/c ASTR(9)     r     1 PRIME_FILE
     0-0-0/c ASTR(9)     r     1 REBUILD_DIR_KEY            0-0-0/c ASTR(9)     r     1 REBUILD_KEY
     0-0-0/c ASTR(9)     r     1 REBUILD_NAME               0-0-0/c ASTR(9)     r     1 RET_CMDS_NAME
PL6.E3A0      #002=FLM$SWITCH_PRIME_DUAL File=FLM$MOVE.:E05TSI                   TUE 07/29/97 16:12 Page:572  
     0-0-0/w PTR         r     1 SNVECLIST$                 0-0-0/w PTR         r     1 TAPE_DCBLIST$
     0-0-0/c ASTR(9)     r     1 TSN_USED_NAME

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(90)    r     1 DPLIST                     0-0-0/w STRC(72)    r     1 DPRESLIST
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0N  NULL        r     1 M$NODATA_LIST
     0-0-0N  NULL        r     1 M$OPEN_PRIME_DUAL_PACK


   Procedure FLM$SWITCH_PRIME_DUAL requires 107 words for executable code.
   Procedure FLM$SWITCH_PRIME_DUAL requires 6 words of local(AUTO) storage.
PL6.E3A0      #002=FLM$SWITCH_PRIME_DUAL File=FLM$MOVE.:E05TSI                   TUE 07/29/97 16:12 Page:573  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=FLM$SWITCH_PRIME_DUAL File=FLM$MOVE.:E05TSI                   TUE 07/29/97 16:12 Page:574  
          MINI XREF LISTING

ARCHIVE_NAME.L#
      9546**DCL      9546--IMP-SIZ
B$ALT.CODE
     10714**DCL     10714--REDEF   10715--REDEF   10715--REDEF
B$ALT.ERR.ERR#
     10716**DCL     10716--REDEF
B$ALT.EVID
     10715**DCL     10715--REDEF   10715--REDEF
B$TCB$
      8171**DCL     10710--IMP-PTR
BACKUP_ACCT
      9203**DCL     10538--DCLINIT
BACKUP_NAME.L#
      9190**DCL      9190--IMP-SIZ
BLK_TAG.NAME
      8682**DCL      8682--REDEF
BLK_TAG$
      8679**DCL      8679--IMP-PTR
BLK_TAG0.NAME
      8688**DCL      8688--REDEF
BLK_TAG0$
      8685**DCL      8685--IMP-PTR
BLOCK_GRAN$
      8692**DCL      8693--IMP-PTR
CHECK_ALT
     10817**LABEL   10790--CALLALT 10791--CALLALT 10795--CALLALT 10797--CALLALT 10807--CALLALT 10808--CALLALT
     10811--CALLALT 10813--CALLALT
CLOSE_NODATA_LIST.SN_
     10344**DCL     10344--REDEF
CLOSE_NODATA_LIST.UTL_
     10345**DCL     10345--REDEF
CLOSE_NODATA_LIST.V.EXPIRE#
PL6.E3A0      #002=FLM$SWITCH_PRIME_DUAL File=FLM$MOVE.:E05TSI                   TUE 07/29/97 16:12 Page:575  
     10359**DCL     10359--REDEF
CLOSE_NODATA_LIST.V.TYPE#
     10357**DCL     10357--REDEF
CLOSE_NODATA_LIST.V.XTNSIZE#
     10354**DCL     10354--REDEF   10356--REDEF
CLOSE_PRIME_DUAL.SN_
      9821**DCL      9821--REDEF
CLOSE_PRIME_DUAL.UTL_
      9822**DCL      9822--REDEF
CLOSE_PRIME_DUAL.V.EXPIRE#
      9836**DCL      9836--REDEF
CLOSE_PRIME_DUAL.V.TYPE#
      9834**DCL      9834--REDEF
CLOSE_PRIME_DUAL.V.XTNSIZE#
      9831**DCL      9831--REDEF    9833--REDEF
CLOSE_PRIME_DUAL_PACK
     10684**DCL     10797<>CALL    10813<>CALL    10818<>CALL
CLOSE_PRIME_DUAL_PACK.NAME_
     10685**DCL     10796<<ASSIGN  10812<<ASSIGN
CLOSE_PRIME_DUAL_PACK.SN_
     10684**DCL     10684--REDEF
CLOSE_PRIME_DUAL_PACK.UTL_
     10685**DCL     10685--REDEF
CLOSE_PRIME_DUAL_PACK.V
     10689**DCL     10684--DCLINIT
CLOSE_PRIME_DUAL_PACK.V.EXPIRE#
     10699**DCL     10699--REDEF
CLOSE_PRIME_DUAL_PACK.V.TYPE#
     10697**DCL     10697--REDEF
CLOSE_PRIME_DUAL_PACK.V.XTNSIZE#
     10694**DCL     10694--REDEF   10696--REDEF
CLOSE_REBUILD.SN_
     10096**DCL     10096--REDEF
CLOSE_REBUILD.UTL_
     10097**DCL     10097--REDEF
CLOSE_REBUILD.V.EXPIRE#
PL6.E3A0      #002=FLM$SWITCH_PRIME_DUAL File=FLM$MOVE.:E05TSI                   TUE 07/29/97 16:12 Page:576  
     10111**DCL     10111--REDEF
CLOSE_REBUILD.V.TYPE#
     10109**DCL     10109--REDEF
CLOSE_REBUILD.V.XTNSIZE#
     10106**DCL     10106--REDEF   10108--REDEF
CLOSE_STATUS.SN_
      9311**DCL      9311--REDEF
CLOSE_STATUS.UTL_
      9312**DCL      9312--REDEF
CLOSE_STATUS.V.EXPIRE#
      9326**DCL      9326--REDEF
CLOSE_STATUS.V.TYPE#
      9324**DCL      9324--REDEF
CLOSE_STATUS.V.XTNSIZE#
      9321**DCL      9321--REDEF    9323--REDEF
CLOSE_TSN_USED.SN_
      9021**DCL      9021--REDEF
CLOSE_TSN_USED.UTL_
      9022**DCL      9022--REDEF
CLOSE_TSN_USED.V.EXPIRE#
      9036**DCL      9036--REDEF
CLOSE_TSN_USED.V.TYPE#
      9034**DCL      9034--REDEF
CLOSE_TSN_USED.V.XTNSIZE#
      9031**DCL      9031--REDEF    9033--REDEF
CON_CLOSE_ARCHIVE.SN_
      9353**DCL      9353--REDEF
CON_CLOSE_ARCHIVE.UTL_
      9354**DCL      9354--REDEF
CON_CLOSE_ARCHIVE.V.EXPIRE#
      9368**DCL      9368--REDEF
CON_CLOSE_ARCHIVE.V.TYPE#
      9366**DCL      9366--REDEF
CON_CLOSE_ARCHIVE.V.XTNSIZE#
      9363**DCL      9363--REDEF    9365--REDEF
CON_OPEN_ARCHIVE_FILE.ACSVEH_
PL6.E3A0      #002=FLM$SWITCH_PRIME_DUAL File=FLM$MOVE.:E05TSI                   TUE 07/29/97 16:12 Page:577  
      9440**DCL      9441--REDEF
CON_OPEN_ARCHIVE_FILE.ALTKEYS_
      9446**DCL      9447--REDEF    9447--REDEF
CON_OPEN_ARCHIVE_FILE.HDR_
      9445**DCL      9446--REDEF
CON_OPEN_ARCHIVE_FILE.TAB_
      9444**DCL      9445--REDEF
CON_OPEN_ARCHIVE_FILE.UHL_
      9438**DCL      9439--REDEF    9439--REDEF
CON_OPEN_ARCHIVE_FILE.V.FSN#
      9478**DCL      9478--REDEF    9478--REDEF
CON_OPEN_ARCHIVE_FILE.WSN_
      9444**DCL      9444--REDEF
CON_READ_ARCHIVE_FILE.STATION_
      9502**DCL      9503--REDEF
CON_READ_ARCHIVE_FILE.V.DVBYTE.REREAD#
      9514**DCL      9514--REDEF
CON_READ_ARCHIVE_FILE.V.INDX#
      9512**DCL      9512--REDEF
CVOL_UTL.ULBL#
      8781**DCL      8781--REDEF
DEL_NODATA_REC.V
     10447**DCL     10444--DCLINIT
DISK_CLOSE.SN_
      7851**DCL      7851--REDEF
DISK_CLOSE.UTL_
      7852**DCL      7852--REDEF
DISK_CLOSE.V.EXPIRE#
      7866**DCL      7866--REDEF
DISK_CLOSE.V.TYPE#
      7864**DCL      7864--REDEF
DISK_CLOSE.V.XTNSIZE#
      7861**DCL      7861--REDEF    7863--REDEF
DISK_DEST_RES.NAME
      8335**DCL     10789>>ASSIGN
DISK_DEST_SN
PL6.E3A0      #002=FLM$SWITCH_PRIME_DUAL File=FLM$MOVE.:E05TSI                   TUE 07/29/97 16:12 Page:578  
      8320**DCL     10786--ASSIGN
DISK_FILE_SPEC.SPEC
      8216**DCL      8218--REDEF
DISK_FILE_SPEC.SPEC.START
      8217**DCL      8217--REDEF
DISK_FILE_SPEC.SPEC.STOP
      8218**DCL      8218--REDEF
DISK_FILE_SPEC$
      8215**DCL      8216--IMP-PTR
DISK_GRAN$
      8692**DCL      8692--IMP-PTR
DISK_OPEN.ACSVEH_
      7716**DCL      7717--REDEF
DISK_OPEN.ALTKEYS_
      7722**DCL      7723--REDEF    7723--REDEF
DISK_OPEN.HDR_
      7721**DCL      7722--REDEF
DISK_OPEN.TAB_
      7720**DCL      7721--REDEF
DISK_OPEN.UHL_
      7714**DCL      7715--REDEF    7715--REDEF
DISK_OPEN.V.FSN#
      7754**DCL      7754--REDEF    7754--REDEF
DISK_OPEN.WSN_
      7720**DCL      7720--REDEF
DISK_READ.STATION_
      7778**DCL      7779--REDEF
DISK_READ.V.DVBYTE.REREAD#
      7790**DCL      7790--REDEF
DISK_READ.V.INDX#
      7788**DCL      7788--REDEF
DISK_WRITE.STATION_
      7816**DCL      7816--REDEF
DISK_WRITE.V.DVBYTE.VFC#
      7823**DCL      7823--REDEF
DPLIST
PL6.E3A0      #002=FLM$SWITCH_PRIME_DUAL File=FLM$MOVE.:E05TSI                   TUE 07/29/97 16:12 Page:579  
      8213**DCL     10803--ASSIGN
DPLIST$
      8201**DCL      8213--IMP-PTR 10803>>ASSIGN
DPRESLIST.NAME
      8215**DCL     10804>>ASSIGN
DPRESLIST$
      8215**DCL      8215--IMP-PTR 10804>>ASSIGN
DUAL_FILE
      9617**DCL     10787--ASSIGN  10812--ASSIGN
DUAL_FILE.L#
      9617**DCL      9617--IMP-SIZ 10787>>ASSIGN  10812>>ASSIGN
EFTWORD
      8336**DCL      8336--REDEF
EFT_CVOL_FILE.L#
      8741**DCL      8741--IMP-SIZ
EFT_RESTRICT_FILE.L#
      8768**DCL      8768--IMP-SIZ
F$DCB.ACTPOS
     10753**DCL     10753--REDEF
F$DCB.ARS#
     10727**DCL     10727--REDEF
F$DCB.ATTR
     10746**DCL     10747--REDEF
F$DCB.BORROW
     10761**DCL     10761--REDEF   10761--REDEF   10761--REDEF
F$DCB.DCBNAME.L
     10775**DCL     10775--IMP-SIZ
F$DCB.EOMCHAR#
     10731**DCL     10731--REDEF
F$DCB.FCD#
     10740**DCL     10817>>IF
F$DCB.FLDID
     10756**DCL     10756--REDEF
F$DCB.FORM$
     10750**DCL     10750--REDEF
F$DCB.FSECT
PL6.E3A0      #002=FLM$SWITCH_PRIME_DUAL File=FLM$MOVE.:E05TSI                   TUE 07/29/97 16:12 Page:580  
     10766**DCL     10766--REDEF
F$DCB.FSN#
     10743**DCL     10743--REDEF   10743--REDEF   10744--REDEF
F$DCB.HEADER$
     10749**DCL     10749--REDEF
F$DCB.IXTNSIZE#
     10747**DCL     10747--REDEF
F$DCB.LASTSTA$
     10736**DCL     10736--REDEF
F$DCB.LVL
     10762**DCL     10762--REDEF
F$DCB.NAME#.C
     10737**DCL     10737--REDEF
F$DCB.NOEOF
     10759**DCL     10759--REDEF
F$DCB.NRECS#
     10748**DCL     10748--REDEF
F$DCB.NRECX
     10767**DCL     10767--REDEF
F$DCB.OHDR
     10759**DCL     10759--REDEF
F$DCB.ORG#
     10742**DCL     10742--REDEF
F$DCB.PRECNO
     10765**DCL     10765--REDEF
F$DCB.RCSZ
     10771**DCL     10771--REDEF
F$DCB.RES#
     10738**DCL     10738--REDEF
F$DCB.SETX
     10750**DCL     10750--REDEF
F$DCB.TAB$
     10750**DCL     10750--REDEF
F$DCB.TDA
     10764**DCL     10765--REDEF
F$DCB.WSN#
PL6.E3A0      #002=FLM$SWITCH_PRIME_DUAL File=FLM$MOVE.:E05TSI                   TUE 07/29/97 16:12 Page:581  
     10738**DCL     10738--REDEF
FIT_AREA.W2
      9052**DCL      9053--REDEF
FPT_EXIT.V.STEPCC#
      7641**DCL      7641--REDEF
M$CLOSE
      5501**DCL-ENT 10797--CALL    10813--CALL    10818--CALL
M$OPEN
      5501**DCL-ENT 10790--CALL    10807--CALL
M$OPEN_PRIME_DUAL_PACK
     10707**DCL     10817--IF
M$READ
      5502**DCL-ENT 10791--CALL    10808--CALL
M$WRITE
      5502**DCL-ENT 10795--CALL    10811--CALL
NBR_BYTES_TO_MOVE
      8691**DCL      8692--IMP-SIZ  8693--IMP-SIZ
NODATA_FILE_NAME.L#
     10306**DCL     10306--IMP-SIZ
NODATA_KEY
     10452**DCL     10444--DCLINIT 10445--DCLINIT
OPEN_NODATA_LIST.ACSVEH_
     10239**DCL     10240--REDEF
OPEN_NODATA_LIST.ALTKEYS_
     10245**DCL     10246--REDEF   10246--REDEF
OPEN_NODATA_LIST.HDR_
     10244**DCL     10245--REDEF
OPEN_NODATA_LIST.TAB_
     10243**DCL     10244--REDEF
OPEN_NODATA_LIST.UHL_
     10237**DCL     10238--REDEF   10238--REDEF
OPEN_NODATA_LIST.V.FSN#
     10277**DCL     10277--REDEF   10277--REDEF
OPEN_NODATA_LIST.WSN_
     10243**DCL     10243--REDEF
OPEN_PRIME_DUAL.ACSVEH_
PL6.E3A0      #002=FLM$SWITCH_PRIME_DUAL File=FLM$MOVE.:E05TSI                   TUE 07/29/97 16:12 Page:582  
      9686**DCL      9687--REDEF
OPEN_PRIME_DUAL.ALTKEYS_
      9692**DCL      9693--REDEF    9693--REDEF
OPEN_PRIME_DUAL.HDR_
      9691**DCL      9692--REDEF
OPEN_PRIME_DUAL.TAB_
      9690**DCL      9691--REDEF
OPEN_PRIME_DUAL.UHL_
      9684**DCL      9685--REDEF    9685--REDEF
OPEN_PRIME_DUAL.V.FSN#
      9724**DCL      9724--REDEF    9724--REDEF
OPEN_PRIME_DUAL.WSN_
      9690**DCL      9690--REDEF
OPEN_PRIME_DUAL_PACK
     10533**DCL     10790<>CALL    10807<>CALL
OPEN_PRIME_DUAL_PACK.ACSVEH_
     10535**DCL     10536--REDEF
OPEN_PRIME_DUAL_PACK.ALTKEYS_
     10541**DCL     10542--REDEF   10542--REDEF
OPEN_PRIME_DUAL_PACK.HDR_
     10540**DCL     10541--REDEF
OPEN_PRIME_DUAL_PACK.NAME_
     10534**DCL     10787<<ASSIGN  10805<<ASSIGN
OPEN_PRIME_DUAL_PACK.SN_
     10533**DCL     10786<<ASSIGN  10803<<ASSIGN
OPEN_PRIME_DUAL_PACK.TAB_
     10539**DCL     10540--REDEF
OPEN_PRIME_DUAL_PACK.UHL_
     10533**DCL     10534--REDEF   10534--REDEF
OPEN_PRIME_DUAL_PACK.V
     10542**DCL     10533--DCLINIT
OPEN_PRIME_DUAL_PACK.V.FSN#
     10573**DCL     10573--REDEF   10573--REDEF
OPEN_PRIME_DUAL_PACK.V.FUN#
     10552**DCL     10788<<ASSIGN  10806<<ASSIGN
OPEN_PRIME_DUAL_PACK.V.RES#
PL6.E3A0      #002=FLM$SWITCH_PRIME_DUAL File=FLM$MOVE.:E05TSI                   TUE 07/29/97 16:12 Page:583  
     10557**DCL     10789<<ASSIGN  10804<<ASSIGN
OPEN_PRIME_DUAL_PACK.WSN_
     10539**DCL     10539--REDEF
OPEN_REBUILD.ACSVEH_
      9921**DCL      9922--REDEF
OPEN_REBUILD.ALTKEYS_
      9927**DCL      9928--REDEF    9928--REDEF
OPEN_REBUILD.HDR_
      9926**DCL      9927--REDEF
OPEN_REBUILD.TAB_
      9925**DCL      9926--REDEF
OPEN_REBUILD.UHL_
      9919**DCL      9920--REDEF    9920--REDEF
OPEN_REBUILD.V.FSN#
      9959**DCL      9959--REDEF    9959--REDEF
OPEN_REBUILD.WSN_
      9925**DCL      9925--REDEF
OPEN_STATUS.ACSVEH_
      9123**DCL      9124--REDEF
OPEN_STATUS.ALTKEYS_
      9129**DCL      9130--REDEF    9130--REDEF
OPEN_STATUS.HDR_
      9128**DCL      9129--REDEF
OPEN_STATUS.TAB_
      9127**DCL      9128--REDEF
OPEN_STATUS.UHL_
      9121**DCL      9122--REDEF    9122--REDEF
OPEN_STATUS.V.FSN#
      9161**DCL      9161--REDEF    9161--REDEF
OPEN_STATUS.WSN_
      9127**DCL      9127--REDEF
OPEN_TSN_USED.ACSVEH_
      8859**DCL      8860--REDEF
OPEN_TSN_USED.ALTKEYS_
      8865**DCL      8866--REDEF    8866--REDEF
OPEN_TSN_USED.HDR_
PL6.E3A0      #002=FLM$SWITCH_PRIME_DUAL File=FLM$MOVE.:E05TSI                   TUE 07/29/97 16:12 Page:584  
      8864**DCL      8865--REDEF
OPEN_TSN_USED.TAB_
      8863**DCL      8864--REDEF
OPEN_TSN_USED.UHL_
      8857**DCL      8858--REDEF    8858--REDEF
OPEN_TSN_USED.V.FSN#
      8897**DCL      8897--REDEF    8897--REDEF
OPEN_TSN_USED.WSN_
      8863**DCL      8863--REDEF
PRE_RET_CLOSE.SN_
      8579**DCL      8579--REDEF
PRE_RET_CLOSE.UTL_
      8580**DCL      8580--REDEF
PRE_RET_CLOSE.V.EXPIRE#
      8594**DCL      8594--REDEF
PRE_RET_CLOSE.V.TYPE#
      8592**DCL      8592--REDEF
PRE_RET_CLOSE.V.XTNSIZE#
      8589**DCL      8589--REDEF    8591--REDEF
PRE_RET_OPEN.ACSVEH_
      8514**DCL      8515--REDEF
PRE_RET_OPEN.ALTKEYS_
      8520**DCL      8521--REDEF    8521--REDEF
PRE_RET_OPEN.HDR_
      8519**DCL      8520--REDEF
PRE_RET_OPEN.TAB_
      8518**DCL      8519--REDEF
PRE_RET_OPEN.UHL_
      8512**DCL      8513--REDEF    8513--REDEF
PRE_RET_OPEN.V.FSN#
      8552**DCL      8552--REDEF    8552--REDEF
PRE_RET_OPEN.WSN_
      8518**DCL      8518--REDEF
PRE_RET_READ.STATION_
      8369**DCL      8370--REDEF
PRE_RET_READ.V.DVBYTE.REREAD#
PL6.E3A0      #002=FLM$SWITCH_PRIME_DUAL File=FLM$MOVE.:E05TSI                   TUE 07/29/97 16:12 Page:585  
      8381**DCL      8381--REDEF
PRE_RET_READ.V.INDX#
      8379**DCL      8379--REDEF
PRE_RET_WRITE.STATION_
      8407**DCL      8407--REDEF
PRE_RET_WRITE.V.DVBYTE.VFC#
      8414**DCL      8414--REDEF
PRIME_DUAL_BUF
      9564**DCL     10600--DCLINIT 10601--DCLINIT 10643--DCLINIT 10644--DCLINIT
PRIME_DUAL_BUF.DUAL
      9564**DCL     10793>>ASSIGN  10794<<ASSIGN  10809>>ASSIGN  10810<<ASSIGN
PRIME_DUAL_BUF.PRIME
      9564**DCL     10792>>ASSIGN  10793<<ASSIGN  10809<<ASSIGN
PRIME_FILE
      9590**DCL     10796--ASSIGN  10805--ASSIGN
PRIME_FILE.L#
      9590**DCL      9590--IMP-SIZ 10796>>ASSIGN  10805>>ASSIGN
READ_NODATA_LIST.STATION_
     10383**DCL     10384--REDEF
READ_NODATA_LIST.V.DVBYTE.REREAD#
     10395**DCL     10395--REDEF
READ_NODATA_LIST.V.INDX#
     10393**DCL     10393--REDEF
READ_PRIME_DUAL.STATION_
      9748**DCL      9749--REDEF
READ_PRIME_DUAL.V.DVBYTE.REREAD#
      9760**DCL      9760--REDEF
READ_PRIME_DUAL.V.INDX#
      9758**DCL      9758--REDEF
READ_PRIME_DUAL_FILE
     10598**DCL     10791<>CALL    10808<>CALL
READ_PRIME_DUAL_FILE.STATION_
     10601**DCL     10602--REDEF
READ_PRIME_DUAL_FILE.V
     10602**DCL     10598--DCLINIT
READ_PRIME_DUAL_FILE.V.DVBYTE.REREAD#
PL6.E3A0      #002=FLM$SWITCH_PRIME_DUAL File=FLM$MOVE.:E05TSI                   TUE 07/29/97 16:12 Page:586  
     10613**DCL     10613--REDEF
READ_PRIME_DUAL_FILE.V.INDX#
     10611**DCL     10611--REDEF
READ_REBUILD.STATION_
     10054**DCL     10055--REDEF
READ_REBUILD.V.DVBYTE.REREAD#
     10066**DCL     10066--REDEF
READ_REBUILD.V.INDX#
     10064**DCL     10064--REDEF
READ_STATUS.STATION_
      9269**DCL      9270--REDEF
READ_STATUS.V.DVBYTE.REREAD#
      9281**DCL      9281--REDEF
READ_STATUS.V.INDX#
      9279**DCL      9279--REDEF
READ_TSN_USED.STATION_
      8979**DCL      8980--REDEF
READ_TSN_USED.V.DVBYTE.REREAD#
      8991**DCL      8991--REDEF
READ_TSN_USED.V.INDX#
      8989**DCL      8989--REDEF
REBUILD_DIR_KEY.L#
     10140**DCL     10140--IMP-SIZ
REBUILD_KEY.L#
     10167**DCL     10167--IMP-SIZ
REBUILD_NAME.L#
      9988**DCL      9988--IMP-SIZ
RET_CMDS_NAME.L#
      8623**DCL      8623--IMP-SIZ
SNVECLIST$
      8155**DCL      8155--IMP-PTR
SPEC.START
      8219**DCL      8220--REDEF
SPEC.STOP
      8220**DCL      8221--REDEF
SPECCHARS
PL6.E3A0      #002=FLM$SWITCH_PRIME_DUAL File=FLM$MOVE.:E05TSI                   TUE 07/29/97 16:12 Page:587  
      8219**DCL      8219--REDEF
TAPE_BLOCK_.W2
      8707**DCL      8708--REDEF
TAPE_CLOSE.SN_
      8072**DCL      8072--REDEF
TAPE_CLOSE.UTL_
      8073**DCL      8073--REDEF
TAPE_CLOSE.V.EXPIRE#
      8087**DCL      8087--REDEF
TAPE_CLOSE.V.TYPE#
      8085**DCL      8085--REDEF
TAPE_CLOSE.V.XTNSIZE#
      8082**DCL      8082--REDEF    8084--REDEF
TAPE_DCBLIST$
      7628**DCL      7628--IMP-PTR
TAPE_OPEN.ACSVEH_
      7937**DCL      7938--REDEF
TAPE_OPEN.ALTKEYS_
      7943**DCL      7944--REDEF    7944--REDEF
TAPE_OPEN.HDR_
      7942**DCL      7943--REDEF
TAPE_OPEN.TAB_
      7941**DCL      7942--REDEF
TAPE_OPEN.UHL_
      7935**DCL      7936--REDEF    7936--REDEF
TAPE_OPEN.V.FSN#
      7975**DCL      7975--REDEF    7975--REDEF
TAPE_OPEN.WSN_
      7941**DCL      7941--REDEF
TAPE_READ.STATION_
      7999**DCL      8000--REDEF
TAPE_READ.V.DVBYTE.REREAD#
      8011**DCL      8011--REDEF
TAPE_READ.V.INDX#
      8009**DCL      8009--REDEF
TAPE_WRITE.STATION_
PL6.E3A0      #002=FLM$SWITCH_PRIME_DUAL File=FLM$MOVE.:E05TSI                   TUE 07/29/97 16:12 Page:588  
      8037**DCL      8037--REDEF
TAPE_WRITE.V.DVBYTE.VFC#
      8044**DCL      8044--REDEF
TEMP
     10780**DCL     10792<<ASSIGN  10794>>ASSIGN  10810>>ASSIGN
TSN_USED_NAME.L#
      8926**DCL      8926--IMP-SIZ
TVECTOR.W2
      8168**DCL      8169--REDEF
WRITE_NODATA_LIST.STATION_
     10421**DCL     10421--REDEF
WRITE_NODATA_LIST.V.DVBYTE.VFC#
     10428**DCL     10428--REDEF
WRITE_PRIME_DUAL.STATION_
      9786**DCL      9786--REDEF
WRITE_PRIME_DUAL.V.DVBYTE.VFC#
      9793**DCL      9793--REDEF
WRITE_PRIME_DUAL_FILE
     10642**DCL     10795<>CALL    10811<>CALL
WRITE_PRIME_DUAL_FILE.STATION_
     10644**DCL     10644--REDEF
WRITE_PRIME_DUAL_FILE.V
     10645**DCL     10642--DCLINIT
WRITE_PRIME_DUAL_FILE.V.DVBYTE.VFC#
     10651**DCL     10651--REDEF
WRITE_REBUILD.STATION_
     10022**DCL     10022--REDEF
WRITE_REBUILD.V.DVBYTE.VFC#
     10029**DCL     10029--REDEF
WRITE_STATUS.STATION_
      9237**DCL      9237--REDEF
WRITE_STATUS.V.DVBYTE.VFC#
      9244**DCL      9244--REDEF
WRITE_TSN_USED.STATION_
      8947**DCL      8947--REDEF
WRITE_TSN_USED.V.DVBYTE.VFC#
PL6.E3A0      #002=FLM$SWITCH_PRIME_DUAL File=FLM$MOVE.:E05TSI                   TUE 07/29/97 16:12 Page:589  
      8954**DCL      8954--REDEF

PL6.E3A0      #003=FLS$SCRUB File=FLM$MOVE.:E05TSI                               TUE 07/29/97 16:14 Page:590  
     3879        1        /*T***********************************************************/
     3880        2        /*T*                                                         */
     3881        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     3882        4        /*T*                                                         */
     3883        5        /*T***********************************************************/
     3884        6        FLS$SCRUB: PROC( FIT$ );
     3885        7        /*F*  NAME: FLS$SCRUB
     3886        8              PURPOSE: Performs scrub options.
     3887        9        */
     3888       10
     3889       11    1   DCL FIT$ PTR ALIGNED;
     3890       12
     3891       13        /***
     3892       14         *** Include
     3893       15         ***/
     3894       16
     3895       17        %INCLUDE CP_6;
     3896     5576        %INCLUDE FLI_DATA_R;
     3897     6990        %INCLUDE FM$FIT;
     3898     7211        %INCLUDE FM$GRAN;
     3899     7280
     3900     7281        /***
     3901     7282         *** Entry
     3902     7283         ***/
     3903     7284
     3904     7285    1   DCL XSF$LOCCODP ENTRY(2) ALTRET;
     3905     7286
     3906     7287        /***
     3907     7288         *** Auto
     3908     7289         ***/
     3909     7290
     3910     7291    1   DCL CODE$ PTR AUTO;
     3911     7292    1   DCL CODE03$ PTR AUTO;
     3912     7293
     3913     7294        /***
     3914     7295         *** Based
     3915     7296         ***/
PL6.E3A0      #003=FLS$SCRUB File=FLM$MOVE.:E05TSI                               TUE 07/29/97 16:14 Page:591  
     3916     7297
     3917     7298        %CODE03( BASED="BASED(CODE03$)" );
     3918     7305        %CODE04( BASED="BASED(CODE$)" );
     3919     7313        %CODE05( BASED="BASED(CODE$)" );
     3920     7316        %CODE06( BASED="BASED(CODE$)" );
     3921     7320        %FM$GRAN;
     3922     7324
     3923     7325        /****************************************/
     3924     7326
     3925     7327    1      CODE03$ = ADDR(NIL);
     3926     7328    1      IF DISK_OPTION.SCRUB.CREATOR
     3927     7329    2       THEN DO;
     3928     7330    2         CODE$ = FIT$;
     3929     7331    2         CALL XSF$LOCCODP( CODE$, 04 )
     3930     7332    3          WHENRETURN DO;
     3931     7333    3            CODE04.CREATOR.ACCT = ' ';
     3932     7334    3            CODE04.CREATOR.NAME = ' ';
     3933     7335    3            END;
     3934     7336    3          WHENALTRETURN DO;
     3935     7337    3            END;
     3936     7338    2         END;
     3937     7339
     3938     7340    1      IF DISK_OPTION.SCRUB.BACKUP
     3939     7341    2       THEN DO;
     3940     7342    2         CODE$ = FIT$;
     3941     7343    2         CALL XSF$LOCCODP( CODE$, 05 )
     3942     7344    3          WHENRETURN DO;
     3943     7345    3            CODE05 = '0'B;
     3944     7346    3            END;
     3945     7347    3          WHENALTRETURN DO;
     3946     7348    3            END;
     3947     7349    2         END;
     3948     7350
     3949     7351    1      IF DISK_OPTION.SCRUB.STOW
     3950     7352    2       THEN DO;
     3951     7353    2         IF CODE03$ = ADDR(NIL)
     3952     7354    3          THEN DO;
PL6.E3A0      #003=FLS$SCRUB File=FLM$MOVE.:E05TSI                               TUE 07/29/97 16:14 Page:592  
     3953     7355    3            CODE03$ = FIT$;
     3954     7356    3            CALL XSF$LOCCODP( CODE03$, 03 )
     3955     7357    4             WHENALTRETURN DO;
     3956     7358    4               CODE03$ = ADDR(NIL);
     3957     7359    4               END;
     3958     7360    3            END;
     3959     7361    2         IF CODE03$ ~= ADDR(NIL)
     3960     7362    3          THEN DO;
     3961     7363    3            CODE03.DESC.ARCHIVE = '0'B;
     3962     7364    3            CODE03.DESC.QS = '0'B;
     3963     7365    3            CODE03.DESC.FETCH = '0'B;
     3964     7366    3            CODE03.DESC.ACTIVE = '0'B;
     3965     7367    3            END;
     3966     7368    2         CODE$ = FIT$;
     3967     7369    2         CALL XSF$LOCCODP( CODE$, 06 )
     3968     7370    3          WHENRETURN DO;
     3969     7371    3            CODE06 = '0'B;
     3970     7372    3            END;
     3971     7373    3          WHENALTRETURN DO;
     3972     7374    3            END;
     3973     7375    2         END;
     3974     7376
     3975     7377    1      RETURN;
     3976     7378
     3977     7379    1   END FLS$SCRUB;

PL6.E3A0      #003=FLS$SCRUB File=FLM$MOVE.:E05TSI                               TUE 07/29/97 16:14 Page:593  
--  Include file information  --

   FM$GRAN.:E05TOU  is referenced.
   FM$FIT.:E05TOU  is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   FLB_SUBS_C.:E05TOU  is referenced.
   FLI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FLS$SCRUB.

   Procedure FLS$SCRUB requires 98 words for executable code.
   Procedure FLS$SCRUB requires 8 words of local(AUTO) storage.

    No errors detected in file FLM$MOVE.:E05TSI    .

PL6.E3A0      #003=FLS$SCRUB File=FLM$MOVE.:E05TSI                               TUE 07/29/97 16:14 Page:594  

 Object Unit name= FLS$SCRUB                                  File name= FLM$MOVE.:E05TOU
 UTS= JUL 29 '97 16:14:39.24 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$PRE_RET
    2   Data  even  none     6      6  FLS$SCRUB
    3   Proc  even  none    98    142  FLS$SCRUB
    4  RoData even  none     8     10  FLS$SCRUB

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes            yes      Std        1  FLS$SCRUB

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 XSF$LOCCODP
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #003=FLS$SCRUB File=FLM$MOVE.:E05TSI                               TUE 07/29/97 16:14 Page:595  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  TAPE_DCBLIST$                         SNVECLIST$
     DPLIST$                               DPRESLIST$                            DISK_FILE_SPEC$
     SPECCHARS                             DISK_OPTION                           EFTWORD
     M$PRE_RET                             RET_CMDS_NAME                         B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #003=FLS$SCRUB File=FLM$MOVE.:E05TSI                               TUE 07/29/97 16:14 Page:596  


     3879        1        /*T***********************************************************/
     3880        2        /*T*                                                         */
     3881        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     3882        4        /*T*                                                         */
     3883        5        /*T***********************************************************/
     3884        6        FLS$SCRUB: PROC( FIT$ );

      6  3 000000   000000 700200 xent  FLS$SCRUB    TSX0  ! X66_AUTO_1
         3 000001   000010 000001                    ZERO    8,1

     3885        7        /*F*  NAME: FLS$SCRUB
     3886        8              PURPOSE: Performs scrub options.
     3887        9        */
     3888       10
     3889       11    1   DCL FIT$ PTR ALIGNED;
     3890       12
     3891       13        /***
     3892       14         *** Include
     3893       15         ***/
     3894       16
     3895       17        %INCLUDE CP_6;
     3896     5576        %INCLUDE FLI_DATA_R;
     3897     6990        %INCLUDE FM$FIT;
     3898     7211        %INCLUDE FM$GRAN;
     3899     7280
     3900     7281        /***
     3901     7282         *** Entry
     3902     7283         ***/
     3903     7284
     3904     7285    1   DCL XSF$LOCCODP ENTRY(2) ALTRET;
     3905     7286
     3906     7287        /***
     3907     7288         *** Auto
     3908     7289         ***/
     3909     7290
     3910     7291    1   DCL CODE$ PTR AUTO;
PL6.E3A0      #003=FLS$SCRUB File=FLM$MOVE.:E05TSI                               TUE 07/29/97 16:14 Page:597  
     3911     7292    1   DCL CODE03$ PTR AUTO;
     3912     7293
     3913     7294        /***
     3914     7295         *** Based
     3915     7296         ***/
     3916     7297
     3917     7298        %CODE03( BASED="BASED(CODE03$)" );
     3918     7305        %CODE04( BASED="BASED(CODE$)" );
     3919     7313        %CODE05( BASED="BASED(CODE$)" );
     3920     7316        %CODE06( BASED="BASED(CODE$)" );
     3921     7320        %FM$GRAN;
     3922     7324
     3923     7325        /****************************************/
     3924     7326
     3925     7327    1      CODE03$ = ADDR(NIL);

   7327  3 000002   000001 236000 xsym               LDQ     B_VECTNIL+1
         3 000003   200005 756100                    STQ     CODE03$,,AUTO

     3926     7328    1      IF DISK_OPTION.SCRUB.CREATOR

   7328  3 000004   000002 236000 xsym               LDQ     DISK_OPTION+2
         3 000005   200000 316003                    CANQ    65536,DU
         3 000006   000034 600000 3                  TZE     s:7340

     3927     7329    2       THEN DO;

     3928     7330    2         CODE$ = FIT$;

   7330  3 000007   200003 470500                    LDP0    @FIT$,,AUTO
         3 000010   000000 236100                    LDQ     0,,PR0
         3 000011   200004 756100                    STQ     CODE$,,AUTO

     3929     7331    2         CALL XSF$LOCCODP( CODE$, 04 )

   7331  3 000012   000000 236000 4                  LDQ     0
         3 000013   200007 756100                    STQ     CODE03$+2,,AUTO
PL6.E3A0      #003=FLS$SCRUB File=FLM$MOVE.:E05TSI                               TUE 07/29/97 16:14 Page:598  
         3 000014   200004 631500                    EPPR1   CODE$,,AUTO
         3 000015   200006 451500                    STP1    CODE03$+1,,AUTO
         3 000016   200006 630500                    EPPR0   CODE03$+1,,AUTO
         3 000017   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000020   000000 701000 xent               TSX1    XSF$LOCCODP
         3 000021   000034 702000 3                  TSX2    s:7340

     3930     7332    3          WHENRETURN DO;

     3931     7333    3            CODE04.CREATOR.ACCT = ' ';

   7333  3 000022   200004 470500                    LDP0    CODE$,,AUTO
         3 000023   000035 235000 xsym               LDA     B_VECTNIL+29
         3 000024   000035 236000 xsym               LDQ     B_VECTNIL+29
         3 000025   000003 755100                    STA     3,,PR0
         3 000026   000004 756100                    STQ     4,,PR0

     3932     7334    3            CODE04.CREATOR.NAME = ' ';

   7334  3 000027   200004 470500                    LDP0    CODE$,,AUTO
         3 000030   040100 100400                    MLR     fill='040'O
         3 000031   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         3 000032   000005 000014                    ADSC9   5,,PR0                   cn=0,n=12

     3933     7335    3            END;

   7335  3 000033   000034 710000 3                  TRA     s:7340

     3934     7336    3          WHENALTRETURN DO;

     3935     7337    3            END;

     3936     7338    2         END;

     3937     7339
     3938     7340    1      IF DISK_OPTION.SCRUB.BACKUP

PL6.E3A0      #003=FLS$SCRUB File=FLM$MOVE.:E05TSI                               TUE 07/29/97 16:14 Page:599  
   7340  3 000034   000002 234000 xsym               SZN     DISK_OPTION+2
         3 000035   000056 605000 3                  TPL     s:7351

     3939     7341    2       THEN DO;

     3940     7342    2         CODE$ = FIT$;

   7342  3 000036   200003 470500                    LDP0    @FIT$,,AUTO
         3 000037   000000 236100                    LDQ     0,,PR0
         3 000040   200004 756100                    STQ     CODE$,,AUTO

     3941     7343    2         CALL XSF$LOCCODP( CODE$, 05 )

   7343  3 000041   000001 236000 4                  LDQ     1
         3 000042   200007 756100                    STQ     CODE03$+2,,AUTO
         3 000043   200004 631500                    EPPR1   CODE$,,AUTO
         3 000044   200006 451500                    STP1    CODE03$+1,,AUTO
         3 000045   200006 630500                    EPPR0   CODE03$+1,,AUTO
         3 000046   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000047   000000 701000 xent               TSX1    XSF$LOCCODP
         3 000050   000056 702000 3                  TSX2    s:7351

     3942     7344    3          WHENRETURN DO;

     3943     7345    3            CODE05 = '0'B;

   7345  3 000051   200004 470500                    LDP0    CODE$,,AUTO
         3 000052   000100 100400                    MLR     fill='000'O
         3 000053   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         3 000054   000000 000014                    ADSC9   0,,PR0                   cn=0,n=12

     3944     7346    3            END;

   7346  3 000055   000056 710000 3                  TRA     s:7351

     3945     7347    3          WHENALTRETURN DO;

PL6.E3A0      #003=FLS$SCRUB File=FLM$MOVE.:E05TSI                               TUE 07/29/97 16:14 Page:600  
     3946     7348    3            END;

     3947     7349    2         END;

     3948     7350
     3949     7351    1      IF DISK_OPTION.SCRUB.STOW

   7351  3 000056   000002 236000 xsym               LDQ     DISK_OPTION+2
         3 000057   100000 316003                    CANQ    32768,DU
         3 000060   000141 600000 3                  TZE     s:7377

     3950     7352    2       THEN DO;

     3951     7353    2         IF CODE03$ = ADDR(NIL)

   7353  3 000061   200005 236100                    LDQ     CODE03$,,AUTO
         3 000062   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000063   000102 601000 3                  TNZ     s:7361

     3952     7354    3          THEN DO;

     3953     7355    3            CODE03$ = FIT$;

   7355  3 000064   200003 470500                    LDP0    @FIT$,,AUTO
         3 000065   000000 236100                    LDQ     0,,PR0
         3 000066   200005 756100                    STQ     CODE03$,,AUTO

     3954     7356    3            CALL XSF$LOCCODP( CODE03$, 03 )

   7356  3 000067   000002 236000 4                  LDQ     2
         3 000070   200007 756100                    STQ     CODE03$+2,,AUTO
         3 000071   200005 631500                    EPPR1   CODE03$,,AUTO
         3 000072   200006 451500                    STP1    CODE03$+1,,AUTO
         3 000073   200006 630500                    EPPR0   CODE03$+1,,AUTO
         3 000074   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000075   000000 701000 xent               TSX1    XSF$LOCCODP
         3 000076   000100 702000 3                  TSX2    s:7358
PL6.E3A0      #003=FLS$SCRUB File=FLM$MOVE.:E05TSI                               TUE 07/29/97 16:14 Page:601  
         3 000077   000102 710000 3                  TRA     s:7361

     3955     7357    4             WHENALTRETURN DO;

     3956     7358    4               CODE03$ = ADDR(NIL);

   7358  3 000100   000001 236000 xsym               LDQ     B_VECTNIL+1
         3 000101   200005 756100                    STQ     CODE03$,,AUTO

     3957     7359    4               END;

     3958     7360    3            END;

     3959     7361    2         IF CODE03$ ~= ADDR(NIL)

   7361  3 000102   200005 236100                    LDQ     CODE03$,,AUTO
         3 000103   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000104   000121 600000 3                  TZE     s:7368

     3960     7362    3          THEN DO;

     3961     7363    3            CODE03.DESC.ARCHIVE = '0'B;

   7363  3 000105   200005 470500                    LDP0    CODE03$,,AUTO
         3 000106   000003 236000 4                  LDQ     3
         3 000107   000001 356100                    ANSQ    1,,PR0

     3962     7364    3            CODE03.DESC.QS = '0'B;

   7364  3 000110   200005 470500                    LDP0    CODE03$,,AUTO
         3 000111   000004 236000 4                  LDQ     4
         3 000112   000001 356100                    ANSQ    1,,PR0

     3963     7365    3            CODE03.DESC.FETCH = '0'B;

   7365  3 000113   200005 470500                    LDP0    CODE03$,,AUTO
         3 000114   000005 236000 4                  LDQ     5
PL6.E3A0      #003=FLS$SCRUB File=FLM$MOVE.:E05TSI                               TUE 07/29/97 16:14 Page:602  
         3 000115   000001 356100                    ANSQ    1,,PR0

     3964     7366    3            CODE03.DESC.ACTIVE = '0'B;

   7366  3 000116   200005 470500                    LDP0    CODE03$,,AUTO
         3 000117   000006 236000 4                  LDQ     6
         3 000120   000001 356100                    ANSQ    1,,PR0

     3965     7367    3            END;

     3966     7368    2         CODE$ = FIT$;

   7368  3 000121   200003 470500                    LDP0    @FIT$,,AUTO
         3 000122   000000 236100                    LDQ     0,,PR0
         3 000123   200004 756100                    STQ     CODE$,,AUTO

     3967     7369    2         CALL XSF$LOCCODP( CODE$, 06 )

   7369  3 000124   000007 236000 4                  LDQ     7
         3 000125   200007 756100                    STQ     CODE03$+2,,AUTO
         3 000126   200004 631500                    EPPR1   CODE$,,AUTO
         3 000127   200006 451500                    STP1    CODE03$+1,,AUTO
         3 000130   200006 630500                    EPPR0   CODE03$+1,,AUTO
         3 000131   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000132   000000 701000 xent               TSX1    XSF$LOCCODP
         3 000133   000141 702000 3                  TSX2    s:7377

     3968     7370    3          WHENRETURN DO;

     3969     7371    3            CODE06 = '0'B;

   7371  3 000134   200004 470500                    LDP0    CODE$,,AUTO
         3 000135   000100 100400                    MLR     fill='000'O
         3 000136   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         3 000137   000000 000014                    ADSC9   0,,PR0                   cn=0,n=12

     3970     7372    3            END;
PL6.E3A0      #003=FLS$SCRUB File=FLM$MOVE.:E05TSI                               TUE 07/29/97 16:14 Page:603  

   7372  3 000140   000141 710000 3                  TRA     s:7377

     3971     7373    3          WHENALTRETURN DO;

     3972     7374    3            END;

     3973     7375    2         END;

     3974     7376
     3975     7377    1      RETURN;

   7377  3 000141   000000 702200 xent               TSX2  ! X66_ARET
     3976     7378
     3977     7379    1   END FLS$SCRUB;

PL6.E3A0      #003=FLS$SCRUB File=FLM$MOVE.:E05TSI                               TUE 07/29/97 16:14 Page:604  
--  Include file information  --

   FM$GRAN.:E05TOU  is referenced.
   FM$FIT.:E05TOU  is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   FLB_SUBS_C.:E05TOU  is referenced.
   FLI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FLS$SCRUB.
PL6.E3A0      #003=FLS$SCRUB File=FLM$MOVE.:E05TSI                               TUE 07/29/97 16:14 Page:605  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @FIT$                      4-0-0/w PTR         r     1 CODE$
     5-0-0/w PTR         r     1 CODE03$                   *0-0-0/w PTR         r     1 FIT$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 DISK_FILE_SPEC$            0-0-0/w STRC(145)   r     1 DISK_OPTION
     0-0-0/w PTR         r     1 DPLIST$                    0-0-0/w PTR         r     1 DPRESLIST$
     0-0-0/c ASTR(9)     r     1 RET_CMDS_NAME              0-0-0/w PTR         r     1 SNVECLIST$
     0-0-0/w PTR         r     1 TAPE_DCBLIST$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(324)   r     1 CODE03                     0-0-0/w STRC(396)   r     1 CODE04
     0-0-0/w STRC(108)   r     1 CODE05                     0-0-0/w STRC(108)   r     1 CODE06


   Procedure FLS$SCRUB requires 98 words for executable code.
   Procedure FLS$SCRUB requires 8 words of local(AUTO) storage.

    No errors detected in file FLM$MOVE.:E05TSI    .
PL6.E3A0      #003=FLS$SCRUB File=FLM$MOVE.:E05TSI                               TUE 07/29/97 16:14 Page:606  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=FLS$SCRUB File=FLM$MOVE.:E05TSI                               TUE 07/29/97 16:14 Page:607  
          MINI XREF LISTING

CODE$
      7291**DCL      7308--IMP-PTR  7314--IMP-PTR  7317--IMP-PTR  7330<<ASSIGN   7331<>CALL     7333>>ASSIGN
      7334>>ASSIGN   7342<<ASSIGN   7343<>CALL     7345>>ASSIGN   7368<<ASSIGN   7369<>CALL     7371>>ASSIGN
CODE03.DESC.ACTIVE
      7300**DCL      7366<<ASSIGN
CODE03.DESC.ARCHIVE
      7300**DCL      7363<<ASSIGN
CODE03.DESC.FETCH
      7301**DCL      7365<<ASSIGN
CODE03.DESC.QS
      7300**DCL      7364<<ASSIGN
CODE03$
      7292**DCL      7299--IMP-PTR  7327<<ASSIGN   7353>>IF       7355<<ASSIGN   7356<>CALL     7358<<ASSIGN
      7361>>IF       7363>>ASSIGN   7364>>ASSIGN   7365>>ASSIGN   7366>>ASSIGN
CODE04.CREATOR.ACCT
      7310**DCL      7333<<ASSIGN
CODE04.CREATOR.NAME
      7310**DCL      7334<<ASSIGN
CODE05
      7314**DCL      7345<<ASSIGN
CODE06
      7317**DCL      7371<<ASSIGN
CODE06.STOW.EFT
      7317**DCL      7318--REDEF
DISK_CLOSE.SN_
      6187**DCL      6187--REDEF
DISK_CLOSE.UTL_
      6188**DCL      6188--REDEF
DISK_CLOSE.V.EXPIRE#
      6202**DCL      6202--REDEF
DISK_CLOSE.V.TYPE#
      6200**DCL      6200--REDEF
PL6.E3A0      #003=FLS$SCRUB File=FLM$MOVE.:E05TSI                               TUE 07/29/97 16:14 Page:608  
DISK_CLOSE.V.XTNSIZE#
      6197**DCL      6197--REDEF    6199--REDEF
DISK_FILE_SPEC.SPEC
      6552**DCL      6554--REDEF
DISK_FILE_SPEC.SPEC.START
      6553**DCL      6553--REDEF
DISK_FILE_SPEC.SPEC.STOP
      6554**DCL      6554--REDEF
DISK_FILE_SPEC$
      6551**DCL      6552--IMP-PTR
DISK_OPEN.ACSVEH_
      6052**DCL      6053--REDEF
DISK_OPEN.ALTKEYS_
      6058**DCL      6059--REDEF    6059--REDEF
DISK_OPEN.HDR_
      6057**DCL      6058--REDEF
DISK_OPEN.TAB_
      6056**DCL      6057--REDEF
DISK_OPEN.UHL_
      6050**DCL      6051--REDEF    6051--REDEF
DISK_OPEN.V.FSN#
      6090**DCL      6090--REDEF    6090--REDEF
DISK_OPEN.WSN_
      6056**DCL      6056--REDEF
DISK_OPTION.SCRUB.BACKUP
      6565**DCL      7340>>IF
DISK_OPTION.SCRUB.CREATOR
      6565**DCL      7328>>IF
DISK_OPTION.SCRUB.STOW
      6566**DCL      7351>>IF
DISK_READ.STATION_
      6114**DCL      6115--REDEF
DISK_READ.V.DVBYTE.REREAD#
      6126**DCL      6126--REDEF
DISK_READ.V.INDX#
      6124**DCL      6124--REDEF
PL6.E3A0      #003=FLS$SCRUB File=FLM$MOVE.:E05TSI                               TUE 07/29/97 16:14 Page:609  
DISK_WRITE.STATION_
      6152**DCL      6152--REDEF
DISK_WRITE.V.DVBYTE.VFC#
      6159**DCL      6159--REDEF
DPLIST$
      6537**DCL      6549--IMP-PTR
DPRESLIST$
      6551**DCL      6551--IMP-PTR
EFTWORD
      6672**DCL      6672--REDEF
FIT$
        11**DCL         6--PROC     7330>>ASSIGN   7342>>ASSIGN   7355>>ASSIGN   7368>>ASSIGN
FPT_EXIT.V.STEPCC#
      5977**DCL      5977--REDEF
PRE_RET_CLOSE.SN_
      6915**DCL      6915--REDEF
PRE_RET_CLOSE.UTL_
      6916**DCL      6916--REDEF
PRE_RET_CLOSE.V.EXPIRE#
      6930**DCL      6930--REDEF
PRE_RET_CLOSE.V.TYPE#
      6928**DCL      6928--REDEF
PRE_RET_CLOSE.V.XTNSIZE#
      6925**DCL      6925--REDEF    6927--REDEF
PRE_RET_OPEN.ACSVEH_
      6850**DCL      6851--REDEF
PRE_RET_OPEN.ALTKEYS_
      6856**DCL      6857--REDEF    6857--REDEF
PRE_RET_OPEN.HDR_
      6855**DCL      6856--REDEF
PRE_RET_OPEN.TAB_
      6854**DCL      6855--REDEF
PRE_RET_OPEN.UHL_
      6848**DCL      6849--REDEF    6849--REDEF
PRE_RET_OPEN.V.FSN#
      6888**DCL      6888--REDEF    6888--REDEF
PL6.E3A0      #003=FLS$SCRUB File=FLM$MOVE.:E05TSI                               TUE 07/29/97 16:14 Page:610  
PRE_RET_OPEN.WSN_
      6854**DCL      6854--REDEF
PRE_RET_READ.STATION_
      6705**DCL      6706--REDEF
PRE_RET_READ.V.DVBYTE.REREAD#
      6717**DCL      6717--REDEF
PRE_RET_READ.V.INDX#
      6715**DCL      6715--REDEF
PRE_RET_WRITE.STATION_
      6743**DCL      6743--REDEF
PRE_RET_WRITE.V.DVBYTE.VFC#
      6750**DCL      6750--REDEF
RET_CMDS_NAME.L#
      6959**DCL      6959--IMP-SIZ
SNVECLIST$
      6491**DCL      6491--IMP-PTR
SPEC.START
      6555**DCL      6556--REDEF
SPEC.STOP
      6556**DCL      6557--REDEF
SPECCHARS
      6555**DCL      6555--REDEF
TAPE_CLOSE.SN_
      6408**DCL      6408--REDEF
TAPE_CLOSE.UTL_
      6409**DCL      6409--REDEF
TAPE_CLOSE.V.EXPIRE#
      6423**DCL      6423--REDEF
TAPE_CLOSE.V.TYPE#
      6421**DCL      6421--REDEF
TAPE_CLOSE.V.XTNSIZE#
      6418**DCL      6418--REDEF    6420--REDEF
TAPE_DCBLIST$
      5964**DCL      5964--IMP-PTR
TAPE_OPEN.ACSVEH_
      6273**DCL      6274--REDEF
PL6.E3A0      #003=FLS$SCRUB File=FLM$MOVE.:E05TSI                               TUE 07/29/97 16:14 Page:611  
TAPE_OPEN.ALTKEYS_
      6279**DCL      6280--REDEF    6280--REDEF
TAPE_OPEN.HDR_
      6278**DCL      6279--REDEF
TAPE_OPEN.TAB_
      6277**DCL      6278--REDEF
TAPE_OPEN.UHL_
      6271**DCL      6272--REDEF    6272--REDEF
TAPE_OPEN.V.FSN#
      6311**DCL      6311--REDEF    6311--REDEF
TAPE_OPEN.WSN_
      6277**DCL      6277--REDEF
TAPE_READ.STATION_
      6335**DCL      6336--REDEF
TAPE_READ.V.DVBYTE.REREAD#
      6347**DCL      6347--REDEF
TAPE_READ.V.INDX#
      6345**DCL      6345--REDEF
TAPE_WRITE.STATION_
      6373**DCL      6373--REDEF
TAPE_WRITE.V.DVBYTE.VFC#
      6380**DCL      6380--REDEF
TVECTOR.W2
      6504**DCL      6505--REDEF
XSF$LOCCODP
      7285**DCL-ENT  7331--CALL     7343--CALL     7356--CALL     7369--CALL
