/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
/*T*                                                         */
/*T***********************************************************/
SYMBO: PROC MAIN;
       %INCLUDE CP_6;
       %INCLUDE CP_6_SUBS;
       %INCLUDE KL_SUPER_C;
       %INCLUDE FOM$STRUCT;
       %INCLUDE B_SEGIDS_C;
       %INCLUDE B_ERRORS_C;
       %INCLUDE XU_FORMAT_C;
       %INCLUDE DA_MAP_R;
       %INCLUDE NK$LDCT;
       %INCLUDE B$JIT;
       %INCLUDE SYMBO_C61;
/* */
       %FPT_OPEN(FPTN=OPEN_HLP, DCB=M$HLP, SHARE=ALL, FUN=IN,
          NAME=VLP_HLP, ACCT=VLP_SYS, ASN=FILE);
       %FPT_OPEN(FPTN=OPEN_SI, DCB=M$SI);
       %VLP_NAME(FPTN=VLP_HLP, NAME=':HLP');
       %VLP_ACCT(FPTN=VLP_SYS, ACCT=':SYS');
       %FPT_READ(FPTN=READ_CVT, BUF=WSNCVT, DCB=M$HLP,
          KEY=TERM_KEY, KEYS=YES);
       %FPT_PRIV(FPTN=FPT_FMR, PRIV=%PR_FMREAD#);
       %FPT_PRIV(FPTN=FPT_SPCLMM, PRIV=%PR_SPCLMM#);
       %FPT_PRIV(FPTN=FPT_DISPJOB, PRIV=%PR_DISPJOB#, AUTH=YES);
       %FPT_JOBSTATS(ORDER=SRCH, OUTPUT=YES,
          CRITERIA=VLP_CRITERIA);
       %VLP_CRITERIA(WSN='?');
       %VLA_JOBSTATS_OSRCH(STCLASS="BASED(VLA_OSRCH$)");
       %VLR_JOBSTATS_OSRCH(STCLASS="BASED(VLR_OSRCH$)");
       %FPT_TRAP(ERRORS=CLEANUP, MEMORY=TRAP, MISSING_PAGE=TRAP);
       %FPT_GDS(RESULTS=VLP_VECTOR);
       %VLP_VECTOR(SEGID=%DS3SID);
       %F$DCB(BASED="BASED(DCB$)");
       %B$TCB;
       %B$ALT;
       %F_FDS(BUF=XBUF, DCB=M$LO);
       %KL_WSNCVT(NAME=KL_WSNCVT, STCLASS="BASED(WSNCVT$)");
       %FOM$SYMB(NAME=FOM$SYMB);
       %NK$LDCT;
/* */
       DCL M$SI DCB;
       DCL M$DO DCB;
       DCL M$HLP DCB;
       DCL M$LO DCB;
/* */
       DCL DAM$INIT ENTRY ALTRET;
       DCL DAM$MAP ENTRY(5) ALTRET;
       DCL X$WRITE ENTRY(22);
       DCL XUR$ERRMSG ENTRY(7) ALTRET;
       DCL CLEANUP ENTRY ASYNC;
       DCL PRINTDO ENTRY(1);
/* */
       DCL B$TCB$ PTR SYMREF;
       DCL B$JIT$ PTR SYMREF;
/* */
       DCL OUTPUT UBIN STATIC SYMDEF INIT(0);
       DCL 1 RESET STATIC SYMDEF,
            2 FMR BIT(1) UNAL INIT('0'B),
            2 SPCLMM BIT(1) UNAL INIT('0'B),
            2 DISPJOB BIT(1) UNAL INIT('0'B);
       DCL 1 ERR_TABLE(0:1) CONSTANT SYMDEF,
            2 SIZE UBIN INIT(11, 21),
            2 MESSAGE CHAR(80) INIT(
'No such WSN',
'No output at that WSN');
/* */
       DCL WSNCVT$ PTR CONSTANT INIT(ADDR(WSNCVT));
       DCL WSNCVT CHAR(8192) STATIC;
       DCL VLR_OSRCH$ PTR STATIC;
       DCL VLA_OSRCH$ PTR STATIC;
       DCL MM_DSMAX$ PTR STATIC;
       DCL MM$DSMAX(0:0) UBIN(9) CALIGNED BASED(MM_DSMAX$);
       DCL 1 LDCT_PTR STATIC,
            2 * UBIN(24) UNAL INIT(0),
            2 SEGID BIT(12) UNAL INIT(%LDCTSID);
       DCL LDCT$ REDEF LDCT_PTR PTR;
       DCL DCB$ PTR;
       DCL WSN CHAR(8);
       DCL FRAMES SBIN;
       DCL RESOURCE CHAR(2);
       DCL TWSN UBIN;
       DCL 1 DEVNM,
            2 NAME,
             3 RES CHAR(2) CALIGNED,
             3 NUM CHAR(2) CALIGNED,
            2 TWSN CHAR(4) CALIGNED;
       DCL DEVNM1 REDEF DEVNM CHAR(8);
       DCL SYMB$ PTR;
       DCL GRANS SBIN;
       DCL XBUF CHAR(80) STATIC;
/* */
       DCL SEARCH_TABLE(0:511) UBIN(9) CALIGNED CONSTANT INIT(
          1*48,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1,
          1*448);
/* */
       DCL FMT CHAR(0) CONSTANT INIT(
'Sysid %D-%D outputting on %A, %D granules remaining');
       DCL 1 TERM_KEY CONSTANT SYMDEF,
            2 * UBIN(9) CALIGNED INIT(4),
            2 * CHAR(4) CALIGNED INIT('TERM');
/* */
       CALL M$SPRIV(FPT_SPCLMM) ALTRET(TRY_AUTH);
       DO WHILE('0'B);
TRY_AUTH: ;
          FPT_SPCLMM.V.AUTH#=%YES#;
          CALL M$SPRIV(FPT_SPCLMM) ALTRET(CROAK);
          RESET.SPCLMM=%YES#;
       END;
 
       CALL DAM$INIT;
       CALL DAM$MAP(LDCT$, LDCT$);
 
       CALL M$OPEN(OPEN_SI) ALTRET(IGNORE);
IGNORE: ;
       DCB$=DCBADDR(DCBNUM(M$SI));
       WSN=F$DCB.WSN#;
       RESOURCE=F$DCB.RESNT.TYP;
       IF WSN = '        ' THEN
          DO;   /* USE DEFAULTS */
          WSN=B$JIT.WOO;
          RESOURCE='LP';
          END;  /* USE DEFAULTS */
 
       CALL CVTWSN ALTRET(MEXIT);
 
       CALL GETJOBS ALTRET(MEXIT);
 
       CALL SRCH;
 
CROAK: CALL XUR$ERRMSG(B$TCB$->B$TCB.ALT$->B$ALT.ERR,
          B$TCB$->B$TCB.ALT$->B$ALT.DCB#);
MEXIT: CALL M$EXIT;
       %EJECT;
CHECK: PROC ALTRET;
       DCL I SBIN;
/* */
       DO I=0 TO VLR_JOBSTATS_OSRCH.FOUND-1;
          VLA_OSRCH$=ADDR(VLR_JOBSTATS_OSRCH.F(I));
          IF VLA_JOBSTATS_OSRCH.DEVNAME = DEVNM.NAME.NUM AND
             VLA_JOBSTATS_OSRCH.TNAME = WSN AND
             VLA_JOBSTATS_OSRCH.DEVTYP = DEVNM.NAME.RES THEN
             RETURN;
       END;  /* DO I */
 
       ALTRETURN;
       END CHECK;
       %EJECT;
CVTWSN: PROC ALTRET;
/* */
       CALL M$SPRIV(FPT_FMR) ALTRET(TRY_AUTH);
       DO WHILE('0'B);
TRY_AUTH: ;
          FPT_FMR.V.AUTH#=%YES#;
          CALL M$SPRIV(FPT_FMR) ALTRET(ERR);
          RESET.FMR=%YES#;
       END;
 
       CALL M$OPEN(OPEN_HLP) ALTRET(ERR);
       CALL M$READ(READ_CVT) ALTRET(ERR);
       IF RESET.FMR = %YES# THEN
          CALL M$RPRIV(FPT_FMR);
 
       RETURN;
ERR:   IF RESET.FMR = %YES# THEN
          CALL M$RPRIV(FPT_FMR);
       CALL XUR$ERRMSG(B$TCB$->B$TCB.ALT$->B$ALT.ERR,
          B$TCB$->B$TCB.ALT$->B$ALT.DCB#);
       ALTRETURN;
       END CVTWSN;
       %EJECT;
GETJOBS: PROC ALTRET;
/* */
       IF B$JIT.PRIV.AUTH & %PR_DISPJOB# AND
          NOT(B$JIT.PRIV.ACTIVE & %PR_DISPJOB#) THEN
          DO;   /* TURN ON DISPJOB */
          CALL M$SPRIV(FPT_DISPJOB) ALTRET(ERR);
          RESET.DISPJOB=%YES#;
          END;  /* TURN ON DISPJOB */
 
       VLP_CRITERIA.DEVTYP#=RESOURCE;
 
       FRAMES=100;
 
TRY_AGAIN: ;
       FPT_GDS.V.SEGSIZE#=FRAMES*SIZEW(VLA_JOBSTATS_OSRCH);
       CALL M$GDS(FPT_GDS) ALTRET(ERR);
 
       VLR_OSRCH$=VLP_VECTOR.PTR$;
       FPT_JOBSTATS.RESULTS_=VLP_VECTOR;
       CALL M$JOBSTATS(FPT_JOBSTATS) ALTRET(CHECK_ERROR);
 
       IF RESET.DISPJOB = %YES# THEN
          CALL M$RPRIV(FPT_DISPJOB);
       RETURN;
CHECK_ERROR: ;
       IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE = %E$JSIRAS THEN
          GOTO TRY_AGAIN;
 
       IF RESET.DISPJOB = %YES# THEN
          CALL M$RPRIV(FPT_DISPJOB);
 
       IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE = %E$NOTFND THEN
          DO;   /* USE MY ERROR MESSAGE */
          CALL PRINTDO(%NO_OUTPUT);
          ALTRETURN;
          END;  /* USE MY ERROR MESSAGE */
 
ERR:   CALL XUR$ERRMSG(B$TCB$->B$TCB.ALT$->B$ALT.ERR,
          B$TCB$->B$TCB.ALT$->B$ALT.DCB#);
 
       IF RESET.DISPJOB = %YES# THEN
          CALL M$RPRIV(FPT_DISPJOB);
       ALTRETURN;
       END GETJOBS;
       %EJECT;
SRCH:  PROC;
       DCL I SBIN;
       DCL DUMMY SBIN;
/* */
       CALL M$TRAP(FPT_TRAP);
       DO WHILE ('1'B);
          IF LDCT$->NK$LDCT.DFLG.SYMBIONT THEN
             DO;   /* CHECK TWSN */
             DEVNM1=LDCT$->NK$LDCT.DEVNM;
             CALL SEARCH(I, DUMMY, SEARCH_TABLE, DEVNM.TWSN);
             IF I = 4 THEN
                DO;   /* TWSN OKAY */
                CALL CHARBIN(TWSN, DEVNM.TWSN);
                IF KL_WSNCVT.WSN(TWSN) = WSN AND
                   RESOURCE = DEVNM.NAME.RES THEN
                   DO;   /* FOUND A MATCH */
                   CALL CHECK ALTRET(DONT_PRINT);
                   CALL WRITE_INFO;
DONT_PRINT:        END;   /* FOUND A MATCH */
                END;  /* TWSN OKAY */
             END;  /* CHECK TWSN */
          LDCT$=PINCRW(LDCT$, SIZEW(NK$LDCT));
       END;  /* DO FOREVER */
 
       END SRCH;
       %EJECT;
WRITE_INFO: PROC;
/* */
       SYMB$=LDCT$->NK$LDCT.SYMB$;
       CALL DAM$MAP(SYMB$, SYMB$);
       GRANS=VLA_JOBSTATS_OSRCH.GRANS-SYMB$->FOM$SYMB.BR.BLK#;
 
       CALL X$WRITE(F_FDS, VECTOR(FMT),
          VECTOR(VLA_JOBSTATS_OSRCH.SYSID),
          VECTOR(VLA_JOBSTATS_OSRCH.NUM),
          VECTOR(DEVNM.NAME),
          VECTOR(GRANS));
 
       OUTPUT=1;
       RETURN;
       END WRITE_INFO;
       END SYMBO;
       %EOD;
/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
/*T*                                                         */
/*T***********************************************************/
CLEANUP: PROC ASYNC;
       %INCLUDE CP_6;
       %INCLUDE CP_6_SUBS;
       %INCLUDE SYMBO_C61;
       %INCLUDE B$JIT;
       DCL B$JIT$ PTR SYMREF;
/* */
       %FPT_PRIV(FPTN=FPT_SPCLMM, PRIV=%PR_SPCLMM#);
/* */
       DCL PRINTDO ENTRY(1);
       DCL OUTPUT SBIN SYMREF;
       DCL 1 RESET SYMREF,
            2 FMR BIT(1) UNAL,
            2 SPCLMM BIT(1) UNAL,
            2 DISPJOB BIT(1) UNAL;
/* */
       IF OUTPUT = 0 THEN
          CALL PRINTDO(%NO_OUTPUT);
 
       IF RESET.SPCLMM = %YES# THEN
          CALL M$RPRIV(FPT_SPCLMM);
 
       CALL M$EXIT;
       END CLEANUP;
       %EOD;
/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
/*T*                                                         */
/*T***********************************************************/
PRINTDO: PROC(ERRNUM);
       DCL ERRNUM SBIN;
/* */
       %INCLUDE CP_6;
       %INCLUDE SYMBO_C61;
/* */
       %FPT_WRITE(FPTN=WRITE_DO, DCB=M$DO);
       DCL M$DO DCB;
       DCL 1 ERR_TABLE(0:0) SYMREF,
            2 SIZE UBIN,
            2 MESSAGE CHAR(80);
/* */
       WRITE_DO.BUF_.BOUND=ERR_TABLE.SIZE(ERRNUM)-1;
       WRITE_DO.BUF_.BUF$=ADDR(ERR_TABLE.MESSAGE(ERRNUM));
       CALL M$WRITE(WRITE_DO);
 
       RETURN;
       END PRINTDO;
