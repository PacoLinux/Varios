

CC.C03    File=zbe$cf_idom:c.:ZBC3TSI                                               Fri Aug 22 1997  Page=1  
        1         1             /* $Header: cf_idom.c,v 1.3 87/03/10 10:45:47 ceriel Exp $ */
        2         2             /*
        3         3              * (c) copyright 1987 by the Vrije Universiteit, Amsterdam, The Netherlands.
        4         4              * See the copyright notice in the ACK home directory, in the file "Copyright"
                               .
        5         5              */
        6         6             /*  C O N T R O L   F L O W
        7         7              *
        8         8              *  C F _ I D O M . C
        9         9              */
       10        10
       11        11
       12        12             #include "types:h"
       13        13             #include "debug:h"
       14        14             #include "lset:h"
       15        15             #include "alloc:h"
       16        16             #include "cf:h"
       17        17
       18        18
       19        19             /* The algorithm for finding dominators in a flowgraph
       20        20              * that is used here, was developed by Thomas Lengauer
       21        21              * and Robert E. Tarjan of Stanford University.
       22        22              * The algorithm is described in their article:
       23        23              *      A Fast Algorithm for Finding Dominators
       24        24              *      in a Flowgraph
       25        25              *  which was published in:
       26        26              *     ACM Transactions on Programming Languages and Systems,
       27        27              *     Vol. 1, No. 1, July 1979, Pages 121-141.
       28        28              */
       29        29
       30        30
       31        31             #define UNREACHABLE(b) (b->B_SEMI == (short) 0)
       32        32
       33        33             short  dfs_nr;
       34        34             bblock_p *vertex;  /* dynamically allocated array */
       35        35
       36        36
CC.C03    File=zbe$cf_idom:c.:ZBC3TSI                                               Fri Aug 22 1997  Page=2  
       37        37             STATIC dfs(v)
       38        38              bblock_p v;
       39        39             {
       40        40    1         /* Depth First Search */
       41        41    1
       42        42    1         Lindex i;
       43        43    1         bblock_p w;
       44        44    1
       45        45    1         v->B_SEMI = ++dfs_nr;
       46        46    1         vertex[dfs_nr] = v->B_LABEL = v;
       47        47    1         v->B_ANCESTOR = (bblock_p) 0;
       48        48    1         for (i = Lfirst(v->b_succ); i != (Lindex) 0; i = Lnext(i,v->b_succ)) {
       49        49    2            w = (bblock_p) Lelem(i);
       50        50    2            if (w->B_SEMI == 0) {
       51        51    3               w->B_PARENT = v;
       52        52    3               dfs(w);
       53        53    3            }
       54        54    2         }
       55        55    1        }
       56        56
       57        57
       58        58
       59        59             STATIC compress(v)
       60        60              bblock_p v;
       61        61             {
       62        62    1         if (v->B_ANCESTOR->B_ANCESTOR != (bblock_p) 0) {
       63        63    2            compress(v->B_ANCESTOR);
       64        64    2            if (v->B_ANCESTOR->B_LABEL->B_SEMI < v->B_LABEL->B_SEMI) {
       65        65    3               v->B_LABEL = v->B_ANCESTOR->B_LABEL;
       66        66    3            }
       67        67    2            v->B_ANCESTOR = v->B_ANCESTOR->B_ANCESTOR;
       68        68    2         }
       69        69    1        }
       70        70
       71        71
       72        72
       73        73             STATIC bblock_p eval(v)
CC.C03    File=zbe$cf_idom:c.:ZBC3TSI                                               Fri Aug 22 1997  Page=3  
       74        74              bblock_p v;
       75        75             {
       76        76    1         if (v->B_ANCESTOR == (bblock_p) 0) {
       77        77    2            return v;
       78        78    2         } else {
       79        79    2            compress(v);
       80        80    2            return v->B_LABEL;
       81        81    2         }
       82        82    1        }
       83        83
       84        84
       85        85
       86        86             STATIC linkblocks(v,w)
       87        87              bblock_p v,w;
       88        88             {
       89        89    1         w->B_ANCESTOR = v;
       90        90    1        }
       91        91
       92        92
       93        93
       94        94             dominators(r,n)
       95        95              bblock_p r;
       96        96              short n;
       97        97             {
       98        98    1         /* Compute the immediate dominator of every basic
       99        99    1          * block in the control flow graph rooted by r.
      100       100    1          */
      101       101    1
      102       102    1         register short i;
      103       103    1         Lindex ind, next;
      104       104    1         bblock_p v,w,u;
      105       105    1
      106       106    1         dfs_nr = 0;
      107       107    1         vertex = (bblock_p *) newmap(n);
      108       108    1         /* allocate vertex (dynamic array). All remaining
      109       109    1          * initializations were done by the routine
      110       110    1          * nextblock of get.c.
CC.C03    File=zbe$cf_idom:c.:ZBC3TSI                                               Fri Aug 22 1997  Page=4  
      111       111    1          */
      112       112    1         dfs(r);
      113       113    1         for (i = dfs_nr; i > 1; i--) {
      114       114    2            w = vertex[i];
      115       115    2            for (ind = Lfirst(w->b_pred); ind != (Lindex) 0;
      116       116    2                        ind = Lnext(ind,w->b_pred)) {
      117       117    3               v = (bblock_p) Lelem(ind);
      118       118    3               if (UNREACHABLE(v)) continue;
      119       119    3               u = eval(v);
      120       120    3               if (u->B_SEMI < w->B_SEMI) {
      121       121    4                  w->B_SEMI = u->B_SEMI;
      122       122    4               }
      123       123    3            }
      124       124    2            Ladd(w,&(vertex[w->B_SEMI]->B_BUCKET));
      125       125    2            linkblocks(w->B_PARENT,w);
      126       126    2            for (ind = Lfirst(w->B_PARENT->B_BUCKET); ind != (Lindex) 0;
      127       127    2                              ind = next) {
      128       128    3               next = Lnext(ind,w->B_PARENT->B_BUCKET);
      129       129    3               v = (bblock_p) Lelem(ind);
      130       130    3               Lremove(v,&w->B_PARENT->B_BUCKET);
      131       131    3               u = eval(v);
      132       132    3               v->b_idom = (u->B_SEMI < v->B_SEMI ? u : w->B_PARENT);
      133       133    3            }
      134       134    2         }
      135       135    1         for (i = 2; i <= dfs_nr; i++) {
      136       136    2            w = vertex[i];
      137       137    2            if (w->b_idom != vertex[w->B_SEMI]) {
      138       138    3               w->b_idom = w->b_idom->b_idom;
      139       139    3            }
      140       140    2         }
      141       141    1         r->b_idom = (bblock_p) 0;
      142       142    1         oldmap(vertex,n);   /* release memory for dynamic array vertex */
      143       143    1        }
      144       144
---  Include file information  ---

   zbe$types:h.:ZBC3TOU. is referenced
CC.C03    File=zbe$cf_idom:c.:ZBC3TSI                                               Fri Aug 22 1997  Page=5  
   zbe$debug:h.:ZBC3TOU. is referenced
   zbe$lset:h.:ZBC3TOU. is referenced
   zbe$alloc:h.:ZBC3TOU. is referenced
   zbe$cf:h.:ZBC3TOU. is referenced

No diagnostics were issued in the file zbe$cf_idom:c.:ZBC3TSI
