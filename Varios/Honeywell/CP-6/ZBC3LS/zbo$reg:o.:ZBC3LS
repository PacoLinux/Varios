

CC.C03    File=zbo$reg:c.:ZBC3TSI                                                   Fri Aug 22 1997  Page=1  
        1         1             #ifndef NORCSID
        2         2             static char rcsid[] = "$Header: reg.c,v 2.3 87/03/10 01:41:14 ceriel Exp $";
        3         3             #endif
        4         4
        5         5             #include "assert:h"
        6         6             #include "param:h"
        7         7             #include "types:h"
        8         8             #include "line:h"
        9         9             #include "proinf:h"
       10        10             #include "alloc:h"
       11        11             #include "em_spec:h"
       12        12             #include "em_pseu:h"
       13        13             #include "em_mes:h"
       14        14             #include "ext:h"
       15        15
       16        16             /*
       17        17              * (c) copyright 1987 by the Vrije Universiteit, Amsterdam, The Netherlands.
       18        18              * See the copyright notice in the ACK home directory, in the file "Copyright"
                               .
       19        19              *
       20        20              * Author: Hans van Staveren
       21        21              */
       22        22
       23        23             regvar(ap) register arg_p ap; {
       24        24    1         register reg_p rp;
       25        25    1         register i;
       26        26    1
       27        27    1         rp = newreg();
       28        28    1         i=0;
       29        29    1         while (ap!=(arg_p)0 && ap->a_typ==ARGOFF && i<4) {
       30        30    2            rp->r_par[i++]=ap->a_a.a_offset;
       31        31    2            ap=ap->a_next;
       32        32    2         }
       33        33    1         /*
       34        34    1          * Omit incomplete messages
       35        35    1          */
       36        36    1         switch(i) {
CC.C03    File=zbo$reg:c.:ZBC3TSI                                                   Fri Aug 22 1997  Page=2  
       37        37    2         default:assert(FALSE);
       38        38    2         case 0:
       39        39    2         case 1:
       40        40    2         case 2:  oldreg(rp); return;
       41        41    2         case 3: rp->r_par[3]= (offset) 0; break;
       42        42    2         case 4: break;
       43        43    2         }
       44        44    1         rp->r_next = curpro.freg;
       45        45    1         curpro.freg = rp;
       46        46    1        }
       47        47
       48        48             inreg(off) offset off; {
       49        49    1         register reg_p rp;
       50        50    1
       51        51    1         for (rp=curpro.freg; rp != (reg_p) 0; rp=rp->r_next)
       52        52    1            if( rp->r_par[0] == off)
       53        53    1               return(TRUE);
       54        54    1         return(FALSE);
       55        55    1        }
       56        56
       57        57             outregs() {
       58        58    1         register reg_p rp,tp;
       59        59    1         register i;
       60        60    1
       61        61    1         for(rp=curpro.freg; rp != (reg_p) 0; rp = tp) {
       62        62    2            tp = rp->r_next;
       63        63    2            if (rp->r_par[3] != 0) {
       64        64    3               outinst(ps_mes);
       65        65    3               outoff((offset)ms_reg);
       66        66    3               for(i=0;i<4;i++)
       67        67    3                  outoff(rp->r_par[i]);
       68        68    3               outinst(sp_cend);
       69        69    3            }
       70        70    2            oldreg(rp);
       71        71    2         }
       72        72    1         /* List of register messages is followed by an empty ms_reg
       73        73    1          * unless an ms_gto was in this procedure, then the ms_gto
CC.C03    File=zbo$reg:c.:ZBC3TSI                                                   Fri Aug 22 1997  Page=3  
       74        74    1          * will be output. Kludgy.
       75        75    1          */
       76        76    1         outinst(ps_mes);
       77        77    1         outoff((offset)(curpro.gtoproc? ms_gto : ms_reg));
       78        78    1         outinst(sp_cend);
       79        79    1         curpro.freg = (reg_p) 0;
       80        80    1        }
       81        81
       82        82             incregusage(off) offset off; {
       83        83    1         register reg_p rp;
       84        84    1
       85        85    1        #ifndef GLOBAL_OPT
       86        86    1         /* If we're optimizing the output of the global optimizer
       87        87    1          * we must not change the count fields of the register messages.
       88        88    1          */
       89        89    1         for(rp=curpro.freg; rp != (reg_p) 0; rp=rp->r_next)
       90        90    1            if (rp->r_par[0]==off) {
       91        91    2               rp->r_par[3]++;
       92        92    2               return;
       93        93    2            }
       94        94    1        #endif
       95        95    1        }
       96        96
---  Include file information  ---

   zbo$assert:h.:ZBC3TOU. is referenced
   zbo$param:h.:ZBC3TOU. is referenced
   zbo$types:h.:ZBC3TOU. is referenced
   zbo$line:h.:ZBC3TOU. is referenced
   zbo$proinf:h.:ZBC3TOU. is referenced
   zbo$alloc:h.:ZBC3TOU. is referenced
   em_spec:h.:ZBC3TOU. is referenced
   em_pseu:h.:ZBC3TOU. is referenced
   em_mes:h.:ZBC3TOU. is referenced
   zbo$ext:h.:ZBC3TOU. is referenced
   stdio:h.:LIBRARY. is referenced

CC.C03    File=zbo$reg:c.:ZBC3TSI                                                   Fri Aug 22 1997  Page=4  
No diagnostics were issued in the file zbo$reg:c.:ZBC3TSI
