

11:36 AUG 20 '97 zbp$expression:g.:ZBC3TSI                                 1    
    1      /* $Header: expression.g,v 1.3 87/03/10 10:35:09 ceriel Exp $ */
    2      /*
    3       * (c) copyright 1987 by the Vrije Universiteit, Amsterdam, The Netherlands.
    4       * See the copyright notice in the ACK home directory, in the file "Copyright".
    5       */
    6      /*  EXPRESSION SYNTAX PARSER   */
    7
    8      %lexical  LLlex;
    9      %start    If_expr, if_expression;
   10
   11      {
   12      #include "LLlex:h"
   13
   14      extern int ifval;
   15      }
   16
   17      if_expression
   18      :
   19       constant_expression(&ifval)
   20      ;
   21
   22      /* 7.1 */
   23      primary(int *pval;)
   24      :
   25       constant(pval)
   26      |
   27       '(' expression(pval) ')'
   28      ;
   29
   30      unary(int *pval;)
   31       {int oper;}
   32      :
   33       unop(&oper)
   34       unary(pval)
   35       { ch7mon(oper, pval); }
   36      |
   37       primary(pval)
11:36 AUG 20 '97 zbp$expression:g.:ZBC3TSI                                 2    
   38      ;
   39
   40      binary_expression(int maxrank; int *pval;)
   41       {int oper; int val1;}
   42      :
   43       unary(pval)
   44       [%while (rank_of(DOT) <= maxrank)
   45          binop(&oper)
   46          binary_expression(rank_of(oper)-1, &val1)
   47          {
   48             ch7bin(pval, oper, val1);
   49          }
   50       ]*
   51      ;
   52
   53      /* 7.13 */
   54      conditional_expression(int *pval;)
   55       {int val1 = 0, val2 = 0;}
   56      :
   57       /* allow all binary operators */
   58       binary_expression(rank_of('?') - 1, pval)
   59       [  '?'
   60          expression(&val1)
   61          ':'
   62          assignment_expression(&val2)
   63          { *pval = (*pval ? val1 : val2); }
   64       ]?
   65      ;
   66
   67      /* 7.14 */
   68      assignment_expression(int *pval;)
   69      :
   70       conditional_expression(pval)
   71      ;
   72
   73      /* 7.15 */
   74      expression(int *pval;)
11:36 AUG 20 '97 zbp$expression:g.:ZBC3TSI                                 3    
   75       {int val1;}
   76      :
   77       assignment_expression(pval)
   78       [  ','
   79          assignment_expression(&val1)
   80          {
   81             ch7bin(pval, ',', val1);
   82          }
   83       ]*
   84      ;
   85
   86      unop(int *oper;) :
   87       [ '-' | '!' | '~' ]
   88       {*oper = DOT;}
   89      ;
   90
   91      multop:
   92       '*' | '/' | '%'
   93      ;
   94
   95      addop:
   96       '+' | '-'
   97      ;
   98
   99      shiftop:
  100       LEFT | RIGHT
  101      ;
  102
  103      relop:
  104       '<' | '>' | LESSEQ | GREATEREQ
  105      ;
  106
  107      eqop:
  108       EQUAL | NOTEQUAL
  109      ;
  110
  111      arithop:
11:36 AUG 20 '97 zbp$expression:g.:ZBC3TSI                                 4    
  112       multop | addop | shiftop
  113      |
  114       '&' | '^' | '|'
  115      ;
  116
  117      binop(int *oper;) :
  118       [ arithop | relop | eqop | AND | OR ]
  119       {*oper = DOT;}
  120      ;
  121
  122      constant(int *pval;) :
  123       INTEGER
  124       {*pval = dot.tk_val;}
  125      ;
  126
  127      constant_expression (int *pval;) :
  128       assignment_expression(pval)
  129      ;
  130

