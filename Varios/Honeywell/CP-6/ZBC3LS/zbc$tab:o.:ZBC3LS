

CC.C03    File=zbc$tab:c.:ZBC3TSI                                                   Fri Aug 22 1997  Page=1  
        1         1             /*
        2         2              * (c) copyright 1987 by the Vrije Universiteit, Amsterdam, The Netherlands.
        3         3              * See the copyright notice in the ACK home directory, in the file "Copyright"
                               .
        4         4              */
        5         5             /* $Header: tab.c,v 3.2 87/03/10 17:49:20 ceriel Exp $ */
        6         6             /*  @cc tab.c -o $INSTALLDIR/tab@
        7         7              tab - table generator
        8         8
        9         9              Author: Erik Baalbergen (..tjalk!erikb)
       10        10             */
       11        11
       12        12             #include <stdio:h>
       13        13
       14        14             #define MAXTAB  10000
       15        15             #define MAXBUF  10000
       16        16             #define COMCOM  '-'
       17        17             #define FILECOM '%'
       18        18
       19        19             int InputForm = 'c';
       20        20             char OutputForm[MAXBUF] = "%s,\n";
       21        21             int TabSize = 257;
       22        22             char *Table[MAXTAB];
       23        23             char *ProgCall;
       24        24
       25        25             main(argc, argv)
       26        26              char *argv[];
       27        27             {
       28        28    1         ProgCall = *argv++;
       29        29    1         argc--;
       30        30    1         while (argc-- > 0) {
       31        31    2            if (**argv == COMCOM) {
       32        32    3               option(*argv++);
       33        33    3            }
       34        34    2            else {
       35        35    3               process(*argv++, InputForm);
       36        36    3            }
CC.C03    File=zbc$tab:c.:ZBC3TSI                                                   Fri Aug 22 1997  Page=2  
       37        37    2         }
       38        38    1         exit(0);
       39        39    1        }
       40        40
       41        41             char *
       42        42             Salloc(s)
       43        43              char *s;
       44        44             {
       45        45    1         extern char *malloc(), *strcpy();
       46        46    1         char *ns = malloc((unsigned int)strlen(s) + 1);
       47        47    1
       48        48    1         if (ns) {
       49        49    2            strcpy(ns, s);
       50        50    2         }
       51        51    1         return ns;
       52        52    1        }
       53        53
       54        54             option(str)
       55        55              char *str;
       56        56             {
       57        57    1         /* note that *str indicates the source of the option:
       58        58    1            either COMCOM (from command line) or FILECOM (from a file).
       59        59    1         */
       60        60    1
       61        61    1         switch (*++str) {
       62        62    2
       63        63    2         case ' ':   /* command */
       64        64    2         case '\t':
       65        65    2         case '\0':
       66        66    2            break;
       67        67    2         case 'I':
       68        68    2            InputForm = *++str;
       69        69    2            break;
       70        70    2         case 'f':
       71        71    2            if (*++str == '\0') {
       72        72    3               fprintf(stderr, "%s: -f: name expected\n", ProgCall);
       73        73    3               exit(1);
CC.C03    File=zbc$tab:c.:ZBC3TSI                                                   Fri Aug 22 1997  Page=3  
       74        74    3            }
       75        75    2            DoFile(str);
       76        76    2            break;
       77        77    2         case 'F':
       78        78    2            sprintf(OutputForm, "%s\n", ++str);
       79        79    2            break;
       80        80    2         case 'T':
       81        81    2            printf("%s\n", ++str);
       82        82    2            break;
       83        83    2         case 'p':
       84        84    2            PrintTable();
       85        85    2            break;
       86        86    2         case 'C':
       87        87    2            ClearTable();
       88        88    2            break;
       89        89    2         case 'S':
       90        90    2         {
       91        91    3            register i = stoi(++str);
       92        92    3
       93        93    3            if (i <= 0 || i > MAXTAB) {
       94        94    4               fprintf(stderr, "%s: size would exceed maximum\n",
       95        95    4                  ProgCall);
       96        96    4            }
       97        97    3            else {
       98        98    4               TabSize = i;
       99        99    4            }
      100       100    3            break;
      101       101    3         }
      102       102    2         default:
      103       103    2            fprintf(stderr, "%s: bad option -%s\n", ProgCall, str);
      104       104    2         }
      105       105    1        }
      106       106
      107       107             ClearTable()
      108       108             {
      109       109    1         register i;
      110       110    1
CC.C03    File=zbc$tab:c.:ZBC3TSI                                                   Fri Aug 22 1997  Page=4  
      111       111    1         for (i = 0; i < MAXTAB; i++) {
      112       112    2            Table[i] = 0;
      113       113    2         }
      114       114    1        }
      115       115
      116       116             PrintTable()
      117       117             {
      118       118    1         register i;
      119       119    1
      120       120    1         for (i = 0; i < TabSize; i++) {
      121       121    2            if (Table[i]) {
      122       122    3               printf(OutputForm, Table[i]);
      123       123    3            }
      124       124    2            else {
      125       125    3               printf(OutputForm, "0");
      126       126    3            }
      127       127    2         }
      128       128    1        }
      129       129
      130       130             process(str, format)
      131       131              char *str;
      132       132             {
      133       133    1         char *cstr = str;
      134       134    1         char *Name = cstr;   /* overwrite original string! */
      135       135    1
      136       136    1         /* strip of the entry name
      137       137    1         */
      138       138    1         while (*str && *str != ':') {
      139       139    2            if (*str == '\\') {
      140       140    3               ++str;
      141       141    3            }
      142       142    2            *cstr++ = *str++;
      143       143    2         }
      144       144    1
      145       145    1         if (*str != ':') {
      146       146    2            fprintf(stderr, "%s: bad specification: \"%s\", ignored\n",
      147       147    2               ProgCall, Name);
CC.C03    File=zbc$tab:c.:ZBC3TSI                                                   Fri Aug 22 1997  Page=5  
      148       148    2            return 0;
      149       149    2         }
      150       150    1         *cstr = '\0';
      151       151    1         str++;
      152       152    1
      153       153    1         switch (format) {
      154       154    2
      155       155    2         case 'c':
      156       156    2            return c_proc(str, Name);
      157       157    2         default:
      158       158    2            fprintf(stderr, "%s: bad input format\n", ProgCall);
      159       159    2         }
      160       160    1         return 0;
      161       161    1        }
      162       162
      163       163             c_proc(str, Name)
      164       164              char *str;
      165       165              char *Name;
      166       166             {
      167       167    1         int ch, ch2;
      168       168    1         int quoted();
      169       169    1
      170       170    1         while (*str)   {
      171       171    2            if (*str == '\\') {
      172       172    3               ch = quoted(&str);
      173       173    3            }
      174       174    2            else  {
      175       175    3               ch = *str++;
      176       176    3            }
      177       177    2            if (*str == '-')  {
      178       178    3               if (*++str == '\\')  {
      179       179    4                  ch2 = quoted(&str);
      180       180    4               }
      181       181    3               else  {
      182       182    4                  if (ch2 = *str++);
      183       183    4                  else str--;
      184       184    4               }
CC.C03    File=zbc$tab:c.:ZBC3TSI                                                   Fri Aug 22 1997  Page=6  
      185       185    3               if (ch > ch2)  {
      186       186    4                  fprintf(stderr, "%s: bad range\n", ProgCall);
      187       187    4                  return 0;
      188       188    4               }
      189       189    3               if (ch >= 0 && ch2 <= 255)
      190       190    3                  while (ch <= ch2)
      191       191    3                     Table[ch++] = Salloc(Name);
      192       192    3            }
      193       193    2            else  {
      194       194    3               if (ch >= 0 && ch <= 255)
      195       195    3                  Table[ch] = Salloc(Name);
      196       196    3            }
      197       197    2         }
      198       198    1         return 1;
      199       199    1        }
      200       200
      201       201             int
      202       202             quoted(pstr)
      203       203              char **pstr;
      204       204             {
      205       205    1         register int ch;
      206       206    1         register int i;
      207       207    1         register char *str = *pstr;
      208       208    1
      209       209    1         if ((*++str >= '0') && (*str <= '9'))  {
      210       210    2            ch = 0;
      211       211    2            for (i = 0; i < 3; i++) {
      212       212    3               ch = 8 * ch + *str - '0';
      213       213    3               if (*++str < '0' || *str > '9')
      214       214    3                  break;
      215       215    3            }
      216       216    2         }
      217       217    1         else  {
      218       218    2            switch (*str++)   {
      219       219    3
      220       220    3            case 'n':
      221       221    3               ch = '\n';
CC.C03    File=zbc$tab:c.:ZBC3TSI                                                   Fri Aug 22 1997  Page=7  
      222       222    3               break;
      223       223    3            case 't':
      224       224    3               ch = '\t';
      225       225    3               break;
      226       226    3            case 'b':
      227       227    3               ch = '\b';
      228       228    3               break;
      229       229    3            case 'r':
      230       230    3               ch = '\r';
      231       231    3               break;
      232       232    3            case 'f':
      233       233    3               ch = '\f';
      234       234    3               break;
      235       235    3            default :
      236       236    3               ch = *str;
      237       237    3            }
      238       238    2         }
      239       239    1         *pstr = str;
      240       240    1         return ch & 0377;
      241       241    1        }
      242       242
      243       243             int
      244       244             stoi(str)
      245       245              char *str;
      246       246             {
      247       247    1         register i = 0;
      248       248    1
      249       249    1         while (*str >= '0' && *str <= '9') {
      250       250    2            i = i * 10 + *str++ - '0';
      251       251    2         }
      252       252    1         return i;
      253       253    1        }
      254       254
      255       255             char *
      256       256             getline(s, n, fp)
      257       257              char *s;
      258       258              FILE *fp;
CC.C03    File=zbc$tab:c.:ZBC3TSI                                                   Fri Aug 22 1997  Page=8  
      259       259             {
      260       260    1         register c = getc(fp);
      261       261    1         char *str = s;
      262       262    1
      263       263    1         while (n--) {
      264       264    2            if (c == EOF) {
      265       265    3               return NULL;
      266       266    3            }
      267       267    2            else
      268       268    2            if (c == '\n') {
      269       269    3               *str++ = '\0';
      270       270    3               return s;
      271       271    3            }
      272       272    2            *str++ = c;
      273       273    2            c = getc(fp);
      274       274    2         }
      275       275    1         s[n - 1] = '\0';
      276       276    1         return s;
      277       277    1        }
      278       278
      279       279             #define BUFSIZE 1024
      280       280
      281       281             DoFile(name)
      282       282              char *name;
      283       283             {
      284       284    1         char text[BUFSIZE];
      285       285    1         FILE *fp;
      286       286    1
      287       287    1         if ((fp = fopen(name, "r")) == NULL) {
      288       288    2            fprintf(stderr, "%s: cannot read file %s\n", ProgCall, name);
      289       289    2            exit(1);
      290       290    2         }
      291       291    1         while (getline(text, BUFSIZE, fp) != NULL) {
      292       292    2            if (text[0] == FILECOM) {
      293       293    3               option(text);
      294       294    3            }
      295       295    2            else {
CC.C03    File=zbc$tab:c.:ZBC3TSI                                                   Fri Aug 22 1997  Page=9  
      296       296    3               process(text, InputForm);
      297       297    3            }
      298       298    2         }
      299       299    1        }
      300       300
---  Include file information  ---

   stdio:h.:LIB_E05. is referenced

No diagnostics were issued in the file zbc$tab:c.:ZBC3TSI
