

CC.C03    File=zbe$ic_io:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=1  
        1         1             /* $Header: ic_io.c,v 1.4 87/03/10 11:06:08 ceriel Exp $ */
        2         2             /*
        3         3              * (c) copyright 1987 by the Vrije Universiteit, Amsterdam, The Netherlands.
        4         4              * See the copyright notice in the ACK home directory, in the file "Copyright"
                               .
        5         5              */
        6         6             /*  I N T E R M E D I A T E   C O D E
        7         7              *
        8         8              *  I C _ I O . C
        9         9              */
       10        10
       11        11
       12        12
       13        13             #include <stdio:h>
       14        14             #include "types:h"
       15        15             #include "debug:h"
       16        16             #include "em_pseu:h"
       17        17             #include "em_spec:h"
       18        18             #include "arch:h"
       19        19             #include "ic:h"
       20        20             #include "ic_lookup:h"
       21        21             #include "alloc:h"
       22        22             #include "ic_io:h"
       23        23
       24        24
       25        25             STATIC short libstate;
       26        26             STATIC long  bytecnt;
       27        27
       28        28             STATIC FILE *infile;  /* The current EM input file */
       29        29
       30        30             STATIC int readbyte()
       31        31             {
       32        32    1         if (libstate == ARCHIVE && bytecnt-- == 0L) {
       33        33    2            /* If we're reading from an archive file, we'll
       34        34    2             * have to count the number of characters read,
       35        35    2             * to know where the current module ends.
       36        36    2             */
CC.C03    File=zbe$ic_io:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=2  
       37        37    2            return EOF;
       38        38    2         }
       39        39    1         return getc(infile);
       40        40    1        }
       41        41
       42        42
       43        43
       44        44
       45        45             short readshort() {
       46        46    1         register int l_byte, h_byte;
       47        47    1
       48        48    1         l_byte = readbyte();
       49        49    1         h_byte = readbyte();
       50        50    1         if ( h_byte>= 256 ) h_byte -= 512 ;
       51        51    1         return l_byte | (h_byte*512) ;
       52        52    1        }
       53        53
       54        54             #ifdef LONGOFF
       55        55             offset readoffset() {
       56        56    1         register long l;
       57        57    1         register int h_byte;
       58        58    1
       59        59    1         l = readbyte();
       60        60    1         l |= ((unsigned) readbyte())*512 ;
       61        61    1         l |= readbyte()*512L*512L ;
       62        62    1         h_byte = readbyte() ;
       63        63    1         if ( h_byte>= 256 ) h_byte -= 512 ;
       64        64    1         return l | (h_byte*512L*512*512L) ;
       65        65    1        }
       66        66             #endif
       67        67
       68        68
       69        69             short get_int() {
       70        70    1
       71        71    1         switch(table2()) {
       72        72    2         default: error("int expected");
       73        73    2         case CSTX1:
CC.C03    File=zbe$ic_io:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=3  
       74        74    2            return(tabval);
       75        75    2         }
       76        76    1        }
       77        77
       78        78             char readchar()
       79        79             {
       80        80    1         return(readbyte());
       81        81    1        }
       82        82
       83        83
       84        84
       85        85             offset get_off() {
       86        86    1
       87        87    1         switch (table2()) {
       88        88    2         default: error("offset expected");
       89        89    2         case CSTX1:
       90        90    2            return((offset) tabval);
       91        91    2        #ifdef LONGOFF
       92        92    2         case CSTX2:
       93        93    2            return(tabval2);
       94        94    2        #endif
       95        95    2         }
       96        96    1        }
       97        97
       98        98             STATIC make_string(n) int n; {
       99        99    1
      100       100    1         sprintf(string,".%u",n);
      101       101    1        }
      102       102
      103       103             STATIC inident() {
      104       104    1         register n;
      105       105    1         register char *p = string;
      106       106    1         register c;
      107       107    1
      108       108    1         n = get_int();
      109       109    1         while (n--) {
      110       110    2            c = readbyte();
CC.C03    File=zbe$ic_io:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=4  
      111       111    2            if (p<&string[IDL])
      112       112    2               *p++ = c;
      113       113    2         }
      114       114    1         *p++ = 0;
      115       115    1        }
      116       116
      117       117             int table3(n) int n; {
      118       118    1
      119       119    1         switch (n) {
      120       120    2         case sp_ilb1:  tabval = readbyte(); return(ILBX);
      121       121    2         case sp_ilb2:  tabval = readshort(); return(ILBX);
      122       122    2         case sp_dlb1:  make_string(readbyte()); return(DLBX);
      123       123    2         case sp_dlb2:  make_string(readshort()); return(DLBX);
      124       124    2         case sp_dnam:  inident(); return(DLBX);
      125       125    2         case sp_pnam:  inident(); return(n);
      126       126    2         case sp_cst2:  tabval = readshort(); return(CSTX1);
      127       127    2        #ifdef LONGOFF
      128       128    2         case sp_cst4: tabval  = readoffset(); return(CSTX1);
      129       129    2        #endif
      130       130    2         case sp_doff:  if (table2()!=DLBX) error("symbol expected");
      131       131    2               switch(table2()) {
      132       132    3               default: error("offset expected");
      133       133    3               case CSTX1:    return(VALX1);
      134       134    3        #ifdef LONGOFF
      135       135    3               case CSTX2:    return(VALX2);
      136       136    3        #endif
      137       137    3               }
      138       138    2         default: return(n);
      139       139    2         }
      140       140    1        }
      141       141
      142       142             int table1() {
      143       143    1         register n;
      144       144    1
      145       145    1         n = readbyte();
      146       146    1         if (n == EOF)
      147       147    1            return(ATEOF);
CC.C03    File=zbe$ic_io:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=5  
      148       148    1         if ((n <= sp_lmnem) && (n >= sp_fmnem)) {
      149       149    2            tabval = n;
      150       150    2            return(INST);
      151       151    2         }
      152       152    1         if ((n <= sp_lpseu) && (n >= sp_fpseu)) {
      153       153    2            tabval = n;
      154       154    2            return(PSEU);
      155       155    2         }
      156       156    1         if ((n < sp_filb0 + sp_nilb0) && (n >= sp_filb0)) {
      157       157    2            tabval = n - sp_filb0;
      158       158    2            return(ILBX);
      159       159    2         }
      160       160    1         return(table3(n));
      161       161    1        }
      162       162
      163       163             int table2() {
      164       164    1         register n;
      165       165    1
      166       166    1         n = readbyte();
      167       167    1         if ((n < sp_fcst0 + sp_ncst0) && (n >= sp_fcst0)) {
      168       168    2            tabval = n - sp_zcst0;
      169       169    2            return(CSTX1);
      170       170    2         }
      171       171    1         return(table3(n));
      172       172    1        }
      173       173
      174       174
      175       175
      176       176
      177       177             file_init(f,state,length)
      178       178              FILE *f;
      179       179              short state;
      180       180              long  length;
      181       181             {
      182       182    1         short n;
      183       183    1
      184       184    1         infile = f;
CC.C03    File=zbe$ic_io:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=6  
      185       185    1         libstate = state;
      186       186    1         bytecnt = length;
      187       187    1         linecount = 0;
      188       188    1         n = readshort();
      189       189    1         if (n != (short) sp_magic) {
      190       190    2            error("wrong magic number: %d", n);
      191       191    2         }
      192       192    1        }
      193       193
      194       194
      195       195
      196       196             arch_init(arch)
      197       197              FILE *arch;
      198       198             {
      199       199    1         short n;
      200       200    1
      201       201    1         infile = arch;
      202       202    1         n = readshort();
      203       203    1         if (n != ARMAG) {
      204       204    2            error("wrong archive magic number: %d",n);
      205       205    2         }
      206       206    1        }
      207       207
---  Include file information  ---

   stdio:h.:LIBRARY. is referenced
   zbe$types:h.:ZBC3TOU. is referenced
   zbe$debug:h.:ZBC3TOU. is referenced
   em_pseu:h.:ZBC3TOU. is referenced
   em_spec:h.:ZBC3TOU. is referenced
   zbe$arch:h.:ZBC3TOU. is referenced
   zbe$ic:h.:ZBC3TOU. is referenced
   zbe$ic_lookup:h.:ZBC3TOU. is referenced
   zbe$alloc:h.:ZBC3TOU. is referenced
   zbe$ic_io:h.:ZBC3TOU. is referenced

CC.C03    File=zbe$ic_io:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=7  
No diagnostics were issued in the file zbe$ic_io:c.:ZBC3TSI
