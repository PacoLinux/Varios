

10:57 AUG 20 '97 zbm$input$inp_types:h.:ZBC3TSI                            1    
    1      /*M*     zb_input$inp_types:h */
    2      /*T*/
    3      /*B*
    4            NAME:    zb_files
    5            PURPOSE: This structure contains the entire interface to
    6                     the ZB_INPUT$ routines. This structure must match
    7                     the equivalent PL6 routine: ZB_INPUT$TYPES:PL6
    8            DESCRIPTION:
    9               char *buffer   - Points at a buffer that is to receive
   10                                a record of data from ZB_INPUT_READ
   11               int BUFSIZE    - The size of the buffer that BUFFER$
   12                                points at
   13               int NBYTES     - Number of bytes read by ZB_INPUT_READ
   14               int FILETYPE   - The type of file to open, read, or close
   15                                 =1 Base file
   16                                 =2 Update file
   17                                 =3 Include file
   18               char *filename - A pointer to the name of the file to
   19                                be opened
   20               int open_flag  - Is the file open
   21                                 =0 No the file is not open
   22                                 =1 Yes the file is open
   23               int level      - The nested level of the include files
   24               int optui      - Is the UI file optional
   25               int list_update-  List updates at beginning of LS file??
   26               char *key      - Pointer to the text of the key that was read in
   27      */
   28
   29      #define  IN_TEXT     0
   30      #define  IN_BASE     1
   31      #define  IN_UPDATE   2
   32      #define  IN_INCLUDE  3
   33
   34      struct      zb_files {
   35                     char     *buffer;       /* contains the text read */
   36                     int      bufsize;       /* Size of buffer         */
   37                     int      nbytes;        /* Number of bytes read   */
10:57 AUG 20 '97 zbm$input$inp_types:h.:ZBC3TSI                            2    
   38                     int      filetype;      /* Type of file read from */
   39                     char     *filename;     /* Name of file           */
   40                     int      open_flag;     /* Is the file open       */
   41                     int      level;         /* Level of include depth */
   42                     int      optui;         /* Is UI file optional */
   43                     int      list_update;   /* List updates??      */
   44                     char     *key;          /*    contains key text   */
   45                  };
   46      extern   int   zb_LS_flag;
   47      extern   int   zb_LS_include_flag;

