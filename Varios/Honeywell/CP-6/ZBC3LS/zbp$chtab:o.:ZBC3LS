

CC.C03    File=zbp$chtab:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=1  
        1         1             /*
        2         2              * (c) copyright 1987 by the Vrije Universiteit, Amsterdam, The Netherlands.
        3         3              * See the copyright notice in the ACK home directory, in the file "Copyright"
                               .
        4         4              */
        5         5             /*
        6         6              chtab - character table generator
        7         7
        8         8              Author: Erik Baalbergen (..tjalk!erikb)
        9         9              Modified by Ceriel Jacobs
       10        10             */
       11        11
       12        12             #include <stdio:h>
       13        13
       14        14             static char *RcsId = "$Header: chtab.c,v 1.3 87/03/09 17:52:29 ceriel Exp $";
       15        15
       16        16             #define MAXBUF  256
       17        17             #define TABSIZE 257
       18        18             #define COMCOM  '-'
       19        19             #define FILECOM '%'
       20        20
       21        21             int InputForm = 'c';
       22        22             char OutputForm[MAXBUF] = "%s,\n";
       23        23             char *Table[TABSIZE];
       24        24             char *Name;
       25        25             char *ProgCall;
       26        26             int signedch = 0;
       27        27             char *OutputName;
       28        28             char *chroffsetfile = "charoffset:h";
       29        29
       30        30             main(argc, argv)
       31        31              char *argv[];
       32        32             {
       33        33    1         char c = 0200;
       34        34    1         int i = c;
       35        35    1
       36        36    1         if (i < 0) signedch = 1;
CC.C03    File=zbp$chtab:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=2  
       37        37    1
       38        38    1         ProgCall = *argv++;
       39        39    1         argc--;
       40        40    1         while (argc-- > 0) {
       41        41    2            if (**argv == COMCOM) {
       42        42    3               option(*argv++);
       43        43    3            }
       44        44    2            else {
       45        45    3               process(*argv++, InputForm);
       46        46    3            }
       47        47    2         }
       48        48    1         MkCharIndex();
       49        49    1         exit(0);
       50        50    1        }
       51        51
       52        52             MkCharIndex()
       53        53             {
       54        54    1         FILE *fp;
       55        55    1
       56        56    1         if ((fp = fopen(chroffsetfile, "w")) == (FILE *)0) {
       57        57    2            fprintf(stderr, "%s: cannot write file %s\n", ProgCall, chroffsetfile);
       58        58    2            exit(1);
       59        59    2         }
       60        60    1         if (signedch) {
       61        61    2            fputs("#define CharOffset  128\n",fp);
       62        62    2         }
       63        63    1         else  fputs("#define CharOffset  0\n",fp);
       64        64    1         fclose(fp);
       65        65    1        }
       66        66
       67        67             char *
       68        68             Salloc(s)
       69        69              char *s;
       70        70             {
       71        71    1         char *malloc();
       72        72    1         char *ns = malloc(strlen(s) + 1);
       73        73    1
CC.C03    File=zbp$chtab:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=3  
       74        74    1         if (ns) {
       75        75    2            strcpy(ns, s);
       76        76    2         }
       77        77    1         return ns;
       78        78    1        }
       79        79
       80        80             option(str)
       81        81              char *str;
       82        82             {
       83        83    1         /* note that *str indicates the source of the option:
       84        84    1            either COMCOM (from command line) or FILECOM (from a file).
       85        85    1         */
       86        86    1         switch (*++str) {
       87        87    2
       88        88    2         case ' ':   /* command */
       89        89    2         case '\t':
       90        90    2         case '\0':
       91        91    2            break;
       92        92    2         case 'I':
       93        93    2            InputForm = *++str;
       94        94    2            break;
       95        95    2         case 'f':
       96        96    2            if (*++str == '\0') {
       97        97    3               fprintf(stderr, "%s: -f: name expected\n", ProgCall);
       98        98    3               exit(1);
       99        99    3            }
      100       100    2            DoFile(str);
      101       101    2            break;
      102       102    2         case 'F':
      103       103    2            sprintf(OutputForm, "%s\n", ++str);
      104       104    2            break;
      105       105    2         case 'T':
      106       106    2            printf("%s\n", ++str);
      107       107    2            break;
      108       108    2         case 'p':
      109       109    2            PrintTable();
      110       110    2            break;
CC.C03    File=zbp$chtab:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=4  
      111       111    2         case 'C':
      112       112    2            ClearTable();
      113       113    2            break;
      114       114    2         case 'H':
      115       115    2            if (*++str == '\0') {
      116       116    3               fprintf(stderr, "%s: -H: name expected\n", ProgCall);
      117       117    3            }
      118       118    2            else  chroffsetfile = ++str;
      119       119    2            break;
      120       120    2         default:
      121       121    2            fprintf(stderr, "%s: bad option -%s\n", ProgCall, str);
      122       122    2         }
      123       123    1        }
      124       124
      125       125             ClearTable()
      126       126             {
      127       127    1         register i;
      128       128    1
      129       129    1         for (i = 0; i < TABSIZE; i++) {
      130       130    2            Table[i] = 0;
      131       131    2         }
      132       132    1        }
      133       133
      134       134             PrintTable()
      135       135             {
      136       136    1         register i;
      137       137    1
      138       138    1         for (i = 0; i < TABSIZE; i++) {
      139       139    2            if (Table[i]) {
      140       140    3               printf(OutputForm, Table[i]);
      141       141    3            }
      142       142    2            else {
      143       143    3               printf(OutputForm, "0");
      144       144    3            }
      145       145    2         }
      146       146    1        }
      147       147
CC.C03    File=zbp$chtab:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=5  
      148       148             process(str, format)
      149       149              char *str;
      150       150             {
      151       151    1         char *cstr = str;
      152       152    1         char *Name = cstr;   /* overwrite original string! */
      153       153    1
      154       154    1         /* strip of the entry name
      155       155    1         */
      156       156    1         while (*str && *str != ':') {
      157       157    2            if (*str == '\\') {
      158       158    3               ++str;
      159       159    3            }
      160       160    2            *cstr++ = *str++;
      161       161    2         }
      162       162    1
      163       163    1         if (*str != ':') {
      164       164    2            fprintf(stderr, "%s: bad specification: \"%s\", ignored\n",
      165       165    2               ProgCall, Name);
      166       166    2            return 0;
      167       167    2         }
      168       168    1         *cstr = '\0';
      169       169    1         str++;
      170       170    1
      171       171    1         switch (format) {
      172       172    2
      173       173    2         case 'c':
      174       174    2            return c_proc(str, Name);
      175       175    2         default:
      176       176    2            fprintf(stderr, "%s: bad input format\n", ProgCall);
      177       177    2         }
      178       178    1         return 0;
      179       179    1        }
      180       180
      181       181             c_proc(str, Name)
      182       182              char *str;
      183       183              char *Name;
      184       184             {
CC.C03    File=zbp$chtab:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=6  
      185       185    1         int ch, ch2;
      186       186    1         int quoted();
      187       187    1         char *name = Salloc(Name);
      188       188    1
      189       189    1         while (*str)   {
      190       190    2            if (*str == '\\') {
      191       191    3               ch = quoted(&str);
      192       192    3            }
      193       193    2            else  {
      194       194    3               ch = *str++;
      195       195    3            }
      196       196    2            if (*str == '-')  {
      197       197    3               if (*++str == '\\')  {
      198       198    4                  ch2 = quoted(&str);
      199       199    4               }
      200       200    3               else  {
      201       201    4                  if (ch2 = *str++);
      202       202    4                  else str--;
      203       203    4               }
      204       204    3               if (ch > ch2) {
      205       205    4                  fprintf(stderr, "%s: bad range\n", ProgCall);
      206       206    4                  return 0;
      207       207    4               }
      208       208    3        #define ind(X)  (signedch?(X>=128?X-128:X+128):X)
      209       209    3               while (ch <= ch2) {
      210       210    4                  Table[ind(ch)] = name;
      211       211    4                  ch++;
      212       212    4               }
      213       213    3            }
      214       214    2            else  {
      215       215    3               if (ch >= 0 && ch <= 255)
      216       216    3                  Table[ind(ch)] = name;
      217       217    3            }
      218       218    2         }
      219       219    1         Table[256] = Table[0];
      220       220    1         return 1;
      221       221    1        }
CC.C03    File=zbp$chtab:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=7  
      222       222
      223       223             int
      224       224             quoted(pstr)
      225       225              char **pstr;
      226       226             {
      227       227    1         register int ch;
      228       228    1         register int i;
      229       229    1         register char *str = *pstr;
      230       230    1
      231       231    1         if ((*++str >= '0') && (*str <= '9'))  {
      232       232    2            ch = 0;
      233       233    2            for (i = 0; i < 3; i++) {
      234       234    3               ch = 8 * ch + (*str - '0');
      235       235    3               if (*++str < '0' || *str > '9')
      236       236    3                  break;
      237       237    3            }
      238       238    2         }
      239       239    1         else  {
      240       240    2            switch (*str++)   {
      241       241    3
      242       242    3            case 'n':
      243       243    3               ch = '\n';
      244       244    3               break;
      245       245    3            case 't':
      246       246    3               ch = '\t';
      247       247    3               break;
      248       248    3            case 'b':
      249       249    3               ch = '\b';
      250       250    3               break;
      251       251    3            case 'r':
      252       252    3               ch = '\r';
      253       253    3               break;
      254       254    3            case 'f':
      255       255    3               ch = '\f';
      256       256    3               break;
      257       257    3            default :
      258       258    3               ch = *str;
CC.C03    File=zbp$chtab:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=8  
      259       259    3            }
      260       260    2         }
      261       261    1         *pstr = str;
      262       262    1         return ch & 0377;
      263       263    1        }
      264       264
      265       265             int
      266       266             stoi(str)
      267       267              char *str;
      268       268             {
      269       269    1         register i = 0;
      270       270    1
      271       271    1         while (*str >= '0' && *str <= '9') {
      272       272    2            i = i * 10 + *str++ - '0';
      273       273    2         }
      274       274    1         return i;
      275       275    1        }
      276       276
      277       277             char *
      278       278             getline(s, n, fp)
      279       279              char *s;
      280       280              FILE *fp;
      281       281             {
      282       282    1         register c = getc(fp);
      283       283    1         char *str = s;
      284       284    1
      285       285    1         while (n--) {
      286       286    2            if (c == EOF) {
      287       287    3               return NULL;
      288       288    3            }
      289       289    2            else
      290       290    2            if (c == '\n') {
      291       291    3               *str++ = '\0';
      292       292    3               return s;
      293       293    3            }
      294       294    2            *str++ = c;
      295       295    2            c = getc(fp);
CC.C03    File=zbp$chtab:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=9  
      296       296    2         }
      297       297    1         s[n - 1] = '\0';
      298       298    1         return s;
      299       299    1        }
      300       300
      301       301             #define BUFSIZE 1024
      302       302
      303       303             DoFile(name)
      304       304              char *name;
      305       305             {
      306       306    1         char text[BUFSIZE];
      307       307    1         FILE *fp;
      308       308    1
      309       309    1         if ((fp = fopen(name, "r")) == (FILE *)0) {
      310       310    2            fprintf(stderr, "%s: cannot read file %s\n", ProgCall, name);
      311       311    2            exit(1);
      312       312    2         }
      313       313    1         while (getline(text, BUFSIZE, fp) != NULL) {
      314       314    2            if (text[0] == FILECOM) {
      315       315    3               option(text);
      316       316    3            }
      317       317    2            else {
      318       318    3               process(text, InputForm);
      319       319    3            }
      320       320    2         }
      321       321    1        }
      322       322
---  Include file information  ---

   stdio:h.:LIB_E05. is referenced

No diagnostics were issued in the file zbp$chtab:c.:ZBC3TSI
