

CC.C03    File=zbc$conversion:c.:ZBC3TSI                                            Fri Aug 22 1997  Page=1  
        1         1             /*
        2         2              * (c) copyright 1987 by the Vrije Universiteit, Amsterdam, The Netherlands.
        3         3              * See the copyright notice in the ACK home directory, in the file "Copyright"
                               .
        4         4              */
        5         5             /* $Header: conversion.c,v 3.9 87/03/25 22:48:17 ceriel Exp $ */
        6         6             /*  C O N V E R S I O N - C O D E  G E N E R A T O R   */
        7         7
        8         8             #include  "nofloat.h"
        9         9             #include  <em.h>
       10        10             #include  "arith.h"
       11        11             #include  "type.h"
       12        12             #include  "sizes.h"
       13        13             #include  "Lpars.h"
       14        14
       15        15             #define   T_SIGNED    1
       16        16             #define   T_UNSIGNED     2
       17        17             #ifndef NOFLOAT
       18        18             #define   T_FLOATING     3
       19        19             #endif NOFLOAT
       20        20
       21        21             /*  conversion() generates the EM code for a conversion between
       22        22              the types char, short, int, long, float, double and pointer.
       23        23              In case of integral type, the notion signed / unsigned is
       24        24              taken into account.
       25        25              The EM code to obtain this conversion looks like:
       26        26                 LOC sizeof(from_type)
       27        27                 LOC sizeof(to_type)
       28        28                 C??
       29        29             */
       30        30
       31        31             conversion(from_type, to_type)
       32        32              register struct type *from_type, *to_type;
       33        33             {
       34        34    1         register arith from_size = from_type->tp_size;
       35        35    1         register arith to_size = to_type->tp_size;
       36        36    1         int from_fund = fundamental(from_type);
CC.C03    File=zbc$conversion:c.:ZBC3TSI                                            Fri Aug 22 1997  Page=2  
       37        37    1         int to_fund = fundamental(to_type);
       38        38    1
       39        39    1         if (to_size < word_size) to_size = word_size;
       40        40    1         if (from_size == to_size && from_fund == to_fund)
       41        41    1            return;
       42        42    1         switch (from_fund)   {
       43        43    2         case T_SIGNED:
       44        44    2            switch (to_fund)  {
       45        45    3            case T_SIGNED:
       46        46    3               C_loc(from_size);
       47        47    3               C_loc(to_size);
       48        48    3               C_cii();
       49        49    3               break;
       50        50    3            case T_UNSIGNED:
       51        51    3        #ifndef NOFLOAT
       52        52    3            case T_FLOATING:
       53        53    3        #endif NOOFLOAT
       54        54    3               if (from_size < word_size) {
       55        55    4                  C_loc(from_size);
       56        56    4                  C_loc(word_size);
       57        57    4                  C_cii();
       58        58    4                  from_size = word_size;
       59        59    4               }
       60        60    3               C_loc(from_size);
       61        61    3               C_loc(to_size);
       62        62    3               if (to_fund == T_UNSIGNED) C_ciu();
       63        63    3               else C_cif();
       64        64    3               break;
       65        65    3            }
       66        66    2            break;
       67        67    2         case T_UNSIGNED:
       68        68    2            C_loc(from_size);
       69        69    2            C_loc(to_size);
       70        70    2            switch (to_fund)  {
       71        71    3            case T_SIGNED:
       72        72    3               C_cui();
       73        73    3               break;
CC.C03    File=zbc$conversion:c.:ZBC3TSI                                            Fri Aug 22 1997  Page=3  
       74        74    3            case T_UNSIGNED:
       75        75    3               C_cuu();
       76        76    3               break;
       77        77    3        #ifndef NOFLOAT
       78        78    3            case T_FLOATING:
       79        79    3               C_cuf();
       80        80    3               break;
       81        81    3        #endif NOFLOAT
       82        82    3            }
       83        83    2            break;
       84        84    2        #ifndef NOFLOAT
       85        85    2         case T_FLOATING:
       86        86    2            C_loc(from_size);
       87        87    2            C_loc(to_size);
       88        88    2            switch (to_fund)  {
       89        89    3            case T_SIGNED:
       90        90    3               C_cfi();
       91        91    3               break;
       92        92    3            case T_UNSIGNED:
       93        93    3               C_cfu();
       94        94    3               break;
       95        95    3            case T_FLOATING:
       96        96    3               C_cff();
       97        97    3               break;
       98        98    3            }
       99        99    2            break;
      100       100    2        #endif NOFLOAT
      101       101    2         default:
      102       102    2            crash("(conversion) illegal type conversion");
      103       103    2         }
      104       104    1        }
      105       105
      106       106             /*  fundamental() returns in which category a given type falls:
      107       107              signed, unsigned or floating
      108       108             */
      109       109             int
      110       110             fundamental(tp)
CC.C03    File=zbc$conversion:c.:ZBC3TSI                                            Fri Aug 22 1997  Page=4  
      111       111              register struct type *tp;
      112       112             {
      113       113    1         switch (tp->tp_fund) {
      114       114    2         case CHAR:
      115       115    2         case SHORT:
      116       116    2         case INT:
      117       117    2         case ERRONEOUS:
      118       118    2         case LONG:
      119       119    2         case ENUM:
      120       120    2            return tp->tp_unsigned == UNSIGNED ? T_UNSIGNED : T_SIGNED;
      121       121    2        #ifndef NOFLOAT
      122       122    2         case FLOAT:
      123       123    2         case DOUBLE:
      124       124    2            return T_FLOATING;
      125       125    2        #endif NOFLOAT
      126       126    2         case POINTER:  /* pointer : signed / unsigned   ???   */
      127       127    2            return T_SIGNED;
      128       128    2         }
      129       129    1         return 0;
      130       130    1        }
      131       131
---  Include file information  ---

   zbc$nofloat:h.:ZBC3TOU. is referenced
   em:h.:ZBC3TOU. is referenced
   em_arith:h.:ZBC3TOU. is referenced
   em_label:h.:ZBC3TOU. is referenced
   em_code:h.:ZBC3TOU. is referenced
   zbc$arith:h.:ZBC3TOU. is referenced
   zbc$spec_arith:h.:ZBC3TOU. is referenced
   zbc$type:h.:ZBC3TOU. is referenced
   zbc$nobitfield:h.:ZBC3TOU. is referenced
   zbc$sizes:h.:ZBC3TOU. is referenced
   zbc$nocross:h.:ZBC3TOU. is referenced
   zbc$target_sizes:h.:ZBC3TOU. is referenced
   zbc$Lpars:h.:ZBC3TOU. is referenced

CC.C03    File=zbc$conversion:c.:ZBC3TSI                                            Fri Aug 22 1997  Page=5  
No diagnostics were issued in the file zbc$conversion:c.:ZBC3TSI
