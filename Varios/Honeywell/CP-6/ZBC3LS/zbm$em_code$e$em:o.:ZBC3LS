

CC.C03    File=zbm$em_code$e$em:c.:ZBC3TSI                                          Fri Aug 22 1997  Page=1  
        1         1             /* $Header: em.c,v 1.4 87/03/10 09:07:28 ceriel Exp $ */
        2         2             /*
        3         3              * (c) copyright 1987 by the Vrije Universiteit, Amsterdam, The Netherlands.
        4         4              * See the copyright notice in the ACK home directory, in the file "Copyright"
                               .
        5         5              */
        6         6             /* EM CODE OUTPUT ROUTINES */
        7         7
        8         8             #include <system:h>
        9         9             #include "em_private:h"
       10        10
       11        11             /*
       12        12              putbyte(), C_open() and C_close() are the basic routines for
       13        13              respectively write on, open and close the output file.
       14        14              The put_*() functions serve as formatting functions of the
       15        15              various EM language constructs.
       16        16              See "Description of a Machine Architecture for use with
       17        17              Block Structured Languages" par. 11.2 for the meaning of these
       18        18              names.
       19        19             */
       20        20
       21        21             static File *ofp[4] = {0, 0, 0, 0};
       22        22             int EM_File_No = 0;
       23        23             int em_binary_option = 0;
       24        24
       25        25             C_init(w, p)
       26        26              arith w, p;
"zbm$em_code$e$em:c.:ZBC3TSI", line 26: (warning) identifier "w" is not used
"zbm$em_code$e$em:c.:ZBC3TSI", line 26: (warning) identifier "p" is not used
       27        27             {
       28        28    1        }
       29        29
       30        30             C_open(nm)   /* open file for readable code output  */
       31        31              char *nm;
       32        32             {
       33        33    1         if (nm == 0)
       34        34    1            ofp[EM_File_No] = STDOUT;  /* standard output   */
CC.C03    File=zbm$em_code$e$em:c.:ZBC3TSI                                          Fri Aug 22 1997  Page=2  
       35        35    1         else
       36        36    1         if (sys_open(nm, OP_WRITE, &ofp[EM_File_No]) == 0)
       37        37    1            return 0;
       38        38    1         return 1;
       39        39    1        }
       40        40
       41        41             C_close()
       42        42             {
       43        43    1         if (ofp[EM_File_No] != STDOUT)
       44        44    1            sys_close(ofp[EM_File_No]);
       45        45    1         ofp[EM_File_No] = 0;
       46        46    1        }
       47        47
       48        48             C_busy()
       49        49             {
       50        50    1         return ofp[0] != 0;
       51        51    1        }
       52        52
       53        53             C_magic()
       54        54             {
       55        55    1        }
       56        56
       57        57             /***    the readable code generating routines ***/
       58        58
       59        59             put_ilb(l)
       60        60              label l;
       61        61             {
       62        62    1         _prnt("*%ld", (long) l);
       63        63    1        }
       64        64
       65        65             extern char em_mnem[][4];
       66        66             extern char em_pseu[][4];
       67        67
       68        68             put_op(x)
       69        69             {
       70        70    1         _prnt(" %s ", em_mnem[x - sp_fmnem]);
       71        71    1        }
CC.C03    File=zbm$em_code$e$em:c.:ZBC3TSI                                          Fri Aug 22 1997  Page=3  
       72        72
       73        73             put_cst(l)
       74        74              arith l;
       75        75             {
       76        76    1         _prnt("%ld", (long) l);
       77        77    1        }
       78        78
       79        79             put_scon(x, y)
       80        80              char *x;
       81        81              arith y;
       82        82             {
       83        83    1         char buf[1024];
       84        84    1         char sbuf[1024];
       85        85    1         register char *p, *q = &sbuf[0];
       86        86    1         char *bts2str();
       87        87    1
       88        88    1         p = bts2str(x, (int) y, buf);
       89        89    1         while (*p) {
       90        90    2            if (*p == '\'')
       91        91    2               *q++ = '\\';
       92        92    2            *q++ = *p++;
       93        93    2         }
       94        94    1         *q = '\0';
       95        95    1         _prnt("'%s'", buf);
       96        96    1        }
       97        97
       98        98             put_ps(x)
       99        99             {
      100       100    1         _prnt(" %s ", em_pseu[x - sp_fpseu]);
      101       101    1        }
      102       102
      103       103             put_dlb(l)
      104       104              label l;
      105       105             {
      106       106    1         _prnt(".%ld", (long) l);
      107       107    1        }
      108       108
CC.C03    File=zbm$em_code$e$em:c.:ZBC3TSI                                          Fri Aug 22 1997  Page=4  
      109       109             put_doff(l, v)
      110       110              label l;
      111       111              arith v;
      112       112             {
      113       113    1         if (v == 0) put_dlb(l);
      114       114    1         else _prnt(".%ld+%ld", (long) l, (long) v);
      115       115    1        }
      116       116
      117       117             put_noff(s, v)
      118       118              char *s;
      119       119              arith v;
      120       120             {
      121       121    1         if (v == 0) _prnt(s);
      122       122    1         else _prnt("%s+%ld", s, (long) v);
      123       123    1        }
      124       124
      125       125             put_pnam(s)
      126       126              char *s;
      127       127             {
      128       128    1         _prnt("$%s", s);
      129       129    1        }
      130       130
      131       131             put_dfilb(l)
      132       132              label l;
      133       133             {
      134       134    1         _prnt("%ld", (long) l);
      135       135    1        }
      136       136
      137       137             put_wcon(sp, v, sz)   /* sp_icon, sp_ucon or sp_fcon with int repr */
      138       138              int sp;
      139       139              char *v;
      140       140              arith sz;
      141       141             {
      142       142    1         _prnt("%s%c%ld", v, sp == sp_icon ? 'I' : sp == sp_ucon ? 'U' : 'F',
      143       143    1            (long) sz);
      144       144    1        }
      145       145
CC.C03    File=zbm$em_code$e$em:c.:ZBC3TSI                                          Fri Aug 22 1997  Page=5  
      146       146             _prnt(fmt, args, a, b, c, d, e, f, g, h, i, j, k, l, m)
      147       147              char *fmt;
"zbm$em_code$e$em:c.:ZBC3TSI", line 147: (warning) identifier "a" is not used
"zbm$em_code$e$em:c.:ZBC3TSI", line 147: (warning) identifier "b" is not used
"zbm$em_code$e$em:c.:ZBC3TSI", line 147: (warning) identifier "c" is not used
"zbm$em_code$e$em:c.:ZBC3TSI", line 147: (warning) identifier "d" is not used
"zbm$em_code$e$em:c.:ZBC3TSI", line 147: (warning) identifier "e" is not used
"zbm$em_code$e$em:c.:ZBC3TSI", line 147: (warning) etc ...
      148       148              int args;
      149       149             {
      150       150    1         doprnt(ofp[EM_File_No], fmt, (int *)&args);
      151       151    1        }
      152       152
      153       153             put_nl() { _prnt("\n"); }
      154       154             put_comma() { _prnt(","); }
      155       155             put_ccend() { _prnt(" ?"); }
      156       156
---  Include file information  ---

   system:h.:ZBC3TOU. is referenced
   zbm$em$e$em_private:h.:ZBC3TOU. is referenced
   em_arith:h.:ZBC3TOU. is referenced
   em_label:h.:ZBC3TOU. is referenced
   em_code:h.:ZBC3TOU. is referenced
   em_spec:h.:ZBC3TOU. is referenced
   em_pseu:h.:ZBC3TOU. is referenced
   em_mnem:h.:ZBC3TOU. is referenced
   em_reg:h.:ZBC3TOU. is referenced

8 warnings were detected in the file zbm$em_code$e$em:c.:ZBC3TSI
