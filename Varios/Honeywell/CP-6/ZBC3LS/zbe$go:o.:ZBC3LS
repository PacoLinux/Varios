

CC.C03    File=zbe$go:c.:ZBC3TSI                                                    Fri Aug 22 1997  Page=1  
        1         1             /* $Header: go.c,v 1.4 87/03/16 15:14:52 ceriel Exp $ */
        2         2             /*
        3         3              * (c) copyright 1987 by the Vrije Universiteit, Amsterdam, The Netherlands.
        4         4              * See the copyright notice in the ACK home directory, in the file "Copyright"
                               .
        5         5              */
        6         6             /*  S H A R E D    F I L E
        7         7              *
        8         8              *  G O . C
        9         9              *
       10        10              */
       11        11
       12        12
       13        13             #include <stdio:h>
       14        14             #include "types:h"
       15        15             #include "debug:h"
       16        16             #include "global:h"
       17        17             #include "files:h"
       18        18             #include "get:h"
       19        19             #include "put:h"
       20        20             #include "lset:h"
       21        21             #include "map:h"
       22        22             #include "alloc:h"
       23        23             #include "go:h"
       24        24
       25        25
       26        26             STATIC bool report_flag = FALSE;  /* report #optimizations found? */
       27        27             STATIC bool core_flag = FALSE;    /* report core usage? */
       28        28             STATIC bool cs_flag = FALSE;  /* common subexpression stuff. */
       29        29             extern cset forbidden ;
       30        30             extern cset cheaps ;
       31        31             extern cset addr_modes ;
       32        32
       33        33
       34        34             STATIC mach_init(machfile,phase_machinit)
       35        35              char *machfile;
       36        36              int (*phase_machinit)();
CC.C03    File=zbe$go:c.:ZBC3TSI                                                    Fri Aug 22 1997  Page=2  
       37        37             {
       38        38    1         /* Read target machine dependent information */
       39        39    1
       40        40    1         FILE *f;
       41        41    1
       42        42    1         f = openfile(machfile,"r");
       43        43    1         fscanf(f,"%d",&ws);
       44        44    1         fscanf(f,"%d",&ps);
       45        45    1         if (ws != ps && ps != 2*ws) error("illegal pointer size");
       46        46    1         (*phase_machinit)(f);
       47        47    1         fclose(f);
       48        48    1        }
       49        49
       50        50
       51        51
       52        52             go(argc,argv,initialize,optimize,phase_machinit,proc_flag)
       53        53              int argc;
       54        54              char *argv[];
       55        55              int (*initialize)();
       56        56              int (*optimize)();
       57        57              int (*phase_machinit)();
       58        58              int (*proc_flag)();
       59        59             {
       60        60    1         bblock_p g;
       61        61    1         line_p l;
       62        62    1         short kind;
       63        63    1         int i;
       64        64    1         char *p;
       65        65    1        bool time_opt = TRUE;
       66        66    1        /*line_table_p next_line_table;*/    /* declared in global:c */
       67        67    1
       68        68    1         linecount = 0;
       69        69    1         cs_flag = FALSE;
       70        70    1         for (i = ARGSTART; i < argc; i++) {
       71        71    2            p = argv[i];
       72        72    2            if (*p++ != '-') error("illegal argument");
       73        73    2            switch(*p) {
CC.C03    File=zbe$go:c.:ZBC3TSI                                                    Fri Aug 22 1997  Page=3  
       74        74    3               case 'S':
       75        75    3                  time_opt = FALSE;
       76        76    3                  break;
       77        77    3               case 'T':
       78        78    3                  time_opt = TRUE;
       79        79    3                  break;
       80        80    3               case 'M':
       81        81    3                  p++;
       82        82    3                  mach_init(p,phase_machinit);
       83        83    3         cs_flag = TRUE;
       84        84    3                  break;
       85        85    3               case 'C':
       86        86    3                  core_flag = TRUE;
       87        87    3                  break;
       88        88    3               case 'Q':
       89        89    3                  report_flag = TRUE;
       90        90    3                  break;
       91        91    3               case 'V':
       92        92    3                  verbose_flag = TRUE;
       93        93    3                  break;
       94        94    3               default:
       95        95    3                  (*proc_flag)(p);
       96        96    3                  break;
       97        97    3            }
       98        98    2         }
       99        99    1         time_space_ratio = (time_opt ? 100 : 0);
      100       100    1         fproc = first_proc; /* setting the first proc pointer. */
      101       101    1         next_proc = first_line_table->assoc_proc;
      102       102    1         first_line_ptr = first_line_table->first_line;
      103       103    1         next_line_table = first_line_table;
      104       104    1         if (data_proc != fproc) {
      105       105    2           data_proc->p_next = fproc; } /* set to point to first non data proc. */
      106       106    1         if (!cs_flag) {
      107       107    2            addr_modes = (cset) 0;
      108       108    2            cheaps = (cset) 0;
      109       109    2            forbidden = (cset) 0;
      110       110    2            }
CC.C03    File=zbe$go:c.:ZBC3TSI                                                    Fri Aug 22 1997  Page=4  
      111       111    1         (*initialize)();
      112       112    1         if (optimize == no_action) return;
      113       113    1         mesregs = Lempty_set();
      114       114    1         while (get_curr_unit(&kind,&g,&l,&curproc,TRUE)) {
      115       115    2            /* Read the control flow graph and EM text of
      116       116    2             * one procedure and optimize it.
      117       117    2             */
      118       118    2            if (kind == LDATA) {
      119       119    3           put_curr_unit(LDATA,(proc_p) 0,l);
      120       120    3           next_line_table = next_line_table->lt_next;
      121       121    3           if (next_line_table != (line_table_p) 0 ) {
      122       122    4             next_proc = next_line_table->assoc_proc;
      123       123    4             first_line_ptr = next_line_table->first_line;  }
      124       124    3           else {
      125       125    4             first_line_ptr = (line_p) 0; } /* set to null for last. */
      126       126    3               continue;
      127       127    3            }
      128       128    2            OUTTRACE("flow graph of proc %d read",curproc->p_id);
      129       129    2            curproc->p_start = g;
      130       130    2            /* The global variable curproc points to the
      131       131    2             * current procedure. It is set by getgraph
      132       132    2             */
      133       133    2             ra_set_bblocks (curproc); /* make sure bbocks are ordered correctly.*/
      134       134    2            (*optimize)(curproc);
      135       135    2          put_curr_unit(LTEXT, curproc,(line_p) 0);
      136       136    2            /* output control flow graph + text */
      137       137    2            OUTTRACE("graph of proc %d outputted",curproc->p_id);
      138       138    2            Ldeleteset(mesregs);
      139       139    2            mesregs = Lempty_set();
      140       140    2          next_line_table = next_line_table->lt_next;
      141       141    2          if (next_line_table != (line_table_p) 0 ) {
      142       142    3            next_proc = next_line_table->assoc_proc;
      143       143    3            first_line_ptr = next_line_table->first_line; }
      144       144    2          else {
      145       145    3            first_line_ptr = (line_p) 0; }
      146       146    2         }
      147       147    1         core_usage();
CC.C03    File=zbe$go:c.:ZBC3TSI                                                    Fri Aug 22 1997  Page=5  
      148       148    1        }
      149       149
      150       150
      151       151             no_action() { }
      152       152
      153       153             core_usage()
      154       154             {
      155       155    1         if (core_flag) {
      156       156    2            coreusage();
      157       157    2         }
      158       158    1        }
      159       159
      160       160             report(s,n)
      161       161              char *s;
      162       162              int n;
      163       163             {
      164       164    1         /* Report number of optimizations found, if report_flag is set */
      165       165    1
      166       166    1         if (report_flag) {
      167       167    2            fprintf(stderr,"%s:  %d\n",s,n);
      168       168    2         }
      169       169    1        }
      170       170
---  Include file information  ---

   stdio:h.:LIBRARY. is referenced
   zbe$types:h.:ZBC3TOU. is referenced
   zbe$debug:h.:ZBC3TOU. is referenced
   zbe$global:h.:ZBC3TOU. is referenced
   zbe$files:h.:ZBC3TOU. is referenced
   zbe$get:h.:ZBC3TOU. is referenced
   zbe$put:h.:ZBC3TOU. is referenced
   zbe$lset:h.:ZBC3TOU. is referenced
   zbe$map:h.:ZBC3TOU. is referenced
   zbe$alloc:h.:ZBC3TOU. is referenced
   zbe$go:h.:ZBC3TOU. is referenced

CC.C03    File=zbe$go:c.:ZBC3TSI                                                    Fri Aug 22 1997  Page=6  
No diagnostics were issued in the file zbe$go:c.:ZBC3TSI
