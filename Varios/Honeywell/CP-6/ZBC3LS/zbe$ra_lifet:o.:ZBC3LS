

CC.C03    File=zbe$ra_lifet:c.:ZBC3TSI                                              Fri Aug 22 1997  Page=1  
        1         1             /* $Header: ra_lifet.c,v 1.4 87/03/10 11:25:14 ceriel Exp $ */
        2         2             /*
        3         3              * (c) copyright 1987 by the Vrije Universiteit, Amsterdam, The Netherlands.
        4         4              * See the copyright notice in the ACK home directory, in the file "Copyright"
                               .
        5         5              */
        6         6             /*  R E G I S T E R   A L L O C A T I O N
        7         7              *
        8         8              *  R A _ L I F E T I M E . C
        9         9              */
       10        10
       11        11             #include "types:h"
       12        12             #include "debug:h"
       13        13             #include "def:h"
       14        14             #include "global:h"
       15        15             #include "lset:h"
       16        16             #include "aux:h"
       17        17             #include "alloc:h"
       18        18             #include "em_mnem:h"
       19        19             #include "em_spec:h"
       20        20             #include "em_pseu:h"
       21        21             #include "em_reg:h"
       22        22             #include "ra:h"
       23        23             #include "ra_aux:h"
       24        24             #include "ra_items:h"
       25        25             #include "ra_lifet:h"
       26        26
       27        27
       28        28             #define MSG_OFF(l) aoff(ARG(l),1)
       29        29             #define is_livemsg(l) (INSTR(l) == ps_mes && aoff(ARG(l),0) == ms_liv)
       30        30             #define is_deadmsg(l) (INSTR(l) == ps_mes && aoff(ARG(l),0) == ms_ded)
       31        31
       32        32             build_lifetimes(items)
       33        33              item_p items[];
       34        34             {
       35        35    1         /* compute the it_lives attribute of every item; this is
       36        36    1          * a list of intervals during which the item is live,
CC.C03    File=zbe$ra_lifet:c.:ZBC3TSI                                              Fri Aug 22 1997  Page=2  
       37        37    1          * i.e. its current value may be used.
       38        38    1          * We traverse the EM text of the current procedure in
       39        39    1          * lexical order. If we encounter a live-message, we store
       40        40    1          * the number ('time') of the current instruction in the
       41        41    1          * it_lastlive attribute of the concerning item. If we see
       42        42    1          * a dead-message for that item, we know that the item is
       43        43    1          * live in between these two pseudo's. If the first message
       44        44    1          * appearing in the procedure is a dead-message, the item
       45        45    1          * is live from time 0 (start of procedure) till now. (Note
       46        46    1          * that it_lastlive is initially 0!).
       47        47    1          * The lifetime ends on the last instruction before the
       48        48    1          * dead-message that is not a live -or dead message.
       49        49    1          */
       50        50    1
       51        51    1         register line_p l;
       52        52    1         register short now;
       53        53    1         item_p item;
       54        54    1         short last_code;
       55        55    1
       56        56    1         last_code = 0;
       57        57    1         for (now = 0; now < nrinstrs; now++) {
       58        58    2            l = instrmap[now];
       59        59    2            if (is_livemsg(l)) {
       60        60    3               item = item_of(MSG_OFF(l),items);
       61        61    3               /* A local variable that is never used is NOT an
       62        62    3                * item; yet, there may be a register message for it...
       63        63    3                */
       64        64    3               if(item != (item_p) 0) {
       65        65    4                  item->it_lastlive = last_code + 1;
       66        66    4               }
       67        67    3            } else {
       68        68    3               if (is_deadmsg(l)) {
       69        69    4                  item = item_of(MSG_OFF(l),items);
       70        70    4                  if (item != (item_p) 0) {
       71        71    5                     add_interval(item->it_lastlive,
       72        72    5                            last_code, &item->it_lives);
       73        73    5                  }
CC.C03    File=zbe$ra_lifet:c.:ZBC3TSI                                              Fri Aug 22 1997  Page=3  
       74        74    4               } else {
       75        75    4                  last_code = now;
       76        76    4               }
       77        77    3            }
       78        78    2         }
       79        79    1        }
       80        80
---  Include file information  ---

   zbe$types:h.:ZBC3TOU. is referenced
   zbe$debug:h.:ZBC3TOU. is referenced
   zbe$def:h.:ZBC3TOU. is referenced
   zbe$global:h.:ZBC3TOU. is referenced
   zbe$lset:h.:ZBC3TOU. is referenced
   zbe$aux:h.:ZBC3TOU. is referenced
   zbe$alloc:h.:ZBC3TOU. is referenced
   em_mnem:h.:ZBC3TOU. is referenced
   em_spec:h.:ZBC3TOU. is referenced
   em_pseu:h.:ZBC3TOU. is referenced
   em_reg:h.:ZBC3TOU. is referenced
   zbe$ra:h.:ZBC3TOU. is referenced
   zbe$ra_aux:h.:ZBC3TOU. is referenced
   zbe$ra_items:h.:ZBC3TOU. is referenced
   zbe$ra_lifet:h.:ZBC3TOU. is referenced

No diagnostics were issued in the file zbe$ra_lifet:c.:ZBC3TSI
