

CC.C03    File=zbp$preprocess:c.:ZBC3TSI                                            Fri Aug 22 1997  Page=1  
        1         1             /* $Header: preprocess.c,v 1.10 87/03/10 10:39:21 ceriel Exp $ */
        2         2             /*
        3         3              * (c) copyright 1987 by the Vrije Universiteit, Amsterdam, The Netherlands.
        4         4              * See the copyright notice in the ACK home directory, in the file "Copyright"
                               .
        5         5              */
        6         6             /* PREPROCESSOR DRIVER */
        7         7
        8         8             #include <stdio:h>
        9         9             #include <system:h>
       10        10             #include "input:h"
       11        11             #include "maxincl:h"
       12        12             #include "obufsize:h"
       13        13             #include "LLlex:h"
       14        14             #include "class:h"
       15        15             #include "idf:h"
       16        16             #include "idfsize:h"
       17        17             #include "bits:h"
       18        18             #include "line_prefix:h"
       19        19             #include <alloc:h>
       20        20             #include "macro:h"
       21        21             #include "textsize:h"
       22        22
       23        23             char _obuf[OBUFSIZE];
       24        24             extern FILE *cppout;
       25        25
       26        26             #ifdef DOBITS
       27        27             char bits[128];
       28        28             #endif
       29        29
       30        30             Xflush()
       31        31             {
       32        32    1         _obuf[OBUFSIZE] = '\0';
       33        33    1         fputs(_obuf, cppout);
       34        34    1        }
       35        35
       36        36             preprocess(fn)
CC.C03    File=zbp$preprocess:c.:ZBC3TSI                                            Fri Aug 22 1997  Page=2  
       37        37              char *fn;
       38        38             {
       39        39    1         register int c;
       40        40    1         register char *op = _obuf;
       41        41    1         register char *ob = &_obuf[OBUFSIZE-1];
       42        42    1         char Xbuf[256];
       43        43    1         int lineno = 0;
       44        44    1         extern char options[];
       45        45    1         static int recursive_marker = 0;
       46        46    1         register int expanding_param = 0;
       47        47    1         register int stringization = 0;
       48        48    1         register int pos = 0;
       49        49    1         register int size = ITEXTSIZE;
       50        50    1         register char *text = Malloc(size);
       51        51    1         register int concat = 0;
       52        52    1                       /* concat is set to be TRUE if the next
       53        53    1                          token is a double pound operator
       54        54    1                       */
       55        55    1         register int insert_pos = 0;
       56        56    1                       /* starting position of text which is ready
       57        57    1                          to be inserted after a catenation in
       58        58    1                          stringizations.
       59        59    1                       */
       60        60    1
       61        61    1        /*
       62        62    1          Dealing with double pound sign is different in
       63        63    1          preprocess and LLlex.
       64        64    1          In preprocess, a new catenated token will be
       65        65    1          rescaned ONLY after identifers
       66        66    1          concated with identifers/numbers.  In other cases,
       67        67    1          any new token will not be rescanned because
       68        68    1          they would not be another MACRO.
       69        69    1
       70        70    1          So, in preprocess, only identifers and numbers will
       71        71    1          be buffered in order to complete a catenation.
       72        72    1
       73        73    1          But in LLlex, stringization is a little bit more important
CC.C03    File=zbp$preprocess:c.:ZBC3TSI                                            Fri Aug 22 1997  Page=3  
       74        74    1          than catenation because if there is a stringization
       75        75    1          operator, LLlex should return a type of string and
       76        76    1          the content of it.  Everything should be buffered
       77        77    1          if it's in a stringization operation.
       78        78    1        */
       79        79    1        #define flush(X) {*op ='\0';fputs(_obuf, cppout);}
       80        80    1        #define echo(ch) { if (op == ob) { Xflush(); op = _obuf;} *op++=(ch);}
       81        81    1        #define newline()  echo('\n')
       82        82    1        #define push_text(a)                                     \
       83        82    1                  { text[pos++] = a;                             \
       84        82    1                    if (pos == size)                             \
       85        82    1                       text = Srealloc(text, size <<= 1);        \
       86        82    1                  }                                              \
       87        82    1
       88        88    1         if (! options['P']) {
       89        89    2            /* Generate a line directive communicating the
       90        90    2               source filename
       91        91    2            */
       92        92    2            register char *p = Xbuf;
       93        93    2
       94        94    2            sprint(p, "%s 1 \"%s\"\n",
       95        95    2               LINE_PREFIX,
       96        96    2               FileName);
       97        97    2            while (*p) {
       98        98    3               echo(*p++);
       99        99    3            }
      100       100    2         }
      101       101    1         for (;;) {
      102       102    2            LineNumber++;
      103       103    2            lineno++;
      104       104    2            LoadChar(c);
      105       105    2          /* skip spaces with echoing spaces */
      106       106    2            for (;;) {
      107       107    3               while (class(c) == STSKIP) {
      108       108    4            echo(c);
      109       109    4                  LoadChar(c);
      110       110    4           }
CC.C03    File=zbp$preprocess:c.:ZBC3TSI                                            Fri Aug 22 1997  Page=4  
      111       111    3               /* How about "\\\n"?????????  */
      112       112    3               if (c == '/') {
      113       113    4                  LoadChar(c);
      114       114    4                  if (c == '*') {
      115       115    5                     skipcomment();
      116       116    5                     LoadChar(c);
      117       117    5                  }
      118       118    4                  else  {
      119       119    5                     PushBack();
      120       120    5             goto check_macro;
      121       121    5                  }
      122       122    4               }
      123       123    3               else
      124       124    3            goto check_macro;
      125       125    3            }
      126       126    2        check_macro:
      127       127    2            while (c == '#') {
      128       128    3               domacro();
      129       129    3               lineno++;
      130       130    3               newline();
      131       131    3               LoadChar(c);
      132       132    3           c = skipspaces(c);
      133       133    3            }
      134       134    2            if (lineno != LineNumber || fn != FileName) {
      135       135    3               fn = FileName;
      136       136    3               lineno = LineNumber;
      137       137    3               if (! options['P']) {
      138       138    4                  register char *p = Xbuf;
      139       139    4
      140       140    4                  sprint(p, "%s %d \"%s\"\n",
      141       141    4                     LINE_PREFIX,
      142       142    4                     LineNumber,
      143       143    4                     FileName);
      144       144    4                  while (*p) {
      145       145    5                     echo(*p++);
      146       146    5                  }
      147       147    4               }
CC.C03    File=zbp$preprocess:c.:ZBC3TSI                                            Fri Aug 22 1997  Page=5  
      148       148    3            }
      149       149    2            for (;;) {
      150       150    3               if (c & 0200)  {
      151       151    4            if (c == DBL_POUND) {    /* catenation */
      152       152    5             LoadChar(c);
      153       153    5             continue;
      154       154    5            }
      155       155    4            else
      156       156    4            if (c == SGL_POUND) {    /* stringization */
      157       157    5              if (!concat) {
      158       158    6                 if (stringization) {
      159       159    7                    push_text('\\');
      160       160    7                    push_text('"');
      161       161    7                 }
      162       162    6                 else {
      163       163    7                    if (pos) {
      164       164    8                       char *tg = text;
      165       165    8                       text[pos] = '\0';
      166       166    8                       while (*tg) echo(*tg++);
      167       167    8                       text[pos = 0] = '\0';
      168       168    8                    }
      169       169    7                    push_text('"');
      170       170    7                 }
      171       171    6              }
      172       172    5              else {
      173       173    6                 if (concat == 2) { /* concat strings */
      174       174    7                    while((class(text[--pos]) == STSKIP || text[pos] == '\n')  && pos)
                               ;
      175       175    7                    concat = 0; /* pos now points to the last '"' */
      176       176    7                 }
      177       177    6                 else {
      178       178    7                    if (concat) concat = 2; /*  A"B" */
      179       179    7                    if (stringization) {
      180       180    8                       push_text('\\');
      181       181    8                    }
      182       182    7                    push_text('"');
      183       183    7                 }
CC.C03    File=zbp$preprocess:c.:ZBC3TSI                                            Fri Aug 22 1997  Page=6  
      184       184    6              }
      185       185    5              stringization ++;
      186       186    5              LoadChar(c);
      187       187    5              continue;
      188       188    5            }
      189       189    4            else
      190       190    4            if (c == RECURSION) {    /* recursive marker */
      191       191    5             recursive_marker = 1;
      192       192    5             LoadChar(c);
      193       193    5             continue;
      194       194    5            }
      195       195    4            else
      196       196    4            if (c == EXPAND_PARAM) {    /* expand parameters first */
      197       197    5             LoadChar(c);
      198       198    5             expanding_param = 1;
      199       199    5             if (c == EXPAND_PARAM) {
      200       200    6              while(c == EXPAND_PARAM)
      201       201    6               LoadChar(c);
      202       202    6              expanding_param ++;
      203       203    6             }
      204       204    5             continue;
      205       205    5            }
      206       206    4            else
      207       207    4            if (c == FORMAL_OPEN){/* marker between formal params and a '(' */
      208       208    5             LoadChar(c);
      209       209    5             continue;
      210       210    5            }
      211       211    4            else
      212       212    4            if (c == EOR) {    /* end of a replacement list */
      213       213    5             LoadChar(c);
      214       214    5             continue;
      215       215    5            }
      216       216    4            else
      217       217    4            if (c == 0371) {
      218       218    5             LoadChar(c);
      219       219    5             while (c == EOR) LoadChar(c);
      220       220    5             if (c == DBL_POUND) {
CC.C03    File=zbp$preprocess:c.:ZBC3TSI                                            Fri Aug 22 1997  Page=7  
      221       221    6                concat = 2;  /* concat strings */
      222       222    6             }
      223       223    5             else {
      224       224    6                concat = 0;
      225       225    6                PushBack();
      226       226    6             }
      227       227    5             /*  */
      228       228    5             if (stringization > 1) {
      229       229    6                push_text('\\');
      230       230    6             }
      231       231    5             push_text('"');
      232       232    5             if (!concat && stringization <= 1) {
      233       233    6                char *tg = text;
      234       234    6                text[pos] = '\0';
      235       235    6                while (*tg)  echo(*tg++);
      236       236    6                text[pos = 0] = '\0';
      237       237    6                insert_pos = 0;
      238       238    6             }
      239       239    5             stringization --;
      240       240    5             LoadChar(c);
      241       241    5             continue;
      242       242    5            }
      243       243    4            else
      244       244    4                  if (c == EOI) {
      245       245    5                     flush(op-_obuf);
      246       246    5                     return;
      247       247    5                  }
      248       248    4                  fatal("non-ascii character read");
      249       249    4               }
      250       250    3               if (c == '/') {
      251       251    4                  LoadChar(c);
      252       252    4                  if (c == '*') {
      253       253    5                     NoUnstack++;
      254       254    5                     if (options['C']) {
      255       255    6                        echo('/');
      256       256    6                        echo('*');
      257       257    6                     }
CC.C03    File=zbp$preprocess:c.:ZBC3TSI                                            Fri Aug 22 1997  Page=8  
      258       258    5                     for (;;) {
      259       259    6                        LoadChar(c);
      260       260    6                        if (c == '\n') {
      261       261    7                           ++LineNumber;
      262       262    7                           ++lineno;
      263       263    7                           echo(c);
      264       264    7                        }
      265       265    6                        else if (c == EOI) {
      266       266    7                           flush(op - _obuf);
      267       267    7                           return;
      268       268    7                        }
      269       269    6                        else if (c == '*') {
      270       270    7                           if (options['C']) {
      271       271    8                              echo(c);
      272       272    8                           }
      273       273    7                           LoadChar(c);
      274       274    7                           if (c == '/') {
      275       275    8                              if (options['C']) {
      276       276    9                              echo(c);
      277       277    9                              }
      278       278    8                              break;
      279       279    8                           }
      280       280    7                           else {
      281       281    8                              PushBack();
      282       282    8                           }
      283       283    7                        }
      284       284    6                        else if (options['C']) {
      285       285    7                           echo(c);
      286       286    7                        }
      287       287    6                     }
      288       288    5                     NoUnstack--;
      289       289    5                     LoadChar(c);
      290       290    5                     continue;
      291       291    5                  }
      292       292    4                  echo('/');
      293       293    4                  continue;
      294       294    4               }
CC.C03    File=zbp$preprocess:c.:ZBC3TSI                                            Fri Aug 22 1997  Page=9  
      295       295    3               switch(class(c)) {
      296       296    4               case STNL:
      297       297    4                  echo(c);
      298       298    4                  break;
      299       299    4               case STSTR:
      300       300    4               case STCHAR: {
      301       301    5                  register int stopc = c;
      302       302    5
      303       303    5            if (!concat && !stringization) {
      304       304    6              if (pos) {
      305       305    7                  register char *tg = text;
      306       306    7
      307       307    7                  text[pos] = '\0';
      308       308    7                  while (*tg && *tg != EXPAND_PARAM) echo(*tg++);
      309       309    7                  text[pos = 0] = '\0';
      310       310    7              }
      311       311    6                  do {
      312       312    7             if (c != EXPAND_PARAM && c != RECURSION && c != DBL_POUND && c != SGL_POU
                               ND)
      313       313    7                     echo(c);
      314       314    7             if (c == DBL_POUND) {
      315       315    8                 echo('#');
      316       316    8                 echo('#');
      317       317    8             }
      318       318    7             if (c == SGL_POUND) echo('#');
      319       319    7                     LoadChar(c);
      320       320    7                     if (c == '\n') {
      321       321    8                        ++LineNumber;
      322       322    8                        lineno++;
      323       323    8                        break;
      324       324    8                     }
      325       325    7                     else if (c == EOI) {
      326       326    8                        flush(op-_obuf);
      327       327    8                        return;
      328       328    8                     }
      329       329    7                     if (c == '\\') {
      330       330    8                        echo(c);
CC.C03    File=zbp$preprocess:c.:ZBC3TSI                                            Fri Aug 22 1997  Page=10 
      331       331    8                        LoadChar(c);
      332       332    8                        if (c == '\n') {
      333       333    9                           ++LineNumber;
      334       334    9                           lineno++;
      335       335    9                        }
      336       336    8                     }
      337       337    7                  }
      338       338    6                  while (c != stopc);
      339       339    6                  echo(c);
      340       340    6                  LoadChar(c);
      341       341    6                  continue;
      342       342    6                  }
      343       343    5            else { /* need catenation  or stringization */
      344       344    6            do {
      345       345    7             if (c == '"' && stringization) push_text('\\');
      346       346    7             if (c != EXPAND_PARAM && c != RECURSION && c != DBL_POUND && c != SGL_POU
                               ND) push_text(c);
      347       347    7             if (c == DBL_POUND) {
      348       348    8                 push_text('#');
      349       349    8                 push_text('#');
      350       350    8             }
      351       351    7             if (c == SGL_POUND) push_text('#');
      352       352    7             LoadChar(c);
      353       353    7             if (c == '\n') {
      354       354    8              ++LineNumber;
      355       355    8              lineno++;
      356       356    8              break;
      357       357    8             }
      358       358    7             else if (c == EOI) {
      359       359    8              error("errors in catenation");
      360       360    8              flush(op-_obuf);
      361       361    8              return;
      362       362    8             }
      363       363    7             if (c == '\\') {
      364       364    8              if (stringization) push_text('\\');
      365       365    8              push_text(c);
      366       366    8              LoadChar(c);
CC.C03    File=zbp$preprocess:c.:ZBC3TSI                                            Fri Aug 22 1997  Page=11 
      367       367    8              if (c == '\n') {
      368       368    9                ++LineNumber;
      369       369    9                lineno++;
      370       370    9              }
      371       371    8             }
      372       372    7            }
      373       373    6            while(c != stopc);
      374       374    6            if (c == '"' && stringization) push_text('\\');
      375       375    6            push_text(c);
      376       376    6            LoadChar(c);
      377       377    6            while(c == EOR) LoadChar(c);
      378       378    6            /* more catenations ? */
      379       379    6            if (c != DBL_POUND && c != 0371 && !stringization) {
      380       380    7             void Fake_ReplaceList();
      381       381    7             PushBack();
      382       382    7             text[pos] = '\0';
      383       383    7             InsertText(text, strlen(text));
      384       384    7             Fake_ReplaceList();
      385       385    7             LoadChar(c);
      386       386    7             pos = 0;
      387       387    7             concat = 0;
      388       388    7            }
      389       389    6            else { /* more catenation */
      390       390    7              if (c == DBL_POUND) {
      391       391    8                 concat = 1;
      392       392    8                 if (pos) {
      393       393    9                  while((class(text[--pos])==STSKIP || text[pos]=='\n') && pos);
      394       394    9                  pos++;
      395       395    9                 }
      396       396    8                 LoadChar(c);
      397       397    8              }
      398       398    7            }
      399       399    6            continue;
      400       400    6           } /* need catenation */
      401       401    5           } /* case */
      402       402    4               case STNUM:
      403       403    4        #define getdec(c)  do { echo(c); LoadChar(c);} while (is_dig(c))
CC.C03    File=zbp$preprocess:c.:ZBC3TSI                                            Fri Aug 22 1997  Page=12 
      404       404    4        #define gethex(c)  do { echo(c); LoadChar(c);} while (is_hex(c))
      405       405    4
      406       406    4            if (!concat && !stringization) {
      407       407    5             if (pos) {
      408       408    6              register char *tg = text;
      409       409    6
      410       410    6              text[pos] = '\0';
      411       411    6              while (*tg)  echo(*tg++);
      412       412    6              text[pos = 0] = '\0';
      413       413    6             }
      414       414    5                  if (c != '0') {
      415       415    6                     getdec(c);
      416       416    6                     if (c == '.') getdec(c);
      417       417    6                     if (c == 'e') {
      418       418    7                        echo(c);
      419       419    7                        LoadChar(c);
      420       420    7                        if (c == '+' || c == '-') {
      421       421    8                           echo(c);
      422       422    8                           LoadChar(c);
      423       423    8                        }
      424       424    7                        if (is_dig(c)) getdec(c);
      425       425    7                     }
      426       426    6                  }
      427       427    5                  else {
      428       428    6                     echo(c);
      429       429    6                     LoadChar(c);
      430       430    6                     if (c == 'x' || c == 'X') gethex(c);
      431       431    6                     else if (is_dig(c)) getdec(c);
      432       432    6                  }
      433       433    5            }
      434       434    4            else {  /* need catenation */
      435       435    5        #define decget(c) do { push_text(c);LoadChar(c);} while (is_dig(c))
      436       436    5        #define hexget(c) do { push_text(c);LoadChar(c);} while (is_hex(c))
      437       437    5
      438       438    5             if(c != '0') {
      439       439    6               decget(c);
      440       440    6               if (c == '.') decget(c);
CC.C03    File=zbp$preprocess:c.:ZBC3TSI                                            Fri Aug 22 1997  Page=13 
      441       441    6               if (c == 'e') {
      442       442    7                 push_text(c);
      443       443    7                 LoadChar(c);
      444       444    7                 if (c == '+' || c == '-') {
      445       445    8                   push_text(c);
      446       446    8                   LoadChar(c);
      447       447    8                 }
      448       448    7                 if (is_dig(c)) decget(c);
      449       449    7               }
      450       450    6             }
      451       451    5             else {
      452       452    6               push_text(c);
      453       453    6               LoadChar(c);
      454       454    6               if (c == 'x' || c == 'X') hexget(c);
      455       455    6               else if (is_dig(c)) decget(c);
      456       456    6             }
      457       457    5             while(c == EOR) LoadChar(c);
      458       458    5             /* more catenations ? */
      459       459    5             if (c != DBL_POUND && c != 0371 && !stringization) {
      460       460    6                void Fake_ReplaceList();
      461       461    6                PushBack();
      462       462    6                text[pos] = '\0';
      463       463    6                InsertText(text, strlen(text));
      464       464    6                Fake_ReplaceList();
      465       465    6                LoadChar(c);
      466       466    6                pos = 0;
      467       467    6                concat = 0;
      468       468    6             }
      469       469    5             else {
      470       470    6                if (c == DBL_POUND) {
      471       471    7                   concat = 1;
      472       472    7                   if (pos) {
      473       473    8                      while((class(text[--pos])==STSKIP || text[pos]=='\n') && pos);
      474       474    8                      pos++;
      475       475    8                   }
      476       476    7                   LoadChar(c);
      477       477    7                }
CC.C03    File=zbp$preprocess:c.:ZBC3TSI                                            Fri Aug 22 1997  Page=14 
      478       478    6             }
      479       479    5            }
      480       480    4                  continue;
      481       481    4                   case STIDF: {
      482       482    5                  extern int idfsize;     /* ??? */
      483       483    5         extern int dont_replace_directives; /* set in domacro() */
      484       484    5                  char buf[IDFSIZE + 1];
      485       485    5                  register char *tg = &buf[0];
      486       486    5                  register char *maxpos = &buf[idfsize];
      487       487    5                  register struct idf *idef;
      488       488    5
      489       489    5        #define tstmac(bx) if (!(bits[c] & bx)) goto nomac
      490       490    5        #define cpy     if (Unstacked) EnableMacros(); *tg++ = c
      491       491    5        #define load    LoadChar(c); if (!in_idf(c)) goto endidf
      492       492    5
      493       493    5            if (recursive_marker) {
      494       494    6              for (;;) {
      495       495    7                 if (tg < maxpos)
      496       496    7                   *tg++ = c;
      497       497    7                 load;
      498       498    7              }
      499       499    6            }
      500       500    5        #ifdef DOBITS
      501       501    5                  cpy; tstmac(bit0); load;
      502       502    5                  cpy; tstmac(bit1); load;
      503       503    5                  cpy; tstmac(bit2); load;
      504       504    5                  cpy; tstmac(bit3); load;
      505       505    5                  cpy; tstmac(bit4); load;
      506       506    5                  cpy; tstmac(bit5); load;
      507       507    5                  cpy; tstmac(bit6); load;
      508       508    5                  cpy; tstmac(bit7); load;
      509       509    5        #endif
      510       510    5
      511       511    5                  for(;;) {
      512       512    6                     if (tg < maxpos) {
      513       513    7                        cpy;
      514       514    7                     }
CC.C03    File=zbp$preprocess:c.:ZBC3TSI                                            Fri Aug 22 1997  Page=15 
      515       515    6                     load;
      516       516    6                  }
      517       517    5               endidf:
      518       518    5                  PushBack();
      519       519    5                  *tg = '\0'; /* mark the end of the identifier */
      520       520    5            if (!recursive_marker) {
      521       521    6             if ( expanding_param > 1
      522       522    6               || (!expanding_param && c != DBL_POUND && !concat)
      523       523    6               || (expanding_param == 1 && c != DBL_POUND && !concat && !stringization
                               )) {
      524       524    7                    /* glue(A,B) where A is a and B is b */
      525       525    7               idef = findidf(buf); /* expanding_param = 0; */
      526       526    7                    /* e.g. "xglue(c, xglue(A,B))", xglue is replaced
      527       527    7                       by glue, but if expanding_param set to be 0,
      528       528    7                       there will be no expanding for glue.
      529       529    7                    */
      530       530    7               if (idef && !(dont_replace_directives && idef->id_resmac) && idef->id_m
                               acro && replace(idef)) {
      531       531    8                  LoadChar(c);
      532       532    8                  continue;
      533       533    8               }
      534       534    7             }
      535       535    6             else {
      536       536    7               expanding_param = 0;
      537       537    7             }
      538       538    6            }
      539       539    5            else {
      540       540    6               recursive_marker = 0;
      541       541    6            }
      542       542    5        nomac:
      543       543    5
      544       544    5            *tg = 0;
      545       545    5            tg = buf;
      546       546    5
      547       547    5            if (pos && !text[pos] && !concat && !stringization) {
      548       548    6               text[pos = 0] = '\0';
      549       549    6            }
CC.C03    File=zbp$preprocess:c.:ZBC3TSI                                            Fri Aug 22 1997  Page=16 
      550       550    5            if (stringization && !concat) insert_pos = pos;
      551       551    5            /* e.g "xglue(a, glue(b,c))" we should remember the position
      552       552    5               where "a" is, but not the position where "b" is.
      553       553    5            */
      554       554    5            while (*tg) {
      555       555    6               push_text(*tg++);
      556       556    6            }
      557       557    5
      558       558    5            LoadChar(c);
      559       559    5            while (in_idf(c)) {
      560       560    6               push_text(c);
      561       561    6               LoadChar(c);
      562       562    6            }
      563       563    5
      564       564    5            while (c == EOR) LoadChar(c);
      565       565    5            if (c != DBL_POUND) {
      566       566    6              if (!concat && !stringization || (concat == 2 && !stringization)) { /* n
                               ormal case */
      567       567    7                text[pos] = '\0';
      568       568    7                tg = text;
      569       569    7                while (*tg)  echo(*tg++);
      570       570    7                text[pos = 0] = '\0';
      571       571    7                if (concat == 2) concat = 0;
      572       572    7              }
      573       573    6              else { /* a new token is generated, rescan it */
      574       574    7               if (concat == 1) { /* ignore a string concat with an identifier */
      575       575    8                 void Fake_ReplaceList();
      576       576    8                 PushBack();
      577       577    8                 text[pos] = '\0';
      578       578    8                 if (stringization && insert_pos) {
      579       579    9                    InsertText(text + insert_pos, strlen(text) - insert_pos);
      580       580    9                    pos = insert_pos;
      581       581    9                 }
      582       582    8                 else {
      583       583    9                    InsertText(text, strlen(text));
      584       584    9                    pos = 0;
      585       585    9                 }
CC.C03    File=zbp$preprocess:c.:ZBC3TSI                                            Fri Aug 22 1997  Page=17 
      586       586    8                 Fake_ReplaceList();
      587       587    8                 LoadChar(c);
      588       588    8                 concat = 0;
      589       589    8               }
      590       590    7              }
      591       591    6            }
      592       592    5            else {  /* catenation required */
      593       593    6             concat = 1;
      594       594    6             if (pos) {
      595       595    7              while((class(text[--pos])==STSKIP || text[pos]=='\n')&& pos);
      596       596    7              pos ++;
      597       597    7             }
      598       598    6             LoadChar(c);
      599       599    6            }
      600       600    5            continue;
      601       601    5                  }
      602       602    4                   default:
      603       603    4                if (!concat && !stringization) {
      604       604    5                   int nch;
      605       605    5                   LoadChar(nch);
      606       606    5                   if (nch == DBL_POUND) {
      607       607    6                      concat = 1;
      608       608    6                      push_text(nch);
      609       609    6                   }
      610       610    5                   else {
      611       611    6                     PushBack();   /* push back nch */
      612       612    6                     if (pos) {
      613       613    7                       register char *tg = text;
      614       614    7
      615       615    7                       text[pos] = '\0';
      616       616    7                       while (*tg)  echo(*tg++);
      617       617    7                       text[pos = 0] = '\0';
      618       618    7                     }
      619       619    6                   }
      620       620    5                     echo(c);
      621       621    5                }
      622       622    4                else {
CC.C03    File=zbp$preprocess:c.:ZBC3TSI                                            Fri Aug 22 1997  Page=18 
      623       623    5                     push_text(c);
      624       624    5                }
      625       625    4                     LoadChar(c);
      626       626    4                     continue;
      627       627    4               }
      628       628    3               break;
      629       629    3            }
      630       630    2         }
      631       631    1         /*NOTREACHED*/
      632       632    1        }
      633       633
---  Include file information  ---

   stdio:h.:LIB_E05. is referenced
   system:h.:ZBC3TOU. is referenced
   zbp$input:h.:ZBC3TOU. is referenced
   zbp$inputtype:h.:ZBC3TOU. is referenced
   inp_pkg:spec.:ZBC3TOU. is referenced
   zbp$maxincl:h.:ZBC3TOU. is referenced
   zbp$obufsize:h.:ZBC3TOU. is referenced
   zbp$LLlex:h.:ZBC3TOU. is referenced
   zbp$file_info:h.:ZBC3TOU. is referenced
   zbp$class:h.:ZBC3TOU. is referenced
   charoffset:h.:ZBC3TOU. is referenced
   zbp$idf:h.:ZBC3TOU. is referenced
   idf_pkg:spec.:ZBC3TOU. is referenced
   zbp$idfsize:h.:ZBC3TOU. is referenced
   zbp$bits:h.:ZBC3TOU. is referenced
   zbp$dobits:h.:ZBC3TOU. is referenced
   zbp$line_prefix:h.:ZBC3TOU. is referenced
   alloc:h.:ZBC3TOU. is referenced
   zbp$macro:h.:ZBC3TOU. is referenced
   zbp$textsize:h.:ZBC3TOU. is referenced

No diagnostics were issued in the file zbp$preprocess:c.:ZBC3TSI
