

CC.C03    File=zbc$program:c.:ZBC3TOU                                               Fri Aug 22 1997  Page=1  
        1         1             /* LLgen generated code from source zbc$program:c.:ZBC3TOU */
        2         2             /* $Header: incl,v 2.2 87/02/16 21:35:40 ceriel Exp $ */
        3         3             #ifdef LL_DEBUG
        4         4   *S*       #define LL_assert(x) if(!(x)) LL_badassertion("x",__FILE__,__LINE__)
        5         5   *S*       #else
        6         6             #define LL_assert(x)  /* nothing */
        7         7             #endif
        8         8
        9         9             extern int LLsymb;
       10        10             extern char LLsets[];
       11        11
       12        12             #define LL_SAFE(x) /* Nothing */
       13        13             #define LL_SSCANDONE(x)  if (LLsymb != x) LLerror(x); else
       14        14             #define LL_SCANDONE(x)   if (LLsymb != x) LLerror(x); else
       15        15             #define LL_T_NOSCANDONE(x)  LLscan(x)
       16        16
       17        17             # include "Lpars:h"
       18        18
       19        19             extern unsigned int LLscnt[];
       20        20             extern unsigned int LLtcnt[];
       21        21             extern int LLcsymb;
       22        22             extern int LL_symb;
       23        23
       24        24             #define LLsdecr(d) {LL_assert(LLscnt[d] > 0); LLscnt[d]--;}
       25        25             #define LLtdecr(d) {LL_assert(LLtcnt[d] > 0); LLtcnt[d]--;}
       26        26             #define LLsincr(d) LLscnt[d]++
       27        27             #define LLtincr(d) LLtcnt[d]++
       28        28
       29        29             # line 47 "zbc$program:g.:ZBC3TOU"
       30        30
       31        31             #include  "nopp.h"
       32        32             #include  "arith.h"
       33        33             #include  "LLlex.h"
       34        34             #include  "idf.h"
       35        35             #include  "label.h"
       36        36             #include  "type.h"
       37        37             #include  "declar.h"
CC.C03    File=zbc$program:c.:ZBC3TOU                                               Fri Aug 22 1997  Page=2  
       38        38             #include  "decspecs.h"
       39        39             #include  "code.h"
       40        40             #include  "expr.h"
       41        41             #include  "def.h"
       42        42             #include "level.h"
       43        43
       44        44             #ifndef NOPP
       45        45             extern arith ifval;
       46        46             #endif NOPP
       47        47
       48        48
       49        49             extern error();
       50        50             L75_control_if_expression (
       51        51             ) {
       52        52    1        # line 70 "zbc$program:g.:ZBC3TOU"
       53        53    1
       54        54    1            struct expr *exprX;
       55        55    1
       56        56    1        L19_constant_expression(
       57        57    1        # line 74 "zbc$program:g.:ZBC3TOU"
       58        58    1        &exprX);
       59        59    1        # line 75 "zbc$program:g.:ZBC3TOU"
       60        60    1        {
       61        61    2        #ifndef NOPP
       62        62    2               register struct expr *expr = exprX;
       63        63    2               if (expr->ex_flags & EX_SIZEOF)
       64        64    2                  expr_error(expr, "sizeof not allowed in preprocessor");
       65        65    2        #ifdef FLOATOPT
       66        66    2               if (expr->ex_flags & EX_FLOATOPT)
       67        67    2                  expr_error(expr, "floating point not allowed in preprocessor");
       68        68    2        #endif
       69        69    2               ifval = expr->VL_VALUE;
       70        70    2               free_expression(expr);
       71        71    2        #endif NOPP
       72        72    2            }
       73        73    1        }
       74        74             L74_program (
CC.C03    File=zbc$program:c.:ZBC3TOU                                               Fri Aug 22 1997  Page=3  
       75        75             ) {
       76        76    1        LLsincr(27);
       77        77    1        for (;;) {
       78        78    2        L_1 : switch(LLcsymb) {
       79        79    3        case /*  EOFILE  */ 0 : ;
       80        80    3        break;
       81        81    3        default:{int LL_29=LLnext(-405);
       82        82    4        ;if (!LL_29) {
       83        83    5        break;
       84        84    5        }
       85        85    4        else if (LL_29 & 1) goto L_1;}
       86        86    3        case /*  IDENTIFIER  */ 1 : ;
       87        87    3        case /*  TYPE_IDENTIFIER  */ 2 : ;
       88        88    3        case /*  AUTO  */ 19 : ;
       89        89    3        case /*  ENUM  */ 26 : ;
       90        90    3        case /*  EXTERN  */ 27 : ;
       91        91    3        case /*  LONG  */ 31 : ;
       92        92    3        case /*  REGISTER  */ 32 : ;
       93        93    3        case /*  SHORT  */ 34 : ;
       94        94    3        case /*  STATIC  */ 37 : ;
       95        95    3        case /*  STRUCT  */ 38 : ;
       96        96    3        case /*  TYPEDEF  */ 40 : ;
       97        97    3        case /*  UNION  */ 41 : ;
       98        98    3        case /*  UNSIGNED  */ 42 : ;
       99        99    3        case /*  SIGNED  */ 44 : ;
      100       100    3        case /*  CONST  */ 45 : ;
      101       101    3        case /*  VOLATILE  */ 46 : ;
      102       102    3        case /*  ASM  */ 49 : ;
      103       103    3        case /* ';' */ 89 : ;
      104       104    3        case /* '(' */ 92 : ;
      105       105    3        case /* '*' */ 94 : ;
      106       106    3        L76_external_definition(
      107       107    3        );
      108       108    3        LLread();
      109       109    3        continue;
      110       110    3        }
      111       111    2        LLsdecr(27);
CC.C03    File=zbc$program:c.:ZBC3TOU                                               Fri Aug 22 1997  Page=4  
      112       112    2        break;
      113       113    2        }
      114       114    1        # line 93 "zbc$program:g.:ZBC3TOU"
      115       115    1        {unstack_world();}
      116       116    1        }
      117       117             L76_external_definition (
      118       118             ) {
      119       119    1        # line 116 "zbc$program:g.:ZBC3TOU"
      120       120    1
      121       121    1            struct decspecs Ds;
      122       122    1            struct declarator Dc;
      123       123    1            register struct type *tp;
      124       124    1
      125       125    1        switch(LLcsymb) {
      126       126    2        default:
      127       127    2        LLsincr(28);
      128       128    2        # line 122 "zbc$program:g.:ZBC3TOU"
      129       129    2        {
      130       130    3            Ds = null_decspecs;
      131       131    3            Dc = null_declarator;
      132       132    3         }
      133       133    2        L77_ext_decl_specifiers(
      134       134    2        # line 126 "zbc$program:g.:ZBC3TOU"
      135       135    2        &Ds);
      136       136    2        L_5:
      137       137    2        switch(LLcsymb) {
      138       138    3        case /*  IDENTIFIER  */ 1 : ;
      139       139    3        case /*  TYPE_IDENTIFIER  */ 2 : ;
      140       140    3        case /* '(' */ 92 : ;
      141       141    3        case /* '*' */ 94 : ;
      142       142    3        LLsdecr(28);
      143       143    3        LLsincr(5);
      144       144    3        LLsincr(29);
      145       145    3        L10_declarator(
      146       146    3        # line 128 "zbc$program:g.:ZBC3TOU"
      147       147    3        &Dc);
      148       148    3        # line 129 "zbc$program:g.:ZBC3TOU"
CC.C03    File=zbc$program:c.:ZBC3TOU                                               Fri Aug 22 1997  Page=5  
      149       149    3        {declare_idf(&Ds, &Dc, L_GLOBAL);
      150       150    4             tp = Dc.dc_idf->id_def->df_type;  }
      151       151    3        L_8:
      152       152    3        switch(LLcsymb) {
      153       153    4        case /* '{' */ 97 : ;
      154       154    4        # line 131 "zbc$program:g.:ZBC3TOU"
      155       155    4        if (!(tp->tp_fund == FUNCTION && tp != Ds.ds_type)) goto L_7;
      156       156    4        case /*  TYPE_IDENTIFIER  */ 2 : ;
      157       157    4        case /*  AUTO  */ 19 : ;
      158       158    4        case /*  ENUM  */ 26 : ;
      159       159    4        case /*  EXTERN  */ 27 : ;
      160       160    4        case /*  LONG  */ 31 : ;
      161       161    4        case /*  REGISTER  */ 32 : ;
      162       162    4        case /*  SHORT  */ 34 : ;
      163       163    4        case /*  STATIC  */ 37 : ;
      164       164    4        case /*  STRUCT  */ 38 : ;
      165       165    4        case /*  TYPEDEF  */ 40 : ;
      166       166    4        case /*  UNION  */ 41 : ;
      167       167    4        case /*  UNSIGNED  */ 42 : ;
      168       168    4        case /*  SIGNED  */ 44 : ;
      169       169    4        case /*  CONST  */ 45 : ;
      170       170    4        case /*  VOLATILE  */ 46 : ;
      171       171    4        LLsdecr(29);
      172       172    4        L78_function(
      173       173    4        # line 136 "zbc$program:g.:ZBC3TOU"
      174       174    4        &Dc);
      175       175    4        break;
      176       176    4        L_7 : ;
      177       177    4        default: if (LLskip()) goto L_8;
      178       178    4        goto L_9;
      179       179    4        case /*  IDENTIFIER  */ 1 : ;
      180       180    4        case /*  STRING  */ 3 : ;
      181       181    4        case /*  INTEGER  */ 5 : ;
      182       182    4        case /*  FLOATING  */ 6 : ;
      183       183    4        case /*  PLUSPLUS  */ 9 : ;
      184       184    4        case /*  MINMIN  */ 10 : ;
      185       185    4        case /*  SIZEOF  */ 35 : ;
CC.C03    File=zbc$program:c.:ZBC3TOU                                               Fri Aug 22 1997  Page=6  
      186       186    4        case /*  ALIGNOF  */ 36 : ;
      187       187    4        case /* ';' */ 89 : ;
      188       188    4        case /* ',' */ 90 : ;
      189       189    4        case /* '=' */ 91 : ;
      190       190    4        case /* '(' */ 92 : ;
      191       191    4        case /* '*' */ 94 : ;
      192       192    4        case /* '&' */ 102 : ;
      193       193    4        case /* '-' */ 103 : ;
      194       194    4        case /* '+' */ 104 : ;
      195       195    4        case /* '!' */ 105 : ;
      196       196    4        case /* '~' */ 106 : ;
      197       197    4        L_9: ;
      198       198    4        LLsdecr(29);
      199       199    4        L79_non_function(
      200       200    4        # line 138 "zbc$program:g.:ZBC3TOU"
      201       201    4        &Ds, &Dc);
      202       202    4        break;
      203       203    4        }
      204       204    3        break;
      205       205    3        default: if (LLskip()) goto L_5;
      206       206    3        goto L_6;
      207       207    3        case /* ';' */ 89 : ;
      208       208    3        L_6: ;
      209       209    3        LLsdecr(28);
      210       210    3        LL_SSCANDONE(';');
      211       211    3        # line 142 "zbc$program:g.:ZBC3TOU"
      212       212    3        {
      213       213    4              int fund = Ds.ds_type->tp_fund;
      214       214    4
      215       215    4              if (fund != UNION && fund != STRUCT && fund != ENUM)
      216       216    4                 warning("declaration must declare a variable");
      217       217    4            }
      218       218    3        break;
      219       219    3        }
      220       220    2        # line 149 "zbc$program:g.:ZBC3TOU"
      221       221    2        {remove_declarator(&Dc);}
      222       222    2        break;
CC.C03    File=zbc$program:c.:ZBC3TOU                                               Fri Aug 22 1997  Page=7  
      223       223    2        case /*  ASM  */ 49 : ;
      224       224    2        L50_asm_statement(
      225       225    2        );
      226       226    2        break;
      227       227    2        }
      228       228    1        }
      229       229             L77_ext_decl_specifiers (
      230       230             # line 154 "zbc$program:g.:ZBC3TOU"
      231       231              ds) struct decspecs *ds; {
      232       232    1        switch(LLcsymb) {
      233       233    2        case /*  TYPE_IDENTIFIER  */ 2 : ;
      234       234    2        case /*  AUTO  */ 19 : ;
      235       235    2        case /*  ENUM  */ 26 : ;
      236       236    2        case /*  EXTERN  */ 27 : ;
      237       237    2        case /*  LONG  */ 31 : ;
      238       238    2        case /*  REGISTER  */ 32 : ;
      239       239    2        case /*  SHORT  */ 34 : ;
      240       240    2        case /*  STATIC  */ 37 : ;
      241       241    2        case /*  STRUCT  */ 38 : ;
      242       242    2        case /*  TYPEDEF  */ 40 : ;
      243       243    2        case /*  UNION  */ 41 : ;
      244       244    2        case /*  UNSIGNED  */ 42 : ;
      245       245    2        case /*  SIGNED  */ 44 : ;
      246       246    2        case /*  CONST  */ 45 : ;
      247       247    2        case /*  VOLATILE  */ 46 : ;
      248       248    2        L1_decl_specifiers(
      249       249    2        # line 156 "zbc$program:g.:ZBC3TOU"
      250       250    2        ds);
      251       251    2        break;
      252       252    2        default:
      253       253    2        # line 159 "zbc$program:g.:ZBC3TOU"
      254       254    2        {do_decspecs(ds);}
      255       255    2        break;
      256       256    2        }
      257       257    1        }
      258       258             L79_non_function (
      259       259             # line 162 "zbc$program:g.:ZBC3TOU"
CC.C03    File=zbc$program:c.:ZBC3TOU                                               Fri Aug 22 1997  Page=8  
      260       260              ds,dc) register struct decspecs *ds; register struct declarator *dc; {
      261       261    1        LLtincr(90);
      262       262    1        LLtincr(89);
      263       263    1        # line 164 "zbc$program:g.:ZBC3TOU"
      264       264    1        {
      265       265    2          if (dc->dc_formal && dc->dc_formal->fm_type) {
      266       266    3            unstack_level();
      267       267    3            unstack_level();
      268       268    3            }
      269       269    2          reject_params(dc, 0);
      270       270    2         }
      271       271    1        switch(LLcsymb) {
      272       272    2        case /*  IDENTIFIER  */ 1 : ;
      273       273    2        case /*  STRING  */ 3 : ;
      274       274    2        case /*  INTEGER  */ 5 : ;
      275       275    2        case /*  FLOATING  */ 6 : ;
      276       276    2        case /*  PLUSPLUS  */ 9 : ;
      277       277    2        case /*  MINMIN  */ 10 : ;
      278       278    2        case /*  SIZEOF  */ 35 : ;
      279       279    2        case /*  ALIGNOF  */ 36 : ;
      280       280    2        case /* '=' */ 91 : ;
      281       281    2        case /* '(' */ 92 : ;
      282       282    2        case /* '*' */ 94 : ;
      283       283    2        case /* '{' */ 97 : ;
      284       284    2        case /* '&' */ 102 : ;
      285       285    2        case /* '-' */ 103 : ;
      286       286    2        case /* '+' */ 104 : ;
      287       287    2        case /* '!' */ 105 : ;
      288       288    2        case /* '~' */ 106 : ;
      289       289    2        L11_initializer(
      290       290    2        # line 172 "zbc$program:g.:ZBC3TOU"
      291       291    2        dc->dc_idf, ds->ds_sc, 0);
      292       292    2        break;
      293       293    2        default:
      294       294    2        # line 174 "zbc$program:g.:ZBC3TOU"
      295       295    2        { code_declaration(dc->dc_idf, (struct expr *) 0, level, ds->ds_sc); }
      296       296    2        break;
CC.C03    File=zbc$program:c.:ZBC3TOU                                               Fri Aug 22 1997  Page=9  
      297       297    2        }
      298       298    1        for (;;) {
      299       299    2        L_4 : switch(LLcsymb) {
      300       300    3        case /* ';' */ 89 : ;
      301       301    3        break;
      302       302    3        default:{int LL_30=LLnext(44);
      303       303    4        ;if (!LL_30) {
      304       304    5        break;
      305       305    5        }
      306       306    4        else if (LL_30 & 1) goto L_4;}
      307       307    3        case /* ',' */ 90 : ;
      308       308    3        LL_SAFE(',');
      309       309    3        LLread();
      310       310    3        L9_init_declarator(
      311       311    3        # line 178 "zbc$program:g.:ZBC3TOU"
      312       312    3        ds);
      313       313    3        continue;
      314       314    3        }
      315       315    2        LLtdecr(90);
      316       316    2        break;
      317       317    2        }
      318       318    1        LLtdecr(89);
      319       319    1        LL_SSCANDONE(';');
      320       320    1        }
      321       321             L78_function (
      322       322             # line 184 "zbc$program:g.:ZBC3TOU"
      323       323              dc) struct declarator *dc; {
      324       324    1        # line 185 "zbc$program:g.:ZBC3TOU"
      325       325    1
      326       326    1            arith fbytes, nbytes, typed_list = 0;
      327       327    1
      328       328    1        LLsincr(0);
      329       329    1        LLsincr(30);
      330       330    1        # line 189 "zbc$program:g.:ZBC3TOU"
      331       331    1        {  register struct idf *idf = dc->dc_idf;
      332       332    2
      333       333    2            init_idf(idf);
CC.C03    File=zbc$program:c.:ZBC3TOU                                               Fri Aug 22 1997  Page=10 
      334       334    2            begin_proc(idf->id_text, idf->id_def);
      335       335    2            if (!dc->dc_formal || !dc->dc_formal->fm_type)  {
      336       336    3               stack_level();
      337       337    3               stack_level();
      338       338    3               }
      339       339    2            declare_params(dc);
      340       340    2         }
      341       341    1        for (;;) {
      342       342    2        L_1 : switch(LLcsymb) {
      343       343    3        case /* '{' */ 97 : ;
      344       344    3        break;
      345       345    3        default:{int LL_31=LLnext(0);
      346       346    4        ;if (!LL_31) {
      347       347    5        break;
      348       348    5        }
      349       349    4        else if (LL_31 & 1) goto L_1;}
      350       350    3        case /*  TYPE_IDENTIFIER  */ 2 : ;
      351       351    3        case /*  AUTO  */ 19 : ;
      352       352    3        case /*  ENUM  */ 26 : ;
      353       353    3        case /*  EXTERN  */ 27 : ;
      354       354    3        case /*  LONG  */ 31 : ;
      355       355    3        case /*  REGISTER  */ 32 : ;
      356       356    3        case /*  SHORT  */ 34 : ;
      357       357    3        case /*  STATIC  */ 37 : ;
      358       358    3        case /*  STRUCT  */ 38 : ;
      359       359    3        case /*  TYPEDEF  */ 40 : ;
      360       360    3        case /*  UNION  */ 41 : ;
      361       361    3        case /*  UNSIGNED  */ 42 : ;
      362       362    3        case /*  SIGNED  */ 44 : ;
      363       363    3        case /*  CONST  */ 45 : ;
      364       364    3        case /*  VOLATILE  */ 46 : ;
      365       365    3        L0_declaration(
      366       366    3        );
      367       367    3        # line 199 "zbc$program:g.:ZBC3TOU"
      368       368    3        {typed_list++;}
      369       369    3        LLread();
      370       370    3        continue;
CC.C03    File=zbc$program:c.:ZBC3TOU                                               Fri Aug 22 1997  Page=11 
      371       371    3        }
      372       372    2        LLsdecr(0);
      373       373    2        break;
      374       374    2        }
      375       375    1        # line 200 "zbc$program:g.:ZBC3TOU"
      376       376    1        {
      377       377    2            if (typed_list && dc->dc_formal && dc->dc_formal->fm_type)
      378       378    2               error("function prototype parameters have been re-declared!");
      379       379    2            declare_formals(&fbytes, dc);
      380       380    2         }
      381       381    1        LLsdecr(30);
      382       382    1        L40_compound_statement(
      383       383    1        # line 205 "zbc$program:g.:ZBC3TOU"
      384       384    1        &nbytes);
      385       385    1        # line 206 "zbc$program:g.:ZBC3TOU"
      386       386    1        {
      387       387    2            unstack_level();
      388       388    2            unstack_level();
      389       389    2            end_proc(fbytes, nbytes);
      390       390    2         }
      391       391    1        }
      392       392
      393       393
---  Include file information  ---

   zbc$Lpars:h.:ZBC3TOU. is referenced
   zbc$nopp:h.:ZBC3TOU. is referenced
   zbc$arith:h.:ZBC3TOU. is referenced
   zbc$spec_arith:h.:ZBC3TOU. is referenced
   em_arith:h.:ZBC3TOU. is referenced
   zbc$LLlex:h.:ZBC3TOU. is referenced
   zbc$nofloat:h.:ZBC3TOU. is referenced
   zbc$file_info:h.:ZBC3TOU. is referenced
   zbc$idf:h.:ZBC3TOU. is referenced
   zbc$label:h.:ZBC3TOU. is referenced
   em_label:h.:ZBC3TOU. is referenced
   zbc$type:h.:ZBC3TOU. is referenced
CC.C03    File=zbc$program:c.:ZBC3TOU                                               Fri Aug 22 1997  Page=12 
   zbc$nobitfield:h.:ZBC3TOU. is referenced
   zbc$declar:h.:ZBC3TOU. is referenced
   zbc$decspecs:h.:ZBC3TOU. is referenced
   zbc$code:h.:ZBC3TOU. is referenced
   zbc$expr:h.:ZBC3TOU. is referenced
   zbc$def:h.:ZBC3TOU. is referenced
   zbc$level:h.:ZBC3TOU. is referenced

No diagnostics were issued in the file zbc$program:c.:ZBC3TOU
