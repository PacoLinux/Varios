

CC.C03    File=zbm$valloc$Malloc:c.:ZBC3TSI                                         Fri Aug 22 1997  Page=1  
        1         1             /* $Header: Malloc.c,v 1.4 87/03/10 09:05:05 ceriel Exp $ */
        2         2             /*
        3         3              * (c) copyright 1987 by the Vrije Universiteit, Amsterdam, The Netherlands.
        4         4              * See the copyright notice in the ACK home directory, in the file "Copyright"
                               .
        5         5              */
        6         6             /*  M E M O R Y  A L L O C A T I O N  R O U T I N E S  */
        7         7
        8         8             /*  The memory allocation routines offered in this file are:
        9         9
       10        10              char *Malloc(n)      : allocate n bytes
       11        11              char *Srealloc(ptr, n)  : reallocate buffer to n bytes
       12        12              char *Salloc(str, n) : allocate n bytes, initialized with the string
       13        13                          str
       14        14
       15        15              This file imports routines from "system".
       16        16             */
       17        17
       18        18             #include "valloc$in_all:h"
       19        19             #include "alloc:h"
       20        20             #include <valloc:h>
       21        21             int   Mvmalloc = 1;
       22        22
       23        23             EXPORT char *
       24        24             Malloc(sz)
       25        25              unsigned int sz;
       26        26             {
       27        27    1          char   *res;
       28        28    1          if (!Mvmalloc)
       29        29    1             res = malloc (sz);
       30        30    1          else
       31        31    1             res = vmalloc (sz);
       32        32    1
       33        33    1         if (res == 0) No_Mem();
       34        34    1         return res;
       35        35    1        }
       36        36
CC.C03    File=zbm$valloc$Malloc:c.:ZBC3TSI                                         Fri Aug 22 1997  Page=2  
       37        37             EXPORT char *
       38        38             Salloc(str, sz)
       39        39              register char str[];
       40        40              register unsigned int sz;
       41        41             {
       42        42    1         /* Salloc() is not a primitive function: it just allocates a
       43        43    1            piece of storage and copies a given string into it.
       44        44    1         */
       45        45    1          char   *res;
       46        46    1          register char *m;
       47        47    1
       48        48    1
       49        49    1          if (!Mvmalloc)
       50        50    1             res = malloc (sz);
       51        51    1          else
       52        52    1             res = vmalloc (sz);
       53        53    1          m = res;
       54        54    1         if (m == 0) No_Mem();
       55        55    1         while (sz--)
       56        56    1            *m++ = *str++;
       57        57    1         return res;
       58        58    1        }
       59        59
       60        60             EXPORT char *
       61        61             Srealloc(str, sz)
       62        62              char str[];
       63        63              unsigned int sz;
       64        64             {
       65        65    1          if (!Mvmalloc)
       66        66    1             str = realloc (str, sz);
       67        67    1          else
       68        68    1            str = vrealloc(str, sz);
       69        69    1         if (str == 0) No_Mem();
       70        70    1         return str;
       71        71    1        }
       72        72
       73        73             EXPORT void
CC.C03    File=zbm$valloc$Malloc:c.:ZBC3TSI                                         Fri Aug 22 1997  Page=3  
       74        74             Free (ptr)
       75        75             void *ptr;
       76        76             {
       77        77    1
       78        78    1           if (!Mvmalloc)
       79        79    1              free (ptr);
       80        80    1           else
       81        81    1              vfree (ptr);
       82        82    1        }
---  Include file information  ---

   zbm$valloc$in_all:h.:ZBC3TOU. is referenced
   alloc:h.:ZBC3TOU. is referenced
   valloc:h.:LIB_E05. is referenced

No diagnostics were issued in the file zbm$valloc$Malloc:c.:ZBC3TSI
