

12:33 AUG 20 '97 zbe$global:h.:ZBC3TSI                                     1    
    1      /* $Header: global.h,v 1.4 87/03/10 11:33:36 ceriel Exp $ */
    2      /*
    3       * (c) copyright 1987 by the Vrije Universiteit, Amsterdam, The Netherlands.
    4       * See the copyright notice in the ACK home directory, in the file "Copyright".
    5       */
    6      /*  G L O B A L   V A R I A B L E S   */
    7
    8      /* sizes of TARGET machine */
    9
   10      extern int ps;     /* pointer size */
   11      extern int ws;     /* word size   */
   12
   13      /* sizes of SOURCE machine (i.e. machine on which
   14       * the optimizer runs)
   15       */
   16
   17      /* number of bits in a byte */
   18      #define BYTELENGTH 9
   19
   20      /* number of bits in a word, defined in automatically generated file */
   21      #define WORDLENGTH 36
   22
   23      #if BYTELENGTH==8
   24      #define DIVBL(a)   ((a) >> 3)
   25      #define MODBL(a)   ((a) & 07)
   26      #else
   27      #define DIVBL(A) ((a)/BYTELENGTH)
   28      #define MODBL(a)   ((a)%BYTELENGTH)
   29      #endif
   30
   31      #if WORDLENGTH==16
   32      #define DIVWL(a)   ((a) >> 4)
   33      #define MODWL(a)   ((a) & 017)
   34      #else
   35      #if WORDLENGTH==32
   36      #define DIVWL(a)   ((a) >> 5)
   37      #define MODWL(a)   ((a) & 037)
12:33 AUG 20 '97 zbe$global:h.:ZBC3TSI                                     2    
   38      #else
   39      #define DIVWL(a)   ((a)/WORDLENGTH)
   40      #define MODWL(a)   ((a)%WORDLENGTH)
   41      #endif
   42      #endif
   43
   44
   45      #define UNKNOWN_SIZE (-1)
   46
   47      extern proc_p curproc;  /* current procedure */
   48
   49      extern char *filename; /* name of current input file */
   50
   51      extern lset mesregs;  /* set of MES ms_reg pseudos */
   52      extern proc_p first_proc; /* points to the first procedure.. */
   53      extern proc_p next_proc; /* points to next procedure. */
   54      extern line_p first_line_ptr; /* points to first line of the curr proc. */
   55      extern line_p next_line_ptr; /* points to next line of the curr proc. */
   56      extern proc_p data_proc; /* points to the data only proc. always have one. */
   57      extern line_table_p first_line_table; /* 1st line tbl entry. */
   58      extern int ca_out_flag; /* last phase output is being done. */
   59      extern line_table_p next_line_table;
   60
   61      extern short time_space_ratio; /* 0   if optimizing for space only,
   62                 * 100 if optimizing for time only,
   63                 * else something 'in between'.
   64                 */
   65      #ifdef TS_CP6
   66      #define ZEROPARAMS   16
   67      #else
   68      #define ZEROPARAMS   0
   69      #endif
   70

