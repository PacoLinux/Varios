

CC.C03    File=zbe$il1_cal:c.:ZBC3TSI                                               Fri Aug 22 1997  Page=1  
        1         1             /* $Header: il1_cal.c,v 1.3 87/03/10 11:13:09 ceriel Exp $ */
        2         2             /*
        3         3              * (c) copyright 1987 by the Vrije Universiteit, Amsterdam, The Netherlands.
        4         4              * See the copyright notice in the ACK home directory, in the file "Copyright"
                               .
        5         5              */
        6         6             /*  I N L I N E   S U B S T I T U T I O N
        7         7              *
        8         8              *  I L 1 _ C A L . C
        9         9              */
       10        10
       11        11             #include <stdio:h>
       12        12             #include "types:h"
       13        13             #include "il:h"
       14        14             #include "il1_cal:h"
       15        15             #include "debug:h"
       16        16             #include "alloc:h"
       17        17             #include "global:h"
       18        18             #include "lset:h"
       19        19             #include "em_spec:h"
       20        20             #include "em_mnem:h"
       21        21             #include "il1_aux:h"
       22        22             #include "parser:h"
       23        23
       24        24             STATIC actual_p acts, *app;
       25        25
       26        26             #define INIT_ACTS()   {acts = (actual_p) 0; app = &acts;}
       27        27             #define APPEND_ACTUAL(a) {*app = a; app = &a->ac_next;}
       28        28
       29        29             STATIC make_actual(l1,l2,size)
       30        30              line_p l1,l2;
       31        31              offset size;
       32        32             {
       33        33    1         /* Allocate a struct for a new actual parameter
       34        34    1          * expression, the code of which extends from
       35        35    1          * l1 to l2.
       36        36    1          */
CC.C03    File=zbe$il1_cal:c.:ZBC3TSI                                               Fri Aug 22 1997  Page=2  
       37        37    1
       38        38    1         actual_p a;
       39        39    1
       40        40    1         a = newactual();
       41        41    1         a->ac_exp = copy_code(l1,l2);
       42        42    1         a->ac_size = size;
       43        43    1          a->ac_next = (actual_p) 0;
       44        44    1         APPEND_ACTUAL(a); /* append it to actual-list */
       45        45    1        }
       46        46
       47        47
       48        48
       49        49             STATIC bool chck_asp(p,l)
       50        50              proc_p p;
       51        51              line_p l;
       52        52             {
       53        53    1         /* We require a call to a procedure p that has n formal
       54        54    1          * parameters to be preceeded by an 'loc n' instruction
       55        55    1          * (i.e. the caller should remove the actual parameters).
       56        56    1          */
       57        57    1
       58        58    1         return (p->p_nrformals == ZEROPARAMS || (l != (line_p) 0 &&INSTR(l) == op_loc
                                &&
       59        59    1               TYPE(l) == OPSHORT && SHORT(l) == (p->p_nrformals - ZEROPARAMS)));
       60        60    1        }
       61        61
       62        62
       63        63
       64        64             STATIC inc_count(caller,callee)
       65        65              proc_p caller, callee;
       66        66             {
       67        67    1         /* Update the call-count information.
       68        68    1          * Record the fact that there is one more call
       69        69    1          * to 'callee', appearing in 'caller'.
       70        70    1          */
       71        71    1
       72        72    1         calcnt_p cc;
CC.C03    File=zbe$il1_cal:c.:ZBC3TSI                                               Fri Aug 22 1997  Page=3  
       73        73    1
       74        74    1         if (!SUITABLE(caller)) return;
       75        75    1         /* if the calling routine is never expanded in line
       76        76    1          * we do not need call-count information.
       77        77    1          */
       78        78    1         for (cc = cchead; cc != (calcnt_p) 0; cc = cc->cc_next) {
       79        79    2            if (cc->cc_proc == callee) {
       80        80    3               cc->cc_count++;
       81        81    3               /* #calls to callee from caller */
       82        82    3               return;
       83        83    3            }
       84        84    2         }
       85        85    1         /* This is the first call from caller to callee.
       86        86    1          * Allocate a new calcnt struct.
       87        87    1          */
       88        88    1         cc = newcalcnt();
       89        89    1         cc->cc_proc = callee;
       90        90    1         cc->cc_count = 1;
       91        91    1         cc->cc_next = cchead; /* insert it at front of list */
       92        92    1         cchead = cc;
       93        93    1        }
       94        94
       95        95
       96        96
       97        97             anal_cal(p,call,b,cf)
       98        98              proc_p p;
       99        99              line_p call;
      100       100              bblock_p b;
      101       101              FILE   *cf;
      102       102             {
      103       103    1         /* Analyze a call instruction. If the called
      104       104    1          * routine may be expanded in line, try to
      105       105    1          * recognize the actual parameter expressions of
      106       106    1          * the call and extend the call list.
      107       107    1          */
      108       108    1
      109       109    1         call_p c;
CC.C03    File=zbe$il1_cal:c.:ZBC3TSI                                               Fri Aug 22 1997  Page=4  
      110       110    1         line_p lnp;
      111       111    1         proc_p callee;
      112       112    1
      113       113    1        #ifdef VERBOSE
      114       114   *S*        Scals++;
      115       115   *S*       #endif
      116       116    1         calnr++;
      117       117    1         callee = PROC(call);
      118       118    1         if (SUITABLE(callee)) {
      119       119    2            /* The called procedure may be expanded */
      120       120    2            callee->P_NRCALLED++;   /* #calls to callee from anywhere */
      121       121    2            INIT_ACTS();
      122       122    2          lnp = PREV(call);
      123       123    2          if (PREV(lnp) == (line_p) 0) goto rem_acts;
      124       124    2          if (INSTR(lnp) == op_loc && lnp->l_a.la_short != 0) {
      125       125    3             lnp = PREV(lnp); } /* have args, so make sure that we are
      126       126    2                                pointing past load-address on the arg list. */
      127       127    2            if (parse2(PREV(lnp),callee->p_nrformals-ZEROPARAMS,&lnp,0,make_actual,lnp
                               ) &&
      128       128    2                  chck_asp(callee,call->l_prev)) {
      129       129    3               /* succeeded in recognizing the actuals */
      130       130    3               c = newcall();
      131       131    3               c->cl_caller = p;
      132       132    3               c->cl_id = calnr;
      133       133    3               c->cl_proc = callee;
      134       134    3               c->cl_looplevel = (byte) looplevel(b);
      135       135    3               if (c->cl_looplevel > 0 && IS_FIRM(b)) {
      136       136    4                  c->cl_flags |= CLF_FIRM;
      137       137    4               }
      138       138    3           c->cl_cdr = (call_p) 0;
      139       139    3           c->cl_car = (call_p) 0;
      140       140    3               c->cl_actuals = acts;
      141       141    3               inc_count(p,callee);
      142       142    3               /* update call-count info */
      143       143    3               putcall(c,cf,(short) 0);  /* write the call to the calfile */
      144       144    3            } else {
      145       145    3        #ifdef VERBOSE
CC.C03    File=zbe$il1_cal:c.:ZBC3TSI                                               Fri Aug 22 1997  Page=5  
      146       146   *S*              Sparsefails++;
      147       147   *S*       #endif
      148       148    3        rem_acts: ;
      149       149    3               rem_actuals(acts);
      150       150    3            }
      151       151    2         }
      152       152    1        }
      153       153
---  Include file information  ---

   stdio:h.:LIBRARY. is referenced
   zbe$types:h.:ZBC3TOU. is referenced
   zbe$il:h.:ZBC3TOU. is referenced
   zbe$il1_cal:h.:ZBC3TOU. is referenced
   zbe$debug:h.:ZBC3TOU. is referenced
   zbe$alloc:h.:ZBC3TOU. is referenced
   zbe$global:h.:ZBC3TOU. is referenced
   zbe$lset:h.:ZBC3TOU. is referenced
   em_spec:h.:ZBC3TOU. is referenced
   em_mnem:h.:ZBC3TOU. is referenced
   zbe$il1_aux:h.:ZBC3TOU. is referenced
   zbe$parser:h.:ZBC3TOU. is referenced

No diagnostics were issued in the file zbe$il1_cal:c.:ZBC3TSI
