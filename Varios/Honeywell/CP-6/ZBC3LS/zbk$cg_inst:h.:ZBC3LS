

13:08 AUG 20 '97 zbk$cg_inst:h.:ZBC3TSI                                    1    
    1
    2      /* Tag field values ... */
    3      #define TAG_AU      1
    4      #define TAG_QU      2
    5      #define TAG_DU      3
    6      #define TAG_IC      4
    7      #define TAG_A       5
    8      #define TAG_Q       6
    9      #define TAG_DL      7
   10
   11      /* Resister numbers ... */
   12      #define REG_A       5
   13      #define REG_Q       6
   14
   15      #define REG_X0      8
   16      #define REG_X1      9
   17      #define REG_X2     10
   18      #define REG_X3     11
   19      #define REG_X4     12
   20      #define REG_X5     13
   21      #define REG_X6     14
   22      #define REG_X7     15
   23
   24      #define REG_P0     16
   25      #define REG_P1     17
   26      #define REG_P2     18
   27      #define REG_P3     19
   28      #define REG_P4     20
   29      #define REG_P5     21
   30      #define REG_P6     22
   31      #define REG_P7     23
   32
   33      #define REG_F      24
   34      #define REG_DF     25
   35      #define REG_AQ     26
   36
   37      /* Register sets ... */
13:08 AUG 20 '97 zbk$cg_inst:h.:ZBC3TSI                                    2    
   38      #define IREGS ( (2L<<REG_Q )-(1L<<REG_A ) )
   39      #define FREGS ( (2L<<REG_DF)-(1L<<REG_F ) )
   40      #define XREGS ( (2L<<REG_X7)-(1L<<REG_X2) )
   41      #define PREGS ( (2L<<REG_P7)-(1L<<REG_P3) )
   42
   43      #define ALL_XREGS ( (2L<<REG_X7)-(1L<<REG_X0) )
   44      #define ALL_PREGS ( (2L<<REG_P7)-(1L<<REG_P0) )
   45
   46      #define WORD_REGS  (IREGS|PREGS|XREGS|(1L<<REG_F))
   47      #define DWORD_REGS ((1L<<REG_AQ)|(1L<<REG_DF))
   48      #define AQ_REGS    ((1L<<REG_AQ)|(1L<<REG_F)|(1L<<REG_DF))
   49
   50      /*---------------------------------------------------------*/
   51      /* Instruction word layouts */
   52      /* These parms are version-dependent ... */
   53
   54      #ifdef   _CP6_  /*-----------------------------*/
   55
   56      #define SHIFT_OPCODEx   6
   57      #define SHIFT_OPCODE    9
   58      #define SHIFT_BYTE_ADR 16
   59      #define SHIFT_WORD_ADR 18
   60      #define SHIFT_TAG       0
   61      #define SHIFT_FILL     27
   62      #define SHIFT_PR       33
   63      #define SHIFT_LEN       0
   64
   65                           /* paaaaaiiixxx == std inst w\adr */
   66                           /* 333222iii111 == eis inst w\tags 1, 2, &3 */
   67                           /* paaaaac0nnnn == eis char desc w\len */
   68      #define MASK_OPCODE    0000000777700L
   69      #define MASK_BYTE_ADR  0777777600000L
   70      #define MASK_WORD_ADR  0777777000000L
   71      #define MASK_TAG       0000000000177L
   72      #define MASK_FILL      0777000000000L
   73      #define MASK_PR        0700000000000L
   74      #define MASK_LEN       0000000007777L
13:08 AUG 20 '97 zbk$cg_inst:h.:ZBC3TSI                                    3    
   75
   76      #else /* _PC_  --------------------------------*/
   77
   78      #define SHIFT_OPCODEx   6
   79      #define SHIFT_OPCODE    9
   80      #define SHIFT_BYTE_ADR 16
   81      #define SHIFT_WORD_ADR 18
   82      #define SHIFT_TAG       0
   83      #define SHIFT_FILL     27
   84      #define SHIFT_PR       27
   85      #define SHIFT_LEN       0
   86
   87                           /* --paaaiiixxx == std inst w\adr */
   88                           /* --3222iii111 == eis inst w\tags 1, 2, &3 */
   89                           /* --paaac0nnnn == eis char desc w\len */
   90      #define MASK_OPCODE    0000000777700L
   91      #define MASK_BYTE_ADR  0007777600000L
   92      #define MASK_WORD_ADR  0007777000000L
   93      #define MASK_TAG       0000000000177L
   94      #define MASK_FILL      0007000000000L
   95      #define MASK_PR        0007000000000L
   96      #define MASK_LEN       0000000007777L
   97
   98      #endif  /*-------------------------------------*/
   99
  100      /* "inst" structure declaration & init data ... */
  101      struct inst {
  102         int opcode;
  103         char *mnem;
  104         unsigned long ireq;
  105      };
  106
  107      /*
  108      -------  for inst_tbl[].ireq bits  -------------------
  109
  110               R  reg number req'd
  111               F  fill char / scan mask req'd
13:08 AUG 20 '97 zbk$cg_inst:h.:ZBC3TSI                                    4    
  112               A  address req'd
  113               S  (unused)
  114               N  (unused)
  115               X  (unused)
  116               T  (unused)
  117               P  (unused)
  118               L  length req'd for byte desc
  119
  120      -------  for inst() arg-presence bits  ---------------
  121
  122               R  reg number present
  123               F  fill char / scan mask present
  124               A  address present
  125               S  symbol override present
  126               N  offset addend present
  127               X  xr  override present
  128               T  tag override present
  129               P  pr  override present
  130               L  length present
  131      */
  132
  133      /*                   ------80   register
  134                           ----80--   fill        */
  135      #define R          0x00000080L
  136      #define F          0x00008000L
  137
  138      /*                   ------7f   std word adr
  139                           ----7f--   1st byte adr
  140                           --7f----   2nd byte adr
  141                           7f------   3rd byte/word adr  */
  142      #define A          0x00000001L
  143      #define C          0x00000002L
  144      #define S          0x00000004L
  145      #define N          0x00000008L
  146      #define X          0x00000010L
  147      #define T          0x00000010L  /* == X */
  148      #define P          0x00000020L
13:08 AUG 20 '97 zbk$cg_inst:h.:ZBC3TSI                                    5    
  149      #define L          0x00000040L
  150
  151      #define RA         (R|A)
  152      #define RC         (R|C)
  153      #define RN         (R|N)
  154      #define RX         (R|X)
  155      #define RT         (R|T)
  156      #define RAN        (R|A|N)
  157      #define RANX       (R|A|N|X)
  158      #define RNX        (R|N|X)
  159      #define RNT        (R|N|T)
  160      #define AN         (A|N)
  161      #define AX         (A|X)
  162      #define NX         (N|X)
  163      #define NT         (N|T)
  164      #define RSX        (R|S|X)
  165      #define RSNX       (R|S|N|X)
  166      #define NXP        (N|X|P)
  167      #define XP         (X|P)
  168
  169      /*                 EIS forms
  170                         ( f-  adr1-        adr2-         adr3-     )
  171      */
  172      #define ALAL       (     ((A|L)<<8) | ((A|L)<<16)             )
  173      #define ALPL       (     ((A|L)<<8) | ((P|L)<<16)             )
  174      #define PLPL       (     ((P|L)<<8) | ((P|L)<<16)             )
  175      #define PLXPL      (     ((P|L)<<8) | ((X|P|L)<<16)           )
  176      #define FALAL      ( F | ((A|L)<<8) | ((A|L)<<16)             )
  177      #define FLAL       ( F | (   L <<8) | ((A|L)<<16)             )
  178      #define F0PL       ( F              | ((P|L)<<16)             )
  179      #define ALALA      (     ((A|L)<<8) | ((A|L)<<16)   | (A<<24) )
  180      #define PLALA      (     ((P|L)<<8) | ((A|L)<<16)   | (A<<24) )
  181      #define PLNTA      (     ((P|L)<<8) | ((N|T)<<16)   | (A<<24) )
  182      #define PLNTLA     (     ((P|L)<<8) | ((N|T|L)<<16) | (A<<24) )
  183
  184      #define INST_TBL_DATA        \
  185         {00350,  "ADLa" ,RA  },   \
13:08 AUG 20 '97 zbk$cg_inst:h.:ZBC3TSI                                    6    
  186         {00540,  "AOS"  , A  },   \
  187         {00550,  "ASa"  ,RA  },   \
  188         {00750,  "ADa"  ,RA  },   \
  189         {01150,  "CMPa" ,RA  },   \
  190         {01350,  "SBLa" ,RA  },   \
  191         {01550,  "SSa"  ,RA  },   \
  192         {01750,  "SBa"  ,RA  },   \
  193         {02200,  "LDXn" ,RA  },   \
  194         {02340,  "SZN"  , A  },   \
  195         {02350,  "LDa"  ,RA  },   \
  196         {02370,  "LDAQ" , A  },   \
  197         {02550,  "ORSa" ,RA  },   \
  198         {02750,  "ORa"  ,RA  },   \
  199         {03350,  "LCa"  ,RA  },   \
  200         {03550,  "ANSa" ,RA  },   \
  201         {03750,  "ANa"  ,RA  },   \
  202         {04020,  "MPY"  , A  },   \
  203         {04110,  "LDE"  , A  },   \
  204         {04300,  "FSZN" , A  },   \
  205         {04310,  "FLD"  , A  },   \
  206         {04330,  "DFLD" , A  },   \
  207         {04350,  "UFA"  , A  },   \
  208         {04500,  "STZ"  , A  },   \
  209         {04550,  "FST"  , A  },   \
  210         {04570,  "DFST" , A  },   \
  211         {04610,  "FMP"  , A  },   \
  212         {04630,  "DFMP" , A  },   \
  213         {04750,  "FAD"  , A  },   \
  214         {04770,  "DFAD" , A  },   \
  215         {05060,  "DIV"  , A  },   \
  216         {05070,  "DVF"  , A  },   \
  217         {05130,  "FNEG" , 0L },   \
  218         {05150,  "FCMP" , A  },   \
  219         {05170,  "DFCMP", A  },   \
  220         {05250,  "FDI"  , A  },   \
  221         {05270,  "DFDI" , A  },   \
  222         {05310,  "NEG"  , 0L },   \
13:08 AUG 20 '97 zbk$cg_inst:h.:ZBC3TSI                                    7    
  223         {05330,  "NEGL" , 0L },   \
  224         {05650,  "FDV"  , A  },   \
  225         {05670,  "DFDV" , A  },   \
  226         {05750,  "FSB"  , A  },   \
  227         {05770,  "DFSB" , A  },   \
  228         {06000,  "TZE"  , A  },   \
  229         {06010,  "TNZ"  , A  },   \
  230         {06020,  "TNC"  , A  },   \
  231         {06030,  "TRC"  , A  },   \
  232         {06040,  "TMI"  , A  },   \
  233         {06050,  "TPL"  , A  },   \
  234         {06070,  "TTF"  , A  },   \
  235         {06300,  "RET"  , 0L },   \
  236         {06200,  "EAXn" ,RA  },   \
  237         {06350,  "EAa"  ,RA  },   \
  238         {06550,  "ERSa" ,RA  },   \
  239         {06750,  "ERa"  ,RA  },   \
  240         {07000,  "TSX0" , A  },   \
  241         {07010,  "TSX1" , A  },   \
  242         {07020,  "TSX2" , A  },   \
  243         {07100,  "TRA"  , A  },   \
  244         {07200,  "LXLn" ,RA  },   \
  245         {07310,  "aRS"  ,RA  },   \
  246         {07330,  "LRS"  , A  },   \
  247         {07350,  "aLS"  ,RA  },   \
  248         {07370,  "LLS"  , A  },   \
  249         {07540,  "STI"  , A  },   \
  250         {07550,  "STa"  ,RA  },   \
  251         {07570,  "STAQ" , A  },   \
  252         {07710,  "aRL"  ,RA  },   \
  253         {07730,  "LRL"  , A  },   \
  254         {07750,  "aLR"  ,RA  },   \
  255         {07770,  "LLR"  , A  },   \
  256         {01004,  "MLR"  , ALAL }, \
  257         {01004,  "MLRF" ,FALAL }, \
  258         {01014,  "MRL"  , ALAL }, \
  259         {01064,  "CMPC" , ALAL }, \
13:08 AUG 20 '97 zbk$cg_inst:h.:ZBC3TSI                                    8    
  260         {01244,  "SCM"  , ALALA}, \
  261         {01254,  "SCMR" , ALALA}, \
  262         {04504,  "STPn" ,RA  },   \
  263         {05004,  "A9BD" , A  },   \
  264         {04704,  "LDPn" ,RA  },   \
  265         {06044,  "TMOZ" , A  },   \
  266         {06054,  "TPNZ" , A  },   \
  267         {06064,  "TTN"  , A  },   \
  268         {06304,  "EPPRn",RA  }
  269
  270      /* Indeces into inst_tbl[]... */
  271      #define INST_ADLa    0
  272      #define INST_AOS     1
  273      #define INST_ASa     2
  274      #define INST_ADa     3
  275      #define INST_CMPa    4
  276      #define INST_SBLa    5
  277      #define INST_SSa     6
  278      #define INST_SBa     7
  279      #define INST_LDXn    8
  280      #define INST_SZN     9
  281      #define INST_LDa    10
  282      #define INST_LDAQ   11
  283      #define INST_ORSa   12
  284      #define INST_ORa    13
  285      #define INST_LCa    14
  286      #define INST_ANSa   15
  287      #define INST_ANa    16
  288      #define INST_MPY    17
  289      #define INST_LDE    18
  290      #define INST_FSZN   19
  291      #define INST_FLD    20
  292      #define INST_DFLD   21
  293      #define INST_UFA    22
  294      #define INST_STZ    23
  295      #define INST_FST    24
  296      #define INST_DFST   25
13:08 AUG 20 '97 zbk$cg_inst:h.:ZBC3TSI                                    9    
  297      #define INST_FMP    26
  298      #define INST_DFMP   27
  299      #define INST_FAD    28
  300      #define INST_DFAD   29
  301      #define INST_DIV    30
  302      #define INST_DVF    31
  303      #define INST_FNEG   32
  304      #define INST_FCMP   33
  305      #define INST_DFCMP  34
  306      #define INST_FDI    35
  307      #define INST_DFDI   36
  308      #define INST_NEG    37
  309      #define INST_NEGL   38
  310      #define INST_FDV    39
  311      #define INST_DFDV   40
  312      #define INST_FSB    41
  313      #define INST_DFSB   42
  314      #define INST_TZE    43
  315      #define INST_TNZ    44
  316      #define INST_TNC    45
  317      #define INST_TRC    46
  318      #define INST_TMI    47
  319      #define INST_TPL    48
  320      #define INST_TTF    49
  321      #define INST_RET    50
  322      #define INST_EAXn   51
  323      #define INST_EAa    52
  324      #define INST_ERSa   53
  325      #define INST_ERa    54
  326      #define INST_TSX0   55
  327      #define INST_TSX1   56
  328      #define INST_TSX2   57
  329      #define INST_TRA    58
  330      #define INST_LXLn   59
  331      #define INST_aRS    60
  332      #define INST_LRS    61
  333      #define INST_aLS    62
13:08 AUG 20 '97 zbk$cg_inst:h.:ZBC3TSI                                    10   
  334      #define INST_LLS    63
  335      #define INST_STI    64
  336      #define INST_STa    65
  337      #define INST_STAQ   66
  338      #define INST_aRL    67
  339      #define INST_LRL    68
  340      #define INST_aLR    69
  341      #define INST_LLR    70
  342      #define INST_MLR    71
  343      #define INST_MLRF   72
  344      #define INST_MRL    73
  345      #define INST_CMPC   74
  346      #define INST_SCM    75
  347      #define INST_SCMR   76
  348      #define INST_STPn   77
  349      #define INST_A9BD   78
  350      #define INST_LDPn   79
  351      #define INST_TMOZ   80
  352      #define INST_TPNZ   81
  353      #define INST_TTN    82
  354      #define INST_EPPRn  83
  355

