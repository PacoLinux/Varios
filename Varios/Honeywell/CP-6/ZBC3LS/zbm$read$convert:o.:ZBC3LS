

CC.C03    File=zbm$read$convert:c.:ZBC3TSI                                          Fri Aug 22 1997  Page=1  
        1         1             /*
        2         2              * (c) copyright 1987 by the Vrije Universiteit, Amsterdam, The Netherlands.
        3         3              * See the copyright notice in the ACK home directory, in the file "Copyright"
                               .
        4         4              */
        5         5             #ifndef NORCSID
        6         6             static char rcsid[] = "$Header: convert.c,v 1.6 87/03/31 08:15:22 ceriel Exp $
                               ";
        7         7             #endif
        8         8
        9         9             /*  This program converts either human-readable or compact EM
       10        10              assembly code to calls of the procedure-interface.
       11        11              It must be linked with two libraries:
       12        12              - a library to read EM code, according to read_em(3)
       13        13              - a library implementing the em_code(3) interface.
       14        14              Thus, this program could serve as an EM_encoder, an
       15        15              EM_decoder, or some code generator, depending on how it is
       16        16              linked.
       17        17             */
       18        18
       19        19             #include  <system.h>
       20        20             #include        <em_pseu.h>
       21        21             #include  <em_mnem.h>
       22        22             #include        <em_spec.h>
       23        23             #include        <em_flag.h>
       24        24             #include        <em_ptyp.h>
       25        25             #include  <em.h>
       26        26             #include  <em_comp.h>
       27        27
       28        28             char *filename = 0;         /* Name of input file */
       29        29             int errors;        /* Number of errors */
       30        30
       31        31             main(argc,argv)
       32        32              char **argv;
       33        33             {
       34        34    1         struct e_instr *EM_getinstr();
       35        35    1         register struct e_instr *p;
CC.C03    File=zbm$read$convert:c.:ZBC3TSI                                          Fri Aug 22 1997  Page=2  
       36        36    1         register struct e_args *ap;
"zbm$read$convert:c.:ZBC3TSI", line 36: (warning) identifier "ap" is not used
       37        37    1
       38        38    1         if (argc >= 2) {
       39        39    2            filename = argv[1];
       40        40    2         }
       41        41    1         else  filename = 0;
       42        42    1         if (!EM_open(filename)) {
       43        43    2            fatal(EM_error);
       44        44    2         }
       45        45    1         p = EM_getinstr();
       46        46    1         C_init((arith) EM_wordsize, (arith) EM_pointersize);
       47        47    1         if (argc >= 3) {
       48        48    2            if (!C_open(argv[2])) {
       49        49    3               fatal("C_open failed");
       50        50    3            }
       51        51    2         }
       52        52    1         else  if (!C_open( (char *) 0)) fatal("C_open failed");
       53        53    1         C_magic();
       54        54    1         while (p) {
       55        55    2            if (p->em_type == EM_FATAL) {
       56        56    3               fatal("%s", EM_error);
       57        57    3            }
       58        58    2            if (EM_error) {
       59        59    3               error("%s", EM_error);
       60        60    3            }
       61        61    2            if (p->em_type != EM_ERROR && !EM_mkcalls(p)) {
       62        62    3               error("%s", EM_error);
       63        63    3            }
       64        64    2            p = EM_getinstr();
       65        65    2         }
       66        66    1         C_close();
       67        67    1         EM_close();
       68        68    1         exit(errors);
       69        69    1        }
       70        70
       71        71             /* VARARGS */
CC.C03    File=zbm$read$convert:c.:ZBC3TSI                                          Fri Aug 22 1997  Page=3  
       72        72             error(s,a1,a2,a3,a4)
       73        73              char *s;
       74        74             {
       75        75    1         fprint(STDERR,
       76        76    1            "%s, line %d: ",
       77        77    1            filename ? filename : "standard input",
       78        78    1            EM_lineno);
       79        79    1         fprint(STDERR,s,a1,a2,a3,a4);
       80        80    1         fprint(STDERR, "\n");
       81        81    1         errors++;
       82        82    1        }
       83        83
       84        84             /* VARARGS */
       85        85             fatal(s,a1,a2,a3,a4)
       86        86              char *s;
       87        87             {
       88        88    1         error(s,a1,a2,a3,a4);
       89        89    1         exit(1);
       90        90    1        }
       91        91
---  Include file information  ---

   system:h.:ZBC3TOU. is referenced
   em_pseu:h.:ZBC3TOU. is referenced
   em_mnem:h.:ZBC3TOU. is referenced
   em_spec:h.:ZBC3TOU. is referenced
   em_flag:h.:ZBC3TOU. is referenced
   em_ptyp:h.:ZBC3TOU. is referenced
   em:h.:ZBC3TOU. is referenced
   em_arith:h.:ZBC3TOU. is referenced
   em_label:h.:ZBC3TOU. is referenced
   em_code:h.:ZBC3TOU. is referenced
   zbm$em_comp:h.:ZBC3TOU. is referenced

1 warning was detected in the file zbm$read$convert:c.:ZBC3TSI
