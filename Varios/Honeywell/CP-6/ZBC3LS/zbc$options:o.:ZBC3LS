

CC.C03    File=zbc$options:c.:ZBC3TSI                                               Fri Aug 22 1997  Page=1  
        1         1             /*
        2         2              * (c) copyright 1987 by the Vrije Universiteit, Amsterdam, The Netherlands.
        3         3              * See the copyright notice in the ACK home directory, in the file "Copyright"
                               .
        4         4              */
        5         5             /* $Header: options.c,v 3.11 87/03/25 23:05:47 ceriel Exp $ */
        6         6             /*  U S E R   O P T I O N - H A N D L I N G      */
        7         7
        8         8             #include "botch_free:h"
        9         9             #include <alloc:h>
       10        10             #include "nofloat:h"
       11        11             #include "nopp:h"
       12        12             #include "idfsize:h"
       13        13             #include "maxincl:h"
       14        14             #include "nobitfield:h"
       15        15             #include "class:h"
       16        16             #include "macro:h"
       17        17             #include "idf:h"
       18        18             #include "arith:h"
       19        19             #include "sizes:h"
       20        20             #include "align:h"
       21        21             #include "use_tmp:h"
       22        22             #include "dataflow:h"
       23        23             #include "noRoption:h"
       24        24             #include "debug:h"
       25        25
       26        26             #ifndef NOPP
       27        27             extern char *inctable[MAXINCL];
       28        28             extern int inc_pos;
       29        29             #endif NOPP
       30        30
       31        31             extern char options[];
       32        32             extern int idfsize;
       33        33             #ifdef USE_TMP
       34        34             extern char *tmpfdir; /* main.c */
       35        35             #endif USE_TMP
       36        36
CC.C03    File=zbc$options:c.:ZBC3TSI                                               Fri Aug 22 1997  Page=2  
       37        37             int txt2int();
       38        38
       39        39             do_option(text)
       40        40              char *text;
       41        41             {
       42        42    1         switch(*text++)   {
       43        43    2
       44        44    2         default:
       45        45    2            fatal("illegal option: %c", *--text);
       46        46    2
       47        47    2         case '-':
       48        48    2            options[*text] = 1;  /* flags, debug options etc.  */
       49        49    2            break;
       50        50    2
       51        51    2        #ifdef DATAFLOW
       52        52    2         case 'd':
       53        53    2        #endif DATAFLOW
       54        54    2         case 'p':         /* procentry/procexit */
       55        55    2         case 'L' :        /* no fil/lin */
       56        56    2         case 'n':         /* use no registers */
       57        57    2         case 'w':         /* no warnings will be given */
       58        58    2        #ifdef DEBUG
       59        59    2         case 'f':         /* dump symbol table contents */
       60        60    2         case 'h':         /* print hash statistics      */
       61        61    2         case 'i':         /* print include file names   */
       62        62    2         case 'm':         /* print memory alloc stats   */
       63        63    2         case 't':         /* print symbol table names   */
       64        64    2         case 'u':         /* unstack L_UNIVERSAL        */
       65        65    2         case 'x':         /* dump expressions           */
       66        66    2         case 'S':         /* no CP-6 debug schema       */
       67        67    2        #endif DEBUG
       68        68    2        #ifndef NOROPTION
       69        69    2         case 'R':         /* strict version */
       70        70    2        #endif
       71        71    2            options[*(text-1)] = 1;
       72        72    2            break;
       73        73    2         case 'l':  {     /* Listing */
CC.C03    File=zbc$options:c.:ZBC3TSI                                               Fri Aug 22 1997  Page=3  
       74        74    3            extern int zb_LS_flag;
       75        75    3            char c = *text++;
       76        76    3            if (c) zb_LS_flag = options['l'] = c - '0';
       77        77    3            else zb_LS_flag = options['l'] = 1;
       78        78    3            break;
       79        79    3         }
       80        80    2        #ifdef NOROPTION
       81        81   *S*        case 'R':
       82        82   *S*           warning("-R option not implemented");
       83        83   *S*           break;
       84        84   *S*       #endif
       85        85    2
       86        86    2        #ifdef ___XXX___
       87        87   *S*       deleted, is now a debug-flag
       88        88   *S*        case 'C' :  /* E option + comment output     */
       89        89   *S*       #ifndef NOPP
       90        90   *S*           options['E'] = 1;
       91        91   *S*           warning("-C: comment is not output");
       92        92   *S*       #else NOPP
       93        93   *S*           warning("-C option ignored");
       94        94   *S*       #endif NOPP
       95        95   *S*           break;
       96        96   *S*       #endif ___XXX___
       97        97    2
       98        98    2         case 'D' :  {  /* -Dname : predefine name    */
       99        99    3        #ifndef NOPP
      100       100    3            register char *cp = text, *name, *mactext;
      101       101    3
      102       102    3            if (class(*cp) != STIDF)   {
      103       103    4               error("identifier missing in -D%s", text);
      104       104    4               break;
      105       105    4            }
      106       106    3
      107       107    3            name = cp;
      108       108    3
      109       109    3            while (*cp && in_idf(*cp)) {
      110       110    4               ++cp;
CC.C03    File=zbc$options:c.:ZBC3TSI                                               Fri Aug 22 1997  Page=4  
      111       111    4            }
      112       112    3
      113       113    3            if (!*cp) {       /* -Dname */
      114       114    4               mactext = "1";
      115       115    4            }
      116       116    3            else
      117       117    3            if (*cp == '=')   {     /* -Dname=text */
      118       118    4               *cp++ = '\0';     /* end of name */
      119       119    4               mactext = cp;
      120       120    4            }
      121       121    3            else  {        /* -Dname?? */
      122       122    4               error("malformed option -D%s", text);
      123       123    4               break;
      124       124    4            }
      125       125    3
      126       126    3            macro_def(str2idf(name), (char **)0, mactext, -1, strlen(mactext),
      127       127    3               NOFLAG);
      128       128    3        #else NOPP
      129       129   *S*           warning("-D option ignored");
      130       130   *S*       #endif NOPP
      131       131    3            break;
      132       132    3         }
      133       133    2
      134       134    2        #ifdef ___XXX___
      135       135   *S*        case 'E' :  /* run preprocessor only, with #<int>  */
      136       136   *S*       #ifndef NOPP
      137       137   *S*           options['E'] = 1;
      138       138   *S*       #else NOPP
      139       139   *S*           warning("-E option ignored");
      140       140   *S*       #endif NOPP
      141       141   *S*           break;
      142       142   *S*       #endif ___XXX___
      143       143    2
      144       144    2         case 'I' :  /* -Ipath : insert "path" into include list  */
      145       145    2        #ifndef NOPP
      146       146    2            if (*text)  {
      147       147    3               int i = inc_pos++;
CC.C03    File=zbc$options:c.:ZBC3TSI                                               Fri Aug 22 1997  Page=5  
      148       148    3               register char *new = text;
      149       149    3
      150       150    3               while (new) {
      151       151    4                  char *tmp = inctable[i];
      152       152    4
      153       153    4                  inctable[i++] = new;
      154       154    4                  if (i == MAXINCL)
      155       155    4                     fatal("too many -I options");
      156       156    4                  new = tmp;
      157       157    4               }
      158       158    3            }
      159       159    2            else inctable[inc_pos] = 0;
      160       160    2        #else NOPP
      161       161   *S*           warning("-I option ignored");
      162       162   *S*       #endif NOPP
      163       163    2            break;
      164       164    2
      165       165    2         case 'K' :  /* K&R version */
      166       166    2        #ifndef NOPP
      167       167    2          options['K'] = 1;
      168       168    2        #else NOPP
      169       169   *S*         warning("-K option ignored");
      170       170   *S*       #endif NOPP
      171       171    2          break;
      172       172    2         case 'M':   /* maximum identifier length */
      173       173    2            idfsize = txt2int(&text);
      174       174    2            if (*text || idfsize <= 0)
      175       175    2               fatal("malformed -M option");
      176       176    2            if (idfsize > IDFSIZE)
      177       177    2               fatal("maximum identifier length is %d", IDFSIZE);
      178       178    2            break;
      179       179    2
      180       180    2         case 'N' :
      181       181    2        #ifdef USE_TMP
      182       182    2            options['N'] = 1;
      183       183    2        #else USE_TMP
      184       184   *S*           warning("-N option ignored");
CC.C03    File=zbc$options:c.:ZBC3TSI                                               Fri Aug 22 1997  Page=6  
      185       185   *S*       #endif USE_TMP
      186       186    2            break;
      187       187    2
      188       188    2        #ifdef ___XXX___
      189       189   *S*        case 'P' :  /* run preprocessor stand-alone, without #'s */
      190       190   *S*       #ifndef NOPP
      191       191   *S*           options['E'] = 1;
      192       192   *S*           options['P'] = 1;
      193       193   *S*       #else NOPP
      194       194   *S*           warning("-P option ignored");
      195       195   *S*       #endif NOPP
      196       196   *S*           break;
      197       197   *S*       #endif ___XXX___
      198       198    2
      199       199    2         case 'A' : /* Restricted ANSI C option */
      200       200    2        #ifndef NOPP
      201       201    2          options['A'] = 1;
      202       202    2        #else NOPP
      203       203   *S*         warning("-A option ignored");
      204       204   *S*       #endif NOPP
      205       205    2          break;
      206       206    2        #ifdef USE_TMP
      207       207    2         case 'T' :
      208       208    2            if (*text)
      209       209    2               tmpfdir = text;
      210       210    2            else
      211       211    2               tmpfdir = ".";
      212       212    2        #else USE_TMP
      213       213   *S*           warning("-T option ignored");
      214       214   *S*       #endif USE_TMP
      215       215    2            break;
      216       216    2
      217       217    2         case 'U' :  {  /* -Uname : undefine predefined  */
      218       218    3        #ifndef NOPP
      219       219    3            register struct idf *idef;
      220       220    3
      221       221    3            if (*text)  {
CC.C03    File=zbc$options:c.:ZBC3TSI                                               Fri Aug 22 1997  Page=7  
      222       222    4               if ((idef = str2idf(text))->id_macro) {
      223       223    5                  free_macro(idef->id_macro);
      224       224    5                  idef->id_macro = (struct macro *) 0;
      225       225    5               }
      226       226    4            }
      227       227    3        #else NOPP
      228       228   *S*           warning("-U option ignored");
      229       229   *S*       #endif NOPP
      230       230    3            break;
      231       231    3         }
      232       232    2
      233       233    2         case 'X' : /* unix search */
      234       234    2          options['X'] = 1;
      235       235    2          break;
      236       236    2         case 'V' :  /* set object sizes and alignment requirements  */
      237       237    2        #ifdef NOCROSS
      238       238   *S*           warning("-V option ignored");
      239       239   *S*           break;
      240       240   *S*       #else NOCROSS
      241       241    2         {
      242       242    3            register arith size, align;
      243       243    3            char c;
      244       244    3
      245       245    3            while (c = *text++)  {
      246       246    4               size = txt2int(&text);
      247       247    4               align = 0;
      248       248    4               if (*text == '.') {
      249       249    5                  text++;
      250       250    5                  align = txt2int(&text);
      251       251    5               }
      252       252    4               switch (c)  {
      253       253    5               case 's':   /* short */
      254       254    5                  if (size != (arith)0)
      255       255    5                     short_size = size;
      256       256    5                  if (align != 0)
      257       257    5                     short_align = align;
      258       258    5                  break;
CC.C03    File=zbc$options:c.:ZBC3TSI                                               Fri Aug 22 1997  Page=8  
      259       259    5               case 'w':   /* word     */
      260       260    5                  if (size != (arith)0)
      261       261    5                     dword_size = (word_size = size) << 1;
      262       262    5                  if (align != 0)
      263       263    5                     word_align = align;
      264       264    5                  break;
      265       265    5               case 'i':   /* int      */
      266       266    5                  if (size != (arith)0)
      267       267    5                     int_size = size;
      268       268    5                  if (align != 0)
      269       269    5                     int_align = align;
      270       270    5                  break;
      271       271    5               case 'l':   /* long     */
      272       272    5                  if (size != (arith)0)
      273       273    5                     long_size = size;
      274       274    5                  if (align != 0)
      275       275    5                     long_align = align;
      276       276    5                  break;
      277       277    5               case 'f':   /* float */
      278       278    5        #ifndef NOFLOAT
      279       279    5                  if (size != (arith)0)
      280       280    5                     float_size = size;
      281       281    5                  if (align != 0)
      282       282    5                     float_align = align;
      283       283    5        #endif NOFLOAT
      284       284    5                  break;
      285       285    5               case 'd':   /* double   */
      286       286    5        #ifndef NOFLOAT
      287       287    5                  if (size != (arith)0)
      288       288    5                     double_size = size;
      289       289    5                  if (align != 0)
      290       290    5                     double_align = align;
      291       291    5        #endif NOFLOAT
      292       292    5                  break;
      293       293    5               case 'p':   /* pointer  */
      294       294    5                  if (size != (arith)0)
      295       295    5                     pointer_size = size;
CC.C03    File=zbc$options:c.:ZBC3TSI                                               Fri Aug 22 1997  Page=9  
      296       296    5                  if (align != 0)
      297       297    5                     pointer_align = align;
      298       298    5                  break;
      299       299    5               case 'r':   /* adjust bitfields right  */
      300       300    5        #ifndef NOBITFIELD
      301       301    5                  options['r'] = 1;
      302       302    5        #else NOBITFIELD
      303       303   *S*                 warning("bitfields are not implemented");
      304       304   *S*       #endif NOBITFIELD
      305       305    5                  break;
      306       306    5               case 'S':   /* initial struct alignment   */
      307       307    5                  if (size != (arith)0)
      308       308    5                     struct_align = size;
      309       309    5                  break;
      310       310    5               case 'U':   /* initial union alignment */
      311       311    5                  if (size != (arith)0)
      312       312    5                     union_align = size;
      313       313    5                  break;
      314       314    5               default:
      315       315    5                  error("-V: bad type indicator %c\n", c);
      316       316    5               }
      317       317    4            }
      318       318    3            break;
      319       319    3         }
      320       320    2        #endif NOCROSS
      321       321    2         }
      322       322    1        }
      323       323
      324       324             int
      325       325             txt2int(tp)
      326       326              register char **tp;
      327       327             {
      328       328    1         /* the integer pointed to by *tp is read, while increasing
      329       329    1            *tp; the resulting value is yielded.
      330       330    1         */
      331       331    1         register int val = 0, ch;
      332       332    1
CC.C03    File=zbc$options:c.:ZBC3TSI                                               Fri Aug 22 1997  Page=10 
      333       333    1         while (ch = **tp, ch >= '0' && ch <= '9') {
      334       334    2            val = val * 10 + ch - '0';
      335       335    2            (*tp)++;
      336       336    2         }
      337       337    1         return val;
      338       338    1        }
      339       339
---  Include file information  ---

   zbc$botch_free:h.:ZBC3TOU. is referenced
   alloc:h.:ZBC3TOU. is referenced
   zbc$nofloat:h.:ZBC3TOU. is referenced
   zbc$nopp:h.:ZBC3TOU. is referenced
   zbc$idfsize:h.:ZBC3TOU. is referenced
   zbc$maxincl:h.:ZBC3TOU. is referenced
   zbc$nobitfield:h.:ZBC3TOU. is referenced
   zbc$class:h.:ZBC3TOU. is referenced
   zbc$macro:h.:ZBC3TOU. is referenced
   zbc$idf:h.:ZBC3TOU. is referenced
   zbc$arith:h.:ZBC3TOU. is referenced
   zbc$spec_arith:h.:ZBC3TOU. is referenced
   em_arith:h.:ZBC3TOU. is referenced
   zbc$sizes:h.:ZBC3TOU. is referenced
   zbc$nocross:h.:ZBC3TOU. is referenced
   zbc$target_sizes:h.:ZBC3TOU. is referenced
   zbc$align:h.:ZBC3TOU. is referenced
   zbc$use_tmp:h.:ZBC3TOU. is referenced
   zbc$dataflow:h.:ZBC3TOU. is referenced
   zbc$noRoption:h.:ZBC3TOU. is referenced
   zbc$debug:h.:ZBC3TOU. is referenced

No diagnostics were issued in the file zbc$options:c.:ZBC3TSI
