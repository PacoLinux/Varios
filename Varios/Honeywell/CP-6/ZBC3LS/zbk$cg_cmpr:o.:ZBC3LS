

CC.C03    File=zbk$cg_cmpr:c.:ZBC3TSI                                               Fri Aug 22 1997  Page=1  
        1         1             #include <assert.h>
        2         2             #include "em_mnem.h"
        3         3             #include "cg_tree.h"
        4         4             #include "cg_inst.h"
        5         5             #include "cg_funs.h"
        6         6
        7         7                    int  zbk_compare_cmx (EXPR, unsigned long);
        8         8                    int  zbk_compare_txx (EXPR, unsigned long);
        9         9                    void zbk_compare_zxx (EXPR);
       10        10                    void zbk_compare_bxx (EXPR);
       11        11             static void zbk_gen_branch  (int, ADR);
       12        12             static int  test_row    (EXPR);
       13        13             static int  test_row    (EXPR);
       14        14
       15        15             /*---------------------------------------------------------
       16        16                    MATERIALIZE SIGN INDICATOR FROM COMPARE
       17        17             ------ cmx ------------------------------------------------
       18        18
       19        19                ...(x>y)...
       20        20                   EM code --        L66 code --
       21        21                      lol x             ldq  x
       22        22                      lol y             cmpq y
       23        23                      cmi               sti  tmp
       24        24                                        ldq  tmp
       25        25                                        qrs  15
       26        26                                        anq  7,dl
       27        27                                        ldq  __INDTBL+8r,ql
       28        28
       29        29             -----------------------------------------------------------
       30        30                    MATERIALIZE RELATIONAL USING SIGN TEST
       31        31             ------ txx ------------------------------------------------
       32        32
       33        33                t = (x>0);
       34        34                   EM code --        L66 code --
       35        35                      lol x             szn  x
       36        36                      tgt               tpnz 3,ic
       37        37                                        ldq  0,dl
CC.C03    File=zbk$cg_cmpr:c.:ZBC3TSI                                               Fri Aug 22 1997  Page=2  
       38        38                                        tra  2,ic
       39        39                                        ldq  1,dl
       40        40
       41        41             -----------------------------------------------------------
       42        42                    MATERIALIZE RELATIONAL USING COMPARE
       43        43             ------ cmx txx --------------------------------------------
       44        44
       45        45                t = (x>y);
       46        46                   EM code --        L66 code --
       47        47                      lol x             ldq  x
       48        48                      lol y             cmpq y
       49        49                      cmi               tpnz 3,ic
       50        50                      tgt               ldq  0,dl
       51        51                                        tra  2,ic
       52        52                                        ldq  1,dl
       53        53
       54        54             -----------------------------------------------------------
       55        55                    RELATIONAL BRANCH USING SIGN TEST
       56        56             ------ zxx ------------------------------------------------
       57        57
       58        58                if (x>0) goto l;
       59        59                   EM code --        L66 code --
       60        60                      lol x             szn  x
       61        61                      zgt l             tpnz l
       62        62
       63        63             -----------------------------------------------------------
       64        64                    RELATIONAL BRANCH USING COMPARE
       65        65             ------ cmx zxx --------------------------------------------
       66        66             ------ bxx ------------------------------------------------
       67        67
       68        68                if (x>y) goto l;
       69        69                   EM code --        L66 code --
       70        70                      lol x             ldq  x
       71        71                      lol y             cmpq x
       72        72                     *cmi               tpnz l
       73        73                     *zgt l
       74        74
CC.C03    File=zbk$cg_cmpr:c.:ZBC3TSI                                               Fri Aug 22 1997  Page=3  
       75        75                     *("cmi,zxx" may be abbreviated: "bxx")
       76        76
       77        77             ---------------------------------------------------------*/
       78        78
       79        79             #define INST_TNCOEQ (-1)
       80        80             #define INST_TRCANE (-2)
       81        81             #define CONS_1      (-3)
       82        82             #define CONS_0      (-4)
       83        83
       84        84             static int test_tbl[8][6] = {
       85        85    1        /* ---tlt---    ---tle---    ---teq---    ---tne---    ---tge---    ---tgt---
                                                                  */
       86        86    1           INST_TMI,    INST_TMOZ,   INST_TZE,    INST_TNZ,    INST_TPL,    INST_TPNZ,
                                 /* signtest, signed,   normal    */
       87        87    1           INST_TPNZ,   INST_TPL,    INST_TZE,    INST_TNZ,    INST_TMOZ,   INST_TMI,
                                 /* signtest, signed,   reversed  */
       88        88    1           CONS_0,      INST_TZE,    INST_TZE,    INST_TNZ,    CONS_1,      INST_TNZ,
                                 /* signtest, unsigned, normal    */
       89        89    1           INST_TNZ,    CONS_1,      INST_TZE,    INST_TNZ,    INST_TZE,    CONS_0,
                                 /* signtest, unsigned, reversed  */
       90        90    1           INST_TMI,    INST_TMOZ,   INST_TZE,    INST_TNZ,    INST_TPL,    INST_TPNZ,
                                 /* compare,  signed,   normal    */
       91        91    1           INST_TPNZ,   INST_TPL,    INST_TZE,    INST_TNZ,    INST_TMOZ,   INST_TMI,
                                 /* compare,  signed,   reversed  */
       92        92    1           INST_TNC,    INST_TNCOEQ, INST_TZE,    INST_TNZ,    INST_TRC,    INST_TRCAN
                               E,/* compare,  unsigned, normal    */
       93        93    1           INST_TRCANE, INST_TRC,    INST_TZE,    INST_TNZ,    INST_TNCOEQ, INST_TNC
                                 /* compare,  unsigned, reversed  */
       94        94    1        };
       95        95
       96        96             int zbk_compare_cmx (EXPR node, unsigned long regset)
       97        97             {
       98        98    1        ADR adr;
       99        99    1        int row, reg;
      100       100    1        long indic_ofs;
"zbk$cg_cmpr:c.:ZBC3TSI", line 100: (warning) identifier "indic_ofs" is not used
      101       101    1
CC.C03    File=zbk$cg_cmpr:c.:ZBC3TSI                                               Fri Aug 22 1997  Page=4  
      102       102    1           row = test_row (node);
      103       103    1
      104       104    1           reg = zbk_allocate_reg (regset&IREGS);
      105       105    1           adr = zbk_make_adr_temp (4);
      106       106    1           instruc (-1,
      107       107    1              INST_STI, A,         adr,
      108       108    1              INST_LDa, RA,   reg, adr,
      109       109    1              INST_aRL, RN,   reg, 15,
      110       110    1              INST_ANa, RNT,  reg, 07, TAG_DL,
      111       111    1              INST_LDa, RSNX, reg, "__INDTBL", 8*(row&3), reg,
      112       112    1              -1);
      113       113    1           return (reg);
      114       114    1        }
      115       115
      116       116             int zbk_compare_txx (EXPR node, unsigned long regset)
      117       117             {
      118       118    1        int row, col, test, reg;
      119       119    1
      120       120    1           col  = test_col (node);
      121       121    1           row  = test_row (node->lf);
      122       122    1           test = test_tbl[row][col];
      123       123    1
      124       124    1           reg = zbk_allocate_reg (regset&IREGS);
      125       125    1           if (test>CONS_1) {
      126       126    2              zbk_gen_branch (test,  zbk_make_adr_abs_x(3,TAG_IC));
      127       127    2              instruc (-1,
      128       128    2                 INST_LDa, RNT, reg, 0, TAG_DL,
      129       129    2                 INST_TRA, NT,       2, TAG_IC,
      130       130    2                 INST_LDa, RNT, reg, 1, TAG_DL,
      131       131    2                 -1);
      132       132    2           }
      133       133    1           else
      134       134    1              instruc (INST_LDa, RNT, reg, test-CONS_0, TAG_DL);
      135       135    1           return (reg);
      136       136    1        }
      137       137
      138       138             void zbk_compare_zxx (EXPR node)
CC.C03    File=zbk$cg_cmpr:c.:ZBC3TSI                                               Fri Aug 22 1997  Page=5  
      139       139             {
      140       140    1        int row, col, test;
      141       141    1
      142       142    1           col  = test_col (node);
      143       143    1           row  = test_row (node->lf);
      144       144    1           test = test_tbl[row][col];
      145       145    1
      146       146    1           zbk_gen_branch (test, node);
      147       147    1        }
      148       148
      149       149             void zbk_compare_bxx (EXPR node)
      150       150             {
      151       151    1        int row, col, test;
      152       152    1
      153       153    1           col  = test_col (node);
      154       154    1           node->opcode = op_cmi;
      155       155    1           row  = test_row (node);
      156       156    1           test = test_tbl[row][col];
      157       157    1
      158       158    1           zbk_gen_branch (test, node);
      159       159    1        }
      160       160
      161       161             static void zbk_gen_branch (int test, ADR adr)
      162       162             {
      163       163    1           switch (test) {
      164       164    2           case CONS_1:       test = INST_TRA;
      165       165    2           default:           instruc (test, A, adr);
      166       166    2           case CONS_0:       return;
      167       167    2
      168       168    2           case INST_TNCOEQ:  instruc (-1,
      169       169    2                                 INST_TNC, AN, adr, (adr->xr==TAG_IC),
      170       170    2                                 INST_TZE, A,  adr,
      171       171    2                                 -1);
      172       172    2                              return;
      173       173    2
      174       174    2           case INST_TRCANE:  instruc (-1,
      175       175    2                                 INST_TNC, NT, 2, TAG_IC,
CC.C03    File=zbk$cg_cmpr:c.:ZBC3TSI                                               Fri Aug 22 1997  Page=6  
      176       176    2                                 INST_TNZ, A, adr,
      177       177    2                                 -1);
      178       178    2                              return;
      179       179    2           }
      180       180    1        }
      181       181
      182       182             static int test_row (EXPR node)
      183       183             {
      184       184    1        ADR adr;
      185       185    1        int row, reg, instC, instS;
      186       186    1        unsigned long regset;
      187       187    1
      188       188    1           switch (node->opcode) {
      189       189    2           case op_cmi: row = 4; goto Cmpr_i;
      190       190    2           case op_cmu: row = 6; goto Cmpr_i;
      191       191    2           case op_cmf: row = 4; goto Cmpr_f;
      192       192    2           case op_cms: row = 6; goto Cmpr_i;
      193       193    2           case op_cmp: row = 6; goto Cmpr_i;
      194       194    2           default:     row = 0; goto Sign_1;
      195       195    2           }
      196       196    1
      197       197    1
      198       198    1        Cmpr_f:
      199       199    1           if (node->argval==4) {
      200       200    2              regset= 1L<<REG_F;
      201       201    2              instC = INST_FCMP;
      202       202    2              instS = INST_FSZN;
      203       203    2           }
      204       204    1           else {
      205       205    2              regset= 1L<<REG_DF;
      206       206    2              instC = INST_DFCMP;
      207       207    2              instS = INST_FSZN;
      208       208    2           }
      209       209    1           goto Cmpr_1;
      210       210    1
      211       211    1        Cmpr_i:
      212       212    1           regset= IREGS;
CC.C03    File=zbk$cg_cmpr:c.:ZBC3TSI                                               Fri Aug 22 1997  Page=7  
      213       213    1           instC = INST_CMPa;
      214       214    1           instS = INST_SZN;
      215       215    1
      216       216    1        Cmpr_1:
      217       217    1           if (node_is_zero(node->rt)) {
      218       218    2              node = node->lf;
      219       219    2              row -= 4;
      220       220    2              goto Sign_2;
      221       221    2           }
      222       222    1           if (node_is_zero(node->lf)) {
      223       223    2              node = node->rt;
      224       224    2              row -= 3;
      225       225    2              goto Sign_2;
      226       226    2           }
      227       227    1
      228       228    1           if (!node_is_leaf(node->lf) || node_is_leaf(node->rt)) {
      229       229    2              adr = expr_to_word_adr (node->rt);
      230       230    2              reg = zbk_expr_to_reg (node->lf, regset);
      231       231    2           } else { /*reversed*/
      232       232    2              adr = expr_to_word_adr (node->lf);
      233       233    2              reg = zbk_expr_to_reg (node->rt, regset);
      234       234    2              row ++;
      235       235    2           }
      236       236    1           instruc (instC, RA, reg, adr);
      237       237    1           zbk_release_regn (reg);
      238       238    1           zbk_release_adr_xp (adr);
      239       239    1           return (row);
      240       240    1
      241       241    1        Sign_1:
      242       242    1           regset= IREGS;
      243       243    1           instS = INST_SZN;
      244       244    1        Sign_2:
      245       245    1           if (node_is_leaf(node)) {
      246       246    2              adr = expr_to_word_adr (node);
      247       247    2              instruc (instS, A, adr);
      248       248    2              zbk_release_adr_xp (adr);
      249       249    2           }
CC.C03    File=zbk$cg_cmpr:c.:ZBC3TSI                                               Fri Aug 22 1997  Page=8  
      250       250    1           else {
      251       251    2              reg = zbk_expr_to_reg (node, regset);
      252       252    2              if (reg>=REG_F) reg=REG_A;
      253       253    2              switch (node->opcode)  {
      254       254    3                case op_and:
      255       255    3                case op_ior:
      256       256    3                case op_xor:
      257       257    3                  break;
      258       258    3                default:
      259       259    3                   instruc (INST_ADLa, RNT, reg, 0, TAG_DL);
      260       260    3                }  /* end of switch on exec node type. */
      261       261    2              zbk_release_regn (reg);
      262       262    2           }
      263       263    1           return (row);
      264       264    1        }
      265       265
      266       266             static int test_col (EXPR node)
      267       267             {
"zbk$cg_cmpr:c.:ZBC3TSI", line 267: (warning) function test_col called before prototype definition
      268       268    1           switch (node->opcode) {
      269       269    2           case op_tlt:
      270       270    2           case op_zlt:
      271       271    2           case op_blt: return (0);
      272       272    2           case op_tle:
      273       273    2           case op_zle:
      274       274    2           case op_ble: return (1);
      275       275    2           case op_teq:
      276       276    2           case op_zeq:
      277       277    2           case op_beq: return (2);
      278       278    2           case op_tne:
      279       279    2           case op_zne:
      280       280    2           case op_bne: return (3);
      281       281    2           case op_tge:
      282       282    2           case op_zge:
      283       283    2           case op_bge: return (4);
      284       284    2           case op_tgt:
      285       285    2           case op_zgt:
CC.C03    File=zbk$cg_cmpr:c.:ZBC3TSI                                               Fri Aug 22 1997  Page=9  
      286       286    2           case op_bgt: return (5);
      287       287    2           }
      288       288    1        }
---  Include file information  ---

   assert:h.:LIBRARY. is referenced
   em_mnem:h.:ZBC3TOU. is referenced
   zbk$cg_tree:h.:ZBC3TOU. is referenced
   zbk$cg_inst:h.:ZBC3TOU. is referenced
   zbk$cg_funs:h.:ZBC3TOU. is referenced

2 warnings were detected in the file zbk$cg_cmpr:c.:ZBC3TSI
