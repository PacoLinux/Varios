

CC.C03    File=zbo$mktab:c.:ZBC3TOU                                                 Fri Aug 22 1997  Page=1  
        1         1
        2         2             /*  A Bison parser, made from zbo$mktab:y.:ZBC3TSI  */
        3         3
        4         4             #define	OR2	258
        5         5             #define	AND2	259
        6         6             #define	OR1	260
        7         7             #define	XOR1	261
        8         8             #define	AND1	262
        9         9             #define	CMPEQ	263
       10        10             #define	CMPNE	264
       11        11             #define	CMPLT	265
       12        12             #define	CMPLE	266
       13        13             #define	CMPGT	267
       14        14             #define	CMPGE	268
       15        15             #define	RSHIFT	269
       16        16             #define	LSHIFT	270
       17        17             #define	ARPLUS	271
       18        18             #define	ARMINUS	272
       19        19             #define	ARTIMES	273
       20        20             #define	ARDIVIDE	274
       21        21             #define	ARMOD	275
       22        22             #define	NOT	276
       23        23             #define	COMP	277
       24        24             #define	UMINUS	278
       25        25             #define	SFIT	279
       26        26             #define	UFIT	280
       27        27             #define	NOTREG	281
       28        28             #define	PSIZE	282
       29        29             #define	WSIZE	283
       30        30             #define	DEFINED	284
       31        31             #define	SAMESIGN	285
       32        32             #define	ROM	286
       33        33             #define	ROTATE	287
       34        34             #define	STRING	288
       35        35             #define	MNEM	289
       36        36             #define	NUMBER	290
       37        37
CC.C03    File=zbo$mktab:c.:ZBC3TOU                                                 Fri Aug 22 1997  Page=2  
       38        38             #line 1 "zbo$mktab:y.:ZBC3TSI"
       39        39
       40        40             #ifndef NORCSID
       41        41             static char rcsid[] = "$Header: mktab.y,v 2.3 87/03/10 01:39:43 ceriel Exp $";

       42        42             #endif
       43        43
       44        44             #include <stdio:h>
       45        45             #include "param:h"
       46        46             #include "types:h"
       47        47             #include "pattern:h"
       48        48             #include "em_spec:h"
       49        49             #include "em_mnem:h"
       50        50             #include "optim:h"
       51        51
       52        52             /*
       53        53              * (c) copyright 1987 by the Vrije Universiteit, Amsterdam, The Netherlands.
       54        54              * See the copyright notice in the ACK home directory, in the file "Copyright"
                               .
       55        55              *
       56        56              * Author: Hans van Staveren
       57        57              */
       58        58
       59        59             #define MAXNODES 1000
       60        60             expr_t nodes[MAXNODES];
       61        61             expr_p lastnode = nodes+1;
       62        62             int curind,prevind;
       63        63             int patlen,maxpatlen,rpllen;
       64        64             int lino = 1;
       65        65             int patno=1;
       66        66             #define MAX  100
       67        67             int patmnem[MAX],rplmnem[MAX],rplexpr[MAX];
       68        68             byte   nparam[N_EX_OPS];
       69        69             bool   nonumlab[N_EX_OPS];
       70        70             bool   onlyconst[N_EX_OPS];
       71        71             int nerrors=0;
       72        72             char   patid[128];
CC.C03    File=zbo$mktab:c.:ZBC3TOU                                                 Fri Aug 22 1997  Page=3  
       73        73
       74        74             #line 37 "zbo$mktab:y.:ZBC3TSI"
       75        75             typedef union {
       76        76    1         int   y_int;
       77        77    1        } YYSTYPE;
       78        78
       79        79             #ifndef YYLTYPE
       80        80             typedef
       81        81               struct yyltype
       82        82                 {
       83        83    1              int timestamp;
       84        84    1              int first_line;
       85        85    1              int first_column;
       86        86    1              int last_line;
       87        87    1              int last_column;
       88        88    1              char *text;
       89        89    1           }
       90        90               yyltype;
       91        91
       92        92             #define YYLTYPE yyltype
       93        93             #endif
       94        94
       95        95             #include <stdio.h>
       96        96
       97        97             #ifndef __STDC__
       98        98   *S*       #define const
       99        99   *S*       #endif
      100       100
      101       101
      102       102
      103       103             #define	YYFINAL		113
      104       104             #define	YYFLAG		-32768
      105       105             #define	YYNTBASE	42
      106       106
      107       107             #define YYTRANSLATE(x) ((unsigned)(x) <= 290 ? yytranslate[x] : 51)
      108       108
      109       109             static const char yytranslate[] = {     0,
CC.C03    File=zbo$mktab:c.:ZBC3TOU                                                 Fri Aug 22 1997  Page=4  
      110       110    1             2,     2,     2,     2,     2,     2,     2,     2,     2,    37,
      111       111    1             2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
      112       112    1             2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
      113       113    1             2,     2,     2,     2,     2,    24,     2,     2,     2,    39,
      114       114    1            40,     2,     2,    41,     2,     2,     2,     2,     2,     2,
      115       115    1             2,     2,     2,     2,     2,     2,     2,    38,     2,     2,
      116       116    1             2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
      117       117    1             2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
      118       118    1             2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
      119       119    1             2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
      120       120    1             2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
      121       121    1             2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
      122       122    1             2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
      123       123    1             2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
      124       124    1             2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
      125       125    1             2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
      126       126    1             2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
      127       127    1             2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
      128       128    1             2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
      129       129    1             2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
      130       130    1             2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
      131       131    1             2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
      132       132    1             2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
      133       133    1             2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
      134       134    1             2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
      135       135    1             2,     2,     2,     2,     2,     1,     2,     3,     4,     5,
      136       136    1             6,     7,     8,     9,    10,    11,    12,    13,    14,    15,
      137       137    1            16,    17,    18,    19,    20,    21,    22,    23,    25,    26,
      138       138    1            27,    28,    29,    30,    31,    32,    33,    34,    35,    36
      139       139    1        };
      140       140
      141       141             static const short yyrline[] = {     0,
      142       142    1            63,    64,    65,    66,    68,    87,    91,    99,   101,   103,
      143       143    1           105,   108,   110,   113,   115,   118,   120,   122,   124,   126,
      144       144    1           128,   130,   132,   134,   136,   138,   140,   142,   144,   146,
      145       145    1           148,   150,   152,   154,   156,   158,   160,   162,   164,   166,
      146       146    1           168,   170,   172,   174,   176,   178,   180,   182,   184,   187
CC.C03    File=zbo$mktab:c.:ZBC3TOU                                                 Fri Aug 22 1997  Page=5  
      147       147    1        };
      148       148
      149       149             static const char * const yytname[] = {     0,
      150       150    1        "error","$illegal.","OR2","AND2","OR1","XOR1","AND1","CMPEQ","CMPNE","CMPLT",
      151       151    1        "CMPLE","CMPGT","CMPGE","RSHIFT","LSHIFT","ARPLUS","ARMINUS","ARTIMES","ARDIVI
                               DE","ARMOD",
      152       152    1        "NOT","COMP","UMINUS","'$'","SFIT","UFIT","NOTREG","PSIZE","WSIZE","DEFINED",
      153       153    1        "SAMESIGN","ROM","ROTATE","STRING","MNEM","NUMBER","'\\n'","':'","'('","')'",
      154       154    1        "','","patternlist"
      155       155    1        };
      156       156
      157       157             static const short yyr1[] = {     0,
      158       158    1            42,    42,    42,    42,    43,    43,    44,    44,    45,    45,
      159       159    1            46,    47,    47,    48,    48,    49,    49,    49,    49,    49,
      160       160    1            49,    49,    49,    49,    49,    49,    49,    49,    49,    49,
      161       161    1            49,    49,    49,    49,    49,    49,    49,    49,    49,    49,
      162       162    1            49,    49,    49,    49,    49,    49,    49,    49,    49,    50
      163       163    1        };
      164       164
      165       165             static const short yyr2[] = {     0,
      166       166    1             0,     2,     2,     2,     5,     2,     1,     1,     0,     2,
      167       167    1             2,     1,     2,     0,     1,     2,     1,     1,     1,     4,
      168       168    1             6,     6,     6,     6,     4,     6,     3,     3,     3,     3,
      169       169    1             3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
      170       170    1             3,     3,     3,     3,     3,     2,     2,     2,     2,     1
      171       171    1        };
      172       172
      173       173             static const short yydefact[] = {     1,
      174       174    1             0,     0,     2,     0,    12,     3,     4,    14,     6,     0,
      175       175    1             0,     0,     0,     0,     0,     0,     0,    18,    19,     0,
      176       176    1             0,     0,     0,    13,    17,     0,     0,    15,    46,    47,
      177       177    1            48,    49,    50,    16,     0,     0,     0,     0,     0,     0,
      178       178    1             0,     0,     9,     0,     0,     0,     0,     0,     0,     0,
      179       179    1             0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      180       180    1             0,     0,     0,     0,     0,     0,     0,     0,    27,     0,
      181       181    1             8,     7,    34,    35,    36,    37,    38,    28,    29,    32,
      182       182    1            33,    30,    31,    45,    44,    39,    40,    41,    42,    43,
CC.C03    File=zbo$mktab:c.:ZBC3TOU                                                 Fri Aug 22 1997  Page=6  
      183       183    1             0,     0,    25,    20,     0,     0,     0,     5,    14,    10,
      184       184    1             0,     0,     0,     0,     0,    11,    22,    23,    21,    26,
      185       185    1            24,     0,     0
      186       186    1        };
      187       187
      188       188             static const short yydefgoto[] = {     2,
      189       189    1             7,    70,    71,   100,     8,    27,    28,    34
      190       190    1        };
      191       191
      192       192             static const short yypact[] = {   -19,
      193       193    1           -13,   355,-32768,    -7,-32768,-32768,-32768,   386,-32768,   407,
      194       194    1           407,   407,   407,    -4,    39,    40,    41,-32768,-32768,    44,
      195       195    1            45,    50,    89,-32768,-32768,   407,   146,   444,-32768,-32768,
      196       196    1        -32768,-32768,-32768,-32768,   407,   407,   407,   407,   407,    -4,
      197       197    1           407,   163,   407,   407,   407,   407,   407,   407,   407,   407,
      198       198    1           407,   407,   407,   407,   407,   407,   407,   407,   407,   407,
      199       199    1           407,    49,    88,   201,   219,   106,    47,   145,-32768,    90,
      200       200    1           150,   444,   126,   182,   236,   291,   349,    -6,    -6,     3,
      201       201    1             3,     3,     3,    54,    54,    57,    57,-32768,-32768,-32768,
      202       202    1           407,   407,-32768,-32768,   407,   407,   407,-32768,   407,-32768,
      203       203    1           257,   275,   313,   331,   369,-32768,-32768,-32768,-32768,-32768,
      204       204    1        -32768,   240,-32768
      205       205    1        };
      206       206
      207       207             static const short yypgoto[] = {-32768,
      208       208    1        -32768,-32768,-32768,-32768,-32768,   158,   -10,   218
      209       209    1        };
      210       210
      211       211
      212       212             #define	YYLAST		464
      213       213
      214       214
      215       215             static const short yytable[] = {    29,
      216       216    1            30,    31,    32,    51,    52,    53,    54,    55,    56,    57,
      217       217    1            58,    59,    60,    61,     1,    42,    55,    56,    57,    58,
      218       218    1            59,    60,    61,     3,    62,    63,    64,    65,    66,     9,
      219       219    1            68,    33,    72,    73,    74,    75,    76,    77,    78,    79,
CC.C03    File=zbo$mktab:c.:ZBC3TOU                                                 Fri Aug 22 1997  Page=7  
      220       220    1            80,    81,    82,    83,    84,    85,    86,    87,    88,    89,
      221       221    1            90,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      222       222    1            53,    54,    55,    56,    57,    58,    59,    60,    61,    57,
      223       223    1            58,    59,    60,    61,    59,    60,    61,    35,    36,    37,
      224       224    1           101,   102,    38,    39,   103,   104,   105,    96,    40,    91,
      225       225    1            44,    45,    46,    47,    48,    49,    50,    51,    52,    53,
      226       226    1            54,    55,    56,    57,    58,    59,    60,    61,    44,    45,
      227       227    1            46,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      228       228    1            56,    57,    58,    59,    60,    61,    98,    41,    92,    45,
      229       229    1            46,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      230       230    1            56,    57,    58,    59,    60,    61,    95,    44,    45,    46,
      231       231    1            47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
      232       232    1            57,    58,    59,    60,    61,    44,    45,    46,    47,    48,
      233       233    1            49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      234       234    1            59,    60,    61,    43,    99,    97,    46,    47,    48,    49,
      235       235    1            50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      236       236    1            60,    61,    69,    44,    45,    46,    47,    48,    49,    50,
      237       237    1            51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      238       238    1            61,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      239       239    1            53,    54,    55,    56,    57,    58,    59,    60,    61,   113,
      240       240    1            93,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      241       241    1            56,    57,    58,    59,    60,    61,   106,    67,    94,    44,
      242       242    1            45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      243       243    1            55,    56,    57,    58,    59,    60,    61,    44,    45,    46,
      244       244    1            47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
      245       245    1            57,    58,    59,    60,    61,     0,   107,    48,    49,    50,
      246       246    1            51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      247       247    1            61,     0,     0,     0,   108,    44,    45,    46,    47,    48,
      248       248    1            49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      249       249    1            59,    60,    61,    44,    45,    46,    47,    48,    49,    50,
      250       250    1            51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      251       251    1            61,     0,   109,     0,   112,     4,    49,    50,    51,    52,
      252       252    1            53,    54,    55,    56,    57,    58,    59,    60,    61,     0,
      253       253    1           110,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      254       254    1            53,    54,    55,    56,    57,    58,    59,    60,    61,     5,
      255       255    1             0,     6,     0,     0,     0,     0,     0,     0,     0,     0,
      256       256    1             0,    10,    11,     0,     0,     0,    12,    13,   111,    14,
CC.C03    File=zbo$mktab:c.:ZBC3TOU                                                 Fri Aug 22 1997  Page=8  
      257       257    1            15,    16,    17,    18,    19,    20,    21,    22,    23,     0,
      258       258    1            24,    25,    10,    11,    26,     0,     0,    12,    13,     0,
      259       259    1            14,    15,    16,    17,    18,    19,    20,    21,    22,    23,
      260       260    1             0,     0,    25,     0,     0,    26,    44,    45,    46,    47,
      261       261    1            48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      262       262    1            58,    59,    60,    61
      263       263    1        };
      264       264
      265       265             static const short yycheck[] = {    10,
      266       266    1            11,    12,    13,    10,    11,    12,    13,    14,    15,    16,
      267       267    1            17,    18,    19,    20,    34,    26,    14,    15,    16,    17,
      268       268    1            18,    19,    20,    37,    35,    36,    37,    38,    39,    37,
      269       269    1            41,    36,    43,    44,    45,    46,    47,    48,    49,    50,
      270       270    1            51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      271       271    1            61,     3,     4,     5,     6,     7,     8,     9,    10,    11,
      272       272    1            12,    13,    14,    15,    16,    17,    18,    19,    20,    16,
      273       273    1            17,    18,    19,    20,    18,    19,    20,    39,    39,    39,
      274       274    1            91,    92,    39,    39,    95,    96,    97,    41,    39,    41,
      275       275    1             3,     4,     5,     6,     7,     8,     9,    10,    11,    12,
      276       276    1            13,    14,    15,    16,    17,    18,    19,    20,     3,     4,
      277       277    1             5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      278       278    1            15,    16,    17,    18,    19,    20,    37,    39,    41,     4,
      279       279    1             5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      280       280    1            15,    16,    17,    18,    19,    20,    41,     3,     4,     5,
      281       281    1             6,     7,     8,     9,    10,    11,    12,    13,    14,    15,
      282       282    1            16,    17,    18,    19,    20,     3,     4,     5,     6,     7,
      283       283    1             8,     9,    10,    11,    12,    13,    14,    15,    16,    17,
      284       284    1            18,    19,    20,    38,    35,    41,     5,     6,     7,     8,
      285       285    1             9,    10,    11,    12,    13,    14,    15,    16,    17,    18,
      286       286    1            19,    20,    40,     3,     4,     5,     6,     7,     8,     9,
      287       287    1            10,    11,    12,    13,    14,    15,    16,    17,    18,    19,
      288       288    1            20,     3,     4,     5,     6,     7,     8,     9,    10,    11,
      289       289    1            12,    13,    14,    15,    16,    17,    18,    19,    20,     0,
      290       290    1            40,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      291       291    1            15,    16,    17,    18,    19,    20,    99,    40,    40,     3,
      292       292    1             4,     5,     6,     7,     8,     9,    10,    11,    12,    13,
      293       293    1            14,    15,    16,    17,    18,    19,    20,     3,     4,     5,
CC.C03    File=zbo$mktab:c.:ZBC3TOU                                                 Fri Aug 22 1997  Page=9  
      294       294    1             6,     7,     8,     9,    10,    11,    12,    13,    14,    15,
      295       295    1            16,    17,    18,    19,    20,    -1,    40,     7,     8,     9,
      296       296    1            10,    11,    12,    13,    14,    15,    16,    17,    18,    19,
      297       297    1            20,    -1,    -1,    -1,    40,     3,     4,     5,     6,     7,
      298       298    1             8,     9,    10,    11,    12,    13,    14,    15,    16,    17,
      299       299    1            18,    19,    20,     3,     4,     5,     6,     7,     8,     9,
      300       300    1            10,    11,    12,    13,    14,    15,    16,    17,    18,    19,
      301       301    1            20,    -1,    40,    -1,     0,     1,     8,     9,    10,    11,
      302       302    1            12,    13,    14,    15,    16,    17,    18,    19,    20,    -1,
      303       303    1            40,     3,     4,     5,     6,     7,     8,     9,    10,    11,
      304       304    1            12,    13,    14,    15,    16,    17,    18,    19,    20,    35,
      305       305    1            -1,    37,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      306       306    1            -1,    16,    17,    -1,    -1,    -1,    21,    22,    40,    24,
      307       307    1            25,    26,    27,    28,    29,    30,    31,    32,    33,    -1,
      308       308    1            35,    36,    16,    17,    39,    -1,    -1,    21,    22,    -1,
      309       309    1            24,    25,    26,    27,    28,    29,    30,    31,    32,    33,
      310       310    1            -1,    -1,    36,    -1,    -1,    39,     3,     4,     5,     6,
      311       311    1             7,     8,     9,    10,    11,    12,    13,    14,    15,    16,
      312       312    1            17,    18,    19,    20
      313       313    1        };
      314       314             #define YYPURE 1
      315       315
      316       316             /* -*-C-*-  Note some compilers choke on comments on `#line' lines.  */
      317       317             #line 3 "bison.simple"
      318       318
      319       319             /* Skeleton output parser for bison,
      320       320                Copyright (C) 1984 Bob Corbett and Richard Stallman
      321       321
      322       322                This program is free software; you can redistribute it and/or modify
      323       323                it under the terms of the GNU General Public License as published by
      324       324                the Free Software Foundation; either version 1, or (at your option)
      325       325                any later version.
      326       326
      327       327                This program is distributed in the hope that it will be useful,
      328       328                but WITHOUT ANY WARRANTY; without even the implied warranty of
      329       329                MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
      330       330                GNU General Public License for more details.
CC.C03    File=zbo$mktab:c.:ZBC3TOU                                                 Fri Aug 22 1997  Page=10 
      331       331
      332       332                You should have received a copy of the GNU General Public License
      333       333                along with this program; if not, write to the Free Software
      334       334                Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  */
      335       335
      336       336
      337       337             #if (!defined (__STDC__) && defined (sparc)) || defined (__sparc__)
      338       338   *S*       #include <alloca.h>
      339       339   *S*       #endif
      340       340
      341       341             #if   __STDC__
      342       342             #include    <stdlib.h>
      343       343             extern void *alloca(int);
      344       344             #endif
      345       345
      346       346             /* This is the parser code that is written into each bison parser
      347       347               when the %semantic_parser declaration is not specified in the grammar.
      348       348               It was written by Richard Stallman by simplifying the hairy parser
      349       349               used when %semantic_parser is specified.  */
      350       350
      351       351             /* Note: there must be only one dollar sign in this file.
      352       352                It is replaced by the list of actions, each action
      353       353                as one case of the switch.  */
      354       354
      355       355             #define yyerrok		(yyerrstatus = 0)
      356       356             #define yyclearin	(yychar = YYEMPTY)
      357       357             #define YYEMPTY		-2
      358       358             #define YYEOF		0
      359       359             #define YYFAIL		goto yyerrlab;
      360       360             #define YYACCEPT	return(0)
      361       361             #define YYABORT 	return(1)
      362       362             #define YYERROR		goto yyerrlab
      363       363
      364       364             #define YYTERROR	1
      365       365             #define YYERRCODE	256
      366       366
      367       367             #ifndef YYIMPURE
CC.C03    File=zbo$mktab:c.:ZBC3TOU                                                 Fri Aug 22 1997  Page=11 
      368       368             #define YYLEX		yylex()
      369       369             #endif
      370       370
      371       371             #ifndef YYPURE
      372       372   *S*       #define YYLEX		yylex(&yylval, &yylloc)
      373       373   *S*       #endif
      374       374
      375       375             /* If nonreentrant, generate the variables here */
      376       376
      377       377             #ifndef YYIMPURE
      378       378
      379       379             int	yychar;			/*  the lookahead symbol		*/
      380       380             YYSTYPE	yylval;			/*  the semantic value of the		*/
      381       381             				/*  lookahead symbol			*/
      382       382
      383       383             YYLTYPE yylloc;			/*  location data for the lookahead	*/
      384       384             				/*  symbol				*/
      385       385
      386       386             int yynerrs;			/*  number of parse errors so far       */
      387       387             #endif  /* YYIMPURE */
      388       388
      389       389             #if YYDEBUG != 0
      390       390   *S*       int yydebug;			/*  nonzero means print parse trace	*/
      391       391   *S*       /* Since this is uninitialized, it does not stop multiple parsers
      392       392   *S*          from coexisting.  */
      393       393   *S*       #endif
      394       394
      395       395             /*  YYMAXDEPTH indicates the initial size of the parser's stacks	*/
      396       396
      397       397             #ifndef	YYMAXDEPTH
      398       398             #define YYMAXDEPTH 200
      399       399             #endif
      400       400
      401       401             /*  YYMAXLIMIT is the maximum size the stacks can grow to
      402       402                 (effective only if the built-in stack extension method is used).  */
      403       403
      404       404             #ifndef YYMAXLIMIT
CC.C03    File=zbo$mktab:c.:ZBC3TOU                                                 Fri Aug 22 1997  Page=12 
      405       405             #define YYMAXLIMIT 10000
      406       406             #endif
      407       407
      408       408
      409       409             #line 90 "bison.simple"
      410       410             int
      411       411             yyparse()
      412       412             {
      413       413    1          register int yystate;
      414       414    1          register int yyn;
      415       415    1          register short *yyssp;
      416       416    1          register YYSTYPE *yyvsp;
      417       417    1          YYLTYPE *yylsp;
      418       418    1          int yyerrstatus;	/*  number of tokens to shift before error messages enabled
                                */
      419       419    1          int yychar1;		/*  lookahead token as an internal (translated) token number *
                               /
      420       420    1
      421       421    1          short	yyssa[YYMAXDEPTH];	/*  the state stack			*/
      422       422    1          YYSTYPE yyvsa[YYMAXDEPTH];	/*  the semantic value stack		*/
      423       423    1          YYLTYPE yylsa[YYMAXDEPTH];	/*  the location stack			*/
      424       424    1
      425       425    1          short *yyss = yyssa;		/*  refer to the stacks thru separate pointers */
      426       426    1          YYSTYPE *yyvs = yyvsa;	/*  to allow yyoverflow to reallocate them elsewhere
                               */
      427       427    1          YYLTYPE *yyls = yylsa;
      428       428    1
      429       429    1          int yymaxdepth = YYMAXDEPTH;
      430       430    1
      431       431    1        #ifndef YYPURE
      432       432   *S*         int yychar;
      433       433   *S*         YYSTYPE yylval;
      434       434   *S*         YYLTYPE yylloc;
      435       435   *S*         int yynerrs;
      436       436   *S*       #endif
      437       437    1
      438       438    1          YYSTYPE yyval;		/*  the variable used to return		*/
CC.C03    File=zbo$mktab:c.:ZBC3TOU                                                 Fri Aug 22 1997  Page=13 
      439       439    1        				/*  semantic values from the action	*/
      440       440    1        				/*  routines				*/
      441       441    1
      442       442    1          int yylen;
      443       443    1
      444       444    1        #if YYDEBUG != 0
      445       445   *S*         if (yydebug)
      446       446   *S*           fprintf(stderr, "Starting parse\n");
      447       447   *S*       #endif
      448       448    1
      449       449    1          yystate = 0;
      450       450    1          yyerrstatus = 0;
      451       451    1          yynerrs = 0;
      452       452    1          yychar = YYEMPTY;		/* Cause a token to be read.  */
      453       453    1
      454       454    1          /* Initialize stack pointers.
      455       455    1             Waste one element of value and location stack
      456       456    1             so that they stay on the same level as the state stack.  */
      457       457    1
      458       458    1          yyssp = yyss - 1;
      459       459    1          yyvsp = yyvs;
      460       460    1          yylsp = yyls;
      461       461    1
      462       462    1        /* Push a new state, which is found in  yystate  .  */
      463       463    1        /* In all cases, when you get here, the value and location stacks
      464       464    1           have just been pushed. so pushing a state here evens the stacks.  */
      465       465    1        yynewstate:
      466       466    1
      467       467    1          *++yyssp = yystate;
      468       468    1
      469       469    1          if (yyssp >= yyss + yymaxdepth - 1)
      470       470    1            {
      471       471    2              /* Give user a chance to reallocate the stack */
      472       472    2              /* Use copies of these so that the &'s don't force the real ones into me
                               mory. */
      473       473    2              YYSTYPE *yyvs1 = yyvs;
      474       474    2              YYLTYPE *yyls1 = yyls;
CC.C03    File=zbo$mktab:c.:ZBC3TOU                                                 Fri Aug 22 1997  Page=14 
"bison.simple", line 154: (warning) identifier "yyls1" is not used
      475       475    2              short *yyss1 = yyss;
      476       476    2
      477       477    2              /* Get the current used size of the three stacks, in elements.  */
      478       478    2              int size = yyssp - yyss + 1;
      479       479    2
      480       480    2        #ifdef yyoverflow
      481       481   *S*             /* Each stack pointer address is followed by the size of
      482       482   *S*       	 the data in use in that stack, in bytes.  */
      483       483   *S*             yyoverflow("parser stack overflow",
      484       484   *S*       		 &yyss1, size * sizeof (*yyssp),
      485       485   *S*       		 &yyvs1, size * sizeof (*yyvsp),
      486       486   *S*       		 &yyls1, size * sizeof (*yylsp),
      487       487   *S*       		 &yymaxdepth);
      488       488   *S*
      489       489   *S*             yyss = yyss1; yyvs = yyvs1; yyls = yyls1;
      490       490   *S*       #else /* no yyoverflow */
      491       491    2              /* Extend the stack our own way.  */
      492       492    2              if (yymaxdepth >= YYMAXLIMIT)
      493       493    2        	yyerror("parser stack overflow");
      494       494    2              yymaxdepth *= 2;
      495       495    2              if (yymaxdepth > YYMAXLIMIT)
      496       496    2        	yymaxdepth = YYMAXLIMIT;
      497       497    2              yyss = (short *) alloca (yymaxdepth * sizeof (*yyssp));
      498       498    2              memcpy ((char *)yyss1, (char *)yyss, size * sizeof (*yyssp));
      499       499    2              yyvs = (YYSTYPE *) alloca (yymaxdepth * sizeof (*yyvsp));
      500       500    2              memcpy ((char *)yyvs1, (char *)yyvs, size * sizeof (*yyvsp));
      501       501    2        #ifdef YYLSP_NEEDED
      502       502   *S*             yyls = (YYLTYPE *) alloca (yymaxdepth * sizeof (*yylsp));
      503       503   *S*             memcpy ((char *)yyls1, (char *)yyls, size * sizeof (*yylsp));
      504       504   *S*       #endif
      505       505    2        #endif /* no yyoverflow */
      506       506    2
      507       507    2              yyssp = yyss + size - 1;
      508       508    2              yyvsp = yyvs + size - 1;
      509       509    2        #ifdef YYLSP_NEEDED
      510       510   *S*             yylsp = yyls + size - 1;
CC.C03    File=zbo$mktab:c.:ZBC3TOU                                                 Fri Aug 22 1997  Page=15 
      511       511   *S*       #endif
      512       512    2
      513       513    2        #if YYDEBUG != 0
      514       514   *S*             if (yydebug)
      515       515   *S*       	fprintf(stderr, "Stack size increased to %d\n", yymaxdepth);
      516       516   *S*       #endif
      517       517    2
      518       518    2              if (yyssp >= yyss + yymaxdepth - 1)
      519       519    2        	YYABORT;
      520       520    2            }
      521       521    1
      522       522    1        #if YYDEBUG != 0
      523       523   *S*         if (yydebug)
      524       524   *S*           fprintf(stderr, "Entering state %d\n", yystate);
      525       525   *S*       #endif
      526       526    1
      527       527    1        /* Do appropriate processing given the current state.  */
      528       528    1        /* Read a lookahead token if we need one and don't already have one.  */
      529       529    1        yyresume:
"bison.simple", line 209: (warning) label yyresume is not used
      530       530    1
      531       531    1          /* First try to decide what to do without reference to lookahead token.  */
      532       532    1
      533       533    1          yyn = yypact[yystate];
      534       534    1          if (yyn == YYFLAG)
      535       535    1            goto yydefault;
      536       536    1
      537       537    1          /* Not known => get a lookahead token if don't already have one.  */
      538       538    1
      539       539    1          /* yychar is either YYEMPTY or YYEOF
      540       540    1             or a valid token in external form.  */
      541       541    1
      542       542    1          if (yychar == YYEMPTY)
      543       543    1            {
      544       544    2        #if YYDEBUG != 0
      545       545   *S*             if (yydebug)
      546       546   *S*       	fprintf(stderr, "Reading a token: ");
CC.C03    File=zbo$mktab:c.:ZBC3TOU                                                 Fri Aug 22 1997  Page=16 
      547       547   *S*       #endif
      548       548    2              yychar = YYLEX;
      549       549    2            }
      550       550    1
      551       551    1          /* Convert token to internal form (in yychar1) for indexing tables with */
      552       552    1
      553       553    1          if (yychar <= 0)		/* This means end of input. */
      554       554    1            {
      555       555    2              yychar1 = 0;
      556       556    2              yychar = YYEOF;		/* Don't call YYLEX any more */
      557       557    2
      558       558    2        #if YYDEBUG != 0
      559       559   *S*             if (yydebug)
      560       560   *S*       	fprintf(stderr, "Now at end of input.\n");
      561       561   *S*       #endif
      562       562    2            }
      563       563    1          else
      564       564    1            {
      565       565    2              yychar1 = YYTRANSLATE(yychar);
      566       566    2
      567       567    2        #if YYDEBUG != 0
      568       568   *S*             if (yydebug)
      569       569   *S*       	fprintf(stderr, "Next token is %d (%s)\n", yychar, yytname[yychar1]);
      570       570   *S*       #endif
      571       571    2            }
      572       572    1
      573       573    1          yyn += yychar1;
      574       574    1          if (yyn < 0 || yyn > YYLAST || yycheck[yyn] != yychar1)
      575       575    1            goto yydefault;
      576       576    1
      577       577    1          yyn = yytable[yyn];
      578       578    1
      579       579    1          /* yyn is what to do for this token type in this state.
      580       580    1             Negative => reduce, -yyn is rule number.
      581       581    1             Positive => shift, yyn is new state.
      582       582    1               New state is final state => don't bother to shift,
      583       583    1               just return success.
CC.C03    File=zbo$mktab:c.:ZBC3TOU                                                 Fri Aug 22 1997  Page=17 
      584       584    1             0, or most negative number => error.  */
      585       585    1
      586       586    1          if (yyn < 0)
      587       587    1            {
      588       588    2              if (yyn == YYFLAG)
      589       589    2        	goto yyerrlab;
      590       590    2              yyn = -yyn;
      591       591    2              goto yyreduce;
      592       592    2            }
      593       593    1          else if (yyn == 0)
      594       594    1            goto yyerrlab;
      595       595    1
      596       596    1          if (yyn == YYFINAL)
      597       597    1            YYACCEPT;
      598       598    1
      599       599    1          /* Shift the lookahead token.  */
      600       600    1
      601       601    1        #if YYDEBUG != 0
      602       602   *S*         if (yydebug)
      603       603   *S*           fprintf(stderr, "Shifting token %d (%s), ", yychar, yytname[yychar1]);
      604       604   *S*       #endif
      605       605    1
      606       606    1          /* Discard the token being shifted unless it is eof.  */
      607       607    1          if (yychar != YYEOF)
      608       608    1            yychar = YYEMPTY;
      609       609    1
      610       610    1          *++yyvsp = yylval;
      611       611    1        #ifdef YYLSP_NEEDED
      612       612   *S*         *++yylsp = yylloc;
      613       613   *S*       #endif
      614       614    1
      615       615    1          /* count tokens shifted since error; after three, turn off error status.  */

      616       616    1          if (yyerrstatus) yyerrstatus--;
      617       617    1
      618       618    1          yystate = yyn;
      619       619    1          goto yynewstate;
CC.C03    File=zbo$mktab:c.:ZBC3TOU                                                 Fri Aug 22 1997  Page=18 
      620       620    1
      621       621    1        /* Do the default action for the current state.  */
      622       622    1        yydefault:
      623       623    1
      624       624    1          yyn = yydefact[yystate];
      625       625    1          if (yyn == 0)
      626       626    1            goto yyerrlab;
      627       627    1
      628       628    1        /* Do a reduction.  yyn is the number of a rule to reduce with.  */
      629       629    1        yyreduce:
      630       630    1          yylen = yyr2[yyn];
      631       631    1          yyval = yyvsp[1-yylen]; /* implement default value of the action */
      632       632    1
      633       633    1        #if YYDEBUG != 0
      634       634   *S*         if (yydebug)
      635       635   *S*           {
      636       636   *S*             if (yylen == 1)
      637       637   *S*       	fprintf (stderr, "Reducing 1 value via line %d, ",
      638       638   *S*       		 yyrline[yyn]);
      639       639   *S*             else
      640       640   *S*       	fprintf (stderr, "Reducing %d values via line %d, ",
      641       641   *S*       		 yylen, yyrline[yyn]);
      642       642   *S*           }
      643       643   *S*       #endif
      644       644    1
      645       645    1
      646       646    1          switch (yyn) {
      647       647    2
      648       648    2        case 5:
      649       649    2        #line 70 "zbo$mktab:y.:ZBC3TSI"
      650       650    2        { register i;
      651       651    3                 outbyte(0); outshort(prevind); prevind=curind-3;
      652       652    3                 out(patlen);
      653       653    3                 for (i=0;i<patlen;i++) outbyte(patmnem[i]);
      654       654    3                 out(yyvsp[-3].y_int);
      655       655    3                 out(rpllen);
      656       656    3                 for (i=0;i<rpllen;i++) {
CC.C03    File=zbo$mktab:c.:ZBC3TOU                                                 Fri Aug 22 1997  Page=19 
      657       657    4                  outbyte(rplmnem[i]);
      658       658    4                  out(rplexpr[i]);
      659       659    4                 }
      660       660    3        #ifdef DIAGOPT
      661       661   *S*                outshort(patno);
      662       662   *S*       #endif
      663       663    3                 patno++;
      664       664    3                 printf("\n");
      665       665    3                 if (patlen>maxpatlen) maxpatlen=patlen;
      666       666    3               ;
      667       667    3            break;}
      668       668    2        case 6:
      669       669    2        #line 88 "zbo$mktab:y.:ZBC3TSI"
      670       670    2        { yyerrok; ;
      671       671    3            break;}
      672       672    2        case 7:
      673       673    2        #line 92 "zbo$mktab:y.:ZBC3TSI"
      674       674    2        {
      675       675    3        #ifdef ALLOWSPECIAL
      676       676   *S*                rpllen=1; rplmnem[0]=0; rplexpr[0]=yyvsp[0].y_int;
      677       677   *S*       #else
      678       678    3                 yyerror("No specials allowed");
      679       679    3        #endif
      680       680    3               ;
      681       681    3            break;}
      682       682    2        case 9:
      683       683    2        #line 102 "zbo$mktab:y.:ZBC3TSI"
      684       684    2        { rpllen=0; ;
      685       685    3            break;}
      686       686    2        case 11:
      687       687    2        #line 106 "zbo$mktab:y.:ZBC3TSI"
      688       688    2        { rplmnem[rpllen] = yyvsp[-1].y_int; rplexpr[rpllen++] = yyvsp[0].y_int; ;
      689       689    3            break;}
      690       690    2        case 12:
      691       691    2        #line 109 "zbo$mktab:y.:ZBC3TSI"
      692       692    2        { patlen=0; patmnem[patlen++] = yyvsp[0].y_int; ;
      693       693    3            break;}
CC.C03    File=zbo$mktab:c.:ZBC3TOU                                                 Fri Aug 22 1997  Page=20 
      694       694    2        case 13:
      695       695    2        #line 111 "zbo$mktab:y.:ZBC3TSI"
      696       696    2        { patmnem[patlen++] = yyvsp[0].y_int; ;
      697       697    3            break;}
      698       698    2        case 14:
      699       699    2        #line 114 "zbo$mktab:y.:ZBC3TSI"
      700       700    2        { yyval.y_int = 0; ;
      701       701    3            break;}
      702       702    2        case 16:
      703       703    2        #line 119 "zbo$mktab:y.:ZBC3TSI"
      704       704    2        { yyval.y_int = lookup(0,EX_ARG,yyvsp[0].y_int,0); ;
      705       705    3            break;}
      706       706    2        case 17:
      707       707    2        #line 121 "zbo$mktab:y.:ZBC3TSI"
      708       708    2        { yyval.y_int = lookup(0,EX_CON,(int)(short)yyvsp[0].y_int,0); ;
      709       709    3            break;}
      710       710    2        case 18:
      711       711    2        #line 123 "zbo$mktab:y.:ZBC3TSI"
      712       712    2        { yyval.y_int = lookup(0,EX_POINTERSIZE,0,0); ;
      713       713    3            break;}
      714       714    2        case 19:
      715       715    2        #line 125 "zbo$mktab:y.:ZBC3TSI"
      716       716    2        { yyval.y_int = lookup(0,EX_WORDSIZE,0,0); ;
      717       717    3            break;}
      718       718    2        case 20:
      719       719    2        #line 127 "zbo$mktab:y.:ZBC3TSI"
      720       720    2        { yyval.y_int = lookup(0,EX_DEFINED,yyvsp[-1].y_int,0); ;
      721       721    3            break;}
      722       722    2        case 21:
      723       723    2        #line 129 "zbo$mktab:y.:ZBC3TSI"
      724       724    2        { yyval.y_int = lookup(1,EX_SAMESIGN,yyvsp[-3].y_int,yyvsp[-1].y_int); ;
      725       725    3            break;}
      726       726    2        case 22:
      727       727    2        #line 131 "zbo$mktab:y.:ZBC3TSI"
      728       728    2        { yyval.y_int = lookup(0,EX_SFIT,yyvsp[-3].y_int,yyvsp[-1].y_int); ;
      729       729    3            break;}
      730       730    2        case 23:
CC.C03    File=zbo$mktab:c.:ZBC3TOU                                                 Fri Aug 22 1997  Page=21 
      731       731    2        #line 133 "zbo$mktab:y.:ZBC3TSI"
      732       732    2        { yyval.y_int = lookup(0,EX_UFIT,yyvsp[-3].y_int,yyvsp[-1].y_int); ;
      733       733    3            break;}
      734       734    2        case 24:
      735       735    2        #line 135 "zbo$mktab:y.:ZBC3TSI"
      736       736    2        { yyval.y_int = lookup(0,EX_ROTATE,yyvsp[-3].y_int,yyvsp[-1].y_int); ;
      737       737    3            break;}
      738       738    2        case 25:
      739       739    2        #line 137 "zbo$mktab:y.:ZBC3TSI"
      740       740    2        { yyval.y_int = lookup(0,EX_NOTREG,yyvsp[-1].y_int,0); ;
      741       741    3            break;}
      742       742    2        case 26:
      743       743    2        #line 139 "zbo$mktab:y.:ZBC3TSI"
      744       744    2        { yyval.y_int = lookup(0,EX_ROM,yyvsp[-3].y_int,yyvsp[-1].y_int); ;
      745       745    3            break;}
      746       746    2        case 27:
      747       747    2        #line 141 "zbo$mktab:y.:ZBC3TSI"
      748       748    2        { yyval.y_int = yyvsp[-1].y_int; ;
      749       749    3            break;}
      750       750    2        case 28:
      751       751    2        #line 143 "zbo$mktab:y.:ZBC3TSI"
      752       752    2        { yyval.y_int = lookup(1,EX_CMPEQ,yyvsp[-2].y_int,yyvsp[0].y_int); ;
      753       753    3            break;}
      754       754    2        case 29:
      755       755    2        #line 145 "zbo$mktab:y.:ZBC3TSI"
      756       756    2        { yyval.y_int = lookup(1,EX_CMPNE,yyvsp[-2].y_int,yyvsp[0].y_int); ;
      757       757    3            break;}
      758       758    2        case 30:
      759       759    2        #line 147 "zbo$mktab:y.:ZBC3TSI"
      760       760    2        { yyval.y_int = lookup(0,EX_CMPGT,yyvsp[-2].y_int,yyvsp[0].y_int); ;
      761       761    3            break;}
      762       762    2        case 31:
      763       763    2        #line 149 "zbo$mktab:y.:ZBC3TSI"
      764       764    2        { yyval.y_int = lookup(0,EX_CMPGE,yyvsp[-2].y_int,yyvsp[0].y_int); ;
      765       765    3            break;}
      766       766    2        case 32:
      767       767    2        #line 151 "zbo$mktab:y.:ZBC3TSI"
CC.C03    File=zbo$mktab:c.:ZBC3TOU                                                 Fri Aug 22 1997  Page=22 
      768       768    2        { yyval.y_int = lookup(0,EX_CMPLT,yyvsp[-2].y_int,yyvsp[0].y_int); ;
      769       769    3            break;}
      770       770    2        case 33:
      771       771    2        #line 153 "zbo$mktab:y.:ZBC3TSI"
      772       772    2        { yyval.y_int = lookup(0,EX_CMPLE,yyvsp[-2].y_int,yyvsp[0].y_int); ;
      773       773    3            break;}
      774       774    2        case 34:
      775       775    2        #line 155 "zbo$mktab:y.:ZBC3TSI"
      776       776    2        { yyval.y_int = lookup(0,EX_OR2,yyvsp[-2].y_int,yyvsp[0].y_int); ;
      777       777    3            break;}
      778       778    2        case 35:
      779       779    2        #line 157 "zbo$mktab:y.:ZBC3TSI"
      780       780    2        { yyval.y_int = lookup(0,EX_AND2,yyvsp[-2].y_int,yyvsp[0].y_int); ;
      781       781    3            break;}
      782       782    2        case 36:
      783       783    2        #line 159 "zbo$mktab:y.:ZBC3TSI"
      784       784    2        { yyval.y_int = lookup(1,EX_OR1,yyvsp[-2].y_int,yyvsp[0].y_int); ;
      785       785    3            break;}
      786       786    2        case 37:
      787       787    2        #line 161 "zbo$mktab:y.:ZBC3TSI"
      788       788    2        { yyval.y_int = lookup(1,EX_XOR1,yyvsp[-2].y_int,yyvsp[0].y_int); ;
      789       789    3            break;}
      790       790    2        case 38:
      791       791    2        #line 163 "zbo$mktab:y.:ZBC3TSI"
      792       792    2        { yyval.y_int = lookup(1,EX_AND1,yyvsp[-2].y_int,yyvsp[0].y_int); ;
      793       793    3            break;}
      794       794    2        case 39:
      795       795    2        #line 165 "zbo$mktab:y.:ZBC3TSI"
      796       796    2        { yyval.y_int = lookup(1,EX_PLUS,yyvsp[-2].y_int,yyvsp[0].y_int); ;
      797       797    3            break;}
      798       798    2        case 40:
      799       799    2        #line 167 "zbo$mktab:y.:ZBC3TSI"
      800       800    2        { yyval.y_int = lookup(0,EX_MINUS,yyvsp[-2].y_int,yyvsp[0].y_int); ;
      801       801    3            break;}
      802       802    2        case 41:
      803       803    2        #line 169 "zbo$mktab:y.:ZBC3TSI"
      804       804    2        { yyval.y_int = lookup(1,EX_TIMES,yyvsp[-2].y_int,yyvsp[0].y_int); ;
CC.C03    File=zbo$mktab:c.:ZBC3TOU                                                 Fri Aug 22 1997  Page=23 
      805       805    3            break;}
      806       806    2        case 42:
      807       807    2        #line 171 "zbo$mktab:y.:ZBC3TSI"
      808       808    2        { yyval.y_int = lookup(0,EX_DIVIDE,yyvsp[-2].y_int,yyvsp[0].y_int); ;
      809       809    3            break;}
      810       810    2        case 43:
      811       811    2        #line 173 "zbo$mktab:y.:ZBC3TSI"
      812       812    2        { yyval.y_int = lookup(0,EX_MOD,yyvsp[-2].y_int,yyvsp[0].y_int); ;
      813       813    3            break;}
      814       814    2        case 44:
      815       815    2        #line 175 "zbo$mktab:y.:ZBC3TSI"
      816       816    2        { yyval.y_int = lookup(0,EX_LSHIFT,yyvsp[-2].y_int,yyvsp[0].y_int); ;
      817       817    3            break;}
      818       818    2        case 45:
      819       819    2        #line 177 "zbo$mktab:y.:ZBC3TSI"
      820       820    2        { yyval.y_int = lookup(0,EX_RSHIFT,yyvsp[-2].y_int,yyvsp[0].y_int); ;
      821       821    3            break;}
      822       822    2        case 46:
      823       823    2        #line 179 "zbo$mktab:y.:ZBC3TSI"
      824       824    2        { yyval.y_int = yyvsp[0].y_int; ;
      825       825    3            break;}
      826       826    2        case 47:
      827       827    2        #line 181 "zbo$mktab:y.:ZBC3TSI"
      828       828    2        { yyval.y_int = lookup(0,EX_UMINUS,yyvsp[0].y_int,0); ;
      829       829    3            break;}
      830       830    2        case 48:
      831       831    2        #line 183 "zbo$mktab:y.:ZBC3TSI"
      832       832    2        { yyval.y_int = lookup(0,EX_NOT,yyvsp[0].y_int,0); ;
      833       833    3            break;}
      834       834    2        case 49:
      835       835    2        #line 185 "zbo$mktab:y.:ZBC3TSI"
      836       836    2        { yyval.y_int = lookup(0,EX_COMP,yyvsp[0].y_int,0); ;
      837       837    3            break;}
      838       838    2        case 50:
      839       839    2        #line 188 "zbo$mktab:y.:ZBC3TSI"
      840       840    2        { if (yyvsp[0].y_int<1 || yyvsp[0].y_int>patlen) {
      841       841    4                  YYERROR;
CC.C03    File=zbo$mktab:c.:ZBC3TOU                                                 Fri Aug 22 1997  Page=24 
      842       842    4                 }
      843       843    3                 yyval.y_int = (int) yyvsp[0].y_int;
      844       844    3               ;
      845       845    3            break;}
      846       846    2        }
      847       847    1           /* the action file gets copied in in place of this dollarsign */
      848       848    1        #line 327 "bison.simple"
      849       849    1
      850       850    1
      851       851    1          yyvsp -= yylen;
      852       852    1          yyssp -= yylen;
      853       853    1        #ifdef YYLSP_NEEDED
      854       854   *S*         yylsp -= yylen;
      855       855   *S*       #endif
      856       856    1
      857       857    1        #if YYDEBUG != 0
      858       858   *S*         if (yydebug)
      859       859   *S*           {
      860       860   *S*             short *ssp1 = yyss - 1;
      861       861   *S*             fprintf (stderr, "state stack now");
      862       862   *S*             while (ssp1 != yyssp)
      863       863   *S*       	fprintf (stderr, " %d", *++ssp1);
      864       864   *S*             fprintf (stderr, "\n");
      865       865   *S*           }
      866       866   *S*       #endif
      867       867    1
      868       868    1          *++yyvsp = yyval;
      869       869    1
      870       870    1        #ifdef YYLSP_NEEDED
      871       871   *S*         yylsp++;
      872       872   *S*         if (yylen == 0)
      873       873   *S*           {
      874       874   *S*             yylsp->first_line = yylloc.first_line;
      875       875   *S*             yylsp->first_column = yylloc.first_column;
      876       876   *S*             yylsp->last_line = (yylsp-1)->last_line;
      877       877   *S*             yylsp->last_column = (yylsp-1)->last_column;
      878       878   *S*             yylsp->text = 0;
CC.C03    File=zbo$mktab:c.:ZBC3TOU                                                 Fri Aug 22 1997  Page=25 
      879       879   *S*           }
      880       880   *S*         else
      881       881   *S*           {
      882       882   *S*             yylsp->last_line = (yylsp+yylen-1)->last_line;
      883       883   *S*             yylsp->last_column = (yylsp+yylen-1)->last_column;
      884       884   *S*           }
      885       885   *S*       #endif
      886       886    1
      887       887    1          /* Now "shift" the result of the reduction.
      888       888    1             Determine what state that goes to,
      889       889    1             based on the state we popped back to
      890       890    1             and the rule number reduced by.  */
      891       891    1
      892       892    1          yyn = yyr1[yyn];
      893       893    1
      894       894    1          yystate = yypgoto[yyn - YYNTBASE] + *yyssp;
      895       895    1          if (yystate >= 0 && yystate <= YYLAST && yycheck[yystate] == *yyssp)
      896       896    1            yystate = yytable[yystate];
      897       897    1          else
      898       898    1            yystate = yydefgoto[yyn - YYNTBASE];
      899       899    1
      900       900    1          goto yynewstate;
      901       901    1
      902       902    1        yyerrlab:   /* here on detecting error */
      903       903    1
      904       904    1          if (! yyerrstatus)
      905       905    1            /* If not already recovering from an error, report this error.  */
      906       906    1            {
      907       907    2              ++yynerrs;
      908       908    2              yyerror("parse error");
      909       909    2              if ((yyn = yypact[yystate]) > YYFLAG && yyn < YYLAST) {
      910       910    3                 int x, count;
      911       911    3                 count = 0;
      912       912    3                 for (x = 0; x < (sizeof(yytname) / sizeof(char *)); x++) {
      913       913    4                    if ((yycheck[x + yyn] == x) && (yytname[x])) {
      914       914    5                       fprintf(stderr, "%s %s",
      915       915    5                              count == 0 ? "expecting:" : " or",
CC.C03    File=zbo$mktab:c.:ZBC3TOU                                                 Fri Aug 22 1997  Page=26 
      916       916    5                              yytname[x]);
      917       917    5                       count++;
      918       918    5                    }
      919       919    4                 }
      920       920    3                 fprintf(stderr, "%s", count > 0 ? "\n" : "");
      921       921    3              }
      922       922    2            }
      923       923    1
      924       924    1          if (yyerrstatus == 3)
      925       925    1            {
      926       926    2              /* if just tried and failed to reuse lookahead token after an error, dis
                               card it.  */
      927       927    2
      928       928    2              /* return failure if at end of input */
      929       929    2              if (yychar == YYEOF)
      930       930    2        	YYABORT;
      931       931    2
      932       932    2        #if YYDEBUG != 0
      933       933   *S*             if (yydebug)
      934       934   *S*       	fprintf(stderr, "Discarding token %d (%s).\n", yychar, yytname[yychar1]);
      935       935   *S*       #endif
      936       936    2
      937       937    2              yychar = YYEMPTY;
      938       938    2            }
      939       939    1
      940       940    1          /* Else will try to reuse lookahead token
      941       941    1             after shifting the error token.  */
      942       942    1
      943       943    1          yyerrstatus = 3;		/* Each real token shifted decrements this */
      944       944    1
      945       945    1          goto yyerrhandle;
      946       946    1
      947       947    1        yyerrdefault:  /* current state does not do anything special for the error tok
                               en. */
      948       948    1
      949       949    1        #if 0
      950       950   *S*         /* This is wrong; only states that explicitly want error tokens
CC.C03    File=zbo$mktab:c.:ZBC3TOU                                                 Fri Aug 22 1997  Page=27 
      951       951   *S*            should shift them.  */
      952       952   *S*         yyn = yydefact[yystate];  /* If its default is to accept any token, ok.  Oth
                               erwise pop it.*/
      953       953   *S*         if (yyn) goto yydefault;
      954       954   *S*       #endif
      955       955    1
      956       956    1        yyerrpop:   /* pop the current state because it cannot handle the error token
                               */
      957       957    1
      958       958    1          if (yyssp == yyss) YYABORT;
      959       959    1          yyvsp--;
      960       960    1          yystate = *--yyssp;
      961       961    1        #ifdef YYLSP_NEEDED
      962       962   *S*         yylsp--;
      963       963   *S*       #endif
      964       964    1
      965       965    1        #if YYDEBUG != 0
      966       966   *S*         if (yydebug)
      967       967   *S*           {
      968       968   *S*             short *ssp1 = yyss - 1;
      969       969   *S*             fprintf (stderr, "Error: state stack now");
      970       970   *S*             while (ssp1 != yyssp)
      971       971   *S*       	fprintf (stderr, " %d", *++ssp1);
      972       972   *S*             fprintf (stderr, "\n");
      973       973   *S*           }
      974       974   *S*       #endif
      975       975    1
      976       976    1        yyerrhandle:
      977       977    1
      978       978    1          yyn = yypact[yystate];
      979       979    1          if (yyn == YYFLAG)
      980       980    1            goto yyerrdefault;
      981       981    1
      982       982    1          yyn += YYTERROR;
      983       983    1          if (yyn < 0 || yyn > YYLAST || yycheck[yyn] != YYTERROR)
      984       984    1            goto yyerrdefault;
      985       985    1
CC.C03    File=zbo$mktab:c.:ZBC3TOU                                                 Fri Aug 22 1997  Page=28 
      986       986    1          yyn = yytable[yyn];
      987       987    1          if (yyn < 0)
      988       988    1            {
      989       989    2              if (yyn == YYFLAG)
      990       990    2        	goto yyerrpop;
      991       991    2              yyn = -yyn;
      992       992    2              goto yyreduce;
      993       993    2            }
      994       994    1          else if (yyn == 0)
      995       995    1            goto yyerrpop;
      996       996    1
      997       997    1          if (yyn == YYFINAL)
      998       998    1            YYACCEPT;
      999       999    1
     1000      1000    1        #if YYDEBUG != 0
     1001      1001   *S*         if (yydebug)
     1002      1002   *S*           fprintf(stderr, "Shifting error token, ");
     1003      1003   *S*       #endif
     1004      1004    1
     1005      1005    1          *++yyvsp = yylval;
     1006      1006    1        #ifdef YYLSP_NEEDED
     1007      1007   *S*         *++yylsp = yylloc;
     1008      1008   *S*       #endif
     1009      1009    1
     1010      1010    1          yystate = yyn;
     1011      1011    1          goto yynewstate;
     1012      1012    1        }
     1013      1013
     1014      1014             #line 195 "zbo$mktab:y.:ZBC3TSI"
     1015      1015
     1016      1016
     1017      1017             extern char em_mnem[][4];
     1018      1018
     1019      1019             #define HASHSIZE   (2*(sp_lmnem-sp_fmnem))
     1020      1020
     1021      1021             struct hashmnem {
     1022      1022    1         char h_name[3];
CC.C03    File=zbo$mktab:c.:ZBC3TOU                                                 Fri Aug 22 1997  Page=29 
     1023      1023    1         byte h_value;
     1024      1024    1        } hashmnem[HASHSIZE];
     1025      1025
     1026      1026             inithash() {
     1027      1027    1         register i;
     1028      1028    1
     1029      1029    1         enter("lab",op_lab);
     1030      1030    1         enter("LLP",op_LLP);
     1031      1031    1         enter("LEP",op_LEP);
     1032      1032    1         enter("SLP",op_SLP);
     1033      1033    1         enter("SEP",op_SEP);
     1034      1034    1         for(i=0;i<=sp_lmnem-sp_fmnem;i++)
     1035      1035    1            enter(em_mnem[i],i+sp_fmnem);
     1036      1036    1        }
     1037      1037
     1038      1038             unsigned hashname(name) register char *name; {
     1039      1039    1         register unsigned h;
     1040      1040    1
     1041      1041    1         h = (*name++)&BMASK;
     1042      1042    1         h = (h<<4)^((*name++)&BMASK);
     1043      1043    1         h = (h<<4)^((*name++)&BMASK);
     1044      1044    1         return(h);
     1045      1045    1        }
     1046      1046
     1047      1047             enter(name,value) char *name; {
     1048      1048    1         register unsigned h;
     1049      1049    1
     1050      1050    1         h=hashname(name)%HASHSIZE;
     1051      1051    1         while (hashmnem[h].h_name[0] != 0)
     1052      1052    1            h = (h+1)%HASHSIZE;
     1053      1053    1         strncpy(hashmnem[h].h_name,name,3);
     1054      1054    1         hashmnem[h].h_value = value;
     1055      1055    1        }
     1056      1056
     1057      1057             int mlookup(name) char *name; {
     1058      1058    1         register unsigned h;
     1059      1059    1
CC.C03    File=zbo$mktab:c.:ZBC3TOU                                                 Fri Aug 22 1997  Page=30 
     1060      1060    1         h = hashname(name)%HASHSIZE;
     1061      1061    1         while (strncmp(hashmnem[h].h_name,name,3) != 0 &&
     1062      1062    1                hashmnem[h].h_name[0] != 0)
     1063      1063    1            h = (h+1)%HASHSIZE;
     1064      1064    1         return(hashmnem[h].h_value&BMASK);  /* 0 if not found */
     1065      1065    1        }
     1066      1066
     1067      1067             main() {
     1068      1068    1
     1069      1069    1         inithash();
     1070      1070    1         initio();
     1071      1071    1         yyparse();
     1072      1072    1         if (nerrors==0)
     1073      1073    1            printnodes();
     1074      1074    1         return nerrors;
     1075      1075    1        }
     1076      1076
     1077      1077             yyerror(s) char *s; {
     1078      1078    1
     1079      1079    1         fprintf(stderr,"line %d: %s\n",lino,s);
     1080      1080    1         nerrors++;
     1081      1081    1        }
     1082      1082
     1083      1083             lookup(comm,operator,lnode,rnode) {
     1084      1084    1         register expr_p p;
     1085      1085    1
     1086      1086    1         for (p=nodes+1;p<lastnode;p++) {
     1087      1087    2            if (p->ex_operator != operator)
     1088      1088    2               continue;
     1089      1089    2            if (!(p->ex_lnode == lnode && p->ex_rnode == rnode ||
     1090      1090    2                comm && p->ex_lnode == rnode && p->ex_rnode == lnode))
     1091      1091    2               continue;
     1092      1092    2            return(p-nodes);
     1093      1093    2         }
     1094      1094    1         if (lastnode >= &nodes[MAXNODES])
     1095      1095    1            yyerror("node table overflow");
     1096      1096    1         lastnode++;
CC.C03    File=zbo$mktab:c.:ZBC3TOU                                                 Fri Aug 22 1997  Page=31 
     1097      1097    1         p->ex_operator = operator;
     1098      1098    1         p->ex_lnode = lnode;
     1099      1099    1         p->ex_rnode = rnode;
     1100      1100    1         return(p-nodes);
     1101      1101    1        }
     1102      1102
     1103      1103             printnodes() {
     1104      1104    1         register expr_p p;
     1105      1105    1
     1106      1106    1         printf("};\n\nshort lastind = %d;\n\nexpr_t enodes[] = {\n",prevind);
     1107      1107    1         for (p=nodes;p<lastnode;p++)
     1108      1108    1            printf("/* %3d */\t%3d,%6u,%6u,\n",
     1109      1109    1               p-nodes,p->ex_operator,p->ex_lnode,p->ex_rnode);
     1110      1110    1         printf("};\n\niarg_t iargs[%d];\n",maxpatlen);
     1111      1111    1         if (patid[0])
     1112      1112    1            printf("static char rcsid[] = %s;\n",patid);
     1113      1113    1        }
     1114      1114
     1115      1115             initio() {
     1116      1116    1         register i;
     1117      1117    1
     1118      1118    1         printf("#include \"param.h\"\n#include \"types.h\"\n");
     1119      1119    1         printf("#include \"pattern.h\"\n\n");
     1120      1120    1         for(i=0;i<N_EX_OPS;i++) {
     1121      1121    2            nparam[i]=2;
     1122      1122    2            nonumlab[i]=TRUE;
     1123      1123    2            onlyconst[i]=TRUE;
     1124      1124    2         }
     1125      1125    1         nparam[EX_POINTERSIZE] = 0;
     1126      1126    1         nparam[EX_WORDSIZE] = 0;
     1127      1127    1         nparam[EX_CON] = 0;
     1128      1128    1         nparam[EX_ROM] = 0;
     1129      1129    1         nparam[EX_ARG] = 0;
     1130      1130    1         nparam[EX_DEFINED] = 0;
     1131      1131    1         nparam[EX_OR2] = 1;
     1132      1132    1         nparam[EX_AND2] = 1;
     1133      1133    1         nparam[EX_UMINUS] = 1;
CC.C03    File=zbo$mktab:c.:ZBC3TOU                                                 Fri Aug 22 1997  Page=32 
     1134      1134    1         nparam[EX_NOT] = 1;
     1135      1135    1         nparam[EX_COMP] = 1;
     1136      1136    1         nparam[EX_NOTREG] = 1;
     1137      1137    1         nonumlab[EX_CMPEQ] = FALSE;
     1138      1138    1         nonumlab[EX_CMPNE] = FALSE;
     1139      1139    1         onlyconst[EX_CMPEQ] = FALSE;
     1140      1140    1         onlyconst[EX_CMPNE] = FALSE;
     1141      1141    1         onlyconst[EX_CMPLE] = FALSE;
     1142      1142    1         onlyconst[EX_CMPLT] = FALSE;
     1143      1143    1         onlyconst[EX_CMPGE] = FALSE;
     1144      1144    1         onlyconst[EX_CMPGT] = FALSE;
     1145      1145    1         onlyconst[EX_PLUS] = FALSE;
     1146      1146    1         onlyconst[EX_MINUS] = FALSE;
     1147      1147    1         printf("byte nparam[] = {");
     1148      1148    1         for (i=0;i<N_EX_OPS;i++) printf("%d,",nparam[i]);
     1149      1149    1         printf("};\nbool nonumlab[] = {");
     1150      1150    1         for (i=0;i<N_EX_OPS;i++) printf("%d,",nonumlab[i]);
     1151      1151    1         printf("};\nbool onlyconst[] = {");
     1152      1152    1         for (i=0;i<N_EX_OPS;i++) printf("%d,",onlyconst[i]);
     1153      1153    1         printf("};\n\nbyte pattern[] = { 0\n");
     1154      1154    1         curind = 1;
     1155      1155    1        }
     1156      1156
     1157      1157             outbyte(b) {
     1158      1158    1
     1159      1159    1         printf(",%3d",b);
     1160      1160    1         curind++;
     1161      1161    1        }
     1162      1162
     1163      1163             outshort(s) {
     1164      1164    1
     1165      1165    1         outbyte(s&0377);
     1166      1166    1         outbyte((s>>8)&0377);
     1167      1167    1        }
     1168      1168
     1169      1169             out(w) {
     1170      1170    1
CC.C03    File=zbo$mktab:c.:ZBC3TOU                                                 Fri Aug 22 1997  Page=33 
     1171      1171    1         if (w<255) {
     1172      1172    2            outbyte(w);
     1173      1173    2         } else {
     1174      1174    2            outbyte(255);
     1175      1175    2            outshort(w);
     1176      1176    2         }
     1177      1177    1        }
     1178      1178
     1179      1179             #include "scan:c"
"zbo$scan:c.:ZBC3TOU.", line 104: (warning) no global register variable allowed
"zbo$scan:l.:ZBC3TSI", line 189: (warning) function yylex called before prototype definition
     1180      2045
---  Include file information  ---

   stdio:h.:LIBRARY. is referenced
   zbo$param:h.:ZBC3TOU. is referenced
   zbo$types:h.:ZBC3TOU. is referenced
   zbo$pattern:h.:ZBC3TOU. is referenced
   em_spec:h.:ZBC3TOU. is referenced
   em_mnem:h.:ZBC3TOU. is referenced
   zbo$optim:h.:ZBC3TOU. is referenced
   stdlib:h.:LIBRARY. is referenced
   zbo$scan:c.:ZBC3TOU. is referenced

4 warnings were detected in the file zbo$mktab:c.:ZBC3TOU
