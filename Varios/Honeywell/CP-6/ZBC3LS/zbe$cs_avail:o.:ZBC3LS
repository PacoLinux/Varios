

CC.C03    File=zbe$cs_avail:c.:ZBC3TSI                                              Fri Aug 22 1997  Page=1  
        1         1             /* $Header: cs_avail.c,v 1.4 87/03/10 10:51:31 ceriel Exp $ */
        2         2             /*
        3         3              * (c) copyright 1987 by the Vrije Universiteit, Amsterdam, The Netherlands.
        4         4              * See the copyright notice in the ACK home directory, in the file "Copyright"
                               .
        5         5              */
        6         6             /* M O D U L E   F O R   A C C E S S S I N G   T H E   L I S T
        7         7              *
        8         8              * O F   A V A I L A B L E   E X P R E S S I O N S
        9         9              */
       10        10
       11        11             #include "em_mnem:h"
       12        12             #include "types:h"
       13        13             #include "debug:h"
       14        14             #include "aux:h"
       15        15             #include "lset:h"
       16        16             #include "global:h"
       17        17             #include "cs:h"
       18        18             #include "cs_aux:h"
       19        19             #include "cs_debug:h"
       20        20             #include "cs_alloc:h"
       21        21             #include "cs_getent:h"
       22        22
       23        23             avail_p avails; /* The list of available expressions. */
       24        24
       25        25             STATIC bool commutative(instr)
       26        26              int instr;
       27        27             {
       28        28    1         /* Is instr a commutative operator? */
       29        29    1
       30        30    1         switch (instr) {
       31        31    2            case op_adf: case op_adi: case op_adu: case op_and:
       32        32    2            case op_cms: case op_ior: case op_mlf: case op_mli:
       33        33    2            case op_mlu:
       34        34    2               return TRUE;
       35        35    2            default:
       36        36    2               return FALSE;
CC.C03    File=zbe$cs_avail:c.:ZBC3TSI                                              Fri Aug 22 1997  Page=2  
       37        37    2         }
       38        38    1        }
       39        39
       40        40             STATIC bool same_avail(kind, avp1, avp2)
       41        41              byte kind;
       42        42              avail_p avp1, avp2;
       43        43             {
       44        44    1         /* Two expressions are the same if they have the same operator,
       45        45    1          * the same size, and their operand(s) have the same value.
       46        46    1          * Only if the operator is commutative, the order of the operands
       47        47    1          * does not matter.
       48        48    1          */
       49        49    1         if (avp1->av_instr != avp2->av_instr) return FALSE;
       50        50    1         if (avp1->av_size != avp2->av_size) return FALSE;
       51        51    1
       52        52    1         switch (kind) {
       53        53    2            default:
       54        54    2               assert(FALSE);
       55        55    2               break;
       56        56    2            case EXPENSIVE_LOAD:
       57        57    2            case UNAIR_OP:
       58        58    2               return   avp1->av_operand == avp2->av_operand;
       59        59    2            case BINAIR_OP:
       60        60    2               if (commutative(avp1->av_instr & BMASK))
       61        61    2                  return   avp1->av_oleft == avp2->av_oleft &&
       62        62    2                     avp1->av_oright == avp2->av_oright
       63        63    2                     ||
       64        64    2                     avp1->av_oleft == avp2->av_oright &&
       65        65    2                     avp1->av_oright == avp2->av_oleft
       66        66    2                     ;
       67        67    2               else
       68        68    2                  return   avp1->av_oleft == avp2->av_oleft &&
       69        69    2                     avp1->av_oright == avp2->av_oright;
       70        70    2            case TERNAIR_OP:
       71        71    2               return   avp1->av_ofirst == avp2->av_ofirst &&
       72        72    2                  avp1->av_osecond == avp2->av_osecond &&
       73        73    2                  avp1->av_othird == avp2->av_othird;
CC.C03    File=zbe$cs_avail:c.:ZBC3TSI                                              Fri Aug 22 1997  Page=3  
       74        74    2         }
       75        75    1         /* NOTREACHED */
       76        76    1        }
       77        77
       78        78             STATIC check_local(avp)
       79        79              avail_p avp;
       80        80             {
       81        81    1         /* Check if the local in which the result of avp was stored,
       82        82    1          * still holds this result. Update if not.
       83        83    1          */
       84        84    1         if (avp->av_saveloc == (entity_p) 0) return; /* Nothing to check. */
       85        85    1
       86        86    1         if (avp->av_saveloc->en_vn != avp->av_result) {
       87        87    2            OUTTRACE("save local changed value", 0);
       88        88    2            avp->av_saveloc = (entity_p) 0;
       89        89    2         }
       90        90    1        }
       91        91
       92        92             STATIC entity_p result_local(size, l)
       93        93              offset size;
       94        94              line_p l;
       95        95             {
       96        96    1         /* If the result of an expression of size bytes is stored into a
       97        97    1          * local for which a registermessage was generated, return a pointer
       98        98    1          * to this local.
       99        99    1          */
      100       100    1         line_p dummy;
      101       101    1         entity_p enp;
      102       102    1
      103       103    1         if (l == (line_p) 0)
      104       104    1            return (entity_p) 0;
      105       105    1
      106       106    1         if (INSTR(l)==op_stl && size==ws || INSTR(l)==op_sdl && size==2*ws) {
      107       107    2            enp = getentity(l, &dummy);
      108       108    2            if (is_regvar(enp->en_loc)) {
      109       109    3               OUTTRACE("save local found, %ld(LB)", enp->en_loc);
      110       110    3               return enp;
CC.C03    File=zbe$cs_avail:c.:ZBC3TSI                                              Fri Aug 22 1997  Page=4  
      111       111    3            }
      112       112    2         }
      113       113    1
      114       114    1         return (entity_p) 0;
      115       115    1        }
      116       116
      117       117             STATIC copy_avail(kind, src, dst)
      118       118              int kind;
      119       119              avail_p src, dst;
      120       120             {
      121       121    1         /* Copy some attributes from src to dst. */
      122       122    1
      123       123    1         dst->av_instr = src->av_instr;
      124       124    1         dst->av_size = src->av_size;
      125       125    1
      126       126    1         switch (kind) {
      127       127    2            default:
      128       128    2               assert(FALSE);
      129       129    2               break;
      130       130    2            case EXPENSIVE_LOAD:
      131       131    2            case UNAIR_OP:
      132       132    2               dst->av_operand = src->av_operand;
      133       133    2               break;
      134       134    2            case BINAIR_OP:
      135       135    2               dst->av_oleft = src->av_oleft;
      136       136    2               dst->av_oright = src->av_oright;
      137       137    2               break;
      138       138    2            case TERNAIR_OP:
      139       139    2               dst->av_ofirst = src->av_ofirst;
      140       140    2               dst->av_osecond = src->av_osecond;
      141       141    2               dst->av_othird = src->av_othird;
      142       142    2               break;
      143       143    2         }
      144       144    1        }
      145       145
      146       146             avail_p av_enter(avp, ocp, kind)
      147       147              avail_p avp;
CC.C03    File=zbe$cs_avail:c.:ZBC3TSI                                              Fri Aug 22 1997  Page=5  
      148       148              occur_p ocp;
      149       149              int kind;
      150       150             {
      151       151    1         /* Put the available expression avp in the list,
      152       152    1          * if it is not already there.
      153       153    1          * Add ocp to the set of occurrences of this expression.
      154       154    1          */
      155       155    1         register avail_p ravp;
      156       156    1         line_p last = ocp->oc_llast;
      157       157    1
      158       158    1         for (ravp = avails; ravp != (avail_p) 0; ravp = ravp->av_before) {
      159       159    2            if (same_avail(kind, ravp, avp)) { /* It was there. */
      160       160    3               Ladd(ocp, &ravp->av_occurs);
      161       161    3               /* Can we still use the local in which
      162       162    3                * the result was stored?
      163       163    3                */
      164       164    3               check_local(ravp);
      165       165    3               return ravp;
      166       166    3            }
      167       167    2         }
      168       168    1         /* A new available axpression. */
      169       169    1         ravp = newavail();
      170       170    1
      171       171    1         /* Remember local, if any, that holds result. */
      172       172    1         if (avp->av_instr != (byte) INSTR(last)) {
      173       173    2            /* Only possible when instr is the implicit AAR in
      174       174    2             * a LAR or SAR.
      175       175    2             */
      176       176    2            ravp->av_saveloc = (entity_p) 0;
      177       177    2         } else {
      178       178    2            ravp->av_saveloc = result_local(avp->av_size, last->l_next);
      179       179    2         }
      180       180    1         ravp->av_occurs = (lset) 0;  /*  set to null */
      181       181    1         ravp->av_found = last;
      182       182    1         ravp->av_result = kind == EXPENSIVE_LOAD? avp->av_operand: newvalnum();
      183       183    1         copy_avail(kind, avp, ravp);
      184       184    1         oldoccur(ocp);
CC.C03    File=zbe$cs_avail:c.:ZBC3TSI                                              Fri Aug 22 1997  Page=6  
      185       185    1         ravp->av_before = avails;
      186       186    1         avails = ravp;
      187       187    1         return ravp;
      188       188    1        }
      189       189
      190       190             clr_avails()
      191       191             {
      192       192    1         /* Throw away the information about the available expressions. */
      193       193    1
      194       194    1         register avail_p ravp, next;
      195       195    1         register Lindex i;
      196       196    1         register lset s;
      197       197    1
      198       198    1         for (ravp = avails; ravp != (avail_p) 0; ravp = next) {
      199       199    2            next = ravp->av_before;
      200       200    2
      201       201    2            s = ravp->av_occurs;
      202       202    2            for (i = Lfirst(s); i != (Lindex) 0; i = Lnext(i, s)) {
      203       203    3               oldoccur(occ_elem(i));
      204       204    3            }
      205       205    2            Ldeleteset(s);
      206       206    2            oldavail(ravp);
      207       207    2         }
      208       208    1         avails = (avail_p) 0;
      209       209    1        }
      210       210
---  Include file information  ---

   em_mnem:h.:ZBC3TOU. is referenced
   zbe$types:h.:ZBC3TOU. is referenced
   zbe$debug:h.:ZBC3TOU. is referenced
   zbe$aux:h.:ZBC3TOU. is referenced
   zbe$lset:h.:ZBC3TOU. is referenced
   zbe$global:h.:ZBC3TOU. is referenced
   zbe$cs:h.:ZBC3TOU. is referenced
   zbe$cs_aux:h.:ZBC3TOU. is referenced
   zbe$cs_debug:h.:ZBC3TOU. is referenced
CC.C03    File=zbe$cs_avail:c.:ZBC3TSI                                              Fri Aug 22 1997  Page=7  
   zbe$cs_alloc:h.:ZBC3TOU. is referenced
   zbe$cs_getent:h.:ZBC3TOU. is referenced

No diagnostics were issued in the file zbe$cs_avail:c.:ZBC3TSI
