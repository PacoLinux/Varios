

11:55 AUG 20 '97 zbc$LLlex:h.:ZBC3TSI                                      1    
    1      /*
    2       * (c) copyright 1987 by the Vrije Universiteit, Amsterdam, The Netherlands.
    3       * See the copyright notice in the ACK home directory, in the file "Copyright".
    4       */
    5      /* $Header: LLlex.h,v 3.7 87/03/27 10:37:58 ceriel Exp $ */
    6      /* D E F I N I T I O N S   F O R   T H E   L E X I C A L   A N A L Y Z E R */
    7
    8      /*  A token from the input stream is represented by an integer,
    9       called a "symbol", but it may have other information associated
   10       to it.
   11      */
   12
   13      #ifdef TS_CP6
   14      #include "zbc$nofloat:h"
   15      #include "zbc$file_info:h"
   16      #include "zbc$nopp:h"
   17      #else  TS_CP6
   18      #include "nofloat:h"
   19      #include "file_info:h"
   20      #include "nopp:h"
   21
   22      #endif TS_CP6
   23      /* the structure of a token:   */
   24      struct token {
   25       int tok_symb;     /* the token itself */
   26       char *tok_file;      /* the file it (probably) comes from */
   27       unsigned int tok_line;  /* the line it (probably) comes from */
   28       long tok_debline; /* the line the debugger will see */
   29       int tok_qualifier;    /* LONG or 0 for strings */
   30       union {
   31          struct idf *tok_idf; /* for IDENTIFIER & TYPE_IDENTIFIER */
   32          struct   {     /* for STRING */
   33             char *tok_bts; /* row of bytes   */
   34             int tok_len;   /* length of row of bytes */
   35          } tok_string;
   36          struct   {     /* for INTEGER */
   37             int tok_fund;  /* INT or LONG */
11:55 AUG 20 '97 zbc$LLlex:h.:ZBC3TSI                                      2    
   38             arith tok_ival;
   39          } tok_integer;
   40      #ifndef NOFLOAT
   41          struct {
   42      #ifndef FLOATOPT
   43             char *tok_fval;
   44      #else
   45             double tok_fval;
   46      #endif
   47             int  tok_ftype;
   48             } tok_float;
   49      #endif NOFLOAT
   50       } tok_data;
   51      };
   52
   53      #define tk_symb tok_symb
   54      #define tk_file tok_file
   55      #define tk_line tok_line
   56      #define tk_idf  tok_data.tok_idf
   57      #define tk_bts  tok_data.tok_string.tok_bts
   58      #define tk_len  tok_data.tok_string.tok_len
   59      #define tk_fund tok_data.tok_integer.tok_fund
   60      #define tk_ival tok_data.tok_integer.tok_ival
   61      #ifndef NOFLOAT
   62      #define tk_fval  tok_data.tok_float.tok_fval
   63      #define tk_ftype tok_data.tok_float.tok_ftype
   64      #endif NOFLOAT
   65
   66      extern struct token dot, ahead, aside;
   67
   68      #ifndef NOPP
   69      extern int ReplaceMacros;   /* "LLlex.c"   */
   70      extern int PreProcKeys;     /* "LLlex.c"   */
   71      extern int AccDefined;      /* "LLlex.c"   */
   72      extern int Unstacked;    /* "LLlex.c"   */
   73      extern int UnknownIdIsZero; /* "LLlex.c"   */
   74      #endif NOPP
11:55 AUG 20 '97 zbc$LLlex:h.:ZBC3TSI                                      3    
   75      extern int EoiForNewline;   /* "LLlex.c"   */
   76      extern int AccFileSpecifier;   /* "LLlex.c"   */
   77      extern int SkipEscNewline;  /* "LLlex.c"   */
   78      extern int File_Inserted;   /* "LLlex.c"   */
   79
   80      extern int NoUnstack;    /* buffer.c */
   81
   82      extern int err_occurred; /* "error.c"   */
   83
   84      #define   DOT   dot.tk_symb
   85      #define   AHEAD ahead.tk_symb
   86      #define   ASIDE aside.tk_symb
   87
   88      #define EOF  (-1)
   89

