

CC.C03    File=zbl$reach:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=1  
        1         1             /*
        2         2              * (c) copyright 1987 by the Vrije Universiteit, Amsterdam, The Netherlands.
        3         3              * See the copyright notice in the ACK home directory, in the file "Copyright"
                               .
        4         4              *
        5         5              */
        6         6
        7         7             /*
        8         8              *  L L G E N
        9         9              *
       10        10              *  An Extended LL(1) Parser Generator
       11        11              *
       12        12              *  Author : Ceriel J.H. Jacobs
       13        13              */
       14        14
       15        15             /*
       16        16              * reach.c
       17        17              * Determine which nonterminals are reachable, and also check that they
       18        18              * are all defined.
       19        19              */
       20        20
       21        21             # include "types:h"
       22        22             # include "extern:h"
       23        23             # include "io:h"
       24        24             # include "assert:h"
       25        25
       26        26             # ifndef NORCSID
       27        27             static string rcsid8 = "$Header: reach.c,v 2.2 87/03/10 01:16:03 ceriel Exp $"
                               ;
       28        28             # endif
       29        29
       30        30             /* In this file the following routines are defined: */
       31        31             extern co_reach();
       32        32             STATIC reachable();
       33        33             STATIC reachwalk();
       34        34
       35        35             co_reach() {
CC.C03    File=zbl$reach:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=2  
       36        36    1         /*
       37        37    1          * Check for undefined or unreachable nonterminals.
       38        38    1          * An undefined nonterminal is a fatal error!
       39        39    1          */
       40        40    1         register p_nont      p;
       41        41    1         register p_start  st;
       42        42    1         register p_file      x;
       43        43    1         register p_order  s;
       44        44    1
       45        45    1         /* Check for undefined nonterminals */
       46        46    1         for (p = nonterms; p < maxnt; p++) {
       47        47    2            if (! p->n_rule) {   /* undefined */
       48        48    3               f_input = p->n_string;
       49        49    3               error(p->n_lineno,"nonterminal %s not defined",
       50        50    3                  p->n_name);
       51        51    3            }
       52        52    2         }
       53        53    1         /*
       54        54    1          * Walk the grammar rules, starting with the startsymbols
       55        55    1          * Mark the nonterminals that are encountered with the flag
       56        56    1          * REACHABLE, and walk their rules, if not done before
       57        57    1          */
       58        58    1         for (st = start; st; st = st->ff_next) {
       59        59    2            reachable(&nonterms[st->ff_nont]);
       60        60    2         }
       61        61    1         /*
       62        62    1          * Now check for unreachable nonterminals
       63        63    1          */
       64        64    1         for (x = files; x < maxfiles; x++) {
       65        65    2             f_input = x->f_name;
       66        66    2             for (s = x->f_list; s; s = s->o_next) {
       67        67    3            p = &nonterms[s->o_index];
       68        68    3            if (! (p->n_flags & REACHABLE)) {
       69        69    4               error(p->n_lineno,"nonterminal %s unreachable",
       70        70    4                  p->n_name);
       71        71    4            }
       72        72    3             }
CC.C03    File=zbl$reach:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=3  
       73        73    2         }
       74        74    1        }
       75        75
       76        76             STATIC
       77        77             reachable(p) register p_nont p; {
       78        78    1         /*
       79        79    1          * Enter the fact that p is reachable, and look for implications
       80        80    1          */
       81        81    1         if (! (p->n_flags & REACHABLE)) {
       82        82    2            p->n_flags |= REACHABLE;
       83        83    2            /*
       84        84    2             * Now walk its grammar rule
       85        85    2             */
       86        86    2            if (p->n_rule) reachwalk(p->n_rule);
       87        87    2         }
       88        88    1        }
       89        89
       90        90             STATIC
       91        91             reachwalk(p) register p_gram p; {
       92        92    1         /*
       93        93    1          * Walk through rule p, looking for nonterminals.
       94        94    1          * The nonterminals found are entered as reachable
       95        95    1          */
       96        96    1
       97        97    1         for (;;) {
       98        98    2            switch(g_gettype(p)) {
       99        99    3              case ALTERNATION :
      100       100    3               reachwalk(links[g_getcont(p)].l_rule);
      101       101    3               break;
      102       102    3              case TERM :
      103       103    3               reachwalk(terms[g_getcont(p)].t_rule);
      104       104    3               break;
      105       105    3              case NONTERM :
      106       106    3               reachable(&nonterms[g_getnont(p)]);
      107       107    3               break;
      108       108    3              case EORULE :
      109       109    3               return;
CC.C03    File=zbl$reach:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=4  
      110       110    3            }
      111       111    2            p++;
      112       112    2         }
      113       113    1        }
      114       114
---  Include file information  ---

   zbl$types:h.:ZBC3TOU. is referenced
   zbl$extern:h.:ZBC3TOU. is referenced
   zbl$io:h.:ZBC3TOU. is referenced
   stdio:h.:LIB_E05. is referenced
   zbl$assert:h.:ZBC3TOU. is referenced

No diagnostics were issued in the file zbl$reach:c.:ZBC3TSI
