

CC.C03    File=zbn$coerc:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=1  
        1         1             /*
        2         2              * (c) copyright 1987 by the Vrije Universiteit, Amsterdam, The Netherlands.
        3         3              * See the copyright notice in the ACK home directory, in the file "Copyright"
                               .
        4         4              */
        5         5             #ifndef NORCSID
        6         6             static char rcsid[]= "$Header: coerc.c,v 0.4 87/03/09 18:58:13 ceriel Exp $";
        7         7             #endif
        8         8
        9         9             #include "assert:h"
       10        10             #include "param:h"
       11        11             #include "set:h"
       12        12             #include "property:h"
       13        13             #include "reg:h"
       14        14             #include "token:h"
       15        15             #include "varinfo:h"
       16        16             #include "iocc:h"
       17        17             #include <cgg_cg:h>
       18        18             #include "pseudo:h"
       19        19             #include "extern:h"
       20        20
       21        21             extern set_t l_sets[];
       22        22             extern struct varinfo null_varinfo;
       23        23
       24        24             int nmoves;
       25        25             move_t l_moves[MAXMOVES];
       26        26             short posmoves[MAXREGS+MAXTOKENS][SETSIZE];
       27        27
       28        28             n_move(s1,e1,s2,e2,vi) struct varinfo *vi; {
       29        29    1         register move_p mp;
       30        30    1         register i,j;
       31        31    1
       32        32    1         NEXT(nmoves,MAXMOVES,"Moves");
       33        33    1         mp = &l_moves[nmoves-1];
       34        34    1         mp->m_set1 = s1;
       35        35    1         mp->m_expr1 = e1;
       36        36    1         mp->m_set2 = s2;
CC.C03    File=zbn$coerc:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=2  
       37        37    1         mp->m_expr2 = e2;
       38        38    1         mp->m_cindex = codeindex;
       39        39    1         dopattern(0,VI_NULL,VI_NULL,vi,VI_NULL,VI_NULL);
       40        40    1         if (mp->m_expr1!=0 || mp->m_expr2!=0)
       41        41    1            return;
       42        42    1         for (i=0;i<MAXREGS+MAXTOKENS;i++)
       43        43    1             if (BIT(l_sets[mp->m_set1].set_val,i))
       44        44    1               for(j=0;j<SETSIZE;j++)
       45        45    1                posmoves[i][j] |= l_sets[mp->m_set2].set_val[j];
       46        46    1        }
       47        47
       48        48             existmove(from,sp) iocc_t from; short *sp; {
       49        49    1         register i;
       50        50    1
       51        51    1         for (i=0;i<MAXREGS+MAXTOKENS;i++)
       52        52    1             if(BIT(from.in_set,i))
       53        53    1            if (!subset(sp,posmoves[i],SETSIZE))
       54        54    1               return(0);
       55        55    1         return(1);
       56        56    1        }
       57        57
       58        58             existalmove(from,prpno) iocc_t from; {
       59        59    1         short s[SETSIZE];
       60        60    1         register i;
       61        61    1
       62        62    1         for (i=0;i<SETSIZE;i++)
       63        63    1            s[i] = i<SZOFSET(MAXREGS) ? l_props[prpno].pr_regset[i] : 0;
       64        64    1         return(existmove(from,s));
       65        65    1        }
       66        66
       67        67             struct varinfo *gen_move(from,to) iocc_t from,to; {
       68        68    1         register struct varinfo *vp;
       69        69    1
       70        70    1         if (existmove(from,to.in_set)==0) {
       71        71    2            error("No such move defined");
       72        72    2            return(VI_NULL);
       73        73    2         }
CC.C03    File=zbn$coerc:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=3  
       74        74    1         NEW(vp,struct varinfo,null_varinfo);
       75        75    1         vp->vi_int[0] = INSMOVE;
       76        76    1         vp->vi_int[1] = from.in_index;
       77        77    1         vp->vi_int[2] = to.in_index;
       78        78    1         return(vp);
       79        79    1        }
       80        80
       81        81             int ntests;
       82        82             test_t l_tests[MAXTESTS];
       83        83             short postests[SETSIZE];
       84        84
       85        85             n_test(s,e,vi) struct varinfo *vi; {
       86        86    1         register test_p tp;
       87        87    1         register i;
       88        88    1
       89        89    1         NEXT(ntests,MAXTESTS,"Tests");
       90        90    1         tp = &l_tests[ntests-1];
       91        91    1         tp->t_set = s;
       92        92    1         tp->t_expr = e;
       93        93    1         tp->t_cindex = codeindex;
       94        94    1         dopattern(0,VI_NULL,VI_NULL,vi,VI_NULL,VI_NULL);
       95        95    1         if (tp->t_expr!=0)
       96        96    1            return;
       97        97    1         for(i=0;i<SETSIZE;i++)
       98        98    1            postests[i] |= l_sets[tp->t_set].set_val[i];
       99        99    1        }
      100       100
      101       101             struct varinfo *gen_test(from) iocc_t from; {
      102       102    1         register struct varinfo *vp;
      103       103    1
      104       104    1         if (!subset(from.in_set,postests,SETSIZE)) {
      105       105    2            error("No such test");
      106       106    2            return(0);
      107       107    2         }
      108       108    1         NEW(vp,struct varinfo,null_varinfo);
      109       109    1         vp->vi_int[0] = INSTEST;
      110       110    1         vp->vi_int[1] = from.in_index;
CC.C03    File=zbn$coerc:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=4  
      111       111    1         return(vp);
      112       112    1        }
      113       113
      114       114             struct varinfo *gen_preturn() {
      115       115    1         register struct varinfo *vp;
      116       116    1
      117       117    1         NEW(vp,struct varinfo,null_varinfo);
      118       118    1         vp->vi_int[0] = INSPRETURN;
      119       119    1         return(vp);
      120       120    1        }
      121       121
      122       122             struct varinfo *gen_tlab(n) {
      123       123    1         register struct varinfo *vp;
      124       124    1
      125       125    1         assert(n>=0 && n<=9);
      126       126    1         NEW(vp,struct varinfo,null_varinfo);
      127       127    1         vp->vi_int[0] = INSTLAB;
      128       128    1         vp->vi_int[1] = n;
      129       129    1         return(vp);
      130       130    1        }
      131       131
      132       132             int nstacks;
      133       133             c1_t l_stacks[MAXSTACKS];
      134       134             set_t ustackset,cstackset;
      135       135
      136       136             n_stack(s,e,p,vi) struct varinfo *vi; {
      137       137    1         register c1_p c1p;
      138       138    1         register short *sp;
      139       139    1         register i;
      140       140    1
      141       141    1         NEXT(nstacks,MAXSTACKS,"Stacks");
      142       142    1         c1p= & l_stacks[nstacks-1];
      143       143    1         c1p->c1_texpno = s;
      144       144    1         c1p->c1_expr = e;
      145       145    1         c1p->c1_prop = p;
      146       146    1         c1p->c1_codep = codeindex;
      147       147    1         dopattern(0,VI_NULL,VI_NULL,vi,VI_NULL,VI_NULL);
CC.C03    File=zbn$coerc:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=5  
      148       148    1
      149       149    1         if (e==0 && p== -1)
      150       150    1            sp = ustackset.set_val;
      151       151    1         else
      152       152    1            sp = cstackset.set_val;
      153       153    1         for(i=0;i<SETSIZE;i++)
      154       154    1            sp[i] |= l_sets[s].set_val[i];
      155       155    1        }
      156       156
      157       157             checkstacking(sp) register short *sp; {
      158       158    1         register i;
      159       159    1         register short *chkset;
      160       160    1         char *warn;
      161       161    1
      162       162    1         if (subset(sp,ustackset.set_val,SETSIZE))
      163       163    1            return;
      164       164    1         chkset = ustackset.set_val; warn = "";
      165       165    1         for (i=1;i<nregs;i++)
      166       166    1            if (BIT(sp,i) && !BIT(chkset,i))
      167       167    1               error("No %sstacking rule for register %s",warn,
      168       168    1                  l_regs[i].ri_name);
      169       169    1         for(;i<nregs+MAXTOKENS;i++)
      170       170    1            if (BIT(sp,i) && !BIT(chkset,i))
      171       171    1               error("No %sstacking rule for token %s",warn,
      172       172    1                  l_tokens[i-nregs]->tk_name);
      173       173    1        }
      174       174
      175       175             int ncoercs;
      176       176             c3_t l_coercs[MAXCOERCS];
      177       177             set_t unstackset;
      178       178
      179       179             /*VARARGS5*/
      180       180
      181       181             n_coerc(ti,be,al,ge,rp,in) struct varinfo *al,*ge,*rp; iocc_t in; {
      182       182    1         register c3_p c3p;
      183       183    1         register i;
      184       184    1         register struct varinfo *vi;
CC.C03    File=zbn$coerc:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=6  
      185       185    1
      186       186    1         if (ti!=0) {
      187       187    2            for(i=0,vi=rp;vi!=0;vi=vi->vi_next,i++)
      188       188    2               ;
      189       189    2            if (i>1) {
      190       190    3               n_split(ti,be,al,ge,rp,i);
      191       191    3               return;
      192       192    3            } else {
      193       193    3               if (i==0) {
      194       194    4                  error("Coercion should have a result!");
      195       195    4                  return;
      196       196    4               }
      197       197    3            }
      198       198    2         } else {
      199       199    2            NEW(rp,struct varinfo,null_varinfo);
      200       200    2            rp->vi_next = 0;
      201       201    2            rp->vi_int[0] = in.in_index;
      202       202    2         }
      203       203    1         if (nallreg>1)
      204       204    1            error("More than 1 register may not be allocated");
      205       205    1         NEXT(ncoercs,MAXCOERCS,"Coercions");
      206       206    1         c3p = & l_coercs[ncoercs-1];
      207       207    1         c3p->c3_texpno = ti;
      208       208    1         c3p->c3_expr = be;
      209       209    1         c3p->c3_prop = nallreg==0 ? -1 : allreg[0];
      210       210    1         c3p->c3_repl = rp->vi_int[0];
      211       211    1         c3p->c3_codep = codeindex;
      212       212    1         dopattern(ti==0,VI_NULL,al,ge,rp,VI_NULL);
      213       213    1         if (ti==0)
      214       214    1            for(i=0;i<SETSIZE;i++)
      215       215    1               unstackset.set_val[i] |= in.in_set[i];
      216       216    1         freevi(rp);
      217       217    1        }
      218       218
      219       219             checkunstacking(setno) {
      220       220    1         register short *sp;
      221       221    1         register i;
CC.C03    File=zbn$coerc:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=7  
      222       222    1         short hallset[SETSIZE];
      223       223    1
      224       224    1         sp = l_sets[setno].set_val;
      225       225    1         for (i=0;i<SETSIZE;i++)
      226       226    1            hallset[i]=sp[i]&unstackset.set_val[i];
      227       227    1         nexthall(hallset);
      228       228    1        }
      229       229
      230       230             int nsplit,maxsplit;
      231       231             c2_t l_split[MAXSPLCOERC];
      232       232
      233       233             n_split(ti,be,al,ge,rp,n) struct varinfo *al,*ge,*rp; {
      234       234    1         register c2_p c2p;
      235       235    1         register i;
      236       236    1         register struct varinfo *vi;
      237       237    1
      238       238    1         NEXT(nsplit,MAXSPLCOERC,"Splitting coercions");
      239       239    1         c2p = &l_split[nsplit-1];
      240       240    1         if (n>MAXSPLIT) {
      241       241    2            error("Maximum split factor is %d",MAXSPLIT);
      242       242    2            n = MAXSPLIT;
      243       243    2         }
      244       244    1         if (n>maxsplit) maxsplit=n;
      245       245    1         c2p->c2_texpno = ti;
      246       246    1         c2p->c2_expr = be;
      247       247    1         if (nallreg)
      248       248    1            error("No register uses allowed in splitting coercion");
      249       249    1         c2p->c2_nsplit = n;
      250       250    1         for (i=0,vi=rp; i<n; i++,vi=vi->vi_next)
      251       251    1            c2p->c2_repl[i] = vi->vi_int[0];
      252       252    1         c2p->c2_codep = codeindex;
      253       253    1         dopattern(0,VI_NULL,al,ge,rp,VI_NULL);
      254       254    1        }
      255       255
---  Include file information  ---

   zbn$assert:h.:ZBC3TOU. is referenced
CC.C03    File=zbn$coerc:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=8  
   zbn$param:h.:ZBC3TOU. is referenced
   zbm$local:h.:ZBC3TOU. is referenced
   zbn$set:h.:ZBC3TOU. is referenced
   zbn$property:h.:ZBC3TOU. is referenced
   zbn$reg:h.:ZBC3TOU. is referenced
   zbn$token:h.:ZBC3TOU. is referenced
   zbn$cost:h.:ZBC3TOU. is referenced
   zbn$varinfo:h.:ZBC3TOU. is referenced
   zbn$iocc:h.:ZBC3TOU. is referenced
   cgg_cg:h.:ZBC3TOU. is referenced
   zbn$pseudo:h.:ZBC3TOU. is referenced
   zbn$extern:h.:ZBC3TOU. is referenced

No diagnostics were issued in the file zbn$coerc:c.:ZBC3TSI
