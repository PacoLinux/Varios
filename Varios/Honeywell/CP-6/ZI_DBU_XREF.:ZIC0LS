FRI. SEP 05 '97 11:22:30.00  FILE=ZI_DBU_XREF

%MACRO XREF_TBLS(STCLASS=SYMREF);
%LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
%IF (SUBSTR(STR,0,6)='STATIC')OR(SUBSTR(STR,0,8)='CONSTANT')OR(SUBSTR(STR,0,3)='EXT');
%LSET INIT=CHARTEXT('INIT');
%ELSE;
%LSET INIT=CHARTEXT('/*');
%ENDIF;
DCL MSTR$   PTR  STCLASS;
/* Note that ZIU$XREF counts on AREA_KEY_XREF being the same
   SIZEW as MSTR_REF. */
DCL 1 MSTR_REF (0:0)  BASED(MSTR$)    ALIGNED,
      2 TYPE     SBIN HALF       UNAL,  /* rec number or type                 */
      2 NEXT     SBIN HALF       UNAL,  /* Ptr to REC or SET XREF             */
      2 NXTHSH   SBIN HALF       UNAL,  /* Handle hash collisions             */
      2 SETOWN REDEF NXTHSH SBIN HALF UNAL,
      2 NAME     CHAR(30)        UNAL,
      2 PAOFF    UBIN BYTE       UNAL,  /* if PA rec, val=offset              */
      2 GLOBAL REDEF PAOFF UBIN BYTE UNAL, /* For sets 1=global               */
      2 PSMODE   UBIN(3)         UNAL,  /* Storage mode of record             */
      2 PAENT    UBIN(24)        UNAL,  /* Size in bytes of PA entry          */
      2 SET    REDEF PAENT UNAL,        /* Additional info for sets           */
        3  FLG    BIT(1)    UNAL,       /* Flag indicates set selected        */
        3  MANUAL BIT(1)    UNAL,       /* Set members are manual             */
        3  INMODE BIT(1)    UNAL,       /* 1= MANUAL INSERTION TYPE           */
        3  RETYPE BIT(1)    UNAL,       /* 1= Optional retention type         */
        3  PATYPE BIT(1)    UNAL,       /* Setmode is PA (pa records)         */
        3  ORDER  UBIN(3)   UNAL,       /* Order of rec storage in set        */
        3  SETYPE UBIN(2)   UNAL,       /* 3=secondary key                    */
        3  SMMODE BIT(1)    UNAL,       /* 1= Primary storage path            */
        3  OWNER_TYPE UBIN(12) UNAL,    /* THE OWNER'S REC_TYPE               */
        3  *  UBIN(1)  UNAL;            /* 1 BIT FOR ENHANCEMENT              */
DCL NXT_MSLOT    SBIN WORD       STCLASS ALIGNED %INIT(-1)%CHARTEXT('/**/');

FILE=ZI_DBU_XREF                   MSTR_REF
LEVEL 2   LEVEL 3   LEVEL 4        0 1 2 3 4 5 6 7 8 0 1 2 3 4 5 6 7 8 0 1 2 3 4 5 6 7 8 0 1 2 3 4 5 6 7 8
                                  I-----------------I-----------------I-----------------I-----------------I
                                 0!TYPE                               !NEXT                               !W
                                  I-----------------I-----------------I-----------------I-----------------I
                                 1!NXTHSH                             !. . . . . . . . . . . . . . . . . .!
                                  I-----------------I-----------------I-----------------I-----------------I
                                 1!SETOWN                             !NAME                               !
                                  I-----------------I-----------------I - - - - - - - - I - - - - - - - - I
                                 2!                                                                       !
                                  I - - - - - - - - I - - - - - - - - I - - - - - - - - I - - - - - - - - I
                                 3!                                                                       !
                                  I - - - - - - - - I - - - - - - - - I - - - - - - - - I - - - - - - - - I
                                 4!                                                                       !
                                  I - - - - - - - - I - - - - - - - - I - - - - - - - - I - - - - - - - - I
                                 5!                                                                       !
                                  I - - - - - - - - I - - - - - - - - I - - - - - - - - I - - - - - - - - I
                                 6!                                                                       !
                                  I - - - - - - - - I - - - - - - - - I - - - - - - - - I - - - - - - - - I
                                 7!                                                                       !
                                  I - - - - - - - - I - - - - - - - - I - - - - - - - - I - - - - - - - - I
                                10!                                                                       !
                                  I-----------------I-----------------I-----------------I-----------------I
                                11!PAOFF            !. . . . . . . . . . . . . . . . . . . . . . . . . . .!
                                  I-----------------I-----------------I-----------------I-----------------I
                    PSMODE      11!GLOBAL           !@    !PAENT                                          !
                                  I-----------------I-----------------I-----------------I-----------------I
SET                 FLG         11!. . . . . . . . . . . .!@!. . . . . . . . . . . . . . . . . . . . . . .!B
                                  I-----------------I-----------------I-----------------I-----------------I
SET                 MANUAL      11!. . . . . . . . . . . . .!@!. . . . . . . . . . . . . . . . . . . . . .!
                                  I-----------------I-----------------I-----------------I-----------------I
SET                 INMODE      11!. . . . . . . . . . . . . .!@!. . . . . . . . . . . . . . . . . . . . .!
                                  I-----------------I-----------------I-----------------I-----------------I
SET                 RETYPE      11!. . . . . . . . . . . . . . .!@!. . . . . . . . . . . . . . . . . . . .!
                                  I-----------------I-----------------I-----------------I-----------------I
SET                 PATYPE      11!. . . . . . . . . . . . . . . .!@!ORDER!. . . . . . . . . . . . . . . .!
                                  I-----------------I-----------------I-----------------I-----------------I
SET                 SETYPE      11!. . . . . . . . . . . . . . . . . . . .!@  !. . . . . . . . . . . . . .!
                                  I-----------------I-----------------I-----------------I-----------------I

FILE=ZI_DBU_XREF                   MSTR_REF
LEVEL 2   LEVEL 3   LEVEL 4        0 1 2 3 4 5 6 7 8 0 1 2 3 4 5 6 7 8 0 1 2 3 4 5 6 7 8 0 1 2 3 4 5 6 7 8
                                  I-----------------I-----------------I-----------------I-----------------I
SET                 SMMODE      11!. . . . . . . . . . . . . . . . . . . . . .!@!OWNER_TYPE             !*!
                                  I-----------------I-----------------I-----------------I-----------------I

DCL NXT_MSLOT    SBIN WORD       STCLASS ALIGNED %INIT(-1)%CHARTEXT('/**/');
DCL MAX_MSLOT    SBIN WORD       STCLASS ALIGNED %INIT(0)%CHARTEXT('/**/');
DCL MSTR_INDX    SBIN WORD       STCLASS ALIGNED;

DCL HASHTBL(0:499) SBIN HALF STCLASS HALIGNED; /* MUST BE WORD BOUND          */
DCL HASHINDX     SBIN WORD       STCLASS ALIGNED;
DCL 1 LOC_MODE(0:3) STCLASS ALIGNED,
      2 NEXT SBIN HALF UNAL;

FILE=ZI_DBU_XREF                   LOC_MODE
LEVEL 2   LEVEL 3   LEVEL 4        0 1 2 3 4 5 6 7 8 0 1 2 3 4 5 6 7 8 0 1 2 3 4 5 6 7 8 0 1 2 3 4 5 6 7 8
                                  I-----------------I-----------------I-----------------I-----------------I
                                 0!NEXT                               !# # # # # # # # # # # # # # # # # #!W
                                  I-----------------I-----------------I-----------------I-----------------I
                                 1!NEXT                               !# # # # # # # # # # # # # # # # # #!
                                  I-----------------I-----------------I-----------------I-----------------I
                                 2!NEXT                               !# # # # # # # # # # # # # # # # # #!
                                  I-----------------I-----------------I-----------------I-----------------I
                                 3!NEXT                               !# # # # # # # # # # # # # # # # # #!
                                  I-----------------I-----------------I-----------------I-----------------I

DCL AREA_KEY$     PTR   STCLASS;
/* Note that ZIU$XREF counts on AREA_KEY_XREF being the same
   SIZEW as MSTR_REF. */
DCL 1  AREA_KEY_XREF (0:0) BASED(AREA_KEY$)  ALIGNED,
      2 DCB#     UBIN HALF   UNAL,
      2 MAX_KEY  UBIN WORD   UNAL,
      2 NAME     CHAR(30)    UNAL,
      2 LOC_KSZ  UBIN BYTE   UNAL,
      2 CHECKED  SBIN BYTE   UNAL,      /* Set =1 if area has been CHECKED    */
      2 PERMTYPE UBIN BYTE   UNAL,
      2 *        UBIN BYTE   UNAL;

FILE=ZI_DBU_XREF                   AREA_KEY_XREF
LEVEL 2   LEVEL 3   LEVEL 4        0 1 2 3 4 5 6 7 8 0 1 2 3 4 5 6 7 8 0 1 2 3 4 5 6 7 8 0 1 2 3 4 5 6 7 8
                                  I-----------------I-----------------I-----------------I-----------------I
                                 0!DCB#                               !MAX_KEY                            !W
                                  I-----------------I-----------------I-----------------I-----------------I
                                 1!                                   !NAME                               !
                                  I-----------------I-----------------I - - - - - - - - I - - - - - - - - I
                                 2!                                                                       !
                                  I - - - - - - - - I - - - - - - - - I - - - - - - - - I - - - - - - - - I
                                 3!                                                                       !
                                  I - - - - - - - - I - - - - - - - - I - - - - - - - - I - - - - - - - - I
                                 4!                                                                       !
                                  I - - - - - - - - I - - - - - - - - I - - - - - - - - I - - - - - - - - I
                                 5!                                                                       !
                                  I - - - - - - - - I - - - - - - - - I - - - - - - - - I - - - - - - - - I
                                 6!                                                                       !
                                  I - - - - - - - - I - - - - - - - - I - - - - - - - - I - - - - - - - - I
                                 7!                                                                       !
                                  I - - - - - - - - I - - - - - - - - I - - - - - - - - I - - - - - - - - I
                                10!                                                                       !
                                  I-----------------I-----------------I-----------------I-----------------I
                                11!LOC_KSZ          !CHECKED          !PERMTYPE         !*                !
                                  I-----------------I-----------------I-----------------I-----------------I

DCL NO_AREAS      SBIN WORD   STCLASS ALIGNED %INIT(0)%CHARTEXT('/**/');
DCL GLBL_PTR_SZ   SBIN WORD   STCLASS ALIGNED;

DCL SET_XREF$    PTR             STCLASS;
DCL 1 SET_XREF (0:0)  BASED(SET_XREF$)    ALIGNED,
      2 MSTRINDX SBIN HALF               HALIGNED,
      2 NEXT     SBIN HALF               HALIGNED,
      2 EIS,
        3  PRIOR     SBIN WORD          ALIGNED,
        3  OWNR      SBIN WORD          ALIGNED,
        3  NEXT      SBIN WORD          ALIGNED;

FILE=ZI_DBU_XREF                   SET_XREF
LEVEL 2   LEVEL 3   LEVEL 4        0 1 2 3 4 5 6 7 8 0 1 2 3 4 5 6 7 8 0 1 2 3 4 5 6 7 8 0 1 2 3 4 5 6 7 8
                                  I-----------------I-----------------I-----------------I-----------------I
                                 0!MSTRINDX                           !NEXT                               !W
                                  I-----------------I-----------------I-----------------I-----------------I
EIS                              1!PRIOR                                                                  !W
                                  I-----------------I-----------------I-----------------I-----------------I
EIS                              2!OWNR                                                                   !
                                  I-----------------I-----------------I-----------------I-----------------I
EIS                              3!NEXT                                                                   !
                                  I-----------------I-----------------I-----------------I-----------------I

DCL NXT_SSLOT    SBIN WORD       STCLASS ALIGNED %INIT(-1)%CHARTEXT('/**/');
DCL MAX_SSLOT    SBIN WORD       STCLASS ALIGNED %INIT(0)%CHARTEXT('/**/');

/* TYPE TABLE INDEXED BY REC TYPE, POINTS TO THE MSTR TABLE */

DCL REC_XREF$    PTR    STCLASS;
DCL 1 REC_XREF (0:0)   BASED(REC_XREF$)        ALIGNED,
      2 NEXT      SBIN HALF               UNAL,
      2 MSTRINDX  UBIN(17)                UNAL,
      2 OWNR      BIT(1)                  UNAL;

FILE=ZI_DBU_XREF                   REC_XREF
LEVEL 2   LEVEL 3   LEVEL 4        0 1 2 3 4 5 6 7 8 0 1 2 3 4 5 6 7 8 0 1 2 3 4 5 6 7 8 0 1 2 3 4 5 6 7 8
                                  I-----------------I-----------------I-----------------I-----------------I
                    OWNR         0!NEXT                               !MSTRINDX                         !@!W
                                  I-----------------I-----------------I-----------------I-----------------I

DCL NXT_RSLOT     SBIN WORD      STCLASS ALIGNED %INIT(-1)%CHARTEXT('/**/');
DCL MAX_RSLOT     SBIN WORD      STCLASS ALIGNED %INIT(0)%CHARTEXT('/**/');

DCL NO_RECS       SBIN WORD      STCLASS ALIGNED %INIT(0)%CHARTEXT('/**/');
DCL NO_SETS       SBIN WORD      STCLASS ALIGNED %INIT(0)%CHARTEXT('/**/');
DCL XREF_BUILT    BIT(1)  STCLASS ALIGNED %INIT('0'B)%CHARTEXT('/**/');
DCL  TYPESET    BIT(1) STCLASS ALIGNED; /* yes if mstr_indx at a set          */
DCL  TYPEREC    BIT(1) STCLASS ALIGNED; /* yes if mstr_indx at a rec          */

%MEND;
%EQU   MAX_PA_SET=63;                   /* USED BY ZIU$COMPACT AND ZIU$REPRT  */
%MACRO PA_XREF_TBLS(STCLASS=SYMREF);
/*
      THE FOLLOWING TABLES GENERATED BY PA_XREF_TBLS
      ARE USED BY COMPACT,CONVERT AND RESORT SO FAR
*/

DCL   SC_PTR SBIN STCLASS ALIGNED;
DCL 1 SC_TBL(0:%MAX_PA_SET) STCLASS CALIGNED,
      2 NAME CHAR(16) UNAL,             /* ONLY STORE 16 CHAR FOR MSG USE     */
      2 SETYPE UBIN(2) UNAL, /* 0 FOR PA, 1 FOR DEFINED KEY, 2 FOR WITHIN REC */
      2 PA_PTRSIZE UBIN(3) UNAL,        /* POINTER SIZE FOR THIS SET          */
      2 PA_KEYSIZE UBIN BYTE UNAL,      /* TOTAL KEY SIZE IN PA ENTRY         */
      2 PA_TYPE UBIN(12) UNAL,          /* PA TYPE FOR THIS PA SET            */
      2 PA_RECSIZE UBIN HALF UNAL,      /* SIZE OF PA_REC FOR PA SET          */
      2 FULL_PERCENT UBIN(12) UNAL,
      2 NO_OF_SM UBIN(6) UNAL,
      2 NO_OF_KEYS UBIN(5) UNAL,        /* NUMBER OF SORT KEYS                */
      2 GLOBAL UBIN(1) UNAL,            /* SET GLOBAL OR LOCAL                */
      2 RC_PTR UBIN BYTE UNAL,          /* POINT TO THE OWNER_RC OF THIS SET  */
      2 KEY_PTR UBIN HALF UNAL,         /* PTR TO INDIVIUAL KEY IN SORT_REC   */
      2 COUNT2 REDEF KEY_PTR UBIN HALF UNAL,
      2 COUNT SBIN HALF UNAL;           /* KEEP A SUMMARY COUNTER             */

%EQU  MAX_PA_MEM = 255;            /* TYPE TABLE MUST BE EXPANDED BEFORE THIS */
DCL   RC_PTR SBIN STCLASS ALIGNED;

FILE=ZI_DBU_XREF                   SC_TBL
LEVEL 2   LEVEL 3   LEVEL 4        0 1 2 3 4 5 6 7 8 0 1 2 3 4 5 6 7 8 0 1 2 3 4 5 6 7 8 0 1 2 3 4 5 6 7 8
                                  I-----------------I-----------------I-----------------I-----------------I
                                 0!NAME                                                                   !C
                                  I - - - - - - - - I - - - - - - - - I - - - - - - - - I - - - - - - - - I
                                 1!                                                                       !
                                  I - - - - - - - - I - - - - - - - - I - - - - - - - - I - - - - - - - - I
                                 2!                                                                       !
                                  I - - - - - - - - I - - - - - - - - I - - - - - - - - I - - - - - - - - I
                                 3!                                                                       !
                                  I-----------------I-----------------I-----------------I-----------------I
                    SETYPE       4!@  !. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .!
                                  I-----------------I-----------------I-----------------I-----------------I
                    PA_PTRSIZE   4!. .!@    !PA_KEYSIZE       !PA_TYPE                !PA_RECSIZE         !
                                  I---------------------------------I-----------------I-----------------I--
                    NO_OF_KEYS   5!               !FULL_PERCENT           !NO_OF_SM   !@        !. . . . .!
                                  I-----------------I-----------------I-----------------I-----------------I
                    GLOBAL       5!. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .!@!RC_PTR !
                                  I---------------------------I-----------------I-----------------I--------
                                 6!         !KEY_PTR                            !. . . . . . . . . . . . .!
                                  I-----------------I-----------------I-----------------I-----------------I
                                 6!. . . . .!COUNT2                             !COUNT                    !
                                  I---------------------------I-----------------I-----------------I--------
                                 7!         !# # # #!. . . . . . . . . . . . . . . . . . . . . . . . . . .!
                                  I-----------------I-----------------I-----------------I-----------------I

DCL   RC_PTR SBIN STCLASS ALIGNED;
DCL 1 RC_TBL(0:%MAX_PA_MEM) STCLASS ALIGNED,
      2 NXPNT_EIS UBIN WORD ALIGNED,    /* EIS OF NEXT POINTER IN REC         */
      2 REDEF_NEXT REDEF NXPNT_EIS ALIGNED,
        3 * UBIN(3) UNAL,
        3 OFST UBIN(17) UNAL,
        3 * UBIN(16) UNAL,
      2 TYPE UBIN HALF UNAL,            /* RC TYPE FOR THAT REC               */
      2 BYTES_SHIFT UBIN BYTE UNAL,
      2 * UBIN BYTE UNAL,               /* FOR LATER USE                      */
      2 RC_NEXT UBIN BYTE UNAL,
      2 SC_PTR UBIN BYTE UNAL,          /* FROM RC TO EACH PA SC              */
      2 DUPIND UBIN(1) UNAL,            /* DUPLICATE INDICATOR = 1 IF YES     */
      2 MANUAL UBIN(1) UNAL,            /* IF UNCONNECTED MEMBER ALLOWED      */
      2 NO_OF_KEYS UBIN(6) UNAL, /* FOR SORT WITHIN REC, EACH MEMBEB DIFFERS  */
      2 KEY_PTR UBIN(10) UNAL;          /* TO LOCATION OF EACH KEY            */

FILE=ZI_DBU_XREF                   RC_TBL
LEVEL 2   LEVEL 3   LEVEL 4        0 1 2 3 4 5 6 7 8 0 1 2 3 4 5 6 7 8 0 1 2 3 4 5 6 7 8 0 1 2 3 4 5 6 7 8
                                  I-----------------I-----------------I-----------------I-----------------I
                                 0!NXPNT_EIS                                                              !W
                                  I-----------------I-----------------I-----------------I-----------------I
REDEF_NEXT                       0!*    !OFST                             !*                              !W
                                  I-----------------I-----------------I-----------------I-----------------I
                                 1!TYPE                               !BYTES_SHIFT      !*                !
                                  I-----------------I-----------------I-----------------I-----------------I
                    DUPIND       2!RC_NEXT          !SC_PTR           !@!. . . . . . . . . . . . . . . . .!
                                  I-----------------I-----------------I-----------------I-----------------I
                    MANUAL       2!. . . . . . . . . . . . . . . . . . .!@!NO_OF_KEYS !KEY_PTR            !
                                  I-----------------I-----------------I-----------------I-----------------I

DCL   KEY_PTR SBIN STCLASS ALIGNED;
DCL 1 KEY_TBL(0:%MAX_PA_KEY) STCLASS ALIGNED,
      2 EIS UBIN WORD ALIGNED,
      2 EIS_REDEF REDEF EIS ALIGNED,
        3 * UBIN(3) UNAL,               /* PR0-7                              */
        3 CC UBIN(3) UNAL,              /* BORROW THIS FOR COMPARE CODE       */
        3 DESCEND UBIN(1) UNAL,         /* IF DESCENDING KEY THEN 1           */
        3 OFST UBIN(13) UNAL,           /* BYTE OFFSET                        */
        3 * UBIN(4) UNAL,
        3 SIZE UBIN(12) UNAL;

FILE=ZI_DBU_XREF                   KEY_TBL
LEVEL 2   LEVEL 3   LEVEL 4        0 1 2 3 4 5 6 7 8 0 1 2 3 4 5 6 7 8 0 1 2 3 4 5 6 7 8 0 1 2 3 4 5 6 7 8
                                  I-----------------I-----------------I-----------------I-----------------I
                                 0!EIS                                                                    !W
                                  I-----------------I-----------------I-----------------I-----------------I
EIS_REDEF           DESCEND      0!*    !CC   !@!OFST                     !*      !SIZE                   !W
                                  I-----------------I-----------------I-----------------I-----------------I

DCL   AC_PTR SBIN STCLASS ALIGNED;
DCL   FIRST_TIME_CALLED SBIN WORD STCLASS ALIGNED;
DCL BASE_DBK SBIN WORD STCLASS ALIGNED; /* =0 IF SET GLOBAL                   */
%EQU  MAX_AREAS=47;                     /* AC TABLE HAS 48 SLOTS              */
DCL 1 AC_TBL(0:%MAX_AREAS) STCLASS ALIGNED,
      2 BASE_DBK UBIN WORD ALIGNED,
      2 RANGE_LOW SBIN WORD UNAL,
      2 RANGE_HIGH SBIN WORD UNAL,      /* PAGE RANGE TO READ THIS AREA       */
      2 NUM_DBPG UBIN HALF UNAL,        /* NUMBER OF DATA PAGES               */
      2 NAME CHAR(30) UNAL,
      2 LPP UBIN(10) UNAL,
      2 PAGE_WRITTEN BIT(1) UNAL,
      2 * UBIN(6) UNAL,                 /* FOR WHATEVER YOU WANT              */
      2 LNLP UBIN(10) UNAL,             /*Line numbers on last page           */
      2 CHECKSUM BIT(1) UNAL,           /* 1 IF AREA IS CHECKSUMED            */
      2 DCB# UBIN(8) UNAL;              /* STORE DCB # OF THIS AREA           */

FILE=ZI_DBU_XREF                   AC_TBL
LEVEL 2   LEVEL 3   LEVEL 4        0 1 2 3 4 5 6 7 8 0 1 2 3 4 5 6 7 8 0 1 2 3 4 5 6 7 8 0 1 2 3 4 5 6 7 8
                                  I-----------------I-----------------I-----------------I-----------------I
                                 0!BASE_DBK                                                               !W
                                  I-----------------I-----------------I-----------------I-----------------I
                                 1!RANGE_LOW                                                              !
                                  I-----------------I-----------------I-----------------I-----------------I
                                 2!RANGE_HIGH                                                             !
                                  I-----------------I-----------------I-----------------I-----------------I
                                 3!NUM_DBPG                           !NAME                               !
                                  I-----------------I-----------------I - - - - - - - - I - - - - - - - - I
                                 4!                                                                       !
                                  I - - - - - - - - I - - - - - - - - I - - - - - - - - I - - - - - - - - I
                                 5!                                                                       !
                                  I - - - - - - - - I - - - - - - - - I - - - - - - - - I - - - - - - - - I
                                 6!                                                                       !
                                  I - - - - - - - - I - - - - - - - - I - - - - - - - - I - - - - - - - - I
                                 7!                                                                       !
                                  I - - - - - - - - I - - - - - - - - I - - - - - - - - I - - - - - - - - I
                                10!                                                                       !
                                  I - - - - - - - - I - - - - - - - - I - - - - - - - - I - - - - - - - - I
                                11!                                                                       !
                                  I - - - - - - - - I - - - - - - - - I - - - - - - - - I - - - - - - - - I
                                12!                                                                       !
                                  I-----------------I-----------------I-----------------I-----------------I
                    PAGE_WRITT  13!LPP                !@!*          !LNLP               !. . . . . . . . .!
                                  I-----------------I-----------------I-----------------I-----------------I
                    CHECKSUM    13!. . . . . . . . . . . . . . . . . . . . . . . . . . .!@!DCB#           !
                                  I-----------------I-----------------I-----------------I-----------------I

DCL 1 TYPE SYMREF ALIGNED,              /* SYMDEF IN ZIU$Q2UT                 */
      2 MSTRINDX(0:4000) SBIN HALF HALIGNED;

FILE=ZI_DBU_XREF                   TYPE
LEVEL 2   LEVEL 3   LEVEL 4        0 1 2 3 4 5 6 7 8 0 1 2 3 4 5 6 7 8 0 1 2 3 4 5 6 7 8 0 1 2 3 4 5 6 7 8
                                  I-----------------I-----------------I-----------------I-----------------I
                                 0!MSTRINDX                           !. . . . . . . . . . . . . . . . . .!W
                                  I-----------------I-----------------I-----------------I-----------------I
                                   ARRAY:'7641'O ENTRIES TOTAL.
                                  I-----------------I-----------------I-----------------I-----------------I
                              3720!. . . . . . . . . . . . . . . . . .!# # # # # # # # # # # # # # # # # #!
                                  I-----------------I-----------------I-----------------I-----------------I


11:22 SEP 05 '97 ZI_DBU_XREF.:ZIC0TOU
     1 - /*T***********************************************************/
     2 - /*T*                                                         */
     3 - /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     4 - /*T*                                                         */
     5 - /*T***********************************************************/
     6 - /*
     7 -       THE FOLLOWING TABLES GENERATED BY THIS MACRE XREF_TBLS
     8 -       ARE USED BY PRINT,REPAIR,CHECK,VALID AND REPORT SO FAR
     9 - */
    10 - %MACRO XREF_TBLS(STCLASS=SYMREF);
    11 - %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
    12 - %IF (SUBSTR(STR,0,6)='STATIC')OR(SUBSTR(STR,0,8)='CONSTANT')OR(SUBSTR(STR,0,3)='EXT');
    13 - %LSET INIT=CHARTEXT('INIT');
    14 - %ELSE;
    15 - %LSET INIT=CHARTEXT('/*');
    16 - %ENDIF;
    17 - DCL MSTR$   PTR  STCLASS;
    18 - /* Note that ZIU$XREF counts on AREA_KEY_XREF being the same
    19 -    SIZEW as MSTR_REF. */
    20 - DCL 1 MSTR_REF (0:0)  BASED(MSTR$)    ALIGNED,
    21 -       2 TYPE     SBIN HALF       UNAL,  /* rec number or type                 */
    22 -       2 NEXT     SBIN HALF       UNAL,  /* Ptr to REC or SET XREF             */
    23 -       2 NXTHSH   SBIN HALF       UNAL,  /* Handle hash collisions             */
    24 -       2 SETOWN REDEF NXTHSH SBIN HALF UNAL,
    25 -       2 NAME     CHAR(30)        UNAL,
    26 -       2 PAOFF    UBIN BYTE       UNAL,  /* if PA rec, val=offset              */
    27 -       2 GLOBAL REDEF PAOFF UBIN BYTE UNAL, /* For sets 1=global               */
    28 -       2 PSMODE   UBIN(3)         UNAL,  /* Storage mode of record             */
    29 -       2 PAENT    UBIN(24)        UNAL,  /* Size in bytes of PA entry          */
    30 -       2 SET    REDEF PAENT UNAL,        /* Additional info for sets           */
    31 -         3  FLG    BIT(1)    UNAL,       /* Flag indicates set selected        */
    32 -         3  MANUAL BIT(1)    UNAL,       /* Set members are manual             */
    33 -         3  INMODE BIT(1)    UNAL,       /* 1= MANUAL INSERTION TYPE           */
    34 -         3  RETYPE BIT(1)    UNAL,       /* 1= Optional retention type         */
    35 -         3  PATYPE BIT(1)    UNAL,       /* Setmode is PA (pa records)         */
    36 -         3  ORDER  UBIN(3)   UNAL,       /* Order of rec storage in set        */
    37 -         3  SETYPE UBIN(2)   UNAL,       /* 3=secondary key                    */
    38 -         3  SMMODE BIT(1)    UNAL,       /* 1= Primary storage path            */
    39 -         3  OWNER_TYPE UBIN(12) UNAL,    /* THE OWNER'S REC_TYPE               */
    40 -         3  *  UBIN(1)  UNAL;            /* 1 BIT FOR ENHANCEMENT              */
    41 - DCL NXT_MSLOT    SBIN WORD       STCLASS ALIGNED %INIT(-1)%CHARTEXT('/**/');
    42 - DCL MAX_MSLOT    SBIN WORD       STCLASS ALIGNED %INIT(0)%CHARTEXT('/**/');
    43 - DCL MSTR_INDX    SBIN WORD       STCLASS ALIGNED;
    44 -  
    45 - DCL HASHTBL(0:499) SBIN HALF STCLASS HALIGNED; /* MUST BE WORD BOUND          */
    46 - DCL HASHINDX     SBIN WORD       STCLASS ALIGNED;
    47 - DCL 1 LOC_MODE(0:3) STCLASS ALIGNED,
    48 -       2 NEXT SBIN HALF UNAL;
    49 -  
    50 -  
    51 - DCL AREA_KEY$     PTR   STCLASS;
    52 - /* Note that ZIU$XREF counts on AREA_KEY_XREF being the same
    53 -    SIZEW as MSTR_REF. */
    54 - DCL 1  AREA_KEY_XREF (0:0) BASED(AREA_KEY$)  ALIGNED,
    55 -       2 DCB#     UBIN HALF   UNAL,
    56 -       2 MAX_KEY  UBIN WORD   UNAL,
    57 -       2 NAME     CHAR(30)    UNAL,
    58 -       2 LOC_KSZ  UBIN BYTE   UNAL,
    59 -       2 CHECKED  SBIN BYTE   UNAL,      /* Set =1 if area has been CHECKED    */
    60 -       2 PERMTYPE UBIN BYTE   UNAL,
    61 -       2 *        UBIN BYTE   UNAL;
    62 - DCL NO_AREAS      SBIN WORD   STCLASS ALIGNED %INIT(0)%CHARTEXT('/**/');
    63 - DCL GLBL_PTR_SZ   SBIN WORD   STCLASS ALIGNED;
    64 -  
    65 - DCL SET_XREF$    PTR             STCLASS;
    66 - DCL 1 SET_XREF (0:0)  BASED(SET_XREF$)    ALIGNED,
    67 -       2 MSTRINDX SBIN HALF               HALIGNED,
    68 -       2 NEXT     SBIN HALF               HALIGNED,
    69 -       2 EIS,
    70 -         3  PRIOR     SBIN WORD          ALIGNED,
    71 -         3  OWNR      SBIN WORD          ALIGNED,
    72 -         3  NEXT      SBIN WORD          ALIGNED;
    73 - DCL NXT_SSLOT    SBIN WORD       STCLASS ALIGNED %INIT(-1)%CHARTEXT('/**/');
    74 - DCL MAX_SSLOT    SBIN WORD       STCLASS ALIGNED %INIT(0)%CHARTEXT('/**/');
    75 -  
    76 - /* TYPE TABLE INDEXED BY REC TYPE, POINTS TO THE MSTR TABLE */
    77 -  
    78 - DCL REC_XREF$    PTR    STCLASS;
    79 - DCL 1 REC_XREF (0:0)   BASED(REC_XREF$)        ALIGNED,
    80 -       2 NEXT      SBIN HALF               UNAL,
    81 -       2 MSTRINDX  UBIN(17)                UNAL,
    82 -       2 OWNR      BIT(1)                  UNAL;
    83 - DCL NXT_RSLOT     SBIN WORD      STCLASS ALIGNED %INIT(-1)%CHARTEXT('/**/');
    84 - DCL MAX_RSLOT     SBIN WORD      STCLASS ALIGNED %INIT(0)%CHARTEXT('/**/');
    85 -  
    86 - DCL NO_RECS       SBIN WORD      STCLASS ALIGNED %INIT(0)%CHARTEXT('/**/');
    87 - DCL NO_SETS       SBIN WORD      STCLASS ALIGNED %INIT(0)%CHARTEXT('/**/');
    88 - DCL XREF_BUILT    BIT(1)  STCLASS ALIGNED %INIT('0'B)%CHARTEXT('/**/');
    89 - DCL  TYPESET    BIT(1) STCLASS ALIGNED; /* yes if mstr_indx at a set          */
    90 - DCL  TYPEREC    BIT(1) STCLASS ALIGNED; /* yes if mstr_indx at a rec          */
    91 -  
    92 - %MEND;
    93 - %EQU   MAX_PA_SET=63;                   /* USED BY ZIU$COMPACT AND ZIU$REPRT  */
    94 - %MACRO PA_XREF_TBLS(STCLASS=SYMREF);
    95 - /*
    96 -       THE FOLLOWING TABLES GENERATED BY PA_XREF_TBLS
    97 -       ARE USED BY COMPACT,CONVERT AND RESORT SO FAR
    98 - */
    99 -  
   100 - DCL   SC_PTR SBIN STCLASS ALIGNED;
   101 - DCL 1 SC_TBL(0:%MAX_PA_SET) STCLASS CALIGNED,
   102 -       2 NAME CHAR(16) UNAL,             /* ONLY STORE 16 CHAR FOR MSG USE     */
   103 -       2 SETYPE UBIN(2) UNAL, /* 0 FOR PA, 1 FOR DEFINED KEY, 2 FOR WITHIN REC */
   104 -       2 PA_PTRSIZE UBIN(3) UNAL,        /* POINTER SIZE FOR THIS SET          */
   105 -       2 PA_KEYSIZE UBIN BYTE UNAL,      /* TOTAL KEY SIZE IN PA ENTRY         */
   106 -       2 PA_TYPE UBIN(12) UNAL,          /* PA TYPE FOR THIS PA SET            */
   107 -       2 PA_RECSIZE UBIN HALF UNAL,      /* SIZE OF PA_REC FOR PA SET          */
   108 -       2 FULL_PERCENT UBIN(12) UNAL,
   109 -       2 NO_OF_SM UBIN(6) UNAL,
   110 -       2 NO_OF_KEYS UBIN(5) UNAL,        /* NUMBER OF SORT KEYS                */
   111 -       2 GLOBAL UBIN(1) UNAL,            /* SET GLOBAL OR LOCAL                */
   112 -       2 RC_PTR UBIN BYTE UNAL,          /* POINT TO THE OWNER_RC OF THIS SET  */
   113 -       2 KEY_PTR UBIN HALF UNAL,         /* PTR TO INDIVIUAL KEY IN SORT_REC   */
   114 -       2 COUNT2 REDEF KEY_PTR UBIN HALF UNAL,
   115 -       2 COUNT SBIN HALF UNAL;           /* KEEP A SUMMARY COUNTER             */
   116 -  
   117 - %EQU  MAX_PA_MEM = 255;            /* TYPE TABLE MUST BE EXPANDED BEFORE THIS */
   118 - DCL   RC_PTR SBIN STCLASS ALIGNED;
   119 - DCL 1 RC_TBL(0:%MAX_PA_MEM) STCLASS ALIGNED,
   120 -       2 NXPNT_EIS UBIN WORD ALIGNED,    /* EIS OF NEXT POINTER IN REC         */
   121 -       2 REDEF_NEXT REDEF NXPNT_EIS ALIGNED,
   122 -         3 * UBIN(3) UNAL,
   123 -         3 OFST UBIN(17) UNAL,
   124 -         3 * UBIN(16) UNAL,
   125 -       2 TYPE UBIN HALF UNAL,            /* RC TYPE FOR THAT REC               */
   126 -       2 BYTES_SHIFT UBIN BYTE UNAL,
   127 -       2 * UBIN BYTE UNAL,               /* FOR LATER USE                      */
   128 -       2 RC_NEXT UBIN BYTE UNAL,
   129 -       2 SC_PTR UBIN BYTE UNAL,          /* FROM RC TO EACH PA SC              */
   130 -       2 DUPIND UBIN(1) UNAL,            /* DUPLICATE INDICATOR = 1 IF YES     */
   131 -       2 MANUAL UBIN(1) UNAL,            /* IF UNCONNECTED MEMBER ALLOWED      */
   132 -       2 NO_OF_KEYS UBIN(6) UNAL, /* FOR SORT WITHIN REC, EACH MEMBEB DIFFERS  */
   133 -       2 KEY_PTR UBIN(10) UNAL;          /* TO LOCATION OF EACH KEY            */
   134 -  
   135 - %EQU  MAX_PA_KEY = 2*(%MAX_PA_MEM+1)-1; /* ASSUME EACH MEM OWNS 2 KEYS        */
   136 - DCL   KEY_PTR SBIN STCLASS ALIGNED;
   137 - DCL 1 KEY_TBL(0:%MAX_PA_KEY) STCLASS ALIGNED,
   138 -       2 EIS UBIN WORD ALIGNED,
   139 -       2 EIS_REDEF REDEF EIS ALIGNED,
   140 -         3 * UBIN(3) UNAL,               /* PR0-7                              */
   141 -         3 CC UBIN(3) UNAL,              /* BORROW THIS FOR COMPARE CODE       */
   142 -         3 DESCEND UBIN(1) UNAL,         /* IF DESCENDING KEY THEN 1           */
   143 -         3 OFST UBIN(13) UNAL,           /* BYTE OFFSET                        */
   144 -         3 * UBIN(4) UNAL,
   145 -         3 SIZE UBIN(12) UNAL;
   146 -  
   147 - DCL   AC_PTR SBIN STCLASS ALIGNED;
   148 - DCL   FIRST_TIME_CALLED SBIN WORD STCLASS ALIGNED;
   149 - DCL BASE_DBK SBIN WORD STCLASS ALIGNED; /* =0 IF SET GLOBAL                   */
   150 - %EQU  MAX_AREAS=47;                     /* AC TABLE HAS 48 SLOTS              */
   151 - DCL 1 AC_TBL(0:%MAX_AREAS) STCLASS ALIGNED,
   152 -       2 BASE_DBK UBIN WORD ALIGNED,
   153 -       2 RANGE_LOW SBIN WORD UNAL,
   154 -       2 RANGE_HIGH SBIN WORD UNAL,      /* PAGE RANGE TO READ THIS AREA       */
   155 -       2 NUM_DBPG UBIN HALF UNAL,        /* NUMBER OF DATA PAGES               */
   156 -       2 NAME CHAR(30) UNAL,
   157 -       2 LPP UBIN(10) UNAL,
   158 -       2 PAGE_WRITTEN BIT(1) UNAL,
   159 -       2 * UBIN(6) UNAL,                 /* FOR WHATEVER YOU WANT              */
   160 -       2 LNLP UBIN(10) UNAL,             /*Line numbers on last page           */
   161 -       2 CHECKSUM BIT(1) UNAL,           /* 1 IF AREA IS CHECKSUMED            */
   162 -       2 DCB# UBIN(8) UNAL;              /* STORE DCB # OF THIS AREA           */
   163 -  
   164 - %MEND;
   165 - DCL 1 TYPE SYMREF ALIGNED,              /* SYMDEF IN ZIU$Q2UT                 */
   166 -       2 MSTRINDX(0:4000) SBIN HALF HALIGNED;
