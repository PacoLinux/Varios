************************************************************************00001000
          PLEASE NOTE THAT THE BURROUGHS CORPORATION ASSUMES            00002000
     NO RESPONSIBILITY FOR THE USE OR MAINTENANCE OF THIS PROGRAM       00003000
************************************************************************00004000
% # # # # # # # # # # # # # REWRITTEN 5/71 # # # # # # # # # # # # # # %00005000
BEGIN INTEGER COM;% GENERAL TAPE COPY/COMPARE PGM                       00006000
COMMENT "COM" MUST BE FIRST DECLARED. ALSO DO NOT CHANGE ITS NAME ;     00007000
% COM # OF TAPES WILL BE CREATED, ONE IF COM=0...                       00008000
INTEGER PRT26;%    CONTROLS COPY/COMPARE OPTIONS:                       00009000
              %    0 = COPY WITH BACKWARDS COMPARE                      00010000
              %    1 = COPY, NO COMPARE                                 00011000
              %    2 = COPY WITH FORWARD COMPARE                        00012000
              %    3 = COMPARE ONLY                                     00013000
BOOLEAN PRT27;%DEBUGGING                                                00014000
INTEGER PRT30; % USED TO DS A SINGLE TAPE, BY NR.(1 FOR TW1,2 FOR TW2)  00015000
BOOLEAN TMTOG;%USED TO CHECK FOR 2 CONSECUTIVE TM"S                     00016000
BOOLEAN B6500;%TRUE IFF B6500 LABELED TAPE                              00017000
INTEGER REC;                                                            00018000
COMMENT**************************************************************** 00019000
         THIS PROGRAM COPIES ANY B5500 STANDARD LABELED BINARY TAPE     00020000
OR ANY B6500 USASII LABELED BINARY TAPE. THIS ENCOMPASSES MULTI-FILE    00021000
TAPES SUCH AS LIBRARY TAPES,MAKCAST TAPES,SYMBOL TAPES AS               00022000
WELL AS SINGLE-FILE TAPES(E.G. DATA TAPES,PRINTER-BACKUP TAPES,         00023000
LOAD CONTROL TAPES,ETC.).                                               00024000
IN A SINGLE RUN MULTIPLE COPIES MAY BE CREATED AND COMPARED.            00025000
IF NO "COMMON" CARD IS USED (OR "COMMON=0") ONE TAPE WILL BE CREATED.   00026000
IF "COMMON=N", THEN "N" COPIES WILL BE PRODUCED.                        00027000
THE PROGRAM WILL COPY ALL VALID INFORMATION ON THE TAPE                 00028000
WITHOUT THE USER HAVING TO DESCRIBE THE FILES ON THE TAPE EITHER IN     00029000
NAME OR NUMBER.  THE PHYSICAL REEL NUMBER ON THE OUTPUT TAPES WILL      00030000
BE PRESERVED IN THE CASE OF B5500 TAPES.  SHOULD THE USER WISH TO       00031000
PRODUCE "EXACT" COPIES OF B5500 INPUT TAPES, INCLUDING THE *ORIGINAL*   00032000
REEL NUMBER, IT IS NECESSARY TO ADD "100" TO THE COMMON VALUE. THUS,    00033000
"COMMON=100+N" WILL PRODUCE "N" EXACT DUPLICATES OF THE INPUT TAPE.     00034000
FOR COMPATABILITY, "COMMON=100" AND "COMMON=101" BOTH PRODUCE ONE       00035000
OUTPUT TAPE.  IN THE CASE OF B6500 TAPES, ONLY EXACT COPIES ARE         00036000
PRODUCED: HERE, THERE IS NO DISTINCTION BETWEEN "COMMON=N" AND          00037000
"COMMON=100+N".                                                         00038000
UNLESS PRT26 IS SET TO ONE AFTER BOJ, THE COPIED TAPES WILL             00039000
COMPARED AGAINST THE ORIGINAL.  SHOULD AN ERROR BE                      00040000
DETECTED IN ANY OF THE COPIED TAPES, ONLY THAT DEFECTIVE COPY IS        00041000
PURGED.                                                                 00042000
THE PROGRAM WILL NORMALLY READ THE INPUT AND OUTPUT TAPES BACKWARDS     00043000
DURING THE COMPARE PHASE. HOWEVER,  IF A REWIND FOLLOWED BY A FORWARD   00044000
COMPARE IS DESIRED, PRT26 SHOULD BE SET TO TWO AFTER BOJ.               00045000
         THIS PROGRAM MAY ALSO BE USED TO COMPARE A TAPE WITH           00046000
ONE OR MORE COPIES OF ITSELF.  EXECUTE AS ABOVE(USING A "COMMON"        00047000
CARD IF MORE THAN ONE TAPE IS TO BE COMPARED) WITH THE ADDITION         00048000
THAT BEFORE UL-ING THE INPUT TAPE,ENTER "(MIX)IN26=3" TO INDICATE       00049000
TO THE PROGRAM TO OMIT THE COPY PHASE.  NOTE THAT B5500 TAPES           00050000
DIFFERING ONLY IN THEIR PHYSICAL REEL NUMBER WILL COMPARE OK            00051000
IF "COMMON=N" IS USED FOR A COMPARE RUN.  IF THE PROGRAM IS *NOT* TO    00052000
IGNORE DIFFERENCES IN THE PHYSICAL REEL NUMBERS THEN "COMMON=100+N"     00053000
MUST BE USED DURING THE COMPARE ONLY RUN SO THAT A LITERAL COMPARISION  00054000
WILL BE MADE INCLUDING A COMPARISION OF REEL NUMBERS. FOR B6500 TAPES,  00055000
ONLY A LITERAL COMPARE MAY BE MADE.                                     00056000
PROGRAM RESTRICTIONS:                                                   00057000
1.  A MAXIMUM OF 15 OUTPUT TAPES MAY BE COPIED/COMPARED.                00058000
2. MULTIREEL TAPES MAY BE COPIED ONE REEL AT A TIME(E.G. LIBRARY        00059000
    TAPES). HOWEVER, NO OUTPUT TAPE MAY OVERFLOW A SINGLE REEL.         00060000
3. ONLY BINARY,LABELED TAPES CREATED ON EITHER THE 5500 OR              00061000
    6500 MAY BE COPIED/COMPARED.                                        00062000
4. THE INPUT TAPES SHOULD BE UL-ED. IF HOWEVER THE PRIMARY              00063000
INPUT IS IL-ED, THE PROGRAM WILL ACCEPT IT. THIS DOES NOT APPLY         00064000
TO OTHER INPUT TAPES( IF COMPARING ) WHICH MUST BE UL-ED.               00065000
5.  THE FORMAT OF ANY 5500 INPUT TAPE IS ASSUMED TO BE AS FOLLOWS:      00066000
                             LABEL                                      00067000
                             TAPE MARK                                  00068000
                   FILE CONTAINING ONE OR MORE BLOCKS                   00069000
                             TAPE MARK                                  00070000
                             LABEL                                      00071000
THE ABOVE FORMAT MAY BE REPEATED ANY INTEGRAL NUMBER OF TIMES           00072000
(FOR MULTI-FILE TAPES). ANY DEVIATIONS IN THIS FORMAT WILL              00073000
CAUSE IMMEDIATE PROGRAM TERMINATION(WITH THE EXCEPTION OF               00074000
LOAD CONTROL TAPES WHOSE UNIQUE FORMAT IS SPECIALLY TREATED).           00075000
    IN THE CASE OF 6500 TAPES, THE COPY IS CONTINUED UNTIL THE          00076000
FIRST DOUBLE TAPE-MARK IS ENCOUNTERED. THE ORDER IN WHICH LABELS        00077000
AND FILES OCCUR ON 6500 TAPES IS NOT CHECKED BY THIS PROGRAM.           00078000
    OPERATOR INTERVENTION DURING EITHER THE COPY OR COMPARE PHASES      00079000
IS PERMITTED BY MEANS OF PRT CELL 30(OCTAL). IF AT ANY TIME THE         00080000
CONTENTS OF THIS CELL IS MADE NON-ZERO AND EQUAL TO THE INTERNAL        00081000
NUMBER OF AN OUTPUT TAPE(FOR TW1,"1" IS THE INTERNAL NUMBER,FOR         00082000
TW2,"2" IS THE INTERNAL NUMBER,ETC.) THAT COPY IS IMMEDIATELY PURGED,   00083000
IN THE CASE OF A COPY OR COPY/COMPARE RUN, OR REWOUND,IN THE CASE       00084000
OF A COMPARE ONLY RUN.  AFTER THIS ACTION, PRT30 IS ZEROED              00085000
SO THAT IT MAY BE IMMEDIATELY RE-USED FOR THE SAME FUNCTION.  SEE       00086000
ALSO THE DESCRIPTION OF "OPENMESS" BELOW.                               00087000
    A NUMBER OF OPTIONS ARE AVAILABLE TO THE USER WITH RESPECT TO       00088000
THE TREATMENT OF PHYSICAL REEL NUMBERS.  THEIR SETTINGS MUST BE         00089000
DECIDED UPON WHEN THE PROGRAM IS COMPILED.  THE BOOLEANS WHICH MUST     00090000
BE SET TRUE OR FALSE APPEAR IMMEDIATELY AFTER THE LAST OUTER BLOCK      00091000
DECLARATION.  A BRIEF DESCRIPTION OF EACH OPTION FOLLOWS:               00092000
OPENMESS                                                                00093000
    IF SET TRUE, A MESSAGE SUCH AS                                      00094000
    "#2 ON MTC"                                                         00095000
    IS SPOED WHEN AN OUTPUT TAPE IS ASSIGNED A TAPE UNIT(IN THIS        00096000
    CASE MTC).  THE "2" IS THE NUMBER BY WHICH THE PROGRAM INTERNALLY   00097000
    REFERS TO THIS OUTPUT TAPE.  IF IT IS NECESSARY LATER TO TERMINATE  00098000
    THE COPY(OR COMPARE) OF THIS PARTICULAR TAPE(ON MTC),"(MIX)IN30=2"  00099000
    WOULD BRING THIS ABOUT.                                             00100000
FORMSREQUIRED                                                           00101000
    IF SET TRUE, THE CONSOLE OPERATOR WILL BE REQUIRED TO SPECIFY THE   00102000
    THE TAPE DRIVE FOR EACH OUTPUT TAPE USING THE "(MIX)FM(UNIT         00103000
    MNEMONIC)" MESSAGE.                                                 00104000
REQUIREREELNO                                                           00105000
    IF SET TRUE AND IF THE OUTPUT TAPE TO BE ASSIGNED CONTAINS A ZERO   00106000
    PHYSICAL REEL NUMBER, THE CONSOLE OPERATOR WILL BE REQUIRED TO      00107000
    ENTER ONE.  THE FORM OF THE ACCEPT IS "(MIX)AX(REEL NUMBER)",       00108000
    WHERE THE REEL NUMBER IS BETWEEN 1 AND 5 DIGITS IN LENGTH.          00109000
CHECKFORZEROREELNO                                                      00110000
    IF SET TRUE AND THE CONSOLE OPERATOR IS REQUIRED TO INTERVENE TO    00111000
    ENTER A PHYSICAL REEL NUMBER, THE NUMBER WHICH HE ENTERS MUST NOT   00112000
    BE ZERO--IF IT IS, THE PROGRAM WILL NOT CONTINUE UNTIL A            00113000
    A POSITIVE REEL NUMBER IS ENTERED.                                  00114000
AS THE PROGRAM STANDS, OF THE ABOVE FOUR BOOLEANS, ONLY OPENMESS        00115000
HAS BEEN SET TRUE.                                                      00116000
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * ; 00117000
% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % 00118000
% EXAMPLES:                                                             00119000
%                                                                       00120000
% QM EXECUTE TAPCOPY/UTILITY;END                                        00121000
% THIS PRODUCES 1 COPY OF A LABELED MULTI-FILE TAPE SUCH AS             00122000
% A SYMBOL TAPE OR LIBRARY TAPE(A SINGLE-FILE LABELED TAPE MAY ALSO     00123000
% BE COPIED).                                                           00124000
%                                                                       00125000
% QM EXECUTE TAPCOPY/UTILITY;COMMON=6;END                               00126000
% THIS PRODUCES 6 COPIED TAPES.                                         00127000
%                                                                       00128000
% QM EXECUTE TAPCOPY/UTILITY;COMMON=2;END                               00129000
% (MIX)IN26=3                                                           00130000
% THIS COMPARES TWO TAPES AGAINST THE ORIGINAL.                         00131000
%                                                                       00132000
% QM EXECUTE TAPCOPY/UTILITY;END                                        00133000
% (MIX)IN26=1                                                           00134000
% THIS PRODUCES 1 COPIED TAPE WITHOUT COMPARING IT.                     00135000
%                                                                       00136000
% QM EXECUTE TAPCOPY/UTILITY;END                                        00137000
% (MIX)IN26=2                                                           00138000
% THIS PRODUCES 1 COPIED TAPE BUT COMPARES IT IN A FORWARD DIRECTION    00139000
%                                                                       00140000
% QM EXECUTE TAPCOPY/UTILITY;COMMON=102;END                             00141000
% THIS PRODUCES 2 EXACT COPIES(INCLUDING REEL #) OF THE INPUT TAPE      00142000
%                                                                       00143000
% QM EXECUTE TAPCOPY/UTILITY;COMMON=100;END                             00144000
% (MIX)IN26=3                                                           00145000
% THIS COMPARES ONE TAPE(INCLUDING THE REEL #) AGAINST THE ORIGINAL     00146000
%                                                                       00147000
%                                                                       00148000
% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % 00149000
FILE OUT %UNLABELED OUTPUT TAPES                                        00150000
TW1 9(1,1023),                                                          00151000
TW2 9(1,1023),                                                          00152000
TW3 9(1,1023),                                                          00153000
TW4 9(1,1023),                                                          00154000
TW5 9(1,1023),                                                          00155000
TW6 9(1,1023),                                                          00156000
TW7 9(1,1023),                                                          00157000
TW8 9(1,1023),                                                          00158000
TW9 9(1,1023),                                                          00159000
TW10 9(1,1023),                                                         00160000
TW11 9(1,1023),                                                         00161000
TW12 9(1,1023),                                                         00162000
TW13 9(1,1023),                                                         00163000
TW14 9(1,1023),                                                         00164000
TW15 9(1,1023);                                                         00165000
SWITCH FILE TW~    TW1,TW2,TW3,TW4,TW5,TW6,TW7,TW8,TW9,TW10,TW11,       00166000
TW12,TW13,TW14,TW15;                                                    00167000
FILE IN ULMTX 9(1,1023);%INPUT TREATED AS UNLABELED                     00168000
DEFINE T=ULMTX#;                                                        00169000
COMMENT DO NOT CHANGE ANY OF THE PRECEDING FILE DECLARATINS;            00170000
FILE P 1(1,15);                                                         00171000
BOOLEAN ARRAY TAPEGOOD[0:14];                                           00172000
ARRAY REELOC[0:14];                                                     00173000
ARRAY REELS[0:14];                                                      00174000
ARRAY U[0:14];                                                          00175000
SAVE ARRAY SPU[0:14];% CONTAINS MESSAGE TO BE PASSED TO MCP             00176000
DEFINE SPO=SPU[*]#;                                                     00177000
ARRAY LD[0:1];                                                          00178000
INTEGER I,N;                                                            00179000
BOOLEAN FORMSREQUIRED;                                                  00180000
BOOLEAN OPENMESS;                                                       00181000
BOOLEAN REQUIREREELNO;                                                  00182000
BOOLEAN CHECKFORZEROREELNO;                                             00183000
BOOLEAN OMITREELNO;                                                     00184000
BOOLEAN LOADCONTROL;                                                    00185000
BOOLEAN PBACKUP;                                                        00186000
BOOLEAN PAREXIT;%TRUE IFF HIT PAR TRYING TO READ HDR LABEL              00187000
BOOLEAN DSTOG,PARTOG,EOTOG;                                             00188000
BOOLEAN READPARERR,ENDOFILERR;                                          00189000
DEFINE QMORPD=IF PAREXIT THEN 12 ELSE 26 #;                             00190000
DEFINE FORLOOP= FOR I~0 STEP 1 UNTIL COM DO #;                          00191000
LABEL EOPROG;                                                           00192000
LABEL COMPAREPHASE;%                                                    00193000
LABEL TOTALBOMBOUT;                                                     00194000
BOOLEAN WRITING;                                                        00195000
BOOLEAN BACKCOMP;                                                       00196000
BOOLEAN COMPAREONLY;                                                    00197000
FORMAT CREATEMESS("*****",I2," TAPES CREATED",A1,                       00198000
                  " COMPARE PHASE OMITTED...~"),                        00199000
EROS("#ENTER REEL NUMBER FOR ",A3,"~"),                                 00200000
OPEN("# ",I2," ON ",A3,"~"),                                            00201000
NULLCREATE("--NO TAPES REQUESTED COULD BE CREATED...SORRY~"),           00202000
NULLCOMPARE("--NO TAPES COPIED COMPARED SUCCESSFULLY...SORRY~"),        00203000
NULLCOMPARECOMPARE("--NO TAPES COMPARED SUCCESSFULLY...SORRY~"),        00204000
COPYFIN("***** COPY PHASE OVER",A1," COMPARE COMING UP...~"),           00205000
READPARITY("--READ PARITY ON INPUT TAPE...CAN NOT CONTINUE~"),          00206000
EOFERR("--UNEXPECTED TAPE-MARK ON INPUT TAPE...CAN NOT CONTINUE~"),     00207000
       FTEOF("*****EOF MARK",X5,"REC =",I7,X5,"N = ",I7),               00208000
       FTEOT("*****EOT MARK",X5,"REC =",I7,X5,"N = ",I7),               00209000
STATMESSCOMPOK("***** ALL TAPES(",I2,") COMPARED OK",A1,"~"),           00210000
 STATMESSCOMP("*****",I2," TAPES COMPARED OK",                          00211000
              A1,X1,I2," DIDN",""","T~"),                               00212000
STATMESSOK("***** ALL TAPES(",I2,") COPIED COMPARED OK",A1,"~"),        00213000
STATMESS("*****",I2," COPIED TAPES COMPARED OK",                        00214000
         A1,X1,I2,"(",I2,") DIDN",""","T~");                            00215000
STREAM PROCEDURE PUTGM(A); BEGIN DI~A;15(DI~DI+8);DI~DI-1;DS~LIT"~"END; 00216000
%                                                                       00217000
REAL STREAM PROCEDURE ADDR(L); BEGIN SI~L; ADDR~ SI END ADDR;           00218000
%                                                                       00219000
PROCEDURE COMMUNICATE(N); VALUE N; INTEGER N;                           00220000
BEGIN                                                                   00221000
STREAM PROCEDURE P(I); VALUE I; BEGIN CI~CI+I;DS~10LIT"10Y>Y6894("END;  00222000
P(1); END COMMUNICATE;                                                  00223000
%                                                                       00224000
PROCEDURE SPOUTIT(A); ARRAY A[0];                                       00225000
BEGIN INTEGER I; I~ADDR(A)-1; COMMUNICATE(15) END SPOUTIT;              00226000
DEFINE SPOUT(SPOUT1)=BEGIN PUTGM(SPOUT1);SPOUTIT(SPOUT1) END#;          00227000
%                                                                       00228000
PROCEDURE AXCEPT(A); ARRAY A[0];                                        00229000
BEGIN INTEGER I; I~ADDR(A)-2; COMMUNICATE(16) END AXCEPT;               00230000
DEFINE ACCEPT(ACCEPT1)=BEGIN PUTGM(ACCEPT1); AXCEPT(ACCEPT1) END#;      00231000
%                                                                       00232000
PROCEDURE DSIT(A); ARRAY A[0];                                          00233000
BEGIN INTEGER I; I~ADDR(A); COMMUNICATE(34) END DSIT;                   00234000
DEFINE DSJOB(DSJOB1)=BEGIN PUTGM(DSJOB1);DSIT(DSJOB1) END#;             00235000
%                                                                       00236000
 STREAM PROCEDURE WDCNT(T,N);BEGIN SI~T;DI~N;SI~SI-8;DS~WDS END;        00237000
STREAM PROCEDURE WRITETM(F,FBUF);%REVISED 12/26/70                      00238000
BEGIN                                                                   00239000
LABEL WAIT;LOCAL L;                                                     00240000
SI~F;DI~LOC L;DS~WDS;% SAVE ORIG DESC                                   00241000
DI:=F;SKIP 21 DB;                                                       00242000
DS:=4 RESET;%21=ALPHA,22=FORWARD,23=W.C.,24=WRITE                       00243000
DI:=FBUF;                                                               00244000
DS:=2LIT"}~";% TO PUT TM IN BUF                                         00245000
RELEASE(F);                                                             00246000
WAIT:SI~F;SKIP 2SB;IF SB THEN ELSE GO WAIT;%LOOP ON PBIT                00247000
SI~LOC L;DI~F;DS~WDS;%RESTORE DESC                                      00248000
END OF WRITETM;                                                         00249000
%                                                                       00250000
REAL STREAM PROCEDURE UNIT(F);                                          00251000
BEGIN LOCAL T2,T1;                                                      00252000
SI~F;DI~LOC T1;DS~WDS; SI~T1;                                           00253000
SI~F;SKIP 3 SB; DI~LOC UNIT; DI~DI+7;SKIP 2 DB;                         00254000
4(IF SB THEN DS~SET ELSE SKIP DB; SKIP SB);                             00255000
DI~LOC T1; DS~16LIT"ABCDEFHJKLMNPRST";                                  00256000
SI~LOC T1; DI~LOC UNIT; DI~DI+5; DS~2LIT"MT";SI~SI+UNIT; DS~CHR;        00257000
END UNIT;                                                               00258000
%                                                                       00259000
STREAM PROCEDURE GETREELNO(T,R);                                        00260000
BEGIN SI~T;SI~SI+53; DI~R;DS~5OCT END GETREELNO;                        00261000
%                                                                       00262000
STREAM PROCEDURE INSERTREELNO(R,T); VALUE R;                            00263000
BEGIN SI~LOC R; DI~T; DI~DI+53; DS~5DEC END INSERTREELNO;               00264000
%                                                                       00265000
BOOLEAN STREAM PROCEDURE NOLABEL(A);                                    00266000
BEGIN LOCAL L;                                                          00267000
    DI~LOC L;DS~8LIT" LABEL  ";                                         00268000
    SI~A;DI~LOC L;IF 8 SC NEQ DC THEN TALLY~1;                          00269000
    NOLABEL~TALLY;                                                      00270000
END NOLABEL;                                                            00271000
%                                                                       00272000
BOOLEAN STREAM PROCEDURE ENDCONTROL(T,LD);                              00273000
BEGIN LABEL XIT,L1,L2;                                                  00274000
SI:=T;                                                                  00275000
IF SC LEQ "9" THEN GO XIT ELSE                                          00276000
BEGIN SI:=SI+1;                                                         00277000
63(IF SC=" " THEN SI:=SI+1 ELSE JUMP OUT TO L1);                        00278000
GO XIT;                                                                 00279000
L1:DI:=LD;                                                              00280000
IF 3 SC NEQ DC THEN GO XIT ELSE                                         00281000
BEGIN                                                                   00282000
63(IF SC=" " THEN SI:=SI+1 ELSE JUMP OUT TO L2);                        00283000
GO XIT;                                                                 00284000
L2:IF 7SC NEQ DC THEN GO XIT ELSE TALLY:=1;                             00285000
END;                                                                    00286000
END;                                                                    00287000
XIT:ENDCONTROL:=TALLY;                                                  00288000
END OF ENDCONTROL;                                                      00289000
%                                                                       00290000
PROCEDURE READTHELABEL;                                                 00291000
BEGIN                                                                   00292000
ALPHA W;                                                                00293000
LABEL S;                                                                00294000
LABEL BAD;                                                              00295000
LABEL TMNOTLABEL,PARONLABEL;                                            00296000
LABEL REREAD;                                                           00297000
BOOLEAN SECONDTRY;                                                      00298000
FORMAT NOGO("--NOT A LABELED BINARY 5500 OR 6500 TAPE...NO GO ~"),      00299000
BADTM("--FIRST RECORD ON TAPE IS A TAPE-MARK, NOT A LABEL...NO GO ~"),  00300000
BADLABEL("--PARITY ERROR ATTEMPTING TO READ THE LABEL...NO GO ~"),      00301000
USEUL("-NEXT TIME USE UL NOT IL-~"),                                    00302000
TOCOMP("# ",I2,X1,A5," TAPE",A1," TO BE COMPARED~"),                    00303000
TOCOME("# ",I2,X1,A5," TAPE",A1," TO BE CREATED~");                     00304000
%                                                                       00305000
STREAM PROCEDURE SCANLABEL(A,W,LD,PB);                                  00306000
BEGIN                                                                   00307000
LOCAL L;LABEL XIT;                                                      00308000
DI:=LOC L;DS:=8LIT" LABEL  ";                                           00309000
SI:=A;DI:=LOC L; IF 8SC=DC THEN                                         00310000
BEGIN                                                                   00311000
DI:=W; DS:=8LIT"000B5500";                                              00312000
DI:=LOC L; DS:=8LIT"0CONTROL"; DI:=LOC L;                               00313000
IF 8SC=DC THEN                                                          00314000
BEGIN DI:=LOC L; DS:=8LIT"0DECK   ";                                    00315000
    DI:=LOC L; IF 8SC=DC THEN BEGIN                                     00316000
    DI~LD; DS~8LIT"00000001"; GO XIT END;                               00317000
END;                                                                    00318000
SI~A; SI~SI+8;                                                          00319000
DI~LOC L;DS~8LIT"0PBTMCP ";DI~LOC L; IF 8SC=DC THEN                     00320000
BEGIN                                                                   00321000
    DI~LOC L; DS~8LIT"0BACK-UP";DI~LOC L;                               00322000
    IF 8SC=DC THEN BEGIN DI~PB;DS~8LIT"00000001"; GO XIT END;           00323000
END;                                                                    00324000
GO XIT;                                                                 00325000
END;                                                                    00326000
DI:=LOC L;DS:=4LIT"VOL1";                                               00327000
SI:=A;DI:=LOC L;IF 4SC=DC THEN                                          00328000
BEGIN                                                                   00329000
SI:=A;SI:=SI+28;                                                        00330000
DI:=LOC L;DS:=2LIT"65";DI:=LOC L;IF 2SC=DC THEN                         00331000
BEGIN                                                                   00332000
DI:=W;DS:=8LIT"000B6500"; GO XIT;                                       00333000
END;                                                                    00334000
END;                                                                    00335000
DI:=W;DS:=8LIT"000XXXXX";                                               00336000
XIT:%                                                                   00337000
END OF SCANLABEL;                                                       00338000
%                                                                       00339000
STREAM PROCEDURE UNLABEL(T);                                            00340000
BEGIN SI~T;SI~SI-24;DI~LOC T;DS~WDS;                                    00341000
    DI~T;4(DI~DI+8); SKIP 2 DB; DS~SET;                                 00342000
END UNLABEL;                                                            00343000
%                                                                       00344000
REREAD:%                                                                00345000
READ(T[NO])[TMNOTLABEL:PARONLABEL];                                     00346000
SCANLABEL(T(0),W,LOADCONTROL,PBACKUP);                                  00347000
READ(T);                                                                00348000
IF W="B6500" THEN B6500:=TRUE ELSE                                      00349000
IF W NEQ "B5500" THEN                                                   00350000
BEGIN                                                                   00351000
         IF NOT SECONDTRY THEN                                          00352000
         BEGIN                                                          00353000
              UNLABEL(T);                                               00354000
              REWIND(T);                                                00355000
              SECONDTRY~TRUE;                                           00356000
              GO REREAD;                                                00357000
         END;                                                           00358000
    BAD: WRITE(SPO,NOGO);                                               00359000
         IF FALSE THEN TMNOTLABEL:WRITE(SPO,BADTM);                     00360000
         IF FALSE THEN PARONLABEL:WRITE(SPO,BADLABEL);                  00361000
         SPOUT(SPU);                                                    00362000
         GO EOPROG;                                                     00363000
END;                                                                    00364000
IF LOADCONTROL THEN FILL LD[*] WITH "ENDCONTR","OL      ";              00365000
COMPAREONLY:=PRT26=3;                                                   00366000
IF COM GEQ 100 THEN BEGIN COM:=COM MOD 100; OMITREELNO:=TRUE END;       00367000
OMITREELNO:=IF NOT COMPAREONLY THEN OMITREELNO ELSE NOT OMITREELNO;     00368000
COMMENT UNLESS OTHERWISE REQUESTED, DISREGARD REEL # DURING COMPAREONLY;00369000
IF COM GTR 0 THEN COM:=COM-1;                                           00370000
IF COM GTR 14 THEN COM~14;                                              00371000
FORLOOP TAPEGOOD[I]:=TRUE;%INNOCENT UNTIL PROVEN GUILTY                 00372000
IF SECONDTRY THEN                                                       00373000
BEGIN                                                                   00374000
WRITE(SPO,USEUL);                                                       00375000
SPOUT(SPU);                                                             00376000
END;                                                                    00377000
IF COMPAREONLY THEN WRITE(SPO,TOCOMP,COM+1,W,IF COM=0 THEN" "ELSE"S")   00378000
ELSE WRITE(SPO,TOCOME,COM+1,W,IF COM=0 THEN" " ELSE "S");               00379000
SPOUT(SPU);                                                             00380000
SPACE(T,-1);                                                            00381000
SPACE(T,-1)[S];                                                         00382000
S:                                                                      00383000
END OF READTHELABEL;                                                    00384000
%                                                                       00385000
PROCEDURE KILLER;%CALLED AFTER A BAD COMPARE OR UNEXPECTED EVENT        00386000
BEGIN                                                                   00387000
INTEGER J;                                                              00388000
LABEL XIT;                                                              00389000
FORMAT DEBUG("--BADCOMPARE ON ",A3,", AUTO-PURGE...~"),                 00390000
DSONCOPY("--OPERATOR DISCONTINUED COPY OF TAPE ON ",A3,                 00391000
         ",AUTO-PURGE...~"),                                            00392000
DSONCOMP("--OPERATOR DISCONTINUED COMPARE OF TAPE ON ",A3,"~"),         00393000
PARERR("--IRRECOVERABLE WRITE PARITY ON ",A3,", AUTO-PURGE...~"),       00394000
EOTERR("--OUTPUT TAPE ON ",A3," IS TOO SHORT, AUTO-PURGE...~"),         00395000
DEBUGCOMPABEND("--BADCOMPARE ON TAPE #",I2,"~"),                        00396000
DEBUGCOMP("--BADCOMPARE ON ",A3,"~");                                   00397000
TAPEGOOD[I]:=FALSE;%KEEP TRACK OF BAD COPIES                            00398000
IF WRITING THEN                                                         00399000
BEGIN                                                                   00400000
IF DSTOG THEN WRITE(SPO,DSONCOPY,U[I]) ELSE                             00401000
IF PARTOG THEN WRITE(SPO,PARERR,U[I])                                   00402000
ELSE % END OF TAPE                                                      00403000
WRITE(SPO,EOTERR,U[I]);                                                 00404000
PARTOG:=EOTOG:=DSTOG:=FALSE;                                            00405000
PRT30:=0;                                                               00406000
END                                                                     00407000
ELSE                                                                    00408000
IF COMPAREONLY THEN                                                     00409000
IF U[I] NEQ 0 THEN WRITE(SPO,DEBUGCOMP,U[I]) ELSE                       00410000
                   WRITE(SPO,DEBUGCOMPABEND,I+1) ELSE                   00411000
IF DSTOG THEN WRITE(SPO,DSONCOMP,U[I]) ELSE                             00412000
WRITE(SPO,DEBUG,U[I]);                                                  00413000
SPOUT(SPU);                                                             00414000
IF COMPAREONLY THEN CLOSE(TW[I],RELEASE)  ELSE                          00415000
CLOSE(TW[I],PURGE);                                                     00416000
FOR J :=0 STEP 1 UNTIL COM DO IF TAPEGOOD[J] THEN GO XIT;               00417000
%ITS ALL  OVER                                                          00418000
GO TO TOTALBOMBOUT;                                                     00419000
XIT:END;                                                                00420000
PROCEDURE CHECKFORDS;                                                   00421000
BEGIN                                                                   00422000
    IF (I:=PRT30) NEQ 0 THEN                                            00423000
    IF (I:=I-1) LEQ COM THEN                                            00424000
    IF TAPEGOOD[I] THEN                                                 00425000
    BEGIN DSTOG:=TRUE; KILLER END;                                      00426000
    PRT30:=0;                                                           00427000
END CHECKFORDS;                                                         00428000
%                                                                       00429000
STREAM PROCEDURE GETREELOC(TW,A);                                       00430000
BEGIN LOCAL L; SI:=TW; SI:=SI-24; DI:=LOC TW; DS:=WDS;                  00431000
    SI:=TW; 13(SI:=SI+8);                                               00432000
    L:=SI; SI:=LOC L; DI:=A; DS:=WDS;                                   00433000
END GETREELOC;                                                          00434000
%                                                                       00435000
INTEGER STREAM PROCEDURE CURRENTREELNR(A); VALUE A;                     00436000
BEGIN SI:=A;DI:=LOC CURRENTREELNR; DS:=WDS END;                         00437000
%                                                                       00438000
PROCEDURE REPOSITION;                                                   00439000
BEGIN                                                                   00440000
    LABEL E1,E2,E3,P1,P3,R;                                             00441000
    INTEGER J;                                                          00442000
    N:=REAL(B6500);                                                     00443000
    IF B6500 THEN                                                       00444000
    FOR J:=0 STEP 1 UNTIL N DO                                          00445000
    BEGIN                                                               00446000
         SPACE(T,-1)[E1:P1];                                            00447000
         IF FALSE THEN E1:CLOSE(T,*);                                   00448000
    P1:                                                                 00449000
    END                                                                 00450000
    ELSE                                                                00451000
    BEGIN                                                               00452000
       R:READ REVERSE(T[NO])[E3:P3];                                    00453000
         IF FALSE THEN E3:BEGIN CLOSE(T,*); GO R END;                   00454000
         IF LOADCONTROL THEN ELSE IF NOLABEL(T(0)) THEN                 00455000
      P3:BEGIN READ REVERSE(T); GO R END;                               00456000
    END;                                                                00457000
    N:=N+REAL(B6500);                                                   00458000
    FORLOOP IF TAPEGOOD[I] THEN                                         00459000
    FOR J:=0 STEP 1 UNTIL N DO                                          00460000
    BEGIN                                                               00461000
         SPACE(TW[I],-1)[E2];                                           00462000
         IF FALSE THEN E2:CLOSE(TW[I],*);                               00463000
    END;                                                                00464000
END OF REPOSITIONING TAPES;                                             00465000
%*******************END OUTER BLOCK DECLARATIONS*********************%  00466000
COMMENT SET FIXED PROGRAM OPTIONS HERE;                                 00467000
OPENMESS~TRUE;                                                          00468000
FORMSREQUIRED~FALSE;                                                    00469000
REQUIREREELNO~FALSE;                                                    00470000
CHECKFORZEROREELNO:=FALSE;                                              00471000
COMMENT PROGRAM BEGINS;                                                 00472000
READTHELABEL;                                                           00473000
IF COMPAREONLY THEN GO TO COMPAREPHASE;                                 00474000
                   BEGIN %*****************COPY BLOCK*****************% 00475000
LABEL START;                                                            00476000
ARRAY A[0:1022];                                                        00477000
DEFINE LAB1=A#,LAB2=A#;                                                 00478000
LABEL RD,EOF,EOT,MAIN,PAR;                                              00479000
LABEL EOTW1,EOTW2,EOTW3,PARW1,PARW2,PARW3;                              00480000
LABEL READPAR1,READPAR2,EOFERR2;                                        00481000
%                                                                       00482000
PROCEDURE HANDLEOUTPUTREELINFO;                                         00483000
BEGIN LABEL RE,S,X,XIT; REAL R;                                         00484000
STREAM PROCEDURE SETFORMBIT(I,FPB); VALUE FPB,I;                        00485000
BEGIN SI~FPB;DI~LOC FPB;DS~WDS;DI~FPB;I(DI~DI+40);DI~DI+31;DS~SET END;  00486000
%                                                                       00487000
STREAM PROCEDURE FIXFIB(TW);                                            00488000
BEGIN SI~TW;SI~SI-24;DI~LOC TW;DS~WDS;                                  00489000
DI~TW;5(DI~DI+8);SKIP 43 DB;DS~SET;                                     00490000
END FIXFIB;                                                             00491000
LABEL L;                                                                00492000
%                                                                       00493000
IF FORMSREQUIRED THEN R~ADDR(COM)-18;%GET FPB LOCATION                  00494000
FORLOOP IF TAPEGOOD[I] THEN                                             00495000
BEGIN                                                                   00496000
    IF FORMSREQUIRED THEN SETFORMBIT(I,R);                              00497000
    GETREELOC(TW[I],REELOC[I]);% ASSIGN TAPE UNIT                       00498000
    U[I]~UNIT(TW[I]); % OBTAIN HARDWARE UNIT                            00499000
    IF B6500 OR OMITREELNO THEN GO XIT;% 6500 REEL # NOT HANDLED        00500000
    FIXFIB(TW[I]);                                                      00501000
    REWIND(TW[I]);                                                      00502000
    DO SPACE(TW[I],-1)[L] UNTIL FALSE;L:CLOSE(TW[I],*);                 00503000
    READ(TW[I][NO]);                                                    00504000
    GETREELNO(TW[I](0),REELS[I]); % EXTRACT PHYSICAL REEL #             00505000
    IF NOT REQUIREREELNO                                                00506000
    OR (CHECKFORZEROREELNO AND REELS[I] GTR 0) THEN                     00507000
    BEGIN % REPOSITION TO BOT                                           00508000
      RE:READ(TW[I]);                                                   00509000
         SPACE(TW[I],-1);                                               00510000
         SPACE(TW[I],-1)[S]; S:%                                        00511000
    END ELSE                                                            00512000
    BEGIN % OBTAIN REEL # FROM OPERATOR                                 00513000
    DO X:BEGIN                                                          00514000
         WRITE(SPO,EROS,U[I]);                                          00515000
         ACCEPT(SPU);                                                   00516000
         READ(SPO,//,REELS[I])[X:X];                                    00517000
         END UNTIL (R~REELS[I]) GEQ REAL(CHECKFORZEROREELNO) AND        00518000
              R LSS 100000;                                             00519000
         GO RE;                                                         00520000
    END;                                                                00521000
    REELS[I]:=REELS[I] DIV 1;                                           00522000
    XIT:%                                                               00523000
    IF OPENMESS THEN BEGIN WRITE(SPO,OPEN,I+1,U[I]); SPOUT(SPU) END;    00524000
END LOOP;                                                               00525000
END HANDLEOUTPUTREELINFO;                                               00526000
%                                                                       00527000
%                                                                       00528000
PROCEDURE WRITETAPE(B); VALUE B; BOOLEAN B;                             00529000
BEGIN LABEL E,P;                                                        00530000
WDCNT(T(0),N);                                                          00531000
READ(T);                                                                00532000
FORLOOP IF TAPEGOOD[I] THEN                                             00533000
BEGIN                                                                   00534000
    IF B AND NOT OMITREELNO THEN INSERTREELNO(REELS[I],A[*]);           00535000
    WRITE(TW[I],N,A[*])[E:P];                                           00536000
    IF NOT B THEN IF CURRENTREELNR(REELOC[I]).[28:10] >1 THEN GO E;     00537000
    IF FALSE THEN E:BEGIN EOTOG~TRUE; KILLER END;                       00538000
    IF FALSE THEN P:BEGIN PARTOG~TRUE; KILLER END;                      00539000
END;                                                                    00540000
END WRITETAPE;                                                          00541000
%                                                                       00542000
%*********************START COPY CODE********************************%  00543000
START:%                                                                 00544000
%                                                                       00545000
TMTOG~PAREXIT~FALSE;                                                    00546000
WRITING:=TRUE;                                                          00547000
BACKCOMP:=PRT26=0;                                                      00548000
HANDLEOUTPUTREELINFO;                                                   00549000
IF B6500 OR LOADCONTROL THEN                                            00550000
GO RD;                                                                  00551000
MAIN:%                                                                  00552000
READ(T[NO],1023,LAB1[*])[EOT:PAR];                                      00553000
IF FALSE THEN PAR:BEGIN PAREXIT:=TRUE; READ(T); GO EOT END;             00554000
COMMENT***ASSUME THIS IS NOT A LABEL.SINCE WE CAN"T BE CERTAIN,         00555000
SIGNAL THE USER IN MESSAGE AT REWIND TIME;                              00556000
IF NOLABEL(LAB1[*]) THEN BEGIN READ(T); GO EOT END;                     00557000
COMMENT***ASSUME WHAT WAS READ WAS GARBAGE;                             00558000
WRITETAPE(TRUE);                                                        00559000
FORLOOP IF TAPEGOOD[I] THEN CLOSE(TW[I],*);% WRITE TAPE MARK            00560000
CLOSE(T,*);%SKIP OVER TAPE MARK AFTER LABEL OR BEFORE DIRECTORY         00561000
%                                                                       00562000
RD:%                                                                    00563000
CHECKFORDS;                                                             00564000
READ(T[NO],1023,A[*])[EOF:READPAR1];                                    00565000
IF FALSE THEN READPAR1:BEGIN READPARERR~TRUE; GO TOTALBOMBOUT END;      00566000
REC:=REC+1;                                                             00567000
TMTOG:=FALSE;                                                           00568000
WRITETAPE(FALSE);                                                       00569000
IF LOADCONTROL THEN IF ENDCONTROL(A[*],LD[*]) THEN GO EOT;              00570000
GO RD;                                                                  00571000
%                                                                       00572000
EOF:%GET HERE  AFTER HIT TAPE MARK BEFORE AN ENDING LABEL               00573000
%                                                                       00574000
IF B6500 THEN                                                           00575000
IF TMTOG THEN GO EOT;%SECOND TM                                         00576000
CLOSE(T,*);%POSITION BEYOND TAPE MARK                                   00577000
FORLOOP IF TAPEGOOD[I] THEN CLOSE(TW[I],*);%WRITE TAPE MARK             00578000
TMTOG:=TRUE;                                                            00579000
IF PRT27 THEN WRITE(P,FTEOF,REC,N);                                     00580000
REC:=0;                                                                 00581000
IF B6500 OR LOADCONTROL THEN GO RD;                                     00582000
READ(T[NO],1023,LAB2[*])[EOFERR2:READPAR2];                             00583000
IF FALSE THEN EOFERR2:BEGIN ENDOFILERR~TRUE; GO TOTALBOMBOUT END;       00584000
IF FALSE THEN READPAR2:BEGIN READPARERR~TRUE; GO TOTALBOMBOUT END;      00585000
WRITETAPE(TRUE);                                                        00586000
GO TO MAIN;%TO PROCESS ANOTHER FILE ON THE INPUT TAPE                   00587000
%                                                                       00588000
EOT:%EXPECTED A NEW HEADER LABEL BUT HIT THE FINAL TAPE MARK            00589000
%                                                                       00590000
IF PRT27 THEN WRITE(P,FTEOT,REC,N);                                     00591000
REC:=0;                                                                 00592000
FORLOOP IF TAPEGOOD[I] THEN                                             00593000
IF  B6500 THEN WRITETM(TW[I],TW[I](0)) ELSE CLOSE(TW[I],*);%WRITE TM    00594000
IF PRT26=1 THEN BEGIN                                                   00595000
CLOSE(T,RELEASE);                                                       00596000
FORLOOP IF TAPEGOOD[I] THEN LOCK(TW[I],SAVE);% RWL ALL OUTPUT TAPES     00597000
WRITE(SPO,CREATEMESS,COM+1,QMORPD);                                     00598000
SPOUT(SPU);                                                             00599000
GO TO EOPROG END;                                                       00600000
%HAVING GOTTEN THIS FAR WE PROCEED TO COMPARE NEW TAPES WITH ORIGINAL   00601000
IF BACKCOMP THEN REPOSITION ELSE                                        00602000
BEGIN                                                                   00603000
REWIND(T);                                                              00604000
FORLOOP IF TAPEGOOD[I] THEN REWIND(TW[I]);                              00605000
WRITE(SPO,COPYFIN,QMORPD);                                              00606000
SPOUT(SPU);                                                             00607000
END;                                                                    00608000
END COPY BLOCK;%******************************************************% 00609000
COMPAREPHASE:% % % % % % % % % % % % % % % % % % % % % % % % % % % % %  00610000
                     BEGIN %**************COMPARE BLOCK**************%  00611000
LABEL EOTCOMP,RDCOMP,MAINCOMP,EOFCOMP;                                  00612000
LABEL LASTM,KILL4;                                                      00613000
LABEL PARCOMP;                                                          00614000
INTEGER M,N1,N2,BADCOUNT;                                               00615000
%                                                                       00616000
PROCEDURE MAKECOMPARE(B); VALUE B; BOOLEAN B;                           00617000
BEGIN LABEL ERR;                                                        00618000
BOOLEAN STREAM PROCEDURE BADCOMPARE(A,B,N1,N2);VALUE N1,N2;             00619000
%   N1= N MOD 63,   N2= N DIV 63, WHERE N=# OF WORDS IN A BLOCK         00620000
BEGIN                                                                   00621000
LABEL XIT;                                                              00622000
SI:=A;DI:=B;                                                            00623000
N2(63(IF 8 SC NEQ DC THEN BEGIN TALLY:=1;JUMP OUT 2 TO XIT END));       00624000
N1(IF 8 SC NEQ DC THEN BEGIN TALLY:=1;JUMP OUT END);                    00625000
XIT:BADCOMPARE:=TALLY;                                                  00626000
END OF BADCOMPARE;                                                      00627000
%                                                                       00628000
    WDCNT(T(0),N);                                                      00629000
    FORLOOP IF TAPEGOOD[I] THEN                                         00630000
    BEGIN                                                               00631000
         IF BACKCOMP THEN                                               00632000
         READ REVERSE(TW[I][NO])[ERR:ERR] ELSE                          00633000
         READ(TW[I][NO])[ERR:ERR];                                      00634000
         WDCNT(TW[I](0),M);                                             00635000
         IF B AND NOT OMITREELNO THEN                                   00636000
         INSERTREELNO(REELS[I],T(0));                                   00637000
         IF N NEQ M THEN GO ERR ELSE                                    00638000
         IF BADCOMPARE(T(0),TW[I](0),N1~N MOD 63,N2~N DIV 63)           00639000
         THEN ERR:KILLER;                                               00640000
         IF TAPEGOOD[I] THEN                                            00641000
         IF BACKCOMP THEN READ REVERSE(TW[I]) ELSE READ(TW[I]);         00642000
    END;                                                                00643000
END MAKECOMPARE;                                                        00644000
%                                                                       00645000
PROCEDURE HANDLEINPUTREELINFO;                                          00646000
BEGIN LABEL X;                                                          00647000
FORLOOP IF TAPEGOOD[I] THEN                                             00648000
BEGIN                                                                   00649000
READ(TW[I][NO])[X:X];                                                   00650000
    IF FALSE THEN X:KILLER;                                             00651000
    IF TAPEGOOD[I] THEN                                                 00652000
    BEGIN                                                               00653000
         U[I]~UNIT(TW[I]);                                              00654000
         IF OPENMESS THEN WRITE(SPO,OPEN,I+1,U[I]);                     00655000
         SPOUT(SPU);                                                    00656000
    END;                                                                00657000
    END;                                                                00658000
END HANDLEINPUTREELINFO;                                                00659000
%                                                                       00660000
 %*****************START COMPARE CODE********************************   00661000
%                                                                       00662000
TMTOG~PAREXIT~WRITING~FALSE;                                            00663000
IF COMPAREONLY THEN HANDLEINPUTREELINFO;                                00664000
IF B6500 OR LOADCONTROL THEN                                            00665000
GO RDCOMP;                                                              00666000
MAINCOMP:                                                               00667000
IF BACKCOMP THEN READ REVERSE(T[NO])[EOTCOMP:PARCOMP] ELSE              00668000
READ(T[NO])[EOTCOMP:PARCOMP];                                           00669000
IF FALSE THEN PARCOMP:BEGIN PAREXIT~TRUE;GO EOTCOMP END;                00670000
IF NOLABEL(T(0)) THEN GO EOTCOMP;                                       00671000
MAKECOMPARE(TRUE);                                                      00672000
IF BACKCOMP THEN READ REVERSE(T) ELSE READ(T);                          00673000
% HEADER LABELS COMPARE                                                 00674000
CLOSE(T,*);                                                             00675000
FORLOOP IF TAPEGOOD[I] THEN CLOSE(TW[I],*);                             00676000
% SKIP OVER TM                                                          00677000
RDCOMP:                                                                 00678000
%                                                                       00679000
CHECKFORDS;                                                             00680000
IF BACKCOMP THEN READ REVERSE(T[NO])[EOFCOMP] ELSE                      00681000
READ(T[NO])[EOFCOMP];                                                   00682000
REC:=REC+1;                                                             00683000
TMTOG:=FALSE;                                                           00684000
% CHECK FILE A BLOCK AT A TIME                                          00685000
MAKECOMPARE(FALSE);                                                     00686000
IF BACKCOMP THEN IF NOT LOADCONTROL THEN READ REVERSE(T) ELSE           00687000
IF NOLABEL(T(0)) THEN READ REVERSE(T) ELSE GO EOTCOMP ELSE              00688000
BEGIN                                                                   00689000
IF LOADCONTROL THEN IF ENDCONTROL(T(0),LD[*]) THEN                      00690000
BEGIN READ(T); GO EOTCOMP END;                                          00691000
READ(T);                                                                00692000
END;                                                                    00693000
GO RDCOMP;                                                              00694000
EOFCOMP:%                                                               00695000
IF PRT27 THEN WRITE(P,FTEOF,REC,N);                                     00696000
REC:=0;                                                                 00697000
IF B6500 THEN                                                           00698000
IF TMTOG THEN GO EOTCOMP;                                               00699000
CLOSE(T,*);                                                             00700000
FORLOOP IF TAPEGOOD[I] THEN CLOSE(TW[I],*);                             00701000
TMTOG:=TRUE;                                                            00702000
IF B6500 OR LOADCONTROL THEN                                            00703000
GO RDCOMP;                                                              00704000
%CHECK TRAILER LABEL                                                    00705000
IF BACKCOMP THEN READ REVERSE(T[NO]) ELSE READ(T[NO]);                  00706000
MAKECOMPARE(TRUE);                                                      00707000
IF BACKCOMP THEN READ REVERSE(T) ELSE READ(T);                          00708000
GO TO MAINCOMP;                                                         00709000
%                                                                       00710000
EOTCOMP:                                                                00711000
IF PRT27 THEN WRITE(P,FTEOT,REC,N);                                     00712000
REC:=0;                                                                 00713000
FORLOOP IF TAPEGOOD[I] THEN                                             00714000
BEGIN                                                                   00715000
IF BACKCOMP THEN READ REVERSE(TW[I])[LASTM:KILL4] ELSE                  00716000
READ(TW[I])[LASTM:KILL4];                                               00717000
KILL4:KILLER;                                                           00718000
LASTM:                                                                  00719000
IF TAPEGOOD[I] THEN                                                     00720000
CLOSE(TW[I],*);                                                         00721000
END;                                                                    00722000
CLOSE(T,RELEASE);                                                       00723000
FORLOOP IF TAPEGOOD[I] THEN IF COMPAREONLY THEN CLOSE(TW[I],RELEASE)    00724000
ELSE LOCK(TW[I],SAVE) ELSE                                              00725000
             BADCOUNT:=BADCOUNT+1;                                      00726000
IF COMPAREONLY THEN                                                     00727000
IF BADCOUNT=0 THEN WRITE(SPO,STATMESSCOMPOK,COM+1,QMORPD) ELSE          00728000
WRITE(SPO,STATMESSCOMP,COM+1-BADCOUNT,QMORPD,BADCOUNT)                  00729000
ELSE                                                                    00730000
IF BADCOUNT=0 THEN WRITE(SPO,STATMESSOK,COM+1,QMORPD) ELSE              00731000
WRITE(SPO,STATMESS,COM+1-BADCOUNT,QMORPD,BADCOUNT) ;                    00732000
SPOUT(SPU);                                                             00733000
END COMPARE BLOCK;%**************************************************%  00734000
IF FALSE THEN TOTALBOMBOUT:                                             00735000
BEGIN                                                                   00736000
IF READPARERR THEN WRITE(SPO,READPARITY) ELSE                           00737000
IF ENDOFILERR THEN WRITE(SPO,EOFERR) ELSE                               00738000
IF WRITING THEN WRITE(SPO,NULLCREATE) ELSE                              00739000
IF COMPAREONLY THEN WRITE(SPO,NULLCOMPARECOMPARE)  ELSE                 00740000
WRITE(SPO,NULLCOMPARE);                                                 00741000
SPOUT(SPU);                                                             00742000
END;                                                                    00743000
EOPROG:END... OF TAPE COPY/COMPARE PGM                                  00744000
END;END.        LAST CARD ON 0CRDING TAPE                               99999999
