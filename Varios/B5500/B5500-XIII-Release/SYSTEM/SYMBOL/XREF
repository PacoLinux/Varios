%%            DATE ~ " 3DC70"; % % % % %
         BEGIN                                                          00001000
%%            DATE ~ "18MY69" ; % % % % %                               00002000
COMMENT        CUBE LIBRARY NUMBER IS Q500001.  THE PROGRAM NAME IS     00003000
               "XREF/JONES".  THIS VERSION DATED 5/9/68;                00004000
COMMENT  NEW CUBE TAPE DATE 5/18/69 ;                                   00005000
COMMENT DOCUMENT                                                        00006000
* PAGE CENTER SKIP 10                                                   00007000
                               BURROUGHS                                00008000
                                 B5500                                  00009000
                     INFORMATION PROCESSING SYSTEM                      00010000
* SKIP 5 CENTER                                                         00011000
                            SYMBOLIC LISTING                            00012000
* CENTER UNDERLINE                                                      00013000
      "A CROSS REFERENCE,FLOW CHART AND DOCUMENT EDITING PROGRAM"       00014000
* SKIP 2 CENTER                                                         00015000
                         MAY 18TH 1969                                  00016000
* SKIP 5 CENTER                                                         00017000
                         BURROUGHS CORPORATION                          00018000
                             PASADENA PLANT                             00019000
                         460 SIERRA MADRE VILLA                         00020000
                          PASADENA, CALIFORNIA                          00021000
* SKIP 2 INDENT 40                                                      00022000
                                       COPYRIGHT (C) 1966,1967,1969     00023000
                                       BURROUGHS CORPORATION            00024000
* FINISH ;                                                              00025000
COMMENT       ALGOL AND ESPOL CROSS REFERENCE                           00026000
              AND DOCUMENT EDITING PROGRAM ;                            00027000
COMMENT                                                                 00028000
              WRITTEN BY GLYN H. JONES AND                              00029000
              JOAN G. DUNSHEE                                           00030000
                          TECHNICAL STAFF ,                             00031000
                          ENGINEERING DIVISION ,                        00032000
                          PASADENA .                                   ;00033000
COMMENT DOCUMENT "PART 1"                                               00034000
* UNDERLINE TITLE CENTER                                                00035000
E.T.M. 279  (20 NOV 1965).                                              00036000
* DEFINE 1 = SKIP 2 PARAGRAPH 5,67,0 *                                  00037000
* DEFINE 2 = SKIP PAR *                                                 00038000
* DEFINE 3 = SKIP GLOSSARY 5,25,67 *                                    00039000
* DEFINE 4 = SKIP GLOS *                                                00040000
* DEFINE 5 = SKIP GLOSSARY 8,30,67 *                                    00041000
* DEFINE 6 = SKIP PARAGRAPH 20,67,0 *                                   00042000
* DEFINE 7 = PAGE INDEX UNDERLINE *                                     00043000
* DEFINE 8 = SKIP GLOSSARY 10,25,67 *                                   00044000
* DEFINE 9 = SKIP GLOSSARY 10,35,67 *                                   00045000
* DEFINE 10 = SKIP 2 TAB 5, 25, 45 *                                    00046000
* DEFINE 11 = SKIP 2 TAB 5,35 *                                         00047000
* DEFINE 12 = SKIP 2 TAB 5 *                                            00048000
* DEFINE 13 = SKIP 2 INDENT 3 INDEX UNDERLINE *                         00049000
* DEFINE 14 = PAGE   INDENT 3 INDEX UNDERLINE *                         00050000
* REV * LEAVE                                                           00051000
* PAGEID 1,"    1-"                                                     00052000
* PAGE CENTER UNDERLINE                                                 00053000
A CROSS REFERENCE,FLOW CHART AND DOCUMENT EDITING PROGRAM (PART ONE).   00054000
* SKIP CENTER TITLE CLEAR                                               00055000
BY GLYN HUGH JONES AND JOAN G. DUNSHEE                                  00056000
* SKIP CENTER                                                           00057000
TECHNICAL STAFF                                                         00058000
BURROUGHS CORPORATION                                                   00059000
PASADENA                                                                00060000
* SKIP 3 INDEX CENTER UNDERLINE                                         00061000
SUMMARY                                                                 00062000
* 1                                                                     00063000
THIS DOCUMENT (PREPARED IN THREE PARTS) PRESENTS A CROSS REFERENCE AND  00064000
DOCUMENT EDITING PROGRAM.  PART 1 DESCRIBES A GENERAL PURPOSE IDENTIFIER00065000
 REFERENCE PROGRAM,    PART 2 DESCRIBES A DOCUMENT EDITING PROGRAM,     00066000
AND PART 3 DESCRIBES A FLOW CHART GENERATING PROGRAM. THE               00067000
PROGRAMS WERE DESIGNED AND WRITTEN FOR USE WITH ALGOL AND ESPOL  PROGRAM00068000
S, AND WITH MINOR MODIFICATIONS, COULD BE USED WITH OTHER LANGUAGES.    00069000
ALTHOUGH THE DESCRIPTIONS ARE WRITTEN IN THREE PARTS, ALL  OF THE       00070000
FUNCTIONS ARE HANDLED BY ONE PROGRAM.                                   00071000
* SKIP 6 TAB 2,40                                                       00072000
AUTHORS:/APPROVED:/                                                     00073000
* SKIP 4 TAB 2,40                                                       00074000
-------------------- / -------------------- /                           00075000
 GLYN H. JONES AND/ J. F. KALBACH/                                      00076000
* SKIP TAB 2,40                                                         00077000
JOAN G. DUNSHEE/ MANAGER,TECHNICAL STAFF/                               00078000
* SKIP 1 INDENT 30                                                      00079000
ORIGINAL ISSUE JAN.25, 1965                                             00080000
FIRST REVISED ISSUE OCT. 27, 1965                                       00081000
SECOND REVISED ISSUE NOV. 21, 1966                                      00082000
THIRD REVISED ISSUE FEB. 16, 1969                                       00083000
* 7                                                                     00084000
   INTRODUCTION                                                         00085000
* 2                                                                     00086000
IT IS ALWAYS USEFUL TO HAVE COMPLETE DOCUMENTATION DESCRIBING A COMPUTER00087000
 PROGRAM WHEN ONE IS ATTEMPTING TO UNDERSTAND AND MODIFY  SUCH A PROGRAM00088000
, ESPECIALLY WHEN THE PROGRAM IS WRITTEN BY ANOTHER PERSON.             00089000
 THE PROGRAM DESCRIBED IN THIS THREE-PART DOCUMENT WAS WRITTEN          00090000
TO PERFORM THREE ALLIED DOCUMENTATION FEATURES: CROSS REFERENCING, TEXT 00091000
EDITING, AND FLOW CHARTING.                                             00092000
* 2                                                                     00093000
 THE CROSS REFERENCE PORTION IS DESCRIBED IN THE FIRST SECTION OF THE   00094000
 DOCUMENT.                                                              00095000
* 7                                                                     00096000
   PROGRAM SPECIFICATIONS                                               00097000
* 2                                                                     00098000
SYMBOLIC PROGRAMS TO BE SCANNED MAY BE ON CARDS,        TAPE OR SYMBOLIC00099000
 PROGRAM LIBRARY TAPE .                                                 00100000
* 2                                                                     00101000
WHEN SOURCE PROGRAMS ARE ON TAPE, CORRECTION PATCH CARDS MAY BE MERGED  00102000
FROM THE CARD  READER.                                                  00103000
* 2                                                                     00104000
NEW SOURCE TAPES (EXCEPT SYMBOLIC PROGRAM LIBRARY TAPES) AND NEW CARD   00105000
DECKS MAY BE PRODUCED.                                                  00106000
* 2                                                                     00107000
SOURCE INPUT MAY BE SEQUENCE CHECKED AND THE SOURCE OUTPUT RESEQUENCED. 00108000
* 2                                                                     00109000
SECTIONS OF SOURCE INPUT MAY BE SKIPPED BY USE OF VOID CONTROLS.        00110000
* 2                                                                     00111000
THE RELEVANT OUTPUT MAY BE PRINTED ON THE LINE PRINTER AND/OR SAVED ON A00112000
 BACKUP FILE (NOT THE MCP PRINTER BACKUP TAPE) WHICH IN TURN MAY BE  UPD00113000
ATED AND / OR PRINTED.                                                  00114000
* 2                                                                     00115000
ALL IDENTIFIERS (INCLUDING RESERVED WORDS) OR A SELECTED SET OF IDENTIFI00116000
ERS OR ALL IDENTIFIERS WHOSE INITIAL LETTER FALLS WITHIN A SPECIFIED    00117000
RANGE MAY BE CROSS REFERENCED.                                          00118000
* 2                                                                     00119000
A BLOCK STRUCTURE DIAGRAM MAY BE DRAWN.                                 00120000
* 2                                                                     00121000
PROCEDURE IDENTIFIERS ALONE MAY BE CROSS REFERENCED.                    00122000
* 2                                                                     00123000
FACILITIES ARE PROVIDED TO OBTAIN DETAILED INFORMATION CONCERNING THE   00124000
INTERNAL WORKINGS OF THE CROSS REFERENCE PROGRAM. SUCH INFORMATION      00125000
IS USEFUL WHEN ONE HAS TO CHANGE THE PROGRAM ONESELF.                   00126000
* 7                                                                     00127000
SYNTAX CONVENTIONS.                                                     00128000
*1                                                                      00129000
THE SYNTAX OF THE CONTROL CARD                                          00130000
                  LANGUAGE IS DESCRIBED THROUGH THE USE OF METALINGUISTI00131000
C SYMBOLS.  THESE SYMBOLS HAVE THE FOLLOWING MEANINGS:                  00132000
* 1                                                                     00133000
LEFT AND RIGHT BROKEN BRACKETS "<" AND ">" ARE USED TO CONTAIN ONE      00134000
OR MORE CHARACTERS REPRESENTING A METALINGUISTIC VARIABLE WHOSE VALUE   00135000
IS GIVEN BY A METALINGUISTIC FORMULA.                                   00136000
*1                                                                      00137000
THE SYMBOL "::=" MEANS "IS DEFINED TO BE" AND SEPARATES THE METALINGUIST00138000
IC VARIABLE ON THE LEFT OF THE FORMULA FROM ITS DEFINITION ON THE       00139000
RIGHT.                                                                  00140000
*1                                                                      00141000
THE SYMBOL "/" MEANS "OR".  THIS SYMBOL SEPARATES MULTIPLE DEFINITIONS  00142000
OF A METALINGUISTIC VARIABLE.                                           00143000
*1                                                                      00144000
LESS-THAN-OR-EQUAL AND GREATER-THAN-OR-EQUAL SIGNS, "{" AND"}", ARE     00145000
USED TO ENCLOSE METALINGUISTIC VARIABLES                                00146000
WHICH ARE DEFINED BY THE MEANING OF THE ENGLISH LANGUAGE  EXPRESSION    00147000
CONTAINED WITHIN THE BRACES.  THIS FORMULATION IS USED ONLY WHEN IT IS  00148000
IMPOSSIBLE OR IMPRACTICAL TO USE A METALINGUISTIC FORMULA.              00149000
* 1                                                                     00150000
THE BRACKETS "[" AND "]" ARE USED TO ENCLOSE GROUPS OF                  00151000
METALINGUISTIC VARIABLES WHICH MAY BE PERMUTED IN ANY ORDER. EXAMPLE:   00152000
* SKIP                                                                  00153000
              <D> ::= [<A> B <C>]        IS EQUIVALENT TO :-            00154000
* SKIP                                                                  00155000
              <D> ::= <A> B <C> / <A> <C> B /                           00156000
                      B <A> <C> / B <C> <A> /                           00157000
                      <C> <A> B / <C> B <A>                             00158000
*1                                                                      00159000
THE ABOVE METALINGUISTIC SYMBOLS ARE USED IN FORMING A METALINGUISTIC FO00160000
RMULA.  A METALINGUISTIC FORMULA IS A RULE WHICH WILL PRODUCE AN ALLOWAB00161000
LE SEQUENCE OF CHARACTERS AND/OR SYMBOLS.  THE ENTIRE SET OF SUCH FORMUL00162000
AS DEFINES THE CONSTRUCTS OF THE CONTROL CARDS.                         00163000
*1                                                                      00164000
ANY MARK OR SYMBOL IN A METALINGUISTIC FORMULA WHICH IS NOT ONE OF THE A00165000
BOVE METALINGUISTIC SYMBOLS DENOTES ITSELF.                             00166000
*1                                                                      00167000
CONTROL CARD                                                            00168000
    CONVENTIONS USED IN WRITING SYNTAX ARE ILLUSTRATED BY THE FOLLOWING 00169000
EXAMPLE:                                                                00170000
* SKIP                                                                  00171000
<IDENTIFIER> ::= <LETTER> / <IDENTIFIER><LETTER> / <IDENTIFIER><DIGIT>  00172000
*1                                                                      00173000
THIS METALINGUISTIC FORMULA IS READ AS FOLLOWS: AN IDENTIFIER IS       D00174000
EFINED TO BE A LETTER, OR AN IDENTIFIER FOLLOWED BY A LETTER, OR AN IDEN00175000
TIFIER FOLLOWED BY A DIGIT.                                             00176000
*1                                                                      00177000
THE METALINGUISTIC FORMULA DEFINES A RECURSIVE RELATIONSHIP BY WHICH A C00178000
ONSTRUCT CALLED AN IDENTIFIER MAY BE FORMED.  EVALUATION OF THE FORMULA 00179000
SHOWS THAT AN IDENTIFIER BEGINS WITH A LETTER. THE LETTER MAY STAND ALON00180000
E, OR MAY BE FOLLOWED BY ANY MIXTURE OF LETTERS AND DIGITS.             00181000
* 7                                                                     00182000
LABEL EQUATION INFORMATION.                                             00183000
* 1                                                                     00184000
THE FOLLOWING FILE IDENTIFIERS USED BY THE CROSS REFERENCE PROGRAM      00185000
 ARE                                                                    00186000
IDENTICAL TO THOSE USED IN THE ALGOL COMPILER AND ARE LISTED BELOW.     00187000
* UNDERLINE TAB 5, 15                                                   00188000
FILE/ FUNCTION /                                                        00189000
* SKIP TAB 5,15                                                         00190000
CARD/ CARD PATCH DECK/                                                  00191000
LINE / LINE PRINTER OR MCP BACKUP TAPE /                                00192000
TAPE / "0CRDIMG" OR SOURCE TAPE /                                       00193000
NEWTAPE/ NEW "0CRDIMG" OR SOURCE TAPE /                                 00194000
PNCH / CARD PUNCH /                                                     00195000
PUNTAPE / TAPE USED BY "NEW PUNCH TAPE" CONTROL/                        00196000
CASTA / SYMBOLIC LIBRARY FILE ON DISK "CASTA" "LIBRARY"/                00197000
CASTB / SYMBOLIC LIBRARY TAPE /                                         00198000
CASTC / SYMBOLIC LIBRARY TAPE /                                         00199000
CA/ NEW SYMBOLIC LIBRARY TAPE , USED BY "COPY" /                        00200000
CB/ NEW SYMBOLIC LIBRARY TAPE , USED BY "COPY" /                        00201000
CC/ NEW SYMBOLIC LIBRARY TAPE , USED BY "COPY" /                        00202000
* 1                                                                     00203000
THE USER WILL NEED TO KNOW CERTAIN OF THE FILE NAMES WHICH ARE UNIQUE TO00204000
 CROSS REFERENCE.  THE PERTINENT ONES ARE                               00205000
* UNDERLINE TAB 5,17                                                    00206000
FILE/FUNCTION/                                                          00207000
* SKIP TAB 5,17                                                         00208000
DISK/"DISKSYM" "XREF" OR SOURCE DISK FILE/                              00209000
NEWDISK/"DISKSYM" "XREF" OR NEW SOURCE DISK FILE/                       00210000
BACKUPDISK/FILE WRITTEN WHEN BACKUP GOES TO DISK/                       00211000
BACKUPTAPE/ FILE WRITTEN WHEN BACKUP GOES TO TAPE/                      00212000
OLDBACKUP/FILE TO BE PRINTED BY THE CONTROL "$ BACKUP DISK"./           00213000
* PARAGRAPH 17,67,0                                                     00214000
PROGRAM WILL LOOK FOR "BACKUPD" IF NO LABEL EQUATION FOR "OLDBACKUP"    00215000
IS MADE.                                                                00216000
* TAB 5,17                                                              00217000
OLDBAC/ "BACKUPT" OR TAPE TO BE PRINTED BY "$ BACKUP"//                 00218000
NEWDOC/FILE WHICH "MERGE" EXPECTS TO FIND AS THE NEW DOCUMENT./         00219000
OLDDOC/FILE WHICH "MERGE" EXPECTS TO FIND AS THE OLD DOCUMENT./         00220000
NEWPATCH/"PATCHES" OR NEW TAPE TO BE PATCH DECK/                        00221000
PATCHTAPE/ "PATCHES" OR TAPE FOR USE AS PATCH DECK /                    00222000
* PAGE INDENT 3 INDEX UNDERLINE                                         00223000
SAMPLE SCHEDULE DECK.                                                   00224000
* INDENT 10                                                             00225000
* INVALID 2                                                             00226000
 Q EXECUTE XREF/JONES                                                   00227000
* INVALID 2                                                             00228000
 Q FILE CARD = PERTCARD                                                 00229000
* INVALID 2                                                             00230000
 Q FILE TAPE = PERTSYM                                                  00231000
* INVALID 2                                                             00232000
 Q FILE NEWTAPE = PERTSYM                                               00233000
* INVALID 2                                                             00234000
 Q DATA PERTCARD                                                        00235000
 $ TAPE LIST RESERVED STRING 10                                         00236000
 PATCH CARDS, LAST PATCH CARD WITH SEQUENCE 99999999                    00237000
* INVALID 2                                                             00238000
 Q END .                                                                00239000
* 7                                                                     00240000
   CROSS REFERENCE CONTROL CARD SYNTAX                                  00241000
* SKIP                                                                  00242000
<XREF CONTROL INFO> ::= $ <INPUT AND OUTPUT FILE CONTROLS>              00243000
                        <XREF OPTIONS> / $ <LOGIC BOOK CONTROLS> /      00244000
                        $ BACKUP <DISK PART> <BACKUP COPIES> /          00245000
                        $ <MULTIFILE PART> <MULTIFILE OPTIONS> /        00246000
                        $ MERGE [<MERGE CONTROLS> <DEBUGGING PART>      00247000
                        <LIST CONTROL> <LINE CONTROLS>] / $ <COPY PART> 00248000
                        / $ <VOID PART> / $ <BUILD PART> / <EMPTY>      00249000
<INPUT AND OUTPUT FILE CONTROLS> ::= <INPUT SOURCE FILE PART>           00250000
              <LIST OPTION> [<RESEQ PART> <VOID PART> <SEQ CHECK PART>  00251000
              <PATCHES ON TAPE> <NEW SOURCE FILE PART>                  00252000
              <ONLY PART> <OUTPUT CONTROLS> ]                           00253000
              / <CAST FILE INPUT PART> [<VOID PART> <SEQ CHECK PART>    00254000
              <OUTPUT FILE CONTROLS> <ONLY PART>]                       00255000
<INPUT SOURCE FILE PART> ::= CARD / TAPE / DISK / DISC                  00256000
<DISK PART> ::= DISK / <EMPTY>                                          00257000
<ONLY PART> ::= ONLY / <EMPTY>                                          00258000
<PATCHES ON TAPE> ::= TAPEPATCHES / <EMPTY>                             00259000
<LOGIC BOOK CONTROLS> ::= LOGIC / LOGIC BACKUP                          00260000
<VOID PART> ::= VOID <VOID SEQ NUMBER>                                  00261000
<VOID SEQ NUMBER> ::= <UNSIGNED INTEGER> / <EMPTY>                      00262000
<BUILD PART> ::= CARD <LIST OPTION> BUILD <BUILD PUNCH OPTION>          00263000
<BUILD PUNCH OPTION> ::= PUNCH / <EMPTY>                                00264000
<BACKUP COPIES> ::= <UNSIGNED INTEGER> / <EMPTY>                        00265000
<COPY PART> ::= COPY CAST <CAST SWITCH FILE LETTER> <LIST OPTION> /     00266000
              COPY TAPE <LIST OPTION>                                   00267000
<LIST OPTION> ::= LIST / LIST ONLY / <EMPTY>                            00268000
<SEQ CHECK PART> ::= SEQ / CHECK / <EMPTY>                              00269000
<RESEQ PART> ::= RESEQUENCE <RESEQ PARAMETERS> /                        00270000
                 RESEQ <RESEQ PARAMETERS> DOC /                         00271000
                 RESEQ <RESEQ PARAMETERS> / <EMPTY>                     00272000
<RESEQ PARAMETERS> ::= <SEQ INC> / <SEQ INC> , <START SEQ> / <EMPTY>    00273000
<START SEQ> ::= <UNSIGNED INTEGER>                                      00274000
<SEQ INC> ::= <UNSIGNED INTEGER>                                        00275000
<NEW SOURCE FILE PART> ::= NEW TAPE / NEW PUNCH / NEW / NEW PUNCH TAPE /00276000
                           NEW PATCHTAPE / NEW PATCHTAPE PUNCH /        00277000
                           NEW DISK / NEW DISC / <EMPTY>                00278000
<OUTPUT FILE CONTROLS> ::= [<PRINTER LISTING> <BACKUP TAPE>             00279000
                           <IRFILE PART> <REMOTE PART>]                 00280000
<REMOTE PART> ::= REMOTE / <EMPTY>                                      00281000
<PRINTER LISTING> ::= PRINT / <EMPTY>                                   00282000
<IRFILE PART> ::= MAKE IRFILE / <EMPTY>                                 00283000
<BACKUP TAPE> ::= BACKUP <DISK PART> / BACKUP <DISK PART> UPDATE/       00284000
                  LISTBACKUP / <EMPTY>                                  00285000
<CAST FILE INPUT PART> ::= CAST <CAST SWITCH FILE LETTER>               00286000
                           <CAST PROG RANGE PART>                       00287000
<CAST SWITCH FILE LETTER> ::= A / B / C                                 00288000
<CAST PROG RANGE PART> ::= ALL TO END <LIST OPTION> /                   00289000
              ALL FROM <FIRST PROG ID> TO END <LIST OPTION> /           00290000
              ALL FROM <FIRST PROG ID> TO < LAST PROG ID> <LIST OPTION> 00291000
              / <PROG ID> <LIST OPTION> <RESEQ PART>                    00292000
                           <NEW SOURCE FILE PART>                       00293000
<FIRST PROG ID> ::= <IDENTIFIER>                                        00294000
< LAST PROG ID> ::= <IDENTIFIER>                                        00295000
<PROG ID> ::= <IDENTIFIER>                                              00296000
<XREF OPTIONS> ::= [<LINE CONTROLS> <DEBUGGING PART> <HEADER PART>      00297000
              <LARGE PART> <COMMENT PART> <STRING PART> <LANGUAGE PART> 00298000
              <NUMBER PART>                                             00299000
              <PAGE PUNCH PART> <RESERVED PART>]                        00300000
              <SELECTIVE XREF CONTROLS>                                 00301000
<LINE CONTROLS> ::= EIGHT <PAGE LINE COUNT> <XREF LINE CONTROLS> /      00302000
                   SIX <PAGE LINE COUNT> <XREF LINE CONTROLS>           00303000
                   / <XREF LINE CONTROLS> / <EMPTY>                     00304000
<XREF LINE CONTROLS> ::= SINGLE / DOUBLE / <EMPTY>                      00305000
<PAGE LINE COUNT> ::= <UNSIGNED INTEGER> / <EMPTY>                      00306000
<DEBUGGING PART> ::= [DUMP MONITOR DEBUG DOCDEBUG BUGS DEBEATLE] /      00307000
                   <EMPTY>                                              00308000
<HEADER PART> ::= {ANY STRING OF CHARACTERS EXCEPT QUOTES AND PERCENTS  00309000
                   ENCLOSED WITHIN QUOTES} / <EMPTY>                    00310000
<RESERVED PART> ::= RESERVED / OP / OPS / <EMPTY>                       00311000
<LARGE PART> ::= LARGE <CORE SIZE> / <EMPTY>                            00312000
<COMMENT PART> ::= COMMENT / <EMPTY>                                    00313000
<STRING PART> ::=  STRING / STRING <UNSIGNED INTEGER>/ <EMPTY>          00314000
<LANGUAGE PART> ::= BPL / ESPOL / COBOL / B3500 / SIMULA / FORTRAN /    00315000
                   FORTRAN HOL / <EMPTY>                                00316000
<NUMBER PART> ::= NUMBERS / NUMONLY                                     00317000
<PAGE PUNCH PART> ::= PPAGES <PUNCH PART> / PPAGES INSERTPAGE           00318000
                      <PAGE INC> <PUNCH PART>                           00319000
<PUNCH PART> ::= PUNCH / <EMPTY>                                        00320000
<PAGE INC> ::= <UNSIGNED INTEGER> / <EMPTY>                             00321000
<SELECTIVE XREF CONTROLS> ::= <COUNT PART> / PROCEDURE / <BLOCK PART> / 00322000
              NAMEPUNCH NAMES <NAME LIST> * / NAMEPUNCH BLANK NAMES     00323000
              <NAME LIST> * /                                           00324000
              NAMES <NAME LIST> * / <XREF LETTER RANGE> / <PATCH PART> /00325000
              <DOCUMENT PART> / <FLOW CHART PART> / SORT / SHUFFLE      00326000
<NAME LIST> ::= <IDENTIFIER> / <NAME LIST> <IDENTIFIER>                 00327000
<XREF LETTER RANGE> ::= XREF <LETTER> / XREF <LETTER> TO <LETTER>       00328000
<BLOCK PART> ::= BLOCK / BLOCK <INDENTATION>                            00329000
<INDENTATION> ::= <UNSIGNED INTEGER>                                    00330000
<COUNT PART> ::= COUNT / IDENT / IDENTIFIERS                            00331000
<PATCH PART> ::= PATCH                                                  00332000
<DOCUMENT PART> ::= <SEMICOLON USE> <DOCUMENT EDIT TYPE>                00333000
                    <CONFIDENTIAL OPTION>                               00334000
                    <JUSTIFY OPTION> <UPDATE OPTION> <DOCINDEX OPTION>  00335000
                    <DOCUMENT XREF PART> <REVISION PART>                00336000
<SEMICOLON USE> ::= DOCONLY / <EMPTY>                                   00337000
<DOCUMENT EDIT TYPE> ::= <DOCUMENT NAME> / <DOCUMENT NAME> FINAL        00338000
              / <DOCUMENT NAME> CONTENTS ONLY / <DOCUMENT NAME> SYNTAX  00339000
              / <DOCUMENT NAME> SYNTAX FINAL / BNF                      00340000
<DOCUMENT NAME> ::= DOCUMENT / DOCUMENT <STRING> /                      00341000
              DOCUMENT <STRING> TO <STRING>                             00342000
<CONFIDENTIAL OPTION> ::= SECRET / <EMPTY>                              00343000
<UPDATE OPTION> ::= UPDATE / <EMPTY>                                    00344000
<DOCINDEX OPTION> ::= DOCINDEX / <EMPTY>                                00345000
<DOCUMENT XREF PART> ::= XREF / <EMPTY>                                 00346000
<FLOW CHART PART> ::= <FLOW TYPE> <REVISION PART>                       00347000
                       / <TRANS PART> <ASMFLOW PART>                    00348000
<FLOW TYPE> ::= FLOW / FLOW NOBOX / FLOW SYNTAX / <ASMFLOW PART>        00349000
                / <QFLOW PART>                                          00350000
<ASMFLOW PART> ::= ASMFLOW / ASMFLOW NOBOX / ASMFLOW SYNTAX             00351000
<QFLOW PART> ::= QFLOW / QFLOW NOBOX / QFLOW SYNTAX                     00352000
<REVISION PART> ::= REVISION <REVISION NUMBER> /                        00353000
                    REVISION CLEAR <REVISION NUMBER>                    00354000
<REVISION NUMBER> ::= <UNSIGNED INTEGER> / <EMPTY>                      00355000
<TRANS PART> ::= TRANS [<SEGS PART> <ESCAPE PART> <DATA PART>]          00356000
<SEGS PART> ::= SEGS <SEGMENT NUMBERS>* / <EMPTY>                       00357000
<DATA PART> ::= DATA / <EMPTY>                                          00358000
<ESCAPE PART> ::= ESCAPE <ESCAPE COUNT> <ESCAPE LIST> /                 00359000
                  ESCAPE <ESCAPE CHR> / <EMPTY>                         00360000
<ESCAPE COUNT> ::= <UNSIGNED INTEGER>                                   00361000
<ESCAPE LIST> ::= <ESCAPE ITEM> / <ESCAPE LIST> <ESCAPE ITEM>           00362000
<ESCAPE ITEM> ::= {ANY SCANNABLE ENTITY}                                00363000
<ESCAPE CHR> ::= {ANY SCANNABLE ENTITY EXCEPT NUMBERS}                  00364000
<SEGMENT NUMBERS> ::= <INTEGER SPAN> / <SEGMENT NUMBERS>,               00365000
                        <INTEGER SPAN>                                  00366000
<INTEGER SPAN> ::= <INTEGER> / <INTEGER> - <INTEGER>                    00367000
<LIST CONTROL> ::= LIST / <EMPTY>                                       00368000
<MERGE CONTROLS> ::= [<PRINTER LISTING> <BACKUP LISTING>                00369000
                      <SELECT PART> <DIRECTORY PART> TITLE DA ] /       00370000
                     <DIRECTORY PART> PRINTALL <ONLY PART>              00371000
<BACKUP LISTING> ::= BACKUP <DISK PART> / <EMPTY>                       00372000
<DIRECTORY PART> ::= DIRECTORY <ONLY PART> / <EMPTY>                    00373000
<SELECT PART> ::= PRINTSELECT <PAGES>* <ONLY PART> / <EMPTY>            00374000
<PAGES> ::= <UNSIGNED INTEGER> / <PAGES>, <UNSIGNED INTEGER>            00375000
<MULTIFILE PART> ::= MAKEMULTI / MAKEMUL                                00376000
<MULTIFILE OPTIONS> ::= <OUTPUT FILE> <INPUT FILE> [<LIST OPTION>       00377000
                        <PUNCH PART> <DIRECTORY OPTION>]                00378000
<OUTPUT FILE> ::= DISK / DISC / TAPE                                    00379000
<INPUT FILE> ::= DISK / DISC / TAPE / <EMPTY>                           00380000
<DIRECTORY OPTION> ::= DIRECTORY / <EMPTY>                              00381000
<LETTER> ::= A/B/C/D/E/F/G/H/I/J/K/L/M/O/P/Q/R/S/T/U/V/W/X/Y/Z          00382000
<IDENTIFIER> ::= <LETTER> / <IDENTIFIER><LETTER> / <IDENTIFIER><DIGIT>  00383000
<DIGIT> ::= 0/1/2/3/4/5/6/7/8/9                                         00384000
<UNSIGNED INTEGER> ::= <DIGIT> / <UNSIGNED INTEGER><DIGIT>              00385000
* 7                                                                     00386000
EXAMPLES OF CROSS REFERENCE CONTROL CARDS.                              00387000
* 11                                                                    00388000
 $ CARD LIST / $ TAPE LIST /                                            00389000
 $ CARD LIST DOCUMENT / $ DISK LIST DOCUMENT /                          00390000
 $ TAPE DOCONLY DOCUMENT / $ TAPE DOCUMENT XREF /                       00391000
 $ COPY CAST A LIST / $ COPY CAST B /                                   00392000
 $ COPY TAPE / $ MAKEMULTI DISK DIRECTORY PUNCH /                       00393000
 $ MAKEMUL TAPE DISK / $ MERGE DIRECTORY ONLY /                         00394000
 $ MERGE / $ MERGE PRINTSELECT 1,20,23* /                               00395000
 $ TAPE LIST REMOTE / $ TAPE LIST PATCH /                               00396000
 $ TAPE LIST BACKUP PRINT / $ DISK LIST FLOW/                           00397000
 $ SORT / $ IDENTIFIERS /                                               00398000
 $ BACKUP / $ BACKUP DISK 3 /                                           00399000
 $ COUNT / $ PROCEDURE /                                                00400000
 $ CARD LIST NEW PUNCH / $ CARD NEW PUNCH TAPE RESEQUENCE /             00401000
 $ BLOCK / $ BLOCK 5 /                                                  00402000
* 12                                                                    00403000
 $ CARD BUILD LIST PUNCH //                                             00404000
 $ CAST A ALL FROM PERT TO SOL LIST //                                  00405000
 $ CAST B ALL FROM PERT TO END LIST RESERVED //                         00406000
 $ CAST C PERT LIST NEW TAPE RESEQ CHECK //                             00407000
  $ CARD LIST DUMP MONITOR BUGS DEBUG //                                00408000
 $ TAPE LIST RESERVED STRING 10 COMMENT //                              00409000
 $ TAPE LIST NAMES FILE PRINT ARRAY SWITCH I J * //                     00410000
 $ DISK BACKUP DISK DOCUMENT UPDATE//                                   00411000
 $ CARD BACKUP DISK FLOW REVISION 2//                                   00412000
* SKIP INDENT 4                                                         00413000
 $ CARD LIST DUMP MONITOR BUGS DEBUG PRINT                              00414000
 $ TAPE "COBOL/DISK 10/6/65" XREF A TO H BACKUP                         00415000
 $ TAPE "COBOL/DISK 10/6/65" XREF I TO R BACKUP UPDATE                  00416000
 $ TAPE "COBOL/DISK 10/6/65" XREF S TO Z BACKUP UPDATE                  00417000
* 7                                                                     00418000
   CROSS REFERENCE CONTROL CARD SEMANTICS                               00419000
* 1                                                                     00420000
CROSS REFERENCE AND DOCUMENT EDITING OPTIONS ARE OBTAINED FROM A DOLLAR 00421000
CONTROL CARD.  SINCE THERE ARE A LARGE NUMBER OF POSSIBLE OPTIONS, AND  00422000
SINCE ALL OF THE REQUIRED OPTIONS FOR A GIVEN RUN COULD NOT BE INCLUDED 00423000
ON ONE CARD, A DOLLAR CONTINUATION CARD IS ALLOWED.  A CONTROL CARD MUST00424000
 HAVE A DOLLAR SIGN IN COL 1, AND IF THE CONTROL INFORMATION IS TO BE   00425000
CONTINUED ONTO ANOTHER CARD, A DOLLAR SIGN MUST BE PLACED ON THE CARD   00426000
TO BE CONTINUED AND A DOLLAR SIGN PLACED IN COL 2 OF THE CONTINUATION   00427000
CARD, CONTINUATION CARDS MAY BE USED UNTIL ALL OF THE REQUIRED          00428000
INFORMATION IS ENTERED.  IF A SEQUENCE OF NON-CONTINUED DOLLAR CARDS    00429000
PRECEDES A PROGRAM, ONLY THE LAST WILL DETERMINE THE OPERATIVE CONTROLS.00430000
 THE FOLLOWING IS AN EXAMPLE :-                                         00431000
* INDENT 10                                                             00432000
 $ TAPE LIST NEW TAPE  BACKUP $                                         00433000
* INDENT 11                                                             00434000
 $ "HEADING INFORMATION" NAMES FILE INPUT OUTPUT $                      00435000
  $ PRINTER TAPE TIME *                                                 00436000
* 2                                                                     00437000
ALL CONTROL CARDS MUST BE AT THE FRONT OF THE PATCH CARDS IN THE FILE   00438000
"CARD" AND THE ONLY CONTROL CARD WHICH IS ALLOWED TO BE IN THE BODY OF  00439000
THE SYMBOLIC FILES IS THE <VOID PART>  CONTROL CARD.                    00440000
FOLLOWING IS A LIST OF THE CHARACTERISTICS OF THE CONTROL CARD OPTIONS: 00441000
* 3                                                                     00442000
<EMPTY> = IF THE FIRST RECORD READ FROM THE FILE "CARD" DOES NOT CONTAIN00443000
 "$" SIGN IN COLUMN ONE THEN A LIST OF THE "CARD" DECK WILL BE          00444000
SUPPLIED AND THE SEQUENCE FIELDS (COLUMNS 72 TO 80) WILL BE             00445000
"SEQUENCE CHECKED". IF THE SEQUENCE NUMBER OF A RECORD IS LESS THAN     00446000
OR EQUAL TO THE SEQUENCE NUMBER OF THE PREVIOUS RECORD THEN THE         00447000
LISTING OF THE RECORD WILL CONTAIN A SEQUENCE ERROR CHECK FLAG          00448000
"********". NO OTHER CROSS REFERENCE CONTROLS WILL BE EXECUTED.         00449000
* 3                                                                     00450000
CARD = SOURCE INPUT IS ON A FILE "CARD".                                00451000
* 4                                                                     00452000
TAPE = SOURCE INPUT IS ON A FILE ON TAPE "0CRDIMG".                     00453000
SOURCE INPUT PATCHES ARE ON A FILE "CARD".                              00454000
DO NOT TRY TO PROCESS DISK FILES WITH THIS CONTROL, BUT RATHER          00455000
USE THE "DISK" OPTION BELOW.                                            00456000
* 3                                                                     00457000
DISK,DISC = SOURCE INPUT IS ON A DISK FILE "DISKSYM" "XREF".            00458000
SOURCE INPUT PATCHES ARE ON A FILE "CARD".                              00459000
* 3                                                                     00460000
CAST B = SOURCE INPUT IS TO BE FOUND ON A SYMBOLIC PROGRAM LIBRARY      00461000
TAPE.                                                                   00462000
 SUCH A TAPE IS GENERATED BY THE MAKCAST PROGRAM RELEASED AS PART OF THE00463000
 STANDARD SOFTWARE SYSTEM.  THE LETTER "B" MAY BE REPLACED BY "A" OR    00464000
"C".                                                                    00465000
    IF "A" IS USED, A FILE "CASTA/LIBRARY" ON THE DISK WILL BE USED.    00466000
      IN ORDER TO SELECT A PROGRAM OR PROGRAMS ON A CAST TAPE, ONE OF   00467000
THE FOLLOWING CONSTRUCTS MUST BE USED :-                                00468000
* SKIP GLOSSARY 10,25,67                                                00469000
< PROG ID > = THIS SPECIFIES THAT ONLY ONE PROGRAM ON A CAST TAPE IS TO 00470000
 BE PROCESSED. THIS SINGLE PROGRAM CAN BE PROCESSED AS IF IT WERE ON A  00471000
TAPE FILE "0CRDIMG".                                                    00472000
* 6                                                                     00473000
WITH ALL OTHER COMBINATIONS OF CAST PROGRAM RANGES THE RESEQ AND NEW    00474000
SOURCE FILE OPTIONS ARE NOT ALLOWED, AND NO PATCH CARDS ARE ACCEPTED   F00475000
ROM THE FILE "CARDS".                                                   00476000
* 8                                                                     00477000
ALL TO END                                                              00478000
    = PROCESS ALL PROGRAMS ON THE CAST TAPE.                            00479000
* 9                                                                     00480000
ALL FROM PROGA TO END = PROCESS ALL PROGRAMS STARTING WITH "PROGA"      00481000
AND CONTINUE TO END OF THE CAST TAPE .                                  00482000
* SKIP GLOS                                                             00483000
ALL FROM PROGA TO PROGB = PROCESS ALL PROGRAMS STARTING WITH  "PROGA"   00484000
AND CONTINUE UP TO AND INCLUDING "PROGB" .                              00485000
* 3                                                                     00486000
LIST = LIST THE SOURCE INPUT ON THE FILE "PRINT" WHICH IS NORMALLY THE  00487000
LINE PRINTER OR A MCP PRINTER BACKUP TAPE. IF THE RESEQ OPTION IS USED  00488000
(SEE BELOW), THEN THE OLD AND THE NEW SEQUENCE NUMBERS ARE LISTED.      00489000
IF THE SEQUENCE FIELD IS BLANK AND THE RESEQ OPTION IS NOT USED, THEN A 00490000
 NUMBER OF THE FORM 99000000 + N IS ASSIGNED. IF A TOTAL CROSS REFERENCE00491000
 IS BEING MADE, THEN ON THE LINE FOLLOWING EACH "END" THE SEQUENCE      00492000
NUMBER OF THE CORRESPONDING "BEGIN" APPEARS.                            00493000
A "*" IS PRINTED AT THE RIGHT OF THE SEQUENCE NUMBER IF THE RECORD WAS  00494000
 READ FROM THE FILE "CARD".                                             00495000
* 3                                                                     00496000
TAPEPATCHES = PATCHCARDS ARE TO BE FOUND  ON A TAPE "PATCHES". TO CREATE00497000
 SUCH A TAPE SEE THE CONTROL NEW PATCHTAPE.  THE TAPE WILL HAVE ALL THE 00498000
PROPERTIES OF A CARD PATCH DECK (EXCEPT BLOCKING).                      00499000
*3                                                                      00500000
ONLY = CROSS REFERENCE WILL BE SUPPRESSED AND ONLY FILE                 00501000
 MAINTENANCE OPERATIONS WILL BE PERFORMED.                              00502000
* 3                                                                     00503000
BUILD PUNCH = A NEW SET OF RESERVED IDENTIFIERS IS READ FROM THE FILE   00504000
"CARD" AND A SET OF APPROPRIATE DEFINE DECLARATIONS AND A FILL          00505000
STATEMENT (TO FILL THE RESERVED LIST TABLE) ARE PUNCHED ON THE FILE     00506000
"PUNCH". THESE ARE THEN TO BE USED TO RECOMPILE THE CROSS REFERENCE     00507000
PROGRAM.                                                                00508000
* 6                                                                     00509000
THE LIST OF RESERVED IDENTIFIERS SHOULD BE DIVIDED INTO "CLASSES".      00510000
THE FORMAT FOR THE INPUT IS AS FOLLOWS :- <CLASS NUMBER> <CLASS LIST> , 00511000
WHERE THE <CLASS NUMBER> IS AN UNSIGNED INTEGER AND THE <CLASS LIST>    00512000
IS A LIST  OF THE RESERVED IDENTIFIERS IN THAT CLASS, EXAMPLE :-        00513000
* 6                                                                     00514000
 1 BEGIN 2 END 3 ELSE                                                   00515000
* 6                                                                     00516000
THE CROSS REFERENCE PROGRAM CONTAINS SOME CODE DESIGNED TO RECOGNISE    00517000
CERTAIN ALGOL AND ESPOL CONSTRUCTS, SUCH AS PROCEDURE HEADINGS,         00518000
FILL STATEMENTS, BEGIN-END PAIRS AND COMMENTS.     THUS IF THIS         00519000
"BUILD" CONTROL FUNCTION IS USED TO CONSTRUCT A NEW RESERVED IDENTIFIER 00520000
 LIST FOR ANOTHER PROGRAMMING LANGUAGE THEN THE APPROPRIATE CODE WILL   00521000
HAVE TO BE CHANGED (SEE PART 4).                                        00522000
* 3                                                                     00523000
COPY CAST A LIST= A CAST A TAPE WILL BE COPIED AND LISTED.  NO OTHER    00524000
CONTROLS ARE OPERATIVE. THE LIST OPTION MAY BE EMPTY.                   00525000
THE CAST FILE "CASTA" "LIBRARY" WILL BE COPIED FROM THE DISK TO         00526000
TAPE AND LABELLED "CASTA". FOR "B" OR "C" A TAPE TO TAPE COPY WILL BE   00527000
MADE.                                                                   00528000
* 3                                                                     00529000
COPY TAPE LIST = A COPY OF THE "0CRDIMG" TAPE WILL BE MADE TOGETHER WITH00530000
 A LISTING. THE LIST OPTION MAY BE EMPTY.                               00531000
* 3                                                                     00532000
LOGIC = THIS IS A SPECIAL FUNCTION FOR PRODUCING A "WHERE-USED" FILE    00533000
FOR SOME FORMS OF "LOGIC BOOKS" WHICH ARE BEING MAINTAINED ON THE       00534000
B 5500 AS PART OF THE B 220 DESIGN ASSIST PROGRAMMING SYSTEM.           00535000
FURTHER DETAILS MAY BE OBTAINED BY EXAMINING THE PERTINENT ALGOL        00536000
CODE IN THE CROSS REFERENCE SYMBOLIC LISTINGS.                          00537000
* 4                                                                     00538000
SEQ = THE SOURCE INPUT RECORDS WILL BE SEQUENCE CHECKED.                00539000
IF THE SEQUENCE                                                         00540000
 NUMBER OF A RECORD IS LESS THAN OR EQUAL TO THE SEQUENCE NUMBER OF THE 00541000
PREVIOUS RECORD FROM THE SAME FILE, A SEQUENCE ERROR MESSAGE WILL      B00542000
E PRINTED ON THE FILE "PRINT".                                          00543000
* 3                                                                     00544000
CHECK = SAME FUNCTION AS "SEQ" DESCRIBED ABOVE.                         00545000
* 4                                                                     00546000
RESEQ N = THE SOURCE RECORDS WILL BE RESEQUENCED WITH A SEQUENCE INCREME00547000
NT OF N.  IF N IS <EMPTY>, AN INCREMENT OF 1000 IS USED.  BLANK RECORDS 00548000
(BLANKS IN COLS 1 - 72) ARE IGNORED.                                    00549000
* 3                                                                     00550000
RESEQ N,M = RESEQUENCE WITH SEQUENCE INCREMENT N AND STARTING WITH      00551000
SEQUENCE NUMBER M.                                                      00552000
* 3                                                                     00553000
RESEQ 0,0 = ASSIGN BLANK SEQUENCE NUMBERS.                              00554000
* 3                                                                     00555000
RESEQUENCE = SAME AS THE RESEQ OPTION EXCEPT THAT NO FUNCTIONS OTHER    00556000
THAN <NEW SOURCE FILE PART> AND <LIST OPTION> ARE ALLOWED.              00557000
* 3                                                                     00558000
RESEQ DOC = WILL, ALONG WITH RESEQUENCING, REMOVE  *  OVER CARDS AND    00559000
CHANGE <INSERT PART> TO "PAGE".                                         00560000
* 4                                                                     00561000
VOID N = SOURCE RECORDS ARE READ UNTIL THE FIRST RECORD WITH A SEQUENCE 00562000
NUMBER GREATER THEN OR EQUAL TO N IS FOUND. THIS WILL BE THE FIRST      00563000
RECORD ACCEPTED AFTER THAT VOID .                                       00564000
* 4                                                                     00565000
NEW TAPE = A NEW SOURCE FILE WILL BE CREATED ON TAPE.                   00566000
* 4                                                                     00567000
NEW=A NEW SOURCE FILE WILL BE CREATED ON TAPE, UNLESS NEW IS            00568000
FOLLOWED BY "DISK", "DISC", OR "PUNCH" (SEE BELOW).                     00569000
* 4                                                                     00570000
NEW PUNCH= A NEW SOURCE FILE WILL BE CREATED ON PUNCHED CARDS           00571000
ON THE FILE "PNCH".                                                     00572000
* 4                                                                     00573000
NEW DISK, NEW DISC= A NEW SOURCE FILE WILL BE CREATED ON DISK.          00574000
* 3                                                                     00575000
NEW PATCHTAPE = A TAPE EQUIVALENT TO A PATCH DECK WILL BE CREATED, IE TH00576000
E DOLLAR CARDS AND BLANKS WILL NOT BE THROWN AWAY.  NOTE, HOWEVER,      00577000
THAT THE VOID OPTION IS NOT AVAILABLE IN THE MIDDLE OF A NEW PATCHTAPE  00578000
CREATION RUN, SINCE THE $VOID CARD WILL JUST BE COPIED ONTO             00579000
THE NEW FILE.                                                           00580000
MAINTENANCE OF A PATCHTAPE CREATED BY THIS CONTROL IS ACHIEVED          00581000
BY A $ TAPE NEW PATCHTAPE CONTROL, SINCE THE TAPE IS SIMILAR TO         00582000
THE TAPE CREATED BY $ NEW TAPE.  THE ONLY DIFFERENCE IS THAT THE        00583000
 $ CARD RECORDS ARE INCLUDED AS REGULAR RECORDS.                        00584000
IF RESEQ OR RESEQUENCE IS USED,                                         00585000
CARDS WITH BLANK SEQUENCE NUMBERS WILL BE                               00586000
    SEQUENCED IN STEPS OF THE GIVEN INCREMENT (2 IS DEFAULT CONDITION)  00587000
    STARTING WITH THE SEQUENCE NUMBER OF THE                            00588000
LAST SEQUENCED CARD.  NO OTHER RESEQUENCING WILL BE DONE.               00589000
* 3                                                                     00590000
NEW PATCHTAPE PUNCH = THIS WILL PUNCH A DECK FROM THE TAPE "PATCHES",   00591000
INCLUDING $ CARDS.                                                      00592000
* 3                                                                     00593000
NEW PUNCH TAPE = AN UNLABELLED BINARY TAPE (80 CHARACTERS PER           00594000
PHYSICAL RECORD) WILL BE PRODUCED WHICH MAY BE USED WITH A SUITABLE     00595000
TAPE TO PUNCH PROGRAM ON THE B 5500 OR  B 300 (OR ANY OTHER SYSTEM).    00596000
* 3                                                                     00597000
BACKUP N = IF "BACKUP" FOLLOWS (IMMEDIATELY) THE "$" SIGN ON THE        00598000
FIRST ACCEPTABLE CONTROL CARD THEN A FILE "BACKUP" CREATED DURING       00599000
A PREVIOUS RUN WILL BE PRINTED. N COPIES WILL BE PRINTED. IF N IS       00600000
EMPTY THEN ONE COPY WILL BE PRINTED.                                    00601000
* 3                                                                     00602000
= IF "BACKUP" APPEARS ELSEWHERE ON THE CONTROL CARD THEN ALL OF THE     00603000
PERTINENT CROSS REFERENCE PROGRAM OUTPUT (EXCEPT THE OUTPUT GENERATED   00604000
BY <LIST OPTION>) WILL BE WRITTEN ON A FILE "BACKUP".                   00605000
* 2                                                                     00606000
ALTHOUGH THE BACKUP FACILITY MAY NOT BE REQUIRED BY THE USER, IT MAY HAP00607000
PEN (BECAUSE OF CERTAIN COMBINATIONS OF CONTROL FUNCTION) THAT A TEMPORA00608000
RY BACKUP FILE WILL BE REQUIRED.  IF A <LIST OPTION> IS USED TOGETHER WI00609000
TH A <BLOCK PART>, THE LISTING OF THE SYMBOLIC CODE WILL BE OUTPUT TO   00610000
THE FILE "PRINT" AND THE LISTING OF THE BLOCK DIAGRAM WILL BE PLACED ON 00611000
 A TEMPORARY BACKUP FILE . AT THE END OF THE USE OF THE PRINT FILE THE  00612000
BACKUP FILE IS REWOUND AND COPIED ONTO THE PRINT FILE. IF A BACKUP      00613000
CONTROL APPEARED ON THE CONTROL CARD, THIS LAST COPYING WILL NOT BE     00614000
DONE.  A SIMILAR SITUATION OCCURS IF  "LIST DOCUMENT" APPEARS ON THE    00615000
CONTROL CARD. IN THIS CASE, ONLY THE SYMBOLIC RECORDS WHICH ARE TO BE   00616000
USED FOR THE DOCUMENT ARE LISTED ON THE PRINT FILE AND THE DOCUMENT     00617000
ITSELF IS PLACED ON THE TEMPORARY BACKUP FILE WHICH IS THEN COPIED ONTO 00618000
 THE PRINT FILE.                                                        00619000
*3                                                                      00620000
 BACKUP DISK = IF THE RUN IS TO CREATE A BACKUP, THE BACKUP FILE        00621000
 WILL BE CREATED ON DISK. IF THE BACKUP CONTROL IS                      00622000
 BEING USED TO PRINT A PREVIOUSLY CREATED BACKUP, IT IS                 00623000
 EXPECTED THAT THAT FILE, "BACKUPDISK", WILL BE ON DISK.                00624000
*3                                                                      00625000
   LISTBACKUP = BOTH SOURCE INPUT LISTING AND CROSS REFERENCE OUTPUT WIL00626000
L BE WRITTEN ON THE FILE "BACKUP".                                      00627000
* 4                                                                     00628000
BACKUP UPDATE = PRIOR TO WRITING THE OUTPUT FROM THE PRESENT RUN ON THE 00629000
FILE "BACKUP", THE CONTENTS OF A BACKUP FILE FROM A PREVIOUS RUN IS     00630000
COPIED ONTO THE NEW BACKUP FILE.                                        00631000
* 4                                                                     00632000
PRINT = THE PROGRAM OUTPUT WILL BE WRITTEN ON THE FILE "PRINT" WHICH    00633000
IS NORMALLY THE LINE PRINTER OR THE MCP PRINTER BACKUP TAPE.            00634000
IF NEITHER BACKUP                                                       00635000
NOR PRINT APPEARS ON THE CONTROL CARD, A PRINT OPTION WILL BE           00636000
SUPPLIED.                                                               00637000
*4                                                                      00638000
MAKE IRFILE = THIS CONSTRUCTION IS RESERVED FOR FUTURE IMPLEMENTATION.  00639000
* 4                                                                     00640000
BLOCK N = A BLOCK DIAGRAM WILL BE DRAWN GIVING ALL THE BEGIN AND END    00641000
SEQUENCE NUMBERS AND ALL PROCEDURE IDENTIFIERS AT THE PLACE WHERE THEY  00642000
HAVE BEEN DECLARED. EACH BEGIN WILL BE INDENTED N COLS FROM THE PRECEEDI00643000
NG BEGIN. IF N IS <EMPTY>, N IS SET TO 2.                               00644000
* 3                                                                     00645000
SIX N = A PRINTER CONTROL TAPE ALLOWING SIX LINES PER INCH SHOULD BE    00646000
USED FOR ALL OUTPUT LISTINGS. SINGLE SPACE PRINTING IS ASSUMED. UNLESS  00647000
"SIX" IS USED PRINTER OUTPUT WITH EIGHT LINES PER INCH (DOUBLE SPACE)   00648000
IS ASSUMED.                                                             00649000
    IF N IS NOT EMPTY, IT IS USED AS THE MAXIMUM NUMBER OF LINES        00650000
    PER PAGE.  THIS WILL ONLY AFFECT DOCUMENTS.                         00651000
    IN COUNTING LINES THE USER SHOULD REALIZE THAT ONE LINE IS ALWAYS   00652000
    WRITTEN ABOVE THE PAGE NUMBER, EITHER THE TITLE OR A BLANK LINE.    00653000
    (THIS IS TO PROVIDE A CONSISTENT FORMAT FOR MERGE RUNS).            00654000
*3                                                                      00655000
EIGHT N = EIGHT LINES PER INCH WILL BE FORMATED.  IF N IS NOT EMPTY,    00656000
    IT IS USED AS THE MAXIMUM NUMBER OF LINES PER PAGE.                 00657000
    THIS WILL ONLY AFFECT DOCUMENTS.                                    00658000
*3                                                                      00659000
SINGLE = OUTPUT WILL BE SINGLE SPACED.                                  00660000
*3                                                                      00661000
DOUBLE = THE OUTPUT WILL BE DOUBLE SPACED.                              00662000
* 2                                                                     00663000
    THE FOLLOWING FIVE  CONTROLS SHOULD ONLY BE USED TO ASSIST IN       00664000
MAINTAINING THE CROSS REFERENCE AND EDITING PROGRAM AND SHOULD NOT      00665000
NORMALLY BE USED DURING A "PRODUCTION RUN".                             00666000
* 3                                                                     00667000
DUMP = DUMP THE SYMBOL TABLES AND ALL OTHER GLOBAL ARRAYS USED IN THE   00668000
PROGRAM.  THE DUMP WILL BE OF THE FILE "PRINT" AND OCCURS AT THE END OF 00669000
 THE RUN (THE DUMP IS IN OCTAL).                                        00670000
* 4                                                                     00671000
MONITOR = MONITOR ALL THE NON STREAM PROCEDURE PROCEDURES IN THE PROGRAM00672000
.  THIS WILL SHOW THE FLOW OF CONTROL THROUGH THE PROGRAM.              00673000
* 4                                                                     00674000
BUGS = EACH TIME AN IDENTIFIER IS ADDED TO THE SYMBOL TABLE, IT IS ALSO 00675000
WRITTEN ON THE FILE "PRINT".                                            00676000
* 4                                                                     00677000
DEBUG = EACH TIME A CALL IS MADE ON THE PROCEDURE SCAN, THE OUTPUT      00678000
PARAMETER  VALUES ARE FORMATTED AND WRITTEN ON THE FILE "PRINT". THESE  00679000
PARAMETERS INCLUDE THE FOLLOWING:- THE TYPE OF RESULT FOUND WHETHER AN  00680000
IDENTIFIER,                                                             00681000
A NUMBER OR A SPECIAL CHARACTER AND THE SIZE OF THE ENTITY FOUND,     TH00682000
E ADDRESS OF THE NEXT CHARACTER TO BE SCANNED AND THE ADDRESS OF THE LAS00683000
T CHARACTER POSITION OF THE ARRAY WHICH CAN BE SCANNED.                 00684000
* 3                                                                     00685000
DOCDEBUG = EACH TIME A NEW PAGE IS PRINTED WHEN IN  THE "DOCUMENT"      00686000
MODE (SEE BELOW) EACH COLUMN NUMBER WILL BE PRINTED AT THE HEAD OF      00687000
EACH PAGE. THIS ASSISTS IN THE FORMING AND CHECKING OF THE LAYOUT       00688000
OF THE DOCUMENT.                                                        00689000
* 3                                                                     00690000
DEBEATLE = USED IN MERGE OR TRANS RUNS, THIS CONTROL WILL PRINT OUT     00691000
INFORMATION IN INTERMEDIATE STAGES OF PREPARATION FOR A DEBUGGING AID.  00692000
USED IN A DOCUMENT RUN, IT WILL CAUSE THE LINE                          00693000
NUMBERS TO BE PRINTED IN THE RIGHT MARGIN.                              00694000
* 4                                                                     00695000
"HEADER PART" = INFORMATION ENCLOSED BETWEEN THE QUOTES WILL BE         00696000
INCLUDED IN THE HEADING OF EACH PAGE OF OUTPUT WRITTEN ON THE FILES     00697000
"PRINT" AND "BACKUP".                                                   00698000
* 3                                                                     00699000
RESERVED = RESERVED IDENTIFIERS WILL BE INCLUDED IN THE CROSS REFERENCE 00700000
 LISTINGS.       IF THIS FUNCTION IS NOT USED THEN THE IDENTIFIERS      00701000
WHICH   ARE RESERVED WITHIN "STREAM PROCEDURES" ARE NOT CONSIDERED AS   00702000
RESERVED OUTSIDE "STREAM PROCEDURES".                                   00703000
* 3                                                                     00704000
OP,OPS = USED ONLY WITH B3500. CAUSES OPCODES TO BE CROSS REFERENCED.   00705000
* 3                                                                     00706000
LARGE =  TO BE USED IF THE USER  ANTICIPATES THAT THE NUMBER OF         00707000
    CROSS REFERENCE ENTRIES WILL EXCEED 32000 (THE MAXIMUM TABLE SPACE  00708000
PROVIDED). THE ITEMS WILL BE WRITTEN ON A FILE ON THE DISK AND SORTED   00709000
BY USE OF THE "SORT" INTRINSIC FUNCTION NOW PROVIDED BY THE MCP.        00710000
IT APPEARS THAT THIS CONTROL MAY ALSO SHORTEN  THE                      00711000
RUNNING TIME FOR MODERATELY LARGE FILES.                                00712000
AN INTEGER FOLLOWING "LARGE " INDICATES THE CORE SIZE TO BE USED        00713000
IN THE SORT.  DEFAULT CONDITION IS 6000.                                00714000
* 3                                                                     00715000
COMMENT = ALL IDENTIFIERS APPEARING WITHIN "COMMENTS" WILL BE CROSS     00716000
REFERENCED.                                                             00717000
* 3                                                                     00718000
STRING N = ALL STRINGS OF LENGTHS LESS THAN OR EQUAL TO N (INCLUDING    00719000
THE QUOTES) WILL BE CROSS REFERENCED. IF N IS EMPTY IT IS SET EQUAL TO  00720000
EIGHT.                                                                  00721000
* 3                                                                     00722000
BPL = BPL SYMBOLIC FILES ARE TO BE CROSS                                00723000
                                        REFERENCED, (THE RESERVED       00724000
   IDENTIFIER LIST FOR BPL IS DIFFERENT FROM THE RESERVED IDENTIFIER    00725000
    LIST FOR ALGOL).                                                    00726000
*3                                                                      00727000
ESPOL = ESPOL SYMBOLIC FILES ARE TO BE CROSS REFERENCED.                00728000
* 3                                                                     00729000
 COBOL = COBOL SYMBOLIC FILES ARE TO BE CROSS REFERENCED.               00730000
*3                                                                      00731000
B3500 = B3500 ASSEMBLY CODE FILES ARE TO BE CROSS REFERENCED.           00732000
* 3                                                                     00733000
SIMULA   = CROSS REFERENCE SIMULA SOURCE FILES.  THIS  CONTROL          00734000
WILL ACTUALLY CAUSE AN ALGOL CROSS-REFERENCE  BUT WILL TREAT CERTAIN    00735000
ADDITIONAL SIMULA RESERVED WORDS AS STATEMENT-ENDERS.                   00736000
* 3                                                                     00737000
FORTRAN = A FORTRAN SOURCE FILE IS EXPECTED.                            00738000
THE PROGRAM ASSUMES THAT KEY WORDS ARE SEPARATED AS IN ALGOL AND THAT   00739000
KEY WORDS ARE NOT USED AS IDENTIFIERS.                                  00740000
CAUTION:  THE FORTRAN COMPILER DOES NOT BLOCK TAPES AS ALGOL AND        00741000
XREF DO.                                                                00742000
ONLY CARD OR DISK INPUT SHOULD BE USED.                                 00743000
* 3                                                                     00744000
FORTRAN HOL = HOLLERITH CHARACTER SET IS EXPECTED AND                   00745000
TRANSLATED INTO BCL FOR OUTPUT.                                         00746000
*3                                                                      00747000
NUMBERS = CROSS REFERENCE NUMBERS AS WELL AS IDENTIFIERS.               00748000
*3                                                                      00749000
NUMONLY = CROSS REFERENCE NUMBERS ONLY.                                 00750000
*3                                                                      00751000
REMOTE = THIS WAS INTRODUCED FOR USE WITH THE REMOTE PROGRAMMING SYSTEM.00752000
 ALL LISTING WILL BE RESTRICTED TO 80 COLUMNS, THAT IS, ALL OUTPUT      00753000
LISTINGS CAN BE PRINTED ON 8.5 | 11.0 INCH PAPER.                       00754000
* 4                                                                     00755000
COUNT = GATHER STATISTICS ON THE IDENTIFIERS OF THE GIVEN PROGRAM. THIS 00756000
OPTION SHOULD BE USED IF THE TOTAL NUMBER OF CROSS REFERENCE ENTRIES MAY00757000
 BE GREATER THAN 32000, THIS BEING THE LARGEST NUMBER OF ENTRIES WHICH C00758000
AN BE ACCOMODATED BY THE  ARRAYS WITHIN THE PROGRAM. THE COBOL COMPILER 00759000
AND THE MCP ARE SUCH PROGRAMS.  IF THE STATISTICS SHOW THAT            T00760000
HE LIMIT WOULD BE EXCEEDED, THE SELECTED XREF RANGE OF LETTER OPTION  (S00761000
EE BELOW) OR THE LARGE OPTION (SEE ABOVE) SHOULD BE USED.               00762000
A SORTED LIST OF ALL THE IDENTIFIERS WILL BE PRODUCED.                  00763000
* 3                                                                     00764000
IDENTIFIERS = SAME AS COUNT DESCRIBED ABOVE.                            00765000
* 3                                                                     00766000
SORT = ALL IDENTIFIERS IN THE SOURCE FILES WILL BE CROSS REFERENCED     00767000
(INCLUDING                                                              00768000
          RESERVED IDENTIFIERS AND IDENTIFIERS WITHIN COMMENTS).        00769000
THIS CONTROL MAY BE USED IN "FREQUENCY" COUNT EXPERIMENTS.              00770000
*3                                                                      00771000
SHUFFLE = THIS MAY BE USED WITH AN <INPUT SOURCE FILE PART> WHICH       00772000
DENOTES "TAPE" OR "DISK".   NO PATCH CARDS FOR THE SYMBOLIC FILE ARE    00773000
ALLOWED IN                                                              00774000
THE FILE "CARD".                                                        00775000
* SKIP PARAGRAPH 25,67,0 *                                              00776000
THE PURPOSE OF THIS FUNCTION IS TO ALLOW A NEW FILE TO BE CREATED       00777000
BY "SHUFFLING" AN EXISTING TAPE FILE. EACH DATA RECORD IN THE FILE      00778000
"CARD" SHOULD CONTAIN FOUR UNSIGNED INTEGERS SEPARATED BY COMMAS.       00779000
THE SYNTAX FOR THE INTEGERS IS :-                                       00780000
* SKIP INDENT 20                                                        00781000
<OLD START>,<OLD FINISH>,<NEW START>,<INCREMENT>,                       00782000
* SKIP PARAGRAPH 25,67,0 *                                              00783000
ALL RECORDS IN THE EXISTING FILE WITH SEQUENCE NUMBERS IN THE RANGE     00784000
<OLD START> TO                                                          00785000
<OLD FINISH> (INCLUSIVE) WILL BE REPRODUCED AND                         00786000
RESEQUENCED STARTING WITH <NEW START> AND WITH SEQUENCE INCREMENT       00787000
<INCREMENT>.                                                            00788000
* SKIP PARAGRAPH 25,67,0 *                                              00789000
A "NEW PUNCH", "NEW TAPE", OR "NEW DISK" CONTROL SHOULD BE USED WITH    00790000
CONTROL. IF "RESEQ" OR "RESEQUENCE" IS USED THEN <NEW START> AND        00791000
<INCREMENT> ARE IGNORED (THEIR POSITIONS ON THE DATA CARD MUST BE       00792000
REPLACED BY COMMAS).                                                    00793000
* 4                                                                     00794000
XREF C = CROSS REFERENCE ONLY THE IDENTIFIERS WHOSE INITIAL LETTER IS A 00795000
"C" OR WHATEVER SINGLE LETTER IS SPECIFIED.                             00796000
* 4                                                                     00797000
XREF B TO R = CROSS REFERENCE ALL THE IDENTIFIERS WHOSE INITIAL LETTER  00798000
FALLS WITHIN THE RANGE "B" TO "R" INCLUSIVE (OR WHATEVER RANGE IS SPECIF00799000
IED).                                                                   00800000
* 4                                                                     00801000
PROCEDURE =  CROSS REFERENCE ONLY PROCEDURE IDENTIFIERS.                00802000
* 4                                                                     00803000
NAMES = CROSS REFERENCE ONLY A SELECTED SET OF IDENTIFIERS. THESE       00804000
IDENTIFIERS FOLLOW THE "NAMES" OPTION AND ARE TERMINATED BY AN ASTERISK 00805000
 "*". IF REQUIRED, THESE NAMES MAY BE PLACED ON CONTINUATION CARDS AS   00806000
MENTIONED ABOVE.                                                        00807000
* 3                                                                     00808000
PATCH = ALL RECORDS CONTAINED ON "TAPE" OR "CAST" FILES HAVING SEQUENCE 00809000
 NUMBERS EQUAL TO THE SEQUENCE NUMBERS ON THE "PATCH" CARDS IN THE      00810000
"CARD" FILE WILL BE PUNCHED.                                            00811000
THIS MAY BE USED WHEN SIMILAR CONSTRUCTS ON MANY RECORDS HAVE TO BE     00812000
CHANGED. AN EXAMPLE WOULD BE WHEN A TWO-DIMENSIONAL ARRAY               00813000
A[I,J] IS TO BE CHANGED TO A                                            00814000
ONE DIMENSIONAL ARRAY A[I]. IN THIS CASE CROSS REFERENCE LISTING WILL   00815000
SHOE THE SEQUENCE NUMBERS WHERE "A" IS USED.  A SET OF BLANK PATCH      00816000
CARDS ARE PREPARED CONTAINING THESE SEQUENCE NUMBERS AND BY USING       00817000
THE "PATCH" CONTROL THE PERTINENT RECORDS WILL BE PUNCHED. THESE MAY    00818000
THEN BE CORRECTED AND USED AS NEW PATCH CARDS TO RECOMPILE THE PROGRAM. 00819000
* 3                                                                     00820000
NAMEPUNCH = THE RECORD CORRESPONDING TO EVERY SEQUENCE NUMBER           00821000
ENTERED IN THE CROSS REFERENCE TABLE WILL BE PUNCHED. THIS OPTION SHOULD00822000
 BE USED WITH THE "NAMES" OPTION IF CORRECTIONS HAVE TO BE MADE TO THE  00823000
RECORDS. IF AN IDENTIFIER APPEARS MORE THAN ONCE ON A RECORD ONLY       00824000
ONE COPY OF THE RECORD WILL BE PUNCHED.                                 00825000
* 3                                                                     00826000
NAMEPUNCH BLANK =THIS CONTROL PUNCHES OUT BLANK CARDS WITH THE          00827000
SEQUENCE NUMBERS OF ALL CARDS HAVING THE NAMED IDENTIFIERS.             00828000
* 3                                                                     00829000
DOCONLY = SEMICOLONS ARE USED (IN ALGOL AND ESPOL) TO TERMINATE         00830000
COMMENTS, THUS IF SEMICOLONS ARE TO BE INCLUDED WITHIN DOCUMENT COMMENTS00831000
 THE "PERCENT" DOCUMENT CONTROL DESCRIBED IN PART 2 SHOULD BE USED.     00832000
HOWEVER, IF THE "DOCUMENT" IS NOT PART OF AN ALGOL OR ESPOL SYMBOLIC    00833000
PROGRAM BUT IS SELF-SUFFICIENT (FOR EXAMPLE, PRODUCT SPECIFICATIONS,    00834000
PROGRAMMING MANUALS, ETC.), THEN SEMICOLONS MAY BE USED WITHIN THESE    00835000
DOCUMENTS IF THE "DOCONLY" CONTROL IS USED. THE CONTROL INHIBITS THE    00836000
CHECKING OF SEMICOLONS IN THE DOCUMENT.                                 00837000
* 4                                                                     00838000
DOCUMENT = PRODUCE A DOCUMENT           BY SCANNING THE SOURCE INPUT TO 00839000
FIND COMMENTS SUCH AS ARE DESCRIBED IN PART 2 OF THIS DOCUMENT.         00840000
* 3                                                                     00841000
DOCUMENT "MANUAL" = THIS CONTROL ASSUMES THAT STRINGS                   00842000
IDENTIFY THE VARIOUS DOCUMENTS ON THE SOURCE FILE.  DOCUMENT            00843000
"MANUAL" WILL PRODUCE ONLY THAT DOCUMENT LABELLED WITH THE STRING       00844000
"MANUAL".  THIS LABELLING IS DONE BY PLACING THE DESIRED STRING AFTER   00845000
THE "COMMENT DOCUMENT" FOR THAT DOCUMENT, ON THE SAME CARD.  THE        00846000
DOCUMENT TERMINATES WITH THE NEXT "FINISH" OR "QUIT".                   00847000
* 3                                                                     00848000
DOCUMENT "APP-2" TO "APP-5" = PRODUCE DOCUMENTS STARTING WITH THE       00849000
DOCUMENT LABELLED "APP-2" AND                                           00850000
ENDING WITH THAT LABELLED "APP-5".                                      00851000
* 3                                                                     00852000
DOCUMENT FINAL = SAME AS DOCUMENT EXCEPT THAT SEQUENCE NUMBERS ARE      00853000
NOT PRINTED IN THE DOCUMENT. ERROR MESSAGES ARE NOT                     00854000
INHIBITED.                                                              00855000
* 3                                                                     00856000
DOCUMENT CONTENTS ONLY = A DOCUMENT IS GENERATED BUT NOT PRINTED OR     00857000
SAVED BUT THE PERTINENT "TABLE OF CONTENTS" ARE PRINTED                 00858000
ON THE FILE "PRINT".                                                    00859000
* 3                                                                     00860000
DOCUMENT SYNTAX =EXTRACT ONLY THE PORTIONS OF THE DOCUMENT WHICH FOLLOW 00861000
  THE USE OF A DOCUMENT <SPECIAL PART> (SEE DOCUMENT CONTROL SYNATX).   00862000
IF THE IDENTIFIER "FINAL" APPEARS AFTER "SYNTAX" THE FINAL DOCUMENT     00863000
  WILL BE PRINTED.                                                      00864000
*3                                                                      00865000
BNF = THE DOCUMENT TO BE CROSS REFERENCED CONSISTS OF BACKUS NORMAL FORM00866000
 SYNTAX SUCH AS THAT ON PAGE SEVEN OF THIS DOCUMENT.  METALINGUISTIC    00867000
VARIABLES WILL BE CROSS REFERENCED.                                     00868000
*3                                                                      00869000
NOJUSTIFY = SUPPRESS JUSTIFICATION OF THE RIGHT MARGIN.                 00870000
* 3                                                                     00871000
SECRET = THIS WILL CAUSE "BURROUGHS CORPORATION:  COMPANY CONFIDENTIAL" 00872000
TO BE PRINTED OUT ON THE SAME LINE AS THE PAGE NUMBER.                  00873000
THIS CONTROL                                                            00874000
     EFFECTIVELY EXCLUDES USE OF THE "DATE" AND "REVISION" OPTIONS.     00875000
*3                                                                      00876000
DOCINDEX  = REPLACE THE REGULAR DOCUMENT CONTROLS CROSS-REFERENCE       00877000
WITH                A CROSS-REFERENCE OF SELECTED ITEMS REQUESTED       00878000
DURING THE COURSE OF THE DOCUMENT (SEE THE CONTROL "NAMES" IN SECTION 2 00879000
OF THIS MANUAL).                                                        00880000
* 3                                                                     00881000
UPDATE = A NEW DOCUMENT IS CREATED FROM SOURCE FILE                     00882000
 AND PATCH CARDS USING SECTIONS OF DOCUMENT BETWEEN "PAGE" OR           00883000
 "INSERTPAGE" CONTROLS AS LOGICAL UNITS. A CONTINUATION PAGE WILL BE    00884000
 GENERATED IF NECESSARY.                                                00885000
                       NOTE THAT THE DOCUMENT WILL BE WRITTEN ON THE    00886000
 FILE "PRINT" UNLESS THE "BACKUP" OUTPUT FILE CONTROL IS USED.          00887000
   THE PROGRAM FORCES BACKUP TO DISK.                                   00888000
 A DIRECTORY IS BUILT DESCRIBING THE DOCUMENT. THIS DIRECTORY IS USED BY00889000
  THE "MERGE" PHASE OF DOCUMENT UPDATING.                               00890000
* 3                                                                     00891000
DOCUMENT XREF = A CROSS REFERENCE LISTING WITH ALL IDENTIFIERS FOUND ON 00892000
 "* CONTROL RECORDS" (SEE PART 2) AND ALSO FOR DOCUMENT "DEFINES".      00893000
NO DOCUMENT WILL BE PRODUCED. THIS CROSS REFERENCE LISTING IS           00894000
SUPPLIED AUTOMATICALLY WITH A "DOCUMENT" RUN BUT IS INHIBITED IN A      00895000
"DOCUMENT FINAL" RUN.                                                   00896000
* 3                                                                     00897000
FLOW = THE SOURCE INPUT FILES ARE TO BE SEARCHED FOR COMMENTS WHICH     00898000
START WITH "COMMENT FLOW". THE CONTENTS OF SUCH COMMENTS SHOULD         00899000
CONTAIN DESCRIPTIONS OF FLOW CHARTS ACCORDING TO THE SYNTAX GIVEN       00900000
IN PART THREE OF THIS DOCUMENT.                                         00901000
* 3                                                                     00902000
FLOW SYNTAX = PERFORM A SYNTAX CHECK ONLY OF THE "COMMENT FLOW"         00903000
COMMENTS. NO FLOW CHARTS WILL BE DRAWN.                                 00904000
* 3                                                                     00905000
FLOW NOBOX = ONLY "TEST"  BOXES AND "LABELS" WILL BE ENCLOSED           00906000
IN BOXES. THE OTHER "BOX" CONTENTS WILL BE CENTERED WITHIN THE          00907000
APPROPRIATE FLOW CHART COLUMN.                                          00908000
* 3                                                                     00909000
ASMFLOW = SAME AS FLOW EXCEPT THAT LABELS MAY  HAVE SPECIAL CHARACTERS  00910000
 IN THEM.                                                               00911000
* 3                                                                     00912000
QFLOW = SAME AS FLOW, BUT DOCUMENT-LIKE EDITING IS DONE                 00913000
ON THE TEXT.  SPECIFICALLY, CERTAIN CHARACTERS ARE COMBINED WITH ITEMS  00914000
FOLLOWING OR PRECEDING THEM (EG "(" ",") AND STRINGS ARE BROKEN UP IF   00915000
NECESSARY TO FIT ON A LINE.                                             00916000
* 3                                                                     00917000
REVISION N = THIS CONTROL CAUSES THE REVISION TO BE WRITTEN             00918000
 AT THE HEAD OF EVERY PAGE. THE REVISION NUMBER IS ASSUMED TO BE ONE    00919000
 IF N IS EMPTY.                                                         00920000
* 3                                                                     00921000
REVISION CLEAR N = THE DOCUMENT WILL BE ASSIGNED THE REVISION N FOR     00922000
PURPOSES OF UDPDATING, BUT THE REVISION WILL NOT BE WRITTEN ON ANY      00923000
 PAGE.                                                                  00924000
* 3                                                                     00925000
TRANS = TRANSLATE B3500 ASSEMBLY LANGUAGE INTO FLOW CHART LANGUAGE.     00926000
* 3                                                                     00927000
SEGS N-M, ...=    TRANSLATE AND FLOWCHART ONLY THE REQUESTED            00928000
SEGMENTS.                                                               00929000
* 3                                                                     00930000
ESCAPE C = IGNORE REMARKS BEGINNING WITH C.                             00931000
*3                                                                      00932000
ESCAPE N C D ... = IGNORE REMARKS BEGINNING WITH ANY OF THE N           00933000
              ENTITIES C, D, .... NO MORE THAN FIVE SUCH                00934000
              ENTITIES MAY BE DESIGNATED.                               00935000
              EXAMPLES MIGHT BE "#", "DEBUG" .                          00936000
* 3                                                                     00937000
DATA= PRINT CONSTANTS, WHICH ARE NORMALLY SUPPRESSED,                   00938000
 AS A TABLE.                                                            00939000
* 3                                                                     00940000
MERGE = THE CONTROL MERGE BASICALLY INITIATES A COMPARISON              00941000
 BETWEEN TWO DOCUMENTS, THE DISK FILES "OLDDOC" AND "NEWDOC".  DURING   00942000
 THIS COMPARISON PAGES OF "NEWDOC" WHICH DIFFER FROM THOSE OF "OLDDOC"  00943000
ARE WRITTEN ON THE DESIGNATED FILE. THIS WILL BE PRINT UNLESS THE       00944000
CONTROL                                                                 00945000
 "BACKUP" IS USED.                                                      00946000
 A CURRENT PAGE REVISION INDEX AND A CHANGE INDEX ARE ALSO WRITTEN.     00947000
IF THE                                                                  00948000
 "REVISION" DOCUMENT CONTROL WAS IN EFFECT DURING THE CREATION          00949000
OF "NEWDOC", THE REVISION IS UPDATED ON THE CHANGED PAGES.              00950000
*2                                                                      00951000
 THE LIST CONTROL HERE ONLY CAUSES THE $ CARD TO BE WRITTEN.            00952000
* 3                                                                     00953000
 DIRECTORY= THE DIRECTORY OF THE FILE "OLDDOC" IS WRITTEN BEFORE THE    00954000
 MERGE IS PERFORMED.                                                    00955000
* 3                                                                     00956000
 DIRECTORY ONLY = THE DIRECTORY                                         00957000
 IS WRITTEN AND MERGE IS SUPPRESSED. THE FILE "NEWDOC" IS NOT NEEDED.   00958000
* 3                                                                     00959000
 PRINTALL = THE MERGE  IS PERFORMED, BUT ALL PAGES, NOT                 00960000
 JUST CHANGED ONES, WILL BE WRITTEN ON THE DESIGNATED FILE.             00961000
* 3                                                                     00962000
PRINTALL ONLY = THE MERGE IS SUPPRESSED AND THE FILE "NEWDOC" IS NOT    00963000
 NEEDED. THIS CONTROL IS EQUIVALENT TO "$BACKUP DISK" EXCEPT            00964000
 THAT THE FILE TO BE PRINTED IS CALLED "OLDDOC " INSTEAD OF             00965000
 "BACKUPDISK".                                                          00966000
* 3                                                                     00967000
 PRINTSELECT = A MERGE IS PERFORMED BUT ONLY THE PAGES                  00968000
 LISTED WILL BE WRITTEN.                                                00969000
* 3                                                                     00970000
 PRINTSELECT ONLY=  MERGE IS SUPPRESSED AND ONLY THE FILE "OLDDOC" IS   00971000
 NEEDED.                                                                00972000
* 3                                                                     00973000
TITLE       = WHEN THE USER KNOWS THAT THE FIRST PAGE OF                00974000
HIS DOCUMENT HAS A TITLE, HE MAY USE THIS CONTROL.  THAT TITLE WILL BE  00975000
READ OFF THE FIRST PAGE OF THE DOCUMENT AND PRINTED AS A HEADING        00976000
IN THE CHANGE AND REVISION INDICES.                                     00977000
* 3                                                                     00978000
DA     = PRODUCE THE TITLE, AS ABOVE.  ALSO, START NUMBERING THE        00979000
CHANGE INDEX WITH .15 AND THE REVISION INDEX WITH .2.                   00980000
* 3                                                                     00981000
MAKEMUL = SAME AS MAKEMULTI.                                            00982000
* 3                                                                     00983000
MAKEMULTI = A MULTIFILE TAPE OR DISK FILE IS CREATED FROM               00984000
INPUT SOURCE FILES SPECIFIED BY DATA CARDS. THE USER MAY                00985000
 HAVE ALL OF HIS SOURCE FILES ON DISK OR ALL OF THEM ON TAPE.           00986000
IN THOSE CASES HE MAY SPECIFY THE <INPUT FILE> ON THE $ CARD.           00987000
IT IS ALSO POSSIBLE TO HAVE THE INPUT SOURCE FILES ON BOTH TAPE AND     00988000
DISK. IN THAT CASE THE USER MUST SPECIFY ON EACH DATA CARD WHERE THAT   00989000
 FILE IS TO BE FOUND.                                                   00990000
* SKIP PARAGRAPH 25,67,0                                                00991000
 THE SYNTAX FOR THE DATA CARDS IS                                       00992000
* SKIP INDENT 20                                                        00993000
<FILE NAME IN>, <FILE NAME OUT> <INPUT PART>                            00994000
<INPUT PART> := ,<INPUT FILE> / <EMPTY>                                 00995000
<FILE NAME IN> ::= <MULTIFILE NAME>/<FILE NAME>                         00996000
<FILE NAME OUT> ::= <MULTIFILE NAME>/<FILE NAME>                        00997000
<MULTIFILE NAME> ::= {GROUP OF CHARACTERS NOT                           00998000
* INDENT 30                                                             00999000
BEGINNING WITH A SPECIAL CHARACTER                                      01000000
AND NOT CONTAINING THE CHARACTERS                                       01001000
"/" OR ","}                                                             01002000
* INDENT 20                                                             01003000
<FILE NAME> := {SAME AS MULTIFILE NAME}                                 01004000
* 2                                                                     01005000
THE CONTROL "LIST" WILL CAUSE A LISTING OF ALL THE FILES MOVED.         01006000
 THE CONTROL "PUNCH" WILL CAUSE A DATA DECK FOR USE WITH THE NEW        01007000
MULTIFILE FILES.                                                        01008000
*2                                                                      01009000
IF THE FILE IS BEING CREATED ON TAPE, ALL FILES MUST HAVE THE SAME      01010000
<MULTIFILE NAME> IN THE <FILE NAME OUT>                                 01011000
*2                                                                      01012000
THE WORD "DIRECTORY" WILL CAUSE A DIRECTORY OF THE NEW MULTIFILE        01013000
 REEL OR DISK FILE TO BE WRITTEN AS THE FIRST MULTIFILE FILE.           01014000
 ITS NAME WILL BE <MULTIFILE NAME>/DIRECTORY.                           01015000
* 3                                                                     01016000
 PPAGES = WHEN A PAGE OVERFLOW OCCURS IN A DOCUMENT,  THE APPROPRIATE   01017000
RECORDS TO CAUSE EXPLICIT PAGING AT THAT POINT ARE WRITTEN ON THE       01018000
 FILE "PRINT".                                                          01019000
*3                                                                      01020000
 PPAGES PUNCH = THE EXPLICIT PAGING CARDS ARE WRITTEN ON "PUNCH".       01021000
* 3                                                                     01022000
PPAGES INSERTPAGE = THE EXPLICIT PAGING RECORDS WRITTEN ON "PRINT"      01023000
 ARE THOSE NECESSARY TO CAUSE THE TYPE OF PAGING DESCRIBED UNDER        01024000
 THE CONTROL"INSERTPAGE" IN PART TWO OF THIS DOCUMENT.                  01025000
* 3                                                                     01026000
 PPAGES INSERTPAGE PUNCH = EXPLICIT INSERTPAGE CARDS ARE WRITTEN ON     01027000
 "PUNCH".                                                               01028000
* PAGEID 1,"APP-1-"                                                     01029000
* 7                                                                     01030000
SAMPLE CROSS REFERENCE LISTINGS.                                        01031000
* 13                                                                    01032000
                        LISTING OF PROCEDURE IDENTIFIERS                01033000
*        SKIP INDENT 10                                                 01034000
                        01251000    2   ASTERCONTROLS                   01035000
                        01785000    1   BEGINCOUNT                      01036000
                        01190000    1   BITFIELDCONVERT                 01037000
                        02266000    1   BLANKMARGINS                    01038000
                        01418000    1   BLANKTEST                       01039000
                        02119000    1   BUILDRESERVED                   01040000
                        01893000    1   BUILDXREF                       01041000
                        01392000    1   CHAREQUAL                       01042000
                        01400000    1   CHARGREAT                       01043000
                        01434000    1   CHECKCHAR                       01044000
                        01450000    1   CHECKCOMMENT                    01045000
                        01428000    1   CHECKDOLLAR                     01046000
                        01135000    1   CLEAR                           01047000
                        01141000    1   CLEARCHAR                       01048000
                        03110000    1   COPY                            01049000
                        02285000    1   COUNTABPOS                      01050000
                        01178000    1   DECTOOCT                        01051000
                        01252000    2   DOCERROR                        01052000
                        01184000    1   DTOCT                           01053000
                        01935000    1   DUMPARRAYROW                    01054000
* 14                                                                    01055000
CROSS REFERENCE STATISTICS.                                             01056000
* SKIP                                                                  01057000
TOTAL NUMBER OF POSSIBLE XREF ENTRIES=       5915                       01058000
NUMBER OF WORDS REQUIRED BY SYMBOL TABLE=    2029                       01059000
NUMBER OF XREF ENTRIES PRINTED BELOW=        5915                       01060000
NUMBER OF CARDS CONTAINING XREFS=            2457                       01061000
NUMBER OF CARD IMAGES SCANNED =              4291                       01062000
NUMBER OF IDENTIFIERS =                       137                       01063000
NUMBER OF XREF PER FIRST LETTER                                         01064000
  LETTER COUNT  LETTER COUNT  LETTER COUNT  LETTER COUNT                01065000
     0     0       1     0       2     0       3     0                  01066000
     4     0       5     0       6     0       7     0                  01067000
     8     0       9     0       #     0       @     0                  01068000
* INVALID 6                                                             01069000
     Q     0       :     0       >     0       }     0                  01070000
     +     0       A   198       B   423       C   597                  01071000
     D   393       E   162       F   246       G    97                  01072000
     H    37       I   233       .     0       [     0                  01073000
     &     0       (     0       <     0       ~     0                  01074000
     |     0       J    31       K     3       L   422                  01075000
     M   255       N   463       O    29       P   701                  01076000
     Q   182       R   316       $     0       *     0                  01077000
     -     0       )     0             0       {     0                  01078000
           0       /     0       S   547       T   338                  01079000
     U    19       V    18       W    38       X   166                  01080000
     Y     0       Z     1       ,     0       %     0                  01081000
     !     0       =     0       ]     0             0                  01082000
* 14                                                                    01083000
LIST OF IDENTIFIERS CROSS REFERENCED                                    01084000
* SKIP                                                                  01085000
A ALLOW AND ARRAY A4                                                    01086000
B BACKUP BACKUPTOG BADRUN BE BEGIN BLANKARRAY BOOLEAN BUILDXREF         01087000
CASTLINKS CCSEQ CERTAIN CLEAR CLOSE CONTCARD CONTIND                    01088000
DATE DBL DEFINE DEFINES DEFUSETOG DI DISCMCP DO DOCBUFF DOCEDIT DOCER   01089000
DOCERROR DOCONLY DOCTOG DOCXREFTOG DOLLARFLAG DOUBLETOG DS DXREF        01090000
DXREFHEAD                                                               01091000
ELSE END EOPROG ETC EXIT                                                01092000
FALSE FERROR FILE FINALDOCTOG FINITOG FIRSTCASTID FIXUNDERLINE FOR      01093000
FORMAT FORMTOG F7                                                       01094000
GENERALISED GLOBE GLOSSTOG GO GOODRUN                                   01095000
I IF IJUNK IMPLEMENTED IN INVTOG I4                                     01096000
LABELUSE LASTDOCER LASTERROR LCSEQ LISTBUFFER LISTCARDTOG LISTOG        01097000
LISTONLYTOG LIT                                                         01098000
MAKE MARKER MAXCOLS MORE MOVEWORDS                                      01099000
N NEWPAGE NEWTOG NLINES NOSPOTOG NOT NTAPE                              01100000
OCTTODEC OR OUT                                                         01101000
PAGE PAGETOG PARAGRAPHS PARINDENT PARLOW PATCHFLAG PATCHTOG PATTER PRINT01102000
PRINTOG PRINTXREF PROCEDURE                                             01103000
Q                                                                       01104000
RELEASE REMOTETOG RESEQTOG RESULT                                       01105000
SBTOG SC SEQ SEQBLANKTOG SEQSPLIT SEQTOG SEQUENCE SETCHAR SI SINGLE     01106000
SKIPTOG SORTSCRAMBLE SPACE SPOOUT START STEP STREAM SWITCH S1 S2        01107000
T TAPE TAPETOG TBUFF THEN TO TOTALERRORS TRUE                           01108000
UNDERBUFF UNDERTOG UNTIL                                                01109000
VOIDTOG                                                                 01110000
WDS WRITE                                                               01111000
XREFHEAD XREFSEQ X16 X2 X22 X40 X8 X80                                  01112000
"    " " " " ERRORS" " LIST" " SECS" "****" "*" "-" "EOJ XREF" "XXXX"   01113000
"21 OCT" "3TAB  " "4FORM " "5CHECK" "5PATCH" "6FORMA" "6REMOT" "6SINGL" 01114000
"8TABUL" "9UNDER"                                                       01115000
* 14                                                                    01116000
BLOCK DIAGRAM.                                                          01117000
* SKIP 2 SINGLE                                                         01118000
00001000      BEGIN                                                     01119000
              .                                                         01120000
01160000      . STREAM PROCEDURE  SEQCOMP                               01121000
              .                                                         01122000
01161000      . BEGIN                                                   01123000
              . .                                                       01124000
01165000      . . BEGIN                                                 01125000
              . . .                                                     01126000
01168000      . . END                                                   01127000
              . .                                                       01128000
01170000      . END                                                     01129000
              .                                                         01130000
01250000      . PROCEDURE  READATAPE                                    01131000
              .                                                         01132000
01251000      . PROCEDURE  ASTERCONTROLS                                01133000
              .                                                         01134000
01252000      . PROCEDURE  DOCERROR                                     01135000
              .                                                         01136000
01255000      . STREAM PROCEDURE  SCANNER                               01137000
              .                                                         01138000
01258000      . BEGIN                                                   01139000
              . .                                                       01140000
01274000      . . BEGIN                                                 01141000
              . . .                                                     01142000
01276000      . . END                                                   01143000
              . .                                                       01144000
01279000      . . BEGIN                                                 01145000
              . . .                                                     01146000
01279000      . . END                                                   01147000
              . .                                                       01148000
01286000      . . BEGIN                                                 01149000
              . . .                                                     01150000
01289000      . . . BEGIN                                               01151000
              . . . .                                                   01152000
01293000      . . . END                                                 01153000
              . . .                                                     01154000
01297000      . . END                                                   01155000
              . .                                                       01156000
01298000      . . BEGIN                                                 01157000
              . . .                                                     01158000
01301000      . . END                                                   01159000
              . .                                                       01160000
01302000      . . BEGIN                                                 01161000
              . . .                                                     01162000
01308000      . . END                                                   01163000
              . .                                                       01164000
01313000      . . BEGIN                                                 01165000
              . . .                                                     01166000
01315000      . . END                                                   01167000
              . .                                                       01168000
01336000      . END                                                     01169000
              .                                                         01170000
01604000      . PROCEDURE  PRINTCASTDIRECTORY                           01171000
              .                                                         01172000
01605000      . BEGIN                                                   01173000
              . .                                                       01174000
01612000      . . BEGIN                                                 01175000
              . . .                                                     01176000
01621000      . . END                                                   01177000
              . .                                                       01178000
01624000      . END                                                     01179000
              .                                                         01180000
04106000      END                                                       01181000
* 14                                                                    01182000
IDENTIFIER CROSS REFERENCE LIST.                                        01183000
* SKIP 2                                                                01184000
BITFIELDCONVERT  (000002)    *01190000* 02668000                        01185000
DUMPARRAYS  (000003)         *00750000**01979000* 04065000              01186000
EOF  (000011)       00974000  01505000  02098000  02110000 *02116000*   01187000
                    03464000  03479000  03876000  03879000 *03887000*   01188000
                   *04028000*                                           01189000
FILE  (000023)      00727000  00728000  00729000  00730000  00731000    01190000
                    00732000  00733000  00734000  00735000  00736000    01191000
                    00737000  00738000  00739000  00740000  00741000    01192000
                    00742000  00743000  00744000  01019000  01058000    01193000
                    01093000  01940000  03413000                        01194000
L  (000027)         01028000  01033000 *01034000* 01038000 *01043000*   01195000
                    01043000  01066000  01072000 *01073000* 01078000    01196000
                   *01082000* 01082000  01259000 *01279000* 01279000    01197000
                    01411000  01413000 *01415000* 01421000  01423000    01198000
                   *01425000* 02269000  02271000 *02273000* 03432000    01199000
                   *03443000* 03446000                                  01200000
NEXT  (000059)      00973000  01464000 *01479000* 01493000  01497000    01201000
                    01629000  01642000  01643000  01645000  02148000    01202000
                    02151000  02154000  02154000  02156000  02160000    01203000
                    02162000  02165000  02210000  02227000  02228000    01204000
                    02230000  02231000  02232000  02233000  02233000    01205000
                    02237000  02251000 *02415000* 02430000  02453000    01206000
                    02819000  02826000  02854000 *02874000* 02891000    01207000
                    02913000  02930000  02979000  02981000  02982000    01208000
                    02985000  02992000  03002000  03019000  03029000    01209000
                    03049000  03052000  03053000  03060000  03061000    01210000
                    03078000  03082000  03083000  03086000  03087000    01211000
                    03099000  03105000 *03899000* 04019000              01212000
READATAPE  (000017)*01250000* 01366000  01368000  01371000  02376000    01213000
                    02415000  02821000  03159000  03160000  03164000    01214000
                    03190000  03285000  03374000  03424000  03425000    01215000
                   *03430000* 03855000                                  01216000
SCANNER  (000002)  *01255000* 01346000                                  01217000
EOJ XREF NO ERRORS 242.00 SECS                                          01218000
* 7                                                                     01219000
SAMPLE ASSEMBLY FLOWCHARTING RUNS                                       01220000
* 1                                                                     01221000
THE CONTROL "TRANS" IS USED TO TRANSLATE B3500 ASSEMBLY LANGUAGE        01222000
PROGRAMS INTO THE XREF FLOWCHART LANGUAGE.                              01223000
THE INPUT FILES, AS USUAL, MAY BE CARD, TAPE (B5500 BLCKED 56,10)       01224000
OR DISK.                                                                01225000
*1                                                                      01226000
IF THE FIRST NON-BLANK CHARACTER AFTER THE OP CODE                      01227000
FIELD ON ANY "REMK" CARD IS AN ASTERISK,"*",                            01228000
THE INPUT RECORD FROM THAT POINT ON WILL BE WRITTEN                     01229000
UNCHANGED ON THE TRANSLATED FILE.                                       01230000
IN THIS WAY ALL THE CONTROLS OF THE FLOWCHART LANGUAGE                  01231000
ARE DIRECTLY AVAILABLE.                                                 01232000
FOR INSTANCE, A TITLE MAY BE DESIGNATED BY                              01233000
HAVING A CARD                                                           01234000
* SKIP INDENT 10                                                        01235000
REMK * TITLE MY PROGRAM *                                               01236000
*1                                                                      01237000
OR THE NUMBER OF COLUMNS TO BE PRINTED PER PAGE                         01238000
MAY BE ASSIGNED BY THE FOLLOWING CARD:                                  01239000
* SKIP INDENT 10                                                        01240000
REMK * MAXCOL 2 *                                                       01241000
* 1                                                                     01242000
IF ONLY THE FINAL FLOWCHART                                             01243000
OUTPUT IS DESIRED, THE CONTROL "$ TAPE TRANS ASMFLOW" MAY               01244000
BE USED.  IF, ON THE OTHER HAND, THE FLOWCHART LANGUAGE FILE IS DESIRED 01245000
FOR LATER HAND-PATCHING, "$ TAPE NEW DISK TRANS" SHOULD BE USED.        01246000
IN THE LATTER CASE A SEPARATE RUN TO DRAW THE FLOWCHART WILL            01247000
BE NECESSARY, USING THE CONTROL                                         01248000
"$ DISK ASMFLOW".                                                       01249000
SEVERAL OPTIONS MAY IN EITHER CASE FOLLOW THE                           01250000
WORD "TRANS":                                                           01251000
*SKIP                                                                   01252000
 $ TAPE TRANS ESCAPE # SEGS 1*ASMFLOW                                   01253000
*6                                                                      01254000
TRANSLATES AND DRAWS ONLY SEGMENT 1 AND IGNORES                         01255000
REMARKS BEGINNING WITH "#".                                             01256000
* SKIP                                                                  01257000
 $ CARD LIST NEW DISK TRANS SEGS 1, 3-6 * DATA                          01258000
* 6                                                                     01259000
 TRANSLATES SEGMENTS 1,3,4,5,6 AND PRINTS CONSTANTS AS TABLES.          01260000
* SKIP                                                                  01261000
 $ DISK NEW DISK TRANS ESCAPE 3 # DEBUG *                               01262000
* 6                                                                     01263000
 TRANSLATES ALL SEGMENTS, IGNORING REMARKS BEGINNING WITH               01264000
"#" OR "DEBUG" AND REMARK FIELDS BEGINNING WITH "*".                    01265000
* 7                                                                     01266000
USE OF THE UPDATE FEATURE                                               01267000
* 1                                                                     01268000
THE MAIN REQUIREMENTS FOR USING THE UPDATE-MERGE FEATURE                01269000
FOR UPDATING DOCUMENTS AND FLOWCHARTS ARE:                              01270000
*6                                                                      01271000
1. ORIGINAL FILES MUST HAVE AN EXPLICIT                                 01272000
"* PAGE", "* OVER PAGE",                                                01273000
OR "* INSERTPAGE" CONTROL AT EACH PAGE BREAK (SEE BELOW).               01274000
*6                                                                      01275000
2. THE ORIGINAL                                                         01276000
DOCUMENT MUST BE CREATED TO BACKUP DISK FROM AN UNPATCHED               01277000
TAPE OR DISK SOURCE, USING THE CONTROL "DOCUMENT UPDATE".               01278000
THE UPDATED OR "NEW" DOCUMENT SHOULD THEN BE CREATED                    01279000
FROM THE SAME SOURCE FILE AND WITH THE SAME $ CARD BUT                  01280000
USING A PATCH DECK AND A DIFFERENT LABEL-EQUATION CARD                  01281000
FOR "BACKUPDISK".                                                       01282000
* 6                                                                     01283000
* 1                                                                     01284000
    AFTER THE MERGE RUN IS MADE, THE FILE WHICH WAS                     01285000
THE NEW DOCUMENT SHOULD BE SAVED, SINCE FOR THE NEXT  PATCH LEVEL IT    01286000
WILL BE THE OLD DOCUMENT (AND THEN ONLY THEN NEW                        01287000
DOCUMENT NEED BE CREATED).                                              01288000
ALSO, A NEW TAPE SHOULD BE MADE, USING THE                              01289000
PATCH DECK, SO THAT ONLY FURTHER CHANGES WILL SHOW UP                   01290000
IN THE NEXT UPDATE.                                                     01291000
*1                                                                      01292000
SINCE " * PAGE" CARDS ARE REQUIRED ON THE SYMBOLIC,                     01293000
A SPECIAL CONTROL EXISTS TO PUNCH THEM OUT DURING                       01294000
A DOCUMENT RUN.                                                         01295000
THIS CONTROL, "PPAGES PUNCH", WILL PUNCH                                01296000
" * OVER PAGE" CARDS WITH APPROPRIATE SEQUENCE NUMBERS                  01297000
WHENEVER AUTOMATIC PAGING OCCURS.  IF A CARD OF INPUT CONTRIBUTES       01298000
TWO SUCCESSIVE DOCUMENT PAGES, THE CARD IS SPLIT UP AND PUNCHED.        01299000
A SAMPLE DOLLAR CARD FOR SUCH A RUN IS "$ TAPE PPAGES PUNCH DOCUMENT".  01300000
THE CARDS PUNCHED SHOULD  BE USED AS PATCH CARDS TO                     01301000
MAKE THE ORIGINAL SOURCE FILE TAPE FOR UPDATE RUNS.                     01302000
*13                                                                     01303000
SAMPLE UPDATE RUN                                                       01304000
* SKIP                                                                  01305000
CREATION OF OLD DOCUMENT                                                01306000
* INDENT 5                                                              01307000
*INVALID 1                                                              01308000
Q EXECUTE XREF/JONES                                                    01309000
* INVALID 1                                                             01310000
Q FILE TAPE = MYTAPE                                                    01311000
* INVALID 1                                                             01312000
Q FILE BACKUPDISK = OLD                                                 01313000
* INVALID 1                                                             01314000
Q FILE CARD = MYCARD                                                    01315000
* INVALID 1                                                             01316000
Q DATA MYCARD                                                           01317000
 $ TAPE BACKUP DISK DOCUMENT UPDATE REVISION                            01318000
("NINES" CARD)                                                          01319000
* INVALID 1                                                             01320000
Q END.                                                                  01321000
* SKIP                                                                  01322000
CREATION OF NEW DOCUMENT                                                01323000
* INDENT 5                                                              01324000
* INVALID 1                                                             01325000
Q EXECUTE XREF/JONES                                                    01326000
* INVALID 1                                                             01327000
Q FILE TAPE = MYTAPE                                                    01328000
* INVALID 1                                                             01329000
Q FILE BACKUPDISK = NEW                                                 01330000
* INVALID 1                                                             01331000
Q FILE CARD = MYCARD2                                                   01332000
* INVALID 1                                                             01333000
Q DATA MYCARD2                                                          01334000
 $ TAPE BACKUP DISK DOCUMENT UPDATE REVISION                            01335000
     (PATCH CARDS, ENDING WITH "NINES" CARD)                            01336000
* INVALID 1                                                             01337000
Q END.                                                                  01338000
* SKIP                                                                  01339000
NOW ANY VARIETY OF MERGE CAN BE MADE, EG:                               01340000
* INDENT 5                                                              01341000
* INVALID 1                                                             01342000
Q EXECUTE XREF/JONES                                                    01343000
* INVALID 1                                                             01344000
Q FILE OLDDOC = OLD                                                     01345000
* INVALID 1                                                             01346000
Q FILE NEWDOC= NEW                                                      01347000
* INVALID 1                                                             01348000
Q DATA CARD                                                             01349000
 $ MERGE                                                                01350000
("NINES" CARD )                                                         01351000
* INVALID 1                                                             01352000
Q END.                                                                  01353000
* 13                                                                    01354000
OTHER MERGE EXAMPLES                                                    01355000
* SKIP                                                                  01356000
 $ MERGE PRINTSELECT 1,10,16*                                           01357000
* 6                                                                     01358000
DOES MERGE RUN BUT PRINTS ONLY PAGES 1,10,AND 16.                       01359000
IF THERE ARE DUPLICATE PAGE NUMBERS, ALL WILL BE PRINTED.               01360000
* SKIP                                                                  01361000
 $ MERGE PRINTSELECT 2* ONLY                                            01362000
*6                                                                      01363000
ONLY PAGE 2 IS PRINTED FROM OLDDOC, AND NO MERGE IS MADE.               01364000
* SKIP                                                                  01365000
 $ MERGE DIRECTORY                                                      01366000
* 6                                                                     01367000
THIS WILL WRITE OUT A DIRECTORY OF THE PAGES ON                         01368000
"OLDDOC" AS WELL AS PERFORMING THE STANDARD MERGE.                      01369000
* FINISH ;                                                              01370000
COMMENT   * CONTROL CARDS ;                                             01371000
COMMENT DOCUMENT "PART 2"                                               01372000
* UNDERLINE TITLE CENTER                                                01373000
E.T.M. 279  (20 NOV 1965).                                              01374000
* DEFINE 1 = SKIP 2 PARAGRAPH 5,67,0 *                                  01375000
* DEFINE 2 = SKIP PAR *                                                 01376000
* DEFINE 3 = SKIP GLOSSARY 5,25,67 *                                    01377000
* DEFINE 4 = SKIP GLOS *                                                01378000
* DEFINE 5 = SKIP GLOSSARY 8,30,67 *                                    01379000
* DEFINE 6 = SKIP PARAGRAPH 20,67,0 *                                   01380000
* DEFINE 7 = PAGE INDEX UNDERLINE *                                     01381000
* DEFINE 8 = SKIP GLOSSARY 10,25,67 *                                   01382000
* DEFINE 9 = SKIP GLOSSARY 10,35,67 *                                   01383000
* DEFINE 10 = SKIP 2 TAB 5, 25, 45 *                                    01384000
* DEFINE 11 = SKIP 2 TAB 5,35 *                                         01385000
* DEFINE 12 = SKIP 2 TAB 5 *                                            01386000
* DEFINE 13 = SKIP 2 INDENT 3 INDEX UNDERLINE *                         01387000
* DEFINE 14 = PAGE   INDENT 3 INDEX UNDERLINE *                         01388000
* PAGEID 1,"    2-"                                                     01389000
* PAGE CENTER UNDERLINE                                                 01390000
A CROSS REFERENCE,FLOW CHART AND DOCUMENT EDITING PROGRAM (PART TWO).   01391000
* SKIP CENTER TITLE CLEAR                                               01392000
BY GLYN HUGH JONES AND JOAN G. DUNSHEE                                  01393000
* SKIP CENTER                                                           01394000
TECHNICAL STAFF                                                         01395000
BURROUGHS CORPORATION                                                   01396000
PASADENA                                                                01397000
* SKIP 3 INDEX CENTER UNDERLINE                                         01398000
SUMMARY                                                                 01399000
* 1                                                                     01400000
A    SYNTACTICALLY DEFINED    DOCUMENTATION LANGUAGE IS DESCRIBED       01401000
    TOGETHER WITH A DESCRIPTION                                         01402000
OF THE FACILITIES PRESENTLY AVAILABLE FOR GENERATING AND MAINTAINING    01403000
DOCUMENTS ON A BURROUGHS B5500 COMPUTER.                                01404000
* SKIP 6 TAB 2,40                                                       01405000
AUTHORS:/APPROVED:/                                                     01406000
* SKIP 4 TAB 2,40                                                       01407000
-------------------- / -------------------- /                           01408000
 GLYN H. JONES AND/ J. F. KALBACH/                                      01409000
* SKIP TAB 2,40                                                         01410000
JOAN G. DUNSHEE/ MANAGER,TECHNICAL STAFF/                               01411000
* SKIP 1 INDENT 30                                                      01412000
ORIGINAL ISSUE JAN.25, 1965                                             01413000
FIRST REVISED ISSUE OCT. 27, 1965                                       01414000
SECOND REVISED ISSUE NOV. 21, 1966                                      01415000
THIRD REVISED ISSUE FEB. 16, 1969                                       01416000
* 7                                                                     01417000
   INTRODUCTION                                                         01418000
* 2                                                                     01419000
THERE  HAS ALWAYS BEEN A NEED TO AUTOMATE                               01420000
                                         (AS FAR AS POSSIBLE) THE       01421000
GENERATION AND UPDATING OF DOCUMENTATION RELATING TO THE  DESCRIPTION   01422000
AND OPERATION OF COMPUTER PROGRAMS.                                     01423000
* 2                                                                     01424000
MANY PROBLEMS ARISE WHEN PROGRAM SOURCE DECKS ARE MODIFIED AND THE      01425000
CORRESPONDING DOCUMENTATION CHANGES ARE NOT MADE.  THE PURPOSE          01426000
OF THE DOCUMENT EDITING AND INDEXING PROGRAM DESCRIBED IN THIS NOTE IS  01427000
TO ATTEMPT                                                              01428000
          TO MINIMIZE SUCH PROBLEMS BY COMBINING THE PROGRAM SOURCE     01429000
INPUT AND DOCUMENTATION INPUT ON ONE FILE.                              01430000
* 2                                                                     01431000
A FREE FIELD DOCUMENT CONTROL LANGUAGE HAS BEEN DESIGNED TO ALLOW       01432000
MOST OF THE EDITING FUNCTIONS AVAILABLE TO A TECHNICAL EDITOR AND       01433000
WHICH ALSO ALLOWS THE DOCUMENT ITSELF TO BE IN FREE FIELD FORMAT.       01434000
* 2                                                                     01435000
MOST PROBLEM ORIENTED PROGRAMMING LANGUAGES ALLOW THE INCLUSION OF      01436000
COMMENTS WITHIN THE SOURCE LANGUAGE INPUT. THIS FEATURE IS UTILIZED BY  01437000
THE EDITING PROGRAM. THE EDITING PROGRAM SCANS A GIVEN SOURCE PROGRAM   01438000
INPUT AND IDENTIFIES SUCH COMMENTS WHICH HAVE BEEN FLAGGED AS           01439000
DOCUMENTATION COMMENTS. EMBEDDED WITHIN THESE COMMENTS ARE THE SPECIAL  01440000
EDITING CONTROLS (THESE ARE SYNTACTICALLY DEFINED BELOW).               01441000
* 2                                                                     01442000
THE EDITING PROGRAM IS PRESENTLY SET UP TO SCAN EXTENDED ALGOL PROGRAMS 01443000
WRITTEN FOR THE B5500. HOWEVER, THE PROGRAM CAN BE EASILY MODIFIED TO   01444000
SCAN ANY PROGRAMMING LANGUAGE SOURCE INPUT.                             01445000
* SKIP CENTER                                                           01446000
THIS NOTE IS PRODUCED BY THE EDITING PROGRAM.                           01447000
* 7                                                                     01448000
   MINIMUM SPECIFICATIONS FOR A DOCUMENT EDITING LANGUAGE               01449000
* 2                                                                     01450000
THE LANGUAGE SHOULD BE SIMPLE AND RIGOROUS (FREE FROM AMBIGUITIES).     01451000
* 2                                                                     01452000
NO FIXED FIELD FORMATS SHOULD BE REQUIRED APART FROM THE                01453000
RESTRICTIONS REQUIRED BY THE SIZE OF THE PHYSICAL INPUT MEDIA SUCH AS   01454000
72 COLUMNS OF A CARD.                                                   01455000
* 2                                                                     01456000
THE CHARACTER SET SHOULD ONLY BE LIMITED BY THE SET AVAILABLE ON A GIVEN01457000
 COMPUTER PRINTER.                                                      01458000
* 2                                                                     01459000
DELETIONS,ADDITIONS AND CHANGES SHOULD BE ALLOWED AT ANY PLACE WITHIN   01460000
THE DOCUMENT.                                                           01461000
* 2                                                                     01462000
A TABLE OF CONTENTS (AND POSSIBLY A SELECTED NAME INDEX) SHOULD         01463000
BE GENERATED AUTOMATICALLY BY THE EDITING PROGRAM.                      01464000
* 7                                                                     01465000
SYNTAX CONVENTIONS.                                                     01466000
*1                                                                      01467000
THE SYNTAX OF THE CONTROL CARD                                          01468000
                  LANGUAGE IS DESCRIBED THROUGH THE USE OF METALINGUISTI01469000
C SYMBOLS.  THESE SYMBOLS HAVE THE FOLLOWING MEANINGS:                  01470000
* 1                                                                     01471000
LEFT AND RIGHT BROKEN BRACKETS "<" AND ">" ARE USED TO CONTAIN ONE      01472000
OR MORE CHARACTERS REPRESENTING A METALINGUISTIC VARIABLE WHOSE VALUE   01473000
IS GIVEN BY A METALINGUISTIC FORMULA.                                   01474000
*1                                                                      01475000
THE SYMBOL "::=" MEANS "IS DEFINED TO BE" AND SEPARATES THE METALINGUIST01476000
IC VARIABLE ON THE LEFT OF THE FORMULA FROM ITS DEFINITION ON THE       01477000
RIGHT.                                                                  01478000
*1                                                                      01479000
THE SYMBOL "/" MEANS "OR".  THIS SYMBOL SEPARATES MULTIPLE DEFINITIONS  01480000
OF A METALINGUISTIC VARIABLE.                                           01481000
*1                                                                      01482000
LESS-THAN-OR-EQUAL AND GREATER-THAN-OR-EQUAL SIGNS, "{" AND"}", ARE     01483000
 USED TO ENCLOSE METALINGUISTIC VARIABLES                               01484000
WHICH ARE DEFINED BY THE MEANING OF THE ENGLISH LANGUAGE  EXPRESSION    01485000
CONTAINED WITHIN THE BRACES.  THIS FORMULATION IS USED ONLY WHEN IT IS  01486000
IMPOSSIBLE OR IMPRACTICAL TO USE A METALINGUISTIC FORMULA.              01487000
* 1                                                                     01488000
THE BRACKETS "[" AND "]" ARE USED TO ENCLOSE GROUPS OF                  01489000
METALINGUISTIC VARIABLES WHICH MAY BE PERMUTED IN ANY ORDER. EXAMPLE:   01490000
* SKIP                                                                  01491000
              <D> ::= [<A> B <C>]        IS EQUIVALENT TO :-            01492000
* SKIP                                                                  01493000
              <D> ::= <A> B <C> / <A> <C> B /                           01494000
                      B <A> <C> / B <C> <A> /                           01495000
                      <C> <A> B / <C> B <A>                             01496000
*1                                                                      01497000
THE ABOVE METALINGUISTIC SYMBOLS ARE USED IN FORMING A METALINGUISTIC FO01498000
RMULA.  A METALINGUISTIC FORMULA IS A RULE WHICH WILL PRODUCE AN ALLOWAB01499000
LE SEQUENCE OF CHARACTERS AND/OR SYMBOLS.  THE ENTIRE SET OF SUCH FORMUL01500000
AS DEFINES THE CONSTRUCTS OF THE CONTROL CARDS.                         01501000
*1                                                                      01502000
ANY MARK OR SYMBOL IN A METALINGUISTIC FORMULA WHICH IS NOT ONE OF THE A01503000
BOVE METALINGUISTIC SYMBOLS DENOTES ITSELF.                             01504000
*1                                                                      01505000
CONTROL CARD                                                            01506000
    CONVENTIONS USED IN WRITING SYNTAX ARE ILLUSTRATED BY THE FOLLOWING 01507000
EXAMPLE:                                                                01508000
* SKIP                                                                  01509000
<IDENTIFIER> ::= <LETTER> / <IDENTIFIER><LETTER> / <IDENTIFIER><DIGIT>  01510000
*1                                                                      01511000
THIS METALINGUISTIC FORMULA IS READ AS FOLLOWS: AN IDENTIFIER IS       D01512000
EFINED TO BE A LETTER, OR AN IDENTIFIER FOLLOWED BY A LETTER, OR AN IDEN01513000
TIFIER FOLLOWED BY A DIGIT.                                             01514000
*1                                                                      01515000
THE METALINGUISTIC FORMULA DEFINES A RECURSIVE RELATIONSHIP BY WHICH A C01516000
ONSTRUCT CALLED AN IDENTIFIER MAY BE FORMED.  EVALUATION OF THE FORMULA 01517000
SHOWS THAT AN IDENTIFIER BEGINS WITH A LETTER. THE LETTER MAY STAND ALON01518000
E, OR MAY BE FOLLOWED BY ANY MIXTURE OF LETTERS AND DIGITS.             01519000
* 7                                                                     01520000
   DOCUMENT CONTROL CARD SYNTAX                                         01521000
* SKIP                                                                  01522000
<DOCUMENT CONTROL CARD> ::= * <CONTROL INFO> / * <DEFINE INDEX> /       01523000
                            * DEFINE <DEFINE INDEX> = <CONTROL INFO> *  01524000
<DEFINE INDEX> ::= <UNSIGNED INTEGER>                                   01525000
<CONTROL INFO> ::= <CLOSE PART> / [<HEADING PART> <TAB HEAD>            01526000
              <VERTICAL PAPER CONTROLS> <REVISION PART>                 01527000
              <CODESEQ PART>                                            01528000
              <HORIZONTAL EDITING PART><SPECIAL PART>                   01529000
              <PAGE REVISION PART>] / <INVALID CHAR PART> <ALL PART> /  01530000
              NAMES / <OVER PART>                                       01531000
<CLOSE PART> ::= END / QUIT / FINISH                                    01532000
<INVALID CHAR PART> ::= INVALID <INVALID COL> /                         01533000
                        INVALID <ALL PART> <INVALID COL>/               01534000
                        <INVALID CHAR PART> <SEPARATOR> <INVALID COL>   01535000
<INVALID COL> ::= <UNSIGNED INTEGER>                                    01536000
<ALL PART> ::= ALL / <EMPTY>                                            01537000
<OVER PART> ::= OVER PAGE <PAGE SKIP COUNT> / OVER <INSERT PART>        01538000
<REVISION PART> ::= REV <REVISION LETTER>                               01539000
                    / REV <REVISION LETTER> LEAVE                       01540000
<REVISION LETTER> ::= <LETTER> / *                                      01541000
<PAGE REVISION PART> ::= REVISION <REVISION NUMBER> /                   01542000
                         REVISION CLEAR <REVISION NUMBER>               01543000
<REVISION NUMBER> ::= <UNSIGNED INTEGER> / <EMPTY>                      01544000
<SPECIAL PART> ::= SYNTAX / SYNTAX ONLY /<EMPTY>                        01545000
<HEADING PART> ::= TITLE <COL SKIP COUNT> / INDEX <INDEX LINE COUNT> /  01546000
                   INDEX ONLY / INDEX WORDS <UNSIGNED INTEGER> /        01547000
                   TITLE CLEAR / <EMPTY>                                01548000
<COL SKIP COUNT> ::= <UNSIGNED INTEGER> / <EMPTY>                       01549000
<INDEX LINE COUNT> ::= <UNSIGNED INTEGER> / <EMPTY>                     01550000
<TAB HEAD> ::= TABHEAD <TAB HEAD COUNT> <TAB HEAD LINE POSITION>        01551000
               / TABHEAD CLEAR                                          01552000
              / TABHEAD CLEAR <TAB CLEAR COUNT>                         01553000
<TAB HEAD COUNT> ::= <UNSIGNED INTEGER> / <EMPTY>                       01554000
<TAB HEAD LINE POSITION> ::= , <UNSIGNED INTEGER> / <EMPTY>             01555000
<TAB CLEAR COUNT> ::= <UNSIGNED INTEGER>                                01556000
<VERTICAL PAPER CONTROLS> ::= [<DATE PART> <SKIP PART> <UNDERLINE PART> 01557000
                               <MISS PART> <PUNCH PART>                 01558000
                               <DOC LINE CONTROLS> <PAGE CONTROL>]      01559000
<DATE PART> ::= DATE / DATE CLEAR / <EMPTY>                             01560000
<PAGE PART> ::= PAGE <PAGE SKIP COUNT> / PAGE NO / <PAGEID PART> /      01561000
                 ENDPAGE <ROW SKIP COUNT> / <INSERT PART> / <EMPTY>     01562000
<PAGEID PART> ::= PAGEID <PAGE NUMBER>, <ID POSITION> <PAGE IDENT>      01563000
<PAGE INCREMENT> ::= <UNSIGNED INTEGER> / <EMPTY>                       01564000
<PAGE SKIP COUNT> ::= <UNSIGNED INTEGER> / <EMPTY>                      01565000
<PAGE NUMBER> ::= <UNSIGNED INTEGER>                                    01566000
<ID POSITION> ::= + / <EMPTY>                                           01567000
<PAGE IDENT> ::= { A STRING OF UP TO SIX CHRACTERS BOUNDED BY QUOTES}   01568000
<PAGE CONTROL>  ::= PAGEINC <PAGE INCREMENT> <PAGE PART>                01569000
                    <PAGE NMBR FORMAT>                                  01570000
<INSERT PART>  ::= INSERTPAGE <PAGE NUMBER> <INSERT SKIP COUNT>         01571000
                    / INSERTPAGE                                        01572000
<INSERT SKIP COUNT>   ::= , <PAGE SKIP COUNT> / <EMTY>                  01573000
<PAGE NMBR FORMAT> ::= DECIMALS <PLACES> <SUPPRESS PART> / DECIMALS     01574000
                       <SUPPRESS PART> / <EMPTY>                        01575000
<PLACES>  ::= {UNSIGNED INTEGER EIGHT OR LESS}                          01576000
<SUPPRESS PART> ::= SUPPRESS / <EMPTY>                                  01577000
<SKIP PART> ::= SKIP <ROW SKIP COUNT> / <EMPTY>                         01578000
<ROW SKIP COUNT> ::= <UNSIGNED INTEGER> / <EMPTY>                       01579000
<UNDERLINE PART> ::= UNDERLINE / <EMPTY>                                01580000
<MISS PART> ::= MISS / MISS ALL / MISS <ROW SKIP COUNT>                 01581000
<PUNCH PART> ::= DOCPUNCH / NODOCPUNCH                                  01582000
<DOC LINE CONTROLS> ::= SINGLE / DOUBLE / <EMPTY>                       01583000
<PAGE LINE COUNT> ::= <UNSIGNED INTEGER> / <EMPTY>                      01584000
<HORIZONTAL EDITING PART> ::= [<PERCENT PART> <LINE EDITING PART>] /    01585000
                               <TEXT EDITING PART>                      01586000
<PERCENT PART> ::= PERCENT / <EMPTY>                                    01587000
<LINE EDITING PART> ::= CENTER / CENTRE / INDENT <COL SKIP COUNT> /     01588000
                        WIDE / <TAB PART> / <FORMAT PART>               01589000
<FORMAT PART> ::= <FORMAT SPECIFIER> <FORMAT COL> /                     01590000
                  <FORMAT PART> <SEPARATOR> <FORMAT COL>                01591000
<FORMAT SPECIFIER> ::= FORM / FORMAT                                    01592000
<FORMAT COL> ::= <UNSIGNED INTEGER>                                     01593000
<TAB PART> ::= <TAB SPECIFIER> <TAB COL> /                              01594000
               <TAB PART> <SEPARATOR> <TAB COL>                         01595000
<TAB SPECIFIER> ::= TAB / TABULATE                                      01596000
<TAB COL> ::= <UNSIGNED INTEGER>                                        01597000
<SEPARATOR> ::= <EMPTY> / , / -                                         01598000
<TEXT EDITING PART> ::= <PARAGRAPH PART> / <GLOSSARY PART> /            01599000
                        <PATTERN PART> / <CODE PART>                    01600000
<PATTERN PART> ::= PATTERN / PATTERN GLOS                               01601000
<CODESEQ PART> ::= CODESEQ / NOCODESEQ                                  01602000
<CODE PART> ::= CODE / CODE <CODE LINE COUNT>                           01603000
                 / <CODEPERCENT>                                        01604000
<CODE LINE COUNT> ::= <UNSIGNED INTEGER>                                01605000
<GLOSSARY PART> ::= GLOSSARY <GLOSSARY PARAMETERS> / GLOS               01606000
<GLOSSARY PARAMETERS> ::= <GLOS TERM MARGIN> /                          01607000
                          <GLOS TERM MARGIN>, <LEFT MARGIN> /           01608000
                          <GLOS TERM MARGIN>, <LEFT MARGIN>,            01609000
                          <LAST PRINT COL> / <EMPTY>                    01610000
<GLOS TERM MARGIN> ::= <UNSIGNED INTEGER>                               01611000
<PARAGRAPH PART> ::= PAR / PARAGRAPH <PARAGRAPH ID PART>                01612000
                     <PARAGRAPH MARGINS>                                01613000
<PARAGRAPH ID PART> ::= - / <EMPTY>                                     01614000
<PARAGRAPH MARGINS> ::= <LEFT MARGIN> / <LEFT MARGIN> , <LAST PRINT COL>01615000
                        / <LEFT MARGIN>, <LAST PRINT COL>,              01616000
                        <PARAGRAPH INDENT> / <EMPTY>                    01617000
<LEFT MARGIN> ::= <UNSIGNED INTEGER>                                    01618000
<LAST PRINT COL> ::= <UNSIGNED INTEGER>                                 01619000
<PARAGRAPH INDENT> ::= <UNSIGNED INTEGER>                               01620000
<LETTER> ::= A/B/C/D/E/F/G/H/I/J/K/L/M/O/P/Q/R/S/T/U/V/W/X/Y/Z          01621000
<IDENTIFIER> ::= <LETTER> / <IDENTIFIER><LETTER> / <IDENTIFIER><DIGIT>  01622000
<DIGIT> ::= 0/1/2/3/4/5/6/7/8/9                                         01623000
<UNSIGNED INTEGER> ::= <DIGIT> / <UNSIGNED INTEGER><DIGIT>              01624000
* 7                                                                     01625000
EXAMPLES OF DOCUMENT CONTROL CARDS.                                     01626000
* 10                                                                    01627000
 * PAGE / * PAGE 3 / * PAGE NO /                                        01628000
 * TITLE / * TITLE CLEAR //                                             01629000
 * END / * FINISH / * QUIT /                                            01630000
 * SKIP / * SKIP 3 //                                                   01631000
 * UNDERLINE/ * SINGLE / * PERCENT /                                    01632000
 * INVALID 3 / * INVALID 3, 10 /      /                                 01633000
 * CODE / * CODE 5 //                                                   01634000
 * INDEX / * INDEX 3 //                                                 01635000
 * INDENT 10 / * CENTER / * CENTRE /                                    01636000
 * INDEX CENTER /  *  CENTER INDEX //                                   01637000
* TAB 5,25                                                              01638000
 * REVISION 1/ * PAGEINC 100 DECIMALS 2//                               01639000
* TAB 5,25,45                                                           01640000
 * TABHEAD 2,1/ * TABHEAD CLEAR//                                       01641000
* 11                                                                    01642000
 * PAGEID 3, + " OF 14" / * PAGEID 0, "    I-" //                       01643000
 * TAB 3,10,20,40 / * TABULATE 6, 40   , 50 /                           01644000
 * FORM  3 , 10  20, 40 / * FORMAT 6, 40 , 50 /                         01645000
 * PARAGRAPH 5, 65 / * PARAGRAPH   5,65, 0 /                            01646000
 * PARAGRAPH - 10 , 60 / * PAR /                                        01647000
 * GLOSSARY 5, 15 , 60 / * GLOS /                                       01648000
 * PATTERN / * PATTERN GLOS /                                           01649000
* 12                                                                    01650000
 * DEFINE 1 = PAGE SKIP 2 PARAGRAPH 5, 56 *        /                    01651000
 * DEFINE 10 = INDEX 2  CENTER SKIP 2 *   /                             01652000
* 10                                                                    01653000
 * 1 / * 10 / * 12 /                                                    01654000
* 7                                                                     01655000
   DOCUMENT CONTROL CARD SEMANTICS                                      01656000
* 1                                                                     01657000
THE FIRST RECORD OF EACH DOCUMENT STARTS WITH "COMMENT DOCUMENT"        01658000
AND TERMINATES WITH AN "* QUIT" OR "* FINISH".  EACH                    01659000
DOCUMENT MAY BE IDENTIFIED BY A STRING NAME, E.G.,                      01660000
COMMENT DOCUMENT "PART 1".  GROUPS OF CONSECUTIVE                       01661000
DOCUMENTS OR A SINGLE DOCUMENT MAY BE GENERATED BY APPROPRIATE USE      01662000
OF THE <DOCUMENT EDIT TYPE> DESCRIBED IN PART 1 OF THIS MANUAL.         01663000
* 1                                                                     01664000
NORMALLY THE DEFINES TABLES ARE CLEARED AT THE START OF EACH NEW        01665000
DOCUMENT.  A SET OF GLOBAL DEFINES MAY BE USED BY STARTING A            01666000
DOCUMENT WITH "COMMENT DOCUMENT DEFINES".  THE DEFINE                   01667000
TABLES ARE THEN NOT CLEARED AT THE START OF EACH SUBSEQUENT DOCUMENT.   01668000
NEW DEFINES OCCURING IN SUBSEQUENT DOCUMENTS ARE ADDED TO THE DEFINE    01669000
TABLE AND CHANGES TO DEFINES REMAIN AS CHANGES IN THE TABLE.            01670000
* 1                                                                     01671000
THE DOCUMENT                                                            01672000
FORMAT     CONTROLS MAY BE DIVIDED INTO  TWO OPERATIONAL CLASSES.       01673000
SOME CONTROLS GOVERN THE ACTION TO BE TAKEN WITH THE                    01674000
FOLLOWING RECORD (OR A SPECIFIED NUMBER OF RECORDS) AND OTHERS ARE      01675000
OPERATIVE UNTIL A NEW  DOCUMENT CONTROL RECORD IS READ.                 01676000
WHEN A CONTROL RECORD IS READ, ALL FORMAT TOGGLES ARE RESET, AND IF NONE01677000
 OF THE                                                                 01678000
ITEMS ON THE CONTROL ARE RECOGNISED A "STRAIGHT" LISTING WILL BE GIVEN. 01679000
* 2                                                                     01680000
CONTROLS OF THE FIRST TYPE INCLUDE PAGE, INDEX, INDEX  N,               01681000
CODE N, TITLE, SKIP N, DEFINE, DEFINE INDEX, UNDERLINE (SOME CASES),    01682000
AND INVALID.                                                            01683000
* 2                                                                     01684000
CONTROLS OF THE SECOND TYPE INCLUDE PARAGRAPH, GLOSSARY, TABULATE,      01685000
FORMAT, INDENT N, CENTER, SINGLE, CODE, PATTERN, PERCENT.               01686000
* 2                                                                     01687000
A THIRD CLASS OF DOCUMENT CONTROLS IS THOSE WHICH DEAL WITH             01688000
THE DOCUMENT AS A WHOLE OR IN LARGE SUBSECTIONS RATHER THAN WITH        01689000
LOCAL FORMATS.                                                          01690000
THESE REMAIN IN EFFECT UNTIL EXPLICITLY OVERRIDDEN OR RESET.            01691000
EXAMPLES OF THIS TYPE ARE DATE, PAGEID, REVISION, AND DOCPUNCH.         01692000
* 2                                                                     01693000
CONTROLS OF ALL TYPES MAY BE INCLUDED ON ANY DOCUMENT CONTROL RECORD    01694000
(SUBJECT TO THE SYNTAX PRINTED ABOVE).                                  01695000
*2                                                                      01696000
IF MORE THAN ONE "* CONTROL" PRECEDES A GIVEN SECTION OF TEXT,          01697000
THE LAST ONE WILL DETERMINE THE FORMAT.                                 01698000
* 1                                                                     01699000
THERE ARE TWO "MODES" BY WHICH THE DOCUMENT INPUT IS EXAMINED AND THE   01700000
DOCUMENT PRINTED, THEY ARE :-                                           01701000
* SKIP INDENT 10 UNDERLINE                                              01702000
(1) "SCANNING" MODE.                                                    01703000
* 2                                                                     01704000
THE SOURCE INPUT IS "SCANNED" AND ALL UNNECESSARY BLANK SPACES ARE      01705000
LOST.                                                                   01706000
IF AN ASTERISK IS FOUND IN COLUMN ONE, THE                              01707000
 ENTIRE RECORD IS TREATED AS A DOCUMENT CONTROL RECORD. IDENTIFIERS AND 01708000
 NUMBERS MUST BE LESS THAN 63 CHARACTERS IN LENGTH. THEY  MAY BE        01709000
SPLIT OVER CONSECUTIVE RECORDS AND COLUMN ONE IS CONSIDERED AS A        01710000
CONTINUATION OF COLUMN 72 OF THE PREVIOUS RECORD. IF AT LEAST ONE       01711000
SPACE FOLLOWS AN ITEM SCANNED THEN ONE SPACE WILL BE INCLUDED IN THE    01712000
 DOCUMENT.                                                              01713000
* SKIP INDENT 10 UNDERLINE                                              01714000
(2) "LINE" MODE.                                                        01715000
* 2                                                                     01716000
EACH RECORD IS TREATED AS A SELF-CONTAINED UNIT. THE RELATIVE POSITION  01717000
OF DATA WITHIN THE RECORDS MAY BE CHANGED BY SOME OF THE LINE EDITING   01718000
FUNCTIONS AS DESCRIBED BELOW.                                           01719000
* 2                                                                     01720000
 IN EITHER MODE THE USER IS CAUTIONED AGAINST USE OF SPECIAL CHARACTERS 01721000
 IN COLUMN 72. ANY CHARACTER  OTHER THAN A LETTER OR A DIGIT IN THAT    01722000
 POSITION MAY CAUSE INFORMATION TO BE LOST.                             01723000
* 3                                                                     01724000
DATE = THE CURRENT DATE WILL BE PRINTED ON THE SAME LINE AS THE PAGE    01725000
              NUMBERS IN THE EDITED DOCUMENT.                           01726000
* 3                                                                     01727000
DATE CLEAR = THE CURRENT DATE WILL NOT BE PRINTED WITH THE PAGE         01728000
              NUMBERS.                                                  01729000
* 3                                                                     01730000
PAGE N= SKIP TO A NEW PAGE AND INCREASE THE PAGE COUNTER BY N.  IF N IS 01731000
EMPTY THEN N IS SET EQUAL TO  THE CURRENT PAGE INCREMENT.               01732000
 IF N IS GREATER THAN ONE THEN THERE                                    01733000
WILL APPEAR TO BE "GAPS" IN THE DOCUMENT. THIS IS USEFUL WHEN PAGES     01734000
HAVE TO BE INSERTED WHICH HAVE BEEN PREPARED BY SOME OTHER TECHNIQUE    01735000
FOR EXAMPLE GRAPHS, LINE DRAWINGS, TABLES.                              01736000
THE PAGE NUMBER IS SET TO ZERO AT THE START OF A DOCUMENT BUT MAY BE    01737000
RESET BY USE OF THE "PAGEID" CONTROL BELOW. THE CONTENTS OF THE         01738000
TITLE BUFFER IS PRINTED AT THE HEAD OF EACH NEW PAGE (SEE BELOW).       01739000
* 3                                                                     01740000
ENDPAGE N= SKIP TO A NEW PAGE IF AND ONLY IF N (SINGLE SPACED)          01741000
MORE LINES WILL NOT FIT ON THIS PAGE.  THIS CONTROL IS USEFUL FOR       01742000
FIGURES WHICH ARE LESS THAN A FULL PAGE IN SIZE.                        01743000
*3                                                                      01744000
 INSERTPAGE N,M = ASSIGN THE PAGENUMBER N TO THE NEXT PAGE AND CONSIDER 01745000
THAT PAGE AS A LOGICAL UNIT.  USE A PAGEINCREMENT OF  M UNTIL A NEW     01746000
 "PAGE" OR "INSERTPAGE" CONTROL IS FOUND. IF M IS EMPTY IT IS SET       01747000
TO ONE. IF N IS EMPTY IT WILL BE SET TO THE CURRENT NEXT PAGE.          01748000
* 3                                                                     01749000
PAGE NO = SKIP TO A NEW PAGE AND THE PAGE NUMBER IS NOT INCREASED OR    01750000
PRINTED. THIS MAY BE USED TO PRINT UN-NUMBERED TITLE PAGES.             01751000
* 3                                                                     01752000
PAGEINC N = SET THE PAGE INCREMENT COUNTER EQUAL TO N. IF N IS          01753000
EMPTY OR IF THIS CONTROL IS NOT USED AN INCREMENT OF ONE WILL BE USED.  01754000
* 3                                                                     01755000
PAGEID N , + "STRING" = THIS IS TO BE USED TO INITIALIZE THE PAGE       01756000
NUMBERING SYSTEM (IF REQUIRED). THE NEXT PAGE NUMBER TO BE USED IS N.   01757000
THE CONTENTS OF THE STRING (LESS THAN OR EQUAL TO SIX CHARACTERS IN     01758000
LENGTH) IS USED AS PART OF THE PAGE NUMBER. IF THE "+" SIGN IS USED     01759000
THEN THE STRING IS PLACED TO THE RIGHT OF THE PAGE NUMBER AND IF THE "+"01760000
 IS MISSING THE  STRING IS PLACED TO THE LEFT OF THE PAGE NUMBER,       01761000
EXAMPLE :-                                                              01762000
* SKIP TABULATE 10, 36, 50                                              01763000
  PAGEID , + " OF 14" / PRODUCES / 3 OF 14 /                            01764000
   PAGEID 3 , "CHAP 1" / PRODUCES / CHAP 1   3 /                        01765000
* 6                                                                     01766000
IF A "PAGEID" CONTROL IS NOT USED THEN THE PAGE NUMBER WILL BE OF THE   01767000
 FORM "PAGE   3" ETC. THE "PAGEID" CONTROL MAY BE USED TO NUMBER        01768000
PAGES RELATIVE TO NEW SECTIONS OR CHAPTERS.                             01769000
* 3                                                                     01770000
 OVER = THIS CONTOL IS USED ONLY FOLLOWED BY "PAGE" OR "INSERTPAGE"     01771000
 AND CAUSES A NEW PAGE TO BE STARTED WITHOUT DISTURBING                 01772000
 THE CURRENT EDITING CONTROLS.                                          01773000
*3                                                                      01774000
 DECIMALS N = THE PAGE NUMBER WILL BE FORMATTED WITH N PLACES TO THE    01775000
 RIGHT OF THE DECIMAL POINT. IF N IS EMPTY IT IS SET TO TWO.            01776000
* 3                                                                     01777000
SUPPRESS = IF ON ANY PAGE ALL DECIMAL PLACES TO THE RIGHT OF THE DECIMAL01778000
  POINT ARE ZEROES, NEITHER THEY NOR THE DECIMAL POINT WILL BE PRINTED. 01779000
* 3                                                                     01780000
REV E = THIS SHOULD BE USED TO INTRODUCE A REVISION LETTER TO BE        01781000
INCLUDED IN THE EDITED DOCUMENT. ALL EDITED OUTPUT LINES WHICH ARE      01782000
FORMED IN PART BY INPUT RECORDS FROM THE FILE "CARD" (THAT IS, PATCH CAR01783000
DS)                                                                     01784000
   WILL HAVE THE "PATCH LETTER" PRINTED IN COLUMN 81.  IF A "REV" CONTRO01785000
L                                                                       01786000
 IS NOT USED THEN AN "*" WILL BE PRINTED. IT IS ADVISABLE TO USE THE    01787000
"REV" CONTROL AT ONLY ONE PLACE WITHIN A DOCUMENT AS THIS RECORD        01788000
 WILL BECOME PART OF THE PERMANENT FILE. SUBSEQUENT REVISIONS           01789000
SHOULD THEN CONTAIN "PATCHES" FOR THIS RECORD.                          01790000
* 3                                                                     01791000
LEAVE = NORMALLY NO PATCH LETTER (OR "*" FLAG) IS PUT IN THE DOCUMENT   01792000
    WHEN A "FINAL" DOCUMENT RUN IS MADE.  WITH THIS CONTROL,            01793000
THE LETTER WILL BE WRITTEN AT THE END OF THE LINE EVEN IF THE           01794000
CONTROL "FINAL" IS USED.                                                01795000
THIS CONTROL ALSO MOVES THE LETTER INTO COLUMN 77.                      01796000
* 3                                                                     01797000
 REVISION N = THIS CONTROL IS SIMILAR TO DATE IN THAT IT CAUSES THE     01798000
 REVISION TO BE WRITTEN AT THE HEAD OF EVERY PAGE.  THE REVISION NUMBER 01799000
WILL BE ASSUMED TO BE ONE IF N IS EMPTY. NOTE THAT A MERGE WILL         01800000
 CHANGE THE ASSIGNED REVISION LETTER UNLESS IT IS ALREADY HIGHER        01801000
 THAN THAT OF THE LAST DOCUMENT. IF NEITHER THIS NOR THE                01802000
 "REVISION CLEAR" OPTION IS USED, THE PAGE WILL NOT BE ASSIGNED         01803000
ANY REVISION.                                                           01804000
* 3                                                                     01805000
REVISION CLEAR N = THIS CAUSES A REVISION TO BE ASSOCIATED WITH         01806000
EACH PAGE BUT DOES NOT WRITE IT ON THE PAGE.                            01807000
* 3                                                                     01808000
CENTER = CENTER ALL LINES UNTIL A NEW CONTROL IS READ. THE TOTAL WIDTH  01809000
AVAILABLE IS 72 COLUMNS.                                                01810000
* 3                                                                     01811000
CENTRE = SAME AS CENTER.                                                01812000
* 3                                                                     01813000
INDENT N = INDENT EACH LINE N COLUMNS, IF THE RECORD OVERFLOWS PAST     01814000
COLUMN 72 AN ERROR MESSAGE WILL BE GIVEN.                               01815000
* 3                                                                     01816000
WIDE      = TWO SOURCE RECORDS FOR EACH DOCUMENT RECORD WILL BE USED,   01817000
ALLOWING A 120 CHARACTER PRINT LINE.  THE FIRST CARD GIVES POSITIONS    01818000
1-72 AND THE SECOND GIVES THE REST.  THE ONLY POSSIBLE EDITING          01819000
FUNCTIONS ARE TAB AND FORMAT.                                           01820000
IF EITHER RECORD IS BLANK THEN A PERCENT SIGN SHOULD BE PLACED IN       01821000
COLUMN 72. THUS WHEN THE FILE IS RESEQUENCED THE BLANK RECORD WILL NOT  01822000
BE THROWN AWAY. THE WIDE CONTROL EXAMINES COLUMN 72 AND IF THERE IS A   01823000
PERCENT SIGN IT WILL BE BLANKED OUT.                                    01824000
* 3                                                                     01825000
SYNTAX = THE DOCUMENT INPUT FOLLOWING THIS CONTROL IS TO BE USED IN ALL 01826000
"NORMAL" DOCUMENT RUNS AND ONLY THESE SECTIONS WILL BE USED IF          01827000
"DOCUMENT SYNTAX" IS USED ON THE $ CONTROL CARD.                        01828000
* 3                                                                     01829000
SYNTAX ONLY = THE SECTIONS FOLLOWING THIS CONTROL WILL BE IGNORED       01830000
DURING "NORMAL" DOCUMENT RUNS BUT WILL BE INCLUDED DURING               01831000
"DOCUMENT SYNTAX" RUNS. THE USE OF "SYNTAX" IS RATHER UNFORTUNATE. THE  01832000
 FUNCTION WAS INCLUDED SPECIFICALLY FOR USE WITH PROGRAMMING MANUAL     01833000
EDITING BUT MAY BE USED FOR ANY TYPE OF "SUMMARY" DOCUMENTS.            01834000
* 3                                                                     01835000
TITLE N = PLACE THE CONTENTS OF THE FOLLOWING LINE IN THE TITLE BUFFER  01836000
AND INDENT THE TITLE N COLUMNS IN THE BUFFER. THE TITLE BUFFER          01837000
IS PRINTED AT THE HEAD OF EACH NEW PAGE. IF N IS EMPTY THE TITLE WILL BE01838000
  LEFT JUSTIFIED.                                                       01839000
* 3                                                                     01840000
TITLE CENTER = CENTER THE TITLE IN THE TITLE BUFFER.                    01841000
* 3                                                                     01842000
TITLE CLEAR = CLEAR THE TITLE BUFFER WITH BLANKS.                       01843000
* 3                                                                     01844000
* 3                                                                     01845000
SKIP N= SKIP N SINGLE SPACE LINES BEFORE PRINTING THE NEXT LINE. IF N   01846000
IS EMPTY THEN ONE LINE WILL BE SKIPPED. IF A "PAGE" CONTROL APPEARS     01847000
ON THE SAME CONTROL RECORD THEN THE SKIP IS MADE AFTER A NEW PAGE IS    01848000
PRINTED.                                                                01849000
* 3                                                                     01850000
INDEX N= PLACE THE FOLLOWING N EDITED LINES IN THE TABLE OF CONTENTS.   01851000
IF N IS EMPTY IT IS SET EQUAL TO ONE. IF A CENTER OR INDENT CONTROL     01852000
APPEARS ON THE SAME CONTROL RECORD THEN THE ORDER IN WHICH THEY APPEAR  01853000
IS IMPORTANT.                                                           01854000
* SKIP INDENT 20                                                        01855000
 * INDEX INDENT 4                                                       01856000
 * INDEX CENTER                                                         01857000
* 6                                                                     01858000
THESE WILL CAUSE THE RECORDS IN THE BODY OF THE DOCUMENT TO BE          01859000
INDENTED AND CENTERED AND THE ENTRIES IN THE TABLE OF CONTENTS          01860000
TO BE LEFT JUSTIFIED.                                                   01861000
* SKIP INDENT 20                                                        01862000
 * INDENT 4 INDEX                                                       01863000
 * CENTER INDEX                                                         01864000
* 6                                                                     01865000
 THESE ENTRIES WILL BE INDENTED AND CENTERED IN BOTH THE BODY OF THE    01866000
DOCUMENT AND ALSO IN THE TABLE OF CONTENTS.                             01867000
* 3                                                                     01868000
INDEX ONLY    =         THIS CONTROL AFFECTS THE INDENTING IN THE       01869000
INDEX.  WHEN THIS CONTROL IS SEEN AFTER AND  INDENT CONTROL             01870000
HAS ALREADY BEEN PROCESSED, THE FOLLOWING LINES WILL BE INDENTED        01871000
IN THE INDEX BUT NOT IN THE DOCUMENT.                                   01872000
EXAMPLE OF USE: INDENT 5 INDEX ONLY.                                    01873000
* 3                                                                     01874000
INDEX WORDS N = THIS CONTROL IS EFFECTIVE ONLY IN SCANNING MODE.        01875000
IT PLACES WORDS FROM A DOCUMENT LINE INTO THE INDEX UNTIL N BLANK       01876000
SPACES ARE ENCOUNTERED, WHERE BLANKS PRECEDING THE FIRST                01877000
NON-BLANK CHARACTER ARE IGNORED AND A BLANK SPACE IS DEFINED TO BE      01878000
ONE OR MORE BLANK CHARACTERS.                                           01879000
* 4                                                                     01880000
     END  =  SIGNAL THE END OF A DOCUMENT COMMENT.  THE FILE IS SCANNED 01881000
             TO LOOK FOR ANOTHER DOCUMENT COMMENT.                      01882000
* 4                                                                     01883000
     FINISH  =  SIGNAL THE END OF A DOCUMENT. THE TABLE OF CONTENTS WILL01884000
                BE PRINTED.                                             01885000
* 4                                                                     01886000
     QUIT  =  SIGNAL THE END OF THE LAST DOCUMENT CONTAINED ON A        01887000
              PROGRAM SOURCE FILE.                                      01888000
 THE TABLE OF CONTENTS WILL BE PRINTED.                                 01889000
* 3                                                                     01890000
TABHEAD N,M = THE FOLLOWING N LINES (N MAY NOT BE GREATER THAN SIX)     01891000
WILL BE PUT INTO N HEADING BUFFERS STARTING WITH BUFFER M. ALL          01892000
BUFFERS UP TO THE LAST ONE FILLED WILL BE PRINTED AT THE                01893000
HEAD OF                                                                 01894000
 EVERY PAGE UNTIL A "TABHEAD CLEAR" CONTROL IS READ. IF N IS            01895000
 EMPTY THE COUNT IS SET TO ONE.                                         01896000
IF M IS EMPTY, FILLING WILL START WITH THE FIRST BUFFER.                01897000
IF THE WORD " UNDERLINE" IS INCLUDED AMONG THE DOCUMENT                 01898000
CONTROLS ON THE CARD SETTING UP THE TABLE HEAD, THE                     01899000
UNDERLINING WILL ALSO BE CARRIED OVER ONTO NEW PAGES. THE               01900000
UNDERLINING COUNTS AS ONE LINE OF HEADING, SO THAT ONLY FOUR LINES OF   01901000
HEADING MAY BE USED.                                                    01902000
* 3                                                                     01903000
 TABHEAD CLEAR = THE HEADINGS SET UP BY "TABHEAD" WILL NO LONGER        01904000
 BE PRINTED.                                                            01905000
* 3                                                                     01906000
TABHEAD CLEAR N = THE NTH BUFFER AND ALL FOLLOWING IT WILL              01907000
         BE CLEARED AND NO LONGER PRINTED IN THE TAB HEAD.              01908000
* 3                                                                     01909000
SINGLE = PRINT ALL THE FOLLOWING EDITED RECORDS WITH SINGLE SPACE PRINTI01910000
NG UNTIL A NEW "*" CONTROL IS READ.                                     01911000
* 3                                                                     01912000
DOUBLE = PRINT ALL THE FOLLOWING EDITED RECORDS WITH DOUBLE SPACE       01913000
PRINTING. THIS SHOULD BE USED IF "SIX" OR "SINGLE" IS SPECIFIED ON THE  01914000
CONTROLLING "$" CARD (SEE PART ONE).                                    01915000
* 3                                                                     01916000
UNDERLINE N = UNDERLINE ALL THE NON-BLANK CHARACTERS IN THE FOLLOWING   01917000
N EDITED RECORDS. THIS CONTROL IS OPERATIVE WITH ALL "*" CONTROLS       01918000
EXCEPT "PATTERN" AND "PATTERN GLOS". IF TITLE RECORDS ARE TO BE         01919000
UNDERLINED THEN "UNDERLINE" MUST APPEAR WITH AND BEFORE "TITLE"         01920000
ON THE APPROPRIATE TITLE CONTROL RECORD.                                01921000
* 2                                                                     01922000
IF "UNDERLINE" IS USED IN "SCANNING MODE" (THAT IS WITH                 01923000
PARAGRAPH AND GLOSSARY CONTROLS) THEN THE VALUE OF N IS IGNORED AND     01924000
ALL THE EDITED LINES ARE UNDERLINED. IF IN "LINE MODE" N IS EMPTY       01925000
THEN N IS SET EQUAL TO ONE.                                             01926000
*3                                                                      01927000
MISS = SKIP THE NEXT INPUT RECORD.                                      01928000
*3                                                                      01929000
MISS N = SKIP N INPUT RECORDS.                                          01930000
*3                                                                      01931000
MISS ALL = SKIP ALL INPUT RECORDS UNTIL THE NEXT VALID ASTERISK CARD.   01932000
*3                                                                      01933000
DOCPUNCH = PUNCH OUT THE EDITED DOCUMENT LINES ON THE FILE "PNCH".      01934000
THE HEADINGS ARE NOT PUNCHED.  IF 8 NINES ARE FOUND STARTING IN         01935000
COLUMN ONE, THEY ARE MOVED TO                                           01936000
COLUMN 73.                                                              01937000
*3                                                                      01938000
NODOCPUNCH = TURN OFF THE PUNCHING INITIATED BY "DOCPUNCH".             01939000
* 3                                                                     01940000
INVALID N, M = AFTER THE NEXT SOURCE INPUT RECORD IS READ PLACE A       01941000
* INVALID 15                                                            01942000
QUESTION MARK Q IN COLUMNS N AND M BEFORE ANY EDITING FUNCTION IS       01943000
PERFORMED.  A QUESTION MARK MAY NOT BE INCLUDED IN A CARD RECORD AS IT  01944000
IS TREATED BY THE B 5500 MCP AS AN INVALID CHARACTER AND IS ONLY        01945000
ALLOWED FOR MCP CONTROL RECORDS. THE QUESTION MARKS GENERATED BY THE USE01946000
  OF THIS CONTROL ARE NOT INCLUDED IN ANY PERMANENT RECORD (ON TAPE OR C01947000
ARDS) BUT ONLY IN THE DOCUMENT. THE INVALID CONTROL MAY BE INTRODUCED AT01948000
 ANY POSITION WITHIN THE INPUT RECORDS AND WHEN IT IS ENCOUNTERED,      01949000
THE  EDITING CONTROLS WHICH ARE                                         01950000
OPERATIVE ARE NOT RESET. THAT IS, IF QUESTION MARKS ARE TO BE INCLUDED W01951000
ITHIN A PARAGRAPH THE INVALID CONTROL MAY BE INSERTED IN THE BODY       01952000
OF THE PARAGRAPH INPUT RECORDS AND THE PARAGRAPH CONTROL WILL BE        01953000
CONTINUED UNTIL A DOCUMENT CONTROL RECORD OTHER THAN AN INVALID         01954000
CONTROL IS FOUND.                                                       01955000
NOTE THAT THE INVALID CONTROL MUST APPEAR ALONE ON THE CONTROL CARD.    01956000
*3                                                                      01957000
INVALID ALL N,M = SAME AS INVALID N,M ALL.                              01958000
* 3                                                                     01959000
INVALID N, M ALL = ALL SUCCEEDING CARDS  UNTIL THE NEXT ASTERISK        01960000
CONTROL CARD WILL HAVE QUESTION MARKS PLACED IN POSITIONS N AND M.      01961000
* 3                                                                     01962000
NAMES = ALL IDENTIFIERS, STRINGS, AND NUMBERS UP TO THE NEXT ASTERISK   01963000
CONTROL WILL BE CROSS-REFERENCED TO THE CURRENT PAGE IN A SPECIAL       01964000
DOCUMENT INDEX.  THIS INDEX REPLACES THE REGULAR DOCUMENT CONTROLS      01965000
CROSS-REFERENCE AND IS REQUESTED BY THE DOLLAR CARD OPTION "DOCINDEX".  01966000
THE ITEMS UP TO THE NEXT ASTERISK CONTROL ARE NOT PUT INTO THE          01967000
DOCUMENT ITSELF.                                                        01968000
THIS CONTROL WHILE FAR FROM THE AUTOMATIC KEY WORD INDEXING WHICH       01969000
COULD BE PROVIDED, ALLOWS SOME INDEX OF IDENTIFIERS TO BE               01970000
CONSTRUCTED AND KEPT AUTOMATICALLY IN STEP WITH THE                     01971000
DOCUMENT PAGE NUMBERS.                                                  01972000
* 3                                                                     01973000
DEFINE = THIS IS USED AS AN                                             01974000
                           ABBREVIATION AND TO SAVE THE REPEATED        01975000
PREPARATION OF THE SAME CONTROLS. THE FORMAT OF A DEFINE IS :-          01976000
* SKIP INDENT 20                                                        01977000
  * DEFINE <DEFINE INDEX> = <CONTROL INFO> *                            01978000
* 6                                                                     01979000
 THE <DEFINE INDEX> MUST BE AN UNSIGNED INTEGER IN THE RANGE 1 TO 100,  01980000
 AND THE <CONTROL INFO> MAY CONTAIN ANY OF THE DOCUMENT CONTROLS        01981000
EXCEPT "DEFINES" AND THE USE OF "DEFINES", THAT IS ,                    01982000
 THE DEFINE CONTROL MAY NOT BE NESTED AND IS NOT RECURSIVE. THE  DEFINE 01983000
 CONTROLS MAY APPEAR AT ANY PLACE WITHIN THE DOCUMENT SOURCE INPUT      01984000
BUT A DEFINE INDEX MUST HAVE BEEN SPECIFIED IN A DEFINE BEFORE IT IS USE01985000
D.                                                                      01986000
* 3                                                                     01987000
 <DEFINE INDEX> =  THIS IS USED TO CALL OUT A PREVIOUSLY DEFINED        01988000
INDEX. EXAMPLE:-  * 57                                                  01989000
* 3                                                                     01990000
PARAGRAPH -N,M,P = FORM A PARAGRAPH STARTING IN COLUMN N AND ENDING IN C01991000
OLUMN M.                                                                01992000
BECAUSE OF HISTORICAL REASONS, THE RIGHT MARGIN ACTUALLY ENDS IN M+2.   01993000
FOR EXAMPLE, A SPECIFIED MARGIN OF 70 WILL PRINT THE LAST CHARACTER     01994000
IN COLUMN 72.                                                           01995000
INDENT THE FIRST LINE OF THE PARAGRAPH P COLUMNS FROM COLUMN N.         01996000
  THE MINUS SIGN "-" INDICATES THAT THE FIRST ITEM SCANNED (THAT IS     01997000
WHICH IS EMBEDDED BETWEEN BLANKS) WILL SERVE AS A PARAGRAPH             01998000
IDENTIFICATION AND WILL BE PRINTED IN COLUMN ONE.                       01999000
* 6                                                                     02000000
IF ",P" IS EMPTY THEN P IS SET EQUAL TO 6, IF ",M" IS EMPTY THEN M IS   02001000
SET EQUAL TO 72 AND IF "N" IS EMPTY THEN N IS SET EQUAL TO ONE. IF THE  02002000
MINUS SIGN IS MISSING THEN NO PARAGRAPH IDENTIFICATION WILL BE          02003000
PRINTED.                                                                02004000
* 4                                                                     02005000
    PAR  =    FORM A PARAGRAPH IN PRINT POSITIONS AS SET UP BY THE LAST 02006000
              PARAGRAPH CONTROL. IF NO SUCH CONTROL EXISTED THEN THE    02007000
               PRINT POSITIONS ARE SET FOR COLUMNS 1-72.                02008000
* 3                                                                     02009000
GLOSSARY N,M,P = THIS ALLOWS THE INCLUSION OF GLOSSARY TERMS TOGETHER   02010000
WITH THEIR APPROPRIATE DEFINITIONS. THIS             EDITING FUNCTION   02011000
(AND THE PATTERN EDITING FUNCTION DESCRIBED BELOW)                      02012000
       REQUIRES AND CHECKS FOR CONTROLS WITHIN THE BODY OF THE DOCUMENT 02013000
 COMMENT AND NOT ON AN ASTERISK CARD. A GLOSSARY TERM  (THE TERM MAY    02014000
CONSIST OF ONE OR MORE ENTRIES:- IDENTIFIERS, NUMBERS AND SPECIAL       02015000
CHARACTERS EXCEPT "=")   IS SEPARATED FROM ITS DEFINITION BY AN EQUAL   02016000
(=) SIGN.  EXAMPLE:-                                                    02017000
* INDENT 10                                                             02018000
FIELD SIZE = DESCRIPTION OF FIELD SIZE, ETC.                            02019000
* 2                                                                     02020000
THE LAYOUT OF THE GLOSSARY TERMS AND DEFINITIONS ARE DETERMINED BY THE  02021000
VALUE OF THE PARAMETERS N,M,P.  THE GLOSSARY TERM IS INDENTED N        A02022000
ND THE DEFINITION IS FORMED AS A PARAGRAPH WITH THE LEFT HAND MARGIN    02023000
IN COLUMN M AND THE RIGHT HAND MARGIN IN COLUMN P.                      02024000
BECAUSE OF HISTORICAL REASONS, THE RIGHT MARGIN IS ACTUALLY AT P+3.     02025000
FOR EXAMPLE, A SPECIFIED MARGIN OF 69 WILL PLACE THE LAST CHARACTER OF  02026000
EACH LINE IN COLUMN 72.                                                 02027000
THE EQUAL SIGN                                                          02028000
SEPARATING THE TERM AND ITS DEFINITION IS NOT PRINTED. THE PARAMETERS   02029000
MAY ALSO BE OF THE FORM N,M OR N.  IN THESE CASES, THE VALUES OF THE    02030000
MISSING PARAMETERS ARE THOSE WHICH WERE LAST USED BY THE GLOSSARY EDITIN02031000
G FUNCTION. IF NO SUCH VALUES HAVE BEEN SET UP, P WILL BE SET TO 72     02032000
 AND M SET TO L + 6 WHERE L IS THE LENGTH OF THE FIELD REQUIRED BY THE  02033000
GLOSSARY TERM. PLEASE NOTE THAT N,M, AND P MUST BE UNSIGNED INTEGERS.   02034000
* 2                                                                     02035000
IF THE GLOSSARY ITEM IS MISSING AN EQUAL SIGN, THE FIRST LINE OF THAT   02036000
GLOSSARY ENTRY WILL EXTEND FROM N+1 TO P+3 AND ALL FURTHER              02037000
LINES IN THAT ENTRY FROM M TO P+3.                                      02038000
* 4                                                                     02039000
GLOS = THIS IS AN ABBREVIATION FOR A GLOSSARY EDITING FUNCTION. WHEN A  02040000
GLOSSARY EDITING FUNCTION HAS BEEN SET UP AS DESCRIBED ABOVE AND IT IS  02041000
 DESIRED TO REPEAT THE FUNCTION WITH THE SAME PARAMETERS, THIS          02042000
ABBREVIATED FORM MAY BE USED. IF NO PREVIOUS GLOSSARY TERM HAD BEEN USED02043000
 THEN N IS SET TO 1, M IS SET TO L+6, AND P IS SET TO 72.               02044000
* 2                                                                     02045000
THE PARAMETER VALUES FOR THE PARAGRAPH AND GLOSSARY EDITING FUNCTIONS   02046000
ARE SAVED IN DIFFERENT VARIABLES WITHIN THE DOCUMENT EDITING PROGRAM .  02047000
THUS, PAR AND GLOS MAY APPEAR IN ANY ORDER WITHOUT HAVING TO RESPECIFY T02048000
HE PARAMETERS.                                                          02049000
* 3                                                                     02050000
TABULATE N,M,P,Q = EACH OF THE FOLLOWING LINES (UNTIL A NEW CONTROL     02051000
IS READ) IS EDITED ACCORDING TO THE POSITIONS OF "/" IN THE INPUT RECORD02052000
 LINE.                                                                  02053000
IF THERE ARE FOUR <TAB COL>S SPECIFIED IN THE TABULATE CONTROL THEN THE 02054000
 INPUT RECORDS SHOULD CONTAIN AT LEAST FOUR "/" SIGNS, EXAMPLE:-        02055000
* SKIP INDENT 20                                                        02056000
 A/ B /   C/  D  /                                                      02057000
   /  BB/   /  DD/                                                      02058000
* 6                                                                     02059000
"A" WILL BE PLACED IN COLUMN N, "B" IN COLUMN M, "C" IN COLUMN P AND    02060000
 "D" IN COLUMN Q. "BB"STARTING IN COLUMN M AND "DD"STARTING IN COLUMN   02061000
Q.                                                                      02062000
* 6                                                                     02063000
THE FIRST NON BLANK CHARACTERS FOLLOWING A "/" IS PLACED IN THE         02064000
APPROPRIATE TAB COLUMN. (A "/" IS ASSUMED IN COLUMN ZERO, THAT IS, THE  02065000
FIRST NON BLANK CHARACTER IS PLACED IN COLUMN N UNLESS IT IS A "/").    02066000
ERROR MESSAGES ARE PRINTED IF THE LENGTH OF THE "TAB" FIELDS ARE TOO    02067000
SMALL TO ACCOMODATE THE DATA APPEARING BETWEEN THE "/" MARKS.           02068000
* 3                                                                     02069000
TAB N,M,P,Q = SAME AS TABULATE ABOVE.                                   02070000
* 3                                                                     02071000
FORMAT N,M,P,Q = SIMILAR TO TABULATE EXCEPT THAT N,M,P AND Q INDICATE   02072000
THE COLUMNS WHERE THE FIELDS ARE TO END, THAT IS, RIGHT JUSTIFICATION.  02073000
THE CHARACTER APPEARING IMMEDIATELY BEFORE A "/" (A SPACE IS COUNTED AS 02074000
A CHARACTER FOR THIS PURPOSE) IS PLACED IN THE SPECIFIED COLUMN. IF THE 02075000
 EXAMPLE FOR "TABULATE" ABOVE WERE USED WITH A "FORMAT" CONTROL THEN    02076000
"A" WOULD BE PLACED IN COLUMN N, "B" IN COLUMN M-1, "C" IN COLUMN P, AND02077000
 "D" IN COLUMN Q-2.                                                     02078000
* 3                                                                     02079000
 FORM N,M,P,Q = SAME AS FORMAT ABOVE.                                   02080000
* 3                                                                     02081000
CODESEQ= THE SEQUENCE NUMBER OF THE FIRST RECORD                        02082000
CONTRIBUTING TO A CODE, PERCENT, OR CODEPERCENT CONTROL IS              02083000
LISTED IN THE DOCUMENT.                                                 02084000
*3                                                                      02085000
NOCODESEQ=THE SEQUENCE NUMBER OF CODE RECORDS IS NOT LISTED IN          02086000
THE DOCUMENT.  THE TOGGLE SET BY THE CODESEQ CONTROL IS NOT RESET       02087000
BY EACH ASTERISK CONTROL, BUT ONLY BY USING "NOCODESEQ".                02088000
* 4                                                                     02089000
CODE = THIS ALLOWS THE INCLUSION OF LINES OF SYMBOLIC CODE TO BE        02090000
INCLUDED WITHIN THE DOCUMENT. SINCE IT IS UNDESIRABLE TO DUPLICATE ANY  02091000
SUCH SYMBOLIC RECORDS (ONE SET FOR THE ALGOL COMPILER AND THE OTHER SET 02092000
FOR THE DOCUMENT COMMENT), THE FOLLOWING ARTIFICE MAY BE UTILIZED:-     02093000
* 6                                                                     02094000
THE TWO RECORDS PRECEEDING THE CODE TO BE INCLUDED SHOULD HAVE THE      02095000
FOLLOWING FORMAT :-                                                     02096000
* INDENT 20                                                             02097000
   COMMENT DOCUMENT                                                     02098000
   * CODE ETC SC                                                        02099000
* 2                                                                     02100000
  WHERE SC IS A SEMICOLON (CLOSING THE COMMENT FOR ALGOL) AND ETC MAY BE02101000
 OTHER APPROPRIATE EDITING (EXCLUDING <PARAGRAPH> AND <GLOSSARY>)       02102000
FUNCTIONS.                                                              02103000
* 2                                                                     02104000
THE RECORDS FOLLOWING THE LAST CODE RECORD TO BE INCLUDED IN THE DOCUMEN02105000
T SHOULD HAVE A PERCENT SIGN IN COLUMN 1. UNFORTUNATELY, THIS ARTIFICE D02106000
OES NOT LOOK VERY NEAT IN A LISTING PRODUCED BY THE ALGOL COMPILER BUT, 02107000
NEVERTHELESS, IT PROVIDES A MEANS OF DOCUMENTING SECTIONS OF CODE, FOR  02108000
EXAMPLE, COMPLETE PROCEDURE HEADINGS, WITHOUT DUPLICATION OF INFORMATION02109000
. MOST OF PART 4 OF THIS DOCUMENT IS PRODUCED BY THIS ARTIFICE.         02110000
* 3                                                                     02111000
CODE N = READ THE FOLLOWING N SOURCE RECORDS AND INCLUDE THEM IN THE    02112000
DOCUMENT. THIS MAY BE USED TO INCLUDE SUCH THINGS AS PROCEDURE          02113000
HEADINGS. THIS SHOULD BE USED WHEN THE NUMBER OF RECORDS IN THE         02114000
SECTION OF THE CODE TO BE USED IS NOT CHANGING "DYNAMICALLY" BY         02115000
"PATCHING". IN THE CASE WHERE THE NUMBER OF RECORDS IS CHANGING,        02116000
FOR                                                                     02117000
 EXAMPLE WHEN GLOBAL DECLARATIONS ARE TO BE INCLUDED IN THE DOCUMENT    02118000
AND ADDITIONS AND DELETIONS ARE MADE DURING PROGRAM CHECKOUT, THEN THE  02119000
"CODE" CONTROL DESCRIBED ABOVE SHOULD BE USED.                          02120000
* 4                                                                     02121000
PERCENT = IT MAY BE DESIRABLE TO BE ABLE TO INCLUDE                     02122000
                                                  SEMICOLONS WITHIN THE 02123000
BODY OF THE DOCUMENT. UNFORTUNATELY, IF ANY SUCH SEMICOLONS WERE TO     02124000
BE INCLUDED WITHIN THE BODY OF THE DOCUMENT COMMENT, THE FIRST OF ANY   02125000
SUCH SEMICOLONS WOULD TERMINATE THE COMMENT FOR THE ALGOL COMPILER. TO B02126000
E ABLE TO ACCOMODATE SUCH DOCUMENTATION (AN EXAMPLE WOULD BE THE        02127000
DESIRE TO PRINT THE SYNTAX OF A LANGUAGE WHICH USES SEMICOLONS AS       02128000
DELIMITERS OR FOR ANY OTHER REASON), A SPECIAL FEATURE EMPLOYED         02129000
WITHIN THE ALGOL COMPILER IS USED, NAMELY, THE USE OF THE PERCENT SIGN. 02130000
A PERCENT SIGN WHICH APPEARS WITHIN A RECORD, AND WHICH IS NOT EMBEDDED 02131000
WITHIN A STRING, CAUSES THE COMPILER TO TERMINATE SCANNING THAT PARTICUL02132000
AR RECORD. THIS FEATURE, HOWEVER, IS NOT AVAILABLE WITHIN COMMENTS. THIS02133000
 IS A CONVENIENT WAY TO INCLUDE COMMENTS SUCH AS NOTES WHICH INCLUDE SEM02134000
ICOLONS, (THIS MAY BE CLASSED AS A LAZY PROGRAMMERS COMMENT).           02135000
* 2                                                                     02136000
THUS, TO USE THIS EDITING FUNCTION, THE RECORD WHICH CONTAINS THE       02137000
                                                             SEMICOLON  02138000
"PERCENT" EDITING CONTROL MUST ALSO HAVE A SEMICOLON TO CLOSE OUT THE DO02139000
CUMENT COMMENT. THE FOLLOWING RECORDS TO BE INCLUDED WITHIN THE DOCUMENT02140000
 MUST HAVE A PERCENT SIGN IN COLUMN ONE (THIS WILL  NOT BE PRINTED) AND 02141000
THE FIRST RECORD ENCOUNTERED WHICH DOES NOT HAVE A PERCENT SIGN IN COLUM02142000
N ONE (OR A COMMENT STARTING IN COLUMN ONE),                            02143000
       TERMINATES THE RECORD TO BE INCLUDED IN THE DOCUMENT. THE SOURCE 02144000
PROGRAM IS THEN SEARCHED FOR  ANOTHER DOCUMENT COMMENT.                 02145000
* 3                                                                     02146000
CODEPERCENT = THIS IS A COMBINATION OF THE "CODE" AND "PERCENT" CONTROLS02147000
 RECORDS FOLLOWING THIS CONTROL ARE USED IN THE DOCUMENT UNTIL A        02148000
RECORD WITH A PERCENT SIGN IN COLUMN ONE IS ENCOUNTERED. THIS RECORD    02149000
 AND ALL SUBSEQUENT RECORDS WHICH CONTAIL A PERCENT SIGN IN COLUMN ONE  02150000
ARE USED IN THE DOCUMENT  (THE PERCENT SIGN IS BLANKED OUT).            02151000
THE NEXT RECORD WHICH DOES NOT CONTAIN A PERCENT SIGN IN COLUMN ONE     02152000
TERMINATES THE CONTROL.  THE SOURCE FILE IS SCANNED FOR THE NEXT        02153000
"COMMENT DOCUMENT".                                                     02154000
* 3                                                                     02155000
 PATTERN = THIS CONTROL WILL PRODUCE A DIAGRAM SHOWING THE "PACKING"    02156000
OF VARIOUS FIELDS WITHIN A COMPUTER WORD. IT IS ORIENTED TOWARDS A      02157000
48-BIT B5500 WORD. THE BIT POSITIONS ARE NUMBERED FROM 0 TO 47 FROM THE 02158000
 LEFT AND EACH FIELD IS DESCRIBED BY ITS STARTING BIT POSITION,THE LENGT02159000
H OF THE FIELD AND A SYMBOLIC NAME (WHICH MAY BE EMPTY) AND ALSO A SEMAN02160000
TIC DESCRIPTION.                                                        02161000
* 6                                                                     02162000
THE CONTENTS OF THE RECORDS FOLLOWING                                   02163000
                                     A "PATTERN" CONTROL ARE SCANNED    02164000
AND SHOULD COMPLY WITH THE FOLLOWING SYNTAX:                            02165000
* SKIP                                                                  02166000
              <WORD DESCRIPTION>::= <FIELD DESCRIPTION> . /             02167000
                    <FIELD DESCRIPTION> , < WORD DESCRIPTION>           02168000
              <FIELD DESCRIPTION> ::= <LEFT BIT> : <FIELD LENGTH>       02169000
                    <SYMBOLIC NAME> = <SEMANTIC DESCRIPTION>            02170000
              <LEFT BIT> ::= <UNSIGNED INTEGER>                         02171000
              <FIELD LENGTH> ::= <UNSIGNED INTEGER>                     02172000
              <SYMBOLIC NAME> ::= <IDENTIFIER> / <EMPTY>                02173000
              <SEMANTIC  DESCRIPTION> ::= (ANY SEQUENCE OF CHARACTERS   02174000
                     EXCEPT A SEMICOLON OR CROSS-HATCH "#")             02175000
* 6                                                                     02176000
A DETAILED EXAMPLE IS GIVEN IN APP-2-1.                                 02177000
* 3                                                                     02178000
PATTERN GLOS = THE DIAGRAM IS NOT DRAWN AND THE FIELD DESCRIPTIONS      02179000
ARE PRINTED IN A SIMILAR FORMAT TO A GLOSSARY ENTRY,                    02180000
(SEE APP-2-1).                                                          02181000
* PAGEID 1,"APP-2-"                                                     02182000
* PAGE INDEX UNDERLINE                                                  02183000
SAMPLE PATTERN.                                                         02184000
* INDENT 3 SKIP   UNDERLINE INDEX                                       02185000
EXAMPLE OF INPUT TO "* PATTERN".                                        02186000
* SKIP                                                                  02187000
 1:5 = NOT USED # ,                                                     02188000
 6:6 SHEAD = INDEX TO BE USED TO FIND THE STACK HEAD IN THE             02189000
ARRAY "LINKS".  # ,                                                     02190000
 12:6 = NOT USED # ,                                                    02191000
 18:15 FLINK = FORWARD LINK TO BE USED WITH THE ARRAY "WAITLIST".# ,    02192000
 33:15 BLINK = BACKWARD LINK TO BE USED WITH THE ARRAY "WAITLIST".# .   02193000
* INDENT 3 SKIP 2 UNDERLINE INDEX                                       02194000
EXAMPLE OF "* PATTERN".                                                 02195000
* SKIP PATTERN                                                          02196000
 1:5 = NOT USED # ,                                                     02197000
 6:6 SHEAD = INDEX TO BE USED TO FIND THE STACK HEAD IN THE             02198000
ARRAY "LINKS".  # ,                                                     02199000
 12:6 = NOT USED # ,                                                    02200000
 18:15 FLINK = FORWARD LINK TO BE USED WITH THE ARRAY "WAITLIST".# ,    02201000
 33:15 BLINK = BACKWARD LINK TO BE USED WITH THE ARRAY "WAITLIST".# .   02202000
* INDENT 3 SKIP 2 UNDERLINE INDEX                                       02203000
EXAMPLE OF "* PATTERN GLOS".                                            02204000
* SKIP PATTERN GLOS                                                     02205000
 1:5 = NOT USED # ,                                                     02206000
 6:6 SHEAD = INDEX TO BE USED TO FIND THE STACK HEAD IN THE             02207000
ARRAY "LINKS".  # ,                                                     02208000
 12:6 = NOT USED # ,                                                    02209000
 18:15 FLINK = FORWARD LINK TO BE USED WITH THE ARRAY "WAITLIST".# ,    02210000
 33:15 BLINK = BACKWARD LINK TO BE USED WITH THE ARRAY "WAITLIST".# .   02211000
* 14                                                                    02212000
DOCUMENT CONTROLS CROSS REFERENCE LIST.                                 02213000
* SKIP 2                                                                02214000
2  (000019)        *00021000* 00060000  00064000  00072000  00079000    02215000
                    00094000  00097000  00100000  00103000  00105000    02216000
                    00107000  00111000  00115000  00117000  00119000    02217000
                    00186000  00201000  00271000  00299000              02218000
3  (000004)        *00022000* 00206000  00233000  00303000              02219000
4  (000025)        *00023000* 00208000  00211000  00243000  00248000    02220000
                    00252000  00258000  00260000  00262000  00265000    02221000
                    00285000  00289000  00294000  00307000  00310000    02222000
                    00313000  00321000  00326000  00327000  00335000    02223000
                    00338000  00342000  00344000  00349000  00352000    02224000
5  (000001)        *00024000*                                           02225000
CENTER  (000004)    99006000  00032000  00034000  00039000              02226000
DEFINE  (000012)    00020000  00021000  00022000  00023000  00024000    02227000
                    00025000  99002000  00027000  00028000  99003000    02228000
                    99004000  99005000                                  02229000
GLOS  (000002)     *00023000* 00230000                                  02230000
GLOSSARY  (000005) *00022000**00024000**00027000**00028000* 00217000    02231000
INDENT  (000007)    00050000  00052000  00054000  00056000  99093000    02232000
                    00196000  00198000                                  02233000
INDEX  (000001)    *99002000*                                           02234000
PAGE  (000002)     *99002000* 99006000                                  02235000
PAGEID  (000001)    00029000                                            02236000
PAR  (000001)      *00021000*                                           02237000
PARAGRAPH  (000002)*00020000**00025000*                                 02238000
QUIT  (000001)      99108000                                            02239000
SKIP  (000025)     *00020000**00021000**00022000**00023000**00024000*   02240000
                   *00025000**00027000**00028000**99003000**99004000*   02241000
                   *99005000* 00032000  00034000  00039000  00050000    02242000
                    00052000  00054000  00056000  99019000  99021000    02243000
                    99028000  00125000  99093000  00217000  00230000    02244000
TAB  (000003)      *99003000**99004000**99005000*                       02245000
UNDERLINE  (000003)*99002000* 99006000  00039000                        02246000
* FINISH ;                                                              02247000
COMMENT DOCUMENT "PART 3"                                               02248000
* UNDERLINE TITLE CENTER                                                02249000
E.T.M. 279  (20 NOV 1965).                                              02250000
* DEFINE 1 = SKIP 2 PARAGRAPH 5,67,0 *                                  02251000
* DEFINE 2 = SKIP PAR *                                                 02252000
* DEFINE 3 = SKIP GLOSSARY 5,25,67 *                                    02253000
* DEFINE 4 = SKIP GLOS *                                                02254000
* DEFINE 5 = SKIP GLOSSARY 8,30,67 *                                    02255000
* DEFINE 6 = SKIP PARAGRAPH 20,67,0 *                                   02256000
* DEFINE 7 = PAGE INDEX UNDERLINE *                                     02257000
* DEFINE 8 = SKIP GLOSSARY 10,25,67 *                                   02258000
* DEFINE 9 = SKIP GLOSSARY 10,35,67 *                                   02259000
* DEFINE 10 = SKIP 2 TAB 5, 25, 45 *                                    02260000
* DEFINE 11 = SKIP 2 TAB 5,35 *                                         02261000
* DEFINE 12 = SKIP 2 TAB 5 *                                            02262000
* DEFINE 13 = SKIP 2 INDENT 3 INDEX UNDERLINE *                         02263000
* DEFINE 14 = PAGE   INDENT 3 INDEX UNDERLINE *                         02264000
* PAGEID 1, "    3-"                                                    02265000
* PAGE CENTER UNDERLINE                                                 02266000
A CROSS REFERENCE,FLOW CHART AND DOCUMENT EDITING PROGRAM (PART THREE). 02267000
* SKIP CENTER TITLE CLEAR                                               02268000
BY GLYN HUGH JONES AND JOAN G. DUNSHEE                                  02269000
* SKIP CENTER                                                           02270000
TECHNICAL STAFF                                                         02271000
BURROUGHS CORPORATION                                                   02272000
PASADENA                                                                02273000
* SKIP 3 INDEX CENTER UNDERLINE                                         02274000
SUMMARY                                                                 02275000
* 1                                                                     02276000
A    SYNTACTICALLY DEFINED  FLOW CHART      LANGUAGE IS DESCRIBED       02277000
    TOGETHER WITH A DESCRIPTION                                         02278000
OF THE FACILITIES PRESENTLY AVAILABLE FOR GENERATING AND MAINTAINING    02279000
FLOW CHARTS                                                             02280000
          ON A BURROUGHS B5500 COMPUTER.                                02281000
* SKIP 6 TAB 2,40                                                       02282000
AUTHORS:/APPROVED:/                                                     02283000
* SKIP 4 TAB 2,40                                                       02284000
-------------------- / -------------------- /                           02285000
 GLYN H. JONES AND/ J. F. KALBACH/                                      02286000
* SKIP TAB 2,40                                                         02287000
JOAN G. DUNSHEE/ MANAGER,TECHNICAL STAFF/                               02288000
* SKIP 1 INDENT 30                                                      02289000
ORIGINAL ISSUE SEP.27, 1964                                             02290000
FIRST REVISED ISSUE OCT. 27, 1965                                       02291000
SECOND REVISED ISSUE NOV. 21, 1966                                      02292000
THIRD REVISED ISSUE FEB. 16, 1969                                       02293000
* 7                                                                     02294000
   INTRODUCTION                                                         02295000
* 2                                                                     02296000
THERE  HAS ALWAYS BEEN A NEED TO AUTOMATE                               02297000
                                         (AS FAR AS POSSIBLE) THE       02298000
GENERATION AND UPDATING OF FLOW CHARTS   RELATING TO THE  DESCRIPTION   02299000
AND OPERATION OF COMPUTER PROGRAMS.                                     02300000
* 2                                                                     02301000
SEVERAL FLOW CHART GENERATING SYSTEMS HAVE BEEN DEVELOPED,              02302000
SUCH AS "AFLOW", "AUTOCHART", "80FLOW", ETC, TO ASSIST IN THE           02303000
DOCUMENTATION OF COMPUTER PROGRAMS AND SOFTWARE SYSTEMS.                02304000
* 2                                                                     02305000
SEVERAL OF THESE SYSTEMS REQUIRE A CONSIDERABLE EFFORT BY THE           02306000
USER TO LAYOUT THE FLOW CHART AND SUPPLY ALL THE CONNECTION DETAILS     02307000
OR THE USER IS                                                          02308000
            REQUIRED TO USE RESTRICIVE FIXED FIELD INPUT FORMS, OTHERS  02309000
REQUIRE SYNTACTICALLY CORRECT ALGOL OR FORTRAN PROGRAMS AND THESE       02310000
PRODUCE VERY DETAILED FLOW CHARTS.                                      02311000
* 2                                                                     02312000
FLOW CHARTS DESCRIBED USING THE LANGUAGE PRESENTED IN THIS NOTE MAY BE  02313000
EMBEDDED WITHIN "COMMENT" PORTIONS OF THE VARIOUS FREE FIELD            02314000
LANGUAGES SUCH AS ALGOL, ESPOL, AND BPL.                                02315000
* 2                                                                     02316000
THE FLOW CHART GENERATION PORTION                                       02317000
                          OF THE XREF PROGRAM SCANS THE DESIGNATED      02318000
SOURCE INPUT FILES (AS DESCRIBED IN PART ONE) FOR COMMENTS              02319000
WHICH BEGIN WITH "COMMENT FLOW". SUCH COMMENTS ARE USED UNTIL           02320000
A "FINISH" OR "QUIT" IS FOUND. IF A "FINISH" IS FOUND THEN MORE         02321000
FLOWCHART COMMENTS ARE SOUGHT AND IF A "QUIT" IS FOUND THEN             02322000
FLOWCHART GENERATION IS TERMINATED.                                     02323000
SINCE SEMICOLONS ARE NOT DEFINED TO BE REQUIRED IN THE FLOW CHART       02324000
LANGUAGE A SEMI COLON SHOULD FOLLOW THE "FINISH" OR "QUIT"              02325000
TO CLOSE OUT THE COMMENT.                                               02326000
* 7                                                                     02327000
SYNTAX CONVENTIONS.                                                     02328000
*1                                                                      02329000
THE SYNTAX OF THE FLOW CHART                                            02330000
                  LANGUAGE IS DESCRIBED THROUGH THE USE OF METALINGUISTI02331000
C SYMBOLS.  THESE SYMBOLS HAVE THE FOLLOWING MEANINGS:                  02332000
* 1                                                                     02333000
LEFT AND RIGHT BROKEN BRACKETS "<" AND ">" ARE USED TO CONTAIN ONE      02334000
OR MORE CHARACTERS REPRESENTING A METALINGUISTIC VARIABLE WHOSE VALUE   02335000
IS GIVEN BY A METALINGUISTIC FORMULA.                                   02336000
*1                                                                      02337000
THE SYMBOL "::=" MEANS "IS DEFINED TO BE" AND SEPARATES THE METALINGUIST02338000
IC VARIABLE ON THE LEFT OF THE FORMULA FROM ITS DEFINITION ON THE       02339000
RIGHT.                                                                  02340000
*1                                                                      02341000
THE SYMBOL "/" MEANS "OR".  THIS SYMBOL SEPARATES MULTIPLE DEFINITIONS  02342000
OF A METALINGUISTIC VARIABLE.                                           02343000
*1                                                                      02344000
LESS-THAN-OR-EQUAL AND GREATER-THAN-OR-EQUAL SIGNS, "{" AND"}", ARE     02345000
                           USED TO ENCLOSE METALINGUISTIC VARIABLES     02346000
WHICH ARE DEFINED BY THE MEANING OF THE ENGLISH LANGUAGE  EXPRESSION    02347000
CONTAINED WITHIN THE BRACES.  THIS FORMULATION IS USED ONLY WHEN IT IS  02348000
IMPOSSIBLE OR IMPRACTICAL TO USE A METALINGUISTIC FORMULA.              02349000
* 1                                                                     02350000
THE BRACKETS "[" AND "]" ARE USED TO ENCLOSE GROUPS OF                  02351000
METALINGUISTIC VARIABLES WHICH MAY BE PERMUTED IN ANY ORDER. EXAMPLE:   02352000
* SKIP                                                                  02353000
              <D> ::= [<A> B <C>]        IS EQUIVALENT TO :-            02354000
* SKIP                                                                  02355000
              <D> ::= <A> B <C> / <A> <C> B /                           02356000
                      B <A> <C> / B <C> <A> /                           02357000
                      <C> <A> B / <C> B <A>                             02358000
*1                                                                      02359000
THE ABOVE METALINGUISTIC SYMBOLS ARE USED IN FORMING A METALINGUISTIC FO02360000
RMULA.  A METALINGUISTIC FORMULA IS A RULE WHICH WILL PRODUCE AN ALLOWAB02361000
LE SEQUENCE OF CHARACTERS AND/OR SYMBOLS.  THE ENTIRE SET OF SUCH FORMUL02362000
AS DEFINES THE CONSTRUCTS OF THE FLOW CHART LANGUAGE.                   02363000
*1                                                                      02364000
ANY MARK OR SYMBOL IN A METALINGUISTIC FORMULA WHICH IS NOT ONE OF THE A02365000
BOVE METALINGUISTIC SYMBOLS DENOTES ITSELF.                             02366000
*1                                                                      02367000
FLOW CHART                                                              02368000
    CONVENTIONS USED IN WRITING SYNTAX ARE ILLUSTRATED BY THE FOLLOWING 02369000
EXAMPLE:                                                                02370000
* SKIP                                                                  02371000
<IDENTIFIER> ::= <LETTER> / <IDENTIFIER><LETTER> / <IDENTIFIER><DIGIT>  02372000
*1                                                                      02373000
THIS METALINGUISTIC FORMULA IS READ AS FOLLOWS: AN IDENTIFIER IS       D02374000
EFINED TO BE A LETTER, OR AN IDENTIFIER FOLLOWED BY A LETTER, OR AN IDEN02375000
TIFIER FOLLOWED BY A DIGIT.                                             02376000
*1                                                                      02377000
THE METALINGUISTIC FORMULA DEFINES A RECURSIVE RELATIONSHIP BY WHICH A C02378000
ONSTRUCT CALLED AN IDENTIFIER MAY BE FORMED.  EVALUATION OF THE FORMULA 02379000
SHOWS THAT AN IDENTIFIER BEGINS WITH A LETTER. THE LETTER MAY STAND ALON02380000
E, OR MAY BE FOLLOWED BY ANY MIXTURE OF LETTERS AND DIGITS.             02381000
* 7                                                                     02382000
FLOW CHART SYNTAX                                                       02383000
 <FLOW BLOCK>::= "COMMENT FLOW" <START PART> <TITLE PART> *             02384000
                  <FLOW SECTIONS>*<CLOSE PART><SEMICOLON>               02385000
 <START PART> ::= START / START <PAGE ID PART> / <PAGE ID PART> /       02386000
                  <EMPTY>                                               02387000
 <CLOSE PART> ::= QUIT / FINISH / <EMPTY>                               02388000
 <TITLE PART> ::= TITLE <CONTENTS>  / <EMPTY>                           02389000
 <FLOW SECTIONS> ::= <SECTION> / <FLOW SECTIONS> * <SECTION>            02390000
 <SECTION> ::= BEGIN <SECTION BODY>* END                                02391000
 <SECTION BODY> ::= <FLOW BOX> / <SECTION BODY> * <FLOW BOX>            02392000
 <CONTENTS> ::= {ANY STRING OF CHARACTERS NOT CONTAINING "*" OR "%"}    02393000
 <FLOW BOX> ::= <LABEL> : <FUNCTIONAL BOX> / <FUNCTIONAL BOX> /         02394000
                <COMMENT STATEMENT> / <SECTION HEADER> /                02395000
                <PUNCH CONTROL> /                                       02396000
                <CODE PART> <FLOW LINE CONTROLS> /                      02397000
                <TABLE PART> <FLOW LINE CONTROLS>                       02398000
 <SECTION HEADER> ::= HEAD <CONTENTS> / HEADING <CONTENTS>              02399000
 <LABEL> ::= <LETTER> / <LABEL> <LETTER> / <LABEL> <DIGIT>              02400000
 <COMMENT STATEMENT> ::= COMMENT <CONTENTS>                             02401000
 <PUNCH CONTROL> ::= DOCPUNCH / <EMPTY>                                 02402000
 <FUNCTIONAL BOX> ::= <BASIC BOX> / <CONTROL BOX> / <LAYOUT CONTROL>    02403000
 <BASIC BOX> ::= <BASIC BOX PART> <CONTENTS>                            02404000
 <BASIC BOX PART> ::= BOX / <NON-RESERVED WORD>                         02405000
 <NON-RESERVED WORD> ::= {ANY IDENTIFIER NOT USED IN FLOW CHART SYNTAX} 02406000
 <CONTROL BOX> ::=  <TEST BOX> / <SWITCH BOX> / <SIMPLE CONTROL BOX> /  02407000
                   <ENTER BOX> / <EXIT BOX>                             02408000
                     / <ITERATION BOX>                                  02409000
 <SIMPLE CONTROL BOX> ::= <CONTROL TYPE PART> <CONTENTS> /              02410000
                          GO TO <LABEL> / NOTE <CONTENTS>               02411000
 <CONTROL TYPE PART> ::= TERM / TERMINATE / BOXONLY                     02412000
 <TEST BOX> ::= <TEST CUE PART> <TEST BOX PART>                         02413000
                <CONDITIONAL BRANCH PART>                               02414000
 <TEST CUE PART> ::= TEST / IF / IS / DOES / WAS                        02415000
 <TEST BOX PART> ::= {ANY STRING OF CHARACTERS NOT CONTAINING           02416000
                     "*","NO","YES","TRUE","FALSE","THEN"}              02417000
 <CONDITIONAL BRANCH PART> ::= <CONDITION> <ACTION PART>                02418000
 <CONDITION> ::= TRUE / FALSE / YES / NO / THEN                         02419000
 <ACTION PART> ::= GO TO <LABEL> / GO TO <LABEL> ELSE GO TO <LABEL>     02420000
                   / ( <SECTION BODY>*) / (<SECTION BODY>*) ELSE        02421000
                   (<SECTION BODY>*)                                    02422000
 <ITERATION BOX> ::= GENSYM: <TEST CUE PART> <TEST BOX PART>            02423000
                     <CONDITION> (<SECTION BODY>* GO TO GENSYM*)        02424000
 <SWITCH BOX> ::= SWITCH <SWITCH BOX PART> GO TO <SWITCH LIST>          02425000
 <SWITCH BOX PART> ::= {ANY STRING OF CHARACTERS NOT CONTAINING         02426000
                        "*","GO"}                                       02427000
 <SWITCH LIST> ::= <LABEL PART> / <SWITCH LIST>, <LABEL PART>           02428000
 <LABEL PART> ::= <LABEL> / <LABEL> (<LABEL INDEX>)                     02429000
 <LABEL INDEX> ::= {UNSIGNED INTEGER OF NOT MORE THAN 3 DIGITS}         02430000
 <ENTER BOX> ::= ENTER                                                  02431000
 <EXIT BOX> ::= EXIT                                                    02432000
 <LAYOUT CONTROL> ::= <PAGE ID PART> / <PAGE PART> / <COLUMN PART> /    02433000
                      <MAXCOL PART> / <DATE PART> / <LEFTJUSTIFY PART>  02434000
 <DATE PART> ::= DATE / DATE CLEAR / <EMPTY>                            02435000
 <MAXCOL PART> ::= MAXCOL <UNSIGNED INTEGER>                            02436000
 <LEFTJUSTIFY PART> ::= LEFTJUST / LEFTJUST NO                          02437000
 <PAGE PART> ::= PAGE <PAGE SKIP COUNT> / PAGE <INSERT PART> /          02438000
                 PAGEINC <PAGE INCREMENT> / <PAGEID PART> /             02439000
                 PAGE <PAGE NMBR FORMAT> /                              02440000
                 PAGE <INSERT PART> <PAGE NMBR FORMAT> /                02441000
                 <PAGEID PART> <PAGE NMBR FORMAT> / <EMPTY>             02442000
 <PAGE ID PART> ::= PAGEID <PAGE NUMBER> , <ID POSITION> <PAGE IDENT>   02443000
 <PAGE NUMBER> ::= <UNSIGNED INTEGER>                                   02444000
 <ID POSITION> ::= + / <EMPTY>                                          02445000
 <PAGE IDENT>  ::= {A STRING OF UP TO SIX CHARACTERS BOUNDED BY QUOTES} 02446000
 <INSERT PART> ::= INSERTPAGE <PAGE NUMBER> <INSERT SKIP COUNT> /       02447000
                   INSERTPAGE                                           02448000
 <PAGE NMBR FORMAT> ::= DECIMALS / DECIMALS <PLACES>                    02449000
                        / DECIMALS NO                                   02450000
 <PLACES ::= {UNSIGNED INTEGER EIGHT OR LESS}                           02451000
 <INSERT SKIP COUNT> ::= , <PAGE SKIP COUNT> / <EMPTY>                  02452000
 <PAGE SKIP COUNT> ::= <UNSIGNED INTEGER> / <EMPTY>                     02453000
 <PAGE INCREMENT> ::= <UNSIGNED INTEGER> / <EMPTY>                      02454000
 <COLUMN PART> ::= COL / COLUMN                                         02455000
 <CODE PART> ::= CODE / CODE <CODE LINE COUNT>                          02456000
 <CODE LINE COUNT> ::= <UNSIGNED INTEGER>                               02457000
 <TABLE PART> ::= TABLE / TABLE <TABLE LINE COUNT>                      02458000
 <TABLE LINE COUNT> ::= <UNSIGNED INTEGER>                              02459000
 <FLOW LINE CONTROLS> ::= SINGLE / DOUBLE / <EMPTY>                     02460000
 <PAGE LINE COUNT> ::= <UNSIGNED INTEGER> / <EMPTY>                     02461000
 <UNSIGNED INTEGER> ::= <DIGIT> / <UNSIGNED INTEGER><DIGIT>             02462000
 <LETTER> ::= A/B/C/D/E/F/G/H/I/J/K/L/M/N/O/P/Q/R/S/T/U/V/W/X/Y/Z       02463000
 <DIGIT> ::= 0/1/2/3/4/5/6/7/8/9                                        02464000
 <SEMICOLON> ::= {THE USUAL MEANING}                                    02465000
* PAGE UNDERLINE INDEX                                                  02466000
FLOW SEMANTICS                                                          02467000
* 3                                                                     02468000
LEFTJUST = ALL LINES WILL BE LEFT-JUSTIFIED UNTIL A "LEFTJUST NO"       02469000
CONTROL IS READ.                                                        02470000
* 4                                                                     02471000
LEFTJUST NO = RESUME CENTERING OF LINES.                                02472000
* 3                                                                     02473000
DECIMALS N= PAGE NUMBER WILL BE FORMATTED WITH N PLACES TO THE RIGHT    02474000
OF THE DECIMAL POINT. IF N IS EMPTY IT IS SET TO TWO.                   02475000
* 3                                                                     02476000
    INSERTPAGE N,M = ASSIGN THE PAGE NUMBER N TO THE NEXT PAGE AND      02477000
CONSIDER THAT PAGE AS A LOGICAL UNIT.  USE A PAGE INCREMENT OF M UNTIL A02478000
 NEW "PAGE" OR "INSERTPAGE" CONTROL IS FOUND. IF N IS EMPTY IT IS       02479000
SET TO THE CURRENT NEXT PAGE. IF M IS EMPTY IT IS SET TO 1.             02480000
* 3                                                                     02481000
DOCPUNCH =                                                              02482000
IF MAXCOL IS GREATER THAN 2 IT IS RESET TO A VALUE OF 2.                02483000
EACH TIME A FLOW PAGE IS PRINTED IT IS ALSO WRITTEN ON THE FILE PNCH.   02484000
THE RECORDS ARE SEQUENCED IN STEPS OF 10 STARTING WITH 00000010.        02485000
FLOW CHARTS MAY BE GENERATED AND PUNCHED.                               02486000
THE PUNCHED DECK MAY THEN BE USED AS A PATCH DECK TO A DOCUMENT THUS    02487000
ALLOWING FLOW CHARTS AND DOCUMENTS TO BE INTERLEAVED.                   02488000
* 7                                                                     02489000
EXAMPLE OF A FLOW CHART DESCRIPTION.                                    02490000
COMMENT FLOW                                                            02491000
         START                                                          02492000
              PAGEID 1,"APP 3-" *                                       02493000
TITLE         SAMPLE FLOW CHART PRODUCED BY THE XREF PROGRAM *          02494000
         BEGIN                                                          02495000
HEADING       INTRODUCTION TO THE "BOXES" *ENTER*                       02496000
              BOX EACH SECTION IS DELIMITED BY A "BEGIN" AND "END" *    02497000
              BOX SEVERAL "SECTIONS" COMPRISE A FLOW CHART              02498000
              DESCRIPTION AND THE COLLECTION OF THE SECTIONS ARE        02499000
              DELIMITED BY A "START <TITLE PART>" AND A "<FINISH PART>"*02500000
              BOX SEVERAL DIFFERENT TYPES OF "BOXES" ARE ALLOWED        02501000
              AND SAMPLES OF EACH ARE DESCRIBED BELOW * MAXCOL 2 *      02502000
              BOX SUCCESSIVE "BOXES" ARE DELIMITED BY AN "*" *DATE**    02503000
              BOXES WILL BE VERTICALLY CONNECTED IF THEY ARE ENTERED    02504000
              THROUGH AN "ENTER" BOX OR A LABELLED BOX*                 02505000
              BOX THE FIRST IDENTIFIER FOUND AFTER A "*" IS             02506000
              EXAMINED TO SEE IF IT IS FOLLOWED BY A COLON OR IF IT     02507000
              IS A FLOW CHART RESERVED IDENTIFIER.. .  IF IT            02508000
              IS FOLLOWED BY A COLON IT WILL BE CONSIDERED TO BE        02509000
              A LABEL. OTHERWISE, IF IT IS NOT A RESERVED WORD, IT IS   02510000
              ASSUMED TO BE THE FIRST WORD OF TEXT IN A BASIC BOX.  *   02511000
              BOX THE NEXT SECTION WILL SHOW THE VARIOUS BOXES *EXIT*   02512000
         END *                                                          02513000
         BEGIN                                                          02514000
HEADING       SAMPLE OF THE VARIOUS "BOXES". *  ENTER *                 02515000
              BOX A FUNCTIONAL BOX MAY BE A BASIC BOX, A CONTROL BOX,   02516000
              A LAYOUT CONTROL BOX, OR A NOTE BOX*                      02517000
MORE:         DOES A COLON FOLLOW THE FIRST IDENTIFIER                  02518000
              YES GO TO LABLEL*                                         02519000
              TEST TEST WHETHER THE FIRST IDENTIFIER IS "BOX" --        02520000
                   A BASIC RECTANGULAR BOX IS PRODUCED YES GO TO BASIC* 02521000
              TEST IF THE FIRST IDENTIFIER IS "IF," "TEST," "IS,"       02522000
              "WAS," OR "DOES" THEN                                     02523000
              GO TO TESTBOX *                                           02524000
              TEST IF THE FIRST IDENTIFIER IS "SWITCH"                  02525000
              YES GO TO SWITCHL *                                       02526000
              IF THE FIRST IDENTIFIER IS " TERM" OR                     02527000
              "TERMINATE" THEN GO TO TERML*                             02528000
              IF "BOXONLY" THEN GO TO BXONLY*                           02529000
              BOX IF THE FIRST IDENTIFIER IS "COMMENT" THEN THE         02530000
              SOURCE INPUT IS SCANNED UNTIL AN "*" IS FOUND *           02531000
              IF "CODE" OR "TABLE" WAS FOUND ,    TRANSFER CONTROL TO   02532000
              CODEL OR TABLEL NO GO TO CONTIN*  SWITCH                  02533000
              GO TO CODEL (0), TABLEL(1) * COL*                         02534000
CONTIN:       IS LAYOUT CONTROL BOX FOUND YES GO TO LAYLAB*             02535000
              WAS THE FIRST IDENTIFIER "NOTE" YES GO TO NOTEBOX*        02536000
              BOX IF IT WAS "GO TO" GENERATE A TRANSFER.. OTHERWISE     02537000
              IT MUST BE A NON-RESERVED WORD * GO TO BASIC*             02538000
              COL*                                                      02539000
LABLEL:       IF THE LABEL IS "GENSYM" THEN (GENERATE A LABEL*)*PROCESS 02540000
              THE LABEL* GO TO MORE*                                    02541000
              NOTE - THE BASIC PURPOSE OF GENSYM IS TO SIMPLIFY WRITING 02542000
              LOOPS.. IT IS EXPECTED THAT A TEST ON SOME CONTROL        02543000
              VARIABLE WILL BE MADE AFTER WHICH A SEQUENCE OF BOXES     02544000
              ENDING WITH A "GO TO GENSYM" WILL BE CONDITIONALLY        02545000
              EXECUTED.. NESTED GENSYMS ARE POSSIBLE*                   02546000
BASIC:        BOX CONSTRUCT A RECTANGULAR BOX WITH ALL OF THE NON-BLANK 02547000
              CHARACTERS FROM THE SOURCE FILES UP TO THE NEXT "*"..     02548000
              THE WORD "BOX" WILL NOT BE PRINTED IF FIRST*              02549000
              GO TO MORE *COL*                                          02550000
TESTBOX:      A BOX IS BUILT UNTIL A "NO", "YES", "THEN", "TRUE" OR     02551000
              "FALSE" IS FOUND FOLLOWED BY EITHER                       02552000
              "GO TO <LABEL>" OR A LEFT PARENTHESIS *                   02553000
              IF A "GO TO" WAS FOUND THEN                               02554000
              (BUILD A BOX WITH APPROPRIATE TRANSFERS*) ELSE            02555000
              (CREATE LABELS NECESSARY TO EXECUTE FOLLOWING BOXES       02556000
              IF  CONDITION HOLDS AND OTHERWISE BYPASS THEM*)*          02557000
              THE WORD "TEST" WILL NOT BE PRINTED IF IT IS THE FIRST    02558000
              WORD IN THE BOX* GO TO MORE* COL*                         02559000
SWITCHL:      BOX A BOX IS BUILT UNTIL A "GO TO" IS FOUND WHICH IS      02560000
              FOLLOWED BY A LIST OF LABELS SEPARATED BY COMMAS.         02561000
              EXAMPLE : - *                                             02562000
              SWITCH CONTROL IS TRANSFERRED ACCORDING TO THE VALUE      02563000
              OF SOME PARAMETER TO ONE OF THE LABELS FOLLOWING THE      02564000
              "GO TO" GO TO BASIC, TESTBOX, SWITCHL,LAYLAB,MORE * COL*  02565000
NOTEBOX:      CONTENTS OF NOTE ARE INCLUDED IN FLOW BUT DELIMITED BY    02566000
              HORIZONTAL LINES* GO TO MORE*                             02567000
              NOTEBOX WHILE LINES ARE CENTERED IN THE VARIOUS BOXES,    02568000
              THEY ARE LEFT-JUSTIFIED IN NOTES*                         02569000
TERML:        BOX A RECTANGULAR BOX IS CONSTRUCTED WITHOUT A            02570000
              CONTINUATION FLOW BEYOND IT AND "TERM" OR "TERMINATE"     02571000
              IS WRITTEN*                                               02572000
              GO TO MORE*                                               02573000
BXONLY:       A BOX IS DRAWN WITH NO CONTINUATION LINE FROM IT *        02574000
              GO TO MORE*                                               02575000
CODEL:        INCLUDE N LINES OF CODE IN THE FLOW, WHERE N IS THE CODE  02576000
              LINE COUNT.. IF N IS MISSING, INCLUDE ALL CODE UNTIL A    02577000
              PERCENT SIGN IS READ.* GO TO MORE*  COL*                  02578000
TABLEL:       INCLUDE N LINES OF A TABLE IN THE FLOW, WHERE N IS THE    02579000
              TABLE LINE COUNT.. IF N IS MISSING, INCLUDE ALL OF TABLE  02580000
              UNTIL PERCENT SIGN IS READ.* GO TO MORE*                  02581000
LAYLAB:       BOX A NEW PAGE MAY BE FORMED BY USING "PAGE N" WHERE      02582000
              N IS AN UNSIGNED INTEGER OR EMPTY.. THE PAGE NUMBER IS    02583000
              INCREASED BY THE VALUE OF N (ONE IF N IS EMPTY) *         02584000
              BOX A NEW PAGE IDENTIFICATION MAY BE INTRODUCED BY USING  02585000
              "PAGEID N, + STRING" WHERE N IS THE STARTING PAGE         02586000
              NUMBER AND THE PLUS SIGN INDICATES THAT THE "STRING"      02587000
              IS TO BE PRINTED TO THE RIGHT OF THE PAGE NUMBER.. IF THE 02588000
              PLUS IS MISSING THEN THE STRING IS PRINTED TO THE LEFT    02589000
              OF THE PAGE NUMBER *                                      02590000
              BOX THE PAGE INCREMENT IS NORMALLY SET EQUAL TO ONE BUT   02591000
              IT MAY BE CHANGED TO A VALUE N BY USING "PAGEINC N" *COL* 02592000
              BOX THE PRINTED FLOW CHART IS COMPOSED OF THREE VERTICAL  02593000
              COLUMNS AND A NEW COLUMN WILL BE STARTED IF "COL" OR      02594000
              "COLUMN" IS USED *                                        02595000
              BOX LAYOUTS WITH ONE OR TWO COLUMNS MAY BE OBTAINED BY    02596000
              USING "MAXCOL N" WHERE N IS 1, 2, OR 3 *                  02597000
              NOTE ABOUT LINE CONTROLS:  A PERIOD "." FOLLOWED BY       02598000
              A SPACE WILL CAUSE A NEW LINE WITHIN THE BOX TO BE        02599000
              STARTED.. TO END A SENTENCE WITH A PERIOD, USE TWO PERIODS02600000
              BEFORE SPACING.. .                                        02601000
              THIS HOWEVER WILL CAUSE SKIPPING TO THE NEXT LINE AS WELL 02602000
              AS PRINTING THE PERIOD. TO GET A PERIOD WITH NO SKIP TO   02603000
              THE NEXT LINE, USE THE CONSTRUCT ".#".# THE "#" WILL      02604000
              COME OUT AS A BLANK..                                     02605000
              WITHIN A NOTE A NEW LEFT-JUSTIFIED LINE IS BEGUN          02606000
              FOLLOWING A PERIOD AND SPACE.*                            02607000
              BOX EACH "BEGIN" WILL START  WITH A NEW PAGE *            02608000
              GO TO MORE*                                               02609000
              NOTE <FLOW LINE CONTROLS> ARE NOT PRESENTLY IMPLEMENTED*  02610000
              NOTE "FINISH" SIGNALS THE END OF A FLOW CHART AND WILL    02611000
              CAUSE TABLE OF CONTENTS TO BE PRINTED.. "QUIT" WILL STOP  02612000
              THE SEARCH FOR FLOW CHARTS.. IF NEITHER PRECEDES THE      02613000
              SEMICOLON, THE NEXT FLOW COMMENT WILL BE TREATED AS A     02614000
              CONTINUATION OF THE LAST CHART*                           02615000
              NOTE THE ABOVE NOTE IS ONLY IMPLEMENTED FOR "QUIT"        02616000
              AND "FINISH"*                                             02617000
         END * QUIT *                                                   02618000
* PAGEID 1 , "APP 3-"                                                   02619000
* 7                                                                     02620000
FLOW CHART EXAMPLE (WITH BOXES).                                        02621000
* PAGEID 7,"APP 3-"                                                     02622000
* 7                                                                     02623000
FLOW CHART LABEL IDENTIFIERS CROSS REFERENCE LIST                       02624000
BASIC  (000004)     APP 3- 2  APP 3- 3 *APP 3- 3* APP 3- 4              02625000
BXONLY  (000002)    APP 3- 2 *APP 3- 5*                                 02626000
CODEL  (000002)     APP 3- 2 *APP 3- 5*                                 02627000
CONTIN  (000002)    APP 3- 2 *APP 3- 3*                                 02628000
G0001  (000002)     APP 3- 3 *APP 3- 3*                                 02629000
G0002  (000002)     APP 3- 4 *APP 3- 4*                                 02630000
G0003  (000002)     APP 3- 4 *APP 3- 4*                                 02631000
LABLEL  (000002)    APP 3- 2 *APP 3- 3*                                 02632000
LAYLAB  (000003)    APP 3- 3  APP 3- 4 *APP 3- 5*                       02633000
MORE  (000011)     *APP 3- 2* APP 3- 3  APP 3- 3  APP 3- 4  APP 3- 4    02634000
                    APP 3- 5  APP 3- 5  APP 3- 5  APP 3- 5  APP 3- 5    02635000
                    APP 3- 6                                            02636000
NOTEBOX  (000002)   APP 3- 3 *APP 3- 5*                                 02637000
SWITCHL  (000003)   APP 3- 2 *APP 3- 4* APP 3- 4                        02638000
TABLEL  (000002)    APP 3- 2 *APP 3- 5*                                 02639000
TERML  (000002)     APP 3- 2 *APP 3- 5*                                 02640000
TESTBOX  (000003)   APP 3- 2 *APP 3- 4* APP 3- 4                        02641000
* FINISH ;                                                              02642000
COMMENT DOCUMENT "PART 4"                                               02643000
* DEFINE 1 = SKIP 2 PARAGRAPH 5,67,0 *                                  02644000
* DEFINE 2 = SKIP PAR *                                                 02645000
* DEFINE 3 = SKIP GLOSSARY 5,25,67 *                                    02646000
* DEFINE 4 = SKIP GLOS *                                                02647000
* DEFINE 5 = PAGE UNDERLINE INDENT 2 INDEX *                            02648000
* DEFINE 6 = SKIP PARAGRAPH 20,67,0 *                                   02649000
* DEFINE 7 = PAGE INDEX UNDERLINE INDENT 1 *                            02650000
* DEFINE 8 = CODE SKIP *                                                02651000
* DEFINE 9 = CODE SKIP 2 INDEX *                                        02652000
* DEFINE 11 = CODE SKIP 2 INDEX 2 *                                     02653000
* DEFINE 21 = SKIP 2 CODE 2 INDEX *                                     02654000
* DEFINE 22 = SKIP 2 CODE 3 INDEX *                                     02655000
* DEFINE 23 = SKIP 2 CODE 4 INDEX *                                     02656000
* DEFINE 24 = SKIP 2 CODE 5 INDEX *                                     02657000
* DEFINE 25 = SKIP 2 CODE 6 INDEX *                                     02658000
* DEFINE 27 = SKIP 2 CODE 8 INDEX *                                     02659000
* DEFINE 31 = SKIP CODE 2 INDENT 5 INDEX *                              02660000
* DEFINE 32 = SKIP CODE 3 INDENT 5 INDEX *                              02661000
* DEFINE 33 = SKIP CODE 4 INDENT 5 INDEX *                              02662000
* DEFINE 35 = SKIP CODE 6 INDENT 5 INDEX *                              02663000
* PAGEID 0, "    4-"                                                    02664000
* TITLE PAGE CENTER                                                     02665000
A CROSS REFERENCE, FLOW CHART AND DOCUMENT EDITING PROGRAM (PART FOUR). 02666000
* SKIP CENTER                                                           02667000
BY GLYN HUGH JONES                                                      02668000
* SKIP CENTER                                                           02669000
TECHNICAL STAFF                                                         02670000
BURROUGHS CORPORATION                                                   02671000
PASADENA                                                                02672000
* SKIP 3 CENTER                                                         02673000
SUMMARY                                                                 02674000
* 1                                                                     02675000
 THE ALGOL PROGRAM WHICH PERFORMS THE FUNCTIONS DESCRIBED IN PARTS      02676000
 1-3 OF THIS DOCUMENT IS BRIEFLY OUTLINED FOR THE USE OF THOSE          02677000
 WHO NEED TO MAINTAIN THE PROGRAM THEMSELVES.                           02678000
* SKIP 6 TAB 2,40                                                       02679000
AUTHORS: / APPROVED/                                                    02680000
* SKIP 4 TAB 2,40                                                       02681000
-------------------- / -------------------- /                           02682000
GLYN H. JONES / J.F.KALBACH/                                            02683000
* SKIP TAB 2,40                                                         02684000
 JOAN G. DUNSHEE/ MANAGER,TECHNICAL STAFF/                              02685000
* SKIP INDENT 30                                                        02686000
 MARCH 1967                                                             02687000
* TITLE CLEAR INDEX PAGE                                                02688000
THIRD REVISED ISSUE OCT.7, 1968                                         02689000
1. INTRODUCTION                                                         02690000
* 1                                                                     02691000
 THIS DOCUMENT PRESENTS AN OUTLINE OF THE CROSS-REFERENCE PROGRAM, FOR T02692000
HE USE OF ANYONE WHO MAY NEED TO CHANGE OR MAINTAIN IT.  THE            02693000
SIZE  OF THE PROGRAM FORBIDS A DETAILED DESCRIPTION OF THE PROGRAM AT TH02694000
IS TIME, BUT HOPEFULLY THE BRIEF COMMENTS GIVEN HERE WILL SERVE AS      02695000
AN ORIENTATION OF SORTS.                                                02696000
* 1                                                                     02697000
 THE STANDARD CROSS-REFERENCE IS DONE BY MEANS OF TWO SETS OF LINKED LIS02698000
TS. THE FIRST SET, KEPT IN  THE ARRAY "TABLE", CONSISTS OF A LIST       02699000
FOR EVERY REFERENCEABLE CHARACTER. THE HEAD OF EACH SUCH LIST IS        02700000
GIVEN BY STACKHEAD[<CHARACTER>]. EACH LIST IN THIS SET  CONTAINS ALL    02701000
CROSS-REFERENCED IDENTIFIERS BEGINNING WITH THAT LETTER, IN             02702000
ALPHABETICAL ORDER.                                                     02703000
* 2                                                                     02704000
THE SECOND SET OF LISTS, CONTAINED IN THE ARRAY "SEQLINKS", CONSISTS    02705000
OF A LIST FOR EACH IDENTIFIER GIVING THE OCCURENCES OF THAT IDENTIFIER. 02706000
THE "TABLE" ENTRY FOR THAT IDENTIFIER GIVES THE HEAD OF THE LIST (SEE   02707000
ABOVE).  EACH ENTRY CONTAINS NOT THE ACTUAL SEQUENCE NUMBER BUT A       02708000
POINTER TO THE NUMBER IN A SEPARATE ARRAY, "CURSEQ".                    02709000
* 2                                                                     02710000
ALMOST ALL REFERENCES TO THE ARRAYS INVOLVED ARE THROUGH THE            02711000
DEFINES NEAR THE BEGINNING OF THE PROGRAM.                              02712000
* 2                                                                     02713000
IF THE CONTROL "LARGE" IS USED, A DIFFERENT SCHEME IS EMPLOYED.         02714000
EVERY TIME A CROSS-REFERENCEABLE ITEM IS FOUND, A RECORD CONSISTING OF  02715000
 THAT ITEM PLUS THE CURRENT SEQUENCE NUMBER IS WRITTEN OUT ON DISK.     02716000
WHEN THE INPUT IS EXHAUSTED, THE ACCUMULATED RECORDS ARE SORTED BY THE  02717000
"SORT" INTRINSIC.                                                       02718000
* END ;                                                                 02719000
COMMENT BLANK OUT DEFINES  % % % % % % % % % %                          02720000
DEFINE                                                                  02721000
              ABOUTV = 250 # ,                                          02722000
              ABSV = 054 # ,                                            02723000
              ACCEPTV = 251 # ,                                         02724000
              ACCESSV = 252 # ,                                         02725000
              ACTUALV = 253 # ,                                         02726000
              ADDRESSV = 100 # ,                                        02727000
              ADVANCINGV = 254 # ,                                      02728000
              AFTERV = 255 # ,                                          02729000
              ALLV = 256 # ,                                            02730000
              ALPHAV = 055 # ,                                          02731000
              ALPHABETICV = 257 # ,                                     02732000
              ALPHANUMERICV = 258 # ,                                   02733000
              ALTERV = 260 # ,                                          02734000
              ALTERNATEV = 259 # ,                                      02735000
              ANV = 261 # ,                                             02736000
              ANDV = 069 # ,                                            02737000
              APPLYV = 262 # ,                                          02738000
              ARCTANV = 056 # ,                                         02739000
              AREV = 263 # ,                                            02740000
              AREAV = 264 # ,                                           02741000
              AREASV = 265 # ,                                          02742000
              ARRAYV = 078 # ,                                          02743000
              ASCENDINGV = 266 # ,                                      02744000
              ASSEMBLEV = 101 # ,                                       02745000
              ASSIGNV = 267 # ,                                         02746000
              ATV = 268 # ,                                             02747000
              AUTHORV = 269 # ,                                         02748000
              BEFOREV = 270 # ,                                         02749000
              BEGINV = 004 # ,                                          02750000
              BEGINNINGV = 271 # ,                                      02751000
              BINARYV = 102 # ,                                         02752000
              BITSV = 274 # ,                                           02753000
              BLANKV = 277 # ,                                          02754000
              BLOCKV = 278 # ,                                          02755000
              BOOLEANV = 075 # ,                                        02756000
              BOXV = 006 # ,                                            02757000
              BOXONLYV = 030 # ,                                        02758000
              BRTV = 142 # ,                                            02759000
              BYV = 280 # ,                                             02760000
              BZV = 281 # ,                                             02761000
              CASEV = 103 # ,                                           02762000
              CCXV = 144 # ,                                            02763000
              CDCV = 145 # ,                                            02764000
              CFEV = 147 # ,                                            02765000
              CFLV = 146 # ,                                            02766000
              CFXV = 148 # ,                                            02767000
              CHANNELV = 285 # ,                                        02768000
              CHARACTERV = 286 # ,                                      02769000
              CHARACTERSV = 287 # ,                                     02770000
              CHECKV = 288 # ,                                          02771000
              CHRV = 901 # ,                                            02772000
              CHSV = 151 # ,                                            02773000
              CIV = 902 # ,                                             02774000
              CLV = 289 # ,                                             02775000
              CLASSV = 290 # ,                                          02776000
              CLOSEV = 104 # ,                                          02777000
              CMPV = 292 # ,                                            02778000
              COBOLV = 294 # ,                                          02779000
              COCV = 149 # ,                                            02780000
              CODEV = 029 # ,                                           02781000
              COLV = 023 # ,                                            02782000
              COLUMNV = 023 # ,                                         02783000
              COMV = 150 # ,                                            02784000
              COMMENTV = 007 # ,                                        02785000
              COMPUTEV = 297 # ,                                        02786000
              COMPUTATIONALV = 295 # ,                                  02787000
              CONFIGURATIONV = 298 # ,                                  02788000
              CONSTANTV = 299 # ,                                       02789000
              CONTAINSV = 300 # ,                                       02790000
              CONTROLV = 105 # ,                                        02791000
              CONVERSIONV = 301 # ,                                     02792000
              COPYV = 302 # ,                                           02793000
              CORRESPONDINGV = 303 # ,                                  02794000
              COSV = 060 # ,                                            02795000
              CPV = 304 # ,                                             02796000
              CPUV = 106 # ,                                            02797000
              CRDV = 107 # ,                                            02798000
              CSBV = 143 # ,                                            02799000
              CYCLEV = 306 # ,                                          02800000
              DATAV = 307 # ,                                           02801000
              DATEV = 026 # ,                                           02802000
              DBV = 903 # ,                                             02803000
              DBLV = 057 # ,                                            02804000
              DCV = 904 # ,                                             02805000
              DECV = 905 # ,                                            02806000
              DECLARATIVESV = 310 # ,                                   02807000
              DEFINEV = 079 # ,                                         02808000
              DELV = 153 # ,                                            02809000
              DEPENDINGV = 311 # ,                                      02810000
              DESCENDINGV = 312 # ,                                     02811000
              DIAV = 154 # ,                                            02812000
              DIAGNOSTICV = 313 # ,                                     02813000
              DIBV = 155 # ,                                            02814000
              DIGITV = 314 # ,                                          02815000
              DIGITSV = 315 # ,                                         02816000
              DISCV = 108 # ,                                           02817000
              DISKV = 109 # ,                                           02818000
              DISPLAYV = 316 # ,                                        02819000
             DIVS = 906 # ,                                             02820000
              DIVV = 061 # ,                                            02821000
              DIVIDEV = 317 # ,                                         02822000
              DIVIDEDV = 318 # ,                                        02823000
              DIVISIONV = 319 # ,                                       02824000
              DOV = 066 # ,                                             02825000
              DOESV = 033 # ,                                           02826000
              DOLLARV = 320 # ,                                         02827000
              DOUBLEV = 058 # ,                                         02828000
              DRUMV = 321 # ,                                           02829000
              DSV = 907 # ,                                             02830000
              DSCV = 110 # ,                                            02831000
              DUMPV = 059 # ,                                           02832000
              DUPV = 152 # ,                                            02833000
              ELSEV = 062 # ,                                           02834000
              ENDV = 005 # ,                                            02835000
              ENDINGV = 322 # ,                                         02836000
              ENTERV = 017 # ,                                          02837000
              ENTIERV = 053 # ,                                         02838000
              ENVIRONMENTV = 328 # ,                                    02839000
              EQUALV = 329 # ,                                          02840000
              EQUALSV = 330 # ,                                         02841000
              EQLV = 156 # ,                                            02842000
              EQVV = 052 # ,                                            02843000
              ERRORV = 331 # ,                                          02844000
              EVERYV = 332 # ,                                          02845000
              EXAMINEV = 333 # ,                                        02846000
              EXCEEDSV = 334 # ,                                        02847000
              EXITV = 018 # ,                                           02848000
              EXPV = 051 # ,                                            02849000
              GEQV = 163 # ,                                            02850000
              FALSEV = 011 # ,                                          02851000
              FCEV = 158 # ,                                            02852000
              FCLV = 157 # ,                                            02853000
              FCXV = 159 # ,                                            02854000
              FDV = 335 # ,                                             02855000
              FFXV = 161 # ,                                            02856000
              FILEV = 080 # ,                                           02857000
              FILLV = 081 # ,                                           02858000
              FILLERV = 339 # ,                                         02859000
              FINISHV = 002 # ,                                         02860000
              FIRSTV = 340 # ,                                          02861000
              FLAGV = 160 # ,                                           02862000
              FLOATV = 341 # ,                                          02863000
              FORV = 064 # ,                                            02864000
              FORMATV = 082 # ,                                         02865000
              FORWARDV = 083 # ,                                        02866000
              FROMV = 342 # ,                                           02867000
              FSV = 343 # ,                                             02868000
              GIVINGV = 344 # ,                                         02869000
              GOV = 013 # ,                                             02870000
              GREATERV = 345 # ,                                        02871000
              GTRV = 162 # ,                                            02872000
              HASHEDV = 346 # ,                                         02873000
              HEADV = 008 # ,                                           02874000
              HEADINGV = 008 # ,                                        02875000
              HLBV = 164 # ,                                            02876000
              HP2V = 166 # ,                                            02877000
              HUNTV = 165 # ,                                           02878000
              IAV = 111 # ,                                             02879000
              IDENTIFICATIONV = 350 # ,                                 02880000
              IDV = 349 # ,                                             02881000
              IDVV = 170 # ,                                            02882000
              IFV = 014 # ,                                             02883000
              IIOV = 179 # ,                                            02884000
              INCLUDEV = 353 # ,                                        02885000
              INPUTV = 354 # ,                                          02886000
              INSTALLATIONV = 356 # ,                                   02887000
              INTOV = 357 # ,                                           02888000
              INVALIDV = 358 # ,                                        02889000
              IORV = 175 # ,                                            02890000
              IMPV = 050 # ,                                            02891000
              INV = 049 # ,                                             02892000
              INAV = 171 # ,                                            02893000
              INBV = 172 # ,                                            02894000
              INIV = 174 # ,                                            02895000
              INTEGERV = 074 # ,                                        02896000
              INXV = 173 # ,                                            02897000
              IP1V = 177 # ,                                            02898000
              IP2V = 176 # ,                                            02899000
              IPSV = 178 # ,                                            02900000
              ISV = 033 # ,                                             02901000
              ISDV = 167 # ,                                            02902000
              ISNV = 168 # ,                                            02903000
              ITIV = 169 # ,                                            02904000
              JSV = 359 # ,                                             02905000
              JUMPV = 908 # ,                                           02906000
              JUSTIFIEDV = 360 # ,                                      02907000
              KEYV = 361 # ,                                            02908000
              KEYBOARDV = 362 # ,                                       02909000
              LABELV = 076 # ,                                          02910000
              LEADINGV = 363 # ,                                        02911000
              LEAVINGV = 364 # ,                                        02912000
              LEFTV = 365 # ,                                           02913000
              LEQV = 182 # ,                                            02914000
              LESSV = 366 # ,                                           02915000
              LIBRARYV = 367 # ,                                        02916000
              LITV = 909 # ,                                            02917000
              LINESV = 368 # ,                                          02918000
              LNV = 048 # ,                                             02919000
              LLLV = 181 # ,                                            02920000
              LNDV = 183 # ,                                            02921000
              LNGV = 184 # ,                                            02922000
              LOCV = 910 # ,                                            02923000
              LOCALV = 911 # ,                                          02924000
              LOCATIONV = 369 # ,                                       02925000
              LOCKV = 112 # ,                                           02926000
              LODV = 185 # ,                                            02927000
              LORV = 186 # ,                                            02928000
              LPV = 374 # ,                                             02929000
              LQVV = 187 # ,                                            02930000
              LSSV = 180 # ,                                            02931000
              MAXCOLV = 025 # ,                                         02932000
              MDV = 375 # ,                                             02933000
              MEMORYV = 190 # ,                                         02934000
              MFIDV = 379 # ,                                           02935000
              MINUSV = 380 # ,                                          02936000
              MODV = 091 # ,                                            02937000
              MODEV = 381 # ,                                           02938000
              MODULESV = 382 # ,                                        02939000
              MKSV = 188 # ,                                            02940000
              MONITORV = 090 # ,                                        02941000
              MOVEV = 383 # ,                                           02942000
              MTPV = 113 # ,                                            02943000
              MULV = 189 # ,                                            02944000
              MULTIPLEV = 386 # ,                                       02945000
              MULTIPLIEDV = 384 # ,                                     02946000
              MULTIPLYV = 385 # ,                                       02947000
              NABSV = 191 # ,                                           02948000
              NAMEV = 192 # ,                                           02949000
              NEGATIVEV = 387 # ,                                       02950000
              NEQV = 193 # ,                                            02951000
              NEXTV = 388 # ,                                           02952000
              NFLAGV = 194 # ,                                          02953000
              NOV = 032 # ,                                             02954000
              NOPV = 195 # ,                                            02955000
              NOTV = 084 # ,                                            02956000
              NOTEV = 027 # ,                                           02957000
              NUMV = 912 # ,                                            02958000
              NUMERICV = 391 # ,                                        02959000
              OCV = 394 # ,                                             02960000
              OCCURSV = 395 # ,                                         02961000
              OCTV = 913 # ,                                            02962000
              OFV = 114 # ,                                             02963000
              OFFV = 396 # ,                                            02964000
              OMITTEDV = 397 # ,                                        02965000
              ONV = 398 # ,                                             02966000
              OPENV = 115 # ,                                           02967000
              OPTIONALV = 399 # ,                                       02968000
              ORV = 068 # ,                                             02969000
              OTHERWISEV = 400 # ,                                      02970000
              OUTV = 067 # ,                                            02971000
              OUTPUTV = 401 # ,                                         02972000
              OVERFLOWV = 136 # ,                                       02973000
              OWNV = 093 # ,                                            02974000
              PAGEV = 019 # ,                                           02975000
              PAGEIDV = 022 # ,                                         02976000
              PAGEINCV = 024 # ,                                        02977000
              PCV = 404 # ,                                             02978000
              PCTV = 116 # ,                                            02979000
              PERFORMV = 405 # ,                                        02980000
              PICTUREV = 406 # ,                                        02981000
              PLACESV = 407 # ,                                         02982000
              PLUSV = 408 # ,                                           02983000
              POINTV = 409 # ,                                          02984000
              POLISHV = 196 # ,                                         02985000
              POSITIONV = 411 # ,                                       02986000
              POSITIVEV = 410 # ,                                       02987000
              PREPAREDV = 412 # ,                                       02988000
              PRINTERV = 117 # ,                                        02989000
              PRINTERSV = 413 # ,                                       02990000
              PRIORITYV = 414 # ,                                       02991000
              PRLV = 197 # ,                                            02992000
              PRNV = 118 # ,                                            02993000
              PROCEDUREV = 073 # ,                                      02994000
              PROCEEDV = 415 # ,                                        02995000
              PROTECTV = 417 # ,                                        02996000
              PTV = 418 # ,                                             02997000
              PUNCHV = 119 # ,                                          02998000
              PURGEV = 120 # ,                                          02999000
              QUITV = 003 # ,                                           03000000
              QUOTEV = 420 # ,                                          03001000
              RANDOMV = 421 # ,                                         03002000
              RANGEV = 422 # ,                                          03003000
              READV = 072 # ,                                           03004000
              READERV = 121 # ,                                         03005000
              READERSV = 423 # ,                                        03006000
              REALV = 077 # ,                                           03007000
              RECORDV = 426 # ,                                         03008000
              RECORDINGV = 424 # ,                                      03009000
              RECORDSV = 425 # ,                                        03010000
              RDFV = 206 # ,                                            03011000
              RDSV = 204 # ,                                            03012000
              RDVV = 205 # ,                                            03013000
              REDEFINESV = 428 # ,                                      03014000
              REELV = 122 # ,                                           03015000
              RELEASEV = 094 # ,                                        03016000
              REMARKSV = 430 # ,                                        03017000
              RENAMESV = 431 # ,                                        03018000
              RENAMINGV = 432 # ,                                       03019000
              REPLACINGV = 433 # ,                                      03020000
              RERUNV = 434 # ,                                          03021000
              RESERVEV = 435 # ,                                        03022000
              RESETV = 914 # ,                                          03023000
              RETURNV = 436 # ,                                         03024000
              REVERSEV = 095 # ,                                        03025000
              REVERSEDV = 437 # ,                                       03026000
              REWINDV = 123 # ,                                         03027000
              RFBV = 208 # ,                                            03028000
              RIGHTV = 439 # ,                                          03029000
              RGV = 438 # ,                                             03030000
              RNOV = 207 # ,                                            03031000
              ROUNDEDV = 440 # ,                                        03032000
              RRRV = 209 # ,                                            03033000
              RSBV = 198 # ,                                            03034000
              RTMV = 201 # ,                                            03035000
              RTNV = 202 # ,                                            03036000
              RSPV = 199 # ,                                            03037000
              RTRV = 203 # ,                                            03038000
              RTSV = 200 # ,                                            03039000
              RUNV = 441 # ,                                            03040000
              SAMEV = 442 # ,                                           03041000
              SAVEV = 085 # ,                                           03042000
              SBV = 915 # ,                                             03043000
              SCV = 916 # ,                                             03044000
              SDV = 444 # ,                                             03045000
              SECTIONV = 445 # ,                                        03046000
              SECURITYV = 446 # ,                                       03047000
              SEEKV = 124 # ,                                           03048000
              SEGMENTV = 447 # ,                                        03049000
              SEGMENTSV = 448 # ,                                       03050000
              SELECTV = 450 # ,                                         03051000
              SENTENCEV = 451 # ,                                       03052000
              SENTINELV = 452 # ,                                       03053000
              SEQUENCEDV = 453 # ,                                      03054000
              SEQUENTIALV = 454 # ,                                     03055000
              SETV = 917 # ,                                            03056000
              SFBV = 221 # ,                                            03057000
              SIV = 918 # ,                                             03058000
              SIGNV = 096 # ,                                           03059000
              SIGNEDV = 125 # ,                                         03060000
              SINV = 097 # ,                                            03061000
              SIZEV = 455 # ,                                           03062000
              SKIPV = 919 # ,                                           03063000
              SNV = 126 # ,                                             03064000
              SNDV = 220 # ,                                            03065000
              SORTV = 460 # ,                                           03066000
              SPACEV = 127 # ,                                          03067000
              SPACESV = 458 # ,                                         03068000
              SPOV = 128 # ,                                            03069000
              SQRTV = 092 # ,                                           03070000
              SSBV = 210 # ,                                            03071000
              SSFV = 213 # ,                                            03072000
              SSNV = 212 # ,                                            03073000
              SSPV = 214 # ,                                            03074000
              STARTV = 001 # ,                                          03075000
              STANDARDV = 461 # ,                                       03076000
              STATUSV = 462 # ,                                         03077000
              STDV = 216 # ,                                            03078000
              STEPV = 086 # ,                                           03079000
              STFV = 218 # ,                                            03080000
              STNV = 217 # ,                                            03081000
              STOPV = 463 # ,                                           03082000
              STREAMV = 089 # ,                                         03083000
              STSV = 215 # ,                                            03084000
              SUBV = 920 # ,                                            03085000
              SUBROUTINEV = 219 # ,                                     03086000
              SUBTRACTV = 464 # ,                                       03087000
              SUPERVISORV = 465 # ,                                     03088000
              SUPPRESSV = 470 # ,                                       03089000
              SWITCHV = 016 # ,                                         03090000
              SYV = 466 # ,                                             03091000
              SYMBOLICV = 467 # ,                                       03092000
              SYNCHRONIZEDV = 468 # ,                                   03093000
              SZV = 469 # ,                                             03094000
              TABLEV = 028 # ,                                          03095000
              TALLYV = 921 # ,                                          03096000
              TALLYINGV = 471 # ,                                       03097000
              TAPEV = 129 # ,                                           03098000
              TAPESV = 472 # ,                                          03099000
              TESTV = 033 # ,                                           03100000
              TERMV = 021 # ,                                           03101000
              TERMINATEV = 021 # ,                                      03102000
              TFBV = 222 # ,                                            03103000
              TFRV = 223 # ,                                            03104000
              THANV = 478 # ,                                           03105000
              THENV = 063 # ,                                           03106000
              THROUGHV = 479 # ,                                        03107000
              THRUV = 480 # ,                                           03108000
              TIMEV = 130 # ,                                           03109000
              TIMESV = 481 # ,                                          03110000
              TITLEV = 009 # ,                                          03111000
              TIOV = 225 # ,                                            03112000
              TOV = 012 # ,                                             03113000
              TOGGLEV = 922 # ,                                         03114000
              TOPV = 224 # ,                                            03115000
              TRACEV = 131 # ,                                          03116000
              TRBV = 226 # ,                                            03117000
              TRUEV = 010 # ,                                           03118000
              UAV = 132 # ,                                             03119000
              ULV = 133 # ,                                             03120000
              UNV = 134 # ,                                             03121000
              UNEQUALV = 483 # ,                                        03122000
              UNLOCKV = 484 # ,                                         03123000
              UNTILV = 070 # ,                                          03124000
              UPONV = 485 # ,                                           03125000
              USAGEV = 488 # ,                                          03126000
              USEV = 489 # ,                                            03127000
              USINGV = 490 # ,                                          03128000
              VAV = 132 # ,                                             03129000
              VALUEV = 088 # ,                                          03130000
              VALUESV = 491 # ,                                         03131000
              VARYINGV = 492 # ,                                        03132000
              VFIV = 227 # ,                                            03133000
              WASV = 033 # ,                                            03134000
              WDSV = 923 # ,                                            03135000
              WHENV = 493 # ,                                           03136000
              WHILEV = 065 # ,                                          03137000
              WITHV = 087 # ,                                           03138000
              WORDSV = 494 # ,                                          03139000
              WRITEV = 071 # ,                                          03140000
              XCHV = 228 # ,                                            03141000
              XITV = 229 # ,                                            03142000
              YESV = 031 # ,                                            03143000
              ZEROV = 496 # ,                                           03144000
              ZEROESV = 498 # ,                                         03145000
              ZEROSV = 497 # ,                                          03146000
              ZIPV = 135 # ,                                            03147000
              ZONV = 924 # ,                                            03148000
              ZSV = 499 # ,                                             03149000
              ANDV = 069 # ,                                            03150000
              ASSIGNV = 267 # ,                                         03151000
              BLOCKV = 278 # ,                                          03152000
              BACKSPACEV = 127 # ,                                      03153000
              CONTINUEV = 195 # ,                                       03154000
              COMPLEXV = 501 # ,                                        03155000
              COMMONV = 500 # ,                                         03156000
              CALLV = 017 # ,                                           03157000
              DOUBLEV = 058 # ,                                         03158000
              DOV = 066 # ,                                             03159000
              DIMENSIONV = 455 # ,                                      03160000
              DATAV = 307 # ,                                           03161000
              EQV = 156 # ,                                             03162000
              EXTERNALV = 367 # ,                                       03163000
              EQUIVALENCEV = 428 # ,                                    03164000
              ENTRYV = 502 # ,                                          03165000
              ENDV = 005 # ,                                            03166000
              FALSEV = 011 # ,                                          03167000
              FUNCTIONV = 073 # ,                                       03168000
              FORMATV = 082 # ,                                         03169000
              FILEV = 080 # ,                                           03170000
              GOTOV = 013 # ,                                           03171000
              GEV = 163 # ,                                             03172000
              GTV = 162 # ,                                             03173000
              GOV = 013 # ,                                             03174000
              INTEGERV = 074 # ,                                        03175000
              IFV = 014 # ,                                             03176000
              LEV = 182 # ,                                             03177000
              LTV = 180 # ,                                             03178000
              LOGICALV = 075 # ,                                        03179000
              NOTV = 084 # ,                                            03180000
              NEV = 193 # ,                                             03181000
              NAMELISTV = 503 # ,                                       03182000
              ORV = 068 # ,                                             03183000
              PUNCHV = 119 # ,                                          03184000
              PROGRAMV = 505 # ,                                        03185000
              PRINTV = 118 # ,                                          03186000
              PAUSEV = 504 # ,                                          03187000
              PRECISIONV = 058 # ,                                      03188000
              REWINDV = 123 # ,                                         03189000
              RETURNV = 436 # ,                                         03190000
              REALV = 077 # ,                                           03191000
              READV = 072 # ,                                           03192000
              SUBROUTINEV = 073 # ,                                     03193000
              STOPV = 463 # ,                                           03194000
              TRUEV = 010 # ,                                           03195000
              TOV = 012 # ,                                             03196000
              WRITEV = 071 # ,                                          03197000
              ZP1V = 230 # ;                                            03198000
COMMENT DOCUMENT* PAGE INDEX SKIP 2  * * * * * * * * * * * * * * * *    03199000
2. GLOBAL DECLARATIONS.                                                 03200000
* INDEX INDENT 1 SKIP 3 * * * * * * * * * * * * * * * * * * * * * * *   03201000
FIRST FIVE PROGRAM VARIABLES.                                           03202000
* CODE 5;                                                               03203000
INTEGER       PRT;                                                      03204000
BOOLEAN       LISTOG;                                                   03205000
BOOLEAN       MONITOG;                                                  03206000
BOOLEAN       DUMPFLAG;                                                 03207000
INTEGER       ISEQ;                                                     03208000
COMMENT DOCUMENT* SKIP CODE 2* * * * * * * * * * * * * * * * * * * * *; 03209000
SAVE ARRAY RESERVED[0:850];                                             03210000
SAVE INTEGER ARRAY RESTACK[0:63];                                       03211000
COMMENT DOCUMENT* 23 * * * * * * * * * * * * * * * * * * * * * * * * ;  03212000
PROCEDURE     FILLJUNK(N);                                              03213000
VALUE         N;                                                        03214000
INTEGER       N;                                                        03215000
COMMENT  INITIALIZES RESERVED ARRAYS ACCORDING TO DESIRED LANGUAGE;     03216000
         BEGIN                                                          03217000
LABEL         LALG,LBPL,LCOB,LESP,LFORT,LFLO                            03218000
              ,EXIT;                                                    03219000
SWITCH        CHOOSE ~ LALG,LBPL,LCOB,LESP,LFLO,LFORT                   03220000
              ;                                                         03221000
              GO TO CHOOSE[N];                                          03222000
LBPL:                                                                   03223000
              FILL RESERVED[*] WITH 0, % BPL                            03224000
              OCT0000000006600000  ,  %  00006 00                       03225000
              OCT0000032122626060  ,  %  003ABS                         03226000
              OCT0000000014400001  ,  %  0000 |01                       03227000
              OCT0000072124245125  ,  %  007ADDRE                       03228000
              OCT6262606060606060  ,  %  SS                             03229000
              OCT0000000006700003  ,  %  00006Y03                       03230000
              OCT0000052143473021  ,  %  005ALPHA                       03231000
              OCT0000000010500006  ,  %  00008Q06                       03232000
              OCT0000032145246060  ,  %  003AND                         03233000
              OCT0000000011600010  ,  %  00009 08                       03234000
              OCT0000052151512170  ,  %  005ARRAY                       03235000
              OCT0000000014500012  ,  %  0000 Q0#                       03236000
              OCT0000102162622544  ,  %  008ASSEM                       03237000
              OCT2243256060606060  ,  %  BLE                            03238000
              OCT0000000000400000  ,  %  00000|00                       03239000
              OCT0000052225273145  ,  %  005BEGIN                       03240000
              OCT0000000014600017  ,  %  0000  0}                       03241000
              OCT0000062231452151  ,  %  006BINAR                       03242000
              OCT7060606060606060  ,  %  Y                              03243000
              OCT0000000011300021  ,  %  00009H0A                       03244000
              OCT0000072246464325  ,  %  007BOOLE                       03245000
              OCT2145606060606060  ,  %  AN                             03246000
              OCT0000000014700000  ,  %  0000 Y00                       03247000
              OCT0000042321622560  ,  %  004CASE                        03248000
              OCT0000000015000027  ,  %  0000:00G                       03249000
              OCT0000052343466225  ,  %  005CLOSE                       03250000
              OCT0000000000700031  ,  %  00000Y0I                       03251000
              OCT0000072346444425  ,  %  007COMME                       03252000
              OCT4563606060606060  ,  %  NT                             03253000
              OCT0000000015100033  ,  %  0000:80[                       03254000
              OCT0000072346456351  ,  %  007CONTR                       03255000
              OCT4643606060606060  ,  %  OL                             03256000
              OCT0000000015200036  ,  %  0000:+0<                       03257000
              OCT0000032347646060  ,  %  003CPU                         03258000
              OCT0000000015300041  ,  %  0000:H0J                       03259000
              OCT0000032351246060  ,  %  003CRD                         03260000
              OCT0000000003200000  ,  %  00003+00                       03261000
              OCT0000042421632560  ,  %  004DATE                        03262000
              OCT0000000011700045  ,  %  00009Y0N                       03263000
              OCT0000062425263145  ,  %  006DEFIN                       03264000
              OCT2560606060606060  ,  %  E                              03265000
              OCT0000000015400047  ,  %  0000:|0P                       03266000
              OCT0000042431622360  ,  %  004DISC                        03267000
              OCT0000000015500052  ,  %  0000:Q0$                       03268000
              OCT0000042431624260  ,  %  004DISK                        03269000
              OCT0000000007500054  ,  %  00007Q0-                       03270000
              OCT0000032431656060  ,  %  003DIV                         03271000
              OCT0000000010200056  ,  %  00008+0;                       03272000
              OCT0000022446606060  ,  %  002DO                          03273000
              OCT0000000007200060  ,  %  00007+0                        03274000
              OCT0000062446642243  ,  %  006DOUBL                       03275000
              OCT2560606060606060  ,  %  E                              03276000
              OCT0000000015600062  ,  %  0000: 0S                       03277000
              OCT0000032462236060  ,  %  003DSC                         03278000
              OCT0000000007300065  ,  %  00007H0V                       03279000
              OCT0000042464444760  ,  %  004DUMP                        03280000
              OCT0000000007600000  ,  %  00007 00                       03281000
              OCT0000042543622560  ,  %  004ELSE                        03282000
              OCT0000000000500071  ,  %  00000Q0Z                       03283000
              OCT0000032545246060  ,  %  003END                         03284000
              OCT0000000001300000  ,  %  00001H00                       03285000
              OCT0000052621436225  ,  %  005FALSE                       03286000
              OCT0000000012000075  ,  %  0000#00=                       03287000
              OCT0000042631432560  ,  %  004FILE                        03288000
              OCT0000000012300077  ,  %  0000#H0"                       03289000
              OCT0000072646516621  ,  %  007FORWA                       03290000
              OCT5124606060606060  ,  %  RD                             03291000
              OCT0000000001500000  ,  %  00001Q00                       03292000
              OCT0000022746606060  ,  %  002GO                          03293000
              OCT0000000015700000  ,  %  0000:Y00                       03294000
              OCT0000023121606060  ,  %  002IA                          03295000
              OCT0000000001600106  ,  %  00001 16                       03296000
              OCT0000023126606060  ,  %  002IF                          03297000
              OCT0000000011200110  ,  %  00009+18                       03298000
              OCT0000073145632527  ,  %  007INTEG                       03299000
              OCT2551606060606060  ,  %  ER                             03300000
              OCT0000000011400000  ,  %  00009|00                       03301000
              OCT0000054321222543  ,  %  005LABEL                       03302000
              OCT0000000016000115  ,  %  0000>01:                       03303000
              OCT0000044346234260  ,  %  004LOCK                        03304000
              OCT0000000013300000  ,  %  0000@H00                       03305000
              OCT0000034446246060  ,  %  003MOD                         03306000
              OCT0000000013200121  ,  %  0000@+1A                       03307000
              OCT0000074446453163  ,  %  007MONIT                       03308000
              OCT4651606060606060  ,  %  OR                             03309000
              OCT0000000016100123  ,  %  0000>81C                       03310000
              OCT0000034463476060  ,  %  003MTP                         03311000
              OCT0000000004000000  ,  %  00004000                       03312000
              OCT0000024546606060  ,  %  002NO                          03313000
              OCT0000000012400130  ,  %  0000#|1H                       03314000
              OCT0000034546636060  ,  %  003NOT                         03315000
              OCT0000000016200000  ,  %  0000>+00                       03316000
              OCT0000024626606060  ,  %  002OF                          03317000
              OCT0000000016300134  ,  %  0000>H1&                       03318000
              OCT0000044647254560  ,  %  004OPEN                        03319000
              OCT0000000010400136  ,  %  00008|1<                       03320000
              OCT0000024651606060  ,  %  002OR                          03321000
              OCT0000000021000140  ,  %  0000A01|                       03322000
              OCT0000104665255126  ,  %  008OVERF                       03323000
              OCT4346666060606060  ,  %  LOW                            03324000
              OCT0000000002300000  ,  %  00002H00                       03325000
              OCT0000044721272560  ,  %  004PAGE                        03326000
              OCT0000000016400145  ,  %  0000>|1N                       03327000
              OCT0000034723636060  ,  %  003PCT                         03328000
              OCT0000000016500147  ,  %  0000>Q1P                       03329000
              OCT0000074751314563  ,  %  007PRINT                       03330000
              OCT2551606060606060  ,  %  ER                             03331000
              OCT0000000016600151  ,  %  0000> 1R                       03332000
              OCT0000034751456060  ,  %  003PRN                         03333000
              OCT0000000011100154  ,  %  0000981-                       03334000
              OCT0000114751462325  ,  %  009PROCE                       03335000
              OCT2464512560606060  ,  %  DURE                           03336000
              OCT0000000016700156  ,  %  0000>Y1;                       03337000
              OCT0000054764452330  ,  %  005PUNCH                       03338000
              OCT0000000017000161  ,  %  0000}01/                       03339000
              OCT0000054764512725  ,  %  005PURGE                       03340000
              OCT0000000011000000  ,  %  00009000                       03341000
              OCT0000045125212460  ,  %  004READ                        03342000
              OCT0000000017100165  ,  %  0000}81V                       03343000
              OCT0000065125212425  ,  %  006READE                       03344000
              OCT5160606060606060  ,  %  R                              03345000
              OCT0000000017200167  ,  %  0000}+1X                       03346000
              OCT0000045125254360  ,  %  004REEL                        03347000
              OCT0000000013600172  ,  %  0000@ 1,                       03348000
              OCT0000075125432521  ,  %  007RELEA                       03349000
              OCT6225606060606060  ,  %  SE                             03350000
              OCT0000000017300174  ,  %  0000}H1!                       03351000
              OCT0000065125663145  ,  %  006REWIN                       03352000
              OCT2460606060606060  ,  %  D                              03353000
              OCT0000000012500000  ,  %  0000#Q00                       03354000
              OCT0000046221652560  ,  %  004SAVE                        03355000
              OCT0000000017400202  ,  %  0000}|22                       03356000
              OCT0000046225254260  ,  %  004SEEK                        03357000
              OCT0000000017500204  ,  %  0000}Q24                       03358000
              OCT0000066231274525  ,  %  006SIGNE                       03359000
              OCT2460606060606060  ,  %  D                              03360000
              OCT0000000017600206  ,  %  0000} 26                       03361000
              OCT0000026245606060  ,  %  002SN                          03362000
              OCT0000000017700211  ,  %  0000}Y29                       03363000
              OCT0000056247212325  ,  %  005SPACE                       03364000
              OCT0000000020000213  ,  %  0000+02@                       03365000
              OCT0000036247466060  ,  %  003SPO                         03366000
              OCT0000000020100000  ,  %  0000+800                       03367000
              OCT0000046321472560  ,  %  004TAPE                        03368000
              OCT0000000007700217  ,  %  00007Y2}                       03369000
              OCT0000046330254560  ,  %  004THEN                        03370000
              OCT0000000020200221  ,  %  0000++2A                       03371000
              OCT0000046331442560  ,  %  004TIME                        03372000
              OCT0000000001400223  ,  %  00001|2C                       03373000
              OCT0000026346606060  ,  %  002TO                          03374000
              OCT0000000020300225  ,  %  0000+H2E                       03375000
              OCT0000056351212325  ,  %  005TRACE                       03376000
              OCT0000000001200227  ,  %  00001+2G                       03377000
              OCT0000046351642560  ,  %  004TRUE                        03378000
              OCT0000000020400000  ,  %  0000+|00                       03379000
              OCT0000026421606060  ,  %  002UA                          03380000
              OCT0000000020500233  ,  %  0000+Q2[                       03381000
              OCT0000026443606060  ,  %  002UL                          03382000
              OCT0000000020600235  ,  %  0000+ 2(                       03383000
              OCT0000026445606060  ,  %  002UN                          03384000
              OCT0000000010600237  ,  %  00008 2~                       03385000
              OCT0000056445633143  ,  %  005UNTIL                       03386000
              OCT0000000013000000  ,  %  0000@000                       03387000
              OCT0000056521436425  ,  %  005VALUE                       03388000
              OCT0000000010100000  ,  %  00008800                       03389000
              OCT0000056630314325  ,  %  005WHILE                       03390000
              OCT0000000012700245  ,  %  0000#Y2N                       03391000
              OCT0000046631633060  ,  %  004WITH                        03392000
              OCT0000000010700247  ,  %  00008Y2P                       03393000
              OCT0000056651316325  ,  %  005WRITE                       03394000
              OCT0000000020700000  ,  %  0000+Y00                       03395000
              OCT0000037131476060  ;  %  003ZIP                         03396000
              FILL RESTACK[*] WITH         % BPL                        03397000
                  0,    0,    0,    0,    0,    0,    0,    0,          03398000
                  0,    0,    0,    0,    0,    0,    0,    0,          03399000
                  0,   12,   20,   35,   55,   59,   65,   68,          03400000
                  0,   74,    0,    0,    0,    0,    0,    0,          03401000
                  0,    0,    0,   79,   86,   90,   98,  115,          03402000
                  0,  127,    0,    0,    0,    0,    0,    0,          03403000
                  0,    0,  141,  153,  161,  163,  169,    0,          03404000
              0,171,0,0,0,0,0,0;                                        03405000
              GO TO EXIT;                                               03406000
LESP:                                                                   03407000
              FILL RESERVED[*] WITH    0,  % ESPOL                      03408000
              OCT0000000006600000  ,  %  00006 00                       03409000
              OCT0000032122626060  ,  %  003ABS                         03410000
              OCT0000000160400001  ,  %  0001 |01                       03411000
              OCT0000032124246060  ,  %  003ADD                         03412000
              OCT0000000010500003  ,  %  00008Q03                       03413000
              OCT0000032145246060  ,  %  003AND                         03414000
              OCT0000000011600005  ,  %  00009 05                       03415000
              OCT0000052151512170  ,  %  005ARRAY                       03416000
              OCT0000000000400000  ,  %  00000|00                       03417000
              OCT0000052225273145  ,  %  005BEGIN                       03418000
              OCT0000000011300011  ,  %  00009H09                       03419000
              OCT0000072246464325  ,  %  007BOOLE                       03420000
              OCT2145606060606060  ,  %  AN                             03421000
              OCT0000000021600013  ,  %  0000A 0@                       03422000
              OCT0000032251636060  ,  %  003BRT                         03423000
              OCT0000000021700000  ,  %  0000AY00                       03424000
              OCT0000032362226060  ,  %  003CSB                         03425000
              OCT0000000022000020  ,  %  0000B00+                       03426000
              OCT0000032323676060  ,  %  003CCX                         03427000
              OCT0000000022100022  ,  %  0000B80B                       03428000
              OCT0000032324236060  ,  %  003CDC                         03429000
              OCT0000000022200024  ,  %  0000B+0D                       03430000
              OCT0000032326436060  ,  %  003CFL                         03431000
              OCT0000000022300026  ,  %  0000BH0F                       03432000
              OCT0000032326256060  ,  %  003CFE                         03433000
              OCT0000000022400030  ,  %  0000B|0H                       03434000
              OCT0000032326676060  ,  %  003CFX                         03435000
              OCT0000000022500032  ,  %  0000BQ0.                       03436000
              OCT0000032346236060  ,  %  003COC                         03437000
              OCT0000000022600034  ,  %  0000B 0&                       03438000
              OCT0000032346446060  ,  %  003COM                         03439000
              OCT0000000000700036  ,  %  00000Y0<                       03440000
              OCT0000072346444425  ,  %  007COMME                       03441000
              OCT4563606060606060  ,  %  NT                             03442000
              OCT0000000022700040  ,  %  0000BY0|                       03443000
              OCT0000032330626060  ,  %  003CHS                         03444000
              OCT0000000007300000  ,  %  00007H00                       03445000
              OCT0000042464444760  ,  %  004DUMP                        03446000
              OCT0000000023000045  ,  %  0000C00N                       03447000
              OCT0000032464476060  ,  %  003DUP                         03448000
              OCT0000000023100047  ,  %  0000C80P                       03449000
              OCT0000032425436060  ,  %  003DEL                         03450000
              OCT0000000011700051  ,  %  00009Y0R                       03451000
              OCT0000062425263145  ,  %  006DEFIN                       03452000
              OCT2560606060606060  ,  %  E                              03453000
              OCT0000000010200053  ,  %  00008+0*                       03454000
              OCT0000022446606060  ,  %  002DO                          03455000
              OCT0000000007200056  ,  %  00007+0;                       03456000
              OCT0000062446642243  ,  %  006DOUBL                       03457000
              OCT2560606060606060  ,  %  E                              03458000
              OCT0000000023200060  ,  %  0000C+0                        03459000
              OCT0000032431216060  ,  %  003DIA                         03460000
              OCT0000000023300063  ,  %  0000CH0T                       03461000
              OCT0000032431226060  ,  %  003DIB                         03462000
              OCT0000000007500065  ,  %  00007Q0V                       03463000
              OCT0000032431656060  ,  %  003DIV                         03464000
              OCT0000000007600000  ,  %  00007 00                       03465000
              OCT0000042543622560  ,  %  004ELSE                        03466000
              OCT0000000000500071  ,  %  00000Q0Z                       03467000
              OCT0000032545246060  ,  %  003END                         03468000
              OCT0000000023400073  ,  %  0000C|0%                       03469000
              OCT0000032550436060  ,  %  003EQL                         03470000
              OCT0000000006400075  ,  %  00006|0=                       03471000
              OCT0000032550656060  ,  %  003EQV                         03472000
              OCT0000000001300000  ,  %  00001H00                       03473000
              OCT0000052621436225  ,  %  005FALSE                       03474000
              OCT0000000023500101  ,  %  0000CQ11                       03475000
              OCT0000032623436060  ,  %  003FCL                         03476000
              OCT0000000023600103  ,  %  0000C 13                       03477000
              OCT0000032623256060  ,  %  003FCE                         03478000
              OCT0000000023700105  ,  %  0000CY15                       03479000
              OCT0000032623676060  ,  %  003FCX                         03480000
              OCT0000000024000107  ,  %  0000D017                       03481000
              OCT0000042643212760  ,  %  004FLAG                        03482000
              OCT0000000024100111  ,  %  0000D819                       03483000
              OCT0000032626676060  ,  %  003FFX                         03484000
              OCT0000000010000113  ,  %  0000801@                       03485000
              OCT0000032646516060  ,  %  003FOR                         03486000
              OCT0000000012300115  ,  %  0000#H1:                       03487000
              OCT0000072646516621  ,  %  007FORWA                       03488000
              OCT5124606060606060  ,  %  RD                             03489000
              OCT0000000024200000  ,  %  0000D+00                       03490000
              OCT0000032763516060  ,  %  003GTR                         03491000
              OCT0000000024300122  ,  %  0000DH1B                       03492000
              OCT0000032725506060  ,  %  003GEQ                         03493000
              OCT0000000001500124  ,  %  00001Q1D                       03494000
              OCT0000022746606060  ,  %  002GO                          03495000
              OCT0000000024400000  ,  %  0000D|00                       03496000
              OCT0000033043226060  ,  %  003HLB                         03497000
              OCT0000000024500130  ,  %  0000DQ1H                       03498000
              OCT0000043064456360  ,  %  004HUNT                        03499000
              OCT0000000024600132  ,  %  0000D 1.                       03500000
              OCT0000033047026060  ,  %  003HP2                         03501000
              OCT0000000024700000  ,  %  0000DY00                       03502000
              OCT0000033162246060  ,  %  003ISD                         03503000
              OCT0000000025000136  ,  %  0000E01<                       03504000
              OCT0000033162456060  ,  %  003ISN                         03505000
              OCT0000000025100140  ,  %  0000E81|                       03506000
              OCT0000033163316060  ,  %  003ITI                         03507000
              OCT0000000025200142  ,  %  0000E+1K                       03508000
              OCT0000033124656060  ,  %  003IDV                         03509000
              OCT0000000006100144  ,  %  0000681M                       03510000
              OCT0000023145606060  ,  %  002IN                          03511000
              OCT0000000025300146  ,  %  0000EH1O                       03512000
              OCT0000033145216060  ,  %  003INA                         03513000
              OCT0000000025400150  ,  %  0000E|1Q                       03514000
              OCT0000033145226060  ,  %  003INB                         03515000
              OCT0000000011200152  ,  %  00009+1$                       03516000
              OCT0000073145632527  ,  %  007INTEG                       03517000
              OCT2551606060606060  ,  %  ER                             03518000
              OCT0000000025500154  ,  %  0000EQ1-                       03519000
              OCT0000033145676060  ,  %  003INX                         03520000
              OCT0000000025600157  ,  %  0000E 1{                       03521000
              OCT0000033145316060  ,  %  003INI                         03522000
              OCT0000000001600161  ,  %  00001 1/                       03523000
              OCT0000023126606060  ,  %  002IF                          03524000
              OCT0000000025700163  ,  %  0000EY1T                       03525000
              OCT0000033146516060  ,  %  003IOR                         03526000
              OCT0000000026000165  ,  %  0000F01V                       03527000
              OCT0000033147026060  ,  %  003IP2                         03528000
              OCT0000000026100167  ,  %  0000F81X                       03529000
              OCT0000033147016060  ,  %  003IP1                         03530000
              OCT0000000026200171  ,  %  0000F+1Z                       03531000
              OCT0000033147626060  ,  %  003IPS                         03532000
              OCT0000000026300173  ,  %  0000FH1%                       03533000
              OCT0000033131466060  ,  %  003IIO                         03534000
              OCT0000000011400000  ,  %  00009|00                       03535000
              OCT0000054321222543  ,  %  005LABEL                       03536000
              OCT0000000026400177  ,  %  0000F|1"                       03537000
              OCT0000034362626060  ,  %  003LSS                         03538000
              OCT0000000026500201  ,  %  0000FQ21                       03539000
              OCT0000034343436060  ,  %  003LLL                         03540000
              OCT0000000026700203  ,  %  0000FY23                       03541000
              OCT0000034345246060  ,  %  003LND                         03542000
              OCT0000000027000205  ,  %  0000G025                       03543000
              OCT0000034345276060  ,  %  003LNG                         03544000
              OCT0000000027100207  ,  %  0000G827                       03545000
              OCT0000034346246060  ,  %  003LOD                         03546000
              OCT0000000027200211  ,  %  0000G+29                       03547000
              OCT0000034346516060  ,  %  003LOR                         03548000
              OCT0000000027300213  ,  %  0000GH2@                       03549000
              OCT0000034350656060  ,  %  003LQV                         03550000
              OCT0000000026600215  ,  %  0000F 2:                       03551000
              OCT0000034325506060  ,  %  003LEQ                         03552000
              OCT0000000027400000  ,  %  0000G|00                       03553000
              OCT0000034442626060  ,  %  003MKS                         03554000
              OCT0000000027500221  ,  %  0000GQ2A                       03555000
              OCT0000034464436060  ,  %  003MUL                         03556000
              OCT0000000027600223  ,  %  0000G 2C                       03557000
              OCT0000064425444651  ,  %  006MEMOR                       03558000
              OCT7060606060606060  ,  %  Y                              03559000
              OCT0000000013300225  ,  %  0000@H2E                       03560000
              OCT0000034446246060  ,  %  003MOD                         03561000
              OCT0000000013200230  ,  %  0000@+2H                       03562000
              OCT0000074446453163  ,  %  007MONIT                       03563000
              OCT4651606060606060  ,  %  OR                             03564000
              OCT0000000027700000  ,  %  0000GY00                       03565000
              OCT0000044521226260  ,  %  004NABS                        03566000
              OCT0000000030000235  ,  %  0000H02(                       03567000
              OCT0000044521442560  ,  %  004NAME                        03568000
              OCT0000000030100237  ,  %  0000H82~                       03569000
              OCT0000034525506060  ,  %  003NEQ                         03570000
              OCT0000000030200241  ,  %  0000H+2J                       03571000
              OCT0000054526432127  ,  %  005NFLAG                       03572000
              OCT0000000012400243  ,  %  0000#|2L                       03573000
              OCT0000034546636060  ,  %  003NOT                         03574000
              OCT0000000030300245  ,  %  0000HH2N                       03575000
              OCT0000034546476060  ,  %  003NOP                         03576000
              OCT0000000010300000  ,  %  00008H00                       03577000
              OCT0000034664636060  ,  %  003OUT                         03578000
              OCT0000000013500251  ,  %  0000@Q2R                       03579000
              OCT0000034666456060  ,  %  003OWN                         03580000
              OCT0000000010400253  ,  %  00008|2*                       03581000
              OCT0000024651606060  ,  %  002OR                          03582000
              OCT0000000030400000  ,  %  0000H|00                       03583000
              OCT0000064746433162  ,  %  006POLIS                       03584000
              OCT3060606060606060  ,  %  H                              03585000
              OCT0000000030500257  ,  %  0000HQ2{                       03586000
              OCT0000034751436060  ,  %  003PRL                         03587000
              OCT0000000011100262  ,  %  0000982S                       03588000
              OCT0000114751462325  ,  %  009PROCE                       03589000
              OCT2464512560606060  ,  %  DURE                           03590000
              OCT0000000030600000  ,  %  0000H 00                       03591000
              OCT0000035162226060  ,  %  003RSB                         03592000
              OCT0000000030700267  ,  %  0000HY2X                       03593000
              OCT0000035162476060  ,  %  003RSP                         03594000
              OCT0000000031000271  ,  %  0000I02Z                       03595000
              OCT0000035163626060  ,  %  003RTS                         03596000
              OCT0000000031100273  ,  %  0000I82%                       03597000
              OCT0000035163446060  ,  %  003RTM                         03598000
              OCT0000000031200275  ,  %  0000I+2=                       03599000
              OCT0000035163456060  ,  %  003RTN                         03600000
              OCT0000000031300277  ,  %  0000IH2"                       03601000
              OCT0000035163516060  ,  %  003RTR                         03602000
              OCT0000000031400301  ,  %  0000I|31                       03603000
              OCT0000035124626060  ,  %  003RDS                         03604000
              OCT0000000031500303  ,  %  0000IQ33                       03605000
              OCT0000035124656060  ,  %  003RDV                         03606000
              OCT0000000031600305  ,  %  0000I 35                       03607000
              OCT0000035124266060  ,  %  003RDF                         03608000
              OCT0000000011500307  ,  %  00009Q37                       03609000
              OCT0000045125214360  ,  %  004REAL                        03610000
              OCT0000000011000311  ,  %  00009039                       03611000
              OCT0000045125212460  ,  %  004READ                        03612000
              OCT0000000031700313  ,  %  0000IY3@                       03613000
              OCT0000035145466060  ,  %  003RNO                         03614000
              OCT0000000032000315  ,  %  0000.03:                       03615000
              OCT0000035126226060  ,  %  003RFB                         03616000
              OCT0000000032100317  ,  %  0000.83}                       03617000
              OCT0000035151516060  ,  %  003RRR                         03618000
              OCT0000000012500000  ,  %  0000#Q00                       03619000
              OCT0000046221652560  ,  %  004SAVE                        03620000
              OCT0000000032200323  ,  %  0000.+3C                       03621000
              OCT0000036262226060  ,  %  003SSB                         03622000
              OCT0000000032400325  ,  %  0000.|3E                       03623000
              OCT0000036262456060  ,  %  003SSN                         03624000
              OCT0000000032500327  ,  %  0000.Q3G                       03625000
              OCT0000036262266060  ,  %  003SSF                         03626000
              OCT0000000032600331  ,  %  0000. 3I                       03627000
              OCT0000036262476060  ,  %  003SSP                         03628000
              OCT0000000032700333  ,  %  0000.Y3[                       03629000
              OCT0000036263626060  ,  %  003STS                         03630000
              OCT0000000033000335  ,  %  0000[03(                       03631000
              OCT0000036263246060  ,  %  003STD                         03632000
              OCT0000000012600337  ,  %  0000# 3~                       03633000
              OCT0000046263254760  ,  %  004STEP                        03634000
              OCT0000000033100341  ,  %  0000[83J                       03635000
              OCT0000036263456060  ,  %  003STN                         03636000
              OCT0000000033200343  ,  %  0000[+3L                       03637000
              OCT0000036263266060  ,  %  003STF                         03638000
              OCT0000000013100345  ,  %  0000@83N                       03639000
              OCT0000066263512521  ,  %  006STREA                       03640000
              OCT4460606060606060  ,  %  M                              03641000
              OCT0000000163000347  ,  %  0001T03P                       03642000
              OCT0000036264226060  ,  %  003SUB                         03643000
              OCT0000000033300352  ,  %  0000[H3$                       03644000
              OCT0000126264225146  ,  %  00#SUBRO                       03645000
              OCT6463314525606060  ,  %  UTINE                          03646000
              OCT0000000033400354  ,  %  0000[|3-                       03647000
              OCT0000036245246060  ,  %  003SND                         03648000
              OCT0000000033500357  ,  %  0000[Q3{                       03649000
              OCT0000036226226060  ,  %  003SFB                         03650000
              OCT0000000002000361  ,  %  0000203/                       03651000
              OCT0000066266316323  ,  %  006SWITC                       03652000
              OCT3060606060606060  ,  %  H                              03653000
              OCT0000000014000363  ,  %  0000 03T                       03654000
              OCT0000046231274560  ,  %  004SIGN                        03655000
              OCT0000000033600000  ,  %  0000[ 00                       03656000
              OCT0000036326226060  ,  %  003TFB                         03657000
              OCT0000000033700370  ,  %  0000[Y3Y                       03658000
              OCT0000036326516060  ,  %  003TFR                         03659000
              OCT0000000001400372  ,  %  00001|3,                       03660000
              OCT0000026346606060  ,  %  002TO                          03661000
              OCT0000000034000374  ,  %  0000&03!                       03662000
              OCT0000036346476060  ,  %  003TOP                         03663000
              OCT0000000007700376  ,  %  00007Y3]                       03664000
              OCT0000046330254560  ,  %  004THEN                        03665000
              OCT0000000034100400  ,  %  0000&840                       03666000
              OCT0000036331466060  ,  %  003TIO                         03667000
              OCT0000000034200402  ,  %  0000&+42                       03668000
              OCT0000036351226060  ,  %  003TRB                         03669000
              OCT0000000001200404  ,  %  00001+44                       03670000
              OCT0000046351642560  ,  %  004TRUE                        03671000
              OCT0000000010600000  ,  %  00008 00                       03672000
              OCT0000056445633143  ,  %  005UNTIL                       03673000
              OCT0000000013000000  ,  %  0000@000                       03674000
              OCT0000056521436425  ,  %  005VALUE                       03675000
              OCT0000000034300412  ,  %  0000&H4#                       03676000
              OCT0000036526316060  ,  %  003VFI                         03677000
              OCT0000000010100000  ,  %  00008800                       03678000
              OCT0000056630314325  ,  %  005WHILE                       03679000
              OCT0000000010700416  ,  %  00008Y4>                       03680000
              OCT0000056651316325  ,  %  005WRITE                       03681000
              OCT0000000034400000  ,  %  0000&|00                       03682000
              OCT0000036723306060  ,  %  003XCH                         03683000
              OCT0000000034500422  ,  %  0000&Q4B                       03684000
              OCT0000036731636060  ,  %  003XIT                         03685000
              OCT0000000034600000  ,  %  0000& 00                       03686000
              OCT0000037147016060  ,  %  003ZP1                         03687000
              OCT0000000020700426  ,  %  0000+Y4F                       03688000
              OCT0000037131476060  ;  %  003ZIP                         03689000
              FILL RESTACK[*] WITH         % ESPOL                      03690000
                  0,    0,    0,    0,    0,    0,    0,    0,          03691000
                  0,    0,    0,    0,    0,    0,    0,    0,          03692000
                  0,    7,   14,   35,   55,   63,   79,   86,          03693000
                 92,  125,    0,    0,    0,    0,    0,    0,          03694000
                  0,    0,    0,  143,  154,  167,  173,  180,          03695000
                  0,  209,    0,    0,    0,    0,    0,    0,          03696000
                  0,    0,  246,  262,  264,  268,  272,  276,          03697000
              0,280,0,0,0,0,0,0;                                        03698000
              GO TO EXIT;                                               03699000
LALG:                                                                   03700000
              FILL RESERVED[*] WITH    0,  %  ALGOL                     03701000
              OCT0000000006600000  ,  %  00006 00                       03702000
              OCT0000032122626060  ,  %  003ABS                         03703000
              OCT0000000160400001  ,  %  0001 |01                       03704000
              OCT0000032124246060  ,  %  003ADD                         03705000
              OCT0000000006700003  ,  %  00006Y03                       03706000
              OCT0000052143473021  ,  %  005ALPHA                       03707000
              OCT0000000010500005  ,  %  00008Q05                       03708000
              OCT0000032145246060  ,  %  003AND                         03709000
              OCT0000000007000007  ,  %  00007007                       03710000
              OCT0000062151236321  ,  %  006ARCTA                       03711000
              OCT4560606060606060  ,  %  N                              03712000
              OCT0000000011600011  ,  %  00009 09                       03713000
              OCT0000052151512170  ,  %  005ARRAY                       03714000
              OCT0000000000400000  ,  %  00000|00                       03715000
              OCT0000052225273145  ,  %  005BEGIN                       03716000
              OCT0000000011300016  ,  %  00009H0>                       03717000
              OCT0000072246464325  ,  %  007BOOLE                       03718000
              OCT2145606060606060  ,  %  AN                             03719000
              OCT0000000160500000  ,  %  0001 Q00                       03720000
              OCT0000032330516060  ,  %  003CHR                         03721000
              OCT0000000160600023  ,  %  0001  0C                       03722000
              OCT0000022331606060  ,  %  002CI                          03723000
              OCT0000000000700025  ,  %  00000Y0E                       03724000
              OCT0000072346444425  ,  %  007COMME                       03725000
              OCT4563606060606060  ,  %  NT                             03726000
              OCT0000000007400027  ,  %  00007|0G                       03727000
              OCT0000032346626060  ,  %  003COS                         03728000
              OCT0000000160700000  ,  %  0001 Y00                       03729000
              OCT0000022422606060  ,  %  002DB                          03730000
              OCT0000000007100034  ,  %  0000780&                       03731000
              OCT0000032422436060  ,  %  003DBL                         03732000
              OCT0000000161000036  ,  %  0001/00<                       03733000
              OCT0000022423606060  ,  %  002DC                          03734000
              OCT0000000161100040  ,  %  0001/80|                       03735000
              OCT0000032425236060  ,  %  003DEC                         03736000
              OCT0000000011700042  ,  %  00009Y0K                       03737000
              OCT0000062425263145  ,  %  006DEFIN                       03738000
              OCT2560606060606060  ,  %  E                              03739000
              OCT0000000161200044  ,  %  0001/+0M                       03740000
              OCT0000022431606060  ,  %  002DI                          03741000
              OCT0000000007500047  ,  %  00007Q0P                       03742000
              OCT0000032431656060  ,  %  003DIV                         03743000
              OCT0000000010200051  ,  %  00008+0R                       03744000
              OCT0000022446606060  ,  %  002DO                          03745000
              OCT0000000007200053  ,  %  00007+0*                       03746000
              OCT0000062446642243  ,  %  006DOUBL                       03747000
              OCT2560606060606060  ,  %  E                              03748000
              OCT0000000161300055  ,  %  0001/H0)                       03749000
              OCT0000022462606060  ,  %  002DS                          03750000
              OCT0000000007300060  ,  %  00007H0                        03751000
              OCT0000042464444760  ,  %  004DUMP                        03752000
              OCT0000000007600000  ,  %  00007 00                       03753000
              OCT0000042543622560  ,  %  004ELSE                        03754000
              OCT0000000000500064  ,  %  00000Q0U                       03755000
              OCT0000032545246060  ,  %  003END                         03756000
              OCT0000000006500066  ,  %  00006Q0W                       03757000
              OCT0000062545633125  ,  %  006ENTIE                       03758000
              OCT5160606060606060  ,  %  R                              03759000
              OCT0000000006400070  ,  %  00006|0Y                       03760000
              OCT0000032550656060  ,  %  003EQV                         03761000
              OCT0000000006300073  ,  %  00006H0%                       03762000
              OCT0000032567476060  ,  %  003EXP                         03763000
              OCT0000000001300000  ,  %  00001H00                       03764000
              OCT0000052621436225  ,  %  005FALSE                       03765000
              OCT0000000012000077  ,  %  0000#00"                       03766000
              OCT0000042631432560  ,  %  004FILE                        03767000
              OCT0000000012100101  ,  %  0000#811                       03768000
              OCT0000042631434360  ,  %  004FILL                        03769000
              OCT0000000010000103  ,  %  00008013                       03770000
              OCT0000032646516060  ,  %  003FOR                         03771000
              OCT0000000012200105  ,  %  0000#+15                       03772000
              OCT0000062646514421  ,  %  006FORMA                       03773000
              OCT6360606060606060  ,  %  T                              03774000
              OCT0000000012300107  ,  %  0000#H17                       03775000
              OCT0000072646516621  ,  %  007FORWA                       03776000
              OCT5124606060606060  ,  %  RD                             03777000
              OCT0000000001500000  ,  %  00001Q00                       03778000
              OCT0000022746606060  ,  %  002GO                          03779000
              OCT0000000001600000  ,  %  00001 00                       03780000
              OCT0000023126606060  ,  %  002IF                          03781000
              OCT0000000006200117  ,  %  00006+1}                       03782000
              OCT0000033144476060  ,  %  003IMP                         03783000
              OCT0000000006100121  ,  %  0000681A                       03784000
              OCT0000023145606060  ,  %  002IN                          03785000
              OCT0000000011200123  ,  %  00009+1C                       03786000
              OCT0000073145632527  ,  %  007INTEG                       03787000
              OCT2551606060606060  ,  %  ER                             03788000
              OCT0000000161400000  ,  %  0001/|00                       03789000
              OCT0000044164444760  ,  %  004JUMP                        03790000
              OCT0000000011400000  ,  %  00009|00                       03791000
              OCT0000054321222543  ,  %  005LABEL                       03792000
              OCT0000000161500132  ,  %  0001/Q1.                       03793000
              OCT0000034331636060  ,  %  003LIT                         03794000
              OCT0000000006000134  ,  %  0000601&                       03795000
              OCT0000024345606060  ,  %  002LN                          03796000
              OCT0000000161600136  ,  %  0001/ 1<                       03797000
              OCT0000034346236060  ,  %  003LOC                         03798000
              OCT0000000161700140  ,  %  0001/Y1|                       03799000
              OCT0000054346232143  ,  %  005LOCAL                       03800000
              OCT0000000013300000  ,  %  0000@H00                       03801000
              OCT0000034446246060  ,  %  003MOD                         03802000
              OCT0000000013200144  ,  %  0000@+1M                       03803000
              OCT0000074446453163  ,  %  007MONIT                       03804000
              OCT4651606060606060  ,  %  OR                             03805000
              OCT0000000004000000  ,  %  00004000                       03806000
              OCT0000024546606060  ,  %  002NO                          03807000
              OCT0000000012400151  ,  %  0000#|1R                       03808000
              OCT0000034546636060  ,  %  003NOT                         03809000
              OCT0000000162000153  ,  %  0001S01*                       03810000
              OCT0000034564446060  ,  %  003NUM                         03811000
              OCT0000000162100000  ,  %  0001S800                       03812000
              OCT0000034623636060  ,  %  003OCT                         03813000
              OCT0000000010400157  ,  %  00008|1{                       03814000
              OCT0000024651606060  ,  %  002OR                          03815000
              OCT0000000010300161  ,  %  00008H1/                       03816000
              OCT0000034664636060  ,  %  003OUT                         03817000
              OCT0000000013500163  ,  %  0000@Q1T                       03818000
              OCT0000034666456060  ,  %  003OWN                         03819000
              OCT0000000002300000  ,  %  00002H00                       03820000
              OCT0000044721272560  ,  %  004PAGE                        03821000
              OCT0000000011100167  ,  %  0000981X                       03822000
              OCT0000114751462325  ,  %  009PROCE                       03823000
              OCT2464512560606060  ,  %  DURE                           03824000
              OCT0000000011000000  ,  %  00009000                       03825000
              OCT0000045125212460  ,  %  004READ                        03826000
              OCT0000000011500174  ,  %  00009Q1!                       03827000
              OCT0000045125214360  ,  %  004REAL                        03828000
              OCT0000000013600176  ,  %  0000@ 1]                       03829000
              OCT0000075125432521  ,  %  007RELEA                       03830000
              OCT6225606060606060  ,  %  SE                             03831000
              OCT0000000162200200  ,  %  0001S+20                       03832000
              OCT0000055125622563  ,  %  005RESET                       03833000
              OCT0000000013700203  ,  %  0000@Y23                       03834000
              OCT0000075125652551  ,  %  007REVER                       03835000
              OCT6225606060606060  ,  %  SE                             03836000
              OCT0000000012500000  ,  %  0000#Q00                       03837000
              OCT0000046221652560  ,  %  004SAVE                        03838000
              OCT0000000162300210  ,  %  0001SH28                       03839000
              OCT0000026222606060  ,  %  002SB                          03840000
              OCT0000000162400212  ,  %  0001S|2#                       03841000
              OCT0000026223606060  ,  %  002SC                          03842000
              OCT0000000162500214  ,  %  0001SQ2                        03843000
              OCT0000036225636060  ,  %  003SET                         03844000
              OCT0000000162600216  ,  %  0001S 2>                       03845000
              OCT0000026231606060  ,  %  002SI                          03846000
              OCT0000000014000220  ,  %  0000 02+                       03847000
              OCT0000046231274560  ,  %  004SIGN                        03848000
              OCT0000000014100222  ,  %  0000 82B                       03849000
              OCT0000036231456060  ,  %  003SIN                         03850000
              OCT0000000162700224  ,  %  0001SY2D                       03851000
              OCT0000046242314760  ,  %  004SKIP                        03852000
              OCT0000000013400226  ,  %  0000@|2F                       03853000
              OCT0000046250516360  ,  %  004SQRT                        03854000
              OCT0000000012600230  ,  %  0000# 2H                       03855000
              OCT0000046263254760  ,  %  004STEP                        03856000
              OCT0000000013100232  ,  %  0000@82.                       03857000
              OCT0000066263512521  ,  %  006STREA                       03858000
              OCT4460606060606060  ,  %  M                              03859000
              OCT0000000163000234  ,  %  0001T02&                       03860000
              OCT0000036264226060  ,  %  003SUB                         03861000
              OCT0000000002000237  ,  %  0000202~                       03862000
              OCT0000066266316323  ,  %  006SWITC                       03863000
              OCT3060606060606060  ,  %  H                              03864000
              OCT0000000163100000  ,  %  0001T800                       03865000
              OCT0000056321434370  ,  %  005TALLY                       03866000
              OCT0000000007700244  ,  %  00007Y2M                       03867000
              OCT0000046330254560  ,  %  004THEN                        03868000
              OCT0000000001400246  ,  %  00001|2O                       03869000
              OCT0000026346606060  ,  %  002TO                          03870000
              OCT0000000163200250  ,  %  0001T+2Q                       03871000
              OCT0000066346272743  ,  %  006TOGGL                       03872000
              OCT2560606060606060  ,  %  E                              03873000
              OCT0000000001200252  ,  %  00001+2$                       03874000
              OCT0000046351642560  ,  %  004TRUE                        03875000
              OCT0000000010600000  ,  %  00008 00                       03876000
              OCT0000056445633143  ,  %  005UNTIL                       03877000
              OCT0000000013000000  ,  %  0000@000                       03878000
              OCT0000056521436425  ,  %  005VALUE                       03879000
              OCT0000000163300000  ,  %  0001TH00                       03880000
              OCT0000036624626060  ,  %  003WDS                         03881000
              OCT0000000010100263  ,  %  0000882T                       03882000
              OCT0000056630314325  ,  %  005WHILE                       03883000
              OCT0000000012700265  ,  %  0000#Y2V                       03884000
              OCT0000046631633060  ,  %  004WITH                        03885000
              OCT0000000010700267  ,  %  00008Y2X                       03886000
              OCT0000056651316325  ,  %  005WRITE                       03887000
              OCT0000000163400000  ,  %  0001T|00                       03888000
              OCT0000037146456060  ;  %  003ZON                         03889000
              FILL RESTACK[*] WITH         % ALGOL                      03890000
                  0,    0,    0,    0,    0,    0,    0,    0,          03891000
                  0,    0,    0,    0,    0,    0,    0,    0,          03892000
                  0,   12,   16,   26,   50,   61,   74,   77,          03893000
                  0,   85,    0,    0,    0,    0,    0,    0,          03894000
                  0,   88,    0,   98,  102,  109,  117,  121,          03895000
                  0,  133,    0,    0,    0,    0,    0,    0,          03896000
                  0,    0,  161,  173,  175,  177,  185,    0,          03897000
              0,187,0,0,0,0,0,0;                                        03898000
              GO TO EXIT;                                               03899000
LFLO:                                                                   03900000
              FILL RESERVED[*] WITH    0,  % FLOW                       03901000
              OCT0000000000100000  ,  %  00000800                       03902000
              OCT0000056263215163  ,  %  005START                       03903000
              OCT0000000000200000  ,  %  00000+00                       03904000
              OCT0000062631453162  ,  %  006FINIS                       03905000
              OCT3060606060606060  ,  %  H                              03906000
              OCT0000000000300000  ,  %  00000H00                       03907000
              OCT0000045064316360  ,  %  004QUIT                        03908000
              OCT0000000000400000  ,  %  00000|00                       03909000
              OCT0000052225273145  ,  %  005BEGIN                       03910000
              OCT0000000000500000  ,  %  00000Q00                       03911000
              OCT0000032545246060  ,  %  003END                         03912000
              OCT0000000000600010  ,  %  00000 08                       03913000
              OCT0000032246676060  ,  %  003BOX                         03914000
              OCT0000000000700000  ,  %  00000Y00                       03915000
              OCT0000072346444425  ,  %  007COMME                       03916000
              OCT4563606060606060  ,  %  NT                             03917000
              OCT0000000001000000  ,  %  00001000                       03918000
              OCT0000043025212460  ,  %  004HEAD                        03919000
              OCT0000000001000021  ,  %  0000100A                       03920000
              OCT0000073025212431  ,  %  007HEADI                       03921000
              OCT4527606060606060  ,  %  NG                             03922000
              OCT0000000001100000  ,  %  00001800                       03923000
              OCT0000056331634325  ,  %  005TITLE                       03924000
              OCT0000000001200026  ,  %  00001+0F                       03925000
              OCT0000046351642560  ,  %  004TRUE                        03926000
              OCT0000000001300003  ,  %  00001H03                       03927000
              OCT0000052621436225  ,  %  005FALSE                       03928000
              OCT0000000001400030  ,  %  00001|0H                       03929000
              OCT0000026346606060  ,  %  002TO                          03930000
              OCT0000000001500000  ,  %  00001Q00                       03931000
              OCT0000022746606060  ,  %  002GO                          03932000
              OCT0000000001600000  ,  %  00001 00                       03933000
              OCT0000023126606060  ,  %  002IF                          03934000
              OCT0000000002000001  ,  %  00002001                       03935000
              OCT0000066266316323  ,  %  006SWITC                       03936000
              OCT3060606060606060  ,  %  H                              03937000
              OCT0000000002100012  ,  %  0000280#                       03938000
              OCT0000052545632551  ,  %  005ENTER                       03939000
              OCT0000000002200045  ,  %  00002+0N                       03940000
              OCT0000042567316360  ,  %  004EXIT                        03941000
              OCT0000000002300000  ,  %  00002H00                       03942000
              OCT0000044721272560  ,  %  004PAGE                        03943000
              OCT0000000002500034  ,  %  00002Q0&                       03944000
              OCT0000046325514460  ,  %  004TERM                        03945000
              OCT0000000002500053  ,  %  00002Q0*                       03946000
              OCT0000116325514431  ,  %  009TERMI                       03947000
              OCT4521632560606060  ,  %  NATE                           03948000
              OCT0000000002600051  ,  %  00002 0R                       03949000
              OCT0000064721272531  ,  %  006PAGEI                       03950000
              OCT2460606060606060  ,  %  D                              03951000
              OCT0000000002700016  ,  %  00002Y0>                       03952000
              OCT0000032346436060  ,  %  003COL                         03953000
              OCT0000000002700063  ,  %  00002Y0T                       03954000
              OCT0000062346436444  ,  %  006COLUM                       03955000
              OCT4560606060606060  ,  %  N                              03956000
              OCT0000000003000060  ,  %  0000300                        03957000
              OCT0000074721272531  ,  %  007PAGEI                       03958000
              OCT4523606060606060  ,  %  NC                             03959000
              OCT0000000003100000  ,  %  00003800                       03960000
              OCT0000064421672346  ,  %  006MAXCO                       03961000
              OCT4360606060606060  ,  %  L                              03962000
              OCT0000000003200000  ,  %  00003+00                       03963000
              OCT0000042421632560  ,  %  004DATE                        03964000
              OCT0000000003300000  ,  %  00003H00                       03965000
              OCT0000044546632560  ,  %  004NOTE                        03966000
              OCT0000000004100076  ,  %  0000480]                       03967000
              OCT0000042446256260  ,  %  004DOES                        03968000
              OCT0000000004100040  ,  %  0000480|                       03969000
              OCT0000023162606060  ,  %  002IS                          03970000
              OCT0000000004100000  ,  %  00004800                       03971000
              OCT0000036621626060  ,  %  003WAS                         03972000
              OCT0000000003400055  ,  %  00003|0)                       03973000
              OCT0000056321224325  ,  %  005TABLE                       03974000
              OCT0000000003500065  ,  %  00003Q0V                       03975000
              OCT0000042346242560  ,  %  004CODE                        03976000
              OCT0000000003600014  ,  %  00003 0                        03977000
              OCT0000072246674645  ,  %  007BOXON                       03978000
              OCT4370606060606060  ,  %  LY                             03979000
              OCT0000000003700000  ,  %  00003Y00                       03980000
              OCT0000037025626060  ,  %  003YES                         03981000
              OCT0000000004000100  ,  %  00004010                       03982000
              OCT0000024546606060  ,  %  002NO                          03983000
              OCT0000000004100110  ,  %  00004818                       03984000
              OCT0000046325626360  ;  %  004TEST                        03985000
              FILL RESTACK[*] WITH         % FLOW                       03986000
                  0,    0,    0,    0,    0,    0,    0,    0,          03987000
                  0,    0,    0,    0,    0,    0,    0,    0,          03988000
                  0,    0,   76,   74,   66,   39,   26,   30,          03989000
                 19,   68,    0,    0,    0,    0,    0,    0,          03990000
                  0,    0,    0,    0,   59,   81,    0,   56,          03991000
                  6,    0,    0,    0,    0,    0,    0,    0,          03992000
                  0,    0,   34,   83,    0,    0,   70,    0,          03993000
              79,0,0,0,0,0,0,0;                                         03994000
              GO TO EXIT;                                               03995000
LCOB:                                                                   03996000
              FILL RESERVED[*] WITH    0,                               03997000
              OCT0000000000500000  ,  %  00000Q00                       03998000
              OCT0000032545246060  ,  %  003END                         03999000
              OCT0000000001400000  ,  %  00001|00                       04000000
              OCT0000026346606060  ,  %  002TO                          04001000
              OCT0000000001500000  ,  %  00001Q00                       04002000
              OCT0000022746606060  ,  %  002GO                          04003000
              OCT0000000001600000  ,  %  00001 00                       04004000
              OCT0000023126606060  ,  %  002IF                          04005000
              OCT0000000002100001  ,  %  00002801                       04006000
              OCT0000052545632551  ,  %  005ENTER                       04007000
              OCT0000000002200011  ,  %  00002+09                       04008000
              OCT0000042567316360  ,  %  004EXIT                        04009000
              OCT0000000003300000  ,  %  00003H00                       04010000
              OCT0000044546632560  ,  %  004NOTE                        04011000
              OCT0000000004000015  ,  %  0000400:                       04012000
              OCT0000024546606060  ,  %  002NO                          04013000
              OCT0000000004100007  ,  %  00004807                       04014000
              OCT0000023162606060  ,  %  002IS                          04015000
              OCT0000000006000000  ,  %  00006000                       04016000
              OCT0000024345606060  ,  %  002LN                          04017000
              OCT0000000006100021  ,  %  0000680A                       04018000
              OCT0000023145606060  ,  %  002IN                          04019000
              OCT0000000006300013  ,  %  00006H0@                       04020000
              OCT0000032567476060  ,  %  003EXP                         04021000
              OCT0000000006600000  ,  %  00006 00                       04022000
              OCT0000032122626060  ,  %  003ABS                         04023000
              OCT0000000007000031  ,  %  0000700I                       04024000
              OCT0000062151236321  ,  %  006ARCTA                       04025000
              OCT4560606060606060  ,  %  N                              04026000
              OCT0000000007300000  ,  %  00007H00                       04027000
              OCT0000042464444760  ,  %  004DUMP                        04028000
              OCT0000000007400000  ,  %  00007|00                       04029000
              OCT0000032346626060  ,  %  003COS                         04030000
              OCT0000000007600027  ,  %  00007 0G                       04031000
              OCT0000042543622560  ,  %  004ELSE                        04032000
              OCT0000000007700003  ,  %  00007Y03                       04033000
              OCT0000046330254560  ,  %  004THEN                        04034000
              OCT0000000010000000  ,  %  00008000                       04035000
              OCT0000032646516060  ,  %  003FOR                         04036000
              OCT0000000010400000  ,  %  00008|00                       04037000
              OCT0000024651606060  ,  %  002OR                          04038000
              OCT0000000010500033  ,  %  00008Q0[                       04039000
              OCT0000032145246060  ,  %  003AND                         04040000
              OCT0000000010600000  ,  %  00008 00                       04041000
              OCT0000056445633143  ,  %  005UNTIL                       04042000
              OCT0000000010700000  ,  %  00008Y00                       04043000
              OCT0000056651316325  ,  %  005WRITE                       04044000
              OCT0000000011000000  ,  %  00009000                       04045000
              OCT0000045125212460  ,  %  004READ                        04046000
              OCT0000000011100000  ,  %  00009800                       04047000
              OCT0000114751462325  ,  %  009PROCE                       04048000
              OCT2464512560606060  ,  %  DURE                           04049000
              OCT0000000011400023  ,  %  00009|0C                       04050000
              OCT0000054321222543  ,  %  005LABEL                       04051000
              OCT0000000011700036  ,  %  00009Y0<                       04052000
              OCT0000062425263145  ,  %  006DEFIN                       04053000
              OCT2560606060606060  ,  %  E                              04054000
              OCT0000000012000046  ,  %  0000#00O                       04055000
              OCT0000042631432560  ,  %  004FILE                        04056000
              OCT0000000012200072  ,  %  0000#+0,                       04057000
              OCT0000062646514421  ,  %  006FORMA                       04058000
              OCT6360606060606060  ,  %  T                              04059000
              OCT0000000012400017  ,  %  0000#|0}                       04060000
              OCT0000034546636060  ,  %  003NOT                         04061000
              OCT0000000012700056  ,  %  0000#Y0;                       04062000
              OCT0000046631633060  ,  %  004WITH                        04063000
              OCT0000000013000000  ,  %  0000@000                       04064000
              OCT0000056521436425  ,  %  005VALUE                       04065000
              OCT0000000013200000  ,  %  0000@+00                       04066000
              OCT0000074446453163  ,  %  007MONIT                       04067000
              OCT2551606060606060  ,  %  ER                             04068000
              OCT0000000013300105  ,  %  0000@H15                       04069000
              OCT0000034446246060  ,  %  003MOD                         04070000
              OCT0000000013400000  ,  %  0000@|00                       04071000
              OCT0000046250516360  ,  %  004SQRT                        04072000
              OCT0000000013600060  ,  %  0000@ 0                        04073000
              OCT0000075125432521  ,  %  007RELEA                       04074000
              OCT6225606060606060  ,  %  SE                             04075000
              OCT0000000014000112  ,  %  0000 01#                       04076000
              OCT0000046231274560  ,  %  004SIGN                        04077000
              OCT0000000014100117  ,  %  0000 81}                       04078000
              OCT0000036231456060  ,  %  003SIN                         04079000
              OCT0000000014400052  ,  %  0000 |0$                       04080000
              OCT0000072124245125  ,  %  007ADDRE                       04081000
              OCT6262606060606060  ,  %  SS                             04082000
              OCT0000000015000040  ,  %  0000:00|                       04083000
              OCT0000052343466225  ,  %  005CLOSE                       04084000
              OCT0000000015100126  ,  %  0000:81F                       04085000
              OCT0000072346456351  ,  %  007CONTR                       04086000
              OCT4643606060606060  ,  %  OL                             04087000
              OCT0000000015500067  ,  %  0000:Q0X                       04088000
              OCT0000042431624260  ,  %  004DISK                        04089000
              OCT0000000016000065  ,  %  0000>00V                       04090000
              OCT0000044346234260  ,  %  004LOCK                        04091000
              OCT0000000016200050  ,  %  0000>+0Q                       04092000
              OCT0000024626606060  ,  %  002OF                          04093000
              OCT0000000016300137  ,  %  0000>H1~                       04094000
              OCT0000044647254560  ,  %  004OPEN                        04095000
              OCT0000000016500062  ,  %  0000>Q0S                       04096000
              OCT0000074751314563  ,  %  007PRINT                       04097000
              OCT2551606060606060  ,  %  ER                             04098000
              OCT0000000016700143  ,  %  0000>Y1L                       04099000
              OCT0000054764452330  ,  %  005PUNCH                       04100000
              OCT0000000017000146  ,  %  0000}01O                       04101000
              OCT0000054764512725  ,  %  005PURGE                       04102000
              OCT0000000017100114  ,  %  0000}81                        04103000
              OCT0000065125212425  ,  %  006READE                       04104000
              OCT5160606060606060  ,  %  R                              04105000
              OCT0000000017200152  ,  %  0000}+1$                       04106000
              OCT0000045125254360  ,  %  004REEL                        04107000
              OCT0000000017300155  ,  %  0000}H1)                       04108000
              OCT0000065125663145  ,  %  006REWIN                       04109000
              OCT2460606060606060  ,  %  D                              04110000
              OCT0000000017400121  ,  %  0000}|1A                       04111000
              OCT0000046225254260  ,  %  004SEEK                        04112000
              OCT0000000017500162  ,  %  0000}Q1S                       04113000
              OCT0000066231274525  ,  %  006SIGNE                       04114000
              OCT2460606060606060  ,  %  D                              04115000
              OCT0000000017600164  ,  %  0000} 1U                       04116000
              OCT0000026245606060  ,  %  002SN                          04117000
              OCT0000000017700167  ,  %  0000}Y1X                       04118000
              OCT0000056247212325  ,  %  005SPACE                       04119000
              OCT0000000020100044  ,  %  0000+80M                       04120000
              OCT0000046321472560  ,  %  004TAPE                        04121000
              OCT0000000020400103  ,  %  0000+|13                       04122000
              OCT0000026521606060  ,  %  002VA                          04123000
              OCT0000000027600110  ,  %  0000G 18                       04124000
              OCT0000064425444651  ,  %  006MEMOR                       04125000
              OCT7060606060606060  ,  %  Y                              04126000
              OCT0000000037200123  ,  %  0000~+1C                       04127000
              OCT0000052122466463  ,  %  005ABOUT                       04128000
              OCT0000000037300202  ,  %  0000~H22                       04129000
              OCT0000062123232547  ,  %  006ACCEP                       04130000
              OCT6360606060606060  ,  %  T                              04131000
              OCT0000000037400204  ,  %  0000~|24                       04132000
              OCT0000062123232562  ,  %  006ACCES                       04133000
              OCT6260606060606060  ,  %  S                              04134000
              OCT0000000037500207  ,  %  0000~Q27                       04135000
              OCT0000062123636421  ,  %  006ACTUA                       04136000
              OCT4360606060606060  ,  %  L                              04137000
              OCT0000000037600212  ,  %  0000~ 2#                       04138000
              OCT0000112124652145  ,  %  009ADVAN                       04139000
              OCT2331452760606060  ,  %  CING                           04140000
              OCT0000000037700215  ,  %  0000~Y2:                       04141000
              OCT0000052126632551  ,  %  005AFTER                       04142000
              OCT0000000040000220  ,  %  0000|02+                       04143000
              OCT0000032143436060  ,  %  003ALL                         04144000
              OCT0000000040100222  ,  %  0000|82B                       04145000
              OCT0000122143473021  ,  %  00#ALPHA                       04146000
              OCT2225633123606060  ,  %  BETIC                          04147000
              OCT0000000040200224  ,  %  0000|+2D                       04148000
              OCT0000142143473021  ,  %  00 ALPHA                       04149000
              OCT4564442551312360  ,  %  NUMERIC                        04150000
              OCT0000000040300227  ,  %  0000|H2G                       04151000
              OCT0000112143632551  ,  %  009ALTER                       04152000
              OCT4521632560606060  ,  %  NATE                           04153000
              OCT0000000040400232  ,  %  0000||2.                       04154000
              OCT0000052143632551  ,  %  005ALTER                       04155000
              OCT0000000040500235  ,  %  0000|Q2(                       04156000
              OCT0000022145606060  ,  %  002AN                          04157000
              OCT0000000040600237  ,  %  0000| 2~                       04158000
              OCT0000052147474370  ,  %  005APPLY                       04159000
              OCT0000000040700241  ,  %  0000|Y2J                       04160000
              OCT0000032151256060  ,  %  003ARE                         04161000
              OCT0000000041000243  ,  %  0000J02L                       04162000
              OCT0000042151252160  ,  %  004AREA                        04163000
              OCT0000000041100245  ,  %  0000J82N                       04164000
              OCT0000052151252162  ,  %  005AREAS                       04165000
              OCT0000000041200247  ,  %  0000J+2P                       04166000
              OCT0000112162232545  ,  %  009ASCEN                       04167000
              OCT2431452760606060  ,  %  DING                           04168000
              OCT0000000041300251  ,  %  0000JH2R                       04169000
              OCT0000062162623127  ,  %  006ASSIG                       04170000
              OCT4560606060606060  ,  %  N                              04171000
              OCT0000000041400254  ,  %  0000J|2-                       04172000
              OCT0000022163606060  ,  %  002AT                          04173000
              OCT0000000041500257  ,  %  0000JQ2{                       04174000
              OCT0000062164633046  ,  %  006AUTHO                       04175000
              OCT5160606060606060  ,  %  R                              04176000
              OCT0000000041600000  ,  %  0000J 00                       04177000
              OCT0000062225264651  ,  %  006BEFOR                       04178000
              OCT2560606060606060  ,  %  E                              04179000
              OCT0000000041700264  ,  %  0000JY2U                       04180000
              OCT0000112225273145  ,  %  009BEGIN                       04181000
              OCT4531452760606060  ,  %  NING                           04182000
              OCT0000000042500267  ,  %  0000KQ2X                       04183000
              OCT0000052243214542  ,  %  005BLANK                       04184000
              OCT0000000042200272  ,  %  0000K+2,                       04185000
              OCT0000042231636260  ,  %  004BITS                        04186000
              OCT0000000042600274  ,  %  0000K 2!                       04187000
              OCT0000052243462342  ,  %  005BLOCK                       04188000
              OCT0000000043000276  ,  %  0000L02]                       04189000
              OCT0000022270606060  ,  %  002BY                          04190000
              OCT0000000043100300  ,  %  0000L830                       04191000
              OCT0000022271606060  ,  %  002BZ                          04192000
              OCT0000000043500130  ,  %  0000LQ1H                       04193000
              OCT0000072330214545  ,  %  007CHANN                       04194000
              OCT2543606060606060  ,  %  EL                             04195000
              OCT0000000043600304  ,  %  0000L 34                       04196000
              OCT0000112330215121  ,  %  009CHARA                       04197000
              OCT2363255160606060  ,  %  CTER                           04198000
              OCT0000000043700307  ,  %  0000LY37                       04199000
              OCT0000122330215121  ,  %  00#CHARA                       04200000
              OCT2363255162606060  ,  %  CTERS                          04201000
              OCT0000000044000312  ,  %  0000M03#                       04202000
              OCT0000052330252342  ,  %  005CHECK                       04203000
              OCT0000000044100315  ,  %  0000M83:                       04204000
              OCT0000022343606060  ,  %  002CL                          04205000
              OCT0000000044200317  ,  %  0000M+3}                       04206000
              OCT0000052343216262  ,  %  005CLASS                       04207000
              OCT0000000044400321  ,  %  0000M|3A                       04208000
              OCT0000032344476060  ,  %  003CMP                         04209000
              OCT0000000044600323  ,  %  0000M 3C                       04210000
              OCT0000052346224643  ,  %  005COBOL                       04211000
              OCT0000000044700325  ,  %  0000MY3E                       04212000
              OCT0000152346444764  ,  %  00:COMPU                       04213000
              OCT6321633146452143  ,  %  TATIONAL                       04214000
              OCT0000000045100327  ,  %  0000N83G                       04215000
              OCT0000072346444764  ,  %  007COMPU                       04216000
              OCT6325606060606060  ,  %  TE                             04217000
              OCT0000000045200332  ,  %  0000N+3.                       04218000
              OCT0000152346452631  ,  %  00:CONFI                       04219000
              OCT2764512163314645  ,  %  GURATION                       04220000
              OCT0000000045300335  ,  %  0000NH3(                       04221000
              OCT0000102346456263  ,  %  008CONST                       04222000
              OCT2145636060606060  ,  %  ANT                            04223000
              OCT0000000045400340  ,  %  0000N|3|                       04224000
              OCT0000102346456321  ,  %  008CONTA                       04225000
              OCT3145626060606060  ,  %  INS                            04226000
              OCT0000000045500343  ,  %  0000NQ3L                       04227000
              OCT0000122346456525  ,  %  00#CONVE                       04228000
              OCT5162314645606060  ,  %  RSION                          04229000
              OCT0000000045600346  ,  %  0000N 3O                       04230000
              OCT0000042346477060  ,  %  004COPY                        04231000
              OCT0000000045700351  ,  %  0000NY3R                       04232000
              OCT0000152346515125  ,  %  00:CORRE                       04233000
              OCT6247464524314527  ,  %  SPONDING                       04234000
              OCT0000000046000353  ,  %  0000O03*                       04235000
              OCT0000022347606060  ,  %  002CP                          04236000
              OCT0000000046200356  ,  %  0000O+3;                       04237000
              OCT0000052370234325  ,  %  005CYCLE                       04238000
              OCT0000000046300133  ,  %  0000OH1[                       04239000
              OCT0000042421632160  ,  %  004DATA                        04240000
              OCT0000000046600362  ,  %  0000O 3S                       04241000
              OCT0000142425234321  ,  %  00 DECLA                       04242000
              OCT5121633165256260  ,  %  RATIVES                        04243000
              OCT0000000046700364  ,  %  0000OY3U                       04244000
              OCT0000112425472545  ,  %  009DEPEN                       04245000
              OCT2431452760606060  ,  %  DING                           04246000
              OCT0000000047000367  ,  %  0000P03X                       04247000
              OCT0000122425622325  ,  %  00#DESCE                       04248000
              OCT4524314527606060  ,  %  NDING                          04249000
              OCT0000000047100372  ,  %  0000P83,                       04250000
              OCT0000122431212745  ,  %  00#DIAGN                       04251000
              OCT4662633123606060  ,  %  OSTIC                          04252000
              OCT0000000047200375  ,  %  0000P+3=                       04253000
              OCT0000052431273163  ,  %  005DIGIT                       04254000
              OCT0000000047300400  ,  %  0000PH40                       04255000
              OCT0000062431273163  ,  %  006DIGIT                       04256000
              OCT6260606060606060  ,  %  S                              04257000
              OCT0000000047400402  ,  %  0000P|42                       04258000
              OCT0000072431624743  ,  %  007DISPL                       04259000
              OCT2170606060606060  ,  %  AY                             04260000
              OCT0000000047500405  ,  %  0000PQ45                       04261000
              OCT0000062431653124  ,  %  006DIVID                       04262000
              OCT2560606060606060  ,  %  E                              04263000
              OCT0000000047600410  ,  %  0000P 48                       04264000
              OCT0000072431653124  ,  %  007DIVID                       04265000
              OCT2524606060606060  ,  %  ED                             04266000
              OCT0000000047700413  ,  %  0000PY4@                       04267000
              OCT0000102431653162  ,  %  008DIVIS                       04268000
              OCT3146456060606060  ,  %  ION                            04269000
              OCT0000000050000416  ,  %  0000Q04>                       04270000
              OCT0000062446434321  ,  %  006DOLLA                       04271000
              OCT5160606060606060  ,  %  R                              04272000
              OCT0000000050100421  ,  %  0000Q84A                       04273000
              OCT0000042451644460  ,  %  004DRUM                        04274000
              OCT0000000050200042  ,  %  0000Q+0K                       04275000
              OCT0000062545243145  ,  %  006ENDIN                       04276000
              OCT2760606060606060  ,  %  G                              04277000
              OCT0000000051000426  ,  %  0000R04F                       04278000
              OCT0000132545653151  ,  %  00@ENVIR                       04279000
              OCT4645442545636060  ,  %  ONMENT                         04280000
              OCT0000000051100431  ,  %  0000R84I                       04281000
              OCT0000052550642143  ,  %  005EQUAL                       04282000
              OCT0000000051200434  ,  %  0000R+4&                       04283000
              OCT0000062550642143  ,  %  006EQUAL                       04284000
              OCT6260606060606060  ,  %  S                              04285000
              OCT0000000051300436  ,  %  0000RH4<                       04286000
              OCT0000052551514651  ,  %  005ERROR                       04287000
              OCT0000000051400441  ,  %  0000R|4J                       04288000
              OCT0000052565255170  ,  %  005EVERY                       04289000
              OCT0000000051500443  ,  %  0000RQ4L                       04290000
              OCT0000072567214431  ,  %  007EXAMI                       04291000
              OCT4525606060606060  ,  %  NE                             04292000
              OCT0000000051600445  ,  %  0000R 4N                       04293000
              OCT0000072567232525  ,  %  007EXCEE                       04294000
              OCT2462606060606060  ,  %  DS                             04295000
              OCT0000000051700074  ,  %  0000RY0!                       04296000
              OCT0000022624606060  ,  %  002FD                          04297000
              OCT0000000052300453  ,  %  0000$H4*                       04298000
              OCT0000062631434325  ,  %  006FILLE                       04299000
              OCT5160606060606060  ,  %  R                              04300000
              OCT0000000052400455  ,  %  0000$|4)                       04301000
              OCT0000052631516263  ,  %  005FIRST                       04302000
              OCT0000000052500460  ,  %  0000$Q4                        04303000
              OCT0000052643462163  ,  %  005FLOAT                       04304000
              OCT0000000052600462  ,  %  0000$ 4S                       04305000
              OCT0000042651464460  ,  %  004FROM                        04306000
              OCT0000000052700464  ,  %  0000$Y4U                       04307000
              OCT0000022662606060  ,  %  002FS                          04308000
              OCT0000000053000005  ,  %  0000*005                       04309000
              OCT0000062731653145  ,  %  006GIVIN                       04310000
              OCT2760606060606060  ,  %  G                              04311000
              OCT0000000053100470  ,  %  0000*84Y                       04312000
              OCT0000072751252163  ,  %  007GREAT                       04313000
              OCT2551606060606060  ,  %  ER                             04314000
              OCT0000000053200000  ,  %  0000*+00                       04315000
              OCT0000063021623025  ,  %  006HASHE                       04316000
              OCT2460606060606060  ,  %  D                              04317000
              OCT0000000053500025  ,  %  0000*Q0E                       04318000
              OCT0000023124606060  ,  %  002ID                          04319000
              OCT0000000053600501  ,  %  0000* 51                       04320000
              OCT0000163124254563  ,  %  00>IDENT                       04321000
              OCT3126312321633146  ,  %  IFICATIO                       04322000
              OCT4560606060606060  ,  %  N                              04323000
              OCT0000000054100503  ,  %  0000-853                       04324000
              OCT0000073145234364  ,  %  007INCLU                       04325000
              OCT2425606060606060  ,  %  DE                             04326000
              OCT0000000054200507  ,  %  0000-+57                       04327000
              OCT0000053145476463  ,  %  005INPUT                       04328000
              OCT0000000054400512  ,  %  0000-|5#                       04329000
              OCT0000143145626321  ,  %  00 INSTA                       04330000
              OCT4343216331464560  ,  %  LLATION                        04331000
              OCT0000000054500514  ,  %  0000-Q5                        04332000
              OCT0000043145634660  ,  %  004INTO                        04333000
              OCT0000000054600517  ,  %  0000- 5}                       04334000
              OCT0000073145652143  ,  %  007INVAL                       04335000
              OCT3124606060606060  ,  %  ID                             04336000
              OCT0000000054700000  ,  %  0000-Y00                       04337000
              OCT0000024162606060  ,  %  002JS                          04338000
              OCT0000000055000524  ,  %  0000)05D                       04339000
              OCT0000114164626331  ,  %  009JUSTI                       04340000
              OCT2631252460606060  ,  %  FIED                           04341000
              OCT0000000055100000  ,  %  0000)800                       04342000
              OCT0000034225706060  ,  %  003KEY                         04343000
              OCT0000000055200531  ,  %  0000)+5I                       04344000
              OCT0000104225702246  ,  %  008KEYBO                       04345000
              OCT2151246060606060  ,  %  ARD                            04346000
              OCT0000000055300135  ,  %  0000)H1(                       04347000
              OCT0000074325212431  ,  %  007LEADI                       04348000
              OCT4527606060606060  ,  %  NG                             04349000
              OCT0000000055400536  ,  %  0000)|5<                       04350000
              OCT0000074325216531  ,  %  007LEAVI                       04351000
              OCT4527606060606060  ,  %  NG                             04352000
              OCT0000000055500541  ,  %  0000)Q5J                       04353000
              OCT0000044325266360  ,  %  004LEFT                        04354000
              OCT0000000055600544  ,  %  0000) 5M                       04355000
              OCT0000044325626260  ,  %  004LESS                        04356000
              OCT0000000055700546  ,  %  0000)Y5O                       04357000
              OCT0000074331225121  ,  %  007LIBRA                       04358000
              OCT5170606060606060  ,  %  RY                             04359000
              OCT0000000056000550  ,  %  0000;05Q                       04360000
              OCT0000054331452562  ,  %  005LINES                       04361000
              OCT0000000056100553  ,  %  0000;85*                       04362000
              OCT0000104346232163  ,  %  008LOCAT                       04363000
              OCT3146456060606060  ,  %  ION                            04364000
              OCT0000000056600555  ,  %  0000; 5)                       04365000
              OCT0000024347606060  ,  %  002LP                          04366000
              OCT0000000056700177  ,  %  0000;Y1"                       04367000
              OCT0000024424606060  ,  %  002MD                          04368000
              OCT0000000057300562  ,  %  0000{H5S                       04369000
              OCT0000044426312460  ,  %  004MFID                        04370000
              OCT0000000057400564  ,  %  0000{|5U                       04371000
              OCT0000054431456462  ,  %  005MINUS                       04372000
              OCT0000000057500566  ,  %  0000{Q5W                       04373000
              OCT0000044446242560  ,  %  004MODE                        04374000
              OCT0000000057600570  ,  %  0000{ 5Y                       04375000
              OCT0000074446246443  ,  %  007MODUL                       04376000
              OCT2562606060606060  ,  %  ES                             04377000
              OCT0000000057700572  ,  %  0000{Y5,                       04378000
              OCT0000044446652560  ,  %  004MOVE                        04379000
              OCT0000000060000575  ,  %  0000 05=                       04380000
              OCT0000124464436331  ,  %  00#MULTI                       04381000
              OCT4743312524606060  ,  %  PLIED                          04382000
              OCT0000000060100577  ,  %  0000 85"                       04383000
              OCT0000104464436331  ,  %  008MULTI                       04384000
              OCT4743706060606060  ,  %  PLY                            04385000
              OCT0000000060200602  ,  %  0000 +62                       04386000
              OCT0000104464436331  ,  %  008MULTI                       04387000
              OCT4743256060606060  ,  %  PLE                            04388000
              OCT0000000060300077  ,  %  0000 H0"                       04389000
              OCT0000104525272163  ,  %  008NEGAT                       04390000
              OCT3165256060606060  ,  %  IVE                            04391000
              OCT0000000060400610  ,  %  0000 |68                       04392000
              OCT0000044525676360  ,  %  004NEXT                        04393000
              OCT0000000060700613  ,  %  0000 Y6@                       04394000
              OCT0000074564442551  ,  %  007NUMER                       04395000
              OCT3123606060606060  ,  %  IC                             04396000
              OCT0000000061200141  ,  %  0000/+1J                       04397000
              OCT0000024623606060  ,  %  002OC                          04398000
              OCT0000000061300620  ,  %  0000/H6+                       04399000
              OCT0000064623236451  ,  %  006OCCUR                       04400000
              OCT6260606060606060  ,  %  S                              04401000
              OCT0000000061400622  ,  %  0000/|6B                       04402000
              OCT0000034626266060  ,  %  003OFF                         04403000
              OCT0000000061500625  ,  %  0000/Q6E                       04404000
              OCT0000074644316363  ,  %  007OMITT                       04405000
              OCT2524606060606060  ,  %  ED                             04406000
              OCT0000000061600627  ,  %  0000/ 6G                       04407000
              OCT0000024645606060  ,  %  002ON                          04408000
              OCT0000000061700632  ,  %  0000/Y6.                       04409000
              OCT0000104647633146  ,  %  008OPTIO                       04410000
              OCT4521436060606060  ,  %  NAL                            04411000
              OCT0000000062000634  ,  %  0000S06&                       04412000
              OCT0000114663302551  ,  %  009OTHER                       04413000
              OCT6631622560606060  ,  %  WISE                           04414000
              OCT0000000062100637  ,  %  0000S86~                       04415000
              OCT0000064664634764  ,  %  006OUTPU                       04416000
              OCT6360606060606060  ,  %  T                              04417000
              OCT0000000062400150  ,  %  0000S|1Q                       04418000
              OCT0000024723606060  ,  %  002PC                          04419000
              OCT0000000062500645  ,  %  0000SQ6N                       04420000
              OCT0000074725512646  ,  %  007PERFO                       04421000
              OCT5144606060606060  ,  %  RM                             04422000
              OCT0000000062600647  ,  %  0000S 6P                       04423000
              OCT0000074731236364  ,  %  007PICTU                       04424000
              OCT5125606060606060  ,  %  RE                             04425000
              OCT0000000062700652  ,  %  0000SY6$                       04426000
              OCT0000064743212325  ,  %  006PLACE                       04427000
              OCT6260606060606060  ,  %  S                              04428000
              OCT0000000063000655  ,  %  0000T06)                       04429000
              OCT0000044743646260  ,  %  004PLUS                        04430000
              OCT0000000063100660  ,  %  0000T86                        04431000
              OCT0000054746314563  ,  %  005POINT                       04432000
              OCT0000000063200662  ,  %  0000T+6S                       04433000
              OCT0000104746623163  ,  %  008POSIT                       04434000
              OCT3165256060606060  ,  %  IVE                            04435000
              OCT0000000063300664  ,  %  0000TH6U                       04436000
              OCT0000104746623163  ,  %  008POSIT                       04437000
              OCT3146456060606060  ,  %  ION                            04438000
              OCT0000000063400667  ,  %  0000T|6X                       04439000
              OCT0000104751254721  ,  %  008PREPA                       04440000
              OCT5125246060606060  ,  %  RED                            04441000
              OCT0000000063500672  ,  %  0000TQ6,                       04442000
              OCT0000104751314563  ,  %  008PRINT                       04443000
              OCT2551626060606060  ,  %  ERS                            04444000
              OCT0000000063600675  ,  %  0000T 6=                       04445000
              OCT0000104751314651  ,  %  008PRIOR                       04446000
              OCT3163706060606060  ,  %  ITY                            04447000
              OCT0000000063700700  ,  %  0000TY70                       04448000
              OCT0000074751462325  ,  %  007PROCE                       04449000
              OCT2524606060606060  ,  %  ED                             04450000
              OCT0000000064100703  ,  %  0000U873                       04451000
              OCT0000074751466325  ,  %  007PROTE                       04452000
              OCT2363606060606060  ,  %  CT                             04453000
              OCT0000000064200706  ,  %  0000U+76                       04454000
              OCT0000024763606060  ,  %  002PT                          04455000
              OCT0000000064400000  ,  %  0000U|00                       04456000
              OCT0000055064466325  ,  %  005QUOTE                       04457000
              OCT0000000064500157  ,  %  0000UQ1{                       04458000
              OCT0000065121452446  ,  %  006RANDO                       04459000
              OCT4460606060606060  ,  %  M                              04460000
              OCT0000000064600715  ,  %  0000U 7:                       04461000
              OCT0000055121452725  ,  %  005RANGE                       04462000
              OCT0000000064700720  ,  %  0000UY7+                       04463000
              OCT0000075125212425  ,  %  007READE                       04464000
              OCT5162606060606060  ,  %  RS                             04465000
              OCT0000000065000722  ,  %  0000V07B                       04466000
              OCT0000115125234651  ,  %  009RECOR                       04467000
              OCT2431452760606060  ,  %  DING                           04468000
              OCT0000000065100725  ,  %  0000V87E                       04469000
              OCT0000075125234651  ,  %  007RECOR                       04470000
              OCT2462606060606060  ,  %  DS                             04471000
              OCT0000000065200730  ,  %  0000V+7H                       04472000
              OCT0000065125234651  ,  %  006RECOR                       04473000
              OCT2460606060606060  ,  %  D                              04474000
              OCT0000000065400733  ,  %  0000V|7[                       04475000
              OCT0000115125242526  ,  %  009REDEF                       04476000
              OCT3145256260606060  ,  %  INES                           04477000
              OCT0000000065600736  ,  %  0000V 7<                       04478000
              OCT0000075125442151  ,  %  007REMAR                       04479000
              OCT4262606060606060  ,  %  KS                             04480000
              OCT0000000065700741  ,  %  0000VY7J                       04481000
              OCT0000075125452144  ,  %  007RENAM                       04482000
              OCT2562606060606060  ,  %  ES                             04483000
              OCT0000000066000744  ,  %  0000W07M                       04484000
              OCT0000105125452144  ,  %  008RENAM                       04485000
              OCT3145276060606060  ,  %  ING                            04486000
              OCT0000000066100747  ,  %  0000W87P                       04487000
              OCT0000115125474321  ,  %  009REPLA                       04488000
              OCT2331452760606060  ,  %  CING                           04489000
              OCT0000000066200752  ,  %  0000W+7$                       04490000
              OCT0000055125516445  ,  %  005RERUN                       04491000
              OCT0000000066300755  ,  %  0000WH7)                       04492000
              OCT0000075125622551  ,  %  007RESER                       04493000
              OCT6525606060606060  ,  %  VE                             04494000
              OCT0000000066400757  ,  %  0000W|7{                       04495000
              OCT0000065125636451  ,  %  006RETUR                       04496000
              OCT4560606060606060  ,  %  N                              04497000
              OCT0000000066500762  ,  %  0000WQ7S                       04498000
              OCT0000105125652551  ,  %  008REVER                       04499000
              OCT6225246060606060  ,  %  SED                            04500000
              OCT0000000066600765  ,  %  0000W 7V                       04501000
              OCT0000025127606060  ,  %  002RG                          04502000
              OCT0000000066700770  ,  %  0000WY7Y                       04503000
              OCT0000055131273063  ,  %  005RIGHT                       04504000
              OCT0000000067000772  ,  %  0000X07,                       04505000
              OCT0000075146644524  ,  %  007ROUND                       04506000
              OCT2524606060606060  ,  %  ED                             04507000
              OCT0000000067100774  ,  %  0000X87!                       04508000
              OCT0000035164456060  ,  %  003RUN                         04509000
              OCT0000000067200171  ,  %  0000X+1Z                       04510000
              OCT0000046221442560  ,  %  004SAME                        04511000
              OCT0000000067401001  ,  %  0000X|81                       04512000
              OCT0000026224606060  ,  %  002SD                          04513000
              OCT0000000067501003  ,  %  0000XQ83                       04514000
              OCT0000076225236331  ,  %  007SECTI                       04515000
              OCT4645606060606060  ,  %  ON                             04516000
              OCT0000000067601005  ,  %  0000X 85                       04517000
              OCT0000106225236451  ,  %  008SECUR                       04518000
              OCT3163706060606060  ,  %  ITY                            04519000
              OCT0000000067701010  ,  %  0000XY88                       04520000
              OCT0000076225274425  ,  %  007SEGME                       04521000
              OCT4563606060606060  ,  %  NT                             04522000
              OCT0000000070001013  ,  %  0000Y08@                       04523000
              OCT0000106225274425  ,  %  008SEGME                       04524000
              OCT4563626060606060  ,  %  NTS                            04525000
              OCT0000000070201016  ,  %  0000Y+8>                       04526000
              OCT0000066225432523  ,  %  006SELEC                       04527000
              OCT6360606060606060  ,  %  T                              04528000
              OCT0000000070301021  ,  %  0000YH8A                       04529000
              OCT0000106225456325  ,  %  008SENTE                       04530000
              OCT4523256060606060  ,  %  NCE                            04531000
              OCT0000000070401024  ,  %  0000Y|8D                       04532000
              OCT0000106225456331  ,  %  008SENTI                       04533000
              OCT4525436060606060  ,  %  NEL                            04534000
              OCT0000000070501027  ,  %  0000YQ8G                       04535000
              OCT0000116225506425  ,  %  009SEQUE                       04536000
              OCT4523252460606060  ,  %  NCED                           04537000
              OCT0000000070601032  ,  %  0000Y 8.                       04538000
              OCT0000126225506425  ,  %  00#SEQUE                       04539000
              OCT4563312143606060  ,  %  NTIAL                          04540000
              OCT0000000070701035  ,  %  0000YY8(                       04541000
              OCT0000046231712560  ,  %  004SIZE                        04542000
              OCT0000000071201040  ,  %  0000Z+8|                       04543000
              OCT0000066247212325  ,  %  006SPACE                       04544000
              OCT6260606060606060  ,  %  S                              04545000
              OCT0000000071401042  ,  %  0000Z|8K                       04546000
              OCT0000046246516360  ,  %  004SORT                        04547000
              OCT0000000071501045  ,  %  0000ZQ8N                       04548000
              OCT0000106263214524  ,  %  008STAND                       04549000
              OCT2151246060606060  ,  %  ARD                            04550000
              OCT0000000071601047  ,  %  0000Z 8P                       04551000
              OCT0000066263216364  ,  %  006STATU                       04552000
              OCT6260606060606060  ,  %  S                              04553000
              OCT0000000071701052  ,  %  0000ZY8$                       04554000
              OCT0000046263464760  ,  %  004STOP                        04555000
              OCT0000000072001055  ,  %  0000,08)                       04556000
              OCT0000106264226351  ,  %  008SUBTR                       04557000
              OCT2123636060606060  ,  %  ACT                            04558000
              OCT0000000072101057  ,  %  0000,88{                       04559000
              OCT0000126264472551  ,  %  00#SUPER                       04560000
              OCT6531624651606060  ,  %  VISOR                          04561000
              OCT0000000072201062  ,  %  0000,+8S                       04562000
              OCT0000026270606060  ,  %  002SY                          04563000
              OCT0000000072301065  ,  %  0000,H8V                       04564000
              OCT0000106270442246  ,  %  008SYMBO                       04565000
              OCT4331236060606060  ,  %  LIC                            04566000
              OCT0000000072401067  ,  %  0000,|8X                       04567000
              OCT0000146270452330  ,  %  00 SYNCH                       04568000
              OCT5146453171252460  ,  %  RONIZED                        04569000
              OCT0000000072501072  ,  %  0000,Q8,                       04570000
              OCT0000026271606060  ,  %  002SZ                          04571000
              OCT0000000072601075  ,  %  0000, 8=                       04572000
              OCT0000106264474751  ,  %  008SUPPR                       04573000
              OCT2562626060606060  ,  %  ESS                            04574000
              OCT0000000072700173  ,  %  0000,Y1%                       04575000
              OCT0000106321434370  ,  %  008TALLY                       04576000
              OCT3145276060606060  ,  %  ING                            04577000
              OCT0000000073001102  ,  %  0000%092                       04578000
              OCT0000056321472562  ,  %  005TAPES                       04579000
              OCT0000000073601105  ,  %  0000% 95                       04580000
              OCT0000046330214560  ,  %  004THAN                        04581000
              OCT0000000073701107  ,  %  0000%Y97                       04582000
              OCT0000076330514664  ,  %  007THROU                       04583000
              OCT2730606060606060  ,  %  GH                             04584000
              OCT0000000074001111  ,  %  0000!099                       04585000
              OCT0000046330516460  ,  %  004THRU                        04586000
              OCT0000000074101114  ,  %  0000!89                        04587000
              OCT0000056331442562  ,  %  005TIMES                       04588000
              OCT0000000074300054  ,  %  0000!H0-                       04589000
              OCT0000076445255064  ,  %  007UNEQU                       04590000
              OCT2143606060606060  ,  %  AL                             04591000
              OCT0000000074401120  ,  %  0000!|9+                       04592000
              OCT0000066445434623  ,  %  006UNLOC                       04593000
              OCT4260606060606060  ,  %  K                              04594000
              OCT0000000074501123  ,  %  0000!Q9C                       04595000
              OCT0000046447464560  ,  %  004UPON                        04596000
              OCT0000000075001126  ,  %  0000=09F                       04597000
              OCT0000056462212725  ,  %  005USAGE                       04598000
              OCT0000000075101130  ,  %  0000=89H                       04599000
              OCT0000036462256060  ,  %  003USE                         04600000
              OCT0000000075201132  ,  %  0000=+9.                       04601000
              OCT0000056462314527  ,  %  005USING                       04602000
              OCT0000000075300175  ,  %  0000=H1=                       04603000
              OCT0000066521436425  ,  %  006VALUE                       04604000
              OCT6260606060606060  ,  %  S                              04605000
              OCT0000000075401136  ,  %  0000=|9<                       04606000
              OCT0000076521517031  ,  %  007VARYI                       04607000
              OCT4527606060606060  ,  %  NG                             04608000
              OCT0000000075500101  ,  %  0000=Q11                       04609000
              OCT0000046630254560  ,  %  004WHEN                        04610000
              OCT0000000075601144  ,  %  0000= 9M                       04611000
              OCT0000056646512462  ,  %  005WORDS                       04612000
              OCT0000000076000000  ,  %  0000]000                       04613000
              OCT0000047125514660  ,  %  004ZERO                        04614000
              OCT0000000076101150  ,  %  0000]89Q                       04615000
              OCT0000057125514662  ,  %  005ZEROS                       04616000
              OCT0000000076201152  ,  %  0000]+9$                       04617000
              OCT0000067125514625  ,  %  006ZEROE                       04618000
              OCT6260606060606060  ,  %  S                              04619000
              OCT0000000076301154  ,  %  0000]H9-                       04620000
              OCT0000027162606060  ,  %  002ZS                          04621000
              OCT0000000160400261  ,  %  0001 |2/                       04622000
              OCT0000032124246060  ,  %  003ADD                         04623000
              OCT0000000163101116  ,  %  0001T89>                       04624000
              OCT0000056321434370  ,  %  005TALLY                       04625000
              OCT0000000060500615  ,  %  0000 Q6:                       04626000
              OCT0000164546544425  ,  %  00>NO-ME                       04627000
              OCT4446517054246444  ,  %  MORY-DUM                       04628000
              OCT4760606060606060  ,  %  P                              04629000
              OCT0000000060601165  ,  %  0000  9V                       04630000
              OCT0000144546455462  ,  %  00 NON-S                       04631000
              OCT6321452421512460  ,  %  TANDARD                        04632000
              OCT0000000075701146  ,  %  0000=Y9O                       04633000
              OCT0000176646514231  ,  %  00}WORKI                       04634000
              OCT4527546263465121  ,  %  NG-STORA                       04635000
              OCT2725606060606060  ,  %  GE                             04636000
              OCT0000000074601134  ,  %  0000! 9&                       04637000
              OCT0000136447472551  ,  %  00@UPPER                       04638000
              OCT5422466445246060  ,  %  -BOUND                         04639000
              OCT0000000074701200  ,  %  0000!Y#0                       04640000
              OCT0000146447472551  ,  %  00 UPPER                       04641000
              OCT5422466445246260  ,  %  -BOUNDS                        04642000
              OCT0000000074201163  ,  %  0000!+9T                       04643000
              OCT0000136346242170  ,  %  00@TODAY                       04644000
              OCT6254242163256060  ,  %  S-DATE                         04645000
              OCT0000000073101206  ,  %  0000%8#6                       04646000
              OCT0000136325233045  ,  %  00@TECHN                       04647000
              OCT3150642554216060  ,  %  IQUE-A                         04648000
              OCT0000000073201211  ,  %  0000%+#9                       04649000
              OCT0000136325233045  ,  %  00@TECHN                       04650000
              OCT3150642554226060  ,  %  IQUE-B                         04651000
              OCT0000000073301214  ,  %  0000%H#                        04652000
              OCT0000136325233045  ,  %  00@TECHN                       04653000
              OCT3150642554236060  ,  %  IQUE-C                         04654000
              OCT0000000073401217  ,  %  0000%|#}                       04655000
              OCT0000136325233045  ,  %  00@TECHN                       04656000
              OCT3150642554476060  ,  %  IQUE-P                         04657000
              OCT0000000073501222  ,  %  0000%Q#B                       04658000
              OCT0000146325626354  ,  %  00 TEST-                       04659000
              OCT4721636325514560  ,  %  PATTERN                        04660000
              OCT0000000071301077  ,  %  0000ZH8"                       04661000
              OCT0000156247252331  ,  %  00:SPECI                       04662000
              OCT2143544521442562  ,  %  AL-NAMES                       04663000
              OCT0000000071001230  ,  %  0000Z0#H                       04664000
              OCT0000126246516354  ,  %  00#SORT-                       04665000
              OCT6321472562606060  ,  %  TAPES                          04666000
              OCT0000000071101233  ,  %  0000Z8#[                       04667000
              OCT0000176246645123  ,  %  00}SOURC                       04668000
              OCT2554234644476463  ,  %  E-COMPUT                       04669000
              OCT2551606060606060  ,  %  ER                             04670000
              OCT0000000070101236  ,  %  0000Y8#<                       04671000
              OCT0000156225274425  ,  %  00:SEGME                       04672000
              OCT4563544331443163  ,  %  NT-LIMIT                       04673000
              OCT0000000067301242  ,  %  0000XH#K                       04674000
              OCT0000136221652554  ,  %  00@SAVE-                       04675000
              OCT2621236346516060  ,  %  FACTOR                         04676000
              OCT0000000065500777  ,  %  0000VQ7"                       04677000
              OCT0000135125254354  ,  %  00@REEL-                       04678000
              OCT4564442225516060  ,  %  NUMBER                         04679000
              OCT0000000065301250  ,  %  0000VH#Q                       04680000
              OCT0000145125234651  ,  %  00 RECOR                       04681000
              OCT2454234664456360  ,  %  D-COUNT                        04682000
              OCT0000000064300711  ,  %  0000UH79                       04683000
              OCT0000124764512725  ,  %  00#PURGE                       04684000
              OCT5424216325606060  ,  %  -DATE                          04685000
              OCT0000000064001256  ,  %  0000U0#;                       04686000
              OCT0000124751462751  ,  %  00#PROGR                       04687000
              OCT2144543124606060  ,  %  AM-ID                          04688000
              OCT0000000062201261  ,  %  0000S+#/                       04689000
              OCT0000214721472551  ,  %  00APAPER                       04690000
              OCT5463214725545125  ,  %  -TAPE-RE                       04691000
              OCT2124255160606060  ,  %  ADER                           04692000
              OCT0000000062301264  ,  %  0000SH#U                       04693000
              OCT0000204721472551  ,  %  00+PAPER                       04694000
              OCT5463214725544764  ,  %  -TAPE-PU                       04695000
              OCT4523306060606060  ,  %  NCH                            04696000
              OCT0000000061000642  ,  %  0000/06K                       04697000
              OCT0000164622412523  ,  %  00>OBJEC                       04698000
              OCT6354475146275121  ,  %  T-PROGRA                       04699000
              OCT4460606060606060  ,  %  M                              04700000
              OCT0000000061101274  ,  %  0000/8#!                       04701000
              OCT0000174622412523  ,  %  00}OBJEC                       04702000
              OCT6354234644476463  ,  %  T-COMPUT                       04703000
              OCT2551606060606060  ,  %  ER                             04704000
              OCT0000000057000605  ,  %  0000{065                       04705000
              OCT0000174425444651  ,  %  00}MEMOR                       04706000
              OCT7054246444475442  ,  %  Y-DUMP-K                       04707000
              OCT2570606060606060  ,  %  EY                             04708000
              OCT0000000057101304  ,  %  0000{8@4                       04709000
              OCT0000134425444651  ,  %  00@MEMOR                       04710000
              OCT7054246444476060  ,  %  Y-DUMP                         04711000
              OCT0000000057201310  ,  %  0000{+@8                       04712000
              OCT0000174425626221  ,  %  00}MESSA                       04713000
              OCT2725544751314563  ,  %  GE-PRINT                       04714000
              OCT2551606060606060  ,  %  ER                             04715000
              OCT0000000056200560  ,  %  0000;+5                        04716000
              OCT0000134346662551  ,  %  00@LOWER                       04717000
              OCT5422466445246060  ,  %  -BOUND                         04718000
              OCT0000000056301317  ,  %  0000;H@}                       04719000
              OCT0000144346662551  ,  %  00 LOWER                       04720000
              OCT5422466445246260  ,  %  -BOUNDS                        04721000
              OCT0000000056401322  ,  %  0000;|@B                       04722000
              OCT0000114346665465  ,  %  009LOW-V                       04723000
              OCT2143642560606060  ,  %  ALUE                           04724000
              OCT0000000056501325  ,  %  0000;Q@E                       04725000
              OCT0000124346665465  ,  %  00#LOW-V                       04726000
              OCT2143642562606060  ,  %  ALUES                          04727000
              OCT0000000054300521  ,  %  0000-H5A                       04728000
              OCT0000143145476463  ,  %  00 INPUT                       04729000
              OCT5446646347646360  ,  %  -OUTPUT                        04730000
              OCT0000000053701333  ,  %  0000*Y@[                       04731000
              OCT0000033154466060  ,  %  003I-O                         04732000
              OCT0000000054001336  ,  %  0000-0@<                       04733000
              OCT0000133154465423  ,  %  00@I-O-C                       04734000
              OCT4645635146436060  ,  %  ONTROL                         04735000
              OCT0000000053300476  ,  %  0000*H4]                       04736000
              OCT0000123031273054  ,  %  00#HIGH-                       04737000
              OCT6521436425606060  ,  %  VALUE                          04738000
              OCT0000000053401343  ,  %  0000*|@L                       04739000
              OCT0000133031273054  ,  %  00@HIGH-                       04740000
              OCT6521436425626060  ,  %  VALUES                         04741000
              OCT0000000052200466  ,  %  0000$+4W                       04742000
              OCT0000132631432554  ,  %  00@FILE-                       04743000
              OCT4331443163626060  ,  %  LIMITS                         04744000
              OCT0000000052101351  ,  %  0000$8@R                       04745000
              OCT0000122631432554  ,  %  00#FILE-                       04746000
              OCT4331443163606060  ,  %  LIMIT                          04747000
              OCT0000000052001354  ,  %  0000$0@-                       04748000
              OCT0000142631432554  ,  %  00 FILE-                       04749000
              OCT2346456351464360  ,  %  CONTROL                        04750000
              OCT0000000050300450  ,  %  0000QH4Q                       04751000
              OCT0000212545243145  ,  %  00AENDIN                       04752000
              OCT2754263143255443  ,  %  G-FILE-L                       04753000
              OCT2122254360606060  ,  %  ABEL                           04754000
              OCT0000000050401362  ,  %  0000Q|@S                       04755000
              OCT0000212545243145  ,  %  00AENDIN                       04756000
              OCT2754632147255443  ,  %  G-TAPE-L                       04757000
              OCT2122254360606060  ,  %  ABEL                           04758000
              OCT0000000050501366  ,  %  0000QQ@W                       04759000
              OCT0000122545245446  ,  %  00#END-O                       04760000
              OCT2654414622606060  ,  %  F-JOB                          04761000
              OCT0000000050601372  ,  %  0000Q @,                       04762000
              OCT0000132545245446  ,  %  00@END-O                       04763000
              OCT2654263143256060  ,  %  F-FILE                         04764000
              OCT0000000050701375  ,  %  0000QY@=                       04765000
              OCT0000132545245446  ,  %  00@END-O                       04766000
              OCT2654632147256060  ,  %  F-TAPE                         04767000
              OCT0000000046400424  ,  %  0000O|4D                       04768000
              OCT0000152421632554  ,  %  00:DATE-                       04769000
              OCT2346444731432524  ,  %  COMPILED                       04770000
              OCT0000000046501403  ,  %  0000OQ 3                       04771000
              OCT0000142421632554  ,  %  00 DATE-                       04772000
              OCT6651316363254560  ,  %  WRITTEN                        04773000
              OCT0000000046100360  ,  %  0000O83                        04774000
              OCT0000152351252163  ,  %  00:CREAT                       04775000
              OCT3146455424216325  ,  %  ION-DATE                       04776000
              OCT0000000045001411  ,  %  0000N0 9                       04777000
              OCT0000172346444764  ,  %  00}COMPU                       04778000
              OCT6321633146452143  ,  %  TATIONAL                       04779000
              OCT5401606060606060  ,  %  -1                             04780000
              OCT0000000044501414  ,  %  0000MQ                         04781000
              OCT0000052344475401  ,  %  005CMP-1                       04782000
              OCT0000000044301420  ,  %  0000MH +                       04783000
              OCT0000132343462342  ,  %  00@CLOCK                       04784000
              OCT5464453163626060  ,  %  -UNITS                         04785000
              OCT0000000043201422  ,  %  0000L+ B                       04786000
              OCT0000122321512454  ,  %  00#CARD-                       04787000
              OCT4764452330606060  ,  %  PUNCH                          04788000
              OCT0000000043301425  ,  %  0000LH E                       04789000
              OCT0000132321512454  ,  %  00@CARD-                       04790000
              OCT5125212425516060  ,  %  READER                         04791000
              OCT0000000043401430  ,  %  0000L| H                       04792000
              OCT0000142321512454  ,  %  00 CARD-                       04793000
              OCT5125212425516260  ,  %  READERS                        04794000
              OCT0000000042700302  ,  %  0000KY32                       04795000
              OCT0000132243462342  ,  %  00@BLOCK                       04796000
              OCT5423466445636060  ,  %  -COUNT                         04797000
              OCT0000000042401436  ,  %  0000K| <                       04798000
              OCT0000062254050500  ,  %  006B-550                       04799000
              OCT0060606060606060  ,  %  0                              04800000
              OCT0000000042301441  ,  %  0000KH J                       04801000
              OCT0000062254050000  ,  %  006B-500                       04802000
              OCT0060606060606060  ,  %  0                              04803000
              OCT0000000042001444  ,  %  0000K0 M                       04804000
              OCT0000242225273145  ,  %  00DBEGIN                       04805000
              OCT4531452754263143  ,  %  NING-FIL                       04806000
              OCT2554432122254360  ,  %  E-LABEL                        04807000
              OCT0000000042101447  ,  %  0000K8 P                       04808000
              OCT0000242225273145  ,  %  00DBEGIN                       04809000
              OCT4531452754632147  ,  %  NING-TAP                       04810000
              OCT2554432122254360  ;  %  E-LABEL                        04811000
              FILL RESTACK[*] WITH                                      04812000
                  0,    0,    0,    0,    0,    0,    0,    0,          04813000
                  0,    0,    0,    0,    0,    0,    0,    0,          04814000
                  0,  625,  811,  795,  774,  768,  751,  315,          04815000
                742,  736,    0,    0,    0,    0,    0,    0,          04816000
                  0,  342,  347,  728,  715,  633,  704,  696,          04817000
                459,  683,    0,    0,    0,    0,    0,    0,          04818000
                  0,    0,  677,  661,  643,  609,  636,    0,          04819000
              0,623,0,0,0,0,0,0;                                        04820000
              GO TO EXIT ;                                              04821000
LFORT:                                                                  04822000
              FILL RESERVED[*] WITH    0,   % FORTRAN                   04823000
              OCT0000000041300000  ,  %  0000JH00                       04824000
              OCT0000062162623127  ,  %  006ASSIG                       04825000
              OCT4560606060606060  ,  %  N                              04826000
              OCT0000000017700000  ,  %  0000}Y00                       04827000
              OCT0000112221234262  ,  %  009BACKS                       04828000
              OCT4721232560606060  ,  %  PACE                           04829000
              OCT0000000042600004  ,  %  0000K 04                       04830000
              OCT0000052243462342  ,  %  005BLOCK                       04831000
              OCT0000000002100000  ,  %  00002800                       04832000
              OCT0000042321434360  ,  %  004CALL                        04833000
              OCT0000000076400011  ,  %  0000]|09                       04834000
              OCT0000062346444446  ,  %  006COMMO                       04835000
              OCT4560606060606060  ,  %  N                              04836000
              OCT0000000076500013  ,  %  0000]Q0@                       04837000
              OCT0000072346444743  ,  %  007COMPL                       04838000
              OCT2567606060606060  ,  %  EX                             04839000
              OCT0000000030300016  ,  %  0000HH0>                       04840000
              OCT0000102346456331  ,  %  008CONTI                       04841000
              OCT4564256060606060  ,  %  NUE                            04842000
              OCT0000000046300000  ,  %  0000OH00                       04843000
              OCT0000042421632160  ,  %  004DATA                        04844000
              OCT0000000070700024  ,  %  0000YY0D                       04845000
              OCT0000112431442545  ,  %  009DIMEN                       04846000
              OCT6231464560606060  ,  %  SION                           04847000
              OCT0000000010200026  ,  %  00008+0F                       04848000
              OCT0000022446606060  ,  %  002DO                          04849000
              OCT0000000007200031  ,  %  00007+0I                       04850000
              OCT0000062446642243  ,  %  006DOUBL                       04851000
              OCT2560606060606060  ,  %  E                              04852000
              OCT0000000007200000  ,  %  00007+00                       04853000
              OCT0000114751252331  ,  %  009PRECI                       04854000
              OCT6231464560606060  ,  %  SION                           04855000
              OCT0000000000500000  ,  %  00000Q00                       04856000
              OCT0000032545246060  ,  %  003END                         04857000
              OCT0000000012000000  ,  %  0000#000                       04858000
              OCT0000042631432560  ,  %  004FILE                        04859000
              OCT0000000076600041  ,  %  0000] 0J                       04860000
              OCT0000052545635170  ,  %  005ENTRY                       04861000
              OCT0000000065400045  ,  %  0000V|0N                       04862000
              OCT0000132550643165  ,  %  00@EQUIV                       04863000
              OCT2143254523256060  ,  %  ALENCE                         04864000
              OCT0000000055700047  ,  %  0000)Y0P                       04865000
              OCT0000102567632551  ,  %  008EXTER                       04866000
              OCT4521436060606060  ,  %  NAL                            04867000
              OCT0000000012200043  ,  %  0000#+0L                       04868000
              OCT0000062646514421  ,  %  006FORMA                       04869000
              OCT6360606060606060  ,  %  T                              04870000
              OCT0000000011100055  ,  %  0000980)                       04871000
              OCT0000102664452363  ,  %  008FUNCT                       04872000
              OCT3146456060606060  ,  %  ION                            04873000
              OCT0000000001500000  ,  %  00001Q00                       04874000
              OCT0000022746606060  ,  %  002GO                          04875000
              OCT0000000001400000  ,  %  00001|00                       04876000
              OCT0000026346606060  ,  %  002TO                          04877000
              OCT0000000001600000  ,  %  00001 00                       04878000
              OCT0000023126606060  ,  %  002IF                          04879000
              OCT0000000011200067  ,  %  00009+0X                       04880000
              OCT0000073145632527  ,  %  007INTEG                       04881000
              OCT2551606060606060  ,  %  ER                             04882000
              OCT0000000011300000  ,  %  00009H00                       04883000
              OCT0000074346273123  ,  %  007LOGIC                       04884000
              OCT2143606060606060  ,  %  AL                             04885000
              OCT0000000076700000  ,  %  0000]Y00                       04886000
              OCT0000104521442543  ,  %  008NAMEL                       04887000
              OCT3162636060606060  ,  %  IST                            04888000
              OCT0000000077000036  ,  %  0000"00<                       04889000
              OCT0000054721646225  ,  %  005PAUSE                       04890000
              OCT0000000016600102  ,  %  0000> 12                       04891000
              OCT0000054751314563  ,  %  005PRINT                       04892000
              OCT0000000077100104  ,  %  0000"814                       04893000
              OCT0000074751462751  ,  %  007PROGR                       04894000
              OCT2144606060606060  ,  %  AM                             04895000
              OCT0000000016700106  ,  %  0000>Y16                       04896000
              OCT0000054764452330  ,  %  005PUNCH                       04897000
              OCT0000000011000000  ,  %  00009000                       04898000
              OCT0000045125212460  ,  %  004READ                        04899000
              OCT0000000011500113  ,  %  00009Q1@                       04900000
              OCT0000045125214360  ,  %  004REAL                        04901000
              OCT0000000066400115  ,  %  0000W|1:                       04902000
              OCT0000065125636451  ,  %  006RETUR                       04903000
              OCT4560606060606060  ,  %  N                              04904000
              OCT0000000017300117  ,  %  0000}H1}                       04905000
              OCT0000065125663145  ,  %  006REWIN                       04906000
              OCT2460606060606060  ,  %  D                              04907000
              OCT0000000071700000  ,  %  0000ZY00                       04908000
              OCT0000046263464760  ,  %  004STOP                        04909000
              OCT0000000011100125  ,  %  0000981E                       04910000
              OCT0000126264225146  ,  %  00#SUBRO                       04911000
              OCT6463314525606060  ,  %  UTINE                          04912000
              OCT0000000010700000  ,  %  00008Y00                       04913000
              OCT0000056651316325  ,  %  005WRITE                       04914000
              OCT0000000026400074  ,  %  0000F|0!                       04915000
              OCT0000024363606060  ,  %  002LT                          04916000
              OCT0000000026600134  ,  %  0000F 1&                       04917000
              OCT0000024325606060  ,  %  002LE                          04918000
              OCT0000000023400052  ,  %  0000C|0$                       04919000
              OCT0000022550606060  ,  %  002EQ                          04920000
              OCT0000000030100077  ,  %  0000H80"                       04921000
              OCT0000024525606060  ,  %  002NE                          04922000
              OCT0000000024200063  ,  %  0000D+0T                       04923000
              OCT0000022763606060  ,  %  002GT                          04924000
              OCT0000000024300144  ,  %  0000DH1M                       04925000
              OCT0000022725606060  ,  %  002GE                          04926000
              OCT0000000012400142  ,  %  0000#|1K                       04927000
              OCT0000034546636060  ,  %  003NOT                         04928000
              OCT0000000010500001  ,  %  00008Q01                       04929000
              OCT0000032145246060  ,  %  003AND                         04930000
              OCT0000000010400000  ,  %  00008|00                       04931000
              OCT0000024651606060  ,  %  002OR                          04932000
              OCT0000000001200065  ,  %  00001+0V                       04933000
              OCT0000046351642560  ,  %  004TRUE                        04934000
              OCT0000000001300060  ,  %  00001H0                        04935000
              OCT0000052621436225  ,  %  005FALSE                       04936000
              OCT0000000001500146  ,  %  00001Q1O                       04937000
              OCT0000042746634660  ;  %  004GOTO                        04938000
              FILL RESTACK[*] WITH     % FORTRAN                        04939000
                  0,    0,    0,    0,    0,    0,    0,    0,          04940000
                  0,    0,    0,    0,    0,    0,    0,    0,          04941000
                  0,  106,    7,   17,   27,   96,  112,  114,          04942000
                  0,   57,    0,    0,    0,    0,    0,    0,          04943000
                  0,    0,    0,   94,    0,  104,  108,   73,          04944000
                  0,   82,    0,    0,    0,    0,    0,    0,          04945000
                  0,    0,   87,  110,    0,    0,   90,    0,          04946000
                  0,    0,    0,    0,    0,    0,    0,    0;          04947000
              GO TO EXIT ;                                              04948000
EXIT:                                                                   04949000
         END FILLJUNK;                                                  04950000
COMMENT DOCUMENT* CODE 12 * * * * * * * * * * * * * * * * * * * * * * ; 04951000
DEFINE        FILLBPL =                                                 04952000
              FILLJUNK(2)#;                                             04953000
DEFINE        FILLESPOL =                                               04954000
              FILLJUNK(4) #;                                            04955000
DEFINE        FILLALGOL =                                               04956000
              FILLJUNK(1) #;                                            04957000
DEFINE        FILLCOBOL =                                               04958000
              FILLJUNK(3) #;                                            04959000
DEFINE        FILLFLOW =                                                04960000
              FILLJUNK(5) #;                                            04961000
DEFINE        FILLFORTRAN =                                             04962000
              FILLJUNK(6)#;                                             04963000
COMMENT DOCUMENT*  7 * * * * * * * * * * * * * * * * * * * * * * * *    04964000
FILE DECLARATIONS.                                                      04965000
* 8  ;                                                                  04966000
FILE XREFILE DISK SERIAL [20:60000](2,10,150,SAVE 10) ;                 04967000
FILE XREFSORT DISK SERIAL[20:60000](2,10,150,SAVE 10) ;                 04968000
FILE          DISK    DISK SERIAL "DISKSYM" "XREF"(2,10,150) ;          04969000
FILE NEWDISK DISK SERIAL [20:3000] "DISKSYM" "XREF"                     04970000
                  (2,10,150,SAVE 10) ;                                  04971000
FILE          IRFILE DISK SERIAL [20:1000] "INFO" "RETR"                04972000
                    (2,10,150,SAVE 10) ;                                04973000
FILE          BACKUPDIR DISK SERIAL [20:500] "BACKUP" "DIRECT" (1,15,   04974000
              150,SAVE 10);                                             04975000
FILE          OLDDOC DISK SERIAL (2,15,90);                             04976000
FILE          NEWDOC DISK SERIAL (2,15,90);                             04977000
FILE          SCRATCH DISK SERIAL [20:1000] (2,10,150);                 04978000
FILE          EARLYSCRATCH DISK SERIAL [20:1000](2,10,150);             04979000
FILE IN       TAPE "0CRDIMG" (2,56,10) ;                                04980000
FILE           BUSTED(1,1020,20) ;                                      04981000
FILE         CASTA DISK SERIAL "CASTA" "LIBRARY"(2,56) ;                04982000
FILE          CASTB(2,56),CASTC(2,56) ;                                 04983000
FILE          BACKUPTAPE 2(2,81,15,SAVE 10) ;                           04984000
FILE          BACKUPDISK  DISK SERIAL [20:4000](2,15,90,SAVE 10);       04985000
PROCEDURE ERROR(N) ; VALUE N ; INTEGER N ; FORWARD ;                    04986000
FILE          OLDBACKUP  DISK SERIAL "BACKUPD" (2,15,90);               04987000
FILE          OLDBAC "BACKUPT" (2,81,15);                               04988000
SWITCH FILE   BACKUPSW ~ BACKUPDISK,BACKUPTAPE,OLDBACKUP,OLDDOC,        04989000
                  NEWDOC,OLDBAC ;                                       04990000
DEFINE        BACKUP = BACKUPSW[BACKIND] # ;                            04991000
SWITCH FILE   CASTSW ~ CASTA , CASTB , CASTC ;                          04992000
FILE          CA "CASTA" (2,56,SAVE 100) ;                              04993000
FILE          CB "CASTB" (2,56,SAVE 100) ;                              04994000
FILE          CC "CASTC" (2,56,SAVE 100) ;                              04995000
SWITCH FILE   CASTOUT ~ CA,CB,CC ;                                      04996000
SAVE FILE OUT NEWTAPE "0CRDIMG" (2,56,10,SAVE 10) ;                     04997000
FILE          CARD (2,10, 30);                                          04998000
FILE          NEWPATCH "PATCHES" (2,56,10,SAVE 10);                     04999000
FILE          PATCHTAPE "PATCHES" (2,56,10);                            05000000
SWITCH FILE   PATCHES ~ CARD,PATCHTAPE;                                 05001000
DEFINE        CARDS = PATCHES[PATCHIND] #;                              05002000
FILE OUT      LINE 4(2,15,SAVE 10) ;                                    05003000
SWITCH FILE   SWFIN ~ TAPE,DISK,SCRATCH,EARLYSCRATCH,PATCHTAPE;         05004000
SWITCH FILE   SWFOUT ~ NEWTAPE,NEWDISK,SCRATCH,EARLYSCRATCH,            05005000
                NEWPATCH;                                               05006000
FILE          PNCH 0(5,10,SAVE 10) ;                                    05007000
FILE OUT      PUNTAPE (2,10,SAVE 100) ;                                 05008000
SWITCH FILE   NEWPUNCH ~ PNCH,PUNTAPE ;                                 05009000
FILE OUT      SPOOUT 11(5,10) ;                                         05010000
FILE IN       SPOIN 11(1,10) ;                                          05011000
FILE          TAP(2,56,10);                                             05012000
DEFINE        NTAPE = NEWTAPE # ,                                       05013000
              PUNCH = PNCH # ,                                          05014000
              PRINT = LINE # ;                                          05015000
DEFINE        SWIN = SWFIN[SWFININD] # ,                                05016000
               SWOUT = SWFOUT[SWFOUTIND] # ;                            05017000
% END OF FILE DECLARATIONS ;                                            05018000
PROCEDURE     DUMPARRAYS ; FORWARD ;                                    05019000
COMMENT DOCUMENT* 7 * * * * * * * * * * * * * * * * * * * * * * * * *   05020000
INTEGER DECLARATIONS.                                                   05021000
* 8 ;                                                                   05022000
INTEGER       FCASTSEQ,LCASTSEQ,CASTINDEX,CASTPOINT,T1,T2,NCASTRECS ;   05023000
INTEGER       SWFININD,SWFOUTIND ;                                      05024000
INTEGER       CASTAINDEX ;                                              05025000
INTEGER       BACKIND ;                                                 05026000
INTEGER       NOBACKUPRINTS,PUNCHSW ;                                   05027000
INTEGER       PARINDENT,SAVEPARINDENT,DOCER ;                           05028000
INTEGER       DEVICE,TABINDEX;                                          05029000
INTEGER       NWPR,W;                                                   05030000
INTEGER       NINES,RESTYPE,BRESTYPE,SNEWSEQ ;                          05031000
INTEGER       RR,PP,SCRAM,NEWSEQ,SEQINC ;                               05032000
INTEGER       XREFSEQ;                                                  05033000
INTEGER       TEMPIND,LASTSEQLINK,LASTCURSEQ,TAMPIND ;                  05034000
INTEGER       FIRSTCHAR,LASTCHAR ;                                      05035000
INTEGER       STREAMBEGCOUNT ;                                          05036000
INTEGER       HEADPOINT,CARDTALLY,I,TOTAL ;                             05037000
INTEGER       NENDS,CURBEG,BEGINDEX ;                                   05038000
INTEGER       NUNDERLINES,PAGECHAR ;                                    05039000
INTEGER       FCASTINDEX,LCASTINDEX ;                                   05040000
INTEGER       BPOINT,IJUNK,BINDENT ;                                    05041000
INTEGER       UJUNK;                                                    05042000
INTEGER       VOLUME,FIRSTPAGELINE,BKDIRCOUNT,BKRCRDCOUNT;              05043000
INTEGER       DOCREV;                                                   05044000
INTEGER       PAGEPOINT;                                                05045000
INTEGER       NRESERVED,STLENGTH ;                                      05046000
INTEGER       SKIPVAL,INDENTVAL ;                                       05047000
INTEGER       PARLOW,PARHIGH,PARP,NOPROC ;                              05048000
INTEGER       PAGEINC;                                                  05049000
INTEGER       MISSCOUNT ;                                               05050000
INTEGER       SAVEPAGEINC ;                                             05051000
INTEGER       NLINES,PAGEN,MAXLINES ;                                   05052000
INTEGER       YEAR,DAY,MONTH,HOUR,MINUTE,SECOND,MAXCOLS,FERR ;          05053000
INTEGER       PLSAVE,PHSAVE,GLSAVE,GHSAVE,GINDSAVE ;                    05054000
INTEGER       RESULT,COUNT,LCR,NCR,NINDEXLINES ;                        05055000
INTEGER       DOCDEFIND,NDOCDEFS ;                                      05056000
INTEGER       FIRSTBIT,LASTBIT,FIELDSIZE,COL74 ;                        05057000
INTEGER       CODELINECOUNT,NBLBOXES ;                                  05058000
INTEGER       TABLEUPPERBOUND ;                                         05059000
INTEGER       LABC ;                                                    05060000
INTEGER       COBCOUNT ;                                                05061000
INTEGER       MAXCOUNTER ;                                              05062000
INTEGER       ZF ; %  0 LINE , 1 BACKUP , 2 BOTH                        05063000
INTEGER       ZSP ; %  1 SINGLE SPACE , 2 DOUBLE SPACE                  05064000
INTEGER       ZLB ; %  % USED LIKE ZF IN READATAPE                      05065000
INTEGER       ZZF ; % USED  TO SAVE ZF LOCAL TO PROCEDURES              05066000
INTEGER       ZLCOUNT ; % LINE COUNTER USED IN ZPL                      05067000
INTEGER       ZLCOUNTMAX ; % MAX NUMBER OF LINE ON BACKUP PAGE          05068000
INTEGER       ZPAGEN,ZCONTPAGEN;                                        05069000
INTEGER       SAVEZ,SAVEZZ, CONTPAGEN;                                  05070000
INTEGER       TEMP;                                                     05071000
INTEGER       OLDPAGE;                                                  05072000
INTEGER       SAVEPAGEN;                                                05073000
INTEGER       FLOWIND;                                                  05074000
INTEGER       ACONT;                                                    05075000
INTEGER       PLACES;                                                   05076000
INTEGER       SAVESEQ;                                                  05077000
INTEGER       ASAVESEQ,ZSPERM;                                          05078000
INTEGER       J,KJUNK;                                                  05079000
INTEGER       THLINES,THL;                                              05080000
INTEGER       THPOS;                                                    05081000
INTEGER       INSINC;                                                   05082000
INTEGER       PAGEQUAL;                                                 05083000
INTEGER       MAXSEG,SEGCOUNT;                                          05084000
INTEGER       CHARCOUNT;                                                05085000
INTEGER       K;                                                        05086000
INTEGER       PATCHIND;                                                 05087000
INTEGER       FIRSTSEQ;                                                 05088000
INTEGER       NONAMES;                                                  05089000
INTEGER       PR ;                                                      05090000
INTEGER       ESIND ;                                                   05091000
INTEGER       OLDASEQ,                                                  05092000
         EPCOUNT, % USED WHEN POSTPONE CHECK OF ENDPAGE                 05092100
              CORESIZE ; % USED BY SORT 6OR LARGE                       05093000
INTEGER  INDEXWORDS;                                                    05094000
% END OF INTEGER DECLARATIONS ;                                         05095000
COMMENT DOCUMENT* 7 * * * * * * * * * * * * * * * * * * * * * * * * *   05096000
DEFINE DECLARATIONS.                                                    05097000
* 8 ;                                                                   05098000
DEFINE        RC = PP.[33:6],PP.[39:9] # ;                              05099000
DEFINE        NFORMTABS = FORMCOLS[0] # ;                               05100000
DEFINE        TABLINK = [33:15] # ;                                     05101000
DEFINE        TYPLINK = [18:15] # ,                                     05102000
              SEQ = SEQUENCE[0] # ,                                     05103000
              OLDSEQ = SEQUENCE[1] # ,                                  05104000
              VOIDSEQ = SEQUENCE[2] # ,                                 05105000
              LASTSEQ = SEQUENCE[3] # ,                                 05106000
              LASTERROR = SEQUENCE[4] # ,                               05107000
              FLOWSEQ = SEQUENCE[5] # ,                                 05108000
              PROCTAG = [1:2] # ,                                       05109000
              LISTHEAD = TABLE[TABIND].[3:15] # ,                       05110000
              LISTTAIL = TABLE[TABIND].[18:15] # ,                      05111000
              LOADCOUNT = SEQLINKS[SEQIND].[3:15] # ,                   05112000
              SEQIND = TEMPIND.[33:6],TEMPIND.[39:9] # ,                05113000
              LASTSEQIND = LASTSEQLINK.[33:6],LASTSEQLINK.[39:9] # ,    05114000
              LASTCURIND = LASTCURSEQ.[33:6],LASTCURSEQ.[39:9] # ,      05115000
              NEXTSEQLINK = SEQLINKS[SEQIND].[18:15] # ,                05116000
              CURSEQIND = TAMPIND.[33:6],TAMPIND.[39:9] # ,             05117000
              SEQPROCPOINT = SEQLINKS[SEQIND].[2:1] # ,                 05118000
              SEQPOINTER = SEQLINKS[SEQIND].[33:15] # ;                 05119000
DEFINE        BEGIND = BEGINDEX.[36:6],BEGINDEX.[42:6] # ;              05120000
DEFINE        TABIND = TABINDEX.[33:6],TABINDEX.[39:9] # ;              05121000
DEFINE                                                                  05122000
              SBTOG = SAVEBACKUPTOG # ,                                 05123000
              PERIOD = Q.[18:6] = "." #,                                05124000
              ASTERISK = Q = "1*    " # ,                               05125000
              COMMA   = Q = "1,    " # ,                                05126000
              RTPAREN = Q = "1)    " # ,                                05127000
              RTBRACK = Q = "1]    " # ,                                05128000
              LFPAREN = Q = "1(    " # ,                                05129000
              LFBRACK = Q = "1[    " # ,                                05130000
              SLASH   = Q = "1/    " # ,                                05131000
              MINUS   = Q = "1-    " # ,                                05132000
              PLUS = Q = "1+    " # ,                                   05133000
              SEMICOLON = Q = "1;    " # ,                              05134000
              GREATERTHAN = Q = "1>    " # ,                            05135000
              LESSTHAN = Q = "1<    " # ,                               05136000
              COLON = Q = "1:    " # ,                                  05137000
              NUMSIGN = Q = "1#    " # ,                                05138000
             PERCENT = Q.[18:6] = "%" # ,                               05139000
             QUOTE = Q.[18:6] = """ # ,                                 05140000
              RTQUOTE = Q.[18:6] = """ AND NOT QUOTETOG # ,             05141000
              LFTQUOTE = Q.[18:6] = """ AND QUOTETOG # ,                05142000
              IDENTIFIER =RESULT = 1 # ,                                05143000
             FINDQUOTE = DO SCAN UNTIL Q.[18:6] = """ # ,               05144000
              FINDSEMICOLON = DO SCAN UNTIL Q.[18:6] = ";" # ;          05145000
DEFINE        LEFTCONNECT = (QUOTE OR LFPAREN OR LFBRACK OR LESSTHAN    05146000
              OR Q= "1{    ") AND EXAMINE(NCR) ! " " AND                05147000
              EXAMINE(NCR) ! "." #;                                     05148000
DEFINE        RTCONNECT = (ATEMP~EXAMINE(NCR) ) = """ OR ATEMP =        05149000
              ")" OR ATEMP = "," OR ATEMP = "]" OR ATEMP = ">"          05150000
              OR ATEMP = "}" OR ATEMP = "/" OR ATEMP = "-" OR           05151000
              ATEMP = ":" OR                                            05152000
              (DOCONLY AND ATEMP = ";") # ;                             05153000
DEFINE                                                                  05154000
              CCSEQ= CBUFF[10]#,                                        05155000
              LCSEQ =CBUFF[11]#,                                        05156000
              CTSEQ = TBUFF[10]#,                                       05157000
              LTSEQ = TBUFF[11]#,                                       05158000
              NIDENT = TABLE[0,0]#;                                     05159000
DEFINE                                                                  05160000
              COMMENTV = 007#,                                          05161000
              PROCEDUREV = 073#,                                        05162000
              STREAMV = 089#;                                           05163000
DEFINE        DOV = 66#,                                                05164000
              GOTOV = 13#,                                              05165000
              IFV = 14#,                                                05166000
              ASSIGNV = 267#;                                           05167000
% END OF DEFINE DECLARATIONS ;                                          05168000
COMMENT DOCUMENT* 7 * * * * * * * * * * * * * * * * * * * * * * * * *   05169000
BOOLEAN DECLARATIONS.                                                   05170000
* 8 ;                                                                   05171000
BOOLEAN       FIRSTDOCIDTOG,LASTDOCIDTOG,DOCIDTOG ;                     05172000
BOOLEAN       DEBUG,DOLLARFLAG,ENDCARD;                                 05173000
BOOLEAN       DONTJUSTIFY ;                                             05174000
BOOLEAN       FLOWTOG,FLOWFOUND,FLOWBOXTOG,SYNTAXTOG ;                  05175000
BOOLEAN       FSYNTAXTOG;                                               05176000
BOOLEAN       SAVEREMOTETOG,FIRSTDOLLAR,DATETOG ;                       05177000
BOOLEAN       DOCONLY,RESEQONLY ;                                       05178000
BOOLEAN       DOCSYNTAX,DOCSYNTAXONLY,BIGTOG,SHUFFLETOG ;               05179000
BOOLEAN       UNDERTOG,DOUBLETOG,LISTCARDTOG,DOCXREFTOG ;               05180000
BOOLEAN  DOCINDEXTOG,DOCNAMES; % FOR SPECIAL DOCUMENT XREF              05181000
BOOLEAN       TABTOG,INDEXFIXTOG,DOCDEBUG ;                             05182000
BOOLEAN       LISTONLYTOG,LFPAGEID;                                     05183000
BOOLEAN       CLEARTITLETOG,TITLEFULL ;                                 05184000
BOOLEAN       PATCHTOG,PATCHFLAG,REMOTETOG ;                            05185000
BOOLEAN       PARIDTOG,SAVEPARIDTOG,COPYTOG ;                           05186000
BOOLEAN       INVTOG,STRINGTOG,CONTOG ;                                 05187000
BOOLEAN       BUILDEBUG;                                                05188000
BOOLEAN       EMITFLAG,SEQBLANKTOG ;                                    05189000
BOOLEAN       SYNTAXCHECK,TAPETOG, TTAPEOPENED;                         05190000
BOOLEAN       SEQTOG,RESEQTOG,NEWTOG,PRINTOG,BACKUPTOG,PUNCHTOG ;       05191000
BOOLEAN       NOTLAST,NEWTAPEOPENED;                                    05192000
BOOLEAN       QUOTETOG,ALPHATOG,NOTBLANK ;                              05193000
BOOLEAN       IRBUG,SORTBUG ;                                           05194000
BOOLEAN       IRPASS ;                                                  05195000
INTEGER       STCOUNT ;                                                 05196000
BOOLEAN       LOOKFORDOLLAR,CASTOG;                                     05197000
BOOLEAN       ALLTOG,FROMTOG,TOENDTOG ;                                 05198000
BOOLEAN       COBOLTOG ;                                                05199000
BOOLEAN       COUNTOG,CONTCARD ;                                        05200000
BOOLEAN       DOUBLEONLY,TUNDERTOG,PUNDERTOG,PDOUBLETOG ;               05201000
BOOLEAN       XREFTOG,BEGINTOG,PROCTOG,PROCFLAG ;                       05202000
BOOLEAN       PRINTCLOSED,NAMETOG,PROCXREFLAG,BLOCKTOG,PROCBLKFLAG ;    05203000
BOOLEAN       STREAMTOG;                                                05204000
BOOLEAN       CENTERTOG,SKIPTOG,PAGETOG,QUITOG,INDEXTOG,INDENTOG,       05205000
              TITLETOG,DOCTOG,BACKUPCLOSED,ENDTOG,ASTERFLAG,            05206000
         INPARAGRAPH , % TO POSTPONE CHECK OF ENDPAGE                   05206100
              INDEXONLYTOG,    % TRUE IF INDEX ONLY IS TO BE INDENTED.  05207000
              MISSTOG,                                                  05208000
                   INVALLTOG ,                                          05209000
              DOCUMENTFOUND,PERCENTOG,DOCLISTOG,VOIDTOG,PBACKONLY ;     05210000
BOOLEAN       DOCLISTFLAG;                                              05211000
BOOLEAN       DOCPUNCHTOG ;                                             05212000
BOOLEAN       PROCPUNCH ;                                               05213000
BOOLEAN       SIXLINES,NOPAGETOG ;                                      05214000
BOOLEAN            WIDETOG ; % FOR WIDE PRINTING IN DOCUMENT            05215000
BOOLEAN       NAMEPUNCH ;                                               05216000
BOOLEAN       CODEPERCENTOG ;                                           05217000
BOOLEAN       NODEBUGTOG,DEBUGSTUFF,ASMLTOG,BPLFLOWTOG ;                05218000
BOOLEAN       NEWMULTITOG,FLOWTABTOG ;                                  05219000
BOOLEAN       MAKEIRTOG,MAKETOG ;                                       05220000
BOOLEAN       BUILDTOG,RESERVEDTOG,RESFLAG,STREAMBODY ;                 05221000
BOOLEAN       STARTCODEFLAG , FIRSTCODELINE , LABELUSE ;                05222000
BOOLEAN       PARTOG,FINALDOCTOG,ASTERTOG ;                             05223000
BOOLEAN       FINITOG,NOSPOTOG,LASTNOSPACE,NOTFIRSTDOCPAGE ;            05224000
BOOLEAN       GLOSSTOG,FREETOG,FIXEDTOG,LOGICTOG ;                      05225000
BOOLEAN       BSTICKFLAG,CODETOG,BLANKNEWSEQ ;                          05226000
BOOLEAN       BUILDPUNCHTOG,COMMENTOG ;                                 05227000
BOOLEAN       ENDCODETOG,PROCDECFLAG ;                                  05228000
BOOLEAN       PATTOG,SORTOG,FORMTOG ;                                   05229000
BOOLEAN       PATBOXTOG,PATCHCARD ;                                     05230000
BOOLEAN       BPLTOG,ASSIGNTOG ;                                        05231000
BOOLEAN       SIMULATOG ;                                               05232000
BOOLEAN       BNFTOG,ESPOLTOG;                                          05233000
BOOLEAN       FORTRTOG;                                                 05234000
BOOLEAN       DEBEATLETOG;                                              05235000
BOOLEAN       PRINTALLTOG,PRINTSELECTOG,HOLDOFFTOG,OLDONLYTOG;          05236000
BOOLEAN       DIRTOG,DIRONLYTOG;                                        05237000
BOOLEAN       MERGETOG;                                                 05238000
BOOLEAN       GLYNTOG ;                                                 05239000
BOOLEAN       LISTTOBACKUPTOG,SAVEBACKUPTOG,AUTOPRINT;                  05240000
BOOLEAN       FLOWDOCBLOCKTOG ;                                         05241000
BOOLEAN       INSERTOG,DECIMALSTOG;                                     05242000
BOOLEAN       DEBLANKTOG ;                                              05243000
BOOLEAN       BLANKNAMEPUNCH,ONLYTOG;                                   05244000
BOOLEAN       DISCMCP,CODECOUNTOG,BACKUPUSED,CARDSOPEN ;                05245000
BOOLEAN       ZPLOVER ; % SET TRUE IN ZPG IF BACKUP PAGE OVERFLOWS      05246000
BOOLEAN       INSERTROW,PATCHINBUFF;                                    05247000
BOOLEAN       ZNOSKIP,PATCHPAGE,UPDATETOG, DOCOUTPUT;                   05248000
COMMENT ZNOSKIP WILL ALLOW GROUPS OF LINES CONCEIVED OF AS A UNIT       05249000
          TO BE PRINTED WITHOUT AUTOMATIC OVERFLOW;                     05250000
BOOLEAN       NOCODESEQ ;                                               05251000
BOOLEAN       REVTOG;                                                   05252000
BOOLEAN       LEFTPAGE;                                                 05253000
BOOLEAN       HEADFULL,TIGHTFULL;                                       05254000
BOOLEAN       OVERTOG;                                                  05255000
BOOLEAN       PUNCHPAGES,PUNCHAFTER,NEWCARD;                            05256000
BOOLEAN       BBSEQ;                                                    05257000
BOOLEAN       BBB;                                                      05258000
BOOLEAN       LASTLINE;                                                 05259000
BOOLEAN       PAGEFULL;                                                 05260000
BOOLEAN       TABHEAD,CONSTTAB;                                         05261000
BOOLEAN       INSTOG;                                                   05262000
BOOLEAN       THUNDTOG;                                                 05263000
BOOLEAN       ALLONE,DISKOUTOG,DISKINTOG, MAKEMULTOG;                   05264000
BOOLEAN       ENDCARDA;                                                 05265000
BOOLEAN       B35OPTOG;                                                 05266000
BOOLEAN       BMON;                                                     05267000
BOOLEAN       LEAVETOG;                                                 05268000
BOOLEAN       LOOKFORSTAR;                                              05269000
BOOLEAN       CANTPAGEHERE;                                             05270000
BOOLEAN       SELECTIVEXREF;                                            05271000
BOOLEAN       ASMFLOWTOG;                                               05272000
BOOLEAN       TRANSTOG;                                                 05273000
BOOLEAN       SCRATCHTOG;                                               05274000
BOOLEAN       SUPPRESSTOG,SUPTHISTIME;                                  05275000
BOOLEAN       ALLSEGS;                                                  05276000
BOOLEAN       TAPEPATCHES,PATCHRESEQ,NEWPATCHTOG;                       05277000
BOOLEAN       REMOVEOVERTOG ;                                           05278000
BOOLEAN       QFLOWTOG ;                                                05279000
BOOLEAN       PATCHEDLINE;                                              05280000
BOOLEAN       DOCPATCHED,NEWVOL;                                        05281000
BOOLEAN       TITLECHANGE,HEADCHANGE ;                                  05282000
BOOLEAN       ESCAPETOG,DATATABLE;                                      05283000
BOOLEAN       WATCHOUT;                                                 05284000
BOOLEAN       PROCFLAG2;                                                05285000
BOOLEAN       DATOG;                                                    05286000
BOOLEAN       HOLDASTER ;                                               05287000
BOOLEAN       HOLDFLOW ;                                                05288000
BOOLEAN       HOLTOG ;                                                  05289000
BOOLEAN  SECRETOG;                                                      05290000
BOOLEAN       NUMBERTOG,NUMONLYTOG ;                                    05291000
BOOLEAN       ASTERPATCHED ;                                            05292000
% END OF BOOLEAN DECLARATIONS ;                                         05293000
COMMENT + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + ; 05294000
COMMENT DOCUMENT* 7  * * * * * * * * * * * * * * * * * * * * * * * *    05295000
MISCELLANEOUS DECLARATIONS.                                             05296000
* 8;                                                                    05297000
FORMAT        MONITFORM(2A6) ;                                          05298000
FORMAT        FDOCER(I3,"  DOCUMENT ERRORS FOUND") ;                    05299000
FORMAT        TOTALFORM("NO OF TABLE SEARCHES = ",I10) ;                05300000
FORMAT        MARKER("A-A-A") ;                                         05301000
FORMAT        BADRUN("**** EOJ XREF/",A6,X2,A6,I8," ERRORS ****") ,     05302000
              STARTJOB( "BOJ XREF/",A6, X2 A6) ,                        05303000
              GOODRUN("---- EOJ XREF/",A6,X2,A6," ----") ;              05304000
FORMAT        FCOLS (12("1234567890"));                                 05305000
FORMAT        ENDMARKER("A-A-AZ");                                      05306000
COMMENT + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + ; 05307000
REAL          PROCTIME,STARTIME,JUNK ;                                  05308000
COMMENT + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + ; 05309000
FORMAT        DATEFORM("XREF PROGRAM OF ",A6," THIS LISTING ",          05310000
              "PRODUCED",I4,X1,A3,X1,"19",I2," TIME",I3,".",I2) ;       05311000
LABEL         MOREFILL,MORCOM,MORECAST ;                                05312000
LABEL         MOREBUILD ;                                               05313000
LABEL         RESCAN,NEXT,EOFCARD ;                                     05314000
LABEL         L1,L2,LL,CONTINUE,L3,RD,EOF,EOPROG,L4,COMPILE ;           05315000
LABEL BMONJ;                                                            05316000
COMMENT + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + ; 05317000
ALPHA         Q,DATE;                                                   05318000
ALPHA         PROGID ;                                                  05319000
ALPHA         ATEMP ;                                                   05320000
FORMAT        HEADFORM(3I8);                                            05321000
FORMAT        DIRINFOFORM (I5,I8,I8);                                   05322000
ALPHA         APAGEN,PAGEID ;                                           05323000
ALPHA         PATCHLETTER ;                                             05324000
ALPHA         MONTHA ;                                                  05325000
LIST          DATELIST(DATE,DAY,MONTHA,YEAR,HOUR,MINUTE) ;              05326000
LIST          ZLIST(PAGEQUAL,OLDPAGE,ZCONTPAGEN,FIRSTPAGELINE,          05327000
              BKRCRDCOUNT,DOCREV,VOLUME,REVTOG);                        05328000
% END MISCELLANEOUS DECLARATIONS                                        05329000
COMMENT DOCUMENT* 7 * * * * * * * * * * * * * * * * * * * * * * * * *   05330000
ARRAY DECLARATIONS.                                                     05331000
* 8 ;                                                                   05332000
SAVE INTEGER ARRAY STACK[0:125] ;                                       05333000
SAVE ARRAY    ZAR[0:15] ;                                               05334000
ARRAY         FIRSTDOCID,LASTDOCID[0:20] ;                              05335000
ARRAY         BNFARRAY[0:15] ;                                          05336000
ARRAY         PAGENUM[0:14] ;                                           05337000
ARRAY         TABLE[0:60,0:511] ;                                       05338000
ARRAY         SPOMESS[0:5,0:10];                                        05339000
ARRAY         FLOWINDEX[0:200,0:15];                                    05340000
SAVE ARRAY    ACCUM[0:14] ; COMMENT IDENTIFIERS ARE BUILT HERE ;        05341000
ARRAY         XREFBUFF[0:15] ;                                          05342000
INTEGER ARRAY FORMCOLS[0:50] ;                                          05343000
SAVE ARRAY BUFFER[0:14] ;                                               05344000
SAVE ARRAY    GLOBE[0:20] ;                                             05345000
SAVE ARRAY    CASTDIR[0:3,0:56] , CASTBUFF[0:56] ;                      05346000
SAVE ARRAY    NAMEBUFF[0:15] ;                                          05347000
ARRAY         SEQLINKS,CURSEQ[0:90,0:511] ;                             05348000
SAVE ARRAY    CBUFF,TBUFF,LISTBUFFER[0:14] ;                            05349000
SAVE ARRAY    LASTCASTID,FIRSTCASTID[0:14] ;                            05350000
ARRAY         MULTNAME[0:10] ;                                          05351000
SAVE ARRAY    TALLIES[0:63],HEADING[0:15] ;                             05352000
SAVE ARRAY    ASMLBUFF[0:2,0:15] ;                                      05353000
SAVE ARRAY    COBOLBUFF[0:2,0:15] ;                                     05354000
SAVE ARRAY    COBACCUM[0:15] ;                                          05355000
ARRAY         PAIRSEQ[0:63,0:63],JUNKARRAY[0:15] ;                      05356000
ARRAY         CASTLINKS[0:150] ;                                        05357000
ARRAY         INVCH[0:10] ;                                             05358000
ARRAY         DATEBUFF[0:4] ;                                           05359000
SAVE ARRAY    SEQUENCE[0:6],BLANKARRAY[0:15] ;                          05360000
SAVE ARRAY    BLOCKBUFFER[0:15] ;                                       05361000
ARRAY         DOCDEFINES[0:100,0:10],DOCDEFLINKS[0:100] ;               05362000
ARRAY         UNDERBUFF [0:15],DOCTITLE[0:14];                          05363000
DEFINE        TITLEBUFF = DOCTITLE # ;                                  05364000
SAVE ARRAY    LAR[0:15];                                                05365000
ARRAY         REVISIONS [0:100];                                        05366000
ARRAY         CONTBUF[0:15];                                            05367000
ARRAY         CONTID[0:1],REVB[0:1];                                    05368000
ARRAY         WORDBUF,OLDBUF,NEWBUF[0:15];                              05369000
ARRAY         PAGES[0:500];                                             05370000
DEFINE        CHOOSEG = PAGES #;                                        05371000
ARRAY         TABARR[0:5,0:15];                                         05372000
ARRAY         AACONT[0:4];                                              05373000
ARRAY         SAVEBUF[0:15];                                            05374000
ALPHA ARRAY   ESTABLE[0:4] ;                                            05375000
ARRAY         TUNDERBUFF[0:15];                                         05376000
% END OF ARRAY DECLARATIONS ;                                           05377000
COMMENT + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + ; 05378000
COMMENT DOCUMENT* 5 * * * * * * * * * * * * * * * * * * * * * * * * *   05379000
A. GENERAL UTILITY STREAM PROCEDURES.                                   05380000
* END;                                                                  05381000
COMMENT DOCUMENT* 21  * * * * * * * * * * * * * * * * * * * ** * ** ;   05382000
REAL STREAM PROCEDURE MKABS(A) ;                                        05383000
COMMENT  RETURNS ABSOLUTE ADDRESS OF NAME PARAMETER A;                  05384000
         BEGIN                                                          05385000
              DI ~ A ; MKABS ~ DI ;                                     05386000
         END MKABS ;                                                    05387000
COMMENT DOCUMENT* 22 * * * * * * * * * * * * * * * * * * * * * * * * *; 05388000
STREAM PROCEDURE FIXCOL73(LCR) ;                                        05389000
VALUE         LCR ;                                                     05390000
COMMENT  PUTS % IN LOCATION LCR;                                        05391000
         BEGIN                                                          05392000
              DI ~ LCR ; DS ~ 1 LIT "%" ;                               05393000
         END FIXCOL73 ;                                                 05394000
COMMENT DOCUMENT*  22 * * * * * * * * * * * * * * * * * * * * * * * * ; 05395000
STREAM PROCEDURE CLEAR(A,N) ;                                           05396000
VALUE         N ;                                                       05397000
COMMENT  CLEARS N + 1 WORDS STARTING AT A ;                             05398000
         BEGIN                                                          05399000
            DI ~ A ; DS ~ 8 LIT "    " ; SI ~ A ; DS ~ N WDS ;          05400000
         END CLEAR ;                                                    05401000
COMMENT DOCUMENT* 22 * * * * * * * * * * * * * * * * * * * * * * * * *; 05402000
STREAM PROCEDURE CLEARCHAR(D,DPOS,NCHARS) ;                             05403000
VALUE   DPOS,NCHARS ;                                                   05404000
COMMENT  CLEARS NCHARS CHARACTERS STARTING AT D + DPOS ;                05405000
         BEGIN                                                          05406000
              DI ~ D ; DI ~ DI + DPOS ; NCHARS ( DS ~ 1 LIT " " ) ;     05407000
         END CLEARCHAR ;                                                05408000
COMMENT DOCUMENT* 22 * * * * * * * * * * * * * * * * * * * * * * * * *; 05409000
STREAM PROCEDURE SETCHAR (D,DPOS,CHAR) ;                                05410000
VALUE         CHAR,DPOS ;                                               05411000
COMMENT  PUTS THE CHARACTER CHAR INTO D + DPOS ;                        05412000
         BEGIN                                                          05413000
              DI ~ D ; DI ~ DI + DPOS ; SI ~ LOC CHAR ; SI ~ SI + 7 ;   05414000
              DS ~ 1 CHR ;                                              05415000
         END SETCHAR ;                                                  05416000
COMMENT DOCUMENT* 22 * * * * * * * * * * * * * * * * * * * * * * * * *; 05417000
REAL STREAM PROCEDURE EXAMINE(NCR) ;                                    05418000
VALUE         NCR ;                                                     05419000
COMMENT  RETURNS CHARACTER FOUND AT THE ABSOLUTE ADDRESS NCR ;          05420000
         BEGIN                                                          05421000
              SI ~ NCR ; DI ~ LOC EXAMINE ; DI ~ DI + 7 ; DS ~ CHR ;    05422000
         END EXAMINE ;                                                  05423000
COMMENT DOCUMENT* 22 * * * * * * * * * * * * * * * * * * * * * * * * ;  05424000
BOOLEAN STREAM PROCEDURE FINDCHAR(S,CHAR) ;                             05425000
VALUE         S,CHAR ;                                                  05426000
COMMENT  TRUE IF NEXT NON-BLANK CHARACTER FROM S IS CHAR ;              05427000
         BEGIN                                                          05428000
LABEL         MORE ;                                                    05429000
              TALLY ~ 0 ; SI ~ S ;                                      05430000
MORE:         IF SC = " " THEN                                          05431000
         BEGIN                                                          05432000
              SI ~ SI + 1 ; GO TO MORE ;                                05433000
         END ;                                                          05434000
              DI ~ LOC CHAR ; DI ~ DI + 7 ;                             05435000
              IF SC = DC THEN TALLY ~ 1 ;                               05436000
              FINDCHAR ~ TALLY ;                                        05437000
         END FINDCHAR ;                                                 05438000
BOOLEAN STREAM PROCEDURE NINESREC(S,SPOS) ; VALUE SPOS ;                05439000
         BEGIN                                                          05440000
LOCAL         T ;                                                       05441000
              DI ~ LOC T ; DS ~ 8 LIT "99999999" ; DI ~ LOC T ;         05442000
              SI ~ S ; SI ~ SI + SPOS ;                                 05443000
              IF 8 SC = DC THEN TALLY ~ 1 ELSE TALLY ~ 0 ;              05444000
              NINESREC ~ TALLY ;                                        05445000
         END NINESREC ;                                                 05446000
COMMENT DOCUMENT* 21 * * * * * * * * * * * * * * * * * * * * * * * * *; 05447000
INTEGER STREAM PROCEDURE SEQCOMP(CARDSEQ,TAPESEQ) ;                     05448000
COMMENT       0 FOR < , 1 FOR > , 2 FOR = ;                             05449000
         BEGIN                                                          05450000
              SI ~ CARDSEQ ; DI ~ TAPESEQ ;                             05451000
              IF 8 SC > DC THEN TALLY ~ 1 ELSE                          05452000
         BEGIN                                                          05453000
              SI ~ SI - 8 ; DI ~ DI - 8 ;                               05454000
              IF 8 SC = DC THEN TALLY ~ 2 ELSE TALLY ~ 0 ;              05455000
         END ;                                                          05456000
              SEQCOMP ~ TALLY ;                                         05457000
         END SEQCOMP ;                                                  05458000
COMMENT DOCUMENT* 21 * * * * * * * * * * * * * * * * * * * * * * * * *; 05459000
STREAM PROCEDURE OCTTODEC(SOURCE,DEST) ;                                05460000
COMMENT       CONVERTS ONE 48 BIT INTEGER WORD TO 8 CHAR ;              05461000
         BEGIN                                                          05462000
              SI ~ SOURCE ; DI ~ DEST ; DS ~ 8 DEC ;                    05463000
         END OCTTODEC ;                                                 05464000
COMMENT DOCUMENT* 21 * * * * * * * * * * * * * * * * * * * * * * * * *; 05465000
STREAM PROCEDURE DECTOOCT(SOURCE,DEST) ;                                05466000
COMMENT       CONVERTS 8 CHAR TO ONE INTEGER WORD ;                     05467000
         BEGIN                                                          05468000
              SI ~ SOURCE ; DI ~ DEST ; DS ~ 8 OCT ;                    05469000
         END DECTOOCT ;                                                 05470000
COMMENT DOCUMENT* 22 * * * * * * * * * * * * * * * * * * * * * * * * *; 05471000
STREAM PROCEDURE DTOCT(S,SPOS,D,N) ;                                    05472000
VALUE         SPOS,N ;                                                  05473000
COMMENT  CONVERTS N CHRS FROM DEC AT S+SPOS TO A BINARY WORD AT D;      05474000
         BEGIN                                                          05475000
              SI ~ S ; SI ~ SI + SPOS ; DI ~ D ; DS ~ N OCT ;           05476000
         END DTOCT ;                                                    05477000
COMMENT DOCUMENT* 22 * * * * * * * * * * * * * * * * * * * * * * * * *; 05478000
STREAM PROCEDURE MOVECHARS(SOURCE,DEST,SPOS,DPOS,NCHARS) ;              05479000
VALUE         SPOS,DPOS,NCHARS ;                                        05480000
COMMENT       MOVES NCHARS CHARACTERS FROM SOURCE+SPOS TO DEST+DPOS ;   05481000
         BEGIN                                                          05482000
LOCAL         T ;                                                       05483000
              SI ~ LOC NCHARS ; SI ~ SI + 6 ; DI ~ LOC T ; DI ~ DI + 7 ;05484000
              DS ~ 1 CHR ;SI ~ SOURCE ; DI ~ DEST ; DI~DI+DPOS;         05485000
              SI ~ SI + SPOS ; T(DS~ 32 CHR ; DS ~ 32 CHR) ;            05486000
              DS ~ NCHARS CHR ;                                         05487000
         END MOVECHARS ;                                                05488000
COMMENT + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + ; 05489000
PROCEDURE     READATAPE ; FORWARD ;                                     05490000
PROCEDURE     ASTERCONTROLS ; FORWARD ;                                 05491000
PROCEDURE     EDIT; FORWARD;                                            05492000
PROCEDURE     NEWMAKEIRFILE ; FORWARD ;                                 05493000
PROCEDURE     NEWDOCPAGE; FORWARD;                                      05494000
PROCEDURE     MAKEIRFILE; FORWARD;                                      05495000
PROCEDURE     DOCERROR(N) ;   VALUE N ; INTEGER N ; FORWARD ;           05496000
COMMENT DOCUMENT* 22 * * * * * * * * * * * * * * * * * * * * * * * * *; 05497000
STREAM PROCEDURE MOVEWORDS(SOURCE,DEST,NWORDS) ;                        05498000
VALUE         NWORDS ;                                                  05499000
COMMENT  MOVES NWORDS WORDS FROM S TO D ;                               05500000
         BEGIN                                                          05501000
LOCAL         T ;                                                       05502000
              SI ~ LOC NWORDS ; SI ~ SI + 6 ; DI ~LOC T ; DI ~ DI + 7 ; 05503000
              DS ~ 1 CHR ; SI ~ SOURCE ; DI ~ DEST ;                    05504000
              T ( DS ~ 32 WDS ; DS ~ 32 WDS ) ; DS ~ NWORDS WDS ;       05505000
         END MOVEWORDS ;                                                05506000
COMMENT DOCUMENT* 22 * * * * * * * * * * * * * * * * * * * * * * * * *; 05507000
BOOLEAN STREAM PROCEDURE EQUAL(SOURCE,DEST,NCHRS) ;                     05508000
VALUE         NCHRS ;                                                   05509000
COMMENT  TRUE IF NCHARS CHRS FROM SOURCE EQUAL THOSE FROM DEST ;        05510000
         BEGIN                                                          05511000
              SI ~ SOURCE ; DI ~ DEST ;                                 05512000
              IF NCHRS SC = DC THEN TALLY ~ 1 ELSE TALLY ~ 0 ;          05513000
              EQUAL ~ TALLY ;                                           05514000
         END EQUAL ;                                                    05515000
COMMENT DOCUMENT* 22 * * * * * * * * * * * * * * * * * * * * * * * * *; 05516000
BOOLEAN STREAM PROCEDURE CHAREQUAL(S,SPOS,D,DPOS,NCHARS) ;              05517000
VALUE         SPOS,DPOS,NCHARS ;                                        05518000
COMMENT  TRUE IF NCHARS CHR AT S+SPOS = THOSE AT D +DPOS ;              05519000
         BEGIN                                                          05520000
              SI ~ S ; SI ~ SI+ SPOS ; DI ~ D ; DI ~ DI + DPOS ;        05521000
              IF NCHARS SC = DC THEN TALLY ~1 ELSE TALLY ~ 0 ;          05522000
              CHAREQUAL ~ TALLY ;                                       05523000
         END CHAREQUAL ;                                                05524000
COMMENT DOCUMENT* 22 * * * * * * * * * * * * * * * * * * * * * * * * *; 05525000
BOOLEAN STREAM PROCEDURE CHARGREAT(S,SPOS,D,DPOS,NCHARS) ;              05526000
VALUE         SPOS,DPOS,NCHARS ;                                        05527000
COMMENT  TRUE IS NCHARS CHRS AT S+SPOS > THOSE AT D+DPOS ;              05528000
         BEGIN                                                          05529000
              SI ~ S ; SI ~ SI+ SPOS ; DI ~ D ; DI ~ DI + DPOS ;        05530000
              IF NCHARS SC > DC THEN TALLY ~1 ELSE TALLY ~ 0 ;          05531000
              CHARGREAT ~ TALLY ;                                       05532000
         END CHARGREAT ;                                                05533000
COMMENT DOCUMENT* 22 * * * * * * * * * * * * * * * * * * * * * * * * *; 05534000
BOOLEAN STREAM PROCEDURE WORDEQUAL(S,D,NWORDS) ;                        05535000
VALUE         NWORDS ;                                                  05536000
COMMENT  TRUE IF NWORDS WORDS FROM S EQUAL THOSE AT D;                  05537000
         BEGIN                                                          05538000
LABEL         L ;                                                       05539000
              SI ~ S ; DI ~ D ; TALLY ~ 0 ;                             05540000
              NWORDS ( IF 8 SC ! DC THEN JUMP OUT 1 TO L ) ;            05541000
              TALLY ~ 1 ;                                               05542000
L:            WORDEQUAL ~ TALLY ;                                       05543000
         END WORDEQUALL ;                                               05544000
COMMENT DOCUMENT* 22 * * * * * * * * * * * * * * * * * * * * * * * * *; 05545000
BOOLEAN STREAM PROCEDURE BLANKTEST(S,NWORDS) ;                          05546000
VALUE         NWORDS ;                                                  05547000
COMMENT  TRUE IF SOME ONE OF THE NWORDS WORDS STARTING AT S IS NOT BLNK;05548000
         BEGIN                                                          05549000
LABEL         L ;                                                       05550000
              SI ~ S ; TALLY ~ 1 ;                                      05551000
              NWORDS(8(IF SC ! " " THEN JUMP OUT 2 TO L ; SI ~ SI + 1));05552000
              TALLY ~ 0 ;                                               05553000
L:            BLANKTEST ~ TALLY ;                                       05554000
         END BLANKTEST ;                                                05555000
COMMENT DOCUMENT* 23 * * * * * * * * * * * * * * * * * * * * * * * * *; 05556000
BOOLEAN STREAM PROCEDURE CNBLANK(S,SPOS,N);                             05557000
VALUE    SPOS,N;                                                        05558000
COMMENT  TRUE IF ONE OF N(UP TO 63) CHARACTERS STARTING AT S+SPOS       05559000
         IS NON-BLANK ;                                                 05560000
         BEGIN                                                          05561000
LABEL    L;                                                             05562000
              SI~S; SI~SI+SPOS; TALLY ~ 1;                              05563000
              N(IF SC! " " THEN JUMP OUT 1 TO L; SI~ SI+1;);            05564000
              TALLY ~ 0;                                                05565000
L:            CNBLANK ~ TALLY ;                                         05566000
         END ;                                                          05567000
COMMENT DOCUMENT* 22 * * * * * * * * * * * * * * * * * * * * * * * * ;  05568000
BOOLEAN STREAM PROCEDURE DEBUGREC(S,CH) ;                               05569000
VALUE         CH ;                                                      05570000
COMMENT  TRUE IF 2 CHRS STARTING AT S +CH ARE "%%" ;                    05571000
         BEGIN                                                          05572000
LOCAL         T ;                                                       05573000
              DI ~ LOC T ; DI ~ DI + 6 ; DS ~ 2 LIT "%%" ;              05574000
              DI ~ DI - 2 ; TALLY ~ 0 ;                                 05575000
              SI ~ S ; SI ~ SI + CH ;                                   05576000
              IF 2 SC = DC THEN TALLY ~ 1 ;                             05577000
              DEBUGREC ~ TALLY ;                                        05578000
         END DEBUGREC ;                                                 05579000
COMMENT DOCUMENT* 21 * * * * * * * * * * * * * * * * * * * * * * * * *; 05580000
BOOLEAN STREAM PROCEDURE CHECKDOLLAR(S) ;                               05581000
COMMENT  TRUE IF FIRST CHR IN S IS "$" ;                                05582000
         BEGIN                                                          05583000
              SI ~ S ; IF SC = "$" THEN TALLY ~ 1 ELSE TALLY ~ 0 ;      05584000
              CHECKDOLLAR ~ TALLY ;                                     05585000
         END CHECKDOLLAR ;                                              05586000
COMMENT DOCUMENT* 22 * * * * * * * * * * * * * * * * * * * * * * * * *; 05587000
BOOLEAN STREAM PROCEDURE CHECKCHAR(S,SPOS,CHAR) ;                       05588000
VALUE         SPOS,CHAR ;                                               05589000
COMMENT  TRUE IF CHR AT S+SPOS IS CHAR ;                                05590000
         BEGIN                                                          05591000
              SI ~ S ; SI ~ SI + SPOS ; DI ~ LOC CHAR ; DI ~ DI + 7 ;   05592000
              IF SC = DC THEN TALLY ~ 1 ELSE TALLY ~ 0 ;                05593000
              CHECKCHAR ~ TALLY ;                                       05594000
         END CHECKCHAR ;                                                05595000
COMMENT DOCUMENT* 22 * * * * * * * * * * * * * * * * * * * * * * * * *; 05596000
BOOLEAN STREAM PROCEDURE CHECKCOMMENT(S,SPOS) ;                         05597000
VALUE         SPOS ;                                                    05598000
COMMENT  TRUE IF FIRST WORD STARTING AT S + SPOS IS "COMMENT" ;         05599000
         BEGIN                                                          05600000
LOCAL         T ;                                                       05601000
              DI ~ LOC T ; DS ~ 8 LIT "COMMENT " ;                      05602000
              SI ~ S ; SI ~ SI+ SPOS ; DI ~ LOC T ;                     05603000
              IF 8 SC = DC THEN TALLY ~ 1 ELSE TALLY ~ 0 ;              05604000
              CHECKCOMMENT ~ TALLY ;                                    05605000
         END CHECKCOMMENT ;                                             05606000
COMMENT DOCUMENT* 23 * * * * * * * * * * * * * * * * * * * * * * * *;   05607000
STREAM PROCEDURE DRAWBAR(START,STARTPOS,LENGTH,CHAR);                   05608000
VALUE    STARTPOS,LENGTH,CHAR;                                          05609000
COMMENT  DRAWS A STREAM OF CHARACTERS FROM START+STARTPOS FOR A LENGTH  05610000
         OF "LENGTH", USING THE CHARACTER "CHAR" ;                      05611000
         BEGIN                                                          05612000
LOCAL    T;                                                             05613000
              SI~LOC LENGTH;SI~SI+6;DI~LOC T;DI~DI+7;                   05614000
              DS~ CHR;                                                  05615000
              SI~LOC CHAR; SI~SI+7;DI~START; DI~DI+STARTPOS;            05616000
              T(32(DS~CHR;SI~SI-1);32(DS~CHR;SI~SI-1););                05617000
              LENGTH(DS~CHR;SI~SI-1);                                   05618000
         END ;                                                          05619000
COMMENT + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + ; 05620000
COMMENT DOCUMENT* 5 * * * * * * * * * * * * * * * * * * * * * * * * *   05621000
B. SCANNER AND SPECIAL LANGUAGE EDITING PROCEDURES.                     05622000
* END;                                                                  05623000
COMMENT DOCUMENT* 24 * * * * * * * * * * * * * * * * * * * * * * * * ;  05624000
STREAM PROCEDURE SCANNER(NCR,COUNTV,ACCUM,COMCOUNT,RESULT,RESULTV,      05625000
                         COUNT,ST2,NCRV,ST1) ;                          05626000
         VALUE COUNTV,COMCOUNT,RESULTV,ST2,NCRV,ST1;                    05627000
COMMENT  SETS ACCUM TO SOME SCANNED ENTITY AND RETURNS THE NUMBER OF    05628000
         CHARS IN THE ENTITY AS COUNT AND THE TYPE OF ENTITY AS RESULT; 05629000
         BEGIN                                                          05630000
         LABEL DEBLANK,NUMBERS,IDBLDR,GNC,K,EXIT,FINIS,L,ERROR,         05631000
              COMMENTS,COMMANTS;                                        05632000
         DI ~ RESULT; DI ~ DI+7;                                        05633000
         SI ~ NCRV;                                                     05634000
COMMENT SETUP DI FOR CHANGE IN RESULT AND SI FOR A LOOK AT BUFFER;      05635000
         CI ~ CI+RESULTV;   COMMENT SWITCH ON VALUE OF RESULT;          05636000
         GO TO DEBLANK;   COMMENT 0 IS INITIAL CODE;                    05637000
         GO TO IDBLDR;   COMMENT 1 IS ID CODE;                          05638000
         GO TO FINIS;     COMMENT 2 IS SPECIAL CHARACTER CODE;          05639000
         GO TO NUMBERS;   COMMENT 3 IS NUMBER CODE;                     05640000
         GO TO FINIS;     COMMENT 4 IS ERROR CODE;                      05641000
         GO TO GNC;     COMMENT 5 IS GET NEXT CHARACTOR CODE;           05642000
         GO TO COMMANTS; COMMENT 6 IS COMMENT CODE;                     05643000
                   COMMENT 7 IS DEBLANK ONLY CODE;                      05644000
              IF SC=" " THEN                                            05645000
         BEGIN K:  SI ~ SI+1;                                           05646000
              IF SC =" "  THEN GO TO K                                  05647000
         END;                                                           05648000
              GO TO FINIS;                                              05649000
DEBLANK:   IF SC = " " THEN                                             05650000
                   BEGIN L: SI ~SI+1; IF SC = " " THEN GO TO L END;     05651000
COMMENT  IF WE ARRIVE HERE WE HAVE A NON-BLANK CHARACTOR;               05652000
              NCRV ~ SI;                                                05653000
              IF SC } "0" THEN GO TO NUMBERS;                           05654000
              IF SC = ALPHA THEN GO TO IDBLDR;                          05655000
COMMENT       IF WE ARRIVE HERE WE HAVE A SPECIAL CHARACTOR (OR GNC);   05656000
GNC:          IF SC = """ THEN                                          05657000
         BEGIN                                                          05658000
              DS ~ LIT "5" ;                                            05659000
              SI ~ SI + 1 ; IF SC = """ THEN                            05660000
         BEGIN                                                          05661000
              TALLY ~ 2 ;                                               05662000
              SI ~ SI + 1 ; IF SC ! """ THEN GO TO ERROR ;              05663000
              TALLY ~ 3 ; SI ~ SI + 1 ;                                 05664000
              IF SC = """ THEN SI ~ SI-2 ELSE GO TO EXIT ;              05665000
         END ;                                                          05666000
              TALLY ~ 1 ; COMCOUNT(TALLY ~ TALLY + 1 ;                  05667000
              IF SC ! """ THEN SI ~ SI + 1 ELSE                         05668000
         BEGIN                                                          05669000
              SI ~ SI + 1 ; IF SC ! """ THEN                            05670000
         BEGIN                                                          05671000
              SI ~ SI - 1 ; JUMP OUT TO EXIT ;                          05672000
         END ;                                                          05673000
              TALLY ~ TALLY + 1 ; SI ~ SI + 1 ;                         05674000
         END ;                                                          05675000
              ) ;                                                       05676000
              GO TO ERROR ;                                             05677000
         END ELSE                                                       05678000
         BEGIN                                                          05679000
              DS ~ LIT "2" ;                                            05680000
              TALLY ~ 1 ; SI ~ SI + 1 ; GO TO EXIT ;                    05681000
         END ;                                                          05682000
COMMANTS:     IF SC ! ";" THEN BEGIN                                    05683000
COMMENTS:     SI ~ SI+1;                                                05684000
              IF SC > "%" THEN GO TO COMMENTS;                          05685000
              IF SC < ";" THEN GO TO COMMENTS;                          05686000
COMMENT       CHARACTORS BETWEEN % AND SEMICOLON ARE HANDLED BY WORD    05687000
              MODE PART OF COMMENT ROUTINE;                             05688000
              END;                                                      05689000
              GO TO FINIS;                                              05690000
IDBLDR:       TALLY ~ 63; DS ~ LIT "1";                                 05691000
              COMCOUNT( TALLY~ TALLY+1;                                 05692000
                   IF SC = ALPHA THEN SI~SI+1 ELSE JUMP OUT TO EXIT);   05693000
              TALLY ~ TALLY+1; IF SC = ALPHA THEN BEGIN                 05694000
ERROR:        DI~DI-1; DS ~ LIT "4" ; TALLY ~ 63 ; GO TO EXIT ;         05695000
              END ELSE GO TO EXIT;                                      05696000
COMMENT       IF WE ARRIVE AT ERROR WE HAVE MORE THAN 63 CHARACTORS     05697000
              IN AN IDENTIFIER OR NUMBER;                               05698000
NUMBERS:      TALLY ~ 63; DS ~ LIT "3";                                 05699000
                   COMCOUNT( TALLY ~ TALLY+1;                           05700000
                   IF SC <"0"THEN JUMP OUT TO EXIT; SI~SI+1);           05701000
              GO TO ERROR;                                              05702000
EXIT:         ST1 ~ TALLY;     COMMENT ST1 CONTAINS NUMBER OF CHAR-     05703000
                             ACTORS WE ARE GOING TO MOVE INTO THE       05704000
                             ACCUMULATOR;                               05705000
              TALLY ~ TALLY+COUNTV; ST2 ~ TALLY;                        05706000
              DI ~ COUNT; SI ~ LOC ST2; DS ~ WDS;                       05707000
COMMENT       THIS CODE UPDATED COUNT;                                  05708000
              DI ~ ACCUM; SI ~ SI-3; DS ~ 3 CHR;                        05709000
COMMENT       THIS CODE PLACES COUNT IN ACCUM AS WELL;                  05710000
         DI ~ DI+COUNTV;   COMMENT POSITION DI PAST CHARACTORS          05711000
                             ALREADY IN THE ACCUMULATOR, IF ANY;        05712000
         SI ~ NCRV; DS ~ ST1 CHR;                                       05713000
COMMENT  MOVE CHARACTORS INTO ACCUM;                                    05714000
FINIS:        DI ~ NCR; ST1 ~ SI; SI ~ LOC ST1; DS ~ WDS;               05715000
COMMENT       RESET NCR TO LOCATION OF NEXT CHARACTOR TO BE SCANNED;    05716000
         END OF SCANNER ;                                               05717000
COMMENT DOCUMENT* 21 * * * * * * * * * * * * * * * * * * * * * * * * *; 05718000
PROCEDURE     SCAN ;                                                    05719000
COMMENT  DRIVES SCANNER, GETTING NEW RECORD WHEN NECESSARY ;            05720000
         BEGIN                                                          05721000
LABEL         L1,L2,RET ;                                               05722000
              IF MONITOG THEN WRITE(PRINT,MONITFORM,"SCAN  ","      ") ;05723000
L2:                                                                     05724000
              CLEAR(ACCUM,14) ;                                         05725000
              COUNT ~ RESULT ~ 0 ; ACCUM[1] ~ "      " ;                05726000
L1:                                                                     05727000
              SCANNER(NCR,COUNT,ACCUM[1],63-COUNT,RESULT,RESULT,        05728000
                      COUNT,0,NCR,0) ;                                  05729000
              LABELUSE ~ FALSE ;                                        05730000
              IF RESULT = 4 OR (RESULT =5 AND COUNT { 1) THEN           05731000
         BEGIN                                                          05732000
         Q := ACCUM[1] ;                                                05732100
         IF DOCTOG AND LOOKFORSTAR THEN DOCERROR(44);                   05732100
              READATAPE ; GO TO RET ;                                   05733000
         END ;                                                          05734000
              ENDCARD ~ FALSE ;                                         05735000
              Q ~ ACCUM[1] ;                                            05736000
              IF DEBUG THEN EDIT ;                                      05737000
              IF QUOTETOG THEN IF SEMICOLON THEN QUOTETOG~FALSE;        05738000
              IF Q = "1&    " AND BPLTOG THEN Q ~ "1%    " ;            05739000
             IF PERCENT THEN                                            05740000
              IF DOLLARFLAG OR ASTERFLAG OR NOT QUOTETOG THEN           05741000
         BEGIN                                                          05742000
              READATAPE ; ENDCARD ~ TRUE ; GO TO RET ;                  05743000
         END ELSE IF LCR.[33:15] = NCR.[33:15]THEN                      05744000
         BEGIN READATAPE ; GO TO L2 ; END ;                             05745000
              IF LCR = NCR THEN                                         05746000
         BEGIN                                                          05747000
              READATAPE ; GO TO L1 ;                                    05748000
         END ;                                                          05749000
RET:     END SCAN ;                                                     05750000
COMMENT DOCUMENT* 22 * * * * * * * * * * * * * * * * * * * * * * * * ;  05751000
STREAM PROCEDURE BUILDBNFID(NCRV,NCR,COUNT,BNFARRAY) ;                  05752000
VALUE         NCRV ;                                                    05753000
COMMENT  BUILDS METALINGUISTIC ENTITIES GIVEN IN BACKUS NORMAL FORM ;   05754000
         BEGIN                                                          05755000
LOCAL         S ;                                                       05756000
LABEL         L,EXIT ;                                                  05757000
              SI ~ NCRV ; SI ~ SI - 1 ; TALLY ~0 ; DI ~ BNFARRAY ;      05758000
L:            IF SC = "%" THEN GO TO EXIT ;                             05759000
               IF SC ! ">" THEN                                         05760000
         BEGIN                                                          05761000
               DS ~ 1 CHR ; TALLY ~ TALLY + 1 ; GO TO L ;               05762000
         END ;                                                          05763000
               IF SC = ">" THEN                                         05764000
         BEGIN                                                          05765000
              DS ~ 1 CHR ; TALLY ~ TALLY + 1 ;                          05766000
         END ;                                                          05767000
EXIT:         S ~ SI ; DI ~ NCR ; SI ~ LOC S ; DS ~ WDS ;               05768000
              S ~ TALLY ; DI ~ COUNT ; SI ~ LOC S ; DS ~ WDS ;          05769000
         END BUILDBNFID ;                                               05770000
COMMENT DOCUMENT* 22 * * * * * * * * * * * * * * * * * * * * * * * * ;  05771000
STREAM PROCEDURE COBOLEDIT (BUFF,COBOLBUFF);                            05772000
                                                                        05773000
COMMENT  PUTS ORIG. BUFF IN COBOLBUFF AND MOVES SEQ NO. TO BUFF[9] ;    05774000
         BEGIN                                                          05775000
LOCAL T ; LABEL L;                                                      05775100
         DI:=COBOLBUFF; SI:=BUFF; DS:=10 WDS ;                          05776000
         DI~ BUFF ;9(DI~DI+8); DS~2 LIT "  ";                           05777000
         SI~BUFF; DS~ 6 CHR;                                            05778000
         DI~ BUFF; DS~ 6 LIT "  ";                                      05779000
         SI~BUFF; 8(9(IF SC = "~" THEN                                  05779100
    BEGIN T~SI; DI~T; DS~1 LIT "%"; JUMP OUT 2 TO L;
    END ELSE SI~ SI+1)); L:                                             05779100
         END COBOLEDIT ;                                                05780000
COMMENT DOCUMENT* 22 * * * * * * * * * * * * * * * * * * * * * * * * ;  05781000
BOOLEAN STREAM PROCEDURE NOTCOBIDPART (NCR) ;                           05782000
VALUE         NCR ;                                                     05783000
COMMENT  TRUE IF NEXT ITEM FROM NCR TERMINATES COBOL ID ;               05784000
         BEGIN                                                          05785000
LABEL         L, EXIT ;                                                 05786000
              TALLY ~ 0; SI ~ NCR ;                                     05787000
              IF SC = " " THEN GO TO L;                                 05788000
              IF SC = ALPHA THEN GO TO EXIT ;                           05789000
              IF SC = "-" THEN GO TO EXIT ;                             05790000
L:            TALLY ~ 1;                                                05791000
EXIT:         NOTCOBIDPART ~ TALLY ;                                    05792000
         END ;                                                          05793000
COMMENT DOCUMENT* 21 * * * * * * * * * * * * * * * * * * * * * * * * ;  05794000
PROCEDURE     BUILDCOBID ;                                              05795000
COMMENT  FORMS ONE IDENTIFIER FROM HYPHEN-SEPARATED ENTITIES ;          05796000
         BEGIN                                                          05797000
LABEL         EXIT,CONT ;                                               05798000
              COBCOUNT ~ COUNT ;                                        05799000
              MOVEWORDS(ACCUM,COBACCUM,10) ;                            05800000
CONT:         IF NOTCOBIDPART (NCR) THEN                                05801000
              GO TO EXIT ;    SCAN ;                                    05802000
              MOVECHARS(ACCUM[1],COBACCUM[1],3,COBCOUNT+3,COUNT);       05803000
              COUNT ~ COUNT + COBCOUNT ; COBCOUNT ~ COUNT ;             05804000
              COBACCUM[1].[12:6] ~ COUNT.[42:6] ;                       05805000
              MOVEWORDS(COBACCUM,ACCUM,10) ;                            05806000
              Q ~ ACCUM[1] ;                                            05807000
              IF COUNT > 62 THEN GO TO EXIT ;                           05808000
               GO TO CONT ;                                             05809000
EXIT:                                                                   05810000
         END BUILDCOBID ;                                               05811000
COMMENT DOCUMENT* 22 * * * * * * * * * * * * * * * * * * * * * * * * ;  05812000
PROCEDURE     ASMLEDIT(BUFF,ASMLBUFF) ;                                 05813000
ARRAY         BUFF[*],ASMLBUFF[*] ;                                     05814000
COMMENT  SETS UP B3500 ASSEMBLY LANGUAGE FOR XREF ;                     05815000
         BEGIN                                                          05816000
ALPHA         OP ;                                                      05817000
INTEGER       I ;                                                       05818000
COMMENT DOCUMENT* 31 * * * * * * * * * * * * * * * * * * * * * * * * ;  05819000
STREAM PROCEDURE BUST(S,D,DD);                                          05820000
COMMENT  PUTS VARIANT FIELDS IN DD, ADDRESS AND LABEL FIELDS IN D ;     05821000
         BEGIN                                                          05822000
              SI ~S ; SI ~SI + 7 ; DI ~ D ; DS ~ 2 LIT"00" ;DS~ 6 CHR;  05823000
              SI ~ SI + 8 ;                                             05824000
              3(DS ~ 2 LIT "00" ; DS ~ 6 CHR ; SI ~ SI + 6 );           05825000
              SI~S; SI~SI+ 31; DI~DD;                                   05826000
              3(DS~6 LIT "00"; DS~2 CHR; SI~SI+10);                     05827000
         END BUST ;                                                     05828000
COMMENT DOCUMENT* 31 * * * * * * * * * * * * * * * * * * * * * * * * ;  05829000
STREAM PROCEDURE ASMLFIXSEQ(S,D) ;                                      05830000
COMMENT  MOVES SEQUENCE TO BUFF[9] ;                                    05831000
         BEGIN                                                          05832000
              DI ~ D ; DS ~8 LIT "    "; SI ~ D ; DS ~ 9 WDS ;          05833000
              DI ~ DI - 8 ; DS ~ 2 LIT "  "; SI ~S ; SI ~ SI + 1 ;      05834000
              DS ~ 6 CHR ;                                              05835000
         END ASMLFIXSEQ ;                                               05836000
COMMENT DOCUMENT* 31 * * * * * * * * * * * * * * * * * * * * * * * * ;  05837000
STREAM PROCEDURE GETOP(S,D) ;                                           05838000
COMMENT  PULLS OFF OP FIELD FOR TESTING ;                               05839000
         BEGIN                                                          05840000
              DI ~ D ;                                                  05841000
              SI ~ S ; SI ~ SI + 13 ; DI ~ DI + 4 ; DS ~ 4 CHR ;        05842000
         END GETOP ;                                                    05843000
              IF MONITOG THEN WRITE(LINE,MONITFORM,"ASMLED","IT    ");  05844000
              GETOP(BUFF,OP) ;                                          05845000
              MOVEWORDS(BUFF,ASMLBUFF,10) ;                             05846000
              ASMLFIXSEQ(ASMLBUFF,BUFF) ;                               05847000
              IF NOT TRANSTOG THEN                                      05848000
              DOCLISTFLAG ~ TRUE ;                                      05849000
              IF NOT TRANSTOG THEN                                      05850000
              IF FLOWTOG OR DOCTOG THEN                                 05851000
         BEGIN                                                          05852000
              IF OP ="DOCU" OR FLOWTABTOG THEN                          05853000
              MOVECHARS(ASMLBUFF[2],BUFF,1,0,63) ELSE                   05854000
         BEGIN                                                          05855000
              CLEAR(BUFF,8) ;                                           05856000
              DOCLISTFLAG ~ FALSE ;                                     05857000
         END ;                                                          05858000
         END ELSE                                                       05859000
         BEGIN                                                          05860000
              BUST(ASMLBUFF,BUFF[1],AACONT[2]);                         05861000
              FOR I ~ 2,3,4 DO  IF AACONT[I] = "NL" OR                  05862000
              AACONT[I] = "AL" OR AACONT[I] = "SL" THEN                 05863000
              BUFF[I] ~ "      " ;                                      05864000
              IF OP = "CNST" OR OP = "RECD" OR OP = "FILE" OR           05865000
              OP = "DOCU" OR OP = "SPEC"                                05866000
              OR OP = "    " OR                                         05867000
                OP = "REMK" OR                                          05868000
               OP = "SPAC" OR OP = "SYNC" OR                            05869000
              OP = "D   " OR OP ="DATA" OR OP = "LOCN" OR               05870000
              OP = "IDNT" THEN LABC ~ 1 ELSE LABC ~ 4 ;                 05871000
              IF B35OPTOG AND LABC ! 1 THEN                             05872000
         BEGIN                                                          05873000
              BUFF[5] ~ OP; BUFF[5].[12:12] ~ "  " ;                    05874000
              LABC~ LABC + 1;                                           05875000
         END;                                                           05876000
              IF BUFF[1] ! "      " THEN BUFF[1] ~ - BUFF[1];           05877000
              BUFF[6] ~LABC;                                            05878000
         END ;                                                          05879000
         END ASMLEDIT ;                                                 05880000
COMMENT DOCUMENT* 21 * * * * * * * * * * * * * * * * * * * * * * * *;   05881000
STREAM PROCEDURE HOLCONVERT(A,B);                                       05882000
COMMENT  CHANGES 9 WDS FROM HOLLERITH TO BCL ;                          05883000
BEGIN                                                                   05884000
SI~A; DI~ B;                                                            05885000
9(8( IF SC = "%" THEN BEGIN DS~ 1 LIT "(" ; SI~SI+1; END ELSE           05886000
IF SC = "[" THEN BEGIN DS ~ 1 LIT ")" ; SI~SI+1; END ELSE               05887000
IF SC = "#" THEN BEGIN DS ~ 1 LIT "=" ; SI ~SI+1; END ELSE              05888000
IF SC = "&" THEN BEGIN DS ~ 1 LIT "+"; SI ~SI+1; END ELSE               05889000
DS ~ CHR;));                                                            05890000
END HOLCONVERT;                                                         05891000
COMMENT DOCUMENT* 22 * * * * * * * * * * * * * * * * * * * * * * * * *; 05892000
BOOLEAN STREAM PROCEDURE QUOTESCAN (NCR,ACCUM,NCRV) ;                   05893000
VALUE         NCRV ;                                                    05894000
COMMENT  TRUE IF QUOTE, SCANS SPECIALLY IF QUOTE OR PERCENT ;           05895000
         BEGIN                                                          05896000
LOCAL         ST1 ;                                                     05897000
LABEL         L,NOTQUOTE,OK;                                            05898000
              SI ~NCRV ; IF SC = " " THEN BEGIN L: SI ~SI +1;           05899000
              IF SC = " " THEN GO  TO L; END ;                          05900000
              IF SC ! """ THEN IF SC ! "%" THEN GO TO NOTQUOTE ;        05901000
              IF SC = """ THEN TALLY ~ 1 ELSE TALLY ~0;                 05902000
              DI ~ACCUM; DS~ 3 LIT "001"; DS ~ CHR; DS ~ 4 LIT "    " ; 05903000
              DI ~ NCR; ST1 ~SI; SI~ LOC ST1; DS ~WDS;                  05904000
              GO TO OK ;                                                05905000
NOTQUOTE:     TALLY ~ 0;                                                05906000
OK:           QUOTESCAN ~TALLY;                                         05907000
         END QUOTESCAN ;                                                05908000
COMMENT DOCUMENT* 22* * * * * * ** * * * * * * * * * * * * * * * * * ;  05909000
BOOLEAN STREAM PROCEDURE NUMCHECK(NCR);                                 05910000
VALUE         NCR;                                                      05911000
COMMENT  TRUE IF NUMBER IS IN DECIMAL FORM ;                            05912000
         BEGIN                                                          05913000
LABEL         L;                                                        05914000
              TALLY ~0; SI ~NCR; IF SC ! "." THEN GO TO L;              05915000
              SI ~ SI +1; IF SC= " " THEN GO TO L;                      05916000
              IF SC < "0" THEN GO TO L;                                 05917000
              TALLY ~1;                                                 05918000
L:            NUMCHECK~TALLY;                                           05919000
         END ;                                                          05920000
COMMENT DOCUMENT* 23 * * * * * * * * * * * * * * * * * * * * * * * * * ;05921000
PROCEDURE     BRACKCOMBINE(TYPE) ;                                      05922000
VALUE         TYPE;                                                     05923000
INTEGER       TYPE;                                                     05924000
COMMENT  COMBINES SPECIAL CHARACTERS WITH WORDS AND NUMBERS ;           05925000
         BEGIN                                                          05926000
LABEL         COMBINE,AGAIN ;                                           05927000
LABEL         GOOUT ;                                                   05928000
LABEL         FINISHUP;                                                 05929000
INTEGER       SUBCOUNT,SVRESULT ;                                       05930000
              MOVEWORDS(ACCUM[1],COBACCUM[1],10) ;                      05931000
              SUBCOUNT ~ COUNT +3;                                      05932000
AGAIN:                                                                  05933000
              IF HOLDASTER THEN GO TO FINISHUP ;                        05934000
              IF ACCUM[1] = "1%    " THEN ACCUM[1] ~0;                  05935000
              IF QUOTESCAN(NCR,ACCUM[1],NCR) THEN                       05936000
         BEGIN                                                          05937000
              COUNT ~1;                                                 05938000
              RESULT ~2;                                                05939000
         END ELSE IF ACCUM[1] = "1%    " THEN                           05940000
              IF LCR.[33:15] = NCR.[33:15] THEN                         05941000
         BEGIN                                                          05942000
              READATAPE;                                                05943000
              IF ASTERTOG THEN GO TO GOOUT ;                            05944000
              IF EXAMINE(NCR) = " " THEN   LASTNOSPACE ~ FALSE ;        05945000
              GO TO AGAIN ;                                             05946000
         END ELSE                                                       05947000
         BEGIN                                                          05948000
              COUNT ~ 1;                                                05949000
              RESULT ~2;                                                05950000
         END ELSE                                                       05951000
         BEGIN                                                          05952000
              WATCHOUT ~ TRUE ;                                         05953000
              SCAN ;                                                    05954000
              WATCHOUT ~ FALSE ;                                        05955000
         END ;                                                          05956000
              MOVECHARS(ACCUM[1],COBACCUM[1],3,SUBCOUNT,COUNT) ;        05957000
              SUBCOUNT ~ SUBCOUNT + COUNT ;                             05958000
              IF SUBCOUNT GTR 63 THEN                                   05958100
         BEGIN
              SUBCOUNT~ SUBCOUNT -COUNT;
              DOCERROR(42);
              GO TO FINISHUP;
         END ;                                                          05958100
              IF TYPE = 1 THEN IF RESULT = 2 THEN                       05959000
         BEGIN                                                          05960000
              IF LEFTCONNECT THEN GO TO AGAIN;                          05961000
         END ELSE SVRESULT ~ RESULT ;                                   05962000
              IF TYPE = 2 THEN IF EXAMINE(NCR) ! " " THEN               05963000
              IF RTCONNECT THEN GO TO AGAIN ;                           05964000
              IF TYPE = 3 THEN                                          05965000
         BEGIN                                                          05966000
              TYPE ~ 2 ;                                                05967000
              GO TO AGAIN ;                                             05968000
         END ;                                                          05969000
FINISHUP :                                                              05970000
              RESULT ~ SVRESULT ;                                       05971000
              MOVEWORDS(COBACCUM[1],ACCUM[1],10) ;                      05972000
              Q ~ ACCUM [1] ;                                           05973000
              COUNT ~ SUBCOUNT - 3 ;                                    05974000
GOOUT:                                                                  05975000
         END ;                                                          05976000
COMMENT DOCUMENT* 21* * * * * * * * * * * * * * * * * * * * * * * * *;  05977000
PROCEDURE     DOCSCAN;                                                  05978000
COMMENT  MODIFIES SCANNER OUTPUT FOR DOCUMENTATION PURPOSES ;           05979000
         BEGIN                                                          05980000
LABEL         OK, LOOP, RT, AGAIN ;                                     05981000
LABEL         AWAY;                                                     05982000
              IF MONITOG THEN WRITE(LINE,MONITFORM,"DOCSCA","N     ");  05983000
              IF HOLDASTER THEN                                         05984000
         BEGIN                                                          05985000
              HOLDASTER ~ FALSE;                                        05986000
              ASTERCONTROLS ;                                           05987000
              GO TO AWAY;                                               05988000
         END ;                                                          05989000
AGAIN:                                                                  05990000
              IF ACCUM[1] = "1%    " THEN ACCUM[1] ~0;                  05991000
              IF QUOTESCAN (NCR,ACCUM[1],NCR) THEN                      05992000
         BEGIN                                                          05993000
              Q ~ ACCUM[1] ;                                            05994000
              COUNT ~1;                                                 05995000
              RESULT ~2;                                                05996000
         END ELSE IF ACCUM[1] = "1%    " THEN                           05997000
              IF LCR.[33:15] = NCR.[33:15] THEN                         05998000
         BEGIN                                                          05999000
              READATAPE;                                                06000000
              IF ASTERTOG THEN GO TO AWAY ;                             06001000
              IF EXAMINE(NCR) = " " THEN   LASTNOSPACE ~ FALSE ;        06002000
              GO TO AGAIN ;                                             06003000
         END ELSE                                                       06004000
         BEGIN                                                          06005000
              COUNT ~ 1;                                                06006000
              RESULT ~ 2;                                               06007000
         END ELSE                                                       06008000
         BEGIN                                                          06009000
              WATCHOUT ~ TRUE;                                          06010000
              SCAN ;                                                    06011000
              WATCHOUT ~ FALSE;                                         06012000
         END ;                                                          06013000
              IF HOLDASTER THEN GO TO AWAY ;                            06014000
              IF RESULT ! 2 THEN GO TO RT;                              06015000
              IF LEFTCONNECT THEN BRACKCOMBINE(1);                      06016000
RT:                                                                     06017000
              IF EXAMINE(NCR) = " " THEN GO TO OK ;                     06018000
              IF COUNT    ! 1 THEN IF CHECKCHAR(ACCUM[1],COUNT    +2,   06019000
              """) THEN GO TO AWAY ;                                    06020000
              IF Q = "1*    " THEN GO TO OK ;                           06021000
              IF RTCONNECT THEN BRACKCOMBINE(2) ;                       06022000
OK:                                                                     06023000
              IF RESULT = 3 THEN IF NUMCHECK(NCR) THEN                  06024000
              BRACKCOMBINE(3) ;                                         06025000
              IF DEBUG THEN EDIT ;                                      06026000
AWAY:                                                                   06027000
         END DOCSCAN ;                                                  06028000
COMMENT DOCUMENT* 5 * * * * * * * * * * * * * * * * * * * * * * * *     06029000
C. PRINTING PROCEDURES.                                                 06030000
* END;                                                                  06031000
COMMENT DOCUMENT* 23 * * * * * * * * * * * * * * * * * * * * * * * * ;  06032000
PROCEDURE     ZPG(ZF) ;                                                 06033000
VALUE         ZF ;                                                      06034000
INTEGER       ZF ;                                                      06035000
COMMENT  STARTS NEW PAGE, ZF=1 ON BACKUP, ZF=0 ON PRINTER, ZF=2 ON BOTH;06036000
         BEGIN                                                          06037000
FORMAT        PAGEMARKER(15("*-*-*-*-")) ;                              06038000
              IF MONITOG THEN                                           06039000
              WRITE (PRINT,MONITFORM, "ZPG   ","      ");               06040000
              IF DOCOUTPUT THEN                                         06041000
         BEGIN                                                          06042000
              SAVEZ ~ ZPAGEN;                                           06043000
              SAVEZZ ~ ZCONTPAGEN;                                      06044000
              ZPAGEN ~ PAGEN;                                           06045000
              ZCONTPAGEN ~ CONTPAGEN ;                                  06046000
              IF ZF =1 OR ZF=2 THEN                                     06047000
              IF UPDATETOG THEN                                         06048000
              IF BKRCRDCOUNT ! FIRSTPAGELINE THEN                       06049000
         BEGIN                                                          06050000
              IF PROGID = "TEST  " THEN                                 06051000
              BKRCRDCOUNT ~ BKRCRDCOUNT +1;                             06052000
              IF PAGEQUAL < 2 THEN                                      06053000
              PAGEQUAL ~ IF PATCHPAGE THEN 1 ELSE 0;                    06054000
              DOCPATCHED ~ DOCPATCHED OR PATCHPAGE ;                    06055000
              WRITE (LAR[*],*,ZLIST);                                   06056000
              MOVECHARS (PAGENUM[7], LAR[8],10-PAGECHAR,0,16);          06057000
              MOVECHARS (ACONT,LAR[10],0,0,8);                          06058000
              IF PROGID = "TEST  " THEN                                 06059000
              WRITE (BACKUP,15,LAR[*]);                                 06060000
              WRITE (BACKUPDIR,15, LAR[*]);                             06061000
              BKDIRCOUNT~BKDIRCOUNT+1;                                  06062000
              IF NEWVOL THEN                                            06063000
         BEGIN                                                          06064000
              FOR I ~ 0 STEP 1 UNTIL 14 DO ZAR[I] ~ 0;                  06065000
              WRITE(ZAR[*],*       ,5,DOCPATCHED,DOCREV);               06066000
              DOCPATCHED ~ FALSE;                                       06067000
              WRITE(BACKUPDIR,15, ZAR[*] );                             06068000
              BKDIRCOUNT ~ BKDIRCOUNT + 1;                              06069000
              NEWVOL ~ FALSE;                                           06070000
         END ;                                                          06071000
              IF BKDIRCOUNT >1022 THEN ERROR(10);                       06072000
         END ELSE                                                       06073000
              IF NEWVOL THEN                                            06074000
         BEGIN                                                          06075000
              FOR I ~ 0 STEP 1 UNTIL 14 DO ZAR[I] ~ 0;                  06076000
              WRITE(ZAR[*],*,5,DOCPATCHED,DOCREV);                      06077000
              DOCPATCHED ~ FALSE;                                       06078000
              WRITE(BACKUPDIR,15,ZAR[*]);                               06079000
              BKDIRCOUNT ~ BKDIRCOUNT +1;                               06080000
              NEWVOL ~ FALSE;                                           06081000
         END ;                                                          06082000
         END;                                                           06083000
              IF ZF = 0 OR ZF = 2 THEN WRITE(LINE[PAGE]) ;              06084000
              IF ZF = 1 OR ZF = 2 THEN                                  06085000
         BEGIN                                                          06086000
              WRITE(BACKUP,MARKER) ;                                    06087000
              BKRCRDCOUNT ~BKRCRDCOUNT+1;                               06088000
              FIRSTPAGELINE~BKRCRDCOUNT;                                06089000
         END ;                                                          06090000
              IF PAGETOG AND DOCOUTPUT THEN                             06091000
              PATCHPAGE ~ FALSE ;                                       06092000
              IF NOT NOPAGETOG THEN                                     06093000
              IF UPDATETOG AND DOCOUTPUT AND NOT PAGETOG THEN           06094000
                   ZCONTPAGEN~ZCONTPAGEN +1 ELSE                        06095000
         BEGIN                                                          06096000
              ZCONTPAGEN ~0;  ZPAGEN ~ ZPAGEN+PAGEINC;                  06097000
         END;                                                           06098000
              IF DOCOUTPUT THEN                                         06099000
         BEGIN                                                          06100000
              PAGEN ~ ZPAGEN;                                           06101000
              OLDPAGE~ZPAGEN;                                           06102000
              CONTPAGEN ~ ZCONTPAGEN;                                   06103000
              ZPAGEN ~ SAVEZ;                                           06104000
              ZCONTPAGEN ~ SAVEZZ;                                      06105000
              NLINES ~ 0;                                               06106000
         END ELSE                                                       06107000
              ZLCOUNT ~0 ;                                              06108000
              ZPLOVER ~ FALSE ;                                         06109000
         END ZPG ;                                                      06110000
COMMENT DOCUMENT* 25 * * * * * * * * * * * * * * * * * * * * * * * *;   06111000
PROCEDURE     ZPL(ZF,ZSP,ZAR) ;                                         06112000
VALUE         ZF,ZSP ;                                                  06113000
INTEGER       ZF,ZSP ;                                                  06114000
ARRAY         ZAR[0] ;                                                  06115000
COMMENT  WRITES AN ARRAY ROW ON LINE OR BACKUP, CHECKING LINE COUNT.    06116000
         ZF =1 MEANS BACKUP, 0 LINE, 2 BOTH. ZSP IS SNGL OR DBL SPACE;  06117000
         BEGIN                                                          06118000
              IF MONITOG THEN WRITE(LINE,MONITFORM,"ZPL-  ","      ");  06119000
              IF DOCOUTPUT THEN                                         06120000
         BEGIN                                                          06121000
              NLINES ~ NLINES + ZSP;                                    06122000
              IF NLINES } MAXLINES THEN                                 06123000
         BEGIN                                                          06124000
              IF NOT  ZNOSKIP THEN                                      06125000
         BEGIN                                                          06126000
              IF PUNCHPAGES THEN                                        06127000
         BEGIN                                                          06128000
              IF PATTOG AND NOT PAGETOG THEN                            06129000
              IF BBB THEN DOCERROR(34);                                 06130000
              IF PUNCHAFTER THEN                                        06131000
              IF NOT PAGETOG THEN                                       06132000
         BEGIN                                                          06133000
              IF ASAVESEQ = 0 THEN DOCERROR(33);                        06134000
              IF INSTOG THEN                                            06135000
         BEGIN                                                          06136000
              IF NOT INSERTROW THEN SAVEPAGEN ~ PAGEN;                  06137000
              TEMP~ PAGEN +INSINC;                                      06138000
              INSERTROW~ TRUE;                                          06139000
              OCTTODEC(TEMP,BLOCKBUFFER[3]);                            06140000
              PAGEINC ~INSINC;                                          06141000
         END;                                                           06142000
              ASAVESEQ ~ ASAVESEQ +1; COMMENT                           06143000
              IF ASAVESEQ{ ISEQ-2 THEN ASAVESEQ~ASAVESEQ+1;             06144000
              OCTTODEC(ASAVESEQ,BLOCKBUFFER[9]);                        06145000
              IF PUNCHTOG THEN WRITE(PUNCH,10,BLOCKBUFFER[*]) ELSE      06146000
              WRITE(LINE,15,BLOCKBUFFER[*]);                            06147000
         END;                                                           06148000
              PUNCHAFTER ~ FALSE;                                       06149000
         END;                                                           06150000
              ZPG(ZF);                                                  06151000
              NEWDOCPAGE;                                               06152000
              NLINES ~ NLINES +ZSP;                                     06153000
              IF DOCLISTOG THEN                                         06154000
         BEGIN                                                          06155000
              DOCOUTPUT ~ FALSE;                                        06156000
              FOR I ~ 0 STEP 1 UNTIL 15 DO SETCHAR (PAGENUM[3],I,"*");  06157000
              ZPL (0,2,PAGENUM[*]);                                     06158000
              DOCOUTPUT ~ TRUE;                                         06159000
         END;                                                           06160000
         END;                                                           06161000
              ZPLOVER ~ TRUE;                                           06162000
         END ELSE                                                       06163000
              IF PUNCHPAGES THEN                                        06164000
         BEGIN                                                          06165000
              PAGEFULL ~ LASTLINE OR (PAGEFULL AND                      06166000
                 (NLINES = MAXLINES - 1) ) ;                            06167000
              LASTLINE ~ (NLINES=MAXLINES-2|ZSPERM) OR                  06168000
                 (NLINES=MAXLINES-ZSPERM-1);                            06169000
         END;                                                           06170000
              IF DOCPUNCHTOG THEN                                       06171000
         BEGIN                                                          06172000
              IF NINESREC(ZAR[0],0) THEN MOVEWORDS(ZAR[0],ZAR[9],1) ;   06173000
              WRITE(PNCH,10,ZAR[*]) ;                                   06174000
         END ;                                                          06175000
              IF DEBEATLETOG THEN                                       06176000
              OCTTODEC(NLINES,ZAR[10]);                                 06177000
         END ELSE                                                       06178000
              ZLCOUNT ~ ZLCOUNT + ZSP;                                  06179000
              PATCHPAGE ~ PATCHINBUFF OR PATCHPAGE;                     06180000
              PATCHINBUFF~FALSE;                                        06181000
              IF ZF =0 OR ZF = 2 THEN                                   06182000
         BEGIN                                                          06183000
              IF ZSP =1 THEN WRITE(LINE,15,ZAR[*]) ELSE                 06184000
              IF ZSP = 2 THEN                                           06185000
              WRITE(LINE[DBL],15,ZAR[*]);                               06186000
         END ;                                                          06187000
              IF ZF = 1 OR ZF =2 THEN                                   06188000
         BEGIN                                                          06189000
              IF ZSP =1 OR ZSP=2 THEN                                   06190000
              WRITE(BACKUP,15,ZAR[*]); BACKUPUSED ~ TRUE ;              06191000
              IF ZSP =2 THEN WRITE(BACKUP,15,BLANKARRAY[*]) ;           06192000
              BKRCRDCOUNT ~BKRCRDCOUNT+ZSP;                             06193000
         END ;                                                          06194000
         END ZPL ;                                                      06195000
COMMENT DOCUMENT* 21 * * * * * * * * * * * * * * * * * * * * * * * * *; 06196000
PROCEDURE     PRINTBACKUP ;                                             06197000
COMMENT  PRINTS DISK OR TAPE XREF BACKUPS ;                             06198000
         BEGIN                                                          06199000
SAVE ARRAY    B[0:14] ;                                                 06200000
LABEL         RD,EOF ;                                                  06201000
FORMAT        FTEST("PRINTBACKUP AUTOPRINT",10("*-*-*-*-")) ;           06202000
COMMENT DOCUMENT* 31 * * * * * * * * * * * * * * * * * * * * * * * * ;  06203000
BOOLEAN STREAM PROCEDURE TESTMARKER(S) ;                                06204000
COMMENT  TRUE IF END OF PAGE ON BACKUP ;                                06205000
         BEGIN                                                          06206000
LOCAL         T ;                                                       06207000
              DI ~ LOC T ; DS ~ 5 LIT "A-A-A" ;                         06208000
              SI ~ S ; DI ~ LOC T ;                                     06209000
              IF 5 SC =DC THEN TALLY ~ 1 ELSE TALLY ~ 0 ;               06210000
              TESTMARKER ~ TALLY ;                                      06211000
         END TESTMARKER ;                                               06212000
              IF MONITOG THEN WRITE(PRINT,MONITFORM,"PRINTB","ACKUP ") ;06213000
              CLEAR(B,14) ;                                             06214000
              REWIND(BACKUP) ;                                          06215000
              WRITE(PRINT[PAGE],15,BLANKARRAY[*]) ;                     06216000
              IF PROGID = "TEST  " THEN WRITE(LINE[DBL],FTEST) ;        06217000
RD:           READ(BACKUP,15,B[*])[EOF] ;                               06218000
              IF TESTMARKER(B) AND PROGID ! "TEST  " THEN               06219000
         BEGIN                                                          06220000
              IF CHECKCHAR (B[0],5,"Z") THEN GO TO EOF;                 06221000
              WRITE(PRINT[PAGE],15,BLANKARRAY[*])                       06222000
         END ELSE WRITE (PRINT,15, B[*]);                               06223000
              CLEAR(B,14) ;                                             06224000
              GO TO RD ;                                                06225000
EOF:          REWIND(BACKUP) ;                                          06226000
         END PRINTBACKUP ;                                              06227000
COMMENT DOCUMENT* 22 * * * * * * * * * * * * * * * * * * * * * * * * ;  06228000
PROCEDURE PRINTINFOPAGE(FILEPLACE);VALUE FILEPLACE; INTEGER FILEPLACE;  06229000
COMMENT  PRINTS OUT PRELIMINARY INFORMATION ABOUT THIS XREF RUN;        06230000
         BEGIN                                                          06231000
ARRAY SEARCHIT[0:7];                                                    06232000
FORMAT   CARDF("CARD FILE IS ",A1,A6,"/",A1,A6),                        06233000
         SWINF("SOURCE FILE IS ", A1,A6,"/",A1,A6),                     06234000
         OLDF("OLDDOC IS ",A1,A6,"/",A1,A6),                            06235000
         NEWF("NEWDOC IS ",A1,A6,"/",A1,A6),                            06236000
         SWOUF("NEW SOURCE FILE IS ",A1,A6,"/",A1,A6),                  06237000
         BACKF("BACKUP FILE IS ",A1,A6,"/",A1,A6);                      06238000
LABEL    EXIT;                                                          06239000
              WRITE(ZAR[*],DATEFORM,DATELIST);                          06240000
              ZPL(FILEPLACE,2,ZAR);                                     06241000
              ZPL(FILEPLACE,2,LISTBUFFER);                              06242000
              CLEAR(LISTBUFFER,14);                                     06243000
              ZPL(FILEPLACE,1,BLANKARRAY);                              06244000
              SEARCH(CARD,SEARCHIT[*]);                                 06245000
              WRITE(ZAR[*],CARDF,SEARCHIT[1].[6:6],SEARCHIT[1].[12:36], 06246000
                 SEARCHIT[2].[6:6],SEARCHIT[2].[12:36]);                06247000
              ZPL(FILEPLACE,2,ZAR);                                     06248000
              IF MERGETOG THEN                                          06249000
         BEGIN                                                          06250000
              SEARCH(OLDDOC,SEARCHIT[*]);                               06251000
              WRITE(ZAR[*],OLDF,SEARCHIT[1].[6:6],SEARCHIT[1].[12:36],  06252000
                 SEARCHIT[2].[6:6],SEARCHIT[2].[12:36]);                06253000
              ZPL(FILEPLACE,2,ZAR);                                     06254000
              SEARCH(NEWDOC,SEARCHIT[*]);                               06255000
              WRITE(ZAR[*],NEWF,SEARCHIT[1].[6:6],SEARCHIT[1].[12:36],  06256000
                 SEARCHIT[2].[6:6],SEARCHIT[2].[12:36]);                06257000
              ZPL(FILEPLACE,2,ZAR);                                     06258000
         END ELSE                                                       06259000
              IF TAPETOG THEN                                           06260000
         BEGIN                                                          06261000
              SEARCH(SWIN,SEARCHIT[*]);                                 06262000
              WRITE(ZAR[*],SWINF,SEARCHIT[1].[6:6],SEARCHIT[1].[12:36], 06263000
                 SEARCHIT[2].[6:6],SEARCHIT[2].[12:36]);                06264000
              ZPL(FILEPLACE,2,ZAR);                                     06265000
              IF SEARCHIT[0]  !  -1 THEN % FOUND ON DISK                06266000
              IF SWFININD !1 THEN % 0 TAP5 1 DISK 4 PATCHTAPE           06267000
         BEGIN                                                          06268000
              DOCERROR(22) ; % LABEL-EQ DISK TO TAPE BAD                06269000
              CLOSE(SWIN,RELEASE);                                      06270000
              SWFININD~1;                                               06271000
              READ(SWIN,10,TBUFF[*]);                                   06272000
         END ;                                                          06273000
              IF SWFININD=0 THEN                                        06274000
              IF FORTRTOG THEN  ERROR(13);% FORTRAN NOT ALLOWD TAPE IN  06275000
         END ;                                                          06276000
              IF LISTOG THEN GO TO EXIT; % WE DONT HAVE MORE INFO       06277000
              IF NEWTOG THEN                                            06278000
         BEGIN                                                          06279000
              SEARCH(SWOUT,SEARCHIT[*]);                                06280000
              WRITE(ZAR[*],SWOUF,SEARCHIT[1].[6:6],SEARCHIT[1].[12:36], 06281000
                 SEARCHIT[2].[6:6],SEARCHIT[2].[12:36]);                06282000
              ZPL(FILEPLACE,2,ZAR);                                     06283000
         END ;                                                          06284000
              IF BACKUPTOG THEN                                         06285000
         BEGIN                                                          06286000
              SEARCH(BACKUP,SEARCHIT[*]);                               06287000
              WRITE(ZAR[*],BACKF,SEARCHIT[1].[6:6],SEARCHIT[1].[12:36], 06288000
                 SEARCHIT[2].[6:6],SEARCHIT[2].[12:36]);                06289000
              ZPL(FILEPLACE,2,ZAR);                                     06290000
         END ;                                                          06291000
EXIT:                                                                   06292000
              ZPG(FILEPLACE);                                           06293000
         END ;                                                          06294000
COMMENT DOCUMENT* 5 * * * * * * * * * * * * * * * * * * * * * * * * *   06295000
D. PROCEDURES FOR DEBUGGING AND CHANGING XREF.                          06296000
* END;                                                                  06297000
COMMENT DOCUMENT* 22 * * * * * * * * * * * * * * * * * * * * * * * * *; 06298000
STREAM PROCEDURE TABLEDIT(ADDRESS,TABLE,BUFFER,NWORDS) ;                06299000
VALUE         NWORDS ;                                                  06300000
COMMENT  FORMATS AN ARRAY ROW TO BE DUMPED ;                            06301000
         BEGIN                                                          06302000
              SI ~ ADDRESS ; DI ~ BUFFER ; SI ~ SI + 5 ; SKIP 3 SB ;    06303000
              5 ( 3 ( DS ~ 1 RESET ) ;                                  06304000
                              3 ( IF SB THEN DS ~ 1 SET ELSE DS ~ 1     06305000
                   RESET ; SKIP 1 SB ) ) ; SI ~ TABLE ; DS ~ 1 LIT " " ;06306000
         NWORDS(DS ~1 LIT " "; 2(DS ~ 1 LIT " " ; 8(3(DS ~ 1 RESET );   06307000
              3(IF SB THEN DS ~ 1 SET ELSE DS ~ 1 RESET ; SKIP 1 SB))));06308000
         END TABLEDIT ;                                                 06309000
COMMENT DOCUMENT* 21 * * * * * * * * * * * * * * * * * * * * * * * * *; 06310000
STREAM PROCEDURE EDITSCAN(NCR,COUNT,ACCUM,RESULT,BUFFER,LCR) ;          06311000
COMMENT  FORMATS OUTPUT OF SCANNER FOR DEBUGGING CONTROL, "DEBUG" ;     06312000
BEGIN DI ~ BUFFER ; SI ~ NCR ;                                          06313000
16(3(DS ~ 1 RESET ) ; 3(IF SB THEN DS ~ 1 SET ELSE DS ~ 1 RESET ;       06314000
SKIP 1 SB ) ) ;                                                         06315000
DS ~ 3 LIT "   " ;                                                      06316000
SI ~ COUNT ;                                                            06317000
16(3(DS ~ 1 RESET ) ; 3(IF SB THEN DS ~ 1 SET ELSE DS ~ 1 RESET ;       06318000
SKIP 1 SB ) ) ;                                                         06319000
DS ~ 3 LIT "   " ;                                                      06320000
SI ~ ACCUM ; SI ~ SI + 2 ;                                              06321000
 2(3(DS ~ 1 RESET ) ; 3(IF SB THEN DS ~ 1 SET ELSE DS ~ 1 RESET ;       06322000
SKIP 1 SB ) ) ; DS ~ 16 CHR ;                                           06323000
DS ~ 3 LIT "   " ;                                                      06324000
DS ~ 3 LIT "   " ;                                                      06325000
SI ~ RESULT ;                                                           06326000
16(3(DS ~ 1 RESET ) ; 3(IF SB THEN DS ~ 1 SET ELSE DS ~ 1 RESET ;       06327000
SKIP 1 SB ) ) ;                                                         06328000
DS ~ 3 LIT "   " ;                                                      06329000
              SI ~ LCR ;  16(3(DS ~ 1 RESET ) ; 3(IF SB THEN DS ~ 1 SET 06330000
              ELSE DS ~ 1 RESET ; SKIP 1 SB ) ) ;                       06331000
    END EDITSCAN ;                                                      06332000
COMMENT DOCUMENT* 21 * * * * * * * * * * * * * * * * * * * * * * * * *; 06333000
PROCEDURE     EDIT ;                                                    06334000
COMMENT  DRIVES EDITSCAN ;                                              06335000
         BEGIN                                                          06336000
              IF MONITOG THEN WRITE(PRINT,MONITFORM,"EDIT  ","      ") ;06337000
              CLEAR(BUFFER,14) ;                                        06338000
              EDITSCAN(NCR,COUNT,ACCUM[1],RESULT,BUFFER,LCR) ;          06339000
              WRITE(PRINT,15,BUFFER[*]) ;                               06340000
         END EDIT ;                                                     06341000
COMMENT DOCUMENT*  27 * * * * * * * * * * * * * * * * * * * * * * * ;   06342000
PROCEDURE     DUMPARRAYROW (A,LBOUND,UBOUND,ADDRESS,FILENAME,ANAME1,    06343000
                     ANAME2) ;                                          06344000
VALUE         ADDRESS,LBOUND,UBOUND ;                                   06345000
INTEGER       ADDRESS,LBOUND,UBOUND ;                                   06346000
ALPHA         ANAME1,ANAME2 ;                                           06347000
FILE          FILENAME ;                                                06348000
ARRAY         A[*] ;                                                    06349000
COMMENT  DUMPS ONE ARRAY ROW TO GIVEN FILE ;                            06350000
         BEGIN                                                          06351000
INTEGER       ADD,I,J,NPROWS,NLASTROW ;                                 06352000
BOOLEAN       SAMELINE ;                                                06353000
SAVE ARRAY    BUFFER,OLDBUFFER[0:14] ;                                  06354000
FORMAT        ASTER(X6,12(" * * * *")) ;                                06355000
FORMAT        NAMEFORM("ARRAY   ",2A6) ;                                06356000
              IF MONITOG THEN WRITE(PRINT,MONITFORM,"DUMPAR","RAYROW") ;06357000
              CLEAR(BUFFER,14) ; CLEAR(OLDBUFFER,14) ;                  06358000
              SAMELINE ~ FALSE ;                                        06359000
              WRITE(FILENAME[DBL],15,BUFFER[*]) ;                       06360000
              WRITE(FILENAME[DBL],NAMEFORM,ANAME1,ANAME2 ) ;            06361000
              NPROWS ~ ((UBOUND+1-LBOUND) DIV 6 - 1 ) | 6 ;             06362000
              NLASTROW ~ (UBOUND + 1 - LBOUND ) MOD 6 ;                 06363000
              ADD ~ ADDRESS ;                                           06364000
              FOR I ~ 0 STEP 6 UNTIL NPROWS DO                          06365000
         BEGIN                                                          06366000
              TABLEDIT(ADD,A[I+LBOUND],BUFFER,6) ;                      06367000
              ADD ~ ADD + 6 ;                                           06368000
              IF WORDEQUAL(OLDBUFFER[1],BUFFER[1],14) THEN              06369000
         BEGIN                                                          06370000
              IF NOT SAMELINE THEN WRITE(FILENAME,ASTER) ;              06371000
              SAMELINE ~TRUE ;                                          06372000
         END ELSE                                                       06373000
         BEGIN                                                          06374000
              WRITE(FILENAME,15,BUFFER[*]) ; SAMELINE ~ FALSE ;         06375000
         END ;                                                          06376000
              MOVEWORDS(BUFFER,OLDBUFFER,15) ;                          06377000
              CLEAR(BUFFER,14) ;                                        06378000
         END ;                                                          06379000
              IF NLASTROW !0 THEN                                       06380000
         BEGIN                                                          06381000
              CLEAR(BUFFER,14) ;                                        06382000
              TABLEDIT(ADD,A[(NPROWS+6)  +LBOUND],BUFFER,NLASTROW) ;    06383000
              WRITE(FILENAME,15,BUFFER[*]) ;                            06384000
         END ;                                                          06385000
         END DUMPARRAYROW ;                                             06386000
COMMENT DOCUMENT* 21 * * * * * * * * * * * * * * * * * * * * * * * * *; 06387000
PROCEDURE     DUMPARRAYS ;                                              06388000
COMMENT  DUMPS MOST OF ARRAYS IN PROGRAM ;                              06389000
         BEGIN                                                          06390000
INTEGER       LASTROW,II ;                                              06391000
ARRAY         PRTARRAY[0:511] ;                                         06392000
              IF MONITOG THEN WRITE(PRINT,MONITFORM,"DUMPAR","RATS  ") ;06393000
              WRITE(PRINT[PAGE],15,BLANKARRAY[*]) ;                     06394000
              WRITE(PRINT[DBL],15,HEADING[*]) ;                         06395000
              MOVEWORDS(PRT,PRTARRAY,500) ;                             06396000
              DUMPARRAYROW(PRTARRAY,0,500,21,PRINT,"PRTARR","AY    ");  06397000
              DUMPARRAYROW (PAGENUM,0,14,0,PRINT,"PAGENU","M     ");    06398000
              DUMPARRAYROW(WORDBUF,0,15,0,LINE,"WORDBU","F     ");      06399000
              DUMPARRAYROW(OLDBUF,0,15,0,LINE,"OLDBUF","      ");       06400000
              DUMPARRAYROW(PAGES,0,PAGEPOINT,0,LINE,"PAGES ","      "); 06401000
              DUMPARRAYROW (CONTBUF,0,15,0,PRINT,"CONTBU","F     ");    06402000
              DUMPARRAYROW(RESERVED,0,250,0,PRINT,"RESERV","ED    ") ;  06403000
   DUMPARRAYROW ( RESTACK,0,63,0,PRINT, "RESTAC","K     ");             06404000
              DUMPARRAYROW(STACK,0,63,0,PRINT,"STACK ","      ") ;      06405000
              LASTROW ~ PP.[33:6];                                      06406000
              FOR II ~ 0 STEP 1 UNTIL LASTROW DO                        06407000
              DUMPARRAYROW(TABLE[II,*],0,511,II|512,PRINT,              06408000
                   "TABLE ","      ") ;                                 06409000
              LASTROW ~ LASTSEQLINK.[33:6] ;                            06410000
              FOR II ~ 0 STEP 1 UNTIL LASTROW DO                        06411000
              DUMPARRAYROW(SEQLINKS[II,*],0,511,II|512,PRINT,           06412000
                   "SEQLIN","KS    ") ;                                 06413000
              LASTROW ~ LASTCURSEQ.[33:6] ;                             06414000
              FOR II ~ 0 STEP 1 UNTIL LASTROW DO                        06415000
              DUMPARRAYROW(CURSEQ[II,*],0,511,II|512,PRINT,             06416000
                   "CURSEQ","      ") ;                                 06417000
              LASTROW ~ BEGINDEX.[36:6] ;                               06418000
              FOR II ~ 0 STEP 1 UNTIL LASTROW DO                        06419000
              DUMPARRAYROW(PAIRSEQ[II,*],0,63,II|64,PRINT,              06420000
                   "PAIRSE","Q     ") ;                                 06421000
              DUMPARRAYROW(CASTBUFF,0,56,0,PRINT,"CASTBU","FF    ") ;   06422000
              FOR II ~ 0 STEP 1 UNTIL 3 DO                              06423000
              DUMPARRAYROW(CASTDIR[II,*],0,56,II|56,PRINT,"CASTDI",     06424000
                   "R     ") ;                                          06425000
              DUMPARRAYROW(CASTLINKS,0,150,0,PRINT,"CASTLI","NKS   ") ; 06426000
              DUMPARRAYROW(NAMEBUFF,0,15,0,PRINT,"NAMEBU","FF    ") ;   06427000
              DUMPARRAYROW(LASTCASTID,0,14,0,PRINT,"LASTCA","STID  ") ; 06428000
              DUMPARRAYROW(FIRSTCASTID,0,14,0,PRINT,"FIRSTC",           06429000
                  "ASTID ") ;                                           06430000
              DUMPARRAYROW(TALLIES,0,63,0,PRINT,"TALLIE","S     ") ;    06431000
              DUMPARRAYROW(HEADING,0,15,0,PRINT,"HEADIN","G     ") ;    06432000
              DUMPARRAYROW(DOCDEFLINKS,0,100,0,PRINT,"DOCDEF","LINKS ");06433000
              FOR II ~ 0 STEP 1 UNTIL NDOCDEFS DO                       06434000
              DUMPARRAYROW(DOCDEFINES[DOCDEFLINKS[II],*],0,10,0,        06435000
                   PRINT,"DOCDEF","INES  ") ;                           06436000
         END DUMPARRAYS ;                                               06437000
COMMENT DOCUMENT* 21 * * * * * * * * * * * * * * * * * * * * * * * * *; 06438000
PROCEDURE     BUILDRESERVED ;                                           06439000
COMMENT  BUILDS A NEW RESERVED WORD ARRAY TO BE PUNCHED OUT ;           06440000
         BEGIN                                                          06441000
INTEGER       SINDEX,NWORDS ;                                           06442000
              SINDEX ~ Q.[18:6] ;                                       06443000
              NWORDS ~ IF COUNT { 5 THEN 1 ELSE ((COUNT-6) DIV 8 + 2) ; 06444000
              MOVEWORDS(ACCUM[1],RESERVED[RR+1],NWORDS) ;               06445000
              RESERVED[RR].TABLINK ~ RESTACK[SINDEX] ;                  06446000
              RESTACK[SINDEX] ~ RR ;                                    06447000
              RESERVED[RR].TYPLINK  ~ BRESTYPE ;                        06448000
              RR ~ RR + NWORDS + 1 ;                                    06449000
         END BUILDRESERVED ;                                            06450000
COMMENT DOCUMENT* 21 * * * * * * * * * * * * * * * * * * * * * * * * *; 06451000
PROCEDURE     PUNCHRESERVEDFILLSTATEMENTS ;                             06452000
COMMENT  PUNCHES OUT NEW RESERVED TABLE FILL STATEMENT;                 06453000
         BEGIN                                                          06454000
FORMAT        FFILL(X14,"FILL RESERVED[*] WITH ",I4,",") ;              06455000
INTEGER       NWORDS,I,STARTSEQ,TEMP ;                                  06456000
SAVE ARRAY    FILLBUFF[0:14] ;                                          06457000
FORMAT        FSTACK(X14,"FILL RESTACK[*] WITH " /                      06458000
                   8(X14,8(I5,A1)/)) ;                                  06459000
LIST          LSTACK(FOR I ~ 0 STEP 1 UNTIL 62 DO [RESTACK[I],","],     06460000
                  RESTACK[63],";") ;                                    06461000
COMMENT DOCUMENT* 31 * * * * * * * * * * * * * * * * * * * * * * * * *; 06462000
STREAM PROCEDURE OCTRAN(SOURCE,DEST) ;                                  06463000
COMMENT  EDITS CARD INTO LEGAL ALGOL WITH COMMENT SHOWING BCD ;         06464000
         BEGIN                                                          06465000
              SI ~ SOURCE ; DI ~ DEST ;                                 06466000
              DI ~ DI - 2 ; DS ~ 3 LIT "OCT" ;                          06467000
              16( 3( DS ~ 1 RESET ) ; 3 ( IF SB THEN DS ~ 1 SET ELSE    06468000
                   DS ~ 1 RESET ; SKIP 1 SB )) ;                        06469000
              DS ~ 8 LIT "  ,  %  " ;                                   06470000
              SI ~ SOURCE ; DS ~ 8 CHR ;                                06471000
         END OCTRAN ;                                                   06472000
              WRITE(PRINT,FFILL,RESERVED[0]) ;                          06473000
              IF BUILDPUNCHTOG THEN                                     06474000
              WRITE(PUNCH,FFILL,RESERVED[0]) ;                          06475000
              NWORDS ~ RR - 1 ;                                         06476000
              FOR I ~ 1 STEP 1 UNTIL NWORDS DO                          06477000
         BEGIN                                                          06478000
              CLEAR(FILLBUFF,14) ;                                      06479000
              OCTRAN(RESERVED[I],FILLBUFF[2]) ;                         06480000
              FOR IJUNK ~ 1 STEP 1 UNTIL 8 DO                           06481000
              IF CHECKCHAR(FILLBUFF[5],IJUNK,12) THEN                   06482000
                   SETCHAR(FILLBUFF[5],IJUNK," ") ;                     06483000
              IF I = NWORDS THEN SETCHAR(FILLBUFF[2],19,";") ;          06484000
              WRITE(PRINT,15,FILLBUFF[*]) ;                             06485000
              IF BUILDPUNCHTOG THEN                                     06486000
              WRITE(PUNCH,10,FILLBUFF[*]) ;                             06487000
         END ;                                                          06488000
              WRITE(PRINT[DBL],FSTACK,LSTACK) ;                         06489000
              IF BUILDPUNCHTOG THEN WRITE(PUNCH,FSTACK,LSTACK) ;        06490000
         END PUNCHRESERVEDFILLSTATEMENTS ;                              06491000
COMMENT DOCUMENT* 21 * * * * * * * * * * * * * * * * * * * * * * * * *; 06492000
PROCEDURE     PUNCHRESERVEDEFINES ;                                     06493000
COMMENT  CREATES DEFINES REFERENCING TABLE TYPE ;                       06494000
         BEGIN                                                          06495000
FORMAT        FDEFINE("DEFINE") ;                                       06496000
INTEGER       NEXT,NCHAR,TYPE,STARTSEQ ;                                06497000
SAVE ARRAY    DEFBUFF[0:14] ;                                           06498000
LABEL         REDO ;                                                    06499000
INTEGER       I ;                                                       06500000
LABEL         RET ;                                                     06501000
FORMAT        FLAZY(X14,"LAZYGUYV = 99999999 # ;") ;                    06502000
COMMENT DOCUMENT* 32 * * * * * * * * * * * * * * * * * * * * * * * * *; 06503000
STREAM PROCEDURE TRANSFER(SOURCE,DEST,NCHAR,TYPE) ;                     06504000
VALUE         NCHAR ;                                                   06505000
COMMENT  CREATES A NAME FOR THE DEFINE ;                                06506000
         BEGIN                                                          06507000
              SI ~ SOURCE ; SI ~ SI + 3 ;                               06508000
              DI ~ DEST ; DI ~ DI - 2 ;                                 06509000
              DS ~ NCHAR CHR ; DS ~ 4 LIT "V = " ;                      06510000
              SI ~ TYPE ; DS ~ 3 DEC ; DS ~ 4 LIT " # ," ;              06511000
         END TRANSFER ;                                                 06512000
              WRITE(PRINT,FDEFINE) ;                                    06513000
              IF BUILDPUNCHTOG THEN WRITE(PUNCH,FDEFINE) ;              06514000
              FOR I ~ 0 STEP 1 UNTIL 63 DO                              06515000
         BEGIN                                                          06516000
              NEXT ~ RESTACK[I] ;                                       06517000
              IF NEXT = 0 THEN GO TO RET ;                              06518000
REDO:         CLEAR(DEFBUFF,14) ;                                       06519000
              NCHAR ~ RESERVED[NEXT+1].[12:6] ;                         06520000
              TYPE ~ RESERVED[NEXT].TYPLINK ;                           06521000
              TRANSFER(RESERVED[NEXT+1],DEFBUFF[2],NCHAR,TYPE) ;        06522000
              NEXT ~ RESERVED[NEXT].TABLINK ;                           06523000
              WRITE(PRINT,15,DEFBUFF[*]) ;                              06524000
              IF BUILDPUNCHTOG THEN                                     06525000
              WRITE(PUNCH,10,DEFBUFF[*]) ;                              06526000
              IF NEXT ! 0 THEN GO TO REDO ;                             06527000
RET:                                                                    06528000
         END ;                                                          06529000
              WRITE(LINE,FLAZY) ;                                       06530000
              IF BUILDPUNCHTOG THEN WRITE(PNCH,FLAZY) ;                 06531000
         END PUNCHRESERVEDEFINES ;                                      06532000
COMMENT DOCUMENT* 5 * * * * * * * * * * * * * * * * * * * * * * * * *   06533000
E. ERROR PROCEDURES.                                                    06534000
* END;                                                                  06535000
COMMENT DOCUMENT* 23 * * * * * * * * * * * * * * * * * * * * * * * * * ;06536000
PROCEDURE     DOCERROR(N) ;                                             06537000
VALUE         N ;                                                       06538000
INTEGER       N ;                                                       06539000
COMMENT  ERROR PROCEDURE:  COUNTS ERRORS AND WRITES MESSAGES ;          06540000
         BEGIN                                                          06541000
ALPHA         S1,S2 ;                                                   06542000
COMMENT DOCUMENT* 31 * * * * * * * * * * * * * * * * * * * * * * * * ;  06543000
STREAM PROCEDURE SEQSPLIT(SEQ,S1,S2) ;                                  06544000
COMMENT  FORMATS REFERENCE TO LAST ERROR ;                              06545000
         BEGIN                                                          06546000
              SI ~ SEQ ; DI ~ S1 ; DI ~ DI + 4 ; DS ~ 4 CHR ;           06547000
              DI ~ S2 ; DI ~ DI + 4 ; DS ~ 4 CHR ;                      06548000
         END SEQSPLIT ;                                                 06549000
FORMAT        TOTALERRORS(2("****"),X2,"NUMBER OF ERRORS DETECTED=",I4, 06550000
              X2,"LAST ERROR",X2,2A4,X2,2("****")) ,                    06551000
              LASTDOCER(X80,2A4,X22,"LAST ERROR") ;                     06552000
COMMENT FORMATS WITHOUT TEXT ARE FREE FOR NEW USE ;                     06553000
SWITCH FORMAT DOCERR ~ (/)                                              06554000
,(X8 ,"  1 LAST PRINT COL OUT OF RANGE SET=72  ",X40,2A4,X16,2("XXXX")) 06555000
,(X8 ,"  2 MISSING DEFINE INDEX                ",X40,2A4,X16,2("XXXX")) 06556000
,(X8 ,"  3 DEFINE INDEX > 100                  ",X40,2A4,X16,2("XXXX")) 06557000
,(X8 ,"  4 THIS INDEX HAS NOT BEEN DEFINED     ",X40,2A4,X16,2("XXXX")) 06558000
,(X8 ,"  5 MISSING = IN DEFINE                 ",X40,2A4,X16,2("XXXX")) 06559000
,(X8 ,"  6 TABULATE COL OUT OF RANGE           ",X40,2A4,X16,2("XXXX")) 06560000
,(X8 ,"  7 TAB COL { LAST TAB COL              ",X40,2A4,X16,2("XXXX")) 06561000
,(X8 ,"  8 INDENT VALUE TOO LARGE              ",X40,2A4,X16,2("XXXX")) 06562000
,(X8 ,"  9 MISSING LEFT FIELD BIT DEFINITION   ",X40,2A4,X16,2("XXXX")) 06563000
,(X8 ," 10 MISSING FIELD LENGTH DEFINITION     ",X40,2A4,X16,2("XXXX")) 06564000
,(X8 ," 11 MISSING , OR . AFTER #              ",X40,2A4,X16,2("XXXX")) 06565000
,(X8, " 12 TOO MANY ESCAPE CHRS REQUESTED      ",X40,2A4,X16,2("XXXX")) 06566000
,(X8 ," 13 MISSING COLON                       ",X40,2A4,X16,2("XXXX")) 06567000
,(X8 ," 14 LEFT FIELD OVERLAP                  ",X40,2A4,X16,2("XXXX")) 06568000
,(X8 ," 15 RIGHT FIELD OVERLAP > 48            ",X40,2A4,X16,2("XXXX")) 06569000
,(X18  " 16 INVALID TABHEAD LINE POSITION      ",X40,2A4,X16,2("XXXX")) 06570000
,(X8 ," 17 LEFT FIELD OVERFLOW IN FORMAT       ",X40,2A4,X16,2("XXXX")) 06571000
,(X8 ," 18 MISSING * TO CLOSE DEFINE DEFINITION",X40,2A4,X16,2("XXXX")) 06572000
,(X8 ," 19 CARD SEQUENCE ERROR                 ",X40,2A4,X16,2("XXXX")) 06573000
,(X8 ," 20 TAPE SEQUENCE ERROR                 ",X40,2A4,X16,2("XXXX")) 06574000
,(X8, " 21 RIDICULOUS LINE COUNT REQUESTED     ",X40,2A4,X16,2("XXXX")) 06575000
,(X8,  " 22 DISK INPUT FILE NEEDS DISK ON $CARD",X40,2A4,X16,2("XXXX")) 06576000
,(X8, " 23 MISSING REVISION LETTER             ",X40,2A4,X16,2("XXXX")) 06577000
,(X8, " 24 VOID NOT ALLOWED ON * CARD          ",X40,2A4,X16,2("XXXX")) 06578000
,(X8 ," 25 SEQ NUMBER NOT ON INPUT TAPE        ",X40,2A4,X16,2("XXXX")) 06579000
,(X8 ," 26 NEW SEQ { LAST SEQ OF LAST BATCH    ",X40,2A4,X16,2("XXXX")) 06580000
,(X8 ," 27 THIS END HAS NO BEGIN               ",X40,2A4,X16,2("XXXX")) 06581000
,(X8 ," 28 BNF IDENTIFIER GREATER THAN 62 CHAR ",X40,2A4,X16,2("XXXX")) 06582000
,(X8 ," 29 BNF IDENTIFIER RIGHT  >  MISSING    ",X40,2A4,X16,2("XXXX")) 06583000
,(X8 ," 30 INSERTPAGE NOT ALLOWED WITH PAGE    ",X40,2A4,X16,2("XXXX")) 06584000
,(X8, " 31 PRINTALL NOT ALLOWED WITH BACKUP    ",X40,2A4,X16,2("XXXX")) 06585000
,( X8," 32 PAGE MUST BE AN INTEGER             ",X40,2A4,X16,2("XXXX")) 06586000
,(X8," 33 PAGING OCCURS AT A BLANK SEQ NO.    ",X40,2A4,X16,2("XXXX"))  06587000
,(X8, " 34 PAGING OCCURS IN MIDDLE OF PATTERN  ",X40,2A4,X16,2("XXXX")) 06588000
,(X8, " 35 TAB HEAD COUNT TOO LARGE            ",X40,2A4,X16,2("XXXX")) 06589000
,(X8, " 36 TOO MANY CHARS FOR TABFIELD         ",X40,2A4,X16,2("XXXX")) 06590000
,(X8, " 37 INSUFFICIENT FILE INFORMATION       ",X40,2A4,X16,2("XXXX")) 06591000
,(X8, " 38 MISSING <INPUT PART>                ",X40,2A4,X16,2("XXXX")) 06592000
,(X8, " 39 MISSING COMMA AFTER FIRST IDENTIFIER",X40,2A4,X16,2("XXXX")) 06593000
,(X8, " 40 MULTIFILE NAMES NOT THE SAME        ",X40,2A4,X16,2("XXXX")) 06594000
,(X8, " 41 BOY, YOUR TABS ARE REALLY MESSED UP ",X40,2A4,X16,2("XXXX")) 06594100
,(X8, " 42 DOCUMENT PARAGRAPH ITEM TOO LONG    ",X40,2A4,X16,2("XXXX")) 06594200
,(X8, "43 PARAGRAPH ID TOO LONG                ",X40,2A4,X16,2("XXXX")) 06594400
,(X8, "44 BAD STRING IN DOCUMENT               ",X40,2A4,X16,2("XXXX")) 06594500
,(X8, " 45 INDENTVAL TOO LARGE                 ",X40,2A4,X16,2("XXXX")) 06594600
              ;                                                         06595000
SWITCH FORMAT FERROR ~ (/)                                              06596000
,(X8 ,"  1 NO SPACE AFTER A,B, OR C            ",X40,2A4,X16,2("XXXX")) 06597000
,(X8 ,"  2 NO A,B OR C ON CAST $ CARD          ",X40,2A4,X16,2("XXXX")) 06598000
,(X8 ,"  3 NO SUCH ENTRY IN THE CAST DIRECTORY ",X40,2A4,X16,2("XXXX")) 06599000
,(X8 ,"  4 MISSING  TO  ON $ CARD              ",X40,2A4,X16,2("XXXX")) 06600000
,(X8 ,"  5 FIRST LETTER TO XREF IN ERROR       ",X40,2A4,X16,2("XXXX")) 06601000
,(X8 ,"  6  LAST LETTER TO XREF IN ERROR       ",X40,2A4,X16,2("XXXX")) 06602000
,(X8 ,"  7 MISSING $ IN COL 2 OF CONT CARD     ",X40,2A4,X16,2("XXXX")) 06603000
,(X8 ,"  8 RESEQUENCE NOT ALLOWED WITH CAST ALL",X40,2A4,X16,2("XXXX")) 06604000
,(X8, "  9 DOCUMENT NOT ALLOWED WITH NEW       ",X40,2A4,X16,2("XXXX")) 06605000
,(X8, " 10 NUMBER OF DOCUMENT PAGES > 1022     ",X40,2A4,X16,2("XXXX")) 06606000
,(X8 ," 11 XREF AND NAMES NOT ALLOWED TOGETHER ",X40,2A4,X16,2("XXXX")) 06607000
,(X8 ," 12 PROCEDURE AND NAMES NOT ALLOWED TOG.",X40,2A4,X16,2("XXXX")) 06608000
, (X8, " 13 TAPE INPUT NOT ALLOWED FOR FORTRAN ",X40,2A4,X16,2("XXXX")) 06609000
,(X8," 14 MISSING *QUIT FOR DOCUMENT OR FLOW",X40,2A4,X16, 2("XXXX"))   06610000
,(X8 ," 15 MISSING SEQ NUMBER AFTER VOID       ",X40,2A4,X16,2("XXXX")) 06611000
,(X8 ," 16 MISSING CARD,TAPE,CAST,BACKUP,COPY  ",X40,2A4,X16,2("XXXX")) 06612000
,(X8 ," 17 MISSING START SEQ NUMBER            ",X40,2A4,X16,2("XXXX")) 06613000
,(X8 ," 18 MISSING <TO END> AFTER <ALL>        ",X40,2A4,X16,2("XXXX")) 06614000
,(X8 ," 19 MISSING CAST OR TAPE AFTER COPY     ",X40,2A4,X16,2("XXXX")) 06615000
,(X8, " 20 NO END OF DOCUMENT MARKER ON        ",X40,2A4,X16,2("XXXX")) 06616000
,(X8 ," 21 SHUFFLE ALLOWED ONLY WITH $ TAPE    ",X40,2A4,X16,2("XXXX")) 06617000
,(X8 ," 22 MISSING MULTIFILE IDENTIFIER        ",X40,2A4,X16,2("XXXX")) 06618000
,(X8 ," 23 MULTIFILE IDENT > 7 CHARACTERS      ",X40,2A4,X16,2("XXXX")) 06619000
,(X8 ," 24 ONLY NEW MULTIFILE WITH CAST ALL    ",X40,2A4,X16,2("XXXX")) 06620000
,(X8 ," 25 LISTBACKUP AND FLOW NOT ALLOWED     ",X40,2A4,X16,2("XXXX")) 06621000
,(X8 ," 26 LISTBACKUP AND DOCUMENT NOT ALLOWED ",X40,2A4,X16,2("XXXX")) 06622000
,(X8 ," 27 LISTBACKUP AND BLOCK NOT ALLOWED    ",X40,2A4,X16,2("XXXX")) 06623000
,(X8, " 28                                     ",X40,2A4,X16,2("XXXX")) 06624000
,(X8, " 29 DOCUMENT REVISION LETTER TOO HIGH   ",X40,2A4,X16,2("XXXX")) 06625000
,(X8, " 30 MISSING DISK OR TAPE AFTER MAKEMULTI",X40,2A4,X16,2("XXXX")) 06626000
,(X8, " 31 FILE IDENT STARTS WITH SPECIAL CHAR ",X40,2A4,X16,2("XXXX")) 06627000
,(X8, " 32 TOO MANY <SELECTIVE XREF CONTROLS>  ",X40,2A4,X16,2("XXXX")) 06628000
,(X8, " 33 BLANK CARD NEEDED BEFORE $ VOID     ",X40,2A4,X16,2("XXXX")) 06629000
,(X8, " 34 THIS VOID SHOULD BE ON MAIN $ CARD  ",X40,2A4,X16,2("XXXX")) 06630000
,(X8, " 35 TOO MANY SEGMENTS REQUESTED         ",X40,2A4,X16,2("XXXX")) 06631000
,(X8, " 36 NO SEGMENTS REQUESTED               ",X40,2A4,X16,2("XXXX")) 06632000
,(X8, " 37 INVALID SEGMENT NUMBER OR SPAN      ",X40,2A4,X16,2("XXXX")) 06633000
,(X8, " 38 $ PATCHTAPE TAPEPATCHES NOT ALOOWED ",X40,2A4,X16,2("XXXX")) 06634000
,(X8, " 39 MISSING * OR $                      ",X40,2A4,X16,2("XXXX")) 06635000
              ;                                                         06636000
SWITCH FORMAT FLOWERR ~ (/)                                             06637000
,(X8 ,"  1 MISPLACED START                     ",X40,2A4,X16,2("XXXX")) 06638000
,(X8 ,"  2 MISSING END                         ",X40,2A4,X16,2("XXXX")) 06639000
,(X8 ,"  3 PREVIOUS SECTION NOT CLOSED WITH END",X40,2A4,X16,2("XXXX")) 06640000
,(X8 ,"  4 THIS END HAS NO BEGIN               ",X40,2A4,X16,2("XXXX")) 06641000
,(X8 ,"  5 MISPLACED HEADING                   ",X40,2A4,X16,2("XXXX")) 06642000
,(X8 ,"  6 MISPLACED TITLE                     ",X40,2A4,X16,2("XXXX")) 06643000
,(X8 ,"  7 BOX MAY NOT START WITH YES OR TRUE  ",X40,2A4,X16,2("XXXX")) 06644000
,(X8 ,"  8 BOX MAY NOT START WITH NO OR FALSE  ",X40,2A4,X16,2("XXXX")) 06645000
,(X8 ,"  9 BOX MAY NOT START WITH TO           ",X40,2A4,X16,2("XXXX")) 06646000
,(X8 ," 10 LABEL IS NOT AN IDENTIFIER IN GO TO ",X40,2A4,X16,2("XXXX")) 06647000
,(X8 ," 11 MISSING COLON AFTER LABEL           ",X40,2A4,X16,2("XXXX")) 06648000
,(X8 ," 12 SOME BODY GOOFED SEE AUTHOR         ",X40,2A4,X16,2("XXXX")) 06649000
,(X8 ," 13 TITLE OR HEADING TOO LONG           ",X40,2A4,X16,2("XXXX")) 06650000
,(X8 ," 14 CONTENTS OF BOX TOO LONG            ",X40,2A4,X16,2("XXXX")) 06651000
,(X8 ," 15 MISSING LABEL AFTER GO TO           ",X40,2A4,X16,2("XXXX")) 06652000
,(X8 ," 16 MISSING GO TO OR RT PAREN IN TESTBOX",X40,2A4,X16,2("XXXX")) 06653000
,(X8, " 17 MISSING COMMA,SEMICOLON OR ASTERISK ",X40,2A4,X16,2("XXXX")) 06654000
,(X8 ," 18 MISSING PAGE # IN PAGEID BOX        ",X40,2A4,X16,2("XXXX")) 06655000
,(X8 ," 19 MISSING COMMA IN PAGEID BOX         ",X40,2A4,X16,2("XXXX")) 06656000
,(X8 ," 20 MISSING PAGEID STRING               ",X40,2A4,X16,2("XXXX")) 06657000
,(X8 ," 21 MAXCOL OUT OF RANGE                 ",X40,2A4,X16,2("XXXX")) 06658000
,(X8 ," 22 MISSING START IN FLOW CHART         ",X40,2A4,X16,2("XXXX")) 06659000
,(X8, " 23 MISSING GO TO IN SWITCH BOX         ",X40,2A4,X16,2("XXXX")) 06660000
,(X8 ," 24 MISSING BEGIN IN FLOW CHART         ",X40,2A4,X16,2("XXXX")) 06661000
,(X8, "25 MISSING LINE COUNT                   ",X40,2A4,X16,2("XXXX")) 06662000
,(X8 ," 26 ITEM GREATER THAN BOX WIDTH         ",X40,2A4,X16,2("XXXX")) 06663000
,(X8, " 27                                     ",X40,2A4,X16,2("XXXX")) 06664000
,(X8, " 28                                     ",X40,2A4,X16,2("XXXX")) 06665000
,(X8 ," 29 MISSING LABEL INDEX                 ",X40,2A4,X16,2("XXXX")) 06666000
,(X8 ," 30 LABEL INDEX > 3 DIGITS              ",X40,2A4,X16,2("XXXX")) 06667000
,(X8 ," 31 MISSING RIGHT PAREN                 ",X40,2A4,X16,2("XXXX")) 06668000
,(X8, " 32 EXTRA GO TO GENSYM                  ",X40,2A4,X16,2("XXXX")) 06669000
,(X8 ," 33 BOX MAY NOT BEGIN WITH ELSE         ",X40,2A4,X16,2("XXXX")) 06670000
,(X8 ," 34 TEST BOX MISSING CONDITION (EG YES) ",X40,2A4,X16,2("XXXX")) 06671000
,(X8 ," 35 MISSING *QUIT. MAY BE EXTRA RT PAREN",X40,2A4,X16,2("XXXX")) 06672000
,(X8, " 36 PAGING OCCURS IN SWITCH             ",X40,2A4,X16,2("XXXX")) 06673000
              ;                                                         06674000
BOOLEAN       TEMP;                                                     06675000
              TEMP ~ DOCOUTPUT; DOCOUTPUT ~ FALSE;                      06676000
              IF N = 0 THEN                                             06677000
         BEGIN                                                          06678000
              SEQSPLIT(LASTERROR,S1,S2) ;                               06679000
              WRITE(PRINT[DBL],TOTALERRORS,DOCER,S1,S2) ;               06680000
         END ELSE                                                       06681000
         BEGIN                                                          06682000
              DOCER ~ DOCER + 1 ;                                       06683000
              SEQSPLIT(SEQ,S1,S2) ;                                     06684000
              IF N > 200 THEN                                           06685000
              WRITE (ZAR[*],FLOWERR[N-200],S1,S2) ELSE                  06686000
              IF N > 100 THEN                                           06687000
         BEGIN                                                          06688000
              WRITE(ZAR[*],FERROR[N-100],S1,S2) ;                       06689000
         END ELSE                                                       06690000
              WRITE (ZAR[*],DOCERR[N],S1,S2);                           06691000
              IF ZLB = 0 OR ZLB = 2 THEN ZPL(ZLB,2,ZAR[*])              06692000
              ELSE  WRITE (PRINT[DBL],15,ZAR[*]);                       06693000
              IF DOCER > 1 THEN                                         06694000
         BEGIN                                                          06695000
              SEQSPLIT(LASTERROR,S1,S2) ;                               06696000
              WRITE( ZAR[*],LASTDOCER ,S1,S2);                          06697000
              IF ZLB = 0 OR ZLB = 2 THEN ZPL(ZLB,2,ZAR[*])              06698000
              ELSE  WRITE (PRINT[DBL],15,ZAR[*]);                       06699000
         END ;                                                          06700000
              MOVEWORDS(    SEQ,LASTERROR,1) ;                          06701000
         END ;                                                          06702000
              DOCOUTPUT ~ TEMP;                                         06703000
         END DOCERROR ;                                                 06704000
COMMENT DOCUMENT* 23 * * * * * * * * * * * * * * * * * * * * * * * * *; 06705000
PROCEDURE     ERROR(N);                                                 06706000
VALUE         N ;                                                       06707000
INTEGER       N ;                                                       06708000
COMMENT  CALLS DOCERROR AND KILLS JOB ;                                 06709000
         BEGIN                                                          06710000
              IF MONITOG THEN WRITE(PRINT,MONITFORM,"ERROR ","      ") ;06711000
              WRITE(PRINT[DBL],15,GLOBE[*]) ;                           06712000
              DOCERROR(N+100) ;                                         06713000
              IF CARDSOPEN THEN                                         06714000
              DO READ(CARDS)[EOPROG] UNTIL FALSE ;                      06715000
              GO TO EOPROG ;                                            06716000
         END ERROR ;                                                    06717000
COMMENT DOCUMENT* 23 * * * * * * * * * * * * * * * * * * * * * * * * ;  06718000
PROCEDURE     FLOWERROR(N) ;                                            06719000
VALUE         N ;                                                       06720000
INTEGER       N ;                                                       06721000
COMMENT  CALLS DOCERROR ;                                               06722000
         BEGIN                                                          06723000
              IF NOT DOCLISTOG THEN                                     06724000
              WRITE(PRINT[DBL],15,GLOBE[*]) ;                           06725000
              DOCERROR(N+200) ;                                         06726000
         END FLOWERROR ;                                                06727000
COMMENT DOCUMENT* 5 * * * * * * * * * * * * * * * * * * * * * * * * *   06728000
F. PROCEDURES FOR PROCESSING CAST FILES.                                06729000
* END;                                                                  06730000
COMMENT DOCUMENT* 21 * * * * * * * * * * * * * * * * * * * * * * * * *; 06731000
PROCEDURE     FILLCASTLINKS ;                                           06732000
COMMENT  FORMATS INFO FROM CAST DIRECTORY INTO THE ARRAY CASTLINKS;     06733000
         BEGIN                                                          06734000
INTEGER       POS,TEMPSEQ,IDCOUNT,I,ROW,NEXTCOUNT,CHARPOS ;             06735000
INTEGER       WORD,CIND ;                                               06736000
LABEL         EXIT,NEXT ;                                               06737000
COMMENT DOCUMENT* 32 * * * * * * * * * * * * * * * * * * * * * * * * *; 06738000
STREAM PROCEDURE TRANSFER(WORD,CHAR,IDCOUNT,TSEQ,NEXTCOUNT);            06739000
VALUE         CHAR,IDCOUNT ;                                            06740000
COMMENT  PICKS OFF SEQUENCE NUMBER FOR THIS FILE ;                      06741000
       BEGIN                                                            06742000
              SI ~ WORD ; SI ~ SI + CHAR ; SI ~ SI + IDCOUNT ;          06743000
              DI ~ TSEQ ; DI ~ DI + 5 ; DS ~ 3 CHR ;                    06744000
              DI ~ NEXTCOUNT ; DI ~ DI + 7 ; DS ~ CHR ;                 06745000
         END TRANSFER ;                                                 06746000
              IF MONITOG THEN WRITE(PRINT,MONITFORM,"FILLCA","STLINK") ;06747000
              REWIND(CASTSW[CASTINDEX]) ;                               06748000
              ROW ~ 1 ; POS ~ 9 ; CIND ~ 0 ;                            06749000
              READ(CASTSW[CASTINDEX],56,CASTDIR[ROW,*]) ;               06750000
              CASTAINDEX ~ CASTDIR[1,0] ;                               06751000
              FOR I ~ 2 STEP 1 UNTIL CASTDIR[1,0] DO                    06752000
                   READ(CASTSW[CASTINDEX],56,CASTDIR[I,*]) ;            06753000
              MOVECHARS(CASTDIR[1,1],NEXTCOUNT,0,7,1);                  06754000
NEXT:         IDCOUNT ~ NEXTCOUNT ;                                     06755000
              WORD ~ POS DIV 8 ; CHARPOS ~ POS.[45:3] ;                 06756000
              TRANSFER(CASTDIR[ROW,WORD],CHARPOS,IDCOUNT,TEMPSEQ,       06757000
                   NEXTCOUNT) ;                                         06758000
              IF TEMPSEQ ! 0 THEN                                       06759000
         BEGIN                                                          06760000
              CIND ~ CIND + 1 ;                                         06761000
              CASTLINKS[CIND].[ 6:6] ~ ROW ;                            06762000
              CASTLINKS[CIND].[12:6] ~ WORD ;                           06763000
              CASTLINKS[CIND].[18:6] ~ CHARPOS ;                        06764000
              CASTLINKS[CIND].[24:6] ~ IDCOUNT ;                        06765000
              CASTLINKS[CIND].[30:18] ~ TEMPSEQ ;                       06766000
         END ;                                                          06767000
              POS ~ POS + IDCOUNT + 4 ;                                 06768000
              IF IDCOUNT !0 THEN GO TO NEXT ;                           06769000
              IF IDCOUNT = 0 AND TEMPSEQ ! 0 THEN GO TO EXIT ;          06770000
              ROW ~ ROW + 1 ;                                           06771000
              MOVECHARS(CASTDIR[ROW,0],NEXTCOUNT,0,7,1) ;               06772000
              POS ~ 1 ; GO TO NEXT ;                                    06773000
EXIT:                                                                   06774000
              CASTLINKS[0] ~ CIND ;                                     06775000
         END FILLCASTLINKS ;                                            06776000
COMMENT DOCUMENT* 21 * * * * * * * * * * * * * * * * * * * * * * * * *; 06777000
PROCEDURE     READCAST ;                                                06778000
COMMENT  GETS 10 WORD RECORD FROM CAST FILE, CHECKING FOR EOF ;         06779000
         BEGIN                                                          06780000
              IF MONITOG THEN WRITE(PRINT,MONITFORM,"READCA","ST    ") ;06781000
              IF NCASTRECS < 0 THEN GO TO EOF ;                         06782000
              NCASTRECS ~ NCASTRECS - 1 ;                               06783000
              MOVEWORDS(CASTBUFF[CASTPOINT],TBUFF,10) ;                 06784000
              CASTPOINT ~ CASTPOINT + 11 ;                              06785000
              IF CASTPOINT = 56 THEN                                    06786000
         BEGIN                                                          06787000
              CASTPOINT ~ 1 ;                                           06788000
              READ(CASTSW[CASTINDEX],56,CASTBUFF[*]) ;                  06789000
         END ;                                                          06790000
         END READCAST ;                                                 06791000
COMMENT DOCUMENT* 22 * * * * * * * * * * * * * * * * * * * * * * * * *; 06792000
INTEGER PROCEDURE FINDCASTID(FIRSTCASTID) ;                             06793000
ARRAY         FIRSTCASTID[0] ;                                          06794000
COMMENT  CHECKS IF ID IS ON CAST FILE AND WHERE ;                       06795000
         BEGIN                                                          06796000
INTEGER       T ;                                                       06797000
LABEL         RET ;                                                     06798000
              IF MONITOG THEN WRITE(PRINT,MONITFORM,"FINDCA","STID  ") ;06799000
              FOR T ~ 1 STEP 1 UNTIL CASTLINKS[0] DO                    06800000
              IF CHAREQUAL(FIRSTCASTID[1],0,CASTDIR[CASTLINKS[T].[6:6] ,06801000
                  CASTLINKS[T].[12:6]],                                 06802000
              CASTLINKS[T].[18:6],FIRSTCASTID[0].[42:6]) AND            06803000
              FIRSTCASTID[0].[42:6]= CASTLINKS[T].[24:6] THEN           06804000
                  GO TO RET ;                                           06805000
              ERROR(3) ;                                                06806000
RET:          FINDCASTID ~ T ;                                          06807000
         END FINDCASTID ;                                               06808000
COMMENT DOCUMENT* 21 * * * * * * * * * * * * * * * * * * * * * * * * *; 06809000
PROCEDURE     PRINTCASTDIRECTORY ;                                      06810000
COMMENT  FORMATS AND PRINTS CAST DIRECTORY ;                            06811000
         BEGIN                                                          06812000
INTEGER       T,TEMP,IDCOUNT ;                                          06813000
FORMAT        DIRHEAD(X8,"CAST TAPE DIRECTORY") ;                       06814000
              IF MONITOG THEN WRITE(PRINT,MONITFORM,"PCASTD","IRECTR") ;06815000
              ZPG(ZF) ;                                                 06816000
              WRITE(ZAR[*],DIRHEAD) ;                                   06817000
              ZPL(ZF,2,ZAR) ;                                           06818000
              FOR T ~ 1 STEP 1 UNTIL CASTLINKS[0] DO                    06819000
         BEGIN                                                          06820000
              CLEAR(LISTBUFFER,14) ;                                    06821000
              TEMP ~ CASTLINKS[T].[30:18] ;                             06822000
              OCTTODEC(TEMP,LISTBUFFER[1]) ;                            06823000
              IDCOUNT ~ CASTLINKS[T].[24:6] ;                           06824000
              IF IDCOUNT ! 0 THEN                                       06825000
              MOVECHARS(CASTDIR[CASTLINKS[T].[6:6],CASTLINKS[T].[12:6]],06826000
                   LISTBUFFER[3],CASTLINKS[T].[18:6],0,IDCOUNT) ;       06827000
              ZPL(ZF,2,LISTBUFFER);                                     06828000
         END ;                                                          06829000
              CLEAR(LISTBUFFER,14) ;                                    06830000
              ZPG(ZF) ;                                                 06831000
         END PRINTCASTDIRECTORY ;                                       06832000
COMMENT DOCUMENT* 5 * * * * * * * * * * * * * * * * * * * * * * * * *   06833000
G. MAIN CROSS-REFERENCING PROCEDURES.                                   06834000
* END;                                                                  06835000
COMMENT DOCUMENT* 22 * * * * * * * * * * * * * * * * * * * * * * * *;   06836000
BOOLEAN PROCEDURE SORTSCRAMBLE ;                                        06837000
COMMENT  TRUE IF THIS IDENTIFIER SHOULD BE XREF-ED. IF NOT BIGTOG,      06838000
         CHECKS WHETHER ID IS ALREADY IN LIST, AND IF NOT ADDS IT ;     06839000
         BEGIN                                                          06840000
ALPHA         TT;                                                       06841000
INTEGER       PRESCOUNT,PRES,NEXT,LAST,CASE,NWORDS,SCRAM,MAXCOUNT ;     06842000
LABEL         LOOP,EXIT,MOVE ;                                          06843000
BOOLEAN       BOOL ;                                                    06844000
DEFINE        PRESI = PRES.[33:6],PRES.[39:9] # ,                       06845000
              LASTI = LAST.[33:6],LAST.[39:9] # ;                       06846000
              IF MONITOG THEN WRITE(PRINT,MONITFORM,"SORTSC","RAMBLE") ;06847000
              SCRAM ~ Q.[18:6] ; BOOL ~ FALSE ;                         06848000
              TALLIES[SCRAM] ~ TALLIES[SCRAM] + 1 ;                     06849000
              IF NOT DOCTOG THEN                                        06850000
              IF SCRAM < FIRSTCHAR OR SCRAM > LASTCHAR THEN GO TO EXIT ;06851000
              IF NUMONLYTOG AND RESULT ! 3 THEN GO TO EXIT ;            06852000
              IF NOT NAMETOG THEN                                       06853000
              IF FINDCHAR(NCR,":") OR FINDCHAR(NCR,"~") THEN            06854000
              LABELUSE ~TRUE ;                                          06855000
              IF ASSIGNTOG AND NOT LABELUSE THEN GO TO EXIT ;           06856000
              IF BNFTOG AND ASTERTOG THEN GO TO EXIT ;                  06857000
              TOTAL ~ TOTAL + 1 ;                                       06858000
              PROCFLAG2 ~ PROCFLAG;                                     06859000
              IF NOT IRPASS THEN                                        06860000
              IF BIGTOG THEN IF NOT NAMETOG THEN                        06861000
              IF NOT PROCFLAG THEN                                      06862000
         BEGIN                                                          06863000
              BOOL ~ TRUE;                                              06864000
              GO TO EXIT;                                               06865000
         END;                                                           06866000
              PRES ~ 0 ; NEXT ~ STACK[SCRAM] ;                          06867000
LOOP:         LAST ~ PRES ; PRES ~ NEXT ;                               06868000
              IF PRES = 0 THEN GO TO MOVE ;                             06869000
              NEXT ~ TABLE[PRESI].TABLINK ;                             06870000
              PRESCOUNT ~ TABLE[PRESI+1].[12:6] ;                       06871000
              MAXCOUNT ~ IF COUNT < PRESCOUNT THEN PRESCOUNT ELSE COUNT;06872000
              MAXCOUNT ~ PRESCOUNT ;                                    06873000
              IF CHAREQUAL(ACCUM[1],3,TABLE[PRESI+1],3,MAXCOUNT) THEN   06874000
         BEGIN                                                          06875000
              IF COUNT !PRESCOUNT THEN GO TO LOOP ;                     06876000
              IF PROCFLAG THEN                                          06877000
         BEGIN                                                          06878000
              IF TABLE[PRESI].PROCTAG ! 3 THEN                          06879000
              TABLE[PRESI].PROCTAG ~ TABLE[PRESI].PROCTAG + 1 ;         06880000
              IF RESTYPE ! PROCEDUREV THEN                              06881000
         BEGIN                                                          06882000
              PROCFLAG ~ FALSE ;                                        06883000
              PROCBLKFLAG ~ PROCDECFLAG ~ TRUE ;                        06884000
              NOPROC ~ NOPROC + 1 ;                                     06885000
         END ;                                                          06886000
         END ;                                                          06887000
              TABINDEX ~ PRES ; BOOL ~TRUE ; GO TO EXIT ;               06888000
         END ;                                                          06889000
              IF CHARGREAT(ACCUM[1],3,TABLE[PRESI+1],3,MAXCOUNT) THEN   06890000
                   GO TO LOOP ;                                         06891000
MOVE:                                                                   06892000
              IF NAMETOG THEN GO TO EXIT ;                              06893000
              IF ( PROCTOG AND NOT PROCFLAG) OR                         06894000
                 (BLOCKTOG AND NOT PROCFLAG) THEN GO TO EXIT ;          06895000
              NWORDS ~ IF COUNT { 5 THEN 1 ELSE ((COUNT-6) DIV 8 + 2 ) ;06896000
              IF PP.[39:9] + NWORDS + 1 > 511 THEN                      06897000
         BEGIN                                                          06898000
              PP.[33:6] ~ PP.[33:6] + 1 ; PP.[39:9] ~ 0 ;               06899000
         END ELSE PP ~ PP + 1 ;                                         06900000
              IF LAST = 0 THEN STACK[SCRAM] ~ PP                        06901000
                   ELSE TABLE[LASTI].TABLINK ~ PP ;                     06902000
              TABLE[RC] ~ PRES ;                                        06903000
              IF PROCFLAG THEN                                          06904000
         BEGIN                                                          06905000
              IF TABLE[RC].PROCTAG ! 3 THEN                             06906000
              TABLE[RC].PROCTAG ~ TABLE[RC].PROCTAG + 1 ;               06907000
              IF RESTYPE ! PROCEDUREV THEN                              06908000
         BEGIN                                                          06909000
              PROCFLAG ~ FALSE ;                                        06910000
              PROCBLKFLAG ~ PROCDECFLAG ~ TRUE ;                        06911000
              NOPROC ~ NOPROC + 1 ;                                     06912000
         END ;                                                          06913000
         END ;                                                          06914000
              TABINDEX ~ PP ;                                           06915000
              BOOL ~ TRUE ;                                             06916000
              MOVEWORDS(ACCUM[1],TABLE[RC+1],NWORDS) ;                  06917000
              CHARCOUNT ~ CHARCOUNT + COUNT;                            06918000
              IF BUILDEBUG THEN                                         06919000
         BEGIN                                                          06920000
              CLEAR(BUFFER,14) ;                                        06921000
              MOVEWORDS(ACCUM[1],BUFFER,NWORDS) ;                       06922000
              WRITE(PRINT[DBL],15,BUFFER[*]) ;                          06923000
         END ;                                                          06924000
              PP ~ PP + NWORDS ;                                        06925000
EXIT:         SORTSCRAMBLE ~ IF COUNTOG THEN FALSE ELSE BOOL ;          06926000
              PROCFLAG ~ (NOT XREFTOG) AND (RESTYPE = PROCEDUREV);      06927000
         END SORTSCRAMBLE ;                                             06928000
COMMENT DOCUMENT* 21 * * * * * * * * * * * * * * * * * * * * * * * * *; 06929000
PROCEDURE     PRINTNAMES ;                                              06930000
COMMENT  PRINTS STATISTICS AND LIST OF NAMES XREF-ED ;                  06931000
         BEGIN                                                          06932000
INTEGER       T,STACKLIM,COUNT,CHAROUT;                                 06933000
FORMAT        NUMFORM("NUMBER OF IDENTIFIERS = ",I5) ;                  06934000
FORMAT        FID("LIST OF IDENTIFIERS CROSS REFERENCED") ;             06935000
SWITCH FORMAT FTOTALS ~                                                 06936000
              ("TOTAL NUMBER OF POSSIBLE XREF ENTRIES =",I11),          06937000
              ("NUMBER OF WORDS REQUIRED BY SYMBOL TABLE =", I8),       06938000
              ("NUMBER OF XREF ENTRIES PRINTED BELOW =",I12),           06939000
              ("NUMBER OF CARDS CONTAINING XREFS =",I16),               06940000
              ("NUMBER OF CARD IMAGES SCANNED =",I19),                  06941000
              ("NUMBER OF BLANK SEQUENCE NUMBERS =", I16),              06942000
              ("NUMBER OF IDENTIFIERS =",I27),                          06943000
              ("NUMBER OF CHARACTERS IN SYMBOL TABLE =",I12)            06944000
              ;     COMMENT FORMAT FIELD LENGTH = 50;                   06945000
INTEGER       K;                                                        06946000
FORMAT                                                                  06947000
              FSCAN ("ELAPSED TIME", F8.2," MIN.   PROCESSOR TIME",     06948000
                   F8.2," SECS.");                                      06949000
SWITCH FORMAT FTALLIES ~                                                06950000
              ("NUMBER OF XREFS PER FIRST LETTER"),                     06951000
              (4(X2,"LETTER COUNT")),                                   06952000
              (4(X5,A1,I6,X2));                                         06953000
ARRAY         LTOTALS[0:10];                                            06954000
LIST          LTALLIES(FOR K ~I STEP 1 UNTIL I+3 DO [K,TALLIES[K]]);    06955000
LABEL         REDO,TERM,RET ;                                           06956000
              IF TOTAL = 0 THEN GO TO RET ;                             06957000
              IF MONITOG THEN WRITE(PRINT,MONITFORM,"PRINTN","AMES  ") ;06958000
              IF BIGTOG THEN GO TO TERM;                                06959000
              CLEAR(LISTBUFFER,14) ;                                    06960000
              ZPG(ZF) ;                                                 06961000
              ZPL (ZF,2,HEADING);                                       06962000
              WRITE(ZAR[*],FID) ;                                       06963000
                ZPL(ZF,2,ZAR);                                          06964000
              STACKLIM ~ IF ALPHATOG THEN 63 ELSE 125 ; NONAMES ~ 0 ;   06965000
              FOR T ~ 0 STEP 1 UNTIL STACKLIM DO                        06966000
         BEGIN                                                          06967000
              PP ~ STACK[T];                                            06968000
              IF PP = 0 THEN GO TO TERM ;                               06969000
              CLEAR(NAMEBUFF,14) ; CHAROUT ~ 0 ;                        06970000
REDO:         COUNT ~ TABLE[RC+1].[12:6] ;                              06971000
              IF CHAROUT + COUNT > 72 THEN                              06972000
         BEGIN                                                          06973000
              IF DOUBLEONLY THEN ZPL(ZF,2,NAMEBUFF) ELSE                06974000
              ZPL(ZF,1,NAMEBUFF);                                       06975000
              CLEAR(NAMEBUFF,14) ; CHAROUT ~ 0 ;                        06976000
         END ;                                                          06977000
              MOVECHARS(TABLE[RC+1],NAMEBUFF[CHAROUT.[41:4]],3,         06978000
                   CHAROUT.[45:3],COUNT) ;                              06979000
              CHAROUT ~ CHAROUT + COUNT + 1 ; NONAMES ~ NONAMES + 1 ;   06980000
              IF GLYNTOG THEN CHAROUT ~72 ;                             06981000
              PP ~ TABLE[RC].TABLINK ;                                  06982000
              IF PP !0 THEN GO TO REDO ;                                06983000
              IF DOUBLEONLY THEN ZPL(ZF,2,NAMEBUFF) ELSE                06984000
              ZPL(ZF,1,NAMEBUFF);                                       06985000
TERM:    END;                                                           06986000
              ZPG(ZF);                                                  06987000
              ZPL(ZF,1,BLANKARRAY);                                     06988000
              ZPL(ZF,2,HEADING);                                        06989000
              LTOTALS [0]~ TOTAL; LTOTALS[1]~ PR;                       06990000
              LTOTALS[2] ~ LASTSEQLINK; LTOTALS[3] ~LASTCURSEQ;         06991000
              LTOTALS[4] ~CARDTALLY; LTOTALS[6] ~ NONAMES;              06992000
              LTOTALS[5] ~(XREFSEQ - 99000000) DIV 1000;                06993000
              LTOTALS[7]~ CHARCOUNT;                                    06994000
              IF BIGTOG THEN FOR I ~ 0,4,5,6 DO                         06995000
         BEGIN                                                          06996000
              WRITE(ZAR[*],FTOTALS[I],LTOTALS[I]);                      06997000
              ZPL(ZF,ZSP,ZAR);                                          06998000
         END ELSE                                                       06999000
              FOR I ~ 0 STEP 1 UNTIL 7 DO                               07000000
         BEGIN                                                          07001000
              WRITE(ZAR[*],FTOTALS[I],LTOTALS[I]);                      07002000
              ZPL(ZF,ZSP,ZAR);                                          07003000
         END;                                                           07004000
              ZPL(ZF,1,BLANKARRAY);                                     07005000
              IF NOT REMOTETOG THEN                                     07006000
         BEGIN                                                          07007000
              WRITE(ZAR[*],FTALLIES[0]);                                07008000
              ZPL(ZF,ZSP,ZAR);                                          07009000
              WRITE(ZAR[*],FTALLIES[1]);                                07010000
              ZPL(ZF,ZSP,ZAR);                                          07011000
              FOR I ~ 0 STEP 4 UNTIL 60 DO                              07012000
         BEGIN                                                          07013000
              WRITE (ZAR[*],FTALLIES[2],LTALLIES);                      07014000
              ZPL(ZF,ZSP,ZAR);                                          07015000
         END;                                                           07016000
              WRITE(ZAR[*],FSCAN, (TIME(1)-STARTIME)/3600.0,            07017000
                    (TIME(2)-PROCTIME)/60.0);                           07018000
              ZPL(ZF,2,ZAR);                                            07019000
         END;                                                           07020000
RET:                                                                    07021000
         END PRINTNAMES ;                                               07022000
COMMENT DOCUMENT* 21 * * * * * * * * * * * * * * * * * * * * * * * * *; 07023000
PROCEDURE     BEGINCOUNT ;                                              07024000
COMMENT  COUNTS BEGINS AND SAVES SEQ NO. TO PRINT WITH MATCHING END ;   07025000
         BEGIN                                                          07026000
              IF MONITOG THEN WRITE(PRINT,MONITFORM,"BEGINC","OUNT  ") ;07027000
              BEGINDEX ~ BEGINDEX + 1 ;                                 07028000
              MOVEWORDS(SEQ,PAIRSEQ[BEGIND],1) ;                        07029000
         END BEGINCOUNT ;                                               07030000
COMMENT DOCUMENT* 21 * * * * * * * * * * * * * * * * * * * * * * * * *; 07031000
PROCEDURE     PRINTPROCEDUREIDS ;                                       07032000
COMMENT  PRINTS LIST OF PROCEDURES ;                                    07033000
         BEGIN                                                          07034000
INTEGER       T,TT,T1,T2,SAVEPP,CLASS ;                                 07035000
LABEL         TERM,MORE ;                                               07036000
FORMAT        HEAD(X24,"LISTING OF PROCEDURE IDENTIFIERS") ;            07037000
              IF MONITOG THEN WRITE(PRINT,MONITFORM,"PPROCE","DURIDS") ;07038000
              ZPG(ZF) ;                                                 07039000
              ZPL(ZF,2,HEADING);                                        07040000
              WRITE(ZAR[*],HEAD);                                       07041000
              ZPL(ZF,2,ZAR);                                            07042000
              SAVEPP ~ PP ;                                             07043000
              FOR T ~ 0 STEP 1 UNTIL 63 DO                              07044000
         BEGIN                                                          07045000
              PP ~ STACK[T] ;                                           07046000
              IF PP = 0 THEN GO TO TERM ;                               07047000
MORE:         CLEAR(LISTBUFFER,14) ;                                    07048000
              CLASS ~ TABLE[RC].PROCTAG ;                               07049000
              IF CLASS ! 0 THEN                                         07050000
         BEGIN                                                          07051000
              MOVECHARS(TABLE[RC+1],LISTBUFFER[5],3,0,                  07052000
                    TABLE[RC+1].[12:6] ) ;                              07053000
              TT ~ TABLE[RC].PROCTAG ;                                  07054000
              MOVECHARS(TT,LISTBUFFER[4],7,4,1) ;                       07055000
              T1 ~ TABLE[RC].[3:15] ;                                   07056000
              T2 ~ SEQLINKS[T1.[33:6],T1.[39:9]].[33:15] ;              07057000
              MOVECHARS(CURSEQ[T2.[33:6],T2.[39:9]],LISTBUFFER[3],      07058000
                  0,0,8);                                               07059000
              ZPL(ZF,1,LISTBUFFER);                                     07060000
         END ;                                                          07061000
              PP ~ TABLE[RC].TABLINK ;                                  07062000
              IF PP ! 0 THEN GO TO MORE ;                               07063000
TERM:    END ;                                                          07064000
              PP ~ SAVEPP ;                                             07065000
         END PRINTPROCEDUREIDS ;                                        07066000
COMMENT DOCUMENT* 21 * * * * * * * * * * * * * * * * * * * * * * * * *; 07067000
PROCEDURE     ENDCOUNT ;                                                07068000
COMMENT COUNTS DOWN BEGINS AND WRITES SEQ OF BEGIN FOR THIS END ;       07069000
         BEGIN                                                          07070000
INTEGER       TEMP ;                                                    07071000
LABEL         RET ;                                                     07072000
              IF MONITOG THEN WRITE(PRINT,MONITFORM,"ENDCOU","NT    ") ;07073000
              IF BEGINDEX = 0 THEN                                      07074000
         BEGIN                                                          07075000
              IF LISTOG THEN                                            07076000
              DOCERROR(27) ; GO TO RET ;                                07077000
         END;                                                           07078000
              IF LISTOG AND NOT BLANKNEWSEQ THEN                        07079000
         BEGIN                                                          07080000
              CLEAR(LISTBUFFER,14) ;                                    07081000
              IF REMOTETOG THEN                                         07082000
              MOVEWORDS(PAIRSEQ[BEGIND],LISTBUFFER[8],1) ELSE           07083000
              MOVEWORDS(PAIRSEQ[BEGIND],LISTBUFFER[10],1) ;             07084000
              ZPL(ZF,2,LISTBUFFER);                                     07085000
         END ;                                                          07086000
              BEGINDEX ~ BEGINDEX - 1 ;                                 07087000
              IF STREAMBODY AND STREAMBEGCOUNT = BEGINDEX THEN          07088000
                  STREAMBODY ~ FALSE ;                                  07089000
RET:                                                                    07090000
         END ENDCOUNT ;                                                 07091000
COMMENT DOCUMENT* 23 * * * * * * * * * * * * * * * * * * * * * * * ;    07092000
PROCEDURE     BUILDXREF ;                                               07093000
COMMENT  ADDS CURRENT SEQUENCE NUMBER TO LINKED LIST OF XREF ENTRIES    07094000
         FOR THIS IDENTIFIER, OR (IF BIGTOG) WRITES A RECORD OF THE     07095000
         IDENTIFIER PLUS THE SEQ NO. ON A DISK FILE TO BE LATER SORTED; 07096000
         BEGIN                                                          07097000
BOOLEAN       SEQADDFLAG ;                                              07098000
LABEL         RETURN ;                                                  07099000
              IF MONITOG THEN WRITE(PRINT,MONITFORM,"BUILDX","REF   ") ;07100000
              IF FLOWTOG OR DOCINDEXTOG THEN                            07101000
         BEGIN                                                          07102000
              MOVEWORDS(SEQ,FLOWSEQ,1) ;                                07103000
              CLEAR(SEQ,0);                                             07104000
              IF LEFTPAGE THEN                                          07105000
         BEGIN                                                          07106000
              MOVECHARS (PAGENUM[7], SEQ, 10-PAGECHAR,0,6);             07107000
              MOVECHARS (PAGENUM[7],SEQ,16-PAGECHAR, 8-PAGECHAR,        07108000
              PAGECHAR);                                                07109000
         END ELSE                                                       07110000
         BEGIN                                                          07111000
              MOVECHARS (PAGENUM[7], SEQ, 10, 0,6);                     07112000
              MOVECHARS (PAGENUM[7], SEQ, 10-PAGECHAR,0,PAGECHAR);      07113000
         END ;                                                          07114000
         END ;                                                          07115000
              IF BIGTOG THEN                                            07116000
         BEGIN                                                          07117000
              CLEAR(XREFBUFF,9) ;                                       07118000
              IF COUNT > MAXCOUNTER THEN MAXCOUNTER ~ COUNT ;           07119000
              MOVECHARS(ACCUM[1],XREFBUFF,3,0,COUNT) ;                  07120000
              MOVEWORDS(SEQ,XREFBUFF[9],1) ;                            07121000
              XREFBUFF[8] ~ IF PROCDECFLAG OR LABELUSE THEN             07122000
                  -COUNT ELSE COUNT ;                                   07123000
              WRITE(XREFILE,10,XREFBUFF[*]) ;                           07124000
              IF NOT PROCFLAG2 THEN                                     07125000
              GO TO RETURN ;                                            07126000
         END ;                                                          07127000
              IF SEQCOMP(SEQ,CURSEQ[LASTCURIND]) ! 2 THEN               07128000
         BEGIN                                                          07129000
              LASTCURSEQ ~ LASTCURSEQ + 1 ;                             07130000
              MOVEWORDS(SEQ,CURSEQ[LASTCURIND],1) ;                     07131000
              IF NAMEPUNCH AND NOT PUNCHTOG THEN                        07132000
         BEGIN                                                          07133000
              IF BLANKNAMEPUNCH THEN CLEAR(JUNKARRAY,8) ELSE            07134000
              MOVEWORDS(GLOBE,JUNKARRAY,9) ;                            07135000
              MOVEWORDS(SEQ,JUNKARRAY[9],1) ;                           07136000
              WRITE(PNCH,10,JUNKARRAY[*]) ;                             07137000
         END ;                                                          07138000
         END ;                                                          07139000
              SEQADDFLAG ~ TRUE ;                                       07140000
              LASTSEQLINK ~ LASTSEQLINK + 1 ;                           07141000
              IF LASTSEQLINK > 32000 THEN                               07142000
         BEGIN                                                          07143000
FORMAT        TOOMANY("TOO MANY XREF ENTRIES > 32000") ;                07144000
              WRITE(PRINT[DBL],TOOMANY) ;                               07145000
              GO TO EOFCARD ;                                           07146000
         END ;                                                          07147000
              IF LISTHEAD =0 THEN                                       07148000
         BEGIN                                                          07149000
              LISTHEAD ~ LASTSEQLINK ;                                  07150000
              LISTTAIL ~ LASTSEQLINK ;                                  07151000
              TEMPIND ~ LISTHEAD ;                                      07152000
              LOADCOUNT ~ 1 ;                                           07153000
         END ELSE                                                       07154000
         BEGIN                                                          07155000
              TEMPIND ~ LISTTAIL ;                                      07156000
              SEQADDFLAG ~ SEQCOMP(CURSEQ[(SEQPOINTER).[33:6],          07157000
                                          (SEQPOINTER).[39:9]],SEQ) ! 2;07158000
              NEXTSEQLINK ~ LASTSEQLINK ;                               07159000
              LISTTAIL ~ LASTSEQLINK ;                                  07160000
              TEMPIND ~ LISTHEAD ;                                      07161000
              IF (NOT LOGICTOG) OR (LOGICTOG AND SEQADDFLAG) THEN       07162000
              LOADCOUNT ~ LOADCOUNT + 1 ;                               07163000
         END ;                                                          07164000
              IF BSTICKFLAG THEN LOADCOUNT ~ LOADCOUNT + 1 ;            07165000
              TEMPIND ~ LASTSEQLINK ;                                   07166000
              NEXTSEQLINK ~ 0 ;                                         07167000
              SEQPOINTER ~ LASTCURSEQ ;                                 07168000
              SEQPROCPOINT ~ IF PROCDECFLAG OR LABELUSE THEN 1 ELSE 0 ; 07169000
RETURN:                                                                 07170000
              PROCDECFLAG ~ FALSE ;                                     07171000
              IF FLOWTOG OR DOCINDEXTOG THEN MOVEWORDS(FLOWSEQ,SEQ,1);  07172000
         END BUILDXREF ;                                                07173000
COMMENT DOCUMENT* 22 * * * * * * * * * * * * * * * * * * * * * * * * ;  07174000
PROCEDURE     SORTITONDISK ;                                            07175000
COMMENT  USED TO SORT ON DISK WHEN "LARGE" IS USED (BIGTOG=TRUE) ;      07176000
         BEGIN                                                          07177000
DEFINE        FI = XREFILE # , FO = XREFSORT # ;                        07178000
INTEGER STREAM PROCEDURE E(A,B,N) ;                                     07179000
VALUE         N ;                                                       07180000
         BEGIN                                                          07181000
              SI ~ A ; DI ~ B ; IF N SC = DC THEN TALLY ~ 2 ELSE        07182000
         BEGIN                                                          07183000
              SI ~ A ; DI ~ B ; IF N SC < DC THEN TALLY ~ 1             07184000
         END ;                                                          07185000
              E ~ TALLY ;                                               07186000
         END E ;                                                        07187000
BOOLEAN PROCEDURE CMP(A,B) ;                                            07188000
ARRAY         A,B[0] ;                                                  07189000
              CMP ~ IF IJUNK ~ E(A,B,MAXCOUNTER) ! 2 THEN               07190000
              BOOLEAN(IJUNK) ELSE E(A[9],B[9],8) ! 0 ;                  07191000
PROCEDURE     HV(A) ;                                                   07192000
ARRAY         A[0] ;                                                    07193000
         BEGIN                                                          07194000
STREAM PROCEDURE P(A,B) ;                                               07195000
VALUE         B ;                                                       07196000
         BEGIN                                                          07197000
              DI ~ A ; SI ~ LOC B ; SI ~ SI + 7 ;                       07198000
              8(DS ~ CHR ; SI ~ SI - 1 ) ;                              07199000
              SI ~ A ; DS ~ 9 WDS ;                                     07200000
         END P ;                                                        07201000
              P(A,12) ;                                                 07202000
         END HV ;                                                       07203000
PROCEDURE     OUTPROC(BOOL,A) ;                                         07204000
VALUE         BOOL ;                                                    07205000
ARRAY         A[*] ;                                                    07206000
BOOLEAN       BOOL ;                                                    07207000
         BEGIN                                                          07208000
LABEL         EXIT ;                                                    07209000
INTEGER       I ;                                                       07210000
OWN INTEGER      LLSEQ,LSEQ ;                                           07211000
              BIGTOG ~ FALSE ;                                          07212000
              IF BOOL THEN                                              07213000
         BEGIN                                                          07214000
              REWIND(FO) ; GO TO EXIT ;                                 07215000
         END ;                                                          07216000
              WRITE(FO,10,A[*]) ;                                       07217000
              IF SORTBUG THEN WRITE(LINE,10,A[*]) ;                     07218000
              IF (ABS(A[8]) ! COUNT OR                                  07219000
              ( NOT CHAREQUAL(A,0,ACCUM[1],3,COUNT))) THEN              07220000
         BEGIN                                                          07221000
              LLSEQ ~ 0 ;                                               07222000
              STCOUNT ~ 1 ;                                             07223000
              ACCUM[1] ~ "      " ;                                     07224000
              COUNT ~ ABS(A[8]) ;                                       07225000
              MOVECHARS(A,ACCUM[1],0,3,COUNT) ;                         07226000
              MOVECHARS(A[8],ACCUM[1],7,2,1) ;                          07227000
              MOVEWORDS(A[9],SEQ,1) ;                                   07228000
              Q ~ ACCUM[1] ;                                            07229000
              IF SORTSCRAMBLE THEN Q ~ Q ;                              07230000
         END ELSE                                                       07231000
          BEGIN                                                         07232000
              DECTOOCT(A[9],LSEQ) ;                                     07233000
              IF LLSEQ !LSEQ THEN STCOUNT ~ STCOUNT  + 1 ;              07234000
              LLSEQ ~LSEQ ;                                             07235000
         END ;                                                          07236000
EXIT:                                                                   07237000
              IF STCOUNT ! 0 THEN LISTTAIL ~ STCOUNT ;                  07238000
         END OUTPROC ;                                                  07239000
              IF MAKEIRTOG THEN                                         07240000
         BEGIN                                                          07241000
              COUNT ~ 0 ; ACCUM[1] ~ 0 ; PP ~0 ;                        07242000
              FOR I ~ 0 STEP 1 UNTIL 63 DO STACK[I] ~ 0 ;               07243000
SORT(OUTPROC,FI,0,HV,CMP,10,CORESIZE,1200000) ;                         07244000
              IRPASS ~ TRUE ;                                           07245000
                   BIGTOG ~ TRUE ;                                      07246000
         END ELSE                                                       07247000
SORT(FO,FI,0,HV,CMP,10,CORESIZE,1200000) ;                              07248000
         END SORTITONDISK ;                                             07249000
COMMENT DOCUMENT* 22 * * * * * * * * * * *** * * * * * * * * * * * * ;  07250000
PROCEDURE     PRINTXREF ;                                               07251000
COMMENT  FORMATS AND PRINTS XREF ENTRIES FROM LINKED LIST OR (IF BIGTOG)07252000
         FROM SORTED DISK FILE XREFSORT ;                               07253000
         BEGIN                                                          07254000
INTEGER       T,STACKLIM,COUNT,CHAROUT ;                                07255000
INTEGER       SCHAR ;                                                   07256000
LABEL         REDO,MORE,TERM,RET ;                                      07257000
FORMAT        XREFHEAD("IDENTIFIER CROSS REFERENCE LIST") ,             07258000
              FXREFHEAD("FLOW CHART LABEL IDENTIFIERS CROSS",           07259000
                   " REFERENCE LIST") ,                                 07260000
              DXREFHEAD("DOCUMENT CONTROLS AND DEFINES CROSS REFERENCE",07261000
                     " LIST") ;                                         07262000
              IF TOTAL = 0 THEN GO TO RET ;                             07263000
              IF MONITOG THEN WRITE(PRINT,MONITFORM,"PRINTX","REF   ") ;07264000
              PR ~ PP;                                                  07265000
              IF FLOWTOG THEN                                           07266000
         BEGIN                                                          07267000
              SAVEREMOTETOG ~ REMOTETOG ; REMOTETOG ~TRUE ;             07268000
              HOLDFLOW ~ TRUE; FLOWTOG ~ FALSE;                         07269000
         END ;                                                          07270000
              IF MAKEIRTOG THEN                                         07271000
         BEGIN                                                          07272000
              NEWMAKEIRFILE ;                                           07273000
         END ;                                                          07274000
              MAXCOLS ~ IF REMOTETOG THEN 68 ELSE 118 ;                 07275000
              IF DOCINDEXTOG THEN MAXCOLS~ 68;                          07276000
              CLEAR(LISTBUFFER,14) ;                                    07277000
              ZPG(ZF); IF NOT HOLDFLOW THEN ZPL(ZF,2,HEADING) ELSE      07278000
              NEWDOCPAGE;                                               07279000
              IF NOT HOLDFLOW THEN                                      07280000
              IF NOT DOCINDEXTOG THEN                                   07281000
              IF DOCINDEXTOG THEN WRITE(ZAR[*],XREFHEAD) ELSE           07282000
              IF DOCTOG THEN WRITE(ZAR[*],DXREFHEAD) ELSE               07283000
              IF HOLDFLOW THEN WRITE (ZAR[*],FXREFHEAD) ELSE            07284000
              WRITE(ZAR[*],XREFHEAD) ;                                  07285000
              ZPL(ZF,2,ZAR);                                            07286000
              STACKLIM ~ IF ALPHATOG THEN 63 ELSE 125 ;                 07287000
              IF BIGTOG THEN                                            07288000
         BEGIN                                                          07289000
LABEL         REDO,EOF,MORE ;                                           07290000
ARRAY         LASTREC[0:15] ;                                           07291000
              REWIND(XREFSORT) ;                                        07292000
              READ(XREFSORT,10,XREFBUFF[*])[EOF] ;                      07293000
              NONAMES ~ 0;                                              07294000
REDO:         CLEAR(NAMEBUFF,14) ;                                      07295000
              NONAMES ~ NONAMES +1;                                     07296000
              COUNT ~ ABS(XREFBUFF[8]) ;                                07297000
              MOVECHARS(XREFBUFF[0],NAMEBUFF,0,0,COUNT);                07298000
              IF DOCINDEXTOG THEN                                       07299000
         BEGIN                                                          07300000
              IF DOUBLETOG THEN                                         07301000
              ZPL(ZF,1,BLANKARRAY);                                     07302000
         END ELSE                                                       07303000
              ZPL(ZF,2,BLANKARRAY);                                     07304000
              CHAROUT ~ COUNT + 2 ;                                     07305000
              SCHAR~ CHAROUT ~(((COUNT+10) DIV 10)+1)|10 ;              07306000
MORE:                                                                   07307000
              MOVECHARS(XREFBUFF[9]      ,NAMEBUFF[CHAROUT.[41:4]],0,   07308000
                      CHAROUT.[45:3],8) ;                               07309000
              IF XREFBUFF[8] < 0 THEN                                   07310000
         BEGIN                                                          07311000
              SETCHAR(NAMEBUFF[(CHAROUT-1).[41:4]],(CHAROUT-1).[45:3],  07312000
                  "*") ;                                                07313000
              SETCHAR(NAMEBUFF[(CHAROUT+8).[41:4]],(CHAROUT+8).[45:3],  07314000
                    "*") ;                                              07315000
         END ;                                                          07316000
              CHAROUT ~ CHAROUT + 10 ;                                  07317000
              IF CHAROUT > MAXCOLS THEN                                 07318000
         BEGIN                                                          07319000
              ZPL(ZF,1,NAMEBUFF);                                       07320000
              CLEAR(NAMEBUFF,14) ; CHAROUT ~ SCHAR ;                    07321000
         END ;                                                          07322000
              MOVEWORDS(XREFBUFF,LASTREC,10) ;                          07323000
              READ(XREFSORT,10,XREFBUFF[*])[EOF] ;                      07324000
              IF NOT EQUAL(XREFBUFF,LASTREC,MAXCOUNTER) THEN            07325000
         BEGIN                                                          07326000
              IF CHAROUT ! SCHAR THEN                                   07327000
              ZPL(ZF,1,NAMEBUFF);                                       07328000
              GO TO REDO ;                                              07329000
         END ;                                                          07330000
              GO TO MORE ;                                              07331000
EOF:                                                                    07332000
              IF CHAROUT ! SCHAR THEN                                   07333000
              ZPL(ZF,1,NAMEBUFF);                                       07334000
         BEGIN                                                          07335000
FILE          XREFILE DISK SERIAL          (2,10,30,SAVE 10) ;          07336000
              REWIND(XREFSORT) ; REWIND(XREFILE) ;                      07337000
              READ(XREFSORT,10,XREFBUFF[*]) ; CLOSE(XREFSORT,PURGE) ;   07338000
              READ(XREFILE ,10,XREFBUFF[*]) ; CLOSE(XREFILE ,PURGE) ;   07339000
         END ;                                                          07340000
         END ELSE                                                       07341000
              FOR T ~0 STEP 1 UNTIL STACKLIM DO                         07342000
         BEGIN                                                          07343000
              ISEQ ~ T;                                                 07344000
              TABINDEX ~ PP ~ STACK[T] ;                                07345000
              IF PP = 0 THEN GO TO TERM ;                               07346000
REDO:         CLEAR(NAMEBUFF,14) ;                                      07347000
              COUNT ~ TABLE[RC+1].[12:6] ;                              07348000
              MOVECHARS(TABLE[RC+1],NAMEBUFF,3,0,COUNT);                07349000
              IF DOCINDEXTOG THEN                                       07350000
         BEGIN                                                          07351000
              IF DOUBLETOG THEN                                         07352000
              ZPL(ZF,1,BLANKARRAY);                                     07353000
         END ELSE                                                       07354000
              ZPL(ZF,2,BLANKARRAY);                                     07355000
              TEMPIND ~ LISTHEAD ;                                      07356000
              CHAROUT ~ COUNT + 2 ;                                     07357000
              SETCHAR(NAMEBUFF[CHAROUT DIV 8],CHAROUT.[45:3],"(") ;     07358000
              IJUNK ~ SEQLINKS[SEQIND].[3:15] ;                         07359000
              OCTTODEC(IJUNK,JUNK) ;                                    07360000
              CHAROUT ~CHAROUT + 1 ;                                    07361000
             MOVECHARS(JUNK,NAMEBUFF[CHAROUT DIV 8],2,CHAROUT.[45:3],6);07362000
              CHAROUT ~ CHAROUT + 6 ;                                   07363000
              SETCHAR(NAMEBUFF[CHAROUT DIV 8],CHAROUT.[45:3],")") ;     07364000
              SCHAR~ CHAROUT ~(((COUNT+10) DIV 10)+1)|10 ;              07365000
MORE:         TAMPIND ~ SEQLINKS[SEQIND].[33:15] ;                      07366000
              MOVECHARS(CURSEQ[CURSEQIND],NAMEBUFF[CHAROUT.[41:4]],0,   07367000
                      CHAROUT.[45:3],8) ;                               07368000
              IF SEQPROCPOINT = 1 THEN                                  07369000
         BEGIN                                                          07370000
              SETCHAR(NAMEBUFF[(CHAROUT-1).[41:4]],(CHAROUT-1).[45:3],  07371000
                  "*") ;                                                07372000
              SETCHAR(NAMEBUFF[(CHAROUT+8).[41:4]],(CHAROUT+8).[45:3],  07373000
                    "*") ;                                              07374000
         END ;                                                          07375000
              CHAROUT ~ CHAROUT + 10 ;                                  07376000
              IF CHAROUT > MAXCOLS THEN                                 07377000
         BEGIN                                                          07378000
              ZPL(ZF,1,NAMEBUFF);                                       07379000
              CLEAR(NAMEBUFF,14) ; CHAROUT ~ SCHAR ;                    07380000
         END ;                                                          07381000
              TEMPIND ~ NEXTSEQLINK ;                                   07382000
              IF TEMPIND = 0 THEN                                       07383000
         BEGIN                                                          07384000
              IF CHAROUT ! SCHAR THEN                                   07385000
              ZPL(ZF,1,NAMEBUFF);                                       07386000
              TABINDEX ~ PP ~ TABLE[RC].TABLINK ;                       07387000
              IF PP ! 0 THEN GO TO REDO ELSE GO TO TERM ;               07388000
         END ;                                                          07389000
              GO TO MORE ;                                              07390000
TERM:    END ;                                                          07391000
RET:                                                                    07392000
              FLOWTOG ~ HOLDFLOW;                                       07393000
              HOLDFLOW ~ FALSE ;                                        07394000
              IF FLOWTOG THEN REMOTETOG ~ SAVEREMOTETOG ;               07395000
         END PRINTXREF ;                                                07396000
COMMENT DOCUMENT* 22 * * * * * * * * * * * * ** * * * * * * * * * * ;   07397000
BOOLEAN PROCEDURE SEARCHRESERVED ;                                      07398000
COMMENT  TRUE IF Q SHOULD NOT BE XREF-ED BECAUSE IT IS A RESERVED WORD. 07399000
         ALSO SETS RESTYPE TO SHOW WHAT CLASS THAT WORD IS ;            07400000
         BEGIN                                                          07401000
INTEGER       NEXT ;                                                    07402000
LABEL         LOOP,EXIT,CONT,BUILD,FOUND ;                              07403000
LABEL         MORE ;                                                    07404000
              RESTYPE ~ 0; IF RESERVEDTOG THEN                          07405000
              IF NOT FORTRTOG THEN                                      07406000
              IF NOT ( Q = "7COMME" OR Q = "9PROCE" OR Q = "6STREA"     07407000
               OR Q = "4WITH ") THEN                                    07408000
         BEGIN                                                          07409000
              SEARCHRESERVED ~ FALSE;                                   07410000
              GO TO EXIT;                                               07411000
         END;                                                           07412000
              NEXT ~ RESTACK[Q.[18:6]] ;                                07413000
              IF ASMLTOG AND NOT (FLOWTOG OR DOCTOG)THEN                07414000
         BEGIN                                                          07415000
              SEARCHRESERVED ~ FALSE ; GO TO EXIT ;                     07416000
         END ;                                                          07417000
              GO TO MORE ;                                              07418000
LOOP:         NEXT ~ RESERVED[NEXT].TABLINK ;                           07419000
MORE:                                                                   07420000
              IF NEXT = 0 THEN                                          07421000
         BEGIN                                                          07422000
BUILD:        SEARCHRESERVED ~FALSE ; GO TO EXIT ;                      07423000
         END ;                                                          07424000
CONT:         IF RESERVED[NEXT+1] ! Q THEN GO TO LOOP ;                 07425000
              IF COUNT { 5 THEN GO TO FOUND ;                           07426000
              IF NOT EQUAL(RESERVED[NEXT+2],ACCUM[2],COUNT-5) THEN      07427000
                   GO TO LOOP ;                                         07428000
FOUND:        SEARCHRESERVED ~TRUE ;                                    07429000
              RESTYPE ~ RESERVED[NEXT].TYPLINK ;                        07430000
EXIT:                                                                   07431000
         END SEARCHRESERVED ;                                           07432000
COMMENT DOCUMENT* 5 * * * * * * * * * * * * * * * * * * * * * * * * *   07433000
H. PROCEDURES TO MAKE AN IR FILE FROM XREF FACTS.                       07434000
* END;                                                                  07435000
COMMENT DOCUMENT* 23 * * * * * * * * * * * * * * * * * * * * * * * * *; 07436000
PROCEDURE     ARRAYTOIRFILE(A,UB) ;                                     07437000
VALUE         UB ; INTEGER UB ;                                         07438000
ARRAY         A[0]  ;                                                   07439000
COMMENT  SPLITS ARRAY A INTO 10 WORD RECORDS, WRITES THEM ON IRFILE;    07440000
         BEGIN                                                          07441000
ARRAY         TEMP[0:15] ;                                              07442000
INTEGER       I,J,K,N ;                                                 07443000
              J ~ (UB+1) DIV 10 ;                                       07444000
              K ~ (UB+1) MOD 10 ;                                       07445000
              N ~ (J|10) - 10 ;                                         07446000
              FOR I ~ 0  STEP 10 UNTIL N DO                             07447000
         BEGIN                                                          07448000
              MOVEWORDS(A[I],TEMP[0] , 10) ;                            07449000
              IF IRBUG THEN WRITE(LINE,10,TEMP[*]) ;                    07450000
              WRITE(IRFILE,10,TEMP[*]) ;                                07451000
         END ;                                                          07452000
              IF K !0 THEN                                              07453000
         BEGIN                                                          07454000
              CLEAR(TEMP,9) ;                                           07455000
              MOVEWORDS(A[I],TEMP,K) ;                                  07456000
              IF IRBUG THEN WRITE(LINE,10,TEMP[*]) ;                    07457000
              WRITE(IRFILE,10,TEMP[*]) ;                                07458000
         END ;                                                          07459000
         END ARRAYTOIRFILE ;                                            07460000
COMMENT DOCUMENT* 21 * * * * * * * * * * * * * * * * * * * * * * * * ;  07461000
PROCEDURE     MAKEIRFILE ;                                              07462000
COMMENT  MAKES IR FILE FROM XREF-CREATED TABLES OF NAMES AND ENTRIES;   07463000
         BEGIN                                                          07464000
LABEL         REDO,MORE,TERM ;                                          07465000
INTEGER       I,PP,T,COUNT,IRINDEX,SIRINDEX,TCOUNT ;                    07466000
ARRAY         IR[0:15] ;                                                07467000
              WRITE(IRFILE,10,IR[*]) ;                                  07468000
              CLEAR(IR,14) ;                                            07469000
              IRINDEX ~ 1 ;                                             07470000
              FOR T ~0 STEP 1 UNTIL 63 DO                               07471000
         BEGIN                                                          07472000
              TABINDEX ~ PP ~ STACK[T] ;                                07473000
              IF PP = 0 THEN GO TO TERM ;                               07474000
REDO:                                                                   07475000
              COUNT ~ TABLE[RC+1].[12:6] ;                              07476000
              TEMPIND ~ LISTHEAD ;                                      07477000
              IJUNK ~ SEQLINKS[SEQIND].[3:15] ;                         07478000
              TCOUNT ~ IJUNK ;                                          07479000
              OCTTODEC(IJUNK,JUNK) ;                                    07480000
             CLEAR(IR,14) ; SIRINDEX ~ IR[0] ~ IRINDEX ;                07481000
              IR[1] ~ IJUNK ; IR[2] ~ COUNT ;                           07482000
              WRITE(IRFILE,10,IR[*]) ;                                  07483000
              CLEAR(IR,14) ; IRINDEX ~IRINDEX + 1 ; I ~ 0 ;             07484000
              IR[1] ~"      " ;                                         07485000
              MOVECHARS(TABLE[RC+1],IR[1],3,3,COUNT) ;                  07486000
              WRITE(IRFILE,10,IR[*]) ; CLEAR(IR,14);                    07487000
              IRINDEX ~ IRINDEX + 1 ;                                   07488000
MORE:         TAMPIND ~ SEQLINKS[SEQIND].[33:15] ;                      07489000
              MOVEWORDS(CURSEQ[CURSEQIND],IR[I],1) ;                    07490000
              I ~ I + 1 ;                                               07491000
              IF I > 9 THEN                                             07492000
         BEGIN                                                          07493000
              WRITE(IRFILE,10,IR[*]);                                   07494000
              I ~0 ; IRINDEX ~ IRINDEX +1 ; CLEAR(IR,14) ;              07495000
         END ;                                                          07496000
              TEMPIND ~ NEXTSEQLINK ;                                   07497000
              IF TEMPIND = 0 THEN                                       07498000
         BEGIN                                                          07499000
              IF I ! 0 THEN                                             07500000
         BEGIN                                                          07501000
              WRITE(IRFILE,10,IR[*]) ;                                  07502000
              IRINDEX ~ IRINDEX + 1 ;                                   07503000
         END ;                                                          07504000
              LISTTAIL ~ TCOUNT ;                                       07505000
              LISTHEAD ~ SIRINDEX ;                                     07506000
              TABINDEX ~      TABLE[RC].TABLINK ;                       07507000
              PP ~ TABINDEX ;                                           07508000
              IF PP ! 0 THEN GO TO REDO ELSE GO TO TERM ;               07509000
         END ;                                                          07510000
              GO TO MORE ;                                              07511000
TERM:    END ;                                                          07512000
              SIRINDEX ~ IRINDEX ;                                      07513000
              I ~ TABLEUPPERBOUND ;                                     07514000
              T ~ ( I DIV 512 ) ;                                       07515000
              FOR I ~ 0 STEP 1 UNTIL T DO                               07516000
              ARRAYTOIRFILE(TABLE[I,*],511) ;                           07517000
              ARRAYTOIRFILE(STACK,63) ;                                 07518000
              REWIND(IRFILE) ;                                          07519000
              IR[0] ~ SIRINDEX ; IR[1] ~ T ;                            07520000
              WRITE(IRFILE,10,IR[*]) ;                                  07521000
              LOCK(IRFILE,RELEASE) ;                                    07522000
         END MAKEIRFILE ;                                               07523000
PROCEDURE     NEWMAKEIRFILE ;                                           07524000
         BEGIN                                                          07525000
LABEL         EOF,MORE ;                                                07526000
INTEGER       IRINDEX,TCOUNT,I,T ;                                      07527000
INTEGER       SIRINDEX ;                                                07528000
ARRAY         IR,A,LA[0:15] ;                                           07529000
              CLEAR(A,9) ; CLEAR(IR,9) ;                                07530000
              CLEAR(LA,9) ;                                             07531000
              IR[12]~ "IR" ; LA[12] ~ "LA" ; A[12]~ "SORTIN" ;          07532000
              WRITE(IRFILE,10,IR[*]) ;                                  07533000
              IRINDEX ~ 2 ;                                             07534000
              COUNT ~ I ~ 0 ;                                           07535000
              WRITE(IRFILE,10,IR[*]) ;                                  07536000
              REWIND(XREFSORT) ;                                        07537000
MORE:                                                                   07538000
              MOVEWORDS(A,LA,10) ;                                      07539000
              READ(XREFSORT,10,A[*])[EOF] ;                             07540000
              IF IRBUG THEN WRITE(LINE,10,A[*]) ;                       07541000
              IF WORDEQUAL(LA,A,8)AND WORDEQUAL(LA[9],A[9],1)           07542000
              THEN GO TO MORE ;                                         07543000
              IF (ABS(A[8]) ! COUNT OR                                  07544000
              (NOT CHAREQUAL(A,0,ACCUM[1],3,COUNT))) THEN               07545000
         BEGIN                                                          07546000
              IF I ! 0 THEN                                             07547000
         BEGIN                                                          07548000
              IF IRBUG THEN WRITE(LINE,10,IR[*]) ;                      07549000
              WRITE(IRFILE,10,IR[*]) ;                                  07550000
              IRINDEX ~ IRINDEX + 1 ; LISTHEAD ~ SIRINDEX ;             07551000
              CLEAR(IR,9) ;                                             07552000
         END ;                                                          07553000
              ACCUM[1]~"      " ;                                       07554000
              COUNT ~ ABS(A[8]) ;                                       07555000
              MOVECHARS(A,ACCUM[1],0,3,COUNT) ;                         07556000
              MOVECHARS(A[8],ACCUM[1],7,2,1) ;                          07557000
              MOVEWORDS(A[9],SEQ,1) ;                                   07558000
              Q ~ ACCUM[1];                                             07559000
              IF SORTSCRAMBLE THEN Q ~ Q ;                              07560000
              TCOUNT ~ LISTTAIL ;                                       07561000
              SIRINDEX ~ IR[0] ~ IRINDEX ;                              07562000
              IR[1] ~ TCOUNT ; IR[2] ~ COUNT ;                          07563000
              OCTTODEC(IR[0],IR[3]) ;                                   07564000
              OCTTODEC(IR[1],IR[4]) ;                                   07565000
              OCTTODEC(IR[2],IR[5]) ;                                   07566000
              WRITE(IRFILE,10,IR[*]) ;                                  07567000
              IF IRBUG THEN WRITE(LINE,10,IR[*]) ;                      07568000
              CLEAR(IR,9) ; IRINDEX ~ IRINDEX + 1 ; I ~ 0 ;             07569000
              IR[1] ~ "      " ;                                        07570000
              MOVECHARS(ACCUM[1],IR[1],3,3,COUNT);                      07571000
              WRITE(IRFILE,10,IR[*]) ;                                  07572000
              IF IRBUG THEN WRITE(LINE,10,IR[*]) ;                      07573000
              CLEAR(IR,9) ;                                             07574000
              IRINDEX ~ IRINDEX + 1 ;                                   07575000
         END ;                                                          07576000
              MOVEWORDS(A[9],IR[I],1) ; I ~ I + 1 ;                     07577000
              IF I > 9 THEN                                             07578000
         BEGIN                                                          07579000
              WRITE(IRFILE,10,IR[*]) ;                                  07580000
              IF IRBUG THEN WRITE(LINE,10,IR[*]) ;                      07581000
              I ~ 0 ; IRINDEX ~ IRINDEX + 1 ; CLEAR(IR,9) ;             07582000
         END ;                                                          07583000
              GO TO MORE ;                                              07584000
EOF:                                                                    07585000
              IF I ! 0 THEN                                             07586000
         BEGIN                                                          07587000
              WRITE(IRFILE,10,IR[*]) ;                                  07588000
              IF IRBUG THEN WRITE(LINE,10,IR[*]) ;                      07589000
              IRINDEX ~ IRINDEX + 1 ; LISTHEAD ~ SIRINDEX ;             07590000
         END ;                                                          07591000
              SIRINDEX ~ IRINDEX ;                                      07592000
              TABLEUPPERBOUND ~ PP ;                                    07593000
              I ~ TABLEUPPERBOUND ;                                     07594000
              T ~ (I DIV 512) ;                                         07595000
              FOR I ~ 0 STEP 1 UNTIL T DO                               07596000
              ARRAYTOIRFILE(TABLE[I,*],511) ;                           07597000
              ARRAYTOIRFILE(STACK,63) ;                                 07598000
              REWIND(IRFILE) ;                                          07599000
              CLEAR(IR,9) ;                                             07600000
              IR[0] ~ SIRINDEX ; IR[1] ~ T ;                            07601000
              IR[2] ~ "IRFILE" ; IR[5] ~ TIME(0) ;                      07602000
              IR[6] ~ TIME(1) ;                                         07603000
              OCTTODEC(IR[0],IR[3]) ;                                   07604000
              OCTTODEC(IR[1],IR[4]) ;                                   07605000
              WRITE(IRFILE,10,IR[*]) ;                                  07606000
              IF IRBUG THEN WRITE(LINE,10,IR[*]) ;                      07607000
              LOCK(IRFILE,RELEASE) ;                                    07608000
         END  NEWMAKEIRFILE ;                                           07609000
COMMENT DOCUMENT* 5 * * * * * * * * * * * * * * * * * * * * * * * * *   07610000
I. DOCUMENT EDITING PROCEDURES.                                         07611000
* END;                                                                  07612000
COMMENT DOCUMENT* 23 * * * * * * * * * * * * * * * * * * * * * * * * ;  07613000
INTEGER PROCEDURE DELTANCR(NCR1,NCR2);                                  07614000
VALUE         NCR1,NCR2 ;                                               07615000
INTEGER       NCR1,NCR2 ;                                               07616000
COMMENT  FINDS NUMBER OF CHRS BETWEEN TWO ABSOLUTE ADDRESSES ;          07617000
         BEGIN                                                          07618000
INTEGER       IJUNK,KJUNK ;                                             07619000
              IJUNK.[45:3] ~NCR1.[30:3] ;                               07620000
              IJUNK.[30:15] ~ NCR1.[33: 15] ;                           07621000
              KJUNK.[45:3] ~NCR2.[30:3] ;                               07622000
              KJUNK.[30:15] ~ NCR2. [33:15] ;                           07623000
              DELTANCR ~ KJUNK - IJUNK ;                                07624000
         END ;                                                          07625000
COMMENT DOCUMENT* 21 * * * * * * * * * * * * * * * * * * * * * * * * *; 07626000
PROCEDURE     REPLACEIT;                                                07627000
COMMENT  ANALIZES SYNTAX OF <INSERT PART> FOR REPLACE ;                 07628000
         BEGIN                                                          07629000
INTEGER       SVNCR,SVNCR2 ;                                            07630000
LABEL         ENDINS ;                                                  07631000
COMMENT DOCUMENT* 32 * * * * * * * * * * * * * * * * * * * * * * * * ;  07632000
STREAM PROCEDURE REPLACE (NCR,NBLKS) ;                                  07633000
VALUE         NCR,NBLKS ;                                               07634000
COMMENT  CHANGES <INSERT PART> TO "PAGE" ;                              07635000
         BEGIN                                                          07636000
              DI ~ NCR; DI~ DI - 10; DS~ 10 LIT "  PAGE    " ;          07637000
              NBLKS(DS ~ 1 LIT " "; );                                  07638000
         END ;                                                          07639000
              SVNCR ~ SVNCR2 ~ NCR ;                                    07640000
              IF FINDCHAR(NCR,"%" ) THEN GO TO ENDINS ;                 07641000
              SCAN; IF RESULT ! 3 THEN GO TO ENDINS ;                   07642000
              SVNCR2~NCR;                                               07643000
              IF FINDCHAR(NCR,"%") THEN GO TO ENDINS;                   07644000
              SCAN; IF NOT COMMA THEN GO TO ENDINS;                     07645000
              SVNCR2 ~ NCR;                                             07646000
              IF FINDCHAR(NCR,"%" ) THEN GO TO ENDINS ;                 07647000
              SCAN; IF RESULT ! 3 THEN GO TO ENDINS ;                   07648000
              SVNCR2 ~ NCR ;                                            07649000
ENDINS:                                                                 07650000
              TEMP ~ DELTANCR(SVNCR,SVNCR2) ;                           07651000
              REPLACE (SVNCR,TEMP) ;                                    07652000
         END REPLACEIT ;                                                07653000
COMMENT DOCUMENT* 22 * * * * * * * * * * * * * * * * * * * * * * * * *; 07654000
STREAM PROCEDURE BITFIELDCONVERT(FIRSTBIT,FIELDSIZE,DEST,DESTPOS) ;     07655000
VALUE         DESTPOS ;                                                 07656000
COMMENT  FORMATS FIELD LENGTH FOR PATTERN CONTROL ;                     07657000
         BEGIN                                                          07658000
              DI ~ DEST ; DI ~ DI + DESTPOS ; DS ~ 2 LIT "-[" ;         07659000
              SI ~ FIRSTBIT ; DS ~ 2 DEC ; DS ~ 1 LIT ":" ;             07660000
              SI ~FIELDSIZE ; DS ~ 2 DEC ; DS ~ 2 LIT "]-" ;            07661000
         END BITFIELDCONVERT ;                                          07662000
COMMENT DOCUMENT* 21 * * * * * * * * * * * * * * * * * * * * * * * * ;  07663000
STREAM PROCEDURE FIXUNDERLINE(A,B) ;                                    07664000
COMMENT  PUTS A HYPHEN IN B FOR EVERY NON-BLANK POSITION IN A ;         07665000
         BEGIN                                                          07666000
              DI ~ B ; DS ~ 8 LIT "    " ; SI ~B ; DS ~ 14 WDS ;        07667000
              SI ~ A ; DI ~ B ; 9(8(IF SC ! " " THEN DS ~ 1 LIT "-"     07668000
              ELSE DI ~ DI + 1 ; SI ~ SI + 1)) ;                        07669000
         END FIXUNDERLINE ;                                             07670000
INTEGER STREAM PROCEDURE COUNTQUOTES(S,SPOS,N); VALUE SPOS,N;           07671000
         BEGIN                                                          07672000
LOCAL    T ;                                                            07673000
              SI~ LOC N; DI~ LOC T; SI~SI+6; DI~DI+7;                   07674000
              DS~CHR;                                                   07675000
              SI~S; SI~SI+SPOS ; TALLY ~ 0;                             07676000
              2(32(T(IF SC=""" THEN TALLY~TALLY+1;                      07677000
              SI~SI+1; )));                                             07678000
              N(IF SC= """ THEN TALLY ~ TALLY +1; SI~SI+1;) ;           07679000
              COUNTQUOTES ~ TALLY ;                                     07680000
         END COUNTQUOTES ;                                              07681000
COMMENT DOCUMENT* 21 * * * * * * * * * * * * * * * * * * * * * * * * ;  07682000
PROCEDURE NEWDOCPAGE;                                                   07683000
COMMENT  WRITES PAGE NUMBER,HEADING,ETC ON A NEW PAGE OF DOCUMENT ;     07684000
         BEGIN                                                          07685000
INTEGER       BLOCKEXTENDER ;                                           07686000
              BLOCKEXTENDER~ REAL(DOCPUNCHTOG);                         07687000
              DOCPUNCHTOG~FALSE;                                        07688000
              IF MONITOG THEN WRITE (PRINT,MONITFORM,"NEWDOC","PAGE  ");07689000
              ZPLOVER ~FALSE;                                           07690000
              IF PAGEID = "      " THEN PAGEID ~ " PAGE " ;             07691000
              OCTTODEC(PAGEN,APAGEN) ;                                  07692000
              FOR IJUNK ~ 0 STEP 1 UNTIL 7 DO                           07693000
              IF NOT CHECKCHAR(APAGEN,IJUNK,"0") THEN                   07694000
         BEGIN                                                          07695000
              IF DECIMALSTOG THEN                                       07696000
              IF (8-PLACES)< IJUNK THEN IJUNK ~ 8-PLACES;               07697000
              CLEARCHAR(APAGEN,0,IJUNK) ;                               07698000
              PAGECHAR ~ 9 - IJUNK ;    IJUNK ~ 9 ;                     07699000
         END ;                                                          07700000
              CLEAR(PAGENUM,14) ;                                       07701000
              IF SECRETOG THEN FILL PAGENUM[*]WITH "BURROUGH"           07702000
              ,"S CORPOR","ATION:  "," COMPANY"," CONFIDE",             07703000
              "NTIAL   ";                                               07704000
              LEFTPAGE~LFPAGEID;                                        07705000
              IF SUPPRESSTOG THEN                                       07706000
         BEGIN                                                          07707000
              SUPTHISTIME ~ TRUE;                                       07708000
              FOR I ~ 8- PLACES STEP 1 UNTIL 7 DO                       07709000
              IF NOT CHECKCHAR(APAGEN,I,"0") THEN SUPTHISTIME~FALSE;    07710000
         END;                                                           07711000
              IF LFPAGEID THEN                                          07712000
         BEGIN                                                          07713000
              IF PAGEN ! 0 THEN                                         07714000
              MOVECHARS(PAGEID,PAGENUM[7],2,10-PAGECHAR,6) ;            07715000
              IF DECIMALSTOG THEN                                       07716000
         BEGIN                                                          07717000
              MOVECHARS (APAGEN,PAGENUM[7], 8-PAGECHAR,16-PAGECHAR,     07718000
              PAGECHAR-PLACES);                                         07719000
              SETCHAR ( PAGENUM[7] ,16-PLACES,".");                     07720000
              IF SUPTHISTIME THEN                                       07721000
              CLEARCHAR(PAGENUM[7],16-PLACES,PLACES+1) ELSE             07722000
              MOVECHARS (APAGEN,PAGENUM[7],8-PLACES, 17-PLACES,         07723000
              PLACES);                                                  07724000
         END ELSE                                                       07725000
              MOVECHARS(APAGEN,PAGENUM[7],8-PAGECHAR,16-PAGECHAR,       07726000
                   PAGECHAR) ;                                          07727000
         END ELSE                                                       07728000
         BEGIN                                                          07729000
              IF DECIMALSTOG THEN                                       07730000
         BEGIN                                                          07731000
              MOVECHARS (APAGEN,PAGENUM[7], 8-PAGECHAR,9-PAGECHAR,      07732000
              PAGECHAR-PLACES);                                         07733000
              SETCHAR ( PAGENUM[7],9-PLACES, ".");                      07734000
              IF SUPTHISTIME THEN                                       07735000
              CLEARCHAR(PAGENUM[7],9-PLACES,PLACES+1) ELSE              07736000
              MOVECHARS (APAGEN, PAGENUM[7], 8-PLACES,10-PLACES,        07737000
              PLACES);                                                  07738000
         END ELSE                                                       07739000
              MOVECHARS(APAGEN,PAGENUM[7],8-PAGECHAR,10-PAGECHAR,       07740000
                     PAGECHAR) ;                                        07741000
              IF PAGEN ! 0 THEN                                         07742000
              MOVECHARS(PAGEID,PAGENUM[7],2,10,6) ;                     07743000
         END ;                                                          07744000
              IF DATETOG THEN MOVECHARS(DATEBUFF,PAGENUM[5],0,6,9) ;    07745000
              IF REVTOG THEN MOVECHARS ( REVB[0],PAGENUM[1],0,0,8);     07746000
              IF DOCDEBUG THEN                                          07747000
         BEGIN                                                          07748000
              WRITE(ZAR[*],FCOLS) ; ZPL(ZF,1,ZAR) ;                     07749000
         END ;                                                          07750000
              IF NOT (NOPAGETOG OR FLOWTOG) THEN ZPL(ZF,1,PAGENUM);     07751000
              IF NOPAGETOG THEN ZPL(ZF,1,BLANKARRAY);                   07752000
              IF CONTPAGEN = 0 THEN CLEAR (ACONT,0) ELSE                07753000
         BEGIN                                                          07754000
              OCTTODEC (CONTPAGEN,ACONT);                               07755000
              FOR IJUNK~ 5 STEP 1 UNTIL 7 DO                            07756000
              IF NOT CHECKCHAR (ACONT,IJUNK,"0") THEN                   07757000
         BEGIN                                                          07758000
              CLEARCHAR (ACONT,0,IJUNK);                                07759000
              IJUNK ~ 9;                                                07760000
         END;                                                           07761000
              MOVECHARS (ACONT,CONTBUF[8],5,6,3);                       07762000
              IF NOT (NOPAGETOG OR FLOWTOG) THEN ZPL(ZF,1,CONTBUF[*]);  07763000
         END;                                                           07764000
              IF (TITLEFULL AND DOCTOG) OR (HOLDFLOW AND TIGHTFULL) THEN07765000
         BEGIN                                                          07766000
              IF TITLECHANGE THEN PATCHPAGE ~ TRUE;                     07767000
              IF TUNDERTOG THEN                                         07768000
         BEGIN                                                          07769000
              ZPL(ZF,1,DOCTITLE); ZPL(ZF,1,TUNDERBUFF);                 07770000
         END ELSE ZPL(ZF,2,DOCTITLE) ; ZPL(ZF,1,BLANKARRAY) ;           07771000
         END ELSE IF NOT FLOWTOG THEN                                   07772000
              ZPL(ZF,1,BLANKARRAY);                                     07773000
              IF TABHEAD THEN                                           07774000
         BEGIN                                                          07775000
              ZPL(ZF,1,BLANKARRAY);                                     07776000
              IF THUNDTOG THEN                                          07777000
         BEGIN                                                          07778000
              FOR I~ 0 STEP 1 UNTIL THPOS-3 DO                          07779000
              ZPL(ZF,ZSP,TABARR[I,*]);                                  07780000
              ZPL(ZF,1,TABARR[THPOS-2,*]);                              07781000
              ZPL(ZF,ZSP,TABARR[THPOS-1,*]);                            07782000
         END ELSE                                                       07783000
              FOR I~ 0 STEP 1 UNTIL THPOS-1 DO                          07784000
              ZPL(ZF,ZSP,TABARR[I,*]);                                  07785000
         END;                                                           07786000
              NOTFIRSTDOCPAGE ~ TRUE ;                                  07787000
              DOCPUNCHTOG~ BOOLEAN(BLOCKEXTENDER);                      07788000
END NEWDOCPAGE;                                                         07789000
STREAM PROCEDURE INDEXBLANKS(A,B,N); VALUE N;                           07790000
         BEGIN LABEL L,K,M,P;                                           07791000
              SI~A; DI~B;                                               07792000
           L: IF SC= " " THEN BEGIN DS~CHR; GO TO L; END ;              07793000
              N( K:IF SC=" " THEN BEGIN DS~ CHR ; M: IF SC= " " THEN    07794000
              BEGIN SI~SI+1; GO TO M; END END ELSE                      07795000
              BEGIN IF SC="%" THEN JUMP OUT TO P;                       07796000
              DS~CHR; GO TO K; END;);                                   07797000
P:                                                                      07798000
         END ;                                                          07799000
COMMENT DOCUMENT* 32 * * * * * * * * * * * * * * * * * * * * * * * * ;  07800000
PROCEDURE     PARJUSTIFY (A,LASTP,LMARGIN) ; VALUE LASTP,LMARGIN ;      07801000
ARRAY    A[0]; INTEGER LASTP,LMARGIN ;                                  07802000
COMMENT  JUSTIFIES RIGHT MARGIN OF TEXT-MODE LINE ;                     07803000
         BEGIN                                                          07804000
LABEL         OK ;                                                      07805000
LABEL         ENDEXIT ;                                                 07806000
ARRAY         B[0:15] ;                                                 07807000
INTEGER       NWDS,NBLANKS,NCHARS,      FIRSTP,LB,RB ;                  07808000
STREAM PROCEDURE BLANKMARGINS(S,LBLANKS,RBLANKS,NWDS) ; VALUE NWDS ;    07809000
COMMENT  RETURNS WIDTH OF LEFT (LBLANKS) AND RT (RBLANKS) MARGINS ;     07810000
         BEGIN                                                          07811000
LOCAL         T ;                                                       07812000
LABEL         L,LL ;                                                    07813000
              SI ~ S ; DI ~ T ;                                         07814000
              NWDS(8(IF SC ! " " THEN JUMP OUT 2 TO L ;                 07815000
              SI ~ SI + 1 ; DI ~ DI + 8 ;)) ;                           07816000
L:            T ~ DI ; DI ~ LBLANKS ; SI ~ LOC T ; DS ~ 1 WDS ;         07817000
              TALLY ~ 0 ; T ~ TALLY ;                                   07818000
              SI ~ S ; NWDS(SI ~ SI + 8); SI ~ SI - 1 ; DI ~ T ;        07819000
              NWDS(8(IF SC ! " " THEN JUMP OUT 2 TO LL ;                07820000
              SI ~ SI - 1 ; DI ~ DI + 8 ;)) ;                           07821000
LL:           T ~ DI ; DI ~ RBLANKS ; SI ~ LOC T ; DS ~ 1 WDS ;         07822000
         END BLANKMARGINS ;                                             07823000
INTEGER STREAM PROCEDURE COUNTBLANKS(S,SPOS,N) ;                        07824000
VALUE         SPOS , N ;                                                07825000
          BEGIN                                                         07826000
LABEL         L ;                                                       07827000
              SI ~ S ; SI ~ SI + SPOS ; TALLY ~ 0 ;                     07828000
              N(IF SC = " " THEN TALLY ~ TALLY + 1 ;                    07829000
              IF SC = "%" THEN JUMP OUT 1 TO L ;                        07830000
              SI ~ SI + 1 ) ;                                           07831000
L:            COUNTBLANKS ~ TALLY ;                                     07832000
         END COUNTBLANKS ;                                              07833000
STREAM PROCEDURE FIXTERM(D) ;                                           07834000
         BEGIN                                                          07835000
              DI ~D ; DS ~ 8 LIT "%LLANFPG" ;                           07836000
         END FIXTERM ;                                                  07837000
STREAM PROCEDURE JUSTIFY(S,SPOS,D,DPOS,N) ;                             07838000
VALUE         SPOS,DPOS,N ;                                             07839000
         BEGIN                                                          07840000
LOCAL         LOCDI,STOP ;                                              07841000
LABEL         L1,L2,L3,L4,EXIT ;                                        07842000
LABEL         L5,L6 ;                                                   07843000
              DI ~ LOC STOP ; DS ~ 8 LIT "%LLANFPG" ;                   07844000
              SI ~ S ; SI ~ SI + SPOS ;                                 07845000
              DI ~ D ; DI ~ DI + DPOS ;                                 07846000
              N(L3:                                                     07847000
              IF SC = "%" THEN                                          07848000
         BEGIN                                                          07849000
              LOCDI ~ DI ;                                              07850000
              DI ~ LOC STOP ;                                           07851000
              IF 8 SC = DC THEN                                         07852000
              JUMP OUT 1 TO EXIT ;                                      07853000
              SI ~ SI - 8 ; DI ~ LOCDI ;                                07854000
         END ;                                                          07855000
              IF SC = """ THEN                                          07856000
         BEGIN                                                          07857000
L5:           DS ~ 1 CHR ; IF SC ! """ THEN GO TO L5 ;                  07858000
         END ;                                                          07859000
              DS ~ 1 CHR ;                                              07860000
              IF SC = " "THEN                                           07861000
         BEGIN                                                          07862000
              DS ~ 1 CHR ; DS ~ 1 LIT " " ;                             07863000
              GO TO L1 ;                                                07864000
         END ;                                                          07865000
              IF SC = "%" THEN                                          07866000
         BEGIN                                                          07867000
              LOCDI ~ DI ;                                              07868000
              DI ~ LOC STOP ;                                           07869000
              IF 8 SC = DC THEN                                         07870000
              JUMP OUT 1 TO EXIT ;                                      07871000
              SI ~ SI - 8 ; DI ~ LOCDI ;                                07872000
         END ;                                                          07873000
              GO TO L3 ;                                                07874000
L1:           ) ;                                                       07875000
L2:                                                                     07876000
              IF SC = "%" THEN                                          07877000
         BEGIN                                                          07878000
              LOCDI ~ DI ;                                              07879000
              DI ~ LOC STOP ;                                           07880000
              IF 8 SC = DC THEN                                         07881000
              GO TO EXIT ;                                              07882000
              SI ~ SI - 8 ; DI ~ LOCDI ;                                07883000
         END ;                                                          07884000
              IF SC = """ THEN                                          07885000
         BEGIN                                                          07886000
L6:           DS ~ 1 CHR ; IF SC = """ THEN                             07887000
         BEGIN                                                          07888000
              DS ~ 1 CHR ; GO TO L2 ;                                   07889000
         END ELSE                                                       07890000
              GO TO L6 ;                                                07891000
         END ;                                                          07892000
              DS ~ 1 CHR ; GO TO L2 ;                                   07893000
EXIT:                                                                   07894000
         END JUSTIFY ;                                                  07895000
              IF DONTJUSTIFY THEN GO TO ENDEXIT ;                       07896000
              NWDS ~ 10 ; NCHARS ~ 80 ;                                 07897000
              FIXTERM(A[10]) ;                                          07898000
              BLANKMARGINS(A,LB,RB,NWDS) ;                              07899000
              IF LB = NCHARS THEN GO TO OK ;                            07900000
              CLEAR(B,14) ;                                             07901000
COMMENT  SET LB TO MAX(FIRST CHAR, LEFT MARGIN) ;                       07902000
              IF LB < LMARGIN THEN                                      07903000
         BEGIN                                                          07904000
              LB ~ LMARGIN ;                                            07905000
              MOVECHARS(A[0],B[0],0,0,LB);                              07906000
         END ;                                                          07907000
              IF LB + RB } 63 THEN GO TO OK ;                           07908000
COMMENT  CHICKEN OUT ON ODD NUMBER OF QUOTES;                           07909000
              IF COUNTQUOTES(A,LB,80-LB) MOD 2 ! 0 THEN GO TO OK;       07910000
              FIRSTP ~ LB ;    % OUTPUT START POINTER                   07911000
              NBLANKS ~ LASTP - 80 + RB ;                               07912000
              IF NBLANKS { 0 THEN GO TO OK ;                            07913000
              JUSTIFY(A[LB DIV 8],LB.[45:3],B[FIRSTP DIV 8],            07914000
                   FIRSTP.[45:3] , NBLANKS ) ;                          07915000
              MOVEWORDS(B,A,10) ;                                       07916000
OK:                                                                     07917000
              CLEARCHAR(A[10],0,8) ;                                    07918000
ENDEXIT:                                                                07919000
          END PARJUSTIFY ;                                              07920000
COMMENT DOCUMENT* 21 * * * * * * * * * * * * * * * * * * * * * * * * *; 07921000
PROCEDURE     PRINTDOCUMENT ;                                           07922000
COMMENT  DOES ALL WORK OF EDITING A DOCUMENT ;                          07923000
         BEGIN                                                          07924000
ARRAY         DOCONTENTS [0:500, 0:14], DOCBUFF [0:14];                 07925000
INTEGER       LBLANKS,RBLANKS,NCHRS,POINT,CONTIND,I,                    07926000
              NCHARS,TABSIZE,FORMP,COLPOS,IJUNK,ITEMP ;                 07927000
INTEGER       PREVCOL ;                                                 07928000
INTEGER  SVPARP;                                                        07929000
BOOLEAN       INDENTERR,PAREMPTY;                                       07930000
BOOLEAN       FIRSTEQUAL;                                               07931000
BOOLEAN  PINDEXT;                                                       07932000
BOOLEAN       GLOBALDEFINETOG ;                                         07933000
BOOLEAN       DOCOK ;                                                   07934000
BOOLEAN  TEMPPAGETOG ;                                                  07935000
BOOLEAN       FIRSTPARIDTOG ;                                           07936000
BOOLEAN  SAVEDOCPUNCHTOG;                                               07937000
LABEL         NEXT,SEARCH,NEWPAGE,EXIT ;                                07938000
LABEL         QUITL,PARSCAN,NEXT1 ;                                     07939000
LABEL         MOREID ;                                                  07940000
LABEL         DEFOK ;                                                   07941000
LABEL    WIDETAB;                                                       07942000
LABEL    RECOVER;                                                       07943000
LABEL         LA1;                                                      07944000
LABEL         PATSCAN,MOREPAT,MORECODE,MORE ;                           07945000
INTEGER       NUMVALUE,NEXTAVAILBIT,NEXTAVAILCOL,WORD,CHAR ;            07946000
SWITCH FORMAT BOXFORM ~                                                 07947000
              (10("-----")) ,                                           07948000
              (":",10(" "),10("1"),10("2"),10("3"),8("4"),":") ,        07949000
              (":",4("0123456789"),"01234567:"),                        07950000
              (10("-----")) ;                                           07951000
FORMAT        FCONTENTS(X30,"TABLE OF CONTENTS") ;                      07952000
COMMENT DOCUMENT* 31 * * * * * * * * * * * * * * * * * * * * * * * * ;  07953000
STREAM PROCEDURE BLANKMARGINS(S,LBLANKS,RBLANKS) ;                      07954000
COMMENT  RETURNS WIDTH OF LEFT (LBLANKS) AND RT (RBLANKS) MARGINS ;     07955000
         BEGIN                                                          07956000
LOCAL         T ;                                                       07957000
LABEL         L,LL ;                                                    07958000
              SI ~ S ; DI ~ T ;                                         07959000
              9(8(IF SC ! " " THEN JUMP OUT 2 TO L ;                    07960000
              SI ~ SI + 1 ; DI ~ DI + 8 ;)) ;                           07961000
L:            T ~ DI ; DI ~ LBLANKS ; SI ~ LOC T ; DS ~ 1 WDS ;         07962000
              TALLY ~ 0 ; T ~ TALLY ;                                   07963000
              SI ~ S ; 9(SI ~ SI + 8) ; SI ~ SI - 1 ; DI ~ T ;          07964000
              9(8(IF SC ! " " THEN JUMP OUT 2 TO LL ;                   07965000
              SI ~ SI - 1 ; DI ~ DI + 8 ;)) ;                           07966000
LL:           T ~ DI ; DI ~ RBLANKS ; SI ~ LOC T ; DS ~ 1 WDS ;         07967000
         END BLANKMARGINS ;                                             07968000
COMMENT DOCUMENT* 32 * * * * * * * * * * * * * * * * * * * * * * * * ;  07969000
STREAM PROCEDURE SETDOTS(D,N) ;                                         07970000
VALUE         N ;                                                       07971000
COMMENT  USED IN INDEX ENTRIES ;                                        07972000
         BEGIN                                                          07973000
              DI ~ D ; N(DS ~ 8 LIT ". . . . " ) ;                      07974000
         END SETDOTS ;                                                  07975000
COMMENT DOCUMENT* 32 * * * * * * * * * * * * * * * * * * * * * * * * ;  07976000
STREAM PROCEDURE COUNTABPOS(S,SPOS,NCHAR,LBLANKS,RBLANKS) ;             07977000
VALUE         SPOS ;                                                    07978000
COMMENT  KEEPS TRACK OF POSITION IN HANDLING TAB CONTROL ;              07979000
         BEGIN                                                          07980000
LABEL         L1,L2 ;                                                   07981000
LABEL         L3;                                                       07982000
LOCAL         T1,T2 ;                                                   07983000
              SI ~ S ; SI ~ SI + SPOS ; DI ~ T1;                        07984000
              15(8(IF SC!" " THEN JUMP OUT 2 TO L1;                     07985000
              SI ~ SI + 1 ; DI ~ DI + 8 )) ;                            07986000
L1:           T2 ~ SI ; T1 ~ DI ; DI ~ LBLANKS ; SI ~ LOC T1 ; DS~1 WDS;07987000
              TALLY ~ 0 ; T1 ~ TALLY ;                                  07988000
              SI ~ T2 ; DI ~ T1 ;                                       07989000
              15(8(IF SC = "/"THEN JUMP OUT 2 TO L2;                    07990000
              SI ~ SI + 1 ; DI ~ DI + 8 )) ;                            07991000
L2:           T2~SI;                                                    07992000
              T1~DI; DI~NCHAR; SI~LOC T1; DS ~WDS;                      07993000
              TALLY~0; SI~T2; 15(8(SI~SI-1;IF SC!" " THEN               07994000
              JUMP OUT 2 TO L3; TALLY ~TALLY +1;));                     07995000
L3:           IF SC = "/" THEN TALLY ~ TALLY + 1;                       07996000
              T1 ~ TALLY ; SI ~ LOC T1; DI~ RBLANKS; DS ~ WDS;          07997000
         END COUNTABPOS ;                                               07998000
DEFINE        FINDASTERCONTROL = ASTERTOG ~ FALSE ;                     07999000
              DO READATAPE UNTIL ASTERTOG ; GO TO NEXT1 # ;             08000000
INTEGER GLYNMON ;                                                       08001000
COMMENT ;                                                               08002000
COMMENT                                                                 08003000
MONITOR LINE (CODECOUNTOG,CODELINECOUNT,MORECODE,                       08004000
DOCOK,DEFOK,                                                            08005000
              CODETOG,STARTCODEFLAG,SEARCH,DOCLISTFLAG,DOCLISTOG,       08006000
              PERCENTOG,NEXT1,NEXT) ;                                   08007000
              IF MONITOG THEN WRITE(PRINT,MONITFORM,"PRINTD","OCUMEN") ;08008000
              IF FINALDOCTOG THEN IF NOT LEAVETOG THEN PATCHLETTER~" "; 08009000
              STARTCODEFLAG ~ TRUE ; FIRSTCODELINE ~ FALSE ;            08010000
              TITLEFULL ~ FALSE ;                                       08011000
              NDOCDEFS ~ 0 ;                                            08012000
              GLOBALDEFINETOG ~ FALSE ;                                 08013000
MORE:         NOTFIRSTDOCPAGE ~ FALSE ;                                 08014000
              VOLUME ~VOLUME+1;                                         08015000
              PAGEQUAL ~ 0;                                             08016000
              DECIMALSTOG ~ FALSE;                                      08017000
              TITLECHANGE ~ FALSE ;                                     08018000
              CLEAR( DOCTITLE,14) ; CLEAR(DOCBUFF,14) ;                 08019000
              CONTIND ~ PAGEN ~ NLINES ~ 0 ;                            08020000
              TUNDERTOG ~ FALSE ;                                       08021000
              MAXLINES ~ ZLCOUNTMAX;                                    08022000
              ZSPERM ~ IF DOUBLEONLY THEN 2 ELSE 1;                     08023000
              PAGEID ~ " PAGE ";                                        08024000
              CLEARTITLETOG ~ TRUE ;                                    08025000
              IF NOT GLOBALDEFINETOG THEN                               08026000
         BEGIN                                                          08027000
              FOR IJUNK ~ 1 STEP 1 UNTIL NDOCDEFS DO                    08028000
                   DOCDEFLINKS[IJUNK] ~ 0 ;  NDOCDEFS ~ 0 ;             08029000
         END ;                                                          08030000
              LOOKFORSTAR ~ FALSE;                                      08031000
SEARCH:                                                                 08032000
              DOCLISTFLAG ~ FALSE ;                                     08033000
              LOOKFORSTAR ~ FALSE;                                      08034000
              DO SCAN UNTIL Q = "7COMME" ;                              08035000
              SCAN ; IF Q ! "8DOCUM" THEN GO TO SEARCH ;                08036000
              IF DOCOK THEN GO TO DEFOK ;                               08037000
              IF NOT FINDCHAR(NCR,"*") THEN                             08038000
              IF NOT GLOBALDEFINETOG THEN                               08039000
              IF NOT (FINDCHAR(NCR,""") OR FINDCHAR(NCR,"%")) THEN      08040000
         BEGIN                                                          08041000
              SCAN ; IF Q ="6DEFIN" OR Q = "7DEFIN" THEN                08042000
              GLOBALDEFINETOG ~TRUE ;                                   08043000
              GO TO DEFOK ;                                             08044000
         END ;                                                          08045000
              IF DOCIDTOG AND FIRSTDOCIDTOG THEN                        08046000
         BEGIN                                                          08047000
              IF NOT FINDCHAR(NCR,""") THEN GO TO SEARCH ;              08048000
              SCAN ;                                                    08049000
              IF NOT WORDEQUAL(FIRSTDOCID[1],ACCUM[1],9) THEN           08050000
              GO TO SEARCH ;                                            08051000
              FIRSTDOCIDTOG ~ FALSE ;                                   08052000
         END ELSE                                                       08053000
              IF DOCIDTOG AND  LASTDOCIDTOG THEN                        08054000
         BEGIN                                                          08055000
              IF FINDCHAR(NCR,""")THEN                                  08056000
         BEGIN                                                          08057000
              SCAN ;                                                    08058000
              IF WORDEQUAL(LASTDOCID[1],ACCUM[1],9) THEN                08059000
              LASTDOCIDTOG ~ FALSE ;                                    08060000
         END ;                                                          08061000
         END ;                                                          08062000
DEFOK:                                                                  08063000
              DOCOK ~ TRUE ;                                            08064000
              LOOKFORSTAR ~ TRUE;                                       08065000
              DOCOUTPUT ~ FALSE;                                        08066000
              IF DOCLISTOG THEN                                         08067000
              IF ASMLTOG THEN                                           08068000
         BEGIN                                                          08069000
              CLEAR(LISTBUFFER,14) ;                                    08070000
              MOVEWORDS(ASMLBUFF[DEVICE,*],LISTBUFFER,10) ;             08071000
              ZPL(0,2,LISTBUFFER) ;                                     08072000
         END ELSE                                                       08073000
         BEGIN                                                          08074000
              CLEAR(LISTBUFFER,14) ;                                    08075000
              MOVEWORDS(GLOBE,LISTBUFFER[2],9) ;                        08076000
              MOVEWORDS(SEQ,LISTBUFFER[11],1) ;                         08077000
              ZPL(0,2,LISTBUFFER) ;                                     08078000
         END ;                                                          08079000
              DOCOUTPUT ~ TRUE ;                                        08080000
              DOCUMENTFOUND ~ DOCLISTFLAG ~ TRUE ;                      08081000
              IF EXAMINE(NCR) = "*" THEN                                08082000
         BEGIN                                                          08083000
              ASTERTOG ~ TRUE ; ASTERCONTROLS ; GO TO NEXT1;            08084000
         END ;                                                          08085000
NEXT:         READATAPE ;                                               08086000
NEXT1:        ASTERTOG ~ FALSE ;                                        08087000
              IF ENDTOG THEN                                            08088000
         BEGIN                                                          08089000
              DOCLISTFLAG ~ FALSE ; GO TO SEARCH ;                      08090000
         END ;                                                          08091000
              IF CLEARTITLETOG THEN                                     08092000
         BEGIN                                                          08093000
              TITLEFULL ~ FALSE ;                                       08094000
              CLEAR(DOCTITLE,14) ; CLEARTITLETOG ~ FALSE ;              08095000
         END ;                                                          08096000
              IF MISSTOG THEN                                           08097000
         BEGIN                                                          08098000
              MISSCOUNT ~ MISSCOUNT - 1 ; MISSTOG ~ MISSCOUNT ! 0 ;     08099000
              GO TO NEXT ;                                              08100000
         END ;                                                          08101000
              IF DOCNAMES THEN                                          08102000
         BEGIN                                                          08103000
              SCAN;                                                     08104000
              WHILE DOCNAMES DO                                         08105000
         BEGIN                                                          08106000
              IF DOCINDEXTOG THEN                                       08107000
              IF RESULT ! 2 THEN                                        08108000
              IF SORTSCRAMBLE THEN BUILDXREF;                           08109000
              SCAN;                                                     08110000
         END ;                                                          08111000
              GO TO NEXT1;                                              08112000
         END ;                                                          08113000
              IF QUITOG THEN GO TO QUITL ;                              08114000
              IF (GLOSSTOG OR PARTOG OR PATTOG)THEN                     08115000
              CENTERTOG~TITLETOG~CODETOG~INDENTOG~ FALSE;               08116000
              IF NOT NOTBLANK THEN GO TO NEXT ;                         08117000
              IF SYNTAXTOG OR BNFTOG THEN                               08118000
         BEGIN                                                          08119000
              IF NOT DOCSYNTAX THEN                                     08120000
              DO READATAPE UNTIL DOCSYNTAX OR QUITOG ;                  08121000
              ASTERTOG ~ FALSE ;                                        08121100
         END ELSE IF DOCSYNTAXONLY THEN                                 08122000
         BEGIN                                                          08123000
              FINDASTERCONTROL ; GO TO NEXT ;                           08124000
         END ;                                                          08125000
              IF BNFTOG THEN                                            08126000
         BEGIN                                                          08127000
LABEL         MOREBNF ;                                                 08128000
LABEL         MORE ;                                                    08129000
MOREBNF :                                                               08130000
              QUITOG ~ QUITOG ;                                         08131000
              Q ~ Q ;                                                   08132000
              IF Q ! "1<    " OR NOT ASTERTOG THEN                      08133000
      DO BEGIN                                                          08134000
              SCAN ;                                                    08135000
              IF ASTERTOG THEN GO TO NEXT1 ;                            08136000
              IF Q = "1<    " THEN GO TO MORE ;                         08137000
              IF RESULT =1 THEN                                         08138000
              IF SORTSCRAMBLE THEN BUILDXREF ;                          08139000
              IF Q = "1{    " AND NOT FINDCHAR(NCR,"/") THEN            08140000
              DO SCAN UNTIL Q = "1}    " OR ASTERTOG ;                  08141000
              IF ASTERTOG THEN GO TO NEXT1 ;                            08142000
         END UNTIL FALSE ;                                              08143000
MORE:                                                                   08144000
              Q ~ Q ;                                                   08145000
              IF ASTERTOG THEN GO TO NEXT1 ;                            08146000
              IF NOT FINDCHAR(NCR,"/") THEN                             08147000
         BEGIN                                                          08148000
              CLEAR(BNFARRAY,14) ;                                      08149000
              BUILDBNFID(NCR,NCR,COUNT,BNFARRAY) ;                      08150000
              IF COUNT > 62 THEN                                        08151000
         BEGIN                                                          08152000
              DOCERROR(28) ; FINDASTERCONTROL ;                         08153000
         END ;                                                          08154000
              MOVECHARS(BNFARRAY,ACCUM[1],0,3,COUNT) ;                  08155000
              ACCUM[1].[12:6] ~ COUNT ; Q ~ ACCUM[1] ;                  08156000
              COUNT ~ COUNT ; NCR ~ NCR ;                               08157000
             IF NOT CHECKCHAR(ACCUM[1],2+COUNT,">") THEN                08158000
         BEGIN                                                          08159000
              DOCERROR(29); FINDASTERCONTROL ;                          08160000
         END ;                                                          08161000
              IF SORTSCRAMBLE THEN BUILDXREF ;                          08162000
         END ;                                                          08163000
              GO TO MOREBNF ;                                           08164000
         END ;                                                          08165000
              GLYNMON ~ 1 ;                                             08166000
              DOCLISTFLAG ~ DOCLISTFLAG ;                               08167000
              DOCLISTOG ~ DOCLISTOG ;                                   08168000
              CODECOUNTOG ~ CODECOUNTOG ;                               08169000
              CODELINECOUNT ~ CODELINECOUNT ;                           08170000
              CODETOG ~ CODETOG ;                                       08171000
              STARTCODEFLAG ~ STARTCODEFLAG ;                           08172000
              PERCENTOG ~ PERCENTOG ;                                   08173000
              GLYNMON ~ 2 ;                                             08174000
MORECODE:     IF CODETOG AND STARTCODEFLAG THEN                         08175000
         BEGIN                                                          08176000
              PARTOG ~GLOSSTOG ~ FALSE ;                                08177000
              STARTCODEFLAG ~ FALSE ; FIRSTCODELINE ~ TRUE ;            08178000
              MOVEWORDS(GLOBE,JUNKARRAY,10) ; CLEAR(GLOBE,8) ;          08179000
              FILL GLOBE[*] WITH OCT6060606330256026,                   08180000
              OCT4643434666314527,OCT6023462425606263,                  08181000
              OCT2151636260216360,OCT6225506425452325,                  08182000
              OCT6045644422255160 ;                                     08183000
              MOVEWORDS(SEQ,GLOBE[6],1) ;                               08184000
              IF NOCODESEQ THEN CLEAR(GLOBE,9) ;                        08185000
         END ;                                                          08186000
              IF CODECOUNTOG THEN CODELINECOUNT  ~ CODELINECOUNT - 1 ;  08187000
              IF CODELINECOUNT = 1 AND NOT DOCONLY THEN                 08188000
                   DOCLISTFLAG ~ FALSE ;                                08189000
              IF (CODETOG AND ((CHECKCHAR(GLOBE,0,"%") OR               08190000
              (CHECKCOMMENT(GLOBE,0) AND (NOT COMMENTOG)                08191000
                  AND ( NOT CODECOUNTOG)))                              08192000
                OR (CODECOUNTOG AND CODELINECOUNT = 0))) THEN           08193000
         BEGIN                                                          08194000
              STARTCODEFLAG ~ TRUE ;                                    08195000
              ENDCODETOG ~ TRUE ;                                       08196000
              IF CODEPERCENTOG AND CHECKCHAR(GLOBE,0,"%") THEN          08197000
         BEGIN                                                          08198000
              CODETOG ~ FALSE ; PERCENTOG ~ TRUE ;                      08199000
              GO TO NEXT1 ;                                             08200000
         END ;                                                          08201000
              GO TO SEARCH ;                                            08202000
         END ;                                                          08203000
              IF NOT NOTBLANK THEN GO TO NEXT ;                         08204000
              IF PERCENTOG THEN                                         08205000
         BEGIN                                                          08206000
              IF CHECKCHAR(GLOBE,0,"%") THEN                            08207000
         BEGIN                                                          08208000
              CLEAR(DOCBUFF,14) ;                                       08209000
              CLEARCHAR(GLOBE,0,1) ; MOVEWORDS(GLOBE,DOCBUFF,9) ;       08210000
         END ELSE                                                       08211000
         BEGIN                                                          08212000
              PERCENTOG ~ FALSE ; GO TO SEARCH ;                        08213000
         END ;                                                          08214000
         END ;                                                          08215000
                   IF WIDETOG THEN                                      08216000
         BEGIN                                                          08217000
                   CLEAR(DOCBUFF,14) ;                                  08218000
                   IF NOT CHECKCHAR(GLOBE[8],7,"%") THEN                08219000
                   MOVEWORDS(GLOBE,DOCBUFF,9) ;                         08220000
                   READATAPE ;                                          08221000
                   MOVEWORDS(GLOBE,DOCBUFF[9],6) ;                      08222000
              IF TABTOG OR FORMTOG THEN                                 08223000
         BEGIN                                                          08224000
              MOVEWORDS(DOCBUFF,GLOBE,15);                              08225000
              CLEAR (DOCBUFF,14);                                       08226000
              SETCHAR(GLOBE[15],0,"/");                                 08227000
              SETCHAR(GLOBE[15],1,"/");                                 08228000
              FORMP~0;                                                  08229000
              GO TO WIDETAB;                                            08230000
         END ;                                                          08231000
         END ELSE                                                       08232000
            IF CENTERTOG AND NOT FIRSTCODELINE THEN                     08233000
         BEGIN                                                          08234000
              BLANKMARGINS(GLOBE,LBLANKS,RBLANKS) ;                     08235000
              CLEAR(DOCBUFF,14) ;                                       08236000
              POINT ~ (LBLANKS + RBLANKS) DIV 2 ;                       08237000
              NCHARS ~ 72 - LBLANKS - RBLANKS ;                         08238000
              MOVECHARS(GLOBE[LBLANKS DIV 8],DOCBUFF[POINT DIV 8],      08239000
                   LBLANKS.[45:3],POINT.[45:3],NCHARS) ;                08240000
         END ELSE                                                       08241000
              IF FORMTOG OR TABTOG THEN                                 08242000
         BEGIN                                                          08243000
              CLEAR(DOCBUFF,14) ;                                       08244000
              FORMP ~ 0 ;                                               08245000
              SETCHAR(GLOBE[9],0,"/") ;                                 08246000
              SETCHAR(GLOBE[9],1,"/") ;                                 08247000
WIDETAB:                                                                08248000
              FOR IJUNK ~ 1 STEP 1 UNTIL NFORMTABS DO                   08249000
         BEGIN                                                          08250000
              IF FORMP DIV 8 GTR 20 THEN                                08250100
         BEGIN
              DOCERROR(41); GO TO NEXT;
         END ;                                                          08250100
              COUNTABPOS(GLOBE[FORMP DIV 8],FORMP.[45:3],NCHARS,        08251000
                 LBLANKS,RBLANKS) ;                                     08252000
              FORMP ~FORMP +LBLANKS;                                    08253000
              TABSIZE ~IF NCHARS =0 THEN 0 ELSE NCHARS - RBLANKS ;      08254000
              COLPOS ~ FORMCOLS[IJUNK] - 1 ;                            08255000
              IF TABTOG THEN                                            08256000
              IF TABSIZE > (ITEMP ~ FORMCOLS[IJUNK+1] - COLPOS) THEN    08257000
         BEGIN                                                          08258000
              DOCERROR(36) ;                                            08259000
              DRAWBAR(DOCBUFF[COLPOS DIV 8],COLPOS.[45:3],ITEMP,"*");   08260000
              GO TO RECOVER ;                                           08261000
              GO TO NEXT ;                                              08262000
         END ;                                                          08263000
              IF FORMTOG THEN                                           08264000
         BEGIN                                                          08265000
              IF IJUNK = 1 THEN PREVCOL ~ 0 ELSE                        08266000
                  PREVCOL ~ FORMCOLS[IJUNK-1] ;                         08267000
              IF TABSIZE > (ITEMP ~ COLPOS - PREVCOL) THEN              08268000
         BEGIN                                                          08269000
              DOCERROR(36);                                             08270000
              DRAWBAR(DOCBUFF[COLPOS DIV 8],COLPOS.[45:3],ITEMP,"*");   08271000
              GO TO RECOVER;                                            08272000
              GO TO NEXT ;                                              08273000
         END ;                                                          08274000
              COLPOS ~ COLPOS - TABSIZE + 1 ;                           08275000
         END ;                                                          08276000
              IF COLPOS < 0 THEN                                        08277000
         BEGIN                                                          08278000
              DOCERROR(17) ;                                            08279000
              GO TO NEXT;                                               08280000
         END ;                                                          08281000
              MOVECHARS(GLOBE[FORMP DIV 8],DOCBUFF[COLPOS DIV 8],       08282000
                 FORMP.[45:3],COLPOS.[45:3],TABSIZE) ;                  08283000
RECOVER:                                                                08284000
              FORMP ~ FORMP + NCHARS +1;                                08285000
         END ;                                                          08286000
         END ELSE                                                       08287000
            IF INDENTOG  AND NOT FIRSTCODELINE THEN                     08288000
         BEGIN                                                          08289000
              BLANKMARGINS(GLOBE,LBLANKS,RBLANKS) ;                     08290000
              CLEAR(DOCBUFF,14) ;                                       08291000
              IF PERCENTOG THEN LBLANKS ~ 0 ;                           08292000
              NCHARS ~ 72 - LBLANKS - RBLANKS ;                         08293000
              IF (INDENTERR ~ INDENTVAL + NCHARS > 72 ) THEN            08294000
                  NCHARS ~ 72 - INDENTVAL ;                             08295000
              IF NOT INDEXONLYTOG  THEN   % DO WHAT YOU DID BEFORE.     08296000
              MOVECHARS(GLOBE[LBLANKS DIV 8],DOCBUFF[INDENTVAL DIV 8],  08297000
                   LBLANKS.[45:3], INDENTVAL.[45:3], NCHARS )           08298000
              ELSE    % DONT INDENT DOCUMENT.                           08299000
                   MOVECHARS (GLOBE[LBLANKS DIV 8], DOCBUFF,            08300000
                   LBLANKS.[45:3], 0, NCHARS) ;                         08301000
              IF INDENTERR THEN DOCERROR(8) ;                           08302000
         END ;                                                          08303000
              IF TITLETOG THEN                                          08304000
         BEGIN                                                          08305000
              CLEAR(DOCTITLE,14) ;                                      08306000
              TITLEFULL ~ TRUE ;                                        08307000
              IF NOT ( INDENTOG OR CENTERTOG ) THEN                     08308000
              MOVEWORDS(GLOBE,DOCTITLE,9) ELSE                          08309000
              MOVEWORDS(DOCBUFF,DOCTITLE,15) ;                          08310000
              TITLECHANGE~PATCHCARD OR ASTERPATCHED;                    08311000
              IF TUNDERTOG THEN FIXUNDERLINE(DOCTITLE,TUNDERBUFF);      08312000
         END ;                                                          08313000
NEWPAGE:      IF PAGETOG AND NOT DOCXREFTOG THEN                        08314000
         BEGIN                                                          08315000
              NLINES ~ MAXLINES; ZPL(ZF,0,BLANKARRAY);                  08316000
              PAGETOG ~FALSE;                                           08317000
              PAGEINC~SAVEPAGEINC;                                      08318000
         END ;                                                          08319000
              IF INSERTOG THEN                                          08320000
         BEGIN                                                          08321000
              PAGETOG~TRUE;                                             08322000
              NLINES ~ MAXLINES; ZPL(ZF,0,BLANKARRAY);                  08323000
              INSERTOG~PAGETOG~FALSE;                                   08324000
         END;                                                           08325000
              IF SKIPTOG AND NOT DOCXREFTOG THEN                        08326000
         BEGIN                                                          08327000
              SKIPTOG~ FALSE;                                           08328000
              IF PUNCHPAGES THEN PUNCHAFTER ~ TRUE;                     08329000
              FOR I ~ 1 STEP 1 UNTIL SKIPVAL DO                         08330000
         BEGIN                                                          08331000
              ZPL(ZF,1,BLANKARRAY) ;                                    08332000
         END;                                                           08333000
              IF PUNCHPAGES THEN                                        08334000
         BEGIN                                                          08335000
              IF ZSPERM = 2 THEN                                        08336000
              IF LASTLINE THEN IF NLINES = MAXLINES - 3 THEN            08337000
                 ZPL(ZF,1,BLANKARRAY);                                  08338000
              IF PAGEFULL THEN                                          08339000
         BEGIN                                                          08340000
              ZPL(ZF,ZSPERM,BLANKARRAY);                                08341000
              NLINES ~ NLINES - ZSPERM;                                 08342000
         END ;                                                          08343000
              PUNCHAFTER ~ FALSE;                                       08344000
         END;                                                           08345000
         END ;                                                          08346000
              IF PARTOG THEN                                            08347000
         BEGIN                                                          08348000
              IF BBB THEN GO TO PARSCAN;                                08349000
              PINDEXT~INDEXTOG AND INDEXWORDS>0;                        08350000
              INDEXTOG~FALSE;                                           08351000
              IF PAGEFULL THEN PUNCHAFTER ~ TRUE ;                      08352000
              PUNDERTOG ~ UNDERTOG ; PDOUBLETOG ~ DOUBLETOG ;           08353000
                       LASTNOSPACE ~ FALSE ;                            08354000
              CLEAR(DOCBUFF,14);                                        08355000
              PARIDTOG ~ IF GLOSSTOG THEN FALSE ELSE SAVEPARIDTOG;      08356000
              FIRSTEQUAL ~ IF GLOSSTOG THEN TRUE ELSE FALSE ;           08357000
              FIRSTPARIDTOG ~FALSE ;                                    08358000
              IF PARIDTOG THEN                                          08359000
         BEGIN                                                          08360000
              PARP ~ 0 ;                                                08361000
MOREID:  DOCSCAN; MOVECHARS(ACCUM[1],DOCBUFF[PARP DIV 8],3,             08362000
                   PARP.[45:3], COUNT); PARP ~ PARP + COUNT ;           08363000
         IF PARP GEQ 63 THEN DOCERROR(43) ELSE                          08363300
              IF EXAMINE(NCR) ! " " THEN GO TO MOREID ;                 08364000
         IF PARP < PARLOW +PARINDENT THEN                               08365000
                   PARP ~ PARLOW + PARINDENT - 1 ;                      08366000
         END ELSE                                                       08367000
              PARP ~ PARLOW + PARINDENT - 1 ;                           08368000
              IF GLOSSTOG THEN PARP ~ INDENTVAL ;                       08369000
              IF GLOSSTOG THEN PARINDENT ~6 ;                           08370000
              IF GLOSSTOG THEN PARINDENT ~ 0 ;                          08371000
              PAREMPTY ~ TRUE ;                                         08372000
              SAVEDOCPUNCHTOG~DOCPUNCHTOG;                              08373000
              BBB ~ TRUE;                                               08374000
PARSCAN:      DOCSCAN ;                                                 08375000
              IF SEMICOLON AND NOT DOCONLY THEN                         08376000
              ASTERTOG ~ ENDTOG ~TRUE ;                                 08377000
              IF Q = "1=    " AND FIRSTEQUAL THEN                       08378000
         BEGIN                                                          08379000
              FIRSTEQUAL ~ FALSE; DOCSCAN ;                             08380000
              SVPARP~                                                   08381000
              PARP ~ IF PARP < PARLOW - 1 OR ((PARP=PARLOW - 1)         08382000
                 AND CHECKCHAR(DOCBUFF[PARP DIV 8],PARP.[45:3]," "))    08383000
                 THEN PARLOW ELSE PARP + 6;                             08384000
              LASTNOSPACE ~ TRUE;                                       08385000
         END ELSE SVPARP~ PARLOW;                                       08386000
              IF NOT LASTNOSPACE THEN PARP ~ PARP + 1 ;                 08387000
              IF PERIOD THEN IF EXAMINE(NCR) = " " THEN                 08388000
         BEGIN                                                          08389000
              SETCHAR (ACCUM[1],3+COUNT, " ");                          08390000
              COUNT ~ COUNT + 1;                                        08391000
         END;                                                           08392000
              LASTNOSPACE~EXAMINE(NCR) ! " " OR Q="1%    ";             08393000
              IF COUNT + PARP > PARHIGH+3 AND NOT PERIOD THEN           08394000
         BEGIN                                                          08395000
              IF NOT FIRSTPARIDTOG THEN                                 08396000
              PARJUSTIFY(DOCBUFF,PARHIGH+3,SVPARP) ELSE                 08397000
              FIRSTPARIDTOG ~ FALSE ;                                   08398000
         END ;                                                          08399000
              SVPARP~PARLOW;                                            08400000
              IF ASTERTOG OR (COUNT + PARP > PARHIGH+3) THEN            08401000
              IF NOT PAREMPTY THEN                                      08402000
              IF NOT PERIOD THEN                                        08403000
         BEGIN                                                          08404000
              IF PUNCHPAGES THEN                                        08405000
         BEGIN                                                          08406000
              IF PAGEFULL THEN                                          08407000
              IF NOT PUNCHAFTER THEN                                    08408000
         BEGIN                                                          08409000
              IF NOT (PAGETOG OR INSERTOG) THEN                         08410000
         BEGIN                                                          08411000
              IF SAVESEQ = 0 THEN DOCERROR(33);                         08412000
              IF INSTOG THEN                                            08413000
         BEGIN                                                          08414000
              IF NOT INSERTROW THEN SAVEPAGEN ~ PAGEN;                  08415000
              TEMP~ PAGEN +INSINC;                                      08416000
              INSERTROW~ TRUE;                                          08417000
              OCTTODEC(TEMP,BLOCKBUFFER[3]);                            08418000
              PAGEINC ~INSINC;                                          08419000
         END;                                                           08420000
              IJUNK ~ SAVESEQ +1; COMMENT                               08421000
              IJUNK~IF SAVESEQ{ISEQ-3 THEN SAVESEQ+1 ELSE SAVESEQ;      08422000
              OCTTODEC(IJUNK,BLOCKBUFFER[9]);                           08423000
              IJUNK ~ SAVESEQ +2; COMMENT                               08424000
              IJUNK~ IF SAVESEQ{ISEQ-3 THEN SAVESEQ+2 ELSE SAVESEQ;     08425000
              CLEAR(OLDBUF[0],14); CLEAR(NEWBUF[0],14);                 08426000
              OCTTODEC(SAVESEQ,OLDBUF[9]);                              08427000
              OCTTODEC(IJUNK,NEWBUF[9]);                                08428000
              I ~ DELTANCR(WORDBUF[10],WORDBUF[11]); J ~ 72-I;          08429000
              MOVECHARS(WORDBUF[0],OLDBUF[0],0,0,J);                    08430000
              MOVECHARS(WORDBUF[J DIV 8],NEWBUF[J DIV 8],J.[45:3],      08431000
                 J.[45:3],I);                                           08432000
              IF PUNCHTOG THEN                                          08433000
         BEGIN                                                          08434000
              IF BLANKTEST(OLDBUF[0],9) THEN                            08435000
              WRITE (PUNCH,10,OLDBUF[*]);                               08436000
              WRITE(PUNCH,10,BLOCKBUFFER[*]);                           08437000
              IF BLANKTEST (NEWBUF[0],9) THEN                           08438000
              WRITE(PUNCH,10,NEWBUF[*]);                                08439000
         END ELSE                                                       08440000
         BEGIN                                                          08441000
              IF BLANKTEST(OLDBUF[0],9) THEN                            08442000
              WRITE(LINE,15,OLDBUF[*]);                                 08443000
              WRITE(LINE,15,BLOCKBUFFER[*]);                            08444000
              IF BLANKTEST (NEWBUF[0],9) THEN                           08445000
              WRITE(LINE,15,NEWBUF[*]);                                 08446000
         END;                                                           08447000
         END;                                                           08448000
         END ELSE                                                       08449000
              IF ASTERTOG THEN                                          08450000
              ASAVESEQ ~ OLDASEQ ;                                      08451000
              IF ASTERTOG THEN IF LASTLINE THEN PUNCHAFTER~ TRUE;       08452000
         END;                                                           08453000
              IF NOT REMOTETOG THEN                                     08454000
         BEGIN                                                          08455000
              IF NOT FINALDOCTOG THEN                                   08456000
              MOVEWORDS(SEQ,DOCBUFF[14],1) ;                            08457000
              IF PATCHEDLINE THEN                                       08458000
         BEGIN                                                          08459000
              IF LEAVETOG THEN SETCHAR(DOCBUFF[9],4,PATCHLETTER) ELSE   08460000
              SETCHAR(DOCBUFF[10],0,PATCHLETTER);                       08461000
              PATCHINBUFF ~ TRUE;                                       08462000
         END ELSE                                                       08463000
              IF ASTERPATCHED THEN PATCHINBUFF~TRUE;                    08464000
         END ;                                                          08465000
              IF NOT DOCXREFTOG THEN                                    08466000
         BEGIN                                                          08467000
              IF PAGETOG THEN                                           08468000
         BEGIN                                                          08469000
              PAGETOG ~ FALSE ;                                         08470000
              TEMPPAGETOG ~ TRUE ;                                      08471000
         END ;                                                          08472000
              IF PINDEXT THEN                                           08473000
         BEGIN                                                          08474000
INTEGER  J;                                                             08475000
              CONTIND~CONTIND +1;                                       08476000
              CLEAR(DOCONTENTS[CONTIND,0],14);                          08477000
              SETDOTS(DOCONTENTS[CONTIND,0],9);                         08478000
              SETCHAR(DOCBUFF[13],7,"%");                               08479000
              INDEXBLANKS(DOCBUFF,DOCONTENTS[CONTIND,0],INDEXWORDS);    08480000
              SETCHAR(DOCBUFF[13],7," ");                               08481000
              MOVECHARS(PAGENUM[7],DOCONTENTS[CONTIND,7],               08482000
                 10-PAGECHAR,10-PAGECHAR, IF DECIMALSTOG THEN           08483000
                 PAGECHAR+7 ELSE PAGECHAR+6);                           08484000
              IF NOT FINALDOCTOG THEN MOVEWORDS(SEQ,                    08485000
                 DOCONTENTS[CONTIND,14],1);                             08486000
              PINDEXT~ FALSE;                                           08487000
         END ;                                                          08488000
              IF NOT (DOCPUNCHTOG EQV SAVEDOCPUNCHTOG) THEN             08489000
              IF DOCPUNCHTOG THEN                                       08490000
         BEGIN                                                          08491000
              DOCPUNCHTOG~ FALSE; SAVEDOCPUNCHTOG~TRUE;                 08492000
         END ELSE                                                       08493000
         BEGIN                                                          08494000
              SAVEDOCPUNCHTOG~FALSE; DOCPUNCHTOG ~ TRUE;                08495000
         END ;                                                          08496000
              IF PUNDERTOG THEN                                         08497000
              FIXUNDERLINE(DOCBUFF,UNDERBUFF) ;                         08498000
              IF PUNDERTOG OR NOT PDOUBLETOG THEN                       08499000
              ZPL(ZF,1,DOCBUFF) ELSE                                    08500000
              ZPL(ZF,2,DOCBUFF) ;                                       08501000
              IF PUNDERTOG THEN ZNOSKIP ~ TRUE;                         08502000
              IF PUNDERTOG THEN IF PDOUBLETOG THEN                      08503000
              ZPL(ZF,2,UNDERBUFF) ELSE                                  08504000
              ZPL(ZF,1,UNDERBUFF);                                      08505000
              PATCHEDLINE ~ FALSE;                                      08506000
              ZNOSKIP ~ FALSE;                                          08507000
              CLEAR(DOCBUFF,14) ;                                       08508000
              PAGETOG ~ TEMPPAGETOG ;                                   08509000
              IF EPCOUNT GTR 0 THEN IF MAXLINES -NLINES                 08509100
                 LEQ EPCOUNT THEN PAGETOG :=TRUE;                       08509200
              TEMPPAGETOG ~ FALSE ;                                     08510000
              DOCPUNCHTOG~SAVEDOCPUNCHTOG;                              08511000
         END ;                                                          08512000
              PAREMPTY ~ TRUE ; PARP ~ PARLOW ;                         08513000
              GO TO LA1;                                                08514000
         END;                                                           08515000
              IF PUNCHPAGES THEN IF LASTLINE THEN                       08516000
              IF NEWCARD THEN                                           08517000
         BEGIN                                                          08518000
              NEWCARD ~ FALSE;                                          08519000
              MOVEWORDS(GLOBE[0],WORDBUF[0],9);                         08520000
              MOVEWORDS(NCR,WORDBUF[10],1);                             08521000
              MOVEWORDS(LCR,WORDBUF[11],1);                             08522000
              MOVEWORDS(NCR,WORDBUF[12],1);                             08523000
              SAVESEQ~ISEQ;                                             08524000
         END ELSE                                                       08525000
         BEGIN                                                          08526000
              MOVEWORDS(NCR,WORDBUF[10],1);                             08527000
         END;                                                           08528000
LA1:                                                                    08529000
              IF ASTERTOG THEN GO TO NEXT1;                             08530000
              MOVECHARS(ACCUM[1],DOCBUFF[PARP DIV 8],3,PARP.[45:3],     08531000
                  COUNT) ; PARP ~ PARP + COUNT ; PAREMPTY ~ FALSE ;     08532000
              PATCHEDLINE ~ PATCHEDLINE OR PATCHCARD;                   08533000
              GO TO PARSCAN ;                                           08534000
         END ;                                                          08535000
              IF PATTOG THEN                                            08536000
         BEGIN                                                          08537000
              LASTNOSPACE ~ FALSE ; CLEAR(DOCBUFF,14) ;                 08538000
              PDOUBLETOG ~ DOUBLETOG ;                                  08539000
              NEXTAVAILBIT ~ 0 ; NEXTAVAILCOL ~ 1 ;                     08540000
              BBB~TRUE;                                                 08541000
MOREPAT:      PARP ~ IF PATBOXTOG THEN NEXTAVAILCOL ELSE 1 ;            08542000
              LASTNOSPACE ~ TRUE ;                                      08543000
              FIRSTEQUAL ~ TRUE ;            PAREMPTY ~ TRUE ;          08544000
              SCAN ; IF PERCENT THEN GO TO MOREPAT ;                    08545000
                     IF RESULT ! 3 THEN                                 08546000
         BEGIN                                                          08547000
              DOCERROR(9) ;                                             08548000
              FINDASTERCONTROL ;                                        08549000
         END ;                                                          08550000
              DTOCT(ACCUM[1],3,FIRSTBIT,COUNT) ;                        08551000
              FIELDSIZE ~ 1 ;                                           08552000
              SCAN ; IF NOT COLON THEN                                  08553000
         BEGIN                                                          08554000
              DOCERROR(13) ;                                            08555000
              FINDASTERCONTROL ;                                        08556000
         END ;                                                          08557000
              SCAN ; IF RESULT !3 THEN                                  08558000
         BEGIN                                                          08559000
              DOCERROR(10) ;                                            08560000
              FINDASTERCONTROL ;                                        08561000
         END ;                                                          08562000
              IF FIRSTBIT < NEXTAVAILBIT THEN                           08563000
         BEGIN                                                          08564000
              DOCERROR(14) ;                                            08565000
              FINDASTERCONTROL ;                                        08566000
         END ;                                                          08567000
              IF FIRSTBIT > NEXTAVAILBIT AND PATBOXTOG THEN             08568000
                  PARP ~ FIRSTBIT + 1 ;                                 08569000
              DTOCT(ACCUM[1],3,FIELDSIZE,COUNT) ;                       08570000
              LASTBIT ~ FIRSTBIT + FIELDSIZE - 1 ;                      08571000
              IF LASTBIT > 47 THEN                                      08572000
         BEGIN                                                          08573000
              DOCERROR(15) ;                                            08574000
              FINDASTERCONTROL ;                                        08575000
         END ;                                                          08576000
              NEXTAVAILBIT ~ LASTBIT + 1 ; NUMVALUE ~ 0 ;               08577000
              IF PATBOXTOG THEN                                         08578000
              NEXTAVAILCOL ~ NEXTAVAILBIT + 1 ;                         08579000
PATSCAN:                                                                08580000
              SCAN ;                                                    08581000
              IF PERCENT THEN GO TO PATSCAN ;                           08582000
              IF NUMSIGN THEN                                           08583000
         BEGIN                                                          08584000
              SCAN ;                                                    08585000
              IF COMMA THEN NUMVALUE ~ 1 ELSE                           08586000
              IF PERIOD THEN NUMVALUE ~ 2 ELSE                          08587000
         BEGIN                                                          08588000
              DOCERROR(11) ;                                            08589000
              FINDASTERCONTROL ;                                        08590000
         END ;                                                          08591000
         END ;                                                          08592000
              IF FIRSTEQUAL THEN                                        08593000
         BEGIN                                                          08594000
              FIRSTEQUAL ~ FALSE ;                                      08595000
              BITFIELDCONVERT(FIRSTBIT,FIELDSIZE,DOCBUFF[PARP DIV 8],   08596000
                 PARP.[45:3]) ; PARP ~ PARP + 10 ;                      08597000
              PARLOW ~ IF PATBOXTOG THEN NEXTAVAILCOL + 1 ELSE PARP+1 ; 08598000
         END ;                                                          08599000
              IF Q ="1=    " THEN                                       08600000
         BEGIN                                                          08601000
              IF NOT  PATBOXTOG THEN PARLOW ~ PARP + 4 ;                08602000
              PARP ~ PARP + 3 ; GO TO PATSCAN ;                         08603000
         END ;                                                          08604000
              IF NOT (RTPAREN OR RTBRACK                                08605000
                   OR LASTNOSPACE) THEN PARP ~ PARP + 1 ;               08606000
              LASTNOSPACE ~ LFPAREN OR LFBRACK OR                       08607000
              EXAMINE(NCR) ! " " OR                                     08608000
                 PERCENT OR LESSTHAN ;                                  08609000
              IF ( ASTERTOG OR (NUMVALUE ! 0 ) OR                       08610000
                               (((COUNT+PARP) > PARHIGH) AND            08611000
                               (((COUNT DIV 2 ) + PARP) > PARHIGH)))    08612000
                               AND NOT PAREMPTY THEN                    08613000
              IF(NOT (PERIOD OR COMMA OR RTPAREN OR RTBRACK OR          08614000
              MINUS OR SLASH OR COLON OR GREATERTHAN)) OR               08615000
              (NUMVALUE ! 0 ) THEN                                      08616000
         BEGIN                                                          08617000
INTEGER       BLOCKEXTENDER ;                                           08618000
              IF NOT REMOTETOG THEN                                     08619000
         BEGIN                                                          08620000
              IF NOT FINALDOCTOG THEN                                   08621000
              MOVEWORDS(SEQ,DOCBUFF[14],1) ;                            08622000
              IF PATCHCARD THEN                                         08623000
         BEGIN                                                          08624000
              IF LEAVETOG THEN SETCHAR(DOCBUFF[9],4,PATCHLETTER) ELSE   08625000
              SETCHAR(DOCBUFF[10],0,PATCHLETTER);                       08626000
              PATCHINBUFF ~ TRUE;                                       08627000
         END ELSE                                                       08628000
              IF ASTERPATCHED THEN PATCHINBUFF~TRUE;                    08629000
         END ;                                                          08630000
              IF NOT DOCXREFTOG THEN                                    08631000
         BEGIN                                                          08632000
              IF NOT PATBOXTOG AND PDOUBLETOG THEN                      08633000
              ZPL(ZF,2,DOCBUFF) ELSE ZPL(ZF,1,DOCBUFF);                 08634000
              IF PATBOXTOG THEN                                         08635000
         BEGIN                                                          08636000
              WORD ~ (FIRSTBIT+1) DIV 8 ;                               08637000
              CHAR ~ (FIRSTBIT + 1).[45:3] ;                            08638000
              CLEARCHAR(DOCBUFF[WORD],CHAR,8-CHAR) ;                    08639000
              CLEAR(DOCBUFF[WORD+1],14-WORD-1) ;                        08640000
              SETCHAR  (DOCBUFF[(FIRSTBIT+1) DIV 8],(FIRSTBIT+1).       08641000
                  [45:3],":") ;                                         08642000
              SETCHAR  (DOCBUFF[( LASTBIT+1) DIV 8],( LASTBIT+1).       08643000
                  [45:3],":") ;                                         08644000
              ZPL(ZF,ZSP,DOCBUFF);                                      08645000
         END ELSE CLEAR(DOCBUFF,14) ;                                   08646000
         END ;                                                          08647000
              PAREMPTY ~ TRUE ; PARP ~ PARLOW ;                         08648000
         END ;                                                          08649000
              IF NUMVALUE = 1 THEN GO TO MOREPAT ;                      08650000
              IF NUMVALUE = 2 THEN                                      08651000
         BEGIN                                                          08652000
              IF PATBOXTOG THEN                                         08653000
         BEGIN                                                          08654000
              IF NOT DOCXREFTOG THEN                                    08655000
         BEGIN                                                          08656000
              ZNOSKIP~TRUE;                                             08657000
              FOR I ~ 0,1,2,3 DO                                        08658000
         BEGIN                                                          08659000
              WRITE(ZAR[*],BOXFORM[I]) ;                                08660000
              ZPL(ZF,1,ZAR);                                            08661000
         END ;                                                          08662000
              ZNOSKIP~FALSE;                                            08663000
              ZPL (ZF,1, BLANKARRAY);                                   08664000
         END ;                                                          08665000
         END ;                                                          08666000
              FINDASTERCONTROL ;                                        08667000
         END ;                                                          08668000
              MOVECHARS(ACCUM[1],DOCBUFF[PARP DIV 8],3,PARP.[45:3],     08669000
                 COUNT) ; PARP ~ PARP + COUNT ; PAREMPTY ~ FALSE ;      08670000
              GO TO PATSCAN ;                                           08671000
         END ;                                                          08672000
              IF NOT (PARTOG OR PATTOG OR PERCENTOG OR WIDETOG          08673000
              OR (INDENTOG AND NOT FIRSTCODELINE) OR                    08674000
              FORMTOG OR TABTOG OR CENTERTOG) THEN                      08675000
         BEGIN                                                          08676000
              CLEAR(DOCBUFF[0],14);                                     08677000
              MOVEWORDS(GLOBE,DOCBUFF,9);                               08678000
         END;                                                           08679000
              IF INDEXTOG AND NOT FIRSTCODELINE THEN                    08680000
         BEGIN                                                          08681000
              IF ( NINDEXLINES ~ NINDEXLINES - 1) { 0 THEN              08682000
              INDEXTOG ~FALSE ;                                         08683000
              CONTIND ~ CONTIND + 1 ;                                   08684000
              CLEAR(DOCONTENTS[CONTIND, 0],14) ;                        08685000
              SETDOTS(DOCONTENTS[CONTIND,0],9 ) ;                       08686000
              BLANKMARGINS(DOCBUFF,LBLANKS,RBLANKS) ;                   08687000
              IF INDEXFIXTOG THEN                                       08688000
              MOVECHARS(DOCBUFF[LBLANKS DIV 8],DOCONTENTS[CONTIND,0],   08689000
                        LBLANKS.[45:3],0,72-RBLANKS-LBLANKS) ELSE       08690000
              IF  INDEXONLYTOG  THEN    % INDENT THE INDEX.             08691000
         BEGIN                                                          08692000
                   CLEARCHAR (DOCONTENTS[CONTIND, 0], 0, INDENTVAL);    08693000
                   MOVECHARS (DOCBUFF, DOCONTENTS[CONTIND, INDENTVAL    08694000
                        DIV 8], 0, INDENTVAL.[45:3], 72- RBLANKS )      08695000
         END                                                            08696000
              ELSE    % DO WHAT YOU DID BEFORE.                         08697000
              MOVECHARS(DOCBUFF,DOCONTENTS[CONTIND,0],0,0,72-RBLANKS) ; 08698000
              IF DECIMALSTOG THEN                                       08699000
              MOVECHARS (PAGENUM[7], DOCONTENTS[CONTIND,7],             08700000
              10-PAGECHAR,10-PAGECHAR, PAGECHAR+7) ELSE                 08701000
              MOVECHARS(PAGENUM[7],DOCONTENTS[CONTIND,7],               08702000
                10-PAGECHAR,10-PAGECHAR,PAGECHAR + 6) ;                 08703000
              IF NOT FINALDOCTOG THEN                                   08704000
              MOVEWORDS(SEQ,DOCONTENTS[CONTIND,14],1) ;                 08705000
         END ;                                                          08706000
              IF UNDERTOG THEN                                          08707000
              FIXUNDERLINE(DOCBUFF,UNDERBUFF) ;                         08708000
              IF CONSTTAB THEN                                          08709000
         BEGIN                                                          08710000
              THL~ THL+1;                                               08711000
              CLEAR(TABARR[THPOS,0],14);                                08712000
              MOVEWORDS(DOCBUFF[0],TABARR[THPOS,0],9);                  08713000
              THPOS ~ THPOS+ 1;                                         08714000
              IF THL = THLINES THEN                                     08715000
         BEGIN                                                          08716000
              CONSTTAB ~ FALSE;                                         08717000
              IF UNDERTOG THEN                                          08718000
         BEGIN                                                          08719000
              IF THPOS > 5 THEN                                         08720000
         BEGIN                                                          08721000
              DOCERROR(35);                                             08722000
              THPOS ~5;                                                 08723000
         END;                                                           08724000
              THUNDTOG~ TRUE;                                           08725000
              CLEAR (TABARR[THPOS,0],14);                               08726000
              MOVEWORDS(UNDERBUFF[0],TABARR[THPOS,0],9);                08727000
              THPOS~THPOS+1;                                            08728000
         END;                                                           08729000
         END;                                                           08730000
         END;                                                           08731000
              IF TITLETOG THEN TITLETOG ~ FALSE ELSE                    08732000
         BEGIN                                                          08733000
                   IF WIDETOG THEN                                      08734000
         BEGIN                                                          08735000
                   IF PATCHCARD OR ASTERPATCHED THEN PATCHINBUFF ~TRUE ;08736000
         END ELSE                                                       08737000
              IF NOT REMOTETOG THEN                                     08738000
         BEGIN                                                          08739000
              IF NOT FINALDOCTOG THEN                                   08740000
              MOVEWORDS(SEQ,DOCBUFF[14],1) ;                            08741000
              IF PATCHCARD THEN                                         08742000
         BEGIN                                                          08743000
              IF LEAVETOG THEN SETCHAR(DOCBUFF[9],4,PATCHLETTER) ELSE   08744000
              SETCHAR(DOCBUFF[10],0,PATCHLETTER);                       08745000
              PATCHINBUFF ~ TRUE;                                       08746000
         END ELSE                                                       08747000
              IF ASTERPATCHED THEN PATCHINBUFF~TRUE;                    08748000
         END ;                                                          08749000
              IF NOT DOCXREFTOG THEN                                    08750000
         BEGIN                                                          08751000
              IF PUNCHPAGES THEN IF LASTLINE THEN                       08752000
         BEGIN                                                          08753000
              PUNCHAFTER ~ TRUE;                                        08754000
              ASAVESEQ~ISEQ;                                            08755000
         END;                                                           08756000
              IF UNDERTOG OR NOT DOUBLETOG THEN                         08757000
              ZPL(ZF,1,DOCBUFF) ELSE                                    08758000
              ZPL(ZF,2,DOCBUFF) ;                                       08759000
              IF UNDERTOG THEN ZNOSKIP ~ TRUE;                          08760000
              IF UNDERTOG THEN IF DOUBLETOG THEN                        08761000
              ZPL(ZF,2,UNDERBUFF) ELSE                                  08762000
              ZPL(ZF,1,UNDERBUFF);                                      08763000
              ZNOSKIP ~ FALSE;                                          08764000
              IF UNDERTOG THEN                                          08765000
              UNDERTOG ~ (NUNDERLINES ~ NUNDERLINES - 1) !0 ;           08766000
         END ;                                                          08767000
         END ;                                                          08768000
              IF FIRSTCODELINE THEN                                     08769000
         BEGIN                                                          08770000
              FIRSTCODELINE ~FALSE ;                                    08771000
              MOVEWORDS(JUNKARRAY,GLOBE,10) ;                           08772000
              GO TO MORECODE ;                                          08773000
         END ;                                                          08774000
              IF ENDTOG THEN GO TO SEARCH ;                             08775000
QUITL:                                                                  08776000
              IF QUITOG THEN                                            08777000
         BEGIN                                                          08778000
INTEGER       BLOCKEXTENDER ;                                           08779000
              DOCLISTFLAG ~ FALSE ;                                     08780000
              DOCOK ~ FALSE ;                                           08781000
              IF NOT FINALDOCTOG THEN                                   08782000
              PATCHLETTER ~ "*" ;                                       08783000
              IF CONTIND = 0 OR DOCXREFTOG THEN                         08784000
              IF FINITOG THEN                                           08785000
         BEGIN                                                          08786000
              IF DOCIDTOG AND (NOT FIRSTDOCIDTOG)                       08787000
              AND (NOT LASTDOCIDTOG) THEN                               08788000
              GO TO EXIT ;                                              08789000
              GO TO MORE ;                                              08790000
         END ELSE GO TO EXIT ;                                          08791000
     IF CONTOG THEN ZF ~ ZZF;                                           08792000
              PAGETOG ~ TRUE;                                           08793000
              ZPG(ZF);                                                  08794000
              IF NOT DATOG THEN                                         08795000
              NOPAGETOG ~ TRUE;                                         08796000
              NEWDOCPAGE;                                               08797000
              PAGEQUAL ~ 2;                                             08798000
              WRITE(ZAR[*],FCONTENTS) ; ZPL(ZF,2,ZAR) ;                 08799000
              FOR I ~ 1 STEP 1 UNTIL CONTIND DO                         08800000
         BEGIN                                                          08801000
              IF DOUBLETOG THEN ZPL(ZF,2,DOCONTENTS[I,*]) ELSE          08802000
              ZPL(ZF,1,DOCONTENTS[I,*]) ;                               08803000
         END;                                                           08804000
              NEWVOL ~ TRUE;                                            08805000
              ZPG(ZF);                                                  08806000
     IF CONTOG THEN ZF ~ -1;                                            08807000
              IF FINITOG THEN                                           08808000
         BEGIN                                                          08809000
              IF DOCIDTOG AND (NOT FIRSTDOCIDTOG)                       08810000
              AND (NOT LASTDOCIDTOG) THEN                               08811000
         BEGIN                                                          08812000
              QUITOG ~ TRUE ; GO TO EXIT ;                              08813000
         END ;                                                          08814000
              GO TO MORE ;                                              08815000
         END ;                                                          08816000
              GO TO EXIT ;                                              08817000
         END ;                                                          08818000
              GO TO NEXT ;                                              08819000
EXIT:                                                                   08820000
              GO TO EOFCARD ;                                           08821000
         END PRINTDOCUMENT ;                                            08822000
COMMENT DOCUMENT* 21 * * * * * * * * * * * * * * * * * * * * * * * * *; 08823000
PROCEDURE     ASTERCONTROLS ;                                           08824000
COMMENT  SETS UP * CONTROLS FOR USE BY PRINTDOCUMENT ;                  08825000
         BEGIN                                                          08826000
LABEL         L1,MORE,NEXT,RET,L2,L3 ;                                  08827000
LABEL         MOREFORM,MOREIN ;                                         08828000
LABEL              MOREIN1 ;                                            08829000
DEFINE        SCANN = SCAN ; IF ENDCARD THEN GO TO RET # ;              08830000
DEFINE        DXREF = IF NOT DEFUSETOG THEN                             08831000
                  IF SORTSCRAMBLE THEN BUILDXREF # ;                    08832000
INTEGER       PPP ;                                                     08833000
BOOLEAN       DEFUSETOG ;                                               08834000
              IF MONITOG THEN WRITE(PRINT,MONITFORM,"ASTERC","ONTROL") ;08835000
              IF WATCHOUT THEN                                          08836000
         BEGIN                                                          08837000
              HOLDASTER ~ TRUE ;                                        08838000
              GO TO RET ;                                               08839000
         END ;                                                          08840000
              SCAN ; SCAN ;                                             08841000
              IF Q = "7INVAL" THEN                                      08842000
         BEGIN                                                          08843000
              INVTOG ~ TRUE ;                                           08844000
              FOR  IJUNK ~ 0 STEP 1 UNTIL 10 DO INVCH[IJUNK] ~ 0 ;      08845000
                   SCAN ; IF Q = "3ALL  " THEN                          08846000
                   INVALLTOG ~TRUE ELSE GO TO MOREIN1 ;                 08847000
MOREIN:       SCAN ; IF ENDCARD THEN GO TO RET ;                        08848000
MOREIN1:                                                                08849000
                IF Q = "3ALL  " THEN                                    08850000
         BEGIN                                                          08851000
               INVALLTOG ~ TRUE ; DO SCAN UNTIL ENDCARD ; GO TO RET ;   08852000
         END ;                                                          08853000
              IF RESULT ! 3 THEN GO TO MOREIN ;                         08854000
              IJUNK ~ INVCH[0] ~ INVCH[0] + 1 ;                         08855000
              DTOCT(ACCUM[1],3,INVCH[IJUNK],COUNT) ;                    08856000
              INVCH[IJUNK] ~ INVCH[IJUNK] - 1 ; GO TO MOREIN;           08857000
         END ELSE                                                       08858000
              IF Q = "4OVER " THEN                                      08859000
         BEGIN                                                          08860000
              SCAN;                                                     08861000
              ASTERTOG ~ TRUE;                                          08862000
              SKIPTOG ~ FALSE;                                          08863000
              IF Q ! "4PAGE " AND Q ! "#INSER" THEN                     08864000
              DO SCAN UNTIL ENDCARD;                                    08865000
              OVERTOG ~ TRUE;                                           08866000
              GO TO NEXT;                                               08867000
         END ELSE                                                       08868000
         BEGIN                                                          08869000
              ASTERTOG ~ TRUE ;                                         08870000
              INPARAGRAPH :=BBB;                                        08870100
              BBB ~ FALSE;                                              08871000
              CENTERTOG ~ SKIPTOG ~ PAGETOG ~ QUITOG ~ INDENTOG ~       08872000
              INDEXONLYTOG ~   % SET TO FALSE INITIALLY.                08873000
              CODECOUNTOG ~ FORMTOG ~ TABTOG ~ FALSE ;                  08874000
                   WIDETOG ~ FALSE ;                                    08875000
              DOCNAMES~FALSE;                                           08876000
              CODEPERCENTOG ~ FALSE ;                                   08877000
              INDEXFIXTOG ~ TRUE ;                                      08878000
              DOCSYNTAX ~ DOCSYNTAXONLY ~ FALSE ;                       08879000
              UNDERTOG ~ FALSE ; DOUBLETOG ~ DOUBLEONLY ;               08880000
              TITLETOG ~ INDEXTOG ~ ENDTOG ~ FALSE ;                    08881000
              PERCENTOG ~ FALSE ;   ASTERTOG ~TRUE ;                    08882000
              INSERTOG ~ FALSE ;                                        08883000
                   INVALLTOG ~ FALSE ;                                  08884000
              MISSTOG ~ FALSE ;                                         08885000
              INVTOG ~ DEFUSETOG ~ LABELUSE ~FALSE ;                    08886000
              PATTOG ~ PATBOXTOG ~FALSE ;                               08887000
              PARTOG ~ FINITOG ~ FREETOG ~FIXEDTOG ~ FALSE ;            08888000
              GLOSSTOG ~ CODETOG ~ FALSE ;                              08889000
              EPCOUNT:=0;                                               08889100
         END ;                                                          08890000
              IF RESULT !3 THEN GO TO NEXT ;                            08891000
              DTOCT(ACCUM[1],3,DOCDEFIND,COUNT) ;                       08892000
              FOR IJUNK ~ 1 STEP 1 UNTIL NDOCDEFS DO                    08893000
              IF DOCDEFLINKS[IJUNK] = DOCDEFIND THEN                    08894000
         BEGIN                                                          08895000
              DOCDEFIND ~ IJUNK ; GO TO L3 ;                            08896000
         END ;                                                          08897000
              DOCERROR(4) ;                                             08898000
              DO SCAN UNTIL ENDCARD ; GO TO RET ;                       08899000
L3:           MOVEWORDS(DOCDEFINES[DOCDEFIND,1],GLOBE[0],9) ;           08900000
              DEFUSETOG ~ TRUE ;                                        08901000
              IF NOT DOCINDEXTOG THEN                                   08902000
              IF SORTSCRAMBLE THEN BUILDXREF ;                          08903000
              IF DOCLISTOG AND DOCLISTFLAG THEN                         08904000
         BEGIN                                                          08905000
              IF REMOTETOG THEN MOVEWORDS(GLOBE[0],LISTBUFFER[0],9)ELSE 08906000
              MOVEWORDS(GLOBE[0],LISTBUFFER[2],9) ;                     08907000
              IF REMOTETOG THEN MOVEWORDS(SEQ,LISTBUFFER[9],1) ELSE     08908000
              MOVEWORDS(SEQ,LISTBUFFER[11],1) ;                         08909000
              ZPL(0,2,LISTBUFFER) ;                                     08910000
         END ;                                                          08911000
              LCR ~ MKABS(GLOBE[W]) ; NCR ~ LCR - W ;                   08912000
MORE:         SCAN ;                                                    08913000
NEXT:                                                                   08914000
              IF NOT DOCINDEXTOG THEN                                   08915000
              IF RESULT =1 THEN DXREF ;                                 08916000
              IF ASTERISK THEN GO TO MORE ;                             08917000
              IF ENDCARD THEN GO TO RET ;                               08918000
              IF Q = "6SYNTA" THEN                                      08919000
         BEGIN                                                          08920000
              DOCSYNTAX ~ TRUE ;                                        08921000
              SCAN ; IF Q ! "4ONLY " THEN GO TO NEXT ;                  08922000
              DOCSYNTAXONLY ~ TRUE ; GO TO MORE ;                       08923000
         END ;                                                          08924000
              IF Q = "4VOID " THEN                                      08925000
         BEGIN                                                          08926000
              DOCERROR(24) ; GO TO MORE ;                               08927000
         END ;                                                          08928000
                   IF Q = "4WIDE " THEN WIDETOG ~ TRUE ;                08929000
              IF Q = "8DOCPU" THEN DOCPUNCHTOG ~ TRUE ; % DOCPUNCH      08930000
              IF Q = "#NODOC" THEN DOCPUNCHTOG ~ FALSE ; % NODOCPUNCH   08931000
              IF Q = "6FORMA" OR Q = "4FORM " OR                        08932000
                  Q = "3TAB  " OR Q = "8TABUL" THEN                     08933000
         BEGIN                                                          08934000
              PARTOG ~ PATTOG ~ CENTERTOG ~ INDENTOG ~FALSE ;           08935000
              FORMTOG ~ TABTOG ~ FALSE ;                                08936000
              IF Q="6FORMA" OR Q="4FORM " THEN FORMTOG ~ TRUE ELSE      08937000
              TABTOG ~ TRUE ; NFORMTABS ~ 0 ;                           08938000
              FOR IJUNK ~ 0 STEP 1 UNTIL 50 DO FORMCOLS[IJUNK] ~ 0 ;    08939000
MOREFORM:     SCAN ;                                                    08940000
              IF ENDCARD THEN                                           08941000
         BEGIN                                                          08942000
              IF WIDETOG THEN FORMCOLS[NFORMTABS+1]~121 ELSE            08943000
              FORMCOLS[NFORMTABS+1] ~ 73 ; GO TO RET ;                  08944000
         END ;                                                          08945000
              IF RESULT =1 THEN                                         08946000
         BEGIN                                                          08947000
              IF WIDETOG THEN FORMCOLS[NFORMTABS+1]~121 ELSE            08948000
              IF REMOTETOG THEN FORMCOLS[NFORMTABS +1] ~73 ELSE         08949000
              FORMCOLS[NFORMTABS+1] ~ 76 ; GO TO NEXT ;                 08950000
         END ;                                                          08951000
              IF RESULT !3 THEN GO TO MOREFORM ;                        08952000
              NFORMTABS ~ NFORMTABS + 1 ;                               08953000
              DTOCT(ACCUM[1],3,FORMCOLS[NFORMTABS],COUNT) ;             08954000
              IF FORMCOLS[NFORMTABS] > 72 THEN                          08955000
              IF WIDETOG THEN                                           08956000
         BEGIN                                                          08957000
              IF FORMCOLS[NFORMTABS]> 120 THEN                          08958000
         BEGIN                                                          08959000
              DOCERROR(6); FORMCOLS[NFORMTABS]~120;                     08960000
              GO TO MOREFORM;                                           08961000
         END ;                                                          08962000
         END ELSE                                                       08963000
         BEGIN                                                          08964000
              DOCERROR(6) ;  FORMCOLS[NFORMTABS] ~ 72 ;                 08965000
              GO TO MOREFORM ;                                          08966000
         END ;                                                          08967000
              IF NFORMTABS > 1  AND FORMCOLS[NFORMTABS] { FORMCOLS      08968000
                  [NFORMTABS-1] THEN                                    08969000
         BEGIN                                                          08970000
              DOCERROR(7) ;                                             08971000
              FORMCOLS[NFORMTABS] ~ FORMCOLS[NFORMTABS-1] + 1 ;         08972000
              GO TO MOREFORM ;                                          08973000
         END ;                                                          08974000
              GO TO MOREFORM ;                                          08975000
         END ;                                                          08976000
              IF Q = "3REV  " THEN                                      08977000
         BEGIN                                                          08978000
              SCAN ; IF COUNT ! 1 OR RESULT !1 THEN                     08979000
              IF Q ! "1*    " THEN                                      08980000
         BEGIN                                                          08981000
              DOCERROR(23) ; GO TO NEXT ;                               08982000
         END ;                                                          08983000
              MOVECHARS(ACCUM[1],PATCHLETTER,3,7,1) ;                   08984000
              SCAN; IF Q ! "5LEAVE" THEN GO TO NEXT;                    08985000
              LEAVETOG ~ TRUE;                                          08986000
              GO TO MORE ;                                              08987000
         END ;                                                          08988000
              IF Q = "4MISS " THEN                                      08989000
         BEGIN                                                          08990000
              MISSTOG ~ TRUE ;                                          08991000
              MISSCOUNT ~ 1 ;                                           08992000
              SCAN ; IF Q = "3ALL  " THEN MISSCOUNT ~ 99999999 ELSE     08993000
              IF RESULT !3 THEN GO TO NEXT ;                            08994000
              DTOCT(ACCUM[1],3,MISSCOUNT,COUNT) ;                       08995000
              GO TO MORE ;                                              08996000
         END ELSE                                                       08997000
              IF Q="5NAMES" THEN DOCNAMES~ TRUE ELSE                    08998000
              IF Q = "7PERCE" THEN PERCENTOG ~ TRUE ;                   08999000
              IF Q = "9UNDER"THEN                                       09000000
         BEGIN                                                          09001000
              UNDERTOG ~ TRUE ; NUNDERLINES ~ 1 ; SCAN ;                09002000
              IF RESULT !3 THEN GO TO NEXT ;                            09003000
              DTOCT(ACCUM[1],3,NUNDERLINES,COUNT) ;                     09004000
              GO TO MORE ;                                              09005000
         END ;                                                          09006000
              IF Q = "6SINGL" THEN                                      09007000
         BEGIN                                                          09008000
              DOUBLETOG~ FALSE;                                         09009000
              ZSP~ZSPERM~1;                                             09010000
         END;                                                           09011000
              IF Q = "6DOUBL" THEN                                      09012000
         BEGIN                                                          09013000
              DOUBLETOG~ TRUE;                                          09014000
              ZSP~ZSPERM~2;                                             09015000
         END;                                                           09016000
              IF Q = "4DATE " THEN                                      09017000
         BEGIN                                                          09018000
              DATETOG~ TRUE ; SCAN ; IF Q !"5CLEAR" THEN GO TO NEXT ;   09019000
              DATETOG ~ FALSE ; GO TO MORE ;                            09020000
         END ;                                                          09021000
              IF Q = "4CODE " OR Q = "@CODEP" THEN                      09022000
         BEGIN                                                          09023000
              IF Q = "@CODEP"THEN CODEPERCENTOG ~ TRUE ;                09024000
              CODETOG ~ TRUE ; SCAN ; IF RESULT ! 3 THEN GO TO NEXT ;   09025000
              DTOCT(ACCUM[1],3,CODELINECOUNT,COUNT) ;                   09026000
              CODELINECOUNT ~CODELINECOUNT + 2 ;                        09027000
              CODECOUNTOG ~TRUE ; GO TO MORE ;                          09028000
         END ;                                                          09029000
              IF Q = "9NOCOD" THEN NOCODESEQ ~ TRUE ; % NOCODESEQ       09030000
              IF Q ="7CODES" THEN NOCODESEQ ~ FALSE ; % CODESEQ         09031000
              IF Q = "7PATTE" THEN                                      09032000
         BEGIN                                                          09033000
              PATTOG ~ PATBOXTOG ~TRUE ;                                09034000
              NBLBOXES ~ 0 ;                                            09035000
              SCAN ; IF Q = "4GLOS " THEN                               09036000
         BEGIN                                                          09037000
              PATBOXTOG ~ FALSE ; GO TO MORE ;                          09038000
         END ;                                                          09039000
              GO TO NEXT ;                                              09040000
         END ;                                                          09041000
              IF Q = "6DEFIN" THEN                                      09042000
         BEGIN                                                          09043000
              SCAN ; IF RESULT ! 3 THEN                                 09044000
         BEGIN                                                          09045000
              DOCERROR(2) ;                                             09046000
              DO SCAN UNTIL ENDCARD ; GO TO RET ;                       09047000
         END ;                                                          09048000
              LABELUSE ~ TRUE ;                                         09049000
              IF NOT DOCINDEXTOG THEN                                   09050000
              IF SORTSCRAMBLE THEN BUILDXREF ;                          09051000
              DTOCT(ACCUM[1],3,DOCDEFIND,COUNT) ;                       09052000
              FOR IJUNK ~ 1 STEP 1 UNTIL NDOCDEFS DO                    09053000
              IF DOCDEFLINKS[IJUNK] = DOCDEFIND THEN                    09054000
         BEGIN                                                          09055000
              DOCDEFIND ~ IJUNK ; GO TO L2 ;                            09056000
         END ;                                                          09057000
              IF (NDOCDEFS ~ NDOCDEFS + 1 ) > 100 THEN                  09058000
         BEGIN                                                          09059000
              DOCERROR(3) ;                                             09060000
              DO SCAN UNTIL ENDCARD ; GO TO RET ;                       09061000
         END ELSE                                                       09062000
         BEGIN                                                          09063000
              DOCDEFLINKS[NDOCDEFS] ~ DOCDEFIND ;                       09064000
              DOCDEFIND ~ NDOCDEFS ;                                    09065000
         END ;                                                          09066000
L2:           SCAN ; IF Q ! "1=    " THEN                               09067000
         BEGIN                                                          09068000
              DOCERROR(5) ;                                             09069000
              DO SCAN UNTIL ENDCARD ; GO TO RET ;                       09070000
         END ;                                                          09071000
              CLEAR(DOCDEFINES[DOCDEFIND,1],8) ;                        09072000
              SETCHAR(DOCDEFINES[DOCDEFIND,1],0,"*") ;                  09073000
              DOCDEFINES[DOCDEFIND,0] ~ 1 ; PPP ~ 2 ;                   09074000
              WHILE Q ! "1*    " AND NOT ENDCARD DO                     09075000
         BEGIN                                                          09076000
              SCAN ;                                                    09077000
              IF NOT DOCINDEXTOG THEN                                   09078000
              IF RESULT = 1 THEN DXREF ;                                09079000
              MOVECHARS(ACCUM[1],DOCDEFINES[DOCDEFIND,(PPP DIV 8)+1],   09080000
                    3,PPP.[45:3],COUNT);                                09081000
              PPP ~PPP + COUNT + 1 ;                                    09082000
         END ;                                                          09083000
              IF ENDCARD THEN DOCERROR(18) ;                            09084000
              IF NOT ENDCARD THEN DO SCAN UNTIL ENDCARD ; GO TO RET ;   09085000
         END ;                                                          09086000
              IF Q = "3END  " THEN                                      09087000
         BEGIN                                                          09088000
              ENDTOG ~ TRUE ; DOCLISTFLAG ~ FALSE ;                     09089000
         END ;                                                          09090000
              IF Q = "7PAGEI" THEN                                      09091000
         BEGIN                                                          09092000
              SAVEPAGEINC ~ PAGEINC ~1 ;                                09093000
              SCAN ; IF ENDCARD OR RESULT !3 THEN GO TO NEXT ;          09094000
              DTOCT(ACCUM[1],3,PAGEINC,COUNT);                          09095000
              SAVEPAGEINC~ PAGEINC ; GO TO MORE ;                       09096000
         END ;                                                          09097000
              IF Q = "6PAGEI" THEN                                      09098000
         BEGIN                                                          09099000
              INSERTROW ~FALSE;                                         09100000
              LFPAGEID ~ TRUE ; PAGEN ~ 0 ; PAGEID ~ "      " ;         09101000
              SCAN ; IF ENDCARD OR RESULT !3 THEN GO TO NEXT ;          09102000
              DTOCT(ACCUM[1],3,PAGEN,COUNT) ;                           09103000
              PAGEN ~PAGEN-PAGEINC;                                     09104000
              SCAN ; IF ENDCARD OR Q ! "1,    " THEN GO TO NEXT ;       09105000
              SCAN ; IF ENDCARD THEN GO TO NEXT ;                       09106000
              IF Q = "1+    " THEN                                      09107000
         BEGIN                                                          09108000
              LFPAGEID ~ FALSE ; SCAN ; IF ENDCARD THEN GO TO NEXT ;    09109000
         END ;                                                          09110000
              IF RESULT = 5 THEN                                        09111000
         BEGIN                                                          09112000
              IJUNK ~ IF COUNT > 7 THEN 6 ELSE COUNT - 2 ;              09113000
              MOVECHARS(ACCUM[1],PAGEID,4,2,IJUNK) ; SCAN ;             09114000
         END ;                                                          09115000
              GO TO NEXT ;                                              09116000
         END ;                                                          09117000
              IF Q = "7ENDPA"THEN % ENDPAGE                             09118000
         BEGIN                                                          09119000
              SCAN; IF RESULT ! 3 THEN GO TO NEXT ;                     09120000
              DTOCT(ACCUM[1],3,IJUNK,COUNT);                            09121000
              IF INPARAGRAPH THEN EPCOUNT:=IJUNK ELSE                   09121100
              IF MAXLINES-NLINES { IJUNK THEN                           09122000
         BEGIN                                                          09123000
              PAGETOG ~TRUE ; PAGEINC ~ SAVEPAGEINC ;                   09124000
         END ;                                                          09125000
              GO TO MORE ;                                              09126000
         END ;                                                          09127000
              IF Q = "4PAGE " THEN                                      09128000
         BEGIN                                                          09129000
              IF INSERTROW THEN PAGEN ~ SAVEPAGEN;                      09130000
              INSERTROW ~FALSE;                                         09131000
              PAGETOG~TRUE;  PAGEINC~SAVEPAGEINC; SCAN;                 09132000
              NOPAGETOG ~ FALSE ;                                       09133000
              IF Q = "2NO   " THEN                                      09134000
         BEGIN                                                          09135000
              NOPAGETOG ~ TRUE ; GO TO MORE ;                           09136000
         END ;                                                          09137000
              IF RESULT ! 3 THEN GO TO NEXT ;                           09138000
              DTOCT(ACCUM[1],3,PAGEINC,COUNT) ; GO TO MORE ;            09139000
         END ELSE                                                       09140000
              IF Q = "#INSER" THEN                                      09141000
         BEGIN                                                          09142000
              IF PAGETOG THEN DOCERROR(30) ELSE                         09143000
         BEGIN                                                          09144000
LABEL         L;                                                        09145000
              INSERTOG ~TRUE;                                           09146000
              IF NOT INSERTROW THEN SAVEPAGEN ~ PAGEN;                  09147000
              INSERTROW ~TRUE;                                          09148000
              PAGEINC ~1;                                               09149000
              SCAN; IF RESULT ! 3 THEN GO TO L;                         09150000
              DTOCT (ACCUM [1],3,PAGEN,COUNT);                          09151000
              SCAN; IF COMMA THEN SCAN; IF RESULT !3 THEN GO TO L;      09152000
              DTOCT (ACCUM [1],3,PAGEINC,COUNT);                        09153000
L:            PAGEN~PAGEN -PAGEINC; GO TO NEXT;                         09154000
         END;                                                           09155000
         END ELSE                                                       09156000
              IF Q = "8DECIM" THEN                                      09157000
         BEGIN                                                          09158000
              DECIMALSTOG ~TRUE;                                        09159000
              SUPPRESSTOG ~ FALSE;                                      09160000
              PLACES ~2;                                                09161000
              SCAN; IF Q = "2NO   " THEN                                09162000
         BEGIN                                                          09163000
              DECIMALSTOG ~ FALSE;                                      09164000
              GO TO MORE;                                               09165000
         END ELSE                                                       09166000
              IF RESULT = 3 THEN                                        09167000
         BEGIN                                                          09168000
              DTOCT (ACCUM[1],3,PLACES,COUNT);                          09169000
              SCAN;                                                     09170000
         END;                                                           09171000
              IF Q ! "8SUPPR" THEN GO TO NEXT;                          09172000
              SUPPRESSTOG ~ TRUE;                                       09173000
              GO TO MORE;                                               09174000
         END ELSE                                                       09175000
              IF Q = "8REVIS"  THEN                                     09176000
         BEGIN                                                          09177000
              REVTOG ~ TRUE;                                            09178000
              DOCREV~ 1;                                                09179000
              SCAN; IF Q = "5CLEAR" THEN                                09180000
         BEGIN                                                          09181000
              REVTOG~ FALSE; SCAN;                                      09182000
         END;                                                           09183000
              IF RESULT = 3 THEN                                        09184000
         BEGIN                                                          09185000
              DTOCT(ACCUM[1],3,DOCREV,COUNT);                           09186000
              IF DOCREV > 100 THEN ERROR(29);                           09187000
              SCAN;                                                     09188000
         END;                                                           09189000
              FILL REVB[*] WITH OCT6060512565606060;                    09190000
              MOVECHARS (REVISIONS [DOCREV],REVB[0],6,6,2);             09191000
              GO TO NEXT;                                               09192000
         END;                                                           09193000
              IF Q="6CENTR" OR Q="6CENTE" THEN CENTERTOG ~ TRUE ELSE    09194000
              IF Q = "4QUIT " THEN                                      09195000
         BEGIN                                                          09196000
              QUITOG ~TRUE ; GO TO RET ;                                09197000
         END ELSE                                                       09198000
              IF Q = "6FINIS" THEN                                      09199000
         BEGIN                                                          09200000
              QUITOG ~ FINITOG ~ TRUE ; GO TO RET ;                     09201000
         END ELSE                                                       09202000
              IF Q = "5INDEX" THEN                                      09203000
         BEGIN                                                          09204000
              NINDEXLINES ~ 1 ; INDEXTOG ~TRUE ;                        09205000
              IF CENTERTOG OR INDENTOG OR CODETOG THEN                  09206000
                  INDEXFIXTOG ~ FALSE ;                                 09207000
              SCAN; IF RESULT =3 THEN                                   09208000
         BEGIN                                                          09209000
              DTOCT(ACCUM[1],3,NINDEXLINES,COUNT);                      09210000
              SCAN;                                                     09211000
         END ;                                                          09212000
              IF Q ! "5WORDS" THEN                                      09213000
         BEGIN                                                          09214000
              INDEXWORDS~0;                                             09215000
              GO TO NEXT ;                                              09216000
         END ;                                                          09217000
              SCAN; IF RESULT ! 3 THEN INDEXWORDS~1 ELSE                09218000
         BEGIN                                                          09219000
              DTOCT(ACCUM[1],3,INDEXWORDS,COUNT);                       09220000
         END ;                                                          09221000
              IF INDEXWORDS>63 THEN INDEXWORDS~63;                      09222000
              GO TO NEXT ;                                              09223000
         END ;                                                          09224000
              IF Q ="7TABHE" THEN                                       09225000
         BEGIN                                                          09226000
              THUNDTOG ~ FALSE;                                         09227000
              SCAN; IF Q = "5CLEAR" THEN                                09228000
         BEGIN                                                          09229000
              SCAN ; IF RESULT ! 3 THEN                                 09230000
         BEGIN                                                          09231000
              TABHEAD~FALSE;                                            09232000
              FOR IJUNK~0 STEP 1 UNTIL 5 DO                             09233000
                 CLEAR(TABARR[IJUNK,0],14);                             09234000
              GO TO NEXT                                                09235000
         END ;                                                          09236000
              DTOCT(ACCUM[1],3,IJUNK,COUNT);                            09237000
              IF IJUNK GTR 6 THEN                                       09237100
         BEGIN
              DOCERROR(35); IJUNK:=6;
         END ;                                                          09237100
              THPOS ~ IJUNK-1;                                          09238000
              FOR IJUNK~IJUNK-1 STEP 1 UNTIL 5 DO                       09239000
                 CLEAR(TABARR[IJUNK,0],14);                             09240000
              GO TO MORE ;                                              09241000
         END;                                                           09242000
              TABHEAD~CONSTTAB~TRUE;                                    09243000
              THL~0; THLINES~1;                                         09244000
              THPOS ~ 0;                                                09245000
              IF RESULT ! 3 THEN GO TO NEXT;                            09246000
              DTOCT(ACCUM[1],3,THLINES,COUNT);                          09247000
              IF THLINES > 6 THEN                                       09248000
         BEGIN                                                          09249000
              DOCERROR(35);                                             09250000
              THLINES ~ 6;                                              09251000
         END;                                                           09252000
              SCAN; IF Q ! "1,    " THEN GO TO NEXT;                    09253000
              SCAN; IF RESULT ! 3 THEN GO TO NEXT;                      09254000
              DTOCT(ACCUM[1],3,THPOS,COUNT);                            09255000
              IF THPOS < 1 THEN                                         09256000
         BEGIN                                                          09257000
              DOCERROR(16);                                             09258000
              THPOS ~ 1;                                                09259000
         END ;                                                          09260000
              THPOS ~ THPOS -1;                                         09261000
              IF THPOS+THLINES > 6 THEN                                 09262000
         BEGIN                                                          09263000
              IF THPOS } 5 THEN CONSTTAB ~ FALSE                        09264000
                 ELSE THLINES ~ 6-THPOS ;                               09265000
              DOCERROR(35);                                             09266000
         END;                                                           09267000
              GO TO MORE;                                               09268000
         END;                                                           09269000
              IF Q = "5TITLE" THEN                                      09270000
         BEGIN                                                          09271000
              TUNDERTOG ~ UNDERTOG ;                                    09272000
              TITLETOG ~ TRUE ; CLEARTITLETOG ~ FALSE ; SCANN ;         09273000
              IF Q = "5CLEAR" THEN                                      09274000
         BEGIN                                                          09275000
              TUNDERTOG ~ FALSE ;                                       09276000
              TITLECHANGE ~ FALSE ;                                     09277000
              CLEARTITLETOG ~ TRUE ; TITLETOG ~ FALSE ; GO TO MORE ;    09278000
         END ;                                                          09279000
              IF RESULT ! 3 THEN GO TO NEXT ;                           09280000
              INDENTOG ~TRUE ;                                          09281000
              DTOCT(ACCUM[1],3,INDENTVAL,COUNT) ; GO TO MORE ;          09282000
         END ;                                                          09283000
              IF Q = "3PAR  " THEN                                      09284000
         BEGIN                                                          09285000
              PARIDTOG ~ SAVEPARIDTOG ;                                 09286000
              PARINDENT ~ SAVEPARINDENT ;                               09287000
              PARTOG ~ TRUE ; PARLOW ~ PLSAVE ; PARHIGH ~ PHSAVE ;      09288000
         END ELSE                                                       09289000
              IF Q = "9PARAG" THEN                                      09290000
         BEGIN                                                          09291000
              PARIDTOG ~ SAVEPARIDTOG ~ FALSE ;                         09292000
              PARINDENT ~ SAVEPARINDENT ~ 6 ;                           09293000
              PLSAVE ~ PARLOW ~ 0 ; PHSAVE ~ PARHIGH ~ 71 ;             09294000
              PARTOG ~ TRUE ; SCAN ;                                    09295000
              IF MINUS THEN                                             09296000
         BEGIN                                                          09297000
              PARIDTOG ~ SAVEPARIDTOG ~ TRUE ; SCAN ;                   09298000
         END ;                                                          09299000
              IF RESULT ! 3 THEN GO TO NEXT ;                           09300000
              DTOCT(ACCUM[1],3,PARLOW,COUNT) ; SCAN ;                   09301000
              PLSAVE ~ PARLOW ~ PARLOW - 1 ;                            09302000
              IF Q ! "1,    " THEN GO TO NEXT ; SCAN ;                  09303000
              IF RESULT ! 3 THEN GO TO NEXT ;                           09304000
              DTOCT(ACCUM[1],3,PARHIGH,COUNT) ;                         09305000
              PHSAVE ~ PARHIGH ~ PARHIGH - 1 ;                          09306000
              IF PARHIGH > 72 OR PARHIGH { PARLOW THEN                  09307000
         BEGIN                                                          09308000
              DOCERROR( 1) ; PHSAVE ~ PARHIGH ~ 72 ;                    09309000
               PLSAVE:=PARLOW:=0;                                       09309100
         END ;                                                          09310000
              SCAN ; IF Q ! "1,    " THEN GO TO NEXT ; SCAN ;           09311000
              IF RESULT !3 THEN GO TO NEXT ;                            09312000
              DTOCT(ACCUM[1],3,PARINDENT,COUNT) ;                       09313000
              IF PARINDENT GTR PARHIGH THEN                             09313100
         BEGIN
              DOCERROR(45);
              PARINDENT:=0;
         END;                                                           09313100
              SAVEPARINDENT ~ PARINDENT ;                               09314000
              GO TO MORE ;                                              09315000
         END ;                                                          09316000
              IF Q = "4GLOS " THEN                                      09317000
         BEGIN                                                          09318000
              PARTOG ~ GLOSSTOG ~ TRUE ; INDENTVAL ~ GINDSAVE ;         09319000
              PARLOW ~ GLSAVE ; PARHIGH ~ GHSAVE ;                      09320000
         END ELSE                                                       09321000
              IF Q = "8GLOSS" THEN                                      09322000
         BEGIN                                                          09323000
              GINDSAVE ~ INDENTVAL ~ 0 ; GLSAVE ~ PARLOW ~ 0 ;          09324000
              GHSAVE ~ PARHIGH ~ 72 ;                                   09325000
              PARTOG ~ GLOSSTOG ~ TRUE ; SCAN ;                         09326000
              IF RESULT ! 3 THEN                                        09327000
         BEGIN                                                          09328000
              GLOSSTOG ~ FALSE ; GO TO NEXT ;                           09329000
         END ;                                                          09330000
              DTOCT(ACCUM[1],3,INDENTVAL,COUNT) ; SCAN ;                09331000
              GINDSAVE ~ INDENTVAL ~ INDENTVAL - 1 ;                    09332000
              IF NOT COMMA THEN GO TO NEXT ; SCAN ;                     09333000
              IF RESULT ! 3 THEN GO TO NEXT ;                           09334000
              DTOCT(ACCUM[1],3,PARLOW,COUNT); SCAN ;                    09335000
              GLSAVE ~ PARLOW ~ PARLOW - 1 ;                            09336000
              IF NOT COMMA THEN GO TO NEXT ; SCAN ;                     09337000
              IF RESULT ! 3 THEN GO TO NEXT ;                           09338000
              DTOCT(ACCUM[1],3,PARHIGH,COUNT) ;                         09339000
              GHSAVE ~ PARHIGH ;                                        09340000
              IF PARHIGH > 72 OR PARHIGH { PARLOW THEN                  09341000
         BEGIN                                                          09342000
              DOCERROR( 1) ; GHSAVE ~ PARHIGH ~ 72 ;                    09343000
              GLSAVE:=PARLOW:=0;                                        09343100
         END ;                                                          09344000
              IF INDENTVAL GTR PARHIGH THEN                             09344100
         BEGIN
              DOCERROR(45);
              GINDSAVE:=INDENTVAL:=0;
         END;                                                           09344100
              GO TO MORE ;                                              09345000
         END ;                                                          09346000
              IF Q = "4SKIP " THEN                                      09347000
         BEGIN                                                          09348000
              SKIPVAL ~ 1 ;                                             09349000
              SKIPTOG ~TRUE ; SCAN ; IF RESULT ! 3 THEN GO TO NEXT ;    09350000
              DTOCT(ACCUM[1],3,SKIPVAL,COUNT) ; GO TO MORE ;            09351000
         END ELSE                                                       09352000
              IF Q = "6INDEN" THEN                                      09353000
         BEGIN                                                          09354000
              INDENTVAL ~0 ;                                            09355000
              INDENTOG ~ TRUE ; SCAN ; IF RESULT ! 3 THEN GO TO NEXT ;  09356000
              DTOCT(ACCUM[1],3,INDENTVAL,COUNT) ; GO TO MORE ;          09357000
         END ;                                                          09358000
              IF Q = "4ONLY " AND INDEXTOG AND NOT INDEXFIXTOG  THEN    09359000
                   INDEXONLYTOG ~ TRUE ;  %  "INDENT INDEX ONLY" SEEN.  09360000
              GO TO MORE ;                                              09361000
RET:                                                                    09362000
              INPARAGRAPH:=FALSE;                                       09362100
              IF MONITOG THEN WRITE(PRINT,MONITFORM,"EXIT A","STERCN");
         END ASTERCONTROLS ;                                            09362200
COMMENT DOCUMENT* 5 * * * * * * * * * * * * * * * * * * * * * * * * *   09363000
J. CONTROL PROCEDURES.                                                  09364000
* END;                                                                  09365000
COMMENT DOCUMENT* 21 * * * * * * * * * * * * * * * * * * * * * * * * ;  09366000
PROCEDURE     COPY ;                                                    09367000
COMMENT  COPIES TAPES OR CAST FILES ;                                   09368000
         BEGIN                                                          09369000
LABEL         EOFC,EOFT,EOFCA ;                                         09370000
INTEGER       I ;                                                       09371000
              DO READ(CARDS)[EOFC] UNTIL FALSE ;                        09372000
EOFC:         CLOSE(CARDS,RELEASE) ;                                    09373000
              CLEAR(TBUFF,14) ; CLEAR(CASTBUFF,56) ;                    09374000
              IF TAPETOG THEN                                           09375000
         BEGIN                                                          09376000
      DO BEGIN                                                          09377000
              READ(SWIN,10,TBUFF[*])[EOFT] ;                            09378000
              WRITE(SWOUT,10,TBUFF[*]) ;                                09379000
              IF LISTOG THEN ZPL(0,2,TBUFF) ;                           09380000
         END UNTIL FALSE ;                                              09381000
EOFT:         REWIND(SWOUT) ;                                           09382000
              LOCK(SWOUT,RELEASE) ;                                     09383000
         END ELSE                                                       09384000
         BEGIN                                                          09385000
      DO BEGIN                                                          09386000
              READ(CASTSW[CASTINDEX],56,CASTBUFF[*])[EOFCA];            09387000
              WRITE(CASTOUT[CASTINDEX],56,CASTBUFF[*]) ;                09388000
              IF LISTOG THEN                                            09389000
              FOR I ~ 1 STEP 11 UNTIL 45 DO                             09390000
         BEGIN                                                          09391000
              MOVEWORDS(CASTBUFF[I],TBUFF,10) ;                         09392000
              ZPL(0,2,TBUFF);                                           09393000
         END ;                                                          09394000
         END UNTIL FALSE ;                                              09395000
EOFCA:   END ;                                                          09396000
              IF TAPETOG THEN CLOSE(SWOUT,RELEASE) ELSE                 09397000
                 CLOSE(CASTOUT[CASTINDEX],RELEASE);                     09398000
              GO TO EOPROG ;                                            09399000
         END COPY ;                                                     09400000
COMMENT DOCUMENT* 21 * * * * * * * * * * * * * * * * * * * * * * * * *; 09401000
PROCEDURE     SETUPCONTROLS ;                                           09402000
COMMENT  SETS UP CONTROLS BASED ON READING DOLLAR CONTROL CARDS ;       09403000
         BEGIN                                                          09404000
LABEL         L2,L4,RETURN,EOFERR,L5 ;                                  09405000
LABEL         L3 ;                                                      09406000
LABEL         L6,L7,L8;                                                 09407000
LABEL         SL1,SL2;                                                  09408000
LABEL         SL3 ;                                                     09409000
LABEL         LOUT;                                                     09410000
BOOLEAN       SCANFLAG ;                                                09411000
BOOLEAN       TEMPTOG;                                                  09412000
DEFINE        SCEN = BEGIN SCAN ; IF PERCENT OR ENDCARD THEN            09413000
              GO TO RETURN ; END # ;                                    09414000
              IF MONITOG THEN WRITE(PRINT,MONITFORM,"SETUPC","ONTROL") ;09415000
              SCANFLAG ~ FALSE ;                                        09416000
              IF LOOKFORDOLLAR THEN                                     09417000
         BEGIN                                                          09418000
              MOVEWORDS(GLOBE[0],SAVEBUF[0],10);                        09419000
              CLEAR(LISTBUFFER,14);                                     09420000
              MOVEWORDS(GLOBE,LISTBUFFER,9);                            09421000
              FOR I ~ 8 STEP - 1 UNTIL 0 DO                             09422000
              IF BLANKTEST (SAVEBUF[I],1) THEN                          09423000
         BEGIN                                                          09424000
              SETCHAR(SAVEBUF[I+1],0,"~");                              09425000
              GO TO LOUT;                                               09426000
         END;                                                           09427000
LOUT:                                                                   09428000
              WRITE(SPOOUT,10,SAVEBUF[*]);                              09429000
              LOOKFORDOLLAR ~ FALSE ; FIRSTDOLLAR ~ TRUE ;              09430000
         END ELSE                                                       09431000
         BEGIN                                                          09432000
              TEMPTOG ~ FIRSTDOLLAR;                                    09433000
              FIRSTDOLLAR ~ FALSE ;                                     09434000
              SCAN ;   SCAN ;                                           09435000
              IF Q = "4VOID " THEN                                      09436000
         BEGIN                                                          09437000
              IF TEMPTOG THEN IF NOT BLANKTEST(GLOBE[9],1) OR           09438000
                 (ISEQ = 0) THEN ERROR(34);                             09439000
              VOIDTOG ~ TRUE ; SCAN ;                                   09440000
              IF LISTOG OR LISTTOBACKUPTOG OR (DOCLISTOG AND            09441000
                   BLOCKTOG) OR ( DOCLISTOG AND DOCLISTFLAG) THEN       09442000
              ZPG(ZLB) ;                                                09443000
              IF RESULT ! 3 OR ENDTOG THEN ERROR(15) ;                  09444000
              DTOCT(ACCUM[1],3,JUNK   ,COUNT) ;                         09445000
              OCTTODEC(JUNK,VOIDSEQ) ;                                  09446000
              Q:=ACCUM[1]:="1%    ";                                    09446100
              RESULT:=2; COUNT :=1;                                     09446200
              IF JUNK = 99999999 THEN GO TO EOFCARD ;                   09447000
              WHILE VOIDTOG DO READATAPE;                               09448000
              GO TO RETURN;                                             09449000
         END ELSE                                                       09450000
         BEGIN                                                          09451000
              CLEAR(LISTBUFFER,14) ;                                    09452000
              MOVEWORDS(GLOBE,LISTBUFFER,9) ;                           09453000
              WRITE(PRINT[DBL],15,LISTBUFFER[*]) ;                      09454000
              CLEAR(LISTBUFFER,14) ;                                    09455000
              IF NOT ENDCARD THEN READATAPE ;                           09456000
              SCAN ; GO TO RETURN ;                                     09457000
         END ;                                                          09458000
              TEMPTOG ~ FALSE;                                          09459000
         END ;                                                          09460000
              SCAN ; SCAN ;                                             09461000
              IF Q = "4VOID " THEN IF CHECKCHAR(GLOBE[9],7," ") THEN    09462000
               ERROR(34) ELSE ERROR(33);                                09463000
              IF Q = "4COPY "THEN                                       09464000
         BEGIN                                                          09465000
INTEGER BLOCKEXTENDER ;                                                 09465100
              SETCHAR(GLOBE[8],0,"$") ;                                 09466000
              COPYTOG ~ TRUE ; SCAN ;                                   09467000
              IF Q = "4TAPE " THEN                                      09468000
         BEGIN                                                          09469000
              TAPETOG ~ TRUE ; SWFININD ~ 0 ; SWFOUTIND ~ 0 ;           09470000
              SCAN ; IF Q="4DISK " OR Q="4DISC " THEN SWFOUTIND~1       09471000
                ELSE IF Q="4LIST " THEN LISTOG ~ TRUE ;                 09472000
         END ELSE                                                       09473000
              IF Q = "4DISK " OR Q = "4DISC " THEN                      09474000
         BEGIN                                                          09475000
              TAPETOG ~ TRUE ; SWFININD ~ 1 ; SWFOUTIND ~ 0 ;           09476000
         END ELSE                                                       09477000
              IF Q = "4CAST "THEN                                       09478000
         BEGIN                                                          09479000
              SCAN ; IF Q = "1A    " OR Q = "1B    " OR Q = "1C    "    09480000
              THEN CASTINDEX ~ Q.[18:6] - 17 ELSE ERROR(2) ;            09481000
         END ELSE ERROR(19) ;                                           09482000
              SCAN ; IF Q = "4LIST " THEN LISTOG ~ TRUE ;               09483000
              GO TO RETURN ;                                            09484000
         END ;                                                          09485000
          IF NOT(Q = "4CAST " OR Q = "4CARD " OR Q = "4TAPE " OR        09486000
              Q = "5MERGE" OR                                           09487000
                Q = "7MAKEM" OR Q = "9MAKEM" OR                         09488000
                 Q = "9PATCH" OR                                        09489000
                 Q = "4DISK " OR Q = "4DISC " OR                        09490000
                  Q = "6BACKU"  OR Q = "5LOGIC" ) THEN ERROR(16) ;      09491000
              ONLYTOG ~ FALSE;                                          09492000
              IF Q = "4CAST " THEN GO TO L5 ;                           09493000
              IF Q = "5MERGE" THEN                                      09494000
         BEGIN                                                          09495000
INTEGER       BLOCKEXTENDER;                                            09496000
LABEL         L6,L7,L8;                                                 09497000
              MERGETOG ~ TRUE; HOLDOFFTOG ~ OLDONLYTOG~FALSE;           09498000
L6:                                                                     09499000
              SCAN;                                                     09500000
L7:                                                                     09501000
              IF ENDCARD THEN GO TO RETURN;                             09502000
              IF Q = "6BACKU" THEN                                      09503000
         BEGIN                                                          09504000
              IF PRINTALLTOG THEN                                       09505000
         BEGIN                                                          09506000
              DOCERROR (31);                                            09507000
              GO TO L6;                                                 09508000
         END;                                                           09509000
              BACKIND ~ 1;                                              09510000
              SCAN; IF Q = "4DISK"  THEN                                09511000
         BEGIN                                                          09512000
              SCAN; BACKIND ~ 0;                                        09513000
         END;                                                           09514000
              BACKUPTOG ~ SAVEBACKUPTOG ~ TRUE;                         09515000
              GO TO L7;                                                 09516000
         END ELSE                                                       09517000
              IF Q = "5PRINT" THEN PRINTOG ~ TRUE ELSE                  09518000
              IF Q= "4DUMP " THEN DUMPFLAG ~ TRUE ELSE                  09519000
              IF Q= "4BUGS " THEN BUILDEBUG ~ TRUE ELSE                 09520000
              IF Q= "4LIST " THEN                                       09521000
         BEGIN                                                          09522000
              PRINTINFOPAGE(0);                                         09523000
         END ELSE                                                       09524000
              IF Q = "5TITLE" THEN TITLETOG ~ TRUE ELSE                 09525000
              IF Q = "6SINGL" THEN DOUBLEONLY ~ FALSE ELSE              09526000
              IF Q = "3SIX  " THEN                                      09527000
         BEGIN                                                          09528000
              DOUBLEONLY ~ FALSE;                                       09529000
              ZLCOUNTMAX~56;                                            09530000
              SIXLINES ~ TRUE;                                          09531000
              SCAN; IF RESULT =3 THEN                                   09532000
         BEGIN                                                          09533000
              DTOCT(ACCUM[1],3,IJUNK,COUNT);                            09534000
              IF IJUNK<66 THEN ZLCOUNTMAX~IJUNK ELSE DOCERROR(21);      09535000
              SCAN;                                                     09536000
         END ;                                                          09537000
              IF Q = "6DOUBL" THEN DOUBLEONLY ~ TRUE;                   09538000
              GO TO L7;                                                 09539000
         END ELSE                                                       09540000
              IF Q ="5EIGHT" THEN                                       09541000
         BEGIN                                                          09542000
              SCAN;                                                     09543000
              IF RESULT ! 3 THEN GO TO L7;                              09544000
              DTOCT(ACCUM[1],3,IJUNK,COUNT);                            09545000
              IF IJUNK<88 THEN ZLCOUNTMAX~IJUNK ELSE DOCERROR(21);      09546000
              % RIDICULOUS LINE COUNT                                   09547000
         END ELSE                                                       09548000
              IF Q = "8DOCDE" THEN DOCDEBUG ~ TRUE ELSE                 09549000
              IF Q = "5DEBUG" THEN DEBUG ~TRUE ELSE                     09550000
              IF Q = "7MONIT" THEN MONITOG ~ TRUE ELSE                  09551000
              IF Q = "9DIREC" THEN                                      09552000
         BEGIN                                                          09553000
              DIRTOG ~ TRUE;                                            09554000
              DIRONLYTOG ~ FALSE;                                       09555000
              SCAN;                                                     09556000
              IF Q = "4ONLY " THEN                                      09557000
         BEGIN                                                          09558000
              DIRONLYTOG ~ TRUE;                                        09559000
              SCAN;                                                     09560000
         END;                                                           09561000
              GO TO L7;                                                 09562000
         END ELSE                                                       09563000
              IF Q = "8PRINT" THEN                                      09564000
         BEGIN                                                          09565000
              IF BACKUPTOG THEN DOCERROR (31);                          09566000
              BACKUPTOG ~ SAVEBACKUPTOG ~ FALSE;                        09567000
              PRINTALLTOG ~ HOLDOFFTOG ~ TRUE;                          09568000
              SCAN;                                                     09569000
              IF Q = "4ONLY " THEN                                      09570000
         BEGIN                                                          09571000
              OLDONLYTOG ~ TRUE;                                        09572000
              BACKIND~ 3;                                               09573000
              SCAN;                                                     09574000
         END ELSE BACKIND ~ 4;                                          09575000
              GO TO L7;                                                 09576000
         END ELSE                                                       09577000
              IF Q = "@PRINT" THEN                                      09578000
         BEGIN                                                          09579000
              PRINTSELECTOG ~ HOLDOFFTOG ~ TRUE;                        09580000
L8:           SCAN; IF Q = "1$    " THEN                                09581000
         BEGIN                                                          09582000
              CONTCARD ~ TRUE; READATAPE; SCAN;                         09583000
              IF Q ! "1$    " THEN ERROR(7);                            09584000
         END;                                                           09585000
              IF Q = "1,    " THEN SCAN;                                09586000
              IF ENDCARD THEN GO TO RETURN;                             09587000
              IF Q ="1*    " THEN                                       09588000
         BEGIN                                                          09589000
              SCAN;  IF Q = "4ONLY " THEN                               09590000
         BEGIN                                                          09591000
              OLDONLYTOG ~ TRUE;                                        09592000
              SCAN;                                                     09593000
         END;                                                           09594000
              GO TO L7;                                                 09595000
         END;                                                           09596000
              IF RESULT ! 3 THEN                                        09597000
         BEGIN                                                          09598000
              DOCERROR (32);                                            09599000
              GO TO L8;                                                 09600000
         END;                                                           09601000
              DTOCT (ACCUM[1],3,IJUNK,COUNT);                           09602000
              PAGEPOINT ~ PAGEPOINT + 1;                                09603000
              PAGES [PAGEPOINT] ~ IJUNK;                                09604000
              GO TO L8;                                                 09605000
         END;                                                           09606000
              IF Q = "8DEBEA"   THEN DEBEATLETOG ~ TRUE;                09607000
              IF Q = "2DA   " THEN DATOG ~ TRUE;                        09608000
              GO TO L6;                                                 09609000
         END ELSE                                                       09610000
              IF Q = "7MAKEM" OR Q = "9MAKEM" THEN                      09611000
         BEGIN                                                          09612000
INTEGER       BLOCKEXTENDER;                                            09613000
LABEL         L9;                                                       09614000
DEFINE        CHECKEND = IF FINDCHAR(NCR,"%") THEN GO TO RETURN#;       09615000
              MAKEMULTOG~ TRUE;                                         09616000
              ALLONE ~ FALSE;                                           09617000
              SCAN;                                                     09618000
              IF Q = "4DISK " OR Q = "4DISC " THEN DISKOUTOG~ TRUE ELSE 09619000
              IF Q = "4TAPE " THEN DISKOUTOG ~ FALSE ELSE               09620000
              ERROR(30);                                                09621000
              IF ENDCARD THEN GO TO RETURN;                             09622000
              CHECKEND;                                                 09623000
              SCAN; IF Q = "4DISK " OR Q = "4DISC " OR                  09624000
              Q = "4TAPE " THEN                                         09625000
         BEGIN                                                          09626000
              ALLONE ~ TRUE;                                            09627000
            IF Q = "4TAPE " THEN DISKINTOG ~FALSE ELSE DISKINTOG~TRUE;  09628000
              CHECKEND;                                                 09629000
              SCAN;                                                     09630000
         END;                                                           09631000
L9:                                                                     09632000
              IF ENDCARD THEN GO TO RETURN;                             09633000
              IF Q = "4LIST " THEN                                      09634000
         BEGIN                                                          09635000
              LISTOG ~ TRUE;                                            09636000
              PRINTINFOPAGE(0);                                         09637000
              CHECKEND;                                                 09638000
              SCAN;                                                     09639000
              IF Q = "4ONLY " THEN                                      09640000
         BEGIN                                                          09641000
              LISTONLYTOG ~ TRUE;                                       09642000
              CHECKEND;                                                 09643000
              SCAN;                                                     09644000
         END;                                                           09645000
         END;                                                           09646000
              IF  Q= "9DIREC" THEN                                      09647000
         BEGIN                                                          09648000
              DIRTOG ~ TRUE;                                            09649000
              CHECKEND;                                                 09650000
              SCAN;                                                     09651000
         END;                                                           09652000
              IF Q = "5PUNCH" THEN                                      09653000
         BEGIN                                                          09654000
              PUNCHTOG ~ TRUE;                                          09655000
              CHECKEND;                                                 09656000
              SCAN;                                                     09657000
         END;                                                           09658000
              GO TO L9;                                                 09659000
         END;                                                           09660000
              IF Q = "6BACKU" THEN                                      09661000
         BEGIN                                                          09662000
              BACKIND ~ 5;                                              09663000
              SCAN;  IF Q = "4DISK " OR Q = "4DISC " THEN               09664000
         BEGIN                                                          09665000
              BACKIND ~2;                                               09666000
              SCAN;                                                     09667000
         END;                                                           09668000
              PBACKONLY ~TRUE;                                          09669000
              IF RESULT !3 THEN NOBACKUPRINTS  ~ 1 ELSE                 09670000
              DTOCT(ACCUM[1],3,NOBACKUPRINTS,COUNT) ;                   09671000
              DO READATAPE UNTIL FALSE ;                                09672000
         END ;                                                          09673000
              IF Q = "4TAPE " THEN                                      09674000
         BEGIN                                                          09675000
              TAPETOG ~ TRUE ; SWFININD ~ 0 ; SWFOUTIND ~ 0 ;           09676000
         END ELSE                                                       09677000
              IF Q = "4DISK " OR Q = "4DISC " THEN                      09678000
         BEGIN                                                          09679000
              TAPETOG ~ TRUE ; SWFININD ~ 1 ; SWFOUTIND ~ 0 ;           09680000
         END ELSE                                                       09681000
              IF Q = "9PATCH" THEN      % "PATCHTAPE"                   09682000
         BEGIN                                                          09683000
              TAPETOG ~ TRUE;                                           09684000
              SWFININD ~4; SWFOUTIND ~0;                                09685000
         END;                                                           09686000
              IF NOT (Q="4TAPE " OR Q = "4DISK " OR Q = "4DISC " OR     09687000
                 Q = "9PATCH" ) THEN GO TO L4;                          09688000
              CLEAR (LTSEQ,1);                                          09689000
              READ (SWIN,10,TBUFF[*]) [EOFERR];                         09690000
              TAPETOG ~ TRUE ;                                          09691000
              IF MONITOG THEN WRITE(PRINT,15,TBUFF[*]) ;                09692000
              GO TO L2;                                                 09693000
EOFERR:                                                                 09694000
L2:           IF ENDCARD THEN GO TO RETURN;                             09695000
              SCAN;                                                     09696000
L4:           IF ENDCARD THEN GO TO RETURN ;                            09697000
              CONTCARD ~ FALSE ;                                        09698000
              IF Q = "1%    " THEN GO TO RETURN ;                       09699000
              IF Q = "4CARD " THEN PATCHLETTER ~ " " ;                  09700000
              IF Q = "4TAPE " THEN                                      09701000
         BEGIN                                                          09702000
              TAPETOG ~ TRUE ; SWFININD ~ 0 ; SWFOUTIND ~ 0 ;           09703000
         END ELSE                                                       09704000
              IF Q = "4DISK " OR Q = "4DISC " THEN                      09705000
         BEGIN                                                          09706000
              TAPETOG ~ TRUE ; SWFININD ~ 1 ; SWFOUTIND ~ 0 ;           09707000
         END ;                                                          09708000
              IF Q = "5DEBUG" THEN DEBUG ~ TRUE ;                       09709000
              IF Q = "6REMOT" THEN REMOTETOG ~TRUE ;                    09710000
              IF Q = "2OP   " OR Q = "3OPS  " THEN B35OPTOG ~ TRUE;     09711000
              IF Q = "4GLYN " THEN GLYNTOG ~ TRUE ;                     09712000
              IF Q = "7DEBLA" THEN DEBLANKTOG ~ TRUE ;                  09713000
              IF  Q = "4ONLY " THEN ONLYTOG ~ TRUE ;                    09714000
              IF Q = "9PROCP" THEN PROCPUNCH ~TRUE ELSE                 09715000
              IF Q = "7DOCON" THEN DOCONLY ~ TRUE ;                     09716000
              IF Q = "5IRBUG" THEN IRBUG ~ TRUE ;                       09717000
              IF Q = "7SORTB" THEN SORTBUG ~ TRUE ;                     09718000
              IF Q = "8DOCDE" THEN DOCDEBUG ~TRUE ;                     09719000
              IF Q="8DOCIN" THEN DOCINDEXTOG~TRUE;                      09720000
              IF Q = "@TAPEP" THEN     % "TAPEPATCHES"                  09721000
         BEGIN                                                          09722000
              IF SWFININD =4 THEN ERROR(38);                            09723000
              TAPEPATCHES ~ TRUE;                                       09724000
              PATCHIND ~ 1;                                             09725000
         END;                                                           09726000
              IF Q = "5PATCH" AND TAPETOG THEN                          09727000
         BEGIN                                                          09728000
              IF SELECTIVEXREF THEN ERROR(32);                          09729000
              SELECTIVEXREF ~ TRUE;                                     09730000
              PATCHTOG ~ TRUE;                                          09731000
         END;                                                           09732000
              IF  Q = "6ASSIG" THEN ASSIGNTOG ~ TRUE ;                  09733000
              IF Q = "4MAKE " THEN                                      09734000
         BEGIN                                                          09735000
              MAKETOG ~ TRUE ; SCAN ;                                   09736000
              IF Q = "6IRFIL" THEN                                      09737000
         BEGIN                                                          09738000
              NUMBERTOG ~TRUE ;                                         09739000
              MAKEIRTOG ~ TRUE ; BIGTOG ~ TRUE ;                        09740000
              IF NOT FINDCHAR(NCR,"%")THEN                              09741000
         BEGIN                                                          09742000
              SCAN ; IF RESULT = 3 THEN                                 09743000
              DTOCT(ACCUM[1],3,CORESIZE,COUNT) ;                        09744000
         END ;                                                          09745000
         END                                                            09746000
              ELSE GO TO L4 ;                                           09747000
              GO TO L2 ;                                                09748000
         END ;                                                          09749000
              IF Q = "3BNF  " THEN                                      09750000
         BEGIN                                                          09751000
              IF SELECTIVEXREF THEN ERROR(32);                          09752000
              SELECTIVEXREF ~ TRUE;                                     09753000
              BNFTOG ~ DOCTOG ~ TRUE ;                                  09754000
         END ;                                                          09755000
              IF Q = "6SIMUL" THEN                                      09756000
         BEGIN                                                          09757000
              SIMULATOG ~TRUE ; FILLALGOL ;                             09758000
         END ;                                                          09759000
              IF Q = "3BPL  " THEN                                      09760000
         BEGIN                                                          09761000
              BPLTOG ~ TRUE ;                                           09762000
              FILLBPL;                                                  09763000
         END ;                                                          09764000
              IF Q = "7FORTR" THEN                                      09765000
         BEGIN                                                          09766000
              FORTRTOG ~ TRUE ;                                         09767000
              FILLFORTRAN;                                              09768000
         END ;                                                          09769000
              IF Q = "3HOL  " THEN HOLTOG ~ TRUE;                       09770000
 IF Q = "5ESPOL" THEN                                                   09771000
BEGIN                                                                   09772000
     ESPOLTOG ~ TRUE ;                                                  09773000
              FILLESPOL;                                                09774000
END;                                                                    09775000
              IF Q = "5TRANS" THEN                                      09776000
         BEGIN                                                          09777000
INTEGER BLOCKEXTENDER; LABEL SL1,SL2, SL3;                              09777100
              TRANSTOG ~ TRUE;                                          09778000
              DATATABLE ~ ESCAPETOG ~ FALSE;                            09779000
              ESIND ~ 0;                                                09780000
              ASMLTOG ~ TRUE;                                           09781000
              ALLSEGS ~ TRUE;                                           09782000
SL3:                                                                    09783000
              SCAN;                                                     09784000
              IF Q = "4DATA " THEN                                      09785000
         BEGIN                                                          09786000
              DATATABLE ~ TRUE;                                         09787000
              SCAN;                                                     09788000
         END ;                                                          09789000
              IF Q = "6ESCAP" THEN                                      09790000
         BEGIN                                                          09791000
              ESCAPETOG ~ TRUE;                                         09792000
              SCAN; IF RESULT = 3 THEN                                  09793000
         BEGIN                                                          09794000
              DTOCT(ACCUM[1],3,TEMP,COUNT);                             09795000
              IF TEMP > 5 THEN                                          09796000
         BEGIN                                                          09797000
              DOCERROR(12) ;                                            09798000
              TEMP ~ 5;                                                 09799000
         END ;                                                          09800000
              TEMP ~ TEMP -1 ;                                          09801000
              FOR I ~ 0 STEP 1 UNTIL TEMP DO                            09802000
         BEGIN                                                          09803000
              SCAN; ESTABLE[I] ~ Q;                                     09804000
         END ;                                                          09805000
              ESIND ~ TEMP ;                                            09806000
         END ELSE                                                       09807000
         BEGIN                                                          09808000
              ESTABLE[0] ~ Q;                                           09809000
              ESIND ~ 0;                                                09810000
         END ;                                                          09811000
              SCAN;                                                     09812000
         END ;                                                          09813000
              IF Q = "4DATA " OR Q = "6ESCAP" THEN GO TO SL3;           09814000
              IF Q ! "4SEGS " THEN GO TO L4;                            09815000
              ALLSEGS ~ FALSE;                                          09816000
              SEGCOUNT ~ -1;                                            09817000
              SCAN;                                                     09818000
SL1:                                                                    09819000
              IF Q = "1*    " THEN GO TO SL2;                           09820000
              IF Q = "1$    " THEN                                      09821000
         BEGIN                                                          09822000
              CONTCARD ~ TRUE; READATAPE;                               09823000
              SCAN; IF Q ! "1$    " THEN ERROR(7);                      09824000
         END;                                                           09825000
              IF ENDCARD THEN ERROR(39);                                09826000
              IF Q = "1,    " THEN SCAN;                                09827000
              IF RESULT = 3 THEN                                        09828000
         BEGIN                                                          09829000
              DTOCT(ACCUM[1],3,CHOOSEG[(SEGCOUNT ~SEGCOUNT +1)],        09830000
                 COUNT);                                                09831000
              SCAN;                                                     09832000
              IF Q = "1-    " THEN                                      09833000
         BEGIN                                                          09834000
              SCAN; IF RESULT ! 3 THEN ERROR(37);                       09835000
              DTOCT(ACCUM[1],3,TEMP,COUNT);                             09836000
              IF (KJUNK ~ TEMP - (IJUNK~CHOOSEG[SEGCOUNT])) < 0 THEN    09837000
                 ERROR(37);                                             09838000
              IF KJUNK + SEGCOUNT > 500 THEN ERROR(35);                 09839000
              FOR K ~ 1 STEP 1 UNTIL KJUNK DO                           09840000
               CHOOSEG[(SEGCOUNT ~SEGCOUNT +1)] ~ IJUNK + K;            09841000
              SCAN;                                                     09842000
         END;                                                           09843000
         END;                                                           09844000
              GO TO SL1;                                                09845000
SL2:                                                                    09846000
              IF SEGCOUNT < 0 THEN ERROR (36);                          09847000
              MAXSEG ~ SEGCOUNT; SEGCOUNT ~ 0;                          09848000
              GO TO L4;                                                 09849000
         END;                                                           09850000
              IF Q="8DEBEA" THEN DEBEATLETOG~TRUE;                      09851000
              IF Q = "4FLOW " OR Q = "7ASMFL" OR Q = "5QFLOW" THEN      09852000
         BEGIN                                                          09853000
              IF LISTTOBACKUPTOG THEN ERROR(25) ;                       09854000
              IF SELECTIVEXREF THEN ERROR(32);                          09855000
              SELECTIVEXREF ~ TRUE;                                     09856000
              IF Q = "7ASMFL"   THEN ASMFLOWTOG~TRUE;                   09857000
              IF Q = "5QFLOW" THEN QFLOWTOG ~ TRUE;                     09858000
              DOCLISTOG~LISTOG;                                         09859000
              LISTOG~ FALSE;                                            09860000
              IF BPLTOG THEN BPLFLOWTOG ~ TRUE ;                        09861000
              FLOWBOXTOG ~ TRUE ;                                       09862000
              FLOWTOG ~ TRUE ;                                          09863000
              SCAN ; IF Q = "5NOBOX" THEN FLOWBOXTOG ~ FALSE ELSE       09864000
              IF Q = "6SYNTA" THEN FSYNTAXTOG~ TRUE ELSE GO TO L4;      09865000
              GO TO L2 ;                                                09866000
         END ;                                                          09867000
              IF Q = "#LISTB"THEN                                       09868000
         BEGIN                                                          09869000
              LISTTOBACKUPTOG ~ TRUE ;                                  09870000
              SAVEBACKUPTOG ~ BACKUPTOG ~ TRUE ;                        09871000
         END ;                                                          09872000
              IF Q = "4LIST "THEN                                       09873000
         BEGIN                                                          09874000
              PRINTINFOPAGE(0);                                         09875000
              ZLB ~ IF LISTTOBACKUPTOG THEN 2 ELSE 0 ;                  09876000
              LISTOG ~TRUE ;                                            09877000
              SCAN ; IF CASTOG AND Q = "3DIR  " THEN                    09878000
         BEGIN                                                          09879000
              ZF ~0 ; PRINTCASTDIRECTORY ; GO TO L2 ;                   09880000
         END ;                                                          09881000
              IF Q !"4ONLY " THEN GO TO L4 ;                            09882000
              LISTONLYTOG ~ TRUE ; GO TO L2 ;                           09883000
         END ;                                                          09884000
              IF Q = "6SINGL" THEN DOUBLEONLY ~ FALSE ;                 09885000
              IF Q = "3SIX  " THEN                                      09886000
         BEGIN                                                          09887000
              DOUBLEONLY ~ FALSE ;                                      09888000
              ZLCOUNTMAX~56;                                            09889000
              SIXLINES~TRUE; SCAN;                                      09890000
              IF RESULT=3 THEN                                          09891000
         BEGIN                                                          09892000
              DTOCT(ACCUM[1],3,IJUNK,COUNT);                            09893000
              SCAN;                                                     09894000
              IF IJUNK<66 THEN ZLCOUNTMAX~IJUNK ELSE DOCERROR(21);      09895000
         END ;                                                          09896000
              IF Q = "6DOUBL" THEN DOUBLEONLY ~ TRUE ELSE               09897000
              GO TO L4 ; GO TO L2 ;                                     09898000
         END ELSE                                                       09899000
              IF Q="5EIGHT" THEN                                        09900000
         BEGIN                                                          09901000
              SCAN; IF RESULT! 3 THEN GO TO L4;                         09902000
              DTOCT(ACCUM[1],3,IJUNK,COUNT);                            09903000
              IF IJUNK<88 THEN ZLCOUNTMAX~IJUNK ELSE DOCERROR(21);      09904000
         END ;                                                          09905000
              IF Q = "6PPAGE" THEN                                      09906000
         BEGIN                                                          09907000
              PUNCHPAGES ~ TRUE;                                        09908000
              CLEAR(BLOCKBUFFER[0],14);                                 09909000
              FILL BLOCKBUFFER [*] WITH "* OVER  ","PAGE    ";          09910000
              SCAN; IF Q = "#INSER" THEN                                09911000
         BEGIN                                                          09912000
              FILL BLOCKBUFFER [*] WITH "* OVER  ","INSERTPA",          09913000
              "GE      ";                                               09914000
              INSTOG~TRUE;                                              09915000
              SCAN;                                                     09916000
              IF RESULT = 3 THEN                                        09917000
         BEGIN                                                          09918000
              DTOCT(ACCUM[1],3,INSINC,COUNT);                           09919000
              SCAN;                                                     09920000
         END ELSE INSINC ~0;                                            09921000
         END;                                                           09922000
              IF Q = "5PUNCH" THEN                                      09923000
         BEGIN                                                          09924000
              PUNCHTOG ~ TRUE;                                          09925000
              SCAN;                                                     09926000
         END ELSE PUNCHTOG ~ FALSE;                                     09927000
              GO TO L4;                                                 09928000
         END;                                                           09929000
              IF Q = "5BUILD" THEN                                      09930000
         BEGIN                                                          09931000
              BUILDTOG ~ TRUE ; BUILDPUNCHTOG ~ FALSE ;                 09932000
              SCAN ; IF Q ! "5PUNCH" THEN GO TO L4 ;                    09933000
              BUILDPUNCHTOG ~ TRUE ; GO TO L2 ;                         09934000
         END ;                                                          09935000
              IF Q = "8RESER" THEN RESERVEDTOG ~ TRUE ;                 09936000
              IF Q = "6UPDAT" THEN                                      09937000
         BEGIN                                                          09938000
              UPDATETOG~ TRUE;                                          09939000
              CLEAR (CONTBUF,14);                                       09940000
              FILL CONTID[*] WITH OCT2346456331456421,                  09941000
              OCT6331464560606060;                                      09942000
              MOVECHARS (CONTID[0],CONTBUF[7],0,1,16);                  09943000
         END;                                                           09944000
              IF Q = "8REVIS"  THEN                                     09945000
         BEGIN                                                          09946000
              REVTOG ~ TRUE;                                            09947000
              DOCREV~ 1;                                                09948000
              SCAN; IF Q = "5CLEAR" THEN                                09949000
         BEGIN                                                          09950000
              REVTOG~ FALSE; SCAN;                                      09951000
         END;                                                           09952000
              IF RESULT = 3 THEN                                        09953000
         BEGIN                                                          09954000
              DTOCT(ACCUM[1],3,DOCREV,COUNT);                           09955000
              IF DOCREV > 100 THEN ERROR(29);                           09956000
              SCAN;                                                     09957000
         END;                                                           09958000
              FILL REVB[*] WITH OCT6060512565606060;                    09959000
              MOVECHARS (REVISIONS [DOCREV],REVB[0],6,6,2);             09960000
              GO TO L4;                                                 09961000
         END;                                                           09962000
              IF Q = "9NOJUS"THEN DONTJUSTIFY ~ TRUE ;                  09963000
              IF Q = "6SECRE" THEN SECRETOG ~ TRUE;                     09964000
              IF Q = "5LARGE" THEN                                      09965000
         BEGIN                                                          09966000
              BIGTOG ~TRUE ;                                            09967000
              SCAN ; IF PERCENT OR ENDCARD THEN GO TO RETURN ;          09968000
              IF RESULT ! 3 THEN GO TO L4 ;                             09969000
              DTOCT(ACCUM[1],3,CORESIZE,COUNT) ;                        09970000
              GO TO L2 ;                                                09971000
         END ;                                                          09972000
              IF Q = "7SHUFF" THEN                                      09973000
         BEGIN                                                          09974000
              IF SELECTIVEXREF THEN ERROR(32);                          09975000
              SELECTIVEXREF ~ TRUE;                                     09976000
              IF NOT FINDCHAR(NCR,"%") THEN                             09977000
         BEGIN                                                          09978000
              SCAN; IF Q = "3NEW  " THEN                                09979000
              IF NOT FINDCHAR (NCR,"%") THEN                            09980000
         BEGIN                                                          09981000
              SCAN;                                                     09982000
              NEWTOG ~ TRUE;                                            09983000
              IF Q = "5PUNCH" THEN                                      09984000
         BEGIN                                                          09985000
              PUNCHSW ~ 0;PUNCHTOG ~TRUE;                               09986000
         END ELSE                                                       09987000
              IF Q = "4TAPE " THEN SWFOUTIND ~ 0 ELSE                   09988000
              IF Q = "4DISK " OR Q = "4DISC " THEN SWFOUTIND ~1 ELSE    09989000
              NEWTOG ~ FALSE ;                                          09990000
         END ;                                                          09991000
         END ;                                                          09992000
              SHUFFLETOG ~ TRUE ; GO TO EOFCARD ;                       09993000
         END ;                                                          09994000
              IF Q = "4BUGS " THEN BUILDEBUG ~ TRUE ;                   09995000
              IF Q = "7COMME"THEN COMMENTOG ~ TRUE ;                    09996000
              IF Q = "7NUMBE" THEN NUMBERTOG ~ TRUE ; % NUMBERS         09997000
              IF Q = "7NUMON" THEN NUMONLYTOG ~ NUMBERTOG               09998000
                           ~ TRUE ; % NUMONLY                           09999000
              IF Q = "6STRIN" THEN                                      10000000
         BEGIN                                                          10001000
              STRINGTOG ~ TRUE ; STLENGTH ~ 8 ; SCAN ;                  10002000
              IF RESULT ! 3 THEN GO TO L4 ;                             10003000
              DTOCT(ACCUM[1],3,STLENGTH,COUNT) ;                        10004000
         END ;                                                          10005000
              IF Q = "4DUMP " THEN DUMPFLAG ~ TRUE ;                    10006000
              IF Q = "4SORT " THEN                                      10007000
         BEGIN                                                          10008000
              IF SELECTIVEXREF THEN ERROR(32);                          10009000
              SELECTIVEXREF ~ TRUE;                                     10010000
              SORTOG ~ TRUE;                                            10011000
         END;                                                           10012000
              IF Q = "5ALPHA" THEN ALPHATOG ~TRUE ;                     10013000
              IF Q = "5LOGIC" THEN                                      10014000
         BEGIN                                                          10015000
              LOGICTOG ~TRUE ; FIRSTCHAR ~ 0 ; LASTCHAR ~ 63 ;          10016000
         END ;                                                          10017000
              IF Q = "3SEQ  " THEN SEQTOG ~ TRUE ;                      10018000
              IF Q = "2DA   " THEN DATOG ~ TRUE ;                       10019000
              IF Q = "5CHECK" THEN SEQTOG ~ TRUE ;                      10020000
              IF Q = "4VOID " THEN                                      10021000
         BEGIN                                                          10022000
              VOIDTOG ~ TRUE ; SCAN ;                                   10023000
              IF RESULT ! 3 OR ENDTOG THEN ERROR(15) ;                  10024000
              DTOCT(ACCUM[1],3,JUNK,COUNT) ;                            10025000
              Q:=ACCUM[1]:="1%    ";                                    10025100
              RESULT:=2; COUNT :=1;                                     10025200
              OCTTODEC(JUNK,VOIDSEQ);                                   10026000
              GO TO L2 ;                                                10027000
         END ;                                                          10028000
              IF Q = "9PROCE" THEN                                      10029000
         BEGIN                                                          10030000
              IF SELECTIVEXREF THEN ERROR(32);                          10031000
              SELECTIVEXREF ~ TRUE;                                     10032000
              PROCTOG ~ TRUE ; BEGINTOG ~ FALSE ;                       10033000
         END ;                                                          10034000
              IF Q = "5COUNT" OR Q.[18:30] = "IDENT" THEN               10035000
         BEGIN                                                          10036000
              IF SELECTIVEXREF THEN ERROR(32);                          10037000
              SELECTIVEXREF ~ TRUE;                                     10038000
              COUNTOG ~ TRUE;                                           10039000
         END;                                                           10040000
              IF Q = "8DOCUM" THEN                                      10041000
         BEGIN                                                          10042000
              IF LISTTOBACKUPTOG THEN ERROR(26) ;                       10043000
              IF SELECTIVEXREF THEN ERROR(32);                          10044000
              SELECTIVEXREF ~ TRUE;                                     10045000
              DOCLISTOG~LISTOG;                                         10046000
              LISTOG ~ FALSE;                                           10047000
              DOCTOG ~ TRUE ;                                           10048000
              IF FINDCHAR(NCR,""") THEN                                 10049000
         BEGIN                                                          10050000
LABEL         OK ;                                                      10051000
              SCEN ; IF RESULT ! 5 THEN GO TO OK ;                      10052000
              MOVEWORDS(ACCUM[1],FIRSTDOCID[1],9);                      10053000
              FIRSTDOCIDTOG ~ TRUE ; DOCIDTOG ~ TRUE ;                  10054000
              SCEN ; IF Q ! "2TO   " THEN GO TO OK ;                    10055000
              SCEN ; IF RESULT ! 5 THEN GO TO OK ;                      10056000
              MOVEWORDS(ACCUM[1], LASTDOCID[1],9);                      10057000
              LASTDOCIDTOG ~ TRUE ;                                     10058000
              SCEN ;                                                    10059000
OK:                                                                     10060000
         END ELSE                                                       10061000
              SCAN ; IF ( FINALDOCTOG ~ Q = "5FINAL") THEN GO TO L2     10062000
              ; IF (CONTOG ~ Q = "8CONTE" ) THEN                        10063000
        BEGIN                                                           10064000
          DOCTOG ~ FALSE ; SCAN;                                        10065000
          IF Q = "4ONLY " THEN GO TO L2 ELSE GO TO L4;                  10066000
        END;                                                            10067000
              IF Q = "6SYNTA" THEN                                      10068000
         BEGIN                                                          10069000
              SYNTAXTOG ~ TRUE ; SCAN ;                                 10070000
              IF  Q ! "5FINAL" THEN GO TO L4 ;                          10071000
              FINALDOCTOG ~ TRUE ; GO TO L2 ;                           10072000
         END ;                                                          10073000
              GO TO L4 ;                                                10074000
         END ;                                                          10075000
              IF Q = "5BLOCK" THEN                                      10076000
         BEGIN                                                          10077000
              IF LISTTOBACKUPTOG THEN ERROR(27) ;                       10078000
              IF SELECTIVEXREF THEN ERROR(32);                          10079000
              SELECTIVEXREF ~ TRUE;                                     10080000
              BLOCKTOG ~TRUE ; CLEAR(BLOCKBUFFER,14) ;                  10081000
              SCAN ; IF RESULT ! 3 THEN GO TO L4 ELSE                   10082000
         BEGIN                                                          10083000
              DTOCT(ACCUM[1],3,BINDENT,COUNT) ; GO TO L2 ;              10084000
         END ;                                                          10085000
         END ;                                                          10086000
              IF RESULT = 5 THEN                                        10087000
         BEGIN                                                          10088000
              IF (HEADPOINT + COUNT + 1 ) <  72 THEN                    10089000
         BEGIN                                                          10090000
              MOVECHARS(ACCUM[1],HEADING[HEADPOINT DIV 8] , 3,          10091000
                     HEADPOINT.[45:3],COUNT);                           10092000
              HEADPOINT ~ HEADPOINT + COUNT +1 ;                        10093000
         END ;                                                          10094000
              GO TO L2 ;                                                10095000
         END ;                                                          10096000
              IF Q = "7MONIT" THEN MONITOG ~ TRUE ;                     10097000
              IF Q = "9NAMEP" THEN                                      10098000
         BEGIN                                                          10099000
              NAMEPUNCH ~ TRUE ; SCAN ;                                 10100000
              IF Q ! "5BLANK" THEN GO TO L4 ;                           10101000
              BLANKNAMEPUNCH ~ TRUE ; GO TO L2 ;                        10102000
         END ;                                                          10103000
              IF Q = "5NAMES" THEN                                      10104000
         BEGIN                                                          10105000
              BEGINTOG ~ FALSE ;                                        10106000
              RESERVEDTOG ~ TRUE ;                                      10107000
              IF XREFTOG THEN ERROR(11) ;                               10108000
              IF PROCTOG THEN ERROR(12) ;                               10109000
              IF SELECTIVEXREF THEN ERROR(32);                          10110000
              SELECTIVEXREF ~ TRUE;                                     10111000
L3:           SCAN ; IF Q = "1$    " THEN                               10112000
         BEGIN                                                          10113000
              CONTCARD ~ TRUE ; READATAPE ; SCAN ;                      10114000
              IF Q! "1$    " THEN ERROR(7) ;                            10115000
         END ;                                                          10116000
              IF Q = "1*    "THEN                                       10117000
         BEGIN                                                          10118000
              NAMETOG ~ TRUE; GO TO L2;                                 10119000
         END ;                                                          10120000
              IF COBOLTOG THEN                                          10121000
         BEGIN                                                          10122000
              IF IDENTIFIER OR RESULT = 3 THEN                          10123000
              IF IDENTIFIER OR RESULT = 3 THEN                          10124000
         BEGIN                                                          10125000
              BUILDCOBID ;                                              10126000
              IF SORTSCRAMBLE THEN Q ~Q;                                10127000
         END ;                                                          10128000
              GO TO L3 ;                                                10129000
         END ;                                                          10130000
              IF NUMBERTOG OR NUMONLYTOG THEN                           10131000
         BEGIN                                                          10132000
              IF RESULT = 3 THEN                                        10133000
              IF SORTSCRAMBLE THEN Q ~ Q ;                              10134000
         END ;                                                          10135000
              IF FORTRTOG THEN IF RESULT = 3 THEN                       10136000
                 IF SORTSCRAMBLE THEN Q~Q;                              10137000
              IF RESULT = 1 THEN IF SORTSCRAMBLE THEN Q ~ Q ; GO TO L3 ;10138000
         END ;                                                          10139000
L5:           IF Q = "4CAST " THEN                                      10140000
         BEGIN                                                          10141000
INTEGER       BLOCKEXTENDER;                                            10142000
              SCAN ; CASTOG ~ TRUE ; TAPETOG ~ TRUE ;                   10143000
              IF Q.[18:6]="A" OR Q.[18:6] ="B" OR Q.[18:6] = "C" THEN   10144000
              IF COUNT = 1 THEN CASTINDEX ~ Q.[18:6] - 17 ELSE ERROR(1) 10145000
              ELSE ERROR(2) ;                                           10146000
              FILLCASTLINKS ;                                           10147000
              SCAN ;                                                    10148000
              IF Q = "3ALL  " THEN                                      10149000
         BEGIN                                                          10150000
              ALLTOG ~ TRUE ; SCAN ;                                    10151000
              IF Q = "4FROM "THEN                                       10152000
         BEGIN                                                          10153000
              FROMTOG ~ TRUE ; SCAN ;                                   10154000
              MOVECHARS(ACCUM[1],FIRSTCASTID[1],3,0,COUNT) ;            10155000
              FIRSTCASTID[0] ~ COUNT ;                                  10156000
              SCAN ; IF Q ! "2TO   " THEN ERROR(4) ;                    10157000
              SCAN ; IF Q ! "3END  " THEN                               10158000
         BEGIN                                                          10159000
              MOVECHARS(ACCUM[1], LASTCASTID[1],3,0,COUNT) ;            10160000
              LASTCASTID[0] ~ COUNT ;                                   10161000
         END ELSE                                                       10162000
         BEGIN                                                          10163000
              TOENDTOG ~TRUE ;                                          10164000
              LASTCASTID[0] ~ CASTLINKS[CASTLINKS[0]-1].[24:6] ;        10165000
              MOVECHARS(CASTDIR[CASTLINKS[CASTLINKS[0]-1].[6:6],        10166000
                           CASTLINKS[CASTLINKS[0]-1].[12:6]],           10167000
   LASTCASTID[1],CASTLINKS[CASTLINKS[0]-1].[18:6],0,LASTCASTID[0]) ;    10168000
         END ;                                                          10169000
         END ELSE                                                       10170000
         BEGIN                                                          10171000
              IF Q ! "2TO   "THEN ERROR(18) ;                           10172000
              SCAN ; IF Q ! "3END  " THEN ERROR(18) ;                   10173000
              MOVECHARS(CASTDIR[CASTLINKS[1].[6:6],CASTLINKS[1].[12:6]],10174000
                  FIRSTCASTID[1],                                       10175000
                  CASTLINKS[1].[18:6],0,CASTLINKS[1].[24:6]) ;          10176000
              FIRSTCASTID[0] ~ CASTLINKS[1].[24:6] ;                    10177000
              LASTCASTID[0] ~ CASTLINKS[CASTLINKS[0]-1].[24:6] ;        10178000
              MOVECHARS(CASTDIR[CASTLINKS[CASTLINKS[0]-1].[6:6],        10179000
                           CASTLINKS[CASTLINKS[0]-1].[12:6]],           10180000
   LASTCASTID[1],CASTLINKS[CASTLINKS[0]-1].[18:6],0,LASTCASTID[0]) ;    10181000
              SCANFLAG ~ TRUE ;                                         10182000
         END ;                                                          10183000
         END ELSE                                                       10184000
         BEGIN                                                          10185000
              MOVECHARS(ACCUM[1],FIRSTCASTID[1],3,0,COUNT) ;            10186000
              FIRSTCASTID[0] ~ COUNT ;                                  10187000
         END ;                                                          10188000
              MULTNAME[2] ~ "      " ;                                  10189000
              JUNK ~ IF FIRSTCASTID[0] > 7 THEN 7 ELSE                  10190000
                   FIRSTCASTID[0] ;                                     10191000
              MOVECHARS(FIRSTCASTID[1],MULTNAME[2],0,1,JUNK) ;          10192000
              IF (HEADPOINT + FIRSTCASTID[0] + 1 ) < 72 THEN            10193000
         BEGIN                                                          10194000
              MOVECHARS(FIRSTCASTID[1],HEADING[HEADPOINT DIV 8],0,      10195000
                     HEADPOINT.[45:3],FIRSTCASTID[0]) ;                 10196000
              HEADPOINT ~ HEADPOINT + 1 + FIRSTCASTID[0] ;              10197000
         END ;                                                          10198000
              FCASTINDEX ~ FINDCASTID(FIRSTCASTID) ;                    10199000
              IF ALLTOG THEN                                            10200000
              LCASTINDEX ~ FINDCASTID(LASTCASTID) ;                     10201000
              FCASTSEQ ~ CASTLINKS[FCASTINDEX].[30:18] ;                10202000
              T1 ~ (FCASTSEQ - 1) DIV 5 + 1 ;                           10203000
              CASTPOINT ~ ((FCASTSEQ - 1) MOD 5 ) | 11 + 1 ;            10204000
              NCASTRECS ~ CASTLINKS[FCASTINDEX+1].[30:18] - FCASTSEQ ;  10205000
              NCASTRECS ~ NCASTRECS - 1 ;                               10206000
              IF CASTINDEX = 0 THEN                                     10207000
         BEGIN                                                          10208000
              CASTAINDEX ~ CASTAINDEX + T1 - 1 ;                        10209000
              READ SEEK(CASTSW[CASTINDEX][CASTAINDEX]) ;                10210000
              READ(CASTSW[CASTINDEX],56,CASTBUFF[*]) ;                  10211000
         END ELSE                                                       10212000
              FOR I ~ 1 STEP 1 UNTIL T1 DO                              10213000
              READ(CASTSW[CASTINDEX],56,CASTBUFF[*]) ;                  10214000
              CLEAR(LTSEQ,1); READCAST;                                 10215000
              IF SCANFLAG THEN GO TO L4 ;                               10216000
              GO TO L2 ;                                                10217000
         END ;                                                          10218000
              IF Q = "4XREF " THEN                                      10219000
         BEGIN                                                          10220000
              SELECTIVEXREF ~ TRUE;                                     10221000
              IF DOCTOG THEN DOCXREFTOG ~TRUE ELSE                      10222000
         BEGIN                                                          10223000
              XREFTOG ~ TRUE ; BEGINTOG ~ FALSE ;                       10224000
              SCAN ; IF RESULT ! 1 OR COUNT ! 1 THEN ERROR(5) ;         10225000
              FIRSTCHAR ~ Q.[18:6] ;                                    10226000
              SCAN ; IF Q = "2TO   " THEN                               10227000
         BEGIN                                                          10228000
              SCAN ; IF RESULT !1 OR COUNT ! 1 THEN ERROR(6) ;          10229000
              LASTCHAR ~ Q.[18:6] ;                                     10230000
         END ELSE                                                       10231000
         BEGIN                                                          10232000
              LASTCHAR ~ FIRSTCHAR ; GO TO L4 ;                         10233000
         END ;                                                          10234000
         END ;                                                          10235000
         END ;                                                          10236000
              IF Q = "1$    " THEN                                      10237000
         BEGIN                                                          10238000
              CONTCARD ~ TRUE ; READATAPE ;                             10239000
              SCAN ; IF Q ! "1$    " THEN ERROR(7) ;                    10240000
              GO TO L2 ;                                                10241000
         END ;                                                          10242000
              IF Q.[18:30] = "RESEQ" THEN                               10243000
         BEGIN                                                          10244000
              IF CASTOG AND ALLTOG THEN ERROR(8) ;                      10245000
              RESEQTOG ~ TRUE ; NEWSEQ ~0 ;                             10246000
              IF Q.[12:6] ! 5 THEN RESEQONLY ~TRUE ;                    10247000
              IF NEWPATCHTOG THEN                                       10248000
         BEGIN                                                          10249000
              PATCHRESEQ~ TRUE; RESEQTOG ~ FALSE;                       10250000
         END;                                                           10251000
              SCAN;                                                     10252000
              IF Q = "3DOC  " THEN                                      10253000
         BEGIN                                                          10254000
              SCAN; REMOVEOVERTOG ~ TRUE; LOOKFORSTAR ~ TRUE;           10255000
         END;                                                           10256000
              IF RESULT ! 3 THEN GO TO L4;                              10257000
         BEGIN                                                          10258000
              DTOCT(ACCUM[1],3,SEQINC,COUNT) ;                          10259000
              SCAN ; IF NOT COMMA THEN GO TO L4 ELSE                    10260000
         BEGIN                                                          10261000
              SCAN ; IF RESULT ! 3 THEN ERROR(17) ;                     10262000
              DTOCT(ACCUM[1],3,NEWSEQ,COUNT) ;                          10263000
              BLANKNEWSEQ ~ SEQINC = 0 AND NEWSEQ = 0 ;                 10264000
              NEWSEQ ~ NEWSEQ - SEQINC ; GO TO L2 ;                     10265000
         END ;                                                          10266000
         END ;                                                          10267000
         END ;                                                          10268000
              IF Q = "3NEW  " THEN                                      10269000
         BEGIN                                                          10270000
              IF CASTOG AND ALLTOG THEN                                 10271000
         BEGIN                                                          10272000
              SCAN ; IF Q ! "9MULTI"THEN ERROR(24) ;                    10273000
              NEWTOG ~ TRUE ; SWFOUTIND ~ 0 ;                           10274000
              NEWMULTITOG ~ TRUE ;                                      10275000
              SCAN ; IF RESULT ! 1 THEN ERROR(22) ;                     10276000
              IF COUNT } 8 THEN ERROR(23) ;                             10277000
              MULTNAME[1] ~ "      " ;                                  10278000
              MOVECHARS(ACCUM[1],MULTNAME[1],3,1,COUNT) ;               10279000
              FILL NEWTAPE WITH MULTNAME[1],MULTNAME[2] ;               10280000
              GO TO L2 ;                                                10281000
         END ;                                                          10282000
              NEWTOG ~ TRUE ; SCAN ; SWFOUTIND ~ 0 ;                    10283000
              IF Q ! "4TAPE " THEN                                      10284000
              IF Q = "4DISK " OR Q = "4DISC " THEN SWFOUTIND ~ 1 ELSE   10285000
              IF Q = "5PUNCH" THEN                                      10286000
         BEGIN                                                          10287000
              PUNCHSW ~0 ; PUNCHTOG ~ TRUE ;                            10288000
              SCAN ; IF Q ="4TAPE " THEN PUNCHSW ~ 1 ELSE GO TO L4 ;    10289000
         END ELSE                                                       10290000
              IF Q = "9PATCH" THEN % "PATCHTAPE"                        10291000
         BEGIN                                                          10292000
              SWFOUTIND ~ 4; NEWPATCHTOG ~ TRUE;                        10293000
              PATCHRESEQ ~ RESEQTOG; RESEQTOG ~ FALSE;                  10294000
              SCAN; IF Q = "5PUNCH" THEN                                10295000
         BEGIN                                                          10296000
              PUNCHSW~0; PUNCHTOG ~ TRUE; SCAN;                         10297000
         END;                                                           10298000
              GO TO L4;                                                 10299000
         END ELSE  GO TO L4;                                            10300000
         END ;                                                          10301000
              IF Q = "7NODEB"THEN NODEBUGTOG ~ TRUE ;                   10302000
              IF Q = "5STUFF" THEN PATCHTOG ~ DEBUGSTUFF ~ TRUE ;       10303000
              IF Q = "5B3500" THEN                                      10304000
         BEGIN                                                          10305000
              ASMLTOG ~ TRUE ;                                          10306000
              IF TAPETOG THEN ASMLEDIT(TBUFF,ASMLBUFF[2,*]) ;           10307000
         END ;                                                          10308000
              IF Q = "5COBOL" THEN                                      10309000
         BEGIN                                                          10310000
              COBOLTOG ~ TRUE ;                                         10311000
              FILLCOBOL;                                                10312000
              IF TAPETOG THEN COBOLEDIT(TBUFF,COBOLBUFF[2,*]) ;         10313000
         END ;                                                          10314000
              IF Q = "5PRINT" THEN PRINTOG ~ TRUE ;                     10315000
              IF Q = "6BACKU" THEN                                      10316000
         BEGIN                                                          10317000
              BACKIND ~1 ;                                              10318000
              SAVEBACKUPTOG ~ TRUE ;                                    10319000
              SCAN;  IF Q = "4DISK " OR Q = "4DISC " THEN               10320000
         BEGIN                                                          10321000
              BACKIND ~0;                                               10322000
              SCAN;                                                     10323000
         END;                                                           10324000
              BACKUPTOG ~TRUE;                                          10325000
              IF  Q ! "6UPDAT" THEN GO TO L4 ;                          10326000
         BEGIN                                                          10327000
LABEL         RDB,EOFB ;                                                10328000
ARRAY         T[0:15];                                                  10329000
RDB:          CLEAR(T,14) ;                                             10330000
              IF BACKIND = 0 THEN                                       10331000
              READ (OLDBACKUP,15,T[*]) [EOFB]  ELSE                     10332000
              READ(OLDBAC,15,T[*]) [EOFB] ;                             10333000
              WRITE(BACKUP,15,T[*]) ;                                   10334000
              GO TO RDB ;                                               10335000
EOFB:         IF BACKIND = 0 THEN                                       10336000
              LOCK(OLDBACKUP,RELEASE) ELSE LOCK (OLDBAC,RELEASE) ;      10337000
         END ;                                                          10338000
         END ;                                                          10339000
              GO TO L2 ;                                                10340000
RETURN:                                                                 10341000
              IF TAPEPATCHES THEN CLOSE (CARD,RELEASE);                 10342000
              IF FIRSTDOLLAR THEN                                       10343000
         BEGIN                                                          10344000
              ZSP ~ ZSPERM~ IF DOUBLEONLY THEN 2 ELSE 1;                10345000
              FIRSTDOLLAR ~FALSE ;                                      10346000
              IF DOCTOG AND NEWTOG THEN ERROR(9) ;                      10347000
              LISTOG ~ LISTOG OR DOCLISTOG ;                            10348000
              BMON ~ BLOCKTOG OR DOCTOG OR FLOWTOG ;                    10349000
              FLOWDOCBLOCKTOG ~ BMON ;                                  10350000
              PRINTOG ~ PRINTOG OR NOT SAVEBACKUPTOG ;                  10351000
              BACKUPTOG ~ BACKUPTOG OR (LISTOG AND BMON) ;              10352000
              ZLB ~ IF LISTOG AND LISTTOBACKUPTOG THEN 2 ELSE           10353000
              IF LISTOG THEN 0 ELSE IF LISTTOBACKUPTOG THEN 1 ELSE -1 ; 10354000
              ZF ~ IF LISTOG AND BMON THEN 1 ELSE                       10355000
              IF PRINTOG AND BACKUPTOG THEN 2 ELSE                      10356000
              IF PRINTOG THEN 0 ELSE IF BACKUPTOG THEN 1 ELSE -1 ;      10357000
              IF BMON AND LISTOG THEN                                   10358000
         BEGIN                                                          10359000
              LISTOG ~FALSE ; DOCLISTOG ~ TRUE ;                        10360000
         END ;                                                          10361000
               AUTOPRINT ~ DOCLISTOG AND PRINTOG;                       10362000
              IF UPDATETOG THEN BACKIND ~0;                             10363000
              IF  NOT (DOCLISTOG OR LISTOG) THEN                        10364000
              IF NOT ONLYTOG THEN                                       10365000
              IF UPDATETOG THEN PRINTINFOPAGE(0) ELSE                   10366000
              PRINTINFOPAGE(REAL(BACKUPTOG));                           10367000
              IF BACKUPTOG AND (DOCTOG OR FLOWTOG) THEN                 10368000
         BEGIN                                                          10369000
              WRITE (BACKUP,15,BLANKARRAY[*]);                          10370000
              BKRCRDCOUNT ~BKRCRDCOUNT+1;                               10371000
         END;                                                           10372000
     IF CONTOG THEN                                                     10373000
        BEGIN                                                           10374000
          DOCTOG ~ TRUE; ZZF ~ZF; ZF ~-1;                               10375000
        END;                                                            10376000
         END ;                                                          10377000
              WHILE VOIDTOG DO READATAPE;                               10378000
              IF COPYTOG THEN COPY ;                                    10379000
         IF MONITOG THEN WRITE(PRINT,MONITFORM,"EXIT S","SETUPCN");     10379100
         END SETUPCONTROLS ;                                            10380000
COMMENT DOCUMENT* 23 * * * * * * * * * * * * * * * * * * * * * * * ;    10381000
PROCEDURE     READATAPE ;                                               10382000
COMMENT  RESPONSIBLE FOR READING SOURCE FILES AND PATCH CARDS,SELECTING 10383000
         RECORDS BY SEQUENCE NUMBER, AND FOR DOING SOURCE FILE          10384000
         MAINTENANCE (EXCEPT "COPY") AND LISTING ;                      10385000
         BEGIN                                                          10386000
LABEL         RETURN,L,LL,ENDREAD ;                                     10387000
LABEL         MORE1,MORE2 ;                                             10388000
LABEL         EOF,EOFOVER;                                              10389000
LABEL         START ;                                                   10390000
LABEL         AROUND ;                                                  10391000
LABEL         LISTCARDS;                                                10392000
INTEGER       TEMP ;                                                    10393000
BOOLEAN       TEMPTOG;                                                  10394000
              IF MONITOG THEN WRITE(PRINT,MONITFORM,"READAT","APE   ") ;10395000
              TEMPTOG ~ DOCOUTPUT; DOCOUTPUT ~ FALSE;                   10396000
START:                                                                  10397000
              NEWCARD ~ TRUE;                                           10398000
              IF DEVICE = 1 THEN                                        10399000
         BEGIN                                                          10400000
              IF LOOKFORDOLLAR THEN                                     10401000
         BEGIN                                                          10402000
L:            READ(CARDS,10,CBUFF[*]) ;                                 10403000
              IF CHECKDOLLAR(CBUFF[0]) THEN                             10404000
         BEGIN                                                          10405000
              IF CHECKDOLLAR(CARD(0))AND                                10406000
               WORDEQUAL(CBUFF[9],CARDS(9),1) THEN GO TO L ;            10407000
         END ELSE                                                       10408000
         BEGIN                                                          10409000
              LISTOG ~ TRUE ; ZLB ~ 0 ; ZF ~ - 1 ;                      10410000
              LISTCARDTOG ~ TRUE ;                                      10411000
              LOOKFORDOLLAR ~ FALSE ;                                   10412000
              GO TO LISTCARDS;                                          10413000
         END ;                                                          10414000
         END ELSE                                                       10415000
         BEGIN                                                          10416000
LL:           READ(CARDS,10,CBUFF[*])[EOFCARD] ;                        10417000
         END ;                                                          10418000
              IF NOT CHECKDOLLAR(CBUFF[0]) THEN                         10419000
              IF ASMLTOG THEN ASMLEDIT(CBUFF,ASMLBUFF[1,*]) ;           10420000
              IF NOT CHECKDOLLAR(CBUFF[0]) THEN                         10421000
              IF COBOLTOG THEN COBOLEDIT(CBUFF,COBOLBUFF[1,*]) ;        10422000
              IF SEQTOG THEN IF SEQCOMP(CBUFF[9],LCSEQ)! 1 THEN         10423000
              DOCERROR(19) ;                                            10424000
              MOVEWORDS (CBUFF[9],LCSEQ,1);                             10425000
         END ELSE                                                       10426000
         BEGIN                                                          10427000
MORE1:                                                                  10428000
              IF CASTOG THEN READCAST ELSE                              10429000
              READ(SWIN,10,TBUFF[*])[EOF] ;                             10430000
              IF ASMLTOG THEN ASMLEDIT(TBUFF,ASMLBUFF[2,*]) ;           10431000
              IF COBOLTOG THEN COBOLEDIT(TBUFF,COBOLBUFF[2,*]) ;        10432000
              IF NOT NEWPATCHTOG THEN                                   10433000
              IF CHECKCHAR(TBUFF,0,"$") THEN GO TO MORE1 ;              10434000
              IF SEQTOG THEN IF SEQCOMP(TBUFF[9],LTSEQ) ! 1 THEN        10435000
              DOCERROR(20) ;                                            10436000
              MOVEWORDS (TBUFF[9],LTSEQ,1);                             10437000
         END ;                                                          10438000
              GO TO EOFOVER;                                            10439000
EOF:                                                                    10440000
              MOVEWORDS (NINES,TBUFF[9],1);                             10441000
EOFOVER:                                                                10442000
              IF SEQCOMP(CBUFF[9],TBUFF[9]) ! 1 OR                      10443000
                 NOT TAPETOG AND NOT ALLTOG THEN                        10444000
         BEGIN                                                          10445000
              DEVICE ~ 1 ; MOVEWORDS(CBUFF[0],GLOBE[0],10) ;            10446000
              PATCHCARD ~ TRUE ;                                        10447000
              SETCHAR(LISTBUFFER[12],3,PATCHLETTER) ;                   10448000
              PATCHFLAG ~FALSE ;                                        10449000
              IF TAPETOG THEN IF SEQCOMP(CBUFF[9],TBUFF[9]) =2 THEN     10450000
              IF NOT (SEQCOMP(TBUFF[9],NINES) =2 ) THEN                 10451000
         BEGIN                                                          10452000
              IF PATCHTOG THEN                                          10453000
         BEGIN                                                          10454000
              MOVEWORDS(TBUFF[0],GLOBE[0],10) ; PATCHFLAG ~TRUE ;       10455000
              IF DEBUGSTUFF THEN                                        10456000
         BEGIN                                                          10457000
              SETCHAR(GLOBE[8],5,"%") ;                                 10458000
              SETCHAR(GLOBE[8],6,"%") ;                                 10459000
         END ;                                                          10460000
              WRITE(PUNCH,10,GLOBE[*]) ;                                10461000
         END ELSE PATCHFLAG ~FALSE ;                                    10462000
MORE2:                                                                  10463000
              IF CASTOG THEN READCAST ELSE                              10464000
              READ(SWIN,10,TBUFF[*])[EOF] ;                             10465000
              IF ASMLTOG THEN ASMLEDIT(TBUFF,ASMLBUFF[2,*]) ;           10466000
              IF COBOLTOG THEN COBOLEDIT(TBUFF,COBOLBUFF[2,*]) ;        10467000
              IF NOT NEWPATCHTOG THEN                                   10468000
              IF CHECKCHAR(TBUFF,0,"$") THEN GO TO MORE2 ;              10469000
              IF SEQTOG THEN IF SEQCOMP(TBUFF[9],LTSEQ) =0 THEN         10470000
              DOCERROR(20) ;                                            10471000
              MOVEWORDS (TBUFF[9],LTSEQ,1);                             10472000
         END ;                                                          10473000
         END ELSE                                                       10474000
         BEGIN                                                          10475000
              DEVICE ~ 2 ; MOVEWORDS(TBUFF[0],GLOBE[0],10) ;            10476000
              PATCHCARD ~FALSE ;                                        10477000
              CLEAR(LISTBUFFER[12],0) ;                                 10478000
         END ;                                                          10479000
              IF BPLFLOWTOG THEN                                        10480000
         BEGIN                                                          10481000
              IF DEBUGREC(GLOBE[0],0) THEN                              10482000
              CLEARCHAR(GLOBE[0],0,2) ELSE CLEAR(GLOBE[0],8) ;          10483000
         END ;                                                          10484000
              IF LISTCARDTOG THEN                                       10485000
         BEGIN                                                          10486000
LISTCARDS:                                                              10487000
              CLEAR(LISTBUFFER,14) ;                                    10488000
              READ (CARDS,10,LISTBUFFER[*] ) [EOFCARD];                 10489000
              IF SEQCOMP(LISTBUFFER[9],LCSEQ) ! 1 THEN                  10490000
              FOR I ~ 0 STEP 1 UNTIL 7 DO                               10491000
                 SETCHAR(LISTBUFFER[11],I,"*") ;                        10492000
              MOVEWORDS(LISTBUFFER[9],LCSEQ,1);                         10493000
              WRITE(PRINT[DBL],15,LISTBUFFER[*]) ;                      10494000
              GO TO LISTCARDS;                                          10495000
         END ;                                                          10496000
              MOVEWORDS(GLOBE[9],SEQ,1) ;                               10497000
              LASTSEQ ~ ISEQ;                                           10498000
              DECTOOCT(SEQ,ISEQ);                                       10499000
              IF VOIDTOG THEN IF SEQCOMP(SEQ,VOIDSEQ) } 1 THEN          10500000
               VOIDTOG ~ FALSE ELSE GO TO RETURN;                       10501000
              DECTOOCT(GLOBE[9],TEMP) ;                                 10502000
              NOTLAST ~ ( TEMP    MOD 1000000) ! 999999 ;               10503000
              LCR ~ MKABS(GLOBE[W]) ; NCR ~ LCR - W ;                   10504000
              DOLLARFLAG ~ EXAMINE (NCR) = "$" AND NOT NEWPATCHTOG;     10505000
              IF PATCHTOG AND NOT PATCHCARD THEN GO TO START ;          10506000
              IF DOCTOG OR REMOVEOVERTOG THEN                           10507000
              ASTERFLAG ~ EXAMINE(NCR) = "*" AND LOOKFORSTAR  ;         10508000
              IF ASTERFLAG THEN ASTERPATCHED~                           10509000
                 DEVICE=1 AND TAPETOG;                                  10510000
              IF NOT DOLLARFLAG THEN CARDTALLY ~ CARDTALLY + 1 ;        10511000
              IF ASMLTOG THEN                                           10512000
                 NOTBLANK~BLANKTEST(ASMLBUFF[DEVICE,1],9) OR            10513000
              NOT CHECKCHAR(ASMLBUFF[DEVICE,0],7," ") ELSE              10514000
              IF COBOLTOG THEN                                          10515000
              NOTBLANK~ BLANKTEST(COBOLBUFF[DEVICE,1],9) OR             10516000
              NOT CHECKCHAR(COBOLBUFF[DEVICE,0],6," ") OR               10517000
              NOT CHECKCHAR(COBOLBUFF[DEVICE,0],7," ") ELSE             10518000
            IF NEWPATCHTOG THEN NOTBLANK ~ TRUE ELSE                    10519000
              NOTBLANK ~ BLANKTEST(GLOBE,9) ;                           10520000
              IF FORTRTOG THEN                                          10521000
              IF HOLTOG THEN                                            10522000
         BEGIN                                                          10523000
              MOVEWORDS(GLOBE[0],COBACCUM[0],9);                        10524000
              HOLCONVERT(COBACCUM,GLOBE);                               10525000
         END ;                                                          10526000
              IF DEBLANKTOG AND NOT NOTBLANK THEN GO TO START ;         10527000
              IF NODEBUGTOG AND DEBUGREC(GLOBE[8],5) THEN               10528000
                   NOTBLANK ~FALSE ;                                    10529000
              IF REMOVEOVERTOG THEN                                     10530000
              IF ASTERFLAG THEN                                         10531000
         BEGIN                                                          10532000
              FIXCOL73(LCR);                                            10533000
              SCAN; IF FINDCHAR(NCR,"%") THEN GO TO AROUND ;            10534000
              SCAN ; IF Q = "4OVER " THEN GO TO START ELSE              10535000
      DO BEGIN                                                          10536000
              IF Q ! "#INSER" THEN IF FINDCHAR(NCR,"%") THEN            10537000
              GO TO AROUND ;                                            10538000
              IF Q = "#INSER" THEN                                      10539000
         BEGIN                                                          10540000
              REPLACEIT; GO TO AROUND;                                  10541000
         END ;                                                          10542000
              SCAN ;                                                    10543000
         END UNTIL FALSE ;                                              10544000
AROUND:                                                                 10545000
         END ;                                                          10546000
              IF RESEQTOG AND NOT DOLLARFLAG AND NOTBLANK THEN          10547000
              IF NOTLAST THEN                                           10548000
         BEGIN                                                          10549000
              MOVEWORDS(GLOBE[9],OLDSEQ,1) ;                            10550000
              IF NOT VOIDTOG THEN NEWSEQ ~ NEWSEQ + SEQINC ;            10551000
              IF BLANKNEWSEQ THEN CLEAR(GLOBE[9],0) ELSE                10552000
              OCTTODEC(NEWSEQ,GLOBE[9]) ;                               10553000
              MOVEWORDS(GLOBE[9],SEQ,1) ;                               10554000
         END ;                                                          10555000
              IF PATCHRESEQ THEN                                        10556000
         BEGIN                                                          10557000
              MOVEWORDS(GLOBE[9],OLDSEQ,1);                             10558000
              IF LASTSEQ > ISEQ AND ISEQ = 0 THEN                       10559000
         BEGIN                                                          10560000
              NEWSEQ ~ FIRSTSEQ ~LASTSEQ;                               10561000
              NEWSEQ~NEWSEQ+SEQINC;                                     10562000
              OCTTODEC(NEWSEQ,GLOBE[9]);                                10563000
         END ELSE                                                       10564000
              IF ISEQ = 0 AND LASTSEQ = 0 THEN                          10565000
         BEGIN                                                          10566000
              NEWSEQ~NEWSEQ+SEQINC;                                     10567000
              OCTTODEC(NEWSEQ,GLOBE[9]);                                10568000
         END ELSE                                                       10569000
              IF LASTSEQ = 0 AND ISEQ =FIRSTSEQ THEN                    10570000
         BEGIN                                                          10571000
              NEWSEQ~NEWSEQ+SEQINC;                                     10572000
              OCTTODEC(NEWSEQ,GLOBE[9]);                                10573000
         END;                                                           10574000
              MOVEWORDS(GLOBE[9],SEQ,1);                                10575000
         END;                                                           10576000
          IF NOT BLANKTEST(GLOBE[9],1) AND NOT DOLLARFLAG AND NOTBLANK  10577000
                   THEN                                                 10578000
         BEGIN                                                          10579000
              XREFSEQ ~ XREFSEQ + SEQINC ;                              10580000
              SEQBLANKTOG ~ TRUE ;                                      10581000
         END ;                                                          10582000
              IF (LISTOG OR LISTTOBACKUPTOG OR                          10583000
              (DOCLISTOG AND BLOCKTOG) OR                               10584000
              (DOCLISTOG AND DOCLISTFLAG)) AND NOT                      10585000
              DOLLARFLAG AND NOT VOIDTOG AND NOT CONTCARD THEN          10586000
         BEGIN                                                          10587000
              MOVEWORDS(GLOBE[0],LISTBUFFER[2],10) ;                    10588000
              IF (RESEQTOG AND NOTBLANK) OR PATCHRESEQ THEN             10589000
              IF COBOLTOG OR ASMLTOG THEN                               10590000
                              MOVECHARS(OLDSEQ,LISTBUFFER[13],2,2,6)    10591000
              ELSE                                                      10592000
                 MOVEWORDS(OLDSEQ,LISTBUFFER[13],1) ;                   10593000
              IF NOT (RESEQTOG OR PATCHRESEQ) AND NOT LISTONLYTOG       10594000
                 AND SEQBLANKTOG THEN                                   10595000
              OCTTODEC(XREFSEQ,LISTBUFFER[11]) ;                        10596000
              IF REMOTETOG THEN                                         10597000
         BEGIN                                                          10598000
              CLEAR(LISTBUFFER,14) ;                                    10599000
              MOVEWORDS(GLOBE,LISTBUFFER,10) ;                          10600000
         END ;                                                          10601000
              IF ASMLTOG THEN                                           10602000
         BEGIN                                                          10603000
              IF RESEQTOG THEN CLEAR(LISTBUFFER[0],11)  ELSE            10604000
              CLEAR(LISTBUFFER,14) ;                                    10605000
              MOVEWORDS(ASMLBUFF[DEVICE,*],LISTBUFFER[2],10) ;          10606000
              IF RESEQTOG THEN                                          10607000
              MOVECHARS(GLOBE[9],LISTBUFFER[0],2,1,6);                  10608000
         END ;                                                          10609000
              IF COBOLTOG THEN                                          10610000
         BEGIN                                                          10611000
              CLEAR(LISTBUFFER,14) ;                                    10612000
              MOVEWORDS(COBOLBUFF[DEVICE,*],LISTBUFFER,10);             10613000
              IF RESEQTOG THEN                                          10614000
              MOVECHARS(GLOBE[9],LISTBUFFER[0],2,0,6);                  10615000
         END ;                                                          10616000
              IF RESEQTOG AND NOTBLANK OR NOT RESEQTOG THEN             10617000
              IF DOUBLEONLY THEN ZPL(ZLB,2,LISTBUFFER) ELSE             10618000
              ZPL(ZLB,1,LISTBUFFER);                                    10619000
         END ;                                                          10620000
              IF ASTERFLAG AND DOCTOG THEN                              10621000
         BEGIN                                                          10622000
              OLDASEQ~ASAVESEQ ;                                        10623000
              ASAVESEQ~ ISEQ;                                           10624000
              IF SEQBLANKTOG THEN                                       10625000
         BEGIN                                                          10626000
              OCTTODEC(XREFSEQ,SEQ) ; SEQBLANKTOG ~ FALSE ;             10627000
         END ;                                                          10628000
              FIXCOL73(LCR) ; ASTERCONTROLS ; GO TO ENDREAD ;           10629000
         END ;                                                          10630000
              IF DOLLARFLAG THEN                                        10631000
         BEGIN                                                          10632000
              FIXCOL73(LCR) ;                                           10633000
              SETUPCONTROLS ; GO TO ENDREAD ;                           10634000
         END ;                                                          10635000
              IF TRANSTOG THEN                                          10636000
              MOVEWORDS(ASMLBUFF[DEVICE,0],GLOBE[0],10);                10637000
              IF NEWTOG AND NOT VOIDTOG THEN                            10638000
              IF NOTLAST OR NEWPATCHTOG THEN                            10639000
              IF (RESEQTOG AND NOTBLANK) OR NOT RESEQTOG THEN           10640000
         BEGIN                                                          10641000
              IF RESEQTOG THEN                                          10642000
              IF COBOLTOG THEN                                          10643000
              MOVECHARS(GLOBE[9],COBOLBUFF[DEVICE,0],2,0,6) ELSE        10644000
              IF ASMLTOG THEN                                           10645000
              MOVECHARS(GLOBE[9],ASMLBUFF[DEVICE,0],2,1,6);             10646000
              IF NOT PUNCHTOG THEN                                      10647000
              IF ASMLTOG THEN                                           10648000
              WRITE(SWOUT,10,ASMLBUFF[DEVICE,*]) ELSE                   10649000
              IF COBOLTOG THEN                                          10650000
              WRITE(SWOUT,10,COBOLBUFF[DEVICE,*]) ELSE                  10651000
              WRITE(SWOUT,10,GLOBE[*]) ;                                10652000
              IF PUNCHTOG THEN                                          10653000
              IF ASMLTOG THEN                                           10654000
              WRITE(NEWPUNCH[PUNCHSW],10,ASMLBUFF[DEVICE,*]) ELSE       10655000
              IF COBOLTOG THEN                                          10656000
              WRITE(NEWPUNCH[PUNCHSW],10,COBOLBUFF[DEVICE,*]) ELSE      10657000
              WRITE(NEWPUNCH[PUNCHSW],10,GLOBE[*]);                     10658000
         END ;                                                          10659000
              IF NEWTOG THEN NEWTAPEOPENED ~ TRUE ;                     10660000
              IF INVTOG THEN                                            10661000
         BEGIN                                                          10662000
              FOR IJUNK ~ 1 STEP 1 UNTIL INVCH[0] DO                    10663000
              SETCHAR(GLOBE[INVCH[IJUNK] DIV 8] , INVCH[IJUNK].[45:3],  10664000
                      12) ; IF NOT INVALLTOG THEN INVTOG ~FALSE ;       10665000
              Q.[18:6] ~ "%" ;                                          10666000
         END ;                                                          10667000
ENDREAD:                                                                10668000
              IF SEQBLANKTOG THEN                                       10669000
         BEGIN                                                          10670000
              SEQBLANKTOG ~ FALSE ; OCTTODEC(XREFSEQ,SEQ) ;             10671000
         END ;                                                          10672000
RETURN:                                                                 10673000
              IF NOT TRANSTOG THEN                                      10674000
              FIXCOL73(LCR) ;                                           10675000
              IF ONLYTOG AND NOT VOIDTOG THEN GO TO START ;             10676000
              IF FORTRTOG THEN                                          10677000
         BEGIN                                                          10678000
              IF CHECKCHAR(GLOBE[0],0,"C") THEN GO TO START;            10679000
              IF CHECKCHAR(GLOBE[0],0,"*") THEN GO TO START;            10680000
         END ;                                                          10681000
              IF NEWMULTITOG THEN GO TO START ;                         10682000
              IF NOTLAST THEN                                           10683000
              IF NOT TRANSTOG THEN                                      10684000
              IF NOT NOTBLANK THEN GO TO START;                         10685000
              IF NOT VOIDTOG THEN                                       10686000
              IF LISTONLYTOG OR RESEQONLY THEN GO TO START ;            10687000
              DOCOUTPUT ~ TEMPTOG;                                      10688000
         END READATAPE ;                                                10689000
COMMENT + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + ; 10690000
COMMENT DOCUMENT* PAGE INDEX SKIP 2  * * * * * * * * * * * * * * * *    10691000
3. FIRST EXECUTABLE STATEMENT.                                          10692000
* SKIP 2 CODE 1* * * * * * * * * * * * * * * * * * * * * * * * * * * ;  10693000
              DATE ~ " 3DC70"; % % % % %                                10694000
              DISCMCP ~TRUE ; DOCONLY ~ FALSE ;                         10695000
              NOSPOTOG ~ REMOTETOG ~ FALSE ;                            10696000
              STARTIME ~ TIME(1) ;                                      10697000
              PROCTIME ~ TIME(2) ;                                      10698000
              ZLCOUNTMAX~78;                                            10699000
              PROGID~ "SITE  ";                                         10700000
              WRITE(SPOOUT,STARTJOB,PROGID,DATE);                       10701000
              CORESIZE ~ 6000 ;                                         10702000
              IF DOCONLY THEN DOCTOG ~TRUE ;                            10703000
         BEGIN                                                          10704000
COMMENT       BLOCK TO COMPUTE CURRENT DATE ETC ;                       10705000
ARRAY         MONTHS[0:12] ;                                            10706000
COMMENT DOCUMENT* 35 * * * * * * * * * * * * * * * * * * * * * * * * ;  10707000
PROCEDURE     DATECONVERT(YEAR,MONTH,DAY,HOUR,MINUTE,SECOND,            10708000
              TIME0,TIME1) ;                                            10709000
VALUE         TIME0,TIME1 ;                                             10710000
REAL          TIME0,TIME1 ;                                             10711000
INTEGER       YEAR,MONTH,DAY,HOUR,MINUTE,SECOND ;                       10712000
COMMENT  ASKS MCP FOR TIME AND CONVERTS ANSWER ;                        10713000
         BEGIN                                                          10714000
INTEGER       I,DAYS ;                                                  10715000
REAL          TEMP ;                                                    10716000
LABEL         GOOD,CONT ;                                               10717000
ARRAY         MONDAYS[0:15] ;                                           10718000
              FILL MONDAYS[*]WITH 0,                                    10719000
              31,59,90,120,151,181,212,243,273,304,334,365 ;            10720000
              COMMENT  CHECK FOR LEAP YEAR AND FIX IT UP;               10721000
              TEMP ~ TIME0 ;                                            10722000
              DTOCT(TEMP,3,YEAR,2) ; DTOCT(TEMP,5,DAYS,3) ;             10723000
              IF YEAR MOD 4 = 0 AND YEAR MOD 100 ! 0 THEN               10724000
              FOR I ~ 2 STEP 1 UNTIL 12 DO                              10725000
              MONDAYS[I]~ MONDAYS[I] +  1 ;                             10726000
              FOR I ~ 1 STEP 1 UNTIL 12 DO                              10727000
         BEGIN                                                          10728000
              IF DAYS { MONDAYS[I] THEN GO TO GOOD ;                    10729000
         END ;                                                          10730000
              MONTH ~ 12 ; DAY ~ 31 ; GO TO CONT ;                      10731000
GOOD:         MONTH ~ I ; DAY ~ DAYS - MONDAYS[I-1] ;                   10732000
CONT:         TEMP ~ TIME1 ;                                            10733000
              HOUR ~ TEMP DIV 216000.0 ;                                10734000
              MINUTE ~ (TEMP DIV 3600) MOD 60 ;                         10735000
              SECOND ~(TEMP DIV 60 ) MOD 60 ;                           10736000
         END DATECONVERT ;                                              10737000
COMMENT DOCUMENT* 31 * * * * * * * * * * * * * * * * * * * * * * * * ;  10738000
STREAM PROCEDURE FILLDATEBUFF(DAY,MONTHA,YEAR,DATEBUFF) ;               10739000
COMMENT  SETS UP DATEBUFF WITH RESULT OF DATECONVERT AND TABLES ;       10740000
         BEGIN                                                          10741000
              DI ~ DATEBUFF ; DS ~ 16 LIT "    " ;                      10742000
              SI ~ DAY ; DI ~ DATEBUFF ; DS ~ 2 DEC ;                   10743000
              SI ~ MONTHA ; SI ~SI + 5 ; DI ~ DI + 1 ; DS ~ 3 CHR ;     10744000
              SI ~ YEAR ; DI ~ DI + 1 ; DS ~ 2 DEC ;                    10745000
              SI ~ DATEBUFF ; IF SC ="0" THEN                           10746000
         BEGIN                                                          10747000
              SI ~SI + 9 ; DI ~ DATEBUFF ; DS ~ 1 LIT " " ;             10748000
         END ;                                                          10749000
         END FILL DATEBUFF ;                                            10750000
              FILL MONTHS[*] WITH 0,"JAN","FEB","MAR","APR","MAY",      10751000
                    "JUN","JUL","AUG","SEP","OCT","NOV","DEC" ;         10752000
              DATECONVERT(YEAR,MONTH,DAY,HOUR,MINUTE,SECOND,            10753000
              TIME(0),TIME(1)) ;                                        10754000
              MONTHA ~ MONTHS[MONTH] ;                                  10755000
                 FILLDATEBUFF(DAY,MONTHA,YEAR,DATEBUFF) ;               10756000
         END ;                                                          10757000
              MAXCOLS ~ IF REMOTETOG THEN 68 ELSE 118 ;                 10758000
              TEMP ~ 99999999; OCTTODEC (TEMP,NINES);                   10759000
              FILL SPOMESS[1,*] WITH "NO DOCUM","ENT FOUN","D ~     ";  10760000
              FILL SPOMESS[2,*] WITH "DOCUMENT"," FOUND ~";             10761000
              FILL SPOMESS [3,*] WITH "FLOWCHAR","T FOUND ","~       "; 10762000
              FILL SPOMESS[4,*] WITH "NO FLOWC","HART FOU","ND ~    ";  10763000
              FILL REVISIONS [*] WITH "        ",                       10764000
              "      AA","      AB","      AC","      AD","      AE",   10765000
              "      AF","      AG","      AH","      AJ","      AK",   10766000
              "      AL","      AM","      AN","      AP","      AR",   10767000
              "      AS","      AT","      AU","      AV","      AW",   10768000
              "      AX","      AY","      AZ","      BA","      BB",   10769000
              "      BC","      BD","      BE","      BF","      BG",   10770000
              "      BH","      BJ","      BK","      BL","      BM",   10771000
              "      BN","      BP","      BR","      BS","      BT",   10772000
              "      BU","      BV","      BW","      BX","      BY",   10773000
              "      BZ","      CA","      CB","      CC","      CD",   10774000
              "      CE","      CF","      CG","      CH","      CJ",   10775000
              "      CK","      CL","      CM","      CN","      CP",   10776000
              "      CR","      CS","      CT","      CU","      CV",   10777000
              "      CW","      CX","      CY","      CZ","      DA",   10778000
              "      DB","      DC","      DD","      DE","      DF",   10779000
              "      DG","      DH","      DJ","      DK","      DL",   10780000
              "      DM","      DN","      DP","      DR","      DS",   10781000
              "      DT","      DU","      DV","      DW","      DX",   10782000
              "      DY","      DZ","      EA","      EB","      EC",   10783000
              "      ED","      EE","      EF","      EG","      EH";   10784000
         BEGIN                                                          10785000
INTEGER       BLOCKEXTENDER;                                            10786000
              ZNOSKIP ~ FALSE;                                          10787000
              PATCHPAGE ~ FALSE;                                        10788000
              BACKIND ~0;                                               10789000
              DOCOUTPUT ~ FALSE;                                        10790000
              TTAPEOPENED ~ FALSE ;                                     10791000
              LISTCARDTOG ~ FALSE ;                                     10792000
              PROCFLAG ~ PROCTOG ~ XREFTOG ~ FALSE ;                    10793000
              DUMPFLAG ~ CASTOG ~VOIDTOG ~           LISTOG ~ FALSE ;   10794000
              BUILDTOG ~ RESERVEDTOG ~ FALSE ;                          10795000
              LFPAGEID ~ TRUE ; PAGEID ~ "      " ;                     10796000
              SAVEPAGEINC ~ PAGEINC ~ 1 ;                               10797000
              BUILDEBUG~ RESEQTOG ~ SEQTOG ~ NEWTOG ~ PRINTOG ~ FALSE ; 10798000
              DOCDEBUG ~ FALSE ;                                        10799000
              CLEARTITLETOG ~ FALSE ;                                   10800000
              BACKUPTOG ~ PUNCHTOG ~ DEBUG ~ DOCLISTOG ~FALSE ;         10801000
              BLANKNEWSEQ ~ PBACKONLY ~ FALSE ;                         10802000
              RESEQONLY ~ FALSE ;                                       10803000
              DOUBLEONLY ~ TRUE ; SIXLINES ~ FALSE ;                    10804000
              PATCHLETTER ~ "*" ;                                       10805000
              SNEWSEQ ~ 0 ;                                             10806000
              DOCER ~ 0 ;                                               10807000
              BEGINTOG ~ TRUE ;                                         10808000
              FLOWTOG ~ SYNTAXTOG ~ FALSE ;                             10809000
              FSYNTAXTOG~FALSE;                                         10810000
              MAKEIRTOG ~ MAKETOG ~ FALSE ;                             10811000
              LISTONLYTOG ~ FALSE ;                                     10812000
              NAMEPUNCH ~ FALSE ;                                       10813000
              BIGTOG ~ SHUFFLETOG ~FALSE ;                              10814000
              COUNTOG ~ CONTCARD ~ FALSE ;                              10815000
              BACKUPUSED ~ FALSE ;                                      10816000
              CARDSOPEN ~ TRUE ;                                        10817000
              BACKIND ~0 ;                                              10818000
              ALLTOG ~ FROMTOG ~ TOENDTOG ~ FALSE ;                     10819000
              PUNCHTOG ~ ALPHATOG ~ FALSE ;                             10820000
              PATCHTOG ~PATCHFLAG ~FALSE ;                              10821000
              DOCXREFTOG ~ FALSE ;                                      10822000
              ZPAGEN ~ZCONTPAGEN ~ 0;                                   10823000
              PAGEPOINT ~0;                                             10824000
              DECIMALSTOG~ FALSE;                                       10825000
              MOVEWORDS (NINES,CTSEQ,1);CLEAR(LCSEQ,1);                 10826000
              HEADPOINT ~ 0 ; CLEAR(HEADING,14) ;                       10827000
              CLEAR(BLANKARRAY,14) ;                                    10828000
              DATETOG ~ FIRSTDOLLAR ~ FALSE ;                           10829000
              TAPETOG ~ RESEQTOG ~ NOTLAST ~ FALSE ;                    10830000
              DEVICE ~ 1 ; COMMENT READ CARDS ;                         10831000
              FIRSTCHAR ~ 0 ; LASTCHAR ~""" ;                           10832000
              BINDENT ~ 2 ;                                             10833000
              LOOKFORDOLLAR ~ TRUE ;                                    10834000
              NWPR ~ 10 ; W ~ NWPR - 1 ;                                10835000
              CLEAR(GLOBE,14) ;                                         10836000
              BLOCKTOG ~ FALSE;                                         10837000
               LOGICTOG ~ FALSE ;                                       10838000
              ONLYTOG ~ TRUE;                                           10839000
         END;                                                           10840000
MORECAST:                                                               10841000
         BEGIN                                                          10842000
INTEGER       BLOCKEXTENDER;                                            10843000
              BKRCRDCOUNT ~ BKDIRCOUNT ~VOLUME~0;                       10844000
              NIDENT ~ PP ~ 0 ; RR ~ 1 ;                                10845000
              PLSAVE ~ GLSAVE ~ 1 ; GINDSAVE ~ 0 ;                      10846000
              PHSAVE ~ GHSAVE ~ 72 ;                                    10847000
             NOPROC ~ PARLOW ~ 0 ; PARHIGH ~ 71 ;                       10848000
              BPOINT ~ 12 ;                                             10849000
              IF NOT ONLYTOG THEN                                       10850000
              FOR I ~ 0 STEP 1 UNTIL 125 DO STACK[I] ~ 0 ;              10851000
              QUOTETOG ~ SEQBLANKTOG ~ FALSE ;                          10852000
              PRINTCLOSED ~ BACKUPCLOSED ~TRUE ;                        10853000
              DOCUMENTFOUND ~ FALSE ;                                   10854000
              NAMETOG ~ PROCXREFLAG ~ PROCBLKFLAG ~ FALSE ;             10855000
              STREAMTOG ~ COMMENTOG ~ FALSE ;                           10856000
              NENDS ~ CURBEG ~ BEGINDEX ~ 0 ;                           10857000
              CLEAR(GLOBE,14) ;                                         10858000
              CLEAR(LISTBUFFER,14) ; CLEAR(OLDSEQ,0);                   10859000
              CARDTALLY ~ 0 ;                                           10860000
              IF NOT ONLYTOG THEN                                       10861000
              FOR I ~ 0 STEP 1 UNTIL 63 DO TALLIES[I] ~ 0 ;             10862000
              NEWSEQ ~ 0 ; SEQINC ~ 1000 ; XREFSEQ ~ 99000000 ;         10863000
              LASTCURSEQ ~ LASTSEQLINK ~ 0 ;                            10864000
              TOTAL ~ 0 ;                                               10865000
              READATAPE ;                                               10866000
         END;                                                           10867000
COMMENT DOCUMENT* PAGE INDEX SKIP 2  * * * * * * * * * * * * * * * * *  10868000
4. MAJOR SUB-BLOCKS OF PROGRAM.                                         10869000
* SKIP PARAGRAPH 5,67,0                                                 10870000
THESE ARE INCLUDED BECAUSE OF THEIR SIMILAR FUNCTION TO THAT OF         10871000
THE PROCEDURE PRINTDOCUMENT.;                                           10872000
              IF TRANSTOG THEN                                          10873000
         BEGIN                                                          10874000
COMMENT DOCUMENT* INDEX INDENT 1 SKIP 3 UNDERLINE * * * * * * * * * *   10875000
BLOCK TO TRANSLATE ASSEMBLY LANGUAGE TO FLOW LANGUAGE.                  10876000
* SKIP                                                                  10877000
         THIS BLOCK TRANSLATES B3500 ASSEMBLY LANGUAGE INTO FLOWCHART   10878000
         LANGUAGE.  THE BASIC SCHEME IS TO USE REMARKS ("REMK" OR BLANK 10879000
         OPCODES, COLS 63-80 ON OTHER CARDS) FOR BASIC BOXES AND TO     10880000
         USE TEST, BRANCH, AND COMPARE INSTRUCTIONS FOR TEST BOXES AND  10881000
         BRANCHES.  CERTAIN OTHER INSTRUCTIONS, SUCH AS I/O COMMANDS,   10882000
         CAUSE SPECIAL BOX TYPES.                                       10883000
* END ;                                                                 10884000
LABEL         EOFF,RDD;                                                 10885000
LABEL         RDOVER;                                                   10886000
INTEGER       RBLANKS;                                                  10887000
INTEGER       RELAPOS;                                                  10888000
INTEGER       COUNTER,TYPE,NLINES,TCOUNTER,SVCOUNT;                     10889000
INTEGER       ASMSEQ;                                                   10890000
INTEGER       LEVEL,TEMP,SEGINDEX;                                      10891000
INTEGER       RECORDS;                                                  10892000
INTEGER       TEMPSWIND ;                                               10893000
INTEGER       LINECOUNT ;                                               10894000
LABEL         NOTRELATION;                                              10895000
LABEL         RD,EOF;                                                   10896000
LABEL         REMKSTAR;                                                 10897000
BOOLEAN       BOOL;                                                     10898000
LABEL         START ;                                                   10899000
BOOLEAN       ETOG,BTOG,CTOG,TOGTOG;                                    10900000
BOOLEAN       ATOG;                                                     10901000
BOOLEAN       BOXCLOSED;                                                10902000
BOOLEAN       ESKIP;                                                    10903000
BOOLEAN       FIRSTLINE,DATAFLAG ;                                      10904000
BOOLEAN       BCTOG;                                                    10905000
BOOLEAN       SVNEWTOG;                                                 10906000
ALPHA         REL;                                                      10907000
ALPHA         OPCODE;                                                   10908000
ALPHA         ANUM ;                                                    10909000
ARRAY         FLOWBUF,TEMPBUF[0:20];                                    10910000
ARRAY         TEMPBUF2[0:15];                                           10911000
ARRAY         BUF[0:15];                                                10912000
ARRAY         INFO[0:25];                                               10913000
ARRAY         TEST,      ENTER, T, F, QUIT, EQUALS, INR, IS, GOTO,      10914000
              ENDR, BEGINR[0:0];                                        10915000
ARRAY         WITHR [0:0] ;                                             10916000
SAVE ARRAY    BOX[0:0];                                                 10917000
ARRAY         SINGLEWORDS [0:40] ;                                      10918000
ARRAY         COMMENTR, SE [0:1];                                       10919000
ARRAY         DIF,AT[0:2];                                              10920000
ARRAY         SEQ, SLS, SGR [0:3];                                      10921000
ARRAY         SZ, S1, SD, SNQ, OFL, BOT, BZT [0:4];                     10922000
FORMAT        IFORM1 (I6);                                              10923000
FORMAT        AFORM(A6);                                                10924000
FORMAT        SEGHEAD (" * BEGIN HEADING SEGMENT NUMBER", I5, " *");    10925000
FORMAT        TABLEFORM2 ( "%%") ;                                      10926000
DEFINE        A =[12:18]#,B= [30:18]#,C=[1:1]#,D =[2:1]#;               10927000
DEFINE        E = [3:1]#, G = [4:1] #;                                  10928000
COMMENT  INFO[LEVEL].E TELLS IF DATAFLAG FOR THIS SEG,                  10929000
         INFO[LEVEL].G TELLS IF FIRSTLINE FOR THIS SEG;                 10930000
DEFINE        MASK = BUF[0] #;                                          10931000
COMMENT DOCUMENT* 35 * * * * * * * * * * * * * * * * * * * * * * * * *; 10932000
PROCEDURE     WRITEDISK(A,COUNTER,CLEARTOG);                            10933000
VALUE         CLEARTOG;                                                 10934000
BOOLEAN       CLEARTOG;                                                 10935000
INTEGER       COUNTER;                                                  10936000
ARRAY         A[0];                                                     10937000
COMMENT  WRITES BUFFERS IN DISK AND COUNTS RECORDS ;                    10938000
         BEGIN                                                          10939000
              IF MONITOG THEN WRITE(LINE,MONITFORM,"WRITED","ISK   ");  10940000
              IF DEBEATLETOG THEN WRITE(LINE,15,A[*]);                  10941000
              WRITE(SWOUT,10,A[*]);                                     10942000
              RECORDS ~ RECORDS + 1;                                    10943000
              IF CLEARTOG THEN CLEAR(A[0],14);                          10944000
              COUNTER ~ 0;                                              10945000
         END WRITEDISK;                                                 10946000
DEFINE        CLOSEBOX =                                                10947000
         BEGIN                                                          10948000
              BOXCLOSED ~ TRUE;                                         10949000
              LINECOUNT ~ 0;                                            10950000
              COUNTER ~ COUNTER + 1;                                    10951000
                 SETCHAR(FLOWBUF[COUNTER DIV 8],COUNTER.[45:3],"*");    10952000
         END#;                                                          10953000
DEFINE        MOVETEXT =                                                10954000
              IF COUNTER + COUNT } 71 THEN                              10955000
              WRITEDISK(FLOWBUF,COUNTER,TRUE);                          10956000
              IF COUNT > 72 THEN COUNT ~ 72;                            10957000
              IF COUNT > 63 THEN                                        10958000
         BEGIN                                                          10959000
              MOVECHARS(BUF[0],FLOWBUF[COUNTER DIV 8],0,                10960000
                 COUNTER.[45:3],63);                                    10961000
              COUNT ~ COUNT -63;                                        10962000
              COUNTER ~ COUNTER + 63;                                   10963000
              MOVECHARS(BUF[7],FLOWBUF[COUNTER DIV 8],  7,              10964000
                  COUNTER.[45:3],COUNT);                                10965000
         END ELSE                                                       10966000
              MOVECHARS(BUF[0],FLOWBUF[COUNTER DIV 8],0,                10967000
                 COUNTER.[45:3],COUNT);                                 10968000
              COUNTER ~ COUNTER +COUNT;                                 10969000
              IF COUNTER } 71 THEN                                      10970000
              WRITEDISK(FLOWBUF,COUNTER,TRUE);                          10971000
              #;                                                        10972000
DEFINE        GETOP =                                                   10973000
              TYPE ~ 1;                                                 10974000
              OPCODE ~ 0;                                               10975000
              IF CHECKCHAR (GLOBE[0],16," ") THEN                       10976000
              MOVECHARS (GLOBE[0],OPCODE,13,5,3) ELSE                   10977000
              MOVECHARS(GLOBE[0],OPCODE,13,4,4) #;                      10978000
COMMENT DOCUMENT* 32 * * * * * * * * * * * * * * * * * * * * * * * * *; 10979000
BOOLEAN STREAM PROCEDURE VARCONST(FIELD,SOURCE,DEST,DPOS);              10980000
VALUE         FIELD,DPOS;                                               10981000
COMMENT  PICKS OFF VARIANT FIELD AND ADDS TO IDENTIFIER ;               10982000
         BEGIN                                                          10983000
              DI ~ DEST; DI ~ DI + DPOS;                                10984000
              SI ~ SOURCE; SI ~ SI + FIELD;                             10985000
              IF SC ! " " THEN BEGIN DS ~ 1 LIT ".";                    10986000
              SI ~ SI-1;  IF SC! " " THEN DS~ 1 CHR  ELSE SI~SI+1;      10987000
                               DS ~ 1 CHR; TALLY ~ 1 END                10988000
                          ELSE TALLY ~ 0;                               10989000
              DS ~ 1 LIT " ";                                           10990000
              VARCONST ~ TALLY;                                         10991000
         END;                                                           10992000
COMMENT DOCUMENT* 32 * * * * * * * * * * * * * * * * * * * * * * * * *; 10993000
INTEGER STREAM PROCEDURE WORDCONST(FIELD,SOURCE,DEST,DPOS);             10994000
VALUE         FIELD,DPOS;                                               10995000
COMMENT  BUILDS AN ID USING INFO IN ADDRESS FIELD, INX, & TYPE;         10996000
         BEGIN                                                          10997000
              DI ~ DEST; DI ~ DI + DPOS;                                10998000
              SI ~ SOURCE; SI ~ SI + FIELD;                             10999000
              IF SC = "*" THEN BEGIN DS ~ 4 LIT "SELF";                 11000000
              SI~SI+6; TALLY ~4;END ELSE                                11001000
              6(IF SC ! " " THEN BEGIN DS ~ 1 CHR;                      11002000
                                 TALLY ~ TALLY + 1 END                  11003000
                          ELSE SI ~ SI +1);                             11004000
              DS ~ 1 LIT ".";                                           11005000
              IF SC ! "-" THEN DS ~ 1 LIT "+" ELSE DS ~ 1 LIT "-";      11006000
              IF SC = " " THEN SI ~ SI +1 ELSE IF SC = "+"              11007000
              THEN SI ~ SI+1 ELSE IF SC ="-" THEN SI ~ SI + 1 ELSE      11008000
              BEGIN DS ~ 1 CHR; TALLY ~ TALLY + 1; END;                 11009000
              IF SC = " " THEN SI ~ SI +1 ELSE BEGIN DS ~ 1 CHR;        11010000
                                     TALLY ~ TALLY +1 END;              11011000
              IF SC = " " THEN BEGIN SI ~ SI+1; DI ~DI-2;               11012000
                          DS~ 2 LIT "  "; DI ~DI-2 END ELSE             11013000
                          BEGIN DS ~ 1 CHR;                             11014000
                                     TALLY ~ TALLY +3 END;              11015000
              IF SC = "1" THEN BEGIN DS ~ 4 LIT ".IX1";                 11016000
                               TALLY ~ TALLY +4; END ELSE               11017000
              IF SC = "2" THEN BEGIN DS ~ 4 LIT ".IX2";                 11018000
                               TALLY ~ TALLY +4 END  ELSE               11019000
              IF SC = "3" THEN BEGIN DS ~ 4 LIT ".IX3";                 11020000
                              TALLY ~ TALLY +4 END;                     11021000
              SI ~ SI +1; IF SC ! " " THEN BEGIN DS ~ 1 LIT ".";        11022000
                           DS ~ 2CHR; TALLY ~ TALLY + 3 END;            11023000
              WORDCONST ~ TALLY;                                        11024000
         END;                                                           11025000
COMMENT DOCUMENT* 32 * * * * * * * * * * * * * * * * * * * * * * * * *; 11026000
BOOLEAN STREAM PROCEDURE LITCONST(SOURCE,FIELD,DEST,DPOS,NCHARS);       11027000
VALUE         FIELD,DPOS,NCHARS;                                        11028000
COMMENT  BUILDS LITERALS FROM ADDRESS FIELDS ;                          11029000
         BEGIN                                                          11030000
LABEL         L;                                                        11031000
              SI~SOURCE; SI~SI+FIELD; SI~ SI+10;                        11032000
              DI~ DEST; DI~ DI+DPOS;                                    11033000
              IF SC= "N" THEN BEGIN  SI ~ SI-10; DS~ NCHARS CHR;        11034000
                   GO TO L; END;                                        11035000
              IF SC = "S" THEN BEGIN  SI~SI-10; DS ~ NCHARS CHR;        11036000
              DS ~ CHR ;                                                11037000
                 GO TO L END;                                           11038000
              IF SC = "A" THEN BEGIN DS ~ 1 LIT """; TALLY ~1;          11039000
                             SI ~ SI-10;                                11040000
                 DS ~ NCHARS CHR; DS ~ 1 LIT """; GO TO L END;          11041000
              IF SC = "L" THEN BEGIN DS ~ 1 LIT "["; TALLY ~ 1;         11042000
                 SI ~ SI-10;                                            11043000
                 DS ~ NCHARS CHR; DS ~ 1 LIT "]"; GO TO L END;          11044000
L:            LITCONST ~ TALLY;                                         11045000
         END;                                                           11046000
COMMENT DOCUMENT* 32 * * * * * * * * * * * * * * * * * * * * * * * * *; 11047000
BOOLEAN STREAM PROCEDURE LITTEST(SOURCE,FIELD);                         11048000
VALUE         FIELD;                                                    11049000
COMMENT  TRUE IF ADDRESS FIELD IS A LITERAL ;                           11050000
         BEGIN                                                          11051000
              SI~SOURCE; SI~ SI+ FIELD;                                 11052000
              IF SC = "L" THEN TALLY ~1 ELSE TALLY ~ 0;                 11053000
              LITTEST ~ TALLY;                                          11054000
         END;                                                           11055000
COMMENT DOCUMENT* 32 * * * * * * * * * * * * * * * * * * * * * * * * *; 11056000
STREAM PROCEDURE REMKEDIT(S,D,SPOS,DPOS,NCHARS,COUNT);                  11057000
VALUE         SPOS,DPOS,NCHARS;                                         11058000
COMMENT  FIXES REMARK FIELD TO BE LEGAL FLOW INPUT ;                    11059000
         BEGIN                                                          11060000
LABEL         L1,L2,L3;                                                 11061000
LABEL         L4;                                                       11062000
LOCAL         T1;                                                       11063000
              SI~S; SI~SI+ SPOS; DI~ D; DI~DI+DPOS;                     11064000
              NCHARS(IF SC! " " THEN JUMP OUT 1 TO L1; SI~SI+1;);       11065000
              GO TO L2;                                                 11066000
L1:           NCHARS (L3: IF SC = "%" THEN JUMP OUT 1 TO L2;            11067000
                IF SC = " " THEN BEGIN DS ~ 1 CHR;                      11068000
                NCHARS ( IF SC ! " " THEN JUMP OUT 1 TO L3;             11069000
                 SI~SI+ 1;);END; IF SC = "."                            11070000
              THEN BEGIN DS ~ 1 CHR; DS ~ 1 LIT "#" END ELSE IF SC =    11071000
              "*" THEN BEGIN DS ~ 1 LIT """; DS ~ 1 CHR;                11072000
              DS ~ 1 LIT """ ; END ELSE IF SC = ";" THEN BEGIN          11073000
              DS ~ 1 LIT """; DS ~ 1 CHR; DS~ 1 LIT """  END ELSE       11074000
              DS ~ 1 CHR;);                                             11075000
L2:                                                                     11076000
              DS ~3 LIT ". %"; DI ~ T1; SI ~ D;SI~SI+DPOS;              11077000
L4:           IF SC ! "%" THEN BEGIN DI~DI+8; SI~SI+1; GO TO L4; END;   11078000
              SI ~LOC T1; T1 ~ DI; DI~ COUNT; DS ~ WDS;                 11079000
         END REMKEDIT;                                                  11080000
COMMENT DOCUMENT* 33* * * * * * * * * * * * * * * * * * * * * * * * * ; 11081000
BOOLEAN PROCEDURE CHARSNOTBLANK (S,SPOS,N);                             11082000
VALUE         SPOS,N ;                                                  11083000
REAL  S;   INTEGER   SPOS,N;                                            11084000
COMMENT  TRUE IF FIELD BLANK OR HEADED BY ESCAPE CHR;                   11085000
         BEGIN                                                          11086000
LABEL         F;                                                        11087000
COMMENT DOCUMENT* 32* * * * * * * * * * * * * * * * * * * * * * * * * ; 11088000
REAL STREAM PROCEDURE CHRABS(A,POS) ;                                   11089000
VALUE         POS ;                                                     11090000
COMMENT  GIVES ABSOLUTE ADDRESS OF A +POS;                              11091000
         BEGIN                                                          11092000
              DI ~A ; DI ~ DI+POS; CHRABS ~ DI;                         11093000
         END ;                                                          11094000
              IF CNBLANK (S,SPOS,N)  THEN  IF ESCAPETOG THEN            11095000
         BEGIN                                                          11096000
              ESKIP ~ TRUE;                                             11097000
              NCR ~ CHRABS(S,SPOS);                                     11098000
              SCAN;                                                     11099000
              FOR I ~ 0 STEP 1 UNTIL ESIND DO                           11100000
              IF Q = ESTABLE[I] THEN                                    11101000
         BEGIN                                                          11102000
              ESKIP ~ FALSE; GO TO F;                                   11103000
         END ;                                                          11104000
         END ELSE                                                       11105000
              CHARSNOTBLANK ~ TRUE   ELSE                               11106000
F:            CHARSNOTBLANK ~ FALSE;                                    11107000
         END CHARSNOTBLANK ;                                            11108000
COMMENT DOCUMENT* 32 * * * * * * * * * * * * * * * * * * * * * * * * *; 11109000
INTEGER STREAM PROCEDURE MOVELABEL(S,D,SPOS,DPOS,MAXNO);                11110000
VALUE         SPOS,DPOS,MAXNO;                                          11111000
COMMENT  MOVES UP TO MAXNO CHRS AND ADDS COLON ;                        11112000
         BEGIN                                                          11113000
              SI~S; SI~SI+SPOS; DI~D; DI~DI+DPOS;                       11114000
              MAXNO(IF SC = " " THEN SI~ SI+ 1 ELSE BEGIN DS ~ 1 CHR;   11115000
              TALLY ~ TALLY + 1 END);                                   11116000
              DS ~ 2 LIT ": "; TALLY ~ TALLY +2;                        11117000
              MOVELABEL ~ TALLY ;                                       11118000
         END;                                                           11119000
COMMENT DOCUMENT* 32 * * * * * * * * * * * * * * * * * * * * * * * * *; 11120000
STREAM PROCEDURE NARRATE (D,DPOS,S,COUNT);                              11121000
VALUE         DPOS;                                                     11122000
COMMENT  MOVES TEXT FROM S TO SPOS, PUTS NP. CHRS IN COUNT ;            11123000
         BEGIN                                                          11124000
LOCAL         T;                                                        11125000
              SI ~ S; DI~ LOC T; DI ~ DI + 7; DS ~ CHR;                 11126000
              DI ~ D; DI~ DI + DPOS; DS ~ 1 LIT " ";                    11127000
              DS ~ T CHR; DS ~ 1 LIT " ";                               11128000
              TALLY ~ T ; TALLY ~ TALLY +2; T ~ TALLY;                  11129000
              SI~ LOC T; DI ~ COUNT; DS ~ WDS;                          11130000
         END;                                                           11131000
COMMENT DOCUMENT* 32 * * * * * * * * * * * * * * * * * * * * * * * * *; 11132000
BOOLEAN STREAM PROCEDURE NEXTCHAR(S,SPOS,CHAR);                         11133000
VALUE         SPOS,CHAR;                                                11134000
COMMENT  TRUE IF NEXT CHR FROM S + SPOS IS CHAR ;                       11135000
         BEGIN                                                          11136000
LABEL         L;                                                        11137000
              SI~S; SI~ SI+ SPOS; DI~ LOC CHAR; DI ~ DI +7;             11138000
              10(8(IF SC ! " " THEN JUMP OUT 2 TO L; SI ~SI+1;));       11139000
L:            IF SC = DC THEN TALLY ~ 1 ELSE TALLY ~ 0;                 11140000
              NEXTCHAR ~ TALLY;                                         11141000
         END;                                                           11142000
COMMENT DOCUMENT* 33 * * * * * * * * * * * * * * * * * * * * * * * * *; 11143000
PROCEDURE CONSTRUCT(FIELD);                                             11144000
VALUE         FIELD;                                                    11145000
INTEGER       FIELD;                                                    11146000
COMMENT  BUILDS A BPL-LIKE IDENTIFIER FROM ASSEMBLY LANGUAGE ;          11147000
         BEGIN                                                          11148000
INTEGER       ABCFIELD,ABF;                                             11149000
              IF FIELD = 1 OR FIELD = 4 THEN                            11150000
         BEGIN                                                          11151000
              ABCFIELD ~ 21; ABF ~ 18;                                  11152000
         END ELSE                                                       11153000
              IF FIELD = 2 THEN                                         11154000
         BEGIN                                                          11155000
              ABCFIELD ~ 33; ABF ~ 20;                                  11156000
         END ELSE ABCFIELD ~45;                                         11157000
              IF FIELD = 1 OR FIELD = 2 THEN                            11158000
         BEGIN                                                          11159000
              IF LITTEST (GLOBE[0],ABCFIELD+11) THEN                    11160000
         BEGIN                                                          11161000
              DTOCT(GLOBE[0],ABF,COUNT,1);                              11162000
              IF COUNT > 6 THEN                                         11163000
         BEGIN                                                          11164000
              WRITE(LINE,IFORM1,COUNT);                                 11165000
              COUNT ~ 6;                                                11166000
         END;                                                           11167000
              IF COUNT = 0 THEN COUNT ~ 6;                              11168000
              IF LITCONST(GLOBE[0],ABCFIELD,BUF,0,COUNT) THEN           11169000
              COUNT ~ COUNT +2;                                         11170000
         END ELSE                                                       11171000
         BEGIN                                                          11172000
              COUNT ~ WORDCONST (ABCFIELD,GLOBE[0],BUF[0],0);           11173000
              IF VARCONST(ABF,GLOBE[0],BUF[0],COUNT) THEN               11174000
                 COUNT ~ COUNT + 3;                                     11175000
         END;                                                           11176000
         END ELSE                                                       11177000
              COUNT ~ WORDCONST(ABCFIELD,GLOBE[0],BUF[0],0);            11178000
         END CONSTRUCT;                                                 11179000
COMMENT DOCUMENT* 32 * * * * * * * * * * * * * * * * * * * * * * * * ;  11180000
PROCEDURE     UNLINK (TERMINAL);                                        11181000
VALUE         TERMINAL; BOOLEAN  TERMINAL;                              11182000
COMMENT  COLLECTS ALL RECORDS FROM EACH SEG TOGETHER ;                  11183000
         BEGIN                                                          11184000
LABEL         RD,NEXTSEG,EOF;                                           11185000
INTEGER       I;                                                        11186000
              IF ALLSEGS THEN MAXSEG ~ SEGINDEX;                        11187000
              IF NOT TERMINAL THEN                                      11188000
              REWIND (SWOUT);                                           11189000
              FOR I ~ 0 STEP 1 UNTIL MAXSEG DO                          11190000
         BEGIN                                                          11191000
              READ SEEK(SWIN[CHOOSEG[I].A]);                            11192000
RD:                                                                     11193000
              READ (SWIN,10,BUF[*]) [EOF];                              11194000
              IF CHECKCHAR(BUF[0],0,"%") THEN                           11195000
              IF CHECKCHAR (BUF[0],1,"0") THEN                          11196000
              IF TERMINAL OR BOOLEAN(CHOOSEG[I].C) THEN                 11197000
         BEGIN                                                          11198000
              CHOOSEG[I].D ~1;                                          11199000
              IF (TEMP ~ BUF[1]) = 0 THEN GO TO NEXTSEG;                11200000
              READ SEEK (SWIN[TEMP]);                                   11201000
              GO TO RD;                                                 11202000
         END;                                                           11203000
              OCTTODEC(ASMSEQ,BUF[9]);                                  11204000
              ASMSEQ ~ ASMSEQ +1000;                                    11205000
              WRITE(SWOUT,10,BUF[*]);                                   11206000
              GO TO RD;                                                 11207000
NEXTSEG:                                                                11208000
         END;                                                           11209000
EOF:                                                                    11210000
              IF NOT TERMINAL THEN                                      11211000
         BEGIN                                                          11212000
              FOR I ~ 0 STEP 1 UNTIL MAXSEG DO                          11213000
              IF BOOLEAN(CHOOSEG[I].D) THEN                             11214000
         BEGIN                                                          11215000
              FOR K ~ I+ 1 STEP 1 UNTIL MAXSEG DO                       11216000
              CHOOSEG [K-1] ~ CHOOSEG[K];                               11217000
              MAXSEG ~ MAXSEG -1;                                       11218000
         END;                                                           11219000
              SEGINDEX ~ MAXSEG;                                        11220000
         END;                                                           11221000
         END UNLINK;                                                    11222000
              SWFOUTIND ~3;                                             11223000
              IF ASMFLOWTOG OR NOT NEWTOG THEN SCRATCHTOG ~ TRUE;       11224000
              SVNEWTOG~NEWTOG ;                                         11225000
              NEWTOG~ FALSE;                                            11226000
              DOCLISTFLAG ~ TRUE;                                       11227000
              DOCLISTOG ~ LISTOG OR DOCLISTOG; LISTOG ~ FALSE;          11228000
              BMON ~  FALSE;                                            11229000
              GETOP ;                                                   11230000
              IF OPCODE = "0000" THEN READATAPE ;                       11231000
              IF DOCLISTOG THEN                                         11232000
         BEGIN                                                          11233000
              CLEAR(LISTBUFFER[0],14);                                  11234000
              MOVEWORDS (ASMLBUFF[DEVICE,*],LISTBUFFER [2],10);         11235000
              IF DOUBLEONLY THEN ZPL(ZLB,2,LISTBUFFER) ELSE             11236000
              ZPL(ZLB,1,LISTBUFFER);                                    11237000
         END;                                                           11238000
              FILL SINGLEWORDS [*] WITH                                 11239000
                "4OPEN   ", "5CLOSE  ", "5WRITE  ", "4READ   ",         11240000
                "7OVERLAY", "8POSITIO", "N       ", "4CALL   ",         11241000
              "4SEEK   ", "6ZIP TO ", "DIOCU - ", "GET CH +",           11242000
                " UNIT   ", ":BOXONLY", "  HALT  ", "4DATE   ",         11243000
              "4EXIT   ", "4PAGE   ", "6ACCEPT ", "7DISPLAY",           11244000
              ":BOXONLY", "  STOP  ", "}ACCEPT/", "DISPLAY ",           11245000
                ":INITIAT", "E I/O   ", "4DUMP   ", "5TRACE  ",         11246000
                "BSET MOD", "E FLIP-F", "LOP     ", "9READY I" ,        11247000
                "/O      " ;                                            11248000
              FILL TEST [*] WITH "4TEST   ";FILL T[*] WITH "4TRUE   ";  11249000
              FILL BOX [*] WITH "3BOX    ";FILL F[*] WITH "5FALSE  ";   11250000
              FILL QUIT[*] WITH "4QUIT   ";FILL IS [*] WITH "2IS     "; 11251000
              FILL ENTER [*] WITH "5ENTER  ";                           11252000
              FILL INR [*] WITH "2IN     ";                             11253000
              FILL GOTO [*] WITH "5GO TO  ";                            11254000
              FILL BEGINR [*] WITH  "5BEGIN  ";                         11255000
              FILL ENDR [*] WITH "3END    ";                            11256000
              FILL EQUALS [*] WITH "6EQUALS ";                          11257000
              FILL COMMENTR [*] WITH ":COMMENT", " FLOW   ";            11258000
              FILL SE [*] WITH "}IF ONE ", "WAS THEN";                  11259000
              FILL DIF [*] WITH "AIS DIFF", "ERENT FR", "OM      ";     11260000
              FILL AT [*] WITH  "AIS RESU", "LT   0 Y", "ES      ";     11261000
              FILL SEQ [*] WITH "IIF ANY ", "BUT FIRS", "T WAS TH",     11262000
                "EN      ";                                             11263000
              FILL SLS [*] WITH ".IF FIRS", "T CHR OF", " B WAS T",     11264000
                "HEN     ";                                             11265000
              FILL SGR[*] WITH "HIF NONE", " OF CHRS", " WAS THE",      11266000
                "N       ";                                             11267000
              FILL SNQ [*] WITH "KIF FIRS", "T CHR OF", " B OR NO",     11268000
                "NE WAS T", "HEN     ";                                 11269000
              FILL SZ [*]  WITH "OTEST SC", "AN UNTIL", " A DELIM",     11270000
                "ITER ZON","E OF A, ";                                  11271000
              FILL S1 [*] WITH "JONE OF ",  "THE DELI", "MITERS G",     11272000
                "IVEN IN ", "B,      ";                                 11273000
              FILL SD [*]  WITH "JTEST SC", "AN UNTIL", " A DELIM",     11274000
                "ITER OF ", "A,      ";                                 11275000
              FILL OFL [*] WITH "LIF LAST", " OPERATI", "ON SET O",     11276000
                "VERFLOW ","THEN    ";                                  11277000
              FILL WITHR [*] WITH "4WITH   ";                           11278000
              FILL BOT[*] WITH "ATEST BI","T ONE TE","ST      ";        11279000
              FILL BZT[*] WITH "BTEST BI","T ZERO T","EST     ";        11280000
              CLEAR (FLOWBUF[0],14);                                    11281000
              CLEAR(TEMPBUF[0],14);                                     11282000
              IF ALLSEGS THEN INFO[0].C ~ 1;                            11283000
              BOXCLOSED ~ TRUE;                                         11284000
              SEGCOUNT ~ 0;                                             11285000
              DATAFLAG ~ TRUE;                                          11286000
              INFO[LEVEL].E ~ 1;                                        11287000
              FIRSTLINE ~ TRUE ;                                        11288000
              INFO[LEVEL].G ~ 1;                                        11289000
              IF NOT ALLSEGS THEN                                       11290000
         BEGIN                                                          11291000
              FOR I~ 0 STEP 1 UNTIL MAXSEG DO                           11292000
              IF SEGCOUNT =CHOOSEG[I] THEN  GO TO RDOVER ;              11293000
              DOCLISTFLAG ~ FALSE ;                                     11294000
      DO BEGIN                                                          11295000
              READATAPE; IF NOT NOTLAST THEN GO TO EOF;                 11296000
              GETOP;                                                    11297000
         END UNTIL OPCODE = "SEGM" OR OPCODE = "ENSG";                  11298000
              INFO[LEVEL].C ~ 0;                                        11299000
              IF DOCLISTOG THEN                                         11300000
         BEGIN                                                          11301000
              MOVEWORDS(GLOBE[0],LISTBUFFER[2],10);                     11302000
              IF DOUBLEONLY THEN ZPL(ZLB,2,LISTBUFFER) ELSE             11303000
                 ZPL(ZLB,1,LISTBUFFER);                                 11304000
         END ;                                                          11305000
         END ;                                                          11306000
              GO TO RDOVER;                                             11307000
RD:           READATAPE;                                                11308000
RDOVER:                                                                 11309000
              IF DEBEATLETOG THEN WRITE(LINE,15,GLOBE[*]);              11310000
              IF NOT NOTLAST THEN GO TO EOF;                            11311000
              IF BCTOG THEN                                             11312000
         BEGIN                                                          11313000
              BCTOG ~ FALSE;                                            11314000
              GO TO RD;                                                 11315000
         END ;                                                          11316000
              SETCHAR(GLOBE[10],0,"%");                                 11317000
              GETOP;                                                    11318000
              IF OPCODE = "CPA" OR OPCODE = "BZT" OR                    11319000
              OPCODE = "CPN" OR OPCODE = "BOT" THEN TYPE ~ 2 ELSE       11320000
              IF OPCODE = "   " THEN TYPE ~ 5 ELSE                      11321000
              IF OPCODE = "REMK" THEN TYPE ~5 ELSE                      11322000
              IF OPCODE = "SPEC" OR OPCODE = "LIST"                     11323000
              OR OPCODE = "NOLI" OR OPCODE = "FILE" OR OPCODE = "ENDF"  11324000
              OR OPCODE = "CODE" OR OPCODE =                            11325000
              "NOCD" OR OPCODE = "RECD" OR OPCODE = "ENDR"              11326000
              OR OPCODE = "SYNC"                                        11327000
              OR OPCODE = "TIME" OR OPCODE = "EQIV" THEN TYPE ~ 0 ELSE  11328000
              IF OPCODE = "DOCU" THEN TYPE ~ 0 ELSE                     11329000
              IF OPCODE = "SPAC" THEN TYPE ~ IF (GLOBE[2].[30:18]       11330000
                 = "PAG") THEN 27 ELSE 0 ELSE                           11331000
              IF OPCODE = "DATA" THEN TYPE ~ IF DATAFLAG THEN 7         11332000
                 ELSE 0    ELSE IF OPCODE = "CNST" OR OPCODE = "ACON"   11333000
                 THEN TYPE ~ IF DATAFLAG THEN 7 ELSE 0 ELSE  %%%MAY CNG 11334000
              IF OPCODE = "BCT" THEN TYPE ~ 9 ELSE                      11335000
              IF OPCODE = "OPEN" THEN TYPE ~10 ELSE                     11336000
              IF OPCODE = "CLOS" THEN TYPE ~ 11 ELSE                    11337000
              IF OPCODE = "WRIT" THEN TYPE ~ 12 ELSE                    11338000
              IF OPCODE = "READ" THEN TYPE ~ 13 ELSE                    11339000
              IF OPCODE = "OVLY" THEN TYPE~ 14 ELSE                     11340000
              IF OPCODE = "POSN" THEN TYPE ~ 15 ELSE                    11341000
              IF OPCODE = "LIBR" OR OPCODE = "NTR" THEN TYPE ~ 17 ELSE  11342000
              IF OPCODE = "SEEK" THEN TYPE ~18 ELSE                     11343000
              IF OPCODE = "SMF" THEN TYPE ~ 38 ELSE                     11344000
              IF OPCODE = "INIT" THEN TYPE ~ 34 ELSE                    11345000
              IF OPCODE = "REDY" THEN TYPE ~ 41 ELSE                    11346000
              IF OPCODE = "IOCU" THEN TYPE ~ 20 ELSE                    11347000
              IF OPCODE = "DUMP" THEN TYPE ~ 36 ELSE                    11348000
              IF OPCODE = "TRAC" THEN TYPE ~ 37 ELSE                    11349000
              IF OPCODE="HBR" OR OPCODE="HBK" THEN TYPE~23 ELSE         11350000
              IF OPCODE = "DATE" THEN TYPE ~ 25 ELSE                    11351000
              IF OPCODE = "EXT" THEN TYPE ~ 26 ELSE                     11352000
              IF OPCODE = "ZIPP" THEN TYPE ~ 19 ELSE                    11353000
              IF OPCODE = "ACPT" THEN TYPE ~ 28 ELSE                    11354000
              IF OPCODE = "DISP" THEN TYPE ~ 29 ELSE                    11355000
              IF OPCODE = "STOP" THEN TYPE ~ 30 ELSE                    11356000
              IF OPCODE = "SZE" OR OPCODE = "SDE" OR                    11357000
                 OPCODE = "SDU" OR OPCODE = "SZU" THEN TYPE ~4 ELSE     11358000
              IF OPCODE = "GEQ" OR OPCODE = "LEQ" OR OPCODE= "NEQ" OR   11359000
              OPCODE = "EQL" OR OPCODE = "LSS" OR OPCODE = "GTR" OR     11360000
              OPCODE = "BUN" OR OPCODE = "OFL" THEN TYPE ~ 3 ELSE       11361000
              TYPE ~ 1;                                                 11362000
START:                                                                  11363000
              IF OPCODE = "SEGM" THEN                                   11364000
         BEGIN                                                          11365000
INTEGER       BLOCKEXTENDER;                                            11366000
LABEL         STOP;                                                     11367000
              IF ALLSEGS THEN                                           11368000
              IF (SEGINDEX ~ SEGINDEX +1) } 500 THEN                    11369000
         BEGIN                                                          11370000
              TEMPSWIND ~ SWFININD ;                                    11371000
              SWFININD ~ SWFOUTIND;                                     11372000
              SWFOUTIND ~ IF SWFININD = 2 THEN 3 ELSE 2;                11373000
              UNLINK(FALSE);                                            11374000
              CLOSE (SWIN,PURGE) ;                                      11375000
              SWFININD ~ TEMPSWIND ;                                    11376000
         END;                                                           11377000
              IF NOT BOXCLOSED THEN                                     11378000
         BEGIN                                                          11379000
              CLOSEBOX; COUNTER ~ COUNTER +2;                           11380000
         END;                                                           11381000
              IF COUNTER > 0 THEN WRITEDISK(FLOWBUF,COUNTER,TRUE);      11382000
              IF BOOLEAN (INFO[LEVEL].C) THEN                           11383000
         BEGIN                                                          11384000
              INFO [LEVEL].A ~ RECORDS;                                 11385000
              WRITEDISK(BLANKARRAY,IJUNK,FALSE);                        11386000
         END;                                                           11387000
              LEVEL ~ LEVEL +1; SEGCOUNT ~ SEGCOUNT+1;                  11388000
              IF ALLSEGS THEN                                           11389000
         BEGIN                                                          11390000
              INFO[LEVEL].B ~ SEGINDEX;                                 11391000
              GO TO STOP;                                               11392000
         END;                                                           11393000
              FOR I ~ 0 STEP 1 UNTIL MAXSEG DO                          11394000
              IF SEGCOUNT = CHOOSEG[I] THEN                             11395000
         BEGIN                                                          11396000
              INFO [LEVEL].B ~ SEGINDEX ~ I;                            11397000
              GO TO STOP;                                               11398000
         END;                                                           11399000
              DOCLISTFLAG ~ FALSE;                                      11400000
      DO BEGIN                                                          11401000
              READATAPE; IF NOT NOTLAST THEN GO TO EOF;                 11402000
              GETOP;                                                    11403000
         END UNTIL OPCODE = "SEGM" OR OPCODE = "ENSG";                  11404000
              INFO [LEVEL].C ~0;                                        11405000
              IF DOCLISTOG THEN                                         11406000
         BEGIN                                                          11407000
              MOVEWORDS(GLOBE[0],LISTBUFFER[2],10);                     11408000
              IF DOUBLEONLY THEN ZPL(ZLB,2,LISTBUFFER) ELSE             11409000
                 ZPL(ZLB,1,LISTBUFFER);                                 11410000
         END;                                                           11411000
              GO TO START;                                              11412000
STOP:                                                                   11413000
              DOCLISTFLAG ~ TRUE;                                       11414000
              DATAFLAG ~ TRUE; INFO[LEVEL].E ~ 1;                       11415000
              FIRSTLINE ~ TRUE; INFO[LEVEL].G ~ 1;                      11416000
              INFO[LEVEL].C ~ 1;                                        11417000
              CHOOSEG[SEGINDEX].A ~ RECORDS;                            11418000
              WRITE(BUF[*],SEGHEAD,SEGCOUNT);                           11419000
              WRITEDISK(BUF,IJUNK,FALSE);                               11420000
              TYPE ~ 1;                                                 11421000
         END;                                                           11422000
              IF OPCODE = "ENSG" THEN                                   11423000
         BEGIN                                                          11424000
INTEGER       BLOCKEXTENDER;                                            11425000
              IF INFO [LEVEL].C = 1 THEN                                11426000
         BEGIN                                                          11427000
              IF NOT BOXCLOSED THEN                                     11428000
         BEGIN                                                          11429000
              CLOSEBOX; COUNTER ~ COUNTER + 2;                          11430000
         END;                                                           11431000
              IF CHARSNOTBLANK (GLOBE[0],7,6) THEN                      11432000
         BEGIN                                                          11433000
              IF NOT BOXCLOSED THEN                                     11434000
         BEGIN                                                          11435000
              CLOSEBOX;COUNTER ~COUNTER +2;                             11436000
         END;                                                           11437000
              COUNT ~ MOVELABEL(GLOBE[0],BUF[0],7,0,6);                 11438000
              MOVETEXT;                                                 11439000
         END;                                                           11440000
              IF DATATABLE THEN IF DATAFLAG THEN                        11441000
              IF NOT FIRSTLINE THEN                                     11442000
         BEGIN                                                          11443000
              WRITE(FLOWBUF[*],TABLEFORM2);                             11444000
              WRITEDISK(FLOWBUF,COUNTER,TRUE);                          11445000
         END ;                                                          11446000
              NARRATE (BUF[0], 0, ENDR, COUNT);                         11447000
              MOVETEXT;                                                 11448000
              CLOSEBOX;                                                 11449000
              WRITEDISK(FLOWBUF,COUNTER,TRUE);                          11450000
              BUF[0] ~ 0 ;                                              11451000
              SETCHAR(BUF[0],0,"%");                                    11452000
              BUF[1] ~0;                                                11453000
              WRITEDISK(BUF,IJUNK,FALSE);                               11454000
              CHOOSEG [INFO[LEVEL].B] .C~1;                             11455000
         END;                                                           11456000
              IF INFO[(LEVEL~LEVEL-1)].C = 1 THEN                       11457000
         BEGIN                                                          11458000
              DOCLISTFLAG ~ TRUE;                                       11459000
              DATAFLAG ~ BOOLEAN(INFO[LEVEL].E);                        11460000
              FIRSTLINE ~ BOOLEAN(INFO[LEVEL].G) ;                      11461000
              BUF[0] ~ 0 ;                                              11462000
              SETCHAR(BUF[0],0,"%");                                    11463000
              BUF[1] ~ RECORDS;                                         11464000
              WRITE(SWOUT[INFO[LEVEL].A],10,BUF[*]);                    11465000
              READ SEEK (SWOUT[RECORDS]);                               11466000
              GO TO RD;                                                 11467000
         END;                                                           11468000
              DOCLISTFLAG ~ FALSE;                                      11469000
      DO BEGIN                                                          11470000
              READATAPE; IF NOT NOTLAST THEN GO TO EOF;                 11471000
              GETOP;                                                    11472000
         END UNTIL OPCODE ="SEGM" OR OPCODE="ENSG";                     11473000
              IF DOCLISTOG THEN                                         11474000
         BEGIN                                                          11475000
              MOVEWORDS (GLOBE[0],LISTBUFFER[2],10);                    11476000
              IF DOUBLEONLY THEN ZPL(ZLB,2,LISTBUFFER) ELSE             11477000
                 ZPL(ZLB,1,LISTBUFFER);                                 11478000
         END;                                                           11479000
              GO TO START;                                              11480000
         END;                                                           11481000
              IF TYPE = 0 THEN GO TO RD;                                11482000
              IF TYPE = 7 AND NOT DATATABLE THEN GO TO RD;              11483000
              IF DATATABLE THEN IF DATAFLAG THEN                        11484000
              IF TYPE ! 7 AND OPCODE ! "DATE" AND OPCODE ! "SPAC" AND   11485000
              OPCODE ! "SEGM" AND OPCODE ! "ENSG" AND                   11486000
              OPCODE ! "BUN" AND                                        11487000
                 TYPE ! 5 THEN                                          11488000
         BEGIN                                                          11489000
              DATAFLAG ~ FALSE;                                         11490000
              INFO[LEVEL].E ~ 0;                                        11491000
              IF NOT FIRSTLINE THEN                                     11492000
         BEGIN                                                          11493000
              WRITE (FLOWBUF[*],TABLEFORM2);                            11494000
              WRITEDISK(FLOWBUF,COUNTER,TRUE);                          11495000
         END ;                                                          11496000
         END ELSE                                                       11497000
         BEGIN                                                          11498000
LABEL         THISLAB,NEWLAB,READ2;                                     11499000
FORMAT        TABLEFORM1 (" * TABLE" );                                 11500000
              IF TYPE = 5 THEN                                          11501000
         BEGIN                                                          11502000
              IF FIRSTLINE THEN                                         11503000
         BEGIN                                                          11504000
              IF NEXTCHAR(GLOBE[0],17,"*") THEN GO TO REMKSTAR;         11505000
              FIRSTLINE ~ FALSE;                                        11506000
              INFO[LEVEL] .G~ 0;                                        11507000
              IF COUNTER > 0 THEN WRITEDISK(FLOWBUF,COUNTER,TRUE);      11508000
              WRITE(FLOWBUF[*],TABLEFORM1);                             11509000
              WRITEDISK(FLOWBUF,COUNTER,TRUE);                          11510000
         END ;                                                          11511000
              CLEAR( FLOWBUF,14);                                       11512000
              MOVECHARS (GLOBE[0],FLOWBUF[0],7,0,6);                    11513000
              MOVECHARS (GLOBE[2],FLOWBUF[1],2,0,59);                   11514000
              WRITEDISK (FLOWBUF,COUNTER,TRUE);                         11515000
              GO TO RD ;                                                11516000
         END ;                                                          11517000
              IF NOT CNBLANK(GLOBE[0],7,6 ) THEN GO TO RD;              11518000
NEWLAB:                                                                 11519000
              IF TYPE ! 7 THEN GO TO RD;                                11520000
              IF NOT CHARSNOTBLANK(GLOBE[0],57,22) THEN GO TO RD ;      11521000
              IF FIRSTLINE THEN                                         11522000
         BEGIN                                                          11523000
              FIRSTLINE ~ FALSE;                                        11524000
              INFO[LEVEL].G ~ 0;                                        11525000
              IF COUNTER > 0 THEN WRITEDISK(FLOWBUF,COUNTER,TRUE);      11526000
              WRITE(FLOWBUF[*],TABLEFORM1);                             11527000
              WRITEDISK(FLOWBUF,COUNTER,TRUE);                          11528000
         END ;                                                          11529000
              MOVECHARS (GLOBE[0],FLOWBUF[0],7,0,6);                    11530000
              MOVECHARS (GLOBE[0],FLOWBUF[0],13,7,4);                   11531000
THISLAB:                                                                11532000
              MOVECHARS(GLOBE[0],FLOWBUF[2],57,0,22);                   11533000
              WRITEDISK(FLOWBUF,COUNTER,TRUE);                          11534000
READ2:                                                                  11535000
              READATAPE; IF NOT NOTLAST THEN GO TO EOF;                 11536000
              GETOP;                                                    11537000
              IF OPCODE = "    " OR OPCODE = "REMK" THEN                11538000
         BEGIN                                                          11539000
              MOVECHARS (GLOBE[0],FLOWBUF[0],7,0,6);                    11540000
              MOVECHARS (GLOBE[2],FLOWBUF[1],2,0,59);                   11541000
              WRITEDISK (FLOWBUF,COUNTER,TRUE);                         11542000
              GO TO READ2 ;                                             11543000
         END ;                                                          11544000
              IF OPCODE = "ACON" OR OPCODE = "CNST" OR OPCODE =         11545000
                 "DATA" THEN TYPE ~ 7 ELSE GO TO RDOVER;                11546000
              IF CNBLANK (GLOBE[0],7,6) THEN GO TO NEWLAB;              11547000
              IF CHARSNOTBLANK(GLOBE[0],57,22) THEN GO TO THISLAB;      11548000
              GO TO READ2                                               11549000
         END ;                                                          11550000
              IF CNBLANK (GLOBE[0],7,6)   THEN                          11551000
         BEGIN                                                          11552000
              IF NOT BOXCLOSED THEN                                     11553000
         BEGIN                                                          11554000
              CLOSEBOX;                                                 11555000
              COUNTER ~ COUNTER +2;                                     11556000
         END;                                                           11557000
              COUNT ~ MOVELABEL(GLOBE[0],BUF[0],7,0,6);                 11558000
              MOVETEXT;                                                 11559000
         END;                                                           11560000
              IF TYPE = 1 THEN                                          11561000
         BEGIN                                                          11562000
INTEGER       BLOCKEXTENDER;                                            11563000
              IF OPCODE="INC" OR OPCODE ="ADD" OR OPCODE ="DEC"         11564000
              OR OPCODE="SUB" OR OPCODE ="MPY"                          11565000
              OR OPCODE="DIV" OR OPCODE = "FAD" OR OPCODE="FSU"         11566000
              OR OPCODE ="FMP"OR OPCODE ="FDV" THEN ATOG ~TRUE;         11567000
              IF CHARSNOTBLANK(GLOBE[0],57,22)   THEN                   11568000
         BEGIN                                                          11569000
              IF BOXCLOSED THEN                                         11570000
         BEGIN                                                          11571000
              NARRATE (BUF[0], 0, BOX, COUNT);                          11572000
              MOVETEXT;                                                 11573000
              BOXCLOSED ~ FALSE;                                        11574000
         END;                                                           11575000
              CLEAR(BUF[0],8);                                          11576000
              REMKEDIT(GLOBE[0],BUF[0],57,0,23,COUNT);                  11577000
              MOVETEXT;                                                 11578000
              LINECOUNT ~ LINECOUNT +1;                                 11579000
              NLINES~0;                                                 11580000
         END;                                                           11581000
              GO TO RD;                                                 11582000
         END;                                                           11583000
              IF TYPE = 2 OR TYPE = 4 THEN                              11584000
         BEGIN                                                          11585000
INTEGER       BLOCKEXTENDER;                                            11586000
              IF NOT BOXCLOSED THEN                                     11587000
         BEGIN                                                          11588000
              CLOSEBOX; COUNTER ~ COUNTER +2;                           11589000
         END;                                                           11590000
              NLINES ~ 0;                                               11591000
              CLEAR(TEMPBUF[0],14);                                     11592000
              IF CHARSNOTBLANK(GLOBE[0],57,22)   THEN                   11593000
         BEGIN                                                          11594000
              NARRATE (BUF[0], 0, BOX, COUNT);                          11595000
              MOVETEXT;                                                 11596000
              CLEAR(BUF[0],8);                                          11597000
              REMKEDIT(GLOBE[0],BUF[0],57,0,23,COUNT);                  11598000
              MOVETEXT;                                                 11599000
              LINECOUNT ~LINECOUNT +1;                                  11600000
              NLINES ~ 1;                                               11601000
              BOXCLOSED ~ FALSE;                                        11602000
         END;                                                           11603000
              IF TYPE = 4 THEN                                          11604000
         BEGIN                                                          11605000
              CLEAR(TEMPBUF[0],14); CLEAR(TEMPBUF2[0],14);              11606000
              IF OPCODE = "SZU" OR OPCODE = "SZE" THEN                  11607000
                NARRATE (TEMPBUF[0],0,SZ,TCOUNTER) ELSE                 11608000
                NARRATE (TEMPBUF[0],0,SD,TCOUNTER);                     11609000
              CONSTRUCT(1);                                             11610000
              MOVECHARS(BUF[0],TEMPBUF[TCOUNTER DIV 8],0,               11611000
                 TCOUNTER.[45:3],COUNT);                                11612000
              TCOUNTER ~ TCOUNTER + COUNT;                              11613000
              SETCHAR(TEMPBUF[TCOUNTER DIV 8],TCOUNTER.[45:3],",");     11614000
              TCOUNTER ~ TCOUNTER + 2;                                  11615000
              IF OPCODE = "SZE" OR OPCODE = "SDE" THEN                  11616000
                NARRATE (TEMPBUF[TCOUNTER DIV 8], TCOUNTER.[45:3],      11617000
                  EQUALS, COUNT) ELSE                                   11618000
                NARRATE (TEMPBUF[TCOUNTER DIV 8], TCOUNTER.[45:3],      11619000
                  DIF, COUNT);                                          11620000
              NARRATE (TEMPBUF2[0], 0, S1, TCOUNTER);                   11621000
              CONSTRUCT (2);                                            11622000
              MOVECHARS(BUF[0],TEMPBUF2[TCOUNTER DIV 8],0,              11623000
                 TCOUNTER.[45:3],COUNT);                                11624000
              TCOUNTER ~ TCOUNTER + COUNT;                              11625000
              SETCHAR(TEMPBUF2[TCOUNTER DIV 8],TCOUNTER.[45:3],".");    11626000
              TCOUNTER ~ TCOUNTER + 2;                                  11627000
              ETOG ~ TRUE; BTOG ~ CTOG ~ FALSE;                         11628000
              ATOG~FALSE;                                               11629000
              GO TO RD;                                                 11630000
         END;                                                           11631000
              IF OPCODE = "BZT" OR OPCODE = "BOT" THEN                  11632000
         BEGIN                                                          11633000
              IF OPCODE = "BZT" THEN NARRATE(TEMPBUF[0],0,BZT,TCOUNTER) 11634000
                ELSE NARRATE(TEMPBUF[0],0,BOT,TCOUNTER);                11635000
              SETCHAR (MASK,0,""");                                     11636000
              MOVECHARS(GLOBE[0],MASK,19,1,2);                          11637000
              SETCHAR(MASK,3,""");                                      11638000
              MOVECHARS(MASK,TEMPBUF[TCOUNTER DIV 8],0,                 11639000
                 TCOUNTER.[45:3],4);                                    11640000
              TCOUNTER ~ TCOUNTER + 4;                                  11641000
              NARRATE (BUF[0],0,WITHR,COUNT);                           11642000
              MOVECHARS(BUF[0],TEMPBUF[TCOUNTER DIV 8],0,               11643000
                 TCOUNTER.[45:3],COUNT);                                11644000
              TCOUNTER ~ TCOUNTER + COUNT;                              11645000
              CONSTRUCT (1);                                            11646000
              MOVECHARS(BUF[0],TEMPBUF[TCOUNTER DIV 8],0,               11647000
                 TCOUNTER.[45:3],COUNT);                                11648000
              TCOUNTER ~ TCOUNTER + COUNT;                              11649000
              BTOG~ TRUE;  CTOG ~ ETOG ~ FALSE;                         11650000
              ATOG~FALSE;                                               11651000
         END ELSE                                                       11652000
              IF OPCODE = "CPA" OR OPCODE =  "CPN" THEN                 11653000
         BEGIN                                                          11654000
              NARRATE (TEMPBUF[0], 0, IS, TCOUNTER);                    11655000
              CONSTRUCT (2);                                            11656000
              MOVECHARS(BUF[0],TEMPBUF[0],0,TCOUNTER,COUNT);            11657000
              TCOUNTER ~ TCOUNTER + COUNT;                              11658000
              RELAPOS ~ TCOUNTER +2;                                    11659000
              TCOUNTER ~ RELAPOS +2;                                    11660000
              CONSTRUCT(1);                                             11661000
              MOVECHARS (BUF[0],TEMPBUF[0],0,TCOUNTER,COUNT);           11662000
              TCOUNTER ~ TCOUNTER + COUNT;                              11663000
              ATOG~FALSE;                                               11664000
              CTOG ~ TRUE; BTOG ~ ETOG ~ FALSE;                         11665000
         END;                                                           11666000
              GO TO RD;                                                 11667000
         END;                                                           11668000
              IF TYPE = 3 THEN                                          11669000
         BEGIN                                                          11670000
INTEGER       BLOCKEXTENDER;                                            11671000
LABEL         NOTRELATION;                                              11672000
              IF OPCODE = "BUN" OR OPCODE = "OFL" THEN                  11673000
              GO TO NOTRELATION;                                        11674000
              IF CHARSNOTBLANK(GLOBE[0],57,22)   THEN                   11675000
         BEGIN                                                          11676000
              IF NLINES = 0 THEN                                        11677000
         BEGIN                                                          11678000
              IF NOT BOXCLOSED THEN                                     11679000
         BEGIN                                                          11680000
              CLOSEBOX; COUNTER ~ COUNTER +2;                           11681000
         END;                                                           11682000
              NARRATE (BUF[0], 0, BOX, COUNT);                          11683000
              MOVETEXT;                                                 11684000
         END;                                                           11685000
              CLEAR(BUF[0],8);                                          11686000
              REMKEDIT(GLOBE[0],BUF[0],57,0,23,COUNT);                  11687000
              MOVETEXT;                                                 11688000
              CLOSEBOX; COUNTER ~ COUNTER + 2;                          11689000
              NLINES ~ 0;                                               11690000
         END ELSE                                                       11691000
              IF NOT BOXCLOSED THEN CLOSEBOX;                           11692000
              WRITEDISK(FLOWBUF,COUNTER,TRUE);                          11693000
              IF ATOG THEN                                              11694000
         BEGIN                                                          11695000
              IF OPCODE = "LSS" THEN REL~"<" ELSE                       11696000
              IF OPCODE = "GTR" THEN REL ~ ">" ELSE                     11697000
              IF OPCODE = "EQL" THEN REL~ "=" ELSE                      11698000
              IF OPCODE = "NEQ" THEN REL ~ "!" ELSE                     11699000
              IF OPCODE = "GEQ" THEN REL~"}" ELSE                       11700000
              REL~ "{";                                                 11701000
              NARRATE (FLOWBUF[0], 0, AT, COUNTER);                     11702000
              SETCHAR(FLOWBUF[0],11,REL);                               11703000
              GO TO NOTRELATION;                                        11704000
         END;                                                           11705000
              IF BTOG OR CTOG THEN                                      11706000
         BEGIN                                                          11707000
              IF BTOG THEN TOGTOG ~ OPCODE ="GEQ" OR OPCODE="EQL" OR    11708000
              OPCODE="LEQ";                                             11709000
              IF CTOG THEN                                              11710000
         BEGIN                                                          11711000
              IF OPCODE = "LSS" THEN REL ~">" ELSE                      11712000
              IF OPCODE = "GTR" THEN REL~"<" ELSE                       11713000
              IF OPCODE = "LEQ" THEN REL ~ "}" ELSE                     11714000
              IF OPCODE = "GEQ" THEN REL~"{" ELSE                       11715000
              REL~"=";                                                  11716000
              SETCHAR(TEMPBUF[0],RELAPOS,REL);                          11717000
              TOGTOG ~ OPCODE !"NEQ" ;                                  11718000
         END;                                                           11719000
              IF TOGTOG THEN NARRATE (FLOWBUF[0],0,T,COUNTER) ELSE      11720000
                             NARRATE (FLOWBUF[0],0,F,COUNTER) ;         11721000
              WRITEDISK(TEMPBUF,IJUNK,FALSE);                           11722000
         END;                                                           11723000
              IF ETOG THEN                                              11724000
         BEGIN                                                          11725000
              IF OPCODE = "EQL" THEN NARRATE (BUF[0],0,SEQ,COUNT) ELSE  11726000
              IF OPCODE = "LEQ" THEN NARRATE (BUF[0],0,SE, COUNT) ELSE  11727000
              IF OPCODE = "LSS" THEN NARRATE (BUF[0],0,SLS,COUNT) ELSE  11728000
              IF OPCODE = "GTR" THEN NARRATE (BUF[0],0,SGR,COUNT) ELSE  11729000
              IF OPCODE = "NEQ" THEN NARRATE (BUF[0],0, SNQ,COUNT) ELSE 11730000
              GO TO NOTRELATION;                                        11731000
              MOVETEXT ;                                                11732000
              WRITEDISK(TEMPBUF,IJUNK,FALSE);                           11733000
              WRITEDISK(TEMPBUF2,IJUNK,FALSE);                          11734000
         END;                                                           11735000
NOTRELATION:                                                            11736000
              IF OPCODE = "BUN" THEN IF NOT BOXCLOSED THEN              11737000
         BEGIN                                                          11738000
              CLOSEBOX;                                                 11739000
              COUNTER ~ COUNTER + 2;                                    11740000
         END;                                                           11741000
              IF OPCODE = "OFL" THEN                                    11742000
         BEGIN                                                          11743000
              IF NOT BOXCLOSED THEN                                     11744000
         BEGIN                                                          11745000
              CLOSEBOX; COUNTER ~ COUNTER +2;                           11746000
         END;                                                           11747000
              IF CHARSNOTBLANK(GLOBE[0],57,22) THEN                     11748000
         BEGIN                                                          11749000
              NARRATE (BUF[0], 0, BOX, COUNT);                          11750000
              MOVETEXT;                                                 11751000
              CLEAR(BUF[0],8);                                          11752000
              REMKEDIT(GLOBE[0],BUF[0],57,0,23,COUNT);                  11753000
              MOVETEXT;                                                 11754000
              CLOSEBOX; COUNTER ~COUNTER +2;                            11755000
         END;                                                           11756000
              WRITEDISK(FLOWBUF,COUNTER,TRUE);                          11757000
              NARRATE (FLOWBUF [0], 0, OFL, COUNT);                     11758000
              WRITEDISK(FLOWBUF,COUNTER,TRUE);                          11759000
         END;                                                           11760000
              NARRATE (BUF[0],0, GOTO, COUNT);                          11761000
              MOVETEXT;                                                 11762000
              CONSTRUCT (1);                                            11763000
              MOVETEXT;                                                 11764000
              CLOSEBOX; COUNTER ~ COUNTER + 2;                          11765000
              GO TO RD;                                                 11766000
         END;                                                           11767000
              IF TYPE = 9 THEN                                          11768000
         BEGIN                                                          11769000
INTEGER       BLOCKEXTENDER;                                            11770000
              BCTOG ~ TRUE;                                             11771000
              ANUM ~ 0;                                                 11772000
              MOVECHARS(GLOBE[2],ANUM,1,4,4);                           11773000
              IF ANUM = "114" THEN TYPE ~ 13 ELSE %% READ               11774000
              IF ANUM = "234" THEN TYPE ~ 12 ELSE %% WRITE              11775000
              IF ANUM = "134" THEN TYPE ~ 10 ELSE %% OPEN               11776000
              IF ANUM = "154" THEN TYPE ~ 11 ELSE %% CLOSE              11777000
              IF ANUM = "394" THEN TYPE ~ 15 ELSE %% POSITION           11778000
              IF ANUM = "274" THEN TYPE ~ 19 ELSE %% ZIP                11779000
              IF ANUM = "194" THEN TYPE ~ 30 ELSE %% STOP               11780000
              IF ANUM = "334" THEN TYPE ~ 37 ELSE %% TRACE              11781000
              IF ANUM = "254" THEN TYPE ~ 32 ELSE %% ACCEPT/DISPLAY     11782000
              IF ANUM = "500" THEN TYPE ~ 34 ELSE   %% INIT             11783000
              IF ANUM = "512" THEN TYPE ~ 30 ELSE  %% STOP - BCP        11784000
              IF ANUM = "506" THEN TYPE ~ 41 ELSE   %% REDY             11785000
              IF ANUM = "518" THEN TYPE ~ 20 ELSE  %% IOCU              11786000
              IF ANUM = "524" THEN TYPE ~ 36 ELSE  %% DUMP - BCP        11787000
              IF ANUM = "530" THEN TYPE ~ 37 ELSE   %% TRACE - BCP      11788000
              IF ANUM = "314" THEN TYPE ~ 18 ELSE %% SEEK               11789000
              GO TO RD;                                                 11790000
              IF TYPE = 30 THEN BCTOG ~ FALSE ;                         11791000
         END ;                                                          11792000
              IF TYPE } 10 THEN                                         11793000
         BEGIN                                                          11794000
INTEGER       BLOCKEXTENDER;                                            11795000
              IF NOT BOXCLOSED THEN                                     11796000
         BEGIN                                                          11797000
              CLOSEBOX; COUNTER ~ COUNTER + 2;                          11798000
         END;                                                           11799000
              NARRATE (BUF[0],0,SINGLEWORDS[TYPE- 10],COUNT);           11800000
              MOVETEXT;                                                 11801000
              IF TYPE } 20 THEN                                         11802000
         BEGIN                                                          11803000
              CLOSEBOX; COUNTER ~ COUNTER +2;                           11804000
              GO TO RD;                                                 11805000
         END;                                                           11806000
              IF NOT BCTOG THEN                                         11807000
         BEGIN                                                          11808000
              CONSTRUCT(4);                                             11809000
              MOVETEXT;                                                 11810000
              CLEAR(BUF [0],0);                                         11811000
              SETCHAR(BUF [0],0,".");                                   11812000
              COUNT ~ 2; MOVETEXT ;                                     11813000
              COUNTER ~ COUNTER +2;                                     11814000
         END ;                                                          11815000
              IF CHARSNOTBLANK(GLOBE[0],57,22)   THEN                   11816000
         BEGIN                                                          11817000
              CLEAR(BUF[0],8);                                          11818000
              REMKEDIT(GLOBE[0],BUF[0],57,0,23,COUNT);                  11819000
              MOVETEXT;                                                 11820000
              LINECOUNT ~ LINECOUNT +1;                                 11821000
         END;                                                           11822000
              CLOSEBOX; COUNTER ~ COUNTER + 2;                          11823000
              GO TO RD;                                                 11824000
         END;                                                           11825000
REMKSTAR:                                                               11826000
              IF OPCODE = "   " OR OPCODE = "REMK" THEN                 11827000
         BEGIN                                                          11828000
INTEGER       BLOCKEXTENDER;                                            11829000
              IF NEXTCHAR(GLOBE[0],17,"*") THEN                         11830000
         BEGIN                                                          11831000
              WRITEDISK(FLOWBUF,COUNTER,TRUE);                          11832000
              MOVECHARS(GLOBE[0],FLOWBUF[0],17,0,63);                   11833000
              WRITEDISK(FLOWBUF,COUNTER,TRUE);                          11834000
         END ELSE                                                       11835000
              IF CHARSNOTBLANK(GLOBE[0],17,63) OR ESKIP THEN            11836000
         BEGIN                                                          11837000
              IF BOXCLOSED THEN                                         11838000
         BEGIN                                                          11839000
              NARRATE (BUF[0],0, BOX, COUNT);                           11840000
              MOVETEXT;                                                 11841000
         END ELSE                                                       11842000
              IF LINECOUNT } 20 THEN                                    11843000
         BEGIN                                                          11844000
              CLOSEBOX; COUNTER ~ COUNTER + 2;                          11845000
         END ;                                                          11846000
              CLEAR(BUF[0],9) ;                                         11847000
              REMKEDIT(GLOBE[0],BUF[0],17,0,63,COUNT);                  11848000
              LINECOUNT ~ LINECOUNT +1;                                 11849000
              MOVETEXT;                                                 11850000
              BOXCLOSED ~ FALSE;                                        11851000
         END;                                                           11852000
              GO TO RD;                                                 11853000
         END;                                                           11854000
              GO TO RD;                                                 11855000
EOF:                                                                    11856000
              CLOSE (SWIN,RELEASE);                                     11857000
              IF COUNTER ! 0 THEN WRITEDISK(FLOWBUF,COUNTER ,TRUE);     11858000
              IF DATATABLE THEN IF DATAFLAG THEN                        11859000
              IF NOT FIRSTLINE THEN                                     11860000
         BEGIN                                                          11861000
              WRITE(FLOWBUF[*],TABLEFORM2);                             11862000
              WRITEDISK(FLOWBUF,COUNTER,TRUE);                          11863000
         END ;                                                          11864000
              BUF[0] ~ 0;                                               11865000
              SETCHAR(BUF[0],0,"%");                                    11866000
              BUF [1] ~ 0;                                              11867000
              WRITEDISK(BUF,IJUNK,FALSE);                               11868000
              IF DEBEATLETOG THEN                                       11869000
         BEGIN                                                          11870000
              WRITE(LINE[DBL]);                                         11871000
              CLEAR(GLOBE[0],14);                                       11872000
              REWIND(SWOUT);                                            11873000
RDD:                                                                    11874000
              READ(SWOUT,10,GLOBE[*]) [EOFF];                           11875000
              WRITE(LINE,15,GLOBE[*]);                                  11876000
              GO TO RDD;                                                11877000
EOFF:                                                                   11878000
         END;                                                           11879000
              SWFININD ~ SWFOUTIND;                                     11880000
              SWFOUTIND ~ IF NOT SCRATCHTOG THEN 1 ELSE                 11881000
                 IF SWFOUTIND =2 THEN 3 ELSE 2;                         11882000
              REWIND(SWOUT);                                            11883000
              NARRATE (FLOWBUF[0], 0, COMMENTR, COUNTER);               11884000
              ASMSEQ ~ 1000;                                            11885000
              OCTTODEC (ASMSEQ,FLOWBUF[9]);                             11886000
              ASMSEQ ~ ASMSEQ + 1000;                                   11887000
              WRITEDISK(FLOWBUF,COUNTER,TRUE);                          11888000
              UNLINK(TRUE);                                             11889000
              CLOSEBOX; COUNTER ~ COUNTER + 2;                          11890000
              NARRATE (BUF[0], 0, QUIT,  COUNT);                        11891000
              MOVETEXT;                                                 11892000
              WRITEDISK(FLOWBUF,COUNTER,TRUE);                          11893000
              IF DEBEATLETOG THEN                                       11894000
         BEGIN                                                          11895000
LABEL         RD3,EOF3;                                                 11896000
              WRITE(LINE[DBL]);                                         11897000
              CLEAR(GLOBE[0],14);                                       11898000
              REWIND(SWOUT);                                            11899000
RD3:          READ(SWOUT,10,GLOBE[*]) [EOF3];                           11900000
              WRITE(LINE,10,GLOBE[*]);                                  11901000
              GO TO RD3;                                                11902000
EOF3:    END ;                                                          11903000
              CLOSE(SWIN);                                              11904000
              TRANSTOG ~ FALSE;                                         11905000
              IF ASMFLOWTOG THEN                                        11906000
         BEGIN                                                          11907000
              REWIND (SWOUT);                                           11908000
              SWFININD ~ SWFOUTIND;                                     11909000
              SWFOUTIND~1;                                              11910000
              REWIND(SWOUT);                                            11911000
              BMON ~ TRUE;                                              11912000
              TAPETOG ~ TRUE;                                           11913000
              MOVEWORDS(NINES,CBUFF[9],1);                              11914000
              DOCLISTOG~LISTOG; LISTOG~FALSE ;                          11915000
              DEVICE~ 2;                                                11916000
              ASMLTOG ~ FALSE;                                          11917000
              CLEAR(GLOBE,14);                                          11918000
              FIXCOL73(LCR);                                            11919000
              CLEAR( LISTBUFFER,14);                                    11920000
              IF DOCLISTOG THEN ZPG(ZLB) ;                              11921000
         END ELSE                                                       11922000
         BEGIN                                                          11923000
              NEWTOG~SVNEWTOG ;                                         11924000
              GO TO EOFCARD ;                                           11925000
         END ;                                                          11926000
         END;                                                           11927000
              IF FLOWTOG THEN                                           11928000
         BEGIN                                                          11929000
COMMENT DOCUMENT*  7 * * * * * * * * * * * * * * * * * * * * * * * * *  11930000
BLOCK TO PRINT FLOW CHARTS.                                             11931000
* SKIP                                                                  11932000
         THIS BLOCK EXAMINES FLOW CONTROLS AND DRAWS FLOWCHARTS.        11933000
* END;                                                                  11934000
DEFINE        SCEN = SCAN; IF PERCENT THEN                              11935000
         BEGIN                                                          11936000
              SCAN; PATCHPAGE ~ PATCHPAGE OR PATCHCARD;                 11937000
         END# ;                                                         11938000
DEFINE        PROGPOINTLAB =                                            11939000
              IF PERIOD OR PLUS OR MINUS THEN                           11940000
         BEGIN                                                          11941000
              LABPOINT ~ Q.[18:6] ; SCEN ;                              11942000
         END ELSE                                                       11943000
              LABPOINT ~ " " # ;                                        11944000
BOOLEAN       CONB,COLTOG;                                              11945000
BOOLEAN       IMAGEUSED ;                                               11946000
BOOLEAN       LEFTJUST;                                                 11947000
BOOLEAN       PUNCHFLOWTOG,FLOWWIDETOG ;                                11948000
BOOLEAN       BOXTYPE,CODETOG,TABLETOG ;                                11949000
BOOLEAN       TEMPTOG ;                                                 11950000
    LABEL     MOREFLOW,  MAINSTART;                                     11951000
    ARRAY     GENLAB[0:50];    INTEGER G, GENER;                        11952000
ARRAY         STBOX[0:50,0:4] , IMAGE[0:75,0:15] , TIM[0:40,0:15] ;     11953000
ARRAY         PBUFF[0:15] ;                                             11954000
ARRAY         TYPEIND[0:10] ;                                           11955000
ARRAY         HEADBUFF[0:15],AJUNK[0:7];                                11956000
ALPHA         RBRANCH,LBRANCH ;                                         11957000
INTEGER       MAXTIM,NLINES,LINTIM,COL,PARP,TEMP,I,MAXCOL;              11958000
ALPHA         LABPOINT ;                                                11959000
INTEGER       BEGINCOUNT,PAGELINES;                                     11960000
INTEGER       PFSEQ ;                                                   11961000
INTEGER       TABLECOUNT ;                                              11962000
FORMAT        FCONTENTS (X30, "TABLE OF CONTENTS");                     11963000
DEFINE        FINDSEMI = DO SCAN UNTIL Q="1;    " OR Q="1*    " # ,     11964000
              SB = STBOX # ,                                            11965000
              SEMI = (Q ="1;    " OR Q = "1*    ") # ;                  11966000
DEFINE        PRINTINDEX =                                              11967000
              PAGEQUAL ~ 2;                                             11968000
              IF FLOWIND ! 0 THEN                                       11969000
         BEGIN                                                          11970000
              WRITE (ZAR [*],FCONTENTS); ZPL (ZF,2,ZAR);                11971000
              FOR I ~ 1 STEP 1 UNTIL FLOWIND DO                         11972000
              ZPL(ZF,2,FLOWINDEX[I,*]);                                 11973000
         END#;                                                          11974000
COMMENT DOCUMENT* 31* * * * * * * * * * * * * * * * * * * * * * * * *;  11975000
 PROCEDURE    GENSYM;                                                   11976000
COMMENT  CREATES GENERATED LABELS FOR IF STATEMENTS, ETC ;              11977000
         BEGIN                                                          11978000
              GENER~ GENER+1; G~G+1; OCTTODEC(GENER, GENLAB[G]);        11979000
              GENLAB[G].[12:12] ~ "5G";                                 11980000
         END  GENSYM;                                                   11981000
STREAM PROCEDURE SQUASH(S,D,SEQ) ;                                      11982000
         BEGIN                                                          11983000
              SI ~ S ; DI ~ D ; SI ~ SI + 2 ;                           11984000
              DS ~ 36 CHR ; SI ~ SI + 1 ; DS ~ 1 CHR ;                  11985000
              SI ~ SI + 1 ; DS ~ 35 CHR ;                               11986000
              SI ~ SEQ ; DS ~ 8 DEC ;                                   11987000
         END SQUASH ;                                                   11988000
COMMENT DOCUMENT* 31* * * * * * * * * * * * * * * * * * * * * * * * *;  11989000
PROCEDURE     PAGECONNECT ;                                             11990000
COMMENT  DRAWS PAGE-CONNECTING FLOW LINES ;                             11991000
         BEGIN                                                          11992000
LABEL         RETURN ;                                                  11993000
              IF IMAGEUSED AND CONB THEN                                11994000
         BEGIN                                                          11995000
              TEMP ~ (COL-1) | 5 + 2 ;                                  11996000
              FOR I ~ NLINES STEP 1 UNTIL PAGELINES + 1 DO              11997000
              SETCHAR(IMAGE[I,TEMP],4,".") ;                            11998000
              TEMP ~ (COL-1) | 40 + 20 ;                                11999000
              FOR I ~20 STEP 1 UNTIL TEMP DO                            12000000
              SETCHAR(IMAGE[PAGELINES+1,I DIV 8],I.[45:3],".") ;        12001000
              SETCHAR(IMAGE[PAGELINES+2,2],4,":") ;                     12002000
              SETCHAR(IMAGE[PAGELINES+3,2],4,"V") ;                     12003000
              PAGELINES ~ PAGELINES + 3 ;                               12004000
         END ;                                                          12005000
RETURN:                                                                 12006000
         END PAGECONNECT ;                                              12007000
COMMENT DOCUMENT* 31* * * * * * * * * * * * * * * * * * * * * * * * *;  12008000
PROCEDURE     PRINTPAGE ;                                               12009000
COMMENT  PRINTS A PAGE WHEN IMAGE HAS BEEN FILLED ;                     12010000
         BEGIN                                                          12011000
LABEL         RETURN,CONT ;                                             12012000
              IF MONITOG THEN WRITE(LINE,MONITFORM,"PRINTP","AGE   ");  12013000
              IF NOT IMAGEUSED THEN GO TO RETURN ;                      12014000
              IF FSYNTAXTOG THEN                                        12015000
         BEGIN                                                          12016000
              ZPG(-1);                                                  12017000
              NEWDOCPAGE;                                               12018000
              GO TO CONT;                                               12019000
         END;                                                           12020000
              IF PUNCHPAGES THEN                                        12021000
              IF NOT PAGETOG THEN                                       12022000
         BEGIN                                                          12023000
              IF CANTPAGEHERE THEN                                      12024000
         BEGIN                                                          12025000
              FLOWERROR(36);                                            12026000
              PUNCHPAGES ~ FALSE;                                       12027000
         END;                                                           12028000
              IF INSTOG THEN                                            12029000
         BEGIN                                                          12030000
              IF NOT INSERTROW THEN SAVEPAGEN ~PAGEN;                   12031000
              TEMP~PAGEN + INSINC;                                      12032000
              OCTTODEC(TEMP,BLOCKBUFFER[3]);                            12033000
              PAGEINC ~ INSINC;                                         12034000
         END;                                                           12035000
              CLEAR(OLDBUF[0],14); CLEAR(NEWBUF[0],14);                 12036000
              I ~ DELTANCR (WORDBUF[10],WORDBUF[11]) ;J~72-I;           12037000
              MOVECHARS(WORDBUF[J DIV 8],NEWBUF[J DIV 8],J.[45:3],      12038000
                 J.[45:3],I);                                           12039000
              IF NOT COLTOG THEN                                        12040000
         BEGIN                                                          12041000
              MOVECHARS(WORDBUF[0],OLDBUF[0],0,0,J);                    12042000
              OCTTODEC(SAVESEQ,OLDBUF[9]);                              12043000
              IJUNK ~ SAVESEQ + 1;                                      12044000
              SAVESEQ ~ SAVESEQ + 2;                                    12045000
         END ELSE                                                       12046000
         BEGIN                                                          12047000
              I ~DELTANCR(SAVEBUF[10],SAVEBUF[11]) ; J~72-I;            12048000
              MOVECHARS(SAVEBUF[0],OLDBUF[0],0,0, J);                   12049000
              OCTTODEC(SAVEBUF[12],OLDBUF[9]);                          12050000
              IJUNK ~ SAVEBUF[12] +1;                                   12051000
              IF SAVEBUF[12] = SAVESEQ THEN SAVESEQ ~ SAVESEQ + 2;      12052000
         END;                                                           12053000
              OCTTODEC(IJUNK,BLOCKBUFFER[9]);                           12054000
              OCTTODEC(SAVESEQ,NEWBUF[9]);                              12055000
              IF PUNCHTOG THEN                                          12056000
         BEGIN                                                          12057000
              IF BLANKTEST(OLDBUF[0],9) OR COLTOG THEN                  12058000
              WRITE (PUNCH,10,OLDBUF[*]);                               12059000
              WRITE(PUNCH,10,BLOCKBUFFER[*]);                           12060000
              IF BLANKTEST(NEWBUF[0],9) OR COLTOG THEN                  12061000
              WRITE(PUNCH,10,NEWBUF[*]);                                12062000
         END ELSE                                                       12063000
         BEGIN                                                          12064000
              IF BLANKTEST(OLDBUF[0],9) OR COLTOG THEN                  12065000
              WRITE(LINE,15,OLDBUF[*]);                                 12066000
              WRITE(LINE,15,BLOCKBUFFER[*]);                            12067000
              IF BLANKTEST(NEWBUF[0],9) OR COLTOG THEN                  12068000
              WRITE(LINE,15,NEWBUF[*]);                                 12069000
         END;                                                           12070000
         END;                                                           12071000
              ZPL (ZF,1,PAGENUM);                                       12072000
              IF PUNCHFLOWTOG THEN                                      12073000
         BEGIN                                                          12074000
              IF TIGHTFULL THEN                                         12075000
         BEGIN                                                          12076000
              MOVEWORDS(TITLEBUFF,PBUFF,9) ;                            12077000
              OCTTODEC(PFSEQ,PBUFF[9]);                                 12078000
              PFSEQ ~ PFSEQ + 10 ;                                      12079000
              WRITE(PNCH,10,PBUFF[*]) ;                                 12080000
         END ;                                                          12081000
              IF HEADFULL THEN                                          12082000
         BEGIN                                                          12083000
              MOVEWORDS(HEADBUFF,PBUFF,9) ;                             12084000
              OCTTODEC(PFSEQ,PBUFF[9]);                                 12085000
              PFSEQ ~ PFSEQ + 10 ;                                      12086000
              WRITE(PNCH,10,PBUFF[*]) ;                                 12087000
         END ;                                                          12088000
         END ;                                                          12089000
              IF TIGHTFULL THEN IF HEADFULL THEN                        12090000
              ZPL (ZF,1,TITLEBUFF[*]) ELSE ZPL(ZF,2,TITLEBUFF[*]);      12091000
              IF HEADFULL THEN ZPL (ZF,2,HEADBUFF[*]);                  12092000
              FOR I ~ 4 STEP 1 UNTIL PAGELINES DO                       12093000
         BEGIN                                                          12094000
              IF PUNCHFLOWTOG THEN                                      12095000
         BEGIN                                                          12096000
              SQUASH(IMAGE[I,0],PBUFF,PFSEQ) ;                          12097000
              WRITE(PNCH,10,PBUFF[*]) ;                                 12098000
              PFSEQ ~ PFSEQ + 10 ;                                      12099000
         END ;                                                          12100000
         BEGIN                                                          12101000
              ZPL(ZF,1,IMAGE[I,*]);                                     12102000
              CLEAR(IMAGE[I,0],14) ;                                    12103000
         END ;                                                          12104000
         END ;                                                          12105000
              ZPG(ZF);                                                  12106000
              PATCHPAGE ~ PATCHPAGE OR TITLECHANGE OR HEADCHANGE;       12107000
              NEWDOCPAGE;                                               12108000
CONT:         IF DOCLISTOG THEN                                         12109000
         BEGIN                                                          12110000
              FOR I ~ 0 STEP 1 UNTIL 15 DO SETCHAR(PAGENUM[3],I,"*") ;  12111000
              DOCOUTPUT ~ FALSE;                                        12112000
              ZPL(0,2,PAGENUM[*]);                                      12113000
              DOCOUTPUT ~ TRUE;                                         12114000
              FOR I ~0 STEP 1 UNTIL 15 DO SETCHAR (PAGENUM[3],I," ");   12115000
         END ;                                                          12116000
              NLINES ~ 4 ; COL ~1 ; PAGELINES ~ 0 ;                     12117000
RETURN:                                                                 12118000
              PAGETOG ~ FALSE;                                          12119000
              IMAGEUSED ~FALSE ;                                        12120000
         END PRINTPAGE ;                                                12121000
COMMENT DOCUMENT* 32* * * * * * * * * * * * * * * * * * * * * * * * *;  12122000
PROCEDURE     BUILDTITLE(A);                                            12123000
ARRAY         A[*] ;                                                    12124000
COMMENT  PUTS TITLE FROM SOURCE FILE IN A AND ENTERS IN INDEX;          12125000
         BEGIN                                                          12126000
LABEL         MORE,NEXT,RETURN;                                         12127000
              IF MONITOG THEN                                           12128000
              WRITE (PRINT,MONITFORM, "BUILDT","ITLE  ");               12129000
              PARP ~ 0 ;CLEAR(A,14) ;                                   12130000
              SCAN; IF SEMI THEN TITLEFULL ~ FALSE ELSE                 12131000
         BEGIN                                                          12132000
              GO TO NEXT;                                               12133000
MORE:         SCEN ; IF SEMI THEN GO TO RETURN;                         12134000
NEXT:                                                                   12135000
              IF PERCENT THEN GO TO MORE ;                              12136000
              IF PARP + COUNT > 70 THEN                                 12137000
         BEGIN                                                          12138000
              FINDSEMI ; FLOWERROR(13) ; GO TO RETURN ;                 12139000
         END ;                                                          12140000
              MOVECHARS(ACCUM[1],A[PARP DIV 8],3,PARP.[45:3],COUNT) ;   12141000
              PARP ~ PARP + COUNT ;                                     12142000
              IF EXAMINE(NCR) = " " THEN PARP ~ PARP + 1 ;              12143000
              GO TO MORE ;                                              12144000
RETURN:                                                                 12145000
              TEMPTOG ~ PATCHCARD ;                                     12146000
              IF FLOWIND < 200 THEN                                     12147000
         BEGIN                                                          12148000
              FLOWIND ~ FLOWIND + 1 ;                                   12149000
              CLEAR(FLOWINDEX[FLOWIND,*],14) ;                          12150000
              MOVEWORDS(A,FLOWINDEX[FLOWIND,2],13) ;                    12151000
              MOVECHARS (PAGENUM[7],FLOWINDEX[FLOWIND,0],4,0,12);       12152000
         END ;                                                          12153000
         END;                                                           12154000
         END BUILDTITLE ;                                               12155000
COMMENT DOCUMENT* 31 * * * * * * * * * * * * * * * * * * * * * * * * *; 12156000
PROCEDURE     BUILDHYPH;                                                12157000
COMMENT  USED WHEN FLOW LABELS MAY HAVE SPECIAL CHARACTERS ;            12158000
         BEGIN                                                          12159000
LABEL         L1,L2;                                                    12160000
INTEGER       FIDCOUNT;                                                 12161000
              IF MONITOG THEN WRITE(LINE,MONITFORM,"BUILDH","YPH   ");  12162000
              MOVEWORDS(ACCUM,COBACCUM,10);                             12163000
              FIDCOUNT ~ 3;                                             12164000
L1:                                                                     12165000
              IF Q = "1*    " OR Q = "1:    " THEN GO TO L2;            12166000
              IF Q = "1%    " THEN GO TO L2;                            12167000
              IF Q = "1.    " AND (EXAMINE(NCR) =" " OR                 12168000
                 EXAMINE(NCR) ="#") THEN GO TO L2;                      12169000
              MOVECHARS(ACCUM[1],COBACCUM[1],3,FIDCOUNT,COUNT);         12170000
              FIDCOUNT ~ FIDCOUNT + COUNT;                              12171000
              IF EXAMINE(NCR) = " " THEN GO TO L2;                      12172000
              IF FINDCHAR(NCR,":") THEN GO TO L2;                       12173000
              IF FINDCHAR (NCR,"(") THEN GO TO L2;                      12174000
              IF FINDCHAR (NCR,",") THEN GO TO L2;                      12175000
              IF FINDCHAR(NCR,"*") THEN GO TO L2;                       12176000
              SCAN;                                                     12177000
              GO TO L1;                                                 12178000
L2:                                                                     12179000
              FIDCOUNT ~ FIDCOUNT - 3;                                  12180000
              COBACCUM[1].[12:6] ~ FIDCOUNT.[42:6];                     12181000
              MOVEWORDS(COBACCUM,ACCUM,10);                             12182000
              Q ~ ACCUM[1];                                             12183000
              COUNT ~ FIDCOUNT;                                         12184000
         END BUILDHYPH;                                                 12185000
COMMENT DOCUMENT* 33 * * * * * * * * * * * * * * * * * * * * * * * * *; 12186000
PROCEDURE     BUILDBOX(TYPE) ;                                          12187000
VALUE         TYPE ;                                                    12188000
INTEGER       TYPE ;                                                    12189000
COMMENT  MAKES VARIOUS KINDS OF BOXES,DEPENDING ON TYPE;                12190000
         BEGIN                                                          12191000
LABEL         MORE,RETURN,CONTINUE ;                                    12192000
BOOLEAN       SKIPLINE ;                                                12193000
COMMENT       TYPE 0 BOX , TYPE 1 TEST , TYPE 2 SWITCH ;                12194000
COMMENT       TYPE 3 NOTE ;                                             12195000
DEFINE        CENTERIT =                                                12196000
              IF TYPE ! 3 AND NOT LEFTJUST THEN                         12197000
              IF (35-PARP) > 1 THEN                                     12198000
         BEGIN                                                          12199000
              TEMP ~ ((35-PARP) DIV 2 ) + 1  ; CLEAR(AJUNK,6) ;         12200000
              MOVECHARS(TIM[LINTIM,0],AJUNK[TEMP DIV 8],5,TEMP.[45:3],  12201000
              PARP-5) ;                                                 12202000
              MOVECHARS(AJUNK[0],TIM[LINTIM,0],0,5,34) ;                12203000
         END # ;                                                        12204000
              LINTIM ~ 0 ;                                              12205000
              IF CONB THEN MOVEWORDS(STBOX[33,*],TIM[LINTIM,*],5)       12206000
              ELSE CLEAR(TIM[LINTIM,0],4) ; LINTIM ~ LINTIM + 1 ;       12207000
              IF TYPE = 1 THEN                                          12208000
         BEGIN                                                          12209000
              MOVEWORDS(STBOX[35,*],TIM[LINTIM,*],5) ;                  12210000
              LINTIM ~ LINTIM + 1 ;                                     12211000
COMMENT                                                                 12212000
              MOVEWORDS(STBOX[36,*],TIM[LINTIM,*],5) ;                  12213000
COMMENT                                                                 12214000
              LINTIM ~ LINTIM + 1 ;                                     12215000
         END ;                                                          12216000
              CLEAR(TIM[LINTIM,0],4) ;                                  12217000
              IF FLOWBOXTOG OR TYPE=1 OR TYPE=3 THEN                    12218000
              MOVEWORDS(STBOX[TYPEIND[TYPE],*],TIM[LINTIM,*],5) ELSE    12219000
              IF CONB THEN                                              12220000
              MOVEWORDS(STBOX[33,*],TIM[LINTIM,*],5) ;                  12221000
              PARP ~5 + COUNT + 1 ;                                     12222000
              IF NOT (FLOWBOXTOG OR TYPE=1 OR TYPE=3) THEN              12223000
              IF NOT BOXTYPE THEN CENTERIT ELSE                         12224000
              IF CONB THEN MOVEWORDS(STBOX[33,*],TIM[LINTIM,*],5) ;     12225000
              LINTIM ~ LINTIM + 1 ;                                     12226000
              PARP ~ 5; CLEAR(TIM[LINTIM,*],4) ;                        12227000
              GO TO CONTINUE ;                                          12228000
MORE:                                                                   12229000
              IF QFLOWTOG THEN                                          12230000
         BEGIN                                                          12231000
              DOCSCAN;                                                  12232000
              PATCHPAGE~PATCHPAGE OR PATCHCARD;                         12233000
         END ELSE SCEN ;                                                12234000
              IF ASMFLOWTOG THEN IF TYPE = 1 THEN IF RESULT = 1         12235000
                 AND EXAMINE(NCR) ! "." THEN BUILDHYPH ;                12236000
              SKIPLINE ~ FALSE ;                                        12237000
CONTINUE:     IF SEMI OR                                                12238000
             (TYPE = 1 AND Q = "3YES  ") OR                             12239000
              (TYPE = 1 AND Q = "2NO   ") OR                            12240000
              (TYPE = 1 AND Q = "4TRUE ") OR                            12241000
              (TYPE = 1 AND Q = "5FALSE") OR                            12242000
              (TYPE =1 AND Q = "4THEN ") OR                             12243000
              (TYPE = 2 AND Q = "2GO   ") THEN GO TO RETURN ;           12244000
              IF PERCENT THEN GO TO MORE ;                              12245000
                          IF Q="1.    " AND EXAMINE(NCR) =" " THEN      12246000
         BEGIN                                                          12247000
              CENTERIT ; SKIPLINE ~ TRUE ; PARP ~ 35 ;                  12248000
         END ;                                                          12249000
              IF PARP + COUNT > 34 THEN                                 12250000
         BEGIN                                                          12251000
              IF (FLOWBOXTOG OR TYPE = 1) AND TYPE ! 3 THEN             12252000
         BEGIN                                                          12253000
              CENTERIT ;                                                12254000
              SETCHAR(TIM[LINTIM,0],4,":") ;                            12255000
              SETCHAR(TIM[LINTIM,4],3,":") ;                            12256000
         END ELSE CENTERIT ;                                            12257000
              LINTIM ~ LINTIM + 1; PARP ~ 5;                            12258000
              CLEAR(TIM[LINTIM,0],4) ;                                  12259000
              IF LINTIM > MAXTIM THEN                                   12260000
         BEGIN                                                          12261000
              FLOWERROR(14); FINDSEMI ; GO TO RETURN ;                  12262000
         END ;                                                          12263000
         END ;                                                          12264000
              IF SKIPLINE THEN GO TO MORE ;                             12265000
              IF COUNT > 28 THEN                                        12266000
         BEGIN                                                          12267000
              FLOWERROR(26) ; GO TO MORE ;                              12268000
         END ;                                                          12269000
              MOVECHARS(ACCUM[1],TIM[LINTIM,PARP DIV 8],3,              12270000
              PARP.[45:3],COUNT) ;                                      12271000
              IF EXAMINE(NCR) = " " THEN PARP ~ PARP + 1 ;              12272000
              PARP ~ PARP + COUNT ;                                     12273000
              IF Q = "1.    " AND EXAMINE (NCR) = "#" THEN              12274000
         BEGIN                                                          12275000
              SCEN; PARP ~ PARP +1;                                     12276000
         END;                                                           12277000
              GO TO MORE ;                                              12278000
RETURN:       IF PARP ! 5 THEN                                          12279000
         BEGIN                                                          12280000
              IF (FLOWBOXTOG OR TYPE = 1) AND TYPE ! 3 THEN             12281000
         BEGIN                                                          12282000
              CENTERIT ;                                                12283000
              SETCHAR(TIM[LINTIM,0],4,":") ;                            12284000
              SETCHAR(TIM[LINTIM,4],3,":") ;                            12285000
         END ELSE CENTERIT ;                                            12286000
              LINTIM ~ LINTIM + 1 ;                                     12287000
         END ;                                                          12288000
              IF FLOWBOXTOG OR TYPE=1 OR TYPE=3 THEN                    12289000
         BEGIN                                                          12290000
              MOVEWORDS(STBOX[TYPEIND[TYPE],*],TIM[LINTIM,*],5) ;       12291000
              LINTIM ~ LINTIM + 1 ;                                     12292000
         END ;                                                          12293000
              IF TYPE = 1 THEN                                          12294000
         BEGIN                                                          12295000
              MOVEWORDS(STBOX[35,*],TIM[LINTIM,*],5) ;                  12296000
              LINTIM ~ LINTIM + 1 ;                                     12297000
         END ;                                                          12298000
         END  BUILDBOX ;                                                12299000
COMMENT DOCUMENT* 31* * * * * * * * * * * * * * * * * * * * * * * * *;  12300000
PROCEDURE     EMIT ;                                                    12301000
COMMENT  MOVES BOX INTO IMAGE, CHECKING LINE COUNT ;                    12302000
         BEGIN                                                          12303000
LABEL         RETURN ;                                                  12304000
              IF MONITOG THEN WRITE(LINE,MONITFORM,"EMIT  ","      ");  12305000
              IF ((NLINES + LINTIM) > MAXLINES ) OR COLTOG THEN         12306000
         BEGIN                                                          12307000
              IF COL = MAXCOL THEN                                      12308000
         BEGIN                                                          12309000
              PAGECONNECT ; PRINTPAGE ;                                 12310000
         END ELSE                                                       12311000
         BEGIN                                                          12312000
              IF CONB THEN                                              12313000
         BEGIN                                                          12314000
              TEMP ~ (COL-1) | 5 ;                                      12315000
              MOVEWORDS(STBOX[8,0],IMAGE[NLINES,TEMP],5) ;              12316000
              NLINES ~ NLINES + 1;                                      12317000
              MOVEWORDS(STBOX[9,0],IMAGE[NLINES,TEMP],5) ;              12318000
              TEMP ~ ((COL-1)|5) + 4 ;                                  12319000
              FOR I ~ 4 STEP 1 UNTIL NLINES DO                          12320000
              SETCHAR(IMAGE[I,TEMP],7,".") ;                            12321000
              IF NLINES > PAGELINES THEN PAGELINES ~ NLINES ;           12322000
              COL ~COL + 1 ;                                            12323000
              NLINES ~ 4 ; TEMP ~ (COL-1)|5;                            12324000
              MOVEWORDS(STBOX[6,0],IMAGE[NLINES,TEMP],5) ;              12325000
              NLINES ~ NLINES + 1 ;                                     12326000
              MOVEWORDS(STBOX[7,0],IMAGE[NLINES,TEMP],5) ;              12327000
              NLINES ~ NLINES + 1 ;                                     12328000
         END ELSE                                                       12329000
         BEGIN                                                          12330000
              COL ~ COL + 1 ;                                           12331000
              IF NLINES > PAGELINES THEN PAGELINES ~ NLINES ;           12332000
              NLINES ~4 ;                                               12333000
         END ;                                                          12334000
         END ;                                                          12335000
         END ;                                                          12336000
              IF COLTOG THEN GO TO RETURN ;                             12337000
              TEMP ~ (COL-1)|5 ;                                        12338000
              FOR I ~ 0 STEP 1 UNTIL LINTIM - 1 DO                      12339000
              MOVEWORDS(TIM[I,0],IMAGE[NLINES+I,TEMP],5) ;              12340000
              NLINES ~ NLINES+LINTIM  ;  LINTIM ~ 0 ;                   12341000
RETURN:                                                                 12342000
              IF NLINES > PAGELINES THEN PAGELINES ~ NLINES ;           12343000
              IMAGEUSED ~ TRUE ;                                        12344000
         END EMIT ;                                                     12345000
COMMENT DOCUMENT* 31* * * * * * * * * * * * * * * * * * * * * * * * *;  12346000
PROCEDURE     PRINTFLOW ;                                               12347000
COMMENT DOES ANALYSIS OF INPUT AND CALLS THE SUITABLE ROUTINES;         12348000
         BEGIN                                                          12349000
    LABEL     MORE,  FINDHEAD,  MORELAB,  GOL1,  LABLER,  KI;           12350000
LABEL         STARTL,FINISHL,QUITL,BEGINL,ENDL,BOXL,COMMENTL,           12351000
              PAGEINCL, MAXCOLL , DATEL ,                               12352000
              LEFTL,                                                    12353000
              NOTEL,BOXLL,TABLEL,CODEL,BOXONLYL,PTABLE,                 12354000
              HEADL,TITLEL,YESL,NOL,TOL,GOL,IFL,SWITCHL,ENTERL,         12355000
              EXITL,PAGEL,LABELL,TERML,PAGEIDL,COLL,NOGOODL ;           12356000
LABEL    DECIMALS;                                                      12357000
LABEL MAXL;                                                             12357100
SWITCH        BOXSW ~                                                   12358000
              STARTL,FINISHL,QUITL,BEGINL,ENDL,BOXL,COMMENTL,           12359000
              HEADL,TITLEL,YESL,NOL,TOL,GOL,IFL,NOGOODL,                12360000
                                                SWITCHL,ENTERL,         12361000
             EXITL, PAGEL,NOGOODL, TERML,PAGEIDL,COLL,PAGEINCL,         12362000
              MAXCOLL, DATEL,                                           12363000
              NOTEL,TABLEL,CODEL,BOXONLYL,                              12364000
             YESL,NOL,IFL,NOGOODL ;                                     12365000
    BOOLEAN   GEN, GENS;       INTEGER   PARENCOUNT;                    12366000
              IF MONITOG THEN                                           12367000
              WRITE (PRINT,MONITFORM, "PRINTF","LOW   ");               12368000
              GEN ~ GENS ~ FALSE ;                                      12369000
              PARENCOUNT ~ 0 ;                                          12370000
MORE:                                                                   12371000
              IF PUNCHPAGES THEN                                        12372000
              IF SEMI OR Q  = "1:    " OR Q ="1)    "                   12373000
                  OR Q = "1(    " THEN                                  12374000
         BEGIN                                                          12375000
              MOVEWORDS(GLOBE[0],WORDBUF[0],9);                         12376000
              MOVEWORDS(NCR,WORDBUF[10],1);                             12377000
              MOVEWORDS(LCR,WORDBUF[11],1);                             12378000
              SAVESEQ ~ ISEQ;                                           12379000
         END;                                                           12380000
              SCEN;                                                     12381000
              IF Q="1)    "  THEN                                       12382000
         BEGIN   IF (PARENCOUNT~PARENCOUNT-1) < 0 THEN GO TO KI         12383000
                 ELSE  GO  TO  MORE;                                    12384000
         END  ELSE                                                      12385000
              IF Q="1(    "  THEN  PARENCOUNT~PARENCOUNT+1 ELSE         12386000
              PROGPOINTLAB;                                             12387000
              IF RESULT ! 1 THEN GO TO MORE ;                           12388000
              IF Q = "4ELSE " THEN                                      12389000
         BEGIN                                                          12390000
              FLOWERROR(33);                                            12391000
              GO TO MORE;                                               12392000
         END;                                                           12393000
              IF ASMFLOWTOG THEN IF NOT (EXAMINE(NCR)=" " OR            12394000
                 EXAMINE(NCR) = ":") THEN    BUILDHYPH;                 12395000
              IF RESULT = 1 AND FINDCHAR(NCR,":")                       12396000
              THEN GO TO LABELL ;                                       12397000
              IF Q = "7NOTEB" THEN GO TO NOTEL;                         12398000
              IF Q = "8LEFTJ" THEN GO TO LEFTL;                         12399000
              IF Q = "9SWITC" THEN GO TO SWITCHL ;                      12400000
              IF Q="8MAXLI" THEN GO TO MAXL;                            12400100
              IF Q = "8DOCPU" THEN % DOCPUNCH                           12401000
         BEGIN                                                          12402000
              PUNCHFLOWTOG ~ TRUE ; GO TO MORE ;                        12403000
         END ;                                                          12404000
              IF Q = "4WIDE " THEN                                      12405000
         BEGIN                                                          12406000
              FLOWWIDETOG ~ TRUE ; GO TO MORE ;                         12407000
         END ;                                                          12408000
              IF SEARCHRESERVED THEN GO TO BOXSW[RESTYPE];              12409000
              GO TO BOXLL ;                                             12410000
STARTL:       GO TO MORE ;                                              12411000
FINISHL:      IF BEGINCOUNT ! 0 THEN                                    12412000
              FLOWERROR(2) ;                                            12413000
              PAGETOG ~ TRUE;                                           12414000
              PRINTPAGE ;                                               12415000
              PRINTINDEX ;                                              12416000
              GO TO MOREFLOW ;                                          12417000
   QUITL:     QUITOG~ TRUE;                                             12418000
              IF BEGINCOUNT !0 THEN                                     12419000
         BEGIN                                                          12420000
              PAGETOG ~ TRUE;                                           12421000
              PRINTPAGE ;                                               12422000
              FLOWERROR(2) ; GO TO EOFCARD ;                            12423000
         END ;                                                          12424000
              PAGETOG ~ TRUE;                                           12425000
              PRINTPAGE ;                                               12426000
              PRINTINDEX ;                                              12427000
              GO TO EOFCARD ;                                           12428000
BEGINL:       IF BEGINCOUNT ! 0 THEN                                    12429000
         BEGIN                                                          12430000
              FLOWERROR(3) ; FINDSEMI ; GO TO MORE ;                    12431000
         END ;                                                          12432000
              BEGINCOUNT ~1 ;                                           12433000
              PAGETOG ~ TRUE;                                           12434000
              PRINTPAGE;                                                12435000
              PAGETOG ~ FALSE;                                          12436000
              GO TO MORE;                                               12437000
ENDL :        IF BEGINCOUNT ! 1 THEN                                    12438000
              FLOWERROR(4) ;                                            12439000
              BEGINCOUNT ~ 0 ;                                          12440000
              PAGETOG ~ TRUE;                                           12441000
              PRINTPAGE ;                                               12442000
              DO SCAN UNTIL Q="5BEGIN" OR Q="6FINIS" OR Q="4QUIT ";     12443000
              IF Q = "5BEGIN" THEN GO TO BEGINL ;                       12444000
              IF Q = "6FINIS" THEN GO TO FINISHL ;                      12445000
              IF Q = "4QUIT " THEN GO TO QUITL ;                        12446000
BOXLL:        BOXTYPE ~ TRUE ; BUILDBOX(0) ; BOXTYPE ~ FALSE ;          12447000
              EMIT ; GO TO MORE ;                                       12448000
BOXL:         IF Q = "3BOX  " THEN                                      12449000
         BEGIN                                                          12450000
              SCEN ; GO TO BOXLL ;                                      12451000
         END ;                                                          12452000
              BUILDBOX(0) ;                                             12453000
              EMIT ; GO TO MORE ;                                       12454000
COMMENTL:     FINDSEMI ; GO TO MORE ;                                   12455000
NOTEL:                                                                  12456000
              IF Q = "7NOTEB" THEN SCEN;                                12457000
              BOXTYPE ~TRUE; BUILDBOX(3); BOXTYPE ~ FALSE;              12458000
              EMIT ; GO TO MORE ;                                       12459000
HEADL:                                                                  12460000
              HEADFULL ~ TITLEFULL ~ TRUE;                              12461000
              BUILDTITLE (HEADBUFF);                                    12462000
              HEADCHANGE ~ TEMPTOG ;                                    12463000
              HEADFULL~TITLEFULL;                                       12464000
              TITLEFULL ~FALSE;                                         12465000
              GO TO MORE;                                               12466000
TITLEL:                                                                 12467000
              TIGHTFULL ~TITLEFULL~ TRUE;                               12468000
              BUILDTITLE (TITLEBUFF);                                   12469000
              TIGHTFULL~TITLEFULL;                                      12470000
              TITLECHANGE ~ TEMPTOG ;                                   12471000
              TITLEFULL ~FALSE;                                         12472000
              GO TO MORE;                                               12473000
YESL:         FLOWERROR(7) ; FINDSEMI ; GO TO MORE ;                    12474000
NOL:          FLOWERROR(8) ; FINDSEMI ; GO TO MORE ;                    12475000
TOL:          FLOWERROR(9) ; FINDSEMI ; GO TO MORE ;                    12476000
GOL:          SCEN ; IF Q = "2TO   " THEN SCEN ;                        12477000
              PROGPOINTLAB ;                                            12478000
              IF RESULT !1 THEN                                         12479000
         BEGIN                                                          12480000
              FLOWERROR(10) ; FINDSEMI ; GO TO MORE ;                   12481000
         END ;                                                          12482000
              IF ASMFLOWTOG THEN BUILDHYPH;                             12483000
GOL1:         CONB ~ TRUE;                                              12484000
              IF Q = "6GENSY" THEN                                      12485000
         BEGIN                                                          12486000
              IF G = 0 THEN                                             12487000
         BEGIN                                                          12488000
              FLOWERROR (32);                                           12489000
              GO TO MORE;                                               12490000
         END;                                                           12491000
              Q~ ACCUM[1] ~ GENLAB[G~G-1];                              12492000
              GENLAB[G] ~ GENLAB[G+1];                                  12493000
              COUNT ~ 5;                                                12494000
         END;                                                           12495000
              FOR I ~ 0,1,2,3 DO                                        12496000
              MOVEWORDS(STBOX[16+I,0],TIM[LINTIM+I,0],5) ;              12497000
              LINTIM ~ LINTIM + 4 ;                                     12498000
              IF SORTSCRAMBLE THEN BUILDXREF ;                          12499000
              IF COUNT > 11 THEN COUNT ~ 11 ;                           12500000
              MOVECHARS(ACCUM[1],TIM[LINTIM-2,3],3,3,COUNT) ;           12501000
              MOVECHARS(LABPOINT,TIM[LINTIM-2,3],7,2,1) ;               12502000
              EMIT; CONB ~ FALSE ;                                      12503000
              IF PAGETOG THEN                                           12504000
         BEGIN                                                          12505000
              PAGECONNECT ;                                             12506000
              PRINTPAGE; PAGETOG ~ FALSE ;                              12507000
         END ;                                                          12508000
              IF GEN THEN GO TO LABLER ; GO TO MORE ;                   12509000
IFL:                                                                    12510000
         BEGIN                                                          12511000
INTEGER       BLOCKEXTENDER;                                            12512000
              IF Q = "4TEST " THEN SCEN;                                12513000
              BUILDBOX (1);                                             12514000
              IF NOT ( Q= "3YES  " OR Q = "4TRUE " OR  Q = "2NO   "     12515000
              OR Q = "5FALSE" OR Q = "4THEN ") THEN                     12516000
         BEGIN                                                          12517000
              FLOWERROR(34);                                            12518000
              IF FINDCHAR(NCR,")") THEN SCEN;                           12519000
              GO TO MORE;                                               12520000
         END;                                                           12521000
              LBRANCH~IF (Q="3YES  " OR Q="4TRUE " OR Q="4THEN ") THEN  12522000
                 "NO " ELSE "YES" ;                                     12523000
              RBRANCH ~ IF LBRANCH = "YES" THEN "NO " ELSE "YES" ;      12524000
              SCEN; IF Q="1(    " THEN                                  12525000
         BEGIN                                                          12526000
              LABPOINT ~" ";  GEN ~ TRUE;  GENSYM;                      12527000
              Q~ACCUM[1] ~ GENLAB[G]; COUNT ~ 5;                        12528000
              RBRANCH~IF (LBRANCH~RBRANCH)="NO " THEN "YES" ELSE "NO "; 12529000
         END                                                            12530000
              ELSE                                                      12531000
         BEGIN                                                          12532000
              IF Q = "2GO   "  THEN SCEN;                               12533000
              IF Q = "2TO   " THEN SCEN ;                               12534000
              PROGPOINTLAB ;                                            12535000
              IF RESULT ! 1 THEN                                        12536000
         BEGIN                                                          12537000
              FLOWERROR(15) ; FINDSEMI ; GO TO MORE ;                   12538000
         END ;                                                          12539000
         END;                                                           12540000
              IF ASMFLOWTOG THEN IF NOT GEN THEN BUILDHYPH;             12541000
              FOR I ~ 0,1,2,3,4 DO                                      12542000
              MOVEWORDS(STBOX[28+I,0],TIM[LINTIM+I,0],5) ;              12543000
              LINTIM ~ LINTIM + 5 ;                                     12544000
              IF SORTSCRAMBLE THEN BUILDXREF ;                          12545000
              IF COUNT > 11 THEN COUNT ~ 11 ;                           12546000
              MOVECHARS(ACCUM[1],TIM[LINTIM-3,3],3,3,COUNT) ;           12547000
              MOVECHARS(LABPOINT,TIM[LINTIM-3,3],7,2,1) ;               12548000
              MOVECHARS(LBRANCH,TIM[LINTIM-4,1],5,7,3) ;                12549000
              MOVECHARS(RBRANCH,TIM[LINTIM-4,2],5,5,3) ;                12550000
              IF GEN THEN                                               12551000
         BEGIN                                                          12552000
              EMIT;                                                     12553000
              Q ~ "1(    ";                                             12554000
              PRINTFLOW;                                                12555000
         END;                                                           12556000
         END;                          SCEN;  IF SEMI AND GEN THEN      12557000
 LABLER: BEGIN                                                          12558000
              Q ~ ACCUM[1] ~ GENLAB[G];  G~G-1;  COUNT~5;  GO TO LABELL;12559000
         END;                                                           12560000
              IF Q = "1.    " THEN SCEN;                                12561000
              IF SEMI  THEN                                             12562000
         BEGIN                                                          12563000
              EMIT ; GO TO MORE ;                                       12564000
         END ;                                                          12565000
              IF Q = "4ELSE " THEN                                      12566000
         BEGIN                                                          12567000
              IF GEN THEN IF PUNCHPAGES THEN                            12568000
         BEGIN                                                          12569000
              MOVEWORDS(GLOBE [0],WORDBUF[0],9);                        12570000
              MOVEWORDS(NCR,WORDBUF[10],1);                             12571000
              MOVEWORDS(LCR,WORDBUF[11],1);                             12572000
              SAVESEQ ~ ISEQ;                                           12573000
         END ;                                                          12574000
              SCEN ;                                                    12575000
         END ;                                                          12576000
              IF Q = "2GO   "  AND  NOT GEN  THEN  GO TO GOL;           12577000
              IF GEN THEN IF SEMI THEN                                  12578000
         BEGIN                                                          12579000
              SCEN ; IF Q ! "4PAGE " THEN                               12580000
         BEGIN                                                          12581000
              FLOWERROR(16); GO TO MORE ;                               12582000
         END ;                                                          12583000
              PAGETOG ~ TRUE ;                                          12584000
              SCEN ; IF SEMI THEN SCEN ;                                12585000
         END ;                                                          12586000
              IF Q = "1(    "  AND  GEN  THEN                           12587000
         BEGIN                                                          12588000
              GENSYM;  Q ~ ACCUM[1]~GENLAB[G];  GENLAB[G]~GENLAB[G-1];  12589000
              GENLAB[G-1]~ Q;       COUNT~5; GENS~TRUE;  GO TO GOL1;    12590000
         END;                                                           12591000
              FLOWERROR(16) ; FINDSEMI ; GO TO MORE ;                   12592000
SWITCHL:                                                                12593000
              IF Q = "9SWITC"  THEN SCEN ;                              12594000
              BUILDBOX(2) ;                                             12595000
              IF Q ! "2GO   " THEN                                      12596000
         BEGIN                                                          12597000
              FLOWERROR(23); GO TO MORE ;                               12598000
         END ;                                                          12599000
              IF Q = "2GO   " THEN SCEN ;                               12600000
              IF Q = "2TO   " THEN SCEN ;                               12601000
              PROGPOINTLAB ;                                            12602000
MORELAB:                                                                12603000
              IF ASMFLOWTOG THEN BUILDHYPH;                             12604000
              FOR I ~ 0,1,2,3 DO                                        12605000
              MOVEWORDS(STBOX[12+I,0],TIM[LINTIM+I,0],5) ;              12606000
              LINTIM ~ LINTIM + 4 ;                                     12607000
              IF SORTSCRAMBLE THEN BUILDXREF ;                          12608000
              IF COUNT > 11 THEN COUNT ~ 11 ;                           12609000
              MOVECHARS(ACCUM[1],TIM[LINTIM-2,3],3,3,COUNT) ;           12610000
              MOVECHARS(LABPOINT,TIM[LINTIM-2,3],7,2,1) ;               12611000
              SCEN ; IF Q = "1(    " THEN                               12612000
         BEGIN                                                          12613000
              SCEN ; IF RESULT !3 OR COUNT > 3 THEN                     12614000
         BEGIN                                                          12615000
              IF RESULT !3 THEN FLOWERROR(29) ELSE FLOWERROR(30) ;      12616000
              CANTPAGEHERE ~ FALSE;                                     12617000
              FINDSEMI ; GO TO MORE ;                                   12618000
         END ;                                                          12619000
              MOVECHARS(ACCUM[1],TIM[LINTIM-2,2],3,6,COUNT) ;           12620000
              SCEN ; IF Q ! "1)    " THEN                               12621000
         BEGIN                                                          12622000
              FLOWERROR(31) ;   %    MISSING  )                         12623000
              CANTPAGEHERE ~ FALSE;                                     12624000
              FINDSEMI ; GO TO MORE ;                                   12625000
         END ;                                                          12626000
              SCEN ;                                                    12627000
         END ;                                                          12628000
              IF Q = "1,    " THEN                                      12629000
         BEGIN                                                          12630000
              EMIT ;                                                    12631000
              CANTPAGEHERE ~ TRUE;                                      12632000
              SCEN ; PROGPOINTLAB ; GO TO MORELAB ;                     12633000
         END ;                                                          12634000
              CONB ~ FALSE ;                                            12635000
              IF SEMI THEN                                              12636000
         BEGIN                                                          12637000
              SETCHAR(TIM[LINTIM-1,2],4," ") ;                          12638000
              EMIT;                                                     12639000
              CANTPAGEHERE ~ FALSE;                                     12640000
              GO TO MORE;                                               12641000
         END ;                                                          12642000
              CANTPAGEHERE ~ FALSE;                                     12643000
              FLOWERROR(17) ; FINDSEMI ; GO TO MORE ;                   12644000
ENTERL:       FOR I ~ 0 STEP 1 UNTIL 2 DO                               12645000
              MOVEWORDS(STBOX[1+I,0],TIM[LINTIM+I,0],5) ;               12646000
              LINTIM ~ LINTIM + 3 ; EMIT ;                              12647000
              CONB ~ TRUE ; GO TO MORE ;                                12648000
EXITL:        MOVEWORDS(STBOX[12,0],TIM[LINTIM,0],6) ;                  12649000
              LINTIM ~ LINTIM +1 ;                                      12650000
              FOR I ~ 0 STEP 1 UNTIL 2 DO                               12651000
              MOVEWORDS(STBOX[3+I,0],TIM[LINTIM+I,0],5) ;               12652000
              LINTIM ~ LINTIM + 3 ; EMIT ;                              12653000
              CONB ~ FALSE ; GO TO MORE ;                               12654000
DATEL:        DATETOG ~ TRUE ; SCEN ;                                   12655000
              IF Q = "5CLEAR" THEN DATETOG ~ FALSE ;                    12656000
              IF SEMI THEN GO TO MORE ; FINDSEMI ; GO TO MORE ;         12657000
PAGEL:        SCEN ; IF RESULT = 3 THEN                                 12658000
         BEGIN                                                          12659000
              DTOCT(ACCUM[1],3,PAGEINC,COUNT);                          12660000
              SCEN;                                                     12661000
         END ELSE PAGEINC~ SAVEPAGEINC ;                                12662000
              PAGETOG ~ TRUE;                                           12663000
              IF Q = "2NO   " THEN                                      12664000
         BEGIN                                                          12665000
              NOPAGETOG~ TRUE ; SCEN;                                   12666000
         END ELSE                                                       12667000
              IF SEMI THEN                                              12668000
         BEGIN                                                          12669000
              IF INSERTROW THEN PAGEN ~ SAVEPAGEN;                      12670000
              INSERTROW ~ FALSE;                                        12671000
         END ELSE                                                       12672000
              IF Q = "#INSER" THEN                                      12673000
         BEGIN                                                          12674000
LABEL         L;                                                        12675000
              INSERTOG ~TRUE;                                           12676000
              IF NOT INSERTROW THEN SAVEPAGEN ~ PAGEN;                  12677000
              INSERTROW ~TRUE;                                          12678000
              PAGEINC ~1;                                               12679000
              SCEN; IF RESULT ! 3 THEN GO TO L;                         12680000
              DTOCT (ACCUM [1],3,PAGEN,COUNT);                          12681000
              SCEN; IF COMMA THEN SCAN; IF RESULT !3 THEN GO TO L;      12682000
              DTOCT (ACCUM [1],3,PAGEINC,COUNT);                        12683000
              SCEN;                                                     12684000
L:            PAGEN~PAGEN -PAGEINC;                                     12685000
         END;                                                           12686000
              PAGECONNECT; PRINTPAGE;                                   12687000
              PAGETOG ~ FALSE;                                          12688000
              IF Q = "8DECIM" THEN GO TO DECIMALS ;                     12689000
              IF SEMI THEN GO TO MORE;                                  12690000
              FINDSEMI ; GO TO MORE ;                                   12691000
LABELL:       IF CONB THEN TEMP ~ 20 ELSE TEMP ~ 24 ;                   12692000
              IF Q = "6GENSY" THEN                                      12693000
         BEGIN                                                          12694000
              GENSYM;  COUNT ~5;  Q ~ ACCUM[1] ~ GENLAB[G];             12695000
         END;                                                           12696000
              FOR I ~ 0,1,2,3 DO                                        12697000
              MOVEWORDS(STBOX[TEMP+I,0],TIM[LINTIM+I,0],5) ;            12698000
              LINTIM ~ LINTIM + 4 ;                                     12699000
              LABELUSE ~ TRUE ;                                         12700000
              IF SORTSCRAMBLE THEN BUILDXREF ;                          12701000
              LABELUSE ~FALSE ;                                         12702000
              IF COUNT > 11 THEN COUNT ~ 11 ;                           12703000
              MOVECHARS(ACCUM[1],TIM[LINTIM-2,0],3,2,COUNT) ;           12704000
              MOVECHARS(LABPOINT,TIM[LINTIM-2,0],7,1,1) ;               12705000
              EMIT;  CONB ~ TRUE; IF Q="6GENSY" THEN GO TO MORE;        12706000
              IF PUNCHPAGES THEN                                        12707000
         BEGIN                                                          12708000
              MOVEWORDS(GLOBE[0],WORDBUF[0],9) ;                        12709000
              MOVEWORDS(NCR,WORDBUF[10],1);                             12710000
              MOVEWORDS(LCR,WORDBUF[11],1);                             12711000
              SAVESEQ ~ ISEQ ;                                          12712000
         END ;                                                          12713000
              IF GENS THEN                                              12714000
         BEGIN                                                          12715000
              GENS ~ FALSE;  PRINTFLOW;  GO TO LABLER;                  12716000
         END;                                                           12717000
              IF GEN  THEN                                              12718000
         BEGIN                                                          12719000
              GEN ~ FALSE;  GO TO MORE;                                 12720000
         END;                                                           12721000
              SCEN;  IF  Q ! "1:    "  THEN                             12722000
         BEGIN                                                          12723000
              FLOWERROR(11) ; FINDSEMI ; GO TO MORE ;                   12724000
         END ;                                                          12725000
              GO TO MORE ;                                              12726000
BOXONLYL:     SCEN ;                                                    12727000
TERML:        BUILDBOX(0) ; EMIT ;                                      12728000
              CONB ~ FALSE ; GO TO MORE ;                               12729000
TABLEL:       SCAN;IF RESULT = 3 THEN                                   12730000
              DTOCT(ACCUM[1],3,TABLECOUNT,COUNT) ELSE                   12731000
              TABLECOUNT ~ 5000 ;                                       12732000
              PAGETOG ~ TRUE;                                           12733000
              PAGECONNECT ; PRINTPAGE ;                                 12734000
              FLOWTABTOG ~ TABLETOG ~ TRUE ;                            12735000
              GO TO PTABLE ;                                            12736000
CODEL:        SCAN; IF RESULT = 3 THEN                                  12737000
              DTOCT(ACCUM[1],3,TABLECOUNT,COUNT) ELSE                   12738000
              TABLECOUNT ~ 5000 ;                                       12739000
              PAGETOG ~ TRUE;                                           12740000
              PAGECONNECT ; PRINTPAGE ;                                 12741000
              FLOWTABTOG ~ TRUE ; CODETOG ~ TRUE ;                      12742000
              GO TO PTABLE ;                                            12743000
PTABLE:                                                                 12744000
              IF PERCENT THEN SCAN ELSE READATAPE;                      12745000
              TABLECOUNT ~ TABLECOUNT - 1 ;                             12746000
              IF ASMLTOG THEN                                           12747000
         BEGIN                                                          12748000
              IF CODETOG THEN                                           12749000
              MOVEWORDS(ASMLBUFF[DEVICE,*],IMAGE[NLINES,*],10) ;        12750000
              IF TABLETOG THEN                                          12751000
              MOVEWORDS(GLOBE[0],IMAGE[NLINES,1],8) ;                   12752000
         END ELSE                                                       12753000
             IF CHECKCHAR(GLOBE[0],0,"%") THEN TABLECOUNT ~0 ELSE       12754000
              MOVEWORDS(GLOBE,IMAGE[NLINES,0],9) ;                      12755000
              NLINES ~ NLINES + 1 ;                                     12756000
              IMAGEUSED ~ TRUE ;                                        12757000
              PAGELINES ~ NLINES ;                                      12758000
              IF  NLINES } MAXLINES THEN PRINTPAGE ;                    12759000
              IF TABLECOUNT !0 THEN GO TO PTABLE ;                      12760000
              PAGELINES ~ NLINES ;                                      12761000
              IF NLINES ! 4 THEN PRINTPAGE ;                            12762000
              FLOWTABTOG ~ CODETOG ~ TABLETOG ~ FALSE ;                 12763000
              GO TO MORE ;                                              12764000
PAGEIDL:                                                                12765000
         BEGIN                                                          12766000
INTEGER       BLOCKEXTENDER;                                            12767000
              INSERTROW ~ FALSE;                                        12768000
              LFPAGEID~TRUE; PAGEN ~0; PAGEID~"      ";                 12769000
              SCEN ; IF RESULT ! 3 THEN                                 12770000
         BEGIN                                                          12771000
              FLOWERROR(18) ; FINDSEMI ; GO TO MORE ;                   12772000
         END ;                                                          12773000
              DTOCT(ACCUM[1],3,PAGEN,COUNT) ;                           12774000
              SCEN ; IF Q ! "1,    " THEN                               12775000
         BEGIN                                                          12776000
              FLOWERROR(19); FINDSEMI ; GO TO MORE ;                    12777000
         END ;                                                          12778000
              SCEN ; IF Q = "1+    " THEN                               12779000
         BEGIN                                                          12780000
              LFPAGEID ~FALSE ; SCEN ;                                  12781000
         END ;                                                          12782000
              IF RESULT = 5 THEN                                        12783000
         BEGIN                                                          12784000
              IJUNK ~ IF COUNT > 7 THEN 6 ELSE COUNT - 2 ;              12785000
              MOVECHARS(ACCUM[1],PAGEID,4,2,IJUNK) ;                    12786000
         END ELSE FLOWERROR(20) ;                                       12787000
              IF IMAGEUSED THEN PAGEN ~PAGEN -PAGEINC ELSE NEWDOCPAGE;  12788000
              SCEN; IF SEMI THEN GO TO MORE;                            12789000
         END ;                                                          12790000
              IF Q = "8DECIM" THEN                                      12791000
         BEGIN                                                          12792000
DECIMALS:                                                               12793000
              DECIMALSTOG ~TRUE;                                        12794000
              PLACES ~2;                                                12795000
              SCEN; IF Q = "2NO   " THEN                                12796000
         BEGIN                                                          12797000
              DECIMALSTOG ~ FALSE;                                      12798000
              FINDSEMI;                                                 12799000
              IF NOT IMAGEUSED THEN NEWDOCPAGE;                         12800000
              GO TO MORE;                                               12801000
         END ELSE                                                       12802000
              IF RESULT = 3 THEN                                        12803000
              DTOCT (ACCUM[1],3,PLACES,COUNT);                          12804000
              IF NOT IMAGEUSED THEN NEWDOCPAGE;                         12805000
         END;                                                           12806000
              FINDSEMI ; GO TO MORE ;                                   12807000
MAXCOLL:      SCEN ; IF RESULT = 3 THEN                                 12808000
         BEGIN                                                          12809000
              DTOCT(ACCUM[1],3,MAXCOL,COUNT) ;                          12810000
              IF MAXCOL < 1 OR MAXCOL >3 THEN                           12811000
         BEGIN                                                          12812000
              MAXCOL ~ 3 ; FLOWERROR(21) ;                              12813000
         END ;                                                          12814000
         END ;                                                          12815000
              FINDSEMI ; GO TO MORE ;                                   12816000
MAXL:         SCEN; IF RESULT ! 3 THEN                                  12816100
              FLOWERROR(25) ELSE
         BEGIN
              DTOCT(ACCUM[1],3,MAXLINES,COUNT);
              MAXTIM:=MAXLINES-15;
         END ;
              FINDSEMI; GO TO MORE;                                     12816100
PAGEINCL:     SCEN ; IF RESULT ! 3 THEN PAGEINC ~ 1 ELSE                12817000
              DTOCT(ACCUM[1],3,PAGEINC,COUNT) ;                         12818000
              SAVEPAGEINC ~PAGEINC ; GO TO MORE ;                       12819000
LEFTL:                                                                  12820000
              LEFTJUST ~ TRUE;                                          12821000
              SCAN; IF SEMI THEN GO TO MORE;                            12822000
              IF Q = "2NO   " THEN LEFTJUST ~ FALSE;                    12823000
              FINDSEMI; GO TO MORE;                                     12824000
NOGOODL:      FLOWERROR(12); FINDSEMI ; GO TO MORE ;                    12825000
COLL:                                                                   12826000
         BEGIN                                                          12827000
INTEGER       BLOCKEXTENDER;                                            12828000
              COLTOG ~ TRUE;                                            12829000
              IF PUNCHPAGES THEN                                        12830000
         BEGIN                                                          12831000
              FINDSEMI;                                                 12832000
              MOVEWORDS(WORDBUF[0],SAVEBUF[0],12);                      12833000
              SAVEBUF[12] ~ SAVESEQ;                                    12834000
              MOVEWORDS(GLOBE[0],WORDBUF[0],9);                         12835000
              MOVEWORDS(NCR,WORDBUF[10],1);                             12836000
              MOVEWORDS(LCR,WORDBUF[11],1);                             12837000
              SAVESEQ ~ ISEQ;                                           12838000
         END;                                                           12839000
              EMIT;                                                     12840000
              COLTOG ~ FALSE;                                           12841000
              GO TO MORE;                                               12842000
         END;                                                           12843000
 KI:      END PRINTFLOW;                                                12844000
COMMENT RESTYPE-RESERVED FILL FOR FLOW                                  12845000
1 START 2 FINISH 3 QUIT 4 BEGIN 5 END 6 BOX                             12846000
7 COMMENT 8 HEAD HEADING 9 TITLE 10     TRUE                            12847000
11    FALSE 12 TO 13 GO 14 IF         16 SWITCH 17 ENTER                12848000
18 EXIT 19 PAGE                                                         12849000
21 TERM TERMINATE 22 PAGEID 23 COL COLUMN 24 PAGEINC 25 MAXCOL 26 DATE  12850000
27 NOTE  33 DOES IS WAS 28 TABLE 29 CODE    30 BOXONLY                  12851000
31         YES                                                          12852000
32         NO                                                           12853000
33         TEST       ;                                                 12854000
              CONB ~ COLTOG ~ IMAGEUSED ~ LEFTJUST ~ BOXTYPE~           12855000
              CODETOG ~ TABLETOG ~ FALSE;                               12856000
              PUNCHFLOWTOG ~ FLOWWIDETOG ~ FALSE ;                      12857000
              MAXTIM~ NLINES ~LINTIM ~ COL ~ PARP ~ TEMP ~ I~MAXCOL~    12858000
              BEGINCOUNT ~ PAGELINES ~ TABLECOUNT ~ 0;                  12859000
              PFSEQ ~ 10 ;                                              12860000
              FILLFLOW;                                                 12861000
              VOLUME ~ 0;                                               12862000
FILL SB[01,*]WITH"        ","        "," -------","        ","        ";12863000
FILL SB[02,*]WITH"        ","        "," :ENTER:","        ","        ";12864000
FILL SB[03,*]WITH"        ","        "," -------","        ","        ";12865000
FILL SB[04,*]WITH"        ","        "," :EXIT :","        ","        ";12866000
FILL SB[05,*]WITH"        ","        "," -------","        ","        ";12867000
FILL SB[06,*]WITH"........","........",".....   ","        ","        ";12868000
FILL SB[07,*]WITH"        ","        ","    :   ","        ","        ";12869000
FILL SB[08,*]WITH"        ","        ","    :   ","        ","       .";12870000
FILL SB[09,*]WITH"        ","        ","    :...","........","........";12871000
FILL SB[10,*]WITH"    ----","--------","--------","--------","----    ";12872000
FILL SB[11,*]WITH"    *   ","        ","        ","        ","   *    ";12873000
FILL SB[11,*]WITH"     *  ","        ","        ","        ","  *     ";12874000
FILL SB[12,*]WITH"        ","        ","    :   ","        ","        ";12875000
FILL SB[13,*]WITH"        ","        ","    :   ","        ","        ";12876000
FILL SB[14,*]WITH"        ","        ","    :...","...     ","        ";12877000
FILL SB[15,*]WITH"        ","        ","    :   ","        ","        ";12878000
FILL SB[16,*]WITH"        ","        ","    :   ","        ","        ";12879000
FILL SB[17,*]WITH"        ","        ","    :   ","        ","        ";12880000
FILL SB[18,*]WITH"        ","        ","    :...","...     ","        ";12881000
FILL SB[19,*]WITH"        ","        ","        ","        ","        ";12882000
FILL SB[20,*]WITH"        ","        ","    :   ","        ","        ";12883000
FILL SB[21,*]WITH"        ","        ","    :   ","        ","        ";12884000
FILL SB[22,*]WITH"  ......","........",".....   ","        ","        ";12885000
FILL SB[23,*]WITH"        ","        ","    :   ","        ","        ";12886000
FILL SB[24,*]WITH"        ","        ","        ","        ","        ";12887000
FILL SB[25,*]WITH"        ","        ","        ","        ","        ";12888000
FILL SB[26,*]WITH"  ......","........",".....   ","        ","        ";12889000
FILL SB[27,*]WITH"        ","        ","    :   ","        ","        ";12890000
FILL SB[28,*]WITH"        ","        ",":     : ","        ","        ";12891000
FILL SB[29,*]WITH"        ","        ",".     . ","        ","        ";12892000
FILL SB[30,*]WITH"        ","        ",".     ..","...     ","        ";12893000
FILL SB[31,*]WITH"        ","        ",".....   ","        ","        ";12894000
FILL SB[32,*]WITH"        ","        ","    :   ","        ","        ";12895000
FILL SB[33,*]WITH"        ","        ","    :   ","        ","        ";12896000
FILL SB[34,*]WITH"    * * ","* * * * ","* * : * ","* * * * ","* *     ";12897000
FILL SB[35,*]WITH"      **","********","********","********","**      ";12898000
FILL SB[36,*]WITH"     *  ","        ","        ","        ","  *     ";12899000
              IF PUNCHPAGES THEN                                        12900000
              IF INSTOG THEN FILL BLOCKBUFFER [*] WITH                  12901000
              "* PAGE  ","INSERTPA","GE      ",0,"*       " ELSE        12902000
              FILL BLOCKBUFFER[*] WITH                                  12903000
                 "* PAGE *","        ", "        ";                     12904000
MOREFLOW:                                                               12905000
              NLINES ~ 0;                                               12906000
              PAGETOG ~ TRUE;                                           12907000
              ZNOSKIP ~ FALSE;                                          12908000
              PRINTXREF;                                                12909000
              ZNOSKIP ~ TRUE;                                           12910000
              FLOWTOG ~ TRUE;                                           12911000
              TITLECHANGE ~ HEADCHANGE ~ FALSE;                         12912000
              FOR I ~ 0 STEP 1 UNTIL 125 DO STACK[I] ~0;                12913000
              TOTAL ~ 0;                                                12914000
              CLEAR(TITLEBUFF,14) ; CLEAR(HEADBUFF,14) ;                12915000
              PAGEN ~0;                                                 12916000
              FLOWIND ~0 ;                                              12917000
              GENER ~ G ~ 0;                                            12918000
              FILL TYPEIND[*] WITH 10,11,10,34 ;                        12919000
              IF REMOTETOG THEN MAXCOL ~ 1 ELSE                         12920000
              MAXCOL ~ 3 ; COL ~ 1 ;                                    12921000
              IF SIXLINES THEN MAXLINES ~ 54 ELSE                       12922000
              MAXLINES ~ 70 ; MAXTIM ~ 39 ;                             12923000
              FOR I ~ 0 STEP 1 UNTIL 75 DO CLEAR(IMAGE[I,*],14) ;       12924000
              NLINES ~ 4 ; LINTIM ~0 ;                                  12925000
              DOCOUTPUT~TRUE;                                           12926000
              PAGETOG ~ TRUE;                                           12927000
              ZNOSKIP~TRUE;                                             12928000
              NEWVOL ~ TRUE;                                            12929000
              ZPG(ZF);                                                  12930000
              PAGEQUAL ~ 0 ;                                            12931000
              PAGETOG ~ FALSE;                                          12932000
              NEWDOCPAGE;                                               12933000
              FLOWFOUND ~ FALSE;                                        12934000
 MAINSTART:   DOCLISTFLAG ~ FALSE;                                      12935000
              WHILE Q! "7COMME" DO SCAN ;                               12936000
              SCAN;  IF Q.[18:24] ! "FLOW" THEN GO TO MAINSTART;        12937000
              FLOWFOUND ~ TRUE;                                         12938000
              IF DOCLISTOG THEN                                         12939000
              IF ASMLTOG THEN                                           12940000
         BEGIN                                                          12941000
              CLEAR(LISTBUFFER,14);                                     12942000
              MOVEWORDS(ASMLBUFF[DEVICE,*],LISTBUFFER,10) ;             12943000
              ZPL (0,2,LISTBUFFER);                                     12944000
         END ELSE                                                       12945000
         BEGIN                                                          12946000
              CLEAR(LISTBUFFER,14) ;                                    12947000
              MOVEWORDS(GLOBE,LISTBUFFER[2],9) ;                        12948000
              MOVEWORDS(SEQ,LISTBUFFER[11],1) ;                         12949000
              ZPL (0,2,LISTBUFFER);                                     12950000
         END;                                                           12951000
              VOLUME ~ VOLUME + 1 ;                                     12952000
              DOCLISTFLAG ~ TRUE;                                       12953000
              PRINTFLOW ;                                               12954000
COMMENT ARRIVAL HERE MEANS NO QUIT OR FINISH CARD;                      12955000
              FLOWERROR(35);                                            12956000
              PRINTPAGE;                                                12957000
              PAGETOG ~ TRUE;                                           12958000
              GO TO EOFCARD;                                            12959000
         END  BLOCK PRINTFLOW;                                          12960000
              IF MERGETOG THEN                                          12961000
         BEGIN                                                          12962000
COMMENT DOCUMENT*  7 * * * * * * * * * * * * * * * * * * * * * * * * *  12963000
BLOCK TO MERGE OLD AND NEW DOCUMENTS.                                   12964000
* SKIP                                                                  12965000
         COMPARES A NEW DOCUMENT WITH A PREVIOUS ONE TO DETERMINE WHICH 12966000
         PAGES HAVE BEEN CHANGED.  COMPARISON IS THROUGH DIRECTORIES    12967000
         WHICH HAVE BEEN WRITTEN AT THE END OF THE TWO DOCUMENTS.       12968000
* END;                                                                  12969000
INTEGER       LOCA;                                                     12970000
INTEGER       I,J,POINTER,LASTOLD,LASTNEW,DOCREV;                       12971000
INTEGER TEMP;                                                           12972000
INTEGER       INXPOINT,CHGPOINT,K,VOL1;                                 12973000
INTEGER       KJUNK;                                                    12974000
BOOLEAN       PAGEONE,DIFFERENT;                                        12975000
ALPHA         ATEMP;                                                    12976000
LABEL         MORE,EOF,FINISHUP,NEWVOL;                                 12977000
LABEL         PRINTPLACE;                                               12978000
LABEL         STOPSHORT;                                                12979000
                                                                        12980000
LABEL         FINI2;                                                    12981000
FORMAT        ZFORM(8I8);                                               12982000
FORMAT        FORM1(3I8);                                               12983000
FORMAT        FORM2(2I8);                                               12984000
FORMAT        PAGEMARKER ("XXXXXXXX");                                  12985000
FORMAT        CHGHEAD (X26,"CHANGE INDEX"),                             12986000
              INXHEAD (X15," CURRENT REVISION INDEX",X15,A6);           12987000
FORMAT        CHGTAB(X6,"PAGE",X8, "CONT PAGE",X8,"REVISION",           12988000
              X6, "ACTION"),                                            12989000
              INXTAB (X6,"PAGE",X13,"PRESENT REVISION",                 12990000
              X7, "NO. OF CONT. PAGES");                                12991000
ARRAY    INDEX,RVCONT,ODR,NDR[0:1022,0:15];                             12992000
ARRAY         ACTIONS [0:3];                                            12993000
DEFINE ERRORCONDITION =                                                 12994000
         BEGIN                                                          12995000
FORMAT GOOF ( X10,"ERROR CONDITION");                                   12996000
              WRITE(LINE,GOOF);                                         12997000
              J~J+1; GO TO MORE;                                        12998000
         END# ;                                                         12999000
DEFINE ADDPAGE =                                                        13000000
         BEGIN                                                          13001000
              PAGEONE~FALSE;                                            13002000
              ENTERCHANGE (NEWBUF[*],1);                                13003000
              ENTERINDEX;                                               13004000
              IF NOT HOLDOFFTOG THEN                                    13005000
              PRINTOUTP;                                                13006000
         END#;                                                          13007000
DEFINE CHANGEPAGE =                                                     13008000
         BEGIN                                                          13009000
              COMPARE; IF NOT DIFFERENT THEN NDR[J,0]~0 ELSE            13010000
         BEGIN                                                          13011000
              ENTERCHANGE(NEWBUF[*],2);                                 13012000
              IF NOT HOLDOFFTOG THEN                                    13013000
              PRINTOUTP;                                                13014000
         END;                                                           13015000
         END#;                                                          13016000
DEFINE DELETEPAGE = ENTERCHANGE(ODR[I,*],3)#;                           13017000
PROCEDURE PRINTCHANGES ;                                                13018000
              IF CHGPOINT > 0 THEN                                      13019000
         BEGIN                                                          13020000
              ZLCOUNTMAX ~ IF SIXLINES THEN 56 ELSE 78;                 13021000
              IF DATOG THEN                                             13022000
         BEGIN                                                          13023000
              DECIMALSTOG ~ TRUE ; PLACES~2;                            13024000
              PAGEN ~ 15; PAGEINC~1;                                    13025000
              NEWDOCPAGE;                                               13026000
         END ;                                                          13027000
              IF TITLETOG THEN ZPL(ZF,2,DOCTITLE );                     13028000
              WRITE (WORDBUF[*],CHGHEAD);                               13029000
              ZPL(ZF,2  ,WORDBUF[*]);                                   13030000
              WRITE (WORDBUF[*],CHGTAB);                                13031000
              ZPL(ZF,ZSP,WORDBUF[*]);                                   13032000
              FOR K ~ 1 STEP 1 UNTIL CHGPOINT DO                        13033000
         BEGIN                                                          13034000
              IF ZLCOUNT } ZLCOUNTMAX THEN                              13035000
         BEGIN                                                          13036000
              ZPG(ZF);                                                  13037000
              IF DATOG THEN                                             13038000
         BEGIN                                                          13039000
              PAGEN ~ PAGEN +1;                                         13040000
              NEWDOCPAGE;                                               13041000
              ZPL(ZF,2,DOCTITLE);                                       13042000
         END ;                                                          13043000
              ZPL(ZF,ZSP,WORDBUF[*]) ;                                  13044000
         END ;                                                          13045000
              ZPL(ZF,ZSP,INDEX[K,*]);                                   13046000
         END ;                                                          13047000
              ZLCOUNTMAX ~ 100;                                         13048000
              ZPG (ZF);                                                 13049000
         END ;                                                          13050000
PROCEDURE WRINDEX ;                                                     13051000
              IF INXPOINT > 0 THEN                                      13052000
         BEGIN                                                          13053000
              ZLCOUNTMAX ~ IF SIXLINES THEN 56 ELSE 78;                 13054000
              IF DATOG THEN                                             13055000
         BEGIN                                                          13056000
              PAGEN ~ 2 ; PAGEINC ~ 1;                                  13057000
              DECIMALSTOG ~ TRUE; PLACES ~ 1;                           13058000
              NEWDOCPAGE;                                               13059000
         END ;                                                          13060000
              IF TITLETOG THEN ZPL(ZF,2,DOCTITLE );                     13061000
              MOVECHARS (REVISIONS [DOCREV],ATEMP,2,2,6);               13062000
              WRITE (WORDBUF[*],INXHEAD,ATEMP);                         13063000
              ZPL(ZF,2  ,WORDBUF[*]);                                   13064000
              WRITE (WORDBUF[*],INXTAB);                                13065000
              ZPL(ZF,ZSP,WORDBUF[*]);                                   13066000
              FOR K~1 STEP 1 UNTIL INXPOINT DO                          13067000
         BEGIN                                                          13068000
              IF ZLCOUNT } ZLCOUNTMAX THEN                              13069000
         BEGIN                                                          13070000
              ZPG(ZF);                                                  13071000
              IF DATOG THEN                                             13072000
         BEGIN                                                          13073000
              PAGEN ~ PAGEN +1;                                         13074000
              NEWDOCPAGE;                                               13075000
              ZPL(ZF,2,DOCTITLE);                                       13076000
         END ;                                                          13077000
              ZPL(ZF,ZSP,WORDBUF[*]);                                   13078000
         END ;                                                          13079000
              ZPL(ZF,ZSP,RVCONT[K,*]);                                  13080000
         END ;                                                          13081000
              ZLCOUNTMAX ~ 100;                                         13082000
              ZPG (ZF);                                                 13083000
         END ;                                                          13084000
COMMENT DOCUMENT* 31* * * * * * * * * * * * * * * * * * * * * * * * *;  13085000
BOOLEAN PROCEDURE CANFIND;                                              13086000
COMMENT  TRUE IF PAGE FROM NEWDOC IS FOUND IN OLDDOC DIRECTORY ;        13087000
         BEGIN                                                          13088000
INTEGER K; LABEL L; BOOLEAN B;                                          13089000
              B~ FALSE;                                                 13090000
              IF NDR[J-1,0] ! 5 THEN                                    13091000
              IF NDR[J-1,1] = NEWBUF [1] THEN GO TO L;                  13092000
              FOR K~ I+1 STEP 1 UNTIL LASTOLD DO                        13093000
         BEGIN                                                          13094000
              IF ODR[K,6] > VOL1 THEN GO TO L;                          13095000
              IF ODR[K,1] = NEWBUF[1] THEN                              13096000
              IF EQUAL(NEWBUF[8],ODR[K,8],24) THEN                      13097000
         BEGIN                                                          13098000
              POINTER ~ K;                                              13099000
              B ~ TRUE;                                                 13100000
              GO TO L;                                                  13101000
         END;                                                           13102000
         END ;                                                          13103000
L:                                                                      13104000
              CANFIND~B;                                                13105000
         END CANFIND;                                                   13106000
PROCEDURE COMPARE;                                                      13107000
         BEGIN                                                          13108000
COMMENT  FOR FUTURE USE - COULD ADD A CHARACTER COMPARE ;               13109000
              DIFFERENT ~TRUE;                                          13110000
         END COMPARE;                                                   13111000
COMMENT DOCUMENT* 31* * * * * * * * * * * * * * * * * * * * * * * * *;  13112000
PROCEDURE PRINTOUTP;                                                    13113000
COMMENT  PRINTS PAGE FROM NEWDOC GIVEN BY CURRENT DIRECTORY ENTRY ;     13114000
         BEGIN                                                          13115000
INTEGER K,KJUNK;                                                        13116000
LABEL EOF;                                                              13117000
              KJUNK~ NEWBUF[4] -1;                                      13118000
              K ~ NEWBUF[3];                                            13119000
              IF OLDONLYTOG THEN READ(OLDDOC[K],15,WORDBUF[*]) ELSE     13120000
              READ (NEWDOC[K],15,WORDBUF[*]);                           13121000
              IF NEWBUF[7] = 1 THEN                                     13122000
              IF NOT PRINTSELECTOG THEN                                 13123000
              MOVECHARS (REVISIONS [DOCREV],WORDBUF[1],6,6,2);          13124000
              ZPL (ZF,1,WORDBUF[*]);                                    13125000
              IF OLDONLYTOG THEN READ(OLDDOC   ,15,WORDBUF[*]) ELSE     13126000
              READ (NEWDOC,15,WORDBUF[*]);                              13127000
              FOR K ~ K+ 1 STEP 1 UNTIL KJUNK DO                        13128000
         BEGIN                                                          13129000
              IF OLDONLYTOG THEN                                        13130000
                 READ(OLDDOC,15,WORDBUF[*])[EOF] ELSE                   13131000
              READ (NEWDOC,15,WORDBUF[*]) [EOF];                        13132000
              ZPL (ZF,1,WORDBUF[*]);                                    13133000
         END;                                                           13134000
              ZPG (ZF);                                                 13135000
EOF:     END PRINTOUTP;                                                 13136000
COMMENT DOCUMENT* 33* * * * * * * * * * * * * * * * * * * * * * * * *;  13137000
PROCEDURE ENTERCHANGE (A,TYPE);                                         13138000
VALUE         TYPE;                                                     13139000
ARRAY A[*];  INTEGER TYPE;                                              13140000
COMMENT  PUTS CHANGE IN CHANGE INDEX AND UPDATES PAGE REVISION ;        13141000
         BEGIN                                                          13142000
INTEGER K;                                                              13143000
COMMENT  TYPE 1 = ADDITION, 2= CHANGE, 3 = DELETION ;                   13144000
              CLEAR (WORDBUF[0],14);                                    13145000
              IF TYPE = 3 THEN K~ OLDBUF [5] ELSE                       13146000
              NDR[J,5] ~ NEWBUF[5] ~ K~ DOCREV;                         13147000
              MOVEWORDS (A[10],WORDBUF[2],1);                           13148000
              MOVEWORDS ( REVISIONS[K],WORDBUF[4],1);                   13149000
              MOVEWORDS (A[8],WORDBUF[0],2);                            13150000
              MOVEWORDS (ACTIONS [TYPE],WORDBUF[6],1);                  13151000
              CHGPOINT ~ CHGPOINT +1;                                   13152000
              WRITE (INDEX[CHGPOINT,*],15,WORDBUF[*]);                  13153000
              IF DEBEATLETOG THEN WRITE(LINE,15,WORDBUF[*]);            13154000
         END ENTERCHANGE;                                               13155000
COMMENT DOCUMENT* 31 * * * * * * * * * * * * * * * * * * * * * * * * *; 13156000
PROCEDURE ENTERINDEX;                                                   13157000
COMMENT  ENTERS PAGE IN CURRENT REVISION INDEX ;                        13158000
         BEGIN                                                          13159000
LABEL         L;                                                        13160000
              IF J < LASTNEW THEN IF NEWBUF[6] = NDR[J+1,6] THEN        13161000
              IF NEWBUF[1] = NDR [J+1,1] THEN GO TO L;                  13162000
              IF NEWBUF[5] ! DOCREV THEN NEWBUF[5] ~ OLDBUF[5];         13163000
              CLEAR (WORDBUF[0],14);                                    13164000
              MOVEWORDS (NEWBUF[8],WORDBUF[0],2);                       13165000
              MOVEWORDS (NEWBUF[10],WORDBUF[6],1);                      13166000
              MOVEWORDS (REVISIONS [NEWBUF[5]],WORDBUF[3],1);           13167000
              INXPOINT ~ INXPOINT +1;                                   13168000
              WRITE ( RVCONT [INXPOINT,*],15,WORDBUF[*]);               13169000
              IF DEBEATLETOG THEN WRITE(LINE,15,WORDBUF[*]);            13170000
              IF PAGEONE THEN GO TO L;                                  13171000
              FOR K ~ J STEP -1 WHILE NDR[K,1] = NEWBUF [1] DO          13172000
         BEGIN                                                          13173000
              NDR [K,5] ~ NEWBUF [5];                                   13174000
              IF NEWBUF[7] = 1 THEN                                     13175000
         BEGIN                                                          13176000
              READ (NEWDOC[NDR[K,3]],15,WORDBUF[*]);                    13177000
              MOVECHARS ( REVISIONS [NEWBUF[5]],WORDBUF[1],6,6,2);      13178000
              WRITE (NEWDOC [NDR[K,3]],15,WORDBUF[*]);                  13179000
         END;                                                           13180000
         END;                                                           13181000
L:       END ENTERINDEX;                                                13182000
              CLOSE(CARDS,RELEASE);                                     13183000
              FILL ACTIONS[*] WITH 0,                                   13184000
              " ADD    "," CHANGE "," DELETE ";                         13185000
              IF DATOG THEN TITLETOG ~ TRUE;                            13186000
              READ (OLDDOC,FORM1,LOCA,LASTOLD,DOCREV);                  13187000
              IF DEBEATLETOG THEN WRITE(LINE,FORM1,LOCA,LASTOLD,DOCREV);13188000
              READ (OLDDOC [LOCA +1],15,ODR[1,*]);                      13189000
              IF DEBEATLETOG THEN WRITE(LINE,15,ODR[1,*]);              13190000
              READ (OLDDOC,15,WORDBUF[*]);                              13191000
              FOR I ~ 2 STEP 1 UNTIL LASTOLD DO                         13192000
         BEGIN                                                          13193000
              READ (OLDDOC,15,ODR [I,*]);                               13194000
              IF DEBEATLETOG THEN WRITE(LINE,15,ODR[I,*]);              13195000
         END;                                                           13196000
              IF DIRTOG THEN                                            13197000
         BEGIN                                                          13198000
FORMAT        DIRHEAD(X28,"DIRECTORY");                                 13199000
SWITCH FORMAT DIRTAB ~ (/),                                             13200000
(X10," COLUMN 1 IS 1 IF PAGE IS PATCHED"),                              13201000
(X10, " COLUMN 2 IS PAGE"),                                             13202000
(X10, " COLUMN 3 IS CONTINUATION PAGE"),                                13203000
(X10, " COLUMN 4 IS RECORD NUMBER OF FIRST LINE"),                      13204000
(X10, " COLUMN 5 IS RECORD NUMBER OF LAST LINE"),                       13205000
(X10, " COLUMN 6 IS REVISION"),                                         13206000
(X10, " COLUMN 7 IS SECTION"),                                          13207000
(X5, " REST OF LINE IS FORMAT INFORMATION");                            13208000
              WRITE (WORDBUF[*],DIRHEAD);                               13209000
              ZPL(ZF,2  ,WORDBUF[*]);                                   13210000
              FOR I~2 STEP 1 UNTIL LASTOLD DO                           13211000
         BEGIN                                                          13212000
              WRITE (WORDBUF[*],ZFORM,FOR K~ 0 STEP 1 UNTIL 7 DO        13213000
              ODR[I,K]);                                                13214000
              MOVEWORDS (ODR[I,8],WORDBUF[8],3);                        13215000
              ZPL (ZF,1, WORDBUF[*]);                                   13216000
         END;                                                           13217000
              FOR I ~ 0 STEP 1 UNTIL 8 DO                               13218000
         BEGIN                                                          13219000
              WRITE (WORDBUF[*],DIRTAB[I]);                             13220000
              ZPL (ZF,1,WORDBUF[*]);                                    13221000
         END;                                                           13222000
              ZPG(ZF);                                                  13223000
              IF DIRONLYTOG THEN GO TO STOPSHORT;                       13224000
         END;                                                           13225000
              ZLCOUNTMAX ~ 100;                                         13226000
              IF OLDONLYTOG THEN GO TO PRINTPLACE;                      13227000
              READ (NEWDOC,FORM1, LOCA, LASTNEW, TEMP);                 13228000
              DOCREV ~ IF TEMP > 1 THEN TEMP ELSE DOCREV +1;            13229000
              IF DEBEATLETOG THEN WRITE(LINE,FORM2,LOCA,LASTNEW);       13230000
              READ (NEWDOC[LOCA+1],15,NDR[1,*]);                        13231000
              READ(NEWDOC,15,WORDBUF[*]);                               13232000
              IF DEBEATLETOG THEN WRITE(LINE,15,NDR[1,*]);              13233000
              FOR I~2 STEP 1 UNTIL LASTNEW DO                           13234000
         BEGIN                                                          13235000
              READ (NEWDOC,15,NDR[I,*]);                                13236000
              IF DEBEATLETOG THEN WRITE(LINE,15,NDR[I,*]);              13237000
         END;                                                           13238000
              I~J~2;                                                    13239000
              IF ODR[I,0]=5 THEN I~I+1;                                 13240000
              IF NDR[J,0]=5 THEN J~J+1;                                 13241000
              VOL1~1;                                                   13242000
              PRINTOG~FALSE;                                            13243000
              PAGEONE~TRUE;                                             13244000
              INXPOINT ~ CHGPOINT ~ 0;                                  13245000
              IJUNK ~I; KJUNK ~ J;                                      13246000
COMMENT ODR OR NDR[0] = 5 MEANS END OF SECTION;                         13247000
              WHILE ODR[IJUNK,0] ! 5 DO IJUNK ~ IJUNK +1;               13248000
              WHILE NDR[KJUNK,0] ! 5 DO KJUNK ~ KJUNK +1;               13249000
              DOCPATCHED ~ (NDR[KJUNK,1] = 1) ;                         13250000
              DOCREV ~ IF DOCPATCHED THEN ODR[IJUNK,2] +1 ELSE          13251000
                       ODR[IJUNK,2] ;                                   13252000
              NDR[KJUNK,2] ~ DOCREV;                                    13253000
MORE :                                                                  13254000
              IF J > LASTNEW THEN                                       13255000
         BEGIN                                                          13256000
              IF  I { LASTOLD THEN                                      13257000
              FOR I ~ I STEP 1 UNTIL LASTOLD DO                         13258000
              IF ODR[I,0] !3 THEN DELETEPAGE;                           13259000
              GO TO FINISHUP;                                           13260000
         END;                                                           13261000
              IF I > LASTOLD THEN                                       13262000
         BEGIN                                                          13263000
              FOR J~J STEP 1 UNTIL LASTNEW DO                           13264000
         BEGIN                                                          13265000
              MOVEWORDS (NDR[J,0],NEWBUF[0],15);                        13266000
              IF NEWBUF[6] ! VOL1 THEN GO TO NEWVOL;                    13267000
              IF NEWBUF[0] ! 3 THEN ADDPAGE;                            13268000
              PAGEONE ~FALSE;                                           13269000
         END;                                                           13270000
              GO TO FINISHUP;                                           13271000
         END;                                                           13272000
              IF NDR[J,0] = 5 THEN                                      13273000
         BEGIN                                                          13274000
              I ~ I+1; J~J+1; GO TO MORE;                               13275000
         END ;                                                          13276000
COMMENT WHEN WE GET HERE BOTH DIRECTORIES STILL HAVE ENTRIES;           13277000
              MOVEWORDS (ODR[I,0],OLDBUF[0],15);                        13278000
              MOVEWORDS (NDR[J,0],NEWBUF[0],15);                        13279000
              IF NEWBUF[6] ! VOL1 THEN GO TO NEWVOL;                    13280000
COMMENT ARRAY WORD ONE IS PAGE NUMBER;                                  13281000
              IF OLDBUF [1] ! NEWBUF[1] THEN                            13282000
         BEGIN                                                          13283000
              IF CANFIND THEN                                           13284000
         BEGIN                                                          13285000
              FOR I ~ I STEP 1 UNTIL POINTER -1 DO                      13286000
              IF ODR[I,0] ! 3 THEN DELETEPAGE;                          13287000
              I~POINTER;                                                13288000
         END ELSE                                                       13289000
         BEGIN                                                          13290000
              IF NEWBUF [0] ! 3 THEN ADDPAGE ;                          13291000
              J~J+1;                                                    13292000
         END;                                                           13293000
              GO TO MORE;                                               13294000
         END;                                                           13295000
COMMENT ARRAY WORD TWO HOLDS CONTIN PAGE NUMBER;                        13296000
              IF OLDBUF[2] ! NEWBUF[2] THEN ERRORCONDITION;             13297000
COMMENT ARRAY WORD 0 TELLS IF PATCHED PAGE;                             13298000
              IF NEWBUF[0] =1 THEN CHANGEPAGE ELSE                      13299000
              IF NEWBUF[0] = 2 THEN IF DOCPATCHED THEN                  13300000
                 CHANGEPAGE ELSE ELSE                                   13301000
% TEST BLANK OUT CASE                                                   13302000
              IF NEWBUF[0] = 0 AND NEWBUF[4]- NEWBUF[3] ! OLDBUF[4]-    13303000
                 OLDBUF[3] THEN                                         13304000
         BEGIN                                                          13305000
              CHANGEPAGE;                                               13306000
              NEWBUF[0] ~ 1;                                            13307000
         END ;                                                          13308000
                                                                        13309000
              IF NEWBUF[0] !3 THEN ENTERINDEX;                          13310000
                                                                        13311000
                                                                        13312000
COMMENT NEWBUF[0] = 3 MEANS DOCUMENT CONTROLS XREF;                     13313000
              PAGEONE ~ FALSE;                                          13314000
              I~I+1; J~J+1;                                             13315000
              GO TO MORE;                                               13316000
NEWVOL:                                                                 13324000
              PAGEONE~TRUE;                                             13325000
              IF TITLETOG THEN                                          13326000
              READ (NEWDOC[NDR[J-2,3] +1],15,DOCTITLE[*]) [EOF];        13327000
              PRINTCHANGES ;                                            13328000
              WRINDEX ;                                                 13329000
              INXPOINT ~ CHGPOINT  ~ 0;                                 13330000
              IF NDR[J,0] = 5 THEN J~J+1;                               13331000
              IF ODR[I,0] = 5 THEN I~I+1;                               13332000
              VOL1 ~ NDR[J,6] ;                                         13333000
              IJUNK ~I; KJUNK ~ J;                                      13334000
              IF I < LASTOLD THEN                                       13335000
              WHILE ODR[IJUNK,0] ! 5 DO IF IJUNK < LASTOLD THEN         13336000
                 IJUNK~IJUNK+1 ELSE
    BEGIN
             DOCERROR(20); GO TO FINI2;
    END ;                                                               13336000
              IF J <LASTNEW THEN                                        13337000
              WHILE NDR[KJUNK,0] ! 5 DO IF KJUNK < LASTNEW THEN         13338000
                 KJUNK ~ KJUNK+1 ELSE
     BEGIN DOCERROR(20); GO TO FINI2;
      END ;                                                             13338000
              DOCPATCHED ~ (NDR[KJUNK,1] = 1) ;                         13339000
              DOCREV ~ IF DOCPATCHED THEN ODR[IJUNK,2] +1 ELSE          13340000
                       ODR[IJUNK,2] ;                                   13341000
              NDR[KJUNK,2] ~ DOCREV;                                    13342000
              GO TO MORE;                                               13343000
PRINTPLACE:                                                             13344000
              IF NOT PRINTALLTOG THEN                                   13345000
         BEGIN                                                          13346000
              KJUNK ~ IF OLDONLYTOG THEN LASTOLD ELSE LASTNEW;          13347000
              FOR I ~ 2 STEP 1 UNTIL KJUNK DO                           13348000
         BEGIN                                                          13349000
              IF OLDONLYTOG THEN MOVEWORDS(ODR[I,0],NEWBUF[0],15) ELSE  13350000
              MOVEWORDS (NDR[I,0],NEWBUF[0],15);                        13351000
              FOR K ~ 1 STEP 1 UNTIL PAGEPOINT DO                       13352000
              IF PAGES[K] = NEWBUF[1] THEN PRINTOUTP;                   13353000
         END;                                                           13354000
         END;                                                           13355000
              IF OLDONLYTOG THEN GO TO STOPSHORT;                       13356000
              HOLDOFFTOG ~ FALSE;                                       13357000
EOF:                                                                    13358000
FINISHUP:                                                               13359000
              IF HOLDOFFTOG THEN GO TO PRINTPLACE;                      13360000
              ZLCOUNTMAX ~ IF SIXLINES THEN 60 ELSE 80;                 13361000
              IF TITLETOG THEN                                          13362000
              READ (NEWDOC[NDR[J-2,3] +1],15,DOCTITLE[*]) [EOF] ;       13363000
              PRINTCHANGES;                                             13364000
              WRINDEX;                                                  13365000
FINI2:                                                                  13366000
              WRITE (NEWDOC[0],FORM1,LOCA,LASTNEW,DOCREV);              13367000
              WRITE (NEWDOC[LOCA +1],15,NDR[1,*]);                      13368000
              FOR I ~ 2 STEP 1 UNTIL LASTNEW DO                         13369000
              WRITE (NEWDOC,15,NDR[I,*]);                               13370000
              REWIND (NEWDOC);                                          13371000
STOPSHORT:                                                              13372000
              IF PRINTALLTOG THEN PRINTBACKUP ;                         13373000
              REWIND (OLDDOC);                                          13374000
              GO TO EOPROG;                                             13375000
         END BLOCK MERGE ;                                              13376000
              IF MAKEMULTOG THEN                                        13377000
         BEGIN                                                          13378000
COMMENT DOCUMENT*  7 * * * * * * * * * * * * * * * * * * * * * * * * *  13379000
BLOCK TO MAKE MULTIFILES.                                               13380000
* SKIP                                                                  13381000
         THIS BLOCK CREATES MULTIFILE TAPE OR DISK FILES USING INPUT    13382000
         FILES DESCRIBED BY DATA CARDS.                                 13383000
* END;                                                                  13384000
ARRAY         A,B[0:15],AA[0:100,0:15] ;                                13385000
ARRAY         ZIPPER[0:15] ;                                            13386000
LABEL         RD,EOF,RDD,EOFF ;                                         13387000
LABEL         LDIF;                                                     13388000
LABEL         LOOP;                                                     13389000
INTEGER       I,J,K,N,SIND,SOUT,SEQ,COUNTLOC;                           13390000
INTEGER       TSIND;                                                    13391000
SWITCH FILE   SWIN~CARD,DISK,TAPE,TAP;                                  13392000
SWITCH FILE   SWOUT ~ PUNCH,NEWDISK,NEWTAPE ;                           13393000
FORMAT        TEMPFORM ("FIRST FILE NAMES NOT THE SAME");               13394000
FILE          BACKUPDIR DISK SERIAL [20:50] "MULFILE" "DIRECT"          13395000
              (1,10,150);                                               13396000
DEFINE        SCON = SCAN; IF FINDCHAR(NCR,"%") THEN ENDCARDA ~ TRUE #; 13397000
COMMENT DOCUMENT* 31* * * * * * * * * * * * * * * * * * * * * * * * *;  13398000
PROCEDURE     BUILDID;                                                  13399000
COMMENT  BUILDS ONE WORD OF FILE ID ;                                   13400000
         BEGIN                                                          13401000
LABEL         LL1,LL2;                                                  13402000
INTEGER       FIDCOUNT;                                                 13403000
              CLEAR(COBACCUM[1],0);                                     13404000
              SETCHAR(COBACCUM [1],0,"0");                              13405000
              FIDCOUNT~ 0;                                              13406000
              IF FINDCHAR(NCR,"%") THEN                                 13407000
         BEGIN                                                          13408000
              ENDCARDA ~ TRUE;                                          13409000
              GO TO LL2;                                                13410000
         END;                                                           13411000
              SCON;                                                     13412000
              IF RESULT = 2 THEN ERROR(31);                             13413000
              IF COUNT > 7 THEN COUNT ~ 7;                              13414000
              MOVECHARS(ACCUM[1],COBACCUM[1],3,1,COUNT);                13415000
COMMENT COBACCUM IS ONLY TEMPORARY BUFFER;                              13416000
              FIDCOUNT ~ COUNT;                                         13417000
LL1:                                                                    13418000
              IF ENDCARDA THEN GO TO LL2;                               13419000
              SCON;                                                     13420000
              IF Q = "1,    " OR Q = "1/    " THEN                      13421000
              GO TO LL2;                                                13422000
              IF FIDCOUNT < 7 THEN                                      13423000
         BEGIN                                                          13424000
              IF COUNT > 7-FIDCOUNT THEN COUNT ~ 7 - FIDCOUNT;          13425000
              MOVECHARS(ACCUM[1],COBACCUM[1],3,FIDCOUNT +1,COUNT);      13426000
              FIDCOUNT ~ FIDCOUNT + COUNT;                              13427000
         END;                                                           13428000
              GO TO LL1;                                                13429000
LL2:                                                                    13430000
         END BUILDID;                                                   13431000
DEFINE        BUILDFILEIDS =                                            13432000
         BEGIN                                                          13433000
              BUILDID; IF Q = "1,    " THEN                             13434000
         BEGIN                                                          13435000
              AA[I,0] ~ 0;                                              13436000
              AA[I,1] ~ COBACCUM[1];                                    13437000
         END ELSE                                                       13438000
              IF Q = "1/    " THEN                                      13439000
         BEGIN                                                          13440000
              AA [I,0] ~ COBACCUM[1];                                   13441000
              BUILDID;                                                  13442000
              IF Q ! "1,    " THEN                                      13443000
         BEGIN                                                          13444000
              ZPL(0,1,GLOBE[*]);                                        13445000
              DOCERROR(39);                                             13446000
              GO TO LOOP;                                               13447000
         END;                                                           13448000
              AA [I,1] ~ COBACCUM[1];                                   13449000
         END ELSE                                                       13450000
         BEGIN                                                          13451000
              ZPL(0,1,GLOBE[*]);                                        13452000
              DOCERROR(37);                                             13453000
              GO TO LOOP;                                               13454000
         END;                                                           13455000
              IF ENDCARDA THEN                                          13456000
         BEGIN                                                          13457000
              ZPL(0,1,GLOBE[*]);                                        13458000
              DOCERROR(37); GO TO LOOP;                                 13459000
         END;                                                           13460000
              BUILDID; IF Q = "1,    " OR ENDCARDA THEN                 13461000
         BEGIN                                                          13462000
              AA[I,2] ~ 0;                                              13463000
              AA[I,3] ~ COBACCUM[1];                                    13464000
         END ELSE                                                       13465000
         BEGIN                                                          13466000
              AA [I,2] ~ COBACCUM[1];                                   13467000
              BUILDID;                                                  13468000
              AA[I,3] ~ COBACCUM[1];                                    13469000
         END;                                                           13470000
         END#;                                                          13471000
              IF DISKINTOG THEN SIND ~ 1 ELSE SIND ~ 2 ;                13472000
              IF DISKOUTOG THEN SOUT ~1 ELSE SOUT ~ 2 ;                 13473000
              TSIND ~ 2 ;                                               13474000
              FILL ZIPPER[*] WITH "CC REMOV","E       ",0,0," ; END ."; 13475000
              CLEAR(A,14) ;                                             13476000
              I ~1;                                                     13477000
            IF DIRTOG THEN                                              13478000
         BEGIN                                                          13479000
              CLEAR(AA[1,0],14);                                        13480000
              FILL AA[1,*] WITH "MULFILE","DIRECT ","0000000","DIRECTO";13481000
            AA[1,6] ~1;                                                 13482000
              ZIPPER[2] ~AA[1,0];                                       13483000
              ZIPPER[3] ~ AA[1,1];                                      13484000
              SETCHAR(ZIPPER[2],0," ");                                 13485000
              SETCHAR(ZIPPER[3],0,"/");                                 13486000
              ZIP WITH ZIPPER[*];                                       13487000
              WRITE (BACKUPDIR,10,AA[1,*]);                             13488000
            I~2;                                                        13489000
         END;                                                           13490000
LOOP:                                                                   13491000
              CLEAR(B[0],14);                                           13492000
              CLEAR(AA[I,0],14);                                        13493000
              READ(CARD,10,GLOBE[*])[EOF];                              13494000
              ENDCARDA ~ FALSE;                                         13495000
              LCR ~ MKABS(GLOBE[W]);  NCR ~ LCR-W;                      13496000
              FIXCOL73(LCR);                                            13497000
              BUILDFILEIDS;                                             13498000
              IF ALLONE THEN                                            13499000
         BEGIN                                                          13500000
              IF DISKINTOG THEN AA[I,6] ~ 1 ELSE AA[I,6] ~2 ;           13501000
         END ELSE                                                       13502000
         BEGIN                                                          13503000
              IF ENDCARDA THEN                                          13504000
         BEGIN                                                          13505000
              ZPL(0,1,GLOBE[*]);                                        13506000
              DOCERROR(38);                                             13507000
              GO TO LOOP;                                               13508000
         END;                                                           13509000
              SCAN;                                                     13510000
              IF Q ="4TAPE " THEN AA[I,6]~2 ELSE                        13511000
              IF Q ="4DISK " OR Q = "4DISC " THEN AA[I,6] ~1 ELSE       13512000
         BEGIN                                                          13513000
              DOCERROR(38);                                             13514000
              GO TO LOOP;                                               13515000
         END;                                                           13516000
         END;                                                           13517000
              FOR K ~ 0,1,2,3 DO SETCHAR(AA[I,K],0,"0") ;               13518000
              IF NOT DISKOUTOG THEN                                     13519000
              IF (DIRTOG AND (AA[2,2] ! AA[I,2]))                       13520000
              OR (NOT DIRTOG AND (AA[1,2] ! AA [I,2])) THEN             13521000
         BEGIN                                                          13522000
              ZPL(0,1,GLOBE[*]);                                        13523000
              DOCERROR(40);                                             13524000
              GO TO LOOP;                                               13525000
         END;                                                           13526000
              IF DIRTOG THEN WRITE (BACKUPDIR,10,AA[I,*]);              13527000
              I~I+1;                                                    13528000
              IF I { 100 THEN GO TO LOOP;                               13529000
EOF:                                                                    13530000
            IF DIRTOG THEN                                              13531000
         BEGIN                                                          13532000
            AA[1,2]~AA[2,2];   %% REPLACE WITH MOVECHARS                13533000
              WRITE (BACKUPDIR[0],10,AA[1,*]);                          13534000
         END;                                                           13535000
              N ~ I - 1 ;                                               13536000
              LOCK (BACKUPDIR,SAVE);                                    13537000
              CLOSE (CARD,RELEASE) ;                                    13538000
              FOR I ~1 STEP 1 UNTIL N DO                                13539000
         BEGIN                                                          13540000
              IF AA[I,0] = 0 AND AA[I,1] =0 THEN J ~ 0 ELSE             13541000
         BEGIN                                                          13542000
              IF DEBUG THEN WRITE(LINE[DBL],15,AA[I,*]);                13543000
              IF SIND > 1 THEN CLOSE(SWIN[SIND],RELEASE) ;              13544000
              SIND ~ IF AA[I,6] = 2 THEN TSIND ELSE                     13545000
                 AA[I,6];                                               13546000
              J ~ SIND ; FILL SWIN[J] WITH AA[I,0],AA[I,1] ;            13547000
         END ;                                                          13548000
              FILL SWOUT[SOUT] WITH AA[I,2],AA[I,3] ;                   13549000
              SEQ ~COUNT ~ 0 ;                                          13550000
              IF DISKOUTOG THEN                                         13551000
         BEGIN                                                          13552000
              ZIPPER[2] ~ AA[I,2] ; ZIPPER[3] ~ AA[I,3] ;               13553000
              SETCHAR(ZIPPER[2],0," ");                                 13554000
              SETCHAR(ZIPPER[3],0,"/");                                 13555000
              ZIP WITH ZIPPER[*] ;                                      13556000
         END ;                                                          13557000
              IF LISTOG THEN WRITE(LINE[PAGE]);                         13558000
      DO BEGIN                                                          13559000
              READ(SWIN[J],10,A[*])[EOFF] ;                             13560000
              SEQ~ SEQ +1000; COUNTLOC ~ COUNTLOC +1;                   13561000
              IF J = 0 THEN OCTTODEC(SEQ,A[9]) ;                        13562000
              IF LISTOG THEN WRITE(LINE[DBL],15,A[*]) ;                 13563000
              WRITE(SWOUT[SOUT],10,A[*]);                               13564000
         END UNTIL FALSE ;                                              13565000
EOFF:                                                                   13566000
              OCTTODEC(COUNTLOC,AA[I,5]);                               13567000
              IF PUNCHTOG THEN                                          13568000
         BEGIN                                                          13569000
              CLEAR(B,14) ;                                             13570000
              B[0] ~ AA[I,2] ; B[1] ~ AA[I,3] ;                         13571000
              B[2] ~ AA[I,2] ; B[3] ~ AA[I,3] ;                         13572000
              B[5] ~ AA[I,5] ;                                          13573000
              WRITE(PUNCH,10,B[*]) ;                                    13574000
         END ;                                                          13575000
LDIF:                                                                   13576000
              CLOSE(SWIN[J],*);                                         13577000
              IF SIND >1 THEN                                           13578000
              TSIND ~ IF SIND = 2 THEN 3 ELSE 2;                        13579000
              SIND ~ IF SIND = 2 THEN 3 ELSE 2 ;                        13580000
              IF SOUT = 1 THEN LOCK(NEWDISK,RELEASE) ELSE               13581000
                      CLOSE(NEWTAPE,*);                                 13582000
         END ;                                                          13583000
              WRITE(LINE[PAGE]) ;                                       13584000
              FOR I ~ 1 STEP 1 UNTIL N DO                               13585000
         BEGIN                                                          13586000
              FOR K ~ 0,1,2,3 DO SETCHAR(AA[I,K],0," ") ;               13587000
              WRITE(LINE[DBL],15,AA[I,*]) ;                             13588000
         END ;                                                          13589000
              GO TO EOPROG;                                             13590000
         END;                                                           13591000
              IF PROCPUNCH THEN                                         13592000
         BEGIN                                                          13593000
BOOLEAN       STREAMTOG ;                                               13594000
LABEL         MORE ;                                                    13595000
MORE:         SCAN ;                                                    13596000
              Q ~ Q ;                                                   13597000
              IF Q = "7COMME" THEN                                      13598000
         BEGIN                                                          13599000
              DO SCAN UNTIL SEMICOLON ; GO TO MORE ;                    13600000
         END ;                                                          13601000
              IF Q = "6STREA" THEN                                      13602000
         BEGIN                                                          13603000
              STREAMTOG ~TRUE ; GO TO MORE ;                            13604000
         END ;                                                          13605000
              IF Q = "9PROCE" THEN                                      13606000
         BEGIN                                                          13607000
ARRAY         TEMP[0:15] ;                                              13608000
INTEGER       I ;                                                       13609000
FORMAT        F1("$ TAPE LIST %") , F2("$ TAPE     %") ;                13610000
              IF STREAMTOG THEN                                         13611000
         BEGIN                                                          13612000
              STREAMTOG ~ FALSE ; GO TO MORE ;                          13613000
         END ;                                                          13614000
              WRITE(TEMP[*],F1) ;                                       13615000
              MOVEWORDS(GLOBE,TEMP[2],8) ;                              13616000
              I ~ ISEQ - 100 ; OCTTODEC(I,TEMP[9]) ;                    13617000
              WRITE(PNCH,10,TEMP[*]) ;                                  13618000
              WRITE(TEMP[*],F2) ;                                       13619000
              MOVEWORDS(GLOBE,TEMP[2],8) ;                              13620000
              I ~ ISEQ - 100 ; OCTTODEC(I,TEMP[9]) ;                    13621000
              WRITE(PNCH,10,TEMP[*]) ;                                  13622000
         END ;                                                          13623000
              GO TO MORE ;                                              13624000
         END ;                                                          13625000
              IF SORTOG THEN                                            13626000
         BEGIN                                                          13627000
LABEL         ID,NBG ;                                                  13628000
SWITCH SWRES ~ ID,NBG,ID,NBG,ID,NBG,NBG ;                               13629000
NBG:          SCAN ;                                                    13630000
              GO TO SWRES[RESULT] ;                                     13631000
ID:           IF SORTSCRAMBLE THEN BUILDXREF ;                          13632000
              GO TO NBG ;                                               13633000
         END ;                                                          13634000
              IF BUILDTOG THEN                                          13635000
         BEGIN                                                          13636000
              RESTYPE ~ 0 ;                                             13637000
              FOR IJUNK ~ 0 STEP 1 UNTIL 250 DO RESERVED[IJUNK] ~ 0 ;   13638000
              FOR IJUNK ~ 0 STEP 1 UNTIL 63 DO RESTACK[IJUNK] ~ 0 ;     13639000
MOREBUILD:    SCAN ;                                                    13640000
              IF RESULT = 3 THEN DTOCT(ACCUM[1],3,BRESTYPE,COUNT) ;     13641000
              IF RESULT = 1 THEN                                        13642000
         BEGIN                                                          13643000
              IF EXAMINE(NCR) ="-" THEN BUILDCOBID ;                    13644000
              IF NOT SEARCHRESERVED THEN BUILDRESERVED ;                13645000
         END ;                                                          13646000
              GO TO MOREBUILD ;                                         13647000
         END ;                                                          13648000
              IF NOT (COBOLTOG OR ASMLTOG OR ESPOLTOG OR BPLTOG )       13649000
               THEN IF NOT FORTRTOG                                     13650000
              THEN IF NOT SIMULATOG                                     13651000
                 THEN FILLALGOL;                                        13652000
              IF ASMLTOG THEN                                           13653000
      DO BEGIN                                                          13654000
              LABC ~ GLOBE[6];                                          13655000
              FOR I ~ 1 STEP 1 UNTIL LABC DO                            13656000
              IF GLOBE[I].[12:36] ! "      " THEN                       13657000
         BEGIN                                                          13658000
              MOVECHARS(GLOBE[I],ACCUM[1],2,3,6);                       13659000
              SETCHAR(ACCUM[1],2,"6") ; COUNT ~ 6 ;                     13660000
              Q ~ ACCUM[1];                                             13661000
              LABELUSE ~ GLOBE[I] < 0;                                  13662000
              IF RESERVEDTOG OR NOT SEARCHRESERVED THEN                 13663000
              IF SORTSCRAMBLE THEN BUILDXREF ;                          13664000
         END ;                                                          13665000
              READATAPE ;                                               13666000
         END UNTIL FALSE ;                                              13667000
              IF COBOLTOG THEN                                          13668000
         BEGIN                                                          13669000
LABEL         MORE ;                                                    13670000
LABEL         NEXT ;                                                    13671000
DEFINE        PICTURE = Q= "2PC   " OR Q = "3PCT  " OR Q = "7PICTU" #,  13672000
              FINDELIM =SCAN; DO BEGIN IF Q.[18:6]="Z" THEN             13673000
              SCAN; SCAN; IF Q ="2IS   " THEN                           13674000
               SCAN ; IF Q .[18:6] = "Z" THEN                           13675000
         BEGIN   SCAN; SCAN; END;                                       13676000
              END UNTIL Q = "1.    " OR EXAMINE(NCR)=" "; #;            13677000
BOOLEAN       DATADIVFLAG ;                                             13678000
   DO BEGIN                                                             13678100
         DO SCAN UNTIL Q ="4DATA "; SCAN;
      END UNTIL Q ="8DIVIS";
         DATADIVFLAG ~ TRUE ;                                           13678100
      DO BEGIN                                                          13679000
                                                                        13680000
MORE:         SCAN ;                                                    13681000
         IF PERCENT THEN        IF NOT DATADIVFLAG THEN                 13681100
    BEGIN
         SCAN ; IF CNBLANK(GLOBE[0],7,1) THEN
    BEGIN
         BUILDCOBID ;
         LABELUSE~TRUE;
         IF SORTSCRAMBLE THEN BUILDXREF ;
         LABELUSE ~FALSE;
         GO TO MORE ;
    END ;
    END ;                                                               13681100
NEXT:                                                                   13682000
              IF NOT IDENTIFIER THEN IF RESULT ! 3 THEN GO TO MORE      13683000
              ELSE IF DATADIVFLAG THEN                                  13684000
                 IF NOTCOBIDPART(NCR) THEN GO TO MORE ;                 13685000
              BUILDCOBID ;                                              13686000
              IF RESERVEDTOG OR NOT SEARCHRESERVED THEN                 13687000
              IF SORTSCRAMBLE THEN BUILDXREF ;                          13688000
              IF PICTURE THEN                                           13689000
         BEGIN                                                          13690000
              FINDELIM ;                                                13691000
              GO TO MORE ;                                              13692000
         END ;                                                          13693000
              IF Q = "9PROCE" THEN                                      13694000
         BEGIN                                                          13695000
              SCAN ;                                                    13696000
              IF Q = "8DIVIS" THEN DATADIVFLAG ~ FALSE ;                13697000
              GO TO NEXT ;                                              13698000
         END ;                                                          13699000
              GO TO MORE ;                                              13706000
         END UNTIL FALSE ;                                              13707000
         END ;                                                          13708000
               IF LOGICTOG THEN                                         13709000
         BEGIN                                                          13710000
LABEL          EOF ;                                                    13711000
               DO                                                       13712000
         BEGIN                                                          13713000
               READ(BUSTED,19,GLOBE[*])[EOF] ;                          13714000
              BSTICKFLAG ~ GLOBE[2].[42:6] = "B" ;                      13715000
               MOVECHARS(GLOBE[17],ACCUM[1],5,3,3) ;                    13716000
               MOVECHARS(GLOBE[18],ACCUM[1],2,6,6) ;                    13717000
               COUNT ~ 9 ; OCTTODEC(GLOBE[0],SEQ) ; Q ~ ACCUM[1] ;      13718000
              ACCUM[1].[12:6] ~ COUNT ;                                 13719000
               IF SORTSCRAMBLE THEN BUILDXREF ;                         13720000
         END UNTIL FALSE ;                                              13721000
EOF:          REWIND(BUSTED) ; PRINTNAMES ; PRINTXREF ;                 13722000
               GO TO EOPROG ;                                           13723000
         END ;                                                          13724000
              IF DOCTOG THEN                                            13725000
         BEGIN                                                          13726000
              PRINTDOCUMENT ;                                           13727000
              DO READ(CARDS,10,GLOBE[*])[EOFCARD] UNTIL FALSE ;         13728000
         END ;                                                          13729000
         BEGIN                                                          13730000
INTEGER       BLOCKEXTENDER ;                                           13731000
LABEL         RESCAN,NEXT,IDENTL,MOREFILL,SCRAML,MORCOM,SPCHARL,STRINGL;13732000
LABEL         SCRAMLOVER;                                               13733000
RESCAN:       NEWCARD ~ FALSE;                                          13734000
              SCAN;                                                     13735000
NEXT:                                                                   13736000
              IF RESULT = 1 THEN GO TO IDENTL;                          13737000
              IF NUMONLYTOG OR NUMBERTOG THEN                           13738000
              IF RESULT = 3 THEN GO TO IDENTL ;                         13739000
              IF RESULT = 5 THEN                                        13740000
         BEGIN                                                          13741000
              IF STRINGTOG THEN IF COUNT { STLENGTH THEN                13742000
              IF SORTSCRAMBLE THEN BUILDXREF; GO TO RESCAN;             13743000
         END;                                                           13744000
              IF RESULT = 3 THEN TALLIES[Q.[18:6]]~TALLIES[Q.[18:6]]+1; 13745000
              IF PERCENT THEN IF FORTRTOG THEN                          13746000
         BEGIN                                                          13747000
              SCAN; IF RESULT ! 3 THEN GO TO NEXT ;                     13748000
              IF CNBLANK(GLOBE[0],0,5) THEN                             13749000
         BEGIN                                                          13750000
              LABELUSE ~ TRUE;                                          13751000
              IF SORTSCRAMBLE THEN BUILDXREF;                           13752000
              LABELUSE ~ FALSE;                                         13753000
              GO TO RESCAN;                                             13754000
         END ;                                                          13755000
              TALLIES [Q.[18:6]]~TALLIES[Q.[18:6]] +1;                  13756000
         END ;                                                          13757000
              GO TO RESCAN ;                                            13758000
IDENTL:                                                                 13759000
              IF NOT (RESFLAG ~ SEARCHRESERVED) THEN GO TO SCRAML;      13760000
              IF RESTYPE = PROCEDUREV THEN GO TO SCRAML;                13761000
              IF RESTYPE = COMMENTV THEN                                13762000
         BEGIN COMMENT SET QUOTETOG TO SHOW SCAN NOT TO JUMP OUT ON     13763000
              PERCENT ;                                                 13764000
              QUOTETOG~TRUE;                                            13765000
              IF NOT COMMENTOG THEN                                     13766000
         BEGIN                                                          13767000
              FINDSEMICOLON ; GO TO RESCAN ;                            13768000
         END ;                                                          13769000
         END ;                                                          13770000
              IF FORTRTOG THEN                                          13771000
         BEGIN                                                          13772000
              IF RESERVEDTOG THEN IF SORTSCRAMBLE THEN BUILDXREF;       13773000
              IF RESTYPE = GOTOV OR RESTYPE = ASSIGNV THEN              13774000
         BEGIN                                                          13775000
              NEWCARD ~ FALSE; SCAN ;                                   13776000
              IF Q = "2TO   " THEN IF NOT RESERVEDTOG THEN SCAN ;       13777000
              WHILE NOT NEWCARD DO                                      13778000
         BEGIN                                                          13779000
              IF RESULT = 1 OR RESULT = 3 THEN                          13780000
              IF SORTSCRAMBLE THEN BUILDXREF;                           13781000
              SCAN ;                                                    13782000
         END ;                                                          13783000
              GO TO NEXT ;                                              13784000
         END ;                                                          13785000
              IF RESTYPE = DOV THEN                                     13786000
         BEGIN                                                          13787000
              NEWCARD ~ FALSE ; SCAN ;                                  13788000
              IF RESULT = 3 THEN IF SORTSCRAMBLE THEN BUILDXREF ;       13789000
              GO TO RESCAN ;                                            13790000
         END ;                                                          13791000
              IF RESTYPE  = IFV THEN                                    13792000
         BEGIN                                                          13793000
      DO BEGIN                                                          13794000
              NEWCARD ~ FALSE ; SCAN ;                                  13795000
              IF RESULT = 1 THEN IF SORTSCRAMBLE THEN BUILDXREF ;       13796000
              IF RESULT = 5 THEN IF STRINGTOG THEN                      13797000
              IF COUNT{STLENGTH THEN IF SORTSCRAMBLE THEN BUILDXREF;    13798000
         END UNTIL Q = "1)    ";                                        13799000
              NEWCARD ~ FALSE; SCAN ;                                   13800000
              IF RESULT ! 3 THEN GO TO NEXT ;                           13801000
              WHILE NOT NEWCARD DO                                      13802000
         BEGIN                                                          13803000
              IF RESULT = 3 THEN IF SORTSCRAMBLE THEN BUILDXREF;        13804000
              SCAN;                                                     13805000
         END ;                                                          13806000
         END ;                                                          13807000
              GO TO RESCAN ;                                            13808000
         END ;                                                          13809000
              IF Q = "4WITH " THEN                                      13810000
         BEGIN                                                          13811000
              DO                                                        13812000
         BEGIN                                                          13813000
MOREFILL:                                                               13814000
              SCAN ; IF RESULT = 5 THEN GO TO MOREFILL ;                13815000
              IF Q = "7COMME" THEN                                      13816000
              IF (RESFLAG ~ SEARCHRESERVED) THEN                        13817000
              IF RESTYPE = COMMENTV THEN                                13818000
         BEGIN                                                          13819000
              QUOTETOG~TRUE;                                            13820000
              FINDSEMICOLON ; GO TO MOREFILL ;                          13821000
         END ;                                                          13822000
         END UNTIL SEMICOLON OR Q = "3END  " OR Q = "5UNTIL" OR         13823000
              (SIMULATOG AND(Q="4WHEN " OR Q="9OTHER")) OR              13824000
                   Q = "4ELSE " ;                                       13825000
              IF SEMICOLON THEN GO TO RESCAN ;                          13826000
         END ;                                                          13827000
              IF STREAMBODY THEN GO TO SCRAMLOVER;                      13828000
              IF RESTYPE < 900 THEN GO TO SCRAMLOVER;                   13829000
SCRAML:                                                                 13830000
              IF SORTSCRAMBLE THEN BUILDXREF;                           13831000
SCRAMLOVER:                                                             13832000
              IF RESTYPE = STREAMV THEN                                 13833000
         BEGIN                                                          13834000
              STREAMTOG ~ STREAMBODY ~TRUE ;                            13835000
              STREAMBEGCOUNT ~ BEGINDEX ;                               13836000
         END ;                                                          13837000
              IF Q = "5BEGIN" THEN IF LISTOG THEN BEGINCOUNT            13838000
               ELSE BEGINDEX ~ BEGINDEX +1;                             13839000
              IF NOT FORTRTOG THEN                                      13840000
              IF Q = "3END  " THEN IF LISTOG THEN ENDCOUNT ELSE         13841000
         BEGIN                                                          13842000
              BEGINDEX~BEGINDEX-1;                                      13843000
              IF BEGINDEX = STREAMBEGCOUNT THEN STREAMBODY ~ FALSE;     13844000
         END;                                                           13845000
              IF BLOCKTOG THEN                                          13846000
         BEGIN                                                          13847000
              IF Q = "5BEGIN" THEN                                      13848000
         BEGIN                                                          13849000
              BPOINT ~ BPOINT + BINDENT ;                               13850000
              IJUNK ~ BPOINT MOD 8 ;                                    13851000
              MOVECHARS(ACCUM[1],BLOCKBUFFER[BPOINT DIV 8] ,            13852000
                   3,IJUNK,5) ;                                         13853000
              MOVEWORDS(SEQ,BLOCKBUFFER[0],1) ;                         13854000
              ZPL(ZF,1,BLOCKBUFFER) ;                                   13855000
              CLEARCHAR(BLOCKBUFFER[BPOINT DIV 8],IJUNK,5) ;            13856000
              SETCHAR(BLOCKBUFFER[BPOINT DIV 8],IJUNK,".") ;            13857000
              CLEAR(BLOCKBUFFER,0) ;                                    13858000
              ZPL(ZF,1,BLOCKBUFFER) ;                                   13859000
         END ELSE                                                       13860000
              IF Q = "3END  " THEN                                      13861000
         BEGIN                                                          13862000
              IJUNK ~ BPOINT MOD 8 ;                                    13863000
              MOVECHARS(ACCUM[1],BLOCKBUFFER[BPOINT DIV 8],             13864000
                   3,IJUNK,3) ;                                         13865000
              MOVEWORDS(SEQ,BLOCKBUFFER[0],1) ;                         13866000
              ZPL(ZF,1,BLOCKBUFFER) ;                                   13867000
              CLEARCHAR(BLOCKBUFFER[BPOINT DIV 8],IJUNK,3) ;            13868000
              CLEAR(BLOCKBUFFER,0) ;                                    13869000
              ZPL(ZF,1,BLOCKBUFFER) ;                                   13870000
              BPOINT ~ BPOINT - BINDENT ;                               13871000
         END ELSE                                                       13872000
              IF PROCBLKFLAG THEN                                       13873000
         BEGIN                                                          13874000
ARRAY         PROCEDURENAME[0:1] ;                                      13875000
INTEGER       T1,T2 ;                                                   13876000
              FILL PROCEDURENAME[*] WITH OCT6263512521446047 ,          13877000
                                         OCT5146232524645125 ;          13878000
              PROCBLKFLAG ~ FALSE ;                                     13879000
              IJUNK ~ (BPOINT + BINDENT) MOD 8 ;                        13880000
              IF STREAMTOG THEN                                         13881000
         BEGIN                                                          13882000
              T1 ~ 0 ; T2 ~ 16 ; STREAMTOG ~ FALSE ;                    13883000
         END ELSE                                                       13884000
         BEGIN                                                          13885000
              T1 ~ 7 ; T2 ~ 9 ;                                         13886000
         END ;                                                          13887000
              MOVECHARS(PROCEDURENAME,BLOCKBUFFER[(BPOINT + BINDENT)    13888000
                   DIV 8],T1,IJUNK,T2) ;                                13889000
              IJUNK ~ (BPOINT + T2 + BINDENT + 2) MOD 8 ;               13890000
              MOVECHARS(ACCUM[1],BLOCKBUFFER[(BPOINT + T2 + BINDENT+2)  13891000
                       DIV 8],3,IJUNK,COUNT) ;                          13892000
              MOVEWORDS(SEQ,BLOCKBUFFER[0],1) ;                         13893000
              ZPL(ZF,1,BLOCKBUFFER) ;                                   13894000
              CLEARCHAR(BLOCKBUFFER[(BPOINT+T2+BINDENT+2) DIV 8],       13895000
                   IJUNK,COUNT) ;                                       13896000
              IJUNK ~ (BPOINT + BINDENT) MOD 8 ;                        13897000
              CLEARCHAR(BLOCKBUFFER[(BPOINT+BINDENT ) DIV 8],IJUNK,T2) ;13898000
              CLEAR(BLOCKBUFFER,0) ;                                    13899000
              ZPL(ZF,1,BLOCKBUFFER) ;                                   13900000
         END ;                                                          13901000
         END ;                                                          13902000
              IF NOT FORTRTOG THEN                                      13903000
              IF Q = "3END  "THEN                                       13904000
         BEGIN                                                          13905000
MORCOM:                                                                 13906000
              SCAN ; IF SEMICOLON THEN GO TO RESCAN ;                   13907000
              IF COMMENTOG OR BNFTOG OR RESERVEDTOG OR SORTOG           13908000
                 THEN GO TO NEXT ;                                      13909000
              IF Q = "3END  " OR Q = "4ELSE " OR Q = "5UNTIL" OR        13910000
              (SIMULATOG AND(Q="4WHEN " OR Q="9OTHER")) OR              13911000
                  Q = "1#    " THEN                                     13912000
              GO TO NEXT ELSE GO TO MORCOM ;                            13913000
         END ;                                                          13914000
              GO TO RESCAN ;                                            13915000
         END ;                                                          13916000
EOF:                                                                    13917000
EOFCARD:                                                                13918000
              TABLEUPPERBOUND ~ PP ;                                    13919000
              IF SHUFFLETOG THEN                                        13920000
         BEGIN                                                          13921000
COMMENT DOCUMENT* SKIP 10 INDEX UNDERLINE INDENT 1 * * * * * * * * *    13922000
BLOCK TO SHUFFLE FILES.                                                 13923000
         THIS BLOCK READS DATA CARDS AND MOVES THE REQUESTED SECTIONS   13924000
         FROM THE SOURCE FILE TO THE NEW SOURCE FILE.                   13925000
* END ;                                                                 13926000
COMMENT DOCUMENT* SKIP CODE 2 * * * * * * * * * * * * * * * * * * * * ; 13927000
COMMENT  DATA CARDS ARE OF THE FORM OLD START,OLD FINISH, NEW START,    13928000
         INCREMENT ;                                                    13929000
INTEGER       MIN,MAX,NEW,SEQ,INC,POSSEQ ;                              13930000
BOOLEAN       NORESEQ ;                                                 13931000
LABEL         EOF,EOFT1,EOFT2,RD,MORE,RDD,CONT ;                        13932000
ARRAY         A[0:15] ;                                                 13933000
LIST          LDATA(MIN,MAX,NEWSEQ+SEQINC,SEQINC) ;                     13934000
LIST         LLDATA(MIN,MAX,NEW,INC) ;                                  13935000
FORMAT        FDATA(10("*****")/                                        13936000
                    "MIN",I8,"  MAX",I8,"  NEW",I8,"  INC",I8  ,        13937000
                   /10("*****")/) ;                                     13938000
DEFINE        OUTPUT =                                                  13939000
              NEWSEQ ~ NEWSEQ + SEQINC ;                                13940000
              MOVEWORDS(A[9],A[12],1) ;                                 13941000
              OCTTODEC(NEWSEQ,A[9]) ;                                   13942000
              IF BLANKNEWSEQ THEN CLEAR(A[9],0) ;                       13943000
              IF NORESEQ THEN                                           13944000
         BEGIN                                                          13945000
              MOVEWORDS(A[12],A[9],1);                                  13946000
              CLEAR(A[12],0) ;                                          13947000
         END ;                                                          13948000
              IF LISTOG THEN WRITE(LINE[DBL],15,A[*]) ;                 13949000
              IF NOT PUNCHTOG THEN                                      13950000
              IF NEWTOG THEN WRITE(SWOUT  ,10,A[*]) ;                   13951000
              IF PUNCHTOG THEN WRITE(PNCH,10,A[*]) # ;                  13952000
              CLEAR(A,14) ;                                             13953000
RDD:          POSSEQ ~ 0 ; REWIND(SWIN) ;                               13954000
RD:           READ(CARD[NO],10,A[*])[EOF] ;                             13955000
              IF NOT BLANKTEST(A,9) THEN                                13956000
         BEGIN                                                          13957000
              READ(CARD,10,A[*]) ; GO TO RD ;                           13958000
         END ;                                                          13959000
              IF CHECKDOLLAR(A) THEN                                    13960000
         BEGIN                                                          13961000
              IF BLANKNEWSEQ THEN OUTPUT ELSE                           13962000
         BEGIN                                                          13963000
              BLANKNEWSEQ ~ TRUE ; OUTPUT ;                             13964000
              BLANKNEWSEQ ~ FALSE ;                                     13965000
         END ;                                                          13966000
              WRITE(LINE[DBL],15,A[*]) ;                                13967000
              READ(CARD,10,A[*]) ;                                      13968000
              GO TO RD ;                                                13969000
         END ;                                                          13970000
              READ(CARD,/,LLDATA) ;                                     13971000
              IF MIN = 99999999 THEN GO TO EOPROG ;                     13972000
              NORESEQ ~ (NEW=0) AND (INC=0) AND                         13973000
                 ((NOT RESEQTOG)) ;                                     13974000
              IF RESEQTOG THEN GO TO CONT ;                             13975000
              IF NEW { NEWSEQ THEN DOCERROR(26) ;                       13976000
              NEWSEQ ~ NEW - INC ;                                      13977000
              SEQINC ~ INC ;                                            13978000
CONT:         WRITE(LINE,FDATA,LDATA) ;                                 13979000
              IF MIN < POSSEQ THEN                                      13980000
         BEGIN                                                          13981000
      DO BEGIN                                                          13982000
              READ REVERSE(SWIN,10,A[*])[EOFT1] ;                       13983000
              DECTOOCT(A[9],POSSEQ) ;                                   13984000
         END UNTIL POSSEQ { MIN ;                                       13985000
              IF POSSEQ < MIN THEN                                      13986000
         BEGIN                                                          13987000
              DOCERROR(25) ; GO TO RD ;                                 13988000
         END ;                                                          13989000
         END ELSE                                                       13990000
              IF MIN > POSSEQ THEN                                      13991000
         BEGIN                                                          13992000
      DO BEGIN                                                          13993000
              READ(SWIN,10,A[*])[EOFT1] ;                               13994000
              DECTOOCT(A[9],POSSEQ) ;                                   13995000
         END UNTIL POSSEQ } MIN ;                                       13996000
              IF POSSEQ > MIN THEN                                      13997000
         BEGIN                                                          13998000
              DOCERROR(25) ; GO TO RD ;                                 13999000
         END ;                                                          14000000
              OUTPUT ;                                                  14001000
         END ;                                                          14002000
MORE:         READ(SWIN,10,A[*]) [EOFT2] ;                              14003000
              DECTOOCT(A[9],POSSEQ) ;                                   14004000
              IF POSSEQ > MAX THEN                                      14005000
         BEGIN                                                          14006000
              DOCERROR(25) ; GO TO RD ;                                 14007000
         END ;                                                          14008000
              OUTPUT ;                                                  14009000
              IF POSSEQ = MAX THEN GO TO RD ;                           14010000
              GO TO MORE ;                                              14011000
EOFT1:        DOCERROR(25) ; GO TO RDD;                                 14012000
EOFT2:        DOCERROR(25) ; GO TO RDD;                                 14013000
EOF:                                                                    14014000
              CLOSE(SWIN,RELEASE) ;                                     14015000
              LOCK(SWOUT,RELEASE) ;                                     14016000
              GO TO EOPROG ;                                            14017000
         END ;                                                          14018000
         BEGIN INTEGER BLOCKEXTENDER;  LABEL BMONJ;                     14018100
              CLOSE(CARDS,RELEASE) ;                                    14019000
              CARDSOPEN ~ FALSE ;                                       14020000
              IF TAPETOG THEN CLOSE(SWIN,RELEASE) ;                     14021000
              IF PUNCHTOG THEN CLOSE(NEWPUNCH[PUNCHSW],RELEASE) ;       14022000
              IF BIGTOG THEN                                            14023000
         BEGIN                                                          14024000
              REWIND(XREFILE) ;                                         14025000
              SORTITONDISK ;                                            14026000
         END ;                                                          14027000
              IF PBACKONLY THEN                                         14028000
         BEGIN                                                          14029000
              FOR IJUNK ~ 1 STEP 1 UNTIL NOBACKUPRINTS DO               14030000
              PRINTBACKUP ; GO TO EOPROG ;                              14031000
         END ;                                                          14032000
              IF BUILDTOG THEN                                          14033000
         BEGIN                                                          14034000
              PUNCHRESERVEDEFINES ;                                     14035000
              PUNCHRESERVEDFILLSTATEMENTS ; GO TO EOPROG ;              14036000
         END ;                                                          14037000
     IF DOCTOG THEN                                                     14038000
        BEGIN                                                           14039000
          IF  DOCUMENTFOUND THEN UJUNK~2 ELSE  BEGIN UJUNK~ 1 ;         14040000
                                                GO TO BMONJ;  END;      14041000
          IF CONTOG THEN GO TO BMONJ;                                   14042000
              IF DOCER ! 0 THEN                                         14043000
         BEGIN                                                          14044000
              WRITE(LINE[PAGE]);                                        14045000
              DOCERROR(0);                                              14046000
         END;                                                           14047000
          IF NOT QUITOG THEN ERROR (14);                                14048000
          IF BNFTOG THEN PRINTNAMES                                     14049000
          ELSE BEGIN INTEGER BLOCKEXTENDER;END;                         14050000
              IF NOT FINALDOCTOG OR DOCINDEXTOG THEN PRINTXREF;         14051000
        END;                                                            14052000
     IF FLOWTOG THEN                                                    14053000
        BEGIN                                                           14054000
              IF FLOWFOUND THEN UJUNK ~3 ELSE BEGIN UJUNK ~4;           14055000
                                           GO TO BMONJ; END;            14056000
          IF FERR ! 0 THEN  FLOWERROR (20+FERR);                        14057000
              NLINES ~0;                                                14058000
              ZNOSKIP ~ FALSE;                                          14059000
              PAGETOG ~ TRUE;                                           14060000
          PRINTXREF;                                                    14061000
              NEWVOL ~ TRUE ;                                           14062000
              ZPG(ZF) ;                                                 14063000
        END;                                                            14064000
     IF BLOCKTOG THEN                                                   14065000
        BEGIN                                                           14066000
          PRINTPROCEDUREIDS;                                            14067000
          PRINTXREF;                                                    14068000
     END;                                                               14069000
              IF NEWTOG THEN                                            14070000
              IF NEWMULTITOG THEN CLOSE(SWOUT,*) ELSE LOCK(SWOUT,       14071000
                      RELEASE) ;                                        14072000
              IF NEWMULTITOG THEN GO TO CONTINUE ;                      14073000
     IF BMON THEN GO TO BMONJ;                                          14074000
              IF NOT SORTOG THEN                                        14075000
              IF NOT NAMETOG THEN                                       14076000
     IF (NOT COUNTOG) AND (NOPROC ! 0) THEN                             14077000
                  PRINTPROCEDUREIDS ;                                   14078000
     IF NOT COUNTOG THEN PRINTXREF;                                     14079000
              PRINTNAMES;                                               14080000
BMONJ:                                                                  14081000
              IF BMON AND UPDATETOG THEN                                14082000
         BEGIN                                                          14083000
LABEL RD,EOF;                                                           14084000
              REWIND (BACKUPDIR);                                       14085000
              WRITE (BACKUP,ENDMARKER);                                 14086000
              IJUNK ~ BKDIRCOUNT;                                       14087000
RD:           READ (BACKUPDIR,15,GLOBE[*]) [EOF];                       14088000
              WRITE (BACKUP,15,GLOBE[*]);                               14089000
              IJUNK~ IJUNK-1;                                           14090000
              IF IJUNK > 0 THEN GO TO RD;                               14091000
EOF:          REWIND (BACKUP);                                          14092000
              WRITE (BACKUP,HEADFORM,BKRCRDCOUNT,BKDIRCOUNT,1);         14093000
         END;                                                           14094000
     IF AUTOPRINT THEN PRINTBACKUP;                                     14095000
              IF SAVEBACKUPTOG THEN LOCK (BACKUP,RELEASE)               14096000
              ELSE CLOSE (BACKUP,PURGE);                                14097000
     IF FLOWTOG OR DOCTOG THEN                                          14098000
     BEGIN                                                              14099000
     SPOMESS [UJUNK, 3] ~ "      ";                                     14100000
     IF CASTOG THEN                                                     14101000
        BEGIN                                                           14102000
          HEADPOINT ~ 0;                                                14103000
          MOVECHARS (HEADING[0],SPOMESS [UJUNK,3],0,2,6);               14104000
        END;                                                            14105000
              WRITE(SPOOUT,6,SPOMESS[UJUNK,*]);                         14106000
     END;                                                               14107000
         END ;                                                          14107100
CONTINUE:                                                               14108000
              IF ALLTOG THEN                                            14109000
         BEGIN                                                          14110000
INTEGER         BLOCKEXTENDER;                                          14111000
              HEADPOINT ~ 0 ; CLEAR(HEADING,14) ;                       14112000
              FCASTINDEX ~ JUNK ~ FCASTINDEX  + 1 ;                     14113000
              IF FCASTINDEX > LCASTINDEX THEN GO TO EOPROG ;            14114000
              MOVECHARS(CASTDIR[CASTLINKS[JUNK].[6:6],                  14115000
                  CASTLINKS[JUNK].[12:6]],HEADING[HEADPOINT DIV 8 ],    14116000
                   CASTLINKS[JUNK].[18:6],HEADPOINT.[45:3],             14117000
                   CASTLINKS[JUNK].[24:6]) ;                            14118000
              IF NEWMULTITOG THEN                                       14119000
         BEGIN                                                          14120000
              CLEAR(JUNKARRAY,14) ;                                     14121000
              MOVEWORDS(MULTNAME[1],MULTNAME[3],2) ;                    14122000
              MOVEWORDS(MULTNAME[1],JUNKARRAY[0],4) ;                   14123000
              WRITE(PUNCH,10,JUNKARRAY[*]) ;                            14124000
              MULTNAME[2] ~ "      " ;                                  14125000
              IF CASTLINKS[JUNK].[24:6] > 7 THEN                        14126000
              JUNK ~ 7 ELSE JUNK ~ CASTLINKS[JUNK].[24:6] ;             14127000
              MOVECHARS(HEADING[HEADPOINT DIV 8],MULTNAME[2],           14128000
                  HEADPOINT.[45:3],1,JUNK) ;                            14129000
              FILL NEWTAPE WITH MULTNAME[1],MULTNAME[2] ;               14130000
         END ;                                                          14131000
              NCASTRECS ~ CASTLINKS[FCASTINDEX+1].[30:18] -             14132000
                          CASTLINKS[FCASTINDEX].[30:18] ;               14133000
              NCASTRECS ~ NCASTRECS - 1 ;                               14134000
              GO TO MORECAST ;                                          14135000
         END ;                                                          14136000
COMMENT DOCUMENT* QUIT ;                                                14137000
EOPROG:                                                                 14138000
              IF CASTOG THEN REWIND(CASTSW[CASTINDEX]) ;                14139000
         BEGIN                                                          14140000
INTEGER BLOCKEXTENDER;                                                  14141000
     IF DUMPFLAG THEN DUMPARRAYS;                                       14142000
     IF DOCER ! 0 THEN                                                  14143000
              WRITE(SPOOUT,BADRUN,PROGID,DATE,DOCER) ELSE               14144000
              IF NOT (LISTOG OR PRINTOG) THEN                           14145000
              WRITE(SPOOUT,GOODRUN,PROGID,DATE) ;                       14146000
              IF LISTOG OR PRINTOG AND DOCER ! 0 THEN                   14147000
         BEGIN                                                          14148000
              ZPG(ZF);                                                  14149000
              WRITE(LINE[DBL],BADRUN,PROGID,DATE,DOCER) ;               14150000
         END ;                                                          14151000
         END;                                                           14152000
              CLOSE(PRINT,RELEASE) ;                                    14153000
         END .                                                          14154000
END;END.        LAST CARD ON 0CRDING TAPE                               99999999
