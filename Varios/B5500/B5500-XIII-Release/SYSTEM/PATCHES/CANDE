$#PATCH NUMBER 1 FOR CANDE.XII CONTAINS 173 CARDS                            &&&
DEFINE   VSET           = 41#;                                          00003316
DEFINE        NUMOFVERBS =45#,                                          00008500
DEFINE        SBASE = 48#; % PROCEDURE "STACK" BASE                     00015900
              RESTRICTEDVERBS = A[42]#, % AND A[43]                     00019620
              IOTOT = A[44] #, % TOTAL IO TIME FOR THIS LL              00019624
              COMMONCELL = A[45] #,                                     00019626
              CHKSEQNMBR = A[46] #, % NEXT SEQ NO. FOR BLOCK XMISSN     00019627
              OPTIONBITS = A[47] #; % USERS "SPECIAL" OPTIONS           00019628
DEFINE        CONCISEBIT     = OPTIONBITS.[1:1]#,                       00023202
              CONCISE        = B(CONCISEBIT)#,                          00023204
              HELPFULBIT     = OPTIONBITS.[2:1]#,                       00023206
              HELPFUL        = B(HELPFULBIT)#,                          00023208
              QUICKLOGBIT    = OPTIONBITS.[3:1]#,                       00023210
              QUICKLOG       = B(QUICKLOGBIT)#,                         00023212
              QUICKBYEBIT    = OPTIONBITS.[4:1]#,                       00023214
              QUICKBYE       = B(QUICKBYEBIT)#;                         00023216
         END ELSE GO TO ERR;                                            00216600
         MOVE(2,WORDS,WORK[9],RESTRICTEDVERBS);                         01014100
         OPTIONBITS := WORK[11]; % USERS "SPECIAL" OPTIONS              01014110
WINDUP:  IF QUICKLOG THEN GO TO SCHED; % DONT PRINT GREETINGS           01019910
         WORK[0] := DATE;                                               01020000
   BEGIN                                                                04000300
$ VOID 04000351                                                         04000350
   LABEL DUMMY;                                                         04000400
   BUSYLINE                := FALSE;                                    04000500
$ VOID 04000511                                                         04000510
   INITIATEDWHILEBUSY      := FALSE;                                    04000600
   SAVEDWHILEINITBUSY      := FALSE;                                    04000700
   RESTARTNEEDED           := FALSE;                                    04000800
   ALLMCPMSG               := FALSE;                                    04000900
   DISCONNECTING           := FALSE;                                    04001000
   RESTART                 := FALSE;                                    04001100
   SEQMODE                 := FALSE;                                    04001200
   TAPEMODE                := FALSE;                                    04001300
   DATAENABLED             := FALSE;                                    04001400
   BREAKORWRU              := FALSE;                                    04001500
   CONTINUEBIT             := FALSE;                                    04001600
   SCWPREV := PREVRCW := LLWORDS; BASE := SBASE;                        04001700
   WANT := WAITFOR := WAITINGSCW := LLINFO := 0;                        04001800
   WHILE REAL(THINGSTODO) GTR 0 DO GETSOMETHINGTODO(LCW,A[*]);          04001900
   CLEAR(A[SBASE],30); % FOR REPLACIT                                   04002000
   MSGPTR := 8;                                                         04002100
   IAM := 0;                                                            04002200
   END PROCEDURE LINECLEAR;                                             04002300
              IF CONCISE THEN MATCH(RUN2,"CANDE  ") ELSE                14003310
                 BEGIN                                                  14003320
                 LITOUT("-BOJ-  ",NOCRLF); LITOUT(RUN1,CRLF);           14003330
                 END;                                                   14003340
              TWXOUT(LL,LL,0,2-CONCISEBIT);                             14006450
      TWXOUT(LL,WORK[0],64,2 - CONCISEBIT);                             25005500
              WORK[18] := 4 + REAL(SCHEDULINE);                         27002100
              EOJMSG := NOT CONCISE; WRITEASTERISK := CONCISE;          27002110
              IF NOT CONCISE THEN LITOUT("RUNNING",..100002);           27002700
              COMPILING := TRUE; WRITEASTERISK := CONCISE;              32003500
              BOJMSG := NOT CONCISE; EOJMSG := NOT CONCISE;             32003510
IF SCHEDULINE OR HELPFUL THEN                                           34002800
%***********************************************************************41000000
PROCEDURE SETIT(LCW,A); BOOLEAN LCW; ARRAY A[0];                        41000100
%***********************************************************************41000200
BEGIN                                                                   41000300
REAL I,H1,H2,NC,PTR,CHAR,WORD,MAXPTR,NCHRS,TYPE,CLASS,MAXCHARS,SETBIT;  41000400
REAL PRM1,PRM2,PRM3;                                                    41000500
BOOLEAN HEX,XMIT,RECV;                                                  41000600
DEFINE ERR(ERR1,ERR2,ERR3)=                                             41000700
   BEGIN                                                                41000800
   ERRSW := ERR1 & ERR2[1:43:5]; MSGPTR := ERR3;                        41000900
   IAM := VERROR; GO TO EXIT;                                           41001000
   END#;                                                                41001100
LABEL CASE2,CASE5,CHARACTERS,NUMBERS,NAMES,STOP1,STOP2,STOP3,COMM,EXIT; 41001200
%.......................................................................41001300
REAL STREAM PROCEDURE LOOKUP(ASCII,CHAR); VALUE CHAR;                   41001400
%.......................................................................41001500
   BEGIN % CONVERSION TABLE - BCL TO ASCII                              41001600
   SI:=ASCII; DI:=LOC LOOKUP; DI:=DI+6; CHAR(SI:=SI+2); DS:=2CHR;       41001700
   END;                                                                 41001800
%.......................................................................41001900
BOOLEAN STREAM PROCEDURE NEXTCHRS(PTR,WORD,NCHRS,FRST,MAXPTR);          41002000
%.......................................................................41002100
VALUE NCHRS,FRST,MAXPTR;                                                41002200
% GET NEXT CHARACTERS FROM INPUT STRING AND STORE RIGHT JUSTIFIED       41002300
% RETURNS A VALUE OF FALSE AT END OF RECORD - OTHERWISE, TRUE           41002400
% SKIP LEADING BLANKS WHEN "FRST" IS TRUE                               41002500
   BEGIN LOCAL SV,DV; LABEL LBL,EXIT;                                   41002600
   SI:=PTR; SI:=SI+5; SI:=SC;                                           41002700
   FRST(LBL: IF SC NEQ " " THEN JUMP OUT; SI:=SI+1; GO LBL);            41002800
   DI:=WORD; DS:=8LIT"0"; NCHRS(DI:=DI-1);                              41002900
   NCHRS(IF SC=LEFTARROW THEN % CHECK FOR END OF RECORD                 41003000
      BEGIN                                                             41003100
      SV:=SI; SI:=LOC SV; SI:=SI+5;                                     41003200
      DV:=DI; DI:=LOC MAXPTR; DI:=DI+5;                                 41003300
      IF 3SC=DC THEN                                                    41003400
         BEGIN                                                          41003500
         SI:=SV; DI:=DV; DS:=LIT LEFTARROW; JUMP OUT TO EXIT;           41003600
         END;                                                           41003700
      SI:=SV; DI:=DV;                                                   41003800
      END;                                                              41003900
   IF SC=" " THEN JUMP OUT TO EXIT; % MUST BE VISIBLE CHARACTER         41004000
   DS:=CHR);                                                            41004100
   TALLY:=1;                                                            41004200
EXIT:                                                                   41004300
   SV:=SI; SI:=LOC SV; DI:=PTR; DS:=WDS;                                41004400
   NEXTCHRS:=TALLY;                                                     41004500
   END STREAM PROCEDURE NEXTCHARS;                                      41004600
%.......................................................................41004700
%.......................................................................41004800
CASE DOING OF                                                           41004900
   BEGIN                                                                41005000
   %....................................................................41005100
      BEGIN % CASE 0 - SYNTAX ANALYSIS                                  41005200
      PTR := WORKADRS; MAXPTR := WORKENDADRS; NC := 0; % LIMITS         41005300
      WHILE (TYPE:=SCAN(PTR,WORD,"9",MAXPTR)) NEQ 5 DO                  41005400
         BEGIN                                                          41005500
         IF TYPE NEQ 1 THEN ERR(WORD,7,8) ELSE WORD.[1:5]:=0;           41005600
         NC := NC + 1;                                                  41005700
         MATCH(WORD,"SET    ") SETBIT := 1                              41005800
         ELSE MATCH(WORD,"RESET  ") SETBIT := 0                         41005900
         ELSE MATCH(WORD,"CONCISE") CONCISEBIT := SETBIT                41006000
         ELSE MATCH(WORD,"HELPFUL") HELPFULBIT := SETBIT                41006100
         ELSE MATCH(WORD,"QUICKLO") QUICKLOGBIT:= SETBIT                41006200
         ELSE MATCH(WORD,"QUICKBY") QUICKBYEBIT:= SETBIT                41006300
         %                                                              41006400
         %                                                              41006500
         %                                                              41006600
         %                                                              41006700
         %                                                              41006800
         ELSE ERR(WORD,7,8);                                            41007100
         END WHILE STATEMENT;                                           41007200
      IF NC LSS 2 THEN ERR("INCMPLT",7,8);                              41007300
      LLDISKREAD := USERFILE + USERLOC; % USERS/CANDE RECORD ADDRESS    41007400
      WANT := VDISKREAD;                                                41007500
      DOING := 1;                                                       41007600
      END CASE 0;                                                       41007700
   %....................................................................41007800
      BEGIN % CASE 1 - USERS/CANDE RECORD IN CORE                       41007900
      WORK[11] := OPTIONBITS; % PUT NEW SETTINGS IN RECORD              41008000
      DISKWRITE(USERFILE+USERLOC); % REPLACE USERS/CANDE RECORD         41008100
      IAM := 0;                                                         41008200
      WRITEASTERISK := TRUE;                                            41008300
      END CASE 1;                                                       41008400
   END ALL CASES;                                                       41008500
EXIT:                                                                   41008600
END PROCEDURE SETIT;                                                    41008700
    &R(REVERSETOG)[5:47:1]&R(NOT HAVEINPUTFILE)[6:47:1]                 52028700
    & (CONCISEBIT)[8:47:1];                                             52028710
      EOJMSG := NOT CONCISE;                                            52031500
      WRITEASTERISK := CONCISE;                                         52031600
LABEL SKIP, EXIT;                                                       54000400
              IF QUICKBYE THEN                                          54000670
                 BEGIN                                                  54000675
                 LITOUT("BYE    ",1); GO SKIP;                          54000680
                 END;                                                   54000690
SKIP:         WRITEASTERISK:=FALSE; WORK[0]:="$~     ";                 54001900
         IF NOT CONCISE THEN GENFILINE(FILENAME,TYPETABLE[FILETYPE]);   58003100
              EOJMSG := NOT CONCISE;                                    58003200
              WRITEASTERISK := CONCISE;                                 58003300
              IF NOT CONCISE THEN LITOUT("LOADING",NOCRLF);             58005150
              IF NOT CONCISE THEN                                       58005165
         BEGIN                                                          58005166
              TWXOUT(LL,L[0],0,2);                                      58005167
         END;                                                           58005171
              WORK[1] := LL & VMCPMSG[33:41:7] & CONCISEBIT[8:47:1];    58005400
         IF NOT CONCISE THEN GENFILINE(FILENAME,TYPETABLE[FILETYPE]);   59002900
              LITOUT("SAVED. ",2 - CONCISEBIT);                         59005200
              EOJMSG := NOT CONCISE; WRITEASTERISK := CONCISE;          72006760
   EOJMSG := NOT CONCISE;                                               74016500
   WRITEASTERISK := CONCISE;                                            74016600
    ERRSW:=USERCODE;                                                    76030400
   EOJMSG := NOT CONCISE; WRITEASTERISK := CONCISE;                     76030800
    IF NOT CONCISE THEN LITOUT("WAIT.  ",1);                            76030900
    % VOID                                                              90103000
              SETIT(LCW,A[*]);        % 41 - "SET" & "RESET"            90283000
                   "3SET    ", ..3011260000000051, % 41                 90403200
                   "5RESET  ", ..3011300000000051, % 41 ALSO            90403300
$#PATCH NUMBER 2 FOR CANDE.XII CONTAINS 111 CARDS                            &&&
REAL          STACKSIZE,PROCESSLIMIT,IOLIMIT,CORESIZE;                  00012810
%***********************************************************************00210000
REAL PROCEDURE DOWHICH(A,NUM); VALUE NUM; ARRAY A[0]; REAL NUM;         00210100
%***********************************************************************00210200
   BEGIN                                                                00210300
   REAL I,T,PC,WORD,WHICH;                                              00210400
   BOOLEAN LIB,HAVEWITH,STACK,CORE,IO,PROCESS;                          00210500
   LABEL PUTTYPE,LOOKFORNUMBER,ERR,EXIT;                                00210600
   COMMENT                                                              00210700
   VALUE RETURNED TO DOWHICH:                                           00210800
   0 (ERROR)                                                            00210900
   1 ([VERB])                                                           00211000
   2 ([VERB] COMPILERNAME)                                              00211100
   3 ([VERB] FILENAME)                                                  00211200
   4 ([VERB] FILENAME COMPILERNAME)                                     00211300
   5 ([VERB] FILENAME/USERNAME)                                         00211400
   END OF COMMENT;                                                      00211500
   A[BASE+1]:=A[BASE+2]:=A[BASE+3]:=A[BASE+4]:=A[BASE+5]:=A[BASE+6]:=0; 00211600
   PC := A[SREG:=BASE-A[BASE]].FF;                                      00211700
   WHILE I LSS PC DO % PICK UP ALL PARAMETERS                           00211800
      BEGIN                                                             00211900
      I := I + 1; SREG := SREG + 1;                                     00212000
      IF A[SREG].[3:3] NEQ 0 THEN % ALPHABETIC STRING                   00212100
         BEGIN                                                          00212200
         IF HAVEWITH THEN % "WITH" PRECEEDED THIS WORD                  00212300
            BEGIN                                                       00212400
            WORD := A[SREG].[6:42];                                     00212500
            MATCH(WORD,"STACK  ") STACK := TRUE                         00212600
            ELSE MATCH(WORD,"PROCESS") PROCESS := TRUE                  00212700
            ELSE MATCH(WORD,"IO     ") IO := TRUE                       00212800
            ELSE MATCH(WORD,"CORE   ") CORE := TRUE                     00212900
            ELSE GO TO ERR;                                             00213000
LOOKFORNUMBER:                                                          00213100
            IF I:=I+1 GTR PC THEN GO TO ERR;                            00213200
            IF A[SREG:=SREG+1].[1:2]=1 THEN                             00213300
            IF A[SREG].[42:6] = "=" THEN GO LOOKFORNUMBER;              00213400
            IF A[SREG].[1:5] NEQ 0 THEN GO ERR; % NOT A NUMBER          00213500
            IF STACK THEN % STACK SIZE                                  00213600
               BEGIN A[BASE+3]:=A[SREG].[36:12]; STACK:=FALSE; END      00213700
            ELSE IF PROCESS THEN                                        00213800
               BEGIN A[BASE+4] := A[SREG]|60; PROCESS := FALSE; END     00213900
            ELSE IF IO THEN                                             00214000
               BEGIN A[BASE+5] := A[SREG]|60; IO:=FALSE; END            00214100
            ELSE % CORE                                                 00214200
               BEGIN A[BASE+6]:=A[SREG].[33:15]; CORE:=FALSE; END       00214300
            END % IF HAVEWITH                                           00214400
         ELSE MATCH(A[SREG].[6:42],"WITH   ") HAVEWITH := TRUE          00214500
         ELSE MATCH(A[SREG].[6:42],"LIBRARY") LIB := TRUE               00214600
         ELSE IF T := FINDAWORD(A[SREG],TYPETABLE[1],NUM) NEQ 0 THEN    00214700
            BEGIN                                                       00214800
PUTTYPE:                                                                00214900
            A[BASE+2] := T; % FILE TYPE                                 00215000
            WHICH := WHICH + 1;                                         00215100
            END                                                         00215200
         ELSE                                                           00215300
            BEGIN % INTERPRET AS FILE NAME                              00215400
$ VOID 00215457                                                         00215450
            WHICH := WHICH + 2;                                         00215500
            A[BASE+1+REAL(LIB)] := A[SREG];                             00215600
            LIB := FALSE;                                               00215700
            END;                                                        00215800
         END % IF A[SREG].[3:3] NEQ 0                                   00215900
      ELSE IF A[SREG] = "/" THEN LIB := TRUE                            00216000
      ELSE IF A[SREG] = ":" THEN                                        00216100
         BEGIN                                                          00216200
         IF I:=I+1 GTR PC THEN GO ERR;                                  00216300
         IF T:=FINDALETTER(A[SREG:=SREG+1],TYPETABLE[1],NUM) NEQ 0 THEN 00216400
         GO PUTTYPE ELSE GO ERR;                                        00216500
         END ELSE GO TO ERR;                                            00216600
      END WHILE STATEMENT;                                              00216700
   IF WHICH:=WHICH+1 GTR 5 THEN                                         00216800
      BEGIN                                                             00216900
      MSGPTR := 16; % TOO MANY PARAMETERS                               00217000
      WHICH := 0;                                                       00217100
      GO TO EXIT;                                                       00217200
      END;                                                              00217300
   IF WHICH=2 OR WHICH=4 THEN % COMPILER NAME SPECIFIED                 00217400
   IF CHECKBIT((A[BASE+2]-1) DIV 1,RESTRICTEDLANGUAGES) THEN            00217500
      BEGIN                                                             00217600
      WHICH := 0;                                                       00217700
      MSGPTR := 49;                                                     00217800
      END;                                                              00217900
   GO TO EXIT;                                                          00218000
ERR:                                                                    00218100
   WHICH := 0;                                                          00218200
   MSGPTR := 8;                                                         00218300
   GO TO EXIT;                                                          00218400
EXIT:                                                                   00218500
   ERRSW := A[SREG];                                                    00218600
   DOWHICH := WHICH;                                                    00218700
   END PROCEDURE DOWHICH;                                               00218800
              WORK[16] :=                                               27001000
              IF PROCESSLIMIT GTR 0 THEN PROCESSLIMIT ELSE 54000;       27001010
              WORK[17] :=                                               27001020
              IF IOLIMIT GTR 0 THEN IOLIMIT ELSE 54000;                 27001030
              WORK[20] :=                                               27001040
              IF CORESIZE GTR 0 THEN CORESIZE ELSE 0;                   27001050
              WORK[21] := STACKSIZE; % COMPILER EST. OR SPEC. VALUE     27002000
              STACKSIZE := PROCESSLIMIT := IOLIMIT := CORESIZE := 0;    27003150
              WORK[16] :=                                               32003110
              IF PROCESSLIMIT GTR 0 THEN PROCESSLIMIT ELSE ..7777777777;32003120
              WORK[17] :=                                               32003130
              IF IOLIMIT GTR 0 THEN IOLIMIT ELSE ..7777777777;          32003140
              WORK[21] :=                                               32003150
              IF STACKSIZE GTR 0 THEN STACKSIZE ELSE 512;               32003160
              STACKSIZE := PROCESSLIMIT := IOLIMIT := CORESIZE := 0;    32003170
    TEMP := 7;                                                          57000600
    STACKSIZE := A[BASE+3]; PROCESSLIMIT := A[BASE+4];                  57002910
    IOLIMIT := A[BASE+5]; CORESIZE := A[BASE+6];                        57002920
    STACKSIZE := A[BASE+3]; PROCESSLIMIT := A[BASE+4];                  57007910
    IOLIMIT := A[BASE+5]; CORESIZE := A[BASE+6];                        57007920
$#PATCH NUMBER 3 FOR CANDE.XII CONTAINS 108 CARDS                            &&&
DEFINE   VMONITORR      = 40#;                                          00003314
DEFINE        NUMOFVERBS =46#,                                          00008500
            , MONITORBIT         = LCW.[26:1] #                         00022540
%***********************************************************************40000000
PROCEDURE MONITORR(LCW,A); BOOLEAN LCW; ARRAY A[0];                     40000100
%***********************************************************************40000200
BEGIN                                                                   40000300
REAL PC,WORD;                                                           40000400
LABEL EXIT;                                                             40000500
TEMP := 3;                                                              40000600
CASE DOING OF                                                           40000700
   BEGIN                                                                40000800
   %....................................................................40000900
      BEGIN % CASE 0 - SYNTAX CHECK                                     40001000
      PC := A[ SREG:=BASE-A[BASE] ].[18:15]; % PARAMETER COUNT          40001100
      WORD := A[SREG:=SREG+1]; % FIRST PARAMETER                        40001200
      IF PC NEQ 1 THEN % WRONG NUMBER OF PARAMETERS                     40001300
         BEGIN                                                          40001400
         IF PC=0 THEN GOERR("FILENAM",6); % FILE NAME REQUIRED          40001500
         GOERR(WORD,8); % ILLEGAL PARAMETER                             40001600
         END;                                                           40001700
      IF WORD.[3:3]=0 THEN GOERR(WORD,8); % NOT A FILE NAME             40001800
      IF WORD.[3:3] GTR 6 THEN GOERR(WORD,42); % 6 CHARACTERS MAX       40001900
      IF FINDAWORD(WORD,RESWRDTABLE[1],NUMOFRESWRDS) NEQ 0 THEN         40002000
      GOERR(WORD,29);                                                   40002100
      A[BASE] := WORD := WORD.[6:42]; % STORE FILE NAME                 40002200
      A[BASE+1] := A[BASE+2] := 0; % RESET EVENTS COUNTER AND ERR. LOC. 40002300
      FIND(LL&IAM[33:41:7],0,WORD,USERCODE,USERCODE);                   40002400
      FIND(LL&IAM[33:41:7],0,WORD.[6:36],USERCODE,USERCODE);            40002500
      DOING := 1; WAITFOR := IAM;                                       40002600
      END; % CASE 0                                                     40002700
   %....................................................................40002800
      BEGIN % CASE 1 - RESULTS OF DIRECTORY SEARCH                      40002900
      IF EVENTS[1] GEQ 0 THEN % FILE WAS IN DIRECTORY                   40003000
      IF A[BASE+1]=0 THEN   % THIS IS FIRST FILE FOUND                  40003100
      IF A[BASE+2]=0 THEN A[BASE+1]:=A[BASE] % SOURCE VERSION           40003200
      ELSE A[BASE+1]:=A[BASE].[6:36]; % OBJECT VERSION                  40003300
      IF A[BASE+2]:=A[BASE+2]+1 LSS 2 THEN WAITFOR:=IAM ELSE            40003400
      IF A[BASE+1] NEQ 0 THEN GOERR(A[BASE+1],3) ELSE                   40003500
         BEGIN                                                          40003600
         MAKEFILE(LL&IAM[33:41:7],1,A[BASE],USERCODE,8,200);            40003700
         DOING:=2; WAITFOR:=IAM;                                        40003800
         END;                                                           40003900
      END; % CASE 1                                                     40004000
   %....................................................................40004100
      BEGIN % CASE 2 - ADJUST NEW FILE HEADER                           40004200
      IF EVENTS[1] = 0 THEN GOERR("NO DISK",46);                        40004300
      LLDISKREAD:=A[BASE+1]:=EVENTS[2]; % HEADER ADDRESS                40004400
      DOING := 3; WANT := VDISKREAD;                                    40004500
      END; % CASE 2                                                     40004600
   %....................................................................40004700
      BEGIN % CASE 3 - HEADER IN CORE                                   40004800
      WORK[0]:=10 & 30[30:36:12] & 300[15:33:15] & 10[1:34:14];         40004900
      WORK[3].[2:10] := 7; % SAVE FACTOR                                40005000
      WORK[7] := -1; % EOF POINTER                                      40005100
      WORK[9].[43:5] := 20; % NUMBER OF ROWS                            40005200
      DISKWRITE(A[BASE+1]); % REPLACE HEADER                            40005300
      LLDISKREAD:=USERFILE+USERLOC; % USERS/CANDE RECORD ADDRESS        40005400
      DOING := 4; WANT := VDISKREAD;                                    40005500
      END; % CASE 3                                                     40005600
   %....................................................................40005700
      BEGIN % CASE 4 - USERS/CANDE RECORD IN CORE                       40005800
      MONITORBIT := TRUE;                                               40005900
      WORK[12] := A[BASE]; % MONITOR FILE NAME                          40006100
      DISKWRITE(USERFILE + USERLOC); % REPLACE RECORD                   40006200
      IAM := 0;                                                         40006300
      END; % CASE 4                                                     40006400
   END ALL CASES;                                                       40006500
EXIT:                                                                   40006600
END PROCEDURE MONITORR;                                                 40006700
         ELSE MATCH(WORD,"MONITOR") GO TO CASE2 % SET/RESET MONITOR FILE41006900
   %....................................................................41008500
      BEGIN % CASE 2 - MONITOR SET/RESET REQUEST                        41008600
CASE2: IF NOT BOOLEAN(SETBIT) THEN % RESET MONITOR                      41008700
         BEGIN                                                          41008800
         MONITORBIT := FALSE;                                           41008900
         IAM := 0;                                                      41009000
         WRITEASTERISK := TRUE;                                         41009100
         GO TO EXIT;                                                    41009200
         END;                                                           41009300
      LLDISKREAD := USERFILE + USERLOC; % USERS/CANDE RECORD ADDRESS    41009400
      WANT := VDISKREAD;                                                41009500
      DOING := 3;                                                       41009600
      END CASE 2;                                                       41009700
   %....................................................................41009800
      BEGIN % CASE 3 - USERS/CANDE RECORD IN CORE                       41009900
      IF WORK[12]=0 THEN ERR("MON.FIL",7,2); % NO FILE NAME LISTED      41010000
      A[BASE] := WORK[12]; % SAVE MONITOR FILE NAME                     41010100
      FIND(LL&IAM[33:41:7],0,A[BASE],USERCODE,USERCODE); % SEARCH       41010200
      TEMP := 2; DOING := 4; WAITFOR := IAM;                            41010300
      END CASE 3;                                                       41010400
   %....................................................................41010500
      BEGIN % CASE 4 - RESULTS OF DIRECTORY SEARCH                      41010600
      IF EVENTS[1] LEQ 0 THEN ERR(A[BASE],6,2); % NOT ON DISK           41010700
      MONITORBIT := TRUE;                                               41010800
      LITOUT(A[BASE],NOCRLF); LITOUT(" MONITR",CRLF);                   41010900
      IAM := 0;                                                         41011000
      END CASE 4;                                                       41011100
   END ALL CASES;                                                       41011200
EXIT:                                                                   41011300
END PROCEDURE SETIT;                                                    41011400
               & R(DISPLAY)[7:47:1] & R(MONITORBIT)[9:47:1];            56011010
      IF WORK[2] NEQ 0 AND TPCOUNT GTR 0 THEN WORK[4]:=USERFILE+USERLOC;56011020
          WORK[1] := LL&VMCPMSG[33:41:7]&R(FILETYPE=8)[3:47:1]          75000900
          &R(MONITORBIT)[9:47:1];                                       75000910
          WORK[2]:=USERCODE; WORK[4]:=USERFILE+USERLOC;                 75001000
              MONITORR(LCW,A[*]);      % 40 -                           90282000
                   "7MONITOR", ..3001320000000050, % 40                 90403400
$#PATCH NUMBER 4 FOR CANDE.XII CONTAINS 4 CARDS                              &&&
      ERRSW := USERCODE;                                                52034100
      WANT := VDISPATCH; ERRSW := USERCODE;                             56013800
      IAM := VDISPATCH; ERRSW := USERCODE;                              56014900
          WANT := VDISPATCH;  DOING := 2; ERRSW := FILENAME;            75001900
$#PATCH NUMBER 5 FOR CANDE.XII CONTAINS  17 CARDS                            &&&
   A[BASE] := A[SREG].[6:42]; % MUST BE FILE NAME                       00205200
   IF (A[BASE+1]:=A[SREG].[6:42]).[42:6] NEQ " " THEN % TOO LONG        00206300
      BEGIN                                                             00206310
      WHICH:=0; ERRSW:=A[SREG]; MSGPTR:=42; GO TO EXIT;                 00206320
      END;                                                              00206330
            IF (A[BASE+1+REAL(LIB)]:=A[SREG].[6:42]).[42:6] NEQ " " THEN00215600
            IF NOT LIB THEN                                             00215610
               BEGIN                                                    00215620
               WHICH:=0; MSGPTR := 42; GO TO EXIT;                      00215630
               END;                                                     00215640
                IF A[BASE+1].[6:42] NEQ " " THEN GOERR(A[BASE+1],42);   14006416
               IF (FILNAM3:=WORD).[42:6] NEQ " " THEN GOERR(WORD,42);   52013900
              IF A[SREG].[3:3] GTR 6 THEN GOERR(A[SREG],42);            58001700
              FIND(LL&IAM[33:41:7],0,A[SREG].[6:42],                    58001800
              FILENAME:=A[SREG].[6:42];                                 58002850
              MSGPOINTER := 42; % 6 CHRS MAX                            61002100
              IF A[SREG].FF=0 THEN GOERR("FILENAM",6);                  63001000
$#PATCH NUMBER 6 FOR CANDE.XII CONTAINS 2 CARDS                              &&&
              E := OUTSUPR(DECCONV(SEQLAST+INCREMENT),WORK[0]);         26003330
              TWXOUT(LL,WORK[0],E,NOCRLF);                              26003340
$#PATCH NUMBER 7 FOR CANDE.XII    CONTAINS  13  CARDS        I                 &
REAL          STACKSIZE,PROCESSLIMIT,IOLIMIT,CORESIZE,COMMONVALUE;      00012810
   BOOLEAN LIB,HAVEWITH,STACK,CORE,IO,PROCESS,COMN;                     00210500
   CLEAR(A[BASE+1],6);                                                  00211600
            ELSE MATCH(WORD,"COMMON ") COMN:=TRUE                       00212910
            ELSE IF CORE THEN                                           00214200
            ELSE % COMMON                                               00214310
               BEGIN A[BASE+7]:=A[SREG]; COMN:=FALSE; END               00214320
              WORK[19]:=COMMONVALUE;                                    27002010
             STACKSIZE:=PROCESSLIMIT:=IOLIMIT:=CORESIZE:=COMMONVALUE:=0;27003150
             STACKSIZE:=PROCESSLIMIT:=IOLIMIT:=CORESIZE:=COMMONVALUE:=0;32003170
TEMP := 8;                                                              57000600
    IOLIMIT := A[BASE+5]; CORESIZE := A[BASE+6]; COMMONVALUE:=A[BASE+7];57002920
    IOLIMIT := A[BASE+5]; CORESIZE := A[BASE+6]; COMMONVALUE:=A[BASE+7];57007920
$#PATCH NUMBER 8 FOR  CANDE.XII    CONTAINS  82  CARDS       I                 &
              NUMOFTYPES =11#,      % NUMBER. OF TYPE WORDS             00008600
     % VOID                                                             00008700
     % VOID                                                             00008750
              NUMOFRESWRDS = 26 #;     %  NO. OF RESERVED WORDS(NOT VBS)00008800
%***********************************************************************00082400
REAL STREAM PROCEDURE FINDALETTER(WORD,TABLE,TABLESIZE);                00082500
%***********************************************************************00082600
VALUE WORD,TABLESIZE;                                                   00082700
% ROUTINE COMPARES "WORD" WITH ENTRIES IN ARRAY "TABLE"                 00082800
% 1ST CHR.OF EACH "TABLE" ENTRY=NO.OF CHRS.IN WORD ([1:1]=1 IF COMPILER)00082900
% "TABLE" SHOULD BE "TABLE[1]" TO USE RETURNED VALUE AS INDEX TO "TABLE"00083000
   BEGIN LOCAL SV,T,SGN; LABEL FOUND,EXIT;;                             00083100
   SI:=TABLE; SV:=SI; TALLY:=1;                                         00083200
   TABLESIZE(DI:=LOC SGN; DS:=ZON; % SAVE ZONE BITS                     00083300
   SI:=SV; SI:=SI+1; DI:=LOC WORD; DI:=DI+1; % POINT TO 1ST CHRS.       00083400
   IF SC = DC THEN JUMP OUT TO FOUND;                                   00083500
   TALLY:=TALLY+1; SI:=SV; SI:=SI+8; SV:=SI);                           00083600
   TALLY:=0; FINDALETTER:=TALLY; GO TO EXIT; % IF NOT FOUND             00083700
FOUND:                                                                  00083800
   T:=TALLY; SI:=LOC T; DI:=LOC FINDALETTER; DS:=WDS;                   00083900
   SI:=LOC SGN; DI:=LOC FINDALETTER; DS:=ZON; % TRANSFER SIGN           00084000
EXIT:                                                                   00084100
   END STREAM PROCEDURE FINDAWORD;                                      00084200
%***********************************************************************00084300
REAL STREAM PROCEDURE FINDAWORD(WORD,TABLE,TABLESIZE);                  00084400
%***********************************************************************00084500
VALUE WORD,TABLESIZE;                                                   00084600
% ROUTINE COMPARES "WORD" WITH ENTRIES IN ARRAY "TABLE"                 00084700
% 1ST CHR.OF EACH "TABLE" ENTRY=NO.OF CHRS.IN WORD ([1:1]=1 IF COMPILER)00084800
% 1ST CHR. OF "WORD" = NO. OF CHRS. INPUT BY USER ( MAX. = 7 )          00084900
% "TABLE" SHOULD BE "TABLE[1]" TO USE RETURNED VALUE AS INDEX TO "TABLE"00085000
   BEGIN LOCAL SV,WRDSIZ,TBLSIZ,SGN; LABEL FOUND,EXIT;;                 00085100
   SI:=LOC WORD; DI:=LOC WRDSIZ; DI:=DI+7; DS:=CHR; % WORD SIZE         00085200
   SI:=TABLE; SV:=SI; TALLY:=1;                                         00085300
   TABLESIZE(DI:=LOC SGN; DS:=ZON; % SAVE ZONE BITS                     00085400
   SI:=SV; DI:=LOC TBLSIZ; DI:=DI+7; DS:=NUM; % LENGTH OF TABLE ENTRY   00085500
   SI:=LOC WRDSIZ; SI:=SI+7; DI:=LOC TBLSIZ; DI:=DI+7;                  00085600
   IF SC GEQ DC THEN % WRDSIZ AT LEAST AS LARGE AS TBLSIZ               00085700
      BEGIN                                                             00085800
      SI:=SV; SI:=SI+1; DI:=LOC WORD; DI:=DI+1; % POINT TO ACTUAL CHRS. 00085900
      IF WRDSIZ SC = DC THEN JUMP OUT TO FOUND;                         00086000
      END;                                                              00086100
   TALLY:=TALLY+1; SI:=SV; SI:=SI+8; SV:=SI);                           00086200
   TALLY:=0; FINDAWORD:=TALLY; GO TO EXIT; % IF NOT FOUND               00086300
FOUND:                                                                  00086400
   WRDSIZ:=TALLY; SI:=LOC WRDSIZ; DI:=LOC FINDAWORD; DS:=WDS;           00086500
   SI:=LOC SGN; DI:=LOC FINDAWORD; DS:=ZON; % TRANSFER SIGN             00086600
EXIT:                                                                   00086700
   END STREAM PROCEDURE FINDAWORD;                                      00086800
     IF A[BASE+1] := ABS(FINDAWORD(A[SREG],TYPETABLE[1],                00202900
        NUMOFTYPES)) = 0 THEN                                           00203000
     IF A[BASE+1] := ABS(FINDALETTER(A[INC(SREG)],                      00203900
                          TYPETABLE[1], NUMOFTYPES))                    00204000
   IF CHECKBIT(ABS(A[BASE+2])-1,RESTRICTEDLANGUAGES) THEN               00217500
         MSGPOINTER := PREVMSG;                                         16016000
         PREVMSG := 0;                                                  16017000
              ELSE IF T = 4 THEN FILETYPE := ABS(A[BASE+2])             55002800
   IF T := DOWHICH(A[*],NUMOFTYPES) = 0 THEN                            57001000
   T := DOWHICH(A[*],NUMOFTYPES);                                       57003300
   A[BASE+2] := FILETYPE&TYPETABLE[FILETYPE][1:1:1];                    57004300
   IF A[BASE+2] GEQ 0 THEN GOERR("TYPE   ",19) % NOT COMPILER           57007600
   ELSE A[BASE+2]:=ABS(A[BASE+2]);                                      57007700
   A[BASE+2]:=IF (T:=EVENTS[2].[36:6]) GTR NUMOFTYPES THEN 0 ELSE       57008400
   T&TYPETABLE[T][1:1:1];                                               57008450
   IF T := DOWHICH(A[*],NUMOFTYPES) = 0 THEN                            57008900
   A[BASE+2]:=ABS(A[BASE+2]);                                           65001140
   IF FILETYPE=8 AND A[BASE+2] NEQ 8 THEN GOERR(A[SREG],61);            65001150
LOK = SPECS.[10:1]#,  INF = SPECS.[11:1]#,  C68 = SPECS.[12:1]#;        74000800
      ELSE MATCH(WORD,"COBOL68") C68:=TRUE                              74011810
              "EBASIC  ",                                               90405000
              "EALGOL  ",                                               90406000
              "ECOBOL  ",                                               90407000
              "GFORTRAN",                                               90408000
              "ETSPOL  ",                                               90409000
              "FXALGOL ",                                               90410000
              "3SEQ    ",                                               90411000
              "4DATA   ",                                               90412000
              "4LOCK   ",                                               90413000
              "4INFO   ",                                               90413100
              "GCOBOL68";                                               90413900
   "6XALGOL ",                                                          90438100
   "7COBOL68",                                                          90438200
$#PATCH NUMBER  9  FOR CANDE.XII    CONTAINS    51  CARDS    I                 &
     % VOID                                                             00010700
REAL    ARRAY USRBASE   [0:20]; % DISK ADDRESSES OF USERS/CANDE FILE    00015110
DEFINE  USROWSIZE = USRBASE[20]#; % SEGMENTS/ROW FOR USERS/CANDE FILE   00015120
LABEL WINDUP,PSWD,LOGGON,CHARG,NEXTBLOCK;                               01005300
NEXTBLOCK:                                                              01011710
         LLDISKREAD := USRBASE[0] + I;                                  01011800
            USR := WORK[T+1].[33:15]; % RELATIVE DISK ADDRESS           01012700
            USERLOC:=USRBASE[USR DIV USROWSIZE]+(I:=USR MOD USROWSIZE); 01012710
            LLDISKREAD := USERLOC;                                      01012720
         IF (I:=WORK[1].[18:15]) GTR 0 THEN GO TO NEXTBLOCK; %LINK      01013110
STREAM PROCEDURE USERSDATE(L,DAT);                                      05000310
   BEGIN                                                                05000315
   DI:=L; DS:=23LIT"USERS/CANDE FILE DATED ";                           05000320
   SI:=DAT; DS:=8CHR; DS:=LIT"~";                                       05000325
   END USERSDATE;                                                       05000330
REAL USERFILEHEADER;                                                    05000350
              MSGFILELOC := EVENTS[2].[20:28];                          05000600
              USERFILEHEADER := EVENTS[2].[5:15];                       05000800
              USERSDATE(L,EVENTS[4]); TWXOUT(0,L[0],32,1); % ACCESS DATE05001010
              DISKWAIT(1,WORK[*],30,USERFILEHEADER);                    05001020
              USROWSIZE:=(WORK[8] DIV WORK[0].[42:6])|WORK[0].[42:6];   05001030
              MOVE(20,WORDS,WORK[10],USRBASE[*]); % DISK ROW ADDRESSES  05001040
              IF CHECKBIT(A[SREG].[9:9] DIV 2,RESTRICTEDVERBS) THEN     26010510
                 BEGIN                                                  26010520
                 ERRSW := VERBTABLE[A[SREG].[9:9]];                     26010530
                 WANT := VERROR; MSGPTR := 49;                          26010540
                 GO TO EXIT;                                            26010550
                 END;                                                   26010560
   LLDISKREAD := USERLOC;                                               36005700
   DISKWRITE(USERLOC);                                                  36006300
   LLDISKREAD := USRBASE[0]; % USERS/CANDE RECORD ZERO                  36006400
   WANT := VDISKREAD;                                                   36006500
   DOING := 5;                                                          36006600
  END CASE 4;                                                           36006700
  BEGIN % CASE 5 - PUT NEW DATE IN USERS/CANDE FILE                     36006800
   WORK[2] := DATE;                                                     36006900
   DISKWRITE(USRBASE[0]);                                               36007000
   IAM := 0;                                                            36007100
  END CASE 5;                                                           36007200
  END ALL CASES;                                                        36007300
EXIT:                                                                   36007400
  END CHANGEPASSWORD;                                                   36007500
              LLDISKREAD:=USERLOC;                                      39002700
              DISKWRITE(USERLOC);                                       39003200
      LLDISKREAD:=USERLOC; % USERS/CANDE RECORD ADDRESS                 40005400
      DISKWRITE(USERLOC); % REPLACE RECORD                              40006200
      LLDISKREAD := USERLOC; % USERS/CANDE RECORD ADDRESS               41007400
      DISKWRITE(USERLOC); % REPLACE USERS/CANDE RECORD                  41008100
      LLDISKREAD := USERLOC; % USERS/CANDE RECORD ADDRESS               41009400
      IF WORK[2] NEQ 0 AND TPCOUNT GTR 0 THEN WORK[4]:=USERLOC;         56011020
          WORK[2]:=USERCODE; WORK[4]:=USERLOC;                          75001000
$#PATCH NUMBER 10 FOR CANDE.XII    CONTAINS  43 CARDS        I                 &
%***********************************************************************00097610
BOOLEAN STREAM PROCEDURE FIXERROR(SADRS,EADRS); VALUE SADRS,EADRS;      00097612
%***********************************************************************00097614
% SADRS IS STARTING ADDRESS OF USERS INPUT RECORD                       00097616
% EADRS IS ADDRESS OF END OF USERS INPUT                                00097618
% ROUTINE CHECKS SYNTAX OF "FIX" REQUESTS                               00097620
   BEGIN LOCAL SV,D; LABEL EXIT;                                        00097622
   SI:=SADRS; TALLY:=1;                                                 00097624
   20(IF SC LSS "0" THEN SI:=SI+1 ELSE JUMP OUT); % SCAN TO DIGIT       00097626
   IF TOGGLE THEN GO EXIT; % NO DIGITS                                  00097628
   8(IF SC LSS "0" THEN JUMP OUT;IF SC GTR "9" THEN JUMP OUT; SI:=SI+1);00097630
   20(IF SC=" " THEN SI:=SI+1 ELSE JUMP OUT); % SCAN TO CHR.            00097632
   IF TOGGLE THEN GO TO EXIT; % EMPTY FIELD                             00097634
   DI:=LOC D; DI:=DI+7; DS:=CHR; % SAVE DELIMITER                       00097636
   IF SC=D THEN GO TO EXIT; % NO STRING                                 00097638
   IF SC = LEFTARROW THEN                                               00097640
      BEGIN                                                             00097642
      SV:=SI; SI:=LOC SV; SI:=SI+5; DI:=LOC EADRS; DI:=DI+5;            00097644
      IF 3SC=DC THEN % LEFT ARROW REPLACEMENT                           00097646
         BEGIN TALLY:=0; GO EXIT; END ELSE SI:=SV;                      00097648
      END; % IF LEFTARROW                                               00097650
   63(IF SC=LEFTARROW THEN % CHECK FOR END OF RECORD                    00097652
      BEGIN                                                             00097654
      SV:=SI; SI:=LOC SV; SI:=SI+5; DI:=LOC EADRS; DI:=DI+5;            00097656
      IF 3SC=DC THEN JUMP OUT TO EXIT ELSE SI:=SV;                      00097658
      END;                                                              00097660
   IF SC NEQ D THEN SI:=SI+1 ELSE JUMP OUT);                            00097662
   IF TOGGLE THEN GO EXIT; % MISSING 2ND DELIMITER                      00097664
   TALLY:=0;                                                            00097666
EXIT:                                                                   00097668
   FIXERROR:=TALLY;                                                     00097670
   END STREAM PROCEDURE FIXERROR;                                       00097672
STREAM PROCEDURE FIXERRORMSG(SEQ,L); VALUE SEQ;                         26001210
   BEGIN                                                                26001220
   DI:=LOC SEQ; DS:=7FILL; SI:=LOC SEQ; DI:=L;                          26001230
   DS:=16LIT"FIX SYNTX ERR @ ";                                         26001240
   8(IF SC=" " THEN SI:=SI+1 ELSE DS:=CHR); DS:=8LIT" ";                26001250
   END STREAM PROCEDURE FIXERRORMSG;                                    26001260
              IF T=3 THEN IF FIXERROR(WORKADRS,WORKENDADRS) THEN        26006310
                 BEGIN                                                  26006320
                 FIXERRORMSG(DECCONV(A[SREG]),L); TWXOUT(LL,L[0],24,1); 26006330
                 MSGPTR := 21; IAM := 0; GO TO EXIT;                    26006340
                 END;                                                   26006350
$#PATCH NUMBER 11 FOR CANDE.XII    CONTAINS  5 CARDS         I                 &
              QUICKBYE       = B(QUICKBYEBIT)#,                         00023216
              ALLOWMSGBIT    = OPTIONBITS.[5:1]#,                       00023218
              ALLOWMSG       = B(ALLOWMSGBIT)#;                         00023220
         ELSE MATCH(WORD,"ALLOWMS") ALLOWMSGBIT:=SETBIT                 41006500
     IF IDLELINE OR ALLOWMSG THEN TWXOUT(LL,WORK[0],144,2)              50003200
$#PATCH NUMBER 12 FOR CANDE.XII    CONTAINS 82  CARDS        I                 &
DEFINE   VSSFILE        = 42#;                                          00003318
DEFINE         NUMOFVERBS =47#,                                         00008500
              SPOCNTRL ,     % SPO CONTROL VARIABLE                     00011600
%***********************************************************************42000000
PROCEDURE SSFILE(LCW,A); BOOLEAN LCW; ARRAY A[0];                       42000100
%***********************************************************************42000200
BEGIN % PRINT CONTENTS OF SPECIFIED FILE ON TERMINALS                   42000300
REAL I,LIN,PC,REKS,LINMAX,WORD,MAXSREG;                                 42000400
LABEL EXIT;                                                             42000500
CASE DOING OF                                                           42000600
   BEGIN                                                                42000700
      BEGIN % CASE 0 - SYNTAX ANALYSIS                                  42000800
      IF LL NEQ 0 THEN GOERR("SSFILE ",13);                             42000900
      SREG := BASE - A[BASE];                                           42001000
      PC := A[SREG].[18:15]; MAXSREG := SREG + PC;                      42001100
      A[BASE+3] := 999; % FLAG FOR LINE NUMBER INPUT                    42001200
      FOR SREG := SREG+1 STEP 1 UNTIL MAXSREG DO                        42001300
         BEGIN % PICK UP THE PARAMETERS                                 42001400
         WORD:=A[SREG];                                                 42001500
         IF WORD.[1:5]=0 THEN % LINE NUMBER GIVEN                       42001600
            BEGIN                                                       42001700
            IF WORD GTR MAXLINES THEN GOERR("NOT ON ",8);               42001800
            IF LINE[WORD,UCLOC]=0 THEN GOERR("NOT ON ",8);              42001900
            A[BASE+3] := WORD;                                          42002000
            END                                                         42002100
         ELSE IF WORD.[3:3] GTR 0 THEN % FILE NAME                      42002200
            BEGIN                                                       42002300
            IF (REKS:=REKS+1) GTR 2 THEN GOERR(WORD,8);                 42002400
            A[BASE+REKS] := WORD.[6:42];                                42002500
            END                                                         42002600
         ELSE IF WORD NEQ "/" THEN GOERR(WORD,8);                       42002700
         END FOR STATEMENT;                                             42002800
      IF REKS NEQ 2 THEN GOERR("FIL NAM",8);                            42002900
      FIND(LL&IAM[33:41:7],0,A[BASE+1],A[BASE+2],"SITE   ");            42003000
      TEMP := 4; DOING := 1; WAITFOR := IAM;                            42003100
      END CASE 0;                                                       42003200
   %....................................................................42003300
      BEGIN % CASE 1 - RESULTS OF DIRECTORY SEARCH                      42003400
      IF EVENTS[1] LSS 0 THEN % NOT ON DISK                             42003500
         BEGIN                                                          42003600
         WORK[0]:=A[BASE+1]; WORK[1]:=A[BASE+2];                        42003700
         WORK[2]:=" NOT ON"; WORK[3]:="DISK   ";                        42003800
         FOR I:=0,1,2,3 DO BLANK(WORK[I]);                              42003900
         TWXOUT(LL,WORK[0],32,1);                                       42004000
         IAM := 0;                                                      42004100
         GO EXIT;                                                       42004200
         END IF NO FILE;                                                42004300
      LLDISKREAD:=EVENTS[2].[18:15]; % HEADER ADDRESS                   42004400
      WANT := VDISKREAD;                                                42004500
      DOING := 2;                                                       42004600
      END CASE 1;                                                       42004700
   %....................................................................42004800
      BEGIN % CASE 2 - HEADER IN CORE                                   42004900
      IF (SPOCNTRL:=WORK[7]+1) GTR (I:=WORK[8]|3) THEN SPOCNTRL:=I;     42005000
      IF (A[BASE]:=WORK[10])=0 OR SPOCNTRL=0 THEN % NO RECORDS          42005100
         BEGIN IAM:=0; GO EXIT; END;                                    42005200
      A[BASE+1]:=0; % INITIALIZE SEGMENT POINTER                        42005300
      LLDISKREAD := A[BASE]; % ADDRESS OF FIRST SEGMENT                 42005400
      WANT := VDISKREAD;                                                42005500
      DOING := 3;                                                       42005600
      END CASE 2;                                                       42005700
   %....................................................................42005800
      BEGIN % CASE 3 - READ DISKFILE                                    42005900
      A[BASE+1] := A[BASE+1] + 1; % INCREMENT SEGMENT COUNTER           42006000
      REKS:=IF (SPOCNTRL:=SPOCNTRL-3) GEQ 0 THEN 3 ELSE 3+SPOCNTRL;     42006100
      LIN := 1; LINMAX := MAXLINES;                                     42006200
      IF A[BASE+3] LSS 999 THEN LIN:=LINMAX:=A[BASE+3]; % NUMBER GIVEN  42006300
      FOR LIN:=LIN STEP 1 UNTIL LINMAX DO IF LINE[LIN,UCLOC] NEQ 0 THEN 42006400
        FOR I:=1 STEP 1 UNTIL REKS DO                                   42006500
          IF I=1 THEN TWXOUT(LIN,WORK[00],72,1) ELSE                    42006600
          IF I=2 THEN TWXOUT(LIN,WORK[10],72,1) ELSE                    42006700
          IF I=3 THEN TWXOUT(LIN,WORK[20],72,1);                        42006800
      IF SPOCNTRL LEQ 0 THEN % END OF FILE OR DISK ROW                  42006900
         BEGIN IAM:=0; GO EXIT; END;                                    42007000
      LLDISKREAD := A[BASE] + A[BASE+1]; % NEXT SEGMENT ADDRESS         42007100
      WANT := VDISKREAD;                                                42007200
      END CASE 3;                                                       42007300
   END ALL CASES;                                                       42007400
EXIT:                                                                   42007500
END PROCEDURE SSFILE;                                                   42007600
              SSFILE(LCW,A[*]);        % 42 TRANSMIT FILE               90284000
                   "6SSFILE ", ..3001340000000052, % 42                 90403410
$#PATCH NUMBER 13 FOR CANDE.XII    CONTAINS  155  CARDS      I                 &
BOOLEAN       FLAGS, DCP;                                               00008900
ARRAY         ASCII[0:15];                                              00014400
      DS := 18 LIT " YOU HAVE STATION ";                                01003600
START:   IF NOT(LOGGINGON OR DCP) THEN                                  01008200
         GO TO STARTANEW;                                               01018100
              TWXOUT(LL,WORK[0],52,2);                                  01020400
             DCP:=BOOLEAN(EVENTS[2].[1:1]); % DCP SYSTEM TOGGLE         05000850
              IF DEVICE=CONRAC OR DEVICE=TC500 OR DCP THEN              38000710
REAL PRM1,PRM2,PRM3,LLUSED;                                             41000500
LABEL SPO;                                                              41001210
PROCEDURE DCPCOMM(LL,P1,P2,P3); VALUE LL,P1,P2,P3; REAL LL,P1,P2,P3;    41001220
COMMUNICATE(-17);                                                       41001230
      PTR:=WORKADRS; MAXPTR:=WORKENDADRS; NC:=0; LLUSED:=LL; % SETUP    41005300
         IF TYPE NEQ 1 THEN  % NOT ALPHA STRING                         41005600
            BEGIN                                                       41005610
            IF TYPE=2 AND LL=0 AND DCP THEN % LINE OR STATION FROM SPO  41005620
               BEGIN                                                    41005630
               LLUSED := WORD & 1[2:47:1]; % ASSUME STATION NUMBER      41005640
               GO TO SPO;                                               41005680
               END; % SPECIAL SPO INSTRUCTION                           41005690
            ERR(WORD,WORD.[1:5],8); % INVALID IF NOT SPO AND NUMBER     41005700
            END;                                                        41005710
         NC := NC + 1; WORD.[1:5] := 0;                                 41005730
         ELSE IF DCP THEN GO TO CASE5 % DCP                             41007000
   %....................................................................41011200
      BEGIN % CASE 5 - DCP REQUESTS                                     41011300
SPO:  WHILE(TYPE:=SCAN(PTR,WORD,"9",MAXPTR)) NEQ 5 DO                   41011400
         BEGIN                                                          41011500
         IF TYPE NEQ 1 THEN % NOT ALPHA STRING                          41011600
            BEGIN                                                       41011700
            IF LL=0 THEN % MESSAGE FROM SPO (LINE AND STATION)          41011800
               BEGIN                                                    41011900
               IF TYPE=2 THEN LLUSED:=-0&LLUSED[24:40:8]&WORD[32:40:8]; 41012000
               GO TO SPO;                                               41012100
               END; % IF SPO MESSAGE                                    41012200
            ERR(WORD,WORD.[1:5],8); % NOT FROM SPO                      41012300
            END ELSE WORD.[1:5]:=0;                                     41012400
CASE5:   MATCH(WORD,"STATION") % OPTIONAL WORD                          41012500
         ELSE MATCH(WORD,"TRANSMI") RECV:=NOT(XMIT:=TRUE)               41012600
         ELSE MATCH(WORD,"RECEIVE") XMIT:=NOT(RECV:=TRUE)               41012700
         ELSE MATCH(WORD,"NUMBER ")                                     41012800
            BEGIN CLASS := 17; MAXCHARS := 3; GO TO NUMBERS;    END     41012900
         ELSE MATCH(WORD,"INTERRU")                                     41013000
            BEGIN CLASS := 1;  MAXCHARS := 1; GO TO CHARACTERS; END     41013100
         ELSE MATCH(WORD,"END    ")                                     41013200
            BEGIN CLASS := 2;  MAXCHARS := 1; GO TO CHARACTERS; END     41013300
         ELSE MATCH(WORD,"BACKSPA")                                     41013400
            BEGIN CLASS := 3;  MAXCHARS := 1; GO TO CHARACTERS; END     41013500
         ELSE MATCH(WORD,"DELETE ")                                     41013600
            BEGIN CLASS := 4;  MAXCHARS := 1; GO TO CHARACTERS; END     41013700
         ELSE MATCH(WORD,"ABORT  ")                                     41013800
            BEGIN CLASS := 5;  MAXCHARS := 1; GO TO CHARACTERS; END     41013900
         ELSE MATCH(WORD,"EOR    ")                                     41014000
            BEGIN CLASS := 6;  MAXCHARS := 1; GO TO CHARACTERS; END     41014100
         ELSE IF LL=0 THEN                                              41014200
         MATCH(WORD,"ADDRESS")                                          41014300
            BEGIN CLASS := 26; MAXCHARS := 3; GO TO CHARACTERS; END     41014400
         ELSE MATCH(WORD,"ADAPTER")                                     41014500
            BEGIN CLASS := 25;                GO TO NAMES;      END     41014600
         ELSE MATCH(WORD,"TYPE   ")                                     41014700
            BEGIN CLASS := 14;                GO TO NAMES;      END;    41014800
         ERR(WORD,7,8);                                                 41014900
         END WHILE STATEMENT;                                           41015000
      ERR("INCMPLT",7,8);                                               41015100
CHARACTERS:                                                             41015200
      I := PTR; % SAVE POINTER ADDRESS                                  41015300
      IF NOT(RECV OR XMIT) THEN RECV:=TRUE; % DEFAULT OPTION            41015400
      IF TYPE:=SCAN(I,WORD,"9",MAXPTR)=5 THEN ERR("INCMPLT",7,8);       41015500
      IF TYPE = 1 THEN % ALPHA WORD                                     41015600
         BEGIN                                                          41015700
         MATCH(WORD.[6:42],"TO     ") % OPTIONAL WORD                   41015800
            BEGIN PTR := I; GO TO CHARACTERS; END;                      41015900
         MATCH(WORD.[6:42],"HEX    ")                                   41016000
            BEGIN PTR:=I; HEX:=TRUE; GO TO CHARACTERS; END;             41016100
         END; % IF ALPHA WORD                                           41016200
      WORD := NCHRS := 0; NC:=1+REAL(HEX); % INITIALIZE                 41016300
      FOR I:=1 STEP 1 UNTIL MAXCHARS DO % SCAN INPUT CHARACTERS         41016400
         BEGIN                                                          41016500
         IF NOT NEXTCHRS(PTR,CHAR,NC,(I=1),MAXPTR) THEN GO STOP1;       41016600
         NCHRS := NCHRS + 1;                                            41016700
         IF HEX THEN % HEXADECIMAL INPUT                                41016800
            BEGIN                                                       41016900
            IF (H1:=CHAR.[36:6]) GTR 7 THEN ERR(H1,8,8); % NOT 7 BIT CD 41017000
            IF (H2:=CHAR.[42:6]) GTR 9 THEN % NOT DIGIT                 41017100
            IF NOT (H2 GTR 16 AND H2 LSS 23) THEN ERR(H2,8,8) % NOT HEX 41017200
            ELSE H2 := H2 - 7; % HEX EQUIVALENT OF LETTERS              41017300
            WORD := H2 & H1[40:44:4] & WORD[16:24:24];                  41017400
            END % IF HEX                                                41017500
         ELSE WORD := LOOKUP(ASCII,CHAR) & WORD[16:24:24];              41017600
         END I LOOP;                                                    41017700
STOP1: IF NCHRS=0 THEN ERR("INCMPLT",7,8);                              41017800
      IF CLASS LSS 7 THEN % SET STATION CHARACTERS - CLASS 18           41017900
         BEGIN                                                          41018000
         PRM1 := 0 & 18[1:41:7] & (REAL(NOT FALSE))[16:40:8];           41018100
         IF CLASS=1 THEN % INTERRUPT CHARACTER                          41018200
            BEGIN PRM2 := 0 & WORD[01:41:7]; PRM1.[18:1]:=0; END        41018300
         ELSE IF CLASS=2 THEN % EOT CHARACTER                           41018400
            BEGIN PRM2 := 0 & WORD[08:40:8]; PRM1.[19:1]:=0; END        41018500
         ELSE IF CLASS=3 THEN % BACKSPACE CHARACTER                     41018600
            BEGIN PRM2 := 0 & WORD[16:40:8]; PRM1.[20:1]:=0; END        41018700
         ELSE IF CLASS=4 THEN % DELETION CHARACTER                      41018800
            BEGIN PRM2 := 0 & WORD[24:40:8]; PRM1.[21:1]:=0; END        41018900
         ELSE IF CLASS=5 THEN % ABORT CHARACTER                         41019000
            BEGIN PRM2 := 0 & WORD[32:40:8]; PRM1.[22:1]:=0; END        41019100
         ELSE IF CLASS=6 THEN % EOR CHARACTER                           41019200
            BEGIN PRM2 := 0 & WORD[40:40:8]; PRM1.[23:1]:=0; END;       41019300
         GO TO COMM;                                                    41019400
         END; % IF CLASS LSS 7                                          41019500
      IF CLASS=26 THEN % SET STATION ADDRESS                            41019600
         BEGIN                                                          41019700
         PRM1 := 0 & CLASS[1:41:7] & REAL(NOT FALSE)[16:40:8] &         41019800
         REAL(NOT XMIT)[22:47:1] & REAL(NOT RECV)[23:47:1];             41019900
         IF XMIT THEN PRM2:=WORD ELSE PRM3:=WORD;                       41020000
         GO TO COMM;                                                    41020100
         END; % IF SETTING STATION ADDRESS                              41020200
NUMBERS:                                                                41020300
      I := PTR; % SAVE POINTER ADDRESS                                  41020400
      IF NOT(RECV OR XMIT) THEN RECV:=TRUE; % DEFAULT OPTION            41020500
      IF TYPE:=SCAN(I,WORD,"9",MAXPTR)=5 THEN ERR("INCMPLT",7,8);       41020600
      IF TYPE=1 THEN MATCH(WORD.[6:42],"TO     ") % OPTIONAL WORD       41020700
         BEGIN PTR := I; GO TO NUMBERS; END;                            41020800
      WORD := NCHRS := 0;                                               41020900
      FOR I:=1 STEP 1 UNTIL MAXCHARS DO % SCAN INPUT CHARACTERS         41021000
         BEGIN                                                          41021100
         IF NOT NEXTCHRS(PTR,CHAR,1,(I=1),MAXPTR) THEN GO STOP2;        41021200
         NCHRS := NCHRS + 1;                                            41021300
         IF CHAR GTR 9 THEN ERR(CHAR,8,8); % NOT A DIGIT                41021400
         WORD := LOOKUP(ASCII,CHAR) & WORD[16:24:24];                   41021500
         END I LOOP;                                                    41021600
STOP2: IF NCHRS = 0 THEN ERR("INCMPLT",7,8);                            41021700
      PRM1 := 0 & CLASS[1:41:7] & REAL(NOT FALSE)[16:40:8] &            41021800
      REAL(NOT XMIT)[22:47:1] & REAL(NOT RECV)[23:47:1];                41021900
      PRM2:=IF RECV THEN WORD ELSE 0 & WORD[1:25:23];                   41022000
      GO TO COMM;                                                       41022100
NAMES:                                                                  41022200
      IF TYPE:=SCAN(PTR,WORD,"9",MAXPTR)=5 THEN ERR("INCMPLT",7,8);     41022300
      IF TYPE=1 THEN MATCH(WORD.[6:42],"TO     ") GO NAMES; % OPTIONAL  41022400
      IF TYPE NEQ 2 THEN ERR(WORD,WORD.[1:5],8); % NOT A NUMBER         41022500
      PRM1 := 0 & CLASS[1:41:7] & REAL(NOT FALSE)[16:40:8];             41022600
      PRM2 := WORD.[6:42];                                              41022700
COMM:                                                                   41022800
      DCPCOMM(LLUSED,PRM1,PRM2,PRM3);                                   41022900
      WRITEASTERISK:=TRUE;                                              41023000
      IAM := 0;                                                         41023100
      END CASE 5;                                                       41023200
   END ALL CASES;                                                       41023300
EXIT:                                                                   41023400
END PROCEDURE SETIT;                                                    41023500
FILL ASCII[*] WITH % ASCII EQUIVALENTS OF BCL CHARACTERS                90442500
  ..0060006100620063,  ..0064006500660067,  ..0070007100430100,         90442510
  ..0077007200760041,  ..0053010101020103,  ..0104010501060107,         90442520
  ..0110011100560133,  ..0046005000740137,  ..0134011201130114,         90442530
  ..0115011601170120,  ..0121012200440052,  ..0055005100730047,         90442540
  ..0040005701230124,  ..0125012601270130,  ..0131013200540045,         90442550
  ..0136007501350042;                                                   90442560
$#PATCH NUMBER 14 FOR CANDE.XII    CONTAINS  1 CARDS         C                 &
   MSGPTR := 18;                                                        04002100
$#PATCH NUMBER 15 FOR CANDE.XII    CONTAINS  7 CARDS                           &
            END ELSE GO TO FINISH;                                      00103930
  IF NOT CONTINUEBIT THEN % FIRST CALL ON THE ROUTINE                   76019500
    BEGIN STACK[BASE+1]:=0; CONTINUEBIT:=TRUE; PREV:=-1; END;           76019600
  IF PREVRCW - BASE LEQ 34 THEN % NOT ENOUGH ROOM                       76019700
    BEGIN CLEARSTACK(STACK[BASE+2],TSIZ);                               76019800
    GOERR("NO ROOM",MSGVAL);                                            76019900
    END;                                                                76020000
$#PATCH NUMBER 16 FOR CANDE.XII    ONTAINS  1 CARDS          C                 &
              DOING := TEMP := 1; DOGHOUSE[LL]:=0;                      31000600
$#PATCH NUMBER 17 FOR CANDE.XII   CONTAINS  7 CARDS          C                 &
         IF RESEQVERB AND FILETYPE=1 THEN % RESEQ BASIC FILE            52027210
         IF HAVENEWBASE AND HAVERESEQRANGE THEN GOERR("BASIC  ",15);    52027220
         IF EVENTS[2].[36:6]=1 AND RESEQVERB THEN % BASIC RESEQ         52033000
            BEGIN                                                       52033010
            IF HAVERESEQRANGE AND HAVENEWBASE THEN GOERR("BASIC  ",15); 52033020
            RUN1:="RESEQB ";                                            52033030
            END;                                                        52033040
$# PATCH NUMBER 18 FOR CANDE.XII    CONTAINS  13 CARDS       C                 &
         IF RUNNING OR COMPILING THEN GO TO MESAGE;                     25001900
         IF RUNNING OR COMPILING THEN GO TO MESAGE;                     25002600
      IF PREVRCW - BASE LEQ 35 THEN % NOT ENOUGH ROOM                   25004710
      IF INITIATEDWHILEBUSY THEN % ORIGINAL REQUEST INCOMPLETE          25004715
         BEGIN                                                          25004720
         IF RUNNING THEN LITOUT("RUNNING",1) ELSE                       25004725
         IF COMPILING THEN LITOUT("CMPILNG",1) ELSE                     25004730
            BEGIN                                                       25004735
            L[0]:=" STATUS"; BLANK(L[0]); L[1]:="OK     "; BLANK(L[1]); 25004740
            TWXOUT(LL,L[0],11,2-CONCISEBIT);                            25004745
            END;                                                        25004750
         GO TO QUIT;                                                    25004755
         END;                                                           25004760
$#PATCH NUMBER 19 FOR CANDE.XII    CONTAINS  6 CARDS         C                 &
            , INQUIRY            = LCW.[08:1] #  %                      00020900
   INQUIRY := FALSE; CONTINUEBIT:=FALSE;                                04001600
         INQUIRY:=FALSE; GO TO QUIT;                                    25004755
      TWXOUT(LL,WORK[0],64,2 - CONCISEBIT); INQUIRY := FALSE;           25005500
              IF REASON=VTEACHER THEN % DONT PERMIT MULTIPLE INQUIRIES  90208100
                 IF INQUIRY THEN GO EXIT ELSE INQUIRY := TRUE;          90208200
$#PATCH NUMBER 20 FOR CANDE.XII    CONTAINS 1 CARDS          C                 &
            IF (A[BASE+1+REAL(LIB)]:=A[SREG]).[42:6] NEQ " " THEN       00215600
$#PATCH NUMBER  21  FOR  CANDE.XII CONTAINS  1  CARDS      C                 &&&
                GOERR ("NAME   ", 6);                                   58001300
$#PATCH NUMBER  22  FOR  CANDE.XII CONTAINS  3  CARDS      C                 &&&
      IF RESEQVERB OR RESEQPARAM THEN IF WORK[5]=0 THEN WORK[5]:=-1;    52025610
         WORK[11]:=WORK[5]; % DELETION RANGE                            52028000
         WORK[21]:=IF WORK[5]=-1 THEN 0 ELSE WORK[5];                   52028010
$#PATCH NUMBER  23  FOR  CANDE.XII CONTAINS 1   CARDS      C                 &&&
      IF DATAENABLED THEN MSGPTR:=68;% YOU ARE IN DATA MODE             25004770
$#PATCH NUMBER  24  FOR  CANDE.XII CONTAINS 309 CARDS      C                 &&&
DEFINE   VEQUATE        = 43#; % LABEL EQUATION                         00003320
SAVE ARRAY L[0:30];                                                     00006700
DEFINE        NUMOFVERBS = 48#,                                         00008500
DEFINE ESPTABLESIZE = 40#; % INCREASE THIS IF "NO ROOM" ERRORS          00014300
ARRAY ESPTABLE[0:ESPTABLESIZE]; % ESP SEGMENTS FOR LABEL EQUATION       00014310
DEFINE        SBASE = 49#; % PROCEDURE STACK BASE                       00015900
              OPTIONBITS = A[47] #, % USERS "SPECIAL" OPTIONS           00019628
              ESPWORD    = A[48] #, % LABEL EQUATION INFO               00019630
              ESPFLAG    = ESPWORD.[1:1]#,                              00019632
              ESPCOUNT   = ESPWORD.[2:8]#,                              00019634
              FIRSTESP   = ESPWORD.[20:28]#;                            00019636
            , EQUATED            = LCW.[06:1] #  % LABEL EQUATED        00020700
         ARRAY SCANPTR[0:(LLWORDS-SBASE)]; % POINTERS TO WORK ARRAY     00029910
%***********************************************************************00087602
PROCEDURE ENTERESP(LL,ADRS,A);VALUE LL,ADRS; REAL LL,ADRS; ARRAY A[0];  00087603
%***********************************************************************00087604
% THIS PROCEDURE IS USED TO KEEP TRACK OF ESP DISK SEGMENTS ALLOCATED   00087605
% FOR LABEL EQUATION USEAGE. EACH LOGICAL LINE HAS A VARIABLE CALLED    00087606
% "ESPWORD" WHICH IS COMPRISED OF:                                      00087607
%          ESPFLAG = ESPWORD.[1:1] ( ON WHEN ESPTABLE IS FULL )         00087608
%          ESPCOUNT= ESPWORD.[2:8] ( NUMBER OF ENTRIES IN ESPTABLE )    00087609
%          FIRSTESP= ESPWORD.[20:28] (1ST ESP ADDRESS FOR LBL. EQN. )   00087610
% EACH ENTRY IN "ESPTABLE" IS COMPRISED OF:                             00087611
%          ESPTABLE[I].[1:1] (MARKS THIS WORD IN USE )                  00087612
%          ESPTABLE[I].[2:8] (LOGICAL LINE USING THIS WORD )            00087613
%          ESPTABLE[I].[20:28] (ADDRESS OF ESP SEGMENT IN USE )         00087614
% "ESPTABLE" IS DECLARED [0:ESPTABLESIZE]                               00087615
% WHEN A POSITIVE VALUE FOR LL IS PASSED TO THIS PROCEDURE, AN          00087616
% ENTRY IS PLACED IN ESPTABLE FOR THAT LINE AND ESPCOUNT IS INCREMENTED.00087617
% ESPFLAG IS TURNED ON IN THE EVENT THAT THE ESPTABLE IS COMPLETELY     00087618
% FILLED. WHEN A NEGATIVE VALUE FOR LL IS PASSED TO THIS PROCEDURE,     00087619
% AND A NON-NEGATIVE VALUE FOR ADRS IS PASSED, THE ENTRIES FOR THE      00087620
% SPECIFIED LINE ARE REMOVED FROM THE TABLE, AND ESPWORD IS RESET       00087621
% TO ZERO. WHEN BOTH LL AND ADRS ARE NEGATIVE, THE ENTRIES FOR THE      00087622
% SPECIFIED LINE ARE REMOVED FROM THE TABLE AND THE ESP SEGEMENTS       00087623
% ADDRESSED BY EACH TABLE ENTRY ARE RETURNED TO THE SYSTEM. ESPWORD     00087624
% IS ALSO RE-SET TO ZERO.                                               00087625
   BEGIN                                                                00087626
   BOOLEAN DELINK,FORGET; REAL I,WORD; LABEL EXIT;                      00087628
   DELINK := BOOLEAN(LL.[1:1]); LL:=ABS(LL);                            00087630
   FORGET := BOOLEAN(ADRS.[1:1]); ADRS:=ABS(ADRS);                      00087632
   FOR I:=0 STEP 1 UNTIL ESPTABLESIZE DO                                00087634
   IF DELINK THEN                                                       00087636
      BEGIN                                                             00087638
      IF BOOLEAN((WORD:=ESPTABLE[I]).[1:1]) THEN % VALID ENTRY          00087640
      IF WORD.[2:8]=LL THEN % ENTRY FOR THIS LINE                       00087642
         BEGIN                                                          00087644
         ESPCOUNT := ESPCOUNT - 1;                                      00087646
         IF FORGET THEN                                                 00087648
         IF (WORD:=WORD.[20:28]) NEQ 0 THEN FORGETESPDISK(WORD);        00087650
         ESPTABLE[I]:=0;                                                00087652
         IF ESPCOUNT = 0 THEN % NO MORE ENTRIES FOR THIS LINE           00087654
            BEGIN                                                       00087656
            ESPWORD := 0; GO TO EXIT;                                   00087658
            END;                                                        00087660
         END; % IF ENTRY FOR THIS LINE                                  00087662
      END % IF DELINK                                                   00087664
   ELSE                                                                 00087666
      BEGIN % ENTERING NEW VALUE IN TABLE                               00087668
      IF NOT BOOLEAN(ESPTABLE[I].[1:1]) THEN % AVAILABLE WORD           00087670
         BEGIN                                                          00087672
         ESPTABLE[I] := -ADRS & LL[2:40:8];                             00087674
         ESPCOUNT := ESPCOUNT + 1;                                      00087676
         GO TO EXIT;                                                    00087678
         END; % IF AVAILABLE WORD                                       00087680
      END; % IF ENTERING NEW VALUE                                      00087682
   ESPFLAG := 1; % NO ROOM IN TABLES                                    00087684
EXIT:                                                                   00087686
   END PROCEDURE ENTERESP;                                              00087688
REAL STREAM PROCEDURE SCAN(PTR,STACKWORD,COMPVALUE,WORKENDADRS,PNTR);   00087800
% VOID                                                                  00088600
   SV:=SI; SI:=LOC SV; DI:=PNTR; DS:=WDS; SI:=SV; DI:=STACKWORD;        00089510
   IF TYPE:=SCAN(P,A[S],"Z",ENDADRS,SCANPTR[S-SBASE])=5 THEN % EOR      00101000
      K:=P; A[S:=S+1] :=                                                00101700
      IF SCAN(P,I,"Z",ENDADRS,SCANPTR[S-SBASE])=5 AND K=P THEN 1 ELSE 0;00101710
            IF SCAN(P,A[S:=S+1],"9",ENDADRS,SCANPTR[S-SBASE]) GTR 2 THEN00103300
            GO TO SETERROR;                                             00103310
         IF TYPE:=SCAN(P,A[S],"9",ENDADRS,SCANPTR[S-SBASE])=5 THEN      00104700
         GO TO FINISH;                                                  00104710
SNEAKIN:       IF TYPE:=SCAN(P,A[S],"Z",ENDADRS,SCANPTR[S-SBASE])=5 THEN00105300
               GO TO SETERROR;                                          00105310
         IF TYPE:=SCAN(P,A[S],"9",ENDADRS,SCANPTR[S-SBASE]) NEQ 2 THEN  00108500
         GO TO SETERROR;                                                00108510
 % VOID                                                                 04001300
   IF EQUATED THEN ENTERESP(-LL,-0,A[*]); % GIVE BACK ESP DISK          04002010
   EQUATED := FALSE;                                                    04002020
 % VOID                                                                 14003380
   REAL T,PTR,INDX,X;                                                   25000400
         T := SCAN(PTR,A[BASE+INDX],"Z",WORKENDADRS,X);                 25001200
              IF EQUATED THEN                                           27003160
              IF NOT( (COMPAR(RUN2,"CANDE  ")) OR                       27003165
                      (COMPAR(RUN2,"DISK   "))) THEN                    27003170
                 BEGIN                                                  27003175
                 WORK[13]:=FIRSTESP; % LABEL EQUATION                   27003180
                 ENTERESP(-LL,0,A[*]); % SCRATCH TABLE ENTRIES          27003185
                 EQUATED := FALSE;                                      27003190
                 END;                                                   27003195
REAL I,H1,H2,NC,PTR,CHAR,WORD,MAXPTR,NCHRS,TYPE,CLASS,MAXCHARS,SETBIT,X;41000400
      WHILE (TYPE:=SCAN(PTR,WORD,"9",MAXPTR,X)) NEQ 5 DO                41005400
SPO:  WHILE(TYPE:=SCAN(PTR,WORD,"9",MAXPTR,X)) NEQ 5 DO                 41011400
      IF TYPE:=SCAN(I,WORD,"9",MAXPTR,X)=5 THEN ERR("INCMPLT",7,8);     41015500
      IF TYPE:=SCAN(I,WORD,"9",MAXPTR,X)=5 THEN ERR("INCMPLT",7,8);     41020600
      IF TYPE:=SCAN(PTR,WORD,"9",MAXPTR,X)=5 THEN ERR("INCMPLT",7,8);   41022300
%***********************************************************************43000000
PROCEDURE EQUATE(LCW,A); BOOLEAN LCW; ARRAY A[0];                       43000100
%***********************************************************************43000200
   BEGIN                                                                43000300
   REAL I,WORD,UNIT,TYPE,NAM,NAM1,NAM2,VERBV,MAXSREG;                   43000400
   BOOLEAN DSK,OBJ,BKUP,EQLTOG,FILTOG,LIBTOG,CHECKTYPE;                 43000500
   LABEL WAIT,ERR,EXIT;                                                 43000600
   DEFINE ENTRY = A[BASE+1]#, THISESP = A[BASE+2]#;                     43000700
   %....................................................................43000800
   STREAM PROCEDURE FILEID(ADRS,ARAY); VALUE ADRS;                      43000900
   %....................................................................43001000
   BEGIN                                                                43001100
   SI:=ADRS; DI:=ARAY; DI:=DI+1;                                        43001200
   63(IF SC=ALPHA THEN ELSE JUMP OUT; DS:=CHR; TALLY:=TALLY+1);         43001300
   ADRS:=TALLY; SI:=LOC ADRS; SI:=SI+7; DI:=ARAY; DS:=CHR;              43001400
   END STREAM PROCEDURE FILEID;                                         43001500
CASE DOING OF                                                           43001600
BEGIN                                                                   43001700
BEGIN % CASE 0 .........................................................43001800
   IF NOT CONTINUEBIT THEN % FIRST CALL ON THE ROUTINE                  43001900
      BEGIN                                                             43002000
      CONTINUEBIT := TRUE;                                              43002100
      FIRSTESP:=THISESP:=ESP1; % SAVE FIRST ESP RECORD ADDRESS          43002200
      ENTRY:=0; TEMP:=3; CLEAR(L[0],29); L[14]:=..14;                   43002300
      SREG := BASE - A[BASE]; MAXSREG := SREG + A[SREG].[18:15];        43002400
      END % IF FIRST CALL                                               43002500
   ELSE                                                                 43002600
      BEGIN                                                             43002700
      BASE := BASE + 3; % SHIFT UP TO SAVE STACK VALUES                 43002800
      SCANNER(WORKADRS,A[*],LCW,WORKENDADRS);                           43002900
      BASE := (I:=BASE) -3; % RE-ADJUST BASE FOR THIS PROCEDURE         43003000
      IF BOOLEAN(A[I].[17:1]) THEN % ERROR DURING SCAN                  43003100
         BEGIN                                                          43003200
         WORD := A[I+2]; MSGPTR := 65; GO TO ERR;                       43003300
         END;                                                           43003400
      IF (TYPE:=A[I].[3:3]) NEQ 1 THEN % NOT A VERB                     43003500
         BEGIN                                                          43003600
         IF TYPE=0 OR TYPE=5 THEN GO WAIT; % COMMENT OR NULL            43003700
         IF TYPE=4 THEN % SSMSG                                         43003800
            BEGIN                                                       43003900
            BASE:=I; SSMSG; BASE:=I-3; LITOUT("#      ",1); GO WAIT;    43004000
            END;                                                        43004100
         WORD:=IF TYPE=2 THEN A[I+1] ELSE A[I+2]; % NUMBER OR SPEC CHR  43004200
         MSGPTR := 65; GO TO ERR;                                       43004300
         END; % IF NOT A VERB                                           43004400
      IF (VERBV := A[I+1].[40:8]) = VRUN OR VERBV = VEXECUTE THEN       43004500
         BEGIN                                                          43004600
         PARAM := A[I+1].[18:15]+1; TEMP := 1;                          43004700
         MOVE(PARAM+1,WORDS,A[I],A[BASE]); % SHIFT LEFT FOR "DOIT"      43004800
         WANT := VERBV; IAM := 0; CONTINUEBIT:=FALSE;                   43004900
         DOING := IF VERBV=VRUN THEN 4 ELSE 0;                          43005000
         GO TO EXIT;                                                    43005100
         END;                                                           43005200
      IF VERBV NEQ VEQUATE THEN % WRONG VERB                            43005300
         BEGIN                                                          43005400
         WORD := VERBTABLE[A[I+1].[9:9]]; MSGPTR := 65;                 43005500
         GO TO ERR;                                                     43005600
         END;                                                           43005700
      IF ENTRY=0 THEN % STARTING NEW SEGMENT                            43005800
         BEGIN                                                          43005900
         DISKWAIT(1,L,30,THISESP);                                      43006000
         L[29]:=ESP1; % ESTABLISH LINK TO NEXT SEGMENT                  43006100
         DISKWAIT(0,L,30,THISESP);                                      43006200
         CLEAR(L[0],29); L[14]:=..14;                                   43006300
         THISESP:= ESP1; % ADDRESS OF NEXT SEGMENT TO BE USED           43006400
         END % IF ENTRY = 0                                             43006500
      ELSE DISKWAIT(1,L,30,THISESP); % RECOVER PREVIOUS VALUES          43006600
      SREG := I+1; MAXSREG := SREG+A[SREG].[18:15];                     43006700
      END; % IF NOT THE FIRST CALL                                      43006800
   %............................................SYNTAX CHECK............43006900
   UNIT := 12; MSGPTR := 8; FILTOG:=TRUE; % INITIALIZE VALUES           43007000
   FOR SREG := SREG + 1 STEP 1 UNTIL MAXSREG DO                         43007100
      BEGIN % EXAMINE INPUT STRING                                      43007200
      %.......................................NUMERIC...................43007300
      IF (WORD:=A[SREG]).[1:5]=0 THEN % NUMERIC PARAMETER               43007400
         BEGIN                                                          43007500
         IF EQLTOG AND WORD=0 THEN OBJ:=TRUE ELSE GO ERR;               43007600
         END % IF NUMERIC                                               43007700
      %.......................................ALPHA.....................43007800
      ELSE IF WORD.[3:3] GTR 0 THEN % ALPHA STRING                      43007900
         BEGIN                                                          43008000
         WORD := (NAM:=WORD).[6:42];                                    43008100
         IF FILTOG THEN % LOOKING FOR INTERNAL NAME                     43008200
            BEGIN                                                       43008300
            FILEID(SCANPTR[SREG-SBASE],L[ENTRY+4]); % INTERNAL NAME     43008400
            FILTOG := FALSE;                                            43008500
            END % IF FILTOG                                             43008600
         ELSE IF EQLTOG THEN % "=" PRECEEDED THIS WORD                  43008700
            BEGIN                                                       43008800
            L[ENTRY+1]:=IF OBJ THEN WORD.[6:36] ELSE WORD;              43008900
            NAM2:=NAM; L[ENTRY]:=0; % ASSUME ENTRY IS FID               43009000
            EQLTOG := NOT(CHECKTYPE:=TRUE);                             43009100
            END % IF EQLTOG                                             43009200
         ELSE IF LIBTOG THEN % "/" PRECEEDED THIS WORD                  43009300
            BEGIN                                                       43009400
            L[ENTRY]:=L[ENTRY+1]; NAM1:=NAM2;                           43009500
            L[ENTRY+1]:=WORD; NAM2:=NAM;                                43009600
            LIBTOG := FALSE;                                            43009700
            END % IF LIBTOG                                             43009800
         ELSE IF CHECKTYPE THEN % CHECK HARDWARE TYPE                   43009900
            BEGIN                                                       43010000
                 MATCH(WORD,"BACKUP ") BKUP:=TRUE                       43010100
            ELSE MATCH(WORD,"BACK   ")                                  43010200
               BEGIN                                                    43010300
               IF SREG LSS MAXSREG THEN                                 43010400
               IF A[SREG+1].[3:3]=2 THEN                                43010500
               MATCH(A[SREG+1].[6:42],"UP     ")                        43010600
                  BEGIN                                                 43010700
                  BKUP:=TRUE; SREG:=SREG+1;                             43010800
                  END;                                                  43010900
               END % IF "BACK UP"                                       43011000
            ELSE MATCH(WORD,"REMOTE ") UNIT:=14                         43011100
            ELSE MATCH(WORD,"DISK   ")                                  43011200
               BEGIN                                                    43011300
               UNIT := IF BKUP THEN 15 ELSE 12;                         43011400
               BKUP := FALSE;                                           43011500
               END                                                      43011600
            ELSE MATCH(WORD,"SERIAL ") UNIT := 12                       43011700
            ELSE MATCH(WORD.[6:30],"PRINT") UNIT:=1                     43011800
            ELSE MATCH(WORD,"PUNCH  ") UNIT := 0                        43011900
            ELSE MATCH(WORD,"CARD   ") UNIT := 0                        43012000
            ELSE MATCH(WORD,"RANDOM ") UNIT := 10                       43012100
            ELSE MATCH(WORD,"UPDATE ") UNIT := 13                       43012200
            ELSE MATCH(WORD,"PAPER  ") UNIT := 7                        43012300
            ELSE MATCH(WORD,"SPO    ") UNIT := 11                       43012400
            ELSE MATCH(WORD,"TAPE   ")                                  43012500
               BEGIN                                                    43012600
               IF UNIT NEQ 7 THEN % PAPER TAPE                          43012700
               UNIT := IF BKUP THEN 6 ELSE 2;                           43012800
               BKUP := FALSE;                                           43012900
               END % IF TAPE                                            43013000
            ELSE GO ERR;                                                43013100
            END % IF CHECKTYPE                                          43013200
         ELSE GO ERR;                                                   43013300
         END % IF ALPHA STRING                                          43013400
      ELSE                                                              43013500
      %.......................................SPECIAL CHR...............43013600
         BEGIN                                                          43013700
         IF WORD = "=" THEN EQLTOG := TRUE                              43013800
         ELSE IF WORD="/" THEN LIBTOG := TRUE                           43013900
         ELSE GO ERR;                                                   43014000
         END; %IF SPECIAL CHARACTER                                     43014100
      END WHILE STATEMENT;                                              43014200
   %..........................................END SCAN..................43014300
   IF NOT CHECKTYPE THEN % INCOMPLETE REQUEST                           43014400
      BEGIN                                                             43014500
      WORD:="INCMPLT"; MSGPTR := 66; GO ERR;                            43014600
      END;                                                              43014700
   L[ENTRY+3] := UNIT;                                                  43014800
   IF DSK:=(UNIT=10 OR UNIT=12 OR UNIT=13) THEN % DISK                  43014900
      BEGIN                                                             43015000
      IF L[ENTRY]=0 THEN % MUST HAVE BOTH NAMES FOR DISK                43015100
         BEGIN                                                          43015200
         L[ENTRY]:=L[ENTRY+1]; NAM1:=NAM2;                              43015300
         L[ENTRY+1]:=NAM2:=USERCODE;                                    43015400
         END;                                                           43015500
      IF (WORD:=L[ENTRY]).[42:6] NEQ " " THEN                           43015600
      IF WORD.[6:6] NEQ 0 THEN                                          43015700
         BEGIN                                                          43015800
         MSGPTR := 42; GO TO ERR;                                       43015900
         END;                                                           43016000
 %                                                                      43016100
      IF FINDAWORD(NAM1,RESWRDTABLE[1],NUMOFRESWRDS) NEQ 0 THEN         43016200
         BEGIN MSGPTR := 29; GO TO ERR; END;                            43016300
      END; % IF DISK                                                    43016400
   DISKWAIT(0,L,30,THISESP); % WRITE OUT THIS SEGMENT                   43016500
   IF ENTRY=0 THEN % STARTING NEW SEGMENT                               43016600
      BEGIN                                                             43016700
      ENTERESP(LL,THISESP,A[*]); % ENTER SEGMENT ADDRESS IN TABLE       43016800
      IF BOOLEAN(ESPFLAG) THEN % NO ROOM IN ESPTABLE FOR THIS ENTRY     43016900
         BEGIN                                                          43017000
         WORD:="NO ROOM"; MSGPTR := 64; GO ERR;                         43017100
         END;                                                           43017200
      THISESP := ESP1; ESP1 := GETESPDISK; EQUATED := TRUE;             43017300
      END; % IF STARTING NEQ SEGMENT                                    43017400
   ENTRY := IF ENTRY=0 THEN 14 ELSE 0; % 2 EQUATIONS PER SEGMENT        43017500
   IF DSK THEN MATCH(NAM2.[6:42],USERCODE) ELSE % OUTSIDE FILE          43017600
      BEGIN                                                             43017700
      FIND(LL&IAM[33:41:7],0,NAM1,NAM2,USERCODE);                       43017800
      A[BASE]:=NAM1;                                                    43017900
      DOING := 1; WAITFOR := IAM; GO TO EXIT;                           43018000
      END;                                                              43018100
WAIT:                                                                   43018200
   WAITFOR := VINPUT;                                                   43018300
   IF SCHEDULINE THEN REQUESTIP(LL);                                    43018400
   GO TO EXIT;                                                          43018500
   END; % CASE 0                                                        43018600
   %....................................................................43018700
   BEGIN % CASE 1 - RESULTS OF DIRECTORY SEARCH                         43018800
   IF EVENTS[1] LSS 0 THEN % FILE NOT IN DIRECTORY                      43018900
      BEGIN                                                             43019000
      WORD:=A[BASE]; MSGPTR := 67; GO TO ERR;                           43019100
      END;                                                              43019200
   DOING := 0; GO TO WAIT;                                              43019300
   END; % CASE 1                                                        43019400
   END ALL CASES;                                                       43019500
ERR:                                                                    43019600
   ERRSW := WORD;                                                       43019700
   IF EQUATED THEN ENTERESP(-LL,-0,A[*]); % GIVE BACK ESP DISK          43019800
   IAM := VERROR;                                                       43019900
   EQUATED := FALSE; CONTINUEBIT := FALSE;                              43020000
EXIT:                                                                   43020100
   END PROCEDURE EQUATE;                                                43020200
 % VOID                                                                 69004900
              EQUATE(LCW,A[*]);        % LABEL EQUATION                 90285000
                   "2EQUATE ", ..3001360000000053, % 43                 90403420
$#PATCH NUMBER  25  FOR  CANDE.XII CONTAINS  3  CARDS      C                 &&&
                GOERR2; WANT:=WAITFOR:=0; IAM:=VERROR; GO EXIT; END#;   00024800
                IF A[BASE+1].[42:6] NEQ " " THEN GOERR(A[BASE+1],42);   14006416
                A[BASE+1]:=A[BASE+1].[6:36]; A[BASE+2]:=WORK[13];       14006420
$#PATCH NUMBER  26  FOR  CANDE.XII CONTAINS  10 CARDS      C                 &&&
    RUN2:=IF BOOLEAN(FND) THEN "DISK   " ELSE "CANDE  ";                76030300
    IF BOOLEAN(FND) THEN                                                76030600
        BEGIN                                                           76030700
        IAM:=VDISPATCH; COMMONVALUE:=ESP1;                              76030710
        END                                                             76030720
     ELSE                                                               76030730
        BEGIN                                                           76030740
       WANT:=VDISPATCH;DOING:=2;IF NOT CONCISE THEN LITOUT("WAIT.  ",1);76030750
        END;                                                            76030760
 % VOID                                                                 76030900
$#PATCH NUMBER  27  FOR  CANDE.XII CONTAINS   1 CARDS      C                 &&&
$ VOID 59999999                                                         59000000
$#PATCH NUMBER  28  FOR  CANDE.XII CONTAINS 117 CARDS      C                 &&&
%***********************************************************************59000000
PROCEDURE SAVER(LCW,A); BOOLEAN LCW; ARRAY A[0];                        59000100
%***********************************************************************59000200
BEGIN                                                                   59000300
LABEL ERR,CASE1,FINISHED,EXIT;                                          59000400
REAL T,F;                                                               59000500
DEFINE DEFAULTSAVEFACTOR = 7#;                                          59000600
CASE DOING OF                                                           59000700
   BEGIN                                                                59000800
      BEGIN % CASE 0 - SYNTAX ANALYSIS                                  59000900
      IF FILENAME=0 THEN % NO WORK FILE                                 59001000
         BEGIN                                                          59001100
         ERRSW:="NO FILE"; MSGPTR := 1; GO TO ERR;                      59001200
         END;                                                           59001300
      IF (T:=A[SREG:=BASE-A[BASE]].[18:15]) GTR 1 THEN % TOO MANY PARAMS59001400
         BEGIN                                                          59001500
         ERRSW:= A[SREG+2]; MSGPTR := 4; GO TO ERR;                     59001600
         END;                                                           59001700
      IF T=0 THEN A[BASE] := -1 ELSE                                    59001800
      IF (A[BASE]:=A[SREG+1]).[1:5] NEQ 0 THEN % NOT UNSIGNED NUMBER    59001900
         BEGIN                                                          59002000
         ERRSW := A[BASE+1]; MSGPTR := 4; GO TO ERR;                    59002100
         END;                                                           59002200
      TEMP := 1;                                                        59002300
      IF TPCOUNT = 0 THEN GO TO CASE1; % WORK FILE ALREADY UPDATED      59002400
      WANT := VUPDATE;                                                  59002500
      DOING := 1;                                                       59002600
      LITOUT("WAIT-  ",NOCRLF);                                         59002700
      END; % CASE 0                                                     59002800
   %....................................................................59002900
      BEGIN % CASE 1 - WORKFILE UPDATED                                 59003000
CASE1:                                                                  59003100
      IF NOT CONCISE THEN GENFILINE(FILENAME,TYPETABLE[FILETYPE]);      59003200
      MATCH(FILENAME,SOURCEFILE) % FILE ALREADY SAVED                   59003300
         BEGIN                                                          59003400
         FIND(LL&IAM[33:41:7],0,FILENAME,USERCODE,USERCODE);            59003500
         DOING := 3;                                                    59003600
         WAITFOR := IAM;                                                59003700
         END                                                            59003800
      ELSE                                                              59003900
         BEGIN                                                          59004000
         T:=LL&VMCPMSG[33:41:7];                                        59004100
         F:=IF A[BASE] LSS 0 THEN DEFAULTSAVEFACTOR ELSE A[BASE];       59004200
         REPLACE(T,SOURCEFILE,USERCODE,                                 59004300
           FILENAME,USERCODE,F&FILETYPE[32:42:6]);                      59004400
         IF GOODOBJ THEN                                                59004500
         REPLACE(T,SOURCEFILE.[6:36],USERCODE,                          59004600
           FILENAME.[6:36],USERCODE,F&FILETYPE[32:42:6])                59004700
         ELSE REMOVEFILE(T,FILENAME.[6:36],USERCODE);                   59004800
         WANT:=WAITFOR:=VMCPMSG;                                        59004900
         DOING := PARAM := LIBMSGCTR := 2;                              59005000
         LIBMTNCE := TRUE;                                              59005100
         END;                                                           59005200
      END; % CASE 1                                                     59005300
   %....................................................................59005400
      BEGIN % CASE 2 - RESULTS OF FILE REPLACE                          59005500
      IF A[BASE+1] NEQ 7 THEN % NOT REPLACED - PROBABLY FILE IN USE     59005600
         BEGIN                                                          59005700
         ERRSW:="IGNORED"; MSGPTR := 22; GO TO ERR;                     59005800
         END;                                                           59005900
      T:=MAKEFN("1S",LL);                                               59006000
      MAKEFILE(LL&13[33:41:7],1,T,USERCODE,FILETYPE,0);                 59006100
      SOURCEFILE:=FILENAME;                                             59006200
      IF GOODOBJ THEN OBJECTFILE:=FILENAME.[6:36];                      59006300
      IF FILESOK THEN CANCELCKPT(A[*]);                                 59006400
FINISHED:                                                               59006500
      LITOUT("SAVED. ",2-CONCISEBIT);                                   59006600
      WRITEASTERISK := FALSE;                                           59006700
      IAM := 0;                                                         59006800
      END; % CASE 2                                                     59006900
   %....................................................................59007000
      BEGIN % CASE 3 - RESULTS OF DIRECTORY SEARCH                      59007100
      IF EVENTS[1] LEQ 0 THEN                                           59007200
         BEGIN                                                          59007300
         ERRSW := FILENAME; MSGPTR := 67; GO TO ERR;                    59007400
         END;                                                           59007500
     IF EVENTS[2].[36:6] NEQ FILETYPE OR A[BASE] GEQ 0 THEN % CHANGE HDR59007600
         BEGIN                                                          59007700
         LLDISKREAD := A[BASE+1] := EVENTS[2].[18:15]; % HEADER ADDRESS 59007800
         WANT := VDISKREAD;                                             59007900
         TEMP := 2;                                                     59008000
         DOING := 4;                                                    59008100
         END                                                            59008200
      ELSE GO TO FINISHED;                                              59008300
      END; % CASE 3                                                     59008400
   %....................................................................59008500
      BEGIN % CASE 4 - HEADER IN CORE                                   59008600
      WORK[4].[36:6]:=FILETYPE;                                         59008700
      IF A[BASE] GEQ 0 THEN WORK[3].[2:10]:=A[BASE]; % SAVE FACTOR      59008800
      DISKWRITE(A[BASE+1]);                                             59008900
      IF GOODOBJ AND A[BASE] GEQ 0 THEN % CHANGE OBJECT HEADER          59009000
         BEGIN                                                          59009100
         FIND(LL&IAM[33:41:7],0,FILENAME.[6:36],USERCODE,USERCODE);     59009200
         DOING := 5;                                                    59009300
         WAITFOR := IAM;                                                59009400
         END                                                            59009500
      ELSE GO TO FINISHED;                                              59009600
      END; % CASE 4                                                     59009700
   %....................................................................59009800
      BEGIN % CASE 5 - RESULTS OF OBJECT DIRECTORY SEARCH               59009900
      IF EVENTS[1] LEQ 0 THEN GO TO FINISHED;                           59010000
      LLDISKREAD := A[BASE+1] := EVENTS[2].[18:15];                     59010100
      WANT := VDISKREAD;                                                59010200
      DOING := 6;                                                       59010300
      END; % CASE 5;                                                    59010400
   %....................................................................59010500
      BEGIN % CASE 6 - OBJECT HEADER IN CORE                            59010600
      WORK[3].[2:10]:=A[BASE];                                          59010700
      DISKWRITE(A[BASE+1]);                                             59010800
      GO TO FINISHED;                                                   59010900
      END; % CASE 6                                                     59011000
   END ALL CASES;                                                       59011100
GO TO EXIT;                                                             59011200
ERR:                                                                    59011300
WANT:=WAITFOR:=0; IAM:=VERROR;                                          59011400
EXIT:                                                                   59011500
END PROCEDURE SAVER;                                                    59011600
$#PATCH NUMBER  29  FOR  CANDE.XII CONTAINS 43  CARDS      I                 &&&
DEFINE        NUMOFVERBS = 49#,                                         00008500
BOOLEAN LOK,UNLK,PUB,WORKFILE,NAM1,NAM2,SRC,OBJ,WTH;                    68000500
LABEL RESTRT,SELECT,SECUR,CHECK,ERR1,ERR2,EXIT;                         68000600
      I := VERBTABLE[A[SREG].[9:9]].[6:42]; % VERB NAME                 68001100
      MATCH(I,"UNLOCK ") UNLK := TRUE ELSE                              68001110
      MATCH(I,"PUBLIC ") PUB  := TRUE ELSE LOK := TRUE;                 68001120
         NAM1:=TRUE; A[BASE]:=0; % ASSUME WORK FILE NAME                68002000
       A[BASE]:=(I:=SREG+1)&(IMAX:=SREG+PC)[18:33:15]&                  68002300
       R(PUB)[15:47:1]&R(LOK)[16:47:1]&R(UNLK)[17:47:1];                68002310
RESTRT:                                                                 68002320
      FOR I:=I STEP 1 UNTIL IMAX DO                                     68002400
            IF UNLK OR PUB OR WTH THEN GO ERR1; % INVALID PARAMETER     68004000
         ELSE                                                           68005500
            BEGIN                                                       68005510
            A[BASE].[33:15]:=I; GO TO SELECT;                           68005520
            END;                                                        68005530
      A[BASE]:=0; % END OF PARAMETER LIST                               68005610
      IF UNLK THEN A[BASE+3]:=A[BASE+4]:=..14 ELSE                      68005900
      IF LOK  THEN A[BASE+3]:=A[BASE+4]:=   0 ELSE                      68005910
         BEGIN                                                          68005920
         A[BASE+3]:=..14; A[BASE+4]:=0;                                 68005930
         END;                                                           68005940
      TEMP := 1;                                                        68007200
      IF A[BASE+1] NEQ 7 THEN % SECURITY MAINTENANCE IGNORED            68010200
         WORD := A[BASE+1];                                             68010400
CHECK:                                                                  68010710
      IF A[BASE]=0 THEN IAM:=0 ELSE                                     68010800
         BEGIN                                                          68010810
         I:=A[BASE].[33:15]; IMAX:=A[BASE].[18:15];                     68010820
         PUB :=B(A[BASE].[15:1]); LOK:=B(A[BASE].[16:1]);               68010830
         UNLK:=B(A[BASE].[17:1]);                                       68010840
         GO TO RESTRT;                                                  68010850
         END;                                                           68010860
GO TO CHECK; % CHECK FOR MORE PARAMETERS                                68012000
UNL = SPECS.[44:1]#,  SOL = SPECS.[43:1]#,  PUB = SPECS.[42:1]#;        74001100
   ELSE IF WORK[5]=12 AND WORK[6] NEQ 12 THEN "PUBLIC "                 74005600
   ELSE IF WORK[5]=12 AND WORK[6]=12 THEN "UNLOCKD"                     74005610
   ELSE "       ";                                                      74005620
   LABEL DUMMY;                                                         74007410
      ELSE MATCH(WORD,"PUBLIC ") PUB:=TRUE                              74010610
   IF CHK(SPECS.[1:12]) GTR 1 THEN GOERR("FILTYPE",31);                 74012800
   IF CHK(SPECS.[42:4]) GTR 1 THEN GOERR("SECURTY",8);                  74012900
                   "6PUBLIC ", ..3001400000000104, % 68 ALSO            90403430
$#PATCH NUMBER  30  FOR  CANDE.XII CONTAINS  2  CARDS      C                 &&&
         GO TO QUIT;                                                    25004755
QUIT: IAM:=0; INQUIRY:=FALSE;                                           25005800
$#PATCH NUMBER  31  FOR  CANDE.XII CONTAINS  1  CARDS      I                 &&&
$ VOID 36999999                                                         36000000
$#PATCH NUMBER  32  FOR  CANDE.XII CONTAINS  92 CARDS      I                 &&&
              RLCW      = A[17] #,     % STORED VALUE OF CURRENT LCW    00016900
   RLCW := REAL(LCW); % SAVE TOGGLES IN STACK                           00063210
  RLCW := REAL(LCW); % SAVE TOGGLES IN STACK                            00063810
         TEMP := 7;                                                     01012100
         A[BASE+6]:=WORK[2]; % SAVE PASSWORD                            01013700
% VOID                                                                  01014400
         MATCH(A[BASE+6],A[BASE+2].[6:42]) % PASSWORD                   01015300
                    DEVICE := REAL(NOT FALSE);                          06001800
               IF (WAITFOR:=REAL(NOT(FALSE))= DEVICE                    06002500
LABEL BAD,FINDCHKPT,MAKESURE,CASE7,EXIT;                                09000500
    GOODOBJ := BOOLEAN(WORK[7].[12:1]);                                 09005810
     GOODOBJ := BOOLEAN(WORK[27].[12:1]);                               09007910
    GOODOBJ := BOOLEAN(WORK[17].[12:1]);                                09008410
   IF GOODOBJ THEN                                                      09012510
      BEGIN                                                             09012520
      FIND(LL&IAM[33:41:7],0,SOURCEFILE.[6:36],USERCODE,USERCODE);      09012530
      DOING := 7; WAITFOR := IAM;                                       09012540
      END ELSE GO TO CASE7;                                             09012550
   END CASE 6;                                                          09012560
   BEGIN % CASE 7                                                       09012570
  IF EVENTS[1]=7 THEN OBJECTFILE:=SOURCEFILE.[6:36] ELSE GOODOBJ:=FALSE;09012580
CASE7:                                                                  09012590
  END CASE 7;                                                           09013500
%***********************************************************************36000000
PROCEDURE     CHNGPSWD(LCW,A);   BOOLEAN LCW;   ARRAY A[0];             36000100
%***********************************************************************36000200
BEGIN                                                                   36000300
LABEL ERR,EXIT;                                                         36000400
STREAM PROCEDURE  OLDPSWD(W);                                           36000500
   BEGIN DI:=W; DS:=30LIT"PLEASE ENTER YOUR OLD PASSWORD"; END;         36000600
STREAM PROCEDURE  NEWPSWD(W);                                           36000700
   BEGIN DI:=W; DS:=28LIT"NEXT ENTER YOUR NEW PASSWORD"; END;           36000800
STREAM PROCEDURE  VFYPSWD(W);                                           36000900
   BEGIN DI:=W; DS:=31LIT"PLEASE REPEAT YOUR NEW PASSWORD"; END;        36001000
%.......................................................................36001100
CASE DOING OF                                                           36001200
   BEGIN                                                                36001300
      BEGIN % CASE 0 - REQUESTING CURRENT PASSWORD                      36001400
      IF SCHEDULINE THEN GOERR("CHANGE ",40);                           36001500
      OLDPSWD(WORK); TWXOUT(LL,WORK[0],30,1);                           36001600
      BLACKOUT;                                                         36001700
      CLEAR(A[BASE],2); TEMP:=3; DOING:=1;                              36001800
      WAITFOR := VINPUT;                                                36001900
      END CASE 0;                                                       36002000
   %....................................................................36002100
      BEGIN % CASE 1 - SCANNING FOR CURRENT PASSWORD                    36002200
      SCANPSWD(WORK[1],A[BASE],WORKENDADRS);                            36002300
      MATCH(A[BASE].[6:42],"       ") GO ERR;                           36002400
      NEWPSWD(WORK); TWXOUT(LL,WORK[0],28,1);                           36002500
      BLACKOUT;                                                         36002600
      DOING := 2;                                                       36002700
      WAITFOR := VINPUT;                                                36002800
      END CASE 1;                                                       36002900
   %....................................................................36003000
      BEGIN % CASE 2 - SCANNING FOR NEW PASSWORD                        36003100
      SCANPSWD(WORK[1],A[BASE+1],WORKENDADRS);                          36003200
      MATCH(A[BASE+1].[6:42],"       ") GO ERR;                         36003300
      VFYPSWD(WORK); TWXOUT(LL,WORK[0],31,1);                           36003400
      BLACKOUT;                                                         36003500
      DOING := 3;                                                       36003600
      WAITFOR := VINPUT;                                                36003700
      END CASE 2;                                                       36003800
   %....................................................................36003900
      BEGIN % CASE 3 - SCANNING FOR VERIFICATION                        36004000
      SCANPSWD(WORK[1],A[BASE+2],WORKENDADRS);                          36004100
      MATCH(A[BASE+1],A[BASE+2]) ELSE GO ERR;                           36004200
      LLDISKREAD := USERLOC;                                            36004300
      WANT := VDISKREAD;                                                36004400
      DOING := 4;                                                       36004500
      END CASE 3;                                                       36004600
   %....................................................................36004700
      BEGIN % CASE 4 - USERS/CANDE RECORD IN CORE                       36004800
      MATCH(A[BASE].[6:42],WORK[2]) ELSE GO ERR;                        36004900
      WORK[2]:=A[BASE+1].[6:42];                                        36005000
      DISKWRITE(USERLOC);                                               36005100
      LLDISKREAD := USRBASE[0]; % USERS/CANDE RECORD ZERO               36005200
      WANT := VDISKREAD;                                                36005300
      DOING := 5;                                                       36005400
      END CASE 4;                                                       36005500
   %....................................................................36005600
      BEGIN % CASE 5 - PUT NEW DATE IN USERS/CANDE FILE                 36005700
      WORK[2]:=DATE;                                                    36005800
      DISKWRITE(USRBASE[0]);                                            36005900
      IAM := 0;                                                         36006000
      END CASE 5;                                                       36006100
   END ALL CASES;                                                       36006200
GO TO EXIT;                                                             36006300
ERR:                                                                    36006400
LITOUT("BADCODE",1); MSGPTR:=21; LINECLEAR(LCW,A[*]);                   36006500
EXIT:                                                                   36006600
END PROCEDURE CHANGEPASSWORD;                                           36006700
   CANCELCKPT(A[*]);                                                    57012110
$#PATCH NUMBER  33  FOR  CANDE.XII CONTAINS  8  CARDS      I                 &&&
            , NOSTOP             = LCW.[26:1] #  %DONT STOP SCHD. ON ERR00022550
         WRITEASTERISK:=TRUE; NOSTOP:=FALSE;                            01020600
              IF SCHEDULINE THEN IF NOT NOSTOP THEN                     14007810
      IF SCHEDULINE THEN IF NOT NOSTOP THEN SCHEDGOTO(-1);              25005700
         ELSE MATCH(WORD,"NOSTOP ")                                     41006400
            BEGIN NOSTOP:=BOOLEAN(SETBIT); IAM:=0; GO EXIT; END         41006410
              IF SCHEDULINE THEN IF NOT NOSTOP THEN SCHEDGOTO(-1);      55004775
    IF SCHEDULINE AND BOOLEAN(FREP) AND NOT NOSTOP THEN SCHEDGOTO(-1);  76032600
$#PATCH NUMBER  34  FOR  CANDE.XII CONTAINS  9  CARDS      C                 &&&
              IF REAL(ALLMCPMSG)=0 THEN IAM:=0 ELSE                     03000700
              MATCH(RUN2,"CANDE  ") IAM:=0 ELSE                         03000800
              WANT:=WAITFOR:=VMCPMSG;                                   03000810
   LABEL EXIT;                                                          04000400
   IF RUNNING THEN MATCH(RUN2,"CANDE  ") GO EXIT;                       04000410
EXIT: IAM:=0;                                                           04002200
      IAM:=0; IF BREAKORWRU THEN LINECLEAR(LCW,A[*]);                   52035100
      IAM:=0; IF BREAKORWRU THEN LINECLEAR(LCW,A[*]);                   56014400
     IAM:=0; IF BREAKORWRU THEN LINECLEAR(LCW,A[*]);                    75002320
