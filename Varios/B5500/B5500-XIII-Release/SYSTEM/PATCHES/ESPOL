$#PATCH NUMBER 1 FOR ESPOL.XII CONTAINS 3 CARDS                              &&&
% E S P O L   C O M P I L E R   M A R K     X I I .   3    02/15/71     00000000
 500          DIALS: A LITERAL IS EXPECTED.                             00305100
261, "DUP ",278, "LBC ",294,"LFC ",322,"ZP1 ",384, "IDV ",532, "ISD ",  02399000
$#PATCH NUMBER 2 FOR ESPOL.XII CONTAINS  42 CARDS                            &&&
STREAM PROCEDURE GETVOID(VP,NCR,VR,LCR); VALUE NCR;                     01756000
    BEGIN                                                               01757000
    LABEL L,TRANS;                                                      01758000
    LOCAL N;                                                            01759000
    SI:=LCR; DI:=LOC N; DS:=CHR; % SAVE COL. 73                         01760000
    SI:=NCR; DI:=VP; DS:=8 LIT "0";                                     01761000
    2(34(IF SC=" " THEN SI:=SI+1 ELSE JUMP OUT 2 TO L));                01762000
    SI:=LCR; TALLY:=8; GO TRANS;% NO VOID RANGE FOUND, USE 73-80.       01763000
L:                                                                      01764000
    IF SC=""" THEN                                                      01765000
         BEGIN                                                          01766000
         SI:=SI+1; DI:=LCR; DS:=1 LIT"""; % STOPPER FOR SCAN            01767000
         NCR:=SI; % TEMP. STORAGE, SINCE NCR IS "LOCAL" TO GETVOID.     01768000
         8(IF SC=""" THEN JUMP OUT ELSE                                 01769000
              BEGIN  TALLY:=TALLY+1; SI:=SI+1 END);                     01770000
         END                                                            01771000
    ELSE BEGIN                                                          01772000
         NCR:=SI; % TEMP. STORAGE, SINCE NCR IS "LOCAL" TO GETVOID.     01773000
         DI:=LCR; DS:=1 LIT" "; % STOPPER FOR SCAN                      01774000
         8(IF SC=" " THEN JUMP OUT ELSE                                 01775000
              BEGIN  TALLY:=TALLY+1; SI:=SI+1 END);                     01776000
         END;                                                           01777000
TRANS:                                                                  01778000
    SI:=LOC N; DI:=LCR; DS:=CHR; % RESTORE COLUMN 73                    01779000
    SI:=NCR; DI:=VP; DI:=DI+8; % RESTORE POINTERS.                      01780000
    N:=TALLY; DI:=DI-N; DS:=N CHR;                                      01781000
    DI:=DI-8; VP:=DI; % I.E., "LOC VP":=DI.                             01782000
    DI:=VR; SI:=LOC VP; DS:=WDS;% ADDRESS OF VOID RANGE.                01783000
    END OF GETVOID;                                                     01784000
REAL VOIDCR,VOIDPLACE;                                                  01785000
$VOIDT 01811002                                                         01804000
$VOIDT 01816002                                                         01816000
                   BEGIN  GETVOID(VOIDPLACE,NCR,VOIDCR,LCR);            02369200
$VOIDT 02369542                                                         02369510
              IF Q = "5VOIDT" THEN BEGIN                                02369600
                   VOIDTAPE:=TRUE;                                      02369700
                   GETVOID(VOIDPLACE,NCR,VOIDCR,LCR);                   02369800
                   READACARD; GO SCANAGAIN END;                         02369900
              IF Q="3SET00" THEN                                        02369910
                   BEGIN SETMODULES; GO TO PERCENT  END                 02369920
              ELSE IF Q="7INCLU" OR Q="4OMIT0" THEN                     02369930
                        BEGIN USEMODULES; GO TO PERCENT  END;%          02369940
$#PATCH NUMBER 3 FOR ESPOL.XII CONTAINS 74 CARDS                             &&&
BEGIN COMMENT OUTERMOST BLOCK;                                          00500000
INTEGER ERRORCOUNT;                                                     00501000
    COMMENT RR1-RR11 ARE USED IN SOME PROCEDURES IN                     00505000
    PLACE OF LOCALS TO SAVE STACK SPACE;                                00506000
REAL RR1,RR2,RR3,RR4,RR5,RR6,RR7,RR8,RR9,RR10,RR11;                     00507000
    COMMENT SOME OF THE RRI ARE USED TO PASS FILE INFORMATION           00508000
         TO THE MAIN BLOCK;                                             00509000
    COMMENT EXAMIN RETURNS THE CHARACTER AT ABSOLUTE ADDRESS NCR;       00510000
REAL STREAM PROCEDURE EXAMIN(NCR); VALUE NCR;                           00511000
         BEGIN SI~NCR;DI~LOC EXAMIN;DI~DI+7; DS~CHR END;                00512000
INTEGER STREAM PROCEDURE GETF(Q);VALUE Q;                               00523000
    BEGIN SI~LOC GETF; SI~SI-7;DI~LOC Q;DI~DI+5;                        00524000
         SKIP 3 DB; 9(IF SB THEN DS~SET ELSE DS~RESET; SKIP SB);        00525000
         DI~LOC Q;SI~Q;DS~WDS;SI~Q;GETF~SI                              00526000
    END GETF;                                                           00527000
COMMENT START SETTING UP FILE PARAMETERS;                               00528000
         IF EXAMIN(RR11~GETF(3)+"Y08") !12 THEN RR1~5 ELSE              00529000
         BEGIN RR1~2;RR2~150 END;                                       00530000
         IF EXAMIN(RR11+5) !12 THEN RR3~4 ELSE                          00531000
         BEGIN RR3~2; RR4~150 END;                                      00532000
         IF EXAMIN(RR11+10)=12 THEN                                     00533000
              BEGIN RR5~2;RR6~10;RR7~150 END ELSE                       00534000
         BEGIN RR5~1;RR6~56;RR7~10 END;                                 00535000
         IF EXAMIN(RR11+15)=12 THEN                                     00536000
              BEGIN RR8~10;RR9~150 END ELSE                             00537000
              BEGIN RR8~56;RR9~10 END;                                  00538000
BEGIN COMMENT MAIN BLOCK;                                               01000000
$VOID 01000101                                                          01000100
$VOID 01339001                                                          01338000
      ARRAY NEWTAPBUF[0:9];                                             01490510
$VOID 01521001                                                          01507000
 FILE OUT CODE DISK SERIAL[1:1](1,1023);                                01556900
FILE IN CARD(RR1,10,RR2);                                               01557000
FILE OUT LINE DISK SERIAL[20:2400](RR3,15,RR4,SAVE 10);                 01558000
$ VOID 01559101                                                         01558900
SAVE FILE OUT NEWTAPE DISK SERIAL[20:2400](RR5,RR6,RR7,SAVE 1);         01560000
FILE IN TAPE "0CRDIMG"(2,RR8,RR9);                                      01561000
FILE OUT CODISK DISK SERIAL[20:500](5,30);                              01561300
 FILE OUT DISK DISK[1:2000]"MCP""DISK"(2,30,SAVE 999);                  01561400
 XII. ";%USE FIRST SIX COLUMNS FOR MARK LEVEL    ESPOL COMPILER         01826200
 3    ";%USE FIRST SIX COLUMNS FOR PATCH LEVEL   ESPOL COMPILER         01826400
         DI~NEW;DS~10 WDS;                                              02018000
$VOID 02019001                                                          02019000
$VOID 02070001                                                          02067000
$VOID 02194001                                                          02190000
                        READ(TAPE)[EOF];                                02195000
                        MAXTLCR~TLCR~MKABS(TAPE(9));                    02196000
                             WRITNEW (NEWTAPBUF,FCR) THEN               02237000
$VOID 02241001                                                          02238000
                        WRITE(NEWTAPE,10,NEWTAPBUF[*]);                 02242000
                     IF MAXTLCR=0 THEN                                  02373000
                     BEGIN INTEGER STREAM PROCEDURE FEJ(F,T);VALUE T;   02374000
                        BEGIN SI~F;DI~LOC T;DS~WDS;SI~T;SI~SI-16;       02375000
                             DI~LOC FEJ;DS~WDS END FEJ;                 02376000
                        STREAM PROCEDURE FIX(F,T);VALUE T;              02377000
                        BEGIN SI~F;SI~SI-24;DI~LOC T;DS~WDS;DI~T;       02378000
                             DI~DI+47;SKIP 4 DB;DS~2 RESET;DI~DI+48;    02379000
                             DI~DI+48;DS~8 LIT"00#01+0#"; END FIX;      02379100
                        IF GT1~FEJ(TAPE,0)=10 THEN                      02379200
                        BEGIN REWIND(TAPE); FIX(TAPE,0) END;            02379300
                        MAXTLCR~GT1+TLCR~9+MKABS(TAPE(0));              02379400
                        LASTUSED~2;                                     02379500
                   END; END                                             02380000
         BEGIN OMITOG~WRITNEW (NEWTAPBUF,FCR);                          02591500
              MOVE(1,INFO[LASTSEQROW,LASTSEQUENCE],NEWTAPBUF[9]);       02591550
$VOID 02591901                                                          02591600
              WRITE(NEWTAPE,10,NEWTAPBUF[*]);                           02592000
         END;%                                                          02592100
$VOID 09276001                                                          09276000
$ VOID 09280001                                                         09279000
              IF NEWTOG THEN LOCK(NEWTAPE,RELEASE);                     09282500
                   LOCK(LINE,RELEASE); END;                             09390000
                   LOCK(DISK,*);                                        09430100
         END OF MAIN BLOCK ;                                            16495210
$# PATCH NUMBER   4 FOR ESPOL.XII    CONTAINS  5 CARDS       I                 &
% E S P O L   C O M P I L E R   M A R K     X I I .   5    04/15/71     00000000
 5    ";%USE FIRST SIX COLUMNS FOR PATCH LEVEL   ESPOL COMPILER         01826400
                   IF Q = "3PRT00" THEN LISTOG.[47:1]:=PRTOG:=TRUE ELSE 02387000
                   BEGIN   LISTOG.[47:1]:=DEBUGTOG:=PRTOG:=TRUE;        02390000
                   Q = "3SGL00" THEN LISTOG.[47:1]:=SINGLTOG:=TRUE ELSE 02413100
$#PATCH NUMBER   5 FOR ESPOL.XII  CONTAINS 12 CARDS          I                 &
 DEFINE LASTSEQUENCE = 145#,                                            01569000
   ZP1 = 322#,    COMMENT (2411) 7.4.10.8   CONDITIONAL HALT;           01677000
   SCI =1003#,    COMMENT (7655)            SCAN OUT INITIALIZE;        01677050
   SAN =1004#,    COMMENT (7661)            SYSTEM ATTENTION NEEDED;    01677100
   SCS =1019#;    COMMENT (7755)            SCAN OUT STOP;              01677150
1003,"SCI ",1004,"SAN ",1019,"SCS ",                                    02401100
 1023,1023,1023,1023,1023,1023,1023,1023,1023,1023,1023,1023,1023,1023, 02401900
 64,0,64,0,64,0,64,0;                                                   02412000
    OCT0030000000040003, "5TIMES", "|#      ",               %645       09128300
    OCT1310117530000002, "3SCI00",                           %648       09128400
    OCT1310117540000002, "3SAN00",                           %650       09128500
    OCT1310157730000000, "3SCS00",                           %652       09128600
$#PATCH NUMBER  6 FOR  ESPOL.XII  CONTAINS 32  CARDS       I                 $$$
$VOID                                                                   00000000
%#######################################################################00001000
%                                                                       00001010
%                   B-5700 ESPOL COMPILER                               00001020
%                        MARK XII.06                                    00001030
%                        MAY 15, 1971                                   00001040
%                                                                       00001050
%#######################################################################00001060
%                                                                       00001070
COMMENT#################################################################00001110
                   ERROR MESSAGES                                       00001120
########################################################################00001130
%                                                                       00001140
$VOIDT 01850000                                                         01819999
PROCEDURE DATIME;                                                       01820000
    BEGIN                                                               01821000
    INTEGER H,MIN,Q;                                                    01822000
    ALPHA STREAM PROCEDURE DATER(DATE); VALUE DATE;                     01823000
         BEGIN                                                          01824000
         DI:=LOC DATER; SI:=LOC DATE; SI:=SI+2;                         01825000
         2(DS:=2 CHR; DS:=LIT"/"); DS:=2 CHR;                           01826000
         END OF DATER;                                                  01827000
    H:=TIME1 DIV 216000; MIN:=(TIME1 DIV 3600) MOD 60;                  01828000
    WRITE(LINE[DBL],                                                    01829000
          <X22,"BURROUGHS B-5700 ESPOL COMPILER MARK ",                 01830000
"XII.06"                                                                01831000
           ,"  ",A6,"DAY, ",O,",  ",I2,":",A2,X1,A1,"M."//>,            01832000
          TIME(6),DATER(TIME(5)),12|REAL(Q:=H MOD 12=0)+Q,              01833000
           Q:=MIN MOD 10+(MIN DIV 10)|64,                               01834000
           IF H}12 THEN "P" ELSE "A");                                  01835000
    NOHEADING:=FALSE;                                                   01836000
    END OF DATIME;                                                      01837000
$#PATCH NUMBER 7 FOR ESPOL.XII CONTAINS 10 CARDS           I                 &&&
%                        MARK XII.08                                    00001030
%                       JUNE 15, 1971                                   00001040
BEGIN COMMENT OUTERMOST BLOCK;                                          00500000
 INTEGER ERRORCOUNT; COMMENT NUMBER OF ERROR MSGS. MCP WILL TYPE        00501000
                   SYNTX ERR AT EOJ IF THIS IS NON-ZERO. MUST BE @R+25; 00502000
 INTEGER SAVETIME; COMMENT SAVE-FACTOR FOR CODE FILE, GIVEN BY MCP.     00503000
                   IF COMPILE & GO =0. FOR SYNTAX, =-1. MUST BE AT R+26;00504000
 INTEGER CARDNUMBER;                                                    00504100
"XII.08"                                                                01831000
              CARDNUMBER ~ CONV(INFO[LASTSEQROW,LASTSEQUENCE-1], 5, 8); 02246100
$#PATCH NUMBER 8 FOR ESPOL.XII CONTAINS 16 CARDS           I                 &&&
$VOIDT 01804002                                                         01799999
FORMAT                                                                  01800000
         PUTPRT(X2,A4,"-",A1);                                          01804000
$VOIDT 01819002                                                         01818000
         BEGIN                                                          02233000
$VOIDT 02233302                                                         02233100
    BEGIN                                                               02590500
$VOIDT 02590802                                                         02590600
$VOIDT 05340002                                                         05335000
$VOIDT 05378002                                                         05376001
IF PRTOG THEN                                                           05376100
   IF SINGLTOG THEN WRITE(LINE,PUTPRT,B2D(GS),                          05376200
                 IF Q THEN "P" ELSE "S")                                05376300
$VOIDT 05378002                                                         05376999
         ELSE WRITE(LINE[DBL],PUTPRT,B2D(GS),IF Q THEN "P"              05377000
                        ELSE "S");   END GETSPACE;                      05378000
$#PATCH NUMBER   9 FOR ESPOL.XII CONTAINS 106 CARDS        I                 &&&
%                        MARK XIII.0                                    00001030
%                       JULY 15, 1971                                   00001040
DEFINE LIN = LINBUF #; COMMENT PRINT OUTPUT BUILT IN LIN;               01559010
DEFINE WRITELINE = IF SINGLTOG THEN WRITE(LINE,15,LIN[*]) ELSE          01559030
                                  WRITE(LINE[DBL],15,LIN[*])#;          01559039
COMMENT  "BLANKET" BLANKS OUT N+1 WORDS IN "THERE";                     01737300
STREAM PROCEDURE BLANKET(N,THERE); VALUE N;                             01737350
    BEGIN                                                               01737400
    DI:=THERE; DS:=8 LIT" "; SI:=THERE; DS:=N WDS;                      01737450
    END BLANKET;                                                        01737500
         BUG(X24,4(A4,X2));                                             01802000
$VOIDT 01804002                                                         01803000
"XIII.0"                                                                01831000
$VOIDT 02264352                                                         02264150
         BLANKET(14,A); OCTALWORDS(ELBAT[JEDEN],A,6);                   02265100
    BLANKET(14,A); OCTALWORDS(ELBAT[72],A,4);                           02265250
              BLANKET(14,A); ALPHAWORDS(INFO[JEDEN,DWA],A,6);           02265600
              BLANKET(14,A); OCTALWORDS(INFO[JEDEN,DWA],A,6);           02265700
         BLANKET(14,A); ALPHAWORDS(INFO[JEDEN,252],A,4);                02265850
         BLANKET(14,A); OCTALWORDS(INFO[JEDEN,252],A,4);                02265950
                IF Q = "3PRT00" THEN PRTOG:=TRUE ELSE                   02387000
INTEGER PROCEDURE GETSPACE(S,L); VALUE S,L;                             03051000
                                 INTEGER L; BOOLEAN S; FORWARD;         03051001
$VOIDT 04264002                                                         04249000
$VOIDT 04287700                                                         04276999
COMMENT DEBUG PRINTS OUT OBJECT CODE IF "DEBUGN" IS SET;                04277000
PROCEDURE DEBUG(S); VALUE S; REAL S;                                    04277500
    BEGIN  REAL T1;                                                     04278000
    IF SINGLTOG THEN                                                    04278500
      WRITE(LINE,BUG,B2D(L),                                            04279000
            IF STREAMTOG THEN                                           04279500
               SEARCH(COP,S.[42:6])                                     04280000
         ELSE IF T1:=S.[46:2]=1 THEN SEARCH(WOP,S.[36:10])              04280500
         ELSE WOP[T1] , IF STREAMTOG THEN                               04281000
        B2D(S.[36:6]) ELSE IF T1=1 THEN WOP[1]                          04281500
   ELSE B2D(S.[36:10]),B2D(S))                                          04282000
 ELSE WRITE(LINE,BUG,B2D(L),                                            04282500
            IF STREAMTOG THEN                                           04283000
               SEARCH(COP,S.[42:6])                                     04283500
         ELSE IF T1:=S.[46:2]=1 THEN SEARCH(WOP,S.[36:10])              04284000
         ELSE WOP[T1] , IF STREAMTOG THEN                               04284500
        B2D(S.[36:6]) ELSE IF T1=1 THEN WOP[1]                          04285000
   ELSE B2D(S.[36:10]),B2D(S));                                         04285500
    END DEBUG;                                                          04286000
$VOIDT 04304002                                                         04303000
              THEN PUT(A&(GNAT:=GETSPACE(TRUE,L.LINK+1))[16:37:11],L)   05132000
$VOIDT 05195001                                                         05189999
PROCEDURE WRITEPRT(PORS,N,GS); VALUE PORS,N,GS; INTEGER PORS,N,GS;      05325010
    BEGIN                                                               05325020
    LABEL EXIT;                                                         05325030
    STREAM PROCEDURE FILLIT(LIN,PORS,CELL,N,ID);                        05325040
                            VALUE PORS,CELL,N;                          05325050
         BEGIN                                                          05325060
         LOCAL COUNT;                                                   05325070
         LABEL M0,M1,M2,M3,M4,M5,M6,M7,XIT;                             05325080
         SI:=LOC PORS; SI:=SI+3; DI:=LIN; % "PRT" OR "STACK".           05325090
         IF SC="P" THEN                                                 05325100
              BEGIN  DS:=3 CHR; DS:=LIT"(";  END                        05325110
         ELSE BEGIN                                                     05325120
              DS:=5 CHR; DS:=LIT"("; SI:=LOC CELL; SI:=SI+5;            05325130
              IF SC}"6" THEN DS:=2 LIT"F-" ELSE DS:=2 LIT"F+";          05325140
              COUNT:=DI; DI:=LOC CELL; DI:=DI+4;                        05325150
              DS:=11 RESET; DI:=COUNT;                                  05325160
              END;                                                      05325170
         SI:=LOC CELL; SI:=SI+4; TALLY:=4; % LOCATION.                  05325180
         3(IF SC="0" THEN % DONT PRINT LEADING ZEROES.                  05325190
              BEGIN SI:=SI+1; TALLY:=TALLY+63  END ELSE JUMP OUT);      05325200
         COUNT:=TALLY; DS:=COUNT CHR; TALLY:=0; COUNT:=TALLY;           05325210
         DS:=4 LIT") = "; CELL:=DI; % SAVE OUR PLACE.                   05325220
         CI:=CI+N;                                                      05325230
         GO M0;                                                         05325240
         GO M1;                                                         05325250
         GO M2;                                                         05325260
         GO M3;                                                         05325270
         GO M4;                                                         05325280
         GO M5;                                                         05325290
         GO M6;                                                         05325300
         GO M7;                                                         05325310
M0:      SI:=ID; SI:=SI+2; DI:=LOC COUNT;                               05325320
         DI:=DI+7; DS:=CHR; DI:=CELL;  DS:=COUNT CHR;                   05325330
         GO XIT;                                                        05325340
M1:      DI:=CELL; DS:=19 LIT"*TEMPORARY STORAGE*"; GO XIT;             05325350
M2:      DI:=CELL;                                                      05325360
           DS:=36 LIT"*LIST, LABEL, OR SEGMENT DESCRIPTOR*"; GO XIT;    05325370
M3:      DI:=CELL; DS:=27 LIT"*CASE STATEMENT DESCRIPTOR*"; GO XIT;     05325380
M4:      DI:=CELL; DS:=19 LIT"*FORMAT DESCRIPTOR*"; GO XIT;             05325390
M5:      DI:=CELL; DS:=24 LIT"*OUTER BLOCK DESCRIPTOR*"; GO XIT;        05325400
M6:      DI:=CELL; DS:=20 LIT"*SEGMENT DESCRIPTOR*"; GO XIT;            05325410
M7:      DI:=CELL; DS:=18 LIT"*LABEL DESCRIPTOR*";                      05325420
XIT:                                                                    05325430
         END FILLIT;                                                    05325440
     BLANKET(14,LIN);                                                   05325450
     IF N=1 THEN FILLIT(LIN,PORS,GS,0,ACCUM[1])                         05325460
ELSE IF N>1 THEN FILLIT(LIN,PORS,GS,0,INFO[N.LINKR,N.LINKC])            05325470
ELSE FILLIT(LIN,PORS,GS,ABS(N),N);                                      05325480
    IF NOHEADING THEN DATIME; WRITELINE;                                05325490
    END WRITEPRT;                                                       05325500
INTEGER PROCEDURE GETSPACE(PERMANENT,L); VALUE PERMANENT,L;             05331000
$VOIDT                                                                  05332000
                                         BOOLEAN PERMANENT; INTEGER L;  05333000
$VOIDT 05378002                                                         05376099
    IF PRTOG THEN WRITEPRT(IF Q THEN "PRT  " ELSE "STACK",L,B2D(GS));   05376100
         END GETSPACE;                                                  05378000
                   IF NUMLE THEN FOOT := GETSPACE(FALSE,-1); % TEMP.    08162000
                         ELSE ADDRSF:=GETSPACE(P2,LASTINFO+1);          13347000
             ELSE BEGIN BLKAD:=GETSPACE(TRUE,-6); % SEG. DESCR.         14044000
