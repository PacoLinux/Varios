$#PATCH NUMBER  1 FOR COBOL68.XII  CONTAINS  25 CARDS      C                 &&&
         39                                                             00000700
"        ","        ","        ","        ","        ","        ",  %02100012800
"        ","        ","        ","        ","        ","        ";  %03100013800
"        ","        ","        ","        ","        ","        ",  %04400015300
"        ","        ","        ","        ","        ","        ",  %05700016800
"        ","        ","        ","        ","        ","        ",  %07000018300
"COMPUTAT","IONAL IT","EM MUST ","BE NUMER","IC*     ","        ",  %08700020200
"        ","        ","        ","        ","        ","        ",  %12500024400
"        ","        ","        ","        ","        ","        ",  %14100026200
"        ","        ","        ","        ","        ",  1,         %14400026700
"        ","        ","        ","        ","        ","        ",  %14600026900
"        ","        ","        ","        ","        ","        ",  %15100027400
"        ","        ","        ","        ","        ","        ",  %15600027900
"        ","        ","        ","        ","        ","        ",  %17400029900
"        ","        ","        ","        ","        ","        ";  %17500030000
"        ","        ","        ","        ","        ","        ",  %17900030600
"        ","        ","        ","        ","        ","        ",  %26300040000
         IF WRD2.USF { CMP1 AND LCLASS ! NM THEN ERR(87);               31071000
         IF TYPE = MULT THEN ERRM(72);                                  41071900
         IF KEY = GIVING AND TYPE = ADD THEN ERRM(105);                 41079250
         IF NOT ((INT ~ DNSCAN = INTO) OR KEY = BYV) THEN ERRM(108);    41103100
         IF KEY ! GIVING THEN ERRM(107);                                41107600
         IF KEY ! FROM THEN ERR(106) ELSE STEPP;                        42036500
         IF KEY ! BYV THEN ERR(72);STEPS;                               42037000
         IF KEY ! UNTILV THEN ERR(120) ELSE STEPP;                      42037300
$#PATCH NUMBER 2  FOR COBOL68.XII  CONTAINS  2 CARDS       C                 &&&
              THEN EMITNUM(IF INDEXNAM THEN ((((J~IF1[T]).OCCF-1)       80082900
                   |J.LGHF)+J.OFSF) ELSE (J~IF1[T]).OCCF)               80082950
$#PATCH NUMBER 3  FOR COBOL68.XII CONTAINS 7 CARDS         C                 &&&
         PUTAZERO = IF KEY=ZEROV THEN BEGIN Q.SCF ~ ITGRV; KEY ~ LITV;  10015010
                    ACCUM[1] ~ 0 & 1 SIZEFF; END#,                      10015020
         PUTAZERO;                                                      19003050
         PUTAZERO;                                                      41071150
         PUTAZERO;                                                      41072250
         PUTAZERO;                                                      41075740
$VOID 82004301                                                          82003900
$#PATCH NUMBER 4  FOR COBOL68.XII CONTAINS 9 CARDS         C                 &&&
         IF KEY=ENVIRONMENT OR KEY=DATA OR EOFTOG THEN                  20061900
         IF NOT EOFTOG THEN GO TO XIT;                                  20062200
         BLAND(TMP,15);                                                 20062210
         LITPTR(TMP[0],0,"ERROR: ",7);                                  20062220
         LITPTR(TMP[1],0,"MISSING",7);                                  20062230
         LITPTR(TMP[2],0,"PROGRAM",7);                                  20062240
         WRITE(RITE,15,TMP[*]);                                         20062250
         GO TO GLOBALEND;                                               20062260
         IF NOT EOFTOG THEN                                             49029450
$#PATCH NUMBER 5  FOR COBOL68.XII CONTAINS 14 CARDS        C                 &&&
PROCEDURE SEGSTART; FORWARD;                                            61009750
         IF (RELADDR~RELADDR+2)}8184 THEN                               61010300
    BEGIN                                                               61010310
         MRCLEAN ~ FALSE;                                               61010320
         SEGSTART;                                                      61010330
         ERR(8);                                                        61010340
         T ~ LBLSTRT;                                                   61010355
         LBLSTRT ~ 0;                                                   61010360
         WHILE T!0 DO                                                   61010365
    BEGIN                                                               61010370
         IF2[T].FXF ~ 0;                                                61010373
         T ~ IF4[T].LBLSTRTF;                                           61010375
    END;                                                                61010390
    END;                                                                61010395
$#PATCH NUMBER 6  FOR COBOL68.XII CONTAINS 1  CARDS        C                 &&&
              EMITNUM(NMLITR ~ V1);                                     80074800
$#PATCH NUMBER 7  FOR COBOL68.XII CONTAINS 2  CARDS        C                 &&&
    END;                                                                81023000
         IF (TYPE=0 OR TYPE=4) AND MKSFF THEN AVAL ~ AVAL & LTV [TOPST];81023100
$#PATCH NUMBER 8  FOR COBOL68.XII CONTAINS 3  CARDS        C                 &&&
         SAVSYL ~ HERE DIV 2;                                           81215000
         IF V1!0 THEN ADJUST;                                    % BRFPM89012950
         IF V1!0 THEN ADJUST;                                    % BRTPM89013750
$#PATCH NUMBER 9  FOR COBOL68.XII CONTAINS 15 CARDS        C                 &&&
         IF NOT FRST AND (NOT TYP1 OR TYP2) AND NOT NOMKS THEN          41075760
    BEGIN                                                               41075765
         NOMKS ~ TRUE;                                                  41075770
         MACRO(MKSMM,0,2);                                              41075780
    END;                                                                41075790
         IF NOMKS AND GW2.SUBF!0 THEN MACRO(MKSMM,0,2);   % VOID MKS    41076010
         NOMKS ~ FALSE;                                                 41083350
         IF GW2.SUBF!0 THEN MACRO(MKSMM,0,2);        % VOID MKS         41085550
              IF GW2.SUBF!0 AND NOT FRMT1 THEN MACRO(MKSMM,0,2);% VOID  41096150
         MACRO(MKSMM,0,2);                                    % VOID MKS41110150
         MACRO(MKSMM,0,2);                                    % VOID MKS41111240
         NOMKS ~ TRUE;                                                  41111250
         NOMKS ~ FALSE;                                                 41111350
         IF V2=2 THEN IF MKSFF THEN VOIDMKS ELSE ELSE            % MKSMM89036250
         END;                                                    % MKSMM89037200
$#PATCH NUMBER 10 FOR COBOL68.XII CONTAINS 8  CARDS        C                 &&&
         BOOLEAN RND;                                                   41095700
         SZRL;                                                          41111550
$VOID 81028501                                                          81028100
         IF TESTDIV0 THEN                                               81030010
    BEGIN                                                               81030020
         VALUCALL(ONSIZERROR);                                          81030030
         EMITO(LNOT); HERE ~ RELADDR; EMITF;                            81030040
    END;                                                                81030050
$#PATCH NUMBER 11 FOR COBOL68.XII CONTAINS 6  CARDS        C                 &&&
              THEN IF0[CN].TPF ~  1;                                    42030200
         MACRO(PFTMM,PN2A,PN2B);                                        42030300
    BEGIN                                                               42030500
         IF INDXNM THEN IF0[CN].TPF ~ 1;                                42030600
         MACRO(PFTMM,PN1A,PN1B);                                        42030700
    END;                                                                42030750
$#PATCH NUMBER 12 FOR COBOL68.XII CONTAINS 6  CARDS        C                 &&&
         IF EOFTOG THEN PARAGRAPH;     % DO DEFLM FOR SAVELABEL         49026250
         MAC2(STOPM,2);      % GET INVALID EOJ IN CASE FALL THRU HERE   49040850
         ELSE IF V1=2 THEN                                       % STOPM89035310
              BEGIN                                              % STOPM89035320
                   EMITL(0); EMITO(COM);                         % STOPM89035330
              END                                                % STOPM89035340
$#PATCH NUMBER 13 FOR COBOL68.XII CONTAINS 13 CARDS        C                 &&&
         DATAMAX    =TG[12]#, % SIZE OF LONGEST DATA ARRAY SO FAR       00161650
         IF T ~ ((T+7) DIV 8)>128 THEN                                  32003300
    BEGIN                                                               32003310
         IF T>DATAMAX THEN DATAMAX ~ T;                                 32003320
         WRD ~ 0;                      % GET NEW 77 ARRAY NEXT TIME     32003330
    END;                                                                32003340
         IF CW!0 THEN IF T~(IF1[CW].OFSF+7).WIX>DATAMAX THEN DATAMAX~T; 32032510
         IF DW!0 THEN IF T~(IF1[DW].OFSF+7).WIX>DATAMAX THEN DATAMAX~T; 32032520
         IF (T~FIB[CFIB,18].MAXRS)>DATAMAX THEN DATAMAX ~ T;            33036450
         REAL SXI;                                                      34000150
         SXI ~ NXI;                                                     34002250
         IF T~(IF1[SXI].LGHF+7).WIX>DATAMAX THEN DATAMAX ~ T;           34002450
         ARRAYDEC(0,JUNKA~GETPRTLOC,DATAMAX,0);                         70013900
$#PATCH NUMBER 14 FOR COBOL68.XII CONTAINS 19 CARDS        C                 &&&
         IF TYPE=0 AND ATYP!LTV AND MKSFF THEN AVAL ~ AVAL&LTV [TOPST]; 81023100
         IF TYPE=4 THEN                                                 81023510
    BEGIN                                                               81023520
         TYPE ~ 2;                                                      81023530
         MKSIN ~ TRUE;                                                  81023540
    END ELSE                                                            81023550
         NERF ~ AVAL.PSL>11;                                            81024250
         IF NERF THEN BEGIN EMITL(0); EMITO(EXCH); END;                 81024600
         IF NERF THEN EMITNUM(TEN[ABS(T)+27]);                          81025600
    END ELSE IF TYPE=4 AND NOT SZER THEN                                81027800
    BEGIN                                                               81027810
         TYPE ~ 2;                                                      81027820
         REALEXCH;                                                      81027830
    END;                                                                81027840
         IF TYPE=4 THEN                                                 81028710
    BEGIN                                                               81028720
         TYPE ~ 2;                                                      81028730
         MKSIN ~ TRUE;                                                  81028740
    END;                                                                81028750
$#PATCH NUMBER 15 FOR COBOL68.XII CONTAINS 5  CARDS        C                 &&&
         AVAL ~ 0&12 [TOPSL]&SB [TOPSS]&COMP [TOPSC]&OPR [TOPST];       82008500
         EMITL(0);                                                      82036150
         EMITO(EXCH);                                                   82036160
         PS[PSX ~ PSX-REAL(TYPE=EXPSTAR)] ~ 0&OPR [TOPST]&COMP [TOPSC]  82038900
              & (6+6|REAL(TYPE=EXPSTAR)) [TOPSL];                       82038950
$#PATCH NUMBER 16 FOR COBOL68.XII CONTAINS 1  CARDS        C                 &&&
                       +CODEMAX2+CODEMAX3+DATAMAX1+DATAMAX2+CARDCOUNT   90012700
$#PATCH NUMBER 17 FOR COBOL68.XII CONTAINS 1  CARDS        C                 &&&
              IF MXSEGSZ ~ ICVI(FALSE) > 900 THEN                       20070600
$#PATCH NUMBER 18 FOR COBOL68.XII CONTAINS 2  CARDS        C                 &&&
         IF KEY=PERIOD OR KEY=SELECT THEN                               20094700
         IF KEY=PERIOD THEN STEPS;                                      20095100
$#PATCH NUMBER 19 FOR COBOL68.XII CONTAINS 5  CARDS        C                 &&&
         FRMT = IF J.CLF=EA AND NOT SFCMP THEN 2 ELSE                   41012600
                IF SFGRP OR RFGRP THEN 1 ELSE IF J.CLF}NM THEN 3 ELSE   41012700
                IF SFCMP THEN 6 ELSE 1#,                                41012800
         INDEX ~ IF2[INDEX].SZF;                                        81086400
         EMITVAR(1,SDA);     % BEGINNING OF UNEDITED FIELD              81086450
$#PATCH NUMBER 20 FOR COBOL68.XII CONTAINS 3  CARDS        C                 &&&
         SQ ~ Q;                                                        41098150
         NMLTRL(FALSE,0);                                               41098400
         Q ~ SQ;                                                        41098450
$#PATCH NUMBER 21 FOR COBOL68.XII CONTAINS 1  CARDS        C                 &&&
         IF NXKEY=RECORD THEN STEPS;                                    43002350
$#PATCH NUMBER 22 FOR COBOL68.XII CONTAINS 7  CARDS        C                 &&&
         REAL I,T,TYPE,X,LINK,SAVTEMPREL;                               65003400
$VOID 65005301                                                          65005300
         EMITBRANCH(LINK,SAVTEMPREL~TEMPREL,TYPE);                      65005600
         RELADDR ~ SAVTEMPREL;                                          65005700
         RELADDR ~ LINK;                                                65006250
$VOID 85016101                                                          85016100
         SEGWRAPUP;                                                     85016650
$#PATCH NUMBER 23 FOR COBOL68.XII CONTAINS 1  CARDS        C                 &&&
         V1 ~ T.PSIX;                                                   80037450
$#PATCH NUMBER 24 FOR COBOL68.XII CONTAINS 39 CARDS        C                 &&&
         LASTMKS ~ ABS(LASTMKS);                                        81017750
         IF BOOLEAN(BVAL.PSSIN) THEN VALUCALL(JUNKXOF) ELSE             81049100
         IF NOT XITCTRL THEN                                            81069310
         IF BOOLEAN(BVAL.PSSIN) THEN   % SAVE DEST IN JUNKX, OFFSET IN  81069320
    BEGIN                              % JUNKXOF                        81069330
         EMITPAIR(JUNKX,STD);                                           81069340
         EMITPAIR(JUNKXOF,SND);                                         81069350
         NAMECALL(JUNKX);                                               81069360
    END ELSE EMITPAIR(JUNKX,SND);                                       81069370
         LASTMKS ~ -1;                                                  81074650
              IF EDTD THEN                                              81090510
              IF BOOLEAN(BVAL.PSSIN) THEN                               81090515
    BEGIN                                                               81090520
              EMITPAIR(JUNKX,STD);                                      81090530
              EMITPAIR(JUNKXOF,SND);                                    81090535
              NAMECALL(JUNKX);                                          81090540
    END ELSE EMITPAIR(JUNKX,SND);                                       81090550
              EMITPAIR(JUNKEX1,STD);                                    81090800
              NAMECALL(JUNKEX1);                                        81091100
         LASTMKS ~ -1;                                                  81092450
         LASTMKS ~ ABS(LASTMKS);                                        81094450
         IF LASTMKS<0 THEN                                              81102510
    BEGIN                              % CALLED COBOLVARSZ              81102515
         T ~ (T~BVAL).PSOFS + (IF1[T.PSIX].LGHF-T.PSL);                 81102520
         EMITO(MKS);                                                    81102525
         IF BOOLEAN(BVAL.PSSIN) THEN VALUCALL(JUNKXOF);                 81102530
         NAMECALL(JUNKX);                                               81102535
         EMITO(CMN);                                                    81102540
         IF BOOLEAN(BVAL.PSSIN) THEN                                    81102545
    BEGIN                                                               81102550
         EMITVAR(2,CRF);                                                81102555
         EMITO(SFD);                                                    81102560
         EMITVAR(1,SDA);                                                81102565
    END ELSE IF T>7 THEN IF JUNK~(T&0[45:45:3])-BVAL.PSOFS!0 THEN       81102570
              EMITVAR(JUNK,SRD)                                         81102575
              ELSE ELSE IF JUNK~BVAL.PSOFS!0 THEN EMITVAR(JUNK,SFD);    81102580
         EMITVAR(1,RSA);                                                81102585
         IF (T~T.CIX)!0 THEN EMITVAR(T,SFS);                            81102590
    END;                                                                81102595
$#PATCH NUMBER 25 FOR COBOL68.XII CONTAINS 4  CARDS        C                 &&&
    L:                                                                  81067700
         GIVEMELITERAL(SORCL,TRUE);                                     81067800
         T ~ IF SORCL<DESTL THEN SORCL ELSE DESTL;                      81067900
    END ELSE IF (T1~SORCL-DESTL)>0 THEN NESTER(T1,SFS);                 81068600
$#PATCH NUMBER 26 FOR COBOL68.XII CONTAINS 2  CARDS        C                 &&&
         IF MKSFF THEN VOIDMKS;                                         81161595
         IF MKSFF THEN VOIDMKS;                                         81168050
$#PATCH NUMBER 27 FOR COBOL68.XII CONTAINS 1  CARDS        C                 &&&
         IF L!0 OR BSTK THEN EMITVAR(4,SSA);                            81199050
$#PATCH NUMBER 28 FOR COBOL68.XII CONTAINS 1  CARDS        C                 &&&
         IF SVIF2.SGTF=2 OR SZ<8 THEN EMITVAR(1,SED);% FORCE STORE      83024150
$#PATCH NUMBER 29 FOR COBOL68.XII CONTAINS 1  CARDS        C                 &&&
    END ELSE IF NOT LBL THEN WRD2 ~ IF2[INDEX];                         86046400
$#PATCH NUMBER 30 FOR COBOL68.XII CONTAINS 2  CARDS        C                 &&&
         IF4[SINFO] ~ (T~IF4[CNLVL]) & (IF T.OCLF!0 THEN                32034200
              IF4[SINFO-IFSZ].OCLF+1 ELSE 0) [1:41:7];                  32034250
$#PATCH NUMBER 31 FOR COBOL68.XII CONTAINS 14 CARDS        I                 &&&
         AITINDEX ~ W ~ AITINDEX + 1;                                   64000700
$VOID    64002101                                                       64000900
         PRT[IX] ~ SIZE & SIZE2 [18:33:15];                             64003000
         ARRAYDEC(1,V2~IF4[V1].FLLNK,27+(T1~FIB[IF0[V1].FIBF,13].NBUFF) 70006500
                   ,0);                                                 70006600
         EMITL(AITINDEX);    NAMECALL(AITX);     EMITO(DUP);            70006700
         IF2[V1].FXF ~ T ~ SEGDICTENT;                                  70007300
         EMITL(T);      EMITL(7);      EMITO(COM);                      70007310
         EMITO(MKS);              % DECLARE ALL                         70013600
         EMITL(19);               %             ARRAYS                  70013650
         VALUCALL(ARRYDECINT);    %                    AT ONCE          70013700
         SEGDICT[IX] ~ -(0& PRTJUNK[8:38:10]);   % THIS IS CORRECT      70016700
         SEGEND((EDOC[0,0]+1)|8);                % CHECK INITILIZE      70016800
         SEGNO ~ IF2[DRCT[DXX-1].NXIF].FXF;                             90006100
$#PATCH NUMBER 32 FOR COBOL68.XII CONTAINS 21 CARDS        I                 &&&
         IF FRST THEN MACRO(STOSM,1,1);          % STORE AWAY SUBSCRIPT 41075750
         IF FRST THEN MACRO(STOSM,0,1);          % RESET STORSUB        41076050
         IF GW2.SUBF!0 THEN MACRO(STOSM,1,6);    % UNDO STORSUB         41076950
         IF GW2.SUBF!0 THEN MACRO(STOSM,1,6);    % UNDO STORSUB         41079750
         MACRO(STO9M,3,0);                                              41081160
         MAC2(STOSM,1);                          % RECALL SUBSCRIPT     41081170
         MACRO(VALDM,GIX,3);                                            41081180
         MACRO(STO9M,3,0);                                              41081185
         MAC2(STOSM,1);                          % RECALL SUBSCRIPT     41081190
         MACRO(NAMDM,GIX,0);                                            41081192
         IF IF2[ID2X].SUBF!0 THEN MACRO(STOSM,2,6); % UNDO STORSUB      41106350
              IF TYPE=3 THEN                                            81021010
    BEGIN                                                               81021020
              IF ATYP{JKN THEN EXCHANGE;                                81021030
              IF MKSFF THEN VOIDMKS;                                    81021075
              JNKVA ~ AVAL;                                             81021080
    END ELSE                                                            81021090
              IF MKSFF.[46:1] THEN ETCLITXCH;                           81022400
              IF V2=6 THEN                                       % STOSM89007150
    BEGIN     TEMPREL ~ RELADDR; RELADDR ~ RELADDR-4;            % STOSM89007160
    END ELSE                                                     % STOSM89007170
$#PATCH NUMBER 33 FOR COBOL68.XII CONTAINS 7  CARDS        I                 &&&
         DOBF = [36:1]#,  % $ OPTION SEGMENT NOT CARRIED IN DOLOPTWORD  00153650
         IF OPTION = "7SEG" THEN DISKOUT(0,1,0,2048,0) ELSE             12048450
         SEGTOG,    % IF TRUE THEN SEGMENT AT NEXT END-OF-STATEMENT     60011950
         IF BOOLEAN(VARU2.DOBF) THEN SEGTOG ~ TRUE ELSE                 63005950
         IF RELADDR > 7200 OR SEGTOG THEN        % KEEP SEG < 900 WORDS 89017800
         SEGTOG ~ FALSE;                                                89018550
         IFTOG ~ SORTOG ~ SCALESTOP ~ INSUB ~ MATHTOG ~ SEGTOG ~        89042300
$#PATCH NUMBER 34 FOR COBOL68.XII CONTAINS 6  CARDS        I                 &&&
         TI2            = TG[24]#,% USED TO COMPUTE PROCESSOR TIME      00161750
FORMAT   COMPT("COMPILATION TIME =",I5," SECONDS ELAPSED, ",I5,         00173600
              " SECONDS PROCESSOR"/                                     00173610
         TI ~ TIME(1);  TI2 ~ TIME(2);                                  20000500
         WRITE(RITE,COMPT,(TIME(1)-TI)/60,(TIME(2)-TI2)/60,CARDCOUNT+1, 90014800
              NXTPRTLOC,SVSGSIZ,SVDKADR-1,SEGCNT,ESTCORE);              90014900
$#PATCH NUMBER 35 FOR COBOL68.XII CONTAINS 4  CARDS        I                 &&&
$ VOID   00169801                                                       00169800
         IF ASIZE = 16 THEN T ~ GETPRTLOC;                              32031400
$ VOID   32031801                                                       32031500
         PRT,           % PROGRAM REFERENCE TABLE                       60012045
$#PATCH NUMBER 36 FOR COBOL68.XII CONTAINS 3  CARDS        I                 &&&
         FIBMX = 25#,         % MAX # OF FILES IS 204                   00152450
         FIB[0:FIBMX,0:21],% FILE INFORMATION BECOMES FIB   - GLOBAL USE00169600
         IF NFIB GTR FIBMX THEN BEGIN NFIB ~ 0; ERR(225); END;          16008900
$#PATCH NUMBER 37 FOR COBOL68.XII CONTAINS 119 CARDS       I                 &&&
         SETV                 = 542#,    SORTV                = 543#,   00063300
         DOXF = [35:1]#,      % $ OPTION XREF FIELD IN DOLOPTWORD       00153675
         XREFTOG,  % TRUE IF CROSS-REFERENCE REQUESTED                  00159350
         DSK DISK SERIAL [20:CARDMAX DIV 20] "XDSK" (2,2,150),          00159950
         XREVER     = MB.[40:1]#,% TRUE IF XREFTOG EVER SET             00162480
         SVXREFTOG  = MB.[39:1]#,% SAVE XREFTOG                         00162485
         FIRST1     = NOTOG#, % USED IN XREFOUT                         00162498
         XARRAY [0:1],  % 2 WORDS FOR DSK  I.E. XREF                    00165450
         XRFHEAD ("CROSS REFERENCE LISTING"),                           00174330
         XRFCH ("CROSS REFERENCE CHARGES: ",I5," SECONDS, ",I5,         00174350
                " OF WHICH CONSTITUTE PROCESSOR TIME."),                00174370
         DOLLARTOG ~ DEBUGTOG ~ INFOTOG ~ PUNCHTOG ~ XREFTOG ~ FALSE;   12040800
         IF OPTION = "4XRE" THEN                                        12049110
    BEGIN                                                               12049120
         DOLOPTWORD.DOXF ~ REAL(XREFTOG ~ TORF);                        12049130
         XREVER ~ TRUE;                                                 12049140
    END ELSE                                                            12049150
         IF XREFTOG THEN XARRAY[1] ~ GETCHARS(PTOBUFFER,0,6);           13014750
         IF XREFTOG THEN                                                13040110
     BEGIN                                                              13040120
         XARRAY[0] ~ 0 & (I+1) NXFF;                                    13040130
         WRITE(DSK,2,XARRAY[*]);                                        13040140
    END;                                                                13040150
         IF XREFTOG THEN                                                13041310
    BEGIN                                                               13041320
         XARRAY[0] ~ 0 & (NXD+1) NXFF;                                  13041330
         WRITE(DSK,2,XARRAY[*]);                                        13041340
    END;                                                                13041350
         IF KEY = SORTV THEN                                            20088900
         IF SCTRL = RECORD OR KEY = SORTV THEN STEPS;                   20108900
         SVXREFTOG ~ XREFTOG; XREFTOG ~ FALSE;                          47001450
         XREFTOG ~ SVXREFTOG;                                           47001550
         SVXREFTOG ~ XREFTOG; XREFTOG ~ FALSE;                          49033850
         XREFTOG ~ SVXREFTOG;                                           49034450
         XREFTOG ~ BOOLEAN(VARU2.DOXF);                                 63007150
PROCEDURE XREFOUT;                                                      87300100
    BEGIN                                                               87300200
         DEFINE LXDICT = PS#;                                           87300300
         REAL TE,TP;                                                    87300400
BOOLEAN PROCEDURE INP(A);   ARRAY A[0];                                 87300600
    BEGIN                                                               87300700
         LABEL EOF,XIT;                                                 87300800
         DEFINE B = XARRAY#;                                            87300900
         REAL Q,R,S;                                                    87301000
         READ(DSK,2,B[*])[EOF];                                         87301100
         Q ~ DICT[R~B[0].IR,S ~ B[0].IC].SIZEF;                         87301200
         PUSHOVER(A[0],0,DICT[R,S],2,Q);                                87301300
         FILLWITHCHR(A[0],Q  ," ",32-Q);                                87301400
         A[4] ~ B[1];                                                   87301500
         GO TO XIT;                                                     87301600
EOF:     INP ~ TRUE;                                                    87301700
         CLOSE(DSK);                                                    87301800
XIT:                                                                    87301900
    END INP;                                                            87302000
BOOLEAN STREAM PROCEDURE XCMP(D,S);                                     87302010
    BEGIN                                                               87302020
         SI ~ S; DI ~ D;                                                87302030
         IF 32 SC = DC THEN TALLY ~ 1;                                  87302050
         XCMP ~ TALLY;                                                  87302060
    END XCMP;                                                           87302090
PROCEDURE OPPROC(EOFSORT,BK);VALUE EOFSORT;BOOLEAN EOFSORT;ARRAY BK[0]; 87302100
    BEGIN                                                               87302200
         DEFINE N = T1#;                                                87302250
    LABEL XIT,LE,ENTR;                                                  87302300
         IF EOFSORT THEN GO TO LE;                                      87302400
         IF NOT XCMP(BK[0],LXDICT[0]) THEN                              87302500
    BEGIN                                                               87302600
         IF NOT FIRST1 THEN                                             87302700
    BEGIN                                                               87302720
         WRITE(LINE,15,TMP[*]);                                         87302760
         WRITE(LINE[DBL]);                                              87302770
    END  ELSE FIRST1 ~ FALSE;                                           87302780
         PUSHOVER(LXDICT[0],0,BK[0],0,32);                              87302800
         PUSHOVER(TMP[0],0,BK[0],0,32);                                 87302900
ENTR:    PUSHOVER(TMP[4],1,BK[4],2,6);                                  87303000
         FILLWITHCHR(TMP[4],7," ",57);                                  87303100
         FILLWITHCHR(TMP[12],0," ",24);                                 87303150
         N ~ 1;                                                         87303200
         GO TO XIT;                                                     87303300
    END;                                                                87303400
         IF (N ~ N+1) } 12 THEN                                         87303500
    BEGIN                                                               87303600
         WRITE (LINE,15,TMP[*]);                                        87303700
         FILLWITHCHR(TMP[0],0," ",32);                                  87303800
         GO TO ENTR;                                                    87303900
    END;                                                                87304000
         FILLWITHCHR(TMP[T~3+((N|8) DIV 8)],0," ",1);                   87304100
         PUSHOVER(TMP[T],1,BK[4],2,6);                                  87304200
         FILLWITHCHR(TMP[T],7," ",1);                                   87304300
         GO TO XIT;                                                     87304400
LE:      WRITE(LINE[DBL],15,TMP[*]);                                    87304500
XIT:                                                                    87304600
    END OPPROC;                                                         87304700
PROCEDURE HIVALU(A); ARRAY A[0];                                        87304800
         FILL A[*] WITH "99999999","99999999","99999999","99999999",    87304900
                        "99999999","99999999";                          87305000
BOOLEAN PROCEDURE XCMP2(A,B); ARRAY A,B[0];                             87305100
    BEGIN                                                               87305200
BOOLEAN STREAM PROCEDURE XCMP1(A,B);                                    87305410
    BEGIN                                                               87305420
         SI ~ A; DI ~ B;                                                87305435
         IF 40 SC{ DC THEN TALLY ~ 1; XCMP1 ~ TALLY;                    87305440
    END;                                                                87305450
         XCMP2 ~ XCMP1(A[0],B[0]);                                      87305455
    END;                                                                87305460
         REWIND(DSK); FIRST1~ TRUE;                                     87305500
         TE ~ TIME(1); TP ~ TIME(2);                                    87305600
         WRITE (LINE[1]);                                               87305700
         WRITE(LINE,XRFHEAD);                                           87306300
         FILLWITHCHR(TMP[0],0," ",60 );                                 87306350
         FILLWITHCHR(TMP[7],4," ",60 );                                 87306355
         FILLWITHCHR(TMP[0],0,"-",23);                                  87306400
         ZEROER(PS[0],4);                                               87306450
         WRITE(LINE[DBL],15,TMP[*]);                                    87306500
         SORT(OPPROC,INP,0,HIVALU,XCMP2,5);                             87306600
         WRITE(RITE,XRFCH,(TIME(1)-TE)/60,(TIME(2)-TP)/60);             87308400
    END XREFOUT;                                                        87308500
         XREFTOG ~                                                      89042250
         IF XREVER THEN XREFOUT;                                        90013950
$#PATCH NUMBER 38 FOR COBOL68.XII CONTAINS 79  CARDS       I                 &&&
         ACCDF = [18:15]#,   % PRT OF ACCIDENTAL ENTRY FOR TECH-C READ  00131250
         LI ~ 0;                                                        31078350
         LI ~ ASIZE;                                                    31078850
         IF LI>ASIZE THEN ERR(238);                                     31078950
         IF NLVL=1 AND SECT=FSECT THEN                                  31081300
    BEGIN                                                               31081310
         IF3[SINFO].SZDF ~ Q.NXF;      % TEMP FOR USE IN OPENP          31081320
         FIB[IF0[IF4[SINFO].FLLNK].FIBF,18].MINRS ~ IF LI!0 THEN        31081330
              (LI+7).WIX ELSE 1;                                        31081335
    END;                                                                31081340
         BOOLEAN M,SECMP,GOTFIRST;                                      33000400
$VOID 33031501                                                          33031500
         IF BOOLEAN(IF2[SINFO].VARF) THEN ERR(36);                      33031800
         IF WRD}0 AND WRD.MIBS!0 AND (T~FIB[CFIB,18]).MINRS=0 THEN      33034150
              FIB[CFIB,18].MINRS ~ 1;                                   33034160
         FIB[CFIB,5].BLKF ~ REAL(WRD.MXBS>T.MAXRS AND (JUNK~T.MINRS)=0) 33034200
              +3|REAL(JUNK!0);                                          33034300
         IF WRD.MIBS!0 THEN IF WRD.MIBS<T.MINRS THEN ERR(37);           33034350
         IF WRD<0 THEN IF T.MINRS!0 THEN IF T.MINRS<T.MAXRS             33034400
              THEN ERR(284);                                            33034450
         IF T1>T THEN                                                   33035900
    BEGIN                                                               33035905
         IF1[IF4[LOC].RCLNK].LGHF ~ T1;                                 33035910
         FIB[CFIB,18].MAXRS ~ T1 ~ (T1+7).WIX;                          33035920
         IF T1>FIB[CFIB,18].BUFSZF THEN FIB[CFIB,18].BUFSZF ~ T1;       33035940
    END;                                                                33035950
         IF BOOLEAN(IF2[SINFO].VARF) THEN                               33036150
              IF NOT BOOLEAN(IF2[IF4[LOC].RCLNK].VARF) THEN ERR(22);    33036160
$VOID 44018101                                                          44018100
         T ~ IF4[FLINFO].RCLNK;                                         44018200
    REAL      FILEQ;                                                    44025600
         FILEQ ~ Q.NXIF;                                                44026000
         IF IF3[IF4[FILEQ].RCLNK].BADDF=IF3[GIX].BADDF THEN ERR(206);   44027200
$VOID 44028701                                                          44027300
$VOID 44028901                                                          44028900
PROCEDURE GETSIZE(RIX); VALUE RIX; REAL RIX;                            86000610
    BEGIN          % GET RECORD LENGTH FROM 1ST FOUR CHARACTER POSITIONS86000615
         EMITL(0);                                                      86000620
         EMITO(MKS);                                                    86000630
         EMITL(0); NAMECALL(IF3[RIX].BADDF);                            86000640
         EMITO(CMN);                                                    86000650
         EMITVAR(3,SED);                                                86000660
         EMITVAR(1,RSA);                                                86000670
         EMITVAR(4,ICV);                                                86000680
         EMITO(CMX);                                                    86000685
    END GETSIZE;                                                        86000690
         EMITL(L ~ REAL(SV1{3) + REAL(SV1=2) +3|REAL(SV1}4)             86026100
               + 2|REAL(SV1}8) + 13|REAL(SV1=7));         % F-1: CODE   86026200
         IF L=1 THEN         % OPEN INPUT                               86026310
              IF BOOLEAN(IF2[L~IF4[FILQ].RCLNK].VARF) THEN              86026320
                   IF IF3[T1~(T~IF3[L]).SZDF].BADDF=T.BADDF THEN        86026330
                   FIB[RIX,18].MINRS ~((T1~IF1[T1]).OFSF+T1.LGHF+7).WIX;86026340
         IF FIB[FILQ ~ IF0[V2].FIBF,5].BLKF=3 THEN                      86026805
    BEGIN                              % TECH-C                         86026810
         IF (L~IF5[V2].ACCDF)=0 THEN                                    86026812
    BEGIN                              % BUILD ACCIDENTAL ENTRY         86026813
         SV1 ~ RELADDR; EMITBFW;       % BRANCH AROUND ACCIDENTAL ENTRY 86026815
         ADJUST;                                                        86026820
         IF5[V2].ACCDF ~ W ~ L ~ BUILDSEGDICT(0,SEGNO);                 86026822
         PRT[IX].[4:2] ~ 0;            % SIGNIFIES ACCIDENTAL ENTRY     86026823
         IF BOOLEAN(IF2[RIX ~ IF4[V2].RCLNK].VARF) THEN                 86026825
              JUNK ~ RFLENGTH(RIX) ELSE GETSIZE(RIX);                   86026830
         EMITL(7); EMITO(ADD);                                          86026835
         EMITL(8); EMITO(IDIV);                                         86026840
         EMITO(RTS);                                                    86026845
         EMITBRANCH(SV1,RELADDR,BFW);                                   86026850
    END;                                                                86026865
         EMITPAIR(L,LODD);             % F-3 : ACCIDENTAL ENTRY DESC    86026870
         NAMECALL(-512);               % (R+7)+0: DESC POINTING TO RCW  86026875
         EMITO(CTF);                                                    86026880
    END ELSE                                                            86026885
         VALUCALL(IF FIB[FILQ,4].FILTYF=DK THEN COBOLRANDM              86027200
         L ~ REAL(MRCLEAN); MRCLEAN ~ FALSE;                            86032250
         MRCLEAN ~ BOOLEAN(L) OR MRCLEAN;                               86033650
         IF FIB[IF0[FILQ].FIBF,5].BLKF!3 THEN                           86033700
         EMITNUM((IF1[IF4[FILQ].RCLNK].LGHF+7) DIV 8) ELSE% F-3:NUM WDS 86033800
    BEGIN                                                               86033900
         IF RFLENGTH(RIX ~ IF4[FILQ].RCLNK)=0 THEN ELSE                 86033940
              GETSIZE(RIX);                                             86033950
$#PATCH NUMBER 39 FOR COBOL68.XII CONTAINS 6   CARDS       C                 &&&
         IF SCTRL ! DIVISION THEN ERR(0) ELSE                           20062400
         IF NXKEY ! PERIOD THEN ERR(-81);                               20062500
LP:      READACARD;                                                     20062600
         IF GETCHARS(PTOBUFFER,7,4) = "    " THEN GO TO LP ELSE STEPS;  20062700
         IF KEY   = PROGRAMID THEN GO TO LP;                            20063000
$VOID 20063401                                                          20063100
$#PATCH NUMBER 40 FOR COBOL68.XII CONTAINS  75 CARDS       I                 &&&
         50                                                             00000700
         LONG       = MB.[38:1]#,% TRUE IF LONG COMPILE REQUIRED        00162486
         IF ERNUM = 287 THEN                                            10022900
$ VOID   10023501                                                       10023400
         IF NOT LONG THEN LONG~((DOLOPTWORD.DOCF+DOLOPTWORD.DODF) > 0); 12052750
         IF ERRORCOUNT = 0 THEN        % DONT FIXUP IF UNECESS          65003750
    END ELSE                           % CLEAN UP TABLE ENTRIES         65006800
         WHILE I ! 0 DO                                                 65006810
    BEGIN                                                               65006820
         IF2[I].FXF ~ 0;                                                65006830
         I ~ IF4[I].LBLSTRTF;                                           65006840
    END;                                                                65006850
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%88900000
%                  ERROR PASS 2 DRIVER   -  SYNTAX ONLY                %88900100
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%88900200
PROCEDURE SHORTSHEET;                                                   88900300
    BEGIN                                                               88900400
         REAL IFX;                                                      88900500
         LABEL  XIT,L3,L4,L5,L6,L7,L12,L25,L27,L28,L29,L35,L36,L37,     88900600
                L38,L39,L42,L59,L60,L62,L64,L65,L66,L67,L68,L69,L77,    88900700
                L86,L87,L88,L70;                                        88900800
         SWITCH SWLST ~ XIT,XIT,XIT,L3 ,L4 ,L5 ,L6 ,L7 ,XIT,XIT,  %00-0988900900
                        XIT,XIT,L12,XIT,XIT,XIT,XIT,XIT,XIT,XIT,  %10-1988901000
                        XIT,XIT,XIT,XIT,XIT,L25,XIT,L27,L28,L29,  %20-2988901100
                        XIT,XIT,XIT,XIT,XIT,L35,L36,L37,L38,L39,  %30-3988901200
                        XIT,XIT,L42,XIT,XIT,XIT,XIT,XIT,XIT,XIT,  %40-4988901300
                        XIT,XIT,XIT,XIT,XIT,XIT,XIT,XIT,XIT,L59,  %50-5988901400
                        L60,XIT,L62,XIT,L64,L65,L66,L67,L68,L69,  %60-6988901500
                        L70,XIT,XIT,XIT,XIT,XIT,XIT,L77,XIT,XIT,  %70-7988901600
                        XIT,XIT,XIT,XIT,XIT,XIT,L86,L87,L88,XIT,  %80-8988901700
                        XIT;                                      %90   88901800
         PSX ~ 2;                                                       88901900
         DO                                                             88902000
    BEGIN                                                               88902100
         PASSMAC;                                                       88902200
         GO TO SWLST[MACN2+1];                                          88902300
    L3:  IF IF2[IFX~MACQUAL].USF!CMP1 OR IF0[IFX].LVLF!77 THEN ERR(286);88902400
         GO TO XIT;                                                     88902500
    L4:  DEPMP(VARU2+5);               GO TO XIT;                       88902600
    L5:  DEPMP(VARU2+3);               GO TO XIT;                       88902700
    L6:                                                                 88902800
    L7:  IFX ~ MACQUAL;                GO TO XIT;                       88902900
    L12: KEYMP;                        GO TO XIT;                       88903000
    L25: LABELDEC;                     GO TO XIT;                       88903100
    L27:                                                                88903200
    L28:                                                                88903300
    L29: BRANCHGEN(BFW);               GO TO XIT;                       88903400
    L35: ENDPAR(TRUE);                 GO TO XIT;                       88903500
    L36: ENDPAR(FALSE);                GO TO XIT;                       88903600
    L37: ALTRP;                        GO TO XIT;                       88903700
    L38: ALTGP;                        GO TO XIT;                       88903800
    L39: ALGOP;                        GO TO XIT;                       88903900
    L42:                                                                88904000
    L60: PSX~2;    IF RELADDR > 7200 THEN SEGEND(RELADDR); GO XIT;      88904100
    L59: PERFORMP;                     GO TO XIT;                       88904200
    L62: DUMP2;                        GO TO XIT;                       88904300
    L64:                                                                88904400
    L65:                                                                88904500
    L66: IF NOT LBCHK(V1,V2,IFX) THEN BEGIN ERPNT ~ -V1; ERR(159) END;  88904600
         GO TO XIT;                                                     88904700
    L67: SRTP;                         GO TO XIT;                       88904800
    L68: RELP;                         GO TO XIT;                       88904900
    L69: RETP;                         GO TO XIT;                       88905000
    L70: IF V1=1 THEN DECLTOG ~ BOOLEAN(V2);            GO XIT;         88905100
    L77: IF IF2[MACQUAL].CLF!AN THEN ERR(262);          GO XIT;         88905200
    L86: IF USEFIL ! 0 THEN ERR(282) ELSE USEFIL ~ V1;  GO XIT;         88905300
    L87: IF IF2[MACQUAL].USF ! BCL THEN ERR(39);        GO XIT;         88905400
    L88: IF (W~IF2[MACQUAL]).CLF!NM OR W.FSZF!0 THEN ERR(13);           88905500
XIT:END  UNTIL MACN2=THEND;                                             88905600
    END SHORTSHEET;                                                     88905700
         IF ERRORCOUNT ! 0 AND NOT LONG THEN                            89043200
    BEGIN                                                               89043205
         SHORTSHEET;                                                    89043220
         IF DCOMM THEN GO TO GLOBALEND;                                 89043250
    END ELSE                                                            89043295
$#PATCH NUMBER 41 FOR COBOL68.XII CONTAINS  30 CARDS       C                 &&&
PROCEDURE NOTEP;                                                        41048405
    BEGIN                                                               41048410
LABEL LP,LP1;                                                           41048415
REAL STREAM PROCEDURE PDCK(PBS,COUNT);                                  41048420
         VALUE COUNT,PBS;                                               41048422
    BEGIN                                                               41048423
         SI ~ PBS;                                                      41048424
         COUNT( IF SC = "." THEN BEGIN SI ~ SI+1;IF SC = " " THEN       41048426
                BEGIN SI~SI-1; PDCK~SI; JUMP OUT END ELSE SI~SI+1 END   41048427
                ELSE SI ~ SI + 1);                                      41048428
    END;                                                                41048435
         IF NOTOG THEN                                                  41048440
    BEGIN                                                               41048445
LP:      READACARD;                                                     41048450
         IF GETCHARS(PTOBUFFER,7,4) = "    " THEN GO TO LP ELSE         41048454
                                    BEGIN NXKEY ~ PERIOD; STEPS END;    41048456
    END ELSE IF NXKEY = PERIOD THEN STEPS ELSE                          41048460
    BEGIN                                                               41048465
LP1:     IF (T ~ PDCK(PBS,COUNT)) ! 0 THEN                              41048470
    BEGIN PBS ~ T;    STEPS; STEPS; END ELSE                            41048475
    BEGIN  READACARD; GO TO LP1; END;                                   41048480
    END;                                                                41048485
         NOTOG ~ FALSE;                                                 41048487
    END NOTEP;                                                          41048490
         NOTEP;                                                         49012300
         GO TO XIT;                                                     49012400
$ VOID 49012701                                                         49012500
         IF NXKEY = NOTE THEN NOTOG ~ TRUE;                             49022750
         IF KEY = PERIOD THEN STEPS;                                    49024500
$VOID 49024801                                                          49024600
$#PATCH NUMBER 42 FOR COBOL68.XII CONTAINS  2  CARDS       C                 &&&
"MAXIMUM ","BLOCK SI","ZE MUST ","BE}MAXIM","UM RECOR","D SIZE* ",  %04400015300
         IF WRD.MXBS<IF1[SINFO].LGHF THEN ERR(44);                      33033650
$#PATCH NUMBER 43 FOR COBOL68.XII CONTAINS  2  CARDS       C                 &&&
"        ","        ","        ","        ","        ","        ",  %23700037000
              ERR(IF CDMSK=7 THEN -115 ELSE 115);                       41024800
$#PATCH NUMBER 44 FOR COBOL68.XII CONTAINS  2  CARDS       C                 &&&
         MACRO(IF SZR~SZRR THEN SZERM ELSE STO9M,2,0);                  41110600
         MACRO(SZRSM,T,REAL(SZR));                                      41110700
$#PATCH NUMBER 45 FOR COBOL68.XII CONTAINS  3  CARDS       C                 &&&
         MKSIN ~ MKSFF;                                                 81048650
         TEED(BVAL.PSIX & REAL(LASTMKS}0 AND (NOT MKSIN OR              81051400
              (ATYP!LTV AND IF2[BVAL.PSIX].SUBF=0)))[1:47:1]);          81051450
$#PATCH NUMBER 46 FOR COBOL68.XII CONTAINS  1  CARDS       C                 &&&
              PUSHOVER(TMP[S.WIX],S.CIX,STK,0,P ~ IF (T1~LITSZ-T){63    81057200
$#PATCH NUMBER 47 FOR COBOL68.XII CONTAINS 60  CARDS       C                 &&&
         REAL DESTL,SORCL,T,B;                                          81066700
         BOOLEAN DONTEX;                                                81066750
         LABEL XIT,L,L1,FA,AHLBL,L2,L3;                                 81066800
         SORCL ~ IF AHL THEN DESTL ELSE IF MOVEALL THEN IF (T~AVAL.PSL) 81067000
              >DESTL THEN DESTL ELSE T ELSE AVAL.PSL;                   81067050
         IF MOVEALL THEN IF XITCTRL THEN                                81067300
    BEGIN                                                               81067310
         IF DESTL>SORCL THEN SMEAR(DESTL-SORCL,"  ");                   81067320
         SMEAR(SORCL,ALLCHAR);                                          81067330
    END ELSE GO TO L;                                                   81067340
         IF NOT XITCTRL THEN                                            81067410
    BEGIN                                                               81067415
    L:   IF (B ~(IF BOOLEAN((B~BVAL).PSSIN) THEN 0 ELSE B.PSOFS)        81067420
              +(IF1[B.PSIX].LGHF-DESTL))>7 THEN                         81067422
    BEGIN                                                               81067425
         EMITL(B.WIX);                                                  81067430
         EMITO(EXCH);                                                   81067435
         EMITO(INX);                                                    81067440
    END;                                                                81067445
         BVAL ~ BVAL & B [TOPSOFS];                                     81067450
         IF NOT MOVEALL THEN GO TO L2;                                  81067456
    L3:                                                                 81067458
         IF MOVEALL THEN                                                81067460
    BEGIN                                                               81067462
         EMITO(CMN);                                                    81067464
         IF BOOLEAN(BVAL.PSSIN) THEN                                    81067465
    BEGIN                                                               81067470
         EMITVAR(2,CRF); EMITO(SFD);                                    81067472
    END;                                                                81067474
    END ELSE NESTER(0,TRS);            % ENTER CHARACTER MODE           81067475
         IF (B~B.CIX)!0 AND (MOVEALL OR BOOLEAN(BVAL.PSSIN))            81067480
              THEN EMITVAR(B,SFD);                                      81067481
         IF DESTL{24 OR NOT MOVEALL THEN EMITVAR(1,SDA);                81067482
         IF DESTL>SORCL THEN SMEAR(DESTL-SORCL," ")                     81067484
              ELSE IF (T1~SORCL-DESTL)>0 THEN NESTER(T1,SFS);           81067490
         IF MOVEALL THEN SMEAR(SORCL,ALLCHAR) ELSE                      81067492
              NESTER(IF SORCL<DESTL THEN SORCL ELSE DESTL,TRS);         81067494
         GO TO L1;                                                      81067495
    END;                                                                81067496
    L2:                                                                 81067499
$VOID 81067701                                                          81067700
         IF NOT XITCTRL THEN GO TO L3;                                  81068150
         IF XITCTRL THEN EMITO(CMX) ELSE                                81068900
    BEGIN                                                               81068950
    L1:  EMITVAR(1,RSA);                                                81068960
         EMITVAR(1,RDA);                                                81068970
         IF (T~IF1[BVAL.PSIX].LGHF-BVAL.PSL)>0 THEN NESTER(T,SRD);      81068980
    END;                                                                81068995
         GO TO XIT;                                                     81068996
         NESTER(IF1[B.PSIX].LGHF-DESTL,SFD); % MOVE TO INSERT AREA      81076500
         IF (T1~DESTL-SORCL)>0 THEN SMEAR(T1," ");                      81076750
$VOID 81077301                                                          81077200
         NOEXCH ~ DONTEX ~ NOT XITCTRL AND ((AHL AND LITSZ<             81077750
              (T~IF SORCL<DESTL THEN SORCL ELSE DESTL)) OR DESTL>SORCL);81077760
         GIVEMELITERAL(T,FALSE);                                        81077800
         IF FUNNYALL>0 THEN LITSZ ~ FUNNYALL;                           81077850
         IF DONTEX THEN                                                 81078000
$VOID 81078301                                                          81078200
         EMITL(0);                                                      81078400
$VOID 81080801                                                          81080800
$#PATCH NUMBER 48 FOR COBOL68.XII CONTAINS 23  CARDS       C                 &&&
         AVAL ~ BVAL&DNN [TOPST]&NM [TOPSC]&0 [TOPSOFS]&0 [TOPSS]       81104700
              &0 [TOPSSIN];                                             81104701
$VOID 81104801                                                          81104800
         INCONVERT((RFLENGTH(BVAL.PSIX)=0),AVAL.PSL,0);                 81105300
    L1:  IF FIG!ZEROV AND FIG!POSITIVE AND FIG!NEGATIVE                 81160500
              AND NOT (FIG=UPPERB AND INX!0 AND IF2[INX].USF!BCL) THEN  81160550
         IF FIG=UPPERB THEN                                             81161500
    BEGIN                                                               81161510
         EMITPAIR(JUNKA,LODD);                                          81161520
         EMITO(MKS);                                                    81161525
         EMITL(0);                                                      81161530
         EMITO(CMN);                                                    81161535
         EMITVAR(3,RDA);                                                81161540
         PS[PSX~PSX+1] ~ BVAL&DNN[TOPST]&NM[TOPSC]&0[TOPSOFS]&0[TOPSS]  81161545
              &0 [TOPSSIN];                                             81161546
         PSX ~ PSX+1; SMEAR(CVAL.PSL,"9"); PSX ~ PSX-1;                 81161550
         EMITO(CMX);                                                    81161560
         INCONVERT((RFLENGTH(BVAL.PSIX)=0),AVAL.PSL,0);                 81161570
         AVAL ~ AVAL & LTV [TOPST];                                     81161580
    END ELSE EMITL(0);                                                  81161585
         EMITO(REL);                                                    81161590
         IF FIG!HIGHV AND FIG!UPPERB OR IF2[INX].USF!BCL AND FIG=UPPERB 81162200
              THEN GO TO L1;                                            81162250
$#PATCH NUMBER 49 FOR COBOL68.XII CONTAINS  4  CARDS       C                 &&&
         IF TYPE=RDIV AND SA=0 AND SB}0 THEN SA ~ SB ELSE               82012750
    BEGIN                                                               82012760
         IF T>27 THEN T ~ 27;                                           82013250
    END;                                                                82013650
$#PATCH NUMBER 50 FOR COBOL68.XII CONTAINS  4  CARDS       C                 &&&
         IF (T~IF1[R~IF0[IFX].SCOPE].BADDF)!0 THEN NAMECALL(T)          85013200
         IF1[R].BADDF ~ T ~ IF (T~IF1[R+IFSZ].BADDF)!0 THEN T           85013400
              ELSE GETPRTLOC;                                           85013450
         IF0[R].PRF ~ 1;                                                85013500
$#PATCH NUMBER 51 FOR COBOL68.XII CONTAINS  5 CARDS        C                 &&&
         0                                                              00000700
$VOID 00140601                                                          00140600
         DMOD      =25#,%31  DOUBLE PRECISION MOD INTRINSIC             00140950
         ASSIGNHERE=26#;%32  MUST BE FIRST ASSIGNABLE PRT LOCATION      00141000
                   "LEVEL XIII.",I2,".",I2,//),                         00175200
$#PATCH NUMBER 52 FOR COBOL68.XII CONTAINS  7 CARDS        I                 &&&
    END ELSE                                                            12026300
         IF SAME="/" THEN                                               12026310
    BEGIN                                                               12026320
         IF LPAS1 THEN WRITE(LINE[1]);                                  12026330
         IF LISTOG THEN DISKOUT(0,1,0,8,0);                             12026340
    END;                                                                12026350
         IF SAME="*" OR SAME="/" THEN GO TO STR;                        12028600
$#PATCH NUMBER 53 FOR COBOL68.XII CONTAINS  5 CARDS        C                 &&&
         IF (JUNK ~ CHUNK-(DKADR MOD CHUNK))<SZ THEN DKADR ~ DKADR+JUNK;64007350
    BEGIN                                                               64009050
         IF (JUNK ~ CHUNK-(DKADR MOD CHUNK))<SZ THEN DKADR ~ DKADR+JUNK;64009150
    END;                                                                64009160
         IF (JUNK ~ CHUNK-(DKADR MOD CHUNK))<SZ THEN DKADR ~ DKADR+JUNK;65008250
$#PATCH NUMBER 54 FOR COBOL68.XII CONTAINS  2 CARDS        C                 &&&
$VOID 70010501                                                          70010300
         CSTPOOL[6] ~ 2;               % STARTING SEGMENT NUMBER        90012100
$#PATCH NUMBER 55 FOR COBOL68.XII CONTAINS  3 CARDS        C                 &&&
              IF ASTK ~ BOOLEAN(AVAL.PSSIN) THEN EMITO(EXCH)            81091600
                   ELSE EMITL(AVAL.PSOFS);                              81091700
              EMITL(BVAL.PSOFS);                                        81091800
$#PATCH NUMBER 56 FOR COBOL68.XII CONTAINS  7 CARDS        C                 &&&
         B1 ~ MRCLEAN; MRCLEAN ~ FALSE;                                 85011150
$VOID 85013851                                                          85013850
         MRCLEAN ~ B1;                                                  85015650
         MRCLEAN ~ B1;                                                  85016660
    END ELSE MRCLEAN ~ B1;                                              85016900
         IFY ~ REAL(MRCLEAN); MRCLEAN ~ FALSE;                          89017950
         MRCLEAN ~ BOOLEAN(IFY);                                        89018250
$#PATCH NUMBER 57 FOR COBOL68.XII CONTAINS  1 CARDS        C                 &&&
         EMITNUM(IF1[IFX].BADDF);                                       85019800
$#PATCH NUMBER  58  FOR  COBOL68.XII CONTAINS  1 CARDS     C                 &&&
         IF KEY=ALTERNATE THEN STEPS;                                   44040550
$#PATCH NUMBER  59  FOR  COBOL68.XII CONTAINS  5 CARDS     C                 &&&
         IF DECTOG THEN    % PUT IN DICT IF REQUESTED & NOT ALREADY     13034210
              IF KEY=IDV THEN                                           13034220
                   IF ACCUM[0].NXF=0                                    13034230
                        THEN SCRAMBLEIT;                                13034240
$VOID 13035701                                                          13035400
$#PATCH NUMBER  60  FOR  COBOL68.XII CONTAINS  2 CARDS     C                 &&&
         EMITPAIR(PRTJUNK,STD);                                         86027550
         VALUCALL(PRTJUNK);                                             86028050
$#PATCH NUMBER  61  FOR  COBOL68.XII CONTAINS  1 CARDS     C                 &&&
         IF DCOMM AND HEADPRINT THEN GO TO GLOBALEND;                   89043250
$#PATCH NUMBER  62  FOR  COBOL68.XII CONTAINS  5 CARDS     C                 &&&
"CANNOT B","E USED A","S BOTH D","ATA-NAME"," AND LAB","EL*     ",  %14100026200
         IF Q.SCF=ITM THEN ERR(141);                                    49026150
         IF Q.SCF=ITM THEN ERR(141);                                    49031350
         IF Q.SCF=ITM THEN ERR(141);                                    49038050
         IF Q.SCF=ITM THEN ERR(141);                                    49039050
$#PATCH NUMBER  63  FOR  COBOL68.XII CONTAINS  2 CARDS     C                 &&&
              READ(TAPE,10,XBUF[*])[EOTL];                              12014300
              IF TSSMERG THEN IF REFORM(TMP,XBUF,JUNK) THEN ERR(-287);  12014350
