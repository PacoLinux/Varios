$#PATCH NUMBER 1 FOR TSDUMP.XII CONTAINS  286 CARDS                          &&&
           TNAOG            = PRTS[45]#,                                00638100
           RESULTHOLDER     = PRTS[46]#,                                00638200
           LASTRESULT       = PRTS[47]#,                                00638300
           OPT              = PRTS[62]#,                                00645000
PROCEDURE GETIMES(XCLOCK,ITIMES,ATIMES);VALUE XCLOCK;                   00654000
REAL XCLOCK;INTEGER ARRAY ITIMES[0];ALPHA ARRAY ATIMES[0];              00654100
BEGIN % RETURN H:M:S:60THS IN ELS 0-3 OF ITIMES(BINARY) & ATIMES(BCL)   00654200
     DEFINE T=XCLOCK#;% TIME IN 60THS                                   00654300
     STREAM PROCEDURE CONVERTIMES(ITIMES,ATIMES);                       00654400
     BEGIN SI:=ITIMES;DI:=ATIMES;4(DS:=8DEC)END;                        00654500
     %                                                                  00654600
     ITIMES[0]:=T DIV 216000;                                           00654700
     ITIMES[1]:=T DIV 3600 MOD 60;                                      00654800
     ITIMES[2]:=T DIV 60 MOD 60;                                        00654900
     ITIMES[3]:=T MOD 60;                                               00655000
     CONVERTIMES(ITIMES[*],ATIMES[*]);                                  00655100
     % NOTE IN CALL ON GETIMES, ARRAY ATIMES & ITIMES MAY BE THE SAME   00655200
END OF GETIMES;                                                         00655300
    DEFINE PRINT(PRINT1,PRINT2)=IF NOT COMMON.[40:1] THEN               01115000
           PRINTZ(PRINT1,PRINT2)#;                                      01116000
    PROCEDURE PRINTZ(FROM,TOO);                                         01120000
    DEFINE KRUNCH = SKIP 3 SB;3(IF SB THEN DS:=SET ELSE                 01231000
                    DS:=RESET;SKIP SB)#;                                01232000
    ALPHA ARRAY ALINE,BLINE[0:17];                                      01240000
    STREAM PROCEDURE COMPACT(S,D,N,ALPH); VALUE N,ALPH;                 01241000
    BEGIN LABEL R; DI:=D; DS:=8 LIT " ";                                01242000
        SI:=D; DS:=17 WDS; SI:=S; DI:=D;                                01243000
        ALPH(DS:=WDS; JUMP OUT TO R);                                   01244000
        SI:=SI+8; DI:=DI+8;                                             01245000
    R:  N(8(KRUNCH); SI:=SI+1; DI:=DI+5;                                01246000
          8(KRUNCH); SI:=SI+2; DI:=DI+6);                               01247000
    END COMPACT;                                                        01248000
         IF NOT COMMON.[43:1] THEN WRITE(P,18,ALINE[*]);                01650000
         IF REAL(COMMON).[43:2] GTR 0 THEN                              01651000
         BEGIN COMPACT(ALINE,BLINE,R,REAL(COMMON).[43:1]);              01652000
              WRITE(P,18,BLINE[*]);                                     01653000
         END;                                                           01654000
        FOR I:=0 STEP 1 UNTIL 61 DO PRTS[I]:=PRTS[I]+129;               02740000
PROCEDURE DUMPMCPSPRT;                                                  02750100
BEGIN                                                                   02750200
    FORMAT HDR(X42,"T S M C P S  P R T"/                                02750300
               X42,"- - - - - -  - - -"///                              02750400
               2("PRT",X5,"CONTENTS",X16,"NAME",X28)/ ),                02750500
           PRTITEM(2(A5," = ",O,X1,O,X39));                             02750600
    REAL LOC,N;                                                         02750700
    WRITE(P[DBL],HDR);                                                  02750800
    FOR LOC:=129 STEP 1 UNTIL PRTMAX DO                                 02750900
    BEGIN                                                               02751000
        WRITE(LINE[*],PRTITEM,OCTAL(LOC),OCTAL(HIHALF(LOC)),            02751100
              OCTAL(LOHALF(LOC)),OCTAL(N:=NAME[LOC].[3:15]+129),        02751200
              OCTAL(HIHALF(N)),OCTAL(LOHALF(N)));                       02751300
        MOVE(NAMS[NAME[LOC].CF],LINE[4],NAME[LOC].FF);                  02751400
        MOVE(NAMS[NAME[N].CF],LINE[12],NAME[N].FF);                     02751500
        WRITE(P,15,LINE[*]);                                            02751600
    END;                                                                02751700
    NEXTPAGE;                                                           02751800
END DUMPMCPSPRT;                                                        02751900
            IF NOT COMMON.[40:1] THEN                                   05675000
              PRINT(FROM,IF AVALNKOK AND NOT COMMON.[46:1] THEN         05690000
                    FROM+3 ELSE N);                                     05691000
            END;                                                        05712400
            IF NOT BOOLEAN(L.[1:1]) THEN                                05712500
            BEGIN STK:=-1;  BEDDED:=FALSE;                              05720000
                (LL:=STAX[STK].CF>FROM AND N>LL) THEN                   05750000
                IF STAX[STK].FF=0 THEN STAX[STK].FF:=FROM+2;            05760000
                PRINT(FROM,IF ((L:=L.[3:6])=1 OR L=7) AND               05770000
                      COMMON.[45:1] THEN FROM+2 ELSE N);                05775000
                IF H.[32:16]=0 AND H.[30:1]=0 AND F=0 THEN " " ELSE "*",09120000
                        ((SIZ.[1:17]=0         AND                      09330000
                        SIZ.CF=SEG)          OR                         09340000
                        (OPERAND(ADR-2,H)  AND                          09340010
                        ((H.[3:6]=7 AND H.[9:6]=0)  OR                  09340020
                        (H.[3:6]=1 AND H.[9:6] NEQ 0))  AND             09340030
              SIZ.[8:10]=SGM.CF ))  THEN                                09340040
PROCEDURE DUMPTABLES;                                                   10330100
BEGIN                                                                   10330200
     REAL I,R;                                                          10330300
     FORMAT HD("BAD ",A*,A*," DESCRIPTOR");                             10330400
     PROCEDURE RITE(A);                                                 10330500
     VALUE A;REAL A;                                                    10330600
     BEGIN                                                              10330700
          REAL I,B;                                                     10330800
          FORMAT AU(I2,X2,2(O,X1));                                     10330900
          B:=A.[8:10]-1;                                                10331000
          A:=A.CF;                                                      10331100
          FOR I:=0 STEP 1 UNTIL B DO                                    10331200
          WRITE(P,AU,I,OCTAL(HIHALF(A+I)),OCTAL(LOHALF(A+I)));          10331300
     END;                                                               10331400
          NEXTPAGE;                                                     10331500
          IF PDATADESC(LINETABLE,R) THEN                                10331600
          BEGIN                                                         10331700
               DISPLAY(LINETABLE,TRUE);                                 10331800
               RITE(R);                                                 10331900
          END ELSE WRITE(P,HD,4,"LINE",5,"TABLE");                      10332000
          WRITE(P);                                                     10332100
          IF PDATADESC(STATABLE,R) THEN                                 10332200
          BEGIN                                                         10332300
               DISPLAY(STATABLE,TRUE);                                  10332400
               RITE(R);                                                 10332500
          END ELSE WRITE(P,HD,4,"STAT",4,"ABLE");                       10332600
          WRITE(P);                                                     10332700
          IF PDATADESC(SEQARRAY,R) THEN                                 10332800
          BEGIN                                                         10332900
               DISPLAY(SEQARRAY,TRUE);                                  10333000
               RITE(R);                                                 10333100
          END ELSE WRITE(P,HD,4,"SEQA",4,"RRAY");                       10333200
          WRITE(P);                                                     10333300
          IF PDATADESC(INPUTANK,R) THEN                                 10333400
          BEGIN                                                         10333500
               DISPLAY(INPUTANK,TRUE);                                  10333600
               RITE(R);                                                 10333700
          END ELSE WRITE(P,HD,4,"INPU",4,"TANK");                       10333800
          WRITE(P);                                                     10333900
          IF PDATADESC(TANKS,R) THEN                                    10334000
          BEGIN                                                         10334100
               DISPLAY(TANKS,TRUE);                                     10334200
               RITE(R);                                                 10334300
          END ELSE WRITE(P,HD,2,"TA",3,"NKS");                          10334400
          IF OPT.[40:1] = 0 THEN                                        10334500
          IF PDATADESC(TNAOG,R) THEN                                    10334600
          BEGIN                                                         10334700
               DISPLAY(TNAOG,TRUE);                                     10334800
               RITE(R);                                                 10334900
          END ELSE WRITE(P,HD,2,"TN",3,"AOG");                          10335000
END DUMP TABLES;                                                        10335100
   PROCEDURE DUMPRESULTHOLDER;                                          10335200
   BEGIN                                                                10335300
   BOOLEAN Y,BUNG;                                                      10335400
    REAL R,L,I,J,K,SIZ;                                                 10335500
    ARRAY A[0:11];                                                      10335600
     LABEL FND;                                                         10335700
    FORMAT BADDY("THE RESULTHOLDER IS MESSED UP."),                     10335800
           HEAD(" I/O DESCRIPTOR ",X8," RES DESCRIPTOR ",X8,            10335900
                " STATABLE[ST]",X12,"LINETABLE[S1]",X6,"TU/BUFF"),      10336000
           INTR("INTERRUPT");                                           10336100
    STREAM PROCEDURE BL(A);                                             10336200
     BEGIN                                                              10336300
      DI:=A; 12(DS:=8 LIT " ");                                         10336400
     END;                                                               10336500
    DEFINE BUMPI = I:=REAL(BOOLEAN(I+1) AND BOOLEAN(SIZ))#;             10336600
     STREAM PROCEDURE TUBU(A,B,C); VALUE A,B;                           10336700
     BEGIN                                                              10336800
          SI:=LOC A; DI:=C;                                             10336900
         DS:=3 LIT " ";DS:=2 DEC;A:=DI;DI:=DI-2;                        10337000
         DS:=1 FILL;DI:=A;DS:=LIT "/";                                  10337100
         DS:=2 DEC;DI:=DI-2;DS:=1 FILL;                                 10337200
     END;                                                               10337300
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%                                     10337400
    IF LASTRESULT!0 AND RESULTHOLDER!0 THEN                             10337500
    IF PDATADESC(RESULTHOLDER,R) AND OPERAND(LASTRESULT,L) THEN         10337600
     BEGIN                                                              10337700
      WRITE(P[PAGE]);                                                   10337800
      DISPLAY(RESULTHOLDER,TRUE);                                       10337900
      DISPLAY(LASTRESULT,FALSE);                                        10338000
       WRITE (P[DBL],HEAD);                                             10338100
      SIZ:=R.[8:10]-1;                                                  10338200
      R:=R.CF;                                                          10338300
     FOR I:=0 STEP 1 UNTIL SIZ DO                                       10338400
    IF OPERAND(R+I,J) AND (J=REAL(NOT FALSE)) THEN BEGIN                10338500
    BUMPI; GO FND; END;                                                 10338600
     I:=L;                                                              10338700
       DO BUMPI UNTIL                                                   10338800
      OPERAND(I+R,J) AND REAL(BOOLEAN(J) EQV                            10338900
     BOOLEAN("|0000"&"4"[3:45:3]))=REAL(NOT FALSE) OR I=L;              10339000
FND:                                                                    10339100
      BL(A);                                                            10339200
      DO BEGIN                                                          10339300
          BUNG:=I=L;                                                    10339400
          IF OPERAND(K:=I+R,J) AND J.[1:5]="D" THEN                     10339500
          WRITE(P[DBL],INTR) ELSE                                       10339600
          IF Y THEN                                                     10339700
           BEGIN                                                        10339800
            Y:=FALSE;                                                   10339900
            A[3]:=OCTAL(HIHALF(K));                                     10340000
            A[4]:=OCTAL(LOHALF(K));                                     10340100
        TUBU(J.[9:4],J.[14:4],A[11]);                                   10340200
            IF BUNG THEN ELSE                                           10340300
           BEGIN                                                        10340400
        BUMPI;  BUNG:=I=L;                                              10340500
              A[6]:=OCTAL(HIHALF(K:=I+R));                              10340600
              A[7]:=OCTAL(LOHALF(K));                                   10340700
        IF BUNG THEN ELSE                                               10340800
        BEGIN                                                           10340900
        BUMPI;BUNG:=I=L;                                                10341000
         A[9]:=OCTAL(HIHALF(K:=I+R));                                   10341100
         A[10]:=OCTAL(LOHALF(K));                                       10341200
              WRITE(P[DBL],12,A[*]);                                    10341300
              BL(A);                                                    10341400
     END                                                                10341500
             END                                                        10341600
           END ELSE                                                     10341700
           BEGIN                                                        10341800
            Y:=TRUE;                                                    10341900
            A[0]:=OCTAL(HIHALF(K));                                     10342000
            A[1]:=OCTAL(LOHALF(K));                                     10342100
           END;                                                         10342200
           BUMPI;                                                       10342300
         END UNTIL BUNG;                                                10342400
      WRITE(P[DBL],12,A[*]);                                            10342500
     END ELSE WRITE(P,BADDY);                                           10342600
   END;                                                                 10342700
BOOLEAN STREAM PROCEDURE BITON(S,N); VALUE N;                           10342800
BEGIN SI:=S; SKIP N SB;                                                 10342900
    IF SB THEN TALLY:=1;                                                10343000
   BITON:=TALLY;                                                        10343100
END BITON;                                                              10343200
PROCEDURE WRITEOPTIONS;                                                 10343300
BEGIN DEFINE MAXOPT=13#; %CHANGE AS NUMBER OF OPTIONS INCREASE          10343400
    SWITCH FORMAT MCPOPT:=                                              10343500
                          ("CHECKLINK"),                                10343600
                          ("DEBUGGING"),                                10343700
                          ("DFX"),                                      10343800
                          ("DUMP"),                                     10343900
                          ("SAVERESULTS"),                              10344000
                          ("SHAREDISK"),                                10344100
                          ("STATISTICS"),                               10344200
                          ("TWXONLY"),                                  10344300
                          ("END");                                      10344400
    FORMAT HDR ("TSMCP COMPILE TIME OPTIONS ARE:");                     10344500
    REAL I;                                                             10344600
    WRITE(P[DBL],HDR);                                                  10344700
    FOR I:=0 STEP 1 UNTIL MAXOPT DO                                     10344800
    IF BITON(OPT,47-I) THEN WRITE(P,MCPOPT[I]);                         10344900
    NEXTITEM;                                                           10345000
END WRITEOPTIONS;                                                       10345100
REAL VFORK,FORKLNK,PREVLNK,FORKPRO,FQPARAM;                             10345200
$ VOID 10560001                                                         10500000
REAL LOGZERO;                                                           11721000
DEFINE MIX     =LOGZERO.[2:5]#,                                         11721110
       REM     =LOGZERO.[7:1]#,                                         11721120
       LL      =LOGZERO.[8:8]#,                                         11721130
       TYPE    =LOGZERO.[16:7]#,                                        11721140
       SPOED   =LOGZERO.[23:1]#,                                        11721150
       XCLOCK  =LOGZERO.[25:23]#;                                       11721160
DEFINE LOGTYPEMAX=17#;                                                  11721170
DEFINE LOGBUF=TB#;                                                      11721180
DEFINE ATIMES=ITIMES#;%TRICK SAVES ONE ARRAY TO CALL GETIMES            11721190
INTEGER ARRAY ITIMES[0:3];                                              11721200
ALPHA ARRAY YESNO[0:1];                                                 11721210
BOOLEAN DESCOK,EOFOK;                                                   11721220
FORMAT LOGHDR( "MIX",X1,"LL",X1,"TYPE",X1,"REMOTE",X1,"SPOED",          11721230
               X5,"TIME",X7,"LOG ENTRY" ),                              11721240
       FLOG(2(X1,I2),X3,I2,2(X2,A3,X2),A2,3(":",A2),X4,X80),            11721250
       BADZERO(X40,5("*"),"WORD ZERO HAS THE FLAGBIT ON..."),           11721260
       BADDESC(5("*"),"LOGARRAY DESCRIPTOR HAS BEEN CLOBBERED..."),     11721270
       BADEOF(5("*"),"LOGARRAY[30] IS INCORRECT...");                   11721280
IF DESCOK:=VERIFY(LOGARRAY,R,A) AND                                     12591000
     EOFOK:=(OPERAND(R+30,A) AND A=REAL(NOT FALSE)) THEN                12591010
     BEGIN %DUMP LOGARRAY                                               12591020
         WRITE(P[DBL],LOGHDR);                                          12591030
         YESNO[0]:="NO ";YESNO[1]:="YES";                               12591040
         FOR I:=0,1,2 DO                                                12591050
         IF NOT OPERAND(A:=R+10|I,LOGZERO) THEN                         12591060
              WRITE(P,BADZERO) ELSE                                     12591070
         BEGIN                                                          12591080
              MOVE(M[(A+1).ROW,(A+1).COL],LOGBUF,9);                    12591090
              GETIMES(XCLOCK,ITIMES,ATIMES);%NOTE:ATIMES=ITIMES         12591100
             WRITE(LINE[*],FLOG,MIX,LL,TYPE,YESNO[REAL(BOOLEAN(REM))],  12591110
                    YESNO[REAL(BOOLEAN(SPOED))],                        12591120
                    FOR C:=0 STEP 1 UNTIL 3 DO ATIMES[C]);              12591130
              IF TYPE NEQ 8 AND TYPE NEQ 9 AND                          12591140
                 TYPE LEQ LOGTYPEMAX THEN                               12591150
              MOVD(LOGBUF[0],LINE[5],9)  ELSE                           12591160
              MOVE(LOGBUF[0],LINE[5],IF TYPE=8 THEN 3                   12591170
                   ELSE IF TYPE=9 THEN 5 ELSE 9);                       12591180
              WRITE(P,15,LINE[*]);                                      12591190
         END;                                                           12591200
     END;                                                               12591210
IF NOT DESCOK THEN WRITE(P[DBL],BADDESC);                               12591220
IF NOT EOFOK THEN WRITE(P[DBL],BADEOF);                                 12591230
NEXTITEM;% END LOGARRAY DUMP                                            12591240
IF NOT COMMON THEN BEGIN                                                14400050
 WRITEOPTIONS;                                                          14400100
END;                                                                    14402300
IF NOT COMMON THEN BEGIN                                                14402900
IF NOT COMMON.[42:1] THEN DUMPMCPSPRT;                                  14410000
END; END;                                                               14450000
BEGIN                                                                   14576000
IF COMMON.[46:1] THEN PRINT(MEND+1,MSTART);                             14615000
END;                                                                    14921000
IF COMMON.[46:1] THEN PRINT(MEND+1,MAXCOR+1);                           14922000
        IF NOT COMMON.[41:1] THEN                                       15011000
        BEGIN                                                           15012000
            DUMPTABLES;                                                 15013000
            IF BOOLEAN(OPT.[43:1]) THEN DUMPRESULTHOLDER;               15014000
        END;                                                            15015000
$#PATCH NUMBER 2 FOR TSDUMP.XII CONTAINS 2 CARDS                             &&&
            READ(MDUMP,513,A[*]);                                       02490000
            END ELSE I:=I+7;                                            02540000
