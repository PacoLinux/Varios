$#PATCH NUMBER 1 FOR FORTRAN.XII CONTAINS 3 CARDS                            &&&
% F O R T R A N   C O M P I L E R    X I I .  3            02/15/71     00001000
         IF LTYP = CTYP THEN                                            01883000
         IF REAL(BOOLEAN(CUR) EQV BOOLEAN(LST)) = REAL(NOT FALSE) THEN  01883100
$#PATCH NUMBER 2 FOR FORTRAN.XII CONTAINS 2 CARDS                            &&&
         IF NEXTCARD = 7 THEN                                           02420010
            BEGIN MOVESEQ(LASTSEQ,CRD[9]); GO TO ENDPA; END;            02420011
$#PATCH NUMBER 3 FOR  FORTRAN.XII CONTAINS 7 CARDS                           &&&
         "   XII.",I2,",",                                              02022500
         3                                                              02023500
   IF T ~ EXACCUM[1] = "      " THEN                                    02733000
     BEGIN IF NUMTYPE ! DOUBTYPE THEN NUMTYPE ~ REALTYPE; GO TO XIT END;02733500
   IF NUMTYPE ! DOUBTYPE THEN NUMTYPE ~ REALTYPE;                       02779500
    CHECKPERIOD                                                         02879000
$ VOID   02882001                                                       02880000
$#PATCH NUMBER 4 FOR FORTRAN.XII     CONTAINS 17 CARDS         C
% F O R T R A N   C O M P I L E R    X I I .  15           04/15/71     00001000
ALPHA ARRAY INT[0:166];                                                 00233000
                                                                        01841100
                   LSTT[LSTS~LSTS+1] ~ STRINGSIZE & STRINGTYPE[TYPC]    01844000
                                         & SIZ[3:33:15];                01844100
         15                                                             02023500
IF BUFF = 1 THEN BUFF ~ 2; IF RECORD = 1 OR RECORD = 2 THEN RECORD ~ 3; 02235000
         A ~ 0; B ~ 83;                                                 03219000
              ".FBINB" , OCT160,                                        03542050
         A ~ 0; B ~ 83;                                                 03997000
            EMITV(NEED(".FBINB",INTRFUNID));                            04834000
              NF: IF RDTRIN THEN EMITL(0) ELSE EMITPAIR(1,SSN);         04863000
                  EMITL(0);                                             04863100
            EMITV(NEED(".FBINB",INTRFUNID));                            04943000
IF FREEREAD THEN                                                        04956000
$ VOID                                                                  04956850
                   IF NOFORMT THEN EMITV(NEED(".FBINB",INTRFUNID)) ELSE 04956925
$#PATCH NUMBER 5 FOR FORTRAN.XII      CONTAINS  2  CARDS       C
      EMITL(3+FILEARRAYPRT.[38:1]);%CONSIDER POSSIBLE XRT               04615000
      EMITO(BFC);                  % BRANCH AROUND TERMINATION CODE     04615100
$#PATCH NUMBER  6 FOR FORTRAN.XII      CONTAINS  2 CARDS       C
              ELSE IF EXPRESULT = EXPCLASS AND NOT INTFID               03936300
                   THEN EMITO(XCH);                                     03936400
$#PATCH NUMBER  7 FOR FORTRAN.XII      CONTAINS 1 CARDS        C
   IF GET(L+2) < 0 THEN GO TO XIT; % PARAMETER INFO KNOWN               03996050
$#PATCH NUMBER 8 FOR FORTRAN.XII      CONTAINS  3 CARDS        C
         OCT2021010442215055,                                           03119000
         OCT0106177404310415,                                           03121000
         OCT1025042112350000;                                           03122000
$#PATCH NUMBER  9 FOR FORTRAN.XII      CONTAINS  2 CARDS       C
         IF NEXTCARD=6 THEN GO XIT ;                                    02376000
         CARDCOUNT~CARDCOUNT+1 ;                                        02377000
$#PATCH NUMBER  10 FOR FORTRAN.XII      CONTAINS 1 CARDS       C
           PF~TRUE;  DECIMAL~0;  ZF~FALSE ;                             04722500
$#PATCH NUMBER 11 FOR FORTRAN.XII     CONTAINS 4 CARDS         C
              A~ENTIER(B|ENTIER(T/(20|B)+.999999999)+.5) ;              03162030
         EMITNUM(J.[30:12]) ;  % RECORD SIZE                            03171000
         EMITNUM(J.[18:12]) ;  % BLOCK SIZE                             03172000
         EMITNUM(J.[ 6:12]) ;  % SAVE FACTOR                            03173000
$#PATCH NUMBER  12 FOR FORTRAN.XII     CONTAINS  1 CARDS       C
         DO SCAN UNTIL NEXT=SEMI OR NEXT=EOF ;                          05598000
$#PATCH NUMBER  13 FOR FORTRAN.XII      CONTAINS  5 CARDS      C
           &(IF REPEAT{0 AND PARENCT>1 THEN 1 ELSE REPEAT)[TOREPEAT] ;  04726500
              BEGIN                                                     04748000
                   IF (J~WSA[TOTAL-1]).[42:6]>0 OR (I~J.[1:15])=RTPARN  04748800
                      OR (REPEAT}32 AND I!XPHASE) THEN GO NEWWD ;       04749000
                   IF I=XPHASE AND (I~J.[18:15]+REPEAT)<4096 THEN       04749200
$#PATCH NUMBER 14 FOR FORTRAN.XII     CONTAINS  51 CARDS       I
    REAL TM ;                                                           04028010
    DEFINE EO=EMITO#, EP=EMITPAIR#, EOL=EMITOPDCLIT#,                   04028020
           ES1(OP)=BEGIN EO(XCH); EP(9,STD); EO(OP) END #,              04028030
           ES2=BEGIN  EP(9,STD); EO(XCH);  EP(17,SND); EO(MUL) END # ;  04028040
    LABEL CTYP, DTYP, RLESSC, DLESSC, CLESSD, CLESSC, RPLUSD, DTIMESC,  04028050
          CTIMESR, CDIVBYD, CTIMESR1, CTIMESR2, DLESSC1 ;               04028060
              EO(CHS); EP(9,STD); EO(XCH); EOL(9); EO(XCH); EP(0,XCH) ; 04235000
              EO(AD2) ;                                                 04236000
$VOID 04237001                                                          04237000
      BEGIN TM~AD2 ;                                                    04260000
RPLUSD:  EP(9,STD); EO(XCH); EOL(9); EO(XCH); EP(0,XCH); EO(TM) ;       04260010
DTYP:    OPTYPE[IT~IT-1]~DOUBTYPE ;                                     04260020
      END ;                                                             04260030
      BEGIN TM~ADD; GO RLESSC END ;                                     04261000
      BEGIN TM~ADD; GO DLESSC END ;                                     04268000
      BEGIN TM~ADD; GO CLESSD END ;                                     04270000
      BEGIN TM~ADD; GO CLESSC END ;                                     04271000
      BEGIN EO(CHS); TM~AD2; GO RPLUSD END ;                            04281000
      BEGIN TM~SUB ;                                                    04282000
RLESSC:  ES1(TM); GO DLESSC1 ;                                          04282010
      END ;                                                             04282030
      BEGIN TM~SUB ;                                                    04289000
DLESSC:  ES1(TM); EO(XCH); EO(DEL) ;                                    04289005
DLESSC1: EOL(9); IF TM=SUB THEN EO(CHS); GO CTIMESR2 ;                  04289007
      END ;                                                             04289010
      BEGIN TM~SUB ;                                                    04291000
CLESSD:  EO(XCH); EO(DEL); EO(TM) ;                                     04291010
CTYP:    OPTYPE[IT~IT-1]~COMPTYPE ;                                     04291015
      END ;                                                             04291020
      BEGIN TM~SUB ;                                                    04292000
CLESSC:  ES1(TM); GO CTIMESR1 ;                                         04292010
      END ;                                                             04292020
      BEGIN TM~ML2; GO RPLUSD END ;                                     04310000
      BEGIN ES2; GO DTIMESC END ;                                       04311000
      BEGIN ES2; EO(XCH); EO(DEL) ;                                     04318000
DTIMESC: EOL(9); EOL(17); EO(MUL); GO CTYP ;                            04318010
      END ;                                                             04318020
      BEGIN TM~MUL ;                                                    04319000
CTIMESR: EP(9,SND); EO(TM) ;                                            04319010
CTIMESR1:EO(XCH); EOL(9); EO(TM) ;                                      04319020
CTIMESR2:EO(XCH); GO CTYP ;                                             04319030
      END ;                                                             04319040
      BEGIN TM~MUL; GO CDIVBYD END ;                                    04320000
      BEGIN                                                             04329000
      EP(9,STD); EP(17,STD); EP(0,XCH); EOL(17); EOL(9); EO(DV2) ;      04329010
      GO DTYP ;                                                         04329020
      END ;                                                             04329030
      BEGIN TM~DIU; GO CTIMESR END ;                                    04338000
      BEGIN TM~DIU ;                                                    04339000
CDIVBYD: EO(XCH); EO(DEL); GO CTIMESR ;                                 04339010
      END ;                                                             04339020
$#PATCH NUMBER 15 FOR FORTRAN.XII      CONTAINS  299  CARDS    I
167   INTRINSICS-NAMED FUNCT MUST HAVE PREVIOUS EXTERNAL REFERENCE.     00143027
BOOLEAN SCANENTER ; % TRUE IFF SCAN JUST DID AN ENTER ON AN ID.         00155110
DEFINE NUMINTM1=                                                        00155210
81                                                                      00155211
#;% NUMINTM1 IS THE NUMBER OF INTRINSICS MINUS 1; FOR EACH NEW INTRINSIC00155212
%   WHICH IS ADDED, ADD 1 TO THE VALUE ON SEQ# 00155211.                00155213
ALPHA EQVID, INTID, REALID ;                                            00165000
ARRAY INLINEINT[0:35] ;                                                 00169310
DEFINE INTCLASS=[6:3]#, INTPARMCLASS=[9:3]#, INTINLINE=[12:6]#,         00241010
       INTPRT =[24:6]#, INTPARMS   =[30:6]#, INTNUM  =[36:12]#,         00241020
       INAM  =[12:36]#, INTX       =[2:10]#, INTSEEN   =[2:1]# ;        00241030
         ,TOP=262#                                                      00330010
"INTRNSCS","-NAMD FU","NCT MUST"," HAV PRE","V EXTRNL"," REFERNC", %167 00596517
PROCEDURE EMITDDT(B,A,X);  VALUE B,A,X;  INTEGER B,A,X ;                01364010
    BEGIN % DOES DIB B, DIA A, TRB X; HANDLES [B:A:X].                  01364020
    EMITD(B~B MOD 6+B DIV 6|8,DIB);  EMITD(A~A MOD 6+A DIV 6|8,DIA) ;   01364030
    EMITD(X~X,TRB) ;                                                    01364035
    END OF EMITDDT ;                                                    01364040
PREC~NEXT~FNEXT~REAL(SCANENTER~FALSE) ;                                 02804000
IF SCANENTER~FNEXT~SEARCH(T)=0 THEN FNEXT~ENTER(IDINFO,T) ELSE          02970000
$VOID 02996001                                                          02994000
         A~0;  B~NUMINTM1 ;                                             03219000
         IF (T1~INT[PRI+1].INTPARMS)!0                                  03230000
         IF (FID~INTLOC[MFID~INT[PRI+1].INTNUM])=0 THEN                 03234000
         IF (FID~INTLOC[MFID~INT[PRI+1].INTNUM])=0 THEN                 03270000
FILL INLINEINT[*] WITH % FILLS MUST BE IN ASCENDING ORDER FOR           03484100
                       % BINARY SEARCH IN FUNCTION AND DOITINLINE.      03484120
                       % INLINEINT[I].[1:1] = 1 ONCE CODE FOR INTRINSIC 03484122
                       %                        HAS BEEN EMITTED INLINE.03484124
                       % INLINEINT[I].[2:10]=INDEX INTO 2-ND WORD OF THE03484126
                       %                     CORR ENTRY IN INT.         03484128
                       % INLINEINT[I].[12:36]=NAME OF INTRINSIC.        03484130
%********FIRST FILL MUST BE NUMBER OF INTRINSICS ******************     03484140
34,                                                                     03484160
"00ABS   ",                                                             03484180
"00AIMAG ",                                                             03484200
"00AINT  ",                                                             03484220
"00AMAX0 ",                                                             03484224
"00AMAX1 ",                                                             03484228
"00AMIN0 ",                                                             03484232
"00AMIN1 ",                                                             03484236
"00AMOD  ",                                                             03484240
"00AND   ",                                                             03484260
"00CMPLX ",                                                             03484280
"00COMPL ",                                                             03484300
"00CONJG ",                                                             03484320
"00DABS  ",                                                             03484340
"00DBLE  ",                                                             03484360
"00DIM   ",                                                             03484380
"00DSIGN ",                                                             03484400
"00EQUIV ",                                                             03484420
"00FLOAT ",                                                             03484440
"00IABS  ",                                                             03484460
"00IDIM  ",                                                             03484480
"00IDINT ",                                                             03484500
"00IFIX  ",                                                             03484520
"00INT   ",                                                             03484540
"00ISIGN ",                                                             03484560
"00MAX0  ",                                                             03484564
"00MAX1  ",                                                             03484568
"00MIN0  ",                                                             03484572
"00MIN1  ",                                                             03484576
"00MOD   ",                                                             03484580
"00OR    ",                                                             03484600
"00REAL  ",                                                             03484620
"00SIGN  ",                                                             03484640
"00SNGL  ",                                                             03484660
"00TIME  ",                                                             03484680
 0 ;                                                                    03484990
COMMENT THESE NAMES (1-ST WORD OF EACH TWO-WORD ENTRY) MUST BE IN       03486000
         ASCENDING ORDER FOR BINARY LOOKUPS.                            03486010
         THE SECOND WORD HAS THE FOLLOWING FORMAT:                      03486020
         .[1:1] = 0 IF THE INTRINSIC DOES NOT HAVE A PERMANENT PRT      03486030
                    LOCATION, OTHERWISE = 1.  MAY BE RESET BY           03486040
                    WRAPUP.  SEE .[18:6] BELOW.                         03486050
         .[2:1] = .INTSEEN = 1 IFF INTRINSICS FUNCTION HAS BEEN SEEN.   03486055
         .[6:3] = .INTCLASS = CLASS OF THE INTRINSIC.                   03486060
         .[9:3] = .INTPARMCLASS = CLASS OF PARAMETERS.                  03486070
         .[12:6] = .INTINLINE = INDEX FOR DOITINLINE IF !0, OTHERWISE   03486080
                                DO IT VIA INTRINSIC CALL.               03486090
         .[24:6] = .INTPRT = FIXED PRT LOCATION. SEE .[1:1] ABOVE.      03486100
         .[30:6] = .INTPARMS = NUMBER OF PARAMETERS REQUIRED BY THE INT.03486110
         .[36:12] = .INTNUM = INTRINSICS NUMBER.                        03486120
         THE FIELDS .[3:3] AND .[18:6] ARE SO FAR UNUSED.               03486130
;                                                                       03486140
%                                                                       03486144
%***********************************************************************03486145
%*********  IF YOU ADD AN INTRINSIC, BE SURE TO CHANGE NUMINTM1  *******03486146
%*********  AT SEQUENCE NUMBER 00155211.......THANK YOU.         *******03486147
%***********************************************************************03486148
%                                                                       03486149
$VOIDT 03563899                                                         03486500
"ABS   ", OCT0033010000010007,                                          03487000
"AIMAG ", OCT0036020000010074,                                          03488000
"AINT  ", OCT0033030000010054,                                          03489000
"ALGAMA", OCT0033000000010127,                                          03490000
"ALOG10", OCT0033000000010103,                                          03491000
"ALOG  ", OCT2033000035010017,                                          03492000
"AMAX0 ", OCT0031250000000031,                                          03493000
"AMAX1 ", OCT0033250000000031,                                          03494000
"AMIN0 ", OCT0031250000000032,                                          03495000
"AMIN1 ", OCT0033250000000032,                                          03496000
"AMOD  ", OCT0033040000020063,                                          03497000
"AND   ", OCT0033050000020130,                                          03498000
"ARCOS ", OCT0033000000010117,                                          03499000
"ARSIN ", OCT2033000032010116,                                          03500000
"ATAN2 ", OCT2033000044020114,                                          03501000
"ATAN  ", OCT2033000037010016,                                          03501500
"CABS  ", OCT2036000045010053,                                          03502000
"CCOS  ", OCT0066000000010110,                                          03503000
"CEXP  ", OCT0066000000010100,                                          03504000
"CLOG  ", OCT0066000000010102,                                          03505000
"CMPLX ", OCT0063060000020075,                                          03506000
"COMPL ", OCT0033070000010132,                                          03507000
"CONCAT", OCT0033000000050140,                                          03508000
"CONJG ", OCT0066110000010076,                                          03509000
"COSH  ", OCT0033000000010121,                                          03510000
"COS   ", OCT0033000000010015,                                          03511000
"COTAN ", OCT0033000000010112,                                          03512000
"CSIN  ", OCT0066000000010106,                                          03513000
"CSQRT ", OCT0066000000010124,                                          03514000
"DABS  ", OCT0055010000010052,                                          03515000
"DATAN2", OCT0055000000020115,                                          03516000
"DATAN ", OCT2055000041010113,                                          03517000
"DBLE  ", OCT0053120000010062,                                          03518000
"DCOS  ", OCT0055000000010107,                                          03519000
"DEXP  ", OCT2055000047010077,                                          03520000
"DIM   ", OCT0033100000020072,                                          03521000
"DLOG10", OCT0055000000010104,                                          03522000
"DLOG  ", OCT2055000042010101,                                          03522500
"DMAX1 ", OCT0055000000000066,                                          03523000
"DMIN1 ", OCT0055000000000067,                                          03524000
"DMOD  ", OCT2055000046020065,                                          03525000
"DSIGN ", OCT0055130000020071,                                          03526000
"DSIN  ", OCT2055000043010105,                                          03527000
"DSQRT ", OCT2055000050010123,                                          03528000
"EQUIV ", OCT0033140000020133,                                          03529000
"ERF   ", OCT0033000000010125,                                          03530000
"EXP   ", OCT2033000033010020,                                          03531000
"FLOAT ", OCT0031150000010060,                                          03532000
"GAMMA ", OCT2033000040010126,                                          03533000
"IABS  ", OCT0011010000010007,                                          03534000
"IDIM  ", OCT0011100000020072,                                          03535000
"IDINT ", OCT0015240000010057,                                          03536000
"IFIX  ", OCT0013030000010054,                                          03537000
"INT   ", OCT0013030000010054,                                          03538000
"ISIGN ", OCT0011160000020070,                                          03539000
".ERR. ", OCT2000000030000134,                                          03540000
".FBINB", OCT0000000000000160,                                          03540500
".FINAM", OCT0000000000000154,                                          03541000
".FONAM", OCT0000000000000155,                                          03542000
".FREFR", OCT0000000000000146,                                          03543000
".FREWR", OCT0000000000000153,                                          03544000
".FTINT", OCT0000000000000050,                                          03545000
".FTNIN", OCT0000000000000156,                                          03546000
".FTNOU", OCT0000000000000157,                                          03547000
".FTOUT", OCT0000000000000051,                                          03548000
".LABEL", OCT0000000000000021,                                          03549000
".MATH ", OCT0000000000000055,                                          03550000
".XTOI ", OCT0000000000000056,                                          03551000
"MAX0  ", OCT0011250000000135,                                          03552000
"MAX1  ", OCT0013250000000135,                                          03553000
"MIN0  ", OCT0011250000000136,                                          03554000
"MIN1  ", OCT0013250000000136,                                          03555000
"MOD   ", OCT0011170000020137,                                          03556000
"OR    ", OCT0033200000020131,                                          03557000
"REAL  ", OCT0036210000010073,                                          03558000
"SIGN  ", OCT0033160000020070,                                          03559000
"SINH  ", OCT0033000000010120,                                          03560000
"SIN   ", OCT2033000034010014,                                          03561000
"SNGL  ", OCT0035230000010061,                                          03562000
"SQRT  ", OCT2033000031010013,                                          03563000
"TANH  ", OCT0033000000010122,                                          03563010
"TAN   ", OCT2033000036010111,                                          03563020
"TIME  ", OCT0031220000010064,                                          03563030
 0;                                                                     03563900
BLANKS~INLINEINT[MAX~0] ;                                               03563910
FOR SCN~1 STEP 1 UNTIL BLANKS DO                                        03563920
    BEGIN                                                               03563930
    EQVID~INLINEINT[SCN];  WHILE INT[MAX]!EQVID DO MAX~MAX+2 ;          03563940
    INLINEINT[SCN].INTX~MAX+1 ;                                         03563950
    END ;                                                               03563960
$VOID 03567001                                                          03567000
BOOLEAN PROCEDURE DOITINLINE(LNK);  VALUE LNK;  REAL LNK ;              03990010
    BEGIN                                                               03990020
    REAL C,I,C1,C2,C3,C4,C5 ;                                           03990030
    LABEL HUNT,FOUND,XIT,AIMAG,AINT,CMPLX,LOOP,DDT111,SNGL ;            03990040
    DEFINE OPTYPE=LSTT#,  EO=EMITO#,  EP=EMITPAIR#,  EOL=EMITOPDCLIT# ; 03990045
    IF DEBUGTOG THEN FLAGROUTINE("DOITIN","LINE  ",TRUE) ;              03990047
    C1~1;  C2~INLINEINT[0];  C3~GET(ABS(LNK)+1) ;                       03990050
HUNT:                                                                   03990060
    IF (C~INLINEINT[I~(C1+C2).[36:11]].INAM)<C3 THEN C1~I+1             03990070
    ELSE IF C>C3 THEN C2~I-1 ELSE GO FOUND ;                            03990080
    IF C1<C2 THEN GO HUNT;  IF INLINEINT[C1].INAM!C3 THEN GO XIT;  I~C1;03990090
FOUND:                                                                  03990096
    C1~(C~INT[C2~(C4~INLINEINT[I]).INTX]).INTPARMCLASS ;                03990098
    IF LNK<0 THEN                                                       03990100
         BEGIN                                                          03990102
         I~-LNK;  DOITINLINE~BOOLEAN(LNK~NEED(C3,FUNID)) ;              03990104
         IF (C2~GET(LNK+2))<0 THEN GO XIT ;                             03990105
         IF C4>0 THEN IF GET(I).CLASS}FUNID THEN GO XIT ;               03990106
         PUT(LNK+2,-(C2&(I~C.INTPARMS)[TONEXTRA]&NEXTEXTRA[TOADINFO])) ;03990108
         FOR I~I STEP -1 UNTIL 1 DO                                     03990112
              BEGIN                                                     03990114
              EXTRAINFO[NEXTEXTRA.IR,NEXTEXTRA.IC]~0&EXPCLASS[TOCLASS]  03990116
                                                    &C1[TOSUBCL] ;      03990117
              NEXTEXTRA~NEXTEXTRA+1 ;                                   03990118
              END ;                                                     03990120
         INFO[LNK.IR,LNK.IC].SUBCLASS~C.INTCLASS ;                      03990122
         GO XIT ;                                                       03990124
         END ;                                                          03990126
    IF BOOLEAN(LNK.[2:1]) THEN                                          03990127
    STACKHEAD[GET((NEXTINFO~NEXTINFO-3)+1) MOD SHX]~GET(NEXTINFO).LINK ;03990128
    LNK~C.INTINLINE;  INT[C2].INTSEEN~1;  DOITINLINE~TRUE ;             03990130
    IF C4>0 THEN INLINEINT[I]~-C4;  I~0 ;                               03990132
    IF GLOBALNEXT!LPAREN THEN BEGIN FLOG(106); GO XIT END ;             03990136
LOOP:    SCAN;  C5~XTA ;                                                03990140
    IF I=0 THEN                                                         03990145
         IF LNK=10 THEN EMITL(0) ELSE IF LNK=21 THEN EMITDESCLIT(2) ;   03990150
    IF (C4~EXPR(TRUE))!C1 AND (C1!REALTYPE OR C4!INTYPE) THEN           03990160
         BEGIN XTA~C5; FLAG(88); C2~-2 END ;                            03990165
    I~I+1;  IF GLOBALNEXT=COMMA THEN GO LOOP ;                          03990170
    IF GLOBALNEXT!RPAREN THEN BEGIN FLOG(108); C2~-2 END;  SCAN ;       03990180
    IF I!C.INTPARMS THEN IF C.INTPARMS!0 OR I<2 THEN                    03990190
         BEGIN XTA~C3;  FLAG(28);  C2~-2 END ;                          03990195
    OPTYPE[IT]~C.INTCLASS;  IF C2<0 THEN GO XIT ;                       03990200
    CASE (LNK-1) OF                                                     03990210
         BEGIN                                                          03990220
         EO(SSP) ; % @1: ABS, DABS, IABS.                               03990230
AIMAG:   EO(DEL) ; % @2: AIMAG.                                         03990240
AINT:    EP(1,IDV) ; % @3: AINT, IFIX, INT.                             03990250
         EO(RDV) ; % @4: AMOD.                                          03990260
         EO(LND) ; % @5: LOGICAL AND.                                   03990270
CMPLX:   EO(XCH) ; % @6: CMPLX.                                         03990280
         EO(LNG) ; % @7: LOGICAL COMPLIMENT (NEGATION).                 03990290
                                                                        03990291
         BEGIN % @10: DIM, IDIM.                                        03990300
         EO(SUB);  EO(DUP);  EP(0,LESS) ;                               03990310
         IF ADR>4082 THEN BEGIN ADR~ADR+1; SEGOVF END ;                 03990315
         EP(2,BFC);  EO(DEL);  EMITL(0) ;                               03990320
         END ;                                                          03990330
                                                                        03990331
         BEGIN EO(XCH); EO(CHS); GO CMPLX END ; % @11: CONJG.           03990340
         ; % @12: DBLE (SOME CODE ALREADY EMITTED ABOVE).               03990350
                                                                        03990351
         BEGIN EO(XCH); EO(DEL) ; % @13: DSIGN.                         03990360
DDT111:  EMITDDT(1,1,1) ;                                               03990370
         END ;                                                          03990380
                                                                        03990381
         EO(LQV) ; % @14: LOGICAL EQUIVALENCE.                          03990390
         ; % @15: FLOAT.                                                03990400
         GO DDT111 ; % @16: ISIGN, SIGN.                                03990410
         BEGIN EO(RDV); GO AINT END ; % @17: MOD.                       03990420
         EO(LOR) ; % @20: LOGICAL OR.                                   03990430
         BEGIN EO(XCH); GO AIMAG END ; % @21: REAL.                     03990440
         EP(1,KOM) ; % @22: TIME.                                       03990450
                                                                        03990460
         BEGIN % @23: SNGL.                                             03990470
SNGL:    EP(9,SND);  EO(XCH);  EMITDDT(47,9,1);  EMITL(0) ;             03990480
         EMITDDT(9,9,38); EOL(9); EMITO(ADD); IF LNK=20 THEN GO AINT ;  03990490
         END ;                                                          03990500
                                                                        03990510
         GO SNGL ; % @24: IDINT.                                        03990520
                                                                        03990530
         BEGIN % @25: AMAX0,AMAX1,AMIN0,AMIN1,MAX0,MAX1,MIN0,MIN1.      03990535
               %      SOME CODE ALREADY EMITTED ABOVE.                  03990540
         IF ADR>4068 THEN BEGIN ADR~ADR+1; SEGOVF END ;                 03990542
         EP(9,STD); EO(DUP); EOL(9) ;                                   03990545
         EO(IF C3.[24:6]="A" OR C3.[24:6]="X" THEN LESS ELSE GRTR) ;    03990550
         EP(2,BFC); EO(DEL); EOL(9); EO(XCH); EO(TOP); EO(LNG) ;        03990555
         EP(14,BBC); EO(DEL); IF C3="MIN1  " OR C3="MAX1  " THEN GO AINT03990560
         END ;                                                          03990565
                                                                        03990566
         END OF CASE STATEMENT ;                                        03990800
XIT:                                                                    03990810
    IF DEBUGTOG THEN FLAGROUTINE("DOITIN","LINE  ",FALSE) ;             03990815
    END OF DOITINLINE ;                                                 03990820
         A~0;  B~NUMINTM1 ;                                             03997000
    NPARMS~(X~INT[I+1]).INTPARMS;  INT[I+1].INTSEEN~1 ;                 04007000
    INFO[L.IR,L.IC].SUBCLASS~X.INTCLASS ;                               04008000
    T~X.INTPARMCLASS ;                                                  04011000
LABEL HERE ;                                                            04022010
   LINK~(EXPLNK~FNEXT)&REAL(SCANENTER)[2:47:1] ;                        04068000
            IF A.CLASS=EXTID OR GET(TM~GLOBALSEARCH(GET(LINK+1))).CLASS=04114520
              EXTID THEN LINK~REAL(DOITINLINE(-LINK)) ELSE              04114530
            IF A.CLASS<FUNID AND TM=0 THEN                              04115000
              IF DOITINLINE(LINK) THEN GO HERE ELSE                     04115010
HERE:                                                                   04173100
         REAL A,B,C,I;  LABEL FOUND ;                                   05127100
         B~NUMINTM1 ;                                                   05130100
         WHILE A+1<B DO                                                 05130110
              BEGIN                                                     05130115
              IF C~INT[I~REAL(BOOLEAN(A+B) AND BOOLEAN(1022))]=INFB     05130120
              THEN GO FOUND ;                                           05130125
              IF INFB<C THEN B~I.[36:11] ELSE A~I.[36:11] ;             05130130
              END ;                                                     05130135
         IF INFB=INT[I~(A+B)|2-I] THEN GO FOUND ;                       05130140
         IF FALSE THEN                                                  05130145
FOUND:   IF BOOLEAN(INT[I+1].INTSEEN) THEN BEGIN XTA~INFB; FLAG(167)END;05130150
$#PATCH NUMBER  16 FOR FORTRAN.XII CONTAINS  3 CARDS       C                 &&&
% F O R T R A N  C O M P I L E R   X I I . 20              05/15/71     00001000
FORMAT DT(X9,"B 5 7 0 0    F O R T R A N    C O M P I L A T I O N",     02022000
         20                                                             02023500
$#PATCH NUMBER  17 FOR FORTRAN.XII CONTAINS 99 CARDS       C                 &&&
168   DATA STMT COMMON ELEM MUST BE IN BLK DATA SUBPRM                  00143028
       EQ       = [20: 1]#,                                             00246100
       SUBCLASS = [21: 3]#,                                             00247000
       TOLASTC  =  3:36:12#,                                            00262100
       TOEQ     = 20:47: 1#,                                            00263100
       TOSUBCL  = 21:45: 3#,                                            00264000
"DATA STM","T COMMON"," ELEM MU","ST BE IN"," BLK DAT","A SUBPRG", %168 00596518
PROCEDURE CORRECTINFO(R,A); VALUE R,A; INTEGER R,A;                     00651000
COMMENT  THIS PROCEDURE CORRECTS THE INFO TABLE FOR COMMON AND          00651010
           EQUIVALENCE ELEMENTS.                                        00651020
         IF ITEMS ARE IN COMMON THE INFA[EQ] BIT IS SET                 00651030
           THIS BIT IS USED TO TELL DATA STATEMENTS THAT THIS IS A      00651040
           COMMON ELEMENT AND IF NOT IN BLOCK DATA SUBPROGRAM EMIT      00651050
           SYNTAX ERROR 168.                                            00651060
         THE INFA[CE] BIT IS SET TO TELL THAT IF THE CLASS IS VARID     00651070
           EMIT CODE AS IF THIS ITEM WERE ARRAYID BUT DO NOT            00651080
           ALLOW SUBSCRIPTING;                                          00651090
         PUT(L,INFA&TWODBIT[TOADJ]&CEBIT[TOCE]&A[TOEQ]);                00672000
COMMENT  THIS PROCEDURE MAKES THE DETERMINATION IF THIS GROUP           00676100
           IS EQUIVALENCE OR COMMON IF BOTH TREATED AS COMMON;          00676110
   DO IF GETC(T+1) ! 0 THEN BEGIN EQUIV(T); T~R; END                    00691900
       ELSE T~GETC(T).ADDR UNTIL T = R;                                 00691950
   IF GETC(T) > 0 THEN EQUIV(T);                                        00692000
$ VOID                                                                  00697000
      CORRECTINFO(R,0);                                                 00697100
$ VOID                                                                  00703000
   CORRECTINFO(R,1);                                                    00704000
COMMENT  THIS PROCEDURE FIXES UP THE INFO TABLE FOR THE EQUIV OR        01069100
           COMMON RING. THE FIRST ELEMENT PAST HAS AN OFFSET (DO NOT    01069110
           ALTER THIS) THE TYPE IS FIXED.  THE OFFSET IS DETERMINED     01069120
           FROM THE FIRST.  CORRECTINFO ADJUST THE OFFSET IF THERE      01069130
           IS A NEGATIVE OFFSET ON ANY ELEMENT.  THE INFA[ADJ] BIT IS   01069140
           SET IF THE ELEMENT HAS A NEGATIVE OFFSET.  IF THE ELEMENT    01069150
           APPEARED IN MORE THAN ONE EQUIVALENCE STATEMENT OR AN        01069160
           EQUIVALENCE STATEMENT AND A COMMON STATEMENT THE ELEMENTS    01069170
           ARE LINKED BY COM[LASTC] WHICH POINTS TO THE HEADER          01069180
           OF THAT STATEMENT;                                           01069190
$ VOID                                                                  01103000
$ VOID                                                                  01106000
$ VOID                                                                  01107000
      IF T ~ GETC(I).LASTC ! R THEN IF GETC(T) } 0 THEN EQUIV(T);       01122000
IF BOOLEAN(A.CE) OR BOOLEAN(A.EQ) THEN                                  01156000
      EMITL(LINFA.CLASNSUB&0[44:47:1]); EMITL(19); EMITO(STD);          04415230
         IF BOOLEAN(GET(LINDX).EQ) THEN FLAG(168);                      04500420
      EMITL(LINFA.CLASNSUB&0[44:47:1]);                                 04517000
BOOLEAN PROCEDURE RINGCHECK;                                            05063100
COMMENT  THIS PROCEDURE PREVENTS THE POSSIBILITY OF DELINKING A         05063110
           HEADER FROM THE HEADER RING;                                 05063120
    BEGIN                                                               05063200
         INTEGER I;                                                     05063250
         I~A;                                                           05063300
         DO                                                             05063350
         IF I ~ GETC(I).ADDR = ROOT THEN RINGCHECK ~ TRUE               05063400
         UNTIL I = A;                                                   05063450
    END RINGCHECK;                                                      05063500
PROCEDURE SETLINK(INFADDR); VALUE INFADDR; INTEGER INFADDR;             05063600
COMMENT  THIS PROCEDURE LINKS AN ELEMENT TO ITS PREVIOUS HEADER;        05063601
BEGIN                                                                   05063610
    INTEGER LAST,I; REAL COML; LABEL XIT;                               05063620
    LAST ~(GETC(INFADDR).LASTC)-1;                                      05063630
    FOR I ~ INFADDR+2 STEP 1 UNTIL LAST                                 05063640
    DO BEGIN IF GETC(I).CLASS = ENDCOM THEN I~GETC(I).LINK;             05063650
             IF FX1 = (COML~GETC(I)).LINK THEN                          05063660
       BEGIN IF COML.LASTC = A       THEN COM[PWI].LASTC~ROOT           05063670
             ELSE SETLINK(COML.LASTC);                                  05063680
             GO TO XIT;                                                 05063690
       END;                                                             05063700
       END;                                                             05063710
XIT:                                                                    05063720
END SETLINK;                                                            05063730
         BAPC(INFA&FX1[TOLINK]&1[TOCE]&ROOT[TOLASTC]);                  05085000
         IF BOOLEAN(INFA.CE) THEN FLAG(2);                              05086000
         IF BOOLEAN(INFA.EQ) THEN                                       05086100
         COM[NEXTCOM.IR,NEXTCOM.IC].LASTC ~ A ~ INFA.ADDR;              05088000
         SETLINK(A);                                                    05089050
         IF NOT RINGCHECK THEN                                          05089100
    BEGIN                                                               05089200
    END                                                                 05091100
COMMENT  THIS PROCEDURE MAKES THE COM ENTRY FOR COMMON ITEMS AND SETS   05161100
           THE CE BIT IN BOTH THE COM AND INFO TABLES AND LINKS         05161110
           THE HEADS OF CHAINS;                                         05161120
COMMENT  THIS PROCEDURE MAKES THE COM ENTRY FOR EQUIV ITEMS AND SETS    05230100
           THE EQ BIT IN BOTH THE COM AND INFO TABLES AND LINKS         05230110
           THE HEADS OF CHAINS;                                         05230120
         BOOLEAN FIRST,PCOMM;                                           05232050
         BAPC(INFA&FX1[TOLINK]&LENGTH[TORELADD]&1[TOEQ]&ROOT[TOLASTC]); 05268000
         IF(PCOMM~BOOLEAN(INFA.CE)) OR BOOLEAN(INFA.EQ) THEN            05269000
$ VOID                                                                  05269100
         IF FIRST AND PCOMM THEN BEGIN XTA~GET(FX1+1); FLAG(2) END      05270100
         ELSE IF NOT FIRST THEN FIRST ~ PCOMM;                          05270200
         PUT(FX1,INFA & 1[TOEQ]);                                       05270500
         COM[NEXTCOM.IR,NEXTCOM.IC].LASTC ~ A ~ INFA.ADDR;              05271000
         SETLINK(A) ;                                                   05272050
         IF NOT RINGCHECK THEN                                          05272100
    BEGIN                                                               05272200
    END                                                                 05274200
$ VOID                                                                  05275100
         PUT(FX1,INFA & 1[TOEQ] & ROOT[TOADDR]);                        05276000
      LSTT[LSTS] ~ NAME&INFA.CLASNSUB[2:38:10]&0[8:47:1];               05448500
$#PATCH NUMBER  18 FOR FORTRAN.XII CONTAINS  3 CARDS       C                 &&&
    EXECUTABLE;                                                         05300182
    SCAN;                                                               05300184
         CHAIN;                                                         05575100
$#PATCH NUMBER  19 FOR FORTRAN.XII CONTAINS 16 CARDS       I                 &&&
REAL DEBUGADR ;                                                         00174310
FORMAT FD(X100,"NEXT = ",I3,X2,2A6) ;                                   00332000
       FLAGROUTINEFORMAT(X41,A6,A2,X1,2A6," (",A1,I*,")"),              00333010
   DEBUGADR~ADR~-1 ;                                                    00782000
         FORMAT FF(X35,*(33(".")),A4,":",A1,2(X2,A4),X4,A4) ;           01192000
         WRITALIST(FF,6,IF ADR{DEBUGADR THEN 1 ELSE -1,B2D(ADR.[36:10]),01232000
                   B2D(ADR.[46:2]),CODE,MNM,B2D(SYL),0,0) ;             01233000
         IF DEBUGADR<ADR THEN DEBUGADR~ADR ;                            01233100
                   DI~DI+35; DS~10LIT"CONSTANT  " ;                     01240000
$VOID 01246001                                                          01245000
         ARRAY A[0:14];  FORMAT F(X63,"(DEC ",B,")") ;                  01248000
         WRITE(A[*],F,N);  WB2D(N,A) ;                                  01249000
         FORMAT FF(X35,*(33(".")),A4,":",A1,"  LINK",X10,A4,"******") ; 01430000
         WRITALIST(FF,4,IF ADR{DEBUGADR THEN 1 ELSE -1,B2D(ADR.[36:10]),01434000
                   B2D(ADR.[46:2]),B2D(N),0,0,0,0) ;                    01435000
         IF DEBUGADR<ADR THEN DEBUGADR~ADR ;                            01435010
$#PATCH NUMBER  20 FOR FORTRAN.XII CONTAINS  2 CARDS       C                 &&&
           STR ~ TRUE;                                                  04727600
           CODE ~ HPHASE;                                               04740600
$#PATCH NUMBER 21 FOR FORTRAN.XII CONTAINS 11  CARDS       I                 &&&
% F O R T R A N  C O M P I L E R   X I I . 24              06/15/71     00001000
         24                                                             02023500
$VOID 04654501                                                          04654500
$VOID 04681007                                                          04681006
IF DEBUGTOG THEN FOR I~0 STEP 1 UNTIL TOTAL DO                          04772610
    BEGIN                                                               04772615
    WRITE(LINE,[13]//,I,(J~WSA[I]).[1:5],J.[6:12],J.[18:12],J.[30:12],  04772620
                      J.[41:1],J.[42:4],J.[42:5],J.[44:1],J.[45:1],     04772625
                      J.[46:1],J.[46:2],J.[47:1]) ;                     04772630
    IF J.[1:5]=2 THEN I~I+(J.[6:12]+2).[36:9] ;                         04772635
    END ;                                                               04772640
$#PATCH NUMBER 22 FOR FORTRAN.XII CONTAINS  5  CARDS       C                 &&&
$VOID                                                                   00143022
$VOID                                                                   00143023
           ELSE IF PF THEN BEGIN IF DECIMAL>WIDTH THEN FLAG(129) END    04710000
                ELSE WIDTH~DECIMAL ;                                    04710500
$VOID 04711501                                                          04711000
$#PATCH NUMBER 23 FOR FORTRAN.XII CONTAINS  12 CARDS       C                 &&&
         LABEL XIT,TIX ;                                                04964000
         IF (TYPE~(INFA~GET(LINK)).SUBCLASS)=LOGTYPE OR TYPE=COMPTYPE OR04993000
            (I~EXPR(TRUE))=LOGTYPE OR I=COMPTYPE THEN                   04993500
              BEGIN IF I!TYPE THEN FLAG(139); GO TIX END ;              04993510
         IF TYPE=REALTYPE OR TYPE=INTYPE THEN                           04993530
              BEGIN                                                     04993540
              IF I=DOUBTYPE THEN BEGIN EMITO(XCH); EMITO(DEL) END ;     04993550
              IF TYPE=INTYPE THEN IF I!INTYPE THEN EMITPAIR(1,IDV) ;    04993560
              GO TIX ;                                                  04993570
              END ;                                                     04993580
         IF I!DOUBTYPE THEN EMITPAIR(0,XCH) ;                           04993590
TIX:                                                                    04993595
$#PATCH NUMBER 24 FOR FORTRAN.XII CONTAINS 11  CARDS       C                 &&&
162   HOL OR QUOTED STRING GREATER THAN 7 CHARACTERS IN EXPRESSION      00143022
"HOL OR Q","UOTED ST","RING > 7"," CHARACT","ERS IN E","XPRESSN ", %162 00596512
            EXPRESULT~ARRAYID ;                                         03887000
         NUMTYPE~INTYPE ;                                               04177400
         IF STRINGSIZE=1 THEN FNEXT~STRINGARRAY[0]                      04177500
         ELSE BEGIN                                                     04177550
              IF STRINGSIZE>2 OR STRINGARRAY[1].[18:30]!"     " THEN    04177575
                 FLAG(162) ;                                            04177600
              IF (FNEXT~STRINGARRAY[1].[12:6]&STRINGARRAY[0][6:12:36])  04177700
                .[6:6]>7 THEN NUMTYPE~REALTYPE ;                        04177800
              END ;                                                     04177900
$#PATCH NUMBER 25 FOR FORTRAN.XII CONTAINS  4 CARDS        C                 &&&
% F O R T R A N  C O M P I L E R   X I I I . 0             07/15/71     00001000
   IF LENGTH = 1 THEN LENGTH ~ 2;                                       00703000
         "  XIII.",I2,",",                                              02022500
         0                                                              02023500
$#PATCH NUMBER 26 FOR FORTRAN.XII CONTAINS  3 CARDS        C                 &&&
      IF GLOBALNEXT = 0 AND NAME = "$     " THEN                        03864000
$ VOIDT                                                                 03865000
         END                                                            03871000
$#PATCH NUMBER  27  FOR  FORTRAN.XII CONTAINS  4 CARDS     C                 &&&
    REAL BUF,ID;                                                        02362900
         BLANKIT(SSNM[5],1,0);                                          02364360
          BEGIN NEWSEQ(SSNM[5],ID);                                     02364560
              END UNTIL SEQCHK(SSNM[5],DB[9]) NEQ 3;                    02364800
