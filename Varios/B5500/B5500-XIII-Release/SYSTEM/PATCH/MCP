$#PATCH NUMBER 101 FOR MCP.XIII CONTAINS 86 CARDS
DEFINE LEFTARROW = "~"#;                                                00006150
                             IF (U AND @774) NEQ 16 THEN                22084000
                                   MULTITABLE[U]:=0;                    22084001
                        IF (U AND @774) NEQ 16 THEN                     22100000
                             MULTITABLE[U]:=RDCTABLE[U]:=0;             22100001
PROCEDURE SUSTATUS(A,DDD); VALUE A,DDD; REAL A; ARRAY DDD[*];           39990000
     BEGIN REAL RA,C,RT1,I;                                             39991000
           ARRAY ZSF[*]; ARRAY VADAR[*];                                39991500
SUBROUTINE SPOUTITNOW;                                                  39992000
     BEGIN                                                              39992002
           STREAM(N:= IF C THEN "B" ELSE "A",D:= I INX ZSF  ,B:=0,      39992005
             R:=0,A:=RA,Y:=0,KK:=RT1:=SPACE(20));                       39992010
              BEGIN SI:= LOC N;DS:= 2 LIT "DK";SI:=SI+7; DS:= CHR;      39992020
                        SI:=D;                                          39992030
                               10(L: IF SC = "0" THEN                   39992040
                             BEGIN           TALLY:=TALLY+1; B:=SI;     39992050
                    LL:            Y:=TALLY; SI:= LOC Y; SI:= SI +7;    39992052
                      IF SC > "9" THEN JUMP OUT 1 TO DD ELSE            39992054
                         BEGIN SI:=B; SI:=SI+1; GO TO L END; END;       39992056
                         Y:= TALLY; B:=SI; SI:= LOC Y;                  39992060
                         DS:=3 LIT " EU"; DS:= DEC; DS:= 4 LIT " SU ";  39992070
                         TALLY:=1; R:=TALLY; TALLY:=5;                  39992080
         5(N:=TALLY; SI:=B; SKIP N SB; IF SB THEN BEGIN SI:= LOC R;     39992090
                                               DS:= DEC; DS:= LIT",";   39992100
                                         END;                           39992110
             TALLY:=R; TALLY:=TALLY+1; R:=TALLY; TALLY:=N;              39992115
              TALLY:=TALLY+63); TALLY:=Y; TALLY:=TALLY+1; GO TO LL);    39992120
                DD:  SI:= LOC A; SI:= SI + 7;                           39992125
                                 DI:= DI-1;                             39992126
                   IF SC = "0" THEN DS:= 15 LIT " WENT NOT READY"       39992127
                               ELSE DS := 11 LIT " WENT READY";         39992128
                   DS:= LIT LEFTARROW;                                  39992129
     END;                                                               39992140
          SPOUT(RT1);                                                   39992150
      END;                                                              39992160
BOOLEAN SUBROUTINE TESTBITS;                                            39992500
       BEGIN                                                            39992510
           STREAM(A:=0:D:= I INX ZSF);                                  39992520
                 BEGIN SI:=D; 60(IF SB THEN BEGIN TALLY:=TALLY+1;       39992530
                             JUMP OUT 1 TO DD END ELSE SKIP SB);        39992540
                 DD:   A:= TALLY;                                       39992550
                 END;                                                   39992560
           TESTBITS := P;                                               39992570
       END;                                                             39992580
ZSF:= [M[RT1:= SPACE(4)]]&4[8:38:10];                                   39993000
VADAR:=[MULTITABLE[16]]&4[8:38:10];                                     39994000
             DISKWAIT(-A,-30,DIRECTORYTOP-SYSNO);                       39995000
             FOR I:=0 STEP 1 UNTIL 3 DO BEGIN                           39996000
                 ZSF[I]:= VADAR[I] AND ( NOT DDD[24+I] );               39997000
                 END;                                                   39997800
             FOR I:=0 STEP 2 UNTIL 2 DO BEGIN                           39998200
                   IF (TESTBITS NEQ 0 ) THEN                            39998300
                   BEGIN RA:=1; C:= (I EQL 2 ); SPOUTITNOW; END;        39998400
                                                END;                    39998500
             FOR I := 0 STEP 1 UNTIL 3 DO                               39998600
                             BEGIN                                      39998625
                 ZSF[I]:= ( NOT VADAR[I]) AND DDD[24+I];                39998650
                 IF DDD[24+I] NEQ VADAR[I] THEN DDD[24+I]:= VADAR[I];   39998665
                                 END;                                   39998666
             FOR I:=0 STEP 2 UNTIL 2 DO                                 39998675
               BEGIN IF (TESTBITS NEQ 0) THEN                           39998700
                     BEGIN RA:=0; C:=(I EQL 2); SPOUTITNOW; END;        39998725
               END;                                                     39998750
             DISKWAIT( A, 30,DIRECTORYTOP-SYSNO);                       39998775
         FORGETSPACE(ZSF);                                              39998800
     END;                                                               39999000
              REAL EUSU;                                                40008025
              ARRAY VADAR[*];                                           40008026
SUBROUTINE SETEUSU;                                                     40008400
    BEGIN STREAM(A:=(NOT EUSU).[43:5],B:=J,D:=(2|C) INX VADAR);         40008410
            BEGIN SI:=LOC A;SI:=SI+7;DI:=D;DI:=DI+B;DS:= CHR END;       40008420
          EUSU:=0;                                                      40008430
    END;                                                                40008440
VADAR:=[MULTITABLE[16]]&4[8:38:10];                                     40249250
    IF I EQL 0 THEN                                                     40257000
         BEGIN X2:=20|WAITIO(40+A INX@140000000,@64,18+C).[43:1]+X2;    40257030
               IF (X2=39) THEN VADAR[NT1:=1+C|2]:=P(DUP,LOD) OR TWO(J); 40257060
         END;                                                           40257100
     END ELSE                                                           40261050
     BEGIN EUSU:=EUSU OR TWO((IF X2=19 THEN I ELSE (I DIV 8)|4+(I AND   40261070
                              3))DIV 4);                                40261080
            I:=I+(((SU[NT1:=(5|J+50|C)].FORTYMILLDISK+1)|4)-1);         40261110
     END; END;                                                          40261130
                      SETEUSU;                                          40261200
     END;                                                               40262000
            SUSTATUS(A,DDD);                                            40356800
$:  THIS CHANGE WILL CAUSE A MESSAGE TO BE TYPED ON THE SPO DURING A
$:  HALT/LOAD WHICH INDICATES WHICH DISK FILE STORAGE UNITS HAVE GONE
$:  READY OR NOT READY SINCE THE LAST HALT/LOAD. THE MESSAGE HAS
$:  THE FORMAT:
$:
$:       [UNIT] [EU AND SU] WENT [READY/NOT READY]
$#PATCH NUMBER 102 FOR MCP.XIII CONTAINS 8 CARDS
                STREAM(A ~ TINU[U], B ~ IOQUE[S].[33:15], %             04445000
           MX ~ LOCATQUE[S].[3:5], KEY); %                              04445100
          BEGIN SI ~ LOC A; SI ~ SI + 5; DS ~ 3 CHR; %                  04446000
           DS ~ 17 LIT " NOT READY EU NO."; %                           04447000
           SI ~ B; SI ~ SI + 1; DS ~ CHR; %                             04447500
          DS ~ 5 LIT " DA= "; DS ~ 6 CHR; DS ~ 6 LIT " MIX= "; %        04447600
           SI ~ LOC MX; DS ~ 2 DEC; DS ~ LIT "~"; %                     04447700
               DI ~ DI - 3; DS ~ 1 FILL;                                04447800
$:  THIS PATCH WILL CAUSE THE DISK ADDRESS TO BE PRINTED WHEN AN EU NOT
$:  READY CONDITION OCCURS. THE MESSAGE WILL CONTAIN THE EU NUMBER,
$:  DISK ADDRESS, AND THE MIX INDEX OF THE JOB REQUESTING THE ACCESS.
$#PATCH NUMBER 103 FOR MCP.XIII CONTAINS 26 CARDS
REAL DISKPARITY;                                                        28405100
DEFINE SPACER = 5&@3400[CTF]#,                                          28406100
       MM     = @37700040#;                                             28406150
LABEL DISPAR,NEXT;                                                      28407100
                   IF Y.[7:1] THEN BEGIN                                28497100
                   END ELSE DISKPARITY:=TRUE;                           28499100
                CHECK; IF DISKPARITY THEN GO TO DISPAR; % PARITY OF EOT 28532000
DISPAR:        END;%OF DUMPAROW                                         28538000
          IF DISKPARITY THEN                                            28712100
               BEGIN                                                    28712110
               DISKPARITY:=FALSE;                                       28712120
               WHILE WAITIO(SPACER,MM,U) ! @40 DO                       28712130
               BEGIN                                                    28712140
               IF DSED THEN ABORT;                                      28712150
               IF STOPJOB = P1MIX THEN STOPM(0);                        28712160
               END;                                                     28712170
               P(WAITIO([TM],@40,U),DEL);                               28712180
               IF DSED THEN ABORT;                                      28712190
               H:=H&20[8:38:10];                                        28712200
               P(WAITIO(H&@5000[CTF],@40,U),DEL);                       28712210
               WRITENDINGLABEL;                                         28712220
               P(DIRECTORYSEARCH(-X[J],X[J+1],13),DEL);                 28712225
               FORGETSPACE(H);                                          28712230
               GO TO NEXT;                                              28712235
               END;                                                     28712240
NEXT:   END;%ALL FILES NOW WRITTEN                                      28719000
$:THIS PATCH MODIFIES THE ACTION TAKEN BY THE MCP WHEN
$:"LIBMAIN/DISK" ENCOUNTERS AN IRRECOVERABLE DISK PARITY WHILE
$:DUMPING.  "LIBMAIN/DISK" WILL NOW BACKSPACE THE DUMP TAPE TO THE
$:START OF THE DISK FILE HEADER RECORD FOR THAT FILE AND WILL WRITE
$:A 20 WORD RECORD RATHER THAN A 30 WORD RECORD.  WHEN AN ATTEMPT
$:IS MADE TO LOAD THAT FILE, THE FILE WILL NOT BE LOADED AS A RESULT
$:OF A "BAD HEADER RECORD".
$#PATCH NUMBER 104 FOR MCP.XIII CONTAINS 2 CARDS
                   IF(NB[X].[6:42]EQV A.[6:42])=NOT 0 THEN              18228000
                   IF(NB[X+1].[6:42]EQV B.[6:42])=NOT 0 THEN GO FOUND;  18229000
$:  THIS PATCH CORRECTS A PROBLEM THAT RESULTED FROM INVALID DISK FILE
$:  NAMES. THE INVALID NAMES WERE CREATED BY A "FILL <FILEID> WITH"
$:  CONSTRUCT. THIS PATCH MASKS THE MOST SIGNIFICANT CHARACTER IN BOTH
$:  THE MFID AND THE FID WHEN DIRECTORYSEARCH IS CALLED.
$#PATCH NUMBER 105 FOR MCP.XIII CONTAINS 2 CARDS
                   IF(TYPE:=SCAN)!IDENT OR COUNT>1 THEN GO TO ERROR;    20438000
                        STREAM(S:=1-COUNT,COUNT,ACCUM,T:=[EQN[3]]);     20439000
$:  THIS CHANGE CORRECTS A PROBLEM WHERE THE CYCLE NUMBER WAS STILL
$:  CONSIDERED TO BE TWO CHARACTERS INSTEAD OF ONE CHARACTER.
$#PATCH NUMBER 106 FOR MCP.XIII CONTAINS 2 CARDS
         "AUX MEM"," ERROR.~", %11%                                     00323000
                   IF NOT U.[46:1] THEN PUNT([PUNTER[11]]); % IF ACM    04134992
$:  THIS CHANGE WILL CAUSE THE MESSAGE "AUX MEM ERROR" TO BE OUTPUT ON
$:  THE SPO WHEN AN ERROR OCCURS ON AUXILIARY MEMORY. THE SYSTEM
$:  MUST BE HALT/LOADED FOLLOWING THIS MESSAGE.
$#PATCH NUMBER 107 FOR MCP.XIII CONTAINS 63 CARDS
LABEL LL,LL1,SS,SS1;                                                    45003200
LL:      B:=0;                                                          45178100
              LL1:%                                                     45185100
                 M[T INX 7]:=0;                                         45192000
                 M[T INX 4].[9:1]:=1;                                   45193000
                 IF NOT B THEN                                          45193100
                 BEGIN                                                  45193150
                      M[T INX 9]:=1;                                    45193200
                      M[T INX 10]:=                                     45193250
                      GETUSERDISK(-(M[T INX 8]:=400));                  45194000
                      ENTERUSERFILE(-"STLOG  "                          45195000
$INCLUDE 45195200, IF SHAREDISK;                                        45195100
                      & (SYSNO+17)[36:42:6]                             45195150
                                    ,"STATS  ",T-1);                    45198000
                      GO TO LL;                                         45198050
                 END ELSE DISKWAIT(T,30,T.[FF])                         45198100
            END                                                         45198200
            ELSE % FILE PRESENT                                         45198250
            IF B:=((M[T INX 8]=400) AND(M[T INX 9]=1))                  45198300
            THEN IF M[T INX 4]=0 % JUST COLD-STARTED                    45198325
            THEN GO TO LL1 % TO FIX-UP HDR                              45198350
            ELSE % HDR OK                                               45198375
            ELSE                                                        45198400
            BEGIN % START FROM SCRATCH                                  45198450
                 FORGETSPACE(T);                                        45198500
                 T:=DIRECTORYSEARCH("STLOG  "                           45198550
$ INCLUDE 45198651, IF SHAREDISK;                                       45198600
                    &(SYSNO+17)[36:42:6]                                45198650
                                   ,"STATS  ",6);                       45198700
                 GO TO LL                                               45198750
SS:      B:=0;                                                          45200100
              SS1:%                                                     45207100
                 IF NOT B THEN                                          45215100
                 BEGIN                                                  45215200
                      M[T INX 9]:=1;                                    45216000
                      M[T INX 10]:=                                     45217000
                      GETUSERDISK(-(M[T INX 8]:=200));                  45218000
                      ENTERUSERFILE(-"SYSTEM "                          45219000
$INCLUDE 45219200, IF SHAREDISK;                                        45219100
                      & (SYSNO+17)[42:42:6]                             45219150
                                    ,"STATS  ",T-1);                    45222000
                 END ELSE DISKWAIT(T,30,T.[FF])                         45222100
            END                                                         45222150
            ELSE % FILE PRESENT                                         45222200
            IF B:=((M[T INX 8]=200) AND(M[T INX 9]=1))                  45222250
            THEN IF M[T INX 4]=0 % JUST COLD-STARTED                    45222275
            THEN GO TO SS1 % TO FIX-UP THE HDR                          45222300
            ELSE % HDR OK                                               45222310
            BEGIN                                                       45222315
                 DISKWAIT(-COUNTARRAY.[CF],60,M[T INX 10]);             45222320
                 IF COUNTARRAY[28] NEQ DATE THEN COUNTARRAY[29]:=0;     45222325
            END                                                         45222330
            ELSE                                                        45222350
            BEGIN % START A NEW FILE                                    45222400
                 FORGETSPACE(T);                                        45222450
                 T:=DIRECTORYSEARCH("SYSTEM "                           45222500
$ INCLUDE 45222601 , IF SHAREDISK;                                      45222550
                    &(SYSNO+17)[42:42:6]                                45222600
                                   ,"STATS  ",6);                       45222650
                 GO TO SS                                               45222700
            END;                                                        45223000
$ VOID 45225001                                                         45224000
            SYSTATBASE:=M[T INX 10];                                    45225100
$:  THIS CHANGE PREVENTS POSSIBLE DISK FILE OVERLAP CONDITIONS ON
$:  STATISTICS FILES CREATED AS A RESULT OF A "SL" OR "SY" KEYBOARD
$:  INPUT MESSAGE, IF THE FILES WERE INCORRECTLY DECLARED IN THE COLD
$:  START DECK. THIS PATCH CHECKS THE DISK FILE HEADER TO DETERMINE IF
$:  THE FILE WAS DECLARED AS HAVING ONE ROW OF 200 OR 400 SEGMENTS, IF
$:  THERE IS A DESCREPANCY, THE FILE IS REMOVED AND A CORRECT FILE
$:  HEADER IS CREATED, OTHERWISE THE RECORD SIZE AND BLOCKING FACTOR ARE
$:  SET UP SO THAT THE STATISTICAL ANALYSIS PROGRAMS DO NOT ENCOUNTER
$:  DIFFICULTY.
$#PATCH NUMBER 108 FOR MCP.XIII CONTAINS 42 CARDS
DEFINE LEFTARROW = "~"#;                                                00006150
 PROCEDURE DISKERROR(PARM); VALUE PARM; REAL PARM;%                     02523000
         BEGIN REAL    U,A;%                                            02524000
             U:=M[PARM].[CF];                                       %GEH02525000
              A := SPACE(10);                                           02526000
              STREAM(X:=TINU[U], IO:=IF M[PARM+1].[24:1] THEN "R" ELSE  02527000
                     "W",PARM:=PARM+1, RT:= M[PARM].[6:7],%             02528000
                     MX:=M[PARM].[FF],A);                               02529000
$VOID                                                                   02529500
                   BEGIN SI ~ LOC X; SI ~ SI+5; DS ~ 3 CHR;%            02530000
                        SI:=PARM; DS:=5 LIT" IOD=";                 %GEH02531000
                        16(DS:=3 RESET; 3(IF SB THEN DS:=SET ELSE   %GEH02532000
                           DS:=RESET; SKIP SB));                    %GEH02532500
                        DS:=4 LIT";DA="; DS:=8 CHR;                 %GEH02533000
                        DS:=4 LIT";RD=";                            %GEH02533500
                        16(DS:=3 RESET; 3(IF SB THEN DS:=SET ELSE   %GEH02534000
                           DS:=RESET; SKIP SB));                    %GEH02534500
                        SI:= LOC RT; DS:=6 LIT";RTRY="; DS:=DEC; %      02535000
                        DS:=5 LIT";MIX="; SI:=LOC MX; DS:=2 DEC;    %GEH02535500
                        DS:=LIT LEFTARROW;                          %GEH02536000
                        DI:=DI-3; DS:=FILL;                         %GEH02536500
                   END;%                                                02537000
             BEGIN IF (U AND @774) = 16 THEN                            04131000
                       BEGIN                                            04131100
                            I:= ISTACK.[CF] +(128-(((U.[46:2])+1)|4));  04131200
                            IF T.[5:8]=0 THEN                           04131300
                            M[I+3]:= R&(C-1)[1:46:2] ELSE               04131400
                            M[I+3].[26:7]:=M[I+3].[26:7] OR R.[26:7];   04131500
                       END;                                             04131600
                    IF (S1:= FINALQUE[S]) LSS 0 THEN%                   04131700
$ VOID                                                                  04138500
                            M[I]:= U&LOCATQUE[S][28:3:5]&T[5:5:8];      04139000
                            M[I+2]:=M[M[I+1]:=IOQUE[S]];% ADD  IOD      04139500
                            IF (U LSS 18) THEN M[I+2]:=M[I+1].[FF];     04139550
                            INDEPENDENTRUNNER(P(.DISKERROR),I);         04140000
$ VOID 04141201                                                         04140500
                            I:= ISTACK.[CF] +(128-(((U.[46:2])+1)|4));  04288900
                            M[I]:= U&LOCATQUE[S][28:3:5]&0[5:5:8];      04289000
                            M[I+2]:=M[M[I+1]:=IOQUE[S]];% ADD  IOD      04289200
                            IF (U LSS 18) THEN M[I+2]:=M[I+1].[FF];     04289250
                            INDEPENDENTRUNNER(P(.DISKERROR),I);         04289400
$VOID                                                                   04289600
$:  THIS CHANGE MAKES THE DISK ERROR MESSAGES OUTPUT BY THE MCP
$:  SIMILAR TO THOSE PRODUCED BY THE TSSMCP. THE MESSAGE NOW INCLUDES
$:  THE UNIT, I/O DESCRIPTOR, DISK ADDRESS, RESULT DESCRIPTOR, RETRY
$:  COUNT, AND THE MIX INDEX.
$#PATCH NUMBER 109 FOR MCP.XIII CONTAINS 12 CARDS
              IF JAR[P1MIX,2].[2:1] THEN % IF ESED                      02261050
              IF (JAR[P1MIX,0] EQV   "PRNPBT ") = NOT 0 THEN %          02261100
              IF (JAR[P1MIX,1] EQV (-("DISK   "))) = NOT 0 THEN %       02261150
              IF (L:=PRT[P1MIX,@25]) ! 0 THEN %                         02261200
              BEGIN IF (LUN:=L.[FF]) ! 0 THEN SLAPITOFF;                02261250
                    IF L.[CF] < @37777 THEN %                           02261300
                    BEGIN STREAM(L,D:=[L]);%                            02261350
                          BEGIN SI~LOC L;DS~5DEC;DS~3LIT"001";END;%     02261400
                          L:=DIRECTORYSEARCH(-("PBD    "),L,11);%       02261450
                    END ELSE BEGIN LUN:=L AND 63; SLAPITOFF END;%       02261500
              END;% PRNPBT/DISK ESED: TO CLEAR UNITS.                   02261550
         FH[4].[6:1]:=0;%                                               18361500
$:  THIS PATCH CORRECTS A PROBLEM WHERE A PRINTER-BACKUP DISK FILE
$:  WOULD REMAIN "IN USE" IF THE COPY OF PRNPBT/DISK THAT HAD BEEN
$:  ATTACHES TO THE FILE WAS ES-ED FROM THE SCHEDULE.
$#PATCH NUMBER 110 FOR MCP.XIII CONTAINS 13 CARDS
              EXT,OK,WY,TRYAGN,                                         28010100
     TRYAGN: FINDTHETAPE;                                               28212000
$INCLUDE 28212101, IF B6500LOAD;                                        28212099
    IF NOT B6500 THEN                                                   28212100
    IF FID NEQ LAB[2] THEN                                              28212110
          BEGIN STREAM (A:=[TINU[U]],T:=T:=GETSPACE(10,0,0)+2);         28212120
                BEGIN SI:=A;SI:=SI+5;DS:=LIT".";DS:=3 CHR;              28212130
                      DS:=32 LIT" NOT 1ST REEL OF A LIBRARY TAPE.";     28212140
                      DS:=LIT LEFTARROW;                                28212150
                 END;                                                   28212160
                 SPOUT(T); SETNOTINUSE(U,1);                            28212170
                 GO TO TRYAGN;                                          28212180
          END;                                                          28212190
$:  THIS CHANGE PREVENTS SYSTEM HANGS WHICH OCCURRED IF THE OPERATOR
$:  ATTEMPED TO IL OTHER THAN THE FIRST REEL OF A LIBRARY DUMP TAPE
$:  TO LIBMAIN/DISK WHEN THE FIRST REEL WAS NEEDED.
$#PATCH NUMBER 111 FOR MCP.XIII CONTAINS 1 CARD
              IF (I:=DIRECTORYSEARCH("REMOTE ","LOG    ",5)) NEQ 0 THEN 43003000
$:  THIS PATCH ALLOWS THE REMOTE LOG TO BE READ BY A PROGRAM AND
$:  ELIMINATES THE PROBLEM WHICH WOULD HAVE RESULTED IN A "FILE
$: IN USE" CONDITION.
$#PATCH NUMBER 112 FOR MCP.XIII CONTAINS 1 CARD
    IF M[X2+7]=99 THEN INDEPENDENTRUNNER(P(.SAVESTATISTICS),"SYSTEM "   41404540
$:  THIS CORRECTS A PROBLEM WHERE STATISTICS INFORMATION WOULD HAVE
$:  BEEN ENTERED IN THE WRONG STATISTICS FILE.
$#PATCH NUMBER 113 FOR MCP.XIII CONTAINS 4 CARDS
                   W(2(32(IF SC!" " THEN IF SC="~" THEN BEGIN D~DI;     14756500
                        JUMP OUT 3 TO E END ELSE BEGIN DS~CHR; D~DI END 14757000
                   W1(IF SC!" " THEN IF SC="~" THEN BEGIN D:=DI;        14758000
                        JUMP OUT END ELSE BEGIN DS~CHR;D~DI END         14758500
$:  THIS PATCH CORRECTS THE OUTPUT OF BASIC TYPE 19 FILES.
$#PATCH NUMBER 114 FOR MCP.XIII CONTAINS 1 CARD
       SYSTATBASE = STATWORD.[9:24]#,                                   00471220
$:  THIS PATCH ALLOWS ANY POSSIBLE DISK ADDRESS TO BE ALLOCATED
$:  AND STORED CORRECTLY FOR THE SYSTEM/STATS FILE. OTHERWISE,
$:  INVALID DISK ADDRESSING WOULD OCCUR.
$#PATCH NUMBER 115 FOR MCP.XIII CONTAINS 1 CARD
              P(MKS,WHATODO,DIB 0,LOD,PARAMETER,COC);                   35321000
$:  THIS PATCH CORRECTS A PROBLEM WHERE AN "XRT" WAS NOT
$:  BEING PERFORMED SO THAT IF WHATODO WAS GREATER THAN OR EQUAL
$:  TO 512, THE LOAD WOULD NOT HAVE BEEN CORRECTLY PERFORMED
$:  AND AN INCORRECT PROGRAM DESCRIPTOR WOULD HAVE BEEN ACCESSED.
$#PATCH NUMBER 116 FOR MCP.XIII CONTAINS 1 CARD
IF(T:=DIRECTORYSEARCH(A4[1],A4[2],5)) NEQ 0 AND M[T+4].[12:4]=0 THEN    19208000
$:  THIS CHANGE CAUSES A "-1" TO BE RETURNED IN WORDS 0,3,4,5,
$:  AND 6 OF THE ARRAY ROW WHEN AN ALGOL PROGRAM DOES A SEARCH
$:  ON A SYSTEM FILE.
$#PATCH NUMBER 117 FOR MCP.XIII CONTAINS 3 CARDS
              IF CODE=5 THEN IF USERID=0 THEN FINDWHATINFO              08115060
              ELSE IF SECURITYCHECK(NB[I],NB[I+1],USERID,T) NEQ 0       08115070
              THEN FINDWHATINFO ELSE GO AROUND;                         08115080
$:  THIS CHANGE ENSURES THAT A SECURITY CHECK  IS MADE WHEN A REMOTE
$:  USER USES ONE OF THE NEW "PD" CONSTRUCTS.
$#PATCH NUMBER 118 FOR MCP.XIII CONTAINS 17 CARDS
            IF U LSS 16 THEN % RDC PRN LOG ENTRIES                      37280100
            BEGIN                                                       37280110
            STREAM(R:=RDCTABLE[U].[14:10],D:=RDCTABLE[U].[24:17],       37280120
                   C:=RDCTABLE[U].[41: 7],PRN:=PRNTABLE[U].[31:17],     37280130
                   T:=[FPB[I+2]]);                                      37280140
            BEGIN SI:=LOC R;DS:=3DEC;DS:=5DEC;DS:=DEC;SI:=SI+5;         37280150
                  SKIP SB;17(IF SB THEN DS:=SET ELSE DS:=RESET;         37280160
                  SKIP SB);                                             37280170
            END; END;                                                   37280180
$VOID 37284141                                                          37284100
            IF U LSS 16 THEN                                            37284145
            IF FPB[FN+3].[6:17] = 0 THEN%                               37284150
            FPB[FN+3].[6:17]:=PRNTABLE[U].[31:17];                      37284310
                    BEGIN SI:=LOC REEL;                                 39297200
                        IF 3 SC=DC THEN                                 39297300
                        BEGIN DI:=D;SI:=LOC REEL;DS:=3 DEC END;         39297400
                    END;                                                39297500
$:  THIS PATCH CORRECTS A PROBLEM WHERE A PROGRAM WHICH CREATED
$:  A MULTI-REEL FILE WAS UNABLE TO ACCESS ANY REEL BUT THE LAST
$:  AFTER A REWIND HAD BEEN PERFORMED.
$:
$:NOTE: THIS PATCH MUST BE IMPLEMENTED CONCURRENTLY WITH
$:INTRINSICS XIII.104.
$#PATCH NUMBER 119 FOR MCP.XIII CONTAINS 10 CARDS
     LABEL XOUT,GOTNAME;                                                41405800
     IF COUNTARRAY[28] NEQ DATE THEN                                    41406120
     M[X2+5+SYSNO]:=((X1:=0)+1) & 1[CTF] ELSE                           41406130
     WHILE (X1:=X1+1) LSS 100 DO                                        41406160
     BEGIN                                                              41406170
     IF DIRECTORYSEARCH(-NAMEIT,FILE,5)=0 THEN GO GOTNAME;              41406650
     END;                                                               41406660
GOTNAME:                                                                41406680
          M[X2+5+SYSNO].[CF]:=X1;                                       41408620
          M[X2+5+SYSNO].[FF]:=X1;                                       41408720
$:  THIS PATCH CORRECTS SOME PROBLEMS ASSOCIATED WITH THE ASSIGNING
$:OF NAMES TO PERMANENT STATISTIC FILES.  IT ENSURES THAT NO DUPLICATE
$:=/SYSTEM OR =/STLOG FILES ARE CREATED.  IT FORCES THE SERIAL NUMBERS
$:TO RECYCLE AT A CHANGE OF DATE.  LASTLY, IT ASSIGNS SERIAL NUMBERS
$:STARTING FROM ONE RATHER THAN ZERO.
$:
$:  THE USER SHOULD BE AWARE THAT AT MOST 99 STATISTIC FILES OF EACH
$:TYPE(SYSTEM OR STLOG) MAY BE CREATED ON A GIVEN DAY.  THERE IS NO
$:PROVISION FOR WRAP-ARAOUND.
$#PATCH NUMBER 120 FOR MCP.XIII CONTAINS 22 CARDS
         T:=-1;                                                         28259900
         IF M[AROW[0] INX NOT 0] NEQ (30+6|B6500) THEN P(1) ELSE        28260000
         BEGIN                                                          28260020
         STREAM(A:=0:D:=H);                                             28260030
              BEGIN SI:=D; 30(IF SB THEN BEGIN TALLY:=1; JUMP OUT END   28260040
                             ELSE SI:=SI+8); A:=TALLY;                  28260050
              END;                                                      28260060
         IF P THEN P(1) ELSE                                            28260070
         IF(NT1:=H[9].[43:5])GTR 20 THEN P(1) ELSE                      28260080
         BEGIN  I:=0;                                                   28260090
              FOR W:=10 STEP 1 UNTIL 29 DO                              28260100
              BEGIN                                                     28260110
                   I:=I+(NT2:=(H[W] NEQ 0));                            28260120
                   IF W GEQ NT1 +10 THEN IF NT2 THEN W:=31;             28260130
              END;                                                      28260140
              IF ((W=31) OR (I GTR NT1) OR((I NEQ 0) AND (H[8]=0)))     28260150
              THEN P(1) ELSE P(0);                                      28260160
         END END;                                                       28260180
         IF P THEN                                                      28260190
         IF (X[J].[2:4] NEQ 0 OR X[J+1].[1:5] NEQ 0 OR ABS(X[J])=@114)  28261100
         THEN LBMESS(ABS(X[J]),X[J+1],"NOT ","LOADED(","BAD NAM",       28261110
              "E).",TINU[U]) ELSE                                       28261120
$:  THIS PATCH INCORPORATES ADDITIONAL CHECKS INTO LIBRARYLOAD
$:TO PREVENT THE LOADING OF FILES WHOSE NAMES ARE BAD OR WHOSE
$:HEADERS ARE INCORRECT.  WITHOUT THESE  CHECKS SUCH THINGS AS
$:SPURIOUS NO USER DISK CONDITIONS OCCURRED, FILE OVERLAP
$:COULD OCCUR, LIBMAIN COULD BE DS-ED, OR THE SYSTEM COULD HANG.
$#PATCH NUMBER 121 FOR MCP.XIII CONTAINS 5 CARDS
           DOLITTLE(FALSE,@512,"#FM RQD",0,MID); U:=NT6.[FF];           37048000
IF NOT DSED THEN                                                        37048100
   IF U < 16 THEN                                                       37048200
      IF NOT PRNTABLE[U].[1:1] THEN                                     37048300
         GO TO SOMEWHERE; GO TO X;                                      37048400
$:THIS PATCH CAUSES THE MCP TO ASK FOR A "FORM" OUTPUT TAPE AGAIN
$:INSTEAD
$:   OF DS-ING A PROGRAM IF THE PREVIOUS FM REPLY RESULTED IN A
$:  UNIT THAT HAD NO WRITE-RING.
$#PATCH NUMBER 122 FOR MCP.XIII CONTAINS 12 CARDS
       IF(A~DIRECTORYSEARCH(HN1,-HN2,4))>0 THEN                         16152340
       BEGIN IF HN2!"DISK   " THEN                                      16152350
             IF(J~DIRECTORYSEARCH(HN1,"DISK   ",5))!0 THEN              16152355
             BEGIN P(DIRECTORYSEARCH(-HN1,HN2,14),DEL);FORGETSPACE(A);  16152360
                   FORGETSPACE(J);                                      16152365
                   GO TO EXIT;                                          16152375
             END ELSE M[A INX 4]~(*P(DUP))&2[1:46:2]&1[8:47:1];         16152425
                   LBMESS(HN1,HN2,"MC-ED:",HN1,"/DISK C","OMPILER",0);  16152450
$VOID                                                                   16152460
       END ELSE LBMESS(-HN1,HN2,"NOT ","MC-ED",IF A.[1:1] THEN          16152470
                   "(IN USE" ELSE "(NOT ON",IF A.[1:1] THEN ")" ELSE    16152472
                   " DISK)",0);                                         16152475
$:THIS PATCH CORRECTS SOME PROBLEMS WHICH OCCURRED WITH THE "MC"
$:KEYBOARD INPUT MESSAGE.
$#PATCH NUMBER 123 FOR MCP.XIII CONTAINS 3 CARDS
IF ((U:=REPLY[P1MIX].[FF])!20 AND                                       13021420
     U!21 AND (V=20 OR V=21))                                           13021421
      OR (U!22 AND V=22) THEN                                           13021422
$:  THIS PATCH AVOIDS THE POSSIBILITY OF AN INVALID LINK HANG IN
$:  PRINTER-BACKUP BY NOT ALLOWING AN FM REPLY TO CHANGE THE
$:UNIT TYPE REQUESTED.
$#PATCH NUMBER 124 FOR MCP.XIII CONTAINS 1 CARD
SELERR: INFO := " SEL"&31[1:43:5]; GO TO MESSAGE;                       14674000
$:  THIS PATCH CORRECTS THE SPELLING IN THE SELECT-ERROR MESSAGE.
$#PATCH NUMBER 125 FOR MCP.XIII CONTAINS 2 CARDS
         IF CN.[6:18]=TINU[T].[30:18] THEN GO TO U1;                    20590200
                   CN := SCAN;                                          20590625
$:  THIS PATCH CORRECTS ALL KNOWN ERRORS IN THE CCUNIT PROCEDURE.
$#PATCH NUMBER 126 FOR MCP.XIII CONTAINS 1 CARD
      MCP := NFLAG(M[A]);                                               45094400
$:THIS CHANGE CORRECTS THE CODE USED TO OBTAIN THE MCP USERCODE.
$#PATCH NUMBER 127 FOR MCP.XIII CONTAINS 8 CARDS
                   BEGIN JUNK:=((((HEADER[0].[30:12]|T1+FIB7)           38078000
                         DIV HEADER[0].[30:12])|HEADER[0].[42:6])       38078200
                         MOD HEADER[8]);                                38078300
                         IOREQUEST(FLAG(FID),MFID&1[24:47:1]&           38078400
                             (IF(NT2:=(IF(JUNK+HEADER[0].[42:6])>       38078500
                             HEADER[8] THEN (HEADER[8]-JUNK)|30 ELSE    38078600
                             BLEN))> 1023 THEN 1023 ELSE NT2)[8:38:10]& 38078700
                             ((NT2+29)DIV 30)[27:42:6],M[T2-2]);        38078800
$:  THIS PATCH PREVENTS THE MCP FROM READING PAST A ROW BOUNDARY OF
$:  A DISK FILE DURING FILEOPEN.
$#PATCH NUMBER 128 FOR MCP.XIII CONTAINS 43 CARDS
              LINES:=(WDS:=(NT1+47) DIV 48) DIV 9;                      02174006
              IF (LFT:=WDS MOD 9)=0 AND LINES GTR 0 THEN                02174008
              BEGIN LINES:=LINES-1; LFT:=9; END;                        02174009
              EXTRA:=LINES/4+1; CR:=(MIX NEQ 0) OR CR;                  02174010
$ INCLUDE 09060401, IF RJE;                                             09060399
         IF NOT STA THEN                                                09060400
    IF UNIT.[CF]!1 THEN NT1:=80 ELSE                                    13383000
         DS:=2 LIT "0!"; DS:=LIT """; JUMP OUT TO Z); DS:=LIT "-";      13407000
Z:       DS:=LIT "!";                                                   13407500
              IF SC = "!" THEN DS:=LIT "!" ELSE                         13425000
              BEGIN TALLY:=0; C:=TALLY; END; DS:=CHR;                   13426000
    STACURR.[18:4]:=1;  %INITIALIZE TRANSMISSION NUMBER                 13636500
         STACURR.WRITEN:=1;                                             23061350
                                  STACURR.[45:1]:=1;                    23147700
$ VOID                                                                  23147750
$ VOID                                                                  23152400
                             STACURR.[45:1]:=(1-HALF);                  23152500
$ VOID                                                                  23178000
                             IF STA THEN M[MESSADDR]:=NABS(*P(DUP))&    23179060
                             STACURR.WRITEN:=0;                         23181300
$ INCLUDE 23201151, IF RJE;                                             23201149
         IF NOT STA THEN                                                23201150
LABEL NTN;   % USED BY BUFFER OVERFLOW KLUGE                            24504000
              DEFINE STACURR=STATION[STA.[14:4],STA.[9:4]]#;            24508000
NTN:        % CALLED FROM BUFFER OVERFLOW                               24532537
$ INCLUDE 24535851, IF RJE;                                             24535649
                             IF EF=@20 AND STA THEN                     24535650
                             BEGIN  %RJE BUFFER OVERFLOW                24535700
                                  STACURR.[24:6]:=@77;                  24535750
                                  GO TO NTN;                            24535800
                             END;                                       24535850
NTN,    %USED IN PARITY CASE FROM ID/AB INT                             25088100
NTN:   %TRANSFER FROM ID/AB PARITY PRESUMPTION                          25235250
         IF NOT STACURR.[30:1] THEN                                     25287020
         BEGIN STACURR.[24:6]:=@77; GO TO NTN; END;                     25287022
    WHILE (NT1:=P(RJEWAITQ,0&STA[9:9:9],LLL,1,INX,.NT2,STD)).           25287035
$ INCLUDE 27081651, IF RJE;                                             27081609
         IF STA.[24:6]=@77 AND STA THEN                                 27081610
         BEGIN STACURR.[23:8]:=0;                                       27081620
              M[BUFFER:=ELEMENT[1].[FF]+1]:=(BUFFER+1)&                 27081630
              ELEMENT[1][20:8:10]; GO TO INVLD;                         27081640
         END;                                                           27081650
                             BEGIN SI:=SI+4; DI:=DI+4;                  27115190
$: THIS CHANGE CORRECTS SEVERAL PROBLEMS THAT ARE IN THE INITIAL RELEASE80000010
$: OF THE RJE MCP.  THEY REFLECT CHANGES IN THE LINE HANDLING, AS WELL  80000020
$: CORRECTING BUGS AND HANGS.                                           80000030
$#PATCH NUMBER 201 FOR MCP.XIII CONTAINS 10 CARDS
BOOLEAN OKSEGZEROWRITE;                                                 00422100
IF(P(IODESC.[3:5],DUP)=@14 OR P(XCH)=@30)AND NOT IODESC.[24:1] AND      04004101
(P(M[IODESC.[CF]],DUP)=0 OR P(XCH)=32) AND NOT OKSEGZEROWRITE           04004102
THEN HANG;                                                              04004103
OKSEGZEROWRITE:=TRUE;                                                   09639001
OKSEGZEROWRITE:=FALSE;                                                  09646001
OKSEGZEROWRITE:=TRUE;                                                   09680229
OKSEGZEROWRITE:=FALSE;                                                  09682611
OKSEGZEROWRITE:=TRUE;                                                   44087101
OKSEGZEROWRITE:=FALSE;                                                  45247999
$:THIS PATCH IS PROVIDED FOR DEBUGGING PURPOSES.
$:          IT CAUSES THE MCP TO HANG WHENEVER SEGMENT ZERO IS ABOUT
$:  TO BE OVERWRITTEN UNEXPECTEDLY.
$#PATCH NUMBER 202 FOR MCP.XIII CONTAINS 23 CARDS
$ INCLUDE 000121200, IF DUMP OR DEBUGGING;                              00012099
     REAL DUMP = @76;                                                   00012100
     DEFINE DUMPNOW(DUMPNOW1)=                                          00012160
        DUMPCORE(DUMP:= DUMPNOW1&(GETSPACE(22,0,0) + 3)[15:33:15])#;%   00012165
                   S:= BUFF.[33:15];%                                   02434255
                   B:= GETSPACE(22,0,0) + 2;%                           02434320
                     STREAM(D:=S,C:=LABELTABLE[U],BUFF,B);%             02434330
                     SI:= LOC D; DI:= B; DS:= 2 WDS; SI:= BUFF;%        02434360
                   P(WAITIO(B&22[8:38:10]&5[21:45:3],0,U),DEL);%        02434630
       LABEL C50;%                                                      19006410
              C30,INIT,C32,C33,C34,INIT,INIT,C37,C38,INIT,INIT,         19008200
              INIT,INIT,INIT,INIT,INIT,INIT,INIT,INIT,INIT,C50;         19008300
% MEMORY DUMP OR TRACE FROM THE INTRINSICS                              19159100
C50: %                                                                  19159200
$ INCLUDE 19159301, IF DUMP OR DEBUGGING;                               19159299
      IF I4 NEQ 0 THEN                                                  19159300
$ INCLUDE 19159401,IF DEBUGGING;                                        19159399
         TRACE(R5,(I4-1))                                               19159400
$ INCLUDE 19159501, IF DUMP OR DEBUGGING;                               19159499
      ELSE DUMPNOW(R5);                                                 19159500
      GO INITIATE;%                                                     19159600
              SL,SL,C31,SL,SL,SL,C35,C36,SL,SL,C39,C40,C41,             19513000
              SL,SL,SL,SL,SL,SL,SL,SL,SL;                               19513100
$:  THIS PATCH ALLOWS THE INTRINSICS TO CALL THE MEMORY DUMP PROCEDURE.
$:
$:USE OF THIS FEATURE REQUIRES THAT THE MCP BE COMPILED WITH EITHER
$:"$DUMP" OR "$DEBUGGING" SET TRUE.  INTRINSICS XIII.201 IS ALSO
$:REQUIRED.
$#PATCH NUMBER 203 FOR MCP.XIII CONTAINS 17 CARDS
         STREAM(C:=J,A4,R:=P1MIX,I1:=I.[36:6],I,Q:=0,T);                19044000
               SI:= LOC R; DI:=T; DI:=DI-2; DS:= 2 DEC;                 19044630
               MIX       = LIBNO+1,%                                    20599675
               CMPLR     = MIX +1;                                      20599700
         P(0,0,0,0,0,0);                                                20600750
         IF CARD.[CF] NEQ 0 THEN BEGIN                                  20600805
         CARDLOC:=CARD INX 0;                                           20600810
         MIX:= M[CARDLOC-1];                                            20600830
         M[CARDLOC-1]:=0;                                               20600840
         END;                                                           20600845
    BEGIN STREAM(B:=MIX,C:=CARDLOC,A:=T:=GETSPACE(20,0,0)+2);           20606900
         BEGIN DI:=A; SI:= LOC B;                                       20606940
              DS:= 27 LIT " ZIP ERROR-IGNORED FOR MIX=";                20606945
               SI:=SI+6; DS:= 2 CHR; SI:= C; DS := LIT " "; SI:=SI+7;   20606950
               B:=DI; DS:= 2 FILL; DI := B;                             20606955
               DS:= 9 WDS; DS:=LIT "~";                                 20606960
         END;                                                           20606965
$:  THIS CHANGE CAUSES THE MCP TO PRINT THE CONTROL CARD IN ERROR
$:  AND THE MIX INDEX OF THE ZIPPING PROGRAM ALONG WITH THE
$:  "ZIP ERROR-IGNORED" MESSAGE.
$#PATCH NUMBER 204 FOR MCP.XIII CONTAINS 7 CARDS
  REAL RC,B;  %  ONE IO                                                 28404001
 IOD[1]:=N2:=W:=N:=IC:=RC:=0;                                           28522000
   B:=(N<N1);                                                           28524001
 WATE: IF B    THEN COMPLEXSLEEP((((IOD[1-W]) AND IOMASK)!0) OR DSED)   28527000
ELSE % 1 IO                                                             28527001
 COMPLEXSLEEP((((IOD[RC])AND IOMASK)!0) OR DSED);                       28527002
 IF N2<N THEN BEGIN IOD[W]:=0;RC:=1-W;B:=0;GO TO WATE;END;%FIX ODD#     28537000
$:  THIS PATCH CORRECTS A POSSIBLE "BUFFER SWAPPING" PROBLEM WITH
$:  LIBMAIN/DISK. ONE INSTALLATION REPORTED A PROBLEM WHERE 900 WORDS
$:  OF FILE INFORMATION WOULD BE SWAPPED WITH THE NEXT
$:  900 WORDS OF INFORMATION DURRING A LIBRARY DUMP. THE PROBLEM
$:  ONLY OCCURRED IF THE INSTALATION HAD TWO DISK FILE CONTROLS AND AN
$:  EXPANDED DISK FILE CONTROL AND THE I/O
$:  OPERATIONS FROM DISK TO TAPE WERE OUT OF PHASE. WE HAVE BEEN
$:  UNABLE TO REPRODUCE THE PROBLEM HERE IN DETROIT. THIS
$:  CORRECTION WAS GIVEN TO THE USER WHO WAS EXPERIENCING THE PROBLEM
$:  AND THE PATCH APPEARS TO BE WORKING.
$#PATCH NUMBER 205 FOR MCP.XIII CONTAINS 3 CARDS
        ; STREAM(H:=H[8],J:=5);                                         28311100
         BEGIN SI:=LOC H; DS:=5 DEC; END;                               28311150
         JUNK,TINU[U]);                                                 28311300
$:THIS PATCH WILL CAUSE THE "NO USER DISK" MESSAGE FOR
$: "LIBMAIN/DISK" TO CONTAIN THE AMOUNT OF DISK REQUIRED.
$#PATCH NUMBER 206 FOR MCP.XIII CONTAINS 39 CARDS
DEFINE LEFTARROW = "~"#;                                                00006150
    REAL I,FPBSIZE;                                                     06462105
    ARRAY FPB[*];                                                       06462115
    LABEL FOUND;                                                        06462120
         REPLY[P1MIX]:= -@20412;                                        06463300
         IF NOT WHYSLEEP(@20412) THEN GO WHY;                           06463600
         IF  (T2:=REPLY[P1MIX].[FF]) GTR 32 THEN BEGIN                  06463620
          T2:=T2&3[30:45:3];                                            06463625
          FPB:=PRT[P1MIX,3]; FPBSIZE := FPB.[8:10];                     06463628
          FOR I:=0 STEP 5 UNTIL FPBSIZE DO                              06463630
            IF FPB[I] = MID AND FPB[I+1] = FID THEN                     06463632
                  GO TO FOUND;                                          06463634
 FOUND:   NAMEID([MID],T2); NAMEID([FID],T2); NAMEID([FID],T2);         06463638
          IF I LSS 1020 THEN BEGIN                                      06463639
          FPB[I]:=MID;FPB[I+1]:=FID; END; END;                          06463640
         LABEL EXIT;                                                    08547100
BOOLEAN SUBROUTINE ILDISK;                                              08547200
         BEGIN STREAM(A:=0:B); BEGIN                                    08547300
              SI:=B; L: IF SC=" "THEN BEGIN SI:=SI+1;GO TO L;END;       08547400
              8(IF SC = "/" THEN BEGIN TALLY:=1; JUMP OUT TO LL END     08547500
              ELSE IF SC = LEFTARROW THEN JUMP OUT TO LL; SI:=SI+1);    08547550
         LL:  A:=TALLY;                                                 08547575
         END; ILDISK:=P; END;                                           08547600
              IF ILDISK THEN BEGIN U:=Z.[15:15]  ; GO TO EXIT END ELSE  08547700
              EXIT: END; END;                                           08566000
    P(ZP1,.HN1,~,.TYPE,~,BUFF&P[15:33:15],.KTR,~);         %            16064000
    ILR: IF(HN2:=ANVIL(TYPE=2,KTR))>PSEUDOMAXT   THEN                   16175000
                       IF  HN2 LSS PSEUDOMAXT +2                        16175050
         THEN GO TO ERROR;                                              16175100
               IF HN2 GTR PSEUDOMAXT THEN BUFF:=HN2;                    16176100
      REAL T2;                                                          37180100
      ARRAY FPB[*];                                                     37180110
                     IF (T2:=T1.[FF]) GTR 64 THEN                       37231010
                    BEGIN                                               37231020
                    T2:=T2&3[30:45:3];                                  37231030
                    NAMEID([MID],T2);NAMEID([FID],T2);NAMEID([FID],T2); 37231040
                    FPB:=PRT[P1MIX,3];FPB[FN]:=MID;FPB[FN+1]:=FID;      37231050
                    GO TO START;                                        37231060
                    END ELSE                                            37231070
$: THIS CHANGE ALLOWS THE OPERATOR TO "IL" A DISK OR TAPE FILE BY NAME.
$#PATCH NUMBER 207 FOR MCP.XIII CONTAINS 5 CARDS
REAL INTSS;                                                             44036710
                 [33:15],1,1)+2;                                        44150000
INTSS:=GETSPACE(200,12,1)+2;                                            44150005
     FORGETSPACE(INTSS);                                                44254100
REAL INTSS = +30;                                                       45003096
$: THIS CHANGE
$: SETS UP MEMORY LINKS AROUND THE STACK OBTAINED FOR INITIALIZE DURING
$: HALT/LOAD SO THAT DUMP/ANALYZE CAN FIND IT.
$#PATCH NUMBER 208 FOR MCP.XIII CONTAINS 56 CARDS
DEFINE   MCPTYPE        = 63#,                                          00005100
         DCINTYPE       = 62#,                                          00005120
         TSSINTYPE      = 61#;                                          00005140
COMMENT THE ESPOL COMPILER APPROPRIATELY TYPES THE MCP &                00005160
    INTRINSICS FILE HEADERS SO THAT A VALIDITY CHECK MAY BE MADE        00005180
    DURING INITIALIZATION AND AT CI AND CM TIME.  HEADER[4].[36:6]      00005185
    IS THE FIELD USED TO CONTAIN THE TYPE;                              00005190
         IF (FH:=DIRECTORYSEARCH(A,B,17))=0 THEN                        09633000
         BEGIN                                                          09633005
              STREAM(A,B,NT1:=BUFF.[15:15]-1);                          09633010
              BEGIN DS:=21LIT"# NO INTRINSICS FILE ";                   09633015
                   SI:=LOC A; SI:=SI+1; DS:=7 CHR;                      09633020
                   DS:=LIT"/"; SI:=SI+1; DS:=7 CHR; DS:=LIT"~";         09633025
              END;                                                      09633030
              ERROR;                                                    09633035
         END ELSE                                                       09633040
         IF (J:=M[FH+4].[36:6]) NEQ DCINTYPE                            09633100
              THEN % ONLY ALLOW CI ON NON-TSS INTRINSICS                09633200
         BEGIN                                                          09633300
              STREAM(A,B,C:=(J=TSSINTYPE),NT1:=BUFF.[15:15]-1);         09633400
              BEGIN DS:=2LIT"# "; SI:=LOC A;                            09633500
                   SI:=SI+1; DS:=7CHR; DS:=LIT"/";                      09633600
                   SI:=SI+1; DS:=7 CHR;                                 09633700
                   C(DS:=30LIT" INCOMPATIBLE INTRINSICS FILE~";         09633750
                        JUMP OUT TO FIN);                               09633760
                   DS:=24 LIT" NOT AN INTRINSICS FILE~";                09633800
              FIN:                                                      09633850
              END;                                                      09633900
              FORGETSPACE(FH);                                          09634000
              FORGETSPACE(DIRECTORYSEARCH(A,B,16));                     09634100
              ERROR;                                                    09634200
         END ELSE                                                       09634300
         END ELSE                                                       09681500
         IF M[T+4].[36:6] NEQ MCPTYPE THEN % CANT CM NON-MCPS           09681505
         BEGIN                                                          09681510
              STREAM(A:=[A],T:=BUFF.[15:15]-1);                         09681515
              BEGIN DS:=2LIT"# "; SI:=A; SI:=SI+1;                      09681520
                   DS:=7CHR; DS:=LIT"/"; SI:=SI+1;                      09681525
                   DS:=7CHR; DS:=12LIT" NOT AN MCP~";                   09681530
              END;                                                      09681535
              FORGETSPACE(T);                                           09681540
              FORGETSPACE(DIRECTORYSEARCH(A,B,16));                     09681545
              GO TO EXIT;                                               09681550
         END;                                                           09681555
LABEL NOGOOD,LOOP,NULLINT;                                              45003100
    NULLINT:                                                            45156500
                   DS:=27LIT"## LOAD INTRINSICS NOW....~";              45159000
              END                                                       45160500
              ELSE IF M[T+4].[36:6] NEQ DCINTYPE THEN                   45160520
              BEGIN                                                     45160540
                   FORGETSPACE(T);                                      45160560
                   X[(T:=13+5|SYSNO)]:=X[T+1]:=0; % REMOVE INTRINSICS   45160580
                   DISKWAIT(X INX 0,-30,0);                             45160590
                   GO TO NULLINT;                                       45160600
              END                                                       45160620
              ELSE BEGIN                                                45161000
$:  THIS PATCH ENSURES THAT ONLY VALID INTRINSIC AND MCP FILES ARE
$: CI-ED OR CM-ED.  FORMERLY, INCORRECT CI-ING AND CM-ING COULD CAUSE
$:SYSTEM HANGS, IN SOME CASES REQUIRING A COOL START TO RECOVER.
$:  ALSO AFTER A HALT-LOAD THE INTRINSICS ARE CHECKED TO SEE IF THEY
$:ARE THE BATCH INTRINSICS (I.E. "TIMESHARING" SET FALSE) AND, IF NOT,
$:THE INTRINSIC NAME IS REMOVED FROM SEGMENT ZERO AND THE OPERATOR
$:IS REQUIRED TO ENTER A CI.
$:
$:NOTE: THIS PATCH REQUIRES EITHER ESPOL PATCH XIII.104
$:OR A UTILITY PROGRAM TO TYPE THE FILE HEADERS.
