%B 5 7 0 0   M C P  M A R K     X I I I . 0                07/15/71     00001000
%                                                                       00002000
$INCLUDE 00002111, IF INQUIRY OR NOT DATACOM;                           00002099
    $SET DCSPO=FALSE,DCLOG=FALSE,DATACOM=FALSE                          00002100
$INCLUDE 00002121, IF DEBUGGING;                                        00002111
    $SET CHECKLINK=TRUE                                                 00002120
BEGIN                                                                   00003000
DEFINE MIXMAX=  9#;          COMMENT:  MIXMAX MAY NOT BE LARGER THAN 29;00004000
DEFINE JOBNUMAX=40#;         COMMENT:  JOBNUMAX SHOULD BE ABOUT         00005000
                                            2|MIXMAX+30;                00005001
DEFINE ESAD=[1:15]#, UNUM=[16:5]#,BYBY(BYBY1,BYBY2)=BEGIN STREAM(PUNTER)00005200
      ; DS~BYBY2 LIT BYBY1; PUNT([PUNTER[0]]) END # ;                   00005202
 DEFINE RESERVEDISKSIZE=2000#;                                          00005300
    COMMENT TRACESIZE IS THE SIZE OF THE CORE AREA USED TO STORE TRACE  00005500
                    INFORMATION BEFORE IT IS WRITTEN ON DISK.           00005600
            TRACAREASTART IS THE ABSOLUTE DISK ADDRESS OF THE TRACE     00005700
                    AREA ON DISK.                                       00005800
            TRACAREASIZE IS THE SIZE (IN DISK SEGMENTS) OF THE TRACE    00005900
                    AREA ON DISK;                                       00005950
DEFINE TRACESIZE=30#,TRACAREASTART=10000#,TRACAREASIZE=480#;            00006000
DEFINE HANG=DO UNTIL FALSE#;                                            00006100
$ INCLUDE 00006601,IF SAVERESULTS;                                      00006200
ARRAY SAVERESULT[*];REAL SVRESULT;                                      00006300
DEFINE                                                                  00006400
SVRLSTSIZE=128#,                                                        00006500
STORAWAY=SAVERESULT[(SVRESULT~SVRESULT+1) MOD SVRLSTSIZE]#;             00006600
 REAL JUNK=5;%                                                          00007000
    DEFINE PSEUDOMAX   = 31 #,    % MAX NO OF PSEUD-RDRS 0-ORIGIN       00007050
           PSEUDOMAX1  = 32 #,    % MAX NO OF PSEUD-RDRS 1-ORIGIN       00007055
           PSEUDOMAXT  = 63 #;    % # ENTRIES IN TINU TABLE -2          00007060
COMMENT TO REDEFINE MAX NO. OF PSEUDO RDRS,SIZE AND INITIALIZATION      00007061
         OF TINU[*] AT 00241900 MUST ALSO BE MODIFIED ACCORDINGLY;      00007062
    COMMENT : PSEUDOMAX  MUST BE }0 AND { 31                            00007065
              PSEUDOMAX1 MUST BE } 0 AND { 32                           00007070
              PSEUDOMAXT MUST BE } 31 AND { 63;%                        00007075
COMMENT TO ADJUST THE PRIORITY,CORE ESTIMATE, AND STACK SIZE            00007200
        OF LIBMAIN/DISK, SEE SEQUENCE NUMBER 40355925;                  00007210
 LABEL GOGOGO,NORMALERROR,P2BUSY,TIMER,EXTERNAL,INQUEST,                00008000
       PROCSWIT,P2FAKE,KEYBOARDREQUEST,RETURN,COMINIT,MEMORYPARITY  %WF 00009000
       ;                                                                00010000
DEFINE GETUSERDISK(GETUSERDISK1)=PETUSERDISK(GETUSERDISK1,EUSN)#;%******00012001
    INTEGER RRRMECH=@201;%                                              00013000
DEFINE SPACE(SPACE1) =(GETSPACE(SPACE1,0,0) + 2)#;                      00013500
DEFINE MCP=M[1]#; %PRIVILEDGED USERCODE STORED IN M[1]                  00013600
SAVE INTEGER PROCEDURE GETSPACE(SIZE,TYPE,SAVEF);%                      00014000
                       VALUE SIZE,TYPE,SAVEF;%                          00015000
                       INTEGER SIZE,TYPE;%                              00016000
                       BOOLEAN SAVEF;            FORWARD;%              00017000
SAVE REAL PROCEDURE WAITIO(IOD,MASK,U);%                                00018000
                    VALUE IOD,MASK,U; REAL IOD,MASK,U; FORWARD;%        00019000
SAVE PROCEDURE SNOOZE(PRYR,ADDRESS,MASK);  VALUE PRYR,ADDRESS,MASK;     00020000
    REAL PRYR; NAME ADDRESS; ARRAY MASK[*]; FORWARD;                    00021000
DEFINE SLEEP(SLEEP1,SLEEP2)=SNOOZE(PRYOR[P1MIX],SLEEP1,SLEEP2)#;        00021500
ARRAY PRYOR[*];                                                         00021600
REAL P1MIX,P2MIX;  % SEE 00105000                                       00021700
ARRAY SLATE[*];%                                                        00022000
REAL NSLATE,LSLATE;%                                                    00023000
     DEFINE SLATESIZE=16#,SLATEND=SLATESIZE-1#;%SIZE MUST BE TWO POWER  00023100
REAL NT1=@160,NT2=@161,NT3=@162,NT4=@163,NT5=@164,NT6=@165,NT7=@166;    00024000
COMMENT NT1 THRU NT7 ARE USED BY THE MCP FOR TEMPORARY STORAGE.         00024010
        ALL PROCESSES THAT USE THESE VARIABLES ASSUME THAT IF CONTROL   00024020
        IS LOST, THEIR CONTENT MAY HAVE BEEN CHANGED BY THE TIME        00024030
        THAT CONTROL IS REGAINED.                                       00024040
END COMMENT;                                                            00024050
REAL MCPBASE;                                                           00024100
COMMENT MCPBASE CONTAINS THE DISK ADDRESS (OCTAL) OF THE BEGINNING      00024200
        OF THE MCP THAT IS CURRENTLY IN USE. THIS ADDRESS IS PASSED TO  00024210
        THE MCP BY THE LOADER ROUTINE AT EACH HALT/LOAD IN M[0].[18:30].00024220
        WHEN THE ESPBIT ROUTINE IS CALCULATING THE DISK ADDRESS         00024230
        OF AN MCP SEGMENT, IT ADDS MCPBASE TO THE ADDRESS THAT          00024240
        IS CONTAINED IN THE PRT CELL FOR THAT SEGMENT.                  00024250
END COMMENT;                                                            00024260
SAVE PROCEDURE ESPBIT; COMMENT PRESENCE BIT ROUTINE FOR ESP SEGMENTS;%  00025000
         BEGIN INTEGER PRTLOC,SYLLABLE,LOC,SIZE;%                       00026000
               DEFINE MAYBEWORKEDON=[7:1]#;%                            00027000
               ARRAY MYSELF=ESPBIT[*];%                                 00028000
               REAL RCW=+0,DISKREAD;%                                   00029000
               LABEL MAKEPRESENT;%                                      00030000
              PRTLOC~(RCW INX 0)&RCW[30:10:2];%                         00031000
              STREAM(RSLT~[SYLLABLE],CL~PRTLOC);%                       00032000
                   BEGIN SI~CL; SI~SI-2; DI~RSLT; DI~DI+6; DS~2 CHR END;00033000
              PRTLOC ~ IF SYLLABLE THEN NT4%                            00034000
                                ELSE SYLLABLE.[36:10];%                 00035000
              IF MEMORY[PRTLOC].MAYBEWORKEDON THEN%                     00036000
 MAKEPRESENT: BEGIN MEMORY[PRTLOC].MAYBEWORKEDON~FALSE;%                00037000
                    SIZE~MEMORY[PRTLOC].[8:10];%                        00038000
                    LOC~GETSPACE(SIZE,1,0);%                            00039000
                    DISKREAD~(LOC+1)&SIZE[8:38:10]&@14[21:42:6]       %E00040000
                             &((SIZE+29) DIV 30)[27:42:6];%             00041000
                   STREAM(L:=LOC+1,N:=M[PRTLOC].[18:15]+MCPBASE,D:=0);  00042000
                     BEGIN SI~LOC N; DI~L; DS~8 DEC END;%               00043000
                   SYLLABLE~WAITIO(DISKREAD,0,18);%                     00044000
                    MEMORY[LOC]~MEMORY[LOC]&0[2:47:1]&0[9:42:6];%       00045000
                    MEMORY[LOC+1]~PRTLOC&SIZE[18:33:15];%               00046000
                    MEMORY[PRTLOC]~MEMORY[PRTLOC]&1[7:47:1]%            00047000
                                   &(LOC+2)[33:33:15];%                 00048000
              END ELSE%                                                 00049000
              BEGIN SLEEP([MEMORY[PRTLOC]],0&1[7:47:1]);%               00050000
                    IF (MEMORY[PRTLOC] INX 0)=(MYSELF INX 0) THEN%      00051000
                        GO TO MAKEPRESENT;%                             00052000
              END;%                                                     00053000
                   POLISH(0,RDF,0,XCH,FCX,STS);%                        00054000
              GO TO POLISH(MEMORY[PRTLOC]);%                            00055000
         END ESPBIT;%                                                   00056000
LABEL NOTHINGTODO,INITIATE,START,STACKOVERFLOW,IOBUSY;                  00057000
LABEL FINDIT;                                                           00057100
REAL    RESULT1=12 ,RESULT2=13 ,RESULT3=14 ,RESULT4=15 ;%               00058000
DEFINE SIZE=[8:10]#,              FILEBIT=[1:1]#,OWNBIT=[2:1]#,%        00060000
     DIMENSIONS=[3:5]#,BLKCNTR=[8:10]#,MOM=[18:15]#,CURBLKCNTR=16#,%    00061000
       AITNDX=6#,PBIT=[2:1]#;%                                          00062000
 DEFINE  FF=18:15#,%                                                    00063000
         MSFF = [16:1]#,                                                00063100
         CF=33:15#,%                                                    00064000
         CTF=18:33:15#,%                                                00065000
         FTF=18:18:15#,%                                                00066000
         CTC=33:33:15#,%                                                00067000
         FTC=33:18:15#,                                              %PB00067100
         DELTA=11#;%                                                    00068000
 INTEGER AVAIL;%                                                        00069000
              COMMENT AVAIL CONTAINS THE ADDRESS OF THE STOPPER%        00070000
                      FOR AVAILABLE STORAGE LINKS ITS VALUE IS%         00071000
                      THE HIGHEST AVAILABLE ADDRESS-1;%                 00072000
 INTEGER MSTART;%                                                       00073000
              COMMENT MSTART CONTAINS THE ADDRESS OF THE%               00074000
                      FIRST AREA OF STORAGE AFTER END OF%               00075000
                      ESP PROGRAM;%                                     00076000
 INTEGER MEND;%                                                         00077000
              COMMENT THIS POINTS TO LAST STORAGE LINK IN%              00078000
                      MEMORY;%                                          00079000
 REAL TOGLE;                                                            00080000
 DEFINE HP2TOG        = TOGLE.[47:1]#, HP2MASK       =   @1#            00080100
       ,STATUSBIT     = TOGLE.[46:1]#, STATUSMASK    =   @2#            00080200
       ,SHEETFREE     = TOGLE.[45:1]#, SHEETMASK     =   @4#            00080300
       ,STACKUSE      = TOGLE.[44:1]#, STACKMASK     =  @10#            00080400
       ,STOREDY       = TOGLE.[43:1]#, STOREMASK     =  @20#            00080500
       ,USERDISKREADY= TOGLE.[42:1]#, USERDISKMASK=  @40#               00080600
       ,HOLDFREE      = TOGLE.[41:1]#, HOLDMASK      = @100#            00080700
       ,NSECONDREADY  = TOGLE.[40:1]#, NSECONDMASK   = @200#            00080800
       ,ABORTABLE     = TOGLE.[39:1]#, ABORTMASK     = @400#            00080900
       ,BUMPTUTIME    = TOGLE.[38:1]#, BUMPTUMASK    =@1000#            00080950
       ,KEYBOARDREADY = TOGLE.[37:1]#, KEYBOARDMASK  =@2000#            00081000
       ,NOBACKTALK    = TOGLE.[36:1]#, NOBACKTALKMASK=@4000#            00081100
       ,QTRDY        = TOGLE.[35:1]#, QTRDYMASK     =@10000#            00081200
       ,INTFREE       = TOGLE.[34:1]#, FREEMASK     =@20000#            00081300
       ,SPOEDNULLOG  = TOGLE.[33:1]#                                    00081400
       ,REMOTELOGFREE = TOGLE.[32:1]#, REMOTELOGMASK = @100000#         00081500
       ,EGGSELECTSTOPPED = TOGLE.[31:1]#                                00081600
       ,STARTOG       = TOGLE.[30:1]#                                   00081610
       ,NINETEENNOTREADING=TOGLE.[29:1]#, NINETEENMASK=@1000000#        00081620
      ,SMWSTOPPED=TOGLE.[28:1]#, SMWSTOPPEDMASK=@2000000#               00081630
      ,DCWAITING=TOGLE.[27:1]#                                          00081640
      ,DCQPTSTOPPED=TOGLE.[26:1]#                                       00081650
      ,INQUPTSTOPPED=TOGLE.[25:1]#                                      00081660
      ,MCPFREE=TOGLE.[24:1]#, MCPMASK=@40000000#                        00081670
              % USED TO PROTECT DISK SEGMENT ZERO                       00081675
       ,SCRATCHDIRECTORYREADY = TOGLE.[23:1]#,                          00081680
                           SCRATCHDIRECTORYMASK = @100000000#           00081690
              % USED TO PROTECT THE SCRATCHDIRECTORY                    00081695
      ,FINDINGADDRESS=TOGLE.[22:1]#                                     00081700
              % SET TRUE WHENEVER THE INDEPENDENT RUNNING ROUTINE       00081705
              % "FINDFREEADDRESS" IS STARTED SO THAT ONLY ONE COPY      00081706
              % WILL BE RUN AT ONE TIME.                                00081707
       ,CDFREE=TOGLE.[21:1]#,CDMASK=@400000000#                         00081710
              % SET TRUE WHEN CONTROL DECK QUEUE IS FREE                00081711
      ,NOMEM=TOGLE.[15:6]# %GETSPACES HANGING                           00081950
     ,BREAKTOG=TOGLE.[14:1]# %BREAKOUT TOG                              00081960
     ,BREAKMASK=@100000000000#                                          00081970
       ;                                                                00081999
     STREAM PROCEDURE MOVE(N)"WORDS FROM"(HERE)"TO"(THERE);%            00082000
                      VALUE N,HERE,THERE;%                              00083000
       COMMENT     WILL MOVE 0 TO 4095 WORDS;%                          00084000
              BEGIN LOCAL NDIV64;%                                      00085000
                    SI~LOC N; DI~LOC NDIV64; SI~SI+6; DI~DI+7; DS~1 CHR;00086000
                    SI~HERE; DI~THERE;%                                 00087000
                    NDIV64(DS~32 WDS; DS~32 WDS); DS~N WDS;%            00088000
              END MOVE;%                                                00089000
 PROCEDURE STOPM(B); VALUE B; BOOLEAN B; FORWARD;                       00089100
 LABEL DIFFCOM;                                                         00089200
 SAVE PROCEDURE FORGETSPACE(LOC);%                                      00090000
                      VALUE LOC;%                                       00091000
                      REAL LOC;%                                        00092000
FORWARD;%                                                               00093000
 ARRAY BED[*];                                             %  4MIXMAX+4 00094000
         COMMENT ENTRIES IN THE BED HAVE TWO WORDS.%                    00095000
              THE FIRST WORD HAS THE FOLLOWING FORMAT:%                 00096000
                    0- 2 = 5%                                           00097000
                    3- 7 = MIXINDEX%                                    00098000
                    8-17 = 0%                                           00099000
                   18-32 = F REGISTER SETTING%                          00100000
                   33-47 = ADDRESS OF WORD TO BE TESTED.%               00101000
              THE SECOND WORD IS A MASK IF BIT 0 IS OFF.%               00102000
              THE SECOND WORD IS AN ACCIDENTAL ENTRY DESCRIPTOR IF BIT 000103000
              IS ON;%                                                   00104000
COMMENT P1MIX,P2MIX NOW DECLARED AT 00021700;                           00105000
         COMMENT P1MIX IS THE MIX INDEX FOR THE JOB BEING CURRENTLY%    00106000
              PROCESSED.  P1MIX = 0 MEANS NO JOB IS CURRENTLY BEING%    00107000
              PROCESSED.  P2MIX IS THE MIX INDEX FOR THE JOB BEING%     00108000
              CURRENTLY PROCESSED ON PROCESSOR 2.  IF PROCESSOR IS IDLE 00109000
              THEN P2MIX = 0.  IF THERE IS NO PROCESSOR 2 THEN P2MIX=-1;00110000
REAL DATE=@167;                                                         00111000
         COMMENT DATE CONTAINS TODAYS DATE;%                            00112000
REAL CLOCK=@170;                                                        00113000
REAL XCLOCK=@171;                                                       00114000
         COMMENT CLOCK CONTAINS THE NUMBER OF TIME INTERVAL INTERRUPTS% 00115000
              PROCESSED SINCE HALT-LOAD IN 9-41;%                       00116000
REAL READY=@172;                                                        00121000
         COMMENT READY CONTAINS THE CONTENTS OF THE READY REGISTER ON%  00122000
              THE LAST READ;%                                           00123000
         COMMENT STATUSBIT IS FALSE IF THE STATUS ROUTINE IS RUNNING AND00125000
              TRUE OTHERWISE.  THIS PREVENTS TWO COPIES OF STATUS FROM% 00126000
              RUNNING TOGETHER;%                                        00127000
    ARRAY PRT[*,*];%                                                    00128000
         COMMENT PRT[I,*] CONTAINS A DATA DESCRIPTOR WITH PROPER SIZE%  00129000
              FIELD POINTING AT PRT FOR JOB WITH MIX INDEX = I;%        00130000
 ARRAY PRTROW=PRT[*];                                      %  MIXMAX+1% 00131000
         COMMENT PRTROW IS DOPE VECTORS FOR PRT;%                       00132000
         ARRAY  JAR[*,*];%                                              00133000
%   JAR HOLDS INFO OF JOBS IN PROCESS%                                  00134000
 ARRAY INTRNSC[*];  REAL INTSIZE;%  RE-ENTRANT INTRINSICS ON USER DISK  00135000
    ARRAY INTABLE[*,*], INTABLEROW=INTABLE[*];%                         00135100
$ INCLUDE 00135831,IF AUXMEM;                                           00135199
    ARRAY AUXDATA[*], AUXCODE[*];                                       00135200
    COMMENT AUXDATA AND AUXCODE KEEP TRACK OF HOW MUCH                  00135300
              AUXILIARY MEMORY IS ASSIGNED TO A JOB.  IN LEAGUE         00135400
              WITH AUXLIMIT, THEY CONTROL THE AMOUNT USED.  THEY        00135500
              ALSO ALLOW THE RETURN OF THIS SPACE AFTER PROBLEMS;       00135600
 SAVE INTEGER PROCEDURE AUXILIARYSPACE(SIZE);                           00135700
    VALUE     SIZE;                                                     00135710
    INTEGER   SIZE;                                                     00135720
         FORWARD;                                                       00135730
 SAVE PROCEDURE FORGETAUXILIARYSPACE(SIZE, LOC);                        00135800
    VALUE     SIZE, LOC;                                                00135810
    INTEGER   SIZE, LOC;                                                00135820
         FORWARD;                                                       00135830
 ARRAY SHEET[*];                                           %  5%        00136000
 ARRAY JARROW=JAR[*];                                      %  MIXMAX+1% 00138000
         COMMENT ENTRIES IN THE SLATE HAVE TWO WORDS.  EACH ENTRY%      00140000
              DESCRIBES AN INDEPENDENT ROUTINE WHICH NEEDS TO BE STARTED00141000
              RUNNING.  NOTHING TO DO STARTS THESE ROUTINES.%           00142000
              THE FIRST WORD OF AN ENTRY IS A PARAMETER TO THE ROUTINE. 00143000
              THE SECOND WORD OF AN ENTRY IS THE PRT ADDRESS OF THE%    00144000
              ROUTINE.%                                                 00145000
              NSLATE AND LSLATE ARE POINTERS TO THE SLATE.%             00146000
              NSLATE POINTS AT LAST ENTRY WHICH WAS STARTED.%           00147000
              LSLATE POINTS AT LAST ENTRY PLACED IN THE SLATE;%         00148000
    REAL JOBNUM;%                                                       00149000
         COMMENT JOBNUM POINTS AT LAST ENTRY IN BED;%                   00150000
         COMMENT STACKUSE IS TRUE IF THE INDEPEDENT STACK IS NOT IN USE,00152000
              OTHERWISE FALSE;%                                         00153000
    BOOLEAN NOPROCESSTOG;%                                              00154000
         COMMENT   NOPROCESSTOG IS TRUE IF NORMAL STATE PROCESSING IS%  00155000
              ALLOWED, OTHERWISE IT IS FALSE.  IT IS USED BY OVERLAY AND00156000
              OTHERS TO PREVENT CONFUSION;%                             00157000
 DEFINE NDX=3#;    % NUMBER OF ENTRIES PER JOB IN NFO ARRAY             00158100
 ARRAY NFO[*];                                             %MIXMAX|NDX  00158200
    COMMENT NFO CONTAINS THE FOLLOWING FOR EACH ACTIVE MIX INDEX;       00158300
    %    NFO[(MIX-1)|NDX]        = FILE PARAMETER BLOCK DATA DESCRIPTOR 00158400
    %    NFO[(MIX-1)|NDX+1]      = SEGMENT DICTIONARY NAME DESCRIPTOR   00158500
    %    NFO[(MIX-1)|NDX+2].[CF] = LOCATION OF BOTTOM OF STACK (B-WORD) 00158600
    %    NFO[(MIX-1)|NDX+2].[FF] = ESTIMATED CORE REQUIREMENTS          00158700
    %    NFO[(MIX-1)|NDX+2].[1:17] = CLOCK TIME AT BOJ                  00158800
 ARRAY ISTACK[*];                                          %  128%      00159000
 ARRAY PROCTIME[*];                                        %  MIXMAX+1% 00161000
         COMMENT PROCTIME[I] CONTAINS PROCESSOR TIME FOR JOB WITH%      00162000
              MIX INDEX = I;%                                           00163000
 ARRAY IOTIME[*];                                          %  MIXMAX+1% 00164000
         COMMENT IOTIME[I] CONTAINS I-O TIME FOR JOB WITH MIX INDEX =I; 00165000
DEFINE EUIOHOLDER=DIRECTORYTOP-5#,EUTAPER=.98#,DISKAVAILTABLEMAX=130#;  00165500
INTEGER NEUP;  ARRAY EUIO[*];  ARRAY PEUIO[*] ;                         00166000
REAL EUSN;%***************************TEMPORARY*************************00166001
$INCLUDE 00166004,IF SHAREDISK ;                                        00166002
INTEGER AVS ;                                                           00166003
$OMIT 00166007,IF SHAREDISK ;                                           00166005
ARRAY AVTABLE[*] ;                                                      00166006
       COMMENT NEUP.[CF] CONTAINS THE NUMBER OF EUS ON DKA.             00166010
              NEUP.NEUF CONTAINS THE TOTAL NUMBER OF EUS ON THE SYSTEM. 00166025
              EUIO AND PEUIO CONTAIN THE I-O TIME USED BY A GIVEN EU.   00166030
              THIS INFORMATION IS USED BY GETUSERDISK IN AN ATTEMPT TO  00166040
              MINIMIZE  EU CONFLICT;                                    00166050
    DEFINE MIXF = [3:5]#;%                                              00168000
         COMMENT STANDARD FIELD FOR MIX INDEX;%                         00169000
 ARRAY CHANNEL[*];                                         %  5%        00170000
         COMMENT CHANNEL[I] CONTAINS LOGICAL UNIT OF LAST DESCRIPTOR%   00171000
              SENT OUT ON CHANNEL I;%                                   00172000
 ARRAY FINALQUE[*];                                        %  32%       00173000
 ARRAY LOCATQUE[*];                                        %  32%       00174000
         COMMENT IOQUE,FINALQUE, AND LOCATQUE TOGETHER WITH UNIT FORM%  00175000
              THE I-O QUEUE.  AN I-O REQUEST FOR LOGICAL UNIT U REQUIRES00176000
              THREE WORDS OF SPACE IN THE I-O QUEUE.  IF THE REQUEST%   00177000
              OCCUPIES POSITION S IN THE I-O QUEUE, THEN IOQUE[S] )%    00178000
              I-O DESCRIPTOR FOR THIS REQUEST, FINAL[S] = I-O DESCRIPTOR00179000
              SKELETON TO BE USED AT I-O COMPLETE TIME TO REBUILD%      00180000
              I-O DESCRIPTOR, LOCATQUE[S] = LOCATION OF I-O DESCRIPTOR% 00181000
              AT TIME OF REQUEST.  LOCATQUE[S] CONTAINS SOME ADDITIONAL 00182000
              INFORMATION.  IN PARTICULAR:%                             00183000
                    0- 2 = 5%                                           00184000
                    3- 7 = MIX INDEX OF REQUESTER%                      00185000
                       8 = USED BY SHARED DISK MCP                  %GEH00185100
                       9 = SUPPRESS ERROR MESSAGES ON THIS I/O      %GEH00185500
                      10 = USED BY TIME SHARING MCP                 %GEH00186000
                      11 = ERROR RECOVERY IN PROCESS ON THIS I-O        00186100
                   12-17 = LOGICAL UNIT NUMBER%                         00187000
                   18-32 = INDEX OF NEXT REQUEST TO BE DONE ON THIS UNIT00188000
                           OR @77777 IF NO NEXT REQUEST%                00189000
                   33-47 = ORIGINAL LOCATION OF I-O DESCRIPTOR.%        00190000
              UNIT[U] CONTAINS INFORMATION ABOUT LOGICAL UNIT U.%       00191000
                    1- 4 = TYPE OF I/O DEVICE%                          00192000
                    5-12 = ERROR FIELD OF LAST I/O DONE ON THIS UNIT%   00193000
                      13 = UNIT NOT READY BIT%                          00194000
                      14 = ERROR BIT (ON IF ERROR)%                     00195000
                      15 = WAIT BIT (ON IF UNIT IS WAITING FOR A CHANNEL00196000
                   16-17 = PROCESS BITS (USUALLY BOTH ON IF UNIT IS IN% 00197000
                             PROCESS OR BOTH OFF.  WITH PRINTERS THE%   00198000
                             I-O FINISH SETS OFF 16 AND THE PRINTER%    00199000
                             FINISH SETS OFF 17)%                       00200000
                   18-32 = INDEX OF FIRST I-O REQUEST FOR WHICH SERVICE 00201000
                             IS NOT COMPLETE%                           00202000
                   33-47 = INDEX OF LAST UNSERVICED I-O REQUEST.%       00203000
              THE SPACES NOT USED IN THE I-O QUEUE ARE LINKED TOGETHER% 00204000
              THROUGH IOQUE.  THE FIRST AVAILABLE IS IN IOQUEAVAIL;%    00205000
    REAL IOQUEAVAIL;%                                                   00206000
         COMMENT SEE ABOVE COMMENT;%                                    00207000
 ARRAY IOQUE[*];                                           %  32%       00208000
    ARRAY UNIT[32] ~%                                                   00209000
              @0400007777777777, COMMENT MTA =  0;%                     00210000
              @0400007777777777, COMMENT MTB =  1;%                     00211000
              @0400007777777777, COMMENT MTC =  2;%                     00212000
              @0400007777777777, COMMENT MTD =  3;%                     00213000
              @0400007777777777, COMMENT MTE =  4;%                     00214000
              @0400007777777777, COMMENT MTF =  5;%                     00215000
              @0400007777777777, COMMENT MTH =  6;%                     00216000
              @0400007777777777, COMMENT MTJ =  7;%                     00217000
              @0400007777777777, COMMENT MTK =  8;%                     00218000
              @0400007777777777, COMMENT MTL =  9;%                     00219000
              @0400007777777777, COMMENT MTM = 10;%                     00220000
              @0400007777777777, COMMENT MTN = 11;%                     00221000
              @0400007777777777, COMMENT MTP = 12;%                     00222000
              @0400007777777777, COMMENT MTR = 13;%                     00223000
              @0400007777777777, COMMENT MTS = 14;%                     00224000
              @0400007777777777, COMMENT MTT = 15;%                     00225000
              @0600007777777777, COMMENT DRA = 16;%                     00226000
              @0600007777777777, COMMENT DRB = 17;%                     00227000
              @1000007777777777, COMMENT DKA = 18;%                     00228000
              @1000007777777777, COMMENT DKB = 19;%                     00229000
              @0200007777777777, COMMENT LPA = 20;%                     00230000
              @0200007777777777, COMMENT LPB = 21;%                     00231000
              @1400007777777777, COMMENT CPA = 22;%                     00232000
              @0000007777777777, COMMENT CRA = 23;%                     00233000
              @0000007777777777, COMMENT CRB = 24;%                     00234000
              @1200007777777777, COMMENT SPO = 25;%                     00235000
              @2000007777777777, COMMENT PPA = 26;%                     00236000
              @2200007777777777, COMMENT PRA = 27;%                     00237000
              @2200007777777777, COMMENT PRB = 28;%                     00238000
              @2000007777777777, COMMENT PPB = 29;%                     00239000
              @2400007777777777, COMMENT DCA = 30;%                     00240000
              @3600007777777777; COMMENT     = 31;%                     00241000
$ OMIT 00241701, IF SHAREDISK;                                          00241600
ARRAY TINU[65] :=                                                       00241700
$ INCLUDE 00241901, IF SHAREDISK;                                       00241800
ARRAY TINU[69] :=                                                       00241900
                   @ 020010040446321,  COMMENT MTA;                     00242000
                   @ 060020040446322,  COMMENT MTB;%                    00243000
                   @ 120040040446323,  COMMENT MTC;%                    00244000
                   @ 160110040446324,  COMMENT MTD;%                    00245000
                   @ 220120040446325,  COMMENT MTE;%                    00246000
                   @ 260140040446326,  COMMENT MTF;%                    00247000
                   @ 320210040446330,  COMMENT MTH;%                    00248000
                   @ 360220040446341,  COMMENT MTJ;%                    00249000
                   @ 420240040446342,  COMMENT MTK;%                    00250000
                   @ 460310040446343,  COMMENT MTL;%                    00251000
                   @ 520320040446344,  COMMENT MTM;%                    00252000
                   @ 560340040446345,  COMMENT MTN;%                    00253000
                   @ 620410040446347,  COMMENT MTP;%                    00254000
                   @ 660420040446351,  COMMENT MTR;%                    00255000
                   @ 720440040446362,  COMMENT MTS;%                    00256000
                   @ 760510040446363,  COMMENT MTT;%                    00257000
                   @ 100520040245121,  COMMENT DRA;%                    00258000
                   @ 200540040245122,  COMMENT DRB;%                    00259000
                   @ 140610040244221,  COMMENT DKA;%                    00260000
                   @ 300620040244222,  COMMENT DKB;%                    00261000
                   @ 540640000434721,  COMMENT LPA;%                    00262000
                   @ 640710000434722,  COMMENT LPB;%                    00263000
                   @ 240720000234721,  COMMENT CPA;%                    00264000
                   @ 240740040235121,  COMMENT CRA;%                    00265000
                   @ 341010040235122,  COMMENT CRB;%                    00266000
                   @ 741020000624746,  COMMENT SPO;%                    00267000
                   @ 441040000474721,  COMMENT PPA;%                    00268000
                   @ 441110000475121,  COMMENT PRA;%                    00269000
                   @ 501120000475122, COMMENT PRB;%                     00270000
                   @ 501140000474722, COMMENT PPB;%                     00271000
                   @ 401210000242321,  COMMENT DCA;%                    00272000
                   @ 001220000713147,  COMMENT ZIP;%                    00273000
                   @ 001240000232421,  COMMENT CDA;%                    00274000
                   @ 001310000232422,  COMMENT CDB;%                    00275000
                   @ 001320000232423,  COMMENT CDC;%                    00276000
                   @ 001340000232424,  COMMENT CDD;                     00277000
                   @ 001410000232425,  COMMENT CDE;                     00277100
                   @ 001420000232426,  COMMENT CDF;                     00277150
                   @ 001440000232427,  COMMENT CDG;                     00277200
                   @ 001510000232430,  COMMENT CDH;                     00277250
                   @ 001520000232441,  COMMENT CDJ;                     00277300
                   @ 001540000232442,  COMMENT CDK;                     00277350
                   @ 001610000232443,  COMMENT CDL;                     00277400
                   @ 001620000232444,  COMMENT CDM;                     00277450
                   @ 001640000232445,  COMMENT CDN;                     00277500
                   @ 001710000232447,  COMMENT CDP;                     00277550
                   @ 001720000232450,  COMMENT CDQ;                     00277600
                   @ 001740000232451,  COMMENT CDR;                     00277650
                   @ 002010000232462,  COMMENT CDS;                     00277700
                   @ 002020000232463,  COMMENT CDT;                     00277750
                   @ 002040000232464,  COMMENT CDU;                     00277800
                   @ 002110000232465,  COMMENT CDV;                     00277850
                   @ 002120000232466,  COMMENT CDW;                     00277900
                   @ 002140000232467,  COMMENT CDX;                     00277910
                   @ 002210000232470,  COMMENT CDY;                     00277920
                   @ 002220000232471,  COMMENT CDZ;                     00277930
                   @ 002240000232402,  COMMENT CD2;                     00277940
                   @ 002310000232403,  COMMENT CD3;                     00277950
                   @ 002320000232404,  COMMENT CD4;                     00277960
                   @ 002340000232405,  COMMENT CD5;                     00277965
                   @ 002410000232406,  COMMENT CD6;                     00277970
                   @ 002420000232407,  COMMENT CD7;                     00277975
                   @ 002440000232410,  COMMENT CD8;                     00277980
                   @ 002510000232411,  COMMENT CD9;                     00277985
$ INCLUDE 00277995, IF SHAREDISK;                                       00277987
                   @ 000000000627021,  COMMENT SYA;                     00277988
                   @ 000000000627022,  COMMENT SYB;                     00277990
                   @ 000000000627023,  COMMENT SYC;                     00277992
                   @ 000000000627024,  COMMENT SYD;                     00277994
                   @ 000000000446367;  COMMENT MTX, ALL SCRATCH TAPES;  00277998
 ARRAY WAITQUE[*];                                         %  8%        00278000
    REAL NEXTWAIT,FIRSTWAIT;%                                           00279000
         COMMENT WAITQUE IS A QUEUE OF UNITS FOR WHICH THERE ARE%       00280000
              REQUESTS BUT NO CHANNEL IS AVAILABLE.  NEXTWAIT AND%      00281000
              FIRSTWAIT ARE POINTERS AT THE WAITQUE.  NEXTWAIT IS THE%  00282000
              NEXT AVAILABLE SLOT IN WAITQUE AND FIRSTWAIT POINTS AT%   00283000
              NEXT UNIT TO BE USED WHEN A CHANNEL IS AVAILABLE;%        00284000
 ARRAY LABELTABLE[*];                                      %  32%       00285000
 ARRAY MULTITABLE[*];                                      %  32%       00286000
 ARRAY RDCTABLE[*];                                        %  32%       00287000
 ARRAY PRNTABLE[*];%                                                    00288000
 ARRAY REPLY[*];%                                                       00289000
COMMENT LABELTABLE, MULTITABLE, AND RDCTABLE CONTAIN LABEL INFORMATION% 00290000
        BY LOGICAL UNIT NUMBER AS FOLLOWS:%                             00291000
        LABELTABLE[I] CONTAINS THE FILE ID FOR LOGICAL UNIT I.%         00292000
        MULTITABLE[I] CONTAINS THE CORRESPONDING MULTI-FILE ID.%        00293000
        RDCTABLE[I] CONTAINS THE CORRESPONDING REEL NUMBER (IN [14:10]),00294000
        CREATION DATE (IN [24:17]), AND CYCLE (IN [41:7]);%             00295000
$ INCLUDE 00296501, IF SHAREDISK;                                       00295999
DEFINE LQMAX=20#; % SIZE OF THE LQUE ARRAY                              00296000
ARRAY LQUE[*];                                                          00296100
REAL LQAVAIL;                                                           00296200
COMMENT LQUE CONTAINS ONE ENTRY FOR EACH IO THAT IS WAITING FOR         00296300
        A LOCKED DISK SEGMENT.                                          00296310
$ VOID                                                                  00296315
        LQUE[N].[8:40] CONTAINS THE DISK ADDRESS (BCD)                  00296320
        LQUE[N].[1:7] CONTAINS AN INDEX INTO THE IOQUE.                 00296330
        LQAVAIL IS AN INDEX POINTING TO THE FIRST EMPTY WORD IN LQUE.   00296340
$ VOID                                                                  00296345
        WHEN A LOCKED SEGMENT RESULT DESCRIPTOR IS ENCOUNTERED,         00296350
        THE IOQUE ENTRY FOR THAT IO IS DISCONNECTED FROM THE            00296360
        UNIT TABLE AND AN ENTRY IS MADE FOR IT IN LQUE. WHEN THE        00296370
        REQUESTED ADDRESS IS UNLOCKED, THE PROCEDURE FINDFREEADDRESS    00296380
        REMOVES THE ENTRY FROM LQUE AND RECONNECTS IT TO THE UNIT TABLE.00296390
END COMMENT;                                                            00296400
REAL OPTION;%                                                           00297000
REAL ILL,INQCT;                                                         00299000
REAL PINGO;                                                             00301000
 REAL READQ,RRNCOUNT;  DEFINE PUT=SET#;                                 00301100
$INCLUDE 00301301, IF DATACOM AND NOT INQUIRY;                          00301200
     REAL DC19Q;                                                        00301300
 ARRAY TRANSACTION[*];                                     %  32%       00304000
 DEFINE ETRLNG = 5#;    % LENGTH OF ENTRY IN FILE BLOCK%                00305000
SAVE REAL PROCEDURE TWO(N); VALUE N; INTEGER N;                         00306000
              BEGIN REAL T=+1;                                          00307000
                   STREAM(N:=N:=47-N,T:=[T]);                           00308000
                   BEGIN SKIP N DB; DS:=SET; END;                       00308500
              END TWO;%                                                 00309000
    REAL SYLLABLE;%                                                     00310000
$ INCLUDE 00310191, IF SHAREDISK;                                       00310099
REAL SYSNO,SYSMAX;                                                      00310100
COMMENT SYSNO CONTAINS THE HARDWARE SYSTEM NUMBER.                      00310110
        SYSMAX CONTAINS THE MAXIMUM NUMBER OF SYSTEMS THAT CAN          00310120
        BE CONNECTED TOGETHER IN THIS CONFIGURATION.                    00310130
        BOTH OF THESE PARAMETERS ARE PASSED TO THE MCP BY THE           00310140
        MCP LOADER AT HALT/LOAD TIME:                                   00310150
             SYSNO IN M[0].[16:2] AND                                   00310160
             SYSMAX IN M[0].[14:2]                                      00310170
END COMMENT;                                                            00310180
$ OMIT 00310201, IF SHAREDISK;                                          00310199
DEFINE SYSNO=0#, SYSMAX=1#;                                             00310200
         COMMENT ANALYSIS PLACES THE SYLLABLE THAT CAUSED THE INTERRUPT 00311000
              IN SYLLABLE.  THIS IS USED BY PRESENCE BIT, FLAG BIT, AND 00312000
              VARIOUS ERRORS;%                                          00313000
SAVE REAL PROCEDURE RESULT;FORWARD;%                                    00315000
PROCEDURE FORGETUSERDISK(A,L);VALUE A,L;REAL A,L;FORWARD;%              00316000
REAL PROCEDURE PETUSERDISK(N,T);VALUE N,T;REAL N,T;FORWARD ;            00316100
$ OMIT   00317001, IF NOT DEBUGGING;                                    00316999
SAVE PROCEDURE DT; FORWARD;%                                            00317000
    ARRAY PUNTER[33]:=0,                                                00318000
        "PARITY ","ON RESTA","RTAPE~00",  %1%                           00319000
        "READ ER","ROR REST","ARTING~0",  %4%                           00320000
         "NO MEM~",                     %7%                             00321000
         "HOLDLIS","T OVERF","LOW~000",  %  8                           00322000
         "UNEXP I", "O ERR~  ",%11%                                     00323000
         "INVALD ","ADRSS~  ",%13%                                      00324000
         "SLATE O","VRFLW~00", %15%                                     00325000
         "BED OVR","FLW~0000", %17%                                     00326000
         "NO USER"," DISK~00", %19%                                     00327000
         "DIRECTO","RY FULL~", %21%                                     00328000
         "NO MCP ","DISK~000", %23%                                     00329000
         "INVALD ","LINK~000", %25                                      00329100
         "LOCK QU","EUE FUL","L~00000", % 27                            00329200
0;%                                                                     00330000
$ OMIT   00332001, IF NOT DEBUGGING;                                    00330999
    REAL  DTCALL = DT;%                                                 00331000
    DEFINE DDT = POLISH ( DTCALL,DEL)#;%                                00332000
 ARRAY DALOC[*,*], DALOCROW=DALOC[*];                                   00333000
$INCLUDE 00334001,IF BREAKOUT;                                          00333099
ARRAY GRSD[*];   %RESTART SEGMENT DICTIONARIES                          00334000
 ARRAY MEMASK[8];%                                                      00335000
$ INCLUDE 00335201,IF AUXMEM;                                           00335099
 ARRAY   CTABLE[*];% 4 LONG, ENTRIES ARE 74 WORDS LONG                  00335100
 DEFINE  FTABLE[FTABLE1] = CTABLE[2+(FTABLE1)]#;                        00335200
 REAL OLAYMASK;%   FOR LOCKING OUT GETMOREOLAYDISK BY MIX INDEX         00336000
PROCEDURE USERDISKSPECIALCASE(Q,R,U,J);VALUE Q,J;REAL Q,R,J;            00336100
          ARRAY U[*]; FORWARD ;                                         00336110
 DEFINE BASE=30268#,%                                                   00338000
         CHUNKSIZE=500#;%                                               00339000
 REAL LEFTOFF;    COMMENT POINTER TO CYCLE FOR OLAY;%                   00341000
 SAVE PROCEDURE MESS(I); VALUE I; REAL I;%                              00342000
         BEGIN LABEL HA,HB,HC;%                                         00343000
              REAL TMB;                                                 00343100
      P(.I,LOD,0,INX,.I,~);M[1]~"MEM PAR";M[I]~FLAG(NABS(M[I]));%       00344000
         STREAM(A~18);%                                                 00345000
              BEGIN DS ~ 16 LIT "042(0000002(0000";%                    00346000
                3(DS~8 LIT"29290+JI");%                                 00347000
              DS ~ 32 LIT "0 2(00000U2(00000Y2(00000!2(0000";%          00348000
              12(SI ~ A; SI ~ SI+16; DS ~ 3 WDS);%                      00349000
              END;M[2]~NOT 0;%                                          00350000
         P(HP2);%                                                       00351000
         HA:  TMB ~ I&60[3:42:6];%                                      00352000
              P([TMB],IIO);%                                            00353000
         HB:  DO IF (TMB ~ RESULT) = 0 THEN%                            00354000
                   BEGIN P(RESULT,DEL); GO TO HA END%                   00355000
              UNTIL (*TMB).[3:6] = @74;%                                00356000
              IF (*TMB) .[18:15] ! 0 THEN GO TO HA;%                    00357000
              IF (TMB ~ (*TMB).[33:15]) < I THEN GO TO HB;%             00358000
              IF TMB-10 > I THEN GO TO HB;%                             00359000
         HC:  GO TO HC;%                                                00360000
         END;%                                                          00361000
 DEFINE PUNT=MESS#;%                                                    00362000
 SAVE PROCEDURE DISKRTN(SEGNO, SIZE);                                   00363000
    VALUE     SEGNO, SIZE;                                              00363100
    INTEGER   SEGNO, SIZE;                                              00363200
         FORWARD;                                                       00363300
PROCEDURE FORGETESPDISK(SEG);VALUE SEG;REAL SEG;FORWARD;                00364000
SAVE INTEGER PROCEDURE DISKSPACE(NWORDS,P1MIX,AUX);%                    00365000
    VALUE NWORDS,P1MIX,AUX;                                             00366000
    INTEGER NWORDS,P1MIX;REAL AUX;                                      00367000
              FORWARD;%                                                 00368000
 PROCEDURE STATUS;%                                                     00369000
         FORWARD;%                                                      00370000
PROCEDURE INTERRUPT(TYPE);VALUE TYPE;REAL TYPE; FORWARD;                00370500
REAL PROCEDURE FINDOUTPUT(MID,FID,TYPE,FORMS,REEL,CDATE,CYCLE,KIND);%   00371000
            VALUE MID,FID,TYPE,FORMS,REEL,CDATE,CYCLE,KIND;%            00372000
            REAL  MID,FID,TYPE,FORMS,REEL,CDATE,CYCLE,KIND; FORWARD;%   00373000
REAL PROCEDURE FINDINPUT(MID,FID,REEL,CDATE,CYCLE,COBOL,UL,OF,MODE,FN); 00374000
            VALUE MID,FID,REEL,CDATE,CYCLE,COBOL,UL,OF,MODE,FN;%        00375000
            REAL  MID,FID,REEL,CDATE,CYCLE,COBOL,UL,OF,MODE,FN; FORWARD;00376000
PROCEDURE STARTIMING(FN,U); VALUE FN,U; REAL FN,U; FORWARD;%            00377000
    PROCEDURE SPOUT(M); VALUE M; REAL M; FORWARD;                       00378000
 PROCEDURE FILEOPEN(X,A); VALUE X,A; INTEGER X,A; FORWARD;              00379000
 SAVE PROCEDURE SAVEOPEN(A); VALUE A; REAL A;                           00379100
         BEGIN FILEOPEN(2,A) END;                                       00379200
PROCEDURE MIXPRINT(Q); VALUE Q; REAL Q; FORWARD;                        00379400
% TYPES <JOB SPECIFIERS> FOR EACH ACTIVE MIX INDEX                      00379500
PROCEDURE JOBMESS(MIX,Q,A,B,C,D);VALUE MIX,Q,A,B,C,D;                   00379600
    REAL MIX,Q,A,B,C,D; FORWARD;                                        00379700
PROCEDURE SETNOTINUSE(U,RWL); VALUE U,RWL; REAL U,RWL; FORWARD;         00380000
DEFINE STOPTIMING=STARTIMING#;                                          00382000
PROCEDURE FILEMESS(I,K,M,F,R,D,C); VALUE I,K,M,F,R,D,C;%                00383000
                                   REAL  I,K,M,F,R,D,C; FORWARD;%       00384000
PROCEDURE FILLBUFFERS(CURRENT,FINAL,NF,NR); VALUE CURRENT,FINAL,NF,NR;% 00385000
            REAL CURRENT,FINAL,NF,NR; FORWARD;%                         00386000
DEFINE GETBUFFERS=FILLBUFFERS#;                                         00387000
 PROCEDURE REALFILECLOSE(A); VALUE A; REAL A; FORWARD;                  00389000
 SAVE PROCEDURE FILECLOSE(A); VALUE A; REAL A;                          00389100
          BEGIN REALFILECLOSE(A) END;                                   00389200
REAL PROCEDURE DISKADDRESS(MID,FID,A,H,IO);                             00390000
    VALUE MID,FID,A,H,IO;                                               00390100
    REAL MID,FID,A,IO; ARRAY H[*];                                      00390200
      FORWARD;%                                                         00391000
PROCEDURE BLASTQ(U); VALUE U; REAL U; FORWARD;%                         00392000
REAL PROCEDURE FILEHEADER(MID,FID,NROWS,SIZE,BLEN,RLEN,S);%             00393000
                  VALUE   MID,FID,NROWS,SIZE,BLEN,RLEN,S;%              00394000
                  REAL    MID,FID;%                                     00395000
                  INTEGER         NROWS,SIZE,BLEN,RLEN,S; FORWARD;%     00396000
PROCEDURE PURGEIT(U); VALUE U; INTEGER U; FORWARD;%                     00397000
REAL ESPTAB,ESPCOUNT;                                                   00399000
REAL DIRDSK=@177;                                                       00400500
REAL ESPDISKBOTTOM; % LOWEST ADDRESS OF ESPDISK                         00401000
REAL ESPDISKTOP; % HIGHEST ADDRESS OF ESPDISK                           00401100
 REAL  MESSAGEHOLDER;%                                                  00402000
    DEFINE USEDRA = OPTION.[47:1]#,%                                    00403000
         USEDRB = OPTION.[46:1]#,%                                      00404000
         BOJMESS     =OPTION.[45:1]#,%                                  00405000
         EOJMESS     =OPTION.[44:1]#,%                                  00406000
         OPNMESS     =OPTION.[43:1]#,%                                  00407000
         TERMGO    =OPTION.[42:1]#,%                                    00408000
              GIVEDATE = OPTION.[41:1]#,%                               00409000
              GIVETIME = OPTION.[40:1]#,%                               00410000
    SAMEBREAKTAPE=OPTION.[39:1]#,%                                      00411000
         AUTOPRINT = OPTION.[38:1]#,%                                   00412000
              CLEARWRS=OPTION.[37:1]#,                                  00413000
              NOTIFYOP=OPTION.[36:1]#,%                                 00414000
              DISCONDC = OPTION.[36:1]#,                                00414100
              COPNMESS=OPTION.[35:1]#,%                                 00415000
              CLOSEMESS=OPTION.[34:1]#,%                                00416000
              RETMSG=OPTION.[32:1]#,                                    00416100
              LIBMSG=OPTION.[31:1]#,                                    00416200
              SCHEDMSG=OPTION.[30:1]#,                                  00416300
              SECMSG=OPTION.[29:1]#,                                    00416400
              DSKTOG=OPTION.[28:1]#,                                    00416500
      RELTOG=OPTION.[27:1]#,                                            00416520
              PBDREL=OPTION.[26:1]#,                                    00416550
              CHECKLINK = OPTION.[25:1]#,                               00416560
              DISKMSG=OPTION.[24:1]#,                                   00416570
              USEPBD=OPTION.[21:1]#,%                                %DS00416600
              SVPBT =OPTION.[20:1]#,%                                   00416610
              RSTOG=OPTION.[19:1]#,                                     00416620
              AUTOUNLD=OPTION.[18:1]#,                                  00416630
              RNALL=OPTION.[17:1]#,                                     00416710
              CODEOLAY=OPTION.[16:1]#,                                  00416730
              COREST=OPTION.[15:1]#,                                    00416740
              DATAOLAY=OPTION.[14:1]#,                                  00416750
         MOD3IOS=OPTION.[2:1]#,                                         00416990
         XXXXXX= OPTION.[0:0]#;%                                        00417000
REAL USERDISKBOTTOM;                                                    00418000
    % DISK ADDRESS OF USER DISK AVAILABLE TABLE                         00418010
REAL DIRECTORYTOP;                                                      00418050
    % DISK ADDRESS OF DIRECTORYTOP SEGMENT--STORED IN M[1]              00418060
    %BY MCP LOADER AND STORED IN MCP PRT(DIRECTORYTOP)                  00418070
         DEFINE NOWAITOG=FALSE#;%     ***** K L U D G E *****           00418100
DEFINE HOLDMAX=30#; % MAXIMUM NUMBER OF ENTRIES IN HOLDLIST             00418200
$ INCLUDE 00418901, IF SHAREDISK;                                       00418799
COMMENT HOLDER, NEXTSLOT, AND BYPASS ARE KEPT IN THE FIRST THREE        00418800
        WORDS OF THE DISK SEGMENT LOCATED AT DIRECTORYTOP+".            00418805
        THEY ARE READ DIRECTLY INTO THE PRT WHEN THE DIRECTORY          00418810
        IS LOCKED AND WRITTEN BACK WHEN THE DIRECTORY IS UNLOCKED.      00418815
END COMMENT;                                                            00418820
REAL KLUDGE; % RESERVES SPACE FOR DISK ADDRESS                          00418900
COMMENT THE HOLDLIST CONTAINS A ONE WORD ENTRY FOR EACH PROCESS         00418910
        THAT IS WAITING TO USE A FILE THAT IS ALREADY IN USE.           00418915
             HOLDLIST[I].[FF]=THE CORE ADDRESS OF THE WORD THAT THE     00418920
                  WAITING PROCESS IS SLEEPING ON.                       00418925
             HOLDLIST[I].[CF]=THE DISK ADDRESS OF THE FILE HEADER       00418930
                  THAT IS BEING WAITED FOR.                             00418935
             HOLDLIST[I].[2:2]=THE SYSTEM NUMBER (SYSNO) OF THE SYSTEM  00418940
                  THAT MADE THE ENTRY (SHAREDISK ONLY).                 00418945
             HOLDLIST[I].[1:1] IS SET BY A SYSTEM TO NOTIFY ANOTHER     00418950
                 SYSTEM TO AWAKEN THE PROCESS THAT MADE THE ENTRY.      00418955
                 THE NSECOND ROUTINE EXAMINES THE HOLDLIST IN           00418960
                 ORDER TO CHECK FOR THIS CONDITION (SHAREDISK ONLY).    00418965
        DIRECTORYSEARCH, NSECOND, AND CLEANOUT ARE THE PROCEDURES       00418970
        THAT MANIPULATE THE HOLDLIST.                                   00418975
END COMMENT;                                                            00418980
REAL HOLDER; % HOLDER.[CF]=DISK ADDRESS OF HOLDLIST                     00419000
                 % HOLDER.[FF]=NUMBER OF ENTRIES IN HOLDLIST            00419005
REAL NEXTSLOT; % NEXT AVAILABLE SPACE IN DIRECTORY                      00419010
REAL BYPASS,DISKBOTTOM;                                                 00419020
INTEGER RESTARTING;   %PASSLEVEL CONTROL   (RS)                         00419100
$INCLUDE 00419106, IF BREAKOUT AND AUXMEM;                              00419104
INTEGER BREAKING;                                                       00419105
DEFINE SCRAMBLE(SCRAMBLE1,SCRAMBLE2)=(-2|                               00419110
     ((SCRAMBLE1.[6:18]+SCRAMBLE1.[24:24]) MOD MODULUS|MODULUS+         00419120
      (SCRAMBLE2.[6:18]+SCRAMBLE2.[24:24]) MOD MODULUS) +               00419130
       DISKBOTTOM)#,                                                    00419140
      MODULUS=13#,  DIRMOD=169#;                                        00419150
COMMENT                                                                 00419210
         THE RELATIONSHIP BETWEEN MODULUS AND DIRMOD IS:                00419220
         DIRMOD := MODULUS | MODULUS, WHERE MODULUS IS A LOW            00419230
         ODD PRIME. (THE RECOMMENDED VALUE OF MODULUS IS 13).           00419240
         FOR SYSTEMS WITH ONLY 4 MEMORY MODS, MODULUS MUST BE           00419250
         SET TO A SMALLER VALUE SO THAT DIRECTORYBUILDER WILL           00419260
         NOT GET A NO-MEM, MAKING IT IMPOSSIBLE TO HALT/LOAD.           00419270
         IT IS SUGGESTED THAT MODULUS BE SET TO 11, DIRMOD TO 121       00419280
         FOR A SYSTEM WITH 4 MODS. IT MAY BE NECESSARY TO SET IT        00419290
         SMALLER, DEPENDING UPON DISK CONFIGURATION;                    00419300
ARRAY FS[*,*]; ARRAY FSROW=FS[*];                                       00419400
 ARRAY USERDISK[*];                                                     00419900
$ OMIT   00421001, IF NOT DEBUGGING AND NOT DUMP;                       00419999
ARRAY DBARRAY[*];                                                       00420000
    REAL DBADR;%                                                        00421000
DEFINE LOCKDIRECTORY=BEGIN SLEEP([DIRECTORYFREE],1);DIRECTORYFREE:=0;   00421100
$ INCLUDE 00421201, IF SHAREDISK;                                       00421199
         DISKWAIT(-POLISH(.HOLDER),-3,DIRECTORYTOP+2);                  00421200
    END#,                                                               00421300
    UNLOCKDIRECTORY=BEGIN                                               00421400
$ INCLUDE 00421501, IF SHAREDISK;                                       00421499
         DISKWAIT(POLISH(.HOLDER),-3,DIRECTORYTOP+2);                   00421500
         DIRECTORYFREE:=1 END#;                                         00421600
    REAL DIRECTORYFREE;%                                                00422000
REAL LOGFREE;                                                           00422500
    REAL IOMASK;%                                                       00424000
 REAL SAVEWORD;%                                                        00425000
REAL CORE;           %USED FOR SELECTION PURPOSES                       00426000
    COMMENT                                                             00426100
       CORE.[4:14] = MULTIPROCESSING FACTOR (|100)                      00426200
       CORE.[18:15] = SUM OF CORE ESTIMATES FOR ALL JOBS                00426300
                           NOW ACTIVE IN THE MIX (DIV 64)               00426400
       CORE.[33:15] = AMOUNT OF CORE MEMORY INITIALLY AVAILABLE FOR     00426500
                           PROCESSING NORMAL STATE JOBS (DIV 64);       00426600
 SAVE PROCEDURE SELECTRUN1; FORWARD;                                    00426700
 DEFINE SELECTION = INDEPENDENTRUNNER(P(.SELECTRUN1),0)#;               00426800
PROCEDURE CONTROLCARD(A);VALUE A;REAL A; FORWARD;%                      00427000
REAL  PROCEDURE  DIRECTORYSEARCH(A,B,C);VALUE A,B,C;%                   00428000
              REAL  A,B,C; FORWARD;%                                    00429000
 DEFINE HEADERUNLOCK=HU#,                                               00430000
        HU(HU1,HU2,HU3)=                                                00430100
         P(MKS,HU3,HU1,HU2,9,DIRECTORYSEARC,DEL)#;                      00430200
REAL DIRECTORYSEARC=DIRECTORYSEARCH;                                    00430225
   %%HEADERUNLOCK CAN BE USED TO WRITE IN THE DIRECTORY A CHANGED       00430250
   %%  HEADER, TURN OFF THE INTERLOCK BIT AND DO THE FORGETSPACE        00430275
   %%  IT MAY BE CALLED ONLY AFTER A DIRECTORYSEARCH(A,B,4)             00430300
   %% THE PARAMETERS PASSED MUST BE (A,B,DS);                           00430400
   %%  WHERE A,B ARE THE SAME AS PASSED TO THE DIRECTORYSEARCH          00430500
   %%   AND DS IS THE RESULT OF THAT DIRECTORYSEARCH                    00430600
REAL OLDIDLETIME;                                                       00430900
 PROCEDURE ARTN(A,N); VALUE A,N; ARRAY A[*]; INTEGER N; FORWARD;%       00431000
 SAVE PROCEDURE DISKWAIT(CORE,SIZE,DISK);                               00431100
         VALUE CORE,SIZE,DISK;                                          00431200
         REAL CORE,SIZE,DISK;                                           00431300
         FORWARD;                                                       00431400
 SAVE PROCEDURE DISKIO(L,C,S,D); VALUE C,S,D; REAL L; INTEGER C,S,D;%   00432000
         FORWARD;%                                                      00433000
 ARRAY OPTER[*];%                                                       00435000
 PROCEDURE OPSET;%                                                      00436000
         BEGIN REAL N;%                                                 00437000
              LABEL L,S;%                                               00438000
              GO TO S; P(.L);%                                          00439000
         L:::%                                                          00440000
              "DRA0", "0000",   %47%                                    00441000
              "DRB0", "0000",   %46%                                    00442000
              "BOJ0", "0000",   %45%                                    00443000
              "EOJ0", "0000",   %44%                                    00444000
              "OPEN", "0000",   %43%                                    00445000
              "TERM",  "NATE",  %42%                                    00446000
              "DATE",  "0000",  %41%                                    00447000
              "TIME",  "0000",  %40%                                    00448000
              "ONEB",  "REAK",  %39%                                    00449000
              "AUTO",  "PRNT",  %38%                                    00450000
              "CLEA",  "RWRS",  %37                                     00451000
$INCLUDE 00452001, IF DATACOM AND NOT INQUIRY;                          00451999
              "DISC",  "ONDC",  %36%                                    00452000
$INCLUDE 00452101, IF INQUIRY AND NOT DATACOM;                          00452099
              "TUWA",  "ITNG", %36                                      00452100
$OMIT    00452201, IF DATACOM OR INQUIRY;                               00452199
              "    ",  "    ",                                          00452200
              "CMPL",  "FILE",  %35%                                    00453000
              "CLOS",  "E000",  %34%                                    00454000
              "ERRO",   "RMSG",   %33%                                  00454100
              "RET0","0000",%32                                         00454200
              "LIBM","SG00",%31                                         00454300
              "SCHE","DMSG",%30                                         00454400
              "SECM","SG00",%29                                         00454500
              "DSKT","OG00",%28                                         00454600
              "RELT","OG00",%27                                         00454700
              "PBDR","EL00",%26                                         00454750
$INCLUDE 00454801, IF DEBUGGING OR CHECKLINK;                           00454799
              "CHEC","K000", %25                                        00454800
$OMIT 00454803, IF DEBUGGING OR CHECKLINK;                              00454801
              0,0,%25                                                   00454802
              "DISK","MSG0",%24                                         00454850
              "NOT ","USED", % 23 NOT USED                              00454860
              "NOT ","USED", % 22 NOT USED                              00454870
              "PBDO", "NLY0", %21                                    %DS00454880
              "SAVE", "PBT0", %20                                       00454890
              "RSMS","G000", %19                                        00454900
             "AUTO","UNLD", %18                                         00454910
              "RNAL","L000", %17                                        00454920
              "CODE","OLAY", %16                                        00454930
              "CORE","ST00", %15 STATISTICS JOB CORE ESTIMATE           00454940
              "DATA","OLAY", %14                                        00454950
              "NOT ","USED", %13 NOT USED                               00455000
              "NOT ","USED", %12 NOT USED                               00455100
              "NOT ","USED", %11 NOT USED                               00455200
              "NOT ","USED", %10 NOT USED                               00455300
              "NOT ","USED", %9  NOT USED                               00455400
              "OPTN", "0000",  %0%                                      00455990
              "~000",  "0000";  %STP%                                   00456000
         S:   N ~ (P(.OPSET,LOD).[8:9]-6) AND @77;                      00457000
              OPTER ~ [M[GETSPACE(N,0,0)+2]]&N[8:38:10];                00458000
              STREAM(S~P(.OPSET,LOD) INX 1, N, OPTER);                  00459000
              BEGIN SI ~ S;                                             00460000
                   N(SI~SI+4; DS~4 CHR; SI~SI+4; DS~4 CHR);             00461000
                   END;%                                                00462000
         END;%                                                          00463000
 PROCEDURE TERMINATE(MIX); VALUE MIX; REAL MIX; FORWARD;                00463100
 SAVE PROCEDURE TERMINALMESSAGE(N); VALUE N; REAL N; FORWARD;           00463200
BOOLEAN PROCEDURE SYSTEMFILE(A,B);VALUE A,B; REAL A,B; FORWARD;         00463300
 PROCEDURE COM5;   FORWARD;%                                            00469000
$INCLUDE 00471901, IF STATISTICS;                                       00469099
PROCEDURE FILLSYSTAT;FORWARD;                                           00469100
ARRAY UV[*,*];                                                          00469200
ARRAY UVROW=UV[*];                                                      00469250
DEFINE UVSIZE=16#;                                                      00469260
ARRAY LOGARRAY[*];                                                      00469300
PROCEDURE SAVESTATISTICS(FILE); VALUE FILE; REAL FILE; FORWARD;         00469400
PROCEDURE PSUEDOLOGENTRY(STATS); VALUE STATS;REAL STATS;                00469500
     FORWARD;                                                           00469600
DEFINE CODEPBITS[CODEPBITS1]=UV[CODEPBITS1,1]#,                    %R63 00469700
       DATAPBITS[DATAPBITS1]=UV[DATAPBITS1,2]#,                    %R63 00469800
       DATAOLAYS[DATAOLAYS1]=UV[DATAOLAYS1,3]#,                         00469900
       CODEOLAYS[CODEOLAYS1]=UV[CODEOLAYS1,4]#,                    %R63 00470000
       MORECPBITS[MORECPBITS1]=UV[MORECPBITS1,5]#,                      00470100
       PTSTAT[PTSTAT1]=UV[PTSTAT1,6]#,                                  00470200
       IOTSTAT[IOTSTAT1]=UV[IOTSTAT1,7]#,                               00470300
       CORESTAT[CORESTAT1]=UV[CORESTAT1,8]#,                            00470400
       EOJTSTAT[EOJTSTAT1]=UV[EOJTSTAT1,9]#,                            00470500
       BOJTSTAT[BOJTSTAT1]=UV[BOJTSTAT1,10]#,                           00470600
       FIDSTAT[FIDSTAT1]=UV[FIDSTAT1,11]#,                              00470700
       MFIDSTAT[MFIDSTAT1]=UV[MFIDSTAT1,12]#,                           00470800
        JOBTYPE[JOBTYPE1]=UV[JOBTYPE1,13]#,                             00470810
        MOREDPBITS[MOREDPBITS1]=UV[MOREDPBITS1,14]#,                    00470820
        OLAYUSED[OLAYUSED1]=UV[OLAYUSED1,15]#;                          00470830
DEFINE COUNTUP(COUNTUP1,COUNTUP2)=BEGIN COUNTUPBY(COUNTUP1,1);          00470900
       COUNTUPBY((COUNTUP1)+30,COUNTUP2) END#,                          00471000
       COUNTUPBY(COUNTUPBY1,COUNTUPBY2)=COUNTARRAY[COUNTUPBY1]:=        00471100
       *P(DUP)+(COUNTUPBY2)#;                                           00471200
DEFINE STLOGDH=STATWORD.[33:15]#,                                       00471210
       SYSTATBASE=STATWORD.[13:20]#,                                    00471220
       STATPOINTER=STATWORD.[1:1]#,                                     00471230
       STATLOCK=STATWORD.[2:1]#,                                        00471240
       PBUSY=STATWORD.[3:1]#;                                           00471250
ARRAY COUNTARRAY[*];                                                    00471300
ARRAY DISKWAITIME[*];                                                   00471400
REAL MCPTOP;                                                            00471500
REAL STATWORD;                                                          00471600
REAL MIXNUM;                                                            00471800
REAL INTERVAL;                                                          00471900
 PROCEDURE ASR;    FORWARD;%                                            00474000
 PROCEDURE COM11;  FORWARD;%                                            00475000
 PROCEDURE COM13;  FORWARD;%                                            00477000
 PROCEDURE COMMUNICATE;  FORWARD;                                       00478000
 PROCEDURE LIBRARYLOAD; FORWARD;                                        00479000
 PROCEDURE LIBRARYDUMP;  FORWARD;                                       00480000
 PROCEDURE COM19;  FORWARD;%                                            00483000
 PROCEDURE COM23; FORWARD;%                                             00487000
PROCEDURE INTRINSICTABLEBUILDER(FH);                                    00489000
     VALUE FH; REAL FH; FORWARD;                                        00490000
$INCLUDE 00599998, IF DATACOM OR INQUIRY;                               00499999
PROCEDURE INQUPT(T); VALUE T; REAL T; FORWARD;                          00500000
$INCLUDE 00699998, IF INQUIRY AND NOT DATACOM;                          00599999
PROCEDURE COM9; FORWARD;                                                00600000
PROCEDURE COM18; FORWARD;                                               00601000
REAL RDFDC;                                                             00602000
$INCLUDE 00799998, IF DATACOM AND NOT INQUIRY;                          00699999
PROCEDURE DCWRITE(S); VALUE S; REAL S; FORWARD;                         00700000
PROCEDURE DCREAD(S); VALUE S; REAL S; FORWARD;                          00701000
REAL PROCEDURE WHATSUP(STA,MIX,FUNC,ARAE);                              00702000
  VALUE STA,MIX,FUNC;                                                   00703000
  REAL STA,MIX,FUNC;                                                    00704000
  ARRAY ARAE[*]; FORWARD;                                               00705000
PROCEDURE SEEKACTION(STA,MIX,FUNC,IOD);                                 00706000
  VALUE STA,MIX,FUNC;                                                   00707000
  REAL STA,MIX,FUNC;                                                    00708000
  NAME IOD; FORWARD;                                                    00709000
DEFINE BASELINK=STATION[0,0]#,DCQARASIZ=16#,DCQARAMAX  = 15#;           00710000
REAL TUMAX,DCQPTSTACK;                                                  00711000
ARRAY ATTACHED[*],STATION[*,*],STATIONROW=STATION[*],                   00712000
  DCQARA[*];                                                            00713000
REAL STATIONMESSAGEHOLDER;                                              00713100
PROCEDURE STATIONMESSAGEWRITER(V); VALUE V; REAL V; FORWARD;            00713200
DEFINE EMPTYSMQ=(STATIONMESSAGEHOLDER INX 0=P(.STATIONMESSAGEHOLDER))#; 00713300
DEFINE RUNSMW=                                                          00713400
    BEGIN                                                               00713410
    IF NOT EMPTYSMQ THEN                                                00713420
         IF SMWSTOPPED THEN                                             00713430
              BEGIN                                                     00713440
              SMWSTOPPED~FALSE;                                         00713450
              INDEPENDENTRUNNER(P(.STATIONMESSAGEWRITER),0);            00713460
              END;                                                      00713470
    END;#;                                                              00713480
DEFINE STANOTINUSE =(                                                   00713500
    IF (STA := STACURR)<0 THEN                                          00713510
         NOT STA.[29:1]   ELSE                                          00713520
         (NOT(STA.[2:1] OR ((STA.[22:9] AND @552)!0)))                  00713530
                     )# ;                                               00713540
 REAL ARRAY USERSTA[*];                                                 00715000
SAVE REAL PROCEDURE GET(TUSTA); VALUE TUSTA; REAL TUSTA; FORWARD;       00716000
PROCEDURE STABLE(RD,S); VALUE RD,S; REAL RD,S; FORWARD;                 00717000
ARRAY TUSTABYMIX[*];                                                    00718000
$INCLUDE 00899998, IF DCSPO AND DATACOM AND NOT INQUIRY;                00799999
PROCEDURE MARKSPOSTA(STA,INOROUT); VALUE STA,INOROUT; REAL STA,INOROUT; 00800000
  FORWARD;                                                              00801000
REAL QV,                                                                00806000
  QVLEFT;                                                               00807000
ARRAY QTIMES[*];                                                        00808000
$INCLUDE 00909500, IF DCLOG AND DATACOM AND NOT INQUIRY;                00899999
PROCEDURE INITIALIZEDCFILES(A,DDD); VALUE A,DDD; ARRAY DDD[*];          00900000
  REAL A; FORWARD;                                                      00901000
PROCEDURE REMOTELOGGER(TYPE,RMCARD,STA,MIX); VALUE TYPE,RMCARD,STA,MIX; 00902000
  REAL TYPE,RMCARD,STA,MIX; FORWARD;                                    00903000
PROCEDURE UPDATEABORTLN(WHODIDIT); VALUE WHODIDIT; REAL WHODIDIT;       00904000
  FORWARD;                                                              00905000
REAL RQONE,RQTWO,REMOTEFILE,ABORTFILE; INTEGER ABORTSPEC;               00906000
INTEGER SEGLOC = REMOTEFILE;                                            00907000
DEFINE ABORTLNGTH = 34#,SIZABORT = [33:15]#,ABORTREC = [18:15]#;        00908000
REAL ARRAY ASIGNEDPROCTIME[*],ASIGNEDIOTIME[*],ASIGNEDIDLETIME[*];      00909000
$INCLUDE 00990001,IF INQUIRY AND NOT DATACOM;                           00989999
REAL CURRINQ,NEXTINQ,ORR,ORF,BUFFSIZE; ARRAY DCB[16];                   00990000
$INCLUDE 01028001, IF DFX;                                              00999999
 ARRAY EUQ[10] ~                                                    %DFX01000000
        @777777777777777,                                           %DFX01001000
        @777777777777777,                                           %DFX01002000
        @777777777777777,                                           %DFX01003000
        @777777777777777,                                           %DFX01004000
        @777777777777777,                                           %DFX01005000
        @777777777777777,                                           %DFX01006000
        @777777777777777,                                           %DFX01007000
        @777777777777777,                                           %DFX01008000
        @777777777777777,                                           %DFX01009000
        @777777777777777;                                           %DFX01010000
    COMMENT EUQ IS USED WITH THE REST OF THE IO QUEUE STRUCTURE, FOR%DFX01011000
         HANDLING AN EXCHANGE IN THE DISK-FILE SUBSYSTEM. IN THIS   %DFX01012000
   CASE, IO REQUESTS FOR DISK ARE HANDLED DIFFERENTLY. AFTER FINDING%DFX01013000
       A SLOT IN THE IOQ, THE EU NUMBER IS RETRIEVED FROM THE DISK- %DFX01014000
         ADDRESS WORD AND USED AS AN INDEX INTO EUQ, WHICH INDICATES%DFX01015000
         THE QUEUEIN~ STATUS OF THE EU.                             %DFX01016000
              EUQ[N] CONTAINS THE FOLLOWING FOR EU #N:              %DFX01017000
         [33:15] = TAIL OF QUEUE (IOQ INDEX) FOR THIS EU, IF WAITING%DFX01018000
                 = LU OF CONTROL CURRENTLY HANDLING EU N.           %DFX01019000
         [18:15] = HEAD OF QUEUE (IOQ INDEX).                       %DFX01020000
         [ 3:15] = NEXT EU WAITING FOR A CU (EUQ INDEX).            %DFX01021000
         [ 1: 1] = TRUE IFF THIS EU IS IN OPERATION.                %DFX01022000
              EUW IS USED TO QUEUE UP EUS WHICH ARE WAITING FOR A CU.   01024000
         [33:15] = TAIL OF WAITING-EU QUEUE (EUQ INDEX)             %DFX01025000
         [18:15] = HEAD "     "    "    "     "    "   ;            %DFX01026000
 REAL EUW;                                                          %DFX01027000
 INTEGER DISKOUNT;                                                  %DFX01028000
SAVE PROCEDURE COMPLEXSNOOZE(PRI,CODE); VALUE PRI; REAL PRI,CODE;       01240000
    BEGIN SNOOZE(PRI,1,P(.CODE,LOD)); END;                              01240100
DEFINE COMPLEXSLEEP(COMPLEXSLEEP1)=COMPLEXSNOOZE(PRYOR[P1MIX],          01240200
          COMPLEXSLEEP1)#;                                              01240300
PROCEDURE USASITAPE(AREA,TYPE,FROM,U,DIR);               %RHR           01250100
         VALUE AREA,FROM,U,DIR; REAL AREA,TYPE,FROM,U,DIR;              01250200
BEGIN REAL PTN,Y;                                                       01250300
      ARRAY ULAB[*];                                                    01250400
      LABEL EXIT,ERROR,VOL,BAD,WAIT,TIP,ETIP;                           01250500
    SUBROUTINE LABELSPACE;                                              01250600
         BEGIN ULAB:=[M[SPACE(11)]]&10[8:38:10];                        01250700
               MOVE(10,ULAB.[CF]-1,ULAB.[CF]);                          01250800
         END LABELSPACE;                                                01250900
    SUBROUTINE VOL1FILL;                                                01251000
         BEGIN STREAM(AREA,ULAB);                                       01251100
               BEGIN DS:=8 LIT " LABEL  "; DI:=DI+1; SI:=AREA;          01251200
                     SI:=SI+11; DS:=7 CHR; DI:=DI+37; %MID              01251300
                     SI:=AREA; SI:=SI+5; DS:=5 CHR; %PHYSICAL TAPE NO.  01251400
               END;                                                     01251500
         END VOL1FILL;                                                  01251600
    SUBROUTINE HDR1CHK;                                                 01251700
         BEGIN STREAM(Y:=0:AREA,X:=0);                                  01251800
               BEGIN DI:=LOC X; DS:=4 LIT "HDR1";                       01251900
                     SI:=AREA; DI:=LOC X;                               01252000
                     IF 4 SC=DC THEN TALLY:=1;                          01252100
                     Y:=TALLY;                                          01252200
               END;                                                     01252300
               Y:=P;                                                    01252350
         END HDR1CHK;                                                   01252400
    SUBROUTINE HDR1FILL;                                                01252500
         BEGIN STREAM(AREA,ULAB);                                       01252600
               BEGIN SI:=AREA; SI:=SI+4;                                01252700
                     DI:=DI+17; DS:=7 CHR; %FID                         01252800
                     SI:=SI+17; DS:=3 CHR; %REEL                        01252900
                     SI:=SI+11; DS:=5 CHR; %C-DATE                      01253000
                     SI:=SI-8; DS:=2 CHR; %CYCLE                        01253100
                     SI:=SI+7; DS:=5 CHR; %P-DATE                       01253200
                     DI:=DI+1; SI:=SI+2;                                01253300
                     DS:=5 CHR; %BLOCK COUNT                            01253400
                     DS:=7 CHR; %RECORD COUNT                           01253500
               END;                                                     01253600
         END HDR1FILL;                                                  01253700
    SUBROUTINE HARDFILL;                                                01253800
         BEGIN PTN:=PRNTABLE[U].[30:18];                                01253900
               STREAM(PTN,AREA,ULAB);                                   01254000
               BEGIN SI:=LOC PTN; DI:=DI+53;                            01254100
                     DS:=5 DEC; DI:=ULAB; %PHYSICAL TAPE NO.            01254200
                     DS:=8 LIT " LABEL  ";                              01254300
               END;                                                     01254600
               ULAB[1]:=MULTITABLE[U];                                  01254650
         END HARDFILL;                                                  01254700
    LABELSPACE;                                                         01254800
    IF FROM=1 THEN                                                      01254900
         BEGIN VOL1FILL;                                                01255000
               P(WAITIO(@140000005,@377,U),DEL);                        01255100
               P(WAITIO(AREA INX @120540000000,@377,U),DEL);            01255200
               HDR1CHK;                                                 01255300
               IF Y THEN HDR1FILL ELSE GO TO ERROR;                     01255400
               P(WAITIO(@340000005,@55,U),DEL);                         01255450
               P(WAITIO(@340000005,@55,U),DEL);                         01255500
               GO TO WAIT;                                              01255600
         END;                                                           01255700
    IF FROM =2 THEN                                                     01255800
         BEGIN IF TYPE=1 THEN                                           01255900
              BEGIN VOL1FILL;                                           01256000
    VOL:            P(WAITIO(AREA INX @120540000000,@377,U),DEL);       01256100
                    HDR1CHK;                                            01256200
                    IF Y THEN HDR1FILL ELSE GO TO ERROR;                01256300
                    P(WAITIO(@340000005,@377,U),DEL);                   01256400
                    GO TO WAIT;                                         01256500
              END;                                                      01256600
               IF TYPE=2 THEN                                           01256700
              BEGIN HDR1FILL;                                           01256800
                    HARDFILL;                                           01256900
                    GO TO EXIT;                                         01257000
              END;                                                      01257100
         END;                                                           01257200
    IF FROM=3 OR FROM=4 THEN                                            01257300
         BEGIN IF TYPE=1 THEN                                           01257400
              BEGIN VOL1FILL;                                           01257500
                    GO TO VOL;                                          01257600
              END;                                                      01257700
              IF TYPE=2 OR TYPE=4 THEN                                  01257800
              BEGIN HDR1FILL;                                           01257900
                    HARDFILL;                                           01258000
                    GO TO EXIT;                                         01258100
              END;                                                      01258200
              IF TYPE=3 OR TYPE=5 THEN                                  01258300
              BEGIN IF DIR=0 THEN                                       01258400
                   BEGIN P(WAITIO(@340000005,@377,U),DEL);              01258500
                         P(WAITIO(@340000005,@377,U),DEL);              01258600
                         P(WAITIO(AREA INX @120540000000,@377,U),DEL);  01258700
                   END ELSE                                             01258800
                         P(WAITIO(AREA INX @120740000000,@377,U),DEL);  01258900
                   HDR1CHK;                                             01259000
                   IF Y THEN HDR1FILL ELSE GO TO ERROR;                 01259100
                   HARDFILL;                                            01259200
                   GO TO WAIT;                                          01259300
              END;                                                      01259400
              IF TYPE=6 THEN                                            01259500
                   BEGIN HDR1FILL;                                      01259600
                         HARDFILL;                                      01259700
                         STREAM(ULAB);                                  01259800
                         BEGIN DI:=ULAB; DI:=DI+39;                     01259900
                               DS:=1 LIT "1";                           01260000
                         END;                                           01260100
                         GO TO EXIT;                                    01260200
                   END;                                                 01260300
         END;                                                           01260400
    WAIT:     PTN:=0;                                                   01260425
    TIP:      IF((TWO(U) AND P(RRR)) !0) THEN                           01260450
              GO TO EXIT ELSE SLEEP([CLOCK], NOT CLOCK);                01260455
              PTN:=PTN+1;                                               01260460
              IF(PTN>120)THEN GO TO EXIT ELSE GO TO TIP;                01260465
    ERROR:    P(WAITIO(@4200000000,@377,U),DEL);                        01260500
              STREAM(T:=TINU[U],ULAB);                                  01260600
                   BEGIN SI:=LOC T; SI:=SI+5;                           01260700
                         DS:=LIT "#"; DS:=3 CHR;                        01260800
                         DS:=22 LIT " INVALID USASI,  RW/L~";           01260900
                    END;                                                01261000
              SPOUT(ULAB); LABELTABLE[U]:=@314;                         01261100
              TYPE~0; PTN~0;                                            01261150
    ETIP:     IF((TWO(U) AND P(RRR)) !0) THEN                           01261160
              GO TO BAD ELSE SLEEP([CLOCK], NOT CLOCK);                 01261170
              PTN~PTN+1;                                                01261180
              IF(PTN>120) THEN GO TO BAD ELSE GO TO ETIP;               01261200
    EXIT:     MOVE(10,ULAB.[CF],AREA.[CF]);                             01261300
              FORGETSPACE(ULAB.[CF]);                                   01261400
    BAD:                                                                01261450
END USASITAPE;                                  %RHR                    01261500
SAVE PROCEDURE SNOOZE(NEWPRI,ADDRESS,MASK);                             02000000
         VALUE NEWPRI, ADDRESS, MASK;                                   02001000
         REAL NEWPRI;                                                   02002000
         NAME ADDRESS;                                                  02002500
         ARRAY MASK[*];                                                 02003000
         BEGIN                                                          02004000
              REAL TRYHERE=NT1;                                         02004500
              LABEL BEDENTER;                                           02004900
              IF(JOBNUM~JOBNUM+2)}JOBNUMAX THEN PUNT([PUNTER[17]]);     02005000
         PRYOR[P1MIX].[FF]~ NEWPRI~ NEWPRI+1;                           02006000
              FOR TRYHERE~JOBNUM STEP -2 UNTIL 2 DO                     02007100
                   BEGIN                                                02007200
         IF PRYOR[(BED[TRYHERE]~BED[TRYHERE-2]).[3:5]].[FF]             02007300
                   { NEWPRI THEN GO TO BEDENTER;                        02007400
                   BED[TRYHERE+1] ~ BED[TRYHERE-1];                     02007500
                   END;                                                 02007600
              BEDENTER:                                                 02008000
              BED[TRYHERE] ~ P(ADDRESS & P1MIX[3:43:5], RDF);           02008100
              BED[TRYHERE+1] ~ MASK;                                    02008200
              PROCTIME[P1MIX] ~ *P(DUP) + P(RTR) + CLOCK;               02008300
              GO TO NOTHINGTODO;                                        02008400
         END SLEEP;                                                     02009000
 SAVE PROCEDURE INDEPENDENTRUNNER(ROUTINE,PARAMETER);%                  02012000
         VALUE ROUTINE,PARAMETER;%                                      02013000
         ARRAY PARAMETER[*];%                                           02014000
         REAL ROUTINE;%                                                 02015000
         BEGIN LSLATE:= LSLATE+2 AND SLATEND;%                          02016000
              IF NSLATE = LSLATE THEN PUNT([PUNTER[15]]);%              02017000
              SLATE[LSLATE] ~ PARAMETER;%                               02018000
              SLATE[LSLATE+1] ~ ROUTINE;%                               02019000
         END;%                                                          02020000
REAL KEYBOARDCOUNTER;                                                   02020500
 REAL PROCEDURE KEYIN(B); VALUE B; BOOLEAN B;  FORWARD;%                02021000
$ INCLUDE 02021431, IF DCSPO AND DATACOM AND NOT INQUIRY;               02021099
BOOLEAN PROCEDURE SMGAMES(MIX,STA,WHICHWAY);                            02021100
    VALUE MIX,STA,WHICHWAY; REAL MIX,STA,WHICHWAY;                      02021110
    BEGIN                                                               02021120
    ARRAY ARA[*];                                                       02021130
    REAL SIZE,I;                                                        02021140
    LABEL EGG,EXIT;                                                     02021150
    DEFINE MASK=@757#;                                                  02021160
    SMGAMES~ FALSE;                                                     02021161
    IF (STA~GET(STA)).[9:4]!STA.[4:4] OR STA.[18:4]!STA.[14:4] THEN     02021165
         STA~ STA.[9:9] AND MASK                                        02021170
    ELSE                                                                02021175
         GO EXIT;                                                       02021176
    IF STA=0 THEN GO EXIT;                                              02021177
    IF P(ATTACHED[MIX],TOP) THEN                                        02021180
         BEGIN                                                          02021190
         P(DEL);                                                        02021200
         END                                                            02021220
    ELSE                                                                02021230
         BEGIN                                                          02021240
         ARA~ P;                                                        02021250
         SIZE ~ ARA.[8:10];                                             02021260
         FOR I~(SIZE-1) STEP -1 UNTIL 0 DO                              02021270
              BEGIN                                                     02021280
              IF(ARA[I].[39:9] AND MASK)=STA THEN                       02021290
                   BEGIN ARA[I].[43:1]~WHICHWAY; GO EGG END;            02021300
              IF(ARA[I].[30:9] AND MASK)=STA THEN                       02021310
                   BEGIN ARA[I].[34:1]~WHICHWAY; GO EGG END;            02021320
              IF(ARA[I].[21:9] AND MASK)=STA THEN                       02021330
                   BEGIN ARA[I].[25:1]~WHICHWAY; GO EGG END;            02021340
              IF(ARA[I].[12:9] AND MASK)=STA THEN                       02021350
                   BEGIN ARA[I].[16:1]~WHICHWAY; GO EGG END;            02021360
              IF(ARA[I].[03:9] AND MASK)=STA THEN                       02021370
                   BEGIN ARA[I].[07:1]~WHICHWAY; GO EGG END;            02021380
              END;                                                      02021390
         END;                                                           02021410
    GO EXIT;                                                            02021420
EGG:     SMGAMES~ TRUE;                                                 02021422
EXIT:                                                                   02021424
    END;                                                                02021430
 BOOLEAN PROCEDURE WHYSLEEP(MASK); VALUE MASK; REAL MASK; FORWARD;%     02022000
 LABEL P1PROCESS,P2PROCESS;%                                            02023000
 REAL ONEOHONE = @101,ONEOHTWO = @102;%                                 02024000
 SAVE PROCEDURE RUN(MIX); VALUE MIX; REAL MIX;%                         02025000
         BEGIN P1MIX ~ MIX;%                                            02026000
              PROCTIME[MIX] ~ *P(DUP)-P(RTR)-CLOCK;%                    02027000
              STACKUSE ~ TRUE;%                                         02028000
              GO TO EXTERNAL;%                                          02029000
         END;%                                                          02030000
 REAL NUMESS;%                                                          02031000
 SAVE PROCEDURE SAVEMIX(MIX); VALUE MIX; REAL MIX;%                     02032000
         BEGIN INDEPENDENTRUNNER(P(.RUN),MIX);%                         02033000
              PROCTIME[MIX] ~ *P(DUP)+P(RTR)+CLOCK;%                    02034000
         END;%                                                          02035000
 SAVE PROCEDURE HALT;%                                                  02036000
         BEGIN NOPROCESSTOG ~ NOPROCESSTOG+1;%                          02037000
              IF P2MIX > 0 THEN%                                        02038000
                   BEGIN P(HP2);%                                       02039000
                        SLEEP(1,1);%                                    02040000
                        IF P2MIX > 0 THEN%                              02041000
                             BEGIN SAVEMIX(P2MIX);%                     02042000
                                  P2MIX~0; TOGLE~TOGLE AND NOT HP2MASK; 02043000
                             END;%                                      02044000
                   END;%                                                02045000
         END;%                                                          02046000
 SAVE PROCEDURE KILL(A); VALUE A; ARRAY A[*];%                          02047000
         BEGIN P(64,STS);%                                              02048000
              FORGETSPACE(A);%                                          02049000
              GO TO NOTHINGTODO;%                                       02050000
         END;%                                                          02051000
 SAVE PROCEDURE IOERR(U); VALUE U; REAL U; FORWARD;%                    02052000
REAL PBCOUNT;                                                           02052200
 SAVE REAL PROCEDURE OLAY(LOC); VALUE LOC; INTEGER LOC; FORWARD;        02052500
PROCEDURE SEEKNAM(A,B,C,D,E,N); VALUE A,B;REAL A,B,C,D,E,N; FORWARD;    02052600
PROCEDURE UNHOOQUE(MIX);%                                               02053000
              VALUE MIX;%                                               02054000
              INTEGER MIX;%                                             02055000
    BEGIN%                                                              02056000
         REAL U,S,SN,T,X,I,PROCE;%                                      02057000
         LABEL DOLP;%                                                   02058000
              FOR U~0 STEP 1 UNTIL 31 DO%                               02059000
                   BEGIN%                                               02060000
                        IF(S~UNIT[U].[FF])!@77777 THEN                  02061000
                        BEGIN%                                          02062000
                             WHILE (SN~LOCATQUE[S].[FF])!@77777 DO%     02063000
                             BEGIN IF (T~NFLAG(LOCATQUE[SN])).[3:5] =%  02064000
                                       MIX THEN%                        02065000
                                  IF LOCATQUE[SN].[11:1] THEN S~SN ELSE 02065100
                                  BEGIN%                                02066000
                                       LOCATQUE[S]~LOCATQUE[S]&T[FTF];% 02067000
                                       IOQUE[SN] ~ IOQUEAVAIL;%         02068000
                                       IOQUEAVAIL ~ SN+1;%              02069000
                                  END                          ELSE%    02070000
                                  S~SN;%                                02071000
                             END%                                       02072000
                        END%                                            02073000
                   END;%                                                02074000
    DOLP:     FOR U~0 STEP 1 UNTIL 31 DO%                               02075000
                   BEGIN%                                               02076000
                        IF (S~(T~UNIT[U]).[FF])!@77777 THEN             02077000
                        BEGIN%                                          02078000
                             IF LOCATQUE[S].[3:5]=MIX THEN%             02079000
                             BEGIN%                                     02080000
                                  IF (X~T.[13:5])=0 OR X=16 THEN%       02081000
                                  BEGIN%                                02082000
                                       UNIT[U]~T&(LOCATQUE[S])[FTF];%   02083000
                                       IOQUE[S]~IOQUEAVAIL;%            02084000
                                       IOQUEAVAIL~S+1;%                 02085000
                                  END                      ELSE%        02086000
                                  IF X=4 THEN%                          02087000
                                  BEGIN%                                02088000
                                       IF LOCATQUE[S].[FF]=@77777 THEN% 02089000
                                       BEGIN%                           02090000
                                            I~FIRSTWAIT;%               02091000
                                            WHILE WAITQUE[I]!U%         02092000
                                            DO I ~ I+1 AND 31;%         02093000
                                            WAITQUE[I]~%                02094000
                                            WAITQUE[NEXTWAIT~NEXTWAIT%  02095000
                                                 +31 AND 31];%          02096000
                                            UNIT[U]~T&@77777[13:28:20]; 02097000
                                            IOQUE[S]~IOQUEAVAIL;%       02098000
                                            IOQUEAVAIL~S+1;%            02099000
                                  END       END             ELSE%       02100000
                                  PROCE~((U!23 AND U!24) OR X=3)        02101000
                                         AND X!25 OR PROCE;             02101100
                             END%                                       02102000
                        END%                                            02103000
                   END       ;%                                         02104000
              IF PROCE THEN%                                            02105000
                   BEGIN%                                               02106000
                        SLEEP(1,1);PROCE~0;GO TO DOLP%                  02107000
                   END;%                                                02108000
    END UNHOOQUE;%                                                      02109000
INTEGER TERMIX;%                                                        02110000
REAL PROCEDURE GETESPDISK;FORWARD;%                                     02111000
 REAL CCTOG,READERA,READERB;                                            02112000
SAVE PROCEDURE STARTIO(U);VALUE U;REAL U;FORWARD;%                      02113000
 PROCEDURE MESSAGEWRITER;%                                              02114000
         BEGIN REAL RCW=+0;%                                            02115000
              REAL T=+1;%                                               02116000
              LABEL L;%                                                 02117000
              P(GETSPACE(64, 12,0)+1,STS,RCW,0,RDS,0,XCH,CFX,STF,0);    02118000
              STACKUSE ~ TRUE;%                                         02119000
$INCLUDE 02119016, IF DCSPO AND DATACOM AND NOT INQUIRY;                02119009
L:            IF NOT M[MESSAGEHOLDER] THEN                              02119010
                   SLEEP([M[MESSAGEHOLDER]],1);                         02119015
$OMIT 02119021, IF DCSPO;                                               02119019
L:                                                                      02119020
              P(WAITIO(MESSAGEHOLDER INX 1,0,25));                      02120000
              P(DEL);%                                                  02121000
                NUMESS ~ NUMESS-1;%                                     02122000
              T ~ M[MESSAGEHOLDER].[18:15];                             02123000
                   FORGETSPACE(MESSAGEHOLDER INX 1);                    02124500
              IF T ! 0 THEN%                                            02125000
                   BEGIN MESSAGEHOLDER.[33:15] ~ T;%                    02126000
                        GO TO L%                                        02127000
                   END;%                                                02128000
              MESSAGEHOLDER ~ 0;%                                       02129000
              KILL([RCW]);%                                             02130000
         END;%                                                          02131000
$ INCLUDE 02131999, IF DCSPO AND DATACOM AND NOT INQUIRY ;              02131005
    REAL SPOWORD;                                                       02131010
$ INCLUDE 02131013, IF RJE;                                             02131011
PROCEDURE TWXOUT(A,B,C,D); VALUE A,B,C,D; REAL A,B,C,D; FORWARD;        02131012
PROCEDURE SET(TUSTA);VALUE TUSTA; REAL TUSTA; FORWARD;                  02131016
PROCEDURE TACH(A,B,C);VALUE A,B; REAL A,B,C;FORWARD;                    02131017
PROCEDURE SPOSIN(STA,FUNC,BUFF); VALUE STA,FUNC,BUFF;REAL STA,FUNC,BUFF;02131020
    BEGIN                                                               02131025
    COMMENT   FUNC=0    US    TURN OFF STATION AS A SPO                 02131030
              FUNC=1    BS    TURN ON STATION AS A SPO                  02131035
              FUNC=2    ZZ,LO IF YOU LOG OUT A SPO, YOU LOSE IT         02131040
              FUNC=3    SC    TYPE SPO CONSOLES;                        02131045
    DEFINE    F= SPOWORD.[12:9]#,                                       02131060
              C= SPOWORD.[21:9]#,                                       02131065
              D= SPOWORD.[30:9]#,                                       02131070
              E= SPOWORD.[39:9]#;                                       02131075
    DEFINE S= SPOWORD#;                                                 02131076
    DEFINE THESPO=SPOWORD}0#;                                           02131080
    REAL B,RD,OK;                                                       02131090
    STA ~ GET (STA) AND @7570000000000;                                 02131092
    IF FUNC<3 THEN                                                      02131095
         BEGIN                                                          02131100
         SLEEP([TOGLE],HOLDMASK); HOLDFREE~ FALSE;                      02131105
         B~ GETSPACE(30,0,0)+2;                                         02131110
         DISKIO(RD,1-B,-30,DIRECTORYTOP-SYSNO);                         02131115
         END;                                                           02131120
    IF FUNC=3 THEN                                                      02131125
         BEGIN                                                          02131130
         B~ GETSPACE(10,0,0)+2;                                         02131135
         STREAM(T1~THESPO,T2~                      S.[12:4],T5~S.[17:4],02131140
                   T6~S.[21:4],T7~S.[26:4],T8~S.[30:4],T9~S.[35:4],     02131145
                   T10~S.[39:4],T11~S.[44:4],Z~B);                      02131150
              BEGIN                                                     02131155
              DS~ 18 LIT "SPO CONSOLES ARE: ";                          02131160
              T1(DS~ 4 LIT "SPO ");                                     02131170
              SI~ LOC T2;                                               02131175
              4(T1~ DI; DS~ 2DEC; DS~ LIT "/"; DS~ 2 DEC; DS~ LIT " ";  02131180
                   T2~ DI; DI~ T1; DS~ 5 FILL; DI~ T2);                 02131185
              DS~ LIT "~";                                              02131190
              END;                                                      02131195
         SPOUT(B&M[BUFF INX NOT 0] [9:9:9]);                            02131200
         FORGETSPACE(BUFF);                                             02131205
         END                                                            02131210
    ELSE                                                                02131215
         IF FUNC THEN % TURN ONE ON                                     02131220
              BEGIN                                                     02131225
              OK~ TRUE; % UNTIL PROVEN GUILTY                           02131230
              IF STA=0 THEN % SPO TO BECOME A SPO, THAT IS EASY         02131235
                   SPOWORD~ ABS(SPOWORD)                                02131240
              ELSE                                                      02131245
                   IF (((STA~ GET(STA)).[9:4]=STA.[4:4])AND(STA.[14:4]= 02131250
                     STA.[18:4]))                    OR STA.[30:1]      02131255
                        OR STA.[32:1] THEN % NO CAN DO                  02131256
                        OK~ FALSE                                       02131260
                   ELSE                                                 02131265
                        BEGIN                                           02131270
                        STA~ STA.[9:9] AND @757;                        02131275
                        IF F=0 THEN F~ STA ELSE                         02131285
                        IF C=0 THEN C~ STA ELSE                         02131290
                        IF D=0 THEN D~ STA ELSE                         02131295
                        IF E=0 THEN E~ STA ELSE                         02131300
                             OK~ 2%  NO ROOM IN THE INN                 02131305
                        END;                                            02131310
              STREAM(T~ OK,Z~ BUFF);                                    02131320
                   BEGIN                                                02131325
                   CI~ CI+ T;                                           02131330
                   GO EXIT;                                             02131335
                   GO OK;                                               02131340
                   DS~ 8 LIT " OVRFL  "; GO EXIT;                       02131345
              OK:  DS~ 8 LIT "   OK   ";                                02131350
              EXIT:                                                     02131355
                   END;                                                 02131360
              IF OK AND STA!0 THEN                                      02131365
                   BEGIN                                                02131370
                   SET(STA~GET(0&STA[9:39:9])&3[31:46:2]);              02131375
                   IF STA.[45:1] THEN TACH(STA,0,0);                    02131377
                   SET(GET(STA) OR @1740);                              02131378
                   END;                                                 02131380
              SPOUT(BUFF&0[9:9:9]);                                     02131390
              END                                                       02131395
         ELSE      % TURN ONE OFF                                       02131400
              BEGIN                                                     02131405
              OK ~ TRUE;                                                02131410
              IF(STA~ STA.[9:9])=0 THEN%SHUT UP THE SPO                 02131415
                   SPOWORD ~ NABS(SPOWORD)                              02131420
              ELSE                                                      02131425
                   BEGIN                                                02131430
                   IF F=STA THEN F~ 0 ELSE                              02131440
                   IF C=STA THEN C~ 0 ELSE                              02131445
                   IF D=STA THEN D~ 0 ELSE                              02131450
                   IF E=STA THEN E~ 0 ELSE                              02131455
                        OK~ FALSE; % IT WAS NOT A SPO                   02131460
                   END;                                                 02131465
              IF FUNC=0 THEN                                            02131470
                   BEGIN                                                02131475
                   STATION[STA.[44:4],STA.[39:4]].[26:1] ~ 1;  %BK      02131478
                   IF OK THEN                                           02131480
                        BEGIN                                           02131482
                        BUFF~NABS(BUFF&STA[9:39:9]);                    02131484
                        STREAM(Z~ BUFF);                                02131485
                        BEGIN                                           02131490
                        DS~ 8 LIT "  OK   ";                            02131495
                        END;                                            02131500
                        END;                                            02131502
                   SPOUT(BUFF);                                         02131505
                   END;                                                 02131510
              IF OK AND STA!0 THEN                                      02131525
                   SET(GET(0&STA[9:39:9])&0[31:46:2]&0[38:43:5]);       02131526
              END;                                                      02131530
    IF FUNC<3 THEN                                                      02131535
         BEGIN                                                          02131540
         SLEEP([RD],IOMASK);                    % SAVE SPO WORD         02131545
         M[B INX 17]~ SPOWORD;                  % OVER H/L              02131550
         DISKIO(RD,B-1,-30,DIRECTORYTOP-SYSNO);                         02131555
         SLEEP([RD],IOMASK); HOLDFREE~ TRUE;                            02131560
         FORGETSPACE(B);                                                02131565
         END;                                                           02131570
    END;                                                                02131575
 PROCEDURE SPOUT(MESSAGE); VALUE MESSAGE; REAL MESSAGE;%                02132000
         BEGIN REAL MKSCW=-2;%                                          02133000
              INTEGER MIX;                                              02133010
$ INCLUDE 02133541, IF DATACOM AND DCSPO AND NOT INQUIRY;               02133011
              INTEGER SPOFLAG;                                          02133012
              INTEGER CR;                                               02133013
              REAL TUSTA,I,J,AD,MA;  INTEGER WDS,LINES,EXTRA,LFT;       02133015
              DEFINE STACURR=STATION[TUSTA.[14:4],TUSTA.[9:4]]#,        02133016
              STANEXT=STATION[TUSTA.[18:4],TUSTA.[4:4]]#;               02133017
              LABEL EXIT,AUXSPO,STARTITOFF,EXITB;                       02133020
              ARRAY ARA[*],STAS[*];                                     02133025
              DEFINE    A=0&ARA[I] [9:39:9]#,                           02133030
                        B=0&ARA[I] [9:30:9]#,                           02133035
                        C=0&ARA[I] [9:21:9]#,                           02133040
                        D=0&ARA[I] [9:12:9]#,                           02133045
                        E=0&ARA[I] [9:03:9]#;                           02133050
              DEFINE STUFF=BEGIN STAS[J]~TUSTA&0[13:47:1];J~J+1 END#;   02133060
              DEFINE CHECKFORSPOES=IF SPOFLAG>0 THEN BEGIN              02133070
                   IF(TUSTA~ 0&SPOWORD[9:39:9])!0 THEN STUFF;           02133080
                   IF(TUSTA~ 0&SPOWORD[9:30:9])!0 THEN STUFF;           02133090
                   IF(TUSTA~ 0&SPOWORD[9:21:9])!0 THEN STUFF;           02133100
                   IF(TUSTA~ 0&SPOWORD[9:12:9])!0 THEN STUFF;           02133110
                   END#;                                                02133120
              IF P(.MESSAGE,LOD,TOP,XCH,DEL) THEN                       02133500
                   BEGIN                                                02133510
                   TUSTA~ 0&MESSAGE [9:9:9];                            02133520
                   CR:=MESSAGE.[2:1];                                   02133525
                   SPOFLAG~(MESSAGE<0) OR (TUSTA.[9:9]=1);              02133530
                   END;                                                 02133540
              MESSAGE ~ P(.MESSAGE,LOD).[33:15]-1;%                     02134000
              MIX ~ M[MESSAGE-1].[9:6];                                 02134005
$INCLUDE 02134031, IF DATACOM AND DCSPO AND NOT INQUIRY;                02134008
              IF MIX ! 0 THEN                                           02134010
              IF TUSTA = 0 THEN                                         02134015
$ INCLUDE 02134018, IF RJE;                                             02134016
              IF (TUSTA:=0&JAR[MIX,6][9:9:9])!0 THEN SPOFLAG:=1 ELSE    02134017
                        IF TUSTABYMIX[MIX] ! 0 THEN                     02134020
                             TUSTA~-1;                                  02134025
$ INCLUDE 02134903, IF DATACOM AND DCSPO AND NOT INQUIRY;               02134899
              IF SPOFLAG~(3|((TUSTA{0)OR SPOFLAG)) AND                  02134900
                 (2 OR (SPOWORD}0)) THEN                                02134902
              BEGIN                                                     02134906
              IF MESSAGEHOLDER = 0 THEN%                                02135000
                   BEGIN MESSAGEHOLDER ~ MESSAGE;%                      02136000
                        INDEPENDENTRUNNER(P(.MESSAGEWRITER),0)%         02137000
                   END%                                                 02138000
              ELSE M[MESSAGEHOLDER.[18:15]].[18:15] ~ MESSAGE;          02139000
              M[MESSAGE]~0&MIX[4:43:5];                                 02140000
              MESSAGEHOLDER.[18:15] ~ MESSAGE;%                         02141000
              END;                                                      02141020
              M[MESSAGE-1].[9:6] ~ 0;%                                  02142000
              IF P(MKSCW.[33:15],DUP)  = 0 THEN%                        02143000
              BEGIN        ;                                            02143050
              STREAM(N~0:X~MESSAGE+1);                                  02144500
                   BEGIN SI ~ X;%                                       02145000
              L:        IF SC ! "~" THEN%                               02146000
                             BEGIN IF SC= " " THEN%                     02147000
                                  BB:  BEGIN SI~ SI+1;                  02148000
                                            IF SC=" " THEN GO BB;       02149000
                                            IF SC = ALPHA THEN%         02150000
                                                 BEGIN SI ~ SI-1;%      02151000
                                                      DS ~ CHR;%        02152000
                                                 END ELSE GO TO L;%     02154000
                                       END;%                            02155000
                                  IF SC = @14 THEN%                     02156000
                                       BEGIN DS ~ CHR;%                 02157000
                                       Q:   IF SC = @14 THEN%           02158000
                                                 BEGIN SI ~ SI+1;%      02159000
                                                      GO TO Q;%         02161000
                                                 END;%                  02162000
                                            GO TO L;%                   02163000
                                       END;%                            02164000
                                  DS ~ CHR;%                            02165000
                                  GO TO L;%                             02167000
                             END;%                                      02168000
                        DS ~ CHR;%                                      02169000
                        N ~ DI;                                         02171000
                   END;%                                                02172000
              NT1~P;NT1~((NT1.[33:15]-(MESSAGE+1))|8+NT1.[30:3])|6;     02173000
              END ELSE        NT1 ~ P | 6;                              02173050
              IOTIME[P1MIX] ~ *P(DUP)+NT1;%                             02174000
$INCLUDE 02175001, IF DCSPO AND DATACOM AND NOT INQUIRY;                02174005
              WDS~ (NT1+47) DIV 48;                                     02174006
              CR:=(MIX!0) OR CR;                                        02174008
              EXTRA~ (LINES~WDS DIV 9)/4+1;   LFT~ WDS MOD 9;           02174010
              IF TUSTA=0 THEN                                           02174012
AUXSPO:       BEGIN                                                     02174014
              STAS~ [M[GETSPACE(5,0,0)+2]]&5[8:38:10]; GO STARTITOFF;   02174016
              END;                                                      02174018
              IF TUSTA>0 THEN                                           02174020
                   BEGIN                                                02174022
                   IF TUSTA.[9:9]=1 THEN IF SPOWORD}0 THEN GO EXITB     02174023
                        ELSE GO AUXSPO;                                 02174024
                   STAS~ [M[GETSPACE(6,0,0)+2]]&6[8:38:10];             02174025
                   STAS[0]~ TUSTA; J~ 1;                                02174030
                   END                                                  02174034
              ELSE BEGIN                                                02174035
                   IF MIX=0 THEN GO AUXSPO;                             02174036
                   IF P(ATTACHED[MIX],TOP) THEN                         02174037
                        BEGIN P(DEL); GO AUXSPO END;                    02174039
                   ARA~ P; I~ ARA.[8:10];                               02174040
                   STAS~ [M[GETSPACE(I|5+5,0,0)+2]]& (I|5+5)[8:38:10];  02174050
                   FOR I~(I-1) STEP -1 UNTIL 0 DO                       02174065
                        BEGIN                                           02174070
                        IF(TUSTA~A)!0 THEN IF TUSTA.[13:1] THEN STUFF;  02174080
                        IF(TUSTA~B)!0 THEN IF TUSTA.[13:1] THEN STUFF;  02174085
                        IF(TUSTA~C)!0 THEN IF TUSTA.[13:1] THEN STUFF;  02174090
                        IF(TUSTA~D)!0 THEN IF TUSTA.[13:1] THEN STUFF;  02174092
                        IF(TUSTA~E)!0 THEN IF TUSTA.[13:1] THEN STUFF;  02174093
                        END;                                            02174094
                   END;                                                 02174095
STARTITOFF:   M[STAS INX NOT 1].[9:6]~ 0;  CHECKFORSPOES;               02174200
              IF (J~J-1)<0 THEN GO EXIT;                                02174220
              FOR J~ J STEP -1 UNTIL 0 DO                               02174240
                   BEGIN                                                02174260
                   TUSTA~ STAS[J];                                      02174280
                   I~ GETSPACE(WDS+EXTRA,0,0).[33:15]+1;                02174300
                   M[I-1].[9:6]~0;                                      02174320
              STREAM(M:=CR:L:=LINES,R:=LFT,S:=MESSAGE+1,Z:=I+1);        02174330
                       BEGIN SI:=S; M(DS:=2 LIT "{!");                  02174331
                       S:=CI; GO TO START; M:=TALLY;                    02174332
                       M(IF SC!"}" THEN IF SC!"{" THEN                  02174333
                         IF SC!">" THEN IF SC!"<" THEN                  02174334
                         IF SC!"!" THEN                                 02174335
                         BEGIN DS:=CHR; GO TO LL; END;                  02174336
                         DS:=2 RESET; DS:=2 SET; DS:=2 RESET; SI:=SI+1; 02174337
LL:                     ); CI:=L;                                       02174338
START:                 TALLY:=36;                                       02174339
                       L(Z:=DI; 2(L:=CI; CI:=S); DS:=2 LIT "{!");       02174340
                       TALLY:=8;                                        02174345
                       R(Z:=DI; L:=CI; CI:=S); SI:=Z;                   02174350
                       DS~ LIT "~";  DI~ Z;                             02174353
L1:                    IF SC!"~" THEN BEGIN SI~ SI+1; GO L1 END;        02174355
                       R:=SI; DI:=R; DS:=3 LIT "{!~"; M:=DI;            02174356
                       END;                                             02174357
                   NT1:=((NT1:=P).[CF]-(I+1))|8 + NT1.[30:3] - 2;       02174358
$ INCLUDE 02174367, IF RJE;                                             02174359
                   IF GET(TUSTA) THEN  %GOES TO RJE TERMINAL            02174360
                   BEGIN M[MESSAGE].[CF]:=1;  %UNLOCK MESSAGEWRITER     02174361
                        TWXOUT(1&LINES[CTF],NT1-CR,I+1,TUSTA);          02174362
                        FORGETSPACE(I+1);                               02174364
                   END ELSE                                             02174366
                   BEGIN                                                02174368
                   MA:=P(STATIONMESSAGEHOLDER,TUSTA OR @7777700000,     02174370
                        LLL,0,INX,.AD,STD);                             02174380
                   M[MA.[FF]].[CF]~ I;                                  02174400
                   M[AD].[FF]~ I;                                       02174420
                   M[I]~     (TUSTA)&MIX[4:43:5]                        02174440
                        &MA[18:18:15]&AD[33:33:15];                     02174460
                   NUMESS~ NUMESS+1;                                    02174490
                   END END STA LOOP;                                    02174500
              IF SMWSTOPPED THEN                                        02174520
                   BEGIN                                                02174540
                   SMWSTOPPED~ FALSE;                                   02174560
                   INDEPENDENTRUNNER(P(.STATIONMESSAGEWRITER),0);       02174580
                   END;                                                 02174600
EXIT:         FORGETSPACE(STAS);                                        02174660
EXITB:        IF NOT SPOFLAG THEN                                       02174680
                   FORGETSPACE(MESSAGE INX 1)                           02174700
              ELSE                                                      02174720
$ INCLUDE 02174731, IF DATACOM AND RJE AND NOT INQUIRY;                 02174729
              IF NOT GET(TUSTA) THEN  %ALREADY DONE IF THERE IS RJE     02174730
                   M[MESSAGE].[CF]~ 1;                                  02174740
              IF (NUMESS~ NUMESS+(SPOFLAG AND 1))}0 THEN                02175000
$OMIT 02175004, IF DCSPO;                                               02175002
              IF (NUMESS~ NUMESS+1)>0 THEN                              02175003
                   BEGIN                                                02175010
$INCLUDE 02175061, IF DATACOM AND DCSPO AND NOT INQUIRY;                02175020
                   STATION[SPOWORD.[17:4],SPOWORD.[12:4]].[2:1]~ 0;     02175030
                   STATION[SPOWORD.[26:4],SPOWORD.[21:4]].[2:1]~ 0;     02175040
                   STATION[SPOWORD.[35:4],SPOWORD.[30:4]].[2:1]~ 0;     02175050
                   STATION[SPOWORD.[44:4],SPOWORD.[39:4]].[2:1]~ 0;     02175060
                   SLEEP([NUMESS],-0);%                                 02176000
                   END;                                                 02176100
         END;%                                                          02177000
 PROCEDURE ENDOFDECK(R,TUSTA);VALUE R,TUSTA; REAL R,TUSTA;  FORWARD;    02177100
 PROCEDURE TERMINALMESSAGES; FORWARD;%                                  02178000
 REAL TERMINALCLOCK, STOPJOB;                                        %ST02179000
 PROCEDURE TERMINATE(MIX); VALUE MIX; REAL MIX;%                        02180000
         BEGIN COMPLEXSLEEP(TERMIX = @1777 OR%                          02181000
                   TERMIX.[33:15] = MIX.[33:15]);%                      02182000
              IF TERMIX = @1777 THEN%                                   02183000
                   BEGIN TERMINALCLOCK ~ CLOCK+P(RTR);%                 02184000
                        TERMIX ~ MIX;%                                  02185000
                   END;%                                                02186000
              IF STOPJOB=MIX THEN STOPJOB~@1777;                     %ST02186100
         END;%                                                          02187000
 REAL PROCEDURE PLACEFINDER(S, A, L);                                   02187100
         VALUE S, A;                                                    02187200
         REAL  S, A, L;                                                 02187300
         FORWARD;                                                       02187400
ARRAY CIDROW[*],CIDTABLE=CIDROW[*,*];                                   02187500
 PROCEDURE TERMINALMESSAGA(N); VALUE N; REAL N;                         02188000
         BEGIN LABEL FOUND;%                                            02189000
              REAL A,T,S,ADR;%                                          02190000
              NAME B;%                                                  02191000
    REAL MIXER,TOPIO,LUN,L;%                                            02192000
              INTEGER I=S; LABEL QZ;%                                   02193000
    LABEL STT;%                                                         02194000
    SUBROUTINE SLAPITOFF;%                                              02195000
         IF LUN } 32 THEN ENDOFDECK(LUN-32,0) ELSE                      02195100
         BEGIN SLEEP([TOGLE],STATUSMASK);                               02196000
              READY ~ NOT (I ~ TWO(LUN)) AND READY;%                    02197000
              RRRMECH ~ NOT I AND RRRMECH OR I AND SAVEWORD;%           02198000
              LABELTABLE[LUN] ~ @114;%                                  02199000
              MULTITABLE[LUN] ~ RDCTABLE[LUN] ~ 0;%                     02200000
         END;%                                                          02201000
    LABEL LB,LBI;%                                                      02202000
              REPLY[P1MIX]~0;%                                          02203000
              TERMINALCLOCK ~ 0;%                                       02204000
              TERMIX.[33:15] ~ P1MIX;%                                  02205000
              PRYOR[P1MIX]~-1;                                          02205100
              IF STOPJOB=P1MIX THEN STOPJOB:=@1777;                     02205200
              A ~ IF N < 0 THEN ABS(N) ELSE GETSPACE(10,0,0)+2;%        02206000
              B ~ PRT[P1MIX,4];%                                        02207000
              IF P(M[L~PRT[P1MIX,8].[CF]],TOP,XCH,DEL)THEN           %TR02208000
               S~ADR~0 ELSE                                          %TR02209000
           DO BEGIN IF P(M[L],TOP,XCH,0,INX,.ADR,~) THEN% OVERLAID RCWTR02210000
                   BEGIN IF NOT M[L].[33:1] THEN%NOT TYPE 13 INT        02211000
                         BEGIN S~ADR; %SEGNO IN RCW                     02211010
                     T~0;ADR~M[M[L].MOM].[CF]; % AND THE MSCW        %TR02212000
                         END ELSE S~-1;                                 02212100
                   END ELSE % ITS PRESENT: WEVE GOT TO WORK          %TR02213000
                   BEGIN T~0;                                        %TR02214000
                         WHILE(S~M[T].[CF])<ADR DO T~S;%MEM LINKS    %TR02215000
                         S~IF M[T].[3:6]=1 THEN M[T+1].[CF] ELSE 0;  %TR02216000
         T~T+2;    END;                                              %TR02216100
                   IF PRT[P1MIX,8].[CF]!L OR M[L-1].MSFF%STACK IS MARKED02216200
                   THEN DO L~M[L].MOM UNTIL NOT M[L].MSFF;%GET LAST MSCW02216300
                   L~M[L].MOM;%POINT L TO NEXT RCW,JUST IN CASE.     %TR02216400
         END UNTIL (IF S!0 THEN  IF S=(-1) THEN 0 ELSE                  02216500
                                (B[0]<S OR NOT B[S].PBIT)               02216510
                   ELSE (P(M[T-2].[3:12],DUP)!@700  AND P(XCH)!@1500)); 02216600
      FOUND:  ADR ~ ADR-T;%                                             02217000
         T ~ PLACEFINDER(S, ADR, S);                                    02217100
              TERMINALMESSAGES;%                                        02218000
              B ~ [M[ P(.TERMINALMESSAGES,LOD)]];%                      02219000
              IF N < 0 THEN N ~ 0;%                                     02220000
         STREAM(Z~N!0,X~T,T~0,J~[JAR[P1MIX,0]],                         02221000
                   P1MIX,INDX~PRT[P1MIX,8] INX NOT 2 INX 0,             02222000
                   DSZE~IF P(M[P(DUP)+1],TOP) THEN P ELSE P.[8:10],     02222200
                   TOG~(N=7), Q~[B[N]], A);                             02223000
                   BEGIN CI ~ CI+Z; GO TO L1;%                          02224000
                        DS ~ LIT "-"; A ~ DI;%                          02225000
              L:        DI ~ LOC T; DI ~ DI+7;%                         02226000
                        SI ~ Q; SI ~ SI+1;%                             02227000
                        IF SC = 8 THEN%                                 02228000
                             BEGIN DS ~ LIT "6"; SI ~ SI+1; END%        02229000
                        ELSE DS ~ CHR;%                                 02230000
                        DI ~ A; DS ~ T CHR; A ~ DI;%                    02231000
                        Q ~ SI; SI ~ SI-T; SI ~ SI-1;%                  02232000
                        IF SC = 8 THEN GO TO L;%                        02233000
                        DS ~ LIT " "; GO TO L2;%                        02234000
              L1:       SI ~ A;%                                        02235000
                        IF SC ! "~" THEN%                               02236000
                             BEGIN SI ~ SI+1; A ~ SI;%                  02237000
                                  GO TO L1;%                            02238000
                             END;%                                      02239000
                        DI ~ A;%                                        02240000
              L2:%                                                      02241000
                        SI ~ J; SI ~ SI+1; DS ~ 7 CHR; DS ~ LIT "/";%   02242000
                        SI ~ SI+1; DS ~ 7 CHR; DS ~ LIT "=";%           02243000
                   SI~LOC P1MIX; DS~2DEC; A~DI;                         02244000
                   DI~DI-2; DS~FILL; DI~A;                              02244500
              SI~X;  DS~18 CHR;  A~DI;                                  02245000
                        TOG(DI~A;  DS~2 LIT ", ";  A~DI;  SI~INDX;      02251010
                             SKIP SB;  IF SB THEN BEGIN DI~INDX;        02251020
                             SKIP DB;  DS~RESET;  DI~A;  TOG~TALLY;     02251030
                             DS~12 LIT "EFF INX IS -";  END;            02251040
                             A~DI;  SI~INDX;  DI~LOC Q;  DS~8 DEC;      02251050
                             SI~LOC Q;  7(IF SC>"0" THEN JUMP OUT;      02251060
                                  TALLY~TALLY+1;  SI~SI+1);  DI~A;      02251070
                             T~TALLY;  DS~8 CHR;  DI~DI-T;              02251080
                             T(DS~LIT " ");  DI~DI-T;  A~DI);           02251090
                        TOG(SI~LOC DSZE;  DI~LOC Q;  DS~4 DEC;          02251100
                             DI~A;  DS~5 LIT " GEQ ";  SI~LOC Q;        02251110
                             TALLY~0;  3(IF SC>"0" THEN JUMP OUT;       02251120
                                  TALLY~TALLY+1;  SI~SI+1);             02251130
                        T~TALLY;  DS~4 CHR;  DI~DI-T;                   02251140
                             T(DS~LIT " ");  DI~DI-T;  A~DI);           02251150
                        DI ~ A; DS ~ LIT "~";%                          02252000
                   END;%                                                02253000
              S~A;                                                      02254000
         STREAM(B~S,A~A~GETSPACE(17,0,0)+2);%                           02255000
              BEGIN 17(DS~8 LIT"#"); SI~B;DI~A;DI~DI+8;DS~2 LIT" ";%    02255100
                   10(8(IF SC!"~" THEN DS~CHR ELSE JUMP OUT 2 TO L1));  02255200
                   L1: DS~2 LIT" ";%                                    02255500
              END;%                                                     02256000
              SPOUT(S);                                                 02256500
              IF NOT TERMGO THEN BEGIN HALT;%                           02257000
                   COMPLEXSLEEP(-100=NUMESS);%                          02258000
                   DO UNTIL KEYIN(0)=1;                                 02258100
                   NOPROCESSTOG ~ NOPROCESSTOG-1; END;%                 02258200
              JAR[P1MIX,1] ~-JAR[P1MIX,1];%                             02259000
              UNHOOQUE(P1MIX);%                                         02260000
              MIXER~ @300+P1MIX;%                                       02261000
         STT: T~MSTART;%                                                02262000
              WHILE(L~T.[CF])!0 DO%                                     02263000
                   IF (T~M[L]).[3:12]=MIXER AND T>0%                    02264000
                        THEN%                                           02265000
    BEGIN LUN ~ (TOPIO ~ NFLAG(M[L+2])).[12:6];                         02266000
         IF LUN }32 THEN                                                02266100
              BEGIN                                                     02266200
                   FILECLOSE(TOPIO INX 0);                              02266300
                   GO TO STT;                                           02266400
              END;                                                      02266500
         IF UNIT[LUN].[13:5] = @20                                      02267000
              THEN BEGIN%                                               02268000
         QZ:%                                                           02269000
                   SLAPITOFF;                                           02270000
                   FORGETSPACE(L INX 2);%                               02271000
                   GO TO STT;%                                          02272000
                   END ELSE                                             02273000
         BEGIN T ~ 0;                                                   02274000
              NT2~M[M[TOPIO INX NOT 2] INX 13].[1:9]-1;%                02275000
              FOR NT1 ~ 0 STEP 1 UNTIL NT2 DO%                          02276000
                   M[TOPIO INX NT1] ~ *P(DUP) OR IOMASK;%               02277000
        IF LUN{22 AND LUN}20 OR (LUN{18 AND % LP OR CP BK-UP            02278000
        (P(M[TOPIO].[3:5],DUP)=22 OR P(XCH)=10))                        02278100
              THEN                                                      02278500
         BEGIN IF LUN { 18 THEN % UNIT IS BACKUP                        02279000
              BEGIN S~17;%                                              02280000
                   STREAM(A,D~L+4);                                     02281000
                   BEGIN SI~A; DS~17 WDS END;%                          02282000
                   NT4~M[TOPIO INX NOT 2] INX 0;%                       02283000
                   NT1~M[NT4+14];%                                      02284000
                   NT2~NT1.[FF]; NT1~NT1.[CF];%                         02285000
                   IF M[TOPIO].[3:5]=22 THEN % NOT CP BK-UP             02285100
                   IF NT1=NT2-72 THEN%                                  02286000
                   BEGIN NT1~M[NT4+5].[FF];%                            02287000
                        M[NT4+5].[FF]~NT1+1;%                           02287100
                        M[NT2+17]~ @1540004002000000 &NT1[CTC];%        02287110
                        M[NT4+14].[FF]~NT2-18;%                         02287120
                   END ELSE%                                            02287130
                        IF M[NT2+35].[27:6]=0 THEN M[NT2+35].[28:1]~1;  02287140
                   M[M[TOPIO INX NOT 2] INX 17] ~ -1;%                  02287200
                   M[TOPIO]~FLAG((M[M[TOPIO INX NOT 2] INX 16])%        02287210
                        &0[20:47:1]&S[8:38:10]);%                       02287220
              END ELSE %                                                02287230
              BEGIN T~(A INX @540000000000000) &(LUN!22)[32:47:1]%      02287240
                        &17[8:38:10];%                                  02287250
          IF LUN!22 THEN %IF PUNCH FILE, IGNORE                         02287254
                   IF WAITIO(@4002000000,@357,LUN).[45:1] THEN GO QZ;   02287255
                   T~WAITIO(T,@357,LUN);%                               02287260
                   IF T.[45:1] THEN GO TO QZ;%                          02287270
              END;                                                      02287280
         END ELSE%                                                      02290000
              IF LUN=23 OR LUN=24 THEN%                                 02291000
              BEGIN ADR~L+4;%                                           02292000
                   LB:  IF(T~UNIT[LUN]).[13:5]=25 THEN%                 02293000
              BEGIN ADR ~ IOQUE[S~T.[FF]].[33:15];%                     02294000
                   STREAM (A~"END":ADR); BEGIN SI ~ ADR;%               02295000
         L:SI ~ SI +1; IF SC = " " THEN GO TO L;%                       02296000
              DI ~ LOC A; DI ~ DI+5; IF 3 SC ! DC THEN TALLY ~ 1; A ~%  02297000
       TALLY END;  IF P THEN BEGIN%                                     02298000
                                            IOQUE[S]~IOQUEAVAIL;%       02299000
                                            IOQUEAVAIL~S+1;%            02300000
                                            UNIT[LUN]~@7777777777%      02301000
                             END                                        02302000
              ELSE BEGIN M[TOPIO]~M[TOPIO]OR@2004000000; T~0;%          02303000
              M[M[TOPIO]]~"END.   "&@14[1:43:5]; END;%                  02304000
              END;                                                      02305000
                        IF T!0 THEN%                                    02306000
                             BEGIN%                                     02307000
                             LBI:T~WAITIO(@40000000+ADR,@367,LUN);%     02308000
              IF T.[45:1] THEN GO TO QZ;%                               02309000
                                  IF T.[42:1] THEN GO TO LB ELSE%       02310000
                                       GO TO LBI%                       02311000
              END            END;%                                      02312000
               IF T=0 THEN                                              02313000
                   IF (M[M[TOPIO INX NOT 2] INX 5].[42:1])              02313500
                       THEN FORGETSPACE(L INX 2)                        02313600
                       ELSE FILECLOSE(TOPIO INX 0);                     02314000
              GO TO STT                                                 02315000
    END; END;                                                           02316000
              FORGETSPACE(A);%                                          02317000
              T~MSTART;MIXER~@400+P1MIX;%                               02318000
              WHILE(L~T.[CF])!0 DO%                                     02319000
                   IF(T~M[L]).[3:12]=MIXER AND T>0 THEN%                02320000
                        IF M[M[L+4].[CF]+5].[41:1] THEN FILECLOSE(L+7); 02321000
              T~MSTART;MIXER~@600+P1MIX;%                               02322000
              WHILE(L~T.[CF])!0 DO%                                     02323000
                   IF(T~M[L]).[3:12]=MIXER AND T>0 THEN%                02324000
                   IF M[L+7].[41:1] THEN FILECLOSE(M[L+1] INX 3);%      02325000
              FOR LUN ~ 0 STEP 1 UNTIL 31 DO%                           02326000
                   IF RDCTABLE[LUN].[8:6] = P1MIX THEN%                 02327000
                        SLAPITOFF;%                                     02328000
                   PRT[P1MIX,8]:=T:=NFO[(P1MIX-1)|NDX+2]INX 2;          02328100
                   M[T]:=-FLAG(0);M[T-1]:=-FLAG(0&(PRT)[6:33:9]);       02328200
              P(.COM5); GO TO DIFFCOM;                                  02329000
         END;%                                                          02330000
 SAVE PROCEDURE TERMINALMESSAGE(N); VALUE N; REAL N;                    02330100
         BEGIN NT1 ~ N;                                                 02330200
              P(0,STF);                                                 02330300
              TERMINALMESSAGA(NT1);                                     02330400
         END;                                                           02330500
$INCLUDE 02330841, IF DEBUGGING OR CHECKLINK;                           02330599
SAVE PROCEDURE CHECKLINKS;                                              02330600
    BEGIN REAL B,S,F,L,MS,T,C;                                          02330610
         B~M[S~MS~0].[FF];                                              02330620
         WHILE (F~(L~M[S]).[CF])!MS DO                                  02330630
         BEGIN IF P(.L,LOD).[FF] NEQ B THEN                             02330640
              BEGIN C~1; PUNT([PUNTER[25]]) END;                        02330650
              IF F{S THEN                                               02330660
              BEGIN C~2; PUNT([PUNTER[25]]) END;                        02330670
              B~S; S~F;                                                 02330680
         END;                                                           02330690
         C~3;                                                           02330700
         B~M[(S~MS~S+1)+1];                                             02330710
         WHILE (F~(L~M[S]).[CF])!MS DO                                  02330720
         BEGIN IF M[S+1]!B THEN                                         02330730
              BEGIN C~4; PUNT([PUNTER[25]]) END;                        02330740
              IF S!MS THEN                                              02330750
              BEGIN                                                     02330760
              IF (T~M[S-1])}0 THEN                                      02330770
              BEGIN C~5; PUNT([PUNTER[25]]) END;                        02330780
              IF T.[CF]-S-1!L.[FF] THEN                                 02330790
              BEGIN C~6; PUNT([PUNTER[25]]) END;                        02330800
              END;                                                      02330810
              B~S; S~F;                                                 02330820
         END;                                                           02330830
    END;                                                                02330840
 PROCEDURE TERMINALMESSAGES;%                                           02331000
         BEGIN LABEL L;%                                                02332000
              P(0,XIT,.L,DEL);%                                         02333000
         L::: "8STACK ", "6OVRFLW",    % 1%                             02334000
              "8OPRTR ", "5DS-ED0",    % 3%                             02335000
              "8FLAG B", "2IT0000",    % 5%                             02336000
              "8INVALD", "6 INDEX",    % 7%                             02337000
              "8EXPON ", "6OVRFLW",    % 9%                             02338000
              "8INTGR ", "6OVRFLW",    %11%                             02339000
              "8DIV BY", "5 ZERO0",   %13%                              02340000
              "8EXCESS", "5 TIME0",    %15%                             02341000
              "8INVALD", "6 ADRSS",    %17%                             02342000
              "8UNEXP ", "6IO ERR",   %19%                              02343000
              "8DC TU ","8NOT OU","8TPUT P","6OSSBLE",%21%              02344000
              "8FILE U","8NOPENE","1D00000",                     %25%   02345000
              "8INVALI","5D EOJ0",                               %28    02345100
              "8INVALI", "5D PRL0",    %30%                             02345200
              "8MEMORY","8 PARIT","1Y00000",                    %32 %WF 02345300
              "8OPRTR ", "5ES-ED.",    %35%                             02345400
              "8INVALD", "8 ARRAY", "8 SIZE ", "3IDN...",  %37          02345500
              "8INVALD", "8 INPUT", "6 DATUM",             %41          02345600
              "8TYPE M", "8ISMATC", "8H READ", "4STMT..",  %44          02345610
              "8OUT OF", "5 DATA.",                        %48          02345620
              "8NON-CO", "8NFORMA", "8L ARRA", "2YS....",  %50          02345630
              "8NON-SQ", "8UARE M", "5ATRIX.",             %54          02345640
              "8NEARLY", "8 SINGU", "8LAR MA", "4TRIX..",  %57          02345650
              "8USER D", "4S-ED..",                        %61          02345660
              "8INVALD", "8 DYNAM", "8IC DIA", "1L.....",  %63          02345670
              "8INVALD", "8 DETAC", "1H.....",  %67                     02345700
              "8PARITY", "6 ERROR",                 %70                 02345710
              "8DIMENS","8ION SI","6ZE ERR", % 72                       02345730
              "8INVALD","8 FILE ","4NAME..", % 75                       02345740
              "8INVALD","8 BLOCK","5 EXIT.", % 78                       02345750
              0,0,                           % 81 - RFE                 02345760
              "8EXCESS","8 IO TI","2ME....", % 83                       02345770
              0;%                                                       02346000
         END;%                                                          02347000
REAL PROCEDURE UNITIN(TINU,WHAT); VALUE WHAT; REAL WHAT;                02348000
    ARRAY TINU[*];                                                      02348500
    BEGIN REAL HOLD; INTEGER I;%                                        02349000
         STREAM(A~0:WHAT);%                                             02350000
         BEGIN SI ~ WHAT;%                                              02351000
         L:   IF SC = " " THEN                                          02352000
              BEGIN SI ~ SI + 1; GO TO L; END;%                         02353000
              DI ~ LOC A; DI ~ DI + 5; DS ~ 3 CHR;%                     02353500
         END STREAM;%                                                   02354000
         HOLD ~ POLISH;%                                                02355000
$ INCLUDE 02356001, IF SHAREDISK;                                       02355999
         FOR I~0 STEP 1 UNTIL 68 DO                                     02356000
$ OMIT 02356501, IF SHAREDISK;                                          02356499
         FOR I~0 STEP 1 UNTIL 64 DO                                     02356500
         IF TINU[I].[30:18]=HOLD.[30:18] THEN                           02357000
         BEGIN                                                          02357500
              HOLD~I;                                                   02357600
              I~70;                                                     02357700
         END;                                                           02357800
         UNITIN~IF I<70 THEN 69 ELSE HOLD;                              02358000
    END UNITIN;                                                         02359000
 PROCEDURE IDLETIME;%                                                   02360000
         BEGIN REAL C,N;%                                               02361000
              INTEGER T;%                                               02362000
              HALT;%                                                    02363000
              C ~ ((P2MIX}0)+1)|(CLOCK+P(RTR));%                        02364000
              FOR T ~ 1 STEP 1 UNTIL MIXMAX DO%                         02365000
                   IF JAR[T,*] ! 0 THEN%                                02366000
                        BEGIN N ~ N+1;%                                 02367000
                             C ~ -PROCTIME[T]-JAR[T,3]+C;%              02368000
                        END;%                                           02369000
              IF N ! 0 THEN%                                            02370000
                   T ~ (C-OLDIDLETIME)/N;%                              02371000
              OLDIDLETIME ~ C;%                                         02372000
              FOR N ~ 1 STEP 1 UNTIL MIXMAX DO%                         02373000
                   IF JAR[N,*] ! 0 THEN%                                02374000
                        JAR[N,7] ~ *P(DUP)+T;%                          02375000
              NOPROCESSTOG ~ NOPROCESSTOG-1;%                           02376000
         END;%                                                          02377000
 PROCEDURE ENTERUSERFILE(A,B,L); VALUE A,B,L; REAL A,B,L; FORWARD;%     02379000
 INTEGER PROCEDURE CALCULATEPURGE(PURGE);%                              02380000
         VALUE PURGE; REAL PURGE;%                                      02381000
         BEGIN REAL Y,D;%                                               02382000
              REAL J;%                                                  02383000
              REAL C=+1;;%                                              02384000
              STREAM(A~[DATE],B~[Y]);%                                  02385000
                   BEGIN SI~A; SI~SI+3; DS ~ 2 OCT; DS ~ 3 OCT END;%    02386000
              J ~ (D ~ ( Y+3) DIV 4|1461+(Y+3) MOD 4 | 365 +D+PURGE-%   02387000
                   1) DIV 1461;%                                        02388000
              IF (Y ~ (D ~ D MOD 1461) DIV 365) = 4 THEN%               02389000
                   BEGIN Y ~ 3; D ~ 365 END ELSE D ~ D MOD 365;%        02390000
              CALCULATEPURGE ~ (4|J+Y-3)|1000+D+1;%                     02391000
              STREAM(C~[C]); BEGIN SI~C; DS ~ 8 DEC END;%               02392000
         END;%                                                          02393000
PROCEDURE CHANGEDATE(BUFF); VALUE BUFF; REAL BUFF; FORWARD;             02393100
DEFINE MIDNIGHT=BEGIN IF XCLOCK+P(RTR)}5184000 THEN                     02393200
                      BEGIN XCLOCK~XCLOCK-5184000;                      02393250
  DATE~CALCULATEPURGE(1); CHANGEDATE(GETSPACE(10,0,0)+2); END END#;     02393300
REAL PROCEDURE TAPELABEL(M,F,R,C,P); VALUE M,F,R,C,P;                %AI02393400
    REAL M,F,R,C,P; FORWARD;                                         %AI02393500
$INCLUDE 02434001, IF DEBUGGING OR DUMP;                                02393999
 PROCEDURE PRINTCORE;%                                                  02394000
         BEGIN REAL B,S,N,I,K; ARRAY T[*];%                             02395000
              LABEL L1,L2;                                           %AI02395050
              REAL U;                                                   02395100
              LABEL NW,PR,SK;                                           02395150
              DO UNTIL ( U ~                                            02395200
              IF LABELTABLE[20] = 0 THEN 20 ELSE                        02395300
              IF LABELTABLE[21] = 0 THEN 21 ELSE                        02395400
              IF P(RRR).[27:1] THEN 20 ELSE                             02395500
              IF P(RRR).[26:1] THEN 21 ELSE 0) ! 0;                     02395600
              S ~ 0;                                                    02396100
              HALT; SLEEP([TOGLE],STOREMASK); STOREDY~0;                02396110
              WHILE (S ~ M[S]).[33:15] ! 0 DO                           02396200
                   IF M[S].[1:17] = @1000 THEN                          02396300
                        B ~ OLAY(S.[33:15]);                            02396400
              STOREDY ~ 1;                                              02396500
              B~(DBARRAY INX 2)&15[8:38:10];                            02397000
              S ~ 0;%                                                   02398000
         L1:  IF P(WAITIO(@4000100000,4,U)).[45:1] THEN GO TO L1;    %AI02398500
              DO BEGIN N ~ IF (T ~ M[S]) > 0 AND T.[33:15] ! 0 THEN%    02399000
                        NOT S INX T INX 1 ELSE 3;%                      02400000
                   IF (S AND @7777) = @7777 AND (T AND @7777) = 0 THEN% 02401000
                        N ~ 1;%                                         02402000
         NW:       STREAM(N~IF N>6 THEN 6 ELSE N,S,B);%                 02403000
                        BEGIN 60(DS ~ 2 LIT " ");%                      02404000
                             DI ~ B; SI ~ LOC S; SKIP 33 SB;%           02405000
                             5(DS~3RESET; 3(IF SB THEN%                 02406000
                                  DS ~ SET ELSE DS ~ RESET; SKIP SB));% 02407000
                             DS ~ LIT " ";%                             02408000
                             SI ~ S;%                                   02409000
                             N(DS ~ LIT " "; 2(DS~LIT" "; 8(DS~3RESET;% 02410000
                             3(IF SB THEN DS~SET ELSE DS ~ RESET;%      02411000
                             SKIP SB))));%                              02412000
                        END;%                                           02413000
                   K ~ 1;%                                              02414000
         PR:       I ~ WAITIO(B&((N>6)+1)[27:46:2],@64,U);              02415000
                   IF I.[42:1] THEN%                                    02416000
                        I ~ WAITIO(@4000100000,4,U);                    02417000
                   IF I.[45:1] THEN GO TO PR;%                          02418000
         SK:       S ~ S+6; N ~ N-6;%                                   02419000
                   IF N } 6 THEN%                                       02420000
                        BEGIN; STREAM(A~S-6:S);%                        02421000
                             BEGIN SI ~ A; IF 48 SC = DC THEN TALLY ~ 1;02422000
                                  A ~ TALLY;%                           02423000
                             END;%                                      02424000
                             IF P THEN%                                 02425000
                                  BEGIN IF K THEN BEGIN;%               02426000
                                       STREAM(B); 60(DS~2LIT"*");%      02427000
                                       K ~ 0;%                          02428000
                                       GO TO PR;%                       02429000
                                  END ELSE GO TO SK; END;END;%          02430000
                   IF N > 0 THEN GO TO NW;%                             02431000
                   S ~ T.[33:15];%                                      02432000
              END UNTIL S = 0;%                                         02433000
              NOPROCESSTOG ~ NOPROCESSTOG-1;                            02433100
         L2:  IF P(WAITIO(@4000100000,4,U)).[45:1] THEN GO TO L2;    %AI02433500
         END;%                                                          02434000
$ INCLUDE 02434781, IF DEBUGGING OR DUMP;                               02434099
PROCEDURE DUMPCORE(BUFF);                                            %AI02434100
         VALUE BUFF; REAL BUFF;                                      %AI02434110
         BEGIN REAL B,S,N,TM,TA,U,D;                                 %AI02434120
              INTEGER I;                                             %AI02434125
              ARRAY TP[*]; ARRAY TL[*];                              %AI02434130
              LABEL X,L1;                                            %AI02434135
                   FOR U:=0 STEP 1 UNTIL 15 DO                       %AI02434170
                   IF (MULTITABLE[U]="MEMORY ") AND                  %AI02434180
                      (LABELTABLE[U].[5:25]="1DUMP")THEN GO TO L1;   %AI02434190
                   FOR U~0 STEP 1 UNTIL 15 DO IF LABELTABLE[U]=0     %AI02434200
                        AND PRNTABLE[U].[1:1] THEN GO TO L1;         %AI02434210
                   BUFF:=BUFF.[15:15]-1;                             %AI02434215
                   STREAM(BUFF);                                     %AI02434220
                        DS:=17LIT"#NO MEMDUMP TAPE~";                %AI02434230
                   GO TO X;                                          %AI02434240
         L1:       MULTITABLE[U]:="MEMORY ";                         %AI02434250
                   LABELTABLE[U].[1:29]:=@1024644447;                %AI02434260
                   STREAM(A:="001",B:=[LABELTABLE[U]]);              %AI02434270
                   BEGIN SI := LOC A; SI := SI + 5;                  %AI02434280
                         DI:=DI+5; DS:=3ADD;                         %AI02434290
                   END;                                              %AI02434300
                   RRRMECH := TWO(U) OR RRRMECH;                     %AI02434310
                   B:=GETSPACE(20,0,0)+2;                            %AI02434320
                   STREAM(BUFF,B);                                   %AI02434330
                   BEGIN                                             %AI02434340
                        DS:=8LIT" "; SI:=B; DS:=19WDS;               %AI02434350
                        SI:=BUFF; DI:=B;                             %AI02434360
                        20(8(IF SC!"~" THEN DS~CHR ELSE JUMP OUT 2   %AI02434370
                             TO L));     L:                          %AI02434380
                   END;                                              %AI02434390
                   LABELTABLE[U].[1:5]:=@20;                         %AI02434400
                   TL:=[M[TAPELABEL("MEMORY ",LABELTABLE[U].[6:42],  %AI02434410
                        1,1,10)]]&10[8:38:10];                       %AI02434420
                   STREAM(A~PRNTABLE[U].[30:18],TL);                    02434424
                        BEGIN SI~LOC A; DI~DI+53; DS~5 DEC END;      %AI02434426
                   TP:=[M[TA:=GETSPACE(513,0,0)+2]]&513[8:38:10];    %AI02434430
                   TM:=0&@1737[1:37:11];                             %AI02434440
                   P(WAITIO(TL&@05000[CTF],0,U),DEL);                %AI02434450
                   P(WAITIO([TM],@40,U),DEL);                        %AI02434460
                   S:=0;                                             %AI02434470
                   HALT; SLEEP([TOGLE],STOREMASK);                   %AI02434480
                   STOREDY:=0;                                       %AI02434490
                   WHILE (S:=M[S]).[33:15] NEQ 0 DO                  %AI02434500
                        IF M[S].[1:17]=@1000 THEN                    %AI02434510
                             D:=OLAY(S.[33:15]);                     %AI02434520
                   STOREDY := 1;                                     %AI02434530
                   S:=0;                                             %AI02434540
                   DO BEGIN                                          %AI02434550
                        N:=S.[33:3];                                 %AI02434560
                        IF MEMASK[N] = 1 THEN S := -S                %AI02434570
                                         ELSE MOVE(512,S,TA+1);      %AI02434580
                        TP[0] := S;                                  %AI02434590
                        P(WAITIO(TP&@05000[CTF],0,U),DEL);           %AI02434600
                        IF S LSS 0 THEN S := 3584 - S;               %AI02434610
                      END UNTIL (S:=S+512).[18:15];                  %AI02434620
                   P(WAITIO(B&20[8:38:10]&5[21:45:3],0,U),DEL);      %AI02434630
                   P(WAITIO([TM],@40,U),DEL);                        %AI02434640
                   P(WAITIO(TL&@05000[CTF],0,U),DEL);                %AI02434650
                   FORGETSPACE(TP);                                  %AI02434660
                   FORGETSPACE(TL);                                  %AI02434670
                   FORGETSPACE(B);                                   %AI02434680
                   LABELTABLE[U].[1:5]~@01;                          %AI02434690
                   BUFF:=BUFF.[15:15]-1;                             %AI02434695
                   STREAM(U~TINU[U],L~LABELTABLE[U],BUFF);           %AI02434700
                   BEGIN                                             %AI02434710
                        SI:=LOC U; SI := SI + 5;                     %AI02434720
                        DS:=1LIT" "; DS:=3CHR;                       %AI02434730
                        SI~LOC L; SI~SI+1; DS~ 1 LIT " "; DS~7 CHR;  %AI02434735
                        DS:=7LIT" DP-ED~";                           %AI02434740
                   END;                                              %AI02434750
                   NOPROCESSTOG:=NOPROCESSTOG-1;                     %AI02434760
         X:        SPOUT(BUFF);                                      %AI02434770
         END DUMPCORE;                                               %AI02434780
PROCEDURE LOGCOMMENT (Q); VALUE Q; REAL Q;  FORWARD;                    02434790
$INCLUDE 02522001, IF DEBUGGING;                                        02434999
 ARRAY TRACETABLE1[*],TRACETABLE2[*]; REAL TRACEINX;%                   02435000
 SAVE PROCEDURE TRACE(WORD,FORMAT);%                                    02436000
         VALUE WORD,FORMAT;%                                            02437000
         ARRAY WORD[*];%                                                02438000
         REAL FORMAT;%                                                  02439000
         BEGIN REAL I=NT1,T=NT2,T1=NT3;%                                02440000
              REAL MKSCW=-3,RCW=-0;%                                    02441000
    COMMENT   FORMAT = 0 MEANS HALF OCTAL%                              02442000
                     = 1 MEANS ALPHA%                                   02443000
                     = 2 MEANS DECIMAL%                                 02444000
                     = 3 MEANS F + C OCTAL;%                            02445000
              I ~ TRACEINX.[18:15];%                                    02446000
              TRACETABLE1[I] ~ WORD;%                                   02447000
              T ~ M[MKSCW.[18:15]];%                                    02448000
              STREAM(A~0:B~T.[33:15]&T[30:10:2]);%                      02449000
                   BEGIN SI ~ B; SI ~ SI-2;%                            02450000
                        DI ~ LOC A; DI ~ DI+6;%                         02451000
                        DS ~ 2 CHR;%                                    02452000
                   END;%                                                02453000
              T1 ~ P.[36:10];%                                          02454000
              TRACETABLE1[I+1] ~(NOT M[T1] INX RCW INX 1)&T1[18:33:15]& 02455000
                   FORMAT[8:38:10]&P1MIX[3:43:5];%                      02456000
              IF I+2=TRACESIZE THEN%                                    02457000
                   BEGIN DISKIO(JUNK,TRACETABLE1.[33:15]-1,TRACESIZE,%  02458000
                             TRACEINX.[33:15]);%                        02459000
                        TRACEINX ~ TRACEINX INX TRACESIZE DIV 30;%      02460000
                   IF TRACEINX GEQ TRACAREASTART+TRACAREASIZE THEN      02461000
                        TRACEINX:=TRACAREASTART;                        02461010
                        WORD ~ TRACETABLE1;%                            02462000
                        TRACETABLE1 ~ TRACETABLE2;%                     02463000
                        TRACETABLE2 ~ WORD;%                            02464000
                   END ELSE%                                            02465000
              TRACEINX.[18:15] ~ I+2;%                                  02466000
         END;%                                                          02467000
 PROCEDURE DISKBUG; FORWARD;%                                           02468000
 PROCEDURE PRINTRACE;%                                                  02469000
         BEGIN REAL I,T;%                                               02470000
              LABEL L,EXIT;%                                            02471000
              MOVE(JOBNUM+2,BED,[DBARRAY[20]]);%                        02472000
              DBARRAY[19] ~ JOBNUM;%                                    02473000
              I ~ TRACEINX.[18:15];%                                    02474000
              TRACEINX.[18:15] ~ 0;%                                    02475000
         L:   IF I = 0 THEN%                                            02476000
                   BEGIN TRACEINX ~ TRACEINX-TRACESIZE DIV 30;%         02477000
                        IF TRACEINX LSS TRACAREASTART THEN GO TO EXIT;  02478000
                        DISKIO(T,-(TRACETABLE1.[33:15]-1),TRACESIZE,%   02479000
                             TRACEINX);%                                02480000
                        SLEEP([T],IOMASK);%                             02481000
                        I ~ TRACESIZE;%                                 02482000
                   END;%                                                02483000
              I ~ I-2;%                                                 02484000
              T ~ TRACETABLE1[I+1];%                                    02485000
              STREAM(R~T.[18:15],C~T.[33:15],W~TRACETABLE1[I],%         02486000
                   X~T.[3:5],%                                          02487000
                   F~T.[8:10],B ~ DBARRAY INX 3);%                      02488000
                   BEGIN SI ~ B; DS ~ 8 LIT " "; DS ~ 14 WDS;%          02489000
                        DI ~ B; DS ~ 4 LIT "P = "; SI ~ LOC R;%         02490000
                        SI ~ SI+6; SKIP 3 SB;%                          02491000
                        3(DS ~ 3 RESET; 3(IF SB THEN DS ~ SET ELSE%     02492000
                            DS ~ RESET; SKIP 1 SB));%                   02493000
                        SI ~ LOC C; DS ~ 7 LIT ";  C = "; DS ~ 4 DEC;%  02494000
                        SI ~ LOC X; DS ~ 7 LIT ";  M = "; DS ~ 1 DEC;%  02495000
                        SI ~ LOC W;%                                    02496000
                        DS ~ 6 LIT "; W = ";%                           02497000
                        CI ~ CI+F;%                                     02498000
                        GO TO HO;%                                      02499000
                        GO TO A;%                                       02500000
                        GO TO D;%                                       02501000
                        GO TO DX;%                                      02502000
                   A:   DS ~ WDS; DS ~ 4 LIT " (A)"; GO TO X;%          02503000
                   D:   DS ~ 8 DEC; DS ~ 4 LIT " (D)"; GO TO X;%        02504000
                   HO:  2(8  (DS ~ 3 RESET; 3(IF SB THEN DS ~ SET ELSE% 02505000
                            DS ~ RESET; SKIP 1 SB)); DS ~ LIT " ";);%   02506000
                        DS ~ 3 LIT "(O)"; GO TO X;%                     02507000
                   DX:  6(DS ~ 3 RESET; 3(IF SB THEN DS ~ SET ELSE%     02508000
                            DS ~ RESET; SKIP 1 SB));%                   02509000
                        2(DS ~ LIT " "; 5(DS ~ 3 RESET;%                02510000
                             3(IF SB THEN DS ~ SET ELSE DS ~ RESET;%    02511000
                             SKIP 1 SB;)));%                            02512000
                        DS ~ 4 LIT " (O)"; GO TO X;%                    02513000
              X:   END;%                                                02514000
              T ~ WAITIO(DBARRAY INX @170006000003,0,20);               02515000
              GO TO L;%                                                 02516000
         EXIT:NOPROCESSTOG ~ NOPROCESSTOG-1;%                           02517000
              PRINTCORE;%                                               02518000
              DISKBUG;%                                                 02519000
              JOBNUM ~ DBARRAY[19];%                                    02520000
              MOVE(JOBNUM+2,[DBARRAY[20]],BED);%                        02521000
         END;%                                                          02522000
$INCLUDE 02522999,IF DATACOM AND DCSPO AND NOT INQUIRY;                 02522099
 PROCEDURE EGGREMOVE(WHATODO,PARAMETER,SPACE);                          02522100
     VALUE WHATODO,PARAMETER,SPACE;                                     02522200
      REAL WHATODO,PARAMETER,SPACE; FORWARD;                            02522300
 PROCEDURE EGGENTER(WHATODO,PARAMETER,SECONDS);                         02522400
     VALUE WHATODO,PARAMETER,SECONDS;                                   02522500
      REAL WHATODO,PARAMETER;                                           02522600
      INTEGER SECONDS; FORWARD;                                         02522700
PROCEDURE EGGSELECT(PARAMETER);VALUE PARAMETER;REAL PARAMETER;FORWARD;  02522800
 PROCEDURE DISKERROR(PARM); VALUE PARM; REAL PARM;%                     02523000
         BEGIN REAL    U,A;%                                            02524000
              U ~ PARM.[10:2]+16;%                                      02525000
              A ~ GETSPACE(10,0,0)+2;%                                  02526000
              STREAM( X~TINU[U],IO~IF PARM.[12:1] THEN "R" ELSE "W",%   02527000
                   DA ~PARM.[23:25],%                                   02528000
                   S:=PARM.[15:6],R:=PARM.[1:4],TR:=TRANSACTION[U], %GEH02529000
                   MX:=PARM.[5:5],A);                               %GEH02529500
                   BEGIN SI ~ LOC X; SI ~ SI+5; DS ~ 3 CHR;%            02530000
                        DS ~ 1 LIT "/"; SI ~ SI+7; DS ~ CHR;%           02531000
                        DS ~ 4 LIT " DA="; DS ~ 8 DEC;%                 02532000
                        DS ~ 7 LIT "; #SEG="; DS ~ 2 DEC;%              02533000
                        DS ~ 8 LIT "; #RTRY="; DS ~ DEC;%               02534000
                        DS ~ 10 LIT "; #TRNS = "; DS ~ 8 DEC;%          02535000
                        R:=DI; DI:=DI-8; DS:=7 FILL; DI:=R;         %GEH02535500
                        DS:=7 LIT"; MIX= "; DS:=2 DEC; DS:=LIT"~";  %GEH02536000
                        DI:=DI-3; DS:=FILL;                         %GEH02536500
                   END;%                                                02537000
              SPOUT(A);%                                                02538000
              STACKUSE ~ TRUE;%                                         02539000
         END;%                                                          02540000
SAVE REAL PROCEDURE RESULT;%                                            02541000
  BEGIN DO P(INI)  UNTIL FALSE END;%                                    02542000
 PROCEDURE NAMEID(A,KTR);%                                              02603000
    REAL A,KTR;%                                                        02604000
    BEGIN;%                                                             02605000
         STREAM(A~[A]:KTR);%                                            02606000
         BEGIN DI ~ A; DS ~ 8 LIT "0       ";%                          02607000
              DI ~ DI-7; SI ~ KTR;%                                     02608000
         L:   IF SC = " " THEN%                                         02609000
                   BEGIN SI ~ SI+1; GO TO L END;%                       02610000
              IF SC = """ THEN%                                         02611000
                   BEGIN SI ~ SI+1;%                                    02612000
                        7(IF SC = "~" THEN JUMP OUT TO EXIT;%           02613000
                             DS ~ CHR;%                                 02614000
                             IF SC = """ THEN JUMP OUT TO LQ;);%        02615000
         LQ:            SI ~ SI+1;%                                     02616000
                        GO TO EXIT;%                                    02617000
                   END;%                                                02618000
              IF SC = ALPHA THEN%                                       02619000
                   BEGIN 7(DS ~ CHR;%                                   02620000
                        IF SC = ALPHA THEN GO TO LA;%                   02621000
                        JUMP OUT TO EXIT;%                              02622000
         LA:            );%                                             02623000
         LE: IF SC = ALPHA THEN  %                                      02623500
                   BEGIN SI~SI+1; GO TO LE; END;  %                     02623501
                        GO TO EXIT;%                                    02624000
                   END;%                                                02625000
              IF SC = "~" THEN%                                         02626000
                   BEGIN DS ~ CHR; SI ~ SI-1; GO TO EXIT END;%          02627000
              IF SC = "=" THEN%                                         02628000
                    BEGIN DS~2 LIT"~~"; SI~SI+1; GO TO EXIT END;        02629000
              DS ~ CHR;%                                                02630000
         EXIT:A ~ SI;%                                                  02631000
         END;%                                                          02632000
         KTR ~ P(XCH);%                                                 02633000
    END;%                                                               02634000
REAL PROCEDURE TAPELABEL(MULFID,FID,REELNO,CYCLE,PURGE);%               02635000
              VALUE MULFID,FID,REELNO,CYCLE,PURGE;%                     02636000
              REAL MULFID,FID,REELNO,CYCLE,PURGE;%                      02637000
    BEGIN     REAL LBL;%                                                02638000
              LBL~GETSPACE(10,0,0)+2;%                                  02639000
              STREAM(%                                                  02640000
               DATE, MULFID,FID,REELNO,CYCLE,PU~CALCULATEPURGE(PURGE),% 02641000
                     LBL);%                                             02642000
                   BEGIN%                                               02643000
                        DS~8 LIT" LABEL  ";%                            02644000
                        SI~LOC MULFID;%                                 02645000
                        DS~WDS;%                                        02646000
                        DS~WDS;%                                        02647000
                        DS~3 DEC;%                                      02648000
                        SI ~ LOC DATE; SI ~ SI+3;%                      02649000
                        DS ~ 5 CHR;%                                    02650000
                        SI~LOC CYCLE;%                                  02651000
                        DS~ 2 DEC;                                      02652000
                        SI~LOC PU; SI~SI+3;%                            02653000
                        DS~5 CHR; DS~1 LIT"0";%                         02654000
                        5(DS~8 LIT"00000000")%                          02655000
                   END;%                                                02656000
              TAPELABEL~LBL;%                                           02657000
    END;%                                                               02658000
REAL PROCEDURE LABELASCRATCH(LBL); VALUE LBL;REAL LBL;%                 02659000
         BEGIN%                                                         02660000
              REAL LUN,TM,REEL,T;                                       02661000
              LBL ~  P(.LBL,LOD).[33:15];%                              02662000
              STREAM(L~LBL+3,R~[REEL]);                                 02662100
              BEGIN SI~L; DS~3 OCT END;                                 02662200
              LUN~FINDOUTPUT(M[LBL+1],M[LBL+2],REEL,0,0,2,0,TM);        02663000
              IF LUN}0 THEN                                             02663100
              BEGIN;                                                    02663200
              STREAM(A~PRNTABLE[LUN].[30:18],T~[T],L~LBL+6);            02664000
              BEGIN DI~DI+5; SI~LOC A; DS~5DEC; SI~SI-8; DI~T;          02664100
                    DS~8DEC; DI~DI-7; DS~6FILL;               END;      02665000
              RDCTABLE[LUN].[8:6]~P1MIX;                                02665100
              MULTITABLE[LUN]~M[LBL+1];                                 02665150
              RRRMECH~TWO(LUN) OR RRRMECH;                              02665200
              P(WAITIO(LBL OR @120500000000,0,LUN),DEL);%               02666000
              TM~0&"}~"[1:37:11];%                                      02667000
              P(WAITIO([TM],0,LUN),DEL);%                               02668000
              IF OPNMESS THEN                                           02668100
                   FILEMESS(" OUT"&TINU[LUN][6:30:18],T,M[LBL+1],       02668500
                        M[LBL+2],REEL,0,0);                             02668600
              END;                                                      02668800
              LABELASCRATCH~LUN%                                        02669000
         END LABELASCRATCH;%                                            02670000
PROCEDURE NSECOND;FORWARD;%                                             02692000
 DEFINE  CHECKSTACKSPACE = IF P(PRT[P1MIX,*] INX 0)-P(0,RDS)<128    %WF 02693000
              THEN BEGIN P(64,STS);  GO TO STACKOVERFLOW;  END#;    %WF 02694000
ARRAY USERCODE[*];                                                      02695000
REAL PROCEDURE SECURITYCHECK(M,F,U,H);                                  02696000
VALUE M,F,U; REAL M,F,U,H; FORWARD;                                     02696100
PROCEDURE MAKEPRESENT(C); VALUE C; REAL C; FORWARD;                     02696200
PROCEDURE SIGNOFF(V,F); VALUE V,F; ARRAY V[*],F[*]; FORWARD;            02696300
PROCEDURE SAVETHEUNIT(B); VALUE B; REAL B; FORWARD;                     02696400
SAVE PROCEDURE IOREQUEST(F,I,L); VALUE F,I,L; ARRAY F,L[*]; REAL I;     02696500
FORWARD;                                                                02696600
BOOLEAN PROCEDURE MTXIN(I,U,B); REAL U,B; INTEGER I; FORWARD;           02696700
PROCEDURE ZIPPER(A,B,C);VALUE A,B,C;REAL A,B,C;FORWARD;                 02696800
PROCEDURE PBIO(A,B); VALUE A; REAL A,B; FORWARD;                        02696900
    PROCEDURE LBMESS(A,B,C,D,E,F,G); VALUE A,B,C,D,E,F,G;               02697000
REAL A,B,C,D,E,F,G; FORWARD;                                            02697200
$INCLUDE 02697691, IF BREAKOUT AND AUXMEM;                              02697299
PROCEDURE AUXTODISK(D,L,A,DA);VALUE D,L,DA;REAL D,L,DA;ARRAY A[*];      02697300
BEGIN INTEGER I,N; REAL T;                                              02697310
SUBROUTINE NOTE;                                                        02697320
BEGIN IF (I~A[0]~A[0]+1) MOD 60=0 THEN                                  02697330
      BEGIN DISKWAIT(A,60,DA+(((A[0] DIV 60)-1)|2)); I~1 END;           02697340
      A[I].[FF]~L;                                                      02697350
      A[I].[CF]~D INX 0;                                                02697360
END;                                                                    02697370
SUBROUTINE OLAYIT;                                                      02697380
BEGIN IF NOT STOREDY THEN SLEEP([TOGLE],STOREMASK);                     02697390
      STOREDY~0;                                                        02697400
      IF M[L].[2:1] THEN P(OLAY(T-2),DEL);                              02697410
      STOREDY~1;                                                        02697420
END;                                                                    02697430
      IF D.[FF]=L THEN %MOTHER,DOPE VECTOR                              02697440
      IF D.[2:1] THEN %PRESENT                                          02697450
      BEGIN IF NOT P(M[D INX 0],TOP) THEN %FLAGBIT                      02697460
            BEGIN N~ D.[8:10];                                          02697470
            FOR I~0 STEP 1 UNTIL N-1 DO                                 02697480
                   BEGIN T~D INX I;                                     02697490
                         AUXTODISK(NFLAG(M[T]),T,A,DA);                 02697500
                   END;                                                 02697510
            END                                                         02697520
            ELSE IF M[(T~M[L].[CF])-1].[18:3]=7 THEN                    02697530
                     BEGIN OLAYIT;                                      02697540
                           D~M[L] INX 0;                                02697550
                           NOTE;                                        02697560
                           MAKEPRESENT(L);                              02697570
                           M[(T~M[L].[CF])-1].[FF]~0;                   02697580
                           OLAYIT;                                      02697590
                     END                                                02697600
      END ELSE                                                          02697610
      BEGIN IF D.[33:3]=7 THEN                                          02697620
            BEGIN NOTE;                                                 02697630
                  MAKEPRESENT(L);                                       02697640
                  M[(T~M[L].[CF])-1].[FF]~0;                            02697650
                  OLAYIT;                                               02697660
                  END                                                   02697670
      END;                                                              02697680
END;                                                                    02697690
DEFINE CODEADDRESS(CODEADDRESS1,CODEADDRESS2)=                          02697710
            ACTUALOVERLAYADDRESS(1,CODEADDRESS1,CODEADDRESS2)#,         02697720
       DATADDRESS(DATADDRESS1,DATADDRESS2)=                             02697730
            ACTUALOVERLAYADDRESS(0,DATADDRESS1,DATADDRESS2)#;           02697740
SAVE INTEGER PROCEDURE ACTUALOVERLAYADDRESS(TYPE,MIX,LOC);              02697750
     VALUE TYPE,MIX,LOC; INTEGER TYPE,MIX,LOC; FORWARD;                 02697770
$ INCLUDE 03499999, IF BREAKOUT;                                        02700000
REAL PROCEDURE BREAKOUT;   %RETURNS HEAD OF BREAK FILE                  02700200
    COMMENT COM12 CALLS THIS TO BREAK A JOB A/B.                        02700400
    BREAKOUT PREPARES A DISK FILE WHICH COM12 ENTERS,                   02700600
    NAMING IT A/BREAK** (** IS THE BREAK NUMBER).                       02700800
    TO RESTART A BROKEN JOB JUST EXECUTE OR RUN                         02701000
    THE APPROPRIATE BREAK FILE, SELECTION WILL NOTICE THE               02701200
    DIFFERENCE AND CALL RESTART;                                        02701400
BEGIN                                                                   02701600
$INCLUDE 02701701, IF AUXMEM;                                           02701699
INTEGER ARRAY GG[*],AA[*]; REAL SVDA;                                   02701700
ARRAY H[*];        %PRT, HEADER OF BREAK FILE                           02701800
ARRAY NAME SD,     %SEGMENT DICTIONARY                                  02702000
    R,             %ROW LEFTOVERS AND STUFF                             02702200
    E,             %TEMP SD, DALOC,...                                  02702400
    DA,MS,         %DISK REFERENCES, ML2 FOR SAVED STUFF                02702600
    ML,A=ML;       %SOME MEMORY LINKS, SEGMENT ZERO                     02702800
INTEGER ARRAY F=E[*];   %DALOC                                          02703000
DEFINE                                                                  02703200
    SS=P(PRT[X,3],   %SPECIAL STUFF: FPB MUST BE FIRST                  02703400
         DALOCROW[X])#,                                                 02703600
    SN=2#,                                                              02703800
    SNORE=IF NOT STOREDY THEN SLEEP([TOGLE],STOREMASK)#,                02704000
    UNMARK=DO M[T~P]~(*P(DUP))&T[2:2:7] UNTIL (I~I+1)=SN#,              02704200
    MLN=29#,                                                            02704400
    X=P1MIX#;                                                           02704600
INTEGER MP,        %BASE OF STACK                                       02704800
    N,             %SIZE OF ML                                          02705000
    SDZ=SD,        %SD[0]                                               02705200
    RS,            %ROW SIZES                                           02705400
    TIP,           %HIGHEST PLACED ADDRESS+1                            02705600
    B,Q,IT,        %IRCW POINTER, BUFFER, COUNTERS                      02705800
    I,J,K,L,                                                            02706000
    S,U,Z;                                                              02706200
LABEL EX,TRY,RETRY;                                                     02706400
REAL T,                                                                 02706600
    D=Z;           %IN PHONYOLAY, ANY FLAGGED STACK WORD SANS FLAG      02706800
SUBROUTINE MARK;   % R[J~J+1]UNTIL (I~I+1)=SN                           02707000
    COMMENT THIS ASSUMES OPERANDS OR DESCRIPTORS                        02707200
    IN R TELLING WHICH AREAS TO MAKE SAVE CODE.                         02707400
    MARKED AREAS ARE IGNORED.                                           02707600
    IT SAVES (IN R) THE REQUISITES TO UNMARK;                           02707800
DO                                                                      02708000
BEGIN R[J~J+1]~(E~(*P(DUP)) INX (M OR @77776))&P(DUP,LOD,XCH)[CTC];     02708200
    E[0]~E[0]&65[2:41:7]   %CAN-T  DUP-LOD. SAVE ML1 AND SITE,          02708400
END UNTIL (I~I+1)=SN;                                                   02708600
SUBROUTINE DUMP;                                                        02708800
                   % J SITE FOR FIRST DISK ADDRESS                      02709000
                   % S SIZE OF AREA                                     02709200
                   % Z>0 SIZE OF FIRST WRITE (MULTIPLE OF 30)           02709400
    COMMENT THIS USES R TO FIND A SUITABLY EMPTY ROW                    02709600
    IN THE BREAK FILE. IT THEN COPIES AN AREA THERE,                    02709800
    DESTROYING J,S AND Z, PROTECTING THE AREA, AND                      02710000
    RETURNING A REFERENCE TO THE COPY;                                  02710200
BEGIN U~(S+29) DIV 30;                                                  02710400
    Q~9; DO UNTIL R[Q~Q+1]}U;  %FIND A SUITABLE ROW                     02710600
    P(RS-R[Q]);      %SAVE RELATIVE ADDRESS                             02710800
    R[Q]~(*P(DUP))-U; U~P(DUP)+H[Q];   %PREPARE ADDRESS                 02711000
    IF Z=0 THEN   %WE RETURN IT ZEROED,REGARDLESS                       02711200
    IF (Z~1020)>S THEN Z~S;   %ELSE IT-S A MULTIPLE OF THIRTY           02711400
    DO   %EACH WRITE                                                    02711600
    BEGIN P(M[J]); % PROTECT DISK ADDRESS                               02711800
         DISKWAIT(J+1,Z,U);                                             02711900
         M[J]~P(XCH); U~U+(Z DIV 30); J~J+Z;                            02712000
    END UNTIL (Z~(IF (S~S-Z)>1020 THEN 1020 ELSE S))=0;                 02712200
    U~P&Q[CTF]   %ROW AND ADDRESS-IN-ROW                                02712400
END;   %RETURNS U: DISK REFERENCE                                       02712600
SUBROUTINE DUMPML; % B ML RECORD COUNT                                  02712800
                   % K ML LINK                                          02713000
    COMMENT THIS USES DUMP TO CONSTRUCT                                 02713200
    A LIST OF ML BLOCKS AS THEY DEVELOP.                                02713400
    IT ALSO MAINTAINS A RUNNING TOTAL ML SIZE;                          02713600
BEGIN ML[MLN]~MS[MLN]~DA[MLN]~K;   %LINKS                               02713800
    B~B+1; N~0;   %AND COUNTS                                           02714000
    J~ML INX @77777; S~3|MLN+3; DUMP;                                   02714200
    K~U   %HOLD LINK TILL NEXT TIME                                     02714400
END;   %RETURNS K=U FOR LINK                                            02714600
SUBROUTINE DUMPIT; %L ML1 SITE, SS INX 0,1,...                          02714800
                   % N ML INDEX                                         02715000
                   %T=M[I]   ML1                                        02715200
    COMMENT THIS BUILDS ML AND ITS LIST, DUMPING EACH AREA              02715400
    RS MUST PLACE, AND THE SPECIAL STUFF, TOO;                          02715600
BEGIN MS[N]~M[J~I+1];   %SAVE ML2                                       02715800
    IF T INX 0>TIP THEN TIP~T INX 0;   %MAYBE RAISE TIP                 02716000
    ML[N]~T   %ML1 WITH SIZE, BASE/SS INX                               02716200
         &(S~P(DUP) INX 0-I-2)[CTF]&I[CTC];                             02716400
    DUMP; DA[N]~U;   %DISK REFERENCE                                    02716600
    IF (N~N+1)=MLN THEN DUMPML   %IF ML IS FULL, COUNT AND DUMP IT      02716800
END;                                                                    02717000
REAL SUBROUTINE SEG;   % T=M[I]   ML1 OF CODE                           02717200
    COMMENT THIS JUST FIGURES SEGMENT DICTIONARY INDICES;               02717400
IF T.[3:6]!7 THEN SEG~M[I+1] INX 0 ELSE   %ITS AN INTRINSIC             02717600
BEGIN S~M[I+1].[8:10]-1;                                                02717800
    STREAM(A~S AND 3: T~[INTABLE[X,S DIV 4]]);                          02718000
    BEGIN SI~T; SI~SI+A; SI~SI+A; DI~LOC A; DI~DI+6; DS~2 CHR END;      02718200
    SEG~P                                                               02718400
END;   %RETURNS SEGMENT DICTIONARY INDEX                                02718600
SUBROUTINE FIND;   % J ADDRESS                                          02718800
    COMMENT THIS JUST FINDS THE CODE SEGMENT INCLUDING J;               02719000
BEGIN I~MSTART; DO UNTIL (I~M[I] INX 0)>J;                              02719200
    T~M[I~M[I].[FF]]                                                    02719400
END;   %RETURNS T=M[I]: ML1 OF FOUND SEGMENT                            02719600
SUBROUTINE PHONYOLAY;   %H=PRT[X,10]   PRTROW[X]                        02719800
                   %B HUNT STOPPER                                      02720000
                   %T=SD[Q]                                             02720200
    COMMENT THIS MAKES PROGRAM SEGMENT Q LOOK ABSENT                    02720400
    IN OUR PRT AND STACK. ALL REFERENCES                                02720600
    BUT THE IRCW ARE RELATIVIZED AS PER OLAY.                           02720800
         THE IRCW REFERS TO "TOP" CODE WHICH                            02721000
    (SINCE THE USER MAY HAVE SAVED CI) MUST BE PLACED.                  02721200
    FURTHER, WE ATTEND CHARACTER MODE TOP CODE BELOW.                   02721400
         THE SEGMENT DICTIONARY IS UNAFFECTED,                          02721600
    SO NORMAL OPERATIONS AFTER BO ARE, TOO.                             02721800
    THE MCP PORTION OF THE STACK IS IGNORED SINCE IT-S                  02722000
    IRRELEVANT AT RS;                                                   02722200
BEGIN N~M[(J~T.[FF])-2] INX 0;   %FRONT, NEXT                           02722400
    RS~H.[FF];   %BASE OF STACK                                         02722600
    IF H[K~T.[8:10]].[2:1] THEN   %PRESENT IN OUR PRT                   02722800
    BEGIN                                                               02723000
         DO UNTIL   %PRT RELATIVIZED                                    02723200
              (K~(H[K]~(*P(DUP))&0[2:2:1]                               02723400
              &(H[K].[CF]-J)[CTC]).[6:12])}2048;                        02723600
         IF P(H[19],TOP) THEN P(DEL) ELSE                               02723800
         IF (K~P.[CF])}J AND K<N THEN                                   02724000
         H[19]~(*P(DUP))&0[2:2:1]&(K-J)[CTC];                           02724200
         WHILE (K~HUNT(RS).[CF])!B DO   %RELATIVIZE STACK               02724400
         BEGIN L~(D~NFLAG(M[K])).[CF];                                  02724600
              IF L}J AND L<N THEN                                       02724800
              IF D.[1:2]!0 THEN                                         02725000
              IF D.[3:1] THEN                                           02725200
                   M[K]~FLAG(D&0[2:2:1]&(L-J)[CTC])                     02725400
              ELSE BEGIN   %RCW                                         02725600
                   M[D.[FF]]~(*P(DUP))&(L-J)[CTC];                      02725800
                   M[K]~D&Q[CTC]                                        02726000
                   END;                                                 02726200
              RS~K+1                                                    02726400
         END                                                            02726600
    END                                                                 02726800
END OF PHONY OLAY;                                                      02727000
REAL SUBROUTINE SPOT;   %J SIZE OF OVERLAY DISK TO GET                  02727200
    COMMENT THIS JUST FINDS OVERLAY DISK SPACE;                         02727400
BEGIN WHILE(L:=DISKSPACE(J,X,0)) LEQ 0 DO SLEEP([OLAYMASK],TWO(X));     02727600
    P(L); L~DALOC[X,L.[33:6]+P(DUP)-1]+L.[39:9]; SPOT~P                 02727800
END;   %RETURNS L=OVERLAY DISK ADDRESS                                  02728000
REAL RZ;   %MUST BE LAST LOCAL                                          02728200
ML~[M[GETSPACE(3|MLN+3,1,0)+2]]; MS~[ML[MLN+1]]; DA~[MS[MLN+1]];        02728400
R~(NOT 9) INX [RZ];   %MARK STACK AND DISK ROW LEDGER. HAD TO PUSH RZ.  02728600
COMMENT ML WILL HOLD (FOR EACH DUMPED AREA):                            02728800
    ML1 (MEMORY LINK ONE) WITH SIZE AND ML1 ADDRESS,                    02729000
    MS WILL HOLD: ML2,                                                  02729200
    AND DA: ROW AND ADDRESS-IN-ROW (FROM DUMP).                         02729400
    WE NOW PHONYOLAY EVERYTHING;                                        02729600
H~PRT[X,10]; SD~H[4]; J~M[B~H[8] INX 0]INX 0;  %PRT, SD, CODE, TOS      02729800
IF J=(H INX 1) THEN ML[0]~0   %EXECUTE FROM R+1: NO TOP CODE            02730000
ELSE   %TOP CODE MUST BE PRESENT                                        02730200
BEGIN FIND;                                                             02730400
    MS[0]~(U~SEG)&M[I+1][FTF];   %TELL MAKEPRESENT WHICH IS TOP SEG     02730600
    ML[0]~T&((TIP~P(DUP) INX 0)-I-2)[CTF]&I[CTC]&1[3:42:6];             02730800
    COMMENT IF R+1 IS CHR MODE THEN IT-S ONLY AN EXIT;                  02731000
    IF H[8].[32:1] THEN   %TOP IS CHAR MODE                             02731200
    BEGIN IF NOT P(M[M[B].[FF]],TOP) THEN   %CALLER STILL AROUND        02731400
         BEGIN COMMENT TOP RCW NEEDS RELATIVIZING BUT WE MUST           02731600
              IGNORE CHAR MODE LOCALS AND PARAMETERS;                   02731800
              J~P(DUP) INX 0; FIND;                                     02732000
              M[P(DUP).[FF]]~(*P(DUP))&(J-I-2)[CTC];   %MSCW            02732200
              F~P(DUP); M[M[B].[FF]]~NFLAG(F)&SEG[CTC]   %RCW           02732400
         END; B~P.[FF]+1   %MSCW IS PHONYOLAY STOPPER                   02732600
    END                                                                 02732800
END;                                                                    02733000
B~B-1;   %IGNORE ICW                                                    02733200
FOR Q~1 STEP 1 UNTIL SDZ DO                                             02733400
IF (T~SD[Q])>0 THEN   %CODE: PHONYOLAY IT                               02733600
BEGIN IF T.[3:1] THEN COMPLEXSLEEP(NOT(T~SD[Q]).[3:1]);   %OUTWAIT PBIT 02733800
    IF T.[FF]>1023 THEN PHONYOLAY   %IT-S PRESENT                       02734000
END;                                                                    02734200
IF ML[0]!0 THEN MAKEPRESENT(H INX SD[U].[8:10]);                        02734400
    COMMENT WE JUST ATTENDED TO STACK AND PRT                           02734600
    CODE REFERENCES.                                                    02734800
         ML AND R ARE INITIALIZED. WE NOW ATTEND TO DATA,               02735000
    OVERLAYING WHAT WE CAN AND ESTIMATING                               02735200
    BREAK FILE NEEDS OF THE REST. WE DON-T DUMP ALL                     02735400
    DATA INTO OVERLAY DISK BECAUSE THAT WOULD WASTE SPACE THERE;        02735600
TRY: IT~4;   %SEGMENT TOTAL (INCLUDING ML,MS,DA, AND SEG ZERO)          02735800
Q~2;          % Q MOVES LIKE N WILL TO HELP ADD ML,DA,MS AREA NEEDS.    02736000
                   %AT ONE EACH, INCLUDE:                               02736200
                   %DALOC AND TOP SEG                                   02736400
                   %WHICH AREN-T COUNTED HERE.                          02736600
                   %ALSO, IGNORE                                        02736800
                   %INTABLE,SD,JAR,FSROW,AND ML,                        02737000
                   %WHICH AREN-T AND NEEDN-T BE.                        02737200
SNORE; STOREDY~0;   %PROTECT JAR FROM RESTART, MARKED STUFF FROM BO     02737400
    %LOOP FROM OLAY, FAMILY COM5                                        02737600
P(SD,ML,INTABLEROW[X],JARROW[X],DALOCROW[X],FSROW[X]);                  02737800
I~SN-6; J~10; MARK;                                                     02738000
I~MSTART; WHILE ((T~M[I]) INX 0)!0 DO                                   02738200
BEGIN IF T>0 THEN   %IN USE                                             02738400
    IF T.[3:6]!1 AND T.[9:6]=X THEN   %OURS: NOT CODE, NOT MARKED       02738600
    IF T.[2:1] THEN   %SAVE: COUNT IT                                   02738800
EX: BEGIN IF (Q~Q+1)=MLN THEN BEGIN IT~IT+3; Q~0 END;                   02739000
         IT~IT+(T INX 28-I) DIV 30                                      02739200
    END    %ML ENTRY AND SEG AREA COUNT                                 02739400
    ELSE   %IT MAY BE OLAYABLE                                          02739600
    IF NOT (U~OLAY(I)) THEN   % IT WASN-T                               02739800
    IF U.[1:1] THEN GO EX   %IT HAD A CHARACTER MODE REFERENCE          02740000
    ELSE GO RETRY;   %WE NEED DISKSPACE: TRY AGAIN                      02740200
    I~T INX 0                                                           02740400
END;   %WE COUNTED ML AREA ONCE GRATIS, NOW WE IGNORE Q.                02740600
U~-1;                                                                   02740800
RETRY: STOREDY~1; I~SN-6; UNMARK;   %MARKED STUFF CAN-T STAND COM5      02741000
IF NOT U.[1:1] THEN   %RETRY DUE                                        02741200
BEGIN SLEEP([OLAYMASK],TWO(U~X)); GO TRY END;                           02741400
    COMMENT NOW A DIGRESSION: BUILDING                                  02741600
    THE RESTART SEGMENT DICTIONARY (RSD), WHICH                         02741800
    (WITH ALL IT REFERENCES) WE COPY                                    02742000
    INTO OVERLAY DISK. THIS FOR ALL THE JOB-S BREAKS;                   02742200
IF (GRSD[X] INX 0)=0 THEN   %FIRST BO THIS JOB: BUILD RSD               02742400
BEGIN B:=SPACE(600);                                                    02742600
    RS~JAR[X,8];                                                        02742800
    E~[M[GETSPACE(SDZ+1,1,1)+2]]; E[0]~SDZ;                             02743000
    FOR I~1 STEP 1 UNTIL SDZ DO                                         02743200
    BEGIN IF SD[I].[3:1] THEN COMPLEXSLEEP(NOT SD[I].[3:1]);            02743400
         IF (E[I]~T~SD[I])!0 THEN                                       02743600
         BEGIN Z~T.[CF]; J~T.[FF];                                      02743800
               IF T.[4:2]!3 THEN                                        02743810
              K~(IF T.[2:1] THEN INTRNSC[Z].[6:27]                      02744000
              ELSE JAR[X,Z DIV RS+10]+Z MOD RS);                        02744200
              IF T.[2:1] THEN   %INTRINSIC: SD SIZE MAY BE WRONG        02744400
              BEGIN IF *(D~[INTRNSC[Z]])>0 THEN SLEEP([D],-0);          02744600
              J~D.[CF] END;                                             02744800
              IF J>1023 THEN J~M[J-1].[FF];                             02745000
              E[I]:=T&0[2:2:1]&J[CTF]&SPOT[CTC]&0[5:5:1];               02745200
              COMMENT WE COPY ALL INTRINSICS MENTIONED, TOO;            02745400
              Z~0; DO BEGIN                                             02745600
             IF T.[4:2]!3 THEN                                          02745700
             BEGIN                                                      02745750
             DISKWAIT(-B,S~IF J LSS 600 THEN J ELSE 600,Z+K);           02745800
             DISKWAIT(B,S,Z+L);                                         02745802
             END                                                        02745804
             ELSE                                                       02745810
             BEGIN                                                      02745815
             IF Z!0 THEN J~J+8;%OFFSET FOR OVERLAP                      02745818
             DISKWAIT(-B,S~IF J<600 THEN J ELSE 600,                    02745820
                      CODEADDRESS(X,T));                                02745830
             IF S= 600 THEN T.[CF]~T INX 37; %592 DIV 16                02745840
             DISKWAIT(IF Z=0 THEN B ELSE B+8,S,Z+L);%NOTE OVERLAP       02745845
             END;                                                       02745850
$VOID                                                                   02746000
              Z~Z+20 END UNTIL (J~J-S){0;                               02746200
         END                                                            02746400
    END;                                                                02746600
    FORGETSPACE(B);                                                     02746800
    COMMENT RSD SHOWS ALL CODE ABSENT, SO WE DON-T SWAP IT FOR SD       02747000
    AND LET GO-JOBS RUN FROM OVERLAY DISK.                              02747200
    WE JUST MOVE IT THERE;                                              02747400
    %NOTE: LIKE SELECTION, THIS LIMITS SD TO 1023 WORDS.                02747600
    J~SDZ+1; GRSD[X].[CF]~SPOT;                                         02747800
    DISKWAIT(E INX 0,J,L);                                              02748000
    FORGETSPACE(E);                                                     02748100
END;                                                                    02748200
MP:=H.[FF]-1;                                                           02748205
$INCLUDE 02748341, IF AUXMEM;                                           02748209
IF AUXDATA[P1MIX]!0 THEN                                                02748210
BEGIN                                                                   02748215
F~[M[SPACE(K~(GG~DALOCROW[X]).[8:10])]]&K[8:38:10];%DALOCROW            02748220
M[GG INX @77776].[9:6]~0;                                               02748225
MOVE(K,GG.[CF],F.[CF]);                                                 02748230
DALOCROW[X]:=F; %SUBS COPY                                              02748235
N:=GG[0] INX 0;                                                         02748240
J:=SPACE(600);                                                          02748245
FOR I:=1 STEP 2 UNTIL N DO %COPY DALOCROW & OLAY DISK                   02748250
BEGIN F[I]:=GETUSERDISK(CHUNKSIZE);                                     02748255
FOR K~0 STEP 20 UNTIL CHUNKSIZE-20 DO                                   02748260
      BEGIN                                                             02748265
      DISKWAIT(-J,600,GG[I]+K);                                         02748270
      DISKWAIT(J,600,F[I]+K);                                           02748275
      END;                                                              02748280
END;                                                                    02748285
FORGETSPACE(J);                                                         02748290
I~MP; L~M[I-2].[CF]-1;                                                  02748295
AA~[M[GETSPACE(64,0,1)+2]]&64[8:38:10]; AA[0]~0;                        02748300
M[AA INX @77776].[9:6]~0; MOVE(63,AA INX 0,AA INX 1);                   02748305
SVDA~GETUSERDISK(137); %4096 WDS MAX                                    02748308
WHILE (T:=HUNT(I).[CF]) { L DO %OLAY FAKEOUT                            02748310
BEGIN IF P(T,DUP)<H[8] INX 0 OR P(XCH)>(H[10] INX 0) THEN               02748312
      IF (D~NFLAG(M[T]))>0 THEN %DATA DESC                              02748315
         AUXTODISK(D,T,AA,SVDA); % TRANS FROM AUX TO DISK               02748320
      I:=T+1;                                                           02748325
END;                                                                    02748330
IF AA[0]>59 THEN                                                        02748332
DISKWAIT(AA,60,SVDA+(((AA[0]+((AA[0] DIV 59)-1))DIV 60)|2));            02748335
END OF AUXMEM STUFF;                                                    02748340
    COMMENT FROM NOW ON THE JOB-S STORAGE SITUATION IS STATIC           02748400
    AS REGARDS WHAT MUST BE PLACED. WE DEVELOP THE BREAK FILE FORMAT,   02748600
    THEN BUILD IT. THE STACK/PRT AND SPECIAL STUFF RATE                 02748800
    UNUSUAL TREATMENT AT RS, SO THEY-RE LAST IN ML.                     02749000
         NOTE THAT WE ONLY PRESUME THE MEMORY LINK FORMAT;              02749200
COMMENT MEMORY MAP. NO NEED FOR OLAYMASK CHECK. RESTART PREFERS CHUNKS; 02749400
$VOID                                                                   02749600
IT~DALOC[X,0].[33:14]   %OVERLAY DISK COPY NEED                         02749800
    +((DALOCROW[X].[8:10]   %DALOC ROW GREW DURING LAST OVERLAYS        02750000
    +29) DIV 30   %TOTAL UNCOUNTED WORDS INTO SEGMENTS                  02750200
    +IT            % COUNTED SEGMENTS                                   02750400
    +CHUNKSIZE-1) DIV CHUNKSIZE;   %TOTAL CHUNKS (ASSUME SEGS CLOSE-PACK02750600
RS~(IF IT{20 THEN 1 ELSE ((IT+19) DIV 20));                             02750800
IF RS!1 THEN IT~(IT+RS-1) DIV RS;   %CLOSE-PACK MAY NEED LESS           02751000
RS~RS|CHUNKSIZE;   %WE-LL TRY TO SHORTEN IT LATER                       02751200
H~FLAG(FILEHEADER(0,0,IT,RS,30,30,0));                                  02751400
IT~IT+9; FOR I~10 STEP 1 UNTIL IT DO H[I]~GETUSERDISK(RS);              02751600
N~1; B~K~Z~0;   %COUNTERS, WRITE POINT                                  02751800
SNORE; STOREDY~0;   %PROTECT JAR POINTER FROM RESTART                   02752000
RZ~RS-1;FOR I~11 STEP 1 UNTIL IT DO P(RS);  %BUILD R                    02752200
P(H,MP,SD,ML,INTABLEROW[X],JARROW[X],FSROW[X]);                         02752400
SS; I~-7; J~IT; MARK;                                                   02752600
I~MSTART; WHILE ((T~M[I]) INX 0)!0 DO                                   02752800
BEGIN IF T>0   %IN USE                                                  02753000
    AND T.[9:6]=X   %OURS, NOT INTRINSIC OR RE-ENTRANT PROGRAM          02753200
    AND T.[3:6]!1   %NOT MARKED OR CODE                                 02753400
    THEN DUMPIT;                                                        02753600
    I~T INX 0                                                           02753800
END;                                                                    02754000
I~-7; UNMARK;                                                           02754200
COMMENT NOW DUMP THE SPECIAL STUFF;                                     02754400
Z~(PRT[X,8] INX 3-MP) MOD 1020; Z~Z-(Z MOD 30);                         02754600
    COMMENT PROTECT LOCALS: ARRANGE FIRST WRITE SO MCP PART OF STACK    02754800
    GETS ONE WRITE;                                                     02755000
T~M[I~MP-2]; DUMPIT;   %STACK BEFORE SS                                 02755200
TIP~TIP&1[CTF];   %WE DON-T PLACE SS. L~0 PUSHES SS.                    02755400
SS; L~0; DO BEGIN T~M[I~P INX @77776]; DUMPIT END UNTIL (L~L+1)=SN;     02755600
COMMENT NOW DUMP THE LAST OF ML;                                        02755800
IF N>0 THEN BEGIN P(N); DUMPML; B~B-1; N~P END;                         02756000
STOREDY~1;                                                              02756200
COMMENT ADJUST TO KEEP CHUNKS WHOLE. ASSUME NO LARGER AREA;             02756400
Q~9; DO UNTIL R[Q~Q+1]}CHUNKSIZE;                                       02756600
U~((RS-R[Q])+CHUNKSIZE-1) DIV CHUNKSIZE|CHUNKSIZE;                      02756800
P([RZ],STS);   %PITCH R[10]...                                          02757000
COMMENT BUILD SEGMENT ZERO AS PER COMPILATN;                            02757200
    COMMENT SEGMENT ZERO, BESIDES WHAT THE SYSTEM                       02757400
    NEEDS OF ANY EXECUTE JOB, INCLUDES ALL RS NEEDS TO USE THE          02757600
    BREAK FILE. A DETAILED FORMAT COMMENT FOLLOWS;                      02757800
A[21]~A[19]~A[15]~0; A[20]~NFO[(X-1)|NDX+2].[FF];                       02758000
A[18]~PRYOR[X] INX 0;                                                   02758200
A[17]~-IOTIME[X];                                                       02758400
A[16]~-PROCTIME[X]-CLOCK-P(RTR);                                        02758600
A[7]~0&GRSD[X][40:25:8]&(A[20] DIV 64)[CTF];                            02758800
I~0; FOR J~0 STEP 1 UNTIL 7 DO IF MEMASK[J] THEN I~I OR TWO(J);         02759000
A[6]~(-MSTART)&I[8:38:10];                                              02759200
A[5]~M[NFO INX 0-1]&(NFO)[CTF];   %SELECTION CRITERIA                   02759400
A[4]~PRTROW[X];                                                         02759600
A[3]~TIP INX (-0)&SDZ[CTF];                                             02759800
A[2]~U&Q[CTF]&JAR[X,2][1:1:2];                                          02760000
A[1]~GRSD[X];                                                           02760200
A[0]~(B|MLN+N)&K[8:23:25];   %NO NEXT ELT SO N COUNTS ML                02760400
DISKWAIT(A INX 0,30,H[10]);                                             02760600
FORGETSPACE(A);                                                         02760700
COMMENT COPY OVERLAY DISK. THIS AB PART BECOMES RESTART OVERLAY DISK;   02760800
J:=SPACE(600);                                                          02761000
F~DALOCROW[X];                                                          02761200
N~F[0] INX 0;                                                           02761400
FOR I~1 STEP 2 UNTIL N DO                                               02761600
BEGIN FOR K~0 STEP 20 UNTIL CHUNKSIZE-20 DO                             02761800
    BEGIN                                                               02762000
         DISKWAIT(-J,600,F[I]+K);                                       02762100
         DISKWAIT(J,600,H[Q]+U);                                        02762200
         U:=U+20;                                                       02762300
    END;                                                                02762400
    IF U=RS THEN BEGIN Q~Q+1; U~0 END                                   02762600
END;                                                                    02762800
FORGETSPACE(J);                                                         02763000
WHILE Q<IT DO    %PITCH ANY EXTRA ROWS                                  02763200
BEGIN FORGETUSERDISK(H[IT],RS); H[IT]~0; IT~IT-1 END;                   02763400
IF U=0 AND Q=IT THEN BEGIN FORGETUSERDISK(H[Q],RS); H[Q]~0 END;         02763600
COMMENT PREPARE BREAK FILE HEADER;                                      02763800
STREAM(D~DATE,I~[I]); BEGIN SI~LOC D; DS~8 OCT END;                     02764000
H[3]~-I&I[12:30:18]&63[2:38:10];   %LAST ACCESS, CREATE AND SAVE        02764200
IF (H[2]~USERCODE[X]).[1:1] OR MCP=NOT 0 THEN H[2]~0;                   02764400
H[1]~(XCLOCK+P(RTR))&I[6:30:18];   %LOG DATE AND TIME                   02764600
H[4]~0&3[9:46:2]; H[5]~H[6]~0; H[7]~RS|(Q-10)+U;   %HUH                 02764800
BREAKOUT~H INX 0-1   %RESULT SUITS ENTERUSERFILE                        02765000
$INCLUDE 02765191, IF AUXMEM;                                           02765099
; IF AUXDATA[P1MIX]!0 THEN                                              02765100
BEGIN                                                                   02765110
IF (N~AA[0])>0 AND N<60 THEN                                            02765112
 FOR I~1 STEP 1 UNTIL N DO M[AA[I].[FF]].[CF]~AA[I] INX 0 ELSE          02765114
     BEGIN FOR J~0 STEP 1 UNTIL N DIV 59 DO                             02765116
          BEGIN DISKWAIT(-AA,60,SVDA+J|2);                              02765118
          T~IF J<N DIV 59 THEN 59 ELSE N MOD 59;                        02765119
          FOR I~1 STEP 1 UNTIL T DO                                     02765120
               M[AA[I].[FF]].[CF]~AA[I] INX 0 ;                         02765122
          END;                                                          02765124
     END;                                                               02765126
FORGETSPACE(AA INX 0);                                                  02765128
FORGETUSERDISK(SVDA,-137);                                              02765129
F~DALOCROW[X]; N~F[0] INX 0;                                            02765130
FOR I:=1 STEP 2 UNTIL N DO                                              02765140
    FORGETUSERDISK(F[I],-CHUNKSIZE);                                    02765150
DALOCROW[X]:=GG; %RESTORE DALOCROW                                      02765160
M[GG INX @77776].[9:6]~X;                                               02765170
FORGETSPACE(F.[CF]);                                                    02765180
END;                                                                    02765190
END OF BREAKOUT;                                                        02765200
COMMENT SEGMENT ZERO FOR RESTART PROGRAM FILES:                         02765400
    S[0].[8:10]    ROW OF LAST ML SEGMENT 10,11,...                     02765600
    S[0].[FF]      REL ADDR IN THAT ROW OF THAT SEGMENT                 02765800
    S[0].[CF]      TOTAL SIZE OF ML                                     02766000
    S[1]           GRSD[X]                                              02766200
    S[1].[1:1]=1   EI BREAK                                             02766400
    S[1].[8:5]     OLD UNIT+1   (AFTER REELER ONLY)                     02766600
    S[1].[13:5]    NEW UNIT   (AFTER REELER ONLY)                       02766800
    S[1].[18:7]    BREAK COUNT 00...99                                  02767000
    S[1].[25:8]    SELECTION FILE COUNT                                 02767200
    S[1].[CF]      OVERLAY DISK ADDRESS OF RSD                          02767400
    S[2].[1:2]     SAME AS JAR[2].[1:2]                                 02767600
    S[2].[FF]      ROW OF FIRST CHUNK 10,...                            02767800
    S[2].[CF]      REL ADDRESS IN THAT ROW OF THAT CHUNK                02768000
    S[3].[1:1]=1   MARKS THIS A RESTART FILE                            02768200
    S[3].[FF]      RSD SIZE LESS ONE                                    02768400
    S[3].[CF]      LIMIT OF PLACEMENT NEEDS                             02768600
    S[4]=PRTROW[X] PRT POINTER                                          02768800
    S[5].[FF]      NFO ADDRESS, LOWER BOUND OF MCP TABLES+1, (1)        02769000
    S[5].[CF]      UPPER BOUND OF MCP TABLES, (1)                       02769200
    S[6].[1:1]=1   NEW FORMAT SEGMENT ZERO                              02769400
    S[6].[8:10]    BIT MAP INDICATING MEMORY MOD SITUATION, (1)         02769600
    S[6].[CF]=MSTART,   (1)                                             02769800
    S[7]...        AS PER USUAL SEGMENT ZERO,  (2)                      02770000
    1. SELECTION MUST MATCH THESE BEFORE ALLOWING RESTART.              02770200
    2. CONTROL CARD MAY CHANGE THESE;                                   02770400
BOOLEAN PROCEDURE BREAK(TK); VALUE TK; INTEGER TK;                      02770600
BEGIN COMMENT OUTWAIT OR DELAY FILE ACTIVITY,                           02770800
         RECORD POSITION AND ACCESS DATA,                               02771000
         TRY TO ENSURE FILE SAFETY,                                     02771200
         AND DECIDE WHETHER TO BREAKOUT;                                02771400
ARRAY FB[*],FIB[*],                                                     02771600
    G[*],H[*];     %HEADERS                                             02771800
NAME B=H;          %IODS                                                02772000
INTEGER IT,        %INTERNAL FILE TYPE                                  02772200
    STATE,         %FIB[5]                                              02772400
    LK=-3,         % SNAPSHOT LIST                                      02772600
    COBOL,         % COBOL OR SORT FILE                                 02772800
    I,J,K;                                                              02773000
$ VOID                                                                  02773200
LABEL                                                                   02773400
    EI,EL,EX,EM,                                                        02773600
    DR,RM,                                                              02773800
    CR,LP,MT,DK,SP,CP,BK,PP,PR,DC,CD;                                   02774000
SWITCH SHUT~CR,LP,MT,DR,DK,SP,CP,BK,PP,PR,DC,CD,BK,RM;                  02774200
DEFINE X=P1MIX#,                                                        02774400
    ALPHA=IF COBOL THEN M[TK+1] INX 3 ELSE (TK+7)#,                     02774600
    BC=FIB[10].[18:30]#,   %BREAK TRANSACTION                           02774800
    FNUM=FIB[4].[13:11]#,   %FB INDEX,Q                                 02775000
    BT=(FIB[13].[1:9]-1)#,   %LAST BUFFER INDEX                         02775200
    LUN=FIB[15].[24:6]#,   %LOGICAL UNIT NUMBER                         02775400
    AB=FB[0],FB[1]#;                                                    02775800
SUBROUTINE COOLOFF;                                                     02776200
    COMMENT THIS OUTWAITS FILE ACTIVITY AS PER FILECLOSE;               02776400
IF NOT STATE.[41:1] THEN   %NOT CLOSED/RETAINED                         02776600
BEGIN J~BT;                                                             02776800
    FOR K~0 STEP 1 UNTIL J DO   %WAIT UNTIL I/O DIES                    02777000
    BEGIN IF NOT B[K].[19:1] THEN SLEEP([B[K]],IOMASK);                 02777200
         IF IT!4 THEN IF B[K].[27:1] THEN K~J                           02777400
    END                                                                 02777600
END OF COOLOFF;                                                         02777800
SUBROUTINE HIN;   %ENTER H                                              02778000
    COMMENT THIS ENTERS A DISK FILE LOOKING OPEN.                       02778200
    IT ATTENDS TO TEMPORARY FILES, TOO;                                 02778400
BEGIN; %TEMPORARY                                                       02778600
     STREAM(A~FIB[4],B~[J]);                                            02778800
         BEGIN SI~LOC A; SI~SI+5; DS~3 OCT END;                         02779000
         IF J=0 THEN J~63;   %PHONY SAVE FACTOR                         02779200
         STREAM(D~DATE,I~[I]); BEGIN SI~LOC D; DS~8 OCT END;            02779400
         H[3]~I&I[12:30:18]&J[2:38:10];                                 02779600
         IF (H[2]~USERCODE[X]).[1:1] OR MCP=NOT 0 THEN H[2]~0;          02779800
         H[1]~(XCLOCK+P(RTR))&I[6:30:18];                               02780000
         H[5]~H[6]~0;    %SECURITY                                      02780400
$ VOID                                                                  02780600
    ENTERUSERFILE(AB,H.[CF]-1); IF TERMIX=X THEN GO EM;                 02780800
    P(DIRECTORYSEARCH(-AB,FIB[5].[13:3]),DEL);                          02780900
    H[4].[47:1]:= 1;                                                    02780910
    H[1]:=H[8];      % RESTORE ROW LENGTH                               02780920
END;                                                                    02781000
FIB~(IF COBOL~M[TK].[7:1] THEN [M[TK+2]]&20[8:38:10] ELSE M[TK+4]);     02781200
IF (STATE~FIB[5]).[42:1] THEN GO EL;   %IGNORE CLOSED/RELEASED FILES    02781400
FB~FNUM INX PRT[X,3];   %SIZE THERE, LARGER THAN NEEDED                 02781600
IF FIB[4].[7:1] THEN GO EM;   % SORT FILES ARE INPUT-OVERWRITTEN        02781800
B~[M[ALPHA]];                                                           02782000
IT~FIB[4].[8:4];   % INTERNAL TYPE CODE                                 02782200
COOLOFF; GO SHUT[IT];   %TYPE CASE: EXIT TO EL                          02782400
DK:      H~FIB[14];   %ACCNT FOR CHANGES, ENTER THE FILE IF REQD        02782600
        IF H[4] THEN %ITS PERMANENT                                     02782800
        BEGIN LOCKDIRECTORY;                                            02783000
              STREAM(S:=H INX 0-1,D:=[J]);                              02783200
              BEGIN SI:=S; DS:=8 OCT END;                               02783210
              DISKWAIT(-(G:=SPACE(30)),30,J);                           02783220
              MOVE(20,[H[10]],[M[G+10]]);                               02783400
              IF M[G+7] LSS H[7] THEN %CHANGE DISK EOF                  02783600
              BEGIN M[G+7]:=H[7];                                       02783800
                    DISKWAIT(G,30,J);                                   02784000
$ VOID                                                                  02784100
              END;                                                      02784200
              UNLOCKDIRECTORY;                                          02784400
              FORGETSPACE(G);                                           02784600
        END ELSE HIN; %ITS TEMPORARY                                    02784800
         GO EL;                                                         02786600
MT:      BC~TRANSACTION[J~LUN];   %PHYSICAL BLOCK COUNT                 02786800
         FIB[10].[1:1]~PRNTABLE[J].[1:1]; %WRITABLE                     02787000
         SAVEWORD~SAVEWORD OR TWO(J);    %CHANGE THIS LATER             02787200
         GO EL;                                                         02787400
BK:      COMMENT MAYBE FILL HOPPER WITH NULL RECORDS AND PBIO.          02787600
         THIS DOESN-T AFFECT THE LOGICALLY CURRENT RECORDS OR COUNTS.   02787800
         REOPEN WILL FILEOPEN AND MAP;                                  02788000
         IF (J~FIB[14].[CF])+72=(I~FIB[14].[FF]) THEN GO EL;            02788200
         DO   %MAKE A NULL RECORD                                       02788400
         FIB[5].[FF]~(M[I+17]~FIB[5].[FF]&@7776[8:35:13])+1   %SEE COM1902788600
         UNTIL (I~I-18)<J; PBIO(B.[CF],FIB[14]); SLEEP(B,IOMASK);       02788800
LP:      GO EL;                                                         02789000
CD:      K~GETSPACE(94,21,0)+2;   %COOLOFF AND SNAPSHOT                 02789200
         J~LUN-32;  %NOTE: READEMFROMDISK MAY MOVE IT HERE              02789400
         COMPLEXSLEEP((M[CIDTABLE[J,0]-2]                               02789600
         AND M[CIDTABLE[J,1]-2]).[19:1]);   %COOLOFF                    02789800
         MOVE(95,CIDROW[J].[CF]-1,K-1);                                 02790000
         M[K].[FF]~LK; LK~K;   %LINK SNAPS FOR PURGE                    02790200
         GO EL;                                                         02790400
DR:                                                                     02790600
CR:                                                                     02790800
SP:                                                                     02791000
CP:                                                                     02791200
PP:                                                                     02791400
PR:                                                                     02791600
DC:                                                                     02791800
RM:                                                                     02792000
EI: IF NOT STATE.[41:1] THEN   %NOT C/RET                               02792200
EM: BEGIN BREAK~1;                                                      02792400
         STREAM(FB,B~[I]);   %RDC                                       02792600
         BEGIN SI~FB; SI~SI+16; DS~3 OCT; DS~5 OCT; DS~2 OCT END;       02792800
         FILEMESS("--CAN-T"," BREAK ",AB,I,J,K)                         02793000
    END;                                                                02793200
EL:   %NOTE: IF AN ODD FILE IS C/RET WE-LL JUST CLOSE IT AT RS.         02793400
END OF FILE BREAKER ;                                                   02793600
BOOLEAN PROCEDURE BADUMP(R,HZ); VALUE R,HZ; REAL R,HZ;                  02793800
COMMENT TAPE/DISK MOVER. HZ SUITS ENTERUSERFILE;                        02794000
BEGIN REAL RS,     %ROW SIZE                                            02794200
    A1,A2,B1,B2,   %TANK                                                02794400
    RD,            %COPY DIRECTION                                      02794600
    TIOD,DIOD;     %TAPE,DISK FIXERS                                    02794800
INTEGER N,EOF,     %BLOCK COUNTS                                        02795000
    D,             %CURRENT DISK RECORD                                 02795200
    I,J,K;                                                              02795400
ARRAY A[*],B[*],   % BUFFERS                                            02795600
    H[*];          % HEADER                                             02795800
DEFINE S=600#,     %BLOCKSIZE                                           02796000
    DL=FORGETSPACE#,                                                    02796200
    SS=20#,        %SEGS/BLOCK                                          02796400
    X=P1MIX#;      %MAY  BE ZERO                                        02796600
LABEL ER,EX,EP,                                                         02796800
    LOOP,WAIT;                                                          02797000
SUBROUTINE XX;     %I   WHICH BUFFER TO TRANSPUT                        02797200
                   %J=1   USE TAPE                                      02797400
                   %RD=1   READ TAPE                                    02797600
COMMENT THIS PREPARES B[I], DEVELOPES ADDRESSES, AND GETS THINGS        02797800
    PUT WHERE THEY BELONG, COUNTING READS;                              02798000
BEGIN IF J THEN   %USE TAPE                                             02798200
    IOREQUEST(-(B[I]~A[I] INX TIOD)&@177[25:40:8],B[I],                 02798400
         [B[I]]&R[12:42:6])                                             02798600
    ELSE   %USE DISK                                                    02798800
    DISKIO(B[I],A[I] INX DIOD,S,K~H[(D~D+SS) DIV RS+10]+D MOD RS);      02799000
    N~N+(RD=J)   %EACH READ COUNTS                                      02799200
END;                                                                    02799400
BOOLEAN SUBROUTINE FOX;   %I BUFFER JUST DONE                           02799600
COMMENT THIS CHECKS EACH I/O;                                           02799800
BEGIN P(TRUE);                                                          02800000
    IF TERMIX.[CF]=X OR B[I].[25:8]!0 THEN                              02800200
    BEGIN IF B[1-I]!1 THEN SLEEP([B[1-I]],IOMASK);   %COOLOFF           02800400
         P(DEL,FALSE)                                                   02800600
    END;                                                                02800800
    FOX~P                                                               02801000
END;                                                                    02801200
H~[M[HZ+1]]&30[8:38:10];   %HEADER                                      02801400
P(WAITIO(H&5[21:45:3]&(RD~X=0)[24:47:1],0,R),DEL); RS~H[8];             02801600
IF RD THEN   %PSEUDOHEADER NEEDED                                       02801800
BEGIN A2:=SPACE(30);                                                    02802000
    IF BADUMP:=3|((A1:=DIRECTORYSEARCH(H[5],H[6],5)) NEQ 0 ) THEN GO EP;02802200
    A~H&A2[CTC]; A[4]~-1; A[9]~0;   %NO NEED TO GRAB DIRECTORYFREE      02802400
    M[A2+4].[1:2]:= 3; %ENTER EXCLUSIVE OPEN & H/L PITCH                02802500
    MOVE(20,[A[9]],[A[10]]); ENTERUSERFILE(H[5],H[6],A2-1);             02802600
    FORGETSPACE(A2);                                                    02802700
    M[HZ]~DIRECTORYFREE.[33:14];                                        02802800
    FOR I~10 STEP 1 WHILE H[I]!0 DO H[I]~GETUSERDISK(RS)                02803000
END;                                                                    02803200
EOF~H[7]|H[0].[1:14]/S;   %REGULAR FILE: BLOCKS                         02803400
A~[A1]&2[8:38:10]; B~[B1]&2[8:38:10];                                   02803600
P(0,1); DO A[P(DUP)]:=SPACE(S+1) UNTIL P=0;                             02803800
COMMENT BINARY MODE MEM DUMP;                                           02804000
TIOD~0&TINU[R][3:3:5]&S[8:38:10]&5[21:45:3]&RD[24:47:1];                02804200
DIOD~0&(NOT 0)[CTC]&(NOT RD)[1:47:1];                                   02804400
D~-SS;   %RECORD ZERO FIRST                                             02804600
I~0; J~RD; XX; I~1;   %FIRST READ                                       02804800
LOOP:XX;                                                                02805000
WAIT: COMPLEXSLEEP((B[0] OR B[1]).[19:1]);                              02805200
    I~(IF (B[0] AND B[1]).[19:1] THEN 1-I ELSE B[1].[19:1]);            02805400
    IF FOX THEN   %B[I] JUST DONE AND READY FOR MORE                    02805600
    BEGIN J~1-B[I].[7:1];   %SWAP TAPE-DISK                             02805800
         IF N<EOF THEN GO LOOP;   %MORE READING NEEDED                  02806000
         IF B[I].[24:1] THEN GO LOOP;   %JUST READ: MUST WRITE          02806200
         IF B[1-I]!1 THEN BEGIN B[I]~1; GO WAIT END;  %DISKIO ZEROES IT 02806400
         %JUST WROTE; CAN-T READ: SUPPRESS WHAT WOULD BECOME READ       02806600
    END ELSE   %GROSS ERROR                                             02806800
    BEGIN IF RD THEN FORGETSPACE(DIRECTORYSEARCH(H[5],H[6],8));         02807000
         BADUMP~TRUE; GO EX                                             02807200
    END;                                                                02807400
    DIOD~0&"}~"[1:37:11];                                               02807600
    P(WAITIO([DIOD]&(RD|3)[23:46:2],@40,R),DEL);   %TAPE MARK           02807800
    IF NOT RD THEN   %ERROR OR WRITING TAPE: PITCH DISK                 02808000
EX: FOR I~10 STEP 1 WHILE H[I]!0 DO FORGETUSERDISK(H[I],RS);            02808200
EP: FORGETSPACE(A1);                                                    02808400
    FORGETSPACE(A2)                                                     02808600
END OF BADUMP;                                                          02808800
PROCEDURE COM12;                                                        02809000
BEGIN COMMENT FIND AND BREAK FILES,                                     02809200
    MAYBE BREAKOUT,                                                     02809400
    ATTEND TO BREAK FILE,                                               02809600
    AND MAYBE DS THE JOB;                                               02809800
REAL R4=-4,R=-5;                                                        02810000
NAME H;            %HEADER                                              02810200
INTEGER I,J,K,L;   % L HEAD OF SNAPS LIST (MUST BE LAST LOCAL)          02810400
REAL T=I;                                                               02810600
DEFINE X=P1MIX#;                                                        02810800
LABEL EP;                                                               02811000
$INCLUDE 02811101, IF AUXMEM;                                           02811099
IF NOT BREAKTOG THEN SLEEP([TOGLE],BREAKMASK);BREAKTOG:=0;BREAKING:=X;  02811100
J~@10600+X;   %TANK/FIB COBOL/SORT-FILE OR WHATEVER                     02811200
WHILE (I~M[I] INX 0)!0 DO IF (M[I].[1:14] OR @200)=J THEN               02811400
IF BREAK(I) THEN GO EP;   %L~...                                        02811600
    COMMENT BREAK FILES ARE NUMBERED 00...99 CYCLICALLY.                02811800
    IN FUTURE, BREAKOUT MAY ALSO BE CONTINGENT                          02812000
    UPON ITS SUCCESS IN FORMATTING THE BREAK FILE.                      02812200
    ANY ADDITION OF BREAK-TO-TAPE STYLE OPTIONS                         02812400
    SHOULD GO HERE, NOT IN BREAKOUT. THEY ARE                           02812600
    DISCOURAGED AS RELATIVELY UNSAFE AND COMPLICATED.                   02812800
    FURTHER, THE BREAK FILE IS RATHER LOOSE-PACKED.                     02813000
    THE EI FACILITY IS ALMOST COMPLETE:                                 02813200
         1. SYSTEM JOBS LIKE LOAD CONTROL, LIBRARY MAINTAINENCE,        02813400
    AND PRINT BACKUP LISTING SHOULDN-T BE BROKEN.                       02813600
         2. COMPILERS REQUIRE SPECIAL ATTENTION AS THEY                 02813800
    HAVE DIFFERENT JOB STRUCTURES.                                      02814000
         3. THE OUTER BLOCK AND KEYIN EI CONTROLS                       02814200
    AREN-T INCLUDED.                                                    02814400
         4. COBOL SAME AREAS ARE JUST RESET TO PROTECT THE SYSTEM.      02814600
    THEY RATE BETTER TREATMENT.                                         02814800
         5. UNIT REFERENCES ARE ONLY FIXED IN TANK,AND ENVIRONS.        02815000
    NOW WE NUMBER AND REPORT THE BREAKOUT;                              02815200
GRSD[X]~(*P(DUP))&(J~((I~P(DUP).[18:7])+1) MOD 100)[18:41:7];           02815400
K~BREAKOUT;                                                             02815600
STREAM(I,D~[I]); BEGIN SI~LOC I; DI~DI+6; DS~2 DEC END;                 02815800
JOBMESS(X,0,T~"BREAK00"&I[36:36:12]," BUILT ",-0,-0);                   02816000
IF R4!4 THEN ENTERUSERFILE(JAR[X,0],T,K)                                02816200
ELSE   %REELER: TAPE IT ON R. BAD MOVE: R4~TRUE                         02816400
BEGIN H~[M[K+1]];   %HEADER                                             02816600
    H[5]~JAR[X,0]; H[6]~T; H[9]~R;   %%USELESS, WILL BE RESTORED        02816800
    IF R4~BADUMP(R,K) THEN   %NO GOOD COPY                              02817000
    BEGIN GRSD[X].[18:7]~J~(J+99) MOD 100;   %BACK-UP BADUMP            02817200
    JOBMESS(X,0,"BADUMP"," ON 000"&TINU[R][30:30:18],-0,-0)             02817400
    END                                                                 02817600
END;                                                                    02817800
FORGETSPACE(K+1);                                                       02818000
IF GRSD[X]<0 THEN   %EI                                                 02818200
BEGIN TERMINATE(X&3[CTF]);                                              02818400
    TERMINALMESSAGE(3)                                                  02818600
END;                                                                    02818800
EP: WHILE L!0 DO BEGIN L~M[K~L].[FF]; FORGETSPACE(K) END;   %PITCH SNAPS02819000
GRSD[X].[1:1]~0;   %EI JUST ONCE                                        02819200
$INCLUDE 02819301, IF AUXMEM;                                           02819299
 BREAKTOG~1; BREAKING~0;                                                02819300
END OF COM12;                                                           02819400
SAVE PROCEDURE FORK(R,S,Q,MK); VALUE R,S,Q,MK;                          02819600
    REAL R,S,MK; NAME Q;                                                02819800
BEGIN              %R ROUTINE                                           02820000
                   %S NEW STACK                                         02820200
                   %Q ADDRESS TO TEST                                   02820400
                   %MK MASK                                             02820600
    COMMENT THIS ROUTINE IS USED TO PASS P1MIX                          02820800
    FROM STACK TO STACK. IN CALLING FORK,                               02821000
    ONE ASSURES THAT THE CONDITION Q/MK                                 02821200
    IS NOT IN FORCE. FORK WILL MAKE R PRESENT IF NECESSARY.             02821400
    SINCE OLAY CHECKS STACKS TO DECIDE A ROUTINE IS USELESS,            02821600
    FORK DOESN-T LOSE CONTROL ONCE R IS PRESENT. THE CALLING ROUTINE    02821800
    MUST, AFTER FORKING, RELINQUISH P1MIX BEFORE CONTROL LOSS           02822000
    AND ASSURE THE CONDITION WILL BE IN FORCE. FURTHER, IF R EXITS      02822200
    AFTER AWAKING IT WILL HANG HERE;                                    02822400
         %NOTE: SLEEP PRYOR IS ZERO HERE                                02822600
INTEGER IT; LABEL L;                                                    02822800
GO TO L; P(NOP); DO UNTIL FALSE;   %TEST FOR ILLEGAL EXIT               02823000
    %NOTE: FORKED PROCESSES MUST ENSURE THEY START FROM BED CHECK       02823200
L:NT4~R; P(MKS,*NT4,0,COC);   %MAKE IT PRESENT, THEN SET UP STACK       02823400
IT~M[R] INX 0; PRYOR[P1MIX]~(*P(DUP))&1[CTF];   %SO ITS ASLEEP          02823600
M[S]~-FLAG(0&1[17:47:1]); M[S+1]~-FLAG(P(.FORK,LOD,1,INX)&S[CTF]);      02823800
M[S+2]~M[S]&(S+1)[CTF]; M[S+3]~-FLAG(IT&(S+2)[CTF]);                    02824000
IF (JOBNUM~JOBNUM+2)}JOBNUMAX THEN PUNT([PUNTER[17]]);                  02824200
BED[JOBNUM]~Q&P1MIX[3:43:5]&(S+3)[CTF];   %PUT IT TO SLEEP              02824400
PROCTIME[P1MIX]~(*P(DUP))+CLOCK+P(RTR);   %TIME IT                      02824600
BED[JOBNUM+1]~MK   %WE-LL WAKE UP WITH P1MIX IN S                       02824800
END OF FORK;                                                            02825000
PROCEDURE RSDSED;   %PHONY TERMINALMESSAGA, COM5, ...                   02825200
    COMMENT SELECTION MAY FORK THIS, THE KERNAL MAY BRANCH HERE,        02825400
    WHICH TIME THE JOB LACKS PREREQUISITES FOR NORMAL                   02825600
    TERMINATION (STACK, PRT, ETC.). THIS USES NORMAL                    02825800
    PROTECTIONS, AND ALSO TRIES TO ENSURE NORMAL                        02826000
    TERMINATION ISN-T APPLIED. THE EOJ MESSAGE IS CHARACTERISTIC;       02826200
BEGIN INTEGER I,J,K; NAME MSCW=-1;                                      02826400
DEFINE X=P1MIX#;                                                        02826600
REAL T;                                                                 02826800
IF TERMIX>0 THEN P(XIT);   %SEE KERNAL ALIVE NOW                        02827000
JARROW[X].[7:1]~1;   %PROTECT SIGNOFF FROM JAR MOVEMENT                 02827200
PRYOR[X]~-1; TERMINALCLOCK~REPLY[X]~                                    02827400
GRSD[X]~PRTROW[X]~INTABLEROW[X]~DALOCROW[X]~0;                          02827600
JAR[X,1]~-P(DUP,LOD);   %NO TERMGO CHECK: CAN-T STAND NSECOND DS.       02827800
FORGETSPACE(DIRECTORYSEARCH(JAR[X,0],ABS(JAR[X,1]),13));                02828000
   %OUR OLAYMASK BIT HASNT BEEN ON YET                                  02828200
CORE.[FF]~CORE.[FF]-NFO[(X-1)|NDX+2].[FF];                              02828400
M[[MSCW] INX 0-2].[9:6]~0;   %OUR STACK                                 02828600
I~JARROW[X] INX 0; J~GETSPACE(1,0,0);                                   02828800
RESTARTING~1023;   %MAY RESTART ANOTHER JOB NOW                         02829000
M[I-2].[9:6]~0; M[J].[9:6]~0;   %JAR AND FPB                            02829200
SLEEP([TOGLE],STOREMASK);                                               02829400
T~M[0];   %CLEAR EVERYTHING ELSE, NO I/O PENDING                        02829600
WHILE (K~T INX 0)!0 DO                                                  02829800
IF (T~M[K]).[9:6]=X AND T>0 THEN FORGETSPACE(K+2);                      02830000
K~X;   %HUH                                                             02830200
SIGNOFF([M[I]]&30[8:38:10],[M[J+2]]);                                   02830400
IF EOJMESS THEN                                                         02830600
BEGIN; STREAM(K,J~J~(NT1~XCLOCK DIV 3600) MOD 60+(NT1 DIV 60)|100,I);   02830800
    BEGIN DS~LIT " "; DI~DI+7; DS~LIT "/"; DI~DI+7;                     02831000
         DS~LIT "="; SI~LOC K; DS~2 DEC;                                02831200
         K~DI; DI~DI-2; DS~FILL; DI~K; DS~6 LIT " GONE ";               02831400
         DS~4 DEC; DS~LIT "~"                                           02831600
    END;                                                                02831800
    SPOUT(I)                                                            02832000
END ELSE FORGETSPACE(I);                                                02832200
JARROW[X]:=0;                                                           02832300
SELECTION;                                                              02832400
KILL([MSCW])   %THIS ASSUMES WE-RE AT STACK BOTTOM.                     02832600
END OF RSDSED;                                                          02832800
PROCEDURE REELER(B); VALUE B; REAL B;                                   02833000
    COMMENT B IS FROM KEYIN/RS MTQ;                                     02833200
BEGIN                                                                   02833400
REAL U, A=B,       %LUN, BUFF                                           02833600
    OLD,D,         %OLD UNIT OF REELER                                  02833800
    I,J,K;                                                              02834000
DEFINE                                                                  02834200
    F=LABELTABLE[U]#;                                                   02834400
LABEL EX,EL,                                                            02834600
    EN,ER,EP;                                                           02834800
ARRAY H[*];        % HEADER                                             02835000
H:=[M[I:=SPACE(31)]]&30[8:38:10];                                       02835200
K~"       ";                                                            02835400
IF MTXIN(J,U,A) THEN GO EX;                                             02835600
IF F=0 THEN J~"SCRATCH"                                                 02835800
ELSE IF F=@314 THEN BEGIN J~"UNLABEL"; K~"ED     " END                  02836000
ELSE IF NOT PRNTABLE[U].[1:1] THEN BEGIN J~"WRITE L"; K~"OCK    " END   02836200
ELSE   %ITS LABELED & OUTPUT                                            02836400
BEGIN F~-(*P(DUP));                                                     02836600
    RRRMECH~RRRMECH OR J;                                               02836800
    COMMENT GET MEMDUMP BIT IN J, SKIP LABEL AND EOF;                   02837000
    P(WAITIO(H&10[8:38:10]&@1400[CTF],0&@377[CTF],U),   %AS PER FILEOPEN02837200
    WAITIO(5&@1400[CTF],@40&@377[CTF],U),DEL,DEL);                      02837400
    J~H[6].[24:6];    %MEM-DUMP KEY                                     02837600
    IF NOT J THEN BEGIN J~"NO DUMP"; GO EL END;                         02837800
    IF (K~BADUMP(U,I-1)).[46:1] THEN   %DUP RS                          02838000
    BEGIN LBMESS(-H[5],H[6],"NOT ","ADDED.","DUP LIB"," RS ",           02838200
         TINU[U]); SETNOTINUSE(U,1); GO EN   %RW/L                      02838400
    END                                                                 02838600
    ELSE IF K THEN BEGIN J~"ERROR I"; K~"N DUMP "; GO EL END;           02838800
    STREAM(D~DATE,S~[J]); BEGIN SI~LOC D; DS~8 OCT END;                 02839000
    H[1]~(XCLOCK+P(RTR))&J[6:30:18];                                    02839200
    J~H[5]; K~H[6]; H[5]~H[6]~0;                                        02839400
    OLD~H[9]; H[9]~20;   %RESTORATION (COM12)                           02839600
    LOCKDIRECTORY;                                                      02839700
    DISKWAIT(I,30,M[I-1]);                                              02839800
    DISKWAIT(-I,30,D:=H[10]); %LEAVE OLD,NEW IN SEG ZERO                02840000
    H[1]~(*P(DUP))&(OLD+1)[8:43:5]&U[13:43:5];                          02840200
    DISKWAIT(I,30,D);                                                   02840400
    UNLOCKDIRECTORY;                                                    02840500
    F.[1:5]~4;   %MARK IT NOT-IN-USE (POSITIONED)                       02840600
    MULTITABLE[U].[1:5]~4;   %FAKE OUT FINDINPUT                        02840800
    COMMENT REOPEN WILL DOUBLE CHECK;                                   02841000
    LBMESS(J,K,"ADDED.","TAPE ","POSITIO","NED:",TINU[U]);              02841200
EN: FORGETSPACE(B); GO EP                                               02841400
END; GO ER;                                                             02841600
EL: SETNOTINUSE(U,1);   %RW/L                                           02841800
ER: STREAM(J,K,B);                                                      02842000
    BEGIN SI~LOC J; 2(SI~SI+1; DS~7 CHR); DS~LIT "~" END;               02842200
EX: SPOUT(-(B INX M[B-1]));                                             02842400
EP: FORGETSPACE(I)                                                      02842600
END OF REELER;                                                          02842800
PROCEDURE REOPEN;     %RESTART FILES                                    02843000
    COMMENT THIS ATTENDS BROKEN FILES.                                  02843200
    USING STANDARD ROUTINES, WE LOCATE EACH FILE.                       02843400
    THEN, WE CHECK IT AGAINST INFORMATION SAVED                         02843600
    BY BREAK AND BREAKOUT.                                              02843800
    ONCE IT IS ACCEPTED, ALL ITS REFERENCES WHICH MAY                   02844000
    HAVE CHANGED ARE CORRECTED, THE FILE                                02844200
    BEING FINALLY RESTORED TO ITS BO STATE. AS AN EXCEPTION,            02844400
    " ODD " FILES CLOSED/RETAINED AT BO                                 02844600
    ARE MARKED CLOSED/RELEASED. FINALLY,                                02844800
    WHEN THE FILE CAN STAND CLOSURE, WE MARK                            02845000
    ITS MEMORY LINKS (SO TERMINATE MAY CLOSE IT);                       02845200
BEGIN COMMENT STACK SIZE IS CLOSE TO LIMIT;                             02845400
INTEGER I,J,K,L;   % SEE PB BELOW: IMMOVABLE TEMPS                      02845600
NAME ML=-4;   %SEE RSUFFIX                                              02845800
ARRAY S=-3[*];                                                          02846000
INTEGER Q=-2;                                                           02846200
ARRAY D[*],W[*],   % IODS AND POOL-QUEUE                                02846400
    FB[*],FIB[*],G[*],H[*];                                             02846600
INTEGER IT,        % INTERNAL FILE TYPE                                 02846800
    U,             % UNIT                                               02847000
    TK,            % ML1 SITE OF TANK                                   02847200
    Y,N,Z,         % POOL-QUEUE POINTERS                                02847400
    OLD,NEW,       % REELER CONTROLS  (SEE SEG ZERO)                    02847600
    RL,DT,CY;      % RDC                                                02847800
REAL T,            % CURRENT IOD. SEE REPORT, NEXT                      02848000
    V=G;           % SEE CHECK, REPORT,FIX                              02848200
DEFINE                                                                  02848400
    AB=FB[0],FB[1]#, RDC=RL,DT,CY#,                                     02848600
    NA=MULTITABLE[U]#, NB=LABELTABLE[U]#,                               02848800
    SELF=(*P(DUP))#,                                                    02849000
    MS(MS1,MS2)=SKIP SB; IF SB THEN DS~MS1 LIT MS2;#,                   02849200
    FW(FW1)=FW1~(FW1+1) AND 31#,                                        02849400
    BK(BK1)=BK1~(BK1+31) AND 31#,                                       02849600
    ALPHA=IF COBOL THEN M[TK+1] INX 3 ELSE (TK+7)#,                     02849800
    COBOL=ML[Q].[7:1]#,   %COBOL OR SORT FILE                           02850000
    UNLABELED=FIB[4].[2:1]#,                                            02850200
    TYPE=FIB[4].[8:4]#,                                                 02850400
    FNUM=FIB[4].[13:11]#,   %FB INX                                     02850600
    STATE=FIB[5]#,                                                      02850800
    C=STATE.[41:1]#,   %CLOSED/RETAINED                                 02851000
    REVERSE=STATE.[44:1]#,                                              02851200
    HEAD=FIB[10].[3:15]#,    %HEAD OF BUFFER RING                       02851400
    BC=FIB[10].[18:30]#,   %BREAK TRANSACTION                           02851600
    BT=(FIB[13].[1:9]-1)#,   %LAST IOD INX                              02851800
    MODE=FIB[13].[24:1]#,                                               02852000
    IO=FIB[13].[27:1]#,                                                 02852200
    LUN=FIB[15].[24:6]#,                                                02852400
    X=P1MIX#;                                                           02852600
LABEL EL,EX,EP,EI,OPENED,BANG,WAIT,BL,ER,MTX,                           02852800
    CR,LP,MT,DR,DK,SP,CP,PB,PP,PR,DC,CD,RM;                             02853000
SWITCH GET~CR,LP,MT,DR,DK,SP,CP,PB,PP,PR,DC,CD,PB,RM;                   02853200
BOOLEAN SUBROUTINE NEXT;   %L THE ONE TO START POLLING AFTER            02853400
    COMMENT THIS WATCHES IODS, TERMIX AND REPLY. IT MAKES T, TOO;       02853600
BEGIN P(L); DO UNTIL P(DUP)=(L~(L+1) AND 15) OR D[L].[19:1];            02853800
    NEXT~P(DEL,T~[D[L]],LOD).[19:1] OR REPLY[X]>0 OR TERMIX.[CF]=X      02854000
END OF NEXT;                                                            02854200
SUBROUTINE COOL;                                                        02854400
    COMMENT THIS SHUTS DOWN W, COOLING I/O AND RW/L TAPES;              02854600
BEGIN WHILE N!Z DO IF NOT D[V~W[FW(N)].[CF]].[19:1] THEN                02854800
    SLEEP([D[V]],IOMASK);   %COOLOFF POOLED TAPES                       02855000
    WHILE Z!Y DO SETNOTINUSE(W[FW(Y)].[CF],1); GO INITIATE              02855200
END OF COOL;                                                            02855400
BOOLEAN SUBROUTINE WRONGREELER;   %U LUN                                02855600
COMMENT CHECK U FOR A MEM-DUMP AND ARRANGE FOR POSITIONING OR REPORT;   02855800
BEGIN                                                                   02856000
    P(WAITIO((L:=SPACE(11))&10[8:38:10]&@1400[CTF],                     02856200
    0&@377[CTF],U),DEL);                                                02856400
    IF M[L+6].[24:6]=1 THEN   %IT-S GOT A DUMP                          02856600
    BEGIN P(WAITIO(5&@1400[CTF],@40&@377[CTF],U),DEL);                  02856800
         S[NEW~U]~@377777777777; D[U].[21:1]~1   %BINARY MEM-DUMP       02857000
    END ELSE   %NO DUMP                                                 02857200
    J.[38:1]~1;   %SETNOTINUSE FIXES RRRMECH                            02857400
    FORGETSPACE(L); WRONGREELER:=J NEQ 0                                02857600
END OF WRONGREELER;                                                     02857800
SUBROUTINE QUIT;   %ABORT                                               02858000
BEGIN TERMINATE(X&19[CTF]); COOL END;                                   02858200
SUBROUTINE REPORT;   %J CONTROL                                         02858400
                   % U UNIT -1{U{INFINITY                               02858600
    COMMENT THIS REPORTS FILES CHECKED AND FOUND WANTING.               02858800
    THE FIRST MESSAGE SIMPLY TELLS WHICH FILE IS WRONG,                 02859000
    THE SECOND GIVES AN INDICATION WHY. A REPLY IS REQUIRED,            02859200
    "OK" INITIATING A RE-CHECK.                                         02859400
         IT ALSO KEEPS TAPES SPACING, AND HELPS ARRANGE THINGS          02859600
    SO THEY CAN FINISH REOPENING;                                       02859800
BEGIN L~(IF (L~U)<16 THEN (L+15) AND 15 ELSE 15);   %START WITH NEW TAPE02860000
    IF J=0 THEN GO WAIT;   %CALLED AFTER BANG ONLY                      02860200
EX: FILEMESS("--WRONG"," FILE  ",AB,RDC);                               02860400
    STREAM(J,D~V~GETSPACE(10,0,0)+2);                                   02860600
    BEGIN DS~8 LIT "--WRONG "; SI~LOC J; SKIP 37 SB;   % ONE SHORT...   02860800
         MS(8,"NO DUMP,")                                               02861000
         MS(12,"WRITE STATE,")                                          02861200
         MS(6,"LABEL,")                                                 02861400
         MS(5,"TYPE,")                                                  02861600
         MS(10,"ROWS USED,")                                            02861800
         MS(12,"NO. OF ROWS,")                                          02862000
         MS(4,"EOF,")                                                   02862200
         MS(11,"ROW LENGTH,")                                           02862400
         MS(7,"FORMAT,")                                                02862600
         MS(9,"SECURITY,");                                             02862800
         DI~DI-1; DS~LIT "~"                                            02863000
    END; SPOUT(V);                                                      02863200
    REPLY[X]~-@412;   %OK,WY,DS                                         02863400
WAIT: COMPLEXSLEEP(NEXT);                                               02863600
    IF TERMIX.[CF]=X THEN COOL;   %TO INITIATE                          02863800
    IF REPLY[X]>0 THEN   %REPLY TO J!0                                  02864000
    BEGIN IF NOT WHYSLEEP(@412) THEN GO EX; REPLY[X]~0; GO ER END;      02864200
    IF T.[25:8]!0 THEN IF T.[25:8]=@40 THEN                             02864400
    BEGIN IF S[L]!0 OR C OR (S[L]=0 AND TRANSACTION[L]=2) THEN          02864600
          BLASTQ(L);                                                    02864700
         %BUG: RARELY, A FILE MAY BE BLASTED, BROKEN, AND NOT YET C/RET 02864800
         IF OLD=99 AND NEW=L THEN S[L]~OLD~0                            02865000
    END ELSE QUIT;                                                      02865200
    IF S[L]>0 THEN   %SPACE MORE                                        02865400
    BEGIN D[L]~SELF&5[25:25:23]&0[8:8:12];   %RESTORE IOD               02865600
         IOREQUEST(-T&@377[25:40:8],T,[T]&L[12:42:6]);                  02865800
         S[L]~SELF-1;   %COUNT OFF A BLOCK                              02866000
         IF J!0 THEN GO WAIT;   %REPLY PENDING                          02866200
         IF ML[Q].[FF]=0 THEN GO WAIT;   %NOTHING TO REOPEN             02866400
         U~99; GO ER   %ARRANGE NEXT REOPEN (SHORTCUT II)               02866600
    END;   %ELSE TIME TO REOPEN L AGAIN                                 02866800
    D[L]~0;   %AVOID RECHECK ON IOD                                     02867000
    IF U=L THEN BK(Z)   %IT-S CURRENT, IT-S Z: TAKE SHORTCUT            02867200
    ELSE   %MOVE IT TO END OF QUEUE                                     02867400
    BEGIN V~N; DO UNTIL W[FW(V)].[CF]=L;   %FISH FOR IT                 02867600
         P(W[V]); W[V]~W[FW(N)]; W[N]~P(XCH);                           02867800
         IF J!0 THEN GO WAIT   %REPLY PENDING                           02868000
    END;                                                                02868200
ER:                                                                     02868400
END OF REPORT;                                                          02868600
SUBROUTINE CHECK;                                                       02868800
    COMMENT THIS JUST CHECKS DISK FILES.                                02869000
    NOTE THAT THE SECURITY IS DEVELOPED ANEW.                           02869200
    G IS LEFT FOR ADDRESS FIX-UP;                                       02869400
BEGIN EL: V~FIB[5].[13:3];   %V=G. SECURITYCHECK ALWAYS RETURNS A HEADER02869600
    G~(K~SECURITYCHECK(AB,USERCODE[X],V))&P(.G,LOD,XCH)[CTF]; J~K=0;    02869800
    FS[X,(K~FNUM DIV ETRLNG).[40:4]]~SELF                               02870000
         %NEW SECURITY EACH CHECK, RS ZEROED OUR FS ROW                 02870200
         AND ( NOT ((L~TWO(0&K[43:44:4]))|3))                           02870400
         OR (L|((NOT G).[31:2]));                                       02870600
    %PRL WILL HANDLE INPUT ONLY RESTRICTION                             02870800
    J~J&(H[0]!G[0])[46:47:1]                                            02871000
       &(H[8]!G[8])[45:47:1]                                            02871200
       &(H[7]>G[7])[44:47:1]                                            02871400
       &(H[9] NEQ G[9])[43:47:1];                                       02871600
    FOR K~10 STEP 1 UNTIL 29 DO                                         02871800
    IF H[K]!0 AND G[K]=0 THEN K~30;                                     02872000
    IF (J~J&K[42:47:1])!0 THEN   %SOMETHING-S WRONG                     02872200
    BEGIN FORGETSPACE(G); P(DIRECTORYSEARCH(-AB,FIB[5].[13:3]),DEL);    02872400
$ VOID                                                                  02872500
         REPORT; GO EL                                                  02872600
    END                                                                 02872800
END OF CHECK;                                                           02873000
SUBROUTINE ADDRESS;   % U HEAD OF BUFFER RING                           02873200
                   % L ADDRESS OF SITE RING RELATIVE                    02873400
    COMMENT THIS CORRECTS DISK ADDRESSES IN THE BUFFERS.                02873600
    ABNORMAL ADDRESS WORDS AREN-T CHANGED;                              02873800
BEGIN J~U;                                                              02874000
    DO   %EACH BUFFER RESET ADDRESS                                     02874200
    BEGIN; STREAM(S~[M[J+L]],D~[I]);                                    02874400
         BEGIN SI~S; DS~8 OCT END;                                      02874600
         K~9; WHILE (K~K+1)<30 DO                                       02874800
         IF P(I-H[K],DUP)}0 AND P(XCH)<H[8] THEN                        02875000
         BEGIN M[J+L]:=DISKADDRESS(AB,I-H[K]+H[8]|(K-10),G,IO);         02875200
              K~30                                                      02875400
         END                                                            02875600
    END UNTIL (J~M[J].[FF]-2)=U                                         02875800
END OF ADDRESS;                                                         02876000
BOOLEAN SUBROUTINE FOND;                                                02876200
    COMMENT SOME FILE TYPES NEEDN-T HAVE                                02876400
    BEEN SAVED FROM BO. THIS FINDS A FREE FILE                          02876600
    AND CHECKS THAT IT IS THE KIND BROKEN;                              02876800
BEGIN L~IT;   %KIND                                                     02877000
    U~FINDOUTPUT(AB,RDC,FB[3].[43:5],FB[3].[42:1],L);                   02877200
    IF U<0 THEN QUIT;                                                   02877400
    FOND~(J~0&(L!IT)[41:47:1])!0                                        02877600
END;   %RETURNS U NEW FILE OLD KIND                                     02877800
BOOLEAN SUBROUTINE FIND;   %[I:K]   ALLOWED U RANGE                     02878000
    COMMENT SOME FILE TYPES MUST HAVE BEEN                              02878200
    SAVED FROM BO. THIS FINDS THEM AND CHECKS                           02878400
    WHETHER THEY-RE ON A SUITABLE UNIT OR NEED (LACK) A LABEL;          02878600
BEGIN L~UNLABELED;                                                      02878800
    U~FINDINPUT(AB,RDC,COBOL,L,   %UNLABELED~...                        02879000
    0,   %NO OPTIONAL ALLOWED                                           02879200
    MODE,FNUM);                                                         02879400
    IF U<0 THEN QUIT;                                                   02879600
    FIND~(J~0                                                           02879800
    &(U<I OR U>K)[41:47:1]                                              02880000
    &(L!UNLABELED)[40:47:1]                                             02880200
    )!0   %WRONG FILE                                                   02880400
END;   %RETURNS U NEW FILE ON OK UNIT                                   02880600
SUBROUTINE LOSE;   % U LUN FOUND                                        02880800
    COMMENT THIS JUST UNDOES FIND;                                      02881000
IF U<16 THEN SETNOTINUSE(U,1)   %RW/L TAPES                             02881200
ELSE LABELTABLE[U].[1:5]~0;   %FREE IT                                  02881400
SUBROUTINE FIX;    % U NEW UNIT                                         02881600
    COMMENT THIS CORRECTS UNIT REFERENCES IN                            02881800
    THE I/O DESCRIPTORS AND BUFFERS.                                    02882000
    CURRENTLY, WE IGNORE UNIT REFS ELSEWHERE THAN TANK AND BUFFERS;     02882200
BEGIN J~BT;   %FIX ALL UNIT REFS IN TANK                                02882400
    V~0&TINU[IF IT=7 OR IT=12 THEN 20                                   02882600
    ELSE IF IT=11 THEN 23 ELSE U][3:3:5];                               02882800
    FIB[16]~SELF&V[3:3:5]; H~[M[ALPHA]]&512[8:38:10];   %IODS           02883000
    FOR I~0 STEP 1 UNTIL J DO H[I]~SELF&V[3:3:5]                        02883200
END;                                                                    02883400
    COMMENT WE ATTEND EACH FILE ACCORDING TO                            02883600
    BO STATE AND TYPE. NOTE THE CHECKS WHICH APPLY.                     02883800
    NOTE THAT PB FILES GET FILEOPENED WEIRDLY.                          02884000
    WHILE THIS MAY CONFUSE A SNEAKY NORMAL STATE WATCHER,               02884200
    IT SHOULD MARKEDLY EASE NORMAL OPERATIONS.                          02884400
    NOTE THAT (WITHIN A FILE) ADDED OR DELETED BLOCKS OR RECORDS        02884600
    MAY AFFECT POSITIONING OR LATER OPERATIONS DISASTROUSLY.            02884800
    FINALLY, NOTE THAT POSITIONING ISN-T LOGGED;                        02885000
ML[0]~0;   %PERIOD ON TANK LIST                                         02885200
D~[ML[ML[NOT 0]]]&16[8:38:10];   %KERNAL LEFT THIS ZEROED               02885400
W~[S[16]]&32[8:38:10];   %Y=Z=N=0: W EMPTY. POOL GROWS FIRST            02885600
U~-1;   %NO UNIT YET                                                    02885800
OLD~S[1].[8:5]; NEW~S[1].[13:5];                                        02886000
BL: TK~ML[Q].[CF];   %LOOP START                                        02886200
FIB~(IF COBOL THEN [M[TK+2]]&20[8:38:10] ELSE M[TK+4]);                 02886400
IF STATE.[42:1] THEN GO OPENED;   %CLOSED/RELEASED                      02886600
IT~FIB[4].[8:4];   %INTERNAL TYPE CODE                                  02886800
FB~FNUM INX PRT[X,3];   %THIS IS LIKE NEW. SEE RSUFFIX                  02887000
STREAM(FB,D~[RL]);   %RDC                                               02887200
BEGIN SI:=FB;SI:=SI+16;DS:=3OCT;DS:=5OCT;DS:=OCT END;                   02887400
GO GET[IT];   %TYPE CASE: EXIT TO EP                                    02887600
MT:      I~0; K~15; IF U}0 THEN GO MTX;                                 02887800
         IF OLD!0 THEN IF LUN=OLD-1 THEN   %REELER REOPEN               02888000
         BEGIN OLD~0; U~NEW;   %SUPPRESS CHECK                          02888200
              IF (NA AND NB).[3:1] THEN   %IT-S MARKED RIGHT            02888400
              IF (NA.[6:42] EQV FB[0])=(NOT 0)                          02888600
              AND (NB.[6:42] EQV FB[1])=(NOT 0)                         02888800
              THEN   %LABELS RIGHT. NOTE BUG: CHECK NOT COMPLETE        02889000
              BEGIN NB.[1:5]~@20; NA.[1:5]~0; GO MTX END;               02889200
              OLD~NEW~99;                                               02889400
              COMMENT WE LOST THE REELER, ONCE IT-S FOUND               02889600
              WE WILL TRY ARRANGING THAT                                02889800
              1. IT-S POSITIONED WITH BINARY MODE                       02890000
              2. WE POSITION IT AFTER THE MEM-DUMP                      02890200
              3. IT-S THE SAME ONE FOUND BY REELER                      02890400
              HINT: CHECK AFTER EOF-S IN REPORT;                        02890600
         END;                                                           02890800
         WHILE FIND DO EI: BEGIN S[U]~D[U]~0; LOSE; REPORT END;         02891000
         IF PRNTABLE[U].[1:1]!FIB[10].[1:1] THEN                        02891200
         BEGIN J.[39:1]~1; GO EI END;                                   02891400
         D[U]~5&TINU[U][3:3:5]&@43[19:42:6]   %19,23,24: 1 WD READ DONE 02891600
         &FIB[13][21:24:1];   %GUESS MODE IS RIGHT                      02891800
         RRRMECH~TWO(U) OR RRRMECH;                                     02892000
         IF NEW=99 THEN IF WRONGREELER THEN GO EI ELSE ELSE             02892200
         IF (S[U]~BC-TRANSACTION[U])<0 THEN BEGIN J~2; GO EI END;       02892400
         W[FW(Z)]~U&Q[CTF];   %THROW IT IN POOL                         02892600
         GO BANG;                                                       02892800
CD:      I~32; K~PSEUDOMAXT; WHILE FIND DO                              02893000
         BEGIN LOSE; REPORT END;                                        02893200
         COMMENT WE DON-T FIND IT UNLESS IT-S CURRENT IN THE DECK;      02893400
         L~LUN-32; DO UNTIL ML[J~J+1].[CF]=L;  %GET OLD CIDROW SNAP     02893600
         H~[M[ML[J].[FF]+2]]&94[8:38:10];                               02893800
         J~U-32; COMPLEXSLEEP((M[CIDTABLE[J,0]-2]                       02894000
         AND M[CIDTABLE[J,1]-2]).[19:1]);                               02894200
         G~CIDROW[J];   %NO CONTROL LOSS NOW                            02894400
         IF (H[0].[CF]<H[1])!(G[0]<G[1]) THEN   %OUT OF SYNC            02894600
         BEGIN P(G[0]); G[0]~G[1]; G[1]~P(XCH) END;                     02894800
         G[3].[CF]~H[3];   % RECORD COUNT (AVOID AFFECTING RESTART)     02895000
         G[4]~H[4];   %NEXT CONTROL CARD   (HUH)                        02895200
         G[5]~H[5];   %RECORDS USED (THIS BLOCK)                        02895400
         MOVE(30,H INX 32,G INX 32); MOVE(30,H INX 64,G INX 64);        02895600
         FORGETSPACE(H);   %THEY BETTER ALL GO THIS WAY                 02895800
         FORGETSPACE(G.[FF]-2); CIDROW[J].[FF]~0;                       02896000
         %WHAT ABOUT DISK ADDRESSES, IOD ERROR FIELDS, CC MATCH,Q       02896200
         GO EP;                                                         02896400
DK:      H~FIB[14]; CHECK; U~HEAD;                                      02896600
         IF NOT C THEN   %IT HAS BUFFERS TO RE-ADDRESS                  02896800
         BEGIN L~2; ADDRESS;                                            02897000
              IF FIB[4].[27:3]=2 THEN   %UPDATE: MORE ADDRESSES         02897200
              BEGIN L~1; ADDRESS END                                    02897400
         END;                                                           02897600
$ VOID                                                                  02897800
         MOVE(20,[G[10]],[H[10]]); FORGETSPACE(G); U:=18;               02898000
         GO EP;                                                         02898200
PB:      COMMENT HERE-S WHERE THE STACK GETS BIG.                       02898400
         PHONY CLOSE, FILEOPEN, AND MAP;                                02898600
         P(M[J~ALPHA],FIB[6],FIB[7],FIB[16],FIB[17],FIB[19]);           02898800
         TYPE~3; FIB[5]~SELF&0[FTF]&1[39:44:4];                         02899000
         K~HEAD; HEAD~FIB[6]~FIB[7]~0;                                  02899200
         FIB[14].[FF]~I~P(DUP).[CF];                                    02899400
         M[J]~SELF&0[2:2:1]&1[25:47:1]&(J+1)[CTC];                      02899600
         IF NOT (UNLABELED OR COBOL) THEN   %PITCH ALGOL LABEL          02899800
         BEGIN FORGETSPACE(M[TK+5].[CF]-2);                             02900000
              M[TK+5]~SELF&P(0,XCH)[8:8:10]                             02900200
         END;                                                           02900400
         IF IT=12 THEN FORGETSPACE(FIB[14].[3:15]); %PBD HEADER         02900600
         L~P(0,RDS)-([L] INX 0); MOVE(L,[L] INX 1,I+18);                02900800
         P([L],STS); SAVEOPEN(J); P([L] INX L,STS);                     02901000
         MOVE(L,I+18,[L] INX 1);       %THIS RESTORES THE WRECK         02901200
         IF TERMIX.[CF]=X THEN COOL;   %ITS CLOSED                      02901300
         MOVE(36,FIB[14] INX 54,I+54);   %FILEOPEN LEAVES TWO RECORDS   02901400
         FORGETSPACE(FIB[14].[CF]-2); %NEW HOPER                        02901600
         FIB[14]~SELF&I[CTC]&(I+36)[CTF]; HEAD~K;U~LUN;IT~FIB[4].[8:4]; 02901800
         FIB[19]~P(XCH); FIB[17]~P(XCH); FIB[16]~P(XCH);                02902000
         FIB[7]~P(XCH); FIB[6]~P(XCH); M[J]~P(XCH);                     02902200
         M[K]~M[K-1]~SELF&U[8:38:10];                                   02902400
         M[K-2].[3:6]~3; FIX;                                           02902600
         GO OPENED;                                                     02902800
LP:      WHILE FOND DO REPORT;                                          02903000
         RRRMECH~TWO(U) OR RRRMECH;                                     02903200
         GO EP;                                                         02903400
MTX:     PRNTABLE[U].[15:15]~ALPHA;                                     02903600
         GO EP;                                                         02903800
CR:DR:CP:                                                               02904000
SP:                                                                     02904200
DC:                                                                     02904400
PP:                                                                     02904600
PR:                                                                     02904800
RM:                                                                     02905000
COMMENT JUST CLOSE ODD STUFF LEFT C/RET AT BO;                          02905200
FIB[5].[41:2]~1; GO OPENED;                                             02905400
EP: COMMENT NOW MARK IT A FILE;                                         02905600
M[TK]~SELF&ML[Q][3:3:6];                                                02905800
LUN~U;                                                                  02906000
RDCTABLE[U].[8:6]~X;                                                    02906200
FIX;                                                                    02906400
    %NOTE: NEXT STARTIMING HANDLES FPB                                  02906600
IF C THEN GO OPENED;   %NO BUFFERS TO MARK                              02906800
COMMENT TAG MEMORY, BUFFER LINKS;                                       02907000
I~J~HEAD; K~M[I-1]; DO   %GETBUFFERS LEFT THIS FOR US. HOW NICE.        02907200
BEGIN M[J-2].[3:6]~3;                                                   02907400
    M[J]~SELF&U[8:38:10];                                               02907600
    M[J+K]~SELF&U[8:38:10]                                              02907800
END UNTIL (J~M[J].[FF]-2)=I;                                            02908000
STARTIMING(FNUM,U);                                                     02908200
OPENED:   %FILEOPEN FIXES TAG 2 LEFT ON CLOSED/RELEASED                 02908400
U~-1;    %NO UNIT NOW                                                   02908600
IF (Q~ML[Q].[FF])!0 THEN GO BL;                                         02908800
IF Z!Y THEN BANG:   %THERE-S SOMETHING IN W                             02909000
BEGIN J~0; IF Z!N THEN REPORT;   %TAPES TO SPACE                        02909200
    IF U=L THEN GO MTX;   %SHORTCUT: LOCALS INTACT                      02909400
    IF U=99 THEN GO OPENED;   %SHORTCUT II                              02909600
    L~W[FW(Y)].[FF];   %REOPEN HEAD OF QUEUE                            02909800
    U~W[Y].[CF];                                                        02910000
    ML[L]~SELF&ML[Q][FTF];   %L NEXT                                    02910200
    Q~L; GO BL                                                          02910400
END   %OF SETUP, LOOP.                                                  02910600
END OF PHONY FILE OPEN;                                                 02910800
PROCEDURE RSUFFIX;                                                      02911000
BEGIN COMMENT FILL PLACES AS REQD,                                      02911200
                   RESTART FILES,                                       02911400
                   RELEASE BREAK FILE,                                  02911600
                   AND RETURN TO BUSINESS;                              02911800
NAME ML;           % ML,MS, DA ARE PARALLEL AS PER BO.                  02912000
ARRAY S[*];        % SEG ZERO WITH JAR ROWS, REOPEN POOL                02912200
INTEGER Q;         % HEAD OF TANK LIST. ML,...,R MUSN-T MOVE.           02912400
ARRAY R[*],H=S[*]; % PRT, JAR                                           02912600
INTEGER ARRAY B=Q[*];   % DALOC                                         02912800
NAME MS,DA;                                                             02913000
INTEGER RS,Z,N,    % TEMPS                                              02913200
    I,J,K,L;                                                            02913400
REAL T,MSCW=-1,RCW=+0;                                                  02913600
DEFINE SN=2#,                                                           02913800
    MLN=29#,                                                            02914000
    X=P1MIX#,                                                           02914200
    ALL=I~0; WHILE ((T~ML[I~I+1]) INX 0)!0 DO#,                         02914400
    SPECIAL=ML[I:=I+1]:=T:=(*P(DUP))&GETSPACE(ML[I].[FF],0,0)[CTC]#;    02914600
SUBROUTINE FLIP;   % SEE ML IN BREAKOUT, RESTART                        02915000
                   % L LIST OFFSET                                      02915200
                   % N ML[NOT 0]                                        02915400
                   % Q BUFFER                                           02915600
    COMMENT THIS DEVELOPS MS OR DA PARALLEL TO ML;                      02915800
BEGIN IF (K~(I~N) MOD MLN)=0 THEN K~MLN;                                02916000
    DA:=[M[SPACE(N)]];                                                  02916200
    J~S[0].[8:25];   %HEAD OF LISTS                                     02916400
    DO   %READ AND MOVE THE LIST                                        02916600
    BEGIN DISKWAIT(-Q,MLN+1,J INX L+S[J.[FF]]);                         02916800
         J~M[Q INX MLN]; MOVE(K,Q,[DA[I~I-K]]);                         02917000
         K~MLN                                                          02917200
    END UNTIL I=0;   %J=0 HERE, OR ELSE                                 02917400
END;                                                                    02917600
SUBROUTINE HOP;    %R USERS PRT                                         02917800
    COMMENT THIS FORGETS OUR STACK AND GETS US OVER TO THE USER-S;      02918000
BEGIN K~P(0,RDS)-([MSCW] INX 0)+1;   %NO PUSH                           02918200
    MOVE(K,[MSCW] INX 0,R[8] INX 1);                                    02918400
    FORGETSPACE([MSCW]);   %WE-RE AT BOS.                               02918600
    P(0&(R[8] INX 2)[CTF],STF,R[8] INX K,STS);                          02918800
    RCW.[FF]~[MSCW]   %FORK LEFT MSCW OK, SO WE JUST FIX RCW            02919000
END OF HOP;                                                             02919200
REAL SUBROUTINE SPOT;   %J OVERLAY DISK ADDRESS                         02919400
    COMMENT THIS JUST INTERPRETS AN OVERLAY DISK REFERENCE;             02919600
SPOT~J~B[J.[33:6]+P(DUP)-1]+J.[39:9];                                   02919800
SUBROUTINE GETIT;  % I ML INDEX                                         02920000
    COMMENT THIS GETS SOMETHING FROM THE BREAK FILE                     02920200
    ACCORDING TO ITS ML ENTRY, THEN CORRECTS                            02920400
    THE AREA-S MEMORY LINKS. NOTE THAT IT USES T IN LIEU OF ML[I]       02920600
    TO SUIT SNAPS AND TANK LISTING,                                     02920800
    AND THAT T.[CF] NOW TELLS WHERE THE AREA IS.                        02921000
    THE KERNAL LEFT ML[I] NEGATIVE;                                     02921200
BEGIN K~T INX 1;                                                        02921400
    N~DA[I].[CF]+S[DA[I].[FF]]; L~T.[FF];                               02921600
    IF (Z~L MOD 1020)=0 THEN Z~1020; L~L-Z;                             02921800
    DO DISKWAIT(-(K+L+1),Z,Z:=N+L DIV 30)                               02922000
    UNTIL (L~L-Z~1020)<0;                                               02922200
    M[K]~MS[I];   %RESTORE ML2                                          02922400
    %NOTE: WE PRESERVE ALL FROM BO BUT MIX AND LINKS.                   02922600
    M[K-1]~(*P(DUP))&P(ABS(T),XCH)[18:18:30]&X[9:42:6]   %AND ML1       02922800
END;                                                                    02923000
    COMMENT WE MARK THE JAR TO SHOW A RESTART                           02923200
    HERE FOR CONVENIENCE- SAKE. WE NEED IT FIXED BEFORE THE             02923400
    NEXT PRESENCE BIT.                                                  02923600
         WE GET TOP CODE, SEGMENT DICTIONARY,FSROW, INTABLE,            02923800
    STACK/PRT AND SPECIAL STUFF FIRST, RESTORING NORMAL JOB STRUCTURE.  02924000
    THIS IN THE NECESSARY ORDER. WE LINK THE JOB TO THE SYSTEM MORE,    02924200
    AND DISABLE THE KERNAL/OPERATOR DIALOG, TOO;                        02924400
ML~M OR GRSD[X].[18:30];                                                02924600
H~JARROW[X]; RS~H[8];                                                   02924800
DISKWAIT(-((I:=GETSPACE(48,0,0)+1)+1),30,H[10]); %READ SEG ZERP AGAIN   02925000
MOVE(20,[H[10]],I+11);   %MOVE JAR ROWS THERE                           02925200
H[10]~0; H[9]~1; S~H&(I+1)[CTC];   %MARK IT A RESTART                   02925400
RESTARTING~1023; COMMENT PROTECT JAR FROM RESTART. NOW GET DA AND MS;   02925600
Q:=SPACE(MLN+1);                                                        02925800
N~ML[NOT 0];                                                            02926000
L~1; FLIP; MS~DA;   %GET MS                                             02926200
L~2; FLIP;   % GET DA                                                   02926400
FORGETSPACE(Q);                                                         02926600
COMMENT PLACE THE STACK/PRT.                                            02926800
    WE FIRST REPLACE WHAT-S NEEDED FOR TERMINATION;                     02927000
    T~ML[I~N-SN-1];                                                     02927200
    GETIT; NFO[(X-1)|NDX+2].[CF]~K+1;   % GETIT GOT K.                  02927400
    PRTROW[X]~R~S[4];                                                   02927600
    HOP;   %SWITCH TO USER STACK                                        02927800
    ML[I]~0;   %NEW STOPPER                                             02928000
    IF S[2].[1:1] THEN   %COBOL JOB RESTARTING                          02928200
    IF R[@25]!0 THEN   %IT HASN-T ITS SAME AREA ANYMORE                 02928400
    R[@25]~(*P(DUP))&1[CTC]&0[2:2:1];   %NEXT P-BIT HERE SAVES SYSTEM   02928600
    COMMENT WE DON-T PROVIDE MAILBOX CORRESPONDENCE.                    02928800
    ASSUMING MASTER AND SLAVES ALL BROKE, AND EI HALTED THEM,           02929000
    NONE WILL GO FAR TILL SOME OTHER HAS RESTARTED.                     02929200
    BUT, RSUFFIX LEAVES CURRENTLY IMMOVABLE OBJECTS (INTABLE, FSROW,...)02929400
    ASSOCIATED WITH EACH RESTART. RESTARTS, TOO, MUST BE ABLE TO EOJ    02929600
    TO ALLOW OTHER RESTARTS;                                            02929800
COMMENT NOW THE FSROW AND INTABLE;                                      02930000
    STREAM(Q~FSROW[X]~[M[GETSPACE(4,0,1)+2]]&4[8:38:10]); DS~32 LIT "0";02930200
    INTABLEROW[X]~[M[K~GETSPACE(INTSIZE,1,1)+2]]&INTSIZE[8:38:10];      02930400
    MOVE(INTSIZE,K-1,K);   %HUH (SEE SELECTION)                         02930600
COMMENT NOW THE DALOCROW. NOTE REVERSE SS ORDER;                        02930800
    SPECIAL; GETIT; DALOCROW[X]~B~[M[K+1]]&T[8:23:10];                  02931000
    N~B[0] INX 0; L~(S[2].[FF]-10)|RS+S[2].[CF]-CHUNKSIZE;              02931200
    FOR K~1 STEP 2 UNTIL N DO                                           02931400
    B[K]~S[(L~L+CHUNKSIZE) DIV RS+10]+L MOD RS;                         02931600
COMMENT NOW THE FPB;                                                    02931800
    SPECIAL; GETIT; NFO[(X-1)|NDX]~R[3]~[M[K~K+1]]                      02932000
         &(IF (L~T.[FF])=1 THEN 0 ELSE L)[8:38:10];                     02932200
    IF (L~L-1)>0 THEN   %RENEW FB                                       02932400
    DO M[K+L-1].[24:18]~M[K+L]~0 UNTIL (L~L-ETRLNG)<0;                  02932600
COMMENT NOW THE SD;                                                     02932800
    J~(GRSD[X]~(*P(DUP))&S[1][18:18:30]) INX 0;                         02933000
    K:=GETSPACE(L:=S[3].[FF]+1,1,1)+2;DISKWAIT(-K,L,SPOT);              02933200
    NFO[(X-1)|NDX+1]~R[4]~[M[K]];                                       02933400
COMMENT NOW THE TOP SEG;                                                02933600
    IF (T~ML[0])!0 THEN                                                 02933800
    BEGIN J~M[K~K INX MS[0]] INX 0; M[K].[FF]~T INX 2;   %FIX SD        02934000
         DISKWAIT(-(T INX 2),T.[FF],SPOT);                              02934200
         M[T INX 1]~MS[0];   %ML2                                       02934400
         M[T]~(*P(DUP))&P(ABS(T),XCH)[18:18:30]&X[9:42:6]   %ML1        02934600
    END;                                                                02934800
COMMENT NOW OVERLAY DISK. NOTE COM5 FAKEOUT;                            02935000
    N:=B[0] INX 0; Z:=SPACE(600);                                       02935200
    FOR I~1 STEP 2 UNTIL N DO                                           02935400
    BEGIN B[0].[CF]~I-1; J~B[I]; B[I]~K~GETUSERDISK(CHUNKSIZE);         02935600
         FOR L~0 STEP 20 UNTIL CHUNKSIZE-20 DO                          02935800
         BEGIN DISKWAIT(-Z,600,J+L); DISKWAIT(Z,600,K+L) END            02936000
    END; FORGETSPACE(Z); B[0].[CF]~N;                                   02936200
    OLAYMASK~OLAYMASK OR TWO(X); REPLY[X]~0;   %WAS OK,WY,DS            02936400
COMMENT USUAL TERMINATION APPLIES HEREAFTER.                            02936600
    GET ALL THE REST. REOPEN ALL THE FILES.                             02936800
    PRECLUDE FILECLOSE ON UNCHECKED FILES;                              02937000
JOBMESS(X,0,"RESTART","ED.",-0,-0);                                     02937200
FORGETSPACE(DIRECTORYSEARCH(JAR[X,0],ABS(JAR[X,1]),13)); SELECTION;     02937400
    COMMENT AS SOON AS NORMAL TERMINATION AND SELECTION                 02937600
    MAY APPLY, WE INFORM THE OPERATOR THAT THE JOB HAS RESTARTED.       02937800
    EI MAY OCCUR WHEN WE GET BACK TO BUSINESS.                          02938000
         NOTE THAT RESTARTS GET A BOJ MESSAGE, SO THIS MAY BE THE FIRST 02938200
    INDICATION OF RS. RECOGNIZING THE KERNAL-S EFFECT ON SYSTEM         02938400
    PERFORMANCE, THE OPERATOR MAY HAVE MONITORED ITS PROGRESS, THOUGH;  02938600
Q~0; ALL   %THE REST                                                    02938800
BEGIN IF P(T.[3:6],DUP)=3 THEN                                          02939000
    BEGIN P(DEL); T.[3:6]~2 END                                         02939200
    ELSE IF P(DUP,DUP)=4 OR P(XCH)=6 THEN   %FILE LIST IT               02939400
    BEGIN P(DEL); ML[I].[FF]~Q; Q~I; T.[3:6]~2 END                      02939600
    ELSE IF P=21 THEN   %IT-S A SNAP AND WASN-T PLACED                  02939800
    BEGIN T.[CF]~GETSPACE(T.[FF],2,0);                                  02940000
         ML[I]~MS[I]&T[CTF]   %MS TELLS REOPEN WHICH SNAP               02940200
    END;                                                                02940400
    GETIT;   %ONCE GOTTEN, AN AREA MIGHT NOT BE SAVE.                   02940600
    %WE COULDN-T OLAY IT AT BO, THOUGH.                                 02940800
END;   %RETURN: Q HEAD OF FILE LIST IN ML                               02941000
FORGETSPACE(MS); FORGETSPACE(DA);                                       02941200
COMMENT NOW REOPEN BROKEN FILES;                                        02941400
P([Q],STS); IF Q!0 THEN REOPEN;                                         02941600
FORGETSPACE(S);                                                         02941800
FORGETSPACE(ML);                                                        02942000
GO RETURN                                                               02942200
END OF RSUFFIX;                                                         02942400
PROCEDURE KERNAL; FORWARD;                                              02942600
PROCEDURE MOVETHEREST;                                                  02942800
BEGIN COMMENT THIS IS MORE OF MOVEIT.                                   02943000
    TO MOVE THE KERNAL ONE MUST BE ELSEWHERE;                           02943200
ARRAY C[*],D[*];                                                        02943400
REAL T,RCW=-0,                                                          02943600
    E=-3,   %EMPTIED LIST                                               02943800
    IT=E-1,                                                             02944000
    MP=E-2,                                                             02944200
    JR=E-3,                                                             02944400
    MC=E-4,                                                             02944600
    DC=E-5,                                                             02944800
    CD=E-6,                                                             02945000
    Q,U,V,                                                              02945200
    B=D,                                                                02945400
    I,J,K,L;                                                            02945600
LABEL ED,EP,PANIC;                                                      02945800
DEFINE SNORE=IF NOT STOREDY THEN SLEEP([TOGLE],STOREMASK)#,             02946000
    DL=FORGETSPACE#,                                                    02946200
    X=P1MIX#;                                                           02946400
SUBROUTINE NOW;    % J   SIZE OF AREA                                   02946600
                   % D AREA SITE                                        02946800
                   % I   NEW SITE                                       02947000
                   %STOREDY IS OURS ONLY IF WE NEED IT                  02947200
    COMMENT SEE KERNAL NOW;                                             02947400
BEGIN MOVE(J+1,(L~D INX 0)-1,I-1);                                      02947600
    M[I-2]~(*P(DUP))&M[L-2][1:1:14];                                    02947800
    M[L-2]~(*P(DUP))&(X OR @10200)[2:35:13];                            02948000
    M[L]~E; E~L   %LINK USELESS STUFF, FORGET IT ALL LATER              02948200
END OF NOW;                                                             02948400
SUBROUTINE SPACE;  % J  SIZE TO GET                                     02948600
                   % I  WHERE TO LEAVE ITS ADDRESS                      02948800
    COMMENT THIS JUST GETS SPACE FOR THE COPY;                          02949000
IF (I~GETSPACE(J,0,3)+2)=2 THEN GO PANIC;                               02949200
BOOLEAN SUBROUTINE BEDDED;   % D AREA SITE                              02949400
                             % J   SIZE                                 02949600
    COMMENT THIS JUST CHECKS FOR BED REFERENCES TO AN AREA;             02949800
BEGIN P(0);                                                             02950000
    U~(Q~D INX 0)+J;                                                    02950200
    IF (L~JOBNUM+2)>0 THEN DO IF P(BED[L~L-1] INX 0,DUP)}Q AND P(XCH)<U 02950400
    THEN P(DEL,1) UNTIL P(DUP) OR L=0; L.[47:1]~0;                      02950600
    BEDDED~P   % THERES AN ENTRY REFERENCING THE AREA                   02950800
END;                                                                    02951000
SUBROUTINE MOVEUSERDISK;                                                02951200
BEGIN J~(D~USERDISK).[8:10]-1; SPACE;                                   02951600
    IF NOT USERDISKREADY THEN SLEEP([TOGLE],USERDISKMASK);              02951800
    IF D NEQ USERDISK THEN FORGETSPACE(I) ELSE                          02952000
    BEGIN USERDISK~D&I[CTC]; NOW END                                    02952200
END;                                                                    02952400
SUBROUTINE MOVECID;   %CD CONTROL                                       02952600
    COMMENT A CID ROW INCLUDES TWO BUFFERS, AND INTERNAL                02952800
    REFERENCES THERETO. IT MAY HAVE AN ATTACHED LABEL.                  02953000
    WHEN IN USE, IT MAY HAVE REFERENCES IN A STACK,                     02953200
    THE BED, AND I/O QUEUES.                                            02953400
         ANYONE MAY WATCH IT WITHOUT LOSING CONTROL.                    02953600
    THERE ARE THREE OTHER DISTINCT CASES:                               02953800
         1. (NOT READY). IT MAY BE GONE. IF NOT, EXTERNALEND,           02954000
    DECKREMOVER, OR ENDOFDECK IS WATCHING IT GO, SO WE IGNORE IT.       02954200
         2. (IN USE). RATHER THAN INTERFERE WITH READEMFROMDISK,        02954400
    WE SUGGEST THAT READEMFROMDISK (BEING CALLED) MOVE IT.              02954600
    NO CALLER (CONTINUITYBIT, FETCH, FILEOPEN,FILECLOSE,OR STARTADECK)  02954800
    MAY WATCH THEN.                                                     02955000
         3. (READY BUT NOT IN USE). ONLY THIS CASE IS NECESSARY.        02955200
    IF RECENTLY IN USE, THERE MAY BE A READ DANGLING.                   02955400
    RATHER THAN COOLOFF, WE CHECK THAT INPUT IS COMPLETE.               02955600
    WATCHERS EITHER ARE CAREFUL OR CHANGE CASES FIRST;                  02955700
$ VOID                                                                  02955800
FOR U~0 STEP 1 UNTIL PSEUDOMAX DO                                       02956000
IF (CD AND TWO(U))!0 AND TERMIX.[CF]!X THEN                             02956200
ED: IF LABELTABLE[U+32]!@114 THEN   %ELSE IGNORE IT                     02956400
IF LABELTABLE[U+32]<0 THEN CIDTABLE[U,3].[2:1]~1   %READEM...TRIES      02956600
ELSE   %WE TRY                                                          02956800
BEGIN J~94; SPACE; K~I; B~CIDROW[U].[FF]-2;   %LABEL FIRST              02957000
    I~GETSPACE(J~13,0,0)+2;   %CAN-T SPACE TWICE HERE                   02957200
    IF P(LABELTABLE[U+32],DUP)=@114 OR P(XCH)<0 THEN   %CASE CHANGED    02957400
    BEGIN DL(K); DL(I); GO ED END;                                      02957600
    IF NOT (M[CIDTABLE[U,0]-2] OR M[CIDTABLE[U,1]-2]).[19:1] THEN       02957800
    BEGIN DL(K); DL(I); GO EP END;   %DANGLING INPUT: IGNORE IT         02958000
    IF B<0 THEN DL(I)   %NO LABEL. WHY,Q.                               02958200
    ELSE BEGIN NOW; CIDROW[U].[FF]~I+2 END;                             02958400
    D~CIDROW[U]; J~94; I~K; NOW; CIDROW[U].[CF]~I;                      02958600
    D~[M[I]]&2[8:38:10]; J~I-L;   %DELTA                                02958800
    P(0,1); DO M[(D[P(DUP)]~(*P(DUP))+J)-2]~                            02959000
    (*P(DUP))&(P(DUP).[CF]+J)[CTC] UNTIL P=0;                           02959200
EP: END OF MOVECID;                                                     02959400
SUBROUTINE MOVEREADERS;                                                 02959600
    COMMENT MOST WATCHERS ARE CAREFUL.                                  02959800
    CONTROLCARD, FACED WITH AN INVALID LABEL OR DATA CARD,              02960000
    GOES TO INCSC AND MAY BE TROUBLED. SO, WE DON-T BOTHER CONTROLCARD. 02960200
    NOTE: READERS AREN-T FORGOTTEN ENOUGH, SO MORE WATCHERS ARE DUE;    02960400
BEGIN J~13; SPACE;                                                      02960600
    IF (B~READERA.[CF]-2)>0 AND LABELTABLE[23]!(-@14) THEN              02960800
    BEGIN NOW; READERA.[CF]~I+2; SPACE END;                             02961000
    IF (B~READERB.[CF]-2)>0 AND LABELTABLE[24]!(-@14) THEN              02961200
    BEGIN NOW; READERB.[CF]~I+2 END ELSE DL(I)                          02961400
END OF MOVEREADERS;                                                     02961600
SUBROUTINE MOVEINTRNSC;                                                 02961800
COMMENT THERE ARE THREE TYPES OF INTRNSC WATCHERS:                      02962000
$VOID 02962111                                                          02962100
                                                                        02962110
    1. OLAY, WHICH IS CAREFUL.                                          02962200
    2. MAKEPRESENT, WHICH SLEEPS ON AN ENTRY.                           02962400
    3. CHANGEINTRINSIC AND INTRINSICTABLEBUILDER.                       02962600
    CI SLEEPS ON NULLMIX, SO WE CANT WAIT TILL ITS DONE.                02962800
    CURRENTLY, WE PRECLUDE CI (IN KEYIN) AND CANT BE SELECTED UNTIL     02963000
    INTSIZE!0 (AT WHICH TIME THE INITIAL INTRINSICTABLEBUILDER IS DONE);02963200
BEGIN J~(D~INTRNSC).[8:10]; SPACE;                                      02963400
    WHILE BEDDED DO SNOOZE(PRYOR[BED[L].[3:5]].[FF]-1,1,1);   %P-BIT CHK02963600
    NOW;                                                                02963800
    INTRNSC~D&I[CTC]                                                    02964000
END;                                                                    02964200
$INCLUDE 02968601, IF DATACOM AND NOT INQUIRY;                          02964400
SUBROUTINE DCQPTKILL;                                                   02964600
COMMENT DCQPTSTOPPED TELLS IF THE STACK IS IN USE;                      02964800
BEGIN IF NOT DCQPTSTOPPED THEN                                          02965000
    SLEEP([TOGLE],0&1[26:47:1]);                                        02965200
    B~DCQPTSTACK+1; DCQPTSTACK~0;                                       02965400
    M[B-2]~(*P(DUP))&(X OR @10200)[2:35:13];                            02965600
    M[B]~E; E~B                                                         02965800
END;                                                                    02966000
SUBROUTINE MOVEC;  % MC CONTROL                                         02966200
                   % C[K] STATION OR ATTACHED                           02966400
COMMENT GET MOVES STATION ROWS, TACH MOVES ATTACHED ROWS,               02966600
    SO EVERYONE WATCHES THEM CAREFULLY.                                 02966800
    GET AND TACH CHANGE C[K] IF THEY MOVE IT;                           02967000
WHILE (K~K-1)}0 DO IF (MC AND TWO(K))!0 THEN                            02967200
IF NOT P(D~C[K],TOP,XCH,DEL) THEN   %IT-S THERE                         02967400
IF TERMIX.[CF]=X THEN K~0 ELSE   %WE-RE THERE,TOO                       02967600
BEGIN J~D.[8:10]; SPACE;                                                02967800
    IF (C[K] EQV D)!(NOT 0) THEN DL(I)                                  02968000
    ELSE   %WE MOVE IT                                                  02968200
    BEGIN NOW;C[K]~D&I[CTC] END                                         02968400
END;                                                                    02968600
SUBROUTINE MOVEKERNAL;                                                  02968800
COMMENT THE KERNAL IS PRESENT IN OUR STACK ONLY.                        02969000
    WE DON-T ALLOW SELECTING A RESTART UNTIL                            02969200
    IT ISN-T IN OUR STACK;                                              02969400
BEGIN J~(D~*P(.KERNAL)).[8:10];                                         02969600
    SPACE; NOW;   %FIX ALL REFS                                         02969800
    RCW~RCW&((P(DUP) INX 0)+I-L)[CTC];                                  02970000
    M[P(.KERNAL)]~(*P(DUP))&I[CTC]                                      02970200
END;                                                                    02970400
    %NOTE: WE IGNORE REPLY CHECK (OK,WY,DS) HERE                        02970600
         IF MP THEN MOVEUSERDISK;                                       02970800
         IF MP.[46:1] THEN MOVEINTRNSC;                                 02971000
         IF MP.[44:1] THEN MOVEKERNAL;                                  02971200
         IF CD!0 THEN MOVECID;                                          02971400
         IF MP.[43:1] THEN MOVEREADERS;                                 02971600
$ INCLUDE 02972801,IF DATACOM AND NOT INQUIRY;                          02971800
         IF MP.[45:1] THEN DCQPTKILL;                                   02972000
         IF MC!0 THEN                                                   02972200
         BEGIN K~16; C~STATIONROW; MOVEC END;                           02972400
         IF (MC~DC)!0 THEN                                              02972600
         BEGIN K~MIXMAX+1; C~ATTACHED; MOVEC END;                       02972800
PANIC:   %NO MEM... WE LEFT A LITERAL OR TWO DANGLING.                  02973000
END OF MOVETHEREST;                                                     02973200
PROCEDURE KERNAL;   %THIS IS THE RESTART SPACE PIRATE                   02973400
    COMMENT RESTART FORKS THIS TO ARRANGE                               02973600
    PLACING THE AREAS ML DESCRIBES. (GRSD[X] NOW DESCRIBES ML).         02973800
    WITH THAT GOAL, IT MAKES SUCCESSIVE PASSES AT MEMORY,               02974000
    PLACING EACH AREA AS SOON AS POSSIBLE THEN TRYING TO MOVE           02974200
    WHATEVER INTERFERED.                                                02974400
         THE MOVE ROUTINES ARE MODULAR, SOME ARE REQUIRED, AND SOME NOT.02974600
    EACH TIES RESTART CLOSER TO THE SYSTEM AND RENDERS                  02974800
    MAINTAINENCE MORE DIFFICULT. UNNECESSARY ROUTINES SHOULD BE JUDGED  02975000
    FOR THIS CONVENIENCE OVER THAT OF RESTART.                          02975200
         THE KERNAL-S ITERATION ISN-T STRICTLY CONVERGENT,              02975400
    BUT MAY BE ENDED AT THE OPERATOR-S WHIM. HE MAY INITIATE A DIALOG   02975600
    TO MONITOR THE KERNAL-S PROGRESS;                                   02975800
BEGIN                                                                   02976000
NAME ML;           %SPACE REQUESTS,R                                    02976200
INTEGER N;         %ML SIZE, (MUST BE AT ML+1)                          02976400
DEFINE X=P1MIX#,                                                        02976600
    SN=2#,                                                              02977000
    SNORE=IF NOT STOREDY THEN SLEEP([TOGLE],STOREMASK)#,                02977200
    SET= INX 0 THEN#,                                                   02977400
    WHEN= ELSE IF#;                                                     02977600
NAME MSCW=-1;      %FORK LEAVES NO PARAMETERS                           02977800
ARRAY D[*],        % SEE NOW                                            02978000
    R[*];          %ML2 STACK FOR MIX ZERO CODE AREAS                   02978200
INTEGER C,         %COUNT OF ALLOCATED AREAS|3, DONE WHEN C=N           02978400
    QMAX, MINI,    % SEARCH LIMIT, STARTING POINT                       02978600
    Y,             %R SUBSCRIPT                                         02978800
    Z,S,           % HOLDS E IN MOVEIT, IMPOSSIBLE RESULTS              02979000
    Q,U,V,                                                              02979200
    I,J,K,L;                                                            02979400
LABEL ZZ,EL,EX,FREE,PANIC;                                              02979600
REAL T, ML2=-2;                                                         02979800
    % * * * ALL LOCALS HEREAFTER ARE T RELATIVE * * *                   02980000
REAL E=T+7,        %OVERLAP LIST                                        02980200
    IT=E-1,        %MIX                                                 02980400
    MP=E-2,        %47 USERDISK                                         02980600
                   %46 INTRNSC                                          02980800
                   %45 DCQPTSTACK                                       02981000
                   %44 KERNAL                                           02981200
                   %43 READERA OR READERB                               02981400
                   %42 ML                                               02981600
                   %41 OUR STACK                                        02981800
    JR=E-3,        %JAR                                                 02982000
    MC=E-4,        %STATION                                             02982200
    DC=E-5,        %ATTACHED                                            02982400
    CD=E-6;        %CIDTABLE                                            02982600
DEFINE BRANCH(BRANCH1)=                                                 02982800
    P(.BRANCH1,.NT4,~,[ML2],DUP,STF,STS,MKS,*NT4,XCH,COC)#;             02983000
BOOLEAN SUBROUTINE ALIVE;   COMMENT THIS FIELDS DS KEYIN;               02983200
BEGIN IF TERMIX.[CF]=X THEN BEGIN TERMIX~-TERMIX; BRANCH(RSDSED) END;   02983400
    ALIVE~TRUE                                                          02983600
END;                                                                    02983800
SUBROUTINE CHECK;  %Z=E   COULDN-T MOVEIT                               02984000
                   %IT   WHICH MIXES INTERFERRED                        02984200
                   %A REPLY IS DUE                                      02984400
    COMMENT THIS FIELDS OK AND WY RESPONSES. FOR WY, IT FIRST TELLS     02984600
    WHETHER MOVEIT JUST DID ANYTHING. NEXT, WHICH MIXES INTERFERED;     02984800
BEGIN IF NOT WHYSLEEP(@412) THEN   %TELL IT LIKE IT IS                  02985000
    BEGIN JOBMESS(X,0,"RESTART"," IS ",                                 02985200
         (IF Z=E THEN "WAITING" ELSE "MOVING"),-0);                     02985400
         K:=P(0,RDS); Z:=SPACE(14);                                     02985600
         J~0; FOR I~0 STEP 1 UNTIL MIXMAX DO                            02985800
         IF (IT AND TWO(I))!0 THEN BEGIN J~J+1; P(I) END;               02986000
         STREAM(J,Z);                                                   02986200
         BEGIN DS~6 LIT "--MIX:"; SI~LOC J;                             02986400
              J(SI~SI-16; DS~2 DEC; DS~LIT ",");                        02986600
              DI~DI-1; DS~12 LIT " IN THE WAY~"                         02986800
         END; P(K,STS); SPOUT(Z)                                        02987000
    END; REPLY[X]~-@412                                                 02987200
END OF CHECK;                                                           02987400
SUBROUTINE DETAILS;   %L ML1 SITE FOR INTERFERING AREA                  02987600
    COMMENT THIS SETS UP MOVEIT CONTROLS ASSUMING AREA L INTERFERED.    02987800
    SINCE WE MUST RESOLVE MULTIPLE INTERFERENCE, DOUBLE DETAILS DON-T   02988000
    MATTER;                                                             02988200
BEGIN P(Q); Q~L+2; IT~IT OR V~TWO(U~(T~M[L]).[9:6]);   %SAVE I,J,K,L,Q  02988400
    IF U=0 THEN   %MCP                                                  02988600
         IF T.[2:7]=1 THEN   %NON-SAVE CODE                             02988800
         R[Y~(Y+1) AND 15]~M[L+1]&Q[CTF]   %QUEUE IT                    02989000
         WHEN Q=USERDISK SET MP~MP OR 1                                 02989200
         WHEN Q=INTRNSC SET MP~MP OR 2                                  02989400
         WHEN T.[3:6]=20 THEN CD~CD OR TWO(M[L+1])    %HUH              02989600
         WHEN P(Q+2,DUP)=READERA.[CF] OR P(XCH)=READERB.[CF] THEN       02989800
         MP~MP OR 16   %WE MOVE READERS, TOO                            02990000
$ INCLUDE 02992201, IF DATACOM AND NOT INQUIRY;                         02990200
         WHEN Q=DCQPTSTACK+1 THEN MP~MP OR 4                            02990400
         WHEN T.[3:6]=5 THEN   %MAY BE STATION OR ATTACHED              02990600
              BEGIN FOR U~0 STEP 1 UNTIL 15 DO                          02990800
                   IF Q=STATIONROW[U] SET                               02991000
                   BEGIN MC~MC OR TWO(U); U~16 END;                     02991200
                   IF U!17 THEN   %IT WASN-T A STATION ROW              02991400
                   FOR U~1 STEP 1 UNTIL MIXMAX DO                       02991600
                   IF Q=ATTACHED[U] SET                                 02991800
                   BEGIN DC~DC OR TWO(U); U~MIXMAX END                  02992000
              END                                                       02992200
         ELSE   %MORE MCP STUFF LATER                                   02992400
    WHEN Q=JARROW[U] SET JR~JR OR V                                     02992600
    WHEN U=X THEN   %OURS NOT JAR                                       02992800
         IF Q=ML SET MP~MP OR 32                                        02993000
         WHEN Q=[MSCW] SET MP~MP OR 64;                                 02993200
    Q~P                                                                 02993400
END OF DETAILS;                                                         02993600
BOOLEAN SUBROUTINE IMPOSSIBLE;                                          02993800
                   % K=ML[I] INX 0                                      02994000
                   % M[J:L] FREE   (J=L POSSIBLE)                       02994200
                   % THIS SETS UP CONDITIONS FOR PLACEMENT              02994400
                   %WE JUST PLACE [K:Q] SINCE WE MUST PLACE             02994600
                   %ADJACENT AREAS.                                     02994800
    COMMENT THIS DECIDES WHETHER PLACEMENT IS POSSIBLE                  02995000
    OR (ALTERNATIVELY) WHETHER AND HOW AN "OVERLAP" MAY BE PLACED.      02995200
    IF A SUITABLE PORTION, AN "OVERLAP", OF AN AREA IS FREE             02995400
    FROM INTERFERENCE, WE GRAB IT FIRST;                                02995600
BEGIN P(S~Z~FALSE);   %S OR Z: OVERLAP                                  02995800
    IF M[J].[1:1] THEN   %J AVAILABLE                                   02996000
    BEGIN IF K!J AND K<J+3 THEN P(DEL,S~TRUE);                          02996200
         IF Q!L AND Q>L-3 THEN P(DEL,Z~TRUE);                           02996400
    END                                                                 02996600
    ELSE P(DEL,TRUE);   %J IN USE, SO J=L                               02996800
    IF S THEN IF Q}J+3 THEN K~J ELSE S~FALSE;                           02997000
    IF Z THEN IF K{L-3 THEN Q~L ELSE Z~FALSE;                           02997200
    IMPOSSIBLE~P                                                        02997400
END OF IMPOSSIBLE;   %NOTE ASSYMETRY                                    02997600
SUBROUTINE PLACEMENT;                                                   02997800
                   % I   ML INX FOR OUR AREA                            02998000
                   % J   ML1 SITE FOR PREVIOUS AREA                     02998200
                   % K   "  " OUR AREA                                  02998400
                   % L   "  " FIRST INTERFERING AREA                    02998600
                   % Q   "  " AREA AFTER OURS                           02998800
    COMMENT THIS PLACES A SAVE DATA AREA ACCORDING TO ITS CONTROLS.     02999000
    IT ASSUMES THAT AREA J IS AVAILABLE, AND THAT J,K,Q,L ARE OK.       02999200
    FOR OVERLAPS, IMPOSSIBLE SETS THE CONTROLS.                         02999400
         THIS MAINTAINS LEFTOFF AND AVAIL AS PER GETSPACE               02999600
    AND FORGETSPACE;                                                    02999800
BEGIN IF K!J THEN   %K}J+DELTA                                          03000000
    BEGIN M[J].[CF]~K; M[J+1]~(*P(DUP))&(K-J-2)[CTF] END                03000200
    ELSE   %K=J: DEL J FROM AVAIL LIST                                  03000400
    BEGIN M[(V~M[J+1])+1]~U~M[J+2];                                     03000600
         M[U]~(*P(DUP))&V[CTC];                                         03000800
         J~M[J].[FF]   %J MUST STILL BE PREVIOUS AREA                   03001000
    END;                                                                03001200
    M[K]~Q&J[CTF]&(X OR @10200)[2:35:13];   %ALL SAVE DATA FOR NOW      03001400
    M[K+1]~P(I,RDF);   %DEBUG AID                                       03001600
    IF Q=L THEN M[Q].[FF]~K                                             03001800
    ELSE   %Q{L-DELTA: AVAIL Q                                          03002000
    BEGIN M[Q]~-(L&K[CTF]);                                             03002200
         M[L]~(*P(DUP))&Q[CTF];                                         03002400
         M[Q+1]~(U~M[AVAIL])&(L-Q-2)[CTF];                              03002600
         M[M[Q+2]~AVAIL]~U&(M[U+1]~Q+1)[CTC];                           03002800
        % NOTE: WHATEVER WE PLACE ISN-T OLAYABLE, SO WE IGNORE LEFTOFF  03003000
    END                                                                 03003200
END OF PLACEMENT OF AREA I;                                             03003400
SUBROUTINE NOW;    % J SIZE OF AREA                                     03003600
                   % D AREA SITE                                        03003800
                   % I NEW SITE                                         03004000
                   % STOREDY IS OURS                                    03004200
    COMMENT THIS MOVES AN AREA, CORRECTS MEMORY LINKS, AND LISTS THE    03004400
    ORIGINAL FOR LATER REMOVAL;                                         03004600
BEGIN MOVE(J+1,(L~D INX 0)-1,I-1);                                      03004800
    M[I-2]~(*P(DUP))&M[L-2][1:1:14];                                    03005000
    M[L-2]~(*P(DUP))&(X OR @10200)[2:35:13];                            03005200
    M[L]~E; E~L   %LINK ORIGINALS                                       03005400
END OF NOW;                                                             03005600
SUBROUTINE MCPCODE;   %UNNECESSARY                                      03005800
COMMENT THERE ARE FOUR TYPES OF MCP CODE WATCHERS:                      03006000
    1. OLAY, WHICH IS PROTECTED BY STOREDY.                             03006200
    2. KEYIN, OPSET, WHYSLEEP, DATEOUT, SYSTEMFILE, AND ESPBIT,         03006400
    WHICH ARE CAREFUL.                                                  03006600
    3. CODE SAVERS, LIKE CONTROLCARD WHICH SAVES RESWDS.                03006800
    NOTE: SAVE TYPE ONE STUFF MAY NOT EVEN BE CODE.                     03007000
    4. THE KERNAL, WHO ISN-T LOOKING AT WHAT WE MOVE.                   03007200
    THERE ARE NO CI SAVERS;                                             03007400
IF (T INX 0)=P(.KERNAL) THEN MP~MP OR 8 ELSE     %MOVE KERNAL LATER     03007600
BEGIN   %T=R[Y]  INTERFERENCE AND PRT ADDRESSES                         03007800
    IF (I~GETSPACE(J~M[T].[8:10],0,3)+2)=2 THEN GO PANIC;               03008000
    COMMENT NO MEM ELSEWHERE WILL WARN OPERATOR AND ALLOW OTHERS TO GO; 03008200
    SNORE;   %OLAY CHECK                                                03008400
    D~M[T] INX M;   %IT-S A PROG. CHANGE IT TO SUIT NOW (OLAY,Q)        03008600
    IF (L~D INX 0)!T.[FF] THEN FORGETSPACE(I)                           03008800
    ELSE   %ITS STILL IN THE WAY                                        03009000
    IF M[L-2].[2:1] THEN FORGETSPACE(I)                                 03009200
    ELSE   % ITS NOT SAVE (RESWDS)                                      03009400
    BEGIN STOREDY~0;                                                    03009600
         IF OLAY(L-2) THEN FORGETSPACE(I)                               03009800
         ELSE   %WE CAN MOVE IT                                         03010000
         BEGIN NOW;                                                     03010200
              M[T]~(*P(DUP))&I[CTC];   %PRT                             03010400
              FOR Q~0 STEP 2 UNTIL JOBNUM DO   %SLEEPING STACKS         03010600
              BEGIN U~BED[Q].[FF];                                      03010800
                   DO IF (V~M[U] INX 0)}L AND (V~V-L)<J THEN            03011000
                   M[U]~(*P(DUP))&(V+I)[CTC]                            03011200
                   UNTIL (U~M[U].[FF]){64;   %WHY 64,Q                  03011400
                   IF P(BED[Q+1],TOP,NOT) THEN                          03011600
                   IF (V~P INX 0)}L AND (V~V-L)<J THEN                  03011800
                   BED[Q+1]~(*P(DUP))&(V+I)[CTC]                        03012000
                   ELSE ELSE P(DEL)                                     03012200
              END                                                       03012400
         END; STOREDY~1                                                 03012600
    END; PANIC:                                                         03012800
END OF MCPCODE;                                                         03013000
SUBROUTINE BATMAN;   %MOVE OUR STACK                                    03013200
BEGIN I:=SPACE(J:=128);                                                 03013400
    U~I-(K~(D~[MSCW]) INX 0);   %DELTA                                  03013600
    COMMENT NO NEED TO SNORE. OUR STACK IS SAVE;                        03013800
    NOW;   % E~L CHANGE DOESN-T SHOW WHERE IT COUNTS YET                03014000
    L~Q~P(0,RDF).[FF];   %FIX STACK TO FOOL OLAY                        03014200
    DO M[L+U]~(*P(DUP))&((L~P(DUP).[FF])+U)[CTF] UNTIL L=K;             03014400
    Q~0&(Q+U)[CTF];                                                     03014600
    P(0,RDS,U,+,STS,Q,STF); E~L  % REASSIGN E IN NEW STACK              03014800
END;                                                                    03015000
BOOLEAN SUBROUTINE BEDDED;                                              03015200
    COMMENT HELP MOVEJAR WAIT UNTIL NOBODY WANTS STOREDY;               03015400
BEGIN P(0); IF (L~JOBNUM)}0 THEN                                        03015600
    DO IF BED[L].[CF]=P(.TOGLE) THEN P(DEL,BED[L+1]=STOREMASK)          03015800
    UNTIL P(DUP) OR (L~L-2)<0;                                          03016000
    L~L+2; BEDDED~P OR (NOT STOREDY) OR (NOMEM!0)                       03016200
    COMMENT PRYOR[L].[FF] MAY BE ZERO;                                  03016400
END OF BEDDED;                                                          03016600
SUBROUTINE MOVEJAR;                                                     03016800
COMMENT JAR WATCHERS COME IN FIVE TYPES:                                03017000
    1. BREAKOUT, AND WATCHERS WHO JUST GETSPACE.                        03017200
    STOREDY AND NOMEM PROTECT THEM AGAINST US.                          03017400
    2. SELECTION, COM19, CHANGEABORT AND THE KERNAL, WHO ARE CAREFUL.   03017600
    3. RESTARTS OTHER FRIENDS, WHO AREN,T RUNNING.                      03017800
    4. COM5,RSDSED, AND SIGNOFF, WHO SET JARROW[K].[7:1].               03018000
    5. TERMINALMESSAGE, WHO HAS TERMIX;                                 03018200
BEGIN I:=SPACE(J:=30);                                                  03018400
    WHILE BEDDED DO                                                     03018600
    SNOOZE(PRYOR[BED[L].[3:5]].[FF]-1,[TOGLE],STOREMASK);               03018800
    IF P(TERMIX INX 0,DUP)=K OR P(XCH)=X                                03019000
    OR (P(JARROW[K],DUP)=0 OR P(XCH).[7:1]) THEN   %FORGET IT           03019200
    BEGIN FORGETSPACE(I); V:=0; K:=MIXMAX END                           03019400
    ELSE   %MOVE IT                                                     03019600
    BEGIN D~JARROW[K]; NOW;                                             03019800
         JARROW[K]~D&I[CTC]                                             03020000
    END                                                                 03020200
END;                                                                    03020400
SUBROUTINE MOVEIT; %IT,R,MP,... (SEE ABOVE)                             03020600
                    % TO ENSURE PLACEMENT PROGRESS,                     03020800
                    % EACH LINE THROUGH HERE MUST                       03021000
                    % EITHER LOSE CONTROL OR MOVE SOMETHING.            03021200
                   %IT MUST COVER CLEARED AREAS.                        03021400
    COMMENT THIS MOVES AREAS ACCORDING TO DETAIL CONTROLS.              03021600
    IT CAN MOVE ANYTHING OF OURS WHICH MIGHT INTERFERE, E.G. OUR STACK, 03021800
    ML, AND JAR. WE KEEP A JAR SIMPLY TO EASE DEALING WITH THE          03022000
    REST OF THE MCP. FOR INSTANCE, WITH A JAR AROUND, MOST KEYIN        03022200
    CHANGES WON-T NEED RESTART CHANGES.                                 03022400
    IT CAN MOVE ANY PERMANENT MCP AREAS, E.G. USERDISK,                 03022600
    NOT-IN-USE CID ROWS,                                                03022800
    INTRNSC, ATTACHED ROWS, DCQPTSTACK, AND STATION ROWS.               03023000
    FURTHER, IT CAN MOVE MCP CODE (INCLUDING THE KERNAL),               03023200
    IN-USE CID ROWS, READERA AND READERB.                               03023400
         IN FUTURE, IT MAY MOVE                                         03023600
    INTRINSICS,                                                         03023800
    LOAD CONTROL, FPBS, SEGMENT DICTIONARIES,                           03024000
    FS ROWS, INTABLE ROWS, OR DALOC ROWS.                               03024200
         THE CONTROLS INCLUDE BIT MASKS, IT (WHICH TELLS WHICH          03024400
    MIXES INTERFERED), AND R (A BOUNDED LIST OF INTERFERING MCP CODE    03024600
    OR INTRINSICS).                                                     03024800
         IF MOVEIT DIDN-T RESOLVE ANY INTERFERENCE, (ALLOW PLACING AT   03025000
    LEAST AN OVERLAP,) IT ALLOWS THE SYSTEM OTHER OPERATIONS,           03025200
    WHICH MUST (IN TIME) ALLOW THE KERNAL-S COMPLETION.                 03025400
         FINALLY, IT ATTENDS TO ANY OPERATOR RESPONSE;                  03025600
BEGIN Z~E; IF IT THEN   %MCP                                            03025800
    BEGIN IF R[Y]!0 THEN   %CODE QUEUED                                 03026000
         FOR Y~0 STEP 1 UNTIL 15 DO   %MOVE MIX ZERO CODE               03026200
         IF (T~R[Y])!0 THEN                                             03026400
         BEGIN IF ALIVE THEN MCPCODE;                                   03026600
              FOR I~Y STEP 1 UNTIL 15 DO                                03026800
              IF T=R[I] THEN R[I]~0                                     03027000
         END;                                                           03027200
         Y~0   %R[Y] INV INX FIX                                        03027400
    END OF MCP STUFF;                                                   03027600
    IF (IT AND V~TWO(X))!0 THEN   %OURS                                 03027800
    BEGIN IF MP.[42:1] AND ALIVE THEN   %ML                             03028000
         BEGIN D~ML;                                                    03028200
              I:=SPACE(J:=N+16);                                        03028400
              COMMENT NO NEED TO SNORE. ML IS SAVE;                     03028600
              NOW;                                                      03028800
              ML~D&I[CTC]; R~[ML[N]]&16[8:38:10];                       03029000
         END;                                                           03029200
         IF MP.[41:1] THEN BATMAN   %OUR STACK                          03029400
    END OF OURS;                                                        03029600
    FOR K~1 STEP 1 UNTIL MIXMAX DO                                      03029800
    IF (JR AND V~TWO(K))!0 THEN MOVEJAR;                                03030000
    IF TERMIX.[CF]=@1777                                                03030200
    AND IT THEN MOVETHEREST;                                            03030400
    IF Z=E THEN   %WE DIDN-T MOVE ANYTHING                              03030600
    SLEEP([CLOCK], NOT CLOCK);   %ALL GO                                03030800
    IF REPLY[X]>0 THEN CHECK;                                           03031000
    IT~MP~JR~MC~DC~CD~0                                                 03031200
END OF MOVEIT;                                                          03031400
BOOLEAN SUBROUTINE MORE;                                                03031600
                   % I ML INDEX                                         03031800
    COMMENT THIS FINDS WHAT-S LEFT TO PLACE;                            03032000
BEGIN DO UNTIL (T~ML[I~I+1])>0;   %SKIP PLACED AREAS                    03032200
    Q~(K~T INX 0)+ML[I].[FF]+2;                                         03032400
    MORE~K!0   %RETURN K,Q                                              03032600
END OF MORE;                                                            03032800
COMMENT START HERE;                                                     03033000
IF RESTARTING!(-X) THEN P(XIT);                                         03033200
P(0,0,0,0,0,0,0);   %BUILD T RELATIVES                                  03033400
COMMENT WHILE THEY-RE IN THE STACK, MAX DEPTH IS JUST OVER 120;         03033600
ML~M OR GRSD[X].[18:30]; N~ML[NOT 0]; R~[ML[N]]&16[8:38:10];            03033800
C~SN;   %COUNT STUFF WE NEEDN-T PLACE                                   03034000
QMAX~ML.[FF];                                                           03034200
MINI~(IF ML[0]=0 THEN   %R+1 EXECUTE                                    03034400
    P(C+1,.C,STD,0) ELSE -1);                                           03034600
I~MINI; J~N-SN-1; WHILE (I~I+1)<J DO   %IGNORE STACK,SS                 03034800
IF ML[I].[3:6]=21 THEN   %IT-S A SNAP AND NEEDN-T BE PLACED             03035000
BEGIN ML[I]~-(*P(DUP)); C~C+1 END;                                      03035200
ML[J+1].[CF]~0;   %FIRST OF SS: STOPPER                                 03035400
    COMMENT MAIN LOOP: PLACE SAVE DATA EXACTLY OVER AREAS ML DESCRIBES. 03035600
    WE ATTEND EACH AREA AS LITTLE AS IS EFFICIENT,                      03035800
    RATHER THAN EXHAUSTIVELY. THIS SINCE DETAILED MOVEMENT IS           03036000
    SLOW AND OFTEN NO HELP. WE PLACE AT MOST ONE OVERLAP PER AREA,      03036200
    IN PREFERENCE TO DETAILING, AND STOP DETAILING THEN;                03036400
ZZ: SNORE; STOREDY~0;                                                   03036600
WHILE E!0 DO   %CLEAR OVERLAPS AND ORIGINALS                            03036800
BEGIN I~M[E]; FORGETSPACE(E); E~I END;                                  03037000
I~MINI; L~MSTART;                                                       03037200
GO EX;   %SKIP PLACED AREAS                                             03037400
EL: DO UNTIL (L~M[L] INX 0)>K;   %SET UP J,K,L,Q.                       03037600
DO UNTIL (L~M[L].[FF]){K;   %TOO FAR: STEP BACK                         03037800
DO IF (T~M[L])>0 THEN   %IN USE                                         03038000
IF T.[2:1] THEN GO FREE   %SAVE                                         03038200
ELSE IF NOT OLAY(L) THEN GO FREE                                        03038400
UNTIL (L~T INX 0)}QMAX;                                                 03038600
IF M[L]<0 THEN L~M[L].[CF];   %NEXT AREA COULD BE FREE,TOO              03038800
FREE: COMMENT PLACE ANYTHING THAT FITS IN AREA J,                       03039000
    INCLUDING AN OVERLAP IF REQUIRED. STEP I AND CHECK FOR STOPPER;     03039200
J~(IF L{K THEN L ELSE M[L].[FF]);   %CAN-T SET J TILL IN CONTROL        03039400
IF IMPOSSIBLE THEN   %M[J:L] USED UP, LOOP TO EL                        03039600
BEGIN IF S OR Z THEN   %OVERLAP: PLACE AND DETAIL                       03039800
    BEGIN IF (L-J)-(Q-K){DELTA THEN   %GRAB UP TO DELTA                 03040000
         BEGIN K~J; Q~L END;                                            03040200
         COMMENT IF L INTERFERED WE SET Q~L (IN IMPOSSIBLE)             03040400
         SO IF K<J WE SET K~J HERE, AND DUALLY;                         03040600
         PLACEMENT;                                                     03040800
         M[K+2]~E; E~K+2;   %LINK THIS OVERLAP TO E                     03041000
    END                                                                 03041200
    ELSE   %DETAIL UNTIL Q OR OVERLAP                                   03041400
    BEGIN COMMENT IF FIRST COVER IN USE THEN J=L.                       03041600
         DETAIL L,... UNTIL Q OR OVERLAP;                               03041800
         DO BEGIN DETAILS;   %WE CAN-T ADJUST K,Q AND LOSE CONTROL,     03042000
              %WE MIGHT THEN PLACE WRONG.                               03042200
              IF (L~M[L] INX 0)}Q THEN GO EX   %GET MORE                03042400
         END UNTIL M[L].[1:1]; L~M[J~L] INX 0;                          03042600
         IF (K~J-1)>Q-4 THEN GO EX ELSE GO FREE   %GET AN OVERLAP       03042800
    END;                                                                03043000
    IF Z THEN DETAILS;   %TRY MOVING L                                  03043200
    IF S THEN BEGIN L~J; DETAILS END;   %PLACEMENT SET J BACK           03043400
EX: IF MORE THEN GO EL                                                  03043600
END                                                                     03043800
ELSE   %J STILL USEFUL: LOOP TO FREE                                    03044000
BEGIN ML[I]~-(*P(DUP));   %MARK IT PLACED                               03044200
    PLACEMENT;   %AREA K PLACED. ML[I] DESCRIBED IT.                    03044400
    COMMENT WE DON-T LOWER QMAX HERE.                                   03044600
    IF THE HIGHEST AREA ISN-T PLACED WE NEED IT,                        03044800
    IF THE AREA IS PLACED, WE OLAY ONLY UP TO SAVE AREAS LIKE IT;       03045000
    C~C+1; J~Q;   %COUNT IT AND GET READY FOR MORE                      03045200
    IF MORE THEN IF J>K OR L<K THEN GO EL ELSE GO FREE                  03045400
END;   %K=0 HERE, OR ELSE                                               03045600
STOREDY~1;                                                              03045800
IF C!N AND ALIVE THEN   %SOMETHINGS IN THE WAY                          03046000
BEGIN MOVEIT; GO ZZ END;                                                03046200
COMMENT DO SUFFIX AND GET BACK TO BUSINESS;                             03046400
GRSD[X].[18:30]~ML;                                                     03046600
BRANCH(RSUFFIX)                                                         03046800
END OF KERNAL;                                                          03047000
PROCEDURE RESTART(S,T); VALUE T; ARRAY S[*]; REAL T;                    03047200
BEGIN COMMENT LOAD ML ROW AND FORK TO KERNAL.                           03047400
         THE USUAL TERMINATION WONT WORK FOR A WHILE.                   03047600
         T WILL BE STACK.                                               03047800
         S (SEGMENT ZERO) IS LEFT FOR SELECTION;                        03048000
ARRAY H[*]; NAME ML;   %NO SIZE LIMIT                                   03048200
DEFINE MLN=29#, X=P1MIX#;                                               03048400
INTEGER B,I,J,K,RS;                                                     03048600
FORGETSPACE(FSROW[X]); FSROW[X]~0;   %WE-LL GET ONE LATER               03048800
H~JARROW[X]; RS~H[8]; REPLY[X]~-@412;   %OK,WY,DS ONLY TILL SUFFIX      03049000
ML:=[M[SPACE((I:=S[0] INX 0)+16)]]&S[3][CTF];                           03049200
ML[NOT 0]:=I; B:=SPACE(MLN+1); %SAVE SIZE IN ML[NOT 0]                  03049400
ML[I]~0; MOVE(15,[ML[I]],[ML[I+1]]);   %CLEAR R TOO                     03049600
J~S[0].[8:25];                                                          03049800
IF (K~I MOD MLN)=0 THEN K~MLN;                                          03050000
DO   %READ ML LIST                                                      03050200
BEGIN DISKWAIT(-B,MLN+1,J.[CF]+H[J.[FF]]);                              03050400
    J~M[B INX MLN];                                                     03050600
    MOVE(K,B,[ML[I~I-K]]);                                              03050800
    K~MLN                                                               03051000
END UNTIL I=0;   %J=0 HERE, OR ELSE                                     03051200
FORGETSPACE(B);   %NOW SHORTEN FB(THIS IS WHY IT-S FIRST IN SS)         03051400
ML[ML[NOT 0]-1].[FF]~S[7].[CF]|ETRLNG+(P(DUP)=0);                       03051600
    COMMENT SEE SELECTION. EMPTY FPB GETS ONE WORD.                     03051800
    WE-LL REFRESH THE FPB IN RSUFFIX;                                   03052000
GRSD[X].[18:30]~ML;   %PROTECT EI BIT, SEND QMAX, ML SITE               03052200
FORK(P(.KERNAL),T,[RESTARTING],-0)                                      03052400
END OF RESTART;                                                         03052600
$INCLUDE 03549999, IF DATACOM AND DCSPO AND NOT INQUIRY;                03500099
SAVE PROCEDURE QTIMER(CANCELSTA);VALUE CANCELSTA;REAL CANCELSTA;        03500100
    BEGIN                                                               03500200
    REAL      RCW=+0,STA=+1,     BL=+2;                                 03500300
    INTEGER   WRS=+3,WRSP=+4,BTS=BL;                                    03500400
    LABEL     SEARCH, EGRESS;                                           03500500
    IF CANCELSTA=0 THEN % INDEPENDENTRUNNER AT TIMER INTERRUPT.         03500600
         BEGIN                                                          03500700
         P(GETSPACE(128,12,0)+1,STS,CANCELSTA,RCW,0,RDS,0,XCH,CFX,STF); 03500800
         STACKUSE ~ TRUE;                                               03500900
         END;                                                           03501000
   %ELSE CALLED FROM STABLE       OR INQUPT-READBUFF                    03501100
   P(0,0,0,0);                                                          03501200
    IF (STA~CANCELSTA )!0 THEN                                          03501600
         BEGIN                                                          03501700
         IF STA.[4:4]=STA.[9:4] AND STA.[18:4]=STA.[14:4] THEN          03501800
              GO TO EGRESS;                                             03501900
         END                                                            03502000
    ELSE                                                                03502100
         BEGIN                                                          03502300
         STA ~ BASELINK;                                                03502350
    SEARCH:                                                             03502400
         BL ~ BASELINK;                                                 03502450
         DO        STA ~ STATION[STA.[18:4],STA.[4:4]]                  03502500
         UNTIL     STA.[24:1]  OR  STA=BL;                              03502600
         IF STA=BL THEN                                                 03502700
              GO TO EGRESS;                                             03502800
         END;                                                           03502900
    STREAM(R~0:D~(QTIMES INX 0)+(WRS~(WRSP~STA.[14:4]&STA[40:9:4])      03503000
           DIV 48),BTS~BTS~WRSP-(WRS|48),CAN~CANCELSTA!0);              03503100
         BEGIN                                                          03503200
         DI ~ D;   SKIP BTS DB;                                         03503300
         CAN(DS ~ RESET; JUMP OUT TO XI;);                              03503400
         SI ~ D;   SKIP BTS SB;                                         03503500
         IF SB THEN TALLY ~ 1 ELSE DS ~ SET;                            03503600
         R ~ TALLY;                                                     03503700
         XI:                                                            03503800
         END;                                                           03503900
     IF P THEN                                                          03504000
         INQUPT(0&STA[9:9:9]&@1001[24:38:10]);                          03504100
    IF CANCELSTA = 0 THEN                                               03504200
         GO TO SEARCH;                                                  03504300
    EGRESS:                                                             03549800
    IF CANCELSTA = 0 THEN                                               03549810
         BEGIN                                                          03549820
         QTRDY ~ TRUE;                                                  03549830
         KILL([CANCELSTA]);                                             03549840
         END;                                                           03549850
     END QTIMER;                                                        03549900
$ INCLUDE 03601501, IF SHAREDISK;                                       03599999
PROCEDURE LOCKER(SEGMENT,LOCK);                                         03600000
    VALUE SEGMENT,LOCK; REAL SEGMENT,LOCK;                              03600100
    COMMENT IF LOCK IS TRUE, THEN A READ LOCK OF 0 WORDS IS             03600110
            PERFORMED ON SEGMENT. IF LOCK IS FALSE, AN UNLOCK           03600120
            IS PERFORMED ON SEGMENT;                                    03600130
BEGIN                                                                   03600200
    REAL T;                                                             03600300
    IF LOCK THEN DISKWAIT([T] INX 1,-0,SEGMENT) ELSE                    03600400
    BEGIN;                                                              03600500
         STREAM(SEGMENT,D:=[T]);                                        03600600
         BEGIN SI:=LOC SEGMENT; DS:=8 DEC END;                          03600700
         T:=T OR @2060;                                                 03600800
         P(WAITIO([T] INX @100000000,0,18),DEL);                        03600900
    END;                                                                03601000
END; % LOCKER                                                           03601100
DEFINE LOCK(LOCK1)=LOCKER(LOCK1,1)#;                                    03601200
DEFINE UNLOCK(UNLOCK1)=LOCKER(UNLOCK1,0)#;                              03601300
 SAVE PROCEDURE INITIATEIO(IODESC,MIX,U);%                              04000000
         VALUE IODESC,MIX,U;%                                           04001000
         REAL MIX,U;%                                                   04002000
         REAL IODESC;%                                                  04003000
         BEGIN REAL C=+1;LABEL EXIT;                                    04004000
$INCLUDE 04004101, IF STATISTICS;                                       04004099
        REAL UN=+2;                                                     04004100
         P(TIO,[IODESC],IIO);                                           04005000
         IOTIME[MIX]~P(DUP,LOD)-CLOCK-P(RTR);                           04006000
$INCLUDE 04006101, IF STATISTICS AND AUXMEM;                            04006099
         COUNTUPBY(37,(U OR 1)=17);                                     04006100
         IF (CHANNEL[C]~U) LSS 16 THEN                                  04008000
              BEGIN                                                     04008100
              IF IODESC.[22:1] THEN%                                    04009000
                   BEGIN TRANSACTION[U] ~ IF IODESC.[18:1] THEN 0%      04010000
                             ELSE TRANSACTION[U]-1;%                    04011000
                        GO TO EXIT;%                                    04012000
                   END;                                                 04013000
$INCLUDE 04013031, IF STATISTICS;                                       04013009
              IF C=4 THEN COUNTUPBY(59,16777216) ELSE                   04013010
              IF C=3 THEN COUNTUPBY(58,16777216) ELSE                   04013020
              COUNTUPBY(57+C,1);                                        04013030
              END                                                       04013100
                 ELSE                                                   04013200
         IF (U OR 1)=19 THEN                                            04013300
         BEGIN                                                          04014000
              EUIO[C]~CLOCK+P(RTR);                                     04014002
$ INCLUDE 04014088,IF STATISTICS;                                       04014009
              COUNTUP(0,IODESC.[27:6]);                                 04014020
         COUNTUPBY(32,CLOCK+P(RTR)-DISKWAITIME[NT3]);                   04014022
              IF MIX NEQ 0 THEN COUNTUPBY(9,1);                         04014025
              COUNTUPBY(2,U=18);                                        04014030
             P(M[IODESC]);                                              04014035
             IF (MIX:=UN.[6:6])=0 THEN COUNTUPBY(4,1) ELSE              04014038
             IF MIX=1 THEN COUNTUPBY(4,16777216) ELSE                   04014040
             IF MIX=2 THEN COUNTUPBY(5,1) ELSE                          04014042
             COUNTUPBY(5,16777216);                                     04014044
             STREAM(UN:=[UN]); BEGIN SI:=UN; DS:=8 OCT END;             04014045
             MIX:=IODESC.[27:6];                                        04014047
             IF UN GEQ MCPBASE AND UN LEQ MCPTOP THEN COUNTUP(10,MIX)   04014050
             ELSE IF UN GEQ ESPDISKBOTTOM AND UN LEQ ESPDISKTOP THEN    04014055
             COUNTUP(11,MIX) ELSE IF UN GEQ DIRECTORYTOP THEN           04014060
             IF UN LSS BYPASS.[CF] THEN                                 04014065
                   COUNTUP(((UN-DIRECTORYTOP).[44:4]=3)+25,MIX) ELSE    04014067
             IF UN LEQ DISKBOTTOM THEN COUNTUP(12,MIX);                 04014070
              IF C=4 THEN COUNTUPBY(36,16777216) ELSE                   04014075
              IF C=3 THEN COUNTUPBY(35,16777216) ELSE                   04014080
              COUNTUPBY(34+C,1);                                        04014085
$OMIT 04014091, IF STATISTICS;                                          04014089
         END;                                                           04014090
$INCLUDE 04014099, IF STATISTICS;                                       04014092
          END ELSE IF C=4 THEN COUNTUPBY(59,16777216) ELSE              04014094
          IF C=3 THEN COUNTUPBY(58,16777216) ELSE                       04014096
          COUNTUPBY(57+C,1);                                            04014098
         TRANSACTION[U]~P(DUP,LOD)+1;                                   04014100
    EXIT:END;%                                                          04015000
 SAVE PROCEDURE QUEUEUP(U); VALUE U ; REAL U;%                          04016000
    BEGIN IF U=30 THEN                                                  04016100
         WAITQUE[FIRSTWAIT:=(FIRSTWAIT+31) AND 31]:=U ELSE              04016200
         BEGIN WAITQUE[NEXTWAIT] ~ U;%                                  04017000
              NEXTWAIT ~ NEXTWAIT+1 AND 31;%                            04018000
         END;%                                                          04019000
    END;                                                                04019100
 SAVE PROCEDURE STARTIO(U); VALUE U; REAL U;%                           04020000
    BEGIN REAL T=NT1,R=NT2, S=NT3;%                                     04021000
$INCLUDE 04021101, IF DFX;                                              04021099
         LABEL BACK;                                                %DFX04021100
              IF (T ~ UNIT[U]).[13:5] = 0 THEN%                         04022000
              IF (S ~ T.[18:15]) < @1777 THEN%                          04023000
$INCLUDE 04023101, IF DFX;                                              04023099
    BACK:                                                           %DFX04023100
                   BEGIN IF P(TIO) ! 0 THEN%                            04024000
                             BEGIN INITIATEIO(IOQUE[S],LOCATQUE[S].[3:5]04025000
                                       ,U);%                            04026000
                                  P(3);%                                04027000
                             END%                                       04028000
                        ELSE BEGIN QUEUEUP(U);%                         04029000
                                  P(4);%                                04030000
                             END;%                                      04031000
                        P(T&P(XCH)[15:45:3],[UNIT[U]],~);%              04032000
$OMIT    04033001, IF DFX;                                              04032999
                   END;%                                                04033000
$INCLUDE 04033701, IF DFX;                                              04033049
                   END ELSE                                             04033050
              IF (U AND @76)=18 THEN                                %DFX04033100
              IF EUW<@7777700000 THEN                               %DFX04033200
              BEGIN NT4~S~(T~T&EUQ[R~EUW.[FF]][18:18:30]).[FF];     %DFX04033300
                   EUW~ EUW & EUQ[R][18:3:15];                      %DFX04033400
                   EUQ[R]~NABS(U);                                  %DFX04033500
                   IF U=19 THEN DO IOQUE[NT4].[3:5]~12              %DFX04033510
                        UNTIL (NT4~LOCATQUE[NT4].[FF])>1023;        %DFX04033520
                   GO BACK;                                         %DFX04033600
              END;                                                  %DFX04033700
    END;%                                                               04034000
 SAVE PROCEDURE PRINTERFINISH(U); VALUE U; REAL U;%                     04035000
         BEGIN IF NOT UNIT[U].[16:1] THEN UNIT[U].[17:1] ~ 0;%          04036000
              STARTIO(U);%                                              04037000
              GO TO EXTERNAL;%                                          04038000
         END;%                                                          04039000
PROCEDURE LBMESS(FN,SN,A,B,C,D,E);VALUE FN,SN,A,B,C,D,E;                04039500
    REAL FN,SN,A,B,C,D,E; FORWARD;                                      04039600
 SAVE PROCEDURE IOREQUEST(FINAL,IODESC,LOCATION);%                      04040000
         VALUE FINAL,IODESC,LOCATION;%                                  04041000
         ARRAY FINAL,LOCATION[*];%                                      04042000
         REAL IODESC;%                                                  04043000
         BEGIN REAL U=NT1,T=NT2,S=NT3,R=+1;%                            04044000
$INCLUDE 04044201, IF DFX;                                              04044099
              REAL EU=NT4;                                          %DFX04044100
              LABEL FAKE,DOIT,IN;                                   %DFX04044200
              IF IOQUEAVAIL = 0 THEN%                                   04045000
                   SLEEP([IOQUEAVAIL],1023);%                           04046000
              IOQUEAVAIL ~ IOQUE[S~IOQUEAVAIL-1];%                      04047000
$INCLUDE 04047011, IF STATISTICS;                                       04047009
         DISKWAITIME[S]:=CLOCK+P(RTR);                                  04047010
$INCLUDE 04048651, IF DFX;                                              04047099
              IF ((U~LOCATION.[12:6]) AND 62) = 18 THEN             %DFX04047100
              BEGIN IF (T~EUQ[EU~M[IODESC].[6:6]])<0 THEN GO FAKE;  %DFX04047200
                   IF DISKOUNT>0 THEN                               %DFX04047300
                   BEGIN U ~ 18; IF P(RRR).[29:1] THEN              %DFX04047400
                   IN:                                              %DFX04047450
                   IF UNIT[U].[FF]>1023 THEN                        %DFX04047500
                   BEGIN DISKOUNT~DISKOUNT-1;                       %DFX04047600
                        EUQ[EU]~NABS(T~U);                          %DFX04047700
    FAKE:               IODESC~IODESC&TINU[U~ABS(T)][3:3:5];        %DFX04047800
                        LOCATION.[12:6]~U;                          %DFX04047900
                        GO DOIT                                     %DFX04048000
                   END; IF U ! U ~ 19 THEN                          %DFX04048050
                        IF P(RRR).[28:1] THEN GO IN; END;           %DFX04048060
                   DISKOUNT~0;                                      %DFX04048100
                   IF T.[FF]>@1777 THEN                             %DFX04048150
                   BEGIN T~S&S[CTF]&@7777700000[3:18:15];           %DFX04048200
                        IF EUW<@7777700000 THEN                     %DFX04048250
                          EUQ[EUW.[CF]].[3:15]~EUW~EUW&EU[CTC] ELSE %DFX04048300
                          EUW~EU & EU [CTF];                        %DFX04048350
                   END ELSE                                         %DFX04048400
                     LOCATQUE[T.[CF]].[FF]~T~T&S[CTC];              %DFX04048450
                   EUQ[EU]~T;                                       %DFX04048500
              END ELSE                                              %DFX04048550
              BEGIN                                                 %DFX04048600
    DOIT:     IF (T~UNIT[U]).[13:5] = 0 THEN                        %DFX04048650
$OMIT    04048801, IF DFX;                                              04048799
              IF (T ~ UNIT[U ~ LOCATION.[12:6]]).[13:5] = 0 THEN        04048800
                   BEGIN IF P(TIO) ! 0 THEN%                            04049000
                        BEGIN INITIATEIO(IODESC,P1MIX,U);%              04050000
                             P(3);%                                     04051000
                        END ELSE BEGIN QUEUEUP(U);%                     04052000
                             P(4);%                                     04053000
                        END;%                                           04054000
                        T ~ T&P(XCH)[15:45:3]&S[18:33:15];%             04055000
                   END ELSE%                                            04056000
                        IF T.[18:6] = @77 THEN%                         04057000
                              T.[18:15] ~ S ELSE%                       04058000
                        LOCATQUE[P(T.[33:15],DUP)]~LOCATQUE[R]&%        04059000
                             S[18:33:15];%                              04060000
$INCLUDE 04060201, IF DFX;                                              04060099
                   UNIT[U]~T&S[CTC];                                %DFX04060100
              END;                                                  %DFX04060200
              LOCATQUE[S] ~ LOCATION&P1MIX[3:43:5] OR @7777700000;%     04061000
$OMIT    04062001, IF DFX;                                              04061999
              UNIT[U] ~ T&S[33:33:15];%                                 04062000
              IOQUE[S] ~ IODESC;%                                       04063000
              FINALQUE[S] ~ FINAL;%                                     04064000
         END;%                                                          04065000
$INCLUDE 04066191, IF INQUIRY AND NOT DATACOM;                          04066009
SAVE PROCEDURE DCRTATE(S);VALUE S;REAL S;                               04066010
     BEGIN REAL T,TOPTR,N,       I;                                     04066020
         ARRAY FIB[*];                                                  04066030
IF FINALQUE[S]>0 THEN BEGIN                                             04066040
         FIB~M[(TOPTR~LOCATQUE[S]INX 0)-3];                             04066050
         N~FIB[13].[10:9]-1;                                            04066060
WHILE(M[TOPTR].[33:15]!FINALQUE[S].[33:15])AND(M[TOPTR]AND IOMASK)=0 DO 04066070
         BEGIN;                                                         04066080
              STREAM(N,C~M[TOPTR],TOPTR);                               04066090
                   BEGIN                                                04066100
                        SI~TOPTR;SI~SI+8;DS~N WDS;                      04066110
                        SI~LOC C;DS~WDS;                                04066120
                   END;                                                 04066130
                   T~FIB[19].[33:15]-FIB[16].[33:15];                   04066140
                     FIB[16].[33:15]~I~M[P(DUP)INX NOT 1].[18:15];      04066150
                     FIB[19].[33:15]~T+I;                               04066160
         END;                                                           04066170
                   END;                                                 04066180
    END;                                                                04066190
 SAVE PROCEDURE FINISHOFFIO(U); VALUE U; REAL U;%                       04067000
    BEGIN REAL FIN=NT6,V=NT4,T=NT1,IOD=NT3;%                            04068000
              LABEL ON,OFF,C0,C1,C2,C3,C4,C5,C6,C7;%                    04069000
              SWITCH CSW ~ C0,C1,C2,C3,C4,C5,C6,C7;%                    04070000
              IF FIN > 0 THEN%                                          04071000
              IF FIN.[25:1] THEN%                                       04072000
                   BEGIN T ~ FIN.[3:5];%                                04073000
                        FIN ~ FIN&IOD[3:3:5]&0[25:25:1];%               04074000
                        GO TO CSW[T];%                                  04075000
                   END ELSE GO ON ELSE GO ON;%                          04076000
         C0:  GO TO C0;%                                                04077000
         C1:  FIN.[8:10] ~ V;%                                          04078000
              GO TO C2;%                                                04079000
         C3:  FIN.[8:10] ~ V;%                                          04080000
         C4:  FIN ~ NOT V INX 1 INX FIN;%                               04081000
              GO TO C5;%                                                04082000
         C6:  STREAM(A~0:IOD);%                                         04083000
                   BEGIN DI ~ LOC A; SI ~ IOD; SI ~ SI+4; DS~4 OCT END; 04084000
              T ~ P DIV 8-1;%                                           04085000
         OFF: FIN.[8:10] ~ T;%                                          04086000
              GO TO C2;%                                                04087000
         C7:  STREAM(A~0:IOD);%                                         04088000
                   BEGIN DI ~ LOC A; SI ~ IOD; DS ~ 4 OCT END;%         04089000
              T ~ P DIV 8-1;%                                           04090000
              FIN ~ (NOT T INX 1 INX FIN)&T[8:38:10];%                  04091000
              GO TO C5;%                                                04092000
         ON:  IF U < 16 THEN%                                           04093000
              IF IOD.[22:1] THEN%                                       04094000
         C5:       M[IOD INX 1] ~ M[NOT V INX IOD INX 1] ~ V%           04095000
              ELSE%                                                     04096000
         C2:  M[IOD INX NOT 0] ~ V;%                                    04097000
         END;%                                                          04098000
 PROCEDURE PROGRAMRELEASE;%                                             04099000
         BEGIN NAME T; REAL FSX=JUNK;                                   04100000
              ARRAY R=-4[*];%                                           04101000
              REAL IOD=NT1;%                                            04102000
              ARRAY LOCN[*];%                                           04103000
              REAL S;                                                   04103050
              CHECKSTACKSPACE;%                                     %WF 04103100
    LOCN~M[S~(IF(IOD~NFLAG(M[P(T~[M[PRT[P1MIX,9]]],DUP,PRL)]))          04104000
                                  .[22:1] THEN 2 ELSE NOT 1) INX IOD];  04105000
                    IF IOD.[3:5]= 6 THEN                                04105100
              BEGIN; STREAM(S:=M[PRT[P1MIX,8]] INX P(DUP,0,XCH,DIA 10,  04105200
                        DIB 30,TRB 2),D~@600005);                       04105300
                   BEGIN SI~S; DS~2 CHR END;                            04105400
$INCLUDE 04105411, IF STATISTICS;                                       04105409
                   COUNTUP(27,IOD.[27:6]);                              04105410
           IF JUNK.[36:12]!45 AND RELTOG                                04105500
             OR M[IOD].[3:6] = 0 AND M[IOD]  LSS (DIRDSK | DSKTOG) THEN 04105510
    IF (USERCODE[P1MIX] EQV MCP) ! NOT 0 THEN %                         04105550
                   BEGIN TERMINATE(P1MIX); TERMINALMESSAGE(30) END;     04105600
                   IF(FS[P1MIX,(FSX~P(*(NOT 2 INX LOCN),4,COC).[13:11]  04105650
                                    DIV 5).[40:4]]                      04105700
                        AND TWO(IOD.[24:1]&FSX[43:44:4]))!0 THEN        04105750
                   BEGIN T[0]:=T[0]&1[19:47:1]&0[26:40:7];              04105800
                        M[(*((NOT 2)INX LOCN))INX 5 ]:= NABS(*P(DUP));  04105850
                        GO TO RETURN;                                   04105890
                   END;                                                 04105900
                   IF NOT IOD.[24:1] THEN M[S].[11:1]~1;                04105950
              END DISK BUSINESS;                                        04105990
              IOREQUEST(R,IOD,LOCN);%                                   04106000
              T[0]~T[0]&0[26:26:7]&0[19:19:1];                          04107000
              IF (NT1~P(*(NOT 2 INX LOCN),13,COC).[10:9]-1)!0 THEN%     04108000
                   STREAM(NT1,C~T[0],T);                                04109000
                        BEGIN SI ~ T; SI ~ SI+8; DS ~ NT1 WDS;%         04110000
                             SI ~ LOC C; DS ~ WDS;%                     04111000
                        END;%                                           04112000
              GO TO RETURN;%                                            04113000
         END;%                                                          04114000
 SAVE PROCEDURE NEWIO;%                                                 04115000
         BEGIN REAL S=NT3,U=NT4;%                                       04116000
              S ~ UNIT[U~WAITQUE[FIRSTWAIT]].[18:15];%                  04117000
              INITIATEIO(IOQUE[S],LOCATQUE[S].[3:5],U);%                04118000
              FIRSTWAIT ~ FIRSTWAIT+1 AND 31;%                          04119000
              UNIT[U].[13:5] ~ 3;%                                      04120000
         END;%                                                          04121000
 SAVE PROCEDURE IOFINISH(R,U); VALUE U,R; REAL U,R;%                    04122000
    BEGIN BOOLEAN STOP;  REAL C ;                                       04123000
         LABEL NOWAIT,PROC,INCR,TEST,NEW;%                              04124000
$INCLUDE 04124101, IF DFX;                                              04124099
LABEL DX;                                                           %DFX04124100
         LABEL X,OK,DS,DC,DK,LP,SW;%                                    04125000
         REAL T=NT1,S=NT2,S1=NT3,V=NT4,E=NT5,I=NT7;%                    04126000
         NAME LOCN=E; REAL IOD=S1; REAL FIN=NT6;%                       04127000
         SWITCH TYPE ~ OK,LP,OK,OK,DK,OK,OK,OK,OK,OK,DC;%               04128000
         S:=(T:=UNIT[U:=CHANNEL[C:=U]]).[18:15] ;                       04129000
         IF (E ~ R.[26:7])+(V ~ T.[5:8] ) ! 0 THEN%                     04130000
              BEGIN IF(S1 ~ FINALQUE[S]) < 0 THEN%                      04131000
                   IF (E ~ S1.[25:8] AND E) = 0 THEN%                   04132000
$OMIT    04133001, IF DFX;                                              04132999
                        IF V = 0  THEN GO OK;%                          04133000
$INCLUDE 04133201, IF DFX;                                              04133099
         IF V=0 THEN IF (U AND 62)!18 THEN GO TO OK ELSE                04133100
         BEGIN I~IOQUE[S]; GO TO DX END;                                04133200
                   IF (U AND @774) ! 16 THEN                            04134000
                        BEGIN                                           04134050
                        IF U!30 THEN                                    04134100
                             GO TO X                                    04134200
                        ELSE                                            04134300
                             BEGIN                                      04134400
                             IF (R.[28:5] AND @25) ! 0 THEN             04134500
                                  BEGIN                                 04134600
                                  IF ( NOT R.[32:1] AND R.[28:1]) THEN  04134700
                                       GO TO DC;                        04134800
                                  GO TO X;                              04134900
                                  END                                   04134950
                             ELSE GO TO DC;                             04134955
                             END;                                       04134960
                        END;                                            04134990
                   IF LOCATQUE[S].[9:1] THEN GO TO X;              %GEH 04134995
                   IF E = 0 THEN%                                       04135000
                   IF V < 128 THEN GO TO X%                             04136000
                   ELSE BEGIN % RECOVERED MASS STORAGE%                 04137000
                        IF DISKMSG THEN                                 04137500
                             BEGIN;                                     04138000
                             STREAM(K~M[IOQUE[S]],J~P(.JUNK));          04138500
                                  BEGIN SI~LOC K; DS~8 OCT;             04139000
                                  END;                                  04139500
                             INDEPENDENTRUNNER(P(.DISKERROR),           04140000
                                               JUNK&T[1:9:4]&U[10:46:2] 04140500
                                               &IOQUE[S][12:24:9]   %GEH04141000
                                               &LOCATQUE[S][5:3:5]);%GEH04141200
                             END;                                       04141500
                        T.[5:8] ~ 0;                                    04142000
                        GO TO SW;                                       04142500
                        END;%                                           04143000
                   IF V = 0 THEN%                                       04144000
$ INCLUDE 04144301, IF SHAREDISK;                                       04144099
                   IF R.[25:4]=9 THEN % LOCKED ADDRESS                  04144100
                   BEGIN                                                04144120
                        LQUE[LQAVAIL]:=M[IOQUE[S]]&S[1:41:7];           04144180
                        UNIT[U]:=(*P(DUP))&LOCATQUE[S][FTF]&0[5:35:13]; 04144200
                        LOCATQUE[S].[FF]:=@77777;                       04144220
                        STARTIO(U);                                     04144240
                        IOTIME[LOCATQUE[S].[3:5]]~*P(DUP)+CLOCK+P(RTR); 04144250
                        IF (LQAVAIL:=LQAVAIL+1)>LQMAX THEN              04144260
                             PUNT([PUNTER[27]]);                        04144270
                        GO TO EXTERNAL;                                 04144280
                   END ELSE                                             04144300
                        BEGIN % ORIGINAL ERROR ON MASS STORAGE%         04145000
                             TINU[U].[18:12] ~ P(DUP).[18:12]+1;%       04146000
                             V:=129;                                    04147000
$ INCLUDE 04147501, IF SHAREDISK;                                       04147399
                             LOCATQUE[S].[8:1]:=M[IOQUE[S]].[42:1];     04147400
                             IF NOT R.[25:1] THEN M[IOQUE[S]].[42:1]:=0;04147500
                        END%                                            04148000
                   ELSE BEGIN % RECURRENT ERROR ON MASS STORAGE%        04149000
                             IF V < 128 THEN GO TO X;%                  04150000
                             IF (V ~ V+1) > 137 THEN%                   04151000
                                  BEGIN V ~ 0; GO TO X END;%            04152000
                        END;%                                           04153000
                   UNIT[U] ~ T&V[5:40:8];%                              04154000
    DS:%                                                                04155000
                   CHANNEL[P(TIO)] ~ U;%                                04156000
                   P([IOQUE[S]],IIO);%                                  04157000
                   GO TO EXTERNAL ;%                                    04158000
    X:             STOP ~ (V!0)|2+1;%                                   04159000
                   T.[5:13] ~ 32|E+8;%                                  04160000
                   GO TO TEST; :: END;%                                 04161000
    SW:: GO TO TYPE[T.[1:4]];%                                          04162000
    LP::%                                                               04163000
              BEGIN IF STOP ~ (T ~ T&0[16:16:1]).[17:1] THEN%           04164000
    TEST:          IF FIRSTWAIT = NEXTWAIT THEN GO TO INCR ELSE%        04165000
                        GO TO NEW ELSE GO TO NOWAIT;%                   04166000
              :: END;%                                                  04167000
    DK:: IF NOT(I~IOQUE[S]).[24:1] THEN%                                04168000
         IF FINALQUE[S].[24:1] THEN%                                    04169000
              BEGIN IOQUE[S] ~ I&1[24:47:1];%                           04170000
                   M[I] ~ M[I INX NOT 0];%                              04171000
                   GO TO DS;%                                           04172000
$OMIT    04173001, IF DFX;                                              04172999
              END ELSE GO TO OK ELSE GO TO OK;%                         04173000
$INCLUDE 04173901, IF DFX;                                              04173004
                          END;                                          04173005
DX:                                                                 %DFX04173010
              IF LOCATQUE[S].[FF]<1023 THEN GO TO OK;               %DFX04173100
              IF (*P([EUQ[M[I].[6:6]]],DUP))<0 THEN P(ABS(NOT 0),   %DFX04173110
                                        XCH,~) ELSE P(DEL);         %DFX04173120
              IF EUW.[FF]>1023 THEN DISKOUNT~DISKOUNT+1 ELSE        %DFX04173200
        BEGIN EUW~EUW&(I~EUQ[S1~EUW.[FF]])[18:3:15];                %DFX04173500
              EUQ[S1]~NABS(U);                                      %DFX04173600
              LOCATQUE[S1~S]:=P(DUP,LOD)&I[FTF]; T.[CF]:=I;         %DFX04173700
              IF U=19 THEN WHILE(S1:=LOCATQUE[S1].[FF])<1023 DO     %DFX04173800
                        IOQUE[S1].[3:5]:=12;                        %DFX04173850
        END;  GO TO OK;                                             %DFX04173900
    DC::                                                                04174000
$INCLUDE 04175401, IF DATACOM AND NOT INQUIRY;                          04174999
         IF ( E ! 0) OR ((S1 ~ NFLAG(FINALQUE[S]))>0)                   04175000
         OR ( S1.[25:8] ! 0 AND R.[18:1]) THEN                          04175010
              STABLE(R,S);  % STABLE USE NT3,NT6, AND NT7               04175050
         E ~ 0;                                                         04175400
$INCLUDE 04175701, IF INQUIRY AND NOT DATACOM;                          04175499
         IF R.[24:9] = 0 THEN                                           04175500
           INDEPENDENTRUNNER(P(.INQUPT),R&1[27:47:1]);                  04175600
         RDFDC ~ R;                                                     04175700
         GO TO OK;%                                                     04176000
    OK:: IF FIRSTWAIT = NEXTWAIT THEN%                                  04177000
    NOWAIT:   BEGIN IF (S1 ~ LOCATQUE[S].[18:15]) < @1777 THEN%         04178000
                      BEGIN%                                            04179000
                        INITIATEIO(IOQUE[S1],LOCATQUE[S1].[3:5],U)%     04180000
                       ;GO TO INCR; ::%                                 04181000
                      END; BEGIN%                                       04182000
    PROC:                    T ~ T&0[16:16:2];%                         04183000
                            ;GO TO INCR; ::%                            04184000
                        END;%                                           04185000
              :: END;%                                                  04186000
              BEGIN%                                                    04187000
    NEW:           NEWIO;%                                              04188000
                   IF STOP THEN GO TO INCR;%                            04189000
                   IF LOCATQUE[S].[18:15] > @1777 THEN GO TO PROC;%     04190000
                   QUEUEUP(U);%                                         04191000
                   T ~ T&4[13:43:5];%                                   04192000
              END;%                                                     04193000
    INCR::%                                                             04194000
         IOTIME [I~(S1~LOCATQUE[S]).[3:5]] ~ *P(DUP)+CLOCK+P(RTR);%     04195000
         IF (U OR 1)=19 THEN                                            04195100
          BEGIN                                                         04195200
           IF(JUNK:=M[IOQUE[S]].[5:7])>9 THEN                           04195300
            JUNK:=NEUP.[CF]+(JUNK AND @17);                             04195400
            PEUIO[JUNK]~P(DUP,LOD)+CLOCK+P(RTR)-EUIO[C];                04195500
          END;                                                          04195600
         IF E = 0 THEN%                                                 04196000
              BEGIN UNIT[U] ~ T&P(.S1,LOD)[18:18:15];%                  04197000
                   IOD ~ IOQUE[S];%                                     04198000
                   IOQUE[S] ~ IOQUEAVAIL;%                              04199000
                   IOQUEAVAIL ~ S+1;%                                   04200000
              END%                                                      04201000
         ELSE BEGIN UNIT[U] ~ T;%                                       04202000
                   IOD ~ IOQUE[S];%                                     04203000
              END;%                                                     04204000
         FIN ~ FINALQUE[S] AND NOT MEMORY;%                             04205000
         IF IOD.[24:1] THEN%                                            04206000
              BEGIN V ~ ABS(IOD.[33:15]-R.[33:15]);%                    04207000
                   IF IOD.[8:10] < V THEN%                              04208000
                   IF IOD.[23:1] THEN%                                  04209000
                        V ~ IOD.[8:10];%                                04210000
                   IF U < 16 THEN%                                      04211000
                   IF IOD.[21:2] = 0 THEN%                              04212000
                        BEGIN; STREAM(A~0:B~M[S1.[33:15]+V-1]);%        04213000
                                  BEGIN SI ~ LOC B;%                    04214000
                                       IF SC = "~" THEN TALLY ~ 1;%     04215000
                                       A ~ TALLY;%                      04216000
                                  END;%                                 04217000
                             V ~ -P+V;%                                 04218000
                        END;%                                           04219000
IF U!30 THEN                                                            04219100
              FINISHOFFIO(U);%                                          04220000
              END;%                                                     04221000
         IF E ! 0 THEN%                                                 04222000
              BEGIN IF STOP = 1 THEN%                                   04223000
                  INDEPENDENTRUNNER(P(.IOERR),R&U[3:43:5]&              04223100
                        (LOCATQUE[S]:=(*P(DUP))&1[1:47:1])[1:9:1])      04224000
                   ELSE IF FIN < 0 THEN P(LOCATQUE[S],R,XCH,~);%        04225000
              END%                                                      04226000
         ELSE BEGIN%                                                    04227000
              IF FIN < 0 THEN P(R OR IOMASK,LOCATQUE[S],~)%             04228000
$OMIT    04228101, IF DATACOM AND NOT INQUIRY;                          04228099
              ELSE                                                      04228100
$INCLUDE 04229001, IF DATACOM AND NOT INQUIRY;                          04228999
              ELSE                                                      04229000
$INCLUDE 04229101, IF DATACOM AND NOT INQUIRY;                          04229099
                   IF U ! 30 THEN                                       04229100
                   BEGIN                                                04229200
                   LOCN ~ [M[LOCATQUE[S]]];%                            04230000
                   IOD ~ IOD.[33:15];%                                  04231000
                   WHILE LOCN[0].[33:15] ! IOD DO%                      04232000
                        LOCN ~ 1 INX LOCN;%                             04233000
                   LOCN[0] ~ M OR FIN;%                                 04234000
              END  END;%                                                04235000
         IF P1MIX = 0 THEN GO TO NOTHINGTODO;%                          04236000
         IF I = P1MIX THEN GO TO RETURN;%                               04237000
         GO TO INITIATE;%                                               04238000
    END IOCOMPLETE;%                                                    04239000
 SAVE REAL PROCEDURE WAITIO(IOD,MASK,U);%                               04240000
         VALUE MASK,U,IOD;%                                             04241000
         REAL MASK,U,IOD;%                                              04242000
         BEGIN%                                                         04243000
              REAL T;                                                   04243100
              DEFINE OCTADE= DS~3 RESET;3(IF SB THEN DS~SET ELSE        04243200
                   DS~RESET;SKIP SB)#;                                  04243300
              IOD ~ NFLAG(P(.IOD,LOD))&TINU[U][3:3:5];%                 04244000
              MASK ~ NOT MASK;%                                         04245000
                IOREQUEST(NABS(IOD)&MASK[25:40:8],IOD,                  04246000
                   [IOD]&U[12:42:6]);%                                  04247000
              IOD ~ IOD&0[25:25:8]&0[19:19:1];%                         04248000
              SLEEP([IOD],IOMASK);%                                     04249000
              IF ((WAITIO~IOD.[26:7]) AND MASK AND MASK.[18:15])!0 THEN 04250000
              BEGIN                                                     04251000
                   T~GETSPACE(12,0,0)+2;                                04251100
                   STREAM(IOD~IOD.[26:7],MASK~(NOT MASK).[41:7],        04251200
                        Z~[TINU[U]],T~T);                               04251300
                   BEGIN DS~20 LIT" UNEXP I-O ERROR ON ";SI~Z;          04251400
                        SI~SI+5;DS~3 CHR;DS~8 LIT":RESULT=";            04251500
                        SI~LOC IOD;SI~SI+6;SKIP 3 SB;3(OCTADE);         04251600
                        DS~6 LIT",MASK=" ;SI~SI+6;SKIP 3 SB;            04251700
                        3(OCTADE);DS~2 LIT".~";                         04251800
                   END;                                                 04251900
                   IF P1MIX = 0 THEN PUNT (T);                          04252000
                   IF TERMIX.[CF]!P1MIX THEN                            04252100
                   BEGIN                                                04252200
                        TERMINATE(P1MIX&19[18:33:15]);                  04252300
                        IF (JAR[P1MIX,0] EQV "LIBMAIN")=NOT 0 AND       04252400
                           (JAR[P1MIX,1] EQV "DISK   ")=NOT 0 THEN      04252500
                        BEGIN                                           04252600
                             SPOUT(T);                                  04252700
                             BLASTQ(U);                                 04252800
                        END ELSE                                        04252900
                        TERMINALMESSAGE(-T);                            04253000
                   END;                                                 04253100
              END;                                                      04253200
         END;                                                           04253300
 REAL PROCEDURE TAPEPARITYRETRY(R,U);%                                  04254000
    VALUE R,U; REAL R,U; FORWARD;%                                      04255000
 PROCEDURE ACTUALIOERR(U,R); VALUE U,R; REAL U,R;%                      04256000
    BEGIN REAL E=+1,%                                                   04257000
              T=E+1,%                                                   04258000
              KEY=T+1,%                                                 04259000
              S=KEY+1,%                                                 04260000
              T1=S+1,%                                                  04261000
                        U1=T1,%                                     %GEH04261500
              T2=T1+1,%                                                 04262000
              T3=T2+1,%                                                 04263000
              MASK=T3+1;%                                               04264000
         NAME LOCN = T3;%                                               04265000
         REAL FIN =NT6; REAL IOD= NT3;%                                 04266000
         LABEL LOCKOUT,MASSRETRY,KILLL,NTRDY,LEAVE,TAPERETRY;%          04267000
         LABEL DISKOK,REWINDING;%                                       04268000
        LABEL PAPERPUNCH,PAPER,DATACOM;%                                04269000
         LABEL SIX,L3P,DSIT,DONTDSIT,NOTREADYMESS,KILLER,DISKRETRY; %GEH04270000
         LABEL EOF,REALEOF,SEVEN;                                       04270100
         INTEGER I = T1;%                                               04271000
         LABEL L1,L2,START,SPO,PRINTER,TAPE,PUNCH,L3,DISK,DRUM,D19,D17, 04272000
              D22,FIX,CLEAR,READER,NOCODE;%                             04273000
         SWITCH W ~ READER,PRINTER,TAPE,DRUM,DISK,SPO,PUNCH,NOCODE,%    04274000
              PAPERPUNCH,PAPER,DATACOM;%                                04275000
         BOOLEAN F = MASK+1;%                                           04276000
         REAL TYPE = F+1;%                                              04277000
         REAL DISC = TYPE+1;                                        %GEH04277500
         REAL RCW=+0;%                                                  04278000
    SUBROUTINE SPACEA;%                                                 04279000
         BEGIN KEY ~ GETSPACE(10,0,0)+2 END;%                           04280000
         P(GETSPACE(128,0,0)+1,STS,U,R,RCW,0,RDS,0,XCH,CFX,STF);%       04281000
         P(0,0,0,0,0,0,0,0,0,0,0);                                  %GEH04282000
         STACKUSE ~ TRUE;%                                              04283000
         IF DISC := (U.[2:2]!0) THEN                                %GEH04284000
              BEGIN NOPROCESSTOG:=NOPROCESSTOG-1;                   %GEH04285000
$INCLUDE 04287401, IF DFX;                                          %GEH04285099
                   IF U.[2:1] THEN                                  %GEH04285100
                   IF R.[30:1] THEN        % DISK NOT READY         %GEH04285200
                   BEGIN T:=S:=U.[FF];                              %GEH04285300
                        IF NOT (U1:=IF R.[3:5] THEN 18 ELSE 19) THEN%GEH04285400
                             DO IOQUE[T].[3:5] := 6 UNTIL           %GEH04285500
                             (T := LOCATQUE[T].[FF]) = @77777;      %GEH04285600
                        IF (T2:=EUQ[T:=M[IOQUE[S]].[6:6]]) LSS 0 THEN   04285700
                        BEGIN                    % EU IN PROCESS    %GEH04285800
                             LOCATQUE[UNIT[T2]].[FF] := S;          %GEH04285900
                             UNIT[T2].[CF] := U;                    %GEH04286000
                        END ELSE                 % EU NOT IN PROCESS%GEH04286100
                        IF T2.[FF] = @77777 THEN      % EUQ EMPTY   %GEH04286200
                        BEGIN EUQ[T] := ABS((NOT 0)&U[18:18:30]);   %GEH04286300
                             IF EUW.[FF]=@77777 THEN EUW.[FF]:=T ELSE   04286400
                             EUQ[EUW].[3:15]:=T;                    %GEH04286500
                             EUW.[CF]:=T;                           %GEH04286600
                             STARTIO(U1);                           %GEH04286700
                        END ELSE                      % EUQ NOT EMPTY   04286800
                        BEGIN LOCATQUE[T2].[FF] := S;               %GEH04286900
                             EUQ[T].[CF] := U;                      %GEH04287000
                        END;                                        %GEH04287100
                        UNIT[U:=R.[3:5]] := (*P(DUP))&@77777[15:30:18]; 04287200
                        GO TO NOTREADYMESS;                         %GEH04287300
                   END;                                             %GEH04287400
                   LOCATQUE[S:=(T:=U&U[FTC]&0[13:13:2]).[CF]].[FF] :=   04287600
                   NOT 0;                                           %GEH04287800
                   U:=R.[3:5];                                          04287900
                   IF (T1:=LOCATQUE[S].[3:5]) ! 0 THEN              %GEH04288000
                   IF NOT(JAR[P1MIX,0] ="LIBMAIN" AND JAR[P1MIX,1] =    04288100
                        "DISK   ") THEN                                 04288150
                   IF NOT(T.[8:1] OR T.[11:1]) THEN   % LET PARITY THRU 04288200
                   BEGIN TERMINATE(T1&19[CTF]); F:=1 END;           %GEH04288400
                   IF NOT LOCATQUE[S].[9:1] THEN                    %GEH04288600
                   BEGIN                                            %GEH04288800
                        STREAM(K:=M[IOQUE[S]],J:=P(.JUNK));         %GEH04289000
                             BEGIN SI:=LOC K; DS:=8 OCT END;        %GEH04289200
                        INDEPENDENTRUNNER(P(.DISKERROR),JUNK&U[10:46:2] 04289400
                             &IOQUE[S][12:24:9]& T1[5:43:5]);           04289600
                   END;                                             %GEH04289800
              END ELSE                                              %GEH04290000
 START:  S ~ (T~ UNIT [U]&0[13:13:2]).[18:15];%                         04291000
         TRANSACTION[U] ~ TRANSACTION[U]-1;%                            04292000
         TYPE ~ T.[1:4];%                                               04293000
         MASK ~ IF (T2 ~ FINALQUE[S]) < 0 THEN T2.[25:8] ELSE @377;%    04294000
         IF (E ~ T.[5:8] AND MASK) = 0 THEN%                            04295000
              BEGIN F ~ 1; GO TO FIX END;%                              04296000
         IF E THEN%                                                     04297000
     BEGIN T3~1 & (U=30)[43:47:1];COMMENT D16 BUSY;                     04298000
                   IF U < 16 AND TRANSACTION[U] { 0 THEN%               04299000
                        BEGIN P(0); GO TO REWINDING END;%               04300000
                   IF U!25 THEN                                         04301000
                        BEGIN SPACEA;%                                  04302000
                             STREAM(A~TINU[U],KEY);%                    04303000
                                  BEGIN SI ~ LOC A; SI ~ SI+5;%         04304000
                                       DS ~ 3 CHR;%                     04305000
                                       DS ~ 6 LIT " BUSY~";%            04306000
                                  END;%                                 04307000
 L1:                         SPOUT(KEY);%                               04308000
                        END;%                                           04309000
 L2:               IF DISC THEN GO TO DISKRETRY;                    %GEH04310000
                   DO BEGIN                                         %GEH04310500
                        SLEEP([CLOCK],NOT CLOCK);                   %GEH04311000
                        UNIT[U]:=(*P(DUP))&P(T,XCH)[CTC];           %GEH04311500
                        STARTIO(U);                                 %GEH04312000
                        SLEEP([UNIT[U]],@100000000000);                 04312500
                        TRANSACTION[U] := TRANSACTION[U]-1;         %GEH04313000
                   END UNTIL (UNIT[U].[5:8] AND T3) = 0;            %GEH04314000
$INCLUDE 04314651, IF INQUIRY AND NOT DATACOM;                          04314100
    IF U = 30 AND NOT (R.[24:1]) THEN                                   04314200
         BEGIN                                                          04314300
         DCRTATE(S);                                                    04314400
         IF NOT RDFDC.[25:1] THEN                                       04314500
              INDEPENDENTRUNNER(P(.INQUPT ),R&1[27:47:1]);              04314550
                                                                        04314555
                                                                        04314600
              END;                                                      04314650
                   TRANSACTION[U] ~ TRANSACTION[U]+1;%                  04315000
                   IF (UNIT[U].[5:8] AND MASK) = 0 THEN GO TO CLEAR;%   04316000
                   GO TO START;%                                        04317000
              END;%                                                     04318000
         IF E.[45:1] THEN%                                              04319000
              BEGIN          COMMENT D18 - NOT READY;%                  04320000
                   IF E.[43:1] THEN % (SHM)                             04321000
                      BEGIN % (SHM)                                     04321100
                      IF TYPE=0 THEN GO TO READER; % READ CHECK (SHM)   04321200
                      IF TYPE=1 THEN GO TO PRINTER; % PRINT CHECK (SHM) 04321300
                      IF TYPE=6 THEN GO TO PUNCH; % PUNCH CHECK (SHM)   04321400
                      END;                                              04321500
                   IF U ! 25 THEN %      NOT SPO.                       04322000
 NOTREADYMESS:  BEGIN SPACEA;                                       %GEH04322500
                   STREAM(A~TINU[U],KEY);%                              04323000
                        BEGIN DS ~ LIT "#"; SI ~ LOC A; SI ~ SI+5;%     04324000
                             DS ~ 3 CHR; DS ~ 11 LIT " NOT READY~";%    04325000
                        END;%                                           04326000
                   P(1);%                                               04327000
 REWINDING:%                                                            04328000
                   READY ~ NOT TWO(U) AND READY;%                       04329000
                   IF P THEN%                                           04330000
 NTRDY:%                                                                04331000
                   SPOUT(KEY);                          END;%           04332000
                   UNIT[U].[5:10] ~ 2;%                                 04333000
                   IF NOT DISC THEN                                 %GEH04333150
                   RRRMECH ~ NOT TWO(U) AND RRRMECH;%                   04334000
                   GO TO KILLL;%                                        04335000
              END;%                                                     04336000
 D17:    IF E.[46:1] THEN     COMMENT D17 - MEM PARITY;%                04337000
              BEGIN SPACEA;%                                            04338000
                   STREAM(A ~ TINU[U],KEY);%                            04339000
                        BEGIN SI ~ LOC A; SI ~ SI+5; DS ~ 3 CHR;%       04340000
                             DS ~ 13 LIT " I/O MEM PAR~";%              04341000
                        END;%                                           04342000
 L3:               SPOUT(KEY);%                                         04343000
                   P(@1537);                                            04344000
                   GO TO SIX;%                                          04345000
              END;%                                                     04346000
         IF E.[41:1] AND TYPE ! 2 THEN%                                 04347000
              BEGIN          COMMENT D22 - INVALID ADDRESS;%            04348000
D22:          SPACEA;                                                   04349000
              STREAM(A~TINU[U],KEY);                                    04350000
                        BEGIN SI ~ LOC A; SI ~ SI+5; DS ~ 3 CHR;%       04351000
                             DS ~ 14 LIT " I/O INV ADDR~";%             04352000
                        END;%                                           04353000
                   GO TO L3;%                                           04354000
              END;%                                                     04355000
              GO TO W[TYPE];%                                           04356000
 SPO:    IF E.[43:1] THEN GO TO L2;%                                    04357000
         GO TO D19;%                                                    04358000
 PRINTER:IF E.[42:1] THEN BEGIN%                                        04359000
              IF IOQUE[S].[27:6]=0 THEN GO FIX;                         04359100
                   COMMENT IGNORE EOP IF NO SPACE OR SKIP;              04359200
              IOQUE[S].[18:15] ~ @40001;%                               04360000
              GO TO CLEAR END;%                                         04361000
         IF E.[43:1] THEN%                                              04362000
              BEGIN SPACEA;%                                            04363000
                   STREAM(A~TINU[U],KEY);%                              04364000
                        BEGIN SI ~ LOC A; SI ~ SI+5;%                   04365000
                             DS ~ 3 CHR;%                               04366000
                             DS ~ 13 LIT " PRINT CHECK~";%              04367000
                        END;%                                           04368000
 L3P:              SPOUT(KEY);%                                         04369000
                   IF E.[45:1] THEN GO TO NOTREADYMESS; % (SHM)         04369100
                   P(0);%                                               04370000
                   TINU[U].[18:12] ~ P(DUP).[18:12]+1;%                 04371000
                   GO TO SIX;%                                          04372000
              END;%                                                     04373000
         GO TO D19;%                                                    04374000
 READER:      IF E.[43:1] THEN%                                         04375000
                   BEGIN     COMMENT D20 - READ CHECK ON CARD READER;%  04376000
                        SPACEA;%                                        04377000
                        TINU[U].[18:12] ~ P(DUP).[18:12]+1;%            04378000
                        STREAM(A~TINU[U],KEY);%                         04379000
                             BEGIN DS ~ LIT "#"; SI ~ LOC A; SI ~ SI+5; 04380000
                                  DS ~ 3 CHR; DS~12 LIT " READ CHECK~"; 04381000
                             END;%                                      04382000
                        GO TO NTRDY;%                                   04383000
                   END;%                                                04384000
              IF E.[42:1] THEN%                                         04385000
                   BEGIN     COMMENT D21 - END OF FILE CARD READER -%   04386000
                                  TREAT AS NOT READY;%                  04387000
                        UNIT[U].[5:8] ~ 4;%                             04388000
                        R.[25:8] ~ 4;%                                  04389000
                        TRANSACTION[U] ~ TRANSACTION[U]+1;%             04390000
                        GO TO START;%                                   04391000
                   END;%                                                04392000
              COMMENT MUST BE D19 - USUALLY INVALID CHARACTOR;%         04393000
              STREAM(A~0:B~IOQUE[S]);%                                  04394000
                   BEGIN DI ~ A; SI ~ B; DI ~ DI+8;%                    04395000
                        IF SC = @14 THEN A ~ DI;%                       04396000
                        2(40(DI~DI+8; SI~ SI+1;%                        04397000
                             IF SC = @14 THEN JUMP OUT 2 TO L);%        04398000
                             DI ~ DI-8; SI ~ SI-1;);%                   04399000
                        DI ~ A;%                                        04400000
                   L:   A ~ DI;%                                        04401000
                   END;%                                                04402000
              IF (T1 ~ P) = 0 THEN GO TO D19;%                          04403000
              IF T1 ! 1 THEN%                                           04404000
                   BEGIN SPACEA;%                                       04405000
                        STREAM(A~TINU[U],T1,KEY);%                      04406000
                             BEGIN DS ~ LIT "#"; SI ~ LOC A; SI ~ SI+5; 04407000
                                  DS ~ 3 CHR;%                          04408000
                                  DS ~ 16 LIT " INV CHR IN COL ";%      04409000
                                  DS ~ 2 DEC; DS ~ LIT "~";%            04410000
                             END;%                                      04411000
                        GO TO NTRDY;%                                   04412000
                   END;%                                                04413000
              E ~ @40;%                                                 04414000
              F ~ @3100001;%                                            04415000
              GO TO LEAVE;%                                             04416000
 PUNCH:  IF E.[43:1] THEN%                                              04417000
              BEGIN SPACEA;%                                            04418000
                   STREAM(A~TINU[U],KEY);%                              04419000
                        BEGIN SI ~ LOC A; SI ~ SI+5; DS ~ 3 CHR;%       04420000
                             DS ~ 13 LIT " PUNCH CHECK~";%              04421000
                        END;%                                           04422000
              SPOUT(KEY); % (SHM)                                       04423000
              IF E.[45:1] THEN GO TO NOTREADYMESS; % NOT READY (SHM)    04423100
              TINU[U].[18:12]:=P(DUP).[18:12]+1;% (SHM)                 04423200
              F:=0; GO TO CLEAR; % (SHM)                                04423300
              END;%                                                     04424000
         GO TO D19;%                                                    04425000
PAPERPUNCH:   IF R.[27:1] THEN BEGIN P(@40); GO TO SIX END;             04425100
              GO TO D19;                                                04425200
PAPER:        IF R.[27:2]!0 THEN GO TO EOF;                             04425300
              IF E.[44:1] THEN BEGIN P(@20); GO TO SIX END;             04425400
              GO TO NOCODE;                                             04425500
 D19:         IF E.[44:1] THEN%                                         04426000
                   BEGIN E ~ 1023; GO TO D17 END;%                      04427000
DATACOM:IF(T3~1&E[43:43:1])=@21 THEN GO TO L2;                          04429000
 NOCODE:      BEGIN SPACEA;%                                            04430000
                   STREAM(A~TINU[U],KEY);%                              04431000
                        BEGIN SI ~ LOC A; SI ~ SI+5; DS ~ 3 CHR;%       04432000
                             DS ~ 11 LIT " I/O ERROR~";%                04433000
                        END;%                                           04434000
                   GO TO L3;%                                           04435000
              END;%                                                     04436000
DRUM:                                                                   04437000
$OMIT 04437101,IF AUXMEM;                                               04437099
               IF E.[42:1] THEN GO TO LOCKOUT;%                         04437100
              IF IOQUE[S].[2:1] AND E.[44:1] THEN%                      04438000
                   GO TO MASSRETRY ELSE GO TO D19;%                     04439000
 DISK:                                                                  04440000
$ INCLUDE 04440251, IF SHAREDISK;                                       04440019
              IF R.[25:1] THEN                                          04440020
              BEGIN SPACEA;                                             04440040
                   IF R.[29:1] THEN                                     04440050
                   BEGIN; STREAM(KEY);                                  04440060
                       DS:=10 LIT " FPM FULL~";                         04440070
                   END ELSE                                             04440080
                   BEGIN; STREAM(KEY);                                  04440090
                        DS:=15 LIT " FPM NOT READY~";                   04440100
                   END;                                                 04440110
                   SPOUT(KEY);                                          04440120
                   P(16);                                               04440140
                   GO TO SIX;                                           04440160
              END;                                                      04440180
              IF LOCATQUE[S].[8:1] THEN % MUST UNLOCK ADDRESS           04440190
              BEGIN                                                     04440200
                   STREAM(A:=M[IOQUE[S]],D:=[JUNK]);                    04440210
                   BEGIN SI:=LOC A;DS:=8 OCT END;                       04440220
                   UNLOCK(JUNK);                                        04440230
              END;                                                      04440240
              IF E.[44:1] THEN GO TO D19;                               04440900
              IF E.[42:1] THEN%                                         04441000
              BEGIN               % DISK ELECTRONICS UNIT NOT READY %GEH04442000
                   IF NOT LOCATQUE[S].[9:1] THEN                    %GEH04443000
                   BEGIN                                            %GEH04443500
                        SPACEA;%                                        04444000
                       STREAM(A~TINU[U],KEY);%                          04445000
                             BEGIN SI ~ LOC A; SI ~ SI+5; DS ~ 3 CHR;%  04446000
                                  DS ~ 14 LIT " NOT READY EU~";%        04447000
                             END;%                                      04448000
                        SPOUT(KEY);                                 %GEH04448100
                        END;                                        %GEH04448200
                   T3:=32;                                          %GEH04448300
 DISKRETRY:        IF F THEN BEGIN P(T3); GO TO SIX END;            %GEH04448400
                   T1:=IOQUE[S]&6[3:43:5];            % NOT DS-ED SO%GEH04448500
                   IOQUE[S]:=IOQUEAVAIL;              % TRY AGAIN   %GEH04448600
                   IOQUEAVAIL:=S+1;                                 %GEH04448700
                   IOREQUEST(FINALQUE[S],T1,LOCATQUE[S] &           %GEH04448800
                             @522[3:33:15]);                        %GEH04448900
                   GO TO KILLER;                                    %GEH04449000
              END;                                                  %GEH04450000
              IF IOQUE[S].[24:1] THEN%                                  04451000
 MASSRETRY:%                                                            04452000
                   BEGIN%                                               04453000
                        P(@20);%                                        04458000
                        GO TO SIX;%                                     04459000
                   END;%                                                04460000
 LOCKOUT:     SPACEA;%                                                  04461000
              STREAM(A~TINU[U],KEY);%                                   04462000
                   BEGIN SI~LOC A; SI~SI+5; DS~3CHR;%                   04463000
                        DS ~ 12 LIT " WRITE LOCK~"%                     04464000
                   END;%                                                04465000
              GO TO L3;%                                                04466000
 TAPE:        TRANSACTION[U] ~ TRANSACTION[U]+1;                        04467000
              IF E.[44:1] THEN IF R.[2:1] THEN                          04467500
              BEGIN IF R.[11:1] THEN GO TO D19;                         04468000
                    OPTION~OPTION OR M;% MEANS MOD3IOS~TRUE             04468100
                    IF R.[24:1] THEN                                    04468200
                    BEGIN IF R.[13:1] THEN R.[27:1]~1;                  04468300
                          IF R.[14:1] THEN IF (E AND @367)=0 THEN       04468500
                          IF R.[27:1]=0 THEN GO TO FIX;                 04468510
                    END ELSE                                            04468600
                    BEGIN                                               04468610
                        IF R.[12:1] THEN                                04468620
                        BEGIN SPACEA;                                   04468630
                             STREAM(A~TINU[U],KEY);                     04468635
                             BEGIN SI~LOC A; SI~SI+5; DS~3 CHR;         04468640
                                  DS~ 21 LIT" BLANK TAPE ON WRITE~";    04468645
                             END;                                       04468650
                             SPOUT(KEY); P(16); GO TO SIX;              04468655
                        END;                                            04468660
                        IF R.[14:1] THEN R.[27:1]~1 ELSE GO FIX;        04468670
                  END;                                                  04468680
              END ELSE GO TO D19;                                       04468700
              IF R.[24:1] THEN%                                         04469000
                   BEGIN IF E.[41:1] THEN GO TO D22;%                   04470000
                        IF R.[27:1] THEN%                               04471000
EOF:                                                                    04471100
                        IF MASK.[42:1] THEN%                            04472000
REALEOF:                                                                04472500
                             BEGIN F ~ @3100001;%                       04473000
                                  T.[5:8] ~ @40;%                       04474000
                                  GO TO FIX;%                           04475000
                             END%                                       04476000
                        ELSE BEGIN P(@40);%                             04477000
                                  GO TO SIX;%                           04478000
                             END;%                                      04479000
 TAPERETRY: IF (T~TAPEPARITYRETRY(R,U)).[5:8]=32 AND                    04480000
                P1MIX!0 THEN GO TO REALEOF;                             04480050
           P(T.[5:8]);                                                  04480100
                        GO TO SIX;%                                     04481000
                   END;%                                                04482000
              IF E.[41:1] THEN IF E.[43:1] THEN GO TO LOCKOUT%          04483000
                             ELSE GO TO D22;%                           04484000
              IF E.[43:1] THEN GO TO TAPERETRY;%                        04485000
              P(@40);%                                                  04486000
 SIX:         T ~ T&P(XCH)[5:40:8];%                                    04487000
              F ~ 1;%                                                   04488000
 FIX:    E ~ T.[5:8]|F;%                                                04489000
         FIN:=S;                                                        04489100
              IOD ~ IOQUE[S]  ;%                                        04490000
SEVEN:   IOQUE[S]:=IOQUEAVAIL;                                          04491000
         IOQUEAVAIL ~ S+1;%                                             04492000
         T.[FF]:=S:=LOCATQUE[S].[FF];                                   04493000
         IF F=@3100001 THEN IF S NEQ @77777 THEN GO TO SEVEN;           04493100
         S:=FIN;                                                        04493200
              IF FALSE THEN%                                            04494000
 LEAVE:       IOD ~ IOQUE[S];%                                          04495000
              FIN ~ FINALQUE[S] AND NOT MEMORY;%                        04496000
              IF IOD.[24:1] THEN%                                       04497000
                   BEGIN NT4 ~ M[IOD INX ( IF IOD.[22:1] THEN 1 ELSE%   04498000
                             NOT 0)];%                                  04499000
                        FINISHOFFIO(U);%                                04500000
                   END;%                                                04501000
              IF ( T1~ FIN) < 0 THEN%                                   04502000
              P(R&E[25:40:8]&IOD[3:3:5]OR IOMASK,LOCATQUE[S],~)%        04503000
         ELSE BEGIN IF E ! 0 THEN%                                      04504000
                   BEGIN P(.T1,PRL);%                                   04505000
                        T1 ~ T1&E[25:40:8];%                            04506000
                   END ELSE P(.T1,IOR);%                                04507000
              LOCN ~ [M[LOCATQUE[S]]];%                                 04508000
              IOD ~ IOD.[33:15];%                                       04509000
              WHILE LOCN[0].[33:15] ! IOD DO%                           04510000
                   LOCN ~ 1 INX LOCN;%                                  04511000
              LOCN[0] ~ P(.T1,LOD);%                                    04512000
              END;%                                                     04513000
              IF NOT DISC THEN                                      %GEH04513500
              BEGIN UNIT[U] := T;                                   %GEH04514000
 CLEAR:            UNIT[U] := (*P(DUP))&F[5:20:13];                 %GEH04514500
                   STARTIO(U);                                      %GEH04515000
              END;                                                  %GEH04516000
 KILLL:%                                                                04517000
              LOCATQUE[S].[11:1]~0;                                     04517100
 KILLER:                                                   %        GEH%04517200
              KILL([U]);%                                               04519000
 END;%                                                                  04520000
 SAVE PROCEDURE IOERR(U); VALUE U; REAL U;%                             04521000
         BEGIN%                                                         04522000
              REAL X, Y, Z;                                             04522075
              IF ((X:=U.[3:5]) AND @774) = 16 THEN                  %GEH04523000
              BEGIN IF U GEQ 0 THEN                                     04523500
                   BEGIN STREAM(A:=TINU[X],I:=IF U.[24:1] THEN "R"  %GEH04524000
                             ELSE "W",R~(U.[26:7]|P(DUP,DUP,|)|%        04525000
                             @1000000000000).[3:6]+16,K~[U] INX 99);%   04526000
                             BEGIN SI ~ LOC A; SI ~ SI+5; DS ~ 3 CHR;%  04527000
                             DS ~ LIT "("; SI ~ SI+7; DS ~ CHR;%        04528000
                             DS ~ 11 LIT ") FAILURE-D"; DS ~ 2 DEC;%    04529000
                             DS ~ LIT "~";%                             04530000
                             END;%                                      04531000
                        NT2 ~ WAITIO([U] INX 99,@377,25);%              04532000
                   END;                                                 04532500
                        NT4:=(X:=UNIT[NT2:=U.[3:5]]).[18:15];           04533000
$ INCLUDE 04533601, IF DFX;                                         %GEH04533199
                        IF U.[30:1] THEN              % NOT READY   %GEH04533200
                        EUQ[M[IOQUE[NT4]].[6:6]] := ABS(NOT 0) ELSE %GEH04533400
                        BEGIN                                       %GEH04533600
                        UNIT[NT2]:=NFLAG([M[X]])&LOCATQUE[NT4]          04534000
                             [18:18:15];%                               04535000
                        STARTIO(NT2);%                                  04537000
$ INCLUDE 04537501, IF DFX;                                         %GEH04537499
                        END;                                        %GEH04537500
                        HALT;%                                          04538000
                   END;%                                                04540000
              ACTUALIOERR(X,U);                                     %GEH04543000
         END;%                                                          04544000
$ OMIT   04547001, IF NOT DEBUGGING;                                    04544999
         REAL  NSTOP,B,C,ERROR,NSYMBS,LP;%                              04545000
         ARRAY WB[*],RBX[*],TBL[*],STOPS[*];                            04546000
         REAL TYPETOG;%                                                 04547000
 REAL PROCEDURE TAPEPARITYRETRY(R,U);%                                  04548000
    VALUE R,U;%                                                         04549000
    REAL R,U;%                                                          04550000
    BEGIN REAL T1,T2,T3; INTEGER I= T1;%                                04551000
         REAL RESULT,IOD,OIOD,SPACEMASK,SPACEIOD,M,N,W,MODE;%           04552000
         REAL J,K;%                                                     04553000
         REAL ERASEIOD=SPACEMASK;%                                      04554000
    REAL Z,Y,MIX,BSIZE;                                                 04554100
         LABEL XIO,GIVEUP;                                              04554200
         LABEL RP,LX;                                                   04554300
         REAL SIZE,T4,LIMIT;                                            04554500
         LABEL EXIT;%                                                   04555000
    SUBROUTINE DOIONOW;%                                                04556000
    BEGIN FOR Y~1 STEP 1 UNTIL 18 DO                                    04556100
         BEGIN IF R.[24:1]THEN                                          04557000
              BEGIN % WAIT 1/15 SEC BETWEEN READ RETRIES                04557100
                   WHILE T4>CLOCK+P(RTR) DO SLEEP(1,1);                 04557200
                   T4~CLOCK+P(RTR)+4;                                   04557300
              END;                                                      04557400
              IF IOQUEAVAIL=0 THEN SLEEP([IOQUEAVAIL],1023);            04558000
              IOQUEAVAIL ~ IOQUE[T1 ~ IOQUEAVAIL-1];%                   04559000
              IOQUE[T1]~ IOD;%                                          04560000
              LOCATQUE[T1]~LOCATQUE[T2 ~(T3~UNIT[U]).[18:15]]&[RESULT]% 04561000
                   [33:33:15]&T2[18:33:15];%                            04562000
              UNIT[U] ~ T3&T1[18:33:15]&64[5:35:13];%                   04563000
              STARTIO(U);%                                              04564000
              FINALQUE[T1] ~ NABS(IOD)&  0 [25:40:8] OR IOMASK;%        04565000
              RESULT ~ 0;%                                              04566000
              SLEEP([UNIT[U]],@100000000000);%                          04567000
              IF RESULT.[29:1] AND RESULT.[2:1] THEN                    04567100
              BEGIN                                                     04567150
                   IF RESULT.[12:1] THEN   %  BLANK TAPE                04567200
                   IF IOD.[24:1] THEN      %  READ                      04567250
                        TRANSACTION[U]~TRANSACTION[U]-1&IOD[1:22:1] ELSE04567300
                   BEGIN;   %   WRITE                                   04567310
                        STREAM(A~TINU[U],T~T2~GETSPACE(3,0,0)+2);       04567320
                        BEGIN SI~LOC A; SI~SI+5; DS~3 CHR;              04567400
                             DS~21 LIT" BLANK TAPE ON WRITE~";          04567500
                        END;                                            04567550
                        SPOUT(T2);                                      04567600
                        MODE~16;                                        04567650
                        GO TO EXIT;                                     04567700
                   END;                                                 04567750
                   IF RESULT.[11:1] THEN   %  MEM PARITY                04567770
                   BEGIN;                                               04567780
                        STREAM(A~TINU[U],T~T2~GETSPACE(3,0,0)+2);       04567790
                        BEGIN SI~LOC A; SI~SI+5; DS~3 CHR;              04567800
                             DS~13 LIT" I/O MEM PAR~";                  04567810
                        END;                                            04567820
                        SPOUT(T2);                                      04567830
                        MODE~16;                                        04567840
                        GO TO EXIT;                                     04567850
                   END;                                                 04567860
                   IF RESULT.[13:2]!0 THEN Y~18;                        04567870
              END ELSE GO TO XIO;                                       04567900
         END;%                                                          04568000
         RESULT.[27:1]~1; MODE~32;                                      04568100
XIO: END DOIONOW;                                                       04568200
    SUBROUTINE SPACEBACK;                                               04568300
    BEGIN                                                               04568310
         IF TRANSACTION[U]=1 THEN                                       04568320
         BEGIN                                                          04568330
              IOD:=@4200000000&OIOD[3:3:5];                             04568340
              DOIONOW;                                                  04568350
              I:=TWO(U);                                                04568360
              DO UNTIL (P(RRR) AND I)!0;                                04568370
         END ELSE                                                       04568380
         BEGIN                                                          04568390
              M:=W;                                                     04568400
              IOD:=SPACEIOD;                                            04568410
              J:=0;                                                     04568420
              DO BEGIN                                                  04568430
                   DOIONOW;                                             04568440
                   TRANSACTION[U]:=(*P(DUP))+1;                         04568450
                   J:=J+1;                                              04568460
              END UNTIL ((M:=RESULT.[CF]-SPACEIOD.[CF]+M) LSS 0         04568470
                   OR RESULT.[27:1]) AND J GTR 1;                       04568480
              TRANSACTION[U]:=(*P(DUP))-2;                              04568490
              IOD:=SPACEIOD&0[22:47:1];                                 04568500
              DOIONOW;                                                  04568510
              IF BSIZE=0 THEN BSIZE:=RESULT.[CF]-IOD.[CF] ELSE          04568520
              IF BSIZE!RESULT.[CF]-IOD.[CF] THEN                        04568530
              BEGIN                                                     04568540
                   STREAM(A:=TINU[U],D:=T2:=GETSPACE(10,0,0)+2);        04568550
                   BEGIN SI:=LOC A;SI:=SI+5;DS:=3 CHR;                  04568560
                        DS:=13 LIT" ERASE ERROR~";                      04568570
                   END;                                                 04568580
                   SPOUT(T2);                                           04568590
                   GO GIVEUP;                                           04568600
              END;                                                      04568610
         END;                                                           04568620
    END; % OF SPACEBACK                                                 04568630
    TINU[U].[18:12] ~ P(DUP).[18:12]+1;%                                04569000
    OIOD ~ NFLAG(IOQUE[UNIT[U].[18:15]]);%                              04570000
    IF R.[24:1] THEN%                                                   04571000
    BEGIN COMMENT READ RETRY;%                                          04572000
         SPACEMASK ~ OIOD.[21:2]|@1111 EQV NOT @0123;%                  04573000
         SPACEIOD ~ OIOD&1[8:38:10]&1[23:47:1];%                        04574000
         FOR M ~ 1 STEP 1 UNTIL 3 DO%                                   04575000
              BEGIN SPACEIOD ~ SPACEIOD&SPACEMASK[21:46:2];%            04576000
                   FOR N ~ 1 STEP 1 UNTIL 5 DO%                         04577000
                        BEGIN IOD ~ SPACEIOD;%                          04578000
                             IF N!1 OR M!1 THEN DOIONOW ELSE            04579000
                             IF NOT(R.[29:1]AND R.[2:1] AND R.[12:1])   04579100
                                THEN DOIONOW;                           04579200
                             IF RESULT.[28:1] THEN%                     04580000
                                  BEGIN MODE ~ 0;%                      04581000
                                       IOD ~ OIOD;%                     04582000
                                  END%                                  04583000
                             ELSE BEGIN MODE ~ 8;%                      04584000
                                       IOD ~ OIOD&SPACEMASK[21:43:2];%  04585000
                                  END;%                                 04586000
                             DOIONOW;%                                  04587000
                             IF NOT RESULT.[28:1] THEN GO TO EXIT;%     04588000
                             IF MOD3IOS THEN IF OIOD.[23:1] THEN        04588010
                             BEGIN Z~IOD~OIOD&SPACEMASK[21:40:2]        04588020
                                    &(OIOD.[33:15]+(OIOD.[8:10]-1)      04588030
       &OIOD[1:22:1])[33:33:15];                                        04588040
                                   DOIONOW; MODE~0;                     04588050
                                   IF RESULT.[28:1] THEN                04588060
                                   BEGIN IOD~OIOD; DOIONOW;             04588070
                                         IF NOT RESULT.[28:1] THEN      04588080
                                            GO TO EXIT;                 04588090
                                         IOD~Z&SPACEMASK[21:46:2];      04588100
                                         DOIONOW; MODE~8;               04588110
                                         IF RESULT.[28:1] THEN          04588120
                                         BEGIN IOD~OIOD&SPACEMASK       04588130
                                                   [21:43:2];           04588140
                             RP:               DOIONOW;                 04588150
                                               IF RESULT.[28:1] THEN    04588160
                                                  GO TO LX;             04588170
                                               GO TO EXIT;              04588180
                                         END;                           04588190
                                   END;                                 04588200
                                   Z~ABS(IOD.[33:15]-RESULT.[33:15]);   04588210
                                   IF IOD.[21:2]=0 THEN                 04588220
                                      Z~Z-(RESULT.[15:3]=0);            04588230
                                   IF IOD.[8:10]<Z THEN                 04588240
                                   BEGIN IOD~OIOD; MODE~0; GO TO RP END;04588250
                                   IF IOD.[22:1] THEN                   04588260
                                   STREAM(Z,Y~Z DIV 64,                 04588270
                                          S~RESULT.[33:15]+1,           04588280
                                          SK~(RESULT.[15:3]+1).[45:3],  04588290
                                          GM~(IF IOD.[21:1] THEN 0      04588300
                                                            ELSE "~"),  04588310
                                          D~OIOD.[33:15]);              04588320
                                   BEGIN SI~S; SI~SI+SK;                04588330
                                         Y(16(DS~32 CHR));              04588340
                                         Z(DS~8 CHR);                   04588350
                                         SK(DS~LIT "0");                04588360
                                         DI~DI-SK; SI~LOC GM;           04588370
                                         SI~SI+7; DS~CHR;               04588380
                                   END ELSE                             04588390
                                   STREAM(Z,Y~Z DIV 64,                 04588400
                                          S~RESULT.[33:15]-1,           04588410
                                          SK~(RESULT.[15:3]+7).[45:3],  04588420
                                          FL~(IF IOD.[21:1] THEN 0      04588430
                                                            ELSE @14),  04588440
                                          FK~(8-RESULT.[15:3]).[45:3],  04588450
                                          D~OIOD.[33:15]);              04588460
                                   BEGIN SI~S; SI~SI+SK; DI~DI+7;       04588470
                                         Y(16(32(DS~CHR; SI~SI-2;       04588480
                                                 DI~DI-2)));            04588490
                                         Z(8(DS~CHR; SI~SI-2; DI~DI-2));04588500
                                         SI~LOC FL; SI~SI+7;            04588510
                                         FK(DS~CHR; SI~SI-1; DI~DI-2);  04588520
                                   END;                                 04588530
                                   IOD~@140000005&OIOD[22:22:1]         04588540
                                                 &OIOD[3:3:5];          04588550
                                   DOIONOW; GO TO EXIT;                 04588560
                   LX:       END;                                       04588570
                        END;%                                           04589000
                   N ~ IF TRANSACTION[U] < 15 THEN%                     04590000
                             TRANSACTION[U] ELSE 15;%                   04591000
                   IOD ~ SPACEIOD&SPACEMASK[21:40:2];%                  04592000
                   FOR W ~ 1 STEP 1 UNTIL N DO%                         04593000
                        BEGIN DOIONOW;%                                 04594000
                             IF RESULT.[27:1] THEN N~0;%                04595000
                        END;%                                           04596000
                   IOD ~ SPACEIOD&SPACEMASK[21:37:2];%                  04597000
                   FOR N ~ 3 STEP 1 UNTIL W DO DOIONOW;%                04598000
                   IOD ~ OIOD;%                                         04599000
                   MODE ~ 0;%                                           04600000
                   DOIONOW;%                                            04601000
                   IF NOT RESULT.[28:1] THEN GO TO EXIT;%               04602000
              END;%                                                     04603000
         MODE ~ 16;%                                                    04604000
    END ELSE BEGIN COMMENT WRITE RETRY;%                                04605000
         LIMIT~@100000;                                                 04605500
         MIX:=LOCATQUE[UNIT[U].[FF]].[3:5];                             04605600
         ERASEIOD ~ (SPACEIOD ~ OIOD&0[8:38:10]&7[22:45:3]&[T2]%        04606000
                   [33:33:15])&@112[18:41:7];%                          04607000
         W ~ R.[33:15]-OIOD.[33:15]+2;%                                 04608000
         WHILE TRUE DO                                                  04609000
              BEGIN                                                     04610000
                   SPACEBACK;                                           04611000
                   IF (N:=N+W+128) GTR LIMIT OR                         04627000
                       (MIX!0 AND TERMIX.[CF]=MIX) THEN GO GIVEUP;      04627100
                   IOD ~ ERASEIOD&N[9:39:9];%                           04628000
                   FOR J ~ 0 STEP 512 UNTIL N DO%                       04629000
                        BEGIN TRANSACTION[U] ~ TRANSACTION[U]-1;%       04630000
                             DOIONOW;%                                  04631000
                             IOD ~ ERASEIOD&1[8:47:1];%                 04632000
                   IF RESULT.[27:1] THEN                                04633000
                   BEGIN                                                04633100
                        IF NOT R.[27:1] THEN LIMIT~J+3000;              04633200
                        R.[27:1]~1;                                     04633300
                   END;                                                 04633400
                        END;%                                           04634000
                   IOD ~ OIOD;%                                         04635000
                   DOIONOW;%                                            04636000
                   IF RESULT.[27:1] THEN R.[27:1] ~ 1;%                 04637000
                   IF NOT RESULT.[28:1] THEN%                           04638000
                   BEGIN                                                04638100
                        SIZE~RESULT.[CF]-OIOD.[CF];                     04638200
                        SPACEBACK;                                      04638300
                        IOD~SPACEIOD&0[22:47:1];                        04638650
                        DOIONOW;                                        04638700
                        IF NOT(RESULT.[28:1] OR (OIOD.[21:1] AND        04638800
                             (RESULT.[CF]-SPACEIOD.[CF]!SIZE))) THEN    04638900
                        BEGIN                                           04639000
                             MODE~0&R[42:27:1];                         04639100
                             GO TO EXIT;                                04639200
                        END;                                            04640000
                   END;                                                 04641000
              END;%                                                     04642000
GIVEUP:                                                                 04642900
         T2 ~ GETSPACE(3,0,0)+2;%                                       04643000
         STREAM(A~TINU[U],T2);%                                         04644000
              BEGIN SI ~ LOC A; SI ~ SI+5; DS ~ 3 CHR;%                 04645000
                   DS ~ 11 LIT " WR PARITY~";%                          04646000
              END;%                                                     04647000
         SPOUT(T2);%                                                    04648000
         MODE ~ 16;%                                                    04649000
     END;%                                                              04650000
 EXIT:   TAPEPARITYRETRY ~ UNIT[U]&MODE[5:40:8];%                       04651000
 END TAPEPARITYRETRY;%                                                  04652000
 REAL PROCEDURE PLACEFINDER(S, A, L);                                   04700000
         VALUE S, A;                                                    04701000
         REAL S, A, L;                                                  04702000
    BEGIN INTEGER I;  ARRAY B[*];                                       04703000
         REAL T, W, E, J, AA;                                           04704000
         LABEL NULL, FOUND, EXIT;                                       04705000
         W ~ -1;                                                        04706000
         B ~ [M[T ~ GETSPACE(30, 0, 0)+2]]&30[8:38:10];                 04707000
         IF S=0 THEN                                                    04708000
 NULL:   BEGIN;STREAM(T);  9(DS~2 LIT "  ");  GO TO EXIT END;           04709000
         DISKWAIT(-T,30,JAR[P1MIX,10]);                                 04710000
         IF (JAR[P1MIX,10]=0) OR (AA~B[0].[FF])=0 THEN                  04711000
         BEGIN;STREAM(S,A,T);                                           04712000
              BEGIN DS~5 LIT ", S =";                                   04713000
                   SI~LOC S;  DS~4 DEC;                                 04714000
                   DS~5 LIT ", A =";                                    04715000
                   DS~4 DEC;                                            04716000
                   DI~T;  DI~DI+5;  DS~3 FILL;                          04717000
                   DI~T;  DI~DI+14;  DS~3 FILL;                         04718000
              END STREAM;                                               04719000
              GO TO EXIT;                                               04720000
         END;                                                           04721000
         DISKWAIT(-T,30,I:=JAR[P1MIX,AA DIV JAR[P1MIX,8]+10]+           04722000
              AA MOD JAR[P1MIX,8]+S DIV 30);                            04723000
         IF (J~B[S MOD 30])<0 THEN GO TO NULL;                          04725000
         AA ~ I ~ JAR[P1MIX,J.[CF] DIV JAR[P1MIX,8]+10]+                04726000
              J.[CF] MOD JAR[P1MIX,8];                                  04727000
         I~0;  J~J.[FF];                                                04728000
         DO BEGIN S~(I+J).[36:11];                                      04729000
              IF W!(W:=S DIV 30) THEN DISKWAIT(-T,30,AA+W);             04731000
              IF (E ~ B[S-W|30].[38:10])=A THEN GO TO FOUND;            04732000
              IF E<A THEN I~S ELSE J~S;                                 04733000
         END UNTIL J-I=1;                                               04734000
         S~I;                                                           04735000
 FOUND:  L ~ -B[S MOD 30].[10:28];                                      04736000
         STREAM(L~ABS(L),T);                                            04737000
         BEGIN DS~10 LIT ", LINE NO ";                                  04738000
              SI~LOC L;  DS~8 DEC;                                      04739000
              DI~DI-8;  DS~7 FILL;                                      04740000
         END STREAM;                                                    04741000
 EXIT:   PLACEFINDER ~ T;                                               04742000
    END PLACEFINDER;                                                    04743000
$INCLUDE 05607000, IF DATACOM AND NOT INQUIRY;                          04999999
PROCEDURE STABLE(RD,S);VALUE RD,S;REAL RD,S;                            05000000
BEGIN                                                                   05001000
    DEFINE                                                              05003000
    INTERROGATE =RD.[18:1]#,                                            05004000
    BUSY = RD.[22:1]#,                                                  05005000
    NOTREADY= RD.[30:1]#,                                               05007000
    NOERRORS =  NOT(RD.[27:1])#,                                        05008000
    STACURR= STATION[RD.[14:4],RD.[9:4]]#,                              05011000
    SETBUSYBIT = RD ~ RD&0[28:47:1]&1[22:47:1]#,                        05012000
    READOP=RD.[24:1]#,                                                  05013000
    IFAL=RD.[25:1]#;                                                    05014000
 REAL STA,RT1,RT2;                                                      05015500
REAL IODLOC=NT7,RT3=NT3,RT4=NT6,IOD= RT2;                               05016000
ARRAY AT1=RT3[*];                                                       05016100
LABEL DCW;                                                              05017000
LABEL EGRESS;                                                           05018000
REAL SUBROUTINE IODLOCATER;                                             05019000
    BEGIN                                                               05020000
    RT1~ LOCATQUE[S] INX 0;                                             05021000
    IF AT1>0  THEN % NORMAL STATE I/O                                   05022000
         BEGIN                                                          05023000
         RT1 ~ RT1-1;                                                   05026000
         DO                                                             05027000
         UNTIL                                                          05028000
              (M[RT1 ~ RT1 + 1] INX 0 ) = IOD;                          05029000
         M[RT1].[33:15] ~ (IOD-1);                                      05029500
         END;                                                           05030000
    IODLOCATER ~ RT1;                                                   05032000
    END;                                                                05033000
SUBROUTINE FLOATPIODS;                                                  05038000
    BEGIN                                                               05039000
    IF AT1>0 THEN                                                       05040000
         BEGIN                                                          05041000
         RT1 ~(LOCATQUE[S] INX 0);                                      05042000
         RT3 ~ M[M[RT1-3] INX 13].[10:9];                               05043000
         RT2 ~ 0;                                                       05044000
         DO                                                             05045000
              BEGIN                                                     05046000
              IF M[RT1].[19:1] THEN                                     05047000
                   BEGIN                                                05048000
                   IF RT2!0 THEN                                        05049000
                        BEGIN                                           05052000
                        RT4 ~ M[RT2];                                   05053000
                        M[RT2] ~ M[RT1];                                05054000
                        M[RT1] ~ RT4;                                   05055000
                        RT2 ~ IF M[RT2+1].[19:1] THEN RT1 ELSE (RT2+1); 05056000
                        END;                                            05058000
                   END                                                  05059000
              ELSE                                                      05060000
                   BEGIN                                                05061000
                   IF RT2 = 0 THEN                                      05062000
                        RT2 ~ RT1;                                      05063000
                   END;                                                 05064000
              RT1~RT1+1;                                                05065000
              END                                                       05066000
         UNTIL                                                          05067000
              (RT3 ~ RT3-1) { 0                                         05068000
         END;                                                           05069000
    END;                                                                05070000
SUBROUTINE DELINKFAK;                                                   05070510
    BEGIN                                                               05070520
    IF AT1>0 THEN                                                       05070530
         BEGIN                                                          05070540
         M[(RT3~RT1.[18:15])].[33:15] ~ RT1;                            05070560
         M[RT1].[18:15] ~ RT3;                                          05070570
         END;                                                           05070580
    END;                                                                05070590
SUBROUTINE FORGETFAK;                                                   05070600
    BEGIN                                                               05070610
    RT2~0&M[RT4] [9:9:9];                                               05070620
    RT1 ~ ILL;                                                          05070625
    DO                                                                  05070630
         BEGIN                                                          05070640
         RT1 ~ P(RT1,RT2,LLL,0,INX,.RT4,STD);                           05070650
         IF (RT2.[9:9]=RT1.[9:9]) AND (RT1<0) THEN                      05070660
              BEGIN                                                     05070670
              DELINKFAK;                                                05070690
              FORGETSPACE(RT4 + 1);;                                    05070700
              END;                                                      05070710
         END                                                            05070720
    UNTIL                                                               05070730
         RT1 = ILL;                                                     05070740
    END;                                                                05070750
% -----------START  HERE----------------------------------------------  05070900
IF (STA ~ RD.[23:10]) = 0 THEN                                          05070910
    RD.[22:01] ~ 0                                                      05070920
ELSE                                                                    05070930
    BEGIN                                                               05070940
    IF NOT INTERROGATE THEN                                             05070950
         STA ~ STA AND @1737;                                           05070960
    RD.[22:11] ~ IF STA         = @0020 THEN @2000 ELSE                 05070970
                 IF STA.[43:05] =   @24  OR                             05070980
                    STA.[43:05] =   @04 THEN STA AND @1757              05070985
                                        ELSE STA;                       05070990
    END;                                                                05070995
RD ~ RD &(STA ~ GET(NFLAG(IOQUE[S]))) [9:9:4] &STA[14:14:4];            05071000
IF INTERROGATE THEN                                                     05073000
    BEGIN                                                               05074000
    IF ( (RT1 ~ RD.[22:11]) AND @1464 )= @1400 THEN                     05075000
         GO TO EGRESS;                                                  05075500
     IF (RT1=@1020) OR ((RD.[27:7] AND @101)=@101) THEN %WPM            05076000
         BEGIN                                                          05076500
         RD.[24:1] ~ 1;                                                 05077000
         END;                                                           05077600
    STACURR ~ ((STA AND @3767577410377777)                              05077700
              OR(RD  AND @0010200346400000)                             05077800
             )                                                          05077900
             OR                                                         05077950
              (IF  RD.[22:1] THEN  % BUSY CONDITION                     05078000
                   (STA AND @0000000221000000)          % B,IFAL,  WIP  05078500
              ELSE                                                      05078550
                   (0)                                                  05078600
             );                                                         05078700
    GO TO EGRESS;                                                       05079000
    END;                                                                05080000
AT1 ~ FINALQUE[S];                                                      05081000
IF AT1<0 THEN                                                           05081100
    GO TO EGRESS;                                                       05081200
IOD ~ IOQUE[S] INX 0;                                                   05081210
RD.[27:1] ~ (RD.[33:15] = IOD);                                         05081220
IF NOERRORS THEN                                                        05082000
    BEGIN                                                               05082050
    STACURR ~ (STA AND @3767577410377777)& RD[25:25:1];                 05082100
    IF READOP THEN                                                      05082150
         BEGIN                                                          05082160
         STACURR.[26:1] ~ 0;                                            05082170
         STA ~ STA &RD[25:25:1] & 0[22:47:1];                           05082200
         END                                                            05082210
    ELSE                                                                05082250
         STACURR ~ STA ~ STACURR & 1[29:47:1];                          05082300
    END                                                                 05082350
ELSE                                                                    05082400
    BEGIN                                                               05082450
    STACURR ~ (STA AND @3767577410377777) OR (RD AND @0010200362400000);05082500
    STA ~ STACURR;                                                      05082550
    END;                                                                05082600
M[IOD-1] ~ STA;                                                         05082650
IF READOP THEN                                                          05083000
    BEGIN                                                               05084000
$INCLUDE 05084051, IF DCSPO AND DATACOM AND NOT INQUIRY;                05084049
    QTIMER(STA);                                                        05084050
    IODLOC ~ IODLOCATER;                                                05084100
    IF NOERRORS THEN                                                    05085000
         BEGIN                                                          05086000
         M[IODLOC] ~(AT1 &(NOT STA.[23:1])[2:47:1]) OR IOMASK;          05087000
         M[IOD-2] ~ ((RD INX 0)-IOD) + 1; % +1 IS STATUS WORD           05088000
         IF NOT IFAL THEN                                               05089000
    DCW:      INDEPENDENTRUNNER(P(.DCWRITE),NABS(STA));                 05090000
         GO TO EGRESS;                                                  05099000
         END;                                                           05100000
    M[IODLOC] ~ (AT1 OR IOMASK) AND NOT (M);                            05101000
    M[IOD-2] ~ 2;                                                       05102000
    M[IOD] ~ @1414222124141437;                                         05103000
    GO TO EGRESS;                                                       05118100
END;                                                                    05119000
%IF WRITEOP THEN    (WHAT ELSE...)                                      05121000
    BEGIN                                                               05123000
    IF M[IOD-4] > 0 THEN                                                05123100
         IODLOC ~ IODLOCATER;                                           05123200
    M[(RT4 ~ IOD- 4)].[9:9] ~ (RD.[9:9] AND @757);                      05123500
    RT1 ~ M[RT4];                                                       05123600
    IF NOERRORS THEN                                                    05124000
         BEGIN                                                          05125000
         IF RT1 > 0 THEN                                                05125100
              BEGIN                                                     05125200
              M[RT4] ~ 0;                                               05125300
              M[IODLOC] ~ AT1 OR M OR IOMASK;                           05126000
              DELINKFAK;                                                05126100
              FLOATPIODS;                                               05127000
              END                                                       05127100
         ELSE                                                           05127110
              BEGIN                                                     05127120
              DELINKFAK;  FORGETSPACE(RT4+1);                           05127140
              END;                                                      05127150
         GO TO EGRESS;                                                  05129000
         END;                                                           05130000
    IF BUSY OR NOTREADY THEN                                            05131000
         BEGIN                                                          05132000
         IF M[RT4] < 0 THEN                                             05135100
              FORGETFAK                                                 05135200
         ELSE                                                           05135300
              BEGIN                                                     05135310
              IF NOTREADY THEN                                          05135400
                   BEGIN                                                05135410
                   M[IODLOC] ~ (AT1 OR  IOMASK) AND NOT(M);             05135420
                   DELINKFAK;                                           05135500
                   FLOATPIODS;                                          05135510
                   END;                                                 05135520
              END;                                                      05135530
         GO TO DCW ;                                                    05136000
         END;                                                           05137000
   %IF ANYTHINGELSE                                                     05139000
         BEGIN                                                          05140000
         IF M[RT4] < 0 THEN                                             05142100
              FORGETFAK                                                 05142200
         ELSE                                                           05142300
              BEGIN                                                     05142350
              M[IODLOC] ~ (AT1 OR IOMASK) AND NOT(M);                   05142400
              DELINKFAK;                                                05142500
              FLOATPIODS;                                               05142600
              END;                                                      05142700
         GO TO EGRESS;                                                  05143000
         END;                                                           05144000
END;                                                                    05144100
EGRESS::                                                                05145000
END STABLE;                                                             05150000
SAVE REAL PROCEDURE GET(TUSTA); VALUE TUSTA; REAL TUSTA;                05500000
    BEGIN                                                               05501000
    REAL TU,BUF,RD,X;                                                   05502000
    LABEL START;                                                        05503000
    DEFINE T=[9:4]#,S=[14:4]#;                                          05504000
    START:                                                              05508000
    IF P(STATIONROW[(BUF~TUSTA.S)],TOP,XCH,DEL) THEN                    05510000
         BEGIN                                                          05511000
         IF BUMPTUTIME THEN                                             05512000
              BEGIN                                                     05513000
              BUMPTUTIME ~ FALSE;                                       05514000
              STATIONROW[BUF] ~((TU~GETSPACE(TUMAX,5,TRUE)+2)INX MEMORY)05515000
                               &TUMAX[8:38:10];                         05516000
              M[TU-2].[9:6] ~ 0;                                        05516100
              M[TU] ~ 0;                                                05517000
              MOVE(TUMAX-1,TU,TU+1); BUMPTUTIME ~ TRUE;                 05518000
              END                                                       05519000
         ELSE                                                           05520000
              BEGIN                                                     05521000
              SLEEP([TOGLE],BUMPTUMASK);                                05522000
              GO TO START;                                              05523000
              END;                                                      05524000
         END;                                                           05525000
    IF (TU~TUSTA.T) < TUMAX THEN                                        05528000
         BEGIN                                                          05530000
         IF (NOT(GET~STATION[BUF,TU]) = NOT 0) THEN                     05531000
              BEGIN                                                     05533000
         GET~STATION[BUF,TU] ~                                          05537000
         0&(TUSTA.[9:9] AND @757)[9:39:9]&TUSTA[4:9:4]&TUSTA[18:14:4];  05537100
              END;                                                      05538000
         END                                                            05539000
    ELSE                                                                05540000
         BEGIN                                                          05541000
         IF BUMPTUTIME THEN                                             05542000
              BEGIN                                                     05543000
              BUMPTUTIME ~ FALSE;                                       05544000
              FOR RD~0 STEP 1 UNTIL 15 DO                               05545000
                   IF NOT(P(STATIONROW[RD],TOP,XCH,DEL)) THEN           05546000
                        BEGIN                                           05547000
                        X ~ GETSPACE(TU+1,5,TRUE) + 2;                  05548000
                        M[X-2].[9:6] ~ 0;                               05548100
                        M[X]~0;                                         05549000
                        MOVE(TU,X,X+1);                                 05550000
                        MOVE(TUMAX,STATIONROW[RD]INX 0,X);              05551000
                        FORGETSPACE(STATIONROW[RD] INX 0);              05552000
                        STATIONROW[RD] ~ (X INX MEMORY)&(TU+1)[8:38:10];05553000
                        END;                                            05554000
              TUMAX ~ TU+1;                                             05554100
              BUMPTUTIME ~ TRUE;                                        05555000
              GO TO START;                                              05555500
              END                                                       05556000
         ELSE                                                           05557000
              BEGIN                                                     05559000
              SLEEP([TOGLE],BUMPTUMASK);                                05560000
              GO TO START;                                              05561000
              END;                                                      05562000
        END;                                                            05563000
    END GET;                                                            05564000
SAVE PROCEDURE SET(TUSTA); VALUE TUSTA; REAL TUSTA;                     05600000
    BEGIN                                                               05602000
    REAL STA;                                                           05603000
    STA ~ GET(TUSTA);                                                   05604000
    STATION[STA.[14:4],STA.[ 9:4]] ~                                    05605000
         (STA AND @3777777777600005) OR (TUSTA AND @377772);            05605100
    END SET;                                                            05606000
PROCEDURE LOGOUT(A); VALUE A; REAL A; FORWARD;                          05607000
PROCEDURE LOGSPACE(W,L); % THIS MAY ZIP                                 05700000
VALUE W,L; NAME W; INTEGER L;  % FIRST WORD,WORD COUNT                  05701000
COMMENT THIS WILL CLOBBER WORDS AROUND THOSE LOGGED;                    05701010
BEGIN INTEGER B,I,J,K,N; ARRAY A[*]; LABEL OK; DEFINE Z=LOGFREE#;       05702000
    N~L DIV 5;  %NO REMAINDER ALLOWED                                   05702500
    A:=[M[B:=GETSPACE(30,0,0)+2]]&30[8:38:10];                          05703000
    IF Z>0 THEN SLEEP([Z],-0); Z~-Z;                                    05703500
$ INCLUDE 05703801, IF SHAREDISK;                                       05703699
    DISKWAIT(-B,-1,DIRECTORYTOP-4);                                     05703700
    Z:=A[0];                                                            05703800
    DISKWAIT(-B,30,Z);                                                  05704000
IF (I~A[0])+6+N}(J~A[1]) THEN BEGIN I~0; K~1 END  %WRAP AROUND          05705000
ELSE IF I+N+100 GEQ J THEN K ~ 2 % NEARLY FULL                          05706000
ELSE IF I<J DIV 2 AND J DIV 2<I+N  THEN K~3  % HALF FULL                05707000
ELSE GO TO OK; IF K THEN J:=GETSPACE(3,0,0)+2;                          05708000
IF K THEN IF K=1 THEN STREAM(J); DS~17 LIT " LOG WRAP AROUND~"          05709000
         ELSE STREAM(J); DS~15 LIT "#LOG HALF FULL~";                   05710000
         IF K THEN SPOUT(J) ELSE                                        05711000
         INDEPENDENTRUNNER(P(.LOGOUT),0);                               05712000
OK: A[0]~N+I; A[3]~K; A[2]~I~I+1;   %WE NOW PUT THE WORDS IN I          05715000
    W[L]~4;     %    END OF LOG                                         05715100
    J~(I MOD 6)|5;   %SIZE OF NEIGHBORHOOD (NBD)                        05716000
$ INCLUDE 05717001, IF SHAREDISK;                                       05716999
    W[0].[1:2]:=SYSNO;                                                  05717000
    IF (I~I DIV 6)!0 THEN DISKWAIT(B,30,Z);   %DUMP RECORD ZERO         05722000
    IF J!0 THEN   % GET  NBD                                            05723000
    BEGIN IF I!0 THEN DISKWAIT(-B,30,Z+I);                              05724000
         MOVE(30-J,W INX 0,A INX J)                                     05725000
    END                                                                 05726000
    ELSE B:=W INX 0;                                                    05727000
    DISKWAIT(B,30,Z+I);                                                 05728000
    IF (L+J) GEQ 30 THEN DISKWAIT(W INX 30-J,L+J-29,Z+I+1);             05728200
$INCLUDE 05728301, IF STATISTICS;                                       05728299
    COUNTUP(24,(L DIV 30)+((L MOD 30) NEQ 0));                          05728300
    FORGETSPACE(A);                                                     05729000
$ INCLUDE 05729201, IF SHAREDISK ;                                      05729199
    UNLOCK(DIRECTORYTOP-4);                                             05729200
    Z:=-Z;                                                              05729300
END OF LOGSPACE;                                                        05730000
DEFINE                                                                  05780000
      MAXSIZ=[1:20]#, TOMAXSIZ=1:28:20#,                                05780010
      SPEED=[21:5]#, TOSPEED=21:43:5#,                                  05780020
      STARTWRD=[26:12]#, TOSTARTWRD=26:36:12#,                          05780030
      NUMENT=[38:10]#, TONUMENT=38:38:10#, NUMENTM=1023#,               05780040
      DSIZE=[2:20]#, TODSIZE=2:28:20#,                                  05780100
      DEND=[22:26]#, TODEND=22:22:26#,                                  05780200
      TOSIZE=8:38:10#, NEUF=[18:15]#,                                   05780300
      EUIOFFSET=4 #, % ONE WORD FOR EACH I/O CHANNEL.                   05780310
      AVDIFFMIN=15#, AVDIFFMAX=50#, % AVDIFFMAX GTR AVDIFFMIN GTR 14.   05780400
      AVTMAX=3900#, % MAX # WORDS ALLOWED FOR AVAILABLE TABLE ON DISK.  05780500
                    % IS REFLECTED IN USERDISKBOTTOM & DISKAVAILTABLEMAX05780505
      AVSMIN=90 #, AVSMAX=300#, % MIN AND MAX # WORDS TO READ IN @ 1 TIM05780600
                                % AVSMAX GTR AVSMIN GTR 85.             05780605
                                % BOTH MUST BE MULTIPLES OF 30.         05780610
      FIXARRAY(FIXARRAY1,FIXARRAY2,FIXARRAY3)=FIXARRAY1~[M[FIXARRAY2~   05780700
      SPACE(FIXARRAY3)]]&FIXARRAY3[TOSIZE]# ;                           05780800
$INCLUDE 05839301, IF SHAREDISK ;                                       05800000
%                                                                       05800100
% START OF SHAREDISK DISK FILE MAINTAINANCE DECLATATIONS ***************05800200
%                                                                       05800300
DEFINE   SLINK  = [1:17]     #, % = SCRATCH LINK. SCRATCHVECTOR[I].SLINK05800400
       TOSLINK  =  1:31:17   #, % IS DISK ADDRESS OF I-TH SCRATCHSEG,   05800500
                                % AND SCRATCHSEG[0].SLINK OF THE I-TH   05800600
                                % SCRATCHSEG IS DISK ADDRESS OF I+1-TH  05800700
                                % SCRATCHSEG.                           05800800
         SNUM   = [18:5]     #, % = SCRATCH NUMBER. SCRATCHVECTOR[I].   05800900
       TOSNUM   =  18:43:5   #, % SNUM IS NUMBER OF ENTRIES IN I-TH     05801000
                                % SCRATCHSEG, AND SCRATCHSEG[0].SNUM IS 05801100
                                % NUMBER OF ENTRIES IN SCRATCHSEG.      05801200
         SRADDR = [23:25]    #, % = SCRATCH ROW ADDRESS. SCRATCHSEG[J]. 05801300
       TOSRADDR =  23:23:25  #, % SRADDR IS DISK ADDRESS OF A SCRATCHROW05801400
         SHADDR = [23:25]    #, % = SCRATCH HIGH ADDRESS. SCRATCHVECTOR 05801500
       TOSHADDR =  23:23:25  #, % [I].SHADDR IS 1+MAX DISK ADDRESS OF   05801600
                                % THE DISK ADDRESSES IN THE ENTRIES IN  05801700
                                % THE I-TH SCRATCHSEG, I.E. SCRATCHVECT-05801800
                                % OR[I].SHADDR=MAX(SCRATCHSEG[1].SRADDR+05801900
                                % SCRATCHSEG[1].SLENGTH,...,SCRATCHSEG[N05802000
                                % ].SRADDR+SCRATCHSEG[N].SLENGTH).      05802100
         SLENGTH= [3:20]     #, % = SCRATCH LENGTH. SCRATCHSEG[J].      05802200
       TOSLENGTH=  3:28:20   #, % SLENGTH IS # SEGMENTS IN THE SCRATCH  05802300
                                % ROW ADDRESSED BY SCRATCHSEG[J].SRADDR.05802400
         SSIZE  = [18:10]    #, % = SCRATCHVECTOR SIZE. SCRATCHVECTOR[0]05802500
       TOSSIZE  =  18:38:10  #, % .SSIZE IS THE NUMBER OF SCRATCH VECTOR05802600
                                % DOPE ENTRIES.                         05802700
         MIXFL  =  [9:6]     #, % MIX-INDEX FIELD OF 1-ST LINK (IN-USE).05803300
SUPERSCRATCHMAX = 510        #, % MAX SIZE-1 ALLOWED FOR SCRATCHVECTOR. 05803400
     SCRATCHMIN =  19        #, % = LOWER BOUND FOR DELETION CONSOLIDATE05803500
     SCRATCHMAX =  11        #, % = UPPER BOUND FOR ADDITION CONSOLIDATE05803600
    SCRATCHDOWN =  14        #, % THESE THREE DEFINES ARE USED IN DET-  05803700
     SCRATCHOFF =   9        #, % ERMINING WHEN TO ADJUST THE SCRATCH-  05803800
      SCRATCHUP =   5        #, % VECS SIZE TO REFLECT ITS ACTUAL NUMBER05803900
                                % OF ENTRIES. NOTE THAT SCRATCHDOWN MUST05804000
                                % BE GREATER THAN SCRATCHOFF. ALL ARE >005804100
    SCRATCHTYPE =  13        #, % DIALED INTO TYPE-FIELD OF SCRATCHVEC  05804200
    SCRATCHSAVE =  1         #, % SAVE FACTOR OF SCRATCHVEC.            05804300
SERROR(SERROR1) =  BEGIN N~SERROR1; GO ERROR END #;                     05805500
% * END OF DEFINES * * *.                                               05805900
% SEE START OF MCP FOR SCRATCHDIRECTORYREADY AND SCRATCHDIRECTORYMASK *.05806000
ARRAY SCRATCHVEC[*];                                                    05806200
$VOID 05806401                                                          05806300
PROCEDURE SCRATCHSORT(A,N) ;                                            05806500
VALUE N  ;                                                              05806600
REAL N ;                                                                05806700
ARRAY A[*] ;                                                            05806800
    BEGIN     % SCRATCHSORT BINARILY SORTS N ELEMENTS OF A---A[1],      05806900
              % A[2],...,A[N]---IN DESCENDING ORDER                     05807000
              % SORT TIME APPROX N|LN(N)|95 MICROSECONDS.               05807100
              % THE KEY IS .[23:25], WHICH IS EITHER .SHADDR OR .SRADDR.05807200
    INTEGER D ;                                                         05807400
    REAL I,J,Y ;                                                        05807500
    LABEL C1,C2,C3,XT ;                                                 05807600
    % ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** 05807700
    IF (D~1)<N THEN WHILE (D~D+D)<N DO;                                 05807800
 C1:                                                                    05808000
    IF (D:=D DIV 2) LEQ 0 THEN GO XT ELSE I:=1 ;                        05808100
 C2:                                                                    05808200
    Y~A[(J~I)+D] ;                                                      05808300
 C3:                                                                    05808400
    IF Y.SHADDR>A[J].SHADDR THEN                                        05808500
         BEGIN                                                          05808600
         A[J+D]~A[J] ;                                                  05808700
         IF (J~J-D) GTR 0 THEN GO TO C3;                                05808800
         END ;                                                          05808900
    A[J+D]~Y ;                                                          05809000
    IF (I~I+1)+D { N THEN GO TO C2 ELSE GO TO C1 ;                      05809100
 XT:                                                                    05809200
    END OF SCRATCHSORT ;                                                05809300
$VOID 05809501                                                          05809400
$ INCLUDE 05811281, IF DEBUGGING;                                       05809599
PROCEDURE SCRATCHDIRECTORYERROR(A,N) ;                                  05809600
VALUE A,N ;                                                             05809700
REAL A,N ;                                                              05809800
    BEGIN                                                               05809900
    % ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** 05810000
    STREAM(N:=N,A:=A);                                                  05810100
         BEGIN                                                          05810200
         DS~29 LIT"#MCP SCRATCH DIRECTORY ERROR " ;                     05810300
         SI~LOC N; DS~3 DEC; DS~LIT"~" ;                                05810400
         END ;                                                          05810500
    SPOUT(A) ;                                                          05810600
    COMPLEXSLEEP(-100=NUMESS) ;                                         05810700
$ VOID                                                                  05810800
    DDT;                                                                05810900
    DO UNTIL FALSE ;                                                    05811000
    END OF SCRATCHDIRECTORYERROR ;                                      05811100
$VOID 05811161                                                          05811150
                                                                        05811160
BOOLEAN PROCEDURE SCRATCHCHECK(I,H,S) ;                                 05811170
VALUE I,S ;                                                             05811180
REAL I,H,S ;                                                            05811190
    BEGIN                                                               05811200
    % ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** 05811210
    SCRATCHCHECK~TRUE ;                                                 05811220
    IF S.SLINK!(IF I!H THEN SCRATCHVEC[I+1] ELSE 0).SLINK THEN H~1      05811230
    ELSE IF SCRATCHVEC[I].SNUM!I~S.SNUM THEN H~2                        05811240
    ELSE IF I>29 THEN H~3                                               05811250
    ELSE IF I{0 THEN H~4                                                05811260
    ELSE SCRATCHCHECK~FALSE ;                                           05811270
    END OF SCRATCHCHECK ;                                               05811280
PROCEDURE SCRATCHSPECIALCASE(CN,A,N,CORADDR,SEGADDR,I,H,SCRATCHSEG);    05811340
VALUE CN,A,N,SEGADDR,I,H;                                               05811355
REAL CN,A,N,CORADDR,SEGADDR,I,H;                                        05811360
ARRAY SCRATCHSEG[*] ;                                                   05811370
    BEGIN                                                               05811385
    REAL POT,MAX,L,Q,J,E,F ;                                            05811400
    ARRAY BOTH[*];                                                      05811410
$ INCLUDE 05811416, IF DEBUGGING;                                       05811414
    LABEL START,ERROR ;                                                 05811415
    SUBROUTINE GETNEWSCRATCHVEC ;                                       05811430
         BEGIN                                                          05811445
         L:=GETSPACE(A,SCRATCHTYPE,SCRATCHSAVE) ;                       05811460
         M[L].MIXFL:=0 ;                                                05811475
         MOVE(H+1,SCRATCHVEC,L:=L+2) ;                                  05811490
         FORGETSPACE(SCRATCHVEC) ;                                      05811505
         SCRATCHVEC:=SCRATCHVEC & L[CTC] & A[TOSIZE] ;                  05811520
         END OF GETNEWSCRATCHVEC ;                                      05811535
    % ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** 05811540
$ INCLUDE  05811596, IF DEBUGGING;                                      05811549
    GO START ;                                                          05811550
 ERROR:                                                                 05811565
    SCRATCHDIRECTORYERROR(CORADDR,N+150) ;                              05811580
 START:                                                                 05811595
    IF CN = 1 THEN                                                      05811805
         BEGIN                                                          05811820
              IF (IF I!1 THEN (L~SCRATCHVEC[I-1].SNUM)<SCRATCHMAX ELSE  05811835
              L~32) OR (IF I!H THEN (Q~SCRATCHVEC[I+1].SNUM)<SCRATCHMAX 05811850
              ELSE Q~32) THEN % THEN INSTEAD OF GETTING A NEW SEG AND   05811865
                   BEGIN % GIVING THE I-TH AND NEW SEG EACH 15 ENTRIES, 05811880
                   IF L>Q THEN % WE CAN SPLIT BETWEEN THE I-TH AND Q-TH 05811895
                        BEGIN  % SEGS THE SUM OF THE ONE NEW ENTRY AND  05811910
                        L~Q ;  % THEIR INDIVIDUAL ENTRIES. WE CAN DO    05811925
                        Q~I+1 ;% THIS BECAUSE THE Q-TH SEG HAS ONLY     05811940
                        END    % L<SCRATCHMAX ENTRIES. THIS OPERATION IS05811955
                   ELSE Q~I-1 ;% DONE TO HELP REDUCE THE NUMBER OF      05811970
                   POT~L+31 ;  % SPARSE SEGMENTS.                       05811985
                   FIXARRAY(BOTH,J,POT) ;                               05812000
                   DISKWAIT(-J,30,MAX~SCRATCHVEC[Q].SLINK) ;            05812015
$ INCLUDE 05812031, IF DEBUGGING;                                       05812016
                   IF SCRATCHCHECK(Q,H,BOTH[0]) THEN SERROR(H+21) ;     05812030
                   MOVE(29,[SCRATCHSEG[1]],[BOTH[L+1]]) ;               05812045
                   BOTH[POT:=POT-1]:=A & N[TOSLENGTH] ;                 05812060
                   SCRATCHSORT(BOTH,POT) ;                              05812075
                   MOVE(H~POT-POT~POT DIV 2,[BOTH[POT+1]],              05812090
                       [SCRATCHSEG[1]]) ;                               05812105
                   A:=MAX;  N:=SEGADDR ;                                05812120
                   IF Q LSS I THEN                                      05812135
                        BEGIN                                           05812150
                        POLISH(SCRATCHSEG[0],BOTH[0],                   05812165
                               [SCRATCHSEG[0]],:=,[BOTH[0]],:=) ;       05812180
                        POLISH(J,CORADDR,.J,~,[CORADDR],~);             05812195
                        POLISH(I,Q,.I,:=,.Q,:=) ;                       05812210
                        POLISH(SEGADDR,MAX,.SEGADDR,:=,.MAX,:=) ;       05812225
                        END ;                                           05812240
                   BOTH[0].SNUM:=POT ;                                  05812255
                   SCRATCHSEG[0].SNUM:=H ;                              05812270
                   DISKWAIT(J,30,A) ;                                   05812285
                   DISKWAIT(CORADDR,30,N) ;                             05812300
                   SCRATCHVEC[I]:=(P(SCRATCHSEG[1],DUP).SRADDR          05812315
                                +P(XCH).SLENGTH) & H[TOSNUM] & SEGADDR  05812330
                                [TOSLINK] ;                             05812345
                   SCRATCHVEC[Q]:=(P(BOTH[1],DUP).SRADDR+P(XCH)         05812360
                                .SLENGTH) & POT[TOSNUM] & MAX[TOSLINK] ;05812375
                   FORGETSPACE(J) ;                                     05812390
                   END                                                  05812405
$ INCLUDE 05812421, IF DEBUGGING;                                       05812406
              ELSE IF H GTR 254 THEN SERROR(49)                         05812420
                   ELSE  % ELSE GET A NEW SEGMENT AND SPLIT THE I-TH    05812435
                        BEGIN % SEGMENTS 29 ENTRIES PLUS THE NEW ENTRY  05812450
                              % BETWEEN THE NEW AND I-TH SEGMENT.       05812465
                        SCRATCHSEG[30]~A & N[TOSLENGTH] ;               05812480
                        SCRATCHSORT(SCRATCHSEG,30) ;                    05812495
                        IF SCRATCHVEC.SIZE<H+2 THEN % THEN WE MUST GET A05812510
                             BEGIN                  % BIGGER SCRATCHVEC.05812525
                             A:=H+2+SCRATCHUP ;                         05812540
                             GETNEWSCRATCHVEC ;                         05812555
                             END ;                                      05812630
                        POT:=I+1 ;                                      05812645
                        FOR J:=H STEP -1 UNTIL POT                      05812660
                        DO SCRATCHVEC[J+1]:=SCRATCHVEC[J] ;             05812675
                        SCRATCHVEC[I+1]:=(P(SCRATCHSEG[1],DUP).SRADDR   05812690
                                        +P(XCH).SLENGTH)                05812705
                                        & 15[TOSNUM]                    05812720
                                        & (L~GETESPDISK)[TOSLINK];      05812735
                        SCRATCHSEG[0].SNUM:=15 ;                        05812750
                        DISKWAIT(CORADDR,30,L) ;                        05812765
                        SCRATCHVEC[I]:=(P(SCRATCHSEG[16],DUP)           05812780
                                      .SRADDR+P(XCH).SLENGTH)           05812795
                                      & 15[TOSNUM] & SEGADDR[TOSLINK] ; 05812810
                        SCRATCHSEG[15]:=0 & L[TOSLINK] & 15[TOSNUM] ;   05812825
                        DISKWAIT(CORADDR+15,16,SEGADDR) ;               05812840
                        SCRATCHVEC[0].SSIZE~H+1 ;                       05812855
                        END ;                                           05812870
         END                                                            05812885
    ELSE                                                                05812900
         BEGIN                                                          05812915
         IF (IF I!1 THEN (L~SCRATCHVEC[I-1].SNUM)>SCRATCHMAX ELSE       05812930
         L~FALSE) OR (IF I!H THEN (Q~SCRATCHVEC[I+1].SNUM)>SCRATCHMAX   05812945
         ELSE Q~FALSE) THEN %THEN, INSTEAD OF FORGETTING SEGMENT, SPLIT 05812960
              BEGIN % CONTENTS OF Q-TH AND I-TH SEGMENT BETWEEN THEM-   05812975
              IF POT:=Q>L THEN BEGIN L~Q; Q~I+1 END ELSE Q~I-1 ; % SELVE05812990
              A~SCRATCHSEG[0] ;                                         05813005
              DISKWAIT(-CORADDR,30,E~SCRATCHVEC[Q].SLINK) ;             05813020
$ INCLUDE 05813036, IF DEBUGGING;                                       05813034
              IF SCRATCHCHECK(Q,H,H:=SCRATCHSEG[0]) THEN SERROR(12+H) ; 05813035
              SCRATCHSORT(SCRATCHSEG,L) ;                               05813050
              F:=L-N:=L DIV 2 ;                                         05813065
              SCRATCHVEC[I]:=(P(SCRATCHSEG[(L:=IF POT THEN N ELSE 0)    05813080
                              + 1],DUP).SRADDR+P(XCH).SLENGTH)          05813095
                              & F[TOSNUM] & SEGADDR[TOSLINK] ;          05813110
              SCRATCHVEC[Q]:=(P(SCRATCHSEG[(POT:=IF POT THEN 0 ELSE F)  05813125
                             +1],DUP).SRADDR+P(XCH).SLENGTH)            05813140
                             & N[TOSNUM] & E[TOSLINK] ;                 05813155
              POLISH(SCRATCHSEG[N],SCRATCHSEG[N-1]) ;                   05813170
              SCRATCHSEG[L]:=A & F[TOSNUM] ;                            05813185
              DISKWAIT(CORADDR+L,F+1,SEGADDR) ;                         05813200
              POLISH([SCRATCHSEG[N-1]],~,[SCRATCHSEG[N]],~) ;           05813215
              SCRATCHSEG[POT]:=H & N[TOSNUM] ;                          05813245
              DISKWAIT(CORADDR+POT,N+1,E) ;                             05813260
              END                                                       05813275
         ELSE       % ELSE THERE IS NO SEG ADJ TO I-TH SEG WITH ENOUGH  05813290
              BEGIN % ENTRIES TO SPLIT, SO WE DELETE THE I-TH SEGMENT.  05813305
              E~SCRATCHSEG[0].SLINK ;                                   05813320
              DISKWAIT(-CORADDR,POT~IF F~I=1 THEN -30 ELSE 30,Q~        05813335
                       SCRATCHVEC[I-1].SLINK) ;                         05813350
$ INCLUDE 05813366, IF DEBUGGING;                                       05813364
              IF F AND SCRATCHSEG[SYSNO].SLINK!SEGADDR THEN SERROR(4) ; 05813365
              SCRATCHSEG[IF F THEN SYSNO ELSE 0].SLINK~E ;              05813380
              DISKWAIT(CORADDR,POT,Q) ;                                 05813395
              FORGETESPDISK(SEGADDR) ;                                  05813410
              IF I!H THEN MOVE(H-I,[SCRATCHVEC[I+1]],[SCRATCHVEC[I]]);  05813425
              SCRATCHVEC[0].SSIZE:=H:=H-1 ;                             05813440
              IF H<(L:=SCRATCHVEC.SIZE)-SCRATCHDOWN THEN %THEN GET A NEW05813455
                   BEGIN % SCRATCHVEC CLOSER IN SIZE TO ACTUAL # ENTRIES05813470
                   A:=L-SCRATCHOFF ;                                    05813485
                   GETNEWSCRATCHVEC ;                                   05813500
                   END ;                                                05813560
              END ;                                                     05813575
         END ;                                                          05813590
    END OF SCRATCHSPECIALCASE ;                                         05813605
$VOID 05813636                                                          05813620
PROCEDURE SCRATCHDIRECTORYENTER(A,N);                                   05813700
VALUE A,N;                                                              05813800
REAL A,N;                                                               05813900
    BEGIN                                                               05814000
         INTEGER I;                                                     05814100
    REAL CORADDR,H,L,Q,SEGADDR=Q ;                                      05814200
    ARRAY SCRATCHSEG[*] ;                                               05814300
         LABEL FOUND, SEARCH;                                           05814400
$ INCLUDE 05814451, IF DEBUGGING;                                       05814449
         LABEL ERROR;                                                   05814450
    % ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** 05814500
    SLEEP([TOGLE],SCRATCHDIRECTORYMASK); SCRATCHDIRECTORYREADY~FALSE ;  05814700
    FIXARRAY(SCRATCHSEG,CORADDR,31) ;                                   05814800
    Q:=H:=SCRATCHVEC[0].SSIZE;                                          05814850
         IF SCRATCHVEC[I:=1].SHADDR GTR A THEN GO FOUND ;               05816600
         IF SCRATCHVEC[I~H].SHADDR{A THEN GO FOUND ;                    05816700
         L~2 ; % DO BINARY SEARCH ON I SUCH THAT  1<I<H  AND SUCH THAT  05816800
 SEARCH:       % SCRATCHVEC[I].SHADDR GTR A GEQ SCRATCHVEC[I-1].SHADDR. 05816900
         IF SCRATCHVEC[I:=(L+Q)/2].SHADDR GTR A THEN                    05817000
              IF SCRATCHVEC[I-1].SHADDR GTR A THEN Q:=I-1               05817100
              ELSE GO FOUND                                             05817200
         ELSE IF SCRATCHVEC[I:=I+1].SHADDR LEQ A THEN L:=I+1            05817300
              ELSE GO FOUND ;                                           05817400
         GO SEARCH ;                                                    05817500
$ INCLUDE 05817701, IF DEBUGGING;                                       05817599
 ERROR: % DETECTED MCP AND/OR HARDWARE ERROR VIA BAD CORE/DISK TABLES.  05817600
        SCRATCHDIRECTORYERROR(CORADDR,N+50);                            05817700
 FOUND: % FOUND THE DESIRED INDEX I.                                    05818000
         DISKWAIT(-CORADDR,30,SEGADDR:=SCRATCHVEC[I].SLINK) ;           05818100
$INCLUDE 05818201, IF DEBUGGING;                                        05818199
         IF SCRATCHCHECK(I,H,SCRATCHSEG[0]) THEN SERROR(37+H) ;         05818200
         IF (L:=SCRATCHVEC[I].SNUM) GEQ 29 THEN %MAKE ROOM FOR NEW ENTRY05818300
              SCRATCHSPECIALCASE(1,A,N,CORADDR,SEGADDR,I,H,SCRATCHSEG)  05818400
         ELSE       % ELSE MAKE A NORMAL ENTRY INTO THE I-TH SEGMENT    05825800
              BEGIN % AND WRITE IT BACK OUT TO DISK.                    05825900
              SCRATCHVEC[I]~(IF (H~SCRATCHVEC[I].SRADDR)>A+N THEN H     05826000
                            ELSE A+N) & (L:=L+1)[TOSNUM]                05826100
                            & SEGADDR[TOSLINK] ;                        05826200
              SCRATCHSEG[L]~A & N[TOSLENGTH] ;                          05826300
              SCRATCHSEG[0].SNUM~L ;                                    05826400
              DISKWAIT(CORADDR,30,SEGADDR) ;                            05826500
              END ;                                                     05826600
    SCRATCHDIRECTORYREADY~TRUE ;                                        05826800
    FORGETSPACE(CORADDR) ;                                              05826900
    END SCRATCHDIRECTORYENTER ;                                         05827000
$VOID 05827201                                                          05827100
PROCEDURE SCRATCHDIRECTORYDELETE(A,N);                                  05827300
VALUE A,N;                                                              05827400
REAL A,N;                                                               05827500
    BEGIN                                                               05827600
         INTEGER I;                                                     05827700
    REAL L,H,E,F,Q,MAX,POT,CORADDR,SEGADDR ;                            05827800
    ARRAY SCRATCHSEG[*] ;                                               05827900
         LABEL SEARCH, FOUND;                                           05828000
$ INCLUDE 05828051, IF DEBUGGING;                                       05828049
         LABEL ERROR;                                                   05828050
    % ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** 05828100
    SLEEP([TOGLE],SCRATCHDIRECTORYMASK); SCRATCHDIRECTORYREADY~FALSE ;  05828200
    FIXARRAY(SCRATCHSEG,CORADDR,30) ;                                   05828300
    Q:=H:=SCRATCHVEC[0].SSIZE;                                          05828350
$ INCLUDE 05828401, IF DEBUGGING;                                       05828399
    IF SCRATCHVEC[Q].SHADDR LEQ A OR Q=0 THEN SERROR(H=0);              05828400
    IF SCRATCHVEC[I:=1].SHADDR GTR A THEN GO FOUND ;                    05828500
    L:=2 ; % DO BIN SEARCH ON I SO THAT  1 LSS I LEQ H  AND SUCH THAT   05828600
 SEARCH:   % SCRATCHVEC[I].SHADDR GTR A GEQ SCRATCHVEC[I-1].SHADDR.     05828700
    IF SCRATCHVEC[I:=(L+Q)/2].SHADDR GTR A THEN                         05828800
         IF SCRATCHVEC[I-1].SHADDR GTR A THEN Q:=I-1                    05828900
         ELSE GO FOUND                                                  05829000
    ELSE IF SCRATCHVEC[I:=I+1].SHADDR LEQ A THEN L:=I+1                 05829100
         ELSE GO FOUND ;                                                05829200
    GO SEARCH ;                                                         05829300
$ INCLUDE 05829501, IF DEBUGGING;                                       05829399
 ERROR: % DETECTED MCP AND/OR HARDWARE ERROR VIA BAD CORE/DISK TABLES.  05829400
    SCRATCHDIRECTORYERROR(CORADDR,N) ;                                  05829500
 FOUND: % FOUND THE DESIRED INDEX I.                                    05829800
    DISKWAIT(-CORADDR,30,SEGADDR~(POT~SCRATCHVEC[I]).SLINK) ;           05829900
$ INCLUDE 05830001, IF DEBUGGING;                                       05829999
    IF SCRATCHCHECK(I,H,SCRATCHSEG[0]) THEN SERROR(8+H) ;               05830000
    MAX~POT.SHADDR ;                                                    05830100
    Q:=0 ;                                                              05830150
    POLISH(H) ;                                                         05830175
    FOR L~POT~POT.SNUM STEP -1 UNTIL 1 DO % FIND E, THE INDEX OF THE    05830200
         BEGIN % DELETABLE ENTRY,AND ALSO RECORD Q, THE VALUE OF THE    05830300
         IF (H~SCRATCHSEG[L].SRADDR) LEQ A % SECOND MAX.                05830400
              AND (F:=H+SCRATCHSEG[L].SLENGTH) GTR A THEN               05830450
$ INCLUDE 05830501, IF DEBUGGING;                                       05830499
         IF E!0 THEN SERROR(29) ELSE                                    05830500
              E:=L;                                                     05830510
$ INCLUDE 05830551, IF DEBUGGING;                                       05830549
         IF H=0 OR H=F THEN SERROR(30) ;                                05830550
         IF F!MAX AND Q<F THEN Q~F ;                                    05830600
         END ;                                                          05830700
    H:=POLISH ;                                                         05830750
    L:=(F:=SCRATCHSEG[E]).SRADDR+(F:=F.SLENGTH);                        05830800
$ INCLUDE 05830811, IF DEBUGGING;                                       05830809
    IF (E=0) OR (A+N)!L THEN SERROR(2+E=0);                             05830810
    IF F GTR N THEN                                                     05830860
         BEGIN % ONLY DELETE THE END-PART OF AN ENTRY                   05830865
         SCRATCHSEG[E].SLENGTH:=F-N ;                                   05830870
         IF MAX=L THEN SCRATCHVEC[I].SHADDR:=L-N ;                      05830875
         DISKWAIT(CORADDR,30,SEGADDR) ;                                 05830877
         END                                                            05830879
    ELSE % ELSE COMPLETELY DELETE THE ENTRY.                            05830880
    IF POT=1 THEN % THEN ENTRY TO DELETE IS ONLY ENTRY IN SEGMENT.      05830900
         SCRATCHSPECIALCASE(2,A,N,CORADDR,SEGADDR,I,H,SCRATCHSEG)       05831000
    ELSE       % ELSE NORMAL CASE, WHERE AN ENTRY IS DELETED FROM       05836400
         BEGIN % A SEG AND SEG IS WRITTEN BACK OUT TO DISK.             05836500
         SCRATCHSEG[E]~SCRATCHSEG[POT] ;                                05836600
         SCRATCHSEG[0].SNUM~POT-1 ;                                     05836700
         DISKWAIT(CORADDR,30,SEGADDR) ;                                 05836800
         SCRATCHVEC[I]~(IF A+N=MAX THEN Q ELSE MAX) & (POT-1)[TOSNUM]   05836900
                       & SEGADDR[TOSLINK] ;                             05837000
         END ;                                                          05837100
    SCRATCHDIRECTORYREADY~TRUE ;                                        05837300
    FORGETSPACE(CORADDR) ;                                              05837400
    END OF SCRATCHDIRECTORYDELETE ;                                     05837500
$VOID 05837701                                                          05837600
PROCEDURE SCRATCHCLEAN(ARY,BC,LINK) ;                                   05837800
VALUE BC ;       % SCRATCHCLEAN SORTS THE SCRATCH DIRECTORY SEGMENT, AS 05837900
REAL BC,LINK ;   % STORED IN ARRAY ARY, AND THEN IT GOES THROUGH THIS   05838000
ARRAY ARY[*] ;   % SORTED ARRAY CONSOLIDATING ADJACENT AREAS AND DOING  05838100
    BEGIN        % FORGETUSERDISKS ON THESE (CONSOLIDATED) AREAS.       05838200
    REAL I,J,K,S,T ;                                                    05838300
    % ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** 05838400
    IF (LINK~ARY[0].SLINK)!0 THEN DISKIO(T,-BC,30,LINK) ;               05838500
    SCRATCHSORT(ARY,K:=ARY[0].SNUM) ;                                   05838600
    ARY[K+1]:=I:=J:=1 ;                                                 05838650
    DO   BEGIN                                                          05838700
         WHILE (S~ARY[J]).SLENGTH+S.SRADDR=ARY[J+1].SRADDR DO J~J+1 ;   05838800
         FORGETUSERDISK(I~ARY[I].SRADDR,S.SRADDR+S.SLENGTH-I) ;         05838900
         END                                                            05839000
    UNTIL (I~J~J+1)>K ;                                                 05839100
    IF LINK!0 THEN SLEEP([T],IOMASK) ;                                  05839200
    END OF SCRATCHCLEAN ;                                               05839300
REAL PROCEDURE PETUSERDISK(N,T);  VALUE N,T;  REAL N,T ;                05839400
% N IS THE NUMBER OF SEGMENTS REQUESTED, AND T IS THE EU# OR THE SPEED#.05839600
% GETUSERDISK WILL RETURN -1, 0, OR THE ABSOLUTE DISK SEGMENT ADDRESS OF05839700
% THE RESULTANT AREA. SEE T.[2:1] FOR THE -1, AND N.[2:1] FOR THE 0.    05839800
% T>0 => T IS A PREFERRED SPEED#: T=1,2,3,4,..., OR 31.                 05840000
% T<0 => -T IS A PREFERRED EU#: T=-1,-2,-3,-4,..., OR -20.              05840100
% T=0 => DONT CARE ABOUT SPEED# OR EU#, USE EU WITH LEAST EU I/O.       05840200
% T.[2:1]=1 => IF CANT GET PREFERRED SPEED# OR EU#, RETURN -1.          05840300
% T.[2:1]=0 => IF CANT GET PREFERRED SPEED# OR EU#, TREAT AS T=0 (ABOVE)05840400
% N>0 => MAKE A SCRATCHDIRECTORY ENTRY.                                 05840500
% N<0 => DONT MAKE A SCRATCHDIRECTORY ENTRY.                            05840600
% N=0 => IMMEDIATELY RETURN WITH A 0.                                   05840700
% N.[2:1]=0 => IF CANT FIND ANY USERDISK, AND T.[2:1]=0, NO-USER-DISK.  05840800
% N.[2:1]=1 => IF CANT FIND ANY USERDISK, AND T.[2:1]=0, RETURN 0.      05840900
    BEGIN                                                               05841200
    INTEGER K=+1, % K IS ALSO "GETUSERDISK"; DONT USE K ABOVE LABEL D.  05841300
            Z=K+1, NS=Z+1, I=NS+1,                                      05841350
$INCLUDE 05841502, IF SHAREDISK ;                                       05841380
            L=I+1, H=L+1, J=H+1, R=J+1, DL=R+1 ;                        05841400
    REAL M1=DL+1, M2=M1+1;  ARRAY U=M2+1[*];  DEFINE UT=U # ;           05841500
$OMIT 05841621, IF SHAREDISK ;                                          05841610
            R=I+1, AVS=R+1, J=AVS+1, H=NT6, L=AVS ;                     05841615
    REAL M1=NT5, M2=NT4;  ARRAY UT=J+1[*];  DEFINE U=AVTABLE # ;        05841620
    LABEL A,B,C,D,E,F,G,W ;                                             05841650
DEFINE GETUSERDISK=PETUSERDISK#;%***************************************05841700
    IF N=0 THEN GO W ;                                                  05842100
    P(T.[2:1],ABS(N),1,0,0,0,0) ;                                       05842200
$ INCLUDE 05842211, IF SHAREDISK ;                                      05842205
    P(0,D,DUP,0) ;                                                      05842210
A:  SLEEP([TOGLE],USERDISKMASK);  USERDISKREADY~FALSE ;                 05842300
$INCLUDE 05842401, IF SHAREDISK ;                                       05842390
    FIXARRAY(U,R,AVS);  DISKWAIT(-R,-AVS,USERDISKBOTTOM) ;              05842400
$OMIT 05842411, IF SHAREDISK ;                                          05842405
    M1:=M2:=P(D) ;                                                      05842410
    L:=NEUP.NEUF ;                                                      05842450
    IF T LSS 0 THEN IF U[J:=IF -T GTR L THEN L+1 ELSE -T].MAXSIZ GEQ NS 05842475
                    THEN GO E ELSE IF Z THEN GO C ;                     05842500
B:  IF U[I].MAXSIZ}NS THEN                                              05842700
         BEGIN                                                          05842800
         P(EUIO[(NT1:=I-1)+EUIOFFSET]+PEUIO[NT1],.NT2,SND,DUP) ;        05842900
         IF P LSS M1 THEN BEGIN M1:=NT2; H:=NT1 END ;                   05842930
         IF P LSS M2 THEN IF U[I].SPEED=T THEN BEGIN M2:=NT2;J:=NT1 END;05843000
         END ;                                                          05843100
    IF (I:=I+1) LEQ L THEN GO B ;                                       05843200
    IF P(D)!M1 THEN                                                     05843300
         BEGIN                                                          05843400
         IF M2=M2:=P(D) THEN IF Z AND T!0 THEN                          05843500
C:            BEGIN GETUSERDISK~-1; GO G END                            05843600
         ELSE J~H ;                                                     05843700
         J:=J+1;  GO E ;                                                05843800
         END ;                                                          05843900
    IF Z THEN GO C ;                                                    05843950
    IF N.[2:1] THEN GO G ;                                              05844000
$INCLUDE 05844071, IF SHAREDISK ;                                       05844050
    UNLOCK(USERDISKBOTTOM);  USERDISKSPECIALCASE(I:=1,R,U,NS);  GO A ;  05844070
$OMIT 05844111, IF SHAREDISK ;                                          05844090
    FIXARRAY(UT,R,30);  USERDISKSPECIALCASE(I:=1,R,UT,NS);  GO A ;      05844110
D:::@0777777777777777 ;                                                 05844200
$INCLUDE 05844901, IF SHAREDISK ;                                       05844290
E:  IF (K~(I~(M1~U[J]).STARTWRD)+T~M1 AND NUMENTM)>AVS THEN             05844300
         BEGIN                                                          05844400
         IF (L:=(K:=T+I:=(DL:=IF I LSS 30 THEN 0 ELSE IF (U[0] AND      05844500
         NUMENTM) LEQ 30 THEN 30 ELSE 60)+(H:=I) MOD 30) MOD 30) NEQ 0  05844530
         THEN L:=30-L ;                                                 05844540
         IF (L:=K+L) GTR AVS THEN                                       05844570
              BEGIN USERDISKSPECIALCASE(0,R,U,L&DL[CTF]); U~FLAG(P) END;05844600
         IF P(DL!0,DUP) THEN P(UT[DL-1],XCH) ;                          05844650
         DISKWAIT(-(R+DL),L:=L-DL,Z:=USERDISKBOTTOM+H DIV 30) ;         05844700
         IF P THEN UT[DL-1]:=P(XCH) ;                                   05844750
         END ;                                                          05844800
    P(K-1);  NT3:=K:=M1.MAXSIZ;  NT2:=0;                                05844900
$OMIT 05844936, IF SHAREDISK ;                                          05844915
E:  IF (AVS:=(K:=(T:=U[J] AND NUMENTM)+I:=(Z:=U[J].STARTWRD) MOD 30) MOD05844920
       30) NEQ 0 THEN AVS:=30-AVS;  AVS:=AVS+K;  P(M2) ;                05844925
    FIXARRAY(UT,R,AVS);  DISKWAIT(-R,AVS,Z~Z DIV 30+USERDISKBOTTOM) ;   05844930
    M2:=P;  P(K-1);  NT2:=0;  NT3:=K:=U[J].MAXSIZ ;                     05844935
F:  IF (NT1~UT[I].DSIZE)>NT2 THEN IF NT1!K THEN NT2~NT1 ELSE K:=0 ;     05845000
    IF NT1}NS THEN IF NT1<M2 THEN BEGIN M2~NT1; H~I END ;               05845100
    IF P(DUP) GTR I:=I+1 THEN GO F ;                                    05845200
    UT[H].DSIZE~NS~M2-NS ;                                              05845300
    IF M1:=M2=NT3 THEN U[J].MAXSIZ:=IF NT2>NS THEN NT2 ELSE NS ;        05845400
    GETUSERDISK~UT[H].DEND-M2;  I:=P ;                                  05845500
$INCLUDE 05845601, IF SHAREDISK ;                                       05845590
    IF N>0 THEN SCRATCHDIRECTORYENTER(K,N) ;                            05845600
    IF N~NS=0 THEN BEGIN MOVE(I-H,[UT[H+1]],[UT[H]]);U[J].NUMENT~T-1END;05845700
$INCLUDE 05846301, IF SHAREDISK ;                                       05845790
    IF Z GTR 1 THEN                                                     05845800
         BEGIN                                                          05845900
         IF DL NEQ 0 AND (M1 OR N) THEN DISKWAIT(R,DL,USERDISKBOTTOM) ; 05846100
         DISKWAIT(DL+R,L,Z) ;                                           05846110
         END                                                            05846200
    ELSE DISKWAIT(R,AVS,USERDISKBOTTOM) ;                               05846300
$OMIT 05846361, IF SHAREDISK ;                                          05846350
    DISKWAIT(R,AVS,Z) ;                                                 05846360
$INCLUDE 05846381, IF SHAREDISK ;                                       05846370
G:  FORGETSPACE(R);  UNLOCK(USERDISKBOTTOM);  USERDISKREADY~TRUE ;      05846380
$OMIT 05846396, IF SHAREDISK ;                                          05846385
    FORGETSPACE(R) ;                                                    05846390
G:  USERDISKREADY~TRUE ;                                                05846395
W:  END OF GETUSERDISK ;                                                05846500
PROCEDURE FORGETUSERDISK(A,N);  VALUE A,N;  REAL A,N ;                  05846600
% A IS THE ABSOLUTE DISK SEGMENT ADDRESS OF AN AREA N SEGMENTS LONG     05846800
% WHICH IS TO BE MADE AVAILABLE AGAIN.                                  05846900
% N<0 => MAKE A SCRATCHDIRECTORY DELETION.                              05847000
% N>0 => DONT MAKE A SCRATCHDIRECTORY DELETION.                         05847100
% N=0 => IMMEDIATELY GO AWAY ;                                          05847200
    BEGIN                                                               05847400
$INCLUDE 05847501, IF SHAREDISK ;                                       05847490
    INTEGER DL,F;  ARRAY U[*];  DEFINE UT=U #;                          05847500
$OMIT 05847601, IF SHAREDISK ;                                          05847590
    INTEGER AVS,F=AVS;  ARRAY UT[*];  DEFINE U=AVTABLE #;               05847600
    REAL E;  INTEGER B,C,D,I,J,R,S,H=NT7,K=NT6,L=NT5,G=NT4,T=NT3,Q=JUNK;05847700
    LABEL V,W,X,Y,Z,AZ,BZ,CZ,DZ ;                                       05847800
    SUBROUTINE SETSHIFT ;                                               05847900
         BEGIN                                                          05848000
         S:=P(XCH) ;                                                    05848100
$INCLUDE 05848201, IF SHAREDISK ;                                       05848190
         U[J].STARTWRD:=G:=I+S;  IF B>1 THEN G:=D+S+DL;  D:=30 ;        05848200
$OMIT 05848256, IF SHAREDISK ;                                          05848250
         U[J].STARTWRD:=I+S;  G:=D+S ;                                  05848255
         K:=G+C-1 ;                                                     05848300
         END OF SETSHIFT ;                                              05848500
    IF N=0 OR (J:=A DIV 1000000) GEQ NEUP.NEUF                          05848900
       OR A LSS USERDISKBOTTOM+DISKAVAILTABLEMAX THEN GO BZ ;           05849000
    SLEEP([TOGLE],USERDISKMASK); USERDISKREADY~FALSE ;                  05849300
$INCLUDE 05849401, IF SHAREDISK ;                                       05849390
    FIXARRAY(U,R,AVS);  DISKWAIT(-R,-AVS,USERDISKBOTTOM) ;              05849400
    IF (D:=U[0].MAXSIZ) NEQ 0 AND N GTR 0 THEN IF (TWO(J) AND D) NEQ 0  05849420
    THEN BEGIN USERDISKSPECIALCASE(3,N,U,A); IF NOT P THEN GO DZ END ;  05849460
    J:=J+1 ;                                                            05849480
V:  D~(I~(E~U[J]).STARTWRD) MOD 30 ;                                    05849500
$INCLUDE 05850001, IF SHAREDISK ;                                       05849590
    IF (S:=K:=(C:=E AND NUMENTM)+L:=I) GEQ (F:=AVS) THEN                05849600
         BEGIN                                                          05849700
         P((DL:=IF I LSS 30 THEN 0 ELSE IF (U[0] AND NUMENTM) LEQ 30    05849800
           THEN 30 ELSE 60)+D,DUP,C,+,DUP,DUP) ;                        05849810
         IF (F:=P-P MOD 30+30) GEQ AVS THEN                             05849825
              BEGIN USERDISKSPECIALCASE(0,R,U,F&DL[CTF]); U~FLAG(P) END;05849850
         IF I+F>AVTMAX+D+DL THEN GO Y ;                                 05849875
         IF P(DL!0,DUP) THEN P(UT[DL-1],XCH) ;                          05849885
         DISKWAIT(-(R+DL),F-DL,B:=USERDISKBOTTOM+I DIV 30) ;            05849900
         IF P THEN UT[DL-1]:=P(XCH);  K:=P;  L:=P ;                     05849950
         END ;                                                          05850000
$ OMIT 05850131, IF SHAREDISK ;                                         05850105
    AVS:=30-(S:=(C:=E AND NUMENTM)+D) MOD 30+S ;                        05850110
    FIXARRAY(UT,R,AVS);  DISKWAIT(-R,AVS,B:=I DIV 30+USERDISKBOTTOM) ;  05850120
    K:=S;  L:=D;  S:=I+C ;                                              05850130
    G~I-(NT2:=(P(U[J-1],DUP) AND NUMENTM)+P(XCH).STARTWRD) ;            05850200
    S~U[J+1].STARTWRD-S;  H~K~K-1;  IF UT[T~L].DEND}A THEN GO X ;       05850300
W:  IF UT[T~(H+L+1)DIV 2].DEND}A THEN IF UT[H~T-1].DEND}A THEN GO W ELSE05850400
    ELSE IF UT[T~T+1].DEND<A THEN BEGIN L~T+1; GO W END ;               05850500
X:  IF (L:=A+ABS(N)) GEQ H:=P(UT[Q:=T],DUP).DEND-P(XCH).DSIZE THEN GO Z;05850600
    IF S=0 THEN                                                         05850700
         BEGIN                                                          05850800
$INCLUDE 05851201, IF SHAREDISK ;                                       05850890
         IF G=0 THEN GO Y;  P((G+1) DIV 2) ;                            05850900
         IF B>1 THEN                                                    05851100
              BEGIN IF D=0 THEN GO Y; IF P(DUP) GTR D THEN P(DEL,D) END;05851200
$OMIT 05851221, IF SHAREDISK ;                                          05851215
         IF G=0 OR D=0 THEN GO Y;  IF P((G+1)DIV 2,DUP)>D THEN P(DEL,D);05851220
         P(SSN);SETSHIFT;MOVE(C,[UT[G-S]],[UT[G]]);T~Q~T+S;             05851300
         END ;                                                          05851400
    FOR H~K STEP -1 UNTIL T DO UT[H+1]~UT[H];  H~ABS(N);  GO AZ ;       05851500
Y: USERDISKSPECIALCASE(2,E,UT,J) ;                                      05851600
$INCLUDE 05851656, IF SHAREDISK ;                                       05851650
    UT:=FLAG(P);  R:=UT.[CF];  B:=0 ;                                   05851655
    GO V ;                                                              05851675
Z:  IF P(UT[Q~Q+1],DUP).DEND-P(XCH).DSIZE{L THEN GO Z ;                 05851700
    IF P(UT[NT1:=Q-1].DEND,DUP) LSS L THEN P(DEL,L) ;                   05851800
    H:=(L:=P)-(IF A LSS H THEN A ELSE H) ;                              05851850
    IF NT1 GTR T THEN MOVE(K-NT1,[UT[Q]],[UT[T+1]]) ;                   05851900
AZ: UT[T]~L&H[TODSIZE];  C~(Q~T-Q+1)+C ;                                05852000
    IF(S~S-Q)>T~IF AVDIFFMAX>T~C DIV 2 THEN AVDIFFMAX ELSE T THEN IF J=105852100
    OR S+G>T+(IF AVDIFFMAX>T~NT2 DIV 2 THEN AVDIFFMAX ELSE T) THEN GO Y 05852200
    ELSE BEGIN                                                          05852300
         IF (NT1~F-1-K)=0 THEN GO Y;                                    05852350
         IF P((S+G) DIV 2,DUP) GTR NT1 THEN P(DEL,NT1);SETSHIFT;        05852400
         FOR NT1~K STEP -1 UNTIL G DO UT[NT1]~UT[NT1-S] ;               05852500
         END ;                                                          05852600
    U[J]~(NT1~U[J])&C[TONUMENT]&(IF E~(NT1~NT1.MAXSIZ)<H THEN H ELSE    05852700
         NT1)[TOMAXSIZ] ;                                               05852800
$INCLUDE 05853401, IF SHAREDISK ;                                       05852890
    IF B GTR 1 THEN                                                     05852900
         BEGIN                                                          05853000
         IF DL NEQ 0 AND (E OR Q NEQ 0 OR D=30)                         05853200
         THEN DISKWAIT(R,DL,USERDISKBOTTOM) ;                           05853210
         DISKWAIT(R+DL,F-DL,B) ;                                        05853250
         END                                                            05853300
    ELSE DISKWAIT(R,AVS,USERDISKBOTTOM) ;                               05853400
$OMIT 05853426, IF SHAREDISK ;                                          05853420
    DISKWAIT(R,AVS,B) ;                                                 05853425
$INCLUDE 05853591, IF SHAREDISK ;                                       05853490
    IF N<0 THEN SCRATCHDIRECTORYDELETE(A,-N) ;                          05853500
DZ: FORGETSPACE(R);  UNLOCK(USERDISKBOTTOM);  USERDISKREADY~TRUE ;      05853590
$ OMIT 05853601,IF SHAREDISK;                                           05853593
    FORGETSPACE(R) ;                                                    05853595
DZ: USERDISKREADY~TRUE ;                                                05853600
BZ: END OF FORGETUSERDISK ;                                             05853700
PROCEDURE DKBUSINESS(BUFF); VALUE BUFF; REAL BUFF;                      05950000
BEGIN                                                                   05950200
    REAL RCW=+0,                                                        05950400
         MID=RCW+1,                                                     05950600
         FID=MID+1,                                                     05950800
         TMID=FID+1,                                                    05950900
         A=TMID+1,                                                      05951000
         B=A+1;                                                         05951200
    INTEGER N=B+1;                                                      05951400
    ARRAY HD=N+1[*];                                                    05951600
    BOOLEAN RDT=HD+1;                                                   05951700
    INTEGER C=RDT+1,D=C+1,I=D+1,J=I+1,R=J+1,S=R+1,                      05951800
            LA=S+1,SA1=NT2,                                             05951900
            H=NT7,K=NT6,L=NT5,G=NT4,T=NT3,Q=JUNK;                       05952000
    REAL E=LA+1;                                                        05952200
    ARRAY UT=HD[*]; INTEGER AVS=E+1; DEFINE U=AVTABLE#;                 05952400
    INTEGER SLEEPER=AVS+1;                                              05952500
    LABEL V,W,X,Y,Z,AZ,BZ,CZ,DZ,INUSE,EXIT;                             05952600
% * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *     05952800
    P(GETSPACE(128,12,0)+1,STS,BUFF,RCW,0,RDS,0,XCH,CFX,STF);           05953000
    STACKUSE:=TRUE;                                                     05953100
    P(0,0,0,0,BUFF,DUP); BUFF:=P.[15:15]-1; P(0,0,B LSS 0);             05953200
    IF B.[CF]=0 THEN% MAKE RESERVE/DISK                                 05953400
    BEGIN MID:="RESERVE"; FID:="DISK   ";                               05953600
         IF (A:=DIRECTORYSEARCH(-MID,FID,5))!0 THEN                     05953800
         BEGIN STREAM(BUFF);                                            05954000
              DS:=30LIT" RESERVE/DISK ALREADY PRESENT~";                05954200
              GO TO EXIT;                                               05954400
         END;                                                           05954600
         IF (A~GETUSERDISK((N~RESERVEDISKSIZE)&1[2:47:1]))=0 THEN       05954800
         BEGIN STREAM(BUFF);                                            05955000
              DS:=32LIT"**NO USER DISK FOR RESERVE/DISK~";              05955200
              GO TO EXIT;                                               05955400
         END;                                                           05955600
         GO TO CZ;                                                      05955800
    END;                                                                05956000
$ INCLUDE 05956101, IF SHAREDISK;                                       05956099
    GO TO EXIT;                                                         05956100
$ OMIT 05976001, IF SHAREDISK;                                          05956199
    P(0,0,0,0,0,0,0,0,0);                                               05956200
    IF RDT THEN                                                         05956250
    BEGIN P(B); A:=M[BUFF INX 0]; N:=M[BUFF INX 1]; END ELSE            05956300
    BEGIN                                                               05956350
    STREAM(B,N:=[N],A:=[A]);                                            05956400
    BEGIN SI:=B;                                                        05956600
    L1:  IF SC=" " THEN BEGIN SI:=SI+1; GO TO L1 END;                   05956800
    L2:  IF SC GEQ "0" THEN IF SC LEQ "9" THEN                          05957000
         BEGIN TALLY:=TALLY+1; SI:=SI+1; GO TO L2 END;                  05957200
         B:=TALLY; SI:=SI-B; DS:=B OCT;                                 05957400
    L3:  IF SC LSS "0" THEN IF SC="~" THEN GO TO X ELSE                 05957600
         BEGIN SI:=SI+1; GO TO L3 END;                                  05957800
         DI:=N; TALLY:=0; GO TO L2;                                     05958000
    X:END;                                                              05958200
    IF A=0 THEN GO TO EXIT;                                             05958400
    END;                                                                05958500
    STREAM(A,D:=[FID]);                                                 05958600
    BEGIN SI:=LOC A; DS:=8 DEC; END;                                    05958800
    IF (J:=A DIV 1000000) GEQ NEUP.NEUF OR A LSS DIRECTORYTOP+4 THEN    05959000
V:  BEGIN STREAM(FID,BUFF);                                             05959200
         BEGIN DS:=22LIT" INVALID DISK ADDRESS ";                       05959400
              SI:=LOC FID; DS:=8CHR; DS:=LIT"~";                        05959600
              DI:=DI-9; DS:=7 FILL;                                     05959800
         END;                                                           05960000
         GO TO EXIT;                                                    05960200
    END;                                                                05960400
    IF WAITIO([FID]INX@100000000,@64,18+FID.[5:1]).[42:1] THEN GO TO V; 05960600
    SLEEP([TOGLE],USERDISKMASK); USERDISKREADY:=FALSE;                  05960700
    N:=N+(N=0); J:=J+1;                                                 05960800
BZ: D:=(I:=(E:=U[J]).STARTWRD) MOD 30;                                  05961000
    AVS:=30-(S:=(C:=E AND NUMENTM)+D)MOD 30+S;                          05961200
    FIXARRAY(UT,R,AVS); DISKWAIT(-R,AVS,B:=I DIV 30+USERDISKBOTTOM);    05961400
    K:=S; L:=D; S:=I+C;                                                 05961600
    G:=I-(NT2:=(P(U[J-1],DUP) AND NUMENTM)+P(XCH).STARTWRD);            05961800
    S:=U[J+1].STARTWRD-S; H:=K:=K-1; IF UT[T:=L].DEND GTR A THEN GO X;  05962000
W:  IF UT[T~(H+L+1) DIV 2].DEND > A THEN IF UT[H~T-1].DEND > A THEN GO W05962200
    ELSE ELSE IF UT[T~T+1].DEND { A THEN BEGIN L~T+1; GO W END;         05962400
X:  IF A GEQ L:=(H:=UT[T].DEND)-(Q:=UT[T].DSIZE) THEN                   05962600
    IF (LA:=(A+N)) LEQ H THEN GO AZ%AREA AVAILABLE                      05962700
    ELSE IF LA LEQ SA1:=(UT[T+1].DEND-UT[T+1].DSIZE) THEN               05962800
    N:=LA-A:=H ELSE N:=SA1-A:=H ELSE IF (LA:=A+N) GTR L THEN            05962900
    N:=L-A ELSE RDT:=RDT OR @100000;                                    05963000
    GO INUSE;                                                           05963100
Y:  TMID:=IF RDT THEN "DKTEST " ELSE "BADISK ";                         05963800
    STREAM(TMID,FID,N,MID,B,BUFF);                                      05964000
    BEGIN DS:=LIT "."; SI:=LOC TMID; SI:=SI+1; DS:=7 CHR;               05964200
         DS:=LIT "/"; SI:=SI+1; DS:=7 CHR;                              05964400
         DS:=13 LIT " NOT CREATED("; SI:=SI+8; SKIP SB;                 05964500
         IF SB THEN ELSE                                                05964600
         BEGIN SI:=LOC N; DS:=7 DEC; N:=DI; DI:=DI-7; DS:=7 FILL;       05964800
              DI:=N; DS:=5 LIT " SEGS"; SI:=SI+1;                       05964900
         END; DS:=11 LIT " IN USE BY "; DS:=7 CHR; DS:=LIT"/";          05965000
         SI:=SI+1; DS:=7 CHR;                                           05965200
         DS:=2 LIT")~";                                                 05965400
    END;                                                                05965600
    FORGETSPACE(R);                                                     05966100
    GO TO DZ;                                                           05966200
INUSE: FORGETSPACE(R);                                                  05966400
    FIXARRAY(UT,R,480);                                                 05966600
    LOCKDIRECTORY;                                                      05966800
    FOR J:=DIRECTORYTOP+4 STEP 16 WHILE TRUE DO                         05967000
    BEGIN DISKWAIT(-R,480,J);                                           05967200
         FOR I:=14 STEP -1 UNTIL 0 DO                                   05967400
         BEGIN E:=UT[450+2|I];                                          05967600
              IF(E EQV @114)=NOT 0 THEN                                 05967800
              BEGIN MID:="SYSTEM "; B:=FID; GO Z; END;                  05967900
              IF (E EQV @14) NEQ NOT 0 THEN                             05968000
              BEGIN B:=UT[30|I+9] AND 31;                               05968200
                   FOR K:=1 STEP 1 UNTIL B DO                           05968400
                        IF (C:=UT[30|I+9+K])NEQ 0 THEN                  05968600
                        IF A GEQ C THEN IF A LSS                        05968800
                        SA1:=(C+D:=UT[30|I+8]) THEN                     05968900
                        BEGIN MID:=E&((LA LEQ SA1) AND                  05969000
                             (RDT.[18:15]))[1:47:1];                    05969100
                             IF A+N GTR SA1 THEN N~SA1-A;               05969150
                             B:=UT[451+2|I];                            05969200
                             GO TO Z;                                   05969400
                        END;                                            05969600
              END;                                                      05969800
         END;                                                           05970000
    END;                                                                05970200
Z:  UNLOCKDIRECTORY;                                                    05970400
    GO TO Y;                                                            05970600
AZ: IF A NEQ L AND LA NEQ H THEN                                        05970800
    BEGIN IF S=0 THEN                                                   05971000
         BEGIN IF G=0 OR D=0 THEN                                       05971200
              BEGIN USERDISKSPECIALCASE(2,E,UT,J); GO TO BZ END;        05971400
              S:=IF P((G+1) DIV 2,DUP) > D THEN P(DEL,D) ELSE P;        05971600
              U[J].STARTWRD:=I-S; G:=D-S; K:=G+C-1;                     05971800
              MOVE(C,[UT[D]],[UT[G]]); T:=T-S;                          05972000
         END;                                                           05972200
         FOR G:=K STEP -1 UNTIL T DO UT[G+1]:=UT[G];                    05972400
         UT[T]:=A&(A-L)[TODSIZE];                                       05972600
         UT[T+1]:=H&(H-LA)[TODSIZE];                                    05972800
         C:=C+1;                                                        05973000
    END ELSE                                                            05973200
    IF A=L AND LA=H THEN                                                05973400
    BEGIN C:=C-1; MOVE(K-T,[UT[T+1]],[UT[T]]); K:=K-1 END               05973600
    ELSE UT[T]:=(IF A=L THEN H ELSE A)&(Q-N)[TODSIZE];                  05973800
    U[J].NUMENT:=C;                                                     05974000
    IF Q=U[J].MAXSIZ THEN                                               05974200
    BEGIN Q:=UT[H:=K-C+1].DSIZE;                                        05974400
         FOR H:=H STEP 1 UNTIL K DO                                     05974600
              IF P(UT[H].DSIZE,DUP) GTR Q THEN Q:=P ELSE P(DEL);        05974800
         U[J].MAXSIZ:=Q;                                                05975000
    END;                                                                05975200
    MID:=IF RDT THEN "DKTEST " ELSE "BADISK ";                          05975400
    DISKWAIT(R,AVS,B);                                                  05975600
    FORGETSPACE(R);                                                     05975800
CZ: FIXARRAY(HD,B,30);                                                  05976200
    MOVE(30,HD-1,HD);                                                   05976400
    HD[0]:=@3600036000101;                                              05976600
    STREAM(DATE,H:=HD INX 3);                                           05976800
    BEGIN SI:=LOC DATE; DS:=8OCT; DI:=H; DS:=2LIT"+#";                  05977000
         SI:=H; SI:=SI+5; DS:=3 CHR;                                    05977200
    END;                                                                05977400
    HD[7]:=HD[8]:=N;                                                    05977600
    HD[9]:=1;                                                           05977700
    HD[10]:=A;                                                          05977800
    ENTERUSERFILE(MID,FID,HD.[CF]-1);                                   05978000
    STREAM(MID,FID,N,BUFF);                                             05978200
    BEGIN SI:=LOC MID; DS:=1 LIT " "; SI:=SI+1; DS:=7 CHR;              05978400
         DS:=1 LIT "/"; SI:=SI+1; DS:=7 CHR; DS:=6 LIT " SEGS=";        05978600
         DS:=8 DEC; DS:=9 LIT " CREATED~"; DI:=DI-17; DS:=7 FILL;       05978800
    END;                                                                05979000
    FORGETSPACE(B);                                                     05979200
DZ: USERDISKREADY:=TRUE;                                                05979300
$OMIT 05979401, IF SHAREDISK;                                           05979399
EXIT: IF RDT THEN M[SLEEPER INX 0]:=1 ELSE SPOUT(BUFF);                 05979400
$INCLUDE 05979451, IF SHAREDISK;                                        05979449
EXIT: IF RDT THEN M[SLEEPER INX 0]:=3 ELSE SPOUT(BUFF);                 05979450
    BUFF:=0; KILL([BUFF]);                                              05979500
END;                                                                    05979600
 SAVE PROCEDURE DISKIO(LOCIOD,CORE,SIZE,DISK);%                         06000000
         VALUE CORE,SIZE,DISK;%                                         06001000
         REAL LOCIOD;%                                                  06002000
         INTEGER CORE,SIZE,DISK;%                                       06003000
         BEGIN REAL     IOD;                                            06004000
              IF DISK.[1:1] THEN                                        06005000
                   COMMENT AUXILIARY MEMORY........;                    06006000
              IOD := CORE.[CF] & DISK[CTF] & CORE[2:1:1]                06007000
                               & (SIZE INX 1)[8:38:10]                  06008000
                               & ((SIZE:=DISK.[32:1])+1)[4:46:2]        06009000
              ELSE BEGIN IOD := ABS(CORE) & SIZE[8:38:10]               06010000
                               & ((SIZE INX 29) DIV 30 +@1000)[CTF]     06011000
                               & CORE[24:1:1] & 3[5:46:2];              06012000
$ INCLUDE 06012501, IF SHAREDISK;                                       06012499
                        DISK.[1:1]:=SIZE.[1:1];                         06012500
                        STREAM(DISK,CORE);%                             06013000
                             BEGIN SI ~ LOC DISK; DS ~ 8 DEC END;%      06014000
                        SIZE ~ 2;%                                      06015000
                   END;%                                                06016000
              IOREQUEST(NABS(IOD)&@377[25:40:8],IOD,[LOCIOD]&%          06017000
                   (SIZE+16)[12:42:6]);%                                06018000
              LOCIOD ~ 0;%                                              06019000
         END DISKIO;%                                                   06020000
PROCEDURE FORGETESPDISK(SEGMENT); VALUE SEGMENT; REAL SEGMENT; FORWARD; 06020500
 REAL PROCEDURE GETESPDISK;%                                            06021000
         BEGIN REAL T=NT1;                                              06022000
              IF ESPCOUNT=0 THEN                                        06022100
              BEGIN                                                     06022200
                   STREAM(D:=T:=GETSPACE(2,0,0)+2);                     06022300
                        DS~12 LIT " NO ESPDISK~";                       06022400
                   SPOUT(T);                                            06022500
                   SLEEP([ESPCOUNT],NOT 0);                             06022600
              END;                                                      06022700
              STREAM(T~0,A~ESPTAB:X~0);                                 06023000
              BEGIN SI~A;                                               06024000
              L1:  IF SC=""" THEN BEGIN SI~SI+1; GO TO L1 END;          06025000
                   A~SI; DI~A;                                          06026000
              L2:  IF SB THEN                                           06027000
                   BEGIN TALLY~TALLY+1; SKIP SB; SKIP DB; GO TO L2 END; 06028000
                   T~TALLY; DS~SET;                                     06029000
              END;                                                      06030000
              GETESPDISK~((P(DUP).[CF]-ESPTAB)|8                        06031000
              +P(XCH).[30:3])|6+P+ESPDISKBOTTOM;                        06032000
              ESPCOUNT~ESPCOUNT-1;                                      06033000
         END;                                                           06033100
 PROCEDURE FORGETESPDISK(SEGMENT); VALUE SEGMENT; REAL SEGMENT;%        06036000
         BEGIN REAL S,T;                                                06037000
              IF SEGMENT LSS ESPDISKBOTTOM OR                           06037100
                   SEGMENT GTR ESPDISKTOP THEN                          06037200
              BEGIN S ~ FLAG(-"ESPDISK");  T ~ FLAG(-"ERROR.~");        06037300
                   S ~ WAITIO([SEGMENT] INX 2,0,25);                    06037400
                   SNOOZE(1023,0,0);                                    06037500
              END;                                                      06037600
              T:=(S:=(T:=SEGMENT-ESPDISKBOTTOM) DIV 6)|6-T;             06037700
              S~S.[30:15]&S[30:45:3]+ESPTAB;                            06038000
              STREAM(T,S); BEGIN SKIP T DB; DS~RESET END;               06038100
              ESPCOUNT~ESPCOUNT+1;                                      06038200
         END;%                                                          06039000
$ INCLUDE 06043901, IF SHAREDISK;                                       06039999
$INCLUDE 06056001, IF DEBUGGING;                                        06045999
 PROCEDURE DISKBUG;%                                                    06046000
         BEGIN REAL T;%                                                 06047000
              ;STREAM(DBARRAY); DS ~ 8 LIT "DISKBUG~";%                 06048000
              T ~ WAITIO(DBARRAY.[33:15],@377,25);%                     06049000
              DDT;%                                                     06050000
              WHILE DBADR ! 0 DO%                                       06051000
                   BEGIN DISKIO(T, -DBARRAY.[33:15],30,DBADR);%         06052000
                        SLEEP([T],@2000000000);%                        06053000
                        DDT;%                                           06054000
                   END;%                                                06055000
         END;%                                                          06056000
$ INCLUDE 06056201, IF DFX OR SHAREDISK;                                06056099
 REAL LASTEU; COMMENT USED FOR ALLOCATING DISK FROM DIFFERENT EUS,  %DFX06056100
                IF POSSIBLE;                                        %DFX06056200
$ INCLUDE 06060001, IF SHAREDISK;                                       06057000
COMMENT CLEANOUT PERFORMS THE FOLLOWING TASKS:                          06057020
        1. REMOVES ALL CONTENTION BITS THAT WERE SET BY "SYS".          06057040
        2. UNLOCKS ALL ADDRESSES THAT WERE LOCKED BY "SYS".             06057060
        3. RETURNS ALL OF THE DISKSPACE THAT IS IN THE SCRATCHDIRECTORY 06057080
           OF THE SYSTEM THAT IS BEING CLEARED.                         06057100
        4. REMOVES ALL FILES THAT WERE BEING LOADED BY THE SYSTEM THAT  06057120
           IS BEING CLEARED.                                            06057140
        5. CLOSES ALL FILES THAT THE OFFENDING SYSTEM HAD OPENED.       06057160
        6. REMOVES ALL ENTRIES IN THE HOLDLIST THAT WERE MADE BY THE    06057180
           SYSTEM BEING CLEARED.                                        06057200
        7. WAKES UP ALL PROCESSES IN OTHER SYSTEMS THAT WERE WAITING    06057220
          FOR A FILE THAT WAS IN USE (BY ANY SYSTEM).                   06057240
       CLEANOUT IS CALLED WHEN THE KEYBOARD MESSAGE "CLSYN"             06057260
       IS ENTERED AND WHEN A SYSTEM IS HALT/LOADED AND                  06057280
       THERE ARE OTHER SYSTEMS RUNNING.                                 06057300
END COMMENT;                                                            06057320
PROCEDURE CLEANOUT(SYS);                                                06057340
    VALUE SYS; REAL SYS;                                                06057360
BEGIN                                                                   06057380
    REAL RCW=+0;                                                        06057390
    REAL I=RCW+1,J=I+1,K=J+1,F=K+1,N=F+1,B=N+1,PB=B+1;                  06057400
    INTEGER T=PB+1;                                                     06057420
    ARRAY NB=T+1[*],FH=NB+1[*],BP=FH+1[*];                              06057440
    LABEL FOURMASK,NINEMASK,FOUND,QUIT;                                 06057460
    IF SYS!SYSNO THEN                                                   06057465
    BEGIN                                                               06057470
         P(GETSPACE(128, 12,0)+1,STS,SYS,RCW,0,RDS,0,XCH,CFX,STF);      06057475
         STACKUSE:=TRUE;                                                06057480
    END;                                                                06057485
    P(0,0,0,0,0,0,0,0,0,0,0);                                           06057490
    T:=@4060&SYS[30:46:2]; % CLEAR ALL CONTENTION BITS                  06057495
    P(WAITIO([T] INX @100000000,0,18),DEL);                             06057500
    T.[37:1]:=1; % UNLOCK ALL ADDRESSES                                 06057520
    P(WAITIO([T] INX @100000000,0,18),DEL);                             06057540
    NB:=[M[N:=SPACE(480)]]&480[8:38:10];                                06057560
    FH:=[M[F:=N+33]]&31[8:38:10];                                       06057580
    DISKWAIT(-F,-30,B~DIRECTORYTOP+1);                                  06057600
    IF (I:=FH[SYS].SLINK) NEQ 0 THEN                                    06057620
         BEGIN %CLEAN OUT SCRATCH DIRECTORY                             06057640
         DISKWAIT(-F,30,I) ;                                            06057660
         FH[1]:=J:=0 ;                                                  06057680
         DO IF J:=NOT J THEN SCRATCHCLEAN(FH,N-1,I)                     06057700
            ELSE SCRATCHCLEAN(NB,F-1,I)                                 06057720
         UNTIL I=0 ;                                                    06057740
         DISKWAIT(-F,30,B); FH[SYS]~0;                                  06057750
         END ;                                                          06057760
    DISKWAIT(F,-30,B);                                                  06057770
    LOCKDIRECTORY;                                                      06057800
    FOR I:=DIRECTORYTOP+4 STEP 16 WHILE TRUE DO                         06057820
    BEGIN                                                               06057840
         DISKWAIT(-N,480,I);                                            06057860
         FOR J:=478 STEP -2 UNTIL 450 DO                                06057880
         IF (NB[J] EQV @114)=NOT 0 THEN GO QUIT ELSE                    06057900
         IF (NB[J] EQV @14) NEQ NOT 0 THEN                              06057920
         BEGIN                                                          06057940
              F:=15|(J-450)+4; % NB[F] POINTS TO HEADER[4]              06057960
              IF NB[F].[1:1] AND NB[F].[4:2]=SYS AND NB[F].[12:4]=0 THEN06057980
              BEGIN   %   FILE MUST BE REMOVED FROM DIRECTORY           06058000
                   T:=SCRAMBLE(NB[J],NB[J+1]);                          06058060
                   BP:=[M[B:=SPACE(60)]]&60[8:38:10];                   06058080
                   DO                                                   06058100
                   BEGIN                                                06058120
                        DISKWAIT(-B,60,T);                              06058140
                        FOR K:=0 STEP 3 UNTIL 57 DO                     06058160
                            IF (BP[K] EQV NB[J])=NOT 0 THEN             06058180
                            IF (BP[K+1] EQV NB[J+1])=NOT 0 THEN         06058200
                        GO TO FOUND;                                    06058220
                   END                                                  06058240
                   UNTIL (T:=BP[2].[FF])=0;                             06058260
                   UNLOCKDIRECTORY;                                     06058280
                   T:="DIRERR~";                                        06058300
                   P(WAITIO([T],0,25),DEL);                             06058320
                   SLEEP(0,0);                                          06058340
FOUND:                                                                  06058360
                   BP[K]:=@14;                                          06058380
                   DISKWAIT(B,60,T);                                    06058400
                   NB[J]:=@14;                                          06058420
                   NB[J+1]:=NEXTSLOT;                                   06058440
                   NEXTSLOT:=BP[K+2];                                   06058460
                   FORGETSPACE(B);                                      06058480
                   IF NB[F].[2:1] THEN % FILE WAS BEING LOADED FROM TAPE06058500
                   FOR K:=F+6+NB[F+5].[43:5] STEP -1 UNTIL F+6 DO       06058520
                        IF NB[K]!0 THEN FORGETUSERDISK(NB[K],NB[K+4]);  06058540
              END ELSE                                                  06058560
              BEGIN % CLOSE ALL OPEN FILES                              06058580
                   IF NB[F].[2:1] THEN                                  06058600
                   IF NB[F].[4:2]=SYS THEN NB[F].[2:2]:=0;              06058620
                   P(SYS); ::P(.FOURMASK,+,LOD,NOT); B:=P;              06058640
                   NB[F]:=P(DUP,LOD) AND B;                             06058660
                   P(SYS); ::P(.NINEMASK,+,LOD,NOT); B:=P;              06058680
                   NB[F+5]:=P(DUP,LOD) AND B;                           06058700
                   IF SYS=SYSNO THEN                                    06058720
                   BEGIN                                                06058740
                        PBCOUNT~PBCOUNT+(((NB[J] EQV "PBD    ")=NOT 0   06058760
                             OR (NB[J] EQV "PUD    ")=NOT 0)            06058770
                             AND NB[J+1].[CF]=1);                       06058780
                        IF (NB[J] EQV "PRNPBT ")=NOT 0 AND              06058800
                             (NB[J+1] EQV "DISK   ")=NOT 0 THEN PB:=1;  06058820
                   END;                                                 06058840
              END;                                                      06058860
         END;                                                           06058880
         DISKWAIT(N,480,I);                                             06058900
    END;                                                                06058920
FOURMASK ::: @400437000000000, @400200760000000,                        06058940
             @400100017400000, @400040000370000;                        06058960
NINEMASK ::: @2107600000000000, @1040174000000000,                      06058980
             @ 400003700000000, @ 200000076000000;                      06059000
QUIT:  DISKWAIT(N,480,I);                                               06059020
    IF (I:=HOLDER.[FF])!0 THEN% REMOVE ALL ENTRIES FOR THIS SYSTEM      06059040
    BEGIN %   AND WAKE UP ALL OTHERS                                    06059060
         DISKWAIT(-N,I,HOLDER.[CF]);                                    06059080
         FOR J:=0 STEP 1 UNTIL I-1 DO                                   06059100
         IF NB[J].[2:2]=SYS THEN                                        06059120
         BEGIN % REMOVE ENTRY FOR SYSTEM BEING CLEARED                  06059140
              MOVE(I-J-1,[NB[J+1]],[NB[J]]);                            06059160
              I:=I-1;                                                   06059180
              J~J-1;                                                    06059190
         END ELSE                                                       06059200
         IF NB[J].[2:2]=SYSNO THEN M[NB[J].[FF]]:=1 ELSE                06059220
              NB[J]:=P(DUP,LOD,SSN);                                    06059240
         IF I!0 THEN DISKWAIT(N,I,HOLDER.[CF]);                         06059260
         HOLDER.[FF]:=I;                                                06059280
    END;                                                                06059300
    UNLOCKDIRECTORY;                                                    06059320
    IF SYS=SYSNO THEN                                                   06059340
    BEGIN                                                               06059360
         IF NOT PB THEN AUTOPRINT:=0;                                   06059380
         IF PBCOUNT!0 AND NOT AUTOPRINT THEN                            06059400
         BEGIN                                                          06059420
              STREAM(PBCOUNT,D:=N);                                     06059440
              BEGIN DS:=11 LIT" THERE ARE"; D:=DI; SI:=LOC PBCOUNT;     06059460
                   DS:=4 DEC; DS:=18 LIT" PB FILES ON DISK~";           06059480
                   DI:=D; DS:=3 FILL                                    06059500
              END;                                                      06059520
              SPOUT(N);                                                 06059540
         END ELSE FORGETSPACE(N);                                       06059560
    END ELSE                                                            06059580
    BEGIN                                                               06059600
         DISKWAIT(-N,-30,0);                                            06059620
         NB[I:=13+5|SYS]:=NB[I+1]:=0;                                   06059640
         DISKWAIT(N,-30,0);                                             06059660
         STREAM(S:=SYS+17,N);                                           06059680
         BEGIN DS:=18 LIT"#SYSTEM   CLEARED~"; DI:=DI-10;               06059700
              SI:=LOC S; SI:=SI+7; DS:=CHR;                             06059720
         END;                                                           06059740
         SPOUT(N);                                                      06059760
         KILL([SYS]);                                                   06059780
    END;                                                                06059800
END;  %  OF PROCEDURE CLEANOUT                                          06059820
 SAVE PROCEDURE DISKWAIT(CORE,SIZE,DISK);                               06061500
         VALUE CORE,SIZE,DISK;                                          06062000
         REAL CORE,SIZE,DISK;                                           06063000
         BEGIN REAL T;                                                  06064000
              DISKIO(T,(ABS(CORE)-1)&CORE[1:1:1],SIZE,DISK);            06065000
              SLEEP([T],IOMASK);                                        06066000
         END;                                                           06067000
 PROCEDURE CHANGEABORT(X); VALUE X; REAL X; FORWARD;%                   06179000
REAL LOOKQ;                                                             06179200
ARRAY UNITCODE[*];                                                      06179300
 PROCEDURE SIGNOFF(VECTOR,FILEBLOCK);%                                  06180000
         VALUE VECTOR,FILEBLOCK;%                                       06181000
         ARRAY VECTOR[*],FILEBLOCK[*];%                                 06182000
BEGIN ARRAY NAME LOG;                                                   06183000
              INTEGER N,L,I,J,TIMEX;%                                   06184000
              INTEGER MIX;                                              06184100
              REAL TIMEAX,T,A,Q,ESED;                                   06185000
              SUBROUTINE TIMEIT;%                                       06186000
                   BEGIN CHANGEABORT(0);%                               06187000
                        WHILE (NT2 ~ XCLOCK+P(RTR))}5184000 DO MIDNIGHT;06188000
                        LOG[TIMEAX+2] ~ NT2;%                           06189000
$INCLUDE 06189101, IF STATISTICS;                                       06189099
                       EOJTSTAT[P1MIX]:=NT2;                            06189100
                        PROCTIME[P1MIX] ~ *P(DUP)+CLOCK+P(RTR);%        06190000
                        MIX~P1MIX; P1MIX~0;                             06190100
                        IDLETIME;%                                      06191000
                        OLDIDLETIME ~ (LOG[TIMEX] ~ VECTOR[3]+%         06192000
                             PROCTIME[MIX])+OLDIDLETIME;                06193000
                        LOG[TIMEX+1]~VECTOR[4]+IOTIME[MIX];             06194000
                        LOG[TIMEX+2] ~ VECTOR[7];%                      06195000
                        STREAM(A~VECTOR[5].[1:23]:B~0);%                06196000
                        BEGIN SI ~ LOC A; DI ~ LOC A; DS ~ 8 DEC END;%  06197000
                        LOG[TIMEAX] ~ P(XCH);%                          06198000
                        LOG[TIMEAX+1] ~ VECTOR[5].[24:24];%             06199000
$INCLUDE 06199301, IF STATISTICS;                                       06199099
                       PTSTAT[MIX]:=LOG[TIMEX];                         06199100
                       IOTSTAT[MIX]:=LOG[TIMEX+1];                      06199200
                       BOJTSTAT[MIX]:=LOG[TIMEAX+1];                    06199300
                        NT4 ~ VECTOR[2].[8:10];%                        06200000
                        LOG[TIMEAX+3] ~ IF VECTOR[1] < 0 THEN (NT4= 99) 06201000
                             +2 ELSE NT4 = 3;%                          06202000
                        LOG[TIMEAX+3].[1:30]~  DATE.[18:30];            06202100
                        LOG[TIMEAX+4]:=USERCODE[MIX];                   06203000
$INCLUDE 06203561, IF DCLOG AND NOT INQUIRY AND DATACOM;                06203099
                        IF P(RQONE,0&MIX[10:43:5],LLL,DEL).[9: 6]=MIX   06203100
                          THEN                                          06203130
                             BEGIN                                      06203140
                             REMOTELOGGER(8,0,0,MIX);%DETACH STATION 0/006203150
                             ASIGNEDPROCTIME[MIX]~ASIGNEDIOTIME[MIX]~   06203200
                             ASIGNEDIDLETIME[MIX]~                      06203300
                             USERSTA[MIX]~@2003777777777777;            06203400
                             END                                        06203500
                        ELSE IF NT4 = 99 AND NOT SPOEDNULLOG THEN       06203510
                             BEGIN                                      06203520
                             ASIGNEDPROCTIME[  MIX]~LOG[TIMEX];         06203530
                             ASIGNEDIOTIME[  MIX]~LOG[TIMEX+1];         06203540
                             ASIGNEDIDLETIME[  MIX]~LOG[TIMEX+2];       06203550
                             END;                                       06203560
$INCLUDE 06203601, IF DATACOM AND NOT INQUIRY AND NOT DCLOG;            06203599
                        USERSTA[MIX]~@2003777777777777;                 06203600
                        IF TERMIX.[33:15]=MIX THEN                      06204000
                             TERMIX ~ @1777;%                           06205000
                        USERCODE[MIX] := 0;                             06205100
                        STREAM(S~[NFO[(MIX-1)|NDX]]);%                  06205200
                        BEGIN DS~8 LIT "0";  SI~S;  DS~2 WDS;  END;%    06205300
                   END TIMET;                                           06206100
              A ~ VECTOR[6].[33:15];%                                   06207000
              ESED:=VECTOR[2].[2:1];                                    06207100
              T:=Q:=((L:=VECTOR[6].[18:15])+(IF ESED THEN N~0 ELSE      06208000
                   N:=FILEBLOCK.[8:10])+60) DIV 25|27;                  06209000
    LOG~[M[GETSPACE(T,0,0)+2]];                                         06210000
              M[LOG INX NOT 1].[9:6] ~ 0;%                              06211000
              J ~ A;%                                                   06212000
              DO BEGIN I ~ I+27;%                                       06213000
                   DISKIO( T ,-( LOG INX I),26,J);%                     06214000
                   SLEEP([T],IOMASK);%                                  06215000
                   J ~ LOG[I+1];%                                       06216000
              END UNTIL J=0 OR I+53>Q;%                                 06217000
              IF VECTOR[2].[8:10]=0 THEN L ~ LOG[29];                   06217100
              IF(I:=(L-5) MOD 25+I+7) LSS Q-3 THEN                      06218000
              IF I MOD 27 = 0 THEN%                                     06219000
                   BEGIN LOG[I] ~ LOG[I+1] ~ 0;%                        06220000
                        I ~ I+2 END;%                                   06221000
$INCLUDE 06221101, IF STATISTICS;                                       06221099
              JOBTYPE[P1MIX]:=                                          06221100
              LOG[I]:= IF VECTOR[0] LSS 0                               06222000
                   THEN IF VECTOR[0]=(-"COBOL  ") THEN 2                06222100
                   ELSE IF VECTOR[0]=(-"FORTRAN") THEN 6                06222200
                 ELSE IF VECTOR[0]=(-"BASIC  ") THEN 7                  06222300
                 ELSE IF VECTOR[0]=(-"XALGOL ") THEN 9                  06222400
                 ELSE IF VECTOR[0]=(-"TSPOL  ") THEN 10                 06222500
                 ELSE 1 ELSE 0;                                         06222600
              LOG[I+1] ~ N DIV 5;%                                      06223000
              IF(I:=(TIMEX:=I+2)+3) LSS Q-1 THEN                        06224000
              IF I MOD 27 = 0 THEN%                                     06225000
                   BEGIN LOG[I] ~ LOG[I+1] ~ 0;%                        06226000
                        I ~ I+2;%                                       06227000
                   END;%                                                06228000
                   I ~ (TIMEAX ~ I)+5;%                                 06229000
              IF NOT ESED THEN%IF JOB ES-ED THEN NO FPB ENTRIES         06229100
              FOR J ~ 5 STEP 5 UNTIL N DO%                              06230000
              IF FILEBLOCK[J-1]=0 THEN LOG[TIMEX -1]~*P(DUP)-1 ELSE     06230100
                   BEGIN IF I MOD 27 = 0 THEN%                          06231000
                             BEGIN LOG[I] ~ LOG[I+1] ~ 0;%              06232000
                                  I ~ I+2 END;%                         06233000
                             IF I+4 LEQ Q THEN                          06233100
                        STREAM(A~[FILEBLOCK[J-5]],B~[LOG[I]]);%         06234000
                             BEGIN SI ~ A; DS ~ 5 WDS END;%             06235000
                     IF I+4 LEQ Q THEN                                  06235100
                        IF LOG[I+4] < 0 THEN%                           06236000
                             BEGIN LOG[I+4] ~ *P(DUP)+CLOCK+P(RTR);%    06237000
                                LOG[I+3].[24:12]~P(DUP,DUP).[24:12]+TINU06238000
                                  [NT1~P(XCH).[36:6]-1].[18:12];%       06239000
                                TINU[NT1].[18:12] ~ 0;%                 06240000
                             END;%                                      06241000
                        IF LOG[I+2].[18:30]=0 THEN                      06241100
                        LOG[I+2].[18:30]:=DATE.[18:30];%ENTER CURR DATE 06241200
                        I ~ I+5%                                        06242000
                   END;%                                                06243000
              N ~ LOG[TIMEX -1]|5;                                      06243100
              FORGETSPACE(FILEBLOCK);%                                  06244000
              J ~ 0;%                                                   06245000
              IF VECTOR[2].[8:10] = 1 THEN%                             06246000
                   BEGIN DO J ~ J+27 UNTIL LOG[J+1] = 0;%               06247000
                     WHILE J+27 LSS I AND I LSS Q DO%                   06248000
                             BEGIN LOG[J+1] ~ GETESPDISK;%              06249000
                                  J ~ J+27;%                            06250000
                             END;%                                      06251000
                        I ~ 27;%                                        06252000
                        TIMEIT;%                                        06253000
                        LOG[29]~5|LOG[40]+20;                           06253500
                        DO BEGIN DISKIO(T,LOG INX I,26,A);%             06254000
                                  A ~ LOG[I+1];%                        06255000
                                  I ~ I+27;%                            06256000
                                  SLEEP([T],IOMASK);%                   06257000
                        END UNTIL A = 0;%                               06258000
                   END%                                                 06259000
              ELSE BEGIN                                                06260000
                         DO BEGIN J~J+27;                               06260100
                                  FORGETESPDISK(A);%                    06261000
                                  A ~ LOG[J+1];%                        06262000
                        END UNTIL A = 0;%                               06263000
    IF LOGFREE=0 THEN TIMEIT ELSE                                       06263100
    BEGIN     A~J~29;                                                   06263200
                        LOG[29]~3;                                      06265000
                        I ~ I+6;%                                       06266000
                        WHILE (J ~ J+27) < I DO%                        06267000
                             BEGIN A ~ A+25;%                           06268000
                                  STREAM(X~[LOG[J]],Y~[LOG[A]]);%       06269000
                                       BEGIN SI ~ X; DS ~ 25 WDS END;%  06270000
                                  IF TIMEX } A THEN TIMEX ~ TIMEX-2;    06271000
                                  IF TIMEAX } A THEN TIMEAX ~ TIMEAX-2; 06272000
                             END;%                                      06273000
                        N ~ (N+L) DIV 5+3;%                             06278000
                        L ~ 28;%                                        06279000
                     IF TIMEX+2 LSS Q AND TIMEAX+4 LSS Q THEN           06279100
                        TIMEIT; LOGSPACE(L+1 INX LOG,(N-1)|5);          06280000
                        END;%                                           06327000
              END;%                                                     06328000
              FORGETSPACE(LOG);%                                        06329000
         END SIGNOFF;%                                                  06330000
PROCEDURE USERDISKSPECIALCASE(Q,R,UT,J) ;                               06350000
VALUE Q,J;  REAL R,J;  INTEGER Q;  ARRAY UT[*] ;                        06350300
    BEGIN                                                               06350600
    REAL BUFF=Q,N=J,Z=UT,E=R ;                                          06351000
$INCLUDE 06351056, IF SHAREDISK ;                                       06351050
    INTEGER NT=J ;                                                      06351053
    REAL NEU=AVS;  DEFINE U=UT #, UA=UT #, NEU1=NEU+J #, NEU2=NEU+NEU#; 06351055
$OMIT 06351106, IF SHAREDISK ;                                          06351100
    REAL NEU,NT;  ARRAY UA[*] ;                                         06351104
    DEFINE U=AVTABLE #,  AVS=B #,  NEU1=J-1 #,  NEU2=NT-1 #;            06351105
    INTEGER NT1,NT3,NT4,B ;                                             06351250
    LABEL L1,L2,L3,UP,PU,BD,WHY,M1,T10 ;                                06351500
    SWITCH SW~L1,L2,L3 ;                                                06351800
    IF Q!0 THEN GO SW[Q-1] ;                                            06352000
$INCLUDE 06352601,IF SHAREDISK ;                                        06352490
    IF (B:=J.[CF])>1023 THEN GO BD;  Q:=SPACE(B);  MOVE(J.[FF],R,Q) ;   06352500
    FORGETSPACE(R);  P(((R:=Q)&B[TOSIZE]) OR M,RTN) ;                   06352600
L1: BUFF~R;  Z~0;  USERDISKREADY~TRUE ;                                 06353500
         IF N LEQ RESERVEDISKSIZE THEN% CALL OUT RESERVES               06353510
         IF (Z:=DIRECTORYSEARCH("RESERVE","DISK   ",6)) NEQ 0 THEN      06353530
         BEGIN FORGETSPACE(Z);                                          06353540
                    IF N>0 THEN IF NOT LIBMSG THEN                      06353542
                    BEGIN STREAM(Z~Z~SPACE(3));                         06353544
                          DS~23 LIT "**RESERVE/DISK REMOVED~";          06353550
                    SPOUT(Z);                                           06353551
                    END;                                                06353552
         END OF RESERVE CALL UP;                                        06353570
         IF AUTOUNLD THEN                                               06353580
         BEGIN P(P1MIX); AUTOUNLD:=P1MIX:=0;                            06353590
               STREAM(A:=DATE,Z:=Z:=SPACE(10)+2);                       06353600
               BEGIN DS:=23 LIT"CC UNLOAD EXPIRED TO XP";               06353610
                     SI:=LOC A; SI:=SI+3; DS:=5 CHR;                    06353620
                     DS:=9 LIT " =/=;END.";                             06353630
               END;                                                     06353640
               INDEPENDENTRUNNER(P(.CONTROLCARD),Z&31[3:43:5]);         06353650
               P1MIX:=P;                                                06353660
               IF N GEQ 0 THEN                                          06353670
               BEGIN STREAM(Z:=Z:=SPACE(10));                           06353680
                     DS:=18 LIT"18 AUTOUNLD RESET~";                    06353690
                     SPOUT(Z);                                          06353700
         END   END AUTOMATIC UNLOADING;                                 06353710
         IF NOT N.[2:1] THEN                                            06353720
         BEGIN IF P1MIX!0 THEN                                          06354000
              BEGIN                                                     06354100
    WHY:      STREAM(J:=JARROW[P1MIX],P1MIX,N,BUFF);                    06355000
              BEGIN DS~14 LIT "#NO USER DISK:";                         06356000
                   SI~J;  SI~SI+1;  DS~7 CHR;                           06357000
                   DS~LIT "/";  SI~SI+1;  DS~7 CHR;                     06358000
                   SI~LOC P1MIX;  DS~LIT "=";  DS~2 DEC;                06359000
                   J:=DI; DI:=DI-2; DS:=FILL; DI:=J; DS:=LIT"-";        06359500
                   SI:=LOC N; DS:=8 DEC; DS:=7 LIT" SEGS.~";            06360000
                   DI:=DI-15; DS:=7 FILL;                               06360500
                   END;                                                 06360505
              SPOUT(BUFF);                                              06360510
              REPLY[P1MIX]:=-@412;                                      06360520
              COMPLEXSLEEP((REPLY[P1MIX] GTR 0) OR                      06360530
                           (TERMIX.[CF]=P1MIX));                        06360540
              IF TERMIX.[CF]=P1MIX THEN                                 06360550
              BEGIN PRTROW[P1MIX].[7:1]~1;                              06360560
                    GO TO INITIATE;                                     06360570
              END;                                                      06360580
              IF NOT WHYSLEEP(@412) THEN                                06360590
              BEGIN BUFF~SPACE(10);                                     06360600
                    GO TO WHY;                                          06360610
              END;                                                      06360620
              END ELSE                                                  06361000
              BEGIN                                                     06361010
              STREAM(N,BUFF);                                           06361100
              BEGIN DS:=20 LIT"#NO USER DISK:MCP - ";                   06361200
                   SI:=LOC N; DS:=8 DEC;                                06361300
                   DS:=6 LIT" SEGS~";                                   06361400
                   DI:=DI-14; DS:=7 FILL;                               06361500
              END;                                                      06361600
              SPOUT(BUFF);NT1~0;DO SLEEP([CLOCK],NOT CLOCK)             06361700
                                UNTIL (NT1~NT1+1)=30;                   06361705
              END                                                       06361710
         END ELSE FORGETSPACE(BUFF);                                    06365110
    P(XIT) ;                                                            06380070
L2: U[J]:=E; E:=NT4:=NEU:=(NT:=NEUP.NEUF)+2+(NT+1)DIV 2; P(NT); J:=1 ;  06380100
$OMIT 06380141, IF SHAREDISK ;                                          06380120
    NT1:=NT+NT+NT;  FORGETSPACE(UT);  FIXARRAY(UA,NT2,NT1);  E:=NT4:=0 ;06380140
UP: IF (NT4:=NT4 MOD 30) LSS (NT3:=(NT1:=U[J].STARTWRD) MOD 30)         06380150
    THEN NT4:=NT3 ;                                                     06380200
    IF (NT2:=(Q:=U[J] AND NUMENTM)+NT4) GTR 1023                        06380250
    OR ((Q+E+1) DIV 30+1-E DIV 30) GTR 34 THEN                          06380300
BD: BYBY("0DISK IS TOO CHECKERED...PLEASE COMPACT IT~",43) ;            06380350
    DISKWAIT(-((UA[NEU1]:=(UA[NEU2+J]:=SPACE(NT2))+NT4)-NT3),Q+NT3,     06380400
             USERDISKBOTTOM+NT1 DIV 30) ;                               06380450
$ INCLUDE 06380501, IF SHAREDISK ;                                      06380490
         IF J=1 THEN MOVE(NEU,[U[0]],B~UA[NEU2+1]);                     06380500
$ OMIT 06380526, IF SHAREDISK ;                                         06380520
    IF J=1 THEN B:=UA.[CF]+NT+NT-1 ;                                    06380525
    M[B+J]:=U[J]&E[TOSTARTWRD] ;                                        06380550
    IF (NT1:=Q DIV 4) LSS AVDIFFMIN THEN NT1:=AVDIFFMIN ;               06380600
    IF (E:=(NT4:=Q+E)+NT1)>AVTMAX THEN GO BD ;                          06380650
    NT4:=IF E DIV 30!NT4 DIV 30 THEN 0 ELSE E ;                         06380675
    IF P(DUP) GEQ J:=J+1 THEN GO UP;  E:=E-NT1;  J:=1 ;                 06380700
PU: NT2:=(NT3:=P(M[B+J],DUP).STARTWRD)+NT5:=P(XCH) AND NUMENTM ;        06380750
    IF P(DUP)!J THEN IF (NT2-1)DIV 30=(NT4~M[B+J+1].STARTWRD)DIV 30 THEN06380800
    MOVE(NT1~NT2 MOD 30,UA[NEU1]+NT5-NT1,NT1~UA[NEU1+1]-NT4 MOD 30);    06380850
    DISKWAIT(UA[NEU1]-NT1~NT3 MOD 30,NT1+NT5,USERDISKBOTTOM+NT3 DIV 30);06380900
         IF J!1 THEN FORGETSPACE(UA[NEU2+J]);                           06380950
    IF P(DUP) GEQ J:=J+1 THEN GO PU ;                                   06381000
$OMIT 06381071, IF SHAREDISK ;                                          06381020
    MOVE(NT,[UA[NT+NT]],[AVTABLE[1]]) ;                                 06381070
$INCLUDE 06381081, IF SHAREDISK ;                                       06381075
    FORGETSPACE(B) ;                                                    06381080
    FORGETSPACE(UA) ;                                                   06381085
$INCLUDE 06381201, IF SHAREDISK ;                                       06381095
    Q:=SPACE(AVS:=(AVS:=IF E LSS AVSMIN THEN AVSMIN ELSE IF E GTR AVSMAX06381100
                  THEN AVSMAX ELSE E)+30-(IF (E:=AVS MOD 30)!0 THEN E   06381150
                  ELSE 30)) ;                                           06381155
    DISKWAIT(-Q,AVS,USERDISKBOTTOM) ;                                   06381200
    P(DEL,Q&AVS[TOSIZE] OR M,RTN) ;                                     06381250
L3: P(U[NEUP.NEUF+2+(Q:=J DIV P(M1)) DIV 2],IF Q THEN P.[8:20] ELSE     06381300
      P.[28:20]) ;                                                      06381310
    IF U[Q+1].SPEED = 2 THEN                                            06381320
         BEGIN % 40-MILL MASK CONSTRUCTION.                             06381330
         Q:=P ;                                                         06381335
         STREAM(S:=0:Q,R:=0) ;                                          06381340
              BEGIN                                                     06381345
              SI:=LOC Q; SKIP 28SB; DI:=LOC S; SKIP 8DB ;               06381350
              5(4(IF SB THEN BEGIN DS:=SET;R:=DI;SKIP 3DB;DS:=SET;DI:=R;06381355
                             END                                        06381360
                  ELSE SKIP DB; SKIP SB) ;                              06381365
                SKIP 4DB) ;                                             06381375
              END STREAM ;                                              06381380
         END ;                                                          06381390
    STREAM(MSK:=0:V:=47-(J:=((Q:=J MOD P(M1))+ABS(R)-1) DIV P(T10)),    06381395
           W:=1+J-Q DIV P(T10));                                        06381400
    BEGIN DI:=LOC MSK; SKIP V DB; DS:=W SET; END;                       06381405
    P(LND,LNG,0,LNG,=,RTN);                                             06381410
M1:::    @3641100; % DECIMAL 1000000.                                   06381450
T10:::   @23420;   % DECIMAL 10000.                                     06381500
    END OF USERDISKSPECIALCASE ;                                        06381550
 PROCEDURE GETMOREOLAYDISK(MIX);%                                       06400000
 VALUE   MIX;%                                                          06401000
 INTEGER MIX;%                                                          06402000
    BEGIN INTEGER  I=+1,%                                               06403000
                   J=+2,%                                               06404000
                   T=+3;%                                               06405000
         ARRAY     A=+4[*];%                                            06406000
         REAL      RCW=+0;%                                             06407000
         LABEL EXIT;%                                                   06408000
         P(GETSPACE(128, 12,0)+1,STS,MIX,RCW,0,RDS,0,XCH,CFX,STF);      06409000
         P(0, 0, 0, 0);  TOGLE ~ TOGLE OR STACKMASK;%                   06410000
        IF (T:=DALOC[MIX,0].[CF]+1)=127 THEN BEGIN                      06411000
             TERMINATE(MIX & 37[CTF]);                                  06411010
             GO TO EXIT; END;                                           06411030
         IF T=DALOCROW[MIX].[8:10] THEN%                                06412000
         BEGIN IF (J := T+P(DUP)-1)=129 THEN J := 113;                  06413000
              WHILE (I := GETSPACE(J, 0, 3)+2)=2 DO                     06414000
                SLEEP([CLOCK], NOT CLOCK);                              06415000
              MOVE(T, DALOCROW[MIX], I);                                06416000
              FORGETSPACE(DALOCROW[MIX]);                               06417000
              DALOCROW[MIX] := (*P(DUP)) & I[CTC] & J[8:38:10];         06417500
              M[I-2].[9:6] := MIX;                                      06418000
         END AIT TYPE ACTION;%                                          06419000
         IF (I ~ GETUSERDISK(500 OR MEMORY))=0 THEN GO TO EXIT;%        06420000
         DALOC[MIX,0] ~ (*P(DUP))&(T+1)[CTC];%                          06421000
         DALOC[MIX,T] ~ I;%                                             06422000
         DALOC[MIX,T+1] ~ 0;%                                           06423000
    EXIT: OLAYMASK ~ TWO(MIX) OR OLAYMASK;%                             06424000
         KILL([MIX]);%                                                  06425000
    END GET MORE OVERLAY DISK FOR A MIX INDEX;%                         06426000
REAL PROCEDURE SECURITYCHECK(MID,FID,USERID,HEADER);                    06460000
VALUE MID,FID,USERID;                                                   06460100
REAL MID,FID,USERID,HEADER;                                             06460200
%   MID       MULTI FILE ID OF FILE TO BE CHECKED                       06460300
%   FID       FILE ID OF FILE TO BE CHECKED                             06460400
%   USERID    USER IDENTIFICATION                                       06460500
%   HEADER                                                              06460600
%        =0   DO DIRECTORYSEARCH AND PASS BACK FILE HEADER              06460700
%        >0 MEMORY LOCATION OF FILE HEADER(DISK ADDRESS OF FILE         06460800
%                  HEADER OF MID/FID IN M[HEADER INX NOT 0]             06460900
%        <0 SCRAMBLE BLOCK DISK ADDRESSS OF FILE HEADER. CALL           06460950
%        IN HEADER AND DO PRIMARY SECURITY CHECK(HEADER IS NOT RETURNED)06460960
%                                                                       06461100
%   RESULT FROM SECURITYCHECK                                           06461200
%        =0   NO LEGITIMATE USER FOUND                                  06461300
%        =2   TERTIARY USER  ( INPUT ONLY)                              06461400
%        =3   SECONDARY USER (INPUT/OUTPUT)                             06461500
%        =7   PRIMARY USER (INPUT/OUTPUT/LIB MAINT.)                    06461600
BEGIN                                                                   06462000
    REAL T2,DKSGROW,CODES,ROWS,ROW,DKADR,ROWSZ,C,USER,TYPE,SH;          06462100
    ARRAY FH[*];                                                        06462110
    LABEL EXYT,NOTFOUND,LOOK,WHY,FORGET;                                06462200
REAL SUBROUTINE DIRSRH;                                                 06463000
    BEGIN                                                               06463100
LOOK:    IF (T2~DIRECTORYSEARCH(MID,FID,HEADER)) LEQ 0 THEN             06463200
WHY:     BEGIN                                                          06463210
              IF T2.[1:1] THEN                                          06463220
              IF T2=0 THEN                                              06463225
              BEGIN P(DEL); TYPE:=-1; GO TO EXYT END ELSE               06463230
                   FILEMESS("#SYSFIL","ERROR  ",MID,FID,0,0,0) ELSE     06463240
                   FILEMESS("#NO FIL","ON DISK",MID,FID,0,0,0);         06463250
                REPLY[P1MIX] := -@412;                                  06463300
                COMPLEXSLEEP((REPLY[P1MIX]>0) OR TERMIX.[CF]=P1MIX);    06463400
                IF TERMIX.[CF] = P1MIX THEN GO TO INITIATE;             06463500
                IF NOT WHYSLEEP(@412) THEN GO TO WHY;                   06463600
                REPLY[P1MIX] :=0; GO TO LOOK;                           06463700
          END;                                                          06463800
         DIRSRH := T2;                                                  06463810
END DIRSRH;                                                             06463820
         IF HEADER GTR 511 OR HEADER LSS 0 THEN                         06463830
         BEGIN                                                          06463835
              IF HEADER GTR 511 THEN                                    06463840
              BEGIN                                                     06463845
                   STREAM(Q:=M[HEADER INX NOT 0],D:=[T2]);              06463850
                   BEGIN SI:=LOC Q; DS:=8 OCT END;                      06463855
              END ELSE                                                  06463860
              T2:=HEADER.[CF];                                          06463865
              FH:=[M[GETSPACE(30,0,0)+2]]&30[8:38:10];                  06463870
              DISKWAIT(-FH.[CF],30,T2);                                 06463875
         END ELSE                                                       06463880
         FH:=[M[DIRSRH]]&30[8:38:10];                                   06463885
         IF(FH[2] EQV 0)=NOT 0 OR (ABS(USERID) EQV ABS(FH[2]))=NOT 0    06463910
              OR (USERID EQV MCP)=NOT 0 THEN TYPE~7 ELSE%               06463920
                   IF HEADER<0 THEN GO EXYT ELSE                        06463925
         IF (FH[5] EQV @14)=NOT 0 THEN%                                 06463930
              IF (FH[6] EQV @14)=NOT 0 THEN TYPE~2 ELSE TYPE~3;%        06463940
         IF TYPE ! 0 THEN GO TO EXYT;                                   06463950
         IF FH[5].[1:1] THEN                                            06463960
         BEGIN IF (SH:=DIRECTORYSEARCH(ABS(FH[5]),FH[6],20))=0 %        06463970
              THEN BEGIN TYPE:=0; GO TO EXYT END;                       06463980
          DKSGROW := M[SH INX 8];                                       06463990
         CODES:=GETSPACE(30,0,0)+2;ROWS:=(M[SH INX 9]AND 31)-1;         06464000
          FOR ROW:=0 STEP 1 UNTIL ROWS DO                               06464100
          BEGIN IF (DKADR:=M[SH INX 10+ROW])=0 THEN                     06464200
NOTFOUND:       BEGIN TYPE := 0;                                        06464300
FORGET:               FORGETSPACE(CODES); FORGETSPACE(SH);GO TO EXYT;   06464400
                END;                                                    06464500
                ROWSZ := DKADR + DKSGROW;                               06464600
                WHILE DKADR < ROWSZ DO                                  06464700
                BEGIN DISKIO(C,1-CODES,30,DKADR);                       06464800
                      SLEEP([C],IOMASK);                                06464900
                      FOR C:=0 STEP 1 UNTIL 29 DO                       06465000
                     BEGIN IF((USER:=NFLAG(M[CODES INX C]))EQV @114)=   06465100
                             NOT 0 THEN GO TO NOTFOUND;                 06465200
                             IF (USER EQV @14)! NOT 0 THEN              06465210
                                     IF USER.[3:3]=0 THEN               06465220
                                     BEGIN                              06465230
                             IF (USERID EQV ABS(USER))=NOT 0 THEN       06465300
                             BEGIN TYPE :=                              06465400
                                  IF USER < 0 THEN 2 ELSE 3;            06465500
                                  GO TO FORGET;                         06465600
                           END;                                         06465700
                                     END ELSE                           06465800
                                     BEGIN                              06465805
                                     IF P1MIX ! 0 THEN                  06465810
                                     IF(ABS(JAR[P1MIX,0])EQV            06465820
                                       USER.[6:42])= NOT 0 THEN         06465830
    IF((IF JAR[P1MIX,0]<0 THEN "DISK   "ELSE JAR[P1MIX,1])EQV           06465840
                                       M[CODES INX C+1].[6:42])= NOT 0  06465850
                                     THEN                               06465860
                                     BEGIN                              06465870
                                       TYPE := USER.[3:3];              06465880
                                       GO TO FORGET;                    06465900
                                     END; C:=C+1;                       06465910
                                     END;                               06465920
                      END; % 30 USERS                                   06466000
                      DKADR := DKADR + 1;                               06466100
                END; % ROW                                              06466200
          END; % ROWS                                                   06466300
          GO TO NOTFOUND;                                               06466310
    END; % NO SECURITY BLOCK FILE                                       06466400
    TYPE :=0;                                                           06466500
EXYT:                                                                   06466600
    IF HEADER GEQ 0 AND HEADER LSS 512 THEN HEADER:=FH ELSE             06466610
         FORGETSPACE(FH);                                               06466620
    SECURITYCHECK :=TYPE;                                               06466700
END SECURITYCHECK;                                                      06466800
$INCLUDE 06845001, IF DATACOM AND NOT INQUIRY;                          06499999
PROCEDURE TACH(STA ,MIX,FUNC);VALUE MIX,STA; REAL STA ,MIX,FUNC;        06500000
COMMENT                                                                 06501000
IF FUNC = 1 THEN TEST TO SEE IF STA  IS ATTACHED AND (SEE NOTE 1).      06503000
IF FUNC = 2 THEN ATTACH STA.   NO CHECK TO SEE IF ALSO PREVIOUSLY       06504000
ATTACHED.                                                               06505000
IF FUNC = 3 THEN TEST TO SEE IF STAT IS ATTACHED & IF NOT, THEN ATTACH. 06506000
IF FUNC = 4 THEN TEST TO SEE IF ANY ATTACHED STATION IS READ READY.     06507000
IF FUNC=5 THEN MIX=P1MIX FROM COM5,STA=0--JOB GO TO EOJ.                06507500
IF FUNC = 7 THEN SAME AS 3.  7 DESIGNATES CALLED FROM SELECTION.        06507600
NOTE 1: IF FUNC=1 OR FUNC=4 0 IS RETURNED IN THE THIRD PARAMETER IF     06508000
        TESTS ARE FALSE.  OTHERWISE THE CURRENT STATION WORD IN QUESTION06509000
        IS RETURNED.  FUNC=1, MIX=0 RETURNS RESULT IF STA  ATTACHED.    06510000
    IF FUNC = 0 THEN                                                    06511000
         IF                                                             06512000
         STA!0 AND MIX!0    DETACH GIVEN STATION FROM GIVEN MIX         06513000
         STA!0 AND MIX=0    DETACH GIVEN STATION FROM ALL   MIXES       06514000
                            AND DETACH ALL THE STATION S SPO            06515000
                            MESSAGES, IF ANY                            06516000
         STA=0 AND MIX!0    DETACH ALL  STATIONS FROM GIVEN MIX;        06517000
BEGIN    %1                                                             06518000
REAL T1,T2,TUB,MX,I;                                                    06519000
REAL MESS,MESSADDR,TUSTA,TEMP;                                          06520000
INTEGER SIZE;                                                           06521000
INTEGER Q=TEMP;                                                         06521100
REAL Z;                                                                 06521200
LABEL EGRESS,ATTACHAREA  ,ATTACH,LABLE,LABLL,D1SXIT;                    06522000
LABEL ABCDE;                                                            06522500
ARRAY ARA[*];                                                           06523000
DEFINE                                                                  06524000
STACURR=STATION[TUB.[44:4],TUB.[39:4]]#,                                06525000
STA980 = (IF STA.[14:4]!STA.[18:4] THEN TRUE ELSE STA.[9:4]!STA.[4:4])#,06525100
    MASK=@757#,                                                         06526000
LNED =[46:1]#,                                                          06527000
XCLUS=[38:5]#,                                                          06528000
ATACHED=[45:1]#,                                                        06529000
A=ARA[I].[39:9]#,                                                       06531000
B=ARA[I].[30:9]#,                                                       06532000
C=ARA[I].[21:9]#,                                                       06533000
D=ARA[I].[12:9]#,                                                       06534000
E=ARA[I].[03:9]#,                                                       06535000
    UNDO=BEGIN TUB~ TUB AND MASK;                                       06535500
$INCLUDE 06536001, IF DCLOG AND DATACOM AND NOT INQUIRY;                06535999
         REMOTELOGGER(5,0,0&TUB[9:39:9],MIX);                           06536000
         TERM19USER;                                                    06536100
         FIXSTANDMAYBEHANGUPHONE; IF FUNC=5 THEN EOJ END;#,          %JS06536500
RR=((STA~STACURR).[24:1]AND NOT((STA.[22:9]AND@317)=@300OR STA.[22:1])  06537000
   AND                                                                  06537050
    NOT ((STA.[38:5]!MIX AND STA.[38:5]!0) OR STA.[43:1]))#;            06537100
SUBROUTINE GETATTACHED1;                                                06539000
    BEGIN     %4.1                                                      06540000
    IF P(ATTACHED[MIX],TOP) THEN                                        06541000
         BEGIN     %4.2                                                 06542000
         P(DEL);                                                        06543000
         ARA~0;                                                         06544000
         END       %4.2                                                 06545000
    ELSE                                                                06546000
         BEGIN     %4.3                                                 06547000
         ARA~P;                                                         06548000
         SIZE ~ ARA.[8:10];                                             06549000
         END;      %4.3                                                 06550000
    END GETATTACHED1;  %4.1                                             06551000
SUBROUTINE TERM19USER;                                                  06636100
    BEGIN                                                               06636200
    IF (STA~ GET(0&TUB[9:39:9])).[37:1] AND (FUNC=0) THEN               06636300
         BEGIN                                                          06636400
         TERMINATE(STA.[38:5]&67[CTF]);                                 06636500
         HALT;  NOPROCESSTOG~ NOPROCESSTOG-1;                           06636600
         END;                                                           06636700
    END;                                                                06636800
SUBROUTINE FIXSTANDMAYBEHANGUPHONE;                                     06637000
    BEGIN                                                               06638000
    STA ~ STACURR;                                                      06639000
    MESS~1;                                                             06640000
    TACH(STA,0,MESS);                                                   06641000
    IF MESS = 0 THEN                                                    06642000
         BEGIN                                                          06643000
         IF STA.[43:1] THEN                                             06643100
              SEEKACTION(STA,0,4,M); % UNSEEK STA                       06643200
         STA ~ STACURR;                                                 06646500
         STACURR~STA AND @2377577445776003 OR                           06647000
                   (IF STA.[32:1] THEN @1740 ELSE 0);                   06647010
         IF STA980 THEN                                                 06647050
         BEGIN                                                          06647060
         IF STA.[24:1] THEN                                             06647100
              INQUPT(0&STA[9:9:9]&1[24:47:1]);                          06647200
         IF STA.[27:1] THEN                                             06647300
              BEGIN                                                     06647400
              MESS~                                                     06647500
              0&STA[9:9:9]&1[3:47:1]&([TUSTA])[33:33:15];               06647600
              TUSTA~0&"~"[1:43:5];                                      06647700
              IOREQUEST(NABS(MESS),MESS,[MESS]&30[12:42:6]);            06647800
              SLEEP([MESS],IOMASK);                                     06647900
              END;                                                      06647950
         IF NOT STA.LNED AND NOT STA.[32:1] AND DISCONDC THEN           06648000
              BEGIN                                                     06649000
              MESS~                                                     06650000
              0&STA[9:9:4]&STA[14:14:4]&1[3:47:1]&([TUSTA])[33:33:15];  06651000
              TUSTA ~ 0 & "}~" [1:37:11];                               06652000
              IOREQUEST(NABS(MESS),MESS,[MESS]&30 [12:42:6]);           06653000
              SLEEP([MESS],IOMASK);                                     06654000
              END;                                                      06655000
         END;                                                           06655006
         IF NOT STA.[29:1] THEN   % NOT WRITE-IN-PROCESS                06655010
              BEGIN                                                     06655020
              IF NOT((STA.[4:4] ! STA.[9:4] OR STA.[18:4] ! STA.[14:4]) 06655030
                     AND STA.[22:1]) THEN  % NOT A BUSY CONTROL STATION 06655040
                   BEGIN                                                06655050
                   MESS ~ ILL;                                          06655060
                   STA ~ 0&(STA.[9:9] AND @757)[9:39:9];                06655070
                   DO                                                   06655080
                        BEGIN                                           06655090
                        MESS ~ P(MESS,STA,LLL,0,INX,.MESSADDR,STD);     06655100
                        IF (MESS.[9:9] = STA.[9:9]) AND ( MESS<0) THEN  06655110
                             BEGIN                                      06655120
                             M[(TEMP~MESS.[18:15])].[33:15] ~ MESS;     06655130
                             M[MESS].[18:15] ~ TEMP;                    06655140
                             FORGETSPACE(MESSADDR  + 1);                06655150
                             END;                                       06655160
                        END                                             06655170
                   UNTIL                                                06655180
                        MESS = ILL;                                     06655190
                   END;                                                 06655200
              END;                                                      06655210
         END                                                            06656000
    ELSE                                                                06657000
         BEGIN                                                          06658000
         IF STA.XCLUS  = MIX THEN                                       06665000
              BEGIN                                                     06665100
              IF STA.[43:1] THEN                                        06665200
                   SEEKACTION(STA,0,4,M)  % UNSEEK STA                  06665300
              END;                                                      06665600
    DCWRITE(ABS(STA));                                                  06666500
         END;                                                           06667000
    END;                                                                06668000
SUBROUTINE EOJ;                                                         06668005
    BEGIN                                                               06668006
$INCLUDE 06668289, IF DATACOM AND DCSPO AND NOT INQUIRY;                06668007
IF EOJMESS THEN                                                         06668010
IF ((STA ~ GET(0&TUB[9:39:9])).[18:4] ! STA.[14:4])                     06668011
OR ( STA.[4:4] ! STA.[9:4])  THEN                                       06668012
    BEGIN                                                               06668013
    M[(MESS~GETSPACE(10,0,0)+2)-2].[9:6] ~ 0;                           06668020
    STREAM(Y~IF JAR[MIX,1]<0 THEN 2 ELSE JAR[MIX,2].[8:10]!3,           06668030
           MIX,Q~Q~((NT1~(XCLOCK DIV 3600))MOD 60+(NT1 DIV 60)| 100),   06668040
           N1 ~ JAR[MIX,0],N2 ~ JAR[MIX,1],MESS);                       06668050
         BEGIN                                                          06668060
         SI~ LOC N1; SI ~ SI+1;                                         06668070
         DS ~ LIT " "; DS ~ 7CHR;                                       06668080
         SI ~LOC N2; SI ~ SI+1;                                         06668090
         DS ~ LIT "/"; DS ~ 7CHR;                                       06668100
         DS ~ LIT "=";                                                  06668110
         SI~LOC MIX; DS~2DEC; MIX~DI;                                   06668120
         DI~DI-2; DS~FILL; DI~MIX;                                      06668130
         CI ~ CI+Y;                                                     06668140
         GO TO Z;                                                       06668150
         GO TO OK;                                                      06668160
         DS ~ 7 LIT " DS-ED ";                                          06668170
         GO TO X;                                                       06668180
    OK:                                                                 06668190
         DS ~ 5 LIT " EOJ ";                                            06668200
         GO TO X;                                                       06668210
    Z:   DS ~  11 LIT " SYNTX ERR ";                                    06668220
    X:   SI ~ LOC Q;                                                    06668230
         DS ~ 4 DEC;                                                    06668240
         DS ~ LIT "~";                                                  06668250
         END;                                                           06668260
    SPOUT(MESS&TUB[9:39:9]&1[2:47:1]);                                  06668270
    END;                                                                06668280
    END;                                                                06668290
SUBROUTINE DETACH1STA;                                                  06669000
    IF STA.ATACHED THEN                                                 06670000
    BEGIN     %2.1                                                      06671000
    GETATTACHED1;                                                       06672000
    IF ARA!0 THEN                                                       06673000
    FOR I ~ (SIZE-1) STEP -1 UNTIL 0 DO                                 06674000
         BEGIN     %2.2                                                 06675000
         IF ARA[I]!0 THEN                                               06677000
              BEGIN     %2.3                                            06678000
              IF(A AND MASK)=TUB THEN BEGIN A~0; GO D1SXIT END;         06679000
              IF(B AND MASK)=TUB THEN BEGIN B~0; GO D1SXIT END;         06680000
              IF(C AND MASK)=TUB THEN BEGIN C~0; GO D1SXIT END;         06681000
              IF(D AND MASK)=TUB THEN BEGIN D~0; GO D1SXIT END;         06682000
              IF(E AND MASK)=TUB THEN BEGIN E~0; GO D1SXIT END;         06683000
              END;      %2.3                                            06684000
         END;      %2.2                                                 06685000
         IF FALSE THEN D1SXIT: BEGIN                                    06685500
         TUSTABYMIX[MIX]~ P(DUP,LOD)-1;                                 06685510
         TERM19USER;                                                    06685520
$INCLUDE 06686001, IF DCLOG AND DATACOM AND NOT INQUIRY;                06685999
         REMOTELOGGER(5,0,0&TUB[9:39:9],MIX);                           06686000
         FIXSTANDMAYBEHANGUPHONE END;                                %JS06686500
    END DETACH1STA;  %2.1                                               06688000
SUBROUTINE DETACHALLSTA;                                                06689000
    BEGIN     %3.1                                                      06690000
$INCLUDE 06690151, IF DCSPO AND DATACOM AND NOT INQUIRY;                06690009
    FOR I~(SIZE-1) STEP -1 UNTIL 0 DO                                   06691000
         BEGIN     %3.2                                                 06692000
         IF (TUB~A)!0 THEN BEGIN A~0; UNDO; END;                        06694000
         IF (TUB~B)!0 THEN BEGIN B~0; UNDO; END;                        06695000
         IF (TUB~C)!0 THEN BEGIN C~0; UNDO; END;                        06696000
         IF (TUB~D)!0 THEN BEGIN D~0; UNDO; END;                        06697000
         IF (TUB~E)!0 THEN BEGIN E~0; UNDO; END;                        06698000
         END;      %3.2                                                 06699000
    END DETACHALLSTA; %3.1                                              06700000
% START HERE                                                            06701000
IF MIX > MIXMAX THEN                                                    06701100
    BEGIN                                                               06701200
    FUNC~0;                                                             06701300
    GO TO EGRESS;                                                       06701400
    END;                                                                06701500
IF STA ! 0 THEN                                                         06702000
    BEGIN                                                               06703000
    STA ~ GET(STA);                                                     06704000
    TUB ~ STA.[14:4]&STA[39:9:4];                                       06705000
    END;                                                                06706000
IF FUNC>0 THEN                                                          06707000
    IF FUNC GTR 7 THEN                                                  06708000
         BEGIN                                                          06709000
         FUNC ~ 0;                                                      06709050
         GO TO EGRESS;                                                  06712000
         END                                                            06713000
    ELSE                                                                06714000
    IF FUNC!5 THEN GO TO ATTACHAREA;                                    06715000
IF STA!0 THEN                                                           06716000
    BEGIN     %2                                                        06717000
    IF MIX!0 THEN                                                       06718000
         BEGIN     %3                                                   06719000
         DETACH1STA;                                                    06720000
         END       %3                                                   06723000
    ELSE                                                                06724000
         BEGIN     %4                                                   06725000
         FOR MIX ~ 1 STEP 1 UNTIL MIXMAX DO                             06726000
              BEGIN     %5                                              06727000
              DETACH1STA;                                               06728000
              END;      %5                                              06731000
         END;      %4                                                   06732000
    END       %2                                                        06733000
ELSE                                                                    06734000
    BEGIN     %6                                                        06735000
    GETATTACHED1;                                                       06736000
    IF ARA!0  THEN                                                      06737000
         BEGIN                                                          06737100
         DETACHALLSTA;                                                  06738000
         IF FUNC=5 THEN                                                 06738100
              BEGIN                                                     06738200
              ATTACHED[MIX] ~ 0;                                        06738300
              TUSTABYMIX[MIX]~0;                                        06738310
              FORGETSPACE(ARA INX 0);                                   06738400
              END;                                                      06738600
         END;                                                           06738700
    END;      %6                                                        06739000
GO TO EGRESS;                                                           06740000
ATTACHAREA:                                                             06741000
IF FUNC THEN                                                            06742000
    BEGIN     %7                                                        06743000
    IF MX = 0 THEN                                                      06744000
    IF (MX~(MIX=0)) THEN                                                06745000
         MIX ~ 1;                                                       06746000
    GETATTACHED1;                                                       06748000
    IF ARA!0 THEN                                                       06749000
         FOR I ~ (SIZE-1) STEP -1 UNTIL 0 DO                            06751000
              BEGIN     %9                                              06752000
              IF ARA[I]!0 THEN                                          06753000
                   BEGIN     %10                                        06754000
                   IF(A AND MASK)=TUB THEN GO LABLE;                    06755000
                   IF(E AND MASK)=TUB THEN GO LABLE;                    06756000
                   IF(D AND MASK)=TUB THEN GO LABLE;                    06757000
                   IF(C AND MASK)=TUB THEN GO LABLE;                    06758000
                   IF(B AND MASK)=TUB THEN GO LABLE;                    06759000
                   END;      %10                                        06760000
              END;      %9                                              06761000
    IF  MX ! 0  THEN  IF (MIX~MIX+1){MIXMAX THEN GO TO ATTACHAREA;      06762000
    IF MIX { MIXMAX THEN                                                06762100
         IF FUNC = 3 OR FUNC = 7 THEN                                   06762200
              GO TO ATTACH;                                             06763000
    FUNC ~  0;                                                          06765000
    GO TO EGRESS;                                                       06766000
LABLE:                                                                  06767000
    STACURR ~ STACURR OR @4;                                            06768000
    FUNC  ~ STACURR;                                                    06769000
    GO  TO EGRESS;                                                      06770000
    END;      %7                                                        06771000
IF FUNC = 4 THEN                                                        06773000
    BEGIN     %11                                                       06774000
    GETATTACHED1;                                                       06775000
    IF ARA!0 THEN                                                       06776000
         BEGIN     %12                                                  06777000
         FOR I ~ (SIZE-1) STEP -1 UNTIL 0 DO                            06778000
              BEGIN     %13                                             06779000
              IF ARA[I]!0 THEN                                          06780000
                   BEGIN     %14                                        06781000
                   IF (TUB~A)!0 THEN IF RR THEN GO TO LABLL;            06782000
                   IF (TUB~B)!0 THEN IF RR THEN GO TO LABLL;            06783000
                   IF (TUB~C)!0 THEN IF RR THEN GO TO LABLL;            06784000
                   IF (TUB~D)!0 THEN IF RR THEN GO TO LABLL;            06785000
                   IF (TUB~E)!0 THEN IF RR THEN GO TO LABLL;            06786000
                   END;      %14                                        06787000
              END;      %13                                             06788000
         END;      %12                                                  06789000
    FUNC~ 0; ;GO TO EGRESS;                                             06790000
LABLL:                                                                  06791000
    FUNC ~ STACURR;                                                     06792000
    GO TO EGRESS;                                                       06793000
    END;      %11                                                       06794000
ATTACH:                                                                 06795000
IF STA = 0 THEN                                                         06796000
    GO TO EGRESS;                                                       06796100
STACURR ~ STACURR OR @4;                                                06797000
Z ~ IF FUNC=3 THEN 4  ELSE FUNC;                                        06798000
IF P(ATTACHED[MIX],TOP) THEN                                            06799000
    BEGIN     %15                                                       06800000
    IF P=0 THEN                                                         06801000
         BEGIN     %16                                                  06802000
         SIZE ~ 1;                                                      06803000
         ATTACHED[MIX] ~ 1;                                             06804000
         P(ATTACHED[MIX]~((GETSPACE(SIZE,5,TRUE)+2) INX M)              06805000
                         &SIZE[8:38:10]);                               06806000
         M[((ARA~P) INX 0)-2].[9:6] ~ 0;                                06807000
         ARA[0] ~ 0;                                                    06808000
         END       %16                                                  06809000
    ELSE                                                                06810000
         BEGIN     %16A                                                 06811000
         SLEEP([ATTACHED[MIX]],(0&1[2:47:1]));                          06812000
         ARA ~ ATTACHED[MIX];                                           06813000
         END;     % 16A                                                 06814000
    END       %15                                                       06815000
ELSE                                                                    06816000
    ARA ~ P;                                                            06817000
SIZE ~ ARA.[8:10];                                                      06819000
FOR I ~ (SIZE - 1) STEP -1 UNTIL 0 DO                                   06820000
    BEGIN     %17                                                       06821000
    IF A = 0 THEN BEGIN A ~ TUB;                                        06822000
    GO TO ABCDE;   END;                                                 06822500
    IF B = 0 THEN BEGIN B ~ TUB;                                        06823000
    GO TO ABCDE;  END;                                                  06823500
    IF C = 0 THEN BEGIN C ~ TUB;                                        06824000
    GO TO ABCDE;  END;                                                  06824500
    IF D = 0 THEN BEGIN D ~ TUB;                                        06825000
    GO TO ABCDE;  END;                                                  06825500
    IF E = 0 THEN BEGIN E ~ TUB;                                        06826000
    GO TO ABCDE; END;                                                   06826500
    END;      %17                                                       06828000
    M[T1~GETSPACE(SIZE+1,5,TRUE)].[9:6]~0;                              06828100
    T1 ~ T1 + 2;                                                        06828200
    IF ATTACHED[MIX].[8:10]= SIZE THEN                                  06829000
         BEGIN     %18                                                  06830000
    MOVE(SIZE,ARA~ATTACHED[MIX] INX 0,T1); %RESTART MAY HAVE MOVED IT.  06831000
         FORGETSPACE(ARA);                                              06832000
         SIZE ~ SIZE + 1;  I ~ SIZE - 1;                                06833000
         M[T1 + (SIZE-1)] ~ 0;                                          06834000
         ATTACHED[MIX] ~ ARA ~ (T1 INX MEMORY)&SIZE[8:38:10];           06835000
         A~TUB;                                                         06836000
              GO TO ABCDE ;%                                            06837000
         END       %18                                                  06838000
    ELSE                                                                06839000
         BEGIN     %19                                                  06840000
         FORGETSPACE(T1);                                               06841000
         GO TO ATTACH;                                                  06842000
         END;      %19                                                  06843000
ABCDE:   TUSTABYMIX[MIX]~ P(DUP,LOD)+1;                                 06843100
$ INCLUDE 06843301, IF DCLOG AND DATACOM AND NOT INQUIRY;               06843200
              REMOTELOGGER(Z,0,0&TUB[9:39:9],MIX);                      06843300
EGRESS:                                                                 06844000
END TACH;     %1                                                        06845000
% * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *%JS06845900
$INCLUDE 06889999, IF DCLOG AND DATACOM AND NOT INQUIRY;                06845999
         PROCEDURE REMOTELOGGER(TYPE,RMCARD,STA,MIX);                %JS06846000
         VALUE TYPE,RMCARD,STA,MIX; REAL TYPE,RMCARD,STA,MIX;        %JS06846100
%* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * %JS06846200
    COMMENT PROCEDURE REMOTE LOGGER UPDATES REMOTE LOG ACCRD TO      %JS06846300
         VALUE OF TYPE WHERE                                         %JS06846400
              TYPE=1 THEN LOG-OTU ENTRY,                             %JS06846500
              TYPE=2 THN LOG-IN ENTRY,                               %JS06846600
              TYPE=3 THEN EXECUTE OR RUN ENTRY,                      %JS06846700
              TYPE=4 OBJECT PROGRAM(MIX) DID WRITE OR READ SEEK ON      06846800
                STATION,                                                06846900
              TYPE=5 DETACH STATION FROM MIX(S),                     %JS06847000
              TYPE=6 THEN ALGOL OR COBOL INTERROGATE,                %JS06847100
              TYPE=7 XEQ OR RUN CARD ENTERED AT REMOTE STATION CAUSED   06847110
                ATTACH,                                                 06847120
              TYPE=8 STATION 0/0 DETACHING,                             06847130
              RMCARD=ADDRESS OF CONTROL CARD OR OTHER INFORMATION    %JS06847200
                   PASSED TO ROUTINE,                                %JS06847300
              STA.[9:9]=REMTOE TU & BU,                              %JS06847400
              MIX=MIX INDEX OF JOB;                                  %JS06847500
         BEGIN                                                       %JS06847600
    LABEL L0,L1,L2,L3,L4,L5,L6,L7,L8,L9,OWT;                         %JS06847700
    LABEL XITREADLOG,STAZROTIME,LX,LINKUP,NND,DTACH,ENDOFLOG;           06847900
    SWITCH WICHWAY~L0,L1,L2,L3,L4,L5,L6,L7,L8,L9,OWT;                %JS06848000
    INTEGER SEGNUM,WORDNUM,WICHSEG,SEGAREA,CORAREA;                     06848100
    REAL T,RQ1,TEMP1,TEMP2,TEMPLOG=CORAREA,F=SEGAREA,TEMP=TEMP1,OLDSTA= 06848200
      TEMP2,MSG=TEMP2,LIO;BOOLEAN FIRSTIMETACH,LASTIMETACH;             06848300
    INTEGER I=TEMP1,J=TEMP2;                                            06848400
    NAME A = LIO, B= TEMP;                                              06848500
SUBROUTINE LOGFULL;                                                  %JS06848600
BEGIN%LOG-WRAP                                                       %JS06848700
     ;STREAM(MSG~MSG~GETSPACE(3,0,0)+2);                             %JS06848800
         BEGIN                                                       %JS06848900
         DS~17 LIT "#REMOTE/LOG FULL~";                                 06849000
         END;                                                        %JS06849100
    SPOUT(0&MSG[33:33:15]);                                          %JD06849200
END LOGFULL;                                                         %JS06849300
SUBROUTINE LOGHALFULL;                                               %JS06849400
BEGIN%LOG-HALF FULL                                                  %JS06849500
    ;STREAM(MSG~MSG~GETSPACE(3,0,0)+2);                              %JS06849600
         BEGIN                                                       %JS06849700
         DS~17 LIT "#DUMP REMOTE/LOG~";                                 06849800
         END;                                                        %JS06849900
    SPOUT(0&MSG[33:33:15]);                                          %JS06850000
END LOGHALFULL;                                                      %JS06850100
         SUBROUTINE MAKELIOENTRY;                                    %JS06850200
         BEGIN                                                       %JS06850300
              M[WICHSEG+WORDNUM]~LIO&STA[9:9:9];%CODE-WORD LOGIN     %JS06850400
              M[WICHSEG+WORDNUM+1]~RMCARD;                              06850500
              M[WICHSEG+WORDNUM+2]~DATE;%                            %JS06850600
              M[WICHSEG+WORDNUM+3]~XCLOCK+P(RTR);                    %JS06850700
              M[WICHSEG+WORDNUM+4]~@14;%UNUSED WORD LOG IN OUT       %JS06850800
         END MAKELIOENTRY;                                           %JS06850900
%   LOG TYPE-REMOTE SYSTEM                                           %JS06851000
SUBROUTINE READLOG;                                                     06851100
BEGIN                                                                %JS06851200
         CORAREA~GETSPACE(30,0,0)+2;                                 %JS06852500
         DISKWAIT(-CORAREA,-30,SEGLOC);                                 06852600
         TEMP ~ ((M[CORAREA]+1) MOD M[CORAREA +1]) | 5;                 06852800
         SEGNUM~TEMP DIV 30; WORDNUM~TEMP MOD 30;                    %JS06852900
         SEGAREA~GETSPACE(30,0,0)+2;%GET AREA FOR BUILDING RECORD    %JS06853000
         WICHSEG~IF SEGNUM=0 THEN CORAREA ELSE SEGAREA;              %JS06853100
         IF SEGNUM=0 AND WORDNUM=0 THEN WORDNUM~5;%CANT RITE REC 0   %JS06853200
         IF SEGNUM=0 OR WORDNUM=0 THEN%NO NEED TO READ ARECORD       %JS06853300
         GO TO XITREADLOG;                                           %JS06853400
         DISKIO(T,1-SEGAREA,30,SEGLOC+SEGNUM);%READ THE RECORD       %JS06853500
         SLEEP([T],IOMASK);                                          %JS06853600
XITREADLOG:                                                          %JS06853800
END READLOG;                                                         %JS06854000
SUBROUTINE WRITELOG;%WRITE FINAL RECORD INTO LOG FOR THIS ENTRY      %JS06854100
BEGIN                                                                %JS06854200
    IF SEGNUM!0 THEN                                                 %JS06854300
         BEGIN                                                       %JS06854400
         DISKIO(T,SEGAREA-1,30,SEGLOC+SEGNUM);%WRITE REC.            %JS06854500
         SLEEP([T],IOMASK);% ON DISK                                 %JS06854600
         END;                                                        %JS06854700
    IF(M[CORAREA]~(M[CORAREA]+1) MOD (M[CORAREA+1]-1))=M[CORAREA+1]     06854800
      DIV 2 THEN LOGHALFULL                                             06854900
    ELSE IF M[CORAREA]=0 THEN                                           06855000
         LOGFULL;                                                    %JS06855100
    DISKWAIT(CORAREA,-30,SEGLOC);                                       06855200
END WRITELOG;                                                        %JS06855400
SUBROUTINE UPDATELOG;                                                %JS06858400
BEGIN                                                                %JS06858500
    IF (M[CORAREA]~(M[CORAREA]+1) MOD (M[CORAREA+1]-1))=0 THEN          06858600
         BEGIN                                                       %JS06858700
         DISKIO(T,SEGAREA-1,30,SEGLOC+SEGNUM);                       %JS06858800
         SLEEP([T],IOMASK);                                          %JS06858900
         SEGNUM~0; WORDNUM~5;                                        %JS06859000
         LOGFULL;                                                    %JS06859050
         END                                                         %JS06859100
    ELSE                                                             %JS06859200
         BEGIN                                                       %JS06859300
         IF M[CORAREA]=M[CORAREA+1] DIV 2 THEN LOGHALFULL;           %JS06859400
         IF (WORDNUM~(WORDNUM+5) MOD 30)=0 THEN%AT END OF SEGMENT    %JS06859600
         BEGIN                                                       %JS06859700
         IF SEGNUM!0 THEN%IF NOT IN ZROTH SEGNENT THEN WRITE         %JS06859800
              BEGIN     %DISK BEFORE UPDATING                        %JS06859900
              DISKIO(T,SEGAREA-1,30,SEGLOC+SEGNUM);                  %JS06860000
              SLEEP([T],IOMASK);                                     %JS06860100
              END;                                                   %JS06860200
         SEGNUM~SEGNUM+1;%POINT TO NEXT SEGMENT                      %JS06860300
         END                                                         %JS06860400
         END;                                                        %JS06860500
    WICHSEG~IF SEGNUM=0 THEN CORAREA ELSE SEGAREA;                   %JS06860510
END   UPDATELOG;                                                     %JS06860600
SUBROUTINE IDLETIMER;%UPDATES IDLETIME FOR REMOTE SOP                %JS06860700
BEGIN                                                                %JS06860800
    IF ASIGNEDIDLETIME[MIX]=@2003777777777777 THEN                   %JS06860900
         A[6]~                                                          06860910
         ASIGNEDIDLETIME[MIX]~JAR[MIX,7]                             %JS06861000
    ELSE BEGIN                                                       %JS06861100
         A[6]~A[6]+JAR[MIX,7]-ASIGNEDIDLETIME[MIX];                  %JS06861200
         ASIGNEDIDLETIME[MIX]~JAR[MIX,7];                            %JS06861300
         END;                                                        %JS06861400
END IDLETIMER;                                                       %JS06861500
SUBROUTINE STATIONTIMER;%UPDATES PROCESSOR TIMES FOR JOB PERFORMING  %JS06861600
BEGIN    %STATUS ON THE REMOTE SPO                                   %JS06861700
                   TEMP~PROCTIME[MIX]+JAR[MIX,3];                    %JS06861800
                   TEMP~IF LASTIMETACH OR NOT(P1MIX=MIX OR P2MIX=MIX)   06861810
                          THEN TEMP ELSE TEMP+CLOCK+P(RTR);             06861820
                   IF ASIGNEDPROCTIME[MIX]=@2003777777777777 THEN    %JS06861900
                        BEGIN                                        %JS06862000
                        A[5]~                                           06862010
                        ASIGNEDPROCTIME[MIX]~TEMP;                   %JS06862100
                        END                                          %JS06862200
                   ELSE BEGIN                                        %JS06862300
                        A[5]~A[5]+TEMP-ASIGNEDPROCTIME[MIX];         %JS06862400
                        ASIGNEDPROCTIME[MIX]~TEMP;                   %JS06862500
                        END;                                         %JS06862600
                   IF FIRSTIMETACH THEN USERSTA[MIX]~0 ELSE          %JS06862700
                   USERSTA[MIX]~RQ1 AND @75700000000;                   06862800
END STATIONTIMER;                                                    %JS06862900
SUBROUTINE IOTIMER;                                                  %JS06863000
BEGIN                                                                %JS06863100
         TEMP~IOTIME[MIX]+JAR[MIX,4];                                %JS06863200
         WHILE TEMP<0 DO TEMP~TEMP+CLOCK+P(RTR);                     %JS06863300
      IF ASIGNEDIOTIME[MIX]=@2003777777777777 THEN                   %JS06863400
         A[7]~                                                          06863410
         ASIGNEDIOTIME[MIX]~TEMP                                     %JS06863500
    ELSE BEGIN                                                       %JS06863600
         A[7]~A[7]+TEMP-ASIGNEDIOTIME[MIX];                          %JS06863700
         ASIGNEDIOTIME[MIX]~TEMP;                                    %JS06863800
         END;                                                        %JS06863900
END IOTIMER;                                                         %JS06864000
SUBROUTINE DETACHENTRY;                                              %JS06864100
BEGIN%STATION DETACHED-ENTR INFO. INTO REMOTE LOG                    %JS06864200
        ;STREAM(BCD~[DATE],BIN~[TEMP]);%THEN FIX-UP A[8]             %JS06864700
              BEGIN                                                  %JS06864800
              SI~BCD; SI~SI+3; DS~ 5 OCT;                            %JS06864900
              END;                                                   %JS06865000
         A[8]~0&A[10][3:3:21]&TEMP[27:27:21];%STARTDATE,STOPDATE     %JS06865100
    FOR I~0 STEP 1 UNTIL 1 DO                                        %JS06865300
         BEGIN                                                       %JS06865400
         FOR J~I|5+1 STEP 1 WHILE J!(I+1)|5+1 DO %COMPUTE DO LMTS    %JS06865500
              M[WICHSEG+WORDNUM+J-(5|I+1)]~A[J];                     %JS06865600
         IF I=0 THEN                                                 %JS06865700
              BEGIN                                                  %JS06865800
              M[WICHSEG+WORDNUM]~5&A[0][9:15:9]&A[10][18:24:24]&     %JS06865900
              A[1][2:2:1];%DIAL IN RUN NUM,STA,&FLAG WHO ATACHED     %SJ06865910
              UPDATELOG;                                             %JS06866000
              END                                                    %JS06866100
         ELSE BEGIN M[WORDNUM+WICHSEG+4]~XCLOCK+P(RTR);M[CORAREA+2]~1;  06866200
         WRITELOG; END; END;      %FLAG DETACH LAST UPDATED REMOTE LOG  06866300
END DETACHENTRY;                                                     %JS06866400
%REMOTE STATION DETACHED FROM OBJECT PROGRAM-REMOVE FROM QUEUE          06866500
SUBROUTINE DELINKER;                                                 %JS06866600
BEGIN                                                                %JS06866700
%DLINK ENTRY IF PRESENT AND WRITE LOG INFORMATION ON THE DISK        %JS06866800
    IF RQ1.[15:9] =USERSTA[MIX].[15:9] THEN                             06866900
         BEGIN                                                       %JS06867000
         IF P(RQONE,RQ1,LLL,.A,STD).[9:15]=RQ1.[9:15] THEN           %JS06867100
              BEGIN                                                  %JS06867200
              FIRSTIMETACH~TRUE;STATIONTIMER;IOTIMER;IDLETIMER;      %JS06867300
              FIRSTIMETACH~FALSE;                                    %JS06867400
DTACH:        DETACHENTRY;%MAKE ENTRIES IN THE REMOTE LOG            %JS06867500
              %DELINK CURRENT ENTRY                                  %JS06867600
              M[A[0]+1].[CF]~A[1];                                      06867700
              M[A[1]].[CF]~A[0].[CF];                                %JS06867800
              FORGETSPACE(A INX 1);                                  %JS06867900
              END                                                    %JS06868000
         ELSE USERSTA[MIX]~0;                                        %JS06868100
         END                                                         %JS06868200
    ELSE BEGIN                                                       %JS06868300
         IF P(RQONE,RQ1,LLL,.A,STD).[9:15]=RQ1.[9:15] THEN           %JS06868400
         GO DTACH                                                    %JS06868500
         END;                                                        %JS06868600
END DELINKER;                                                        %JS06868700
SUBROUTINE MAKEXEQORUN;%MAKE EXECUTE OR RUN ENTRY IN REMOTE LOG      %JS06869400
BEGIN    %LOG                                                        %JS06869500
    FOR I~0 STEP 1 UNTIL 1 DO                                        %JS06869600
         BEGIN                                                       %JS06869700
         FOR J~I|5 STEP 1 WHILE J!(I+1)|5 DO%COMPUTE DO LMTS         %JS06869800
              M[WICHSEG+WORDNUM+J-I|5]~M[RMCARD INX J];              %JS06869900
         IF I=0 THEN                                                 %JS06870000
              BEGIN                                                  %JS06870100
              M[WICHSEG+WORDNUM]~STA&3[42:42:6];                     %JS06870200
              STREAM(LIO~0:RMCARD);                                  %JS06870300
              BEGIN                                                  %JS06870400
                   SI~RMCARD;                                        %JS06870500
                   SI~SI+8;                                          %JS06870510
                   32(IF SC!"~" THEN SI~SI+1 ELSE                    %JS06870600
                        BEGIN                                        %JS06870700
                        TALLY~1; LIO~TALLY; JUMP OUT; END);          %JS06870800
              END;                                                   %JS06870900
              LIO~P;                                                 %JS06871000
              IF LIO=1 THEN                                          %JS06871100
                   BEGIN                                             %JS06871200
                   P(DEL); WRITELOG; GO TO NND;                      %JS06871300
                   END                                               %JS06871400
              ELSE BEGIN                                             %JS06871500
                   M[WICHSEG+WORDNUM]~STA&4[42:42:6]; UPDATELOG;     %JS06871600
                   END;                                              %JS06871700
              END                                                    %JS06871800
         ELSE WRITELOG;%MAKE FINAL LOG-ENTRY                         %JS06871900
         END;                                                        %JS06872000
END MAKEXEQORUN;                                                     %JS06872100
SUBROUTINE STATIONTACHING;                                           %JS06872200
BEGIN                                                                %JS06872300
         IF P(RQONE,TEMP1~0&MIX[10:43:5],LLL,.A,STD).[9:15]!         %JS06872400
              TEMP1.[9:15] THEN BEGIN                                %JS06872500
              TEMPLOG~GETSPACE(10,0,0)+2;                            %JS06872600
              FIRSTIMETACH~TRUE; TEMP2~RQ1; RQ1~TEMP1; GO LINKUP;       06872700
STAZROTIME:   RQ1~TEMP2;                                                06872800
              END;                                                      06872900
    IF P(RQONE,RQ1,LLL,.A,STD).[9:15]!RQ1.[9:15] THEN                %JS06873500
         BEGIN                                                       %JS06873600
         TEMPLOG~GETSPACE(10,0,0)+2;                                 %JS06873700
LINKUP:                                                              %JS06873900
         M[TEMPLOG]~A[1].[CF];    %LINK NEW BLOCK TO BACK LINK       %JS06874100
         M[F~TEMPLOG-1]~M[A[1]]&RQ1[9:9:15];%FIX UP NEW LINK         %JS06874200
         M[A[1]].[CF]~F.[33:15];%LINK FORWARD AND BACK BLOCKS        %JS06874300
         M[F-1]~M[F-1]&0[9:42:6];                                    %JS06874400
         A[1].[CF]~F;            % TO NEW LLINK                         06874500
         A~F INX MEMORY;%CONSTRUCT DESCRIPTOR FOR A                  %JS06874600
         A[0]~A[0]&RQ1[9:9:15];%DIAL N STA&MIX FOR THIS LINK         %JS06874700
         IF TYPE=7 AND NOT FIRSTIMETACH THEN%IF XEQ ORRUN CAUSES     %JS06874710
              A[1]~A[1]&1[2:47:1];%ATTACH THEN FLAG THE NTRY         %JS06874720
    A[2] ~ IF P(LOOKQ,0&RQ1[9:15:9],LLL,.B,STD).[9:9] =                 06874900
      RQ1.[15:9] THEN B[1] ELSE @37456443433760;                        06875000
         A[3]~JAR[MIX,0];A[4]~JAR[MIX,1];%OBJ. PROG UST & 2ND NAME   %JS06875100
         A[5]~0;%SET PROCESSOR TIME TO 0 JOB STARTING                %JS06875200
         A[6]~0;%DITTO FOR IDLE TIME                                 %JS06875300
         A[7]~0;%IOTIME                                              %JS06875400
         A[8]~DATE;%CURRENT DATE                                     %JS06875500
         A[9]~XCLOCK+P(RTR);%ATTACH TIME                             %JS06875600
         A[10]~JAR[MIX,5];    %START TIME FOR JOB                    %JS06875700
         IF FIRSTIMETACH THEN                                        %JS06875800
              BEGIN%INITIALIZE                                       %JS06875900
              STATIONTIMER; IOTIMER;                                 %JS06876000
              IDLETIMER;                                             %JS06876100
              FIRSTIMETACH~FALSE; GO TO STAZROTIME END;              %JS06876200
         END;                                                        %JS06876500
END STATIONTACHING;                                                  %JS06876600
SUBROUTINE DCNTEROGATE;%UPDATES PROCESSOR,PRO-RATED&IOTIME ON STATUS %JS06876700
%FOR CURRENT USER THEN MARKS NEW USER FOR STATION                    %JS06876800
BEGIN                                                                %JS06876900
         IF P(RQONE,OLDSTA~USERSTA[MIX]&MIX[10:43:5],LLL,               06877000
           .A,STD).[9:15]=OLDSTA.[9:15] THEN                            06877100
              BEGIN                                                  %JS06877200
              STATIONTIMER;%UPDATE PROR,PROC&I/OTIMES FOR OLD STA    %JS06877300
              IDLETIMER;                                             %JS06877400
              IOTIMER;                                               %JS06877500
              END%IF USER NOT LINKED IN THEN ASIGN USER 0            %JS06877600
         ELSE USERSTA[MIX]~0;                                           06877700
END DCNTEROGATE;                                                     %JS06878100
    IF SPOEDNULLOG THEN GO TO OWT;%IF LOG ISNT PRESENT THEN XIT         06878110
    IF NOT REMOTELOGFREE THEN SLEEP([TOGLE],REMOTELOGMASK);             06878120
    REMOTELOGFREE~FALSE;                                                06878200
    RQ1~0&MIX[9:42:6]&STA[15:9:9];                                      06878300
         GO TO WICHWAY[TYPE];                                        %JS06878400
L0:L1:%LOG-OUT ENTRY                                                 %JS06878500
         LIO~1;%LOGOUT ENTRY                                         %JS06878600
         GO TO LX;                                                   %JS06878700
L2:      %LOG-IN ENTRY                                               %JS06878800
         LIO~2;%LOGIN ENTRY                                          %JS06878900
LX:      READLOG;                                                       06879000
         MAKELIOENTRY;WRITELOG;%JAKE LOG ENTRY-RITE ONDISK           %JS06879100
         GO TO NND;                                                  %JS06879200
L3:      %EXECUTE OR RUN ENTYR                                       %JS06879300
         READLOG;                                                       06879400
         MAKEXEQORUN;%MAKE THE EXECUTE OR RUN ENTRY IN THE REMOTE LOG%JS06879500
         GO TO NND;                                                  %JS06879600
L4:      %TYPE=4 STATION ATTACHED BECAUSE OF READ SEEK OR WRITE         06879700
L7:      %TYPE=7 XEQ OR RUN CARD ENTERED AT STATION CAUSED ATTACH       06879710
         STATIONTACHING; UPDATEABORTLN(0); GO OWT;                      06879720
L5:      READLOG;                                                       06879800
         DELINKER; UPDATEABORTLN(1); GO TO NND;                         06879900
L6:%ALGOL OR COBOL DATA COM INTERROGATE                              %JS06881000
    DCNTEROGATE; GO TO OWT;                                             06881100
L8: LASTIMETACH~TRUE; GO TO L5;%STATION 0 DETACHNG                   %JS06881210
L9:GO TO OWT;                                                        %JS06881300
NND:                                                                 %JS06881400
         FORGETSPACE(SEGAREA);                                       %JS06881700
         FORGETSPACE( CORAREA);                                      %JS06881800
OWT:                                                                 %JS06881900
    REMOTELOGFREE ~ TRUE;                                               06881950
END REMOTELOGGER;                                                    %JS06882000
DEFINE KLUMP=@174#;% @173 IS RESERVED FOR THE DISK ADDRESS              07000000
COMMENT LASTCDNUM, FIRSTDECK, AND LASTDECK ARE STORED IN THE            07000010
        FIRST THREE WORDS OF THE DISK SEGMENT LOCATED AT DIRECTORYTOP   07000015
        +3. IN A NON SHARED DISK SYSTEM, THEY ARE WRITTEN OUT EACH      07000020
        TIME ONE OF THEM IS CHANGED SO THAT THEY WILL BE PRESERVED      07000025
        IF A HALT/LOAD OCCURS. IN A SHARED DISK SYSTEM, THEY ARE        07000030
        READ INTO THE PRT WITH A READ-LOCK COMMAND EACH TIME THEY ARE   07000035
        USED. THIS PROVIDES CONTROL DECK INTERLOCKING BETWEEN SYSTEMS   07000040
        IN ADDITION TO PASSING THE INFORMATION BETWEEN SYSTEMS.         07000045
END COMMENT;                                                            07000050
INTEGER LASTCDNUM=@174;                                                 07000100
REAL FIRSTDECK=@175;                                                    07000200
REAL LASTDECK=@176;                                                     07000300
DEFINE LOCKCONTROLDECKS=BEGIN SLEEP([TOGLE],CDMASK);CDFREE:=0;          07001000
$ INCLUDE 07001101, IF SHAREDISK;                                       07001099
         DISKWAIT(-KLUMP,-3,DIRECTORYTOP+3);                            07001100
    END#,                                                               07001200
    UNLOCKCONTROLDECKS=BEGIN                                            07001300
$ INCLUDE 07001401, IF SHAREDISK;                                       07001399
         DISKWAIT(KLUMP,-3,DIRECTORYTOP+3);                             07001400
         CDFREE:=1 END#;                                                07001500
PROCEDURE STARTADECK(N); VALUE N; REAL N; FORWARD;                      07002000
PROCEDURE ENTERCONTROLDECK(H); VALUE H; ARRAY H[*]; FORWARD;            07002100
 REAL RUNUMBER;%                                                        07003000
 PROCEDURE COM23;%                                                      07004000
    BEGIN%                                                              07005000
    REAL INBUFF,OUTBUFF,RESERVE,FIRSTCARD,OUTBUFFOLD;%                  07006000
    REAL T,T1,T2,N,L,Q,R,IU,OU,FIRST,S;%                                07007000
    INTEGER A,I;%                                                       07008000
    REAL D;                                                             07008100
    LABEL AGAIN,INL,ERROR,SUPER,BOMB,EXIT;%                             07009000
    ARRAY FPB[*],H[*];%                                                 07010000
    SUBROUTINE STOP;%                                                   07011000
         BEGIN IF S ! 18 THEN%                                          07012000
                   BEGIN READY ~ NOT(Q ~ TWO(S)) AND READY;%            07013000
                        RRRMECH ~ NOT Q AND RRRMECH OR Q AND SAVEWORD;% 07014000
                        LABELTABLE[S] ~ @114;%                          07015000
                        RDCTABLE[S] ~ MULTITABLE[S] ~ 0%                07016000
                   END;%                                                07017000
              FPB[T+1]~ *P(DUP)+CLOCK+P(RTR);%                          07018000
              FPB[T].[24:12] ~ TINU[S].[18:12];%                        07019000
              TINU[S].[18:12]:=0;                                       07020000
         END;%                                                          07021000
    SUBROUTINE FORGETIT;%                                               07022000
         BEGIN T1 ~ H[9]+9;%                                            07023000
              FOR T2 ~ 10 STEP 1 UNTIL T1 DO%                           07024000
                   FORGETUSERDISK(H[T2],-H[8]);                         07025000
         END;%                                                          07026000
    SUBROUTINE BOMBTIME;%                                               07027000
         BEGIN IF STOPJOB=P1MIX THEN STOPM(FALSE);                   %ST07028000
              IF TERMIX.[CF]=P1MIX THEN GO BOMB; END;                %ST07028100
    BOOLEAN SUBROUTINE ENDCARD;%                                        07029000
         BEGIN IF Q THEN%                                               07030000
                   BEGIN M[INBUFF+9] ~ 0&"."[1:43:5];%                  07031000
                        STREAM(X~"END":INBUFF);%                        07032000
                             BEGIN SI ~ INBUFF;%                        07033000
                             L:   SI ~ SI+1; IF SC = " " THEN GO TO L;% 07034000
                                  DI ~ LOC X; DI ~ DI+5;%               07035000
                                  IF 3 SC = DC THEN TALLY ~ 1;%         07036000
                                  X ~ TALLY;%                           07037000
                             END;%                                      07038000
                   END ELSE P(0);%                                      07039000
              ENDCARD ~ P;%                                             07040000
         END;%                                                          07041000
    REAL SUBROUTINE ADR;%                                               07042000
         BEGIN IF (T2 ~ H[(T1 ~ R DIV 200)+10]) = 0 THEN%               07043000
                   BEGIN H[9] ~ T1+1;%                                  07044000
                        H[T1+10] ~ T2 ~ GETUSERDISK(200);%              07045000
                   END;%                                                07046000
              ADR ~ R MOD 200+T2%                                       07047000
         END;%                                                          07048000
    SUBROUTINE INPUT;%                                                  07049000
         BEGIN%                                                         07050000
              IF IU < 16 THEN%                                          07051000
                   BEGIN IF FIRST THEN%                                 07052000
                                  T ~ WAITIO(@140000000  +  INBUFF,%    07053000
                                       @40,IU);%                        07054000
                        T ~ WAITIO(@120540000000  +  INBUFF,%           07055000
                             @2000000,IU);%                             07056000
                        Q ~ M[INBUFF-1]=9;%                             07057000
                   END%                                                 07058000
              ELSE BEGIN WHILE(Q~WAITIO(@40000000+INBUFF,FIRST|4+       07059000
                             @4000000,IU)).[45:1] DO                    07059100
                        BEGIN SLEEP([TOGLE],STATUSMASK);                07059200
                             RRRMECH~RRRMECH AND NOT Q~TWO(IU);         07059300
                             READY~READY AND NOT Q;                     07059400
                             SLEEP([READY],Q);                          07059500
                        END;                                            07060000
                        IF Q ~ Q ! 0 THEN                               07061000
                             BEGIN IOQUE[S~(T~UNIT[IU]).[18:15]]~       07062000
                                       IOQUEAVAIL;%                     07063000
                                  IOQUEAVAIL ~ S+1;%                    07064000
                                  UNIT[IU] ~ T&@77777[5:20:28];         07065000
                             END;%                                      07066000
                        T ~ 0;%                                         07067000
                   END;%                                                07068000
         END;%                                                          07069000
              FPB ~ PRT[P1MIX,3];%                                      07070000
 %  SET UP INPUT VARIABLES%                                             07071000
              IU~FINDINPUT("CONTROL","DECK   ",0,0,0,0,0,0,0,0);        07072000
              IF IU<0 THEN GO INITIATE;   %BEEN DS-ED                   07072100
              STARTIMING(0,IU);                                         07073000
              IF OPNMESS THEN FILEMESS(" IN "&TINU[IU][6:30:18],0,      07074000
                   "CONTROL","DECK   ",0,0,0);                          07074100
              RDCTABLE[IU].[8:6] ~ P1MIX;%                              07075000
              IF IU LSS 16 THEN BEGIN%                                  07076000
                   FPB[3].[23:1]:=1; %SET INPUT FLAG FOR LOG            07076010
                   T ~ WAITIO(@540000005,0,IU)%                         07077000
                   END%                                                 07077010
              ELSE IF IU = 23 THEN%                                     07078000
                   BEGIN FORGETSPACE(READERA-2);%                       07079000
                        READERA ~ 0;%                                   07080000
                   END%                                                 07081000
              ELSE IF IU = 24 THEN%                                     07082000
                   BEGIN FORGETSPACE(READERB-2);%                       07083000
                        READERB ~ 0;%                                   07084000
                   END;%                                                07085000
              INBUFF ~ GETSPACE(11,0,1) + 2;                            07086000
              FIRSTCARD ~ GETSPACE(10,0,1)+2;%                          07087000
 %  SET UP OUTPUT VARIABLES%                                            07088000
              IF PRT[P1MIX,@25] THEN%                                   07089000
                   BEGIN OU ~ LABELASCRATCH(T ~%                        07090000
                             TAPELABEL("CONTROL","DECK   ",1,1,100));%  07091000
                        IF OU<0 THEN GO INITIATE;   %BEEN DS-ED         07091100
                        FORGETSPACE(T);%                                07093000
                        FPB[3].[23:1]:=0; %SET OUTPUT FLAG FOR LOG      07093010
                   END%                                                 07094000
              ELSE BEGIN OUTBUFFOLD ~ OUTBUFF ~ GETSPACE(60,0,1)+2;%    07095000
                        RESERVE ~ GETSPACE(30,0,1)+2;%                  07096000
                        H ~ [M[GETSPACE(30,0,1)+2]]&30[8:38:10];%       07097000
                        OU ~ 18;%                                       07098000
                   END;%                                                07103000
              STARTIMING(5,OU);                                         07104000
 %  BEGIN ONE DECK%                                                     07106000
    AGAIN:    OUTBUFF ~ OUTBUFFOLD;%                                    07107000
              L ~ N ~ 0;%                                               07108000
              FIRST ~ D ~ 1;                                            07109000
              IF OU = 18 THEN%                                          07110000
                   BEGIN H[ 9] ~ 0;%                                    07111000
                        MOVE(20,[H[9]],[H[10]]);                        07112000
                        H[8]~200;                                       07112100
              END;%                                                     07113000
 %  BEGIN ONE CARD%                                                     07114000
    INL:      INPUT;%                                                   07115000
              IF FIRST THEN%                                            07116000
                   BEGIN FIRST ~ FALSE;%                                07117000
                        MOVE(10,INBUFF,FIRSTCARD);%                     07118000
                   END;%                                                07119000
              IF T ! 0 THEN GO TO ERROR;%                               07120000
              BOMBTIME;%                                                07121000
              IF OU < 16 THEN%                                          07122000
                   BEGIN T ~ WAITIO(INBUFF&@5000[18:33:15]&(10-Q)%      07123000
                             [8:38:10],0,OU);%                          07124000
                        IF NOT ENDCARD THEN GO TO INL;%                 07125000
                        M[INBUFF-1] ~ @1737000000000000;%               07126000
                        T ~ WAITIO(INBUFF-1,0,OU);%                     07127000
    SUPER::             STREAM(X~"CONTROL":INBUFF);%                    07128000
                             BEGIN SI ~ INBUFF;%                        07129000
                             E:   IF SC ! "E" THEN%                     07130000
                                       BEGIN SI ~ SI+1; GO TO E END;%   07131000
                                  SI ~ SI+3;%                           07132000
                             L:   IF SC = " " THEN%                     07133000
                                       BEGIN SI ~ SI+1; GO TO L END;%   07134000
                                  DI ~ LOC X; DI ~ DI+1;%               07135000
                                  IF 7 SC = DC THEN X ~ TALLY;%         07136000
                             END;%                                      07137000
                        IF P ! 0 THEN GO TO AGAIN ELSE GO TO EXIT;%     07138000
                   END;%                                                07139000
              IF D = 0 THEN SLEEP([D],NOT 0);                           07139500
              MOVE(10,INBUFF,OUTBUFF);%                                 07140000
              IF Q THEN%                                                07141000
                   BEGIN IF L DIV 6 ! N DIV 6 THEN%                     07142000
                             BEGIN R ~ L DIV 3;%                        07143000
                                  A ~ ADR;%                             07144000
                                  DISKIO(T,1-RESERVE,30,A);%            07145000
                                  SLEEP([T],IOMASK);%                   07146000
                                  M[I~L MOD 3|10+9+RESERVE] ~ N;%       07147000
                                  DISKIO(T,RESERVE-1,30,A);%            07148000
                                  SLEEP([T],IOMASK);%                   07149000
                             END%                                       07150000
                        ELSE M[I ~(L-N)|10+9+OUTBUFF] ~ N;%             07151000
                        L ~ M[OUTBUFF+9] ~ N;%                          07152000
                   END;%                                                07153000
              IF N = 12000 THEN%                                        07154000
                   BEGIN T ~ GETSPACE(14,0,0)+2;%                       07155000
                        STREAM(FIRSTCARD,T);                            07156000
                             BEGIN DS ~ 32 LIT%                         07157000
                                    "#MORE THAN 12000 CARDS IN       "; 07158000
                                    SI~FIRSTCARD;DS~9WDS;DS~LIT "~";    07159000
                             END;%                                      07160000
                        SPOUT(T); GO TO BOMB;%                          07161000
                   END;%                                                07162000
              IF (N ~ N+1) MOD 6 = 0 THEN%                              07163000
                   BEGIN R ~ N DIV 3-2;%                                07164000
                        A ~ ADR;%                                       07165000
                        OUTBUFF ~ OUTBUFFOLD;%                          07166000
                        DISKIO(D,OUTBUFF-1,60,A);                       07167000
                   END ELSE OUTBUFF ~ OUTBUFF+10;%                      07169000
              IF NOT ENDCARD THEN GO TO INL;%                           07170000
              IF D = 0 THEN SLEEP([D],NOT 0);                           07171000
              OUTBUFF ~ OUTBUFFOLD;%                                    07173000
              R ~ N DIV 6|2;%                                           07174000
              A ~ ADR;%                                                 07175000
              IF N MOD 6 ! 0 THEN                                       07175100
              BEGIN                                                     07175200
              DISKIO(T,OUTBUFF-1,60,A);%                                07176000
              SLEEP([T],IOMASK);%                                       07177000
              END;%                                                     07178000
              IF R+2 < 200 THEN                                         07178100
                   BEGIN H[8] ~ R+2;                                    07178200
                        FORGETUSERDISK(A+2,R-198);                      07178300
                   END;                                                 07178400
              H[7]~N-1;                                                 07179000
              H[5]:= -0;                                                07179100
              H[4]:=H[6]:=0;                                            07179200
              ENTERCONTROLDECK(H);                                      07180000
              GO TO SUPER;                                              07181000
    ERROR:    T ~ GETSPACE(12,0,0)+2;%                                  07214000
              STREAM(FIRSTCARD,T);%                                     07215000
                   BEGIN DS ~ 16 LIT "#READ ERROR FOR ";%               07216000
                        SI ~ FIRSTCARD; DS ~ 9 WDS; DS ~ LIT "~";%      07217000
                   END;%                                                07218000
              SPOUT(T);%                                                07219000
              DO BEGIN INPUT;%                                          07220000
                        BOMBTIME;%                                      07221000
              END UNTIL ENDCARD;%                                       07222000
              IF OU < 16 THEN%                                          07223000
                   BEGIN DO BEGIN T ~ WAITIO(@340000005,@60,OU);%       07224000
                                  BOMBTIME;%                            07225000
                        END UNTIL T.[42:1];%                            07226000
                        T ~ WAITIO(@140000005,@60,OU);%                 07227000
                   END%                                                 07228000
              ELSE FORGETIT;%                                           07229000
              GO TO SUPER;%                                             07230000
    BOMB::    FORGETIT;%                                                07231000
    EXIT:     SLEEP([TOGLE],STATUSMASK);                                07232000
              S ~ IU; T ~ 3; STOP;%                                     07233000
              S ~ OU; T ~ 8; STOP;%                                     07234000
              FORGETSPACE(INBUFF);%                                     07235000
              FORGETSPACE(FIRSTCARD);%                                  07236000
              IF OU > 16 THEN%                                          07237000
                   BEGIN FORGETSPACE(H);%                               07238000
                        FORGETSPACE(OUTBUFFOLD);%                       07239000
                        FORGETSPACE(RESERVE);%                          07240000
                   END;%                                                07241000
    END COM23;%                                                         07242000
 PROCEDURE STARTLOADN(KTR); VALUE KTR; REAL KTR;%                       07243000
         BEGIN REAL C,T;;%                                              07244000
              STREAM(K~0:KTR);%                                         07245000
                   BEGIN SI ~ KTR;%                                     07246000
                   L:   IF SC = " " THEN%                               07247000
                             BEGIN SI ~ SI+1; GO TO L END;%             07248000
                        DI ~ LOC K; DI ~ DI+6; DS ~ 2 CHR;%             07249000
                   END;%                                                07250000
              C ~ P;%                                                   07251000
              T ~ KTR.[15:15]-1;%                                       07252000
              IF C ! "MT" AND C ! "DK" THEN%                            07253000
                   SPOUT(T INX M[T-1])                                  07254000
              ELSE BEGIN C ~ C = "MT";%                                 07255000
                        T ~ T+2;%                                       07256000
                        STREAM(C,T);%                                   07257000
                             BEGIN DS ~ 23 LIT "CC EXECUTE LDCNTRL/DISK"07258000
                                  ;DS ~ 18 LIT ";STACK=150;COMMON=";%WF 07259000
                                  SI ~ LOC C; DS ~ DEC;%                07260000
                                  DS~12 LIT ";PRIORITY=0 ";             07260100
                                  DS ~ 6 LIT ";END. ";%                 07261000
                                  6(DS~2 LIT " ");                      07262000
                             END;%                                      07263000
                        INDEPENDENTRUNNER(P(.CONTROLCARD),%             07264000
                             T & 31[2:42:6]);%                          07265000
                   END;%                                                07266000
         END;%                                                          07267000
PROCEDURE TABLEOFCONTENTS(B); VALUE B; REAL B;                          07268000
         BEGIN REAL I,T,N,A,TUSTA;                                      07269000
              LABEL L,EXIT,G;%                                          07270000
$ INCLUDE 07271101, IF SHAREDISK;                                       07270099
              REAL SYS;                                                 07270100
              IF (SYS:=UNITIN(TINU,B)-64)>3 OR SYS LSS 0 THEN           07270200
              BEGIN                                                     07270300
                   STREAM(A:="ALL":B);                                  07270400
                   BEGIN  SI:=B;                                        07270500
                        63(IF SC!" " THEN JUMP OUT;SI:=SI+1);           07270600
                        DI:=LOC A;DI:=DI+5;IF 3 SC=DC THEN              07270700
                        TALLY:=5;A:=TALLY;                              07270800
                   END;                                                 07270900
              IF NOT (SYS:=P) THEN SYS:=SYSNO;                          07271000
              END;                                                      07271100
              A:=B.[15:15]-1;                                           07271900
              TUSTA:=M[A-1];                                            07272000
              LOCKCONTROLDECKS;                                         07272500
              A:=FIRSTDECK;                                             07273000
         L:   I:=(GETSPACE(13,0,0)+2) INX TUSTA;                        07274000
         G:   IF A = 0 THEN GO TO EXIT;%                                07275000
              DISKWAIT(-I,12,A);                                        07276000
              A:=M[I+6].[CF];                                           07278000
$ INCLUDE 07280001, IF SHAREDISK;                                       07279000
              IF SYS LSS 5 THEN                                         07279100
              IF SYS!M[I+4].[4:2] THEN GO TO G;                         07279200
              T:=M[I+4].[4:2]+1;                                        07280000
              N ~ M[I+2];%                                              07281000
                    DISKWAIT(-I-3,9,M[I+10]);                           07282000
              STREAM(N,T,I);                                            07284000
                   BEGIN SI ~ LOC N; SI ~ SI+1;%                        07285000
                        DS ~ 6 LIT " DECK "; DS ~ 5 CHR;%               07286000
$ INCLUDE 07286301, IF SHAREDISK;                                       07286100
                        DS:=6 LIT" (SYS ";SI:=SI+9;DS:=CHR;             07286200
                        DI:=DI-1;SKIP DB;DS:=SET;DS:=LIT")";            07286300
$ OMIT 07286501, IF SHAREDISK;                                          07286400
                        DS:=8 LIT" ";                                   07286500
                        DS ~ 5 LIT " IS: ";%                            07287000
                        DI ~ DI+40; DI ~ DI+32; DS ~ LIT "~";%          07288000
                   END;%                                                07289000
              SPOUT(I);%                                                07290000
              GO TO L;%                                                 07291000
         EXIT:IF N=0 THEN                                               07292000
                   BEGIN;STREAM(I); DS ~ 18 LIT " NO DECKS ON DISK~";%  07293000
                        SPOUT(I);%                                      07294000
                   END ELSE FORGETSPACE(I);%                            07295000
              UNLOCKCONTROLDECKS;                                       07296000
         END;%                                                          07297000
 PROCEDURE REMOVEDECK(N,TUSTA);VALUE N,TUSTA;REAL N,TUSTA;              07298000
         BEGIN REAL I,T,A,L1,J=I,L2,V;%                                 07299000
              LABEL L,EXIT,REMOVE;%                                     07300000
              LOCKCONTROLDECKS;                                         07301000
              IF (I ~ DIRECTORYSEARCH("DECK   ",N,5)) = 0 THEN%         07303000
                   BEGIN I ~ GETSPACE(5,0,0)+2;%                        07304000
                        STREAM(N,I);%                                   07305000
                             BEGIN DS ~ 6 LIT " DECK ";%                07306000
                                  SI ~ LOC N; SI ~ SI+1; DS ~ 5 CHR;%   07307000
                                  DS ~ 13 LIT " NOT ON DISK~";%         07308000
                             END;%                                      07309000
                        GO TO EXIT;%                                    07310000
                   END;%                                                07311000
$ INCLUDE 07311311, IF SHAREDISK;                                       07311199
              IF (T:=M[I+4]).[2:1] THEN                                 07311200
              IF T.[4:2]!SYSNO THEN                                     07311210
              BEGIN                                                     07311220
                   STREAM(N,A~T.[4:2]+1,I~I INX 0);                     07311230
                   BEGIN DS:=6 LIT" DECK ";SI:=LOC N;SI:=SI+1;          07311240
                        DS:=5 CHR;DS:=18 LIT" IN USE BY SYSTEM ";       07311250
                        SI:=SI+9;DS:=CHR;DI:=DI-1;SKIP DB;DS:=SET;      07311260
                        DS:=LIT"~";                                     07311270
                   END;                                                 07311280
                   GO TO EXIT;                                          07311300
              END;                                                      07311310
              L2:=M[I+6].[CF];                                          07312000
              IF (A:=FIRSTDECK)=(L1:=I.[FF]) THEN                       07313000
              BEGIN                                                     07314000
                   IF (FIRSTDECK:=L2)=0 THEN LASTDECK:=0;               07314100
                   DISKWAIT(KLUMP,3,DIRECTORYTOP+3);                    07314200
                   GO TO REMOVE;                                        07314300
              END;                                                      07314400
              J ~ I.[33:15];%                                           07315000
         L:                                                             07316000
              DISKWAIT(-J,30,A);                                        07317000
              IF (V:=M[J+6].[CF])=0 THEN GO TO REMOVE;                  07318000
              IF V ! L1 THEN%                                           07319000
                   BEGIN A ~ V; GO TO L END;%                           07320000
              M[J+6].[CF]:=L2;                                          07321000
              DISKWAIT(J,30,A);                                         07322000
              IF L2 = 0 THEN%                                           07324000
              BEGIN                                                     07325000
                   LASTDECK:=A;                                         07326000
                   DISKWAIT(KLUMP,3,DIRECTORYTOP+3);                    07327000
              END;                                                      07328000
         REMOVE:                                                        07331000
               FORGETSPACE(I);                                          07332000
              I:=DIRECTORYSEARCH("DECK   ",N,8).[CF];                   07333000
              T ~ M[I+9];%                                              07343000
              FOR V ~ 1 STEP 1 UNTIL T DO%                              07344000
                   IF M[I+V+9]!0 THEN FORGETUSERDISK(M[I+V+9],M[I+8]);  07345000
              STREAM(N,I);%                                             07346000
                   BEGIN DS ~ 6 LIT " DECK ";%                          07347000
                        SI ~ LOC N; SI ~ SI+1; DS ~ 5 CHR;%             07348000
                        DS ~ 9 LIT " REMOVED~";%                        07349000
                   END;%                                                07350000
      IF LIBMSG THEN                                                    07350100
EXIT: SPOUT(I INX TUSTA)                                                07351000
      ELSE FORGETSPACE(I);                                              07351100
              UNLOCKCONTROLDECKS;                                       07352000
         END;%                                                          07353000
 PROCEDURE DECKREMOVER(B); VALUE B; REAL B;%                            07354000
         BEGIN REAL K,N,F;%                                             07355000
              INTEGER U; LABEL ON,ERR;                                  07355100
              REAL D;                                                   07355200
              LABEL L,TRYIT,GIVEUP;                                     07356000
              K ~ B.[15:15]-1;%                                         07357000
         L:   STREAM(X~12,B:A~0);%                                      07358000
                   BEGIN SI ~ B;%                                       07359000
                   U:   IF SC = " " THEN BEGIN SI~SI+1; GO TO U END;%   07360000
                        IF SC="=" THEN BEGIN DI~LOC X; DI~DI+6; DS~CHR; 07360100
                                             SI~SI-1; B~SI; GO TO E END;07360200
                        IF SC = "#" THEN SI:=SI+1;                      07361000
                   BL:  IF SC=" "  THEN BEGIN SI:=SI+1;GO TO BL; END;   07361500
                        DI:=LOC X; DI:=DI+1; DS:=5 LIT "#0000";         07362000
                        4(IF SC < "0" THEN JUMP OUT TO EN;              07363000
                          IF SC > "9" THEN JUMP OUT TO EN;              07364000
                          SI:=SI+1; TALLY:=TALLY+1);                    07365000
                   EN:  A:=TALLY; SI:=SI-A; DI:=DI-A; DS:=A CHR;        07365500
                   N:   IF SC = " " THEN BEGIN SI~SI+1; GO TO N END;%   07366000
                        DS ~ CHR; B ~ SI;%                              07367000
                   E: END;%                                             07368000
              P(.B,~,.N,~);%                                            07369000
              F~N.[36:6]; N.[36:6]~"~";                                 07370000
              IF F="~" OR F="," OR F="=" THEN                           07371000
                   BEGIN IF F="=" THEN                                  07371100
                         BEGIN IF D=0 THEN D~GETSPACE(30,0,0)+2;        07371200
                               LOCKCONTROLDECKS;                        07371300
                               IF (N:=FIRSTDECK)=0 THEN                 07371400
GIVEUP:                                                                 07371450
                               BEGIN F:="~";                            07371500
                                    UNLOCKCONTROLDECKS;                 07371600
                                    GO ON;                              07371700
                               END;                                     07371750
TRYIT:                         DISKWAIT(-D,30,N);                       07371800
$ INCLUDE 07371851, IF SHAREDISK;                                       07371809
                               IF M[D+4].[4:2]!SYSNO THEN               07371810
                               IF (N:=M[D+6].[CF])!0 THEN GO TRYIT ELSE 07371820
                                    GO GIVEUP;                          07371830
                               N:=M[D+2];                               07371900
                               UNLOCKCONTROLDECKS;                      07371950
                         END;                                           07372000
                         FOR U ~ 0 STEP 1 UNTIL PSEUDOMAX DO            07372090
                         IF CIDROW[U]!0 THEN                            07372100
                         IF(CIDTABLE[U,2] EQV N)=NOT 0 THEN             07372200
                         IF LABELTABLE[U+32]}0 THEN                     07372300
                         BEGIN                                          07372400
                                ENDOFDECK(U,M[K-1]);                    07372500
                               GO ON;                                   07372600
                         END ELSE GO TO ERR;                            07372700
                              REMOVEDECK(N,M[K-1]);                     07372800
              ON:        IF F!"~" THEN GO TO L;                         07372900
                        FORGETSPACE(K);%                                07373000
                   END ELSE                                             07374000
    ERR:           SPOUT(K);                                            07374100
              IF D!0 THEN FORGETSPACE(D);                               07374200
         END;%                                                          07375000
 BOOLEAN PROCEDURE READEMFROMDISK(H,IB);%                               07376000
         VALUE H,IB; ARRAY H[*],IB[*];%                                 07377000
         BEGIN%                                                         07378000
%   H[0] = ADDRESS OF BU+1 (B)%                                         07379000
%   H[1] = ADDRESS OF B2+1%                                             07380000
%   H[2] = DECK NAME%                                                   07381000
%   H[3] = RECORDCOUNT (N)%                                             07382000
%   H[4] = NEXT CONTROL CARD (L)%                                       07383000
%   H[5] = RECORDS USED IN THIS BLOCK | 10 (R)%                         07384000
%   H[7] - H[30] ARE FILE HEADER%                                       07385000
              REAL A,B;%                                                07386000
              DEFINE N=H[3]#,L=H[4]#,R=H[5]#;%                          07387000
              INTEGER I=A; DEFINE MOM=CIDROW[M[B]]#;                    07388000
$INCLUDE 07388201, IF BREAKOUT;                                         07388010
COMMENT WHILE RESTARTING, THE KERNAL MAY ASK THAT THE CIDROW OR         07388020
    ATTACHED LABEL BE MOVED. NO CALLER WATCHES EITHER.                  07388030
    THE KERNAL WON-T HAVE ASKED IF STARTADECK CALLED.                   07388040
    BY COOLING OFF, WE AVOID BED AND I/O QUEUE REFERENCES, LEAVING NONE 07388050
    BUT H AND THOSE IN THE CIDROW.                                      07388060
         THE DECK WON-T BE REMOVED HERE, IT-S IN USE;                   07388070
IF H[3].[2:1] THEN   %SEE KERNAL NOW                                    07388080
BEGIN COMPLEXSLEEP((H[H[0]-2] AND H[H[1]-2]).[19:1]);%COOLOFF           07388090
    M[B~GETSPACE(94,20,0)].[9:6]~0; B~B+1;                              07388100
    MOVE(95,A~H.[CF]-1,B); A~B-A;   %OFFSET                             07388110
    H~MOM&(B+1)[CTC];                                                   07388120
    P(0,1); DO H[(H[P(DUP)]~(*P(DUP))+A)-2]~(*P(DUP))                   07388130
         &(P(DUP).[CF]+A)[CTC] UNTIL P=0;   %NOW FOR THE LABEL, IF ANY  07388140
    IF (B~H.[FF]-3)>0 THEN   %THERE-S ONE                               07388150
    BEGIN M[A~GETSPACE(13,20,0)].[9:6]~0;                               07388160
         MOVE(14,B,A+1); H.[FF]~A+4;                                    07388170
         FORGETSPACE(B+1)                                               07388180
    END; FORGETSPACE(MOM); MOM~H; H[3].[2:1]~0                          07388190
END;                                                                    07388200
              B ~ H[0];%                                                07389000
              IF R = 0 THEN%                                            07390000
              IF (M[B-2] AND IOMASK) = 0 THEN%                          07391000
                   SLEEP([M[B-2]],IOMASK);%                             07392000
              STREAM(B~B+R,IB);%                                        07393000
                   BEGIN SI ~ B; DS ~ 10 WDS END;%                      07394000
              M[IB INX NOT 0] ~ 10;                                     07394500
              IF (READEMFROMDISK ~ N=L) THEN%                           07395000
                   L ~ IB[9];%                                          07396000
              IF (A ~ N ~ *P(DUP)+1) > H[7] THEN%                       07397000
                   BEGIN N~A-1; READEMFROMDISK~1 END                    07398000
              ELSE BEGIN IF (R ~ *P(DUP)+10) = 30 THEN%                 07399000
                             BEGIN IB ~ [M[B-2]];%                      07400000
                                  R ~ 0;                                07400400
                                  A ~ A DIV 3+1;                        07400500
                                  I~H[A DIV H[8]+10]+A MOD H[8];        07401000
                                  DISKIO(IB,1-B,30,I);%                 07402000
                                  H[0] ~ H[1];%                         07403000
                                  H[1] ~ B;%                            07404000
         END;      END;      END;%                                      07405000
 PROCEDURE ENDOFDECK(R,TUSTA);VALUE R,TUSTA; REAL R,TUSTA;              07406000
         BEGIN ARRAY H[*];%                                             07407000
              REAL B,I;%                                                07408000
              LABEL EXIT;                                               07408500
              IF (H:=CIDROW[R])=0 THEN GO TO EXIT;                      07409000
              LABELTABLE[R+32] ~ @114;                                  07409100
              MULTITABLE[R+32] ~ RDCTABLE[R+32] ~ 0;                    07409200
              UNITCODE[R+9]:=-0;                                        07409300
              REMOVEDECK(H[2],TUSTA);                                   07410000
              FOR I ~ 0 STEP 1 UNTIL 1 DO%                              07411000
                   BEGIN B ~ H[I];%                                     07412000
                        IF (M[B-2] AND IOMASK) = 0 THEN                 07413000
                             SLEEP([M[B-2]],IOMASK);%                   07414000
                   END;%                                                07415000
              IF H.[18:15] ! 0 THEN                                     07416000
                   FORGETSPACE(H.[18:15]-2);                            07417000
              CIDROW[R] ~ 0;%                                           07418000
              FORGETSPACE(H);%                                          07419000
              IF (RUNUMBER~RUNUMBER+1) GTR 0 THEN STARTADECK(0);        07420000
         EXIT:                                                          07420100
         END;%                                                          07421000
 INTEGER PSEUDOCOPY;% USED BY STARTADECK TO CONTROL THE NO OF "COPIES"  07421500
 %                    OF CONTROLCARD SERVICING PSEUDO-READERS           07421505
PROCEDURE STARTADECK(N); VALUE N; REAL N;                               07422000
         BEGIN LABEL EXIT,L,POSSIBLE,NEXT;%                             07423000
              REAL I,R,T,A,S;                                           07424000
              ARRAY H[*];%                                              07425000
              LABEL AGAIN,START;                                        07425500
         START:                                                         07425600
              LOCKCONTROLDECKS;                                         07426000
              IF RUNUMBER LEQ 0 AND N=0 THEN GO TO EXIT;                07426100
         AGAIN:                                                         07427500
              IF PSEUDOCOPY > 2 THEN% TOO MANY COPIES CONTROLCARD       07427600
         IF STARTOG AND N=0 THEN GO TO EXIT %                           07427610
                   ELSE BEGIN STARTOG ~ TRUE;                           07427620
                             UNLOCKCONTROLDECKS;                        07427625
                             COMPLEXSLEEP(PSEUDOCOPY { 2);%             07427630
                             STARTOG ~ FALSE;%                          07427640
                             GO TO START;%                              07427645
                        END;%                                           07427650
              FOR R ~ 0 STEP 1 UNTIL PSEUDOMAX DO                       07428000
                   IF CIDROW[R] = 0 THEN GO TO POSSIBLE;%               07429000
              STREAM(S~S~SPACE(4));                                     07429100
              DS:=27 LIT" ALL PSEUDO-READERS IN USE~";                  07429200
              SPOUT(S);                                                 07429300
              GO TO EXIT;%                                              07430000
         POSSIBLE:%                                                     07431000
              IF (A:=FIRSTDECK)=0 THEN GO TO EXIT;                      07432000
              LABELTABLE[R+32]:=@114;                                   07432100
              H~CIDROW[R]~[M[S~GETSPACE(94,20,1)+2]]&94[8:38:10];       07433000
              M[S-2].[9:6] ~ 0; H[2] ~ 0;%                              07434000
         L:   DISKWAIT(-S,30,A);                                        07435000
              IF N!0 THEN                                               07436000
              BEGIN                                                     07436100
                   IF H[2].[12:24]!N THEN GO TO NEXT;                   07436200
                   IF H[4].[2:1] THEN                                   07436300
                   BEGIN                                                07436400
                        STREAM(A:=[H[2]],                               07436500
$ INCLUDE 07436511, IF SHAREDISK;                                       07436509
                                  N~H[4].[4:2]+17,                      07436510
                                       S);                              07436520
                        BEGIN SI:=A;SI:=SI+1;DS:=6 LIT" DECK ";         07436600
                             DS:=5 CHR;DS:=7LIT" IN USE";               07436700
$ INCLUDE 07436901, IF SHAREDISK;                                       07436799
                             DS:=11 LIT" BY SYSTEM ";SI:=LOC N;         07436800
                             SI~SI+7; DS~CHR;                           07436900
                             DS:=LIT"~";                                07437000
                        END;                                            07437100
                        SPOUT(S);                                       07437200
                        CIDROW[R]:=0;                                   07437300
                        GO TO EXIT;                                     07437400
                   END;                                                 07437500
              END ELSE                                                  07437600
              IF H[4].[2:1]                                             07437800
$ INCLUDE 07437901,IF SHAREDISK;                                        07437899
                   OR (H[4].[4:2]!SYSNO AND NOT RNALL)                  07437900
                   THEN GO TO NEXT;                                     07438000
              H[4]:=(*P(DUP))&1[2:47:1]&SYSNO[4:46:2];                  07438100
              DISKWAIT(S,30,A);                                         07438200
$INCLUDE 07438401, IF BREAKOUT;                                         07438300
              M[S-1]:= R; %HELP KERNAL FIND IT                          07438400
              H[0] ~ S+32;%                                             07441000
              H[1] ~ S+64;%                                             07442000
              T ~ [H[30]]; DISKIO(T,1-H[0],30,H[10]);%                  07444000
              IF H[7] LSS 3 THEN H[62]:=IOMASK ELSE                     07445000
              BEGIN T:=[H[62]]; IF H[8]=1 THEN                          07445100
              DISKIO(T,1-H[1],30,H[11]) ELSE                            07445200
              DISKIO(T,1-H[1],30,H[10]+1);                              07445300
              END;                                                      07445400
              T:=GETSPACE(13,20,0)+4;                                   07446000
$INCLUDE 07446021, IF BREAKOUT;                                         07446010
              M[T-3]:=R; %HELP KERNAL FIND IT                           07446020
              M[T INX 10] := H[5];                                      07446100
              A:=H[6];                                                  07446150
              H[3] := H[4] := H[5] := H[6] := 0;                        07446200
              M[T-4].[9:6] ~ 0;%                                        07447000
              LABELTABLE[R+32]~-@14;   %LET IT BE MOVED                 07448000
              I~READEMFROMDISK(H,[M[T]]&10[8:38:10]);                   07448500
              INDEPENDENTRUNNER(P(.CONTROLCARD),T&                      07449000
$ INCLUDE 07449101, IF DATACOM AND RJE AND NOT INQUIRY;                 07449099
                                                  A[9:9:9]&             07449100
                                                  (R+32)[2:42:6]);      07449200
              PSEUDOCOPY ~ PSEUDOCOPY + 1;%                             07449500
              IF (RUNUMBER~RUNUMBER-1) LEQ 0 OR N!0 THEN GO TO EXIT;    07450000
              GO TO AGAIN;                                              07450200
         NEXT:IF (A:=H[6].[CF])!0 THEN GO TO L;                         07451000
              IF N!0 THEN                                               07452000
              BEGIN                                                     07452100
                   STREAM(N,S);                                         07452200
                   BEGIN SI:=LOC N;SI:=SI+4;DS:=7 LIT" DECK #";         07452300
                        DS:=4 CHR;DS:=13 LIT" NOT ON DISK~";            07452400
                   END;                                                 07452500
                   SPOUT(S);                                            07452600
              END ELSE FORGETSPACE(S);                                  07452700
              CIDROW[R] ~ 0;%                                           07453000
         EXIT: UNLOCKCONTROLDECKS;                                      07455000
         END;%                                                          07456000
 PROCEDURE RUNTHEDECK(B);VALUE B; REAL B;%                              07457000
         BEGIN REAL I,J;%                                               07458000
              STREAM(S:=0:B,A:=[I]);                                    07461000
              BEGIN SI ~ B;%        TO REAL IN I                        07461100
              L:   IF SC = " " THEN%                                    07461200
                        BEGIN SI ~ SI + 1; GO TO L; END;%               07461300
                   IF SC="#" THEN                                       07461310
                   BEGIN L1:SI:=SI+1;IF SC=" " THEN GO TO L1;           07461320
                        DS:=4 LIT"0000";DS:=4 CHR;TALLY:=1;GO TO EX;    07461330
                   END;                                                 07461340
                   SI ~ SI + 1;%                                        07461400
                   IF SC { "9" THEN IF SC } "0" THEN GO TO TWO;         07461500
                   SI ~ SI - 1; DS ~ OCT;%                              07461510
                   GO TO EX;%                                           07461520
              TWO: SI ~ SI - 1; DS ~ 2 OCT;                             07461530
              EX:S:=TALLY;                                              07461540
              END;                                                      07461550
              J:=P;                                                     07461560
              B:=B.[15:15]-1;                                           07461570
              IF J THEN                                                 07461600
              BEGIN                                                     07461700
                   FORGETSPACE(B);                                      07461800
                   STARTADECK(I);                                       07461900
              END ELSE                                                  07462000
              BEGIN                                                     07462100
                   IF I GTR PSEUDOMAX1 THEN  I:=NABS(RUNUMBER)  ELSE    07462200
                   BEGIN                                                07462250
                   RUNUMBER:=I;                                         07462300
                   FOR J:=0 STEP 1 UNTIL PSEUDOMAX DO                   07462400
                        RUNUMBER:=RUNUMBER-(CIDROW[J]!0);               07462500
                   END;                                                 07462600
                   STREAM(X1:=1-I.[1:1],X2:=RUNUMBER.[1:1],I:=ABS(I),B);07463000
                   BEGIN CI:=CI+X1; GO L1; DS:=10LIT" WILL USE ";GO L2; 07464000
                         L1: CI:=CI+X2; GO L2; DS:=LIT"-"; L2:          07464100
                        SI:=LOC I;DS:=2 DEC;                            07465000
                        DS ~ 13 LIT " PSEUDO-RDRS~";                    07466000
                   END;%                                                07467000
                   SPOUT(B INX M[B-1]);                                 07468100
              IF RUNUMBER GTR 0 THEN STARTADECK(0);                     07469000
              END;                                                      07472500
         END;%                                                          07473000
 PROCEDURE EXTERNALEND(B); VALUE B; REAL B;                             07473100
         BEGIN REAL U;  LABEL EXIT;                                     07474000
              U ~ UNITIN(TINU,B);                                       07475000
              B ~ B.[15:15]-1;                                          07476000
              IF 32 { U AND U { PSEUDOMAXT  THEN                        07477000
              IF LABELTABLE[U] } 0 THEN                                 07478000
              IF CIDROW[U-32] ! 0 THEN                                  07478500
                   BEGIN                                                07479000
                        ENDOFDECK(U-32,M[B-1]);                         07479100
                        FORGETSPACE(B);                                 07480000
                        GO TO EXIT;                                     07481000
                   END;                                                 07482000
              SPOUT(B INX M[B-1]);                                      07483000
         EXIT:END;                                                      07484000
PROCEDURE CHANGEPRIORITY(BUFF,MIX); VALUE BUFF,MIX; REAL BUFF,MIX;      07485000
BEGIN INTEGER PRIORITY; REAL B;                                         07486000
      BUFF ~ ((B~BUFF).[15:15]-1)&M[P(DUP)-1][9:9:9];                   07487000
      STREAM(PRIORITY:B);                                               07488000
      BEGIN SI~B;                                                       07489000
      N:    IF SC="~" THEN GO TO X;                                     07490000
            IF SC<"0" THEN BEGIN SI~SI+1; GO TO N; END; B~SI;           07491000
      K:    IF SC}"0" THEN IF SC{"9" THEN                               07492000
                   BEGIN TALLY~TALLY+1; SI~SI+1; GO TO K END;           07493000
            SI~B; DI~LOC PRIORITY; B~TALLY; DS~B OCT; GO TO Z;          07494000
      X:    DI~LOC PRIORITY; SKIP DB; DS~11 SET;                        07495000
      Z:                                                                07496000
      END STREAM;                                                       07497000
       IF (PRIORITY~P) } 0 THEN                                         07498000
      IF PRYOR[MIX]}0 THEN%                                             07501000
      IF JAR[MIX,*]!0 THEN                                              07502000
    BEGIN JAR[MIX,2].[CF]~ PRYOR[MIX]~ P(PRIORITY~                      07503000
         IF PRIORITY}32766 THEN 32766 ELSE PRIORITY, DUP) & P[CTF];     07503500
            STREAM(J~JAR[MIX,*],MIX,PRIORITY,BUFF);                     07504000
            BEGIN DS~10 LIT " PRIORITY=";                               07505000
                  SI~LOC PRIORITY; BUFF~DI; DS~6 DEC; DI~DI-6;          07506000
                  DS~5 FILL; DI~BUFF; DI~DI+6; DS~LIT":";               07507000
                  SI~J; SI~SI+1; DS~7 CHR; SI~SI+1; DS~LIT"/"; DS~7 CHR;07508000
                  DS~LIT"="; SI~LOC MIX; DS~2DEC; DS~LIT"~";            07509000
                  DI~DI-3; DS~FILL;                                     07509500
      END   END;                                                        07510000
      SPOUT(BUFF);                                                      07511000
END CHANGEPRIORITY;                                                     07512000
PROCEDURE PBLOG(ST); VALUE ST; REAL ST;  % DONT CALL IF NO LOG          07520000
BEGIN REAL RCW=-0; NAME S=+1;                                           07521000
    P(GETSPACE(128, 12,0)+1,STS,ST,RCW,0,RDS,0,XCH,CFX,STF,[M[ST]]);    07522000
    STACKUSE~1;                                                         07523000
    S[22]~S[27]~0; S[20]~"PRINTER"; S[21]~"BACK-UP";                    07524000
    S[29]~S[24];S[0]~3;S[10]~5;S[18].[1:30]~DATE.[18:30];S[11]~2;       07525000
    LOGSPACE(S,30);  %CLOBBERS S-1,S+30                                 07525200
    FORGETSPACE(ST);                                                    07525400
    KILL([ST])                                                          07526000
END OF PBLOG;                                                           07526500
PROCEDURE ENTERCONTROLDECK(H); VALUE H; ARRAY H[*];                     07541000
BEGIN REAL R,S,T,T1,T2;                                                 07542000
      INTEGER I;                                                        07543000
    LOCKCONTROLDECKS;                                                   07546000
      H[0]~"31";                                                        07548000
      STREAM(DATE,B~[H[3]]);                                            07549000
         BEGIN SI~LOC DATE;DS~8 OCT;DI~DI-8;DS~2 LIT"+7";END;           07549100
         T~"DECK   "&H[4][1:47:1];                                      07549150
         H[4]:=0&15[12:44:4];                                           07550000
         H[1]~(XCLOCK+P(RTR))&H[3][6:30:18];                            07550100
$ INCLUDE 07551001, IF SHAREDISK;                                       07550999
         H[4].[4:2]:=SYSNO;                                             07551000
    S:=LASTCDNUM:=LASTCDNUM MOD 9999+1;                                 07552000
      STREAM(X~@14:S);                                                  07553000
            BEGIN DI~LOC X; DI~DI+1; DS~LIT "#";                        07554000
                  SI~LOC S; DS~4 DEC; DS~LIT "~";                       07555000
            END;                                                        07556000
      S~P; H[2]~S;                                                      07557000
    ENTERUSERFILE(T,S,H.[CF]-1);                                        07558000
      T1~DIRECTORYFREE.[33:14];                                         07559000
    IF FIRSTDECK=0 THEN FIRSTDECK:=T1 ELSE                              07560000
      BEGIN LOCKDIRECTORY;                                              07561000
            I~GETSPACE(30,0,0)+2;                                       07562000
            DISKWAIT(-I,30,LASTDECK);                                   07564000
            M[I+6].[CF]:=T1;                                            07565000
            DISKWAIT(I,30,LASTDECK);                                    07566000
            FORGETSPACE(I);                                             07567000
            UNLOCKDIRECTORY;                                            07568000
      END;                                                              07569000
    LASTDECK:=T1;                                                       07570000
    DISKWAIT(KLUMP,-3,DIRECTORYTOP+3);                                  07571000
    CDFREE~1;                                                           07572000
              IF RUNUMBER GTR 0 THEN STARTADECK(0);                     07573000
END ENTERCONTROLDECK;                                                   07575000
 BOOLEAN PROCEDURE MTXIN(I,U,BUFF);%                                    08000000
         REAL U,BUFF; INTEGER I;%                                       08001000
         BEGIN LABEL EXIT,X;%                                           08002000
              U ~ UNITIN(TINU,BUFF);                                    08003000
              BUFF ~ BUFF.[15:15]-1;                                    08004000
              IF U > 15 THEN%                                           08005000
                   BEGIN;STREAM(BUFF); DS ~ 8 LIT "INV KBD ";%          08006000
                        GO TO EXIT;%                                    08007000
                   END ELSE I ~ TWO(U);                                 08008000
              STREAM(A~TINU[U]:BUFF);%                                  08009000
                   BEGIN SI~LOC A; SI~SI+5; DS~LIT" "; DS~3 CHR;%       08010000
                        DS ~ LIT " "; A ~ DI;%                          08011000
                   END;%                                                08012000
              P([BUFF],~);%                                             08013000
              IF LABELTABLE[U] = @114 OR LABELTABLE[U] = @214 THEN%     08014000
                   BEGIN;STREAM(BUFF); DS ~ 10 LIT "NOT READY~";%       08015000
                        GO TO EXIT%                                     08016000
                   END;%                                                08017000
              IF LABELTABLE[U] < 0 THEN%                                08018000
                   BEGIN;STREAM(BUFF); DS ~ 7 LIT "IN USE~";%           08019000
                   END%                                                 08020000
              ELSE GO TO X;%                                            08021000
         EXIT:MTXIN ~ TRUE;%                                            08022000
         X:END;%                                                        08023000
 PROCEDURE TAPEPURGE(BUFF); VALUE BUFF; REAL BUFF;%                     08024000
         BEGIN LABEL EXIT;%                                             08025000
              REAL I,U;%                                                08026000
              REAL R,T;                                                 08027000
              BOOLEAN TEST;                                             08027100
              REAL WHAT = BUFF;%                                        08028000
              IF MTXIN(I,U,WHAT) THEN GO TO EXIT;%                      08029000
              STREAM(B:=BUFF,T~[T]);                                    08029015
              BEGIN SI:=B; SI:=SI+6;                                    08029020
              IF SC="-" THEN                                            08029025
                 BEGIN SI:=SI+1;                                        08029030
                 5(IF SC="~" THEN JUMP OUT;                             08029035
                   TALLY:=TALLY+1;SI:=SI+1);                            08029040
                 B:=TALLY; SI:=SI-B; DS:=B OCT;                         08029045
                 END;                                                   08029050
              END;                                                      08029055
              LABELTABLE[U] ~ -@14;                                     08029100
              IF WAITIO(@500000000,@120,U) ! 0 THEN%                    08030000
                   BEGIN; STREAM(BUFF); DS ~ 11 LIT "WRITE LOCK~";%     08031000
                        LABELTABLE[U] ~ @114;                           08031100
                        GO TO EXIT;%                                    08032000
                   END;%                                                08033000
              IF T=0 THEN                                               08033980
              BEGIN T:=PRNTABLE[U].[30:18]; TEST:= TRUE END;            08033990
              STREAM(A:=T,BUFF);                                        08034000
                   BEGIN DI ~ DI + 3; DS ~ 8 LIT " LABEL  ";            08035000
                        8(DS~2 LIT "0X");                               08035100
                        24(DS~2 LIT "0"); DS~2 LIT "}~";                08036000
                        DI ~ DI-21; SI ~ LOC A; DS ~ 5 DEC;%            08037000
                   END;%                                                08038000
              RRRMECH ~ I OR RRRMECH;%                                  08039000
              MULTITABLE[U] ~ 0;%                                       08041000
              P(WAITIO(@4200000000,0,U),DEL);%                          08042000
              R ~ WAITIO(BUFF INX @120500000001,@2000000,U) OR%         08043000
                   WAITIO(BUFF INX 10,@2000000,U);%                     08044000
              IF MOD3IOS THEN                                        %AI08044500
                   DO UNTIL P(WAITIO(BUFF INX @340000012,@50,U))=@10 %AI08044600
              ELSE                                                   %AI08044700
              P(WAITIO(@4200000000,0,U),DEL);%                          08045000
              SLEEP([TOGLE],STATUSMASK);                                08046000
              RRRMECH ~ RRRMECH AND NOT I;%                             08047000
              READY ~ READY AND NOT I;%                                 08048000
              IF R = 0 THEN BEGIN%                                      08049000
              LABELTABLE[U] ~ @114;%                                    08050000
         IF  TEST THEN BEGIN STREAM(BUFF);DS:=6LIT"PG-ED~";END          08051000
         ELSE BEGIN STREAM(A:=T,B:=PRNTABLE[U].[30:18],BUFF);           08051010
                    BEGIN DS:=10LIT"PG-ED(PRN=";                        08051020
                    SI:=LOC A; DS:=5 DEC;                               08051030
                    DS:=5LIT",WAS ";                                    08051040
                    SI:=LOC B; DS:=5 DEC;DS:=2LIT")~";                  08051050
                    END;                                                08051060
                    PRNTABLE[U].[30:18] ~ T;                            08051065
              END;                                                      08051070
         EXIT: SPOUT(NABS(BUFF INX M[BUFF-1]));%                        08052000
              END ELSE BEGIN%                                           08053000
                   LABELTABLE[U] ~ @214;%                               08054000
                   FORGETSPACE(BUFF);%                                  08055000
              END;%                                                     08056000
         END;%                                                          08057000
PROCEDURE GIMEDATE(B,DT); VALUE B,DT; REAL B,DT; FORWARD;           %RH 08070000
 PROCEDURE REWINDANDLOCK(WHAT); VALUE WHAT; REAL WHAT;%                 08079000
         BEGIN REAL BUFF=WHAT,U;%                                       08080000
              INTEGER I;%                                               08081000
              LABEL EXIT;%                                              08082000
              IF MTXIN(I,U,BUFF) THEN GO TO EXIT;%                      08083000
              RRRMECH ~ RRRMECH OR I;%                                  08084000
              LABELTABLE[U] ~ -@14;%                                    08085000
              MULTITABLE[U] ~ 0;%                                       08086000
              P(WAITIO(@4200000000,0,U),DEL);%                          08087000
              SLEEP([TOGLE],STATUSMASK);                                08088000
              RRRMECH ~ RRRMECH AND NOT I;%                             08089000
              READY ~ READY AND NOT I;%                                 08090000
              LABELTABLE[U] ~ @214;%                                    08091000
              STREAM(BUFF); DS ~ 5 LIT "RW/L~";%                        08092000
         EXIT:     SPOUT(BUFF INX M[BUFF-1]);                           08093000
         END;%                                                          08094000
    PROCEDURE PRINTDIRECTORY(BUFF,CODE);                                08095000
                       VALUE BUFF,CODE ; REAL BUFF,CODE;                08095100
    BEGIN ARRAY HDR[*],NB[*];                                           08096000
         REAL STA,A,B,C,T,CR,N;                                         08097000
     REAL INFOTYPE,INFO,INFOTEMP;                                   %RH 08097100
     LABEL GETADATE,INFOUT;                                         %RH 08097200
         INTEGER I,J;                                                   08098000
         LABEL GETHDR,IN,OUT,AROUND,XOUT;                               08098100
         ARRAY D=NB[*];                                                 08098200
    REAL USERID,PG;                                                     08098300
     NAME ADDR;                                                         08098400
     INTEGER J1,J2,J3,K1,K2;                                            08098500
     SUBROUTINE FINDWHATINFO;                                       %RH 08099000
          BEGIN                                                     %RH 08099100
               IF INFOTYPE="DATE   " THEN                           %RH 08099200
               BEGIN                                                %RH 08099210
                    INFOTEMP:=HDR[3].[30:18]&1[1:43:5];             %RH 08099220
                    GO GETADATE;                                    %RH 08099230
               END ELSE                                             %RH 08099240
               IF INFOTYPE="LAST   " THEN                           %RH 08099300
               BEGIN                                                %RH 08099310
                    INFOTEMP:=HDR[3].[12:18]&2[1:43:5];             %RH 08099320
                    GO GETADATE;                                    %RH 08099330
               END ELSE                                             %RH 08099340
               IF INFOTYPE="RECS   " THEN                           %RH 08099400
               BEGIN                                                %RH 08099410
                    INFO:=(HDR[7]+1)&3[1:43:5];                     %RH 08099420
                    GO TO INFOUT;                                   %RH 08099430
               END ELSE                                             %RH 08099440
               IF INFOTYPE="SIZE   " THEN                           %RH 08099500
               BEGIN PG:=HDR[9] AND @37;                            %RH 08099510
                    INFO:=0; WHILE (INFO:=INFO+1) LEQ PG DO IF      %RH 08099520
                    HDR[INFO+9]!0 THEN INFOTEMP:=INFOTEMP+1;        %RH 08099530
                    INFO:=(INFOTEMP|HDR[8])&4[1:43:5]; INFOTEMP:=0; %RH 08099540
                    GO TO INFOUT;                                   %RH 08099550
               END;                                                 %RH 08099560
               GO TO INFOUT;                                        %RH 08099570
          GETADATE:                                                 %RH 08099700
               STREAM(A:=INFOTEMP.[30:18],I:=[INFO]);               %RH 08099710
               BEGIN SI:=LOC A;DS:=8 DEC END;                       %RH 08099720
               GIMEDATE([INFO].[CF],-INFO);                         %RH 08099730
               INFO.[1:5]:=INFOTEMP.[1:5];                          %RH 08099740
          INFOUT:                                                   %RH 08099750
               P(DEL);                                              %RH 08099760
               GO TO IN;                                            %RH 08099770
          END;                                                      %RH 08099800
     NB:=[M[SPACE(60)]]&60[8:38:10];                                    08099900
     IF (STA:=M[(BUFF:=(C:=BUFF).[15:15]-1)-1]).[9:9]!0 AND CODE=0 THEN 08101000
$ INCLUDE 08101051,IF DATACOM AND NOT INQUIRY;                          08101040
     IF NOT (P(GET(STA),DUP).[32:1] OR P(XCH)) THEN                     08101050
     IF P(LOOKQ,STA AND @7570000000000,LLL,.ADDR,STD).[9:9]=STA.[9:9]   08101100
         THEN USERID:= ADDR[1];                                         08101200
         NAMEID(A,C);                                                   08102000
         NAMEID(B,C); IF B="/      " THEN NAMEID(B,C);                  08102100
         NAMEID(INFOTYPE,C);                                        %RH 08102200
         C:=0;                                                          08103000
     IF ((A EQV B)=NOT 0) AND ((A EQV "~      ")=NOT 0) THEN GO XOUT;   08103100
     IF (A EQV "~~     ")=NOT 0 THEN A~"~      ";                       08103200
     IF (B EQV "~~     ")= NOT 0 THEN B~"~      ";                      08103300
     J1:=J3:=0; K1:=K2:=MODULUS-1;                                      08103400
     IF CODE!3 THEN                                                     08103450
    BEGIN                                                               08103460
     IF A.[6:6] NEQ 31 THEN J1:=K1:=(A.[6:18]+A.[24:24]) MOD MODULUS;   08103500
     IF B.[6:6] NEQ 31 THEN J3:=K2:=(B.[6:18]+B.[24:24]) MOD MODULUS;   08103600
    END;                                                                08103650
     IF ((INFOTYPE EQV "~      ")! NOT 0 AND CODE=0) THEN CODE:=5;  %RH 08103700
     IF CODE!0 OR (CODE=0 AND STA.[9:9]!0) THEN                     %RH 08103800
     HDR:=[M[SPACE(30)]]&30[8:38:10];                               %RH 08103900
     FOR J1:=J1 STEP 1 UNTIL K1 DO                                      08104000
     FOR J2:=J3 STEP 1 UNTIL K2 DO                                      08104100
     BEGIN J:=SCRAMBLE(J1,J2);                                          08104200
     DO BEGIN                                                           08104300
         BEGIN DISKWAIT(-NB.[CF],60,J);                                 08105000
              FOR I:=0 STEP 3 UNTIL 57 DO                               08107000
              IF (T:=NB[I]) NEQ @14 THEN                                08109000
              IF CODE=3 THEN COMMENT UD; GO GETHDR ELSE                 08110000
              IF (T EQV A)= NOT 0 OR (A EQV "~      ")= NOT 0 THEN      08111000
              IF(NB[I+1]EQV B)=NOT 0 OR(B EQV"~      ")=NOT 0 THEN      08112000
          IF CODE=0 AND USERID=0 THEN GO TO IN ELSE                     08113000
 GETHDR:      BEGIN T:=HDR.[CF]&NB[I+2][CTF];                           08114000
                     DISKWAIT(-T.[CF],30,T.[FF]);                       08115000
                   T:= HDR INX 0;                                       08115050
                   IF CODE=5 THEN FINDWHATINFO;                     %RH 08115060
               IF CODE=0 THEN IF SECURITYCHECK(NB[I],NB[I+1],USERID,T  )08115100
               !0 THEN GO TO IN ELSE GO TO AROUND;                      08115200
                   IF CODE=1 THEN COMMENT EX;                           08116000
                   BEGIN;                                               08116700
                        STREAM(A~CALCULATEPURGE(-HDR[3].[2:10]),B~[PG]);08116800
                        BEGIN SI~LOC A;DS~8 OCT END;                    08116900
                        IF PG>HDR[3].[12:18]                            08117000
                            THEN GO IN ELSE GO AROUND;                  08117100
                   END;                                                 08117105
                   IF ((NB[I]EQV "DECK   ")=NOT 0) AND                  08117110
                        (((NB[I+1]AND @77000000007777) EQV              08117120
                        @12000000003714)=NOT 0) OR                      08117130
         FALSE THEN GO AROUND; %                                        08117140
                   IF CODE=4 THEN COMMENT SB;                           08117200
                   IF HDR[5]=12 THEN GO AROUND; N~HDR[6];%              08117300
                   IF CODE}2 THEN COMMENT UD,CR,SB;                     08117400
                        IF(NOT(CR:=HDR[IF CODE=4 THEN 5 ELSE 2].[6:42]))08117500
                             =NOT 0 THEN GO AROUND;                     08117600
                   IF CODE=3 THEN COMMENT UD;                           08117700
                        IF(CR EQV A)!NOT 0 AND(A EQV "~      ")!NOT 0   08117800
                             THEN      GO TO AROUND;                    08117900
 IN:               BEGIN C:=GETSPACE(10,0,0)+2;                         08118000
                        STREAM(F:=[D[I]],CR,N,X:=(CODE}2 AND CODE<5),   08119000
                               Y:=CODE=4,INF:=CODE=5,INFO,INFNO:=   %RH 08119100
                               INFO.[1:5],C);                       %RH 08119200
                        BEGIN SI:=F; DS:=LIT" "; SI:=SI+1; DS:=7 CHR;   08120000
                             SI:=SI+1; DS:=LIT"/"; DS~7 CHR;            08121000
                            Y(DS:=8 LIT" SECURED";);                    08122000
                            X(DS:=4 LIT" BY "; SI:=LOC CR; SI~SI+1;     08123000
                              DS:=7 CHR);                               08124000
                            Y(DS:=LIT"/"; SI:=SI+1; DS:=7 CHR);         08125000
                            INF(CI:=CI+INFNO;GO ERR;GO INF1;GO INF2;    08125100
                                GO INF3;GO INF4;                    %RH 08125110
                                INF1:                               %RH 08125120
                                DS:=10LIT" CREATED: ";              %RH 08125130
                                DATE: SI:=LOC INFO;                 %RH 08125140
                                SI:=SI+2;DS:=2 CHR;2(DS:=LIT"/";    %RH 08125150
                                DS:=2 CHR);GO INFEND;               %RH 08125160
                                INF2:                               %RH 08125200
                                DS:=11LIT" ACCESSED: ";GO DATE;     %RH 08125210
                                INF3:                               %RH 08125300
                                DS:=10LIT" RECORDS: ";              %RH 08125310
                                DECM:                               %RH 08125320
                                SI:=LOC INFO;DS:=5 DEC;X:=DI;       %RH 08125330
                                DI:=DI-5;DS:=4 FILL;DI:=X;          %RH 08125340
                                GO INFEND;                          %RH 08125350
                                INF4:                               %RH 08125400
                                DS:=11LIT" SEGMENTS: ";GO DECM;     %RH 08125410
                                ERR: INFEND:);                      %RH 08125420
                             DS:=LIT"~";                                08126000
                        END;                                            08127000
                        SPOUT(C INX STA);                               08128000
 AROUND: END; END; END;                                                 08129000
     END UNTIL (J:=NB[2].[FF])=0;                                       08129100
     END;                                                               08129200
 OUT:    IF CODE!0 OR (CODE=0 AND STA.[9:9]!0) THEN FORGETSPACE(HDR);   08130000
XOUT:    FORGETSPACE(NB);                                               08130100
         IF C = 0 THEN                                                  08131000
         BEGIN M[BUFF]:=FLAG(NABS("NULL   "));                          08132000
              SPOUT(BUFF INX STA)                                       08133000
         END ELSE FORGETSPACE(BUFF);                                    08134000
    END PRINTDIRECTORY;                                                 08135000
$INCLUDE 08136299, IF DCSPO AND DATACOM AND NOT INQUIRY;                08135999
%XXXXX  THE ORDER OF THE FOLLOWING DECLARATIONS IS CRITICAL  XXXXXXXXXXX08136015
REAL MIXMASK,INFOMASK1,INFOMASK2,CCMASK1,CCMASK2;                       08136020
BOOLEAN PROCEDURE RHEOSTAT(TYPE,MASK,MIX,STA);                          08136030
                     VALUE TYPE,MASK,MIX,STA ;                          08136040
                     REAL  TYPE,MASK,MIX,STA ;                          08136050
BEGIN REAL A; LABEL EXIT;                                               08136060
      IF STA.[9:9]=0 THEN BEGIN RHEOSTAT~TRUE; GO TO EXIT; END;         08136065
      IF MIX!63 THEN                                                    08136070
              BEGIN A ~ 1; TACH(STA,MIX,A);                             08136080
                    IF A=0 THEN BEGIN RHEOSTAT ~ FALSE; GO TO EXIT; END;08136090
              END;                                                      08136100
           IF TYPE > 63 THEN BEGIN MASK~MASK+1; TYPE~TYPE-48 END;       08136120
      STREAM(B~0:TYPE,MASK);                                            08136130
              BEGIN SI ~ MASK; SKIP TYPE SB; DI ~ LOC B; DI ~ DI + 7;   08136140
                    IF SB THEN DS ~ LIT "1";                            08136150
              END;                                                      08136160
      RHEOSTAT ~ P;                                                     08136170
EXIT:                                                                   08136180
END RHEOSTAT;                                                           08136190
 PROCEDURE INFOMSGS;                                                    08137000
         BEGIN LABEL L;%                                                08138000
              P(XIT,.L,DEL);%                                           08139000
         L::: "PG",     % 1%                                            08140000
             "4MX",     % 2                                             08141000
              "DD",     % 3%                                            08142000
              "RW",     % 4%                                            08143000
             "4PD",     % 5                                             08144000
              "DB",     % 6%                                            08145000
              "DP",     % 7%                                            08146000
              "DT",     % 8%                                            08147000
              "DS",%9%                                                  08148000
              "PT",%10       PRINT ACCUMULATED TRACE OUTPUT             08149000
             "RS", %11%                                                 08150000
              "WY", %12                                                 08151000
             "4CC",%13                                                  08152000
             "4PB",%14                                                  08153000
              "RY",%15%                                                 08154000
              "TR",    %16%                                             08155000
              "OL",%17;%                                                08156000
              "LN",  %18%                                               08157000
             "4WD",%19                                                  08158000
             "4WT",%20                                                  08159000
              "LR",%21%      EXECUTE REMOTE LOG ANALYZER                08160000
              "RO",%22%                                                 08161000
              "SO",%23%                                                 08162000
             "4TO",%24                                                  08163000
              "SV",%25%                                                 08164000
              "LD",%26%                                                 08165000
             "4CD",%27                                                  08166000
              "RD",%28%                                                 08167000
              "RN",%29%                                                 08168000
              "ED",%30                                                  08168010
              "CI",%31       CHANGE INTRINSIC FILE ON DISK              08168020
             "4TF",%32       TYPE OUT MULTIPROCESSING FACTOR            08168030
              "SF",%33%      CHANGE MULTIPROCESSING FACTOR              08168040
             "4TS",%34       TYPE OUT SCHEDULE (NAMES IN SHEET)         08168050
              "RR",%35  REMOVE REMOTE SPO INDICATORS FROM STATION       08168060
              "QV",%36  SET OR TYPE "Q VALUE" FOR DCOM R/R TIME-OUT     08168070
             "4EX",%37                                                  08168080
              "MR",%12       RESERVE DISK FOR NO USER DISK              08168090
             "4LO",%39       LOG-OUT (FROM REMOTE STATION)              08168100
              "LI",%40       LOG-IN  (FROM REMOTE STATION)              08168110
             "4SS",%41       STATION TO STATION MESSAGE                 08168120
              "SM",%42       START MIX MESSAGES                         08168130
              "HM",%43       HALT  MIX MESSAGES                         08168140
              "TC",%44       TIME-AND-CHARGES (ELAPSED TIME SINCE LOGIN)08168150
              "ZZ",%45       EOT FROM REMOTE STATION SENSED BY INQUPT   08168160
              "BO",%46                                                  08168170
              "WP",%47       TYPE PROG IDS OF <MIX>S ASSIGNED TO STA    08168180
              "  ",% 48                                                 08168190
              "WU",% 49                                                 08168200
             "4LF",%50                                                  08168210
             "4LC",%51                                                  08168220
             "4LS",%52                                                  08168230
              "CM",%53     CHANGE MCP                                   08168240
              "WR",%54       REMOTE-LOG PRESENT                         08168250
             "4WM",%55       WHAT MCP                                   08168260
             "4BK",%56       BREAK FOR SPO                              08168270
              "BS",%57                                                  08168275
              "US",%58                                                  08168280
              "SC",%59                                                  08168290
              "CL", %   DS JOB USING UNIT                               08168300
              "QT",%    QT BY UNIT                                      08168310
             "4WI",%62       WHAT INTRINSICS                            08168400
             "4CU",%63       TYPE AMOUNT OF CORE IN USE FOR ALL MIXES   08168450
              "XD",% CREATE BADISK AREA                                 08168452
             "SY", % CREATE NEW STATISTICS FILE                         08168460
             "SL", % CREATE NEW JOB STATISTICS FILE                     08168470
             "SI", % SET STATISTICS INTERVAL TIMER                      08168480
             "4AU",%67                                                  08168490
             "OC",%69                                                   08168500
              "MC", %MAKE A COMPILER                                    08168510
              "~~";%                                                    08169000
         END;%                                                          08170000
 PROCEDURE PBIO(A,P); VALUE A; REAL A,P; FORWARD;                    %P 08170100
 PROCEDURE CONTINUITYBIT;%                                              08171000
         BEGIN REAL T,IOD,LINK,U;%                                      08172000
              ARRAY A[*];                                               08172500
              REAL RCW=+0;%                                             08173000
                            ARRAY R=-4[*];  DEFINE FIB=A#;           %P 08173100
              CHECKSTACKSPACE;%                                     %WF 08173200
              U ~(LINK ~ NFLAG(M[(IOD ~ NFLAG(M[T~PRT[P1MIX,9]]) INX%   08174000
                   P(0,LNG,XCH)) INX NOT 0])).[12:6];%                  08175000
              IF U } 32 THEN                                            08175100
                   BEGIN A ~ M[T];                                      08175200
                        IF READEMFROMDISK(CIDROW[U-32],A) THEN          08175300
                             M[T] ~ A&1[27:47:1]&0[2:47:1] ELSE         08175400
                             M[T] ~ R; GO TO RETURN;                    08175500
                   END;                                                 08175600
              M[IOD INX NOT 1]~FLAG(LINK); FIB~M[T-3];               %P 08176000
              M[FIB[14]INX 17]~[M[FIB[5].[FF]]]&IOD[3:3:30]&0[20:20:1]; 08177000
             ;FIB[5]~P(DUP,LOD,0,1,CFX,ADD);                         %P 08177100
              IF FIB[14].[FF]{FIB[14].[CF] THEN  %% BUFFER FULL      %P 08177200
                        PBIO(T,FIB[14])                              %P 08178000
                    ELSE                                             %P 08179000
              BEGIN; STREAM(A~FIB[14].[CF], B~FIB[14].[FF]);         %P 08179600
                     BEGIN SI~A; DS~18 WDS END;                      %P 08179700
                   FIB[14].[FF]~FIB[14].[FF]-18;                     %P 08179800
              END;                                                   %P 08179900
              GO RETURN                                              %P 08180000
         END CONTINUITYBIT;                                          %P 08181000
DEFINE PRINTWAIT(PRINTWAIT1)=PRINTORPUNCHWAIT(PRINTWAIT1,0)#;           08254000
BOOLEAN PROCEDURE PRINTORPUNCHWAIT(Q,PNCH);VALUE Q,PNCH;REAL Q,PNCH;    08255000
      BEGIN INTEGER U,V,I,J,S; DEFINE STA=PNCH#;                        08255500
         NAME D;                                                        08256000
         LABEL FOUND,QUIT;                                              08256500
          IF(S~DIRECTORYSEARCH("PRNPBT ","DISK   ",5))=0 THEN GO QUIT;  08256600
$ INCLUDE 08256701, IF DATACOM AND RJE AND NOT INQUIRY;                 08256699
         IF PNCH.[9:9]!0 THEN IF (GET(PNCH) AND 3)=1 THEN GO TO QUIT;   08256700
         IF Q}(-15) THEN  %%% PB GIVEN: LOOK FOR LP.                    08257000
         BEGIN                                                          08257100
$ INCLUDE 08257401, IF DATACOM AND RJE AND NOT INQUIRY;                 08257199
              IF PNCH.[9:9]!0 THEN                                      08257200
              IF PNCH THEN IF GET(PNCH).[37:3]=1 THEN V:=22             08257300
              ELSE ELSE IF GET(PNCH).[34:3]=1 THEN V:=20 ELSE ELSE      08257400
              IF PNCH THEN IF LABELTABLE[V:=22]!0 THEN V:=0 ELSE ELSE   08257500
              IF LABELTABLE[V~20]!0 THEN                                08257600
              IF LABELTABLE[V~21]!0 THEN V~0;                           08258000
              IF V!0 THEN IF Q>0 THEN STREAM(Q~[Q],U~[U]);              08258500
              BEGIN SI~Q; DS~8 OCT END ELSE                             08259000
              LABELTABLE[U~ABS(Q) OR @40000].[1:5]~16;                  08259500
$ INCLUDE 08259601, IF DATACOM AND RJE AND NOT INQUIRY;                 08259599
              STA:=PNCH.[9:9];                                          08259600
         END ELSE                                                       08260000
         BEGIN V~ABS(Q);                                                08260500
$ INCLUDE 08260901, IF DATACOM AND RJE AND NOT INQUIRY;                 08260899
              IF (STA:=PNCH.[9:9])=0 THEN                               08260900
              FOR I~0 STEP 1 UNTIL 15 DO                                08261000
              IF (((MULTITABLE[I] EQV "PBTMCP ")=NOT 0 AND V!22) OR     08261500
                  ((MULTITABLE[I] EQV "PUTMCP ")=NOT 0 AND V=22)) THEN  08261600
              IF ((LABELTABLE[I] EQV @222212342546447)=NOT 0) OR        08262000
                 ((LABELTABLE[I] EQV @122212342546447)=NOT 0) AND       08262500
                 AUTOPRINT THEN                                         08263000
              BEGIN LABELTABLE[U~I].[1:5]~@20;                          08263500
                   RRRMECH~TWO(U) OR RRRMECH;                           08264000
                   I~16; U~U+@40000                                     08265000
              END SEARCHING FOR TAPE;                                   08266000
              IF ((U=0 AND AUTOPRINT) OR STA!0) AND PBCOUNT!0 THEN      08267000
              BEGIN D~[M[GETSPACE(61,0,0)+2]];                          08267500
                   LOCKDIRECTORY;                                       08268000
                   FOR J~DIRECTORYTOP+19 STEP 16 WHILE TRUE DO          08268500
                   BEGIN DISKIO(I,1-D.[CF],30,J); SLEEP([I],IOMASK);    08269000
                        FOR Q~28 STEP -2 UNTIL 0 DO                     08269100
                        IF(D[Q] EQV@114)=NOT 0 THEN                     08269200
                        BEGIN UNLOCKDIRECTORY;                          08269300
                             FORGETSPACE(D);                            08269310
$ INCLUDE 08269351, IF DATACOM AND RJE AND NOT INQUIRY;                 08269319
                             IF STA!0 THEN IF V=22 THEN                 08269320
                             STATION[STA.[44:4],STA.[39:4]].[37:1]      08269330
                             :=0 ELSE STATION[STA.[44:4],STA.[39:4]]    08269340
                             .[34:1]:=0;                                08269350
                             GO TO QUIT;                                08269360
                        END ELSE                                        08269400
                        IF(((D[Q] EQV"PBD    ")=NOT 0) AND (V!22)) OR   08269500
                          (((D[Q] EQV"PUD    ")=NOT 0) AND (V=22)) THEN 08269550
                        IF D[Q+1].[CF]=1 THEN                           08269600
BEGIN DISKIO(I,-30-D.[CF],30,J-(30-Q)DIV 2);                            08269700
                             SLEEP([I],IOMASK);                         08269800
                             IF D[35].[1:3]!0 OR D[35].[16:20]!0        08269900
$ INCLUDE 08269931, IF DATACOM AND RJE AND NOT INQUIRY;                 08269929
                                  OR D[37]!STA                          08269930
                                  OR D[35].[6:1]                        08269940
                                  OR D[40].[1:28]!0 THEN ELSE           08269950
                             BEGIN D[35].[6:1]:=1;PBCOUNT:=PBCOUNT-1;   08270000
                                  DISKIO(I,D INX 30,30,J-(30-Q)DIV 2);  08270100
                                  STREAM(D~D[Q+1],U~[U]);               08270200
                                  BEGIN SI~LOC D; DS~5 OCT END;         08270300
                                  SLEEP([I],IOMASK); GO FOUND;          08270400
                   END; END; END;                                       08270500
    FOUND:        UNLOCKDIRECTORY; FORGETSPACE(D);                      08270600
              END SEARCHING FOR DISK;                                   08270700
         END; IF U!0 AND V!0 THEN                                       08270800
         BEGIN                                                          08270810
$INCLUDE 08270841, IF DATACOM AND RJE AND NOT INQUIRY;                  08270819
              IF STA!0 THEN                                             08270820
              IF V=22 THEN STATION[STA.[44:4],STA.[39:4]].[37:1]:=1     08270830
              ELSE STATION[STA.[44:4],STA.[39:4]].[34:1]:=1 ELSE        08270840
              LABELTABLE[V]:=@2147513145632551;                         08270850
               M[(I~ S INX 2) - 4].[9:6] ~ S~0;                         08270900
                    STREAM(A~U&V[18:33:15],I);%                         08271000
                        BEGIN DS ~ 23 LIT "CC EXECUTE PRNPBT/DISK;";%   08272000
                             DS ~ 7 LIT "COMMON="; SI ~ LOC A;%         08273000
                             DS~6 DEC;                                  08274000
                        DS~27LIT";STACK=150;PRIORITY=0;END. ";%     %WF 08275000
                             5(DS~2 LIT " ");                           08275100
                        END;%                                           08276000
                   INDEPENDENTRUNNER(P(.CONTROLCARD),                   08276900
$ INCLUDE 08276951, IF DATACOM AND RJE AND NOT INQUIRY;                 08276949
                        IF STA!0 THEN I&30[3:43:5]&STA[9:39:9] ELSE     08276950
                        I&31[3:43:5]);                                  08277000
                   PRINTORPUNCHWAIT~TRUE;                               08277100
                   END ELSE                                             08278000
                                                                        08279000
    QUIT:                                                               08280000
$ INCLUDE 08280011, IF DATACOM AND RJE AND NOT INQUIRY;                 08280009
          IF STA = 0 THEN  %NOT RJE                                     08280010
          IF V ! 0 THEN LABELTABLE[V]:=0;                               08280020
         IF S!0 THEN FORGETSPACE(S);                                    08280100
         END PRINTWAIT;%                                                08281000
    PROCEDURE PRINTBACKUP(BUFF); VALUE BUFF; REAL BUFF;              %P 08282000
    BEGIN REAL U,I,STA,B=BUFF;                                          08283000
          LABEL S,T,F;                                                  08284000
$ INCLUDE 08284501, IF DATACOM AND RJE AND NOT INQUIRY;                 08284499
          IF GET(NT1:=0&BUFF[9:6:9]) THEN STA:=NT1;                     08284500
          STREAM(N~0:B~BUFF);                                        %P 08285000
          BEGIN SI~B; DI~LOC N;                                      %P 08286000
          L:  IF SC=" " THEN BEGIN SI~SI+1; GO TO L END;             %P 08287000
              IF SC<"0" THEN BEGIN DS~5 LIT"+0000"; DS~3 CHR END ELSE%P 08288000
              BEGIN        ; N~SI;                                   %P 08289000
                   4(IF SC<"0" THEN JUMP OUT; TALLY~TALLY+1; SI~SI+1);  08289500
                   SI~N; B~TALLY; DS~B OCT; SI~SI-B; DI~DI-3; DI~DI-B;  08290000
                   DS~B CHR;                                         %P 08290500
          END;END;                                                   %P 08291000
          IF (U~P)<0 THEN                                            %P 08291500
          BEGIN IF NOT MTXIN(I,U,B   ) THEN                             08292000
               IF (STA:=MULTITABLE[U]!"PBTMCP " OR STA) AND             08293500
               MULTITABLE[U]!"PUTMCP " THEN                             08293600
               BEGIN; STREAM(BUFF);                                     08294000
               DS~29 LIT "NOT PRINT/PUNCH BACK-UP TAPE~";               08294100
$ INCLUDE 08294301, IF RJE AND DATACOM AND NOT INQUIRY;                 08294299
    S:             SPOUT(BUFF&STA[9:9:9]);                              08294300
$ OMIT 08294501, IF RJE AND DATACOM AND NOT INQUIRY;                    08294499
    S:             SPOUT(BUFF)                                       %P 08294500
               END ELSE                                               %P08295000
               IF PRINTORPUNCHWAIT(-U,STA) THEN                         08295500
               GO F ELSE GO T ELSE GO S                                 08295600
          END ELSE  BEGIN BUFF~BUFF.[15:15]-1;                       %P 08296000
                IF(I~DIRECTORYSEARCH("PBD    ",U&1[CTC],5))=0 THEN      08296400
                IF(I~DIRECTORYSEARCH("PUD    ",U&1[CTC],5))=0 THEN GO S 08296500
                ELSE STA:=STA OR 1;                                     08296550
                   IF PBCOUNT<1 THEN PBCOUNT~1;                         08296600
               FORGETSPACE(I);IF PRINTORPUNCHWAIT(U.[6:24],STA) THEN    08297000
 F:                FORGETSPACE(BUFF) ELSE                               08297200
 T:           BEGIN M[BUFF]~FLAG(-"NULL   "); GO TO S END               08297500
    END;  END PRINTBACKUP KEYBOARD MESSAGE HANDLER;                  %P 08298000
 SAVE PROCEDURE INITIALIZE;   FORWARD;                                  08303000
 REAL ACTDATE=INITIALIZE;                                               08303100
 SAVE REAL PROCEDURE COREND;   FORWARD;                                 08303200
 REAL WEEKDAY=COREND;                                                   08303300
 PROCEDURE TIMEOUT (B); VALUE B; REAL B;%                               08305000
         BEGIN INTEGER M,H,C;%                                          08306000
              C ~XCLOCK/3600;%                                          08307000
              M ~ C MOD 60;%                                            08308000
              H ~ C DIV 60;%                                            08309000
              STREAM(H,M,B);%                                           08310000
                   BEGIN DS ~ 9 LIT " TIME IS ";%                       08311000
                        SI ~ LOC H; DS ~ 2 DEC; DS ~ 2 DEC;%            08312000
                        DS ~ LIT "~"%                                   08313000
                   END;%                                                08314000
              SPOUT(B INX MEMORY[B-1]);                                 08315000
         END;%                                                          08316000
PROCEDURE GIMEDATE(B,DT); VALUE B,DT; REAL B,DT;                        08317000
    %% PARAMETER USE IS:                                                08317100
       %% B=OUTPUT AREA FOR MESSAGE OR DATE                             08317200
       %%DT=0 RECONVERT ACTDATE,WEEKDAY THEN SPOUT TIME MSG             08317300
       %% DT>0 SPOUT TIME MSG ONLY                                      08317400
       %% DT<0 CONVERT MMDDYY USING DT (ACTDATE,WEEKDAY NOT CHANGED)    08317500
         BEGIN  REAL M,D,Y,NCV,NMG;                                     08318000
              REAL SUBROUTINE DAY;                                      08318100
              BEGIN;STREAM(M:X~0,Y~0,Z~0);                              08318200
                    BEGIN DI~LOC X; DS~24 LIT"000~0%1.1Y2G2V3D3T4A4 5>";08318300
                          SI~LOC X; SI~SI+M; SI~SI+M;                   08318400
                          DI~LOC M; DI~DI+6; DS~2 CHR;                  08318500
                    END;                                                08318600
                    DAY~P;                                              08318700
              END DAY;                                                  08318800
              LABEL DAYS;                                               08318900
              LABEL ON;;%                                               08319000
              IF NOT (NCV~(DT>0))  THEN   % NOT PRINT ONLY              08319700
              BEGIN                                                     08319900
              STREAM(DATE~IF (NMG~DT.[1:1]) THEN DT ELSE DATE,R~[Y]);   08320000
                   BEGIN SI ~ LOC DATE; SI ~ SI+3;%                     08321000
                        DS~2 OCT; DI~DI-16; DS~3 OCT;                   08322000
                   END;%                                                08323000
              IF Y MOD 4 = 0 AND Y ! 0 THEN%                            08324000
                   BEGIN IF D = 60 THEN%                                08325000
                                 BEGIN M~2; GO ON END;                  08326000
                        IF D > 60 THEN D ~D-1;%                         08327000
                   END;%                                                08328000
              FOR M~1 STEP 1 UNTIL 11 DO                                08329000
                   IF DAY}D THEN GO ON;                                 08330000
         ON:  M~M-1;                                                    08331000
              D~D-DAY;                                                  08332000
              IF M<2 THEN P(Y-1,M+11) ELSE P(Y,M-1);                    08332100
              P(26,|,2,-,10,IDV,D,+,XCH,P(DUP).[36:10],+,+,7,RDV,5,ISN);08332200
              :: P(.DAYS,+,LOD);                                        08332300
              M~M+1;                                                    08332400
              END ELSE P(WEEKDAY);                                      08332500
              STREAM(M~[M],NMG,NCV,MDY~[ACTDATE],B,DW~[WEEKDAY]);       08333000
                   BEGIN  NMG(JUMP OUT TO NOMSG);                       08334000
                        SI~LOC M; SI~SI-16;                             08334100
                        NCV(SI~SI+2; JUMP OUT TO NOCNV);                08334300
                        DS~WDS; SI~SI-6;                                08334500
    NOCNV:              DI~B; DS~9 LIT" DATE IS "; DS~6 CHR;            08334700
                        DS~5 LIT"DAY, "; B~DI; NCV(JUMP OUT TO NULCV);  08334900
    NOMSG:              SI~M; NMG(DI~B; JUMP OUT TO NULMS);             08335000
                        DI~MDY;                                         08335200
    NULMS:              DS~4 DEC; DS~2 DEC; DS~2 DEC;                   08335400
                        NMG(JUMP OUT TO OXIT);  DI~B;                   08335600
    NULCV:              SI~MDY; SI~SI+2;                                08335800
                        DS~2 CHR; 2(DS~LIT "/"; DS~2 CHR);              08336000
                        DS ~ LIT "~"; SI ~B;%                           08337000
                        3(DI ~ B; DS ~ FILL; SI ~ SI+3; B ~SI);%        08338000
    OXIT:          END;                                                 08339000
              IF DT}0 THEN                                              08339500
              IF NOT NMG THEN SPOUT(B INX MEMORY[B-1]);                 08340000
              P(XIT);                                                   08340100
    DAYS:::   "   MON","  TUES","WEDNES"," THURS","   FRI"," SATUR",    08340200
              "   SUN";                                                 08340300
         END;%                                                          08341000
DEFINE DATEOUT(DATEOUT1)=GIMEDATE(DATEOUT1,0)#; %CHANGE DATE & SPOUT IT 08342000
 PROCEDURE SETDATE(BUFF); VALUE BUFF; REAL BUFF;%                       08343000
         BEGIN REAL DY,MN,YR; INTEGER D=DY; REAL B,T=MN;                08344000
               REAL SUBROUTINE C;                                       08344100
              BEGIN;STREAM(C~0:B~[B]);                                  08344200
                   BEGIN%                                               08345000
                        SI ~ B; SI ~ SI+5; SI ~ SC;%                    08346000
                   L:   IF SC < "0" THEN%                               08347000
                             BEGIN IF SC = "~" THEN GO TO X;%           08348000
                                  SI ~ SI+1; GO TO L;%                  08349000
                             END;%                                      08350000
                   K:   IF SC } "0" THEN%                               08351000
                             BEGIN TALLY ~ TALLY+1;%                    08352000
                                  SI ~ SI+1; GO TO K END;%              08353000
                        DI ~ B; B ~ SI; SI ~ LOC B; DS ~ WDS;%          08354000
                        SI ~ B; B ~ TALLY; DI ~ LOC C;%                 08355000
                        SI ~ SI-B; DS ~ B OCT;%                         08356000
                   X:END;%                                              08357000
                    C~P;                                                08358000
              END C;                                                    08358100
              B ~ BUFF;%                                                08359000
              MN~C; DY~C; YR~C;                                         08360000
              BUFF ~ BUFF.[15:15]-1;%                                   08361000
              IF MN > 0 AND MN { 12 AND%                                08362000
                   DY > 0 AND DY { 31 AND%                              08363000
                   YR > 0 THEN%                                         08364000
              BEGIN;STREAM(M~MN-1:X~0,Y~0,Z~0);                         08365000
                    BEGIN DI~LOC X; DS~24 LIT"000~0%1.1Y2G2V3D3T4A4 5>";08365100
                          SI~LOC X; SI~SI+M; SI~SI+M;                   08365200
                          DI~LOC M; DI~DI+6; DS~2 CHR;                  08365300
                    END;                                                08365400
              DY~P+DY;                                                  08366000
              IF YR MOD 4 = 0 AND MN > 2 AND(YR MOD 100 ! 0 OR%         08367000
                        YR MOD 400 = 0) THEN%                           08368000
                   DY ~ DY+1;%                                          08369000
              D ~ YR MOD 100 | 1000+DY;%                                08370000
              STREAM(D,A~[DATE]);%                                      08371000
                   BEGIN SI ~ LOC D; DS ~ 8 DEC END;%                   08372000
              CHANGEDATE(BUFF);%                                        08373000
              END ELSE SPOUT(BUFF INX MEMORY[BUFF -1]);                 08374000
         END;%                                                          08375000
 PROCEDURE CHANGEDATE(BUFF); VALUE BUFF; REAL BUFF;%                    08376000
         BEGIN REAL B,T;%                                               08377000
              SLEEP([TOGLE],HOLDMASK);                                  08378000
              HOLDFREE ~ 0;%                                            08379000
              B ~ GETSPACE(30,0,0)+2;%                                  08380000
              DISKWAIT(-B,-30,DIRECTORYTOP);                            08381000
              M[B+1] ~ DATE;%                                           08383000
              M[B+18]:=XCLOCK;                                          08383100
              DISKIO(T,B-1,-30,DIRECTORYTOP);                           08384000
              IF BUFF!0 THEN                                            08384100
              DATEOUT (BUFF);%                                          08385000
              SLEEP([T],IOMASK);%                                       08386000
              FORGETSPACE(B);%                                          08387000
              HOLDFREE ~ 1;%                                            08388000
         END;%                                                          08389000
 PROCEDURE SETIME(BUFF); VALUE BUFF; REAL BUFF;%                        08390000
         BEGIN REAL B=BUFF,T;%                                          08391000
              REAL I,R;%                                                08392000
              LABEL EXIT;%                                              08393000
              REAL CLOCK=XCLOCK;%                                       08394000
              INTEGER CLCK=CLOCK;;%                                     08395000
              T ~ -1;%                                                  08396000
              STREAM(B,T~[T]);%                                         08397000
                   BEGIN SI ~ B;%                                       08398000
                   L:   IF SC = " " THEN%                               08399000
                             BEGIN SI ~ SI+1; GO TO L END;%             08400000
                        IF SC < "0" THEN GO TO X;%                      08401000
                   K:     IF SC } "0" THEN%                             08402000
                             BEGIN SI ~ SI+1; TALLY ~ TALLY+1;%         08403000
                                       GO TO K END;%                    08404000
                        B ~ TALLY; SI ~ SI-B; DS ~ B OCT;%              08405000
                   X:%                                                  08406000
                   END;%                                                08407000
              BUFF ~ BUFF.[15:15]-1;%                                   08408000
              IF T } 0 AND T DIV 100 < 24 AND T MOD 100 < 60 THEN%      08409000
                   BEGIN CLCK ~ (T DIV 100 | 60 + T MOD 100)|3600;%     08410000
                        CLOCK ~ (CLOCK OR @77)+1;%                      08411000
                        TIMEOUT (BUFF);%                                08412000
                        GO TO EXIT;%                                    08413000
                   END;%                                                08414000
              SPOUT(BUFF INX MEMORY[BUFF-1]);                           08415000
         EXIT:%                                                         08416000
         END;%                                                          08417000
 REAL PROCEDURE FORMESS(BUFF,H1); VALUE BUFF,H1; REAL BUFF,H1;          08418000
    BEGIN REAL B,H,U,M1;                                                08418500
         INTEGER I;                                                     08418700
         LABEL AGAIN,EXIT;                                              08419000
         M1:=M[BUFF.[15:15]-2];                                         08419100
         STREAM(BUFF:);                                                 08419200
         BEGIN SI:=BUFF;                                                08419300
           L: IF SC=" " THEN BEGIN SI:=SI+1; GO TO L END;               08419400
              BUFF:=SI;                                                 08419500
         END;                                                           08419600
         BUFF:=P;                                                       08419700
AGAIN:   U:=FORMESS:=UNITIN(TINU,BUFF);                                 08420000
         IF U{31 THEN BEGIN SLEEP([TOGLE],STATUSMASK);                  08421000
              IF LABELTABLE[U] < 0 THEN%                                08422000
              BEGIN STREAM(A:=TINU[U],B:=B:=SPACE(5));                  08424000
                        BEGIN SI ~ LOC A; SI ~ SI + 5; DS ~ 3 CHR;%     08425000
                        DS ~ 8 LIT" IN USE~";%                          08426000
                   END;%                                                08427000
                   SPOUT(B); FORMESS ~ -1;%                             08428000
                   GO TO EXIT; END;%                                    08429000
                   LABELTABLE[U]:=@114&H1[1:47:1];                      08430000
                   MULTITABLE[U] ~ 0;%                                  08431000
                   I ~ TWO(U);%                                         08432000
                   IF H1 THEN B:=NOT 0 ELSE                             08433000
                   BEGIN B:=NOT I; H:=I:=0;                             08434000
                        IF U=23 THEN H:=P(.READERA);                    08434100
                        IF U=24 THEN H:=P(.READERB);                    08434200
                        IF H!0 THEN                                     08434300
                        BEGIN UNITCODE[U-23]:=-0;                       08434400
                             IF (*H).[CF]!0 THEN                        08434500
                             BEGIN FORGETSPACE(*H-2);                   08434600
                                  M[H]:=0;                              08434700
                             END;                                       08434800
                        END;                                            08434900
                   END;                                                 08434950
                   READY ~ READY AND B OR I;%                           08435000
                   RRRMECH ~ RRRMECH AND B OR I;%                       08436000
              SAVEWORD ~ SAVEWORD AND B OR I;%                          08437000
              END;                                                      08437050
EXIT:    IF NOT H1 THEN                                                 08437100
         BEGIN IF U GTR 31 THEN                                         08437150
              BEGIN STREAM(BUFF,B:=B:=SPACE(5));                        08437200
                   BEGIN DS:=10 LIT"INV KBD RY";                        08437250
                        SI:=BUFF; DS:=3 CHR;                            08437300
                        DS:=LIT"~";                                     08437350
                   END;                                                 08437400
                   SPOUT(B INX M1);                                     08437450
              END;                                                      08437500
              STREAM(OK:=0,BUFF:);                                      08437550
              BEGIN SI:=BUFF;                                           08437600
                   3(IF SC=" " THEN JUMP OUT;                           08437650
                     IF SC="," THEN JUMP OUT;                           08437700
                     IF SC="~" THEN JUMP OUT TO L3;                     08437750
                     SI:=SI+1);                                         08437800
              L1:  IF SC=" " THEN                                       08437850
              L2:  BEGIN SI:=SI+1; GO TO L1 END;                        08437900
                   IF SC="," THEN GO TO L2;                             08437950
                   BUFF:=SI;                                            08438000
                   IF SC!"~" THEN TALLY:=1;                             08438050
              L3:  OK:=TALLY;                                           08438100
              END;                                                      08438150
              BUFF:=P;                                                  08438200
              IF P THEN GO AGAIN;                                       08438250
              FORMESS:=-1;                                              08438300
         END;                                                           08438350
    END;                                                                08438500
 PROCEDURE OUTPUTLABEL(B); VALUE B; REAL B;%                            08439000
    BEGIN REAL BU=B,U,T,A;%                                             08440000
         REAL G,Q;%                                                     08441000
                    REAL TUSTA,TEMP;                                    08441050
         BOOLEAN SCRTOG;                                                08441100
         LABEL EXIT;%                                                   08442000
         SUBROUTINE DOIT;%                                              08443000
              BEGIN; STREAM(A~TINU[U]:B);%                              08444000
                  BEGIN SI ~ LOC A; SI ~ SI+5; DS ~ LIT" ";%            08445000
                        DS ~ 3 CHR; DS ~ LIT " "; A ~ DI END;%          08446000
                   A ~ P; T ~ LABELTABLE[U];%                           08447000
                    IF U LSS 16 THEN TEMP:=PRNTABLE[U].[30:18];         08447100
                    IF T=0 THEN                                         08448000
                    STREAM(B:=TEMP,V:=(U LSS 16),A);                    08448050
                    BEGIN SI:=LOC V;SI:=SI+7;                           08448100
                    IF SC NEQ "0" THEN BEGIN SI:=LOC B;DS:=5DEC END;    08448110
                                          DS:=9LIT" SCRATCH~" END       08448150
                   ELSE IF T = @114 OR T = @214 THEN%                   08449000
                             STREAM(A); DS ~ 10 LIT "NOT READY~"%       08450000
                    ELSE IF T=@314 THEN                                 08451000
                    STREAM(B:=TEMP,V:=(U LSS 16),A);                    08451100
                    BEGIN SI:=LOC V; SI:=SI+7;                          08451200
                    IF SC NEQ "0" THEN BEGIN SI:=LOC B;DS:=5DEC END;    08451210
                          DS:=11 LIT " UNLABELED~";                     08452000
                    END                                                 08452100
                   ELSE BEGIN;%                                         08453000
                    STREAM(K:=IF T LSS 0 THEN "IN USE " ELSE "LABELED": 08454000
                           B:=TEMP,V:=(U LSS 16),A);                    08454100
                    BEGIN SI:=LOC V; SI:=SI+7;                          08455000
                    IF SC NEQ "0" THEN BEGIN SI:=LOC B; DS:=5DEC ;      08455005
                                           DS:=LIT " " END;             08455010
                                 SI:=LOC K; SI:=SI+1;                   08455100
                             DS ~ 7 CHR; DS ~ LIT " ";%                 08456000
                             K ~ DI;%                                   08457000
                        END;%                                           08458000
                   A ~ P;%                                              08459000
                   IF (NT1 ~ RDCTABLE[U].[8:6]) ! 0 THEN%               08460000
                   IF JARROW[NT1] ! 0 THEN%                             08461000
                        BEGIN;STREAM(J~JARROW[NT1]:NT1,A);%             08462000
                             BEGIN DS ~ 3 LIT "BY "; SI ~ J;%           08463000
                                  SI ~ SI+1; DS ~ 7 CHR;%               08464000
                                  DS ~ LIT "/"; SI ~ SI+1;%             08465000
                                  DS ~ 7 CHR; DS ~ LIT "=";%            08466000
                                  SI~LOC NT1; DS~2DEC;                  08467000
                                  DS ~ LIT ":"; J ~ DI;%                08468000
                                  DI~DI-3; DS~FILL;                     08468500
                             END;%                                      08469000
                             A ~ P;%                                    08470000
                        END;%                                           08471000
                   STREAM(S~0:K~MULTITABLE[U],T,R~RDCTABLE[U].          08472000
                        [14:10],D~RDCTABLE[U].[24:17],C~RDCTABLE[U].%   08473000
                        [41:7],A); BEGIN SI ~ LOC K;%                   08474000
                        2(SI ~ SI+1; DS ~ 7 CHR; DS ~ LIT " ");%        08475000
                        DS ~ 3 DEC; DS ~ LIT " ";%                      08476000
                        DS ~ 5 DEC; DS ~ LIT " ";%                      08477000
                        DS ~ 2 DEC; DS ~ LIT "~";%                      08478000
                        S~DI;                                           08478500
                        END;                                            08478600
                   A~P;                                                 08478700
                   IF U}32 THEN IF CIDROW[U   -32]!0 THEN               08478800
                        STREAM(DK~CIDTABLE[U   -32,2],A);               08478900
                             BEGIN                                      08479000
                             DI~DI-1;                                   08479100
                             DS~6 LIT ",DECK ";                         08479200
                             SI~LOC DK; SI~SI+1;                        08479300
                             DS~7 CHR;                                  08479400
                             END;                                       08479500
                        END;                                            08479600
                   SPOUT(B INX TUSTA);                                  08480000
                   B ~ 0;%                                              08481000
              END;%                                                     08482000
         TUSTA~M[B.[15:15]-2];                                          08482050
         IF (U ~ UNITIN(TINU,B)){ PSEUDOMAXT  THEN                      08483000
              BEGIN B ~ B.[15:15]-1;%                                   08484000
                   DOIT;%                                               08485000
                   GO TO EXIT;%                                         08486000
              END;%                                                     08487000
$ OMIT 08487101, IF SHAREDISK;                                          08487099
         SCRTOG ~ U = PSEUDOMAXT + 1;                                   08487100
$ INCLUDE 08487201, IF SHAREDISK;                                       08487199
         SCRTOG:=U=PSEUDOMAXT+5;                                        08487200
         STREAM(A~0:B);%                                                08488000
              BEGIN SI ~ B;%                                            08489000
              L:   IF SC = " " THEN%                                    08490000
                        BEGIN SI ~ SI+1; GO TO L END;%                  08491000
                   DI ~ LOC A; DI ~ DI+6; DS ~ 2 CHR;%                  08492000
              END;%                                                     08493000
         Q ~ P; B ~ B.[15:15]-1;%                                       08494000
         FOR U ~ 0 STEP 1 UNTIL PSEUDOMAXT DO                           08495000
              IF TINU[U].[30:12] = Q THEN%                              08496000
              IF (G ~ LABELTABLE[U])!0 AND G!@114 AND G!@214            08497000
                   AND NOT SCRTOG OR G=0 AND SCRTOG THEN                08497100
                   BEGIN IF B = 0 THEN B ~ GETSPACE(10,0,0)+2;%         08498000
                        DOIT;%                                          08499000
                   END;%                                                08500000
         IF B ! 0 THEN%                                                 08501000
              BEGIN;STREAM(Q,B);%                                       08502000
                        BEGIN DS ~ 6 LIT " NULL ";%                     08503000
                             SI ~ LOC Q; SI ~ SI+6; DS ~ 2 CHR;%        08504000
                             DS ~ 7 LIT " TABLE~";%                     08505000
                        END;%                                           08506000
                   SPOUT(B INX TUSTA);                                  08507000
              END;%                                                     08508000
    EXIT: END;%                                                         08509000
 PROCEDURE MIXMSGS;                                                     08510000
         BEGIN LABEL L; P(XIT,.L,DEL);%                                 08511000
    L:::      "6DS", %  1                                               08512000
              "1IL", %  2                                               08513000
              "1OU", %  3                                               08514000
              "5OK", %  4                                               08515000
              "1FM", %  5                                               08516000
              "5AX", %  6                                               08517000
              "1FR", %  7                                               08518000
              "1OF", %  8                                               08519000
              "6TI", %  9                                               08520000
              "5WY", % 10                                               08521000
              "5RM", % 11                                               08522000
              "1UL", % 12                                               08523000
              "6ST", % 13                                               08523100
              "6IN", % 14                                               08523200
              "6OT", % 15                                               08523300
              "6QT", % 16                                               08523400
              "2PR", % 17                                               08523500
              "3PS", % 18                                               08523600
              "3XS", % 19                                               08523700
              "7ES", % 20                                               08523800
              "2SM", % 21                                               08523900
              "2HR", % 22                                               08524000
              "6CT", % 23    CHANGE TIME LIMITS OF A JOB IN THE MIX     08524100
              "6XT", % 24    EXTEND TIME LIMITS OF A JOB IN THE MIX     08524200
              "6TL", % 25    TYPE I-O AND PROCESSOR TIME LIMITS         08524300
              "2SS", % 26    TYPE SS MESSAGE TO USERS OF <MIX>          08524400
              "2WU", % 27    TYPE USER IDS OF REMOTES ASSIGNED TO <MIX> 08524500
              "2WA", % 28    TYPE STA #S OF STAS ASSIGNED TO <MIX>      08524600
              "2HM", % 29 STOP MESSAGES FOR A GIVEN MIX                 08524700
              "6CU", % 30    TYPE AMT OF CORE IN USE FOR A GIVEN MIX    08524800
              "7BK", % 31    BREAK OF MIX MESSAGES FOR SPO              08524900
              "6AU", % 32    TYPE AMT OF CORE IN USE FOR GIVEN MIX      08524910
              "3TS",%33 SCHED TS                                        08524920
              "0~~"; % END-OF-TABLE MARKER                              08524980
         END;                                                           08524990
 PROCEDURE    TIMEUSED(B, X);                                           08525000
    VALUE     B, X;                                                     08526000
    REAL      B, X;                                                     08527000
    BEGIN INTEGER  T, H, M, S, CPT, IOT, ET;                            08528000
         REAL SUBROUTINE CONVERTIME;                                    08529000
         BEGIN S ~ T-60|(T ~ T DIV 60);                                 08530000
              M ~ T-60|(H ~ T DIV 60);                                  08531000
              STREAM(R~0: A~[H]);                                       08532000
              BEGIN DI~LOC R; DI~DI+2; SI~A; 3(DS~2 DEC) END;           08533000
              CONVERTIME ~ POLISH                                       08533100
         END;                                                           08533200
         T ~ JAR[X,3]+PROCTIME[X];                                      08533400
         IF X=P2MIX OR X=P1MIX THEN T ~ T+CLOCK+P(RTR);                 08533500
         T ~ T/60;  CPT ~ CONVERTIME;                                   08534000
         T ~ JAR[X,4]+IOTIME[X];                                        08535000
         WHILE T<0 DO T ~ T+CLOCK+P(RTR);                               08536000
         T ~ T/60;  IOT ~ CONVERTIME;                                   08537000
         T ~ ((CLOCK+P(RTR))/60)-NFO[(X-1)|NDX+2].[1:17];               08538000
         ET ~ CONVERTIME;                                               08538500
         STREAM(J~JARROW[X],X,T~[CPT],B);                               08540000
         BEGIN DS~10 LIT " TIME FOR "; SI~J; SI~SI+1; DS~7 CHR;         08540100
              SI~SI+1; DS~LIT "/"; DS~7 CHR; DS~LIT"=";                 08540200
              SI~LOC X; DS~2 DEC; X~DI; DI~DI-2; DS~FILL;               08540300
              DI~X; DS~8 LIT " IS: CP="; SI~T; SI~SI+2;                 08541000
              3(DS~LIT ":"; DS~2 CHR);                                  08542000
              X~DI; DI~DI-9; DS~8 FILL; DI~X;                           08543000
              DS~5 LIT ", IO="; SI~SI+2;                                08544000
              3(DS~LIT ":"; DS~2 CHR);                                  08544100
              X~DI; DI~DI-9; DS~8 FILL; DI~X;                           08544200
              DS~3 LIT " IN"; SI~SI+2;                                  08544300
              3(DS~LIT ":"; DS~2 CHR); DS~LIT "~";                      08544400
              DI~DI-10; DS~8 FILL                                       08544500
         END;                                                           08544600
         SPOUT(B INX MEMORY[B-1]);                                      08544700
              COMMENT MESSAGE PRESENTLY 72 CHARACTERS LONG;             08544800
    END;                                                                08545000
 REAL PROCEDURE ANVIL(IL,Z); VALUE IL,Z; REAL IL,Z;%                    08546000
         BEGIN REAL B=Z,U=+1;%                                          08547000
              IF (U ~ UNITIN(TINU,B)) { PSEUDOMAXT THEN                 08548000
              BEGIN%                                                    08549000
              IF LABELTABLE[U] = @114 OR LABELTABLE[U] = @214 THEN%     08550000
                   BEGIN;STREAM(A~TINU[U],X~Z.[15:15]-1);%              08551000
                             BEGIN SI ~ LOC A; SI ~ SI+5;%              08552000
                                  DS ~ 3 CHR; DS ~ 11 LIT " NOT READY~";08553000
                             END;%                                      08554000
                        U ~ PSEUDOMAXT + 1;                             08555000
                   END;%                                                08556000
              IF LABELTABLE[U] < 0 THEN%                                08557000
                   BEGIN;STREAM(A~TINU[U],X~Z.[15:15]-1);%              08558000
                             BEGIN SI ~ LOC A; SI ~ SI+5;%              08559000
                                  DS ~ 3 CHR; DS ~ 8 LIT " IN USE~";%   08560000
                             END;%                                      08561000
                        U ~ PSEUDOMAXT + 1;                             08562000
                   END;%                                                08563000
              IF U { PSEUDOMAXT THEN                                    08564000
                   LABELTABLE[U] ~ -(IF IL THEN *P(DUP) ELSE @314);%    08565000
         END  END;%                                                     08566000
PROCEDURE LOGOUT(A); VALUE A; REAL A;                                   08568000
BEGIN                                                                   08568100
    REAL RCW=+0,J=RCW+1,L=J+1; INTEGER I=L+1;                           08568200
    LABEL EXIT;                                                         08568300
    P(GETSPACE(128, 12,0)+1,STS,A,RCW,0,RDS,0,XCH,CFX,STF,0,0,0);       08568400
    STACKUSE:=1;                                                        08568500
    L ~ GETSPACE(335,0,0)+2;                                            08568600
    IF (J:=DIRECTORYSEARCH("SYSTEM ","LOG    ",4))=0 THEN               08568700
    BEGIN;                                                              08568800
         STREAM(L);                                                     08568900
         BEGIN DS:=10 LIT "-NULL LOG~" END;                             08569000
         GO TO EXIT;                                                    08569100
    END;                                                                08569200
    IF LOGFREE GTR 0 THEN SLEEP([LOGFREE],-0);                          08569300
    LOGFREE:=ABS(LOGFREE);                                              08569400
$ INCLUDE 08569551, IF SHAREDISK;                                       08569499
    LOCK(DIRECTORYTOP-4);                                               08569500
    MOVE(30,J INX 0,L);                                                 08569600
    M[L+10] ~ GETUSERDISK(-(M[L+8]~M[L+8]+10)); % GET XTRA TEN          08569700
    DO BEGIN                                    % TO MAKE COPY          08569800
         DISKWAIT (-L-31,300,M[J+10]+I);        % SIMPLER               08569900
         DISKWAIT ( L+31,300,M[L+10]+I);                                08569910
    END UNTIL (I~I+10)}M[J+8];                                          08569920
    LOGFREE ~ M[J+10];                                                  08570000
    J:=J INX 0;                                                         08570300
    M[J]:=M[J+2]:=M[J+3]:=0;                                            08570400
    M[J+1]:=M[J+8]|6;                                                   08570500
    M[J+4]:="DISKLOG";                                                  08570600
    M[J+5]:=4;                                                          08570700
    DISKWAIT(J,30,LOGFREE);                                             08570800
$ INCLUDE 08570861, IF SHAREDISK;                                       08570849
    M[J]:=LOGFREE;                                                      08570850
    DISKWAIT(J,-30,DIRECTORYTOP-4);                                     08570860
    P(DIRECTORYSEARCH(-"SYSTEM ","LOG    ",14),DEL);                    08570880
    LOGFREE:=NABS(LOGFREE);                                             08570900
    IF HOLDFREE=0 THEN SLEEP([TOGLE],HOLDMASK);                         08571000
    HOLDFREE:=0;                                                        08571100
    DISKWAIT(-J,-30,DIRECTORYTOP);                                      08571200
    I:=(M[J+20].[8:10]+1) MOD 1000;                                     08571300
    M[J+20]:=(*P(DUP))&I[8:38:10];                                      08571400
    DISKWAIT(J,-30,DIRECTORYTOP);                                       08571500
    HOLDFREE:=1;                                                        08571600
    STREAM(J~[ACTDATE],D~[I]);                                          08571800
    BEGIN SI:=D;DS:=8 DEC;DI:=DI-7;SI:=J;                               08571900
         SI~SI+2; DS~4 CHR;                                             08572000
    END;                                                                08572300
    FORGETSPACE(J);                                                     08572400
    M[L+4]:=(*P(DUP))&0[1:43:5]&0[12:44:4];                             08572500
    M[L+1]~XCLOCK+P(RTR);                                               08572510
    STREAM(DATE,A~0,B~L+1);                                             08572520
    BEGIN SI~ LOC DATE;DI~LOC A;DS~8 OCT;SI~LOC A;                      08572530
              SI~SI+5;DI~B;DI~DI+1;DS~3 CHR; END;                       08572540
    ENTERUSERFILE(-I,"SYSLOG ",L-1);                                    08572600
    STREAM(I,L);                                                        08572700
    BEGIN DS:=21 LIT"**** NEW LOG FILE IS ";SI:=LOC I;SI:=SI+1;         08572800
         DS:=7 CHR;DS:=8 LIT"/SYSLOG~" ;                                08572900
    END;                                                                08573000
EXIT:                                                                   08573100
    SPOUT(L);                                                           08573200
    KILL([A]);                                                          08573300
END;                                                                    08573400
 PROCEDURE SAVETHEUNIT(B); VALUE B; REAL B;%                            08575000
         BEGIN REAL A=B,T,U,I,M1;                                       08576000
              LABEL AGAIN,EXIT;                                         08576100
              M1:=M[B.[15:15]-2];                                       08577000
              STREAM(B:);                                               08577100
              BEGIN SI:=B;                                              08577200
                L: IF SC=" " THEN BEGIN SI:=SI+1; GO TO L END;          08577300
                   B:=SI;                                               08577400
              END;                                                      08577500
              B:=P;                                                     08577600
AGAIN:        T:=SPACE(10);                                             08577700
              IF (U:=UNITIN(TINU,A)) GTR 31 THEN                        08578000
              STREAM(A,T);                                              08578100
              BEGIN DS:=10 LIT"INV KBD SV";                             08578200
                   SI:=A; DS:=3 CHR;                                    08578300
                   DS:=LIT"~";                                          08578400
              END ELSE                                                  08578500
                   BEGIN I ~ TWO(U);%                                   08579000
                        SLEEP([TOGLE],STATUSMASK);                      08580000
                        IF LABELTABLE[U] } 0 THEN%                      08581000
                             BEGIN LABELTABLE[U] ~ @114;%               08582000
                                  MULTITABLE[U]~RDCTABLE[U]~0;          08582100
                                  RRRMECH ~ RRRMECH OR I;%              08583000
                                  READY ~ READY OR I;%                  08584000
                                  I ~ "      ";%                        08585000
                             END%                                       08586000
                        ELSE BEGIN SAVEWORD ~ SAVEWORD OR I;%           08587000
                                  I ~ " TO BE";%                        08588000
                             END;%                                      08589000
                        STREAM(A~TINU[U],I,T);%                         08590000
                             BEGIN DS ~ LIT " ";%                       08591000
                                  SI ~ LOC A; SI ~ SI+5; DS ~ 3 CHR;%   08592000
                                  SI ~ SI+2; DS ~ 6 CHR;%               08593000
                                  DS ~ 7 LIT " SAVED~";%                08594000
                             END;%                                      08595000
                   END;%                                                08596000
              SPOUT(T INX M1);                                          08597000
              STREAM(OK:=0,A:);                                         08597050
              BEGIN SI:=A;                                              08597100
                   3(IF SC=" " THEN JUMP OUT;                           08597150
                     IF SC="," THEN JUMP OUT;                           08597200
                     IF SC="~" THEN JUMP OUT TO L3;                     08597250
                     SI:=SI+1);                                         08597300
              L1:  IF SC=" " THEN                                       08597350
              L2:  BEGIN SI:=SI+1; GO TO L1 END;                        08597400
                   IF SC="," THEN GO TO L2;                             08597450
                   A:=SI;                                               08597500
                   IF SC!"~" THEN TALLY:=1;                             08597550
              L3:  OK:=TALLY;                                           08597600
              END;                                                      08597650
              A:=P;                                                     08597700
              IF P THEN GO AGAIN;                                       08597750
         END;%                                                          08598000
 BOOLEAN PROCEDURE WHYSLEEP(MASK); VALUE MASK; REAL MASK;%              08599000
         BEGIN REAL A;%                                                 08600000
              IF REPLY[P1MIX] = 10 THEN%                                08601000
              BEGIN%                                                    08602000
              A ~ GETSPACE(4,0,0)+2;%                                   08603000
              MIXMSGS;                                                  08604000
              STREAM(B~*P(.MIXMSGS),MASK,T~0,S~0,A);                    08605000
                   BEGIN SI ~ LOC MASK; T ~ SI;%                        08606000
                        8(SI ~ T;%                                      08607000
                             IF SC = 10 THEN%                           08608000
                                  BEGIN DI ~ A; DS ~ 3 LIT " DS";%      08609000
                                       A ~ DI; SI ~ SI+1; T ~ SI;%      08610000
                                  END ELSE%                             08611000
                             IF SC ! 0 THEN%                            08612000
                                  BEGIN DI ~ LOC S; DI ~ DI+7; DS ~ CHR;08613000
                                       DI ~ A; DS ~ LIT " "; T ~ SI;%   08614000
                                       SI ~ B; S(SI ~ SI+8); SI ~ SI+6; 08615000
                                       DS ~ 2 CHR; A ~ DI;%             08616000
                                  END%                                  08617000
                             ELSE BEGIN SI ~ SI+1; T ~ SI END;);%       08618000
                        DI ~ A; DS ~ LIT "~";%                          08619000
                   END;%                                                08620000
              SPOUT(A);%                                                08621000
              END ELSE WHYSLEEP ~ TRUE;%                                08622000
         END;%                                                          08623000
PROCEDURE CHANGEOPTION(BUFF,RS);%                                       08624000
         VALUE BUFF,RS;REAL BUFF,RS;%                                   08625000
BEGIN    REAL B,T,OP,BUS,MASK;%                                         08626000
         SLEEP([TOGLE],HOLDMASK);                                       08627000
         HOLDFREE ~ 0;%                                                 08628000
              BUS ~ BUFF.[15:15]-1; B ~ GETSPACE(30,0,0)+2;%            08629000
         DISKIO(T,1-B,-30,DIRECTORYTOP-SYSNO);                          08630000
         OPSET;%                                                        08631000
    STREAM(BUFF,T~0,OPTER,R~[OP]);%                                     08632000
         BEGIN%                                                         08633000
              SI ~ BUFF; 63(IF SC=" " THEN SI ~ SI+1  ELSE JUMP OUT%    08634000
                                  TO L);L:%                             08635000
              63(IF SC!" " THEN SI~SI+1);  16(IF SC=" " THEN SI~SI+1);% 08636000
              DI~LOC T;%                                                08637000
              8(IF SC=" " THEN JUMP OUT TO L1 ELSE%                     08638000
                IF SC="~" THEN JUMP OUT TO L1 ELSE%                     08639000
                IF SC}"0" THEN JUMP OUT TO L1 ELSE%                     08640000
                DS~1 CHR);L1:%                                          08641000
              TALLY~0;BUFF~SI;SI~OPTER;%                                08642000
              63(DI~LOC T; IF 8 SC!DC THEN                              08643000
                   BEGIN IF SC="~" THEN%                                08644000
                                  BEGIN TALLY~48;JUMP OUT TO L3 END%    08645000
                                  ELSE TALLY~TALLY+1%                   08646000
                   END ELSE JUMP OUT TO L2);TALLY~48;GO TO L3;L2:%      08647000
              IF SC="~" THEN%                                           08648000
                   BEGIN%                                               08649000
                        SI~BUFF;63(IF SC<"0" THEN SI~SI+1 ELSE JUMP OUT 08650000
                                  TO L4);L4:DI~LOC T;SI~SI+1;%          08651000
                        IF SC<"0" THEN BEGIN SI~SI-1; DS~1 OCT END ELSE 08652000
                                       BEGIN SI~SI-1;DS~2 OCT END;%     08653000
                        TALLY~47;T(TALLY~TALLY+63);%                    08654000
              END;%                                                     08655000
              L3:T~TALLY;SI~LOC T;DI~R;DS~WDS;%                         08656000
         END;%                                                          08657000
         IF(OP=9)AND NOT RS THEN                                        08657100
         IF(NT1~DIRECTORYSEARCH("PRNPBT ","DISK   ",5))!0 THEN          08657200
              FORGETSPACE(NT1) ELSE RS~TRUE;                            08657300
              IF OP<47 THEN                                             08658000
                   BEGIN;STREAM(A ~ IF RS THEN " RESET" ELSE "   SET",% 08659000
                        O~OPTER INX OP,OP ~ 47-OP,BUS);%                08660000
                        BEGIN DS ~ LIT " "; SI ~ LOC OP; DS ~ 2 DEC;%   08661000
                             DS ~ LIT " "; SI ~ O;%                     08662000
                             8(IF SC=0 THEN JUMP OUT TO L; DS~CHR);%    08663000
                   L:        SI ~ LOC A; SI ~ SI+2; DS ~ 6 CHR;%        08664000
                             DS ~ LIT"~";%                              08665000
                        END;%                                           08666000
                        MASK~TWO(OP);%                                  08667000
                   END;%                                                08668000
              SPOUT(BUS INX M[BUS-1]);                                  08669000
         SLEEP([T],IOMASK);                                             08670000
         M[B]~OPTION~IF RS THEN OPTION AND NOT MASK ELSE OPTION OR MASK;08671000
         DISKWAIT(B,-30,DIRECTORYTOP-SYSNO);                            08673000
         FORGETSPACE(OPTER);%                                           08674000
         FORGETSPACE(B);%                                               08676000
         HOLDFREE ~ 1;%                                                 08677000
    END;%                                                               08678000
 PROCEDURE TYPOP(TUSTA);VALUE TUSTA;REAL TUSTA; BEGIN                   08679000
    REAL VASE,N;                                                        08680000
    REAL SUBROUTINE SETT;                                               08681000
    BEGIN;STREAM(SETT~0:OPTER~[OPTER],N,NBS~47-N,                       08681100
                 IND~(OPTION AND TWO(N))=0,VASE); BEGIN                 08681200
              SI~LOC NBS;DI~VASE;DS~2 DEC;DS~2 LIT" ";%                 08682000
              SI~OPTER;N(SI~SI+8);IF SC="~" THEN GO TO EXIT;%           08683000
              8(IF SC<"0" THEN DS~CHR ELSE DS~1 LIT" ");DS~2 LIT" ";%   08684000
              IND(DS~3 LIT"NOT");%                                      08685000
              DS~5 LIT" SET~";%                                         08686000
              DI~LOC SETT;DI~DI+7;DS~1 LIT"7";%                         08687000
              EXIT:                         END;%                       08688000
          SETT~P;                                                       08689000
    END SETT;                                                           08689100
         OPSET;%                                                        08690000
         FOR N~0 STEP 1 UNTIL 47 DO                                     08691000
              BEGIN VASE~GETSPACE(3,0,0)+2;%                            08692000
              IF SETT=0 THEN N~48 ELSE SPOUT(VASE INX TUSTA);           08693000
              END;FORGETSPACE(VASE);%                                   08695000
         FORGETSPACE(OPTER);%                                           08696000
                   END;%                                                08697000
$ INCLUDE 08698911, IF DISKLOG;                                         08697099
PROCEDURE DISKLOG(MID,FID,H); VALUE MID,FID,H; REAL MID,FID; ARRAY H[*];08697100
BEGIN                                                                   08697150
    NAME LOG;                                                           08697200
    REAL I;                                                             08697250
    IF LOGFREE!0 THEN                                                   08697300
    BEGIN                                                               08697350
         LOG~[M[GETSPACE(11,0,0)+2]];                                   08697500
         LOG[0]~8;                               % LOG ENTRY TYPE       08698470
         LOG[1]:= MID.[6:42];          %FIRST NAME                      08698480
         LOG[2]:= FID.[6:42];           %SECOND NAME                    08698490
LOG[3]~IF H[2]=0THEN IF H[5]=0THEN "FREE   " ELSE H[5] ELSE H[2]; %     08698500
IF H[1].[6:18] = 0 THEN LOG[4] ~ DATE ELSE %                            08698505
         STREAM(D~H[1].[6:18],L~[LOG[4]]);       % CREATION DATE        08698510
         BEGIN SI~LOC D; DS~8 DEC END;                                  08698520
LOG[5] ~ IF 0 = JUNK ~ H[1].[25:23] THEN XCLOCK ELSE JUNK; % CR TIME    08698530
         LOG[6]~DATE;                            % DATE LOGGED          08698540
         LOG[7]~XCLOCK+P(RTR);                   % TIME LOGGED          08698550
         LOG[8]~0;                                                      08698560
         FOR I:=H[9].[43:5] STEP -1 UNTIL 1 DO   % NUMBER OF SEGMENTS   08698570
         IF H[I+9]!0 THEN LOG[8]~LOG[8]+H[8];                           08698580
         LOG[9]~0;                               % RES FOR EXPANSION    08698590
         LOGSPACE(LOG,10);                                              08698600
         FORGETSPACE(LOG);                                              08698700
    END;                                                                08698850
    H[1]:=XCLOCK+P(RTR);                                                08698860
    STREAM(D:=DATE,H:=[H[1]]);                                          08698870
    BEGIN SI:=LOC D;DI:=LOC D;DS:=8 OCT;SI:=SI-3;                       08698880
         DI:=H;DI:=DI+1;DS:=3 CHR;                                      08698890
    END;                                                                08698900
END;                                                                    08698910
 PROCEDURE PBIO(ALPHA,POINTER); VALUE ALPHA; REAL ALPHA,POINTER;     %P 08700000
% ALPHA IS ADDRESS OF TOP I/O DESCRIPTOR. <0 MEANS READ              %P 08701000
% POINTER IS FIB[14]                                                 %P 08702000
    BEGIN NAME HEADER;                                               %P 08703000
         REAL T=-2,IOD,H6;  INTEGER I=IOD;                              08704000
         POINTER.[FF]~POINTER INX  72;                               %P 08705000
         IF (HEADER~POINTER.[3:15])!0 THEN    %%%%PB ON DISK  %%%%%  %P 08706000
         BEGIN                                                          08707000
              HEADER := [M[(*HEADER)]];                                 08707500
              IF HEADER[7] GEQ 6000 THEN% GET NEW FILE                  08708000
              BEGIN                                                     08708500
                   HEADER[1] := HEADER[3];                              08709000
                   IF I:=HEADER[5].[3:1] THEN HEADER[5].[3:1]:=0;       08709100
                   STREAM(DATE, D:=[HEADER[3]]);                        08709500
                   BEGIN                                                08710000
                        SI:=LOC DATE; DS:=8 OCT;DI:=DI-8;               08710500
                        DS:=2 LIT"+2";SI:=D;SI:=SI+5;DS:=3 CHR;         08711000
                   END;                                                 08711500
                   HEADER[1].[6:18] := HEADER[3].[30:18];               08711700
                   H6:=HEADER[6];                                       08711750
$ INCLUDE 08712001, IF DATACOM AND RJE AND NOT INQUIRY;                 08711799
                   IF P(JAR[P1MIX,6].[9:9],DUP)!0 THEN                  08711800
                   BEGIN P(GET(JAR[P1MIX,6]));                          08711850
                        IF I THEN IF P.[39:1] THEN ELSE P(DEL,0)        08711900
                        ELSE IF P.[36:1] THEN ELSE P(DEL,0);            08711950
                   END;  HEADER[6]:=P(XCH);                             08712000
$ OMIT 08712011, IF DATACOM AND RJE AND NOT INQUIRY;                    08712009
                   HEADER[6]:=0;                                        08712010
                   ENTERUSERFILE(IF I THEN "PND    " ELSE "PBD    ",    08712050
                                 H6,HEADER INX 0 -1);                   08712100
                   HEADER[5].[3:1]:=I; %SET CP BK UP TOG                08712200
                   HEADER[7] := 0;                                      08712500
                   HEADER[3] := XCLOCK + P(RTR);                        08713000
                   HEADER[6]:=1 INX H6;                                 08713100
                   HEADER[9]:=0;                                        08714000
                   MOVE(20,[HEADER[9]],[HEADER[10]]);                   08714100
              END;                                                      08714500
                        IF HEADER[7] MOD 300 =0 THEN %% GET NEW ROW  %P 08715000
                        HEADER[9 +HEADER[9]~*P(DUP)+1]~GETUSERDISK(900);08716000
                      STREAM(A~I~HEADER[HEADER[9]+ 9]+(HEADER[7]MOD 300)08717000
                                       |3,D~POINTER.[CF]-1);         %P 08718000
                        BEGIN SI~LOC A; DS~8 DEC END;                %P 08720000
                        HEADER[7]~(*P(DUP))+1;                       %P 08721000
         IOD~@141320100377777;                                       %P 08722000
                   END ELSE  %% ON TAPE %%                           %P 08723000
         IOD~@21320500000000&M[POINTER INX NOT 1][3:14:4];           %P 08724000
         IOREQUEST(M[ALPHA],POINTER INX IOD&ALPHA[24:1:1],           %P 08726000
                             M[POINTER INX NOT 1]);                  %P 08727000
         M[T]~IOD INX M[T]&0[26:26:7]&0[19:19:1] AND NOT M;          %P 08728000
    END PBIO;                                                        %P 08729000
 PROCEDURE TIMERELAXER(KTR,TYPE,MIX);%                                  08730000
 VALUE                 KTR,TYPE,MIX;%                                   08731000
 REAL                  KTR,TYPE,MIX;%                                   08732000
    BEGIN INTEGER BUFF,PRT,IOT,T,P1,I1;%                                08733000
         LABEL SPIT;%                                                   08734000
         COMMENT:  THIS ROUTINE SHOULD BE BLAMED ON WWF4;%              08734100
         BUFF ~ KTR.[15:15]-1;%                                         08735000
         IF TYPE!25 THEN BEGIN;%                                        08736000
              STREAM(IOT~0,PRT~0,CODE~0: KTR);%                         08737000
              BEGIN SI~KTR;  IF SC=" " THEN BEGIN L1:  SI~SI+1;%        08738000
                   IF SC=" " THEN GO L1 END;  IF SC="*" THEN GO L5;%    08739000
                   IF SC="," THEN GO L2;  IF SC<"0" THEN GO EXIT;%      08740000
                   KTR~SI;  L3:  TALLY~TALLY+1;  SI~SI+1;               08741000
                   IF SC}"0" THEN GO L3;  SI~KTR;  CODE~TALLY;          08742000
                   DI~LOC PRT;  DS~CODE OCT;  TALLY~0;%                 08743000
              L5:  IF SC=" " THEN BEGIN L4:  SI~SI+1;%                  08744000
                   IF SC=" " THEN GO L4 END;  IF SC="," THEN GO L2;%    08745000
                   IF SC="~" THEN TALLY~1;  GO EXIT;%                   08746000
              L2:  SI~SI+1;  IF SC=" " THEN BEGIN L6:  SI~SI+1;%        08747000
                   IF SC=" " THEN GO L6 END ; KTR~SI;%                  08748000
                   IF SC="*" THEN BEGIN TALLY~1;  GO EXIT END;%         08749000
                   IF SC<"0" THEN GO EXIT;  L7:  TALLY~TALLY+1;%        08750000
                   SI~SI+1;  IF SC}"0" THEN GO L7;  DI~ LOC IOT;%       08751000
                   SI~KTR;  CODE~TALLY;  DS~CODE OCT;  TALLY~1;%        08752000
              EXIT:  CODE~TALLY;%                                       08753000
              END STREAM;%                                              08754000
              IF NOT P THEN GO SPIT;%                                   08755000
              PRT ~ P|3600;  IOT ~ P|3600;%                             08756000
              IF TYPE=24 THEN BEGIN%                                    08757000
                   IF PRT!0 THEN BEGIN%                                 08758000
                        PROCTIME[MIX] ~ *P(DUP)-PRT;%                   08759000
                        JAR[MIX,3] ~ *P(DUP)+PRT;%                      08760000
                   END;%                                                08761000
                   IF IOT!0 THEN BEGIN%                                 08762000
                        IOTIME[MIX] ~ *P(DUP)-IOT;%                     08763000
                        JAR[MIX,4] ~ *P(DUP)+IOT;%                      08764000
              END END ELSE BEGIN%                                       08765000
                   IF PRT!0 THEN BEGIN%                                 08766000
                        PROCTIME[MIX] ~ *P(DUP)+JAR[MIX,3]-PRT;%        08767000
                        JAR[MIX,3] ~ PRT;%                              08768000
                   END;%                                                08769000
                   IF IOT!0 THEN BEGIN%                                 08770000
                        IOTIME[MIX] ~ *P(DUP)+JAR[MIX,4]-IOT;           08771000
                        JAR[MIX,4] ~ IOT;%                              08772000
              END END;                                                  08773000
              STREAM(TEST~0: X~JARROW[MIX],MIX,Z~PRT!0,I~IOT!0,%        08774000
                        K~TYPE=24,T~T~GETSPACE(10,0,0)+2);%             08775000
              BEGIN DS~LIT " ";  Z(DS~4 LIT "PRT ";  TALLY~1;%          08776000
                   I(DS~4 LIT"AND "));  I(DS~4 LIT "IOT ";  TALLY~1);%  08777000
                   DS~8 LIT "ESTIMATE"; Z(I(DS~LIT "S"));%              08778000
                   DS~8LIT" CHANGED";  K(DI~DI-7; DS~8LIT"EXTENDED");%  08779000
                   DS~5LIT" FOR";  SI~X;  SI~SI+1;  DS~7CHR;  SI~SI+1;% 08780000
                   DS~LIT"/";  DS~7CHR;  DS~LIT"=";  SI~LOC Z;%         08781000
                   SI~SI-8; DS~2DEC; DS~LIT"~"; TEST~TALLY;             08782000
                   DI~DI-3; DS~FILL;                                    08782500
              END STREAM;%                                              08783000
              IF P THEN SPOUT(T INX M[BUFF-1]) ELSE FORGETSPACE(T);%    08784000
         END;                                                           08785000
         IOT ~ PRT ~ -0;%                                               08786000
         IF P(JAR[MIX,3],DUP)=@377777777777 THEN P(DEL)ELSE%            08787000
         P1 ~ (PRT ~ P DIV 3600)-60|(PRT ~ PRT DIV 60);%                08788000
         IF P(JAR[MIX,4],DUP)=@377777777777 THEN P(DEL) ELSE%           08789000
         I1 ~ (IOT ~ P DIV 3600)-60|(IOT ~ IOT DIV 60);%                08790000
         STREAM(X~JARROW[MIX], MIX,PRT,P1,IOT,I1,BUFF);                 08791000
         BEGIN DS~17LIT" TIME LIMITS FOR";  SI~X;  SI~SI+1;  DS~7CHR;%  08792000
              DS~LIT"/"; SI~SI+1; DS~7CHR; DS~LIT"="; SI~LOC MIX;       08793000
              DS~2DEC; MIX~DI; DI~DI-2; DS~FILL; DI~MIX;                08793500
              DS~10LIT" ARE: PRT="; IF SC="+" THEN                      08794000
              BEGIN  SI~SI+16;  DS~8LIT"NO LIMIT" END ELSE BEGIN%       08795000
              DS~8DEC;  DS~LIT":";  DS~2DEC;  BUFF~DI;  DI~DI-11;%      08795500
              DS~7FILL;  DI~BUFF END;  DS~6LIT"; IOT=";  IF SC="+" THEN 08796000
              DS~10LIT"NO LIMIT.~" ELSE BEGIN DS~8DEC;  DS~LIT":";%     08796500
              DS~2DEC;  DS~2LIT".~";  DI~DI-13;  DS~7FILL END;          08797000
         END STREAM;%                                                   08797500
    SPIT:%                                                              08798000
         SPOUT(BUFF INX M[BUFF-1]);%                                    08798500
    END TIMERELAXER;                                                    08799000
PROCEDURE CHANGEFACTOR(BUFF,TF); VALUE BUFF,TF; REAL BUFF; BOOLEAN TF;  08800000
BEGIN REAL FACTOR,B,T; INTEGER TEMP=T;                                  08801000
      LABEL TYPEOUT,EXIT;                                               08802000
      BUFF ~ ((B~BUFF).[15:15]-1)&M[P(DUP)-1][9:9:9];                   08802500
      IF TF THEN GO TYPEOUT;                                            08803000
      STREAM(ANS~0:B);                                                  08804000
        BEGIN SI~B; DI~LOC B; DS~8LIT"00000000"; DI~DI-2;               08805000
        L:    IF SC = " " THEN BEGIN SI~SI+1; GO TO L END;              08806000
              IF SC < "0" THEN GO TO L1;                                08807000
              IF SC > "9" THEN GO TO L1;                                08808000
              SI~SI+1;                                                  08809000
              IF SC < "0" THEN GO TO ONECHR;                            08810000
              IF SC { "9"                                               08810500
                THEN         BEGIN SI~SI-1; DI~DI-2; DS~2 CHR; END      08811000
                ELSE ONECHR: BEGIN SI~SI-1; DI~DI-1; DS~1 CHR; END;     08812000
              IF SC = "." THEN GO TO L2 ELSE GO TO L3;                  08813000
        L1:   IF SC ! "." THEN GO TO ERROR;                             08814000
        L2:   SI~SI+1;                                                  08815000
              IF SC < "0" THEN GO TO ERROR;                             08816000
              IF SC > "9" THEN GO TO ERROR;                             08817000
              DS~CHR;                                                   08818000
              IF SC } "0" THEN IF SC { "9" THEN DS~CHR;                 08819000
        L3:   IF SC = " " THEN GO CONVERT;                              08820000
              IF SC = "~" THEN GO CONVERT;                              08821000
        ERROR:DI~LOC ANS; SKIP 1 DB; DS~ 10 SET; GO TO EXITS;           08822000
        CONVERT: SI~LOC B; SI~SI+4; DI~LOC ANS; DS~4 OCT;               08823000
        EXITS:                                                          08824000
        END STREAM;                                                     08825000
      P(.FACTOR,~);                                                     08826000
      IF FACTOR < 0 THEN GO TO EXIT;                                    08828000
      CORE.[4:14] ~ FACTOR;                                             08829000
      SLEEP([TOGLE],HOLDMASK); HOLDFREE~0;                              08830000
      B ~ GETSPACE(30,0,0)+2;                                           08831000
      DISKWAIT(-B,-30,DIRECTORYTOP-SYSNO);                              08832000
      M[B+9] ~ CORE;                                   % CHANGE FACTOR  08833000
      DISKWAIT(B,-30,DIRECTORYTOP-SYSNO);                               08834000
      FORGETSPACE(B);                                                   08835000
      HOLDFREE ~ 1;                                    % UNLOCK HOLDFREE08836000
      SELECTION;                                                        08836500
TYPEOUT:                                                                08837000
      STREAM(I~(FACTOR~CORE.[4:14]) DIV 100, FR~(TEMP~FACTOR MOD 100),  08838000
             MX~(TEMP~CORE.[CF]|64|FACTOR/100), US~CORE.[FF]|64, BUFF); 08839000
        BEGIN DS~9 LIT"FACTOR = ";                                      08840000
              SI~LOC I; DS~2 DEC; I~DI; DI~DI-2; DS~FILL; DI~I;         08841000
                        DS~LIT"."; DS~2 DEC;                            08842000
              DS~13 LIT", MAX CORE = "; DS~7 DEC;                       08843000
                        I~DI; DI~DI-7; DS~6 FILL; DI~I;                 08844000
              DS~ 8 LIT", USING "; DS~7 DEC; DS~LIT"~";                 08845000
                        DI~DI-8; DS~6 FILL;                             08846000
        END STREAM;                                                     08847000
EXIT: SPOUT(BUFF);                                                      08848000
END CHANGEFACTOR;                                                       08849000
PROCEDURE SHEETDIDDLER(BUFF,TYPE,SID); VALUE BUFF,TYPE,SID;             08850000
                                       REAL  BUFF,TYPE,SID;             08850100
COMMENT TYPE = 18: PS -- CHANGE PRIORITY OF JOB IN SCHEDULE             08850200
             = 19: XS -- EXECUTE JOB IN SCHEDULE (FORCE SELECTION)      08850300
             = 20: ES -- ELIMINATE JOB FROM SCHEDULE (FORCE SELECTION,  08850400
                                                      THEN "DS")        08850500
             = 34: TS -- TYPE OUT SCHEDULE;                             08850600
BEGIN REAL IOD,T,PRIORITY;                                              08851000
      INTEGER LEVEL,NEXTLINK,THISLINK,LASTLINK;                         08852000
      INTEGER ES,EM,EH; DEFINE ET = EH#;                                08852500
$INCLUDE 08852601, IF DATACOM AND NOT INQUIRY;                          08852599
       NAME ADDR=ES; REAL USERID=EM;                                    08852600
      BOOLEAN LASTPASSED,ATLEASTONE;                                    08853000
      ARRAY S[*],DLNK[*];                                               08854000
LABEL CONTINUE,C1,READIN,GNX,TS,TS1,TS2,XSES,PS,PS1,PS2,EXIT;           08855000
      SUBROUTINE GETNEXT; % READS IN NEXT JOB SHEET ENTRY               08858000
      BEGIN                                                             08859000
      CONTINUE: LASTLINK ~ THISLINK;                                    08860000
                IF (THISLINK~NEXTLINK) ! 0 THEN GO TO READIN;           08860500
      C1:       IF (LEVEL~LEVEL+1) > MIXMAX THEN                        08861000
                  BEGIN LASTPASSED ~ TRUE; GO TO GNX END;               08862000
                LASTLINK ~ NEXTLINK ~ 0;                                08863000
                IF (THISLINK~SHEET[LEVEL].[CF]) = 0 THEN GO TO C1;      08864000
      READIN:   DISKIO(IOD,-(S INX 0-1),30,THISLINK);                   08865000
                SLEEP([IOD],IOMASK);                                    08866000
                NEXTLINK ~ S[29];                                       08867000
                IF S[0].[36:6]=@14 THEN GO CONTINUE;%PASS LM ENTRY      08868000
      GNX:                                                              08869000
      END GETNEXT;                                                      08870000
      SLEEP([TOGLE],SHEETMASK); SHEETFREE~FALSE;                        08880000
      S ~ [M[GETSPACE(31,2,0)+2]]&30[8:38:10];                          08881000
      LEVEL ~ -1; LASTPASSED ~ FALSE;                                   08882000
      BUFF ~ ((T~BUFF).[15:15]-1)&M[P(DUP)-1][9:9:9];                   08882500
$INCLUDE 08882801, IF DATACOM AND NOT INQUIRY;                          08882599
       USERID:=IF BUFF.[9:9] LEQ 1 THEN MCP ELSE                        08882600
               IF GET(BUFF).[32:1] THEN MCP ELSE (IF P(LOOKQ,BUFF AND%  08882650
               @7570000000000,LLL,ADDR,STD).[9:9]=BUFF.[9:9] THEN       08882700
               ABS(M[ADDR INX 1]) ELSE 0);                              08882800
      IF TYPE GTR 20 THEN GO TS;IF TYPE GTR 18 THEN GO XSES; GO PS;     08883000
TS:   ATLEASTONE ~ FALSE;                                               08884000
TS1:  GETNEXT; IF LASTPASSED THEN GO TO TS2;                            08885000
    IF SID NEQ 63 THEN BEGIN IF S[3].[8:10] NEQ SID THEN GO TS1 END ELSE08885500
    IF ATLEASTONE THEN BUFF.[CF]~GETSPACE(12,0,0)+2;                    08886000
      ET ~ ((CLOCK+P(RTR))/60)-S[23].[31:17];                           08886300
      ES ~ ET MOD 60; ET ~ ET DIV 60; EM ~ ET MOD 60; EH ~ ET DIV 60;   08886600
    STREAM(TU~S[23].[9:4],BUF~S[23].[14:4],                             08887000
    RT~S[23].[9:4]!0,C~LEVEL, %                                         08887001
    J~S[*],ID~S[3].[8:10],EH,EM,ES,A~S[20]|64,BUFF); %                  08887100
        BEGIN SI~LOC C; DS~6 DEC; DI~DI-6; DS~5 FILL; DI~BUFF; DI~DI+6; 08888000
              DS~LIT":"; SI~J; SI~SI+1; DS~7 CHR; DS~LIT"/"; SI~SI+1;   08889000
              DS~7 CHR; DS~LIT"="; SI~LOC ID; DS~2 DEC;                 08890000
    RT(DS~6 LIT " FROM "; SI~LOC TU; DS~2 DEC; %                        08890100
    DS~1 LIT "/"; SI~LOC BUF; DS~2 DEC;); %                             08890200
              DS~7 LIT" IN FOR"; SI~LOC EH;                             08891000
              3(DS ~ LIT":"; DS~2 DEC); ES~DI; DI~DI-9; DS~8 FILL;      08892000
              DI~ES; DS~8 LIT", NEEDS ";                                08893000
              SI~LOC A; DS~5 DEC; DS~LIT"~"; DI~DI-6; DS~4 FILL;        08899000
        END STREAM;                                                     08900000
      SPOUT(BUFF);                                                      08901000
      IF SID NEQ 63 THEN BEGIN TYPE:=34;GO EXIT END;                    08901500
      ATLEASTONE~TRUE;                                                  08902000
      GO TO TS1;                                                        08903000
TS2:  IF ATLEASTONE THEN GO TO EXIT;                                    08904000
      IF SID NEQ 63 THEN TYPE:=34 ELSE%                                 08904050
      STREAM(BUFF);  DS ~ 15 LIT " NULL SCHEDULE~";%                %WF 08905000
      SPOUT(BUFF); GO TO EXIT;                                          08906000
XSES: GETNEXT;                                                          08910000
      IF LASTPASSED THEN BEGIN SPOUT(BUFF); GO TO EXIT END;             08911000
      IF S[3].[8:10]!SID THEN GO TO XSES;                               08912000
$INCLUDE 08912201, IF DATACOM AND NOT INQUIRY;                          08912099
       IF (USERID EQV MCP) NEQ NOT 0 THEN IF (USERID EQV ABS(S[24])) NEQ08912100
       NOT 0 THEN BEGIN SPOUT(BUFF);LEVEL:=MIXMAX+1;GO EXIT END;        08912200
      S[2].[1:2] ~ TYPE-17; % TURN ON 1:1 FOR XS, ALSO 2:1 FOR ES       08913000
      DISKIO(IOD,S INX 0-1,30,THISLINK); SLEEP([IOD],IOMASK);           08915000
      FORGETSPACE(BUFF); GO TO EXIT;                                    08915100
PS:   STREAM(PRIORITY:T);                                               08916000
      BEGIN SI~T;                                                       08917000
      N:    IF SC="~" THEN GO TO X;                                     08918000
            IF SC<"0" THEN BEGIN SI~SI+1; GO TO N; END; T~SI;           08919000
      K:    IF SC}"0" THEN IF SC{"9" THEN                               08920000
                   BEGIN TALLY~TALLY+1; SI~SI+1; GO TO K END;           08921000
            SI~T; DI~LOC PRIORITY; T~TALLY; DS~T OCT; GO TO Z;          08922000
      X:    DI~LOC PRIORITY; SKIP DB; DS~11 SET;                        08923000
      Z:                                                                08924000
      END STREAM;                                                       08925000
      IF (PRIORITY~P)<0 THEN BEGIN SPOUT(BUFF); GO TO EXIT END;         08926000
PS1:  GETNEXT; IF LASTPASSED THEN BEGIN SPOUT(BUFF); GO TO EXIT END;    08927000
      IF S[3].[8:10]!SID THEN GO TO PS1;                                08928000
% DELINK AND RELINK THIS SHEET ENTRY                                    08929000
      DLNK ~ [M[GETSPACE(31,2,0)+2]]&30[8:38:10];                       08930000
      IF NEXTLINK = 0 THEN SHEET[LEVEL].[FF] ~ LASTLINK;                08931000
      IF LASTLINK = 0 THEN BEGIN SHEET[LEVEL].[CF]~ NEXTLINK;GO PS2 END;08932000
      DISKIO(IOD,-(DLNK INX 0-1),30,LASTLINK); SLEEP([IOD],IOMASK);     08933000
      DLNK[29] ~ NEXTLINK;                                              08934000
      DISKIO(IOD,+(DLNK INX 0-1),30,LASTLINK); SLEEP([IOD],IOMASK);     08935000
PS2:  S[2].[CF] ~ IF (S[18]~PRIORITY) > 32767 THEN 32767 ELSE PRIORITY; 08936000
      LEVEL ~ IF PRIORITY > MIXMAX THEN MIXMAX ELSE PRIORITY;           08937000
      IF SHEET[LEVEL].[CF] ! 0 THEN                                     08938000
      BEGIN DISKIO(IOD,-(DLNK INX 0-1),30,SHEET[LEVEL].[FF]);           08939000
            SLEEP([IOD],IOMASK);                                        08940000
            DLNK[29] ~ THISLINK;                                        08941000
            DISKIO(IOD,+(DLNK INX 0-1),30,SHEET[LEVEL].[FF]);           08942000
            SLEEP([IOD],IOMASK);                                        08943000
      END ELSE SHEET[LEVEL] ~ THISLINK;                                 08944000
      SHEET[LEVEL].[FF] ~ THISLINK;                                     08944500
      S[29] ~ 0; S[3] ~ ABS(S[3]); % TO GET SELECTION TO PRINT MESSAGE; 08945000
      DISKIO(IOD,+(S INX 0-1),30,THISLINK); SLEEP([IOD],IOMASK);        08946000
      FORGETSPACE(DLNK); FORGETSPACE(BUFF);                             08947000
EXIT: SHEETFREE ~ TRUE;                                                 08997000
      FORGETSPACE(S);                                                   08998000
      IF TYPE!34 THEN BEGIN KEYBOARDCOUNTER ~ KEYBOARDCOUNTER-1;        08998200
                            SELECTION;                                  08998400
                            KEYBOARDCOUNTER ~ KEYBOARDCOUNTER+1;        08998600
                      END;                                              08998800
END SHEETDIDDLER;                                                       08999000
$ INCLUDE 09281981, IF DCSPO AND DATACOM AND NOT INQUIRY;               08999999
PROCEDURE REMOTEMESSAGE(BUFF,TYPE,MIX); VALUE BUFF,TYPE,MIX;            09000000
                                        REAL  BUFF,TYPE,MIX;            09001000
COMMENT TYPE = 41: SS -- STATION-TO-STATION MESSAGE                     09002000
             = 42: SM -- START MIX-MESSAGES (MIX NOT GIVEN)             09003000
             = 21: SM -- START MIX-MESSAGES (ON SPECIFIED MIX)          09004000
             = 43: HM -- HALT MIX-MESSAGES                              09004100
             = 44: TC -- TIME AND CHARGES FOR REMOTE CONNECTION         09005000
             = 22: HR -- DETACH REMOTE STATION FROM PROGRAM;            09006000
BEGIN REAL  ADDR,STA,T,B;                                               09007000
      INTEGER ES,EM,EH;                                                 09007100
      NAME A;                                                           09007200
      REAL ALL;                                                         09007300
      ARRAY BUFA = BUFF[*];                                             09007400
      LABEL GS;                                                         09007500
      LABEL NOTSPO,SMRI,HRR,HICCUP,EXIT;                                09008000
      LABEL       SSR,SMR0,HMR,TCR;                                     09009000
      SWITCH SW ~ SSR,SMR0,HMR,TCR;                                     09010000
      BUFF ~ ((ADDR~BUFF).[15:15]-1)&M[P(DUP)-1][9:9:9];                09011000
      IF BUFF.[9:9]=0 THEN                                              09012000
         IF NOT(MIX!63 AND TYPE=26) AND TYPE!41 THEN GO TO EXIT;        09012100
      IF      TYPE=21 THEN GO TO SMRI                                   09013000
      ELSE IF TYPE=22 THEN GO TO HRR                                    09014000
      ELSE IF TYPE=26 THEN GO TO SSR                                    09014100
      ELSE IF TYPE=29 THEN GO HMR                                       09014200
      ELSE GO TO SW[TYPE-41];                                           09015000
SSR:  STREAM(N1~0,N2~0:ADDR,T1~"SPO",T2~"ALL");                         09030000
        BEGIN SI~ADDR;                                                  09031000
        L1:   IF SC=" " THEN BEGIN SI~SI+1; GO TO L1 END;               09032000
              DI~LOC T1; DI~DI+5;                                       09033000
              IF 3 SC=DC THEN                                           09034000
                   BEGIN DI~LOC N2; SKIP DB; DS~9SET; GO CHECKCOLON END;09035000
              SI ~ SI-3;                                                09035100
              IF SC=":" THEN BEGIN DI~LOC N1; GO TO LA; END;            09035200
              DI ~ LOC T2; DI ~ DI + 5;                                 09035300
              IF 3 SC=DC THEN                                           09035400
                   BEGIN DI~LOC N2;                                     09035500
        LA:        SKIP 1 DB; DS~SET; SKIP 45 DB; DS~SET; GO CHECKCOLON;09035600
                   END;                                                 09035700
              SI~SI-3; IF SC<"0" THEN GO ERROR; IF SC>"9" THEN GO ERROR;09036000
              SI ~ SI+1; DI~LOC N1;                                     09037000
              IF SC<"0" THEN GO TO L1A;                                 09038000
              IF SC{"9" THEN BEGIN      SI~SI-1; DS~2 OCT END           09039000
                        ELSE BEGIN L1A: SI~SI-1; DS~1 OCT END;          09040000
        L2:   IF SC=" " THEN BEGIN SI~SI+1; GO TO L2 END;               09041000
              IF SC!"/" THEN GO TO ERROR;                               09042000
              SI~SI+1;                                                  09043000
        L3:   IF SC=" " THEN BEGIN SI~SI+1; GO TO L3 END;               09044000
              IF SC<"0" THEN GO ERROR; IF SC>"9" THEN GO ERROR;         09045000
              SI~SI+1;                                                  09046000
              IF SC<"0" THEN GO TO L3A;                                 09047000
              IF SC{"9" THEN BEGIN      SI~SI-1; DS~2 OCT END           09048000
                        ELSE BEGIN L3A: SI~SI-1; DS~1 OCT END;          09049000
        CHECKCOLON: IF SC=" " THEN BEGIN SI~SI+1; GO TO CHECKCOLON END; 09050000
              IF SC=":" THEN GO TO EXITS;                               09051000
        ERROR:DI~LOC N1; SKIP DB; DS~9SET;                              09052000
        EXITS:                                                          09053000
        END STREAM;                                                     09054000
      B~P; IF (T~P)<0 THEN                                              09055000
              IF (MIX|(MIX!63)!0 AND T) THEN                            09055100
                   BEGIN ALL~3;T~0; GO TO GS;END                        09055200
              ELSE GO TO EXIT;                                          09055300
      IF B<0 THEN BEGIN IF B THEN ALL ~ 3 + (MIX!0 AND MIX!63); B~0; END09056000
                ELSE IF T = 0 THEN GO TO EXIT;                          09057000
      COMMENT IF B<0 THEN IF B  THEN "ALL" ELSE "SPO";                  09057100
      IF T > TUMAX OR B > 15 THEN GO TO EXIT;                           09058000
      IF T! 0 THEN %(IF NOT SPO)                                        09059000
        BEGIN                                                           09059500
          IF P(STATION[B,*],TOP,XCH,DEL) THEN GO TO NOTSPO;             09060000
          IF (STA~GET(0&T[9:44:4]&B[14:44:4])).[4:4]=T AND STA.[18:4]=B 09060100
$ INCLUDE 09060201, IF RJE;                                             09060199
              AND NOT STA                                               09060200
              THEN GO TO NOTSPO;                                        09060300
         P(WAITIO((STA AND @0007570000000000)&1[18:47:1],               09060500
                   @777700004,30),DEL); % DO ACTIVE INTERROGATE         09060600
          IF STATION[B,T].[30:1] THEN                                   09060700
NOTSPO:   BEGIN; % DESTINATION STATION DOES NOT HAVE SPO CAPABILITIES   09061000
              STREAM(T,B,X~1+(B>9),BUFF);                               09062000
              BEGIN DS~8LIT"INV STN ";                                  09063000
                    SI~LOC T;DS~2DEC;BUFF~DI;DI~DI-2;DS~FILL;DI~BUFF;   09064000
                    DS~LIT"/";DS~X DEC; DS~LIT"~";                      09065000
              END STREAM;                                               09066000
              GO TO EXIT;                                               09067000
          END;                                                          09068000
        END;                                                            09068500
        GS:                                                             09068600
      ADDR ~ BUFF&(GETSPACE(2,0,0)+2)[33:33:15];                        09069000
      M[ADDR] ~ NOT 0; SPOUT(ADDR);                                     09070000
      STREAM(FT~BUFF.[9:4],FB~BUFF.[14:4],X~1+(BUFF.[14:4]>9),BUFF);    09072000
         BEGIN DS:=6 LIT "#FROM ";                                      09073000
                SI~LOC FT; SI~SI+7;                                     09074000
                IF SC = "0"                                             09075000
                   THEN DS~3LIT"SPO"                                    09076000
                   ELSE BEGIN SI~SI-7; DS~2DEC; BUFF~DI; DI~DI-2;       09077000
                              DS~FILL; DI~BUFF; DS~LIT"/"; DS~X DEC;    09078000
                        END;                                            09079000
                BUFF~DI; SI~BUFF;                                       09080000
          BLANK:IF SC!":" THEN BEGIN DS~LIT" "; SI~SI+1; GO BLANK; END; 09081000
          END STREAM;                                                   09082000
      BUFF:=BUFF&T[9:44:4]&B[14:44:4]&1[2:47:1];                        09082500
      GO TO EXIT;                                                       09083000
SMR0: SET((STA~GET(BUFF))&0[31:47:1]);                                  09092000
      GO HICCUP;                                                        09093000
SMRI: IF SMGAMES(MIX, STA~GET(BUFF),1) THEN                             09094000
         BEGIN                                                          09095000
         GO HICCUP;                                                     09096500
         END                                                            09097000
      ELSE                                                              09098000
         GO EXIT;                                                       09099000
HMR:  STA~ GET(BUFF);                                                   09100000
      IF MIX=63 THEN                                                    09101000
         IF STA.[31:1] THEN                                             09104000
              GO HICCUP                                                 09105000
         ELSE                                                           09106000
              SET(STA&1[31:47:1])                                       09107000
      ELSE                                                              09108000
         IF SMGAMES(MIX,STA,0) THEN                                     09109000
              GO HICCUP                                                 09110000
         ELSE                                                           09111000
              GO EXIT;                                                  09112000
      GO HICCUP;                                                        09112500
TCR:  STA := GET(BUFF) AND @7570000000000;                              09113000
      IF P(LOOKQ,STA,LLL,.A,STD).[9:9]! STA.[9:9] THEN GO TO EXIT;      09113020
      T:=(XCLOCK DIV 60) - A[7];                                        09113040
      ES := T MOD 60;                                                   09113060
      T := T DIV 60;                                                    09113080
      EM := T MOD 60;                                                   09113100
      EH := T DIV 60;                                                   09113120
      STREAM       (                                                    09113140
             EH,EM,ES,BUFF);                                            09113160
      BEGIN DS:= 22 LIT " TIME SINCE LOG-IN IS "; SI:=LOC EH;           09113180
            3(DS:=LIT ":"; DS:= 2 DEC);                                 09113240
            DS:= LIT "~"; DI:=DI-10; DS:=8 FILL;                        09113260
      END OF STREAM;                                                    09113280
      GO TO EXIT;                                                       09113300
HRR:  IF JAR[MIX,*] = 0 THEN GO TO EXIT;                                09115000
    IF GET(BUFF).[37:1] THEN GO TO EXIT;                                09115500
      TACH(BUFF,MIX,0);                                                 09116000
      GO TO HICCUP;                                                     09117000
HICCUP:M[BUFF] ~ NOT 0;                                                 09196000
EXIT: IF ALL!0 THEN P(WHATSUP(0,MIX|(MIX!63),ALL,BUFA),DEL)             09197000
              ELSE SPOUT(BUFF);                                         09197100
END REMOTEMESSAGE;                                                      09198000
PROCEDURE LGINOUT(BUFF,TYPE); VALUE BUFF,TYPE; REAL BUFF,TYPE;          09200000
COMMENT TYPE = 0 -- "LO" LOG-OUT MESSAGE                                09208000
             = 1 -- "LI" LOG-IN MESSAGE                                 09209000
             = 2 -- "ZZ" EOT SENSED, MESSAGE CREATED IN INQUPT;         09210000
BEGIN REAL    ADDR,C,STA;                                               09212000
      REAL UZERID; BOOLEAN NOUZER;                                      09212750
      INTEGER I,TIME;                                                   09213000
      LABEL   EXIT,LOGIN,LOGOUT,EOT,ENDD;                               09214000
      INTEGER RECORDSIZE,Q,F;                                           09214100
      REAL C1,FH,DISKADR,TEMPLOG;                                       09214200
      LABEL OWT,ENDFILE,FOUND;                                          09214300
      REAL PASSBACK=-4;  %USED BY RJEINPUT TO GATHER USERCODE           09214350
      REAL CODES,T,T1;                                                  09214400
      REAL DKSGROW,ROWS,ROW,ROWSZ;                                      09214405
      REAL NT1;                                                         09214410
      NAME A;                                                           09214415
SUBROUTINE DELINKER;                                                    09214420
BEGIN C1:= STA AND @7570000000000;                                      09214425
      IF P(LOOKQ,C1,LLL,.A,STD).[9:9]=C1.[9:9] THEN                     09214430
         BEGIN                                                       %JS09214431
$INCLUDE 09214434, IF DCLOG AND DATACOM AND NOT INQUIRY;                09214432
         REMOTELOGGER(1,UZERID~M[A INX 1],C1,STA);                      09214433
         M[A[0]]~(*P(DUP))&A[0][FTF];                                %JS09214435
         M[A[0].[FF]]:=(*P(DUP))&A[0][CTC];                          %JS09214440
         FORGETSPACE(A INX 1);                                       %JS09214445
         END                                                            09214450
$INCLUDE 09214453, IF DCLOG AND DATACOM AND NOT INQUIRY;                09214451
      ELSE REMOTELOGGER(1,UZERID~@0037456443433760,C1,STA);             09214452
END DELINKER;                                                           09214455
BOOLEAN SUBROUTINE CHECKUSER;                                           09214500
    BEGIN                                                               09214505
$ INCLUDE 09214509, IF RJE;                                             09214507
          IF NOT STA THEN                                               09214508
          NAMEID(C,ADDR);  NAMEID(C,ADDR);                              09214510
          NT1:=0;                                                       09214515
          IF (FH:=DIRECTORYSEARCH("REMOTE ","USERS  ",3))=0 THEN        09214525
          BEGIN NT1 ~ 1; NOUZER ~ 1; GO OWT END;                        09214530
          NAMEID(C1,ADDR); NAMEID(C1,ADDR);                             09214540
                DKSGROW:=M[FH+8];                                       09214550
                RECORDSIZE:=M[FH].[1:14];                               09214560
                CODES:=    GETSPACE(30,0,0)+2;                          09214570
               ROWS := M[FH +9] - 1;                                    09214580
                FOR ROW :=0 STEP 1 UNTIL ROWS DO                        09214582
                BEGIN IF(DISKADR:=M[FH+10+ROW])=0 THEN GO TO ENDFILE;   09214584
                      ROWSZ:= DISKADR + DKSGROW;                        09214586
                      WHILE DISKADR < ROWSZ DO                          09214588
                      BEGIN DISKIO(T,1-CODES,30,DISKADR);               09214590
                      SLEEP([T],IOMASK); Q:=0;                          09214600
                      WHILE Q < 30 DO                                   09214610
                      BEGIN IF((T:=NFLAG(M[CODES+Q]))EQV @114)=NOT 0    09214620
                            THEN GO TO ENDFILE;                         09214630
                            IF (T EQV C) = NOT 0 THEN                   09214640
                            IF RECORDSIZE = 6 THEN GO TO FOUND ELSE     09214650
                            IF(T1:=NFLAG(M[CODES+Q+6]))<0  THEN         09214660
                            IF (ABS(T1) EQV C1) ! NOT 0 THEN            09214665
                            GO TO ENDFILE ELSE GO TO FOUND              09214670
                            ELSE GO TO FOUND;                           09214675
                            Q:= Q + RECORDSIZE;                         09214690
                      END;                                              09214700
                      DISKADR:=DISKADR+1;                               09214705
                      END OF ROW;                                       09214710
                END; GO TO ENDFILE;                                     09214715
    FOUND:                                                              09214720
                TEMPLOG:=GETSPACE(8,0,0) +2;                            09214730
                NT1:=BUFF AND @7570000000000;                           09214740
                M[F:=TEMPLOG-1]:=NT1&P(LOOKQ,NT1,LLL,.A,STD)            09214750
                               [FTF]&(A)[CTC];                          09214760
                M[A[0].[FF]].[CF]:= F;  A[0].[FF]:= F;                  09214770
                STREAM(S:=CODES+Q,T:=T:=XCLOCK DIV 60,TEMPLOG);         09214780
                BEGIN SI~S; DS~6 WDS;SI~LOC T; DS~WDS END;              09214790
            NT1:=TRUE;                                                  09214920
    ENDFILE:    FORGETSPACE(FH);                                        09214925
                FORGETSPACE(CODES INX 0);                               09214930
                FORGETSPACE(DIRECTORYSEARCH("REMOTE ","USERS  ",13));   09214950
    OWT:                                                                09214960
      CHECKUSER:=NT1;                                                   09214965
    END;                                                                09214970
      BUFF ~ ((ADDR~BUFF).[15:15]-1)&M[P(DUP)-1][9:9:9];                09216000
     IF BUFF.[9:9]{1 THEN GO EXIT;                                      09217000
      STA ~ GET(BUFF);                                                  09218000
      TIME ~ ((I~(XCLOCK DIV 3600)) MOD 60  +(I DIV 60)|100);           09219000
      IF TYPE=0 THEN GO TO LOGOUT;                                      09220000
      IF TYPE=1 THEN GO TO LOGIN;                                       09221000
      IF TYPE=2 THEN GO TO EOT;                                         09222000
      GO TO EXIT;                                                       09223000
LOGIN:IF STA.[46:1] THEN BEGIN C ~ BUFF;                                09225000
                               BUFF ~ BUFF&(GETSPACE(10,0,0)+2)[CTC];   09225100
                               GO TO LOGOUT;                            09225200
                         END;                                           09225300
      Q ~ CHECKUSER;                                                    09241000
$ INCLUDE 09241751, IF RJE;                                             09241099
      IF NOT Q AND STA THEN                                             09241100
      BEGIN IF (T EQV C) ! NOT 0 THEN                                   09241150
           BEGIN C:=0; NT1:=@2462255123462425; END                      09241160
           ELSE IF C1.[6:6]!"~" THEN NT1:=@0721626266465124 % PASSWORD  09241200
           ELSE M[PASSBACK]:=0;                                         09241210
           STREAM(B:=(M[PASSBACK]=4),N:=FLAG(NT1),BUFF);                09241250
           BEGIN B(DS:=23 LIT "INVALID LOG-ON SEQUENCE";JUMP OUT TO AX);09241300
                N(DS:=8 LIT "INVALID "; SI:=LOC N; DS:=WDS; SI:=LOC N;  09241350
                  DS:=13 LIT " -- RE-ENTER ";DS:=8 CHR;JUMP OUT TO AX); 09241400
                DS:=21 LIT "ENTER PASSWORD PLEASE";                     09241450
           AX:  DS:=LIT "~";                                            09241500
           END;                                                         09241550
           PASSBACK:=C; GO TO EXIT;                                     09241600
      END;                                                              09241650
      STREAM(X~1+(STA.[14:4]>9),TU~STA.[9:4],BU~STA.[14:4],TIME,        09242000
              U~UZERID~(IF NOUZER THEN "~NULL~ " ELSE M[TEMPLOG]),      09242100
             Q ~ Q, BUFF);                                              09243000
      BEGIN DS~ 9 LIT "#STATION ";                                      09244000
            SI~LOC TU;DS~2DEC; BUFF~DI;DI~DI-2;DS~FILL;DI~BUFF;         09245000
            DS~LIT "/"; DS~X DEC; X~DI;                                 09246000
            DS~ 20 LIT ": NULL VERIFICATION~"; DI~X;                    09247000
            Q(DS~ 14 LIT " LOGGED-IN AT "; DS~4 DEC; DS~ 4 LIT " BY ";  09248000
              SI~SI+1; DS~ 7 CHR; DS~ LIT "~");                         09248100
      END OF STREAM;                                                    09249000
$INCLUDE 09249258, IF DCLOG AND DATACOM AND NOT INQUIRY;                09249249
      IF Q OR NOUZER THEN REMOTELOGGER(2,UZERID,STA,0);                 09249250
      IF Q THEN                                                         09249500
         BEGIN                                                          09249600
         SET(GET(STA) OR 2); % TURN OFF LOGGED-IN BIT                   09249700
         BUFF~ NABS(BUFF); % LET SPO KNOW IT WAS DONE                   09249800
         END;                                                           09249900
      GO TO EXIT;                                                       09250000
LOGOUT: IF STA.[46:1]=0 THEN GO TO EXIT;                                09252000
$ INCLUDE 09252161, IF RJE;                                             09252099
      IF STA THEN                                                       09252100
      BEGIN                                                             09252110
           FOR T:=1 STEP 1 UNTIL MIXMAX DO                              09252120
           IF JAR[T,*] ! 0 THEN                                         09252130
           IF JAR[T,6].[9:9]=STA.[9:9] THEN GO TO EXIT;                 09252140
           SET(STA:=GET(STA)&0[46:47:1]);                               09252150
      END ELSE                                                          09252160
      BEGIN                                                             09252200
    SET(STA~(GET(STA))&0[46:47:1]&0[31:47:1]);%TURN OFF LI & HM         09253000
         IF STA.[32:1] THEN SPOSIN(STA,2,0); %  DE-SPO IT;              09254000
      TACH(STA,0,0);                                                    09255000
      END;                                                              09255100
      DELINKER;                                                         09255500
      STREAM(X~1+(STA.[14:4]>9),TU~STA.[9:4],BU~STA.[14:4],TIME,BUFF);  09256000
      BEGIN DS~9 LIT "#STATION ";                                       09257000
            SI~LOC TU; DS~2 DEC; BUFF~DI; DI~DI-2; DS~FILL; DI~BUFF;    09258000
            DS~LIT"/"; DS~X DEC; DS~15 LIT " LOGGED-OUT AT ";           09259000
            DS~4 DEC; DS~LIT"~";                                        09260000
      END STREAM;                                                       09261000
         BUFF~ NABS(BUFF); % LET SPO KNOW                               09261500
      IF TYPE=0 THEN GO TO EXIT; % (IF TRUE LOG-OUT CALL)               09262000
      SPOUT(BUFF);                                                      09263000
      BUFF ~ C;                                                         09264000
      GO TO LOGIN;                                                      09265000
EOT:  DELINKER;                                                         09267000
$ INCLUDE 09270501, IF RJE;                                             09267499
      IF STA THEN  %RJE                                                 09267500
      BEGIN                                                             09268000
           FOR T:=1 STEP 1 UNTIL MIXMAX DO                              09268500
           IF JAR[T,*]!0 THEN                                           09269000
           IF JAR[T,6].[9:9]=STA.[9:9] THEN                             09269500
           IF JAR[T,0]="PRNPBT " AND JAR[T,1]="DISK   " THEN            09269600
           BEGIN REPLY[T]:=16; PRT[T,@25]:=5; END ELSE                  09269700
           TERMINATE(T&67[CTF]);                                        09270000
      END ELSE                                                          09270500
      BEGIN                                                             09271000
           STREAM(A:="~~":ADDR);                                        09271500
           BEGIN                                                        09272000
                SI:=LOC A; SI:=SI+6;                                    09272500
                IF 2 SC!DC THEN A:=TALLY;                               09273000
           END;                                                         09273500
           IF P=0 THEN GO TO EXIT;                                      09274000
           SET(STA&0[46:47:1]&0[31:47:1]);                              09274500
           IF STA.[32:1] THEN SPOSIN(STA,2,0);                          09275000
     END;                                                               09275500
STREAM(X~1+((T~STA.[9:4])>9),Y~1+((T1~STA.[14:4])>9),TU~T,BF~T1,TIME,   09276000
      BUFF); BEGIN                                                      09276100
         DS~ 9 LIT "#STATION "; SI~ LOC TU;                             09276200
         DS~ X DEC;  DS~ LIT "/";  DS~ Y DEC;                           09276300
         DS~ 15 LIT " DISCONNECT AT ";  DS ~4 DEC;  DS~ LIT "~";        09276400
         END;                                                           09276500
    BUFF~ BUFF.[CF];                                                    09277000
EXIT: SPOUT(BUFF);                                                      09278000
ENDD:                                                                   09279000
END LGINOUT;                                                            09280000
PROCEDURE BLACKOUT(BUFF);                                               09281000
VALUE BUFF; REAL BUFF;                                                  09281100
BEGIN                                                                   09281200
    INTEGER I;                                                          09281300
    REAL RD,STA;                                                        09281310
    DEFINE STACURR=STATION[RD.[14:4],RD.[9:4]]#;                        09281320
    IF BUFF.[9:9] ! 0 THEN                                              09281350
    FOR I:=22 STEP 16 UNTIL 54 DO                                       09281400
    BEGIN;STREAM(I,Q:=RD:=BUFF &@40[3:42:6]);                           09281500
          BEGIN SI:=LOC I;SI:=SI+7; DS:=LIT "{";                        09281600
                25(DS:=CHR; SI:=SI-1); DS:=2LIT "{~";                   09281700
          END STREAM;                                                   09281800
          IOREQUEST(NABS(RD&@113[25:40:8]),RD,[RD]&30[12:42:6]);        09281900
                STA := STACURR := STACURR&1[29:47:1];                   09281905
          SLEEP([RD],IOMASK);                                           09281910
          IF RD.[23:10]=0 THEN                                          09281920
                COMPLEXSLEEP(STACURR!STA)                               09281940
              ELSE I:=58;                                               09281950
    END;                                                                09281960
         FORGETSPACE(BUFF INX 0);                                       09281970
END BLACKPUT;                                                           09281980
$ INCLUDE 09302101, IF DISKLOG;                                         09299999
PROCEDURE LOGDISK(A); VALUE A; REAL A;                                  09300000
BEGIN                                                                   09300100
    REAL RCW=+0,MID=RCW+1,FID=MID+1,C=FID+1,N=C+1;                      09300200
    LABEL SEEK;                                                         09300500
    P(GETSPACE(128, 12,0)+1,STS,A,RCW,0,RDS,0,XCH,CFX,STF,0,0,0,0);     09300600
    STACKUSE~1;                                                         09300700
SEEK:                                                                   09300800
    SEEKNAM(-1,-1,C,MID,FID,N);                                         09300900
    IF C!0 THEN                                                         09301000
    BEGIN                                                               09301100
              IF NOT SYSTEMFILE(MID,FID) THEN                           09301250
         FORGETSPACE(DIRECTORYSEARCH(MID,FID,15 ));                     09301300
         GO SEEK;                                                       09301400
    END;                                                                09301600
    STREAM(N~N~GETSPACE(10,0,0)+2);                                     09301700
         DS~29 LIT"#DISK FILE LOGGING COMPLETED~";                      09301800
    SPOUT(N);                                                           09301900
    KILL([A]);                                                          09302000
END;                                                                    09302100
PROCEDURE WHATINTRNSIC(BUFF);  VALUE BUFF;  REAL BUFF; FORWARD;         09400000
         PROCEDURE INTRINSICTABLEBUILDER(FH);%                          09500000
         VALUE FH;  REAL FH;                                            09501000
         BEGIN REAL DISKADDR, LOC, T, IOD;%                             09502000
              DISKIO(IOD, -(LOC ~ GETSPACE(30, 0, 0))-1, 30,%           09503000
                        DISKADDR ~ M[FH INX 10]);%                      09504000
              SLEEP([IOD], IOMASK);%                                    09505000
              T ~ M[LOC+2]+1;%                                          09506000
              INTRNSC ~ [M[GETSPACE(T, 0, 0)+2]]&T[8:38:10];%           09507000
              IF T>30 THEN BEGIN%                                       09508000
                   DISKIO(IOD, -(INTRNSC INX 0)+1, T, DISKADDR);%       09509000
                   SLEEP([IOD], IOMASK);%                               09510000
              END ELSE MOVE(T, LOC+2, INTRNSC INX 0);%                  09511000
              NT1 ~ 1;%                                                 09512000
              DO INTRNSC[NT1] ~ NABS((P(*P(DUP), DUP).[8:10]+INTSIZE)%  09513000
                   &(P(XCH) INX 0 + DISKADDR)[6:21:27])%                09514000
                UNTIL (NT1~NT1+1)=T;%                                   09515000
              FORGETSPACE(LOC+2);%                                      09516000
              INTSIZE ~ (INTRNSC[0]+3) DIV 4;%                          09517000
    END OF INTRINSIC TABLE BUILDER;%                                    09519000
 PROCEDURE CHANGEINTRINSICFILE(BUFF);  VALUE BUFF;  REAL BUFF;%         09600000
 BEGIN REAL RCW=+0,A=RCW+1,B=A+1,IOD=B+1,I=IOD+1,J=I+1,K=J+1,L=K+1;%    09601000
   REAL FH=L+1,T=FH+1,IT=T+1; LABEL EXIT,WITHOUT;                       09602000
    BOOLEAN SUBROUTINE NULLMIX;%                                        09603000
    BEGIN POLISH(1);%                                                   09604000
         IF INTSIZE!0 THEN BEGIN INTSIZE ~ 0;%                          09605000
              FOR I~1 STEP 1 UNTIL MIXMAX DO%                           09606000
              IF JARROW[I]!0 THEN%                                      09607000
              IF ((JAR[I,1] EQV "DISK   ")!NOT 0) OR%                   09608000
                (((JAR[I,0] EQV "LDCNTRL")!NOT 0) AND%                  09609000
                 ((JAR[I,0] EQV "LIBMAIN")!NOT 0) AND                   09609500
                 ((JAR[I,0] EQV "PRNPBT ")!NOT 0)) THEN%                09610000
              BEGIN P(DEL, 0);  I ~ MIXMAX;  END;%                      09611000
              IF NOT P(DUP) THEN INTSIZE ~ (INTRNSC[0]+3) DIV 4;%       09612000
         END;%                                                          09613000
         NULLMIX ~ POLISH;%                                             09614000
    END NULLMIX;%                                                       09615000
    SUBROUTINE FORGETEM;%                                               09616000
    BEGIN SLEEP([TOGLE],STOREMASK);  STOREDY ~ FALSE;%                  09617000
         WHILE (K ~ M[L]).[CF]!0 DO%                                    09618000
         BEGIN IF K>0 THEN%                                             09619000
              IF K.[3:12]=@700 THEN%                                    09620000
                FORGETSPACE(L+2);%                                      09621000
              L ~ K.[CF];%                                              09622000
         END;%                                                          09623000
         STOREDY ~ TRUE;%                                               09624000
              FORGETSPACE(INTRNSC INX 0); INTRNSC~0                     09624100
    END FORGETEM;%                                                      09625000
    DEFINE ERROR = GO TO EXIT#;%                                        09626000
    P(GETSPACE(128, 12,0)+1,STS,BUFF,RCW,0,RDS,0,XCH,CFX,STF);          09627000
         P(0,0,0,0,0,0,0,0,0,0,0);                                      09628000
    STACKUSE ~ TRUE;%                                                   09629000
         SLEEP([TOGLE], FREEMASK);  INTFREE ~ FALSE;%                   09630000
         T ~ BUFF;%                                                     09631000
         NAMEID(A,T);  NAMEID(B,T);  NAMEID(B,T);%                      09632000
         IF (FH:=DIRECTORYSEARCH(A,B,17))=0 THEN ERROR;                 09633000
         IF NOT NULLMIX THEN COMPLEXSLEEP(NULLMIX);                     09635000
         IF INTRNSC!0 THEN FORGETEM;                                    09636000
$ OMIT 09638001, IF SHAREDISK;                                          09636999
         IF MCPFREE!0 THEN SLEEP([TOGLE],MCPMASK);                      09637000
         MCPFREE:=0;                                                    09638000
         T:=GETSPACE(30,0,0)+2;                                         09639000
         DISKWAIT(-T,-30,0);                                            09640000
         I:=T+13+5|SYSNO;                                               09641000
         IF (IT:=DIRECTORYSEARCH(M[I],M[I+1],16))!0 THEN                09642000
         FORGETSPACE(IT);                                               09643000
         M[I]:=A;                                                       09644000
         M[I+1]:=B;                                                     09645000
         DISKWAIT(T,-30,0);                                             09646000
$ OMIT 09647001, IF SHAREDISK;                                          09646999
         MCPFREE:=1;                                                    09647000
         FORGETSPACE(T);                                                09648000
         INTRINSICTABLEBUILDER(FH);                                     09657000
         FORGETSPACE(FH);                                               09658000
         STREAM(A, B, NT1 ~ BUFF.[15:15]-1);%                           09670000
         BEGIN DS ~ 24 LIT " NEW INTRINSIC FILE IS: ";%                 09671000
              SI ~ LOC A;  SI ~ SI+1;  DS ~ 7 CHR;  SI ~ SI+1;%         09672000
              DS ~LIT "/";  DS ~ 7 CHR;  DS ~ 2 LIT ".~";%              09673000
         END STREAMING AROUND;%                                         09674000
    EXIT:  SPOUT(BUFF.[15:15]-1);%                                      09676000
         INTFREE ~ TRUE;%                                               09677000
         BUFF ~ 0;  KILL([BUFF]);%                                      09678000
    END CHANGING INTRINSIC FILES ON USER DISK WITH MANY PRECAUTIONS;%   09679000
PROCEDURE CHANGEMCP(BUFF); VALUE BUFF; REAL BUFF;                       09679100
BEGIN                                                                   09679200
    REAL RCW=+0,A=RCW+1,B=A+1,T=B+1,Z=T+1,BASE=Z+1;                     09679300
    LABEL EXIT;                                                         09679400
    P(GETSPACE(128, 12,0)+1,STS,BUFF,RCW,0,RDS,0,XCH,CFX,STF);          09679500
    P(0,0,0,0,0);                                                       09679600
    STACKUSE:=TRUE;                                                     09679700
    T:=BUFF;                                                            09679800
    NAMEID(A,T); NAMEID(B,T); NAMEID(B,T);                              09679900
$ OMIT 09680101, IF SHAREDISK;                                          09679999
    IF MCPFREE!0 THEN SLEEP([TOGLE],MCPMASK);                           09680000
    MCPFREE:=0;                                                         09680100
    Z:=GETSPACE(30,0,0)+2;                                              09680200
    DISKWAIT(-Z,-30,0);                                                 09680300
    BASE:=Z+10+5|SYSNO;                                                 09680400
    IF (A EQV M[BASE])!NOT 0 OR                                         09680500
       (B EQV M[BASE+1])!NOT 0 THEN                                     09680600
    BEGIN                                                               09680700
         IF (T:=DIRECTORYSEARCH(A,B,17))=0 THEN                         09680800
         BEGIN;                                                         09680900
              STREAM(A:=[A],T:=BUFF.[15:15]-1);                         09681000
              BEGIN DS:=13 LIT"#NO MCP FILE ";SI:=A;SI:=SI+1;           09681100
                   DS:=7 CHR;DS:=LIT"/";SI:=SI+1;DS:=7 CHR;             09681200
              DS~LIT"~";                                                09681250
              END;                                                      09681300
              GO TO EXIT;                                               09681400
         END;                                                           09681500
         IF M[BASE+2]-2!MCPBASE THEN                                    09681600
         FORGETSPACE(DIRECTORYSEARCH(M[BASE],M[BASE+1],16));            09681650
         M[BASE]:=A;                                                    09681700
         M[BASE+1]:=B;                                                  09681800
         M[BASE+2]:=M[T+10];                                            09681900
    END;                                                                09682100
    STREAM(A:=[A],T:=BUFF.[15:15]-1);                                   09682200
    BEGIN DS:=18 LIT " NEXT MCP WILL BE ";SI:=A;SI:=SI+1;               09682300
         DS:=7 CHR;DS:=LIT"/";SI:=SI+1;DS:=7 CHR;                       09682400
         DS~LIT"~";                                                     09682450
    END;                                                                09682500
EXIT:                                                                   09682600
    DISKWAIT(Z,-30,0);                                                  09682610
$ INCLUDE 09682621, IF NOT SHAREDISK;                                   09682619
    MCPFREE:=TRUE;                                                      09682620
    FORGETSPACE(Z);                                                     09682700
    SPOUT(BUFF.[15:15]-1);                                              09682800
    BUFF:=0; KILL([BUFF]);                                              09683000
END CHANGING OF THE MCP;                                                09683100
    BOOLEAN PROCEDURE SYSTEMFILE(A,B);  VALUE A,B;  REAL A,B;%          09700000
    BEGIN LABEL DISK,LOG,TRUTH,DIR,SYS,REM,DECK,MASK,TEST;              09701000
         LABEL DMP,LIB;                                                 09701500
$ INCLUDE 09701601, IF STATISTICS;                                      09701599
LABEL STATS,STLOG;                                                      09701600
         DEFINE T=P(TRUTH)#;%                                           09702000
         IF (B EQV P(DISK))=T THEN%                                     09703000
              P(((A EQV P(DIR))=T) OR                                   09704000
              ((A EQV P(LOG))=T) OR                                     09704100
              ((A EQV P(DMP))=T) OR ((A EQV P(LIB))=T))                 09704500
         ELSE IF (B EQV P(LOG))=T THEN%                                 09705000
              P(((A EQV P(SYS))=T) OR ((A EQV P(REM))=T))%              09706000
         ELSE IF (A EQV P(DECK))=T THEN%                                09707000
              P(((B AND P(MASK)) EQV P(TEST))=T)%                       09708000
$ INCLUDE 09708301, IF STATISTICS;                                      09708099
         ELSE IF (B EQV P(STATS))= T THEN%                              09708100
              P(((A EQV P(SYS))=T) OR                                   09708200
              ((A EQV P(STLOG))=T))                                     09708300
         ELSE P(0);%                                                    09709000
         P(RTN);%                                                       09710000
    DISK :::  "DISK   ";%                                               09711000
    LOG  :::  "LOG    ";%                                               09712000
    TRUTH:::  @3777777777777777;%                                       09713000
    DIR  :::  "DIRCTRY";%                                               09715000
    SYS  :::  "SYSTEM ";%                                               09716000
    REM  :::  "REMOTE ";%                                               09717000
    DECK :::  "DECK   ";%                                               09718000
    MASK :::  @77000000007777;%                                         09719000
    TEST :::  @12000000003714;%                                         09720000
    DMP  :::  "DMPAREA";%                                               09720500
    LIB  :::  "LIBMAIN";                                                09720600
$ INCLUDE 09720801, IF STATISTICS;                                      09720699
    STATS:::  "STATS  ";%                                               09720700
    STLOG:::  "STLOG  ";%                                               09720800
    END;%                                                               09721000
$INCLUDE 12157001, IF DEBUGGING;                                        09999999
COMMENT  GNC RETURNS  CHARACTER AT B AND BUMPS B BY ONE ;%              10000000
REAL STREAM PROCEDURE GNC(B);%                                          10001000
         BEGIN LOCAL T;  SI ~ B; DI~ LOC T; DS~ WDS;%                   10002000
         SI ~ T; SI~SI+1; DI~LOC GNC ; DI~DI+7; DS~CHR ; SI~SI-1;%      10003000
         DI~ B ; T~ SI ; SI~ LOC T ; DS ~ WDS;%                         10004000
         END       GNC ;%                                               10005000
COMMENT  TAN  TEST  C  FOR ALPHA  AND  RETURNS RESULT;%                 10006000
BOOLEAN  STREAM PROCEDURE  TAN(C) ; VALUE C ;%                          10007000
         BEGIN%                                                         10008000
         SI~LOC C;  SI~SI+7;  IF SC=ALPHA THEN TALLY~1;%                10009000
         TAN~ TALLY;%                                                   10010000
         END       TEST ALPHAMERIC ;%                                   10011000
REAL PROCEDURE EXP;%                                                    10012000
         BEGIN%                                                         10013000
         REAL   X,T,I,P;%                                               10014000
         LABEL  G,BOOBOO;%                                              10015000
         T ~ 0;    X ~ "+";%                                            10016000
         IF C= "+" OR C = "-"  THEN%                                    10017000
              BEGIN  X~C; T~ LP;  C ~ GNC(B); END;%                     10018000
         DO   BEGIN%                                                    10019000
              P ~ 0;%                                                   10020000
         IF C="+" OR C="-" THEN C~GNC(B);%                              10021000
              IF C= "*" THEN  BEGIN P~LP;C~GNC(B) END%                  10022000
         ELSE IF C = "/" THEN BEGIN P ~ M[LP].[18:15]; C ~ GNC(B) END%  10023000
         ELSE IF C = "=" THEN BEGIN P ~ M[LP].[33:15]; C ~ GNC(B) END%  10024000
         ELSE IF  C{ 7 THEN DO P~P|8 + C UNTIL (C~ GNC(B))>7%           10025000
         ELSE IF  C= "." THEN%                                          10026000
                   BEGIN C~GNC(B); DO P~P|10+C UNTIL (C~GNC(B))>9 END%  10027000
         ELSE IF TAN(C) THEN%                                           10028000
                   BEGIN   DO P~ P|64+C UNTIL NOT (TAN(C~GNC(B)));%     10029000
                        FOR I~ 0 STEP 2 UNTIL NSYMBS DO%                10030000
                        IF TBL[I].[6:42] = P THEN%                      10031000
                        BEGIN  P~TBL[I+1] ;  GO TO G  END;%             10032000
                        ERROR ~ "NO SYMB" ; GO TO BOOBOO ;%             10033000
                   END%                                                 10034000
         ELSE IF  C= "[" THEN%                                          10035000
                   BEGIN  C ~ GNC(B);%                                  10036000
                        P~ EXP ; IF ERROR ! 0 THEN GO BOOBOO ;%         10037000
                        P ~ POLISH([MEMORY[P]],LOD,0,INX) ;%            10038000
                        IF C! "]" THEN%                                 10039000
                        BEGIN ERROR~ "NO BRKT";%                        10040000
    BOOBOO:             DO UNTIL (C~GNC(B))="~" END ELSE C~GNC(B);%     10041000
                   END;%                                                10042000
    G:   T~ T + (IF X="+" THEN P ELSE -P);%                             10043000
         END UNTIL (( X ~C)!"+" AND C ! "-" ) ;%                        10044000
         EXP ~ T;%                                                      10045000
         END    EXP ;%                                                  10046000
         STREAM PROCEDURE FRMT1(Q,T,M,WB);  VALUE Q,T,M;%               10047000
              BEGIN%                                                    10048000
              SI~ LOC T;  SKIP SB; DI~WB; DI~DI+1;%                     10049000
              IF SB THEN%                                               10050000
                   BEGIN%                                               10051000
                   SI ~ SI+0;%                                          10052000
                   7(IF SC ="0" THEN SI~SI+1 ELSE DS~CHR) ;%            10053000
                   END%                                                 10054000
              ELSE%                                                     10055000
                   BEGIN%                                               10056000
                   SI~SI+4;  SKIP 3 SB;%                                10057000
                   5(DS~3RESET;3(IF SB THEN DS~SET ELSE DS~RESET;%      10058000
                        SKIP SB))  END;%                                10059000
                   DS ~ LIT "=";%                                       10060000
              SI~LOC Q; SI~SI+7;%                                       10061000
              IF SC!"O"  THEN  BEGIN%                                   10062000
                   IF SC ="D"  THEN BEGIN%                              10063000
                   SI~ LOC M; DS~ 8 DEC END  ELSE  BEGIN%               10064000
                   SI~ LOC M;  DS~ 8 CHR END;  DS~LIT"~" END%           10065000
              ELSE BEGIN%                                               10066000
                   SI ~ LOC M;%                                         10067000
                   IF SB THEN%                                          10068000
                        BEGIN%                                          10069000
                        DS ~ 3 RESET;3(IF SB THEN DS~SET ELSE DS~RESET; 10070000
                        SKIP SB);%                                      10071000
                        3(5(DS~3 RESET;3(IF SB THEN DS~SET ELSE%        10072000
                        DS~RESET ; SKIP SB));%                          10073000
                        DS ~ LIT " ") ;%                                10074000
                        END%                                            10075000
                   ELSE%                                                10076000
                        2(8(DS~3 RESET;3(IF SB THEN DS~SET ELSE DS~RESET10077000
                        ; SKIP SB)); DS~ LIT " ");%                     10078000
              DI~ DI-1; DS ~ LIT"~";%                                   10079000
                   END%                                                 10080000
              END ;%                                                    10081000
PROCEDURE DT;                                                           10082000
         BEGIN%                                                         10083000
         REAL  CL,LITC,I,T,N;%                                          10084000
         LABEL LA,LB,FOUND,BANG,EXIT;%                                  10085000
         DEFINE READSPO = DO UNTIL WAITIO(1 INX RBX INX @40000000,@377, 10086000
                   25) = 0 #;%                                          10087000
         DEFINE  WRITESPO = DO UNTIL WAITIO(WB INX 0,@377,25) = 0 #;%   10088000
         REAL RCW=+0;%                                                  10089000
         POLISH(0,RDS,5,-,0,XCH,CFX,STF);%                              10090000
         HALT;%                                                         12000000
         SLEEP([TOGLE],KEYBOARDMASK); KEYBOARDREADY~FALSE;              12001000
         STREAM(C~(RCW INX 0)&RCW[30:10:2]:WB);%                        12002000
              BEGIN%                                                    12003000
              DI~ WB;  DS~ LIT"""; DS~6 LIT"C:L = ";%                   12004000
              SI~ C;  SI~SI-2;  C~SI;%                                  12005000
              SI~ LOC C;  SI~SI+5;  SKIP 3 SB;%                         12006000
              5(DS~ 3 RESET;3(IF SB THEN DS~SET ELSE DS~RESET;SKIP SB)) 12007000
              ;  DS~LIT":" ; SI~LOC C;  SI~SI+5;%                       12008000
              DS~4RESET;2(IF SB THEN DS~SET ELSE DS~RESET; SKIP SB);%   12009000
              DS~LIT"~";%                                               12010000
              END;%                                                     12011000
         POLISH(.CL,~);%                                                12012000
         TBL[35]~M[RCW.[18:15]].[18:15];%                               12013000
         WRITESPO;%                                                     12014000
         LITC~0;%                                                       12015000
         FOR I~1 STEP 1 UNTIL NSTOP DO%                                 12016000
         IF STOPS[I].[30:18] = CL THEN LITC~ STOPS[I].[18:10];%         12017000
  LA:    READSPO     ;%                                                 12018000
              NOBACKTALK~FALSE;%                                        12019000
         ERROR~0;%                                                      12020000
         B ~ RBX INX 1;                                                 12021000
         STREAM(Q~B);%                                                  12022000
              BEGIN%                                                    12023000
              SI~Q;  DI~Q;  DI~DI+1;%                                   12024000
         L:   IF SC!"~" THEN%                                           12025000
                   BEGIN%                                               12026000
                   IF SC=@14 THEN SI~SI+1 ELSE%                         12027000
                   IF SC= " "  THEN SI~SI+1  ELSE DS~CHR;%              12028000
                   GO L;%                                               12029000
                   END;%                                                12030000
              DS~ CHR;%                                                 12031000
              END;%                                                     12032000
         C~GNC(B);%                                                     12033000
         IF C="~"  THEN GO TO LA;%                                      12034000
         IF C="}"  THEN BEGIN TYPETOG~GNC(B); C~GNC(B) END;%            12035000
         IF C="$"  THEN%                                                12036000
              BEGIN%                                                    12037000
              C~GNC(B);%                                                12038000
              T~EXP;  IF ERROR ! 0 THEN GO LB;%                         12039000
              STREAM( L~0:T,S~POLISH(.DT,4,|,2,+),V~0);%                12040000
                   BEGIN%                                               12041000
                   SI~T;%                                               12042000
              Q:   SI~SI+0;  L~SI;  SI~SI+1;  SKIP  4 SB;%              12043000
                   IF SB THEN GO Q;  SKIP SB;%                          12044000
                   IF SB THEN GO Q;%                                    12045000
                   SI~SI+0; SI~SI-2;%                                   12046000
                   DI~ LOC L;  DI~DI +3;%                               12047000
                   DS~ 2 CHR;  DI~  L;%                                 12048000
                   SI~  LOC S;  SI~SI+6;  DS~ 2 CHR;%                   12049000
                   END;%                                                12050000
              POLISH([STOPS[NSTOP~NSTOP+1]],~);%                        12051000
              STREAM( CL~STOPS[NSTOP],WB);%                             12052000
                   BEGIN%                                               12053000
                   DI~ WB;  DI~DI+1;  SI~LOC CL;%                       12054000
                   SI~ SI+5;  SKIP  3 SB;%                              12055000
                   5( DS~ 3 RESET; 3(IF SB THEN DS~SET ELSE DS~ RESET%  12056000
                        ;SKIP SB));%                                    12057000
                   DS~ LIT":";  SI~ LOC CL; SI~SI+5;%                   12058000
                   DS~ 4 RESET;%                                        12059000
                   2( IF SB THEN DS~SET ELSE DS~RESET; SKIP SB;) ;%     12060000
                   DS~LIT"~";%                                          12061000
                   END;%                                                12062000
              WRITESPO;%                                                12063000
              GO TO LA;%                                                12064000
              END;%                                                     12065000
         IF C="@"  THEN%                                                12066000
         BEGIN%                                                         12067000
              C~GNC(B);%                                                12068000
              T~EXP;  IF ERROR!0 THEN GO TO LB;%                        12069000
IF C=":"THEN T~T&(C~GNC(B))[30:46:2];%                                  12070000
              FOR I~1 STEP 1 UNTIL NSTOP DO%                            12071000
              IF STOPS[I].[30:18] = T THEN GO FOUND;%                   12072000
              ERROR~ "NO STOP";  GO TO LB;%                             12073000
  FOUND:%                                                               12074000
              STREAM ( L~STOPS[I],V~0);%                                12075000
                   BEGIN   DI~L;SI ~ LOC L; SI~SI+3; DS ~ 2 CHR END;%   12076000
              GO TO LA;%                                                12077000
              END;%                                                     12078000
         IF  C = "%" THEN%                                              12079000
              BEGIN%                                                    12080000
              C ~ GNC(B);%                                              12081000
              FOR I ~ 0 STEP 2 UNTIL NSYMBS DO%                         12082000
              IF TBL[I].[1:5] = C THEN BEGIN%                           12083000
              FRMT1(TYPETOG,-TBL[I],MEMORY[TBL[I+1]],WB);%              12084000
                   WRITESPO;%                                           12085000
              IF NOBACKTALK THEN GO TO LA;%                             12086000
                   END;%                                                12087000
              GO TO LA;%                                                12088000
              END;%                                                     12089000
         IF C= ";" THEN GO EXIT;%                                       12090000
         T~ EXP ;  IF ERROR ! 0 THEN GO LB;%                            12091000
         IF  C = ";" THEN%                                              12092000
              BEGIN%                                                    12093000
              C~GNC(B);%                                                12094000
              N~EXP-1;  IF ERROR !0  THEN  GO LB  ELSE  GO BANG;%       12095000
              END;%                                                     12096000
         N ~ 0;%                                                        12097000
         IF C= ":" THEN%                                                12098000
              BEGIN%                                                    12099000
              CL~0;  I~0;%                                              12100000
              IF (C~GNC(B)) {9 THEN CL~C;%                              12101000
              DO I ~ I | 64 + C UNTIL NOT(TAN(C~GNC(B)));%              12102000
         NSYMBS~NSYMBS+2;%                                              12103000
              TBL[NSYMBS] ~I&CL[1:43:5];  TBL[NSYMBS+1] ~ T;%           12104000
              GO BANG;%                                                 12105000
              END;%                                                     12106000
         IF C= "=" THEN%                                                12107000
              BEGIN ;%                                                  12108000
              IF (C~GNC(B)){9 THEN BEGIN;%                              12109000
              STREAM( I~0:%                                             12110000
                        WB~ B,L~0,K~0);%                                12111000
                   BEGIN%                                               12112000
                   SI ~ WB;%                                            12113000
                   16(IF SC}"0" THEN BEGIN TALLY~TALLY+1;SI~SI+1 END%   12114000
                        ELSE JUMP OUT TO Z );Z:%                        12115000
                   L ~ TALLY; TALLY ~ 16;%                              12116000
                   L( TALLY~TALLY + 63); K~TALLY;DI~%                   12117000
                                              LOC  I ; K(SKIP 3 DB);%   12118000
                   SI ~ WB;%                                            12119000
                   L(SKIP 3 SB;3(IF SB THEN DS~SET ELSE DS~RESET;%      12120000
                        SKIP SB ));%                                    12121000
                   END;%                                                12122000
              POLISH( [MEMORY[T]],~);%                                  12123000
              END ELSE%                                                 12124000
              IF  C="."  THEN%                                          12125000
                   BEGIN  I~0;  WHILE (C~GNC(B)){9  DO  I~I|10+C;%      12126000
                        MEMORY[T]~I;%                                   12127000
         END  ELSE BEGIN I~0; DO I~I|64+C UNTIL NOT (TAN(C~GNC(B)));%   12128000
                        MEMORY[T]~I  END;%                              12129000
              GO BANG ;%                                                12130000
              END;%                                                     12131000
         IF C !"~" THEN%                                                12132000
              BEGIN ERROR ~"ILL EXP"; GO LB END;%                       12133000
  BANG:%                                                                12134000
         FOR I ~ 0 STEP 1 UNTIL N DO%                                   12135000
              BEGIN%                                                    12136000
              FRMT1(TYPETOG,LP~T+I,POLISH([MEMORY[LP]],LOD),WB);%       12137000
              WRITESPO;%                                                12138000
              IF NOBACKTALK  THEN  GO TO LA;%                           12139000
              END;%                                                     12140000
         GO TO LA;%                                                     12141000
  LB:    STREAM (ERROR,WB,RBX);%                                        12142000
         BEGIN%                                                         12143000
              SI ~ RBX; DI ~ WB; DI ~ DI+1;                             12144000
                   SI~SI+9;%                                            12145000
          L:  IF SC ! "~" THEN BEGIN DS~ CHR; GO TO L END;%             12146000
              DS ~6LIT"ERROR "; SI~LOC ERROR; SI~SI+1;%                 12147000
              DS ~ 7 CHR ; DS ~ LIT "~";%                               12148000
         END;%                                                          12149000
         WRITESPO ;%                                                    12150000
         GO TO LA;%                                                     12151000
   EXIT:%                                                               12152000
         M[WB] ~ NOT 0;      WRITESPO;%                                 12153000
         KEYBOARDREADY~TRUE;%                                           12154000
         NOPROCESSTOG~NOPROCESSTOG-1;%                                  12155000
         POLISH(LITC,RTN);%                                             12156000
         END;%                                                          12157000
 PROCEDURE         COM19; %%% PRINT A BACKUP TAPE OR DISK %%%        %P 13000000
              BEGIN                                                  %P 13001000
 ARRAY             FPB[*],LOGINFO[*],HEADER[*];                         13002000
 NAME            INREC; DEFINE CONS="PBD    "#; DEFINE PUNS="PUD    "#; 13003000
 INTEGER           CURROW,SEGNR,RECOUNT=SEGNR,V;                     %P 13004000
 REAL              U=-4,CURRPBNAME=U,B,T,IOD=T,UNIT,ENDFLAG,LOC,STA;    13005000
 LABEL             EF,RD,MAINLOOP,QUIT,SLEAP,WHY;                       13006000
 SUBROUTINE IDLETIMER;                                                  13006100
    BEGIN PROCTIME[P1MIX]~(*P(DUP))+CLOCK+P(RTR);                       13006200
         P(P1MIX); P1MIX~0;                                             13006300
         IDLETIME;                                                      13006400
         P1MIX~P;                                                       13006500
         PROCTIME[P1MIX]~(*P(DUP))-CLOCK-P(RTR);                        13006600
    END IDLETIMER;                                                      13006700
SUBROUTINE REMOVEIT;                                                    13006800
    BEGIN                                                               13006810
        P(DIRECTORYSEARCH(-(IF V!22 THEN CONS ELSE PUNS),               13006820
          CURRPBNAME,13),DEL);                                          13006830
        P(DIRECTORYSEARCH(-(IF V!22 THEN CONS ELSE PUNS),               13006840
          CURRPBNAME,7),DEL);                                           13006850
    END;                                                                13006860
 BOOLEAN           SIGNEDON,FORMTOG;                                 %P 13007000
 SUBROUTINE        FM;   %% BUILD AND SPOUT FORMS MESSAGE      %%       13007050
              BEGIN                                                     13007100
                   SIGNEDON~GETSPACE(10,0,0)+2;                         13007150
                   STREAM(U:=V-3,INREC,MX:=P1MIX,SIGNEDON);             13007200
                   BEGIN DS:=10 LIT"#FM RQD LP";                        13007250
                        SI~LOC U; SI~SI+7; IF SC!"C" THEN DS~CHR ELSE   13007300
                        BEGIN DI~DI-2; DS~3LIT"CPA"; END;               13007325
                        DS:=5 LIT" FOR"; SI:=INREC;                     13007350
                        SI:=SI+1; DS:=7 CHR; DS:=LIT"/";                13007400
                        SI:=SI+1; DS:=7 CHR; DS:=4 LIT" OF ";           13007425
                        SI:=SI+1; DS:=7 CHR; DS:=LIT"/";                13007450
                        SI:=SI+1; DS:=7 CHR; DS:=LIT"=";                13007475
                        SI:=LOC MX; DS:=2 DEC; DS:=LIT"~";              13007500
              END; SPOUT(SIGNEDON); REPLY[P1MIX]~-@5041220;   %RHR      13007550
              END  FM SUBROUTIN;                                        13007600
 SUBROUTINE        BADFM;       %BUILD AND SPOUT BAD FM MESSAGE   %     13007630
              BEGIN                                          %RHR       13007660
                   SIGNEDON~GETSPACE(10,0,0)+2;              %RHR       13007690
                   STREAM(A~TINU[U],MX~P1MIX,SIGNEDON);      %RHR       13007720
                   BEGIN DS~19 LIT"INVALID INPUT UNIT ";     %RHR       13007750
                        SI~LOC MX; DS~2 DEC;DS~2 LIT"FM";               13007780
                        SI~LOC A; SI~SI+5; DS~3 CHR;         %RHR       13007840
                        DS~LIT "~"; DI~DI-8; DS~FILL;        %RHR       13007870
                   END;  SPOUT(SIGNEDON);                    %RHR       13007900
              END BADFM SUBROUTIN;                           %RHR       13007930
 SUBROUTINE        SIGNIN;  %% START LOG FOR CHARGEABLE PRINT FILE % %P 13008000
              BEGIN                                                  %P 13009000
                   LOGINFO~[M[GETSPACE(31,0,1)+2]]&31[8:38:10];      %P 13010000
                   IF INREC[13] OR FORMTOG THEN FM;                     13010100
                   LOGINFO[12]~-(PROCTIME[P1MIX]+CLOCK+P(RTR));      %P 13012000
                   LOGINFO[13]~ IOTIME[P1MIX];                       %P 13013000
                   IDLETIMER; LOGINFO[14]~JAR[P1MIX,7];                 13014000
                   LOGINFO[16]~XCLOCK+P(RTR);                        %P 13015000
                   LOGINFO[15]~DATE;                                 %P 13016000
                   LOGINFO[25]~INREC[0];                             %P 13017000
                   LOGINFO[26]~INREC[1];                             %P 13018000
                   LOGINFO[24]~-CLOCK-P(RTR);                           13019000
                   STREAM(S~[INREC[4]],D~[LOGINFO[1]]);              %P 13020000
                   BEGIN SI~S; DS~ 9 WDS END;  IF SIGNEDON!0 THEN    %P 13021000
 SLEAP:      BEGIN COMPLEXSLEEP((REPLY[P1MIX]}0 OR TERMIX.[CF]=P1MIX    13021100
                                                  OR PRT[P1MIX,@25]=5));13021200
                   IF NOT WHYSLEEP(@5041220) THEN             %RHR      13021300
                   BEGIN FM; GO TO SLEAP END;                           13021400
                   IF REPLY[P1MIX].[CF]=5 THEN                %RHR      13021410
                   IF (U~REPLY[P1MIX].[FF])!20 AND U!21 THEN            13021420
                   BEGIN BADFM; LABELTABLE[U]~@114;          %RHR       13021423
                        READY~READY AND (U~NOT TWO(U));      %RHR       13021426
                        RRRMECH~RRRMECH AND U;               %RHR       13021429
                        SAVEWORD~SAVEWORD AND U; FM; GO SLEAP           13021432
$ INCLUDE 13021447, IF DATACOM AND RJE AND NOT INQUIRY;                 13021435
                   END ELSE IF STA ! 0 THEN                             13021436
                   BEGIN LABELTABLE[U]:=@2147513145632551;              13021438
                        RDCTABLE[U].[8:6]:=P1MIX;                       13021440
                        P(PRINTORPUNCHWAIT(-V,STA),DEL);                13021442
                        JAR[P1MIX,6].[9:9]:=0; STA:=0;                  13021444
                        FPB[8].[36:6]:=(V:=U)+1;                        13021446
                   END ELSE IF U ! V THEN                               13021448
                   BEGIN LABELTABLE[U]:=LABELTABLE[V];LABELTABLE[V]:=0; 13021449
                        RDCTABLE[U]~RDCTABLE[V]; RDCTABLE[V]~0;         13021450
                        MULTITABLE[U]~MULTITABLE[V];MULTITABLE[V]~0;    13021460
                        FPB[8].[36:6]~(V~U)+1;                          13021470
                   END;                                       %RHR      13021480
              END; FORMTOG~INREC[13];                                   13021500
                   SIGNEDON~TRUE;                                    %P 13022000
              END SIGNIN;                                            %P 13025000
 SUBROUTINE        SIGNOUT; %% FINISH LOG AND ORDER IT ENTERED %     %P 13026000
              BEGIN                                                  %P 13027000
                   LOGINFO[12]~*P(DUP)+PROCTIME[P1MIX]+CLOCK+P(RTR); %P 13028000
                   LOGINFO[13]~IOTIME[P1MIX]-(IOTIME[P1MIX]~LOGINFO[13])13029000
                  ;OLDIDLETIME~OLDIDLETIME+LOGINFO[12];              %P 13030000
                   PROCTIME[P1MIX]~*P(DUP)-LOGINFO[12];              %P 13031000
                   IDLETIMER;                                        %P 13032000
                   LOGINFO[14]~JAR[P1MIX,7]-(JAR[P1MIX,7]~LOGINFO[14]); 13033000
                   LOGINFO[17]~XCLOCK+P(RTR);                        %P 13034000
                   P(XCH,[LOGINFO[18]],STD);                         %P 13035000
                   LOGINFO[23]~FPB[3]&TINU[UNIT][24:18:12];          %P 13036000
                   LOGINFO[28]~FPB[8]&TINU[V][24:18:12];             %P 13037000
                   TINU[UNIT].[18:12]~0; TINU[V].[18:12]~0;          %P 13038000
                   FPB[9]~FPB[9]-(LOGINFO[24]~LOGINFO[29]~           %P 13039000
                                  LOGINFO[24]+CLOCK+P(RTR));         %P 13040000
                   LOGINFO[19]:=USERCODE[P1MIX];                        13041000
                   LOGINFO[18].[1:30]:=DATE.[18:30];                    13041100
                   LOGINFO[0]~P(1,NOT,XCH,INX,DUP,LOD)&0[9:9:6];     %P 13041500
                   IF LOGFREE!0 THEN                                    13041600
                   INDEPENDENTRUNNER(P(.PBLOG),LOGINFO INX 0);       %P 13042000
                   LOGINFO~SIGNEDON~RECOUNT~0;                       %P 13043000
              END SIGNOUT;                                           %P 13044000
 SUBROUTINE PARERR;%PARITY ERROR MSSGS                                  13044010
     BEGIN IF V=22 THEN GO WHY; LOC:=SPACE(15);                         13044020
           STREAM(A:=UNIT,LOC);                                         13044030
           BEGIN 22(DS:=2 LIT ">>");SI:=LOC A;SI:=SI+7;                 13044040
                 IF SC="B" THEN DS:=6 LIT " DISK " ELSE                 13044050
                 DS:=6 LIT " TAPE ";                                    13044060
                 DS:=26 LIT "PARITY ON PRINTER BACK UP ";               13044070
                 22(DS:=2 LIT ">>");                                    13044080
           END STREAM;                                                  13044090
$ INCLUDE 13044096, IF DATACOM AND RJE AND NOT INQUIRY;                 13044094
           IF STA!0 THEN TWXOUT(3&@202[CTF],120,LOC,STA) ELSE           13044095
           P(WAITIO(LOC&16[CTF],0,V),DEL);                              13044100
           FORGETSPACE(LOC);                                            13044110
 WHY:      FILEMESS("#PARITY","ERROR  ","       ","       ",0,0,0);     13044120
           REPLY[P1MIX]:=-@41220;                                       13044130
           COMPLEXSNOOZE(MIXMAX,REPLY[P1MIX] GEQ 0 OR                   13044140
                         TERMIX.[CF]=P1MIX OR PRT[P1MIX,@25]=5);        13044150
           IF NOT WHYSLEEP(@41220) THEN GO TO WHY;                      13044160
     END PARERR;                                                        13044170
 SUBROUTINE        GET; %%% READ & DEBLOCK %%                        %P 13045000
              BEGIN ENDFLAG~0;                                       %P 13046000
                   IF INREC[17   ].[20:1] THEN                       %P 13047000
              BEGIN                                                  %P 13048000
                   ENDFLAG~2; INREC.[CF]~B; INREC[17].[20:1]~0;      %P 13049000
                   IF UNIT=18 THEN REMOVEIT;                            13049500
              END  ELSE                                              %P 13050000
                   IF (INREC~[INREC[NOT 17]]).[CF]<B.[CF] THEN       %P 13051000
                   IF UNIT=18 THEN                                   %P 13052000
              BEGIN COMMENT DISK;                                    %P 13053000
                   IF (SEGNR        )}HEADER[8] THEN %END OF ROW%%   %P 13054000
              BEGIN                                                  %P 13055000
                   SEGNR~0;                                          %P 13056000
                   IF (CURROW~CURROW+1)<(HEADER[9]+10) THEN GO RD;   %P 13057000
                   FORGETSPACE(HEADER INX 0);                        %P 13058000
                   CURROW~10;                                        %P 13059000
                   REMOVEIT;                                            13060000
                   CURRPBNAME~1 INX CURRPBNAME;                      %P 13061000
                   IF (HEADER:=DIRECTORYSEARCH(IF V!22 THEN CONS        13062000
                       ELSE PUNS,CURRPBNAME,3))=0                       13062100
                             THEN GO TO EF;                             13063000
                   HEADER~[M[( HEADER)]]&30[8:38:10];                %P 13064000
                   GO TO RD                                          %P 13065000
              END;                                                   %P 13066000
                   IF SEGNR>HEADER[7]|3 THEN                         %P 13067000
              BEGIN                                                  %P 13068000
                   REMOVEIT;                                            13069000
 EF:               ENDFLAG~TRUE;                                     %P 13070000
              END  ELSE                                              %P 13071000
              BEGIN                                                  %P 13072000
 RD:         IOD~0;DISKIO(IOD,-B,90,HEADER[CURROW]+SEGNR);           %P 13073000
                   INREC.[CF]~B INX 73;    SEGNR~SEGNR+3;            %P 13074000
                   SLEEP([IOD],IOMASK);                              %P 13075000
                   IF IOD.[28:1] THEN PARERR;                           13075100
              END                                                    %P 13076000
              END  DISK PORTION ELSE                                 %P 13077000
              BEGIN                                                  %P 13078000
                   IF (ENDFLAG:=WAITIO(B,@2000040,UNIT)).[43:1] THEN    13078100
                   PARERR;                                              13078150
                   IF ENDFLAG.[42:1] THEN ENDFLAG:=TRUE ELSE            13078160
              IF (T~M[B INX NOT 0])= 90 THEN                            13078200
              BEGIN INREC~[M[B INX 72]];                                13078300
$ INCLUDE 13078351, IF DATACOM AND RJE AND NOT INQUIRY;                 13078349
                   IF STA = 0 THEN                                      13078350
                   ENDFLAG~INREC[17].[CF] ! RECOUNT;                    13078400
              END ELSE IF NOT(ENDFLAG~((T AND @7775)!16)) THEN          13078500
              BEGIN INREC~[M[B INX 1]];                                 13078600
                   INREC[17]~M[B]&0[20:20:7];                           13078700
              END;                                                      13078800
              END TAPE ELSE ENDFLAG~(INREC[17].[CF] !RECOUNT)           13082000
$ INCLUDE 13082051, IF DATACOM AND RJE AND NOT INQUIRY;                 13082049
                 AND STA = 0                                            13082050
                 AND(UNIT!18);                                          13082100
                   RECOUNT~(UNIT!18) INX RECOUNT;                       13082500
              END  GET SUBROUTINE;                                   %P 13083000
 REAL SUBROUTINE   DSED;  %% CHECKS TERMIX & THINGS LIKE THAT %%     %P 13084000
%                            ALSO TAKES CARE OF QT ACTION               13084005
         BEGIN                                                          13085000
              IF STOPJOB = P1MIX THEN STOPM(FALSE);                     13086000
              IF TERMIX.[CF] = P1MIX THEN                               13087000
              BEGIN                                                  %P 13088000
                   IF UNIT = 18 THEN % IF DISK                          13089000
                   BEGIN                                                13090000
                        FORGETSPACE(HEADER.[CF]);                       13091000
                        REMOVEIT;                                       13092000
                   END;                                                 13093000
                   P(2);                      % 2 = DS-ED               13093050
                   SIGNOUT;                                             13093100
              END ELSE % CHECK TO SEE IF QT GIVEN                       13094000
              BEGIN                                                     13094100
                   IF PRT[P1MIX,@25] = 5 THEN % CELL SET TO 5 IN KEYIN  13095000
                   BEGIN % SKIP THIS FILE     % IN RESPONSE TO QT MESS  13096000
                        PRT[P1MIX,@25] ~ 0;                             13097000
                        PRT[P1MIX,@23]:=1;                              13097100
                        IF UNIT = 18 THEN     % IF BACKUP DISK NO NEED  13098000
                        BEGIN                 % TO SPACE TO NEXT FILE   13098100
                             FORGETSPACE(DIRECTORYSEARCH(IF V!22        13098125
                             THEN CONS ELSE PUNS,CURRPBNAME,13));       13098130
                             P(DEL);          % DELETE RETURN LITERAL   13098150
                             GO TO QUIT;      % AND BRANCH OUT          13098200
                        END ELSE                                        13098250
                        BEGIN IF V!22 THEN                              13098300
                         P(WAITIO((@4000100000),0,V),DEL);%NXTPG        13098310
                             DO GET UNTIL (ENDFLAG!0) OR (TERMIX.[CF] = 13098320
                               P1MIX); % SKIP TO NEXT LOGICAL FILE      13098330
                        END;                                            13098340
                        IF SIGNEDON THEN                                13098350
                        BEGIN                                           13098400
                             P(0);                                      13098450
                             SIGNOUT;                                   13098500
              END; END; END;                                            13098550
              DSED ~ TERMIX.[CF] = P1MIX OR ENDFLAG;                    13099000
         END DSED SUBROUTINE;                                           13100000
 %%% START OF CODE       %%%                                         %P 13101000
              IF U=0 THEN GO TO INITIATE;                               13101100
                   FPB~PRT[P1MIX,3];                                 %P 13102000
                   INREC~[M[B~GETSPACE(91,0,1)+2&@132[8:38:10]]];    %P 13103000
                                                                        13104000
                   FPB[8].[36:6]~(V~U.[FF])+1;                       %P 13105000
$ INCLUDE 13105501, IF DATACOM AND RJE AND NOT INQUIRY;                 13105499
                   IF (STA:=0&JAR[P1MIX,6][9:9:9])=0 THEN               13105500
                   IF LABELTABLE[V].[1:5]=@21 THEN RDCTABLE[V    ].[8:6]13106000
                        ~P1MIX;                                         13106100
                   IF(U~U.[CF])<@37777 THEN %% ON DISK               %P 13107000
              BEGIN                                                  %P 13108000
                   UNIT~18;                                          %P 13109000
                   STREAM(U,D~[U]);                                  %P 13110000
                   BEGIN          SI~LOC U; DS~5 DEC; DS~3LIT"001" END; 13111000
                        IF (HEADER:=DIRECTORYSEARCH(IF V!22 THEN        13112000
                            CONS ELSE PUNS,U,3))=0                      13112025
                             THEN GO QUIT;                              13112050
                        HEADER:=[M[HEADER]]&30[8:38:10];                13112100
                   CURROW:=10;                                          13113000
              END  ELSE                                              %P 13115000
              BEGIN                                                  %P 13116000
                   RDCTABLE[UNIT~(U AND 63)].[8:6]~P1MIX;            %P 13117000
                   B.[18:9]~@54;   RRRMECH~RRRMECH OR TWO(UNIT);     %P 13117500
                   T~WAITIO(@4200000000,0,UNIT.[42:6]);              %P 13117600
                   T~WAITIO(B,0,UNIT) OR WAITIO(B,@40,UNIT);         %P 13118000
              END  ; INREC[17]~0;                                       13120000
                   FPB[3].[36:6]~UNIT+1;                             %P 13121000
                   FPB[4]~FPB[9]~-CLOCK-P(RTR);                      %P 13122000
                   IF UNIT!18 THEN                                      13122100
                   BEGIN GET; IF INREC[17].[CF]!RECOUNT THEN            13122200
                        BEGIN RECOUNT~INREC[17] INX 1; ENDFLAG~0        13122300
                   END; END ELSE                                        13122400
 MAINLOOP:         IF DSED THEN GO QUIT ELSE GET;                    %P 13123000
                   IF ENDFLAG!0 THEN                                 %P 13124000
                   BEGIN                                                13125000
                        IF SIGNEDON THEN                                13125200
                        BEGIN P(0);                                     13125400
                             SIGNOUT;                                   13125600
                        END;                                            13125800
                        IF UNIT = 18 THEN GO TO QUIT;                   13126000
                        IF ENDFLAG THEN GO TO QUIT;                     13126200
                        GO TO MAINLOOP;                                 13126400
                   END;                                                 13127000
                   IF (T ~ INREC[17]).[1:11] = 0 THEN SIGNIN            13128000
                   ELSE % PRINT A LINE                                  13128100
$ INCLUDE 13128751, IF DATACOM AND RJE AND NOT INQUIRY;                 13128199
                   IF STA ! 0 THEN  %GOES TO REMOTE                     13128200
                   BEGIN                                                13128300
                        NT1:=(P(INREC.[CF],DUP)-B.[CF]) DIV 18 +1;      13128400
                        NT1:=(IF V=22 THEN 2 ELSE 3)&NT1[3:42:6];       13128500
                        TWXOUT(NT1,80,[INREC[0]],STA);                  13128600
                        INREC:=P INX M;                                 13128700
                   END ELSE %NORMAL I/O                                 13128750
                   P(WAITIO(INREC[17]&(INREC)[CTC]&8[21:42:6],0,V),DEL);13129000
                   GO MAINLOOP;                                      %P 13130000
 QUIT:             IF V NEQ 22 THEN  %PAGE EJECT                        13132000
$ INCLUDE 13132021, IF DATACOM AND RJE AND NOT INQUIRY;                 13132019
                   IF STA!0 THEN TWXOUT(3&@101[CTF],0,0,STA) ELSE       13132020
                   P(WAITIO(@4000100000,0,V),DEL);                      13132040
                   IF SIGNEDON THEN BEGIN P(2); SIGNOUT END;            13132100
                   SLEEP([TOGLE],STATUSMASK);                        %P 13133000
                   IF UNIT=18 THEN PBCOUNT~PBCOUNT+1 ELSE               13134000
      BEGIN        T~WAITIO(@4200000000,0,UNIT);                     %P 13134500
                   IF PRNTABLE[UNIT].[1:1] AND                          13135000
                   NOT(SVPBT OR PRT[P1MIX,@23]) THEN                    13135200
                   INDEPENDENTRUNNER(P(.PURGEIT),UNIT) ELSE          %P 13135500
              BEGIN                                                  %P 13136000
                   LABELTABLE[UNIT]~@114;                            %P 13138000
                   MULTITABLE[UNIT]~RDCTABLE[UNIT]~0;                %P 13139000
                   SLEEP([TOGLE],STATUSMASK);                           13139100
                   READY~READY AND NOT T~TWO(UNIT);                  %P 13140000
                   RRRMECH~NOT T AND RRRMECH OR T AND SAVEWORD;      %P 13141000
      END;    END; IF STA=0 THEN IF RDCTABLE[V].[8:6]=P1MIX THEN        13142000
              BEGIN                                                  %P 13143000
                   RDCTABLE[V]~0;                                    %P 13144000
                   IF LABELTABLE[V].[5:1] THEN                          13145000
                        LABELTABLE[V]~64|FORMTOG+@114;                  13145100
              END; FPB[4]~FPB[9]~*P(DUP)+CLOCK+P(RTR);               %P 13146000
                  IF UNIT NEQ 18 THEN FPB[3].[23:1]:=1;                 13146010
$ INCLUDE 13146701, IF DATACOM AND RJE AND NOT INQUIRY;                 13146699
                   IF STA!0 THEN P(PRINTORPUNCHWAIT(-V,STA),DEL) ELSE   13146700
                   BEGIN                                                13146800
                   IF FORMTOG THEN SAVEWORD~SAVEWORD OR T~TWO(V) ELSE   13146900
                   READY~READY AND NOT T~TWO(V);                     %P 13147000
                   RRRMECH~T AND SAVEWORD OR NOT T AND RRRMECH;      %P 13148000
                   END;                                                 13148050
                   GO INITIATE;                                         13148100
              END  OF PRINTING BACKUPS;                              %P 13149000
$ INCLUDE 13299998, IF DATACOM AND NOT INQUIRY;                         13198999
SAVE                                                                    13199000
 PROCEDURE DCREAD(STA); VALUE STA; REAL STA;                            13200000
    BEGIN NAME A=NT5,T;                                                 13201000
         INTEGER I,N=NT7;                                               13202000
         IF (STA~GET(STA)).[24:1] THEN % READ READY                     13202100
         IF (STA.[22:9] AND @317)!@300 THEN% NOT RR ABD                 13203000
         IF NOT STA.[22:1] THEN            % STATION BUSY               13203100
         BEGIN A~P(READQ,STA AND @7570000000000,LLL);                   13204000
           IF P.[9:9]=STA.[9:9] THEN BEGIN                              13205000
              N~M[M[(T~[M[A[1]]]) INX NOT 2] INX 13].[10:9]-1;          13206000
              FOR I~0 STEP 1 UNTIL N DO                                 13207000
               IF T[I].[19:2] = 1 THEN                                  13208000
              BEGIN STATION[STA.[14:4],STA.[9:4]].[22:1]:=1;            13209000
                   IOREQUEST(T[I]&2[19:46:2],P(DUP,1,XCH,INX)&STA[9:9:9]13210000
                        &P(RFB,DUP)[13:21:1],A[1]);                     13211000
                   T[I]:=((*P(DUP)) AND NOT @3137700000)INX P(1,XCH);   13212000
                   I~N;              END;                               13213000
         END  END                                                       13214000
                                                                        13215000
    END DCREAD;                                                         13216000
      PROCEDURE DCWRITE(STA); VALUE STA; REAL STA;                      13250000
  BEGIN                                                                 13251000
  LABEL CSMW, DOIT;                                                     13251050
  REAL RCW = +0;                                                        13251100
  NAME A = +1, T = +2;                                                  13251200
   REAL K = A,RD=T;                                                     13251250
  INTEGER I = +3;                                                       13251300
  BOOLEAN INDRUN =  +4;                                                 13251400
  IF STA < 0 THEN                                                       13251500
    BEGIN                                                               13251600
    P(GETSPACE(128, 12,0)+1,STS,STA,RCW,0,RDS,0,XCH,CFX,STF);           13251700
    P (0,0,0,0);                                                        13251750
    STACKUSE ~ INDRUN ~ TRUE;                                           13251800
    END                                                                 13251900
  ELSE                                                                  13251950
    P(0,0,0,0);                                                         13252000
                                                                        13253000
         IF ((STA~GET(STA))AND @0000000241000000)=0 THEN %NOT SB,RR,WIP 13254000
         IF STA.[27:2]!0 THEN BEGIN % WR OR BUSR INT.                   13254100
 DOIT::   IF P(ILL,STA AND @7570000000000,LLL,.A,~).[9:9]=STA.[9:9] THEN13255000
         BEGIN A[0].[9:9]~0;                                            13256000
              T ~ [M[A[1]]];  % T IS NOW A DESC POINTING TO TOP IOD     13257000
              I ~ -1;                                                   13258000
              DO UNTIL T[I~I+1].[CF] = (A INX 3); % FINDS PERTINENT IOD 13259000
              BEGIN IOREQUEST(T[I],1 INX T[I]&STA[9:9:9]                13260000
                             &0[8:47:1]                                 13260500
                &P(RFB,DUP)[13:21:1],A[1]);                             13261000
                        T[I]~((*P(DUP))&1[20:47:1]AND @3777771400077777)13262000
                        INX P(1,XCH);                                   13262100
                   STATION[STA.[14:4],STA.[9:4]].[29:1]:=1;             13263000
              END;                                                      13264000
         END  ELSE                                                      13264100
         BEGIN                                                          13264110
         IF STA < 0 THEN GO TO CSMW;                                    13264115
         IF STA.[27:1] THEN % WRITE READY                               13264120
              IF (STA.[9:4]!STA.[4:4] OR STA.[14:4]!STA.[18:4])THEN %SPO13264122
                   IF (CLEARWRS OR NOT STA.[45:1])THEN % ...OR UNASSIGND13264125
                   BEGIN                                                13264130
                   K ~ NOT (0);                                         13264140
                   IOREQUEST(NABS(RD~[K]INX(0&@40[3:42:6]&STA[9:9:9])), 13264150
                             RD,[RD]&30[12:42:6]);                      13264160
                   STATION[STA.[14:4],STA.[9:4]].[29:1] ~ 1; % WIP      13264165
                   SLEEP([RD],IOMASK);                                  13264178
                   IF (RD.[23:10] AND @0464) NEQ 0 THEN  % IO DIDN"T GO 13264180
                        STATION[STA.[14:4],STA.[9:4]].[29:1] ~ 0;       13264184
               END;                                                     13264188
         CSMW:                                                          13264190
              BEGIN                                                     13264200
              IF NOT EMPTYSMQ THEN IF SMWSTOPPED THEN                   13264300
                   BEGIN                                                13264400
                   SMWSTOPPED ~ FALSE;                                  13264500
                   INDEPENDENTRUNNER(P(.STATIONMESSAGEWRITER),0);       13264600
                   END;                                                 13264700
              END;                                                      13264800
         END;                                                           13264900
                              END ELSE                                  13265000
         IF (NOT(STA AND @3400000041000000)=NOT 0) THEN%NO MCP/RR/WIP   13266000
                                                                        13266100
              GO DOIT                                                   13267000
                                                                        13268000
                                                                        13268100
         ELSE                                                           13268200
              GO TO CSMW;                                               13268300
  IF INDRUN THEN KILL([STA]);                                           13268900
    END DCWRITE;                                                        13269000
$ INCLUDE 13799999, IF DATACOM AND RJE AND NOT INQUIRY;                 13299999
REAL RJEWAITQ;  %USED TO QUEUE MESSAGES WAITING FOR NOT READY UNIT      13300000
PROCEDURE RJEUNITCHANGE(T);VALUE T; REAL T;                             13301000
BEGIN REAL RCW=+0,SMH=STATIONMESSAGEHOLDER,DC=+1,U=+2,STA=+3,BUFF=+4;   13302000
    LABEL DOIO,AXEIT,RTRY;                                              13303000
    DEFINE STACURR=STATION[STA.[14:4],STA.[9:4]]#;                      13304000
    SUBROUTINE RUNSM;  RUNSMW;                                          13305000
    IF NOT T THEN  %INDEPENDENT RUNNER                                  13306000
    BEGIN                                                               13307000
         P(GETSPACE(96,12,0)+1,STS,T,RCW,0,RDS,0,XCH,CFX,STF);          13308000
         STACKUSE:=TRUE;                                                13309000
    END;                                                                13310000
    P(DC19Q,0&T[9:9:9],LLL,XCH,DEL,3,INX,T.[FF],GET(T),0);              13311000
    IF U=1 THEN STA:=STA&T[40:47:1] ELSE                                13312000
    IF U=3 THEN STA:=STA&T[35:47:1] ELSE                                13313000
    IF U=2 THEN STA:=STA&T[38:47:1];                                    13314000
    IF T THEN  %UNIT WENT NOT READY                                     13315000
    BEGIN STA:=STACURR:=STA&0[22:47:1];                                 13316000
         IF STA.[32:1] THEN  %MESSAGES IN OUTPUT QUEUE                  13317000
         BEGIN T:=P(SMH,0&STA[9:9:9],LLL,0,INX,.BUFF,STD);              13318000
              WHILE T.[9:9]=STA.[9:9] DO                                13319000
              BEGIN STREAM(A:=BUFF INX 1:);                             13320000
                   BEGIN SI:=A; SI:=SI+2;                               13321000
                        DI:=LOC A; DS:=2 OCT;                           13322000
                   END STREAM;                                          13323000
                   IF P=U THEN  %MESSAGE TO NOT READY UNIT              13324000
                   BEGIN M[T]:=(*P(DUP))&T[FTF];                        13325000
                        M[T.[FF]].[CF]:=T;                              13326000
                        NT1:=P(RJEWAITQ,NT2:=0&STA[9:9:9]&(NOT 0)[CTF], 13327000
                        LLL,0,INX,.NT3,STD);                            13328000
                        M[BUFF]:=NT2&U[3:42:6]&NT1[FTF]&NT3[CTC];       13329000
                        M[NT1.[FF]].[CF]:=BUFF;                         13330000
                        M[NT3].[FF]:=BUFF;                              13331000
                        M[DC]:=(*P(DUP))+1;                             13332000
                   END;                                                 13333000
                   T:=M[BUFF:=T];                                       13334000
              END;                                                      13335000
              IF P(SMH,0&STA[9:9:9],LLL,DEL).[9:9]!STA.[9:9] THEN       13336000
              BEGIN STA:=STA&0[32:47:1];                                13337000
DOIO:              T:=[BUFF] INX (@400000000000000&STA[9:9:9]);         13338000
                   BUFF:=@3437000000000000;                             13339000
                   IOREQUEST(NABS(T)&@113[CTF],T,[T]&30[12:42:6]);      13340000
                   STACURR:=STA&1[29:47:1];                             13341000
                   SLEEP([T],IOMASK);                                   13342000
              END ELSE RUNSM;                                           13343000
              P(XIT);                                                   13344000
         END ELSE GO TO DOIO;                                           13345000
    END ELSE %UNIT WENT READY                                           13346000
    BEGIN                                                               13347000
RTRY:    T:=P(RJEWAITQ,NT2:=0&STA[9:9:9],LLL,0,INX,.BUFF,STD);          13348000
         NT2:=NT2&(NOT 0)[FTF];                                         13349000
         WHILE T.[9:9]=STA.[9:9] DO                                     13350000
         BEGIN IF T.[3:6]=U THEN                                        13351000
              BEGIN IF M[DC]=0 THEN                                     13352000
                   BEGIN IF (STACURR:=STA).[32:1] THEN RUNSM;           13353000
                        IF U=3 THEN BUFF:=@10000 ELSE                   13354000
                        IF U=2 THEN BUFF:=@1000  ELSE                   13355000
                        IF U=1 THEN BUFF:=@200;                         13356000
                        COMPLEXSLEEP((STACURR AND BUFF)!0 OR M[DC]!0);  13357000
                        IF ((STA:=STACURR) AND BUFF)!0 THEN             13358000
                        GO TO AXEIT ELSE GO TO RTRY;                    13359000
                   END;                                                 13360000
                   M[DC]:=(*P(DUP))-1;                                  13361000
                   NT1:=P(SMH,NT2,LLL,0,INX,.NT3,STD);                  13362000
                   M[BUFF]:=NT2&NT1[FTF]&NT3[CTC];                      13363000
                   M[NT1.[FF]].[CF]:=BUFF;                              13364000
                   M[NT3].[FF]:=BUFF;                                   13365000
                   M[T]:=(*P(DUP))&T[FTF];                              13366000
                   M[T.[FF]].[CF]:=T;                                   13367000
                   STA:=STA&1[32:47:1];                                 13368000
              END;                                                      13369000
              T:=M[BUFF:=T];                                            13370000
         END;                                                           13371000
         IF (STACURR:=STA).[32:1] THEN RUNSM;                           13372000
         IF U=1 THEN P(1) ELSE IF U=2 THEN                              13373000
         BEGIN U:=5; P(STA.[37:1]); END ELSE P(STA.[34:1]);             13374000
         IF NOT P THEN P(PRINTORPUNCHWAIT(-(U+17),STA),DEL);            13375000
AXEIT:   KILL([T]);                                                     13376000
    END;                                                                13377000
END RJEUNITCHANGE;                                                      13378000
PROCEDURE TWXOUT(UNIT,NUMCHRS,AREA,STA);                                13379000
VALUE UNIT,NUMCHRS,AREA,STA;  REAL UNIT,NUMCHRS,AREA,STA;               13380000
BEGIN REAL F,MASK,VR=-6; LABEL PRINLOOP,RY;                             13381000
    DEFINE STACURR=STATION[STA.[14:4],STA.[9:4]]#;                      13382000
    IF UNIT.[CF]!1 THEN NT1:=60 ELSE                                    13383000
    BEGIN NT2:=UNIT.[FF];                                               13384000
         NT1:=(NUMCHRS+NT2+20).[33:12];                                 13385000
         NUMCHRS:=NUMCHRS-NT2;                                          13386000
    END;                                                                13387000
    IF STACURR.[28:1] OR UNIT.[CF] GTR 3 THEN P(XIT);                   13388000
    F:=NABS((GETSPACE(NT1,5,0)+2)&P(DUP)[15:33:15]);                    13389000
    M[F INX (NOT 1)].[9:6]:=0;  % GET RID OF MIX IN MEM LINK            13390000
    AREA:=P(.AREA,LOD,0,INX);                                           13391000
    IF (NT1:=UNIT.[3:6])=0 THEN NT2:=UNIT.[FF] ELSE                     13392000
PRINLOOP:                                                               13393000
    IF UNIT.[CF]=3 THEN                                                 13394000
    BEGIN NT4:=(NT3:=NFLAG(M[VR+17])).[18:1];                           13395000
         IF (NT2:=NT3.[29:4])!0 THEN                                    13396000
         NT2:=NT2&(IF NT4 THEN 1 ELSE 3)[36:42:6] ELSE                  13397000
         BEGIN IF (NT2:=NT3.[27:2])!0 THEN                              13398000
              NT2:=IF NT2 THEN 2 ELSE 1;                                13399000
              IF NOT NT4 THEN NT2:=NT2&2[36:42:6];                      13400000
         END;                                                           13401000
         NUMCHRS:=IF NT4 THEN 0 ELSE 0&NT3[40:13:5];                    13402000
    END;                                                                13403000
    STREAM(TN:=F.[1:1]:A:=NT2,B:=UNIT:=UNIT.[CF],C:=P(DUP)!3,           13404000
    D:=NUMCHRS.[43:5],E:=NUMCHRS.[38:5],AREA,G:=UNIT.[CF]=1,F);         13405000
    BEGIN TN(DS:=2 LIT "}!"; SI:=LOC B; SI:=SI+6; DS:=2 CHR;            13406000
         DS:=LIT "0"; DS:=LIT "!"; DS:=LIT """); DS:=2 LIT "-!";        13407000
         C(JUMP OUT TO START);SI:=LOC A; SI:=SI+6; DS:=2 CHR;           13408000
START:   SI:=AREA; A:=CI; GO TO NEXT;                                   13409000
         %SUBROUTINE TO CHANGE STATES IF NEEDED - TEXT TO CONTROL       13410000
         C(DI:=DI-1; JUMP OUT TO NE); DS:=LIT "!";                      13411000
NE:      CI:=TN;  %SUBROUTINE EXIT                                      13412000
NEXT:    B:=CI; GO TO NEX;                                              13413000
         %SUBROUTINE TO CHANGE STATES - CONTROL TO TEXT                 13414000
         DS:=LIT "!"; TALLY:=1; C:=TALLY; CI:=TN;                       13415000
NEX:     AREA:=CI; GO TO STAR;                                          13416000
         %SUBROUTINE THAT DOES THE WORK IN MOVING AND CONVERTING CHARS  13417000
         D(IF SC = "~" THEN                                             13418000
         BEGIN TN:=CI; CI:=A; DS:=LIT "@";                              13419000
              SI:=SI+1; TN:=CI; CI:=B;                                  13420000
         END ELSE                                                       13421000
         BEGIN G(IF SC!"{" THEN JUMP OUT;  % NOT CARRIAGE RETURN        13422000
              TN:=CI; CI:=A; SI:=SI+2; DS:=LIT "-";                     13423000
              TN:=CI; CI:=B; JUMP OUT TO SKPP);                         13424000
              IF SC = "!" THEN DS:=LIT "!";                             13425000
              DS:=CHR; TALLY:=0; C:=TALLY;                              13426000
         END;                                                           13427000
SKPP:    );                                                             13428000
         CI:=F;  %SUBROUTINE EXIT                                       13429000
STAR:    F:=CI; CI:=AREA; %CALL SUBR. FOR MOD 32 CHRS                   13430000
         TALLY:=32; D:=TALLY; E(F:=CI; CI:=AREA);                       13431000
         G(DI:=DI-2; JUMP OUT TO AXEIT);                                13432000
         TN:=CI; CI:=A; TN:=DI;                                         13433000
AXEIT:   DS:=2 LIT "#~";                                                13434000
    END;                                                                13435000
    IF NUMCHRS!0 AND UNIT>1 THEN  %ATTEMPT BLANK SUPPRESSION            13436000
    STREAM(D:=P:B:=0,C:=0,A:=F);                                        13437000
    BEGIN SI:=A; D:=CI; GO TO LOOP;                                     13438000
         %SUBROUTINE TO CHECK FOR ETX AT END OF STRING OF BLANKS        13439000
         IF SC = "!" THEN                                               13440000
         BEGIN SI:=SI+1;                                                13441000
              IF SC = "#" THEN  %ETX - FORGET ABOUT THE BLANKS          13442000
              BEGIN C(DI:=DI-1; JUMP OUT TO AX); DS:=LIT "!";           13443000
AX:                DS:=CHR; GO TO LOOP;                                 13444000
              END ELSE SI:=SI-1;                                        13445000
         END;                                                           13446000
         TALLY:=0; CI:=B;  %SUBROUTINE EXIT                             13447000
NOGO:    %NOT GOING TO SUPPRESS BLANKS                                  13448000
         A:=TALLY; B:=CI; CI:=D; A(DS:=LIT " "); GO TO LOOP;            13449000
SPEC:    TALLY:=1; C:=TALLY; SI:=LOC C;                                 13450000
         SI:=SI+6; DI:=DI-2; DS:=2 ADD; TALLY:=0;                       13451000
         DS:=5 LIT "!;!99"; SI:=B;                                      13452000
LOOP:    IF SC NEQ "~" THEN                                             13453000
         BEGIN IF SC = " " THEN  %ATTEMPT TO SUPPRESS BLANKS            13454000
              BEGIN C:=TALLY; TALLY:=1; SI:=SI+1;                       13455000
                   4(IF SC NEQ " " THEN JUMP OUT TO NOGO;               13456000
                   SI:=SI+1; TALLY:=TALLY+1);                           13457000
                   %  COUNT TOTAL NUMBER BLANKS                         13458000
                   A:=TALLY; B:=DI; DI:=A;  %DI USED AS COUNTER         13459000
BL:                IF SC = " " THEN                                     13460000
                   BEGIN SI:=SI+1; DI:=DI+8; GO TO BL; END;             13461000
                   A:=DI; DI:=B; B:=CI; CI:=D;                          13462000
                   B:=SI; SI:=LOC A;                                    13463000
                   C(DI:=DI-1; JUMP OUT TO N); DS:=LIT "!";             13464000
N:                 DS:=2 LIT ";!"; DS:=2 DEC;                           13465000
                   IF TOGGLE THEN ELSE GO TO SPEC;                      13466000
                   SI:=B; GO TO LOOP;                                   13467000
              END;  %NO BLANK NEXT                                      13468000
              IF SC = "!" THEN                                          13469000
              BEGIN C:=TALLY; C(JUMP OUT TO R); TALLY:=1;               13470000
              END ELSE                                                  13471000
R:            TALLY:=0;                                                 13472000
              DS:=CHR; GO TO LOOP;                                      13473000
         END;                                                           13474000
         DS:=CHR; DI:=DI-2; D:=DI;                                      13475000
    END;                                                                13476000
    NT2:=P; IF NT1 GTR 0 THEN                                           13477000
    IF (NT2.[CF] - F.[15:15]) LSS 44 THEN                               13478000
    IF NOT NT3.[20:1] THEN                                              13479000
    IF (NT1:=NT1-1) GTR 0 THEN                                          13480000
    BEGIN AREA:=VR:=VR-18;                                              13481000
         F:=NT2&F[15:15:15];                                            13482000
         GO TO PRINLOOP;                                                13483000
    END;                                                                13484000
RY: IF UNIT=3 THEN MASK:=@10000 ELSE  %[35:1]                           13485000
    IF UNIT=2 THEN MASK:=@1000 ELSE   %[38:1]                           13486000
    IF UNIT = 1 THEN  % SPO                                             13487000
    IF STACURR.[40:1] THEN  %TANK IN RJEWAITQ                           13488000
    BEGIN AREA:=P(RJEWAITQ,STA OR @7777700000,LLL,0,INX,.UNIT,STD);     13489000
         M[F:=F.[15:15]-1]:=STA&AREA[FTF]&UNIT[CTC]&1[3:42:6];          13490000
         M[AREA.[FF]].[CF]:=F;                                          13491000
         M[UNIT].[FF]:=F;                                               13492000
         P(XIT);                                                        13493000
    END ELSE MASK:=0;                                                   13494000
    IF (STACURR AND MASK)!0 THEN                                        13495000
    COMPLEXSLEEP((STACURR AND MASK)=0);                                 13496000
    P(DC19Q,STA,LLL,3,INX,.AREA,STD,DEL);                               13497000
    IF M[AREA]=0 THEN                                                   13498000
    BEGIN SLEEP([M[AREA]],@77); GO TO RY; END;                          13499000
    M[AREA]:=(*P(DUP)) - 1;                                             13500000
    STACURR.[32:1]:=1;                                                  13501000
    AREA:=P(STATIONMESSAGEHOLDER,STA OR @7777700000,LLL,                13502000
            0,INX,.UNIT,STD);                                           13503000
    M[F:=F.[15:15]-1]:=STA&AREA[FTF]&UNIT[CTC];                         13504000
    M[AREA.[FF]].[CF]:=F;                                               13505000
    M[UNIT].[FF]:=F;                                                    13506000
    RUNSMW;                                                             13507000
END TWXOUT;                                                             13508000
PROCEDURE RJINPUT(STA); VALUE STA; REAL STA;                            13509000
BEGIN  %THIS IS THE PROCEDURE THAT HANDLES ALL REMOTE JOB INPUT         13510000
    DEFINE STACURR=STATION[STA.[14:4],STA.[9:4]]#;                      13511000
    REAL RCW=+0,N=+1,L=+2,T1=+3,T2=+4,D=+5,X=+6,Q=+7,FIR=+8,DCLINK=+9,  13512000
    HELLO=+10,INBUFF=+11,OUTBUFF=+12,OUTBUFFOLD=+13,RESERVE=+14,        13513000
    FIRSTCARD=+15;  ARRAY H=+16[*];  INTEGER A=X,I=T1;                  13514000
    LABEL EXIT,BOMB,ERROR,CARDRDR,SPO,LOOP,CONTROL,STR,FORG,            13515000
    DIALUP,UNITCHANGE;                                                  13516000
    SWITCH INUNIT:=CONTROL,SPO,CARDRDR,ERROR,ERROR,ERROR,ERROR;         13517000
    SWITCH CONTROLSW:=DIALUP,UNITCHANGE,UNITCHANGE;                     13518000
    SUBROUTINE ADR;                                                     13519000
    BEGIN IF (T2:=H[(T1:=A DIV 200)+10])=0 THEN                         13520000
         BEGIN H[9]:=T1+1;                                              13521000
              T2:=H[T1+10]:=GETUSERDISK(200);                           13522000
         END;                                                           13523000
         A:=A MOD 200 + T2;                                             13524000
    END;                                                                13525000
    %%%%%%%%%START HERE                                                 13526000
    P(GETSPACE(128,12,0)+1,STS,STA AND @7570000000000,                  13527000
    RCW,0,RDS,0,XCH,CFX,STF);                                           13528000
    STACKUSE:=TRUE;                                                     13529000
    P(0,0,0,0,0,0,0,3,DC19Q,STA,LLL,XCH,DEL,1,INX,0,GETSPACE(31,0,1)+3);13530000
    %DONT GET SPACE FOR BUFFERS USED BY RJ CARDRDR DECKS UNTIL NEEDED   13531000
    %HERE IS ALL THE ACTION - READ ALL BUFFERS OUT OF THE DC19Q         13532000
    %IF A CARD READER DECK IS STARTED DONT EXIT UNTIL IT IS DONE        13533000
    %ELSE LEAVE AS SOON AS ALL INPUT HAS BEEN HANDLED                   13534000
LOOP:  %FIND FIRST ENTRY IN DC19Q FOR STA                               13535000
    IF (A:=Q.[CF]=0) THEN ELSE GO TO STR;                               13536000
    IF FIR AND HELLO=0 THEN                                             13537000
    IF M[DCLINK].[CF]=DCLINK OR M[M[DCLINK]]>0 THEN GO TO EXIT;         13538000
    IF M[DCLINK].[CF]=DCLINK THEN COMPLEXSLEEP(M[DCLINK].[CF]!DCLINK);  13539000
    T2:=M[DCLINK].[CF];                                                 13540000
    WHILE (T1:=M[T2]) GTR 0 DO SLEEP([M[T2]],-0);                       13541000
    M[DCLINK].[CF]:=T1; %DELINK FROM QUEUE                              13542000
    M[T1]:=(*P(DUP))&T1[FTF];                                           13543000
    Q:=(T2+2)&(T2+1)[15:33:15];                                         13544000
STR:                                                                    13545000
    STREAM(TN:=A,SS:=Q,S:=P(DUP).[9:6]=1:INBUFF);                       13546000
    BEGIN TN(SI:=SS;SI:=SI+3;IF SC="1" THEN                             13547000
             BEGIN DS:=8 LIT "~"; JUMP OUT TO CLR; END);                13548000
          S(DS:=8 LIT "~"; JUMP OUT TO CLR); DS:=8 LIT " ";             13549000
CLR:     SI:=INBUFF; DS:=29 WDS;                                        13550000
         SI:=SS; TN(SI:=SI+7); IF SC="-" THEN SI:=SI+1; DI:=INBUFF;     13551000
LOOPC:   IF SC = "!" THEN                                               13552000
         BEGIN SI:=SI+1;                                                13553000
              IF SC = "!" THEN                                          13554000
              BEGIN DS:=CHR; GO TO LOOPC;                               13555000
              END ELSE GO TO LOOPN;                                     13556000
         END;                                                           13557000
         IF SC = "@" THEN                                               13558000
         BEGIN SI:=SI+1; DS:=LIT "~"; GO TO LOOPC; END;                 13559000
         IF SC="-" THEN                                                 13560000
         BEGIN S:=SI; GO TO EXIT; END;                                  13561000
         IF SC="#" THEN                                                 13562000
         BEGIN S:=TALLY; GO TO EXIT; END;                               13563000
         IF SC ! ";" THEN  %INVALID CHARACTER - DISCARD IT              13564000
         BEGIN SI:=SI+1; GO TO LOOPC; END;                              13565000
         %NEXT IS THE BLANK SUPPRESSION CODE                            13566000
         SI:=SI+2; INBUFF:=DI; DI:=LOC S; DS:=7 LIT "0"; DS:=CHR;       13567000
         DI:=INBUFF; S(DS:=10 LIT " "); INBUFF:=DI; DI:=LOC S;          13568000
         DI:=DI+7; DS:=CHR; DI:=INBUFF; S(DS:=LIT " ");                 13569000
LOOPN:   %NORMAL STATE CHARACTERS                                       13570000
         IF SC = "!" THEN                                               13571000
         BEGIN SI:=SI+1;                                                13572000
              IF SC ! "!" THEN GO TO LOOPC;                             13573000
         END;                                                           13574000
         DS:=CHR; GO TO LOOPN;                                          13575000
EXIT:    %GET DEVICE AND TRANSMISSION NUMBER                            13576000
         TN(SI:=SS;SI:=SI+2;DI:=LOC SS;DS:=2 OCT;DI:=LOC TN;DS:=CHR);   13577000
    END;                                                                13578000
    IF (Q:=P&Q[9:9:21]).[CF]=0 THEN FORGETSPACE(Q.[15:15]);             13579000
    T1:=P; IF (NT5:=P) THEN                                             13580000
    BEGIN Q:=Q&T1[9:42:6];                                              13581000
         STACURR:=(*P(DUP))&NT5[4:2:4];                                 13582000
    END ELSE T1:=Q.[9:6];                                               13583000
    IF T1 } 3 THEN GO TO FORG;                                          13584000
    IF HELLO=0 THEN  %NOT IN DIAL UP PROCESS                            13585000
    IF T1=0 OR GET(STA).[46:1] THEN ELSE GO TO FORG ELSE  %DISCARD      13586000
    IF T1 LEQ 1 THEN                                                    13587000
    IF T1 = 1 THEN                                                      13588000
    BEGIN                                                               13589000
         IF L.[6:6] = 0 THEN  %NO USERCODE ALREADY ENTERED              13590000
         BEGIN T1:=INBUFF&(P(DUP))[15:33:15];                           13591000
              INBUFF:=GETSPACE(31,0,0)+3;                               13592000
         END ELSE             %USERCODE ALREADY - NOW ADD PASSWORD      13593000
         STREAM(INBUFF,L,T1:=T1:=(GETSPACE(10,0,0)+2)                   13594000
                                  &(P(DUP)+1)[15:33:15]);               13595000
         BEGIN SI:=LOC L; SI:=SI+1; DS:=7 CHR;                          13596000
              DS:=LIT ","; SI:=INBUFF; DS:=9 WDS;                       13597000
         END;                                                           13598000
         M[T1.[15:15]-2]:=STA;                                          13599000
         P([HELLO],0,INX);                                              13600000
         LGINOUT(T1,1);                                                 13601000
         L:=P;  %RETRIEVE USERCODE FOUND BY LGINOUT                     13602000
         IF GET(STA).[46:1] THEN                                        13603000
         BEGIN HELLO:=0;                                                13604000
              IF P(GET(STA),DUP).[36:1] THEN                            13605000
              P(PRINTORPUNCHWAIT(-20,STA),DEL);                         13606000
              IF P.[39:1] THEN P(PRINTORPUNCHWAIT(-22,STA),DEL);        13607000
              GO TO LOOP;                                               13608000
         END;                                                           13609000
         IF (HELLO:=HELLO+1) GTR 4 THEN                                 13610000
         BEGIN  %TOO MANY INVALID USERCODES                             13611000
              HELLO:=0; GO TO LOOP;                                     13612000
         END ELSE GO TO LOOP;                                           13613000
    END ELSE GO TO CONTROL ELSE                                         13614000
    BEGIN                                                               13615000
FORG:    IF Q.[CF]!0 THEN FORGETSPACE(Q.[15:15]);                       13616000
         Q:=0; GO TO LOOP;                                              13617000
    END;                                                                13618000
    GO TO INUNIT[T1];                                                   13619000
CONTROL:  %USED FOR THE SPECIAL CONTROL MESSAGES                        13620000
    STREAM(I:=INBUFF:);                                                 13621000
    BEGIN SI:=I; DI:=LOC I; DS:=2 OCT; END;                             13622000
    GO TO CONTROLSW[T1:=P];                                             13623000
DIALUP:                                                                 13624000
    STREAM(N:=STACURR.[46:1]:INBUFF);                                   13625000
    BEGIN SI:=INBUFF; SI:=SI+2; DI:=DI+16;                              13626000
L:       IF SC = "0" THEN                                               13627000
         BEGIN DS:=2 OCT; GO TO L; END;                                 13628000
         DS:=22 LIT "B5700 R. J. E. SYSTEM ";                           13629000
         N(DS:=24 LIT "CONNECTION REESTABLISHED"; JUMP OUT TO A);       13630000
           DS:=24 LIT "-- ENTER USERCODE PLEASE";                       13631000
 A:      DS:=2 LIT "{!";                                                13632000
    END STREAM;                                                         13633000
    FOR T1:=2 STEP 1 WHILE (T2:=M[INBUFF+T1]).[1:5]=0 DO                13634000
    IF T2=2 THEN STACURR.[39:1]:=1 ELSE                                 13635000
    IF T2=3 THEN STACURR.[36:1]:=1;                                     13636000
    TWXOUT(1,47,INBUFF+T1,STA);                                         13637000
    IF NOT P THEN BEGIN HELLO:=1; L:=0; END;                            13638000
    GO TO LOOP;                                                         13639000
UNITCHANGE:                                                             13640000
    STREAM(INBUFF,T2:=[T2]);                                            13641000
    BEGIN SI:=INBUFF; SI:=SI+2; DS:=2 OCT; END;                         13642000
    IF (T1:=(T1 INX STA)&T2[CTF]) THEN RJEUNITCHANGE(T1) ELSE           13643000
    INDEPENDENTRUNNER(P(.RJEUNITCHANGE),T1);                            13644000
    GO TO LOOP;                                                         13645000
SPO:  %INPUT FROM REMOTE SPO                                            13646000
    INDEPENDENTRUNNER(P(.KEYIN),1&INBUFF[CTF]&STA[9:9:9]);              13647000
    INBUFF:=GETSPACE(31,0,1)+3;                                         13648000
    GO TO LOOP;                                                         13649000
CARDRDR:  %PLACE INPUT FROM CARD READER IN LOAD CONTROL TYPE DECKS      13650000
    IF FIR THEN  %START UP A NEW DECK                                   13651000
    BEGIN IF FIR=3 THEN  %GO GET BUFFER SPACE FOR DECKS                 13652000
         P(GETSPACE(60,0,1)+2,DUP,GETSPACE(30,0,1)+2,                   13653000
         GETSPACE(10,0,1)+2,[M[GETSPACE(30,0,1)+2]]&30[8:38:10]);       13654000
         FIR:=L:=N:=H[9]:=0;                                            13655000
         MOVE(20,[H[9]],[H[10]]);                                       13656000
         H[8]:=200; D:=1;                                               13657000
         MOVE(10,INBUFF,FIRSTCARD);                                     13658000
    END;                                                                13659000
    IF D = 0 THEN SLEEP([D],NOT 0);  %WAIT FOR DISKIO IF NECESSARY      13660000
    MOVE(10,INBUFF,OUTBUFF);                                            13661000
    IF (P(M[INBUFF],TOP) AND P(XCH).[1:5]=@14) THEN                     13662000
    BEGIN IF L DIV 6 ! N DIV 6 THEN                                     13663000
         BEGIN A:=L DIV 3;                                              13664000
              ADR;                                                      13665000
              DISKWAIT(-RESERVE,30,A);                                  13666000
              M[I:=L MOD 3 | 10 + 9 + RESERVE]:=N;                      13667000
              DISKWAIT(RESERVE,30,A);                                   13668000
         END ELSE M[(L-N)|10 + 9 + OUTBUFF]:=N;                         13669000
         L:=M[OUTBUFF+9]:=N;                                            13670000
         Q:=NABS(Q);                                                    13671000
    END;                                                                13672000
    IF N=12000 THEN  %DECK IS TOO LARGE                                 13673000
    BEGIN STREAM(FIRSTCARD,T1:=T1:=GETSPACE(14,0,0)+2);                 13674000
         BEGIN DS:=32 LIT                                               13675000
              "#MORE THAN 12000 CARDS IN:    {!";                       13676000
              SI:=FIRSTCARD; DS:=9 WDS; DS:=2 LIT "{!";                 13677000
         END;                                                           13678000
         TWXOUT(1&1[CTF],105,T1,STA);                                   13679000
         GO TO BOMB;                                                    13680000
    END;                                                                13681000
    IF (N:=N+1) MOD 6 = 0 THEN  % WRITE OUT ANOTHER BLOCK               13682000
    BEGIN A:=N DIV 3 - 2;                                               13683000
         ADR;                                                           13684000
         OUTBUFF:=OUTBUFFOLD;                                           13685000
         DISKIO(D,OUTBUFF-1,60,A);                                      13686000
    END ELSE OUTBUFF:=OUTBUFF+10;                                       13687000
    IF Q.[1:1] THEN  %CHECK FOR QM END                                  13688000
    BEGIN M[INBUFF+9]:=0&"."[1:43:5];                                   13689000
         STREAM(X:="END":INBUFF);                                       13690000
         BEGIN SI:=INBUFF;                                              13691000
L:            SI:=SI+1; IF SC = " " THEN GO TO L;                       13692000
              DI:=LOC X; DI:=DI+5;                                      13693000
              IF 3 SC = DC THEN TALLY:=1;                               13694000
              X:=TALLY;                                                 13695000
         END;                                                           13696000
         IF P THEN ELSE GO TO LOOP;                                     13697000
    END ELSE GO TO LOOP;                                                13698000
    %  END OF DECK CLOSE THE FILE                                       13699000
    IF D = 0 THEN SLEEP([D],NOT 0);                                     13700000
    OUTBUFF:=OUTBUFFOLD;                                                13701000
    L:=(A:=N DIV 6|2)+2;                                                13702000
    ADR;                                                                13703000
    IF N MOD 6 ! 0 THEN DISKWAIT(OUTBUFF,60,A);                         13704000
    IF L LSS 200 THEN                                                   13705000
    BEGIN H[8]:=L;                                                      13706000
         FORGETUSERDISK(A+2,L-200);                                     13707000
    END;                                                                13708000
    H[7]:=N-1;                                                          13709000
    H[6]:=0&STA[9:9:9];                                                 13710000
    H[5]:=-0;                                                           13711000
    H[4]:=0;                                                            13712000
    FIR:=1;                                                             13713000
    ENTERCONTROLDECK(H);                                                13714000
    GO TO LOOP;                                                         13715000
ERROR:                                                                  13716000
BOMB:  %THROWAWAY THE LATEST DECK                                       13717000
    T1:=H[9]+9; FIR:=1;                                                 13718000
    FOR T2:=10 STEP 1 UNTIL T1 DO                                       13719000
    FORGETUSERDISK(H[T2],-H[8]);                                        13720000
    GO TO LOOP;                                                         13721000
EXIT:  %THROWAWAY THE BUFFERS                                           13722000
    FORGETSPACE(INBUFF-1);                                              13723000
    IF FIR ! 3 THEN                                                     13724000
    BEGIN FORGETSPACE(OUTBUFFOLD);                                      13725000
         FORGETSPACE(FIRSTCARD);                                        13726000
         FORGETSPACE(RESERVE);                                          13727000
         FORGETSPACE(H);                                                13728000
    END;                                                                13729000
    STACURR.[33:1]:=0;                                                  13730000
    KILL([STA]);                                                        13731000
END REMOTE JOB INPUT HANDLER;                                           13732000
REAL PROCEDURE ANALYSIS;%                                               14000000
         BEGIN%                                                         14001000
         REAL ICW,IRCW,INCW,CL,T1,C,T2=SYLLABLE ;%                      14002000
         LABEL GETOUT;%                                                 14003000
COMMENT  ANALYSIS  EXAMINS THE SYLLABLE WHICH CAUSED THE INTURRUPT AND% 14004000
              FROM  THE RELATIVE ADDRESS OF THE SYLLABLE (INCLUDING%    14005000
              VARIENT OPERATOR CONSIDERATIONS) COMPUTES THE LOCATION,C, 14006000
              OF A COPY OF THE DESCRIPTOR ON THE TOP OF THE STACK.%     14007000
              THE PREVIOUS TWO SYLLABLES ARE FETCHED BY THE STREAM%     14008000
              STATEMENT GETSYLLABLES WHICH ALSO ADJUSTS THE C-L REGIST- 14009000
              ERS PROPERLY.%                                            14010000
              FINALLY THE STACK IS ADJUSTED AS FOLLOWS:%                14011000
                   DECREASE  S BY 1,IF OPDC OR DESC%                    14012000
                   XCH A AND B REGISTERS,IF COC OR CDC%                 14013000
                   OTHERWISE LEAVE THE SAME.                           ;14014000
         CHECKSTACKSPACE;%                                          %WF 14014100
         INCW ~ PRT[P1MIX,8];%                                          14015000
         POLISH(.INCW,IOR);%                                            14016000
         IRCW ~ * INCW ;%                                               14017000
         ICW ~ *( (NOT 0) INX INCW);%                                   14018000
         CL ~ (IRCW INX 0) & IRCW[30:10:2];%                            14019000
         STREAM             (T1~0,T2~0,CL:X~0);%                        14020000
              BEGIN%                                                    14021000
              SI~CL; SI~SI-2 ;  CL ~ SI; DI ~ LOC T2; DI~DI+6;%         14022000
              DS ~ 2 CHR;  SI ~ SI-3;%                                  14023000
              IF SC = "/" THEN%                                         14024000
                   BEGIN%                                               14025000
                   SI~SI-1; IF SC ="0" THEN%                            14026000
                   BEGIN TALLY~1; T1~TALLY ;CL ~ SI  END;%              14027000
                   END;%                                                14028000
              END  GETSYLLABLE ;%                                       14029000
         POLISH(.CL,~,.T2,~,.T1,~);%                                    14030000
         IF INCW.[32:1] THEN%                                           14031000
              BEGIN COMMENT  P-BIT IN CHARACTER MODE ;%                 14032000
              IF T2 = @4441 THEN%                                       14033000
              BEGIN COMMENT ENTER CHARACTER MODE;%                      14034000
                        P(M[(IRCW ~ *(NOT 0 INX INCW ~ PRT[P1MIX,8] ~%  14035000
                             (NOT 1 INX INCW)&0[32:1:1])).[18:15]]&%    14036000
                             1[16:47:1]&0[18:18:15],(NOT 0)INX INCW,~); 14037000
                        C ~ INCW INX 0 -2;%                             14038000
                   END ELSE BEGIN%                                      14039000
              IF MEMORY[ C ~ IRCW.[18:15]-T2.[36:6]].[1:3] = 4%         14040000
              THEN%                                                     14041000
              BEGIN%                                                    14042000
              IF T2.[42:6]= @53 THEN BEGIN%                             14043000
COMMENT  CONTROL WORD MEANS CHARACTER MODE RELEASE;%                    14044000
              T1~PRT[P1MIX,9]~M[(*((NOT 1)INX INCW)).[18:15]].[33:15];% 14045000
              POLISH(M[T1],0,0);%                                       14046000
         IF M[T1].[20:1] THEN CONTINUITYBIT;%                           14047000
              PROGRAMRELEASE;%                                          14048000
              END%                                                      14049000
              END;%                                                     14050000
              IF T2 = 0 THEN GO TO GETOUT;%                             14051000
                   END%                                                 14052000
              END%                                                      14053000
              ELSE%                                                     14054000
         BEGIN%                                                         14055000
         IF T2.[46:1] THEN%                                             14056000
              BEGIN%                                                    14057000
              C ~ ICW.[33:15];%                                         14058000
              POLISH(ICW, (NOT 1)INX INCW, ~,IRCW,%                     14059000
              PRT[P1MIX,8]~INCW ~ (NOT 0)INX INCW ,~);%                 14060000
              END    OPDC  DESC  PART%                                  14061000
         ELSE%                                                          14062000
              BEGIN%                                                    14063000
              C ~ INCW INX 0 -2;%                                       14064000
              IF (NT1 ~ T2 AND @77) = @41 THEN%                         14065000
              BEGIN   C ~C-1 ;%                                         14066000
              POLISH(MEMORY[C],MEMORY[C+1],[MEMORY[C]], ~ ,[MEMORY[C+1] 14067000
                     ],~);%                                             14068000
              END COC CDC PART%                                         14069000
              ELSE IF NT1 = @31 THEN%                                   14070000
                   BEGIN COMMENT THIS IS A BRANCH;%                     14071000
         GETOUT:        CL ~ P([PRT[P1MIX,1]],DUP,T2,XCH,~) INX @600000;14072000
                   END BRANCH PART%                                     14073000
              ELSE IF NT1 = @35 THEN GO TO GETOUT; COMMENT RETURN;%     14074000
              END  ALL SYLLABLES BUT OPDC DESC ;%                       14075000
         END  WORD MODE INTURRUPT ;%                                    14076000
         POLISH(IRCW & CL[33:33:15]&CL[10:30:2],INCW,~) ;%              14077000
         ANALYSIS ~ C ;%                                                14078000
         END   ANALYSIS OF P BIT ;%                                     14079000
                                                                        14104000
 SAVE INTEGER PROCEDURE ACTUALOVERLAYADDRESS(TYPE, MIX, LOC);           14105000
    VALUE     TYPE, MIX, LOC;                                           14106000
    INTEGER   TYPE, MIX, LOC;                                           14107000
    BEGIN INTEGER  T = +1;                                              14108000
         LABEL     AUXMEM;                                              14109000
         IF TYPE THEN % CODE...                                         14110000
         BEGIN IF LOC.[5:1] THEN GO TO AUXMEM;                          14111000
              LOC := LOC INX 0;                                         14112000
              T := JAR[MIX,LOC DIV (T:=JAR[MIX,8])+10]+LOC MOD T;       14113000
         END ELSE % BETTER BE DATA....                                  14114000
         BEGIN IF LOC.[33:3]=7 THEN                                     14115000
    AUXMEM:   T := -(0 & LOC[32:36:12])                                 14116000
              ELSE T := DALOC[MIX,LOC.[33:6]+P(DUP)-1]+LOC.[39:9]       14117000
         END;                                                           14118000
    END;                                                                14119000
$ INCLUDE 14123001,IF AUXMEM;                                           14119999
 PROCEDURE AUXILIARYMEMORYCASUALTYRECOVERY;                             14120000
         FORWARD;                                                       14121000
 PROCEDURE AUXILIARYTABLEINITIALIZE;                                    14122000
         FORWARD;                                                       14123000
COMMENT            THE SEGMENT DICTIONARY IS CONSTRUCTED BY THE%        14125000
                        COMPILERS AND EACH ENTRY HAS THE FORMAT:%       14126000
                   [ 1: 1]  = 1 FOR TYPE 2 SEGMENTS, =0 OTHERWISE.%     14127000
                   [ 2: 1]  = 1 FOR INTRINSICS , = 0 OTHERWISE.%        14128000
                   [ 3: 1]  = 1 IF BEING MADE PRESENT, = 0 OTHERWISE    14128100
                                (INTERLOCK FOR RE-ENTRANT CODE)         14128200
                   [ 4: 2]  = 0 FOR NORMAL SEGMENTS                     14128300
                            = 3 FOR SEGMENTS OVERLAID TO AUX. MEM.      14128400
                            = 2 FOR SEGMENTS TO BE OVERLAID TO          14128500
                                AUXILIARY MEMORY WHICH HAVEN"T BEEN     14128600
                   [ 8:10]  = LINK TO PRT FOR 1ST DESCRIPTOR FOR%       14129000
                             THIS SEGMENT.%                             14130000
                   [16:15]  = SEGMENT SIZE (<1024) FOR ABSENT           14131000
                             SEGMENTS .%                                14132000
                             = CORE ADDRESS OF PRESENT SEGMENTS.%       14133000
                             =  1  FOR NEVER-PRESENT INTRINSICS.%       14134000
                   [33:15]  = DISK ADDRESS  OF SEGMENT.%                14135000
                             = INTRINSIC-NUMBER FOR INTRINSICS.%        14136000
                   THE  PRT FOR PROGRAM SEGMENTS IS CONSTRUCTED BY THE% 14137000
                        COMPILERS IN THE FORMAT :%                      14138000
                   [ 0:5]    = PROGRAM DESCRIPTOR BITS.%                14139000
                   [ 6:1]    = STOPPER BIT WHICH DEFINES THE [ 7:11]%   14140000
                             FIELD.%                                    14141000
                   [ 7:11]   = LINK TO NEXT DESCRIPTOR THAT BELONGS TO% 14142000
                             THIS SEGMENT, IF STOPPER FALSE.%           14143000
                             = SEGMENT NUMBER, IF STOPPER TRUE.%        14144000
                   [18:15]   = F-REGISTER FIELD USED AT RUN TIME IN%    14145000
                             LABEL AND ACCIDENTIAL DESCRIPTORS.%        14146000
                             = SEGMENT NUMBER FOR WORD MODE AND%        14147000
                             CHARACTER MODE DESCRIPTORS.%               14148000
                   [33:15]   = CORE ADDRESS FOR PRESENT SEGMENTS.%      14149000
                             = RELATIVE ADDRESS FOR ABSENT SEGMENTS,%   14150000
                             I.E. RELATIVE TO BEGINNING OF SEGMENT.%    14151000
                   EACH PRT  (R+4) CONTAINS A DESCRIPTOR WHICH POINTS%  14152000
                        TO THE SEGMENT DICTIONARY.%                     14153000
         ;%                                                             14154000
PROCEDURE MAKEPRESENT(C); VALUE C; REAL C;%                             14155000
         BEGIN%                                                         14156000
         REAL SAVEBIT, MINE;%                                           14157000
         REAL   D,MOTHER,MOM,LOC,SIZE;%                                 14158000
         INTEGER DISKADDR = SAVEBIT;%                                   14159000
         DEFINE LINK= [ 7:11]#,STOPPER=[ 6: 1]#,PROGRAMDESC=[5:1]#;%    14160000
         DEFINE NOTOPEN =[25:1] #;%                                     14161000
         ARRAY NAME  DD ;%                                              14162000
         ARRAY PRTR[*]  ;%                                              14163000
         REAL SEGNO=MOTHER, X=MOM,IOD ;%                                14164000
         REAL SPACE;%   SPACE FOR SEGMENT NUMBERS  (INTRINSICS) BY MIX  14164100
         LABEL WRAP,AROUND,TESTREADY;%                                  14165000
         LABEL OPEN,CLOSE;%                                             14166000
         LABEL CODEIN,INT;                                              14166100
         DEFINE  REVERSE =[22:1]#,READY  =[19:1]#,PRESENT  =[2:1]#;%    14167000
COMMENT MAKEPRESENT HAS THE FOLLOWING ACTIONS,DEPENDING ON THE TYPE%    14168000
              OF DESCRIPTOR CAUSING PRESENCE BIT :%                     14169000
              DATA DESCRIPTOR :%                                        14170000
                   IF MOTHER ABSENT THEN GET CORE SPACE AND SET%        14171000
                        MOTHER PRESENT WITH PROPER CORE ADDRESS%        14172000
                        THEN IF INITIAL ACCESS,ZERO THE SPACE ELSE%     14173000
                        READ IN FROM DISK AND RETURN DISK SPACE%        14174000
                        THEN SET 1ST MEMORY LINK TO SAVE OR NOT SAVE%   14175000
                        AND SET 2ND LINK TO ADDRESS OF MOTHER%          14176000
                   IN ANY EVENT, SET COPY PRESENT WITH CORRECT CORE%    14177000
                        ADDRESS.%                                       14178000
              IO  DESCRIPTOR:%                                          14179000
              PROGRAM DESCRIPTOR:%                                      14180000
              ;%                                                        14181000
    SUBROUTINE RUNAROUND;%                                              14182000
    BEGIN WHILE NOT (PRTR[X] ~ ((LOC+2) INX PRTR[X])%                   14183000
         OR MEMORY).STOPPER DO X ~ PRTR[X].LINK;%                       14184000
    END RUNAROUND;%                                                     14185000
    IF (D ~ M[C]).[1:1] THEN%                                           14186000
    IF D.[6:2]=1 THEN% TYPE 13 INTRINSIC                                14186100
    BEGIN X~[INTRNSC[(NFLAG(D)) INX 0]];                                14186110
          IF X>0 THEN SLEEP([X],-0);                                    14186120
          IF (X INX 0) LEQ 1023 THEN                                    14186130
          BEGIN P(ABS(X),[X],~);SIZE:=X INX 0;DISKADDR:=X.[6:27];       14186140
               MINE:=(NFLAG(D) INX 0)&SIZE[8:38:10];MINE.[1:2]:=3;      14186150
               LOC~GETSPACE(SIZE,13,0);                                 14186152
               M[LOC].[2:1]~0;                                          14186153
                GO TO CODEIN;                                           14186155
           END ELSE BEGIN M[C].[CF]~INTRNSC[(NFLAG(D)) INX 0].[CF];     14186160
                    M[C].[2:1]:=1;                                      14186170
                    P(XIT);                                             14186180
                    END                                                 14186190
    END ELSE                                                            14186200
    BEGIN PRTR ~ PRT[P1MIX,*];  LOC ~ NFLAG(D)&0[5:5:1];                14187000
         DO IF LOC.PROGRAMDESC THEN SEGNO ~ LOC.[18:15]%                14188000
              ELSE IF LOC.STOPPER THEN SEGNO ~ LOC.LINK%                14189000
              ELSE LOC ~ NFLAG(PRTR[LOC.LINK])%                         14190000
         UNTIL SEGNO!0;%                                                14191000
         DD ~ SEGNO INX PRTR[4];%                                       14192000
                                                                        14192100
         IF DD[0].[3:1] THEN COMPLEXSLEEP((NOT DD[0].[3:1]));%          14193000
         IF (SIZE ~ (MINE ~ DD[0]).[18:15]){1023 THEN%                  14194000
         BEGIN DD[0].[3:1] ~ 1;%                                        14195000
              IF MINE<0 THEN%                                           14196000
                IF PRTR[X ~ MINE.[8:10]].[2:1] THEN GO AROUND;%         14197000
              IF MINE.[2:1] THEN%                                       14198000
              BEGIN X ~ [INTRNSC[MINE INX 0]];%                         14198100
                   IF X>0 THEN SLEEP([X],-0);%                          14198200
                   IF (X INX 0){1023 THEN BEGIN P(ABS(X),[X],~);%       14198300
                        SIZE ~ X INX 0;  DISKADDR ~ X.[6:27];%          14198400
                   END ELSE BEGIN LOC ~ (SIZE ~ X INX 0)-2;%            14198500
                        DD[0].[FF] ~ SIZE;  GO AROUND;%                 14199000
                   END;%                                                14200000
              END ELSE IF JAR[P1MIX,10]=0 THEN%                         14201000
                DISKADDR := DATADDRESS(P1MIX, MINE)                     14202000
                                                                        14202100
              ELSE DISKADDR := CODEADDRESS(P1MIX, MINE);                14203000
                                                                        14204000
              LOC ~ GETSPACE(SIZE, 1+(MINE<0)+6|(MINE.[2:1]), 0);%      14205000
CODEIN:                                                                 14205100
              DISKIO(IOD, -LOC-1, SIZE, DISKADDR);  X ~ MINE.[8:10];%   14206000
                                                                        14206100
$INCLUDE 14206306, IF STATISTICS;                                       14206299
              CODEPBITS[P1MIX]:=*P(DUP)+1;                          %R6314206300
              COUNTUP(19+(DISKADDR GTR 0),(SIZE+29) DIV 30);            14206305
               IF D.[6:2]=1 THEN                                        14206310
               BEGIN M[C].[CF]~LOC+2;                                   14206320
                     M[C].[2:1]~1;                                      14206330
               GO TO INT;                                               14206340
               END;                                                     14206350
              IF MINE>0 THEN BEGIN RUNAROUND;%                          14207000
$INCLUDE 14207201, IF STATISTICS;                                       14207099
                   IF MINE.[6:1] THEN MORECPBITS[P1MIX]:=*P(DUP)+1      14207100
                   ELSE DD[0].[6:1]:=1;                                 14207200
                   M[C] ~ ((LOC+2) INX D) OR MEMORY;%                   14208000
INT:                                                                    14208010
                   SLEEP([IOD], IOMASK);%                               14209000
                   IF MINE.[2:1] THEN%                                  14209100
                   BEGIN M[LOC] ~ (*P(DUP))&0[9:9:6];%                  14209200
                        INTRNSC[MINE INX 0] ~ -(*P(DUP))&(LOC+2)[CTC];% 14209300
                                                                        14209400
                   END ELSE%                                            14209500
                   IF (X ~ PRTR[4].[18:6])!0 THEN%                      14210000
                     M[LOC] ~ (*P(DUP))&X[9:42:6];%                     14211000
                   IF DISKADDR>0 THEN M[LOC+1] := 0 & SIZE[CTF];        14212000
                   M[LOC+1] := (*P(DUP)) & SEGNO[CTC];                  14212010
              IF MINE.[2:1] THEN M[LOC+1] ~ (*P(DUP))&MINE[8:38:10];%   14212100
              IF D.[6:2]=1 THEN P(XIT);                                 14212101
                   DD[0].[18:15] ~ LOC+2;%                              14213000
              END PROGRAM CODE SEGMENTS%                                14214000
              ELSE BEGIN SLEEP([IOD], IOMASK);%                         14215000
                   M[C] ~ PRTR[X] ~ M OR ((LOC+2)%                      14216000
                        &(M[LOC+1] ~ [PRTR[X]] INX 0)[18:33:15]%        14217000
                        &SIZE[8:38:10]);%                               14218000
$INCLUDE 14218301, IF STATISTICS;                                       14218099
                   DATAPBITS[P1MIX]:=*P(DUP)+1;                     %R6314218100
                   IF MINE.[6:1] THEN MOREDPBITS[P1MIX]:=*P(DUP)+1      14218200
                   ELSE DD[0].[6:1]:=1;                                 14218300
              END TYPE TWO DATA SEGMENTS;%                              14219000
              M[LOC].[2:1] ~ 0;%                                        14220000
         END ABSENT SEGMENTS%                                           14221000
         ELSE BEGIN LOC ~ SIZE-2;%                                      14222000
    AROUND:   IF DD[0]>0 THEN%                                          14223000
                IF NOT PRTR[X ~ DD[0].[8:10]].[2:1] THEN RUNAROUND;%    14224000
              M[C] ~ IF DD[0]>0 THEN ((SIZE INX D) OR M)%               14225000
                   ELSE PRTR[DD[0].[8:10]];%                            14226000
         END;%                                                          14227000
         IF DD[0].[2:1] THEN%                                           14227100
         BEGIN SIZE ~ (DD[0] INX 0)-1;%                                 14227200
              STREAM(SEGNO, T ~ SIZE AND 3,%                            14227300
                        I ~ [INTABLE[P1MIX,SIZE DIV 4]]);%              14227400
              BEGIN DI ~ DI+T;  DI ~ DI+T;  SI ~ LOC T;%                14227500
                   SI ~ SI-2;  DS ~ 2 CHR;  END;%                       14227600
         END;%                                                          14227700
         DD[0].[3:1] ~ 0;     P(XIT);%                                  14228000
    END;%                                                               14229000
         IF (MOM:=D.[3:5])!0 AND (MOM AND @33)!@30 THEN                 14230000
              BEGIN%                                                    14231000
COMMENT I/O DESCRIPTOR;%                                                14232000
              IF JAR[P1MIX,2] < 0 THEN                                  14233000
                   BEGIN TERMINATE(P1MIX);                              14233100
                        TERMINALMESSAGE(25);                            14233200
                   END;                                                 14233300
              MOM~ MEMORY[D  INX  (IF D.REVERSE THEN 2 ELSE NOT 1)]%    14234000
                        INX  0;%                                        14235000
TESTREADY:    IF NOT MEMORY[MOM].READY THEN%                            14236000
                        SLEEP([MEMORY[MOM]],IOMASK);%                   14237000
              IF MEMORY[MOM].PRESENT THEN%                              14238000
                        MEMORY[C]~MEMORY[MOM]%                          14239000
              ELSE%                                                     14240000
              BEGIN%                                                    14241000
              IF MEMORY[MOM].NOTOPEN THEN%                              14242000
OPEN:            BEGIN SAVEOPEN(MOM);IF TERMIX.[CF]=P1MIX THEN P(XIT);  14243000
                        GO TESTREADY END                                14244000
              ELSE BEGIN%                                               14245000
COMMENT READY AND NOT PRESENT INDICATES REEL-SWITCH OR TERMINATE;%      14246000
                   PRTR~M[MOM-3];%                                      14247000
                   LOC~PRTR[15].[25:5];%                                14248000
                   SIZE~PRTR[4].[8:4];%                                 14249000
                   IF M[MOM].[27:1] THEN%                               14250000
                   IF M[MOM].[24:1] THEN%                               14251000
                   BEGIN IF SIZE=2 AND NOT PRTR[4].[2:1]%               14252000
                            AND NOT M[MOM].[22:1] THEN%                 14253000
                         BEGIN BLASTQ(LOC);%                            14254000
                               P(WAITIO(M[MOM-2],0,LOC),DEL);%          14255000
                               P(WAITIO(@1000000340000005,0,LOC),DEL);% 14256000
                               IF M[M[MOM-2] INX 4].[42:6]=1 THEN%      14257000
                   CLOSE:      BEGIN LOC~PRTR[13].[28:10];%             14258000
                                     FILECLOSE(MOM&@12[18:33:15]);%     14259000
                                     PRTR[13].[28:10]~LOC+1;%           14260000
                                     GO TO OPEN;%                       14261000
                               END;%                                    14262000
                         END;%                                          14263000
                   END ELSE%                                            14264000
                   BEGIN IF SIZE=2 OR SIZE=7 OR SIZE=8 THEN%            14265000
                         BEGIN IF NOT PRTR[4].[2:1] THEN%               14266000
                                  M[M[MOM-2] INX 4].[42:6]~1;%          14267000
                               GO TO CLOSE;%                            14268000
                         END;%                                          14269000
                   END;%                                                14270000
                   P(MOM,M[MOM].[27:1]+1,0,0);%                         14271000
                   COM11;%                                              14272000
                   END;%                                                14273000
              END;%                                                     14274000
              END%                                                      14275000
         ELSE%                                                          14276000
              BEGIN%                                                    14277000
COMMENT  DATA DESCRIPTOR;%                                              14278000
         IF   (MOTHER~MEMORY[MOM ~ D.[18:15]]).[2:1] THEN GO WRAP;%     14279000
         SAVEBIT ~ MOTHER.[CF]=1;                                       14280000
         MEMORY[MOM] ~ MOTHER&((LOC ~GETSPACE(SIZE~MOTHER.[8:10],2,%    14281000
                   SAVEBIT     ))+2)[33:33:15]&1[2:47:1];%              14282000
         IF MOTHER.[CF]{2 THEN                                          14283000
              STREAM(L~LOC+2, S~SIZE-1, T~0, W~(MOTHER.[CF]=2));        14284000
                   BEGIN  SI ~ LOC S;SI~SI+6;DI~LOC T;DI~DI+7;DS~CHR;%  14285000
                   DI~L;  SI~LOC W;  DS~WDS;                            14286000
                   SI~L; T(DS~32 WDS; DS~32 WDS); DS~S WDS;%            14287000
                   END  ZERO SPACE%                                     14288000
         ELSE%                                                          14289000
              BEGIN%                                                    14290000
COMMENT READ ARRAY FROM DISK AND RETURN DISK SPACE;%                    14291000
$INCLUDE 14291101, IF STATISTICS;                                       14291099
         MOREDPBITS[P1MIX]:=*P(DUP)+1;                                  14291100
              DISKIO(IOD,-LOC-1,MOTHER.[8:10],%                         14292000
                             DATADDRESS(P1MIX, MOTHER));                14292100
$INCLUDE 14292301, IF STATISTICS;                                       14292199
              COUNTUP(21+(DATADDRESS(P1MIX,MOTHER) GTR 0),              14292200
                      (MOTHER.[8:10]+29) DIV 30);                       14292300
               MOM~MOM&MOTHER[CTF];                                     14293000
              SLEEP([IOD],IOMASK);%                                     14294000
              END ;%                                                    14295000
         MEMORY[LOC].[2:1] ~   SAVEBIT;%                                14296000
         MEMORY[LOC+1] ~ MOM ;%                                         14297000
$INCLUDE 14297101, IF STATISTICS;                                       14297099
         DATAPBITS[P1MIX]:=*P(DUP)+1;                               %R6314297100
WRAP:%                                                                  14298000
         MEMORY[C] ~ IF D.[8:10] = 0 THEN P(M[MOM],0,CDC,D,XCH,INX)%    14299000
                    ELSE  MEMORY[MOM];%                                 14300000
              END;%                                                     14301000
         END  MAKEPRESENT ;%                                            14302000
 REAL ADDRS=NT1;%                                                       14342000
REAL SCHEDULEIDS; % A 1 IN BIT POSITION X MEANS THERE IS A JOB IN THE   14342100
                  % SCHEDULE(SHEET) WITH SCHEDULE-ID X.                 14342200
 PROCEDURE COM5;%                                                       14343000
    BEGIN%                                                              14344000
         REAL RCW=+0,%                                                  14345000
              ERTOG=+2,%                                                14346000
              I    =+3,%                                                14347000
              T    =+4;%                                                14348000
         INTEGER J=I;%                                                  14349000
         ARRAY VECTOR=+5[*],S=+6[*];%                                   14350000
         INTEGER Q=S;                                                   14350100
         ARRAY FILEBLOCK=+7[*];%                                        14351000
         INTEGER LINK; LABEL RETURNEM;                                  14351100
         INTEGER MOTHER=+8, NEXTMOM=+9, MOMMIX=+10, CATCH=+11;%         14351200
         REAL CHAIN=+12;                                                14351210
$INCLUDE 14351231, IF STATISTICS;                                       14351219
         ARRAY STATARRAY=+13[*];                                        14351220
              PRYOR[P1MIX] ~ -1;                                        14351500
         P((ADDRS:=GETSPACE(196,12,0))+1,STS,RCW,0,RDS,0,XCH,CFX,STF);  14353000
         P(P&[ISTACK[1]][18:33:15],0,0,0,0,0,0);%                       14354000
         P(0, 0, 0, 0, 0, 0);%                                          14355000
         P(0);                                                          14355010
$INCLUDE 14355101, IF STATISTICS;                                       14355099
       P(0);                                                            14355100
         M[(FILEBLOCK~PRT[P1MIX,3]) INX 0-2].[9:6] ~ 0;%                14356000
         M[ADDRS]~(*P(DUP))&0[9:9:6];                                   14357000
         M[(VECTOR~JARROW[P1MIX]) INX 0-2]~(*P(DUP))&0[9:9:6];          14358000
              IF VECTOR[0]<0 THEN%                                      14358100
                   BEGIN CATCH~PRT[P1MIX,@26];                          14358150
                    ERTOG ~ (VECTOR[1]<0) OR (PRT[P1MIX,@25]!0);%       14358200
                   END;                                                 14358300
         CHAIN:=0&VECTOR[9][FTC]&VECTOR[1][1:1:1];VECTOR[9].[FF]:=0;    14358400
$ INCLUDE 14360001, IF BREAKOUT;                                        14358999
         JARROW[P1MIX]~(*P(DUP))&1[7:47:1];   %MARK IT FOR EXTINCTION   14359000
                                                                        14360000
              IF VECTOR[2]<0 THEN  %  COBOL                             14360100
              IF VECTOR[1]>0 THEN  % NOT DS-ED                          14360200
              WHILE PRT[P1MIX,16]>0 DO ASR;%CLEAN OUT AIT               14360300
              IF VECTOR[1]>0 THEN % NOT DS-ED                           14360310
              FOR MOMMIX:=6 STEP 5 UNTIL 11 DO                          14360320
              BEGIN Q:=NFLAG(PRT[P1MIX,MOMMIX]); % AIT OR OAT ENTRY     14360330
                   IF Q.[2:1] THEN % PRESENT, GRAB ADDRESS FROM LINK    14360340
                     Q := Q & M[Q INX NOT 0][FTC];                      14360350
                   IF Q.[33:3]=7 THEN % AUXILIARY MEMORY IN THE ACT     14360360
                     DISKRTN(Q.[CF], Q.[8:10]);                         14360370
                   IF VECTOR[2]<0 THEN MOMMIX:=11; % COBOL HAS NO OAT   14360380
              END;                                                      14360390
              SLEEP([OLAYMASK],MOMMIX~TWO(P1MIX));                      14360400
              OLAYMASK ~ NOT MOMMIX AND OLAYMASK;                       14360500
              MOTHER ~ DALOC[P1MIX,0].[CF];                             14360600
              NEXTMOM := -1;  S := DALOCROW[P1MIX];                     14360700
              WHILE (NEXTMOM := NEXTMOM+2)<MOTHER DO                    14360800
                FORGETUSERDISK(S[NEXTMOM],-500);                        14360900
              SLEEP([TOGLE],STOREMASK);                                 14361000
              MOTHER ~ (MOMMIX ~ (NEXTMOM ~%                            14361100
                   PRT[P1MIX,4].[18:12]).[36:6])=P1MIX;%                14361200
              NEXTMOM ~ NEXTMOM AND @77;%                               14361300
$ INCLUDE 14361511,IF AUXMEM;                                           14361309
              TOGLE := TOGLE AND NOT STOREMASK;                         14361310
              S := PRT[P1MIX,4] & ((I:=*P(DUP))+1)[8:38:10];            14361320
              FOR I:=I STEP -1 UNTIL 1 DO                               14361330
              IF (AUXCODE[P1MIX]+AUXDATA[P1MIX])=0 THEN I:=1 ELSE       14361340
              IF (NT1 := S[I])<0 THEN                                   14361350
              IF VECTOR[1] GTR 0 THEN % AVOID CONFUSION IF DS-ED        14361355
              BEGIN COMMENT TYPE-TWO (DATA) SEGMENT;                    14361360
                   IF (NT1:=NFLAG(PRT[P1MIX,NT1.[8:10]])).[2:1] THEN    14361370
                       NT1 := NT1 & M[P(DUP) INX NOT 0][FTC];           14361380
                   IF NT1.[33:3]=7 THEN                                 14361390
                     DISKRTN(NT1.[CF], NT1.[8:10]);                     14361400
              END ELSE ELSE                                             14361410
              IF NEXTMOM=0 AND NT1.[5:1] THEN                           14361420
              BEGIN IF (NT2 := NT1.[FF])>1023 THEN                      14361430
                        NT2 := M[NT2-1].[FF];                           14361440
                   AUXCODE[P1MIX] := *P(DUP)-NT2.[38:6]-1;              14361450
                   FORGETAUXILIARYSPACE(NT2, NT1.[CF]);                 14361460
              END;                                                      14361470
              IF MOTHER AND NEXTMOM!0 THEN                              14361480
              BEGIN AUXCODE[NEXTMOM] := AUXCODE[P1MIX];                 14361490
                   AUXCODE[P1MIX] := 0                                  14361500
              END;                                                      14361510
$ INCLUDE 14361519, IF DEBUGGING AND AUXMEM;                            14361512
              IF AUXCODE[P1MIX]!0 THEN DDT;                             14361515
              IF (AUXDATA[P1MIX]|(VECTOR[1]>0))!0 THEN DDT;             14361516
              WHILE(T~M[I]).[CF] ! 0 DO%                                14362000
                   BEGIN%                                               14363000
                   IF T>0 THEN%                                         14364000
                        IF T.[9:6]=P1MIX THEN%                          14365000
                        IF MOTHER AND (T.[3:6]=1) THEN%                 14365100
                          M[I].[9:6] ~ NEXTMOM%                         14365200
                        ELSE FORGETSPACE(I INX 2);%                     14365300
                        I~ T.[CF]%                                      14366000
                   END;%                                                14367000
              INTABLEROW[P1MIX] ~ 0;%                                   14367100
$INCLUDE 14367201, IF BREAKOUT;                                         14367199
              GRSD[P1MIX]~0;                                            14367200
$INCLUDE 14368002, IF BREAKOUT AND AUXMEM;                              14367999
              IF BREAKING=P1MIX AND NOT BREAKTOG THEN                   14368000
              BEGIN BREAKING~0; BREAKTOG~1 END;                         14368001
                                                                        14369000
                                                                        14370000
              IF NEXTMOM!0 THEN BEGIN%                                  14370010
                   IF MOTHER THEN%                                      14370020
                     IF PRT[NEXTMOM,4].[24:6]=@77 THEN%                 14370030
                     NFO[(NEXTMOM-1)|NDX+1] ~%                          14370035
                     PRT[NEXTMOM,4] ~ (*P(DUP))&0[18:18:15]%            14370040
                     ELSE BEGIN MOTHER ~ NEXTMOM;%                      14370050
                          DO UNTIL (MOTHER ~ (PRT[MOTHER,4] ~%          14370060
                          NFO[(MOTHER-1)|NDX+1] ~%                      14370065
                            (*P(DUP))&NEXTMOM[18:42:6]).[24:6])=@77;%   14370070
                     END%                                               14370080
                   ELSE BEGIN%                                          14370090
                        IF (PRT[MOMMIX,4].[24:6]=P1MIX) AND%            14370100
                          NEXTMOM=@77 THEN NFO[(MOMMIX-1)|NDX+1] ~%     14370110
                          PRT[MOMMIX,4] ~ (*P(DUP))&0[18:18:15]%        14370115
                        ELSE BEGIN%                                     14370120
                             DO BEGIN MOTHER ~ MOMMIX;                  14370130
                                  MOMMIX ~ PRT[MOMMIX,4].[24:6];%       14370140
                             END UNTIL MOMMIX=P1MIX;%                   14370150
                             NFO[(MOTHER-1)|NDX+1] ~%                   14370155
                             PRT[MOTHER,4] ~%                           14370160
                               (*P(DUP))&NEXTMOM[24:42:6];%             14370165
                   END  END;%                                           14370170
                   NFO[(P1MIX-1)|NDX+1] ~%                              14370180
                   PRT[P1MIX,4] ~ (*P(DUP))&0[18:18:15];%               14370190
              END;%                                                     14370200
$ INCLUDE 14370301,IF AUXMEM;                                           14370299
              TOGLE := TOGLE OR STOREMASK;                              14370300
         IF  VECTOR[2].[8:10]! 0 THEN%                                  14371000
$OMIT 14373001, IF STATISTICS;                                          14371999
              FORGETSPACE(DIRECTORYSEARCH(ABS(VECTOR[0]),IF VECTOR[0]<0 14372000
                    THEN "DISK   " ELSE ABS(VECTOR[1]),13));            14373000
$INCLUDE 14373601, IF STATISTICS;                                       14373099
              BEGIN                                                     14373100
                NT1:=DIRECTORYSEARCH(ABS(VECTOR[0]),IF VECTOR[0] LSS 0  14373200
                     THEN "DISK   " ELSE ABS(VECTOR[1]),13).[CF];       14373300
                JOBTYPE[P1MIX]:=(*P(DUP))&M[NT1 INX 4][36:36:6];        14373400
                FORGETSPACE(NT1);                                       14373500
              END;                                                      14373600
              IF VECTOR[2].[8:10] = 1 THEN % COMPILER ON COMPILE AND GO 14374000
                   BEGIN%                                               14375000
                        IF ERTOG=0 THEN%                                14376000
                             BEGIN%                                     14377000
                                  SLEEP([TOGLE],SHEETMASK);             14378000
                                  SHEETFREE~0;%                         14379000
                                  S~[M[GETSPACE(31,2,0)+2]]&30[8:38:10];14380000
                                  DISKIO(T,-(S INX 0-1),30,             14381000
                                                       VECTOR[2].[FF]); 14382000
                                  SLEEP([T],IOMASK);                    14383000
                                  STREAM(A~0:B~P(.SCHEDULEIDS));        14383100
                                  BEGIN SI~B;                           14383200
                                     47(SKIP SB; SKIP DB; TALLY~TALLY+1;14383300
    IF SB THEN BEGIN END                                                14383400
                                              ELSE JUMP OUT);           14383450
                                        DS~SET; A~TALLY;                14383500
                                  END STREAM;                           14383600
                                  T ~ P; S[3] ~ 0&T[8:38:10];           14383700
                                  S[25] ~ CATCH;                        14383740
                                  S[23].[31:17] ~ (CLOCK+P(RTR)) DIV 60;14383750
                                  DISKIO(T,+(S INX 0-1),30,             14383800
                                                       VECTOR[2].[FF]); 14383900
                                  SLEEP([T],IOMASK);                    14384000
                                  I ~ IF S[18] > MIXMAX THEN MIXMAX     14385000
                                                        ELSE S[18];     14386000
                                  IF SHEET[I].[CF] ! 0 THEN             14387000
                                  BEGIN DISKIO(T,-(S INX 0-1),30,       14388000
                                                       SHEET[I].[FF]);  14389000
                                        SLEEP([T],IOMASK);              14390000
                                        S[29] ~ VECTOR[2].[FF];         14391000
                                        DISKIO(T,+(S INX 0-1),30,       14392000
                                                       SHEET[I].[FF]);  14392500
                                        SLEEP([T],IOMASK);              14393000
                                  END ELSE SHEET[I] ~ VECTOR[2].[FF];   14394000
                                  SHEET[I].[FF] ~ VECTOR[2].[FF];       14395000
                                  SHEETFREE~1 ;FORGETSPACE(S INX 0);%   14396000
                             END%                                       14397000
                   ELSE BEGIN%                                          14398000
                        RETURNEM:                                       14398500
                             S~[M[GETSPACE(31,2,0)+2]]&30[8:38:10];     14398600
                             DISKIO(T,-(S INX 0-1),30,VECTOR[2].[FF]);  14398700
                             SLEEP([T],IOMASK);                         14398800
                             FORGETESPDISK(VECTOR[2].[18:15]);%         14399000
                             LINK ~ S[13];                              14399100
                             WHILE LINK!0 DO                            14399200
                               BEGIN DISKIO(T,-(S INX 0-1),30,LINK);    14399300
                                     SLEEP([T],IOMASK);                 14399400
                                     FORGETESPDISK(LINK); LINK ~ S[29]; 14399500
                               END;                                     14399600
                             FORGETSPACE(S);                            14399700
                        END                                             14400000
                   END  ELSE%                                           14401000
                        IF VECTOR[2].[8:10] = 0 THEN%                   14402000
                             BEGIN%                                     14403000
              FOR I~1 STEP 1 UNTIL VECTOR[9] DO%                        14404000
              IF VECTOR[9+I] ! 0 THEN%                                  14405000
              FORGETUSERDISK(VECTOR[9+I],-VECTOR[8]);                   14406000
                             END ELSE                                   14407000
                        IF VECTOR[2].[8:10]=4%                          14407100
                           THEN GO TO RETURNEM;                         14407200
              IF VECTOR[0]<0 THEN                                       14408000
              IF ERTOG ! 0 THEN%                                        14409000
                   VECTOR[2].[8:10] ~ 3;%                               14410000
              I ~ P1MIX;%                                               14411000
              COMMENT SUBTRACT CORE REQUIREMENTS FROM CORE WORD;        14411100
              CORE.[18:15]~CORE.[18:15] - NFO[(P1MIX-1)|NDX+2].[18:15]; 14411200
$ INCLUDE 14411311,IF AUXMEM;                                           14411309
              IF AUXDATA[P1MIX]!0 THEN AUXILIARYMEMORYCASUALTYRECOVERY; 14411310
$INCLUDE 14411601, IF DATACOM AND NOT INQUIRY;                          14411499
              IF TUSTABYMIX[P1MIX]!0                                    14411500
                OR NOT P(ATTACHED[P1MIX],TOP,XCH,DEL) THEN              14411510
                   TACH(0,P1MIX,5);                                     14411520
              T:=VECTOR[6];                                             14411600
              IF CHAIN GTR 0 THEN                                       14411620
              BEGIN S:=[M[GETSPACE(5,0,0)+2]]&5[8:38:10];               14411640
                   DISKWAIT(-(S INX 0),5,CHAIN);                        14411660
                   ZIPPER(S[1],S[2],S[3]);                              14411680
                   FORGETSPACE(S);                                      14411700
              END;                                                      14411720
              IF CHAIN ! 0 THEN FORGETESPDISK(ABS(CHAIN));              14411740
              SIGNOFF(VECTOR,FILEBLOCK);%                               14412000
$INCLUDE 14412996, IF STATISTICS;                                       14412049
              STATARRAY:=[M[SPACE(15)]]&15[8:38:10];                    14412050
              MOVE(15,STATARRAY.[CF]-1,STATARRAY.[CF]);                 14412060
              MIXNUM:=MIXNUM-1;                                         14412100
              STATARRAY[0]:=MFIDSTAT[I];                                14412120
              STATARRAY[1]:=FIDSTAT[I];                                 14412150
              STATARRAY[2]:=BOJTSTAT[I];                                14412200
              STATARRAY[3]:=EOJTSTAT[I];                                14412250
              STATARRAY[4]:=PTSTAT[I];                                  14412300
              STATARRAY[5]:=IOTSTAT[I];                                 14412400
              STATARRAY[6]:=CORESTAT[I]&MSTART[3:33:15];                14412450
              STATARRAY[7]:=OLAYUSED[I];                                14412500
              STATARRAY[8]:=JOBTYPE[I];                                 14412650
              STATARRAY[10]:=CODEPBITS[I] &                             14412700
                             DATAPBITS[I][1:25:23];                     14412750
              STATARRAY[11]:=CODEOLAYS[I] &                             14412800
                             DATAOLAYS[I][1:25:23];                     14412820
              STATARRAY[12]:=MORECPBITS[I]&MOREDPBITS[I][1:25:23];      14412850
              STATARRAY[13]:=MIXNUM;                                    14412900
              PSUEDOLOGENTRY(STATARRAY.[CF]);                           14412990
              FORGETSPACE(UVROW[I]);                                    14412995
              JARROW[I]:=PRTROW[I]:=0;                                  14412998
              IF EOJMESS THEN%                                          14413000
                   BEGIN                                                14413500
                   BEGIN; STREAM(B~IF VECTOR[1] < 0 THEN 2 ELSE%        14414000
                        VECTOR[2].[8:10]!3,I,Q~Q~((NT1~(XCLOCK DIV 3600)14415000
                        )MOD 60+(NT1 DIV 60)|100),VECTOR);              14415100
                   BEGIN%                                               14416000
                        DS ~ LIT " "; DI ~ DI+7;%                       14417000
                        DS ~ LIT "/"; DI ~ DI+7;%                       14418000
                   DS~LIT"="; SI~LOC I; DS~2DEC;                        14419000
                   I~DI; DI~DI-2; DS~FILL; DI~I;                        14419500
                        CI ~ CI+B;%                                     14420000
                        GO TO E;%                                       14421000
                        GO TO OK;%                                      14422000
                        DS~7 LIT " DS-ED ";                             14423000
                        GO TO X;%                                       14424000
              OK:%                                                      14425000
                        DS~5 LIT " EOJ ";                               14426000
                        GO TO X;%                                       14427000
              E:        DS~11 LIT " SYNTX ERR ";                        14428000
              X:        DS~ 4 DEC; DS~LIT "~";                          14429000
                   END;                                                 14429100
$ INCLUDE 14429301, IF DATACOM AND RJE AND NOT INQUIRY;                 14429199
              IF T.[9:9] ! 0 THEN                                       14429200
              VECTOR:=NABS(VECTOR INX 0)&T[9:9:9];                      14429300
              SPOUT(VECTOR);%                                           14430000
                   END;                                                 14430500
         END ELSE FORGETSPACE(VECTOR.[33:15]);%                         14431000
$INCLUDE 14431111, IF DATACOM AND NOT INQUIRY;                          14431100
              USERSTA[P1MIX]:=0;                                        14431110
$ INCLUDE 14431331,IF AUXMEM;                                           14431299
              T := 0;                                                   14431300
              FOR Q:=1 STEP 1 UNTIL MIXMAX DO                           14431310
              IF JARROW[Q]!0 THEN T:=Q:=MIXMAX;                         14431320
              IF T=0 THEN AUXILIARYTABLEINITIALIZE;                     14431330
                   SELECTION;%                                          14432000
                                                                        14432500
              KILL([RCW]);%                                             14434000
    END L5COM;%                                                         14435000
PROCEDURE ZIPPER(W1,W2,USERSTA);VALUE W1,W2,USERSTA;                    14531000
REAL W1,W2,USERSTA;                                                     14531100
         BEGIN REAL T,I;                                                14532000
         T ~ GETSPACE(12,0,0)+4;%                                       14533000
         M[T-4].[9:6]~0;%                                               14534000
         IF (I~USERCODE[P1MIX])=ABS(NOT 0) THEN I~ 0;                   14534500
         STREAM(K~0,A~[W1],C~I,B~T);                                    14535000
         BEGIN  TALLY~12;K~TALLY;SI~LOC K;SI~SI+7;%                     14536000
         DS:=CHR;                                                       14537000
         DS:= 5 LIT "USER="; SI:=LOC C; SI:=SI+1; DS:= 7 CHR;           14537100
         DS:= 8 LIT ";EXECUTE";SI:=A; SI:=SI+1;                         14537200
         DS~LIT" ";DS~7CHR;SI~SI+1;DS~LIT"/";%                          14538000
         DS ~ 7 CHR; DS ~ 6 LIT "; END.";%                              14539000
         DS:=37 LIT " " ;         END;                                  14540000
         IF USERSTA!0 THEN                                              14540100
           BEGIN                                                        14540200
             I~30;T~T&USERSTA[9:15:9]                                   14540300
           END                                                          14540400
              ELSE                                                      14540500
         I~ IF P1MIX=0 OR USERCODE[P1MIX]=ABS(NOT 0) THEN 31 ELSE 26;   14541000
         INDEPENDENTRUNNER(P(.CONTROLCARD),T & I[2:42:6]);%             14541050
         END ZIPPER;%                                                   14542000
PROCEDURE LBMESS(FN,SN,A,B,C,D,E);                                      14542500
    VALUE FN,SN,A,B,C,D,E;                                              14542600
    REAL FN,SN,A,B,C,D,E; FORWARD;                                      14542700
PROCEDURE   ENTERUSERFILE(A,B,L);VALUE  A,B,L; REAL A,B,L;%             14543000
         BEGIN%                                                         14544000
         REAL  I,J,R,T,Z;%                                              14545000
         REAL H;                                                        14545100
         ARRAY  X[*];%                                                  14546000
         INTEGER S;                                                     14546100
$ INCLUDE 14546201, IF SHAREDISK;                                       14546199
         BOOLEAN DELETETOG;                                             14546200
         LABEL FOUND,WHY;%                                              14547000
         LABEL CHECK,DOWN,BOMBOUT;%                                     14548000
    REAL SUBROUTINE THERE;%                                             14549000
         BEGIN%                                                         14550000
         T ~ S;                                                         14551000
         DO BEGIN J:=T; DISKWAIT(-R,60,J);                              14552000
              FOR I~0 STEP 3 UNTIL 57 DO BEGIN                          14553000
              IF (X[I]EQV A)=NOT 0 THEN%                                14554000
              IF T~((X[I+1] EQV B)=NOT 0) THEN                          14555000
                   BEGIN                                                14555100
                       H~X[I+2];                                        14555200
                       GO DOWN;                                         14555300
                   END;                                                 14555400
                                                                        14556000
              IF(X[I]EQV@14)=NOT 0 THEN                                 14557000
              IF Z<0 THEN Z ~ J END END UNTIL(T~X[2].[FF])=0;           14557100
              IF Z<0 THEN Z ~ J;                                        14557200
         DOWN:   THERE~T;%                                              14558000
         END;%                                                          14559000
$ INCLUDE 14559101, IF SHAREDISK;                                       14559099
         DELETETOG:=A.[1:1];                                            14559100
         A:=ABS(A);                                                     14559200
         IF (A.[1:5]!0 OR B.[1:5]!0 OR A=@114 OR A=@14) THEN            14559300
         BEGIN                                                          14559400
             TERMINATE(P1MIX); TERMINALMESSAGE(75);                     14559500
             GO TO BOMBOUT;                                             14559600
         END;                                                           14559700
         LOCKDIRECTORY;                                                 14560000
         X:=[M[R:=GETSPACE(60,0,0)+2]]&60[8:38:10];                     14561000
         S:=SCRAMBLE(A,B);                                              14562000
 CHECK:  Z ~ -S;                                                        14563000
         IF P1MIX !0 THEN%                                              14564000
         BEGIN%                                                         14565000
                                                                        14566000
         IF THERE THEN%                                                 14567000
         BEGIN UNLOCKDIRECTORY;                                         14568000
          H:=-H;%                                                       14569100
           H~SECURITYCHECK(A,B,USERCODE[P1MIX],H)!7;                    14569200
WHY: STREAM(A~[A],B~JAR[P1MIX,*],C~P1MIX,UC~H,D~J~SPACE(10));           14570000
              BEGIN%                                                    14571000
              DS~13LIT"#DUP LIBRARY ";%                                 14572000
              UC(DS~15LIT"(ILLEGAL USER) ");                            14572100
              SI~A      ;SI~SI+1;DS~7CHR;%                              14573000
              DS~LIT"/" ;SI~SI+1;DS~7CHR;%                              14574000
              DS~LIT":";%                                               14575000
              SI~B      ;SI~SI+1;DS~7CHR;%                              14576000
              DS~LIT" " ;SI~SI+1;DS~7CHR;%                              14577000
                   DS~LIT"="; SI~LOC C; DS~2 DEC; DS~LIT"~";            14578000
              DI~DI-3; DS~FILL;                                         14578500
              END;%                                                     14579000
         SPOUT(J);%                                                     14580000
         REPLY[P1MIX] ~ -@41213;%                                       14581000
         COMPLEXSLEEP((TERMIX.[33:15]=P1MIX)OR(REPLY[P1MIX]>0));%       14582000
         IF TERMIX.[CF]=P1MIX THEN                                      14583000
         BEGIN FOR I~M[L+10]+10 STEP -1 UNTIL 11 DO                     14583100
               IF M[L+I]!0 THEN FORGETUSERDISK(M[L+I],-M[L+9]);         14583200
         GO TO BOMBOUT;                                                 14583300
         END;                                                           14583400
         IF NOT WHYSLEEP(@41213) THEN GO TO WHY;%                       14584000
         IF REPLY[P1MIX].[18:30]=11 THEN                                14585000
$ INCLUDE 14585151, IF DATACOM AND NOT INQUIRY;                         14585050
             IF((H=1 AND TUSTABYMIX[P1MIX]=0)                           14585100
               OR H=0 OR REPLY[P1MIX].[9:9]=0) THEN                     14585150
             BEGIN                                                      14585200
                   IF (NT1:=DIRECTORYSEARCH(A,B,7)) GTR 0 THEN          14585300
                        FORGETSPACE(NT1) ELSE                           14585400
                   IF NT1 LSS 0 THEN LBMESS(-A,B,"NOT ","REMOVED",      14585450
                        "(SYSTEM"," FILE)",0);                          14585460
               END                                                      14585500
                           ELSE%REMOTE USER WITH WRONG CODE             14585600
               BEGIN                                                    14585700
                 STREAM(W~USERCODE[P1MIX],A~ A ,B~ B ,D~H~GETSPACE(10,0,14585800
                        0)+2);                                          14585900
                     BEGIN                                              14586000
                     SI~LOC W;SI~SI+1;DS~LIT" ";                        14586100
                     DS~7CHR;DS~13LIT" INV USER OF ";SI~SI+1;           14586200
                     DS~7CHR;DS~LIT"/";SI~SI+1;                         14586300
                     DS~7CHR;DS~LIT"~";                                 14586400
                     END;                                               14587000
             SPOUT(H&REPLY[P1MIX][9:9:9]);                              14587100
             END;                                                       14587200
         REPLY[P1MIX]:=0;                                               14588000
         LOCKDIRECTORY;                                                 14588100
         GO TO CHECK;%                                                  14589000
         END END;%                                                      14590000
         I ~ J;                                                         14591000
         DO BEGIN J~ABS(Z);                                             14591500
              IF Z!I THEN DISKWAIT(-R,60,J);                            14592000
              FOR I~0 STEP 3 UNTIL 57 DO                                14593000
              IF (X[I] EQV @14)= NOT 0 THEN GO TO FOUND;                14594000
         END UNTIL (Z~X[2].[FF])=0;                                     14595000
         X[2].[FF]~  BYPASS ~ BYPASS-2;                                 14596000
                                                                        14597000
         IF BYPASS.[CF]{BYPASS.[FF] THEN PUNT([PUNTER[21]]);            14598000
         DISKWAIT(R,60,J);                                              14598100
         FOR I~0 STEP 1 UNTIL 59 DO X[I]~@14;                           14598200
         J ~ BYPASS.[CF];                                               14598300
         I ~ 0;                                                         14598400
    FOUND:%                                                             14599000
                   PBCOUNT~PBCOUNT+((((A EQV"PBD    ")=NOT 0) OR        14599900
                           ((A EQV"PUD    ")=NOT 0)) AND (B.[CF]=1));   14599910
         X[I]~A; X[I+1]~B; X[I+2].[CF]~NEXTSLOT;                        14600000
         DISKWAIT(R,60,J);                                              14600500
         J~(NEXTSLOT-DIRECTORYTOP-3)&0[44:44:4]+DIRECTORYTOP+19;        14601000
         I~ (NEXTSLOT-J)|2+30; S ~ NEXTSLOT;                            14601500
         DISKWAIT(-R,30,J);                                             14602000
         Z ~ (NEXTSLOT~X[I+1])=0;                                       14602500
         X[I]~A; X[I+1]~B;                                              14603000
         IF Z THEN                % GOING TO USE EOF RECORD             14603100
         IF I=0 THEN              % WRITE NEW EOF RECORD BEFORE         14603110
         BEGIN P(X[28],X[29]);    % DESTROYING CURRENT ONE              14603200
              X[28] ~ @114;       % SAVE NAME, REPLACE WITH "END" FLAG. 14603300
              X[29]:=0;                                                 14603310
              NEXTSLOT:=S+30;                                           14603320
              BYPASS.[FF] ~ J+16;                                       14603330
              DISKWAIT(R,30,J+16);                                      14603400
              P([X[29]],~,[X[28]],~);  % RESTORE CLOBBERED NAME         14603600
              IF J+16}BYPASS.[CF] THEN PUNT([PUNTER[21]]);              14603700
         END ELSE                                                       14603800
         BEGIN X[I-2]:=@114; X[I-1]:=0; NEXTSLOT:=S-1 END;              14604000
         DISKWAIT(L+1,30,S);                                            14608000
         DISKWAIT(R,30,J);                                              14609000
$ INCLUDE 14612001,IF SHAREDISK ;                                       14610000
         IF NOT DELETETOG THEN                                          14610100
         FOR I:=M[L+10]+10 STEP -1 UNTIL 11 DO IF M[L+I]!0  % SHAREDISK 14611000
              THEN SCRATCHDIRECTORYDELETE(M[L+I],M[L+9]) ;% SHAREDISK   14612000
         UNLOCKDIRECTORY;                                               14618000
         DIRECTORYFREE := 2|S+1;                                        14619000
    BOMBOUT:%                                                           14620000
         FORGETSPACE(R);                                                14621000
         END  ENTERUSERFILE ;%                                          14622000
PROCEDURE COM11; COMMENT ALGOL I/O COMMUNICATE;%                        14623000
BEGIN REAL CODE=-4,TANK=-5,ROW=-6;%                                     14624000
         REAL MID=-8,FID=-7;                                            14624050
          REAL STA=-6, RESULT=-7, B, T, F, S, TIMEOUT=-7;               14624100
          NAME PHYL=-5, A;                                              14624200
$INCLUDE 14624601, IF DATACOM AND NOT INQUIRY;                          14624299
    REAL SUBROUTINE TIMER;                                              14624300
         TIMER:=(CLOCK+P(RTR))}TIMEOUT OR TERMIX.[33:15]=P1MIX;         14624400
    REAL SUBROUTINE STATIONFINDER;                                      14624500
BEGIN T~4; TACH(0,P1MIX,T); STATIONFINDER~T END;                        14624600
      ARRAY HEADER=-5[*];%                                              14625000
      ARRAY FINAL=-6[*];%                                               14626000
      LABEL OPEN,PARITY,EOF,EOT,DISKSPACE,DISKLOCK;%                    14627000
          LABEL GRABIT,SEEKDC,READC,GIN,SLEAP,READSOUGHT,DCBUFRLS;      14627100
         LABEL DCWRITER,FINDBUF;                                        14627200
    LABEL COBOLDCWR,ECH,WHILOOP;                                        14627300
     LABEL ARGH, PURGELOCK;                                             14627400
      LABEL CLOSE,RDATA,SELERR,SPACE,REFILL;%                           14628000
    LABEL READSOUGHT2;                                                  14628100
      LABEL READLABEL,NG,DOUNTOIT;                                      14629000
      LABEL IOREQ,ROTATE;%                                              14630000
          SWITCH FUNCTION~OPEN,PARITY,EOF,EOT,DISKSPACE,SEEKDC,CLOSE,   14631000
           RDATA,SELERR,SPACE,REFILL,READLABEL,IOREQ,ROTATE,READC,      14632000
              READSOUGHT,DCBUFRLS, DCWRITER, FINDBUF,COBOLDCWR,         14632100
          PURGELOCK                                                     14632200
              ;                                                         14632900
      REAL INFO,LOC,USASI;                                              14633000
      REAL I;%                                                          14634000
       LABEL MESSAGE, BACK;                                             14635000
      ARRAY FPB[*],FIB[*];%                                             14636000
      REAL  TANG=TANK;                                                  14636100
      GO TO FUNCTION[CODE];%                                            14637000
 $ VOID                                                                 14638000
PARITY:     INFO~" PAR"; GO TO MESSAGE;%                                14639000
EOF:        INFO~" EOF"; GO TO MESSAGE;%                                14640000
EOT:        INFO~" EOT";%                                               14641000
MESSAGE:    FPB~PRT[P1MIX,3]; FIB~M[P(.TANK,LOD).[33:15]-3];%           14642000
            IF FIB[5].[1:1] THEN INFO:= -" INV" OR M;                   14642100
            STREAM(X~INFO,Z~0,F~ IF TANG=0 THEN 0 ELSE                  14643000
                   [FPB[FIB[4].[13:11]]],                               14643100
                   Q~TANG!0,                                            14643200
                   J~JARROW[P1MIX],%                                    14644000
                   D~(CODE~GETSPACE(10,2,0)+2));%                       14645000
                   BEGIN DS ~ LIT "-"; SI~LOC X; SI~SI+5; DS~3 CHR;%    14646000
                        SI~LOC X; IF SC=0 THEN DS~10 LIT " NO LABEL "%  14647000
                                          ELSE IF SC="8" THEN DS~11 LIT 14647100
                                          "WRITE TU 0 "                 14647200
                                     ELSE IF SC=@30 THEN DS:=10 LIT     14647300
                                          "ALID USER "                  14647400
                                     ELSE IF SC = @20 THEN DS:=10 LIT   14647500
                                          " WRT/SEEK "                  14647600
                                          ELSE DS~10 LIT "ECT ERROR ";% 14648000
                        Q(X~DI; SI~F; DI~LOC Z;                         14649000
                        IF 8 SC!DC THEN BEGIN SI~F; SI~SI+1; DI~X;%     14650000
                                              DS~7 CHR; DS~LIT" "; X~DI;14651000
                                       END;%                            14652000
                        DI~X; SI~SI+1; DS~ 7 CHR );                     14653000
                        DS~2 LIT ":~";%                                 14654000
                   END;%                                                14655000
                                                                        14656000
                                                                        14657000
            TERMINATE(P1MIX); TERMINALMESSAGE((-CODE));%                14658000
DISKSPACE:OPEN:CLOSE: GO TO INITIATE;%                                  14659000
$OMIT    14660526, IF DATACOM AND NOT INQUIRY;                          14660499
 SEEKDC:READC:READSOUGHT:DCBUFRLS:DCWRITER:FINDBUF:COBOLDCWR:           14660500
              GO INITIATE;                                              14660525
$INCLUDE 14670599, IF DATACOM AND NOT INQUIRY;                          14660999
 READC:       B~ STA.[1:1];                                % READ LOCK  14661000
              IF TIMEOUT}0 THEN%                                        14661050
              TIMEOUT ~ TIMEOUT + CLOCK + P(RTR);                       14661100
              M[PHYL[0]] ~ 0;                              % OLD STATUS 14661200
              IF STA = 0 THEN                              %BLIND READ  14661300
              BEGIN WHILE(STA~STATIONFINDER)=0 AND NOT TIMER DO         14661400
                   BEGIN T~RRNCOUNT;                                    14661500
                        COMPLEXSNOOZE(0,TIMER OR RRNCOUNT!T);           14661600
                   END;                                                 14661700
                   IF STA ! 0 THEN GO GRABIT ELSE GO TO NG;             14661800
              END BLIND READ;                                           14661900
 GIN:         IF(STA~GET(STA)).[38:5]=0 OR STA.[38:5]=P1MIX THEN        14662000
              BEGIN                                                     14662100
                   IF STA.[43:1] OR                        % SOUGHT     14662125
                  ( NSLATE=LSLATE AND ( %MAYBE IR ON DCWRITE IN-PROCESS 14662135
                   (T ~ (STA.[22:9] AND @717)) = @001 OR   % NOT RDY    14662150
                   T = @200 OR                             % IDLE AB    14662160
                   T = @210 OR T=@004 ) % WRTRDY/AB OR BUSY(BOF)        14662175
                  )THEN                                                 14662185
 NG:               BEGIN RESULT~0; GO BACK END;                         14662200
                   IF STA.[22:1] THEN                      %    STA BUSY14662250
 SLEAP:            BEGIN                                                14662300
                        IF TIMEOUT<0 THEN GO GRABIT;%                   14662310
                        IF TIMER THEN GO TO NG;                         14662350
                        COMPLEXSNOOZE(0,STATION[STA.[14:4],STA.[9:4]]   14662400
                        !STA OR TIMER);                                 14662450
                        GO GIN                                          14662500
                   END;                                                 14662600
                   IF STA.[24:1] THEN                      % READ READY 14662700
                   IF (STA.[23:8] AND @317) =@300 THEN     % RR AB      14662800
                        GO TO NG ELSE                                   14662900
 GRABIT:           BEGIN     % GO AHEAD AND READ                        14663000
                        STATION[STA.[14:4],STA.[9:4]] ~ (*P(DUP))       14663100
                             &0[26:26:1]&1[22:47:1]&P1MIX[38:43:5];     14663200
                        IOREQUEST(PHYL[0],NFLAG(1 INX PHYL[0] )         14663250
                                  &STA[9:9:9]&P(DUP)[13:21:1],          14663300
                                  M[PHYL[0] INX NOT 1]);                14663350
                        PHYL[0]~1 INX PHYL[0]&0[25:25:8]AND NOT IOMASK; 14663400
                        SLEEP(PHYL,IOMASK);                             14663500
                        RESULT ~ 2- PHYL[0].[2:1];                      14663600
 ARGH:                  IF NOT(M[PHYL[0]].[25:1] OR B) THEN             14663700
                             SET(GET(STA) AND NOT @1740);               14663800
                        GO BACK                                         14663900
                   END ELSE GO TO SLEAP                                 14663950
              END ELSE GO TO SLEAP;                                     14664000
 READSOUGHT:  TIMEOUT~TIMEOUT+CLOCK+P(RTR);                             14665100
                                                                        14665150
 READSOUGHT2: IF ((T ~ NFLAG(PHYL [0])) AND IOMASK) ! 0 THEN            14665200
                   BEGIN                                                14665300
                   RESULT ~ (2-T.[2:1]);                                14665400
                   GO BACK;                                             14665450
                   END;                                                 14665500
              IF T.[20:1] THEN                                          14665502
                   BEGIN                                                14665503
                   IF TIMER THEN                                        14665504
                        BEGIN                                           14665508
                        RESULT ~ 0; GO BACK;                            14665510
                        END;                                            14665600
                   COMPLEXSLEEP(TIMER OR (PHYL[0].[19:1]));             14665700
                   GO TO READSOUGHT2;                                   14665720
                   END;                                                 14665730
              SLEEP([PHYL[0]],IOMASK);                                  14665740
              GO TO READSOUGHT2;                                        14665750
 BACK:        M[M[PHYL INX NOT 2] INX 16] ~                             14665800
                   NFLAG(PHYL[0] ~ (PHYL[0] OR M) & 3[19:46:2]);        14665810
              GO TO INITIATE;                                           14665820
 SEEKDC: SEEKACTION(STA,P1MIX,1,PHYL);                                  14665900
                                                                        14667005
                   GO INITIATE;                                         14667900
 DCWRITER:    TIMEOUT~TIMEOUT+CLOCK+P(RTR);% SEE WHAT YOU HAVE DONE     14668000
WHILOOP:      IF (S~STA AND @7570000000000)=0 THEN                      14668100
              BEGIN INFO~"DC " OR M; GO TO MESSAGE END;                 14668200
              FIB:=M[P(.TANK,LOD) INX NOT 2];                           14668210
              IF FIB[14] NEQ 0 THEN  %CANT WRITE A SOUGHT FILE          14668220
              BEGIN INFO:=-" INV"; GO TO MESSAGE; END;                  14668230
              IF (S~ GET(STA)).[38:5]!P1MIX THEN                        14668240
              BEGIN                                                     14668260
              WHILE (S~ GET(S)).[38:5]!0 DO                             14668300
              BEGIN                                                     14668400
                   COMPLEXSLEEP(S!STATION[S.[14:4],S.[9:4]] OR TIMER);  14668500
                   IF TIMER THEN BEGIN RESULT~0; GO INITIATE END;       14668600
              END;                                                      14668700
                   TACH(STA,P1MIX,3);                                   14668710
              END;                                                      14668720
              RESULT~ S.[26:1]+1;                                       14668730
              STATION[S.[14:4],S.[9:4]].[38:5]~(P(DUP).[43:1]           14668750
                                              OR STA.[1:1]) | P1MIX;    14668760
              S ~ S AND @0007570000000000;                              14668765
              IF (GET(S) AND @0000000241000000) = 0 THEN                14668770
              IF P(ILL,S,LLL,DEL).[9:9] ! S.[9:9] THEN                  14668780
                   INDEPENDENTRUNNER(P(.DCWRITE),NABS(S));              14668790
              M[PHYL[0] INX NOT 2] ~ P(A ~ P(S                          14668800
                               OR @7777700000,ILL,XCH,LLL),             14668900
                             CCX,SSP)&S[9:9:9];                         14669000
              M[A[0].[FF]].[CF]~PHYL[0] INX NOT 2;                      14669100
              A[0].[FF]~M[A[0].[FF]];                                   14669150
                                                                        14669200
              STA~M[PHYL[NOT 2] INX 13].[10:9];                         14669300
              GO TO DCBUFRLS;                                           14669400
 COBOLDCWR:   TIMEOUT~TIMEOUT+CLOCK+P(RTR);                             14669500
              IF PHYL[1].[19:1] THEN GO TO WHILOOP;                     14669600
              COMPLEXSLEEP(PHYL[1].[19:1] OR TIMER);                    14669700
              IF TIMER THEN BEGIN RESULT~0; GO INITIATE END ELSE        14669800
                   GO TO WHILOOP;                                       14669900
::                                                                      14669910
 FINDBUF:     TIMEOUT~TIMEOUT+CLOCK+P(RTR);                             14670000
              IF PHYL[0].[19:1] THEN   ELSE                             14670100
              COMPLEXSLEEP((*PHYL).[19:1] OR TIMER);                    14670200
              WHILE(S~GET(STA)).[38:5]!P1MIX AND S.[38:5]!0             14670300
                        AND NOT TIMER DO                                14670350
                   COMPLEXSLEEP(S!GET(S) OR TIMER);                     14670400
              RESULT~1-TIMER;                                           14670500
              GO INITIATE;     ::                                       14670600
PURGELOCK: SAVEWORD:=SAVEWORD OR TWO(ROW);     ::                       14671000
 $ VOID                                                                 14672000
RDATA::       INFO~" RER"; GO TO MESSAGE;                               14673000
SELERR:     INFO~-" SEL"; GO TO MESSAGE;%                               14674000
SPACE:      FIB~M[P(.TANK,LOD).[33:15]-3]; LOC~FIB[15].[25:5];%         14675000
            BLASTQ(LOC);%                                               14676000
            FPB~[MEMORY[5]]&3[23:46:2]&ROW[22:1:1];%                    14677000
            ROW~ABS(ROW);%                                              14678000
            WHILE (ROW~ROW-1)}0 DO INFO~WAITIO(FPB,@40,LOC);%           14679000
                   GO TO INITIATE;     ::                               14680000
REFILL:     FIB~M[(TANK~P(.TANK,LOD).[33:15])-3];%                      14681000
            CODE~FIB[13].[10:9]-1;%                                     14682000
            LOC~FIB[19].[33:15]-FIB[16].[33:15];%                       14683000
            FPB~MEMORY[FIB[16] INX 0+ROW];%                             14684000
            INFO~FPB.[18:15];%                                          14685000
            FOR I~1 STEP 1 UNTIL CODE DO%                               14686000
            BEGIN IOREQUEST(FLAG(FIB[19]&(INFO+LOC)[33:33:15]),%        14687000
                            FIB[16]&INFO[33:33:15],FPB);%               14688000
                  MEMORY[TANK]~MEMORY[TANK]&0[2:2:1]&0[19:19:1]%        14689000
                                  &0[26:26:7]&INFO[33:33:15];%          14690000
                  STREAM(CODE,T~MEMORY[TANK],TANK);%                    14691000
                  BEGIN SI~TANK; SI~SI+8; DS~CODE WDS;%                 14692000
                        SI~LOC T; DS~WDS;%                              14693000
                  END;%                                                 14694000
                  INFO~MEMORY[INFO+ROW].[18:15];%                       14695000
            END;%                                                       14696000
                   GO TO INITIATE;     ::                               14697000
READLABEL:  FIB~M[(TANK~P(.TANK,LOD).[33:15])-3];%                      14698000
            LOC~FIB[15].[25:5];%                                        14699000
            BLASTQ(LOC);%                                               14700000
            P(WAITIO((FIB[5].[44:1]|(M[TANK-2].[8:10]-1) INX M[TANK-2]) 14701000
                      &M[TANK][21:21:4],@37700000,LOC),DEL);            14702000
            STREAM(Y:=0:X:=0,X1:=0,X2:=0,Z:=M[TANK-2]);                 14702025
              BEGIN  DI:=LOC X; DS:=24 LIT "VOL1HDR1HDR2EOF1EOF2EOV1";  14702050
                     DI:=LOC X;                                         14702100
                     6(TALLY:=TALLY+1;                                  14702150
                     SI:=Z;                                             14702200
                     IF 4 SC=DC THEN                                    14702250
                     JUMP OUT TO A);                                    14702300
                     TALLY:=0;                                          14702350
              A:                                                        14702400
                     Y:=TALLY;                                          14702450
              END;                                                      14702500
            IF (USASI:=P)>0 THEN                                        14702550
            USASITAPE(M[TANK-2].[CF],USASI,3,LOC,FIB[5].[44:1]);        14702600
            P(WAITIO([M[5]]&3[23:46:2]&(NOT FIB[5])[22:44:1],           14703000
                     @37700000,LOC),DEL);                               14703100
                   GO TO INITIATE;     ::                               14704000
IOREQ:      FPB~MEMORY[(IF (INFO~NFLAG(MEMORY[P(TANK,DUP,[M],INX,PRL)]))14705000
                       .[22:1] THEN 2 ELSE NOT 1) INX INFO];%           14706000
      IOREQUEST(FINAL,INFO,FPB);%                                       14707000
      MEMORY[TANK]~MEMORY[TANK]&0[26:26:7]&0[19:47:1];%                 14708000
      GO TO INITIATE;%                                                  14709000
$INCLUDE 14709201, IF DATACOM AND NOT INQUIRY;                          14709099
DCBUFRLS::    M[PHYL[0] INX P(DUP).[19:1] INX NOT 0]~0;                 14709100
              PHYL[0]~PHYL[0] AND NOT (M OR IOMASK);                    14709200
::                                                                      14709300
ROTATE:     TANK~P(.TANK,LOD).[33:15];%                                 14710000
      STREAM(T~M[TANK],N~ROW-1,D~TANK);%                                14711000
      BEGIN SI~D; SI~SI+8; DS~N WDS; SI~LOC T; DS~WDS END;%             14712000
IF M[TANK].[3:5]=16 THEN                                                14712100
IF M[TANK].[24:1] THEN                                                  14712200
IF (I~P(M[TANK-3],14,COC))!0 THEN                                       14712300
    BEGIN                                                               14712350
    PHYL ~ TANK INX M;                                                  14712400
    FOR LOC ~ ROW-1 STEP -1 UNTIL 0 DO                                  14712450
         BEGIN                                                          14712500
         INFO ~ NFLAG(PHYL[LOC]);    %[19:2]=0  THEN I/O IN-PROCESS     14712510
         IF (B~M[INFO INX NOT(2+(INFO.[19:2]=0))])!0 THEN               14712550
              BEGIN                                                     14712600
$INCLUDE 14712701, IF DATACOM AND NOT INQUIRY;                          14712649
              IF GET(B).[24:1] THEN                                     14712650
                   DCREAD(B);                                           14712700
              IF (I~I-1) { 0 THEN                                       14712750
                   LOC ~ -1;                                            14712800
              END;                                                      14712850
         END;                                                           14712900
    END;                                                                14712950
      GO TO INITIATE;%                                                  14713000
DISKLOCK:                                                               14713100
END COM11;%                                                             14714000
$INCLUDE 14784001, IF DATACOM AND NOT INQUIRY;                          14715000
PROCEDURE NINETEENREADER(S); VALUE S; REAL S; FORWARD;                  14715500
PROCEDURE COM36; % COMMENT TYPE 19 IO INTERFACE                         14716000
    BEGIN                                                               14716500
    REAL WDS=-9,TANK=-8,TIMEOUT=-7,CHANSKIP=-6,IOD=-5,OUTPUT=-4,        14717000
         RESULT=-9, STA,T,HEAD,BUFF;                                    14717500
         ARRAY STNS=HEAD[*];      REAL T1;                              14718000
         BOOLEAN SUPRS;                                                 14718100
    LABEL EOF,OUTL,PAR,INL,R,GOTIT;                                     14718500
    DEFINE STACURR= STATION[STA.[14:4],STA.[9:4]]#,                     14719000
           STAS=STNS[T]#,                                               14719400
           TIMER=(((CLOCK+P(RTR))}TIMEOUT) OR ((TERMIX INX 0)=P1MIX))#; 14719500
    BOOLEAN SUBROUTINE FREE;                                            14720000
         BEGIN                                                          14720500
         IF (STA~ STATION[STA.[44:4],STA.[39:4]]).[38:5]!P1MIX THEN P(1)14721000
                   ELSE P(0);                                           14721500
         FREE~ P;                                                       14722000
         END;                                                           14722500
         SUPRS ~ WDS.[2:1];  WDS ~ ABS(WDS);                            14722600
    TIMEOUT~ TIMEOUT+CLOCK+P(RTR);                                      14723000
    TANK~ P(.TANK,LOD) INX 0;                                           14723200
    IOD~ P(.IOD,LOD) INX 0;                                             14723300
    STA~ M[TANK INX NOT 1];                                             14723500
    IF STA.[9:4]=0 THEN                                                 14724000
         BEGIN     % BLIND I/O, FIND STATION FOR HIM AND ASSIGN         14724500
         IF P(ATTACHED[P1MIX],TOP) THEN  % NO ATTACHED STATIONS         14725000
              BEGIN P(DEL); GO EOF END;                                 14725500
              STNS~ P;       T~ STNS.[8:10];                            14726000
         FOR T~(T-1) STEP -1 UNTIL 0 DO                                 14726500
              BEGIN                                                     14727000
              IF (STA~ STAS.[39:9])!0 THEN  IF FREE THEN GO GOTIT;      14727500
              IF (STA~ STAS.[30:9])!0 THEN  IF FREE THEN GO GOTIT;      14728000
              IF (STA~ STAS.[21:9])!0 THEN  IF FREE THEN GO GOTIT;      14728500
              IF (STA~ STAS.[12:9])!0 THEN  IF FREE THEN GO GOTIT;      14729000
              IF (STA~ STAS.[03:9])!0 THEN  IF FREE THEN GO GOTIT;      14729500
              END;                                                      14730000
         GO EOF;   %    NO ATTACHED STAS UN USED;                       14730500
GOTIT:                                                                  14731000
         IF (T~ STA.[38:5])!0 AND T!P1MIX THEN BEGIN                    14731500
              COMPLEXSLEEP(STACURR.[38:5]=0 OR TIMER);                  14732000
              IF TIMER THEN GO EOF; END;                                14732500
         M[TANK INX NOT 1]~ 1&STA[9:9:9];                               14733000
         STACURR~ P(DUP,LOD)&P1MIX[38:43:5]&1[37:47:1];                 14733500
         IF NINETEENNOTREADING AND STACURR.[24:1] THEN                  14734000
              BEGIN                                                     14734500
              NINETEENNOTREADING~ FALSE;                                14735000
              INDEPENDENTRUNNER(P(.NINETEENREADER),0);                  14735500
              END;                                                      14736000
         END                                                            14736500
    ELSE                % THERE WAS A STATION ADDRESS IN THE TANK       14737000
         IF NOT STA THEN     %WE HAVEN"T PROCESSED HIM BEFORE           14737500
         BEGIN                                                          14738000
         STA~ GET(STA);                                                 14738500
         TACH(STA,P1MIX,3);                                             14739000
         GO GOTIT;                                                      14739500
         END;                                                           14740000
    IF DC19Q>0 THEN                                                     14740100
         SLEEP([DC19Q],-0);                                             14740200
    IF (T~ P(DC19Q,0&STA[9:9:9],LLL,0,INX,.HEAD,STD)).[9:9]!STA.[9:9]   14740500
      THEN                                                              14740600
         BEGIN     %    QUEUE ENTRY NOT THERE YET;                      14741000
         DC19Q~ ABS(DC19Q);                                             14741100
         BUFF~ HEAD;                                                    14741500
         HEAD~ GETSPACE(5,5,0)+2;                                       14742000
         DC19Q~ NABS(DC19Q);                                            14742100
         M[T1~ HEAD+1]~T1&T1[CTF]&WDS[8:38:10];                         14742500
         M[HEAD+2]~ 0;                                                  14743000
         M[HEAD+3]~  M[HEAD+4]~                                         14743500
              M[M[TANK-3] INX 14];                                      14744000
         M[BUFF].[FF]~ HEAD;       %    LINK                            14744500
         M[T.[FF]].[CF]~ HEAD;                                          14745000
         M[HEAD]~ BUFF&T[FTF]&STA[9:9:9]&P1MIX[4:43:5];                 14745500
         M[HEAD-2].[9:6]~ 0;                                            14745510
         END                                                            14746000
    ELSE                                                                14746500
         IF NOT STA THEN                                                14747000
              BEGIN                                                     14747500
              M[HEAD+4]~ P(DUP,LOD)+ T1~ M[M[TANK-3] INX 14];           14748000
              M[HEAD+3]~ P(DUP,LOD)+T1;                                 14748500
              IF (T~M[HEAD+1]).[8:10]<WDS THEN                          14749000
                   M[HEAD+1]~ T&WDS[8:38:10];                           14749500
              END;                                                      14750000
    IF OUTPUT THEN                                                      14750500
         BEGIN                                                          14751000
OUTL:    IF M[HEAD+2] THEN GO PAR;  %  BREAK NOT YET RESET              14751500
         IF (T~ M[HEAD+3])>0 THEN   %  THERE IS A BUFFER LEFT           14752000
              BEGIN                                                     14752500
              M[HEAD+3]~ T-1;     % COUNT DOWN ONE BUFFER;              14753000
              IF (STA.[9:4]=STA.[4:4]) AND (STA.[14:4]=STA.[18:4]) THEN 14753100
                   CHANSKIP~ 0;                                         14753200
              IF SUPRS THEN WDS ~ 0;                                    14753210
              BUFF~ GETSPACE(WDS+(10+CHANSKIP.[CF]) DIV 8,5,0) INX 2;   14753500
              M[BUFF-2].[9:6]~ 0;                                       14754000
              STREAM(S~ IOD,LF~ CHANSKIP,CR~ CHANSKIP.[FF],             14754500
                        W~ (T1~ WDS|8) DIV 64, W1~ T1, D~ BUFF);        14755000
                   BEGIN                                                14755500
                   SI~ S;                                               14756000
                   W(2(32(IF SC!" " THEN IF SC="~" THEN                 14756500
                          JUMP OUT 3 TO E ELSE BEGIN DS~ CHR; D~ DI END 14757000
                          ELSE DS~ CHR)));                              14757500
                   W1(IF SC!" " THEN IF SC="~" THEN                     14758000
                          JUMP OUT ELSE BEGIN DS~ CHR; D~ DI END        14758500
                          ELSE DS~ CHR);                                14759000
                   E:   DI~ D;  CR(DS~ LIT "{");                        14759500
                        LF(DS~ LIT "!");                                14760000
                        DS~ LIT "~";                                    14760500
                   END;                                                 14761000
              T~ P(STATIONMESSAGEHOLDER,STA OR @7777700000,LLL,         14761500
                        0,INX,.HEAD,STD);                               14762000
              M[BUFF~ BUFF-1]~ STA & 2[1:45:3]&P1MIX[4:43:5]            14762500
                        &T[FTF]&HEAD[CTC];                              14763000
              M[T.[FF]].[CF]~ BUFF;                                     14763500
              M[HEAD].[FF]~ BUFF;                                       14764000
              IF SMWSTOPPED THEN                                        14764500
                   BEGIN                                                14765000
                   SMWSTOPPED~ FALSE;                                   14765500
                   INDEPENDENTRUNNER(P(.STATIONMESSAGEWRITER),0);       14766000
                   END;                                                 14766500
              RESULT~ 1;                                                14767000
              GO TO INITIATE;                                           14767500
              END                                                       14768000
         ELSE                                                           14768500
              BEGIN                                                     14769000
              COMPLEXSLEEP(M[HEAD+3]>0 OR TIMER);                       14769500
              IF TIMER THEN GO EOF;                                     14770000
              GO OUTL;                                                  14770500
              END;                                                      14771000
         END;                                                           14771500
R:  IF (T~ M[HEAD+2]).[46:1] THEN GO EOF;   %STATION NOT READY          14772000
    IF T THEN M[HEAD+2]~ 0;            %    TURN OFF BREAK              14772500
    IF (T~ M[HEAD+1]).[CF]!(HEAD+1) THEN    %QUEUE NOT EMPTY            14773000
         IF (T1~ M[T])<0 THEN               % INPUT COMPLETE            14773500
              BEGIN                                                     14774000
              IF T1.[3:1] THEN GO EOF;      %END MESSAGE RECEIVED       14774050
              IF T1.[8:10]>WDS THEN                                     14774100
                   BEGIN                                                14774200
                   IF NOT T1.[2:1] THEN                                 14774300
                        M[T INX 2]~ "TOOLN2";                           14774400
                   M[T].[2:16]~ WDS;                                    14774500
                   GO PAR;                                              14774600
                   END;                                                 14774700
              IF T1.[2:1] THEN BEGIN M[T].[2:1]~ 0; GO PAR END;         14775000
              M[HEAD+1].[CF]~ T1;                                       14775500
              M[T1].[FF]~ T1.[FF];                                      14775510
              IF (M[HEAD+3]~ P(DUP,LOD)+1)=1 THEN                       14776000
                   IF NINETEENNOTREADING AND STACURR.[24:1] THEN        14776100
                        BEGIN                                           14776150
                        NINETEENNOTREADING~ FALSE;                      14776200
                        INDEPENDENTRUNNER(P(.NINETEENREADER),0);        14776250
                        END;                                            14776300
              M[IOD-1]~ T1.[8:10];                                      14776350
              STREAM(S~1+T~T INX 1, W~ (T1~ T1.[8:10]) DIV 64,          14776500
                   W1~ T1, W2~(T1~ WDS-T1-1) DIV 64, W3~ T1,            14776600
                   T~ (T1+1)!0, D~ IOD);                                14776700
                   BEGIN                                                14777000
                   SI~ S;                                               14777500
                   W(DS ~ 63 WDS;  DS ~ WDS);                           14778000
                   DS~ W1 WDS; D~ DI;  SI~ D;                           14778500
                   T(DS~ 8 LIT " ";  DS~ W3 WDS;                        14778600
                      W2(DS~ 63 WDS;  DS~ WDS));                        14778700
                   END;                                                 14779000
              FORGETSPACE(T);                                           14779500
              RESULT~ 1;                                                14780000
              GO INITIATE;                                              14780500
              END;                                                      14781000
    COMPLEXSLEEP(T!M[HEAD+1] OR TIMER);                                 14781500
    IF TIMER THEN                                                       14781600
         BEGIN                                                          14781700
         BUFF~ GETSPACE(5,5,0)+1;                                       14781800
         M[HEAD+3]~ P(DUP,LOD)-1;                                       14781900
         T~ M[HEAD+1];                                                  14782000
         M[HEAD+1].[CF]~ BUFF;                                          14782100
         M[BUFF]~ NABS(T&(HEAD+1)[CTF]&1[2:32:16]);                     14782200
         M[BUFF+2]~ "TIME3";                                            14782300
         GO PAR;                                                        14782400
         END;                                                           14782500
    GO R;                                                               14782600
PAR:     RESULT~ 2;     GO  INITIATE;                                   14783000
EOF:     RESULT~ 0;     GO  INITIATE;                                   14783500
    END;                                                                14784000
$INCLUDE 14999999, IF INQUIRY AND NOT DATACOM;                          14799999
    PROCEDURE COM9;                   %FILL A[*] WITH INQUIRY;%         14800000
         BEGIN%                                                         14801000
              ARRAY A=-4[*];%                                           14802000
              REAL RCW=+0; REAL SIZ,N,T;%                               14803000
                                                                        14804000
                                                                        14805000
                                                                        14806000
                                                                        14807000
              COMPLEXSLEEP((TERMIX.[33:15]=P1MIX OR DCB[CURRINQ]<0));%  14808000
              IF TERMIX.[33:15] = P1MIX THEN GO TO INITIATE;%           14809000
              T ~ DCB[CURRINQ];%                                        14810000
              CURRINQ~CURRINQ+1 AND 15;%                                14811000
              IF NOT A.[2:1] THEN%                                      14812000
                     MAKEPRESENT(NFLAG(NOT 3 INX[RCW]));%               14813000
              A[0]~           T.[14:4]; SIZ~A.[8:10]-1;N~T.[FF];%       14814000
              MOVE(IF SIZ>N THEN N ELSE SIZ,T INX 0,[A[1]]);%           14815000
              ORR~ ORR OR TWO(A[0]+15)OR TWO(A[0]);%                    14816000
              DCB[CURRINQ+15 AND 15]~0;FORGETSPACE(T INX 0);%           14817000
         END COM9;%                                                     14818000
 PROCEDURE COM18;%                                                      14900000
    BEGIN%                                                              14901000
        REAL  TANK=-4,TU=-5; ARRAY FIB[*];%                             14902000
              REAL WD,AD,N,LINK,LOC;         WD~%                       14903000
              M[AD~P(.TANK,LOD,0,INX)] INX 0; FIB~M[AD-3];%             14904000
                                                                        14905000
                                                                        14906000
              IF(ORR AND TWO(TU))=0 THEN%                               14907000
                   BEGIN  LINK~ILL; DO LINK~LINK INX 0 UNTIL%           14908000
                          (LINK~P(LINK,3&TU[14:44:4],LLL,0,INX,.LOC,~)) 14909000
                          .[13:5]!TU;%                                  14910000
                          WD~WD-1;%                                     14911000
                          M[LINK.[FF]].[CF]~WD;%                        14912000
                          M[LOC].[FF]~WD;%                              14913000
                          M[WD] ~ LINK & TU[13:43:5] &LOC[CTC];%        14914000
                   END ELSE BEGIN%                                      14915000
                       ORR~ ORR AND NOT TWO(TU);%                       14916000
         IF (ORF AND TWO(TU)) ! 0 THEN                                  14917000
              BEGIN%                                                    14918000
                   ORF~ORF AND NOT TWO(TU);IF NOTIFYOP THEN%            14919000
                   BEGIN LINK~GETSPACE(2,0,0)+2;STREAM(TU,LINK);%       14920000
                        BEGIN SI~LOC  TU;DS~3 LIT"TU ";%                14921000
                             DS~2 DEC;DS~4 LIT" OK~"%                   14922000
                        END;SPOUT(LINK);%                               14923000
                   END%                                                 14924000
              END;%                                                     14925000
IOREQUEST(M[AD] OR @2000000000,NFLAG(M[AD]&0[8:8:16]&TU[28:43:5]&       14926000
      TU[13:43:5]),M[WD-2])END;M[AD].[2:1]~0;                           14927000
              M[AD].[19:1]~0;%                                          14928000
         IF(N~FIB[13].[10:9]-1)!0 THEN%                                 14929000
                   STREAM(N,C~MEMORY[AD],AD);%                          14930000
                         BEGIN SI~AD;SI~SI+8;DS~N WDS;%                 14931000
                               SI~ LOC C;DS~ WDS;%                      14932000
                         END;%                                          14933000
         WD~FIB[19].[33:15]-FIB[16].[33:15];                            14934000
            FIB[16].[33:15]~AD~M[P(DUP) INX NOT 1].[18:15];             14935000
           FIB[19].[33:15]~WD+AD;                                       14936000
                   GO TO INITIATE;%                                     14937000
    END;%                                                               14938000
                                                                        15006000
 PROCEDURE DISPLAY(X); VALUE X; REAL X;%                                15019000
         BEGIN REAL T,SPUT=SPOUT;;%                                     15020000
              STREAM(X:J~JARROW[P1MIX],P1MIX,%                          15021000
                   Y ~T~GETSPACE(25,0,0)+2);%                           15022000
                   BEGIN DS ~ LIT "#";%                                 15023000
                        2(SI ~ J; SI ~ SI+1; DS ~ 7 CHR; J ~ SI;%       15024000
                   L:        SI ~ SI-1;%                                15025000
                             IF SC = " " THEN%                          15026000
                                  BEGIN DI ~ DI-1; GO TO L END;%        15027000
                             DS ~ LIT "/";);%                           15028000
                        DI ~ DI-1; DS ~ LIT "=";%                       15029000
                   SI~LOC P1MIX; DS~2DEC; P1MIX~DI; DI~DI-2;            15030000
                   DS~FILL; DI~P1MIX; DS~2LIT": ";                      15030500
                        SI ~ X;%                                        15031000
                   H:   4(40(IF SC="~" THEN JUMP OUT 2 TO HH;           15032000
                        DS~CHR)); HH:                                   15033000
                        J ~ DI; DI ~ DI+8; SI ~ J;%                     15034000
                   S:   SI ~ SI-1; IF SC = " " THEN GO TO S;%           15035000
                        SI ~ SI+1; J ~ SI; DI ~ J; DS ~ LIT "~";%       15036000
                        X~ DI;                                          15037000
                   END;%                                                15038000
              X~ (((X~P) INX 0) -T)|8+X.[30:3]-1;                       15039000
              P(MKS,X,T,SPUT);%                                         15040000
         END;%                                                          15041000
                                                                        15059000
PROCEDURE  COM13 ;%                                                     15060000
         BEGIN%                                                         15061000
%   COBOL  IO  INTERFACE COMMUNICATE%                                   15062000
         REAL  CODE = -4, REEL = -6 ;%                                  15063000
         NAME  FLOC = -5 ;%                                             15064000
         ARRAY FIB [*];%                                                15065000
         REAL T, COB68;                                                 15066000
         LABEL L0,L1,L2,L3,L4,L5,L6,L7,L8,L9,L10,L11,L12,L13,L14,L15,%  15067000
                   L16,L17;%                                            15068000
         SWITCH  TYPE ~ L0,L1,L2,L3,L4,L5,L6,L7,L8,L9,L10,L11,%         15069000
                        L12,L13,L14,L15,L16,L17;%                       15070000
         DEFINE INOUT=FIB[13].[27:1]#,DIREC=FIB[13].[25:1]#,%           15071000
              SORTFILE=FIB[4].[7:1]#,LABELSOMITTED=FIB[4].[2:1]#;%      15072000
         COB68 ~ (FIB ~ *(FLOC)).[8:10] = 22;                           15073000
         GO TO TYPE[CODE];%                                             15074000
    L0:%                                                                15075000
         DO UNTIL FALSE;%                                               15076000
    L1:%                                                                15077000
    L2:%                                                                15078000
    L3:%                                                                15079000
         INOUT~CODE!3;  DIREC~ CODE=2;%                                 15080000
         IF NOT COB68 THEN                                              15080900
         IF FIB[5].[46:2]=3 THEN BEGIN%                                 15081000
         FIB[18].[18:15]~FIB[18].[3:15];%                               15082000
         IF CODE=3 THEN                                                 15082100
         FIB[18].[3:15]~FIB[18].[33:15]+FIB[18].[3:15]; END;%           15083000
         NT1:=FLOC INX 3;                                               15084000
         P(0,STF,PRT[P1MIX,8],STS);                                     15085000
         FILEOPEN(1,NT1);                                               15086000
 $ VOID                                                                 15087000
    L16:%                                                               15088000
    L17:%                                                               15089000
         DO UNTIL FALSE;%                                               15090000
    L5:  L6:L7:L8:L9:L10:L11:L12:L13:L14:L15:%                          15091000
         DO UNTIL FALSE;%                                               15092000
    L4:%                                                                15093000
         CODE ~ IF (CODE~ABS(REEL))=0 THEN 6 ELSE%                      15094000
                   (IF CODE=1 THEN 7 ELSE%                              15095000
              (IF CODE=2 THEN 10 ELSE%                                  15096000
              (IF CODE=4 THEN @22 ELSE                         %KRUNCH  15097000
              (IF CODE=64 THEN @52 ELSE 0))));                 %KRUNCH  15097500
         IF (T~FIB[4].[8:4])!2 AND T!4 AND T!8 THEN CODE~0;%            15098000
         IF T=4 AND  CODE=0 THEN CODE~10  ;%                            15099000
         FILECLOSE(( FLOC INX 3 )& CODE[18:33:15]);%                    15100000
         IF CODE=0 OR CODE=10 OR CODE=@22 THEN FIB[5].[42:1]~1          15101000
              ELSE FIB[5].[40:2]~(CODE=7)|2+1;%                         15102000
         IF NOT COB68 THEN                                              15102900
         IF FIB[5].[46:2]=3 THEN BEGIN%                                 15103000
         FIB[18].[3:15]~FIB[18].[18:15];FIB[18].[18:15]~0 END;%         15104000
         GO TO INITIATE;%                                               15105000
         END  COM13;%                                                   15106000
 BOOLEAN PROCEDURE CONQUER(C,N,L,S,G);                                  15168000
 VALUE C,N,L,S,G;                                                       15168100
         REAL C,N,L; ARRAY S[*];%                                       15169000
 INTEGER G;                                                             15169100
         BEGIN ARRAY B=C[*];%                                           15170000
              REAL T,I=T;%                                              15171000
              LABEL X;%                                                 15172000
                   IF G THEN                                            15172500
              IF N|L > 512 THEN GO TO X;%                               15173000
              IF (T ~ GETSPACE(N|L,2,3)) = 0 THEN%                      15174000
                   BEGIN IF NOT G THEN P(0,RTN);                        15175000
              X:   IF NOT N THEN                                        15175900
                             BEGIN G~CONQUER(C,N~N DIV 2,L,N INX S,1);  15176000
                                   G~CONQUER(S INX N,N,L,S,1);          15177000
                                   P(1,RTN);                            15177800
                                  P(XIT);%                              15178000
                             END;%                                      15179000
                        T ~ GETSPACE(L,2,1);%                           15180000
                   END;%                                                15181000
              B ~ [M[T+2]]&L[8:38:10]&C[18:33:15];%                     15182000
              N ~ N-1;%                                                 15183000
              FOR I ~ 0 STEP 1 UNTIL N DO%                              15184000
                   BEGIN S[I] ~ B;%                                     15185000
                        B ~ L INX B;%                                   15186000
                   END;%                                                15187000
              CONQUER~1;                                                15187500
         END;%                                                          15188000
 BOOLEAN PROCEDURE PRTGAMES(BUFF,MIX); VALUE BUFF,MIX; REAL BUFF,MIX;   15400000
    COMMENT PRTGAMES IS THE BUSINESS END OF "IN" OR "OT" MESSAGES;      15401000
    BEGIN REAL NX,INDEX,DATA;                                           15402000
         LABEL ECH, X;;;                                                15403000
         STREAM(BUFF,F~BUFF<0,D~[DATA],I~[INDEX]);                      15404000
         BEGIN SI~BUFF;                                                 15405000
         L:   IF SC=" " THEN BEGIN SI~SI+1; GO L END;                   15406000
              4(IF SC!" " THEN IF SC!"~" THEN IF SC!"=" THEN            15407000
                BEGIN TALLY~TALLY+1; SI~SI+1 END);                      15408000
              I~TALLY; DI~DI+8; DI~DI-I; SI~SI-I; DS~I CHR;             15409000
              F(                                                        15410000
         M:     IF SC=" " THEN BEGIN SI~SI+1; GO M END;                 15411000
                IF SC!"=" THEN BEGIN E:DI~DI-1;DS~LIT""";JUMP OUT END;  15412000
                SI~SI+1;                                                15413000
         N:     IF SC=" " THEN BEGIN SI~SI+1; GO N END; TALLY~0;        15414000
                8(IF SC}"0" THEN BEGIN TALLY~TALLY+1; SI~SI+1 END       15415000
                  ELSE JUMP OUT); IF SC!" " THEN IF SC!"~" THEN GO E;   15416000
                I~TALLY; DI~D; SI~SI-I; DS~I OCT);                      15417000
         END; IF (INDEX AND NOT @1070707)!0 THEN GO ECH;                15418000
         IF JARROW[MIX]=0 THEN GO ECH;                                  15419000
         IF (NX~INDEX.[45:3]&INDEX[42:39:3]&INDEX[39:33:3]&INDEX[38:29:115420000
                                          ]){20 THEN GO ECH;            15421000
         IF (PRTROW[MIX] INX NX)>M[PRT[MIX,10].MOM-3].[CF] THEN GO ECH; 15422000
         IF BUFF<0 THEN                                                 15423000
              IF P(PRT[MIX,NX],TOP,XCH,DEL) THEN PRT[MIX,NX]~DATA ELSE  15424000
                   GO ECH ELSE                                          15425000
              BEGIN; STREAM(J~JARROW[MIX],MIX,INDEX,R~[PRT[MIX,NX]],    15426000
                        D~ DATA~ BUFF.[15:15]-1);                       15427000
                   BEGIN SI~J;  SI~SI+1;  DS~LIT" ";%               %WF 15428000
                        DS~7 CHR;  DS~LIT"/";  SI~SI+1;%            %WF 15428100
                        DS~7CHR; DS~LIT"="; SI~LOC MIX; DS~2DEC;        15429000
                        MIX~DI; DI~DI-2; DS~FILL; DI~MIX;               15429500
                        DS~3LIT":R+"; SI~SI+4; DS~4 CHR; D~DI; DI~DI-4; 15430000
                        DS~3 FILL; DI~D; DS~LIT"="; SI~R;               15431000
                        IF SB THEN % DESCRIPTOR:TYPE OCTAL              15432000
                          16(DS~3 RESET; 3(IF SB THEN DS~SET ELSE DS~   15433000
                                           RESET; SKIP SB)) ELSE        15434000
                          DS~8 DEC;                                     15435000
                        DS~LIT"~"; DI~D; DI~DI+1; DS~7 FILL;            15436000
                   END; SPOUT(DATA INX M[BUFF.[15:15]-2]);              15437000
              END; GO X;                                                15438000
    ECH: PRTGAMES~1;                                                    15439000
    X:   END;                                                           15440000
$INCLUDE 15474001, IF DCLOG AND DATACOM AND NOT INQUIRY;                15440999
PROCEDURE CHEKREMOTELOG(BUFF); VALUE BUFF; REAL BUFF;                   15442200
    BEGIN                                                               15442400
    REAL A,MSG,HEADER,I = MSG;                                          15443000
    ARRAY DDD[*];                                                       15444000
    IF SPOEDNULLOG THEN                                                 15445000
         BEGIN                                                          15446000
         IF ( I~DIRECTORYSEARCH("REMOTE ","LOG    ",5))=0 THEN          15447000
              BEGIN                                                     15448000
              HEADER~GETSPACE(30,0,0)+2;                                15449000
              STREAM(D~DATE,HEADER);                                    15450000
                   BEGIN                                                15451000
                   SI~LOC D;DI~LOC D;DS~8 OCT;DI~HEADER;                15451500
                   DS~8 LIT "00Q0<061"; %RECD & BLOCK INFO              15453000
                   8(DS~2 LIT"0");                                      15454000
                   DS~2 LIT"+2";SI~SI-3;DS~3 CHR;                       15455000
                   SI~SI-3;DS~3 CHR;DS~8 LIT"04000000";                 15456000
                   DS ~ 21 LIT"0"; DS ~ 3 LIT "1( ";                    15457000
                   DS ~ 5 LIT "00000"; DS ~ 3 LIT "0}Q";                15458000
                   3(DS ~ 2 LIT "00"); DS ~ 2 LIT "01";                 15459000
                   40(DS~ 4 LIT "0000");                                15460000
                   END;                                                 15461000
              ENTERUSERFILE("REMOTE ","LOG    ",HEADER.[33:15]-1);      15462000
              FORGETSPACE(HEADER);                                      15463000
              END                                                       15464000
         ELSE FORGETSPACE(I);                                           15465000
         INITIALIZEDCFILES(A~GETSPACE(30,0,0)+2,DDD~[M[A]]              15466000
           &30[8:38:10]);                                               15467000
         STREAM(BUFF);                                                  15468000
              DS~ 20 LIT"#REMOTE LOG ON DISK~";                         15469000
         SPOUT(BUFF INX M[BUFF-1]);                                     15470000
         FORGETSPACE(A);                                                15471000
         SPOEDNULLOG ~ FALSE;                                           15472000
         END                                                            15473000
    ELSE BEGIN                                                          15473100
        ;STREAM(BUFF);                                                  15473200
              DS ~ 20 LIT "#REMOTE LOG PRESENT~";                       15473300
         SPOUT(BUFF INX M[BUFF-1]);                                     15473400
         END;                                                           15473500
    END CHEKREMOTELOG;                                                  15474000
PROCEDURE WHATMCP(BUFF); VALUE BUFF; REAL BUFF; %FORMATS WM MESSAGE     15500000
    BEGIN REAL X;                                                       15501000
    DISKWAIT(-(X~SPACE(30)),-30,0);                                     15501100
    STREAM(N~X+10+5|SYSNO,A~M[3],BUFF);                                 15501500
    BEGIN SI~N;SI~SI+1;DS~LIT" ";DS~7 CHR;DS~LIT"/";SI~SI+1;DS~7CHR;    15502000
    DS~4 LIT"XIII";     SI:= LOC A ;                                    15503000
         IF SC GEQ " " THEN;                                            15503100
         8(IF TOGGLE THEN IF SC="0" THEN SI:=SI+1 ELSE DS:=CHR ELSE     15503200
           DS:=CHR);                                                    15503300
         DS ~ 10 LIT " INCLUDES ";%                                     15504000
$INCLUDE 15506001, IF DATACOM AND NOT INQUIRY;                          15505000
         DS ~ 8 LIT"DATACOM,";                                          15506000
$INCLUDE 15506101, IF DCSPO AND DATACOM AND NOT INQUIRY;                15506099
         DS ~ 6 LIT "DCSPO,";                                           15506100
$INCLUDE 15506201, IF DCLOG AND DATACOM AND NOT INQUIRY;                15506199
         DS ~ 6 LIT "DCLOG,";                                           15506200
$INCLUDE 15508001, IF INQUIRY AND NOT DATACOM;                          15507000
         DS ~ 8 LIT "INQUIRY,";                                         15508000
$INCLUDE 15510001, IF DFX;                                              15509000
         DS ~ 4 LIT "DFX,";                                             15510000
$INCLUDE 15511001, IF DEBUGGING OR CHECKLINK;                           15510999
         DS~ 10 LIT "CHECKLINK,";                                       15511000
$ INCLUDE 15512001, IF DISKLOG;                                         15511999
         DS~8 LIT"DISKLOG,";                                            15512000
$INCLUDE 15514001, IF DUMP AND NOT DEBUGGING;                           15513000
         DS ~ 5 LIT "DUMP,";                                            15514000
$INCLUDE 15516001, IF DEBUGGING;                                        15515000
         DS ~ 10 LIT "DEBUGGING,";                                      15516000
$INCLUDE 15518001, IF BREAKOUT;                                         15517000
         DS ~ 9 LIT "BREAKOUT,";                                        15518000
$ INCLUDE 15519001, IF SHAREDISK;                                       15518999
         DS~10 LIT"SHAREDISK,";                                         15519000
$ INCLUDE 15520001,IF SAVERESULTS;                                      15519999
         DS~12 LIT "SAVERESULTS,";                                      15520000
$INCLUDE 15520101  , IF STATISTICS;                                     15520099
         DS~11LIT"STATISTICS,";                                         15520100
$ INCLUDE 15520201,IF AUXMEM;                                           15520199
         DS~7 LIT "AUXMEM,";                                            15520200
$ INCLUDE 15520301, IF B6500LOAD;                                       15520299
         DS:=10 LIT "B6500LOAD,";                                       15520300
$ INCLUDE 15520401, IF RJE AND DATACOM AND NOT INQUIRY;                 15520399
         DS:=4 LIT "RJE,";                                              15520400
         DI ~ DI-1;                                                     15523000
         A~ DI;                                                         15524000
         SI~ A;    DI~ A;                                               15525000
         IF SC!"," THEN                                                 15526000
              DI~ DI- 9;                                                15527000
         DS~ LIT "~"                                                    15528000
         END;                                                           15532000
    FORGETSPACE(X);                                                     15532100
    END WHATMCP;                                                        15533000
PROCEDURE WHATINTRNSIC(BUFF); VALUE BUFF; REAL BUFF;                    15534000
    BEGIN                                                               15535000
    REAL SIZE, LOC, DISKADDR,WI;                                        15536000
    LABEL EXIT;                                                         15537000
    IF INTSIZE=0 THEN                                                   15539000
         BEGIN     ;                                                    15540000
         STREAM(BUFF);  DS~14 LIT "NO INTRINSICS~";                     15541000
         GO EXIT;                                                       15542000
         END;                                                           15543000
    COMMENT MAKE WI INTRINSIC PRESENT;                                  15544000
    SIZE~ P(INTRNSC[INTRNSC[0]],DUP) INX 0;                             15545000
    DISKADDR~ P.[6:27];                                                 15546000
    LOC~ GETSPACE(SIZE,0,0)+2;                                          15547000
    DISKWAIT(-LOC,SIZE,DISKADDR);                                       15548000
    COMMENT BUILD A PROGRAM DESCRIPTOR POINTING TO SEGMENT;             15549000
    WI~ NABS([M[LOC]]&@5[3:45:3]);                                      15550000
    P(MKS,BUFF,WI);                                                     15551000
    FORGETSPACE(LOC);                                                   15552000
    DISKWAIT(-(SIZE~SPACE(30)),-30,0);                                  15552100
    STREAM(X~SIZE+13+5|SYSNO,Y~0,BUFF);                                 15552200
    BEGIN                                                               15552300
    SI~BUFF;SI~SI+15;60(IF SC!"~" THEN SI~SI+1 ELSE JUMP OUT);          15552400
    Y~SI;SI~X;DI~Y;DS~3 LIT"  (";SI~SI+1;DS~7 CHR;DS~LIT"/";            15552500
    SI~SI+1;DS~7 CHR;DS~ 2 LIT ")~";                                    15552600
    END;                                                                15552700
    FORGETSPACE(SIZE);                                                  15552800
EXIT:                                                                   15554000
    END WHATINTRNSIC;                                                   15555000
PROCEDURE COREPRINT(Q); VALUE Q; REAL Q;                                15600000
    COMMENT : THIS PROCEDURE COMPUTES AND TYPES THE AMOUNTS OF SAVE     15600050
              AND OVERLAYABLE CORE IN USE FOR A GIVEN MIX OR ALL MIXES; 15600100
    COMMENT : Q.[1:1] = 1 IF ALL MIXES DESIRED                          15600120
              Q.[CF] = MIX, Q.[9:9] = REMOTE TU/BU;                     15600140
    BEGIN REAL LINK,SIZE,D;%                                            15600300
         ARRAY C[*];                                                    15600400
         INTEGER A,N;                                                   15600500
         LABEL NXT;                                                     15600600
         C ~ [M[GETSPACE(MIXMAX+1,0,0) + 2]] & (MIXMAX+1) [8:38:10];    15600800
         FOR A ~ 0 STEP 1 UNTIL MIXMAX DO C[A] ~ 0;%                    15600950
         C[0].[FF] ~ A ~ MSTART;%                                       15601000
         WHILE A ! MEND DO% STEP THRU MEM LINKS                         15601150
         BEGIN IF (LINK ~ M[A]).[1:1] THEN GO TO NXT;                   15601200
              SIZE ~ LINK.[CF] - A;                                     15601400
              IF LINK.[2:1] THEN SIZE ~ 0 & SIZE [CTF];% SAVE           15601500
              C[LINK.[9:6]] ~ (*P(DUP)) + SIZE;%                        15601600
         NXT: A ~ LINK.[CF];%                                           15602200
         END;%                                                          15602300
         A ~ -1; WHILE (A~A+1) { MIXMAX DO%                             15602400
         BEGIN IF Q.[1:1] OR Q.[CF] = A THEN IF C[A] ! 0 THEN           15602500
              BEGIN; STREAM(N~N~C[A].[FF],D~[SIZE]);%                   15602600
                   BEGIN SI ~ LOC N; DS ~ 8 DEC; END;%                  15602620
                   STREAM(N~N~C[A].[CF],D~[LINK]);%                     15602640
                   BEGIN SI ~ LOC N; DS ~ 8 DEC; END;%                  15602660
                   JOBMESS(A,Q,":SAVE=",SIZE," OLAY=",LINK);%           15602680
              END;%                                                     15602690
         END;%                                                          15602700
         IF Q.[1:1] THEN% DO TOTAL                                      15603900
         BEGIN P(C[0]);                                                 15604000
              FOR A~1 STEP 1 UNTIL MIXMAX DO P(C[A],ADD);%              15604100
              N ~ P; N ~ N.[FF] + N.[CF];%                              15604200
              STREAM(N,D~D~(GETSPACE(4,0,0) + 2));%                     15604250
              BEGIN SI ~ LOC N; DS ~ 18 LIT "TOTAL MEM IN USE= ";       15604275
                   DS ~ 5 DEC; DS ~ LIT "~";                            15604300
                   DI ~ DI - 6; DS ~ 4 FILL;%                           15604400
              END STREAM;                                               15604500
              SPOUT(D & Q[9:9:9]);%                                     15604600
         END;                                                           15604700
         FORGETSPACE(C INX 0);                                          15604800
    END COREPRINT;                                                      15604900
$ INCLUDE 15607701,IF AUXMEM;                                           15604999
 PROCEDURE AUXPRINT(Q);                                                 15605000
    VALUE     Q;                                                        15605100
    REAL      Q;                                                        15605200
    BEGIN COMMENT PRINTS AMOUNT OF AUXILIARY MEMORY                     15605300
                   USED BY EACH JOB, OR BY A GIVEN JOB;                 15605400
         REAL      I, J, K, TJ, TK;                                     15605500
         FOR I:=1 STEP 1 UNTIL MIXMAX DO                                15605600
         IF Q.[1:1] OR Q.[CF]=I THEN                                    15605700
         IF JARROW[I]!0 THEN                                            15605800
         BEGIN TJ := TJ+(J:=AUXDATA[I]|16);                             15605900
              TK := TK+(K:=AUXCODE[I]|16);                              15606000
              BEGIN;STREAM(J,K:);                                       15606200
                   BEGIN SI:=LOC J; DI:=LOC J;                          15606300
                        DS:=8 DEC; DS:=8 DEC;                           15606400
                   END;                                                 15606500
                   P(.K, ~, .J, ~);                                     15606600
                   JOBMESS(I,Q,":DATA=",J,",CODE=",K);                  15606700
              END;                                                      15606800
              IF Q.[1:1] THEN ELSE P(XIT);                              15606900
         END;                                                           15607000
         STREAM(N:=TK+TJ,I:=I:=GETSPACE(10,0,0)+2);                     15607200
         BEGIN SI:=LOC N; DS:=21 LIT " TOTAL AUX MEM USED: ";           15607300
              DS:=6 DEC; DS:=2 LIT ".~"; DI:=DI-8; DS:=5 FILL           15607400
         END;                                                           15607500
         SPOUT(I & Q[9:9:9]);                                           15607600
    END;                                                                15607700
PROCEDURE LOGCOMMENT (Q); VALUE Q; REAL Q;                              15610000
    BEGIN                                                               15611000
REAL     I,J,K,L;                                                       15612000
ARRAY    LOG[*];                                                        15613000
         L ~ GETSPACE(72,0,0)+2;                                        15614000
         STREAM (Q:D~L+5);                                              15615000
         BEGIN  SI ~ Q;                                                 15616000
         L:   IF SC!"~" THEN BEGIN DS ~ CHR; GO TO L; END;              15617000
              5(DS ~ 8 LIT " "); DI ~ DI-32; Q ~ DI;                    15618000
         END;                                                           15619000
         I ~ P.[33:15]; LOG ~ [M[L]] & (I-L+4)[8:38:10];                15620000
         LOG[3] ~ I ~ I-L-5; % NUMBER OF WORDS IN COMMENT               15621000
         WHILE (J~XCLOCK+P(RTR))}5184000 DO MIDNIGHT;                   15622000
         LOG[2] ~ DATE.[18:30];                                         15623000
         LOG[1] ~ J;                                                    15624000
         LOG[0] ~ 99;                                                   15625000
         LOGSPACE([LOG[0]],I+9);                                        15626000
         FORGETSPACE(LOG);                                              15627000
    END;                                                                15628000
 REAL PROCEDURE KEYIN(B); VALUE B; BOOLEAN B;%                          16000000
    BEGIN REAL RCW=+0;%                                                 16001000
               REAL BUFF = RCW+2;  %KEYIN = RCW+1                       16002000
         ARRAY BUFA =BUFF [*];                                          16002100
         REAL TYPE=BUFF+1;%                                             16003000
         REAL KTR=TYPE+1;%                                              16004000
    LABEL ERROR,EXIT,PG,MX,DD,RW,PD,DB,DP,DT,   DS,TR,RS,EI;%           16005000
         LABEL START,OL,LN,WD,WT,TIR;                                   16005500
         LABEL CC,PT,TX,RXIT,REX;%                                      16006000
              LABEL FORGET,DSR,ILR,OUR,OKR,FMR,AXR,RY;%                 16007000
              LABEL FR,OF,WY,RM;%                                       16008000
         LABEL PR,INR,OTR,CUTY;                                      %P 16008100
         LABEL SV,LD,CD,RD,RN;                                          16009000
$ INCLUDE 16009050, IF BREAKOUT;                                        16009040
         LABEL AWAY;                                                    16009050
         LABEL TF,SF,TS,PS,XS,ES;                                       16009100
         LABEL EX,CU,AU;                                                16009200
         LABEL CL;                                                      16009300
         LABEL LO,LI,SS,SM,HM,TC,HR,ZZ;                                 16009400
         LABEL PGA;                                                 %WB 16009500
         LABEL CTR,XTR,TLR;%                                        %WF 16009600
         LABEL BO,LF,LC,LS;                                             16009700
         LABEL MR,XD,OC;                                                16009800
         LABEL RYX,SVX,RYW;                                             16009900
         LABEL RO,TZ,ED,SUSPENDER;                                   %ST16010000
         LABEL RR,QVE,WP,WU;                                            16010100
         LABEL CI,LR,RP,WM;                                             16010200
     LABEL SY,SL,SI;                                                    16010250
         LABEL BK,SWITCHIT;                                             16010300
         LABEL WI,CM,MC;                                                16010310
         LABEL US,BS,SC,IFSPO;                                          16010350
              SWITCH  SR ~ ERROR,DSR,ILR,OUR,OKR,FMR,AXR,FR,OF,         16011000
                           TIR,WY,RM,ILR,SUSPENDER,INR,OTR,CUTY,        16012000
                           PR,PS,XS,ES,SM,HR,CTR,XTR,TLR,SS,WU,WP       16013000
               ,HM,CU,BK,AU,TS                                          16013010
                   ;                                                    16013990
              SWITCH  S  ~ ERROR,PG,MX,DD,RW,PD,DB,DP,DT,DS,TR,RS,EI,   16014000
                           CC,PT,RY,TX,OL,LN,WD,WT,LR,RO,RO,TZ,SV,      16015000
                           LD,CD,RD,RN,ED,CI,TF,SF,TS,RR,QVE,%          16016000
                           EX,MR,LO,LI,SS,SM,HM,TC,ZZ                   16017000
                           ,BO,WP,ERROR,WU,LF,LC,LS,CM,RP,WM            16020070
                           ,BK,BS,US,SC                                 16020080
                           ,CL,CL                                       16020090
                         ,WI                                            16020100
                          ,CU                                           16020150
                          ,XD                                           16020160
                          ,SY,SL,SI                                     16020200
                          ,AU,OC                                        16020300
                          ,MC                                           16020400
                   ;%                                                   16021000
         REAL I=KTR+1,HN1=I+1,HN2=HN1+1;%                               16022000
         REAL A=HN2+1;                                              %WB 16022100
         REAL MASK=A;                                                   16022200
         NAME ADDR=MASK+1;                                              16022300
         REAL MIX=I;%                                                   16023000
         INTEGER INT=I;%                                                16024000
         REAL  J = ADDR+1;                                              16024500
         INTEGER ZZSTA = J  + 1; % NOTE P(B)                            16024550
         REAL TOG = ZZSTA+1;                                            16024560
         SUBROUTINE SPOIT;M[BUFF-2]:=B AND @7570000000000;              16024600
         IF B THEN BEGIN P(GETSPACE(192, 12,0)+1,STS,B,RCW,0,RDS,0,XCH, 16025000
              CFX,STF,0); STACKUSE:=TRUE; END;                          16026000
         P(0,0,0,0,0,0,0,0,0);         %WATCH OUT WHAT YOU DO HERE      16027000
         P(B);  % HERE BE SERPENTS                                      16027100
         P(0);                                                          16027200
 START::%                                                               16028000
    IF ABS(B) > 1 THEN                                                  16028050
         BUFF ~ B.[18:15]                                               16028100
    ELSE                                                                16028150
         BEGIN                                                          16028200
         BUFF ~ GETSPACE(60,0,0)+3;                                     16029000
$INCLUDE 16029051, IF DCSPO AND DATACOM AND NOT INQUIRY;                16029049
         ZZSTA~ 0&(SPOWORD}0)[9:39:9];                                  16029050
         M[BUFF INX NOT 2].[9:6]~ 0;                                    16029100
         P(WAITIO(BUFF&1[24:47:1],0,25),DEL);%                          16030000
         END;                                                           16030050
$INCLUDE 16030091, IF DCSPO AND DATACOM AND NOT INQUIRY;                16030060
         IF B.[9:9]!0 THEN                                              16030065
              IF P(GET(B),DUP,NOT) AND P(XCH).[32:1] THEN %BACK UP SPO  16030070
                   BEGIN                                                16030075
                   B.[9:9]~ 0; %PRETEND THE MESSAGE CAME FROM THE SPO   16030080
                   KEYBOARDCOUNTER~ KEYBOARDCOUNTER+(ABS(B){1);         16030085
                   END;                                                 16030090
    M[BUFF-2]~ 0&ZZSTA[9:9:9];                                          16030100
              STREAM(MIX~63,BUFF:A~0);                                  16031000
              BEGIN SI~BUFF;DI~BUFF;DI~DI-1;DS~LIT"<";                  16031100
                   8(60(IF SC="~" THEN BEGIN DS~CHR;                    16031200
                   JUMP OUT 2 TO L END; IF SC="<" THEN                  16031300
                   BEGIN DI~DI-1;IF SC!DC THEN DI~DI-1 END              16031400
                   ELSE DS~CHR));                                       16031500
              L:   SI~BUFF; DI~LOC MIX;                                 16032000
              L1:   IF SC = " " THEN BEGIN SI~SI+1; GO TO L1 END;       16033000
                   IF SC="~" THEN BEGIN MIX:=SI; GO TO XXIT; END;       16033500
                    IF SC < "0" THEN GO TO XXIT;                        16034000
                    IF SC > "9" THEN                                    16035000
                         BEGIN SI~SI+1; SKIP DB; DS~SET; GO TO XXIT END;16036000
                    SI~SI+1;                                            16037000
                    IF SC < "0" THEN GO TO ONEDIG;                      16038000
                    IF SC { "9"                                         16039000
                      THEN         BEGIN SI~SI-1; DS~2 OCT; END         16040000
                      ELSE ONEDIG: BEGIN SI~SI-1; DS~1 OCT; END;        16041000
              XXIT: DI~BUFF; DI~DI-8; DS~8 LIT "INV KBD "; BUFF~SI;     16042000
              END STREAM;                                               16043000
              IF P(.KTR,~,.MIX,SND) GTR @777 THEN                       16044000
              BEGIN KEYIN:=TRUE; GO TO FORGET; END;                     16044500
              IF MIX = (-63) THEN GO TO CC;                             16045000
              IF MIX ! 63 THEN BEGIN  MIXMSGS; HN1:=P( .MIXMSGS) END    16046000
                          ELSE BEGIN INFOMSGS; HN1:=P(.INFOMSGS) END;   16047000
              STREAM(T~0,DICT~*HN1 INX 1,W~0:BUFF~KTR);                 16051000
              BEGIN SI ~ BUFF;%                                         16052000
              L:   IF SC = " " THEN BEGIN SI ~ SI+1; GO TO L END;%      16053000
                   IF SC = "~" THEN GO TO E;%                           16054000
                   SI ~ SI+2; T ~ SI;%                                  16055000
                   SI ~ DICT; DI ~ T;%                                  16056000
                   DICT:=TALLY; % DICT:=0                               16056100
              R:   SI:=SI+6; T:=DI; DI:=DICT;                           16057000
                   DI:=DI+8; DICT:=DI; DI:=T; DI:=DI-2;                 16057100
                   IF SC = "~" THEN GO TO E;%                           16058000
                   IF 2 SC ! DC THEN GO TO R;%                          16059000
              Q:   SI:=SI-3; DI:=LOC W; DI:=DI+7; DS:=CHR;              16060000
                   GO TO X;%                                            16061000
              E:   TALLY:=0; DICT:=TALLY; GO TO Q;                      16062000
              X:END;%                                                   16063000
              P(P(DUP) GEQ 4,.J,STD,3,AND);                             16063500
              P(.HN1,~,.TYPE,~,BUFF&P[15:33:15],.KTR,~);                16064000
              IF TYPE = 0 THEN GO TO ERROR;                             16064050
         IF (HN1=1) OR (HN1=2) THEN    % I.E., IF A MIX IS REQD         16064100
              IF MIX > MIXMAX  THEN GO TO ERROR;                        16064150
$INCLUDE 16064699, IF DCSPO AND DATACOM AND NOT INQUIRY;                16064199
         IF B.[9:9] ! 0 THEN % SKIP CHECK FOR SPO                       16064200
$ INCLUDE 16064206, IF RJE;                                             16064204
         IF GET(B) THEN IF J THEN ELSE GO TO ERROR ELSE                 16064205
         IF HN1!2 OR TYPE!22 THEN  % ALWAYS ALLOW "HR"                  16064210
         IF HN1!0 OR TYPE!40 THEN  % ALWAYS ALLOW "LI"                  16064220
         IF HN1!0 OR TYPE!39 THEN  % ALWAYS ALLOW "LO"                  16064230
         IF HN1!0 OR TYPE!45 THEN  % ALWAYS ALLOW "ZZ"                  16064240
         IF HN1!0 OR TYPE ! 41 THEN  %ALWAYS ALLOW SS                   16064250
       BEGIN                                                            16064290
         IF P(LOOKQ,B AND @7570000000000,LLL,.ADDR,STD).[9:9]=B.[9:9]   16064300
                THEN MASK:=IF HN1=0THEN (ADDR INX 4) ELSE (ADDR INX 6)  16064400
              ELSE MASK:=IF HN1=0 THEN P(.INFOMASK1) ELSE P(.MIXMASK);  16064500
         IF NOT RHEOSTAT(TYPE,MASK,IF HN1=3 THEN 63 ELSE MIX , B)       16064520
           THEN GO TO ERROR;                                            16064600
       END;                                                             16064650
         MASK:=0;                                                       16064700
         IF HN1=0 THEN GO TO S[TYPE]; % NO MIX NUMBER BEFORE MESSAGE    16065000
         IF HN1=3 THEN GO SWITCHIT;                                     16066000
                                                                        16067000
         IF JAR[MIX,*]=0 THEN GO TO ERROR;                              16067100
$INCLUDE 16067152, IF DCSPO AND DATACOM AND RJE AND NOT INQUIRY;        16067149
         IF B.[9:9]!0 THEN IF GET(B) THEN IF JAR[MIX,6].[9:9]=          16067150
         B.[9:9] THEN ELSE GO TO ERROR;  %REFERENCE ONLY OWN MIXES      16067151
         IF HN1=2 THEN GO SWITCHIT; % MIX NUMBER, JOB NOT REQUIRED      16067200
                                       % TO BE WAITING FOR MESSAGE      16067300
                                                                        16067400
% MAKE SURE JOB IS WAITING FOR THIS MESSAGE                             16067500
         HN1 ~ REPLY[MIX];%                                             16068000
    REX: IF HN1}0 THEN IF TYPE!10 THEN GO TO ERROR ELSE%                16069000
              BEGIN M[BUFF-1] ~ FLAG(-58934319539&MIX[6:42:6]);%        16069100
                   M[BUFF]~0&799[1:37:11]; GO TO ERROR END;%            16069200
         IF HN1.[42:6] ! TYPE THEN%                                     16070000
              BEGIN HN1 ~ -HN1.[6:36];%                                 16071000
                   GO TO REX;%                                          16072000
              END;%                                                     16073000
SWITCHIT: GO TO SR[TYPE];%                                              16074000
    ERROR:SPOUT((BUFF-1) INX (0&ZZSTA[9:9:9]));                         16075000
         KEYIN ~ TRUE;%                                                 16076000
         GO TO EXIT;%                                                   16077000
    PG:  STREAM(Y~KTR);                                             %WB 16077100
              BEGIN SI~Y;                                           %WB 16077200
         LA:  IF SC!"~" THEN BEGIN SI~SI+1; DI~DI+1; GO TO LA END   %WB 16077300
                        ELSE DS~ 4LIT"~~~~";                        %WB 16077400
              END;                                                  %WB 16077500
    PGA: STREAM(Y~0,KTR: A~A~GETSPACE(12,0,0)+3);%                      16078000
              BEGIN SI~KTR;                                         %WB 16078100
         L:   IF SC=" " THEN BEGIN SI~SI+1; GO TO L END ELSE        %WB 16078200
              IF SC="~" THEN TALLY ~ 1 ELSE                         %WB 16078300
              IF SC="0" THEN TALLY ~ 1 ELSE                         %WB 16078350
              BEGIN DS:= 3 CHR; IF SC="-" THEN                          16078400
                BEGIN DS:=CHR; LL: IF SC=" " THEN                       16078410
                                   BEGIN SI~SI+1; GO TO LL END;         16078415
                5(IF SC GEQ 0 THEN DS:=CHR ELSE JUMP OUT;);             16078420
                END;                                                    16078430
              DS:=LIT "~"; KTR:=SI;                                     16078440
              END;                                                      16078450
              Y~ TALLY;                                             %WB 16078500
              END;                                                  %WB 16078600
         IF P(.KTR,~) THEN BEGIN FORGETSPACE(A-1); GO TO FORGET END;%WB 16078700
         M[A-2] ~ 0&B[9:9:9];                                           16078750
         A~A&A[15:33:15];                                           %WB 16078800
         TAPEPURGE(A); GO TO PGA;                                   %WB 16079000
    MX:  MIXPRINT(ZZSTA);                                               16080000
         GO TO FORGET;                                                  16081000
    OC:  LOGCOMMENT(KTR); GO TO FORGET;                                 16081100
    PT:  PRINTBACKUP(KTR&B[6:9:9]);                                     16082000
         GO TO EXIT;%                                                   16083000
    DD:%                                                                16084000
$ OMIT   16086001, IF NOT DEBUGGING;                                    16084999
         DDT;%                                                          16085000
         GO TO FORGET;%                                                 16086000
         GO TO ERROR;%                                                  16086500
    RW: SPOIT; REWINDANDLOCK(KTR);                                      16087000
         GO TO EXIT;%                                                   16088000
    LF:  MASK:=3; GO TO PD;                                             16088900
    LC:  MASK:=2; GO TO PD;                                             16088910
    LS:  MASK:=4; GO TO PD;                                             16088920
    EX:  KTR:= -KTR;MASK:=1;                                            16088930
    PD:  PRINTDIRECTORY(KTR,MASK);                                      16089000
         GO TO EXIT;%                                                   16090000
    BK:                                                                 16090050
$INCLUDE 16090071,IF DATACOM AND DCSPO AND NOT INQUIRY;                 16090052
         IF ZZSTA.[9:9]>1   THEN                                        16090059
         STATION[ZZSTA.[14:4],ZZSTA.[9:4]].[26:1]:=1                    16090060
         ELSE                                                           16090070
         BEGIN TOG:=HN1;                                                16090090
         IF (HN2~ MESSAGEHOLDER.[CF])!0 THEN                            16090100
              IF (HN1~ M[HN2].[FF])!0 THEN                              16090130
                   BEGIN                                                16090145
                   DO                                                   16090160
                        BEGIN                                           16090200
                         A:=M[HN1];                                     16090260
                         IF(A.[4:5]=0 AND TOG=0) OR                     16090270
                           (A.[4:5]=MIX AND TOG=3) THEN                 16090280
$INCLUDE 16090295,IF DATACOM AND DCSPO AND NOT INQUIRY;                 16090290
                           IF A OR TOG=2 THEN                           16090292
                             BEGIN                                      16090300
                             M[HN2]~ P(DUP,LOD)&A[18:18:15];            16090330
                             NUMESS~ NUMESS-1;                          16090340
                             FORGETSPACE(HN1+1);                        16090360
                             END                                        16090400
                        ELSE                                            16090420
                             BEGIN                                      16090430
                             HN2~ HN1;                                  16090440
                             END;                                       16090450
                        END                                             16090460
                   UNTIL (HN1~ A.[FF])=0;                               16090500
                   MESSAGEHOLDER.[FF]~ HN2;                             16090530
                   END;                                                 16090560
         END;                                                           16090570
         GO TO FORGET;                                                  16090600
    FMR: RY:  IF (HN2:=FORMESS(KTR,HN1!0)) LSS 0 THEN GO TO FORGET;     16091000
         IF HN2 GTR 31 THEN GO TO ERROR ELSE GO TO RXIT;                16092000
    DB:%                                                                16095000
$ OMIT   16097001, IF NOT DEBUGGING;                                    16095999
         DISKBUG;%                                                      16096000
         GO TO FORGET;%                                                 16097000
    CUTY:IF ((HN1:=JAR[MIX,0])!"PRNPBT " AND HN1!"LIBMAIN")             16097100
              OR JAR[MIX,1]!"DISK   " THEN GO TO ERROR;                 16097150
         REPLY[MIX]:=TYPE&HN2[CTF];                                     16097175
         PRT[MIX,@25]~5; GO FORGET;                                     16097200
         GO TO ERROR;%                                                  16097500
    LD:  STARTLOADN(KTR);%                                              16098000
         GO TO EXIT;%                                                   16099000
    CD: TABLEOFCONTENTS(KTR);                                           16100000
         GO TO FORGET;%                                                 16101000
    RD:  DECKREMOVER(KTR);%                                             16102000
         GO TO EXIT;%                                                   16103000
    RN:  SPOIT; RUNTHEDECK(KTR);                                        16104000
         GO TO EXIT;%                                                   16105000
    ED:  EXTERNALEND(KTR)     ;                                         16105100
         GO TO EXIT;                                                    16105200
    PR:  SPOIT; CHANGEPRIORITY(KTR,MIX); GO EXIT;                       16105300
    OL:  OUTPUTLABEL(KTR);%                                             16106000
         GO TO EXIT;%                                                   16107000
$INCLUDE 16107801, IF DATACOM AND DCSPO AND NOT INQUIRY;                16107099
    BS:  A~-101; GO IFSPO;                                              16107100
    US:  A~-100;                                                        16107150
IFSPO:   SPOIT;                                                         16107160
              STREAM(T~0:KTR,T2~ "SPO");                                16107200
                   BEGIN                                                16107250
                   SI~ KTR;                                             16107300
                   L1:  IF SC=" " THEN BEGIN SI~SI+1; GO L1 END;        16107350
                   DI~ LOC T2; DI~ DI+ 5;                               16107400
                   IF 3 SC=DC THEN                                      16107450
                        TALLY~1;                                        16107500
                   T~ TALLY;                                            16107550
                   END;                                                 16107600
              IF P THEN SPOSIN(0,A+100,BUFF-1)                          16107650
              ELSE GO RR;                                               16107700
              GO EXIT;                                                  16107750
    SC:  SPOSIN(0,3,BUFF-1); GO EXIT;                                   16107800
$OMIT 16107823, IF DCSPO;                                               16107801
BS:US:SC: GO ERROR;                                                     16107820
    DP:%                                                                16108000
$ INCLUDE 16110201, IF DEBUGGING OR DUMP;                               16108999
         STREAM(A:="LP",KTR:B:="MT");                                %AI16109000
         BEGIN SI := KTR;                                            %AI16109100
         L:    IF SC = " " THEN BEGIN SI:=SI+1; GO TO L END;         %AI16109200
               IF SC = "~" THEN TALLY := 0;                          %AI16109300
               DI := LOC A; DI := DI + 6;                            %AI16109400
               IF 2 SC=DC THEN TALLY := 1;                           %AI16109500
               DI := DI + 22; SI := SI - 2;                          %AI16109600
               IF 2 SC=DC THEN TALLY := 2;                           %AI16109700
               A := TALLY; KTR := SI;                                %AI16109800
         END;                                                        %AI16109900
         IF (A:=P(.KTR,~))=0 THEN GO TO ERROR;                       %AI16110000
         IF A=1 THEN BEGIN PRINTCORE; GO TO FORGET END;              %AI16110050
         DUMPCORE(KTR&BUFF[15:33:15]);                               %AI16110100
         GO TO EXIT;                                                 %AI16110200
$ OMIT 16110501, IF DEBUGGING OR DUMP;                                  16110499
         GO TO ERROR;                                                %AI16110500
    OUR: STREAM(A~"LP":B~"MT",C~"DK",D~"CP",KTR);                       16111000
              BEGIN SI ~ KTR;%                                          16112000
              L:   IF SC = " " THEN BEGIN SI ~ SI+1; GO TO L END;%      16113000
              DI ~ LOC A; DI ~ DI+6;%                                   16114000
              IF SC = "~" THEN TALLY ~ 1;%                              16115000
              IF 2 SC = DC THEN TALLY ~ 2; SI ~ SI-2; DI ~ DI+14;%      16116000
              IF 2 SC = DC THEN TALLY ~ 3;%                             16117000
              SI~SI-2; DI~DI+6; IF 2 SC=DC THEN TALLY~4;             %P 16117100
              SI~SI-2; DI~DI+6; IF 2 SC=DC THEN TALLY~5;                16117200
              A ~ TALLY;%                                               16118000
              END;%                                                     16119000
         IF(HN2~P) = 0 THEN GO TO ERROR;%                               16120000
         GO TO RXIT;%                                                   16121000
    SY:                                                                 16121400
$INCLUDE 16121631, IF STATISTICS;                                       16121599
        INDEPENDENTRUNNER(P(.SAVESTATISTICS),"SYSTEM "                  16121600
$INCLUDE 16121611, IF SHAREDISK;                                        16121609
        &(SYSNO+17)[42:42:6]                                            16121610
        );                                                              16121620
        GO TO FORGET;                                                   16121630
    SI:                                                                 16121640
$INCLUDE 16121931, IF STATISTICS;                                       16121699
        STREAM(A:=0:KTR);                                               16121700
        BEGIN                                                           16121710
             SI:=KTR; TALLY:=1;                                         16121720
         L1: IF SC=" " THEN BEGIN SI:=SI+1; GO TO L1 END;               16121730
             IF SC="~" THEN GO TO L2;                                   16121740
             IF SC GEQ "0" THEN BEGIN SI:=SI+1;                         16121750
             IF SC GEQ "0" THEN BEGIN                                   16121760
                SI:=SI-1; DI:=LOC A; DS:=2 OCT END                      16121770
             ELSE BEGIN                                                 16121780
                SI:=SI-1; DI:=LOC A; DS:= OCT END; END                  16121785
             ELSE GO TO L2;                                             16121790
             IF SC NEQ "~" THEN BEGIN                                   16121800
         L2: TALLY:=0; A:=TALLY END;                                    16121810
        END;                                                            16121820
        IF (HN1~P)=0 THEN GO TO ERROR;                                  16121830
        INTERVAL:=HN1|3600;                                             16121850
        STREAM(A:=HN1,B:=A:=BUFF-1);                                    16121860
        BEGIN                                                           16121870
             SI:=LOC A; DS:=23LIT"NEW TIMING INTERVAL IS ";             16121880
             DS:=2 DEC; DS:= 9LIT" MINUTES~";                           16121890
        END;                                                            16121900
        SPOUT(A);                                                       16121910
        COUNTARRAY[29]:=XCLOCK;                                         16121920
        GO TO EXIT;                                                     16121930
    SL:                                                                 16121935
$INCLUDE 16121981, IF STATISTICS;                                       16121939
        INDEPENDENTRUNNER(P(.SAVESTATISTICS),"STLOG  "                  16121940
$INCLUDE 16121961, IF SHAREDISK;                                        16121959
        &(SYSNO+17)[36:42:6]                                            16121960
        );                                                              16121970
        GO TO FORGET;                                                   16121980
$OMIT 16121991, IF STATISTICS;                                          16121989
        GO TO ERROR;                                                    16121990
    TIR: TIMEUSED(BUFF-1,MIX);%                                         16122000
         GO TO EXIT;%                                                   16123000
    DT:  SETDATE(KTR);%                                                 16124000
         GO TO EXIT;%                                                   16125000
    TX:  SETIME(KTR);%                                                  16126000
         GO TO EXIT;%                                                   16127000
    SV:  SAVETHEUNIT(KTR);                                              16128000
         GO FORGET;                                                     16129000
    LN:                                                                 16130000
         STREAM(A~0:KTR);                                               16130100
         BEGIN SI~KTR; DI~LOC A; DI~DI+6;                               16130200
              L: IF SC=" " THEN BEGIN SI~SI+1; GO TO L END;             16130300
              DS~2 CHR;                                                 16130400
         END;                                                           16130500
         IF (HN1:=P).[36:6]=@37 THEN                                    16130600
         INDEPENDENTRUNNER(P(.LOGOUT),0) ELSE                           16130610
$ INCLUDE 16130701, IF DISKLOG;                                         16130699
         IF HN1="DK" THEN INDEPENDENTRUNNER(P(.LOGDISK),0) ELSE         16130700
         GO TO ERROR;                                                   16130800
         GO TO FORGET;%                                                 16131000
    LR:  ZIPPER("LOGOUTR","DISK   ",0)  ;GO FORGET;                     16131500
    WD:  GIMEDATE(BUFF-1,1);                                            16132000
         GO TO EXIT;%                                                   16133000
    INR: KTR~-KTR;                                                      16133100
    OTR:                                                                16133200
$ INCLUDE 16133221, IF BREAKOUT;                                        16133210
    IF RESTARTING=(-MIX) THEN GO AWAY;   %NO PRT YET                    16133220
    IF PRTGAMES(KTR,MIX) THEN GO ERROR                                  16133230
              ELSE IF KTR<0 THEN GO FORGET ELSE GO EXIT;                16133300
    WT:  TIMEOUT (BUFF-1);%                                             16134000
         GO TO EXIT;%                                                   16135000
RS:   %RESTART REELER: RS MTQ                                           16136000
$ INCLUDE 16138001, IF BREAKOUT;                                        16137000
         SPOIT; REELER(KTR); GO EXIT;                                   16138000
         GO ERROR;                                                      16140000
         GO TO ERROR;%                                                  16149500
EI: A:=0; SPOIT;                                                        16150000
    FOR I:=1 STEP 1 UNTIL MIXMAX DO                                     16150100
    IF *[JARROW[I]] ! 0 THEN                                            16150200
    IF REPLY[I] LSS 0 THEN REPLY[A:=I]:=10;                             16150300
    M[BUFF-1]:=IF A NEQ 0 THEN NOT 0 ELSE FLAG("NULL   ");              16150400
      GO TO ERROR;                                                      16151000
    CU:  COREPRINT((IF TYPE=63 THEN -0 ELSE MIX)&ZZSTA[9:9:9]);         16152000
         GO TO FORGET;                                                  16152100
AU:                                                                     16152200
$ INCLUDE 16152211,IF AUXMEM;                                           16152209
         AUXPRINT((IF TYPE=68 THEN -0 ELSE MIX)&ZZSTA[9:9:9]);          16152210
         GO TO FORGET;                                                  16152300
MC:      NAMEID(HN1,KTR);                                               16152310
         NAMEID(HN2,KTR);                                               16152320
         NAMEID(HN2,KTR);                                               16152330
         IF(A:=DIRECTORYSEARCH(HN1,HN2,4)) NEQ 0 THEN                   16152340
         BEGIN IF(J:=DIRECTORYSEARCH(HN1,"DISK   ",5))!0 THEN           16152350
               BEGIN FORGETSPACE(J); FORGETSPACE(A);                    16152360
                     LBMESS(-HN1,HN2,"NOT ","MC-ED","(DUP ","FILE)",0); 16152370
               END ELSE                                                 16152380
               BEGIN M[A INX 4]:=(*P(DUP))&2[1:46:2]&1[8:47:1];         16152390
                     ENTERUSERFILE(-HN1,"DISK   ",A INX 0-1);           16152400
                     A:=A&DIRECTORYFREE[18:32:15];                      16152410
                     FORGETSPACE(DIRECTORYSEARCH(HN1,HN2,8));           16152420
                     HEADERUNLOCK(HN1,"DISK   ",A);                     16152430
                      LBMESS(HN1,HN2,"MC-ED:",HN1,"/DISK C","OMPILER",0)16152450
               ;END                                                     16152460
         END ELSE LBMESS(-HN1,HN2,"NOT ","MC-ED","(NOT ON"," DISK)",0); 16152470
         GO TO EXIT;                                                    16152480
    DS:  NAMEID(HN1,KTR);%                                              16153000
         NAMEID(TYPE,KTR);%                                             16154000
         NAMEID(HN2,KTR);%                                              16155000
              FOR I~1 STEP 1 UNTIL MIXMAX DO                            16156000
              IF *[JARROW[I]]!0 THEN%                                   16157000
              IF HN1=ABS(JAR[I,0])%                                     16158000
              AND HN2=ABS(JAR[I,1]) THEN%                               16159000
                   DSR: IF JARROW[I]!0 THEN                             16160000
                         BEGIN                                          16160500
                        TERMINATE(I&(IF B.[9:9]>0 THEN 61 ELSE 3)[CTF]);16161000
                        HALT;                                           16162000
                        NOPROCESSTOG~ NOPROCESSTOG-1;                   16163000
                        GO TO FORGET;                                   16164000
                        END;                                            16165000
              GO TO ERROR;%                                             16166000
$INCLUDE 16166611, IF DATACOM AND NOT INQUIRY;                          16166099
    RR:  STREAM(KTR,BUF~[HN2],T1~0,T2~0,TU~[HN1]);                      16166100
              BEGIN                                                     16166110
                                                                        16166120
              SI ~ KTR; SI ~ SI-1;                                      16166130
              L1:  SI~SI+1;IF SC = " " THEN GO TO L1;                   16166140
              DI ~ LOC T1; DI ~ DI+7;                                   16166150
                                                                        16166160
              IF SC}0 THEN IF SC{9 THEN BEGIN DS~CHR;GO TO L2;END;      16166170
              GO TO ERROR;                                              16166180
              L2:  IF SC}0 THEN IF SC{9 THEN                            16166190
                   BEGIN DI~DI-2;SI~SI-1;DS~2CHR;END;                   16166200
              SI~SI-1;                                                  16166210
              L3:  SI~SI+1; IF SC="~" THEN GO TO ERROR;                 16166220
                   IF SC<0 THEN GO TO L3; IF SC>9 THEN GO TO L3;        16166230
              DI ~ LOC T2; DI ~ DI+7;                                   16166240
              DS ~ CHR;                                                 16166250
              IF SC}0 THEN IF SC{9 THEN                                 16166260
                   BEGIN DI~DI-2;SI~SI-1;DS~2CHR;END;                   16166270
              GO TO L4;                                                 16166280
              ERROR:    DI ~ LOC T1; DS ~ 8 LIT "0";                    16166290
              L4:                                                       16166300
              DI ~ TU; SI ~ LOC T1; DS ~ 8 OCT;                         16166310
              DI ~ BUF;SI ~ LOC T2; DS ~ 8 OCT;                         16166320
              END;                                                      16166330
         IF A>100 THEN                                                  16166331
              BEGIN     BUFF ~ BUFF-1;                                  16166332
              P(WHATSUP(0&HN1[9:44:4]&HN2[14:44:4],MIX|(MIX!63),        16166333
                        A-100,BUFA),DEL);                               16166334
              GO TO EXIT;                                               16166335
              END;                                                      16166336
         IF A{(-100) THEN BEGIN IF (HN1+HN2)!0 THEN                     16166337
$INCLUDE 16166340, IF DCSPO AND DATACOM AND NOT INQUIRY;                16166338
              SPOSIN(0&HN1[9:44:4]&HN2[14:44:4],A+100,BUFF-1) ELSE      16166339
              GO ERROR;  GO EXIT END;                                   16166340
         IF HN1=0 OR HN1>15 OR HN2>15 THEN GO ERROR;                    16166342
$INCLUDE 16166421, IF DCSPO AND DATACOM AND NOT INQUIRY;                16166349
         SPOSIN(0&HN1[9:44:4]&HN2[14:44:4],2,0);                        16166350
         MARKSPOSTA(0&HN1[9:44:4]&HN2[14:44:4],"OUT");                  16166355
         STREAM(HN1,HN2,T~BUFF-1);                                      16166360
              BEGIN                                                     16166370
              DS~5 LIT " STA"; SI~LOC HN1;DS~2 DEC;DS ~ LIT "/";        16166380
              SI~LOC HN2; DS~2 DEC; DS~16 LIT" MARKED NON-SPO~";        16166390
              END;                                                      16166400
         SPOUT((BUFF-1) INX M[BUFF-2]);                                 16166410
         GO TO EXIT;                                                    16166420
         GO TO ERROR;                                                   16166450
    WU:  IF MIX!63 THEN                                                 16166500
              BEGIN BUFF~BUFF-1; P(WHATSUP(0,MIX,1,BUFA),DEL);          16166510
              GO TO EXIT;                                               16166520
              END;                                                      16166530
         A ~ 101;                                                       16166540
         GO TO RR;                                                      16166550
    WP:  A ~ 102;                                                       16166600
         GO TO RR;                                                      16166610
$OMIT    16166621, IF DATACOM AND NOT INQUIRY;                          16166619
    RR:WU:WP: GO TO ERROR;                                              16166620
    QVE:                                                                16167000
$INCLUDE 16167251, IF DCSPO AND DATACOM AND NOT INQUIRY;                16167001
         STREAM(R~0:T1~0,KTR,QV~[HN1]);                                 16167005
              BEGIN                                                     16167010
              SI~KTR; SI~SI-1;                                          16167020
              L1:  SI~SI+1;IF SC=" "THEN GO TO L1;IF SC="="THEN GO L1;  16167030
              IF SC = "~" THEN GO TO L2;                                16167035
              8(IF SC}0 THEN IF SC{9 THEN                               16167040
                   BEGIN TALLY ~ TALLY+1;SI ~ SI+1; GO TO LOOP; END;    16167050
                IF SC = "~" THEN JUMP OUT TO EL;                        16167055
                JUMP OUT TO L2;                                         16167060
                LOOP:);                                                 16167070
              EL:                                                       16167075
              T1~TALLY;                                                 16167080
              SI ~ SI-T1;                                               16167090
              DS ~ T1 OCT;                                              16167100
              GO TO XI;                                                 16167110
              L2:  TALLY~1; R~TALLY;                                    16167120
              XI:                                                       16167130
              END;                                                      16167140
         IF NOT P THEN                                                  16167150
              BEGIN                                                     16167155
              QVLEFT~ (QV~HN1)|60; MARKSPOSTA(0,"QV");     %QV TO DISK  16167160
              END;                                                      16167165
         STREAM(HN1~QV,T~BUFF-1);                                       16167170
              BEGIN                                                     16167180
              DS ~ 22 LIT " REMOTE SPO Q VALUE =";                      16167190
              SI ~ LOC HN1; DS ~ 8 DEC; HN1~DI;                         16167200
              DI ~ DI- 8; DS ~ 7 FILL;  DI ~HN1;                        16167210
              DS ~  6 LIT " SECS~";                                     16167220
              END;                                                      16167230
         SPOUT((BUFF-1) INX M[BUFF-2]);                                 16167240
         GO TO EXIT;                                                    16167250
         GO TO ERROR;                                                   16167260
    AXR: HN2 ~ BUFF;                                                    16168000
         GO TO RXIT;                                                    16168100
    TR:                                                                 16169000
$ OMIT   16170001, IF NOT DEBUGGING;                                    16169001
         PRINTRACE;%                                                    16169500
         GO TO FORGET;%                                                 16170000
         GO TO ERROR;%                                                  16170500
     RO: SPOIT; CHANGEOPTION(KTR,TYPE=22);                              16172000
         GO TO EXIT;                                                    16173000
    TZ:  TYPOP(M[BUFF-2]); GO TO FORGET;                                16174000
    ILR: IF (HN2 ~ ANVIL(TYPE=2,KTR)) > PSEUDOMAXT THEN GO TO ERROR;    16175000
         TYPE ~ 2;%                                                     16176000
         GO TO RXIT;%                                                   16177000
    SF: SPOIT; TF: CHANGEFACTOR(KTR,TYPE=32); GO EXIT;                  16177100
    TS: PS: XS: ES: SHEETDIDDLER(KTR,TYPE,MIX); GO TO EXIT;             16177200
    WM:  WHATMCP(BUFF-1); GO ERROR; %ERROR WILL SPOUT IT FOR ME         16177250
    WI:  WHATINTRNSIC(BUFF-1); GO ERROR; %AS ABOVE                      16177260
    MR: XD: IF TYPE=38 THEN KTR.[CF]:=0;                                16177300
         INDEPENDENTRUNNER(P(.DKBUSINESS),KTR);                         16177350
         GO TO EXIT;                                                    16177400
$INCLUDE 16177601, IF DCSPO AND DATACOM AND NOT INQUIRY;                16177409
    BO: IF B.[9:9]!0 THEN BLACKOUT((BUFF-1)INX M[BUFF-2])ELSE GO ERROR; 16177410
         GO TO EXIT;                                                    16177420
    LO:LI: LGINOUT(KTR,TYPE-39); GO TO EXIT;                            16177500
RP:                                                                     16177510
$INCLUDE 16177539, IF DCLOG AND DATACOM AND NOT INQUIRY;                16177520
      CHEKREMOTELOG(BUFF-1); GO TO EXIT;                                16177530
                                                                        16177540
    ZZ: LGINOUT(KTR,2);  GO TO EXIT;                                    16177550
    SS: SM: HM: TC: HR: REMOTEMESSAGE(KTR,TYPE,MIX); GO TO EXIT;        16177600
$OMIT    16177611, IF DCSPO AND DATACOM AND NOT INQUIRY;                16177609
    BO:LI:LO:RP:ZZ:SS:SM:HM:TC:HR:GO TO ERROR;                          16177610
    CTR: XTR: TLR:  TIMERELAXER(KTR,TYPE,MIX);  GO TO EXIT;%        %WF 16177700
    CI:                                                                 16177800
$ INCLUDE 16177831, IF BREAKOUT;                                        16177810
    AWAY: IF RESTARTING<0 THEN   %CAN-T HAVE SPACE IN USE TILL NULLMIX  16177820
         BEGIN; STREAM(KTR); DS~13 LIT "--RESTARTING~"; GO ERROR END;   16177830
         IF TYPE=53 THEN KTR~-KTR;   %REALLY XI, NOT CI                 16177840
         INDEPENDENTRUNNER(P(.CHANGEINTRINSICFILE),KTR);  GO TO EXIT;%  16177900
    CM:  INDEPENDENTRUNNER(P(.CHANGEMCP),KTR);GO TO EXIT;               16177950
    CC:%                                                                16178000
      STREAM(BUFF,A~(KTR~GETSPACE(M[BUFF-3].[CF]-BUFF.[CF]+2,0,0)+4));  16179000
              BEGIN         SI~BUFF;%                                   16180000
              IF SC!"~" THEN BEGIN DS ~CHR;%                            16181000
         L:   IF SC!"~" THEN BEGIN IF SC!@14 THEN DS~CHR ELSE SI~SI+1;% 16182000
                GO TO L END END;%                                       16183000
              DS~CHR; END;%                                             16184000
              M[KTR-4].[9:6]:=0;                                        16184020
    IF ABS(B)> 1 THEN                                                   16184050
         INDEPENDENTRUNNER(P( .CONTROLCARD),KTR&30[2:42:6]&ZZSTA[9:9:9])16184100
    ELSE                                                                16184150
         INDEPENDENTRUNNER(P(.CONTROLCARD),KTR & 25[2:42:6]);           16185000
              GO TO FORGET;%                                            16186000
    CL:  IF (HN1~ UNITIN(TINU, KTR))<64 %UNIT ] MTX                     16186100
         THEN IF (MIX~ RDCTABLE[HN1].[8:6])!0 THEN                      16186200
              IF TYPE THEN GO CUTY ELSE GO DSR;                         16186300
$ INCLUDE 16186391, IF SHAREDISK;                                       16186349
         IF HN1 LSS 68 AND HN1 GTR 63 THEN IF NOT TYPE THEN             16186350
         BEGIN                                                          16186360
              IF (HN1:=HN1-64)=SYSNO OR HN1 GEQ SYSMAX THEN GO ERROR;   16186365
              INDEPENDENTRUNNER(P(.CLEANOUT),HN1);                      16186370
              GO TO FORGET;                                             16186380
         END;                                                           16186390
         IF TYPE OR (HN1>29) THEN GO TO ERROR; %QT OR PSEUDO UNIT       16186400
         LABELTABLE[HN1]~ P(DUP,LOD,SSP);    %MARK IT NOT IN USE        16186500
         HN1:=0;                                                        16186550
         GO TO RY;                                                      16186600
    %IF RESTARTING<0 THEN REPLY[MIX]=-@412; HA,HA.                      16186666
 SUSPENDER: IF-REPLY[  MIX]= @412 OR JARROW[MIX]=0 THEN GO ERROR;    %ST16187000
            COMPLEXSLEEP(STOPJOB=@1777 OR STOPJOB=MIX OR TERMIX=MIX);%ST16188000
            IF STOPJOB=@1777 THEN STOPJOB~MIX; GO FORGET;            %ST16189000
    RM:TYPE~TYPE&B[9:9:9];                                              16189010
    OKR:FR:OF:WY:RXIT:                                                  16190000
              REPLY[MIX] ~ TYPE&HN2[18:33:15];%                         16191000
              IF HN2 ! BUFF THEN%                                       16192000
                   BEGIN                                                16192050
    FORGET:   STREAM(T~BUFF~BUFF-1);  DS~ LIT "~";                      16193000
              SPOUT(BUFF INX (0&ZZSTA[9:9:9]));                         16193010
                   END;                                                 16193050
    EXIT:%                                                              16194000
         IF ABS(B) { 1 THEN                                             16194050
         BEGIN                                                          16194100
         IF (KEYBOARDCOUNTER ~ KEYBOARDCOUNTER-1) > 0 THEN GO TO START; 16195000
         KEYBOARDCOUNTER ~ 0;%                                          16196000
         END;                                                           16196050
         IF B THEN KILL([B]);%                                          16197000
    END;%                                                               16198000
PROCEDURE LBMESS(FN,SN,A,B,C,D,E);                                      17000000
    VALUE FN,SN,A,B,C,D,E;                                              17001000
    REAL  FN,SN,A,B,C,D,E;                                              17002000
    BEGIN                                                               17003000
         REAL T;                                                        17004000
         IF E.[30:18]!0 THEN E.[9:9]~0; % WHEN E=TINU[U]                17005000
         STREAM(A~[FN],  T~T~GETSPACE(10,0,0)+2);                       17006000
         BEGIN SI~A;IF SC="+" THEN DS~LIT"." ELSE DS~LIT" ";            17007000
              SI~SI+1;DS~7 CHR;DS~LIT"/";SI~SI+1;                       17008000
              DS~7 CHR;DS~LIT" ";16(IF SC="0" THEN SI~SI+1 ELSE DS~CHR);17009000
              IF SC="+" THEN BEGIN SI~SI+1;DS~7 CHR;DS~LIT"/";SI~SI+1;  17010000
                   DS~7 CHR END ELSE 16(IF SC="0" THEN SI~SI+1 ELSE     17011000
                   DS~CHR);                                             17012000
              SI~SI+5;IF SC!"0" THEN DS~3 CHR;DS~LIT"~";                17013000
         END;                                                           17014000
         SPOUT(-T&E[9:9:9]);                                            17015000
    END; % LIBMSG                                                       17016000
 PROCEDURE STOPM(NCS); VALUE NCS; BOOLEAN NCS;                       %ST17900000
    BEGIN INTEGER PROTY; LABEL AROUND; REAL B;                       %ST17901000
         PROTY~PRYOR[P1MIX];                                         %ST17902000
         PRYOR[P1MIX]~STOPJOB~@1777;                                 %ST17903000
 AROUND: STREAM(J~JARROW[P1MIX],P1MIX,B~B~GETSPACE(10,0,0)+2);       %ST17904000
         BEGIN DS~13LIT"#OPRTR ST-ED "; SI~J;   SI~SI+1; DS~7 CHR;   %ST17905000
              SI~SI+1; DS~LIT"/"; DS~7 CHR; DS~LIT"=";               %ST17906000
              SI~LOC P1MIX; DS~2DEC; DS~LIT"~"; DI~DI-3; DS~FILL;       17907000
         END; SPOUT(B);                                              %ST17908000
         REPLY[P1MIX]~-@412;                                         %ST17909000
         COMPLEXSLEEP((TERMIX.[CF]=P1MIX OR REPLY[P1MIX]}0));        %ST17910000
         IF TERMIX.[CF]!P1MIX THEN                                   %ST17911000
         BEGIN IF NOT WHYSLEEP(@412) THEN GO AROUND;                 %ST17912000
              REPLY[P1MIX]~0;                                        %ST17913000
              PRYOR[P1MIX]~PROTY;                                    %ST17914000
         END; IF NCS THEN GO INITIATE;                               %ST17915000
 END;                                                                %ST17916000
PROCEDURE FILEHOLD(A,B,TOG,LOC,HOLD);                                   18000000
    VALUE LOC,HOLD;                                                     18001000
    REAL A,B,TOG,LOC,HOLD;                                              18002000
BEGIN                                                                   18003000
    REAL SZ,Y,T;                                                        18004000
    ARRAY HOLDLIST[*];                                                  18005000
    LABEL SLEPE;                                                        18006000
    DEFINE DSED=(TERMIX.[CF]=P1MIX)#;                                   18007000
    IF HOLD THEN                                                        18008000
    BEGIN                                                               18009000
         IF TOG THEN TOG~TOG+1 ELSE                                     18010000
         BEGIN % MAKE AN ENTRY IN THE HOLDLIST                          18011000
              IF (SZ:=(Y:=HOLDER.[FF])+1) GTR HOLDMAX THEN              18012000
              PUNT([PUNTER[8]]);                                        18013000
              HOLDLIST:=[M[SPACE(SZ)]]&SZ[8:38:10];                     18014000
              IF Y!0 THEN                                               18014100
              DISKWAIT(-(HOLDLIST INX 0),Y,HOLDER.[CF]);                18015000
              HOLDER.[FF]:=SZ;                                          18016000
              HOLDLIST[Y]:=LOC.[FF]&[TOG][CTF]&SYSNO[2:46:2];           18017000
              DISKWAIT(HOLDLIST INX 0,SZ,HOLDER.[CF]);                  18018000
              FORGETSPACE(HOLDLIST);                                    18019000
         M[LOC+4].[3:1] ~1;                                             18020000
         DISKWAIT (LOC.[CF],30,LOC.[FF]);                               18021000
         END;                                                           18022000
         UNLOCKDIRECTORY;                                               18023000
         IF P1MIX!0 THEN                                                18024000
         BEGIN                                                          18025000
              IF TOG=0 THEN                                             18026000
SLEPE:        FILEMESS("      #",A,B," IN USE",0,0,0);                  18027000
              REPLY[P1MIX]~-(10+A.[3:1]|646);                           18028000
              COMPLEXSLEEP(REPLY[P1MIX]}0 OR DSED OR TOG);              18029000
              IF NOT WHYSLEEP(10+A.[3:1]|646) THEN GO SLEPE;            18030000
         END ELSE                                                       18031000
         SLEEP([TOG],1);                                                18032000
         LOCKDIRECTORY;                                                 18033000
         TOG:=TRUE;                                                     18033500
         IF P1MIX!0 AND DSED THEN                                       18034000
         BEGIN                                                          18035000
              FILEHOLD(A,B,TOG,LOC,2);                                  18037000
              IF (JAR[P1MIX,0] EQV "LIBMAIN")!NOT 0 OR                  18038000
                 (JAR[P1MIX,1] EQV "DISK   ")!NOT 0 THEN                18039000
              BEGIN                                                     18040000
                   UNLOCKDIRECTORY;                                     18041000
                   GO TO INITIATE;                                      18042000
              END;                                                      18043000
         END;                                                           18044000
    END ELSE                                                            18045000
    IF (SZ~HOLDER.[FF])!0 THEN                                          18046000
    BEGIN                                                               18047000
         HOLDLIST:=[M[SPACE(SZ)]]&SZ[8:38:10];                          18048000
         DISKWAIT(-(HOLDLIST INX 0),SZ,HOLDER.[CF]);                    18049000
         IF TOG THEN FOR T:=0 STEP 1 UNTIL SZ-1 DO                      18050000
$ INCLUDE 18052001, IF SHAREDISK;                                       18051000
         IF HOLDLIST[T].[2:2]=SYSNO THEN                                18052000
         IF HOLDLIST[T].[FF]=[TOG].[CF] THEN                            18053000
         IF (SZ:=SZ-1) ! T THEN                                         18054000
         BEGIN                                                          18055000
              MOVE(SZ-T,[HOLDLIST[T+1]],[HOLDLIST[T]]);                 18056000
              T:=SZ;                                                    18057000
         END;                                                           18058000
         HOLDER.[FF]:=Y:=SZ;                                            18059000
         IF SZ!0 THEN                                                   18060000
         BEGIN                                                          18061000
              FOR Y~0 STEP 1 UNTIL SZ-1 DO                              18062000
              IF HOLDLIST[Y].[CF]=LOC.[FF] THEN                         18063000
              BEGIN                                                     18064000
$ INCLUDE 18067001, IF SHAREDISK;                                       18065000
                   IF HOLDLIST[Y].[2:2]!SYSNO THEN                      18066000
                        HOLDLIST[Y]:=P(DUP,LOD,SSN) ELSE                18067000
                   M[HOLDLIST[Y].[FF]]~1;                               18068000
                   Y:=SZ;                                               18069000
              END;                                                      18070000
              DISKWAIT(HOLDLIST INX 0,SZ,HOLDER.[CF]);                  18071000
         END;                                                           18072000
         IF SZ=Y THEN                                                   18073000
         BEGIN                                                          18074000
              M[LOC+4].[3:1]:=0;                                        18075000
              IF HOLD=2 THEN DISKWAIT(LOC.[CF],30,LOC.[FF]);            18076000
         END;                                                           18077000
         FORGETSPACE(HOLDLIST);                                         18078000
    END;                                                                18079000
END; % OF FILEHOLDER                                                    18080000
%COMMENT THE DISK FILE HEADER CONTAINS THE FOLLOWING INFORMATION:       18081000
%                                                                       18082000
%H[0].[0:15]      RECORD LENGTH                                         18083000
%    .[15:15]     BLOCK LENGTH                                          18084000
%    .[30:12]     RECORD/BLOCK                                          18085000
%    .[42:6]      SEGMENTS/BLOCK                                        18086000
%H[1].[6:18]      CREATION DATE FOR LOGGING (WHEN ON DISK)              18087000
%    .[25:23]     CREATION TIME FOR LOGGING (WHEN ON DISK)              18088000
%    .[1:47]      NUMBER OF LOGICAL RECORDS PER ROW (WHEN IN CORE)      18089000
%H[2].[0:48]      =0  FREE FILE                                         18090000
%    .[1:1]       =0  SOLE USER, PUBLIC OR PRIVATE FILE                 18091000
%    .[1:1]       =1  SECURITY FILE                                     18092000
%    .[6:42]      PRIMARY USER"S CODE                                   18093000
%H[3].[1:1]       =1  NEW FILE HEADER FORMAT                            18094000
%    .[2:10]      SAVE FACTOR (BINARY)                                  18095000
%    .[12:18]     DATE OF LAST ACCESS (BINARY)                          18096000
%    .[30:18]     CREATION DATE (BINARY)                                18097000
%H[4].[1:1]       =1   FILE IS BEING LOADED OR NAME IS BEING CHANGED    18098000
%    .[2:1]       =1   FILE IS OPENED BY AN EXCLUSIVE USER              18099000
%    .[3:1]       =1   A PROGRAM IS WAITING TO USE THE FILE             18100000
%    .[4:2]       SYSTEM NUMBER OF EXCLUSIVE USER                       18101000
%    .[6:1]       USED BY AUTOPRINT TO MARK A PBD FILE                  18102000
%    .[7:1]       USED TO MARK PSEUDO DECKS THAT WERE CREATED ON        18103000
%    .[8:1]       USED TO MARK SPECIAL COMPILERS                        18104000
%    .[9:2]       =2  FILE IS DATA                                      18105000
%                 =3  FILE IS PROGRAM                                   18106000
%                 =0  DON"T KNOW IF DATA OR PROGRAM                     18107000
%    .[11:1]      FILE ACCESSED BIT                                     18108000
%    .[12:4]      SYSTEM FILE TOGGLES                                   18109000
%    .[16:5]      OPEN COUNT 2 FOR SYSTEM 0 (A)                         18110000
%    .[21:5]      OPEN COUNT 2 FOR SYSTEM 1 (B)                         18111000
%    .[26:5]      OPEN COUNT 2 FOR SYSTEM 2 (C)                         18112000
%    .[31:5]      OPEN COUNT 2 FOR SYSTEM 3 (D)                         18113000
%    .[36:6]      =0 TYPE IS UNKNOWN                                    18114000
%                 =1  BASIC                                             18115000
%                 =2  ALGOL                                             18116000
%                 =3  COBOL                                             18117000
%                 =4  FORTRAN                                           18118000
%                 =5  TSPOL                                             18119000
%                 =6  XALGOL                                            18120000
%                 =7  SEQ                                               18121000
%                 =8  DATA                                              18122000
%                 =9  LOCK                                              18123000
%    .[42:6]      NOT USED                                              18124000
%H[5].[0:48]      =0  SOLE USER FILE                                    18125000
%    .[1:1]       =1 PRIVATE FILE                                       18126000
%                 =12 IF H[6]=12 THEN INFO FILE ELSE PUBLIC FILE        18127000
%H[7]             NUMBER OF LOGICAL RECORDS (EOF POINTER)               18128000
%H[8]             NUMBER OF SEGMENTS PER ROW                            18129000
%H[9].[1:1]       TOGGLE 1 FOR SYSTEM 0 (A)                             18130000
%    .[2:1]       TOGGLE 1 FOR SYSTEM 1 (B)                             18131000
%    .[3:1]       TOGGLE 1 FOR SYSTEM 2 (C)                             18132000
%    .[4:1]       TOGGLE 1 FOR SYSTEM 3 (D)                             18133000
%    .[5:1]       TOGGLE 2 FOR SYSTEM 0 (A)                             18134000
%    .[6:1]       TOGGLE 2 FOR SYSTEM 1 (B)                             18135000
%    .[7:1]       TOGGLE 2 FOR SYSTEM 2 (C)                             18136000
%    .[8:1]       TOGGLE 2 FOR SYSTEM 3 (D)                             18137000
%    .[9:5]       OPEN COUNT 1 FOR SYSTEM 0 (A)                         18138000
%    .[14:5]      OPEN COUNT 1 FOR SYSTEM 1 (B)                         18139000
%    .[19:5]      OPEN COUNT 1 FOR SYSTEM 2 (C)                         18140000
%    .[24:5]      OPEN COUNT 1 FOR SYSTEM 3 (D)                         18141000
%    .[29:14]     NOT USED                                              18142000
%    .[43:5]      MAXIMUM NUMBER OF ROWS                                18143000
%H[10]-H[29]      DISK ADDRESSES OF ROWS (0 IF NOT ASSIGNED)            18144000
%                                                                       18145000
%                                                                       18146000
%THE OPEN COUNTS AND TOGGLES ARE USED IN THE FOLLOWING MANNER:          18147000
%                                                                       18148000
%    TOGGLE 1     TOGGLE 2     OPEN COUNT 1     OPEN COUNT 2            18149000
%      0            0           INPUT ONLY         INPUT                18150000
%      0            1 (OUTPUT)  NOT USED           INPUT                18151000
%      1            0           SHARED             INPUT                18152000
%                                                                       18153000
%END COMMENT;                                                           18154000
    REAL  PROCEDURE  DIRECTORYSEARCH(A,B,OPTN);%                        18155000
         VALUE  A,B,OPTN;  REAL  A,B,OPTN;%                             18156000
%   OPTN= 0   OPENS FOR SHARED USE                                      18157000
%   OPTN= 1   OPENS FOR INPUT                                           18158000
%   OPTN= 2   OPENS FOR OUTPUT                                          18159000
%   OPTN= 3   OPENS FOR WRITELOCK                                       18160000
%   OPTN= 4   OPENS FOR EXCLUSIVE USE                                   18161000
%   OPTN= 5   RETURNS FILE HEADER (UNCHANGED)                           18162000
%   OPTN= 6   REMOVES FILE FROM DISK UNCONDITIONALLY                    18163000
%   OPTN= 7   REMOVES FILE FROM DISK AS SOON AS IT IS NOT IN USE        18164000
%   OPTN= 8   REMOVES FILE HEADER ONLY                                  18165000
%   OPTN= 9   HEADERUNLOCK--WRITES HEADER POINTED TO BY (F-4).[CF]      18166000
%             BACK OUT ON (F-4).[FF], TURNS OFF INTERLOCK & DOES        18167000
%             FORGETSPACE(F-4).                                         18168000
%   OPTN=10   CLOSE SHARED                                              18169000
%   OPTN=11   CLOSE INPUT                                               18170000
%   OPTN=12   CLOSE OUTPUT                                              18171000
%   OPTN=13   CLOSE WRITELOCK                                           18172000
%   OPTN=14   CLOSE EXCLUSIVE                                           18173000
%   OPTN=15   LOGS THE FILE AND RESETS ITS CREATION DATE AND TIME       18174000
%   OPTN=16   MAKES THE FILE NOT A SYSTEM FILE                          18175000
%   OPTN=17   MAKES THE FILE A SYSTEM FILE                              18176000
%   OPTN=18   WILL INTERLOCK SYSTEM FILES                               18177000
%   OPTN=19   RESETS ACCESSD BIT (FH[4].[11:1])                         18178000
%   OPTN=20   SETS ACCESSD BIT                                          18179000
%   OPTN>512  FILECLOSE--ADDRESS OF HEADER IN OPTN.[CF]                 18180000
%                        CLOSE OPTION-10 IS IN OPTN.[FF]                18181000
%   OPTN< 0   RETURNS AN AREA OF USER DISK AND UPDATES CORE COPY        18182000
%             OF FILE HEADER--ADDRESS OF HEADER IS IN OPTN.[CF]--       18183000
%             NUMBER OF THE ROW TO BE FILLED IS IN OPTN.[FF]            18184000
%             IS IN OPTN.[CF]                                           18185000
%   A.[1:1]   DIRECTORYSEARCH WILL FORGET THE MEMORY SPACE              18186000
%             OCCUPIED BY THE FILE HEADER                               18187000
%   A.[2:1]   IS DIALED INTO FH[4].[1:1] WHEN OPTN=4                    18188000
%   A.[3:1]   IF A CONFLICT OCCURS, A "QT" WILL BE ENABLED. IF IT       18189000
%             ENTERED BY THE OPERATOR, THE "QT" WILL CAUSE A            18190000
%             VALUE OF -0 TO BE RETURNED BY DIRECTORYSEARCH.            18191000
%   B.[1:1]   DIRECTORYSEARCH WILL RETURN A VALUE OF -0 IF THE          18192000
%             FILE IS IN USE                                            18193000
%   B.[2:1]   WILL NOT UPDATE DATE OF LAST ACCESS                       18194000
%                                                                       18195000
BEGIN                                                                   18196000
         REAL OLDONE=-4;                                                18197000
         REAL TEMP,I,T,TOG,J,K,N,F,X;                                   18198000
         INTEGER S,I1,I2,I3;                                            18199000
         ARRAY FH[*],NB[*];                                             18200000
         DEFINE DSED=TERMIX.[CF]=P1MIX#;                                18201000
         LABEL EXT,CHECK,LWS;                                           18202000
         LABEL OPENSHARED,OPENINPUT,OPENOUTPUT,OPENWRITELOCK,           18203000
              OPENEXCLUSIVE,L6,L7,L8,EXIT,LWRITE,FOUND,                 18204000
              THU,CLOSE,LW,BOMB,GETAROW,EX,                             18205000
              CLOSESHARED,CLOSEINPUT,CLOSEOUTPUT,CLOSEWRITELOCK,        18206000
              CLOSEXCLUSIVE,ZER,UNSYS,SYS,                              18207000
              SEE,LOCKSYS,RSET,DONTWAIT,NOFILE;                         18208000
$ INCLUDE 18210001, IF DISKLOG;                                         18209000
         LABEL LOGIT;                                                   18210000
$INCLUDE 18210101, IF SHAREDISK;                                        18210099
         LABEL ONE,TOG1,TOG2,STOG;                                      18210100
         SWITCH Q~OPENSHARED,OPENINPUT,OPENOUTPUT,OPENWRITELOCK,        18211000
              OPENEXCLUSIVE,EXIT,L6,L7,L8,EXIT,                         18212000
              CLOSESHARED,CLOSEINPUT,                                   18213000
              CLOSEOUTPUT,CLOSEWRITELOCK,CLOSEXCLUSIVE                  18214000
$ INCLUDE 18216001, IF DISKLOG;                                         18215000
              ,LOGIT                                                    18216000
$ OMIT 18218001, IF DISKLOG;                                            18217000
              ,EXIT                                                     18218000
              ,UNSYS,SYS                                                18219000
              ,LOCKSYS,RSET,RSET                                        18220000
              ;                                                         18221000
    %*************************************************                  18222000
    REAL SUBROUTINE SEARCH;                                             18223000
    BEGIN                                                               18224000
         S:=SCRAMBLE(A,B);                                              18225000
         DO BEGIN DISKWAIT(-N,60,S);                                    18226000
              FOR X ~ 0 STEP 3 UNTIL 57 DO                              18227000
                   IF (NB[X] EQV A.[6:42])=NOT 0 THEN                   18228000
                   IF (NB[X+1] EQV B.[6:42])=NOT 0 THEN GO TO FOUND;    18229000
         END UNTIL (S~NB[2].[FF])=0;                                    18230000
         GO TO EXT;                                                     18231000
    FOUND: I~(K~NB[X+2].[CF]-DIRECTORYTOP-4).[44:4]|2;                  18232000
         J ~(K AND NOT 15)+DIRECTORYTOP+19;                             18233000
         K ~ K+DIRECTORYTOP+4;                                          18234000
    EXT: SEARCH ~ S;                                                    18235000
    END;                                                                18236000
    %*************************************************                  18237000
    SUBROUTINE HEADER;                                                  18238000
    BEGIN                                                               18239000
         DISKWAIT(-F,30,K);                                             18240000
         TEMP:=F&K[CTF]&I[8:38:10];                                     18241000
    END;                                                                18242000
    %*************************************************                  18243000
    SUBROUTINE REMOVER;                                                 18244000
    BEGIN NB[X]~@14;                                                    18245000
         DISKWAIT(N,60,S);                                              18246000
         DISKWAIT(-N,30,J);                                             18247000
         NB[I]~@14; NB[I+1]~NEXTSLOT; NEXTSLOT~K;                       18248000
         DISKWAIT(N,30,J);                                              18249000
    END;                                                                18250000
    %*************************************************                  18251000
    SUBROUTINE HOLD;                                                    18252000
    BEGIN                                                               18253000
         IF B.[1:1] THEN GO DONTWAIT;                                   18254000
         FILEHOLD(A,B,TOG,TEMP,1);                                      18255000
         IF P1MIX!0 THEN                                                18256000
         IF DSED THEN GO TO NOFILE ELSE                                 18257000
    IF(JAR[P1MIX,0] EQV "LIBMAIN")=NOT 0 THEN                           18257100
    IF(JAR[P1MIX,1] EQV "DISK   ")=NOT 0 THEN                           18257200
         IF PRT[P1MIX,@25]=5 THEN                                       18258000
         BEGIN                                                          18259000
              FILEHOLD(A,B,TOG,TEMP,2);                                 18260000
    DONTWAIT:                                                           18260500
              TEMP:=-0;                                                 18261000
              GO TO EXIT;                                               18262000
         END;                                                           18263000
         IF SEARCH=0 THEN                                               18264000
         BEGIN                                                          18265000
NOFILE:       TEMP:=0;                                                  18266000
              A:=-1;                                                    18267000
              GO TO EXIT;                                               18268000
         END;                                                           18269000
         HEADER;                                                        18270000
    END; % OF HOLD                                                      18271000
    %*************************************************                  18272000
         LOCKDIRECTORY;                                                 18273000
         IF OPTN=9 THEN                                                 18274000
         BEGIN                                                          18275000
              K:=OLDONE.[FF];                                           18276000
              FH:=[M[N:=F:=OLDONE.[CF]]]&30[8:38:10];                   18277000
              GO TO CLOSEXCLUSIVE;                                      18278000
         END;                                                           18279000
         NB:=[M[N:=SPACE(60)]]&60[8:38:10];                             18280000
         IF SEARCH=0 THEN                                               18281000
         BEGIN                                                          18282000
              A:=0;                                                     18283000
              GO TO EXIT;                                               18284000
         END;                                                           18285000
         FH:=[M[F:=SPACE(30)]]&30[8:38:10];                             18286000
         HEADER;                                                        18287000
         IF OPTN<0 THEN GO GETAROW;                                     18288000
         IF OPTN}512 THEN GO TO Q[OPTN.[FF]+10];                        18289000
         IF OPTN LSS 5 OR OPTN=17 OR OPTN=7 THEN                        18290000
    CHECK:                                                              18291000
         BEGIN                                                          18292000
              IF NOT OPTN OR OPTN=7 THEN IF FH[4].[12:4]!0 THEN         18293000
              BEGIN   %   IT IS A SYSTEM FILE                           18294000
                   TEMP:=  -1;                                          18295000
                   GO TO EXIT;                                          18296000
              END;                                                      18297000
    SEE:                                                                18298000
         IF (FH[4].[2:2] AND (NOT TOG OR 2))!0 THEN                     18299000
              BEGIN                                                     18300000
                   HOLD;                                                18301000
                   GO CHECK;                                            18302000
              END;                                                      18303000
         END;                                                           18305000
         GO TO Q[OPTN];                                                 18306000
    OPENSHARED:                                                         18307000
         IF FH[9].[5:4]=0 THEN                                          18308000
         IF FH[9].[1:4]!0 OR FH[9].[9:20]=0 THEN                        18309000
         BEGIN                                                          18310000
$INCLUDE 18314001, IF SHAREDISK;                                        18310999
              P(SYSNO); ::P(.ONE,+,LOD); T~P;                           18311000
              FH[9].[ 9:20]~P(DUP).[ 9:20]+T;                           18312000
              P(SYSNO); ::P(.TOG1,+,LOD); T~P;                          18313000
              FH[9]~P(DUP,LOD) OR T;                                    18314000
$OMIT 18314201, IF SHAREDISK;                                           18314099
              FH[9].[9:5]:=P(DUP).[9:5]+1;                              18314100
              FH[9].[1:1]:=1;                                           18314200
              GO TO LWRITE;                                             18315000
         END;                                                           18316000
         HOLD;                                                          18317000
         GO TO OPENSHARED;                                              18318000
    OPENINPUT:                                                          18319000
$INCLUDE 18321001, IF SHAREDISK;                                        18319999
         P(SYSNO); ::P(.ONE,+,LOD); T~P;                                18320000
         FH[4].[16:20]~P(DUP).[16:20]+T;                                18321000
$OMIT 18321101, IF SHAREDISK;                                           18321099
         FH[4].[16:5]:=P(DUP).[16:5]+1;                                 18321100
         GO TO LWRITE;                                                  18322000
    OPENOUTPUT:                                                         18323000
         IF FH[9].[5:24]=0 THEN                                         18324000
         BEGIN                                                          18325000
$INCLUDE 18327001, IF SHAREDISK;                                        18325999
              P(SYSNO); ::P(.TOG2,+,LOD); T~P;                          18326000
              FH[9]~P(DUP,LOD) OR T;                                    18327000
$OMIT 18327101, IF SHAREDISK;                                           18327099
              FH[9].[5:1]:=1;                                           18327100
              GO TO LWRITE;                                             18328000
         END;                                                           18329000
         HOLD;                                                          18330000
         GO TO OPENOUTPUT;                                              18331000
    OPENWRITELOCK:                                                      18332000
         IF FH[9].[1:8]=0 THEN                                          18333000
         BEGIN                                                          18334000
$INCLUDE 18336001, IF SHAREDISK;                                        18334999
              P(SYSNO); ::P(.ONE,+,LOD); T~P;                           18335000
              FH[9].[9:20]~P(DUP).[9:20]+T;                             18336000
$OMIT 18336101, IF SHAREDISK;                                           18336099
              FH[9].[9:5]:=P(DUP).[9:5]+1;                              18336100
              GO TO LWRITE;                                             18337000
         END;                                                           18338000
         HOLD;                                                          18339000
         GO TO OPENWRITELOCK;                                           18340000
    OPENEXCLUSIVE:                                                      18341000
         IF FH[9].[9:20]=0 THEN                                         18342000
         IF FH[4].[16:20]=0 THEN                                        18343000
         BEGIN                                                          18344000
              FH[4]:=(P(DUP,LOD))&SYSNO[4:46:2]&1[2:47:1]&A[1:2:1];     18345000
              GO TO LWRITE;                                             18346000
         END;                                                           18347000
         HOLD;                                                          18348000
         GO TO OPENEXCLUSIVE;                                           18349000
    CLOSESHARED:                                                        18350000
$INCLUDE 18357001, IF SHAREDISK;                                        18350999
         P(SYSNO); ::P(.ONE,+,LOD); T~P;                                18351000
         IF ((I:=FH[9].[9:20]-T) AND T|31)=0 THEN                       18352000
         BEGIN                                                          18353000
              P(SYSNO); ::P(.TOG1,+,LOD,NOT); T~P;                      18354000
              FH[9]~P(DUP,LOD) AND T;                                   18355000
         END;                                                           18356000
         FH[9].[9:20]~I;                                                18357000
$OMIT 18357301, IF SHAREDISK;                                           18357099
         IF (I:=FH[9].[9:5]-1)=0 THEN                                   18357100
         FH[9].[1:1]:=0;                                                18357200
         FH[9].[9:5]:=I;                                                18357300
         GO TO CLOSE;                                                   18358000
    CLOSEINPUT:                                                         18359000
$INCLUDE 18361001, IF SHAREDISK;                                        18359999
         P(SYSNO); ::P(.ONE,+,LOD); T~P;                                18360000
         FH[4].[16:20]~P(DUP).[16:20]-T;                                18361000
$OMIT 18361101, IF SHAREDISK;                                           18361099
         FH[4].[16:5]:=P(DUP).[16:5]-1;                                 18361100
         GO TO LW;                                                      18362000
    CLOSEOUTPUT:                                                        18363000
$INCLUDE 18365001, IF SHAREDISK;                                        18363999
         P(SYSNO); ::P(.TOG2,+,LOD,NOT); T~P;                           18364000
         FH[9]~P(DUP,LOD) AND T;                                        18365000
$OMIT 18365101, IF SHAREDISK;                                           18365099
         FH[9].[5:1]:=0;                                                18365100
         GO TO CLOSE;                                                   18366000
    CLOSEWRITELOCK:                                                     18367000
$INCLUDE 18369001, IF SHAREDISK;                                        18367999
         P(SYSNO); ::P(.ONE,+,LOD); T~P;                                18368000
         FH[9].[9:20]~P(DUP).[9:20]-T;                                  18369000
$OMIT 18369101, IF SHAREDISK;                                           18369099
         FH[9].[9:5]:=P(DUP).[9:5]-1;                                   18369100
         GO TO LW;                                                      18370000
    CLOSEXCLUSIVE:                                                      18371000
         FH[4].[1:2]~0;                                                 18372000
    GO TO CLOSE;                                                        18373000
    SYS:                                                                18388000
         IF FH[9].[1:8]=0 THEN                                          18389000
         BEGIN                                                          18390000
$INCLUDE 18392001, IF SHAREDISK;                                        18390999
              P(SYSNO); ::P(.STOG,+,LOD); T:=P;                         18391000
              FH[4]:=P(DUP,LOD) OR T;                                   18392000
$OMIT 18392101, IF SHAREDISK;                                           18392099
              FH[4].[12:1]:=1;                                          18392100
              GO TO LWRITE;                                             18393000
         END;                                                           18394000
         HOLD;                                                          18395000
         GO TO SYS;                                                     18396000
    UNSYS:                                                              18397000
$INCLUDE 18399001, IF SHAREDISK;                                        18397999
         P(SYSNO); ::P(.STOG,+,LOD,NOT); T:=P;                          18398000
         FH[4]:=P(DUP,LOD) AND T;                                       18399000
$OMIT 18399101, IF SHAREDISK;                                           18399099
         FH[4].[12:1]:=0;                                               18399100
         GO TO LW;                                                      18400000
    LOCKSYS:                                                            18401000
         OPTN:=4;                                                       18402000
         GO SEE;                                                        18403000
$INCLUDE 18410001, IF SHAREDISK;                                        18403999
    STOG :::  @400000000000, @200000000000,                             18404000
              @100000000000, @40000000000;                              18405000
    ONE  :::  32768, 1024, 32, 1;                                       18406000
    TOG1 :::  @2000000000000000,  @1000000000000000,                    18407000
              @400000000000000,   @200000000000000;                     18408000
    TOG2 :::  @100000000000000,   @40000000000000,                      18409000
              @20000000000000,    @10000000000000;                      18410000
$ INCLUDE 18420001, IF DISKLOG;                                         18411000
    LOGIT:                                                              18412000
         IF FH[4].[12:4]!0 THEN GO TO EXIT; % IT IS A SYSTEM FILE       18413000
         IF FH[4].[2:1] THEN                                            18414000
         BEGIN                                                          18415000
              HOLD;                                                     18416000
              GO LOGIT;                                                 18417000
         END;                                                           18418000
         DISKLOG(A,B,FH);                                               18419000
         GO TO LW;                                                      18420000
    GETAROW:                                                            18421000
         IF FH[I:=OPTN.[FF]]=0 THEN                                     18422000
         BEGIN                                                          18423000
$ INCLUDE 18425001, IF DISKLOG;                                         18424000
              DISKLOG(A,B,FH);                                          18425000
              FH[I]:=GETUSERDISK(-FH[8]);                               18426000
         END;                                                           18427000
         FOR I~FH[9].[43:5]+9 STEP -1 UNTIL 10 DO                       18428000
              M[OPTN INX I]~FH[I];                                      18429000
         GO TO LW;                                                      18430000
    CLOSE:                                                              18431000
         IF B.[3:1] THEN FH[4].[11:1] ~ 1;                              18431050
         IF OPTN GTR 511 THEN                                           18431100
         BEGIN                                                          18431200
              IF (FH[0] EQV M[OPTN])!NOT 0 THEN                         18431300
              IF (I1:=(((I1:=((((I2:=FH[7]+1) DIV (I3:=FH[0]).[30:12])  18431400
                   |I3.[42:6])|30)+(I2 MOD I3.[30:12])                  18431500
                   |(IF (I2:=I3.[1:14])=0 THEN 30 ELSE I2)) DIV 30)     18431600
                   DIV (I3:=M[OPTN]).[42:6])|I3.[30:12]                 18431700
                   +((((I1 DIV 30) MOD I3.[42:6])|30                    18431800
                   +I1 MOD 30+I3.[1:14]-1) DIV I3.[1:14])-1)            18431900
                   =M[OPTN+7] THEN GO TO LW;                            18432000
              FH[0]:=M[OPTN];                                           18432100
              FH[7]:=M[OPTN+7];                                         18432200
         END;                                                           18432300
         GO TO LW;                                                      18432400
    L7:%                                                                18432500
         IF (FH[4] AND @1400777777770000)!0 OR                          18432600
              FH[9].[1:28]!0 THEN                                       18433000
         BEGIN                                                          18434000
              HOLD;                                                     18435000
              GO TO L7;                                                 18436000
         END;                                                           18437000
    L6:%                                                                18438000
         IF LIBMSG THEN LBMESS(ABS(A),B,"REMOVED",0,0,0,0);             18439000
$ INCLUDE 18441001, IF DISKLOG;                                         18440000
         IF NOT FH[4].[1:1] THEN DISKLOG(A,B,FH);                       18441000
         PBCOUNT~PBCOUNT-((((A EQV"PBD    ")=NOT 0) OR                  18442000
                ((A EQV"PUD    ")=NOT 0)) AND (B.[CF]=1));              18443000
         REMOVER;                                                       18444000
         FOR I ~ 1 STEP 1 UNTIL FH[9] DO%                               18445000
         IF  FH[9+I]!0  THEN  FORGETUSERDISK(FH[I+9],FH[8]);%           18446000
         GO TO LW;                                                      18447000
    L8:  REMOVER;                                                       18448000
         GO TO EXIT;                                                    18449000
    RSET:                                                               18450000
         FH[4].[11:1]:=(OPTN=20);                                       18451000
STREAM(DATE,J~5);BEGIN SI~LOC DATE;DS~8OCT END;FH[3].[12:18]~JUNK;      18451500
         GO TO LWS;                                                     18452000
    LWRITE:%                                                            18453000
         IF NOT B.[2:1] THEN                                            18454000
         STREAM(A~[DATE],B~[FH[3]],C~0);                                18455000
         BEGIN SI~A;DI~LOC C;DS~8 OCT;SI~LOC C;SI~SI+5;                 18456000
              DI~B;DI~DI+2;DS~3 CHR;                                    18457000
         END;                                                           18458000
    LW:                                                                 18459000
         IF FH[4].[3:1] OR TOG THEN FILEHOLD(A,B,TOG,TEMP,0);           18460000
    LWS:                                                                18460500
         DISKWAIT(F,30,K);                                              18461000
EX:      FH[9]:=(*P(DUP)) AND 31;                                       18462000
    EXIT:%                                                              18463000
         FORGETSPACE (N);%                                              18464000
         IF A.[1:1] OR TEMP.[1:1] THEN FORGETSPACE(F);                  18465000
         UNLOCKDIRECTORY;                                               18466000
         DIRECTORYSEARCH~TEMP;                                          18467000
END; % OF DIRECTORYSEARCH                                               18468000
PROCEDURE COMMUNICATE;                                                  19000000
BEGIN REAL R4=-4,R5=-5,R6=-6,R7=-7,R8=-8;                               19001000
      INTEGER I4=-4,I5=-5,I6=-6;                                        19002000
      ARRAY A4=-4[*],A5=-5[*],A6=-6[*];                                 19003000
      ARRAY A7=-7[*];                                                   19003100
      NAME N4=-4,N5=-5,N6=-6;                                           19004000
      LABEL C0,C1,C2,C3,C4,C5,C6,C7,C8,C9,C10,C11,C12,C13,C14,C15,C16,  19005000
            C17,C18,C19,C20,C21,C22,C23,C24,C25,C26;                    19006000
      LABEL C27,C28,C29,C30,C31,C32;                                    19006100
     LABEL C33,C34,C35;                                                 19006200
    LABEL C21A;                                                         19006250
    LABEL INIT;                                                         19006300
      LABEL C36,C37,C38,C39;                                            19006400
    SWITCH C:=C0,INIT,INIT,INIT,C4,INIT,C6,C7,C8,INIT,                  19007000
              INIT,INIT,C12,INIT,INIT,C15,C16,C17,C18,INIT,             19008000
              C20,C21,C22,INIT,INIT,INIT,C26,INIT,INIT,C29,             19008100
         C30,INIT,C32,C33,C34,INIT,INIT,C37,C38,INIT;                   19008200
      LABEL US,D,TD,PR,IOT,TMR;                                         19009000
      DEFINE CN=DIFFCOM#;                                               19009100
      SWITCH S:=US,D,TD,PR,IOT,TMR;                                     19010000
      LABEL AC0,AC1,AC2,AC3,AC4,AC5;                                    19010100
     SWITCH AC ~ AC0,AC1,AC2,AC3,AC4,AC5;                               19010200
      REAL I,J,T,RCW=+0;                                                19011000
      ARRAY AIT[*]; REAL AITL=AIT; ARRAY A=AIT[*];                      19012000
          ARRAY FIB=AIT[*],FPB[*],H[*];LABEL CHANGENAME;                19012100
      NAME ADDR;                                                        19012110
      DEFINE BITS=(IF SB THEN DS~SET ELSE DS~RESET; SKIP SB)#;          19012200
%                                                                       19013000
      CHECKSTACKSPACE;%                                             %WF 19013100
      GO TO C[PRT[P1MIX,9]];                                            19014000
INIT: GO TO INITIATE;                                                   19014100
%     COBOL INVALID EOJ                                                 19015000
C0:   TERMINATE(P1MIX); TERMINALMESSAGE(28);                            19016000
%     GENERALIZED ZIP                                                   19041000
C4:   IF (I~A4.[8:10])!0 THEN BEGIN                                     19042000
      M[(T:=GETSPACE(I+4,0,0)+4)-4].[9:6]:=0;                           19042100
      IF NOT A4.[2:1] THEN MAKEPRESENT(NFLAG(NOT 3 INX [RCW]));         19043000
      IF (J~USERCODE[P1MIX])=ABS(NOT 0) THEN J~0;                       19043500
      STREAM(C~J,A4,I1~I.[36:6],I,Q~0,T);                               19044000
      BEGIN SI:=A4; SI:=SI-1;                                           19044100
      L:    SI:=SI+1; IF SC=" " THEN GO TO L; Q:=SI; DI:=Q;             19044200
            IF SC=@14 THEN DS:=LIT" " ELSE DS:=2LIT"  "; DI:=T;         19044300
            DS:=8LIT"CC USER="; SI:=LOC C; SI:=SI+1; DS:=7 CHR;         19044400
            DS:= LIT";" ; SI:=A4;                                       19044500
            I1(DS:=32WDS; DS:=32WDS);  DS:= I WDS;                      19044600
                    TALLY:=12;I:=TALLY;                                 19044610
                    DI:=Q;SI:=LOC I;SI:=SI+7;DS:=CHR;                   19044620
      END STREAM;                                                       19044700
      J~IF USERCODE[P1MIX]=ABS(NOT 0) THEN 31 ELSE 26;                  19044800
      INDEPENDENTRUNNER(P(.CONTROLCARD),T                               19045000
$ INCLUDE 19045006, IF DATACOM AND RJE AND NOT INQUIRY;                 19045004
                                        &JAR[P1MIX,6][9:9:9]            19045005
                                        &J[3:43:5]);                    19045007
         END ELSE                                                       19045010
         BEGIN FIB~N4[NOT 2];                                           19045020
              FPB~PRT[P1MIX,3];                                         19045030
              I~IF FIB[4].[12:1] THEN FIB[4].[13:11]                    19045040
                                 ELSE (FIB[4].[13:11]-1)|ETRLNG;        19045050
              T~FPB[I+3].[43:5];                                        19045060
              IF T=10 OR T=12 OR T=13 THEN                              19045070
              BEGIN                                                     19045075
                   IF FIB[5].[42:1] THEN GO TO CHANGENAME;              19045080
                   H~FIB[14];                                           19045090
                   H[5]:=USERCODE[P1MIX];                               19045095
$ INCLUDE 19045098, IF DATACOM AND RJE AND NOT INQUIRY;                 19045096
                   H[6]:=0&JAR[P1MIX,6][9:9:9];                         19045097
                   IF H[4] THEN %                                       19045100
                   BEGIN FILECLOSE(N4.[33:15]);                         19045110
    CHANGENAME:          IF (T~DIRECTORYSEARCH(FPB[I],FPB[I+1],4))=0    19045120
                            THEN GO TO INITIATE;                        19045130
                         H~[M[T]]&30[8:38:10];                          19045140
                         H[5]:=USERCODE[P1MIX];                         19045145
                         ENTERCONTROLDECK(H);                           19045150
                         IF (T~DIRECTORYSEARCH(FPB[I],FPB[I+1],8))!0    19045160
                            THEN FORGETSPACE(T);                        19045170
                         FORGETSPACE(H);                                19045180
                   END ELSE                                             19045190
                   BEGIN FILECLOSE((N4.[33:15])&6[18:33:15]);           19045200
                         ENTERCONTROLDECK(H);                           19045210
                         FOR T~10 STEP 1 UNTIL 29 DO H[T]~0;            19045220
                         FILECLOSE(N4.[33:15]);                         19045230
         END  END  END;                                                 19045240
      GO TO INITIATE;                                                   19046000
%     WHEN                                                              19049000
C6:   I4~60|I4+P(RTR)+CLOCK;                                            19050000
      WHILE TERMIX.[33:15]!P1MIX AND CLOCK+P(RTR)<I4 DO                 19051000
            SLEEP([CLOCK],NOT CLOCK);                                   19052000
      GO TO INITIATE;                                                   19053000
%     FILL                                                              19054000
C7:   IF NOT A5.[2:1] THEN MAKEPRESENT(NFLAG(NOT 0 INX [I4]));          19055000
      I~M[A5 INX NOT 0]; J~M[A5 INX NOT 1];                             19056000
      P([M[A5 INX NOT 1]],IOR);                                         19057000
      IF (NT2~(NT1~*(I4 INX PRT[P1MIX,4])).[18:15])>NT3~A5.[8:10] THEN  19058000
            NT2~NT3;                                                    19059000
      I4~(IF JAR[P1MIX,10]!0 THEN JAR[P1MIX,(NT1~NT1.[CF])              19059500
      DIV (NT3~JAR[P1MIX,8])+10]+NT1 MOD NT3                            19060000
      ELSE DALOC[P1MIX,NT1.[33:6]+P(DUP)-1]+NT1.[39:9]);                19061000
      DISKWAIT(-A5.[CF],NT2,I4);                                        19062000
      M[A5 INX NOT 0]~I;                                                19063000
      IF NOT J.[2:1] THEN P([M[A5 INX NOT 1]],PRL);                     19064000
      GO TO INITIATE;                                                   19065000
%     PLAIN ZIP                                                         19066000
C8:   ZIPPER(R5,R4,0);                                                  19067000
      GO TO INITIATE;                                                   19068000
%     BREAKOUT                                                          19083000
C12:                                                                    19084000
$INCLUDE 19085001, IF BREAKOUT;                                         19084001
      P(.COM12); GO CN;                                                 19085000
      GO TO INITIATE;                                                   19086000
%     DISPLAY (COBOL)                                                   19093000
C15:  DISPLAY(A4 INX 1); GO TO INITIATE;                                19094000
%     COBOL ACCEPT                                                      19095000
C16:  DISPLAY(A4 INX 2); REPLY[P1MIX]~-@612;                            19096000
      COMPLEXSLEEP((TERMIX.[33:15]=P1MIX OR REPLY[P1MIX]>0));           19097000
      IF TERMIX.[33:15]=P1MIX THEN GO TO INITIATE;                      19098000
      IF NOT WHYSLEEP(@612) THEN GO TO C16;                             19099000
      T~REPLY[P1MIX].[18:15]; REPLY[P1MIX]~0;                           19100000
      STREAM(T,S~A4 INX 2);                                             19101000
            BEGIN SI~T;                                                 19102000
            L:    IF SC!"X" THEN BEGIN SI~SI+1; GO TO L END;            19103000
                  SI~SI+1; 2(DS~40 CHR);                                19104000
            END;                                                        19105000
      FORGETSPACE(T-1); GO TO INITIATE;                                 19106000
%     COBOL I/O ERROR                                                   19107000
C17:  A5~*A5; A~PRT[P1MIX,3]; I~"I/O ERR";                              19108000
      IF A5[5].[1:1] THEN                                               19108100
         BEGIN I:= "INVALID";J:="   USER"; R6:=1 END ELSE               19108200
      STREAM(R4,N~[J]); BEGIN SI~LOC R4; DI~DI+1; DS~7 DEC;             19109000
                              DI~DI-7; DS~5 FILL;                       19110000
                        END;                                            19111000
      FILEMESS(I&R6[1:47:1],J,A[T~A5[4].[13:11]],A[T+1],                19112000
              IF R4~(R4=16 OR R4=17 OR R4=82) THEN R8 ELSE 0,           19112100
               IF R4 THEN R7 ELSE 0,0);                                 19112200
      GO TO INITIATE;                                                   19113000
%     ERROR - INQUIRY WRITE                                             19114000
C18:                                                                    19115000
$INCLUDE 19115101, IF DATACOM AND NOT INQUIRY;                          19115099
      TERMINATE(P1MIX); TERMINALMESSAGE(20);                            19115100
$INCLUDE 19115201, IF INQUIRY AND NOT DATACOM;                          19115199
      P(.COM18); GO TO CN;                                              19115200
%     TAPE SWAP FOR TAPE SORT                                           19118000
C20:  SLEEP([N4[3]],IOMASK); SLEEP([N4[4]],IOMASK);                     19119000
      FOR I~3 STEP 1 UNTIL 4 DO                                         19120000
      BEGIN N5[I].[33:15]~N4[I];                                        19121000
            M[N4[I] INX NOT 1]~(*P(DUP))&N5[3][14:3:4]&[N5[3]][33:33:15]19122000
      END;                                                              19123000
      A~N4[0]; A[5].[39:4]~2; A[16]~0; A[18]~NABS(*P(DUP));             19124000
      NT4~A[10].[3:15]; A[10].[3:15]~0;                                 19124100
      A~N5[0]; A[5]~0; A[16]~NFLAG(N5[3]); A[18]~ABS(*P(DUP));          19125000
      A[10].[3:15]~NT4;                                                 19125100
      GO TO INITIATE;                                                   19126000
%     SORT STORAGE ASSIGNMENT                                           19127000
C21:  A~[M[GETSPACE(R6+R5,2,1)+2]]&R5[8:38:10];                         19128000
      A[0]~(R5 INX A)&R6[8:38:10];                                      19129000
      N4[0]~A;                                                          19131000
      IF NOT CONQUER(0,R5-1,R6,1 INX A,J) THEN                          19131100
      BEGIN FORGETSPACE(A);                                             19131110
C21A: STREAM(P1MIX,T~R5|R6,A~I~SPACE(7));                               19131120
      BEGIN DS~LIT "#"; SI~LOC P1MIX;                                   19131130
            DS~2 DEC; DS~ 13 LIT " NO SORT MEM:";                       19131140
            DS~5 DEC; DS~9 LIT " WDS RQD~";                             19131150
      END;                                                              19131160
      SPOUT(I);                                                         19131170
      REPLY[P1MIX]~-@30412;                                             19131180
      COMPLEXSLEEP(REPLY[P1MIX]>0 OR TERMIX.[CF]=P1MIX);                19131190
      IF TERMIX.[CF]=P1MIX THEN GO TO INITIATE;                         19131200
      IF NOT WHYSLEEP(@30412) THEN GO TO C21A;                          19131210
      J~REPLY[P1MIX].[CF]=3;                                            19131220
      GO TO C21;                                                        19131230
      END;                                                              19131240
      GO TO INITIATE;                                                   19132000
%     SORT STORAGE RETURN                                               19133000
C22:: I~N4[0] INX 1;                                                    19134000
      DO FORGETSPACE(M[I]) UNTIL (I~M[I].[18:15])=0;                    19135000
      FORGETSPACE(N4[0]); N4[0]~0;                                      19136000
      GO TO INITIATE;                                                   19137000
%     INVALID ARGUMENTS TO ALGOL INTRINSICS                         %WF 19148000
C26:: IF (I ~ R4)}0 THEN                                                19149000
      STREAM(A ~R4, I~I~GETSPACE(10,0,0)+2);                            19149500
      BEGIN SI~LOC I;  SI~SI-1;  DS~LIT "-";                        %WF 19150000
            IF SC}@3 THEN DS~4 LIT "MAXN" ELSE                      %WF 19150100
            IF SC<@2 THEN DS~5 LIT "NEGTV" ELSE DS~4 LIT "ZERO";    %WF 19151000
            DS~8 LIT " ARGMNT ";                                    %WF 19152000
            CI~CI+A;                                                %WF 19152100
            GO LOG;  GO ROOT;  GO LOG;  GO EXP;  GO SIN;            %WF 19152200
            DS~3 LIT "COS";    GO EXIT;                             %WF 19153000
      LOG:  DS~2 LIT "LN";     GO EXIT;                             %WF 19153100
      ROOT: DS~4 LIT "SQRT";   GO EXIT;                             %WF 19153200
      EXP:  DS~3 LIT "EXP";    GO EXIT;                             %WF 19153300
      SIN:  DS~3 LIT "SIN";                                         %WF 19153400
      EXIT: DS~2 LIT " ~";                                          %WF 19154000
      END;                                                              19155000
      IF I=(-7) THEN BEGIN  R4~R5;  R5~R6;  END;                        19155100
      TERMINATE(P1MIX);  TERMINALMESSAGE(-I);                       %WF 19156000
                                                                        19157000
                                                                        19158000
                                                                        19159000
C29:: COMMENT THIS COMMUNICATE PROVIDES FOR DS-ING AN OBJECT PROGRAM    19175000
              AND/OR SPOUTING A MESSAGE ABOUT A PROGRAM.                19175010
              R4 IS USED TO SPECIFY THE  MESSAGE REQUIRED.              19175020
              R5 SET TO TRUE SPECIFIES P1MIX IS TO BE DS-ED.            19175030
              T IS THE ADDRESS OF THE MESSAGE(WHICH ENDS WITH A "~").   19175040
              REMAINING VARIABLES MAY BE USED AS DESIRED;               19175050
    T ~ GETSPACE(12,0,0)+2;                                             19175060
    IF R4 { 2 THEN                                                      19175070
         BEGIN;              % 29-1                                     19175080
         STREAM(J:T);                                                   19175090
              BEGIN          % 29-2                                     19175100
              DS ~  9 LIT "-DEC ERR:";                                  19175110
              J ~ DI;                                                   19175120
              END;           % 29-2                                     19175130
         J ~ P;                                                         19175135
         IF R4=1 THEN                                                   19175140
              BEGIN;         % 29-3                                     19175150
              STREAM(T1~(R6<0),R6~ABS(R6),J);                           19175160
                   BEGIN     % 29-4                                     19175170
                   DS~17 LIT "ARRAY DIMENSION= ";T1(DS~ 1 LIT "-";);    19175180
                   SI ~ LOC R6;                                         19175190
                   DS ~ 8 DEC;  J  ~DI;                                 19175200
                   DI ~ DI-8;                                           19175210
                   DS ~ 7 FILL; DI ~ J;                                 19175220
                   DS ~ 2 LIT " ~";                                     19175230
                   END;      % 29-4                                     19175240
              END            % 29-3                                     19175250
         ELSE                                                           19175260
              BEGIN;         % 29-5                                     19175270
              STREAM(R6,J);                                             19175280
                   BEGIN     % 29-6                                     19175290
                   DS ~15 LIT "NO. DISK ROWS= ";                        19175300
                   SI ~ LOC R6;                                         19175310
                   DS ~ 8 DEC;    J ~ DI;                               19175320
                   DI ~ DI-8;                                           19175330
                   DS ~ 7 FILL;  DI ~ J;                                19175340
                   DS ~ 2 LIT " ~";                                     19175350
                   END;      % 29-6                                     19175360
              END;           % 29-5                                     19175370
         END;                % 29-1                                     19175380
         IF R4=3 THEN                                                   19175381
              BEGIN                                                     19175382
              ;STREAM(T);                                               19175383
                   BEGIN                                                19175385
                   DS~ 18 LIT "-MAXN ARGMNT EXP:~";                     19175387
                   END;                                                 19175388
              END;                                                      19175389
    IF R5 THEN                                                          19175390
         BEGIN               % 29-7                                     19175400
              TERMINATE(P1MIX);                                         19175420
              TERMINALMESSAGE(-T);                                      19175430
         END                 % 29-7                                     19175440
    ELSE                                                                19175450
         SPOUT(T);                                                      19175460
    GO TO INITIATE;                                                     19175470
%   DIRECTORYSEARCH AND UN-FILL FILE ID FOR NORMAL STATE PROGRAMS       19176000
C30::    COMMENT SEARCHES DISK DIRECTORY AND RETURNS DATA IN ARRAY.     19177000
              [0] IS USER-TYPE OR NOT-PRESENT FLAG                      19178000
              [1] IS MULTI-FILE ID                                      19179000
              [2] IS FILE ID                                            19180000
              IF NOT PRESENT, [3] => [5] ARE -1                         19181000
              IF INVALID USER, [3] => [5] ARE 0                         19182000
              IF PRIMARY, SECONDARY, OR TERTIARY USER:                  19183000
              [3] IS RECORD LENGTH                                      19184000
              [4] IS BLOCK LENGTH                                       19185000
              [5] IS END OF FILE POINTER                                19186000
              [6] IS OPEN COUNT                                         19187000
              NOT-PRESENT    FLAG IS  -1                                19188000
              INVALID   USER FLAG IS   0                                19189000
              PRIMARY   USER FLAG IS   7 (LM,INPUT, AND OUTPUT BITS)    19190000
              SECONDARY USER FLAG IS   3 (INPUT AND OUTPUT BITS)        19191000
              TERTIARY  USER FLAG IS   2 (INPUT BIT ONLY)               19192000
      ;                                                                 19193000
      IF A4.[8:10]<7 THEN BEGIN TERMINATE(P1MIX);%                      19200000
                                TERMINALMESSAGE(7);  END;%              19201000
      IF NOT A4.[2:1] THEN MAKEPRESENT(NFLAG(NOT 3 INX [RCW]));%        19202000
      P([M[A4 INX NOT 1]],DUP,DUP,LOD,XCH,CCX,.J,STD,IOR);%             19203000
      FIB ~ N5[NOT 2];  FPB ~ PRT[P1MIX,3];                             19204000
      I ~ IF FIB[4].[12:1] THEN FIB[4].[13:11]%                         19205000
            ELSE (FIB[4].[13:11]-1)|ETRLNG;                             19206000
      A4[1] ~ FPB[I];  A4[2] ~ FPB[I+1];                                19207000
      IF (T ~ DIRECTORYSEARCH(A4[1],A4[2],5))!0 THEN                    19208000
      BEGIN IF (A4[0] ~ SECURITYCHECK(A4[1],A4[2],USERCODE[P1MIX],T))!0 19209000
            THEN BEGIN A4[3] ~ M[T].[1:14];%                            19210000
                  A4[4] ~ M[T].[15:15];  A4[5] ~ M[T+7];%               19211000
$OMIT 19212001, IF SHAREDISK;                                           19211999
                  A4[6]:=M[T+4].[16:5]+M[T+9].[9:5];                    19212000
$INCLUDE 19212061, IF SHAREDISK;                                        19212049
                  A4[6]:=0&(I:=M[T+4].[16:20]+M[T+9].[9:20])[43:28:5] & 19212050
                    I[38:33:5]&I[33:38:5]&I[28:43:5];                   19212060
                  IF A4.[8:10] GTR 9 THEN                               19212100
                  BEGIN A4[7]:=M[T+4].[36:6];  A4[8]:=M[T+3];           19212200
                        A4[9]:=M[T+1];                                  19212300
                  END;                                                  19212400
            END ELSE A4[3]:=A4[4]:=A4[5]:=A4[6]:=0;                     19213000
            FORGETSPACE(T)%                                             19214000
      END ELSE A4[0]:=A4[3]:=A4[4]:=A4[5]:=A4[6]:=-1;                   19215000
      IF NOT J.[2:1] THEN P([M[J]],PRL);%                               19216000
      GO TO INITIATE;%                                                  19217000
C32::                                                                   19226000
$INCLUDE 19271999, IF DATACOM AND NOT INQUIRY;                          19226049
      COMMENT                                                           19226050
      STACK FOR THIS COM IS AS FOLLOWS:  ACTION REQUESTED AS FOLLOWS    19226100
                                      :                                 19227000
           ALGOL     VARB     COBOL   :                                 19228000
           STACK     USED     STACK   : ACTION       R7   R6   R5   A4  19229000
           .............................................................19230000
           ARA/FID   A4       ARA/FID : ALGOL SEEK   0    0    TUB  FID 19231000
           TUBUF     R5       BUF     : COBOL SEEK   0    TU   BUF  FID 19232000
           0         R6       TU      : ALGOL DETACH 2    0    TUB  0   19233000
           FUNC      R7       FUNC    : COBOL DETACH 2    TU   BUF  0   19234000
                                      : RECORD DATA  5    TU/0 BUF/0 ARA19235000
                                      : STATUS(A[*]) 1    0    0    ARA 19236000
                                      : STATUS(STA)  1    0    TUB  0   19236100
                                      : STATUS(FID)  4    0    0    FID;19237000
    IF R7<0 OR R7>5 THEN GO TO INITIATE;                                19237100
     IF R6!0 THEN                                                       19238000
         R5 ~ 0&R6[9:44:4]&R5[14:44:4];                                 19239000
         R5 ~ R5 AND @0007570000000000;                                 19240000
     GO TO AC[R7];                                                      19241000
AC0: SEEKACTION(R5,P1MIX,3,A4);                  % SEEK                 19242000
     GO TO INITIATE;                                                    19243000
AC1: IF P(A4,TOP,XCH,DEL) THEN                                          19244000
         BEGIN R7 ~ IF R5!0 THEN WHATSUP(R5,P1MIX,6,A4) ELSE 0;         19244100
         GO TO INITIATE;                                                19244200
         END;                                                           19244300
     IF NOT A4.[2:1] THEN                                               19244400
         MAKEPRESENT(NFLAG(NOT 3 INX[RCW])); % ALG R5=0 ALL STAS & USERS19245000
     P([M[A4 INX NOT 1]],DUP,DUP,LOD,XCH,CCX,.J,STD,IOR);               19246000
     R7~WHATSUP(R5,P1MIX,6,A4);              % ALG R5!0 ONE STA  & USER 19247000
     IF NOT J.[2:1] THEN P([M[J]],PRL);                                 19248000
     GO TO INITIATE;                                                    19249000
AC2: IF R5.[9:4] ! 0 OR R5.[9:9] = 0 THEN        % R5!0 DETACH STA      19250000
     BEGIN                                       % R5=0 DETACH ALL      19251000
         TACH(R5,P1MIX,0);                                              19252000
     END ELSE                                                           19253000
     BEGIN                                                              19254000
         T ~ GETSPACE(12,0,0)+2;                                        19255000
         STREAM(T);                                                     19256000
              BEGIN DS~ 29 LIT  "-INV DCOM STMT, TU=0, BUF!0 ~"; END;   19257000
         TERMINATE(P1MIX);                                              19258000
         TERMINALMESSAGE(-T);                                           19259000
     END;                                                               19260000
     GO TO INITIATE;                                                    19261000
AC3: SEEKACTION(R5,P1MIX,2,A4);                  % UNSEEK               19262000
     GO TO INITIATE;                                                    19263000
AC4: R7 ~ IF M[A4].[2:1] THEN                    % STA FRM FRNT-O-FID   19264000
         M[M[A4]] ELSE 0;                                               19265000
     GO TO INITIATE;                                                    19266000
AC5: IF NOT A4.[2:1] THEN                                               19267000
         MAKEPRESENT(NFLAG(NOT 3 INX[RCW])); % COB R5=0 ALL STAS & USERS19268000
     P([M[A4 INX NOT 1]],DUP,DUP,LOD,XCH,CCX,.J,STD,IOR);               19269000
     P(WHATSUP(R5,P1MIX,5,A4),DEL);          % COB R5!0 ONE STA  & USER 19270000
     IF NOT J.[2:1] THEN P([M[J]],PRL);                                 19271000
     GO TO INITIATE;                                                    19272000
C33:: STREAM(R4,A~(R4!0),J~JARROW[P1MIX],P1MIX,%                        19273000
                        T~T~GETSPACE(10,0,0)+2);%                       19274000
      BEGIN DS~10 LIT " PAUSE # 0";%                                    19275000
             A(DI~DI-1;  SI~LOC R4;  SI~SI+2;  DS~6 CHR);               19276000
             DS~5 LIT " FOR";  SI~J;  SI~SI+1;  DS~7 CHR;%              19277000
             DS~LIT "/";  SI~SI+1;  DS~7 CHR;  DS~LIT "=";%             19278000
             SI~LOC P1MIX;  DS~2 DEC;  DS~LIT "~";  DI~DI-3;  DS~FILL;% 19279000
      END;%                                                             19280000
      SPOUT(T);%                                                        19281000
      COMPLEXSLEEP((TERMIX.[CF]=P1MIX OR%                               19282000
                   STOPJOB=P1MIX OR STOPJOB=@1777));%                   19283000
      IF STOPJOB=@1777 THEN STOPJOB~P1MIX;%                             19284000
      GO TO INITIATE;% DON"T KEEP COMMUNICATE AROUND NEEDLESSLY         19285000
C34:: T~GETSPACE(10,0,0)+2;%                                            19286000
      STREAM(R4,T);  BEGIN SI~R4;  DS~10 WDS;  END;%                    19287000
      TERMINATE(P1MIX);%                                                19288000
      TERMINALMESSAGE(-T);%                                             19289000
C37::                                                                   19292005
         AIT~JARROW[P1MIX];                                             19292100
       IF AIT[9].[FF]=0 THEN AIT[9].[FF]~GETESPDISK;                    19292200
       H~[M[GETSPACE(5,0,0)+2]]&5[8:38:10];                             19292300
       H[1]~R5;H[2]~R4;                                                 19292400
$INCLUDE 19292411, IF DATACOM AND NOT INQUIRY;                          19292409
       H[3]~USERSTA[P1MIX];                                             19292410
$OMIT 19292421, IF DATACOM AND NOT INQUIRY;                             19292419
       H[3]~0;                                                          19292420
       DISKWAIT(H INX 0,5,AIT[9].[FF]);                                 19292500
       FORGETSPACE(H);                                                  19292600
       GO TO INITIATE;                                                  19292700
 C38:: % RETURN STORAGE AND AUXILIARY MEMORY FOR CODE OR DATA SEGMENT   19294000
$INCLUDE 19297201, IF AUXMEM;                                           19294099
      IF A4.[1:1] THEN % CODE SEGMENT                                   19294100
      BEGIN A ~ PRT[P1MIX,*];  T ~ NFLAG(A4 & (I~0)[5:5:1]);            19294200
            DO IF T.[5:1] THEN I ~ T.[FF]   ELSE                        19294300
               IF T.[6:1] THEN I ~ T.[7:11] ELSE                        19294400
                               T ~ NFLAG(A[T.[7:11]])                   19294500
            UNTIL I!0;                                                  19294600
            IF (*(ADDR ~ I INX A[4])).[4:2]!0 THEN                      19294700
            BEGIN IF ADDR[0].[3:1] THEN                                 19294800
                              COMPLEXSLEEP((NOT ADDR[0].[3:1]));        19294900
                  ADDR[0].[3:2] ~ 2;                                    19295000
                  COMMENT TURN OFF AUXILIARY MEMORY FLAG, AND TURN      19295100
                              ON THE "DO NOT TOUCH" FLAG FOR            19295200
                              RE-ENTRANT PRESENCE-BIT PROTECTION;       19295300
                  IF NOT STOREDY THEN SLEEP([TOGLE], STOREMASK);        19295400
                  TOGLE ~ TOGLE AND NOT STOREMASK;                      19295500
                  IF (I ~ (T ~ ADDR[0]).[FF])>1023 THEN % PRESENT       19295600
                  BEGIN J ~ M[I-1];  P(OLAY(I-2), DEL) END              19295700
                  ELSE IF T.[5:1] THEN                                  19295800
                   DISKWAIT(-([J] INX 1),0,CODEADDRESS(P1MIX,T));       19295900
                  IF T.[5:1] THEN                                       19296000
                  BEGIN ADDR[0] ~ (*P(DUP)) & J [33:3:15];              19296100
                        FORGETAUXILIARYSPACE(J.[FF], T.[CF]);           19296200
                        IF (T ~ A[4].[18:6])=0 THEN T ~ P1MIX;          19296300
                        AUXCODE[T] ~ *P(DUP)-J.[23:6]-1;                19296400
                  END;                                                  19296500
                  ADDR[0].[3:3] ~ 2;                                    19296600
                  COMMENT 3:1 =0, NOT BEING MASSAGED BY PRESENCE BIT    19296700
                          4:2 =2, ASSIGN AUXILIARY MEMORY NEXT OVERLAY; 19296800
                  TOGLE ~ TOGLE OR STOREMASK                            19296900
            END;                                                        19297000
            GO TO INITIATE                                              19297100
      END; % OF CODE SEGMENTS                                           19297200
      IF NOT STOREDY THEN SLEEP([TOGLE], STOREMASK);                    19297300
      TOGLE ~ TOGLE AND NOT STOREMASK;                                  19297400
      IF (T ~ NFLAG(M[J ~ A4.[FF]])).[2:1] THEN                         19297500
      BEGIN M[J].[3:3]~7; %MARK AS "READ-ONLY", ALREADY WRITTEN         19297600
            M[T INX NOT 0] ~ (*P(DUP)) & ((I~P(DUP).[FF]) OR 1)[CTF];   19297700
            P(OLAY(T.[CF]-2));                                          19297800
$ INCLUDE 19297850, IF DEBUGGING;                                       19297810
            IF P(DUP) THEN ELSE                                         19297820
            BEGIN DDT;  M[T INX NOT 0].[FF] ~ 0 END;                    19297830
            P(DEL)                                                      19297900
      END ELSE I ~ T.[CF];                                              19298000
      IF I>511 THEN DISKRTN(I, T.[8:10]);                               19298100
      M[J] ~ FLAG(T & 0[2:42:6] & 0[CTC]);                              19298200
      TOGLE ~ TOGLE OR STOREMASK;                                       19298300
      GO TO INITIATE;                                                   19298400
END OF COMMUNICATE;                                                     19299999
PROCEDURE SHORTCOMMUNICATE;                                             19500000
BEGIN REAL R4=-4,R5=-5,R6=-6,R7=-7,R8=-8;                               19501000
      INTEGER I4=-4,I5=-5,I6=-6;                                        19502000
      ARRAY A4=-4[*],A5=-5[*],A6=-6[*];                                 19503000
      ARRAY A7=-7[*];                                                   19504000
      NAME N4=-4,N5=-5,N6=-6;                                           19505000
    LABEL C0,C1,C2,C3,C4,C5,C6,C7,C8,C9,C10,C11,C12,C13,C14,C15,        19506000
          C16,C17,C18,C19,C20,C21,C22,C23,C24,C25,C26,C27,C28,          19507000
          C29,C30,C31,C32,C33,C34,C35,C36,C37,C38,C39,C40,C41,SL;       19508000
    LABEL C3A;                                                          19508100
    SWITCH C:=SL,C1,C2,C3,SL,C5,SL,SL,SL,C9,C10,C11,SL,C13,C14,SL,      19511000
            SL,SL,SL,C19,SL,SL,SL,C23,C24,C25,SL,C27,C28,               19512000
           SL,SL,C31,SL,SL,SL,C35,C36,SL,SL,C39,C40,C41;                19513000
      LABEL  US,D,TD,PR,IOT,TMR,AD,WD;                                  19514000
      DEFINE CN=DIFFCOM#;                                               19515000
      SWITCH S~US,D,TD,PR,IOT,TMR,AD,WD;                                19516000
      LABEL AC0,AC1,AC2,AC3,AC4,AC5;                                    19517000
     SWITCH AC ~ AC0,AC1,AC2,AC3,AC4,AC5;                               19518000
      REAL I,J,T,RCW=+0;                                                19519000
      ARRAY AIT[*]; REAL AITL=AIT; ARRAY A=AIT[*];                      19520000
          ARRAY FIB=AIT[*],FPB[*],H[*];LABEL CHANGENAME;                19521000
      NAME ADDR;                                                        19522000
      DEFINE BITS=(IF SB THEN DS~SET ELSE DS~RESET; SKIP SB)#;          19523000
%                                                                       19524000
      CHECKSTACKSPACE;%                                             %WF 19525000
         IF PRT[P1MIX,9]<0 THEN                                         19525100
         BEGIN TERMINATE(P1MIX); TERMINALMESSAGE(81) END;               19525200
      GO TO C[PRT[P1MIX,9]];                                            19526000
SL:P(.COMMUNICATE);GO TO DIFFCOM;                                       19526100
%     TIME INTRINSIC                                                    19527000
C1:   IF (I4~I4)}(-1) AND I4{6 THEN                                     19528000
      BEGIN GO TO S[I4+1];                                              19529000
      US:  R4:=USERCODE[P1MIX]; GO TO INITIATE;                         19530000
      D:    I4~DATE; GO TO INITIATE;                                    19531000
      TD:   I4~XCLOCK+P(RTR); GO TO INITIATE;                           19532000
      PR:   I4~PROCTIME[P1MIX]+JAR[P1MIX,3]+CLOCK+P(RTR);               19533000
            GO TO INITIATE;                                             19534000
      IOT:  I4~IOTIME[P1MIX]+JAR[P1MIX,4];                              19535000
            WHILE I4<0 DO I4~I4+CLOCK+P(RTR);                           19536000
            GO TO INITIATE;                                             19537000
      TMR:  I4~P(RTR);  GO TO INITIATE;                                 19538000
      AD:   I4~ACTDATE; GO TO INITIATE;                                 19538100
      WD:   I4~WEEKDAY;                                                 19538200
      END;                                                              19539000
      GO TO INITIATE;                                                   19540000
%      SLEEP                                                            19541100
C2:   SLEEP([M[A5]],R4); GO TO RETURN;                                  19542000
%     RETURN SPECIFIC ARRAY                                             19543000
C3:   ARTN(N4[0],1);          % REMOVE 1 DIM ARRAY                      19544000
C3A:: T~[AITL].[CF];          % REMOVE FROM AIT                         19544100
      IF NOT(AIT~PRT[P1MIX,6]).[2:1] THEN MAKEPRESENT(T);               19545000
      AIT[0]~(J~AIT[0])-1; T~N4.[33:15];                                19546000
      FOR I~1 STEP 1 UNTIL J-1 DO                                       19547000
            IF AIT[I].[18:15]=T THEN                                    19548000
                  BEGIN MOVE(J-I,[AIT[I+1]],[AIT[I]]); J~0 END;         19549000
      N4[0]~0;                                                          19550000
      GO TO INITIATE;                                                   19551000
%     EOJ                                                               19552000
C5:   P(.COM5); GO TO CN;                                               19553000
%     WHEN                                                              19554000
C6:   I4~60|I4+P(RTR)+CLOCK;                                            19555000
      WHILE TERMIX.[33:15]!P1MIX AND CLOCK+P(RTR)<I4 DO                 19556000
            SLEEP([CLOCK],NOT CLOCK);                                   19557000
      GO TO INITIATE;                                                   19558000
%     FILL WITH INQUIRY                                                 19559000
C9:                                                                     19560000
$INCLUDE 19562501, IF DATACOM AND NOT INQUIRY;                          19561000
      TERMINATE(P1MIX); TERMINALMESSAGE(20);                            19562000
      GO TO INITIATE;                                                   19562500
$INCLUDE 19564001, IF INQUIRY AND NOT DATACOM;                          19563000
      P(.COM9); GO TO CN;                                               19564000
%     BLOCK EXIT                                                        19565000
C10:  P(.ASR); GO TO CN;                                                19566000
%     ALGOL I/O FUNCTIONS                                               19567000
    C11: IF R4=0 THEN FILEOPEN(0,A5.[CF]);                              19568000
         IF R4=6 THEN                                                   19569000
         BEGIN FILECLOSE(NFLAG(A5)); GO TO INITIATE END;                19570000
         IF R4=4 THEN                                                   19571000
         BEGIN IF A5[4] THEN %FILE IS IN DIRECTORY%                     19572000
               FORGETSPACE(DIRECTORYSEARCH(R8,R7,-(A5.[CF])&            19573000
                           R6[CTF])) ELSE                               19574000
                A5[R6]:=GETUSERDISK(A5[8]);                             19575000
               GO TO INITIATE                                           19576000
         END;                                                           19577000
         P(.COM11); GO TO DIFFCOM;                                      19578000
%     COBOL I/O FUNCTIONS                                               19579000
C13:  P(.COM13); GO TO CN;                                              19580000
%     INVERT OVERLAYABLE STATUS                                         19581000
C14:  IF NOT N4[0].[2:1] THEN MAKEPRESENT([N4[0]] INX 0);               19582000
      M[N4[0] INX NOT 1]~P(DUP,LOD)&P(DUP,LNG)[2:2:1];                  19583000
      GO TO INITIATE;                                                   19584000
%     PRINT BACK-UP                                                     19585000
C19:  P(.COM19); GO TO CN;                                              19586000
%     LOAD CONTROL                                                      19587000
C23:: P(.COM23); GO TO CN;                                              19588000
%     RETURN ONE ROW OF A DISK FILE                                     19589000
C24:: T:=A4[R5]; A4[R5]:=0;                                             19590000
$ OMIT 19592001, IF SHAREDISK;                                          19591000
      FORGETUSERDISK(T,A4[8]);                                          19592000
$ INCLUDE 19594001, IF SHAREDISK;                                       19593000
      FORGETUSERDISK(T,A4[8]&(NOT A4[4])[1:47:1]);                      19594000
      GO TO INITIATE;                                                   19595000
%     RETURN OLD COPY OF OWN ARRAY                                      19596000
C25:: ARTN(A5,R4);                                                      19597000
      M[A5.[FF]]~A~PRT[P1MIX,17]&P(.A5,LOD)[18:18:15];                  19598000
     IF A.[2:1] THEN M[A.[CF]-1].[CF]~A5.[FF];                          19599000
      GO TO INITIATE;                                                   19600000
%     COBOL DATACOM I INTERROGATE                                       19601000
C27::                                                                   19602000
$INCLUDE 19636001, IF DATACOM AND NOT INQUIRY;                          19603000
       IF (I~A4.[8:10])<4 THEN GO INITIATE;                             19604000
      IF R6=0 THEN R6~A7[0] ELSE                                        19605000
      BEGIN R6~0&R5[14:44:4]&R6[9:44:4];                                19606000
            IF R5.[1:1] THEN                                            19607000
                   BEGIN R5~GET(R6);% IN CASE THIS IS FIRST REFERENCE   19608000
                         P(WAITIO(R6&1[18:47:1],@777700000,30),DEL);    19609000
                         IF (GET(R5) AND @0000000241000000)=0 THEN      19610000
                             DCWRITE(ABS(R5));                          19611000
                   END;                                                 19612000
            R6 ~ GET(R6) AND @7570000000000;                            19613000
         IF (0&USERSTA[P1MIX][9:15:9])!R6 THEN                          19614000
            BEGIN                                                    %JS19615000
            IF P(LOOKQ,R6,LLL,.ADDR,STD).[9:9]=                         19616000
                R6.[9:9] AND P1MIX = GET(R6).[38:5]                     19617000
                THEN USERCODE[P1MIX] := ADDR[1];                        19618000
$INCLUDE 19620001, IF DCLOG AND DATACOM AND NOT INQUIRY;                19619000
            REMOTELOGGER(6,0,R6,P1MIX);                              %JS19620000
                                                                        19621000
            USERSTA[P1MIX].[15:9] ~ R6.[9:9];                           19622000
            END;                                                        19623000
            R6 := GET(R6);                                              19624000
      END; T~[AITL].[33:15];                                            19625000
           IF NOT (A~A4).[2:1] THEN MAKEPRESENT(T);                     19626000
            STREAM(N:=IF I<12 THEN I-4 ELSE 8,O:=I}13,                  19627000
                   S :=R6,A);                                           19628000
      BEGIN SI~LOC S; SKIP 8 SB;                                        19629000
            DS~47 RESET; 1 BITS;                                        19630000
            DS~44 RESET; 4 BITS;                                        19631000
            DS~47 RESET; 1 BITS;                                        19632000
            DS~44 RESET; 4 BITS; SKIP 5 SB;                             19633000
          N(DS:=47 RESET; 1 BITS);                                      19634000
          O(SI:=SI-3; SKIP 4 SB; DS:=47 RESET; 1 BITS);                 19635000
      END;                                                              19636000
      GO INITIATE;                                                      19637000
%     ALGOL DATACOM I INTERROGATE                                       19638000
C28::                                                                   19639000
$INCLUDE 19667001, IF DATACOM AND NOT INQUIRY;                          19640000
      IF R4>2 THEN BEGIN USERCODE[P1MIX]~USERCODE[P1MIX]&R4[1:47:1];    19641000
                         GO INITIATE END;                               19642000
      IF R4 THEN                                                        19643000
      IF R5.[9:4]=0 THEN BEGIN                                          19644000
                             TERMINATE(P1MIX);                          19645000
                             STREAM(D~R5~GETSPACE(10,0,0)+2);           19646000
                             BEGIN                                      19647000
                                  DS~19 LIT "-ACTV INTRGT TU 0 ~"       19648000
                             END;                                       19649000
                             TERMINALMESSAGE(-R5);                      19650000
                         END ELSE                                       19651000
           BEGIN R5~GET(R5);% IN CASE THIS IS FIRST REFERENCE TO BUFFER 19652000
                 P(WAITIO(0&R5[9:9:9]&1[18:47:1],@777700000,30),DEL);   19653000
                 IF (GET(R5) AND @0000000241000000)=0 THEN              19654000
                        DCWRITE(ABS(R5));                               19655000
           END;                                                         19656000
      R5~GET(R5);                                                       19657000
    IF (0&USERSTA[P1MIX][9:15:9]) ! (R5 AND @7570000000000) THEN        19658000
      BEGIN                                                          %JS19659000
      IF P(LOOKQ,R5 AND @7570000000000,LLL,.ADDR,STD).[9:9]=R5.[9:9]    19660000
         AND P1MIX= R5.[38:5]                                           19661000
         THEN USERCODE[P1MIX] := ADDR[1];                               19662000
$INCLUDE 19664001, IF DCLOG AND DATACOM AND NOT INQUIRY;                19663000
              REMOTELOGGER(6,0      ,R5,P1MIX);                      %JS19664000
      USERSTA[P1MIX].[15:9]:= R5.[9:9] AND @757;                        19665000
      ;                                                                 19666000
      END;                                                              19667000
      GO INITIATE;                                                      19668000
%     ALGOL "DELAY" FUNCTION -- WAIT WITH TIMEOUT                       19669000
C31:: IF A6.[CF]<512 THEN%   CAUGHT SOMEBODY BEING SNEAKY               19670000
      BEGIN TERMINATE(P1MIX);%                                          19671000
            TERMINALMESSAGE(17);%                                       19672000
      END;%                                                             19673000
      IF NOT (M[A6] AND R5)=NOT 0 THEN%                                 19674000
             IF (I4 ~ I4|60+CLOCK+P(RTR))>CLOCK+P(RTR) THEN%            19675000
         COMPLEXSLEEP((CLOCK+P(RTR)>I4) OR       % TIMED OUT            19676000
                      (TERMIX.[CF]=P1MIX) OR     % DISCONTINUED         19677000
                      (NOT(M[A6] AND R5)!NOT 0));% WAIT SATISFIED       19678000
      I6 ~ NOT(M[A6] AND R5)!NOT 0;%                                    19679000
      GO TO INITIATE;%                                                  19680000
C35:: IF R4.[FF] GTR 33 THEN P(.LIBRARYLOAD) ELSE P(.LIBRARYDUMP);      19681000
         GO TO CN;                                                      19682000
C36::    % TYPE 19 DATACOM I/O INTERFACE                                19683000
$INCLUDE 19685001, IF DATACOM AND NOT INQUIRY;                          19684000
         P(.COM36); GO CN;                                              19685000
C39:: % BASIC ARRAY RETURN                                              19685100
      ARTN(N4[0],R5);         % RETURN R5 DIM ARRAY                     19685200
      GO TO C3A;              % TO REMOVE FROM AIT                      19685300
C40:: IF R5.[15:15]=0 THEN                                              19685400
      BEGIN                                                             19685410
$INCLUDE 19685421, IF DATACOM AND NOT INQUIRY;                          19685419
            M[R5]:=USERSTA[P1MIX];                                      19685420
$OMIT 19685431, IF DATACOM AND NOT INQUIRY;                             19685429
            M[R5]:=0;                                                   19685430
            GO INITIATE;                                                19685440
      END ELSE                                                          19685450
      IF R5.[FF]=@77777 THEN                                            19685452
      BEGIN M[R5]:=MOD3IOS; GO INITIATE; END ELSE                       19685456
      BEGIN INDEPENDENTRUNNER(P(.DKBUSINESS),R5); SLEEP([M[R5]],1);     19685460
            GO RETURN;                                                  19685470
      END;                                                              19685480
C41:: IOREQUEST(R7,R6,FLAG(R5)); GO INITIATE;                           19685550
END OF SHORT COMMUNICATE;%                                              19686000
 %  THE FORMAT OF SEGMENT ZERO OF PROGRAMS%                             20000000
 %       S[0]           =    LOCATION OF SEGMENT DICTIONARY%            20001000
 %       S[1]           =    SIZE OF SEGMENT DICTIONARY%                20002000
 %       S[2]           =    LOCATION OF PRT%                           20003000
 %       S[3]           =    SIZE OF PRT%                               20004000
 %       S[4]           =    LOCATION OF FILE PARAMETER BLOCK%          20005000
 %       S[5]           =    SIZE OF FILE PARAMETER BLOCK%              20006000
 %       S[6].[1:1]     =    1 FOR NEW FORMAT SEGMENT 0, ELSE 0         20006500
 %       S[6]           =    STARTING SEGMENT NUMBER%                   20007000
 %       S[7].[2:1]     =    FORTRAN FAULT FLAG                         20007100
 %       S[7].[33:15]   =    NUMBER OF FILES%                           20008000
 %       S[7].[18:15]   =    CORE REQUIREMENT / 64%                     20009000
 %       IF S[2] < 0 THEN THE JOB WAS COMPILED BY COBOL%                20010000
 %       S[15]          =    DISK ADDRESS OF LABEL EQUATION ENTRIES     20010100
 %                           PRESENTED WHEN PROGRAM WAS COMPILED AND    20010200
 %                           APPLICABLE TO ALL EXECUTIONS               20010300
 %       S[16]          =    ESTIMATED PROCESSOR TIME   (FROM COMPILATN)20010400
 %       S[17]          =    ESTIMATED I/O TIME         (FROM COMPILATN)20010500
 %       S[18]          =    PRIORITY                   (FROM COMPILATN)20010600
 %       S[19]          =    COMMON VALUE               (FROM COMPILATN)20010700
 %       S[20]          =    ESTIMATED CORE REQUIREMENTS(FROM COMPILATN)20010800
 %       S[21]          =    STACK SIZE                 (FROM COMPILATN)20010900
 PROCEDURE SELECTRUN;                                                   20011000
  BEGIN                                                                 20012000
     REAL T,MIX,FPB,STACKSIZE,STACKLOC,FB,IOD,COMMON,SAVETIME;          20013000
      REAL Z=IOD;                                                    %JS20013010
     INTEGER LEVEL,NEXTLINK,THISLINK,LASTLINK,I,LEQLINK1,LEQLINK2;      20014000
     INTEGER PASSLEVEL,PRIORITY;                                        20014100
     DEFINE L = SAVETIME#, LINK = COMMON#;                              20014500
     BOOLEAN GOTSPACE,ESED;                                             20015000
    INTEGER J=NT1;%                                                     20015500
     ARRAY S[*],TRP[*];                                                 20016000
      NAME ADDR;                                                     %JS20016050
    REAL      S2;                                                       20016200
    LABEL BACK;                                                         20016300
         ARRAY SD=NT2[*];                                               20016400
     LABEL DLX,START,CONTINUE,LEM,JARSPACE,PASS,LOAD,UNBLK,STOP,EXIT;   20017000
     LABEL RMSG,SMSG,BMSG;                                              20017500
    LABEL TRYAGAIN;                                                  %JS20017502
SUBROUTINE DELINK; % DELINKS A SHEET ENTRY AND RETURNS SHEET DISK SPACE 20018000
BEGIN;                                                                  20019000
     STREAM(A~S[3].[8:10],B~P(.SCHEDULEIDS));                           20019200
          BEGIN SKIP A DB; DS ~ RESET END;                              20019300
     IF NEXTLINK = 0 THEN SHEET[LEVEL].[FF] ~ LASTLINK;                 20019500
     IF LASTLINK = 0 THEN BEGIN SHEET[LEVEL].[CF] ~ NEXTLINK;GO DLX END;20020000
     DISKIO(IOD,-(S INX 0-1),30,LASTLINK); SLEEP([IOD],IOMASK);         20021000
     S[29] ~ NEXTLINK;                                                  20022000
     DISKIO(IOD,+(S INX 0-1),30,LASTLINK); SLEEP([IOD],IOMASK);         20023000
DLX: FORGETESPDISK(THISLINK);                                           20024000
END DELINK;                                                             20025000
         BOOLEAN SUBROUTINE REENTRY;%                                   20025050
         BEGIN POLISH(FALSE);%                                          20025100
              IF JAR[MIX,2].[8:10]!0 THEN%                              20025150
              FOR I~1 STEP 1 UNTIL MIXMAX DO%                           20025200
              IF JAR[I,*]!0 THEN%                                       20025250
                   IF (JAR[MIX,0] EQV JAR[I,0])=NOT 0 THEN%             20025300
                   IF ((JAR[MIX,0]<0) OR%                               20025350
                     ((JAR[MIX,1] EQV JAR[I,1])=NOT 0)) THEN%           20025400
                        IF JAR[I,10]!0 THEN%                            20025450
                        IF JAR[I,2].[8:10]!0 THEN%                      20025500
                             IF PRYOR[I]}0 OR%                          20025550
                               NFO[(I-1)|NDX+1].[FF]!0 THEN%            20025560
              BEGIN COMMENT MAKE THE ENTRY IN LINKED-LIST STYLE;%       20025600
                   IF PRT[I,4].[FF]!0 THEN%                             20025650
                   BEGIN COMMENT ENTER AT TAIL OF PREVIOUS LIST;%       20025700
                        DO J~I UNTIL (I ~ PRT[I,4].[24:6])=@77;%        20025750
                        NFO[(MIX-1)|NDX+1] ~ TRP[4] ~ PRT[J,4];%        20025800
                        NFO[(J-1)|NDX+1] ~ PRT[J,4] ~%                  20025850
                           (*P(DUP))&MIX[24:42:6];%                     20025900
                   END ELSE BEGIN COMMENT CONSTRUCT NEW LIST;%          20025950
                        NFO[(I-1)|NDX+1] ~ PRT[I,4] ~%                  20026000
                           (*P(DUP))&I[18:42:6]&MIX[24:42:6];%          20026050
                        NFO[(MIX-1)|NDX+1] ~ TRP[4] ~%                  20026100
                           PRT[I,4]&@77[24:42:6];%                      20026150
                   END;%                                                20026200
                   POLISH(DEL, TRUE);%                                  20026250
                   I ~ MIXMAX;%                                         20026300
              END;%                                                     20026350
              REENTRY ~ POLISH;%                                        20026400
         END REENTRANT CODE LINKAGE ESTABLISHMENT SUBROUTINE;%          20026450
START:                                                                  20027000
      SLEEP([TOGLE],SHEETMASK); SHEETFREE~FALSE;                        20028000
     GOTSPACE~FALSE; PASSLEVEL~RESTARTING;                              20029000
     FOR LEVEL~0 STEP 1 UNTIL MIXMAX DO                                 20030000
       BEGIN                                                            20031000
          LASTLINK ~ NEXTLINK ~ 0;                                      20032000
          IF (THISLINK~SHEET[LEVEL].[CF]) ! 0 THEN GO TO LEM;           20033000
CONTINUE: IF (THISLINK~NEXTLINK) ! 0 THEN GO TO LEM;                    20034000
       END;                                                             20035000
     SHEETFREE~TRUE; IF GOTSPACE THEN FORGETSPACE(S); GO TO EXIT;       20036000
                                                                        20037000
LEM: IF NOT GOTSPACE THEN                                               20038000
% GET SPACE FOR BUFFER TO HOLD SHEET, ZERO-TH SEGMENT                   20039000
       BEGIN S ~ [M[GETSPACE(31,2,0)+2]]&30[8:38:10]; GOTSPACE~TRUE END;20040000
% READ SHEET ENTRY INTO S                                               20041000
              MIX~0;                                                    20041100
     DISKIO(IOD,-(S INX 0-1),30,THISLINK); SLEEP([IOD],IOMASK);         20042000
     NEXTLINK ~ S[29];                                                  20043000
     T ~ GETSPACE(30,0,0)+2;                                            20049000
     DISKIO(IOD,1-T,30,S[25]);                                          20050000
     SLEEP([IOD],IOMASK);                                               20051000
     PRIORITY ~ S[18];                                                  20060500
     IF S[2].[8:10] = 5 THEN % THIS IS A RUN CARD                       20061000
$ INCLUDE 20061051, IF DATACOM AND RJE AND NOT INQUIRY;                 20061049
      IF NOT GET(S[23]) THEN  %CAN ONLY EXECUTE FROM RJE                20061050
       BEGIN                                                            20061100
          IF S[2].[2:1]!1 THEN % (IF NOT ES-ED)                         20061200
          FOR I ~ 1 STEP 1 UNTIL MIXMAX DO                              20061300
          IF JAR[I,*] ! 0 THEN                                          20061400
         IF (S[0]=JAR[I,0] AND S[1]=JAR[I,1] AND PRYOR[I]}0) THEN%   %JS20061500
            BEGIN  % RUN CARD FOR JOB ALREADY RUNNING                   20061600
$INCLUDE 20061801, IF DCSPO AND DATACOM AND NOT INQUIRY;                20061699
              IF S[23].[9:9]!0 THEN%REMOTE STATION REQUEST           %JS20061700
              BEGIN                                                     20061702
$INCLUDE 20061722, IF DCLOG AND DATACOM AND NOT INQUIRY;                20061705
              DISKIO(Z,-(L~GETSPACE(30,0,0)+1),30,S[6] INX 0);       %JS20061706
              SLEEP([Z],IOMASK);%CARD FROM ESPDISK-GIVE TO R-LOGGER  %JS20061707
              IF P(RQONE,Z~0&S[23][15:9:9]&I[10:43:5],LLL,.ADDR,STD) %JS20061708
              .[9:15]=Z.[9:15] THEN% STATION IS ATTACHED             %JS20061709
                   BEGIN                                                20061710
                   REMOTELOGGER(5,0,S[23],I);%PSUEDO DETACH THE STA  %JS20061711
              REMOTELOGGER(3,L+2,0&S[23][9:9:9]&JAR[I,5][18:24:24],I);  20061712
                                                                        20061713
                   REMOTELOGGER(7,0,S[23],I);% AND REATTACH          %JS20061714
                   END ELSE                                             20061715
                   BEGIN                                                20061716
                   REMOTELOGGER(3,L+2,0&S[23][9:9:9]&JAR[I,5][18:24:24] 20061717
                     ,I);                                               20061718
                   END;                                                 20061720
              FORGETSPACE(L+1);                                         20061721
               IF NOT(L~ GET(S[23])).[32:1] THEN TACH(L,I,7);           20061730
              IF NOT (L~GET(S[23])).[31:1] THEN                         20061740
                     BEGIN                                              20061750
              P(SMGAMES( I ,L,1),DEL);                                  20061760
%                                                                       20061770
                                                                        20061780
                     END;                                               20061790
               END;                                                     20061800
               IF BOJMESS THEN                                          20061810
         BEGIN%* * * * * * *                                         %JS20061815
               IF L.[9:9]=0 OR L.[32:1] THEN GO TO RMSG                 20061820
               ELSE IF L.[4:4]!L.[9:4] OR L.[18:4]!L.[14:4] THEN        20061830
            RMSG:BEGIN;                                                 20061900
                    STREAM(C~PRIORITY,A~JARROW[I],I,Q~LEQLINK1~((NT1~   20062000
                           (XCLOCK DIV 3600)) MOD 60+(NT1 DIV 60)|100), 20062100
                           B~T);                                        20062200
                      BEGIN SI~LOC C; DS~6 DEC; DI~DI-6; DS~5 FILL;     20062250
                            DI~B; DI~DI+6; DS~LIT":"; SI~A; SI~SI+1;    20062300
                            DS~7 CHR;                                   20062350
                            DS~LIT"/"; SI~SI+1; DS~7 CHR; SI~LOC I;     20062400
                            DS~LIT"="; DS~2DEC; DS~9LIT" RUNNING";      20062500
                            DS~4DEC; DS~LIT"~"; DI~DI-16; DS~FILL;      20062600
                      END STREAM;                                       20062700
                    SPOUT(T&S[23][9:9:9]);                              20062800
                 END ELSE FORGETSPACE(T);                            %JS20062900
         END ELSE FORGETSPACE(T);                                    %JS20062902
               % BUMP OPEN COUNT BACK DOWN                              20062910
               FORGETSPACE(DIRECTORYSEARCH(ABS(S[0]),                   20062920
                                           IF S[0]<0 THEN "DISK   "     20062930
                                            ELSE S[1],13));             20062940
              FORGETESPDISK(S[6] INX 0);                             %JS20062945
               T ~ S[13]; % SAVE LINK TO LABEL EQUATION CARDS           20063000
               DELINK; % DELINK SHEET ENTRY                             20063100
               WHILE T!0 DO BEGIN DISKIO(IOD,-(S INX 0-1),30,T);        20063200
                                  SLEEP([IOD],IOMASK);                  20063300
                                  FORGETESPDISK(T); T ~ S[29];          20063400
                            END;                                        20063500
               GO TO CONTINUE;                                          20064000
            END;                                                        20065000
       END OF SPECIAL HANDLING OF RUN CARDS;                            20067000
COMMENT JOB WILL BE RUN ONLY IF:                                        20068000
        1) AN XS OR ES MESSAGE HAS BEEN ENTERED FOR THIS JOB, (IN WHICH 20069000
           CASE SHEETDIDDLER TURNED ON S[2].[1:1] AND CALLED SELECTION),20070000
     OR 2) THE SUM OF THIS JOBS CORE REQUIREMENTS (S[20]) PLUS THE SUM  20071000
           OF THE CORE REQUIREMENTS OF ALL OTHER JOBS ACTUALLY RUNNING  20072000
           (CORE.[FF]) IS LESS THAN THE TOTAL AMOUNT OF CORE AVAILABLE  20073000
           FOR USER PROGRAMS (THE INITIAL SPACE AVAILABLE (CORE.[CF])   20074000
           TIMES THE MULTIPROCESSING FACTOR (CORE.[4:14])),             20075000
     OR 3) THE SUM OF THE CORE REQUIREMENTS OF ALL OTHER JOBS ACTUALLY  20076000
           RUNNING EQUALS ZERO (PRESUMABLY ONLY LOAD-CONTROL OR PRINT-  20076100
           BACKUP RUNNING, SO JOB SHOULD BE ABLE TO RUN);               20076200
                                                                        20076300
     IF S[2] < 0 THEN GO TO JARSPACE;                                   20076500
     IF LEVEL > PASSLEVEL THEN GO TO PASS;                              20076700
$ INCLUDE 20076801, IF BREAKOUT;                                        20076799
     IF RESTARTING<0 AND S[3].[2:1] THEN GO PASS;                       20076800
     IF S[20] + CORE.[FF] { CORE.[CF]|CORE.[4:14]/100 THEN GO JARSPACE; 20077000
     IF CORE.[FF] ! 0 THEN GO TO PASS;                                  20077500
                                                                        20078000
JARSPACE:                                                               20079000
%  FIND A FREE SPACE IN JAR                                             20080000
     FOR MIX ~ 1 STEP 1 UNTIL MIXMAX DO IF JAR[MIX,*]=0 THEN GO LOAD;   20081000
%  NO FREE SPACE IN JAR: PASS THIS ENTRY WITHOUT DELINKING AND CONTINUE 20082000
PASS: IF S[3]>0 AND SCHEDMSG THEN                                       20082100
      BEGIN S[3] ~ NABS(S[3]);                                          20082110
            DISKIO(IOD,+(S INX 0-1),30,THISLINK); SLEEP([IOD],IOMASK);  20082115
            STREAM(TU~S[23].[9:4],BUF~S[23].[14:4],RT~S[23].[9:4]!0,    20082120
                   C~LEVEL,A~S[*],ID~S[3].[8:10],%                      20082125
                   Q~I~((NT1~(XCLOCK DIV 3600)) MOD 60+(NT1 DIV 60)|100)20082130
                   ,B~T);                                               20082140
            BEGIN SI~LOC C; DS~6 DEC; DI~DI-6; DS~5 FILL; DI~B; DI~DI+6;20082150
                  DS~LIT":"; SI~A; SI~SI+1; DS~7 CHR; DS~LIT"/";        20082160
                  SI~SI+1; DS~7 CHR; DS~LIT"="; SI~LOC ID; DS~2 DEC;    20082170
                   DS~11 LIT " SCHEDULED "; DS~4 DEC;%                  20082180
                   RT(DS~6 LIT " FROM "; SI~LOC TU; DS~2 DEC;%          20082185
                      DS~LIT "/"; SI~LOC BUF; DS~2 DEC;); DS~LIT "~";%  20082186
            END STREAM;                                                 20082190
$INCLUDE 20082231, IF DATACOM AND NOT INQUIRY;                          20082199
             IF (L:=GET(S[23])) OR (NOT L.[32:1] AND                    20082200
               (L.[4:4]!L.[9:4] OR L.[14:4]!L.[18:4])) THEN             20082210
                SPOUT(NABS(T&S[23][9:9:9]))                             20082220
            ELSE                                                        20082230
SMSG:           SPOUT(T);                                               20082240
      END ELSE FORGETSPACE(T);                                          20082250
      IF PASSLEVEL=1023 THEN PASSLEVEL~LEVEL;                           20082260
      LASTLINK~THISLINK; GO TO CONTINUE;                                20082270
                                                                        20082280
LOAD: % FILE HEADER NOW BECOMES JAR ENTRY                               20082300
     CORE.[FF] ~ CORE.[FF] + S[20]; % ADD IN CORE REQUIREMENTS          20082350
     NFO[(MIX-1)|NDX+2].[18:15] ~ S[20];                                20082400
     WHILE (NT2~XCLOCK+P(RTR)) } 5184000 DO MIDNIGHT;                   20082500
     STREAM(DATE:A~0); BEGIN SI~LOC DATE; DI~ LOC DATE; DS~8 OCT END;   20082600
     COMMON ~ NT2&P(XCH)[1:25:23];                                      20082700
     IDLETIME;                                                          20082800
     JARROW[MIX] ~ [M[T]]&30[8:38:10];                                  20082900
        M[T-2]~M[T-2]&MIX[9:42:6];   %JAR ROWS KEPT LOCAL FOR RESTART   20082910
                  %CLEANUP AT 03342000                                  20082920
     JAR[MIX,0] ~ S[0];                                                 20082950
     JAR[MIX,1] ~ S[1];                                                 20083000
     JAR[MIX,2] ~ S[2];                                                 20083100
     JAR[MIX,3] ~ S[16];                                                20083200
     JAR[MIX,4] ~ S[17];                                                20083300
     JAR[MIX,5] ~ COMMON;                                               20083400
TRYAGAIN:                                                            %JS20083402
         FOR I~1 STEP 1 UNTIL MIXMAX DO%ASSURE THAT THIS             %JS20083404
              BEGIN                                                  %JS20083405
              IF JARROW[I]!0 THEN    %START NUMBER IS UNIQUE         %JS20083406
                   IF  I! MIX THEN  %IF NOT                          %JS20083408
                        IF JAR[MIX,5].[24:24]= JAR[I,5].[24:24]      %JS20083410
                        THEN BEGIN    %GIVE CLOCK A PHOY CLICK       %JS20083412
         JAR[MIX,5]~*P(DUP) INX 1;                                   %JS20083414
                        GO TRYAGAIN                                  %JS20083416
                        END;                                         %JS20083418
              END;                                                   %JS20083419
     JAR[MIX,6] ~ S[6];                                                 20083500
     JAR[MIX,7] ~ 0;                                                    20084000
$INCLUDE 20084601, IF STATISTICS;                                       20084099
     MIXNUM:=MIXNUM+1;                                                  20084200
     UVROW[MIX]:=[M[SPACE(UVSIZE)]]&UVSIZE[8:38:10];                    20084300
     MOVE(UVSIZE,UVROW[MIX].[CF]-1,UVROW[MIX].[CF]);                    20084350
     MFIDSTAT[MIX]:=S[0];                                               20084400
     FIDSTAT[MIX]:=S[1];                                                20084500
     IF COREST THEN CORESTAT[MIX].[1:1]:=1;                             20084600
     COMMON ~ S[19];                                                    20085000
     STACKSIZE ~ S[21];                                                 20086000
     NFO[(MIX-1)|NDX+2].[1:17] ~ (CLOCK + P(RTR)) DIV 60;               20086500
     PROCTIME[MIX] ~ -S[16]-CLOCK-P(RTR);                               20087000
     IOTIME[MIX] ~ -S[17];                                              20087100
     PRYOR[MIX] ~ -1;                                                   20088000
     P1MIX ~ MIX;                                                       20088100
     USERCODE[MIX]~ABS(S[24]);                                          20088200
     CHANGEABORT(S[6]);                                                 20089000
     % IF THIS WAS A "RUN" CARD, CHANGE IT TO SAY "EXECUTE"             20089100
     IF S[2].[8:10] = 5 THEN S[2].[8:10] ~ 2;                           20089200
     IF S[2].[8:10]=0 THEN % "GO" PART: REMOVE DIRECTORY ENTRY          20090000
         FORGETESPDISK(S[25]);                                          20091000
     ESED ~ S[2].[2:1];                                                 20092000
$INCLUDE 20092101,IF DATACOM AND NOT INQUIRY;                           20092099
USERSTA[P1MIX]:=0;                                                      20092100
$INCLUDE 20092975, IF DCSPO AND DATACOM AND NOT INQUIRY;                20092499
    IF S[23].[9:9]!0 THEN% IF REMOTE SPO REQUESTS XEQ THEN           %JS20092500
    BEGIN                                                               20092525
         USERSTA[P1MIX].[15:9]:=S[23].[9:9];                            20092527
$INCLUDE 20092560, IF DCLOG AND DATACOM AND NOT INQUIRY;                20092549
         DISKIO(T,-(L~GETSPACE(30,0,0)+1),30,S[6] INX 0);               20092550
         SLEEP([T],IOMASK);%GET CC FROM ESPDISK AND WIRTE NREMOTLOG  %JS20092552
         REMOTELOGGER(3,L+2,0&S[23][9:9:9]&JAR[MIX,5][18:24:24],MIX);   20092554
              FORGETSPACE(L+1);%FORGET THIS SPACE                    %JS20092559
         IF NOT (L:=GET(S[23])) THEN                                    20092575
            BEGIN IF NOT L.[32:1] THEN TACH(L,MIX,7);                   20092630
               IF NOT (L:=GET(S[23])).[31:1] THEN                       20092650
                                                                        20092700
                                                                        20092750
              P(SMGAMES(MIX,L,1),DEL);                                  20092800
%                                                                       20092850
                                                                        20092900
           END;                                                         20092950
    END;                                                                20092970
                                                                        20092972
              STREAM( Q:=                                               20092985
              FSROW[MIX] ~ [M[GETSPACE(4,0,1)+2]]&4[8:38:10]);          20092990
                   DS:= 32 LIT "0";                                     20092995
     IF BOJMESS AND NOT ESED THEN%                                      20093000
       BEGIN;                                                           20093100
          STREAM(TU~S[23].[9:4],BUF~S[23].[14:4],RT~S[23].[9:4]!0,%     20093200
                 C~PRIORITY,A~JARROW[MIX],MIX,%                         20093210
                 Q~I~((NT1~(XCLOCK DIV 3600)) MOD 60+(NT1 DIV 60)|100), 20093300
                 B~T~GETSPACE(12,0,0)+2);%                              20093400
            BEGIN SI~LOC C; DS~6 DEC; DI~DI-6; DS~5 FILL; DI~B; DI~DI+6;20093500
                  DS~LIT":"; SI~A; SI~SI+1; DS~7 CHR; DS~LIT"/";        20094000
             SI~SI+1; DS~7CHR; SI~LOC MIX; DS~LIT"="; DS~2DEC;          20095000
                  DS~5 LIT " BOJ "; DS~4 DEC;%                          20096000
                  RT(DS~6 LIT " FROM "; SI~LOC TU; DS~2 DEC;%           20096100
                     DS~LIT "/"; SI~LOC BUF; DS~2 DEC;); DS~LIT "~";%   20096200
             DI~DI-12; DS~FILL;                                         20096400
            END STREAM;                                                 20096500
         IF L.[9:9]!0 THEN IF L THEN  %REMOTE JOB                       20097000
BMSG:    T:=NABS(T&S[23][9:9:9]) ELSE                                   20097100
         IF L.[32:1] OR (L.[4:4]=L.[9:4] AND L.[14:4]=L.[18:4])         20097200
         THEN ELSE GO TO BMSG;                                          20097300
         SPOUT(T);                                                      20097400
       END;                                                             20098000
     SAVETIME ~ S[22];                                                  20099000
     LEQLINK1 ~ S[15]; LEQLINK2 ~ S[13];                                20100000
     DELINK; % DELINK SHEET ENTRY                                       20100100
     IF INTSIZE=0 THEN                                                  20100190
     IF  ((S[1] EQV "DISK   ")=NOT 0) AND                               20100200
         (((S[0] EQV "PRNPBT ")=NOT 0) OR                               20100202
         ((S[0] EQV "LDCNTRL")=NOT 0) OR                                20100204
         ((S[0] EQV "LIBMAIN")=NOT 0)) THEN ELSE                        20100206
     BEGIN                                                              20100210
         NT3~SPACE(4);                                                  20100220
         STREAM(NT3);                                                   20100230
         DS~24LIT"##NO INTRINSICS FILE...~";                            20100240
         SPOUT(NT3);                                                    20100250
         SLEEP([INTSIZE],@1777);                                        20100300
     END;                                                               20100310
%   READ SEGMENT ZERO INTO S                                            20100400
     DISKIO(IOD,-(S INX 0-1),30,JAR[MIX,10]); SLEEP([IOD],IOMASK);      20101000
      JAR[P1MIX,2]~P(DUP,LOD)&S[2][1:1:2]&S[7][3:2:1];                  20102000
      S[2]~ABS(P(DUP,LOD));                                             20102001
$INCLUDE 20102181, IF BREAKOUT;                                         20102005
     IF S[3]<0 THEN   %RESTART JOB                                      20102010
    BEGIN L:=LEQLINK1; T:=SPACE(128);                                   20102020
         WHILE L!0 DO   %PURGE LABEL EQUATION STUFF                     20102030
         BEGIN DISKWAIT(-T,30,L);                                       20102040
              FORGETESPDISK(L); L~M[T+29]                               20102050
         END;                                                           20102060
         JAR[MIX,2].[8:10]~0;   %MARK IT A GO JOB                       20102065
         L~0; FOR I~0 STEP 1 UNTIL 7 DO                                 20102070
         IF MEMASK[I] THEN L~L OR TWO(I);                               20102080
         SHEETFREE~ESED~ESED OR RESTARTING<0                            20102090
         OR S[6]!((-MSTART)&L[8:38:10])                                 20102100
         OR S[5]!(M[NFO INX 0-1]&(NFO)[CTF]);                           20102110
         IF ESED THEN   %NO GOOD TRYING: DS IT                          20102120
         BEGIN FORGETSPACE(S); TERMINATE(MIX);                          20102130
              FORK(P(.RSDSED),T,[TERMIX],-0); TERMIX~-TERMIX            20102140
         END ELSE                                                       20102150
         BEGIN RESTART(S,T); RESTARTING~PASSLEVEL~-MIX END;             20102160
         GO BACK                                                        20102170
    END; %OF SELECTION FOR RESTARTS                                     20102180
     NFO[(MIX-1)|NDX+2].[CF]~STACKLOC~GETSPACE(STACKSIZE+S[3]+64,2,1)+2;20103000
     T ~ (STACKLOC + STACKSIZE OR 63) + 1;                              20103200
%   ZERO OUT STACK TO EASE PROBLEMS OF CONGENITAL DUMP-READERS      %WF 20103210
     M[STACKLOC] ~ @3333333333333333;%                                  20103220
     MOVE(T-STACKLOC-1,STACKLOC,STACKLOC+1);%                       %WF 20103230
     S[7].[18:15] ~ 0;                                                  20103400
%   READ  PRT  INTO  PRTTOW [MIX]%                                      20104000
         DISKIO(IOD, 1-T         ,S[3],%                                20105000
              I~JAR[MIX,S[2] DIV JAR[MIX,8]+10]+S[2] MOD JAR[MIX,8]);%  20106000
         TRP ~ PRTROW[MIX]~[M[T]]&1023[8:38:10];                        20107000
              JAR[P1MIX,9].[FF] := 0;                                   20107100
         SLEEP( [IOD],IOMASK);%                                         20108000
         IF REENTRY THEN%                                               20108100
         BEGIN COMMENT BUILD PHONY ICW, IRCW, & INCW;%                  20108200
              M[STACKLOC]   ~ @2222222222222222;%                       20108300
              M[STACKLOC+1] ~ -FLAG(0&(TRP)[6:33:9]);%                  20108400
              M[STACKLOC+2] ~ -FLAG(0);%                                20108500
              TRP[8]        ~ -FLAG(STACKLOC+2);%                       20108600
              TRP[10]       ~ TRP&(STACKLOC+1)[18:33:15];%              20108700
         END ELSE BEGIN%                                                20108800
%   READ  IN  S.D.  &  FIX PRT [4]%                                     20109000
         NFO[(MIX-1)|NDX+1]~                                            20109100
         TRP[4] ~ [M[T~GETSPACE(S[1], 1, 1)+2]];%                       20110000
         I ~ JAR[MIX,(I~S[0].[CF])DIV JAR[MIX,8]+10]+I MOD JAR[MIX,8];  20111000
         DISKIO(IOD, 1-T, S[1], I);                                     20112000
         SLEEP([IOD],IOMASK);                                           20112100
$ INCLUDE 20112131,IF AUXMEM;                                           20112104
         IF CODEOLAY THEN BEGIN                                         20112105
         SD ~ TRP[4] & (I ~ S[1])[8:38:10];                             20112110
              WHILE (I~I-1)!0 DO IF SD[I].[1:5]=0 THEN SD[I].[4:1]~1;   20112120
         END;                                                           20112130
         END;                                                           20112140
         DALOCROW[MIX]~[M[SPACE(9)]]&9[8:38:10];                        20112200
         DALOC[P1MIX,1]~PETUSERDISK(500,1);                             20112300
         DALOC[P1MIX,2]~0;DALOC[P1MIX,0]~@200002;                       20112400
         OLAYMASK ~ TWO(P1MIX) OR OLAYMASK;                             20112500
%   READ IN FPB & FIX PRT [3]%                                          20113000
         FPB ~ GETSPACE(S[5]+1,2,0)+2;  M[FPB+S[5]] ~ 0;%               20114000
         NFO[(MIX-1)|NDX]~                                              20114100
         TRP[3]~[M[FB~GETSPACE(S[7]|ETRLNG+(S[7]=0),2,1)+2]]%           20115000
                        &  (S[7]|ETRLNG)[8:38:10];%                     20116000
$INCLUDE 20116101, IF BREAKOUT;                                         20116099
         GRSD[P1MIX].[FF]~S[7];   %RESTART CUTS FB BACK, BREAK NUMBER=0 20116100
$ INCLUDE 20117001,IF AUXMEM;                                           20116999
         AUXCODE[MIX] := AUXDATA[MIX] := 0;                             20117000
         DISKIO ( IOD,1-FPB , S[5] ,%                                   20118000
              I~JAR[MIX,S[4] DIV JAR[MIX,8]+10]+S[4] MOD JAR[MIX,8]);%  20119000
%   INITIALIZE OTHER PRT CELLS%                                         20120000
         TRP [0]~@2525252525252525;%                                    20121000
         TRP[2]~MEMORY;%                                                20122000
         TRP[10]~TRP&(STACKLOC+1)[18:33:15];%                           20123000
         IF JAR[MIX,0]< 0 THEN%                                         20124000
              BEGIN%                                                    20125000
                 IF (NT1~JAR[MIX,2].[8:10]) = 4 THEN % COM. FOR LIBRY   20126000
                   TRP[@26] ~ SAVETIME ELSE IF NT1 = 3 THEN             20127000
                   BEGIN TRP[@26] ~ -1; JAR[MIX,2].[8:10] ~ 2 END;%     20128000
              END;%                                                     20129000
 FOR I:=@25 STEP 1 WHILE COMMON NEQ 0 AND I LSS S[3] DO     %JH428      20130000
              IF TRP[I] = 0 THEN%                                       20131000
                   BEGIN TRP[I] ~ COMMON; COMMON ~ 0 END;%              20132000
         M[TRP[4]]~S[1]-1;%                                             20133000
              TRP[6]~FLAG(0&[TRP[6]][18:33:15]&32[8:38:10]);%           20134000
              IF JAR[MIX,2]}0 THEN                                      20134400
              TRP[11]~FLAG(0&[TRP[11]][18:33:15]&8[8:38:10]);           20134500
%   BRING IN STARTING SEGMENT&BUILD CONTROL WORDS FOR INITIATE%         20135000
         MAKEPRESENT(TRP INX POLISH(S[6],TRP[4],INX,LOD).[8:10]);%      20136000
         M[STACKLOC+2]~-FLAG(POLISH(S[6],TRP[4],INX,LOD)%               20137000
                        .[18:15]);%                                     20138000
         M[STACKLOC+1]~ -FLAG( 0 &(TRP)[6:33:9]);%                      20139000
         M[STACKLOC]~ @2222222222222222 ;%                              20140000
         TRP[8] ~ -FLAG(STACKLOC+2) ;%                                  20141000
         IF (J~TRP[4].[18:6])!0 THEN%                                   20141100
           INTABLEROW[MIX] ~ INTABLEROW[J]%                             20141200
         ELSE BEGIN S2 := INTSIZE+(P(DUP)=0);                           20141300
              INTABLEROW[MIX] := [M[GETSPACE(S2,1,1)+2]]&S2[8:38:10];   20141400
              STREAM(A:=S2, T:=INTABLEROW[MIX]);                        20141500
              BEGIN SI~T;  SI~SI-8;  DS~A WDS;  END;%                   20141600
         END;%                                                          20141700
         SLEEP([IOD], IOMASK);%                                         20141800
%   MOVE  MFID,FID,TYPE ,REEL=CYCLE=DATE=0   TO  FB  FROM  FPB%         20142000
         STREAM( FPB, FB,TEMP~0,C~0);%                                  20143000
              BEGIN%                                                    20144000
              SI ~ FPB;  DI ~ FB;%                                      20145000
       LL:%                                                             20146000
              IF SC="0" THEN BEGIN SI~SI+1;IF SC="0"THEN%               20147000
                   GO TO XXIT  END%                                     20148000
              ELSE  SI~SI+1 ;  SI~SI+2;%                                20149000
           2( DS~LIT "0"; DS~7CHR);%                                    20150000
              SI ~ SI - 15;%                                            20151000
              DS ~  15 LIT"0";%                                         20152000
              DS ~ CHR;%                                                20153000
              DS ~ 8 LIT "0";%                                          20154000
              SI~SI+14;%                                                20155000
              TEMP ~ DI ;%                                              20156000
              DI~LOC C ; DI~DI+7; DS~CHR; SI~SI+C;%                     20157000
              DI~TEMP    ;%                                             20158000
              GO TO LL;%                                                20159000
    XXIT:     END;%                                                     20160000
%   LABEL EQUATION PROCESSING%                                          20161000
     FOR L ~ 1 STEP 1 UNTIL 2 DO                                        20161100
       BEGIN                                                            20161200
         LINK ~ IF L THEN LEQLINK1 ELSE LEQLINK2;                       20161300
         WHILE LINK ! 0 DO                                              20162000
              BEGIN%                                                    20163000
              DISKIO(IOD,-(S INX 0-1),30,                               20164000
                     IF L THEN (I~JAR[MIX,LINK DIV JAR[MIX,8]+10] +     20164100
                                          LINK MOD JAR[MIX,8])          20164200
                          ELSE LINK);                                   20164300
              SLEEP([IOD],IOMASK);                                      20165000
              I ~ 0;                                                    20166000
              IF NOT L THEN FORGETESPDISK(LINK);                        20167000
              LINK ~ S[29];                                             20168000
              IF S[0] = 14 THEN GO TO STOP;                             20169000
         UNBLK:%                                                        20170000
              STREAM (FN~0:ZERO~0,T2~0, FPB,F~[S[14|I+4]],C~0);%        20171000
              BEGIN%                                                    20172000
              SI ~ F; DI~LOC C; DI~DI+7 ; DS~CHR;%                      20173000
              SI ~ FPB;%                                                20174000
         L:%                                                            20175000
              DI~LOC FN; DI~DI+6; DS~2 CHR;%                            20176000
              DI ~ LOC ZERO;  SI~SI-2;%                                 20177000
              IF 2 SC = DC THEN GO TO XXIT;%                            20178000
              SI ~ SI+15;%                                              20179000
              DI ~ F;%                                                  20180000
              IF SC = DC THEN%                                          20181000
                   BEGIN%                                               20182000
                   IF C SC=DC THEN GO TO XXIT END%                      20183000
              ELSE%                                                     20184000
                   BEGIN%                                               20185000
                   SI~SI-1; DI~LOC T2; DI~DI+7; DS~CHR;%                20186000
                   SI~SI+T2;%                                           20187000
                   END;%                                                20188000
              GO TO L;%                                                 20189000
         XXIT:%                                                         20190000
              END;%                                                     20191000
    IF ( T~POLISH) ! 0 THEN%                                            20192000
         BEGIN;%                                                        20193000
         STREAM ( X~[S[14|I]],%                                         20194000
                        Y ~ (T-1)|ETRLNG+FB);%                          20195000
              BEGIN%                                                    20196000
              SI~X; DS~3 WDS; DS~ 7 CHR;%                               20197000
              IF SC ! "~" THEN IF SC !""" THEN DS ~ CHR ELSE DS ~ SET;% 20198000
              END;%                                                     20199000
         END;%                                                          20200000
         IF (I~I+1)= 1 THEN IF S[14]!14 THEN GO TO UNBLK;%              20201000
              END;                                                      20201500
    STOP:                                                               20202000
       END OF LABELEQUATION;                                            20203000
                                                                        20204000
         FORGETSPACE ( FPB);%                                           20205000
                                                                        20206000
         IF ESED THEN % CALL TERMINATE                                  20207000
           BEGIN                                                        20207100
             JAR[MIX,2].[2:1]:=ESED;                                    20207200
              FORGETSPACE(S); SHEETFREE ~ TRUE;                         20208000
              TERMINATE(MIX&35[CTF]);%                                  20209000
           END;                                                         20209100
         SAVEMIX(MIX); BACK: P1MIX~0;                                   20209200
         PRYOR[MIX]~ IF PRIORITY>32766 THEN 32766 ELSE PRIORITY;        20209300
         IF ESED THEN GO TO START ELSE GO TO CONTINUE;                  20209400
    EXIT::%                                                             20210000
         END  SELECTION ROUTINE ;%                                      20211000
         DEFINE%                                                        20212000
              COMMA     = 10#,%                                         20213000
              EQUAL     = 11#,%                                         20214000
              PERIO     = 12#,%                                         20215000
              SLASH     = 13#,%                                         20216000
              QUEST     = 14#,%                                         20217000
              POUND     = 15#,%                                 %LP 1   20217500
              SPECI     = 19#,%                                         20218000
              IDENT     = 20#,%                                         20219000
              UNLOCKV   = 23#,%                                         20219050
              USEV      = 24#,                                          20219100
              LOCKV     = 25#,%                                         20219200
              FREE      = 26#,                                          20219300
              OPEN      = 27#,                                          20219310
              USER      = 28#,                                          20219400
              RUNV      = 29#,                                          20219500
              COMPI     = 30#,%                                         20220000
              EXECU     = 31#,%                                         20221000
              COPY      = 32#,                                          20222000
              UNLOAD    = 33#,                                          20223000
              ADDV      = 34#,                                          20224000
              ENTER     = 35#,                                          20224500
              REMOV     = 36#,                                          20225000
              CHANG     = 37#,                                          20225500
              ENDFI     = 39#,%                                         20226000
              DATAV     = 40#,%                                         20226500
              LABEV     = 41#,%                                         20227000
         SETV           =42#,                                           20228000
         RESETV         =43#,                                           20228100
         FILEV          =47#,                                           20228200
         EXPIRED        =48#,                                           20228300
         ACCESSD        =49#,                                           20228400
              PROCE     = 50#,% A STORE NEAR THE END OF PCC             20229000
              IO        = 51#,%  MAKES USE OF THE ORDER AND VALUES      20230000
              PRIOR     = 52#,%  OF "PROCE" THRU "SAVEV".               20231000
              COMMONV   = 53#,%                                         20232000
              COREV     = 54#,%                                         20232500
              STACK     = 55#,%                                         20233000
              SAVEV     = 56#,%  (SAVE #DAYS ON COMPILE TO LIBRARY)     20233500
              ALGOL     = 60#,%                                         20234000
         FORTRAN        = 62#,%                                         20235000
         TSPOL          =63#,                                           20235050
              BASIC     = 64#,%                                         20235075
         COBOL68        =65#,                                           20235080
         WITH           = 66#,                                          20235099
         COBOL          = 67#,                                          20235100
              LIBRA     = 68#,%                                         20236000
              SYNTA     = 69#,%                                         20237000
              FROM      = 70#,%                                         20238000
              TOV       = 71#,%                                         20239000
              FORM      = 78#,    %SWITCH D(PCC) "FORM"-"SPECIAL"%      20240000
              NO        = 79#,%                                         20241000
              DISK      = 80#,%                                         20242000
              TAPE      = 81#,%                                         20243000
              PUNCH     = 82#,%                                         20244000
              PRINT     = 83#,%                                         20245000
              BACK      = 85#,%                                         20246000
              SPECIAL   = 90#,                                          20247000
              REMOTE    = 89#,                                          20247500
              EU        =91#,                                           20247600
              SLOW      =92#,                                           20247700
              B6500    =93#,                                            20247800
              FAST      = 94#,                                          20247900
              PAPER     = 84#;%                                         20248000
COMMENT  RESWDS CONTAINS RESERVED WORDS FOR CONTROL CARDS;%             20249000
         PROCEDURE  RESWDS    ;%                                        20250000
         BEGIN   LABEL  L;%                                             20251000
         POLISH (XIT); POLISH(.L,DEL);%                                 20252000
   L:::%                                                                20253000
              "UNLOCK ",     23,%                                       20253050
              "USE    ",     24 ,                                       20253100
              "LOCK   ",     25,%                                       20253200
              "FREE   ",     26 ,                                       20253300
              "PUBLIC ",     27 ,                                       20253310
              "USER   ",     28 ,                                       20253400
              "RUN    ",     29,                                        20253500
              "COMPILE",     30 ,  % SWITCH TYPE(CONTROLCARD)%          20254000
              "EXECUTE",     31 ,  %  "RUN" - "LABEL"                   20255000
              "DUMP   ",     32,                                        20256000
              "UNLOAD ",     33,                                        20257000
              "ADD    ",     34,                                        20258000
              "LOAD   ",     35,                                        20259000
              "REMOVE ",     36,                                        20260000
              "CHANGE ",     37,                                        20260500
              "UNIT   ",     38,%                                       20261000
              "END    ",     39,%                                       20261500
              "DATA   ",     40,%                                       20262000
              "LABEL  ",     41,%                                       20263000
         "SET    ", 42,                                                 20264000
         "RESET  ", 43,                                                 20264100
         "FILE   ", 47,                                                 20264300
         "EXPIRED", 48,                                                 20264400
         "ACCESSD", 49,                                                 20264500
              "PROCESS",     50 ,%   A STORE NEAR THE END OF PCC        20265000
              "IO     ",     51 ,%    MAKES USE OF THE ORDER AND VALUES 20266000
              "PRIORIT", 52, %OF "PROCESS" THRU "SAVE".                 20266500
              "COMMON ",     53 ,%                                      20267000
              "CORE   ",     54 ,%                                      20267500
              "STACK  ",     55 ,%                                      20268000
              "SAVE   ",     56 ,%                                      20268500
              "ALGOL  ",     60 ,%                                      20269000
              "XALGOL ",     61 , % ALGOL WITHOUT STREAM PROCEDURES     20269100
         "FORTRAN",          62,%                                       20270000
         "TSPOL  ",          63,                                        20270050
              "BASIC  ",     64 ,%                                      20270075
         "COBOL68",          65,                                        20270080
         "WITH   ",          66,                                        20270099
         "COBOL  ",          67,                                        20270100
              "LIBRARY",     68 ,%                                      20271000
              "SYNTAX ",     69 ,%                                      20272000
              "FROM   ",     70 ,%                                      20273000
              "TO     ",     71 ,%                                      20274000
              "FORM   ",     78 ,  % SWITCH D(PCC)%                     20275000
              "NO     ",     79 ,  %   "FORM"-"SPECIAL"%                20276000
              "DISK   ",     80 ,%                                      20277000
              "TAPE   ",     81 ,%                                      20278000
              "PUNCH  ",     82 ,%                                      20279000
              "PRINT  ",     83 ,%                                      20280000
              "BACK   ",     85 ,%                                      20281000
              "SPECIAL",     90,%                                       20282000
              "REMOTE ",     89,%                                       20282500
              "SERIAL ",86,%                                            20283000
              "UPDATE ",87,%                                            20284000
              "SPO    ",88,%                                            20285000
              "PAPER  ",     84 ,%                                      20286000
              "EU     ",91,                                             20286100
              "SLOW   ",92,                                             20286200
          "B6500  ",93,                                                 20286300
              "FAST   ",94,                                             20286400
              "CC     ",     14 ,  % CC MUST = QUEST%                   20287000
                           0,0 ;  END  ;%                               20288000
ARRAY DIRECT[*];                                                        20288500
                                                                        20289000
COMMENT  FETCH READS THE NEXT CONTROL CARD  ,  SETS SOURCE TO BEGINNING 20290000
         OF CARD , SETS LAST WORD OF CARD TO PERIOD.      ;%            20291000
    PROCEDURE FETCH(UNITNO,CARDLOC,SOURCE);                             20292000
              VALUE UNITNO,CARDLOC;                                     20292100
              REAL  UNITNO,CARDLOC,SOURCE ;                             20292200
         BEGIN%                                                         20293000
              REAL T,E;                                                 20294000
              E:=@14&UNITNO[45:1:1]; UNITNO:=ABS(UNITNO);               20294800
         IF UNITNO = 30 THEN % DCOM                                     20295000
           M[SOURCE:=CARDLOC]:=@1425452432373737                        20295100
         ELSE                                                           20295200
           BEGIN   % NOT DCOM                                           20295300
              IF UNITNO}32 THEN T~                                      20296000
                   READEMFROMDISK(CIDROW[UNITNO-32],%                   20297000
                        [M[CARDLOC]]&10[8:38:10]) ELSE%                 20298000
      DO BEGIN T~                                                       20298100
                                                                        20298111
              WAITIO(CARDLOC INX @40000000,E,UNITNO);                   20299000
               IF UNITNO=30 OR T.[45:1] THEN                            20299020
               STREAM(Q~12,CARDLOC);                                    20299030
               BEGIN SI~LOC Q;SI~SI+7;DS~CHR;DS~4 LIT "END." END;       20299040
              IF UNITNO=25 THEN                                         20299110
              BEGIN                                                     20299111
              STREAM(T~0:CARDLOC);%                                     20300000
              BEGIN SI~CARDLOC;DI~LOC T;DI~DI+6;SI~SI-1;DS~2CHR;SI~SI-1;20301000
                   DI~CARDLOC;DI~DI-1;DS~LIT"<";8(60(IF SC="~" THEN     20301100
                   BEGIN DS~CHR;JUMP OUT 2 TO L END;IF SC="<" THEN      20301200
                   BEGIN DI~DI-1;IF SC!DC THEN DI~DI-1 END ELSE         20301300
                   DS~CHR));                                            20301400
              L:   DI~CARDLOC;DI~DI-1;SI~LOC T;SI~SI+6;DS~CHR;          20301500
              END;                                                      20301600
              END ELSE P(0);                                            20301700
         END UNTIL P.[42:6]!31;                                         20302000
         M[(SOURCE ~ CARDLOC)+9]~0&"."[1:43:5];%                        20303000
           END;    % NOT DCOM                                           20303900
         END    ;%                                                      20304000
COMMENT THE SCAN ROUTINE IS USED FOR CONTROL CARD SCANNING.%            20305000
              SCAN  RETURNS THE FOLLOWING RESULTS :%                    20306000
                   4  FOR IDENTIFIERS WHICH ARE NOT RESERVED%           20307000
                   0  FOR PERIOD%                                       20308000
                   1  FOR SLASH%                                        20309000
                   2  FOR QUESTION MARK%                                20310000
                   5...  FOR IDENTIFIERS IN DIRECT.%                    20311000
                   3  FOR OTHER SPECIAL CHARACTERS.%                    20312000
                   13  FOR "PRIORITY"                 ;%                20313000
 REAL PROCEDURE SCN(UNITNO,CARDLOC,SOURCE,ACCUM,COUNT,LASTSCAN);        20314000
              VALUE UNITNO,CARDLOC                             ;        20314100
               REAL UNITNO,CARDLOC,SOURCE,      COUNT,LASTSCAN ;        20314200
              ARRAY                       ACCUM[*]             ;        20314300
         BEGIN%                                                         20315000
         LABEL  GOGO,       TYPE0,TYPE1,TYPE2;%                         20316000
         SWITCH TYPE ~ TYPE0,TYPE1,TYPE2 ;%                             20317000
         DEFINE DSIZE =  56#;%                                          20318000
         REAL  I;%                                                      20319000
         LABEL PERPER;%                                                 20320000
    GOGO:%                                                              20321000
         IF LASTSCAN THEN%                                              20322000
              BEGIN IF LASTSCAN < 0 OR UNITNO = 31 THEN%                20323000
                        BEGIN I ~ QUEST; LASTSCAN ~ 0; GO TO TYPE1 END; 20324000
                   FETCH(UNITNO,CARDLOC,SOURCE); LASTSCAN~0;            20325000
              END;%                                                     20326000
         I ~ IDENT;%                                                    20327000
         STREAM (J~0,K~0,SOURCE : ACCUM);%                              20328000
              BEGIN%                                                    20329000
              SI ~ SOURCE ; DI ~ ACCUM ;  DI~DI+1;%                     20330000
         L:   IF SC = " " THEN BEGIN SI~SI+1; GO L END;%                20331000
              IF SC = ALPHA THEN%                                       20332000
                   BEGIN%                                               20333000
              IF SC =@14 THEN GO TO L3;%                                20334000
                   DS ~ CHR ; TALLY ~ 1;%                               20335000
              L1:  63(IF SC=ALPHA THEN BEGIN DS~CHR;%                   20336000
                        TALLY~TALLY+1 END ELSE JUMP OUT);%              20337000
                   K~TALLY; TALLY~0; J~TALLY;  DS~8 LIT" ";%            20338000
                   END%                                                 20339000
              ELSE IF SC = """ THEN%                                    20340000
                   BEGIN    SI ~ SI+1;%                                 20341000
      30(IF SC!""" THEN IF SC!"." THEN IF SC!"~" THEN BEGIN DS~CHR;     20342000
          TALLY~TALLY +1 END ELSE JUMP OUT TO L3                        20342200
          ELSE JUMP OUT);                                               20342600
                   SI~SI+1;%                                            20343000
                   K~TALLY; TALLY~1; J~TALLY; DS~8 LIT" ";%             20344000
                   END%                                                 20345000
              ELSE BEGIN%                                               20346000
         L3:%                                                           20347000
                   TALLY ~ 2; J~TALLY; DI~LOC K; DI~DI+7; DS~CHR ;%     20348000
                   END;%                                                20349000
              SOURCE ~ SI;%                                             20350000
                   END;%                                                20351000
COMMENT  STACK NOW CONTAINS :  0 FOR IDENTIFIER & NO. OF CHRS%          20352000
                               1 FOR "ID"       & NO. OF CHRS%          20353000
                               2 FOR SPECIAL CHR & ACTUAL CHR   ;%      20354000
         P([SOURCE],~);                                                 20355000
         P([COUNT],~);                                                  20356000
         GO TO TYPE[POLISH];%                                           20357000
     TYPE0:%                                                            20358000
          BEGIN                                                         20361000
         I~-2;   WHILE  DIRECT[I~I+2]!0  DO%                            20362000
              IF (DIRECT[I] EQV ACCUM[0])= NOT 0  THEN%                 20363000
              BEGIN IF DIRECT[I+1] !QUEST OR UNITNO=25 OR UNITNO}30 THEN20364000
                   BEGIN I~DIRECT[I+1];GO TO TYPE1 END END;%            20365000
              I ~ IDENT  ;  END;%                                       20366000
         GO TO TYPE1  ;%                                                20367000
    TYPE2:%                                                             20368000
         IF COUNT="~" OR%                                               20369000
              COUNT ="." THEN%                                          20370000
                   BEGIN LASTSCAN ~ 1;%                                 20371000
    PERPER:             I ~ PERIO; GO TO TYPE1;%                        20372000
                   END;%                                                20373000
         IF COUNT="-" THEN BEGIN IF UNITNO}32 THEN                      20374000
                                 IF CIDTABLE[UNITNO-32,3]}              20374100
                                    CIDTABLE[UNITNO-32,7] THEN          20374200
                                    BEGIN I~ENDFI; GO TO TYPE1 END;     20374300
                                 IF UNITNO = 31 THEN                    20374310
                                 BEGIN I~PERIO; GO TO TYPE1 END;        20374320
                                 FETCH(UNITNO,CARDLOC,SOURCE);          20374400
                                 GO TO GOGO;                            20374500
                           END;                                         20374600
         IF COUNT = ";" THEN%                                           20375000
              BEGIN LASTSCAN ~ -1; GO TO PERPER END;%                   20376000
         I ~ IF COUNT ="/" THEN SLASH ELSE%                             20377000
                  (IF COUNT = @14 THEN QUEST ELSE%                      20378000
                  (IF COUNT =","  THEN COMMA ELSE%                      20379000
                  (IF COUNT="=" THEN EQUAL ELSE %               %LP 1   20380000
              (IF COUNT="#" THEN POUND ELSE SPECI))));          %LP 1   20380500
    TYPE1: SCN~I;                                                       20381000
                END   SCAN  ;%                                          20382000
 PROCEDURE SEEKNAM(A,B,C,D,E,N); VALUE A,B; REAL A,B,C,D,E,N;           20382010
         BEGIN                                                          20382020
         LABEL FIND,L;                                                  20382030
         ARRAY NB[*];                                                   20382040
         REAL I,T; INTEGER J;                                           20382050
         INTEGER J1,J2,J3,K1,K2;                                        20382052
         LABEL RESTART;                                                 20382054
         IF C=0 THEN                                                    20382056
         BEGIN N:=SPACE(60)-1;                                          20382058
              J1:=J3:=0; K1:=K2:=MODULUS-1;                             20382060
              IF A GEQ 0 THEN J1:=K1:=(A.[6:18]+A.[24:24]) MOD MODULUS; 20382062
              IF B GEQ 0 THEN J3:=K2:=(B.[6:18]+B.[24:24]) MOD MODULUS; 20382064
         END ELSE                                                       20382066
         BEGIN I:=(T:=M[N]).[42:6];                                     20382068
              J1:=T.[36:6]; J2:=T.[30:6]; J3:=T.[12:6];                 20382070
              K1:=T.[24:6]; K2:=T.[18:6];                               20382072
         END;                                                           20382074
         NB:=[M[N+1]]&60[8:38:10];                                      20382076
         LOCKDIRECTORY;                                                 20382080
         IF C NEQ 0 THEN GO TO RESTART;                                 20382095
         FOR J1:=J1 STEP 1 UNTIL K1 DO                                  20382100
         FOR J2:=J3 STEP 1 UNTIL K2 DO                                  20382110
         BEGIN J:=SCRAMBLE(J1,J2);                                      20382120
              DO BEGIN                                                  20382130
                   DISKWAIT(-N-1,60,J);                                 20382140
                   FOR I:=0 STEP 3 UNTIL 57 DO                          20382150
                   BEGIN                                                20382160
                   IF (T:=NB[I]) NEQ @14 THEN                           20382165
                   IF (T EQV A)=NOT 0 OR A<0 THEN                       20382170
                   IF (NB[I+1] EQV B)=NOT 0 OR B<0 THEN GO FIND;        20382180
 RESTART:          END;                                                 20382190
              END UNTIL (J:=NB[2].[FF])=0;                              20382195
              END;                                                      20382200
         FORGETSPACE(NB);                                               20382202
         C:=0;                                                          20382204
         GO TO L;                                                       20382206
    FIND:                                                               20382210
         D~NB[I];E~NB[I+1];                                             20382220
         C:=NB[I+2].[CF];                                               20382225
         M[N]:=I&J1[36:42:6]&J2[30:42:6]&K1[24:42:6]&K2[18:42:6]&       20382226
             J3[12:42:6];                                               20382227
    L:   UNLOCKDIRECTORY;                                               20382230
         END;      % SEEKNAME                                           20382240
 REAL PROCEDURE PPC                                                     20383000
         (ADDR,EQN,X,DEX,TYPE,UNITNO,CARDLOC,SOURCE,ACCUM,LASTSCAN);    20384000
    VALUE                TYPE,UNITNO,CARDLOC                       ;    20385000
     REAL ADDR,      DEX,TYPE,UNITNO,CARDLOC,SOURCE,      LASTSCAN ;    20386000
    ARRAY      EQN[*],X[*],                         ACCUM[*]       ;    20386100
         BEGIN%                                                         20387000
         REAL IOD,COUNT;                                                20388000
         LABEL  EXIT,ERROR,NEXT,LFORM,LNO,LDISK,LTAPE,LPUNCH,LPAPER,%   20389000
                    ROUND,%                                             20390000
              SERIAL,UPDATE,SPO,GLOTZ,%                                 20391000
              DOWN,LREMOTE,                                             20392000
               LSPECIAL,LPRINT,LBACK ;%                                 20393000
         SWITCH  D ~ LFORM,LNO,LDISK,LTAPE,LPUNCH,LPRINT,LPAPER,%       20394000
              LBACK,SERIAL,UPDATE,SPO,%                                 20395000
              LREMOTE,LSPECIAL;                                         20396000
         REAL NOLBL,TPNO ;%                                             20397000
         REAL SUBROUTINE SCAN;                                          20397100
              BEGIN SCAN~SCN(UNITNO,CARDLOC,SOURCE,ACCUM,COUNT,LASTSCAN)20397200
              END;                                                      20397300
         IF  TYPE = FILEV  THEN%                                        20398000
              BEGIN%                                                    20399000
              IF  ADDR =0  THEN ADDR~X[13]~GETESPDISK ;%                20400000
              IF   DEX  =  2   THEN%                                    20401000
                   BEGIN%                                               20402000
                   EQN [29] ~ GETESPDISK;%                              20403000
                   DISKIO( IOD , EQN    INX 0-1  ,30, ADDR);%           20404000
                   ADDR ~ EQN[29];%                                     20405000
                   DEX ~ 0;%                                            20406000
                   SLEEP([IOD], IOMASK);%                               20407000
                   END;%                                                20408000
              TYPE ~ SCAN;%                                             20409000
              EQN ~ (14 | DEX) INX  EQN ;%                              20410000
              STREAM( COUNT, ACCUM, Z ~ [EQN[4]]);%                     20411000
                   BEGIN%                                               20412000
                   SI ~ LOC COUNT ; SI~SI+7; DI~Z; DS~CHR;%             20413000
                   SI ~ ACCUM ; SI~SI+1;  DS~ COUNT CHR ;%              20414000
                   END ;%                                               20415000
              IF  SCAN ! EQUAL OR SCAN < IDENT THEN GO TO ERROR;%       20416000
              EQN[2] ~ EQN[3]~%                                         20417000
              EQN[0]~0;  EQN[1] ~ ACCUM[0];%                            20418000
              IF  (TYPE~SCAN)= SLASH  THEN%                             20419000
              BEGIN  IF SCAN}IDENT  THEN%                               20420000
                   BEGIN   EQN[0]~EQN[1]; EQN[1]~ACCUM[0]   ;%          20421000
              ;    END    ELSE   GO TO   ERROR;%                        20422000
                        TYPE ~ SCAN  END;%                              20423000
              IF TYPE = COMMA THEN%                                     20424000
                   BEGIN%                                               20425000
              IF(TYPE~SCAN)! IDENT OR COUNT >3 THEN  GO TO ERROR;%      20426000
                   STREAM ( S ~ 3-COUNT,COUNT,ACCUM, T~[EQN[2]]);%      20427000
                   BEGIN  SI~ACCUM; SI~SI+1; DI~DI+S; DS~COUNT NUM;%    20428000
                   END;%                                                20429000
              IF(TYPE~SCAN)= COMMA THEN%                                20430000
                   BEGIN%                                               20431000
                   IF(TYPE~SCAN)! IDENT OR COUNT>5 THEN GO TO ERROR;%   20432000
                        STREAM( S~8-COUNT,COUNT,ACCUM, T~[EQN[2]]);%    20433000
                        BEGIN SI~ACCUM; SI~SI+1; DI~DI+S;DS~COUNT NUM%  20434000
                        END;%                                           20435000
                   EQN[2].[42:1] ~ 1;% SO FILE OPEN KNOWS ITS LABELEQUAT20435500
                   IF(TYPE~SCAN)= COMMA  THEN%                          20436000
                        BEGIN%                                          20437000
                   IF(TYPE~SCAN)! IDENT OR COUNT > 2 THEN GO TO ERROR;% 20438000
                        STREAM(S~2-COUNT,COUNT,ACCUM,T~[EQN[3]]);%      20439000
                        BEGIN SI~ACCUM; SI~SI+1; DI~DI+S;DS~COUNT NUM;% 20440000
                        END;    TYPE ~ SCAN;%                           20441000
                        END% CYCLE ;%                                   20442000
                   END% CREATION DATE ;%                                20443000
                   END;%REEL  NUMBER;%                                  20444000
              TPNO~@37;%                                                20445000
              NOLBL ~ 0;%                                               20446000
    ROUND:%                                                             20447000
         WHILE TYPE ! PERIO AND (TYPE<FORM OR TYPE>SPECIAL)DO TYPE~SCAN;20448000
         IF TYPE = PERIO THEN GO TO EXIT;%                              20449000
         GO TO D[TYPE-FORM];%                                           20450000
      NEXT:     TYPE~SCAN;  GO TO  ROUND;%                              20451000
    LFORM:%                                                             20452000
              EQN[3].[42:1]~1; GO TO NEXT;%                             20453000
    LNO:%                                                               20454000
         NOLBL ~ 1; GO TO NEXT;%                                        20455000
    LDISK:%                                                             20456000
         TPNO ~ 10; GO TO NEXT;%                                        20457000
    LTAPE:%                                                             20458000
         TPNO ~ 2; GO TO NEXT;%                                         20459000
    LPUNCH:%                                                            20460000
         IF (TYPE~SCAN)=PERIO THEN BEGIN TPNO~0; GO EXIT END;           20461000
         IF TYPE=BACK THEN                                              20461100
         TPNO~20 ELSE                                                   20461200
         BEGIN TPNO~21; IF SCAN!BACK THEN GO ERROR END;                 20461300
         IF SCAN=PERIO THEN GO ERROR;                                   20461400
         IF (TYPE~SCAN)=PERIO THEN                                      20461500
              TPNO~TPNO+4 ELSE                                          20461600
         IF TYPE=DISK THEN                                              20461700
              TPNO~TPNO+2 ELSE                                          20461800
         IF TYPE!TAPE THEN GO ERROR;                                    20461900
              IF TYPE!PERIO THEN GO NEXT ELSE GO EXIT;                  20461950
    LPAPER:%                                                            20462000
         TYPE ~ SCAN; TPNO ~ 7; GO TO NEXT;%                            20463000
    LSPECIAL:%                                                          20464000
         TPNO ~ 3; GO TO NEXT;%                                         20465000
    LPRINT:%                                                            20466000
         IF (TYPE~SCAN)=PERIO THEN BEGIN TPNO~1; GO EXIT END;        %P 20467000
         IF TYPE=BACK THEN                                           %P 20468000
    LBACK:    TPNO~6 ELSE                                            %P 20469000
         BEGIN TPNO~4; IF SCAN!BACK THEN GO ERROR END;               %P 20470000
         IF SCAN=PERIO THEN GO ERROR;                                %P 20471000
         IF (TYPE~SCAN)=PERIO THEN                                   %P 20472000
              TPNO~22-TPNO ELSE                                      %P 20473000
         IF TYPE=DISK THEN                                           %P 20474000
              TPNO~21-TPNO ELSE                                      %P 20475000
         IF TYPE!TAPE THEN GO ERROR;                                 %P 20476000
              IF TYPE !PERIO THEN GO NEXT ELSE GO EXIT;                 20477000
%                                                                    %P 20478000
    ERROR:%                                                             20479000
         PPC~TRUE;GO DOWN;%                                             20480000
    SPO:      TPNO~11;GO TO NEXT;%                                      20481000
    LREMOTE:  TPNO~ 19;  GO NEXT;                                       20481100
    SERIAL:   TPNO~12;GO TO GLOTZ;%                                     20482000
    UPDATE:   TPNO~13;%                                                 20483000
    GLOTZ:    IF       SCAN !PERIO THEN GO TO NEXT;%                    20484000
    EXIT:%                                                              20485000
         IF   NOLBL THEN TPNO ~ IF TPNO=2 THEN 9 ELSE%                  20486000
                       (IF TPNO =3 THEN 5  ELSE%                        20487000
              (IF TPNO=7 THEN 8 ELSE%                                   20488000
              (IF TPNO=@37 THEN 9 ELSE TPNO)));%                        20489000
         EQN[3].[43:5]~TPNO;%                                           20490000
              DEX  ~  DEX+1;%                                           20491000
              END%                                                      20492000
         ELSE%                                                          20493000
              BEGIN%                                                    20494000
         DO UNTIL (IOD ~ SCAN) = EQUAL OR IOD = PERIO;%                 20495000
         IF IOD = PERIO THEN GO TO ERROR;%                              20496000
              IOD ~ SCAN;%                                              20497000
              STREAM (K~0: A ~ [ACCUM[0]],COUNT);%                      20498000
                   BEGIN%                                               20499000
                   SI ~ A ; SI~SI+1; DI~LOC K;%                         20500000
                   DS ~ COUNT  OCT ;%                                   20501000
              END;%                                                     20502000
         TPNO~P;%                                                       20503000
         IF TYPE=PROCE OR TYPE=IO THEN X[16+TYPE-PROCE]~TPNO|3600       20504000
         ELSE IF TYPE=COREV THEN X[20] ~ TPNO DIV 64                    20504500
         ELSE IF TYPE}PRIOR AND TYPE{SAVEV THEN X[18+TYPE-PRIOR]~TPNO;  20505000
                                                                        20506000
                                                                        20507000
         DO UNTIL SCAN = PERIO;%                                        20508000
              END;%                                                     20509000
    DOWN:%                                                              20510000
         END;%                                                          20511000
PROCEDURE SECURITYMAINT( TYPE,SMID,SFID,CMM,SFH,CARD);                  20511100
VALUE TYPE,SMID,SFID,SFH,CARD;                                          20511110
REAL  TYPE,SMID,SFID,SFH,CARD;                                          20511120
ARRAY CMM[*];                                                           20511130
BEGIN                                                                   20511140
%                                                                       20511145
REAL N4,OPTN,T1;                                                        20511150
REAL T=TYPE;                                                            20511155
LABEL SEC3,FUNC0,FUNC1,FUNC2,FUNC3,SEC4,EXYT;                           20511160
LABEL ERR,ERROR,FUNCJ;%                                                 20511165
SWITCH FUNC~FUNCJ,FUNC0,FUNC1,FUNC2,FUNC3;%                             20511170
LABEL EXIT; %                                                           20511171
         N4:= ABS(CMM[5]);                                              20511181
         IF ((CMM[0]EQV "DECK   ")=NOT 0) AND                           20511182
            (((CMM[1]AND @77000000007777)EQV @12000000003714)=NOT 0)    20511184
         OR SYSTEMFILE(CMM[0],CMM[1]) THEN GO TO ERROR;                 20511188
         IF TYPE = USEV AND                                             20511295
         ((CMM[0]EQV SMID)=NOT 0 AND (CMM[1]EQV SFID)=NOT 0) THEN       20511300
         ELSE                                                           20511305
         IF (OPTN:=DIRECTORYSEARCH(CMM[0],CMM[1],4))!0 THEN             20511306
         IF OPTN LSS 0 THEN GO TO ERROR ELSE                            20511310
         BEGIN                                                          20511311
         IF TYPE=USEV AND M[OPTN+2]<0 THEN GO TO ERR;                   20511312
         IF (T1~((N4 EQV MCP)=NOT 0) OR (CMM[5]=NOT 0)) OR              20511315
           (M[OPTN+2]>0 AND(N4 EQV ABS(M[OPTN+2]))=NOT 0)THEN           20511320
         GO TO SEC3 ELSE                                                20511330
         BEGIN ERR: FORGETSPACE(OPTN);                                  20511340
                       FORGETSPACE(DIRECTORYSEARCH(CMM[0],CMM[1],14));  20511350
            END;                                                        20511360
         END;                                                           20511363
ERROR:                                                                  20511365
         STREAM(A:=[CMM[0]],B:=(OPTN:=GETSPACE(10,0,0)+2));             20511370
         BEGIN SI:=A; SI:=SI+1; DS:=LIT" "; DS:=7 CHR;                  20511380
               SI:=SI+1; DS:=LIT"/"; DS:=7 CHR;                         20511390
               DS:=24 LIT " SECURITY MAINT IGNORED~";                   20511400
         END STREAM;                                                    20511410
         SPOUT(OPTN&CARD[9:9:9]);                                       20511420
         GO TO EXYT;                                                    20511430
    SEC3:                                                               20511440
%                                                                       20511445
         GO TO FUNC[TYPE-UNLOCKV];                                      20511450
   FUNCJ:M[OPTN INX 5]~M[OPTN INX 6]~@14;%                              20511455
         CMM[2] := " UNLOCK"; CMM[3] := "ED~~   ";%                     20511457
         GO TO SEC4;%                                                   20511459
   FUNC0:                                                               20511460
         M[OPTN INX 5]:=-SMID; M[OPTN INX 6]:= SFID;                    20511470
         CMM[2]:= " SECURE"; CMM[3]:= "D WITH ";                        20511480
         M[SFH+2] := P(DUP,LOD,SSB);                                    20511490
         GO TO SEC4;                                                    20511500
   FUNC1:                                                               20511510
         IF T1 AND M[OPTN+2]=0 THEN M[OPTN+2]~MCP;                      20511515
         SMID:=M[OPTN+5]; SFID:=M[OPTN+6];                              20511520
         M[OPTN INX 5]:= M[OPTN INX 6]:=0;                              20511525
         CMM[2]:=" LOCKED"; CMM[3]:=" FROM  "; GO TO SEC4;%             20511530
   FUNC2:                                                               20511540
M[OPTN INX 5]~M[OPTN INX 2].[6:42]; M[OPTN INX 2]~M[OPTN INX 6]~0;      20511550
         CMM[2]:= " FREE F"; CMM[3]:= "ILE~~  "; GO TO SEC4;            20511560
   FUNC3:                                                               20511570
         M[OPTN INX 5]:=  @14;   M[OPTN INX 6]:= 0;                     20511580
         CMM[2]:= " PUBLIC";CMM[3]:= " FILE~~";                         20511590
    SEC4:                                                               20511600
         DISKWAIT(OPTN.[CF],30,OPTN.[FF]);                              20511610
         P(DIRECTORYSEARCH(-CMM[0],CMM[1],14),DEL);                     20511620
         IF SECMSG THEN                                                 20511640
         BEGIN                                                          20511650
         ;STREAM(A:=ABS(SMID),B:=SFID,C:=CMM,Q:=(T LSS FREE)%           20511660
               AND (T!UNLOCKV) AND (ABS(SMID)!12),%                     20511662
               X:=(SFID=0 OR ABS(SFID)=12) %                            20511663
               AND T LSS FREE AND T!UNLOCKV,%                           20511664
               D~OPTN~OPTN INX 0);                                      20511665
         BEGIN SI:=C; SI:=SI+1; DS:=LIT" "; DS:=7 CHR; DS:=LIT"/";      20511670
               3(SI:=SI+1; DS:=7 CHR);                                  20511680
               X(DI:=DI-7; DS:=2 LIT"~~");                              20511685
               Q(DS:=LIT" ";SI:=LOC A;SI:=SI+1;DS:=7 CHR; DS:=LIT"/";   20511690
               SI:=SI+1; DS:= 7 CHR; DS:=LIT"~");                       20511700
         END STREAM;                                                    20511710
         SPOUT(OPTN&CARD[9:9:9]);                                       20511720
         END ELSE FORGETSPACE(OPTN);                                    20511730
    EXYT:                                                               20511800
END SECUTITYMAINT;                                                      20511810
COMMENT  THE PRT CELL "SHEET" GIVES DISK ADDRESS OF 1ST SHEET ENTRY%    20512000
    *** ENTRIES IN THE SHEET ARE AS FOLLOWS:%                           20513000
         S[ 0]         = 1ST NAME (7 CHRS)                              20514000
         S[ 1]         = 2ND NAME (7 CHRS)                              20514500
         S[ 2].[ 1: 2] = 0 NORMAL                                       20514600
                         2 JOB HAS BEEN XS-ED (FORCED RUN)              20514700
                         3 JOB HAS BEEN ES-ED (FORCED RUN AND DS)       20514800
         S[ 2].[ 8:10] = 0 GO JOB (FROM COMPILE & GO)                   20515000
                       = 1 COMPILER (FOR COMPILE & GO)                  20515500
                       = 2 EXECUTE JOB                                  20516000
                       = 3 COMPILER (FOR SYNTAX CHECK)(SET TO 2 LATER)  20516500
                       = 4 COMPILER (FOR COMPILE TO LIBRARY)            20517000
                       = 5 RUN JOB                                      20517200
         S[ 2].[18:15] = SKELETONS DISK ADDRESS (IF S[2].[8:10] = 1,2,4 20517500
         S[ 2].[33:15] = PRIORITY, SAME AS S[18]                        20517800
         S[ 3].[ 2: 1] = 1 RESTART JOB                                  20517850
         S[ 3].[ 8:10] = SCHEDULE-ID FOR THIS JOB                       20517900
         S[ 5]         = STARTING TIME FOR LOG                          20518000
         S[ 6]         = LOCATION OF LAST PART OF LOG                   20518500
         S[13]         = DISK ADDRESS OF LABEL EQUATION ENTRIES         20519000
                         APPLICABLE TO THIS EXECUTION ONLY (SEE BELOW)  20520000
         S[15]         = DISK ADDRESS OF LABEL EQUATION ENTRIES         20521000
                         PRESENTED WHEN PROGRAM WAS COMPILED AND        20522000
                         APPLICABLE TO ALL EXECUTIONS (SEE BELOW)       20523000
         S[16]         = ESTIMATED PROCESSOR TIME                       20524000
         S[17]         = ESTIMATED I/O TIME                             20525000
         S[18]         = PRIORITY                                       20526000
         S[19]         = COMMON VALUE                                   20527000
         S[20]         = ESTIMATED CORE REQUIREMENTS                    20528000
         S[21]         = STACK SIZE                                     20529000
         S[22]         = TIME TO SAVE PROGRAM ON COMPILE TO LIBRARY     20529500
         S[23].[9:9]   = REMOTE STATION ADDRESS, ELSE 0                 20529600
         S[23].[31:17] = TIME JOB WAS PUT INTO SHEET (FOR TS MESSAGE)   20529700
         S[24]          = USER CODE                                     20529800
         S[25]         = HEADER ADDRESS FOR THE JOB                     20529900
         S[29]         = DISK ADDRESS OF NEXT SHEET ENTRY (=0 IF LAST)  20530000
    *** ENTRIES FOR LABEL EQAT. ARE AS FOLLOWS:%                        20531000
         F[0]      = MULTI-FILE ID (7 CHRS)%                            20532000
         F[1]      = FILE ID      (7 CHRS)%                             20533000
         F[2].[0:18]= REEL NO    (3 CHRS)%                              20534000
         F[2].[18:30]=  CREATION DATE  (5 CHRS)%                        20535000
         F[3].[0:12]= CYCLE    (2 CHRS)%                                20536000
         F[3].[42:1] = 1  FOR FORMS REQUIRED                            20537000
         F[3].[43:5] = 0  FOR CP  (FILE TYPES )                         20538000
                      1  FOR LP%                                        20539000
                      2  FOR MT%                                        20540000
                      3  FOR SPECIFIC UNIT%                             20541000
                      4  FOR LP  (MAY BACKUP)%                          20542000
                      5  FOR SPECIFIC (UNLABLED)%                       20543000
                      6  FOR LP  (MUST BACKUP)%                         20544000
                      7  FOR PT%                                        20545000
                      8  FOR PT (UNLABLED)%                             20546000
                      9  FOR MT (UNLABLED)%                             20547000
                     10  FOR DISK%                                      20548000
         F[4].[0:6]= NO OF CHARS IN INTERNAL NAME%                      20549000
         F[4].[6:42]= INTERNAL NAME (MAY CONTINUE TO F[11])%            20550000
         F[14]- F[25]  SAME AS ABOVE FOR NEXT FILE (F[14]=14 IF NO NEXT)20551000
         F[29]     = DISK ADDRESS OF NEXT LABEL EQUAT. ENTRY(=0 IF NONE)20552000
    *** CONTENTS OF JAR  ARE :%                                         20553000
         J[0] -J[6] = SAME AS SHEET ENTRIES S[0]-S[6]%                  20554000
         J[7]      =  IDLE TIME%                                        20555000
         J[8]      = LENGTH OF EACH ROW OF CODE FILE%                   20556000
         J[9]       = NO. OF ROWS%                                      20557000
         J[10]-J[29]= DISK ADDRESS OF ROWS%                             20558000
         ;%                                                             20559000
REAL PROCEDURE LIBCC(CARD,SOURCE,ACCUM,COUNT,LASTSCAN,USERID,PROG,      20566000
    CMM,OPTN,T); VALUE CARD;                                            20566100
    REAL CARD,SOURCE,COUNT,LASTSCAN,USERID,OPTN,T;                      20566200
    ARRAY ACCUM[*],PROG[*],CMM[*];                                      20566300
BEGIN                                                                   20566400
    REAL CN,LIBNO,UNITNO,CARDLOC;                                       20566500
    LABEL CCA,QUIT,POWIE,CHAN,REMO,INCSC,GETEM,ENTE,LCOPY,SEEK,INIT;    20566600
    SWITCH SW~LCOPY,LCOPY,ENTE,ENTE,REMO,CHAN;                          20566700
    REAL SUBROUTINE SCAN;                                               20566800
         SCAN~SCN(UNITNO,CARDLOC,SOURCE,ACCUM,COUNT,LASTSCAN);          20566900
    REAL SUBROUTINE SKAN;                                               20566905
    BEGIN                                                               20566910
    STREAM(X:=0:CN:=0,ACCUM);                                           20566915
    BEGIN                                                               20566920
    SI:=ACCUM;SI:=SI+1;                                                 20566925
    8(IF SC GEQ "0" THEN BEGIN SI:=SI+1;TALLY:=TALLY+1; END ELSE        20566930
      IF SC=" " THEN JUMP OUT ELSE BEGIN TALLY:=0;JUMP OUT END);        20566935
      CN:=TALLY;SI:=SI-CN;DI:=LOC X;DS:=CN OCT;                         20566940
    END;                                                                20566945
    SKAN:=P;                                                            20566950
    END OF SKAN;                                                        20566955
    LIBCC~0;                                                            20567000
    UNITNO~CARD.[2:6];                                                  20567100
    CARDLOC~CARD INX 0;                                                 20567200
    GO TO SW[T-COPY];                                                   20567300
LCOPY:                                                                  20567400
ENTE:                                                                   20567500
         IF (CN:=SCAN)=IDENT THEN                                       20567600
         BEGIN;                                                         20567700
              IF(PROG[0]:=SKAN)=0 THEN PROG[0]:=511 ELSE CN:=SCAN;      20567800
              IF PROG[0]>511 THEN PROG[0]:=511;                         20567900
         END ELSE PROG[0]:=511;                                         20568000
         CMM[19]:=0;                                                    20568050
         IF CN=B6500 THEN BEGIN CMM[19].[15:1]:=1;CN:=SCAN END;         20568060
         IF CN=TOV AND T GTR UNLOAD THEN                                20568100
         BEGIN                                                          20568200
              IF (CN:=SCAN)=EU THEN                                     20568300
              BEGIN                                                     20568400
              IF(CN:=SCAN)!IDENT THEN GO TO INCSC;                      20568500
              IF P(SKAN,DUP)>19 THEN BEGIN P(DEL);GO INCSC END;         20568600
              CN~P+1;CMM[19].[9:6]~CN;                                  20568610
              IF CN>NEUP.NEUF THEN GO TO INCSC;                         20568611
              END                                                       20568620
              ELSE IF CN=SLOW THEN CMM[19]~P(DUP,LOD) OR M ELSE         20568630
              IF CN=FAST THEN CMM[19]~-CMM[19] ELSE GO TO INCSC;        20568640
              CN:=SCAN;                                                 20568650
         END;                                                           20568700
         IF CN=EXPIRED THEN                                             20568728
         BEGIN                                                          20568729
              PROG[0].[9:1]:=1;                                         20568730
              CN:=SCAN;                                                 20568740
         END;                                                           20568750
         IF CN=ACCESSD THEN                                             20568760
         BEGIN                                                          20568770
              PROG[0].[8:1]:=1;                                         20568780
              CN:=SCAN;                                                 20568790
         END;                                                           20568795
         IF UNITNO=23 OR UNITNO=24 OR UNITNO}32 THEN                    20568900
              PROG[0].[2:6]~UNITNO;                                     20569000
         IF SCAN!IDENT THEN GO TO INCSC;                                20569100
         PROG[1]~ACCUM[0];                                              20569200
         PROG[28]~0;                                                    20569250
         CMM[0]~"LIBMAIN";                                              20569300
         CMM[1]~"DISK   ";                                              20569400
         CMM[2]~0&2[8:38:10];                                           20569500
         CMM[13]~0;                                                     20569600
         CMM[23]~0&CARD[9:9:9];                                         20569700
         LIBNO~GETESPDISK;CMM[19].[CF]~LIBNO;                           20569800
         CMM[19].[FF]~T;                                                20569810
    GETEM:  %   SCAN FILE NAMES AND STORE THEM IN ESPDISK               20569900
         FOR CN~2 STEP 2 UNTIL 26 DO                                    20570000
         BEGIN                                                          20570100
         IF (OPTN~SCAN)=EQUAL THEN PROG[CN]~-1                          20570200
              ELSE IF OPTN}IDENT THEN PROG[CN]~ACCUM[0] ELSE GO POWIE;  20570300
              IF SCAN!SLASH THEN GO POWIE;                              20570400
         IF (OPTN~SCAN)=EQUAL THEN PROG[CN+1]~-1                        20570500
              ELSE IF OPTN}IDENT THEN PROG[CN+1]~ACCUM[0] ELSE GO POWIE;20570600
              IF (OPTN~SCAN)=PERIO OR OPTN=POUND THEN GO TO QUIT%LP 1   20570700
                   ELSE IF OPTN!COMMA THEN GO POWIE;                    20570800
         END;                                                           20570900
         PROG[29]~GETESPDISK;                                           20571000
         DISKWAIT(PROG INX 0,30,LIBNO);                                 20571100
         LIBNO~PROG[29];                                                20571300
         GO GETEM;                                                      20571400
    QUIT:                                                               20571500
         PROG[29]~0;                                                    20571600
         PROG[CN+2]~@14;                                                20571700
         DISKWAIT(PROG INX 0,30,LIBNO);                                 20571800
         LIBNO~ABS(CMM[19]);                                            20572000
         GO INIT;                                                       20572100
    POWIE:                                                              20572200
         IF CMM[19].[CF]!LIBNO THEN % MORE THAN ONE SEGMENT USED        20572300
         BEGIN                                                          20572400
              DISKWAIT(-PROG.[CF],30,CMM[19].[CF]);                     20572500
              FORGETESPDISK(CMM[19].[CF]);                              20572700
              CMM[19]~PROG[29];                                         20572800
              GO POWIE;                                                 20572900
         END;                                                           20573000
         FORGETESPDISK(LIBNO);                                          20573100
         GO INCSC;                                                      20573200
    REMO:                                                               20573300
         IF (CN~SCAN)=EQUAL THEN CMM[0]~-1 ELSE                         20573400
         IF CN}IDENT THEN CMM[0]~ACCUM[0] ELSE GO INCSC;                20573500
         IF SCAN!SLASH THEN GO INCSC;                                   20573600
         IF (CN~SCAN)=EQUAL THEN CMM[1]~-1 ELSE                         20573700
         IF CN}IDENT THEN CMM[1]~ACCUM[0] ELSE GO INCSC;                20573800
         CN:=T:=0;                                                      20573850
         IF (CMM[0] OR CMM[1]) LSS 0 THEN                               20573900
    SEEK:                                                               20574000
         SEEKNAM(CMM[0],CMM[1],CN,CMM[2],CMM[3],OPTN) ELSE              20574100
         BEGIN                                                          20574200
              CMM[2]:=CMM[0];                                           20574300
              CMM[3]:=CMM[1];                                           20574400
              CN:=1;                                                    20574500
         END;                                                           20574600
         IF CN!0 THEN T:=IF SYSTEMFILE(CMM[2],CMM[3]) THEN -1 ELSE      20574700
              DIRECTORYSEARCH(CMM[2],CMM[3],4);                         20574750
         IF T=0 THEN LBMESS(IF CMM[0] LSS 0 THEN                        20574800
              "     .=" ELSE -CMM[0],IF CMM[1] LSS 0 THEN "=      "     20574900
              ELSE CMM[1],"NOT REM","OVED(","NOT ON"," DISK)",          20575000
              0&CARD[9:9:9]) ELSE                                       20575100
         IF T LSS 0 AND CN!0 THEN LBMESS(-CMM[2],CMM[3],"NOT ",         20575200
              "REMOVED","(SYSTEM"," FILE)",0&CARD[9:9:9]) ELSE          20575300
         IF T GTR 0 AND CN!0 THEN                                       20575400
         BEGIN                                                          20575500
              IF M[T+2]!0 AND (USERID EQV MCP)!NOT 0 AND                20575600
              (USERID EQV ABS(M[T+2])) NEQ NOT 0 THEN %                 20575700
              BEGIN                                                     20575800
                   LBMESS(-CMM[2],CMM[3],"NOT ","REMOVED","(INVALI",    20575900
                        "D USER)",0&CARD[9:9:9]);                       20576000
                   FORGETSPACE(DIRECTORYSEARCH(CMM[2],CMM[3],14));      20576100
              END ELSE                                                  20576200
              FORGETSPACE(DIRECTORYSEARCH(CMM[2],CMM[3],6));            20576300
              FORGETSPACE(T);                                           20576350
         END;                                                           20576400
         IF CN!0 AND (CMM[0] OR CMM[1])<0 THEN GO SEEK;                 20576500
         IF (CN~SCAN)=COMMA THEN GO REMO;                               20576600
         IF CN=PERIO THEN GO TO CCA ELSE GO TO INCSC;                   20576700
    CHAN:                                                               20576800
         FOR CN~0 STEP 1 UNTIL 3 DO                                     20576900
         BEGIN                                                          20577000
              IF SCAN}IDENT THEN CMM[CN]~ACCUM[0] ELSE GO INCSC;        20577100
              OPTN~SCAN;                                                20577200
         END;                                                           20577300
         IF (T~DIRECTORYSEARCH(CMM[2],CMM[3],5))!0 THEN                 20577400
         BEGIN                                                          20577500
              FORGETSPACE(T);                                           20577600
             LBMESS(-CMM[0],CMM[1],"NOT ","CHANGED","(DUP ",            20577700
                   "FILE)",0&CARD[9:9:9]);                              20577800
         END ELSE                                                       20577900
         IF (T:=IF SYSTEMFILE(CMM[0],CMM[1]) THEN -1 ELSE               20578000
              DIRECTORYSEARCH(CMM[0],CMM[1],4))=0 THEN                  20578050
             LBMESS(-CMM[0],CMM[1],"NOT ","CHANGED","(NOT ON",          20578100
                   " DISK)",0&CARD[9:9:9]) ELSE                         20578200
         IF T LSS 0 THEN LBMESS(-CMM[0],CMM[1],"NOT ","CHANGED",        20578210
              "(SYSTEM"," FILE)",0&CARD[9:9:9]) ELSE                    20578220
         IF M[T+2]!0 AND (USERID EQV MCP)!NOT 0 AND                     20578300
              (USERID EQV ABS(M[T+2])) NEQ NOT 0 THEN %                 20578400
         BEGIN                                                          20578500
             LBMESS(-CMM[0],CMM[1],"NOT ","CHANGED","(INVALI",          20578600
                   "D USER)",0&CARD[9:9:9]);                            20578700
              FORGETSPACE(T);                                           20578800
              FORGETSPACE(DIRECTORYSEARCH(CMM[0],CMM[1],14));           20578900
         END ELSE                                                       20579000
         BEGIN                                                          20579100
              M[T+4]:=(*P(DUP))&2[1:46:2];                              20579200
              ENTERUSERFILE(-CMM[2],CMM[3],T INX 0-1);                  20579300
              T:=T&DIRECTORYFREE[18:32:15];                             20579400
              FORGETSPACE(DIRECTORYSEARCH(CMM[0],CMM[1],8));            20579500
              HEADERUNLOCK(CMM[2],CMM[3],T);                            20579600
              IF LIBMSG THEN LBMESS(CMM[0],CMM[1],"CHANGED"," TO ",     20579700
                   -CMM[2],CMM[3],0&CARD[9:9:9]);                       20579710
              PBCOUNT~PBCOUNT-((((CMM[0] EQV "PBD    ")=NOT 0) OR       20579720
                   ((CMM[0] EQV "PUD    ")=NOT 0)) AND (CMM[1].[CF]=1)) 20579730
                   +((((CMM[2] EQV "PBD    ")=NOT 0) OR                 20579740
                   ((CMM[2] EQV "PUD    ")=NOT 0)) AND (CMM[3].[CF]=1));20579750
         END;                                                           20579800
         IF OPTN=COMMA THEN GO CHAN;                                    20579900
         IF OPTN=PERIO THEN GO TO CCA ELSE GO INCSC;                    20580000
INIT:    LIBCC~LIBNO; GO TO CCA;                                        20580100
INCSC:   LIBCC~1;                                                       20580200
CCA:                                                                    20580300
END; %    LIBCC PROCEDURE                                               20580400
         REAL PROCEDURE ACESBIT(CARD,SOURCE,ACCUM,COUNT,LASTSCAN,       20580500
                                USERID,CMM,TOG);                        20580505
              VALUE CARD;                                               20580510
              BOOLEAN TOG;                                              20580515
              REAL CARD,SOURCE,COUNT,LASTSCAN,USERID;                   20580520
              ARRAY ACCUM[*],CMM[*];                                    20580525
         BEGIN LABEL CCERR,MORE,SEEK;                                   20580530
               REAL CN,UNITNO,CARDLOC,N,T;                              20580535
               REAL SUBROUTINE SCAN;                                    20580540
              SCAN~SCN(UNITNO,CARDLOC,SOURCE,ACCUM,COUNT,LASTSCAN);     20580545
               UNITNO:=CARD.[2:6];                                      20580550
               CARDLOC:=CARD INX 0;                                     20580555
              IF SCAN NEQ ACCESSD THEN GO TO CCERR;                     20580560
MORE:         IF (CN:=SCAN)=EQUAL THEN CMM[0]:=-1 ELSE                  20580565
               IF CN GEQ IDENT THEN CMM[0]:=ACCUM[0] ELSE GO CCERR;     20580570
              IF SCAN NEQ SLASH THEN GO TO CCERR;                       20580575
              IF (CN:=SCAN)=EQUAL THEN CMM[1]:=-1 ELSE                  20580580
               IF CN GEQ IDENT THEN CMM[1]:=ACCUM[0] ELSE               20580585
              GO TO CCERR;                                              20580590
           CN:=0;                                                       20580595
SEEK:      IF (CMM[0] OR CMM[1]) LSS 0 THEN                             20580600
           SEEKNAM(CMM[0],CMM[1],CN,CMM[2],CMM[3],N) ELSE               20580605
           BEGIN CN:=1; CMM[2]:=CMM[0]; CMM[3]:=CMM[1] END;             20580610
           IF CN NEQ 0 THEN                                             20580615
         BEGIN                                                          20580620
         T:=IF SYSTEMFILE(CMM[2],CMM[3]) THEN -1                        20580625
                   ELSE DIRECTORYSEARCH(CMM[2],CMM[3],5);               20580626
              IF T GTR 0 THEN                                           20580630
              BEGIN                                                     20580635
      IF (USERID EQV MCP) = NOT 0 OR (USERID EQV ABS(M[T+2])) %         20580645
                        =NOT 0 OR M[T+2]=0 THEN                         20580650
                   BEGIN                                                20580655
                        FORGETSPACE(DIRECTORYSEARCH(CMM[2],CMM[3],      20580660
                             19+TOG));                                  20580665
                        IF RSTOG THEN LBMESS(CMM[2],CMM[3], IF TOG THEN 20580670
                            "SET " ELSE "RESET ","ACCESSD",             20580675
                           0,0,0&CARD[9:9:9]);                          20580680
                   END ELSE                                             20580685
                   BEGIN                                                20580690
                        LBMESS(-CMM[2],CMM[3],"NOT ", IF TOG THEN       20580700
                             "SET " ELSE "RESET ","(INVALI","D USER)",  20580705
                             0&CARD[9:9:9]);                            20580710
                   END;                                                 20580712
                   FORGETSPACE(T);                                      20580713
              END ELSE                                                  20580715
              IF T LSS 0 THEN                                           20580716
              LBMESS(-CMM[2],CMM[3],"NOT ",IF TOG THEN                  20580717
                     "SET " ELSE "RESET ","(SYSTEM",                    20580718
                     " FILE)",0&CARD[9:9:9])ELSE                        20580719
              LBMESS(-CMM[2],CMM[3],"NOT ",IF TOG THEN "SET " ELSE      20580720
                   "RESET ","(NOT ON"," DISK)",0&CARD[9:9:9]);          20580725
         END;                                                           20580730
         IF CN NEQ 0 AND (CMM[0] OR CMM[1]) LSS 0 THEN GO SEEK;         20580735
         IF (CN:=SCAN)=COMMA THEN GO TO MORE;                           20580740
         IF CN=PERIO THEN ACESBIT:=1;                                   20580745
CCERR:                                                                  20580750
END ACESBIT;                                                            20580755
PROCEDURE CCFINISH(CMM,PROG,CEQN,PEQN,CN,T,PPCPROCESS,OPTN,PDEX,        20580800
                   CDEX,LIBNO,CLOSET,PADDR,CADDR);                      20580850
          REAL CN,T,PPCPROCESS,OPTN,PDEX,CDEX,LIBNO,CLOSET,             20580900
               PADDR,CADDR;                                             20580950
          ARRAY CMM[*],PROG[*],CEQN[*],PEQN[*];                         20581000
BEGIN                                                                   20581050
REAL TEMP;                                                              20581100
         PPCPROCESS:=0;                                                 20581150
         CN:=T;                                                         20581200
         IF OPTN = PERIO OR OPTN = LIBRA THEN                           20581250
         BEGIN                                                          20581300
              CMM[22]:= PROG[22];                                       20581350
              PROG[2].[CF]:= IF PROG[18] > 32767 THEN 32767             20581400
                             ELSE PROG[18];                             20581450
         IF PROG[20] > 512 THEN PROG[20]:= 512;                         20581500
         IF PADDR NEQ 0 THEN                                            20581550
                  BEGIN                                                 20581600
                  PEQN[29]:= 0;                                         20581650
                  IF PDEX=0 THEN PEQN[0]:=14;                           20581700
                  IF PDEX=1 THEN PEQN[14]:= 14;                         20581750
                   DISKWAIT(PEQN.[CF],30,PADDR);                        20581800
                  END;                                                  20581850
         PROG[29]:= 0;                                                  20581900
         CMM[2].[18:15]:= CLOSET:= GETESPDISK;                          20581950
         DISKWAIT(PROG.[CF],30,CLOSET);                                 20582000
         END;                                                           20582050
         IF CADDR NEQ 0 THEN                                            20582100
                  BEGIN                                                 20582150
                  CEQN[29]:= 0;                                         20582200
                  IF CDEX=0 THEN CEQN[0]:= 14;                          20582250
                  IF CDEX=1 THEN CEQN[14]:= 14;                         20582300
                   DISKWAIT(CEQN.[CF],30,CADDR);                        20582350
                  END;                                                  20582400
         SLEEP([TOGLE],SHEETMASK); SHEETFREE:=0;                        20582450
         CDEX:= GETESPDISK;                                             20582500
         CMM[2].[CF]:= IF CMM[18] > 32767 THEN 32767 ELSE CMM[18];      20582550
         PDEX:= IF CMM[18] > MIXMAX THEN MIXMAX ELSE CMM[18];           20582600
         IF LIBNO NEQ 0 THEN CMM[19]:= LIBNO;                           20582650
         IF CMM[20] > 512 THEN CMM[20] := 512;                          20582700
         STREAM(A:=0:S:=P(.SCHEDULEIDS));                               20582750
         BEGIN SI:=S;                                                   20582800
                47(SKIP SB; SKIP DB; TALLY:=TALLY+1;                    20582850
                   IF SB THEN BEGIN END ELSE JUMP OUT);                 20582900
                DS:= SET; A:= TALLY;                                    20582950
         END STREAM;                                                    20583000
          TEMP:= P; CMM[3]:= 0&TEMP[8:38:10];                           20583050
          CMM[23].[31:17]:= (CLOCK+ P(RTR)) DIV 60;                     20583100
          IF SHEET[PDEX].[CF] NEQ 0 THEN                                20583150
             BEGIN                                                      20583200
              DISKWAIT(-PROG.[CF],30,PADDR:=SHEET[PDEX].[FF]);          20583250
             PROG[29]:= CDEX;                                           20583300
              DISKWAIT(PROG.[CF],30,PADDR);                             20583350
             END                                                        20583400
          ELSE SHEET[PDEX]:= CDEX;                                      20583450
          SHEET[PDEX].[18:15]:= CDEX;                                   20583500
          CMM[29]:= 0;                                                  20583550
         DISKWAIT(CMM.[CF],30,CDEX);                                    20583600
          SHEETFREE:= 1;                                                20583650
          T:= CN;                                                       20583700
END CCFINISH;                                                           20583750
REAL PROCEDURE CCCOMPILE(CEQN,CMM,PROG,CARD,UNITNO,CARDLOC,             20583800
                         LASTSCAN,ACCUM,COUNT,USERID,T,SOURCE,CDEX,     20583850
                         CMPLR,OPTN,CADDR,CN);                          20583900
          REAL T,CDEX,UNITNO,CMPLR,OPTN,CARDLOC,CARD,LASTSCAN,          20583950
               CADDR,SOURCE,COUNT,USERID,CN;                            20584000
          ARRAY CEQN[*],PROG[*],ACCUM[*],CMM[*];                        20584050
BEGIN COMMENT SETUP OF COMPILER LABEL EQUATION CODE: PN1/PN2;%          20584100
REAL SUBROUTINE SCAN;                                                   20584150
     SCAN:= SCN(UNITNO,CARDLOC,SOURCE,ACCUM,COUNT,LASTSCAN);            20584200
LABEL EXIT;                                                             20584250
DEFINE DISKTYPE = 10#;%                                                 20584300
         T:=SCAN;%                                                      20584350
         CEQN[0]:=ACCUM[0];%                                            20584400
         T:=SCAN;%                                                      20584450
         T:=SCAN;%                                                      20584500
         CEQN[1]:=ACCUM[0];%                                            20584550
         CEQN[2]:=0;%                                                   20584600
         CEQN[3]:=DISKTYPE;%                                            20584650
         CEQN[4]:=@423462425606060;%                                    20584700
         CDEX   :=1;%                                                   20584750
         IF ((UNITNO+1)AND 24)=24 OR UNITNO GEQ 32 THEN%                20584800
         BEGIN CEQN[14]:=CEQN[16]:=CEQN[17]:=0;%                        20584850
               CEQN[15]:= "CARD 00" OR ((IF UNITNO GEQ 32 THEN%         20584900
                          "C/" ELSE @5772) + UNITNO);%                  20584950
         CEQN[18]:=@423215124000000; CDEX:=2;%                          20585000
         IF UNITNO GEQ 32 THEN CIDROW[UNITNO-32].[3:5]:=1 ELSE%         20585050
         IF UNITNO=23 THEN READERA.[FF]:=1 ELSE READERB.[FF]:=1;%       20585100
         END;                                                           20585150
         WHILE (CN:=SCAN) LSS ALGOL OR CN GTR COBOL DO                  20585200
         IF CN=PERIO THEN BEGIN CCCOMPILE:=1; GO EXIT END;              20585250
               IF CN=WITH THEN                                          20585300
               IF (CN~SCAN)=PERIO THEN BEGIN CCCOMPILE~1; GO EXIT END;  20585350
               IF CN<ALGOL OR CN>COBOL THEN                             20585355
                IF(T:=DIRECTORYSEARCH(ACCUM[0],"DISK   ",5))!0 THEN     20585360
                BEGIN IF NOT M[T+4].[8:1] THEN                          20585365
                      BEGIN LBMESS(-ACCUM[0],"DISK   ",                 20585370
                            "NOT A ","COMPILE","R",0,0);                20585375
                      FORGETSPACE(T); CCCOMPILE~1; GO EXIT;             20585380
                      END; FORGETSPACE(T);                              20585385
                END;                                                    20585390
COMMENT SET UP NOMINAL VALUES FOR PROGRAM PARAMETERS;%                  20585400
          CMM[0]:=-(CMPLR:=ACCUM[0]); CMM[1]:=CEQN[0];                  20585450
          CMM[2]:=0;                                                    20585500
          CMM[13]:= CADDR:= GETESPDISK;                                 20585550
          CMM[23]:= 0&CARD[9:9:9];                                      20585600
%   GET OPTION (GO,SYNTAX CHECK, OR LIBRARY)                            20585650
         DO OPTN:=SCAN UNTIL OPTN=PERIO OR OPTN=SYNTA OR OPTN=LIBRA;    20585700
         CMM[2].[8:10] := IF OPTN=PERIO THEN 1 ELSE                     20585750
                             IF OPTN=SYNTA THEN 3 ELSE 4;%(OPTN=LIBRA)  20585800
         IF OPTN NEQ SYNTA THEN                                         20585850
% SET UP PROG ARRAY FOR COMPILE AND GO OR COMPILE TO LIBRARY JOBS       20585900
         BEGIN                                                          20585950
              PROG[0]:= CEQN[0];                                        20586000
              PROG[1]:= CEQN[1];                                        20586050
              PROG[2]:=PROG[15]:= 0;                                    20586100
              PROG[16]:=PROG[17]:= @377777777777;                       20586150
              PROG[18]:= (MIXMAX+1) DIV 2;                              20586200
              PROG[19]:= 0;                                             20586250
              PROG[20]:= -1;                                            20586300
              PROG[21]:= 512;                                           20586350
              PROG[22]:= 10;                                            20586400
              PROG[23]:= 0&CARD[9:9:9];                                 20586450
              PROG[24]:= USERID;                                        20586500
         END;                                                           20586550
EXIT:                                                                   20586600
END CCCOMPILE;                                                          20586650
REAL PROCEDURE INITIALIZEIT(PROG,CMM,PDEX,PADDR,T,CARD,N1,USERID,       20586700
                            OPTN,UNITNO,CARDLOC,SOURCE,ACCUM,COUNT,     20586750
                            LASTSCAN,PEQN);                             20586800
          ARRAY PROG[*],CMM[*],ACCUM[*],PEQN[*];                        20586850
          REAL PDEX,PADDR,T,CARD,N1,USERID,OPTN,UNITNO,CARDLOC,         20586900
                SOURCE,COUNT,LASTSCAN;                                  20586950
BEGIN LABEL LS,SPLAT,SPOT,EXIT;                                         20587000
REAL SUBROUTINE SCAN;                                                   20587050
     SCAN:= SCN(UNITNO,CARDLOC,SOURCE,ACCUM,COUNT,LASTSCAN);            20587100
      PROG[13]:=PADDR:=PDEX:=0; % IN CASE PROGRAM NOT IN DIRECTORY      20587150
      IF (T:=DIRECTORYSEARCH(ABS(CMM[0]),IF CMM[0] LSS 0 THEN           20587200
         "DISK   " ELSE CMM[1],3))=0 THEN                               20587250
      BEGIN IF CARD.[9:9]=0 THEN GO TO LS;                              20587300
$INCLUDE 20587451, IF DATACOM AND NOT INQUIRY;                          20587350
              IF (N1:=GET(CARD)).[4:4] NEQ N1.[9:4] OR                  20587400
                 N1.[18:4] NEQ N1.[14:4] THEN                           20587450
              BEGIN                                                     20587500
     LS:      LBMESS(-CMM[0],CMM[1]," NOT IN"," DIRECT","ORY    ",      20587550
                     0,0&CARD[9:9:9]);                                  20587600
SPLAT:                                                                  20587650
              IF UNITNO GEQ 32 THEN BEGIN INITIALIZEIT:=5;GO EXIT END;  20587700
              END;                                                      20587750
          DO T~SCAN UNTIL T>IDENT AND T{RESETV;                         20587800
         IF UNITNO=31 AND NT1 GEQ 0 THEN BEGIN INITIALIZEIT:=7;         20587850
                                         GO EXIT END;                   20587900
         NT1:=0; INITIALIZEIT:=1; GO EXIT ;                             20587950
      END ELSE IF M[T INX 4].[9:2]=2 THEN GO TO SPOT;                   20588000
    IF SECURITYCHECK(ABS(CMM[0]),                                       20588050
         IF CMM[0] LSS 0 THEN "DISK   " ELSE CMM[1],USERID,T)=0 THEN    20588100
         BEGIN                                                          20588150
              OPTN:=0; CMM[2]:=T;                                       20588200
              P(DIRECTORYSEARCH(NABS(CMM[0]),CMM[1]:=IF CMM[0] LSS 0    20588250
                   THEN "DISK   " ELSE CMM[1],13),DEL);                 20588300
              INITIALIZEIT:=4;                                          20588350
              GO TO EXIT;                                               20588360
         END;                                                           20588370
           DISKIO(N1,-(PEQN INX 0-1),30,M[T+10]);                       20588400
          P(M[T INX 4].[9:2]=3); FORGETSPACE(T);%NOTE FOR BELOW         20588450
           CMM[24]:= USERID;                                            20588500
           CMM[25]:= T.[FF];                                            20588550
           SLEEP([N1],IOMASK);                                          20588600
           FOR T:=1 STEP 1 UNTIL 6 DO                                   20588650
           IF (NOT ABS(PEQN[T]&0[CTC])) NEQ NOT 0 THEN T:= 7;           20588700
$INCLUDE 20588730, IF BREAKOUT;                                         20588710
           CMM[3].[2:1]:=PEQN[3].[1:1];% RESTART BIT                    20588720
$OMIT 20588750, IF BREAKOUT;                                            20588730
           IF PEQN[3].[1:1] THEN P(DEL,T:=0);% CAN-T RESTART;           20588740
           IF NOT (P OR T) THEN %NOT CODE                               20588750
           BEGIN                                                        20588800
SPOT:                                                                   20588850
           LBMESS(-CMM[0],CMM[1]," NOT EX","ECUTEAB","LE CODE",         20588900
                 0,0&CARD[9:9:9]);                                      20588950
         P(DIRECTORYSEARCH(NABS(CMM[0]),IF CMM[0] LSS 0 THEN            20589000
              "DISK   " ELSE CMM[1],13),DEL);                           20589100
           GO TO SPLAT;                                                 20589150
           END;                                                         20589200
           IF PEQN[6] LSS 0 THEN FOR T:=15 STEP 1 UNTIL 22 DO           20589250
           CMM[T]:=PEQN[T] ELSE                                         20589300
           BEGIN                                                        20589350
                CMM[15]:= 0;                                            20589400
                CMM[16]:= CMM[17]:= @377777777777;                      20589450
                 CMM[18]:=(MIXMAX+1) DIV 2;                             20589460
                 CMM[19]:= 0;                                           20589470
                 CMM[20]:= PEQN[7].[FF];                                20589480
                 CMM[21]:= 512;                                         20589490
           END;                                                         20589500
INITIALIZEIT:=3;                                                        20589550
EXIT:                                                                   20589600
END INITIALIZEIT;                                                       20589650
REAL PROCEDURE CCUNIT(UNITNO,CARDLOC,SOURCE,ACCUM,COUNT,LASTSCAN,       20589700
                      T, CN);                                           20589750
          REAL UNITNO,CARDLOC,SOURCE,COUNT,LASTSCAN,T,CN;               20589800
          ARRAY ACCUM[*];                                               20589850
BEGIN LABEL U1,EXIT;                                                    20589900
REAL SUBROUTINE SCAN;                                                   20589950
     SCAN:=SCN(UNITNO,CARDLOC,SOURCE,ACCUM,COUNT,LASTSCAN);             20590000
      T:= SCAN; CN:= ACCUM[0];                                          20590050
      T:= SCAN;                                                         20590100
      FOR T:= 0 STEP 1 UNTIL 31 DO                                      20590150
          IF CN.[6:18]=TINU.[30:18] THEN GO TO U1;                      20590200
          CCUNIT:=6; GO EXIT;                                           20590250
U1: IF LABELTABLE[T] NEQ @314 THEN BEGIN CCUNIT:=6; GO EXIT END;        20590300
     CN:= SCAN;                                                         20590350
     MULTITABLE[T]:=RDCTABLE[T]:=0;                                     20590400
     LABELTABLE[T]:= ACCUM[0];                                          20590450
     IF (CN:= SCAN) = SLASH THEN                                        20590500
        BEGIN MULTITABLE[T]:= LABELTABLE[T];                            20590550
              CN:= SCAN; LABELTABLE[T]:= ACCUM[0];                      20590600
        END;                                                            20590650
     CCUNIT:=0;                                                         20590700
EXIT:                                                                   20590750
END CCUNIT;                                                             20590800
REAL PROCEDURE CCSECMAINT(USERID,UNITNO,CARDLOC,SOURCE,ACCUM,COUNT,     20590850
                          LASTSCAN,CMM,PROG,SFID,SMID,CDEX,SFH,CN,CARD, 20590900
                          N1,N2,N3,ST,T,T1,LIBNO,CADDR,OPTN,OPTNN);     20590950
          VALUE OPTNN;                                                  20591000
          REAL USERID,UNITNO,CARDLOC,SOURCE,COUNT,LASTSCAN,SFID,SMID,   20591050
               CDEX,SFH,CN,CARD,N1,N2,N3,ST,T,T1,LIBNO,OPTN,OPTNN,      20591100
               CADDR;                                                   20591150
          ARRAY ACCUM[*],CMM[*],PROG[*];                                20591200
BEGIN                                                                   20591250
LABEL EXIT,CCC;                                                         20591300
REAL SUBROUTINE SCAN;                                                   20591350
     SCAN:= SCN(UNITNO,CARDLOC,SOURCE,ACCUM,COUNT,LASTSCAN);            20591400
                                                                        20591450
          LABEL OPTN0,OPTN1,OPTN2,OPTN3,SEC1,SEC2,SEC5,ST1,             20591500
                ST2,LS;                                                 20591550
         SWITCH SW:= OPTN0,OPTN1,OPTN2,OPTN3;                           20591600
          GO TO SW[OPTNN];                                              20591650
OPTN0:    USERID:= ABS(USERID);                                         20591700
          IF SCAN LSS IDENT THEN BEGIN CCSECMAINT:=6;GO EXIT END;       20591750
          SMID:= CMM[0]:= ACCUM[0]; CN:=SCAN;                           20591800
          IF SCAN LSS IDENT THEN BEGIN CCSECMAINT:=6; GO EXIT END;      20591850
          SFID:= CMM[1]:= ACCUM[0]; CDEX:= 0;                           20591900
          IF (SFH:=DIRECTORYSEARCH(SMID,SFID,4))=0 THEN GO TO LS;       20591950
          IF NOT(SYSTEMFILE(CMM[CDEX] ,CMM[CDEX+1]) OR                  20592000
               (SMID EQV "PBD    ")=NOT 0) AND (M[SFH+5]=0              20592050
               AND M[SFH+2] NEQ 0) THEN                                 20592100
% INHIBIT USE ON PUBLIC, SECURE FILES                                   20592150
          BEGIN CN:=SCAN; GO TO OPTN2 END;                              20592200
          OPTN:=0; CMM[2]:= SFH;                                        20592250
          P(DIRECTORYSEARCH(NABS(CMM[0]),CMM[1],14),DEL);               20592300
                                                                        20592350
OPTN1:    STREAM(USERID,Q:=USERID>0,B:=[CMM],D:=CN:=GETSPACE(10,0,0)+2);20592400
          BEGIN Q(SI:=LOC USERID; SI:=SI+1;DS:=LIT " "; DS:= 7CHR;);    20592450
                DS:= 17LIT " INVALID USER OF "; SI:=B;                  20592500
                SI:=SI+1; DS:= 7CHR; DS:=LIT "/"; SI:=SI+1; DS:= 7CHR;  20592550
                 DS:=LIT"~";                                            20592600
          END STREAM;                                                   20592650
          SPOUT(CN&CARD[9:9:9]); FORGETSPACE(CMM[2]);                   20592700
          IF OPTN NEQ 0 THEN GO TO SEC5;                                20592750
          IF UNITNO GEQ 32 THEN BEGIN CCSECMAINT:=5;GO EXIT END;        20592800
          GO TO CCC;                                                    20592850
OPTN2:    CMM[5]:=USERID;                                               20592900
          ST:= CDEX:= 0;                                                20592950
    SEC1: FOR OPTN:=0 STEP 1 UNTIL 1 DO                                 20593000
          BEGIN CN:=SCAN;                                               20593050
               IF T=OPEN AND CN=UNLOCKV AND OPTN=0 THEN                 20593060
               BEGIN T:=UNLOCKV; GO TO SEC1 END                         20593100
                ELSE IF CN LSS IDENT AND CN NEQ EQUAL THEN GO TO ST1;   20593150
                CMM[OPTN]:= IF CN=EQUAL THEN -1 ELSE ACCUM[0];          20593200
                CN:=SCAN;                                               20593250
          END;                                                          20593300
          IF CMM[0] GEQ 0 AND CMM[1] GEQ 0 THEN GO TO SEC2;             20593350
          N1:= CMM[0]; N2:= CMM[1]; N3:= 0; ST:= 1;                     20593400
    ST2:  SEEKNAM (N1,N2,N3,CMM[0],CMM[1],T1);                          20593450
          IF N3 NEQ 0 THEN GO TO SEC2;                                  20593500
          ST:= 0; GO TO SEC5;                                           20593550
    SEC2: IF (ABS(USERID)EQV MCP) NEQ NOT 0 THEN                        20593600
          IF SYSTEMFILE(CMM[CDEX],CMM[CDEX+1]) OR                       20593650
             (CMM[0] EQV "PBD    ")= NOT 0 THEN GO SEC5;                20593700
          SECURITYMAINT(T,SMID,SFID,CMM,SFH,CARD);                      20593750
    SEC5: IF ST THEN GO TO ST2;                                         20593800
          IF CN=COMMA THEN GO SEC1;                                     20593850
          IF T=USEV THEN                                                20593900
          HEADERUNLOCK(SMID,SFID,SFH);                                  20593950
          GO TO CCC;                                                    20594000
                                                                        20594050
OPTN3:    CADDR:= CDEX:= 0;                                             20594100
          IF (LIBNO:=LIBCC(CARD,SOURCE,ACCUM,COUNT,LASTSCAN,USERID,PROG,20594150
              CMM,OPTN,T))>1 THEN BEGIN CCSECMAINT:=2; GO EXIT END      20594200
         ELSE IF LIBNO THEN BEGIN CCSECMAINT:=6; GO EXIT END            20594250
         ELSE BEGIN CCSECMAINT:=0; GO EXIT END;                         20594300
LS: LBMESS(-CMM[0],CMM[1]," NOT IN"," DIRECT","ORY    ",0,0);           20594350
    IF UNITNO GEQ 32 THEN BEGIN CCSECMAINT:=5; GO EXIT END;             20594400
CCC: DO T~SCAN UNTIL T>IDENT AND T{RESETV;                              20594450
    IF UNITNO=31 AND NT1 GEQ 0 THEN BEGIN CCSECMAINT:=7; GO EXIT END;   20594500
    NT1:= 0;  CCSECMAINT:=1; GO EXIT;                                   20594550
ST1:      IF T=USEV THEN                                                20594600
          HEADERUNLOCK(SMID,SFID,SFH);                                  20594650
          CCSECMAINT:=6;                                                20594700
EXIT:                                                                   20594750
END CCSECMAINT;                                                         20594800
REAL PROCEDURE CCLABEL(UNITNO,USERID,CN,CARDLOC,T,SOURCE,ACCUM,         20594850
                       COUNT,LASTSCAN);                                 20594900
          REAL UNITNO,USERID,CN,CARDLOC,T,SOURCE,COUNT,LASTSCAN;        20594950
          ARRAY ACCUM[*];                                               20595000
BEGIN                                                                   20595050
LABEL EXIT;                                                             20595100
     CN:=0;                                                             20595150
     UNITCODE[UNITNO-23]:= USERID;                                      20595200
     MULTITABLE[UNITNO]:= 0;                                            20595250
     RDCTABLE[UNITNO]:= 1&1[14:38:10];                                  20595300
     IF UNITNO=23 THEN BEGIN CN:=READERA.[FF];READERA:=CARDLOC END      20595350
     ELSE IF UNITNO=24 THEN BEGIN CN:=READERB.[FF];READERB:=CARDLOC END 20595400
     ELSE IF UNITNO GEQ 32 THEN BEGIN CN:= CIDROW[UNITNO-32].[3:5];     20595450
                                CIDROW[UNITNO-32].[3:5]:= 0;            20595500
                                CIDROW[UNITNO-32].[18:15]:= CARDLOC;    20595550
                    M[CARDLOC-4].[3:6]:=20;M[CARDLOC-3]:=UNITNO-32;     20595560
                                END;                                    20595600
     IF CN THEN BEGIN LABELTABLE[UNITNO]:= "CARD 00" OR                 20595650
                ((IF UNITNO GEQ 32 THEN "C/" ELSE @5772) + UNITNO);     20595700
                 CCLABEL:=8; GO EXIT;                                   20595750
                END;                                                    20595800
     IF T = LABEV THEN BEGIN                                            20595850
                       MULTITABLE[UNITNO]:=M[CARDLOC+1].[6:42];         20595900
                       STREAM(A:=0,B:=0,C:=0:D:=CARDLOC+3);             20595950
                       BEGIN DI:=LOC A; SI:=D;DS:=3OCT;                 20596000
                             DS:=5OCT; DS:=2OCT; END;                   20596050
                       P(P(XCH)&P[24:31:17]&P(XCH)[14:38:10],           20596100
                       [RDCTABLE[UNITNO]],~);%                          20596150
                       LABELTABLE[UNITNO]:=M[CARDLOC+2].[6:42];         20596200
                       END                                              20596250
     ELSE IF SCN(UNITNO,CARDLOC,SOURCE,ACCUM,COUNT,LASTSCAN) GEQ IDENT  20596300
          THEN LABELTABLE[UNITNO]:= ACCUM[0]                            20596350
          ELSE BEGIN IF UNITNO GEQ 32 THEN                              20596400
               CIDROW[UNITNO-32].[18:15]:=0;                            20596450
               CCLABEL:=6; GO EXIT;                                     20596500
               END;                                                     20596550
         CCLABEL:=8;                                                    20596600
EXIT:                                                                   20596650
END CCLABEL;                                                            20596700
BOOLEAN PROCEDURE CCFIND(CARD,USERID,ADDR,T);                           20596750
          REAL CARD,USERID,T;                                           20596800
          NAME ADDR;                                                    20596850
BEGIN LABEL FINDX;                                                      20596900
               IF T=ENDFI THEN BEGIN P(0); GO TO FINDX END;             20596950
               IF T=DATAV THEN BEGIN P(1); GO TO FINDX; END;            20597000
               IF T=LABEV THEN BEGIN P(1); GO TO FINDX; END;            20597050
$INCLUDE 20597401, IF DCSPO AND DATACOM AND NOT INQUIRY;                20597100
         IF P(GET(CARD),DUP).[32:1] AND NOT P(XCH) THEN                 20597150
         BEGIN USERID:=MCP; P(0); GO TO FINDX; END;                     20597160
         IF P(LOOKQ,CARD AND @7570000000000,LLL,.ADDR,STD).[9:9]=       20597200
              CARD.[9:9] THEN                                           20597250
              BEGIN NT1:=(ADDR INX 2); USERID:=M[ADDR INX 1];           20597300
              END ELSE NT1:= P(.CCMASK1);                               20597350
$ INCLUDE 20597361, IF RJE;                                             20597359
         IF GET(CARD) THEN P(0) ELSE                                    20597360
         IF RHEOSTAT(T,NT1,63,CARD) THEN P(0) ELSE P(1);                20597400
         FINDX: CCFIND:=P;                                              20597450
END CCFIND;                                                             20597500
PROCEDURE CONTROLCARD(CARD); VALUE CARD; REAL CARD;                     20597550
BEGIN                                                                   20597600
    LABEL CC,CCTYPE,COMPILE,INITIALIZATION,BEFORETRYNEXT,TRYNEXT,       20597650
          CONTROLER,CONTROLA,COMPILEJOB,COMJOB,EXEC,EXRUN,RUN,          20597700
          USERS,USES,SECBOMB,UNLOX,LOX,FREES,OPENS,ENTE,                20597750
          LCOPY,CHANGE,REMOVE,UNITI,INCSC,ENDF,ENDECK,SAVEND,           20597800
          LABE,FINIS,ZIPEXIT,EXIT,SET,RSET;                             20597850
    SWITCH TYPE:= UNLOX,USES,LOX     ,FREES,OPENS,USERS,                20597900
                  RUN,COMPILE,EXEC,LCOPY,LCOPY,ENTE,ENTE,REMOVE,        20597950
                  CHANGE,UNITI,ENDF,LABE,LABE,SET,RSET;                 20598000
    REAL       A       = +1,%                                           20598050
               PPCPROCESS=A+1,%                                         20598100
               T1        = PPCPROCESS+1,%                               20598150
               CN        = T1+1,%                                       20598200
               N1       = CN+1,%                                        20598250
               N2        = N1+1,%                                       20598300
               N3        = N2+1,%                                       20598350
               ST       = N3+1,%                                        20598400
               U         = ST+1,%                                       20598450
               N4        = U,%                                          20598500
               OPTN      = U+1,%                                        20598550
               CDEX      = OPTN+1,%                                     20598600
               SDEX      = CDEX,%                                       20598650
               PDEX      = CDEX+1,%                                     20598700
               SMID      = PDEX,%                                       20598750
               CADDR     = PDEX+1,%                                     20598800
               SFID      = CADDR,%                                      20598850
               PADDR     = CADDR+1,%                                    20598900
               SFH       = PADDR,%                                      20598950
               T         = A,%                                          20599000
               UNITNO    = PADDR+1,%                                    20599050
               CARDLOC   = UNITNO+1,%                                   20599100
               SOURCE    = CARDLOC+1,%                                  20599150
               COUNT     = SOURCE+1,%                                   20599200
               LASTSCAN  = COUNT+1,%                                    20599250
               USERID    = LASTSCAN+1,%                                 20599300
               INV       = USERID+1,%                                   20599350
               SMD       = INV+1,%                                      20599400
               SFD       = SMD+1,%                                      20599450
               NT1       = SFD+1,%                                      20599500
               CLOSET    = NT1+1,%                                      20599550
               RCW       = +0,%                                         20599600
               LIBNO     = CLOSET+1,%                                   20599650
               CMPLR     = LIBNO+1;%                                    20599700
    BOOLEAN TOG  = CMPLR+1;                                             20599750
    NAME ADDR = TOG+1;%                                                 20599800
                                                                        20599850
    ARRAY CMM  = ADDR+1[*],%                                            20599900
          PROG = CMM+1[*],%                                             20599950
          CEQN = PROG+1[*],%                                            20600000
          PEQN = CEQN+1[*],%                                            20600050
          NB   = PEQN+1[*],%                                            20600100
          ACCUM= NB+1[*];%                                              20600150
REAL SUBROUTINE SCAN;                                                   20600200
     SCAN:=SCN(UNITNO,CARDLOC,SOURCE,ACCUM,COUNT,LASTSCAN);             20600250
SWITCH SW:=CC,CCTYPE,INITIALIZATION,BEFORETRYNEXT,SECBOMB,ENDECK,       20600300
           INCSC,ZIPEXIT,EXIT;                                          20600350
DEFINE SECMAINT(SECMAINT1)=CCSECMAINT(USERID,UNITNO,CARDLOC,SOURCE,ACCUM20600400
       ,COUNT,LASTSCAN,CMM,PROG,SFID,SMID,CDEX,SFH,CN,CARD,N1,N2,N3,ST, 20600450
       T,T1,LIBNO,CADDR,OPTN,SECMAINT1)#;                               20600500
         P(GETSPACE(224, 12,0)+1,STS,CARD,RCW,0,RDS,0,XCH,CFX,STF);     20600550
         P(0,0,0,0,0,0,0,0,0,0);%                                       20600600
         P(0,0,0,0,0,0,0,0,0,0);%                                       20600650
         P(0,0,0,0,0,0,0,0,0,0);%                                       20600700
         P(0,0,0,0,0);%                                                 20600750
         STACKUSE := TRUE;%                                             20600800
         UNITNO := CARD.[2:6];                                          20600850
         IF CARD.[33:15] = 0 THEN                                       20600900
              BEGIN CARD.[33:15] := GETSPACE(13,0,0)+4;                 20600950
              IF WAITIO(CARD INX @40000000,@15,UNITNO).[45:3] NEQ 0%    20601000
              THEN                                                      20601050
                  BEGIN LABELTABLE[UNITNO] := @114;%                    20601100
                  RRRMECH := NOT TWO (UNITNO) AND RRRMECH;%             20601150
                  FORGETSPACE(CARD INX NOT 1);%                         20601200
                  KILL([CARD]);%                                        20601250
                  END;                                                  20601300
              END;                                                      20601350
COMMENT GET OWN STACK AND GET RID OF INDEPENDENT STACK;%                20601400
COMMENT SET UP ACCUM ARRAY FOR SCAN;%                                   20601450
        ACCUM:=[M[GETSPACE(10,0,0)+2]]&10[8:38:10];%                    20601500
        ACCUM[0] := 0;%                                                 20601550
COMMENT BRING IN RESERVED WORDS, SET MEMORY LINK TO SAVE;%              20601600
         RESWDS;%                                                       20601650
         DIRECT ~ [M[P(..RESWDS,LOD,1,INX)]]&151[8:38:10];              20601700
         CCTOG:=CCTOG+1;%                                               20601750
         M[P(..RESWDS,LOD,1,NOT,INX)].[2:1]:=1;                         20601800
         CMM:=[M[GETSPACE(130,2,0)+2]]&30[8:38:10];%                    20601850
         PEQN:=(31 INX (CEQN:=(31 INX(PROG:=(31 INX CMM)))));%          20601900
          % PLACE "." IN COL 73 ;%                                      20601950
         CARDLOC := CARD INX 0;%                                        20602000
         IF UNITNO=25 OR UNITNO=26 OR UNITNO=30 OR UNITNO=31 THEN       20602050
         SOURCE:=CARDLOC ELSE                                           20602100
         MEMORY[(SOURCE:=CARDLOC)+9]:=0&"."[1:43:5];%                   20602150
         IF UNITNO GEQ 32 AND UNITCODE[UNITNO-23].[1:1] THEN            20602200
            UNITCODE[UNITNO-23]:=M[CARDLOC + 10];                       20602250
         IF UNITNO=25 OR UNITNO=31 THEN USERID:=MCP ELSE%               20602300
         BEGIN IF UNITNO=26 THEN UNITNO:=31;%                           20602350
         USERID:=UNITCODE[UNITNO-23];%                                  20602400
$ INCLUDE 20602421, IF DATACOM AND RJE AND NOT INQUIRY;                 20602409
         IF CARD.[9:9]!0 THEN IF GET(CARD) THEN                         20602410
         P(CCFIND(CARD,USERID,ADDR,T),DEL); %FIND DEFAULT USER          20602420
         END;%                                                          20602450
                                                                        20602500
COMMENT SCAN FOR CARD WITH QUESTION MARK IN COL. 1;%                    20602550
                                                                        20602600
CC:      IF SCAN NEQ QUEST THEN GO TO INCSC;%                           20602650
         T:=SCAN;                                                       20602700
                                                                        20602750
CCTYPE:    IF (T LSS UNLOCKV) OR (T GTR RESETV) THEN                    20602800
         GO TO INCSC;%                                                  20602850
         IF CARD.[9:9] NEQ 0 THEN%                                      20602900
$ INCLUDE 20602911, IF DATACOM AND RJE AND NOT INQUIRY;                 20602909
         IF NOT GET(CARD) THEN  %DONT CALL IF RJE                       20602910
         IF CCFIND(CARD,USERID,ADDR,T) THEN GO TO INCSC;                20602950
         IF (T LEQ ENTER) AND (T GEQ RUNV) THEN                         20603000
             BEGIN %                                                    20603050
               M[CARDLOC - 2] := 0;%                                    20603100
               M[CARDLOC -1]  :=10;%                                    20603150
               CMM[6]:= GETESPDISK & 10[18:33:15];%                     20603200
$ INCLUDE 20603221, IF DATACOM AND RJE AND NOT INQUIRY;                 20603209
               IF CARD.[9:9]!0 THEN IF GET(CARD) THEN                   20603210
               CMM[6]:=(*P(DUP))&CARD[9:9:9];                           20603220
               DISKWAIT(CARDLOC-2,11,CMM[6] INX 0);                     20603250
             END;%                                                      20603350
%   WRITE OUT CONTROL CARD FOR LOGGING ROUTINE%                         20603400
%   BRANCH ON 1ST WORD ON CONTROL CARD%                                 20603450
          LIBNO:=0;                                                     20603500
          TOG:= FALSE;                                                  20603550
          GO TO TYPE[T-UNLOCKV];                                        20603600
                                                                        20603650
% COMPILER CALL OUT CARD%                                               20603700
COMPILE: IF CCCOMPILE(CEQN,CMM,PROG,CARD,UNITNO,CARDLOC,LASTSCAN,       20603750
                      ACCUM,COUNT,USERID,T,SOURCE,CDEX,CMPLR,OPTN,      20603800
                      CADDR,CN) THEN GO TO INCSC;                       20603850
INITIALIZATION: GO SW[INITIALIZEIT(PROG,CMM,PDEX,PADDR,T,CARD,N1,USERID,20603900
                      OPTN,UNITNO,CARDLOC,SOURCE,ACCUM,COUNT,LASTSCAN,  20603950
                      PEQN)];                                           20604000
BEFORETRYNEXT: IF OPTN=PERIO THEN GO TO CONTROLER;                      20604050
TRYNEXT: DO UNTIL SCAN = PERIO;                                         20604100
CONTROLER: PPCPROCESS:= 1;                                              20604150
           IF SCAN NEQ QUEST THEN GO TO INCSC;                          20604200
           T:= SCAN;                                                    20604250
CONTROLA: IF (T LSS SETV OR T GTR COBOL) AND ACCUM[0] NEQ CMPLR THEN    20604300
          IF T GEQ UNLOCKV AND T LEQ LABEV THEN                         20604350
          GO TO FINIS ELSE GO TO INCSC;                                 20604360
          IF CARD.[9:9] NEQ 0 THEN                                      20604400
$ INCLUDE 20604411, IF DATACOM AND RJE AND NOT INQUIRY;                 20604409
          IF NOT GET(CARD) THEN  %DONT CALL IF RJE                      20604410
          IF CCFIND(CARD,USERID,ADDR,T) THEN GO TO INCSC;               20604450
          IF T GEQ ALGOL OR ACCUM[0]=CMPLR THEN                         20604500
           IF OPTN=EXECU OR OPTN=RUNV THEN                              20604550
              GO TO TRYNEXT                                             20604600
           ELSE GO TO COMPILEJOB;                                       20604650
         IF OPTN=SYNTA THEN GO TO TRYNEXT;                              20604700
         IF OPTN=EXECU OR OPTN=RUNV THEN GO TO COMJOB;                  20604750
% CALL PPC FOR COMPILE AND GO JOB%                                      20604800
         IF PPC(PADDR,PEQN,PROG,PDEX,T,UNITNO,CARDLOC,SOURCE,ACCUM,     20604850
                LASTSCAN) THEN GO TO INCSC;                             20604900
         GO TO CONTROLER;                                               20604950
COMPILEJOB: T:=SCAN;                                                    20605000
COMJOB: IF PPC(CADDR,CEQN,CMM,CDEX,T,UNITNO,CARDLOC,SOURCE,ACCUM,       20605050
                LASTSCAN) THEN GO TO INCSC;                             20605100
        GO TO CONTROLER;                                                20605150
                                                                        20605200
COMMENT EXECUTE CARD;%                                                  20605250
EXEC: OPTN:= EXECU; CMM[2]:= 0&2[8:38:10];                              20605300
EXRUN: CMM[13]:= CADDR:= CDEX:= 0;                                      20605350
       T:=SCAN; CMM[0]:= ACCUM[0];                                      20605400
       T:=SCAN;T:=SCAN; CMM[1]:=ACCUM[0];                               20605450
       CMM[23]:= 0&CARD[9:9:9];                                         20605500
       GO TO INITIALIZATION;                                            20605550
RUN: OPTN:= RUNV; CMM[2]:=0&5[8:38:10];                                 20605600
     GO TO EXRUN;                                                       20605650
USERS: T:=SCAN; T:=SCAN;                                                20605700
       IF (USERID.[1:1] AND USERID!MCP)                                 20605750
$ INCLUDE 20605761, IF DATACOM AND RJE AND NOT INQUIRY;                 20605759
       OR GET(CARD)                                                     20605760
       THEN USERID := ACCUM[0];                                         20605800
       NT1:= -1;                                                        20605850
       DO T~SCAN UNTIL T>IDENT AND T{RESETV;                            20605900
       IF UNITNO=31 AND NT1 GEQ 0 THEN GO TO ZIPEXIT;                   20605950
       NT1:= 0; GO TO CCTYPE;                                           20606000
USES: GO SW[SECMAINT(0)];                                               20606050
SECBOMB: GO SW[SECMAINT(1)];                                            20606100
UNLOX:                                                                  20606150
LOX:                                                                    20606200
FREES:                                                                  20606250
OPENS:                                                                  20606300
       GO SW[SECMAINT(2)];                                              20606350
ENTE::                                                                  20606400
LCOPY:                                                                  20606450
CHANGE:                                                                 20606500
REMOVE:                                                                 20606550
       GO SW[SECMAINT(3)];                                              20606600
SET: TOG:= TRUE;                                                        20606650
RSET: IF ACESBIT(CARD,SOURCE,ACCUM,COUNT,LASTSCAN,USERID,CMM,           20606700
                 TOG) THEN GO TO CC ELSE GO TO INCSC;                   20606750
UNITI: GO SW[CCUNIT(UNITNO,CARDLOC,SOURCE,ACCUM,COUNT,LASTSCAN,T,CN)];  20606800
INCSC: IF UNITNO=31 THEN                                                20606850
       BEGIN STREAM(A:=T:=GETSPACE(10,0,0)+2);                          20606900
             DS:=19LIT " ZIP ERROR-IGNORED~";                           20606950
$ INCLUDE 20606971, IF DATACOM AND RJE AND NOT INQUIRY;                 20606969
       IF GET(CARD) THEN T:=T&CARD[9:9:9];                              20606970
       SPOUT(T); GO TO ZIPEXIT;                                         20607000
       END;                                                             20607050
       LASTSCAN:= 0;                                                    20607100
       STREAM(CARDLOC,B:=TINU[UNITNO].[30:18],A:=(T:=GETSPACE(15,0,0)   20607150
              + 2 ));                                                   20607200
       BEGIN                                                            20607250
       DS:=20LIT"#CONTROL CARD ERROR ";                                 20607300
       SI:=LOC B; SI:=SI+5;DS:=3 CHR; DS:=LIT " ";                      20607350
       SI:=CARDLOC; DS:=9 WDS; DS:=LIT"~";                              20607400
       END;                                                             20607450
$ INCLUDE 20607471, IF DATACOM AND RJE AND NOT INQUIRY;                 20607469
       IF GET(CARD) THEN T:=T&CARD[9:9:9];                              20607470
       IF UNITNO = 30 THEN                                              20607500
          BEGIN SPOUT(T&CARD[9:9:9]);                                   20607550
          GO TO ZIPEXIT;                                                20607600
          END;                                                          20607650
          IF UNITNO NEQ 25 THEN                                         20607700
          BEGIN SPOUT(T);                                               20607750
          IF UNITNO GEQ 32 THEN GO TO ENDECK;                           20607800
          END ELSE                                                      20607950
          BEGIN P(WAITIO(T,0,25),DEL);                                  20608000
                FORGETSPACE(T);                                         20608050
              GO TO ENDF;                                               20608060
          END;                                                          20608100
       DO DO                                                            20608150
            FETCH(-UNITNO,CARDLOC,SOURCE)                               20608200
          UNTIL SCAN=QUEST                                              20608250
       UNTIL SCAN=ENDFI;                                                20608300
                                                                        20608450
ENDF:: IF UNITNO NEQ 30 THEN UNITCODE[UNITNO-23]:= -0;                  20608500
         IF UNITNO=23 THEN READERA:=0 ELSE                              20608510
         IF UNITNO=24 THEN READERB:=0 ELSE                              20608520
        IF UNITNO GEQ 25 THEN                                           20608550
        IF UNITNO GEQ 32 THEN                                           20608600
           IF CIDTABLE[UNITNO-32,3] LSS CIDTABLE[UNITNO-32,7]THEN       20608650
           BEGIN FETCH(UNITNO,CARDLOC,SOURCE); GO TO CC END ELSE        20608700
ENDECK:    BEGIN ENDOFDECK(UNITNO-32,0&CARD[18:18:15]);                 20608750
                 GO TO ZIPEXIT;                                         20608800
           END                                                          20608850
           ELSE GO TO ZIPEXIT;                                          20608900
           IF(TWO(UNITNO) AND SAVEWORD) NEQ 0 THEN GO TO SAVEND;        20608950
           IF WAITIO(CARDLOC&400[18:33:15],@15,UNITNO).[45:3] NEQ 0 THEN20609000
           BEGIN                                                        20609050
SAVEND: LABELTABLE[UNITNO]:= @114;                                      20609100
        RRRMECH:= NOT (NT1:= TWO(UNITNO)) AND RRRMECH OR                20609150
                  NT1 AND SAVEWORD;                                     20609200
        GO TO ZIPEXIT;                                                  20609250
           END;                                                         20609300
        M[(SOURCE:= CARDLOC)+9]:= 0&"."[1:43:5];                        20609350
        USERID:= UNITCODE[UNITNO-23];                                   20609400
        GO TO CC;                                                       20609450
LABE: GO SW[CCLABEL(UNITNO,USERID,CN,CARDLOC,T,SOURCE,ACCUM,COUNT,      20609500
                    LASTSCAN)];                                         20609550
FINIS::     CCFINISH(CMM,PROG,CEQN,PEQN,CN,T,PPCPROCESS,OPTN,           20609600
                     PDEX,CDEX,LIBNO,CLOSET,PADDR,CADDR);               20609650
           SELECTION;                                                   20609700
            IF UNITNO NEQ 31 THEN                                       20609750
            IF LIBNO NEQ 0 AND (UNITNO=23 OR UNITNO=24 OR UNITNO GEQ 32)20609800
               AND T NEQ ENDFI THEN                                     20609850
            BEGIN                                                       20609900
                 LABELTABLE[UNITNO]:=@214;                              20609950
                 SLEEP([LABELTABLE[UNITNO]],@100);                      20610000
                 LABELTABLE[UNITNO]:=-@14;                              20610050
                 GO TO CCTYPE;                                          20610100
            END ELSE GO TO CCTYPE;                                      20610150
ZIPEXIT:    FORGETSPACE(CARDLOC-2);                                     20610200
EXIT::                                                                  20610250
         FORGETSPACE(ACCUM INX 0);%                                     20610300
         FORGETSPACE(CMM INX 0);%                                       20610350
         IF (CCTOG:=CCTOG - 1) LEQ 0 THEN                               20610400
         M[P(..RESWDS,LOD,1,NOT,INX)].[2:1]:=0;                         20610450
         IF UNITNO GEQ 32 AND UNITNO LEQ 63 THEN                        20610500
            PSEUDOCOPY:= PSEUDOCOPY - 1;                                20610550
         KILL([CARD]);%                                                 20610600
END CONTROLCARD;                                                        20610650
 SAVE PROCEDURE SELECTRUN1;                                             20632000
         BEGIN REAL RCW=+0;                                             20633000
              P(GETSPACE(196,12,0)+1,STS,RCW,0,RDS,0,XCH,CFX,STF);      20634000
              STACKUSE ~ TRUE;                                          20635000
              SELECTRUN;                                                20636000
              KILL([RCW]);                                              20637000
         END;                                                           20638000
$INCLUDE 21699001, IF DATACOM AND NOT INQUIRY;                          20999999
REAL PROCEDURE WHATSUP(STA,MIX,FUNC,ARAE);                              21000000
 VALUE STA,MIX,FUNC;                                                    21001000
 REAL STA,MIX,FUNC;                                                     21002000
 ARRAY ARAE[*];                                                         21004000
BEGIN COMMENT   WHATSUP HANDLES THE FOLLOWING-                          21005000
         RECD FROM KEYBOARD(S)  RTND TO SPO(S)                          21006000
   WS(X,0,1,X)     WU TU/BU     USERID FOR TU/BU                        21007000
   WS(0,X,1,X)     <MIX> WU     ALL STATIONS & USERIDS FOR MIX          21008000
   WS(0,0,1,X)     WU           ALL STATIONS & USERIDS                  21009000
   WS(X,0,2,X)     WP TU/BU     PROG SPEC ASSIGNED TO TU/BU             21010000
   WS(0,0,2,X)     WP           ALL PROG SPEC ASSIGNED TO ALL TU/BU     21011000
   WS(0,X,2,X)     <MIX> WA     ALL STATIONS ASSIGNED TO <MIX>          21012000
   WS(0,X,3,X)     <MIX> SS:MESSAGE    SENDS MESSAGE TO ALL STATIONS    21013000
                                       THAT ASKED FOR<MIX>MESSAGES      21014000
   WS(0,0,3,X)     SS ALL:MESSAGE      SENDS MESSAGE TO ALL READY SPOS  21015000
   WS(0,X,4,X)     <MIX> SS:ALL:MESSAGE   SENDS MESSAGE TO ALL READY    21016000
                                          SPOS ON THAT MIX              21017000
         CALLED FROM COMM 32-                                           21018000
   WS(X,X,6,X)(ALG)RETURNS "USERID" IN WHATSUP OR -1 IF NO USER         21019000
   WS(0,X,6,X)(ALG)RETURNS 2| # OF STAS ATTACHED IN WHATSUP OR -1       21020000
                                                             IF NO USER 21020100
                   AND ARRAY[EVEN] = STA [9:9]                          21021000
                   AND ARRAY[ODD ] = USERID                             21022000
   WS(X,X,5,X)(COB)RETURNS 3 IN ARRAY[0] OR -1 IF NO USER               21022100
                   AND ARRAY[1] = TU                                    21023100
                   AND ARRAY[2] = BUF                                   21024100
                   AND ARRAY[3] = USERID                                21025000
   WS(0,X,5,X)(COB)RETURNS 3| # OF STAS ATTACHED IN ARRAY[0] OR -1      21025100
                                                             IF NO USER 21025150
                   AND ARRAY[I+0] = TU                                  21025200
                   AND ARRAY[I+1] = BUF                                 21026000
                   AND ARRAY[I+2] = USERID                              21026100
; %                                                                     21027000
 LABEL WS1,WS2,WS3,WS4,WS5,WS6,WAT1,WS5A,WS6A,EXIT;                     21028000
 REAL USERIS,N,PR1,PR2;                                                 21029000
 INTEGER SIZE,TUB,TU,BU,MX,I,J,K,BOUF;                                  21030000
 ARRAY ARA[*];                                                          21031000
 INTEGER BUFF=ARAE;                                                     21031500
 SWITCH THIS ~ EXIT,WS1,WS2,WS3,WS4,WS5,WS6;                            21032000
 NAME ADDR;                                                             21033000
 DEFINE                                                                 21034000
    STATN=STAS[J].[9:9]#, MSK=@757#,                                    21034100
 A=ARA[I].[39:9]#,                                                      21035000
 B=ARA[I].[30:9]#,                                                      21036000
 C=ARA[I].[21:9]#,                                                      21037000
 D=ARA[I].[12:9]#,                                                      21038000
 E=ARA[I].[03:9]#;                                                      21039000
                                                                        21040000
 ARRAY STAS[*];                                                         21041000
                                                                        21042000
 BOOLEAN NOATCH,NOPROG,FORGETBUFF;                                      21043000
SUBROUTINE WATUSER;                                                     21045000
    BEGIN                                                               21046000
         IF P(LOOKQ,STA AND @7570000000000,LLL,.ADDR,STD).[9:9]         21047000
              = STA.[9:9] THEN USERIS ~ ABS(ADDR[1]) ELSE USERIS~ -1;   21048000
    END;                                                                21049000
SUBROUTINE WATATCH;                                                     21050000
    BEGIN     NOATCH ~ FALSE;                                           21051000
         IF P(ATTACHED[MIX],TOP) THEN BEGIN P(DEL);NOATCH~TRUE;END ELSE 21052000
         BEGIN                                                          21053000
              ARA ~ P; SIZE ~ ARA.[8:10];                               21054000
              STAS ~ FLAG((GETSPACE(SIZE|5+1,0,0)+2) OR                 21055000
                           M &(SIZE|5+1)[8:38:10]);                     21055100
              M[STAS INX NOT 1].[9:6] ~ 0;                              21055500
              STAS[0]~0; MOVE(SIZE|5,(STAS INX 0),(STAS INX 1));        21055550
              IF STA = 0 THEN                                           21056000
              BEGIN J ~ 1;                                              21057000
                   FOR I ~ (SIZE-1) STEP -1 UNTIL 0 DO                  21058000
                   BEGIN                                                21059000
                        IF A!0 THEN BEGIN STATN~A AND MSK; J~J+1 END;   21060000
                        IF B!0 THEN BEGIN STATN~B AND MSK; J~J+1 END;   21061000
                        IF C!0 THEN BEGIN STATN~C AND MSK; J~J+1 END;   21062000
                        IF D!0 THEN BEGIN STATN~D AND MSK; J~J+1 END;   21063000
                        IF E!0 THEN BEGIN STATN~E AND MSK; J~J+1 END;   21064000
                   END;                                                 21065000
                   GO TO WAT1;                                          21066000
              END;                                                      21067000
              TUB ~ 0&STA[39:9:9]; J ~ 1;                               21068000
              FOR I ~ (SIZE-1) STEP -1 UNTIL 0 DO                       21069000
              BEGIN                                                     21070000
                   IF(A AND MSK)=TUB THEN BEGIN STATN~TUB; J~J+1 END;   21071000
                   IF(B AND MSK)=TUB THEN BEGIN STATN~TUB; J~J+1 END;   21072000
                   IF(C AND MSK)=TUB THEN BEGIN STATN~TUB; J~J+1 END;   21073000
                   IF(D AND MSK)=TUB THEN BEGIN STATN~TUB; J~J+1 END;   21074000
                   IF(E AND MSK)=TUB THEN BEGIN STATN~TUB; J~J+1 END;   21075000
              END;                                                      21076000
WAT1:         IF (STAS[0]~J-1) <1 THEN                                  21077000
              BEGIN FORGETSPACE(STAS); NOATCH ~ TRUE;                   21078000
              END;                                                      21079000
         END;                                                           21080000
    END;                                                                21081000
SUBROUTINE SPOUSEDBY;                                                   21082000
    BEGIN                                                               21083000
         TU~ 0&STA[44:09:4];  BU~ 0&STA[44:14:4];                       21084000
         BOUF ~ (GETSPACE(12,0,0)+2);                                   21085000
         STREAM( S~[USERIS], T~TU, G~BU, Z~ BOUF );                     21086000
         BEGIN                                                          21087000
              SI~ LOC T; DS~ 2DEC; DS~ LIT"/";                          21088000
              SI~ LOC G; DS~ 2DEC; DS~ 9LIT" USED BY ";                 21089000
              SI~S;IF SC!"+" THEN BEGIN SI~SI+1;DS~7 CHR;END;DS~LIT"~"; 21090000
         END;                                                           21091000
         BOUF ~ BOUF& M[BUFF INX NOT 0][9:9:9];                         21092000
         SPOUT(BOUF);   FORGETBUFF ~ TRUE;                              21093000
    END;                                                                21094000
SUBROUTINE NULSPO;                                                      21095000
    BEGIN;                                                              21096000
         STREAM(Z~ BUFF );                                              21097000
         BEGIN DS ~ 8LIT"   NULL "; END;                                21098000
         BUFF ~ BUFF & M[BUFF-1][9:9:9];                                21099000
         SPOUT(BUFF);                                                   21100000
    END;                                                                21101000
                                                                        21102000
SUBROUTINE WATPROG;                                                     21103000
    BEGIN NOPROG ~ FALSE;                                               21104000
         IF (PR1 ~ JAR[MIX,0]) ! 0 THEN                                 21105000
         PR2 ~ JAR[MIX,1]          ELSE                                 21106000
         NOPROG ~ TRUE;                                                 21107000
    END;                                                                21108000
SUBROUTINE SPOPROG;                                                     21109000
    BEGIN MX ~ MIX;                                                     21110000
         BOUF ~ (GETSPACE(12,0,0)+2);                                   21110100
         TU ~ 0&STA[44:09:4]; BU ~ 0&STA[44:14:4];                      21111000
         STREAM(S1~PR1,S2~PR2,T~TU,G~BU,EM~MX,Z~ BOUF );                21112000
         BEGIN                                                          21113000
              SI~LOC T; DS~ 2DEC; DS~ LIT"/";                           21114000
              SI~LOC G; DS~ 2DEC; DS~ 13 LIT" ASSIGNED TO ";            21115000
              SI~LOC S1; SI~SI+1; DS~  7 CHR; DS~ LIT"/";               21116000
              SI~LOC S2; SI~SI+1; DS~  7 CHR; DS~ LIT"=";               21117000
              SI~LOC EM; DS~ 2DEC; DS~ LIT"~"; DI~DI-3; DS~ 1FILL; END; 21118000
         BOUF ~ BOUF & M[BUFF INX NOT 0][9:9:9];                        21119000
         SPOUT(BOUF);   FORGETBUFF ~ TRUE;                              21120000
    END;                                                                21121000
    GO TO THIS[FUNC];                                                   21121100
WS1: IF STA ! 0 THEN                             % WHAT USER,TU/BUF     21122000
    BEGIN                                                               21123000
         IF GET(STA).[46:1] THEN                                        21124000
         BEGIN                                                          21125000
              WATUSER;                                                  21126000
              IF USERIS < 0 THEN                                        21127000
              BEGIN                                                     21128000
                   NULSPO; GO TO EXIT;                                  21129000
              END;                                                      21130000
              SPOUSEDBY; GO TO EXIT;                                    21131000
         END  ELSE BEGIN NULSPO; GO TO EXIT; END;                       21132000
    END;                                                                21133000
    IF MIX ! 0 THEN                              % WHAT USERS,ONE MIX   21134000
    BEGIN                                                               21135000
         WATATCH; K~0;                                                  21136000
         IF NOATCH THEN BEGIN NULSPO; GO TO EXIT; END;                  21137000
         FOR I ~ STAS[0] STEP -1 UNTIL 1 DO                             21138000
         BEGIN                                                          21139000
              IF GET(STAS[I]).[46:1] THEN                               21140000
              BEGIN STA ~ STAS[I];                                      21141000
                   WATUSER; SPOUSEDBY; K~K+1;                           21142000
              END;                                                      21143000
         END; IF K = 0 THEN NULSPO;                                     21144000
         FORGETSPACE(STAS); GO TO EXIT;                                 21145000
    END;                                                                21146000
    K~0;                                         % WHAT USERS ALL       21147000
    STA ~ STATION[0,0];                                                 21148000
    WHILE ( STA ~ GET(0&STA[9:4:4]&STA[14:18:4])).[9:4]!0 DO            21148100
         IF STA.[46:1] THEN                                             21150000
                   BEGIN                                                21155000
                         WATUSER; SPOUSEDBY; K~K+1;                     21156000
                   END;                                                 21157000
         IF K = 0 THEN NULSPO;                                          21160000
         GO TO EXIT;                                                    21161000
WS2: IF STA ! 0 THEN                             % WHAT PROG,TU/BUF     21162000
    BEGIN K~0;                                                          21163000
         FOR MIX ~ 1 STEP 1 UNTIL MIXMAX DO                             21164000
         BEGIN                                                          21165000
              WATATCH;                                                  21166000
              IF NOT NOATCH THEN                                        21167000
              BEGIN                                                     21168000
                   WATPROG;                                             21169000
                   IF NOT NOPROG THEN                                   21170000
                   BEGIN                                                21171000
                        SPOPROG;                                        21172000
                        K ~ K+1;                                        21173000
                   END;                                                 21174000
                   FORGETSPACE(STAS);                                   21175000
              END;                                                      21176000
         END;                                                           21177000
         IF K = 0 THEN NULSPO;                                          21178000
         GO TO EXIT;                                                    21179000
    END;                                                                21180000
    IF MIX ! 0 THEN                              % WHAT PROG,ONE MIX    21181000
    BEGIN K~0;                                                          21182000
         WATATCH;                                                       21183000
         IF NOT NOATCH THEN                                             21184000
         BEGIN                                                          21185000
              FOR   I ~ STAS[0] STEP -1 UNTIL 1 DO                      21186000
              BEGIN STA ~ STAS[I];                                      21187000
                   WATPROG;                                             21188000
                   IF NOT NOPROG THEN                                   21189000
                   BEGIN                                                21190000
                        SPOPROG;                                        21191000
                        K ~ K+1;                                        21192000
                   END;                                                 21193000
              END;                                                      21194000
              FORGETSPACE(STAS);                                        21195000
         END;                                                           21196000
         IF K = 0 THEN NULSPO;                                          21197000
         GO TO EXIT;                                                    21198000
    END;                                                                21199000
    K~0;                                         % WHAT PROG,ALL MIXES  21200000
    FOR MIX ~ 1 STEP 1 UNTIL MIXMAX DO                                  21201000
    BEGIN                                                               21202000
         WATATCH;                                                       21203000
         IF NOT NOATCH THEN                                             21204000
         BEGIN                                                          21205000
              FOR I ~ STAS[0] STEP -1 UNTIL 1 DO                        21206000
              BEGIN STA ~ STAS[I];                                      21207000
                   WATPROG;                                             21208000
                   IF NOT NOPROG THEN                                   21209000
                   BEGIN                                                21210000
                        SPOPROG;                                        21211000
                        K ~ K+1;                                        21212000
                   END;                                                 21213000
              END;                                                      21214000
              FORGETSPACE(STAS);                                        21215000
              STA ~ 0;                                                  21215100
         END;                                                           21216000
    END; IF K = 0 THEN NULSPO;                                          21217000
         GO TO EXIT;                                                    21218000
WS3: IF MIX ! 0 THEN                             % SS <MIX> SM-S ONLY   21219000
    BEGIN                                                               21220000
$INCLUDE 21221001, IF DATACOM AND DCSPO AND NOT INQUIRY;                21220999
         IF TUSTABYMIX[MIX] = 0 THEN                                    21221000
         BEGIN MX ~ MIX;                                                21222000
              STREAM(S~MX,Z~ BUFF );                                    21223000
              BEGIN SI~LOC S; DS~ 22 LIT"NO SM STATIONS ON MIX=";       21224000
                   DS~ 2 DEC; S~DI; DI~ DI-2; DS~ 1 FILL;               21225000
                   DI~S; DS~ LIT"~";                                    21226000
              END;                                                      21227000
              BUFF ~ BUFF & M[BUFF-1][9:9:9];                           21228000
              SPOUT(BUFF);                                              21229000
              GO TO EXIT;                                               21230000
         END;                                                           21231000
         MX ~ MIX;                                                      21232000
         M[BUFF-2].[9:6] ~ MX;                                          21233000
         SPOUT(BUFF);                                                   21234000
    END         ELSE                                                    21235000
    BEGIN                                        % SS ALL               21236000
         STA ~ STATION[0,0];                                            21237000
         WHILE ( STA ~ GET(0&STA[9:4:4]&STA[14:18:4])).[9:4]!0 DO       21238000
         BEGIN                                                          21239000
              IF STA.[30:1] ! 1 THEN                                    21240000
              BEGIN                                                     21241000
                   IF STA.[9:9] !  M[BUFF-1].[9:9]                      21242000
                   THEN                                                 21243000
                   BEGIN                                                21244000
                        BOUF ~(GETSPACE(12,0,0)+2);                     21245000
                        M[BOUF INX NOT 1].[9:6] ~ 0;                    21245100
                        MOVE(12,BUFF,BOUF);                             21246000
                        BOUF:=BOUF&STA[9:9:9]&1[2:47:1];                21247000
                        M[BOUF INX 11].[42:6]~31; % GP MK               21247100
                        SPOUT(BOUF);                                    21248000
                   END;                                                 21249000
              END;                                                      21250000
         END;                                                           21251000
         IF M[BUFF-1].[9:9] ! 0 THEN                                    21252000
         SPOUT(BUFF)            ELSE                                    21253000
         FORGETSPACE(BUFF);                                             21254000
    END; GO TO EXIT;                                                    21255000
WS4: WATATCH;                                    % SS <MIX> ALL         21256000
    IF NOATCH THEN                                                      21257000
    BEGIN MX ~ MIX;                                                     21258000
         STREAM(S~MX ,Z~ BUFF );                                        21259000
         BEGIN SI~LOC S;                                                21260000
              DS~ 19 LIT "NO STATIONS ON MIX=";%                        21261000
              DS~ 2 DEC; S~DI; DI~DI-2;DS~1 FILL; DI~S; DS~ LIT "~";    21262000
         END;                                                           21263000
         BUFF ~ BUFF & M[BUFF-1][9:9:9];                                21264000
         SPOUT(BUFF);                                                   21265000
         GO TO EXIT;                                                    21266000
    END;                                                                21267000
    FOR I ~ STAS[0] STEP -1 UNTIL 1 DO                                  21268000
    BEGIN                                                               21269000
         IF GET(STA~STAS[I]).[9:9] ! M[BUFF-1].[9:9] THEN               21270000
         BEGIN                                                          21271000
              IF STA.[30:1] ! 1 THEN                                    21272000
              BEGIN                                                     21273000
                   BOUF ~(GETSPACE(12,0,0)+2);                          21274000
                   M[BOUF INX NOT 1].[9:6] ~ 0;                         21274100
                   MOVE(12,BUFF,BOUF);                                  21275000
                   BOUF ~ BOUF & STA[9:9:9];                            21276000
                   M[BOUF INX 11].[42:6]~31; % GP MK                    21276100
                   SPOUT(BOUF);                                         21277000
              END;                                                      21278000
         END;                                                           21279000
    END;                                                                21280000
    FORGETSPACE(STAS);                                                  21281000
    IF M[BUFF-1].[9:9] ! 0 THEN                                         21282000
    SPOUT(BUFF)            ELSE                                         21283000
    FORGETSPACE(BUFF);                                                  21284000
    GO TO EXIT;                                                         21285000
WS5: IF STA ! 0 THEN                                                    21286000
    BEGIN                                                               21287000
         WATATCH;                                                       21288000
         IF NOATCH THEN                                                 21289000
         BEGIN                                                          21290000
WS5A:         ARAE[0] ~ -1;                                             21291000
              GO TO EXIT;                                               21292000
         END;                                                           21293000
         WATUSER;                                                       21294000
         ARAE[0] ~ 3;                                                   21295000
         ARAE[1] ~ STA.[9:4];                                           21296000
         ARAE[2] ~ STA.[14:4];                                          21296100
         ARAE[3] ~ USERIS;                                              21297000
         FORGETSPACE(STAS);                                             21297100
         GO TO EXIT;                                                    21298000
    END;                                                                21299000
    WATATCH;                                                            21300000
    IF NOATCH THEN GO TO WS5A; K ~ ARAE.[17:1];                         21301000
    IF 3|(STAS[0]) } ARAE.[8:10] THEN                                   21302000
    BEGIN                                                               21303000
         STAS[0] ~ (ARAE.[8:10]-K) DIV 3;                               21304000
    END; J~0;                                                           21305000
    FOR I ~ 1 STEP 1 UNTIL STAS[0] DO                                   21306000
    BEGIN                                                               21307000
         STA ~ STAS[I];                                                 21308000
         WATUSER;                                                       21309000
         ARAE[I+J] ~ STA.[9:4];                                         21310000
         ARAE[I+J+1] ~ STA.[14:4];                                      21311000
         ARAE[I+J+2] ~ USERIS;                                          21311100
         J ~ J + 2;                                                     21312000
    END; ARAE[0] ~ 3| STAS[0];                                          21313000
         FORGETSPACE(STAS); GO TO EXIT;                                 21313100
WS6: IF STA ! 0 THEN                                                    21314000
    BEGIN                                                               21315000
         WATATCH;                                                       21316000
         IF NOATCH THEN                                                 21317000
         BEGIN                                                          21318000
WS6A:         WHATSUP ~ -1;  GO TO EXIT;                                21319000
         END;                                                           21320000
         WATUSER;                                                       21321000
         WHATSUP ~ USERIS;                                              21322000
         FORGETSPACE(STAS);                                             21323000
         GO TO EXIT;                                                    21324000
    END;                                                                21325000
    WATATCH;                                                            21326000
    IF NOATCH THEN GO TO WS6A;                                          21327000
    IF 2|(STAS[0])> ARAE.[8:10] THEN                                    21328000
    BEGIN                                                               21329000
         STAS[0] ~ ARAE.[8:10] DIV 2;                                   21330000
    END; J~0;                                                           21331000
    FOR I ~ 0 STEP 1 UNTIL (STAS[0])-1 DO                               21332000
    BEGIN                                                               21333000
         STA ~ STAS[I+1];                                               21334000
         WATUSER;                                                       21335000
         ARAE[I+J] ~ STA;                                               21336000
         ARAE[I+J+1] ~ USERIS;                                          21337000
         J ~ J + 1;                                                     21338000
    END; WHATSUP ~ 2| STAS[0];                                          21339000
         FORGETSPACE(STAS);                                             21340000
EXIT: IF FORGETBUFF THEN FORGETSPACE(BUFF);                             21398000
END WHATSUP;                                                            21399000
PROCEDURE SEEKACTION(STA,MIX,FUNC,IOD);                                 21500000
 VALUE STA,MIX,FUNC;                                                    21501000
 REAL STA,MIX,FUNC;                                                     21502000
 NAME IOD;                                                              21503000
 BEGIN COMMENT                                                          21504000
       IF FUNC = 1 THEN THIS IS A READ SEEK FROM COMM 11, THEREFORE     21505000
                   IF STA = 0 THEN UNSEEK ALL STA-S ASSOCIATED WITH     21506000
                   THIS IOD,                                            21507000
                   IF STA ! 0 THEN UNSEEK ALL STA-S ASSOCIATED WITH     21508000
                   THIS IOD AND DO SEEK FOR STA.                        21509000
       IF FUNC = 2 THEN UNSEEK STA ONLY.                                21510000
       IF FUNC = 4 THEN FIND THE ASSOCIATED FILE AND FIX-UP IOD, THEN   21511000
                   HANDLE AS FOR FUNC = 2.  THIS IS REQUIRED FOR "HR"   21511100
                   TYPE ACTION, WHERE THE STATION REQUESTS THE UNSEEK.  21511200
 ;                                                                      21512000
 REAL NUMBUFS,LLLADR,LLLWD,T1,NUQWDADR,QWD,TUB;                         21513000
 LABEL SA1,SA2,SA3,EGRESS,DSER;                                         21514000
 ARRAY FIB[*];                                                          21515000
 INTEGER I;                                                             21516000
 SWITCH GOTOTHISFUNC ~ EGRESS,SA1,SA2,SA3,SA2;                          21517000
 REAL SUBROUTINE ADRNUQWD;                                              21518000
    BEGIN                                                               21519000
    ADRNUQWD~(IOD[I] INX NOT 2);                                        21520000
    END ADRNUQWD;                                                       21521000
 SUBROUTINE LLLQWD;                                                     21522000
    BEGIN                                                               21523000
    LLLWD ~P(READQ,QWD AND @0007570000000000,LLL  ,0,INX,.LLLADR,STD);  21524000
    END LLLQWD;                                                         21525000
 SUBROUTINE DELINQ;                                                     21526000
    BEGIN                                                               21527000
                                                                        21527100
    M[LLLWD ] ~ (P(DUP,LOD))&LLLWD[FTF];                                21528000
    M[LLLWD.[FF]]~ (P(DUP,LOD))&LLLWD[CTC];                             21529000
    M[LLLADR] ~ 0;                                                      21530000
    SET(GET(LLLWD) AND NOT @1760);                                      21530100
    END DELINQ;                                                         21531000
 SUBROUTINE LINQ;                                                       21532000
    BEGIN                                                               21533000
                                                                        21533100
                                                                        21533200
    M[NUQWDADR] ~ (STA AND @0007570000000000)&LLLWD[FTF]&LLLADR[CTC];   21534000
    M[LLLWD.[FF]].[CF] ~ NUQWDADR;                                      21535000
    M[LLLADR].[FF] ~ NUQWDADR;                                          21536000
    SET(GET(STA)&MIX[38:43:5] OR @20);                                  21536050
    IF GET(STA).[24:1] THEN                                             21536100
         DCREAD(STA);                                                   21536200
    END LINQ;                                                           21537000
 IF FUNC<0 OR FUNC>4 THEN                                               21537100
    GO TO EGRESS;                                                       21537200
 TUB ~ STA.[9:9];                                                       21537500
 IF FUNC=4 THEN                                                         21538000
    BEGIN                                                               21538100
    QWD ~ STA;                                                          21538200
    LLLQWD;                                                             21538300
    IF LLLWD.[9:9]!TUB THEN                                             21538400
         GO TO EGRESS;                                                  21538500
                                                                        21538600
    IOD ~ M[LLLADR+1] INX M;                                            21538700
    END;                                                                21538800
 IF IOD[0].[25:1] THEN                                                  21538900
   SAVEOPEN(IOD INX 0);                                                 21539000
 FIB ~ M[IOD INX NOT 2];                                                21539500
 NUMBUFS ~ FIB[13].[10:9];                                              21540000
 IF FUNC=1 OR FUNC=3 THEN                                               21541000
    IF (STA~STA AND @0007570000000000)!0 THEN                           21541050
             IF ((T1~GET(STA)) AND @1760)!0 THEN                        21541100
                   GO TO EGRESS;                                        21541200
                                                                        21542000
                                                                        21542050
 IF IOD[0].[3:5] ! 16 THEN % NOT DATA-COM DESC                          21542100
    BEGIN I~ 1;  GO DSER END;                                           21542200
 IF FIB[14] = 0 THEN                                                    21542300
 FOR I:=NUMBUFS-1 STEP -1 UNTIL 0 DO                                    21542400
 IF M[ADRNUQWD] NEQ 0 THEN  %CANT SEEK AN OUTPUT FILE                   21542500
 BEGIN I:=2; GO TO DSER; END;                                           21542600
 GO TO GOTOTHISFUNC[FUNC];                                              21543000
 SA1:                                                                   21544000
    BEGIN                                                               21545000
    FOR I ~ NUMBUFS-1 STEP -1 UNTIL 0 DO                                21546000
         IF (QWD~M[ADRNUQWD])!0 THEN                                    21547000
              BEGIN                                                     21548000
              LLLQWD;                                                   21549000
              DELINQ;                                                   21550000
              FIB[14] ~ P(DUP,LOD)-1;                                   21551000
              END;                                                      21552000
    IF STA!0 THEN                                                       21553000
         GO TO SA3;                                                     21554000
    GO TO EGRESS;                                                       21555000
    END SA1;                                                            21556000
 SA2:                                                                   21557000
    BEGIN                                                               21558000
    FOR I ~ NUMBUFS-1 STEP -1 UNTIL 0 DO                                21559000
         IF (QWD~M[ADRNUQWD]).[9:9] = TUB THEN                          21560000
              BEGIN                                                     21561000
              LLLQWD;                                                   21562000
              DELINQ;                                                   21563000
              FIB[14] ~ P(DUP,LOD)-1;                                   21564000
              END;                                                      21565000
    GO TO EGRESS;                                                       21566000
    END SA2;                                                            21567000
 SA3:                                                                   21568000
    BEGIN                                                               21569000
         IF TUB ! 0 THEN %   NOT 0/0 (WHICH IS  "UNSEEK" ALL )          21569100
         IF TUB.[39:4] = 0 THEN %  SO SORRY - YOU LOSE                  21569150
         BEGIN                                                          21569200
         I ~ 0;                                                         21569300
         GO TO DSER;                                                    21569400
         END;                                                           21569500
    TACH(STA,MIX,3);                                                    21569900
    FOR I ~ NUMBUFS-1 STEP -1 UNTIL 0 DO                                21570000
         IF (M[(NUQWDADR~ ADRNUQWD)])=0 THEN                            21571000
              BEGIN                                                     21572000
              QWD~STA;                                                  21573000
              LLLQWD;                                                   21574000
              IF LLLWD.[9:9]!TUB THEN                                   21575000
                   BEGIN                                                21576000
                   LINQ;                                                21577000
                   FIB[14] ~ P(DUP,LOD)+1;                              21578000
                   END;                                                 21579000
              GO TO EGRESS;                                             21580000
              END;                                                      21581000
    GO TO EGRESS;                                                       21582000
    END SA3;                                                            21583000
DSER:                                                                   21584000
    BEGIN T1 ~ GETSPACE(12,0,0)+2;                                      21585000
         STREAM(X:=(I=1),Y:=(I=2),T1);                                  21586000
              BEGIN                                                     21587000
                   DS~ 16 LIT "-INV DCOM STMT, ";                       21588000
                   X(DS~ 14 LIT "UNIT ! DCOM  ~"; JUMP OUT TO EX);      21589000
                   Y(DS:=14 LIT "SEEK ON WRIT ~"; JUMP OUT TO EX);      21589500
                   DS~ 14 LIT "TU=0, BUF!0  ~";                         21590000
         EX:  END;                                                      21591000
         TERMINATE(P1MIX);                                              21592000
         TERMINALMESSAGE(-T1);                                          21593000
    END;                                                                21594000
EGRESS::                                                                21698000
END SEEKACTION;                                                         21699000
$INCLUDE 21752001, IF DCLOG AND DATACOM AND NOT INQUIRY;                21699999
PROCEDURE UPDATEABORTLN(WHODIDIT); VALUE WHODIDIT; REAL WHODIDIT;       21700000
    BEGIN                                                               21701000
    LABEL OWT,SETHDR;                                                   21701100
    REAL LNKFWD,NBR,I,J,TEMP,MSG=NBR,IOD=I;                             21702000
    NAME A,B=LNKFWD;                                                    21703000
    IF SPOEDNULLOG THEN GO OWT;                                         21704000
    IF (LNKFWD~RQONE.[33:15])! P(.RQONE) THEN                           21707000
         BEGIN                                                          21708000
                                                                        21709000
                                                                        21710000
         WHILE M[LNKFWD].[9:15] ! @77777 DO                             21711000
              BEGIN                                                     21712000
              NBR~NBR+2; LNKFWD~ M[LNKFWD].[33:15]                      21713000
              END;                                                      21714000
         NBR~NBR+2;                                                     21715000
         IF NBR > ABORTSPEC.SIZABORT THEN                               21716000
              BEGIN                                                     21717000
              ;STREAM(MSG~MSG~GETSPACE(3,0,0));                         21718000
                   BEGIN                                                21719000
                   DS ~ 19 LIT "#REMOTE/ABORT OVFL~"                    21720000
                   END;                                                 21721000
              SPOUT(0&MSG[33:33:15]);                                   21722000
              NBR ~ ABORTSPEC.SIZABORT;                                 21723000
              END;                                                      21724000
         ABORTSPEC.ABORTREC~NBR;                                        21724100
         A~(TEMP~GETSPACE(NBR~NBR|5,0,0)+2) INX MEMORY;                 21729000
         LNKFWD~RQONE.[33:15];                                          21730000
         FOR I~ 10 STEP 10 WHILE I< NBR DO                              21731000
              BEGIN                                                     21732000
              B ~ LNKFWD.[33:15] INX MEMORY;                            21734000
              FOR J ~ 0 STEP 1 UNTIL 9 DO                               21735000
                A[I+J] ~ IF J = 0 THEN B[0]& B[1][2:2:1] ELSE B[J + 1]; 21738000
              LNKFWD ~ B[0].[33:15];                                    21745000
              END;                                                      21746000
COMMENT UPDATE REC. CNTR,DATE,TIME-WRITE ABORTFILE ON DISK;             21747000
SETHDR:                                                                 21747100
         A[0]~NBR DIV 5; A[2]~WHODIDIT; A[5]~DATE;                      21748000
         A[4] ~ "ABORTLN"; A[1] ~ ABORTSPEC.SIZABORT;                   21748100
         A[6] ~ XCLOCK+P(RTR);                                          21748200
         DISKIO(IOD,TEMP-1,NBR,ABORTFILE); SLEEP([IOD],IOMASK);         21749000
         FORGETSPACE(TEMP);                                             21749100
         END                                                            21751000
    ELSE IF WHODIDIT = 1 THEN%IF DETACH UPDATED BE SURE                 21751100
         BEGIN     %ABORT LOG SET EMPTH                                 21751300
         A ~ (TEMP~GETSPACE(NBR~10,0,0)+2) INX MEMORY;                  21751500
         ABORTSPEC.ABORTREC ~ 2;  GO SETHDR;                            21751700
         END;                                                           21751900
OWT:                                                                    21751950
    END UPDATEABORTLN;                                                  21752000
REAL SECONDCTR;                                                         22000000
$ INCLUDE 22000701, IF SHAREDISK;                                       22000499
PROCEDURE FINDFREEADDRESS(N);VALUE N;REAL N;FORWARD;                    22000500
REAL FINDFREECTR; % USED TO DETERMINE HOW FREQUENTLY                    22000600
                  % FINDFREEADDRESS IS BEING CALLED                     22000700
 PROCEDURE NSECOND;%                                                    22001000
         BEGIN REAL I,RCW=+0;%                                          22002000
              REAL J;%                                                  22003000
              ARRAY A[*];%                                              22004000
              P(GETSPACE(128, 12,0)+1,STS,RCW,0,RDS,0,XCH,CFX,STF);     22005000
              P(0,0,0,0,0);%                                            22006000
              STACKUSE ~ TRUE;%                                         22007000
              A ~ [M[GETSPACE(3|MIXMAX+3,0,0)+2]]&90[8:38:10];          22008000
$INCLUDE 22008301, IF DCLOG AND DATACOM AND NOT INQUIRY;                22008049
              IF NOT SPOEDNULLOG THEN                                   22008050
              IF NOT REMOTELOGFREE THEN                                 22008100
                SLEEP([TOGLE],REMOTELOGMASK);                           22008200
             REMOTELOGFREE ~ FALSE;                                     22008300
              SLEEP([TOGLE],ABORTMASK);                                 22009000
              ABORTABLE ~FALSE;%                                        22010000
              HALT; IDLETIME;%                                          22011000
              J:=NEUP.NEUF ;                                            22011100
$INCLUDE 22011201, IF SHAREDISK ;                                       22011190
              DISKWAIT(-(EUIO INX 0),-(J+EUIOFFSET),EUIOHOLDER);        22011200
              FOR I:=J-1 STEP -1 UNTIL 0 DO                             22011300
               BEGIN                                                    22011400
                EUIO[I+EUIOFFSET]:=*P(DUP)|EUTAPER+PEUIO[I];            22011500
                PEUIO[I]:=0;                                            22011600
               END;                                                     22011700
$INCLUDE 22011801, IF SHAREDISK ;                                       22011790
              DISKWAIT(EUIO INX 0,-(J+EUIOFFSET),EUIOHOLDER) ;          22011800
              J:=0 ;                                                    22011810
              WHILE (NT1 ~ XCLOCK+P(RTR)) } 5184000 DO MIDNIGHT;%       22012000
              CHANGEDATE(0);                                            22012500
              A[0] ~ NT1;  A[2] ~ "ABORT";%                             22013000
              A[1] ~ DATE;%                                             22014000
              IF (CLOCK AND @17777)=0 THEN                              22014100
              BEGIN FOR I:=1 STEP 1 UNTIL MIXMAX DO                     22014400
                    IF *[JARROW[I]] NEQ 0 THEN                          22014500
                    IF REPLY[I] LSS 0 THEN REPLY[I]:=10;                22014600
              END;                                                      22014900
              FOR I ~ 1 STEP 1 UNTIL MIXMAX DO%                         22015000
                   BEGIN J ~ J+3;%                                      22016000
                        IF JARROW[I] ! 0 THEN%                          22017000
                             BEGIN A[J] ~ PROCTIME[I]+JAR[I,3];%        22018000
                                  NT1 ~ IOTIME[I]+JAR[I,4];%            22019000
                                  WHILE NT1 < 0 DO NT1~NT1+CLOCK+P(RTR);22020000
                                  A[J+1] ~ NT1;%                        22021000
                                  A[J+2] ~ JAR[I,7];%                   22022000
                                  IF TERMIX=@1777 THEN                  22023000
                                  IF PROCTIME[I]>0 THEN                 22023500
                                     TERMINATE(I&15[18:33:15]) ELSE     22024000
                                  IF A[J+1]> JAR[I,4] THEN              22024500
                                     TERMINATE(I&83[18:33:15]);         22025000
                             END%                                       22026000
                        ELSE A[J] ~ A[J+1] ~ A[J+2] ~ 0;%               22027000
                   END;%                                                22028000
              DISKIO(J,A INX 0-1,3|MIXMAX+3,ESPDISKTOP+1);              22029000
              ABORTABLE ~ TRUE;%                                        22030000
$INCLUDE 22030201, IF DCLOG AND DATACOM AND NOT INQUIRY;                22030099
              UPDATEABORTLN(0);%UPDATE REMOTE LOG ABORT TABLE           22030100
              IF NOT SPOEDNULLOG THEN                                   22030150
              REMOTELOGFREE ~ TRUE;                                     22030200
              NOPROCESSTOG ~ NOPROCESSTOG-1;%                           22031000
              FOR I ~ 20 STEP 1 UNTIL 21 DO%                            22032000
                   BEGIN IF NOT UNIT[I].[16:1] THEN%                    22033000
                             UNIT[I].[17:1] ~ 0;%                       22034000
                        STARTIO(I);%                                    22035000
                   END;%                                                22036000
$INCLUDE 22037501, IF DFX;                                              22036999
              DISKOUNT~(P(RRR).[29:1] AND (UNIT[18].[FF]>1023))+    %DFX22037000
                       (P(RRR).[28:1] AND (UNIT[19].[FF]>1023));    %DFX22037500
              IF TERMIX ! @1777 THEN%                                   22038000
              IF TERMINALCLOCK ! 0 THEN%                                22039000
              IF CLOCK-TERMINALCLOCK > 512 THEN%                        22040000
              FOR I ~ 0 STEP 2 UNTIL JOBNUM DO%                         22041000
              IF BED[I].[3:5] = TERMIX.[33:15] THEN%                    22042000
              IF (JAR[TERMIX.[CF],0] EQV "LIBMAIN")!NOT 0               22042100
              OR (JAR[TERMIX.[CF],1] EQV "DISK   ")!NOT 0 THEN          22042150
                   BEGIN BED[I] ~ BED[JOBNUM];%                         22043000
                        BED[I+1] ~ BED[JOBNUM+1];%                      22044000
                        INDEPENDENTRUNNER(P(.RUN),TERMIX.[33:15]);%     22045000
                        I ~ JOBNUM ~ JOBNUM-2;%                         22046000
                        TERMINALCLOCK ~ 0;%                             22047000
                   END;%                                                22048000
              SLEEP([J],IOMASK);%                                       22049000
              FORGETSPACE(A);%                                          22050000
$INCLUDE 22050981, IF STATISTICS;                                       22050909
              COUNTARRAY[1]:=CLOCK;                                     22050910
              IF SYSTATBASE NEQ 0 THEN BEGIN                            22050915
              DISKIO([JUNK],COUNTARRAY.[CF]-1,60,SYSTATBASE);           22050920
              IF XCLOCK GEQ COUNTARRAY[29] THEN                         22050930
              BEGIN                                                     22050940
                                                                        22050950
                   COUNTARRAY[29]:=XCLOCK+INTERVAL;                     22050960
                   INDEPENDENTRUNNER(P(.FILLSYSTAT),0);                 22050970
              END END;                                                  22050980
$ INCLUDE 22053651, IF SHAREDISK;                                       22050999
$VOID                                                                   22051000
              LOCKDIRECTORY;                                            22051100
              IF (J:=HOLDER.[FF])!0 THEN    % HOLD LIST IS NOT EMPTY    22051200
              BEGIN                                                     22051250
                   A:=[M[GETSPACE(J,0,0)+2]]&J[8:38:10];                22051300
                   DISKWAIT(-(A INX 0),J,HOLDER.[CF]);                  22051400
                   FOR I:=0 STEP 1 UNTIL J-1 DO                         22051500
                   IF A[I] LSS 0 THEN                                   22051600
                   IF A[I].[2:2]=SYSNO THEN                             22051700
                   BEGIN                                                22051800
                        M[A[I].[FF]]:=1;                                22051900
                        A[I]:=P(DUP,LOD,SSP);                           22052000
                   END;                                                 22052100
                   DISKWAIT(A INX 0,J,HOLDER.[CF]);                     22052200
                   FORGETSPACE(A);                                      22052300
              END;                                                      22052350
              UNLOCKDIRECTORY;                                          22052400
$VOID                                                                   22052500
              IF NOT FINDINGADDRESS THEN                                22052700
              IF LQAVAIL!0 THEN                                         22052800
              BEGIN                                                     22052900
                   FINDINGADDRESS:=1;                                   22053000
                   FINDFREEADDRESS(0);                                  22053100
              END;                                                      22053200
              IF FINDFREECTR LSS 32 THEN% IT IS NOT GETTING CALLED OFTEN22053300
              IF (J~(*P(..FINDFREEADDRESS)) INX 0) GTR MSTART THEN      22053400
                   M[J-2].[2:1]:=0;                                     22053500
              FINDFREECTR:=0;                                           22053600
              IF RUNUMBER GTR 0 THEN STARTADECK(0);                     22053650
              NSECONDREADY:=TRUE;                                       22053700
              SECONDCTR:=0;                                             22053800
              KILL([RCW]);                                              22053900
         END;%                                                          22054000
PROCEDURE STATUS;%                                                      22055000
         BEGIN REAL U=+1,%                                              22056000
                   T=U+1,%                                              22057000
                   T1=T+1;%                                             22058000
               INTEGER%                                                 22059000
                   I=T1+1;%                                             22060000
              ARRAY AREA=I+1[*];%                                       22061000
              LABEL PAPERPUNCH,DATACOM,PAPER,EL,UNLD;%                  22062000
              LABEL L,TAPE,NOTREADY,DIE,ACCEPT,SCRATCH,INPUT,PRINTER,%  22063000
                   CARD,DRUM,DISK,SPO,PUNCH,COMMON;%                    22064000
              SWITCH S ~ CARD,PRINTER,TAPE,DRUM,DISK,SPO,PUNCH,UNLD,%   22065000
                   PAPERPUNCH,PAPER,DATACOM;%                           22066000
              REAL RCW=+0;%                                             22067000
    SUBROUTINE SPACEA;%                                                 22068000
         BEGIN AREA ~ (GETSPACE(12,0,0)+2 INX MEMORY)&10[8:38:10] END;% 22069000
    P(GETSPACE(128, 12,0)+1,STS,RCW,0,RDS,0,XCH,CFX,STF);               22070000
    P(0,0,0,0,0);%                                                      22071000
    STACKUSE ~ TRUE;%                                                   22072000
    SPACEA;%                                                            22073000
    WHILE (T ~ P(RRR) OR RRRMECH) ! READY DO%                           22074000
         BEGIN I ~ 0&TINU[U ~ (P(T EQV NOT READY,DUP,DUP,|,|)%          22075000
                   |@1000000000000).%                                   22076000
                   [3:6]][5:11:7]/@1000000000000;%                      22077000
              IF T < READY THEN%                                        22078000
                   BEGIN     COMMENT SOMETHING WENT NOT READY;%         22079000
                             READY ~ READY AND NOT I;%                  22080000
                        IF LABELTABLE[U] } 0 THEN%                      22081000
                          BEGIN%                                        22082000
         L:                  LABELTABLE[U] ~ @114;%                     22083000
                             MULTITABLE[U] ~ 0;%                        22084000
                          END;%                                         22085000
         EL:            RRRMECH ~ RRRMECH AND NOT I;%                   22086000
                   END OF NOT READY%                                    22087000
              ELSE BEGIN     COMMENT SOMETHING WENT READY;%             22088000
                        READY ~ READY OR I;%                            22089000
                        UNIT[U].[13:1] ~ 0;%                            22090000
                        IF LABELTABLE[U] ! @114 THEN%                   22091000
                             BEGIN RRRMECH ~ RRRMECH OR I;%             22092000
                                  IF LABELTABLE[U] = @214 THEN%         22093000
                                       BEGIN I ~ I AND NOT SAVEWORD;%   22094000
                                            GO TO L;%                   22095000
                                  END;%                                 22096000
                                  STARTIO(U);%                          22097000
                                  GO TO COMMON;%                        22098000
                             END;%                                      22099000
                        MULTITABLE[U] ~ RDCTABLE[U] ~ 0;%               22100000
                        IF (I AND SAVEWORD) ! 0 THEN%                   22101000
                             BEGIN RRRMECH ~ I AND SAVEWORD OR RRRMECH; 22102000
                                  GO TO COMMON;%                        22103000
                             END;%                                      22104000
                        GO S[UNIT[U].[1:4]];%                           22105000
         TAPE: P(WAITIO(@4200000000,5,U),DEL);%                         22106000
              IF (T ~ WAITIO(AREA INX @120540000000,@7500045,U)).%      22107000
                   [45:3] ! 0 THEN%                                     22108000
         NOTREADY: BEGIN READY ~ READY AND NOT I;%                      22109000
                        GO TO L;%                                       22110000
                   END;%                                                22111000
              IF MOD3IOS AND NOT T.[42:1] THEN  BEGIN                %AI22111500
                   DO UNTIL (T1~WAITIO(AREA INX @340000012,@55,U))!0;%AI22112000
              END ELSE T1~WAITIO(@4200000000,5,U);                   %AI22112500
                   IF T1.[45:3]!0 THEN GO TO NOTREADY;               %AI22113000
              DO UNTIL NOT (T1~WAITIO(@500000000,@165,U)) OR            22114000
                   (TRANSACTION[U]~0);%                                 22115000
              IF T1.[45:1] THEN GO TO NOTREADY;%                        22116000
              PRNTABLE[U]~0&(NOT T1)[1:43:1];%                          22117000
              IF T.[43:1] THEN%                                         22118000
                   BEGIN;STREAM(T~TINU[U],AREA);%                       22119000
                             BEGIN SI ~ LOC T; SI ~ SI+5;%              22120000
                                  DS ~ LIT "#"; DS ~ 3 CHR;%            22121000
                                  DS ~ 14 LIT " PARITY, RW/L~"%         22122000
                             END;%                                      22123000
         DIE:           SPOUT(AREA); SPACEA;%                           22124000
                        LABELTABLE[U] ~ @314;%                          22125000
                        GO TO EL;%                                      22126000
                   END;%                                                22127000
              IF T.[42:1] THEN%                                         22128000
                   BEGIN;STREAM(T~TINU[U],AREA);%                       22129000
                             BEGIN SI ~ LOC T; SI ~ SI+5;%              22130000
                                  DS ~ LIT "#"; DS ~ 3 CHR;%            22131000
                                  DS ~ 15 LIT " TAPE MK, RW/L~";%       22132000
                             END;%                                      22133000
                        GO TO DIE;%                                     22134000
                   END;%                                                22135000
              STREAM(Y~0:AREA,X~[T]);%                                  22136000
                   BEGIN DS ~ 8 LIT " LABEL  ";%                        22137000
                        SI ~ AREA; DI ~ DI-8;%                          22138000
                        IF 8 SC = DC THEN TALLY ~ 1;%                   22139000
                        AREA ~ TALLY;%                                  22140000
                        SI ~ SI+45; DI ~ LOC Y; DS ~ 5 OCT;%            22141000
                        SI ~ LOC AREA; DI ~ X; DS ~ WDS;%               22142000
                   END;%                                                22143000
              NT1 ~ P;%                                                 22144000
              IF T THEN PRNTABLE[U].[30:18]:=NT1 ELSE                   22145000
                  BEGIN STREAM(Y:=0:AREA,X:=[T]);                       22145050
                        BEGIN DS:=4 LIT "VOL1";                         22145100
                              SI:=AREA; DI:=DI-4;                       22145150
                              IF 4 SC=DC THEN TALLY:=1;                 22145200
                              AREA:=TALLY; SI:=SI+1;                    22145250
                              DI:=LOC Y; DS:=5 OCT;                     22145300
                              SI:=LOC AREA; DI:=X; DS:=WDS;             22145350
                        END;                                            22145400
                    NT1:=P;                                             22145450
                    IF T THEN BEGIN PRNTABLE[U].[30:18]:=NT1;           22145500
                              USASITAPE([AREA].[CF],T,1,U,1);           22145550
                              END;                                      22145600
                  END;                                                  22145650
              IF NOT T1.[43:1] THEN%                                    22146000
                   BEGIN IF T THEN%                                     22147000
                             BEGIN                                      22148000
                                  IF AREA[1] = "PBTMCP " THEN GO INPUT; 22156000
                                  IF AREA[4].[12:30] > DATE THEN%       22157000
                                  BEGIN IF RETMSG THEN                  22158000
                                        STREAM(T~TINU[U],A~[AREA[6]]);  22159000
                                        BEGIN SI~LOC T;SI~SI+5;DS~3 CHR;22160000
                                              DS~5 LIT " RET ";         22161000
                                        END ELSE GO TO INPUT;           22162000
         ACCEPT:                       T1 ~ GETSPACE(4,0,0)+2;%         22163000
                                       STREAM(A~[AREA[1]],T1);%         22164000
                                            BEGIN SI ~ A; SI ~ SI+40;%  22165000
                                                 DS ~ LIT "#";%         22166000
                                                 DS ~ 8 CHR; SI ~ A;%   22167000
                                                 2(DS ~ LIT " ";%       22168000
                                                 SI ~ SI+1; DS ~ 7 CHR);22169000
                                                 DS ~ LIT "~";%         22170000
                                            END;%                       22171000
                                       SPOUT(T1);%                      22172000
                                       GO TO INPUT;%                    22173000
                                  END ELSE%                             22174000
         SCRATCH:                      LABELTABLE[U] ~ 0;%              22175000
                             END ELSE GO TO SCRATCH;%                   22176000
                   END%                                                 22177000
              ELSE IF T THEN BEGIN%                                     22178000
         INPUT:    LABELTABLE[U] ~ AREA[2];%                            22179000
                   MULTITABLE[U] ~ AREA[1];%                            22180000
                   STREAM(A~[AREA[3]],B~[T]);%                          22181000
                        BEGIN SI ~ A; DS ~ 3 OCT;%                      22182000
                             DS ~ 5 OCT; DS ~ 2 OCT%                    22183000
                        END;%                                           22184000
                   RDCTABLE[U] ~ I&T1[24:31:17]&T[14:38:10];%           22185000
                   IF (MULTITABLE[U]="PBTMCP " OR                       22188000
                       MULTITABLE[U]="PUTMCP ") AND                     22188100
                        LABELTABLE[U] = "BACK-UP" THEN%                 22189000
                        BEGIN LABELTABLE[U] ~ @322212342546447;%        22190000
                        STREAM(A~TINU[U],PN~MULTITABLE[U]="PUTMCP ",    22191000
                               AREA);                                   22191100
                                  BEGIN SI ~ LOC A; SI ~ SI+5;%         22192000
                                       PN(DS~3 LIT"#CP"; JUMP OUT TO L);22192100
                                       DS~3 LIT"#LP"; L:                22192200
                                       DS~12 LIT" BACK-UP ON ";         22193000
                                       DS ~ 3 CHR; DS ~ LIT "~";%       22194000
                                  END;%                                 22195000
                             SPOUT(AREA); SPACEA;%                      22196000
                        END;%                                           22197000
                   END ELSE%                                            22198000
         PAPER:%                                                        22199000
         UNLD:          LABELTABLE[U] ~ @314;%                          22200000
              GO TO COMMON;%                                            22201000
         PRINTER:%                                                      22202000
              T ~ WAITIO(@6000000000,4,U).[45:1];%                      22203000
              UNIT[U].[16:2] ~ 0;%                                      22204000
              IF T THEN GO TO NOTREADY;%                                22205000
                                                                        22206000
              IF NOT PRINTWAIT(-U) THEN GO TO SCRATCH ELSE              22207000
              GO TO COMMON;%                                            22208000
         CARD:%                                                         22209000
              INDEPENDENTRUNNER(P(.CONTROLCARD),0&U[3:43:5]);%          22210000
              RRRMECH ~ RRRMECH OR I;%                                  22211000
              LABELTABLE[U] ~ -@14;%                                    22212000
              GO TO COMMON;%                                            22213000
         PUNCH: STARTIO(U); IF UNIT[U].[15:3]=0 THEN                    22213500
              IF PRINTWAIT(-U) THEN GO TO COMMON; GO TO SCRATCH;        22213600
         DRUM:%                                                         22214000
         DISK:%                                                         22215000
         SPO:%                                                          22216000
         PAPERPUNCH:%                                                   22218000
         DATACOM:%                                                      22219000
              STARTIO(U);%                                              22220000
              GO TO SCRATCH;%                                           22221000
         COMMON:   END OF READY;%                                       22222000
         END;%                                                          22223000
    STATUSBIT ~ TRUE;%                                                  22224000
    FORGETSPACE(AREA.[33:15]);%                                         22225000
    KILL([RCW]);%                                                       22226000
    END STATUS;%                                                        22227000
    SAVE BOOLEAN PROCEDURE OLAY(LOC);%                                  22228000
    VALUE LOC;  REAL LOC;%                                              22229000
    BEGIN REAL LINK, MOM, FRONT, BACK, CHAR, BS, STACK, S, SB,%         22230000
         T, X, DESC, DISK, IOD, MIX, JOBKILLED, MIXUP, SEGNO;%          22231000
         ARRAY NAME SEGDICT;%                                           22232000
         REAL RESULT=+1;%                                               22233000
         ARRAY SPRT[*];                                                 22234000
         REAL CORE, CUED;  REAL INITCW=MIXUP;                           22235000
         LABEL AROUND, CODE, BACKAGAIN, MCP, INTRINSIC;%                22236000
         LABEL AGAIN;                                                   22236100
         BOOLEAN SUBROUTINE AWAKEN;%                                    22237000
         BEGIN COMMENT AWAKEN CHECKS TO SEE IF WE HAVE HALTED           22238000
              THE JOB ON PROCESSOR 2.  IF SO, IT RESTARTS THE           22239000
              TIMING FOR HIM, AND CALLS "HALT" TO CHECK INTERRUPTS;%    22240000
              IF JOBKILLED THEN%                                        22241000
              BEGIN PROCTIME[P2MIX] ~ *P(DUP)-CLOCK-P(RTR);%            22242000
                   JOBKILLED ~ FALSE;  OLAY ~ RESULT OR 2;%             22243000
                   HALT;  NOPROCESSTOG ~ NOPROCESSTOG-1;%               22244000
              END;%                                                     22245000
         AWAKEN ~ RESULT END;%                                          22246000
         SUBROUTINE STOP;%                                              22247000
         BEGIN COMMENT STOP HALTS THE JOB ON PROCESSOR 2, AND           22248000
              CLOCKS HIM OFF.  IT SETS JOBKILLED SO THAT AWAKEN         22249000
              CAN DO ITS DIRTY WORK BEFORE RETURNING;%                  22250000
              JOBKILLED ~ TRUE;  P(HP2);%                               22251000
              PROCTIME[P2MIX] ~ *P(DUP)+CLOCK+P(RTR);%                  22252000
         END STOPPER;%                                                  22253000
         SUBROUTINE CODEOVERLAY;%                                       22254000
         BEGIN COMMENT CODEOVERLAY HANDLES ALL CASES OF MARKING         22255000
              A NORMAL-STATE SEGMENT AS NOT-PRESENT.  IT DOES THIS      22256000
              A SINGLE PRT AND STACK AT A TIME, AND IS ONLY CALLED      22257000
              REPEATEDLY FOR RE-ENTRANT CODE OR INTRINSICS;%            22258000
              IF CHAR THEN S ~ M[SB ~ M[S].[FF]].[FF] ELSE S ~ S-1;%    22259000
              SPRT ~ PRT[MIX,10];%                                      22260000
              IF SPRT[X].[2:1] THEN BEGIN%                              22261000
    % NEED TO DO PRT AND STACK SEARCH ONLY IF PRESENT IN THIS PRT       22262000
                   DO UNTIL (X ~ (SPRT[X] ~ (*P(DUP))&0[2:2:1]%         22263000
                             &(SPRT[X].[CF]-FRONT)[CTC]).[6:12])}2048;% 22264000
    AROUND:%                                                            22265000
                   WHILE (STACK ~ HUNT(BS).[CF])!S DO%                  22266000
                   BEGIN CORE ~ (DESC ~ NFLAG(M[STACK])).[CF];%         22267000
                        IF CORE } FRONT AND CORE < BACK THEN            22268000
                        IF DESC.[1:2]!0 THEN%                           22269000
                        IF DESC.[3:1] THEN%                             22270000
    % DESCRIPTOR -- INSERT OFFSET AND RESET P-BIT                       22271000
                          M[STACK] ~ FLAG(DESC&0[2:2:1]%                22272000
                                          &(CORE-FRONT)[CTC])%          22273000
                        ELSE BEGIN%                                     22274000
    % CONTROL WORD (RCW) -- UNFLAG IN STACK, PUT OFFSET INTO            22275000
    %    CORRESPONDING MSCW, AND MOM INTO RCW.[CF]                      22276000
                             M[X ~ DESC.[FF]] ~%                        22277000
                                  (*P(DUP))&(CORE-FRONT)[CTC];%         22278000
                             M[STACK] ~ DESC&SEGNO[CTC];%               22279000
                        END;%                                           22280000
                        BS ~ STACK+1;%                                  22281000
                   END;%                                                22282000
                   IF CHAR AND (STACK<SB) THEN%                         22283000
                   BEGIN BS ~ SB;  S ~ HUNT(BS+1).[CF];  GO AROUND END; 22284000
                   IF P(SPRT[19],TOP) THEN P(DEL) ELSE               %DS22284100
                   BEGIN CORE:=POLISH.[CF];                          %DS22284200
                        IF CORE < FRONT OR CORE } BACK THEN             22284300
                         ELSE SPRT[19]:=(*P(DUP))&0[2:2:1]           %DS22284400
                                        &(CORE-FRONT)[CTC];          %DS22284500
                   END;                                              %DS22284600
$INCLUDE 22284701, IF STATISTICS;                                       22284699
                   CODEOLAYS[MIX]:=*P(DUP)+1;                       %R6322284700
              END OF PRESENT IN PRT CASE;%                              22285000
         END OF CODEOVERLAY;%                                           22286000
         COMMENT   OLAY HANDLES OVERLAYS.  THERE ARE 3 CLASSES          22287000
              OF THINGS WHICH MAY BE OVERLAID:                          22288000
              1)   OBJECT PROGRAM DATA SEGMENTS                         22289000
              2)   OBJECT PROGRAM CODE SEGMENTS                         22290000
         AND  3)   MCP (NON-SAVE) PROCEDURES.                           22291000
              EACH OF THESE CLASSES GETS SPECIAL HANDLING,              22292000
              WHICH WILL BE DESCRIBED AS WE COME TO IT;                 22293000
    % THIS CODE IS COMMON TO ALL CLASSES AND ALL CASES                  22294000
         LINK ~ M[LOC];  MOM ~ M[LOC+1];%                               22295000
         FRONT := LOC + 2; BACK := LINK.[CF];                           22296000
         IF (MIX ~ LINK.[9:6])=0 THEN GO TO MCP;%                       22297000
    % <MIX>=0 AND NON-SAVE MEANS MCP PROCEDURE OR INTRINSIC             22298000
         IF MIX=P2MIX THEN STOP;%                                       22299000
         CHAR ~ (INITCW ~ PRT[MIX,8]).[32:1];%                          22300000
         S ~ INITCW.[CF];  BS ~ PRT[MIX,10].[FF];%                      22301000
    % CHAR IS CWMF,  S IS TOP-OF-STACK,  BS IS BASE OF STACK            22302000
         IF LINK.[3:6]=1 THEN GO TO CODE;%                              22303000
    % TYPE=1 MEANS PROGRAM -- ONLY ALTERNATIVE IS DATA                  22304000
         IF CHAR THEN%                                                  22305000
    % SPECIAL CHECKS FOR ADDRESS SAVED IN CHARACTER MODE                22306000
         BEGIN CHAR:=(((T:=M[S-1].[CF]) } FRONT AND T < BACK) OR        22307000
    % M-REGISTER FROM ICW (SOURCE ADDRESS)                              22308000
                   ((T:=M[S-2].[FF])} FRONT AND T < BACK));             22309000
    % S-REGISTER FROM ILCW (DESTINATION ADDRESS)                        22310000
              IF NOT CHAR THEN%                                         22311000
              BEGIN X ~ M[S ~ M[S].[FF]].[FF]+1;%                       22312000
    % M[S].[FF] IS ADDRESS OF RCW,  M[RCW].[FF] IS ADDRESS OF MSCW      22313000
                   DO CHAR ~ ((T ~ M[S ~ S-1].[CF])}FRONT               22314000
                        AND T < BACK) UNTIL (S { X) OR CHAR;            22315000
    % SEARCH THROUGH STREAM LOCALS AND PARAMETERS FOR ADDRESSES         22316000
                   S ~ X;%                                              22317000
              END;%                                                     22318000
         END;%                                                          22319000
         IF CHAR THEN P(AWAKEN,SSN,RTN);   %TELL BREAKOUT ABOUT IT      22320000
    % CANNOT OVERLAY IF MAY BE ADDRESSES IN CHAR MODE STACK             22321000
          IOD~M[MOM].[8:10];                                            22322000
          IF (DISK~MOM.[FF])!0 THEN MOM.[FF]~0 ELSE                     22322100
          DISK~DISKSPACE(IOD,MIX,M[MOM].[6:1]);IF DISK<0 THEN           22322200
    % NO OVERLAY DISK, SO CANNOT OVERLAY AT THIS TIME                   22323000
           P(AWAKEN, RTN);%                                             22324000
    % IF WE REACH THIS POINT, WE CAN AND WILL OVERLAY THE AREA          22325000
         M[FRONT-1] := MIX & IOD[CTF];                                  22325050
$INCLUDE 22325301, IF STATISTICS;                                       22325199
         DATAOLAYS[MIX]:=*P(DUP)+1;                                 %R6322325200
         COUNTUP(21+(DATADDRESS(MIX,DISK) GTR 0),(IOD+29) DIV 30);      22325300
         IF M[MOM].[3:3]!7 THEN                                         22325400
         IF (CUED ~ IOQUEAVAIL!0) THEN%                                 22326000
    % START DISK WRITE IF QUEUE SPACE AVAILABLE TO GET OVERLAP          22327000
           DISKIO(IOD, FRONT-1, IOD, DATADDRESS(MIX, DISK));            22328000
                                                                        22328100
         IF (S ~ S-1)>MOM THEN IF MOM>BS THEN BS ~ MOM+1;%              22329000
    % IF MOTHER IS IN STACK, ONLY SEARCH ABOVE IT                       22330000
         WHILE (STACK ~ HUNT(BS).[CF])!S DO%                            22331000
         BEGIN IF (DESC := NFLAG(M[STACK])).[1:2]=1 THEN                22332000
    % ONLY WORRY ABOUT DATA DESCRIPTORS WHICH ARE PRESENT               22333000
              IF DESC.[FF]=MOM THEN%                                    22334000
    % THIS ONE DEMANDS ACTION -- IT POINTS INTO OUR ARRAY               22335000
                   IF DESC.[8:10]=0 THEN%                               22336000
    % NAME DESCRIPTOR -- PUT IN OFFSET AND RESET P-BIT                  22337000
                     M[STACK] ~ FLAG((DESC.[CF]-FRONT)&MOM[CTF])%       22338000
                   ELSE%                                                22339000
    % NORMAL ROW DESCRIPTOR -- ZERO CORE FIELD AND RESET P-BIT          22340000
                     M[STACK] ~ FLAG(0&DESC[8:8:25]);%                  22341000
              BS ~ STACK+1;%                                            22342000
         END;%                                                          22343000
    % NOW PUT DISK ADDRESS IN MOTHER AND TURN OFF HER P-BIT             22344000
         M[MOM] := (*P(DUP)) & DISK[CTC] & 0[2:47:1];                   22345000
         P(AWAKEN, DEL);%                                               22346000
         IF (BS := M[MOM].[3:5]!28) THEN                                22346500
         IF NOT CUED THEN%                                              22347000
           DISKIO(IOD, FRONT-1, IOD, DATADDRESS(MIX, DISK));            22348000
                                                                        22348100
         IF BS THEN SNOOZE(0, [IOD], IOMASK);                           22349000
         IF M[MOM].[3:3]=6 THEN M[MOM].[5:1]~1;                         22349100
         FORGETSPACE(FRONT);%                                           22350000
         P(TRUE, RTN);%                                                 22351000
    CODE:%                                                              22352000
    % OBJECT PROGRAM CODE TO BE OVERLAID                                22353000
         IF (T ~ M[S].[CF])}FRONT AND T{BACK THEN%                      22354000
    % CANNOT OVERLAY NORMAL STATE SEGMENT HE WILL RETURN TO             22355000
           P(AWAKEN, RTN);%                                             22356000
         IF (MIXUP ~ (SEGDICT ~ PRT[MIX,4]).[FF])!0 THEN%               22357000
    % RE-ENTRANT CODE TO BE OVERLAID -- CHECK OTHER USERS, TOO          22358000
         BEGIN MIXUP ~ MIXUP.[39:6];%                                   22359000
              DO BEGIN%                                                 22360000
                   IF MIXUP=P2MIX THEN STOP;%                           22361000
    % STOP OTHER USER OF THIS CODE IF RUNNING ON PROCESSOR 2            22362000
                   IF (T ~ M[PRT[MIXUP,8]].[CF])}FRONT AND T{BACK%      22363000
                     THEN P(AWAKEN, RTN);%                              22364000
    % SAME CRITERIA APPLY TO ALL USERS OF THIS CODE                     22365000
              END UNTIL (MIXUP ~ PRT[MIXUP,4].[24:6])=@77;%             22366000
    % CHECK ALL USERS ON MIX-INDEX LINKED LIST                          22367000
         END;%                                                          22368000
    % IF WE REACH THIS POINT, WE CAN AND WILL OVERLAY THE AREA          22369000
$ INCLUDE 22371001,IF AUXMEM;                                           22369999
         IF (SEGDICT[SEGNO:=MOM.[CF]].[4:2])=2 THEN                     22370000
    % TO GO TO AUXILIARY MEMORY, HAS NOT YET BEEN WRITTEN THERE         22370100
         IF (DISK := AUXILIARYSPACE(MOM.[FF]))>0 THEN                   22370200
         BEGIN M[FRONT-1] := NABS(MIX & MOM[FTF]                        22370300
                                      & SEGDICT[SEGNO][3:33:15]);       22370400
              SEGDICT[SEGNO] := (*P(DUP)) & 1[5:47:1] & DISK[CTC];      22370500
              AUXCODE[MIX] := *P(DUP)+MOM.[23:6]+1;                     22370600
              DISK := CODEADDRESS(MIX, SEGDICT[SEGNO]);                 22370700
$INCLUDE 22370711, IF STATISTICS;                                       22370709
         COUNTUP(19+(DISK GTR 0),(MOM.[FF]+29) DIV 30);                 22370710
              IF (CUED := IOQUEAVAIL!0) THEN                            22370800
                DISKIO(IOD, FRONT-1, MOM.[FF], DISK);                   22370900
         END;                                                           22371000
$ INCLUDE 22371101,IF AUXMEM;                                           22371099
         SEGDICT[SEGNO].[3:1]:=1;                                       22371100
    BACKAGAIN::                                                         22371200
$ OMIT 22371221,IF AUXMEM;                                              22371210
    X~SEGDICT[SEGNO~MOM].[8:10];CODEOVERLAY;                            22371220
$INCLUDE 22371301, IF AUXMEM;                                           22371299
         X:=SEGDICT[SEGNO].[8:10]; CODEOVERLAY;                         22371300
         IF MIXUP THEN%                                                 22372000
    % RE-ENTRANT CODE BEING OVERLAID -- MUST FIX ALL STACKS AND PRTS    22373000
         IF (MIX ~ PRT[MIX,4].[24:6])!@77 THEN%                         22374000
    % SET UP CHAR,  S,  AND BS FOR NEXT USERS STACK                     22375000
         BEGIN CHAR ~ (S ~ PRT[MIX,8]).[32:1];%                         22376000
              S ~ S INX 0;  BS ~ PRT[MIX,10].[FF];%                     22377000
    % GO DO STACK SEARCH AND PRT FIX-UP FOR ANOTHER USER                22378000
              GO TO BACKAGAIN;%                                         22379000
         END;%                                                          22380000
$INCLUDE 22380051, IF AUXMEM;                                           22380049
         P(AWAKEN,DEL);                                                 22380050
$ INCLUDE 22380501,IF AUXMEM;                                           22380099
         IF DISK.[1:1] THEN                                             22380100
         BEGIN IF NOT CUED THEN                                         22380200
                  DISKIO(IOD, FRONT-1, MOM.[FF], DISK);                 22380300
              IF (IOD AND IOMASK)=0 THEN SNOOZE(0, [IOD], IOMASK);      22380400
         END;                                                           22380500
$INCLUDE 22381001, IF AUXMEM;                                           22380999
         SEGDICT[SEGNO]:=(*P(DUP))&MOM[FTF]&0[3:3:1];                   22381000
    % FIX UP SEGMENT DICTIONARY ENTRY LAST OF ALL                       22382000
$INCLUDE 22383001, IF AUXMEM;                                           22382999
         FORGETSPACE(FRONT); P(TRUE,RTN);                               22383000
$OMIT 22383051, IF AUXMEM;                                              22383049
         SEGDICT[MOM]~(*P(DUP))&MOM[FTF];%                              22383050
$OMIT 22383101, IF AUXMEM;                                              22383099
         FORGETSPACE(FRONT); P(AWAKEN,DEL,TRUE,RTN);                    22383100
    % NOW WAS THAT NOT TRIVIALITY PERSONIFIED...                        22384000
    MCP:%                                                               22385000
         IF P(LINK.[3:6],DUP)=7 OR P(XCH)=13 THEN GO TO INTRINSIC;      22386000
         X ~ -2;  BS ~ (P(0,RDF)).[FF];%                                22387000
    % SET BS TO POINT AT RCW FOR CALL ON OLAY                           22388000
         DO BEGIN%                                                      22389000
              OLAY ~ NOT(S ~ ((CORE ~ (T ~ M[BS]).[CF]){BACK            22390000
                        AND CORE}FRONT));%                              22391000
    % S IS TRUE IF THE RCW POINTS TO THE ROUTINE TO BE OVERLAID         22392000
              BS ~ T.[FF];%                                             22393000
    % POINT T TO CORRESPONDING MSCW                                     22394000
              WHILE (T ~ M[BS]).[16:1] DO BS ~ T.[FF];%                 22395000
    % RUN DOWN STACK OF MSCWS UNTIL NOT MSFF                            22396000
              IF (BS ~ T.[FF]){64 THEN                                  22397000
    % END OF STACK -- THIS IS RATIONALE FOR OBSCURE USE OF "P(0,STF)"   22398000
                BS ~ BED[X ~ X+2].[FF];%                                22399000
         END UNTIL (X>JOBNUM) OR S;%                                    22400000
         IF RESULT THEN%                                                22401000
         BEGIN M[MOM] ~ (*P(DUP))&(*P(.ESPBIT))[CTC];%                  22402000
              FORGETSPACE(FRONT);%                                      22403000
         END;%                                                          22404000
         P(RESULT AND 1, RTN);%                                         22405000
    INTRINSIC:%                                                         22406000
         FOR MIX~1 STEP 1 UNTIL MIXMAX DO%                              22407000
         IF INTABLEROW[MIX]!0 THEN%                                     22408000
         BEGIN IF MIX=P2MIX THEN STOP;%                                 22409000
              IF (T ~ M[PRT[MIX,8]].[CF])}FRONT AND T{BACK%             22410000
                THEN P(AWAKEN, RTN);%                                   22411000
         END;%                                                          22412000
         FOR MIX~1 STEP 1 UNTIL MIXMAX DO%                              22413000
         IF INTABLEROW[MIX]!0 THEN                                      22413010
         IF LINK.[3:6]=13 THEN %TYPE 13 INTRNSC                         22413100
         BEGIN CHAR~P(PRT[MIX,8],DUP).[32:1];                           22413200
               S~P INX 0; BS~PRT[MIX,10].[FF];                          22413300
         IF CHAR THEN S~M[SB~M[S].[FF]].[FF] ELSE S~S-1;                22413310
         AGAIN: WHILE (STACK~HUNT(BS).[CF])!S DO                        22413400
                    BEGIN CORE~(DESC~NFLAG(M[STACK])).[CF];%            22413410
                    IF CORE}FRONT AND CORE<BACK THEN%                   22413420
                        IF DESC.[1:3]=7 THEN%                           22413430
                         M[STACK]~FLAG(DESC&0[2:2:1]&(MOM.[8:10])[CTC]) 22413440
                        ELSE                                            22413450
                        BEGIN M[DESC.[FF]]~(*P(DUP))&(CORE-FRONT)[CTC]; 22413460
                              M[STACK]~DESC&(MOM.[8:10])[CTC]&          22413470
                                       1[33:47:1];                      22413480
                        END;                                            22413485
                    BS~STACK+1;                                         22413490
                    END;                                                22413495
              IF CHAR AND (STACK<SB) THEN%                              22413500
              BEGIN BS~SB; S~HUNT(BS+1).[CF]; GO AGAIN; END;            22413510
         END ELSE                                                       22413520
         BEGIN SEGNO ~ MOM.[8:10]-1;%                                   22415000
              STREAM(A ~ SEGNO AND 3: T ~ [INTABLE[MIX,SEGNO DIV 4]]);  22416000
              BEGIN SI ~ T;  SI ~ SI+A;  SI ~ SI+A;  DI ~ LOC A;%       22417000
                   DI ~ DI+6;  DS ~ 2 CHR;  END STREAMING;%             22418000
              IF (SEGNO ~ POLISH)!0 THEN%                               22419000
              BEGIN CHAR ~ P(PRT[MIX,8], DUP).[32:1];%                  22420000
                   S ~ POLISH INX 0;  BS ~ PRT[MIX,10].[FF];%           22421000
                   SEGDICT ~ PRT[MIX,4];%                               22422000
                   X ~ SEGDICT[SEGNO].[8:10];  CODEOVERLAY;%            22423000
                   SEGDICT[SEGNO] ~ (*P(DUP))&MOM[FTF];%                22424000
              END;%                                                     22425000
         END;%                                                          22426000
         INTRNSC[MOM.[8:10]] ~ (*P(DUP))&MOM[FTC];%                     22427000
         FORGETSPACE(FRONT);%                                           22428000
         P(AWAKEN, DEL, TRUE, RTN);%                                    22429000
    END OF OVERLAY;%    REVISION OF MAY 31, 1967...                     22430000
    PROCEDURE CHANGEABORT(X);  VALUE X;  REAL X;%                       22900000
    BEGIN ARRAY A[*], B[*];%                                            22901000
         REAL J, T;%                                                    22902000
                                                                        22903000
         A~[M[SPACE(210)]]&210[8:38:10];                                22904000
         SLEEP([TOGLE], ABORTMASK);%                                    22905000
         ABORTABLE ~ FALSE;%                                            22906000
         DISKWAIT(-A.[CF],210,ESPDISKTOP+1);                            22907000
         WHILE (A[0] ~ XCLOCK+P(RTR))}5184000 DO MIDNIGHT;%             22909000
         A[1] ~ DATE;%                                                  22910000
         J ~ 3|P1MIX;%                                                  22911000
         A[J] ~ A[J+1] ~ A[J+2] ~ 0;%                                   22912000
         B~JARROW[P1MIX];   %CANT WATCH JAR AND LOSE CONTROL, TOO.      22913000
         A[J+90] ~ B[0];                                                22914000
         A[J+91] ~ B[1];                                                22915000
         A[J+92] ~ X&B[5][1:25:23];                                     22916000
         A[180+P1MIX]~USERCODE[P1MIX];                                  22917000
         DISKWAIT(A.[CF],210,ESPDISKTOP+1);                             22918000
         ABORTABLE ~ TRUE;%                                             22920000
         FORGETSPACE(A);%                                               22921000
    END;%                                                               22922000
$INCLUDE 23405001, IF DATACOM AND NOT INQUIRY;                          22999999
PROCEDURE STATIONMESSAGEWRITER(PARAMETER);                              23000000
VALUE PARAMETER; REAL PARAMETER;                                        23001000
COMMENT                                                                 23002000
    THIS PROCEDURE HANDLES ALL B487 OUTPUT.  BUFFER SIZE NEED NOT BE    23003000
KNOWN AS THE PROCEDURE LEARNS FROM THE RESULT DESCRIPTOR HOW MUCH WAS   23004000
WRITEN.   A MESSAGE WILL BE OUTPUT ON ONE AND ONLY ONE STATION AS THE   23005000
OUTPUT METHOD IS DESTRUCTIVE.                                           23006000
    THE MAXIMUM MESSAGE SIZE HANDLED IS 4095 WORDS. THIS CAN BE         23007000
INCREASED IF YOU REALLY THINK IT IS NECESSARY.  THE OUTPUT IS           23008000
TRANSPARENT, I.E. NO LINE CONTROL IS ADDED.                             23009000
    STATIONMESSAGEHOLDER IS A CIRCULAR QUEUE OF THE MESSAGES TO BE      23010000
WRITEN.  THESE MESSAGES MUST BE RANKED BY THEIR 9:9 FIELD.              23011000
STATIONMESSAGEWRITER TAKES THEM IN ORDER BY THESE SUB-GROUPS. THE       23012000
SECOND STORAGE LINK IS USED AS THE QUEUE WORD.                          23013000
    THE FORMAT FOR THE SECOND STORAGE LINK IS:                          23014000
         [0:1]     FLAG BIT=0                                           23023000
         [1:1]     SIGN BIT, =1 IF PART OF THE MESSAGE HAS BEEN OUTPUT  23025000
         [2:1]     .......... 1 IF PROGRAM OUTPUT OTHERWISE 0.          23025100
         [3:1]     .......... MESSAGE COMPLETED (TIME TO CHECK BREAK)   23025200
         [4:5]     .......... MIX IF MIX MESSAGE ELSE 0                 23026000
         [9:4]     .......... TU ADDRESS                                23027000
         [13:1]    .......... 0                                         23028000
         [14:4]    .......... BUFFER ADDRESS                            23029000
         [18:15]   .......... BACK LINK                                 23030000
         [33:15]   .......... STATION MESSAGE LINK ;                    23035000
BEGIN    %1                                                             23037000
DEFINE                                                                  23038000
         STACURR=  STATION[STA.[14:4],STA.[9:4]]#,                      23039000
         STANEXT=  STATION[STA.[18:4],STA.[4:4]]#,                      23040000
%                                                                       23041000
         NOTRDY =  [30:1]#,                                             23042000
%                                                                       23043000
         FIRSTTIME= MESS>0#,                                            23046000
         WRITEN =  [29:1]#,                                             23048000
         BREAK = [26:1]#                                                23049000
         ;                                                              23050000
                                                                        23051000
%                                                                       23053000
LABEL                                                                   23054000
DOIO,DCW,                                                               23054100
EGRESS,FORGET,                                                          23054200
$ INCLUDE 23054301, IF RJE;                                             23054299
TOUT,RTRY,                                                              23054300
FINDTUSTA, BUMPCOUNT, FORGETMESS, FORGETALL,TURNOFFSTATIONS,            23055000
         SKIPIT,                                                        23055100
         LOOPEND,ERRIO;                                                 23056000
REAL                                                                    23057000
RCW=+0, BUFF=+1, STA=+2, TUSTA=+3, MESSADDR=+4,                         23058000
%                                                                       23059000
MESS=+5, RD=+6, FORGETMESSTOG=+7, RA=+8, HALF=+9;                       23060000
REAL FORGETEMALL=+10;                                                   23060100
REAL MIXMESSADR=RA, MIXMESS=HALF, ADDR=RD;                              23060200
    SUBROUTINE PERFORMIO;  %DOES IO FROM BUFF WITH RD                   23061100
    BEGIN RD:=BUFF INX (@0400000000000000 OR TUSTA);                    23061200
         IOREQUEST(NABS(RD&@113[25:40:8]),RD,[RD]&30[12:42:6]);         23061300
         SLEEP([RD],IOMASK);                                            23061400
    END;                                                                23061500
IF PARAMETER =0 THEN                                                    23063000
BEGIN                                                                   23064000
P(GETSPACE(128, 12,0)+1,STS,PARAMETER,RCW,0,RDS,0,XCH,CFX,STF);         23065000
STACKUSE ~ TRUE;                                                        23066000
END;                                                                    23067000
 P(0,0,0,0,0,0,0,0,0);                                                  23068000
    P(0);                                                               23069000
%                                                                       23070000
DO                                                                      23071000
    BEGIN     %2                                                        23072000
    IF NOT EMPTYSMQ THEN                                                23073000
         BEGIN     %3                                                   23074000
%                                                                       23075000
         IF PARAMETER ! 0 THEN                                          23076000
              BEGIN                                                     23077000
              STA ~                                                     23078900
              TUSTA~0&(PARAMETER.[9:9] AND @757)[9:39:9];               23079000
$ INCLUDE 23079031, IF RJE;                                             23079009
              IF GET(STA) THEN                                          23079010
              IF P(STATIONMESSAGEHOLDER,STA,LLL,0,INX,.MESSADDR,STD)    23079020
              .[9:9]=STA.[9:9] THEN GO TO FORGETALL ELSE GO TO EGRESS;  23079030
              P(WAITIO(STA&1[18:47:1], @777700000,30),DEL);             23079100
              P(WAITIO(STA&1[18:47:1], @777700000,30),DEL);             23079200
              FORGETEMALL~FORGETMESSTOG~TRUE;                           23080000
              STACURR.[2:1] := 0;                                       23080100
              GO TO FINDTUSTA;                                          23081000
              END;                                                      23082000
         TUSTA~ TUSTA OR @7777700000;                                   23083000
FINDTUSTA:                                                              23128000
              IF EMPTYSMQ THEN GO LOOPEND;                              23129000
              MESSADDR~ STATIONMESSAGEHOLDER;                           23129100
              MESS~ P(MESSADDR,TUSTA,LLL,0,INX,                         23130000
                   .MESSADDR,STD);                                      23131000
              IF (STA~ TUSTA~ 0&MESS[9:9:9]).[9:9]=@777 THEN            23132000
                   BEGIN                                                23133000
                   SMWSTOPPED~ TRUE;                                    23133500
                   GO LOOPEND;                                          23134000
                   END;                                                 23134500
              BUFF~ MESSADDR+1;                                         23134510
              IF GET(STA).[28:1] THEN                                   23134600
                   BEGIN                                                23134610
                   STACURR := STACURR & 0[1:46:2]&0[29:47:1];           23134620
                   FORGETEMALL := FORGETMESSTOG := TRUE;                23134630
                   GO TO FORGETMESS;                                    23134640
                   END;                                                 23134650
              IF STANOTINUSE AND (STA OR NOT STA.[44:1]) THEN           23135000
                   BEGIN                                                23135500
                   IF STA.BREAK OR FORGETMESSTOG THEN                   23136000
                        BEGIN                                           23137000
                        IF MESS>0 THEN                                  23138000
                             FORGETMESSTOG~ TRUE;                       23139000
                        GO FORGETMESS;                                  23144000
                        END;                                            23144100
                   IF FIRSTTIME THEN                                    23145000
                        BEGIN                                           23145500
$ INCLUDE 23149001, IF RJE;                                             23145999
                             IF STA THEN IF STA.[45:1] THEN             23146000
                             BEGIN STREAM(N:=NT1:=STA.[18:4],BUFF);     23146100
                                   BEGIN SI:=LOC N; DI:=DI+4; DS:=DEC;  23146200
                                   END STREAM;                          23146300
                                   IF (NT1:=NT1+1)=10 THEN NT1:=0;      23146400
                                   STACURR.[18:4]:=NT1;                 23146500
                             END ELSE  %NOT SELECTED SEND OUT ENQ       23146600
                             BEGIN STREAM(B:=BUFF:=[MESS] INX 0);       23146700
                                   DS:=2 LIT "%~";                      23147000
TOUT:                             PERFORMIO;                            23147400
                                  IF (RD.[23:10] AND @464)!0 THEN       23147500
                                  PERFORMIO;  %QUIRK OF SYNCH ADAPT     23147600
                                  STACURR:=(*P(DUP))&1[29:47:1]         23147700
                                                    &1[45:47:1];        23147750
                                  RD:=CLOCK+P(RTR)+64; %WAIT A SECOND   23147800
                                  COMPLEXSLEEP((CLOCK+P(RTR)>RD) OR     23147850
                                               NOT STACURR.[29:1]);     23147900
                                  IF (STA:=STACURR).[29:1] THEN         23147950
                                  BEGIN STACURR.[42:2]:=NT5:=           23148000
                                                        STA.[42:2]+1;   23148050
                                       IF NT5=4 THEN %TOO MANY RETRIES  23148100
                                       BEGIN INQUPT(@100000000&         23148150
                                              STA[9:9:9]); GO LOOPEND;  23148200
                                       END ELSE GO TO TOUT;             23148250
                                  END ELSE                              23148300
                                  GO TO LOOPEND;                        23148500
                             END ELSE                                   23149000
                             IF P(ILL,TUSTA,LLL,DEL).[9:9]=TUSTA.[9:9]  23149100
                                                                   THEN 23149200
                                  BEGIN                                 23149300
                                       GO TO DCW;                       23149700
                                  END;                                  23149800
$ INCLUDE 23149851, IF RJE;                                             23149849
RTRY:                                                                   23149850
                             M[MESSADDR]~NABS(MESS);                    23149900
                             STACURR~ NABS(STACURR);                    23150000
$ INCLUDE 23152601, IF RJE;                                             23150999
                        END ELSE IF STA THEN                            23151000
                        IF STA<0 THEN BUFF:=BUFF INX (MESS.[3:6]) ELSE  23151100
                        IF STA.[31:1] THEN                              23151200
                        BEGIN STACURR.[31:1]:=0; GO RTRY; END ELSE      23151300
                        BEGIN STACURR.[32:1]:=HALF:=M[MESS].[9:9]       23151400
                             = TUSTA.[9:9];                             23151500
                             IF HALF THEN GO TO FORGETMESS;             23151600
                             STREAM(H:=HALF:=STA.[44:1],                23151700
                                    B:=BUFF:=[MESS] INX 0);             23151800
                             BEGIN H(DS:=LIT "$"; JUMP OUT TO EOT);     23151900
                                  DS:=LIT "&";  %ACK                    23152000
EOT:                              DS:=LIT "~";                          23152100
                             END;                                       23152200
                             PERFORMIO;                                 23152300
                             STACURR:=(*P(DUP))&1[29:47:1]&             23152400
                                      (1-HALF)[45:47:1];                23152500
                             GO TO FORGETMESS;                          23152600
                        END ELSE                                        23152700
                             IF MESS.[3:1] THEN GO FORGETMESS;          23153000
                   DOIO:                                                23169100
                        PERFORMIO;                                      23170000
                        IF(RD.[23:10]AND@0464)=0 THEN %IO OK            23176000
                             BEGIN                                      23177000
                             STACURR.WRITEN ~ TRUE ;                    23178000
                             IF NOT RD.[25:1] THEN                      23178100
                                  BEGIN IF NOT STA THEN                 23178200
                                  M[MESSADDR].[3:1]~ 1;                 23178300
                                  GO LOOPEND;                           23178350
                                  END;                                  23178400
                             IF(HALF:=((RD:=RD.[CF])-BUFF) MOD 7)= 1    23179000
                             THEN RD:=RD-1; RA:=M[BUFF-2].[CF]-RD;      23179050
$ INCLUDE 23179071, IF RJE;                                             23179059
                             IF STA THEN M[MESSADDR]:=NABS(MESS)&       23179060
                                (RD-(MESSADDR+1))[3:42:6] ELSE          23179070
                             IF HALF LEQ 1 THEN                         23179100
                                  STREAM(W~ RA,W1~ RA DIV 64,S~ RD,     23179150
                                       D~ BUFF);                        23179200
                                      BEGIN                             23179250
                                      SI~ S;                            23179300
                                      DS~ W WDS; W1(DS~63 WDS;DS~ WDS); 23179350
                                      END                               23179400
                             ELSE                                       23179450
                                  STREAM(C~RA~RA|8,C1~RA~ RA DIV 64,    23179500
                                       C2~ RA DIV 64,S~ RD,             23179550
                                       D~ BUFF);                        23179600
                                         BEGIN                          23179650
                                         SI~S; SI~ SI-4;                23179700
                                         DS~ C CHR;                     23179750
                                         C1(DS~ 63 CHR; DS~ CHR);       23179800
                                         C2(63(DS~63 CHR; DS~CHR);      23179850
                                         DS~ 63 CHR; DS~ CHR);          23179900
                                         END;                           23179950
                                  GO LOOPEND;                           23179960
                             END                                        23180000
                        ELSE                                            23181000
                             BEGIN                                      23181100
                             RD~ RD.[23:10];                            23181200
                             GO TO ERRIO;                               23182000
                             END;                                       23182100
                   END                                                  23192000
              ELSE                                                      23192100
                   GO LOOPEND; % STATION NOT READY FOR OUTPUT           23192200
FORGETALL:                                                              23193000
         FORGETEMALL~ FORGETMESSTOG~ TRUE;                              23194000
FORGETMESS:                                                             23200000
         MESS~M[MESSADDR];                                              23201000
         FORGETMESSTOG~ FORGETMESSTOG OR (STA~ STACURR).BREAK;          23201100
          STACURR:=(@1777777746777777&STA[1:27:1]) AND STA; %WPM        23201200
FORGET:  IF MESS.[2:1] THEN                                             23202000
              BEGIN                                                     23202050
              COMMENT: THIS WAS FROM A PROGRAM;                         23202060
              MIXMESS~ P(DC19Q,0&STA[9:9:9],LLL,0,INX,.ADDR,STD);       23203100
              IF MIXMESS.[9:9]!STA.[9:9] THEN HANG;                     23203150
              IF (M[ADDR+3]~ P(DUP,LOD)+1)=1 THEN                       23203200
                   IF NINETEENNOTREADING AND STA.[24:1] THEN            23203210
                        BEGIN                                           23203220
                        NINETEENNOTREADING~ FALSE;                      23203230
                        INDEPENDENTRUNNER(P(.NINETEENREADER),0);        23203240
                        END;                                            23203250
              IF FORGETMESSTOG THEN                                     23203300
                   BEGIN                                                23203340
                   M[ADDR+2]~ FORGETMESSTOG+2|(STA.[30:1]);             23203360
                   MIXMESS~ MESS;                                       23203370
                   WHILE (MIXMESS~ M[MIXMESSADR~ MIXMESS INX 0]).[9:9]  23203400
                        =STA.[9:9] DO                                   23203500
                        IF MIXMESS.[2:1] THEN                           23203600
                             BEGIN                                      23203700
                             M[MIXMESSADR].[2:7]~ 0;                    23203800
                             NUMESS~ NUMESS+1;                          23203850
                             M[ADDR+3]~ P(DUP,LOD)+1;                   23203900
                             END;                                       23204000
                   END;                                                 23204010
              END                                                       23206000
$ INCLUDE 23206501, IF RJE;                                             23206099
         ELSE IF STA THEN                                               23206100
              BEGIN                                                     23206200
              P(DC19Q,0&STA[9:9:9],LLL,3,INX,.ADDR,STD,DEL);            23206300
              M[ADDR]:=(*P(DUP))+1;                                     23206400
              END                                                       23206500
         ELSE                                                           23206600
              NUMESS~ NUMESS-1;                                         23206700
         M[MESS.[FF]].[CF]~ MESS;                                       23208000
         M[MESS.[CF]].[FF]~ MESS.[FF];                                  23209000
         FORGETSPACE(MESSADDR INX 1);                                   23231000
         IF FORGETMESSTOG THEN                                          23235000
SKIPIT:       IF (MESS~ M[MESSADDR~ MESS.[CF]]).[9:9]=STA.[9:9] THEN    23236000
                   IF MESS.[4:5]=0 OR FORGETEMALL THEN                  23236100
                        GO FORGET                                       23236200
                   ELSE                                                 23236300
                        GO SKIPIT;                                      23237000
              FORGETMESSTOG~ FORGETEMALL~ FALSE;                        23238000
              IF EMPTYSMQ THEN                                          23242000
                   GO TO TURNOFFSTATIONS;                               23243000
              IF P(ILL,0&STA[9:9:9],LLL,DEL).[9:9] = STA.[9:9] THEN     23243200
              GO TO DCW;                                                23243400
              TUSTA~ 0;                                                 23244000
              GO LOOPEND;                                               23245000
                                                                        23269000
TURNOFFSTATIONS:                                                        23270000
%                                                                       23271000
         DCW:                                                           23321100
              DCWRITE(ABS(TUSTA));                                      23322000
              GO TO LOOPEND;                                            23323000
ERRIO::                                                                 23356000
IF RD.[45:1] THEN  % NOT READY                                          23357000
    BEGIN                                                               23357100
    STACURR.[30:1] ~ 1;                                                 23357200
         GO TO FORGETALL;                                               23361000
    END;                                                                23361100
         IF RD.[42:2]!0 THEN % STATION BUSY OR  RD READY, D21&D20       23362000
              BEGIN                                                     23363000
              IF RD = @40 THEN                                          23364000
                   BEGIN                                                23364100
                   STACURR.[24:1] ~ 1;                                  23365000
                   IF NOT STA.[45:1] THEN                               23365100
                        INQUPT(0&1[24:47:1]&STA[9:9:9]);                23365200
                   END                                                  23365300
              ELSE                                                      23366000
                   BEGIN                                                23366100
                   IF NOT STACURR.[22:1] THEN                           23366200
                        BEGIN                                           23366300
                        SLEEP([CLOCK], NOT CLOCK);                      23366400
                        IF NOT (STA~STACURR).[22:1] THEN                23366500
                             BEGIN                                      23366600
                             STACURR.[22:1] ~ TRUE;                     23366700
                             GO TO DOIO;                                23366800
                             END;                                       23366900
                        END;                                            23367000
                   END;                                                 23367100
                   GO TO LOOPEND;                                       23383000
              END;                                                      23384000
%   I DO NOT KNOW HOW IT GOT HERE BUT....                               23385000
         GO FORGETMESS;                                                 23386000
LOOPEND::                                                               23387000
         IF PARAMETER !0 THEN                                           23387100
              GO TO EGRESS;                                             23387200
         END       %3                                                   23388000
    ELSE                                                                23389000
    BEGIN                                                               23390000
         ::SMWSTOPPED ~ TRUE;                                           23391000
%                                                                       23397000
    END;                                                                23398000
    END       %2                                                        23399000
UNTIL                                                                   23400000
    SMWSTOPPED;                                                         23401000
EGRESS:                                                                 23401100
IF PARAMETER =0 THEN                                                    23403000
KILL([PARAMETER]);                                                      23404000
END STATIONMESSAGEWRITER;                                               23405000
 SAVE PROCEDURE FORGETSPACE(LOC);%                                      24000000
                      VALUE LOC;%                                       24001000
                      REAL LOC;%                                        24002000
    BEGIN%                                                              24003000
         REAL B,BACK,F,FRONT,LINK,X,T,SIZE;%                            24004000
         LOC ~ *P(.LOC) INX 0 -2;%                                      24005000
         IF (B~ M[BACK~ (LINK~ M[LOC]).[FF]]).[CF]!LOC OR               24006000
              (F~M[FRONT~LINK.[CF]]).[FF]!LOC OR LINK<0 THEN            24007000
                   PUNT([PUNTER[25]]);                                  24007100
         IF F<0 THEN                                                    24007200
                   BEGIN%                                               24008000
                    M[LOC]~LINK &F[CTC];%                               24009000
                    M[F]~M[F] & LOC[CTF];%                              24010000
                    M[T~M[FRONT+2]]~M[T] &(X~M[FRONT+1])[CTC];%         24011000
                    M[X+1]~T%                                           24012000
                   END;%                                                24013000
         IF B<0%                                                        24014000
              THEN%                                                     24015000
                   BEGIN%                                               24016000
                    M[BACK]~B&(T~M[LOC].[CF])[CTC];%                    24017000
                    M[T]~M[T]& BACK[CTF];%                              24018000
                    M[BACK+1]~M[BACK+1]&(SIZE~T-BACK-2)[CTF];%          24019000
                   END%                                                 24020000
              ELSE   %BACK IN USE                                       24021000
                   BEGIN%                                               24022000
                    M[LOC+2]~AVAIL;%                                    24023000
                    M[LOC+1]~(T~M[AVAIL]) &(SIZE~M[LOC].[CF ]-LOC-2)[CTF24024000
                    ];%                                                 24025000
                    M[T+1]~LOC+1;%                                      24026000
                    M[AVAIL]~T &(LOC+1)[CTC]%                           24027000
                   ; M[LOC]~-M[LOC]%                                    24028000
                   END;%                                                24029000
    IF LOC{LEFTOFF THEN IF M[LOC].[CF]>LEFTOFF THEN LEFTOFF~M[LOC].[FF];24030000
$ INCLUDE 24030201, IF DEBUGGING OR CHECKLINK;                          24030100
    IF CHECKLINK THEN CHECKLINKS;                                       24030200
    END FORGETSPACE;%                                                   24031000
 SAVE INTEGER PROCEDURE GETSPACE(SIZE, TYPE, SAVEF);%                   24032000
 VALUE SIZE, TYPE, SAVEF;  REAL SIZE, TYPE;  BOOLEAN SAVEF;%            24033000
    BEGIN REAL LINK, LOC, X, Y, T, SIZEF, LOS, MESSAGE;%                24034000
         REAL GM,GM1; COMMENT GM,GM1 MUST IMMEDIATELY FOLLOW MESSAGE;   24034001
         REAL COUNT;                                                    24034500
$INCLUDE 24034701, IF STATISTICS;                                       24034599
         REAL JOBCORE, TOTALCORE;                                       24034600
         LABEL NXT;                                                     24034700
         LABEL NEWSTART, SVSEARCH, ROCKABYE, START, OVERLAY;%           24035000
         LABEL OVSEARCH,XX;                                             24035050
    NEWSTART:%                                                          24036000
         IF NOT STOREDY THEN SLEEP([TOGLE], STOREMASK);%                24037000
         STOREDY ~ FALSE;%                                              24038000
$INCLUDE 24038501, IF DEBUGGING OR CHECKLINK;                           24038499
         IF CHECKLINK THEN CHECKLINKS;                                  24038500
%                                                                       24039000
         IF SAVEF THEN%  ATTEMPT TO ALLOCATE AT START OF MEMORY         24040000
         BEGIN LINK ~ MSTART;%                                          24041000
    SVSEARCH:%                                                          24042000
              IF (LOC ~ LINK.[CF])=0 THEN%                              24043000
              BEGIN%                                                    24044000
    ROCKABYE:%                                                          24045000
                   STOREDY ~ TRUE;%                                     24046000
                   IF SAVEF=3 THEN P(0,RTN);%                           24047000
                  NOMEM~NOMEM+1;                                        24047100
                   IF (COUNT~COUNT+1)>5 THEN                            24047500
                   IF MESSAGE=0 THEN%                                   24048000
              BEGIN;STREAM(P1MIX,SIZE,M:=[MESSAGE]);                    24049000
                    BEGIN SI:=LOC P1MIX;DS:=2 DEC;DS:=9LIT" NO MEM ";   24049100
                          DS:=5DEC;DS:=5LIT" WDS~";                     24049200
                   END;                                                 24049300
                        P(WAITIO([MESSAGE], @177, 25), DEL);%           24050000
                   END;%                                                24051000
                   SLEEP([CLOCK], NOT CLOCK);%                          24052000
                  NOMEM~NOMEM-1;                                        24052100
                   GO TO NEWSTART;%                                     24053000
              END;%                                                     24054000
              IF (LINK ~ M[LOC])}0 THEN%                                24055000
              BEGIN IF NOT LINK.[2:1] THEN%                             24056000
                    BEGIN  % OVRLAY ONLY IF POTENTIAL SPACE ADEQUATE    24056100
                          SIZEF ~ -2; X ~ T ~ LOC;                      24056200
                          IF (Y~LINK.[FF]) ! 0 THEN                     24056250
                            IF M[Y] < 0 THEN SIZEF~M[(T~Y)+1].[FF];     24056300
                          WHILE SIZE>SIZEF AND (Y~M[X]).[1:2]!1 DO      24056400
                          SIZEF ~ SIZEF - X + (X ~ Y.[CF]);             24056500
                          IF SIZE > SIZEF THEN                          24056600
                          BEGIN LINK ~ Y;  GO SVSEARCH; END;            24056700
                          IF OLAY(LOC) THEN % RE-SET "LINK"             24057000
                   IF (Y~M[LINK~T])>0 OR Y.[CF]=LOC                     24057100
                   OR M[Y].[FF]!LINK THEN                               24057150
                             % MEM LINK AT "T" NO LONGER VALID          24057200
                             LINK ~ MSTART;%                            24057300
                    END;%                                               24057500
              GO TO SVSEARCH;%                                          24058000
              END;%                                                     24059000
              IF (SIZEF ~ M[T~LOC+1].[FF])<SIZE THEN GO SVSEARCH;%      24060000
              STOREDY ~ TRUE;%                                          24061000
              M[LOC]~ABS(LINK&1[2:47:1]&TYPE[3:42:6]&P1MIX[9:42:6]);    24062000
              LINK ~ M[T];   M[LINK+1] ~ Y ~ M[T+1];%                   24063000
              M[Y] ~ (*P(DUP))&LINK[CTC];%                              24064000
              IF SIZEF>SIZE+DELTA THEN%                                 24065000
              BEGIN M[LOC] ~ (X ~ *P(DUP))&(Y ~ LOC+SIZE+2)[CTC];%      24066000
                   M[X] ~ (*P(DUP))&Y[CTF];%                            24067000
                   M[Y] ~ X.[CF]&LOC[CTF];%                             24068000
                   FORGETSPACE(Y+2);%                                   24069000
              END;%                                                     24070000
         END ELSE BEGIN% ALLOCATE ON "SPACE AVAILABLE" BASIS            24071000
    START:%                                                             24072000
              IF (LINK ~ POLISH(M[AVAIL], 0, SIZE, CFX, LLL,%           24073000
                0, INX, .T, STD)).[FF]=@77777 THEN%                     24074000
              BEGIN%                                                    24075000
    OVSEARCH:%                                                          24075050
                   IF (LINK:=M[LEFTOFF]).[1:2] = 0 THEN                 24075100
                   BEGIN% OVERLAY ONLY IF POTENTIAL SPACE ADEQUATE      24075200
                        SIZEF:=-2; X:=LEFTOFF;                          24075300
                        IF (Y:=LINK.[CF]) ! 0 THEN                      24075400
                             IF M[Y] < 0 THEN SIZEF ~ M[Y+1].[FF];      24075500
                        WHILE SIZE > SIZEF AND (Y~M[X]).[1:2]!1 DO      24075600
                        BEGIN SIZEF~SIZEF+Y.[CF]-X; X~Y.[FF] END;       24075700
                        IF SIZE > SIZEF THEN                            24075800
                        BEGIN LEFTOFF ~ Y.[FF];                         24075900
                        IF X=0 THEN GO TO XX ELSE GO TO OVSEARCH END;   24075950
    OVERLAY:%            OVERLAY ATTEMPTED CYCLICALLY, USING LEFTOFF    24076000
                        IF (IF P1MIX=0 THEN 1 ELSE                      24077000
                                                                        24077100
                             IF (X:=LINK.[9:6])!P1MIX THEN 1 ELSE       24077200
                             ((TWO(X) AND OLAYMASK)!0)) THEN            24077300
                             IF OLAY(LEFTOFF) THEN GO TO START;         24078000
                   END;%                                                24078500
                   IF (LEFTOFF~LINK.[FF])=0 THEN                        24079000
    XX:            IF LOS THEN GO TO ROCKABYE ELSE LOS~1;               24080000
                   GO TO OVSEARCH;                                      24081000
              END;%                                                     24082000
              STOREDY ~ TRUE;%                                          24083000
              IF (SIZEF ~ LINK.[FF])>SIZE+DELTA THEN%                   24084000
              BEGIN M[T] ~ LINK&(X ~ SIZEF-SIZE-2)[CTF];%               24085000
                   LOC ~ T+X+1;%                                        24086000
                   X ~ (Y ~ M[T-1])&(T-1)[CTF];%                        24087000
                   M[Y] ~ (*P(DUP))&LOC[CTF];%                          24088000
                   M[T-1] ~ Y&LOC[CTC];%                                24089000
              END ELSE BEGIN%                                           24090000
                   M[LINK+1] ~ Y ~ M[T+1];%                             24091000
                   M[Y] ~ (*P(DUP))&LINK[CTC];%                         24092000
                   X ~ M[LOC ~ T-1];%                                   24093000
              END;%                                                     24094000
              M[LOC] ~ ABS(X&1[2:47:1]&TYPE[3:42:6]&P1MIX[9:42:6]);     24095000
         END;%                                                          24096000
$INCLUDE 24096241, IF STATISTICS;                                       24096099
              IF P1MIX NEQ 0 THEN                                       24096100
              IF CORESTAT[P1MIX].[1:1] THEN                             24096110
              BEGIN                                                     24096120
                   T:=MSTART;                                           24096130
                   WHILE T NEQ MEND DO                                  24096140
                   BEGIN                                                24096150
                        IF (LINK:=M[T]).[1:1] THEN GO TO NXT;           24096160
                        SIZEF:=LINK.[CF]-T;                             24096170
                        IF LINK.[9:6]=P1MIX THEN JOBCORE:=JOBCORE+SIZEF;24096180
                        TOTALCORE:=TOTALCORE+SIZEF;                     24096190
                   NXT: T:=LINK.[CF];                                   24096200
                   END;                                                 24096210
                   IF JOBCORE.[CF] GTR CORESTAT[P1MIX].[CF] THEN        24096220
                   CORESTAT[P1MIX]:=P(DUP,LOD)&JOBCORE[CTC]&            24096230
                                    TOTALCORE[CTF];                     24096235
              END;                                                      24096240
         IF MESSAGE!0 THEN%                                             24097000
         BEGIN MESSAGE.[18:12] ~ "OK";                                  24098000
              NOMEM~NOMEM+1;                                            24098100
              P(WAITIO([MESSAGE], @177, 25), DEL);%                     24099000
              NOMEM~NOMEM-1;                                            24099050
         END;                                                           24099100
         M[LOC+1] ~ 0;%                                                 24099200
         GETSPACE ~ LOC;%                                               24099300
    END GETSPACE;%                                                      24100000
 SAVE INTEGER PROCEDURE DISKSPACE(WORDS,MIX,AUX);                       24101000
 VALUE WORDS,MIX,AUX;                                                   24102000
 INTEGER WORDS,MIX; REAL AUX;                                           24103000
    BEGIN ARRAY LOC=+2[*];                                              24104000
         INTEGER   INDEX=NT1,                                           24105000
                   SEG  =NT2,                                           24106000
                   CNTRS=NT3,                                           24107000
                   SIZE =NT4,                                           24108000
                   LIMIT=NT5;                                           24109000
         REAL      T    =NT6;                                           24110000
         LABEL     L1,                                                  24111000
                   FINAL,                                               24112000
                   BADEXIT,                                             24112500
                   EXIT;                                                24113000
         DEFINE    HEURISTIC = 2#;                                      24114000
         REAL SUBROUTINE FINDSEG;                                       24115000
         BEGIN;  STREAM(A~0:T);                                         24116000
                   BEGIN SI~LOC T;  SI~SI+3;                            24117000
                        5(IF SC="0" THEN JUMP OUT TO L;                 24118000
                          SI~SI+1;  TALLY~TALLY+1);                     24119000
                   L:   A~TALLY;                                        24120000
                   END STREAM;                                          24121000
              FINDSEG ~ POLISH                                          24122000
         END FINDSEG;                                                   24123000
         SUBROUTINE FIND;                                               24124000
         BEGIN POLISH(0);                                               24125000
              T ~ LOC[INDEX];                                           24126000
              SEG ~ T.[9:3];                                            24127000
              CNTRS ~ T.[2:7];                                          24128000
              IF SEG>4 THEN                                             24129000
    L1:         IF (SEG ~ FINDSEG)=5 THEN GO TO FINAL                   24130000
              ELSE CNTRS ~0;                                            24131000
              IF SIZE+CNTRS>100 THEN GO TO L1;                          24132000
              P(DEL,(INDEX|256)+SEG|100+CNTRS);                         24133000
              STREAM(A~0:SEG,T~[T]);                                    24134000
              BEGIN SI~T;  SI~SI+3;  SI~SI+SEG;                         24135000
                   DI~LOC A;  DI~DI+7;  SEG~DI;                         24136000
                   T~SI;  DS~CHR;  TALLY~A;                             24137000
                   TALLY~TALLY+1;  A~TALLY;                             24138000
                   SI~SEG;  DI~T;  DS~CHR;                              24139000
         L5:;                                                           24139500
              END STREAM;                                               24140000
              IF (POLISH=63) OR (CNTRS ~ CNTRS+SIZE)=100 THEN           24141000
              BEGIN CNTRS ~ 0;  SEG ~ FINDSEG END;                      24142000
              LOC[INDEX] ~ T&SEG[9:45:3]&CNTRS[2:41:7];                 24143000
    FINAL:    IF (DISKSPACE ~ POLISH)!0 THEN                            24144000
              BEGIN IF SEG=5 THEN INDEX ~ 0;                            24145000
                   LOC[0] ~ LIMIT&INDEX[CTF];                           24146000
                   GO TO EXIT;                                          24147000
         END  END FIND;                                                 24148000
$INCLUDE 24150001, IF AUXMEM;                                           24148999
         IF (AUX OR DATAOLAY)                                           24149000
$INCLUDE 24149011, IF BREAKOUT;                                         24149009
         AND MIX NEQ BREAKING                                           24149010
         THEN IF P(AUXILIARYSPACE(WORDS),DUP) NEQ 0 THEN                24149020
         BEGIN AUXDATA[MIX] := *P(DUP)+WORDS.[38:6]+1;  P(RTN)          24149100
         END ELSE P(DEL) ELSE ;                                         24150000
         P(DALOCROW[MIX]);                                              24150010
$ OMIT 24150101,IF AUXMEM;                                              24150099
         P(DALOCROW[MIX]);                                              24150100
         SIZE ~ (WORDS+29) DIV 30;                                      24151000
         IF (LIMIT := LOC[0].[CF])=0 THEN GO TO BADEXIT;                24152000
         IF (INDEX ~ LOC[0].[FF])!0 THEN FIND;                          24153000
         INDEX ~ 2;                                                     24154000
         DO FIND UNTIL (INDEX := INDEX+2)>LIMIT;                        24155000
    BADEXIT:                                                            24155500
         DISKSPACE ~ -1;                                                24156000
    EXIT:                                                               24157000
         IF LIMIT!112 THEN BEGIN;                                       24157100
$INCLUDE 24157301, IF STATISTICS;                                       24157199
              IF INDEX GEQ OLAYUSED[MIX].[3:15] THEN                    24157200
              OLAYUSED[MIX]:=LOC[INDEX]&INDEX[3:33:15];                 24157300
         STREAM(A~0:L~LIMIT.[41:6],T~[LOC[1]]);                         24158000
         BEGIN SI~T;  DI~A;                                             24159000
              L(SI~SI+11;                                               24160000
                5(IF SC="0" THEN DI~DI+8;  SI~SI+1));                   24161000
              A~DI;                                                     24162000
         END STREAM;                                                    24163000
         IF (POLISH<HEURISTIC) THEN                                     24164000
              IF ((SEG ~ TWO(MIX)) AND OLAYMASK)!0 THEN                 24165000
              BEGIN OLAYMASK ~ NOT SEG AND OLAYMASK;                    24166000
                   INDEPENDENTRUNNER(P(.GETMOREOLAYDISK),MIX);          24167000
              END;                                                      24168000
         END;                                                           24168100
    END DISKSPACE;                                                      24169000
 SAVE PROCEDURE DISKRTN(SEGNO, SIZE);                                   24200000
    VALUE     SEGNO, SIZE;                                              24201000
    INTEGER   SEGNO, SIZE;                                              24202000
    BEGIN INTEGER  INDEX=NT1,                                           24203000
                   WORD =NT2,                                           24204000
                   COUNT=NT3,                                           24205000
                   DRUM =NT4,                                           24206000
                   X    =NT5;                                           24207000
         ARRAY     LOC  =+1[*];                                         24208000
         LABEL     L;                                                   24209000
$ INCLUDE 24209501,IF AUXMEM;                                           24209099
         IF SEGNO.[33:3] = 7 THEN                                       24209100
         BEGIN COMMENT AUXILIARY MEMORY RETURN AND COUNTER DECREMENT;   24209200
              AUXDATA[P1MIX] := *P(DUP)-SIZE.[38:6]-1;                  24209300
              FORGETAUXILIARYSPACE(SIZE, SEGNO);  P(XIT)                24209400
         END;                                                           24209500
         P(DALOC[P1MIX,*]);                                             24210000
         COUNT ~ TWO(24-6|(SEGNO.[39:9] DIV 100));                      24211000
         X ~ (INDEX ~ 0&SEGNO[41:33:6])-1;                              24212000
         IF (WORD ~ LOC[INDEX].[18:30]-COUNT)=0 THEN                    24213000
         BEGIN LOC[INDEX] ~ 0;                                          24214000
    L:        IF P(LOC[0].[FF],DUP)!0 THEN                              24221000
                IF LOC[POLISH-1]<0 THEN P(XIT);                         24222000
              LOC[0] ~ (*P(DUP))&INDEX[CTF];                            24223000
         END ELSE BEGIN LOC[INDEX]~ (*P(DUP))&WORD[18:18:30];           24224000
              IF LOC[X]<0 THEN                                          24225000
                IF (WORD DIV COUNT).[42:6]=0 THEN GO TO L;              24226000
    END  END  DISKRTN;                                                  24227000
$INCLUDE 24553001, IF DATACOM AND NOT INQUIRY;                          24499999
SAVE PROCEDURE DCQPT(IR);VALUE IR; BOOLEAN IR;                          24500000
    BEGIN     %1                                                        24501000
              REAL RCW=+0, RD=+1, STA= +2, DCQARACT=+3,                 24502000
                   EF=+4;                                               24503000
              LABEL L,PAR,DCW,INQ,CHECKSMW;                             24505000
              SUBROUTINE FIXSTA;                                        24506000
                   BEGIN                                                24506200
                   STATION[STA.[14:4],STA.[9:4]] ~                      24506400
                        (STA AND @3767577410377777 OR                   24506600
                        RD AND @0010200166400000);                      24506800
                   END;                                                 24507000
    IF IR THEN                                                          24509000
         BEGIN     %3                                                   24510000
         P(DCQPTSTACK:=GETSPACE(128, 12,1)+1,STS,IR,RCW,0,RDS,0,XCH,CFX,24511000
           STF);                                                        24512000
         STACKUSE ~ TRUE;                                               24513000
         END;      %3                                                   24514000
    P(0,0,(-1),0);                                                      24515000
                                                                        24516000
    WHILE INQCT>0 OR DCQARACT}0 DO                                      24517000
         BEGIN     %4                                                   24518000
         IF INQCT>0 AND DCQARACT<DCQARAMAX   THEN                       24519000
              BEGIN     %5                                              24520000
              RD ~ @0400004000000000;                                   24521000
              IOREQUEST(NABS(RD),RD,[RD]&30[12:42:6]);                  24522000
              SLEEP([RD],IOMASK);                                       24523000
              INQCT ~ INQCT-1;                                          24524000
              STA ~ GET(RD);                                            24525000
              IF ((EF:=RD.[23:10] AND @1464) ! @1400  %NOT RR/AB        24525500
                   AND STA.[44:2] = 1)                                  24526000
$ INCLUDE 24526501, IF RJE;                                             24526499
                   OR STA                                               24526500
                   THEN IF NOT RD.[30:1] THEN                           24527000
                             BEGIN                                      24527500
                             IF RD.[24:1] THEN  %RR                     24528000
                                  PAR:                                  24528500
                                  BEGIN                                 24529000
                                  FIXSTA;                               24529500
                                  IF STA.[37:1] OR STA THEN             24530700
                                       BEGIN                            24530750
                                       IF NINETEENNOTREADING THEN       24530800
                                            BEGIN                       24530900
                                            NINETEENNOTREADING~ FALSE;  24531000
                                            INDEPENDENTRUNNER(          24531100
                                            P(.NINETEENREADER),0);      24531200
                                            END;                        24531300
$ INCLUDE 24531331, IF RJE;                                             24531309
                                            IF STA THEN STATION[        24531310
                                            STA.[14:4],STA.[9:4]]:=     24531320
                                            ABS(*P(DUP)) ELSE           24531330
                                            GO TO CHECKSMW;             24531340
                                       END                              24531350
                                  ELSE IF STA.[43:1] THEN DCREAD(STA)   24531360
                                  ELSE                                  24531400
                                       RRNCOUNT ~ RRNCOUNT+1;           24531500
                                  GO TO L;                              24531700
                                  END;                                  24532000
                             IF EF = @1040 THEN  % WR/A                 24532200
                                  IF STA.[29:1] THEN                    24532500
                             BEGIN                                      24532505
                             IF STA.[37:1] THEN                         24532510
                                  BEGIN                                 24532520
                                  STATION[STA.[14:4],STA.[9:4]]~        24532530
                                       P(DUP,LOD) OR @44040000;         24532535
                                  IF NINETEENNOTREADING THEN            24532540
                                       BEGIN                            24532545
                                       NINETEENNOTREADING~ FALSE;       24532550
                                       INDEPENDENTRUNNER(               24532560
                                           P(.NINETEENREADER),0);       24532570
                                       END;                             24532580
                                  GO TO L;                              24532585
                                  END;                                  24532590
                                       DCW:                             24532800
                                       RD.[25:1] ~ STA.[25:1];          24533300
                                       FIXSTA;                          24533500
                                       IF NOT RD.[23:1] THEN            24533510
CHECKSMW:                              IF STA LSS 0 THEN                24533520
                                       BEGIN IF EF NEQ @0040 THEN       24533530
                                            IF P(STATIONMESSAGEHOLDER,  24533540
                                            STA AND @0007570000000000,  24533550
                                            LLL,RFB,.EF,STD).[9:9] =    24533560
                                            STA.[9:9] THEN              24533570
                                            M[EF].[3:1]:=1;             24533575
                                            RUNSMW;                     24533580
                                            GO TO L;                    24533585
                                       END ELSE IF RD.[24:1] THEN GO L; 24533590
                                       IF P(ILL,STA AND@000757000000000024533600
                                            ,LLL,DEL).[9:9]             24533650
                                         =STA.[9:9]                     24533700
                                       OR NOT EMPTYSMQ                  24533725
                                         THEN                           24533730
                                            DCWRITE(ABS(STA));          24533750
                                       GO TO L;                         24533800
                             END                                        24534000
                                  ELSE                                  24534200
                                       GO TO INQ;                       24534500
$ INCLUDE 24534801, IF RJE;                                             24534599
                             IF EF=0 AND STA THEN                       24534600
                             IF STATION[STA.[14:4],STA.[9:4]].          24534700
                             [45:1] THEN GO TO L;  %DISCARD IDLE INT    24534800
                             IF EF = @0040  OR  EF= 0 THEN %WR OR IDLE  24535000
                                  GO TO DCW;                            24535050
                                                                        24535100
                             IF EF = @1020 THEN %PARITY                 24535200
                                  BEGIN                                 24535300
                                  RD.[24:1] ~ 1;                        24535400
                                  GO TO PAR;                            24535500
                                  END;                                  24535600
                             END;                                       24535900
                   INQ:                                                 24535990
                   DCQARA[DCQARACT~DCQARACT+1]~NFLAG(RD);               24536000
              END       %5                                              24537000
         ELSE                                                           24538000
              BEGIN     %7                                              24539000
              IF INQUPTSTOPPED THEN                                     24540000
                   BEGIN     %8                                         24541000
                   INQUPTSTOPPED ~ FALSE;                               24541100
                   INDEPENDENTRUNNER(P(.INQUPT),DCQARA[0]OR@77777);     24542000
                   IF DCQARACT>0 THEN                                   24543000
                        MOVE(DCQARACT,[DCQARA[1]] INX 0,DCQARA INX 0);  24544000
                   DCQARACT ~ DCQARACT-1;                               24545000
                   END       %8                                         24546000
              ELSE                                                      24547000
                   COMPLEXSLEEP((INQUPTSTOPPED) OR                      24548000
                                (INQCT > 0 AND DCQARACT < DCQARAMAX));  24548100
              END;      %7                                              24549000
L:       END;      %4                                                   24550000
    DCQPTSTOPPED ~ TRUE;                                                24551000
    GO TO NOTHINGTODO;                                                  24552000
    END DCQPT;%1                                                        24553000
$ INCLUDE 24641001, IF SHAREDISK;                                       24599999
PROCEDURE FINDFREEADDRESS(N); VALUE N; REAL N;                          24600000
BEGIN                                                                   24601000
    REAL RCW=+0,T=RCW+1,A=T+1,S=A+1,U=S+1,I=U+1;                        24602000
    LABEL LOOK;                                                         24603000
    IF N THEN % MUST AQUIRE OWN STACK                                   24604000
    BEGIN                                                               24605000
         P(GETSPACE(64, 12,0)+1,STS,N,RCW,0,RDS,0,XCH,CFX,STF);         24606000
         STACKUSE:=TRUE;                                                24607000
    END;                                                                24608000
    P(@2000,0,0,0,0);                                                   24609000
    IF (FINDFREECTR:=FINDFREECTR+1) GEQ 32 THEN% THIS PROCEDURE IS      24610000
              % CALLED FREQUENTLY SO MAKE IT A SAVE PROCEDURE           24611000
         M[(*P(..FINDFREEADDRESS)) INX 0-2].[2:1]~1;                    24612000
LOOK:                                                                   24613000
    P(WAITIO([T] INX @4000000000,0,18),DEL); % REPORT FREE ADDRESS      24614000
    IF A!0 THEN % THERE WAS A FREE ADDRESS                              24615000
    BEGIN                                                               24616000
         FOR I:=0 STEP 1 UNTIL LQAVAIL-1 DO                             24617000
         IF (LQUE[I].[8:40] EQV A)=NOT 0 THEN                           24618000
         BEGIN                                                          24619000
              U:=LOCATQUE[S:=LQUE[I].[1:7]].[12:6];                     24620000
              IF UNIT[U].[FF]>1023 THEN                                 24621000
              BEGIN                                                     24622000
                   UNIT[U]:=(*P(DUP))&S[CTF]&S[CTC];                    24623000
                   STARTIO(U);                                          24624000
              END ELSE                                                  24625000
              BEGIN                                                     24626000
                   LOCATQUE[UNIT[U].[CF]].[FF]:=S;                      24627000
                   UNIT[U].[CF]:=S;                                     24628000
              END;                                                      24629000
              IF I LSS (LQAVAIL:=LQAVAIL-1) THEN                        24630000
              BEGIN                                                     24631000
                   STREAM(A:=LQAVAIL-I,B:=[LQUE[I]]);                   24632000
                   BEGIN SI:=B;SI:=SI+8;DS:=A WDS END;                  24633000
                   I:=I-1;                                              24634000
              END;                                                      24635000
         END;                                                           24636000
         IF LQAVAIL!0 THEN GO LOOK;                                     24637000
    END;                                                                24638000
    FINDINGADDRESS:=0;                                                  24639000
    IF N THEN KILL([N]);                                                24640000
END; % OF FINDFREEADDRESS                                               24641000
$INCLUDE 25009001, IF DATACOM AND DCSPO AND NOT INQUIRY;                24999999
PROCEDURE MARKSPOSTA(STA,INOROUT);VALUE STA,INOROUT;REAL STA,INOROUT;   25000000
                                                                        25000100
                                                                        25000200
    BEGIN     % 1                                                       25000300
    REAL B,TB,T,U,G;                                                    25000400
    BOOLEAN SPOSTA,GOTCHA;                                              25000500
    INTEGER BTS,WRS;                                                    25000600
    LABEL   LQ;                                                         25000610
    DEFINE    STACURR = STATION[STA.[14:4],STA.[9:4]]#,                 25000700
              STANEXT = STATION[TB .[18:4],TB .[4:4]]#;                 25000800
    LABEL EGRESS;                                                       25000900
    SLEEP([TOGLE],HOLDMASK); HOLDFREE ~ FALSE;                          25001000
    B ~ GETSPACE(30,0,0)+2;                                             25001100
    DISKIO(G,1-B,30,DIRECTORYTOP-SYSNO);                                25001200
    IF INOROUT.[33:15] = "QV" THEN                                      25001300
         GO TO LQ;                                                      25001310
    STA ~ GET(STA);                                                     25001400
    SPOSTA ~ STA.[18:4]!STA.[14:4] OR STA.[4:4]!STA.[9:4];              25001500
    IF INOROUT = "IN" THEN                                              25001600
         BEGIN     % 2                                                  25001700
         IF SPOSTA THEN                                                 25001800
              GO TO EGRESS                                              25001900
         ELSE                                                           25002000
              BEGIN     % 3                                             25002100
              STACURR ~ STA &(T~BASELINK)[4:4:4] &T[18:18:4];           25002200
              BASELINK ~ T &STA[4:9:4] &STA[18:14:4];                   25002300
              END;      % 3                                             25002400
         END       % 2                                                  25002500
    ELSE                                                                25002600
         BEGIN     % 4                                                  25002700
         IF SPOSTA THEN                                                 25002800
              BEGIN     % 5                                             25002900
                                                                        25002910
                                                                        25002920
              TACH(STA,0,0);                                            25003000
              STACURR.[46:1] ~ 0;                                       25003010
              STA ~ GET(STA);                                           25003020
              U ~ STA.[14:4]; T ~ STA.[9:4];                            25003100
              TB ~ BASELINK;                                            25003200
              DO                                                        25003300
                   TB ~ STANEXT                                         25003400
              UNTIL                                                     25003500
                   (GOTCHA~(TB.[4:4]=T AND TB.[18:4]=U)) OR TB=BASELINK;25003600
              IF NOT GOTCHA THEN                                        25003700
                   GO TO EGRESS;                                        25003800
              STATION[TB.[14:4],TB.[9:4]] ~ TB &STA[4:4:4]&STA[18:18:4];25003900
              STACURR ~ STA&STA[4:9:4]&STA[18:14:4];                    25003950
              END       % 5                                             25004000
         ELSE                                                           25004100
              GO TO EGRESS;                                             25004200
         END;      % 4                                                  25004300
                                                                        25004400
    TB ~ 0 &STA[40:9:4] &STA[44:14:4];                                  25004500
    SLEEP([G],IOMASK);                                                  25004600
    STREAM(WRS~WRS~TB DIV 48,BTS~BTS~TB-(WRS|48),N~(INOROUT="IN"),      25004700
           D~B+10);                                                     25004800
          BEGIN    % 6                                                  25004900
          SI ~ LOC N; SI ~ SI+7; SKIP 5 SB;                             25005000
          WRS(DI ~ DI+8);                                               25005100
          SKIP BTS DB;                                                  25005200
          IF SB THEN                                                    25005300
              DS ~ SET                                                  25005400
          ELSE                                                          25005500
              DS ~ RESET;                                               25005600
          END;     % 6                                                  25005700
    IF FALSE THEN                                                       25005710
         BEGIN LQ: %7                                                   25005720
         SLEEP([G],IOMASK);                                             25005730
         STREAM(QV~[QV],D~B+16 );                                       25005740
              BEGIN     %8                                              25005750
              SI ~ QV;                                                  25005760
              DS ~ WDS;                                                 25005770
              END;      %8                                              25005780
         END;      %7                                                   25005790
    DISKIO(G,B-1,30,DIRECTORYTOP-SYSNO);                                25005800
    EGRESS:                                                             25005850
    SLEEP([G],IOMASK);                                                  25005900
    FORGETSPACE(B);                                                     25006000
    HOLDFREE ~ TRUE;                                                    25006100
    END;      % 1                                                       25009000
$INCLUDE 25359999, IF DATACOM AND NOT INQUIRY;                          25049999
PROCEDURE INQUPT(PARAMETER);VALUE PARAMETER; REAL PARAMETER;            25050000
BEGIN    %1                                                             25051000
REAL RCW=+0,RD=+1,EF=+2,BUFF=+3,RT=+4,STA=+6;                           25052000
BOOLEAN  WRITEBIT=+5;                                                   25053000
INTEGER IT=+7;                                                          25054000
REAL RT2= +8;                                                           25055000
INTEGER BNUM= +9;                                                       25056000
NAME A= +10;                                                            25057000
INTEGER F= +11;                                                         25058000
INTEGER WORDS= +12;                                                     25058500
BOOLEAN SUBROUTINE STASSIGNED;                                          25059000
    BEGIN                                                               25060000
    RT~1;                                                               25061000
    IF STA.[45:1] THEN ELSE                                             25061100
         BEGIN                                                          25062000
         TACH(RD,0,RT);                                                 25062100
         STA ~ STATION[RD.[14:4],RD.[9:4]];                             25062200
         END;                                                           25062300
    STASSIGNED ~ (RT!0);                                                25063000
    END;                                                                25064000
DEFINE                                                                  25065000
D16=[47:01]#, D17=[46:01]#, D18=[45:01]#, D19=[44:01]#,                 25066000
D20=[43:01]#, D21=[42:01]#, D22=[41:01]#, D23=[40:01]#,                 25067000
D24=[39:01]#, D25=[38:01]#,                                             25068000
READRDYNORM=READRDY#,                                                   25069000
                                                                        25070000
                                                                        25071000
RDY=[24:1]#,                                                            25072000
                                                                        25073000
WRITEN=[29:1]#,                                                         25074000
LNED=[46:1]#,                                                           25075000
IFAL=[25:1]#,                                                           25075500
TANKED=[43:1]#,                                                         25076000
BUSY=[28:1]#,                                                           25076500
BREAK=[26:1]#,                                                          25077000
STAJG=STATION[RD.[14:4],RD.[9:4]]#,                                     25078000
STACURR=STAJG#,                                                         25078100
WR=[27:1]#;                                                             25079000
         DEFINE SPO=[32:1]#;                                            25079010
DEFINE NINETEEN=STA.[37:1]#;                                            25079015
SUBROUTINE FIXSTA;                                                      25079020
BEGIN STAJG~STA AND @3767577410377777 OR RD AND @0010200166400000;  END;25079030
SUBROUTINE READBUFF;                                                    25079200
         BEGIN                                                          25079210
         RD ~ (BUFF INX (@0407570440000000 AND RD))OR @0400000040000000;25079220
         IOREQUEST(NABS(RD),RD,[RD]&30[12:42:6]);                       25079230
         SLEEP([RD],IOMASK);                                            25079240
$INCLUDE 25079246, IF DATACOM AND DCSPO AND NOT INQUIRY;                25079244
         QTIMER(STA);                                                   25079245
         END;                                                           25079250
BOOLEAN SUBROUTINE SPOSTA;                                              25079300
    BEGIN                                                               25079310
    SPOSTA ~(IF STA.[18:4] ! STA.[14:4] THEN TRUE ELSE                  25079320
         STA.[4:4] ! STA.[9:4]);                                        25079330
    END;                                                                25079340
SUBROUTINE ACTIVEINT;                                                   25079400
    BEGIN                                                               25079410
    P(WAITIO(0&STA[9:9:9]&1[18:47:1],@777700000,30),DEL);               25079420
    P(WAITIO(0&STA[9:9:9]&1[18:47:1],@777700000,30),DEL);               25079430
    END;                                                                25079440
BOOLEAN SUBROUTINE WRITABLE;                                            25079500
    BEGIN                                                               25079510
    ACTIVEINT;                                                          25079520
    WRITABLE := (((STA := STACURR).[22:9] AND @501)=0);                 25079530
    END;                                                                25079540
SUBROUTINE WRITERD;                                                     25079600
    BEGIN                                                               25079610
    STACURR.[29:1] := 1;                                                25079615
    IOREQUEST(NABS(RD&@113[25:40:8]),RD,[RD]&30[12:42:6]);              25079620
    SLEEP([RD],IOMASK);                                                 25079630
    IF (RD.[23:10] AND @0464) NEQ 0 THEN  %IO DID"T GO                  25079640
         STACURR.[29:1] := 0;                                           25079650
    END;                                                                25079660
LABEL                                                                   25080000
READRDY,WRITERDY,IDLENORM,IDLEAB,                                       25081000
BUFBUSYAB, BUFBUSYNORM,                                                 25082000
READRDYAB,                                                              25083000
BUFORSTANOTRDY,UNDEFINED,                                               25084000
EGRESS,     WRITEBUFF  ,                                                25085000
REQUESTLOGIN,                                                           25086000
CHECKFOROUTPUT,                                                         25087000
START,                                                                  25088000
                                                                        25088100
IFALCK,SCANS,LINKUP,RRN,EOT,                                            25088200
CC,                                                                     25088300
BUFOVRFLW,                                                              25088400
LOGINOUT;                                                               25089000
IF PARAMETER.[36:12]=0 THEN  % THIS MUST BE TRUE FOR CALLS              25090000
    GO TO START;                 % MUST BE FALSE FOR INDEPENTRUNNERS    25090400
P(GETSPACE(128, 12,0)+1,STS,PARAMETER,RCW,0,RDS,0,XCH,CFX,STF);         25091000
STACKUSE ~ TRUE;                                                        25091100
START:                                                                  25095000
P(0,0,0,0,0,0,0,0,0,0,0);                                               25096000
P(0);                                                                   25096500
                                                                        25097000
RD ~ PARAMETER;                                                         25098000
                                                                        25098100
STA ~ GET(RD);                                                          25099000
WRITEBIT ~ STA.WRITEN;                                                  25100000
IF ((EF ~ RD.[23:10]) AND @1464) = @1400 THEN                           25101000
    GO TO READRDYAB;                                                    25101100
IF EF = @1020 THEN      %    BUSY/AB, SAME AS RR/BUSY/AB                25101200
    BEGIN                                                               25101300
    RD.[24:1] ~ 1;                                                      25101400
    EF ~ RD.[23:10];                                                    25101500
    END;                                                                25101600
FIXSTA;                                                                 25102000
IF EF.D21 THEN                                                          25103000
    GO TO WRITERDY;     % NOTE: IF D21 AND D24 YOU GO TO WRITERDY       25104000
                                                                        25105000
IF EF.D24 THEN                                                          25106000
    GO TO READRDY;                                                      25107000
IF EF = 0 THEN                                                          25108000
    GO TO IDLENORM;                                                     25109000
IF EF = @1000 THEN                                                      25110000
    BEGIN                                                               25111000
    IF NOT WRITEBIT THEN                                                25111100
         STAJG.IFAL ~ TRUE;                                             25111200
    GO TO IDLEAB;                                                       25111300
    END;                                                                25111500
IF EF = @0020 THEN                                                      25112000
    GO TO BUFBUSYNORM;                                                  25113000
IF (EF AND @0024) = @0024 THEN                                          25114000
    BEGIN                                                               25115000
    RD.[28:1] ~ 0;                                                      25116000
    FIXSTA;                                                             25117000
    EF ~ RD.[23:10];                                                    25118000
    GO TO BUFORSTANOTRDY;                                               25119000
    END;                                                                25120000
                                                                        25121000
UNDEFINED:                                                              25122000
STREAM(A~RD,B~IT~GETSPACE(5,0,0)+2);                                    25123000
    BEGIN                                                               25124000
                                                                        25125000
    DS~16 LIT " DCA ERROR, RD= ";                                       25126000
    SI~LOC A;                                                           25127000
    16(DS~3 RESET;3(IF SB THEN DS~SET ELSE DS~RESET;SKIP SB;));         25128000
    DS ~ 2 LIT ".~";                                                    25129000
    END;                                                                25130000
SPOUT(IT);                                                              25131000
GO TO EGRESS;                                                           25132000
READRDYAB:                                                              25133000
%   IF READRDY/ABNORMAL THEN                                            25134000
         BEGIN                                                          25135000
         IF NOT WRITEBIT THEN IF (STAJG AND @20000004)=@20000004 THEN   25135500
              BEGIN     COMMENT Q-MARK IN OTHER THAN 1ST BUFFER OF      25136000
                                MULTI-BUFFER MESSAGE. HANDLE AS READRDY;25136500
              RD.[23:1] ~ 0; FIXSTA;                                    25137000
              GO TO READRDY;                                            25137500
              END;                                                      25138000
IFALCK:                                                                 25138500
         STAJG ~ STA ~ STA&0[22:39:9];                                  25139000
         BUFF := GETSPACE(58,5,0)+3;                                    25140000
         READBUFF;                                                      25141000
         WORDS ~ (RD INX 0) - BUFF;                                     25151000
         BNUM ~ (WORDS | 8) DIV 28; %NUMBER OF 28 CHARACTER BUFFERS     25151010
         IF WRITEBIT THEN                                               25151020
              GO TO SCANS;                                              25151025
         IF FALSE THEN                                                  25151030
LINKUP:                 % HANDLE IFAL ENDING CONTROL INFORMATION        25151040
         BEGIN                                                          25151080
               IF STA.D19 THEN %PREVIOUS IFAL ENDING ON THIS STATION    25151120
BUFOVRFLW:                                                              25151130
               BEGIN IF P(PINGO,STA AND @7770000000000,LLL,.A,~).[9:9]  25151160
                          ! STA.[9:9] THEN DO UNTIL FALSE;              25151180
                     IF RD.BUSY THEN                                    25151185
                        BEGIN                                           25151190
                        M[A[0]]~(*P(DUP))&A[0][FTF];                    25151195
                        M[A[0].[FF]]~(*P(DUP))&A[0][CTC];               25151200
                        IF(RD.[23:8] AND @300) = @300 THEN              25151205
                           BEGIN;                                       25151206
                           STREAM(X~(A INX 1));                         25151207
                           DS ~ 25 LIT"{!CONTROL MESSAGE LOST{!~";      25151208
                           SPOUT(A INX 1 &(STA.[9:9] AND @757)[9:39:9]);25151209
                           BUFF ~ BUFF-1;                               25151210
                           STREAM(BUFF);                                25151211
                           DS ~ 8 LIT"PAR ERR ";                        25151212
                           M[RD INX 0] ~ NOT 0;                         25151213
                           GO TO WRITEBUFF;                             25151214
                           END;                                         25151215
                        STAJG~STA&0[44:47:1];                           25151216
                        BUFF ~ (A INX 1);                               25151217
                        STREAM(BUFF);                                   25151220
                        DS~ 33 LIT "{!BUFFER OVERFLOW MESSAGE LOST{!~"; 25151225
                        GO WRITEBUFF;                                   25151230
                        END;                                            25151235
                     IT := GETSPACE(A[1].[CF]+WORDS,5,0)+1;             25151240
                     STREAM(NDIV64~0,WRD~WORDS,SO~A,SKP~A[1].[FF],      25151250
                             BUF~BUFF,IT);                              25151260
                     BEGIN SI~LOC SKP; DI~  LOC NDIV64; SI~SI+6;DI~DI+7;25151270
                           DS~ CHR; SI~ SO; DI~ IT; DS~2 WDS;           25151280
                           NDIV64(32(DS:=28 CHR); 32(DS:= 28 CHR));     25151285
                           SKP(DS:= 28 CHR);                            25151290
                           SI~ BUF; WRD(DS~8 CHR);                      25151300
                     END;                                               25151310
                     FORGETSPACE(BUFF-1);                               25151320
                     M[A[0].[FF]].[CF]~IT;                              25151330
                     M[A[0].[CF]].[FF] ~ IT ;                           25151360
                     FORGETSPACE(A INX 1);                              25151400
                     M[IT+1]~P(DUP,LOD,0,BNUM,CFX,ADD,WORDS,ADD);       25151440
                     A~[M[IT]];                                         25151445
               END ELSE %INITIAL IFAL ENDING SET UP LINK                25151480
              BEGIN STAJG.D19:= 1; IT:=GETSPACE(WORDS+1,5,0)+3;         25151520
                     STREAM(SO~BUFF,WRD~WORDS,IT);                      25151530
                     BEGIN SI~SO; WRD(DS~8 CHR) END;                    25151540
                     FORGETSPACE(BUFF-1); M[F~IT-2]~                    25151550
                     STA&P(PINGO,STA AND @7770000000000,LLL,.A,~)[FTF]  25151560
                           &(A)[CTC];                                   25151580
                     M[A[0].[FF]].[CF]~ F;                              25151600
                     A[0].[FF] ~ F;                                     25151640
                     M[IT-1]~0&BNUM[CTF]&(WORDS+1)[CTC];                25151680
               END;                                                     25151720
               IF RD.IFAL THEN GO EGRESS;                               25151760
               BUFF~0&(A INX 2)[CTC];                                   25151800
               STAJG.D19~0;                                             25151840
               M[A[0]]~(*P(DUP))&(A[0])[FTF];                           25151880
               M[A[0].[FF]]~(*P(DUP))&(A[0])[CTC];                      25151920
               GO TO CC;                                                25151940
         END;                                                           25151960
SCANS:                                                                  25151980
              STREAM(RESULT~0:A~ BUFF,B~ WORDS,T~(NOT STA).[32:1]);     25152000
              BEGIN                                                     25153000
              SI~ A;  DI~LOC RESULT;  DI~ DI+2;                         25154000
              B(8(IF SC="~" THEN JUMP OUT 2 TO EX  ;                    25155000
                   IF SC="}" THEN BEGIN DS~ LIT "}";  JUMP OUT 2 TO     25156000
                       EXIT; END;                                       25156500
                  SI~SI+1;)); % CK FOR EOT                              25157000
                                                                        25158000
EX:           SI~A;                                                     25159000
              B(8(IF SC=" " THEN GO TO BSI;                             25160000
                  IF SC="~" THEN JUMP OUT 2 TO EXIT;                    25161000
                  T(IF SC!@14 THEN  %CK FOR NON-CONTROL CONTAINING QMARK25162000
                        JUMP OUT 3 TO EXIT;                             25163000
                        SI ~ SI+1; IF SC ! @14 THEN SI~SI-1;            25163500
                    T~SI; DI~T; DS~ 1 LIT " ";T~TALLY;                  25164000
                    JUMP OUT 1 TO BSI;);                                25165000
                   DI~ LOC RESULT;  DI~ DI+2;                           25170000
                   DS~ 3 CHR;   JUMP OUT 2 TO EXIT;                     25175000
                   BSI: SI~ SI+1));                                     25176000
              EXIT:                                                     25177000
         END;                                                           25178000
         IT~ POLISH;                                                    25179000
         IF IT!0 THEN                                                   25180000
              IF IT="}00000" THEN IT~ 3 ELSE                            25181000
              IF IT="END000" THEN IT~ 6 ELSE                            25182000
              BEGIN IT~ IT.[12:12];                                     25183000
                   IF IT="LI" THEN IT~ 5 ELSE                           25184000
                   IF IT="SS" THEN IT:=7 ELSE                           25184500
                   IF IT="BO" THEN IT~7 ELSE IT~0 END;                  25185000
              IF IT!3 AND WRITEBIT THEN                                 25186000
              BEGIN     % 5  BREAK                                      25192020
              STREAM(BUFF); DS:=11 LIT "{<!BREAK{!~";                   25192023
              RD:=BUFF INX (0&STAJG[9:9:9]&1[3:47:1]);                  25192024
              WRITERD;                                                  25192027
              FORGETSPACE(BUFF-1);                                      25192030
              IF STA.SPO THEN % INPUT REQUEST FROM SPO CONSOLE          25192032
                   STACURR.[2:1]~ 1 ELSE                                25192033
              STAJG.BREAK ~ TRUE;                                       25192050
              GO TO CHECKFOROUTPUT;                                     25192060
              END;      % 5                                             25192070
         IF (IT=3) AND STA.D19 THEN                                     25192200
         BEGIN IF P(PINGO,STA AND @7770000000000,LLL,.A,~).[9:9]!       25192300
                    STA.[9:9] THEN                                      25192320
               DO UNTIL FALSE; STA.D19~0;                               25192400
               M[A[0]]~(*P(DUP))&A[0][FTF];                             25192500
               M[A[0].[FF]]~(*P(DUP))&A[0][CTC];                        25192600
               FORGETSPACE(A INX 1 );                                   25192700
         END; IF IT=3 THEN GO EOT;                                      25192800
         IF RD.IFAL OR STA.D19 THEN GO LINKUP;                          25192900
         IF IT=6 AND NINETEEN THEN                                      25192910
              BEGIN                                                     25192915
              FORGETSPACE(BUFF-1);                                      25192920
              GO BUFBUSYNORM;                                           25192930
              END;                                                      25192940
$INCLUDE 25193201, IF DATACOM AND DCSPO AND NOT INQUIRY;                25192999
         IF IT=5 THEN                                                   25193000
              IF NOT SPOSTA THEN                                        25193100
                   MARKSPOSTA(STA,"IN");                                25193200
         IF IT } 3 THEN                                                 25194000
              BEGIN     %6                                              25195000
              IF IT THEN                                                25196000
                   BEGIN                                                25196010
                   IF IT = 3 THEN                                       25196020
                        BEGIN                                           25196030
EOT:                                                                    25196033
                        STAJG ~ STA&3[23:46:2];                         25196035
                        GO TO IDLEAB;                                   25196040
                        END;                                            25196110
                   GO TO LOGINOUT;                                      25197000
                   END;                                                 25197100
              END;      %6                                              25204000
CC:                                                                     25221000
         IF STA.LNED OR STA.SPO THEN                                    25222000
              BEGIN     %9MUST BE A CONTROL MESSAGE FOR LOGGED-IN STA   25223000
LOGINOUT:                                                               25223100
              INDEPENDENTRUNNER(P(.KEYIN),1&BUFF[18:33:15]&             25224000
                                (RD.[9:9] AND @757)[9:39:9]);           25225000
              IF IT NEQ 7 THEN                                          25225010
              BEGIN     %NEQ 7                                          25225020
              IF WRITABLE THEN                                          25225040
              BEGIN     %WRITABLE                                       25225050
              STREAM(Z:=RD:=[IT] INX (0&STA[9:9:9]&1[3:47:1]));         25225100
              DS:=4 LIT "{<!~";                                         25225200
              WRITERD;                                                  25225400
              END;      %WRITABLE                                       25225650
              END;      %NEQ 7                                          25225660
              STAJG.[2:1]~0; % TURN OFF INPUT REQUEST FLAG              25225700
              GO TO CHECKFOROUTPUT;                                     25226000
              END;      %9                                              25227000
         BUFF~BUFF-1;                                                   25228000
         STREAM(BUFF);                                                  25229000
              BEGIN DS ~ 28 LIT "{!STATION NOT LOGGED IN{!~  ";         25230000
              END; GO TO WRITEBUFF;                                     25231000
         END;      %4                                                   25232000
READRDY:                                                                25233000
    IF EF.D18 THEN           % RR/NR                                    25233100
         GO TO UNDEFINED;                                               25233200
    IF STA.D19 THEN GO IFALCK;                                          25233500
     IF STA.[32:1] THEN GO IFALCK;                                      25233510
    IF STASSIGNED THEN IF PARAMETER.[36:12] ! 0 THEN                    25234000
         BEGIN     %10                                                  25235000
         IF NINETEEN THEN                                               25235100
              BEGIN                                                     25235200
              IF NINETEENNOTREADING THEN                                25235300
                   BEGIN                                                25235320
                   NINETEENNOTREADING~ FALSE;                           25235340
                   INDEPENDENTRUNNER(P(.NINETEENREADER),0);             25235400
                   END;                                                 25235450
              GO EGRESS;                                                25235500
              END;                                                      25235600
                                                                        25235999
         RRNCOUNT ~ RRNCOUNT + 1; % BILL WANTS THIS                     25236000
                                                                        25236999
         IF STA.TANKED THEN                                             25237000
              DCREAD(STA);                                              25238000
         GO TO EGRESS;                                                  25239000
         END;      %10                                                  25240000
                                                                        25241000
    BUFF~GETSPACE(57,0,0) + 2;                                          25242000
    M[BUFF-2].[9:6] ~ 0;                                                25242050
    READBUFF;                                                           25242100
    STAJG.[23:2] ~ 0;                                                   25242500
$INCLUDE 25246001, IF DATACOM AND DCSPO AND NOT INQUIRY;                25242999
    STREAM(X~PARAMETER.[36:12]=0,Y~PARAMETER.[33:3]=4,QV,A~BUFF);       25243000
          BEGIN                                                         25244000
          X(DS ~ 30 LIT"{! LAST INPUT DISCARDED BY MCP ");              25244100
          Y(DS~2 LIT "{!";       DS~1 LIT""";DS~13 LIT"READ-TO-CLEAR";  25244200
             DS~ 1 LIT """; DS~16 LIT "  INVOKED AFTER ";               25244300
             SI ~ LOC QV; DS ~ 8 DEC;                                   25244400
             DS~ 9 LIT " SECS.{!~"; DI~DI-17;DS~7 FILL;JUMP OUT TO XI;);25244500
          DS ~  28 LIT "{!STATION NOT ASSIGNED{!~   ";                  25245000
             XI:                                                        25245900
          END;                                                          25246000
    GO TO WRITEBUFF;                                                    25247000
WRITEBUFF:                                                              25279000
    IF SPOSTA THEN                                                      25280000
         SPOUT(BUFF&(STA.[9:9] AND @757)[9:39:9] )                      25280400
    ELSE                                                                25280500
         FORGETSPACE(  BUFF);                                           25280600
    GO TO EGRESS;                                                       25281000
BUFBUSYNORM:                                                            25281500
    IF STA.D19 THEN GO BUFOVRFLW;                                       25281600
    IF NINETEEN THEN                                                    25282000
         BEGIN                                                          25282500
         IF NINETEENNOTREADING THEN                                     25283000
              BEGIN                                                     25283050
              INDEPENDENTRUNNER(P(.NINETEENREADER),0);                  25283100
              NINETEENNOTREADING~ FALSE;                                25283200
              END;                                                      25283210
         STAJG~ P(DUP,LOD) OR @40040000;                                25283220
         GO EGRESS;                                                     25283300
         END;                                                           25283310
IDLENORM:                                                               25283400
CHECKFOROUTPUT:                                                         25283500
                                                                        25283999
    DCWRITE(ABS(STA));                                                  25284000
    GO TO EGRESS;                                                       25285000
BUFORSTANOTRDY:                                                         25286000
IDLEAB:                                                                 25287000
$ INCLUDE 25287091, IF RJE;                                             25287004
IF STA THEN  %RJE                                                       25287005
BEGIN IF PARAMETER.[CF]!0 THEN                                          25287010
    BEGIN ACTIVEINT;                                                    25287015
         IF STACURR.[30:1] THEN ELSE GO TO EGRESS;                      25287020
    END;                                                                25287025
    STATIONMESSAGEWRITER(0&STA[9:9:9]);                                 25287030
    WHILE (NT1:=P(RJEWAITQ,0&STA[9:9:9],LLL,0,INX,.NT2,STD)).           25287035
           [9:9] = STA.[9:9] DO                                         25287040
    BEGIN M[NT1]:=(*P(DUP))&NT1[FTF];                                   25287045
         M[NT1.[FF]].[CF]:=NT1;                                         25287050
         FORGETSPACE(NT2);                                              25287055
    END;                                                                25287060
    STACURR:=@2000001&STA[9:9:9];                                       25287065
    NT1:=(GETSPACE(10,0,0)+2)&(P(DUP)+1)[15:CF];                        25287070
    M[NT1 INX NOT 0]:=0&STA[9:9:9];                                     25287075
    LGINOUT(NT1,2);                                                     25287080
    GO TO EGRESS;                                                       25287085
END;                                                                    25287090
IF SPOSTA THEN                                                          25287095
BEGIN                                                                   25287100
    ACTIVEINT;                                                          25287225
    IF NOT STACURR.[30:1] THEN                                          25287250
         BEGIN                                                          25287300
                                                                        25287400
         IF IT=3 THEN                                                   25287450
              BEGIN                                                     25287460
              STACURR.[23:2] ~ 0;                                       25287470
              STREAM(BUFF~ BUFF~ BUFF-1);  DS~ 6 LIT "DEL{!~";          25287472
              RD~ BUFF INX (0&STA[9:9:9]&1[3:47:1]);                    25287474
              WRITERD;                                                  25287478
              FORGETSPACE(BUFF);                                        25287480
              IF NINETEEN THEN                                          25287481
                   BEGIN   ;                                            25287482
                        STAJG.[34:1]~1; GO BUFBUSYNORM;                 25287492
                                                                        25287493
                   END;                                                 25287494
              END;                                                      25287496
         GO TO CHECKFOROUTPUT;                                          25287500
         END;                                                           25287600
                                                                        25287700
    IF IT!3 THEN                                                        25288000
         BEGIN                                                          25288100
         IT~ 3;                                                         25288200
         BUFF ~ GETSPACE(14,0,0)+3;                                     25289000
         END;                                                           25289100
    M[BUFF] ~ FLAG(0&"ZZ~~" [1:25:23]);                                 25289500
    GO TO LOGINOUT;                                                     25290000
    END;                                                                25290100
IF IT = 3 THEN FORGETSPACE(BUFF-1);                                     25290200
    GO TO CHECKFOROUTPUT;                                               25290300
                                                                        25291000
WRITERDY:                                                               25292000
    BEGIN     %12                                                       25293000
    STACURR.[25:1] ~ STA.[25:1];                                        25294000
    IF EF = @0040 THEN  % WRITERDYNORM                                  25295000
         GO TO CHECKFOROUTPUT;                                          25296000
                                                                        25297000
    IF EF = @1040 THEN  % WRITERDYAB, (IF NO WIP, THE WRU)              25298000
         BEGIN     %12.1                                                25298100
         IF WRITEBIT THEN    % MISSING SYNCS FOR 201 OR NO TRAFFIC      25299000
              BEGIN     %12.2% RESPONSE FROM POLL.                      25299100
$INCLUDE 25299301, IF DCSPO AND DATACOM AND NOT INQUIRY;                25299199
              IF SPOSTA THEN                                            25299200
                   MARKSPOSTA(STA,"OUT");                               25299300
              IF NINETEEN THEN                                          25299310
                   GO BUFBUSYNORM;                                      25299320
              GO TO CHECKFOROUTPUT;                                     25299400
              END;      %12.2                                           25300000
$INCLUDE 25314401, IF DATACOM AND DCSPO AND NOT INQUIRY;                25300999
    IF PARAMETER.[36:12]!0 AND STA.[30:1] THEN                          25301000
         BEGIN                                                          25301100
         EGGENTER(P(.INQUPT),NFLAG(RD)&0[CTC], 4);                      25301200
         GO TO EGRESS;                                                  25301300
         END;                                                           25301400
    BUFF ~ GETSPACE(5,0,0)+2;                                           25301500
    STREAM(A~STA.[9:4],B~STA.[14:4],C~BUFF);                            25302000
         BEGIN                                                          25303000
         DS ~ 10 LIT "{!<B-5500 ";                                      25304000
         SI ~ LOC A;                                                    25305000
         DS ~ 2 DEC;                                                    25306000
         DS ~ 1 LIT "/";                                                25307000
         SI ~ LOC B;                                                    25308000
         DS ~ 2 DEC;                                                    25309000
         DS ~ 4 LIT "{!>~";       % > IS X-ON.                          25310000
         END;                                                           25311000
    STAJG.[22:9] ~ @002;                                                25312000
    IF NOT SPOSTA THEN                                                  25313000
              MARKSPOSTA(STA,"IN");                                     25313500
    RD ~ BUFF INX ( 0& STA[9:9:9] & 1 [3:47:1]);                        25314000
    IF WRITABLE THEN                                                    25314100
         WRITERD;                                                       25314200
    FORGETSPACE(BUFF);                                                  25314300
         GO TO EGRESS;                                                  25314400
         END;      %12.1                                                25314500
    GO TO UNDEFINED;                                                    25314990
    END;      %12                                                       25315000
EGRESS:                                                                 25321000
IF PARAMETER.[36:12] ! 0 THEN                                           25321100
    BEGIN                                                               25321200
    INQUPTSTOPPED ~ TRUE ;                                              25322000
                                                                        25323000
                                                                        25324000
    KILL([PARAMETER]);                                                  25325000
    END;                                                                25326000
END INQUPT;   %1.                                                       25327000
                                                                        25900000
                                                                        25901000
                                                                        25902000
                                                                        25903000
                                                                        25904000
                                                                        25905000
                                                                        25906000
                                                                        25907000
                                                                        25908000
                                                                        25909000
$INCLUDE 26999998, IF INQUIRY AND NOT DATACOM;                          25999999
     PROCEDURE INQUPT(T);VALUE T;REAL T;                                26000000
    BEGIN REAL RCW=+0;%                                                 26001000
         REAL Z=+1;INTEGER BIT=+2,TU=+3,LINK=+4,AD=+5;                  26002000
          ARRAY FIB=+6[*];LABEL START;%                                 26003000
     P(GETSPACE(128,0,0)+1,STS,T,RCW,0,RDS,0,XCH,CFX,STF,0,0,0,0,0,0);  26004000
              STACKUSE~TRUE;%                                           26005000
                                                                        26006000
                                                                        26007000
                                                                        26008000
         IF Z~(T=1) THEN BEGIN                                          26009000
   START:IF(T~DCB[NEXTINQ])     =0 THEN  DCB[NEXTINQ]~%                 26010000
            T~    GETSPACE(BUFFSIZE,5,TRUE)+2; T~T  OR @400000040000000;26011000
         IOREQUEST(-T,T,[T] &   30[12:42:6]);%                          26012000
     SLEEP([T],IOMASK) END;IF T.[8:1] THEN TU~T.[14:4] ELSE TU~T.[10:4];26013000
         IF T.[27:1] THEN  % OUTPUT READY%                              26014000
              BEGIN%                                                    26015000
                IF(LINK~P(ILL,0&TU[14:44:4],LLL,0,INX,.  T,STD)).[13:5] 26016000
                =TU THEN%                                               26017000
                   BEGIN%                                               26018000
                        M[LINK.[FF]].[CF]~LINK;%                        26019000
                        M[LINK.[CF]].[FF]~LINK.[FF];AD~M[T-1].[CF];%    26020000
              M[T]~0;%                                                  26021000
                        FIB~M[AD-3]; LINK~ FIB[13].[10:9];%             26022000
                        DO LINK~LINK-1 UNTIL M[AD+LINK].[CF]=T+1 OR%    26023000
                        LINK<0; IF LINK<0 THEN  DO UNTIL 0;%            26024000
                        AD~AD+LINK;%                                    26025000
IOREQUEST(M[AD] OR @2000000000,NFLAG(M[AD]&0[8:8:16]&TU[28:43:5]&       26026000
     TU[13:43:5]),M[T-1]) END                                           26027000
                    ELSE%                                               26028000
         IF NOTIFYOP AND Z THEN                                         26029000
              BEGIN%                                                    26030000
                   ORF~ORF OR TWO(TU);ORR~ORR OR TWO(TU);%              26031000
                   T~GETSPACE(3,0,0)+2;%                                26032000
                   STREAM(TU,T);BEGIN%                                  26033000
                             SI~LOC TU;%                                26034000
                             DS~3 LIT"TU ";%                            26035000
                             DS~2 DEC;DS~15 LIT" WAITING FOR O~";%      26036000
                             END;%                                      26037000
                   SPOUT(T);%                                           26038000
              END ELSE ORR~ORR OR TWO(TU) ;%                            26039000
              END%                                                      26040000
         ELSE IF T.[CF]!DCB[NEXTINQ] THEN                               26041000
              BEGIN%                                                    26042000
                   DCB[NEXTINQ]~-DCB[NEXTINQ]&(T.[CF]-DCB[NEXTINQ])[CTF]26043000
    &TU[13:43:5];  NEXTINQ~NEXTINQ+1 AND 15;%                           26044000
              END;%                                                     26045000
         IF Z THEN IF (INQCT~INQCT-1) > 0 THEN GO TO START;             26046000
KILL([T]);                                                              26047000
    END INQUPT;%                                                        26048000
$INCLUDE 27999999, IF DATACOM AND NOT INQUIRY;                          27000000
PROCEDURE NINETEENREADER(STACK);  VALUE STACK; REAL STACK;              27001000
    BEGIN                                                               27002000
COMMENT:      DC19Q HOLDS INFORMATION NEEDED BY THE MCP FOR             27003000
              TYPE 19 DATACOM I/O.                                      27004000
              THE VARIABLE DC19Q IS THE HEAD OF THE QUEUE.  THE QUEUE   27005000
              IS FORWARD LINKED THROUGH THE C FIELDS AND BACKWARD       27006000
              LINKED THROUGH THE F FIELDS OF THE FIRST WORD IN EACH     27007000
              ENTRY.                                                    27008000
              IF DC19Q IS POSITIVE, THE QUEUE IS INTERLOCKED WHILE      27008100
              A NEW MEMBER IS BEING ADDED.                              27008200
              THE FORMAT OF EACH ENTRY IS:                              27009000
              WORD 0:   QUEUE WORD                                      27010000
                   4:5 = MIX                                            27011000
                   9:9 = TU,STA                                         27012000
                   FF  = BACK LINK                                      27013000
                   CF  = FRONT LINK                                     27014000
              WORD 1:   READ Q HEAD                                     27015000
                   1:1 = TANKING IN PROCESS                             27016000
                   8:10= I/O BUFFER SIZE                                27017000
                   FF  = LAST ENTRY IN QUEUE (TANKED INPUT GOES HERE    27018000
                                              IF 1:1 = 0)               27019000
                   CF  = FIRST ENTRY IN QUEUE (LOOK HERE WHEN PROGRAM   27020000
                                               REQUESTS READ)           27021000
              WORD 2:   OUTPUT RESULT DISCRIPTION                       27022000
                        =1 IF BREAK,=3 IF EOT,=0 IF GOOD                27023000
              WORD 3:   BUFFER COUNT (IF THIS IS ZERO, MAKE HIM WAIT    27024000
                                      UNTIL IT IS GREATER THAN ZERO)    27025000
              WORD 4:   TOTAL NUMBER OF BUFFERS ASSIGNED                27026000
              READ QUEUE ENTRY:  (NOTE: SEE WORD 1 ABOVE)               27027000
                   WORD 0: (SECOND MEMORY LINK) IS QUEUE WORD           27028000
                        1:1= INPUT MESSAGE COMPLETED BIT                27029000
                        2:1= PARITY BRANCH FLAG                         27030000
                        3:1= END BRANCH                                 27030100
                        8:10=NUMBER OF WORDS IN MESSAGE                 27031000
                        FF = BACK LINK                                  27031500
                        CF = LINK TO NEXT ENTRY                         27032000
                   WORD 1: PLACE HOLDER                                 27033000
                        15:15 = COUNT OF WORDS LEFT IN AREA (IF THIS    27034000
                                         WERE TO GO NEGATIVE, ITS ALL   27035000
                                         OVER. ERROR FLAG IS SET        27036000
                                         INSTEAD)                       27037000
                        30:18 = STREAM ADDRESS OF WHERE TO MOVE NEXT    27038000
                                  487 BUFFER CHUNK                      27039000
                   WORD 2: FIRST WORD OF MESSAGE AREA                   27040000
              ;                                                         27041000
    REAL RCW=+0;                                                        27042000
    REAL RD=+1,STA=+2,ROW=+3,BUFFER=+4,W=+5,L=+6,N=+7,BUFF=+8;          27043000
    BOOLEAN ACTIVITY=+9;                                                27044000
    REAL Q=+10;                                                         27044500
    LABEL LOOPEND,CHECKGM,DOIO;                                         27045000
$ INCLUDE 27045201, IF RJE;                                             27045099
    LABEL      MSG,ACK,ENQ,EOT,NAK,INVLD,SMWR,NOGO;                     27045100
    SWITCH SW:=MSG,ACK,ENQ,EOT,NAK,INVLD;                               27045200
    DEFINE    STACURR=STATION[STA.[14:4],STA.[9:4]]#,                   27046000
              ELEMENT[ELEMENT1]=MEMORY[ROW INX ELEMENT1]#,              27047000
              IOBUFFERSIZE=MEMORY[ROW INX 1].[8:10]#,                   27048000
              ERROR= MEMORY[MEMORY[ROW INX 1].[FF]].[2:1]#,             27049000
              BUFFERNEEDED= MEMORY[ROW INX 1]>0#,                       27050000
              AVAILABLEBUFFERS= MEMORY[ROW INX 3]#;                     27051000
    P(GETSPACE(128, 12,0)+1,STS,STACK,RCW,0,RDS,0,XCH,CFX,STF);         27052000
    P(0,0,0,0,0,0,0,0,0,0);                                             27053000
    STACKUSE~ TRUE;                                                     27053500
    BUFF~ GETSPACE(56,5,0) INX 2;                                       27054000
    ROW~ DC19Q;                                                         27055000
    DO BEGIN                                                            27056000
         IF (STA~ 0&M[ROW][9:9:9]).[9:9]=@777 THEN                      27057000
              BEGIN                                                     27058000
              ACTIVITY~ FALSE;                                          27059000
              GO LOOPEND;                                               27060000
              END;                                                      27061000
         IF NOT(STA~ STACURR).[24:1] THEN GO LOOPEND;                   27062000
         IF BUFFERNEEDED THEN                                           27063000
              BEGIN                                                     27064000
$ INCLUDE 27065001, IF RJE;                                             27064999
              IF NOT STA THEN                                           27065000
              IF AVAILABLEBUFFERS!0 THEN                                27065100
              AVAILABLEBUFFERS:=(*P(DUP))-1 ELSE GO TO LOOPEND;         27065200
              BUFFER~ GETSPACE(1+W~ IOBUFFERSIZE, 5, 0) INX 1;          27066000
              L~ M[ELEMENT[1].[FF]];                                    27067500
              M[ELEMENT[1].[FF]].[CF]~ BUFFER;                          27068000
              ELEMENT[1]~ P(DUP,LOD,SSN)&BUFFER[CTF];                   27069000
              M[BUFFER]~ (ROW INX 1)&L[CTF];                            27070000
              BUFFER~ BUFFER+1;                                         27071000
              M[BUFFER]~BUFFER~ (BUFFER+1) & W [15:33:15];              27077000
              END                                                       27078000
         ELSE                                                           27079000
              BUFFER ~ M[ELEMENT[1].[FF]+1];                            27080000
         ACTIVITY~ TRUE;                                                27081000
         IF STA.[33:1] AND NOT STA THEN                                 27081100
              BEGIN                                                     27081200
              RD~STA.[28:1];                                            27081202
              STACURR~ P(DUP,LOD)&0[22:22:9]&0[33:46:2];                27081205
              IF STA.[34:1] THEN                                        27081210
                   BEGIN    ; %DELETE                                   27081215
                   ERROR~ 0;                                            27081220
                   M[BUFFER~ ELEMENT[1].[FF]+1]~ (BUFFER+1) &           27081230
                        ELEMENT[1][20:8:10];                            27081240
                   GO LOOPEND;                                          27081250
                   END;                                                 27081260
              IF STA.[27:1] THEN                                        27081262
                   BEGIN                                                27081264
            STACURR:=NABS(*P(DUP))&@21[23:43:5]; %WPM                   27081266
                   ELEMENT[1]~ P(DUP,LOD,SSP);                          27081268
                   M[BUFFER]~ "WRTAB4";                                 27081270
                   M[BUFFER INX NOT 1]~ P(DUP,LOD,SSN)&@100001[2:32:16];27081272
                   IF SMWSTOPPED AND NOT EMPTYSMQ THEN                  27081274
                        BEGIN                                           27081276
                        SMWSTOPPED~ FALSE;                              27081278
                        INDEPENDENTRUNNER(P(.STATIONMESSAGEWRITER),0);  27081280
                        END;                                            27081282
                   GO LOOPEND;                                          27081284
                   END;                                                 27081286
              IF NOT RD THEN                                            27081300
                   BEGIN                                                27081340
                   M[ELEMENT[1].[FF]].[3:1]~ 1;                         27081400
                   GO CHECKGM;                                          27081440
                   END;                                                 27081460
              ERROR~TRUE;                                               27081500
              M[RD~ ELEMENT[1].[FF]+2]~ "BUFOV1";                       27081510
              IF (L~ M[RD-1]) INX 0 = RD THEN                           27081520
                   M[RD-1]~ (RD+1)&(L.[15:15]-1)[15:33:15];             27081530
              GO LOOPEND;                                               27081550
              END;                                                      27081600
         STACURR.[22:1]~ TRUE;                                          27081700
         RD:=(BUFF INX (@7570000000000 AND STA)) OR @0400000040000000;  27082000
         IOREQUEST(NABS(RD), RD, [RD]&30[12:42:6]);                     27083000
         SLEEP([RD],IOMASK);                                            27084000
         W~ (RD INX 0)- BUFF;                                           27085000
         STACURR.[23:8]~ 0;                                             27085500
         IF W>BUFFER.[15:15] THEN                                       27086000
              BEGIN                                                     27087000
              W~ BUFFER.[15:15];                                        27088000
              M[ELEMENT[1].[FF]+1].[14:1]~1;                            27088300
                                                                        27088400
              ERROR~ TRUE;                                              27089000
              END;                                                      27090000
         IF W{0 THEN GO  CHECKGM;                                       27091000
         IF (L~ BUFFER.[30:3]!0) THEN                                   27092000
              STREAM(W,S:=BUFF,BUFFER);                                 27093000
                   BEGIN                                                27094000
                   SI~ S;                                               27095000
                   W(DS~ 8 CHR);                                        27096000
                   END                                                  27097000
         ELSE                                                           27098000
              MOVE(W,BUFF,BUFFER);                                      27099000
         IF M[ELEMENT[1].[FF]+1].[14:1] THEN                            27099100
              M[ELEMENT[1].[FF]+2]~"TOOLN2";                            27099200
         N:=(W MOD 7) NEQ 0 AND RD.[25:1];                              27100000
         M[ELEMENT[1].[FF]+1]~ ((BUFFER INX W)-(Q~ N AND NOT L))        27101000
              &(Q|4)[30:45:3]&(BUFFER.[15:15]-W+Q)[15:33:15];           27102000
CHECKGM:IF (RD.[23:9] AND @467)!0 THEN ERROR~TRUE;                      27103000
$ INCLUDE 27103701, IF RJE;                                             27103499
         IF RD.[28:1] AND STA THEN                                      27103500
         STREAM(S:=ELEMENT[1].[FF]+2);                                  27103600
         BEGIN SI:=S; IF SC!"$" THEN DS:=LIT "~"; END;                  27103700
         IF NOT RD.[25:1] THEN                                          27104000
              BEGIN                                                     27105000
$ INCLUDE 27105501, IF RJE;                                             27105499
              IF NOT STA THEN                                           27105500
              IF STA.[4:4]!STA.[9:4] OR STA.[18:4]!STA.[14:4] THEN      27106000
                   BEGIN     ;       % CARRIAGE RET. LINE FEED          27107000
                   L:="{<!";  % CR LF                                   27108000
DOIO:              STREAM(L,R:=RD:=[W] INX (0&STA[9:9:9]&1[3:47:1]));   27108200
                   BEGIN SI:=LOC L; SI:=SI+5;                           27108400
                        IF SC="{" THEN DS:=2 CHR ELSE SI:=SI+2;         27108600
                        DS:=CHR; DS:=LIT "~";                           27108800
                   END;                                                 27109000
                   IOREQUEST(NABS(RD&@113[25:40:8]), RD,                27110000
                        [RD]&30[12:42:6]);                              27110100
                   STACURR.[29:1]~ 1;                                   27110200
                   SLEEP([RD],IOMASK);                                  27111000
$ INCLUDE 27111501, IF RJE;                                             27111499
                   IF STA THEN GO TO LOOPEND;                           27111500
                   END;                                                 27112000
$ INCLUDE 27112501, IF RJE;                                             27112099
              IF STA AND ERROR THEN                                     27112100
              BEGIN M[BUFFER:=ELEMENT[1].[FF]+1]:=(BUFFER+1)&           27112200
                        ELEMENT[1][20:8:10];  %REUSE READ BUFFER        27112300
                   ERROR:=0; L:="5"; GO TO NOGO;                        27112400
              END;                                                      27112500
              ELEMENT[1]~ P(DUP,LOD,SSP);                               27113000
              M[ELEMENT[1].[FF]  ]~ P(DUP,LOD,SSN)&((L~ M[W~            27114000
                   ELEMENT[1].[FF]+1] INX 0)-W)[8:38:10];               27115000
$ INCLUDE 27115451, IF RJE;                                             27115009
              IF (STA:=STACURR:=(*P(DUP))&0[22:47:1]) THEN              27115010
              BEGIN STREAM(W:=W:=W+1:L:=[L]);                           27115020
                   BEGIN DS:=5 LIT "}&%$5";DI:=L; SI:=W;                27115030
                        5(IF SC=DC THEN JUMP OUT; TALLY:=TALLY+1;       27115040
                          SI:=SI-1); W:=TALLY;                          27115050
                   END;                                                 27115060
                   IF (L:=P) GTR 0 THEN                                 27115070
                   BEGIN M[W-2].[1:17]:=0;                              27115072
                        M[W-1]:=W&(ELEMENT[1]:=                         27115074
                                 NABS(*P(DUP)))[20:8:10];               27115076
                   END;                                                 27115078
                   IF L LSS 4 THEN STACURR.[42:2]:=0;                   27115080
                   GO TO SW[L];                                         27115090
MSG:               IF NOT STA.[33:1] THEN                               27115100
                   BEGIN STACURR.[33:1]:=1;                             27115110
                        INDEPENDENTRUNNER(P(.RJINPUT),STA);             27115120
                   END;                                                 27115130
                   STACURR.[44:1]:=0;                                   27115140
                   IF STA.[32:1] THEN                                   27115150
                   BEGIN STREAM(A:=1:W);                                27115160
                        BEGIN SI:=LOC A; DI:=DI+2;                      27115170
                             IF 2 SC=DC THEN                            27115180
                             BEGIN DI:=DI+5; SI:=SI+4;                  27115190
                                  IF 2 SC = DC THEN TALLY:=1;           27115200
                             END;                                       27115210
                             A:=TALLY                                   27115220
                        END;                                            27115250
                        IF P THEN  %CONTROL MSG CHECK IT                27115260
                        BEGIN STACURR.[22:1]:=1; GO LOOPEND; END;       27115270
SMWR:                   RUNSMW; GO TO LOOPEND;                          27115280
                   END;                                                 27115290
                   L:="&"; GO TO DOIO;                                  27115300
ACK:               STACURR.[44:2]:=STA.[32:1]+2;                        27115310
                   IF STA.[32:1] THEN GO TO SMWR;                       27115320
                   L:="$"; GO TO DOIO;                                  27115330
ENQ:               STACURR.[45:1]:=1; L:="&"; GO TO DOIO;               27115340
EOT:               STACURR.[45:1]:=0; GO TO SMWR;                       27115350
NAK:               STACURR.[31:1]:=1; GO TO NOGO;                       27115360
INVLD:             L:="%";  %SEND OUT ENQ UNLESS IT IS FOURTH RETRY     27115390
NOGO:              STACURR.[42:2]:=NT5:=STA.[42:2]+1;  %BUMP RETRY COUNT27115400
                   IF NT5 = 4 THEN  %THROWAWAY MESSAGES FOR THIS LINE   27115410
                   BEGIN INQUPT(@100000000&STA[9:9:9]);                 27115420
                        GO TO LOOPEND;                                  27115430
                   END ELSE IF L=4 THEN GO SMWR ELSE GO TO DOIO;        27115440
             END;                                                       27115450
$ OMIT 27115901, IF RJE;                                                27115899
               STACURR.[22:1]:=0;                                       27115900
              STREAM(D~ L-1);                                           27116000
                   BEGIN                                                27117000
                   SI~ D;                                               27118000
                   16(IF TOGGLE THEN DS~ LIT " " ELSE                   27119000
                        IF SC="~" THEN DS~ LIT " " ELSE                 27120000
                           DI~ DI+1; SI~ SI+1);                         27121000
                   END;                                                 27122000
              DCWRITE(ABS(STA));                                        27122600
              END;                                                      27123000
LOOPEND:                                                                27124000
         END UNTIL (ROW~ M[ROW]).[9:9]=@777 AND NOT ACTIVITY;           27125000
    NINETEENNOTREADING~ TRUE;                                           27126000
    FORGETSPACE(BUFF);                                                  27126500
    KILL([STACK]);                                                      27127000
    END NINETEENREADER;                                                 27128000
PROCEDURE LIBRARYLOAD;                                                  28000000
BEGIN                                                                   28001000
    REAL COMMON=-4;                                                     28002000
    REAL TYPE,SEG,UNITNO,EADD,FN,SN,U,T,Q,SIZE,N2,LAST;                 28003000
    REAL I,J,K,N,IC,Y,MID,FID,REEL,W,LOADING,N1;                        28004000
    ARRAY AROW[*],LBL[*],X[*],IOD[*],H[*],S[*],LAB[*];                  28005000
    DEFINE DSED=(TERMIX.[CF]=P1MIX)#,                                   28006000
         SPACER=5&@1400[CTF]#,                                          28007000
         MM=@37700040#,                                                 28008000
         SM=@37700000#;                                                 28009000
    LABEL FINDIT,PARERR,LOOP,WATE,BACK,FINDFILENAMES,                   28010000
          EXT,OK,WY,                                                    28010100
         LOADEM,LAY,FALLOUT,ENDLOOP,EXIT;                               28011000
    BOOLEAN BB;                                                         28011010
$ INCLUDE 28011021,IF B6500LOAD;                                        28011019
    ARRAY XX[*],BCL[*];REAL CT,NT1,NT2;                                 28011020
    BOOLEAN B6500;                                                      28011030
$ INCLUDE 28012401,IF B6500LOAD;                                        28011999
    BOOLEAN SUBROUTINE UNSCREW;                                         28012000
    BEGIN                                                               28012010
    NT1:=CT|8;                                                          28012020
    STREAM(AD:=(XX  INX(NT1 DIV 48))&(NT1 DIV 6)[30:45:3],              28012030
           BITS:=((NT1-CT|6)MOD 6)DIV 1,N1:=0,N2:=0,N3:=0,BCL);         28012040
    BEGIN                                                               28012050
    SI:=AD;SKIP BITS SB;                                                28012060
    4(DI:=DI+6;SKIP 4 DB;8(IF SB THEN DS:=SET ELSE DS:=RESET;SKIP SB)); 28012070
    SI:=BCL;SI:=SI+24;DI:=LOC N2;DS:=WDS;                               28012080
    SI:=AD;SKIP BITS SB;SKIP 32 SB;N2(SKIP 8 SB);                       28012082
    DI:=BCL;DI:=DI+38;SKIP 4 DB;                                        28012090
    8(IF SB THEN DS:=SET ELSE DS:=RESET;SKIP SB);N3:=DI;SI:=N3;         28012100
    SI:=SI-8;DI:=LOC N3;DS:=WDS;DI:=BCL;DI:=DI+40;SI:=AD;               28012110
    SKIP BITS SB;SKIP 32 SB;                                            28012112
    N2(DI:=DI+7;SKIP 2 SB;6(IF SB THEN DS:=SET ELSE DS:=RESET;SKIP SB));28012120
    SKIP 8 SB;                                                          28012130
    N3(DI:=DI+7;SKIP 2 SB;6(IF SB THEN DS:=SET ELSE DS:=RESET;SKIP SB));28012140
    END OF EBCDIC FORMATTING;                                           28012150
    NT2:=BCL[3]+BCL[4]-1;                                               28012160
    FOR NT1:=0 STEP 1 UNTIL NT2 DO BCL[NT1+5]:=P(DUP,LOD)+@20;          28012170
    CT:=CT+BCL[0];                                                      28012180
    STREAM(N1:=IF BCL[3] >7 THEN 7 ELSE BCL[3],                         28012190
     N2:=IF BCL[4]>7 THEN 7 ELSE BCL[4],N3:=BCL INX 5,N4:=0,N5:=[X[I]]);28012200
    BEGIN                                                               28012210
    DS:=16LIT"0       ";                                                28012220
    DI:=DI-15;N4:=DI;SI:=N3;                                            28012230
    N1(SI:=SI+7;DS:=CHR);DI:=N4;DI:=DI+8;                               28012240
    N2(SI:=SI+7;DS:=CHR);                                               28012250
    END;                                                                28012260
    IF  BCL[2]=1 THEN BEGIN X[I+1]:=X[I];X[I]:=0 END;                   28012270
    UNSCREW:=BCL[0]=0 OR (I:=I+2)>1024;                                 28012280
END OF TAPE DIRECTORY CONVERSION;                                       28012290
    SUBROUTINE FIXHDR;                                                  28012300
    BEGIN                                                               28012310
    BCL:=[M[CT:=SPACE(36)]]&36[8:38:10];                                28012320
    MOVE(30,CT-1,CT);                                                   28012330
    FOR NT1:=15 STEP 1 UNTIL 29 DO BCL[NT1-5]:=H[NT1];                  28012332
    BCL[7]~H[4];BCL[9].[43:5]~H[5].[23:5];                              28012340
    BCL[8]:=H[5].[28:20];BCL[3].[2:10]:=H[6].[1:10];                    28012350
    BCL[3].[30:18]:=H[6].[10:18];MOVE(30,BCL,H);                        28012360
    END OF FIXHDR;                                                      28012400
    SUBROUTINE GETASEGMENT;                                             28013000
    BEGIN                                                               28014000
         SEG:=S[29];                                                    28015000
         DISKWAIT(-S.[CF],30,SEG);                                      28016000
         FORGETESPDISK(SEG);                                            28017000
         I:=2;                                                          28018000
    END; % OF GETASEGMENT                                               28019000
    %*******************************************************            28045000
    SUBROUTINE ABORT;                                                   28046000
    BEGIN                                                               28047000
         IF LOADING THEN P(DIRECTORYSEARCH(X[J],X[J+1],5+LOADING),DEL); 28048000
         IF U}0 THEN                                                    28049000
         BEGIN                                                          28050000
              STOPTIMING(5,1023);                                       28051000
              STOPTIMING(0,1023);                                       28052000
              IF NOT UNIT[U].[16:1] THEN BLASTQ(U);                     28053000
              SETNOTINUSE(U,0);                                         28054000
         END;                                                           28055000
         WHILE S[29]!0 DO GETASEGMENT;                                  28056000
         IF UNITNO!0 AND LABELTABLE[UNITNO]=@214 THEN                   28057000
              LABELTABLE [UNITNO]~@114;                                 28058000
         STREAM(T~T~GETSPACE(5,0,0)+2);                                 28058100
         BEGIN DS~21LIT"LIBRARY LOAD ABORTED~"; END;                    28058200
         SPOUT (T);                                                     28058300
         GO INITIATE;                                                   28059000
    END; % ABORT                                                        28060000
    %***********************************************************        28061000
    BOOLEAN SUBROUTINE LABELCHECK;                                      28062000
    BEGIN                                                               28063000
         P(WAITIO(LAB INX @120540000000,0,U),DEL);                      28064000
$ INCLUDE 28064101,IF B6500LOAD;                                        28064099
         IF B6500 THEN P(WAITIO(SPACER,MM,U),DEL);                      28064100
           IF @40!WAITIO(SPACER,@40,U) THEN                             28065000
                P(WAITIO(@4740000005,0,U),DEL);                         28065610
         IF DSED THEN ABORT;                                            28066000
         IF (NOT B6500 AND ((NFLAG(LAB[0]).[6:42] EQV "LABEL  ")!NOT 0  28067000
         OR (NFLAG(LAB[2]).[6:24] EQV "FILE")!NOT 0))                   28067100
$ INCLUDE 28069101,IF B6500LOAD;                                        28068999
         AND (((NT1:=NFLAG(LAB[0])).[1:23] EQV "HDR1")!NOT 0 OR         28069000
         (NT1.[24:24] EQV "FILE")!NOT 0)                                28069100
         THEN BEGIN                                                     28070000
              STREAM(A~[TINU[U]],T~T~GETSPACE(10,0,0)+2);               28071000
              BEGIN SI~A;SI~SI+5;DS~LIT".";DS~3 CHR;                    28072000
                   DS~21 LIT" NOT A LIBRARY TAPE~";                     28073000
              END;                                                      28074000
              SPOUT(T); T~1;                                            28075000
         END ELSE T~0;                                                  28076000
         LABELCHECK~T;                                                  28077000
    END;                                                                28078000
    %***********************************************************        28079000
    SUBROUTINE FINDTHETAPE;                                             28080000
    BEGIN                                                               28081000
FINDIT:                                                                 28082000
         IF (U~FINDINPUT(MID,FID,REEL,-0,0,0,0,0,1,5)) < 0 THEN ABORT;  28083000
         RRRMECH:=TWO(U) OR RRRMECH;                                    28084000
$ INCLUDE 28084101,IF B6500LOAD;                                        28084099
         IF B6500 THEN P(WAITIO(SPACER,MM,U),DEL);                      28084100
         IF LABELCHECK THEN                                             28085000
         BEGIN                                                          28086000
              SETNOTINUSE(U,1);                                         28087000
              GO FINDIT;                                                28088000
         END;                                                           28089000
         STARTIMING(5,U);                                               28090000
         M[PRT[P1MIX,3] INX (5|REEL+3)].[23:1] := 1;                    28090500
         RDCTABLE[U].[8:6]:=P1MIX;                                      28091000
         STREAM (S~PRNTABLE[U].[18:30],T~[T]);                          28091100
         BEGIN SI~LOC S; DS~8DEC; DI~DI-7; DS~6FILL; END;               28091200
         IF OPNMESS THEN FILEMESS(" IN "&TINU[U][6:30:18],T,0,MID,1,0,0)28092000
    END; % OF FINDTHETAPE                                               28093000
    %***********************************************************        28094000
    BOOLEAN SUBROUTINE ENDOFREEL;                                       28095000
    BEGIN                                                               28096000
         BLASTQ(U);                                                     28097000
$ INCLUDE 28097201,IF B6500LOAD;                                        28097099
        IF B6500 THEN                                                   28097100
        FOR CT:=0 STEP 1 UNTIL 1 DO P(WAITIO(SPACER,MM,U),DEL);         28097200
    NT1:=WAITIO(LAB INX @120540000000,@40,U);                           28098000
         IF DSED THEN ABORT;                                            28099000
    IF ((NOT B6500) AND NFLAG(LAB[4]) AND NT1!@40)                      28101000
$ INCLUDE 28101101,IF B6500LOAD;                                        28101099
    OR((  NFLAG(LAB[0]).[1:23] EQV "EOV1")=NOT 0)                       28101100
    THEN BEGIN                                                          28102000
              STOPTIMING(5,1023);%                                      28103000
              SETNOTINUSE(U,0);                                         28104000
              REEL~REEL+1;                                              28105000
              FID:=LAB[2];                                              28106000
              FINDTHETAPE;                                              28107000
              ENDOFREEL~TRUE;                                           28108000
         END ELSE ENDOFREEL~FALSE;                                      28109000
    END;      %   OF SUBROUTINE  ENDOFREEL                              28110000
    %***********************************************************        28111000
    BOOLEAN SUBROUTINE CHECK;                                           28112000
    BEGIN                                                               28113000
         IF (Y:=IOD[W]).[27:2]!0 THEN % PARITY ERROR OR EOF             28114000
         BEGIN                                                          28115000
              IF Y.[7:1] AND Y.[27:1] THEN % END OF REEL                28116000
              BEGIN                                                     28117000
                   IF NOT ENDOFREEL THEN                                28118000
                   BEGIN                                                28119000
                        P(WAITIO(@4740000020,@377,U),DEL);              28120000
                        LBMESS(-X[J],X[J+1],"NOT ","LOADED(","UNEXPED", 28120500
                               " EOF).",TINU[U]);                       28121000
                        Y ~ 1;                                          28121500
                        GO TO EXT;                                      28121600
                   END;                                                 28122000
                   IF WAITIO(IOD[W] INX @16040540000000,SM,U)!0 THEN    28123000
                        GO PARERR;                                      28124000
                   IF IOD[1-W].[7:1] THEN % ANOTHER TAPE IO IN PROGRESS 28125000
                   BEGIN                                                28126000
                        IF WAITIO(IOD[1-W],SM,U)!0 THEN GO PARERR;      28127000
                        IOD[1-W]:=(*P(DUP)) OR IOMASK;                  28128000
                   END;                                                 28129000
                   Y:=0;                                                28129100
              END ELSE % PARITY ERROR                                   28130000
PARERR:       BEGIN                                                     28131000
                   LBMESS(-X[J],X[J+1],"NOT ","LOADED(",                28132000
                        IF Y.[7:1] THEN "TAPE P" ELSE "DISK P",         28133000
                        "ARITY),",TINU[U]);                             28134000
                   Y:=1;                                                28135000
              END;                                                      28136000
         END ELSE % CHECK RECORD SIZE                                   28137000
         IF Y.[7:1] THEN                                                28138000
         BEGIN                                                          28139000
         IF (Y:=((M[AROW[W] INX NOT 0]!900+B6500)                       28140000
             AND N LSS N1)) THEN                                        28140100
                   LBMESS(-X[J],X[J+1],"NOT ","LOADED(","INV REC",      28141000
                        "SIZE),",TINU[U]);                              28142000
         END ELSE Y:=0;                                                 28143000
EXT:     CHECK ~ Y;                                                     28144000
    END; % OF CHECK                                                     28145000
    %***********************************************************        28146000
    SUBROUTINE IO;                                                      28147000
    BEGIN                                                               28148000
         IF IC THEN                                                     28149000
         BEGIN                                                          28150000
              IOREQUEST(-(IOD[W]:=(AROW[W] INX @540000000)              28151000
                &(SIZE+B6500)[8:38:10]&TINU[U][3:3:5])OR @2017700000,   28152000
                   IOD[W],[IOD[W]]&U[12:42:6]);                         28153000
              N:=N+30;                                                  28154000
         END ELSE                                                       28155000
         BEGIN                                                          28156000
         DISKIO(IOD[W],AROW[W] INX B6500-1,(T:=IF(T:=LAST-Q+1)          28157000
                  LSS 30 THEN 30|T ELSE 900),Q);                        28158000
              Q:=Q+30;                                                  28159000
$INCLUDE 28159101, IF STATISTICS;                                       28159099
         COUNTUP(18,T DIV 30);                                          28159100
         END;                                                           28160000
    END; % OF IO                                                        28161000
    %***********************************************************        28162000
    BOOLEAN SUBROUTINE LOADAROW;                                        28163000
    BEGIN                                                               28164000
         N1 ~ H[8]; SIZE ~ 900;%                                        28165000
         LAST~(Q~H[K+9])+H[8]-1;%                                       28166000
         IOD[1]:=N2:=W:=N:=0;                                           28167000
         IC:=1;                                                         28168000
         IO; % FIRE UP FIRST TAPE READ                                  28169000
         W ~1;% SWAP BUFFERS                                            28170000
         IF N<N1 THEN% CANNOT DO ROW WITH ONE READ                      28171000
LOOP:    IO;                                                            28172000
WATE:    COMPLEXSLEEP((((IOD[0] OR IOD[1]) AND IOMASK)!0) OR DSED);     28173000
         IF DSED THEN ABORT;                                            28174000
         N2~N2+15;% COUNT NUMBER OF OPERATIONS COMPLETED                28175000
         W~IF (IOD[0] AND IOD[1] AND IOMASK)!0 THEN 1-W ELSE            28176000
              ((IOD[1] AND IOMASK)!0);                                  28177000
         IF NOT(Y~CHECK) THEN% NO ERRORS WERE DETECTED                  28178000
         BEGIN% KEEP GOING                                              28179000
              IC~1-IOD[W].[7:1];% SWAP UNITS                            28180000
              IF N<N1 THEN GO TO LOOP;% ROW IS NOT FINISHED             28181000
              IF N2+30}N THEN SIZE~T; % CHANGE SIZE FOR LAST RECORD     28182000
              IF IOD[W].[24:1] THEN GO TO LOOP;% MORE WRITING TO DO     28183000
              IF N2<N THEN BEGIN IOD[W]~0; GO TO WATE END;%             28184000
         END;%                                                          28185000
         LOADAROW:=Y;                                                   28186000
    END; % OF LOADAROW                                                  28187000
    %***********************************************************        28188000
     SUBROUTINE SPACIT;%                                                28189000
    BEGIN  %                                                            28190000
BACK:    WHILE WAITIO(SPACER,MM,U)!@40 DO                               28191000
         BEGIN                                                          28192000
              IF DSED THEN ABORT;                                       28193000
              IF STOPJOB=P1MIX THEN STOPM(0);                           28194000
         END;                                                           28195000
         IF ENDOFREEL THEN GO BACK;                                     28196000
    END; % SPACIT                                                       28197000
    %***********************************************************        28198000
    S:=[M[SPACE(30)]]&30[8:38:10];                                      28199000
    TYPE:=COMMON.[FF];                                                  28200000
    S[29]:=COMMON.[CF];                                                 28201000
$ INCLUDE 28201101,IF B6500LOAD;                                        28201099
    B6500:=COMMON.[15:1];                                               28201100
    COMMON ~ IF COMMON.[9:6]!0 THEN -COMMON.[9:6] OR M ELSE             28201200
             IF COMMON.[1:1] THEN 1 OR M ELSE                           28201300
             IF COMMON.[2:1] THEN 2 OR M ELSE 0;                        28201400
    REEL:=1;                                                            28202000
    GETASEGMENT;                                                        28203000
    STREAM(MID:=MID:=S[1],B:=PRT[P1MIX,3]);                             28204000
    BEGIN DS:=16 LIT"0DIRCTRY0DISK   ";DS:=25 LIT"0";SI:=LOC MID;       28205000
         SI:=SI+1;DS:=7 CHR;DS:=8 LIT"0FILE000";DS:=24 LIT"0";          28206000
    END;                                                                28207000
    UNITNO:=S[0].[2:6];                                                 28208000
    LAB:=[M[SPACE(15)]]&15[8:38:10];                                    28209000
    MID:=S[1];                                                          28210000
    FID:="FILE000";                                                     28211000
    FINDTHETAPE;                                                        28212000
    X:=[M[T:=SPACE(1024)]]&1023[8:38:10];                               28213000
    MID ~ LAB[1];                                                       28213100
    STARTIMING(0,18);                                                   28214000
    P(WAITIO((                                                          28215000
$ INCLUDE 28215003,IF B6500LOAD;                                        28215001
              IF B6500 THEN (XX:=X&(GETSPACE(1024,0,1)+2)[CTC]) ELSE    28215002
              X)&@5400[CTF],0,U),DEL);                                  28215004
$ INCLUDE 28215061,IF B6500LOAD;                                        28215009
    IF B6500 THEN                                                       28215010
         BEGIN                                                          28215020
         BCL:=XX&(GETSPACE(327,0,1)+2)[CTC];                            28215030
    CT:=12;I:=0;MOVE(327,BCL.[CF]-1,BCL);                               28215032
         DO UNTIL UNSCREW;                                              28215040
         FORGETSPACE(XX);FORGETSPACE(BCL);                              28215044
         M[T-1]:=I;X[I-2]:=@14;                                         28215050
         END;                                                           28215060
    IF DSED THEN ABORT;                                                 28216000
    IF (N:=M[T-1]) LSS 900 THEN                                         28217000
    BEGIN % GET RID OF EXTRA MEMORY SPACE IF NOT NEEDED                 28218000
         X:=[M[SPACE(N)]]&N[8:38:10];                                   28219000
         MOVE(N,T,X);                                                   28220000
         FORGETSPACE(T);                                                28221000
    END;                                                                28222000
FINDFILENAMES:                                                          28223000
    FOR I:=2 STEP 2 UNTIL 26 DO                                         28224000
    BEGIN                                                               28225000
         J:=-2;                                                         28226000
         IF (FN~S[I])=@14 THEN GO LOADEM;                               28227000
         SN~S[I+1];W~1;                                                 28228000
         WHILE X[J~J+2]!@14 DO % MARK FILES TO BE LOADED                28229000
              IF FN<0 OR (FN EQV X[J])=NOT 0 THEN                       28230000
              IF SN<0 OR (SN EQV X[J+1])=NOT 0 THEN W~X[J]~-X[J];       28231000
         IF W>0 THEN LBMESS(IF FN<0 THEN "     .=" ELSE -FN,            28232000
              IF SN<0 THEN "=      " ELSE SN,"NOT LOA","DED(NOT",       28233000
              " ON TAP","E),",TINU[U]);                                 28234000
    END;                                                                28235000
    IF S[28]=@14 THEN GO LOADEM;                                        28236000
    GETASEGMENT;                                                        28237000
    GO FINDFILENAMES;                                                   28238000
LOADEM:                                                                 28239000
    W~J~-2;                                                             28240000
    WHILE X[J~J+2]!@14 DO IF X[J].[1:1] THEN W~J;                       28241000
    IF W<0 THEN ABORT;                                                  28241100
    X[W+2]~@14;                                                         28242000
    IF TYPE=ADDV THEN                                                   28243000
    FOR W~W STEP -2 UNTIL 0 DO                                          28244000
    IF X[W].[1:1] THEN                                                  28245000
    IF DIRECTORYSEARCH(X[W],X[W+1],5)!0 THEN X[W]:=@14 ELSE             28246000
         W:=0 ELSE X[W]:=0;                                             28247000
    IF @40=WAITIO(LAB INX @120540000000,@40,U) THEN                     28248000
    P(WAITIO(LAB INX @120540000000,0,U),DEL);                           28248100
    IF ((NOT B6500) AND (NFLAG(LAB[1])EQV MID)!NOT 0 OR                 28248200
        (NFLAG(LAB[2]) EQV FID)!NOT 0)                                  28248210
$ INCLUDE 28248311,IF B6500LOAD;                                        28248299
    AND ((NFLAG(LAB[0]).[24:24] EQV "FILE")!NOT 0 AND                   28248300
         (NFLAG(LAB[1]).[1:17] EQV FID.[30:18])!NOT 0)                  28248310
    THEN BEGIN STREAM(A:=[TINU[U]],J:=J:=SPACE(10));                    28248400
         BEGIN SI ~ A; SI ~ SI+5; DS ~ LIT"."; DS ~ 3 CHR;              28248500
               DS ~ 29 LIT " BAD FILE000 ON LIBRARY TAPE~";             28248600
         END;      SPOUT (J); ABORT;                                    28248700
    END;                                                                28248800
    J:=0;                                                               28249000
    H:=[M[SPACE(31+6|B6500)]]&36[8:38:10];                              28250000
    AROW:=[M[SPACE(2)]]&2[8:38:10];                                     28251000
    AROW[0]:=[M[SPACE(902)]]&901[8:38:10];                              28252000
    AROW[1]:=AROW[0]&SPACE(902)[CTC];                                   28253000
    IOD:=[M[SPACE(2)]]&2[8:38:10];                                      28254000
$ INCLUDE 28254201,IF B6500LOAD;                                        28254099
    IF B6500 THEN BEGIN P(WAITIO(SPACER,MM,U),DEL);                     28254100
                        P(WAITIO(SPACER,MM,U),DEL) END;                 28254200
    DO                                                                  28255000
    BEGIN                                                               28256000
         IF LABELCHECK THEN ABORT;                                      28257000
         P(WAITIO((*[AROW[0]])&@5400[CTF],0,U),DEL); % READ FILE HEADER 28258000
         MOVE(30+5|B6500,AROW[0].[CF]+B6500,H);                         28258100
$ INCLUDE 28258151,IF B6500LOAD;                                        28258149
         IF B6500 THEN FIXHDR;                                          28258150
         IF DSED THEN ABORT;                                            28259000
         T~-1;                                                          28260000
         IF M[AROW[0] INX NOT 0]!(30+6|B6500) THEN                      28260150
         BEGIN                                                          28260200
              LBMESS(-X[J],X[J+1],"NOT ","LOADED(","BAD HEA","DER).",   28260300
                     TINU[U]);                                          28260400
              H[2] ~ LAB[2];                                            28260500
              SPACIT;                                                   28260600
              IF H[2]!LAB[2] THEN ABORT; % FOR WE ARE LOST              28260700
              GO TO ENDLOOP;                                            28260800
         END ELSE                                                       28260900
         IF X[J].[1:1] THEN                                             28261000
         IF (T~DIRECTORYSEARCH(X[J]&(3+4|(TYPE=ADDV))[1:45:3],X[J+1],   28262000
               4+(TYPE=ADDV)))!0 THEN                                   28263000
         IF T LSS 0 THEN                                                28264000
              LBMESS(X[J],X[J+1],"NOT ","LOADED(","SYSTEM ","FILE),",   28265000
                   TINU[U]) ELSE                                        28266000
         BEGIN                                                          28267000
              LOADING:=9;                                               28268000
              IF DSED THEN ABORT;                                       28269000
              IF TYPE!ADDV THEN                                         28269500
              IF M[T+2]!0 THEN                                          28270000
              IF (USERCODE[P1MIX] EQV ABS(MCP))!NOT 0 THEN              28271000
             IF (USERCODE[P1MIX] EQV ABS(M[T+2])) NEQ NOT 0 THEN %      28272000
              BEGIN                                                     28273000
                   HEADERUNLOCK(ABS(X[J]),X[J+1],T);                    28274000
                   T:= -1;                                              28275000
                   LBMESS(X[J],X[J+1],"NOT ","LOADED(","INVALID",       28276000
                        " USER),",TINU[U]);                             28277000
              END;                                                      28278000
         END ELSE                                                       28279000
         IF T.[1:1] THEN%IT WAS "QT-ED"                                 28280000
         BEGIN                                                          28281000
             T:=-1;                                                     28282000
             LBMESS(X[J],X[J+1],"NOT ","LOADED(","IN USE",              28283000
                   "),",TINU[U]);                                       28284000
         END;                                                           28285000
         IF T=0 OR (T>0 AND TYPE!ADDV) THEN                             28286000
         BEGIN                                                          28287000
              IF T!0 THEN                                               28288000
              IF M[T+8]!H[8] THEN                                       28289000
              BEGIN                                                     28290000
                   FORGETSPACE(T);                                      28291000
                   P(DIRECTORYSEARCH(X[J],X[J+1],6),DEL);               28292000
                   T~0;                                                 28293000
              END;                                                      28294000
              IF T=0 THEN                                               28295000
              BEGIN                                                     28296000
                   T:=GETSPACE(30,0,1)+2;%FIXES POSSIBLE PROBLEM        28297000
                   MOVE(30,T-1,T);                                      28298000
                   M[T+4]~-0&SYSNO[4:46:2]&1[2:47:1];                   28299000
                   ENTERUSERFILE(ABS(X[J]),X[J+1],T-1);                 28300000
                   EADD~DIRECTORYFREE.[33:14];                          28301000
              END ELSE                                                  28302000
              EADD~T.[18:15];                                           28303000
              LBL ~ [M[T]] & 30[8:38:10];                               28304000
              IF (LBL[9]~(*P(DUP)) AND 31)=0 THEN                       28305000
              BEGIN                                                     28305100
                   FOR W~10 STEP 1 UNTIL 29 DO LBL[W] ~ 0;              28305200
                   LBL[7] ~ -1;                                         28305300
              END;                                                      28305400
              W ~ 0;                                                    28305500
              WHILE (W~W+1){H[9] DO                                     28307000
                   IF H[9+W]!0 THEN                                     28308000
               IF (H[9+W]:=LBL[9+W]) LEQ 0 THEN                         28309000
OK:                IF (H[9+W]~PETUSERDISK(-H[8] OR M,COMMON))<1 THEN    28310000
                   BEGIN                                                28311000
WY:                     LBMESS(-X[J],X[J+1],".#NO US","ER DISK"," ",    28311200
                               0,TINU[U]);                              28311300
                        REPLY[P1MIX] ~ -@04101220;                      28311400
                        COMPLEXSLEEP(REPLY[P1MIX]}0 OR DSED             28311500
                                     OR PRT[P1MIX,@25]=5);              28311600
                        IF NOT WHYSLEEP(@4101220) THEN GO TO WY;        28311700
                        IF REPLY[P1MIX]=4 THEN GO TO OK;                28311800
                        IF DSED THEN ABORT;                             28311900
                        IF  REPLY[P1MIX]=8 THEN                         28311910
                        BEGIN COMMON ~ COMMON AND NOT M; GO TO OK; END; 28311920
                        PRT[P1MIX,@25] ~ 0;                             28311930
                        P(DIRECTORYSEARCH(X[J],X[J+1],                  28312000
                             14-8|(LBL[9]=0)),DEL);                     28313000
                        FOR W:=W STEP -1 UNTIL 1 DO                     28314000
                             IF H[9+W]!0 THEN                           28315000
                             IF LBL[9+W]=0 THEN                         28316000
                                  FORGETUSERDISK(H[9+W],H[8]);          28317000
                        FORGETSPACE(T);                                 28318000
                        LBMESS(-X[J],X[J+1],"NOT LOA","DED(NO",         28319000
                             " USER ","DISK),",TINU[U]);                28320000
                        IF X[J+2]!@14 THEN SPACIT;                      28321000
                        GO TO ENDLOOP;                                  28322000
                   END;                                                 28323000
              FOR W:=LBL[9] STEP -1 UNTIL 1 DO                          28324000
                   IF H[9+W]=0 THEN                                     28325000
                   IF  LBL[9+W]!0 THEN FORGETUSERDISK(LBL[9+W],LBL[8]); 28326000
              STREAM(A~[H[1]],D~DATE);                                  28328000
              BEGIN SI~LOC D;DI~LOC D;DS~8 OCT;                         28329000
                   SI~SI-4;DI~A;DS~4 CHR;                               28330000
              END;                                                      28331000
              H[4]~M[T+4]&H[4][9:9:2]&0[11:47:1]&H[4][36:36:6];         28332000
              FORGETSPACE(T);                                           28332500
              H[1].[25:23]~XCLOCK+P(RTR);                               28333000
              DISKWAIT(H INX 0,30,EADD);                                28334000
              LOADING:=TRUE;                                            28335000
              FOR K~1 STEP 1 UNTIL H[9] DO                              28336000
                   IF H[K+9]!0 THEN % ROW IS ASSIGNED                   28337000
                   IF LOADAROW THEN % THERE WAS AN ERROR                28338000
                   BEGIN                                                28339000
                        COMPLEXSLEEP((((IOD[0] AND IOD[1]) AND IOMASK)!028339100
                                      ) OR DSED);                       28339200
                        IF NOT UNIT[U].[16:1] THEN BLASTQ(U);           28340000
                        P(WAITIO(@004740000020,@377,U),DEL);            28340100
                        LOADING:=FALSE;                                 28341000
                        P(DIRECTORYSEARCH(X[J],X[J+1],6),DEL);          28342000
                        IF X[J+2]!@14 THEN SPACIT;                      28343000
                        GO ENDLOOP;                                     28344000
                   END ELSE IF STOPJOB=P1MIX THEN STOPM(0);             28345000
              P(DIRECTORYSEARCH(X[J],X[J+1],14),DEL);                   28346000
              BB ~ TRUE; % MARK THAT A FILE HAS BEEN LOADED             28346100
              IF LIBMSG THEN LBMESS(ABS(X[J]),X[J+1],"LOADED,",0,0,0,   28347000
                   TINU[U]);                                            28348000
              LOADING:=FALSE;                                           28349000
              GO FALLOUT;                                               28350000
         END;                                                           28351000
         IF X[J+2]=@14 THEN GO ENDLOOP ELSE                             28352000
         FOR K~1 STEP 1 UNTIL H[9] DO                                   28353000
         IF H[K+9]!0 THEN                                               28354000
         BEGIN                                                          28355000
              IF STOPJOB=P1MIX THEN STOPM(0);                           28356000
              W:=SIZE:=LOADING:=0;                                      28357000
              IC:=1;                                                    28358000
              IO; % READ HEADER                                         28359000
              W:=1;                                                     28360000
              FOR N1~H[8] DIV 30 + ((H[8] MOD 30)!0) STEP -1 UNTIL 2 DO 28361000
              BEGIN  %   SPACE OVER FILE                                28362000
                   IO;                                                  28363000
LAY:               COMPLEXSLEEP(((IOD[0] OR IOD[1]) AND IOMASK)!0       28364000
                   OR DSED);                                            28365000
                   IF DSED THEN ABORT;                                  28366000
                   W~((IOD[1] AND IOMASK)!0);                           28367000
                   IF IOD[W].[27:2]!0 THEN                              28368000
                   IF IOD[W].[27:1] THEN %  END OF REEL                 28369000
                   BEGIN                                                28370000
                        IF NOT ENDOFREEL THEN                           28371000
                        BEGIN                                           28371100
                             TERMINATE(P1MIX&19[CTF]);                  28371200
                             ABORT;                                     28371300
                        END;                                            28371400
                        IO;                                             28372000
                        W:=1-W;                                         28373000
                        IF (IOD[W] AND IOMASK)=0 OR IOD[W].[27:1] THEN  28374000
                             N1:=N1+1;                                  28375000
                   END ELSE      %       PARITY ERROR                   28376000
                   BEGIN                                                28377000
                        SPACIT;                                         28378000
                        GO ENDLOOP;                                     28379000
                   END;                                                 28380000
              END;                                                      28381000
              IF N1}0 THEN  %         WAIT FOR LAST READ TO FINISH      28382000
              BEGIN                                                     28383000
                   N1:=(-1);                                            28384000
                   IOD[W]:=0;                                           28385000
                   GO LAY;                                              28386000
              END;                                                      28387000
         END;                                                           28388000
FALLOUT: P(WAITIO(SPACER,@40,U),DEL); IF ENDOFREEL THEN GO FALLOUT;     28389000
ENDLOOP: LOADING:=FALSE;                                                28390000
         IF DSED THEN ABORT;                                            28391000
    END UNTIL X[J:=J+2]=@14;                                            28392000
    IF NOT BB THEN                                                      28392200
    BEGIN                                                               28392300
         STREAM(BB~BB~GETSPACE(5,0,0)+2);                               28392400
         BEGIN DS~18LIT"NULL LIBRARY LOAD~"; END;                       28392500
         SPOUT (BB);                                                    28392600
    END;                                                                28392700
    STOPTIMING(0,1023);                                                 28393000
    STOPTIMING(5,1023);                                                 28394000
    SETNOTINUSE(U,0);                                                   28395000
         IF UNITNO!0 AND LABELTABLE[UNITNO]=@214 THEN                   28396000
              LABELTABLE [UNITNO]~@114;                                 28397000
         GO INITIATE;                                                   28398000
END; % OF LIBRARY LOAD PROCEDURE                                        28399000
PROCEDURE LIBRARYDUMP;                                                  28400000
BEGIN                                                                   28401000
    REAL COMMON=-4;                                                     28402000
    REAL I,J,T,U,UNITNO,DUMPING,W,Y,TM,REEL,IC,N,N1,LAST,N2;            28403000
    REAL Q,MID,FID,MAX,EXP,GTRMAX,K,K1,SEG,MIDCTR,SIZE,TYPE;            28404000
    ARRAY X[*],S[*],AROW[*],H[*],IOD[*],LBL[*];                         28405000
    DEFINE DSED=(TERMIX.[CF]=P1MIX)#;                                   28406000
    LABEL LOOP,WATE,GETONE,NEXTNAME,GETMORE,WRITIT,EXIT,PARERR;         28407000
    %*******************************************************            28408000
    SUBROUTINE GETASEGMENT;                                             28409000
    BEGIN                                                               28410000
         SEG:=S[29];                                                    28411000
         DISKWAIT(-S.[CF],30,SEG);                                      28412000
         FORGETESPDISK(SEG);                                            28413000
         I:=2;                                                          28414000
    END; % OF GETASEGMENT                                               28415000
    %*******************************************************            28441000
    SUBROUTINE ABORT;                                                   28442000
    BEGIN                                                               28442500
         IF DUMPING THEN J:=J-2 ELSE                                    28443000
         BEGIN X[J]:=@14;                                               28443500
              J:=-2;                                                    28444000
         END;                                                           28444500
         WHILE X[J:=J+2]!@14 AND J LSS 1022 DO                          28445000
              P(DIRECTORYSEARCH(-X[J],X[J+1],13),DEL);                  28446000
         IF U GEQ 0 THEN                                                28447000
         BEGIN                                                          28448000
              STOPTIMING(0,1023);                                       28449000
              STOPTIMING(5,1023);                                       28450000
              IF NOT UNIT[U].[16:1] THEN BLASTQ(U);                     28451000
              SETNOTINUSE(U,0);                                         28452000
         END;                                                           28453000
         WHILE S[29]!0 DO GETASEGMENT;                                  28454000
         IF UNITNO!0 AND LABELTABLE[UNITNO]=@214 THEN                   28455000
             LABELTABLE[UNITNO]:=@114;                                  28456000
         GO TO INITIATE;                                                28457000
    END; % OF ABORT                                                     28458000
    %********************************************************           28459000
    SUBROUTINE WRITENDINGLABEL;                                         28460000
    BEGIN                                                               28461000
         P(WAITIO([TM],@40,U),DEL);                                     28462000
         IF DSED THEN ABORT;                                            28463000
         P(WAITIO(LBL&@5000[CTF],@40,U),DEL);                           28464000
         IF DSED THEN ABORT;                                            28465000
    END; % OF WRITE ENDING LABEL                                        28466000
    %*******************************************************            28467000
    SUBROUTINE CHECK;                                                   28468000
    BEGIN                                                               28469000
         IF (Y:=IOD[W]).[27:2]!0 THEN % PARITY ERROR OR EOT             28470000
         BEGIN                                                          28471000
              IF Y.[7:1] AND Y.[27:1] THEN % END OF TAPE                28472000
              BEGIN                                                     28473000
                   IF IOD[1-W].[7:1] THEN                               28474000
                   BEGIN                                                28475000
                        SLEEP([IOD[1-W]],IOMASK);                       28476000
                        IF IOD[1-W].[28:1] THEN GO PARERR;              28477000
                        IOD[1-W].[27:1]:=0;                             28478000
                   END;                                                 28479000
                   LBL[4]:=(*P(DUP)) OR 1;                              28480000
                   P(WAITIO([TM],@40,U),DEL);                           28481000
                   P(WAITIO(LBL&@5000[CTF],@40,U),DEL);                 28482000
                   P(WAITIO([TM],@40,U),DEL);                           28483000
                   SETNOTINUSE(U,1);                                    28484000
                   STOPTIMING(5,1023);                                  28485000
                   LBL[4]:=(*P(DUP)) AND NOT(1);                        28486000
                   STREAM(REEL:=REEL:=REEL+1,LBL);                      28487000
                   BEGIN SI:=LOC REEL;                                  28488000
                        DI:=DI+24; DS:=3 DEC;                           28489000
                   END;                                                 28490000
                   IF (U:=LABELASCRATCH(LBL)) LSS 0 THEN ABORT;         28491000
                   STARTIMING(5,U);                                     28492000
              END ELSE % PARITY ERROR                                   28493000
PARERR:       BEGIN                                                     28494000
                   LBMESS(-X[J],X[J+1],"NOT ","DUMPED(",                28495000
                        IF Y.[7:1] THEN "TAPE PA" ELSE "DISK PA",       28496000
                        "RITY),",TINU[U]);                              28497000
                   TERMINATE(P1MIX&70[CTF]);                            28498000
                   ABORT;                                               28499000
              END;                                                      28500000
         END;                                                           28501000
    END; % OF SUBROUTINE CHECK                                          28502000
    %*******************************************************            28503000
    SUBROUTINE IO;                                                      28504000
    BEGIN                                                               28505000
         IF IC THEN                                                     28506000
              IOREQUEST(-(IOD[W]:=(AROW[W] INX @500000000)&             28507000
                   SIZE[8:38:10]&TINU[U][3:3:5]) OR @2017700000,        28508000
                   IOD[W],[IOD[W]]&U[12:42:6])                          28509000
         ELSE                                                           28510000
         BEGIN                                                          28511000
              DISKIO(IOD[W],-(AROW[W] INX 0-1),(T~IF (T~LAST-Q-N+1) LSS 28512000
                   30 THEN 30|T ELSE 900),Q+N);                         28513000
              N:=N+30;                                                  28514000
$INCLUDE 28514101, IF STATISTICS;                                       28514099
         COUNTUP(18,T DIV 30);                                          28514100
         END;                                                           28515000
    END; % OF IO                                                        28516000
    %*******************************************************            28517000
    SUBROUTINE DUMPAROW;                                                28518000
    BEGIN                                                               28519000
         N1 ~ H[8]; SIZE ~ 900;%                                        28520000
         LAST~(Q~H[K+9])+H[8]-1;%                                       28521000
         IOD[1]:=N2:=W:=N:=IC:=0;                                       28522000
         IO; % FIRE UP FIRST DISK READ                                  28523000
         W ~1;% SWAP BUFFERS                                            28524000
         IF N<N1 THEN% CANNOT DO ROW WITH ONE READ                      28525000
LOOP:    IO;                                                            28526000
WATE:    COMPLEXSLEEP((((IOD[0] OR IOD[1]) AND IOMASK)!0) OR DSED);     28527000
         IF DSED THEN ABORT;                                            28528000
         N2~N2+15;% COUNT NUMBER OF OPERATIONS COMPLETED                28529000
         W~IF (IOD[0] AND IOD[1] AND IOMASK)!0 THEN 1-W ELSE            28530000
              ((IOD[1] AND IOMASK)!0);                                  28531000
         CHECK; % FOR PARITY OR END OF TAPE                             28532000
         IC~1-IOD[W].[7:1];% SWAP UNITS                                 28533000
         IF N<N1 THEN GO TO LOOP;% ROW IS NOT FINISHED                  28534000
         IF N2+30}N THEN SIZE~T; % CHANGE SIZE FOR LAST RECORD          28535000
         IF IOD[W].[24:1] THEN GO TO LOOP;% MORE WRITING TO DO          28536000
         IF N2<N THEN BEGIN IOD[W]~0; GO TO WATE END;%                  28537000
    END; % OF DUMPAROW                                                  28538000
    %*******************************************************            28539000
    S:=[M[SPACE(30)]]&30[8:38:10];                                      28540000
    TYPE:=COMMON.[FF];                                                  28541000
    S[29]:=COMMON.[CF];                                                 28542000
    GETASEGMENT;                                                        28543000
    STREAM(MID:=MID:=S[1],B:=PRT[P1MIX,3]);                             28544000
    BEGIN DS:=16 LIT"0DIRCTRY0DISK   ";DS:=25 LIT"0";SI:=LOC MID;       28545000
         SI:=SI+1;DS:=7 CHR;DS:=8 LIT"0FILE000";DS:=24 LIT"0";          28546000
    END;                                                                28547000
    UNITNO:=S[0].[2:6];                                                 28548000
    X:=[M[SPACE(1023)]]&1023[8:38:10];                                  28549000
    MAX~S[0].[CF];                                                      28550000
    EXP:=S[0].[8:2];                                                    28551000
    GTRMAX~S[0]<0;                                                      28552000
    X[0]:=@14;                                                          28553000
    MOVE(1022,X,[X[1]]);                                                28554000
    U:=-1;                                                              28554500
GETONE:                                                                 28555000
    IF DSED THEN ABORT;                                                 28555500
    IF I>26 THEN GETASEGMENT;                                           28556000
    IF (S[I] OR S[I+1])<0 THEN SEEKNAM(S[I],S[I+1],W,X[J],X[J+1],Y) ELSE28557000
    BEGIN                                                               28558000
         X[J]:=S[I];                                                    28559000
         X[J+1]:=S[I+1];                                                28560000
         W:=1;                                                          28561000
    END;                                                                28562000
    IF W!0 THEN                                                         28563000
    BEGIN                                                               28564000
         T~0;                                                           28565000
         K~I;                                                           28566000
         FOR N~J-2 STEP-2 UNTIL 0 DO                                    28567000
              IF (X[J] EQV X[N])=NOT 0 THEN                             28568000
              IF (X[J+1] EQV X[N+1])=NOT 0 THEN GO TO NEXTNAME;         28569000
         IF GTRMAX THEN                                                 28569200
         BEGIN                                                          28569300
              J:=J+2;                                                   28569400
              GO TO NEXTNAME;                                           28569500
         END ELSE                                                       28569600
         IF NOT SYSTEMFILE(X[J],X[J+1]) THEN                            28570000
         IF (T:=DIRECTORYSEARCH(X[J]&1[3:47:1],X[J+1] OR M,3))=0 THEN   28571000
         BEGIN                                                          28572000
              IF DSED THEN ABORT;                                       28573000
              IF T.[1:1] THEN LBMESS(-X[J],X[J+1],"NOT DUM","PED(",     28574000
                   "IN USE)",0,0) ELSE                                  28575000
                   K:=0;                                                28576000
              GO TO NEXTNAME;                                           28577000
         END;                                                           28578000
         IF T GTR 0 THEN                                                28579000
         BEGIN                                                          28580000
              IF M[T+2]!0 THEN                                          28581000
              IF (USERCODE[P1MIX] EQV ABS(MCP))!NOT 0 THEN              28582000
             IF (USERCODE[P1MIX] EQV ABS(M[T+2])) NEQ NOT 0 THEN %      28583000
              BEGIN                                                     28584000
                   P(DIRECTORYSEARCH(-X[J],X[J+1],13),DEL);             28585000
                   LBMESS(-X[J],X[J+1],"NOT ","DUMPED(",                28586000
                        "INVALID"," USER)",0);                          28587000
                   GO TO NEXTNAME;                                      28588000
              END;                                                      28589000
              IF EXP NEQ 0 THEN                                         28590000
              BEGIN                                                     28591000
                   IF EXP THEN                                          28592000
                   BEGIN                                                28593000
                        STREAM(T:=0:A:=CALCULATEPURGE(-M[T+3].[2:10])); 28594000
                        BEGIN SI:=LOC A;DI:=LOC T;DS:=8 OCT END;        28595000
                        IF P GTR M[T+3].[12:18] THEN J:=J+2 ELSE        28596000
                        P(DIRECTORYSEARCH(-X[J],X[J+1],13),DEL);        28597000
                   END ELSE                                             28598000
                   BEGIN                                                28599000
                        IF M[T+4].[11:1] THEN J:=J+2 ELSE               28600000
                        P(DIRECTORYSEARCH(-X[J],X[J+1],13),DEL);        28601000
                   END;                                                 28602000
              END ELSE J:=J+2;                                          28603000
              GO TO NEXTNAME;                                           28604000
         END;                                                           28605000
         LBMESS(-X[J],X[J+1],"NOT ","DUMPED","(SYSTEM"," FILE)",0);     28606000
NEXTNAME:                                                               28607000
         IF (S[I] OR S[I+1])<0 THEN I~I-2 ELSE W~0;                     28608000
         IF T GTR 0 THEN FORGETSPACE(T);                                28609000
    END;                                                                28610000
    IF K<I THEN LBMESS(IF S[I]<0 THEN "     .=" ELSE -S[I],             28611000
         IF S[I+1]<0 THEN "=      " ELSE S[I+1],"NOT DUM","PED(NOT",    28612000
         " ON DIS","K)",0);                                             28613000
    IF S[I~I+2]!@14 THEN                                                28614000
    IF J<(2|MAX) OR GTRMAX THEN GO GETONE ELSE                          28615000
    BEGIN                                                               28616000
         LBL:=[M[SPACE(30)]]&30[8:38:10];                               28617000
         J~-2;                                                          28618000
         LBL[0]:=-MAX;                                                  28619000
         LBL[1]~MID;                                                    28620000
         LBL[28]~0;                                                     28621000
         STREAM(A~MIDCTR:ONE~1,MID~[MID]);                              28622000
         BEGIN SI~LOC A;SI~SI+7;IF SC="0" THEN                          28623000
              BEGIN TALLY~2;SI~MID;SI~SI+2;5(IF SC=" " THEN JUMP OUT;   28624000
                   SI~SI+1;TALLY~TALLY+1);A~TALLY;DI~DI+A;DS~LIT"1";    28625000
              END ELSE BEGIN DI~DI+A;SI~SI+16;DS~ADD;END;               28626000
         END;                                                           28627000
         MIDCTR~P;                                                      28628000
         COMMON~SEG~GETESPDISK;                                         28629000
         COMMON.[FF]:=TYPE;                                             28630000
GETMORE:                                                                28631000
         FOR K~2 STEP 2 UNTIL 26 DO                                     28632000
                                                                        28633000
         BEGIN                                                          28634000
              LBL[K]~X[J~J+2];                                          28635000
              IF LBL[K]=@14 THEN GO WRITIT;                             28636000
              LBL[K+1]~X[J+1];                                          28637000
                                                                        28638000
         END;                                                           28639000
WRITIT:                                                                 28640000
         LBL[29]~IF K! 28 THEN 0 ELSE GETESPDISK;                       28641000
         DISKWAIT(LBL INX 0,30,SEG);                                    28642000
         IF K=28 THEN                                                   28643000
         BEGIN                                                          28644000
              SEG~LBL[29];                                              28645000
              GO GETMORE;                                               28646000
         END;                                                           28647000
         FORGETSPACE(LBL);                                              28648000
         LBMESS("LIBMAIN","DISK   ","AUTO-","ZIPPED",0,0,0);            28649000
         M[(T:=GETSPACE(12,0,0)+4)-4].[9:6]:=0;                         28650000
         IF (J~USERCODE[P1MIX])=ABS(NOT 0) THEN                         28651000
         BEGIN                                                          28652000
              J~0;                                                      28653000
              K~31;                                                     28654000
         END ELSE K~26;                                                 28655000
         STREAM(J,COMMON,T);                                            28656000
         BEGIN                                                          28657000
              DS~8 LIT"CC USER=";SI~LOC J;SI~SI+1;DS~7 CHR;             28658000
              DS~29 LIT";EXECUTE LIBMAIN/DISK;COMMON=";                 28659000
              DS~8 DEC;DS~6 LIT";END. ";                                28660000
         END;                                                           28661000
         INDEPENDENTRUNNER(P(.CONTROLCARD),T&K[3:43:5]);                28662000
         J~T~0;                                                         28663000
         GO GETONE;                                                     28664000
    END;                                                                28665000
    X[J]~@14; %    MARK END OF DIRECTORY                                28666000
    IF J=0 THEN                                                         28667000
    BEGIN                                                               28668000
         STREAM(MID,D:=I:=SPACE(10));                                   28669000
         BEGIN DS:=14 LIT"-NULL LIBRARY ";SI:=LOC MID;                  28670000
              SI:=SI+1;DS:=7 CHR; DS:=LIT"~";                           28671000
         END;                                                           28672000
         SPOUT(I);                                                      28673000
         GO TO INITIATE;                                                28674000
    END;                                                                28675000
    TM~0&"}~"[1:37:11];%                                                28676000
    IF J LSS 900 THEN                                                   28677000
    BEGIN                                                               28678000
         T:=SPACE(J+1);                                                 28679000
         MOVE(J+1,X,T);                                                 28680000
         FORGETSPACE(X);                                                28681000
         X:=[M[T]]&(J+1)[8:38:10];                                      28682000
    END;                                                                28683000
    REEL:=1;                                                            28684000
    LBL:=[M[TAPELABEL(MID,FID:="FILE000",1,1,100)]]&10[8:38:10];        28685000
    IF (U:=LABELASCRATCH(LBL)) LSS 0 THEN ABORT;                        28686000
    STARTIMING(0,18);                                                   28687000
    STARTIMING(5,U);                                                    28688000
    P(WAITIO(X&(J+1)[8:38:10]&@5000[CTF],@40,U),DEL);                   28689000
    WRITENDINGLABEL;                                                    28690000
    AROW:=[M[SPACE(2)]]&2[8:38:10];                                     28691000
    AROW[0]:=[M[SPACE(900)]]&900[8:38:10];                              28692000
    AROW[1]:=[M[SPACE(900)]]&900[8:38:10];                              28693000
    IOD:=[M[SPACE(2)]]&2[8:38:10];                                      28694000
    J:=-2;                                                              28695000
    DUMPING:=TRUE;                                                      28696000
    WHILE X[J~J+2]!@14 DO %                                             28697000
    BEGIN;                                                              28698000
         STREAM(A~(J+2) DIV 2,B~[LBL[2]]);                              28699000
         BEGIN SI:=LOC A;DI:=DI+5;DS:=3 DEC END;                        28700000
         LABELTABLE[U]~-LBL[2]; % ENTER FILE ID FOR OL MESSAGE          28701000
         H:=[M[DIRECTORYSEARCH(X[J],X[J+1],5)]]&30[8:38:10];            28702000
         H[9]:=(*P(DUP)) AND 31;                                        28702100
         P(WAITIO(LBL&@5000[CTF],@40,U),DEL);                           28703000
         IF DSED THEN ABORT;                                            28704000
         P(WAITIO([TM],@40,U),DEL);                                     28705000
         IF DSED THEN ABORT;                                            28706000
         P(WAITIO(H&@5000[CTF],@40,U),DEL);                             28707000
         IF DSED THEN ABORT;                                            28708000
         FOR K~1 STEP 1 UNTIL H[9] DO% WRITE OUT FILE, ROW BY ROW       28709000
         IF H[K+9]!0 THEN                                               28710000
         BEGIN                                                          28711000
              DUMPAROW;                                                 28712000
              IF STOPJOB=P1MIX THEN STOPM(0);                           28713000
         END;                                                           28714000
         FORGETSPACE(H);                                                28715000
         WRITENDINGLABEL;                                               28716000
         IF LIBMSG THEN LBMESS(X[J],X[J+1],"DUMPED,",0,0,0,TINU[U]);    28717000
         P(DIRECTORYSEARCH(-X[J],X[J+1],13),DEL);;                      28718000
    END; % ALL FILES NOW WRITTEN                                        28719000
    P(WAITIO([TM],@40,U),DEL);                                          28720000
    STOPTIMING(0,1023);                                                 28721000
    STOPTIMING(5,1023);%                                                28722000
    SETNOTINUSE(U,1);                                                   28723000
    IF TYPE=UNLOAD THEN                                                 28724000
         FOR J~0 STEP 2 WHILE X[J]!@14 DO                               28725000
              P(DIRECTORYSEARCH(-X[J],X[J+1],7),DEL);                   28726000
    IF UNITNO!0 AND LABELTABLE[UNITNO]=@214 THEN                        28727000
         LABELTABLE [UNITNO]~@114;                                      28728000
    GO INITIATE;                                                        28729000
END; % OF LIBRARYDUMP                                                   28730000
$ INCLUDE 29549001,IF AUXMEM;                                           28999999
 SAVE PROCEDURE FILLORKILL(A, START, SIZE, TYPE);                       29000000
    VALUE     A, START, SIZE, TYPE;                                     29001000
    ARRAY     A[*];                                                     29002000
    INTEGER   START, SIZE;                                              29003000
    BOOLEAN   TYPE;                                                     29004000
         BEGIN COMMENT START IS A BIT INDEX IN ARRAY A                  29005000
                   (WHICH IS EITHER A FINE TABLE OR A                   29006000
                    COARSE TABLE).  SIZE IS THE NUMBER                  29007000
                   OF BITS TO TURN ON OR OFF.  TYPE IS                  29008000
                   USED TO TELL YOU WHICH TO DO.  THIS                  29009000
                   ROUTINE ALSO COMPUTES THE NEW "LONGRUN"              29010000
                   VALUE AFTER ALLOCATION OR RETURN.                    29011000
         ;                                                              29012000
                                                                        29013000
         INTEGER   I,        % CURRENT WORD INDEX IN ARRAY A            29014000
                   N,        % LAST INDEX EXCEPT FOR OVERFLOW           29015000
                   X;        % BIT INDEX OF LAST BIT IN LAST WORD       29016000
         REAL      J,        % TEMPORARY STORAGE FOR A[I]               29017000
                   T,        % TEMPORARY USED FOR RUN SEARCH            29018000
                   RUN,      % SIZE OF LONG RUN ALREADY FOUND           29019000
                   RMASK,    % MASK FOR NEXT LARGER RUN                 29020000
                   MASK;     % CONTAINS "AND NOT" OR "OR" MASK          29021000
                                                                        29022000
         DEFINE    RETURNING = TYPE#;  % =0 IF TO ALLOCATE              29023000
                                       % =1 IF TO RETURN                29024000
         DEFINE    STOP      = SIZE#;  % LAST BIT TO ASSIGN OR RETURN   29025000
         LABEL     TRYNEXT,            % SEARCH FOR LONGER RUN          29026000
                   FOUNDRUN,           % STUFF RUN LENGTH IN            29027000
                   FINISHUP,           % INCREMENT INDEX AND EXIT       29028000
                   WHOLEBUNCHOFBITS;   % 2*32-1, USED IN MASKING        29029000
                                                                        29030000
         SUBROUTINE WHATEVERTURNSYOUON;                                 29031000
         BEGIN T := J := A[I].[9:39];                                   29032000
              IF RETURNING THEN J := J OR MASK                          29033000
                           ELSE J := J AND NOT MASK;                    29034000
              COMMENT TURN BITS ON OR OFF--THIS IS THE                  29034100
                        GUTS OF THE ALLOCATION/RETURN MECHANISM;        29034200
              IF T=J THEN GO TO FINISHUP;                               29035000
              COMMENT IF T=J, NO BITS WERE CHANGED SO THE               29035100
                        PREVIOUS RUN COUNT IS CORRECT.  THIS            29035200
                        MAY RESULT FROM "ALLOCATION" OF COARSE          29035300
                        ENTRIES IN THE FINE ALLOCATION PROCESS;         29035400
              IF (T:=J)=(RUN:=0) THEN GO TO FOUNDRUN;                   29036000
              COMMENT IF J IS ZERO, ITS RUN IS OBVIOUSLY ZERO, TOO;     29036100
              RMASK := 1;                                               29037000
              COMMENT NOW TO LOOP AROUND FINDING THE LONGEST            29037100
                        XRUNX OF BITS IN THE WORD.  NOTE THAT           29037200
                        ALTHOUGH THERE ARE REALLY TWO LOOPS,            29037300
                        THEY ARE MUTUALLY EXCLUSIVE.  THE               29037400
                        METHOD USED IS TO TEST THE LOW ORDER            29037500
                        BITS AGAINST A MASK FOR EQUALITY,               29037600
                        INCREASING THE LENGTH OF THE MASK BY            29037700
                        ONE BIT WHEN SUCCESSFUL AND SLIDING THE         29037800
                        TEST WORD ONE BIT RIGHT OTHERWISE;              29037900
    TRYNEXT:: IF (T AND RMASK)=RMASK THEN                               29038000
                   % IF EQUAL, THE RUN IS THERE                         29038100
                   IF (RUN:=RUN+1)=8 THEN GO TO FOUNDRUN                29039000
                   % WE ONLY CARE ABOUT RUNS OF EIGHT OR LESS,          29039100
                   %    BECAUSE OF THE ALLOCATION STRATEGY AND          29039200
                   %    THE USE OF COARSE/FINE TABLES.                  29039300
                   ELSE RMASK := RMASK+P(DUP)+1                         29040000
                   % THIS INCREASES THE MASK LENGTH BY ONE BIT          29040100
              ELSE T := T.[9:38];                                       29041000
                   % IF THE RUN WAS NOT THERE, SLIDE TEST WORD RIGHT    29041100
              IF RMASK LEQ T THEN GO TO TRYNEXT;                        29042000
              COMMENT IF RMASK IS GREATER THAN T, YOU OBVIOUSLY         29042100
                        CANNOT FIND A LONGER RUN;                       29042200
    FOUNDRUN::  A[I] := J & RUN[3:42:6];                                29043000
    FINISHUP: I := I+1;                                                 29044000
              MASK := P(WHOLEBUNCHOFBITS) & MASK[9:41:7];               29045000
              COMMENT BECAUSE OF THE SEVEN-BIT OVERLAP, YOU             29045100
                        MUST MOVE THE SEVEN LOW-ORDER BITS              29045200
                        OF THE MASK TO THE HIGH-ORDER BIT               29045300
                        POSITIONS OF THE NEXT MASK.  THIS CAUSES        29045400
                        THE PROPER PROPAGATION OF "CARRIES.";           29045500
         END DOING YOUR OWN THING WHAT EVER IT IS;                      29046000
                                                                        29047000
         I := START.[37:6];  N := ( STOP := START+SIZE-1).[37:6];       29048000
         COMMENT I IS THE STARTING WORD INDEX IN A, AND                 29048100
                   N IS THE ENDING INDEX (EXCLUSIVE OF ANY              29048200
                   POSSIBLE CARRYOVER);                                 29048300
         MASK := TWO(32-START.[43:5])-1;                                29049000
         COMMENT TURN ON ALL BITS BELOW THE START POINT;                29049100
         WHILE I<N DO WHATEVERTURNSYOUON;                               29050000
         COMMENT WHILE I IS LESS THAN N, TURN ON (OR OFF)               29050100
                   ALL BITS CLEAR TO THE END.  THE SUBROUTINE           29050200
                   WILL REBUILD THE MASK AND INCREMENT I;               29050300
         MASK := MASK-TWO(31-(X:=STOP.[43:5]))+1;                       29051000
         COMMENT THIS CODE TURNS OFF THOSE BITS FOLLOWING               29051100
                   THE LAST TO THE END OF THE WORD, LEAVING             29051200
                   THE HIGH ORDER PART UNCHANGED.  NOTE THAT            29051300
                   THE ORDER OF ARITHMETIC OPERATIONS IS                29051400
                   IMPORTANT (TO AVOID NORMALISATION);                  29051500
         WHATEVERTURNSYOUON;                                            29052000
         IF X>24 THEN % IT OVERFLOWS INTO THE NEXT WORD                 29053000
         BEGIN MASK := MASK AND NOT P(WHOLEBUNCHOFBITS);                29054000
              WHATEVERTURNSYOUON                                        29055000
         END;                                                           29056000
         P(XIT);                                                        29057000
    WHOLEBUNCHOFBITS::: @37777777777;                                   29058000
    END FILL OR KILL A FEW BITS;                                        29059000
 SAVE INTEGER PROCEDURE AUXILIARYSPACE(SIZE);                           29100000
    VALUE     SIZE;                                                     29101000
    INTEGER   SIZE;                                                     29102000
    BEGIN COMMENT                                                       29103000
         IF SUFFICIENT AUXILIARY MEMORY SPACE EXISTS                    29104000
           (CONTIGUOUSLY, OF COURSE), AUXSPACE WILL                     29105000
           ALLOCATE IT AND REMOVE IT FROM THE BIT TABLES.               29106000
           THE SEARCH HAS BEEN OPTIMIZED TO DETERMINE                   29107000
           AVAILABILITY, AND WILL RETURN A ZERO IF THERE                29108000
           IS NO SUCH SPACE AVAILABLE.  THE VALUE                       29109000
           RETURNED IF SPACE IS ALLOCATED IS A PSEUDO-                  29110000
           DALOC ENTRY, OF A FORM NICE FOR STUFFING INTO                29111000
           ABSENT DESCRIPTORS AND FOR CALLING UPON                      29112000
           ACTUALOVERLAYADDRESS WITH.                                   29113000
         ;                                                              29114000
                                                                        29115000
         INTEGER   CFRONT    = +1;% PSEUDONYM FOR AUXILIARYSPACE        29116000
         INTEGER   CBITS,         % NUMBER OF COARSE BITS NEEDED        29117000
                   MASK,          % MASKS OFF PROPER RUN LENGTH         29117100
                   INDEX,         % CTABLE OR FTABLE INDEX              29117200
                   I, N;                                                29118000
         REAL      J;                                                   29118100
                                                                        29119000
         ARRAY     COARSETABLE[*],                                      29120000
                   FINETABLE  [*];                                      29121000
                                                                        29121100
         DEFINE    LONGRUN   = [3:6]#,                                  29122000
                   ALLOCATE(ALLOCATE1,ALLOCATE2,ALLOCATE3) =            29122100
                        FILLORKILL(ALLOCATE1,ALLOCATE2,ALLOCATE3,0)#;   29122200
                                                                        29123000
         SUBROUTINE FINESEARCH;                                         29124000
         BEGIN COMMENT ATTEMPT TO ALLOCATE FROM ONE                     29125000
                        TO SEVEN CONTIGUOUS BITS                        29126000
                        FROM THE BACK OF THE FINE TABLE;                29127000
              FOR I:=63 STEP -1 UNTIL 0 DO                              29128000
              IF FINETABLE[I].LONGRUN GEQ SIZE THEN                     29129000
              BEGIN J := FINETABLE[I].[9:39];                           29129100
         COMMENT AT LAST WE GET TO USE THE "LONGRUN" INDICATORS         29129150
                   WHICH WE HAVE SO PATIENTLY BUILT EVERY TIME          29129200
                   THROUGH FILLORKILL.  THE MECHANISM IS                29129300
                   USED SO THAT THE WORST CASE (AUXILIARY               29129400
                   MEMORY NOT AVAILABLE) CAN BE HANDLED                 29129500
                   WITH THE UTMOST DISPATCH, AND WILL CAUSE ONLY        29129600
                   MINOR DEGRADATION IN THE DISK ALLOCATION PROCESS;    29129700
                   MASK := TWO(SIZE)-1;  N := 32-SIZE;                  29130000
                   WHILE (J AND MASK)!MASK DO                           29131000
                   BEGIN MASK := MASK+P(DUP);  N := N-1 END;            29132000
              COMMENT STARTING AT THE LOW END OF THE WORD,              29132100
                        SLIDE THE MASK LEFT UNTIL WE FIND               29132200
                        THE FIRST ACCEPTABLE RUN.  BECAUSE OF           29132300
                        THE "LONGRUN" MECHANISM, WE KNOW                29132400
                        WE WILL FIND SUCH A SET OF BITS;                29132500
                   ALLOCATE(FINETABLE, CFRONT:=32|I+N, SIZE);           29133000
              COMMENT ALLOCATE "SIZE" BITS FROM THE FINE TABLE;         29133100
                   ALLOCATE(COARSETABLE, CFRONT.[36:9],                 29134000
                               ((CFRONT.[45:3]+SIZE)>8)+1);             29135000
              COMMENT ALLOCATE FROM THE COARSE TABLE EITHER             29135100
                        ONE OR TWO BITS, DEPENDING ON WHETHER           29135200
                        WE OVERLAP THE END OF A SET OF EIGHT            29135300
                        FINE BITS CORRESPONDING TO A GIVEN              29135400
                        COARSE BIT.  NOTE THAT ONE (OR BOTH)            29135500
                        OF THESE BITS MAY ALREADY BE OFF, BUT           29135600
                        IT IS QUICKER TO "RE-ALLOCATE" THEM             29135700
                        THAN TO TEST FOR IT SPECIALLY;                  29135800
                   I := 0                                               29136000
              END                                                       29137000
         END;                                                           29138000
                                                                        29139000
         SUBROUTINE COARSESEARCH;                                       29140000
         BEGIN COMMENT SEARCHES FOR AND ALLOCATES                       29141000
                        SPACE FROM COARSE AND FINE                      29142000
                        TABLES, USING COARSE TABLE                      29143000
                        TO FIND THE AREA, AND FINE                      29144000
                        TABLE TO SQUEEZE OUT GAPS;                      29145000
              FOR I:=0 STEP 1 UNTIL 7 DO                                29146000
              IF (J := COARSETABLE[I]).LONGRUN GEQ CBITS THEN           29147000
              BEGIN COMMENT THERE IS SUFFICIENT SPACE IN THIS WORD;     29148000
                   MASK := (NOT 0).[9:39]-TWO(39-CBITS)+1;  N := -7;    29149000
                   WHILE (J AND MASK)!MASK DO                           29150000
                   BEGIN MASK := MASK.[9:38];  N := N+1 END;            29151000
                   COMMENT SLIDE MASK RIGHT UNTIL YOU FIND THE FIRST    29152000
                             SUFFICIENTLY LONG RUN.  NOTE THAT BIT      29153000
                             SIXTEEN IS THE ZERO POINT, SINCE THE       29154000
                             PRECEDING BITS ARE "CARRIES";              29155000
                   CFRONT := 32|I+N;                                    29156000
                   COMMENT NOW CHECK FINE TABLE TO SEE                  29157000
                             HOW FAR YOU CAN BACK UP                    29158000
                             THIS ENTRY, USING THE                      29159000
                             "NORMALISED" CFRONT TO                     29160000
                             GIVE THE FINE INDEX.                       29161000
                             NOTE THAT, SINCE WE TOOK                   29162000
                             THE FIRST AVAILABLE SPACE                  29163000
                             OF SUFFICIENT SIZE FROM                    29164000
                             THE COARSE TABLE, WE CAN                   29165000
                             BACK UP SEVEN OR LESS BITS                 29166000
                             BY USING THE FINE TABLE.  NOTE THAT        29167000
                             THE SEVEN-BIT OVERLAP IN EACH              29168000
                             WORD IS BOTH NECESSARY AND                 29169000
                             SUFFICIENT.                                29170000
                        ;                                               29171000
                   STREAM(N:=0 & CFRONT[43:46:2]: % 8|(CFRONT MOD 4)    29172000
                             T:=FINETABLE[CFRONT.[39:7]]);              29173000
                   BEGIN SI:=LOC T; SI:=SI+1;                           29174000
                        SKIP 3 SB; SKIP N SB;                           29175000
                        7(IF SB THEN TALLY:=TALLY+1                     29176000
                                ELSE TALLY:=0; SKIP SB);                29177000
                        N:=TALLY                                        29178000
                   END;                                                 29179000
                   IF P(DUP)>(SIZE-1).[45:3]                            29180000
                     THEN CBITS := CBITS-1;                             29181000
                   COMMENT IF TEST WAS PASSED, WE SAVED A COARSE BIT;   29182000
                   ALLOCATE(COARSETABLE, CFRONT, CBITS);                29183000
                   CFRONT := P(CHS)+8|CFRONT;                           29184000
                   ALLOCATE(FINETABLE, CFRONT, SIZE);                   29185000
                   I := 7                                               29186000
              END                                                       29187000
         END;                                                           29188000
                                                                        29189000
         SUBROUTINE SEARCH;                                             29190000
         IF (COARSETABLE := CTABLE[INDEX]).[CF]!0 THEN                  29191000
         BEGIN FINETABLE := FTABLE[INDEX];                              29192000
              IF SIZE<8 THEN FINESEARCH                                 29193000
                        ELSE COARSESEARCH                               29194000
         END;                                                           29195000
                                                                        29196000
    % * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * %   29197000
                                                                        29198000
         IF SIZE>1022 THEN P(0, RTN);                                   29199000
         IF (SIZE := SIZE.[38:6]+1)<8 THEN INDEX := 1                   29200000
                        ELSE CBITS := (SIZE+7).[39:6];                  29201000
         CFRONT := -1;  SEARCH;                                         29202000
         IF CFRONT<0 THEN                                               29203000
         BEGIN INDEX := 1-INDEX;  SEARCH END;                           29204000
         IF CFRONT<0 THEN CFRONT := 0                                   29205000
           ELSE CFRONT := CFRONT & (14+INDEX)[33:44:4];                 29206000
    END AUXILIARYSPACE;                                                 29207000
 SAVE PROCEDURE FORGETAUXILIARYSPACE(SIZE, LOC);                        29300000
    VALUE     SIZE, LOC;                                                29301000
    INTEGER   SIZE, LOC;                                                29302000
    BEGIN COMMENT RETURNS AUXILIARY MEMORY SPACE                        29303000
                   TO THE FINE AND COARSE TABLES.                       29304000
                   EXAMINES BOUNDARY CONDITIONS TO                      29305000
                   DETERMINE WHETHER COARSE TABLE                       29306000
                   UPDATE IS REQUIRED, MARKS FINE                       29307000
                   TABLE ENTRIES IN ANY EVENT;                          29308000
                                                                        29308100
         INTEGER   FIRST,                                               29309000
                   LAST,                                                29310000
                   TABLE,                                               29311000
                   INDEX;                                               29312000
                                                                        29312100
         ARRAY     FINETABLE[*];                                        29313000
                                                                        29313100
         DEFINE    RETURN(RETURN1,RETURN2,RETURN3) =                    29314000
                        FILLORKILL(RETURN1,RETURN2,RETURN3,1)#;         29315000
                                                                        29316000
         BOOLEAN SUBROUTINE NOTALLTHERE;                                29317000
         BEGIN;STREAM(N:=INDEX AND 24:                                  29318000
                        T:=NOT FINETABLE[INDEX.[37:6]]);                29319000
              BEGIN SI:=LOC T; SI:=SI+2; SKIP 3 SB; SKIP N SB;          29320000
                   8(SKIP SB; IF SB THEN TALLY:=1); N:=TALLY            29321000
              END;                                                      29322000
              NOTALLTHERE := POLISH                                     29323000
         END;                                                           29324000
                                                                        29325000
         RETURN(FINETABLE:=FTABLE[TABLE:=LOC.[36:1]],                   29326000
                        LOC:=LOC.[37:11],(SIZE:=SIZE.[38:6])+1);        29327000
         FIRST := (INDEX := LOC).[37:8];                                29328000
         IF NOTALLTHERE THEN FIRST := FIRST+1;                          29329000
         IF (LAST := (INDEX := LOC+SIZE).[37:8])<FIRST THEN P(XIT);     29330000
         IF NOTALLTHERE THEN                                            29331000
           IF (LAST:=LAST-1)<FIRST THEN P(XIT);                         29332000
         RETURN(CTABLE[TABLE], FIRST, LAST-FIRST+1);                    29333000
    END FORGETTING AUXILIARY MEMORY SPACE;                              29334000
 PROCEDURE AUXILIARYTABLEINITIALIZE;                                    29400000
    BEGIN INTEGER  AREA,                                                29401000
                   INDEX;                                               29402000
                                                                        29403000
         LABEL     CON1,                                                29404000
                   CON2;                                                29405000
         BOOLEAN   B;                                                   29406000
         SUBROUTINE SETUPARRAYROW;                                      29410000
         BEGIN COMMENT SETS UP COARSETABLE AND FINETABLE                29411000
                        ENTRIES FOR AVAILABLE ROW "INDEX" (0 OR 1);     29412000
              IF AREA=0 THEN AREA := GETSPACE(74,0,1)+2;                29413000
              M[AREA+1] := P(CON2);  MOVE(71,AREA+1,P(DUP)+1);          29414000
              M[AREA+9] := M[AREA] := P(CON1);  M[AREA+8] := 0;         29415000
              CTABLE[INDEX] := [M[AREA  ]] &  9[8:38:10] & AREA[CTF];   29416000
              FTABLE[INDEX] := [M[AREA+9]] & 65[8:38:10];               29417000
         END;                                                           29418000
                                                                        29419000
         SUBROUTINE WHOLETHING;                                         29420000
         BEGIN AREA := CTABLE[INDEX].[FF];                              29421000
              IF NOT B THEN                                             29422000
              BEGIN IF AREA!0 AND AREA<PRT.[CF] THEN                    29423000
                   BEGIN FORGETSPACE(AREA);  AREA := 0 END;             29424000
                   CTABLE[INDEX] := 0 & AREA[CTF];                      29425000
                   FTABLE[INDEX] := 0                                   29426000
              END ELSE SETUPARRAYROW;                                   29427000
         END;                                                           29428000
                                                                        29429000
         %**************************************************            29430000
         INDEX := 0;  B := USEDRA AND P(RRR).[31:1];  WHOLETHING;       29431000
         INDEX := 1;  B := USEDRB AND P(RRR).[30:1];  WHOLETHING;       29432000
         P(XIT);                                                        29433000
    CON1:::   @0100037777777777;                                        29434000
    CON2:::   @0107777777777777;                                        29435000
    END;                                                                29436000
 PROCEDURE AUXILIARYMEMORYCASUALTYRECOVERY;                             29500000
    BEGIN COMMENT RECOVERS "LOST" AUXILIARY MEMORY                      29501000
              USED FOR DATA STORAGE FOR A JOB                           29502000
              WHICH TERMINATED ABNORMALLY;                              29503000
         REAL J;                                                        29504000
         INTEGER   I,                                                   29505000
                   T,                                                   29507000
                   AREA,                                                29508000
                   INDEX;                                               29509000
                                                                        29510000
         ARRAY     A[*];                                                29511000
                                                                        29512000
         LABEL     LOOP,                                                29513000
                   EXIT,                                                29514000
                   DONE;                                                29515000
                                                                        29516000
         SUBROUTINE FIRSTAID;                                           29517000
         BEGIN IF (A:=FTABLE[INDEX]) = (I:=0) THEN GO TO EXIT;          29518000
    LOOP:     IF I.[36:1] THEN GO TO EXIT;                              29520000
              IF (J := (NOT A[I.[37:6]]).[16:32])=0 THEN                29521000
              BEGIN I := (I OR 31)+1;  GO TO LOOP END;                  29522000
              STREAM(J: S:=I.[43:5], N:=P(DUP, 32, XCH, SUB));          29523000
              BEGIN SI:=LOC J; SI:=SI+2;                                29524000
                   SKIP 3 SB; SKIP S SB;                                29525000
                   N(SKIP SB; IF SB THEN JUMP OUT;                      29526000
                        TALLY:=TALLY+1);                                29527000
                   J:=TALLY                                             29528000
              END;                                                      29529000
              IF I.[36:7]!(I:=P(XCH)+I).[36:7] THEN GO TO LOOP;         29530000
         DISKWAIT(AREA-1,0,NABS(0&I[33:37:11]&INDEX[CTF]));             29531000
              IF (J:=M[T])>0 AND J.[CF]=P1MIX THEN                      29532000
              BEGIN FORGETAUXILIARYSPACE(J.[FF], I & INDEX[36:47:1]);   29533000
                   IF (AUXDATA[P1MIX] := *P(DUP)-J.[23:6]-1) = 0        29534000
                     THEN GO TO DONE;                                   29535000
              END;                                                      29536000
              I := I+J.[23:6]+1;                                        29537000
              GO TO LOOP;                                               29538000
    EXIT::                                                              29539000
         END FIRSTAID;                                                  29540000
                                                                        29541000
         IF AUXDATA[P1MIX]=0 THEN P(XIT);                               29542000
         AREA := NABS(T := GETSPACE(10,0,0)+3);                         29543000
         IF NOT STOREDY THEN SLEEP([TOGLE], STOREMASK);                 29544000
         TOGLE := TOGLE AND NOT STOREMASK;                              29545000
         FIRSTAID;  INDEX := 1;  FIRSTAID;                              29546000
    DONE::  FORGETSPACE(T-1);                                           29547000
$INCLUDE 29547051, IF DEBUGGING;                                        29547049
         IF AUXDATA[P1MIX]!0 THEN DDT;                                  29547050
         TOGLE := TOGLE OR STOREMASK;                                   29548000
    END CASUALTY RECOVERY OF STORAGE THROUGH LINKS IN AUX MEM;          29549000
 COMMENT  ERRORMESSER IS CALLED BY ERRORFIXER (IF OPTION 33 IS ON) TO   30900000
          TYPE OUT A PSEUDO-TERMINAL MESSAGE. IT DOES ABOUT THE SAME    30901000
          THING AS THE FIRST PART OF TERMINALMESSAGE;                   30902000
 PROCEDURE ERRORMESSER(TYPE); VALUE TYPE; REAL TYPE;                    30903000
    BEGIN INTEGER S,ADR,BF,SA,N;                                        30904000
          NAME SD;                                                      30905000
          LABEL L;                                                      30906000
          BF~GETSPACE(10,0,0)+2;                                        30907000
          SD~PRT[P1MIX,4];                                              30908000
          NT1~SD[0];                                                    30909000
          ADR~M[PRT[P1MIX,8]].[CF];                                     30910000
          FOR S~1 STEP 1 UNTIL NT1 DO                                   30911000
              IF (SA~SD[S].[18:15])>1023 AND SA{ADR AND SD[S]>0 THEN    30912000
              IF M[SA-1].[18:15]+SA}ADR THEN GO L;                      30913000
          S~0;                                                          30914000
  L:      TERMINALMESSAGES;                                             30915000
          ADR~ADR-SA;                                                   30916000
          SD~[M[P(.TERMINALMESSAGES,LOD)]];                             30917000
          N~IF TYPE=1 THEN 11 ELSE IF TYPE=2 THEN 9 ELSE IF TYPE=4 THEN 30918000
                   7 ELSE IF TYPE=8 THEN 13 ELSE 5;                     30919000
          STREAM(M~[SD[N]],J~[JAR[P1MIX,0]],P1MIX,S,ADR,X~S!0,BF);      30920000
          BEGIN SI~M; SI~SI+2; DS~6 CHR; BF~DI; DI~LOC M; SI~SI+1;      30921000
                DI~DI+7; DS~CHR; DI~BF; DS~M CHR; DS~8 LIT" BRANCH ";   30922000
                SI~J; SI~SI+1; DS~7 CHR; DS~LIT"/";                     30923000
                SI~SI+1; DS~7CHR; DS~LIT"="; SI~LOC P1MIX;              30924000
                DS~2DEC; BF~DI; DI~DI-2; DS~FILL; DI~BF;                30924500
              X(DS~5 LIT", S ="; SI~LOC S; DS~4 DEC; DS~5 LIT", A =";   30925000
                   DS~4 DEC; BF~DI; DI~DI-4; DS~3 FILL;                 30926000
                   DI~BF; DI~DI-13; DS~3 FILL);                         30927000
                DI~BF; DS~ LIT"~";                                      30928000
          END;                                                          30929000
          SPOUT(BF);                                                    30930000
    END ERRORMESSER;                                                    30931000
 PROCEDURE ERRORFIXER(TYPE); VALUE TYPE; INTEGER TYPE;                  31000000
    COMMENT LOOKS FOR RUN-TIME-ERROR ACTION LABELS IN ALGOL PROGRAMS,   31001000
         AND HANDLES THEM, RETURNING ONLY IF NO LABEL GIVEN;            31002000
    BEGIN ARRAY AIT[*],PRTD[*];                                         31003000
          NAME        ADDR;                                             31004000
          REAL I, GOT, ADR=ADDR,LABLE;                                  31005000
          CHECKSTACKSPACE;                                              31005010
                        IF JAR[P1MIX,2].[3:1] THEN                      31005100
                        IF(PRT[P1MIX,@51]AND @20)!0 THEN                31005200
                        BEGIN M[PRT[P1MIX,8].[CF]-2]~@777777777777777;  31005300
                              PRT[P1MIX,@51].[45:2]~2;                  31005400
                        GO TO INITIATE;                                 31005500
                        END;                                            31005600
          IF JAR[P1MIX,2]}0 THEN % MUST NOW REALLY BE ALGOL-TYPE        31006000
         BEGIN PRTD~PRTROW[P1MIX];                                      31006100
               WHILE (AIT~PRTD     [AITNDX]).PBIT=0 DO                  31007000
                   MAKEPRESENT([PRTD     [AITNDX]] INX 0);              31008000
              I~AIT[0]+1;                                               31009000
              DO I~I-1 UNTIL((GOT~ (ADDR~AIT[I]).OWNBIT AND ( ADR.[CF]  31010000
                        =TYPE)) OR(I{1)); % LOOK FOR ENTRY              31011000
              IF GOT THEN % WILL REINITIATE THE GUY, SO SET HIM UP      31012000
              BEGIN IF (LABLE~M[ ADR.MOM])!0 THEN                       31013000
                   IF LABLE!15 THEN                                     31013050
                   IF LABLE.BLKCNTR{(PRTD[16]+(LABLE.MOM!0))THEN        31013100
                   BEGIN IF PRTD     [CURBLKCNTR]>LABLE.BLKCNTR THEN    31014000
                        BEGIN PRTD     [CURBLKCNTR]~LABLE.BLKCNTR+1;    31015000
                              ASR;                                      31016000
                        END; IF(ADDR~LABLE.MOM)=0 THEN                  31017000
                             LABLE.MOM~ADDR~PRTD[10].MOM+2;             31017100
                        ADDR~ADDR&ADR[33:33:15];                        31017200
                        IF OPTION.[33:1] THEN ERRORMESSER(TYPE);        31017210
                        IF PRTD[LABLE.[CF]].PBIT=0 THEN                 31017300
                             MAKEPRESENT([PRTD[LABLE.[CF]]].[CF]);      31017400
                        DO UNTIL(*(ADDR~HUNT(ADDR+1))).[1:3]=4;         31018000
                          ADDR    [1]~M[PRTD     [8] INX NOT 0];        31019000
                          ADDR    [2]~M[PRTD     [8]]&0[10:10:2]&       31020000
               (LABLE)[18:18:15]&PRTD     [(LABLE).[CF]][33:33:15];     31021000
                        PRTD     [8]~P(DUP,LOD)&(ADDR INX 2)[33:33:15]; 31022000
                        GO INITIATE;                                    31023000
         END; END; END;                                                 31024000
    END ERRORFIXER;                                                     31025000
PROCEDURE JOBMESS(MIX,Q,A,B,C,D); VALUE MIX,Q,A,B,C,D;%                 32000000
    REAL MIX,Q,A,B,C,D;%                                                32000100
    COMMENT : THIS PROCEDURE CAN BE USED TO BUILD AND SPOUT A MESSAGE   32000110
              THAT IS TO BE PRECEEDED BY A <JOB SPECIFIER> WHICH IT     32000120
              BUILDS AUTOMATICALLY FOR THE MIX GIVEN;                   32000130
    BEGIN REAL BUF,T;%                                                  32000200
         BUF ~(GETSPACE(8,0,0)+2);%                                     32000300
         IF MIX = 0 THEN                                                32000400
         BEGIN T:=SPACE(30);DISKWAIT(-T,30,0);                          32000500
               STREAM(M:=M[T+10+5|SYSNO],F:=M[T+11+5|SYSNO],BUF);       32000510
               BEGIN DS:=2LIT"0:";SI:=LOC M;SI:=SI+1;DS:=7CHR;          32000520
                     DS:=LIT"/";SI:=SI+1;DS:=7CHR;DS:=3LIT"= 0";        32000530
               END;                                                     32000540
               FORGETSPACE(T);T:=(BUF+2)&4[30:45:3];%                   32000600
         END ELSE%                                                      32000700
         BEGIN; STREAM(C~0:R~ IF (T~ PRYOR[MIX])<0 THEN T ELSE T INX 0, 32000800
           J~ JARROW[MIX], MIX, BUF);                                   32000810
         BEGIN DS ~ LIT " "; SI ~ LOC R; DS ~ 6 DEC;%                   32000850
              DI ~ DI-6; DS ~ 5 FILL; DI ~ BUF; DI ~ DI+7;%             32001000
              DS ~ LIT ":"; SI ~ J; SI ~ SI+1; DS ~ 7 CHR;%             32001100
              DS ~ LIT "/"; SI ~ SI+1; DS ~ 7 CHR;%                     32001200
              DS ~ LIT "="; SI ~ LOC MIX; DS ~ 2 DEC;%                  32001300
              C ~ DI; DI ~ DI -2; DS ~ 2 FILL;%                         32001400
         END STREAM;%                                                   32001500
         T ~ POLISH;%                                                   32001525
         END;%                                                          32001550
         STREAM(A~[A],Z~0,T);%                                          32001700
         BEGIN SI ~ A; DS ~ LIT " ";%                                   32001800
              4(IF SC ! "+" THEN                                        32001900
              BEGIN TALLY ~ 7; SI ~ SI +1;     %                        32001910
                   6(L: IF SC = "0" THEN%                               32001920
                   BEGIN TALLY ~ TALLY + 63; SI ~ SI + 1;               32002000
                   END ELSE JUMP OUT);%                                 32002050
                   Z ~ TALLY; DS ~ Z CHR;%                              32002070
              END ELSE SI ~ SI + 8);%                                   32002090
              DS ~ LIT "~";%                                            32002100
         END STREAM;%                                                   32002200
         SPOUT(BUF & Q[9:9:9]);%                                        32002300
    END JOBMESS;%                                                       32002400
PROCEDURE MIXPRINT(Q); VALUE Q; REAL Q;                                 32100000
    COMMENT THIS PROCEDURE INVOKES JOBMESS TO TYPE THE JOB SPECIFIERS   32100010
         OF EACH ACTIVE MIX;%                                           32100020
    BEGIN REAL T,I;                                                     32100100
         FOR I~1 STEP 1 UNTIL MIXMAX DO                                 32100200
         IF JAR[I,*] ! 0 THEN%                                          32100300
         BEGIN JOBMESS(I,Q,-0,-0,-0,-0); T ~ 1 END;%                    32100350
         IF NOT T THEN% NULL MIX                                        32100400
         BEGIN; STREAM(T~T~GETSPACE(2,0,0)+2); DS~11LIT " NULL MIX~";%  32100500
              SPOUT(T & Q[9:9:9]);%                                     32100600
         END NULL MIX;                                                  32100700
    END MIXPRINT;%                                                      32100800
$INCLUDE 35426001,IF DATACOM AND DCSPO AND NOT INQUIRY;                 34999999
COMMENT  IRP, DEC 67                                                    35000000
    EGGENTER, EGGSELECT, EGGREMOVE AND CODE AT THE TIMER INTERRUPT      35001000
AREA PROVIDE AN EGGTIMER FACILITY WHICH CAN BE USED TO ENVOKE AN        35002000
ACTION AFTER A GIVEN PERIOD OF TIME.  ONE OF TWO ACTIONS CAN BE CAUSED: 35003000
              (1) THE CONTENTS OF A MEMORY LOCATION CAN BE MODIFIED OR  35004000
              (2) A ONE-PARAMETER PROCEDURE CAN BE CALLED.              35005000
    IF (1) IS DESIRED,A  CALL ON EGGENTER SHOULD BE PERFORMED PASSING   35006000
A NEGATIVE VALUE IN "WHATODO"--THE C-FIELD OF "WHATODO" MUST CONTAIN    35007000
THE  ADDRESS OF THE LOCATION TO BE MODIFIED.  THEN AFTER "SECONDS"      35008000
SECONDS,THE  VALUE OF "PARAMETER" WILL OR-ED INTO THAT LOCATION.        35009000
    IF (2) IS DESIRED, "WHATODO" MUST CONTAIN ONLY THE ADDRESS OF THE   35010000
PROCEDURE TO BE CALLED--THE ADDRESS MUST BE IN "WHATODO".[CF].  AFTER   35011000
"SECONDS" SECONDS THE PROCEDURE WILL BE CALLED PASSING "PARAMETER" AS   35012000
ITS PARAMETER.  NOTE: THE PROCEDURE IS CALLED, NOT RUN THROUGH USE      35013000
OF  INDEPENDENTRUNNER.                                                  35014000
    EGGSELECT IS RUN AT TIMER, WHEN REQUIRED.                           35015000
    EGGREMOVE IS CALLED BY EGGSELECT TO REMOVE ENTRIES WHICH HAVE BEEN  35017000
ACTED UPON.  IF EARLY REMOVAL IS DESIRED, EGGREMOVE MAY BE CALLED       35019000
DIRECTLY.  WHEN THIS IS DONE, "WHATODO" AND "PARAMETER" MUST BE         35020000
IDENTICAL    TO THOSE IN THE EGGENTER CALL WHICH MADE THE ENTRY--"SPACE"35021000
MUST BE ZERO.                       ;                                   35022000
REAL WATER,BACKWATER;                                                   35101000
INTEGER EGGCLK;                                                         35102000
PROCEDURE EGGENTER (WHATODO,PARAMETER,SECONDS);                         35200000
    VALUE WHATODO,PARAMETER,SECONDS;                                    35201000
    REAL WHATODO,PARAMETER;                                             35202000
    INTEGER SECONDS;                                                    35204000
    BEGIN                                                               35205000
    REAL SPACE;                                                         35206000
    M[SPACE~GETSPACE(3,0,0)+1]~P(..WATER,NT1,DEL)&NOT(EGGCLK INX        35208000
         SECONDS)[CTF];                                                 35208100
    M[SPACE-1].[9:6] ~ 0;                                               35209000
    M[SPACE+1] ~ BACKWATER;                                             35210000
    M[BACKWATER-1].[CF] ~ SPACE;                                        35211000
    BACKWATER ~ SPACE + 1;                                              35212000
    M[SPACE+2] ~ WHATODO;                                               35213000
    M[SPACE+3] ~ P(.PARAMETER,LOD,RFB);                                 35213500
    END EGGENTER;                                                       35214000
PROCEDURE EGGSELECT(PARAMETER);                                         35301000
    VALUE PARAMETER;                                                    35302000
    REAL PARAMETER;                                                     35303000
    BEGIN                                                               35304000
    REAL RCW=+0, WHATODO=+1,SPACE=+2;                                   35305000
    P(GETSPACE(128,10,0) +1,STS,PARAMETER,RCW,0,RDS,0,XCH,CFX,STF);     35307000
    STACKUSE ~ TRUE;                                                    35308000
    P(0,0);                                                             35309000
    WHILE P(WATER,0&NOT(EGGCLK)[CTF],LLL,0,INX,.SPACE,STD)!WATER        35312000
    DO                                                                  35313000
         BEGIN                                                          35314000
         WHATODO ~ M[SPACE+2];                                          35315000
         PARAMETER~M[SPACE+3];                                          35316000
         EGGREMOVE(WHATODO,PARAMETER,SPACE);                            35317000
         IF PARAMETER<0 THEN                                            35318000
              M[WHATODO] ~*P(DUP) OR PARAMETER                          35319000
          ELSE                                                          35320000
              BEGIN                                                     35320100
              NT4~ WHATODO; % ESPBIT USES THIS IF PROCEDURE NOT PRESENT 35320200
              P(MKS,*WHATODO,PARAMETER,COC);                            35321000
              END;                                                      35321500
         END;                                                           35322000
    IF M[WATER] = WATER THEN                                            35323000
         EGGCLK ~ 0;                                                    35324000
   EGGSELECTSTOPPED ~ TRUE;                                             35325000
    KILL([PARAMETER]);                                                  35326000
   END EGGSELECT;                                                       35327000
     PROCEDURE EGGREMOVE(WHATODO,PARAMETER,SPACE);                      35401000
    VALUE WHATODO,PARAMETER,SPACE;                                      35402000
    REAL WHATODO,PARAMETER,SPACE;                                       35403000
    BEGIN                                                               35404000
    LABEL TAKITOUT,EGGONE;                                              35405000
    IF M[WATER.[CF]] = WATER THEN                                       35408000
         GO TO EGGONE;                                                  35409000
    IF SPACE ! 0 THEN                                                   35410000
         GO TO TAKITOUT                                                 35411000
    ELSE                                                                35412000
         SPACE ~ WATER.[CF];                                            35413000
    DO                                                                  35414000
         IF M[SPACE+3]=PARAMETER THEN                                   35415000
              IF M[SPACE+2]=WHATODO THEN                                35416000
                   GO TO TAKITOUT                                       35417000
    UNTIL                                                               35418000
         M[SPACE~M[SPACE].[CF]] = WATER;                                35419000
    GO TO EGGONE;                                                       35420000
TAKITOUT:                                                               35421000
    M[M[SPACE+1]-1].[CF] ~ M[SPACE];                                    35422000
    M[M[SPACE]+1].[CF] ~ M[SPACE+1];                                    35423000
    FORGETSPACE(SPACE+1);                                               35424000
EGGONE:                                                                 35425000
    END EGGREMOVE;                                                      35426000
PROCEDURE DOLITTLE(OK,T,A,B,Z); VALUE T,A,B; REAL OK,T,A,B,Z;           36001000
BEGIN COMMENT FILE Q&A;                                                 36002000
LABEL E,L; REAL Q; NAME N=Z;                                            36003000
DEFINE X=REPLY[P1MIX]#, DS=TERMIX.[CF]=P1MIX#;                          36004000
IF OK THEN GO E;                                                        36005000
L:  FILEMESS(A,B,N[0],N[1],N[2],N[3],N[4]);                             36006000
X~-T; COMPLEXSLEEP(X>0 OR Q~OK OR DS);                                  36007000
IF DS THEN GO E; IF NOT Q THEN IF NOT WHYSLEEP(T) THEN GO L;            36008000
E:  NT6~X; X~0                                                          36009000
END OF DOLITTLE;                                                        36010000
REAL PROCEDURE FINDOUTPUT(MID,FID,REEL,CDATE,CYCLE,TYPE,FORMS,KIND);    37000000
              VALUE MID,FID,REEL,CDATE,CYCLE,TYPE,FORMS;                37001000
              REAL MID,FID,REEL,CDATE,CYCLE,TYPE,FORMS,KIND;            37002000
BEGIN INTEGER GOTL,GOTT,GOTB,GOTP,GOTC;                                 37003000
      REAL U;                                                           37003100
      LABEL EXIT,SW,ON,OWT,AROUND,OUKID,X,ROUND,CLAIMT,THERE,SOMEWHERE; 37004000
      REAL MID=MID;  %FAKE OUT COMPILER                                 37004100
LABEL W3;                                                               37005000
      REAL SUBROUTINE DSED; DSED~TERMIX.[33:15]=P1MIX;%                 37006000
      LABEL CP,MT,SU,PP,CKFM,DOITOVER;                               %P 37007000
      DEFINE PNTOG=(TYPE=0 OR TYPE GEQ 20)#;                            37007100
      SWITCH TYPESW~CP,ROUND,MT,SU,ROUND,SU,ROUND,PP,PP,MT;          %P 37008000
      REAL SUBROUTINE PRINTER;%                                         37009000
      BEGIN IF LABELTABLE[20]=0 THEN BEGIN U~20; P(1) END ELSE%         37010000
            IF LABELTABLE[21]=0 THEN BEGIN U~21; P(1) END ELSE P(0);%   37011000
            PRINTER~GOTL~P;%                                            37012000
      END PRINTER;%                                                     37013000
      REAL SUBROUTINE PTPUNCH;%                                         37014000
      BEGIN IF LABELTABLE[26]=0 THEN BEGIN U~26; P(1) END ELSE%         37015000
            IF LABELTABLE[29]=0 THEN BEGIN U~29; P(1) END ELSE P(0);%   37016000
            PTPUNCH~GOTP~P;%                                            37017000
      END PTPUNCH;%                                                     37018000
      REAL T1,T2,T3;%                                                   37019000
      REAL SUBROUTINE PUNCH;%                                           37019100
      BEGIN IF LABELTABLE[22]=0 THEN BEGIN U~22;P(1) END ELSE P(0);     37019200
            PUNCH~GOTC~P;                                               37019300
      END PUNCH;                                                        37019400
      REAL SUBROUTINE MAGTAPE;%                                         37020000
      BEGIN IF NOT(GOTL OR GOTB OR GOTC) THEN%                          37021000
      BEGIN IF T1!0 THEN%                                               37022000
            BEGIN FOR U~0 STEP 1 UNTIL 15 DO%                           37023000
                  IF (MULTITABLE[U] EQV T1)=NOT 0 THEN%                 37024000
                  IF LABELTABLE[U]<0 THEN%                              37025000
                  IF RDCTABLE[U].[8:6]=P1MIX THEN%                      37026000
                  IF (T3~PRNTABLE[U])<0 THEN%                           37027000
                  IF M[M[T3.[15:15]-3] INX 5].[41:1] THEN%              37028000
                  BEGIN P(1); GO OWT END;%                              37029000
            END;%                                                       37030000
            FOR U~0 STEP 1 UNTIL 15 DO%                                 37031000
            IF LABELTABLE[U]=0 THEN BEGIN P(1); GO OWT END;%            37032000
      END;%                                                             37033000
            P(0);%                                                      37034000
      OWT:  MAGTAPE~GOTT~P;%                                            37035000
      END MAGTAPE;%                                                     37036000
      SUBROUTINE BADFM;     %BUILD AND SPOUT BAD FM MESSAGE %           37036100
      BEGIN                                                  %RHR       37036200
           T1~GETSPACE(10,0,0)+2;                            %RHR       37036300
           STREAM(A~TINU[U],MX~P1MIX,T1);                    %RHR       37036400
           BEGIN DS~19 LIT "INVALID INPUT UNIT ";            %RHR       37036500
                SI~LOC MX; DS~2 DEC; DS~2 LIT"FM";           %RHR       37036600
                SI~LOC A; SI~SI+5; DS~3 CHR;                 %RHR       37036800
                DS~LIT "~"; DI~DI-8; DS~FILL;                %RHR       37036900
           END; SPOUT(T1);                                   %RHR       37037000
           LABELTABLE[U]~@114; READY~READY AND (U~NOT TWO(U));          37037100
           RRRMECH~RRRMECH AND U; SAVEWORD~SAVEWORD AND U;   %RHR       37037200
      END BADFM SUBROUTIN;                                   %RHR       37037300
      REAL SUBROUTINE BKUPTAPE;%                                        37038000
      BEGIN IF NOT(GOTL OR GOTC) THEN                                   37039000
            FOR U~0 STEP 1 UNTIL 15 DO%                                 37040000
            IF (LABELTABLE[U] EQV T3)=NOT 0 THEN%                       37041000
            IF (MULTITABLE[U] EQV T2)=NOT 0 THEN%                       37042000
            BEGIN P(1); GO AROUND END;%                                 37043000
            P(0);%                                                      37044000
AROUND:     BKUPTAPE~GOTB~P;%                                           37045000
      END BKUPTAPE;%                                                    37046000
      IF TYPE>1 AND TYPE!4 AND TYPE!6 AND TYPE<15 THEN GO SOMEWHERE;    37046020
 ROUND:  IF TYPE=1 OR TYPE=4 OR (TYPE>16 AND TYPE<19) THEN              37046040
         IF PRINTER THEN BEGIN KIND~1; GO CKFM END;                  %P 37046060
         IF TYPE=0 OR (TYPE>20 AND TYPE) THEN                           37046070
         IF PUNCH THEN BEGIN KIND~6; GO X END;                          37046075
         IF TYPE=4 OR TYPE=6 OR TYPE=16 OR TYPE=18 OR                   37046080
         (TYPE GEQ 20 AND NOT TYPE.[46:1]) THEN                         37046090
         BEGIN T1~0; T2~IF TYPE GEQ 20 THEN "PUTMCP " ELSE "PBTMCP ";   37046100
               T3~@122212342546447;                                     37046110
               IF BKUPTAPE THEN GO THERE;                            %P 37046120
               IF MAGTAPE THEN                                       %P 37046140
CLAIMT:       BEGIN MULTITABLE[U]~T2; LABELTABLE[U]~-T3;             %P 37046160
                   RRRMECH~TWO(U) OR RRRMECH;                        %P 37046170
                   T1~GETSPACE(10,0,0)+4;                            %P 37046180
                        STREAM(U:=TINU[U],N:=PRNTABLE[U].[30:18],       37046190
                             A~REEL,B~DATE,C~CYCLE,D~0,PN~TYPE GEQ 20,  37046192
                             T~T1-2);                                   37046194
                   BEGIN DS~12LIT" NEW PBT ON"; SI~LOC U; SI~SI+5;   %P 37046200
                             PN(D~DI; DI~DI-6; DS~2LIT"UT"; DI~D);      37046205
                        DS~3 CHR;DS~25LIT"~ LABEL  0PBTMCP 0BACK-UP";%P 37046210
                             PN(D~DI; DI~DI-14; DS~2LIT"UT"; DI~D);     37046212
                             SI := LOC A; DS := 3 DEC;                  37046215
                            SI:=SI+3;DS:=5CHR;SI:=SI+7;DI:=DI+1;DS:=CHR;37046217
                             15(DS:=2 LIT"0");DI:=DI-11;SI:=LOC N;      37046220
                             DS:=5 DEC;                                 37046221
                   END;                                              %P 37046240
                   P(WAITIO(T1&8[8:38:10]&5[21:45:3],0,U),DEL);      %P 37046260
                   SPOUT(T1-2)    ; T1.[1:11]~@1737;                 %P 37046280
                   P(WAITIO([T1],0,U),DEL);                          %P 37046300
THERE:             LABELTABLE[U].[1:5]~@20; KIND~7; GO EXIT          %P 37046320
         END; END;                                                   %P 37046340
      IF (TYPE GEQ 15 AND TYPE LEQ 18) OR TYPE GEQ 22 THEN              37046360
         BEGIN                                                          37046380
              IF NOT HOLDFREE THEN SLEEP([TOGLE],HOLDMASK);             37046385
              HOLDFREE~0;                                            %P 37046390
              T1~GETSPACE(30,0,0)+2; T2~0;                           %P 37046400
              DISKWAIT(-T1,-30,DIRECTORYTOP);                           37046420
%                                                                       37046440
 DOITOVER:    STREAM(D~T1+8,A~1,T~[T3]);                             %P 37046460
              BEGIN SI~D; DS~WDS; SI~LOC A; DI~D; DS~8 ADD;          %P 37046465
                    DI~DI-8; DS~4 LIT"0";                            %P 37046470
              END; IF T3=0 THEN GO DOITOVER;                         %P 37046475
              DISKWAIT(T1,-30,DIRECTORYTOP);                            37046480
              HOLDFREE:=1;                                              37046500
              KIND:=12; U:=T1;                                          37046510
              STREAM(T3,T1);                                            37046520
              BEGIN                                                     37046530
                   DS~8 LIT"0@+1.013";DS~24 LIT"0";                     37046540
                   DS:=7 LIT"8400000";DS:=10 LIT"0";                    37046560
                   SI~LOC T3;SI~SI+4;DS~4 CHR;DS~3 LIT"001";            37046580
                   46(DS~4 LIT"0");                                     37046600
              END;            M[T1+1]~M[T1+8]~900  ;                 %P 37046620
$ INCLUDE 37046626, IF SHAREDISK;                                       37046624
              M[T1+4].[4:2]:=SYSNO;                                     37046625
              M[T1+5]~MID&(TYPE GEQ 22)[3:47:1]; % CP BK UP TOG         37046630
              M[T1+3] := XCLOCK + P(RTR);                               37046635
              GO EXIT                                                %P 37046640
         END;                                                        %P 37046660
 W3:     FILEMESS("#.. ..."&(IF TYPE=6 OR TYPE=20 THEN "   " ELSE       37046680
                  (IF PNTOG THEN "CP" ELSE "LP"))[12:36:12]             37046690
                  &(IF TYPE<2 THEN "   " ELSE IF TYPE GEQ 20 THEN       37046700
                  "PUT" ELSE "PBT")[30:30:18],                          37046710
                  (IF TYPE<2 THEN "RQD    " ELSE " MT RQD"),MID,FID,    37046720
                  REEL,CDATE,CYCLE); REPLY[P1MIX]~-@312;             %P 37046740
         COMPLEXSLEEP(((IF (TYPE!6 AND TYPE!20) THEN IF PNTOG THEN      37046760
                  PUNCH ELSE PRINTER ELSE 0) OR REPLY[P1MIX]            37046770
                  >0 OR(IF TYPE>1 THEN BKUPTAPE OR MAGTAPE ELSE 0) OR   37046780
                  DSED)); IF DSED THEN GO X;                            37046800
         IF NOT(GOTB OR GOTT OR GOTL OR GOTC) THEN                      37046820
         BEGIN IF NOT WHYSLEEP(@312) THEN GO W3;                     %P 37046840
              IF PNTOG THEN BEGIN U~REPLY[P1MIX].[FF]; GO CP END;       37046850
 OUKID:       TYPE~IF (U~REPLY[P1MIX].[FF])=1 THEN 4 ELSE            %P 37046860
                   IF U=2 THEN 1 ELSE IF U=3 THEN 6 ELSE 15;            37046880
              REPLY[P1MIX]~0; GO  ROUND;                             %P 37046900
         END; REPLY[P1MIX]~0;                                        %P 37046920
         IF GOTB THEN GO THERE ELSE IF GOTT THEN GO CLAIMT ELSE         37046940
         IF GOTC THEN KIND~6 ELSE KIND~1;                               37046950
 CKFM:   IF FORMS THEN                                               %P 37046960
         BEGIN LABELTABLE[U]~-FID; MULTITABLE[U]~MID;                %P 37046980
              DOLITTLE(FALSE,@5030412,"#... FM"&TINU[U][12:30:18],      37047000
              "RQD    ",MID); IF NT6=4 THEN GO EXIT;                    37047100
              KIND~LABELTABLE[U]~MULTITABLE[U]~GOTL~U~0;             %P 37047500
              IF NOT DSED THEN IF NT6.[CF]=5 THEN            %RHR       37047600
              IF (U~NT6.[FF])!20 AND U!21 THEN               %RHR       37047605
              BEGIN BADFM; GO ROUND END ELSE                 %RHR       37047610
              BEGIN LABELTABLE[U]~-FID;                      %RHR       37047625
                    MULTITABLE[U]~MID; KIND~UNIT[U].[1:4];  %RHR        37047650
                    GO EXIT;                                 %RHR       37047660
              END ELSE BEGIN REPLY[P1MIX]~NT6; GO OUKID; END; %RHR      37047670
         END; GO X;                                                  %P 37047700
SOMEWHERE: IF NOT FORMS THEN GO SW;                                     37047800
         DOLITTLE(FALSE,@512,"#FM RQD",0,MID); U~NT6.[FF]; GO X;        37048000
SW:   GO TO TYPESW[TYPE];%                                              37056000
%                                                                       37057000
CP:   TYPE~IF U=1 THEN 21 ELSE IF U=3 THEN 20 ELSE                      37058000
           IF U=5 THEN 0 ELSE 22; REPLY[P1MIX]~0; GO ROUND;             37059000
PP:   DOLITTLE(PTPUNCH,10,"#PP RQD",0,MID); GO X;                       37085000
SU:   T1~FID.[6:18];%                                                   37096000
      FOR U~0 STEP 1 UNTIL 31 DO%                                       37097000
      IF TINU[U].[30:18]=T1 THEN GO ON;%                                37098000
      GO TO MT;%                                                        37099000
ON:   DOLITTLE(LABELTABLE[U]=0,10,"#...   "&T1[12:30:18],               37100000
      "RQD    ",MID); GO X;                                             37100010
MT:   T1~MID;%                                                          37112000
      DOLITTLE(MAGTAPE,10,"#MT RQD",0,MID);                             37113000
      IF (T1~PRNTABLE[U].[15:15])!0 THEN%                               37122000
      BEGIN FILECLOSE(T1&3[18:33:15]);%                                 37123000
            M[M[T1-3] INX 5].[39:4]~1;%                                 37124000
      END;%                                                             37125000
X:    IF DSED THEN U~-1 ELSE                                            37172000
      BEGIN KIND~UNIT[U].[1:4];                                         37173000
      LABELTABLE[U]~-FID; MULTITABLE[U]~MID;%                           37174000
      RDCTABLE[U]~P(DUP,LOD)&REEL[14:38:10]&CDATE[24:31:17]             37174100
                   &CYCLE[41:41:7];                                     37174200
      END; EXIT: FINDOUTPUT~U                                           37175000
END FINDOUTPUT;%                                                        37176000
REAL PROCEDURE FINDINPUT(MID,FID,REEL,CDATE,CYCLE,COBOL,UL,OF,MODE,FN); 37177000
                  VALUE  MID,FID,REEL,CDATE,CYCLE,COBOL,   OF,MODE,FN;% 37178000
                  REAL   MID,FID,REEL,CDATE,CYCLE,COBOL,UL,OF,MODE,FN;% 37179000
BEGIN REAL T1,U,LO,HI,FIRST,IL;                                         37180000
      REAL SUBROUTINE DSED; DSED~TERMIX.[33:15]=P1MIX;%                 37181000
      LABEL SXIT,LOOK,EXIT,START,REW,READALABEL;%                       37182000
      DEFINE UNLABELED=UL#;%                                            37183000
      LABEL WHY;%                                                       37184000
      INTEGER S;%                                                       37185000
       INTEGER USASI;                                                   37185050
      INTEGER COUNT;                                                    37185100
      LABEL X;                                                          37185200
      SUBROUTINE CHECKTERMIX;                                           37185310
IF DSED THEN BEGIN U~-1; GO EXIT END;                                   37185320
COMMENT LET CALLER ATTEND HIS RESPONSIBILITIES;                         37185330
      REAL SUBROUTINE SEARCH;%                                          37186000
      BEGIN COUNT~0; IF NOT DSED THEN                                   37187000
            BEGIN LO~0; HI~15;%                                         37188000
      LOOK:       FOR U~LO STEP 1 UNTIL HI DO%                          37189000
                  IF (LABELTABLE[U] EQV FID)=NOT 0 THEN%                37190000
                  IF (MULTITABLE[U] EQV MID)=NOT 0 THEN%                37191000
                  IF ((T1~RDCTABLE[U]).[14:10]=REEL) OR (REEL=0) THEN%  37192000
                  IF (T1.[24:17]=CDATE) OR (CDATE=0) THEN%              37193000
                  IF (T1.[41:7]=CYCLE) OR (CYCLE=0) THEN%               37194000
                  BEGIN COUNT~COUNT+1; P(U,XCH) END;                    37195000
                  IF HI<24 THEN BEGIN LO~23; HI~24; GO LOOK END;%       37196000
                   IF HI < PSEUDOMAXT THEN%                             37196100
                   BEGIN LO ~ 32;%                                      37196110
                        HI ~ PSEUDOMAXT;%                               37196120
                        GO TO LOOK;%                                    37196130
                   END;%                                                37196140
                  IF COUNT=0 THEN                                       37196200
                  IF MID!0 THEN%                                        37197000
                  IF NOT CDATE.[1:1] THEN % NOT LIBMAIN/DISK            37197500
                  FOR U~0 STEP 1 UNTIL 15 DO%                           37198000
                  IF (MULTITABLE[U] EQV MID)=NOT 0 THEN%                37199000
                  IF (RDCTABLE[U].[24:17]=CDATE) OR (CDATE=0) THEN      37199100
                  IF LABELTABLE[U]>0 THEN%                              37200000
                  BEGIN COUNT~COUNT+1;                                  37201000
                        P(U,XCH);                                       37202000
                  END ELSE%                                             37203000
                  IF RDCTABLE[U].[8:6]=P1MIX THEN%                      37204000
                  IF (T1~M[M[PRNTABLE[U].[15:15]-3] INX 5]).[41:1] THEN 37205000
                       IF T1.[43:1] OR T1.[40:1]=0 THEN%                37206000
                  BEGIN COUNT~COUNT+1; P(U,XCH) END;                    37207000
            END;                                                        37208000
            SEARCH~S~COUNT>0;                                           37209000
      END SEARCH;%                                                      37210000
      REAL SUBROUTINE RESEARCH;                                         37210100
      BEGIN P(SEARCH); DO P(DEL) UNTIL (COUNT~COUNT-1)<0;               37210200
            RESEARCH~S;                                                 37210300
      END RESEARCH;                                                     37210400
      REAL SUBROUTINE REED;%                                            37211000
      BEGIN IF (HI~WAITIO(T1,LO&@377[18:33:15],U) AND @367)!0 THEN      37212000
            IF (HI AND NOT LO)!0 THEN                                   37213000
      BEGIN BLASTQ(U); SETNOTINUSE(U,0); STOPTIMING(FN,1023);           37214000
                  FILEMESS(-"PARITY ","ON ... "&TINU[U][24:30:18],%     37215000
                           MID,FID,REEL,CDATE,CYCLE);%                  37216000
            END;%                                                       37217000
            IF DSED THEN                                                37218000
            BEGIN                                                       37218100
              SETNOTINUSE(U,0);                                         37218200
              STOPTIMING(FN,1023);                                      37218300
              CHECKTERMIX;                                              37218400
            END;                                                        37219000
            REED~HI;%                                                   37220000
      END REED;%                                                        37221000
START:%                                                                 37222000
       IF UL THEN GO TO WHY ELSE %                                      37222500
      IF NOT SEARCH THEN%                                               37223000
WHY:  BEGIN FILEMESS("#NO FIL",0,MID,FID,REEL,CDATE,CYCLE);%            37224000
            FIRST~(((56|UL+OF)|512|ABS(COBOL)+2)|64+12)|64+10;          37225000
            REPLY[P1MIX]~-FIRST;%                                       37226000
            COMPLEXSLEEP(RESEARCH OR (REPLY[P1MIX]>0) OR DSED);         37227000
            CHECKTERMIX;                                                37228000
            IF S THEN S~SEARCH ELSE                                     37229000
      BEGIN IF NOT WHYSLEEP(FIRST) THEN GO TO WHY;%                     37230000
            T1~REPLY[P1MIX];%                                           37231000
             IL:=T1.[33:15]=2;                                          37231100
            BEGIN IF T1.[33:15]!2 THEN BEGIN U~-1; REPLY[P1MIX]~0;%     37232000
                                             GO TO EXIT;%               37233000
                                       END;%                            37234000
                  UNLABELED~-LABELTABLE[U~T1.[18:15]]=@314;%            37235000
                  COUNT~1; P(U);                                        37235100
                  IF LABELTABLE[U]=0 THEN%                              37236000
                  BEGIN MULTITABLE[U]~MID; LABELTABLE[U]~FID END;%      37237000
      END   END;%                                                       37238000
            REPLY[P1MIX]~0;%                                            37239000
      END;%                                                             37240000
      IF COUNT>1 THEN                                                   37240100
SXIT: BEGIN FILEMESS("#DUP   ","FIL    ",MID,FID,REEL,CDATE,CYCLE);     37240200
            WHILE (COUNT~COUNT-1)}0 DO                                  37240300
            BEGIN IF (U~P)<16 THEN IF MID!0 THEN                        37240400
                  IF (T1~PRNTABLE[U].[15:15])!0 THEN                    37240500
                     FILECLOSE(T1&@12[18:33:15]);                       37240600
                  STREAM(X~[TINU[U]]:D~S~GETSPACE(10,0,0)+2);           37240700
                  BEGIN SI~X; SI~SI+5; DS~8 LIT " DUP ON ";             37240800
                        DS~3 CHR; DS~LIT "~";                           37240900
                        X~DI;                                           37240910
                  END;                                                  37241000
                  T1~P;                                                 37241010
                  IF U}32 THEN IF CIDROW[U   -32]!0 THEN                37241020
                        STREAM(DK~CIDTABLE[U   -32,2],T1);              37241030
                             BEGIN DI~DI-1; DS~6 LIT ",DECK ";          37241040
                             SI~LOC DK; SI~SI+1; DS~7 CHR;              37241050
                             END;                                       37241060
                  SPOUT(S);                                             37241100
            END;                                                        37241200
            REPLY[P1MIX]:= -@20412;                                     37241300
            COMPLEXSLEEP(DSED OR (REPLY[P1MIX]>0));                     37241400
            CHECKTERMIX;                                                37241500
            IF (T1~REPLY[P1MIX]).[33:15]=2 THEN                         37241510
              BEGIN REPLY[P1MIX]~0;                                     37241520
                    P(T1.[18:15]);                                      37241530
                    GO TO X;                                            37241540
              END;                                                      37241550
            IF NOT WHYSLEEP(@412) THEN BEGIN S~SEARCH; GO TO SXIT END;  37241600
            REPLY[P1MIX]~0; GO TO START;                                37241700
      END;                                                              37241800
X:                                                                      37241810
      LABELTABLE[U~P].[1:5]~@20;                                        37241900
      IF U<16 THEN IF MID!0 THEN%                                       37242000
      BEGIN IF (T1~PRNTABLE[U].[15:15])!0 THEN%                         37243000
            BEGIN FILECLOSE(T1&3[18:33:15]);%                           37244000
                  M[M[T1-3] INX 5].[39:4]~1;%                           37245000
            END;%                                                       37246000
%                                                                       37247000
            RRRMECH~TWO(U) OR RRRMECH; STARTIMING(FN,U);                37248000
             IF UNLABELED OR IL THEN GO TO EXIT;                        37248500
            T1 ~ (GETSPACE(11,0,0)+2)&10[8:38:10]&MODE[21:47:1]%        37249000
               &3[23:46:2];%                                            37250000
            LO~@40; FIRST~1;%                                           37251000
READALABEL: IF REED ! 0 THEN IF FIRST THEN%                             37252000
REW:        BEGIN FIRST~WAITIO(@4200000000,0,U); GO READALABEL END ELSE 37253000
            BEGIN SETNOTINUSE(U,1); FORGETSPACE(T1.[33:15]);            37254000
                  STOPTIMING(FN,1023); GO TO START END;                 37255000
            STREAM(Y:=0:X:=0,T1);                                       37255100
                BEGIN  DI:=LOC X; DS:=8 LIT "VOL1HDR1";                 37255200
                       SI:=T1; DI:=DI-8;                                37255300
                      IF 4 SC=DC THEN TALLY:=1 ELSE                     37255400
                    BEGIN  SI:=T1; IF 4 SC=DC THEN TALLY:=2; END;       37255500
                       Y:=TALLY;                                        37255700
                END;                                                    37255800
             IF(USASI:=P)>0 THEN USASITAPE(T1.[CF],USASI,2,U,0);        37255900
            STREAM(M~0,F~0,R~0,D~0,C~0:S~T1 INX 1);%                    37256000
            BEGIN SI~S; DI~LOC M; DS~2 WDS; DS~3 OCT;%                  37257000
                  DS:=5 OCT;DS:=2 OCT;                                  37258000
            END;%                                                       37259000
            IF (P=CYCLE OR CYCLE=0) AND (P(XCH)=CDATE OR CDATE=0) AND%  37260000
               (P(XCH)=REEL OR REEL=0)AND ((P(XCH) EQV FID)=NOT 0) AND% 37261000
               ((P(XCH) EQV MID)=NOT 0) THEN%                           37262000
            BEGIN FORGETSPACE(T1.[33:15]); T1~@340000005;%              37263000
                  LO~0;T1~REED; GO TO EXIT;%                            37264000
            END;%                                                       37265000
            IF FIRST THEN GO REW;%                                      37266000
         LO:=@60; DO UNTIL (FIRST:=REED).[42:1]; DO UNTIL REED.[42:1];  37267000
         IF USASI>0 THEN DO UNTIL REED.[42:1] ELSE FIRST:=REED;         37267050
            LO~@40; GO READALABEL;                                      37267100
      END;%                                                             37268000
EXIT: FINDINPUT~U;%                                                     37269000
END FINDINPUT;%                                                         37270000
PROCEDURE STARTIMING(FN,U); VALUE FN,U; REAL FN,U;%                     37271000
BEGIN ARRAY FPB[*]; INTEGER I,J;%                                       37272000
      FPB~PRT[P1MIX,3];%                                                37273000
      IF U<32 THEN                                                      37273100
BEGIN IF FPB[FN+4]}0 THEN                                               37274000
      BEGIN IF (I~FPB[FN+3].[36:6])!0 THEN%                             37275000
            IF I NEQ U+1 OR FPB[FN+2].[8:10] NEQ RDCTABLE[U].[14:10]    37276000
            THEN                                                        37276010
            IF (I~FPB.[8:10])<(1023-ETRLNG) THEN                        37276100
            BEGIN J~GETSPACE(I+ETRLNG,2,1)+2;%                          37277000
                  MOVE(I,FPB,J); MOVE(5,[FPB[FN]],J+I);%                37278000
                  FORGETSPACE(FPB.[33:15]);%                            37279000
                  NFO[(P1MIX-1)|NDX]~                                   37279100
                  PRT[P1MIX,3]~FPB~[M[J]]&(I+ETRLNG)[8:38:10];%         37280000
                  FPB[FN+4]~0; FPB[FN+3].[24:12]~0;%                    37281000
            END;%                                                       37282000
            FPB[FN+4]~FPB[FN+4]-CLOCK-P(RTR);%                          37283000
            FPB[FN+3].[36:6]~U+1;%                                      37284000
           IF U LSS 16 THEN% RDC & PRN LOG ENTRIES                      37284100
           BEGIN ;                                                      37284110
           STREAM(R:=RDCTABLE[U].[14:10],D:=RDCTABLE[U].[24:17],        37284120
                  C:=RDCTABLE[U].[41:7],T:=[FPB[FN  +2]]);              37284130
           BEGIN SI:=LOC R;DS:=3DEC;DS:=5DEC;DS:=DEC END;               37284140
           FPB[FN  +3].[6:17]:=PRNTABLE[U].[31:17];                     37284150
           END;                                                         37284310
END   END ELSE                                                          37285000
BEGIN IF (I~FPB[FN+4]){0 THEN                                           37285100
      BEGIN FPB[FN+4]~I+CLOCK+P(RTR); I~FPB[FN+3].[36:6]-1;             37285200
            FPB[FN+3].[24:12]~P(DUP).[24:12]+TINU[I].[18:12];           37285300
            TINU[I].[18:12]~0;                                          37285400
END END END TIMING;                                                     37285500
REAL PROCEDURE DISKADDRESS(MID,FID,A,H,IO);                             37286000
    VALUE MID,FID,A,H,IO;                                               37286100
    REAL MID,FID,A,IO;                                                  37286200
    ARRAY H[*];                                                         37286300
BEGIN REAL T; INTEGER I; LABEL EOF;%                                    37287000
      IF A}0 THEN%                                                      37288000
      BEGIN T~(A DIV H[0].[30:12])|H[0].[42:6];%                        37289000
            IF H[9]{I~T DIV H[1] THEN GO TO EOF;%                       37290000
            IF IO THEN%                                                 37291000
            BEGIN IF H[I~I+10]=0 THEN GO TO EOF END ELSE%               37292000
              IF H[I:=I+10]=0 THEN                                      37293000
              IF H[4] THEN P(DIRECTORYSEARCH(-MID,FID,-H&I[CTF]),DEL)   37293100
                    ELSE H[I]:=GETUSERDISK(H[8]);                       37293200
            T~H[I]+I~T MOD H[1];%                                       37294000
            STREAM(D~[T]); BEGIN SI~D; DS~8 DEC END;%                   37295000
      END ELSE%                                                         37296000
EOF:  T~0;%                                                             37297000
      DISKADDRESS~T;%                                                   37298000
END DISKADDRESS;%                                                       37299000
                                                                        37300000
                                                                        37301000
PROCEDURE SETNOTINUSE(U,RWL); VALUE U,RWL; REAL U,RWL;                  37302000
BEGIN REAL I,J;                                                         37303000
      IF U<16 THEN P(WAITIO(@4200000000,@377,U),DEL);                   37303100
      SLEEP([TOGLE],STATUSMASK);                                        37304000
      RRRMECH~((I~TWO(U)) AND SAVEWORD) OR ((I~NOT I) AND RRRMECH);%    37305000
      READY~READY AND I;%                                               37306000
      IF RWL THEN                                                       37312000
BEGIN                                                                   37313000
      STREAM(S~[TINU[U]],M~MULTITABLE[U],F~LABELTABLE[U],               37314000
             N~PRNTABLE[U].[30:18],D~J~GETSPACE(10,2,0)+2);             37314100
            BEGIN SI~S; SI~SI+5; DS~LIT "#"; DS~3 CHR;%                 37315000
                  DS~6 LIT " RW/L ";                                    37316000
                  SI~LOC M;SI~SI+1;DS~7 CHR;DS~LIT" ";                  37316100
                  SI~SI+1; DS~7 CHR; DS~LIT"(";                         37316200
                  DS~5 DEC; DS~2 LIT ")~";                              37316300
            END;%                                                       37317000
         SPOUT(J);                                                      37318000
      LABELTABLE[U]~@214;                                               37318100
END ELSE LABELTABLE[U]~@114;                                            37319000
      MULTITABLE[U]~RDCTABLE[U]~0;                                      37319010
      IF U<16 THEN PRNTABLE[U]~0 ;                                      37319020
END SETNOTINUSE;                                                        37319100
PROCEDURE BLASTQ(U); VALUE U; REAL U;%                                  37328000
BEGIN INTEGER I;%                                                       37329000
      I~UNIT[U].[18:15];%                                               37330000
      WHILE I!@77777 DO BEGIN IOQUE[I]~IOQUEAVAIL;%                     37331000
                              IOQUEAVAIL~I+1;%                          37332000
                              I~LOCATQUE[I].[18:15];%                   37333000
                        END;%                                           37334000
      UNIT[U].[5:43]~(NOT 0).[18:30];%                                  37335000
END BLASTQ;%                                                            37336000
PROCEDURE BUILDLABEL(LABLE,MID,FID,REEL,CDATE,CYCLE,PFACT,PTN,BLKODE,%  37337000
                     BSIZE,RSIZE);%                                     37338000
                  VALUE LABLE,MID,FID,REEL,CDATE,CYCLE,PFACT,PTN,BLKODE,37339000
                        BSIZE,RSIZE;%                                   37340000
                  ARRAY LABLE[*];%                                      37341000
                  REAL  MID,FID,REEL,CDATE,CYCLE,PFACT,PTN,BLKODE,%     37342000
                        BSIZE,RSIZE;%                                   37343000
BEGIN;STREAM(D~[PFACT]); BEGIN SI~D; SI~SI+5; DS~3 OCT END;%            37344000
      PFACT~CALCULATEPURGE(PFACT);%                                     37345000
      STREAM(S~[MID],LABLE);%                                           37346000
      BEGIN DS~8 LIT " LABEL  "; SI~S; DS~2 WDS;%                       37347000
            DS~3 DEC; DS~5 DEC; DS~2 DEC; SI~SI+3; DS~5 CHR;%           37348000
            DS~14 LIT "0"; DS~5 DEC; SI~SI+7; DS~CHR;%                  37349000
            DS~5 DEC; DS~5 DEC; DS~11 LIT "0"%                          37350000
      END;%                                                             37351000
      IF (BSIZE~LABLE.[8:10])>10 THEN%                                  37352000
      STREAM(J~JARROW[P1MIX],D~[LABLE[10]]);%                           37353000
      BEGIN SI~J; SI~SI+1; DS~LIT " "; DS~7 CHR;%                       37354000
            SI~SI+1; DS~LIT "/"; DS~7 CHR; 12(DS~2 LIT " ");%           37355000
END   END GUILDLABEL;%                                                  37356000
PROCEDURE FILEMESS(I,K,M,F,R,D,C); VALUE I,K,M,F,R,D,C;%                37357000
                                   REAL  I,K,M,F,R,D,C;%                37358000
BEGIN REAL Z,L;%                                                        37359000
     L~GETSPACE(12,0,0)+2;%                                             37360000
      STREAM(Z:I~[I],J~[JAR[P1MIX,*]],P1MIX,L);                         37361000
      BEGIN SI~I;                                                       37362000
            IF SC="+" THEN BEGIN TALLY~1; DS~LIT "-"; SI~SI+1 END ELSE% 37363000
            BEGIN SI~SI+1; IF SC!"#" THEN DS~LIT " " END;%              37364000
            DS~7 CHR; DS~LIT " "; L~DI;%                                37365000
            2(DI~LOC Z; IF 8 SC!DC THEN BEGIN DI~L; SI~SI-7; DS~7 CHR;% 37366000
                                              DS~LIT " "; L~DI END);%   37367000
            DI~L; SI~SI+1; DS~7 CHR; DS~LIT " "; L~DI;%                 37368000
            3(DI~LOC Z; IF 8 SC!DC THEN BEGIN DI~L; SI~SI-8; DS~7 DEC;  37369000
                                              L~DI; DI~DI-7; DS~6 FILL; 37370000
                                              DI~L; DS~LIT " "; L~DI;   37371000
                                        END);                           37372000
                                                                        37373000
                                                                        37374000
            DI~L; DI~DI-1; DS~LIT ":";%                                 37375000
            Z~TALLY; SI~LOC Z; SI~SI+7;%                                37376000
            IF SC="0" THEN BEGIN SI~J; SI~SI+1; DS~7 CHR; DS~LIT "/";%  37377000
                                 SI~SI+1; DS~7 CHR; DS~LIT "=";%        37378000
                                 SI~LOC P1MIX; DS~2 DEC;                37379000
                                 L~DI; DI~DI-2; DS~FILL; DI~L END;      37379500
            DS~LIT "~";%                                                37380000
      END;%                                                             37381000
      IF P THEN BEGIN TERMINATE(P1MIX); TERMINALMESSAGE(-L) END;%       37382000
      SPOUT(L);%                                                        37383000
END FILEMESS;%                                                          37384000
PROCEDURE FILLBUFFERS(CURRENT,FINAL,NF,NR); VALUE CURRENT,FINAL,NF,NR;% 37385000
                  REAL CURRENT,FINAL,NF,NR;%                            37386000
BEGIN ARRAY LOCAT[*];%                                                  37387000
      INTEGER I,J,K,D;%                                                 37388000
      INTEGER FIRSTLOC=J,PREVLOC=K,CURLOC=D;                            37388100
      REAL T=LOCAT;                                                     37388200
      LABEL LINK;                                                       37388300
      REAL BSIZE=CURRENT,N=FINAL,U=NF,ALPHA=NR;                         37388400
      IF ALPHA<512 THEN                                                 37388500
      BEGIN                                                             37388600
      J~FINAL.[33:15]-K~CURRENT.[33:15];%                               37389000
      D~2&(NOT CURRENT)[1:22:1];%                                       37390000
      LOCAT~M[K+D]; NR~NR-1;%                                           37391000
      FOR I~1 STEP 1 UNTIL NF DO%                                       37392000
      BEGIN IOREQUEST(FLAG(FINAL),CURRENT,LOCAT);%                      37393000
            M[LOCAT]~M[LOCAT]&0[26:26:7] AND NOT(M OR IOMASK);%         37394000
            IF NR>0 THEN STREAM(NR,T~M[LOCAT],LOCAT);%                  37395000
                         BEGIN SI~LOCAT; SI~SI+8; DS~NR WDS;%           37396000
                               SI~LOC T; DS~WDS END;%                   37397000
            CURRENT.[33:15]~K~M[K+D].[18:15];%                          37398000
            FINAL.[33:15]~K+J;%                                         37399000
      END   END ELSE                                                    37400000
      BEGIN                                                             37401000
      T~ALPHA&U[12:42:6] OR M;%                                         37404000
      FOR I~N-1 STEP -1 UNTIL 0 DO%                                     37405000
      BEGIN M[ALPHA+I]~(CURLOC~GETSPACE(BSIZE+4,2,1)+2)+2;              37406000
$INCLUDE 37406101, IF BREAKOUT;                                         37406099
             M[CURLOC-1]~BSIZE+3;                                       37406100
            IF FIRSTLOC=0 THEN FIRSTLOC~CURLOC;%                        37407000
            M[CURLOC+1]~0; MOVE(BSIZE+1,CURLOC+1,CURLOC+2);             37408000
LINK:       M[CURLOC]~FLAG(T)&(PREVLOC+2)[18:33:15];%                   37412000
            M[CURLOC+BSIZE+3]~FLAG(T)&(PREVLOC+BSIZE+1)[18:33:15];%     37413000
            PREVLOC~CURLOC;%                                            37414000
      END;%                                                             37415000
      IF I=(-1) THEN BEGIN CURLOC~FIRSTLOC; GO TO LINK END;%            37416000
      END END FILL OR GET BUFFERS;                                      37417000
REAL PROCEDURE FILEHEADER(MID,FID,NROWS,SIZE,BLEN,RLEN,S);%             37418000
                  VALUE   MID,FID,NROWS,SIZE,BLEN,RLEN,S;%              37419000
                  REAL    MID,FID;%                                     37420000
                  INTEGER         NROWS,SIZE,BLEN,RLEN,S;%              37421000
BEGIN REAL Q,LPER,SPER; ARRAY T=Q[*];                                   37422000
      INTEGER N1,R1,L1,W;                                               37422100
    LABEL EXIT;                                                         37422200
                                                                        37423000
      SPER~(BLEN+29) DIV 30;%                                           37424000
      IF S.[42:6]=0 THEN RLEN~BLEN;%                                    37425000
      Q:=S.[13:3];                                                      37425500
      LPER~BLEN DIV RLEN;%                                              37426000
      IF (NROWS+SIZE)=0 THEN%                                           37427000
    BEGIN                                                               37428000
         IF (N1:=SECURITYCHECK(MID,FID,USERCODE[P1MIX],Q)) LSS 0 THEN   37428100
              GO TO EXIT;                                               37428400
         T:=N1&P(.T,LOD,XCH)[CTF];                                      37429000
            N1~T[7]+1;                                                  37430000
               IF(L1~T[0].[1:14])=0 THEN L1~30;                         37431000
            R1~T[0].[30:12];                                            37432000
            W ~N1 DIV R1 | T[0].[42:6]|30 +N1 MOD R1|L1;                37433000
            T[7]~ W~ W DIV 30 DIV SPER|LPER                             37434000
                   +(W DIV 30 MOD SPER|30 + W MOD 30 + RLEN-1)          37435000
                        DIV RLEN-1;                                     37436000
            T[1] ~(T[8] DIV SPER)| SPER;                                37437000
            T[4]:=(*P(DUP)) OR 1;                                       37437500
      END ELSE%                                                         37439000
      BEGIN T:=M OR (GETSPACE(30,8,1)+@360000700002);                   37440000
            STREAM(T); BEGIN 60(DS~4 LIT "0") END;%                     37441000
            T[3]~XCLOCK+P(RTR);                                         37441500
            T[7] ~ -1;                                                  37442000
            T[1]:=T[8]:=((SIZE+(LPER-1))DIV LPER)| SPER;                37443000
            T[9] ~ NROWS;                                               37444000
      END;%                                                             37445000
      T[0] ~SPER&LPER[30:36:12]&BLEN[15:33:15]&RLEN[1:34:14];           37446000
      FILEHEADER ~ NFLAG(T);                                            37447000
EXIT:                                                                   37447500
END FILEHEADER;%                                                        37448000
PROCEDURE PURGEIT(U); VALUE U; INTEGER U;%                              37449000
BEGIN ARRAY LABLE=+1[*];%                                               37450000
      REAL RCW=+0,EOF=+2;%                                              37451000
      P(GETSPACE(128, 12,0)+1,STS,U,RCW,0,RDS,0,XCH,CFX,STF,0,0);       37452000
      STACKUSE~TRUE;%                                                   37453000
      P(WAITIO(@4200000000,@377,U),DEL);                                37453100
      LABLE~[M[GETSPACE(10,0,0)+2]]&10[8:38:10]&5[21:45:3];%            37454000
      BUILDLABEL(LABLE,0,"X",1,0,1,0,PRNTABLE[U].[30:18],0,0,0);%       37455000
      P(WAITIO(LABLE,@37700000,U),DEL);%                                37456000
      EOF~@1737000000000000;%                                           37457000
      P(WAITIO([EOF],@37700000,U),DEL);%                                37458000
      FORGETSPACE(LABLE.[33:15]);                                       37463000
      SETNOTINUSE(U,0);                                                 37464000
      KILL([U]);%                                                       37465000
END PURGEIT;%                                                           37466000
 PROCEDURE KRUNCHER(H); ARRAY H[*];                                     37500000
         BEGIN DEFINE E=H[7]#,RL=H[1]#,RPB=H[0].[30:12]#,               37501000
                   MAXROWS=H[9]#,                                       37501500
                   BCL=H[0].[42:6]#,BRL=H[8]#;                          37502000
              ARRAY A[*];                                               37504000
              LABEL FORGET,EXIT,AGAIN,DONE;                             37505000
              INTEGER NB,NBR;                                           37506000
              REAL I,J,K,T;                                             37507000
              A:=IOQUE&(GETSPACE(41,0,0)+2)[CTC];                       37508000
              MOVE(41,A.[CF]-1,A);                                      37509000
              IF E LSS 0 THEN GO TO EXIT;                               37510000
              NB:=E DIV RPB;                                            37511000
              NBR:=RL DIV BCL;                                          37512000
              IF RL NEQ BRL THEN                                        37513000
              FOR I:=10 STEP 1 UNTIL 29 DO                              37514000
              IF H[I] NEQ 0 THEN                                        37515000
                   FORGETUSERDISK(H[I]+RL,-(ABS(BRL-RL)));              37516000
              BRL:=RL;                                                  37517000
              IF NB LSS NBR THEN                                        37520000
              BEGIN A[0]:=H[NT2:=10];                                   37521000
                   NT4:=1;                                              37521100
                   RL:=(NB+1)|BCL;                                      37521200
                   GO TO FORGET;                                        37521300
              END;                                                      37521400
              T:=(K:=J:=1)+NBR|20;                                      37522000
    AGAIN:    IF(NT1:=NBR DIV J)=0 THEN GO TO DONE;                     37523000
              IF (NT2:=NB DIV NT1) GTR 19 THEN GO TO DONE;              37524000
              IF NBR MOD J=0 THEN                                       37525000
              BEGIN IF (NT3:=NT1|NT2+NT1) LSS T THEN                    37526000
                   BEGIN K:=J; T:=NT3; NT4:=NT2+1 END;                  37527000
              END;                                                      37528000
              J:=J+1;                                                   37529000
              GO TO AGAIN;                                              37530000
    DONE:     IF K=1 THEN GO TO EXIT;                                   37530100
              NT2:=NB DIV NBR + 10;                                     37530200
              RL:=RL DIV K;                                             37531000
              FOR I:=10 STEP 1 UNTIL NT2 DO                             37532000
              BEGIN IF (NT1:=H[I]-RL) GTR 0 THEN                        37533000
                   FOR J:=1 STEP 1 UNTIL K DO                           37534000
                        A[(I-10)|K+J-1]:=NT1+J|RL;                      37535000
              END;                                                      37536000
              FOR K:=NT4 STEP 1 UNTIL 19 DO A[K]:=0;                    37538000
              MAXROWS:=(NT4 NEQ 20)+NT4; %UPDATE # ROWS USED.           37538500
    FORGET:   IF NB+1 NEQ NBR THEN                                      37539000
                   FORGETUSERDISK(A[NT4-1]+RL,                          37542000
                                  -(ABS((NT2-9)|BRL-NT4|RL)));          37542010
              MOVE(20,A,[H[10]]);                                       37543000
              BRL:=RL;                                                  37544000
    EXIT:     FORGETSPACE(A);                                           37545000
         END;                                                           37546000
PROCEDURE DISKFILEOPEN(ALPHA); VALUE ALPHA; INTEGER ALPHA;              38000000
BEGIN REAL RCW=+0,MSCW=-2;                                              38001000
     REAL IOM=IOMASK,IOMASK=+1;                                         38002000
     INTEGER NBUFS=+2,FNUM=+3,RLEN=+4,TYPE=+5,IO=+6,BLEN=+7,U=+8,       38003000
             KIND=+9,MODE=+10,DIREC=+11,FORMS=+12,COBOL=+13,            38004000
             UNLABELED=+14,OPTIONAL=+15,CNTCTL=+16;                     38005000
     REAL T1=+17,T2=+18,MASK=+19,STATE=+20;                             38006000
     REAL MFID=+21,FID=+22; INTEGER REEL=+23,CDATE=+24,CYCLE=+25;       38007000
     ARRAY FIB=+26[*],FPB=+27[*];%                                      38008000
     INTEGER ACCESS=+28,FIB7=+29;                                       38009000
     LABEL AGN,EXIT;                                                    38009100
     ARRAY HEADER=+30[*];%                                              38010000
     REAL TOG=+31;%                                                     38010100
     SUBROUTINE DISKSETUP;%                                             38011000
      BEGIN IF STATE.[42:1] THEN%                                       38012000
         BEGIN                                                          38013000
              IF NFLAG(FIB[14]:=FLAG(FILEHEADER(MFID,                   38013100
                   FID&FIB[5][1:45:1],FIB[8].[15:10],                   38013200
                   FIB[8].[25:23],BLEN,RLEN,STATE)))=0 THEN             38013300
              BEGIN                                                     38013400
                   P(DEL);                                              38013500
                   TOG:= 1;                                             38013510
                   GO TO EXIT;                                          38013600
              END;                                                      38013700
              IF FIB[8].[15:33]NEQ 0 THEN FPB[FNUM+2].[18:30]:=DATE ELSE38013900
                BEGIN% OLD FILE,VERIFY LABEL EQUATION DATE IF ANY       38014000
                     HEADER := FIB[14];%                                38014100
                     STREAM(H:=HEADER[3].[30:18],B:=[T2]);              38014200
                     BEGIN SI:=LOC H; DS:=8 DEC; END;%                  38014300
                AGN: IF CDATE NEQ 0 AND CDATE NEQ HEADER[3].[30:18] THEN38014400
                     BEGIN% WRITE DATE CHECK MESSAGE                    38014500
         DOLITTLE(FALSE,@41012,"#DAT CK"," =00000"&T2[18:18:30],MFID);  38014600
                          IF TERMIX.[CF]=P1MIX THEN                     38014700
                          BEGIN                                         38014800
                              FORGETSPACE(DIRECTORYSEARCH               38014900
                                   (MFID,FID,FIB[5].[13:3]+10));        38015000
                              GO TO INITIATE;                           38015100
                          END;%                                         38015200
%                                                                       38015300
                          IF P(NT6,DUP)=4 OR P(XCH)=8 THEN CDATE~0;     38015400
                          GO AGN                                        38015500
                     END;% VERIFICATION                                 38015600
                     FPB[FNUM+2].[18:30]:=T2;% BCL DATE                 38015700
                END OLD FILES;%                                         38015800
                STARTIMING(FNUM,18);%                                   38015900
            END;%                                                       38016000
            HEADER~FIB[14];%                                            38020000
            KIND~4; U~18;%                                              38021000
            MODE~0;%                                                    38022000
            IF NOT COBOL THEN UNLABELED~1;%                             38023000
            CNTCTL~BLEN{1023;%                                          38024000
            IF COBOL>0 AND (FIB[13].[22:1] OR TYPE=10) THEN             38024100
         BEGIN     COBOL:=3;              %IF COBOL-IO OR COBOL-RANDOM  38024200
                   BLEN := BLEN + RLEN;   % THEN CHANGE BUFFSIZE TO     38024300
         END;                             %  BUFFSIZE + RECSIZE         38024400
            GETBUFFERS((IF CNTCTL THEN BLEN%                            38025000
                                  ELSE ((BLEN+29) DIV 30)|30)+1,%       38026000
                       NBUFS,U,ALPHA);%                                 38027000
            IF COBOL = 3 THEN             %IF COBOL-IO OR COBOL-RANDOM  38027100
         BEGIN     COBOL := 1;            % THEN CHANGE BUFFSIZE TO     38027200
                   BLEN := BLEN - RLEN;   % BUFFSIZE - RECSIZE          38027300
         END;                             % (SEE ABOVE                  38027400
            FIB[16]~M[ALPHA]&CNTCTL[23:47:1]&IO[24:47:1]%               38028000
                  &((BLEN+29) DIV 30)[27:42:6]%                         38029000
                  &(IF CNTCTL THEN BLEN ELSE 1023)[8:38:10]%            38030000
                  &TINU[18][3:3:5] OR M OR IOMASK;%                     38031000
            FIB[16].[2:1]:=(HEADER.[31:2] AND (IO+1))!0;                38032000
               FIB[5].[1:1]:= NOT FIB[16].[2:1];                        38033000
               IF FIB[5].[1:1] THEN                                     38034000
           FOR MASK:=10 STEP 1 UNTIL 29 DO HEADER[MASK]:=0;             38035000
            FIB[19]~(IF DIREC THEN BLEN-RLEN+1 ELSE 1)                  38036000
                    INX FIB[16]&0[27:27:6];                             38037000
            IF STATE.[46:2]!0 THEN FIB[19].[8:10]~RLEN;%                38038000
            FS[P1MIX,(T2:=(FNUM DIV ETRLNG)).[40:4]]~(*P(DUP)) OR       38039000
              (TWO(0&T2[43:44:4])|((NOT HEADER).[31:2]));               38040000
            T2~IF COBOL THEN 0 ELSE FIB[19].[33:15]-FIB[16].[33:15];    38041000
               FIB[10].[3:15]:=M[ALPHA]-2;   %HEAD OF BUFFER RING       38041100
            FOR MASK~0 STEP 1 UNTIL NBUFS-1 DO%                         38042000
            M[ALPHA+MASK]~(P(DUP,LOD)+T2)%                              38043000
                          &P(FLAG(FIB[19-ABS(3|COBOL)]),XCH)[CTC];      38044000
            FIB[16]:=FIB[16] OR M;                                      38045000
            FIB[5].[45:1]~0;                                            38045100
      END DISKSETUP;%                                                   38046000
      P(RCW,MSCW,STF);                                                  38047000
      RCW:=RCW&P(XCH)[CTC];                                             38048000
      DISKSETUP;                                                        38049000
      IF COBOL<0 THEN   % ADJUST UPPER BOUND FOR COBOL 68               38049200
         BEGIN  MASK ~ (IF IO AND NOT FIB[13].[22:1]                    38049300
                   THEN HEADER[7]                                       38049400
                   ELSE  (((HEADER[9] | HEADER[1]) DIV                  38049500
                            HEADER[0].[42:6]) | HEADER[0].[30:12]) - 1);38049600
         IF FIB[3]=0 OR FIB[3]>MASK THEN FIB[3]~MASK; %LESSOR OF 2 EVILS38049700
         END;                                                           38049800
      IF TYPE=10 THEN                                                   38050000
      BEGIN                                                             38051000
           IF COBOL<1 THEN     % ALGOL OR COBOL 68                      38052000
              FOR MASK ~ 0 STEP 1 UNTIL NBUFS-1 DO                      38053000
              IF COBOL THEN M[M[ALPHA+MASK] INX NOT 2] ~ NOT 0          38053500
                        ELSE M[ALPHA+MASK]~P(DUP,LOD)&1[27:47:1];       38054000
             FIB[6]~FIB[7]~0;%                                          38055000
             FIB[17]~IF IO THEN 0 ELSE BLEN;%                           38056000
      END ELSE                                                          38057000
      BEGIN                                                             38058000
             T2~(MFID~FIB[16]).[33:15];%                                38059000
             FIB7~FIB[7];                                               38060000
             IF COBOL THEN%                                             38061000
              BEGIN  IF COBOL>0 THEN                                    38062000
                        IF NOT (FIB7=0 OR FIB[13].[22:1]) THEN          38062500
                        BEGIN  FIB7 ~ FIB7 - 1;                         38063000
                               OPTIONAL ~ NBUFS - 1;                    38063500
                        END ELSE  OPTIONAL ~ NBUFS - 2                  38064000
                        ELSE BEGIN      % COBOL 68                      38064200
                             OPTIONAL ~ NBUFS - 1;                      38064400
                             IF DIREC THEN FIB7 ~ FIB[7] ~ FIB[3];      38064600
                             END;                                       38065000
                   FID~FIB[16];%                                        38066000
                   MASK~0;%                                             38067000
             END ELSE%                                                  38068000
             BEGIN OPTIONAL~NBUFS-1;%                                   38069000
                   MASK~(FID~FIB[19]).[33:15]-T2;%                      38070000
             END;%                                                      38071000
             IF (STATE.[46:2]!0 AND NOT COBOL) OR IO THEN               38072000
             IF M[ALPHA].[2:1] THEN                                     38073000
             FOR T1~0 STEP 1 UNTIL OPTIONAL DO%                         38074000
      BEGIN IF(M[T2]:=DISKADDRESS(FPB[FNUM],FPB[FNUM+1],                38075000
               FORMS~((HEADER[0].[30:12]|T1)&DIREC[1:47:1])+FIB7,       38076000
                                HEADER,IO)) NEQ 0 THEN                  38077000
                   BEGIN IOREQUEST(FLAG(FID),MFID&1[24:47:1],M[T2-2]);  38078000
                        M[ALPHA]~FLAG(MFID)&0[26:26:7]%                 38079000
                                     AND NOT (M OR IOMASK);%            38080000
                   END ELSE%                                            38081000
                   M[ALPHA   ]~P(DUP,LOD)&1[27:47:1] AND NOT M;%        38082000
                   IF COBOL<0 THEN M[M[ALPHA] INX NOT 2] ~              38082400
                      (IF FORMS}0 THEN FORMS DIV FIB[11] ELSE NOT 0);   38082500
                   STREAM(N~NBUFS-1,T~M[ALPHA],ALPHA);%                 38083000
                   BEGIN SI~ALPHA; SI~SI+8; DS~N WDS;%                  38084000
                         SI~LOC T; DS~WDS;%                             38085000
                   END;%                                                38086000
                  MFID.[33:15]~T2~M[T2-2].[18:15];%                     38087000
                   FID.[33:15]~T2+MASK;%                                38088000
             END;%                                                      38089000
             IF (NBUFS-1)!OPTIONAL THEN FIB[16].[33:15]~M[ALPHA] ;%     38090000
             FORMS~(FORMS~FIB7 MOD HEADER[0].[30:12])|RLEN;             38091000
            SLEEP([M[ALPHA]],IOMASK);%                                  38092000
             IF COBOL } 0 THEN          % NOT COBOL 68                  38092900
              IF FIB[13].[22:1]THEN M[ALPHA].[33:15]~FIB[16]INX 1 ELSE  38093000
             M[ALPHA].[33:15]~FIB[16].[33:15]+FORMS+1;%                 38094000
              IF (NBUFS-1)!OPTIONAL AND IO AND NOT FIB[13].[22:1] THEN  38095000
                   FIB[ 17 ]~0  ELSE                                    38096000
             FIB[17]~IF DIREC THEN FORMS+RLEN%                          38097000
                              ELSE BLEN-FORMS;%                         38098000
      END;                                                              38099000
EXIT:                                                                   38099100
      P(P&RCW[CTC],0,RDS,0,XCH,P&P[CTF],STF);                           38100000
END DISKFILEOPEN;                                                       38101000
PROCEDURE OTHERFILEOPEN(ALPHA); VALUE ALPHA; INTEGER ALPHA;%            38102000
BEGIN REAL RCW=+0,MSCW=-2;                                              38103000
     REAL IOM=IOMASK, IOMASK=+1;                                        38104000
     INTEGER NBUFS=+2,FNUM=+3,RLEN=+4,TYPE=+5,IO=+6,BLEN=+7,U=+8,       38105000
             KIND=+9,MODE=+10,DIREC=+11,FORMS=+12,COBOL=+13,            38106000
             UNLABELED=+14,OPTIONAL=+15,CNTCTL=+16;                     38107000
     REAL T1=+17,T2=+18,MASK=+19,STATE=+20;                             38108000
     REAL MFID=+21,FID=+22; INTEGER REEL=+23,CDATE=+24,CYCLE=+25;       38109000
     ARRAY FIB=+26[*],FPB=+27[*];%                                      38110000
     INTEGER ACCESS=+28,FIB7=+29;                                       38111000
     ARRAY HEADER=+30[*];%                                              38112000
      REAL TOG=+31;                                                     38112100
     REAL USASI=NT1;                                                    38112200
     LABEL LOOKOUT,LPS,FIND,SPACER,FINALOUT,DCN,PBS;                    38113000
 %                                                                      38114000
     SUBROUTINE TYPEOPEN;%                                              38115000
         BEGIN                                                          38116000
            IF OPNMESS THEN IF((T1~JAR[P1MIX,0])>0)                     38117000
                 OR (T1<0) AND COPNMESS THEN                            38118000
                 BEGIN IF U GEQ 16 THEN T1 ~0 ELSE                      38118010
                        STREAM(S~PRNTABLE[U].[30:18],D~[T1]);%          38118100
                        BEGIN SI ~ LOC S; DS ~ 8 DEC;         %         38118200
                              DI ~ DI-7; DS ~ 6 FILL;         %         38118300
                        END;                                  %         38118400
                 FILEMESS((IF IO THEN " IN " ELSE " OUT")               38119000
                           &TINU[U][6:30:18],T1,MFID,FID,REEL,%         38120000
                           CDATE,CYCLE);%                               38121000
                 END;                                                   38121100
         END;                                                           38122000
 %                                                                      38123000
     SUBROUTINE REED;%                                                  38124000
      BEGIN IF (T2~WAITIO(T1,MASK&@377[18:33:15],U) AND @367)!0 THEN    38125000
            IF (T2 AND NOT MASK)!0 THEN                                 38126000
            BEGIN STOPTIMING(FNUM,1023); BLASTQ(U); SETNOTINUSE(U,0);   38127000
                  FILEMESS(-"PARITY ","ON ... "&TINU[U][24:30:18],%     38128000
                           MFID,FID,REEL,CDATE,CYCLE);%                 38129000
            END;%                                                       38130000
           IF TERMIX.[CF]=P1MIX THEN                                    38131000
            BEGIN STOPTIMING(FNUM,1023); SETNOTINUSE(U,0);              38132000
                  GO TO INITIATE;                                       38133000
            END;                                                        38134000
      END REED;%                                                        38135000
 %                                                                      38136000
     REAL SUBROUTINE CNTLBITS;%                                         38137000
            CNTLBITS~IOMASK&MODE[21:47:1]&DIREC[22:47:1]&CNTCTL[23:47:1]38138000
                  &IO[24:47:1]&(KIND=7 OR KIND>9 AND KIND{12)[20:47:1]  38139000
                  &(IF KIND=1OR KIND=7OR KIND=12THEN@20ELSE 0)[27:42:6];38140000
%                                                                       38141000
     SUBROUTINE LABELAREA;%                                             38142000
            M[T1~ALPHA-2]~M OR (GETSPACE((T1~M[T1].[8:10])+4,2,1)+4)    38143000
                          &T1[8:38:10]&CNTLBITS[18:18:15];%             38144000
%                                                                       38152000
      P(RCW,MSCW,STF);                                                  38153000
      RCW:=RCW&P(XCH)[CTC];                                             38154000
      IF NOT IO THEN GO TO LOOKOUT;                                     38155000
      IF STATE.[41:1] THEN%                                             38156000
      BEGIN U~FIB[15].[25:5];%                                          38157000
      END ELSE%                                                         38158000
      BEGIN IF (U~FINDINPUT(MFID,FID,REEL,CDATE,CYCLE,COBOL,UNLABELED,  38159000
                            OPTIONAL,MODE,FNUM))<0 THEN%                38160000
            BEGIN FIB[5].[39:4]~9; GO TO FIND END;%                     38161000
            STARTIMING(FNUM,IF U>31 THEN 18 ELSE U);                    38162000
            TYPEOPEN;%                                                  38163000
            IF U<16 THEN BEGIN RRRMECH~TWO(U) OR RRRMECH;               38164000
                               PRNTABLE[U].[15:15]~ALPHA;%              38165000
                         END;%                                          38166000
            KIND~IF U>31 THEN 11 ELSE UNIT[U].[1:4];                    38167000
            IF (T1~RDCTABLE[U].[14:10])!0 THEN REEL~T1;                 38168000
                                                                        38169000
            STATE.[39:4]~0;%                                            38170000
      END;%                                                             38171000
      IF KIND=0 THEN%                                                   38172000
      BEGIN IF U=23 THEN BEGIN T1~READERA; READERA~0 END%               38173000
                    ELSE BEGIN T1~READERB; READERB~0 END;%              38174000
            M[ALPHA-2]:=[M[T1]]&10[8:38:10]&1[24:47:1];%                38175000
            M[T1-4].[3:12]:=P1MIX;%                                     38175100
            MODE:=0;%                                                   38175200
            CNTCTL:=DIREC:=0;%                                          38175300
            IF BLEN<T1~(MODE+1)|10 THEN BLEN~T1;%                       38176000
      END ELSE%                                                         38177000
      IF KIND=2 THEN%                                                   38178000
      BEGIN IF NOT UNLABELED THEN BEGIN%                                38179000
            IF DIREC AND NOT FIB[16].[22:1] THEN                        38180000
            BEGIN IF NOT STATE.[40:1] THEN BEGIN%                       38181000
                  T1~5&3[23:46:2] OR M;%                                38182000
      SPACER:     MASK~0; REED;%                                        38183000
                  MASK:=@60; DO REED UNTIL T2.[42:1];                   38184000
                  DO REED UNTIL T2.[42:1];                              38185000
                  MASK~0; REED;            END;%                        38186000
            END;                                                        38187000
                                                                        38188000
                                                                        38189000
            CNTCTL~1; LABELAREA;%                                       38190000
            T1:=NFLAG(M[ALPHA-2]);%                                     38191000
            IF DIREC THEN T1:=T1.[8:10]-1 INX T1;%                      38192000
            MASK:=@40; REED;                                            38192100
            STREAM(Y:=0:X:=0,X1:=0,X2:=0,Z:=T1);                        38192200
              BEGIN  DI:=LOC X; DS:=24 LIT "VOL1HDR1HDR2EOF1EOF2EOV1";  38192300
                     DI:=LOC X;                                         38192400
                     6(TALLY:=TALLY+1;                                  38192500
                     SI:=Z;                                             38192600
                     IF 4 SC=DC THEN                                    38192700
                     JUMP OUT TO B);                                    38192800
                     TALLY:=0;                                          38192900
              B:                                                        38193000
                     Y:=TALLY;                                          38193100
              END;                                                      38193200
            IF (USASI:=P)>0 THEN                                        38193300
            USASITAPE(T1.[CF],USASI,4,U,DIREC);                         38193400
            IF T2 NEQ @40 THEN DO REED UNTIL T2.[42:1] ELSE             38198000
              FOR CNTCTL~DIREC STEP 1 UNTIL 2 DO% DIREC = 0 OR 1    %DB 38198010
              P(WAITIO(@4740000005&(NOT DIREC)[22:47:1],@377,U),DEL);%DB38198020
                                  END;%                                 38204000
            CNTCTL~BLEN{1023;%                                          38217000
      END ELSE%                                                         38218000
      IF KIND=9 THEN%                                                   38219000
      BEGIN UNLABELED~CNTCTL~1;%                                        38220000
            DIREC~0;%                                                   38221000
      END ELSE%                                                         38222000
      IF KIND=11 THEN                                                   38223000
      BEGIN T1~CIDROW[U-32].[18:15];                                    38224000
            CIDROW[U-32].[18:15]~0;                                     38225000
            M[ALPHA-2]:=[M[T1]]&10[8:38:10]&1[24:47:1];%                38226000
            M[T1-4].[3:12]:=P1MIX;%                                     38226100
            MODE:=0;%                                                   38226200
            CNTCTL:=DIREC:=0;%                                          38226300
            FIB[13].[1:9]~NBUFS~1; FIB[13].[10:9]~1;                    38227000
            IF BLEN<10 THEN BLEN~10;                                    38228000
      END ELSE                                                          38229000
DCN:: FILEMESS(-"I/O ERR",0,MFID,FID,REEL,CDATE,CYCLE);%                38230000
      P(1);                                                             38231000
      GO TO FINALOUT;                                                   38232000
LOOKOUT:    IF STATE.[41:1] THEN%                                       38233000
            BEGIN U~FIB[15].[25:5];%                                    38234000
            END ELSE%                                                   38235000
            BEGIN IF(U:=FINDOUTPUT(MFID,FID,REEL,CDATE,CYCLE,           38236000
                                   TYPE,FORMS,KIND))>40 THEN            38237000
              BEGIN FIB[14].[3:15]~U;                                   38238000
                   FPB[FNUM+2].[18:30]~DATE;                            38239000
                   IF MCP!NOT 0 THEN M[U+2]~USERCODE[P1MIX];            38240000
                   M[U+3]~XCLOCK+P(RTR);                                38241000
                 IF OPNMESS THEN                                        38242000
                 FILEMESS((IF TYPE GEQ 20 OR TYPE=0 THEN "PUD...."      38242100
                 ELSE "PBD....")&M[U+6][24:6:24],"OUT    ",             38243000
                                         MFID,FID,REEL,CDATE,CYCLE);    38244000
                    STARTIMING(FNUM,U~18);                              38245000
              END ELSE                                                  38246000
              IF U LSS 0 THEN %DSED                                     38246100
              BEGIN FIB[5].[39:4]:=9; GO FIND END ELSE                  38246200
              BEGIN                                                     38247000
                  STARTIMING(FNUM,U);%                                  38248000
                  TYPEOPEN;%                                            38249000
                  IF TYPE=5 OR TYPE=8 OR TYPE=9 THEN UNLABELED~1;%      38250000
                  IF U<16 THEN BEGIN RRRMECH~TWO(U) OR RRRMECH;         38251000
                                     PRNTABLE[U].[15:15]~ALPHA;%        38252000
              END;                       END;                           38253000
            END;%                                                       38254000
      IF KIND=6 THEN%                                                   38255000
      BEGIN BLEN:=10;                                                   38256000
            FIB[18]:=(*P(DUP))&BLEN[CTC]&BLEN[CTF]&BLEN[3:33:15];       38256500
            MODE~DIREC~CNTCTL~0;%                                       38257000
      END ELSE%                                                         38258000
      IF KIND=1 THEN%                                                   38259000
      BEGIN MODE~DIREC~CNTCTL~0;%                                       38260000
LPS:                                                                    38261000
            IF NOT COBOL THEN M[ALPHA-2]~0&15[8:38:10];%                38262000
      END ELSE%                                                         38263000
      IF KIND=12 THEN                                                   38264000
      BEGIN TYPE~IF (TYPE!0 AND TYPE<20) THEN 15 ELSE 22;               38265000
 PBS:  MODE~DIREC~0; FIB[13].[1 :9]~NBUFS     ~CNTCTL~1;                38266000
            IF BLEN>17 THEN BLEN~17;                                    38267000
            M[T1~GETSPACE(92,3,1)+2]~M[T1-1]~[M[ALPHA]]&(T1+2)[CTF]&    38268000
             U[12:42:6]; DISKIO(T2,-T1-75,11,JAR[P1MIX,6].[CF]);        38269000
            M[ALPHA]~T1+2; HEADER~[M[T1]]&92[8:38:10];                  38270000
            FIB[14]~(*P(DUP))&(T1+2)[CTC]&(T1+56)[CTF];                 38271000
           FIB[18]~(*P(DUP))&BLEN[CTC]&BLEN[CTF]&BLEN[03:33:15];        38272000
            STREAM(D~T1+1); 2(36(DS~8 LIT"0"));                         38273000
            FIB[5].[FF]~(M[T1+91]~FIB[5].[FF]&1[18:47:1])+1;            38274000
            SLEEP([T2],IOMASK);                                         38275000
          HEADER[74]~MFID;                                              38276000
          HEADER[75]~FID;                                               38277000
          HEADER[87]~FORMS;                                             38278000
                                                                        38279000
          HEADER[76]~ABS(JAR[P1MIX,0]);                                 38280000
          HEADER[77]~ABS(JAR[P1MIX,1]);                                 38281000
            GO TO LPS;                                                  38282000
      END ELSE                                                          38283000
      IF KIND=7 THEN%                                                   38284000
      BEGIN TYPE~IF (TYPE!0 AND TYPE<20) THEN 6 ELSE 20;                38285000
      IF SVPBT THEN SAVEWORD:=TWO(U) OR SAVEWORD;                       38286000
            GO TO PBS;                                                  38287000
      END ELSE%                                                         38288000
      IF KIND=2 THEN%                                                   38289000
      BEGIN IF PRNTABLE[U]}0 THEN GO TO DCN;%                           38290000
            CNTCTL~MODE;%                                               38291000
      END ELSE%                                                         38292000
      IF KIND=8 THEN%                                                   38293000
      BEGIN UNLABELED~CNTCTL~1;%                                        38294000
            DIREC~0;%                                                   38295000
      END;%                                                             38296000
      IF UNLABELED THEN%                                                38297000
      BEGIN IF COBOL THEN%                                              38298000
            BEGIN MASK~0;%                                              38299000
                  IF KIND=1 THEN BEGIN T1~@4000100000; REED END ELSE    38300000
                  IF KIND=7 OR KIND=12 THEN                             38301000
                BEGIN HEADER[73]~@1540176000100000&FIB[5][FTC];         38302000
                        FIB[5].[FF]~FIB[5].[FF]+1;                      38303000
                        FIB[14].[FF]~T1+38; GO FIND;                    38304000
                  END;                                                  38305000
            END;%                                                       38306000
      END ELSE%                                                         38307000
      BEGIN IF COBOL THEN%                                              38308000
            BEGIN M[ALPHA-2]~P(DUP,LOD)&CNTLBITS[18:18:15];%            38309000
                  IF U<16 THEN%                                         38310000
                  STREAM(N~PRNTABLE[U].[30:18],D~M[ALPHA-2]);%          38311000
                         BEGIN SI~LOC N; DI~DI+53; DS~5 DEC END;%       38312000
            END ELSE%                                                   38313000
            BEGIN IF REEL=0 THEN REEL~1;%                               38314000
                  IF CYCLE=0 THEN CYCLE~1;%                             38315000
                  IF CDATE=0 THEN STREAM(DATE,CD~[CDATE]);%             38316000
                              BEGIN SI~LOC DATE; SI~SI+3; DS~5 OCT END; 38317000
                  LABELAREA;%                                           38318000
                  BUILDLABEL(M[ALPHA-2],MFID,FID,REEL,CDATE,CYCLE,%     38319000
                             FIB[4],(IF U<16 THEN PRNTABLE[U].[30:18]   38320000
                                             ELSE 0),STATE.[46:2],%     38321000
                             BLEN,RLEN);%                               38322000
            END;%                                                       38323000
            M[M[ALPHA-2] INX P(DUP).[8:10]]~@3700000000000000;%         38324000
            IF KIND=7 OR KIND=12 OR KIND=1 THEN                         38325000
            BEGIN IF TYPE GEQ 20 THEN % MAKE CP BACK-UP LABEL           38325100
            BEGIN M[M[ALPHA-2] INX 4]:=FLAG(NABS(JAR[P1MIX,0]));        38325200
                  M[M[ALPHA-2] INX 5]:=FLAG(JAR[P1MIX,1]&17[1:43:5]);   38325300
                  STREAM(A:=[M[M[ALPHA-2] INX 6]]);                     38325400
                  BEGIN DS:=15 LIT" PUNCH BACK-UP "; DS:=LIT"%";        38325500
                        2(DS:=8 LIT"%%%%%%%%");                         38325600
                  END;                                                  38325700
            END ELSE % MAKE LP LABEL                                    38325800
            BEGIN T1:=M[M[ALPHA-2]INX 3];                               38326000
                  DISKIO(T2,NABS(M[ALPHA-2]INX 1),11,JAR[P1MIX,6].[CF]);38326100
                  M[M[ALPHA-2]INX 13]:=FLAG(NABS(JAR[P1MIX,0]));        38326200
                  M[M[ALPHA-2]INX 14]:=FLAG(JAR[P1MIX,1]&17[1:43:5]);   38326300
                  SLEEP([T2],IOMASK);                                   38326400
                  M[M[ALPHA-2] INX 3]:=T1;                              38326500
            END;                                                        38326550
                  M[M[ALPHA-2] INX 1]:=MFID;                            38326600
                  M[M[ALPHA-2] INX 2]:=FID;                             38326700
                  IF KIND=1 THEN M[ALPHA-2]~P(DUP,LOD)&1[27:42:6] ELSE  38333000
                  BEGIN HEADER[73]~FIB[5].[FF] OR @360170100100000;     38334000
                        FIB[5]~P(DUP,LOD,0,1,CFX,+);                    38335000
                        STREAM(L~M[ALPHA-2],B~[HEADER[56]]);            38336000
                        BEGIN SI~L; DS~17 WDS END;                      38337000
                        FIB[14].[FF]~[HEADER[38]]; GO FIND;             38338000
            END;  END;                                                  38339000
            T1~NFLAG(M[ALPHA-2]);%                                      38340000
            MASK~0; REED;%                                              38341000
            IF KIND=2 THEN%                                             38342000
            BEGIN T2~@1737000000000000;%                                38343000
                  T1~NFLAG([T2]);%                                      38344000
                  REED;%                                                38345000
            END;%                                                       38346000
      END;%                                                             38347000
      P(0);                                                             38348000
FINALOUT:: IF BLEN=0 THEN GO TO DCN;%                                   38349000
           IF NOT FIB[18].[1:1] OR P THEN                               38350000
                GETBUFFERS(BLEN,NBUFS,U,ALPHA);                         38351000
FIND::                                                                  38352000
      P(P&RCW[CTC],0,RDS,0,XCH,P&P[CTF],STF);                           38353000
END OTHER FILE OPEN;                                                    38354000
PROCEDURE DISKCLOSE(ALPHA); VALUE ALPHA; INTEGER ALPHA;%                38355000
BEGIN REAL RCW=+0,MSCW=-2;                                              38356000
      ARRAY FIB=+1[*],FPB=+2[*],HEADER=+3[*];%                          38357000
%%%      DONT ADD ANY DECLARATIONS BETWEEN "HEADER" AND "KIND" %%% WCP  38358000
      INTEGER KIND=+4,NBUFS=+5,U=+6,BLEN=+7,CODE=+8,                    38359000
              UNLABELED=+9,COBOL=+10,I=+11,J=+12,                       38360000
              FNUM=+13;                                                 38361000
      REAL MID=+14,FID=+15,R=+16,D=+17,C=+18,FORMS=+19,STATE=+20;       38362000
      LABEL EOF,CLEANUP;%                                               38363000
      LABEL OBJTYPE,DUMMY;                                              38364000
      REAL STA=+21;%                                                    38364100
      REAL T1=+22,T2=+23,T3=+24,IOD=+25;%                               38365000
      ARRAY SEG0=+26[*],SKEL=+27[*];%                                   38366000
      LABEL L1,L2,L3;                                                   38367000
%                                                                       38368000
      SUBROUTINE COOLOFF;%                                              38369000
      BEGIN FOR I~0 STEP 1 UNTIL NBUFS-1 DO%                            38370000
            BEGIN IF NOT M[ALPHA+I].[19:1] THEN%                        38371000
                        SLEEP([M[ALPHA+I]],IOMASK);%                    38372000
                  IF KIND!4 THEN                                        38373000
                  IF M[ALPHA+I].[27:1] THEN GO TO EOF;%                 38374000
            END;%                                                       38375000
EOF:  END COOLOFF;%                                                     38376000
%                                                                       38377000
      REAL T=+28,ACCESS=+29;%                                           38378000
      BOOLEAN COMPGO=+30;%                                              38379000
      DEFINE REW=CODE.[47:1]#,%                                         38380000
             KRUNCH=NOT CODE.[42:1]#,                                   38381000
             REL=CODE.[46:1]#,%                                         38382000
             TIME=CODE.[45:1]#,%                                        38383000
             LOCK=NOT CODE.[44:1]#,%                                    38384000
             PURGE=NOT CODE.[43:1]#;%                                   38385000
      DEFINE TECH=STATE.[46:2]#,             OPENIO=FIB[13].[22:1]#,    38385400
             WRITBACK=FIB[13].[23:1]#,       LASTIO=FIB[13].[46:1]#,    38385500
             WRITEAFTEREOF=FIB[13].[44:2]#,  INPUT=STATE.[43:1]#;       38385600
%                                                                       38386000
      P(RCW,MSCW,STF);       RCW ~ RCW & P(XCH)[CTC];                   38387000
      HEADER ~ FIB[14];      ACCESS ~ FIB[4].[27:3];                    38388000
      IF COBOL THEN                                                     38389000
      BEGIN  IF COBOL > 0 THEN                   % COBOL 61             38389100
             BEGIN IF WRITBACK AND TECH=0 AND LASTIO AND                38389200
                      (OPENIO OR NOT(INPUT))   THEN                     38389300
                       IF ACCESS=1 AND WRITEAFTEREOF!0 THEN             38389400
                       BEGIN  FIB[7] ~ *P(DUP) - 1;                     38389500
                              HEADER[7] ~ *P(DUP) - 1;                  38389600
                       END ELSE WRITEAFTEREOF ~ 0;                      38389700
                   IF TECH=0 THEN IF WRITEAFTEREOF=2 THEN               38389800
                        BEGIN  FIB[7] ~ *P(DUP) + 1;                    38389900
                               HEADER[7] ~ *P(DUP) + 1;                 38390000
                        END ELSE IF WRITEAFTEREOF=1 THEN                38390100
                        BEGIN  FIB[7] ~ *P(DUP) - 1;                    38390200
                               HEADER[7] ~ *P(DUP) - 1;                 38390300
                        END;                                            38390400
                   WRITEAFTEREOF ~ 0;                                   38390500
             END;                                                       38391000
             IF ACCESS=1 THEN                    % IF RANDOM            38391010
            BEGIN IF COBOL > 0 THEN              % COBOL61              38391020
                  BEGIN ACCESS ~ 4;                                     38391030
                  IF FIB[13].[10:9] = 2 THEN     % SEEK IN PROCESS      38391040
                     BEGIN COOLOFF; FIB[13].[10:9] ~ 1;  END            38391050
                  END ELSE IF FIB[17]<BLEN THEN ACCESS~4;  % COBOL68    38391060
            END;                                                        38391070
            IF FIB[13].[23:1] AND ACCESS=0 THEN                         38391080
              BEGIN FIB[7]~P(DUP,LOD)-1;                                38391090
                 ACCESS~4;                                              38391100
      END;  END;                                                        38391110
      IF NOT STATE.[41:1] THEN%                                         38392000
      BEGIN IF ACCESS=1 THEN%                                           38393000
            BEGIN COOLOFF;%                                             38394000
            END ELSE%                                                   38395000
            IF ACCESS=0 THEN%                                           38396000
            BEGIN COOLOFF; IF NOT STATE.[43:1] THEN%                    38397000
                  IF FIB[17]<BLEN AND STATE.[46:2]!0 THEN%              38398000
                  BEGIN R:=SPACE(((BLEN+29) DIV 30)|30+1);              38399000
                        IF (M[R]~M[FIB[16]]~%                           38400000
                 DISKADDRESS(MID,FID,FIB[7]-1,HEADER,0)) NEQ 0 THEN     38401000
                 BEGIN                                                  38401100
                        P(WAITIO(FIB[16]&1[24:47:1]&R[33:33:15],%       38402000
                                 0,U),DEL);%                            38403000
                        MOVE(FIB[17],R+BLEN-FIB[17]+1,%                 38404000
                              FIB[16] INX BLEN-FIB[17]+1);%             38405000
                        P(WAITIO(FIB[16],0,U),DEL);%                    38406000
                        IF NOT FIB[16].[24:1] THEN HEADER[4].[11:1]~1;  38406500
                                                                 END;   38407000
                        FORGETSPACE(R);%                                38408000
                  END;%                                                 38409000
            END ELSE%                                                   38410000
            BEGIN  COOLOFF;                                             38411000
              IF (FIB[17]LSS BLEN AND STATE.[46:2]NEQ 0)OR ACCESS=4 THEN38411100
            BEGIN       IF ACCESS=4 THEN                                38411200
                             IF FIB[13].[23:1] OR NOT STATE.[43:1] THEN 38411300
                                  ACCESS:=2;                            38411400
                             IF (M[FIB[16]]:=DISKADDRESS(MID,FID,       38411500
                                  FIB[7],HEADER,0))=0 THEN ACCESS:=4;   38411600
                        IF ACCESS!4 THEN                                38411700
                          BEGIN P(WAITIO(FIB[16]&0[24:24:1],0,U),DEL);  38411750
                                HEADER[4].[11:1]~1; END;                38411800
            END;   IF ACCESS = 4 THEN ACCESS := 2;                      38411900
            END;%                                                       38412000
      END;%                                                             38412100
    IF (NOT REW) OR LOCK OR REL OR TIME THEN                            38419000
    BEGIN                                                               38420000
      FORMS~HEADER[3];                                                  38421000
      STREAM(PF~[FIB[4]],D~FPB[FNUM+2].[18:30],H~[HEADER[3]],S~[T]);    38422000
      BEGIN SI~PF;SI~SI+5;DS~3 OCT;SI~LOC D;DI~H;DS~8 OCT END;          38423000
      HEADER[3]~(P(DUP,LOD,SSN))&(P(DUP))[12:30:18]&T[2:38:10];         38424000
    END;                                                                38425000
      IF LOCK THEN%                                                     38426000
      BEGIN IF NOT HEADER[4] THEN%FILE IS BEING CREATED                 38427000
            BEGIN                                                       38428000
              IF KRUNCH THEN KRUNCHER(HEADER);                          38429000
                   HEADER[4].[9:3]:=5;% MARK AS NEW FORMAT,ACCESSED     38430000
                  IF JAR[P1MIX,0] < 0 AND FIB[4].[29:1] THEN            38431000
% COMPILER CLOSING CODE FILE WITH LOCK *********************************38432000
                   BEGIN                                                38433000
                        SEG0 ~ [M[GETSPACE(62,2,0)+2]]&30[8:38:10];     38434000
                        SKEL ~ 31 INX SEG0; T3 ~ JAR[P1MIX,2].[FF];     38435000
                        % READ IN SEGMENT ZERO                          38436000
                        DISKWAIT(-SEG0.[CF],30,HEADER[10]);             38437000
                        % READ IN SKELETON SHEET                        38438000
                        DISKWAIT(-SKEL.[CF],30,T3);                     38439000
                        IF SKEL[20]<0 THEN SKEL[20] ~ SEG0[7].[FF];     38440000
                        IF JAR[P1MIX,2].[8:10]=1 THEN                   38441000
                           BEGIN % COMPILE AND GO **********************38442000
                             SKEL[6]:=JAR[P1MIX,6]&                     38442100
                                      (PRT[P1MIX,3].[8:10]+20)[CTF];    38442200
                             DISKWAIT(SKEL.[CF],30,T3);                 38443000
                             COMPGO ~ TRUE;                             38444000
                           END                                          38445000
                        ELSE                                            38446000
                           BEGIN % COMPILE TO LIBRARY ******************38447000
                             FOR T1 ~ 15 STEP 1 UNTIL 22 DO             38448000
                                  SEG0[T1] ~ SKEL[T1];                  38449000
                             IF (T2 ~ SKEL[13]) = 0 THEN GO TO L3;      38450000
                             SKEL[13] ~ 0; % IN CASE I CALL TERMINATE   38451000
                             DISKWAIT(SKEL.[CF],30,T3);                 38452000
                          IF(T1:=DISKADDRESS(MID,FID,HEADER[7]:=        38453000
                              (*P(DUP))+1,HEADER,0))=0 THEN             38454000
                                  FILEMESS(-"DISK   ","OVRFLOW",MID,FID,38455000
                                                           R,D,C);      38456000
                             SEG0[15] ~ T1 ~ HEADER[7];                 38457000
                   L1:       DISKWAIT(-SKEL.[CF],30,T2);                38458000
                             FORGETESPDISK(T2);                         38459000
                             IF (T2~SKEL[29]) = 0 THEN GO TO L2;        38460000
                           IF(T3:=DISKADDRESS(MID,FID,HEADER[7]:=       38461000
                               (*P(DUP))+1,HEADER,0))=0 THEN            38462000
                                  FILEMESS(-"DISK   ","OVRFLOW",MID,FID,38463000
                                                           R,D,C);      38464000
                             SKEL[29] ~ T3 ~ HEADER[7];                 38465000
                             DISKWAIT(SKEL.[CF],30,                     38466000
                                    I~HEADER[T1 DIV HEADER[8]+10] +     38467000
                                             T1 MOD HEADER[8]);         38468000
                             T1 ~ T3;                                   38469000
                             GO TO L1;                                  38470000
                   L2:       DISKWAIT(SKEL.[CF],30,                     38471000
                                    I~HEADER[T1 DIV HEADER[8]+10] +     38472000
                                             T1 MOD HEADER[8]);         38473000
                   L3:       SEG0[6] ~ P(DUP,LOD,SSN); % "NEW FORMAT"   38474000
                             HEADER[4].[10:1]~1;%MARK AS PROGRAM FILE   38475000
                             DISKWAIT(SEG0.[CF],30,HEADER[10]);         38476000
                           END COPY OF LABEL EQUATION CARDS;            38477000
                        FORGETSPACE(SEG0);                              38478000
                        IF HEADER[7]<HEADER[8]-1 THEN                   38479000
                          BEGIN FORGETUSERDISK(HEADER[10]+HEADER[7]+1,  38480000
                                               HEADER[7]-HEADER[8]+1);  38481000
                                HEADER[8] ~ HEADER[7]+1;                38482000
                          END;                                          38483000
                        FOR T1:=-1 STEP 1 UNTIL 4 DO                    38484000
DUMMY ::                IF P(.OBJTYPE,T1,+,LOD)=ABS(JAR[P1MIX,0]) THEN  38485000
                           HEADER[4].[36:6]:=T1+2;                      38486000
                   END;                                                 38488000
                   HEADER[1]~FORMS&HEADER[3][6:30:18];                  38489000
                    IF (HEADER[2]:=USERCODE[P1MIX]).[1:1] OR            38490000
                        MCP=NOT 0 THEN HEADER[2]:=0;                    38491000
                  HEADER[5] := HEADER[6] := 0;                          38492000
%                                                                       38493000
                  IF COMPGO THEN                                        38494000
                   BEGIN PRT[P1MIX,@26]~IOD~GETESPDISK;                 38495000
                        DISKWAIT(HEADER.[CF],30,IOD);                   38496000
                   END ELSE                                             38497000
                   BEGIN                                                38498000
                   ENTERUSERFILE(MID,FID,HEADER.[CF]-1);                38499000
                   END;                                                 38500000
            END;%                                                       38501000
      END;%                                                             38502000
      IF REW AND NOT(LOCK OR REL OR TIME) THEN STATE.[39:4]~2 ELSE%     38503000
BEGIN%                                                                  38504000
      HEADER[1]~FORMS&HEADER[3][6:30:18];                               38505000
       IF HEADER[4] THEN%FILE ALREADY EXISTS                            38506000
      BEGIN J ~ 0;                                                      38507000
           IF (T~FIB[16].[CF])!0 THEN                                   38507100
           BEGIN T~T-2;                                                 38507200
                FOR I~NBUFS-1 STEP -1 UNTIL 0 DO                        38507300
                   IF M[T].[11:1] THEN J~I~-1 ELSE                      38507400
                   T ~ M[T].[18:15] - 2;                                38507500
           END;                                                         38507600
           IF HEADER[4].[11:1] THEN J ~ 1;                              38507700
           I ~ IF FIB[5].[1:1] THEN FIB[5].[13:3]+10 ELSE               38507800
                (HEADER INX 0)&FIB[5][30:13:3];                         38508000
           IF(I~DIRECTORYSEARCH(MID,FID&J[3:47:1],I))!0 THEN            38509000
                IF PURGE THEN                                           38510000
                IF M[I+4].[12:4]=0 THEN                                 38511000
                IF NOT SYSTEMFILE(MID,FID) THEN                         38512000
                IF SECURITYCHECK(MID,FID,USERCODE[P1MIX],               38513000
                  P((NOT 0)INX [KIND])).[45:1] THEN                     38514000
                   P(DIRECTORYSEARCH(-MID,FID,7),DEL);                  38515000
                IF I NEQ 0 THEN FORGETSPACE(I);                         38516000
      END ELSE%                                                         38517000
      IF NOT LOCK THEN%                                                 38518000
    BEGIN                                                               38519000
$ INCLUDE 38521001, IF DISKLOG;                                         38520000
      HEADER[2]:=USERCODE[P1MIX];                                       38520999
      DISKLOG(MID,FID,HEADER);                                          38521000
      FOR I~10 STEP 1 UNTIL 29 DO%                                      38522000
      IF HEADER[I]!0 THEN FORGETUSERDISK(HEADER[I],-HEADER[8]);%        38523000
    END;                                                                38524000
      FORGETSPACE(HEADER);                                              38525000
      STATE.[39:4]~1;%                                                  38526000
END;%                                                                   38527000
      IF NOT COBOL THEN FIB[4].[27:3]~3;                                38528000
      GO CLEANUP;%                                                      38529000
OBJTYPE::: "BASIC  ",  %1%                                              38530000
           "ALGOL  ",  %2%                                              38531000
           "COBOL  ",  %3%                                              38532000
           "FORTRAN",  %4%                                              38533000
           "TSPOL  ",  %5%                                              38534000
           "XALGOL ",  %6%                                              38535000
                   0;  %DUMMY%                                          38536000
CLEANUP:                                                                38537000
      P(P&RCW[CTC],0,RDS,0,XCH,P&P[CTF],STF);                           38538000
END DISK CLOSE;                                                         38539000
PROCEDURE BACKCLOSE(ALPHA); VALUE ALPHA; INTEGER ALPHA;%                38540000
BEGIN REAL RCW=+0,MSCW=-2;                                              38541000
      ARRAY FIB=+1[*],FPB=+2[*],HEADER=+3[*];%                          38542000
%%%      DONT ADD ANY DECLARATIONS BETWEEN "HEADER" AND "KIND" %%% WCP  38543000
      INTEGER KIND=+4,NBUFS=+5,U=+6,BLEN=+7,CODE=+8,                    38544000
              UNLABELED=+9,COBOL=+10,I=+11,J=+12,                       38545000
              FNUM=+13;                                                 38546000
      REAL MID=+14,FID=+15,R=+16,D=+17,C=+18,FORMS=+19,STATE=+20;       38547000
      LABEL EOF,PBD,PUD;%                                               38548000
      REAL STA=+21;%                                                    38548100
      REAL T1=+22,T2=+23,T3=+24,IOD=+25;%                               38549000
      ARRAY SEG0=+26[*],SKEL=+27[*];                                    38550000
%                                                                       38551000
      SUBROUTINE COOLOFF;%                                              38552000
      BEGIN FOR I~0 STEP 1 UNTIL NBUFS-1 DO%                            38553000
            BEGIN IF NOT M[ALPHA+I].[19:1] THEN%                        38554000
                        SLEEP([M[ALPHA+I]],IOMASK);%                    38555000
                  IF KIND!4 THEN                                        38556000
                  IF M[ALPHA+I].[27:1] THEN GO TO EOF;%                 38557000
            END;%                                                       38558000
EOF:  END COOLOFF;%                                                     38559000
%                                                                       38560000
      REAL T=+28,ACCESS=+29;%                                           38561000
      BOOLEAN COMPGO=+30;                                               38562000
      REAL TYPE=+31;                                                    38562100
      DEFINE REW=CODE.[47:1]#,%                                         38563000
             REL=CODE.[46:1]#,%                                         38564000
             TIME=CODE.[45:1]#,%                                        38565000
             LOCK=NOT CODE.[44:1]#,%                                    38566000
             PURGE=NOT CODE.[43:1]#;%                                   38567000
%                                                                       38568000
%                                                                       38569000
      SUBROUTINE CKBKUP;                                                38570000
      BEGIN M[M[ALPHA]INX 17   ]~M[ALPHA]&(FIB[5]               )[FTC]; 38571000
            FIB[5]~P(DUP,LOD,0,1,CFX,+);                                38572000
            IF NOT PRTROW[P1MIX].[7:1] THEN                             38573000
            IF FIB[14].[CF]=FIB[14].[FF]                                38573100
         THEN BEGIN PBIO(ALPHA,FIB[14]);SLEEP([M[ALPHA]],IOMASK)END ELSE38574000
              BEGIN; STREAM(S~           M[ALPHA],Z~FIB[14].[FF]);      38575000
                   BEGIN SI~S; DS~18 WDS END;                           38576000
                   FIB[14].[FF]~P(DUP).[FF]-18;                         38577000
      END;    END;                                                      38578000
      LABEL CLOSEOUT;%                                                  38579000
      P(RCW,MSCW,STF);                                                  38580000
      RCW:=RCW&P(XCH)[CTC];                                             38581000
         J~LOCK; IF FIB[17]<0 THEN%                                     38582000
         BEGIN M[ALPHA].[FF]~@60020; IF TYPE<20 THEN CKBKUP;            38583000
         M[ALPHA].[18:1]~0; CKBKUP END%                                 38584000
              ELSE IF FIB[17]<BLEN THEN%                                38585000
      BEGIN IF NOT COBOL THEN FIB[17]~FIB[17]-(STATE.[46:2]=3);%        38586000
            STREAM(N:=FIB[17],D:=M[ALPHA].[CF]);                        38587000
                   BEGIN N(DS:=8 LIT " "); END;                         38587500
M[ALPHA]~FLAG(FIB[16]&0[20:47:1]); CKBKUP;                              38588000
      END ELSE COOLOFF;                                                 38589000
      M[ALPHA].[FF]~@60001;                                             38590000
      IF NOT UNLABELED THEN                                             38591000
      BEGIN IF TYPE<20 THEN CKBKUP;                                     38591100
            M[ALPHA]~(*P(DUP))&2[18:45:3]&M[ALPHA-2][8:8:10];           38592000
            STREAM(L~M[ALPHA-2],B~M[ALPHA]); BEGIN SI~L; DS~17 WDS END; 38593000
      END; M[ALPHA].[20:1]~1; IF FIB[14].[FF]!FIB[14].[CF] THEN         38594000
      BEGIN CKBKUP; FIB[14].[FF]~P(DUP);END; CKBKUP;                    38595000
      IF KIND=12 THEN % PBD                                             38596000
      BEGIN T~FIB[14].[3:15];                                           38597000
            IF (R:=M[T+7]|3) NEQ 0 THEN                                 38598000
            BEGIN IF R LSS 900 THEN                                     38598100
            BEGIN FORGETUSERDISK(M[T+10]+R,R-900);                      38599000
                  M[T+8]~R;                                             38600000
            END;                                                        38601000
            M[T+1]~M[T+3];                                              38602000
            STREAM(A~FPB[FNUM+2].[18:30],T~T+3);                        38603000
            BEGIN SI~LOC A;DS~8 OCT;DI~DI-8;DS~2 LIT"+2";               38604000
                 SI~T;SI~SI+5;DS~3 CHR;                                 38605000
            END;                                                        38606000
            M[T+1].[6:18]~M[T+3].[30:18];                               38607000
            IF I:=TYPE>20 THEN M[T+5].[3:1]:=0;                         38607100
            R:=M[T+6];                                                  38607300
$ INCLUDE 38607901, IF DATACOM AND RJE AND NOT INQUIRY;                 38607399
            IF P(JAR[P1MIX,6].[9:9],DUP)!0 THEN                         38607400
            BEGIN P(GET(JAR[P1MIX,6]));                                 38607500
                 IF I THEN IF P.[39:1] THEN ELSE P(DEL,0)               38607600
                 ELSE IF P.[36:1] THEN ELSE P(DEL,0);                   38607700
            END;                                                        38607800
            M[T+6]:=P(XCH);                                             38607900
            ENTERUSERFILE(IF I THEN P(PUD) ELSE P(PBD),R,T-1);          38608000
            IF AUTOPRINT OR M[T+6]!0 THEN                               38609000
            IF PRINTORPUNCHWAIT(R.[6:24],I&M[T+6][9:39:9]) THEN         38609100
            BEGIN % MARK FILE SO THAT AUTOPRINT WILL NOT GRAB IT AGAIN  38609200
                 T~DIRECTORYSEARCH(IF I THEN P(PUD) ELSE P(PBD),        38609300
                   R&1[CTC],5);                                         38609350
                 M[T+4].[6:1]:=1;                                       38609400
                 LOCKDIRECTORY;                                         38609500
                 DISKWAIT(T INX 0,30,T.[FF]);                           38609600
                 UNLOCKDIRECTORY;                                       38609700
                 FORGETSPACE(T);                                        38609800
            END ELSE ELSE                                               38609900
            IF PBDREL OR USEPBD THEN                                    38610000
                 FILEMESS((IF I THEN P(PUD) ELSE P(PBD))&R[24:6:24],    38610100
                         " REL:  ",MID,FID,0,0,0);                      38610200
            FOR T:=1 STEP 1 UNTIL R.[CF] DO                             38610300
            FORGETSPACE(DIRECTORYSEARCH(IF I THEN P(PUD) ELSE P(PBD),   38610400
                        R&T[CTC],14));                                  38610450
            END                                                         38610500
      END       ELSE                                                    38622000
      BEGIN T~@1737000000000000;                                        38623000
            J~WAITIO([T],@40,U)!0 OR J;                                 38624000
            I := SPACE(8);                                              38625000
            STREAM(PN:=TYPE GEQ 20,D:=0,I);                             38626000
            BEGIN                                                       38626100
                 DS:=24LIT" LABEL  0PBTMCP 0BACK-UP";                   38626200
                 PN(D:=DI; DI:=DI-14; DS:=2LIT"UT"; DI:=D);             38626300
                 20(DS:=2LIT"  ");                                      38626400
            END;                                                        38626500
      IF NOT UNLABELED THEN M[I+4]~M[M[ALPHA-2] INX 4].[42:6];          38628000
      J~WAITIO(I&8[8:38:10]&5[21:45:3],@40,U)!0 OR J;%                  38629000
      FORGETSPACE(I);%                                                  38630000
      FOR I~0 STEP 1 UNTIL 1 DO%                                        38631000
            P(WAITIO(@1000000340000005,@40,U),DEL);%                    38632000
      IF (TWO(U) AND SAVEWORD)!0 THEN%                                  38633000
            SETNOTINUSE(U,0) ELSE                                       38634000
BEGIN%                                                                  38635000
      RDCTABLE[U].[8:6]~0;PRNTABLE[U].[15:15]~0;%                       38637000
      RRRMECH~NOT TWO(U) AND RRRMECH;%                                  38638000
     I:=IF AUTOPRINT THEN NOT PRINTORPUNCHWAIT(-U,TYPE GEQ 20)          38639000
        AND 1 ELSE 1;                                                   38639100
     IF I THEN IF J THEN SETNOTINUSE(U,0) ELSE LABELTABLE[U].[1:5]:=1;  38640000
      END; END;                                                         38641000
STATE.[FF]~0;                                                           38642000
      GO CLOSEOUT;%                                                     38643000
PBD:::   "PBD    ";                                                     38644000
PUD:::   "PUD    ";                                                     38644500
CLOSEOUT:                                                               38645000
      P(P&RCW[CTC],0,RDS,0,XCH,P&P[CTF],STF);                           38646000
END BACK CLOSE;                                                         38647000
PROCEDURE OTHERCLOSE(ALPHA); VALUE ALPHA; INTEGER ALPHA;%               38648000
BEGIN REAL RCW=+0,MSCW=-2;                                              38649000
      ARRAY FIB=+1[*],FPB=+2[*],HEADER=+3[*];%                          38650000
%%%      DONT ADD ANY DECLARATIONS BETWEEN "HEADER" AND "KIND" %%% WCP  38651000
      INTEGER KIND=+4,NBUFS=+5,U=+6,BLEN=+7,CODE=+8,                    38652000
              UNLABELED=+9,COBOL=+10,I=+11,J=+12,                       38653000
              FNUM=+13;                                                 38654000
      REAL MID=+14,FID=+15,R=+16,D=+17,C=+18,FORMS=+19,STATE=+20;       38655000
       REAL STA=+21;%                                                   38655100
       REAL T1=+22,T2=+23,T3=+24,IOD=+25;%                              38656000
      ARRAY SEG0=+26[*],SKEL=+27[*];                                    38657000
      REAL T=+28,ACCESS=+29;%                                           38658000
      BOOLEAN COMPGO=+30;                                               38659000
      LABEL PX,PBD;                                                     38660000
      LABEL CR,LP,MT,CLOSED,DK,SP,CP,BKUP,PP,PR,DC,CD,CC;               38661000
      SWITCH SW~CR,LP,MT,CLOSED,DK,SP,CP,BKUP,PP,PR,DC,CD,BKUP;         38662000
      LABEL EOF,ON,DNE,CLEANUP;%                                        38663000
      LABEL EOD;                                                        38664000
      SUBROUTINE COOLOFF;%                                              38665000
      BEGIN FOR I~0 STEP 1 UNTIL NBUFS-1 DO%                            38666000
            BEGIN IF NOT M[ALPHA+I].[19:1] THEN%                        38667000
                        SLEEP([M[ALPHA+I]],IOMASK);%                    38668000
                  IF KIND!4 THEN                                        38669000
                  IF M[ALPHA+I].[27:1] THEN GO TO EOF;%                 38670000
            END;%                                                       38671000
EOF:  END COOLOFF;%                                                     38672000
%                                                                       38673000
      DEFINE REW=CODE.[47:1]#,%                                         38674000
             REL=CODE.[46:1]#,%                                         38675000
             TIME=CODE.[45:1]#,%                                        38676000
             LOCK=NOT CODE.[44:1]#,%                                    38677000
             PURGE=NOT CODE.[43:1]#;%                                   38678000
%                                                                       38679000
      SUBROUTINE EMPTY;%                                                38680000
      IF FIB[17]<BLEN AND (STATE.[46:2]!0 OR KIND=1) THEN               38681000
      BEGIN IF NOT COBOL THEN FIB[17]~FIB[17]-(STATE.[46:2]=3);%        38682000
            STREAM(KIND,N:=FIB[17],D:=M[ALPHA].[CF]);                   38683000
            BEGIN SI~LOC KIND; SI~SI+7;%                                38684000
                  IF SC="2" THEN DS~LIT "~" ELSE%                       38685000
                  IF SC="5" THEN DS~LIT "~" ELSE N(DS~8 LIT " ");%      38686000
            END;%                                                       38687000
            P(WAITIO(FIB[16]&(BLEN-FIB[17]|(KIND=2))[8:38:10]%          38688000
                                       ,@40,U),DEL);%                   38689000
            FIB[6]~FIB[6]+1;                                            38690000
      END ELSE COOLOFF;%                                                38691000
      LABEL CLOSEOUT;%                                                  38692000
      LABEL EOFIT;%                                                     38693000
%                                                                       38694000
      P(RCW,MSCW,STF);                                                  38695000
      RCW:=RCW&P(XCH)[CTC];                                             38696000
      GO TO SW[KIND];                                                   38697000
%                                                                       38698000
CR:   COOLOFF; BLASTQ(U);%                                              38699000
      IF I}NBUFS THEN DO UNTIL WAITIO(M[ALPHA-2],@40,U)!0 ELSE%         38700000
      BEGIN I~M[ALPHA+I].[33:15];%                                      38701000
            T~FIB[16].[33:15]-2;%                                       38702000
            FOR J~1 STEP 1 UNTIL NBUFS DO%                              38703000
            BEGIN IF (I>T) AND (I{(T+BLEN+1)) THEN GO ON;%              38704000
                  T~M[T].[18:15]-2;%                                    38705000
            END;%                                                       38706000
      ON:   MOVE(10,T+2,M[ALPHA-2]);%                                   38707000
      END;%                                                             38708000
      IF JAR[P1MIX,0]<0 THEN%                                           38709000
      IF PRT[P1MIX,@25]!0 THEN%                                         38710000
DNE:  BEGIN;STREAM(I:A~"END",D~M[ALPHA-2]);%                            38711000
            BEGIN SI~D;%                                                38712000
            L:    SI~SI+1; IF SC=" " THEN GO TO L;%                     38713000
                  DI~LOC A; DI~DI+5;%                                   38714000
                  IF 3 SC=DC THEN TALLY~1;%                             38715000
                  I~TALLY;%                                             38716000
            END;%                                                       38717000
            IF NOT P THEN%                                              38718000
            BEGIN BLASTQ(U);%                                           38719000
                  DO UNTIL WAITIO(M[ALPHA-2],@40,U)!0;%                 38720000
                  GO TO DNE;%                                           38721000
            END;%                                                       38722000
      END;%                                                             38723000
      BLASTQ(U);                                                        38724000
CC::                                                                    38725000
      M[M[ALPHA-2] INX NOT 3].[9:6]:=0;                                 38726000
      LABELTABLE[U]~-@14;                                               38730000
      RDCTABLE[U]~0;                                                    38731000
       IF 32{U AND U{63 THEN PSEUDOCOPY~PSEUDOCOPY+1;                   38732000
      INDEPENDENTRUNNER(P(.CONTROLCARD),(M[ALPHA-2].[CF])&              38732100
$ INCLUDE 38732201, IF DATACOM AND RJE AND NOT INQUIRY;                 38732199
                                        JAR[P1MIX,6][9:9:9]&            38732200
                                        U[2:42:6]);                     38732300
      GO CLOSEOUT;%                                                     38733000
%                                                                       38734000
CP:   EMPTY;%                                                           38735000
      IF NOT UNLABELED THEN P(WAITIO(M[ALPHA-2],0,U),DEL);%             38736000
      SETNOTINUSE(U,FORMS);                                             38737000
      GO CLOSEOUT;%                                                     38738000
%                                                                       38739000
LP:   EMPTY;%                                                           38740000
      P(WAITIO(@4000100000,0,U),DEL);%                                  38741000
      IF NOT UNLABELED THEN P(WAITIO(M[ALPHA-2],0,U),DEL);%             38742000
      SETNOTINUSE(U,FORMS);                                             38743000
      GO CLOSEOUT;%                                                     38744000
%                                                                       38745000
SP:   IF STATE.[43:1] THEN COOLOFF ELSE EMPTY;%                         38746000
      GO CLOSEOUT;%                                                     38747000
%                                                                       38748000
MT:   IF NOT STATE.[41:1] THEN%                                         38749000
      BEGIN IF STATE.[43:1] THEN%                                       38750000
            BEGIN COOLOFF; BLASTQ(U);%                                  38751000
                  IF NOT REW THEN                                       38752000
                  BEGIN T~@1000000140000005&STATE[22:44:1];%            38753000
                 IF I}NBUFS THEN DO UNTIL WAITIO(T,@377,U).[42:1];      38754000
                       IF NOT UNLABELED THEN                            38754100
                       P(WAITIO(T,@377,U),DEL);                         38755000
                  END;%                                                 38756000
            END ELSE%                                                   38757000
            BEGIN EMPTY;%                                               38758000
      EOFIT:      T~@1737000000000000;%                                 38759000
                  P(WAITIO([T],@40,U),DEL);%                            38760000
                  IF NOT UNLABELED THEN%                                38761000
                  BEGIN;STREAM(BC~FIB[6],RC~FIB[7],D~M[ALPHA-2]);%      38762000
                        BEGIN SI~LOC BC; DI~DI+40;%                     38763000
                              DS~5 DEC; DS~7 DEC;%                      38764000
                        END;%                                           38765000
                        P(WAITIO(M[ALPHA-2],@40,U),DEL);%               38766000
                        P(WAITIO([T],@40,U),DEL);%                      38767000
                        T~@1000000340000005;%                           38768000
                        P(WAITIO(T,@40,U) ,DEL);%                       38769000
                  END;%                                                 38770000
            END;%                                                       38771000
      END ELSE%                                                         38772000
      IF FIB[18].[1:1]THEN BEGIN FIB[18].[1:1]~FIB[16]~0;               38773000
                                 FIB[10].[3:15]:=0; GO EOFIT END;       38773100
      IF REW THEN%                                                      38774000
      BEGIN P(WAITIO(@4200000000,@377,U),DEL);%                         38775000
            STATE.[40:1]~0;%                                            38776000
      END ELSE STATE.[40:1]~NOT STATE.[44:1];%                          38777000
PX:   IF REL THEN%                                                      38778000
      BEGIN SETNOTINUSE(U,0);                                           38779000
            STATE.[41:2]~1;%                                            38780000
      END ELSE STATE.[41:2]~2;%                                         38781000
      IF LOCK THEN%                                                     38782000
      BEGIN SETNOTINUSE(U,1);                                           38783000
            STATE.[41:2]~1;%                                            38784000
      END;%                                                             38785000
      IF U LSS 16 THEN                                                  38786000
      IF PURGE THEN%                                                    38787000
      BEGIN IF PRNTABLE[U]<0 THEN%                                      38788000
             INDEPENDENTRUNNER(P(..PURGEIT),U) ELSE SETNOTINUSE(U,0);   38789000
            STATE.[41:2]~1;%                                            38790000
      END;%                                                             38791000
      GO TO CLEANUP;%                                                   38792000
%                                                                       38793000
PP::  IF NOT STATE.[41:1] THEN%                                         38794000
      BEGIN EMPTY; P(WAITIO(@2004500000000,@40,U),DEL) END;%            38795000
      GO TO PX;                                                         38796000
%                                                                       38797000
PR::  IF NOT STATE.[41:1] THEN BEGIN COOLOFF; BLASTQ(U) END;%           38798000
      IF REW THEN P(WAITIO(@10340000000,@377,U),DEL);%                  38799000
      GO TO PX;%                                                        38800000
%                                                                       38801000
CD::                                                                    38802000
      IF M[ALPHA].[27:1] THEN MOVE(10,FIB[16].[33:15],M[ALPHA-2]) ELSE  38803000
EOD:  DO UNTIL READEMFROMDISK(CIDROW[U-32],M[ALPHA-2]);                 38804000
      IF CIDTABLE[U-32,3] LSS CIDTABLE[U-32,7] THEN                     38805000
      IF JAR[P1MIX,0]<0 AND PRT[P1MIX,21]!0 OR JAR[P1MIX,1]<0 THEN      38806000
      BEGIN;STREAM(E~"END":Q~@14,D~M[ALPHA-2]);                         38807000
            BEGIN SI~LOC Q; SI~SI+7; IF SC!DC THEN DI~DI+1; Q~DI; SI~Q; 38808000
               L: IF SC=" " THEN BEGIN SI~SI+1; GO TO L END;            38809000
                  DI~LOC E; DI~DI+5; IF 3 SC!DC THEN TALLY~1; E~TALLY;  38810000
            END;                                                        38811000
            IF P THEN GO TO EOD;                                        38812000
      END;                                                              38813000
      KIND~0;                                                           38814000
      GO TO CC;                                                         38815000
%                                                                       38816000
CLOSEOUT::  STATE.[39:4]~1; TIME~1;%                                    38817000
CLEANUP:: CLOSED: DK: BKUP: DC:                                         38818000
      P(P&RCW[CTC],0,RDS,0,XCH,P&P[CTF],STF);                           38819000
END OTHER CLOSE;                                                        38820000
PROCEDURE FILEOPEN(XTRA,ALPHA);                                         39000000
    VALUE ALPHA,XTRA; INTEGER ALPHA,XTRA;                               39000100
BEGIN REAL RCW=+0;%                                                     39001000
      REAL IOM=IOMASK, IOMASK;                                          39001100
      REAL XTRAR=-4,XTRAC=-6;                                           39001200
      INTEGER NBUFS,FNUM,RLEN,TYPE,IO,BLEN,U,KIND,                      39002000
              MODE,DIREC,FORMS,COBOL,UNLABELED,OPTIONAL,CNTCTL;         39003000
      REAL T1,T2,MASK,STATE;                                            39004000
      REAL MFID,FID; INTEGER REEL,CDATE,CYCLE; %KEEP THESE TOGETHER     39004100
      ARRAY FIB[*],FPB[*];%                                             39005000
      INTEGER ACCESS,FIB7;                                              39006000
      LABEL DCIN,PBS;                                                   39006100
     LABEL DC19;                                                        39006800
      LABEL DKRN,SPN,DKSN,DKUN,DCN;%                                    39007000
      SWITCH INSW~DKRN,SPN,DKSN,DKUN,DCIN;                              39008000
      LABEL LOOK,EXIT,LOOKOUT,LPS,FINALIN,FINALOUT,SPDC;%               39009000
      REAL SUBROUTINE DSED; DSED~TERMIX.[CF]=P1MIX;%                    39009050
 $ VOID 39026                                                           39010000
      REAL SUBROUTINE CNTLBITS;%                                        39026000
            CNTLBITS~IOMASK&MODE[21:47:1]&DIREC[22:47:1]&CNTCTL[23:47:1]39027000
                  &IO[24:47:1]&(KIND=7 OR KIND>9 AND KIND{12)[20:47:1]  39028000
                  &(IF KIND=1OR KIND=7OR KIND=12THEN@20ELSE 0)[27:42:6];39029000
%                                                                       39030000
      SUBROUTINE MAKEIODS;%                                             39031000
      BEGIN FIB[16]~T1~((BLEN-1)|DIREC+M[ALPHA])&CNTLBITS[18:18:15]%    39032000
                  &(IF BLEN{1023 THEN BLEN ELSE 1023)[8:38:10]%         39033000
                  &TINU[IF (KIND=7 OR KIND=12) THEN IF TYPE<20          39034000
                        THEN 20 ELSE 22 ELSE                            39034050
                        IF KIND=11 THEN 23 ELSE U][3:3:5] OR M;         39034100
            FIB[19]~(IF STATE.[46:2]=0 THEN (DIREC INX T1)%             39035000
                        &(2|DIREC+(BLEN>1023)+1)[3:43:5] ELSE%          39036000
                  IF STATE.[46:2]=1 THEN ((NOT RLEN INX 2)|DIREC INX T1)39037000
                        &RLEN[8:38:10]&(3|DIREC+2)[3:43:5] ELSE%        39038000
                     (1-DIREC INX T1)&RLEN[8:38:10]&(DIREC+6)[3:43:5])% 39039000
                    &IO[25:47:1];%                                      39040000
            IF NOT (IO OR COBOL)THEN%                                   39041000
                  T1~FIB[19]&T1[3:3:5]&0[25:25:1];%                     39042000
            FIB[10].[3:15]~M[ALPHA]-2;   %HEAD OF BUFFER RING           39042100
            T2~T1.[33:15]-M[ALPHA];%                                    39043000
            FOR MASK~0 STEP 1 UNTIL NBUFS-1 DO%                         39044000
            BEGIN                                                    %P 39045000
            M[ALPHA+MASK]~FLAG((P(DUP,LOD)+T2)&P(T1,XCH)[33:33:15]);%   39046000
            END;%                                                       39047000
      END MAKEIODS;%                                                    39048000
      LABEL DKRO,SPO,DKSO,DKUO,DCO;%                                    39049000
      SWITCH OUTSW~DKRO,SPO,DKSO,DKUO,DCO;%                             39050000
 $ VOID 39054                                                           39051000
      LABEL FIXFIB,FIND,SPACER;%                                        39054000
      LABEL PREFINAL,DK1;%                                              39055000
      ARRAY HEADER[*];%                                                 39056000
      REAL TOG;                                                         39056100
      LABEL AGN;                                                        39056500
 $ VOID 39082                                                           39057000
%                                                                       39082000
      FIB~M[ALPHA-3]; FPB~PRT[P1MIX,3];%                                39083000
      IOMASK:=IOM;                                                      39083100
      NBUFS~FIB[13].[1:9]; FNUM~FIB[4].[13:11]; BLEN~FIB[18].[3:15];%   39084000
      TYPE~FPB[FNUM+3].[43:5];%                                         39085000
      STREAM(S ~ [FPB[FNUM+2]], D ~ [REEL]);%                           39086000
       BEGIN SI:=S;DS:=3OCT;DS:=5OCT;DS:=OCT END;%                      39087000
     P(CDATE, RSB, .CDATE,~);                                           39087100
      IF FPB[FNUM+4]>0 THEN REEL ~ CDATE ~ CYCLE ~ 0;                   39087500
      MODE~FIB[13].[24:1]; IO~FIB[13].[27:1]; RLEN~FIB[18].[33:15];%    39088000
      DIREC~FIB[13].[25:1]; FORMS~FPB[FNUM+3].[42:1];%                  39089000
      STATE~FIB[5];  UNLABELED~FIB[4].[2:1];                            39090000
      MFID~FPB[FNUM]; FID~FPB[FNUM+1]; OPTIONAL~FIB[4].[5:1];%          39091000
      COBOL~(FIB[13] AND 1)&([FIB].[8:10]=22)[1:47:1];  % COBOL 60 & 68 39091100
      KIND~FIB[4].[8:4]; REEL~FIB[13].[28:10];%                         39092000
      IF COBOL>0 OR FIB[4].[7:1] THEN     % COBOL 60 OR SORT            39092010
      M[FIB INX NOT 1].[3:6]~2                                          39092020
      ELSE M[ALPHA-7].[3:6]~2;                                          39092030
$ INCLUDE 39092041, IF DATACOM AND RJE AND NOT INQUIRY;                 39092039
      T2:=0&JAR[P1MIX,6][9:9:9];                                        39092040
      IF TYPE=19 THEN GO TO DC19; IF TYPE>25 THEN GO TO DCN;            39092050
      IF (TYPE=0 AND NOT IO) OR TYPE GEQ 20 THEN                        39092060
      BEGIN IF USEPBD                                                   39092070
$ INCLUDE 39092076, IF DATACOM AND RJE AND NOT INQUIRY;                 39092074
           OR (IF T2!0 THEN GET(T2).[39:1] ELSE 0)                      39092075
           THEN TYPE:=22; GO TO LOOKOUT;                                39092080
      END;                                                              39092090
      IF TYPE = 01 OR TYPE = 04 OR TYPE > 14 THEN%                   %DS39092100
      BEGIN IF USEPBD                                                   39092150
$ INCLUDE 39092156, IF DATACOM AND RJE AND NOT INQUIRY;                 39092154
           OR (IF T2!0 THEN GET(T2).[36:1] ELSE 0)                      39092155
           THEN TYPE:=15; GO TO LOOKOUT;                                39092160
      END;                                                              39092170
      IF REEL=0 THEN REEL~1;                                            39092200
      IF IO THEN IF TYPE}10 THEN GO TO INSW[TYPE-10] ELSE GO LOOK;%     39093000
      IF TYPE}10 THEN GO TO OUTSW[TYPE-10]; GO TO LOOKOUT;%             39094000
LOOK: OTHERFILEOPEN(1);                                                 39095000
      IF U LSS 0 THEN GO TO EXIT ELSE GO TO PREFINAL;                   39096000
 $ VOID 39143                                                           39097000
DCN:  FILEMESS(-"I/O ERR",0,MFID,FID,REEL,CDATE,CYCLE);%                39143000
      GETBUFFERS(BLEN,NBUFS, U,ALPHA);%                                 39144000
PREFINAL::  MAKEIODS;%                                                  39145000
      IF KIND=11 THEN                                                   39145100
      BEGIN IF COBOL { 0 THEN          % ALGOL OR COBOL68               39145200
            IF READEMFROMDISK(CIDROW[U-32],M[ALPHA]) THEN               39145210
                  M[ALPHA]~P(DUP,LOD)&0[2:2:1]&1[27:47:1];              39145300
      END ELSE                                                          39145400
      FILLBUFFERS(FIB[16],FIB[19-3|ABS(COBOL)],NBUFS-(COBOL>0),NBUFS);  39146000
      IF COBOL>0 THEN FIB[16]~(*P(DUP))&M[ALPHA][CTC];                  39147000
FINALIN:: FIB[6] ~ FIB[7] ~ FIB[17] ~ 0; GO TO FIXFIB;                  39148000
LOOKOUT:: OTHERFILEOPEN(0);                                             39155000
          IF U LSS 0 THEN GO TO EXIT ELSE GO TO FIND;                   39156000
 $ VOID 3923                                                            39157000
FINALOUT::  IF NOT FIB[18].[1:1] THEN GETBUFFERS(BLEN,NBUFS,U,ALPHA);%  39230000
FIND:       MAKEIODS;%                                                  39231000
            FIB[6]~FIB[7]~0;%                                           39232000
            FIB[17]~IF COBOL THEN FIB[18].[3:15]ELSE FIB[18].[18:15];%  39233000
              IF KIND = 10 THEN                                         39233100
              FOR T2 ~ 0 STEP 1 UNTIL (NBUFS-1) DO                      39233200
              P(@170000000000,M[ALPHA+T2],~);                           39233300
              IF KIND=13 THEN                                           39233400
                   M[ALPHA+1]~ P(DUP,LOD)&P(DUP,LNG)[24:24:1];          39233500
            GO TO FIXFIB;%                                              39234000
DCO:     U:=30; KIND:=10;                                               39235000
$ INCLUDE 39235101, IF DATACOM AND RJE AND NOT INQUIRY;                 39235099
         IF T2 = 0 THEN                                                 39235100
         GO TO SPDC;                                                    39235200
DC19:                                                                   39236000
$ INCLUDE 39236016, IF DATACOM AND RJE AND NOT INQUIRY;                 39236009
        IF T2!0 THEN  %ILLEGAL USE OF DATACOM FOR REMOTE JOB ENTRY      39236010
         BEGIN STREAM(T2:=T2:=GETSPACE(12,0,0)+2);                      39236011
               DS:=30 LIT "-DATACOM INV WITH REMOTE JOB ~";             39236012
              TERMINATE(P1MIX);                                         39236013
              TERMINALMESSAGE(-T2);                                     39236014
          END;                                                          39236015
          FIB[14]:=NBUFS;                                               39236017
          U:=30; KIND:=13;                                              39236018
         FIB[13].[1:9]~ NBUFS~2;                                        39236020
         FIB[18]:=(*P(DUP))&(BLEN:=RLEN)[3:33:15]&BLEN[CTF];            39236030
         IF MFID>0 THEN                                                 39236040
              BEGIN     ;                                               39236045
              STREAM(A~0,B~0:MFID,FID,C~0);                             39236050
                   BEGIN                                                39236060
                   SI~ LOC MFID;  DI~ LOC A;                            39236070
                   2(C~ SI; 8(IF SC}0 THEN IF SC{9 THEN TALLY~ TALLY+1  39236080
                                 ELSE JUMP OUT ELSE JUMP OUT; SI~ SI+1);39236090
                     SI~ C; C~ TALLY; DS~ C OCT; TALLY~ 0; SI~ LOC FID);39236100
                   END;                                                 39236110
              FID~ P;                                                   39236120
              MFID~P;                                                   39236130
              END;                                                      39236140
         M[ALPHA-2]~ 0&MFID[9:44:4]&FID[14:44:4];                       39236150
$INCLUDE 39236156, IF DATACOM AND DCSPO AND NOT INQUIRY;                39236154
         IF M[ALPHA-2]!0 THEN IF GET(M[ALPHA-2]).[32:1] THEN GO TO DCN; 39236155
         GO SPDC;                                                       39236160
SPO::    MODE~ 0;  U~ 25;    KIND~ 5;                                   39236900
SPDC: CNTCTL~DIREC~0; UNLABELED~1;                                      39237000
      STARTIMING(FNUM,U);%                                              39238000
      GO TO FINALOUT;%                                                  39239000
SPN:: U~25; KIND~5;                                                     39240000
      MODE~CNTCTL~DIREC~0; UNLABELED~1;%                                39241000
      STARTIMING(FNUM,U);%                                              39242000
      IF BLEN<10 THEN BLEN~10;%                                         39243000
      GETBUFFERS(BLEN,NBUFS,U,ALPHA);%                                  39244000
      MAKEIODS;%                                                        39245000
      GO TO FINALIN;%                                                   39246000
DKRN:: DKRO: ACCESS:=1;                                                 39247000
             GO TO DK1;                                                 39248000
DKUO::       IO:=1;                                                     39249000
DKUN::       ACCESS:=2;                                                 39250000
             GO TO DK1;                                                 39251000
 $ VOID                                                                 39252000
 $ VOID                                                                 39253000
DKSN:: DKSO: ACCESS~0;%                                                 39254000
DK1: DISKFILEOPEN(0); IF TOG THEN GO TO EXIT ELSE %                     39255000
            GO TO FIXFIB;                                               39255100
 DCIN::  U~30; KIND~10;                                                 39293100
            CNTCTL~DIREC~0; UNLABELED~1;                                39293200
            STARTIMING(FNUM,U);                                         39293300
            GETBUFFERS(BLEN,NBUFS,U,ALPHA);                             39293400
            IOMASK:=0; MAKEIODS;                                        39293500
                                                                        39293600
                                                                        39293700
FIXFIB::    FIB[4].[2:1]~UNLABELED;%                                    39294000
            FIB[4].[8:4]~KIND;%                                         39295000
            FIB[15].[24:6]~U;                                           39296000
            FIB[13].[28:10]~REEL;%                                      39297000
            FPB~PRT[P1MIX,3];                                           39297010
            FPB[FNUM+3].[43:5]~TYPE;                                    39297020
            STREAM(REEL,D:=[FPB[FNUM+2]]);                              39297100
            BEGIN DI:=D;SI:=LOC REEL;DS:=3DEC END;                      39297200
            RDCTABLE[U].[8:6]~P1MIX;%                                   39298000
            IF FIB[18].[1:1] THEN%                                      39299000
            BEGIN FIB[16]~0;%                                           39300000
                  FIB[5]~STATE&8[39:42:6];%                             39301000
                   FIB[10].[3:15]~0;                                    39301100
            END ELSE%                                                   39302000
           FIB[5].[CF]~STATE&DIREC[44:47:1]&IO[39:43:5]&FIB[5][45:45:1];39303000
            IF COBOL>0 OR FIB[4].[7:1] THEN M[FIB INX NOT 1].[3:6] ~ 6  39304000
                     ELSE M[ALPHA-7].[3:6]~4;%                          39305000
            FIB[4].[27:3]~ACCESS;%                                      39306000
           IF U LSS 16 THEN IF IO THEN FPB[FNUM+3].[23:1]:=1 %IN        39306010
                       ELSE FPB[FNUM+3].[23:1]:=0; %OUT                 39306020
            IF (U~T1~FIB[10].[3:15])!0 THEN                             39306100
            DO BEGIN IF KIND=10 THEN M[U-1]~0;  %FAKE QUEUE             39306200
            M[U-2].[3:6]~3 END UNTIL (U~M[U].[FF]-2)=T1;                39306300
EXIT::%                                                                 39307000
      IF XTRA THEN                                                      39307100
         XTRAC:=NOT(FIB[4].[7:1] OR UNLABELED) AND XTRAC NEQ 2;         39307200
      IF XTRA LSS 2 THEN GO TO INITIATE;                                39307300
      RCW:=XTRAR;                                                       39307400
END FILEOPEN;%                                                          39308000
 PROCEDURE DIRECTORYBUILDER(A,DDD);                                     40000000
         VALUE A,DDD;                                                   40001000
         REAL A;                                                        40002000
         ARRAY DDD[*];                                                  40003000
BEGIN REAL Y,Z,B,C,I,J,T,RA,RL,RT1,R;INTEGER RADD,RLEN;                 40004000
REAL NEXTLINK,AD,X,K;ARRAY SU[*];REAL SEVEN7,FORTY,L,CTR;               40005000
ARRAY HEAD[*],KK[*],PL[*];                                              40005050
REAL W,ESPADD,DISKTOP,SUPER,EUM,NT1,NT2,NT3,NT4;                        40005100
BOOLEAN UCHANG,ERROR;INTEGER LO,REM,TN,TM,MN;REAL X1,X2,EUMASK;         40005110
ARRAY ZSF[*],SOCK[*];                                                   40005200
REAL D,Y1,Y2;                                                           40005210
LABEL FORGET;                                                           40005230
              ARRAY V[*,*];                                             40006000
              INTEGER S;                                                40006100
              ARRAY VR=V[*];                                            40007000
              REAL H,FI,FJ;                                             40008000
LABEL LOOKATDKB,BACK,EXIT,M1,SKBLK;                                     40008050
DEFINE ROW=SU[X].[3:4]#,                                             %MC40008100
       LASTAVAIL=HEAD[0].[3:15]#,                                       40008110
     AVAILABLE=HEAD[0].[FF]#,                                           40008120
       FIRSTLINK=HEAD[0].[CF]#,                                         40008130
       DA=9:24#,DAC=9:24:24#,                                        %MC40008140
     SIZE=PL[1].[DA]#,                                                  40008150
     ADDRESS=PL[0].[DA]#,                                               40008160
       HIGHLINK=PL[0].[CF]#,                                            40008170
       LOWLINK=PL[1].[CF]#,                                             40008180
       DISKRUNNING=[18:1]#,                                          %MC40008190
       FORTYMILLDISK=[19:1]#,                                        %MC40008200
       OCCUPIED=[20:1]#,                                             %MC40008210
        AV1=480#,AVBLOCK=16#;                                           40008220
SUBROUTINE SAVIT;                                                    %MC40008300
BEGIN                                                                %MC40008310
IF (W~W+2)}28 THEN                                                   %MC40008320
BEGIN ZSF[29]~ESPADD;DISKWAIT(ZSF INX 0,30,ESPADD~GETESPDISK);       %MC40008330
W~0 END;ZSF[W]~T;ZSF[W+1]~DDD[479-2|I];                              %MC40008340
END SAVIT;                                                           %MC40008350
 SUBROUTINE CLEAR;                                                      40009000
         BEGIN V[S,0]~0;                                                40010000
              V[S,1] ~ BYPASS.[CF];                                     40011000
              V[S,2]~@14;                                               40012000
              V[S,3]~V[S,4]~0;                                          40013000
              MOVE(57,[V[S,2]],[V[S,5]]);                               40014000
         END;                                                           40015000
SUBROUTINE SETUP;                                                    %MC40016000
BEGIN                                                                   40016020
LO:=(X+1) MOD 5;LO:=LO+(LO=0)|5;                                        40016025
IF RADD NEQ (LO:=LO|FORTY) OR (LO=RADD AND RLEN LSS FORTY) THEN         40016026
BEGIN                                                                %MC40016100
IF Y:=(SU[X].[CF]=0) THEN                                               40016200
    BEGIN                                                            %MC40016220
      NT1:=SU[X]:=(GETSPACE(16,0,0)+2)&SU[X][18:18:9];                  40016240
      MOVE(16,NT1-1,NT1);                                               40016260
    END;                                                             %MC40016300
M[SU[X] INX K]~RT1~GETSPACE(64+Y,0,0)+2;                             %MC40016400
KK~[M[RT1]]&(64+Y)[8:38:10];JUNK~61+Y;                                  40016410
MOVE(64+Y,RT1-1,RT1);                                                   40016420
FOR R:=3|Y STEP 2 UNTIL JUNK DO KK[R]:=RT1+R+2;                         40016500
HEAD~[M[M[SU[X]]]]&1[8:38:10];                                       %MC40016510
IF Y THEN                                                            %MC40016600
BEGIN                                                                   40016700
    KK[1]:=KK[2]:=SEVEN7;                                               40016800
    KK[1].[DA]:=LO;                                                     40016900
    KK[2].[DA]:=IF X EQL 0 THEN FORTY-(DISKBOTTOM+5) ELSE FORTY;        40016910
    M[SU[X]].[DA]:=LO;                                                  40016920
      HEAD[0]:=RT1+1;                                                   40017050
END;                                                                    40017100
HEAD[0].[FF]~RT1+3|Y;                                                %MC40017200
HEAD[0].[3:15]~62+RT1+Y;                                             %MC40017250
END                                                                     40017260
     ELSE                                                               40017270
DO BEGIN SU[X].OCCUPIED:=1;X:=X-1 END UNTIL(RLEN:=RLEN-FORTY)LSS FORTY; 40017280
END OF SETUP;                                                        %MC40017300
SUBROUTINE BUILDAVAIL;                                               %MC40027100
BEGIN                                                                %MC40027200
BACK::ERROR~1;REM~0;                                                 %MC40027230
IF(Z:=SU[X])!0 AND Z.[CF]=0 THEN BEGIN K:=0;SETUP END;                  40027240
IF (Z:=SU[X]).DISKRUNNING AND NOT Z.OCCUPIED AND RLEN>0 THEN            40027250
    BEGIN                                                            %MC40027260
       IF M[SU[X]].[DA] GEQ RADD THEN                                   40027270
       BEGIN                                                            40027280
       P(M[M[SU[X]]],0&RADD[9:24:24],LLL,0,INX,.AD,~,DEL);           %MC40027290
       HEAD~[M[M[SU[X]]]]&1[8:38:10];PL~[M[AD]]&2[8:38:10];          %MC40027295
%VOID                                                                   40027296
            IF ((RA:=ADDRESS)-(RL:=SIZE) LSS RADD-RLEN OR               40039000
             (REM:=IF(NT1:=RADD MOD FORTY)=0 THEN 0 ELSE NT1-RLEN) LSS  40039100
             0)AND RADD NEQ RA THEN                                     40039200
           BEGIN                                                     %MC40040000
              IF REM LSS 0 THEN RLEN:=RADD MOD FORTY;                   40040500
              IF AVAILABLE=0 THEN%NEED ANOTHER ROW                   %MC40041000
                BEGIN                                                %MC40042000
                   K~ROW;K~K+1;ROW~K;                                %MC40042100
                   IF K GTR 15 THEN DO UNTIL FALSE;                  %MC40043000
                        SETUP;                                       %MC40044000
                END;                                                 %MC40045000
              NEXTLINK~M[R~AVAILABLE];                               %MC40046000
              M[R]~AD&(RADD-RLEN)[DAC];                              %MC40047000
              IF AD.[CF]=SEVEN7 THEN M[SU[X]].[DA]~RADD-RLEN;        %MC40047100
            IF LOWLINK=SEVEN7 THEN                                      40048000
               FIRSTLINK:=R                                             40049000
                    ELSE                                                40050000
               M[LOWLINK].[CF]:=R;                                      40051000
           M[R+1]:=PL[1]&(RADD-RLEN-(RA-RL))[DAC];                      40055000
            PL[1]:=R&(RA-RADD)[DAC];                                    40056000
              RLEN~0;                                                %MC40056100
              AVAILABLE~NEXTLINK;ERROR~FALSE;                        %MC40057000
           END                                                       %MC40058000
              ELSE%REDUCE EXISTING AREA(BEWARE OF ADDRESS CONFLICT OR%MC40059000
                  %EU UNDERFLOW).                                    %MC40060000
         BEGIN                                                       %MC40060050
              IF RADD=RA AND RL GEQ RLEN THEN                           40060100
             BEGIN                                                   %MC40060200
                ADDRESS~RA-RLEN;                                     %MC40060300
                IF HIGHLINK=SEVEN7 THEN                              %MC40060302
                M[SU[X]].[DA]~ADDRESS;                               %MC40060305
                SIZE~RL-RLEN;ERROR~RLEN~0;                           %MC40060400
             END                                                     %MC40060500
              ELSE                                                   %MC40060600
           IF RLEN>RL THEN                                           %MC40061000
            IF LOWLINK=SEVEN7 AND(X-1)MOD 5!4 THEN                   %MC40062000
               BEGIN                                                 %MC40063000
                  RADD~RADD-RL-1;RLEN~RLEN-RL-1;SIZE~0;ERROR~0;      %MC40064000
               END                                                   %MC40065000
               ELSE                                                     40065010
              IF RADD-RLEN LSS (NT1:=M[LOWLINK].[DA]) THEN              40065020
                   BEGIN                                                40065030
                   RLEN:=RLEN-(RADD-(RADD:=NT1));                       40065040
                   SUPER:=1;GO BACK;                                    40065050
                   END                                                  40065060
                        ELSE                                            40065070
              IF RADD GTR RA-RL THEN                                    40065080
                   BEGIN                                                40065090
                   RLEN:=RADD-(RA-RL);SUPER:=1;                         40065100
                   GO BACK;                                             40065110
                   END                                                  40065120
                 ELSE  RLEN~ 0                                       %MC40066000
               ELSE                                                  %MC40067000
             BEGIN SIZE~RL-RLEN;ERROR~RLEN~0; END;                   %MC40068000
         END;                                                        %MC40068050
           IF SIZE=0 THEN                                            %MC40068100
             BEGIN                                                   %MC40069000
                IF HIGHLINK=SEVEN7 AND LOWLINK=SEVEN7 THEN           %MC40070000
                  BEGIN                                              %MC40071000
                 SU[X].OCCUPIED~TRUE;                                %MC40072000
                     K~-1;                                           %MC40073000
                   WHILE(Y~M[SU[X]INX (K~K+1)])!0 AND K{15 DO        %MC40074000
                        FORGETSPACE(Y);                              %MC40075000
                     FORGETSPACE(SU[X]);                             %MC40076000
                  END                                                %MC40077000
                 ELSE                                                %MC40078015
                  BEGIN                                              %MC40078020
                      IF HIGHLINK=SEVEN7 THEN                        %MC40078030
                        BEGIN                                        %MC40078031
                        M[PL[1]].[CF]~SEVEN7;                        %MC40078032
                        M[SU[X]].[DA]~M[PL[1]].[DA];                 %MC40078033
                        END                                          %MC40078034
                             ELSE                                    %MC40078035
                        BEGIN                                        %MC40078036
                  M[PL[0]+1].[CF]:=LOWLINK;                             40078038
                        IF LOWLINK=SEVEN7 THEN                       %MC40078040
                           FIRSTLINK~HIGHLINK                        %MC40078042
                                ELSE                                 %MC40078046
                     M[PL[1]].[CF]:=HIGHLINK;                           40078048
                        END;                                         %MC40078050
                     IF M[LASTAVAIL]=0 THEN                          %MC40078052
                              M[LASTAVAIL]~AD;LASTAVAIL~AD;          %MC40078054
                     IF AVAILABLE=0 THEN AVAILABLE~AD;               %MC40078058
               PL[0]:=0;                                                40078060
                  END;                                               %MC40078065
        END;                                                         %MC40078067
IF REM LSS 0 THEN BEGIN RADD~X MOD 5;RADD~(RADD+(RADD=0))|FORTY;        40078068
    RLEN~ABS(REM); END;                                                 40078069
           X~X-(RLEN!0);                                             %MC40078070
          END ELSE                                                      40078072
          IF(NT1:=M[SU[X]].[DA]) GTR RADD-RLEN THEN                     40078074
              BEGIN RLEN:=RLEN-(RADD-(RADD:=NT1));                      40078076
              SUPER:=1; GO BACK;                                        40078078
           END                                                       %MC40078080
           ELSE                                                         40078085
              RLEN~0;                                                %MC40078087
        END;                                                         %MC40078090
    IF RLEN>0 AND NOT ERROR THEN GO BACK;                            %MC40078091
SUPER:=SUPER OR (ERROR AND SU[X].DISKRUNNING);                          40078092
END OF COMPLEMENTING DISK DIRECTORY;                                    40078093
SUBROUTINE LOCKED;                                                      40100000
BEGIN                                                                   40100100
IF (X1:=(RADD-RLEN) DIV TN)=(X2:=RADD DIV TN) THEN                      40100200
IF(TWO(X1) AND EUM)=0 THEN BUILDAVAIL ELSE GO FORGET ELSE               40100300
BEGIN                                                                   40100400
    Y1:=RADD;Y2:=RLEN;                                                  40100500
    IF(RLEN:=(X1+1)|TN-(RADD-Y2  )  )GTR 0 AND (TWO(X1) AND EUM)=0 THEN 40100600
         BEGIN RADD:=(X1+1)|TN;X:=5|D+((Y1-Y2)DIV FORTY);BUILDAVAIL END;40100700
    IF (RLEN:=  Y1-(X2|TN)) GTR 0 AND (TWO(X2) AND EUM) EQL 0 THEN      40100800
         BEGIN RADD:=Y1;X:=5|D+RADD DIV FORTY;BUILDAVAIL; END;          40100900
    WHILE (X2:=X2-1) GTR X1 DO                                          40101100
         BEGIN                                                          40101200
         RLEN:=TN;X:=5|D+((RADD:=(X2+1)|TN)-1)DIV FORTY;                40101250
         IF (TWO(X2) AND EUM)=0 THEN BUILDAVAIL;                        40101300
         END;                                                           40101400
END;                                                                    40101500
FORGET:                                                                 40101510
END OF LOCKED;                                                          40101600
$ INCLUDE 40246001,IF AUXMEM;                                           40245999
              AUXILIARYTABLEINITIALIZE;                                 40246000
SU~[M[RT1~GETSPACE(100,0,0)+2]]&100[8:38:10];                        %MC40249100
SEVEN7:=@77777;FORTY:=40000;TN:=10000;MN:=1000000;TM:=10000000;         40249105
MOVE(100,RT1-1,RT1);                                                    40249110
SOCK:=[M[RT1:=SPACE(40)]]&40[8:38:10];                                  40249120
MOVE(40,RT1-1,RT1);                                                     40249130
X1~NEUP.[CF]-1;                                                         40249200
LOOKATDKB:                                                           %MC40249300
FOR J:=0 STEP 1 UNTIL X1 DO                                             40250000
BEGIN                                                                   40251000
X2:=19;                                                                 40252000
FOR I:=0STEP 1 UNTIL X2 DO                                              40253000
BEGIN                                                                   40254000
    RADD:=MN|J+I|TN;                                                    40254100
    STREAM(Q:=RADD,B:=40+A);                                            40255000
    BEGIN SI:=LOC Q;DS:=8 DEC END;                                      40256000
    IF I EQL 0 THEN X2:=20|WAITIO(40+A INX @140000000,@64,18+C).[43:1]  40257000
     +X2;                                                               40257100
    IF NOT(R~WAITIO(40+A INX @100000000,@64,18+C)).[42:1] THEN          40258000
    BEGIN                                                               40261000
    NT2:=(NT1:=5|J+50|C)+(I DIV(SU[NT1].FORTYMILLDISK+1)DIV 4);         40261010
    SU[NT2]:=P(DUP,LOD)&1[18:47:1]&(X2>19)[19:47:1];                    40261040
    IF R.[43:1] THEN                                                    40261042
    BEGIN FORTY:=FORTY|((X2 GTR 19)+1);                                 40261043
    SOCK[(NT4:=J+C|10)+20]:=P(DUP,LOD) OR TWO(IF X2=19 THEN I ELSE      40261044
         (I DIV 8)|4+(I AND 3));SOCK[NT4]:=P(DUP,LOD) OR TWO(I);        40261045
    X:=NT2;RADD:=(RADD MOD MN)+(RLEN:=TN);BUILDAVAIL;                   40261046
    EUMASK:=EUMASK OR TWO(10|C+J);FORTY:=40000;                         40261047
    END;                                                                40261048
      END ELSE I:=I+((SU[NT1:=(5|J+50|C)].FORTYMILLDISK+1)|4);          40261050
END;                                                                    40261200
END;                                                                    40262000
 IF NOT C AND (X1:=NEUP.[FF]-NEUP.[CF]-1) GEQ 0 THEN                    40262300
BEGIN C:=1;GO LOOKATDKB; END;                                           40262310
              J~DIRMOD;                                                 40262500
              V ~ [M[GETSPACE( J ,0,0)+2]]& J [8:38:10];                40263000
              J ~ J-1;                                                  40264000
              FOR S ~ 0 STEP 1 UNTIL J DO                               40264500
                   BEGIN VR[S] ~  [M[GETSPACE(61,0,0)+1]]&62[8:38:10];  40265000
                       BYPASS~BYPASS-2;                                 40266000
                        CLEAR;                                          40267000
                   END;                                                 40268000
              ZSF~[M[GETSPACE(31,0,0)+2]]&30[8:38:10];                  40275500
              ZSF[0]~@14;                                               40275600
              W~0;                                                      40275700
              FOR J ~ DIRECTORYTOP+4 STEP 16 WHILE J ! 16 DO%           40276000
              BEGIN                                                     40277000
                        DISKWAIT(-A,480,J);                             40278000
                        IF J+15}BYPASS.[CF] THEN PUNT([PUNTER[21]]);    40278100
                        BYPASS.[FF]~J+15;                               40278200
                        FOR I ~ 0 STEP 1 UNTIL 14 DO%                   40279000
                             BEGIN T ~ DDD[478-2|I];%                   40280000
                                  H:=J+14-I;                            40280100
                                  IF T=@114 THEN                        40281000
                                       BEGIN DDD[479-2|I]:=0;           40281100
                                            UCHANG:=0;              %R6140281110
                                            I:=15;                      40281200
                                       END ELSE                         40281300
                                  IF T=@14 OR                           40282000
                                     DDD[424-I|30].[1:1] THEN           40283100
                                       BEGIN DDD[478-2|I]:=@14;         40283200
                                            UCHANG:=0;              %R6140283210
                                            DDD[479-2|I]:=NEXTSLOT;     40283300
                                            IF NEXTSLOT=0 THEN          40283400
                                            BEGIN FI:=I;FJ:=J+15 END;   40283500
                                            NEXTSLOT:=H;                40283600
                                       END ELSE                         40284000
                                       BEGIN DDD[429-I|30].[1:42]:=0;   40285000
                                            B:=DDD[429-I|30];           40285005
                                            IF (C~DDD[423-I|30])}0 THEN 40285010
                                            BEGIN DDD[423-I|30]~        40285020
                                                 -C&C[2:8:10];          40285030
                                                 UCHANG:=0;         %R6140285035
                                                        DDD[424-I|30]~0;40285135
                                            END                         40285140
                                                 ELSE                   40285150
                                            DDD[424-I|30]~P(DUP,LOD)    40285160
                                             AND @0007000000007700;     40285170
                                            IF C.[2:10]=0 THEN SAVIT;   40285500
                   FOR C:=1 STEP 1 UNTIL 20 DO                          40286000
                   BEGIN RADD:=DDD[429-I|30+C];                         40287000
                   IF RADD GEQ DISKBOTTOM+5 THEN                        40290000
                   BEGIN                                                40290100
                   IF (RADD:=RADD+(RLEN:=DDD[428-I|30])) GTR TM THEN    40290200
                   BEGIN RADD:=RADD MOD TM;X:=50 END ELSE X:=0;         40290300
                   IF SU[X:=X+5|(D:=RADD DIV MN)].FORTYMILLDISK THEN    40290400
                   FORTY:=P(FORTY,DUP,+);                               40290500
                   X:=((RADD:=RADD MOD MN)-1) DIV FORTY + X;            40290600
                   IF (EUM:=SOCK[D]) NEQ 0 THEN LOCKED ELSE BUILDAVAIL; 40292050
                   FORTY:=40000;                                        40292060
IF SUPER THEN                                                           40292200
    BEGIN                                                            %MC40292210
    LBMESS(-T,DDD[479-2|I],"DISK ","ADDRESS"," ERROR",0,0);          %MC40292220
    ERROR:=SUPER:=0;                                                    40292230
    END;                                                             %MC40292240
                   END;                                                 40292250
                                                 END;                %MC40292300
                                            B:=DDD[479-2|I];            40293010
                                            S:=(S:=DISKBOTTOM           40293020
                                             -SCRAMBLE(T,B)).           40293030
                                             [36:11];                   40293040
                                            C:=V[S,0];                  40293050
                                            V[S,C+2]:=T; V[S,C+3]:=B;   40293060
                                            V[S,C+4]:=H;                40293070
                                            IF (V[S,0]:=C+3)=60 THEN    40293080
                                            BEGIN V[S,4].[FF]~BYPASS~   40293090
                                                 BYPASS-2;              40293100
                                                 IF J+15}BYPASS.[CF]THEN40293101
                                                 PUNT([PUNTER[21]]);    40293102
                                                 DISKWAIT([V[S,2]].[CF],40293110
                                                  60,V[S,1]);           40293120
                                                 CLEAR;                 40293140
                                            END;                        40293150
                                            PBCOUNT~PBCOUNT+((((DDD[478 40309100
                                            -2|I]EQV"PBD    ")=NOT 0)   40309150
                                            OR((DDD[478-2|I]EQV"PUD    "40309200
                                            )=NOT 0))AND(DDD[479-2|I].  40309250
                                            [CF]=1));                   40309300
                   IF T="PRNPBT" AND DDD[479-I-I]="DISK   " THEN L~0;%MC40309400
                             END;      END;%                            40310000
                        DISKWAIT(A,480,J);                              40311000
                        IF I = 16 THEN%                                 40312000
                             BEGIN%                                     40313000
                                  J ~ 0;%                               40314000
                             END;%                                      40315000
                   END;%                                                40317000
              IF L THEN AUTOPRINT~0;                                    40317100
              FOR I:= 0 STEP 1 UNTIL DIRMOD-1 DO                        40317200
                   BEGIN DISKIO(T,[V[I,1]].[CF],60,V[I,1]);             40317210
                        SLEEP([T],IOMASK);                              40317220
                        FORGETSPACE([V[I,1]]);                          40317230
                   END;                                                 40317240
              B:=V.[CF];                                                40317300
              IF NEXTSLOT!0 THEN                                        40317310
              BEGIN                                                     40317320
              DISKWAIT(-B,30,FJ);                                       40317400
              VR[-2|FI+29]:=H;                                          40317500
              DISKWAIT(B,30,FJ);                                        40317600
              END ELSE NEXTSLOT:=H;                                     40317610
              FORGETSPACE(B);                                           40317700
              IF PBCOUNT=0 OR AUTOPRINT THEN ELSE                       40320100
              BEGIN;STREAM(PBCOUNT,X~X~GETSPACE(10,0,0)+2);             40320200
                   BEGIN DS~11 LIT" THERE ARE"; X~DI; SI~LOC PBCOUNT;   40320300
                        DS~4 DEC; DS~18 LIT" PB FILES ON DISK~";        40320400
                        DI~X; DS~3 FILL;                                40320500
                   END; SPOUT(X);                                       40320600
              END;                                                      40320700
Z~USERDISKBOTTOM;                                                    %MC40321000
X:=-5;R:=NEUP.NEUF+2+(NEUP.NEUF+1) DIV 2;  DDD[1]:=0;                   40321100
VR:=[M[GETSPACE(R,0,0)+2]]&R[8:38:10];                                  40321110
MOVE(R,VR.[CF]-1,VR);                                                   40321115
$INCLUDE 40321126, IF SHAREDISK ;                                       40321124
VR[0]:=0&R[TONUMENT] ;                                                  40321125
$OMIT 40321131, IF SHAREDISK ;                                          40321129
VR[0]:=R:=0 ;                                                           40321130
RADD:=R;  R:=R-1 ;                                                      40321135
WHILE (X~X+5)<100 DO                                                 %MC40321200
    BEGIN I~RA~-1;RLEN~RL~0;RADD~RADD+(Z-USERDISKBOTTOM)|30;            40321300
   FORTY:=(SU[X].FORTYMILLDISK+1)|FORTY ;                               40321310
  WHILE (C:=SU[X+(I:=I+1)]).DISKRUNNING AND I LEQ 4 DO                  40321400
IF NOT C.OCCUPIED THEN                                                  40321500
    BEGIN                                                            %MC40321600
        IF C.[CF]=0 THEN                                             %MC40321700
          BEGIN                                                      %MC40321800
           RA~RA+1;                                                  %MC40321810
           C:=0;                                                        40321910
              S:=(I+1)|FORTY;                                           40322000
           J~IF X+I=0 THEN                                           %MC40322100
              FORTY-(DISKBOTTOM+5) ELSE FORTY;                          40322150
           END                                                       %MC40322200
              ELSE                                                   %MC40322210
           BEGIN AD~M[M[SU[X+I]]].[CF];RA~-1;    END;                %MC40322220
        DO                                                           %MC40322250
           BEGIN                                                     %MC40322300
              IF C!0 THEN BEGIN S~M[AD].[DA];J~M[1+AD].[DA] END;     %MC40322400
              S:=S+(X MOD 50)DIV 5|MN;                                  40322410
              IF J>RLEN THEN RLEN:=J;                                   40322420
              IF X GEQ 50 THEN S:=S+TM;                                 40322425
              IF J GTR 0 AND (NT1:=S-J) GEQ DISKBOTTOM+3 THEN           40322430
              IF (Y:=DDD[ABS(R)]).DEND EQL NT1 THEN                     40322440
              BEGIN DDD[R]:=S&(LO:=Y.DSIZE+J)[TODSIZE];                 40322442
             IF LO GTR RLEN THEN RLEN:=LO END                           40322444
                 ELSE                                                %MC40322450
               BEGIN                                                 %MC40322460
                  IF R=AV1 THEN                                      %MC40322470
                    BEGIN                                            %MC40322480
                       DISKWAIT(A,AV1,Z);Z~Z + AVBLOCK;R~ -1;        %MC40322600
                    END;                                             %MC40322700
            DDD[R~R+1]~ S& J[TODSIZE];RL~RL+1;                          40322800
               END;                                                  %MC40323000
             IF C!0 THEN                                             %MC40323100
              IF M[AD].[CF]!SEVEN7 THEN                              %MC40323200
                  AD~M[AD].[CF] ELSE                                 %MC40323300
                  BEGIN                                              %MC40323400
                  K~-1;                                              %MC40323500
                   WHILE (B~(M[SU[X+I]INX(K~K+1)]))!0 AND K{15 DO    %MC40323600
                     FORGETSPACE(B);FORGETSPACE(SU[X+I]);            %MC40323700
                   C~0;                                              %MC40323710
                  END;                                               %MC40323800
           END UNTIL C=0;                                            %MC40323900
  END;                                                                  40324000
IF (DDD[R].DEND MOD MN)=((NT1:=5|FORTY)-1) THEN DDD[R].DEND:=NT1+       40324102
X DIV 5|MN ;                                                            40324104
IF((NT1~X/5){NEUP.[CF]-1)OR (NT1}10 AND(NT2~NEUP.[FF]-NEUP.[CF])!0 AND  40324110
   NT1-10{NT2) THEN                                                     40324112
BEGIN RL:=RL+1;                                                         40324120
 IF NT1 GEQ 10 THEN NT1:=NEUP.[CF]+NT1-10;                              40324190
 VR[NT1+1]:=0&(SU[X].FORTYMILLDISK+1)[TOSPEED]&RL[TONUMENT]&            40324200
 RADD[TOSTARTWRD]&RLEN[TOMAXSIZ];                                       40324210
  IF R=AV1 THEN                                                         40324300
    BEGIN                                                               40324400
      DISKWAIT(A,AV1,Z);                                                40324500
      Z~Z+AVBLOCK;R~-1;                                                 40325000
    END;                                                                40326000
  DDD[R:=R+1]:=400000 DIV(2-SU[X].FORTYMILLDISK)+(X MOD 50)DIV 5|MN+1;  40327000
  IF (LO:=RL DIV 4) LSS AVDIFFMIN THEN LO:=AVDIFFMIN ELSE               40328000
  IF LO>AVDIFFMAX THEN LO~AVDIFFMAX;                                    40329000
    IF (R:=R+LO) GTR AV1 THEN                                           40330000
     BEGIN                                                              40331000
      DISKWAIT(A,AV1,Z);Z~Z+AVBLOCK;                                    40332000
         R:=R-AV1 ;                                                     40333000
     END;                                                               40334000
END;                                                                    40334050
FORTY:=40000 ;                                                          40334054
RADD:=R+1 ;                                                             40334055
END;                                                                    40334056
DISKWAIT(A,AV1,Z);                                                      40334057
NT2:=NEUP.NEUF+2 ;                                                      40334060
FOR NT1:=NEUP.[CF]-1 STEP -1 UNTIL 0 DO                                 40334065
    IF NT1 THEN VR[NT2+NT1 DIV 2].[8:20]:=SOCK[NT1+20]                  40334070
    ELSE VR[NT2+NT1 DIV 2].[28:20]:=SOCK[NT1+20];                       40334075
IF (NT1:=NT2-3) - (X2:=NEUP.[CF]) GEQ 0 THEN                            40334077
FOR NT1:=NT1 STEP -1 UNTIL X2 DO                                        40334079
    IF NT1 THEN VR[NT2+NT1 DIV 2].[8:20]:=SOCK[NT1-X2+30]               40334081
    ELSE VR[NT2+NT1 DIV 2].[28:20]:=SOCK[NT1-X2+30];                    40334083
VR[0]:=P(DUP,LOD)&EUMASK[TOMAXSIZ];                                     40334085
$INCLUDE 40334339, IF SHAREDISK ;                                       40334308
DISKWAIT(-A,60,USERDISKBOTTOM);                                         40334310
DISKWAIT(EUIO.[CF],EUIO.[8:10],EUIOHOLDER) ;                            40334315
MOVE(VR[0] AND NUMENTM,[VR[0]],A) ;                                     40334320
DISKWAIT(A,60,USERDISKBOTTOM);                                          40334330
AVS:=(AVS:=IF(AVS:=(Z-USERDISKBOTTOM)|30+R+AVDIFFMIN)>AVSMAX THEN AVSMAX40334335
   ELSE IF AVS LSS AVSMIN THEN AVSMIN ELSE AVS)+30-(IF (AVS:=AVS MOD 30)40334337
   !0 THEN AVS ELSE 30) ;                                               40334338
$OMIT 40334351, IF SHAREDISK ;                                          40334340
AVTABLE:=[M[GETSPACE(R:=VR.[8:10],0,1)+2]]&R[8:38:10] ;                 40334345
MOVE(R,VR,AVTABLE) ;                                                    40334350
FORGETSPACE(VR);                                                        40334500
FORGETSPACE(SU);                                                        40334600
                                                                        40335125
                                                                        40335130
              UNLOCKDIRECTORY;                                          40336000
           TOGLE:=TOGLE OR ABORTMASK OR USERDISKMASK;                   40336100
              IF(I ~ DIRECTORYSEARCH("SYSTEM ","LOG    ",5)) ! 0 THEN%  40337000
                   BEGIN IF (J~M[I+10]) = 0 THEN%                       40338000
                             BEGIN M[I+10] ~ J ~ GETUSERDISK(M[I+8]);%  40339000
                                  DISKWAIT(I.[CF],30,I.[FF]);           40340000
                             END;%                                      40342000
                        DISKWAIT(-A,30,J);                              40343000
                        IF DDD[0] < DDD[1] AND%                         40344000
                             DDD[1] = M[I+8]|6 AND%                     40345000
                             DDD[4] = "DISKLOG" THEN%                   40346000
                        BEGIN                                           40346100
                             DISKWAIT(-(A+60),30,(DDD[2] DIV 6)+J);     40346200
                             IF DDD[(DDD[2] MOD 6) | 5 + 60] = 4 THEN   40346300
                             BEGIN DDD[0] ~ DDD[2]-1;                   40346400
                                  DISKWAIT(A,30,J);                     40346500
                             END;                                       40346700
                        END                                             40346800
                        ELSE BEGIN DDD[0] ~ 0; DDD[1] ~ M[I+8]|6;%      40347000
                                  DDD[2] ~ DDD[3] ~ 0;%                 40348000
                                  DDD[4] ~ "DISKLOG"; DDD[5] ~ 4;%      40349000
                                  DISKWAIT(A,30,J);                     40350000
                        END;%                                           40351000
                        FORGETSPACE(I);%                                40352000
                        LOGFREE~NABS(J);                                40352500
                   END ELSE J:=0;                                       40352600
$ INCLUDE 40352901, IF SHAREDISK;                                       40352699
                   DDD[0]:=J;                                           40352800
                   DISKWAIT(A,30,DIRECTORYTOP-4);                       40352900
              FOR W~W STEP -2 WHILE ZSF[W]!@14 DO                       40353100
              BEGIN                                                     40353110
                   IF W<0 THEN                                          40353120
                   BEGIN                                                40353130
                        DISKWAIT(-(ZSF INX 0),30,ESPADD);               40353140
                        FORGETESPDISK(ESPADD);                          40353160
                        ESPADD~ZSF[29];                                 40353170
                        W~26;                                           40353180
                   END;                                                 40353190
                   FORGETSPACE(DIRECTORYSEARCH(ZSF[W],ZSF[W+1],6));     40353200
              END;                                                      40353210
                                                                     %MC40353300
                                                                        40353500
    ZSF[0]~@3600036000101;                                           %MC40354100
    FOR I~1 STEP 1 UNTIL 29 DO ZSF[I]~0;                             %MC40354200
    ZSF[7]~ZSF[8]~6;                                                 %MC40354300
    ZSF[3]~-0;                                                       %MC40354400
    ZSF[4]~@2006740000000000;                                        %MC40354500
ZSF[9]~1;                                                            %MC40354600
    Y~ZSF[10]~GETUSERDISK(6);                                        %MC40354700
              STREAM(DDD);                                              40355000
              BEGIN DS~8 LIT"00000000"; SI~DDD;                         40355100
                   3(DS~ 60 WDS);                                       40355300
              END;                                                      40355400
              DDD[0]~DDD[1]~DDD[7]~2;                                   40355500
              DDD[2]~3;                                                 40355600
              DDD[3]~22;                                                40355700
              DDD[4]~4;                                                 40355800
              DDD[5]~6;                                                 40355900
              DDD[17]~DDD[16]~@377777777777;                            40355910
              DDD[6]~-1;                                                40355920
              DDD[18]~(MIXMAX+1) DIV 2;    %    PRIORITY                40355925
              DDD[20]~64;         %       CORE ESTIMATE                 40355930
              DDD[21]~150;     %   STACK SIZE                           40355940
              DDD[30]~@12602141011;                                     40356100
              DDD[31]~@24101100000000;                                  40356200
              DDD[61]~@220000200001;                                    40356300
              DDD[108]~FLAG(@2740010000100000);                         40356400
    ENTERUSERFILE("LIBMAIN","DISK   ",ZSF INX 0-1);                  %MC40356500
              FORGETSPACE(ZSF); FORGETSPACE(SOCK);                      40356550
            DISKWAIT(DDD INX 0,180,Y);                                  40356600
         END;                                                           40400000
PROCEDURE REALFILECLOSE(ALPHA); VALUE ALPHA; INTEGER ALPHA;%            41000000
BEGIN ARRAY FIB[*],FPB[*],HEADER[*];%                                   41001000
%%%      DONT ADD ANY DECLARATIONS BETWEEN "HEADER" AND "KIND" %%% WCP  41001500
         INTEGER KIND,NBUFS,U,BLEN,CODE,UNLABELED,COBOL,I,J,FNUM;       41002000
         REAL MID,FID,R,D,C,FORMS,STATE;                                41003000
      REAL RCW=+0,XTRA=-3;                                              41003100
      LABEL PX,PBD;                                                  %P 41004000
    LABEL DC19;    REAL STA;                                            41004100
      LABEL CR,LP,MT,CLOSED,DK,SP,CP,BKUP,PP,PR,DC,CD,CC;               41005000
    SWITCH SW~ CR,LP,MT,CLOSED,DK,SP,CP,BKUP,PP,PR,DC,CD,BKUP,DC19;     41006000
      LABEL EOF,ON,DNE,CLEANUP;%                                        41007000
      LABEL EOD;                                                        41007100
      REAL T1,T2,T3,IOD; ARRAY SEG0[*],SKEL[*]; LABEL L1,L2,L3;         41007200
 $ VOID 41017                                                           41008000
      REAL T,ACCESS;%                                                   41017000
      NAME SAIOD=T;                                                     41017100
      BOOLEAN COMPGO;                                                   41017200
      REAL TYPE;                                                        41017300
      DEFINE REW=CODE.[47:1]#,%                                         41018000
             KRUNCH=NOT CODE.[42:1]#,                                   41018100
             REL=CODE.[46:1]#,%                                         41019000
             TIME=CODE.[45:1]#,%                                        41020000
             LOCK=NOT CODE.[44:1]#,%                                    41021000
             PURGE=NOT CODE.[43:1]#;%                                   41022000
%                                                                       41023000
 $ VOID 41035                                                           41024000
      LABEL CLOSEOUT;%                                                  41035000
      LABEL EOFIT;%                                                     41036000
%                                                                       41037000
      CODE~(NOT *P(.ALPHA)).[18:15];%                                   41038000
      ALPHA~P(.ALPHA,LOD).[33:15];%                                     41039000
      FIB~M[ALPHA-3]; FPB~PRT[P1MIX,3];%                                41040000
      IF (STATE~FIB[5]).[42:1] THEN GO TO CLOSED;%                      41041000
      NBUFS~FIB[13].[1:9]; FNUM~FIB[4].[13:11];%                        41042000
      U~FIB[15].[24:6];                                                 41043000
      UNLABELED~FIB[4].[2:1];%                                          41044000
      BLEN~FIB[18].[3:15];%                                             41045000
      STREAM(S~[FPB[FNUM]],D~[MID]);%                                   41046000
            BEGIN SI~S; DS~2 WDS; DS~3 OCT; DS~5 OCT; DS~ OCT END;%     41047000
      IF D<0 THEN D~D.[18:30];%                                         41047500
      FORMS~FPB[FNUM+3].[42:1];%                                        41048000
      I~FIB[13].[28:10];%                                               41049000
      IF (R=0 AND I!1) OR R!0 THEN R~I;%                                41050000
      COBOL~(FIB[13] AND 1)&([FIB].[8:10]=22)[1:47:1];  % COBOL 60 & 68 41051000
      IF COBOL>0 OR FIB[4].[7:1] THEN  % COBOL 60 OR SORT               41051100
      M[FIB INX NOT 1].[3:6]~2                                          41051200
      ELSE M[ALPHA-7].[3:6]~2;                                          41051300
      IF (I~J~FIB[10].[3:15])!0 THEN   %THERE-S A BUFFER RING TO MARK   41051400
      DO M[I-2].[3:6]~2 UNTIL (I~M[I].[FF]-2)=J;                        41051500
      COMMENT MARK IT ALL DATA TO PROTECT IT FROM NSEC DS;              41051600
      GO TO SW[KIND~FIB[4].[8:4]];%                                     41052000
%                                                                       41053000
CR:CC:CP:LP:SP:MT:PP:PR:CD:                                             41054000
      OTHERCLOSE(0);                                                    41055000
 $ VOID 41142                                                           41056000
      GO TO CLEANUP;%                                                   41142000
%                                                                       41143000
BKUP: TYPE:=FPB[FNUM+3].[43:5]; BACKCLOSE(0);                           41144000
 $ VOID 41186                                                           41144100
%                                                                       41186000
CLOSEOUT::  STATE.[39:4]~1; TIME~1;%                                    41187000
CLEANUP::%                                                              41188000
      IF NOT STATE.[41:1] THEN%                                         41189000
      IF KIND{2 OR KIND=11 OR KIND}6 AND KIND{9 THEN                    41190000
      IF CLOSEMESS THEN%                                                41191000
      IF (T~JAR[P1MIX,0])>0 OR T<0 AND COPNMESS THEN%                   41192000
      FILEMESS(" REL"&TINU[U][6:30:18],0,MID,FID,R,D,C);%               41193000
      IF (FIB[5]~STATE).[42:1] THEN FIB[4].[8:4]~3;%                    41194000
      IF (T~FIB[10].[3:15])!0 THEN   %THERE-S A BUFFER RING TO FORGET   41195000
      BEGIN   %FORGETTING IT                                            41196000
            FOR I~0 STEP 1 UNTIL NBUFS-1 DO%                            41197000
            BEGIN J~M[T].[18:15]-2;%                                    41198000
                  FORGETSPACE(T);%                                      41199000
                  T~J;%                                                 41200000
                  M[ALPHA+I]~P(DUP,LOD)&0[2:2:1]&1[25:47:1]%            41201000
                              &(ALPHA+1)[33:33:15];%                    41202000
            END;%                                                       41203000
            FIB[10].[3:15]~0                                            41204000
      END;%                                                             41205000
      IF NOT UNLABELED THEN%                                            41206000
      IF KIND!0 THEN%                                                   41207000
      IF (T~M[ALPHA-2].[33:15])!0 THEN%                                 41208000
            FORGETSPACE(T-2);%                                          41209000
      M[ALPHA-2]~P(DUP,LOD)&P(0,XCH)[8:8:10];%                          41210000
      FIB[6]~FIB[7]~0;%                                                 41211000
      IF TIME THEN STOPTIMING(FNUM,1023);                               41212000
    IF COBOL>0 OR FIB[4].[7:1] THEN        % COBOL 60 OR SORT           41212100
         M[FIB INX NOT 1].[3:6]:=6 ELSE M[ALPHA-7].[3:6]:=4;            41212200
      GO TO CLOSED;%                                                    41213000
%                                                                       41214000
DK::  DISKCLOSE(0);                                                     41215000
 $ VOID 41269                                                           41216000
      GO CLEANUP;%                                                      41269000
%                                                                       41270000
%                                                                       41280000
 DC::                                                                   41281000
$INCLUDE 41306001, IF DATACOM AND NOT INQUIRY;                          41281999
    IF FIB[13].[27:1] THEN   % INPUT                                    41282000
         BEGIN                                                          41283000
         IF FIB[14]!0 THEN                                              41284000
              BEGIN                                                     41285000
              SAIOD ~ ALPHA INX M;                                      41285500
              SEEKACTION(0,P1MIX,1,SAIOD);                              41286000
                                                                        41287000
              FOR I ~ (NBUFS-1) STEP -1 UNTIL 0 DO                      41288000
                                                                        41289000
                   IF M[ALPHA+I].[19:2]=0 THEN                          41290000
                        BEGIN                                           41291000
                        SLEEP([M[ALPHA+I]], IOMASK); I~-1;              41292000
                                                                        41292100
                        END;                                            41293000
              END;                                                      41293500
         FIB[3] ~ FIB[14] ~ 0;                                          41293600
         GO TO CLOSEOUT;                                                41294000
         END;                                                           41294500
      FOR I~0 STEP 1 UNTIL NBUFS-1 DO                                   41295000
    BEGIN T~M[ALPHA+I].[CF];         DO UNTIL M[T~T-1].[CF]=ALPHA;      41296000
         IF M[T-1]!0 THEN                                               41297000
         BEGIN M[T-2].[9:6]~0; M[T-1]~NABS(*P(DUP));                    41298000
              M[T].[CF]~T+2;                                            41299000
              M[T+2]~M[ALPHA+I];                                        41300000
         END ELSE FORGETSPACE(T);                                       41301000
            M[ALPHA+I]~(*P(DUP))&0[2:2:1]&1[25:47:1]&(ALPHA+1)[CTC];    41302000
      END;                                                              41303000
      FIB[10].[3:15]~   %CLEAR HEAD OF BUFFER RING,TOO                  41303500
      FIB[6]~FIB[7]~FIB[16]~0; STATE.[39:4]~1;                          41304000
      FIB[5]~STATE; FIB[4].[8:4]~3;                                     41305000
      STOPTIMING(FNUM,1023);                                            41306000
$INCLUDE 41307001, IF INQUIRY AND NOT DATACOM;                          41306999
      COOLOFF; GO CLOSEOUT;                                             41307000
DC19::                                                                  41307010
$INCLUDE 41307290, IF DATACOM;                                          41307020
         STA~ J~ M[ALPHA-2];                                            41307030
         IF NOT STA THEN GO CLOSEOUT;  %WE REALLY NEVER GOT IT OPEN     41307040
         T~ P(DC19Q, J, LLL, 0, INX, .I, STD);                          41307050
         IF T.[9:9]!STA.[9:9] THEN HANG;                                41307060
         FIB[13].[1:9]~ R~ FIB[14];                                     41307080
         M[I+3]~ P(DUP,LOD)-R;                                          41307085
         IF (R~ M[I+4]~ P(DUP,LOD)-R) { 0 THEN                          41307090
              BEGIN     %MUST REMOVE ENTRY FROM THE QUEUE               41307100
              STATION[STA.[14:4],STA.[9:4]].[37:6]~ 0;                  41307105
              IF NOT NINETEENNOTREADING THEN                            41307110
                   SLEEP([TOGLE],NINETEENMASK);                         41307120
              R~ I+1;   D~ M[R] INX 0;                                  41307130
              WHILE (C~D)!R DO                                          41307140
                   BEGIN                                                41307150
                   D~ M[D] INX 0;                                       41307160
                   FORGETSPACE(C+1);                                    41307170
                   END;                                                 41307180
              IF P(STATIONMESSAGEHOLDER,J,LLL,0,INX,.D,STD).[9:9]       41307190
                        =(J~ J.[9:9]) THEN                              41307200
                   WHILE (R~ M[D]).[9:9]=J DO                           41307210
                        BEGIN                                           41307220
                        IF R.[2:1] THEN BEGIN                           41307225
                             M[D]~ R&0[2:47:1]; NUMESS~ NUMESS+1 END;   41307230
                        D~ R INX 0;                                     41307235
                        END;                                            41307240
              M[T].[FF]~T.[FF];                                         41307250
              M[T.[FF]].[CF]~ T;                                        41307260
              FORGETSPACE(I);                                           41307270
              END;                                                      41307280
         IF PURGE THEN                                                  41307284
              TACH(STA,P1MIX,0);                                        41307286
         GO CLOSEOUT;                                                   41307290
 CLOSED::                                                               41308000
      RCW:=XTRA;                                                        41309000
END FILE CLOSE;                                                         41310000
$INCLUDE 41410301, IF STATISTICS;                                       41399999
PROCEDURE PSUEDOLOGENTRY(STATS);                                        41400000
     VALUE STATS; REAL STATS;                                           41400100
     BEGIN                                                              41400200
          REAL X;                                                       41400300
          IF STATLOCK THEN COMPLEXSLEEP(NOT STATLOCK);                  41400350
          IF NOT STATPOINTER THEN                                       41400500
          BEGIN                                                         41400600
               MOVE(15,STATS.[CF],LOGARRAY.[CF]);                       41400700
               STATPOINTER:=TRUE;                                       41400800
          END ELSE                                                      41400900
          BEGIN                                                         41401000
               DISKWAIT(-(X:=SPACE(30)),30,STLOGDH);                    41401010
               MOVE(15,STATS.[CF],LOGARRAY INX 15);                     41401100
               DISKWAIT(LOGARRAY.[CF],31,(M[X INX 10]+M[X INX 7]));     41401200
               M[X INX 7]:=*P(DUP)+1;                                   41401300
               STATPOINTER:=FALSE;                                      41401400
               DISKWAIT(X,30,STLOGDH);                                  41401500
               IF M[X INX 7] = 399 THEN                                 41401510
               INDEPENDENTRUNNER(P(.SAVESTATISTICS),"STLOG  "           41401520
$INCLUDE 41401531, IF SHAREDISK;                                        41401529
               &(SYSNO+17)[36:42:6]                                     41401530
                                );                                      41401540
               FORGETSPACE(X);                                          41401600
          END;                                                          41401610
          FORGETSPACE(STATS);                                           41401650
     END FILLING PSUEDO LOG;                                            41401700
PROCEDURE FILLSYSTAT;                                                   41401800
BEGIN                                                                   41401900
     REAL RCW=+0,X1=+1,X2=+2,X3=+3,X4=+4;                               41402000
     P(GETSPACE(128,12,1)+1,STS,RCW,0,RDS,0,XCH,CFX,STF);               41402100
     STACKUSE:=TRUE;                                                    41402150
     P(0,0,0,0,0);                                                      41402200
     X2:=DIRECTORYSEARCH("SYSTEM "                                      41402500
$INCLUDE 41402511, IF SHAREDISK;                                        41402509
         &(SYSNO+17)[42:42:6]                                           41402510
         ,"STATS  ",4);                                                 41402520
     IF COUNTARRAY[28] NEQ DATE THEN                                    41402900
     BEGIN                                                              41403000
          DISKWAIT(-(X1:=SPACE(30)),-30,0);                             41403100
          COUNTARRAY[28]:=DATE;                                         41403400
          M[X1+5+SYSNO]:=0;                                             41403500
          DISKWAIT(X1,-30,0);                                           41403550
          FORGETSPACE(X1);                                              41403560
     END ELSE                                                           41403600
     BEGIN                                                              41403700
          DISKWAIT(-COUNTARRAY.[CF],60,SYSTATBASE);                     41403800
          COUNTARRAY[29]:=XCLOCK;                                       41403900
          X4:=(M[X2 INX 10]+(M[X2 INX 7]|2));                           41404100
          DISKWAIT(COUNTARRAY.[CF],61,X4);                              41404200
          M[X2 INX 7]:=*P(DUP)+1;                                       41404300
          COUNTARRAY[29]:=XCLOCK+INTERVAL;                              41404350
     END;                                                               41404400
     DISKWAIT(X2.[CF],30,X2.[FF]);                                      41404450
     FORGETSPACE(DIRECTORYSEARCH("SYSTEM "                              41404510
$INCLUDE 41404521, IF SHAREDISK;                                        41404519
                 &(SYSNO+17)[42:42:6]                                   41404520
                 ,"STATS  ",14));                                       41404530
     IF M[X2 + 7]=99 THEN INDEPENDENTRUNNER(P(.SAVESTATISTICS),"SYSTEM" 41404540
$INCLUDE 41404551, IF SHAREDISK;                                        41404549
                            &(SYSNO+17)[42:42:6]                        41404550
                            );                                          41404560
     FOR X3:=0 STEP 1 UNTIL 27 DO COUNTARRAY[X3]:=0;                    41404600
     FOR X3:=30 STEP 1 UNTIL 59 DO COUNTARRAY[X3]:=0;                   41404700
     COUNTARRAY[47]:=XCLOCK;                                            41404750
     FORGETSPACE(X2);                                                   41404800
     KILL([RCW]);                                                       41405200
END OF FILLSYSTAT;                                                      41405300
PROCEDURE SAVESTATISTICS(FILE);                                         41405400
VALUE FILE; REAL FILE;                                                  41405450
BEGIN                                                                   41405500
     REAL RCW=+0,X=+1,X1=+2,X2=+3,X3=+4;                                41405600
     REAL NAMEIT=+5, SYSTATOG=+6;                                       41405700
     LABEL XOUT;                                                        41405800
     P(GETSPACE(128,12,1)+1,STS,FILE,RCW,0,RDS,0,XCH,CFX,STF);          41405810
     STACKUSE:=TRUE;                                                    41405820
     P(0,0,0,0,0,0);                                                    41405830
     STATLOCK:=TRUE;                                                    41405900
     IF FILE.[6:36]="SYSTEM" THEN SYSTATOG:=1;                          41405950
     X:=DIRECTORYSEARCH(FILE,"STATS  ",4);                              41406000
     DISKWAIT(-(X2:=SPACE(30)),-30,0);                                  41406100
     X1:= IF SYSTATOG THEN M[X2+5+SYSNO].[CF] ELSE M[X2+5+SYSNO].[FF];  41406150
     STREAM(A:=[NAMEIT],B:=[DATE],C:=X1);                               41406200
     BEGIN                                                              41406300
          SI:=LOC C; DI:=A; DI:=DI+1; DS:=2 DEC;                        41406400
          DS:=2LIT"ON"; SI:=B; SI:=SI+5; DS:=3 CHR;                     41406500
     END;                                                               41406600
     MOVE(30,X.[CF],X3:=SPACE(30));                                     41406700
     IF (M[X3+10]:=GETUSERDISK((IF SYSTATOG THEN -200 ELSE -400) OR M)) 41406800
     = 0 THEN BEGIN                                                     41406900
          STREAM(A:=[NAMEIT],B:=[FILE],C:=X1:=SPACE(5));                41407000
          BEGIN                                                         41407100
               SI:=A; DS:=17LIT"NO USER DISK FOR ";                     41407200
               SI:=SI+1; DS:=7 CHR; DS:=LIT"/"; SI:=B;                  41407300
               SI:=SI+1; DS:=7 CHR; DS:=LIT"~";                         41407350
            END;                                                        41407400
            SPOUT(X1);                                                  41407500
           GO TO XOUT;                                                  41407600
     END;                                                               41407700
     STREAM(A:=[DATE],B:=X INX 3,C:=0);                                 41407900
      BEGIN                                                             41408000
           SI:=A; DI:=LOC C; DS:=8 OCT;SI:=LOC C;SI:=SI+5;              41408100
           DI:=B; DI:=DI+5; DS:=3 CHR;                                  41408200
      END;                                                              41408300
     IF SYSTATOG THEN                                                   41408600
     BEGIN                                                              41408610
          M[X2+5+SYSNO]:=*P(DUP)+1;                                     41408620
          COUNTARRAY[29]:=XCLOCK;                                       41408635
          DISKWAIT(COUNTARRAY.[CF],61,(M[X INX 10]+(M[X INX 7]|2)));    41408640
          FOR X1:=0 STEP 1 UNTIL 59 DO COUNTARRAY[X1]:=0;               41408650
          COUNTARRAY[28]:=DATE; COUNTARRAY[29]:=XCLOCK+INTERVAL;        41408660
          COUNTARRAY[47]:=XCLOCK;                                       41408665
          M[X3 INX 7]:=1;                                               41408670
          SYSTATBASE:=M[X3+10];                                         41408680
          M[X INX 10]:=*P(DUP)+2;                                       41408685
          M[X INX 8]:=*P(DUP)-2;                                        41408690
     END ELSE                                                           41408700
     BEGIN                                                              41408710
          M[X2+5+SYSNO]:=*P(DUP)+32768;                                 41408720
          M[X INX 7]:=M[X3+7];                                          41408730
          M[X3+7]:=0;                                                   41408740
     END;                                                               41408760
     DISKWAIT(X2,-30,0);                                                41408800
     DISKWAIT(X3,30,X.[FF]);                                            41408810
    ENTERUSERFILE(-NAMEIT,FILE,(X INX 0)-1);                            41408900
     STREAM(A:=[NAMEIT],B:=[FILE],C:=X1:=SPACE(6));                     41409100
     BEGIN                                                              41409200
          DS:=21LIT"NEW STATISTICS FILE: ";                             41409300
          SI:=A; SI:=SI+1; DS:=7 CHR; DS:=1LIT"/";                      41409400
          SI:=B; SI:=SI+1; DS:=7 CHR; DS:=9LIT" CREATED~";              41409450
     END;                                                               41409500
     SPOUT(X1);                                                         41409600
     FORGETSPACE(DIRECTORYSEARCH(NAMEIT,FILE,14));                      41409610
XOUT:                                                                   41409620
     FORGETSPACE(X);                                                    41409650
     FORGETSPACE(X2);                                                   41409700
     FORGETSPACE(X3);                                                   41409800
     FORGETSPACE(DIRECTORYSEARCH(FILE,"STATS  ",14));                   41410000
     STATLOCK:=FALSE;                                                   41410100
     KILL([FILE]);                                                      41410200
     END;                                                               41410300
COMMENT ARTN RETURNS ALL STORAGE FOR AN N-DIMENSIONAL ARRAY A;%         42473000
PROCEDURE ARTN(A,N); VALUE A,N; ARRAY A[*]; INTEGER N;%                 42474000
              BEGIN INTEGER I;%                                         42475000
                    IF NOT STOREDY THEN SLEEP([TOGLE],STOREMASK);       42476000
                    IF A.[18:15]!0 THEN A~M[A.[18:15]];                 42476100
                    IF N>1 THEN DO ARTN(A[I],N-1) UNTIL (I~I+1)}A.SIZE; 42477000
                              N~A INX 0;                                42478000
                    IF A.PBIT THEN                                      42478200
                              BEGIN I~M[N-1].[FF];                      42478400
                                   FORGETSPACE(N)                       42478600
                              END ELSE I~N;                             42478800
                    IF I>511 THEN DISKRTN(I, A.SIZE);                   42479000
              END ARTN;%                                                42480000
COMMENT ASR IS THE ALGOL STORAGE RETURN COMMUNICATE;%                   42481000
PROCEDURE ASR; BEGIN INTEGER I,BCNTR; ARRAY AIT[*]; REAL TEMP;%         42482000
                  LABEL L;%                                             42483000
                    REAL MOTHER; ARRAY DESC[*];%                        42484000
                    WHILE (AIT~PRT[P1MIX,AITNDX]).PBIT=0 DO%            42485000
                          MAKEPRESENT([PRT[P1MIX,AITNDX]] INX 0);%      42486000
                   MEMORY[AIT INX NOT 1].[2:1]~1;%                      42487000
                   I:=AIT[0]+1;                                         42488000
                   IF (BCNTR:=PRT[P1MIX,CURBLKCNTR]) LEQ 0 THEN         42488100
                   BEGIN TERMINATE(P1MIX);                              42488200
                        TERMINALMESSAGE(78);                            42488300
                   END;                                                 42488400
              WHILE (TEMP~AIT[I~I-1]).BLKCNTR}BCNTR%                    42489000
                 DO BEGIN DESC~MEMORY[MOTHER~TEMP.MOM];%                42490000
                   IF TEMP.[1:2]!1 THEN % CHECK FOR FAULT ENTRY         42490100
                          IF TEMP.FILEBIT THEN%                         42491000
                          IF TEMP.[33:15]=2 THEN BEGIN%                 42492000
                          FILECLOSE((MOTHER+3)&((DESC[4].[25:2]=2)|@12) 42493000
                                                 [18:33:15]);           42494000
                                                                        42495000
                          GO TO L                END ELSE%              42496000
                          BEGIN FILECLOSE((DESC INX 5)&                 42497000
                                  ((M[DESC[2] INX 4].[25:2]=2)|@12)     42498000
                                                        [18:33:15]);    42499000
                                FORGETSPACE(DESC INX 0);%               42500000
                          END ELSE ARTN(DESC,TEMP.DIMENSIONS);%         42501000
                          MEMORY[MOTHER]~0;%                            42502000
              L:                                                        42503000
                    END;%                                               42504000
                    AIT[0]~I;%                                          42505000
                    PRT[P1MIX,CURBLKCNTR]~BCNTR-1;%                     42506000
                    IF I>0 THEN DO%%WIPE OUT BAD LABELS IN FAULT CELLS  42506100
                        IF AIT[I].[1:2]=1 THEN                          42506200
                        IF M[AIT[I].MOM].BLKCNTR}BCNTR THEN             42506300
                        M[AIT[I].MOM]~0 UNTIL (I~I-1){0;                42506400
                   MEMORY[AIT INX NOT 1].[2:1]~0;%                      42507000
              END ASR;%                                                 42508000
SAVE REAL PROCEDURE COREND; FORWARD;                                    42509000
PROCEDURE INTERRUPT(TYPE); VALUE TYPE; REAL TYPE;                       42510000
BEGIN LABEL FLAGBIT,INVALIDINDEX,EXPUNDERFLOW,DIVIDEBYZERO;             42511000
      SWITCH SW~FLAGBIT,INVALIDINDEX,EXPUNDERFLOW,DIVIDEBYZERO;         42512000
      ARRAY T0P=-5[*];                                                  42513000
      REAL MOM,SIZE,ALOC,I;                                             42514000
      REAL RCW=+1,RCWL=+2,SAVIT=+4; NAME A=+3;                          42515000
      REAL R=+1,S=+2,Y=+3;                                              42516000
%                                                                       42517000
      CHECKSTACKSPACE;%                                             %WF 42517100
      GO TO SW[TYPE];                                                   42518000
%                                                                       42519000
FLAGBIT:                                                                42520000
      SAVIT~T0P;                                                        42521000
      NT1~ANALYSIS;                                                     42522000
      IF SYLLABLE.[41:7]!@35 THEN                                       42523000
      IF SYLLABLE.[45:3]!0 THEN                                         42524000
      BEGIN ERRORFIXER(16); TERMINATE(P1MIX); TERMINALMESSAGE(5) END;   42524100
      A~PRT[P1MIX,4];                                                   42524200
      RCW ~ M[RCWL ~ PRT[P1MIX,8] INX NOT ((SYLLABLE=@235)+2)];%        42525000
      IF RCW.[33:1] THEN % TYPE 13 INTRNSC                              42525100
      BEGIN                                                             42525110
      Y~[I].[CF];                                                       42525120
      I  ~FLAG((@2520000000000000)&(RCW.[34:14])[CTC]);                 42525130
      MAKEPRESENT(Y.[CF]);                                              42525140
      M[RCWL]~FLAG(RCW&(M[RCW.[FF]]INX (NFLAG( I )).[CF])[CTC]);        42525150
      GO TO INITIATE;                                                   42525160
      END ELSE                                                          42525170
      IF NOT PRT[P1MIX,A[RCW].[8:10]].[2:1] THEN%                       42525500
      MAKEPRESENT(PRTROW[P1MIX] INX A[RCW].[8:10]);%                    42526000
      M[RCWL]~FLAG(RCW&(M[RCW.[18:15]] INX A[RCW].[18:15])[33:33:15]);  42527000
      GO TO INITIATE;                                                   42528000
%                                                                       42529000
INVALIDINDEX:                                                           42530000
      FOR I~6 STEP 5 UNTIL 11 DO                                        42531000
      IF T0P.[18:15]=(MOM~[PRT[P1MIX,I]].[33:15]) THEN                  42532000
      IF (SIZE~M[MOM].[8:10])<1023 THEN                                 42533000
      BEGIN IF M[MOM].[2:1]=0 THEN MAKEPRESENT(MOM);                    42534000
            M[(ALOC~M[MOM].[33:15])-2].[2:1]~1;                         42535000
            IF (NT1:=M[ALOC-1].[FF])!0 THEN DISKRTN(NT1, SIZE);         42535500
            M[MOM]~FLAG(0&MOM[18:33:15]                                 42536000
                   &(IF SIZE<512 THEN 2|SIZE ELSE 1023)[8:38:10]);      42537000
            MAKEPRESENT(ANALYSIS);                                      42538000
            MOVE(SIZE,ALOC,M[MOM]);                                     42539000
            FORGETSPACE(ALOC);                                          42539050
            GO TO INITIATE;                                             42539100
      END;                                                              42539200
      ERRORFIXER(4); TERMINATE(P1MIX); TERMINALMESSAGE(7);              42540000
%                                                                       42541000
EXPUNDERFLOW:                                                           42542000
      R~M[S~PRT[P1MIX,8].[33:15]];                                      42543000
      STREAM(R~R.[33:15]&R[30:10:2],Y~[Y]);                             42544000
            BEGIN SI~R; SI~SI-2; DI~DI+6; DS~2 CHR END;                 42545000
      IF Y.[45:3]=5 THEN M[S-3]~0;                                      42546000
      M[S-2]~0;                                                         42547000
              IF JAR[P1MIX,2].[3:1] AND PRT[P1MIX,@51].[43:1] THEN      42547100
         PRT[P1MIX,@51]~P(DUP,LOD) OR 6;                                42547200
      GO TO INITIATE;                                                   42548000
%                                                                       42549000
DIVIDEBYZERO:                                                           42550000
              IF (P(JAR[P1MIX,2],DUP)}0 AND NOT(P(XCH).[3:1] AND        42550500
                 PRT[P1MIX,@51].[44:1])) THEN                           42550600
         BEGIN ERRORFIXER(8); TERMINATE(P1MIX); TERMINALMESSAGE(13) END 42551000
         ELSE IF JAR[P1MIX,2] < 0 THEN IF PRT[P1MIX,11].[FF] = 0 THEN   42551090
              PRT[P1MIX,11]~1 ELSE PRT[P1MIX,PRT[P1MIX,11].[FF]]~1      42551100
         ELSE                                                           42551110
         BEGIN PRT[P1MIX,@51]~P(DUP,LOD) OR 1;                          42551200
               M[PRT[P1MIX,8].[CF]-2]:=0;                               42551300
         END;                                                           42551500
      GO TO INITIATE;                                                   42552000
%                                                                       42553000
END INTERRUPT;                                                          42554000
$INCLUDE 43032001, IF DCLOG AND DATACOM AND NOT INQUIRY;                42599999
PROCEDURE CLEANUPABORT(A,DDD); VALUE A,DDD; ARRAY DDD[*]; REAL A;       42600000
    BEGIN                                                               42600500
    LABEL XET,FORGETALLSPACE,OWT,RTRN;                                  42601000
    BOOLEAN MACHINGNTRY;                                                42602000
    INTEGER TEMP1,TEMP2,TEMP3,SEGNUM,WRDNUM,I,J,K,TEMP,MSG,WDS3;        42603000
    REAL IOD;                                                           42604000
    NAME RHDR,RLOG,ABRTLG;                                              42605000
SUBROUTINE DELETERECORD;                                                42606000
    BEGIN                                                               42607000
    COMMENT IF LAST RECORD WRITTEN IN THE REMOTE LOG MATCHES ANY        42608000
      IN THE ABORT LOG,DELETE RECORD FROM THE ABORT LOG;                42609000
    FOR I ~ 10 STEP 10 WHILE I < WDS3 DO                                42610000
      IF RLOG[WRDNUM].[9:33]=ABRTLG[I+9].[24:24]&ABRTLG[I][15:15:9] AND 42611000
                                                                        42612000
        RLOG[WRDNUM+1] = ABRTLG[I+1] AND%= ANY IN    ABORT LOG          42613000
        RLOG[WRDNUM+2] = ABRTLG[I+2] AND                                42614000
        RLOG[WRDNUM+3] = ABRTLG[I+3] AND                                42615000
         RLOG[WRDNUM+7].[3:21] = ABRTLG[I+9].[3:21] AND%DATE OF ATACH = 42616000
        RLOG[WRDNUM+8] = ABRTLG[I+8] AND                                42617000
        RLOG[WRDNUM].[2:1] = ABRTLG[I].[2:1] THEN                       42618000
         BEGIN                                                          42619000
         FOR J ~ I STEP 10 WHILE J < (WDS3-10) DO                       42620000
           FOR K~ 0 STEP 1 UNTIL 9 DO                                   42621000
           ABRTLG[J+K] ~ ABRTLG[J+K+10];                                42622000
           MACHINGNTRY ~ TRUE;                                          42623000
           WDS3 ~ WDS3-10; GO RTRN;                                     42624000
         END;                                                           42625000
RTRN:                                                                   42626000
    END DELETERECORD;                                                   42627000
SUBROUTINE INITIALIZEABORT;                                             42628000
    BEGIN                                                               42629000
    DDD[0] ~ 2; DDD[2] ~ DDD[3] ~ 0;                                    42630000
    DDD[5] ~ DATE; DDD[6]~XCLOCK+P(RTR);                                42631000
    DISKIO(IOD,A-1,30,ABORTFILE); SLEEP([IOD],IOMASK);                  42632000
    END INITIALIZEABORT;                                                42633000
SUBROUTINE RITEREMOTEHDR;                                               42634000
    BEGIN                                                               42635000
    RHDR[2] ~ 0;                                                        42636000
    DISKIO(IOD,TEMP1-1,30,REMOTEFILE);                                  42637000
    SLEEP([IOD],IOMASK);                                                42638000
    END RITEREMOTEHDR;                                                  42639000
SUBROUTINE UPDATEREMOTEHDR;                                             42640000
    BEGIN                                                               42641000
    RHDR[0] ~ RHDR[0] + WDS3 DIV 5 -2;                                  42642000
    RHDR[2] ~ 0;                                                        42643000
    DISKIO(IOD,TEMP1-1,30,REMOTEFILE);                                  42644000
         SLEEP([IOD],IOMASK);                                           42645000
    END UPDATEREMOTEHDR;                                                42646000
SUBROUTINE UPDATEREMOTELOG;                                             42647000
    BEGIN                                                               42648000
    IF (WDS3 DIV 5 - 2 + RHDR[0])} RHDR[1] THEN                         42649000
         BEGIN                                                          42650000
         ;STREAM(MSG~MSG~GETSPACE(3,0,0) + 2);                          42651000
              BEGIN DS~17 LIT "#REMOTE LOG FULL~" END;                  42652000
         SPOUT(0&MSG[33:33:15]);                                        42653000
         RHDR[0]~0;                                                     42653500
         RITEREMOTEHDR;                                                 42654000
         GO OWT;                                                        42655000
         END                                                            42656000
    ELSE IF RHDR[0] { RHDR[1] DIV 2                                     42657000
      AND RHDR[1] DIV 2 { RHDR[0] +WDS3 DIV 5 - 2 THEN                  42658000
         BEGIN                                                          42659000
         ;STREAM(MSG~MSG~GETSPACE(3,0,0)+2);                            42660000
              BEGIN DS ~ 17 LIT "#DUMP REMOTE LOG~" END;                42661000
         SPOUT(0&MSG[33:33:15]);                                        42662000
         END;                                                           42663000
    STREAM(BCD~[ABRTLG[5]],BIN~[ABRTLG[7]]);                            42664000
         BEGIN SI~BCD; SI~SI+3; DS~5 OCT; END;                          42665000
    COMMENT STRUCTURE OF ABORT ENTRY.                                   42666000
         WORD 0-[9:9] TU&BU,[2:1] WHOATACHED,[42:6] ABORTNTRY=6         42667000
           [18:24] = RUN NUMBER                                         42668000
         WORD 1-USER ID                                                 42669000
         WORD 2-OBJECT PROGRAM 1ST NAME                                 42670000
         WORD 3-OBJECT PROGRAM 2ND NAME                                 42671000
         WORD 4-PROCESSOR TIME                                          42672000
         WORD 5- IDLE TIME                                              42673000
         WORD 6-I/O TIME                                                42674000
         WORD 7-[3:21] STARTDATE,[27:21] STOPDATE                       42675000
         WORD 8-TIME WHEN JOB ATTACHED TO MIX                           42676000
         WORD 9-TIME AT ABORT(I.E. DETACH);                             42677000
    FOR I ~ 10 STEP 10 WHILE I < WDS3 DO                                42678000
         BEGIN                                                          42679000
         ABRTLG[I]~0&ABRTLG[I][2:2:1]&ABRTLG[I][9:15:9]&ABRTLG[I+9]     42680000
           [18:24:24]&6[42:42:6];                                       42681000
         ABRTLG[I+7] ~ ABRTLG[7]&ABRTLG[I+9][3: 3:21];                  42682000
                                                                        42683000
         ABRTLG[I+9] ~ ABRTLG[6]                                        42684000
         END;                                                           42685000
    FOR I ~ 10 STEP 5 WHILE I< WDS3 DO                                  42686000
         BEGIN                                                          42687000
         FOR J ~ 0 STEP 1 UNTIL 4 DO                                    42688000
           RLOG[WRDNUM+J] ~ ABRTLG[I+J]; WRDNUM ~ WRDNUM+5;             42689000
         END;                                                           42690000
    DISKIO(IOD,TEMP2-1,TEMP+WDS3,SEGLOC+SEGNUM);                        42692000
    SLEEP([IOD],IOMASK);                                                42693000
OWT:                                                                    42694000
    END UPDATEREMOTELOG;                                                42695000
SUBROUTINE TIMEABORT;                                                   42695010
    BEGIN                                                               42695020
    FOR I~1 STEP 1 UNTIL MIXMAX DO                                      42695030
      IF ASIGNEDPROCTIME[I]!@2003777777777777 THEN                      42695040
         BEGIN                                                          42695050
         FOR J~10 STEP 10 WHILE J <WDS3 DO                              42695060
           IF ABRTLG[J].[9:6] = I THEN                                  42695070
              BEGIN                                                     42695080
              ASIGNEDPROCTIME[I]~ASIGNEDPROCTIME[I]-ABRTLG[J+4];        42695090
              ASIGNEDIDLETIME[I]~ASIGNEDIDLETIME[I]-ABRTLG[J+5];        42695100
              ASIGNEDIOTIME[I]~ASIGNEDIOTIME[I]-ABRTLG[J+6];            42695110
              FOR K~J+10 STEP 10 WHILE K<WDS3 DO                        42695120
                IF ABRTLG[K].[9:6]=I THEN                               42695130
                   BEGIN                                                42695140
                   ASIGNEDPROCTIME[I]~ASIGNEDPROCTIME[I]-ABRTLG[K+4];   42695150
                   ASIGNEDIDLETIME[I]~ASIGNEDIDLETIME[I]-ABRTLG[K+5];   42695160
                   ASIGNEDIOTIME[I]~ASIGNEDIOTIME[I]-ABRTLG[K+6];       42695170
                   ABRTLG[K].[9:6]~0;                                   42695180
                   END;                                                 42695185
              ABRTLG[J+4]~ABRTLG[J+4]+ASIGNEDPROCTIME[I];               42695190
              ABRTLG[J+5]~ABRTLG[J+5]+ASIGNEDIDLETIME[I];               42695200
              ABRTLG[J+6]~ABRTLG[J+6]+ASIGNEDIOTIME[I]; ABRTLG[J].[9:6]~42695210
                0;                                                      42695215
              END;                                                      42695220
         ASIGNEDPROCTIME[I] ~ ASIGNEDIOTIME[I] ~ ASIGNEDIDLETIME[I] ~   42695230
           @2003777777777777                                            42695240
         END;                                                           42695250
    END TIMEABORT;                                                      42695260
    IF SPOEDNULLOG THEN GO XET;                                         42696000
    COMMENT READ SEG 0 RECORD REMOTE LOG;                               42697000
    DISKIO(IOD,1-(TEMP1~GETSPACE(30,0,0)+2),30,REMOTEFILE);             42698000
    RHDR ~ TEMP1 INX MEMORY; SLEEP([IOD],IOMASK);                       42699000
    COMMENT IF ABORT EMPTY BE SURE HDRS ARE INITIALIZED;                42700000
    IF DDD[0] = 0 OR DDD[0] = 2 THEN%CASE WHERE ABORT LOG IS EMPTY      42701000
         BEGIN                                                          42702000
         INITIALIZEABORT;%FLAG THAT INITIALIZE LAST RAN ROUTINES        42703000
         RITEREMOTEHDR;                                                 42704000
         FORGETSPACE(TEMP1);                                            42705000
         GO XET;                                                        42706000
         END;                                                           42707000
    COMMENT READ ABORT LOG;                                             42708000
    DISKIO(IOD,1-(TEMP3~GETSPACE(WDS3~DDD[0]|5,0,0)+2),WDS3,ABORTFILE); 42709000
    SLEEP([IOD],IOMASK);                                                42710000
    ABRTLG~ TEMP3 INX MEMORY;                                           42711000
    TIMEABORT;                                                          42711200
    COMMENT IF NOTHING IN THE REMOTE LOG THEN MOVE ABORT AND XIT;       42712000
    IF RHDR[0] = 0 THEN%CASE WHERE REMOTE LOG IS EMPTY                  42713000
         BEGIN                                                          42714000
         TEMP2 ~ GETSPACE(WDS3-5,0,0)+2; TEMP~-5; WRDNUM~5; SEGNUM~0;   42715000
         RLOG ~ TEMP2 INX MEMORY;                                       42716000
         FOR I~0 STEP 1 UNTIL 4 DO                                      42717000
           RLOG[I] ~ RHDR[I] ;                                          42718000
         RLOG[0] ~ DDD[0] - 2; RLOG[2] ~ 0;                             42719000
         TIMEABORT;                                                     42719200
         UPDATEREMOTELOG;                                               42720000
         INITIALIZEABORT;                                               42721000
         GO FORGETALLSPACE;                                             42722000
         END;                                                           42723000
    COMMENT LOOK AT RECORD AND RECORD - 1;                              42724000
    SEGNUM ~ ( WRDNUM ~ RHDR[0] -1) DIV 6;                              42725000
    TEMP ~ WRDNUM ~ (WRDNUM|5 MOD 30);                                  42726000
    DISKIO(IOD,1-(TEMP2~GETSPACE(TEMP+WDS3,0,0)+2),TEMP+10,SEGLOC+      42727000
      SEGNUM);                                                          42728000
    SLEEP([IOD],IOMASK);                                                42729000
    RLOG ~ TEMP2 INX MEMORY;                                            42729500
    DELETERECORD;%IF ABORTLOG RECORD MATCHES ANY IN THE REMOTELOG       42730000
    IF MACHINGNTRY AND (RHDR[2] = 0) THEN                               42731000
         BEGIN                                                          42732000
         INITIALIZEABORT;                                               42733000
         GO FORGETALLSPACE;                                             42734000
         END;                                                           42735000
    WRDNUM ~ WRDNUM + 10;%UPDATE RECORD POINTER                         42736000
    IF SEGNUM = 0 THEN                                                  42737000
         BEGIN                                                          42738000
         RLOG[0] ~ RLOG[0] + WDS3 DIV 5 - 2%UPDATE RECORD COUNT         42739000
        ;RLOG[2] ~ 0;%SET INITIALIZE RAN ABORTLOG                       42740000
         UPDATEREMOTELOG;                                               42741000
         INITIALIZEABORT;                                               42742000
         END                                                            42743000
    ELSE BEGIN                                                          42744000
         UPDATEREMOTELOG;                                               42745000
         UPDATEREMOTEHDR;                                               42746000
         INITIALIZEABORT;                                               42747000
         END;                                                           42748000
FORGETALLSPACE:                                                         42749000
    FORGETSPACE(TEMP1);                                                 42750000
    FORGETSPACE(TEMP2);                                                 42751000
    FORGETSPACE(TEMP3);                                                 42752000
XET:                                                                    42753000
    END CLEANUPABORT;                                                   42754000
PROCEDURE INITIALIZEDCFILES(A,DDD);VALUE A,DDD;ARRAY DDD[*]; REAL A;    43000000
BEGIN                                                                   43001000
    REAL I,J,X,T;                                                       43002000
    REAL IOD = T;                                                       43002100
              IF (I:=DIRECTORYSEARCH("REMOTE ","LOG    ",2)) NEQ 0 THEN 43003000
                   BEGIN%IF PRESENT BUMP OPEN COUNT                     43004000
                   IF (J~M[I+10])=0 THEN%LOG IS PRESENT BUT NOT         43005000
                        BEGIN%INITIALIZED                               43006000
                        M[I+10]~J~GETUSERDISK(M[I+8]);                  43007000
                        DISKIO(T,I.[33:15]-1,30,I.[18:15]);             43008000
                        SLEEP([T],IOMASK);                              43009000
                        END;                                            43010000
                   DISKIO(T,1-A,30,J); SLEEP([T],IOMASK);               43011000
                   IF DDD[0]< DDD[1]    AND%IF REC CNT<MAX              43012000
                     DDD[1]=(M[I+8]-ABORTLNGTH)|6 AND                   43013000
                     M[I+7]=M[I+8]|6 AND                                43013100
                     DDD[4]="REMOTE " THEN%AND NAME IS REMOTE           43014000
                   ELSE BEGIN                                           43015000
                        DDD[0]~0;DDD[1]~(M[I+8]-ABORTLNGTH)|6;          43016000
                        M[I+7]~M[I+8]|6;                                43016100
                        DISKIO(T,I.[33:15]-1,30,I.[18:15]);             43016110
                        SLEEP([T],IOMASK);                              43016120
                        DDD[2]~DDD[3]~0; DDD[4]~"REMOTE ";              43017000
                        DISKIO(T,A-1,30,J); SLEEP([T],IOMASK);          43018000
                        END;                                            43019000
                   REMOTEFILE ~ J;                                      43020000
                   ABORTFILE~J+M[I+8]-ABORTLNGTH;                       43020100
                   DISKIO(IOD,1-A,30,ABORTFILE); SLEEP([IOD],IOMASK);   43020400
                   IF DDD[0] < DDD[1] AND                               43020500
                     DDD[1]=ABORTLNGTH|6 AND                            43020550
                     DDD[4] = "ABORTLN" THEN CLEANUPABORT(A,DDD)        43020600
                   ELSE BEGIN                                           43020700
                        DDD[0]~2;DDD[2]~DDD[3] ~ 0;                     43020800
                        DDD[1] ~ ABORTLNGTH | 6;                        43020900
                        DDD[4]~"ABORTLN";DDD[5]~DATE;                   43021000
                        DDD[6]~XCLOCK+P(RTR);                           43021200
                        DISKIO(IOD,A-1,30,ABORTFILE);SLEEP([IOD],IOMASK)43021400
                        END;                                            43021500
                   ABORTSPEC.ABORTREC ~ DDD[0];                         43021600
                   ABORTSPEC.SIZABORT ~ DDD[1];                         43021700
                   REMOTELOGFREE ~ TRUE;                                43021800
                   FORGETSPACE(I);                                      43022000
                   END                                                  43023000
              ELSE BEGIN%IF FILE ISNT PRESENT THEN SET FLAGS-SPOUT      43024000
                   ;STREAM(X~X~GETSPACE(3,0,0)+2);%MESSAGE TO OPR.      43025000
                        BEGIN                                           43026000
                        DS~17 LIT "#NULL REMOTE LOG~";                  43027000
                        END;                                            43028000
                   SPOEDNULLOG~TRUE;                                    43029000
                   SPOUT(0&X[33:33:15]);                                43030000
                   END;                                                 43031000
                   FOR I ~ 0 STEP 1 UNTIL MIXMAX DO                     43031200
                     IF ASIGNEDPROCTIME[I] ! @2003777777777777 THEN     43031400
                     ASIGNEDPROCTIME[I] ~ ASIGNEDIOTIME[I] ~            43031600
                     ASIGNEDIDLETIME[I] ~ @2003777777777777;            43031800
END INITIALIZEDCFILES;                                                  43032000
 %  THE FORMAT OF DIRECTORY TOP%                                        44000000
 %       D[0]=OPTION WORD%                                              44001000
 %       D[1]=DATE%                                                     44002000
 %       D[2]=NUMBER OF ELECTRONIC UNITS%                               44003000
 %       D[3]=HIGHEST ADDRESS OF BACKUP STORAGE%                        44004000
 %       D[4]=HIGHEST ADDRESS OF DIRECTORY%                             44005000
 %       D[5]=LAST NUMBER USED FOR CONTROL DECK%                        44006000
 %       D[6]=FIRST CONTROL DECK QUEUED (LOCATION IN DIRECTORY)%        44007000
 %       D[7]=LAST CONTROL DECK QUEUED (LOCATION IN DIRECTORY)%         44008000
 %       D[8]=NEXT NUMBER AVAILABLE FOR PRINTER BACKUP DISK          %P 44008100
 %       D[9]=CORE, CONTAINS MULTIPROCESSING FACTOR                     44008200
 %       D[10] THRU D[15] SPECIFY WHICH DC-STATIONS ARE SPO-LIKE.       44008300
 %       D[16]=QUEUE VALUES FOR SPO STATIONS                            44008305
%      D[17] SPECIFIES WHAT THE SPOES ARE                               44008310
 %       D[18]=TIME OF DAY                                              44008320
 %       D[19]=VALUE OF FENCE (TIME SHARING MCP)                        44008330
 %       D[20].[8:10]=NUMBER OF LAST LOG FILE                           44008340
 %            .[18:30]=NUMBER OF ENTRIES IN LOG (TIMESHARING)           44008350
 %       D[21]=SCHEDWORD (TIMESHARING)                                  44008360
                                                                        44008400
 %      D[28]=DISK ADDRESS OF DIRECTORYTOP                              44008499
PROCEDURE INTFINISH(AA);                                                44008998
    VALUE AA;REAL AA; FORWARD;                                          44008999
 SAVE PROCEDURE INITIALIZE;%                                            44009000
         BEGIN REAL I,A,T,B,C,J;%                                       44010000
    NAME SD;%                                                           44011000
    LABEL SAVEC,BOMBOUT,CONTINUE;                                       44011100
         LABEL NOGOOD;%                                                 44012000
INTEGER SEGNO,SEGSIZ,SEGTYPE,DISKADR; REAL DWR;%                        44013000
 REAL LASTL,LOC;%                                                       44015000
$ INCLUDE 44017001, IF SHAREDISK;                                       44016000
    ARRAY DDD  [*];%                                                    44018000
    ARRAY X=SD[*];%                                                     44019000
    REAL  W=X;%                                                         44020000
    REAL RA=SEGNO,RL=SEGSIZ,RT1=SEGTYPE,Y=DISKADR,Z=DWR;%               44021000
    REAL RADD=LASTL,RLEN=LOC;%                                          44022000
         INTEGER  XCLICK=XCLOCK;%                                       44023000
    REAL ESU,BACKUP;%                                                   44024000
 REAL T1 = ESU;%                                                        44025000
 ARRAY SEGZERO=BACKUP[*];%                                              44026000
    ARRAY GI[*]; REAL LDATE;                                            44026100
 DEFINE SDLOC     =SEGZERO[0]#,%                                        44028000
         SDSIZE   =SEGZERO[1]#,%                                        44029000
         PRTLOC   =SEGZERO[2]#,%                                        44030000
         PRTSIZE  =SEGZERO[3]#,%                                        44031000
         FPBLOC   =SEGZERO[4]#,%                                        44032000
         FPBSIZE  =SEGZERO[5]#,%                                        44033000
         FILENOX  =SEGZERO[7]#,%                                        44034000
        STARTSEGNO=SEGZERO[6]#;%                                        44035000
 LABEL AVLP,INLP,LT,LE,LF,LN,LP,LS;%                                    44036000
REAL IRPB,IRPT,IRPTB,SHLM,IRPDBS;                                       44036500
INTEGER IRPBTS,IRPWRS,IRPTU,IRPBUF;                                     44036600
REAL INTS;                                                              44036700
 SUBROUTINE XXXXXX; BEGIN A~X-X-X-X-X-X-X-X-X-X-X-X-X-X-X; END;%        44037000
$ INCLUDE 44037191 , IF SHAREDISK;                                      44037099
SUBROUTINE SETUPSCRATCHDIRECTORY ;                                      44037100
    BEGIN                                                               44037110
    DISKWAIT(-SCRATCHVEC INX 0,-4,J:=DIRECTORYTOP+1) ;                  44037120
    SCRATCHVEC[SYSNO]:=0&(I:=GETESPDISK)[TOSLINK] ;                     44037130
    DISKWAIT(SCRATCHVEC INX 0,-4,J) ;                                   44037140
    SCRATCHVEC[0]:=0&1[TOSNUM];  SCRATCHVEC[1]:=1&1[TOSLENGTH] ;        44037150
    DISKWAIT(SCRATCHVEC INX 0,2,I) ;                                    44037160
    SCRATCHVEC[0]:=0&J[TOSLINK]&1[TOSSIZE] ;                            44037170
    SCRATCHVEC[1]:=2&1[TOSNUM]&I[TOSLINK] ;                             44037180
    END OF SETUPSCRATCHDIRECTORY ;                                      44037190
 SUBROUTINE MAKESAVE;                                                   44037200
 BEGIN DISKWAIT(-C,M[I].[8:10],M[I]. [FF]+MCPBASE);                     44037300
         M[I].[CF]~C; C~C+M[I].[8:10]+1;                                44037400
 END;                                                                   44037500
    SUBROUTINE FIX;%                                                    44079000
         BEGIN P([M[J]]&I[8:38:10],T,~);%                               44080000
              J ~ J+I;%                                                 44081000
         END;%                                                          44082000
$INCLUDE 44082051, IF DCSPO AND DATACOM AND NOT INQUIRY;                44082049
    SPOWORD~ 0;                                                         44082050
              RESTARTING~1023;                                          44085000
PEUIO:=EUIO:=[M[@133]]&20[8:38:10] ;                                    44085100
EUSN:=0;%************************TEMPORARY******************************44085101
    HOLDER:=DIRECTORYTOP-6-(HOLDMAX+29) DIV 30;                         44086100
    USERDISKBOTTOM:=HOLDER-DISKAVAILTABLEMAX;                           44086200
    I:=(USERDISKBOTTOM-50) DIV SYSMAX;                                  44086300
    ESPDISKBOTTOM:=50+(SYSNO|I); % BOTTOM OF ESPDISK                    44087000
    ESPDISKTOP~ESPDISKBOTTOM+I-8; %TOP OF ESPDISK                       44087100
              RRRMECH ~ @140000000;%                                    44088000
              IOQUEAVAIL ~ 32;%                                         44089000
              NOPROCESSTOG ~ -1;%                                       44092000
    STREAM(S~18,D~100);%                                                44093000
         BEGIN%                                                         44094000
              SI ~ S; DS ~ 11 WDS; D ~ DI;                              44095000
              DI ~ S; 11(DS ~ 8 LIT "102(0000" );                       44096000
              19(SI ~ SI+8);  S ~ SI;                                   44097000
              DI~D; DS~2 WDS;%                                          44098000
              DI~S; DS~16 LIT"042(0000"%                                44099000
         END;%                                                          44100000
    MSTART:=P(..INITIALIZE,LOD).[CF];                                   44101000
    AVAIL~@77776;%                                                      44102000
   AVLP:M[AVAIL]~@7777700000+AVAIL;%                                    44103000
    INLP:IF J~COREND THEN%                                              44104000
              BEGIN%                                                    44105000
              MEMASK[AVAIL DIV 4096]~1;%                                44106000
                   AVAIL~AVAIL-4096;%                                   44107000
                   GO TO AVLP%                                          44108000
              END;%                                                     44109000
         IF J=2 THEN GO TO INLP;%                                       44110000
    M[AVAIL+1]~AVAIL;%                                                  44111000
    M[MEND~AVAIL-1]~0&1[2:47:1]%                                        44112000
                     &MSTART[CTF];%                                     44113000
    M[0]~MSTART&MEND[CTF]&1[2:47:1];%                                   44114000
    M[MSTART]~LASTL~MEND;%                                              44115000
    LOC~MEND-4094;%                                                     44116000
 LT:IF LOC>4095 THEN%                                                   44117000
         BEGIN%                                                         44118000
              M[LOC]~@77777;%                                           44119000
          LE:IF J~COREND THEN%                                          44120000
                   BEGIN%                                               44121000
              MEMASK[LOC DIV 4096]~1         ;%                         44122000
                    M[LOC+1]~LASTL&MSTART[CTF];%                        44123000
                    M[LASTL]~M[LASTL]&(LOC+1)[CTF];%                    44124000
                    M[MSTART]~LASTL~LOC+1;%                             44125000
              LF:   M[LOC~LOC-4096]~(T~  LASTL )&MSTART[CTF]%           44126000
                                                    &1[2:47:1];%        44127000
         LS:IF J~COREND THEN BEGIN MEMASK[LOC DIV 4096]~1;GO TO LF END; 44128000
                    IF J=2 THEN GO TO LS;%                              44129000
                    M[LASTL]~M[LASTL]&LOC[CTF];%                        44130000
                    M[MSTART]~LASTL~LOC;%                               44131000
                   END    ELSE%                                         44132000
              IF J=2 THEN GO TO LE;%                                    44133000
              LOC~LOC-4096; GO TO LT%                                   44134000
         END;%                                                          44135000
    LOC~M[MEND].[FF];%                                                  44136000
 LP:IF M[LOC].[2:1] THEN    BEGIN%                                      44137000
     LN: LOC~M[LOC].[FF];GO TO LP END;%                                 44138000
              FORGETSPACE(LOC+2);%                                      44139000
              IF LOC!MSTART THEN%                                       44140000
              GO TO LN;%                                                44141000
 STOREDY~TRUE;%                                                         44142000
$INCLUDE 44143101, IF DFX;                                              44142999
 DISKOUNT~P(RRR).[29:1]+P(RRR).[28:1];                              %DFX44143000
EUW~@7777777777;                                                    %DFX44143100
         STREAM(S~100,D~18);%                                           44144000
              BEGIN%                                                    44145000
              SI ~ S; DS ~ 11 WDS;                                      44146000
              19(DI ~ DI+8); DS ~ 2 WDS;                                44147000
              END;%                                                     44148000
INTS:=GETSPACE(P(..COREND,LOD).[CF]-P(..INITIALIZE,LOD).                44149000
                   [33:15]+200,0,1)+2;%                                 44150000
$ INCLUDE 44150011,IF AUXMEM;                                           44150009
         A := P(RRR).[31:1];  B := P(RRR).[30:1];                       44150010
         I := (MIXMAX+1)|11                      % PRT THRU USERCODE    44151000
              + MIXMAX|NDX                       % NFO                  44151010
              + JOBNUMAX                         % BED                  44151020
              +5                                 % CHANNEL ARRAY        44151030
$ INCLUDE 44151046,IF AUXMEM;                                           44151034
              +P(MIXMAX+1,DUP,+)                 % AUXDATA,AUXCODE      44151035
              +4                                                        44151040
              +74|(A+B)                                                 44151045
              +SLATESIZE                         % SLATE                44151050
              +16                                % PRNTABLE             44151060
              +(5|32)                            % I/O QUEUES           44151070
              +128                               % ISTACK               44151080
              -1                                 % NFO[0] MUST START IN 44151085
                                                 % SECOND MEM LINK      44151090
              +2|PSEUDOMAX1 + 9                  % CIDROW,UNITCODE      44151092
              +3|(PSEUDOMAXT+1)                  % I/O ASSGNMNT TBLS    44151094
$INCLUDE 44151101, IF DCLOG AND DATACOM AND NOT INQUIRY;                44151099
              +3|(MIXMAX+1)                      % ASSSIGNED TIMES      44151100
$INCLUDE 44151201, IF DATACOM AND NOT INQUIRY;                          44151199
                +3 |(MIXMAX+1) + DCQARASIZ +16                          44151200
$INCLUDE 44151251, IF STATISTICS;                                       44151219
              +62  % COUNTARRAY                                         44151220
              +32 % DISK WAIT TIME                                      44151230
              +32 % LOGARRAY                                            44151240
              +(MIXMAX+1)                                               44151250
$INCLUDE 44151301, IF BREAKOUT;                                         44151299
                +(MIXMAX+1)                                             44151300
$INCLUDE 44151401, IF DEBUGGING OR DUMP;                                44151399
                +31     %DBARRAY                                        44151400
$INCLUDE 44151501, IF DCSPO AND DATACOM AND NOT INQUIRY;                44151499
                +6      %QTIMES[6]                                      44151500
$INCLUDE 44151601, IF DEBUGGING;                                        44151599
                +91     %WB[10],RB[11],TBL[50],STOPS[20]                44151600
                +(W:=(ESPDISKTOP-ESPDISKBOTTOM+48) DIV 48) % ESPTAB     44151700
$ INCLUDE 44151811, IF SHAREDISK;                                       44151799
                + LQMAX                                                 44151800
$ INCLUDE 44151882,IF SAVERESULTS;                                      44151820
              +SVRLSTSIZE+1                                             44151821
$INCLUDE 44151911, IF DATACOM AND NOT  INQUIRY;                         44151900
                +P(.STABLE,LOD).[8:10]+1                                44151910
$INCLUDE 44151941, IF DEBUGGING;                                        44151920
                +P(.DT,LOD).[8:10]+1                                    44151930
                +P(.EXP,LOD).[8:10]+1                                   44151940
                ;                                                       44151950
              J ~ GETSPACE(I,0,0)+1;%                                   44152000
              M[J] ~ 0;%                                                44153000
              MOVE(I-1,J,J+1);%                                         44154000
              C~J+1; J~J %C IS USED IN MAKESAVE                         44154010
$INCLUDE 44154031, IF DATACOM AND NOT INQUIRY;                          44154020
              +P(.STABLE,LOD).[8:10]+1                                  44154030
$INCLUDE 44154061, IF DEBUGGING;                                        44154040
              +P(.DT,LOD).[8:10]+1                                      44154050
              +P(.EXP,LOD).[8:10]+1                                     44154060
              ;                                                         44154070
              I~MIXMAX|NDX;                                             44154100
              T~P(.NFO); FIX;                                           44154200
              I ~ MIXMAX+1;%                                            44155000
              T ~ P(.PRT); FIX;%                                        44156000
              T ~ P(.INTABLE); FIX;%                                    44156100
$ INCLUDE 44156301,IF AUXMEM;                                           44156199
              T ~ P(.AUXDATA);  FIX;                                    44156200
              T ~ P(.AUXCODE);  FIX;                                    44156300
              T ~ P(.JAR); FIX;%                                        44157000
              T~P(.PRYOR); FIX;                                         44157100
              T~P(.SHEET); FIX;                                         44157200
              T ~ P(.PROCTIME); FIX;%                                   44158000
              T ~ P(.IOTIME); FIX;%                                     44159000
              T ~ P(.DALOC);  FIX;                                      44160000
              GO SAVEC;                                                 44160010
              SAVEC:                                                    44160020
$INCLUDE 44160101, IF STATISTICS;                                       44160099
            T:=P(.UV); FIX;                                             44160100
$INCLUDE 44161101, IF BREAKOUT;                                         44160999
              T~P(.GRSD); FIX;                                          44161000
                                                                        44161100
              T ~ P(.REPLY); FIX;%                                      44162000
              T ~ P(.FS); FIX;                                          44162050
              T:= P(.USERCODE); FIX;                                    44162100
$INCLUDE 44162118, IF DATACOM AND NOT INQUIRY;                          44162109
              T~P(.USERSTA); FIX;                                    %JS44162110
              T ~ P(.TUSTABYMIX); FIX;                                  44162112
              T ~ P(.ATTACHED); FIX;                                    44162113
              I ~ DCQARASIZ; T ~ P(.DCQARA); FIX;                       44162114
              I ~ 16; T ~ P(.STATION); FIX; I ~ MIXMAX+1;               44162115
$INCLUDE 44162125, IF DCLOG AND DATACOM AND NOT INQUIRY;                44162119
              T~P(.ASIGNEDPROCTIME); FIX;                            %JS44162120
              T~P(.ASIGNEDIOTIME); FIX;                              %JS44162122
              T~P(.ASIGNEDIDLETIME); FIX;                            %JS44162124
              I ~ JOBNUMAX; T ~ P(.BED); FIX;%                          44163000
              I ~ 5; T ~ P(.CHANNEL); FIX;                              44164000
$ INCLUDE 44164301,IF AUXMEM;                                           44164099
              I :=4; T :=P(.CTABLE); FIX;                               44164100
              IF A THEN BEGIN CTABLE[0].[FF] ~ J;  J ~ J+74 END;        44164200
              IF B THEN BEGIN CTABLE[1].[FF] ~ J;  J ~ J+74 END;        44164300
              I ~ PSEUDOMAX1; T~ P(.CIDROW); FIX;                       44164500
$INCLUDE 44165501, IF DEBUGGING OR DUMP;                                44164999
              I ~ 31; T ~ P(.DBARRAY); FIX;                             44165000
$INCLUDE 44165501, IF DEBUGGING;                                        44165099
              I ~ 10; T ~ P(.WB); FIX;                                  44165100
              I ~ 11; T ~ P(.RBX); FIX;                                 44165200
              I ~ 20; T ~ P(.STOPS);  FIX;                              44165300
              I ~ 50; T ~ P(.TBL);  FIX;                                44165400
$INCLUDE 44165601, IF DCSPO AND DATACOM AND NOT INQUIRY;                44165599
              I ~ 6; T ~ P(.QTIMES); FIX;                               44165600
              I:=SLATESIZE; T:= P(.SLATE); FIX;%                        44166000
              I~16;                                                     44166200
              T ~ P(.PRNTABLE); FIX;%                                   44167000
              I ~ 32;%                                                  44168000
              T ~ P(.FINALQUE); FIX;%                                   44169000
              T ~ P(.LOCATQUE); FIX;%                                   44170000
              T ~ P(.IOQUE); FIX;%                                      44171000
$INCLUDE 44171101, IF STATISTICS;                                       44171099
            T:=P(.DISKWAITIME); FIX;                                    44171100
              T ~ P(.TRANSACTION); FIX;%                                44172000
              T ~ P(.WAITQUE); FIX;%                                    44173000
$INCLUDE 44173151, IF SHAREDISK;                                        44173099
              I:=LQMAX;                                                 44173140
              T:= P(.LQUE); FIX;                                        44173150
              ESPTAB~J; J~W+J;                                          44173200
              ESPCOUNT:=ESPDISKTOP-ESPDISKBOTTOM;                       44173300
                   I ~ PSEUDOMAXT + 1;                                  44174000
              T ~ P(.LABELTABLE); FIX;%                                 44175000
              T ~ P(.MULTITABLE); FIX;%                                 44176000
              T ~ P(.RDCTABLE); FIX;%                                   44177000
$INCLUDE 44177201, IF STATISTICS;                                       44177099
            J:=J+1; I:=61; T:=P(.COUNTARRAY); FIX;                      44177100
            J:=J+1; I:=31; T:=P(.LOGARRAY); FIX;                        44177200
$INCLUDE 44178001,IF SAVERESULTS;                                       44177999
              I~SVRLSTSIZE+1;T~P(.SAVERESULT);FIX;                      44178000
              I ~ PSEUDOMAX1 + 9;  T ~ P(.UNITCODE); FIX;               44178100
              I ~ 128; T ~ P(.ISTACK); FIX;%                            44179000
              STACKUSE ~ TRUE;%                                         44180000
$OMIT    44180201, IF NOT DEBUGGING;                                    44180099
              NSYMBS ~ 34;                                              44180100
              TBL[32] ~ "SPO"; TBL[33] ~ [TYPETOG].[33:15];             44180120
              TYPETOG ~ "O";                                            44180140
              TBL[34] ~ "F";                                            44180200
              FOR I ~ 16 STEP 1 UNTIL 31 DO%                            44181000
                   IOQUE[I] ~ I;%                                       44182000
              FOR I ~ 0 STEP 1 UNTIL 15 DO%                             44183000
                   BEGIN IOQUE[I] ~ I;%                                 44184000
                        LABELTABLE[I] ~ @114;%                          44185000
                   END;%                                                44186000
PSEUDOCOPY ~ 0;                                                         44186005
         JOBNUM ~ -2;%                                                  44187000
              PRYOR[0] ~ -1;                                            44187200
$INCLUDE 44187501,IF DATACOM AND DCSPO AND NOT INQUIRY;                 44187299
EGGSELECTSTOPPED ~ TRUE;                                                44187300
BACKWATER~P(..BACKWATER);                                               44187400
WATER~P(..WATER,NT1,DEL)&@77777777[9:24:24];                            44187500
              NUMESS ~ -100;%                                           44188000
$ OMIT   44189001, IF NOT DEBUGGING;                                    44188999
              P(.DT,LOD,0,DIB 5,TRB 1,.DT,~);%                          44189000
              IOMASK ~ @2000000000;%                                    44191000
              FOR I ~ 1 STEP 1 UNTIL MIXMAX DO%                         44192000
                   PROCTIME[I] ~ IOTIME[I] ~ @2003777777777777;%        44193000
$INCLUDE 44193999,IF DATACOM AND NOT INQUIRY;                           44193001
              FOR I ~ 0 STEP 1 UNTIL MIXMAX DO%INITIALIZE               44193100
$INCLUDE 44193201, IF DCLOG AND DATACOM AND NOT INQUIRY;                44193199
                ASIGNEDPROCTIME[I]~ASIGNEDIDLETIME[I]~ASIGNEDIOTIME[I]~ 44193200
                USERSTA[I]~@2003777777777777;                           44193300
              FOR I ~ 20 STEP 1 UNTIL PSEUDOMAXT DO                     44194000
                   LABELTABLE[I] ~ @114;%                               44195000
              LABELTABLE[25] ~ 0;%                                      44196000
$ OMIT   44199001, IF NOT DEBUGGING;                                    44196999
              FOR I ~ 0 STEP 2 UNTIL 30 DO BEGIN%                       44197000
                   TBL[I] ~ TINU[I DIV 2] .[30:18];%                    44198000
                   TBL[I+1] ~ [LABELTABLE[I DIV 2]].[33:15] END;%       44199000
              FOR I ~ 0 STEP 1 UNTIL 31 DO TINU[I].[18:12] ~ 0;%        44200000
              FOR I ~ @100 STEP 1 UNTIL @177 DO%                        44201000
                   ISTACK[I-@100]~ISTACK[I]~M[I]~@2525252525252525;     44201100
              FOR I:=@160 STEP 1 UNTIL @177 DO M[I]:=0;                 44201105
              FOR I ~ 0 STEP 1 UNTIL PSEUDOMAX + 9 DO                   44201110
                   UNITCODE[I] := -0; UNITCODE[7] := 0;                 44201120
$ INCLUDE 44201141, IF SHAREDISK;                                       44201129
              FOR I~LQMAX-1 STEP -1 UNTIL 0 DO                          44201130
                   LQUE[I]~@2525252525252525;                           44201140
          % FIND INITIAL VALUE FOR CORE                                 44201200
CORE:=P(..COREND,LOD).[CF]-P(..INITIALIZE,LOD).[CF];                    44201300
              I ~ M[M[AVAIL]];                                          44201400
              WHILE I.[FF] ! @77777 DO                                  44201500
                   BEGIN CORE ~ CORE + I.[FF];  I ~ M[I] END;           44201600
              CORE ~ CORE DIV 64;                                       44202000
$INCLUDE 44202081, IF DATACOM AND NOT INQUIRY;                          44202004
READQ ~ @7770000000000&P(.READQ)[CTF]&P(.READQ)[CTC];                   44202005
INQUPTSTOPPED~ TRUE;    DCQPTSTOPPED~ TRUE;                             44202007
BUMPTUTIME ~ TRUE;                                                      44202008
TUMAX ~ 2;    SET(0);                                                   44202010
STATIONMESSAGEHOLDER~ P(.STATIONMESSAGEHOLDER,DUP)&P[CTF]&@777[9:39:9]; 44202015
NINETEENNOTREADING~ TRUE;                                               44202022
QTRDY ~ TRUE;                                                           44202023
DC19Q~ NABS(P(.DC19Q,DUP)&P[CTF]&@777[9:39:9]);                         44202024
SMWSTOPPED ~ TRUE;                                                      44202025
$INCLUDE 44202046,IF DATACOM AND NOT INQUIRY;                           44202030
$ INCLUDE 44202036, IF RJE;                                             44202034
RJEWAITQ:=@7770000000000&P(.RJEWAITQ)[CTF]&P(.RJEWAITQ)[CTC];           44202035
QTRDY~ TRUE;                                                            44202040
PINGO ~ @7770000000000&P(.PINGO)[CTF]&P(.PINGO)[CTC];                   44202042
LOOKQ ~ @7770000000000&P(.LOOKQ)[CTF]&P(.LOOKQ)[CTC];                   44202044
                                                                        44202046
$INCLUDE 44202051, IF DCLOG AND DATACOM AND NOT INQUIRY;                44202047
RQONE~@7777700000000&P(.RQONE) [CTC];                                %JS44202048
RQTWO~0&P(.RQONE) [CTC];                                             %JS44202049
                                                                        44202050
$INCLUDE 44202081, IF DCSPO AND DATACOM AND NOT INQUIRY;                44202059
MIXMASK := @0006040600000000;                                           44202060
INFOMASK1 := @1100613044123776; INFOMASK2 :=@2020000000000000;          44202070
CCMASK1:=@0000000001600401; CCMASK2:=@1510542000000000;                 44202080
$INCLUDE 44202091, IF DATACOM OR INQUIRY;                               44202089
ILL ~ @7770000000000&P(.ILL)[CTF]&P(.ILL)[CTC];                         44202090
$INCLUDE 44202101, IF DATACOM AND NOT INQUIRY;                          44202095
             I~P(.STABLE); MAKESAVE;                                    44202100
$INCLUDE 44202116, IF DEBUGGING;                                        44202105
             I~P(.EXP); MAKESAVE;                                       44202110
             I~P(.DT); MAKESAVE;                                        44202115
              SHLM~SPACE(10);                                           44202120
              DDD:=[M[A:=SPACE(483)]]&483[8:38:10];                     44202500
              DISKWAIT(-A,-30,0);                                       44202600
                   DDD:=[M[A]]&480[8:38:10];                            44202700
              STREAM(S~M[3]~ %% PATCH LEVEL ON NEXT CARD                44203000
                  "0"                                                   44203100
                   ,MEMASK,N:=A+10+5|SYSNO                              44203150
$ INCLUDE 44203181, IF SHAREDISK;                                       44203179
                   ,SYS~SYSNO+17                                        44203180
                        ,T~NT1~GETSPACE(10,0,0)+2);                     44203200
              BEGIN DS~5 LIT "-H/L ";                                   44204000
$ INCLUDE 44204101, IF SHAREDISK;                                       44204099
                    SI~LOC SYS;SI~SI+7;DS~7 LIT"SYSTEM ";DS~CHR;        44204100
                    DS~6 LIT" WITH ";SI~N;SI~SI+1;DS~7 CHR;             44204200
              DS:=LIT"/";SI:=SI+1;DS:=7 CHR;DS:=6 LIT" MARK ";          44204500
              DS~4 LIT"XIII";                                           44204600
              SI:=LOC S; IF SC GEQ " " THEN;                            44205000
              8(IF TOGGLE THEN IF SC="0" THEN SI:=SI+1 ELSE DS:=CHR     44205050
                ELSE DS:=CHR);                                          44205100
              DS:=6 LIT" MODS ";                                        44205200
              SI:=MEMASK; SI:=SI-1;                                     44205300
              8(SI:=SI+8; IF SC="1" THEN DS:=LIT"@" ELSE DS:=LIT"R");   44205400
              DS:=4 LIT"  -~";                                          44206000
              END;                                                      44206100
              MOVE(10,NT1,SHLM);                                        44206900
              SPOUT(NT1);%                                              44207000
$ INCLUDE 44208001, IF SHAREDISK;                                       44207899
              FOR I:=13 STEP 5 UNTIL 28 DO                              44207900
                   LDATE:=LDATE OR (DDD[I]!0 AND ((I-13) DIV 5)!SYSNO); 44207910
              UNLOCK(0);                                                44207920
              IF NOT LDATE THEN                                         44207930
              FOR I:=0 STEP 1 UNTIL 3 DO                                44207940
              BEGIN                                                     44207950
                   J:=@4060&I[30:46:2]; % CLEAR CONTENTION BITS         44207960
                   P(WAITIO([J] INX @100000000,0,18),DEL);              44207970
                   J.[37:1]:=1; % UNLOCK ADDRESSES                      44207980
                   P(WAITIO([J] INX @100000000,0,18),DEL);              44207990
              END;                                                      44208000
              DISKWAIT(-30-A,210,ESPDISKTOP+1);                         44211000
              DISKWAIT(-A,30,DIRECTORYTOP-SYSNO);                       44213000
              CORE.[4:14]:=IF DDD[9]=0 THEN 100 ELSE DDD[9].[4:14];     44213500
              OPTION ~ DDD[0];%                                         44214000
              T ~ 0;%                                                   44215000
              DISKWAIT(-A,-30,DIRECTORYTOP);                            44216700
              XCLICK:=(@7777777777700 AND DDD[18]) MOD 5184000;         44216900
              NEUP:=DDD[2] MOD 100 ;                                    44216910
              NEUP:=NEUP&(NEUP+DDD[2] DIV 100)[CTF] ;                   44216940
              DATE:=DDD[1];                                             44216950
$ INCLUDE 44216961, IF SHAREDISK;                                       44216959
              UNLOCK(DIRECTORYTOP);                                     44216960
              FOR I ~ 1 STEP 1 UNTIL MIXMAX DO%                         44217000
              BEGIN USERCODE[I] := 0;                                   44217100
                   T ~ DDD[3|I+122].[24:24] OR T;                       44218000
              END;                                                      44218100
              IF T ! 0 AND DDD[32] = "ABORT" THEN%                      44219000
                   BEGIN GI~[M[SPACE(210)]]&210[8:38:10];               44220000
                        MOVE(210,A+30,GI);                              44221000
                        DDD[33] ~ 0;%                                   44222000
                        MOVE(206,A+33,A+34);                            44223000
                        DISKWAIT(A+30,210,ESPDISKTOP+1);                44224000
                        FOR I ~ 1 STEP 1 UNTIL MIXMAX DO%               44227000
                        IF (B~GI[3|I+92].[CF])!0 THEN                   44228000
                        IF B DIV 1000000+1 LEQ DDD[2] THEN              44228100
                        BEGIN                                           44229000
                             DISKWAIT(-A-40,30,B);                      44230000
                             IF (T~DDD[41] DIV 5|6)>999 THEN GO BOMBOUT;44230500
                             USERCODE[I]~SPACE(T);                      44230600
                             FOR J~0 STEP 1 UNTIL (T-1) DIV 30 DO       44231000
                             BEGIN                                      44231500
                                  MOVE(IF (C~T-30|J)>30 THEN 30 ELSE C, 44232000
                                       A+40,USERCODE[I]+J|30);          44232500
                                  IF (C~DDD[40])!0 THEN                 44233000
                                  IF C DIV 1000000}DDD[2] OR C<0 THEN   44233100
                                       GO BOMBOUT ELSE                  44233200
                                       DISKWAIT(-A-40,30,C);            44233500
                             END;                                       44234000
                        END ELSE GO BOMBOUT;                            44234500
                        FOR I~1 STEP 1 UNTIL MIXMAX DO                  44235000
                        IF (C~USERCODE[I])!0 THEN                       44235500
                        BEGIN                                           44236000
                             GI[3|I+92].[24:24]~B~GETESPDISK;           44236500
                          T~(USERCODE[I]~M[C+1]) DIV 5|6;               44236600
                             FOR J~0 STEP 1 UNTIL (T-1) DIV 30-1 DO     44237000
                                  M[C+J|30]~GETESPDISK;                 44237500
                             DISKWAIT(C,T,B);                           44238000
                             FORGETSPACE(C);                            44239000
                        END;                                            44239100
                   END;                                                 44239200
                   GO CONTINUE;                                         44239300
BOMBOUT:           STREAM(D~T~SPACE(3));                                44239400
                        DS~22 LIT"**ABORT LOG DESTROYED~";              44239500
                   SPOUT(T);                                            44239600
                   FOR I~1 STEP 1 UNTIL MIXMAX DO USERCODE[I]~0;        44239700
CONTINUE:                                                               44240000
$ INCLUDE 44240401, IF SHAREDISK;                                       44240099
    SCRATCHVEC~[M[GETSPACE(10,SCRATCHTYPE,SCRATCHSAVE)+2]]  % SHAREDISK 44240100
               & 10[TOSIZE] ;                               % SHAREDISK 44240200
    TOGLE:=TOGLE OR SCRATCHDIRECTORYMASK;                               44240400
    STREAM(A:=BYPASS:=DDD[4],D:=P(.DIRDSK));                            44240500
    BEGIN SI:=LOC A; DS:=8 DEC END;                                     44240600
    DISKBOTTOM:=BYPASS-2;                                               44240700
    EUIO:=[M[GETSPACE((I:=NEUP.NEUF)+EUIOFFSET,0,1)+2]]                 44240710
          &(I+EUIOFFSET)[8:38:10] ;                                     44240715
    PEUIO:=[M[GETSPACE(I,0,1)+2]]&I[8:38:10];                           44240730
    M[EUIO.[CF]-2].[9:6]:=0;  M[PEUIO.[CF]-2].[9:6]:=PEUIO[0]:=0 ;      44240735
    IF I GTR 1 THEN MOVE(I-1,PEUIO,[PEUIO[1]]) ;                        44240740
    EUIO[0]:=0;IF I+EUIOFFSET>1 THEN MOVE(I+EUIOFFSET-1,EUIO,[EUIO[1]]);44240750
              ACTDATE:=WEEKDAY:=0;                                      44241150
$INCLUDE 44241521, IF SHAREDISK;                                        44241199
    IF LDATE THEN                                                       44241200
    BEGIN                                                               44241250
         DISKWAIT(-EUIO.[CF],EUIO.[8:10],EUIOHOLDER) ;                  44241275
         TOGLE:=TOGLE OR ABORTMASK OR USERDISKMASK ;                    44241300
         DIRECTORYFREE~1;                                               44241325
$VOID 44241364                                                          44241350
         IF(I~DIRECTORYSEARCH("SYSTEM ","LOG    ",5))!0 THEN            44241375
         BEGIN LOGFREE~NABS(M[I INX 10]); FORGETSPACE(I) END;           44241376
         DISKWAIT(-A,60,USERDISKBOTTOM);                                44241380
         AVS:=P(DDD[NEUP.NEUF],DUP).NUMENT+P(XCH).STARTWRD+AVDIFFMIN ;  44241385
         AVS:=(AVS:=IF AVS>AVSMAX THEN AVSMAX ELSE IF AVS LSS AVSMIN    44241390
         THEN AVSMIN ELSE AVS)+30-(IF (AVS:=AVS MOD 30)!0 THEN AVS ELSE 44241395
         30) ;                                                          44241396
         CLEANOUT(SYSNO);                                               44241397
         SETUPSCRATCHDIRECTORY;                                         44241398
    END ELSE                                                            44241400
         BEGIN                                                          44241500
              DDD[0]:=DDD[1]:=DDD[2]:=DDD[3]:=0;                        44241510
              DISKWAIT(A,4,DIRECTORYTOP+1);SETUPSCRATCHDIRECTORY;       44241520
              DIRECTORYBUILDER(A,DDD);                                  44242000
$INCLUDE 44242006,IF SHAREDISK;                                         44242004
         END;                                                           44242005
    INTFINISH(A);                                                       44244000
    FORGETSPACE(INTS);                                                  44245000
    GO TO NOTHINGTODO;                                                  44246000
         END;%                                                          44440000
 SAVE REAL PROCEDURE COREND;%                                           44441000
BEGIN REAL T; P(INI); END;%                                             44442000
PROCEDURE INTFINISH(AA);VALUE AA;REAL AA;                               45000000
BEGIN REAL RCW=+0,MSCW=-2;                                              45001000
REAL I=+1,A=+2,T=+3,B=+4,C=+5,J=+6;NAME SD=+7;INTEGER SEGNO=+8;         45002000
INTEGER SEGSIZ=+9,SEGTYPE=+10,DISKADR=+11; REAL DWR=+12;                45003000
REAL LASTL=+13,LOC=+14;ARRAY DDD=+15[*],X=SD[*];REAL W=X,RA=SEGNO;      45003050
REAL RT1=SEGTYPE,Y=DISKADR,Z=DWR,RADD=LASTL,RLEN=LOC;                   45003060
INTEGER XCLICK=XCLOCK;REAL ESU=+16,BACKUP=+17,T1=ESU;                   45003070
ARRAY SEGZERO=BACKUP[*];ARRAY GI=+18[*];REAL LDATE=+19,IRPB=+20;        45003080
REAL IRPTB=+22,SHLM=+23,IRPDBS=+24;INTEGER IRPBTS=+25,IRPWRS=+26;       45003090
REAL IRPTU=+27,IRPBUF=+28,IRPT=+21,INTS=+29;                            45003095
LABEL LOOP,NOGOOD;                                                      45003100
$INCLUDE 45003201, IF STATISTICS;                                       45003199
LABEL LL;                                                               45003200
$ INCLUDE 45019001,IF DATACOM;                                          45003999
    DEFINE FIXSPOS=                                                     45004000
         DISKWAIT(-A,30,DIRECTORYTOP-SYSNO);                            45005000
         QVLEFT:=DDD[16];                                               45006000
         I:=DDD[17];                                                    45007000
         IF THING[12] THEN FIDDLE[12];                                  45008000
         IF THING[21] THEN FIDDLE[21];                                  45009000
         IF THING[30] THEN FIDDLE[30];                                  45010000
         IF THING[39] THEN FIDDLE[39];                                  45011000
         IF I.[1:1] THEN SPOWORD:=NABS(SPOWORD);                        45012000
         IF (SPOWORD EQV I)!NOT 0 THEN                                  45013000
         BEGIN                                                          45014000
              DDD[17]:=SPOWORD;                                         45015000
              SPOSIN(0,3,GETSPACE(1,0,0)+2);                            45016000
         END;                                                           45017000
         DISKWAIT(A,-30,DIRECTORYTOP-SYSNO);                            45018000
         #; % END OF DEFINE FOR FIXSPOS                                 45019000
 DEFINE SDLOC     =SEGZERO[0]#,%                                        45020000
         SDSIZE   =SEGZERO[1]#,%                                        45021000
         PRTLOC   =SEGZERO[2]#,%                                        45022000
         PRTSIZE  =SEGZERO[3]#,%                                        45023000
         FPBLOC   =SEGZERO[4]#,%                                        45024000
         FPBSIZE  =SEGZERO[5]#,%                                        45025000
         FILENOX  =SEGZERO[7]#,%                                        45026000
        STARTSEGNO=SEGZERO[6]#;%                                        45027000
$ INCLUDE 45075251, IF DATACOM AND NOT INQUIRY;                         45027999
DEFINE CKFORSPOSTAS=                                                    45028000
    BEGIN                                                               45029000
    IRPB ~ GETSPACE(30,0,0)+2;                                          45030000
    DISKWAIT(-IRPB,30,DIRECTORYTOP-SYSNO);                              45031000
    FOR IRPTU ~ 1 STEP 1 UNTIL 15 DO                                    45032000
         FOR IRPBUF ~ 0 STEP 1 UNTIL 15 DO                              45033000
              BEGIN                                                     45034000
              IRPTB ~ IRPBUF&IRPTU[40:44:4];                            45035000
              STREAM(SPOSTA ~0  :WRS~IRPWRS~IRPTB DIV 48,               45036000
                     BTS~IRPBTS~IRPTB-(IRPWRS|48),D~IRPB+10);           45037000
                   BEGIN                                                45038000
                   SI~D;                                                45039000
                   WRS(SI ~ SI+8);                                      45040000
                   SKIP BTS SB;                                         45041000
                   IF SB THEN                                           45042000
                        TALLY ~ 1;                                      45043000
                   SPOSTA ~ TALLY;                                      45044000
                   END;                                                 45045000
              IF P THEN                                                 45046000
                   BEGIN                                                45047000
                   IRPTB~ GET(0&IRPTU[9:44:4]&IRPBUF[14:44:4]);         45048000
                   STATION[IRPBUF,IRPTU] ~ IRPTB&(IRPDBS~BASELINK)      45049000
                   [4:4:4]&IRPDBS[18:18:4];                             45050000
                   BASELINK~IRPDBS&IRPTB[4:9:4]&IRPTB[18:14:4];         45051000
                   B:=IRPTB AND @7570000000000;                         45052000
                   BLASTREAD;                                           45053000
                   END;                                                 45067000
              END;                                                      45068000
                                                                        45069000
    FORGETSPACE(IRPB);                                                  45070000
    END;#;                                                              45071000
DEFINE   THING(THING1)=NOT (J~ GET(0&I[9:THING1:9])).[30:1] AND         45072000
          NOT (J.[9:4]=J.[4:4] AND J.[14:4]=J.[18:4])#,                 45073000
         FIDDLE(FIDDLE1)=BEGIN SET(J OR @300000);                       45074000
         SPOWORD:=SPOWORD&(J.[9:9] AND @757)[FIDDLE1:39:9] END#;        45075000
SUBROUTINE BLASTREAD;                                                   45075010
BEGIN FOR IRPDBS:=0 STEP 1 UNTIL 1 DO                                   45075020
    P(WAITIO(B&1[18:47:1],@777300004,30),DEL);                          45075030
    IF NOT (IRPDBS:=GET(B)).[30:1] THEN                                 45075040
    BEGIN                                                               45075050
         IRPTB:=[DDD[60]] INX (@040000040000000 OR B);                  45075060
         IOREQUEST(NABS(IRPTB),IRPTB,[IRPTB]&30[12:42:6]);              45075070
         SLEEP([IRPTB],IOMASK);                                         45075080
         STATION[B.[14:4],B.[9:4]].[22:9]:=0;                           45075090
$ INCLUDE 45075171, IF DATACOM AND RJE AND NOT INQUIRY;                 45075099
         IF IRPDBS THEN                                                 45075100
         BEGIN                                                          45075110
              IRPDBS:=0;                                                45075150
              TWXOUT(0,2,[IRPDBS] INX 0,B);                             45075160
         END;                                                           45075170
         IRPDBS:=GETSPACE(10,0,0)+2;                                    45075180
         MOVE(10,SHLM,IRPDBS);                                          45075190
         SPOUT(IRPDBS INX B);                                           45075200
         M[(IRPDBS:=GETSPACE(10,0,0)+2)-1]:=(*P(DUP))&B[9:9:9];         45075210
         GIMEDATE(IRPDBS,1);                                            45075220
         M[(IRPDBS:=GETSPACE(10,0,0)+2)-1]:=(*P(DUP))&B[9:9:9];         45075230
         TIMEOUT(IRPDBS);                                               45075240
END; END;                                                               45075250
         P(RCW,MSCW,STF);RCW:=RCW&P(XCH)[CTC];                          45075500
              TIMEOUT(SPACE(10));DATEOUT(SPACE(10));                    45075600
$ INCLUDE 45092001, IF DCSPO AND DATACOM AND NOT INQUIRY;               45090000
              CKFORSPOSTAS;                                             45091000
         FIXSPOS;                                                       45092000
              IF (I:=DIRECTORYSEARCH("REMOTE ","USERS  ",5))!0 THEN     45093000
                   BEGIN IF (J:=M[I+10])!0 THEN                         45094000
                        BEGIN DISKWAIT(-A,30,J);                        45094200
                             MCP:=NFLAG(M[A] INX 0);                    45094400
                             X:=M[I].[1:14] - 1;                        45094600
                             T:=0;                                      45094800
LOOP:                                                                   45095000
$ INCLUDE 45099201, IF DATACOM AND RJE AND NOT INQUIRY;                 45095199
                             IF (T:=T+X+1) GEQ 30 THEN                  45095200
                             BEGIN DISKWAIT(-A,30,J:=J+1); T:=0; END;   45095400
                             IF DDD[T] = 140 THEN  %RJE LINES           45095600
                             BEGIN                                      45095800
                                  FOR C:=1 STEP 1 UNTIL X DO            45096000
                                  IF (B:=DDD[C+T]) GTR 1 THEN           45096200
                                  BEGIN                                 45096400
                                       P(GET(B),DEL);                   45096600
                                       LOC:=P(DC19Q,B,LLL,0,INX,.Z,STD);45096800
                                       M[Z].[FF]:=Y:=GETSPACE(5,5,0)+2; 45097000
                                       M[LOC.[FF]].[CF]:=Y;             45097200
                                       M[Y]:=(Z&LOC[FTF]) OR B;         45097400
                                       M[Y:=Y+1]:=Y&Y[CTF]&60[8:38:10]; 45097600
                                       M[Y+1]:=0;                       45097800
                                       M[Y+2]:=M[Y+3]:=4;               45098000
                                       STATION[B.[14:4],B.[9:4]]:=      45098200
                                       B OR 1;                          45098400
                                       BLASTREAD;                       45098600
                                  END;                                  45098800
                                  GO TO LOOP;                           45099000
                             END;                                       45099200
                        END;                                            45099400
                        FORGETSPACE(I);                                 45099600
                   END ELSE MCP:=NOT 0;                                 45099800
                   FORGETSPACE(SHLM);                                   45100000
              X:=[M[GETSPACE(30,0,0)+2]]&30[8:38:10];                   45101000
         TOGLE~TOGLE OR ABORTMASK OR USERDISKMASK ;                     45102000
              IF GI!0 THEN%                                             45103000
              BEGIN%                                                    45104000
              FOR I~20 STEP 1 UNTIL 21 DO                               45104100
               P(WAITIO(@4000100000,@777,I),DEL);                       45104200
              LDATE:=GI[1];                                             45105000
              FOR I ~ 1 STEP 1 UNTIL MIXMAX DO%                         45106000
              IF USERCODE[I]!0 THEN                                     45107000
              BEGIN                                                     45108000
                   J ~ 3|I;                                             45109000
                   SEGZERO~[M[SPACE(5)]];                               45110000
                   JARROW[I]:=X;                                        45111000
                   PROCTIME[I] ~ -CLOCK-P(RTR);%                        45112000
                   P1MIX ~ I;%                                          45113000
                   X[0] ~ GI[J+90];                                     45114000
                   X[1] ~ NABS(GI[J+91]);                               45115000
                   STREAM(A~[LDATE],B~[X[5]]);                          45116000
                   BEGIN SI~A; DS~8 OCT END;                            45117000
                   IF GI[J+92].[1:23] GTR XCLOCK THEN                   45118000
                   IF X[5] MOD 1000 GTR 1 THEN X[5]:=*P(DUP)-1 ELSE     45119000
                   X[5]:=(X[5]-1001)+365+((X[5] DIV 1000)MOD 4=0);      45120000
                   X[5]~GI[J+92].[ 1:23]&X[5][1:25:23];                 45121000
                   X[6]~GI[J+92].[24:24]&USERCODE[I][CTF];              45122000
                   USERCODE[I]~GI[I+180];P1MIX~I;                       45123000
                   X[3] ~ GI[J];%                                       45124000
                   X[4] ~ GI[J+1];%                                     45125000
                   X[7] ~ GI[J+2];%                                     45126000
                   IOTIME[I] ~ 0;%                                      45127000
                   OLDIDLETIME ~ (CLOCK+P(RTR))|2-X[3];%                45128000
                   X[2].[8:10] ~ 99;%                                   45129000
$INCLUDE 45129101, IF STATISTICS;                                       45129099
                   UVROW[I] ~ *P(.LOGARRAY);                            45129100
                   SIGNOFF(X,SEGZERO);%                                 45130000
                   P1MIX~0;                                             45130100
                   JARROW[I]~0; % IN CASE LOG IS NOT ON DISK.           45131000
                   STREAM(I,X,J:=J:=SPACE(10));%                        45131100
                   BEGIN SI:=X;DS:=2WDS;DI:=J;%                         45131200
                         DS:=LIT"*";DI:=DI+7;DS:=LIT"/";                45131300
                         DI:=DI+7;DS:=LIT"=";SI:=LOC I;                 45131400
                         DS:=2DEC;DS:=9LIT":ABORTED~";%                 45131500
                   END;%                                                45131600
                   SPOUT(J);%                                           45131700
    NOGOOD:%                                                            45132000
              END;%                                                     45133000
$INCLUDE 45133101, IF STATISTICS;                                       45133099
              LOGARRAY[9] ~ 0;                                          45133100
              FORGETSPACE(GI);%                                         45134000
              END;%                                                     45135000
              IF GIVEDATE THEN                                          45135100
              BEGIN; STREAM(B~I~SPACE(2));                              45135110
                     DS~11 LIT "#DT PLEASE~";                           45135120
                     SPOUT(I);                                          45135130
                     DATE~-1;                                           45135140
              END;                                                      45135150
              IF GIVETIME THEN                                          45135160
              BEGIN; STREAM(B~I~SPACE(2));                              45135170
                     DS~11 LIT "#TR PLEASE~";                           45135180
                     SPOUT(I);                                          45135190
                     XCLOCK~-5184000;                                   45135200
              END;                                                      45135210
              TOGLE~TOGLE OR HOLDMASK OR KEYBOARDMASK;                  45135220
              COMPLEXSLEEP(XCLOCK}0 AND DATE}0);                        45135230
$ OMIT 45137001, IF SHAREDISK;                                          45136000
              DISKWAIT(-KLUMP,3,DIRECTORYTOP+3);                        45137000
              TOGLE:=TOGLE OR CDMASK;                           %RHR    45138000
$INCLUDE 45142001, IF DATACOM AND NOT INQUIRY AND DCLOG;                45141000
              INITIALIZEDCFILES(A,DDD);                                 45142000
              FORGETSPACE(A);                                           45143000
$ OMIT 45149001, IF NOT DEBUGGING;                                      45144000
              TRACETABLE1 ~ [M[GETSPACE(TRACESIZE,0,0)+2]]&%            45145000
                   TRACESIZE[8:38:10];%                                 45146000
              TRACETABLE2 ~ TRACETABLE1&(GETSPACE(TRACESIZE,0,0)+2)%    45147000
                   [33:33:15];%                                         45148000
              TRACEINX:=TRACAREASTART;                                  45149000
                      TOGLE ~ TOGLE OR SHEETMASK OR STATUSMASK          45150000
                    OR NSECONDMASK;                                     45151000
              READY ~ @341600000;%                                      45152000
              TERMIX~STOPJOB~@1777;                                  %ST45153000
              DISKWAIT(-(X INX 0),-30,0);                               45154000
              IF (T:=DIRECTORYSEARCH(X[13+5|SYSNO],X[14+5|SYSNO],17))=0 45155000
                   THEN                                                 45156000
              BEGIN NT1~GETSPACE(4,0,0)+2;%                             45157000
                   STREAM(NT1);%                                        45158000
                   DS ~ 28 LIT "##LOAD INTRNSC/DISK NOW....~";%         45159000
                   SPOUT(NT1);%                                         45160000
              END ELSE BEGIN%                                           45161000
                   INTRINSICTABLEBUILDER(T);  FORGETSPACE(T);%          45162000
              END;%                                                     45163000
$INCLUDE 45165001, IF SHAREDISK;                                        45164000
              UNLOCK(0);                                                45165000
              FORGETSPACE(X);                                           45166000
              INTFREE ~ TRUE;%                                          45167000
              IF (T:=DIRECTORYSEARCH(X[10+5|SYSNO],X[11+5|SYSNO],17))!0 45168000
$INCLUDE 45170001, IF STATISTICS;                                       45169000
              THEN MCPTOP:=MCPBASE+M[T INX 7]; IF T NEQ 0               45170000
                   THEN FORGETSPACE(T) ELSE                             45171000
              LBMESS(-X[10+5|SYSNO],X[11+5|SYSNO],"NOT ","IN DIR",      45172000
                   "ECTORY",0,0);                                       45173000
$ OMIT 45175001, IF SHAREDISK;                                          45174000
              MCPFREE:=1;                                               45175000
$INCLUDE 45177001, IF INQUIRY AND NOT DATACOM;                          45176000
         ILL~P(.ILL)&(@37)[13:43:5] & P(.ILL)[CTF];BUFFSIZE ~ 30;       45177000
$INCLUDE 45228001, IF STATISTICS;                                       45178000
LL:                                                                     45178100
         IF (T:=DIRECTORYSEARCH("STLOG  "                               45179000
$INCLUDE 45181001, IF SHAREDISK;                                        45180000
         &(SYSNO+17)[36:42:6]                                           45181000
         ,"STATS  ",5))=0 THEN                                          45182000
            BEGIN                                                       45183000
                 T:=SPACE(30);                                          45184000
                 MOVE(30,T-1,T);                                        45185000
                 M[T INX 0]:=@0003600036000101;                         45186000
                 STREAM(DATE,X:=T INX 3);                               45187000
                    BEGIN                                               45188000
                         SI:=LOC DATE; DS:=8 OCT; DI:=X;                45189000
                        DS:=2LIT"+#"; SI:=X; SI:=SI+5; DS:=3 CHR;       45190000
                    END;                                                45191000
                 M[T INX 9]:=1;                                         45192000
                 M[T INX 4].[9:1]:=1;                                   45193000
                 M[T INX 10]:=GETUSERDISK(-(M[T INX 8]:=400));          45194000
                ENTERUSERFILE(-"STLOG  "                                45195000
$INCLUDE 45197001, IF SHAREDISK;                                        45196000
                 &(SYSNO+17)[36:42:6]                                   45197000
                 ,"STATS  ",T-1);                                       45198000
                 FORGETSPACE(T);                                        45198100
                 GO TO LL;                                              45198200
           END;                                                         45199000
          STATWORD:=T.[FF];                                             45199100
         FORGETSPACE(T);                                                45200000
         IF (T:=DIRECTORYSEARCH("SYSTEM "                               45201000
$INCLUDE 45203001, IF SHAREDISK;                                        45202000
                &(SYSNO+17)[42:42:6]                                    45203000
                ,"STATS  ",5))=0 THEN                                   45204000
            BEGIN                                                       45205000
                 T:=SPACE(30);                                          45206000
                 MOVE(30,T-1,T);                                        45207000
                 M[T INX 0]:=@0007400074000102;                         45208000
                 STREAM(DATE,X:=T INX 3);                               45209000
                    BEGIN                                               45210000
                         SI:=LOC DATE; DS:=8 OCT; DI:=X;                45211000
                         DS:=2LIT"+#";SI:=X; SI:=SI+5;DS:=3 CHR;        45212000
                    END;                                                45213000
                 M[T INX 7]:=1;                                         45214000
                 M[T INX 4].[9:1]:=1;                                   45215000
                 M[T INX 9]:=1;                                         45216000
                 SYSTATBASE:=M[T INX 10]:=                              45217000
                 GETUSERDISK(-(M[T INX 8]:=200));                       45218000
                 ENTERUSERFILE(-"SYSTEM "                               45219000
$INCLUDE 45221001, IF SHAREDISK;                                        45220000
                                &(SYSNO+17)[42:42:6]                    45221000
                                ,"STATS  ",T-1);                        45222000
            END ELSE BEGIN                                              45223000
            DISKWAIT(-COUNTARRAY.[CF],60,M[T INX 10]);                  45224000
            SYSTATBASE:=M[T INX 10];                                    45224100
            IF COUNTARRAY[28] NEQ DATE THEN COUNTARRAY[29]:=0 END;      45225000
            INTERVAL:=108000;                                           45226000
            FORGETSPACE(T);                                             45227000
            COUNTARRAY[60]:=LOGARRAY[30]:=@3777777777777777;            45228000
              RRRMECH ~ RRRMECH AND @7637777777;%                       45229000
              READY ~ READY AND @7637777777;%                           45230000
$INCLUDE 45232001, IF DCSPO AND DATACOM AND NOT INQUIRY;                45231000
              QVLEFT ~ (QV ~ QVLEFT) | 60;                              45232000
$INCLUDE 45245001 , IF INQUIRY AND NOT DATACOM ;                        45233000
         NEXTINQ ~ CURRINQ ~ 0 ;                                        45234000
              A~GETSPACE(5,0,0) + 2;%                                   45235000
              STREAM(A);BEGIN DS~35 LIT %                               45236000
              "{!!!!!!-H/L-{REPEAT PLEASE{!!!!!!~" END;%                45237000
              FOR T~1 STEP 1 UNTIL 15 DO %                              45238000
              BEGIN%                                                    45239000
                   DO UNTIL%                                            45240000
         NOT(Y~WAITIO(A&T[28:43:5]&T[13:43:5],@377,30));                45241000
                   IF Y=@20 THEN DO UNTIL%                              45242000
            (Y~WAITIO(A&T[28:43:5]&T[13:43:5],@377,30))!@20 AND NOT Y;  45243000
              END; FORGETSPACE(A);                                      45244000
     ORF~0;ORR~ NOT 0;                                                  45245000
                                                                        45247000
$INCLUDE 45247101, IF BREAKOUT AND AUXMEM;                              45247099
BREAKTOG~1;  BREAKING~0;                                                45247100
         P(P&RCW[CTC],0,RDS,0,XCH,P&P[CTF],STF);                        45248000
         END;%                                                          45249000
              :16: GO TO START;                % 20 - FIRST CODE%       46000000
              :18: GO TO TIMER;                % 22 - TIME INTERVAL%    46001000
              :19: GO TO IOBUSY;               % 23 - I-O BUSY%         46002000
              :20: GO TO KEYBOARDREQUEST;      % 24 - KEYBOARD REQUEST% 46003000
              :21: PRINTERFINISH(20);          % 25 - PRINTER 1 FINISH% 46004000
              :22: PRINTERFINISH(21);          % 26 - PRINTER 2 FINISH% 46005000
              :23: IOFINISH(RESULT1,1);        % 27 - CHANNEL 1 COMPLETE46006000
              :24: IOFINISH(RESULT2,2);        % 30 - CHANNEL 2 COMPLETE46007000
              :25: IOFINISH(RESULT3,3);        % 31 - CHANNEL 3 COMPLETE46008000
              :26: IOFINISH(RESULT4,4);        % 32 - CHANNEL 4 COMPLETE46009000
              :27: GO TO P2BUSY;               % 33 - P2 BUSY%          46010000
              :28: GO TO INQUEST;              % 34 INQUIRY%            46011000
              :29: DO UNTIL FALSE;             % 35 - SPECIAL INTERRUPT 46011100
$ OMIT 46012001, IF SHAREDISK;                                          46011999
              :30: DO UNTIL FALSE;             % 36 DISK 1 RD CK FINISH 46012000
$ INCLUDE 46012501, IF SHAREDISK;                                       46012499
              :30: GO FINDIT;            % 36 LOCKED ADDRESS FREE       46012500
              :31: DO UNTIL FALSE;             % 37 DISK 2 RD CK FINISH 46013000
              :32: P(0);      GO TO P2PROCESS; % 40 - P2 MEMORY PARITY% 46014000
              :33: P(4,17);   GO TO P2PROCESS; % 41 - P2 INVALID ADDRESS46015000
              :34: P(4,1);    GO TO P2PROCESS; % 42 - P2 STACK OVERFLOW 46016000
              :36: P(6);      GO TO P2PROCESS; % 44 - P2 COMMUNICATE%   46017000
              :37: P(8);      GO TO P2PROCESS; % 45 - P2 PROGRAM RELEASE46018000
              :38: P(10);     GO TO P2PROCESS; % 46 - P2 CONTINUITY BIT 46019000
              :39: P(18);     GO TO P2PROCESS; % 47 - P2 PRESENCE BIT   46020000
              :40: P(12,0);   GO TO P2PROCESS; % 50 - P2 FLAG BIT       46021000
              :41: P(12,1);   GO TO P2PROCESS; % 51 - P2 INVALID INDEX  46022000
              :42: P(12,2);   GO TO P2PROCESS; % 52 - P2 EXP UNDERFLOW  46023000
              :43: P(4,9);    GO TO P2PROCESS; % 53 - P2 EXP OVERFLOW%  46024000
              :44: P(4,11);   GO TO P2PROCESS; % 54 - P2 KINT OVERFLOW% 46025000
              :45: P(12,3);   GO TO P2PROCESS; % 55 - P2 DIVIDE BY ZERO 46026000
              :48: P(0);      GO TO P1PROCESS; % 60 - P1 MEMORY PARITY% 46027000
              :49: P(4,17);   GO TO P1PROCESS; % 61 - P1 INVALID ADDRESS46028000
STACKOVERFLOW :50: P(4,1);    GO TO P1PROCESS; % 62 - P1 STACK OVERFLOW 46029000
              :52: P(6);      GO TO P1PROCESS; % 64 - P1 COMMUNICATE%   46030000
              :53: P(8);      GO TO P1PROCESS; % 65 - P1 PROGRAM RELEASE46031000
              :54: P(10);     GO TO P1PROCESS; % 66 - P1 CONTINUITY BIT 46032000
              :55: P(18);     GO TO P1PROCESS; % 67 - P1 PRESENCE BIT   46033000
              :56: P(12,0);   GO TO P1PROCESS; % 70 - P1 FLAG BIT       46034000
              :57: P(12,1);   GO TO P1PROCESS; % 71 - P1 INVALID INDEX  46035000
              :58: P(12,2);   GO TO P1PROCESS; % 72 - P1 EXP UNDERFLOW  46036000
              :59: P(4,9);    GO TO P1PROCESS; % 73 - P1 EXP OVERFLOW%  46037000
              :60: P(4,11);   GO TO P1PROCESS; % 74 - P1 INT OVERFLOW%  46038000
              :61: P(12,3);   GO TO P1PROCESS; % 75 - P1 DIVIDE BY ZERO 46039000
START:*:P(..COREND,LOD,4,INX,STS);%                                     46040000
         MCPBASE:=M[0].[18:30];                                         46040100
         DIRECTORYTOP~M[1];                                             46040200
$ INCLUDE 46040401, IF SHAREDISK;                                       46040299
         SYSMAX:=M[0].[14:2];                                           46040300
         SYSNO:=M[0].[16:2];                                            46040400
                                                                        46041000
              INITIALIZE;%                                              46042000
 TIMER::      IF (CLOCK ~ CLOCK+64).[37:5] = 0 OR%                      48000000
                   (SECONDCTR ~ (P2MIX{0)+SECONDCTR)} 4 OR%             48001000
                   (XCLOCK ~ XCLOCK+64) } 5184000 THEN%                 48002000
                   BEGIN IF P(TIO) ! 0 THEN%                            48003000
                        IF FIRSTWAIT ! NEXTWAIT THEN%                   48004000
                             NEWIO;%                                    48005000
                        SECONDCTR ~ 3;%                                 48006000
                        IF NSECONDREADY THEN%                           48007000
                             BEGIN TOGLE~TOGLE AND NOT NSECONDMASK;     48008000
                                  INDEPENDENTRUNNER(P(.NSECOND),0);%    48009000
                   END       END;%                                      48010000
$INCLUDE 48010066, IF STATISTICS;                                       48010004
             COUNTUPBY(3,1);                                            48010005
             COUNTUPBY(14,SECONDCTR LEQ 1);                             48010010
$INCLUDE 48010013, IF AUXMEM;                                           48010011
             COUNTUPBY(44,UNIT[16].[13:5] NEQ 0);                       48010012
             COUNTUPBY(7,NT1:=UNIT[18].[13:5] NEQ 0);                   48010015
             COUNTUPBY(8,NT2:=UNIT[19].[13:5] NEQ 0);                   48010020
             COUNTUPBY(17,(NT1+NT2)=2);                                 48010025
             COUNTUPBY(43,(P1MIX=0) AND (NT1:=(NT1 OR NT2)));           48010030
             COUNTUPBY(39,(NT2:=(P1MIX NEQ 0)) AND NT1);                48010035
             IF (P2MIX GTR 0 AND NT1) THEN COUNTUPBY(39,16777216);      48010040
             COUNTUPBY(6,PBUSY);                                        48010050
             IF NT2 THEN COUNTUPBY(6,16777216);                         48010055
             COUNTUPBY(31,NT1:=P2MIX GTR 0);                            48010060
             IF (NT2 AND NT1) THEN COUNTUPBY(31,16777216);              48010065
$INCLUDE 48011701,IF DATACOM AND DCSPO AND NOT INQUIRY;                 48010099
              IF QV!0 THEN                                              48010100
                   BEGIN                                                48010200
                   IF (QVLEFT~QVLEFT-64){0 THEN                         48010300
                        BEGIN                                           48010400
                        QVLEFT~ QV|64;                                  48010500
                   IF QTRDY THEN                                        48010600
                        BEGIN                                           48010610
                        QTRDY ~ FALSE;                                  48010620
                        INDEPENDENTRUNNER(P(.QTIMER),0);                48010630
                        END;                                            48010640
                        END;                                            48010700
                   END;                                                 48010900
              IF M[WATER]!WATER THEN                                    48011000
                   BEGIN % EGGTIMER                                     48011100
                   EGGCLK ~ EGGCLK INX 1;                               48011200
                   IF EGGSELECTSTOPPED THEN                             48011300
                        IF P(WATER,0&NOT(EGGCLK)[CTF],LLL,DEL)!WATER    48011400
                             THEN                                       48011500
                             BEGIN                                      48011510
                             EGGSELECTSTOPPED ~ FALSE;                  48011520
                           INDEPENDENTRUNNER(P(..EGGSELECT),0);         48011600
                             END;                                       48011610
                   END EGGTIMER;                                        48011700
              IF (P(RRR) OR RRRMECH)!READY THEN                         48012000
              IF STATUSBIT THEN                                         48012500
                   BEGIN TOGLE~TOGLE AND NOT STATUSMASK;                48013000
                        INDEPENDENTRUNNER(P(.STATUS),0);%               48014000
                   END;%                                                48015000
              IF P2MIX>0 THEN                                           48015100
              IF NSLATE=LSLATE THEN                                     48015200
              IF JOBNUM}0 THEN                                          48015300
              IF (PRYOR[P2MIX] INX 0)}(PRYOR[BED[0].[3:5]].[FF]) THEN   48015400
                 GO TO P2FAKE;                                          48015500
 EXTERNAL::%                                                            48016000
         IF P1MIX = 0 THEN GO TO NOTHINGTODO;%                          48017000
 INITIATE::%                                                            48018000
         NT1 ~ PRT[P1MIX,8];%                                           48019000
         IF P2MIX=0 THEN GO TO COMINIT;                                 48019500
         IF NSLATE = LSLATE THEN%                                       48020000
         IF JOBNUM < 0 THEN%                                            48021000
 COMINIT:%                                                              48022000
$INCLUDE 48022101, IF DATACOM AND NOT INQUIRY;                          48022099
IF NOT DCWAITING THEN                                                   48022100
         IF NOPROCESSTOG < 0 THEN%                                      48023000
 GOGOGO:      BEGIN IF PRT[P1MIX,0] ! @2525252525252525 THEN%           48024000
                        BEGIN P(64,STS); GO TO STACKOVERFLOW END;       48025000
                   P(INI);%                                             48026000
                   IF TERMIX.[33:15] = P1MIX THEN%                      48027000
                        BEGIN NT2 ~ TERMIX.[18:15];%                    48028000
                             P(NT1,STS,0,STF);%                         48029000
                             TERMINALMESSAGE(NT2);%                     48030000
                        END;%                                           48031000
                   IF STOPJOB=P1MIX THEN                             %ST48031100
                   BEGIN P(NT1,STS,0,STF); STOPM(TRUE) END;          %ST48031200
                   SECONDCTR ~ 0;%                                      48032000
              IF P2MIX ! 0 THEN P(NT1,IP1);%                            48033000
                   IF NSLATE=LSLATE THEN%                               48034000
              IF JOBNUM < 0 THEN P(NT1,IP1);%                           48035000
              P(NT1,IP2);%                                              48036000
                   P2MIX ~ P1MIX;%                                      48037000
              GO TO NOTHINGTODO;%                                       48038000
              END;%                                                     48039000
         P(INI);%                                                       48040000
         P(NT1,STS,0,STF);%                                             48041000
         SLEEP([NOPROCESSTOG],-0);%                                     48042000
         NT1 ~ PRT[P1MIX,8];%                                           48043000
         GO GOGOGO;%                                                    48044000
 NOTHINGTODO::P1MIX ~ 0;%                                               48045000
$INCLUDE 48045901, IF STATISTICS;                                       48045899
             PBUSY:=1;                                                  48045900
              P(INI);%                                                  48046000
$INCLUDE 48046601, IF DATACOM AND NOT INQUIRY;                          48046099
              IF DCWAITING THEN                                         48046100
                   BEGIN                                                48046200
                   DCWAITING ~ FALSE;                                   48046300
                   P(DCQPTSTACK,STS,0,STF);                             48046400
                   DCQPT(FALSE);                                        48046500
                   END;                                                 48046600
              IF NSLATE ! LSLATE THEN%                                  48047000
              IF STACKUSE THEN%                                         48048000
                   BEGIN TOGLE~TOGLE AND NOT STACKMASK;                 48049000
                        P(ISTACK,STS);%                                 48050000
                        P(0,STF);%                                      48051000
                       NSLATE := NSLATE+2 AND SLATEND;%                 48052000
                        SECONDCTR ~ 0;%                                 48053000
                        NT4 ~ SLATE[NSLATE+1];%                         48054000
                        P(MKS,NT4,DIB 0,LOD,SLATE[NSLATE],COC);%        48055000
                        GO TO NOTHINGTODO;%                             48056000
                   END;%                                                48057000
              P( 64,STS);%                                              48058000
              IF TOGLE THEN GO TO PROCSWIT; COMMENT TEST HP2TOG;        48059000
              FOR NT1 ~ 0 STEP 2 UNTIL JOBNUM DO%                       48060000
                   BEGIN P(INI);%                                       48061000
                        NT2 ~ BED[NT1];%                                48062000
                        IF P(NT3 ~ BED[NT1+1],TOP,XCH,DEL,NOT) THEN%    48063000
                             BEGIN P1MIX ~ [NT2].MIXF;%                 48064000
                                  P([NT2].[18:15],STS);%                48065000
                                  NT3 ~ NT3;%                           48066000
                                  P1MIX ~ 0;%                           48067000
                                  P( 64,STS);%                          48068000
                             END;%                                      48069000
                        IF NOT(NT2 AND NT3) ! NOT 0 THEN%               48070000
                             BEGIN P1MIX ~ [NT2].MIXF;%                 48071000
                                  PROCTIME[P1MIX] ~ PROCTIME[P1MIX]%    48072000
                                       -P(RTR)-CLOCK;%                  48073000
                                  IF JOBNUM ! NT1 THEN%                 48074000
                                  STREAM(N~JOBNUM-NT1,A~[BED[NT1+2]],%  48075000
                                       B~[BED[NT1]]);%                  48076000
                                       BEGIN SI~A; DS ~ N WDS END;%     48077000
                                  JOBNUM ~ JOBNUM-2;%                   48078000
                                  SECONDCTR ~ 0;%                       48079000
                                  PRYOR[P1MIX].[FF]~ 0;                 48079100
                                  P([NT2],STF,XIT);%                    48080000
                             END;%                                      48081000
                   END;%                                                48082000
$INCLUDE 48083001, IF STATISTICS;                                       48082999
              PBUSY~0;                                                  48083000
              DO DO P(INI) UNTIL (P(RRR) OR RRRMECH)!READY%             48084000
                   UNTIL STATUSBIT;%                                    48084100
              TOGLE~TOGLE AND NOT STATUSMASK;                           48084200
              INDEPENDENTRUNNER(P(.STATUS),0);%                         48084300
              GO TO NOTHINGTODO;%                                       48084400
 P2FAKE:                TOGLE~TOGLE OR HP2MASK;                         48085000
                        P(HP2,INI);%                                    48086000
 PROCSWIT:              P(16);                                          48087000
 P2PROCESS::%                                                           48095000
         IF P(P1MIX,P2MIX,.P1MIX,~,.P2MIX,STN) ! 0 THEN%                48096000
              P(PRT[P2MIX,8],IP2);%                                     48097000
         TOGLE~TOGLE AND NOT HP2MASK;                                   48098000
 P1PROCESS::%                                                           48099000
         P(PRT[P1MIX,8],STS,0,STF);%                                    48100000
         GO TO P(ONEOHONE);%                                            48101000
         GO TO MEMORYPARITY;      %  0%                             %WF 48102000
         P(NOP,NOP);              %  2%                             %WF 48102100
         GO TO NORMALERROR;       %  4%                                 48103000
         SHORTCOMMUNICATE;        %  6%                                 48104000
         PROGRAMRELEASE;          %  8                                  48105000
         CONTINUITYBIT;           % 10                                  48106000
         INTERRUPT(ONEOHTWO); P(NOP); % 12                              48107000
         GO TO INITIATE;          % 16                                  48108000
         MAKEPRESENT(ANALYSIS);   % 18                                  48109000
 RETURN::     NT1~PRT[P1MIX,8];                                         48110000
              GO TO COMINIT;                                            48111000
 IOBUSY:: NT1 ~ UNIT[NT2~CHANNEL[0]];%                                  48117000
         IOTIME[LOCATQUE[NT1.[FF]].[3:5]] ~ *P(DUP) + CLOCK +P(RTR);%   48117100
         UNIT[NT2] ~ NT1&0[13:5:5];%                                    48118000
         STARTIO(NT2);%                                                 48119000
         GO TO EXTERNAL;%                                               48120000
 P2BUSY::SAVEMIX(P1MIX);%                                               48121000
         P1MIX ~ P2MIX;%                                                48122000
         P2MIX ~ -1;%                                                   48123000
         OLDIDLETIME ~ OLDIDLETIME-CLOCK-P(RTR);%                       48124000
         GO TO EXTERNAL;%                                               48125000
$ INCLUDE 48125401, IF SHAREDISK;                                       48125099
FINDIT::                                                                48125100
         IF NOT FINDINGADDRESS THEN                                     48125150
         BEGIN                                                          48125200
              FINDINGADDRESS:=1;                                        48125250
              INDEPENDENTRUNNER (P(..FINDFREEADDRESS),1);               48125300
         END;                                                           48125350
         GO TO EXTERNAL;                                                48125400
INQUEST::                                                               48125500
$INCLUDE 48126101, IF DATACOM AND NOT INQUIRY;                          48125599
             INQCT ~ INQCT+1;                                           48126000
              IF DCQPTSTOPPED THEN                                      48126010
                   BEGIN                                                48126020
                   DCQPTSTOPPED ~ FALSE;                                48126025
                   IF DCQPTSTACK!0 THEN                                 48126030
                        BEGIN                                           48126040
                        DCWAITING ~ TRUE;                               48126050
                                                                        48126060
                        END                                             48126070
                   ELSE                                                 48126080
                        INDEPENDENTRUNNER(P(..DCQPT),1);                48126090
                   END;                                                 48126100
                                                                        48126110
$INCLUDE 48126301, IF INQUIRY AND NOT DATACOM;                          48126199
             IF (INQCT ~ INQCT + 1) = 1 THEN                            48126200
                  INDEPENDENTRUNNER(P(.INQUPT),1);                      48126300
$OMIT 48126431, IF DATACOM OR INQUIRY;                                  48126400
         STREAM(B~NT1~ GETSPACE(10,0,0)+2);                             48126410
            DS~ 42 LIT "#DATACOM/INQUIRY INTERRUPT IGNORED BY MCP~";    48126420
         SPOUT(NT1);                                                    48126430
            GO TO EXTERNAL;%                                            48127000
 KEYBOARDREQUEST::%                                                     48128000
         NOBACKTALK ~ TRUE;%                                            48129000
         IF NOT KEYBOARDREADY THEN GO TO EXTERNAL;%                     48130000
         IF (KEYBOARDCOUNTER ~ KEYBOARDCOUNTER+1) = 1 THEN%             48131000
         INDEPENDENTRUNNER(P(.KEYIN),1);%                               48132000
         GO TO EXTERNAL;%                                               48133000
 MEMORYPARITY::%                                                    %WF 48134000
         TERMINATE(P1MIX);%                                         %WF 48135000
         TERMINALMESSAGE(32);%                                      %WF 48136000
 NORMALERROR::%                                                         48137000
              IF P1MIX = 0 THEN%                                        48138000
                   BEGIN P(@100,STS);%                                  48139000
                        PUNT([PUNTER[13]]);%                            48140000
                   END;%                                                48141000
              IF ONEOHTWO=1 THEN                                        48141100
              BEGIN P(NFO[(NT1~(P1MIX-1)|NDX)+2],STS);                  48141200
                   PRT[P1MIX,15]~M[PRT[P1MIX,8]];                       48141300
                   PRT[P1MIX,8]~-[PRT[P1MIX,15]];                       48141400
                   PRT[P1MIX,3]~NFO[NT1];                               48141500
                   PRT[P1MIX,4]~NFO[NT1+1];                             48141600
              END;                                                      48141700
              P(ONEOHTWO);                                              48142000
                   IF P(DUP,DUP)=9 OR P(XCH)=11 THEN                    48142100
                        ERRORFIXER((ONEOHTWO=9)+1);                     48142200
              TERMINATE(P1MIX);                                         48142500
              NT1 ~ P;                                                  48143000
              TERMINALMESSAGE(NT1);                                     48143500
 DIFFCOM::NT4~P;                                                        48144000
         P(0,STF,PRT[P1MIX,8],STS,MKS,NT4,DIB 0,LOD,XCH,COC);           48145000
         GO TO INITIATE;                                                48146000
END.%                                                                   48161000
