% C O B O L  C O M P I L E R    X I I I . 0      7/15/71                00000100
              BEGIN                                                     00000200
          COMMENT ITITALIZE AND DECLARE VARIABLES AND GLOBAL ARRAYS ;   00000300
COMMENT OPERATOR CODES FOR EMIT PROCEDURES ;                            00000400
         INTEGER ERRCNT; DEFINE COMPE =ERRCNT~ERRCNT+1; COMPA #;%TR-263 00000401
                   INTEGER SAVETIME ; %DONT MOVE MCP NEEDS              00000402
                   INTEGER PRT27;  %  DO NOT MOVE              %CJC 026 00000403
    % ERRCNT, SAVETIME AND PRT27 MUST NOT BE MOVED             %CJC 026 00000404
    % NO OTHER DECLARATIONS MAY BE MADE PRIOR TO THIS CARD     %CJC 026 00000405
    %PRT27 IS SEQUENCE NUMBER OF CARD BEING PROCESSED          %CJC 026 00000406
    %    AS IN THE ALGOL COMPILER.                             %CJC 026 00000407
DEFINE  ADD= 16#, NOP=322#, SUB= 48#, TRZ= 62#, TRN= 61#, TRW=  5#,     00000500
                             %DECIMAL EQUIVALENTS OF OPERATOR           00000501
        DID=128#, MUL= 64#, IDV=384#, TGR= 23#, TEG= 22#, TEQ= 20#,     00000600
                             %  CODES FOR EMITTING MACHINE              00000601
        RDV=896#, DLA= 17#, DLS= 49#, TEL= 28#, TLS= 29#, TNE= 21#,     00000700
                             %  LANGUAGE.                               00000701
        DLM= 65#, DLD=129#, LND= 67#, TAN= 30#, BIT= 31#, CGR= 51#,     00000800
        LOR= 35#, LQV=131#, LNG= 19#, CEG= 50#, CEQ= 48#, CEL= 56#,     00000900
        GRT= 37#, GRQ= 21#, EQL=581#, CLS= 57#, CNE= 49#, JFW= 39#,     00001000
        LSQ=533#, LES=549#, NEQ= 69#, JRV= 47#, JFC= 37#, JRC= 45#,     00001100
        BFW=550#, BBW=534#, BFC= 38#, BNS= 42#, ENS= 41#, JNS= 38#,     00001200
        BBC= 22#, CDC=168#, STD= 68#, JNC= 36#, SFS= 25#, SRS= 24#,     00001300
        SND=132#, ISD=532#, ISN=548#, SFD= 14#, SRD= 15#, BSS=  3#,     00001400
        DIA= 11#, DIB= 12#, TRB= 13#, BSD=  2#, SSA= 13#, SDA= 12#,     00001500
        FCE= 15#, FCL= 14#, SSP=582#, SCA= 44#, RSA= 43#, RDA=  4#,     00001600
        XCH=133#, DUP=261#, LOD=260#, RCA= 40#, SES= 18#, SED=  6#,     00001700
        INX= 24#, COC= 40#, COM=130#, TSA= 46#, TDA=  7#, FAD= 59#,     00001800
        PRL= 18#, CHS=134#, MKS= 72#, FSU= 58#, ICV= 55#, OCV= 54#,     00001900
        XIT= 71#, RTN= 39#, OPR=  1#, SEC= 34#, INC= 32#, STC= 33#,     00002000
        DEL= 10#, CMN=584#,        CMX= 64#,TBN= 10#,     COMMENT 6- 1; 00002002
        CTC=709#, CTF=965#, FTC=197#, FTF=453#,          COMMENT 11-16; 00002004
        ISO=  9#, XRT= 12#,                              COMMENT 11-17; 00002008
        LFU=806#, LBU=790#, LFC=294#, LBC=278#,          COMMENT 11-16; 00002010
        CBD=233#, CBN=105#, CFD=169#, CFN= 41#,          COMMENT 11-16; 00002012
COMMENT WHEN EMITTING ISO OPERATOR, FOR EXAMPLE EMIL(ISO,NN), THE VALUE 00002014
  NN MUST BE PRE-CALCULATED BY THE FOLLOWING METHOD:                    00002015
    1. DETERMINE L(# OF CHAR IN A REG AFFECTED, WHICH INCLUDE           00002016
       STARTING AND ENDING BITS) AND S(# OF BITS SHIFTED) REQUIRED IN   00002017
       OBJECT CODE AS STATED IN PRODUCT SPECS.                          00002018
    2. MULTIPLY L TIMES 6 ADD S. USE RESULT AS NN.                      00002019
  THE FOLLOWING TABLE GIVES EXAMPLES FOR ISOLATING 15 BITS :            00002020
        PRECEDED BY DIA                  L     S      NN                00002021
            6,12,18,24,30                3     3      21                00002022
         1, 7,13,19,25,31                3     2      20                00002023
         2, 8,14,20,26,32                3     1      19                00002024
         3, 9,15,21,27                   3     0      18                00002025
         4,10,16,22,28                   4     5      29                00002026
         5,11,17,23,29                   4     4      28             ;  00002027
       LITC=  0#,OPDC=  2#, TRS= 63#, BIR= 53#, BIS= 52#, CRF= 35#,     00002100
       DESC=  3#,NOOP=  4#, TRP= 60#, EXC=  0#, SSN= 70#;               00002200
              COMMENT PATCHES 00002300 - 00004850  9-16 JH             ;00002290
              INTEGER ARRAY IFUNCT   [0:9  ]; COMMENT INTRINSIC         00002300
                      FUNCTIONS PRT ADDRESSES;                          00002350
         REAL ARRAY MSG[0:148];  % ERROR MESSAGES              %CJC 053 00002400
    DEFINE SDT = SEGDICT[SDX.[36:5],SDX.[41:7]]#,          COMMENT DF;  00002420
           PRRRT= PRTB[PRTA.[36:5], PRTA.[41:7]]#,         COMMENT DF;  00002430
       HRLINK = [33:15]#,SAMNAM = [18:15]#,%                            00002435
           PRSRCH=PRTB[T1.[36:5],T1.[41:7]]#   ;           COMMENT DF;  00002440
              REAL    ARRAY MESS     [0:31 ]; COMMENT TEMP ERROR MSG;   00002450
              REAL    ARRAY DEBUGN   [0:204];% WORD MODE (0:123),       00002500
                      %CHARACTER MODE(124:188), PARTIAL WORD & OTHER    00002550
                      %WORD MODE SYLLABLES (189:204) FOR DEBUGN PRINTOUT00002600
         SAVE REAL    ARRAY HALE     [0:258]; COMMENT DICT STACK HEADS; 00002850
         SAVE REAL    ARRAY OCIX     [0:15 ];                           00002920
                             %CONTAINS THE SIZE OF EACH DIMENSION       00002921
                             %FOR SUBSCRIPTED VARIABLES. USED BY        00002922
                             %SUBLST.                                   00002923
         SAVE REAL    ARRAY POWR     [0:16 ]; COMMENT POWERS OF TEN;    00002950
         SAVE REAL    ARRAY ISYMB    [0:16 ]; COMMENT CURRENT SYMBOL;   00003000
         SAVE REAL    ARRAY NSYMB    [0:16 ]; COMMENT NEXT SCAN SYMBOL; 00003050
         SAVE REAL    ARRAY CALL     [0:19 ];                           00003150
                             %USED TO DETERMINE THE RELATIVE ADDR       00003151
                             %OF STACK PARAMETERS WHEN GENERATING       00003152
                             %CHARACTER MODE CODE.                      00003153
         SAVE REAL    ARRAY CS       [0:20 ];                           00003200
                             %CONTAINS THE DESCRIPTION OF THE           00003201
                             %CURRENT SUBJECT OF A CONDITION.           00003202
         SAVE REAL    ARRAY CI       [0:20 ];                           00003300
                             %CONTAINS THE DESCRIPTION OF THE           00003301
                             %CURRENT ITEM BEING SCANNED.               00003302
     REAL ARRAY HPAR    [0:45] ;       % [0:19] HARDWARE PARAMETERS     00003350
DEFINE        CY   = HPAR [41]#,       % [20:40] TEMP HOLD FOR CI       00003360
              D    = HPAR [42]#,       % CY = TEMP FOR SEARCH           00003370
              HDWR = HPAR [43]#,       % PERIPHERAL UNIT TYPE           00003380
              HQX  = HPAR [44]#,       % OBJECT TIME LOCATION FOR SUBSC 00003390
              IX   = HPAR [45]#;       % NEXT AVAIL LOC INFO            00003400
         SAVE REAL    ARRAY CSP      [0:31 ]; COMMENT CORRESP. OUTPUT;  00003450
         SAVE REAL    ARRAY LTR      [0:31 ];                           00003500
                             %ARRAY USED BY SETLTR TO DETERMINE         00003501
                             %SIZE, CLASS, SCALE, ETC.                  00003502
         SAVE REAL ARRAY EDIT[0:128]; %                            SI16100003600
                             %MOVE PICTURE ANALYSIS ARRAY.              00003601
         COMMENT REL 11 THRU 16 ;                                       00003650
                             %CONTAINS INVERSE OPERATORS FOR WORD       00003651
                             %COMPARE.                                  00003652
         COMMENT REL 17 THRU 22 ;                                       00003700
                             %CONTAINS COMPARE OPERATORS FOR CHAR       00003701
                             %COMPARE.                                  00003702
         COMMENT REL 22 THRU 27 ;                                       00003750
                             %CONTAINS COMPARE OPERATORS FOR CHAR       00003751
                             %COMPARE.                                  00003752
SAVE INTEGER ARRAY REL [0:27];                                          00003800
                             %CONTAINS RELATIONAL OPERATORS FOR         00003801
                             %WORD MODE COMPARE.                        00003802
     INTEGER ARRAY CT [0:30];          %                                00003810
DEFINE    STRTPOS  = CT [16]#,         % START POINT FOR LIB. COPY      00003820
          STOPOS   = CT [17]#,         % STOP  POINT FOR LIB. COPY      00003830
          LIBRX    = CT [18]#,         % INDEX FOR LIBRARY FILE         00003840
          DELTALC  = CT [19]#,         % ADDED TO LEVEL OF LIB. COPY ENT00003850
          TWO99    = CT [20]#,         % SEG/ROW COUNT DOWN             00003860
          FIBX     = CT [21]#,         % INDEX TO FIB ARRAY             00003870
          DSPRTCTR = CT [23]#,         % DISK SORT PRT COUNTER          00003880
          T9       = CT [24]#,         %                                00003890
          Z        = CT [25]#,         %                                00003900
          L        = CT [26]#,         %                                00003910
          VOIDREC  = CT [27]#,         % FOR TERMINATING VOID OPTN      00003920
          INCR     = CT [28]#,         % FOR RESEQUENCE INTERVAL        00003930
          RFIX     = CT [29]#,         % LITERIAL FIX-UP                00003940
          IDENTX   = CT [30]#;         % HOLDS IDENTIFIER FOR $ OPTN    00003945
         SAVE INTEGER ARRAY CCY      [0:31 ]; COMMENT SEARCH & CORRESP; 00003950
       ARRAY ALTCRD [0:19];      %ALT AREA TO FIX LATE PRINTING         00004000
DEFINE   CARDCNT  =ALTCRD[10] #, % CARD COUNT                           00004001
         ETC      =ALTCRD[11] #, % COL73 ONE CYCLE LATER                00004010
         LIBCNT   =ALTCRD[12] #, % LIBRARY RECORD COUNT                 00004020
         MOVCRDIN =ALTCRD[13] #, % TELLS WHERE CARD IS AND WHETHER TO PT00004030
         SOLTCNT  =ALTCRD[14] #, % SOLT RECORD COUNT (NEW TAPE)         00004035
         SQER     =ALTCRD[15] #, % SEQUENCE ERROR COUNT                 00004040
         TAPECNT  =ALTCRD[16] #, % TAPE RECORD COUNT (OLD TAPE)         00004045
         TEMPTFCR =ALTCRD[17] #; % HOLD TFCR ON LIB ADD INFO            00004048
              REAL    ARRAY SC       [0:7 ,0:127];                      00004050
              REAL    ARRAY SAVEGOTO [0:7 ,0:127];                      00004100
              REAL    ARRAY KODE     [0:7 ,0:127];                      00004150
                   DEFINE CHM= SEG#;                      COMMENT 9-16; 00004200
              REAL    ARRAY CNP      [0:7 ,0:127]; COMMENT CONSTANT     00004250
                      POOL FOR OBJECT TIME;                             00004300
              REAL ARRAY PRTB[0:7,0:127];COMMENT FINAL PRT;COMMENT DF;  00004325
              REAL    ARRAY FIB      [0:7 ,0:127]; COMMENT FILE         00004350
                      INFORMATION BLOCKS;                               00004400
              REAL    ARRAY SEG1     [0:7 ,0:127]; COMMENT COMPILED     00004450
                      CODE FOR OBJECT TIME OUTSIDE BLOCK;               00004500
              REAL    ARRAY SEG      [0:24,0:127];%SYLLABLE EMIT ARRAY. 00004550
              REAL    ARRAY SMB      [0:31,0:255]; COMMENT DIAGNOSTICS; 00004601
         REAL   ARRAY   SEGDICT [0:7,0:127];               COMMENT DF;  00004650
                   COMMENT FINAL FORM SEG DICT;            COMMENT DF;  00004700
              REAL    ARRAY INFO     [0:31,0:511]; COMMENT ADDRESSES    00004701
                      AND OTHER INFORMATION FOR ITEMS IN DICT;          00004740
BOOLEAN       FTN;                                                      00004750
              REAL    ARRAY DICT     [0:31,0:511]; COMMENT SYMBOL DICT.;00004760
SAVE ARRAY    LBUF[0:14];    % PRINTER                                  00004790
DEFINE        CBS = LBUF[0]#,%CARD                                      00004791
              LBS = LBUF[1]#, % PRINTER                                 00004795
              ORS = LBUF[2]#, % NEWTAPE                                 00004799
              OBS = LBUF[3]#,                                           00004800
              IRS = LBUF[4]#, % TAPE                                    00004804
              IBS = LBUF[5]#;                                           00004806
         BEGIN                                                          00004808
INTEGER STREAM PROCEDURE GETFPB(Q); % GETS WORD CONTAINING FILE TYPE    00004810
         VALUE Q;                   % FROM FPB                          00004812
         BEGIN                                                          00004814
              SI ~ LOC GETFPB; SI ~ SI-7; DI ~ LOC Q; DI ~ DI+5;        00004816
              SKIP 3 DB; 9(IF SB THEN DS ~ SET ELSE DS ~ RESET;         00004818
                           SKIP SB);                                    00004820
              DI ~ LOC Q; SI ~ Q; DS ~ WDS; SI ~ Q; GETFPB ~ SI;        00004822
         END;                                                           00004824
INTEGER STREAM PROCEDURE GNC(Q);                                        00004826
         VALUE Q;                                                       00004828
         BEGIN SI ~ Q; SI~SI+7; DI~LOC GNC;DI~DI+7;DS~CHR;END;          00004830
INTEGER FPBBASE;                                                        00004832
              FPBBASE ~ GETFPB(3);                                      00004834
              ORS ~ IRS ~ 56; OBS ~ IBS ~ 10;                           00004835
              IF GNC(FPBBASE+3) = 12 THEN CBS ~ 150;                    00004836
              IF GNC(FPBBASE+8)= 12 THEN LBS ~ 150;                     00004840
              IF GNC(FPBBASE+13) = 12 THEN                              00004841
                BEGIN ORS ~ 10; OBS ~ 150 END;                          00004842
              IF GNC(FPBBASE+18) = 12 THEN                              00004843
                   BEGIN IRS ~10; IBS ~150 END;  %BUFFER CORR FOR DISK  00004844
         END;                                                           00004845
         BEGIN                                                          00004846
FILE IN CARD (2,10,CBS);                                                00004847
DEFINE        DATA = CARD#;                                             00004848
DEFINE LINESIZE = 2400#;                                                00004849
SAVE FILE OUT  LINE DISK SERIAL [20:LINESIZE]                           00004850
              "OUTPT" (2,15,LBS,SAVE 10);                               00004851
SAVE FILE OUT NEWTAPE DISK SERIAL [20:LINESIZE]                         00004852
              "SOLT" (2,ORS,OBS,SAVE 10);                               00004853
FILE IN TAPE "SOLT" (2,IRS,IBS);                                        00004854
FILE IN LIBRAR DISK SERIAL "CASTA" "LIBRARY" (1,56);                    00004855
DEFINE        CHUNK = 150#;                                             00004856
INTEGER       DSKLOC; % INDEX TO DISK OBJECT PROGRAM                    00004857
FILE OUT CODE DISK [20:CHUNK] (2,30, SAVE ABS(SAVETIME));      %PRI 115200004859
                   DEFINE ZW = [33:6]#;               COMMENT 2-26-64;  00004860
FILE OUT PUNCH 0(2,10);                % PUNCHED OUTPUT                 00004862
FILE OUT TWX  19(2,10);          % REMOTE TALK BACK                     00004863
DEFINE WRITELINE = IF SGLSPCE THEN WRITE(LINE,15,LBUF[*])               00004865
                             ELSE WRITE(LINE[DBL],15,LBUF[*]) #;        00004866
                   DEFINE ZY =[39:9]#;                COMMENT 2-26-64;  00004870
              INTEGER CFDE;    %CURRENT FILE OCUR                       00004900
ARRAY DIRECTORY [0:2,0:55];COMMENT DIRECTORY FOR LIBRARY; COMMENT 10-9; 00005010
              INTEGER CNR;     %NEXT AVAIL. CHAR IN CONSTANT POOL       00005400
              INTEGER NSCAL                                     ;       00005500
                             %SCALE FOR NEXT SCANNER SYMBOL             00005501
              INTEGER SDX ;    %SEGMENT DICTIONARY NEXT AVAILABLE       00005600
              INTEGER SMBX;    %SYMBOL ARRAY INDEX                      00005700
              INTEGER SSCALE                                    ;       00005800
                             %SCALE OF CURRENT SYMBOL FROM SCANNER      00005801
              INTEGER T6;      %TEMP                                    00006000
              INTEGER T7;      %TEMP                                    00006100
              INTEGER T8;      %TEMP                                    00006200
              INTEGER PX                                        ;       00006404
              INTEGER QX                                        ;       00006405
              INTEGER RX                                        ;       00006406
                             %CHAR LOCATION FOR CURRENT DATA-NAME       00006407
              INTEGER T10                                       ;%TEMP  00006500
              INTEGER  CREG;        COMMENT C-REG FLR SEG ARRAY;        00006700
                             %C-REGISTER FOR SEG ARRAY.                 00006701
              INTEGER  J;           COMMENT TEMP VARIABLE;%TEMP         00006800
              REAL K;          %TEMP                                    00006802
              INTEGER OCUR;    %INDEX IN DICT FOR CURRENT NAME          00006804
                   REAL T1,SIZE,KEY,CLASS,USAGE;                        00006820
                             %TEMP,SZ(CHAR) OF CURRENT FIELD,           00006821
                             % IDENT # OF CURRENT ITEM, CLASS OF        00006822
                             % CURRENT DATA-NAME, USAGE OF CURRENT      00006823
                             % DN.                                      00006824
                   DEFINE CHMX=CREG#;%WORD MODE C-REGISTER.             00006830
              REAL X;          %TEMP                                    00006840
              REAL SEG1X;      %C-REGISTER FOR SEG1 ARRAY.              00006900
              REAL A                                            ;%TEMP  00007200
              INTEGER AVAIL;   %NEXT AVAILABLE SPACE IN DICT            00007300
COMMENT TEMPORARY; INTEGER  SGMTLVL;                                    00007350
              REAL B,C;        %TEMPS                               7-6700007400
              REAL CAT                                          ;       00007700
                             %CATEGORY OF CURRENT NAME                  00007701
              INTEGER CLOC;    %INDEX FOR LOCATION OF CURRENT SYMBOL    00007900
              REAL %                                                7-6700008040
                        RECOC; %OCUR FOR CURRENT RECORD                 00008050
              INTEGER CNPL;    %PRT FOR CONSTANT-POOL (OBJ-TIME)        00008100
              INTEGER CNQ;     %WORD INDEX IN CONSTANT-POOL             00008200
              REAL LGTH                                         ;       00009400
                             %# CHAR IN CURRENT SYMBOL                  00009401
              REAL T2                                           ;%TEMP  00009800
                   REAL LSEQ,  %CARD INPUT SEQUENCE NUMBER              00009900
                        ORIG,  %OCCUR OF CURRENT DATA-NAME(DATA DIV)    00010400
                        PRTCTR;%NEXT AVAILABLE PRT LOCATION             00010500
              REAL SCALE                                        ;       00011300
              REAL SCLAS                                        ;       00011400
                             %SCAN CLASS OF CURRENT SYMBOL              00011401
              INTEGER TYPE;    %DICTIONARY TYPE OF CURRENT NAME         00012000
              REAL T3;         %TEMP                                    00012300
              REAL T4 ;        %TEMP                                    00012400
              REAL T5;         %TEMP                                    00012500
DEFINE        DTR  = J.[36:5],J.[41:7] #,                               00012600
              SEGX = LINEDIT [0,0]     #,                               00012700
              LIDX = LINESEG [0,0]      #,                              00012800
              RLX  = 38:10              #,                              00012900
              SEGIN= SEGX.[36:5],SEGX.[41:7]#;                          00013000
INTEGER ARRAY LINEDIT , LINESEG  [0:7,0:127];                           00013100
SAVE ARRAY REFORMCARD  [0:9];          % REFORMATED DC CARD             00013130
BOOLEAN       DCOM;                    %                                00013150
DEFINE   REFIND      = DCOM.[44:1]#;   % CANT USE MB BECAUSE OF STACK   00013155
DEFINE   DCOMM       =  DCOM.[45:1] #; % SEG + LINE INFO                00013160
DEFINE   FROMREFORM  =  DCOM.[46:1] #; % REMOTE OR LASTSEQ              00013170
                   BOOLEAN DSFLAG;%DISK SORT FLAG                   7-6700013200
                   BOOLEAN MERGEFL;                                     00013250
              BOOLEAN FOUND                                     ;       00013300
                             %SYMBOL WAS "FOUND" IN DICT                00013301
              BOOLEAN MASTERBOOL,%HOLDS BOOLEAN PARTIAL DEFINES     7-6700013400
                        ACC,   %"MOVE SOURCE IS AT TOP-OF-STACK"        00013600
                   MGCXFLG,    %MOVE GENERATOR CONTROL FLAG.            00013700
                       COL73,  % INFO FOR PAR SEE DEFINE FOR BREAK DWN  00014050
                 PRIORITYNUM,  % TRUE WHEN LAST SECTION HAD A  %CJC 065 00014100
                               % PRIORITY OF 1 OR 01.          %CJC 065 00014101
                        FL4,   %TEMP BOOLEAN                            00014300
                        FL5,   %TEMP BOOLEAN                            00014400
                        FL8,   %TEMP BOOLEAN                            00014500
                        INFLG, %INHIBIT DATA-NAME PROCESSING            00014700
                        BSZF,  %BLOCK SIZE SPECIFIED                    00015700
                        PROK,  %PRINT INHIBIT FLAG                      00019200
                        LIBCOPY,%TRUE IF SYMBOLICS ARE FROM LIBRARY     00019210
                        LASTITEM,% TRUE IF TO BE PRINTED                00019220
                        SYNF,  %TRUE IF A SYNONYM                       00019230
                        USW,   %DATA DIV. FORWARD REFERENCE FLAG        00019238
                        ZRA,   %FIG. CONSTANT ZEROS FLAG                00019240
                        CNSTFLG,%TRUE IF ITEM IN CONSTANT POOL          00019242
                        INOF;  %IN / OF  FLAG                           00019246
         DEFINE %DEFINE BITS OF MASTERBOOL TO HOLD BOOLEAN VALUES FOR   00019250
                %LITTLE USED BOOLEAN VARIABLES & REDUCE PRT SIZE.   7-6700019260
              BOOL  =MB.[33:1]#,%BOOLEAN PRIMARY FOUND IF TRUE          00019300
              CNFLG =MB.[35:1]#,%CONST FLAG                             00019320
              COR   =MB.[24:1]#,%CORRESPONDING FLAG                     00019340
              DBGNFL=MB.[21:1]#,%DEBUGN ARRAY FILL FLAG                 00019350
              DATF  =MB.[41:1]#,%DATA RECORDS DECLARED                  00019360
              DSYN  =MB.[23:1]#,%SYNONYM FLAG                           00019380
              ERZ   =MB.[32:1]#,%STANDARD ERROR FLAG FOR "USE"          00019400
              FL6   =MB.[36:1]#,%TEMP                                   00019420
              FL7   =MB.[47:1]#,%TEMP                                   00019440
              FL9   =MB.[45:1]#,%TEMP                                   00019460
              FORD  =MB.[31:1]#,%ON IF LABEL IS FORWARD REFERENCE       00019480
              FREE  =MB.[18:1]#,%FREE FORMAT OR TSS INPUT               00019490
              FSZF  =MB.[43:1]#,%FILE SIZE DECLARED                     00019500
              HASH  =MB.[46:1]#,%"HASHED OPTION GIVEN                   00019520
              IDF   =MB.[37:1]#,%FILE ID GIVEN                          00019530
              LABF  =MB.[40:1]#,%LABEL RECORDS CLAUSE DECLARED          00019540
               MOVETOFLAG=MB.[17:1]#,%CHECK DEST IN SUBSCRIP MOVE       00019550
              ODER  =MB.[22:1]#,%ILLEGAL DUPLICATE NAME FLAG            00019560
              PCNOTE=MB.[44:1]#,%NOTE SENTENCE/PARAGRAPH FLAG           00019580
              REEDVRB   = MB.[16:1]#,%VERB WAS READ            %CJC 003 00019585
              RESETFCR = MB.[20:1]#,%TRUE RESET TFCR FROM TEMPTFCR      00019590
              RSZF  =MB.[42:1]#,%RECORD SIZE DECLARED                   00019600
              SEQF  =MB.[38:1]#,%SEQUENCED CLAUSE GIVEN                 00019620
              SENT  =MB.[30:1]#,%FALSE=SENTENCE, TRUE=PARAGRAPH         00019640
              SFF   =MB.[39:1]#,%SAVE-FACTOR SPECIFIED                  00019660
              SIOPRO=MB.[34:1]#,%SORT CODE GENERATOR FLAG FOR GETIT     00019680
              SPLAT =MB.[25:1]#,%ALL FLAG FOR CONDITION NAME            00019700
              SRFLG =MB.[26:1]#,%SORT-RETURN FLAG                       00019720
              TONY  =MB.[29:1]#,%INDICATES LABEL IN MONITOR STATEMENT   00019740
              TSSEDT=MB.[19:1]#,%CHANGE OUTPUT FORMAT TO TSS TYPE       00019750
              UFLG1 =MB.[27:1]#,%FIRST "USE" PROCEDURE FLAG             00019760
              VLF   =MB.[28:1]#,%CONDITION NAME ENTRY FLAG              00019780
              MB    =MASTERBOOL#; %                                 7-6700019800
DEFINE                                                                  00019805
    FCR       =12#,%PRT14   FILE CONTROL ROUTINE                        00019810
    RWR       =14#,%PRT16   READ/WRITE ROUTINE                          00019815
    TENTOTHE8 =20#,%PRT24   10*8                                        00019820
    COMNCRD   =21#,%PRT25   COMMON CARD LOCATION                        00019825
    INDEX     =22#,%PRT26   INDEX LOCATION FOR OBJECT-TIME CONTROL      00019830
    CONTROL   =23#,%PRT27   OBJECT-TIME CONTROL PROCEDURE               00019835
    PRFIB     =24#,%PRT30   PROGRAM FIB                                 00019840
    QBL       =25#,%PRT31   SUBSCRIPT WORKING STORAGE                   00019845
    RBL       =26#,%PRT32   SUBSCRIPT COMMUNICATION WORKING STORAGE     00019850
    ADNSIGN   =29#,%PRT35   GET DATA-NAME SIGN(0,MKS,WORD,CHAR)         00019860
    OCLRWDSZ  =30#,%PRT36   CLEAR WORDS TO BLANK                        00019865
    QAL       =32#,%PRT40   WORD OCCURS INDEX                           00019870
    RAL       =33#,%PRT41   CHARACTER OCCURS INDEX                      00019875
    TARRLOC   =34#,%PRT42   TEMP OBJECT TIME ARRAY                      00019880
    TENX      =35#,%PRT43   OBJECT-TIME POWER-OF-TEN ARRAY              00019885
    STDLOC    =36#,%PRT44   OBJECT-TIME TRASH LOCATION                  00019890
    BDNSIGN   =37#,%PRT45   STORE DATA-NAME SIGN (SIGN,MKS,WORDLOC,CHAR)00019895
    OWORDTRAN =38#,%PRT46   WORD TRANSFER(MKS,S-WORD,D-WORD,LGTH)       00019900
    OCLRCHRZ  =39#,%PRT47   CLEAR CHRS TO ZEROS(MKS,DEST,D-CHR,#CHR,RCW)00019905
    OCHRTRAN  =40#,%PRT50   CHAR. XFER (SOURCE,S-CHR,DEST,D-CHAR,LGTH)  00019910
    OCLRCHRB  =41#,%PRT51   CLEAR CHRS TO BLANK(DEST,D-CHR,# CHRS)      00019915
    OCLRWDSB  =42#,%PRT52   CLEAR WORDS TO BLANKS (DEST,# WORDS - 1)    00019920
    JUST1     =43#,%PRT53   NORMAL JUSTIFIED SRCE TO RIGHT JUSTFIED DEST00019925
    JUST2     =44#,%PRT54   RIGHT JUSTIFIED SRCE TO NORMAL JUSTFIED DEST00019930
    JUST3     =45#,%PRT55   RIGHT JUSTIFIED SRCE TO RIGHT JUSTIFIED DEST00019935
    ALFAL     =46#,%PRT56   ALPHA COMPARE                               00019940
    NUML      =47#,%PRT57   NUMERIC COMPARE                             00019945
    ICV1L     =48#,%PRT60   INPUT CONVERT PROCEDURE                     00019950
    IC1L      =49#,%PRT61   CHARACTER MODE INPUT CONVERT 0<X<9          00019955
    IC8L      =50#,%PRT62   CHARACTER MODE INPUT CONVERT 8<X<12         00019960
    OC1L      =51#,%PRT63   OUTPUT CONVERT PROCEDURE                    00019965
    OC8L      =52#,%PRT64                                               00019970
    ICDL      =53#,%PRT65   INPUT CONVERT DBL LENGTH                    00019975
    OCDL      =54#,%PRT66   OUTPUT CONVERT DBL LENGTH                   00019980
    OCV1L     =55#,%PRT67   WRDMODE OUTPT CNVRT-LGTH,SIGN,CHR,WRD,MKS,VA00019985
    TENTOTHE11=56#,%PRT70   10*11                                       00019990
    INITIL    =57#,%PRT71   OUTSIDE BLOCK PRT DESCRIPTOR                00019995
    MD1       =(PSD+1)#,%   MOVES CHRS FROM SRCE TO OUTPUT LINE         00020000
    MD2       =(PSD+2)#,%   MOVES NUMERIC INFO TO OUTPT/W DEC.PT.(MAYBE)00020005
    MD3       =(PSD+3)#,%   SETS UP P+/-NN IN OUTPUT LINE               00020010
    MD4       =(PSD+4)#,%   MOVES INTEGER OR(INTEGER)OR,INTEGER TO OUTPT00020015
    INSS      ="IN00"#,%                                                00020020
    OFSS      ="OF00"#,%                                                00020025
    LABDICT   =928#,%                                                   00020035
    BLANKZ    ="       "#,%                                             00020085
    LABINFO   =1#;%                                                     00020135
              DEFINE                                                    00020185
                   COMPA =ED.[5:1]#,%[0:6] ARE RES. FOR COMPILE ERROR   00020235
                   %SAVED =ED.[ 6:6]#, % RESERVED FOR CONTENTS OF COL73 00020285
                   TORR   =ED.[12:6]#, % T,R OR " " FOR LISTING         00020335
                   %OPEN  =ED.[18:6]#, % OPEN AREA                      00020385
                   LSEQFF =ED.[24:1]#, % SEQUENCE DELAY FLAG            00020400
                   DATCRD =ED.[25:1]#, % 1= DATE-COMP FOUND, 0= NOT     00020435
                   HEADFF =ED.[26:1]#, % HEADING IS PRINTED FF          00020485
                   TMPCRDIN=ED.[27:1]#,% SET ON TAPE COMPILE FOR PATCH  00020535
                   DBLDOL =ED.[28:1]#, % 0= NO $$ OCCURED 1=$$ OCCURED  00020585
                   CARDIN =ED.[29:1]#, % 1= CARD + TAPE , 0=CARD ONLY   00020635
                   VOID   =ED.[30:1]#, % VOID CARDS AND TAPE            00020685
                   COPYIT =ED.[31:1]#, %COPY RESOLVED TO NEWT  %CJC 007 00020735
                   %OPEN  =ED.[32:1]#, % UNASSIGNED $ OPTN              00020785
                   IDFF   =ED.[33:1]#, % CARRY ID FRM NEXT PGM CARD FWD 00020835
                   PCHFF  =ED.[34:1]#, % PUNCH                          00020885
                   PSUP   =ED.[35:1]#, % DEBUGN TOGGLE                  00020935
                   SGLSPCE=ED.[36:1]#, % SINGLE SPACE OPTION            00020985
                   ZOBOL  =ED.[37:1]#, % SPEC FCN                       00021035
                   PRINTIT=ED.[38:1]#, % LIST                           00021085
                   SEQFF  =ED.[39:1]#, % RESEQUENCE FCN                 00021135
                   NEWT   =ED.[40:1]#, % NEW TAPE                       00021185
                   PRTFF  =ED.[41:1]#, % LIST PRT                       00021235
                   DOLLAR =ED       #, % FOR PROCEDURES DOLLAR FCN      00021285
                   DOLLA  =ED.[42:6]#, % FOR SETTING    DOLLAR FCN      00021335
                   ED     = COL73   #;                                  00021385
INTEGER NCR     ;COMMENT ADDRESS OF NEXT CHARACTER TO SCAN        12-1; 00021435
BOOLEAN PFLG    ;COMMENT PERIOD FLAG-FORCE NSYMB=".000"           12-1; 00021485
BOOLEAN CLABLF;COMMENT SAME AS LABLF,1 CYCLE EARLIER;     COMMENT 12-1; 00021535
BOOLEAN LABLF   ;COMMENT CONSTRUCT STARTS IN COL.8                12-1; 00021585
BOOLEAN QUOTF   ;COMMENT MISSING """ ERROR FLAG                   12-1; 00021635
INTEGER RESULT  ;COMMENT SPELLING TYPE OBTAINED FROM SCAN         12-1; 00021685
INTEGER OUTCHX;    % HOLDER OF LAST 2 CHRS OF SCANNER                   00021735
DEFINE                                                                  00021785
                   OUTCHR =  OUTCHX.[30:6]#, %LAST CHR SCANNED          00021800
                   NXTCHR =  OUTCHX.[36:6]#, % NEXT CHR AFTER OUTCHR    00021835
                   FUTCHR =  OUTCHX.[42:6]#; % NEXT CHR TO BE SCANNED   00021850
INTEGER RCR     ;COMMENT ADDRESS OF FIRST CHARACTER OF RECORD     12-1; 00021885
INTEGER LCR     ;COMMENT ADDRESS OF LAST CHARACTER-OF RECORD      12J1; 00021935
INTEGER TFCR    ;COMMENT ADDRESS OF TAPE FIRST CHARACTER          12-1; 00021985
INTEGER CFCR    ;COMMENT ADDRESS OF CARD FIRST CHARACTER          12-1; 00022035
INTEGER LASTUSED;COMMENT TYPE INPUT TO BE READ NEXT               12-1; 00022085
                   REAL CDIVN, %CURRENT COBOL DIV. BEING PROCESSED      00022135
                        INLGTH;%# WRDS IN INFO ENTRY                    00023300
                   INTEGER MAXSEG;     % LGTH OF LARGEST SEGMENT DUMPED 00023400
         REAL NEXMAX; COMMENT SIZE OF 2ND LARGEST SEGMENT         9-9;  00023450
              REAL ARAYSZ; COMMENT  TOTAL ARRAY SIZE IN OBJ PROG 1-65;  00023460
                   REAL %                                               00023500
                        LOC1,  %FIRST OPERAND OF RENAMES                00024100
                        LOC2,  %SECOND OPERAND OF RENAMES               00024200
                        DRUMSIZE,%TOTAL WORDS COMPILED                  00024300
                        TECH,  %"TECHNIQUE" FOR CURRENT FILE            00024400
                        SGND,  %"SIGNED" FLAG                           00024500
                        T6A,   %TEMP                                    00026500
                        UNITS, %# PERIPHERAL HARDWARE REQUESTED         00026800
                        CFIB,  %PRT LOC OF FILE FIB                     00027600
                        FX,    %REDEFINES ARRAY INDEX                   00027900
                        DIVN,  %CURRENT DIVISION (FOR SCHAD PROCED)     00028600
                        EIND,  %TEMP FOR ERROR MESSAGE PRINTER          00028700
                        NCLAS, %CLASS OF NEXT ITEM FROM SOURCE          00028900
                        NLGTH, %LENGTH OF NEXT SYMBOL                   00029000
                        TALY,  %OCUR FOR "TALLY"                        00029100
                        TIM;   %STARTING TIME OF COMPILATION            00029850
% *************************** WORDTRAN *******************************  00029860
% TRANSFER LGTH WORDS FROM SORC TO DEST                                 00029865
STREAM PROCEDURE WORDTRAN (SORC,DEST,LGTH);VALUE LGTH;                  00029870
              BEGIN SI ~ SORC;                                          00029875
                    DI ~DEST ;                                          00029880
                    DS ~ LGTH WDS ;                                     00029885
              END  WORDTRAN;                                            00029890
COMMENT ********************* PARM   ******************; COMMENT 10-20; 00029900
BOOLEAN PROCEDURE FIND; FORWARD;                                        00030000
PROCEDURE READACARD ;     FORWARD;                                      00030010
PROCEDURE SCANNER;FORWARD;                                              00030020
PROCEDURE ERP(ERKEY,FIG); VALUE ERKEY,FIG; REAL ERKEY,FIG; FORWARD;     00030030
PROCEDURE PARM;              % $ AND $$ CONTROL CARD PROCESSING         00030040
              BEGIN INTEGER I,HOLD;                                     00030050
              BOOLEAN   VOIDF,PLUSFF;                                   00030060
              INTEGER ARRAY TEMPNSYMB [0:4]; % TEMP FOR SCANNER VARABLES00030070
              LABEL RESET,CYC;                                          00030080
                    DEFINE  CHAR3= NSYMB[0].[24:18] #,                  00030090
                            CHAR4= NSYMB[0].[24:24] #;                  00030100
% ******************************* FETCH *************************       00030110
REAL STREAM PROCEDURE FETCH (A,T1);                                     00030120
         BEGIN                                                          00030130
              LOCAL L ;                                                 00030140
              SI ~A;                   % GET DESC TO BUFFER             00030143
              DI ~LOC A; DS ~WDS;      % SO WE CAN CHECK                00030145
              SI ~A ; L ~ SI ;                     % STORE BUFFER ADDR  00030150
              SI ~ SI - 16 ;                       % FIND # OF WORDS    00030160
              DI ~ LOC FETCH; DS ~ WDS ;           % STORE IN FETCH     00030170
              SI ~ LOC L ;  DI ~ T1; DS~WDS;       % MOVE TO TFCR       00030180
         END FETCH;                                                     00030190
% ******************************* FIXFIB ************************       00030200
STREAM PROCEDURE FIXFIB(A,T1); VALUE T1;                                00030210
         BEGIN                                                          00030220
              SI ~ A; SI~SI-24; DI ~ LOC T1; DS ~ WDS;                  00030230
              DI ~ T1; DI ~ DI+47; SKIP 4 DB; DS ~ 2 RESET;             00030240
              DI ~ DI+48; DI~DI+48; DS ~ 8 LIT "00#01+0#";              00030250
         END;                                                           00030260
% *************************** DECR ***********************************  00030270
STREAM PROCEDURE DECR (INCR,LSEQ);               % USED TO CORRECT      00030280
              BEGIN SI ~ INCR;                   % RESEQUENCE FOR THE   00030290
                    DI ~ LSEQ; DI ~ DI + 1;      % FIRST CARD           00030300
                    DS ~6 SUB;                                          00030310
              END;                                                      00030320
% ************************ SETSTRT ***********************************  00030330
STREAM PROCEDURE SETSTRT ( NCR,NCV,HOLD);       % CORRECT NCR TO 1ST WD 00030340
              VALUE NCV ;BEGIN                                          00030350
              LABEL  DOLBYPASS,DOLREMOVE,DEBLK;                         00030360
                   DI ~ HOLD; DI ~ DI + 1;      %BYPASS CONTROL PART    00030370
                   SI ~ NCV;                          %SET SI TO FRNT CD00030380
                   DS ~ 6 CHR ;                                         00030390
                   SI ~ SI - 6;                                         00030400
DOLBYPASS:         IF SC ! "$"THEN BEGIN SI~SI+1;GO TO DOLBYPASS;END;   00030410
DOLREMOVE:         IF SC = "$"THEN BEGIN SI~SI+1;GO TO DOLREMOVE;END;   00030420
DEBLK:             IF SC = " "THEN BEGIN SI~SI+1;GO TO DEBLK;END;       00030430
                   NCV ~ SI; SI ~ LOC NCV;                              00030440
                   DI ~ NCR; DS~WDS;                                    00030450
              END SET STRT;                                             00030460
% ************************ MOVETOCORRECT ************************       00030470
STREAM PROCEDURE MOVETOCORRECT (SO,SICOR,DEST,DECOR,LGTH);              00030480
              VALUE  SICOR,DECOR,LGTH;                                  00030490
              BEGIN                                                     00030500
                   SI ~ SO;  SI ~ SI + SICOR;   %  MOVE CORRECTION      00030510
                   DI ~ DEST;DI ~ DI + DECOR;   % ROUTINE  SO THAT LGTH 00030520
                   DS ~ 6 LIT "0";              % IS ALWAYS 6 CHRS      00030530
                   DI ~ DI - LGTH;                                      00030540
                   DS ~ LGTH CHR;                                       00030550
              END MOVE TO CORRECT                ;                      00030560
                   WORDTRAN (NSYMB[0],TEMPNSYMB[0],2);                  00030570
                   TEMPNSYMB [2] ~ NLGTH ;        % STORE SCANNER OUTPUT00030580
                   TEMPNSYMB [3] ~ RESULT;                              00030590
                   TEMPNSYMB [4] ~ OUTCHX;                              00030600
                   SETSTRT (NCR,RCR,HOLD);                              00030610
                   RESULT~ NLGTH~ NSYMB[0] ~ 0;                         00030620
                   SCANNER;                                             00030630
                   IF     ED.[46:1]     THEN                            00030640
                        IF DBLDOL THEN                                  00030650
                             BEGIN                                      00030660
                             ERP (110, "$$CARD");                       00030670
                             COMPE ~ TRUE;                              00030680
                             END ELSE BEGIN      % * NOTICE DBLDOL NOT  00030690
                             DBLDOL ~ TRUE;                             00030700
                             DBLDOL ~ FIND;                             00030710
                             TMPCRDIN ~ TRUE ;                          00030720
                             LASTUSED ~2   ;                            00030730
                             NLGTH ~FETCH (LIBRAR, TFCR);               00030740
                             TFCR ~TFCR +  LIBRX;                       00030745
                             LIBRX ~ LIBRX + 11;                        00030750
                             GO TO RESET ;                              00030760
                        END ELSE                                        00030770
                        IF DOLLAR THEN                                  00030780
                             BEGIN                                      00030790
                             IF CHAR4 = "TAPE" THEN CARDIN ~ FALSE ELSE 00030800
                             IF CHAR4 = "CARD" THEN CARDIN ~ TRUE  ELSE 00030810
                        CYC: IF NLGTH = 3  THEN                         00030820
                                  BEGIN                                 00030830
                                  IF CHAR3 = "PRT" THEN I~I+1 ELSE      00030840
                                  IF CHAR3 = "NEW" THEN I~I+2 ELSE      00030850
                                  IF CHAR3 = "SGL" THEN I ~ I + 32 ELSE 00030855
                                  IF CHAR3 = "SEQ" THEN I~I+4 ELSE      00030860
                                  END ELSE                              00030870
                             IF NLGTH = 4  THEN                         00030880
                                  BEGIN                                 00030890
                                  IF CHAR4 ="LIST" THEN I~I+8 ELSE      00030900
                                  IF CHAR4 ="SPEC" THEN I~I+16 ELSE     00030910
                                  IF CHAR4="VOID" THEN    %TR575        00030915
                                  BEGIN VOIDF := TRUE;    %TR575        00030916
                                        VOIDREC := 0;     %TR575        00030920
                                  END  ELSE               %TR575        00030921
                                  IF CHAR4 ="FREE" THEN FREE:=TRUE ELSE 00030925
                                  IF CHAR4 ="CODE" THEN I~I+64 ELSE     00030930
                                  IF CHAR4 = "COPY" THEN       %CJC 007 00030933
                                        I ~ I + 1024 ELSE      %CJC 007 00030934
                                  END ELSE                              00030940
                             IF NLGTH = 5 THEN                          00030950
                                  BEGIN                                 00030960
                                  IF CHAR4 = "PUNC" THEN I~ I+128 ELSE  00030970
                                  IF CHAR4 = "IDEN" THEN I~ I+256 ELSE  00030980
                                  END ELSE                              00030990
                             IF NLGTH = 6 THEN                          00031000
                                  BEGIN                                 00031003
                                  IF CHAR4 = "SING" THEN I~I+32 ELSE    00031005
                                  IF CHAR4="SEQX" AND NOT DATCRD THEN   00031007
                                          DCOMM ~ TRUE ELSE             00031008
                                  IF CHAR4 ="DEBU" THEN I~ I + 64;      00031010
                                   END;                                 00031011
                              IF NLGTH = 7 THEN                         00031012
                                   BEGIN                                00031013
                                   IF CHAR4 = "TSSE" THEN TSSEDT:=TRUE; 00031015
                                   END;                                 00031019
                             IF RESULT = 2 AND NLGTH < 7 THEN           00031020
                                  IF PLUSFF THEN                        00031030
                                  MOVETOCORRECT(NSYMB[0],4,INCR,0,NLGTH)00031040
                                  ELSE                                  00031050
                                  IF NOT VOIDF THEN                     00031060
                                  MOVETOCORRECT(NSYMB[0],4,LSEQ,1,NLGTH)00031070
                                  ELSE                                  00031080
                                  MOVETOCORRECT(NSYMB[0],4,VOIDREC,0,   00031090
                                  NLGTH );                              00031100
                             IF NSYMB[0].[24:6]= "+" THEN PLUSFF ~ TRUE;00031110
                             IF NSYMB [0].[24:6] ! "%" THEN BEGIN       00031120
                             RESULT~ NLGTH~ NSYMB[0] ~ 0;               00031130
                             SCANNER;                                   00031140
                             GO TO CYC;  END;                           00031150
                             IF VOIDF THEN                              00031160
              BEGIN               VOID ~ TRUE;                          00031170
                                  IF VOIDREC =0 AND HOLD.[6:6]!"$" THEN 00031180
                                  MOVETOCORRECT(HOLD,1,VOIDREC,0,6);    00031190
              END  ELSE                                                 00031200
              BEGIN               ED.[31:11] ~ BOOLEAN(I);     %CJC 007 00031210
                                  IF SEQFF THEN                         00031220
                                  IF LSEQ = 0 OR LSEQ = "      0" THEN  00031223
                                     LSEQ ~ 0 ELSE DECR(INCR,LSEQ);     00031225
              END;                                                      00031230
RESET:                       IF SGLSPCE THEN PRINTIT ~ TRUE;            00031240
                             WORDTRAN (TEMPNSYMB[0],NSYMB[0],2);        00031250
                             NLGTH  ~TEMPNSYMB[2];    %RESTORE SCANNER  00031260
                             RESULT ~TEMPNSYMB[3];                      00031270
                             OUTCHX ~TEMPNSYMB[4];                      00031280
                   IF NOT TMPCRDIN THEN                                 00031290
                   IF CARDIN THEN LASTUSED ~ 1     % CARDS ONLY         00031300
                   ELSE BEGIN     LASTUSED ~ 2;    % NEXT INPUT TO RDR  00031310
                        IF NOT FTN THEN            % ONE TIME ONLY TAPE 00031320
                             BEGIN                                      00031330
                             FTN ~ TRUE ;                               00031340
                             IF FETCH (TAPE,TFCR) =10 THEN              00031350
                                  BEGIN            % CHK BLOCK CHANGE   00031360
                                  REWIND(TAPE);    % IF UNBLOCKED       00031370
                                  FIXFIB(TAPE,0);  % CHANGE FIB         00031380
                                  TEMPNSYMB[0]~FETCH(TAPE,TFCR);        00031385
                   END; END; END; END;                                  00031390
              END PARM;                                                 00031400
COMMENT **************************    JCV   **************************; 00031700
COMMENT CONVERTS 15-BIT FIELD INTO J AND K INDICES   ;                  00032200
PROCEDURE JCV (FLD,J,K); VALUE FLD;  INTEGER FLD,J,K;                   00032300
              BEGIN                                                     00032400
                   J~FLD.[33:6];  K~FLD.[39:9];                         00032450
                             %SPLITS INDICES FOR INDEXING INTO          00032451
              END;             %  ARRAY 64 | 512  (INFO AND DICT)       00032500
COMMENT **************************   SETFLG **************************; 00034000
 STREAM PROCEDURE SETFLG(S);   %TURNS ON FLAG BITS IN DESCRIPTORS IN    00035300
              BEGIN DI ~ S; DS ~ 1 SET END;%  SEGMENT DICTIONARY.       00035400
PROCEDURE OCV1(DEST,DCHR,SGN,LGTH,VAL);                                 00035500
                   VALUE   DCHR,SGN,LGTH,VAL;                           00035600
                   INTEGER DCHR,SGN,LGTH,VAL;                           00035700
                   REAL DEST;                                           00035800
                    FORWARD ;                                           00035900
COMMENT **************************   SYOUT  **************************; 00036402
COMMENT MOVES CURRENT SYMBOL TO MSG ARRAY. 1ST PARAM MUST BE MSG[124]   00036408
 2ND PARAM LOC OF SYMBOL             3RD PARAM LGTH;                    00036409
STREAM PROCEDURE SYOUT(M,D,L);                                          00036410
                   VALUE L;                                             00036420
              BEGIN DI~M;  SI~LOC L;  SI~SI+7; DS~ CHR;                 00036430
                             %MOVE CURRENT SYMBOL.                      00036431
                   SI~D;  SI~ SI +4;  DS~ L    CHR;                     00036440
              END;                                                      00036450
COMMENT **************************    ERP   **************************; 00036470
COMMENT  ERROR MESSAGE PRINTER  FORMATS ERROR MESSAGES TO OUTPUT        00036500
     ARRAY BASED ON KEY INTO WORD&ARRAY     ;                           00036600
PROCEDURE ERP (ERKEY,FIG)      ;                                        00036700
                   VALUE ERKEY,FIG;  REAL FIG,ERKEY;                    00036800
         BEGIN     INTEGER CH,X;  REAL T1;                       %TR-40000036802
COMMENT *********************** REMOTE DISPLAY ************************;00036804
PROCEDURE REMOTEOUT;                                                    00036806
         BEGIN   ALPHA SEQNO;                                           00036808
COMMENT *********************** FOMAT TWX ERROR STATMENT **************;00036810
STREAM PROCEDURE ERRFORMAT (LBUF,SEQ,MESS);                             00036814
              BEGIN                                                     00036816
LABEL L1,L2;                                                            00036818
                   SI ~ SEQ; SI~SI+1;           % POINT TO SEQ NUMBER   00036820
                   DI ~ LBUF;                   % POINT TO WRITE AREA   00036822
                   DS ~ 9 LIT "**ERROR @" ;                             00036824
                   DS ~ 6 CHR ;                 % MOVE IN SEQ #         00036826
                   DS ~ 2 LIT  ": ";                                    00036828
                   SI ~ MESS;                   % SET TO MOVE MESSAGE   00036830
         L1:       IF  SC = " " THEN            % DEBLANK IN FRONT      00036832
              BEGIN     SI ~ SI + 1;                                    00036834
                        GO TO L1;                                       00036836
              END;                                                      00036838
                   DS ~ 55 CHR;                 % MOVE MESSAGE          00036840
                   SI  ~ LBUF;                                          00036844
         L2:       SI ~ SI + 1 ;                                        00036846
                   IF SC ! " " THEN GO TO L2;                           00036848
                   SI ~ SI + 1 ;                                        00036850
                   IF SC ! " " THEN GO TO L2;                           00036852
                   DS ~ LIT "~" ;               % MOVE IN GROUP MARK    00036854
              END ERPFORMAT;                                            00036856
                   IF FROMREFORM  THEN                                  00036860
              BEGIN     SEQNO := 0 & REFORMCARD [0] [7:1:35] ;          00036865
                        ERRFORMAT (LBUF[0],SEQNO,MESS);                 00036870
              END  ELSE ERRFORMAT (LBUF[0],LSEQ ,MESS);                 00036875
                   WRITE (TWX,9,LBUF[*]);                               00036880
         END REMOTEOUT;                                                 00037000
COMMENT **************************   ERPR   **************************; 00037001
INTEGER STREAM PROCEDURE ERPR (OUTPX,CH,MSG);   VALUE CH;               00037002
              BEGIN  LOCAL T,ST;  SI~MSG; DI~LOC T; DI~DI+7;            00037004
                   DS~CHR;  DI~OUTPX; DI~DI+CH; SI~MSG;                 00037006
                   SI~SI+1; DS~T CHR; TALLY~T; ERPR~TALLY;              00037008
              END;                                                      00037010
COMMENT **************************   CLRWDS **************************; 00037015
STREAM PROCEDURE CLRWDS (DEST,NUMWDS);   VALUE NUMWDS;                  00037020
              BEGIN  SI~DEST; DI~DEST; DS~8 LIT "        ";             00037022
                   DS ~ NUMWDS WDS;                                     00037024
              END;                                                      00037026
                   IF NOT DCOM THEN                                     00037030
                   IF PROK AND NOT(LASTITEM AND PRINTIT) THEN           00037040
              BEGIN CH ~ REAL (PRINTIT);                                00037045
                    PRINTIT ~ TRUE ;                                    00037050
                    X ~LASTUSED;                                        00037060
                    LASTUSED ~5 ;                                       00037070
                    READACARD;                                          00037075
                    LASTUSED ~X;                                        00037080
                    PRINTIT ~ BOOLEAN (CH);                             00037085
                    PROK ~ FALSE ;                                      00037086
              END;                                                      00037090
                    ETC := ETC &REAL(COL73)[5:5:1];%MOVE COMPA TO NEXT  00037095
                   CLRWDS (MESS,15); CH~0; X~0;                         00037100
                             %PRINT ERROR MESSAGES BY USING             00037101
                   IF FIG="*" THEN X~12 ELSE                            00037150
                             %SIGNAL TO PRINT PROCEDURE SIZE TO         00037151
                             %THE RIGHT.                                00037152
                   IF FIG ! 0 THEN% 8-BIT KEYS TO SELECT WORDS FROM     00037200
              BEGIN  MSG [127]~FIG; MSG [127].[1:5]~7;                  00037300
                             % MSG ARRAY AND ASSEMBLING THEM ON         00037301
                   IF MSG [127].[6:6] = 0 THEN MSG [127].[6:6]~48;      00037400
                             % OUTPT FILE.                              00037401
                   T1~ ERPR (MESS[0],0,MSG [127]); CH~1; X~1;           00037500
                             %IF FIG ! 0 THEN ADD VALUE OF FIG TO       00037501
              END;  WHILE (ERKEY ! 0) DO%  END OF ERROR MESSAGE.        00037600
              BEGIN T1~ ERPR (MESS[X],CH,MSG[ERKEY.[40:8]]);            00037700
                   ERKEY~ 0 & ERKEY [16:8:32];                          00037800
                   CH ~ CH + T1 + 1;                                    00037900
                   X~X+(CH DIV 8); CH~CH MOD 8;                         00038000
              END; IF DCOM AND FIG ! "*" THEN REMOTEOUT;                00038050
                   IF NOT DCOM OR PRINTIT THEN  %                       00038100
              BEGIN     WORDTRAN (MESS,LBUF[0],15); % MOVE MESSAGE      00038101
                        WRITELINE;                  % TO OUTPUT AREA    00038150
              END;                                                      00038200
         END  ERP;                                                      00038220
COMMENT **************************   SETIX  **************************; 00038250
COMMENT UPDATES IX  INDEX INTO INFORMATION ARRAY WITH LGTH   ;          00038300
PROCEDURE SETIX (LGTH);                                                 00038400
              VALUE LGTH;  INTEGER LGTH;                                00038500
              BEGIN  INTEGER J,K,EDE;                                   00038600
                   J~IX.[33:6]; K~IX.[39:9];                            00038700
                   INFO [J,K].[24:5]~LGTH;%LENGTH OF INFO ENTRY         00038800
                   IX~IX+LGTH; INLGTH~0; %INCREASE IX BY LENGTH.        00038900
                   IF K > 490 THEN                                      00039000
              BEGIN IX~IX+511; IX.[39:9]~0;                             00039100
              END; J~IX.[33:6]; K~IX.[39:9];                            00039200
                   FOR EDE~0 STEP 1 UNTIL 5 DO INFO[J,K+EDE]~0;         00039204
                             %ZERO OUT 5 WORDS OF INFO PART.            00039205
              END;                                                      00039300
COMMENT **************************    ICV1  **************************; 00039350
COMMENT INPUT CONVERTS 0 < X < 12 ;                                     00039400
INTEGER PROCEDURE ICV1 (SO,CH,SGN,LGTH);                                00039500
                   VALUE CH,SGN,LGTH;  INTEGER CH,SGN,LGTH;             00039600
                   REAL SO;                                             00039700
              BEGIN                                                     00039800
COMMENT **************************    IC8   **************************; 00039850
INTEGER STREAM PROCEDURE IC8 (SO,CH,LGTH);                              00039900
                   VALUE CH,LGTH;                                       00040000
              BEGIN DI~ LOC IC8; SI~ SO; SI~SI+CH; DS~ LGTH OCT         00040100
              END;                                                      00040200
                   IF LGTH  < 9 THEN ICV1~IC8 (SO,CH,LGTH) ELSE         00040300
                             %IF LENGTH LESS THAN 9 THEN RESULT         00040301
                   ICV1~(IC8 (SO,CH,8)| POWR [LGTH-8]) +                00040400
                             %  WILL BE SINGLE PRECISION ELSE           00040401
                   IC8 (SO,CH+8,LGTH-8)%  DOUBLE PRECISION.             00040500
              END;                                                      00040600
COMMENT **************************   CLRCHR **************************; 00040650
 COMMENT CLEAR NN CHARACTERS, NN { 63, ENTER WITH NUMCHR = NN,          00040700
 X = CHR POSITION, DEST = WORD ADDRESS;                                 00040800
 STREAM PROCEDURE CLRCHR (DEST, X, NUMCHR);  VALUE X, NUMCHR;           00040900
              BEGIN SI ~ DEST; DI ~ DEST; SI ~ SI + X; DI ~ DI + X;     00041000
                    NUMCHR (DS ~ 1 LIT " ");                            00041100
              END;                                                      00041200
%************************************ TAKE **************************** 00041300
%   TAKE GETS A WORD FROM INFO, USING THE PARAMETER INDEX               00041400
 REAL PROCEDURE TAKE(INDEX); VALUE INDEX; INTEGER INDEX;                00041500
         TAKE~INFO[INDEX.[33:6],INDEX.[39:9]];                          00041600
COMMENT **************************  CHRTRAN **************************; 00042000
 COMMENT CHAR TRANS NN WORDS, LGTH = NN, SORC = SOURCE ADDRESS,         00045200
 X = CHR POSITION IN SORC, DEST = DEST ADDRESS, Y = CHR POS IN DEST;    00045300
 STREAM PROCEDURE CHRTRAN (SORC, X, DEST, Y, LGTH);                     00045400
                             %MOVES NN CHAR FROM X OF SOURCE TO Y       00045401
                       VALUE X, Y, LGTH;% OF DESTINATION.               00045500
        BEGIN SI~SORC;      DI~DEST  ;    SI ~ SI + X;  DI ~ DI + Y;    00045600
              DS~LGTH CHR                                               00045700
              END;                                                      00045800
PROCEDURE SCTRL; FORWARD;                                 COMMENT 10-9; 00046000
COMMENT  *********************  FIND   *******************;COMMENT 10-9;00046005
BOOLEAN PROCEDURE FIND; COMMENT INITIALIZES THE DIRECTORY FOR LIBRARY   00046010
                   TAPES AND POSITIONS TO THE FIRST RECORD OF THE FILE  00046020
                   TO BE COPPIED;                                       00046030
              BEGIN                                                     00046040
INTEGER T1,CURBLK,NEWBLK,I;                                             00046050
LABEL ERR,FIN;                                                          00046060
COMMENT  ****************  LOOK  ***********************; COMMENT 10-9; 00046070
BOOLEAN STREAM PROCEDURE LOOK(ISYMB,DIRECTORY,STRTPOS,STOPOS,L);        00046080
VALUE L;                                                                00046085
              BEGIN COMMENT LOOKS FOR THE LIBRARY KEY IN THE DIRECTORY; 00046090
LOCAL TEMP, ROW,LGTH;                                                   00046100
LABEL LOOP,FOUND,FIN;                                                   00046110
                   SI ~ DIRECTORY; COMMENT POSITION TO THE FIRST ROW;   00046120
                   ROW ~ SI;                                            00046130
                   DI ~ LOC TEMP;                                       00046140
                   DS ~ WDS;                                            00046150
                   SI ~ TEMP;                                           00046160
                   SI ~ SI + 8; COMMENT SKIP THE FIRST WORD;            00046170
LOOP:                                                                   00046180
                   DI ~ LOC LGTH;                                       00046190
                   DI ~ DI + 7;                                         00046200
                   DS ~ CHR; COMMENT SAVE THE ENTRY LGTH;               00046210
                   SI ~ SI - 1;                                         00046220
                   DI~ LOC L; DI~ DI + 7;                               00046230
                   IF SC = DC THEN COMMENT KEY LGTH = ENTRY LGTH;       00046240
              BEGIN DI~ ISYMB; DI~ DI +4;                               00046250
                   IF LGTH SC = DC THEN GO TO FOUND;                    00046260
                   SI ~ SI + 3; COMMENT SKIP PAST RECORD COUNT;         00046270
                   GO TO LOOP;                                          00046280
              END;                                                      00046290
                   SI ~ SI-1; COMMENT KEY LGTH ! ENTRY LGTH;            00046300
                   IF SC = "0" THEN COMMENT END OF ROW;                 00046310
              BEGIN SI ~ SI + 1;                                        00046320
                   DI ~ LOC LOOK; COMMENT LOOK = ZERO;                  00046330
                   IF 3 SC = DC THEN COMMENT CONTINUE ON NEXT ROW;      00046340
              BEGIN SI ~ ROW;                                           00046350
                   SI ~ SI + 8;                                         00046360
                   ROW ~ SI;                                            00046370
                   DI ~ LOC TEMP ;                                      00046380
                   DS ~ WDS;                                            00046390
                   SI ~ TEMP;                                           00046400
                   GO TO LOOP;                                          00046410
              END; TALLY ~ 1; COMMENT WE DID NOT FIND IT;               00046420
                   LOOK ~ TALLY;                                        00046430
                   GO TO FIN;                                           00046440
              END; SI ~ SI + LGTH; COMMENT ADJUST TO NEXT ENTRY;        00046450
                   SI ~ SI + 4;                                         00046460
                   GO TO LOOP;                                          00046470
FOUND:             DI ~ STRTPOS;                                        00046480
                   DS ~ 5 LIT "0";                                      00046490
                   DS ~ 3 CHR;                                          00046500
                   IF SC = "0" THEN COMMENT END OF ROW;                 00046510
              BEGIN SI ~ SI +1;                                         00046520
                   DI ~ LOC LOOK; COMMENT LOOK = ZERO;                  00046530
                   IF 3 SC = DC THEN COMMENT CONTINUE ON NEXT ROW;      00046540
              BEGIN SI ~ ROW;                                           00046550
                   SI ~ SI + 8;                                         00046560
                   ROW ~ SI;                                            00046570
                   DI ~ LOC TEMP;                                       00046580
                   DS ~ WDS;                                            00046590
                   SI ~ TEMP;                                           00046600
              END  ELSE SI~SI-4;                                        00046610
              END;                                                      00046620
                   DI ~ LOC LGTH;                                       00046630
                   DI ~ DI + 7;                                         00046640
                   DS ~ CHR;                                            00046650
                   SI ~ SI + LGTH;                                      00046660
                   DI ~ STOPOS;                                         00046670
                   DS ~ 5 LIT "0";                                      00046680
                   DS ~ 3 CHR;                                          00046690
FIN:          END;                                                      00046700
                   IF LIBCOPY THEN COMMENT NESTED COPY;                 00046972
              BEGIN EIND~49&38[32:40:8]&88[24:40:8];                    00046974
                   GO TO ERR;COMMENT"LIBRARY COPY SELECTED";            00046976
              END;                                                      00046978
                   IF DIRECTORY[0,0]=0 THEN COMMENT FILL THE DIRECTORY; 00046980
              BEGIN                                                     00046990
                   WORDTRAN(LIBRAR(0),DIRECTORY[0,0],56);               00047000
                   T1 ~ DIRECTORY[0,0]-1;                               00047010
                   FOR I ~ 1 STEP 1 UNTIL T1 DO                         00047020
              BEGIN READ(LIBRAR);                         COMMENT DF;   00047030
                   WORDTRAN(LIBRAR(0),DIRECTORY[I,0],56);               00047040
              END; DIRECTORY[0,0]~-1;                                   00047050
                   STRTPOS ~ -4;                                        00047060
              END;                                                      00047070
                   CURBLK ~(STRTPOS-1) DIV 5 + REAL(LIBRX!56);  %       00047080
                   IF LOOK(NSYMB,DIRECTORY,STRTPOS,STOPOS,NLGTH)THEN    00047090
              BEGIN SYOUT(MSG[124],NSYMB,NLGTH);                        00047100
                   EIND~13&49[32:40:8]&83[24:40:8]&                     00047110
                   124[16:40:8];COMMENT"UNIDENTIFIED LIBR.NAME XXXX";   00047120
ERR:               ERP(EIND,0);COMPE~TRUE;FIND~LIBCOPY~FALSE;           00047130
                   GO TO FIN;                                           00047140
              END; NEWBLK~(STRTPOS-1)DIV 5;                             00047150
                   T1~NEWBLK-CURBLK;                      COMMENT DF;   00047170
                   SPACE(LIBRAR,T1);                      COMMENT DF;   00047190
                   READ(LIBRAR);                          COMMENT DF;   00047210
                   WORDTRAN(LIBRAR(0),CURBLK,1);                        00047220
                   IF NEWBLK|5+1 ! CURBLK THEN                          00047230
              BEGIN EIND~49&135[32:40:8]&8[24:40:8];                    00047240
                   COMMENT "LIBRARY READ ERROR";                        00047250
                   GO TO ERR;                                           00047260
              END; LIBRX~(STRTPOS-1)MOD 5|11+1;                         00047270
                   FIND~LIBCOPY~TRUE;                                   00047280
                   IF NOT DBLDOL THEN                                   00047284
            BEGIN                                                       00047287
                   SCTRL;COMMENT SCAN TO LIBRARY NAME;                  00047290
                   SCTRL;COMMENT SCAN PAST LIBRARY NAME;                00047300
                   IF KEY=335 THEN COMMENT "FROM";                      00047310
                   SCTRL;COMMENT SCAN PAST THE"FROM";                   00047320
                   IF KEY!342 THEN COMMENT"LIBRARY";                    00047330
              BEGIN EIND~77&49[32:40:8]&9[24:40:8];                     00047340
                   GO TO ERR;COMMENT"SYNTAX ERROR LIBRARY MISSING";     00047350
              END; SCTRL;COMMENT SCAN PAST "LIBRARY";                   00047360
                   IF SCLAS!7 THEN COMMENT ".";                         00047370
              BEGIN EIND~79; COMMENT "MISSING PERIOD";                  00047380
                   GO TO ERR;                                           00047390
              END; SCTRL;COMMENT SCAN PAST THE ".";                     00047400
              END;                                                      00047405
FIN:          END;                                                      00047410
COMMENT **************************    RLS   **************************; 00050950
PROCEDURE RLS(OP,ADRS,CREGSV,NDNT,MODE);%                               00051000
              VALUE OP,ADRS,CREGSV,NDNT,MODE;%USED ONLY FOR DEBUGN      00051050
              INTEGER OP,ADRS,CREGSV,NDNT;%  PRINTOUT. SUPPLIES MNEMONIC00051100
              BOOLEAN MODE;     %            CODE,BINARY MACHINE CODE,  00051150
              BEGIN INTEGER I;  %            & RELATIVE ADDRESS;FORMATS 00051200
                                %            & PRINTS THIS OUT.         00051300
COMMENT **************************    RLL   **************************; 00051350
STREAM PROCEDURE RLL(OP,OUTPT,ADRS,CREGSV,OMPH);%CALLED ONLY BY RLS.    00051400
    VALUE OP, ADRS, CREGSV, OMPH;                                       00051500
 BEGIN                                                                  00051600
      SI ~ OUTPT;              %BLANK THE OUTPUT AREA.                  00051700
      DI ~ OUTPT;                                                       00051800
      DS ~ 8 LIT"        ";                                             00051900
      DS ~ 14 WDS;                                                      00052000
      DI ~ OUTPT;              %EMIT PRINTOUT STARTS IN COL 25.         00052100
      DI ~ DI + OMPH;       COMMENT TO COLUMNIZE;                       00052200
                             %IMIT PRINTOUT STARTS IN COL 43.           00052201
      SI ~ LOC OP;             %CEMIT PRINTOUT STARTS IN COL 61.        00052300
      SI ~ SI + 4;                                                      00052400
      DS ~ 4 CHR ;          COMMENT MOVE IN OP CODE;                    00052500
      DI ~ DI + 2;                                                      00052600
 SI ~ LOC ADRS;                                                         00052700
 SI ~ SI + 6;                                                           00052800
 4(DS~3 RESET; 3(IF SB THEN DS~1 SET ELSE DS~1 RESET; SKIP 1 SB));      00052900
                             %CHANGES THREE BIT CHARACTERS TO SIX       00052901
 DI ~ DI + 2;                  % BIT CHARACTERS BY INSERTING 3 ZERO     00053000
SI ~LOC CREGSV;                % BITS BEFORE EACH.                      00053100
SI ~SI+ 5 ;                                                             00053200
SKIP 3 SB;                                                              00053300
 4(DS~3 RESET; 3(IF SB THEN DS~1 SET ELSE DS~1 RESET; SKIP 1 SB));      00053400
DI ~ DI +  1 ;                                                          00053500
DS~ 4 RESET;                                                            00053600
2(IF SB THEN DS~1 SET ELSE DS~1 RESET; SKIP 1 SB) ;                     00053700
 END;                                                                   00053900
                   IF DBGNFL THEN ELSE %                                00053920
              BEGIN DBGNFL ~ TRUE; %                                    00053921
                    FILL DEBUGN[*] WITH                                 00053922
                    OCT12,OCT24254360,OCT14,OCT67516360,                00053924
    OCT020,  OCT21242460,  OCT021,  OCT24432160,  OCT022,  OCT47514360, 00053926
    OCT023,  OCT43452760,  OCT024,  OCT23312460,  OCT025,  OCT27255060, 00053928
    OCT026,  OCT22222360,  OCT027,  OCT22516360,  OCT030,  OCT31456760, 00053930
    OCT043,  OCT43465160,  OCT044,  OCT23314560,  OCT045,  OCT27635160, 00053932
    OCT046,  OCT22262360,  OCT047,  OCT51634560,  OCT050,  OCT23462360, 00053934
    OCT060,  OCT62642260,  OCT061,  OCT24436260,  OCT100,  OCT44644360, 00053936
    OCT101,  OCT24434460,  OCT103,  OCT43452460,  OCT104,  OCT62632460, 00053938
    OCT105,  OCT45255060,  OCT106,  OCT62624560,  OCT107,  OCT67316360, 00053940
    OCT110,  OCT44426260,  OCT200,  OCT24316560,  OCT201,  OCT24432460, 00053942
    OCT202,  OCT23464460,  OCT203,  OCT43506560,  OCT204,  OCT62452460, 00053944
    OCT205,  OCT67233060,  OCT206,  OCT23306260,  OCT247,  OCT51636260, 00053946
OCT250,OCT23242360,OCT305,OCT26632360,OCT403,OCT44464760,COMMENT 11-16; 00053948
OCT404,OCT43462460,OCT405,OCT24644760,OCT406,OCT63464760,COMMENT 11-16; 00053950
OCT426,OCT43222360,OCT430,OCT23632360,OCT446,OCT43262360,COMMENT 11-16; 00053952
OCT502,OCT45464760,OCT600,OCT31246560,OCT705,OCT26632660,COMMENT 11-16; 00053954
OCT1003,OCT44246260,OCT1024,OCT31622460,                 COMMENT 11-16; 00053956
OCT1025,OCT43255060,OCT1026,OCT22226660,                 COMMENT 11-16; 00053958
OCT1044,OCT31624560,OCT1045,OCT43626260,                 COMMENT 11-16; 00053960
OCT1046,OCT22266660,OCT1105,OCT25504360,                 COMMENT 11-16; 00053962
OCT1106,OCT62624760,OCT1110,OCT23444560,                 COMMENT 11-16; 00053964
OCT1305,OCT23632360,OCT1426,OCT43226460,                 COMMENT 11-16; 00053966
OCT1446,OCT43266460,OCT1600,OCT51246560,                 COMMENT 11-16; 00053968
OCT1705,OCT23632660,                                                    00053970
    OCT25672360,  OCT25515127,  OCT22622460,  OCT22626260,  OCT51242160,00053974
    OCT63516660,  OCT62252460,  OCT63242160,  OCT25515130,  OCT25515131,00053976
OCT63224560,OCT25515142,OCT62242160,OCT62622160,OCT62262460,            00053978
    OCT62512460,  OCT25515143,  OCT25515144,  OCT62256260,  OCT25515145,00053980
    OCT63255060,  OCT63452560,  OCT63252760,  OCT63275160,  OCT62516260,00053982
    OCT62266260,  OCT25515146,  OCT25515147,  OCT63254360,  OCT63436260,00053984
    OCT63214560,  OCT22316360,  OCT31452360,  OCT62632360,  OCT62252360,00053986
    OCT23512660,  OCT41452360,  OCT41262360,  OCT41456260,  OCT41266660,00053988
    OCT51232160,  OCT25456260,  OCT22456260,  OCT51622160,  OCT62232160,00053990
    OCT41512360,  OCT63622160,  OCT41516560,  OCT23255060,  OCT23452560,00053992
OCT23252760,OCT23275160,OCT22316260,OCT22315160,OCT46236560,COMMENT 5/1;00053994
    OCT31236560,  OCT23254360,  OCT23436260,  OCT26626460,  OCT26212460,00053996
OCT63514760,OCT63514560,OCT63517160,OCT63516260,OCT23446760,            00053998
    OCT43316323,  OCT46476351,  OCT46472423,  OCT24256223,              00054000
OCT45464647, OCT23264560, OCT23224560, OCT23262460,      COMMENT 11-17; 00054002
OCT23222460, OCT31624660, OCT25515126, OCT24312160,      COMMENT 11-17; 00054004
    OCT24312260,  OCT63512260,  OCT26234360,  OCT26232560;              00054006
              END; %                                                    00054008
                   IF MODE THEN %CHARACTER MODE                         00054010
                    RLL(DEBUGN[OP+124],LBUF,ADRS~ADRS,CREGSV~CREGSV-8,  00054015
                         NDNT)  %INTEGERIZE PARAMETERS &CALL FORMATTING 00054020
                   ELSE         % ROUTINE  ELSE  WORD MODE.             00054025
              BEGIN IF NDNT = 10 THEN% WORD-MODE SYLLABLE FROM SORT GEN.00054030
                   IF OP.[46:2] = 1 AND OP.[42:6] > 44 THEN %           00054031
              BEGIN ADRS ~ OP.[36:6]; OP ~ OP.[42:6]; %                 00054032
              END ELSE %                                                00054033
              BEGIN ADRS ~ OP.[36:10]; OP ~ OP.[46:2]; %                00054034
              END;  IF OP = OPR THEN % IF OPERATOR                      00054035
              BEGIN %                                                   00054036
                   WHILE DEBUGN[I] ! ADRS DO %                          00054037
              IF DEBUGN[I] < ADRS THEN I ~ I + 2 %                      00054040
                   ELSE         % COULD NOT FIND: ERROR                 00054045
              BEGIN ERP(40&75[32:40:8]&23[24:40:8],0); %                00054050
                   COMPE ~ TRUE;%"ILLEGAL COMPILE OPERATOR".            00054055
              END;             %                                        00054060
              I ~ DEBUGN[I+1];% STORE MNEMONIC                          00054065
                   ADRS ~ 0;   %                                        00054070
              END  ELSE        %                                        00054075
                   I~DEBUGN[(IF OP>40 THEN((OP DIV 60)+5)ELSE OP)+189]; 00054080
                   RLL(I,LBUF,ADRS~ADRS,CREGSV~CREGSV-8,NDNT);%         00054085
              END;             %                                        00054090
                   WRITELINE;  %                                        00054095
              END RLS;         %                                        00054100
INTEGER  SAVECREG; % SAVE CREG DURING CODE FIXUP               %CJC 067 00054105
COMMENT  *********************  IS  ********************;               00054110
STREAM PROCEDURE IS ( VAL,SEB,SYLZ);                                    00054120
VALUE VAL,SYLZ;                                                         00054130
              BEGIN SI~LOC VAL; SI~SI+6; DI~SEB;                        00054140
                   DI~DI+SYLZ;DS~2 CHR;                                 00054150
              END;                                                      00054160
COMMENT EMITS CHAR-MOD LIT-OP PAIRS;                      COMMENT 6- 1; 00054200
COMMENT **************************   CEMLT  **************************; 00054350
 PROCEDURE CEMLT (LT,OPT);     %EMITS CHARACTER MODE SYLLABLES.         00054400
              VALUE LT, OPT; INTEGER LT, OPT;%    (INLINE ONLY)         00054500
              BEGIN                                                     00054520
                   IF CHMX > 8184 THEN%IF SEGMENT TOO LONG THEN         00054601
             BEGIN CHMX ~ 6000; COMPE ~ TRUE;                           00054602
                   EIND~0&29[32:40:8]&15[24:40:8]&8[16:40:8];           00054603
                   ERP(EIND,0);                                         00054604
             END;                                                       00054605
                   IF OPT = 64  THEN LT ~ 1;                            00054650
                             %IF INLINE CHAR MODE EXIT THEN             00054651
                   IF PSUP THEN%IF DEBUGN THEN                          00054700
                   RLS(OPT,OPT&LT[36:42:6],CREG,30,TRUE);               00054900
                   IS((OPT&LT[36:42:6]),CHM[CHMX.[35:3],                00055500
                             %BUILDING LIT/OP PAIR.                     00055501
                    CHMX.[38:7]], CHMX.[45:3]); CHMX ~ CHMX + 2;        00055600
COMMENT TEMPORARY;      IF  SGMTLVL ! 11 THEN                           00055702
                             %ASSURES THAT CHAR MODE SYLLABLES          00055703
COMMENT TEMPORARY; BEGIN ERP(35 & 19[32:40:8]& 6[24:40:8],0);COMPE~TRUE;00055704
                             %EMITTED ONLY BETWEEN A CMN & A CMX.       00055705
COMMENT TEMPORARY;       SGMTLVL~11; COMMENT LEVEL NOT RIGHT;           00055706
COMMENT TEMPORARY; END;                                                 00055708
              END;                                                      00056000
COMMENT ********************** CEMIT ************************; %CJC 069 00057100
PROCEDURE CEMIT(LT,OPT,GARFUNCLE);                             %CJC 069 00057200
         VALUE LT,OPT;                                         %CJC 069 00057300
         INTEGER LT,OPT,GARFUNCLE;                             %CJC 069 00057400
              BEGIN SAVECREG ~ CHMX;                           %CJC 069 00057500
                   CHMX ~ GARFUNCLE;                           %CJC 069 00057600
                   CEMLT(LT,OPT);                              %CJC 069 00057700
                   GARFUNCLE ~ CHMX;                           %CJC 069 00057750
                   CHMX ~ SAVECREG;                            %CJC 069 00057800
              END OF CEMIT;                                    %CJC 069 00057900
COMMENT **************************    IMIL  **************************; 00057950
COMMENT EMITS WORD MODE SYLLABLES TO INITALIZATION ARRAY SEG1 USING     00058000
     SEG1X AS COUNTER  ;                                                00058100
 PROCEDURE IMIL(OPT,ADR);      %EMITS WORD MODE SYLLABLES TO INIT-      00058200
              VALUE OPT, ADR; INTEGER OPT, ADR;                         00058300
                             % ALIZATION ARRAY SEG1 USING SEG1X AS      00058301
              BEGIN         % COUNTER.                         %CJC 070 00058400
                   IF OPT = OPDC OR OPT = DESC THEN%               SI20000058485
                   IF BOOLEAN(ADR.[33:1]) THEN%  IF CNPL>511 THEN  SI20000058486
              BEGIN ADR.[33:1] ~ 0;                            %CJC 072 00058487
                   IMIL(OPR,XRT);                              %CJC 072 00058488
              END  ELSE %                                          SI20000058489
                   IF ADR < 5 THEN %                               SI20000058490
                             %IF OPDC OR DESC WITH REF TO FIRST         00058491
              BEGIN ERP(75 & 8[32:40:8],0);COMPE~TRUE;   COMMENT D-8;   00058492
                             %5 WORDS OF PRT THEN "COMPILE ERROR".      00058493
              END;                                       COMMENT D-8;   00058494
                   IF PSUP THEN%IF DEBUGN THEN                          00058500
                   RLS(OPT,ADR ,SEG1X,43,FALSE);                        00058700
                   IF OPT > 40 THEN % NON-ZERO BRANCH                   00058750
              BEGIN IS((OPT & ADR[36:44:4]),             COMMENT 11-16; 00058800
                   SEG1[SEG1X.[35:3],SEG1X.[38:7]],      COMMENT 11-16; 00058900
                   SEG1X.[45:3]);                        COMMENT 11-16; 00059000
              END ELSE                                   COMMENT 11-16; 00059200
              BEGIN IF OPT > 8 THEN                      COMMENT 11-17; 00059400
              BEGIN IF OPT < 13 THEN OPT ~ OPT +( 128|(ADR DIV 6))      00059500
                             %CONSTRUCT SYLLABLES.                      00059501
                   +(16 |(ADR MOD 6)) ELSE OPT ~ OPT + 16 | ADR         00059600
              END; IS(IF OPT > 4 THEN (4| OPT + 1) ELSE                 00059700
                   (OPT & ADR[36:38:10]),SEG1[SEG1X.[35:3],             00059800
                   SEG1X.[38:7]],SEG1X.[45:3]);          COMMENT 11-16; 00059900
              END;                                       COMMENT 11-16; 00060000
                   SEG1X ~ SEG1X +2;                     COMMENT 11-16; 00060200
COMMENT TEMPORARY;      IF  SGMTLVL ! 10 THEN                           00060202
                             %ASSURES THAT WORD MODE SYLLABLES          00060203
COMMENT TEMPORARY; BEGIN ERP(19 & 6[32:40:8]&35[24:40:8],0);COMPE~TRUE; 00060204
                             %ARE NOT EMITTED BETWEEN A CMN & CMX.      00060205
COMMENT TEMPORARY;       SGMTLVL ~ 10; COMMENT NOT RIGHT LEVEL;         00060206
COMMENT TEMPORARY; END;                                                 00060208
              END OF IMIL;                                     %CJC 070 00060300
COMMENT ********************** IMIT *************************; %CJC 071 00061600
PROCEDURE IMIT(OPT,ADR,CREG);                                  %CJC 071 00061700
         VALUE OPT,ADR;                                        %CJC 071 00061800
         INTEGER OPT,ADR,CREG;                                 %CJC 071 00061900
              BEGIN SAVECREG ~ SEG1X;                          %CJC 071 00062000
                   SEG1X ~ CREG;                               %CJC 071 00062100
                   ADR.[33:1] ~ 0;                             %CJC 071 00062200
                   IMIL(OPT,ADR);                              %CJC 071 00062300
                   CREG ~ SEG1X;                               %CJC 071 00062350
                   SEG1X ~ SAVECREG;                           %CJC 071 00062400
              END OF IMIT;                                     %CJC 071 00062500
COMMENT **************************    EMIL  **************************; 00062750
 PROCEDURE EMIL(OPT,ADR);                                               00062800
              VALUE OPT, ADR; INTEGER OPT, ADR;                         00062900
              BEGIN                                                     00062920
                   IF CREG > 8184 THEN%IF SEGMENT TOO LONG THEN         00063001
             BEGIN CREG ~ 6000; COMPE ~ TRUE;                           00063002
                   EIND~0&29[32:40:8]&15[24:40:8]&8[16:40:8];           00063003
                   ERP(EIND,0);                                         00063004
             END;                                                       00063005
                   IF ADR > 1023 THEN                                   00063010
                             %IF THE ADDRESS PART OF SYLLABLE >1023     00063011
                   IF     BOOLEAN(ADR.[33:1]) THEN ELSE %          SI20000063015
             BEGIN EIND ~ 57&76[32:40:8]&15[24:40:8]&8[16:40:8];        00063020
                             %"STATEMENT GROUP SIZE ERROR".             00063021
                   ERP(EIND,0);  COMPE ~ TRUE;                          00063030
              END;                                                      00063040
                   IF OPT = OPDC OR OPT = DESC THEN %              SI20000063045
                   IF BOOLEAN(ADR.[33:1]) THEN%  IF CNPL>511 THEN  SI20000063046
              BEGIN ADR.[33:1] ~ 0;                            %CJC 068 00063047
                   EMIL(OPR,XRT);                              %CJC 068 00063048
              END  ELSE %                                          SI20000063049
                   IF ADR < 5 THEN%                                SI20000063050
                             %IF OPDC OR DESC WITH REF TO FIRST         00063051
              BEGIN ERP(75 & 8[32:40:8],0);COMPE~TRUE;   COMMENT D-8;   00063052
                             %5 WORDS OF PRT THEN " COMPILE ERROR".     00063053
              END;                                       COMMENT D-8;   00063054
                   IF PSUP THEN%IF DEBUGN THEN                          00063100
                   RLS(OPT,ADR,CREG,25,FALSE);                          00063200
                   IF OPT >40 THEN COMMENT NON-ZERO BRANCH       11-16; 00063300
                             % SYLLABLES.                               00063301
                             %ADJUST CREG TO NEXT WORD IF 4.            00063302
              BEGIN IS((OPT & ADR[36:44:4]),             COMMENT 11-16; 00063400
                   SEG[CREG.[35:3],CREG.[38:7]],         COMMENT 11-16; 00063500
                  CREG.[45:3]);                          COMMENT 11-17; 00063600
              END  ELSE                                  COMMENT 11-16; 00063700
              BEGIN IF OPT > 8 THEN%CONSTRUCT SYLLABLES.                00064000
              BEGIN IF OPT < 13 THEN OPT ~ OPT +( 128|(ADR DIV 6))      00064100
                   +(16 |(ADR MOD 6)) ELSE OPT ~ OPT + 16 | ADR         00064200
              END; IS(IF OPT > 4 THEN (4| OPT + 1) ELSE                 00064300
                   (OPT & ADR[36:38:10]),SEG [CREG .[35:3],             00064400
                   CREG.[38:7]],CREG.[45:3]);            COMMENT 11-16; 00064500
              END;                                       COMMENT 11-16; 00064550
                   CREG ~ CREG+2;                        COMMENT 11-16; 00064850
COMMENT TEMPORARY;      IF  SGMTLVL ! 10 THEN                           00064852
                             %ASSURES THAT WORD MODE SYLLABLES          00064853
COMMENT TEMPORARY; BEGIN ERP(19 & 6[32:40:8]&35[24:40:8],0);COMPE~TRUE; 00064854
                             %ARE NOT EMITTED BETWEEN A CMN & CMX.      00064855
COMMENT TEMPORARY;       SGMTLVL ~ 10; COMMENT NOT RIGHT LEVEL;         00064856
COMMENT TEMPORARY; END;                                                 00064858
              END;                                                      00064900
COMMENT ********************* EMIT **************************; %CJC 067 00066100
PROCEDURE EMIT(OPT,ADR,SREG);                                  %CJC 067 00066200
         VALUE OPT,ADR;                                        %CJC 067 00066300
         INTEGER OPT,ADR,SREG;                                 %CJC 067 00066400
              BEGIN IF ADR > 1023 THEN ADR ~ 4096;             %CJC 067 00066500
                   SAVECREG ~ CREG;                            %CJC 067 00066600
                   CREG ~ SREG;                                %CJC 067 00066700
                   EMIL(OPT,ADR);                              %CJC 067 00066800
                   SREG ~ CREG;                                %CJC 067 00066850
                   CREG ~ SAVECREG;                            %CJC 067 00067000
              END OF EMIT;                                     %CJC 067 00067100
COMMENT **************************   OPNAR  **************************; 00067150
COMMENT  OPENS ARRAYS;                                                  00067200
PROCEDURE OPNAR (SAV,PRTCTR,LGTH);                             %CJC 073 00067300
                             %EMITS CODE TO OPEN OBJECT TIME ARRAY      00067301
         VALUE   SAV,PRTCTR,LGTH;                              %CJC 073 00067400
         INTEGER SAV,PRTCTR,LGTH;                              %CJC 073 00067500
              BEGIN                                            %CJC 073 00067600
LABEL EDE;                                                     %CJC 073 00067700
                   IMIL(OPR,MKS);                              %CJC 073 00067800
                   IF PRTCTR > 511 THEN                        %CJC 073 00067900
              BEGIN IMIL(LITC,PRTCTR); IMIL(DESC,10);          %CJC 073 00068000
              END  ELSE                IMIL(DESC,PRTCTR);      %CJC 073 00068100
                   IMIL(LITC,LGTH);    IMIL(LITC,1); % DIM     %CJC 073 00068200
                   IMIL(LITC,1);                     % NUMB    %CJC 073 00068300
                   IMIL(LITC,SAV);     IMIL(OPDC,5);           %CJC 073 00068400
                   ARAYSZ ~ ARAYSZ + LGTH;                     %CJC 073 00068500
EDE:          END OF OPNAR;                                    %CJC 073 00068600
    COMMENT   ENTRY INTO SEGMENT DICTIONARY  ;             COMMENT DF;  00070810
    COMMENT   *****************  E N T S E G  ************************; 00070820
    PROCEDURE ENTSEG(ARAY,SIZ);  VALUE SIZ;                COMMENT DF;  00070830
                   REAL ARRAY ARAY[0,0]; INTEGER SIZ ;     COMMENT DF;  00070840
              BEGIN REAL SDX;  SDX ~ ARAY[0,0];            COMMENT DF;  00070841
                   SDT ~ DSKLOC  & 2[1:46:2] &             COMMENT DF;  00070850
                   ((SIZ +7)DIV 8)[18:33:15] ;             COMMENT DF;  00070870
              END;                                         COMMENT DF;  00070890
COMMENT     GETS FOLLOWER LINK FROM DICTIONARY     ;                    00070900
COMMENT *************************     OFOL    ************************; 00070950
INTEGER PROCEDURE OFOL (OCUR);                                          00071000
                   VALUE OCUR; INTEGER OCUR ;                           00071100
              BEGIN OFOL~DICT[OCUR.[33:6],OCUR.[39:9]].[18:15];         00071200
              END;                                                      00071400
COMMENT *************************    OILNK    ************************; 00071450
 INTEGER PROCEDURE OILNK (OCUR);%GETS INFORMATION LINK FROM DICT.       00071500
              VALUE OCUR;                                               00071600
              INTEGER OCUR;                                             00071700
              BEGIN OILNK~DICT[(OCUR+1).ZW,                             00071800
                   (OCUR+1).ZY].[33:15];                                00071900
              END;                                                      00072100
COMMENT *************************  MAKELABEL  ************************; 00072450
 PROCEDURE MAKELABEL(MODE,PRTA,RELA,CLOC); VALUE MODE,PRTA,RELA,CLOC;   00072500
                                           INTEGER MODE,PRTA,RELA,CLOC; 00072600
              BEGIN                                                     00072700
                    REAL T1,T2;                                    %7-6700072800
%                                                                  %7-6700072850
                    IF(T1~SEGDICT[T10.[36:5],T10.[41:7]].[8:10])=0 THEN 00072900
              BEGIN %FIRST LABEL IN SEGMENT                        %7-6700073000
%                                                                  %7-6700073050
                             %MODE                                      00073051
                    RELA ~ 0; % NOTICE VALUE CALL                  %7-6700073100
                             %PRT ADDRESS AND RELATIVE ADD. IN SEG      00073101
                    T2 ~ 1;   % SET STOPPER BIT                    %7-6700073200
                             %SEGMENT NUMBER.                           00073201
                    T1 ~ T10; % LINK FIELD=INDEX TO SEGDICT        %7-6700073300
              END ELSE                                             %7-6700073400
              BEGIN %AT LEAST ONE PREV ENTRY FOR THIS SEGMENT      %7-6700073500
                    T2 ~ 0;   % RESET STOPPER BIT                  %7-6700073600
                              % LINK FIELD=LINK TO PREV PRT ENTRY  %7-6700073700
              END;                                                 %7-6700073800
                    SEGDICT[T10.[36:5],T10.[41:7]] ~ DSKLOC&CLOC   %7-6700073900
                                  [1:46:2]&PRTA[8:38:10];          %7-6700074000
                              % LINK SEGDICT TO THIS LATEST ENTRY  %7-6700074100
                    PRRRT ~ RELA&((IF MODE=2 THEN 0 ELSE 4|MODE+2) %7-6700074200
                                  +T2)[4:45:3]&T1[7:37:11]&T10     %7-6700074300
                                  [18:33:15]&5[1:45:3];            %7-6700074400
                              % INSERT NEW ENTRY INTO PRT          %7-6700074500
                             %TWO WORDS PER LABEL                       00074501
              END;                                                      00074600
COMMENT *************************    TRANSF   ************************; 00074700
PROCEDURE TRANSF (SOURCE,LENGTH,SEGDICT);% MOVES GENERATED CODE TO DISK 00074800
                   VALUE LENGTH; INTEGER LENGTH; ARRAY SOURCE[0,0];     00074820
                             % ARRAY(8 | 128) TO CODEFILE(1 | 128)      00074821
                   ARRAY SEGDICT [0,0];                                 00074830
              BEGIN INTEGER T1,T2,T4,T5,T9;                COMMENT DF;  00074840
                             % SEGMENTS OF MORE THAN 128 WORDS ARE      00074841
                             % WRITTEN IN SECTIONS.                     00074860
                   T1 ~1 ;                                              00074880
                   T2 ~ ((T9~(LENGTH-1))+29)DIV 30;                     00074882
                   IF T2 } TWO99 THEN                      COMMENT DF;  00074884
              BEGIN     DSKLOC~DSKLOC+TWO99; TWO99~SOURCE[0,0];      %DF00074885
                   SEGDICT[TWO99.[36:5],TWO99.[41:7] ]     COMMENT DF;  00074886
                   .[33:15]  ~DSKLOC; TWO99~CHUNK;         COMMENT DF;  00074887
              END; COMMENT CANT SPLIT SEGMNT ACROSS ROWS;  COMMENT DF;  00074888
                   WHILE T9 > 0      DO                    COMMENT DF;  00074900
              BEGIN            T2 ~(128-T1.[41:7]) ;       COMMENT DF;  00074920
                   IF T2 >T9 THEN T2 ~T9;                  COMMENT DF;  00074940
                         T5 ~ (30 - T4) ;                  COMMENT DF;  00074960
                   IF T5 > T2 THEN T5 ~ T2;                COMMENT DF;  00075000
                   WORDTRAN(SOURCE[T1.[36:5],              COMMENT DF;  00075020
                    T1.[41:7]],CODE    (T4),T5);           COMMENT DF;  00075030
                   T1~T1+T5; T9~T9-T5;T4~T4+T5;            COMMENT DF;  00075040
                   IF T4>29 OR T9 = 0 THEN                 COMMENT DF;  00075060
              BEGIN WRITE (CODE[DSKLOC]);                  COMMENT DF;  00075100
                   DSKLOC ~DSKLOC + 1;      T4~0;          COMMENT DF;  00075120
                   TWO99 ~TWO99 -1;COMMENT SEGMNTS LEFT IN ROW     DF;  00075125
              END ;                                        COMMENT DF;  00075160
              END;                                       COMMENT   DF;  00075180
              END;                                       COMMENT   DF;  00075190
COMMENT  ***************** FIXCOMNCRD  *******************************; 00075200
PROCEDURE FIXCOMNCRD(LGTH);COMMENT COMNCRD~A PRESENT DESC        DF-DC; 00075202
VALUE LGTH; INTEGER LGTH;                                COMMENT DF-DC; 00075204
              BEGIN                                                     00075206
                   IMIL(LITC,10     );                   COMMENT DF-DC; 00075210
                   IMIL(OPR,LOD);                        COMMENT DF-DC; 00075215
                   IMIL(LITC,COMNCRD);                   COMMENT DF-DC; 00075220
                   IMIL(OPR,LOD);                        COMMENT DF-DC; 00075225
                   IMIL(DIA,33);                         COMMENT DF-DC; 00075230
                   IMIL(DIB,33);                         COMMENT DF-DC; 00075235
                   IMIL(TRB,15);                         COMMENT DF-DC; 00075240
                   IMIL(LITC,COMNCRD);                   COMMENT DF-DC; 00075245
                   IMIL(DIA,33);                         COMMENT DF-DC; 00075250
                   IMIL(DIB,18);                         COMMENT DF-DC; 00075255
                   IMIL(TRB,15);                         COMMENT DF-DC; 00075260
                   RFIX ~ SEG1X;                 % SAME AREA FIX-UP     00075262
                   IMIL(LITC,LGTH);                      COMMENT DF-DC; 00075265
                   IMIL(DIA,38);                         COMMENT DF-DC; 00075270
                   IMIL(DIB,8);                          COMMENT DF-DC; 00075275
                   IMIL(TRB,10);                         COMMENT DF-DC; 00075280
                   IMIL(LITC,COMNCRD);                   COMMENT DF-DC; 00075285
                   IMIL(OPR,STD);                        COMMENT DF-DC; 00075290
              END;                                       COMMENT DF-DC; 00075295
COMMENT MOVES GENERATED CODE TO CODEFILE AND UPDATES SEGDICT  ;         00075300
                   PROCEDURE SEGDUMP (ARANM, CREG);                     00075400
                             %MOVES GENERATED CODE TO CODEFILE,         00075401
                       INTEGER CREG;%UPDATES SEGDICT, WRITES SEGMENT.   00075600
                   ARRAY ARANM [0,0];                                   00075700
              BEGIN                                                     00075800
INTEGER       I ,J;                                                     00075900
              IF COMPA THEN                                             00075910
                   BEGIN                                                00075920
                        CREG := 8;                                      00075930
                        SEGX := 0;                                      00075940
                   END ELSE                                             00075950
              BEGIN % DUMP ONLY IF NO SYNTAX ERRORS                     00075960
         COMMENT   STACK IS MSCW, AN, FN, SIX, REM, 0, RCW;             00076000
                    IF CREG = 8 THEN CREG~16;%IF 8 THEN DUMMY SEGMENT.  00076200
                   I ~ (CREG+7) DIV 8;                                  00076300
                   IF(I-1)>MAXSEG THEN MAXSEG~I-1                       00076500
                             %KEEP RECORD OF LONGEST SEGMENT.           00076501
                   ELSE IF(I-1)>NEXMAX THEN NEXMAX~I-1;   COMMENT 9-9;  00076550
                   DRUMSIZE ~ DRUMSIZE + I;%SAVE TOTAL NUMBER OF WORDS. 00076600
                   J ~ ARANM[0,0] ;                        COMMENT DF;  00076700
                   SEGDICT[DTR] ~ SEGDICT[DTR]& % PACK LGTH&SEGLOC IN   00076800
                             %SEARCH SEGMENT DICTIONARY FOR LABELS      00076801
                                       (I-1)[18:33:15]&DSKLOC[33:33:15];00076900
                             % WITH SEGMENT NUMBER EQUAL TO # IN        00076901
                             %SEGMENT BEING DUMPED.                     00076950
                   IF I > 1023 THEN%IF SEGMENT >1023 WORDS LONG THEN    00078002
              BEGIN EIND ~0&29[32:40:8]&15[24:40:8]&8[16:40:8];         00078003
                   ERP(EIND,0)      ;                                   00078004
                   COMPE ~ TRUE;%                                       00078005
              END;%                                                     00078100
              BEGIN                                                     00078240
                   TRANSF (ARANM,I,SEGDICT); % DUMP SEGMENT             00078300
                   IF DCOMM THEN   %IF DATA COMM THEN                   00078310
              BEGIN IF SEGX >0 AND        J.[37:11] > 8 THEN            00078320
              BEGIN LIDX ~ J;       SEGX ~ SEGX +1;                     00078400
                   LINEDIT[ DTR] ~DSKLOC & (SEGX-1)[18:33:15];          00078500
                   TRANSF (LINESEG,SEGX,LINEDIT); %WRITE LINE SEG REL   00078600
                   FOR J ~1 STEP 1 UNTIL SEGX DO LINESEG[DTR]~ 0;       00078620
              END  ELSE LINEDIT [DTR] ~ -1;                             00078630
                   SEGX ~ 0;                                            00078660
              END; %                                                    00078690
                   IF PRTFF THEN%IF PRINTING PRT NUMBERS THEN           00078700
              BEGIN                                                     00078800
                   J ~ ARANM [0,0].[37:11];                             00078810
                   MSG[126] ~ 0 & 4 [1:43:5];                           00078812
                   OCV1 (MSG[126],1,0,4,J);                             00078814
                   MSG[124] ~ 0 & 4 [1:43:5];                           00079000
                   I ~ I - 1;                                           00079050
                   OCV1(MSG[124],1,0,4,I);                              00079100
                   EIND~29&126[32:40:8]&15[24:40:8]&124[16:40:8];       00079200
                             %"PROCEDURE XXXX SIZE XXXX".               00079201
                   I ~REAL(DCOM);      DCOM ~FALSE;                     00079230
                   J ~ REAL(LASTITEM); LASTITEM ~TRUE;                  00079260
                   IF PRINTIT THEN ERP(EIND,"*");% PRINT TO RIGHT       00079300
                   DCOM ~ BOOLEAN(I);                                   00079330
                   LASTITEM~ BOOLEAN(J);                                00079360
              END;                                                      00079400
              END;                                                      00079500
                   ARANM[0,0] ~ SDX;% STORE "NEXT"SDX VALUECOMMENT DF;  00079600
                             %INSERTS SEGMENT # FOR NEXT SEGMENT.       00079601
                   SDX ~ SDX + 1;                          COMMENT DF;  00079700
                             %COUNT UP SEGMENT NUMBER.                  00079701
                   CREG ~ 8;   %RESET CREG(SEG1X,CHMX) TO FIRST WORD    00079800
              END;                                                      00079900
              END;%                                                     00079920
COMMENT *************************     ITYP    ************************; 00079950
COMMENT     PLACES ENTRY TYPE INTO DICTIONARY   ;                       00080000
PROCEDURE ITYP (TYPE,OCUR) ;                                            00080100
                   VALUE TYPE, OCUR;  INTEGER  TYPE,OCUR;               00080200
              BEGIN                                                     00080205
                    IF OCUR > 850 THEN                                  00080206
                             %IF NOT IN RESERVED WORD PART OF DICT      00080207
                   DICT[OCUR.ZW,OCUR.ZY].[1:5]~TYPE;                    00080300
              END;                                                      00080400
COMMENT *************************    IILNK    ************************; 00080450
COMMENT     SETS INFORMATION ARRAY LINK INTO DICTIONARY ENTRY    ;      00080500
 PROCEDURE IILNK (OCUR,IX);                                             00080600
              VALUE OCUR,IX;                                            00080700
              INTEGER OCUR, IX;                                         00080800
              BEGIN                                                     00080900
                    IF OCUR > 850 THEN                                  00080905
              BEGIN                                                     00080906
                   DICT[(OCUR+1).ZW,                                    00081000
                   (OCUR+1).ZY].[33:15]~IX;                             00081100
              END;                                                      00081105
              END;                                                      00081200
PROCEDURE UPIT; FORWARD;                                                00081300
COMMENT *************************   MAKEFILE  ************************; 00081350
COMMENT SET UP DESCRIPTORS, FIB AND LABELS FOR A FILE. DECLARE ARRAYS   00081400
         FOR RUN TIME IN SEG1 ARRAY ;                                   00081500
PROCEDURE MAKEFILE (OPTNL,ARS,ORIG,HDWR,UT,IX);                         00081600
              VALUE OPTNL,ARS,ORIG,HDWR,UT,IX;                          00081700
                             %OPTNL="SELECT OPTION"FLAG. ARS="AL-       00081701
                             % TERNATE AREAS" CTR. ORIG=FILE OCUR.      00081702
              INTEGER OPTNL,ARS,ORIG,HDWR,UT,IX;                        00081800
                             % HDWR=HARDWARE TYPE. UT=NO.OF UNITS.      00081801
                             % IX=INFO INDEX.                           00081802
              BEGIN LABEL EDE;EDE:                        COMMENT 8-27; 00081900
                   JCV (IX,J,K);                                        00082000
           COMMENT FIB DESCRIPTOR ;                                     00082100
                   INFO[J,K].[14:10]~PRTCTR; UPIT;                      00082200
                   A~FIBX+4; FIB[A.[38:3],A.[41:7]].[5:1]~OPTNL;        00082300
                             %0="SELECT" 1="SELECT OPTIONAL".           00082301
                   FIB[A.[38:3],A.[41:7]].[13:11]~FIBX DIV 20;          00082500
                             %FILE NUMBER                               00082501
                   A~FIBX+5; FIB[A.[38:3],A.[41:7]].[42:1]  COMMENT DF; 00082600
                             %MARK AS "CLOSED, CAN OPEN".               00082601
                   ~1;                                                  00082650
                   A~FIBX+13; FIB[A.[38:3],A.[41:7]].[1:9]~ARS+1;       00082700
                             %NUMBER OF BUFFERS REQUESTED.              00082701
                   IF NOT DSFLAG THEN                     COMMENT DSRT; 00082725
                   FIB[A.[38:3],A.[41:7]].[47:1] ~ 1;                   00082750
                   FIB [A.[38:3],A.[41:7]].[24:1]~IF HDWR = 2 OR        00082800
                   HDWR = 4 THEN                                        00082801
                   0 ELSE 1; COMMENT RECORDING MODE;                    00082900
           COMMENT  SORT-TAPES  ;                                       00083000
                   IF HDWR = 10 THEN                                    00083100
             BEGIN A~FIBX+4;   %1=SORT-FILE INDICATION.                 00083200
                   FIB[A.[38:3],A.[41:7]] ~ FIB[A.[38:3],A.[41:7]]      00083201
                        &1[7:47:1]             %SORT FLAG               00083220
                             %FIB DESCRIPTOR FOR USE ON SORT.           00083221
                        &7[45:45:3]            % RETENTION              00083230
                        & REAL(MERGEFL)[28:47:1]                        00083240
                        & REAL(DSFLAG)[29:47:1];                        00083250
             END;                                                       00083260
                        A~FIBX+16; FIB[A.[38:3],A.[41:7]]~PRTCTR-1;     00083270
                   JCV (IX+2,J,K);                                      00083300
                   IF T4 = 1 THEN                                       00083400
                   INFO [J,K].[8:10]~ FIBX; COMMENT FIB INDEX;          00083500
                             %COMPILE TIME FIB ARRAY INDEX.             00083501
                   UPIT;  UPIT;                                         00083600
           COMMENT  READ / WRITE DESCRIPTORS ;                          00083700
                   JCV (IX,J,K); INFO [J,K].[4:10]~ PRTCTR;             00083800
                             %1ST I/O DESCRIPTOR.                       00083801
                   INFO[J,K+1].[44:4]~HDWR;%HARDWARE NUMBER.            00083850
                   T10~ARS+1; FOR T9~1 STEP 1 UNTIL T10 DO UPIT;        00083900
                   A~FIBX+19; FIB[A.[38:3],A.[41:7]]~ORIG;              00084000
                             %SAVE OCUR IN CASE OF HASHED.              00084001
                   FIBX~FIBX+20;%UPDATE FIB INDEX.                      00084100
              END;                                                      00084200
COMMENT *************************    OSZDEP   ************************; 00084250
 COMMENT GETS SIZE DEPENDING FLAG;                                      00084300
BOOLEAN PROCEDURE OSZDEP (OCUR);                                        00084400
              VALUE OCUR;  INTEGER OCUR;                                00084500
              BEGIN  INTEGER J,K;                                       00084600
                   JCV (OILNK (OCUR),J,K);                              00084700
                   OSZDEP ~BOOLEAN(INFO[J,K+1].[11:1]);COMMENT 2-26-64; 00084800
              END;                                                      00084900
COMMENT *************************     OAS     ************************; 00084950
COMMENT  GETS ASSIGNMENT FIELDS FROM INFORMATION ARRAY ;                00085000
PROCEDURE OAS (PX,QX,RX,OCUR);                                          00085100
              VALUE OCUR;  INTEGER OCUR,PX,QX,RX;                       00085200
              BEGIN INTEGER J,K;  K ~ OILNK(OCUR);                      00085300
                   J ~ K.[33:6]; K ~ K.[39:9];                          00085320
                   PX ~ INFO [J,K].[1:10];%PRT LOC OF DESCRIPTOR        00085400
                   QX ~ INFO [J,K].[11:10];%WORD INDEX WITHIN PX.       00085500
                   RX ~ INFO [J,K].[21:3];%CHARACTER INDEX WITHIN QX.   00085600
              END;                                                      00085700
COMMENT *************************    OCFLG    ************************; 00085750
 BOOLEAN PROCEDURE OCFLG (OCUR);%GETS OCCUR FLAG FROM DICT ENTRY.       00085800
 VALUE OCUR;               INTEGER OCUR;                                00085900
              BEGIN                                                     00086000
                   OCFLG~BOOLEAN(DICT[OCUR.ZW,                          00086100
                   OCUR.ZY].[7:1]);                                     00086200
              END;                                                      00086300
COMMENT *************************    OCLAS    ************************; 00086350
COMMENT GETS ITEM-CLASS FIELD FROM DICTIONARY     ;                     00086400
INTEGER PROCEDURE OCLAS (OCUR) ;                                        00086500
              VALUE OCUR ;   INTEGER OCUR ;                             00086600
              BEGIN OCLAS~DICT[(OCUR+1).ZW,                             00086700
                   (OCUR+1).ZY].[7:3];                                  00086800
              END;                                                      00086900
COMMENT *************************     OCV1    ************************; 00086950
COMMENT OUTPUT CONVERT FIELDS 0 < VAL < 12 ;                            00087000
PROCEDURE OCV1 (DEST,DCHR,SGN,LGTH,VAL);                                00087100
                   VALUE DCHR,SGN,LGTH,VAL;                             00087200
                   INTEGER DCHR,SGN,LGTH,VAL;                           00087300
                   REAL DEST;                                           00087400
              BEGIN                                                     00087500
                   INTEGER SGNT;                                        00087600
COMMENT *************************    OUTCV    ************************; 00087650
STREAM PROCEDURE OUTCV (DEST,DCHR,SGN,LGTH,VAL);                        00087700
                   VALUE DCHR,SGN,LGTH,VAL;                             00087800
              BEGIN  DI~ DEST; DI~ DI + DCHR; DCHR~ DI;                 00087900
                   SI~ LOC VAL; DS~ LGTH DEC;                           00088000
                             %SETS SOURCE TO OCTAL VALUE IN STACK.      00088001
                   SI~ LOC SGN; SI~ SI + 7; IF SC ! "2" THEN            00088100
                             %IF SIGN IS NOT "J".                       00088101
              BEGIN IF SC ! "0" THEN                                    00088200
                             %IF NOT UNSIGNED,THAT IS, IF "S" SIGN      00088201
              BEGIN DI~ DCHR; SI~ DCHR; SI~ SI + LGTH; SI~ SI-1;        00088300
                   DS~ ZON; DI~ DI+LGTH; DI~ DI - 2; DS~ 2 RESET        00088400
                             %MAKE EVERYTHING "J"SIGN, RESET "S".       00088401
              END                                                       00088500
              END                                                       00088600
              END;                                                      00088700
                   IF LGTH < 9 THEN OUTCV (DEST,DCHR,SGN,LGTH,VAL) ELSE 00088800
                             %IF LESS THAN 9 DIGITS,MAKE 1 CALL         00088801
              BEGIN            %ELSE                                    00088900
                   SGNT~ IF VAL < 0 THEN VAL|(-1) ELSE VAL;             00089000
                             %CALL OUTCV TWO TIMES.                     00089001
                   OUTCV (DEST,DCHR,(IF SGN = 0 THEN 2 ELSE 1),8,       00089100
                   (IF SGN = 0 THEN (SGNT DIV POWR [8]) ELSE            00089200
                   (VAL DIV POWR [8])));                                00089300
                   OUTCV (DEST,DCHR+8,(IF SGN = 0 THEN 0 ELSE 2),       00089400
                   LGTH-8,(IF SGN = 0 THEN (VAL MOD POWR [8]) ELSE      00089500
                   (SGNT MOD POWR [8])));                               00089600
              END                                                       00089700
              END;                                                      00089800
COMMENT *************************     UPIT    ************************; 00089850
PROCEDURE UPIT;                %COUNTS UP PRT COUNTER WHEN WORD IS      00089900
              BEGIN INTEGER EDE;% ADDED TO PRT.                         00090000
              BOOLEAN HOLD;            % HOLD FOR LASTITEM              00090050
                   IF PRTFF THEN                                        00090100
              BEGIN  MSG[107].[1:5]~8;  EDE~PRTCTR;                     00090200
                             %PRINT PRT NUMBER IF REQUESTED .           00090201
                    MSG[108].[1:5]~EDE.[45:3];                          00090210
                    MSG[107].[42:6]~EDE.[42:3];                         00090220
                    MSG[107].[36:6]~EDE.[39:3];                         00090230
                    MSG[107].[30:6]~EDE.[36:3];                         00090240
                    EDE ~ REAL    (DCOM); DCOM ~FALSE;                  00090250
                    HOLD ~ LASTITEM;%INHIBIT PRINTING OF HELD CARD      00090260
                    LASTITEM ~ TRUE ;                                   00090270
                   IF PRINTIT THEN ERP(107,"      ");                   00090300
                    LASTITEM ~ HOLD;                                    00090310
                    DCOM ~ BOOLEAN (EDE);                               00090350
              END;  PRTCTR~PRTCTR+1;%UP PRT COUNTER.                    00090400
                   IF PRTCTR > 1022 THEN                                00090500
              BEGIN EIND~107 & 15[32:40:8] & 8 [24:40:8];               00090600
                             %"PRT SIZE ERROR"                          00090601
                   ERP (EIND,0)      ;  COMPE~TRUE;                     00090700
              END;                                                      00090800
              END;                                                      00090900
COMMENT *************************     OSGN    ************************; 00090950
COMMENT  GETS  SIGN FIELD FROM INFO PART ;                              00091000
INTEGER PROCEDURE OSGN (OCUR);                                          00091100
                   VALUE OCUR; INTEGER OCUR;                            00091200
              BEGIN                                                     00091300
                   OSGN~DICT[OCUR.ZW,OCUR.ZY].[13:3]   COMMENT 2-26-64; 00091400
              END;                                                      00091500
COMMENT *************************    OELEF    ************************; 00091550
 BOOLEAN PROCEDURE OELEF (OCUR);%GETS ELEMENTARY FLAG FROM DICT ENTRY   00091600
              VALUE OCUR;                                               00091700
              INTEGER OCUR;                                             00091800
              BEGIN OELEF~BOOLEAN (DICT[OCUR.[33:6],OCUR.[39:9]].[6:1]);00091900
              END;                                                      00092200
COMMENT *************************    OHLNK    ************************; 00092250
COMMENT     GETS HIERARCHY LINK FROM DICTIONARY   ;                     00092300
INTEGER PROCEDURE OHLNK (OCUR);                                         00092400
                   VALUE OCUR ;  INTEGER OCUR ;                         00092500
              BEGIN  OHLNK~DICT[OCUR.[33:6],OCUR.[39:9]].[33:15];       00092600
              END;                                                      00092800
COMMENT *************************    OLEVL    ************************; 00092850
COMMENT     GETS ITEM LEVEL NUMBER FROM DICTIONARY     ;                00092900
 INTEGER PROCEDURE OLEVL (OCUR);                                        00093000
              VALUE OCUR;                                               00093100
              INTEGER OCUR;                                             00093200
              BEGIN OLEVL~DICT[(OCUR+1).ZW,                             00093300
                   (OCUR+1).ZY].[1:6];                                  00093400
              END;                                                      00093600
COMMENT *************************    OSNAM    ************************; 00093650
COMMENT     GETS SAME-NAME LINK FROM DICTIONARY ENTRY     ;             00093700
 INTEGER PROCEDURE OSNAM (OCUR);                                        00093800
              VALUE OCUR;                                               00093900
              INTEGER OCUR;                                             00094000
              BEGIN OSNAM~DICT[(OCUR+1).ZW,                             00094100
                   (OCUR+1).ZY].[18:15];                                00094200
              END;                                                      00094400
COMMENT *************************    OTYP     ************************; 00094450
COMMENT     GETS TYPE FIELD FROM DICTIONARY   ;                         00094500
INTEGER PROCEDURE OTYP (OCUR);                                          00094600
                   VALUE OCUR; INTEGER OCUR;                            00094700
              BEGIN OTYP~DICT[OCUR.[33:6],OCUR.[39:9]].[1:5];           00094800
              END;                                                      00094900
COMMENT     GETS ITEM USAGE FIELD FROM DICTIONARY ENTRY     ;           00095000
COMMENT *************************    OUSG     ************************; 00095050
 INTEGER PROCEDURE OUSG (OCUR);                                         00095100
              VALUE OCUR;                                               00095200
              INTEGER OCUR;                                             00095300
              BEGIN                                                     00095400
                   OUSG~DICT[OCUR.ZW,OCUR.ZY].[16:2];  COMMENT 2-26-64; 00095500
              END;                                                      00095700
COMMENT *************************    IFOL     ************************; 00095750
COMMENT     PLACES FOLLOWER LINK INTO DICTIONARY ENTRY  ;               00095800
PROCEDURE IFOL (AVAIL,LAST) ;                                           00095900
              VALUE AVAIL, LAST;  INTEGER AVAIL, LAST;                  00096000
              BEGIN IF LAST > 860 THEN                                  00096010
              BEGIN DICT[LAST.[33:6],LAST.[39:9]].[18:15]~AVAIL;        00096100
                             %IF NOT IN RESERVED WORD PART OF DICT      00096101
              END;                                                      00096110
              END;                                                      00096200
COMMENT TESTS ITEM-SIGNED FLAG  ;                                       00096300
COMMENT *************************    OSGND    ************************; 00096350
 BOOLEAN PROCEDURE OSGND (OCUR);                                        00096400
                   VALUE OCUR;   INTEGER OCUR;                          00096500
              BEGIN                                                     00096600
                   OSGND~IF DICT[OCUR.ZW,OCUR.ZY].[13:3]  COMMENT 2-26; 00096700
                   !0 THEN TRUE ELSE FALSE;            COMMENT 2-26-64; 00096800
              END;                                                      00096900
COMMENT *************************    OFSZ     ************************; 00096950
COMMENT     GETS FIELD-SIZE FROM DICTIONARY      ;                      00097000
INTEGER PROCEDURE OFSZ (OCUR);                                          00097100
                   VALUE OCUR;  INTEGER OCUR;                           00097200
              BEGIN OFSZ~INFO[OILNK(OCUR).ZW,                           00097300
                   OILNK(OCUR).ZY].[33:15];                             00097400
              END;                                                      00097500
COMMENT *************************    OSCALE   ************************; 00097550
COMMENT     GETS ITEM SCALE FACTOR FROM DICTIONARY     ;                00097600
 INTEGER PROCEDURE OSCALE (OCUR);                                       00097700
                   VALUE OCUR; INTEGER OCUR;                            00097800
              BEGIN OSCALE~0&DICT[(OCUR+1).ZW,                          00097900
                   (OCUR+1).ZY] [41:11:7] &                             00097910
                   DICT[(OCUR+1).ZW,                                    00098000
                   (OCUR+1).ZY] [1:10:1] ;                              00098100
              END;                                                      00098200
COMMENT *************************  DUMPCONST  ************************; 00098250
COMMENT DUMPS CONSTANT POOL ARRAY AS PROGRAM SEGMENT AND EMITS ARRAY    00098300
     FILL FOR IMITALIZATION  ;                                          00098400
PROCEDURE DUMPCONST (CNP,CNPL,CNQ,CNR);                                 00098500
              INTEGER CNPL,CNQ,CNR;                                     00098700
                   ARRAY CNP [0,0];                                     00098800
              BEGIN INTEGER EDE;  IF CNR ! 0 THEN CNQ~CNQ+1;            00098900
                   CNQ~CNQ+1;                                           00099000
                   T10 ~ CNP[0,0] ;                        COMMENT DF;  00099015
                   MAKELABEL (1,CNPL,0,2) ;COMMENT TYPE 2; COMMENT DF;  00099020
                   PRTB[CNPL.[36:5],CNPL.[41:7]].[1:5]~22; COMMENT DF;  00099025
                   EDE ~ 8|CNQ ; SEGDUMP(CNP,EDE);                      00099200
                             %WRITE CONSTANT POOL ON COMPILER TAPE      00099201
                   ARAYSZ~ARAYSZ+EDE;                    COMMENT 1-65;  00099210
                   FOR X ~ 2 STEP 1 UNTIL CNQ DO  COMMENT 1-27;         00099300
                       CNP[X.[38:3],X.[41:7]]~0;                        00099305
                   IF CNPL ~ PRTCTR > 511 THEN CNPL.[33:1]~1;UPIT;%SI20000100100
                   CNQ ~ 3; CNR ~ 0;   COMMENT 1-27;                    00100900
              END;                                                      00101000
COMMENT ***************************  LCOMP   *************************; 00102550
COMMENT TEST NEXT SYMBOL AGAINST GIVEN KEY ID ;%WILL TEST FOR EQUALITY. 00102600
BOOLEAN PROCEDURE LCOMP (K);                                            00102700
              VALUE K;  INTEGER K;                                      00102800
              BEGIN                                                     00102900
                   INTEGER FWDL,WSL,XL,CLOCL,OCURL,A,B;        %CJC 027 00103000
                   LABEL LFX,LLX,REP;                                   00103100
COMMENT ********************* COMP ********************; COMMENT 11-02; 00103105
BOOLEAN STREAM PROCEDURE COMP(ISYMB,DICT,LGTH);          COMMENT 11-02; 00103110
                   VALUE LGTH;                           COMMENT 11-02; 00103120
              BEGIN SI~ISYMB;DI~DICT;SI~SI+4;DI~DI+4;    COMMENT 11-02; 00103130
                   TALLY~0;IF LGTH SC=DC THEN TALLY~1;   COMMENT 11-02; 00103140
                   COMP ~ TALLY;                         COMMENT 11-02; 00103150
              END;                                       COMMENT 11-02; 00103160
                   IF NCLAS ! 4 THEN GO TO LFX;                         00103200
                   WSL ~ ((NLGTH + 3) DIV 8) + 1;              %CJC 027 00103300
                    XL~0 & (NSYMB[0].[40:8] + NSYMB[0].[24:8] +         00103400
                    NLGTH) [40:40:8];                                   00103500
                    CLOCL~HALE[XL].[9:15];  IF CLOCL = 0 THEN           00103600
              BEGIN                                                     00103700
       LFX:        LCOMP~ FALSE; GO TO LLX                              00103800
              END;                                                      00103900
       REP:        JCV (CLOCL,A,B); IF DICT [A,B].[1:5] = NLGTH THEN    00104000
              BEGIN IF COMP (NSYMB,DICT [A,B],NLGTH) THEN               00104100
              BEGIN OCURL ~ CLOCL + WSL; XL~ OTYP (OCURL);              00104200
                   IF XL = 1 OR XL = 17 THEN                            00104300
              BEGIN IF K ! OHLNK (OCURL) THEN GO TO LFX;                00104400
                   LCOMP~TRUE; GO TO LLX                                00104500
              END ELSE GO TO LFX                                        00104600
              END                                                       00104700
              END;  JCV (CLOCL,A,B); FWDL ~DICT [A,B].[9:15];           00104800
                   IF FWDL = 0 THEN GO TO LFX;                          00104900
                   CLOCL~ FWDL; GO TO REP;                              00105000
       LLX:   END;                                                      00105100
COMMENT ***************************  FCHK    *************************; 00105150
COMMENT  CHECKS FOUND AND PRINTS SYMBOL AND MISSING MESSAGE IF FALSE ;  00105200
BOOLEAN PROCEDURE FCHK;                                                 00105300
              BEGIN  LABEL MXX ;                                        00105400
                   IF NOT FOUND THEN                                    00105500
              BEGIN IF TYPE = 3 THEN%IF A PARAGRAPH LABEL THEN          00105600
              BEGIN ERP (79,0)      ;  GO TO MXX%"MISSING PERIOD".      00105700
              END;                                                      00105800
                   CHRTRAN (ISYMB,4,MSG[124],1,LGTH);                   00105900
                   MSG[124].[1:5]~LGTH;                                 00106000
                   EIND~ 13 & 83 [32:40:8] & 124 [24:40:8];             00106100
                             %"UNIDENTIFIED NAME XXXX".                 00106101
                   ERP(EIND,0); FCHK~FALSE; COMPE~TRUE;                 00106200
              END ELSE  FCHK~TRUE;                                      00106300
       MXX:   END;                                                      00106400
COMMENT ***************************  ISNAM   *************************; 00106450
COMMENT     PLACES SAME-NAME LINK INTO DICTIONARY ENTRY    ;            00106500
 PROCEDURE ISNAM (AVAIL,SCUR);                                          00106600
              VALUE AVAIL, SCUR;                                        00106700
              INTEGER AVAIL,SCUR;                                       00106800
              BEGIN                                                     00106900
                    IF SCUR > 860 AND AVAIL ! SCUR THEN                 00106905
              BEGIN                                                     00106906
                   DICT[(SCUR+1).ZW,                                    00107000
                   (SCUR+1).ZY].[18:15]~AVAIL;                          00107100
              END;                                                      00107105
              END;                                                      00107200
COMMENT ***************************  SCHAD   *************************; 00107250
COMMENT     PROCESSES SYMBOLS AGAINST DICTIONARY AND CHECKS AND OR      00107300
          ADDS SYMBOL TO DICTIONARY BASED ON VALUE OF DIVN ;            00107400
 PROCEDURE SCHAD ;                                                      00107500
              BEGIN  INTEGER FWD,LAST,OCUS,WS,X,FC,                     00107600
              XTEMP,STM,PEC,POW; COMMENT XTEMP ADDED 10-28-64;          00107610
              REAL SNC,SNB,OCCW;                                        00107650
              LABEL  REP,RE2,ADDER,AD1,SN,SN7,SN8,SN1,NDR,              00107700
                    SRP;                                                00107720
COMMENT ********************* COMP ********************; COMMENT 11-02; 00107730
BOOLEAN STREAM PROCEDURE COMP(ISYMB,DICT,LGTH);          COMMENT 11-02; 00107740
                   VALUE LGTH;                           COMMENT 11-02; 00107750
              BEGIN SI~ISYMB;DI~DICT;SI~SI+4;DI~DI+4;    COMMENT 11-02; 00107760
                   TALLY~0;IF LGTH SC=DC THEN TALLY~1;   COMMENT 11-02; 00107764
                   COMP ~ TALLY;                         COMMENT 11-02; 00107766
              END;                                       COMMENT 11-02; 00107768
COMMENT *****************  CTFR ********************* ;  COMMENT 11-02; 00107770
STREAM PROCEDURE CTFR(ISYMB,CLOC,LGTH); VALUE LGTH;      COMMENT 11-02; 00107775
              BEGIN SI ~ CLOC; SI ~ SI+4; DI~ ISYMB;     COMMENT 11-02; 00107780
                   DI ~ DI + 4; DS ~ LGTH CHR;           COMMENT 11-02; 00107785
              END;                                       COMMENT 11-02; 00107790
                   WS ~ ((LGTH+3) DIV 8) +1; TYPE~0; LAST~0; KEY~0;     00107800
                             %COMPUTE WORDS NEEDED                      00107801
                   OCUR~0;  DSYN~FALSE;                                 00107900
                   IF SCLAS = 7 THEN%IF PERIOD, BYPASS SEARCH           00108000
              BEGIN OCUR~864;TYPE~17;FOUND~TRUE;         COMMENT D-31;  00108100
                   KEY~473;   GO TO NDR;                                00108200
              END;                                                      00108300
                   FOUND ~ FALSE; X~0; CAT~0;                           00108400
                   FC ~ ISYMB[0].[24:24];%FIRST CHAR OF SYMBOL          00108405
                    IF SCLAS = 8 THEN X~257 ELSE                        00108408
                    X~0 & (ISYMB[0] + ISYMB[0].[24:8] + LGTH)[40:40:8]; 00108500
                             %SCRAMBLE FUNCTION                         00108501
                   XTEMP~STM~X; COMMENT 10-28-64;                       00108550
                   CLOC~HALE[X].[9:15];  IF CLOC = 0 THEN               00108600
                             %STACK HEAD INTO CURRENT SYMB LOC          00108601
              BEGIN                                                     00108700
                   COMMENT  1/28/64;                                    00108710
                    IF DIVN = 9 THEN GO TO NDR;                         00108750
                    LAST~0;  GO TO ADDER;                               00108800
              END;                                                      00108900
                   POW~CLOC;                                            00108950
           COMMENT JCV(CLOC,J,K) FOLLOWS, 9-4-64;                       00108990
         REP:      J ~ CLOC.[33:6]; K ~ CLOC.[39:9];                    00109000
                   OCCW~DICT[J,K];                                      00109050
                   IF OCCW.[1:5] = LGTH THEN                            00109100
                             %DICT SYMBOL LGTH VS. SEARCH LGTH          00109101
              BEGIN COMMENT NEXT CARD 00109202 CHANGED 9-4-64;          00109200
                IF OCCW.[24:24]=FC OR XTEMP=257 THEN COMMENT 10-28-64;  00109202
              BEGIN                                                     00109204
                   IF COMP (ISYMB,DICT [J,K],LGTH) THEN                 00109300
                             %COMPARE FULL SYMBOL                       00109301
              BEGIN                                                     00109400
                    IF  LAST ! 0 THEN                                   00109410
              BEGIN  PEC~DICT[CLOC.[33:6],CLOC.[39:9]].[9:15];          00109420
                   HALE[STM].[9:15]~CLOC;                               00109430
                   DICT[CLOC.[33:6],CLOC.[39:9]].[9:15]~POW;            00109440
                   DICT[LAST.[33:6],LAST.[39:9]].[9:15]~PEC;            00109460
              END;                                                      00109480
                    IF DIVN = 3 OR DIVN = 31 THEN GO TO SN;             00109500
                             %IF DATA DIVISION GO TO SAME-NAME          00109501
                   OCUR ~ CLOC +WS;                                     00109600
                   FOUND~TRUE;                                          00109700
                   TYPE~DICT[J,K+WS].[1:5];                             00109800
                    IF TYPE = 13 THEN % SPECIAL NAMES                   00109815
                BEGIN     KEY := DICT [OCUR.[33:6],OCUR.[39:9]];        00109825
                          HDWR := KEY.[33:15];                          00109835
                          KEY := 0&KEY [33:18:15];                      00109845
                          IF HDWR=15 THEN                               00109855
                          BEGIN LGTH := 6;                              00109865
                                ISYMB[0] := ISYMB[0]&"REMO"[24:24:24];  00109875
                          END;                                          00109885
                END;                                                    00109895
                   IF TYPE = 1 OR TYPE = 17 OR TYPE = 12 THEN           00109900
                             %RESERVED WD, SPECIAL CHAR OR END-JOB      00109901
              BEGIN                                                     00110000
       RE2:        SNC~DICT[OCUR.[33:6],OCUR.[39:9]];                   00110010
                   KEY~SNC.[33:15];  CAT~SNC.[18:15];                   00110020
              END;                                                      00110100
                   IF TYPE = 4 THEN%IF SYNONYM ENTRY                    00110200
              BEGIN SYNF~TRUE; %                                    7-6700110210
                    DSYN~TRUE;                                          00110215
                   OCUR~DICT[OCUR.[33:6],OCUR.[39:9]].[33:15];          00110220
              END;                                                      00110240
                   TYPE~DICT[OCUR.[33:6],OCUR.[39:9]].[1:5];            00110300
                   GO TO NDR                                            00110400
              END;                                                      00110500
              END;                                                      00110505
              END;                                                      00110600
                   FWD~OCCW.[9:15];%PICK UP FORWARD LINK TO CONTINUE    00110800
                   LAST ~ CLOC;                  COMMENT 1/30/64;       00110850
                   IF FWD ! 0 THEN               COMMENT 1/30/64;       00110900
                             %IF NOT LAST IN CHAIN                      00110901
             BEGIN CLOC ~ FWD;                   COMMENT 1/30/64;       00111000
                   GO TO REP;                    COMMENT 1/30/64;       00111100
              END;                                                      00111200
       ADDER:      IF DIVN = 9 THEN GO TO NDR;                          00111600
                   IF SCLAS =8 THEN%PICTURE CLASS.                      00111620
              BEGIN IF AVAIL.[39:9] >485 THEN             COMMENT 5-15; 00111630
              BEGIN AVAIL~AVAIL + 500;                    COMMENT 5-15; 00111640
                   AVAIL.[39:9] ~0;                       COMMENT 5-15; 00111650
             END;                                         COMMENT 5-15; 00111660
             END;                                         COMMENT 5-15; 00111670
                   IF DIVN = 4 THEN%IF PROCEDURE DIVISION               00111700
             BEGIN IF SCLAS = 3 THEN TYPE ~ 3;                          00111800
                   FOUND ~ FALSE; OCUR ~ 0; GO TO NDR                   00111900
              END;                                                      00112000
                   IF LAST ! 0 THEN                                     00112100
              BEGIN            %FIX FORWARD LINK IN DICT                00112200
                   DICT[LAST.[33:6],LAST.[39:9]].[9:15]~AVAIL;          00112300
              END ELSE                                                  00112400
                    HALE [STM].[9:15] ~ AVAIL;                          00112450
                   JCV (AVAIL,J,K);                                     00112500
                    CLOC ~ AVAIL;%SAVE SYMBOL LOAATION                  00112600
                   DICT[J,K] ~ 0 & LGTH [1:43:5];%CREATE SYMBOL ENTRY   00112700
                   CTFR (DICT [J,K],ISYMB,LGTH);                        00112800
                   AVAIL ~ AVAIL + WS;                                  00112900
       AD1:         OCUR~AVAIL;     JCV(OCUR,J,K);                      00113000
                   AVAIL ~ AVAIL + 2 ;                                  00113100
                   IF DIVN = 8 THEN AVAIL~AVAIL+1;                      00113200
                             %IF ENVIRONMENT DIVISION                   00113201
                   IF K > 500 THEN%ADJUST OVER ROWS OF DICT             00113300
              BEGIN AVAIL~AVAIL+511; AVAIL.[39:9]~0;                    00113400
              END;                                                      00113500
                   GO TO NDR;                                           00113600
       SN:         OCUR~CLOC+WS;                                        00113700
                    ODER~TRUE;                                          00113750
                   TYPE ~ OTYP(OCUR);                                   00113800
                    IF TYPE = 4 THEN%IF A SYNONYM THEN                  00113810
              BEGIN  FOUND~TRUE;   GO TO SN1;                           00113820
              END;                                                      00113830
                   IF TYPE = 1 OR TYPE = 17 OR TYPE = 18 THEN           00113900
                    GO TO RE2;                                          00114000
                   IF DIVN = 9 THEN GO TO NDR;                          00114100
       SN8:        OCUS~OCUR;                                           00114200
       SN7:        T1~OTYP (OCUS);  IF T1 = 18 THEN                     00114300
                             %IF SPECIAL CHARACTER                      00114301
       SN1:   BEGIN  TYPE~T1;  OCUR~OCUS;  GO TO NDR                    00114400
              END;                                                      00114500
                   IF T1 = 15 OR T1 = 16 THEN                           00114600
                             %IF FORWARD DATA-NAME REFERENCE            00114601
              BEGIN  IF OHLNK(OCUS) = CFDE THEN GO TO SN1;              00114700
                   IF CDIVN =31 AND (OHLNK(OCUS) = RECOC OR             00114702
                   OHLNK (OCUS)= 0) THEN GO TO SN1;                     00114704
                   SNB~OCUS;                                            00114710
       SRP:                                                             00114715
                    IF OHLNK(OCUS) = CFDE THEN GO TO SN1;               00114717
                   WHILE (SNC~OHLNK(SNB)) ! 0 DO                        00114720
                             %CHECK IF CURRENT FILE IS ON               00114721
              BEGIN  IF SNC = CFDE THEN GO TO SN1;                      00114730
                             %  THIS HIERARCHY CHAIN                    00114731
                   SNB ~ SNC;                                           00114750
              END;                                                      00114770
                    IF (SNB~OSNAM(OCUS)) ! 0 THEN                       00114772
              BEGIN  OCUS~SNB;  GO TO SRP;                              00114774
              END;                                                      00114776
              END;                                                      00114800
                   OCUR~OSNAM (OCUS);  IF OCUR ! 0 THEN GO TO SN8;      00114900
                   X~OCUS+1;   %SET SAME-NAME LINK                      00115000
                   DICT[X.[33:6],X.[39:9]].[18:15]~AVAIL;               00115010
                     GO TO AD1;                                         00115020
       NDR:   END;                                                      00115200
COMMENT ***************************  READACARD  *********;COMMENT 12-1; 00115250
PROCEDURE READACARD; COMMENT READS THE NEXT LOGICAL RECORD FROM THE     00115300
                   CARD READER,SYMBOLIC TAPE OR LIBRARY TAPE. COLLATES  00115350
                   PATCHES FROM THE CARD READER WITH THE TAPE RECORDS   00115400
                   AND REPLACES WHEN THE SEQUENCE NUMBERS ARE EQUAL;    00115450
              BEGIN                                                     00115500
% ***************************TFRW ********************************      00115550
STREAM PROCEDURE TFRW (SO,DM,W1,W1R,COL73,RCR);                         00115600
VALUE     W1,W1R,RCR;                                                   00115650
              BEGIN  LOCAL ST;                                          00115700
                   DI ~ DM;                                             00115750
                   SI ~ COL73;                                          00115800
                   IF SC= "1" THEN DS~5LIT"[]   "ELSE DS~5LIT"     ";   00115850
                   SI ~ SO;                                             00115900
                   DS ~ 6 CHR; DS~2LIT "  " ;    % MOVE SEQ TO LINE     00115950
                   DS ~ CHR  ; DS~ LIT " ";      % MOVE COL 7 TO LINE   00116000
                   DS ~ CHR  ; DS~8 WDS   ;      % MOVE 8-73 TO  LINE   00116050
                   DS ~ 2LIT" ";SI~SI+1;ST~SI;                          00116100
                   SI ~ COL73;SI~SI+1;DS~CHR ;   % MOVE COL73 TO LINE   00116150
                   SI ~ ST   ;DS~ 7 CHR;         % MOVE COL74-80 TO LIN 00116200
                   DS ~2LIT"  "; SI~COL73;       % MOVE " ",R,OR T TO   00116250
                   SI ~SI+2;DS ~CHR;                                    00116300
                   9(DS ~3LIT"   ");DI~DI-24;    % CLEAR LINE REMAINING 00116350
                   SI~ LOC W1; DS ~ 4DEC;        % PRINT SEGMENT AND    00116400
                   DS ~ LIT":";SI ~ LOC W1R;     % RELATIVE ADDRESS     00116450
                   DS~ 4DEC;                                            00116500
                   SI ~ RCR;                     % SET UP               00116510
                   DI ~SO;                       %   AND MOVE NEW       00116520
                   DS ~10 WDS ;                  %        CARD TO AREA  00116530
              END TFRW;                                                 00116550
COMMENT ************************ DATE TO DATE CARD ***************      00116600
                   MOVE THE DATE + TIME TO DATE-COMPILED CARD;          00116650
BOOLEAN STREAM PROCEDURE DTC (SORC,MO,DA,YR,HR,MIN,PM);                 00116700
              VALUE MO,DA,YR,HR,MIN,PM,SORC;                            00116750
              BEGIN                                                     00116800
              LOCAL T1,T2;                                              00116850
              LABEL        ARROUND,TOP;                                 00116900
              DI ~ LOC T2 ;                                             00116950
              DS ~ 13 LIT "DATE-COMPILED";                              00117000
              DI ~ SORC   ; DI ~ DI + 7  ;                              00117050
              SI ~ LOC T2 ;                                             00117100
              IF 13 SC = DC THEN BEGIN          % IF DATE-COMPILED CARD 00117150
              TALLY ~1    ; DTC ~ TALLY ;       % SET DTC TO TRUE       00117200
              DI ~ DI + 1 ;                                             00117250
              DS ~ 2 LIT" ";                                            00117300
                   GO TO ARROUND;                                       00117350
TOP:               DS~ 2 DEC; DI ~ DI - 2; DS ~  FILL;                  00117400
                   IF TOGGLE THEN DI ~DI+1 ELSE DI~ DI+2;               00117450
                   CI ~ SORC;                                           00117500
ARROUND:           SI ~ LOC MO; SORC ~ CI; GO TO TOP ; DS ~ LIT "-";    00117550
                   SI ~ LOC DA; SORC ~ CI; GO TO TOP ; DS ~ LIT "-";    00117600
              SI ~ LOC YR ; DS ~ 2 DEC  ; DS ~2LIT", ";                 00117650
                   SI ~ LOC HR; SORC ~ CI; GO TO TOP ; DS ~ LIT ":";    00117700
              SI ~ LOC MIN; DS ~ 2 DEC  ;                               00117750
              SI ~ LOC PM ; SI ~ SI +7  ;                               00117800
              IF SC="0" THEN DS ~ 4 LIT " AM." ELSE DS~ 4 LIT " PM.";   00117850
              14 ( DS ~ 2 LIT "  " ) ;           % BLANK CARD           00117900
              DS ~ LIT " " ;                                            00117920
         END; END DTC;                                                  00117950
COMMENT ***************************  MAKABS  ************;COMMENT 12-1; 00118000
REAL STREAM PROCEDURE MAKABS(FCR,DOLLAR);COMMENT CONVERTS A DESCRIPTOR  00118050
                   TO AN ABSOLUTE ADDRESS.IF COL 7 CONTAINS A "$" THEN  00118100
                   DOLLAR=TRUE;                                         00118150
              BEGIN  LABEL S ;                                          00118200
                   SI ~ FCR;                                            00118250
                   MAKABS ~ SI ;                                        00118300
                   DI ~ DOLLAR; DI ~ DI + 2 ;                           00118350
                   IF SC = "$" THEN              % CHECK FOR $ IN COL 1 00118400
                        DS ~ LIT "1"             %YES-SET TORR          00118450
                        ELSE BEGIN               % ELSE                 00118500
                        DS ~ LIT "0";            %NO -SET TORR FALSE    00118550
                        SI ~ SI + 6;             %    GO TO COL 7       00118600
                        END;                                            00118650
                   DI ~ DI + 4 ;                                        00118700
                   IF SC = "$" THEN                                     00118750
                           BEGIN                                        00118800
                           SI ~ SI + 1 ;                                00118850
                           IF SC = "$" THEN      %  CHECK FOR $$        00118900
                                BEGIN                                   00118950
                                SI ~ SI + 1 ;                           00119000
                                DS ~ LIT "3";    %  $$ ~ TRUE           00119050
                                END ELSE                                00119100
                                DS ~ LIT "1";    %  $ ONLY              00119150
                           DI ~ FCR;             % SET TO CARD          00119200
                           DI~DI+40;  DI~DI+33;%TO COL 73      %CJC 041 00119250
                           DS ~ LIT "%";         % THIS STOPS $ SCAN    00119300
                           END ELSE              % ABOVE STOP DOLLAR    00119350
                   IF SC="*"THEN DS ~ LIT"4"ELSE%FOR CODYSYL     TR-125700119360
                   IF SC="/"THEN DS ~ LIT"6"ELSE%FOR SKIP        TR-125700119370
                           DS ~ LIT "0";         % INVESTIGATION        00119400
         END MAKABS;                                                    00119402
COMMENT ********************** DATA COMM REFORMAT ******************** ;00119405
REAL PROCEDURE  REFORMAT;                                               00119406
         BEGIN                                                          00119407
COMMENT ******************** CARD REFORMING ***************************;00119408
REAL STREAM PROCEDURE REFORM (DZ,CARD,QUOT,OFLWD,OFLO,SEQNO);           00119409
              BEGIN                                                     00119412
                   SI ~ DZ ;                      % POINT TO DC CARD    00119414
                   DI ~ CARD;  DI~ DI + 6;        % POINT TO COBOL CARD 00119416
                   IF SC! "$" THEN                %                     00119418
                        IF SC ! "-" THEN DS~LIT" "%  SET COL 7 = " "    00119420
                        ELSE  DS ~CHR ELSE DS~CHR;%    OR "$" OR "-"    00119422
                   5(13(IF SC= """ THEN TALLY~TALLY+1; DS~CHR ));       00119424
                   IF SC= """ THEN                                      00119426
              BEGIN     TALLY ~ TALLY+1;                                00119428
                        SI ~ SI+1;                                      00119430
              END; REFORM:= TALLY; TALLY := 0; DS:= 8 LIT " ";DZ:=SI;   00119432
                   DI:=QUOT;SI:=LOC REFORM;DS:=WDS;SI:=DZ;DI :=OFLWD;   00119433
                   DS:= LIT"6";6(IF SC = " " THEN ELSE TALLY:=1;        00119434
                   DS:=CHR);                                            00119435
                   REFORM:= TALLY;DI:=OFLO;SI:=LOC REFORM;DS:=WDS;      00119436
                   SI ~ SEQNO;                                          00119438
                   DI ~ LOC REFORM;                                     00119440
                   DS ~ WDS;                                            00119442
              END  REFORM;                                              00119444
BOOLEAN  OFLOW,QUOTEX;                                                  00119446
REAL     SEQNO,OFLWD;                                                   00119448
                   SEQNO ~ REFORM(DATA(0),REFORMCARD[0],QUOTEX,OFLWD,   00119450
                                  OFLOW,DATA(9));                       00119452
                   REFORMCARD[0]~REFORMCARD[0] & SEQNO [1:13:35];       00119454
                   FROMREFORM~TRUE;                                     00119456
                   IF SEQNO.[1:11]! 0  THEN  %SEQ NO TRUNCATION "XX"    00119458
              BEGIN     MSG[124]~ "NUMBER0" & 6[1:43:5] ;               00119460
                        MSG[125]:="-00-000"&SEQNO[13:1:11]&4[1:43:5];   00119462
% DONT LOOK UNDER HERE                                                  00119464
                        ERP (65&124 [32:40:8]& 81 [24:40:8]             00119466
                               &125 [16:40:8],0) ;                      00119468
              END; IF QUOTEX THEN  % RIGHT QUOTE MISSING                00119470
              BEGIN     MSG[124] ~ "QUOTE00"& 5 [1:43:5];               00119472
                        ERP (6&124[32:40:8] &9[24:40:8],0)  ;           00119474
              END; IF OFLOW THEN  % CARD TRUNCATION "XXXXX"             00119476
              BEGIN     MSG[124] ~ "CARD000"& 4 [1:43:5] ;              00119478
                        MSG[125]~OFLWD;                                 00119480
                        ERP(124& 81 [32:40:8]& 125[24:40:8],0);         00119484
              END; FROMREFORM ~ FALSE;                                  00119486
                   REFORMAT~ MAKABS (REFORMCARD,DOLLAR);                00119488
         END REFORMAT ;                                                 00119490
COMMENT ***************************  COMPARE  ***********;COMMENT 12-1; 00119500
INTEGER STREAM PROCEDURE COMPARE(CFCR,TFCR);COMMENT COMPARES SEQUENCE   00119550
                   NUMBERS                                       TR-964 00119600
                        RESULT = 0     FOR CARD > TAPE           TR-964 00119650
                        RESULT = 1     FOR CARD < TAPE           TR-964 00119700
                        RESULT = 2     FOR CARD = TAPE;         %TR-964 00119740
VALUE CFCR,TFCR;                                                        00119750
              BEGIN     LABEL  EGRESS;                                  00119800
                   SI ~TFCR;   DI ~CFCR;                                00119810
                    IF 6 SC } DC THEN            % IF TAPE } CARD THEN  00119850
              BEGIN SI~SI-6; DI~DI-6; TALLY~1;                          00119900
                    IF 6 SC = DC THEN            % IF TAPE = CARD THEN  00119910
              BEGIN     SI ~ SI + 1 ;            % CHECK FOR EOJ CARD   00119920
                        DI ~ LOC TFCR;           % FROM TAPE            00119930
                        TALLY ~ 2 ;              % SET EQUAL FLAG       00119940
                   IF SC !"E" THEN GO TO EGRESS;                        00119943
                        DS ~10 LIT "END-OF-JOB"; %                      00119950
                        DI ~ LOC TFCR;           % RESET TO TFCR        00119955
                        IF 10 SC = DC THEN                              00119960
                             IF SC = "." THEN TALLY ~3 ELSE             00119970
                             IF SC = " " THEN TALLY ~3 ;                00119980
EGRESS:       END;                                                      00119990
                   COMPARE ~ TALLY;                                     00120000
              END;                                                      00120050
              END;                                                      00120100
COMMENT ***************************  HEADING  ***********   10-13-67;   00120150
STREAM PROCEDURE  HEADING (LB);                  % WRITE LIST HEADING   00120200
              BEGIN                                                     00120250
                   DI ~ LB;                                             00120300
                   DS ~16LIT " ";                                       00120350
                   DS~26 LIT"B - 5 7 0 0   C O B O L   ";      %CJC 094 00120400
                   DS ~ 30 LIT "D I S K   C O M P I L E R     ";        00120450
                    DS ~ 28 LIT    % DATE AND HEADING INFO TO FOLLOW    00120500
                        "     XIII.0         07/15/71";                 00120550
                    DS ~ 20 LIT " ";                                    00120600
              END;                                                      00120650
COMMENT ***************************  SEQCHK  ************;COMMENT 12-1; 00120700
BOOLEAN STREAM PROCEDURE SEQCHK (LSEQ,LIBCOPY,COL73,LCV,QUOTF,INCR,     00120750
                   LABLF,NCV,NCR,PRT27);                       %CJC 026 00120800
COMMENT            PERFORMS A SEQUENCE CHECK ON                %CJC 026 00120850
                   THE CARD IMMAGES,CHECK FOR CONTINUATION IN COL.7,    00120900
                   POSITIONS TO NEXT CHARACTER TO BE SCANNED;           00120950
VALUE         LIBCOPY,LCV,NCV;                                          00121000
              BEGIN                                                     00121050
LABEL    CONTINUED,SEQ,CONTINUECHK,FIN;                                 00121100
                   SI~LCV;COMMENT SAVE THE CONTENTS OF COL.73;          00121150
                   DI~COL73; DI~DI+1;                                   00121200
                   DS~CHR;                                              00121250
                   DI~LCV; COMMENT SET UP END-OF-CARD SENTINAL;         00121300
                   DS~LIT"~";                                           00121350
                   CI~CI+LIBCOPY;                                       00121400
                   GO TO SEQ;                                           00121450
                   SI~LSEQ;COMMENT PLACE LSEQ IN THE LIBR RECORD;       00121500
                   SI~SI+1;                                             00121550
                   DI ~ NCV;                                            00121600
                   DS~6 CHR;                                            00121650
                   DI ~ DI - 6;                                         00121700
                   SI ~ INCR;                                           00121750
                   DS ~ 6 ADD;                                          00121800
SEQ:               SI~NCV;                                              00121850
                   DI ~ PRT27;  DS ~ 6 OCT;  SI ~ NCV;         %CJC 026 00121870
                   DI~LSEQ;                                             00121900
                   DI~DI+1;                                             00121950
                   IF 6 SC<DC THEN COMMENT SEQUENCE ERROR;              00122000
              BEGIN TALLY~1;                                            00122050
                   SEQCHK~TALLY;                                        00122100
              END; SI~SI-6;COMMENT SAVE THE NEW SEQUENCE NUMBER;        00122150
                   DI~DI-6;                                             00122200
                   DS~6 CHR;                                            00122250
CONTINUECHK:       IF SC ! " " THEN              % CONTINUATION CARD    00122300
              BEGIN DI ~ QUOTF ;                 % SET TO SCAN AGAIN    00122350
                    DS ~8 LIT "00000001";        % AND RUN TOGETHER     00122400
                    GO TO CONTINUED ;            % WITH PREVIOUS        00122450
              END;                                                      00122500
                   SI ~ SI + 1;                 % GO TO COL 8.          00122550
                   IF SC!" " THEN COMMENT POTENTIAL EXPLICIT LABEL;     00122600
                        IF SC = """ THEN GO TO FIN ELSE                 00122650
              BEGIN DI~LABLF;                                           00122700
                   DS~8 LIT "00000001";                                 00122750
                   GO TO FIN ;                                          00122800
                   END;                                                 00122850
CONTINUED:         SI ~ SI + 1 ;                 %SKIP OVER A COL       00122900
                   IF SC = " " THEN GO TO CONTINUED;                    00122950
FIN:               NCV ~ SI;                     % STORE NCR            00123000
                   IF SC = """ THEN              % CHECK FOR "          00123050
                    SI ~ SI + 1;                 % BUMP TO NEXT FOR~ CHK00123200
                   IF SC = "~" THEN SI ~ LOC LCV ELSE %IF ~ SET LCR=NCR 00123300
                   SI~LOC NCV;                                          00123350
                   DI~NCR;                                              00123400
                   DS~WDS;                                              00123450
              END;                                                      00123500
% **************************** WORDTRANS *****************************  00123550
%   DOES THE SAME AS WORDTRANS BUT SOURCE ADDRESS IS A VALUE            00123600
STREAM PROCEDURE WORDTRANS (SO,DST,LGTH);                               00123650
         VALUE     SO,LGTH;                                             00123700
              BEGIN SI ~ SO;      DI ~ DST;                             00123750
                    DS ~ LGTH WDS;                                      00123800
              END WORDTRANS;                                            00123801
COMMENT*******************REMAKE************************;               00123806
STREAM PROCEDURE REMAKE(START,FINISH);                                  00123811
     VALUE START;                                                       00123816
BEGIN                                                                   00123821
          DI := FINISH;                                                 00123826
          SI := START; SI := SI + 6;                                    00123831
          IF SC = " " THEN SI := SI + 1 ELSE DS := CHR;                 00123836
          DS := 33 CHR;                                                 00123841
          DS := 32 CHR;                                                 00123846
          DS := 9 LIT " ";                                              00123850
          DI := FINISH;                                                 00123856
          DI := DI + 36;                                                00123861
          DI := DI + 36;                                                00123866
          DS := 2 LIT "00";                                             00123871
          SI := START;                                                  00123876
          DS := 6 NUM;                                                  00123881
END REMAKE;                                                             00123886
%************BEGIN READ-A-CARD******************************            00123891
LABEL FEEDACARD,READAGAIN,READLIB,CARDONLY,FIRSTIME,CARDLAST,           00123900
      TAPELAST,COLLATE,TAPELOW,CARDLOW,CARDEQUAL,CARDNEXT,              00123950
      CHECKNEW,FIN,TOP,EGRESS;                                          00124000
INTEGER  HOLDHAVE,T8;                                                   00124050
LABEL         LIBMGR,LIBPATCH;                                          00124100
BOOLEAN LSEQF , PR ;                                  %LAST CARD SEQ ER 00124150
TOP:                                                                    00124200
                   PR~PROK AND MOVCRDIN ! 1;                            00124240
                   IF LASTUSED = 5 THEN GO TO EGRESS;                   00124250
                   IF TMPCRDIN THEN ELSE              %BYPASS LIB COPY  00124300
                   BEGIN                                                00124310
                   IF LIBCOPY~LIBCOPY AND STRTPOS!STOPOS THEN           00124350
                   GO TO LIBMGR;                                        00124400
                   IF RESETFCR THEN BEGIN TFCR ~ TEMPTFCR;              00124405
                                          RESETFCR ~ FALSE;             00124410
                   END;             END;                                00124420
FEEDACARD:         IF LASTUSED = 1 THEN GO TO CARDONLY ELSE             00124450
                        IF LASTUSED = 3 THEN GO TO TAPELAST ELSE        00124500
                             IF LASTUSED = 2 THEN GO TO CARDLAST ELSE   00124550
                                  GO TO FIRSTIME;                       00124600
READAGAIN:                                       % DOLLAR CARD PROCESS  00124650
                   IF LASTUSED }2 THEN RCR ~ CFCR ;                     00124700
                   PARM;              %CALL ON DOLLAR CARD              00124750
                   IF VOID AND HOLDHAVE =2 THEN HOLDHAVE ~5             00124770
                        ELSE HOLDHAVE ~ 0 ;                             00124780
                   GO TO FEEDACARD;                                     00124800
READLIB:      READ (LIBRAR);                                            00124850
                   LIBRX~1;                                             00124900
LIBMGR:            IF LIBRX =56 THEN GO TO READLIB;                     00124950
                   IF TMPCRDIN THEN ELSE                                00124953
                   IF NOT RESETFCR  THEN BEGIN TEMPTFCR ~ TFCR ;        00124955
                                               RESETFCR ~ TRUE;         00124960
                                   END;                                 00124970
                   TFCR ~ MAKABS (LIBRAR(LIBRX),PROK);                  00125000
                   LIBRX ~ LIBRX + 11;                                  00125050
                   IF NOT TMPCRDIN THEN STRTPOS ~ STRTPOS + 1           00125100
              ELSE                                                      00125150
                   IF HOLDHAVE = 2 THEN GO TO LIBPATCH                  00125200
              ELSE                                                      00125250
                   GO TO COLLATE ;                                      00125300
                    RCR~TFCR; LIBCNT~LIBCNT+1;                          00125350
                   TORR ~BOOLEAN ( "L" );                               00125400
                   GO TO FIN;                                           00125450
CARDONLY:             READ(DATA);                                       00125500
FIRSTIME:          RCR~ IF FREE THEN REFORMAT                           00125550
                           ELSE  MAKABS (DATA(0),DOLLAR);               00125560
                   IF DOLLAR THEN COMMENT CONTROL CARD;                 00125600
                    GO TO READAGAIN; CARDCNT~CARDCNT+1;                 00125650
                   TORR ~ BOOLEAN ( IF CARDIN   THEN " " ELSE "R" );    00125700
                   LASTUSED~1;GO TO CHECKNEW;                           00125750
CARDLAST:             READ(DATA);                                       00125800
                   CFCR~IF FREE THEN REFORMAT                           00125850
                           ELSE MAKABS (DATA(0), DOLLAR);               00125860
                   IF TORR THEN GO TO READAGAIN ELSE                    00125900
                   GO TO COLLATE;                                       00125950
TAPELAST:          IF TMPCRDIN THEN GO TO LIBMGR ELSE                   00126000
                   READ (TAPE);                                         00126050
                   TFCR~MAKABS(TAPE (0),PROK);                          00126100
COLLATE:           HOLDHAVE ~ COMPARE(CFCR,TFCR);                       00126150
                   IF HOLDHAVE = 0 THEN GO TO TAPELOW ELSE              00126200
                      LASTUSED ~ 2 ;                                    00126250
                        IF HOLDHAVE = 1 THEN GO TO CARDLOW ELSE         00126300
                             IF HOLDHAVE = 2 THEN GO TO CARDEQUAL ELSE  00126330
                                  GO TO FIRSTIME;                       00126350
       TAPELOW: RCR~TFCR; TAPECNT~TAPECNT+1;                            00126400
                   LASTUSED~3;                                          00126450
                   TORR ~ BOOLEAN ( "T" );                              00126500
                   GO TO CHECKNEW;                                      00126550
CARDLOW:           IF DOLLAR THEN COMMENT CONTROL CARD;                 00126600
                   GO TO READAGAIN;                                     00126650
                   TORR ~ BOOLEAN("R");     %FROM READER                00126670
                   GO TO CARDNEXT;                                      00126700
CARDEQUAL:         IF DOLLAR THEN COMMENT CONTROL CARD;                 00126750
                   GO TO READAGAIN;                                     00126800
                   COMMENT THE CARD REPLACES THE TAPE RECORD;           00126850
                   IF TMPCRDIN THEN GO TO LIBMGR ELSE                   00126900
                   READ ( TAPE);                                        00126950
                   TFCR~MAKABS(TAPE (0),PROK);                          00127000
LIBPATCH:          TORR ~ BOOLEAN ("P");    % PATCHED                   00127040
       CARDNEXT:    RCR~CFCR; CARDCNT~CARDCNT+1;                        00127050
CHECKNEW:          IF VOID THEN                                         00127150
              BEGIN HOLDHAVE ~ COMPARE(RCR,MAKABS(VOIDREC,LSEQF));      00127200
                    IF HOLDHAVE ! 0 THEN GO TO FEEDACARD;               00127250
                    VOID ~ FALSE;                                       00127300
                    VOIDREC ~ 0;                                        00127350
              END;                                                      00127400
FIN:               NCR~RCR;                                             00127450
                   LCR~RCR+9;                                           00127500
                   IF NEWT OR PCHFF THEN WORDTRANS(LCR,LBUF[9],1);      00127550
                   IF DCOMM THEN                                        00127554
              BEGIN     IF SEG[0,0].[37:11] > 8 THEN                    00127555
              BEGIN     IF LINESEG[SEGIN].[RLX]!(HOLDHAVE~CREG DIV 8)   00127560
                             THEN SEGX ~ SEGX + 1;                      00127565
                        LINESEG[SEGIN] ~HOLDHAVE &% PACK REL ADDR&SEQ # 00127570
                                        (ICV1(LSEQ,1,0,6))[10:20:28];   00127580
              END; END; %                                               00127590
                   LSEQF ~ LSEQFF;                                      00127600
               PR.[46:1] ~ SEQCHK (LSEQ,IF(NOT TMPCRDIN AND LIBCOPY) OR 00127640
                             SEQFF THEN 1 ELSE 0, COL73,LCR,QUOTF,INCR, 00127650
                             CLABLF,NCR,NCR,PRT27);            %CJC 026 00127700
                   LSEQFF ~ PR.[46:1];                                  00127730
                   IF LIBCOPY AND NOT COPYIT THEN ELSE         %CJC 007 00127750
                   IF PCHFF OR NEWT THEN                                00127800
              BEGIN     WORDTRANS(RCR,LBUF[0],9);                       00127850
                        IF PCHFF THEN WRITE(PUNCH,10,LBUF[*]);          00127900
                        IF NEWT THEN                                    00127950
              BEGIN          SOLTCNT ~ SOLTCNT + 1 ;                    00127960
                             IF TSSEDT THEN REMAKE(RCR,LBUF[0]);        00127965
                             WRITE (NEWTAPE,10,LBUF[*]);                00127970
              END;                                                      00127980
              END;                                                      00128050
                   IF NOT DATCRD THEN                                   00128150
                   BEGIN                                                00128200
                   DATCRD ~ DTC(RCR,T7,DSPRTCTR,T9,IF TIM<2808000 THEN  00128250
                                        TIM DIV 216000 ELSE(TIM DIV     00128300
                                        216000)-12,T6 ~ (TIM DIV 3600)  00128350
                                        MOD 60, TIM DIV 2592000) ;      00128400
                                        % 216000 = HRS, 2592000=NOON    00128450
                   IF DATCRD THEN NCR ~ LCR ;                           00128500
                   END;                                                 00128550
                    IF LSEQF THEN                                       00128600
              BEGIN SQER~SQER+1; IF NOT ZOBOL THEN                      00128610
              BEGIN                                                     00128620
                        PROK := PR;                                     00128630
                        ERP (65&8[32:40:8],0); % SEQUENCE ERROR MSG     00128650
                        PR := PROK ;                                    00128654
              END;                                                      00128655
              END;                                                      00128660
                   PROK := TRUE; % NEXT OK TO PRINT.                    00128690
EGRESS:            T8~ SEG[0,0].[37:11];% RETRIEVE SEG NO               00128700
                   IF NOT HEADFF AND (LSEQF~PRINTIT) THEN               00128800
              BEGIN                                            %CJC 008 00128830
         INTEGER   LINEDEVICE;                                 %CJC 008 00128840
                   IF LINEDEVICE ~ LINE.TYPE = 10 OR           %CJC 008 00128850
                      LINEDEVICE = 12 OR LINEDEVICE = 13 THEN  %CJC 008 00128860
              BEGIN LINE.TYPE ~ 12;                            %CJC 008 00128870
                   WRITELINE;                                  %CJC 008 00128880
                   LOCK(LINE);                                 %CJC 008 00128890
                   LINE.AREAS ~ 0;                             %CJC 008 00128900
                   LINE.AREASIZE ~ 0;                          %CJC 008 00128910
              END; HEADING(LBUF);                              %CJC 008 00128920
                   WRITELINE;                                  %CJC 008 00128930
                          HEADFF ~ TRUE ;                               00128950
              END;                                              %TR-263 00129000
                   TFRW(ALTCRD,LBUF,T8,CREG DIV 8,ETC,RCR);             00129050
                   WORDTRAN (COL73,ETC,1);                              00129100
                   LASTITEM ~ (LASTUSED!5);                             00129150
                   MOVCRDIN ~ 0 ;                                       00129170
                   IF PR AND LSEQF THEN WRITELINE ;                     00129200
              IF LASTUSED ! 5 THEN     % THIS HANDLES BLANK,* AND / CARD00129210
                   IF REAL(DOLLAR).[42:6] } 4 OR NCR = LCR THEN  % "*"  00129215
              BEGIN     IF DOLLAR.[46:1] THEN WRITE(LINE[PAGE]); % "/"  00129220
                        QUOTF ~ FALSE;      % RESET BECOUSE IT WAS COL 700129230
                        GO TO TOP;          % TR - 1257                 00129240
              END;                                                      00129250
              END READACARD;                                            00129300
COMMENT ************************ SCANNER **************************     00129350
              THIS CALLS ON SCAN TO GET THE NEXT LOGICAL CONSTRUCT      00129400
              IF END OF CARD IS ENCOUNTERED IT CALLS ON READ-A-CARD     00129450
              WHICH FLAGS CONTINUATION CARDS (- IN COL.7);              00129500
PROCEDURE SCANNER;      BEGIN                                           00129550
COMMENT ***************************  SCAN  **************;COMMENT 12-1; 00129600
STREAM PROCEDURE SCAN (RETURN,OUTCHR,NSYMB,NLGTH,NLGTHV,                00129650
                      RESULT,RESULTV,NCR,NCV);                          00129700
VALUE         NLGTHV,RESULTV,NCV,RETURN;                                00129750
              BEGIN                                                     00129800
% THIS SCAN ASSUMES THAT NCV IS NOT POINTING AT A BLANK                 00129850
LABEL         BOFLD,IDENTIFIER,EOFLD,RETURNQUOTE,HYPHEN,ID    ,         00129900
              PCC  ,NUMBER    ,DOT  ,QUOTE,FIN  ,IDENT,DEBLK;           00129950
                   DI ~ NSYMB; DI ~ DI + 4;           % POINT TO OUT    00130000
                   DI ~ DI + NLGTHV;                  %MOVE OVER REMADR 00130050
                   SI~NCV;COMMENT POINT TO NEXT CHAR. TO BE SCANNED;    00130100
                   CI~CI+RESULTV;COMMENT HANDLES SCAN CONTINUATION;     00130150
                   GO TO BOFLD;COMMENT BEGINNING OF FIELD;              00130200
                   GO TO ID;                          %IDENTIFIER RETURN00130250
                   GO TO NUMBER;                                        00130300
                   GO TO DOT  ;COMMENT LAST THING WAS A PERIOD;         00130350
                   GO TO RETURNQUOTE;            %LAST WAS A LITERAL    00130400
                   GO TO FIN   ;COMMENT LAST THING WAS A LIT>60 CHRS.;  00130450
                   GO TO RETURNQUOTE ;           % LITERAL TERMINATED ~ 00130500
                   GO TO RETURNQUOTE;                 %ITTERAL RETURN   00130550
                   GO TO HYPHEN;                                        00130600
                   GO TO PCC;COMMENT PICTURE CONTINUATION;              00130650
                   GO TO FIN;COMMENT LAST THING WAS A SPECIAL CHARACTER;00130700
PCC:               TALLY ~ TALLY + 1;                 %COUNT LGHT       00130750
                   DS ~ CHR ;                        %MOVE THE CHR      00130800
                   IF SC ! " " THEN IF SC ! "~" THEN GO TO PCC;         00130850
                   GO TO EOFLD;                                         00130900
RETURNQUOTE:       IF SC = """ THEN SI ~ SI + 1 ELSE  % IF " BYPASS AND 00130950
              BEGIN                                   %  CONTINUE       00131000
                        DI ~ RESULT;                  %  ELSE           00131050
                        DI ~ DI + 7;                  %  SET TO QUOTE   00131100
                        DS ~ LIT "6";                 %  MISSING AND    00131150
                        GO TO EOFLD;                  %  EGRESS         00131200
              END;                                                      00131250
QUOTE:             IF SC ! """ THEN                                     00131300
             BEGIN TALLY ~ TALLY + 1;                 %COUNY LGTH       00131350
                   DS ~ CHR;                          %MOVE CHR         00131400
              END; IF SC = """ THEN              % IF " THEN            00131450
              BEGIN     SI ~ SI + 1;             %    MOVE PAST "       00131470
                        DI ~ RESULT; DI ~ DI + 7;%    SET RESULT        00131500
                        DS ~ LIT "7" ;           %    TO 7              00131530
         END  ELSE IF SC = "~" THEN              % IF ~ THEN CHECK LGTH 00131550
              BEGIN     RETURN ~TALLY;           % FOR ZERO             00131600
                        NCV ~ SI;                % SAVE SI              00131650
                        SI ~LOC RETURN;SI ~ SI + 7;        % SET        00131700
                        DI ~RESULT; DI ~ DI + 7; % SET TO CHANGE RESULT 00131750
                        IF SC = "0" THEN         % CHECK LGTH           00131775
                             DS ~ LIT "5"        %    IF 64 THEN 5      00131800
                        ELSE DS ~ LIT "6" ;      %       ELSE 6 FOR ~   00131850
                        SI ~ NCV ;               % RESTORE SI           00131900
              END ELSE  GO TO QUOTE;             % IF NOT ~ GO TO QUOTE 00131950
                   GO TO EOFLD;                                         00132000
DOT:               TALLY ~1 ;                         %SET LGTH TO 1    00132050
                   DS ~CHR;                           % MOVE IT         00132100
                   GO TO EOFLD;                       %EXIT             00132150
BOFLD:             RETURN ~ DI;                       % STORE ADDR OF   00132200
                   DI ~ RESULT; DI ~ DI + 7;          %OUTPT PT TO RES  00132250
                   IF SC } "0" THEN BEGIN             % NUMBER HANDLE   00132300
                                    DS ~ LIT "2";     %SET RESULT       00132350
                                    DI ~ RETURN ;     %RESTORE OUTPT    00132400
                                    GO TO NUMBER;     %DECIMAL          00132450
                                    END;                                00132500
                   IF SC = ALPHA THEN BEGIN           % IDENTIFIER      00132550
                                    DS ~ LIT "1";     %SET RESULT       00132600
                                    DI ~ RETURN ;     %RESTORE OUTPT    00132650
                                    GO TO IDENTIFIER;                   00132700
                                    END;                                00132750
                   IF SC = """ THEN BEGIN             %LITERIAL         00132800
                                    DI ~ RETURN ;     %RESTORE OUTPT    00132900
                                    SI ~ SI + 1 ;     %BYPASS "         00132950
                                    GO TO QUOTE ;                       00133000
                                    END;                                00133050
                   IF SC = "~" THEN BEGIN             % END OF CRD TEST 00133100
                                     TALLY ~ 1 ;      %SET TALLY        00133150
                                     GO TO EOFLD;                       00133200
                   END ELSE                                             00133250
                   IF SC = "." THEN DS ~ LIT "3"  %  SET PERIOD         00133300
                               ELSE DS ~ LIT "#"; %  SET SPECIAL CHR    00133350
                   DI ~ RETURN;                       %RESTORE OUTPT    00133400
                   GO TO DOT;                                           00133450
NUMBER:            IF  SC } "0" THEN BEGIN            %                 00133500
                                     TALLY ~ TALLY +1;% COUNT NUMBERS   00133520
                                     DS ~CHR ;        % TRANSFERRED     00133550
                                     GO TO NUMBER;    % GO CHECK AGAIN  00133570
                                     END;             %                 00133600
                   IF SC=ALPHA THEN GO TO IDENT;                        00133650
                   IF SC! "-"  THEN GO TO EOFLD;                        00133700
HYPHEN:            IF SC = "-" THEN  BEGIN            %                 00133750
                                     TALLY ~ TALLY +1;% COUNT HYPHENS   00133770
                                     DS ~CHR ;        % TRANSFERRED     00133800
                                     GO TO HYPHEN;    % GO CHECK AGAIN  00133820
                                     END;             %                 00133850
IDENT:             RETURN ~DI ;                       %STORE DI         00133950
                   DI ~ RESULT; DI ~ DI +7;           %PT TO RESULT     00134000
                   IF SC = ALPHA THEN DS ~ LIT "1" ELSE                 00134050
                                 BEGIN                                  00134100
                                      DS ~ LIT "8"; GO TO EOFLD;        00134150
                                 END; DI ~ RETURN ;                     00134200
IDENTIFIER:        TALLY ~ TALLY + 1;                 %COUNT CHRS       00134250
                   DS ~ CHR;                          %MOVE CHR         00134300
ID:                IF SC = ALPHA THEN GO TO IDENTIFIER;                 00134350
                   IF SC = "-"  THEN GO TO IDENTIFIER;                  00134400
EOFLD:             SI ~ SI - 1;                       %OUTCHR PT TO LST 00134450
                   DI ~OUTCHR;DI ~ DI + 5;            %PT TO OUTCHR     00134500
                   DS ~ 2 CHR ;   SI ~ SI - 1 ;       %MOVE CHR TO OUT  00134550
 FIN:              IF SC = " " THEN  BEGIN            %DEBLANK CRD      00134600
              DEBLK:    SI ~ SI + 1;                                    00134650
                        IF SC = " " THEN GO TO DEBLK;                   00134700
                        END;                                            00134750
                   IF SC = "," THEN GO TO DEBLK;                        00134800
                   IF SC = ";" THEN GO TO DEBLK;                        00134850
                   DS ~CHR ;SI ~ SI - 1;              % MOVE FUTCHR IN  00134870
                   NCV ~ SI;                          %STORE PLACE      00134900
                   DI ~ NCR;                          %PT TO NCR        00134950
                   SI ~ LOC NCV; DS ~ WDS;            %MOVR NCV TO NCR  00135000
                   RETURN ~ TALLY;                   %STORE TALLY       00135050
                   SI ~ LOC RETURN; SI ~ SI + 7;      %%CHECK = 64      00135100
                   IF SC = "0" THEN ELSE              %WAS THEN IGNORE  00135150
                          BEGIN                                         00135200
                          SI ~ SI - 2 ;               % BACK UP TO 00   00135250
                          DI ~ NLGTH; DI ~ DI+6;      % FIND NLGTH      00135300
                          IF 2 SC = DC THEN           % IF NLGTH = 00   00135350
                            BEGIN                     %   THEN JUST     00135400
                            DI ~ DI - 1;              %   MOVE LGTH     00135450
                            DS ~ CHR ;                %   OVER TO NLGTH 00135500
                            END ELSE BEGIN            %   ELSE          00135550
                            SI ~ NLGTHV;              %COUNTER SET      00135600
                            RETURN (SI ~ SI + 8);     %COUNT BY TALLY   00135650
                            NLGTHV ~ SI;              %STORE COUNTER    00135700
                            SI ~ LOC NLGTHV;          %PT TO NEW LGTH   00135750
                            DI ~ NLGTH;               %PT TO OLD        00135800
                            DS ~ WDS  ;               %STORE CHANGE     00135850
                       END; END;                                        00135900
        END SCAN;                                                       00135950
         LABEL     TOPPER, LITHANDLE;                                   00136000
         INTEGER   LGTHOLD;                                             00136010
TOPPER:                                          % TOP OF SCANNER       00136050
                   SCAN ( 0,OUTCHX,NSYMB,NLGTH,NLGTH,                   00136100
                   RESULT,RESULT,NCR,NCR);                              00136150
LITHANDLE:         QUOTF ~ FALSE;                                       00136175
                   IF NXTCHR = "~" THEN          %SET TO FETCH A CARD   00136200
              BEGIN FUTCHR ~ "~";                % SET TO  READACARD    00136250
                    NXTCHR ~ 48  ;               %BLANK OUT ~           00136300
              END;                                                      00136350
                   IF RESULT = 5 THEN            % IF RESULT = 5 LGTH   00136400
              BEGIN     RESULT ~ 6;              % IS = 64              00136450
                        NLGTH ~ NLGTH + 64 ;     % SET RESULT  6 FOR RTN00136500
              END;                                                      00136550
                   IF FUTCHR="~" THEN READACARD; % QUOTF MAY BE SET BY  00136600
                                                 %READACARD IF QUOTE OR 00136650
                                                 % CONTINUATION CARD    00136700
                   IF RESULT =6 THEN RESULT ~ RESULT + REAL(QUOTF);     00136730
                   IF RESULT = 7 THEN  % LITERAL HANDLE ROUTINE         00136740
                        IF QUOTF THEN  %                                00136750
                             IF NLGTH { 60 THEN GO TO TOPPER ELSE       00136760
              BEGIN            LGTHOLD  ~ NLGTH; NLGTH ~ 0;             00136770
                               SCAN (0,OUTCHX,OCIX,NLGTH,NLGTH,         00136780
                                     RESULT,RESULT,NCR,NCR);            00136782
                               IF RESULT = 5 THEN RESULT ~ 6 ;          00136785
                               IF RESULT = 6 AND NLGTH=0 THEN NLGTH~64; 00136788
                               IF (LGTHOLD+NLGTH){ 120 THEN             00136790
              BEGIN              CHRTRAN (OCIX,4,NSYMB[8], LGTHOLD-60,  00136800
                                          NLGTH);% MOVE TO NSYMB        00136805
                                 NLGTH ~ NLGTH + LGTHOLD;               00136810
                                 GO TO LITHANDLE;                       00136815
              END  ELSE          QUOTF ~ FALSE                          00136820
              END  ELSE IF NLGTH { 120 THEN RESULT ~ 4                  00136830
              ELSE      IF RESULT = 0 THEN    % 1ST CHAR WAS ~          00136840
              BEGIN QUOTF ~ TRUE ;               %MAKE SCAN AGAIN       00136850
                    NLGTH ~ NLGTH - 1;                                  00136900
              END;                                                      00136950
                   IF QUOTF THEN GO TO TOPPER;   % GO SCAN NEW CARD     00137000
                   END SCANNER;                                         00137050
COMMENT ***************************  SCTRL  *************;COMMENT 12-1; 00137100
PROCEDURE SCTRL;COMMENT CALLS ON SCAN TO GET A LOGICAL CONSTRUCT.       00137150
                   SETS THE SCAN CLASS OF A CONSTRUCT AND CALLS ON      00137200
                   SCHAD FOR LABELS,IDENTIFIERS AND SPECIAL CHARACTERS. 00137250
                   MOVES THE NEXT SYMBOL AND ITS ASSOCIATED VARIABLES TO00137300
                   ISYMB AND ITS ASSOCIATED VARIABLES;                  00137350
              BEGIN                                                     00137400
COMMENT **************************  CLLR  ***************;COMMENT 12-1; 00137450
STREAM PROCEDURE CLLR(ISYMB,NSYMB,LGTH);                                00137500
VALUE LGTH;                                                             00137550
                   BEGIN SI~NSYMB;DI~ISYMB;                             00137600
                        DS~4 LIT"0000";SI~SI+4;                         00137650
                        DS~LGTH CHR; DS~4 LIT"    ";                    00137700
                   END;                                                 00137750
INTEGER  TLGTH;              %TEMP FOR CALC LGTH OF DECIMALS            00137800
LABEL SC1,    PICTURE,GETNEXT,SPECHR,IDENTIFIER,ITSALABEL,              00137850
      INTEGERPART,INTEGR ,FRACTION,LITERR,PERIOD,GTR60,LEQ60,QUOTERR,   00137900
      SPELLINGERR,ERR,FINIS,FORCEAPERIOD;                               00137950
SWITCH RESULTSWITCH~       IDENTIFIER,INTEGERPART,PERIOD,LEQ60,GTR60,   00138000
       QUOTERR,LITERR,SPELLINGERR;   COMMENT USED TO TELL WHAT TYPE OF  00138050
       CONSTRUCT WAS OBTAINED FROM SCANNER;                             00138100
SC1:               IF NCLAS=8 THEN CLLR(ISYMB,NSYMB,NLGTH)ELSE          00138150
                   WORDTRAN(NSYMB,ISYMB,(NLGTH+11)DIV 8);               00138200
                   SCLAS~NCLAS;                                         00138250
                   LASTITEM ~ FALSE ;                                   00138275
                   LGTH~NLGTH;                                          00138300
                   SSCALE~NSCAL ;                                       00138350
                   FOUND~FALSE;ODER~FALSE;INOF~FALSE;                   00138400
                   KEY~CAT~TYPE~0;                                      00138450
                   IF SCLAS=7 THEN COMMENT "." ;                        00138500
              BEGIN OCUR~864;                                           00138550
                   TYPE~17; COMMENT SPECIAL CHARACTER;                  00138600
                   FOUND~TRUE;                                          00138650
                   KEY~473;                                             00138700
                   GO TO GETNEXT;                                       00138750
              END;                                                      00138800
                   IF SCLAS<2 OR SCLAS>4 THEN GO TO GETNEXT;            00138850
                   SCHAD;COMMENT SEARCH FOR SPEC.CHR,LABEL,OR DATANAME; 00138900
                   IF KEY=381 THEN GO TO PICTURE;                       00138950
                   IF LGTH = 3 THEN                            %CJC 080 00138955
                   IF ISYMB[0].[24:18] = "PIC" THEN            %CJC 080 00138956
              BEGIN KEY ~ 381;                                 %CJC 080 00138957
                   GO TO PICTURE;                              %CJC 080 00138958
              END;                                             %CJC 080 00138959
                   IF KEY!718  THEN GO TO GETNEXT;                      00139000
                   COMMENT"END-OF-JOB" OR PERIOD FLAG;                  00139050
FORCEAPERIOD:      NCLAS~7;COMMENT FORCE A PERIOD;                      00139100
                   NSCAL ~0;                                            00139150
                   NLGTH~1;                                             00139200
                   NSYMB[0]~".000";                                     00139250
                   PFLG ~ KEY = 718 ;       %IF END-OF-JOB SET PFLG     00139300
                   GO TO FINIS;                                         00139350
PICTURE:           RESULT~9;COMMENT CHANGE TO PICTURE SCANNING RULES;   00139400
                   NSYMB[0]~NSCAL ~NLGTH~0;                             00139450
                   SCANNER;                                             00139500
                   IF NSYMB[0].[24:12]="IS" THEN                        00139550
              BEGIN IF NLGTH=2 OR (NLGTH=3 AND (OUTCHR ="," OR          00139600
                   OUTCHR =";")) THEN                                   00139650
              BEGIN COMMENT SCAN PAST THE "IS";                         00139700
                   NSYMB[0]~NLGTH~0;                                    00139750
                   SCANNER;                                             00139800
              END;                                                      00139850
              END;                                                      00139900
                   NLGTH~NLGTH-REAL((PFLG~OUTCHR=".")OR OUTCHR=","OR    00139950
                   OUTCHR =";");COMMENT ELIMINATE THE LAST CHARACTER    00140000
                   AND FORCE A PERIOD NEXT TIME IF NECESSARY;           00140050
                   NCLAS~8;COMMENT PC CLASS;                            00140100
                   IF NLGTH>30 THEN                                     00140150
              BEGIN                                                     00140200
                   EIND~36&15[32:40:8]&40[24:40:8];                     00140250
                   GO TO ERR;COMMENT "PICTURE SIZE ILLEGAL XXXX";       00140300
              END;                                                      00140350
                   GO TO FINIS;                                         00140400
GETNEXT:           IF PFLG THEN GO TO FORCEAPERIOD;                     00140450
                   LABLF~CLABLF;CLABLF~FALSE;                           00140500
                   NSCAL~NLGTH~NCLAS~NSYMB[0]~TLGTH~RESULT~0;           00140550
                   SCANNER;                                             00140600
                   GO TO RESULTSWITCH[RESULT];                          00140650
SPECHR:            NCLAS~2; COMMENT ITS A SPECIAL CHARACTER;            00140700
                   GO TO FINIS;                                         00140750
IDENTIFIER:        IF OUTCHR="-" THEN                                   00140800
              BEGIN EIND~86&32[32:40:8]&8[24:40:8];                     00140850
                   GO TO ERR;COMMENT"HYPHEN SPELLING ERROR XXXX";       00140900
              END;                                                      00140950
                   IF LABLF THEN                                        00141000
ITSALABEL:         NCLAS~3 ELSE COMMENT ITS A COBOL WORD;               00141050
              BEGIN NCLAS~4 ;INOF~(NSYMB[0]=INSS OR NSYMB[0]=OFSS);     00141100
              END; IF NLGTH>30 THEN                                     00141150
                             % THEN READ FROM LIBRARY OR SYM TAPE.      00141200
              BEGIN                                                     00141250
                   EIND~40& 15[32:40:8]&83[24:40:8];                    00141300
                   GO TO ERR;COMMENT"ILLEGAL SIZE NAME XXXX";           00141350
              END;                                                      00141400
                   GO TO FINIS;                                         00141450
INTEGERPART:       IF LABLF AND CDIVN=4 THEN                            00141500
                   GO TO ITSALABEL;                                     00141550
                   LABLF ~ FALSE ;               % DONT LET NUMBERS SET 00141570
                   IF NXTCHR ! "." THEN GO TO INTEGR;                   00141600
                   TLGTH~NSYMB[0];                                      00141650
                   RESULT~0;                                            00141700
                   SCANNER;                                             00141750
                   NSYMB[0]~TLGTH;                                      00141800
                   IF NXTCHR > 9 THEN      % SEE IF NXT CHR IS A NUMBER 00141850
              BEGIN NLGTH~NLGTH-1;COMMENT ELIMINATE THE PERIOD;         00141900
                   PFLG~TRUE;COMMENT FORCE A PERIOD NEXT TIME;          00141950
INTEGR:            NCLAS~6;                                             00142000
              END  ELSE                                                 00142050
FRACTION:     BEGIN TLGTH~NLGTH~NLGTH-1;COMMENT ELIMINATE THE PERIOD;   00142100
                   RESULT~2;                                            00142150
                   SCANNER;                                             00142200
                   IF RESULT!2 THEN COMMENT DIDNOT GET A NUMBER;        00142250
              BEGIN EIND~1&32[32:40:8]&40[24:40:8];                     00142300
                   GO TO ERR;COMMENT"LITERAL SPELLING ILLEGAL XXXX";    00142350
              END;                                                      00142400
                   NSCAL ~NLGTH-TLGTH;                                  00142450
                   NCLAS~5;COMMENT LITERAL WITH SPECIFIED SCALE;        00142500
              END; IF NLGTH>18 THEN                                     00142550
LITERR:       BEGIN EIND~1&15[32:40:8]&40[24:40:8];                     00142600
                   GO TO ERR;COMMENT"LITERAL SIZE ILLEGAL XXXX";        00142650
              END; GO TO FINIS;                                         00142700
PERIOD:            IF NXTCHR { 9 THEN GO TO FRACTION;                   00142750
                   NCLAS~7; COMMENT PERIOD CLASS;                       00142800
                   GO TO FINIS;                                         00142850
GTR60:        % DUMMY STATEMENT ELIMINATE AT FIRST  CHANCE              00142900
LEQ60:             NCLAS~1;COMMENT NON-NUMERIC LITERAL CLASS;           00142950
                   GO TO FINIS;                                         00143000
QUOTERR:           IF CDIVN = 0 OR INFLG THEN GO TO FINIS;              00143020
                   ERP (9, "QUOTE  " ) ;         % QUOTE MISSING        00143050
                   GO TO LITERR;COMMENT LITERAL>120;                    00143100
SPELLINGERR:       EIND~77&40[32:40:8]&32[24:40:8];                     00143150
                   COMMENT"SYNTAX ERROR ILLEGAL SPELLING";              00143200
ERR:               SYOUT(MSG[124],NSYMB,IF NLGTH>31THEN 31 ELSE NLGTH); 00143250
                   IF CDIVN = 0 OR INFLG THEN GO TO FINIS; %DONT PROCESS00143275
                   EIND~EIND&124[16:40:8];                              00143300
                   ERP(EIND,0);                                         00143350
                   COMPE~TRUE;                                          00143400
FINIS:                                                                  00143450
                   IF KEY=338 COMMENT NOISE WORD;                       00143500
                   OR(KEY=502 AND CDIVN!4)COMMENT"AND"AND NOT PROC.DIV.;00143550
                   OR LGTH=0 THEN GO TO SC1;COMMENT IGNORE ISYMB;       00143600
              END;                                                      00143650
COMMENT ***************************  IELEF   *************************; 00143700
COMMENT SETS ELEMENTARY ITEM FLAG IN OCUR   ;                           00158000
 PROCEDURE IELEF (OCUR);                                                00158100
              VALUE OCUR; INTEGER OCUR;                                 00158200
              BEGIN LABEL EDE;EDE:                        COMMENT 8-27; 00158300
                   IF OCUR > 850 THEN                                   00158305
              BEGIN                                                     00158306
                   DICT[OCUR.[33:6],OCUR.[39:9]].[6:1]~1;               00158400
              END;                                                      00158405
              END;                                                      00158500
COMMENT ***************************  IHLNK   *************************; 00158550
COMMENT     PLACES HIERARCHY LINK INTO DICTIONARY  ;                    00158600
PROCEDURE IHLNK (BACK,OCUR) ;                                           00158700
                   VALUE BACK, OCUR ;  INTEGER BACK, OCUR ;             00158800
              BEGIN LABEL L;                                            00158802
                   IF OCUR > 850 AND BACK ! OCUR THEN                   00158805
                   IF DICT[OCUR.[33:6],OCUR.[39:9]].[1:5] ! 6 THEN      00158806
                   DICT[OCUR.[33:6],OCUR.[39:9]].[33:15] ~ BACK;        00158900
           L: END;                                                      00159000
              BEGIN LABEL EDE; EDE: TIM~TIME(1);%GET TIME FORM MCP      00161905
COMMENT FILL ARRAY DICT WITH RESERVED WORDS TYPE KEY AND CATEGORY       00162000
        NUMBERS.                   ;                                    00162100
                    FILL HALE [*] WITH%DICTIONARY SYMBOL STACK HEADS.   00162200
   OCT0000101700000000,  OCT0000144200000000,  OCT0000044500000000,     00162300
   OCT0000027200000000,  OCT0000000000000000,  OCT0000024700000000,     00162310
   OCT0000146000000000,  OCT0000155500000000,  OCT0000056100000000,     00162320
   OCT0000007400000000,  OCT0000013400000000,  OCT0000136400000000,     00162330
   OCT0000041000000000,  OCT0000137400000000,  OCT0000123400000000,     00162340
   OCT0000000000000000,  OCT0000000000000000,  OCT0000033200000000,     00162350
   OCT0000000000000000,  OCT0000145200000000,  OCT0000046000000000,     00162360
   OCT0000000000000000,  OCT0000071500000000,  OCT0000000000000000,     00162370
   OCT0000000000000000,  OCT0000000000000000,  OCT0000100000000000,     00162380
   OCT0000000000000000,  OCT0000135700000000,  OCT0000126500000000,     00162390
   OCT0000127300000000,  OCT0000061600000000,  OCT0000072200000000,     00162400
   OCT0000000000000000,  OCT0000001300000000,  OCT0000070500000000,     00162410
   OCT0000041400000000,  OCT0000035500000000,  OCT0000140100000000,     00162420
   OCT0000043300000000,  OCT0000004100000000,  OCT0000060300000000,     00162430
   OCT0000004400000000,  OCT0000046500000000,  OCT0000000000000000,     00162440
   OCT0000153300000000,  OCT0000105400000000,  OCT0000020100000000,     00162450
   OCT0000033700000000,  OCT0000000000000000,  OCT0000044000000000,     00162460
   OCT0000011600000000,  OCT0000000000000000,  OCT0000153500000000,     00162470
   OCT0000016400000000,  OCT0000101400000000,  OCT0000042300000000,     00162480
   OCT0000022500000000,  OCT0000032100000000,  OCT0000051400000000,     00162490
   OCT0000000000000000,  OCT0000022700000000,  OCT0000000000000000,     00162500
   OCT0000015300000000,  OCT0000147500000000,  OCT0000017600000000,     00162510
   OCT0000001000000000,  OCT0000013200000000,  OCT0000016100000000,     00162520
   OCT0000031700000000,  OCT0000000000000000,  OCT0000103000000000,     00162530
   OCT0000024500000000,  OCT0000007600000000,  OCT0000012100000000,     00162540
   OCT0000143600000000,  OCT0000000000000000,  OCT0000047500000000,     00162550
   OCT0000000000000000,  OCT0000003100000000,  OCT0000003300000000,     00162560
   OCT0000003600000000,  OCT0000030400000000,  OCT0000000000000000,     00162570
   OCT0000020400000000,  OCT0000000000000000,  OCT0000000000000000,     00162580
   OCT0000000000000000,  OCT0000047700000000,  OCT0000014500000000,     00162590
   OCT0000000000000000,  OCT0000042600000000,  OCT0000000000000000,     00162600
   OCT0000052500000000,  OCT0000000000000000,  OCT0000064000000000,     00162610
   OCT0000030700000000,  OCT0000000000000000,  OCT0000000000000000,     00162620
   OCT0000000000000000,  OCT0000000000000000,  OCT0000000000000000,     00162630
   OCT0000131300000000,  OCT0000026300000000,  OCT0000002500000000,     00162640
   OCT0000000300000000,  OCT0000000000000000,  OCT0000000000000000,     00162650
   OCT0000011000000000,  OCT0000011300000000,  OCT0000014200000000,     00162660
   OCT0000075200000000,  OCT0000000000000000,  OCT0000151500000000,     00162670
   OCT0000000000000000,  OCT0000000000000000,  OCT0000064600000000,     00162680
   OCT0000023700000000,  OCT0000074600000000,  OCT0000000000000000,     00162690
   OCT0000000000000000,  OCT0000024100000000,  OCT0000036500000000,     00162700
   OCT0000071300000000,  OCT0000025200000000,  OCT0000000000000000,     00162710
   OCT0000041700000000,  OCT0000000000000000,  OCT0000130700000000,     00162720
   OCT0000023300000000,  OCT0000004700000000,  OCT0000113000000000,     00162730
   OCT0000162300000000,  OCT0000000000000000,  OCT0000030100000000,     00162740
   OCT0000000000000000,  OCT0000066000000000,  OCT0000032600000000,     00162750
   OCT0000000000000000,  OCT0000000000000000,  OCT0000036300000000,     00162760
   OCT0000142200000000,  OCT0000026700000000,  OCT0000000000000000,     00162770
   OCT0000013700000000,  OCT0000045200000000,  OCT0000044700000000,     00162780
   OCT0000005300000000,  OCT0000043000000000,  OCT0000112600000000,     00162790
   OCT0000000000000000,  OCT0000120600000000,  OCT0000041200000000,     00162800
   OCT0000000000000000,  OCT0000000000000000,  OCT0000002700000000,     00162810
   OCT0000014700000000,  OCT0000002300000000,  OCT0000000000000000,     00162820
   OCT0000035200000000,  OCT0000000000000000,  OCT0000056400000000,     00162830
   OCT0000000000000000,  OCT0000135000000000,  OCT0000037500000000,     00162840
   OCT0000050400000000,  OCT0000147000000000,  OCT0000144500000000,     00162850
   OCT0000000000000000,  OCT0000152300000000,  OCT0000112000000000,     00162860
   OCT0000132600000000,  OCT0000101000000000,  OCT0000020700000000,     00162870
   OCT0000000000000000,  OCT0000000000000000,  OCT0000017300000000,     00162880
   OCT0000010000000000,  OCT0000006700000000,  OCT0000005600000000,     00162890
   OCT0000007100000000,  OCT0000021100000000,  OCT0000012500000000,     00162900
   OCT0000000000000000,  OCT0000071000000000,  OCT0000010300000000,     00162910
   OCT0000057300000000,  OCT0000000000000000,  OCT0000001500000000,     00162920
   OCT0000021300000000,  OCT0000160500000000,  OCT0000031100000000,     00162930
   OCT0000031400000000,  OCT0000121100000000,  OCT0000026000000000,     00162940
   OCT0000006100000000,  OCT0000062300000000,  OCT0000000500000000,     00162950
   OCT0000107300000000,  OCT0000000000000000,  OCT0000075400000000,     00162960
   OCT0000045500000000,  OCT0000000000000000,  OCT0000060100000000,     00162970
   OCT0000057100000000,  OCT0000034200000000,  OCT0000002000000000,     00162980
   OCT0000107000000000,  OCT0000032400000000,  OCT0000076200000000,     00162990
   OCT0000015600000000,  OCT0000000000000000,  OCT0000015100000000,     00163000
   OCT0000000000000000,  OCT0000000000000000,  OCT0000043600000000,     00163010
   OCT0000037100000000,  OCT0000000000000000,  OCT0000000000000000,     00163020
   OCT0000000000000000,  OCT0000000000000000,  OCT0000000000000000,     00163030
   OCT0000000000000000,  OCT0000000000000000,  OCT0000000000000000,     00163040
   OCT0000000000000000,  OCT0000034400000000,  OCT0000162700000000,     00163050
   OCT0000000000000000,  OCT0000155000000000,  OCT0000040500000000,     00163060
   OCT0000017000000000,  OCT0000064300000000,  OCT0000022100000000,     00163070
   OCT0000151300000000,  OCT0000026500000000,  OCT0000100500000000,     00163080
   OCT0000152500000000,  OCT0000036000000000,  OCT0000010600000000,     00163090
   OCT0000052200000000,  OCT0000023500000000,  OCT0000074100000000,     00163100
   OCT0000000000000000,  OCT0000000000000000,  OCT0000022300000000,     00163110
   OCT0000000000000000,  OCT0000055600000000,  OCT0000000000000000,     00163120
   OCT0000104300000000,  OCT0000027400000000,  OCT0000053700000000,     00163130
   OCT0000110300000000,  OCT0000006400000000,  OCT0000044200000000,     00163140
   OCT0000073300000000,  OCT0000000000000000;                           00163150
                    FILL DICT [0,*] WITH                                00163155
   OCT0000000000000000,  OCT0000000000000000,  OCT0000000000000000,     00163160
   OCT0200153731620000,  OCT0100000000000522,  OCT0500021723432162,     00163170
   OCT6200000000000000,  OCT0100000000000543,  OCT0600047026314343,     00163180
   OCT2551000000000000,  OCT0100000000000557,  OCT0400070262317125,     00163190
   OCT0100000000000615,  OCT0600000027316531,  OCT4527000000000000,     00163200
   OCT0100000000001010,  OCT0500075065214364,  OCT2500000000000000,     00163210
   OCT0100000000000462,  OCT0300000026465100,  OCT0100000000000512,     00163220
   OCT0200000031450000,  OCT0100000000000525,  OCT0200055146260000,     00163230
   OCT0100000000000527,  OCT0400000071255146,  OCT0100000000300530,     00163240
   OCT0500013071255146,  OCT6200000000000000,  OCT0100000000300530,     00163250
   OCT0600000071255146,  OCT2562000000000000,  OCT0100000000300530,     00163260
   OCT1200000021434730,  OCT2122256331230000,  OCT0100000001000533,     00163270
   OCT1400124621434730,  OCT2145644425513123,  OCT0100000000000534,     00163280
   OCT1500056623464447,  OCT6463216331464521,  OCT4300000000000000,     00163290
   OCT0100000000000544,  OCT0600155346232364,  OCT5162000000000000,     00163300
   OCT0100000000000573,  OCT0700106545644425,  OCT5131230000000000,     00163310
   OCT0100000001000572,  OCT1100117051252425,  OCT2631452562000000,     00163320
   OCT0100000000000604,  OCT0700027751254521,  OCT4425620000000000,     00163330
   OCT0100000000000605,  OCT0400100262312745,  OCT0100000000500612,     00163340
   OCT0600047262312745,  OCT2524000000000000,  OCT0100000000500612,     00163350
   OCT0300053421434300,  OCT0100000000000765,  OCT0300061121452400,     00163360
   OCT0100000000200766,  OCT0700021524316531,  OCT2425240000000000,     00163370
   OCT0100000000601467,  OCT1100125546633025,  OCT5166316225000000,     00163380
   OCT0100000000000777,  OCT0400000025436225,  OCT0100000000000777,     00163390
   OCT0500000025506421,  OCT4300000000000000,  OCT0100000001001442,     00163400
   OCT0600152125506421,  OCT4362000000000000,  OCT0100000001001442,     00163410
   OCT0700121725672325,  OCT2524620000000000,  OCT0100000001001445,     00163420
   OCT1500040325674746,  OCT4525456331216325,  OCT2400000000000000,     00163430
   OCT0100000000601470,  OCT0700000027512521,  OCT6325510000000000,     00163440
   OCT0100000001001445,  OCT0400033031456346,  OCT0100000000001013,     00163450
   OCT0400053143256262,  OCT0100000001001440,  OCT0500136144314564,     00163460
   OCT6200000000000000,  OCT0100000000601465,  OCT1200054744644363,     00163470
   OCT3147433125240000,  OCT0100000000601466,  OCT1000000045252721,     00163480
   OCT6331652500000000,  OCT0100000001001447,  OCT0300150045466300,     00163490
   OCT0100000001001025,  OCT0200024346510000,  OCT0100000000201026,     00163500
   OCT0400000047436462,  OCT0100000000601464,  OCT1000066347466231,     00163510
   OCT6331652500000000,  OCT0100000001001446,  OCT0700000051466445,     00163520
   OCT2425240000000000,  OCT0100000000001043,  OCT1000054262254563,     00163530
   OCT2545232500000000,  OCT0100000000001045,  OCT0400016663302145,     00163540
   OCT0100000000000522,  OCT0400140663302545,  OCT0100000000000522,     00163550
   OCT0500054463314425,  OCT6200000000000000,  OCT0100000000601052,     00163560
   OCT0500025564456331,  OCT4300000000000000,  OCT0100000000001053,     00163570
   OCT0700023164452550,  OCT6421430000000000,  OCT0100000001001443,     00163580
   OCT0500033464622127,  OCT2500000000000000,  OCT0100000000001056,     00163590
   OCT0700000065215170,  OCT3145270000000000,  OCT0100000000001061,     00163600
   OCT0100134253000000,  OCT2100000000601466,  OCT0100042155000000,     00163610
   OCT2100000000000710,  OCT0100110757000000,  OCT2100000001001441,     00163620
   OCT0100124254000000,  OCT2100000000601465,  OCT0100057661000000,     00163630
   OCT2100000000601467,  OCT0100050772000000,  OCT2100000000000522,     00163640
   OCT0100060675000000,  OCT2100000001001442,  OCT0100157416000000,     00163650
   OCT2100000001001445,  OCT0100071717000000,  OCT2100000001001444,     00163660
   OCT0100040020000000,  OCT2100000000601464,  OCT0100034740000000,     00163670
   OCT2100000000601466,  OCT0100000074000000,  OCT2100000001001443,     00163680
   OCT0100051735000000,  OCT2100000000000703,  OCT0100000036000000,     00163690
   OCT2100000001001440,  OCT0200132046450000,  OCT0100000000000417,     00163700
   OCT0300046321242400,  OCT0100000000001606,  OCT0500000023434662,     00163710
   OCT2500000000000000,  OCT0100000000001610,  OCT0700000023464447,     00163720
   OCT6463250000000000,  OCT0100000000001611,  OCT0600121424316531,     00163730
   OCT2425000000000000,  OCT0100000000001614,  OCT0700143325672144,     00163740
   OCT3145250000000000,  OCT0100000000001615,  OCT0200036731260000,     00163750
   OCT0100000000001616,  OCT0400000044466525,  OCT0100000000001622,     00163760
   OCT1000126244644363,  OCT3147437000000000,  OCT0100000000001623,     00163770
   OCT0400000046472545,  OCT0100000000001624,  OCT0700000047255126,     00163780
   OCT4651440000000000,  OCT0100000000001625,  OCT0400116151252124,     00163790
   OCT0100000000001626,  OCT1000000062642263,  OCT5121236300000000,     00163800
   OCT0100000000001632,  OCT0500135366513163,  OCT2500000000000000,     00163810
   OCT0100000000001634,  OCT0200000027460000,  OCT0100000000001636,     00163820
   OCT1100000023302151,  OCT2123632551000000,  OCT0100000000000402,     00163830
   OCT1200000023302151,  OCT2123632551620000,  OCT0100000000000402,     00163840
   OCT0400000063305164,  OCT0100000000000405,  OCT0700125263305146,     00163850
   OCT6427300000000000,  OCT0100000000000405,  OCT0200062763460000,     00163860
   OCT0100000000000410,  OCT0300052721512500,  OCT0100000000000522,     00163870
   OCT0200050223430000,  OCT0100000000000543,  OCT0300000023444700,     00163880
   OCT0100000000000544,  OCT0500051124312731,  OCT6300000000000000,     00163890
   OCT0100000000000550,  OCT0600105124312731,  OCT6362000000000000,     00163900
   OCT0100000000000550,  OCT0200130162710000,  OCT0100000000000615,     00163910
   OCT0500137222434623,  OCT4200000000000000,  OCT0100000000001175,     00163920
   OCT0700000051254325,  OCT2162250000000000,  OCT0100000000001630,     00163930
   OCT0600061351256364,  OCT5145000000000000,  OCT0100000000001277,     00163940
   OCT1100102521622325,  OCT4524314527000000,  OCT0100000000001300,     00163950
   OCT1200000024256223,  OCT2545243145270000,  OCT0100000000001301,     00163960
   OCT0300065642257000,  OCT0100000000001302,  OCT0400000024516444,     00163970
   OCT0100000000401303,  OCT0200055331240000,  OCT0100000000000145,     00163980
   OCT1600000031242545,  OCT6331263123216331,  OCT4645000000000000,     00163990
   OCT0100000000000145,  OCT0600000062254325,  OCT2363000000000000,     00164000
   OCT0100000000000315,  OCT0700074451256225,  OCT5165250000000000,     00164010
   OCT0100000000000317,  OCT0400000023464770,  OCT0100000000000375,     00164020
   OCT0600000021626231,  OCT2745000000000000,  OCT0100000000000407,     00164030
   OCT0400076051252543,  OCT0100000000000413,  OCT0200000045460000,     00164040
   OCT0100000000000414,  OCT1100000021436325,  OCT5145216325000000,     00164050
   OCT0100000000000415,  OCT0400000024644447,  OCT0100000000000431,     00164060
   OCT0400160266316330,  OCT0100000000000442,  OCT1000066662632145,     00164070
   OCT2421512400000000,  OCT0100000000000443,  OCT0200067126240000,     00164080
         OCT0100000000000457, OCT1100163651252346, OCT5124314527000000, 00164090
   OCT0100000000000460,  OCT0500000043212225,  OCT4300000000000000,     00164100
   OCT0100000000000461,  OCT0200000065210000,  OCT0100000000000462,     00164110
   OCT0400123726314325,  OCT0100000000000514,  OCT0500136721224664,     00164120
   OCT6300000000000000,  OCT0100000000000515,  OCT0400067426514644,     00164130
   OCT0100000000000517,  OCT0700000051252346,  OCT5124620000000000,     00164140
   OCT0100000000000520,  OCT0600067751252346,  OCT5124000000000000,     00164150
   OCT0100000000000520,  OCT1000000023464563,  OCT2131456200000000,     00164160
   OCT0100000000000521,  OCT0700000046443163,  OCT6325240000000000,     00164170
   OCT0100000000000524,  OCT0200000021450000,  OCT0100000000000534,     00164180
   OCT1100000022252731,  OCT4545314527000000,  OCT0100000000000537,     00164190
   OCT0400000066302545,  OCT0100000000000540,  OCT0500157722432145,     00164200
   OCT4200000000000000,  OCT0100000000300540,  OCT0200062122710000,     00164210
   OCT0100000000000541,  OCT0700000047514663,  OCT2523630000000000,     00164220
   OCT0100000000000542,  OCT0200073623470000,  OCT0100000000000542,     00164230
   OCT0500000023302523,  OCT4200000000000000,  OCT0100000000000542,     00164240
   OCT0200126071620000,  OCT0100000000000546,  OCT1100105724254725,     00164250
   OCT4524314527000000,  OCT0100000000000547,  OCT0600000024464343,     00164260
   OCT2151000000000000,  OCT0100000000000551,  OCT0600130425452431,     00164270
   OCT4527000000000000,  OCT0100000000000556,  OCT0500073026434621,     00164280
   OCT6300000000000000,  OCT0100000000000560,  OCT0200000026620000,     00164290
   OCT0100000000000561,  OCT0200000041620000,  OCT0100000000000563,     00164300
   OCT1100063241646263,  OCT3126312524000000,  OCT0100000000000563,     00164310
   OCT0700000043252165,  OCT3145270000000000,  OCT0100000000000564,     00164320
   OCT0500000047645127,  OCT2500000000000000,  OCT0100000000001041,     00164330
   OCT0400063543252663,  OCT0100000000000565,  OCT0500000043314525,     00164340
   OCT6200000000000000,  OCT0100000000000566,  OCT0200076743470000,     00164350
   OCT0100000000000567,  OCT0200131646230000,  OCT0100000000000573,     00164360
   OCT1000000043462321,  OCT6331464500000000,  OCT0100000000000576,     00164370
   OCT0600132347432123,  OCT2562000000000000,  OCT0100000000000576,     00164380
   OCT0500000047463145,  OCT6300000000000000,  OCT0100000000000576,     00164390
   OCT0200000047630000,  OCT0100000000000600,  OCT0500113451312730,     00164400
   OCT6300000000000000,  OCT0100000000000607,  OCT0200000062450000,     00164410
   OCT0100000000500612,  OCT1000114062644747,  OCT5125626200000000,     00164420
   OCT0100000000000613,  OCT0500111225652551,  OCT7000000000000000,     00164430
   OCT0100000000000620,  OCT0200000062240000,  OCT0100000000000622,     00164440
   OCT1300153162216525,  OCT5426212363465100,  OCT0100000001100634,     00164450
   OCT0600000022252646,  OCT5125000000000000,  OCT0100000000000767,     00164460
   OCT0200000021630000,  OCT0100000000000767,  OCT1100120421246521,     00164470
   OCT4523314527000000,  OCT0100000000000771,  OCT0500000021266325,     00164480
   OCT5100000000000000,  OCT0100000000000772,  OCT0200000022700000,     00164490
   OCT0100000000000773,  OCT1500150223465151,  OCT2562474645243145,     00164500
   OCT2700000000000000,  OCT0100000000000774,  OCT0500000026315162,     00164510
   OCT6300000000000000,  OCT0100000000001006,  OCT1200065030312730,     00164520
   OCT5465214364250000,  OCT0100000000301012,  OCT1300065330312730,     00164530
   OCT5465214364256200,  OCT0100000000301012,  OCT0500000031454764,     00164540
   OCT6300000000000000,  OCT0100000000001014,  OCT0700102243252124,     00164550
   OCT3145270000000000,  OCT0100000000001015,  OCT0400000043462342,     00164560
   OCT0100000000001017,  OCT1100000043466654,  OCT6521436425000000,     00164570
   OCT0100000000301020,  OCT1200111543466654,  OCT6521436425620000,     00164580
   OCT0100000000301020,  OCT0400103345256763,  OCT0100000000001023,     00164590
   OCT0600000046646347,  OCT6463000000000000,  OCT0100000000001027,     00164600
   OCT1000076447466231,  OCT6331464500000000,  OCT0100000000001031,     00164610
   OCT0700157147514623,  OCT2525240000000000,  OCT0100000000001034,     00164620
   OCT0500000050644663,  OCT2500000000000000,  OCT0100000000301035,     00164630
   OCT1000115251256525,  OCT5162252400000000,  OCT0100000000001040,     00164640
   OCT1100000051254743,  OCT2123314527000000,  OCT0100000000001042,     00164650
   OCT0500000062472123,  OCT2500000000000000,  OCT0100000000301046,     00164660
   OCT0600000062472123,  OCT2562000000000000,  OCT0100000000301046,     00164670
   OCT1000000063214343,  OCT7031452700000000,  OCT0100000000001047,     00164680
   OCT0400116564474645,  OCT0100000000001055,  OCT0300000064622500,     00164690
   OCT0100000000001633,  OCT0500120164623145,  OCT2700000000000000,     00164700
   OCT0100000000001060,  OCT0600072521232325,  OCT4763000000000000,     00164710
   OCT0100000000001605,  OCT0500156321436325,  OCT5100000000000000,     00164720
   OCT0100000000001607,  OCT0600000024252631,  OCT4525000000000000,     00164730
   OCT0100000000001612,  OCT0700133124316247,  OCT4321700000000000,     00164740
   OCT0100000000001613,  OCT0700000031452343,  OCT6424250000000000,     00164750
   OCT0100000000001617,  OCT0700000044464531,  OCT6346510000000000,     00164760
   OCT0100000000001621,  OCT0400075662465163,  OCT0100000000001627,     00164770
   OCT0400000062634647,  OCT0100000000001631,  OCT0400000025673163,     00164780
   OCT0100000000001635,  OCT0400000045466325,  OCT0100000000001637,     00164790
   OCT0300104621226200,  OCT0100000000500740,  OCT0400000062505163,     00164800
   OCT0100000000500741,  OCT0300114462314500,  OCT0100000000500742,     00164810
   OCT0300000023466200,  OCT0100000000500743,  OCT0600104121512363,     00164820
   OCT2145000000000000,  OCT0100000000500744,  OCT0200117643450000,     00164830
   OCT0100000000500745,  OCT0000000000000000,  OCT0000000000000000,     00164840
   OCT0000000000000000,  OCT0000000000000000,  OCT0000000000000000,     00164850
   OCT0000000000000000,  OCT0000000000000000;                           00164860
  FILL DICT[1,*] WITH                          OCT0300000025674700,     00164865
   OCT0100000000500746,  OCT1200106224312127,  OCT4546626331230000,     00164870
   OCT0100000000000635,  OCT1300000023434623,  OCT4254644531636200,     00164880
   OCT0100000001100147,  OCT1500133723512521,  OCT6331464554242163,     00164890
   OCT2500000000000000,  OCT0100000001100753,  OCT0500000023702343,     00164900
   OCT2500000000000000,  OCT0100000001100754,  OCT1200133447645127,     00164910
   OCT2554242163250000,  OCT0100000001100755,  OCT1300000022434623,     00164920
   OCT4254234664456300,  OCT0100000001100756,  OCT1400103631456263,     00164930
   OCT2143432163314645,  OCT0100000001100147,  OCT1200000062465163,     00164940
   OCT5463214725620000,  OCT0100000000001315,  OCT1200112325452454,     00164950
   OCT4626544146220000,  OCT0100000000001316,  OCT0600000021646330,     00164960
   OCT4651000000000000,  OCT0100000000000147,  OCT0400123122316362,     00164970
   OCT0100000000000147,  OCT0500151723462246,  OCT4300000000000000,     00164980
   OCT0100000000000147,  OCT0700107723464563,  OCT5146430000000000,     00164990
   OCT0100000000000147,  OCT0500000025456325,  OCT5100000000000000,     00165000
   OCT0100000000000147,  OCT1300127043466625,  OCT5154224664452400,     00165010
   OCT0100000000301020,  OCT1400154343466625,  OCT5154224664452462,     00165020
   OCT0100000000301020,  OCT1300134564474725,  OCT5154224664452400,     00165030
   OCT0100000000301012,  OCT1400000064474725,  OCT5154224664452462,     00165040
   OCT0100000000301012,  OCT0600000065214364,  OCT2562000000000000,     00165050
   OCT0100000000000462,  OCT1700000044254446,  OCT5170542464444754,     00165060
   OCT4225700000000000,  OCT0100000001100147,  OCT1600140345465444,     00165070
   OCT2544465170542464,  OCT4447000000000000,  OCT0100000000000147,     00165080
   OCT1600000046224125,  OCT2363544751462751,  OCT2144000000000000,     00165090
   OCT0100000000000147,  OCT0700115651254421,  OCT5142620000000000,     00165100
   OCT0100000000000147,  OCT1000000062252364,  OCT5131637000000000,     00165110
   OCT0100000000000147,  OCT0600145562632163,  OCT6462000000000000,     00165120
   OCT0100000000000147,  OCT1200000062644725,  OCT5165316246510000,     00165130
   OCT0100000000000147,  OCT1400000063256263,  OCT5447216363255145,     00165140
         OCT0100000000000147, OCT0300117344462400, OCT0100000000601471, 00165150
   OCT2100000047214725,  OCT5154632147255451,  OCT2521242551000000,     00165160
   OCT0100000000401404,  OCT2000000047214725,  OCT5154632147255447,     00165170
   OCT6445233000000000,  OCT0100000000401405,  OCT1500114762252744,     00165180
   OCT2545635443314431,  OCT6300000000000000,  OCT0100000000000312,     00165190
   OCT1000000047513146,  OCT5131637000000000,  OCT0100000000000320,     00165200
   OCT1300000025456531,  OCT5146454425456300,  OCT0100000000000325,     00165210
   OCT1700000062466451,  OCT2325542346444764,  OCT6325510000000000,     00165220
   OCT0100000000000326,  OCT0600000044254446,  OCT5170000000000000,     00165230
   OCT0100000000000327,  OCT1700152746224125,  OCT2363542346444764,     00165240
   OCT6325510000000000,  OCT0100000000000330,  OCT1000000046476331,     00165250
   OCT4645214300000000,  OCT0100000000000331,  OCT0700000062252363,     00165260
   OCT3146450000000000,  OCT0100000000000373,  OCT0600000022540505,     00165270
   OCT0000000000000000,  OCT0100000000000374,  OCT0600000022540500,     00165280
   OCT0000000000000000,  OCT0100000000000374,  OCT0700000043312251,     00165290
   OCT2151700000000000,  OCT0100000000000526,  OCT0200000047230000,     00165300
   OCT0100000000000575,  OCT0700144747312363,  OCT6451250000000000,     00165310
   OCT0100000000000575,  OCT0500000025515146,  OCT5100000000000000,     00165320
   OCT0100000000001003,  OCT1300122363252330,  OCT4531506425542100,     00165330
   OCT0100000000001304,  OCT1500127624216325,  OCT5423464447314325,     00165340
   OCT2400000000000000,  OCT0100000000001306,  OCT1300122663252330,     00165350
   OCT4531506425542200,  OCT0100000000001310,  OCT1300161363252330,     00165360
   OCT4531506425542300,  OCT0100000000001311,  OCT1200154547514627,     00165370
   OCT5121445431240000,  OCT0100000000001313,  OCT1400000045464554,     00165380
   OCT6263214524215124,  OCT0100000000001314,  OCT1400000024216325,     00165390
   OCT5466513163632545,  OCT0100000001100753,  OCT1500000023464526,     00165400
   OCT3127645121633146,  OCT4500000000000000,  OCT0100000000000311,     00165410
   OCT1500146562472523,  OCT3121435445214425,  OCT6200000000000000,     00165420
   OCT0100000000000313,  OCT1400150526314325,  OCT5423464563514643,     00165430
   OCT0100000000000314,  OCT0700000023302145,  OCT4525430000000000,     00165440
   OCT0100000000401200,  OCT0400161644263124,  OCT0100000000001201,     00165450
   OCT1000000044644363,  OCT3147432500000000,  OCT0100000000000316,     00165460
   OCT1300000031544654,  OCT2346456351464300,  OCT0100000000000321,     00165470
   OCT0500000021474743,  OCT7000000000000000,  OCT0100000000000322,     00165480
   OCT0500000051255164,  OCT4500000000000000,  OCT0100000000000323,     00165490
   OCT0500000066465124,  OCT6200000000000000,  OCT0100000000000401,     00165500
   OCT0700146344462464,  OCT4325620000000000,  OCT0100000000000403,     00165510
   OCT0700000021242451,  OCT2562620000000000,  OCT0100000000000404,     00165520
   OCT2100141625452431,  OCT4527542631432554,  OCT4321222543000000,     00165530
   OCT0100000001100552,  OCT1400000031454764,  OCT6354466463476463,     00165540
   OCT0100000000000412,  OCT0400000021512521,  OCT0100000000000416,     00165550
   OCT0500000021512521,  OCT6200000000000000,  OCT0100000000000416,     00165560
   OCT0500154147644523,  OCT3000000000000000,  OCT0100000000400426,     00165570
   OCT1200137723215124,  OCT5447644523300000,  OCT0100000000400426,     00165580
   OCT0600143051252124,  OCT2551000000000000,  OCT0100000000400427,     00165590
   OCT0700000051252124,  OCT2551620000000000,  OCT0100000000400427,     00165600
   OCT1300000023215124,  OCT5451252124255100,  OCT0100000000400427,     00165610
   OCT1400000023215124,  OCT5451252124255162,  OCT0100000000400427,     00165620
   OCT1000000024316531,  OCT6231464500000000,  OCT0100000000000430,     00165630
   OCT1000000042257022,  OCT4621512400000000,  OCT0100000000400432,     00165640
   OCT1700000044256262,  OCT2127255447513145,  OCT6325510000000000,     00165650
   OCT0100000000400433,  OCT0300000046262600,  OCT0100000000000435,     00165660
   OCT0700000047513145,  OCT6325510000000000,  OCT0100000000400440,     00165670
   OCT1000000047513145,  OCT6325516200000000,  OCT0100000000400440,     00165680
   OCT1000000051254521,  OCT4431452700000000,  OCT0100000000000445,     00165690
   OCT0400000062214425,  OCT0100000000000446,  OCT1000000047512547,     00165700
   OCT2151252400000000,  OCT0100000000000456,  OCT0400000044462425,     00165710
   OCT0100000000000513,  OCT0400000024216321,  OCT0100000000000531,     00165720
   OCT1000000023464562,  OCT6321456300000000,  OCT0100000000000532,     00165730
   OCT2400141222252731,  OCT4545314527542631,  OCT4325544321222543,     00165740
   OCT0100000001100535,  OCT2400000022252731,  OCT4545314527546321,     00165750
   OCT4725544321222543,  OCT0100000001100536,  OCT2100000025452431,     00165760
   OCT4527546321472554,  OCT4321222543000000,  OCT0100000001100553,     00165770
   OCT1300142525452454,  OCT4626542631432500,  OCT0100000001100554,     00165780
   OCT1300000025452454,  OCT4626546321472500,  OCT0100000001100555,     00165790
   OCT0600156030216230,  OCT2524000000000000,  OCT0100000000000562,     00165800
   OCT1300000044254446,  OCT5170542464444700,  OCT0100000000000570,     00165810
   OCT1700000066465142,  OCT3145275462634651,  OCT2127250000000000,     00165820
   OCT0100000000000577,  OCT0500000051214527,  OCT2500000000000000,     00165830
   OCT0100000000000602,  OCT0200147251270000,  OCT0100000000000602,     00165840
   OCT1400000051252346,  OCT5124542346644563,  OCT0100000001100603,     00165850
   OCT1300000051252543,  OCT5445644422255100,  OCT0100000001100606,     00165860
   OCT1000151062254563,  OCT3145254300000000,  OCT0100000001100610,     00165870
   OCT1100000062255064,  OCT2545232524000000,  OCT0100000000000611,     00165880
   OCT0200156662700000,  OCT0100000000000614,  OCT1400000062704523,     00165890
   OCT3051464531712524,  OCT0100000000000614,  OCT0400000063214725,     00165900
   OCT0100000000400616,  OCT0500000063214725,  OCT6200000000000000,     00165910
   OCT0100000000400616,  OCT1400000024252343,  OCT2151216331652562,     00165920
   OCT0100000000000775,  OCT0300000025452400,  OCT0100000000001000,     00165930
   OCT0600000026465144,  OCT2163000000000000,  OCT0100000000001007,     00165940
   OCT1100000047514623,  OCT2524645125000000,  OCT0100000000001033,     00165950
   OCT0600000051256631,  OCT4524000000000000,  OCT0100000000001043,     00165960
   OCT0300000051644500,  OCT0100000000001044,  OCT0100000034000000,     00165970
   OCT2100000000000705,  OCT0100000076000000,  OCT2100000000000717,     00165980
   OCT0100000033000000,  OCT2100000000000702,  OCT0100000052000000,     00165990
   OCT2100000000000706,  OCT0100163373000000,  OCT2100000000000715,     00166000
   OCT0100000077000000,  OCT2100000000000720,  OCT0100000012000000,     00166010
   OCT2100000000000721,  OCT0100000013000000,  OCT2100000000000722,     00166020
   OCT0100000015000000,  OCT2100000000000723,  OCT0100000032000000,     00166030
   OCT2100000000700731,  OCT0400000024316242,  OCT0100000000000334,     00166040
   OCT0400000062252542,  OCT0100000000001620,  OCT0600162021236364,     00166050
   OCT2143000000000000,  OCT0100000000000336,  OCT1000000062704422,     00166060
   OCT4643312300000000,  OCT0100000000000337,  OCT0200000044240000,     00166070
   OCT0100000000000340,  OCT1200000062255064,  OCT2545633121430000,     00166080
   OCT0100000000000341,  OCT0600000051214524,  OCT4644000000000000,     00166090
   OCT0100000000000342,  OCT0600000021232325,  OCT6262000000000000,     00166100
   OCT0100000000000343,  OCT1200000023464565,  OCT2551623146450000,     00166110
   OCT0100000000000344,  OCT1200000026314325,  OCT5443314431630000,     00166120
   OCT0100000000000345,  OCT1300000026314325,  OCT5443314431636200,     00166130
   OCT0100000000000345,  OCT0700000062252744,  OCT2545630000000000,     00166140
   OCT0100000000000346,  OCT1000000062252744,  OCT2545636200000000,     00166150
   OCT0100000000000346,  OCT0700161031456521,  OCT4331240000000000,     00166160
   OCT0100000000000347,  OCT0600000064454346,  OCT2342000000000000,     00166170
   OCT0100000000000350,  OCT1300000063252330,  OCT4531506425544700,     00166180
   OCT0100000000000351,  OCT0300000031544600,  OCT0100000000000412,     00166190
   OCT0500000023444754,  OCT0100000000000000,  OCT0100000000001072,     00166200
   OCT1700000023464447,  OCT6463216331464521,  OCT4354010000000000,     00166210
   OCT0100000000001072,  OCT2400000047307062,  OCT3123214354632147,     00166220
   OCT2554456444222551,  OCT0100000001100757,  OCT0500000044255127,     00166230
         OCT2500000000000000, OCT0100000000001640, OCT0300000024316500, 00166240
         OCT0100000000601472,                                 %TR-147   00166250
   OCT0;                                                                00166570
                   FILL INFO [0,*] WITH                                 00196800
   OCT0000000000000000,  OCT0000003010000003,  OCT0200014000000000,     00196900
   OCT2000000000000003,  OCT0000000000000000,  OCT0000003310000005,     00196902
   OCT0200024000000000,  OCT2000000000000005,  OCT0000000000000000,     00196904
   OCT0000004010000002,  OCT0200010000000000,  OCT2000000000000002,     00196906
OCT0000000000000000,OCT0000004210000005,OCT0200024000000000,COMMENT 4-6;00196908
   OCT2000000000000005,  OCT0000000000000000,  OCT0000004712400001,     00196910
   OCT0200004000000001,  OCT2000000000000001,  OCT0000000000000000,     00196912
   OCT0000000000000000,  OCT0000000000000000,  OCT0000004712400001,     00196914
   OCT0200004000000001,  OCT2000000000000001,  OCT0000000000000000,     00196916
   OCT0000000000000000,  OCT0100000000000000,  OCT0000005010000005,     00196918
   OCT0200024000000000,  OCT2000000000000005,  OCT0000000000000000,     00196920
   OCT0000005510000007,  OCT0200034000000000,  OCT2000000000000007,     00196922
   OCT0000000000000000,  OCT0000006412400001,  OCT0200004000000001,     00196924
   OCT2000000000000001,  OCT0000000000000000,  OCT0000000000000000,     00196926
   OCT0000000000000000,  OCT0000006510000005,  OCT0200024000000000,     00196928
OCT2000000000000005,OCT0000000000000000,OCT0000006006000010,COMMENT 6-6;00196930
OCT0000040000000000,OCT2000000000000010,OCT0000000000000000,COMMENT 6-6;00196940
OCT0000007006000010,OCT0000040000000000,OCT2000000000000010,COMMENT 6-6;00196950
OCT0000000000000000;                                        COMMENT 6-6;00196960
                          FILL MSG[*] WITH                              00197400
                              OCT0000000000000000,                      00197500
                             %CONTAINS ERROR MSG WORDS.                 00197501
         OCT0743316325512143, OCT0662704563216760,                      00197600
         OCT1347215125456330, OCT2562316260606060,                      00197700
         OCT0443252663606060, OCT0551312730636060,                      00197800
         OCT0426314325606060, OCT0525515146516060,                      00197900
         OCT0744316262314527, OCT0525676351216060,                      00198000
         OCT1221626231274544, OCT2545636060606060,                      00198100
         OCT1464453124254563, OCT3126312524606060,                      00198200
         OCT0462317125606060, OCT0564622127256060,                      00198300
         OCT1130312551215123, OCT3070606060606060,                      00198400
         OCT0345466360606060, OCT1030215124662151,                      00198500
         OCT2560606060606060, OCT0746472551214524,                      00198600
         OCT1046472551216346, OCT5160606060606060,                      00198700
         OCT1324252343215121, OCT6331464560606060,                      00198800
                   OCT1562472523312631, OCT2321633146456060,            00198900
         OCT1147514623252464, OCT5125606060606060,                      00199000
         OCT0762252363314645, OCT1062472543433145,                      00199100
         OCT2760606060606060, OCT0651252346512460,                      00199200
         OCT0543256525436060, OCT0747312363645125,                      00199300
         OCT0543212225436060, OCT0423464770606060,                      00199400
                    OCT0523432162626060,  OCT0731434325272143,          00199500
                    OCT1223302151212363,  OCT2551626060606060,          00199600
                    OCT0444466525606060,  OCT0521515121706060,          00199700
                    OCT0646232364516260,  OCT0565214364256060,          00199800
                    OCT0463704725606060,  OCT6060606060606060,          00199900
                    OCT0743312251215170,  OCT1026644523633146,          00200000
                         OCT4560606060606060,  OCT0747255126465144,     00200100
                    OCT0527466063466060,  OCT0731456325272551,          00200200
                    OCT1162642262235131,  OCT4763606060606060,          00200300
                    OCT1162632163254425,  OCT4563606060606060,          00200400
                    OCT1323464524316331,  OCT4645214360606060,          00200500
                    OCT1221513163304425,  OCT6331236060606060,          00200600
                    OCT1431454764635446,  OCT6463476463606060,          00200700
                    OCT1062255064254523,  OCT2560606060606060,          00200800
                    OCT0647255131462460,  OCT1051252425263145,          00200900
                    OCT2560606060606060,  OCT0563214725626060,          00201000
                    OCT0644254446517060,  OCT0665252363465160,          00201100
                    OCT1024316531623146,  OCT4560606060606060,          00201200
                    OCT0723464447314325,  OCT0527514664476060,          00201300
                   OCT1462704563216760,  OCT2551514651606060,           00201400
                    OCT1644316262314527,  OCT6047255131462460,          00201500
                   OCT1263516445232163, OCT3146456060606060,            00201600
                    OCT0445214425606060,  OCT1550642143312631,          00201700
                    OCT2321633146456060,  OCT0630704730254560,          00201800
                    OCT0724312460454663,  OCT1062254325236325,          00201900
                    OCT2460606060606060,  OCT0462465163606060,          00202000
                    OCT0747514627512144,  OCT0631242545633260,          00202100
                    OCT1047466262312243,  OCT2560606060606060,          00202200
                    OCT0662312745252460,  OCT0465255122606060,          00202300
              OCT1724644743312321, OCT6325604321222543,   COMMENT 3-25; 00202400
                   OCT4527606060606060,  OCT1124254725452431,           00202500
                   OCT4527606060606060,  OCT2445466025432544,           00202600
                    OCT2545633260316325,  OCT4462603145606060,          00202700
                   OCT1062634647605164,  OCT4560606060606060,           00202800
                   OCT0747516360606060, OCT0060606060606060,            00202900
                   OCT0546604260326060,  OCT0524644743326060,           00203000
                   OCT0000000063214343,  OCT7000000000000000,           00203100
                             %DICTIONARY ENTRY FOR "TALLY"              00203101
              OCT2240010000000000, OCT0014000000000000,COMMENT 3-19-64; 00203200
                   OCT0000000063462421,  OCT7062542421632500,           00203300
                             %DICTIONARY ENTRY "TODAY-DATE"             00203301
                   OCT2240000000000000, OCT0014000000000000,            00203400
                   OCT0000000000000000,  OCT0000000000000000,           00203500
                   OCT0000000000000000,  OCT0000000000000000,           00203600
                   OCT0000000000000000,  OCT0000000000000000,           00203700
                   OCT0000000000000000,  OCT0000000000000000,           00203800
                            OCT0000000000000000,  OCT0000000000000000,  00203900
                            OCT0000000000000000,  OCT0000000000000000,  00203910
                            OCT0000000000000000,  OCT0621636025452460,  00203920
                            OCT0431456346606060,  OCT0426514644606060,  00203930
         OCT0451252124606060,OCT0566513163256060,         COMMENT 9-30; 00203940
     OCT0544255127256060,  OCT0,                                        00203945
         OCT1722540505000060,    COMMENT MACHINE TYPE             9-30; 00203950
         OCT0100540103540607,                         %COMPILER DATE    00203960
         OCT0226246060606060 ,         OCT0244246060606060 ,            00203970
         OCT0262246060606060,                                  %CJC 053 00203980
         OCT1751252325316531,OCT4527602631254324,              %CJC 053 00203990
         OCT2023464562632145,OCT6360622523633146,              %CJC 053 00204000
         OCT4560606060606060;                                  %CJC 053 00204010
             END*;             %SPECIAL END TO RETURN DRUM STORAGE.     00208905
              BEGIN  LABEL L1, L4, L5, EN, IDNTDIV,                     00209000
                   ENVIRDIV,ENDINGBLOCK,DATAPROC;         COMMENT 9-25; 00209050
COMMENT TEMPORARY; SGMTLVL ~ 10;                                        00209512
                   BEGIN LABEL Q,R;                      COMMENT 1-65;  00209900
                   SEG1X ~ 8;                              COMMENT DF;  00210100
                   PROK~TRUE;                                           00210200
                   IF ERRCNT ! 0 THEN                           %TR-263 00210300
              BEGIN     DCOM ~ TRUE ;                                   00210400
                        DCOMM~ TRUE ;                                   00210500
                        FREE := TRUE;                                   00210550
                        ERRCNT ~ 0;                             %TR-263 00210600
              END;                                                      00210700
%                                                                  %7-6700210708
                   MOVCRDIN ~ 1;                                        00210850
                   CARDIN~TRUE ; PRINTIT ~ TRUE ;                       00211200
                   CY~0;  CFDE~0;                                       00211300
                   FIBX ~ 20;  % SEGNO DELETED             COMMENT DF;  00211400
                   IX ~ 58; CREG ~ 8; %                                 00211500
                   IF DCOM THEN                                         00211510
              BEGIN     PRINTIT ~ FALSE;                                00211540
                        ZOBOL   ~ TRUE ;                                00211570
              END;                                                      00211670
                   SEG[0,0] ~ 2; SEG1[0,0] ~ 1;            COMMENT DF;  00211700
                   DSKLOC ~ 1;   CNP[0,0]~3; SDX ~ 4;      COMMENT DF;  00211710
                   ALTCRD[0] ~LSEQ ~ "      0" ;                        00211800
                   INCR ~ "10000" ;              % SET INCR TO 100      00211900
                   READACARD;                             COMMENT 12-1; 00211920
                               % SIMILAR ROUTINE AT 00148200.       7-6700213300
                   AVAIL ~ 931;                               %TR-147   00214600
                   DIVN~9; T1~1; CFDE~0;                  COMMENT 8-27; 00214700
                   AVAIL~AVAIL+3;                                       00214704
                   JCV(LABDICT,J,K);                                    00214706
                   DICT[J,K]~0 & 18 [1:43:5] & 1 [6:47:1];              00214708
                   DICT[J,K+1]~0 & 57 [1:42:6] & 3 [7:45:3];            00214710
                                                          COMMENT 12-1; 00214850
                   FOUND ~ FALSE;                                       00215300
                   CHRTRAN (MSG[111],0,ISYMB,0,9);  LGTH~5;             00215400
                   SCLAS~4; DIVN~3; SCHAD;                              00215500
                   JCV (OCUR,J,K); CHRTRAN (MSG[113],0,DICT[J,K],0,16); 00215600
                    IILNK(OCUR,IX);  TALY~OCUR;  IX~IX+4;               00215700
                   JCV(OILNK(TALY),J,K);                                00215800
                   INFO[J,K+1].[13:6]~5;                                00215900
                   INFO[J,K+2].[3:15]~CLOC;                             00216000
                   CHRTRAN (MSG[115],0,ISYMB,0,15); LGTH~11; SCHAD;     00216100
                   ISYMB [0] ~ 0;                                       00216200
                   JCV (OCUR,J,K);                                      00216300
                   CHRTRAN (MSG[117],0,DICT[J,K],0,16);                 00216400
                   IILNK (OCUR,IX); IX~IX+4; ISYMB[0]~0;                00216500
                   DIVN ~ 9; %                                          00216600
                   K~(J~OILNK(OCUR)).ZY;  J~J.ZW; %                     00216700
                   INFO[J,K+1].[13:6]~5;                                00216800
                   INFO[J,K+2].[3:15]~CLOC;                             00216900
                   DRUMSIZE~0;                                          00217000
                   LGTH~0; SCLAS~0;                                     00217100
                   TWO99~CHUNK; % SET SEG PER ROW FOR OUTPTCOMMENT DF;  00217200
                             %SET UP INITIAL LABELS.                    00217201
                   HQX ~ 28;%                                           00217800
                   T10 ~ CNP [0,0];                                     00218900
                   CNPL ~ 31;%                                          00219000
           COMMENT SET UP POWER OF TEN TABLE ;                          00219600
                   POWR [0]~1;                                          00219700
                   FOR X ~ 0 STEP 1 UNTIL 15 DO                         00219800
                   POWR [X+1]~ POWR [X]|10;                             00219900
                   OPNAR(0,TARRLOC,15);                        %CJC 073 00220200
                   JCV (OILNK (TALY),J,K);                              00220300
                   INFO[J,K]~5 & CNPL [1:38:10] &                       00220400
                    4 [24:43:5];                                        00220500
                   INFO[J,K+1].[13:6]~5;                                00220600
                   K~(J~OILNK(OCUR)).ZY;  J~J.ZW; %                     00220700
                   INFO[J,K]~6 & CNPL [1:38:10] &                       00220800
                    4 [24:43:5] & 1 [20:47:1]                           00220900
                       & 2 [21:45:3];                                   00220950
                   INFO[J,K+1].[13:6]~6; CNQ~3; CNR~0;                  00221000
             END*;             %SPECIAL END TO RETURN DRUM STORAGE      00221100
L1:                 SCTRL;  IF KEY ! 101 THEN                           00221200
                             %SCAN,CHECK FOR "IDENTIFICATION".          00221201
              BEGIN IF KEY = 213 THEN%CHECK FOR "ENVIRONMENT".          00221300
              BEGIN EIND~9 & 73 [32:40:8]; ERP (EIND,0)      ;          00221400
                             %ERROR "MISSING DIVISION".                 00221401
                   COMPE~TRUE; %DID NOT COMPILE.                        00221500
                    GO TO L4   %L4 - 00251600.                          00221600
              END;  IF KEY ! 718 THEN GO TO L1;%CHECK FOR "END-OF-JOB". 00221700
                    COMPE~TRUE;%DID NOT COMPILE.                        00221800
                    GO TO EN   %EN - 73830000.                          00221900
              END;                                                      00222000
COMMENT     IDENTIFICATION SYNTAX CONTROL AND PROCESSOR     ;           00222100
IDNTDIV:                                                                00222200
              BEGIN BOOLEAN FL2;                                        00222300
                   INTEGER MMK;%                                        00222350
                   LABEL ER11;                                          00222400
                   T6 ~ TIME(5);  % PICK UP TODAYS DATE        %CJC 077 00223100
                   T6 ~ ICV1(T6,2,0,6);                        %CJC 077 00223200
                   T9 ~ T6 MOD 100;                            %CJC 077 00223300
                   DSPRTCTR ~ (T6 ~ T6 DIV 100) MOD 100;       %CJC 077 00223400
                   T7 ~ T6 DIV 100;                            %CJC 077 00223500
                   DIVN ~ 9; %                                          00225500
                   BSZF~TRUE;                                           00225600
                   SCTRL; IF KEY ! 280 THEN%SCAN,CHECK FOR "DIVISION".  00225700
              BEGIN ERP (77,0)      ;   GO TO ER11                      00225800
                             %ERROR "SYNTAX ERROR".                     00225801
              END; IF NCLAS = 3 THEN%IS NEXT ITEM A LABEL.              00225900
              BEGIN ERP (79,0)      ;  GO TO ER11                       00226000
                             %ERROR "MISSING PERIOD".                   00226001
              END;  SCTRL;  IF SCLAS ! 7 THEN%SCAN, CHECK FOR ".".      00226100
                   ERP (79,0)      ;%ERROR "MISSING PERIOD".            00226200
ER11:                                                                   00226690
                   SCTRL;  IF KEY = 715 THEN                            00226700
                             %SCAN, CHECK FOR "PROGRAM-ID".             00226701
              BEGIN IF FL2 THEN%CHECK PROGRAM-ID FLAG.                  00226800
              BEGIN EIND~ 40 & 91 [32:40:8] & 92 [24:40:8];             00226900
                             %ERROR "ILLEGAL PROGRAM IDENT".            00226901
                   ERP (EIND,0)      ;  GO TO ER11                      00227000
              END; SCTRL;  IF SCLAS ! 7 THEN%SCAN, CHECK FOR ".".       00227100
                   ERP (79,0);                   % ERR MISSING PERIOD   00227200
                   FL2 ~ TRUE;  GO TO ER11%SET PROGRAM-ID FLAG.         00228000
              END;                                                      00228100
                   IF NOT FL2 THEN                                      00228200
              BEGIN  IF BSZF THEN                                       00228300
              BEGIN EIND~9 & 91 [32:40:8] & 92 [24:40:8];               00228400
                             %ERROR "MISSING PROGRAM IDENT".            00228401
                   BSZF~FALSE;                                          00228500
                   ERP (EIND,0)                                         00228600
              END;                                                      00228700
              END;  IF KEY = 213 AND SCLAS = 3 THEN                     00228800
                             %CHECK FOR LABEL "ENVIRONMENT".            00228801
              BEGIN IF NOT FL2 THEN BEGIN COMPE ~ TRUE END      %TR-263 00228900
              END ELSE                                                  00229000
              BEGIN  IF KEY ! 345 THEN GO TO ER11;%CHECK FOR "DATA".    00229100
                   IF SCLAS ! 3 THEN GO TO ER11;%CHECK FOR LABEL.       00229200
                   COMPE~TRUE; %DID NOT COMPILE.                        00229300
              END; %                                                    00229400
                   OPNAR(0,TENX,17);                           %CJC 073 00229700
                   IMIL (LITC,1);%    POWER OF TEN                      00230100
                   IMIL (LITC,0);%     FIXED                            00230200
                   IMIL (DESC,TENX);%   PROCEDURE                       00230300
                   IMIL (OPR ,STD);%                                    00230400
                   IMIL (OPDC,STDLOC);%                                 00230500
                   IMIL (OPDC,TENX);%                                   00230600
                   IMIL (LITC,10);%                                     00230700
                   IMIL (OPR ,MUL);%                                    00230800
                   IMIL (OPDC,STDLOC);%                                 00230900
                   IMIL (LITC,1);%                                      00231000
                   IMIL (OPR ,ADD);%                                    00231100
                   IMIL (LITC,STDLOC);%                                 00231200
                   IMIL (OPR ,ISN);%                                    00231300
                   IMIL (DESC,TENX);%                                   00231400
                   IMIL (OPR ,STD);%                                    00231500
                   IMIL (OPDC,STDLOC);%                                 00231600
                   IMIL (LITC,15);%                                     00231700
                   IMIL (OPR ,GRT);%                                    00231800
                   IMIL(LITC,16);%                                      00231900
                   IMIL (OPR ,BBC);%                                    00232000
COMMENT SET UP FIXED PROCEDURES  ;%SET UP AND DUMP FIXED COBOL          00232900
                   T10 ~ 2;%(STARTING IN SEGMENT #2)                    00232920
                   MAKELABEL(1,ADNSIGN,(CHMX DIV 8)-1,0); COMMENT 7-7;  00232960
          COMMENT GET DATA-NAME SIGN  ;%PROCEDURES.                     00233000
                   COMMENT STACK IS  LITC 0, MKS, WORD-LOC, CHAR;       00233100
                             %SEE NOTE AT 00249900.                     00233101
                   CHMX ~ CHMX + 16;%FIXED PROCEDURES INCLUDE:          00233200
          COMMENT STORE DATA-NAME SIGN  ;                               00233300
                   MAKELABEL(1,BDNSIGN,(CHMX DIV 8)-1,0);%              00233600
                   COMMENT STACK IS SIGN, MKS, WORD-LOC, CHAR  ;        00233800
                   CHMX ~ CHMX + 16;                                    00233900
          COMMENT WORD TRANSFER PROCEDURE  ;                            00234100
                   MAKELABEL(1,OWORDTRAN,(CHMX DIV 8)-1,0);%            00234400
         COMMENT STACK IS MKS, SOURCE, DEST, Q-LGTH, R-LGTH, RCW;       00234600
                   CHMX ~ CHMX + 24;                      COMMENT 9-01; 00234700
          COMMENT CLEAR CHARACTER POSITIONS TO ZERO  ;                  00234900
                   MAKELABEL (1,OCLRCHRZ,(CHMX DIV 8)-1,0);             00235200
         COMMENT STACK IS MKS,DEST,DEST-CHR,Q1-LGTH,Q2-LGTH,R-LGTH,RCW; 00235400
                   CHMX ~ CHMX + 168;                     COMMENT 9-01; 00235500
          COMMENT TRANSFER CHARACTERS  ;                                00235600
                   MAKELABEL(1,OCHRTRAN,(CHMX DIV 8)-1,0);%             00235900
         COMMENT STACK IS MKS,SOURCE,S-CHR,DEST,D-CHR,Q1,Q2,R-LGTH,RCW; 00236100
                   CHMX ~ CHMX + 40;                      COMMENT 9-01; 00236200
          COMMENT CLEAR CHARACTERS TO BLANKS  ;                         00236500
                   T10 ~ CHM [0,0];                                     00236700
                   MAKELABEL(1,OCLRCHRB,(CHMX DIV 8)-1,0);%             00236800
         COMMENT STACK IS MKS,DEST,DEST-CHR,Q1-LGTH,Q2-LGTH,R-LGTH,RCW; 00237100
                   CHMX ~ CHMX + 168;                     COMMENT 9-01; 00237200
           COMMENT CLEAR WORDS TO BLANKS ;                              00237300
                   MAKELABEL(1,OCLRWDSB,(CHMX DIV 8)-1,0);%             00237600
         COMMENT STACK IS MKS, DEST, Q-LGTH, R-LGTH, RCW; COMMENT 9-01; 00237900
                   CHMX ~ CHMX + 32;                      COMMENT 9-01; 00238000
         COMMENT JUSTIFIED IF JSA = 0 AND JSB ! 0;                      00238002
                   MAKELABEL(1,JUST1,(CHMX DIV 8)-1,0);%                00238006
                   CHMX ~ CHMX + 104;                                   00238008
COMMENT JUSTIFIED IF JSA ! 0 AND JSB = 0;                               00238010
                   MAKELABEL(1,JUST2,(CHMX DIV 8)-1,0);%                00238014
                   CHMX ~ CHMX +  56;                                   00238016
         COMMENT JUSTIFIED IF JSA ! 0 AND JSB ! 0;                      00238018
                   MAKELABEL(1,JUST3,(CHMX DIV 8)-1,0);%                00238022
                   CHMX ~ CHMX +  56;                                   00238024
         COMMENT CLEAR WORDS TO ZERO;                     COMMENT 9-01; 00238030
                   MAKELABEL(1,OCLRWDSZ,(CHMX DIV 8)-1,0);%OCLRWDSZ.    00238050
                   SEGDICT[T10.[36:5],T10.[41:7]].[4:1]~1;     %CJC 065 00238055
                   CHMX ~ CHMX + 32;                      COMMENT 9-01; 00238060
FILL CHM[0,*] WITH OCT0,                                   COMMENT DF;  00238200
                             %REFER TO FIXED PROCEDURES LISTING         00238201
     OCT0253014300310406, OCT0716017700000047, OCT0204014300160422,     00238300
                             % FOR SYMBOLIC CONTENTS OF FILL            00238301
         COMMENT NEW MOVE PATCHES FROM HERE DOWN TO 00238800      9-01; 00238350
     OCT0731017700000047,      % STATEMENTS BETWEEN HERE AND            00238400
     OCT0453030402430252, OCT7705005101430005, OCT0000004700470047,     00238420
     OCT0504044300160343, OCT4452775277740000, OCT0000000000000000,     00238440
     OCT0000000000000000, OCT0000000000000000, OCT0000000000000000,     00238460
     OCT0000000000000000, OCT0000000000000000, OCT0000000000000000,     00238500
                             % SEQ # 00250100.                          00238501
     OCT0000000000000051, OCT0051024342527774, OCT0000000000000000,     00238520
     OCT0000000000000000, OCT0000000000000000, OCT0000000000000000,     00238540
     OCT0000000000000000, OCT0000000000000000, OCT0000000000000000,     00238560
     OCT0000000000000000, OCT0051014303520174, OCT0000005100000047,     00238580
      OCT0753064300310504, OCT0443001603430452, OCT7752777700510051,    00238600
      OCT0243025277770051, OCT0143007700000047,      %OCHARTRAN         00238620
     OCT0504044300160343, OCT4452775277746060, OCT6060606060606060,     00238640
     OCT6060606060606060, OCT6060606060606060, OCT6060606060606060,     00238660
     OCT6060606060606060, OCT6060606060606060, OCT6060606060606060,     00238680
     OCT6060606060600051, OCT0051024342527774, OCT6060606060606060,     00238700
     OCT6060606060606060, OCT6060606060606060, OCT6060606060606060,     00238720
     OCT6060606060606060, OCT6060606060606060, OCT6060606060606060,     00238740
     OCT6060606060606060, OCT0051014303520174, OCT6060005100000047,     00238760
     OCT0353030410746060, OCT6060606060600243, OCT0252770500510143,     00238780
     OCT0005000000470047,                                 COMMENT 9-01; 00238800
     OCT0304074300160714, OCT0443005201740060, OCT0051015306430031,     00238804
                             %S E E  I M P O R T A N T  N O T E         00238805
     OCT0615004202430052, OCT6024013102450140, OCT0147004200510541,     00238806
                             % A T  S E Q #  0 0 2 4 9 9 0 0  .         00238807
     OCT0704044300160116, OCT0253105205430030, OCT0051021506530243,     00238808
         OCT0031013102431242, OCT0443005202300217, OCT0177774002410243, 00238810
     OCT0142005100000047,                                               00238812
     OCT0304074300160714, OCT0443005201740060, OCT0051015306430031,     00238814
     OCT0204024300526024, OCT0344101701310051, OCT0214070402430077,     00238816
     OCT0000004700470047,                                               00238818
     OCT0304074300160714, OCT0443005201740060, OCT0051015302430031,     00238820
     OCT0643003101300704, OCT0443001601170243, OCT0052017702300217,     00238822
     OCT0051000000470047,                                               00238824
     OCT0353030410740000, OCT0000000000000243, OCT0252770500510143,     00238840
     OCT0005000000470047;                                               00238860
                   CHM[0,0] ~ T10;                                      00238900
                   SEGDUMP (CHM,CHMX);                                  00239000
COMMENT DECLARE AREA FOR PROGRAM FIB AND EMIT CLEAR ;                   00240400
                   OPNAR(1,PRFIB,20);                          %CJC 073 00240600
                   T10 ~ CHM[0,0];%                                     00240700
                   MAKELABEL(1,ALFAL,((CHMX+7)DIV 8)-1,0); COMMENT 6-1; 00240710
                   CHMX~CHMX+56;                           COMMENT 6-1; 00240720
                   MAKELABEL(1,NUML,((CHMX+7)DIV 8)-1,0);  COMMENT 6-1; 00240740
                   SEGDICT[T10.[36:5],T10.[41:7]].[4:1]~1;     %CJC 065 00240745
                   CHMX~CHMX+40;                           COMMENT 6-1; 00240750
    FILL CHM[0,*] WITH OCT0000000000000000,                COMMENT 6-1; 00240770
OCT0353044300310243,OCT1252775260250445,OCT2136214400351744,COMMENT 6-1;00240780
OCT0131005100510143,OCT1052602504452136,OCT0644003504440131,COMMENT 6-1;00240790
OCT0051014206410000,                                       COMMENT 6-1; 00240800
OCT0353044300310243,OCT0652775271271344,OCT0131005100510143,COMMENT 6-1;00240810
OCT0452712704440131,OCT0051014206410000;                   COMMENT 6-1; 00240820
                   CHM[0,0]~T10;                           COMMENT 6-1; 00240830
                   SEGDUMP(CHM,CHMX);                      COMMENT 6-1; 00240840
COMMENT CHARACTER MODE CONVERT 1 THRU 8 CHRS  ;                         00241800
                   T10 ~ CHM [0,0];                                     00241900
                   MAKELABEL (1,IC1L,(CHMX DIV 8)-1,0);                 00242000
                   CHMX ~ CHMX + 48;                                    00242200
          COMMENT IN PUT CONVERT 8 THRU 11 ;                            00242300
                   MAKELABEL (1,IC8L,(CHMX DIV 8)-1,0);                 00242500
                    CHMX  ~ CHMX + 80;                                  00242700
            COMMENT OUTPUT CONVERT 1 THRU 8;                            00242800
                   MAKELABEL (1,OC1L,(CHMX DIV 8)-1,0);                 00243200
                   CHMX ~ CHMX + 48;                                    00243400
          COMMENT OUTPUT CONVERT 8 THRU 11  ;                           00243500
                   MAKELABEL (1,OC8L,(CHMX DIV 8)-1,0);                 00243900
                    CHMX  ~ CHMX + 48;                                  00244100
COMMENT INPUT CONVERT DBL LGTH;                                         00244102
COMMENT STACK IS RCW,SIZE- 11,RX,PX,MKS,0,0,0;                          00244104
                   MAKELABEL(1,ICDL,(CHMX DIV 8)-1,0);                  00244108
                    CHMX ~ CHMX + 72;                                   00244110
COMMENT OUTPUT CONVERT DBL LGTH;                                        00244120
COMMENT STACK IS RCW,SIZE-10,SIGN,RX,PX,MKS,11-18,9-10,1-8;             00244122
                   MAKELABEL(1,OCDL,(CHMX DIV 8)-1,0);                  00244126
                   SEGDICT[T10.[36:5],T10.[41:7]].[4:1]~1;     %CJC 065 00244127
                    CHMX ~ CHMX + 48;                                   00244128
 FILL CHM [0,*] WITH      OCT0000000000000000, OCT0453034300310606,     00245100
     OCT0143006702430047, OCT0000014300300037, OCT0145000001030137,     00245200
     OCT0145000010170102, OCT0164000000470047, OCT0453034300310606,     00245300
     OCT1074000000057536, OCT0400070601430067, OCT1006106702430247,     00245400
     OCT0047024701300347, OCT0143003010300037, OCT0145000001030137,     00245500
    OCT0145000010060102, OCT0164070601020164,             COMMENT 3-27; 00245600
    OCT0000004700470047,                                  COMMENT 3-27; 00245650
                          OCT0404034300160622, OCT0143006602430047,     00245700
     OCT0000062201030037, OCT0145000001170165, OCT0165014300170164,     00245800
     OCT0000004700470047,                                               00245900
     OCT0404034300160622, OCT0143006607221066, OCT1043004700000243,     00245950
     OCT0247004702470117, OCT0347014300171017, OCT0164000000470047,     00246000
     OCT0453034300311006, OCT0143006706060367, OCT0706106702430247,     00246100
     OCT0047024701300347, OCT0143003013300037, OCT0145000001030137,     00246120
     OCT0145000010060102, OCT0164070601020164, OCT0606010201640000,     00246140
OCT0404034300160622, OCT0143006607221066, OCT1022026611430047, %TR 352  00246160
     OCT0000024302470047, OCT0247011703470143, OCT0017121701640000;     00246180
                   CHM[0,0] ~ T10;                                      00246200
                   SEGDUMP(CHM,CHMX); %                                 00246230
COMMENT INPUT CONVERT PROCEDURE FOR OBJECT CODE;          COMMENT 6- 1; 00246270
COMMENT STACK IS  RCW, LGTH, SIGN, CHAR, WORD, MKS;       COMMENT 6- 1; 00246272
                   T10 ~ SEG[0,0];                        COMMENT 6- 1; 00246274
                   MAKELABEL(0,ICV1L,0,0);                COMMENT 6- 1; 00246276
                   SEGDICT[T10.[36:5],T10.[41:7]].[4:1]~1;     %CJC 065 00246277
                   MMK ~CREG; CREG~CREG + 112;            COMMENT 6- 1; 00246278
COMMENT OUTPUT CONVERT WORD MODE PROCEDURE ;              COMMENT 6- 1; 00246280
COMMENT STACK IS  RCW,LGTH, SIGN,CHAR,WORD,MKS,VALUE;     COMMENT 6- 1; 00246282
                   T10~SEG[0,0];                          COMMENT 6- 1; 00246284
                   MAKELABEL(0,OCV1L,(CREG DIV 8)-1,0);   COMMENT 6- 1; 00246286
                   SEGDICT[T10.[36:5],T10.[41:7]].[4:1]~1;     %CJC 065 00246287
                   CREG ~ CREG + 256;                     COMMENT 6- 1; 00246288
                   T10 ~ SEG[0,0];                                      00246300
FILL SEG[0,*] WITH        OCT0000000000000000, OCT0000700600404125,     00246400
     OCT0034023104417023, OCT7016701270060005, OCT0235000000000441,     00246500
     OCT7023701670127006, OCT0060422500340231, OCT7006004003010005,     00246600
     OCT0401010102357006, OCT0054030100050040, OCT0005040101017030,     00246700
     OCT0421000010250000, OCT0054000504050000, OCT7032010540067030,     00246800
     OCT0421102500510235,                                   COMMENT 8-7;00246850
                          OCT7006004041250050, OCT0231703270304221,     00246900
     OCT0441702370167012, OCT7006000504350000, OCT7032015575610165,     00247000
     OCT7006005441250124, OCT0231703244312025, OCT0040000570017030,     00247100
     OCT4221102500400005, OCT3001044170237016, OCT7012700600400301,     00247200
OCT0005043570367032, OCT4431703670324431, OCT7006000041250170, %TR 352  00247300
OCT0231000000400005,OCT1005000430017030,OCT0421005100007032,COMMENT 8-7;00247400
OCT0000004000050405,OCT0305703441210051,OCT7036703204417023,COMMENT 8-7;00247500
     OCT7016701270060040, OCT0301000504350000, OCT0050000510050004,     00247600
OCT3001703004210051,OCT0000703200000050,OCT0005040503057034,COMMENT 8-7;00247700
OCT4121005170362025, OCT2025062030010620, OCT0401030110250620, %TR 352  00247800
OCT3001703204417023, OCT7016701270060050, OCT0301000504350055; %TR 352  00247900
                   SEG[0,0] ~ T10;                                      00248200
                   T10 ~ CREG; CREG ~ MMK; MMK ~ T10;                   00248300
                             %FIX-UPS FOR VARIABLE ADDRESS IN THE       00248301
                    CREG~CREG +22;  EMIL(OPDC,   IC1L);                 00248400
                             % PRECEDING FIXED PROCEDURES.              00248401
                    CREG~CREG +30;  EMIL(OPDC,   IC8L);                 00248500
                    CREG~CREG +12;  EMIL(OPDC,   ICDL);                 00248600
                    CREG~CREG + 2;  EMIL(OPDC,   TENX);                 00248700
                    CREG~CREG +16;  EMIL(OPDC,   TENX);                 00248800
                    CREG~CREG +46;  EMIL(OPDC,   OC1L);                 00248900
                    CREG~CREG +30;  EMIL(OPDC,   TENX);                 00249000
                    CREG~CREG +10;  EMIL(OPDC,   TENX);                 00249100
                    CREG~CREG +16;  EMIL(OPDC,   OC8L);                 00249200
                    CREG~CREG +28;  EMIL(OPDC,   TENX);                 00249300
                    CREG~CREG +20;  EMIL(OPDC,   TENX);                 00249400
                    CREG~CREG +28;  EMIL(OPDC,   OC8L);                 00249500
                    CREG~CREG + 6;  EMIL(OPDC,   TENX);                 00249600
                    CREG~CREG +20;  EMIL(OPDC,   TENX);                 00249620
                   CREG~CREG+48; EMIL(OPDC,OCDL);              %TR 352  00249680
                   CREG ~ MMK;                                          00249700
COMMENT **** C A U T I O N ******************************************** 00249800
       THE ADDITION OR DELETION OF SYLLABLES IN THE PRECEDING FILLS     00249900
                             % I M P O R T A N T                        00249901
         MAY AFFECT INDEXING IN STATEMENTS BETWEEN SEQUENCE NUMBERS     00250000
                             %  ~   ~   ~     ~      ~                  00250001
          00217400 AND 00249700                                         00250100
 *********************************************************************; 00250200
                   SEGDUMP (SEG,CREG);                                  00250500
                   PRTCTR ~ 58;%BEGIN DYNAMIC PRT ASSIGNMTNT @ OCTAL 72 00250800
                   IMIL(LITC,8);                          COMMENT 12-1; 00250900
                   IMIL(OPDC,TENX);                       COMMENT 12-1; 00251000
                   IMIL(LITC,TENTOTHE8);                  COMMENT 12-1; 00251010
                   IMIL(OPR,STD);                         COMMENT 12-1; 00251020
                   IMIL(LITC,11);                         COMMENT 12-1; 00251030
                   IMIL(OPDC,TENX);                       COMMENT 12-1; 00251040
                   IMIL(LITC,TENTOTHE11);                 COMMENT 12-1; 00251050
                   IMIL(OPR,STD);                         COMMENT 12-1; 00251060
                   T10 ~ SEG [0,0];                                     00251200
                   MAKELABEL(0,INITIL,0,0); %                           00251210
             END*;                                        COMMENT 3-23; 00251650
       L4:          IF KEY ! 213 THEN%IF NOT "ENVIRONMENT" THEN         00251690
              BEGIN IF KEY = 345 THEN%CHECK FOR "DATA".                 00251700
              BEGIN EIND~9 & 73 [32:40:8];%ERROR "MISSING DIVISION".    00251800
                   COMPE~TRUE;                            COMMENT 10-3; 00251850
                   ERP (EIND,0)      ; GO TO L5%L5 - 00280600.          00251900
              END; IF KEY ! 718 THEN%CHECK FOR "END-OF-JOB".            00252000
              BEGIN ERP(13 & 83[32:40:8],0);%ERROR "UNIDENTIFIED NAME". 00252100
                   COMPE~TRUE;                            COMMENT 10-3; 00252150
                    SCTRL;GO TO L4;                                     00252200
              END  ELSE GO TO ENDINGBLOCK;%ENDINGBLOCK - 72635000.      00252300
              END;                                                      00252400
                   DATCRD ~TRUE;       % DONT LOOK FOR DATE CARDS       00252450
COMMENT  ENVIRONMENT DIVISION SYNTAX AND PROCESSING   ;                 00252500
ENVIRDIV:     BEGIN            %START OF ENVIRONMENT DIVISION.......    00252600
                   INTEGER OPTNL, M,UT,ARS,REON,TEM;                    00252700
                             %OPTNL="SELECT OPTION" FLAG. UT=NO.OF      00252701
                             % UNITS. ARS="ALTERNATE AREAS" CTR.        00252702
                             %TEM=NO.OF CERTAIN HARDWARE TYPE.          00252703
         REAL T8;COMMENT :TO UNSCREW RERUN ON TAPE EVERY EOR;           00252750
              BOOLEAN FL2, FL3;                                         00252800
              BOOLEAN FL20;                               COMMENT DSRT; 00252810
                   LABEL UTSET, UTSET2;                   COMMENT DSRT; 00252820
                   LABEL ER2,ER21,CC3,BB7,CC,BB6,ER3,BB1,BB2,BB3,BB4,   00252900
                   ENN,IOC2A,ER212,                       COMMENT 7-15; 00253000
                   BB5,CC1,CC2,ER31,SELEC,SEL9,SEL2,SEL1,IOC,IOC1,      00253100
                   IOC2,IOC2B,RE,IOC5,IOC2C,BBB,BBB1,BBB2,BBB2B,BBB3;   00253200
COMMENT *************************** HARDWARE *************************; 00253250
         COMMENT  GETS HARDWARE KEY TYPE FROM SYMBOL ;                  00253300
 INTEGER PROCEDURE HARDWARE;                                            00253400
         BEGIN     LABEL     RETREAT,HX;                                00253500
                   IF KEY = 398 THEN BEGIN HARDWARE~ 1; GO TO HX END;   00253900
                             %TAPE OR TAPES.                            00253901
                   IF KEY = 288 THEN BEGIN HARDWARE~ 4; GO TO HX END;   00254100
                             %PRINTER OR PRINTERS.                      00254101
                   IF KEY = 279 THEN BEGIN HARDWARE~ 2; GO TO HX END;   00254400
                             %READER OR READERS OR CARD-READER OR       00254401
                             % CARD READERS.                            00254402
                   IF KEY = 278 THEN BEGIN HARDWARE~ 3; GO TO HX END;   00254600
                             %PUNCH OR CARD-PUNCH.                      00254601
                   IF KEY = 717 THEN BEGIN HARDWARE~10; GO TO HX END;   00255200
                             %SORT-TAPES.                               00255201
                   IF KEY=919 THEN                        COMMENT DSRT; 00255210
              BEGIN SCTRL;                                COMMENT DSRT; 00255220
                   IF KEY=220 THEN                        COMMENT DSRT; 00255225
              BEGIN HARDWARE~10; DSFLAG~TRUE; GO TO HX;   COMMENT DSRT; 00255230
              END;                                        COMMENT DSRT; 00255235
              END;                                        COMMENT DSRT; 00255240
                   IF KEY= 928 THEN                                     00255250
              BEGIN HARDWARE~10; DSFLAG~ MERGEFL~ TRUE; GO TO HX;       00255260
              END;                                                      00255270
                   IF KEY=772 THEN%PAPER TAPE READER.                   00255400
              BEGIN HARDWARE ~ 11; GO TO HX;              COMMENT 4-27; 00255402
              END;                                        COMMENT 4-27; 00255404
                   IF KEY=773 THEN%PAPER TAPE PUNCH.                    00255600
              BEGIN HARDWARE ~ 12; GO TO HX;              COMMENT 4-27; 00255602
              END;                                        COMMENT 4-27; 00255604
                   IF KEY=220 THEN COMMENT "DISK";         COMMENT DF;  00255700
              BEGIN HARDWARE~13;GO TO HX;                  COMMENT DF;  00255710
              END;                                         COMMENT DF;  00255720
                   IF KEY=345 THEN COMMENT "DATA";          COMMENT DF; 00255740
                        IF DCOM THEN                                %TSS00255742
              BEGIN     FILL LBUF[*] WITH "H-DATA- ","IMPROPER",    %TSS00255744
                                          " FOR TSS","~       ";    %TSS00255746
RETREAT:                COMPE ~ TRUE;                               %TSS00255748
                        WORDTRAN (LBUF[0],MSG[124],4);              %TSS00255750
                        ERP (124,0);                                %TSS00255752
                        HARDWARE ~ 0;                               %TSS00255756
                        GO TO HX;                                   %TSS00255758
              END  ELSE                                             %TSS00255759
              BEGIN HARDWARE~14; GO TO HX;                  COMMENT DF; 00255760
              END; IF ISYMB[0].[24:24]="REMO" AND LGTH=6 THEN      %TSS 00255780
                   BEGIN HARDWARE~ 15; GO TO HX; END;              %TSS 00255790
                   IF KEY = 640 AND NCLAS = 6 THEN  %CHANNEL   %CJC 040 00255800
              BEGIN SCTRL;                                     %CJC 040 00255900
                   HARDWARE ~ ICV1(ISYMB[0],4,0,LGTH) + 10;    %CJC 040 00256000
                   GO TO HX;                                   %CJC 040 00256100
              END; COMPE ~ TRUE;  HARDWARE ~ 0;                %CJC 040 00256200
                   ERP(13 & 20[32:40:8],0);                    %CJC 040 00256300
 HX:          END;                                                      00256400
                   UT~0;   ARS~0;                                       00256500
                   FIBX~20;    %POINT TO FIRST FILE IN FIB.             00256600
                   FL2~ FALSE; FL3~ FALSE;FL4~ FALSE; FL5~FALSE;        00256700
                   DSFLAG~FALSE; FL20~FALSE;              COMMENT DSRT; 00256750
                   FL6~ FALSE; FL7~ FALSE; FL8~ FALSE; FL9~ FALSE;      00256800
                   SCTRL; IF KEY ! 280 THEN GO TO ER2;                  00256900
                             %SCAN FOR "DIVISION".                      00256901
       BB1:        IF FL2 THEN ERP (97,0)       ELSE                    00257000
                             %FL2 TRUE,ERROE "DUPLICATE LABEL".         00257001
                   FL2~ TRUE;  SCTRL;%DIVISION FLAG TRUE , SCAN.        00257100
                   IF SCLAS ! 7 THEN GO TO ER212;%CHECK FOR "."         00257200
                   SCTRL; IF KEY ! 201 THEN GO TO ER2;                  00257400
                             %SCAN FOR " CONFIGURATION".                00257401
       BB2:        IF FL3 THEN ERP (97,0)       ELSE                    00257500
                             %FL3 TRUE, ERROR "DUPLICATE LABEL".        00257501
                   FL3~ TRUE;  SCTRL;%CONFIG FLAG TRUE, TRUE.           00257600
                   IF KEY ! 251 THEN GO TO ER2;%CHECK FOR "SECTION".    00257700
       BB3:        IF FL4 THEN ERP (97,0)       ELSE                    00257800
                             %FL4 TRUE, ERROR "DUPLICATE LABEL".        00257801
                    FL4~ TRUE; SCTRL;%SECTION FLAG TRUE, SCAN.          00257900
                   IF SCLAS ! 7 THEN GO TO ER212;%CHECK FOR "."         00258000
                   SCTRL;  IF KEY ! 214 THEN%ERROR "MISSING PERIOD".    00258100
              BEGIN IF KEY ! 204 THEN GO TO ER2; FL4~ FALSE;            00258300
                             %IF "FILE-CONTROL" RESET FL4.              00258301
                   FL5~ FALSE; GO TO CC3%RESET FL5. CC3 AT 00265500.    00258400
              END;                                                      00258500
       BB4:        IF FL5 THEN ERP (97,0)       ELSE                    00258600
                             %FL5 TRUE, ERROR "DUPLICATE LABEL".        00258601
                    FL5~ TRUE; SCTRL ;%FILE-CONTROL FLAG TRUE, SCAN.    00258700
                   IF SCLAS ! 7  THEN GO TO ER212;%CHECK FOR "."        00258800
                   SCTRL;                                      %CJC 088 00259000
                             %SCAN FOR "B-5500" OR "B-5000".            00259001
                   IF KEY = 253 THEN   % IF "COPY"             %CJC 088 00259100
              BEGIN FL5 ~ FIND;                                %CJC 088 00259110
                   DELTALC~0;                             COMMENT 10-9; 00259120
                   SCTRL;SCTRL;                           COMMENT 10-9; 00259130
              END;  WHILE SCLAS ! 7 DO SCTRL; SCTRL;                    00259200
                             %SCAN UNTIL ".", SCAN.                     00259201
                   IF KEY = 216 THEN   % OBJECT-COMPUTER       %CJC 088 00259300
                             %CHECK FOR "OBJECT-COMPUTER".              00259301
BB5:          BEGIN IF FL6 THEN ERP(97,0) ELSE FL6 ~ TRUE;     %CJC 088 00259400
                             %FL6 TRUE, ERROR "DUPLICATE LABEL".        00259401
                   SCTRL;                                      %CJC 088 00259500
                             %OBJECT- COMPUTER FLAG SET TRUE, SCAN      00259501
                   IF SCLAS ! 7 THEN GO TO ER212;              %CJC 088 00259600
                   SCTRL;                                      %CJC 088 00259700
                   IF KEY = 253 THEN   % IF "COPY"             %CJC 088 00259800
                             %SCAN FOR "B-5500" OR "B-5000".            00259801
              BEGIN FL6 ~ FIND;                                %CJC 088 00259900
                   DELTALC ~ 0;                                %CJC 088 00259910
                   SCTRL;              SCTRL;                  %CJC 088 00259920
                   WHILE SCLAS ! 7 DO SCTRL;                   %CJC 088 00259930
              END  ELSE SCTRL;  % SCAN PAST B-5500 OR B-5700   %CJC 088 00260000
              END;                                                      00260100
       BB6:         IF SCLAS = 7 THEN%CHECK FOR "."                     00260200
              BEGIN SCTRL; IF KEY = 203 THEN GO TO BB7;                 00260300
                             %SCAN, IF "SPECIAL-NAMES"                  00260301
                   IF KEY = 266 THEN GO TO CC ELSE GO TO ER2            00260400
                             %CHECK FOR "INPUT-OUTPUT".                 00260401
              END;  IF KEY = 215 THEN%CHECK FOR "MEMORY".               00260500
              BEGIN IF FL7 THEN ERP (77,0)       ELSE                   00260600
                             %FL7 TRUE, ERROR "SYNTAX ERROR".           00260601
                   FL7~TRUE; SCTRL;                       COMMENT DSRT; 00260700
                             %MEMORY FLG SET TRUE, SCAN.                00260701
                    IF KEY= 397 THEN SCTRL;%CHECK FOR "SIZE", SCAN.     00260800
                   IF SCLAS = 6 THEN HPAR [5]~%CHECK FOR INTEGER.       00260900
                   ICV1 (ISYMB [0],4,0,LGTH)%STORE CONVERTED VALUE.     00261000
                    ELSE                                                00261100
              BEGIN EIND ~ 39 & 8 [32:40:8]; ERP (EIND,0)      ;        00261200
                             %ERROR"CLASS ERROR".                       00261201
              END; SCTRL; IF KEY = 257 THEN%SCAN, CHECK FOR "WORDS".    00261300
                                   SCTRL;% SCAN PAST WORDS              00261400
                             %SCAN, LOOP TO BB6.                        00261401
                   GO TO BB6;                                  %CJC 090 00261410
              END; IF KEY = 220 THEN   % "DISK" SIZE           %CJC 090 00261420
              BEGIN IF FL20 THEN ERP(77,0) ELSE FL20 ~ TRUE;   %CJC 090 00261430
                   SCTRL;                                      %CJC 090 00261440
                   IF KEY = 397 THEN SCTRL;                    %CJC 090 00261450
                   IF LCOMP(257) THEN  % "WORDS"               %CJC 090 00261460
              BEGIN IF SCLAS = 6 THEN  % IF INTEGER WORDS      %CJC 090 00261470
                   HPAR[11] ~ ICV1(ISYMB[0],4,0,LGTH) ELSE     %CJC 090 00261480
              BEGIN ERP(54 & 9[32:40:8],0);                    %CJC 090 00261490
                   GO TO BB6;                                  %CJC 090 00261500
              END  END ELSE            % NOT "WORDS"           %CJC 090 00261510
              BEGIN IF SCLAS = 6 THEN  % INTEGER               %CJC 090 00261520
                   HPAR[11] ~ ICV1(ISYMB[0],4,0,LGTH)          %CJC 090 00261530
                        | 1200000  ELSE                        %CJC 090 00261540
                   IF SCLAS = 5 THEN                           %CJC 090 00261550
                   HPAR[11] ~ ICV1(ISYMB[0],4,0,LGTH) |        %CJC 090 00261560
                        1200000 DIV POWR[SSCALE] ELSE          %CJC 090 00261570
                   ERP(77,0);                                  %CJC 090 00261580
              END; SCTRL;                                      %CJC 090 00261590
                   IF ISYMB[0].[24:18] = "MOD"                 %CJC 090 00261600
                        OR KEY = 257 THEN SCTRL;               %CJC 090 00261610
                   GO TO BB6;                                  %CJC 090 00261620
              END;                                        COMMENT DSRT; 00261690
                   IF KEY = 202 THEN%CHECK FOR "SEGMENT LENGTH".        00261700
              BEGIN IF FL8 THEN ERP (97,0)       ELSE                   00261800
                             %FL8 TRUE, ERROR "DUPLICATE LABEL".        00261801
                   FL8~TRUE; SCTRL; IF SCLAS = 6 THEN SCTRL; GO TO BB6; 00261900
                             %SEGMENT-LIMIT FLG SET TRUE, SCAN,         00261901
              END;             % CHECK FOR INTEGER,SCAN,LOOP TO BB6.    00262000
                   IF SCLAS = 6 THEN                                    00262100
              BEGIN TEM~ ICV1 (ISYMB [0],4,0,LGTH); SCTRL;%IF INTEGER   00262200
                             %TEM SET TO CONVERTED VALUE. SCAN.         00262201
              END  ELSE TEM ~ 1;   HDWR ~ HARDWARE;            %CJC 040 00262300
                             %ELSE TEM SET TO 1,HDWR TO TYPE,IF 0       00262301
                   HPAR[HDWR] ~ TEM;  SCTRL;  GO TO BB6;       %CJC 040 00262400
                             % EXIT, ELSE STORE TEM,SCAN,GO TO BB6      00262401
           COMMENT SPECIAL NAMES PARAGRAPH   ;                          00262500
       BB7:        IF NOT FL9 THEN FL9~ TRUE ELSE ERP (97,0)      ;     00262600
                             %IF FL9 FALSE%SET TRUE ELSE ERROR          00262601
                             % "DUPLICATE LABEL".                       00262602
                   SCTRL; IF SCLAS ! 7 THEN%SCAN, IF NOT A PERIOD THEN  00262700
ER212:        BEGIN ERP(79,0);  GO TO ER21;% ERROR " MISSING PERIOD     00262800
              END;  SCTRL; IF KEY = 253 THEN%SCAN, IF " COPY" THEN      00262900
              BEGIN FL9~FIND;  %SCAN UNTIL A PERIOD. SCAN.              00263000
                   DELTALC~0;  %IF "INPUT-OUTPUT" THEN                  00263100
                   SCTRL;SCTRL;                           COMMENT 10-9; 00263200
              END;  WHILE SCLAS ! 7 DO                                  00263300
               BEGIN DIVN:=9;IF TYPE=1 OR(ISYMB[0].[24:24]="REMO"       00263400
                    AND LGTH=6) THEN HDWR:=HARDWARE ELSE                00263450
                    GO TO ER2;     T1 := KEY;                           00263500
                   DIVN ~ 3;   SCTRL;                          %CJC 040 00263600
                   JCV(OCUR,J,K);  DICT[J,K]~ HDWR &                    00263700
                   T1 [18:33:15] & 13 [1:43:5];                         00263750
                   DIVN~9;   SCTRL;                                     00263800
              END;  SCTRL; IF KEY = 266 THEN GO TO CC;                  00263900
                             %SCAN, IF "INPUT-OUTPUT" THEN              00263901
                   FL2~FL3~ FL4~ FL5~ FALSE; GO TO ER3;                 00264000
       ER2:        ERP (77,0)      ;%"SYNTAX ERROR".                    00264100
       ER21:       IF KEY = 280 THEN GO TO BB1;%IF "DIVISION"           00264200
                   IF KEY = 201 THEN GO TO BB2;%IF "CONFIGURATION"      00264300
                   IF KEY = 251 THEN GO TO BB3;%IF "SECTION"            00264400
                   IF KEY = 216 THEN GO TO BB5;%IF "OBJECT-COMPUTER"    00264500
                   IF KEY = 202 THEN GO TO BB6;%IF "SEGMENT-LIMIT"      00264600
                   IF KEY = 266 THEN GO TO CC;%IF "INPUT-OUTPUT"        00264700
                   IF KEY = 214 THEN GO TO BB4;%IF "SOURSE-COMPUTER"    00264800
                   IF KEY = 215 THEN GO TO BB6;%IF "MEMORY"             00264900
                   IF KEY = 203 THEN GO TO BB7;%IF "SPECIAL-NAMES"      00265000
                   IF KEY = 345 AND SCLAS = 3 THEN                      00265100
                             %IF  "DATA" AND A LABELTHEN                00265101
              BEGIN COMPE~ TRUE; GO TO ENN                              00265200
                             % DID NOT COMPILE. ENN-00280500.           00265201
              END; SCTRL; GO TO ER21;%SCAN.                             00265300
           COMMENT INPUT-OUTPUT SECTION PROCESSING  ;                   00265400
       CC:         FL2~ FALSE; FL3~ FALSE; FL4~ FALSE; FL5~ FALSE;      00265500
                             %INITIALIZATION                            00265501
       CC1:        IF NOT FL2 THEN FL2~ TRUE ELSE ERP (97,0)      ;     00265600
                             %CHECK FL2 FOR DUPLICATE LABEL.            00265601
                   SCTRL; IF KEY ! 251 THEN GO TO ER3;                  00265700
                             %SCAN, IF "SECTION"                        00265701
       CC2:        IF NOT FL3 THEN FL3~ TRUE ELSE ERP (97,0)      ;     00265800
                             %CHECK FL2 FOR DUPLICATE LABEL.            00265801
                   SCTRL; IF SCLAS ! 7 THEN%SCAN, IF NOT A PERIOD THEN  00265900
              BEGIN ERP (79,0)      ; GO TO ER31                        00266000
                             %ERROR "MISSING PERIOD".                   00266001
              END; SCTRL; IF KEY !204 THEN GO TO ER3;                   00266100
                             %SCAN, IF NOT "FILE-CONTROL" THEN          00266101
       CC3:        IF NOT FL4 THEN FL4~ TRUE ELSE ERP (97,0)      ;     00266200
                             %CHECK FL4 FOR DIPLICATE LABEL.            00266201
                   SCTRL; IF SCLAS ! 7 THEN%SCAN, IF NOT A PERIOD THEN  00266300
              BEGIN ERP (79,0)      ; GO TO ER31                        00266400
                             %ERROR "MISSING PERIOD".                   00266401
              END;                                                      00266500
                   SCTRL; IF KEY ! 205 THEN%SCAN, IF NOT "SELECT" THEN  00266600
              BEGIN EIND~7 & 19 [32:40:8] & 88 [24:40:8];               00266700
                             %ERROR "FILE NOT SELECTED".                00266701
                   ERP (EIND,0)      ; GO TO ER31                       00266800
              END;                                                      00266900
                   T6A~AVAIL;  %SAVE FOR DATA RECORDS DECLARATION.      00266950
         COMMENT FILE CONTROL PROCESSING ;                              00267000
       SELEC:      TYPE~0; M~0; OPTNL~0; DIVN~8; SCTRL;                 00267100
                             %INITIALIZE, SCAN.                         00267101
         COMMENT TEST FOR OPTIONAL ;                                    00267200
                   IF KEY = 217 THEN%IF "OPTIONAL" THEN                 00267300
              BEGIN OPTNL~ 1; SCTRL%  SET FLAG, SCAN.                   00267400
              END;  ITYP (6,OCUR);  ORIG~ OCUR; DIVN~ 9;                00267500
                             %SET TYPE IN OCUR TO FILE-NAME.            00267501
                   IF FOUND OR TYPE = 1 THEN                            00267502
              BEGIN     SYOUT(MSG[124],ISYMB,IF  LGTH>31 THEN 31 ELSE   00267503
                               LGTH);      % MOVE ID TO MESSAGE ARRAY   00267504
                        ERP(IF TYPE=1 THEN (40&83[32:40:8]&124[24:40:8])00267505
                            ELSE (77&7[32:40:8]&25[24:40:8]&124[16:40:8]00267506
                            ),0);                                       00267507
                        COMPE ~ TRUE; SCTRL; GO TO ER31;                00267508
              END; % IF IN DICT OR RESV WRD  THEN SYNTAX ERROR TR-369   00267509
                   JCV(ORIG,J,K); DICT[J,K+2].[23:10]~16;               00267510
                   IILNK (OCUR,IX);%SET INFO LINK IN DICTIONARY.        00267600
                   JCV (IX+1,J,K); INFO [J,K].[1:15]~ CLOC;             00267700
                             %STORE SYMBOL ADD. IN FD INFO.             00267701
                   INFO[J,K+3]~BLANKZ;                                  00267740
                   SCTRL;      %SCAN                                    00267800
         COMMENT RENAMING TEST ;                                        00267900
                   IF KEY =293 THEN%IF "RENAMING" THEN                  00268000
              BEGIN  SCTRL; IF NOT FOUND THEN                           00268100
                             %SCAN, IF NOT IN DICTIONARY THEN           00268101
       SEL9:  BEGIN EIND~ 25; EIND.[32:8]~ 8; ERP (EIND,0)      ;       00268200
                             %ERROR "DECLARATION ERROR"                 00268201
                   GO TO SEL2  %SEL2 - 00270900                         00268300
              END;  IF OTYP (OCUR) ! 6 THEN GO TO SEL9;                 00268400
                             %IF NOT FILE-NAME                          00268401
                   JCV(OILNK(OCUR),J,K); X~INFO[J,K+2].[33:15];         00268500
                             %X ~ RENAMING LINK OF FD INFORMATION       00268501
                   IF INFO[J,K+1].[44:4]=13 THEN           COMMENT DF;  00268505
                   GO TO SEL9;COMMENT CANT RENAME DISK;    COMMENT DF;  00268507
                   IF X = 0 THEN X~OCUR ELSE                            00268510
              BEGIN T1~X; WHILE T1 ! 0 DO%LINKS RENAMED FILE-NAMES.     00268520
              BEGIN  JCV(OILNK(T1),J,K);  X~T1;                         00268530
                   T1~INFO[J,K+2].[33:15];                              00268540
              END;                                                      00268550
              END;                                                      00268552
                   JCV(OILNK(X),J,K);                                   00268555
                   INFO[J,K+2].[33:15]~ORIG;   SCTRL;                   00268560
                             %SET RENAMING LINK IN FD INFO, SCAN.       00268561
              END;                                                      00268600
                   T2~ 0; IF KEY ! 263 THEN%IF NOT "ASSIGN" THEN        00268800
              BEGIN ERP(9 & 11[32:40:8],0);%ERROR "MISSING ASSIGNMENT". 00268900
                   COMPE~TRUE; GO TO SEL2;  % 00270900          %TR 769 00269000
              END; SCTRL; IF KEY = 264 THEN SCTRL; IF SCLAS = 6 THEN    00269100
                             %SCAN, IF "TO" SCAN, IF INTEGER THEN       00269101
              BEGIN UT~ICV1 (ISYMB [0],4,0,LGTH); SCTRL;                00269200
                             %UT SET TO CONVERTED INTEGER, SCAN.        00269201
              END  ELSE                                   COMMENT DSRT; 00269300
                             %ELSE UT SET TO 1.                         00269301
                   UT ~ IF KEY = 919 THEN 2 ELSE 1;                  %DS00269350
                   IF KEY = 640 THEN KEY ~ 283;                %CJC 039 00269360
                   IF HDWR:=HARDWARE=10 AND UT LSS 3 THEN UT:=3;%3TP MIN00269400
                   JCV(ORIG,J,K);                          COMMENT DF;  00269600
                   DICT[J,K].[8:1]~REAL(HDWR=13);          COMMENT DF;  00269650
                   IF HDWR = 4 THEN                                     00269652
              BEGIN                                                     00269654
                   EIND~10;                                             00269656
                   IF LCOMP(534) THEN                                   00269658
              BEGIN     %OR                                             00269660
                   SCTRL;                                               00269662
                   IF LCOMP(398) THEN EIND~5        %TAPE               00269664
                    ELSE IF LCOMP(269) THEN EIND~3  %ALTERNATE          00269666
                    ELSE IF LCOMP(220) THEN EIND~2  %DISK               00269668
                    ELSE BEGIN EIND~77; ERP(EIND,0); COMPE~TRUE END;    00269670
              END ELSE                                                  00269672
                   IF LCOMP(268) THEN                                   00269674
              BEGIN     %NO                                             00269676
                   SCTRL; IF NOT (LCOMP(398) OR LCOMP(269)) THEN        00269678
                    BEGIN EIND~77; ERP(EIND,0); COMPE~TRUE END          00269680
                    ELSE EIND~4;                                        00269682
              END ELSE                                                  00269684
                   IF LCOMP(269) THEN EIND~1 ELSE    %ALTERNATE         00269686
                   IF LCOMP(398) THEN EIND~6 ELSE    %TAPE              00269688
                   IF LCOMP(220) THEN EIND~0;        %DISK              00269690
                   IF EIND!10 THEN SCTRL ELSE EIND~5;                   00269692
                    JCV(IX,J,K); INFO[J,K+1].[41:3] ~ EIND;             00269694
              END;                                                      00269696
         COMMENT RESERVE  ;                                             00269700
       SEL1:       SCTRL; IF KEY ! 207 THEN%SCAN, IF NOT "RESERVE" THEN 00269800
              BEGIN ARS~ 1; GO TO SEL2                                  00269900
                             %SET ALTERNATE AREAS COUNTER TO 1.         00269901
              END;                                                      00270000
                   SCTRL; IF KEY = 268 THEN ARS ~ 0  % "NO"    %CJC 025 00270100
                   ELSE IF SCLAS ! 6 THEN GO TO ER3            %CJC 025 00270200
                   ELSE ARS ~ ICV1(ISYMB[0],4,0,LGTH);         %CJC 025 00270300
                   SCTRL;      %SCAN                                    00270500
                   IF KEY = 269 THEN SCTRL;%IF "ALTERNATE" THEN         00270700
                    IF KEY = 270 THEN SCTRL;                            00270760
SEL2:              IF HDWR=10 AND SCLAS=6 THEN                          00270770
              BEGIN                                                     00270780
                   UT~ ICV1(ISYMB[0],4,0,LGTH);%IF "AREAS" THEN SCAN    00270800
                   IF ( UT< 3 OR UT> 5) AND NOT MERGEFL THEN ARS~0      00270810
              ELSE UT ~ UT + 2;                                         00270820
                   SCTRL; IF KEY! 398 AND KEY! 717 THEN ARS~ 0          00270830
                   ELSE SCTRL;                                          00270835
              END;                                                      00270840
                   IF ( HDWR =10) AND ( ARS!1) THEN                     00270850
              BEGIN EIND~40 & 54[32:40:8] &                             00270860
                             %"ILLEGAL INTEGER SORT SPECIFICATION"      00270861
                   90[24:40:8] & 27[16:40:8];             COMMENT 5-22; 00270870
                   ERP(EIND,0); COMPE~TRUE;               COMMENT 5-22; 00270880
              END; COMMENT "ILLEGAL INTEGER SORT SPECIFICATION"   5-22; 00270890
                   IF HDWR=13 AND OPTNL!0 THEN             COMMENT DF;  00270892
              BEGIN ERP(25&8[32:40:8]," OPTNAL");          COMMENT DF;  00270894
                   COMPE~TRUE;COMMENT"OPTNAL DECL.ERROR";  COMMENT DF;  00270896
              END; COMMENT DISKFILE MUST NOT BE OPTIONAL;  COMMENT DF;  00270898
                   T4~1; IF HDWR!10 THEN%IF NOT "SORT-TAPES" THEN       00270900
              BEGIN MAKEFILE (OPTNL,ARS,ORIG,HDWR,UT,IX); SETIX (6)     00271000
              END  ELSE                                                 00271100
              BEGIN  FOR T4 ~ 1 STEP 1 UNTIL UT DO%PROCESS SORT-TAPES.  00271200
              BEGIN MAKEFILE (OPTNL,ARS,ORIG,HDWR,UT,IX);               00271300
              END; JCV (IX,J,K); INFO[J,K+3].[43:5]~UT;                 00271400
                   SETIX (6); IELEF (ORIG);                             00271500
END;               DSFLAG~ MERGEFL~ FALSE;                              00271600
                   JCV(OILNK(ORIG),J,K); INFO[J,K].[33:15]~FIBX;        00271602
                             %SAVE NEXT FIB INDEX IF SORT.              00271603
                   IF SCLAS = 3 THEN%IF A LABEL THEN                    00271700
              BEGIN ERP (79,0)      ; GO TO ER31                        00271800
                             %ERROR "MISSING PERIOD".                   00271801
              END;  IF SCLAS = 7 THEN SCTRL;%IF A PERIOD THEN SCAN.     00271900
                   IF KEY = 205 THEN GO TO SELEC; GO TO ER31;           00272000
                             %IF "SELECT" THEN GO TO 00267100.          00272001
       ER3:        ERP(77,0);   COMPE ~ TRUE;%ERROR"SYNTAX ERROR".      00272100
       ER31:       IF KEY= 266 THEN GO TO CC1;                          00272200
                             %IF "INPUT-OUTPUT" GO TO 00265600.         00272201
                   IF KEY = 251 THEN GO TO CC2;                         00272300
                             %IF "SECTION" GO TO 00265800.              00272301
                   IF KEY = 204 THEN GO TO CC3;                         00272400
                             %IF "FILE-CONTROL" GO TO 00266200.         00272401
                   IF KEY = 205 THEN GO TO SELEC;                       00272500
                             %IF "SELECT" GO TO 00267100.               00272501
                   IF KEY = 209 THEN GO TO IOC;                         00272600
                             %IF "I-O-CONTROL" GO TO 00272900.          00272601
                   IF KEY = 345 THEN GO TO ENN;                         00272700
                             %IF "DATA" GO TO 00280500.                 00272701
                   IF SCLAS ! 7 THEN%IF NOT A PERIOD THEN               00272710
              BEGIN FOUND~FALSE; IF FCHK THEN T1~T1;                    00272712
              END;                                                      00272714
                   SCTRL; GO TO ER31;%SCAN                              00272800
       IOC:        IF NOT FL5 THEN FL5~ TRUE ELSE ERP (97,0)      ;     00272900
                             %CHECK FL5 FOR DUPLICATE LABEL.            00272901
                   SCTRL; IF SCLAS = 7 THEN%IF A PERIOD THEN            00273000
              BEGIN SCTRL; GO TO IOC2%SCAN.                             00273100
              END; ERP (79,0)      ; GO TO IOC2;                        00273200
                             %ERROR "MISSING PERIOD".                   00273201
     IOC1:         ERP(77,0);   COMPE ~ TRUE;%ERROR "SYNTAX ERROR".     00273300
       IOC2:       IF KEY = 210 THEN GO TO IOC2A;                       00273400
                             %IF "APPLY" GO TO 00274000.                00273401
                   IF KEY = 211 THEN GO TO IOC2B;                       00273500
                             %IF "RERUN" GO TO 00275200.                00273501
                   IF KEY = 206 THEN GO TO IOC2C;                       00273600
                             %IF "MULTIPLE" GO TO 00278100.             00273601
                   IF KEY = 345 THEN GO TO ENN;                         00273700
                             %IF "DATA" GO TO 0080500.                  00273701
                   IF SCLAS ! 7 THEN%IF NOT A PERIOD THEN               00273710
              BEGIN FOUND~FALSE; IF FCHK THEN T1~T1;                    00273712
                   COMPE ~ TRUE;%"DID NOT COMPILE"                      00273713
              END;                                                      00273714
                   SCTRL; GO TO IOC2;%SCAN.                             00273800
           COMMENT APPLY CLAUSE  ;                                      00273900
IOC2A:         SCTRL;                                                   00274000
               IF (OPTNL := IF KEY=708 THEN 1 ELSE %TECH-A              00274100
                            IF KEY=712 THEN 2 ELSE %TECH-B NXT IS TECH-C00274200
                            IF KEY=713 THEN 3 ELSE 0)=0 THEN GO TO IOC1;00274300
               SCTRL; IF KEY =271 THEN SCTRL;                           00274400
                             %SCAN, IF "ON" THEN SCAN.                  00274401
                   IF OTYP (OCUR) ! 6 THEN GO TO IOC1;                  00274500
                             %IF NOT A FILE-NAME                        00274501
                   JCV (OILNK (OCUR),J,K);%GETS TO INFO ARRAY.          00274600
                   T2~INFO [J,K+2].[8:10];%INDEX FOR COMPILE TIME FIB.  00274700
                   A~T2+5; IF FIB[A.[38:3],A.[41:7]].[45:3] ! 0 THEN    00274800
                   GO TO IOC1;                                          00274801
                   INFO[J,K].[1:3]~OPTNL;                  COMMENT DF;  00274900
                             %STORE TECHNIQUE IN FD INFO.               00274901
                   IF OSGND(OCUR) COMMENT "DISK";          COMMENT DF;  00274910
                   AND(OPTNL=2 OR OPTNL=3)THEN             COMMENT DF;  00274920
                   GO TO IOC1;COMMENT TECHNIQUE-B OR C;    COMMENT DF;  00274930
                   A ~ T2+4; % IGNORE APPLY TO SORT FILES               00274940
                   IF BOOLEAN(FIB[A.[38:3],A.[41:7]].[7:1]) THEN        00274950
                   BEGIN OPTNL~0;                                       00274960
                         EIND ~ 40&90[32:40:8]&63[24:40:8]&27[16:40:8]; 00274970
                         ERP(EIND,0);                                   00274980
                   END;                                                 00274990
                   FIB [(A~T2+5).[38:3],A.[41:7]].[46:2]~ OPTNL   ;     00275000
                   SCTRL;  GO TO IOC2;%SCAN, GO TO 00273400.            00275001
       IOC2B:      SCTRL; REON~0; T8~ 0;%SCAN.                          00275200
         COMMENT  ON TAPE ;                                             00275300
                   IF KEY = 271 THEN                                    00275400
              BEGIN SCTRL; IF KEY ! 398 THEN GO TO IOC1; REON~1;        00275500
                             %IF "ON" THEN SCAN. IF NOT "TAPE"          00275501
                   SCTRL       %SCAN.                                   00275600
              END;                                                      00275700
         COMMENT  EVERY  ;                                              00275800
                   IF KEY = 400 THEN SCTRL;%IF "EVERY" THEN             00275900
                   IF KEY = 512 THEN%IF "END" THEN                      00276000
              BEGIN SCTRL; IF KEY = 343 THEN SCTRL; GO TO RE            00276100
                             %SCAN, IF "OF" THEN SCAN.                  00276101
              END; IF KEY = 343 THEN%IF "OF" THEN                       00276200
              BEGIN SCTRL;     %SCAN.                                   00276300
       RE:         IF KEY = 267 THEN%IF "REEL" THEN                     00276400
              BEGIN SCTRL; GO TO IOC5%SCAN.                             00276500
              END ELSE GO TO IOC1%IOC1 - 00273300.                      00276600
              END;                                                      00276700
                   IF KEY=267 THEN GO TO RE;%IF "REEL" THEN             00276800
                   IF SCLAS ! 6 THEN GO TO IOC1;%IF AN INTEGER THEN     00276900
                   T8~ ICV1 (ISYMB [0],4,0,LGTH); SCTRL;                00277000
                             %SET TO CONVERTED INTEGER, SCAN.           00277001
                   IF KEY ! 336 OR REON ! 1 THEN GO TO IOC1;            00277100
                             %IF "RECORDS" OR REON NOT 1                00277101
                   SCTRL;                        COMMENT 1/31/64;       00277150
       IOC5:       IF KEY = 343 THEN SCTRL;%IF "OF"THEN                 00277200
                   IF OTYP (OCUR) ! 6 THEN GO TO IOC1;                  00277300
                             %IF NOT A FILE-NAME                        00277301
                   JCV (OILNK (OCUR),J,K);%GETS FD INFO ARRAY.          00277400
                   X ~ INFO [J,K+2].[8:10];%INDEX TO COMPILE TIME FIB.  00277500
                   A~X+4;FIB[A.[38:3],A.[41:7]].[3:2]~    COMMENT 9-24; 00277600
                     IF T8!0 THEN 0 ELSE                  COMMENT 9-24; 00277601
                     IF REON =1 THEN 2 ELSE 1;            COMMENT 9-24; 00277604
                   A~X+9; FIB[A.[38:3],A.[41:7]]~T8;                    00277700
                   SCTRL; GO TO IOC2;%SCAN GO TO 00273400.              00277900
           COMMENT MULTIPLE ;                                           00278000
       IOC2C:      SCTRL; IF KEY ! 332 THEN GO TO IOC1;                 00278100
                             %SCAN, IF NOT "FILE"                       00278101
                   CY ~ 0;                                              00278200
                   SCTRL;      % BY-PASS FILE                           00278220
                   IF KEY=398 OR KEY=220 THEN SCTRL;%IF TAPE OR DISK 37000278250
                   IF KEY=337 THEN %SCAN PAST CONTAINS            TR-37000278290
       BBB:        SCTRL; IF OTYP (OCUR) = 6 THEN GO TO BBB1;           00278300
                             %SCAN, IF FILE-NAME                        00278301
                   IF SCLAS = 7 THEN GO TO IOC1;                 %TR-37000278400
                             %IF A PERIOD GO TO 00273300.               00278401
                   SYOUT(MSG[124],ISYMB,IF  LGTH>31 THEN 31 ELSE  LGTH);00278410
                   ERP( IF TYPE=1 THEN(40&83[32:40:8]&124[24:40:8])     00278430
                       ELSE (77&7[32:40:8]&25[24:40:8]&124[16:40:8]),0);00278450
                   COMPE ~ TRUE;                                 %TR-37000278470
                   GO TO BBB;                                    %TR-37000278490
       BBB1:       IF NOT FOUND THEN GO TO BBB2;%IF NOT IN DICTIONARY   00278500
                   CY~ CY + 1; CCY [CY]~ OCUR; SCTRL;                   00278600
                             %STORE OCUR IN TEMP ARRAY. SCAN.           00278601
                   IF KEY ! 537 THEN GO TO BBB2B; SCTRL;                00278700
                             %IF NOT "POSITION"                         00278701
                   IF SCLAS ! 6 THEN%IF NOT AN INTEGER                  00278800
              BEGIN ERP(77,0); COMPE~TRUE; GO TO BBB2B;                 00278900
                             %ERROR"SYNTAX ERROR".                      00278901
              END;                                                      00279000
                   JCV (OILNK (CCY [CY])+1,J,K);%GETS FD INFO ARRAY.    00279100
                   INFO [J,K].[26:10]~ ICV1 (ISYMB [0],4,0,LGTH);       00279200
                             %STORE MULTI-FILE POSITION.                00279201
       BBB2:       SCTRL;      %SCAN.                                   00279300
       BBB2B:      IF OTYP (OCUR) = 6 THEN GO TO BBB1;                  00279400
                             %CHECK FOR FILE-NAME.                      00279401
                   IF KEY = 306 THEN GO TO BBB3;%IF "VALUE"             00279500
                   IF SCLAS = 7 THEN GO TO IOC1 ELSE GO TO BBB2;        00279600
                             %IF A PERIOD                               00279601
       BBB3:       SCTRL; IF KEY = 343 THEN SCTRL;                      00279700
                             %SCAN, IF "OF" THEN SCAN.                  00279701
                   IF KEY ! 641 THEN%IF NOT "MFID"                      00279800
              BEGIN   IF KEY ! 206 THEN GO TO IOC1;                     00279802
                             %IF NOT "MULTIPLE" THEN ERROR              00279803
                    SCTRL;   IF KEY ! 332 THEN GO TO IOC1;              00279804
                             %SCAN, IF NOT "FILE" THEN ERROR.           00279805
                    SCTRL;  IF KEY ! 101 THEN GO TO IOC1;               00279806
                             %SCAN, IF NOT "ID" THEN ERROR.             00279807
              END;                                                      00279810
                   SCTRL; IF SCLAS ! 1 THEN GO TO IOC1;                 00279900
                             %SCAN, IF NOT A LITERAL                    00279901
                   WHILE (CY > 0) DO%LOOP UNTIL CY = 0.                 00280000
              BEGIN JCV (OILNK (CCY [CY]),J,K);%GETS FD INFO ARRAY.     00280100
                   INFO [J,K~K+5]~ "      ";    %BLANK WORD             00280150
                   CHRTRAN (ISYMB,4,INFO[J,K],1,% MOVE ID TO            00280200
                             %TRANSFERS CHARS. TO FD INFO ARRAY.        00280201
                        (IF LGTH}7 THEN 7 ELSE LGTH)); % IDENTIFIER     00280250
                   CCY [CY] ~ 0;  CY ~ CY - 1                           00280300
                             %ZERO TEMP ARRAY, REDUCE COUNTER.          00280301
              END;     SCTRL;   GO TO IOC2;%SCAN, GO TO 00273400.       00280400
         ENN: END*;            %SPECIAL END TO RETURN DRUM STORAGE      00280500
 L5:                IF KEY ! 345 THEN%IF NOT "DATA"THEN                 00280600
              BEGIN IF KEY = 539 OR KEY = 718 THEN GO TO ENDINGBLOCK;   00290000
                             %IF "PROCEDURE" OR "END-OF-JOB"            00290001
                             %  GO TO 72635000 ELSE                     00290002
                   ERP(9 & 73[32:40:8],0);%ERROR "MISSING DIVISION".    00295000
                   COMPE ~ TRUE;                       COMMENT 3-23-64; 00295050
                    SCTRL; GO TO L5%SCAN                                00300000
              END;                                                      00305000
DATAPROC:     BEGIN            %START OF DATA-PROCEDURE DIV..........   00310000
          LABEL DATADIV,PROCDIV,L6,EGRESS;                              00315000
              REAL OCA       ; %OCUR OF A(SCOURCE OF MOVE).             00335005
              REAL OCB       ; %OCUR OF B(DESTINATION OF MOVE).         00335010
              REAL CLB       ; %CLASS OF RECEIVING FIELD FOR MOVE   7-6700335015
                   REAL SZA,   %SIZE OF A.                              00335020
                        SZB,   %SIZE OF B.                              00335030
                        LFP,   %LEFT-PART SIZE                      7-6700335035
                        LEVEL, %DATA-NAME LEVEL                     7-6700335045
                        JS,    %JUSTIFIED DATA-NAME FLAG            7-6700335055
                        RNL,   %                                    7-6700335065
                        LOCUS   %OCUR RESULT OF QUALIFICATION SEARCH    00335070
                   ;    % SEMI-COLON                                    00335080
              INTEGER ALL;     %MOVING "ALL" FLAG.                      00360000
                BOOLEAN FIGC;  %FIGURATIVE CONSTANT FLAG.               00395000
              BOOLEAN LITF;    %MOVING LITERAL OR VALUE CLAUSE FLAG.    00400000
                BOOLEAN LOW,   %MOVING "LOW-VALUE" FLAG.                00405000
                        MDF,   %MONITOR-DUMP FLAG                   7-6700405100
                        FLOATED;%FLOATED ($,*,ETC) FLAG                 00410000
                   REAL RIP,   %# OF INSERTS TO RIGHT OF DECIMAL        00430050
                        SFAL;  %# INSERT CHAR TO LEFT OF DECIMAL        00430065
% ********************* SIGN IS DATA-NAME ******************** %TR 410  00431000
%   CHECKS FOR VALID DATA ITEM WHEN "SIGN IS " WAS SPECIFIED   %TR 410  00431001
BOOLEAN PROCEDURE SIGNISDN(SIDNOCUR);                          %TR 410  00431100
         VALUE     SIDNOCUR;                                   %TR 410  00431200
         INTEGER   SIDNOCUR;                                   %TR 410  00431300
              BEGIN     INTEGER J,K;                           %TR 410  00431400
                   JCV(OILNK(SIDNOCUR),J,K);                   %TR 410  00431500
                   IF INFO[J,K+1].[19:17] ! 0 OR               %TR 410  00431600
                   INFO[J,K+2].[33:15] ! 1 THEN                %TR 410  00431700
              BEGIN COMPE ~ TRUE; %SUBS ! 0 OR SIZE ! 1        %TR 410  00431800
                   ERP(95 & 27[32:40:8] & 8[24:40:8],0);       %TR 410  00431900
              END  ELSE   % "SIGNED SPECIFICATION ERROR"       %TR 410  00432000
                   SIGNISDN ~ TRUE;                            %TR 410  00432100
              END OF SIGNISDN;                                 %TR 410  00432200
COMMENT GETS INTERNAL (MEMORY MAPPING) SIZE;                            00442000
INTEGER PROCEDURE MAPSZ (OCUR); VALUE OCUR; INTEGER OCUR;               00442050
              BEGIN  INTEGER E,D;                                       00442100
                   D~OILNK(OCUR); E~D.[33:6]; D~D.[39:9];               00442150
                   MAPSZ~INFO[E,D+2].[33:15];                           00442200
              END;                                                      00442250
COMMENT ********************* BUILD LITERAL **************************; 00442300
STREAM PROCEDURE BUILDLIT(SPX,SRX,SSZ,DPX,DRX,Q,R);                     00442350
    VALUE SRX,SSZ,DRX,Q,R;                                              00442400
         COMMENT BUILDS A LITERAL OF SIZE Q|SSZ+R FOR "ALL" LIT;        00442450
              BEGIN LOCAL EDE;                                          00442500
                   SI~SPX; SI~SI+SRX; DI~DPX; DI~DI+DRX;                00442550
                   Q(DS~SSZ CHR; SI~SI-SSZ); DS~R CHR;                  00442600
              END;                                                      00442650
PROCEDURE MGENC(GETA,GETB,LITF,ZRA,FIGC,LOW,OCA,OCB,ALL,OCBL,OCAL,RAL,  00442670
RBL,QAL,QBL,FLOATED);VALUE GETA,GETB,LITF,ZRA,FIGC,LOW,OCA,OCB,OCBL,    00442700
OCAL,RAL,RBL,QAL,QBL;INTEGER GETA,GETB,OCA,OCB,ALL,OCBL,OCAL,RAL,RBL,   00442800
QAL,QBL;BOOLEAN LITF,ZRA,FIGC,LOW,FLOATED; FORWARD;                     00442900
PROCEDURE MVL(OCUR,HQX,FROMDATADIV);%MOVES A LITERAL TO A COMPUTATIONAL 00443000
    VALUE OCUR,HQX,FROMDATADIV; INTEGER OCUR,HQX,FROMDATADIV;%ITEM.     00443500
              BEGIN                                                     00444000
    INTEGER SZB,SCB,LFB,SZA,SCA,LFA,J,K,L;                              00444500
    BOOLEAN SIGNIT,ZFLG;                                                00445000
    LABEL MVL1,MVL2,MVL3;                                               00445500
                   SZB~OFSZ(OCUR); SCB~OSCALE(OCUR); ZFLG~FALSE;        00446000
                   JCV(OILNK(OCUR)+1,J,K); LFB~INFO[J,K].[13:6];        00446500
                   SZA~LTR[27]; SCA~LTR[29]; LFA~LTR[28];               00447000
                   IF FROMDATADIV!0 THEN                  COMMENT 9-01; 00447050
         COMMENT LITERAL TRUNCATIOM;                      COMMENT 9-01; 00447100
              BEGIN IF NOT ZOBOL AND NOT FIGC AND ALL=0   COMMENT 9-01; 00447200
                   AND NOT ZRA AND (LFA>LFB OR SCA>SCB)   COMMENT 9-01; 00447300
                   THEN ERP(1&81[32:40:8],0);%LITERAL TRUNCATION        00447400
              END;                                        COMMENT 9-01; 00447450
                   IF ZRA OR (NOT FIGC AND ALL=0 AND                    00447500
                   ((LFB=0 AND (SCB-SZB)}SCA) OR                        00448000
                   (SCB{0 AND -SCB}LFA))) THEN                          00448500
              BEGIN  IF FROMDATADIV!0 THEN GO TO MVL3; EMIL(LITC,0);    00448700
                             %LITERAL OUT OF RANGE                      00448701
              END ELSE                                                  00449000
              BEGIN SIGNIT~ IF LTR[19].[24:6]=44 THEN                   00449500
                   TRUE ELSE FALSE;                                     00450000
                   IF CNQ.[41:7]>120 THEN                               00450500
              BEGIN  CNQ~CNQ+9; CNR~0;                                  00451000
              END;                                                      00451500
                   IF FIGC OR ALL!0 THEN                                00452000
              BEGIN MSG[124]~0; MSG[125]~0; MSG[126]~0;                 00452500
                             %BUILD ALL LITERAL                         00452501
                   L ~ SZB;                                             00453000
                   BUILDLIT(LTR[0],4,LFA,MSG[124],0,L DIV LFA,J~L MOD   00453500
                   LFA); LFA~LFB; SCA~SCB; SZA~SZB;                     00454000
                   IF SZB>11 THEN                                       00454500
              BEGIN CHRTRAN(MSG[124],0,CNP[CNQ.[38:3],CNQ.[41:7]],CNR,  00455000
                   SZB); GO TO MVL2;                                    00455500
              END;                                                      00460000
                   J~ICV1(MSG[124],0,0,SZB); GO TO MVL1;                00460500
              END;                                                      00461000
                   L~(IF LFA{LFB THEN 0 ELSE IF SCB<0 THEN LFA-LFB+SCB  00461500
                   ELSE LFA-LFB)+4+                                     00461700
                   (IF SCB>SZB THEN SCB-SZB ELSE 0); IF L<4 THEN L~4;   00462000
                   IF LFB{SZB AND SCB<0 THEN K~LFA+SCB ELSE             00462100
              BEGIN K~(IF LFA>LFB THEN LFB ELSE LFA) +                  00462200
                   (IF SCB>SZB THEN SZB ELSE IF SCB<0 THEN 0 ELSE SCB); 00462300
              END;                                                      00462400
                   IF K<12 THEN                                         00462500
              BEGIN  J~ICV1(LTR[0],L,0,K);                              00463000
MVL1:              IF J{1023 THEN                                       00463500
              BEGIN  EMIL(LITC,J);                                      00464000
                   IF SIGNIT THEN EMIL(OPR,SSN);%LITERAL IS NEGATIVE    00464500
              END ELSE                                                  00465000
              BEGIN  IF CNR!0 THEN                                      00465500
              BEGIN CNR~0; CNQ~CNQ+1;                                   00466000
              END;                                                      00466500
                   CNP[CNQ.[38:3],CNQ.[41:7]]~ IF SIGNIT THEN -J ELSE J;00467000
                   EMIL(LITC,CNQ-1); EMIL(OPDC,CNPL);                   00467500
                   CNQ~CNQ+1;                                           00468000
              END END ELSE                                              00468500
              BEGIN  IF K<SZB THEN                                      00469000
              BEGIN  MSG[124]~0; MSG[125]~0; MSG[126]~0;                00469100
                   CHRTRAN(MSG[124],0,CNP[CNQ.[38:3],CNQ.[41:7]],CNR,   00469200
                   SZB-K);                                              00469300
              END;                                                      00469500
                   CHRTRAN(LTR[0],L,CNP[CNQ.[38:3],CNQ.[41:7]],CNR+SZB- 00470000
                   K,K);                                                00470200
MVL2:              EMIL(LITC,0); EMIL(OPR,MKS);                         00470500
                             %OBJECT TIME INPUT CONVERT FOR             00470501
                   EMIL(LITC,CNQ-1); EMIL(DESC,CNPL);                   00471000
                             %DOUBLE PRECISION LITERAL                  00471001
                   EMIL(LITC,CNR); EMIL(LITC,0);                        00471500
                   EMIL(LITC,SZB); EMIL(OPDC,ICV1L);                    00472000
                   IF SIGNIT THEN EMIL(OPR,SSN);                        00472500
                   ZFLG~TRUE;                                           00472700
                   CNR~CNR+SZB; CNQ~CNQ+(CNR DIV 8);                    00473000
                   CNR~CNR MOD 8;                                       00473500
              END END ;                                                 00474000
                   OAS(J,K,L,OCUR);                                     00474100
                   IF HQX!0 THEN EMIL(OPDC,HQX) ELSE EMIL(LITC,K);      00474200
                   IF OUSG(OCUR) ! 2 THEN EMIL(DESC,J);                 00474300
                             %OPTIMIZE IF CMP-1                         00474301
                   EMIL(OPR,STD);                         COMMENT 3-26; 00474350
                   IF SZB>11 THEN                                       00474400
              BEGIN  IF NOT ZFLG THEN EMIL(LITC,0);                     00474500
                   IF HQX!0 THEN                                        00474600
              BEGIN  EMIL(LITC,1); EMIL(OPDC,HQX); EMIL(OPR,ADD);       00474700
              END ELSE  EMIL(LITC,K+1);                                 00474800
                   EMIL(DESC,J); EMIL(OPR,STD);                         00474900
              END;                                                      00475000
                   IF OSGN(OCUR)=3 THEN                                 00475100
              BEGIN  JCV(OILNK(OCUR)+3,J,K);                            00475200
                   OAS(J,K,L,INFO[J,K].[18:15]);                        00475300
                   EMIL(LITC,(IF SIGNIT THEN 44 ELSE 16));              00475400
                   EMIL(OPR,MKS); EMIL(LITC,K); EMIL(DESC,J);           00475500
                   EMIL(LITC,L);EMIL(OPDC,BDNSIGN);%DATA NAME SIGN      00475600
                   EMIL(OPR,DEL);                         COMMENT 8-7;  00475620
              END;                                                      00475700
MVL3:         END;                                                      00476000
COMMENT ***************************  SETLTR  *************************; 00477000
COMMENT SETS LTR ARRAY FROM LITERAL FOR MOVE INPUT  ;                   00480000
BOOLEAN PROCEDURE SETLTR;                                               00485000
              BEGIN  INTEGER F,T1,T2,T3,T4,T5;                          00490000
              INTEGER Q1,Q2;                                            00490050
                   LABEL S1,MS1,SX,SE,SL;                               00500000
                   FOR X~0 STEP 1 UNTIL 31 DO LTR[X]~0;%ZERO LTR ARRAY. 00505000
                   IF CNQ.[41:7]>112 THEN%IF GREATER THAN 180 THEN      00505010
              BEGIN CNR ~ 0; CNQ ~ CNQ+115; CNQ.[41:7] ~ 0;             00505020
                             % START NEW ROW.                           00505021
              END;                                                      00505040
                   Q1 ~ Q2 ~ ALL ~ 0;                          %CJC 028 00510000
                   T4~1;                                                00520000
                   ZRA ~ LOW ~ FIGC ~ LITF ~ FALSE;            %CJC 028 00525000
       S1:         IF TYPE = 1 THEN%IF A RESERVED WORD THEN             00530000
              BEGIN                                                     00535000
                   IF KEY = 501 THEN%IF "ALL" THEN                      00545000
              BEGIN ALL~1; SCTRL; GO TO S1% SET ALL  FLAG, SCAN.        00550000
              END;    F~F+1;                                            00555000
           COMMENT SPACES  ;                                            00560000
                   IF KEY = 550 THEN%IF "SPACES" THEN                   00565000
              BEGIN LTR [0].[24:6]~48;  GO TO MS1% SET UP BLANK.        00570000
              END;                                                      00575000
           COMMENT ZERO, ZEROS   ;                                      00580000
                   IF KEY = 344 THEN%IF ZERO(ES) THEN                   00585000
              BEGIN ZRA~TRUE; LTR[0]~0; GO TO MS1% SET UP ZERO.         00590000
              END;                                                      00595000
           COMMENT  HIGH-VALUE  ;                                       00600000
                   IF KEY = 522 THEN%IF "HIGH VALUE" THEN               00605000
              BEGIN LTR [0].[24:6]~9;  GO TO MS1% SET UP 9.             00610000
              END;                                                      00615000
           COMMENT  LOW-VALUE  ;                                        00620000
                   IF KEY = 528 THEN%IF "LOW VALUE" THEN                00625000
              BEGIN LOW~TRUE;  % SET LOW FLAG.                          00630000
                   LTR[0].[24:6] ~ 48;                          %TR 794 00631000
       MS1:        LTR [27]~1;  LTR [28]~1;  FIGC~TRUE; LITF~TRUE;      00635000
                   ALL ~ 1;                               COMMENT 9-01; 00637000
                   IF SPLAT THEN                                        00640000
              BEGIN  ISYMB[0] ~ LTR [0];                                00645000
                   F~OFSZ (ORIG); IF F > 120 THEN F~120;                00655000
                             %IF SIZE GREATER THAN 120, SET TO 120      00655001
                   FOR X~1 STEP 1 UNTIL F DO                            00660000
                   CHRTRAN(LTR,4,ISYMB,X+4,1);   LGTH~F;                00660010
                   SCLAS~IF LTR[0].[24:6]= 48 OR LTR[0].[24:6]= 63      00660499
                   THEN 1 ELSE 6;                                       00660500
              END ELSE IF CDIVN ! 4 THEN SCTRL;                         00665000
                             %IF NOT PROCEDURE DIVISION THEN            00665001
                   SETLTR~TRUE;  GO TO SX                               00675000
              END;                                                      00680000
                   IF KEY = 541 THEN                                    00690000
              BEGIN LTR[0]~0 & 63 [24:42:6];                            00695000
                     GO TO MS1;                                         00700000
              END;                                                      00705000
                   IF KEY = 512 THEN                                    00705010
              BEGIN LTR[0] ~ 0 & 31[24:42:6]; GO TO MS1;                00705020
              END;                                                      00705030
                   IF F = 1 THEN                                        00740000
       SE:    BEGIN EIND~40 & 46 [32:40:8]; ERP (EIND,0)      ;         00745000
                             %"ILLEGAL VALUE".                          00745001
                   SETLTR~FALSE; COMPE~TRUE; GO TO SX;                  00750000
              END;  GO TO MS1                                           00755000
              END;                                                      00760000
                   IF TYPE = 17 THEN%IF A SPECIAL CHARACTER THEN        00765000
              BEGIN IF KEY ! 820 AND KEY ! 821 THEN GO TO SE;           00770000
                             %IF NOT A PLUS OR A MINUS THEN GO          00770001
                             %IF MINUS THEN                             00772000
                   CHRTRAN (ISYMB,4,CNP[CNQ.[38:3],CNQ.[41:7]],         00775000
                             %ELSE MOVE SYMBOL                          00775001
                   CNR,1);                                              00780000
                   LTR[20]~CNR; LTR[21]~CNQ-1; LTR[22]~CNPL;            00785000
                    LTR[19]~ISYMB[0];                                   00785050
                   LTR[26]~3; CNR~CNR+1; CNQ~CNQ+(CNR DIV 8);           00790000
                   CNR~CNR MOD 8; SCTRL; F~F+1;           COMMENT 4-06; 00795000
                   IF TYPE = 1 THEN GO TO S1%IF A RESERVED WORD THEN GO 00800000
              END;                                                      00805000
                   IF SCLAS = 5 OR SCLAS = 6 OR SCLAS = 1 THEN          00810000
              BEGIN IF ALL ! 0 OR CDIVN = 4 THEN                        00815000
                             %IF "ALL" OR IN PROCEDURE DIV THEN         00815001
              BEGIN X ~ LGTH;  T4 ~ 0;                                  00820000
                             %MOVE LITERAL FROM ISYMB TO LTR ARRAY      00820001
                   WHILE X > 0 DO                                       00820500
              BEGIN CHRTRAN (ISYMB[T4],4,LTR[T4],4,(IF X > 56 THEN 56   00825000
                   ELSE X));          X ~ X- 56; T4 ~ T4 + 7;           00825400
              END;                                                      00825800
       SL:         LTR [27]~LGTH; LTR [28]~LGTH - SSCALE;               00830000
                             %SAVE LENGTH AND SCALE OF LIT              00830001
                   LITF~TRUE;  %SET "LITERAL" FLAG                      00835000
                   IF ALL ! 0 THEN ALL~LGTH;                            00840000
                             %IF "ALL" LITERAL THEN SAVE LENGTH         00840001
                   LTR [29]~SSCALE;%SAVE SCALE OF LITERAL               00845000
                   LTR [31]~ IF SCLAS = 1 THEN 1 ELSE 3;                00850000
                             %CLASS OF THE LITERAL                      00850001
                   IF CDIVN ! 4 THEN%IF NOT PROCEDURE DIVISION          00855000
                   SCTRL; SETLTR~TRUE; GO TO SX                         00860000
                             %PROCEDURE TRUE WHEN LITERAL OK            00860001
              END ELSE         %IF DATA DIVISION                        00865000
              BEGIN                                                     00870000
                   IF CNQ.[41:7] > 112 THEN                             00875000
                             %IF MAY NOT FIT IN ROW OF CONSTANT         00875001
              BEGIN  CNQ~CNQ+115;  CNQ.[41:7]~0;                        00880000
                             %  POOL THEN ADJUST TO NEXT ROW            00880001
                   CNR~0;                                               00880010
              END;                                                      00885000
                   X~LGTH;  T4~0; T3~CNQ;                               00890000
                   IF SCLAS=5 OR SCLAS=6 THEN CHRTRAN(ISYMB,4,LTR,4,X); 00892000
                             %IF NUMERIC LITERAL                        00892001
                    WHILE X > 0 DO%MOVE LITERAL FROM ISYMB TO CONSTANT  00895000
              BEGIN            %   POOL FOR MOVE                        00900000
                    CHRTRAN(ISYMB[T4],4,CNP[T3.[38:3],                  00905000
                    T3.[41:7]],CNR,(IF X > 56 THEN 56 ELSE X));         00910000
                    X~X-56;  T4~T4+7;   T3~T3+7;                        00915000
                             %ADJUST INDICES BY 7 WORDS (56 CHAR)       00915001
              END;                                                      00920000
                   LTR[23]~CNR; LTR[24]~CNQ-1; LTR[25]~CNPL;            00925000
                             %SAVE PRT, WORD, AND CHAR INDEX            00925001
                   CNR~CNR+LGTH+1;  CNQ~CNQ+(CNR DIV 8);                00930000
                             %UPDATE CONST POOL INDICES                 00930001
                   CNR~CNR MOD 8; GO TO SL                              00935000
              END;                                                      00940000
              END;   GO TO SE; %GO TO ERROR  IF WORNG LIT CLASS         00945000
       SX:                                                              00950000
              END;             %END OF SETLTR PROCEDURE                 00955000
COMMENT ***************************  ISNGD   *************************; 00957000
COMMENT SETS ITEM-SIGNED FLAG IN OCUR  ;                                00960000
 PROCEDURE ISGND (OCUR);                                                00965000
              VALUE OCUR;                                               00970000
              INTEGER OCUR;                                             00975000
              BEGIN  INTEGER J,K;                                       00980000
                    IF OCUR > 860 THEN                                  00980005
              BEGIN                                                     00980006
                   J ~ OCUR.[33:6]; K ~ OCUR.[39:9];                    00985000
                   DICT[J,K].[8:1]~1;                                   00990000
              END;                                                      00990005
              END;                                                      00995000
COMMENT ***************************  ILEVL   *************************; 00997000
COMMENT     PLACES LEVEL NUMBER INTO DICTIONARY ENTRY     ;             01000000
 PROCEDURE ILEVL (LEVEL,OCUR);                                          01005000
              VALUE LEVEL,OCUR;                                         01010000
              INTEGER LEVEL, OCUR;                                      01015000
              BEGIN  INTEGER J,K;                                       01020000
                    IF OCUR > 860 THEN                                  01020005
              BEGIN                                                     01020006
                   K ~ OCUR + 1; J ~ K.[33:6]; K ~ K.[39:9];            01025000
                   DICT [J,K].[1:6] ~ LEVEL                             01030000
              END;                                                      01030005
              END;                                                      01035000
COMMENT ***************************  ISCALE  *************************; 01067000
COMMENT     PLACES ITEM SCALE FACTOR INTO DICTIONARY ENTRY     ;        01070000
 PROCEDURE ISCALE (SCALE,OCUR);                                         01075000
              VALUE SCALE,OCUR;                                         01080000
              INTEGER SCALE, OCUR;                                      01085000
              BEGIN INTEGER J,K;                          COMMENT 8-27; 01090000
                    IF OCUR > 860 THEN                                  01090005
              BEGIN                                                     01090006
                   K ~ OCUR + 1; J ~ K.[33:6]; K ~ K.[39:9];            01095000
                   DICT[J,K]~DICT[J,K]& SCALE[11:41:7]%                 01095010
                   & SCALE [10:1:1];%                                   01100000
              END;                                                      01105005
              END;                                                      01110000
COMMENT ***************************   LFC    *************************; 01112000
COMMENT EMITS SYLLABLES TO GET DYNAMIC SIZE OF DATA ITEM;               01115000
PROCEDURE LFC (OCUR);                                                   01120000
              VALUE OCUR;  INTEGER OCUR;                                01125000
              BEGIN INTEGER P,Q,R,A,B,OCUL;                             01130000
    INTEGER X;                                            COMMENT 7-01; 01132000
                   LABEL LFCX;                                          01135000
                   JCV (OILNK (OCUR),A,B);                              01140000
                             %GET INFO LINK OF PARAMETER OCUR           01140001
                   OCUL~INFO[A,B+3].[3:15];%IF "SIZE DEPENDING"         01145000
                   IF OCUL = 0 THEN OCUL~INFO[A,B+3].[33:15];           01150000
                             %GET "OCCURS DEPENDING" LINK               01150001
                   OAS(P,Q,R,OCUL);%GET ASSIGNMENT OOR DEPEND FIELD     01155000
                   T6~OSCALE (OCUL); IF T6 ! 0 THEN%SCALE OF FIELD      01160000
              BEGIN EIND~77;   %IF NOT INTEGER THEN ERROR               01165000
                   ERP (EIND,0)%"SYNTAX ERROR".                         01170000
              END;                                                      01175000
                   IF X ~ OUSG(OCUL) ! 0 THEN%IF COMPUTATIONAL ITEM     01180000
              BEGIN                                                     01185000
                   EMIL(IF X=1 THEN LITC ELSE OPDC,Q);%WORD INCEX       01190000
                   IF X=1 THEN EMIL(OPDC,P);%GET OPERAND                01195000
                   GO TO LFCX                                           01200000
              END;                                                      01205000
                   IF OFSZ(OCUL) > 11 THEN%IF DOUBLE PRECISION          01205050
                   EMIL (LITC,0)     ;                                  01210000
                   EMIL (OPR,MKS)     ;                                 01215000
                   EMIL (LITC,Q)     ;%WORD INDEX                       01220000
                   EMIL (DESC,P)     ;%PRT DESCRIPTOR LOCATION          01225000
                   EMIL (LITC,R)     ;%CHARACTER ADDRESS                01230000
                   EMIL (LITC,0)     ;%SIGN POSITION                    01235000
                   IF OSGND (OCUL) THEN EMIL (OPR,SSP)     ;            01240000
                   EMIL (LITC,(OFSZ(OCUL)))     ;                       01245000
                             %LENGTH OF DATA-NAME FIELD                 01245001
                   EMIL (OPDC,ICV1L)     ;%CALL INPUT CONVERT TO OCTAL  01250000
       LFCX:       IF T6 ! 0 THEN%IF ITEM IS SCALED                     01255000
              BEGIN EMIL (LITC,T6)     ;%# OF SCALE CHARACTERS          01260000
                   EMIL (OPDC,TENX)     ;%POWERS-OF-TEN TABLE           01265000
                   EMIL (OPR,IDV)%TO TRUNCATE TO INTEGER AND ROUND      01270000
              END;                                                      01275000
              END;             %END OF LFC PROCEDURE * * *              01280000
COMMENT ***************************  SERCH   *************************; 01282000
         COMMENT  SEARCHES TO RESOLVE QUALIFICATION ;                   01285000
                             %CCY SUB 1, 2, 3, ETC WILL CONTAIN         01285001
                             %  CY INDICES FOR THE OCUR OF EACH         01285002
                             %  DATA-NAME GIVEN IN QUALIFICATION        01285003
PROCEDURE SERCH (CY,CCY);      %PROCEDURE TO SEARCH OCURS STORED IN     01290000
                   VALUE CY;   % CCY TO RESOLVE QUALIFICATION.          01295000
              INTEGER CY;  ARRAY CCY [0];                               01300000
              BEGIN INTEGER TW,TW1,K,X,T1,NRINSTACK,T2;%           SI16101305000
      REAL TZ;                                                   %TR-34501305001
                   INTEGER UPPER;                                %TR-38501305500
                   LABEL BE,BL;%                                   SI16101306000
                   T2 ~ CCY[1];%                                   SI16101307000
                   IF CY = 1 THEN % IF NO QUALIFICATION GIVEN      SI16101307500
                   IF DICT[(T2+1).ZW,(T2+1).ZY].SAMNAM = 0 THEN%   SI16101308000
              BEGIN LOCUS ~ T2;%IF THIS IS UNIQUE AND THE QUALIFI- SI16101309000
                    GO TO BE;  %CATIONS ARE SUPERFLUOUS, BYPASS    SI16101310000
              END;             %SEARCH.                            SI16101311000
              DO                                                 %TR-34501312000
              BEGIN TZ~DICT[(T2+1).ZW,(T2+1).ZY];                %TR-34501312500
                    EDIT[TW~TW+1]~(DICT[T2.ZW,T2.ZY].HRLINK)&    %TR-34501313000
                    TZ[18:18:15] & T2[3:33:15]; T1~0&T2[33:33:15];%TR34501313500
              END UNTIL T2~TZ.SAMNAM=0; T2~0 & T1[33:33:15];     %TR-34501314000
                               %THE LOCATION OF EVERY OCCURANCE OF SI16101315000
                               %THE MOST FUNDAMENTAL ITEM IS IN THESI16101316000
                               %[3:15] OF EDIT, TO BE USED TO SET  SI16101317000
                               %LOCUS IF WE GET UNIQUENESS.        SI16101318000
                               %THE 2ND 64 WORDS OF EDIT HOLD THE  SI16101319000
                               %HRLINK-S AND OCUR-S OF THE HIGHEST SI16101320000
                               %LEVEL OF QUALIFICATION WE HAVE GOT-SI16101321000
                               %TEN TO;THE 1ST 64 SERVE AS A STACK SI16101322000
                               %FOR ALL PATHS THAT MAY LEAD TO THE SI16101323000
                               %UNIQUE(1 ITEM IN THE STACK) SPECIF-SI16101324000
                               %ICATION OF AN ITEM.                SI16101325000
                   UPPER ~ TW;              % SAVE UPPER BOUND    TR-38501325100
                   DO          %                                   SI16101326000
              BEGIN X~X+1;     %FOR EACH ITEM IN CCY OR UNTIL WE   SI16101327000
                   T1 ~ CCY[X+1];%GET A UNIQUE RESULT DO           SI16101328000
                   NRINSTACK ~ 0 ; TW1 ~ UPPER;                  %TR-38501329000
                   DO EDIT[(TW1~TW1+1)] ~  DICT[T1.ZW,T1.ZY].HRLINK% 16101330000
                    & T1[18:33:15] UNTIL (T1 ~            %        SI16101331000
                        DICT[(T1+1).ZW,(T1+1).ZY].SAMNAM)=0 OR   %TR-38501332000
                        TW1 > 128;                               %TR-38501332005
                   IF TW1 > 128 THEN % TOO MANY SAME NAMES       %TR-38501332100
              BEGIN     MSG[124] ~ "1347000" & 7[1:43:5];        %TR-38501332200
                        ERP(75&8[32:40:8]&124[24:40:8],0);       %TR-38501332300
                        COMPE ~TRUE; % COMPILE ERROR 1347000     %TR-38501332400
              END;                   % MAKE EDIT LARGER          %TR-38501332500
                   FOR K ~ 1 STEP 1 UNTIL TW DO %                  SI16101333000
              BEGIN            %FOR EVERY ITEM IN THE STACK        SI16101334000
                   T1 ~ EDIT[K].HRLINK; %                          SI16101335000
                   DO          %LOOK THRU HIERARCHY LINKS UNTIL A  SI16101336000
              BEGIN            %LINK POINTS TO AN ENTRY ON THE SAMESI16101337000
                   FOR A ~ UPPER+1 STEP 1 UNTIL TW1 DO% NAME LIST OF 38501338000
              BEGIN            %NEXT HIGHEST QUALIFIER.            SI16101339000
                   IF EDIT[A].SAMNAM = T1 THEN %                   SI16101340000
              BEGIN EDIT[NRINSTACK ~ NRINSTACK+1] ~ EDIT[K] &     %SI16101341000
                   T1[18:33:15]&DICT[T1.ZW,T1.ZY].HRLINK[33:33:15];% 16101342000
                   GO TO BL; %                                     SI16101343000
              END; %                                               SI16101344000
              END;%                                                SI16101344500
              END UNTIL (T1~DICT[T1.ZW,T1.ZY].HRLINK) = 0;%        SI16101345000
         BL:  END; %GO TO NEXT SAME-NAME ENTRY IN OUR STACK.       SI16101346000
                   TW ~ NRINSTACK; %CUT BACK STACK SIZE            SI16101347000
              END UNTIL X+2>CY;    % GO TO NEXT QUALIFIER          TR62801348000
                   IF NRINSTACK > 1 THEN %                         SI16101349000
              BEGIN COMPE ~ TRUE;% "MISSING QUALIFICATION"         SI16101350000
                    ERP( 9&84[32:40:8],0);%                        SI16101351000
              END ELSE %                                           SI16101352000
                   IF NRINSTACK = 1 THEN % UNIQUE,NON-AMBIGUOUSLY  SI16101353000
              BEGIN LOCUS ~ EDIT[1].[3:15];% QUALIFIED DATA NAME.  SI16101354000
                    GO TO BE;%                                     SI16101355000
              END ELSE % NOT FOUND                                 SI16101356000
                   IF CDIVN ! 4 THEN %                             SI16101357000
                   IF USW THEN %                                   SI16101358000
              BEGIN            %SET UP FORWARD DECLARATION FOR     SI16101359000
                   ISNAM(AVAIL,T2);% DATA DIVISION                 SI16101360000
                   ITYP(16,AVAIL);%                                SI16101361000
                   CLOC ~ 0;%                                      SI16101362000
                   IF T2~OILNK(T2) ! 0 THEN %                      SI16101363000
                    CLOC ~ INFO[T2.ZW,T2.ZY+2].[3:15];%            SI16101364000
                   IHLNK(RECOC,AVAIL);%                            SI16101365000
                   CCY[1] ~ LOCUS ~ AVAIL;%                        SI16101366000
                   AVAIL ~ AVAIL + 2;   %                          SI16101367000
                   GO TO BE;      %                                SI16101368000
              END;             %                                   SI16101369000
                   LOCUS ~ 0;  %                                   SI16101370000
         BE:  END SERCH;       %                                   SI16101400000
COMMENT MOVE GETERATOR CONTROL ;                                        01405000
COMMENT ***************************  MGENC   *************************; 01407000
PROCEDURE MGENC (GETA,GETB,LITF,ZRA,FIGC,LOW,OCA,OCB,ALL,OCBL,OCAL,     01410000
                             %MOVE GENERATOR CONTROL                    01410001
                   RAL,RBL,QAL,QBL,FLOATED);                            01415000
                             %NOTE: A REFERS TO SOURCE , B TO DEST      01415001
              VALUE GETA,GETB,LITF,ZRA,FIGC,LOW,OCA,OCB,OCBL,OCAL,      01420000
                   RAL,RBL,QAL,QBL;                                     01425000
              INTEGER GETA,GETB,OCA,OCB,ALL,OCBL,OCAL,RAL,RBL,          01430000
                   QAL,QBL;                                             01435000
              BOOLEAN LITF,ZRA,FIGC,LOW,FLOATED;                        01440000
              BEGIN                                                     01445000
              INTEGER CDI        ;%TRUE IF DEBIT-CREDIT TO BE INSERTED  01450000
              INTEGER CPB        ;%CHECK PROTECTION FLAG                01455000
              INTEGER FSB        ;%FLOATING DOLLAR SIGN FLAG            01460000
              INTEGER ICHR       ;%INSERT CHAR WHEN GENERATING SYLLABLE 01465000
              INTEGER QA;      %WORD INDEX (QX) OF A.                   01485000
              INTEGER BV         ;                                      01505000
              INTEGER FIT        ;%TRUE IF A WILL FIT INTO B.           01510000
              INTEGER DNBR       ;%CHAR LOC SIGN IS DATA NAME(B).       01525000
              INTEGER F          ;                                      01530000
              INTEGER INT        ;%SIZE OF B MINUS SCALE OF B.          01535000
              INTEGER DNBP       ;%PRT LOC OF SIGN IS DATA NAME(B).     01540000
              INTEGER DNBQ       ;%WRD LOC OF SIGN IS DATA NAME(B).     01545000
              INTEGER DF         ;                                      01550000
              INTEGER HX         ;%INDEX FOR H(EDIT)PART OF EDIT ARRAY[ 01555000
              INTEGER DM         ;%DUMMY WORD FOR UNSED PARAMETERS      01560000
              INTEGER ASGTB;   %PRT ASSIGNMENT OF PX OF B.              01585000
              INTEGER ASGTA;   %PRT ASSIGNMENT OF PX OF A.              01590000
              INTEGER CLA;   COMMENT CLASS OF SOURCE;                   01600000
              INTEGER RB;  COMMENT RX FOR DEST;                         01610000
              INTEGER RA;  COMMENT RX FOR SOURCE;                       01615000
              INTEGER LFPA;    %LEFT PART SOURCE.                       01620000
              INTEGER PCB        ;%TRUE IF PICTURE GIVEN FOR B.         01625000
              INTEGER OP         ;%OP TYPE WHEN GENERATING SYLLABLE     01630000
              INTEGER LVB        ;%LEAVING INTEGER PLACES  SIGNAL FOR B 01640000
              INTEGER JSB        ;%B JUSTIFIED.                         01645000
              INTEGER JSA        ;%A JUSTIFIED.                         01650000
              INTEGER JX         ;%INDEX FOR J PORTION OF EDIT ARRAY.   01655000
              INTEGER REPT       ;%REPEAT FIELD WHEN GENERATING SYLLABL 01660000
              INTEGER QB;   COMMENT QX FOR DESTINATION;                 01665000
              INTEGER SDNP;  COMMENT SOURCE-DN SIGN PX;                 01670000
              INTEGER USEA;  COMMENT USAGE FOR SOURCE;                  01675000
                             %USAGE   0 = DISPLAY                       01675001
              INTEGER USEB;  COMMENT USAGE FOR DEST;                    01680000
                             %        1 = COMPUTATIONAL                 01680001
              INTEGER SCL;     %SCALE OF SOURCE.                        01685000
              INTEGER SCB;     %SCALE OF DESTINATION.                   01690000
              INTEGER SGA;     %SIGN IN SOURCE.                         01695000
              BOOLEAN MISIGN;  %TRUE IF SIGN IS OVER DIGIT DROPPED.     01695010
              INTEGER SGB;     %SIGN IN DESTINATION.                    01700000
              INTEGER STKADJ     ;                                      01710000
              INTEGER STEMP      ;%TEMP SIGN LOCATION IN STACK.         01715000
              INTEGER STEMPB     ;%TEMP SIGN LOCATION IN STACK FOR B.   01720000
              INTEGER STKA       ;%TEMP STORAGE IN STACK FOR A ADDRESS. 01725000
              INTEGER STKB       ;%TEMP STORAGE IN STACK FOR B ADDRESS. 01730000
              INTEGER ZSB        ;%ZERO SUPPRESS DESTINATION.           01765000
              INTEGER SFDA       ;                                      01770000
              INTEGER SFDB       ;                                      01775000
              INTEGER SGPA       ;%A HAS REPORT SIGN.                   01780000
              INTEGER SGP ;    %B HAS REPORT SIGN.                      01785000
              INTEGER W          ;%TEMP                                 01790000
              INTEGER BZB;                                              01800000
              INTEGER SDNQ;    %SOURCE SIGN DATANAME WORD POSITION.     01805000
              INTEGER SDNR;    %SOURCE SIGN DATANAME CHAR. POSITION.    01810000
              INTEGER X1;      %TEMP                                    01815000
    INTEGER TA,TB,TC,TD,TE;                                             01816000
                   LABEL J74, J85, MGCX, J2, J1, JS6,                   01820000
                   JS7,J44,JJS,                                         01825000
                   JJBP,L1,L2,L3,L4,                   COMMENT 3-3-64;  01825010
                   J65,J66;                            COMMENT 3-10-64; 01830000
COMMENT ***************************   MSET   *************************; 01832000
COMMENT GETS INFORMATION FROM DICT FOR MOVE  ;                          01835000
PROCEDURE MSET (OCUR,SIZE,CLASS,USAGE,SCALE,LFP,SIGNED,PX,QX,RX,DPX,DQX,01840000
                   DRX,FS,ZS,RB,CP,LV,JS,SETEDIT,SZF,PCF,SGP,JX,HX);    01845000
                   VALUE OCUR,SETEDIT;  INTEGER OCUR,SIZE,CLASS,USAGE,  01850000
                   SGP,JX,HX,SZF,RB,                                    01855000
                   SCALE,LFP,SIGNED,PX,QX,RX,DPX,DQX,DRX,LV,JS,FS,      01860000
                   ZS, CP, PCF;  BOOLEAN SETEDIT;                       01865000
              BEGIN INTEGER G,H,K,PCT;                                  01870000
              REAL TT;                                                  01870020
              LABEL MSEX;                                               01870050
                   SIGNED~0; PX~0; QX~0; RX~0; DPX~0; DRX~0; DQX~0;     01880000
                   LV~JS~FS~ZS~0;                                       01885000
                   RIP ~0;                             COMMENT 2-27-64; 01885050
                   RB~CP~0;                                             01890000
                   X~ OILNK (OCUR);  SGP~0;                             01895000
                   IF OTYP(OCUR) = 9 THEN                               01895010
              BEGIN  CLASS~2; G~OFOL(OCUR); OAS(PX,QX,RX,G);            01895020
                             %CLASS SET TO ALPHANUMERIC                 01895021
                   SIZE~0; USAGE~0; SCALE~0;              COMMENT 9-1;  01895022
                   PCF~0; WHILE G{X DO               COMMENT 2-4 1500;  01895030
              BEGIN  IF OELEF(G) THEN                                   01895040
              BEGIN SIZE~SIZE+MAPSZ(G);                                 01895050
                    USAGE~OUSG(G);                                      01895060
              END;                                                      01895070
              END;    LFP~SIZE;  GO TO MSEX;                            01895080
              END;             %FOR SPEFIFIED ITEM SET UP               01895100
                   CLASS ~ OCLAS (OCUR);%  CLASS                        01900000
                   USAGE ~ OUSG (OCUR);%  USAGE                         01905000
                   SCALE ~ OSCALE (OCUR);%  SCALE                       01910000
                   SIZE ~ IF OELEF(OCUR) THEN OFSZ(OCUR)%  SIZE         01915000
                   ELSE MAPSZ(OCUR);                                    01915010
                   OAS (PX,QX,RX,OCUR);                                 01920000
                   JCV (X+1,G,H);                                       01935000
                   TT~INFO[G,H];%                                       01935010
                   SIGNED~OSGN(OCUR);%  SIGNED FLAG                     01940000
                    JS ~ TT.[1:2];%  JUSTIFIED                          01945000
                   LV ~ TT.[5:5];%  LEAVING                             01950000
                   SGP~TT.[10:1];%  SIGN TYPE                           01990000
                   IF SIGNED = 3 THEN  % SIGN IS DATA-NAME     %TR 410  02000000
              BEGIN IF SIGNISDN(INFO[G,H+2].[18:15]) THEN      %TR 410  02001000
                   OAS(DPX,DQX,DRX,INFO[G,H+2].[18:15])        %TR 410  02005000
                   ELSE SIGNED ~ 1;                            %TR 410  02006000
              END;                                             %TR 410  02009000
                   SZF~INFO[G,H+2].[3:15];                              02010000
                   K~4;  COMMENT PICTURE SETS RELATIVE ADDRESS;         02015000
                   LFP ~ INFO [G,H].[13:6];%GET LEFT PART FROM INFO     02020000
                   IF CLASS < 3 THEN%IF ALPHA OR ALPHANUMERIC THEN      02025010
              BEGIN                                                     02025020
                   IF SIZE > 63 THEN LFP ~ SIZE;                        02025050
                             %FOR LARGE ALPHANUMERIC FIELDS             02025051
              END ELSE                                                  02025060
              BEGIN  ZS~TT.[38:1];  RB~TT.[39:1];                       02025080
                   FS~TT.[40:1];  CP~TT.[41:1];                         02025100
              END;                                                      02025120
                   JCV (X,G,H);                                         02030000
                   PCF ~ INFO [G,H].[31:1];%SET PICTURE FLAG            02035000
                   IF PCF = 0 THEN                                      02035010
              BEGIN IF LFP = 0 AND SCALE } 0 THEN LFP~SIZE-SCALE;       02035020
              END                                                       02035030
                   ELSE        %SET RIGHT INSERT                        02035050
                   IF SETEDIT THEN                                      02040000
              BEGIN JCV(X +2,G,H);                     COMMENT 2-26-64; 02050000
                   X~INFO[G,H].[18:15];                COMMENT 2-26-64; 02055010
                   PCT~OLEVL(X); RIP~OFOL(X);          COMMENT 2-26-64; 02055015
                   JCV(X+2,G,H);                                        02055020
                   FOR X~0 STEP 1 UNTIL 65 DO EDIT[X]~0;                02060000
                             %ZERO EDIT ARRAY                           02060001
                    T1~1;   T2~0;                                       02065000
                   FOR X~1 STEP 1 UNTIL PCT DO                          02065010
                             %SET UP EDIT ARRAY FROM PICTURE DATA       02065011
              BEGIN            %  CONTAINED IN DICTIONARY. EACH         02070000
                    EDIT[T1]~ IF T2 = 0 THEN                            02070010
                             %  ENTRY TAKES HALF WORD IN DICT,          02070011
                   DICT[G,H].[1:23] ELSE                                02070020
                             %  FULL WORD IN THE EDIT.T2 CONTROLS       02070021
                   DICT[G,H].[24:24];%  IF FROM FIRST OR SECOND HALF.   02070030
                    IF EDIT[T1].[30:5] = 3 THEN%IF A " SIGNED" KEY THEN 02070040
              BEGIN EDIT[T1+6]~EDIT[T1];  EDIT[T1]~0;                   02070050
                             % MOVE IT TO LEAVE SPACE FOR LATER         02070051
              IF SGP ! 0 AND EDIT[T1+6].[25:5] ! 0% ADJUSTMENTS         02070052
              AND EDIT[T1-1].[30:5] = 1 AND                             02070054
                  EDIT[T1-1].[35:7] = 1 AND                             02070056
                  EDIT[T1-1].[42:6] = 48 THEN                           02070058
           BEGIN EDIT[T1+5] ~ EDIT[T1-1];%                              02070060
                 EDIT[T1-1] ~ 0;                                        02070062
           END;                                                         02070064
           END;                                                         02070066
                     IF EDIT[T1].[30:5] = 16 THEN                       02070070
                             %IF IT IS THE TR/EDIT SEPARATOR THEN       02070071
              BEGIN JX~X; HX~63-EDIT[T1].[42:6];                        02070080
                     T1~HX-X-1;                                         02070090
              END;                                                      02070100
                     T2~T2+1;   IF T2 > 1 THEN                          02075000
              BEGIN   T2~0;   H~H+1;                                    02080000
              END;                                                      02085000
                      T1~T1+1;                                          02090000
              END;                                                      02095000
                   IF SIGNED = 1 THEN%IF SIGN-IS-DATA-NAME              02095020
              BEGIN FOR X~0 STEP 1 UNTIL (JX+  9) DO                    02095022
                             %LOOK THRU ARRAY FOR SIGN KEY              02095023
              BEGIN IF EDIT[X].[30:5]=3 THEN                            02095030
                             %IF FOUND MOVE IT TO  JX+10.               02095031
              BEGIN EDIT[JX+10]~EDIT[X];                   COMMENT 4-7; 02095040
                   EDIT[X]~0;  GO TO MSEX;                 COMMENT 4-7; 02095050
              END;                                         COMMENT 4-7; 02095054
                   EDIT[JX+10] ~50 & 3[30:43:5];% ELSE BUILD ONE        02095056
              END;                                                      02095060
              END;                                                      02095070
              END;                                                      02105000
       MSEX:                                                            02105010
              END;                                                      02110000
COMMENT ***************************   FLOT   *************************; 02112000
COMMENT  GENERATES FLOAT SYLLABLES ;                                    02115000
PROCEDURE FLOT (LIM,FCHR,ICHR,FIT,STEMPB);                              02120000
                   VALUE LIM,FCHR,ICHR,FIT,STEMPB;                      02125000
                   INTEGER LIM,FCHR,ICHR, FIT,STEMPB;                   02130000
              BEGIN INTEGER BY,BX,Y,Z;   LABEL FLOX;                    02135000
                   INTEGER  BU, BW;                              %SI-   02135010
                   IF ICHR=48 THEN%IF INSERTING BLANKS.                 02135100
              BEGIN IF FIT !1 THEN                        COMMENT 8-24; 02135200
              BEGIN CEMLT(1,TBN);LIM~LIM-1;               COMMENT 8-24; 02135300
                   BY~CHMX; CHMX~CHMX+2;                  COMMENT 8-24; 02135400
              END;                                        COMMENT 8-24; 02135500
                   CEMLT (LIM,TBN);MGCXFLG~TRUE;          COMMENT 8-24; 02135600
              END ELSE                                    COMMENT 8-24; 02135700
              BEGIN                                       COMMENT 8-24; 02135800
                    IF FIT ! 1  THEN%IF FIT FLAG FALSE                  02140000
              BEGIN   CEMLT (0,TNE);                                    02145000
                    CEMLT (3,JFC);                                      02150000
                      CEMLT(17,TAN);                                    02160000
                   CEMLT (1,JFC)     ;                                  02165000
                   CEMLT (0,JFW)     ;                                  02170000
                   BX~CHMX-2                                            02175000
              END;                                                      02180000
                   CEMLT (LIM,BNS)     ;                                02185000
                   CEMLT (0,TNE)     ;                                  02190000
                   CEMLT (2,JFC)     ;                                  02195000
                   CEMLT (17,TLS)     ;                                 02200000
                   BU ~ CHMX;                                    %SI-   02200010
                   CEMLT (4,JNC);                      COMMENT 3-3-64;  02205000
                   CEMLT (1,TRP)     ;                                  02210000
                   IF FCHR = 43 OR FCHR = 42 THEN CEMLT(0, FCHR) %SI-   02215000
                   ELSE CEMLT (0,ICHR);                          %SI-   02215100
                   CEMLT (1,SFS);                                       02220000
                   CEMLT (0,ENS)     ;                                  02240000
              END;                                        COMMENT 6- 1; 02240100
                   IF FCHR = 0 OR FCHR = 63 THEN GO TO FLOX;            02245000
                             %IF FLOAT CHAR A ZERO OR A "               02245001
                   IF FCHR = ICHR THEN GO TO FLOX;                      02250000
                   IF FCHR = 43 THEN                             %SI-   02250110
                                                                 %SI-   02250120
              BEGIN CEMLT(1,SFS);  CEMLT(1, SFD);                %SI-   02250130
                   CEMLT(ICHR, BNS);  CEMLT(0,TEQ);              %SI-   02250140
                   BW ~ CHMX;  CHMX ~ CHMX + 2;                  %SI-   02250150
                   CEMLT(1, SFS);  CEMLT(0, ENS);                %SI-   02250160
                                   CEMLT(ICHR, TRP);             %SI-   02250170
                   FOR T9 ~ 1 STEP 2 UNTIL ICHR DO CEMLT(43,43); %SI-   02250180
                   Z ~ ((CHMX - BW) DIV 2) - 1; CEMIT(Z, JNC, BW);%SI-  02250210
                   Z ~ ((CHMX - BU) DIV 2) - 1; CEMIT(Z, JNC, BU);%SI-  02250230
                   GO TO FLOX;                                   %SI-   02250240
              END;                                               %SI-   02250250
                   CEMLT (1,SRD)     ;                                  02255000
          COMMENT TEST FOR + OR - ;                                     02260000
                   IF FCHR = 16 OR FCHR = 44 THEN                       02265000
                             %IF FLOAT CHAR IS A + OR A -               02265001
              BEGIN CEMLT(STEMPB,CRF);CEMLT(0,JFW);       COMMENT 8-14; 02270000
              END;                                        COMMENT 8-14; 02275000
                   CEMLT (1,TRP)     ;                                  02280000
                    CEMLT(0,(IF FCHR = 44 THEN 48 ELSE FCHR));          02285000
                   IF FCHR = 44 OR FCHR = 16 THEN%IF FLOAT CHAR IS A -  02290000
                   BEGIN                                                02295000
                   CEMLT ( 2, JFW);                                     02315000
                   CEMLT (1,TRP)     ;                                  02320000
                   CEMLT (0,44)     ;                                   02325000
              END;                                                      02330000
       FLOX:       IF FIT ! 1 THEN                                      02335000
              BEGIN                                                     02340000
                   Z~((CHMX-BX) DIV 2) - 1;                             02340500
                   IF BX ! 0 THEN CEMIT(Z,JFW,BX);                      02345500
                   Z ~((CHMX-BY) DIV 2) -1;               COMMENT 8-24; 02345550
                   IF BY!0 THEN CEMIT(Z,JFC,BY);          COMMENT 8-24; 02345600
              END                                                       02350000
              END;                                                      02355000
COMMENT ***************************  INSRT   *************************; 02357000
COMMENT EMITS INSERTION OF CHARACTERS FROM PROGRAM STRING;              02360000
 PROCEDURE INSRT (COUNT,ICHR); %EMITS TRP SYLLABLES AND CHARACTERS.     02365000
              VALUE COUNT,ICHR;                                         02370000
              INTEGER COUNT,ICHR;                                       02375000
              BEGIN LABEL LX;                                           02380000
                   INTEGER X;                                           02385000
                   IF COUNT { 0 THEN GO TO LX;%IF NO CHARS. GET OUT.    02390000
                   IF COUNT < 7 THEN%IF # CHARS. < 7 EMIT IN LINE       02395000
              BEGIN CEMLT (COUNT,TRP)     ;                             02400000
                   IF (COUNT MOD 2) ! 0 THEN                            02405000
                             %IF ODD # OF CHARACTERS THEN               02405001
              BEGIN CEMLT (0,ICHR)     ; COUNT~COUNT-1                  02410000
                             % EMIT A ZERO/CHAR COMBO,ADJ COUNT.        02410001
              END;  FOR X ~ 1 STEP 2 UNTIL COUNT  DO                    02415000
                             %EMIT  CHAR/CHAR COMBO UNTIL PROPER        02415001
                   CEMLT (ICHR,ICHR)     ; GO TO LX                     02420000
                             % NUMBER ARE GENERATED                     02420001
              END;             %IF MORE THAN 7 CHAR,EMIT IN NEST.       02425000
                   WHILE (COUNT>124) DO%IF MORE THAN 124 CHAR, EMIT IN  02430000
              BEGIN INSRT(124,ICHR);COUNT~COUNT -124;                   02435000
                             %  NESTS OF 62 | 2 CHAR PLUS               02435001
              END; IF (COUNT MOD 2) !0 THEN%  REMAINDER.                02440000
              BEGIN CEMLT(1,TRP); CEMLT(0,ICHR);         COMMENT 11-12; 02445000
                   COUNT ~COUNT -1;                      COMMENT 11-12; 02447000
              END;  X~ COUNT DIV 2;                      COMMENT 11-12; 02450000
                   IF X=0 THEN GO TO LX;                       %CJC 009 02450500
                   CEMLT(X,BNS);  CEMLT(2,TRP);          COMMENT 12-13; 02451000
                   CEMLT(ICHR,ICHR); CEMLT(0,ENS);       COMMENT 11-12; 02455000
 LX:          END;                                                      02460000
COMMENT **************************   LITINS  *************************; 02462000
COMMENT  INSERTS LITERALS OR FIGURATIVE CONSTANTS INTO PROGRAM  ;       02465000
PROCEDURE LITINS (X,ICHR,FIGC,COUNT,BV,ALL);                            02470000
                   VALUE X,ICHR,FIGC,COUNT;                             02475000
                   INTEGER X,ICHR,COUNT,BV,ALL;                         02480000
                   BOOLEAN FIGC;                                        02485000
              BEGIN  INTEGER CC,DD,E,F,G,W,T1,T2,                       02490000
                    T3,T4,T5,TINS;                                      02490008
DEFINE   BOO  = BOOLEAN(W)#, BO= W~REAL #, ODD = BOOLEAN(COUNT.[47:1])#;02490009
LABEL    LX,LETSLV;                                                 %39402490010
                   BV~CHMX; T2~0;                                       02500000
                   TINS ~ COUNT;                                        02500050
                   ICHR~LTR[0].[24:6];%LITERAL IS MOVED TO ICHR.        02505000
                   IF FIGC OR ALL = 1 THEN                              02510000
                             %IF FIGURATIVE CONSTANT OR "ALL" THEN      02510001
              BEGIN INSRT (COUNT,ICHR); GO TO LX                        02515000
              END;                                                      02520000
                    T1~(T5 ~ALL+4) DIV 8; T5 ~ T5 MOD 8;                02525000
                   IF ALL ! 0 THEN                                      02530000
              BEGIN  CHRTRAN (LTR,4,LTR[T1],T5,1);                      02535000
              END;                                                      02540000
                   IF LTR[27] < COUNT AND ALL = 0 THEN                  02545000
                             %IF SIZE IS LESS THAN # OF CHARACTERS      02545001
              BEGIN   CC~COUNT;  COUNT~DD~LTR[27];                      02550000
                             %SAVE COUNT, REPLACE COUNT WITH SIZE       02550001
              END;                                                      02555000
                    IF BOOLEAN(BO(COUNT>63))AND ALL!0 THEN CEMLT(1,SDA);02555010
                    CEMLT (IF BOO THEN IF ODD THEN     % GENERATE PROPER02555020
                            63 ELSE 62 ELSE COUNT,TRP);% TRP            02555030
                   IF ALL = 0 THEN T2 ~ T2 + SFAL;                      02560500
                    IF ODD THEN                                         02565000
              BEGIN   CHRTRAN(LTR[(W~LTR[18]+4+T2)DIV 8],F:=W MOD 8,W   02565010
                      ,7,1);                                            02565015
                        CEMLT(0,W);                                     02565020
                        COUNT ~ COUNT-1;                                02570000
                             %EMIT LITERAL PROGRAM CHARACTER.           02570001
                        T2 ~ T2 +1;                                     02575000
              END;      T2 ~ T2 + LTR[18];                              02575055
                        W ~ COUNT;                                      02575060
                        E ~ T3 ~ T4 ~ 0;                                02580000
                   FOR T1~1 STEP 2 UNTIL COUNT DO                       02585000
              BEGIN  F~T2+4; G~F MOD 8;                                 02590000
                    F ~ F DIV 8;                                        02595000
                    CHRTRAN(LTR[F],G,T3,7,1);                           02595010
                    CHRTRAN(LTR[F],G+1,T4,7,1);                         02595020
                   CEMLT (T3,T4)     ; T2~T2+2; IF ALL ! 0 THEN         02600000
              BEGIN IF T2 } ALL THEN T2~T2-ALL                          02605000
              END;                                                      02610000
                    IF (E~E+2)> 61 THEN                             %39402610010
              BEGIN     E ~ 0;                                      %39402610020
                        W ~ W - 62;                                 %39402610030
                        IF ALL > T1 OR W LSS 21 OR ALL = 0 THEN         02610040
                             IF W>0  THEN CEMLT                     %39402610050
                                     ((IF W>62 THEN 62 ELSE W),TRP) %39402610060
                             ELSE                                   %39402610070
         LETSLV:                  T1 ~ COUNT + 1                    %39402610080
                        ELSE                                        %39402610090
              BEGIN          CEMLT (1,RDA);                         %39402610100
                             CEMLT((T1~IF ALL<8THEN ALL|8ELSE ALL),SFD);02610200
                             CEMLT (1,RSA);                         %39402610300
                             IF (W~TINS  - T1)} 3969 THEN           %39402610400
              BEGIN               CEMLT (W DIV 3969,BNS);           %39402610500
                                  CEMLT (63,BNS);                   %39402610700
                                  CEMLT (63,TRS);                   %39402610800
                                  CEMLT ( 0,ENS);                   %39402610900
                                  CEMLT ( 0,ENS);                   %39402611000
              END;           IF (W~W MOD 3969)} 63 THEN             %39402611500
              BEGIN               CEMLT (W DIV 63,BNS);             %39402612000
                                  CEMLT (63,TRS);                   %39402612500
                                  CEMLT ( 0,ENS);                   %39402613000
              END;           IF (W~W MOD 63)>0 THEN CEMLT ( W,TRS); %39402614500
                             GO TO LETSLV;                          %39402614800
              END; END;                                             %39402614900
              END;                                                      02615000
                   IF CC ! 0 THEN                                       02620000
              BEGIN  CC~CC-DD;  DD~IF CLB = 3 THEN 0 ELSE 48;           02625000
                    INSRT (CC,DD);                                      02630000
              END;                                                      02635000
       LX:         LTR[18] ~ LTR[18] + TINS;                            02640000
              END;                                                      02640050
COMMENT **************************   TSGNA   *************************; 02772000
COMMENT EMITS CHARACTER MODE TO GET AND TEST SIGN BITS FOR DN SIGN ;    02775000
PROCEDURE TSGNA (SGA,STEMP,STKA,REPT);                                  02780000
                   VALUE SGA,STEMP,STKA,REPT;                           02785000
                   INTEGER SGA,STEMP,STKA,REPT;                         02790000
              BEGIN   LABEL TSL;                                        02795000
                   IF SGA = 3 THEN                                      02800000
              BEGIN CEMLT (STEMP,SES)     ;                             02805000
                   CEMLT (7,SFS)     ;                                  02810000
       TSL:        CEMLT(1,BIT);                                        02815000
                    CEMLT(2,JFC);                                       02820000
                   CEMLT (1,BSS)     ;                                  02830000
                   CEMLT(0,BIT);                                        02835000
              END  ELSE                                                 02840000
              BEGIN  IF SGA = 2 THEN                                    02845000
              BEGIN CEMLT (STKA,RSA)     ;                              02850000
                   GO TO TSL;                                           02855000
              END;                                                      02855010
                   IF SGA = 1 THEN                                      02860000
              BEGIN CEMLT(STKA,RSA);  CEMLT(REPT-1,SFS);                02865000
                   GO TO TSL                                            02870000
              END                                                       02875000
              END                                                       02880000
              END;                                                      02890000
COMMENT START MOVE GENERATOR CONTROL HERE   ;                           02930000
                   ASGTA~GETA;  ASGTB~GETB;%INITIALIZATION.             02935000
                   SFAL~0;   RIP~0;%NOTE: A REFERS TO SOURCE            02935400
                   SZA ~0;     % B REFERS TO DESTINATION.               02940000
                   HX~64;                                               02945000
                   MISIGN~FALSE;                                        02945010
                    JX~0;                                               02990000
                   FOR X~0 STEP 1 UNTIL 65 DO EDIT[X]~0;                03045000
                             %CLEAR EDIT ARRAY.                         03045001
                   PCB~0;  IF LITF OR CDIVN = 31 THEN                   03050000
                             %IF A LITERAL OR WORKING STORAGE OR        03050001
              BEGIN            % CONSTANT SECTION THEN                  03055000
                   GETA~0; CLA~LTR [31]; USEA~LTR [30];                 03060000
                             %GET INFO ON SOURCE FROM LTR ARRAY.        03060001
                   SZA~LTR [27]; LFPA~LTR [28]; SCL~LTR [29];           03065000
                   SGA~LTR [26]; ASGTA ~ LTR [25]; QA~LTR [24];         03070000
                   RA~LTR [23]; SDNP~LTR [22]; SDNQ~LTR [21];           03075000
                   SDNR ~ LTR[20];                             %CJC 029 03080000
              END ELSE                                                  03085000
              BEGIN                                                     03090000
                   IF GETA!0 THEN                         COMMENT N-27; 03095000
                             %IF NOT CALLED BY ESTORE                   03095001
              BEGIN MSET (GETA,SZA,CLA,USEA,SCL,LFPA,SGA,ASGTA,QA,RA,   03100000
                             %CALL MSET TO GET INFO ON A.               03100001
                   SDNP,SDNQ,SDNR,DM,DM,DM,DM,DM,JSA,FALSE,SFDA,DM,     03105000
                   SGPA,JX,HX);                                         03110000
                   IF RNL=99999999999 THEN                COMMENT N-19; 03110500
         COMMENT SENDING FIELD IS RENAMES THRU ITEM;      COMMENT N-19; 03111000
              BEGIN SZA~OCA; CLA~2; USEA~0; SCL~0; JSA~0; COMMENT N-19; 03111500
                   LFPA~SZA; SGA~0; OCA~0; SDNP~0; SDNQ~0;COMMENT N-19; 03112000
                   SDNR~0; SGPA~0; DM~0; SFDA~0; RNL~0;   COMMENT N-19; 03113000
                   OAS(ASGTA,QA,RA,GETA);                 COMMENT N-19; 03113500
              END;                                        COMMENT N-19; 03114000
              END                                                       03115000
              END;                                                      03120000
                   IF GETB ! 0 THEN%IF INFO ON B NOT PRESENT            03125000
                    MSET (GETB,SZB,CLB,USEB,SCB,LFP,SGB,ASGTB,QB,RB,    03130000
                             %CALL MSET TO GET INFO ON B.               03130001
                   DNBP,DNBQ,DNBR,FSB,ZSB,BZB,CPB,LVB,JSB,TRUE,SFDB,    03135000
                   PCB,SGP,JX,HX);                        COMMENT 9-01; 03135500
                   IF MGCXFLG THEN                        COMMENT 9-10; 03135550
         COMMENT MOVE LITERAL TO RENAMES THRU ITEM;       COMMENT 9-10; 03135600
              BEGIN MGCXFLG~FALSE;SZB~OCA; CLB~2; USEB~0; COMMENT 9-10; 03135650
                   SCB~0; LFP~SZB; SGB~0; DNBP~0; DNBQ~0; COMMENT 9-10; 03135700
                   DNBR~0; FSB~0; ZSB~0; BZB~0; CPB~0;    COMMENT 9-10; 03135750
                   LVB~0; JSB~0; SFDB~0; PCB~0; SGP~0;    COMMENT 9-10; 03135800
                   OCA~0;                                 COMMENT N-19; 03135850
              END;                                        COMMENT 9-10; 03135900
                   IF ACC THEN %IF CALLED BY ESTORE AN INTERMED-        03136000
              BEGIN CLA~3; USEA~0; SGA~1; ASGTA~TARRLOC;                03136500
                             %IATE OUTPUT CONVERT HAS BEEN MADE         03136501
                             %TO TARRLOC (TRASH PRT LOCATION)           03136700
                   QA~0; RA~0; SDNP~0; SDNQ~0; SDNR~0;    COMMENT 9-01; 03137000
                   SGPA~0; IF GETA=0 THEN                 COMMENT N-27; 03137300
              BEGIN JCV(OILNK(GETB)+1,J,K);               COMMENT N-27; 03137400
                   LFPA~INFO[J,K].[13:6]; SCL~OSCALE(GETB COMMENT N-27; 03137500
                   ); SZA~LFPA+(IF SCL<0 THEN 0 ELSE SCL);COMMENT N-27; 03137700
              END;                                        COMMENT N-27; 03139500
              END;                                        COMMENT 9-01; 03140000
                   IF LITF AND ALL!0 THEN JSB~0;          COMMENT 4-03; 03140001
                   IF SGPA ! 0 THEN SGA ~4;%IF REPORT SIGN IN A         03140010
                   IF SGP ! 0 THEN SGB~4;%IF REPORT SIGN IN B           03140020
                   IF LITF AND SGB ! 0 THEN                             03140100
              BEGIN  IF LTR[19] = 0 THEN                                03140110
              BEGIN X~16;  CHRTRAN(X,7,CNP[CNQ.[38:3],                  03140120
                   CNQ.[41:7]],CNR,1);                                  03140130
                   SDNP~CNPL; SDNQ~CNQ-1; SDNR~CNR;                     03140140
                   CNR~CNR+1; CNQ~CNQ+(CNR DIV 8); CNR~CNR MOD 8;       03140150
                   SGA ~ 3;                                             03140160
              END;                                                      03140170
              END;                                                      03140180
                   IF (FSB+ZSB+CPB)!0 AND SCB{0 AND LVB=0 THEN BZB~1;   03142000
                   IF NOT ZOBOL AND CDIVN=31 THEN         COMMENT 9-01; 03142001
              BEGIN IF ALL=0 AND%IF NOT A FIGURATIVE OR NOT ALL AND     03143000
                   (LFPA>LFP OR (SCL>SCB AND (CLB=4 OR                  03143100
                             % A HAS LARGER LFT.PRT.,SCALE,OR SIZE      03143101
                   CLB=3)) OR SZA>SZB)                    COMMENT 9-01; 03143200
                   THEN ERP(1&81[32:40:8],0);%"MOVE TRUNCATION"         03143500
         COMMENT LITERAL TRUNCATION;                      COMMENT 9-01; 03144000
              END;                                        COMMENT 9-01; 03144500
                   IF CDIVN = 31 THEN%IF WORKING STORAGE OR CNSTNT SECT 03145000
              BEGIN CLB~CLASS; SCB~SCALE; SZB~SIZE;%SET UP B FIELDS.    03150000
                   IF ASGTA ! 0 THEN LITF~FALSE;                        03155000
                   USEB~USAGE; SGB~SGND;                                03160000
              END;                                             %CJC 024 03160100
                   IF SZA = SZB THEN JSB ~ 0;                  %CJC 024 03165000
                   INT ~ SZB - SCB; IF INT < 0 THEN INT ~0;             03165003
                   IF SCB<0 AND RIP=0 THEN RIP~-SCB;                    03165005
                             %IF SCALE OF B < 0 THEN SET RIP TO         03165006
                             % PLUS VALUE OF SCALE.                     03165007
                   IF SCB>SZB THEN SFAL~SFAL +SCB-SZB;                  03165008
                   IF SCB }SZB AND SGP=1 AND RIP !0 THEN SFAL~SFAL+1;   03165009
                    IF PCB = 0 THEN%IF NO PICTURE WAS GIVEN FOR DEST    03165010
              BEGIN IF FIGC OR ALL ! 0 THEN%IF FIGURATIVE OR "ALL"      03165020
              BEGIN T1~SZB; JX~0; HX~64;WHILE T1>0 DO                   03165030
                             %SET INDICIES INTO EDIT ARRAY.             03165031
              BEGIN  EDIT[JX] ~ 0 &                                     03165035
                               (IF CLB = 3 THEN 10 ELSE 11)             03165040
                             %BUILD TEMP PICTURE FOR EDIT ARRAY.        03165041
                    [30:43:5] & (IF T1 < 127 THEN T1 ELSE 127)          03165050
                             %ITERATE IF GREATER THAN 127               03165051
                    [35:41:7];  JX~JX+1;   T1~T1 - 127;                 03165060
                             %ADJUST INDICIES AND COUNTERS.             03165061
              END;                                                      03165070
                    GO TO J2;  %GO TO 03675000.                         03165080
              END;                                                      03165090
                    IF SZB > 127 OR   CDIVN !31 AND                     03165500
                             %IF FIG CONST., OR "ALL" AND NO PICTR      03165501
                   (NOT OELEF(GETB)OR(OTYP(GETB)=7 AND CLB<3))THEN      03165510
              BEGIN JX~0;HX~64;T2~IF SZB>SZA THEN                       03165520
                             %BUILD TEMP PICTURE IN EDIT.               03165521
                   SZA ELSE SZB; T1~T2;                COMMENT 2-27-64; 03165525
                   WHILE T1 > 0 DO                                      03165530
              BEGIN EDIT[JX]~0 &(IF CLB =3 THEN 10 ELSE 11)[30:43:5]    03165532
                   &(IF T1 > 127 THEN 127 ELSE T1)[35:41:7];            03165534
                   T1~T1 - 127;  JX~JX +1;%GO TO 03675000.              03165540
              END;                                                      03165560
                   T1~SZB - T2;%NO. OF CHAR FOR BLANK / ZERO FILL       03165700
                   WHILE T1 >0 DO%ITERATE IF GREATER THAN 127           03165710
              BEGIN EDIT[JX]~(IF CLB < 3 THEN 48 ELSE 0)                03165720
                   & 1[30:43:5] & (IF T1 > 127 THEN 127 ELSE T1)        03165730
                             %BUILD TEMP PICTURE IN EDIT ARRAY.         03165731
                   [35:41:7];  JX ~ JX +1;  T1 ~ T1 - 127;              03165740
              END;             %                                        03165750
                   GO TO J2;   %GO TO 03675000.                         03165760
              END;                                                      03165770
                   IF LFP < 0 THEN LFP ~ 0;%LEFT PART MAY NOT BE MINUS  03175050
                   JX~6; HX~64; IF LFP ! 0 THEN                         03180000
                             %SET EDIT INDICIES.IF B HAS LEFT PART      03180001
              BEGIN EDIT[1] ~0 & LFP[35:41:7] & (IF CLB > 2 THEN 10     03180010
                             %BUILD TEMP PICTURE IN EDIT.               03180011
                   ELSE 11) [30:43:5];                                  03180020
              END;             %                                        03180030
                   IF SCB>0 THEN%IF SCALE OF B GREATER THAN ZERO        03180032
              BEGIN T1~IF SCB > SZB THEN SZB ELSE SCB;                  03180033
                             %SAVE SMALLER OF SIZE OR SCALE OF B.       03180034
                   IF SCB > SCL THEN T1~T1+SCL-SCB;                     03180035
                    T6~T1; IF T1 < 0 THEN T1~0;                         03180036
                             %IF DECIMAL TO LEFT OF WORD SET T1~0.      03180037
                   IF T1 ! 0 THEN                                       03180038
              BEGIN                                                     03180039
                    EDIT[2]~1 & T1  [35:41:7] & 10 [30:43:5];           03180040
                             %TRANSFER NUMERIC                          03180041
                   IF SCL=0 THEN EDIT[2]~(IF CLB <3                     03180042
                   THEN 48 ELSE 0) & T1[35:41:7] &     COMMENT 3-11-64; 03180043
                   1 [30:43:5];                                         03180044
              END;   IF SCB > SCL THEN                                  03180045
              BEGIN EDIT[3] ~ 0 &(SCB-SCL)[35:41:7] & 1[30:43:5];       03180046
                   IF T6 < 0 THEN EDIT[3].[35:7]~SCB-SCL+T6;            03180047
              END;                                                      03180048
              END;                                                      03180049
                   T1~50; IF SGB!0 THEN%IF SIGN OF B NOT ZERO THEN      03180050
              BEGIN  IF SGB = 2 THEN T1~33;  IF SGB = 3 THEN            03180060
                   T1~20;  EDIT[4]~T1 & 3 [30:43:5];                    03180070
              END;                                                      03185000
              END;                                                      03190500
                   IF ACC THEN %TRUE IF COMP TO DISPLAY MOVE.           03200000
              BEGIN            %SET UP INFO FOR A.                      03205000
                   ACC~FALSE; IF GETA=0 THEN GO TO J2;    COMMENT N-27; 03205050
              END;                                        COMMENT 9-01; 03205100
                   IF JSB ! 0 THEN GO TO JJS;                  %CJC 024 03220000
                        % IF B-FIELD JUSTIFIED GO TO 03698000  %CJC 024 03220001
                   IF CLA = 4 THEN   % IF EDITED A-FIELD       %CJC 029 03225000
              BEGIN IF CLB { 2 THEN%IF CLASS B IS ALPH OR ALPH-NUM THEN 03230000
              BEGIN CLA~2; GO TO J85%SET CLASS OF A TO ALPHANUMERIC.    03235000
              END;                                                      03240000
                   IF GETA ! 0 AND GETB ! 0 THEN                        03240010
              BEGIN  IF SZA = SZB AND SGPA = SGP AND SZA = 1 THEN       03240020
                   GO TO J2;                                            03240030
              END;                                                      03240040
       J74:        EIND~40 & 43 [32:40:8] & 22 [24:40:8]                03245000
                             %"ILLEGAL MOVE OPERAND CLASS".             03245001
                   & 39 [16:40:8];  ERP (EIND,0);                       03245010
                   COMPE~TRUE; %DID NOT COMPILE.                        03250000
                   ASGTA~ASGTB~0; GO TO MGCX%                           03255000
              END;                                                      03260000
       J85:   IF LITF THEN     %IF LITERAL THEN                         03265000
              BEGIN                                             %TR 794 03270000
                   IF CLB <3 THEN CLA ~ 1 ELSE                  %TR 794 03275000
              BEGIN CLA ~ 3;                                    %TR 794 03280000
                   IF LOW THEN LTR[0] ~ 0;                      %TR 794 03285000
              END;                                              %TR 794 03286000
              END;                                                      03290000
                    IF FIGC THEN GO TO J2;%IF FIGURATIVE CONSTANT       03320000
                   IF ALL ! 0 THEN GO TO J2;%IF MOVING "ALL" THEN       03320050
                   IF SCB <0 THEN GO TO J1;                             03325010
                             %IF THE SCALE OF B < ZERO THEN             03325011
                   IF CLB<3 THEN%IF B IS ALPHA/ALPHANUMERIC THEN        03330000
              BEGIN DF~0; SCL~SZA; SCB~SZB;%SET SCALES EQUAL TO SIZES.  03335000
                   FOR W~ 1 STEP 1 UNTIL JX DO                          03340000
                             %LOOP THRU J PORTION OF EDIT ARRAY.        03340001
              BEGIN IF EDIT [W].[30:5] = 1 THEN DF~DF+EDIT [W].[35:7]   03345000
                             %IF ACTION CODE = INSERT THENSVAE #        03345001
                             % OF CHARACTERS TO BE INSERTED.            03345002
              END;             %                                        03350000
                   IF SZA < (SZB-DF) THEN                               03355000
                             %IF SIZE A < SIZE B LESS INSERTS THEN      03355001
              BEGIN X1~0; X~0; FOR W~1 STEP 1 UNTIL JX DO               03360000
                             %LOOP THRU J PORTION OF EDIT ARRAY.        03360001
              BEGIN IF EDIT [W].[30:5] ! 1 THEN X~X+EDIT [W].[35:7]     03365000
                             %IF ACTION CODE NOT INSERT SAVE # OF       03365001
                             % NON INSERT CHARACTERS.                   03365002
                   ELSE X1~X1+EDIT[W].[35:7];                           03370000
                             %ELSE SAVE NUMBER OF INSERTS.              03370001
                   IF X } SZA THEN%IF NON-INSERTS > SIZE OF A THEN      03375000
              BEGIN DF~X-SZA;  %SAVE DIFF BETWEEN NON-INSERTS,SIZE A    03380000
                   EDIT [W].[35:7]~EDIT [W].[35:7]-DF;                  03385000
                             %REDUCE NON-INSERTS BY THIS DIFFERENC      03385001
                   IF (SZB-DF) ! 0 THEN%IF THIS WILL NOT FILL B THEN    03390000
                   X~(DF+(SZB-X)-X1);%SET UP WORD TO CAUSE BLANKS TO BE 03395000
                   WHILE X > 0 DO                        COMMENT 1-7-5; 03396000
              BEGIN EDIT[HX]~48 &(IF X >124 THEN 124                    03400000
                             % INSERTED INTO REMAINDER.                 03400001
                  ELSE X)[35:41:7]& 1[30:43:5];          COMMENT 1-7-5; 03401000
                   HX~HX-1; X~X-124;                     COMMENT 1-7-5; 03402000
              END;                                                      03410000
                   FOR X~W+1 STEP 1 UNTIL JX DO EDIT [X]~0;             03415000
                             %ZERO OUT REMAINDER OF J PORTION OF        03415001
                   GO TO J2    % EDIT ARRAY.                            03420000
              END                                                       03425000
              END;                                                      03430000
              END;             %                                        03435000
                   GO TO J2;   %                                        03445000
              END;                                                      03450000
                   IF LITF AND(SCB-RIP)=SCL THEN GO TO J1;%             03450010
                   IF SCL { 0 THEN%IF THE SCALE OF A { 0 THEN           03450100
              BEGIN  FOR X ~ 1 STEP 1 UNTIL JX DO                       03450110
                             %  SEARCH J PORTION OF EDIT                03450111
              BEGIN  IF EDIT[X].[30:5] = 10 AND%  FOR TRANSFERS         03450120
                   EDIT[X].[42:6] = 1 THEN                              03450130
                             %  TO RIGHT OF DECIMAL. IF ANY             03450131
              BEGIN  EDIT[X].[30:5] ~ 1;%  CHANGE TO INSERT LIKE NUMBER 03450140
                   EDIT[X].[42:6] ~ 0;%  OF ZEROES                      03450150
              END;                                                      03450160
              END;                                                      03450170
                   IF SGA =1 THEN MISIGN ~ TRUE;                        03450175
                   GO TO J1;                                            03450180
              END;                                                      03450190
                   IF NOT LITF AND                    COMMENT 2-18-64;  03451000
                   (SCL}SZA AND SCB<SZB) THEN         COMMENT 2-18-64;  03451001
              BEGIN FOR X~1 STEP 1 UNTIL JX DO                          03451020
              BEGIN IF EDIT[X].[30:5]=10 AND EDIT[X].[42:6]=0 THEN      03451040
                             %SEARCH FOR TRANSFER TO LEFT OF DECML      03451041
              BEGIN EDIT [X].[30:5] ~ 1;                                03451060
                             %  IF FOUND CHANGE TO INSERT ZERO          03451061
              END;             %  FOR LIKE NUMBER OF CHARACTERS         03451080
              END;                                                      03451100
              END;                                                      03451140
                   IF SCB > SCL AND PCB ! 0 THEN                        03460000
                             %IF SCALE B > SCALE A AND PICTURED         03460001
              BEGIN T4~SCB-(IF SCL >0 THEN SCL ELSE 0)-RIP;             03465000
                             %SCALE B - SCALE A(IF -)- RGHT INSRT       03465001
                   IF NOT LITF AND SGP=1 AND RIP!0 THEN T4~T4+1;%       03465002
                   T4~ IF T4 < 0 THEN 0 ELSE T4;                        03465100
                   EDIT[JX] ~ 0 & T4[35:41:7] &%SET UP TO INSERT ZEROES 03470000
                    1 [30:43:5];  JX~JX+1;                              03475000
                   IF SCB > SZB THEN%IF SCALE B GRTR THAN SIZE B THEN   03475010
              BEGIN T7~EDIT[JX-1].[35:7];                               03475015
                   EDIT[JX-1].[35:7]~IF T7 < SZB THEN T7 ELSE SZB;      03475020
                             %MODIFY NUMBER OF CHARACTERS.              03475021
              END;                                                      03475030
                     IF EDIT[JX] ! 0 THEN                               03475050
                             %IF NEXT WORD OF ARRAY IS NOT ZERO         03475051
              BEGIN EDIT[JX+1]~ EDIT[JX];  EDIT[JX]~0;                  03475060
                             % MOVE IT UP ONE WORD. ZERO ORIGINAL.      03475061
              END;                                                      03475070
                   FOR F~1 STEP 1 UNTIL JX DO                           03480000
                             %LOOP THRU J PROTION OF EDIT.              03480001
              BEGIN IF EDIT[F].[30:5] =10                               03485000
                             %IF ACTION CODE IS TRF NUM/ALPHA WITH      03485001
                   AND EDIT [F].[42:6] = 1 THEN                         03490000
                             % A 1 CHARACTER TYPE THEN                  03490001
              BEGIN  IF T4 > EDIT[F].[35:7] THEN                        03490010
                             %IF SCB - SCL-RIP > # CHARACTERS THEN      03490011
              BEGIN  T4~T4-EDIT[F].[35:7];  EDIT[F]~0;                  03490020
                             %THAT AMOUNT IS REDUCED BY # CHAR, WRD     03490021
              END  ELSE        % IN EDIT SET TO ZERO ELSE               03490040
                   EDIT [F].[35:7]~EDIT [F].[35:7]-T4                   03495000
                             %# CHAR IS REPLACED BY THAT AMOUNT.        03495001
               ;   IF EDIT[F].[35:7] = 0 THEN EDIT[F] ~ 0;              03495005
                             %IF # CHAR IS ZERO, ZERO OUT WORD.         03495006
                   GO TO J1;                                            03495007
              END;                                                      03495010
              END;             %                                        03500000
              END;             %                                        03505000
    J1:                        %                                        03525000
                   T10~0;      %                                        03530000
                   T5~IF SCL<0 THEN -SCL ELSE 0;                        03535000
                             % WILL NOT FIT. GO TO 03675000.            03535001
                   IF LFPA< 0 THEN GO TO J2;                            03535010
                             %IF LFT.PRT. A > ZERO GO TO 03675000.      03535011
                   T6 ~LFPA-LFP;                      COMMENT 2-22-64;  03535020
                   T3~(IF SCB < 0 THEN -SCB ELSE 0);                    03535050
                   IF (SCL <0 AND (-SCL+LFPA) > (-SCB+LFP)) OR          03535080
                      (SCL<0 AND(SCL<SCB)) OR             COMMENT 6-15; 03535085
                   (SCL > SZA AND SCB } 0) OR                           03535090
                   ((SCL = SZA AND SCB } 0) AND NOT LITF) OR            03535095
                   (SCB { 0 AND SCB > SCL) OR                           03535100
                   LFPA>(LFP+T3) OR SCB>SZB THEN                        03540000
                             %IF LFPA >LFP +(NEG SCB OR 0) OR           03540001
                             %  THE SCALE A > B THEN                    03540002
              BEGIN            %                                        03545000
                   SFAL~T6+SFAL;                      COMMENT 2-22-64;  03545050
                   IF SFAL<0 THEN SFAL~0;            COMMENT 1/28 1400; 03545060
                   IF SCB >SZB THEN T7~(SCB-SZB)+RIP ELSE T7~0;         03570200
                   T8 ~ IF SCL > SZA THEN SCL - SZA ELSE 0;             03570250
                   T9~T5 - T3;                         COMMENT 3-16-64; 03570300
                   T5 ~ T6 + T7 - T8 + T9;%                             03575000
                   IF T5> 0 THEN                                        03575100
              BEGIN EDIT[0] ~ 0 & T5[35:41:7] & 14[30:43:5];            03575150
                             %INSERT SKIP FWD SCOURCE CODE              03575151
              END;                                                      03575200
                   T9~ IF T9 <0 THEN 0 ELSE T9;                         03575250
                   IF SCL<0 AND T6<0 THEN                               03575260
                             %SEQ NO 03575260 THROUGH 03580000          03575261
              BEGIN T10~(-T6-T9); IF T10<0 THEN T10~0;                  03575270
                             %  PERFORM PRIMARY ADJUSTMENTS ON          03575271
              END;             %  DEVELOPED PICTURES FOR DIFFER-        03575290
                   IF T9!0 THEN%  ENCEN IN SIZE, SCALE, ETC.            03575300
              BEGIN  TA~JX; TB~-1; TC~0; TD~0; TE~1;                    03575500
L1:                FOR X~TA STEP TB UNTIL TC DO                         03575700
              BEGIN  IF EDIT[X].[30:5] = 10 AND                         03576300
                   EDIT[X].[42:6]=TD THEN                               03576600
              BEGIN  T8 ~ EDIT[X].[35:7]; IF T8 { T9 THEN               03576800
              BEGIN  EDIT[X] ~ 0 & T8[35:41:7]&                         03577300
                   1[30:43:5]; T9~T9-T8;                                03577600
                   IF T9{0 THEN GO TO L4;              COMMENT 3-3-64;  03577650
              END ELSE                                                  03577700
              BEGIN  EDIT[X].[35:7] ~ T8-T9;                            03577800
                   IF TE = 0 THEN EDIT[X].[13:7]~T9    COMMENT 3-3-64;  03578000
                   ELSE EDIT[X].[20:7]~T9;             COMMENT 3-3-64;  03578010
                   GO TO L4;                           COMMENT 3-3-64;  03578020
              END;                                                      03579000
              END;                                                      03579010
              END;                                                      03579020
L4:                IF T10!0 THEN                       COMMENT 3-3-64;  03579021
              BEGIN T9~T10;T10~0; GO TO L2;            COMMENT 3-3-64;  03579022
              END ELSE                                 COMMENT 3-3-64;  03579023
                   GO TO J2;                                            03579025
              END;                                                      03579030
                   IF T8 ! 0 THEN                                       03579040
              BEGIN T9 ~T8 - T7;                                        03579050
                   IF T9 > 0 THEN                                       03579070
              BEGIN TD~1;                             COMMENT 2-22-64;  03579075
    L3:            TA~1; TB~1; TC~JX; TE~0;           COMMENT 2-22-64;  03579080
                   GO TO L1;                                            03579090
              END;                                                      03579180
              END;                                                      03579210
                   T9 ~ -T6;  IF T9 > 0 THEN GO TO L2;                  03579212
                   GO TO J2;                                            03579220
              END;             %                                        03580000
                   T9~LFP-LFPA +T3-T5;                COMMENT 2-22-64;  03595030
                   T9 ~ IF T9 > SZB THEN SZB ELSE T9;                   03595040
    L2:            TD~0; GO TO L3;                    COMMENT 2-22-64;  03595120
       J2:    IF DNBP ! 0 THEN                                          03675000
              BEGIN JX~JX+1;EDIT[JX]~20 & 3[30:43:5];  COMMENT 3-10-64; 03680000
              END;                                                      03690000
                    IF SGA = 1 AND SCB < SCL THEN MISIGN~TRUE;          03690010
                             %IF SIGNED CHARACTER IS OUT OF RANGE       03690011
                   T1~LFPA; T2~LFP;%  OF RECEIVING FIELD SET FLAG.      03695000
                   IF SCL<0 THEN T1~T1-SCL;               COMMENT 8-24; 03696000
                   IF SCB<0 THEN T2~T2-SCB;               COMMENT 8-24; 03697000
JJS:               FIT~REAL(CLB!4 OR T1<T2);              COMMENT 8-24; 03698000
                   IF NOT FIGC AND JSB ! 0 THEN                %CJC 024 03700000
                        % IF B-FIELD JUSTIFIED                 %CJC 024 03700001
              BEGIN                                                     03705000
                   T1 ~ 0;                                     %CJC 024 03706000
                   IF LITF THEN%IF A LITERAL                            03710000
              BEGIN X~CNQ MOD 128; IF X > 105 THEN                      03710010
              BEGIN  CNQ~CNQ+116;  CNQ.[41:7]~0; CNR~0;                 03710020
              END;   X~LTR[27];  T4~0;  T3~CNQ; WHILE X > 0 DO%X ~ SIZE 03710030
              BEGIN CHRTRAN(LTR[T4],4,CNP[T3.[38:3],                    03710040
                             %MOVE LITERAL TO CONSTANT POOL.            03710041
                   T3.[41:7]],CNR,(IF X > 56 THEN 56 ELSE X));          03710050
                   X~X-56;  T4~T4+7;  T3~T3+7;                          03710060
              END;   ASGTA~CNPL; QA~CNQ-1; RA~CNR;                      03710070
                   CNR~CNR+LTR[27]+1;      CNQ~CNQ+(CNR DIV 8);         03710080
                    CNR~CNR MOD 8; JSA~0; SZA~LTR[27];  OCA~0;          03710090
              END;                                                      03710100
                   IF SZA > SZB THEN %SENDING FIELD LARGER     %CJC 024 03720000
              BEGIN IF OCA ! 0 THEN T1~SZA-SZB ELSE                     03725000
                   RA ~ RA + (SZA - SZB);  SZA ~ SZB;          %CJC 024 03730000
              END;  EMIL (OPR,MKS)     ;                                03740000
                   IF OCB ! 0 THEN EMIL (OPDC,RBL)      ELSE            03745000
                   EMIL (LITC,RB)     ;  IF OCA ! 0 THEN                03750000
              BEGIN EMIL (LITC,T1)     ;  EMIL (OPDC,RAL)     ;         03755000
                   EMIL (OPR,ADD)                                       03760000
              END ELSE EMIL (LITC,RA)     ;                             03765000
                   EMIL (LITC,0)     ;  EMIL (LITC,SZB)     ;           03770000
                   IF OCB ! 0 THEN EMIL (OPDC,QBL)      ELSE            03775000
                   EMIL (LITC,QB)     ;  EMIL (DESC,ASGTB)     ;        03780000
                   EMIL (LITC,SZA)     ;                                03785000
                   IF OCA ! 0 THEN EMIL (OPDC,QAL)      ELSE            03825000
                   EMIL (LITC,QA)     ;  EMIL (DESC,ASGTA)     ;        03830000
                   EMIL(OPDC,JUST1);%CALL FIXED PROCEDURE JUST1.        03880000
                   GO TO MGCX;                                 %CJC 024 04290000
              END;                                                      04295000
       JJBP:                                                            04300000
                    IF (BZB+FSB+ZSB+CPB) ! 0 THEN                       04300010
                             %IF EDITED NUMERIC THEN                    04300011
              BEGIN LABEL J21,J4,J4A;                                   04300020
                   IF BZB ! 0 THEN                                      04305000
              BEGIN  IF ZRA THEN                                        04310000
              BEGIN FOR X~0 STEP 1 UNTIL 65 DO EDIT[X]~0;               04315000
                             %ZERO OUT EDIT ARRAY                       04315001
                   EDIT[1]~48 & 1[30:43:5] & SZB[35:41:7];              04320000
                             %WILL CAUSE B FIELD TO BE FILLED           04320001
                   GO TO J4;   % WITH BLANKS                            04325000
              END;                                                      04330000
                   EDIT[65] ~ 0 & 5 [30:43:5] & SZB [35:41:7];          04335000
              END;                                                      04345000
                   IF FSB ! 0 THEN%IF FLOAT DOLLAR SIGN THEN            04350000
              BEGIN IF CPB ! 0 THEN                                     04355000
              BEGIN CPB~0;  EDIT[HX]~49;                                04360000
              END ELSE EDIT[HX]~42 & 2[30:43:5];                        04365000
                             %SET UP FLOAT WORD IN EDIT                 04365001
        J21:       EDIT[HX].[35:7] ~ INT - LVB;  GO TO J4A;             04390000
              END;                                                      04395000
                   IF ZSB ! 0 THEN%IF ZERO SUPPRESS THEN                04400000
              BEGIN EDIT [HX].[30:5]~4; GO TO J21;                      04405000
                             %SET ZERO SUPP. CODE IN EDIT               04405001
              END;                                                      04410000
                   IF CPB ! 0 THEN%IF CHECK PROTECT THEN                04415000
              BEGIN EDIT[HX].[30:5]~6;%SET CHECK PROTECT CODE IN EDIT   04420000
                   EDIT[HX].[42:6]~ INT - LVB;                          04445000
              END;                                                      04450000
      J4A:         HX ~ HX - 1;                                         04450005
       J4:    END;                                                      04450010
       J44:         CDI~0;                                              04455000
COMMENT  GENERATES NORMAL MODE CALLS ON GENERATED CHARACTER MODE MOVES; 05025000
              BEGIN INTEGER DLE,Z,X;                      COMMENT 8-21; 05030000
                   LABEL STF,FLT2,BWZ1,CHP1,BZE,FLT1,  COMMENT 3-10-64; 05030020
                   NR,NZ,NW,NP,NY,                        COMMENT 8-21; 05030030
                   CDD4,TRNC2,SGR,TRNC,PASS,PASS1;        COMMENT 8-26; 05030050
                   INTEGER ZSCC,   ZSCL;               COMMENT 3-10-64; 05030060
                   DLE~0; Z~SDNP+SGA+SGPA;                              05035000
                             %ACCUMULATE A FIELD SIGN FLAGS             05035001
                   X~DNBP+SGP+SGB;%ACCUMULATE B FIELD SIGN FLAGS        05035050
                   STKADJ~3;STEMP~0;STEMPB~0;             COMMENT 8-19; 05040000
                   STKA~2;STKB~1;%INITIALIZE TEMP STACK ADDRESSES       05045000
                   IF CLB=3 AND (X=0 OR Z=0) THEN                       05050000
                             %IF EITHER ACCUMULATED SIGN FLAGS = 0      05050001
              BEGIN  SDNP~0; DNBP~0; SGP~0;%SET SIGN FLAGS TO ZERO      05055000
                    SGPA~0; SGA~0;  GO TO NY;                           05055050
              END;                                                      05060000
                   IF SDNP ! 0 THEN%IF SOURCE DATA-NAME SIGN            05065000
              BEGIN IF DNBP ! 0 THEN%IF RECEIVING FIELD D-N SIGN        05070000
              BEGIN EMIL(LITC,0);DLE~1;STEMPB~5;STKADJ~5;               05075000
                             %SET STACK POSITIONS FOR WORKING-WTOR      05075001
                             % FOR DATA-NAME SIGNS                      05075002
       NR:         EMIL (OPR,MKS)     ;  EMIL (LITC,0)     ;            05080000
                             %SET UP CALL ON ADNSIGN TO GET             05080001
       NZ:         EMIL (OPR,MKS)     ;                                 05085000
                             %  SOURCE DATA-NAME SIGN INTO STACK        05085001
       NW:         EMIL (LITC,SDNQ)     ;                               05090000
                   EMIL (DESC,SDNP)     ;                               05095000
                   EMIL (LITC,SDNR)     ;                               05100000
                   EMIL (OPDC,ADNSIGN)     ;                            05105000
                   STEMP~3; GO TO NP;                                   05110000
                             %DYNAMIC SIGN TEMP-STOR AT STACK #5        05110001
              END;                                                      05115000
                   STKADJ~4;IF SGP !0 THEN                              05120000
                             %IF REPORT SIGN RECEIVING FIELD            05120001
              BEGIN EMIL(OPR,MKS); STKADJ~5;                            05125000
                             %SET UP STACK FOR WORKING STORAGE FOR      05125001
                   EMIL (LITC,0)     ;%   SIGN HANDLING                 05130000
                   EMIL(LITC,0); STEMPB~4;GO TO NZ;       COMMENT 8-19; 05135000
              END;  GO TO NR                                            05140000
              END;                                                      05145000
              BEGIN IF DNBP ! 0 THEN%IF RECEIVING FIELD IS D-N SIGN     05155000
              BEGIN STKADJ~4;DLE~1;EMIL(LITC,0);          COMMENT 8-19; 05160000
                   STEMPB~4; GO TO NY;                    COMMENT 8-19; 05165000
              END;  IF SGP ! 0 THEN%IF REPORT SIGNED RECEIVING FIELD    05170000
              BEGIN EMIL(OPR,MKS); STKADJ~4;              COMMENT 8-19; 05175000
                   EMIL(LITC,OPR); STEMPB~3;GO TO NP;                   05180000
                             %SIGN W-S IN STACK #5                      05180001
              END;                                                      05185000
              END;                                                      05190000
       NY:                                                              05195000
                   EMIL (OPR,MKS)     ;                                 05200000
       NP:         IF OCA ! 0 THEN%IF SENDING IS SUBSCRIPTED            05205000
              BEGIN OCAL~IF OCB = 0 THEN STKA+1 ELSE STKA+2;            05210000
                             %SET SUBSCRIPT STACK POSITION              05210001
                   EMIL (OPDC,RAL)     ; IF STEMPB ! 0 THEN             05215000
                    STEMPB~ STEMPB + 1; IF STEMP ! 0 THEN               05220000
                   STEMP~ STEMP + 1; STKADJ~ STKADJ + 1                 05225000
                             %MOVE SIGN W-S POSITIONS DOWN              05225001
              END;                                                      05230000
                   IF OCB ! 0 THEN%IF RECEIVING FIELD IS SUBSCRIPTED    05235000
              BEGIN OCBL ~ STKA + 1; %                                  05240000
                   EMIL(OPDC,RBL ); % CHARACTER OFFSET                  05240100
                   IF SZB > 1023 THEN%                                  05240200
              BEGIN IF CNR ! 0 THEN % CONSTANT POOL NEEDS WORD ADJUST   05240300
              BEGIN CNR ~ 0;       %                                    05240400
                   CNQ ~ CNQ + 1;  %                                    05240500
              END; %                                                    05240600
                   EMIL(LITC,CNQ-1);%                                   05240700
                   EMIL(OPDC,CNPL );%                                   05240800
                   CNP[CNQ.[38:3],CNQ.[41:7]]~ SZB;% HOLD SIZE IN       05240900
                   CNQ ~ CNQ + 1;%              CONSTANT POOL           05241000
              END  ELSE            %                                    05241100
                   EMIL(LITC,SZB  );%                                   05241200
                   EMIL(OPR ,ADD );% # OF CHAR. IN MOVE                 05241300
                   EMIL(LITC,1   );%                                    05241400
                   EMIL(OPR ,SUB );%                                    05241500
                   EMIL(DIA ,30  );%  IDV BY 8 FOR NR WORDS INVOLVED    05241600
                   EMIL(ISO ,21  );%  IN THE MOVE.                      05241700
                   EMIL(OPDC,QBL );%                                    05241800
                   EMIL(OPR ,ADD );% WORD INDEX OF LAST WORD TO BE      05241900
                   EMIL(OPR ,DUP );% MOVED INTO.                        05242000
                   EMIL(LITC,1023);%                                    05242100
                   EMIL(OPR ,GRT );% MIN(1023,WORDNDX) SO THAT HARDWARE 05242200
                   EMIL(LITC,1   );% CAN GIVE INVALID INDEX.            05242300
                   EMIL(OPR ,BFC );%                                    05242400
                   EMIL(LITC,1023);%                                    05242500
                   EMIL(DESC,ASGTB);% REFERENCE LAST WORD TO BE MOVED   05242600
                                    % INTO TO BE SURE IT IS NOT OUT OF  05242700
                   EMIL(OPR,  DEL );% DATA AREA;INV INX WILL RESULT IF  05242800
                   EMIL(OPDC,RBL ); % IT IS.                            05243000
                   IF STEMPB ! 0 THEN STEMPB~ STEMPB + 1;               05245000
                             %MOVE SIGN W-S STACK POSITIONS             05245001
                   IF STEMP ! 0 THEN STEMP~ STEMP + 1;                  05250000
                   STKADJ~   STKADJ +1                                  05255000
              END;                                                      05260000
                   T1 ~ IF OCA = 0 THEN LITC ELSE OPDC;                 05285000
                   IF ASGTA ! 0 AND NOT LITF THEN                       05290000
                             %SET UP SENDING FIELD DESCRIPTOR IF        05290001
              BEGIN  EMIL (T1,(IF OCA = 0 THEN QA ELSE QAL));           05295000
                             %   NOT LITERAL SENDING FIELD              05295001
                   EMIL (DESC,ASGTA);                                   05295010
              END ELSE                                                  05300000
              BEGIN  EMIL (T1,0)                                        05305000
              END;                                                      05310000
                   IF OCB ! 0 THEN EMIL(OPDC,QBL) ELSE    COMMENT 6- 1; 05350000
                   EMIL(LITC,QB);                         COMMENT 6- 1; 05351000
                   EMIL(DESC,ASGTB);                      COMMENT 6- 1; 05352000
                   EMIL(OPR,CMN);%CALL CHAR MODE PROCEDURE              05355000
COMMENT TEMPORARY; SGMTLVL ~ SGMTLVL + 1;                               05355001
COMMENT SOURCE AND DEST REGISTERS TO A AND B FIELD LOCATIONS ;          05465000
                   T2~0;T3~0;  MGCXFLG~FALSE;             COMMENT 8-19; 05466000
                   IF OCB ! 0 THEN%IF RECEIVING IS SUBSCRIPTED          05470000
              BEGIN  QB~0;  RB~0;                                       05475000
              END;   IF OCA ! 0 THEN%IF SENDING FIELD IS SUBSCRIPTED    05480000
              BEGIN   QA~0;   QB~0;                                     05485000
              END;                                                      05490000
                     FLOATED ~ FALSE;%"LOCATION OF REGISTERS KNOWN"     05495000
                   IF NOT LITF THEN CEMLT(STKA,RSA);                    05505000
                             %SET SOURCE TO SENDING FIELD LOC           05505001
                             %SET SENDING TO ARITH. OPERAND IN STK      05510000
                   IF OCA = 0 THEN                                      05515000
              BEGIN                                                     05520000
                   IF RA ! 0 THEN                                       05525000
              BEGIN T2~1;                                 COMMENT 8-19; 05526000
                   CEMLT (RA,SFS)     ;%ADJUST TO CHAR POSITION         05530000
              END;                                        COMMENT 8-19; 05531000
              END ELSE                                                  05535000
              BEGIN CEMLT(OCAL,CRF); CEMLT(0,SFS);                      05540000
                             %IF SUBSCRIPTED THEN ADJUST TO             05540001
                   T2~1;                                  COMMENT 8-24; 05544000
              END;             %   DYNAMIC CHAR LOCATION                05545000
                   IF OCB = 0 THEN                                      05555000
              BEGIN                                                     05560000
                   IF RB ! 0 THEN                                       05565000
              BEGIN T3~1;                                 COMMENT 8-19; 05566000
                   CEMLT (RB,SFD)     ;%ADJUST TO CHAR POSITION         05570000
              END;                                        COMMENT 8-19; 05571000
              END ELSE                                                  05575000
              BEGIN CEMLT (OCBL,CRF); CEMLT(0,SFD);                     05580000
                             %ADJUST TO CHAR LOCATION BASEC ON          05580001
                   T3~1;                                  COMMENT 8-24; 05584000
              END;             %  RESULT OF SUBSCRIPT CALC              05585000
                   FOR X ~ 0 STEP 1 UNTIL 65 DO                         05585100
              BEGIN T1 ~ EDIT[X].[30:5];                                05585200
                             %CHECK EDIT ARRAY FOR ACTION CODES         05585201
                   IF T1 = 17 OR (T1 > 1 AND T1 < 9) OR                 05585300
                             %  THAT WILL LATER DO RECALL SOURCE        05585301
                   T1 = 13 THEN                                         05585400
              BEGIN                                                     05585500
                   IF T2=1 THEN                           COMMENT 8-19; 05594000
                   CEMLT(STKA,SSA);%SAVE REGISTER SETTINGS FOR LATER    05595000
                   IF T3=1 THEN                           COMMENT 8-19; 05599000
                   CEMLT(STKB,SDA);%  USE IF EDITING REQUIRED           05600000
                    GO TO STF;                                          05600100
              END;                                                      05600200
              END;                                                      05600300
      STF:                                                              05600400
COMMENT  TABLE INTERPRETIVE LOOP   ;%INTERPRETS EACH WORD IN EDIT ARRAY 05610000
                    X1~0;     ZSCL~0;                                   05625050
                   FOR X~0 STEP 1 UNTIL 65 DO                           05630000
                             %SET UP LOOP THRU EDIT ARRAY.              05630001
              BEGIN OP  ~ EDIT [X].[30:5];                              05635000
                             %OPERATOR TYPE              USED FOR       05635001
                    REPT ~ EDIT [X].[35:7];                             05640000
                             %REPT CHARACTERS            BUILDING       05640001
                    ICHR ~ EDIT [X].[42:6];                             05645000
                             %INSERT CHARACTERS          SYLLABLES      05645001
                   IF OP =0 OR OP >17 THEN GO TO PASS;                  05660000
                             %IF UNUSED ACTION CODE                     05660001
         COMMENT INSERT CHARACTERS;                                     05665000
                   IF OP = 1 OR OP = 7 THEN                             05670000
                             %IF "INSERT" OR "BLANK INSERT"             05670001
              BEGIN                                                     05675000
                   INSRT(REPT,ICHR);  GO TO PASS;                       05680000
              END;                                                      05685000
                   IF OP = 2 THEN%IF "FLOAT"                            05690000
              BEGIN                                                     05695000
         COMMENT FLOAT CHARACTERS ;                                     05700000
                   FIT ~ IF ICHR =0 THEN 1 ELSE 0;                      05705000
                   IF ICHR = 16 OR ICHR = 44 THEN%IF + OR - THEN        05710000
              BEGIN IF SGA = 0 THEN                                     05715000
              BEGIN CEMLT(0,SEC);CEMLT(STEMPB,STC); GO TO FLT2;%        05720000
              END;                                                      05725000
                   IF MISIGN OR SGA > 1 THEN TSGNA(SGA,STEMP,STKA,SZA); 05730000
                   CEMLT(0,SEC);                                        05744000
                   CEMLT (1,JFC)     ;                                  05745000
                   CEMLT (3,SEC)     ;                                  05750000
                   CEMLT (STEMPB,STC)     ;                             05755000
              END;                                                      05760000
FLT2:              CEMLT(STKB,RDA); CEMLT(STKB,RSA);      COMMENT 5-1;  05765000
                   FLOATED~TRUE;                          COMMENT 5-1;  05765002
                   IF ICHR = 49 THEN%IF INSERT CHAR IS A SLASH          05770000
              BEGIN FLOT(REPT,42,43,FIT,STEMPB);       COMMENT 3-10-64; 05775000
                   GO TO PASS1;%                                        05780000
              END;                                                      05785000
       FLT1:       IF (EDIT[X+1].[30:5] = 2) AND                        05790000
                             %IF MOVE CODE INDICATES EDIT               05790001
                   (EDIT [X+1].[42:6] = ICHR) THEN                      05795000
              BEGIN REPT~REPT + EDIT[X+1].[35:7]; X~X +1;               05800000
                   GO TO FLT1                                           05805000
              END;                                                      05810000
                   GO TO BZE;                          COMMENT 3-13-64; 05815050
              END;                                                      05825000
                   IF OP = 3 THEN%IF "SIGNED"                           05830000
              BEGIN                                                     05835000
         COMMENT SIGNED FIELD ;                                         05840000
              IF MISIGN OR SGA = 2 OR (SGA =3 AND SGB =4) THEN%         05845000
                   TSGNA(SGA,STEMP,STKA,SZA);                           05845010
                   FLOATED~TRUE;                                        05845020
                   IF ICHR = 20 THEN                                    05850000
              BEGIN CEMLT(STEMPB,SED);  CEMLT(7,SFD);                   05850010
                   IF SGA =3 THEN                                       05850020
              BEGIN CEMLT(STEMP,SES);  CEMLT(7,SFS);                    05850030
                   CEMLT(1,TRS);  GO TO PASS;                           05850040
              END;                                                      05850050
                   GO TO SGR;                                           05850100
              END;                                                      05850110
                   IF SGB = 4 THEN                                      05850120
              BEGIN IF EDIT[X].[25:5] = 0 THEN CEMLT(STKB,RDA) ELSE%    05855000
                   CEMLT(1,SRD);                                        05860000
         SGR:      IF SGA ! 0 THEN                                      05865000
              BEGIN CEMLT(3,JFC);  CEMLT(1,TRP);                        05870000
                   CEMLT(0,44);  CEMLT(2,JFW);%                         05875000
              END;                                                      05880000
                   CEMLT(1,TRP);                                        05885000
                   CEMLT(0,(IF ICHR =44 THEN 48 ELSE 16));              05890000
                             %IF INSERT CHAR IS + OR -.                 05890001
                   GO TO PASS; %                                        05895000
              END;                                                      05900000
                   IF SGA = 0 THEN  GO TO PASS;                         05900010
                   IF ICHR = 50 THEN                                    05905000
              BEGIN SGND ~ 50;  CEMLT(1,SRD);                           05910000
              END ELSE         %                                        05910005
              BEGIN  SGND ~ 33;  CEMLT(STKB,RDA);                       05910010
              END;                                                      05910020
                   IF SGA = 1 THEN                                      05915000
              BEGIN CEMLT(1,JFC);  CEMLT(1,BIS);  GO TO PASS;%          05920000
              END;                                                      05925000
                   IF SGA = 2 THEN CEMLT(STKA,RSA)  ELSE                05930000
              BEGIN CEMLT(STEMP,SES);  CEMLT(7,SFS);                    05935000
              END;             %                                        05940000
              CEMLT(1,TRZ);  GO TO PASS;%                               05945000
              END;                                                      06055000
                   IF OP = 4 THEN%IF "ZERO SUPPRESS"                    06060000
              BEGIN                                                     06065000
         COMMENT ZERO SUPPRESS  ;                                       06070000
                   CEMLT(STKB,RDA);                       COMMENT 8-26; 06075000
                   IF ICHR!0 THEN CEMLT(ICHR,SFD);                      06080000
                             %IF INSERT CHAR IS NOT ZERO THEN           06080001
                   ICHR~48;    %SET INSERT CHAR TO "BLANK"              06100000
BZE:                                                   COMMENT 3-13-64; 06100500
                   FLOT (REPT,ICHR,48,FIT,STEMPB);                      06105000
                    IF ZSCL ! 0 THEN                                    06110010
              BEGIN                                                     06110020
                   CEMLT(STKB,RDA);    CEMLT(STKB,RSA);                 06110040
                   CEMLT(ZSCC,BNS);   CEMLT(0,TEL);                     06110050
                    T10~CHMX;   CHMX~CHMX+2;                            06110060
                   CEMLT(1,SFS);   CEMLT(1,SFD);                        06110070
                   CEMLT(0,ENS);   CEMLT(ZSCL,BNS);                     06110080
                   CEMLT(0,TEL);                                        06110090
                   T9~CHMX;  CHMX~CHMX+2;                               06110100
                   CEMLT(1,SFS);   CEMLT(0,ENS);                        06110110
                   INSRT(ZSCL,48);                                      06110120
                   T8~((CHMX-T10) DIV 2)-1;                             06110130
                   CEMIT(T8,JNC,T10);                                   06110140
                   T8~((CHMX-T9) DIV 2)-1;                              06110150
                   CEMIT(T8,JNC,T9);                                    06110160
                   ZSCL~0;                                              06110170
              END;                                     COMMENT 3-10-64; 06110180
PASS1:             FLOATED~TRUE;  GO TO PASS;          COMMENT 3-13-64; 06110190
              END;             %                                        06115000
                   IF OP = 5 OR OP = 13 THEN                            06115100
                             %IF "BLANK WHEN ZERO" OR "BZ"              06115101
              BEGIN                                                     06120000
         COMMENT  BLANK WHEN ZERO ;                                     06125000
                   IF MGCXFLG THEN                        COMMENT 8-19; 06126000
              BEGIN T9~CHMX; CHMX~CHMX +2;                COMMENT 8-19; 06127000
              END;                                        COMMENT 8-19; 06128000
                   CEMLT(STKB,RDA); CEMLT(STKB,RSA);      COMMENT 5-1;  06130000
                   FLOATED~TRUE;                          COMMENT 5-1;  06130002
                   T10 ~ 0;                                             06130500
                   IF LITF THEN%IF LITERAL THEN                         06135000
              BEGIN IF ZRA THEN GO TO BWZ1%IF LITERAL ZERO THEN         06140000
              END; IF CDI = 0 THEN                                      06145000
              BEGIN CEMLT (REPT,BNS)     ;                              06150000
              END ELSE CEMLT (REPT-2,BNS)     ;                         06155000
                   CEMLT(0,TNE);  CEMLT(3,JFC);                         06160010
                    CEMLT(17,TAN);   CEMLT(1,JFC);                      06160020
                   T10~CHMX; CHMX~CHMX+2;                               06165000
                   CEMLT (1,SFS)     ;                                  06170000
                   CEMLT (0,ENS)     ;                                  06175000
 BWZ1:             ICHR ~ 48;  COMMENT  BLANK;                          06180000
                   IF NOT LITF THEN                       COMMENT 5-1;  06185000
              BEGIN                                       COMMENT 5-1;  06185002
                   CEMLT(STKB,RDA); CEMLT(STKB,RSA);      COMMENT 5-1;  06185004
              END;                                        COMMENT 5-1;  06190000
                   INSRT (REPT,ICHR);                                   06195000
                   IF DNBP ! 0 THEN                                     06200000
              BEGIN CEMLT (STEMPB,SED)     ;                            06205000
                   CEMLT (7,SFD)     ;                                  06210000
                   CEMLT (1,TRP)     ;                                  06215000
                   CEMLT (0,48)     ;                                   06220000
              END;                                                      06220200
                   IF T10 ! 0 THEN                                      06220400
              BEGIN T8 ~ ((CHMX - T10 ) DIV 2 ) - 1;                    06225000
                    CEMIT(T8,JNS,T10);                                  06225010
              END;                                                      06225500
                   IF MGCXFLG THEN                        COMMENT 8-19; 06230000
              BEGIN T8~((CHMX-T9)DIV 2)-1;                COMMENT 8-19; 06231000
                   CEMIT(T8,JFC,T9);                      COMMENT 8-19; 06233000
              END;                                        COMMENT 8-19; 06234000
                   GO TO PASS1;                        COMMENT 3-10-64; 06235000
              END;  IF OP = 6 THEN%IF "CHECK PROTECT"                   06240000
              BEGIN                                                     06245000
         COMMENT  CHECK PROTECT ;                                       06250000
                    FIT~0;  FLOATED~TRUE;                               06250050
                   CEMLT(STKB,RDA); CEMLT(STKB,RSA);      COMMENT 5-1;  06255000
         CHP1:     IF EDIT[X + 1].[30:5] ! OP THEN T1 ~ 43       %SI-   06260000
                             %IF MOVE CODE IS CHECK PROTECT             06260001
                   ELSE                                          %SI-   06265000
              BEGIN T1 ~ EDIT[X].[42:6];                         %SI-   06270000
                   ICHR ~ EDIT[X + 1].[42:6];                    %SI-   06275000
                   REPT ~ EDIT[X + 1].[35:7];                    %SI-   06285000
                   X ~ X + 1;                                    %SI-   06290000
              END;                                                      06295000
                   IF REPT ! 0 THEN                                     06300000
              BEGIN CEMLT (REPT,SFS); CEMLT (REPT,SFD);                 06305000
              END; FLOT(ICHR, 43, T1, FIT, STEMPB);              %SI-   06310000
                   FOR T6 ~ X+ 1 STEP 1 UNTIL 65 DO              %SI-   06310500
                   IF EDIT[T6].[30:5] = 5 OR EDIT[T6].[30:5] = 13%SI-   06310600
                   THEN EDIT[T6] ~ 0;                            %SI-   06310700
                   GO TO PASS1;                        COMMENT 3-10-64; 06315000
              END;             %                                        06320000
                   IF OP = 8 THEN%IF CR/DB EDIT"                        06340000
              BEGIN                                                     06345000
         COMMENT CR AND DB EDITING ;                                    06350000
                   CDI ~ 1 ;                                            06355000
                   IF FLOATED THEN                                      06370000
              BEGIN                                                     06375000
                   CEMLT(STKB,RDA);CEMLT(STKB,RSA);CEMLT(REPT,SFD);     06380000
              END;                                                      06385000
                   IF SGA = 0 THEN GO TO CDD4;                          06390000
                   IF MISIGN OR SGA > 1 THEN TSGNA(SGA,STEMP,STKA,SZA); 06395000
                   CEMLT(3,JFC);                                        06410000
                   CEMLT (2,TRP)     ;                                  06415000
                   IF ICHR = 19 THEN                                    06420000
                   CEMLT (19,41)      ELSE                              06425000
                   CEMLT (20,18)     ;                                  06430000
                   CEMLT (2,JFW)     ;                                  06435000
 CDD4:             CEMLT (2,TRP)     ;                                  06440000
                   CEMLT (48,48)     ;                                  06445000
                   GO TO PASS;                                          06450000
              END;             %IF "TRANSFER NUMERIC"                   06475000
                   IF OP=10 OR OP=11 THEN                 COMMENT 8-26; 06476000
              BEGIN                                                     06480000
          COMMENT TRANSFER ALPHA OR NUMERIC CHARACTERS    COMMENT 8-26; 06485000
TRNC:              IF EDIT[X+1].[30:5]= OP AND                          06490000
                             %IF NEXT WORD IS ALSO TRANSFER NUM         06490001
                   EDIT[X].[13:14]=0 AND                                06490005
                             %  AND NEITHER THIS NOR NEXT WORD          06490006
                   EDIT[X+1].[13:14]=0 THEN                             06490010
                             %  CONTAINS EXTRA ZERO INSERT CODE         06490011
              BEGIN  REPT~REPT+EDIT[X+1].[35:7];  X~X+1;                06495000
                             % THEN ACCUMULATE THE REPEAT FIELDS.       06495001
                   GO TO TRNC                                           06500000
              END;  IF REPT = 0 THEN GO TO PASS;                        06505000
                             %IF NO CHARACTERS TO BE TRANSFERED         06505001
                   IF LITF OR ALL ! 0 THEN%IF LITERAL OR "ALL" THEN     06510000
  TRNC2:      BEGIN IF EDIT[X].[13:7]!0 THEN                            06511000
                             %IF "INSERT ZEROES BEFORE TRN"             06511001
                   INSRT(EDIT[X].[13:7],0);            COMMENT 3-3-64;  06512000
                   LITINS(X,ICHR,FIGC,REPT,BV,ALL);                     06515000
                   GO TO PASS                                           06525000
              END;                                                      06530000
              BEGIN IF EDIT[X].[13:7] !0 THEN                           06545050
                             %IF "INSERT ZEROES BEFORE TRN"             06545051
                   INSRT(EDIT[X].[13:7],0);            COMMENT 3-3-64;  06545060
                   WHILE (REPT > 0) DO                                  06550000
              BEGIN CEMLT((IF REPT>63 THEN 63 ELSE REPT),               06550010
                             %EMIT TRN SYLLABLES                        06550011
                   (IF OP=10 THEN TRN ELSE TRS));         COMMENT 8-26; 06550015
                    REPT~REPT-63;                                       06550020
              END;                                                      06550040
                   IF EDIT[X].[20:7]!0 THEN                             06550050
                             %IF "INSERT ZEROES AFTER TRN"              06550051
                   INSRT(EDIT[X].[20:7],0);                             06550070
              END;                                                      06555000
                   GO TO PASS;                                          06560000
              END;             %                                        06565000
                   IF OP = 14 THEN%IF "SKIP FORWARD SOURCE"             06655000
              BEGIN IF REPT !0 THEN                       COMMENT 8-21; 06660000
         COMMENT ADJUST SOURCE REGISTER ;                               06665000
                   CEMLT(REPT,SFS);                                     06670000
                   GO TO PASS;                                          06675000
              END;                                                      06680000
                   IF OP = 17 THEN                                      06700020
              BEGIN                                                     06700040
     COMMENT ZERO SUPPRESS SCALE POSITIONS ;                            06700060
                   ZSCL~REPT;  ZSCC~ICHR;                               06700080
         COMMENT END OF INTERPRETIVE LOOP ;                             06705000
              END;                                                      06710000
 PASS:        END;                                                      06715000
                   CEMLT(0,CMX);                          COMMENT 6- 1; 06720000
COMMENT TEMPORARY; SGMTLVL ~ SGMTLVL - 1;                               06720001
                   IF DNBP ! 0 THEN                       COMMENT 7- 9; 06720020
              BEGIN EMIL(OPR,MKS); EMIL(LITC,DNBQ);       COMMENT 7- 9; 06720040
                   EMIL(DESC,DNBP); EMIL(LITC,DNBR);      COMMENT 7- 9; 06720060
                   EMIL(OPDC,BDNSIGN);                    COMMENT 7- 9; 06720080
              END;                                        COMMENT 7- 9; 06720090
                   IF ACC AND SZA >11 THEN EMIL(OPR,DEL); COMMENT 7- 9; 06720100
                   IF DLE!0 OR ACC    THEN EMIL(OPR,DEL); COMMENT 7- 9; 06720120
              END;                                                      06725000
MGCX:                                                     COMMENT 9-01; 06730000
                   IF LITF OR FIGC OR ALL ! 0 THEN LTR[18]~0;           06730010
                   MGCXFLG~FALSE;                         COMMENT 9-22; 06732000
              END;             %END OF MOVE GENERATOR CNTRL(MGEC)       06735000
COMMENT DATA DIVISION SYNTAX CONTROL  ;                                 06740000
 DATADIV:                      %DATA DIVISION STARTS HERE...........    06745000
              BEGIN                                                     06750000
      REAL ARRAY DR [0:63];                                COMMENT 2-6; 06752000
                   REAL DOF,   %OCCURS DEPENDING FLAG                   06770000
                        OCCURS,%VALUE OF "OCCURS" FOR DATA-NAME     7-6706770500
                        DSF,   %"SIZE DEPENDING " FLAG                  06775000
                        LOCUR, %LAST OCUR                               06775100
                        RMOD,  %RECORDING MODE                          06775500
                        LBL,   %USERS LABEL SPECIFIED                   06785500
                        NC,    %NON-CONTIGUOUS DATA-NAME FLAG           06790000
                        OCOC,  %"OCCURS DEPENDING" OCUR INDEX           06795000
                        OCURCT,%COUNT OF SUBSCRIPTS REQUIRED            06800000
                        PCIX,  %PICTURE OCUR                            06804000
                        PSZ,   %PICTURE SIZE                            06805000
                        RECSIZ,%RECORD SIZE (DECLARED)                  06805500
                        REN,   %RENAMES FLAG                            06815000
                        REX,   %RENAMING ARRAY INDEX                    06815100
                        RLGTH, %RECORD LENGTH                           06815300
                        SOCUR, %SYMBOL INDEX IN DICTIONARY              06815600
                        BACKLINK,%CURRENT HIERARCHY LINK                06830000
                        DRIX,  %FORWARD REFERENCE ARRAY(DR) INDEX       06831000
                        LP,    %LEAVING INTEGER PLACES(INTEGER)         06832000
                        NX,    %HIERARCHY STACK ARRAY INDEX             06833000
                        ORDR2, %TEMP FOR HIERARCHY                      06835000
                        ORDR3, %TEMP FOR HIER OCCURS COUNT              06840000
                        ORDR4, %TEMP FOR HIER DECLARED SIZE             06845000
                        ORDR5, %TEMP FOR HIER ACCUMULATED SIZE          06850000
                        ORDR6, %TEMP FOR HIER REDEFINES SIZE            06855000
                        ORDR7, %TEMP FOR HIER REDEFINES OCUR            06860000
                        BZ,    %BLANK WHEN ZERO FLAG                    06865010
                        ORDR9, %TEMP FOR HIER DECLARED INTERNAL SIZE    06865020
                        INSZ,  %DECLARED INTERNAM MAPPING SZ            06865030
                        CP,    %CHECK PROTECT FLAG                      06865040
                        ER,    %PICTURE ERROR FLAG                      06865050
                        FS,    %FLOAT DOLLAR SZ FLAG                    06865060
                        INT,   %INTEGER PART OF DATA-AAME FIELD         06865070
                        LASTLL,%LAST LEVEL TEMP                         06865080
                        ORDR,  %TEMP FOR HIER LEVEL NUMBER              06865090
                        ORDR1, %TEMP FOR HIER OCUR                      06865100
                        PCLGTH,%PICTURE LENGTH (CHARACTERS)             06865110
                        SGP,   %EDITING (REPORT) SIGN                   06865120
                        SZ,    %FIELD SIZE (IN CHARACTERS)              06865130
                        ZS,    %ZERO SUPPRESS FLAG                      06865140
                        LASTRED,%LAST ITEM WAS REDEFINES ENTRY-FOR ITPRO06865150
                        REDFF; %REDEFINE OCUR INDEX                     06870000
              REAL ORDR8;      %TEMP FOR HIER CLASS, USAGE, ETC.        06885000
              INTEGER LTYPE;                                            06885010
              REAL ORDR11;   COMMENT FIXUP LOCATIPN;                    06885050
                BOOLEAN CONDN; %CONDITION NAME FLAG                     06900000
              BOOLEAN   ASYGNES,REDEFYNES;                      %TR 776 06901000
              INTEGER KX;      %TEMP INFO ARRAY INDEX FOR CURRENT       06910000
                             %  DATA-NAME                               06910001
              INTEGER L88;     %LEVEL 88 FLAG                           06910050
                BOOLEAN GATOW,                            COMMENT 8-8;  06910060
                        RMF,   %RECORDING MODE DECLARED             7-6706910070
                        LABLFLG,%USERS LABEL DECLARED               7-6706910080
                        SDF,   %SORT-FILE FLAG                          06950000
                        RNAM,  %RENAMING FLAG                       7-6706950100
                        TX;    %GROUP/ELEMENTARY ITEM FLAG              06955000
BOOLEAN ACCF; COMMENT ACCESS MODE FLAG;                    COMMENT DF;  06956000
BOOLEAN ACTF; COMMENT ACTUAL KEY FLAG;                     COMMENT DF;  06957000
BOOLEAN MD ; COMMENT MD DESCRIPTION FLAG;                  COMMENT DF;  06958000
BOOLEAN FILIM;COMMENT FILE-LIMITS FLAG;                    COMMENT DF;  06959000
              REAL ARRAY STK[0:51,0:11]; %HEIRARCHY STACK      %TR 637  06960000
    BOOLEAN PTCLS;             %POINT CLAUSE FLAG                       06960050
BOOLEAN VALUEFLAG;                                              %TR 687 06961000
              INTEGER ARRAY FOLL [0:127];  COMMENT REDEFINES            06965000
                          FOLLOWER FIX TABLE  ;                         06965010
              INTEGER ARRAY RNT[0:7,0:63]; COMMENT RENAMING ARRAY;      06965050
              LABEL   FILESECT;                                %CJC 075 06970000
COMMENT **************************  RENAMING *************************; 06970007
PROCEDURE RENAMING;                                                     06970010
              BEGIN  LABEL L1,L2;                                       06970020
    LABEL R1;                                             COMMENT 8-25; 06970025
                   INTEGER R,S,T,U,V,W,X,Y,Z,                           06970030
                   J,K,P,Q,SVV;                                         06970032
                   REX~REX-1;  %INFO LINK FOR CURRENT FILE              06970040
                   SVV~RNT[0,0];                                        06970042
L2:                JCV(CFDE,R,S);                         COMMENT 6-23; 06970045
         COMMENT SET DECLARED FD, COPY LABEL LENGTH               8-25; 06970046
                   JCV(SVV,T,U); DICT[T,U].[17:1]~1;                    06970047
                    DICT[T,U+2].[23:10]~DICT[R,S+2].[23:10];            06970048
                   JCV(OILNK(RNT[0,0]),T,U);%RENAMING FILE OCUR         06970050
                   JCV(OILNK(CFDE),R,S);                  COMMENT 7-22; 06970052
                   P~INFO[T,U].[4:10]; COMMENT NEW R/W ;                06970060
                   V~INFO[R,S+2].[8:10]; COMMENT OLD CFIB;              06970070
                   W~INFO[T,U+2].[8:10]; COMMENT NEW CFIB;              06970080
                   FOR X~5 STEP 1 UNTIL 8 DO              COMMENT 10-9; 06970082
         COMMENT COPY FIB 5 THRU 8;                       COMMENT 10-9; 06970084
              BEGIN A~W+X; B~V+X; FIB[A.[38:3],A.[41:7]]~ COMMENT 10-9; 06970086
                   FIB[B.[38:3],B.[41:7]];                COMMENT 10-9; 06970088
              END;                                        COMMENT 10-9; 06970090
                   FOR X~10 STEP 1 UNTIL 12 DO            COMMENT 10-9; 06970092
         COMMENT COPY FIB 10 THRU 12;                     COMMENT 10-9; 06970095
             BEGIN A~W+X; B~V+X; FIB[A.[38:3],A.[41:7]] ~               06970100
                   FIB[B.[38:3],B.[41:7]];                              06970101
              END; A~W+4; B~V+4;                          COMMENT 8-25; 06970102
         COMMENT SORT FILE INDICATION                             8-25; 06970111
                   FIB[A.[38:3],A.[41:7]].[7:1]~          COMMENT 8-25; 06970113
                   FIB[B.[38:3],B.[41:7]].[7:1];          COMMENT 8-25; 06970115
         COMMENT SAVE-FACTOR                                      8-25; 06970117
                   FIB[A.[38:3],A.[41:7]].[30:18] ~                     06970120
                   FIB[B.[38:3],B.[41:7]].[30:18];                      06970121
                   A~W+13;  B~V+13;                                     06970124
         COMMENT RECORDING MODE, NOTIF & TYPE, PROGRAM TYPE       8-25; 06970125
                   FIB[A.[38:3],A.[41:7]].[24:24]~        COMMENT 8-25; 06970126
                   FIB[B.[38:3],B.[41:7]].[24:24];        COMMENT 8-25; 06970127
         COMMENT RECORD SIZE IN WORDS                             8-25; 06970128
                   INFO[T,U+1].[16:10]~INFO[R,S+1].[16:10];             06970130
                             %COPY RECORD SIZE                          06970131
                   INFO[T,U+4]~INFO[R,S+4];                             06970140
                             %DUPLICATE PORTION OF INFO ENTRY           06970141
         COMMENT BUFFER SIZE, MAX RECORD LGTH, BUFFER LGTH        8-25; 06970150
                   A ~ W + 18;  B ~ V + 18;                             06970152
                   FIB[A.[38:3],A.[41:7]]~FIB[B.[38:3],B.[41:7]];       06970153
                   IF AVAIL.[39:9] > 500 THEN AVAIL~AVAIL+20;           06970155
                   FOR X~1 STEP 1 UNTIL REX DO                          06970190
              BEGIN                                                     06970200
                   RNT[X.[39:3],X.[42:6]].[18:15]~AVAIL;                06970210
                             %SET UP NEW OCURS FOR ALL ITEMS            06970211
                    AVAIL~AVAIL+2;                                      06970215
                   IF AVAIL.[39:9] > 500 THEN                           06970220
              BEGIN AVAIL~AVAIL+50;  AVAIL.[39:9]~0;                    06970230
              END; END;                                   COMMENT 8-25; 06970235
                   X~REX;                                 COMMENT 8-25; 06970240
                   WHILE X>0 DO                           COMMENT 8-25; 06970242
              BEGIN IF OTYP(RNT[X.[39:3],X.[42:6]].[33:15 COMMENT 8-25; 06970244
                   ])=7 THEN                              COMMENT 8-25; 06970246
              BEGIN IFOL(RNT[X.[39:3],X.[42:6]].[18:15],  COMMENT 8-25; 06970248
                   SVV); GO TO R1;                        COMMENT 8-25; 06970250
              END; X~X-1;                                 COMMENT 8-25; 06970252
              END;                                        COMMENT 8-25; 06970254
R1:                                                       COMMENT 8-25; 06970256
                   FOR X ~ 1 STEP 1 UNTIL REX DO %                      06970260
              BEGIN W~(V~RNT[X.[39:3],X.[42:6]]).[33:15];%              06970270
                     V ~ V.[18:15];%                                    06970280
                   JCV (V,R,S);   JCV (W,T,U);                          06970290
                             %SET UP NEW FOLLOWER LINKS                 06970291
                   DICT[R,S].[1:17]~DICT[T,U].[1:17];                   06970300
                   DICT[R,S+1].[1:17]~DICT[T,U+1].[1:17];               06970310
                             %DUPLICATE PART OF OCUR ENRRY              06970311
                   Z~DICT[T,U+1].[18:15];   IF Z ! 0 THEN               06970330
              BEGIN                                                     06970340
       L1:          Y~Z;  Z~OSNAM(Z);  IF Z ! 0 THEN GO TO L1;          06970350
                     Z~Y;                                               06970360
                   END ELSE Z~W;  ISNAM (V,Z);                          06970370
                             %PUT NEW ENTRY ON SAME-NAME LIST           06970371
                   Q~ RNT [0,0];                                        06970380
                   Y~OHLNK(W);                                          06970385
                   FOR Z~1 STEP 1 UNTIL REX DO                          06970390
              BEGIN  IF RNT[Z.[39:3],Z.[42:6]].[33:15] = Y THEN         06970400
                             %SET UP NEW HIERARCHY LINKS                06970401
                   Q~RNT[Z.[39:3],Z.[42:6]].[18:15];                    06970410
              END;     IHLNK(Q,V);                                      06970420
                   Y~OFOL(W);  Q~RNT[0,0];                              06970440
                   FOR Z~0 STEP 1 UNTIL REX DO                          06970450
              BEGIN  IF RNT[Z.[39:3],Z.[42:6]].[33:15] = Y THEN         06970460
                             %SET NEW FOLLOWERS                         06970461
                   Q~RNT[Z.[39:3],Z.[42:6]].[18:15];                    06970470
              END;                                                      06970475
                   IFOL (Q,V);                                          06970480
                   IILNK (V,IX);                                        06970510
                   Z~OILNK(W);   JCV(Z,Y,Z);                            06970515
                    Q~INFO[Y,Z].[24:5];   JCV(IX,J,K);                  06970520
                   WORDTRAN(INFO[Y,Z],INFO[J,K],Q);                     06970530
                             %DUPLIAATE REST OF OLD INFO                06970531
                   SETIX(Q);   %UPDATE INFO ARRAY INDEX                 06970540
                   INFO[J,K].[1:10]~P;%SET NEW I/O DESCRIPTOR           06970550
                   IF Q > 3 THEN                       COMMENT 2-26-64; 06970560
              BEGIN                                    COMMENT 2-26-64; 06970570
                   Q~0;  IF (Y~INFO[J,K+3].[ 3:15]) ! 0 THEN            06970600
                             %SET NEW "SIZE DEPENDING" LINKS            06970601
              BEGIN  FOR Z~1 STEP 1 UNTIL REX DO                        06970610
              BEGIN  IF RNT[Z.[39:3],Z.[42:6]].[33:15] = Y THEN         06970620
                   Q~RNT[Z.[39:3],Z.[42:6]].[18:15];                    06970630
              END;                                                      06970640
              END;   INFO[J,K+3].[3:15]~Q;                              06970650
                   Q~0;  IF (Y~INFO[J,K+3].[18:15]) ! 0 THEN            06970700
                             %SET NEW "DATA-NAME SIGN" LINKS            06970701
              BEGIN  FOR Z~1 STEP 1 UNTIL REX DO                        06970710
              BEGIN  IF RNT[Z.[39:3],Z.[42:6]].[33:15] = Y THEN         06970720
                   Q~RNT[Z.[39:3],Z.[42:6]].[18:15];                    06970730
              END;                                                      06970740
              END;   INFO[J,K+3].[18:15]~Q;                             06970750
                   Q~0;  IF (Y~INFO[J,K+3].[33:15]) ! 0 THEN            06970800
                             %SET NEW "OCCURS DEPENDING" LINKS          06970801
              BEGIN  FOR Z~1 STEP 1 UNTIL REX DO                        06970810
              BEGIN  IF RNT[Z.[39:3],Z.[42:6]].[33:15] = Y THEN         06970820
                   Q~RNT[Z.[39:3],Z.[42:6]].[18:15];                    06970830
              END;                                                      06970840
              END;   INFO[J,K+3].[33:15]~Q;                             06970850
              END;                                                      06970860
              END;                                     COMMENT 2-26-64; 06970865
                   IHLNK(0,RNT[0,0].[33:15]);%CLEAR FILE HIERARCHY LINK 06970875
                   FOR X~1 STEP 1 UNTIL REX DO                          06970880
                   RNT[X.[39:3],X.[42:6]]~%CLEAR OUT CURRENT NEW OCURS  06970890
                   RNT[X.[39:3],X.[42:6]].[33:15];                      06970900
                   JCV(OILNK(SVV),J,K);                                 06970910
                   IF (SVV~INFO[J,K+2].[33:15]) ! 0 THEN                06970920
                             %PICK UP ADDITIONAL RENAMING FILES         06970921
              BEGIN                                                     06970930
                   RNT[0,0]~SVV;%RESET RENAMING FILE OCUR               06970942
                   GO TO L2;                                            06970950
              END;                                                      06970960
              END;                                                      06970990
COMMENT **************************   ASSIGN  *************************; 06972000
COMMENT     HANDLES STORAGE ASSIGNMENT BASED ON SIZE AND USAGE OF       06975000
               IDENTIFIERS IN DATA DIVISION     ;                       06980000
PROCEDURE ASSIGN (OCUR,PX,QX,RX,TX);                                    06985000
              VALUE OCUR,TX; INTEGER OCUR,PX,QX,RX; BOOLEAN TX;         06990000
              BEGIN  INTEGER OCUX; LABEL A,XT,B;                        06995000
                   IF OLEVL(OCUR) = 1  AND NOT LABLFLG THEN             06995010
              BEGIN QX~0;  RX~0;                                        06995020
              END;                                                      06995030
                   OCUX~ OILNK (OCUR);%PICK UP INFORMATION LINK         07000000
                    JCV (OCUX,J,K);  IF USAGE = 0 THEN                  07005000
              BEGIN            %SET START OF FIELD ASSIGNMENT           07010000
       A:     INFO [J,K]~INFO [J,K] & PX [1:38:10] &                    07015000
                             %   PX = PRT LOCATION                      07015001
                   QX [11:38:10] & RX [21:45:3];%   QX = WORD INDEX     07020000
                   IF TX THEN GO TO XT;                                 07025000
                             %   RX = CHARACTER ADDRESS WITHIN WOR      07025001
                             %IF GROUP EXIT                             07025002
                   IF OCCURS ! 0 THEN%UPDATE SIZE WITH COMPUTED SIZE    07030000
                   RX~RX+(SIZE|OCCURS) ELSE                             07035000
                   RX ~ RX + SIZE; QX ~ QX + (RX DIV 8);                07040000
                             %UPDATE WORD AND CHARACTER INDICES         07040001
                   RX ~ RX MOD 8; GO TO XT                              07045000
              END;                                                      07050000
                   IF HDWR>1 AND HDWR!10 AND HDWR!13 THEN   COMMENT DF; 07055000
                             %IF OTHER THAN TAPE OR DRUM                07055001
              BEGIN                                                     07060000
       B:          EIND~16 & 8 [32:40:8];%"USAGE ERROR".                07065000
                   ERP(EIND,0); COMPE ~ TRUE;              COMMENT 8-13;07070000
                   GO TO A;                                             07075000
              END;                                                      07080000
                   IF RMOD!1 AND HDWR!13 THEN GO TO B;      COMMENT DF; 07085000
                             %IF NON-STANDARD RECORDING MODE            07085001
                   IF LABLFLG THEN GO TO B;%IF USERS LABEL DATA-NAME    07090000
                   QX~QX+(RX DIV 8);  RX~RX MOD 8;                      07090010
                   IF RX ! 0 AND LEVEL ! 57 THEN%IF NOT WROD-ADJUSTED   07095000
              BEGIN MSG[124]~0 & 1 [1:43:5] & (8-RX) [6:42:6];          07100000
                             % AND NOT LEVEL 77                         07100001
                   EIND~124 & 41 [32:40:8] & 9 [24:40:8];               07105000
                             %"XXX CHARACTERS MISSING".                 07105001
                   COMPE~TRUE;                           COMMENT 11-11; 07106000
                   ERP (EIND,0)      ; RX~0; QX~QX+1;                   07110000
              END;                                                      07115000
                   IF LEVEL = 57 THEN                                   07115010
              BEGIN  IF RX ! 0 THEN%IF LEVEL 77 THEN WORD-ADMUST        07115020
              BEGIN  RX~0;  QX~QX+1;                                    07115030
              END;                                                      07115040
              END;                                                      07115050
                   IF USAGE = 2 THEN COMMENT CMP-1 ;%IF CMP-1 THEN      07115100
              BEGIN PX~PRTCTR;UPIT; QX~0;                               07115110
                             %  RESERVE WORD IN PRT FOR STORAGE         07115111
                   INFO[J,K]~INFO[J,K]&10[1:38:10]%  OF FIELD.          07115120
                   &PX[11:38:10]&0[21:45:3];                            07115130
              END ELSE                                                  07115140
                   INFO [J,K]~INFO [J,K] & PX [1:38:10] &               07120000
                             %SET ASSIGNMENT INTO INFO PART             07120001
                   QX [11:38:10] & RX [21:45:3];                        07125000
                   IF TX THEN GO TO XT;%IF GROUP THEN EXIT              07130000
                   IF OCCURS ! 0 THEN                                   07135000
              BEGIN IF SIZE < 12 THEN QX~QX + OCCURS ELSE               07140000
                             %IF OCCURS THEN COMPUTE SIZE               07140001
                   QX~QX +(2|OCCURS);    GO TO XT;                      07145000
              END;                                                      07150000
                   IF SIZE { 11 THEN QX ~ QX +1                         07155000
                   ELSE QX ~ QX + 2 ;%IF DOUBLE PRECISION USE 2 WORDS   07160000
 XT:          END;                                                      07165000
COMMENT **************************    DUZ    *************************; 07167000
INTEGER PROCEDURE DUZ;         %COMPUTE INTERNAL MAPPING SIZE           07170000
              BEGIN  INTEGER T;  LABEL P;                               07175000
                   T~IF ORDR3 = 0 THEN ORDR9 ELSE ORDR3 | ORDR9;        07180000
                             %IF NOT OCCURS THEN INTERNAL SIZE          07180001
                             % ELSE COMPUTE OCCURS | SIZE               07180002
                   FOR X~NX STEP -1 UNTIL 1 DO                          07185000
              BEGIN  IF STK[X,0] = -1 THEN GO TO P;                     07190000
                  T~T+(IF STK[X,3] = 0 THEN 0 ELSE                      07195000
                             %OCCURX | ACCUMULATED GROUP INTERNAL       07195001
                   STK[X,3] | STK[X,10]);%  SIZE                        07200000
              END;                                                      07205000
       P:          DUZ~T;                                               07210000
              END;                                                      07215000
COMMENT MAINTAINS HIERARCHY.  STK COLUMNS ARE   0-LEVEL, 1-OCUR,        07220000
   2-HIERARCHY, 3-OCCURS, 4-DECLARED SIZE, 5-SUM SIZE, 6-REDEFINES      07225000
             SIZE, 7-REDEFINES, 8-CLASS & USAGE, 9-INTERNAL SIZE,       07230000
             10- SUM INTERNAL SIZE;                                     07235000
COMMENT **************************   HIER    *************************; 07237000
PROCEDURE HIER;                                                         07240000
              BEGIN                                                     07245000
    BOOLEAN FLAGX,FLAX,FLAE;                         COMMENT 2-3 1400;  07250000
              REAL SWW;                                                 07250010
              LABEL RU,RS,EL,L1,L0,                                     07255000
                   ONN,SIL,LL,HIX;                                      07260000
COMMENT **************************    HS     *************************; 07262000
PROCEDURE HS;                                                           07265000
              BEGIN INTEGER X,Q,R,J,K ; LABEL HSL ;                     07270000
                   IF STK [NX,5] = 0 THEN STK [NX,5] ~ STK [NX,4];      07275000
                             %IF GROUP SIZE = 0 THEN USE FIELD SZ       07275001
                   IF STK [NX,10] = 0 THEN STK[NX,10] ~ STK[NX,9] ;     07275050
                   T1 ~ STK[NX,3] | STK[NX,5] ; T8 ~ 0 ;%OCCURS | SIZE  07280000
                   T10 ~ STK[NX,3] | STK[NX,10] ;%INTERNAL MAPPING SIZE 07285000
                   FOR X ~ NX STEP -1 UNTIL 1 DO                        07290000
              BEGIN IF STK[X,0] { 0 THEN GO TO HSL;                     07295000
                   IF STK[X,3] ! 0 THEN T8~T8+1;%COUNT OCCURS           07300000
              END;                                                      07305000
       HSL:        JCV (OILNK (STK [NX,1]),J,K);                        07310000
                   INFO[J,K+1].[32:4]~T8;  %NUMBER OF SUBS     %TR 86   07315000
                   IF NOT OELEF (STK[NX,1]) THEN%IF NOT ELEMENTARY THEN 07320000
              BEGIN IF REDFF = 0 THEN%IF NOT REDEFINE THEN              07320050
              BEGIN  RX~RX+(QX|8);%UPDATE CHAR ASSGMNT BY COMPUTED SIZE 07325000
                   IF LEVEL > 1 THEN                                    07325010
              BEGIN X~ RX -  MAPSZ(ORIG) | (OCCURS+REAL(OCCURS=0 ) )    07325030
                   + T10 - STK[NX,10] ;                                 07325040
                   JCV(OILNK(ORIG),J,K);                                07325050
                   INFO[J,K].[1:10] ~ PX;                               07325060
                   INFO[J,K].[11:13] ~  X ;                             07325070
                   RX ~  RX + T10 - STK [NX,10] ;                       07330000
              END;                                        COMMENT D-16; 07331000
                   QX ~ RX DIV 8 ; RX ~ RX MOD 8 ;                      07335000
              END                                                       07345000
              END;                                                      07345050
              END;                                                      07350000
COMMENT **************************    OTOS   *************************; 07352000
PROCEDURE OTOS (P1);                                                    07355000
              VALUE P1; INTEGER P1;                                     07360000
              BEGIN LABEL   EDE;EDE: NX~NX+1;             COMMENT 8-27; 07365000
                   STK [NX,0] ~ ORDR;%MOVE LAST FIELD DATA TO STACK     07370000
                   STK [NX,1] ~ ORDR1;                                  07375000
                   STK [NX,2] ~ ORDR2;                                  07380000
                   STK [NX,3] ~ ORDR3;                                  07385000
                   STK [NX,4] ~ ORDR4;                                  07390000
                   STK [NX,5]~(IF P1 = 0 THEN ORDR5 ELSE 0);            07395000
                   STK [NX,6] ~ ORDR6;                                  07400000
                   ORDR6~0;                                             07400050
                   STK [NX,7] ~ ORDR7;                                  07405000
                   STK[NX,9]~ORDR9;                                     07410000
                   STK[NX,11]~ORDR11;                                   07410010
                   STK [NX,8] ~ ORDR8                                   07415000
              END;                                                      07420000
                   IF LEVEL = 0 THEN LEVEL ~ -1;%SET FOR FILES          07425000
                   FLAGX~FALSE; FLAX~FALSE; T1~(IF LEVEL < 0 THEN       07430000
                   LEVEL|(-1) ELSE LEVEL);                              07435000
                   IF LEVEL ! (-1) THEN                                 07435010
                   ILEVL (T1,ORIG); T1~0;                               07440000
                   SWW~0;                                               07440010
                   IF LASTLL = 57 THEN IELEF(LOCUR);                    07440020
                             %IF 77 LEVEL THEN ELEMENTARY               07440021
                    IF REDFF ! 0 AND LEVEL ! 1 THEN                     07445000
                             %IF REDEFINES, SAVE LEVEL AND              07445001
              BEGIN FX~FX+1; FOLL[FX]~0 &%  OCUR FOR FOLLOWER FIX-UP    07450000
                   LEVEL[27:42:6]  &                   COMMENT 3-18-64; 07450050
                   ORDR1 [33:33:15]                                     07455000
              END;                                                      07465000
                   IF LEVEL = 57 THEN GO TO EL;                         07470000
                   IF LEVEL = ORDR THEN GO TO EL;                       07475000
                             %IF LEVEL = LAST LEVEL - ELEMENTARY        07475001
                   IF LEVEL > ORDR  THEN                                07480000
              BEGIN IF OTYP (LOCUR) ! 6 THEN%IF NOT A FILE OCUR         07485000
              BEGIN TYPE ~ IF ORDR = 1 THEN 7 ELSE 2;                   07490000
                             %IF LEVEL = 1 THEN TYPE~7 ELSE GROUP       07490001
                   IF LOCUR ! 0 THEN                                    07495000
                   ITYP (TYPE,LOCUR);                                   07500000
              END;                                                      07505000
                   OTOS (0); GO TO ONN%PUT LAST INFO ON STACK           07510000
              END;                                                      07515000
                   LTYPE~8; IF ORDR1 ! 0 THEN                           07520000
              BEGIN  ITYP ((IF ORDR = 1 THEN 7 ELSE 8),ORDR1);          07525000
                             %ELEMENTARY OR RECORD-NAME TYPE            07525001
                   IELEF (ORDR1);                                       07530000
              END;%                                                 7-6707535000
                   IF ORDR = 57 THEN GO TO RU;                          07540000
                   IF LASTRED!0 AND LEVEL>0%IF LAST ITEM WAS REDEFINES  07540010
                     AND REDFF =0 THEN%  AND CURRENT ITEM IS NOT        07540015
               BEGIN IFOL(ORIG,ORDR7); ORDR~STK[NX,0];                  07540020
                             %SET FOLLOWER AND BACK STACK UP ONE        07540021
                   ORDR1~STK[NX,1];  ORDR2~STK[NX,2];% POSITION         07540030
                   ORDR3~STK[NX,3]; ORDR4~STK[NX,5]; ORDR5~0;           07540035
                   ORDR6~STK[NX,6]; ORDR7~STK[NX,7];                    07540040
                   ORDR8~STK[NX,8]; ORDR9~STK[NX,10];                   07540050
                   ORDR11~STK[NX,11];                                   07540055
                   FOR X~0 STEP 1 UNTIL 10 DO STK[NX,X]~0;              07540060
                             %BACK STACK UP ONE POSITION                07540061
                     STK[NX,11]~0;                                      07540065
                   NX~NX-1; LASTRED~0; LASTLL~ORDR;                     07540070
                   LOCUR~ORDR1;  BACKLINK~STK[NX,1];                    07540080
                   HIER;   GO TO HIX;%CALL HIER RECURSIVELY             07540083
              END;                                                      07540100
                   IF ORDR3 ! 0 THEN OCURCT~OCURCT+1;                   07540200
                   IF ORDR = 1 AND CDIVN = 31 AND                       07540300
              ORDR7 = 0 AND ORDR11 ! 0 AND                              07540350
                   ORDR ! 0 AND LEVEL { 1 THEN                          07540400
              BEGIN T7 ~ (ORDR9 + 7) DIV 8;                             07540500
                   IMIT(LITC,T7,ORDR11);                                07540600
                   ORDR11~0;                                            07540700
              END;                                                      07540800
                   OTOS (1);                                            07545000
                   IF LEVEL>1 THEN                   COMMENT 2-3 1400;  07545010
              BEGIN  FLAE~TRUE;                      COMMENT 2-3 1400;  07545020
                   FOR X~0 STEP 1 UNTIL NX DO        COMMENT 2-3 1400;  07545030
              BEGIN  IF LEVEL=STK[X,0] THEN          COMMENT 2-3 1400;  07545040
                   FLAE~FALSE;                       COMMENT 2-3 1400;  07545050
              END;                                   COMMENT 2-3 1400;  07545060
                   IF FLAE THEN                      COMMENT 2-3 1400;  07545070
              BEGIN  ERP(17&76[32:40:8]&35[24:40:8]&8[16:40:8],0);      07545080
                             %"HIERARCHY GROUP LEVEL ERROR"             07545081
                   COMPE~TRUE;                       COMMENT 2-3 1400;  07545090
              END;                                   COMMENT 2-3 1400;  07545100
              END;                                   COMMENT 2-3 1400;  07545110
       L0:         IF STK [NX,0] > LEVEL THEN GO TO L1;                 07550000
                             %IF STK LEVEL > CURRENT LEVEL              07550001
                   IF STK [NX,0] = LEVEL THEN                           07555000
              BEGIN FLAGX ~ TRUE; GO TO L1                              07560000
              END;   GO TO SIL;                                         07565000
       EL:         LTYPE~8; IF LOCUR ! 0 THEN                           07570000
              BEGIN  IF OLEVL (LOCUR) ! 1 THEN ITYP (8,LOCUR) ELSE      07575000
                             %SET ELEMENTARY OR RECORD-TYPE             07575001
                   ITYP (7,LOCUR);  IELEF (LOCUR);                      07580000
              END;                                                      07585000
                   IF ORDR3 ! 0 THEN%IF LAST ITEM WAS OCCURS ITEM       07590000
              BEGIN OTOS (1); HS; IF STK [NX,1] = REDFF THEN            07595000
                             %MOVE TO STACK AND CALL HS                 07595001
              BEGIN                                                     07600000
                   IF STK[NX,6] ! STK[NX,9] THEN                        07605000
                             %CHECK REDEFINES SZ VS DECLARED SZ         07605001
              BEGIN IF STK[NX,6] ! T10 THEN                             07605010
              BEGIN IF CDIVN ! 31 OR ORDR ! 1 THEN                      07610000
              BEGIN EIND~68 & 15 [32:40:8] & 8 [24:40:8];               07615000
                             %"REDEFINE SIZE ERROR".                    07615001
                   ERP (EIND,0)                                         07620000
              END; IF STK[NX,6] > STK[NX,9] THEN                        07625000
              BEGIN RX~RX+STK[NX,6] - STK[NX,9];                        07630000
                             %ADJUST FOR LARGER REDEFINES SIZE          07630001
                    QX ~ QX + RX DIV 8; RX ~ RX MOD 8                   07635000
              END                                                       07640000
              END;                                                      07645000
              END;                                                      07645010
              END;  IF REDFF ! 0 THEN ORDR6~T10;                        07650000
                   FOR X~0 STEP 1 UNTIL 10 DO STK[NX,X]~0;              07660000
                             %REDUCE STACK ONE POSITION                 07660001
                     STK[NX,11]~0;                                      07660010
                   NX~NX-1;                                             07660050
                   IF NX < 1 THEN GO TO SIL;                            07665000
                   IF ORDR7 = 0 THEN STK[NX,5]~STK[NX,5]+T1;            07670000
                             %IF NOT REDEFINES, ADD TO ACCUMULATED      07670001
                             %  SIZE                                    07670002
                   IF ORDR7 = 0 THEN                                    07685000
                   STK[NX,10]~STK[NX,10]+T10;                           07690000
                   GO TO ONN;                                           07695000
              END;                                                      07700000
                   ORDR6~0;                                             07705000
                   IF ORDR = 1 AND CDIVN = 31 AND ORDR11 ! 0 THEN       07705010
              BEGIN T7 ~ ( ORDR9 + 7 ) DIV 8 ;                          07705020
                   IMIT ( LITC,T7,ORDR11 ) ;                            07705030
                   ORDR11 ~ 0 ;                                         07705040
              END  ;                                                    07705050
                   IF ORDR7 = 0 THEN                                    07720000
                   STK[NX,5]~STK[NX,5]+ORDR4;                           07725000
                             %ADD SIZE TO ACCUM SIZE IF NOT REDDFI      07725001
                   IF REDFF ! 0 THEN ORDR6~ORDR9;                       07725010
                   IF ORDR7 = 0 THEN                                    07730000
                    STK[NX,10]~STK[NX,10]+ORDR9;                        07735000
                   IF ORDR=1 AND CDIVN !31 THEN      COMMENT 2-6 1000;  07736000
              BEGIN  IF (T7~ORDR9 MOD 8)!0 THEN                         07737000
                             %IF NOT FULL NUMBER OF WORDS THEN          07737001
              BEGIN  A~CFIB+5;                       COMMENT 2-6 1000;  07738000
                   IF FIB[A.[38:3],A.[41:7]].[46:2]!0 THEN              07739000
                             %IF RECORDS ARE BLOCKED THEN               07739001
              BEGIN  MSG[124]~0&1[1:43:5]&(8-T7)[6:42:6];  COMMENT 2-6; 07740000
                   ERP(124&41[32:40:8]&9[24:40:8],0);                   07741000
                             %" X CHARACTERS MISSING"                   07741001
              END END END;                           COMMENT 2-6 1000;  07742000
       ONN:        IF LOCUR ! 0 THEN                                    07745000
              BEGIN IF LEVEL > 0 THEN                                   07750000
              BEGIN IF CDIVN = 31 AND LEVEL = 1 THEN IHLNK(0,ORIG)      07755000
                             %IF WS OR CONSTANT SECT SET HIERARCHY      07755001
                   ELSE IHLNK(STK[NX,1],ORIG);%  LINK TO ZERO           07760000
              END                                                       07765000
              END;  BACKLINK ~ STK [NX,1];                              07770000
                    IF CDIVN = 31 AND (LEVEL = 1 OR LEVEL = 57) THEN    07770010
                   BACKLINK~0;                                          07770020
                   IF LTYPE = 6 THEN GO TO RU ELSE GO TO SIL;           07800000
                             %IF FILE-NAME GO TO RU                     07800001
       L1:         IF STK[NX,0] = (-1) THEN GO TO RU;                   07805000
              BEGIN   LABEL L7,L8,L1X;                                  07805010
                   SWW~0;  IF STK[NX,0] ! (-1) THEN                     07805020
              BEGIN IF STK[NX,4] = 0 THEN STK[NX,4]~STK[NX,5];          07810000
                   IF STK[NX,9] = 0 THEN STK[NX,9]~STK[NX,10];          07815000
                   IF STK[NX,5] = 0 THEN STK[NX,5]~STK[NX,4];           07820000
                   IF STK[NX,10] = 0 THEN STK[NX,10]~STK[NX,9];         07825000
                   FLAX~TRUE; IF STK[NX,3] = 0 THEN%IF NOT OCCURS ITEM  07830000
              BEGIN T10~STK[NX,10]; T1~STK[NX,5];                       07835000
                             % ADD TO MAP SIZE AND DECLARED SZ          07835001
              END ELSE  HS;    %OTHERWISE PROCESS OCCURS SIZE           07840000
                   T6~1;       %T9 ~ 1 OR OCCURS NUMEER                 07845000
                   IF STK [NX,3] ! 0 THEN T6~ STK [NX,3];               07850000
                   IF STK[NX,7] = 0 THEN                                07855000
              BEGIN STK[NX-1,10]~STK[NX-1,10]+(STK[NX,9]|T6);           07860000
                             %IF NOT REDEFINES THEN ADD MAP SIZE        07860001
                   STK [NX-1,5]~STK [NX-1,5]+(STK [NX,4]|T6);           07865000
                             % AND DECLARED SIZE TO STACK               07865001
              END;                                                      07870000
                   IF STK[NX,1]=REDFF THEN                              07875000
                             %IF CURRENT ITEM REDEFINES THIS ITEM       07875001
                     ORDR6~STK[NX,9]|T6;%THEN GET MAP SIZE FROM STACK.  07876000
                   IF STK[NX,7] ! 0 THEN%IF NOT REDEFINES THEN          07880000
              BEGIN IF STK [NX,3] ! 0 THEN STK [NX,4]~ T1;              07885000
                             %DECLARED SIZE = COMPUTED OCCURS SZ        07885001
                   IF STK[NX,6] ! T10 THEN                              07890000
                             %IF REDEFINES SZ = DECLARED SZ             07890001
              BEGIN IF STK[NX,6]< T10 AND CDIVN=31 THEN                 07895000
                   BEGIN COMPE ~ TRUE; END;                     %TR-116007900000
                             %"REDEFINE SIZE ERROR".                    07900001
                    EIND ~ 68 & 15[32:40:8] & 8[24:40:8];               07901000
                    ERP(EIND,0);                                        07905000
              END;             %IF ACCUMULATED SZ > DECLARED SZ         07910000
                    STK[NX,4]~0;  STK[NX,5]~0;%CLEAR COUNTS             07925010
                    STK[NX,9]~0;   STK[NX,10]~0;                        07925020
              END;                                                      07930000
              END;                                                      07935000
       L7:                                                              07940000
                   IF STK[NX,8].[1:2] ! 0 THEN                          07945000
                             %IF ITEM WAS SIZE OR OCCURS DEPENDING      07945001
              BEGIN IF LEVEL{1 AND STK[NX,0]>1 THEN                     07950000
              BEGIN  X~OILNK(RECOC);  JCV(X,J,K);                       07950010
                   IF STK[NX,8].[1:1] ! 0 THEN                          07950020
                   INFO[J,K+3].[3:15]~STK[NX,1] ELSE                    07950030
                             %SET SIZE LINKS IN ORIGONAL ITEMS          07950031
                   INFO[J,K+3].[33:15]~STK[NX,1];                       07950040
                   IF CFDE ! 0 THEN                                     07950050
              BEGIN X~OILNK(CFDE);  JCV(X,J,K);                         07950060
                   INFO[J,K+2].[18:15]~STK[NX,1];                       07950070
                             %SET LINKS IN FILE OCUR                    07950071
                   INFO[J,K+2].[1:1]~STK[NX,8].[1:1];                   07950080
                   DSF~0; DOF~0;                                        07950090
              END;                                                      07950100
              END;                                                      07950110
              END;                                                      07950120
                   IF STK [NX,3] ! 0 THEN OCURCT~OCURCT-1;              07955000
                             %REDUCE REQUIRED SUBSCRIPTS                07955001
                   FOR X~0 STEP 1 UNTIL 10 DO STK[NX,X]~0;              07960000
                     STK[NX,11]~0;                                      07960010
                   NX~NX-1;    IF NX < 1 THEN                           07965000
              BEGIN  SWW~1;  GO TO L1X;                                 07965010
              END;                                                      07965020
                   IF OILNK(STK[NX,1]) = 0 THEN                         07970000
              BEGIN   SWW~2;  GO TO L1X;                                07970010
              END;                                                      07970020
                   T10~STK[NX,1];                                       07975000
                   IF NOT FLAGX THEN                                    07980000
              BEGIN  IF OTYP(STK[NX,1]) = 6 THEN                        07985000
              BEGIN  SWW~0;   GO TO L1X;                                07985010
              END;                                                      07985020
                    IF STK [NX,4] ! 0 THEN% IF SIZE WAS DECLARED        07995000
              BEGIN IF STK [NX,4] ! STK [NX,5] THEN                     08000000
                             %IF DECLARED ! ACCUMULATED SIZE            08000001
    BEGIN     IF STK[NX,4] ! STK[NX,10] THEN                    %TR-126208001000
              BEGIN  EIND~76 & 15 [32:40:8] & 8 [24:40:8];              08005000
                             %"GROUP SIZE ERROR".                       08005001
                   IF STK[NX,4] ! 0 AND STK[NX,5] ! 0 AND               08010000
                   STK[NX,10] ! 0 AND                           %TR-126208010500
                   NOT OELEF(STK[NX,1]) THEN                            08015000
              BEGIN  ERP(EIND,0);                               %TR 687 08020000
              IF VALUEFLAG AND STK[NX,4] > STK[NX,10] THEN      %TR-126208020100
                   BEGIN COMPE ~ TRUE END;                      %TR-126208020150
              END;                                              %TR 687 08020200
    END;                                                        %TR-126208020300
              END                                                       08025000
              END;                                              %TR 687 08030000
                   IF STK[NX,0] { 1 THEN VALUEFLAG ~ FALSE;     %TR 687 08031000
                   IF T10 ! 0 THEN                              %TR 687 08032000
              BEGIN X~OILNK(STK[NX,1]); JCV(X,J,K);                     08035000
                   INFO[J,K].[33:15]  ~%SET FIELD SIZE FOR GROUP ITEM   08040000
                   STK[NX,5]; INFO[J,K+2].[33:15]~STK[NX,10];           08045000
                    GO TO L8;                                           08050000
              END;                                                      08055000
              END;                                                      08095000
       L8:         IF STK [NX,0] = 1 AND LEVEL { 1 THEN                 08100000
                             %IF END OF FILE DECLARATION                08100001
              BEGIN X~OHLNK(STK[NX,1]);                                 08105000
                    IF OTYP(X) = 6 THEN                                 08105050
              BEGIN JCV (OILNK (CFDE),J,K);                             08110000
                   RLGTH~INFO [J,K+1].[16:10];                          08115000
                             %PLACE RECORD LENGTH INTO FILE OCUR        08115001
                   IF (T7~STK[NX,10] MOD 8)!0 THEN                      08115010
                             %IF NOT FULL NUMBER OF WORDS THEN          08115011
              BEGIN  A~CFIB+5;                       COMMENT 2-3 1400;  08115020
                   IF FIB[A.[38:3],A.[41:7]].[46:2]!0 THEN              08115030
                             %IF RECORDS ARE BLOCKED THEN               08115031
              BEGIN  MSG[124]~0&1[1:43:5]&(8-T7)[6:42:6];  COMMENT 2-3; 08115040
                   ERP(124&41[32:40:8]&9[24:40:8],0);                   08115050
                             %" X CHARACTERS MISSING "                  08115051
              END;                                   COMMENT 2-3 1400;  08115060
              END;                                   COMMENT 2-3 1400;  08115070
                   T8~STK[NX,1];                                        08120000
                   RECSIZ~(STK[NX,10]+7) DIV 8;                         08125000
                   IF RECSIZ > 1023 THEN                                08125010
   BEGIN EIND ~      40 & 34 [32:40:8] & 15 [24:40:8] &                 08125020
                             %"ILLEGAL RECORD SIZE SPECIFICATION"       08125021
                     27 [16:40:8];  ERP(EIND,0);                        08125030
                    RECSIZ~1023;  STK[NX,10]~1023;                      08125040
              END;                                                      08125050
                   JCV(CFDE,J,K);                         COMMENT 7-29; 08126000
                   IF STK[NX,1]!DICT[J,K+2].[33:15]THEN   COMMENT 7-29; 08127000
              BEGIN COMMENT NOT THE LABEL RECORD;         COMMENT 7-29; 08128000
                   IF RECSIZ > RLGTH THEN                               08130000
              BEGIN   JCV(OILNK(CFDE),J,K);                             08135000
                             %IF THIS RECORD > LAST THEN USE THIS       08135001
                   INFO[J,K+1].[16:10]~RECSIZ;                          08135010
                   RECSIZ ~ 0                                           08140000
              END;                                                      08145000
              END;                                        COMMENT 7-29; 08146000
              END ELSE                                                  08155000
              BEGIN  IF CDIVN = 31 AND STK[NX,11] ! 0 THEN              08155010
              BEGIN T7~((STK[NX,10]+7) DIV 8);                          08155020
                   IF T7 > 1023 THEN                                    08155022
              BEGIN EIND~40 & 34 [32:40:8] & 15 [24:40:8] &             08155024
                    25 [16:40:8];  ERP(EIND,0);  COMPE~TRUE;            08155026
              END;                                                      08155028
                     T6~STK[NX,11];   IF T6 ! 0 THEN                    08155030
                    IMIT (LITC,T7,T6);   STK[NX,11]~0;                  08155040
              END;                                                      08155060
              END;                                                      08155070
              END;                                                      08155500
       L1X:   END;                                                      08160000
                   IF SWW = 1 THEN GO TO RU;                            08160010
                   IF SWW = 2 THEN GO TO L0;                            08160020
                   IF NOT FLAGX THEN GO TO L0;                          08160030
       SIL:        BACKLINK~STK [NX,1];                                 08165000
       RU:         ORDR ~LEVEL;  ORDR1~ ORIG;  ORDR2 ~BACKLINK;         08180000
                   ORDR3~ OCCURS; ORDR4~ SIZE; ORDR7~ REDFF;            08185000
                   ORDR5~0;  ORDR9~INSZ;                                08190000
                    IF CDIVN = 31 AND LEVEL = 1 THEN                    08190010
                             %IF WORK-STORAGE OR CONSTANT SECTION       08190011
              BEGIN  ORDR11~RFIX;   RFIX~0;                             08190015
              END;                                                      08190020
                   IF ORIG = 0 THEN GO TO RS;                           08190050
                   ORDR8~CLASS & USAGE [27:42:6] & DSF [1:47:1]         08195000
                   & DOF [2:47:1];                                      08200000
                   IF LEVEL = 57 THEN ORDR8~0;%IF LEVEL 77              08200800
                   IF LEVEL ! 57 AND LEVEL > 0 AND                      08205000
                   OTYP(ORIG) ! 6 THEN                                  08205010
                   IHLNK(BACKLINK,ORIG) ELSE IHLNK(0,ORIG);             08210000
       RS:         LASTLL~LEVEL;                                        08215000
                   IF REDFF ! 0 AND LEVEL ! 1 THEN                      08215010
                             %IF REDEFINES AND NOT AN 01                08215011
              BEGIN  LASTRED~LOCUR;                                     08215020
              END;                                                      08215040
                   IF LEVEL = 1 AND CDIVN = 31 THEN                     08215050
                   IHLNK(0,ORIG);                                       08215055
                   IF FX { 0 THEN FX~0;                                 08220000
                   IF FLAX THEN                                         08225000
              BEGIN IF REDFF = 0 THEN%IF NOT REDEFINE                   08230000
              BEGIN  WHILE FX ! 0 DO                                    08235000
              BEGIN IF LEVEL { FOLL[FX].[27:6] THEN                     08240000
              BEGIN                                                     08245000
                   LASTRED~0;                                           08250000
                   IF LEVEL { 1 THEN IFOL(0,FOLL[FX].[33:15]) ELSE      08250060
                   IFOL (ORIG,FOLL[FX].[33:15]);                        08255000
                   FOLL [FX] ~ 0;  FX ~ FX - 1;                         08260000
              END ELSE GO TO HIX;                                       08265000
              END                                                       08270000
              END                                                       08275000
              END;                                                      08280000
       HIX:                                                             08285000
                   LOCUR~ORIG;                                          08290000
                   IF ORDR7 = 0 THEN LASTRED~0;                         08290010
                   IF OCURCT < 0 THEN OCURCT~0;                         08290020
                             %IF OCCUR COUNT LESS THAN ZERO             08290021
                    REDFF~0;                                            08290030
                   LTYPE~ 0                                             08295000
              END;                                                      08300000
COMMENT **************************   ITPRO   *************************; 08301000
COMMENT  PROCESSES DATA DIVISION ITEM ENTRIES  ;                        08305000
 PROCEDURE ITPRO;                                                       08310000
              BEGIN LABEL ZWEI,      DREIZIG, ZEHN, ZWOLF, IP3, IP31,   08315000
                   PCAN, EROP, PTL, L1B, STER, RECO, ELF,               08320000
                   KRANK,DREE,                            COMMENT 4-14; 08320010
                            NEUN,LDOF,SYER,L2A,                         08325000
                   TERM;                                                08330000
                   INTEGER DDW;                        COMMENT 2-26-64; 08330050
COMMENT **************************  DATANAME *************************; 08332000
         COMMENT  DATANAME FOR DATA DIVISION ;                          08335000
PROCEDURE DATANAME (SF);                                                08340000
                   VALUE SF; INTEGER SF;                                08345000
              BEGIN  LABEL DA,DAX,DAL,DD2,DD1,                          08350000
                   DD3,DAS,DDD;                                         08350050
              INTEGER T,FTT;                                            08355000
              BOOLEAN  LFND,  NOTFND;                                   08355010
                   LFND~FALSE;                                          08355020
                   NOTFND~FALSE;                                        08355030
                     CY ~ 0; LOCUS~0; IF SF ! 0 THEN SCTRL;             08360000
                     IF DSYN THEN%IF SYNONYM ENTRY                      08360010
              BEGIN LOCUS~OCUR;                                         08360020
       DDD:        IF INOF THEN%IF NEXT SYMBOL "OF" OR "IN"             08360030
              BEGIN SYOUT(MSG[124],ISYMB,LGTH);                         08360040
                   EIND~40 & 84 [32:40:8] & 124 [24:40:8];              08360042
                             %"ILLEGAL QUALIFICATION XXXX"              08360043
                   ERP(EIND,0);  SCTRL;  SCTRL;  GO TO DDD;             08360044
              END;                                                      08360050
                    GO TO DAX;                                          08360060
              END;                                                      08360070
       DA:         IF NOT FOUND THEN                                    08365000
              BEGIN T1~DIVN; DIVN~3;  SCHAD;  DIVN~T1;                  08370000
                             %IF NOT FOUND IN DICTIONARY                08370001
                    IHLNK(CFDE,OCUR);% THEN ENTER INTO DICT.            08370002
                    DRIX~DRIX+1; DR[DRIX]~OCUR & 2 [30:45:3];           08370010
                             %ENTER IN FORWARD REFERENCE ARRAY          08370011
                    IFOL (CLOC,OCUR);                                   08370020
                    LFND~FALSE;                                         08370050
                   IF GATOW THEN NOTFND~TRUE;                           08370060
                    ITYP(16,OCUR);%SET "TEMPORARY" TYPE                 08375000
                    FTT~1;                                              08375005
                   IF INOF THEN%IF NEXT = OF OR IN                      08375010
              BEGIN  CY~CY+1; CCY[CY]~OCUR;%ENTER IN SEARCH ARRAY       08375020
                   JCV(OCUR,J,K); DICT[J,K].[11:1]~1;                   08375030
              END ELSE                                                  08375040
              BEGIN  IHLNK(CFDE,OCUR);  LOCUS~OCUR;                     08375050
                   IF CY ! 0 THEN LOCUS~CCY[1];%LOCATION IS FIRST FOUND 08375055
                   GO TO DAX;                                           08375060
              END;                                                      08375080
                     LOCUS~OCUR; T~LOCUS;                               08380000
       DAL:        IF INOF THEN%IF NEXT = OF OR IN                      08385000
              BEGIN  SCTRL;  SCTRL;                                     08390000
                   IF NOT FOUND THEN                                    08395000
              BEGIN  T1~DIVN; DIVN~3; SCHAD; DIVN~T1;%ENTER IN DICT     08400000
                    DRIX~DRIX+1; DR[DRIX]~OCUR & 2 [30:45:3];           08400010
                             %ENTER AS FORWARD DATA-NAME REF.           08400011
                    IFOL (CLOC,OCUR);                                   08400020
                   ITYP(16,OCUR);  IHLNK(OCUR,CCY[CY]);                 08405000
                   JCV(OCUR,J,K);  DICT[J,K].[11:1]~1;                  08405010
                   CY~CY+1; CCY[CY]~OCUR;%ENTER IN SEARCH ARRAY         08405020
                   T ~ OCUR;                                            08410000
                   GO TO DAL;                                           08415000
              END ELSE                                                  08420000
              BEGIN                                                     08425000
                   IF LFND THEN                                         08425010
              BEGIN T1~CCY[CY];                                         08425020
       DD2:        IF (T2 ~ OHLNK(T1)) ! OCUR THEN                      08425030
              BEGIN  IF T2 = 0 THEN GO TO DD1;                          08425040
                   T1~T2;   GO TO DD2;                                  08425050
              END  ELSE  GO TO DD3;%LINK THROUGH SAME-NAMES TO END      08425060
       DD1:        T1~OSNAM (CCY[CY]); IF T1 ! 0 THEN                   08425070
              BEGIN  CCY[CY]~T1;  GO TO DD2;                            08425080
              END;     ISNAM(AVAIL,CCY[CY]);%SET UP SAME-NAME LINK      08425090
                    FTT~1;                                              08425095
                   JCV(AVAIL,J,K);  DICT[J,K].[11:1]~1;                 08425100
                    OCUR~AVAIL;                                         08425110
                    IFOL(CLOC,OCUR);                                    08425115
                   AVAIL~AVAIL+2; IF AVAIL.[39:9] > 500 THEN            08425120
                   AVAIL~AVAIL+20;  ITYP(16,OCUR);                      08425130
                   CCY[CY]~OCUR;  LFND~FALSE;                           08425140
              END;                                                      08425145
       DD3:        IF NOT LFND THEN IHLNK(OCUR,CCY[CY]);                08425150
                             %SET LAST OCUR HIERARCHY TO POINT TO       08425151
                   CY~CY+1; CCY[CY]~OCUR;                               08425160
                             % THIS AND ENTER IN SEARCH ARRAY           08425161
                   LFND~TRUE;                                           08425180
                   T~OCUR;  IF INOF THEN                                08430000
                    GO TO DAL;   GO TO DAS;                             08430010
              END;   GO TO DAX;                                         08435000
              END;                                                      08440000
              END;                                                      08445000
                   CY~CY+1; CCY [CY]~OCUR; IF OHLNK (OCUR) = 0 THEN     08450000
                             %IF HIERARCHY LINK = 0 THEN                08450001
              BEGIN            % SET LINK TO RECORD OR FILE             08450010
                    IF CDIVN = 3 THEN                                   08450020
                    IHLNK((IF CFDE ! 0 THEN CFDE ELSE RECOC),           08455000
                    OCUR);                                              08455010
              END;                                                      08460000
                   LFND~TRUE;                                           08460010
                    FTT~1;                                              08460030
                    IF OTYP (OCUR) = 4 THEN                             08460050
                             %IF SYNONYM THEN TERMINATE SEARCH          08460051
              BEGIN  LOCUS~OHLNK(OCUR);  OCUR~LOCUS;                    08460060
                    TYPE~OTYP(OCUR);    GO TO DAX;                      08460070
              END;                                                      08460080
                   IF INOF THEN                                         08465000
              BEGIN  SCTRL;  SCTRL; GO TO DA                            08470000
              END;                                                      08475000
       DAS:                                                             08475010
                    IF NOTFND THEN                                      08475020
              BEGIN  LOCUS~0;  GO TO DAX;                               08475030
              END;                                                      08475040
                   IF OSNAM (CCY[CY]) ! 0 THEN                          08475100
              BEGIN EIND~9 & 84 [32:40:8]; ERP(EIND,0);                 08475110
                             %"MISSING QUALIFICATION"                   08475111
                   COMPE~TRUE;                            COMMENT 8-7;  08475112
                    LOCUS ~ 0;  GO TO DAX;                              08475120
              END;                                                      08475130
                   SERCH (CY,CCY);%CALL SEARCH PROCEDURE TO RESOLVE     08480000
       DAX:                                                             08485000
                   USW~FALSE;                                           08485050
                     GATOW~FALSE;                                       08485060
              END;                                                      08490000
COMMENT **************************   COPY    *************************; 08492000
         COMMENT  COPY DATA DESCRIPTIONS ;                              08495000
PROCEDURE COPY;                                                         08500000
         BEGIN INTEGER XY,F,DELTA,FPN,FP2,FP3,CLEV,T2,T3,T4,T5,T6,T91,  08505000
                       T92,J,K,SXX,STRTA,X,Y,Z,TLGTH;                   08505050
               BOOLEAN MDSDFD;                                          08505060
               INTEGER  RNCT;                                   %TR 796 08506000
                   REAL ARRAY SST [0:15];                               08515000
                             %TEMP DATA-NAME REFERNECE ARRAY            08515001
                   LABEL CLX,CP5,CP2,CP4,CP8,CP9,CP81,CP82,CP83;        08520000
              DEFINE  SPX   = INFO [T4,T5].[ 1:10]#,             %TR- 7008521000
                      SQX   = INFO [T4,T5].[11:10]#,             %TR- 7008521100
                      SRX   = INFO [T4,T5].[21:3 ]#,             %TR- 7008521200
                      SLGTH = INFO [T4,T5+2].[33:15]#,                  08521300
                      VALFLG= INFO [T4,T5].[30:1 ]#;             %TR- 7008521900
                   IF NCLAS=1 THEN COMMENT LIBRARY COPY;  COMMENT 10-9; 08525000
                             %IF NEXT SYMBOL IS NON-NUMERIC LIT         08525001
              BEGIN IF NOT FIND THEN GO TO CLX;           COMMENT 10-9; 08525010
                   DELTALC~LEVEL-ICV1(ISYMB[0],4,0,LGTH);%              08530000
                   COMMENT SET UP LIBRARY COPY INCREMENT          10-9  08535000
                   FOR ITPRO;  %                                        08540000
                   SCTRL;COMMENT SCAN PAST LEVEL NO;      COMMENT 10-9; 08545000
                             %                                          08545001
                   SCTRL;COMMENT SCAN PAST THE DATANAME;  COMMENT 10-9; 08550000
                             %                                          08550001
                   GO TO CLX;  %                                        08550010
              END;                                        COMMENT 10-9; 08550020
                   USW~FALSE;  GATOW~TRUE;                              08575059
                   T2 ~ DIVN; DIVN ~ 9 ; DATANAME (1) ;    %            08575060
                             %GET COPY REFERENCE                        08575061
                   IF LOCUS = 0 OR NOT FOUND THEN        COMMENT SI-8;  08580000
                             %IF DATA-NAME NOT FOUND                    08580001
              BEGIN EIND~13 & 38 [32:40:8] & 22 [24:40:8];              08585000
                             %"UNIDENTIFIED COPY OPERAND".              08585001
                   COMPE~TRUE;                                          08585010
                   ERP (EIND,0)      ; GO TO CLX                        08590000
              END;  DIVN~T2;  IF LOCUS = ORIG THEN GO TO CP5;           08595000
                             %IF COPY OF SELF THEN ERROR                08595001
                   DELTA ~ LEVEL - (CLEV ~ F ~ OLEVL(LOCUS));           08605000
                             %F = COPY LEVEL DELTA = DIFFERENCE         08605001
                   X ~LOCUS;                                            08605010
                   DO     %                                             08605020
             BEGIN Y ~ X; X~ DICT[X.ZW,X.ZY].[33:15] ;                  08605030
             END   UNTIL X= 0;                                          08605040
                   IF DICT[Y.ZW,Y.ZY ].[1:5] = 6 THEN MDSDFD ~ TRUE;    08605050
                   IF LEVEL { LASTLL AND LEVEL ! 1 AND ORDR3 ! 0        08605052
                             %ORDR3 = # OF SUBSCRIPTS REQUIRED TO       08605053
                    THEN OCURCT~OCURCT-1; IF OCURCT < 0 THEN OCURCT~0;  08605054
                   IF LEVEL = 1 THEN  %                                 08605055
             BEGIN      OCURCT ~ 0;    %                                08605060
                        RECOC ~ ORIG;  %                                08605070
             END;                      %                                08605080
                    T2~OILNK(LOCUS);   JCV(T2,J,K);                     08605100
                   IF INFO[J,K+1].[32: 4] ! 0  AND             %TR 86   08605120
                      INFO[J,K+1].[19:13] = 0  THEN            %TR 86   08605140
              BEGIN  EIND~40 & 55 [32:40:8] & 38 [24:40:8]              08605160
                             %"ILLEGAL SUBSCRIPT COPY OPERAND".         08605161
                    & 22 [16:40:8];   ERP(EIND,0);                      08605180
                     COMPE~TRUE;   GO TO CLX;                           08605200
              END;                                                      08605220
                   SXX ~ 0 ; STRTA ~ LOCUS ;     %                      08610000
              XY ~ OFSZ (LOCUS) ;                                       08615000
                   FPN~0;     JCV(T2,J,K);                              08615010
                    FP2~INFO[J,K+2].[3:15];                             08615020
                   RNCT ~ 0;    FL8 ~ TRUE;                     %TR 796 08615050
                   REDFF ~ 0;  FP3~0;                                   08615060
                    IF OLEVL(LOCUS) = 1 THEN                            08620000
                             %IF COPY LEVEL IS RECORD(01 LEVEL).        08620001
              BEGIN JCV(OILNK(LOCUS),J,K);                              08625000
                   IF INFO[J,K].[24:5] > 3 THEN                         08625010
                             %IF INFO ENTRY LONGER THAN 3 WORDS         08625011
              BEGIN                                    COMMENT 2-26-64; 08625020
                   IF INFO[J,K+3] ! 0 THEN FP3~INFO[J,K+3].[33:15];     08630000
                             %SET SIZE, OCCURS, SIGN DATA-NAME          08630001
                             %  LINKS FOR THIS ITEM                     08635000
                   IF FP3 = 0 THEN FP3~INFO[J,K+3].[3:15];              08640000
              END;                                     COMMENT 2-26-64; 08640050
              END;                                                      08645000
 CP2:              LEVEL ~ F+DELTA; IF OTYP (LOCUS) = 1 THEN GO TO CLX; 08650000
                             %COMPUTE NEW LEVEL. IF RESERVED WORD.      08650001
                   T6~4;                                                08655000
                   IF F = 58 THEN                                       08655010
              BEGIN  LEVEL~58;  IHLNK(LOCUR,ORIG);                      08655012
              END ELSE                                                  08655015
              BEGIN                                                     08655020
                   IF LEVEL > 49 OR LEVEL < 1 THEN                      08660000
                             %IF ADJUSTED LEVEL OUT OF LEVEL RANGE      08660001
              BEGIN EIND~38 & 35 [32:40:8] & 8 [24:40:8];               08665000
                             %"COPY LEVEL ERROR".                       08665001
                   ERP (EIND,0)      ; GO TO CLX                        08670000
              END;                                                      08675000
              END;                                                      08675010
                   IF LOCUS = ORIG THEN                                 08680000
 CP5:         BEGIN EIND ~ 40 ; EIND.[32:8]~ 38  ; ERP (EIND,0)      ;  08685000
                             %"ILLEGAL COPY".                           08685001
                   GO TO CLX                                            08690000
              END;   SIZE~0;  USAGE~0;                                  08695000
                   IF RNAM THEN                                         08695010
              BEGIN RNCT ~ RNCT +1;                             %TR 796 08695015
                   IF RNCT ! 1 THEN                             %TR 796 08695016
              BEGIN RNT[REX.[39:3],REX.[42:6]]~ORIG; REX~REX+1;         08695020
                             %IF RENAMING FILE SAVE OCUR                08695021
              END;                                                      08695030
              END;                                              %TR 796 08695040
                   IF ORIG = 0 THEN GO TO CLX;                          08695050
                   JCV (ORIG,J,K);  JCV (LOCUS,T4,T5);                  08700000
                   DICT[J,K].[1:17]~DICT[T4,T5].[1:17];                 08705000
                             %COPY ALL BUT LINKS FROM DICT              08705001
                   DICT[J,K+1].[1:17]~DICT[T4,T5+1].[1:17];             08710000
                   ILEVL(LEVEL,ORIG);                                   08710020
                   IF LOCUS = FP3 THEN                                  08715000
              BEGIN                                                     08720000
                   OCOC~ORIG;  %IF THIS IS OCCURS-DEPENDING THEN SAV    08725000
              END;                                                      08730000
                    T2 ~ OILNK (LOCUS); IF T2 ! 0 THEN%TEST INFO LINKS  08735000
              BEGIN T3 ~ OILNK (ORIG);  IF T3 = 0 THEN                  08740000
              BEGIN IILNK (ORIG,IX); T3~IX;                             08745000
              END;                                                      08755000
                   SIZE~OFSZ(LOCUS);%SET GROUP/ELEMENTARY FLAG          08760000
                   TX~NOT OELEF(LOCUS);                   COMMENT 1-29; 08765000
                   IF OTYP (LOCUS) = 7 AND NOT OELEF (LOCUS)  THEN      08770000
                   SIZE ~ 0;                                            08775000
                   IF TX THEN SIZE~0;                                   08780000
                   INSZ~0;    IF NOT TX THEN                            08780010
              BEGIN  IF OUSG(LOCUS) = 0 THEN INSZ~SIZE ELSE             08780020
              BEGIN  INSZ~IF SIZE > 11 THEN 16 ELSE 8;                  08780030
              END;                                                      08780040
              END;                                                      08780050
                    USAGE~OUSG(LOCUS);                                  08780100
                    CLASS~OCLAS(LOCUS);                                 08780110
                   JCV (T3,J,K); JCV (T2,T4,T5);  T6 ~                  08785000
                   INFO [T4,T5].[24:5]; INFO [J,K].[24:5]~T6;           08790000
                             %SAVE AND SET INFO ARRAY ENTRY LENGTH      08790001
                   INFO[J,K].[33:15]~INFO[T4,T5].[33:15];               08795000
                             %COPY EXTERNAL CHARACTER SIZE.             08795001
                   INFO[J,K].[30:2]~INFO[T4,T5].[30:2];                 08800000
                             %COPY VALUE & PICTURE FLAGS.               08800001
                   IF VALFLG=0 AND NOT MDSDFD AND SLGTH!0 THEN          08801000
                        IF OLEVL(LOCUS)} OLEVL(OFOL(LOCUS)) THEN        08801020
%                       THIS LOOKS TO SEE IF CURRENT LEVEL { NEXT LEVEL 08801022
              BEGIN     EMIL (OPR ,MKS);                         %TR- 7008801100
                        EMIL (LITC,SQX);                         %TR- 7008801200
                        EMIL (DESC,SPX);                         %TR- 7008801300
                        EMIL (LITC, QX);                         %TR- 7008801500
                        EMIL (DESC, PX);                         %TR- 7008801600
                        EMIL (OPR ,CMN);                         %TR- 7008801700
COMMENT TEMPORARY;      SGMTLVL ~ SGMTLVL + 1;   % DOWN TO CHAR MODE  7008801750
                        CEMLT (   2,RSA);                        %TR- 7008801800
                        IF SRX ! 0 THEN CEMLT( SRX,SFS);         %TR- 7008801900
                        IF  RX ! 0 THEN CEMLT(  RX,SFD);         %TR- 7008801950
                                IF (TLGTH~SLGTH)}3969 THEN       %TR- 7008801960
                   BEGIN               CEMLT ( TLGTH DIV 3969,BNS);  %7008801970
                                       CEMLT ( 63, BNS);         %TR- 7008801980
                                       CEMLT ( 63, TRS);         %TR- 7008801990
                                       CEMLT ( 0, ENS);          %TR- 7008802000
                                       CEMLT ( 0, ENS);          %TR- 7008802005
                   END;         IF (TLGTH~TLGTH MOD 3969)}63 THEN%TR- 7008802010
                   BEGIN               CEMLT ( TLGTH DIV 63  ,BNS);  %7008802020
                                       CEMLT ( 63, TRS);         %TR- 7008802030
                                       CEMLT ( 0, ENS);          %TR- 7008802040
                   END;         IF (TLGTH~ TLGTH MOD 63) > 0 THEN%TR- 7008802045
                                       CEMLT (TLGTH,TRS);        %TR- 7008802050
                        CEMLT (0,CMX);                           %TR- 7008802060
COMMENT TEMPORARY;      SGMTLVL ~ SGMTLVL - 1;   % UP TO WORD MODE   %7008802070
                   IF CREG > 6000 THEN %SEGMENT > 750 WORDS     %TR 762 08802100
              BEGIN EMIL(OPR,MKS);     EMIL(OPDC,PRTCTR);       %TR 762 08802200
                   EMIL(OPR,XIT); %                             %TR 762 08802300
                   SEGDUMP(SEG,CREG);                           %TR 762 08802400
                   T10 ~ SEG[0,0];                              %TR 762 08802500
                   MAKELABEL(0,PRTCTR,0,0);                     %TR 762 08802600
                   UPIT;                                        %TR 762 08802700
              END; END;                                         %TR 762 08802800
                   JCV (T3+1,J,K); JCV (T2+1,T4,T5);                    08805000
                   OCCURS ~ INFO[T4,T5].[19:13]; % OCCURANCES  %TR 86   08805010
                    IF OCCURS ! 0 THEN OCURCT~OCURCT+1;                 08805015
                   T10 ~ INFO[T4,T5].[32:4];  % SUBSCRIPTS     %TR 86   08805020
                             %# OF SUBSCRIPTS REQUIRED OF LOCUS.        08805021
                   FP2~INFO[T4,T5+1].[3:15];                            08805030
                   WORDTRAN (INFO[T4,T5],INFO[J,K],T6-1);               08810000
                             %COPY REST OF INFO                         08810001
                    T91~OCURCT;  IF LEVEL ! 58 THEN                     08810010
              BEGIN  IF T91 ! 0 THEN                                    08810020
              BEGIN  IF LEVEL < LASTLL THEN                             08810030
              BEGIN  T92~NX;  WHILE STK[T92,0] } LEVEL DO               08810040
              BEGIN  IF STK[T92,3] ! 0 THEN T91~T91 - 1;                08810050
                     T92 ~ T92 - 1;                                     08810060
              END;                                                      08810070
              END;                                                      08810080
              END;                                                      08810090
              END;    IF T91 < 0 THEN T91~0;                            08810100
                   INFO[J,K+1].[1:1]~IF CNSTFLG THEN 1 ELSE 0;          08815000
                   INFO[J,K] ~ INFO[J,K] & OCCURS [19:35:13]   %TR 86   08815002
                                         & T91    [32:44: 4] ; %TR 86   08815004
                    INFO[J,K+1].[3:15]~IF FPN = 0 THEN SOCUR ELSE FP2;  08815020
                    FP2~INFO[T4,T5+1].[3:15];%SAVE INDEX OF SYMBOL      08820000
                   IF T6 > 3 THEN                      COMMENT 2-26-64; 08820050
              BEGIN                                    COMMENT 2-26-64; 08820060
                   IF (X~INFO[T4,T5+2].[ 3:15]) ! 0 THEN                08825000
                             %IF SIZE CEPENDING THEN FIX NEW REF.       08825001
              BEGIN IF X > STRTA THEN                                   08830000
              BEGIN IF X < LOCUS THEN                                   08835000
              BEGIN WHILE OSNAM (X) ! 0 DO X~OSNAM(X);                  08840000
                   INFO[J,K+2].[ 3:15]~X; GO TO CP81;                   08845000
              END ELSE                                                  08850000
              BEGIN  SXX~SXX+1; SST[SXX]~X & ORIG[18:33:15] &           08855000
                             %IF FORWARD REF THEN SAVE OCUR             08855001
                    2 [3:45:3]; GO TO CP81;                             08860000
              END;                                                      08865000
              END;                                                      08870000
              END;                                                      08875000
       CP81:                                                            08880000
                   IF (X~INFO[T4,T5+2].[18:15]) ! 0 THEN                08885000
                             %IF DATA-NAME SIGN THEN FIX UP             08885001
              BEGIN IF X > STRTA THEN                                   08890000
              BEGIN IF X < LOCUS THEN                                   08895000
              BEGIN WHILE OSNAM (X) ! 0 DO X~OSNAM(X);                  08900000
                   INFO[J,K+2].[18:15]~X; GO TO CP82;                   08905000
              END ELSE                                                  08910000
              BEGIN  SXX~SXX+1; SST[SXX]~X & ORIG[18:33:15] &           08915000
                             %IF FORWARD REF THEN SAVE DATA             08915001
                    1 [3:45:3]; GO TO CP82;                             08920000
              END;                                                      08925000
              END;                                                      08930000
              END;                                                      08935000
       CP82:                                                            08940000
                   IF (X~INFO[T4,T5+2].[33:15]) ! 0 THEN                08945000
                             %IF OCCURS DEPENDING THEN FIX UP           08945001
              BEGIN IF X > STRTA THEN                                   08950000
              BEGIN IF X < LOCUS THEN                                   08955000
              BEGIN WHILE OSNAM (X) ! 0 DO X~OSNAM(X);                  08960000
                   INFO[J,K+2].[33:15]~X;                               08965000
              END ELSE                                                  08970000
              BEGIN  SXX~SXX+1; SST[SXX]~X & ORIG[18:33:15] &           08975000
                             %IF FORWARD REF THEN SAVE DATA             08975001
                    3 [3:45:3];                                         08980000
              END;                                                      08985000
              END;                                                      08990000
              END;                                                      08995000
              END;                                    COMMENT 4-30;     08997000
                   IF SXX ! 0 THEN                                      09000000
              BEGIN FOR X~1 STEP 1 UNTIL SXX DO                         09005000
              BEGIN IF (SST[X].[33:15]) = LOCUS THEN                    09010000
              BEGIN T1~OILNK(SST[X].[18:15]);  JCV(T1+3,Y,Z);           09015000
                             %FIX UP FORWARD REFERENCES TO SIZE         09015001
                   IF T1 ! 0 THEN                                       09015010
              BEGIN                                                     09015020
                   IF SST[X].[3:3] = 1 THEN%  OCCURS OR SIGN DATA-NAMES 09020000
                   INFO[Y,Z].[18:15]~ORIG;                              09025000
                   IF SST[X].[3:3] = 2 THEN INFO[Y,Z].[3:15]~ORIG;      09030000
                   IF SST[X].[3:3] = 3 THEN INFO[Y,Z].[33:15]~ORIG;     09035000
                   SST[X]~0;                                            09040000
              END;                                                      09045000
              END;                                                      09045010
              END;                                                      09050000
              END;                                                      09055000
                    IF LEVEL = 58 THEN                                  09055010
              BEGIN  X~OILNK(LOCUR);  JCV(X,J,K);                       09055020
                    JCV(OILNK(ORIG),Y,Z);                               09055030
                    INFO[Y,Z].[1:23]~INFO[J,K].[1:23];                  09055040
              END  ELSE                                                 09055050
                   ASSIGN (ORIG,PX,QX,RX,TX);                           09060000
                             %MAKE NEW ASSIGNMENT AND UPDATE INFO       09060001
                   SETIX (T6);  TX ~ FALSE;% INDEX                      09065000
              END;                                                      09065010
       CP8:                                                             09070000
                   IF FPN = 0 THEN                                      09075000
              BEGIN  IF SOCUR ! FP2 THEN GO TO CP9;                     09080000
              END;                                                      09085000
                   T2~OSNAM (LOCUS); IF T2 = 0 THEN                     09090000
                             %IF NOT FIRST COPY ITEM FIX UP SYMBOL      09090001
                   T2~LOCUS ELSE% SAME-NAME LINKS                       09095000
              BEGIN WHILE (OSNAM (T2) ! 0 ) DO T2~OSNAM (T2);           09100000
              END;  IF T2 ! ORIG THEN ISNAM(ORIG,T2);                   09105000
       CP9:                                                             09110000
                    SOCUR~FP2;                                          09110010
                    IF LEVEL = 58 THEN                                  09110080
              BEGIN  IF L88 ! 0 THEN IFOL(ORIG,L88) ELSE                09110082
              BEGIN  IF LOCUR ! 0 THEN IFOL(ORIG,LOCUR);                09110084
              END;   L88~ORIG;   CONDN~TRUE;                            09110086
              END  ELSE                                                 09110087
              BEGIN                                                     09110088
                   IF LOCUR ! 0 THEN                                    09110090
              BEGIN  IF L88 = 0 THEN IFOL(ORIG,LOCUR) ELSE              09115000
                             %PICK UP FOLLOWER FOR NEXT COPY            09115001
                    IFOL(ORIG,L88);                                     09115010
              END;                                                      09115050
                   HIER;   L88~0; CONDN~FALSE;%UPDATE HIERARCHY         09120000
COMMENT 1/30 ;     IF LEVEL =1 AND NOT LABLFLG THEN QX~RX~0;            09120001
              END;  LOCUS~OFOL(LOCUS);                                  09120002
                    IF LOCUS = 0 THEN%IF NO MORE GO TO  EXIT            09120010
                   GO TO CLX; F~OLEVL (LOCUS);                          09125000
                   IF F { CLEV THEN GO TO CLX;                          09125050
                   FPN~1;                                               09130000
                   T9~F+DELTA;                                          09130010
                    IF F ! 58 THEN                                      09130015
              BEGIN IF OCCURS ! 0 AND OCURCT ! 0 AND                    09130020
                   (T9 { LEVEL) THEN OCURCT~OCURCT-1;                   09130022
              END;      OCCURS~0;                                       09130030
                      IF OCURCT < 0 THEN OCURCT~0;                      09130040
                   IF F { CLEV THEN GO TO CLX;  ORIG~AVAIL;             09135000
                             %IF STILL IN LEVEL NUMBER RANGE            09135001
                   X~OILNK(LOCUS);  IF X ! 0 THEN                       09135010
              BEGIN JCV(X,J,K); X~INFO[J,K+2].[3:15];                   09135020
                   FOR J~1 STEP 1 UNTIL DRIX DO                         09135030
              BEGIN IF DR[J].[33:15] ! 0 THEN                           09135040
              BEGIN  IF X = OFOL(DR[J].[33:15]) THEN                    09135050
              BEGIN IF (K~OHLNK(DR[J].[33:15])) = CFDE OR K = OCOC THEN 09135060
              BEGIN  ORIG ~ DR[J].[33:15];  X~LOCUS; DR[J]~0;           09135070
                   GO TO CP2;                                           09135080
              END;                                                      09135100
              END;                                                      09135110
              END;                                                      09135120
              END;                                                      09135130
              END;                                                      09135140
                   AVAIL ~ AVAIL + 2;   X ~ LOCUS ;                     09140000
       CP4:        JCV (ORIG,J,K);  IF K > 500 THEN                     09145000
                             %ADJUST OVER ENDS OF ROWS OF ARRAYS        09145001
              BEGIN  AVAIL~AVAIL+511;  AVAIL.[39:9]~0;                  09150000
                   ORIG~AVAIL;  AVAIL~AVAIL+2;                          09155000
              END;  GO TO CP2;                                          09160000
      CLX:                                                              09165000
                   IF OCCURS ! 0 THEN                                   09165002
              BEGIN  OCCURS ~0;  OCURCT~OCURCT-1;                       09165004
              END; IF OTYP(LOCUR) ! 6 THEN                              09165006
              BEGIN                                                     09165007
                   IF LOCUR ! 0 THEN                                    09165008
              BEGIN                                                     09165009
                   IELEF(LOCUR);  ITYP(8,LOCUR);                        09165010
                    SZ~XY;  IF OCURCT < 0 THEN OCURCT~0;                09165020
              END;  END;                                                09165500
              END;                                                      09165600
                   INTEGER PROCEDURE INTEG; FORWARD;                    09170000
COMMENT **************************  ALLERLEI *************************; 09172000
INTEGER PROCEDURE ALLERLEI;    %PROCESS LOW-FREQUENCE DECLARATIONS      09175000
              BEGIN                                                     09180000
              LABEL P31,P3,NEIN,AXX,ROW,L1B,L2A,                        09180010
                   RNCH1,RNCH2,RENER,ASGNERR;              COMMENT DCDF;09180020
                   IF KEY = 394 THEN%IF "SIGNED"                        09190000
                   IF SGND ! 0 THEN % DUPLICATE SIGN SPEC      %CJC 079 09191000
              BEGIN ERP(95 & 8[32:40:8],0);   COMPE ~ TRUE;    %CJC 079 09192000
                   GO TO P3;        % "SIGNED ERROR"           %CJC 079 09193000
              END  ELSE                                        %CJC 079 09194000
              BEGIN ISGND (ORIG);%SET SIGNED FLAG                       09195000
                   SCTRL; IF TYPE = 1 OR SCLAS = 7 THEN                 09200000
                             %IF RESERVED WORD OR PERIOD                09200001
              BEGIN JCV(ORIG,J,K);                     COMMENT 2-26-64; 09205000
                   DICT[J,K].[13:3] ~1;%SET SIGN TYPE TO 1("S" SIGN)    09205010
                    SGND~50;   GO TO P31;                               09205020
              END;   SGND~20;                                           09210000
                   USW~TRUE;                                            09210050
                   DATANAME (0); JCV (OILNK (ORIG)+3,J,K);              09215000
                             %GET DATA-NAME SIGN OCUR                   09215001
                   INLGTH ~ INLGTH+1;                  COMMENT 2-27-64; 09215050
                    INFO [J,K].[18:15] ~ LOCUS;                         09220000
                             %SAVE DATA-NAME SIGN LINK                  09220001
                   GO TO  P3                                            09225000
              END;                                                      09230000
         COMMENT SYNCHRONIZED;                                          09235000
                   IF KEY = 396 OR  % SY OR SYNCHRONIZED       %CJC 084 09240000
                   LGTH = 4 AND ISYMB[0].[24:24] = "SYNC" THEN %CJC 084 09241000
              BEGIN SCTRL; GO TO  P3%IGNORE SYNCHRONIZATION             09245000
              END;                                                      09250000
         COMMENT  POINT LOCATION ;                                      09255000
                   IF (KEY = 382) OR (KEY = 384) THEN                   09260000
                             %IF"POINT" OR "PT" THEN                    09260001
              BEGIN SCTRL; IF KEY = 382 THEN SCTRL;%IF "LOCATION"       09265000
                   PTCLS~TRUE;                                          09265050
                   IF KEY = 391 THEN T8~-1 ELSE T8~1;                   09270000
                             %IF RIGHT THEN SET MINUS                   09270001
                   SCALE~ INTEG | T8;                                   09275000
                   SCTRL;                                               09280000
                   IF PCLGTH ! 0 THEN                                   09280010
              BEGIN EIND ~ 40 & 110[32:40:8] & 27[24:40:8]; ERP(EIND,0);09280020
                             %"ILLEGAL DUPL. SPECIFICATION"             09280021
              END;                                                      09280040
                   IF KEY = 382 THEN SCTRL; GO TO  P31%IF "PLACES"      09285000
              END;                                                      09290000
         COMMENT ZERO SUPPRESS ;                                        09295000
                   IF KEY = 344 THEN                                    09300000
              BEGIN ZS~ 1;   SCTRL; IF KEY ! 395 THEN GO TO NEIN;       09305000
                             %SET ZERO SUPPRESS FLAG, IF NOT            09305001
                             %SUPPRESS THEN GO TO ERROR                 09305002
                   GO TO  P3;                                           09310000
              END;                                                      09315000
                   IF KEY = 358 THEN%IF "Z5"                            09320000
              BEGIN ZS ~ 1; GO TO  P3                                   09325000
              END;                                                      09330000
         COMMENT CHECK PROTECT ;                                        09335000
                   IF KEY = 354 THEN                                    09340000
              BEGIN SCTRL;  CP  ~ 1;     IF KEY  ! 354 THEN GO TO  P31  09345000
                             %SET CHECK PROTECT FLAG                    09345001
                   ELSE GO TO  P3%IF "PROTECT"                          09350000
              END;                                                      09355000
         COMMENT FLOAT DOLLAR SIGN ;                                    09360000
                   IF KEY = 368 THEN                                    09365000
              BEGIN SCTRL; IF KEY = 361 THEN SCTRL; FS ~ 1;             09370000
                             %SET FLOAT $ FLAG                          09370001
                   IF KEY = 394 THEN GO TO  P3 ELSE GO TO NEIN          09375000
              END;                                                      09380000
                   IF KEY = 369 THEN                                    09385000
              BEGIN FS ~ 1; GO TO  P3%IF "FS"                           09390000
              END;                                                      09395000
         COMMENT BLANK WHEN ZERO;                                       09400000
                   IF KEY = 352 THEN                                    09405000
              BEGIN BZ~1;  SCTRL; IF KEY = 352 THEN SCTRL;              09410000
                             %SET BLANK-WHEN-ZERO FLAG                  09410001
                   IF KEY ! 344 THEN GO TO NEIN ELSE GO TO  P3          09415000
              END;                                                      09420000
                   IF KEY = 353 THEN                                    09425000
              BEGIN BZ ~ 1; GO TO  P3%IF "BZ"                           09430000
              END;                                                      09435000
         COMMENT LEAVING OPTION;                                        09440000
                   IF KEY = 372 THEN                                    09445000
              BEGIN LP ~ INTEG; SCTRL;%GET "LEAVING" INTEGER            09450000
                   IF KEY ! 382 THEN GO TO  P31 ELSE                    09455000
                   GO TO  P3                                            09460000
              END;                                                      09465000
                   IF KEY = 375 THEN                                    09470000
              BEGIN LP ~ INTEG; GO TO  P3%IF "LP"                       09475000
              END;                                                      09480000
         COMMENT JUSTIFIED OPTION;                                      09485000
                   IF KEY = 371 OR  % JS OR JUSTIFIED          %CJC 082 09490000
                   LGTH = 4 AND ISYMB[0].[24:24] = "JUST" THEN %CJC 082 09491000
              BEGIN SCTRL; IF KEY = 373 THEN%IF "LEFT"                  09495000
              BEGIN JS ~ 2; GO TO  P3                                   09500000
              END; IF KEY = 391 THEN%IF "RIGHT"                         09505000
              BEGIN JS ~ 1; GO TO  P3                                   09510000
              END;  GO TO NEIN %IF NEIGHER, THEN ERROR                  09515000
              END;                                                      09520000
                   IF KEY = 386 THEN                                    09530000
              BEGIN SCTRL; SCTRL; IF KEY ! 261 THEN GO TO  P31;         09535000
                             %IGNORE RANGE DECLARATION                  09535001
                   SCTRL; GO TO  P3                                     09540000
              END;                                                      09545000
         COMMENT RENAMES ;                                              09550000
                   IF KEY = 389 THEN                                    09555000
              BEGIN IF REN ! 1 THEN                                     09560000
              BEGIN EIND ~35 ; EIND.[32:8] ~  8; ERP (EIND,0)           09565000
                             %IF NOT LEVEL 77 THEN ERROR                09565001
              END;  INFLG ~ TRUE;  REN~ 0;%"LEVEL ERROR".               09570000
                   USW~FALSE;  GATOW~TRUE;                              09570050
                   DATANAME (1); LOC1~LOCUS; LOC2~0;%GET FIRST OPERAND  09575000
                   X~LOCUS;  IF X = 0 THEN                              09575010
              BEGIN                                                     09575020
       RENER:      MSG[124]~ "RENAME";                                  09575030
                   MSG[124]~MSG[124] & 7 [1:43:5] & 48 [6:42:6];        09575040
                   EIND~40 & 124 [32:40:8] & 22 [24:40:8];              09575050
                             %"ILLEGAL RENAMES OPERAND".                09575051
                   COMPE~TRUE;                            COMMENT 8-7;  09575055
                   ERP(EIND,0);   GO TO NEIN;                           09575060
              END;                                                      09575070
       RNCH1:      IF (T1~OHLNK(X)) ! RECOC THEN                        09575080
              BEGIN  IF T1 = 0 THEN GO TO RENER;                        09575090
                    X~T1;  GO TO RNCH1;                                 09575100
              END;                                                      09575120
                   SCTRL;                                               09580000
                   IF KEY = 261 THEN%IF "THRU"                          09585000
              BEGIN GATOW~TRUE; DATANAME(1);  LOC2~LOCUS;               09590000
                             %GET THRU OPERAND                          09590001
                   X~LOCUS;  IF X = 0 THEN GO TO RENER;                 09590010
       RNCH2:      IF (T1~OHLNK(X)) ! RECOC THEN                        09590020
              BEGIN  IF T1 = 0 THEN GO TO RENER;                        09590030
                    X~T1;  GO TO RNCH2;                                 09590040
              END;                                                      09590060
              END;                                                      09595000
                   ITYP (9,ORIG); IFOL (LOC1,ORIG); JCV (ORIG,J,K);     09600000
                             %SET TYPE AND FIRST NAME                   09600001
                   DICT [J,K+1].[33:15]~LOC2;%SET THRU OCUR             09605000
                   IF SCLAS = 7 THEN GO TO P31;                         09610000
                   IF NCLAS ! 7 THEN GO TO NEIN;                        09610010
                             %IF NOT PERIOD THEN ERROR                  09610011
                     SCTRL;  GO TO P31;                                 09610020
              END;                                                      09615000
         COMMENT REDEFINES ;                                            09620000
                   IF KEY = 388 THEN %                             SI18309625000
              BEGIN SCTRL;%                                        SI18309626000
                   REDEFYNES ~ TRUE;                            %TR 776 09626100
         IF TYPE = 1 OR SCLAS ! 4 THEN GO TO L2A;               %TR-125409626200
                   IF DSYN THEN % IF SYNONYM                       SI18309627000
              BEGIN LOCUS ~ OCUR;%                                 SI18309628000
                   WHILE INOF DO%IF NEXT SYMBOL="OF" OR "IN"       SI18309629000
              BEGIN SYOUT(MSG[124],ISYMB,LGTH);%                   SI18309630000
                   ERP(40&84[32:40:8]&124[24:40:8],0);%            SI18309631000
                   SCTRL;SCTRL;%      "ILLEGAL QUALIFICATION XXXX" SI18309632000
              END; %                                               SI18309633000
              END  ELSE%                                           SI18309634000
                   IF FOUND THEN ELSE % IF NOT ALREADY IN DICT THENSI18309635000
         L2A: BEGIN LOCUS ~ 0;%   "UNIDENTIFIED REDEFINES OPERAND" SI18309636000
                   ERP(13&68[32:40:8]&22[24:40:8],0);%             SI18309637000
                    COMPE ~INFLG ~TRUE ;       %                        09638000
                   WHILE INOF DO%                                  SI18309639000
              BEGIN SCTRL;SCTRL;%                                  SI18309640000
                             %IF NOT IN SAME FILE THEN ERROR            09640001
              END; %                                               SI18309641000
                   GO TO NEIN;%                                    SI18309642000
              END; %                                               SI18309643000
                   IF ORDR < LEVEL THEN GO L1B;%ITEM CANT REDEFINE%SI18309643100
                               %ITS OWN QUALIFIER OR ANY ITEM OF   SI18309643200
                   IF ORDR = LEVEL THEN LOCUS~ORDR1 ELSE%DIFFERENT SI18309643300
              BEGIN %          LEVEL NR. IF RD-ED ITEM NOT A GROUP%SI18309643400
                               %ITEM,NO NEED TO LOOK IN STACK;ELSE%SI18309643500
                   X ~ NX;%     CHECK HIERARCHY STACK OF PRECEEDINGSI18309644000
                   WHILE STK[X,0]>LEVEL DO X ~ X - 1;% ITEMS TO BE SI18309645000
                   IF STK[X,0]!LEVEL THEN%  SURE REDEFINED ITEM HASSI18309646000
         L1B: BEGIN COMPE~TRUE;%SAME LEVEL NR. IF NOT,THEN         SI18309647000
                   ERP(68&8[32:40:8],0);%  "REDEFINES ERROR"       SI18309648000
                   GO ROW;%YOUR BOAT                               SI18309649000
              END;%                                                SI18309650000
                   LOCUS ~ STK[X,1];% LOOK DOWN SAME-NAME LINKS TO SI18309651000
              END; %                                               SI18309651500
                   T1 ~ OCUR + 1;%    BE SURE IT IS RIGHT ITEM-I.E.SI18309652000
                   WHILE OCUR ! LOCUS DO %   AREA BEING REDEFINED  SI18309652500
              BEGIN %                        AND REDEFINITION MUST SI18309653000
                   IF(OCUR~DICT[T1.ZW,T1.ZY].SAMNAM)=0 THEN GO L1B%SI18309653500
                       ELSE T1 ~ OCUR + 1;%  BE CONTIGUOUS.        SI18309654000
              END; T1 ~ T2 ~ REDFF ~ LOCUS;%                       SI18309654500
                   WHILE INOF DO%    QUALIFICATION IS UNNECESSARY  SI18309655000
              BEGIN SCTRL;SCTRL;%    BUT CHECK IT IF PRESENT:  GO  SI18309656000
                   DO %        UP HIERARCHY LINKS UNTIL GET TO AN  SI18309657000
              BEGIN %          ITEM ALSO ON SAME-NAME LINKS OF 1ST SI18309658000
                   IF (T1~DICT[T2.ZW,T2.ZY].HRLINK)=0 THEN GO L2A;%SI18309659000
                   X ~ OCUR;%  QUALIFIER;REPEAT FOR ALL QUALIFIERS.SI18309660000
                   WHILE X ! T1 AND X ! 0 DO % IF RUN OFF END OF   SI18309661000
              BEGIN %          HIERARCHY CHAIN, THEN ONE OF THE    SI18309662000
                   X ~ X + 1;% QUALIFIERS WAS WRONG.               SI18309663000
                   X ~ DICT[X.ZW,X.ZY].SAMNAM;%                    SI18309664000
              END; %                                               SI18309665000
              END  UNTIL (T2~T1) = X; %                            SI18309666000
              END; %                                               SI18309667000
                   IF CDIVN = 3 THEN% IF FILE SECTION              SI18309668000
              BEGIN%                                               SI18309669000
                   IF OTYP(LOCUS)=7 THEN GO L1B;% IF RECORD NAME   SI18309670000
                   WHILE(X~DICT[T1.ZW,T1.ZY].HRLINK)!0 DO T1 ~ X;% SI18309671000
                   IF T1 ! CFDE THEN GO TO L1B;%BE SURE WE REDEFINE  18309672000
                                 % ONLY WITHIN SAME RECORD         SI18309673000
              END; %                                               SI18309674000
                   IHLNK(DICT[LOCUS.ZW,LOCUS.ZY].HRLINK,ORIG);%    SI18309705000
                             %RESET HIERARCHY LINK                      09705001
                   IF OELEF (LOCUS) THEN SZ~OFSZ (LOCUS);               09710000
                             %IF REDEFINES ELEMENTARY THEN GET          09710001
                             %    OLD SIZE                              09710002
                   IF ORDR1 !0 THEN IFOL(0,ORDR1);       COMMENT 2-7-64;09710050
                   OAS (PX,QX,RX,LOCUS);                                09715000
                             %SET ASSIGNMENT BACK TO REDEFINES          09715001
                   IF OLEVL(LOCUS) = 1 AND CDIVN = 3 THEN GO L1B;% SI18309720000
                   GO TO  P3;                                           09725000
              END;                                                      09730000
                   IF KEY = 306 THEN                                    09740000
              BEGIN IF CDIVN ! 31 THEN                                  09745000
              BEGIN EIND~40 & 46 [32:40:8]; ERP (EIND,0)      ;         09750000
                             %IF FILE SECTION THEN ERROR                09750001
                   GO TO ROW;  %"ILLEGAL VALUE".                        09755000
              END; SCTRL;                                               09760000
                   VALUEFLAG ~ TRUE;                            %TR 687 09761000
                   LITF~TRUE;  %SET "LITERAL" FLAG                      09765000
          COMMENT SET UP LITERAL IN LTR ARRAY FOR MOVE GENERATOR;       09770000
                   IF NOT SETLTR THEN GO TO ROW;  LITF~TRUE;            09775000
                             %CALL PROCEDURE TO PROCESS LIT             09775001
                   GO TO  P31;                                          09780000
              END;                                                      09785000
         COMMENT ASSIGN TO MEMORY;                         COMMENT DCDF;09785010
                   IF KEY=263 THEN COMMENT"ASSIGN";        COMMENT DCDF;09785020
              BEGIN SCTRL;IF KEY!264 THEN COMMENT"TO";     COMMENT DCDF;09785030
ASGNERR:      BEGIN ERP(77,"ASSIGN");                      COMMENT DCDF;09785040
                   GO TO NEIN;COMMENT"ASSIGN SYNTAX ERROR";COMMENT DCDF;09785050
              END; SCTRL;IF KEY!215 OR LEVEL!1 OR          COMMENT DCDF;09785060
                   CDIVN!31 THEN GO TO ASGNERR;            COMMENT DCDF;09785070
                   ASYGNES ~ TRUE;                              %TR 776 09785071
                   IMIT(LITC,1,RFIX+6);                    COMMENT DCDF;09785080
                   COMMENT MARK AS A SAVE ARRAY;           COMMENT DCDF;09785090
                   GO TO P3;                               COMMENT DCDF;09785100
              END;                                         COMMENT DCDF;09785110
                   ALLERLEI ~ 3; GO TO AXX;                             09790000
       ROW:        IF SCLAS ! 7 THEN                                    09795000
              BEGIN SCTRL; GO TO ROW;%IF NOT PERIOD THEN SKIP TO PERIOD 09800000
              END;                                                      09805000
       NEIN:       ALLERLEI ~ 0; GO TO AXX;                             09810000
       P31:        ALLERLEI ~ 1; GO TO AXX;                             09815000
       P3:         ALLERLEI ~ 2; GO TO AXX;                             09820000
        AXX:                                                            09825000
              END;                                                      09830000
COMMENT **************************   INTEG   *************************; 09832000
COMMENT GETS INTEGRAL VALUE FROM SOURCE  ;                              09835000
INTEGER PROCEDURE INTEG  ;                                              09840000
              BEGIN LABEL LX;  SCTRL;%SCAN                              09845000
                   IF SCLAS ! 6 THEN%IF NOT A NUMERIC LITERAL THEN      09850000
              BEGIN  ERP (77,0)      ;%"SYNTAX ERROR".                  09855000
                   IF SCLAS = 5 THEN%IF NOT A NUMERIC LITERAL WITH      09860000
              BEGIN  INTEG ~   %  SPECIFIED SCALE THEN                  09865000
                   ICV1 (ISYMB[0],4,0,(LGTH-SSCALE));                   09870000
                    GO TO LX                                            09875000
              END;                                                      09880000
                   COMPE ~ TRUE; INTEG ~ 0; GO TO LX;                   09885000
              END;                                                      09890000
                   INTEG~ICV1 (ISYMB [0],4,0,LGTH);                     09895000
 LX:          END;                                                      09900000
COMMENT **************************    KOND   *************************; 09902000
     COMMENT   CONDITION NAME PROCESSING     ;                          09905000
BOOLEAN PROCEDURE KOND;                                                 09910000
              BEGIN LABEL ER,CIL,CI1,CILX,KONDX,KONW;            %TR-94909915000
              INTEGER   W1,W2,T8,T7,T9,T6,                              09915010
                   NUML,                                  COMMENT 10-9; 09915015
                    T4,T5,T10,T2,J,K,A,B;                               09915020
                   LOCUR~ORIG;   LASTLL~OLEVL(ORIG);                    09920010
                             %SAVE OCUR AND LEVEL FOR HIERARCHY         09920011
                    OAS(T4,W1,W2,ORIG);%GET ASSIGNMENT OF ORIGINAL ITEM 09920020
                   L88~ORIG;                                            09920030
                   IF OFSZ (ORIG) = 0 THEN                              09920050
              BEGIN  EIND~9 & 15 [32:40:8] & 27 [24:40:8];              09920060
                             %IF SIZE NOT SPECIFIED THEN ERROR          09920061
                   ERP ( EIND,0 ) ; COMPE ~ TRUE ;         COMMENT 5/18;09920070
                             %"MISSING SIZE SPECIFICATION".             09920071
              END;                                                      09920080
       CIL:                                                             09920990
                   LEVEL ~ 58; T8~DIVN; DIVN~3; SCTRL; DIVN~T8;         09925000
                             %ENTER DATA-NAME INTO DICTIONARY           09925001
                   IF OTYP(OCUR) =1 THEN    % IF RESERVED WORD          09925010
              BEGIN     COMPE ~TRUE; %CONDITIONAL NAME ERROR            09925020
                        ERP(59&83 [32:40:8]&8 [24:40:8],0);             09925030
                        GO TO KONDX;                                    09925040
              END; %                                                    09925050
                   TYPE~11;         ITYP  (11,OCUR); T8~0; T7~4;        09930000
                             %SET CONDITION-NAME TYPE                   09930001
                   IFOL(OCUR,L88);                                      09930050
                    L88~OCUR;                                           09930070
                   T4~OFSZ (ORIG); T5~OCLAS (ORIG);                     09935000
                             %GET ORIGONAL SIZE, CLASS                  09935001
                   IELEF(ORIG);                                         09935010
                   CONDN~TRUE;                                          09935030
                   SZ~T4;  KOND~TRUE;                                   09940000
                   IF RNAM THEN%IF RENAMING FILE, SAVE OCUR             09940010
              BEGIN RNT[REX.[39:3],REX.[42:6]]~OCUR; REX~REX+1;         09940020
              END;                                                      09940030
                   IF IX.[39:9] > 470 THEN                              09940040
             BEGIN IX ~ IX + 511; IX.[39:9] ~ 0;                        09940050
             END;                                                       09940060
                   IHLNK (ORIG,OCUR); IILNK (OCUR,IX);                  09945000
                             %SET HIERARCHY AND INFO LINKS              09945001
                   ILEVL (58,OCUR);%SET LEVEL "88"                      09950000
                   JCV (IX,J,K);                                        09955000
                   INFO[J,K]~INFO[J,K] & 1 [30:47:1] &                  09960000
                             %SET VALUE FLAG AND ASSIGNMENT THE         09960001
                    PX [1:38:10] & W1 [11:38:10] &                      09965000
                             %    SAME AS ORIGONAL ENTRY                09965001
                    W2 [21:45:3];                                       09970000
                   A~OILNK(ORIG);  JCV(A,A,B);                          09970010
                   INFO[J,K+3] ~0;                         COMMENT 4-30;09970014
                   IF INFO[A,B].[24:5]>3 THEN              COMMENT 4-30;09970016
                   INFO[J,K+3]~INFO[A,B+3];                             09970020
                             %DUPLICATE INFO FIXED PARTS FROM ORIG      09970021
                    INFO[J,K+1] ~ INFO[A,B+1];                          09970030
                    INFO[J,K+2] ~ INFO[A,B+2];                          09970040
                   A ~ (B ~ OILNK(OCUR)).[33:6];%                       09974000
                   INFO[A,B.[39:9]].[33:15] ~ T4;%STORE SIZE AND        09975000
                   IF OCUR > 850 THEN %  CLASS INTO 88 ENTRY            09975001
                   DICT[(OCUR+1).[33:6],(OCUR+1).[39:9]].[7:3]~T5;%     09976000
                   IF OSGND (ORIG) THEN%IF ORIGONAL IS SIGNED THEN      09980000
              BEGIN ISGND(OCUR); JCV(OCUR,J,K);%   SET SIGNED IN 88     09985000
                   LOC2 ~ 1;  LOC1 ~ 0; PCIX ~ 0;                       09990000
                   DICT[J,K].[13:3] ~ OSGN(ORIG);      COMMENT 2-26-64; 09995000
              END;                                                      10000000
                   IF OCUR > 850 THEN %                                 10005000
                             %SET USAGE AND SCALE INTO 88               10005001
              BEGIN A~ (B ~ OCUR).[33:6];%                              10006000
                    DICT[A,B.[39:9]].[16:2] ~ OUSG(ORIG);%              10007000
              END; %                                                    10008000
                   ISCALE(OSCALE(ORIG), %                               10009000
                   OCUR);  SCTRL; IF KEY ! 306 THEN                     10010000
              BEGIN KOND ~ FALSE;      COMPE ~ TRUE;           %TR 1120 10011000
                   ERP(9 & 46[32:40:8],0);                     %TR 1120 10012000
                   GO TO KONDX;                                %TR 1120 10013000
              END;  % MISSING VALUE                            %TR 1120 10014000
                    SCTRL; JCV (IX+4,T7,T9); T6~0;                      10025000
                             %INDEX FOR START OF VALUE INFO PART        10025001
       CI1:        IF LOC2 ! 0 THEN%IF SIGNED                           10030000
              BEGIN  IF TYPE = 17 THEN%IF SPECIAL CHARACTER             10035000
              BEGIN  LOC1~ISYMB[0].[24:6];%SAVE SIGN CHARACTER          10040000
                   SCTRL;                                               10040010
              END ELSE  LOC1 ~ 0;                                       10040020
              END;                                                      10045000
                   IF TYPE = 1 THEN%IF FIGURATIVE CONSTANT              10050000
              BEGIN SPLAT~TRUE; IF SETLTR THEN T6~T6; SPLAT~FALSE;      10055000
                             %CALL LITERAL PROCESSOR                    10055001
              END; IF OUSG(ORIG)!0 THEN%IF COMPUTATIONAL                10060000
              BEGIN                                             %TR-949 10065000
                   IF SCLAS!6 AND SCLAS!5 THEN   % NOT NUM LIT  %TR-949 10065050
              BEGIN                                             %TR-949 10070000
    ER:            COMPE ~ TRUE;  % VALUE TYPE ERROR            %TR-949 10070001
                   ERP(46&47[32:40:8]&8[24:40:8],0);            %TR-949 10071000
                   KOND ~ FALSE;                                %TR-949 10075000
                   GO TO KONDX;                                 %TR-949 10075050
              END;  IF PCIX = 0 THEN INFO[T7,T9+T8]~0; T2~1;            10080000
                             %IF FIRST OF VALUE PAIR OR SINGLE          10080001
                   LOC2~ (IF LOC1 = 44 THEN -1 ELSE 1);                 10085000
                             %PROCESS MINUS OR PLUS SIGN                10085001
                    A~OSCALE(ORIG);                                     10090000
                   B~A - SSCALE;%ORIG SCALE - LITERAL SCALE             10095000
                   NUML~ICV1(ISYMB[0],4,0,LGTH)| LOC2;                  10095010
                             %CONVERT LITERAL AND SET SIGN              10095011
                   IF B ! 0 THEN%IF ORIG SCALE NOT EQUAL LITERAL SCAL   10095020
              BEGIN  IF B < 0 THEN%IF NEGATIVE SCALE                    10095030
              BEGIN  B~ -B; NUML~NUML DIV POWR[B];%SHIFT RIGHT          10095040
              END ELSE                                                  10095050
                   NUML~NUML | POWR[B];%SHIFT LEFT                      10095060
              END;                                                      10095070
                   INFO[T7,T9+T8+1]~NUML;                               10095080
                             %STORE CONVERTED LITERAL IN INFO           10095081
              END                                                %TR-94910100000
                   ELSE % DISPLAY CHARACTERS                     %TR-94910105000
              BEGIN  T2~(T4+7) DIV 8;%WORDS NEEDED TO SAVE LITERAL      10110000
                   IF SCLAS!6 AND SCLAS!5 AND SCLAS!1 THEN GO ER;%TR-94910113000
                   IF SSCALE ! OSCALE (ORIG) THEN                       10115000
              BEGIN KOND ~ FALSE;      COMPE ~ TRUE;           %TR 1120 10116000
                   ERP(40 & 46[32:40:8],0);                    %TR 1120 10117000
                   GO TO KONDX; % EXCESS DECIMAL PLACES        %TR 1120 10118000
              END; % ILLEGAL VALUE                             %TR 1120 10119000
                   IF LGTH > 63 THEN                                    10124600
              BEGIN ERP(59&46[32:40:8] & 15[24:40:8] & 8[16:40:8],0);   10124700
         COMMENT CONDITIONAL VALUE SIZE ERROR;                          10124800
                   COMPE ~ TRUE;  LGTH ~ 63;                            10124900
              END; IF T4  > LGTH THEN T10~T4-LGTH ELSE T10~0;           10125000
                             %IF SIZE GREATER THEN ADJUST STARTING      10125001
                             %   POSITION IN FINO WORD                  10125002
                   IF PCIX = 0 THEN%IF FIRST OF PAIR OR SINGLE VALUE    10130000
                   INFO [T7,T9+T8]~0;                                   10135000
                   IF OSGND(ORIG) THEN T10~T10+1;%ALLOW SPACE FOR SIGN  10135010
                   IF LOC2 ! 0 THEN                                     10140000
              BEGIN                                                     10145000
                   CHRTRAN (LOC1,7,INFO[T7,T9+T8+1],0,1);               10150000
                             %MOVE SIGN CHARACTER INTO INFO             10150001
              END;                                                      10160000
                   CHRTRAN (ISYMB    ,4,INFO [T7,T9+T8+1],T10,LGTH)     10165000
                             %MOVE LITERAL INTO INFO                    10165001
              END;  SCTRL; IF KEY = 261 THEN%IF "THRU"                  10170000
              BEGIN SCTRL; INFO [T7,T9+T8]~1;%SET "THRU" FLAG           10175000
                    PCIX ~ 1 ; %SET "SECOND LITERAL" FLAG               10180000
                   T8~T8+T2; T2~0; GO TO CI1;%ADJUST BY LITERAL SIZE    10185000
              END ELSE T8~T8+T2+1;                                      10190000
                   PCIX~0;                                COMMENT TEMP; 10195000
                             %SET LITERAL COUNT                         10195001
                   T6~T6+1; IF SCLAS!7 THEN GO TO CI1;    COMMENT TEMP; 10200000
                             %VALUE COUNT PLUS ONE                      10200001
       CILX:       JCV (IX+1,J,K);                                      10205000
                   INFO [J,K].[43:5]~T6; SETIX (T8+5);                  10210000
                             %SET VALUE COUNT INTO INFO, UPDATE         10210001
                             %   INFO AVAILABLE INDEX                   10210002
                   IF (T8+5) > 31 THEN                                  10211000
              BEGIN ERP(59&27[32:40:8] & 15[24:40:8] & 8[16:40:8],0);   10211100
         COMMENT CONDITIONAL SPECIFICATION SIZE ERROR;                  10211200
                   COMPE ~ TRUE;  SETIX(31);                            10211300
              END;                                                      10211400
                   IF NCLAS ! 6 THEN GO TO KONW;                        10215000
                             %IF NOT INTEGER THEN EXIT                  10215001
                   T8~ICV1 (NSYMB[0],4,0,NLGTH);%CONVERT LEVEL NUMBER   10220000
                   IF T8 = 88 THEN%IF LEVEL EQUALS 88                   10225000
              BEGIN  LEVEL~T8; SCTRL; GO TO CIL;%GET NAME AND LOOP      10230000
              END;                                                      10235000
       KONW:       KOND~TRUE;                                           10240000
       KONDX:                                                           10245000
                   INFLG~TRUE; %SET "INHIBIT PROCESSING" FLAG           10250000
                   LITF~FALSE; %TURN OFF LITERAL VALUE FLAG             10255000
              END;             %END OF CONDITION-NAME PROCESSOR         10260000
COMMENT START ITPRO PROCESSING HERE  ;                                  10265000
         ZWEI:     INFLG ~GATOW~TX~USW~FL8~PTCLS~FALSE;%                10270000
                   DDW ~0;                             COMMENT 2-26-64; 10270080
              INLGTH~DSF~0;%                                            10275000
                   KX~0;  LFP~0;                                        10280000
                   RIP~0;                                               10280500
                   PCLGTH~0; ZS~0; CP~0; FS~0; BZ~0; LP~0;              10285000
                   SPLAT~FALSE; FLOATED~FALSE; LITF~FALSE;              10290000
                   FIGC~FALSE; LOW~FALSE; ZRA~FALSE;                    10295000
                   CONDN~FALSE;                                         10295010
                   JS~0; SCALE~0; SGND~0;                               10300000
                   OCCURS~0; REN~0; NC~0;                               10305000
                   DOF ~ REDFF ~ SZ ~ LOC1 ~ 0;%                   SI13710310000
                    INSZ~0;                                             10315000
                   CLASS~0;   USAGE~0;                                  10315050
                   SIZE ~ 0;                                            10315060
                   ACC~FALSE;                                           10315500
                   LOC2~0;  SGP~0;                                      10320000
                   PSZ~0;                                               10325000
                   IF LEVEL>1 AND LEVEL<50 THEN      COMMENT 1/28 1400; 10325010
                             %IF LEVEL 2 THRU 49 THEN BYPASS CHECK      10325011
              BEGIN IF LASTLL!57 THEN GO TO DREIZIG; COMMENT 1/28 1400; 10325020
                   EIND~9&34[32:40:8]&               COMMENT 1/28 1400; 10325030
                             %"MISSING RECORD LEVEL"                    10325031
                   35[24:40:8]; ERP(EIND,0);         COMMENT 1/28 1400; 10325040
                        COMPE ~ TRUE ;                   COMMENT 7-17 ; 10325045
              END;                                   COMMENT 1/28 1400; 10325050
                   IF LEVEL = 1 THEN%IF RECORD LEVEL THEN RESET CLASS   10330000
              BEGIN  CLASS~0;  USAGE~0;%   AND USAGE                    10330010
                   DDW ~1;                             COMMENT 2-26-64; 10330012
                   IF NOT LABLFLG THEN QX~RX~0;           COMMENT 7-28; 10330015
              END;                                                      10330020
                   IF LEVEL = 77 OR LASTLL = 57 THEN                    10335000
                             %IF LEVEL 77 OR LAST WAS 77                10335001
              BEGIN CLASS~0; USAGE~0; OCCURS~0; OCURCT~0;               10340000
              END;                                                      10345000
                   IF LEVEL = 88 THEN                                   10350000
              BEGIN                                                     10355000
                   IF KOND THEN GO TO TERM ELSE GO TO RECO;             10360000
                             %CALL CONDITION-NAME PROCESSOR             10360001
                             %     SEQ # 09910000                       10360002
              END;                                                      10365000
                   IF  LEVEL = 66 THEN                                  10420000
              BEGIN  LEVEL ~ 56; REN ~ 1; GO TO DREIZIG                 10425000
                             %SET RENAMES FLAG                          10425001
              END;                                                      10430000
                   IF  LEVEL = 77 THEN                                  10435000
              BEGIN LEVEL~57;  NC~1;%SET NON-CONTIGUOUS FLAG            10440000
                   IF LASTLL > 0 AND LASTLL ! 57 THEN                   10440010
                             %IF 77 LEVEL PRECEEDED BY OTHER THEN       10440011
                   BEGIN IF DIVN ! 31 THEN ERP(9 & 31[32:40:8],0);%SI13810440020
%                        IF NOT WORKING-STORAGE,CONSTANT SECTION THEN   10440021
%                        "MISSING SECTION".IN ANY CASE,FATAL ERROR SI13810440022
                         ERP(35 & 8[32:40:8],0); COMPE ~ TRUE;%    SI13810440025
%                        "LEVEL ERROR".                            SI13810440026
              END;       GO TO DREIZIG;                                 10440030
              END;                                                      10445000
                   IF LEVEL > 49 THEN                                   10450000
                   BEGIN ERP(35 & 8[32:40:8],0);%"LEVEL ERROR".    SI13810455000
                         COMPE ~ TRUE; LEVEL ~ 49;%                SI13810460000
              END;                                                      10465000
       DREIZIG:    T8~DIVN; DIVN~3; SCTRL; DIVN~T8; SOCUR~CLOC;         10470000
                             %ENTER NAME INTO DICT AND SAVE INDEX       10470001
                             %   OF SYMBOL                              10470002
                   IF FOUND AND OTYP(OCUR)=4 THEN COMMENT SYN 2-11-64;  10470100
                   GO TO DREE;                            COMMENT 4-14; 10470200
         IF KEY ! 367       AND OTYP(OCUR)=1 THEN        COMMENT SI-1;  10470300
         BEGIN  IF KEY ! 305 THEN                        COMMENT SI-6;  10470325
              BEGIN IF KEY!294 THEN COMMENT SAME;        COMMENT DF;    10470350
              BEGIN T8~DIVN;DIVN~3;                      COMMENT SI-1;  10470400
                   SYOUT(MSG[124],ISYMB,LGTH);           COMMENT SI-1;  10470500
                   ISYMB[0].[24:6]~">"; SCHAD;           COMMENT SI-1;  10470600
                   COMPE~TRUE; DIVN~T8; SOCUR~CLOC;      COMMENT SI-1;  10470650
                   ERP(40 & 83[32:40:8]& 124[24:40:8],0);COMMENT SI-1;  10470700
              END;                                       COMMENT DF;    10470800
         END  END;                                       COMMENT SI-6;  10470900
                   IF SCLAS ! 4 THEN                             %SI-11 10471000
              BEGIN T8~DIVN;DIVN~3;                              %SI-11 10471100
                   SYOUT(MSG[124],ISYMB,LGTH);                   %SI-11 10471200
                   ISYMB[0].[24:6]~"Z"; SCHAD;                   %SI-11 10471300
                   COMPE~TRUE; DIVN~T8; SOCUR~CLOC;              %SI-11 10471400
                   ERP(40 & 83[32:40:8]& 124[24:40:8],0);        %SI-11 10471500
              END;                                               %SI-11 10471600
                   IF LEVEL > LASTLL AND LEVEL ! 1 THEN                 10475000
                             %IF SUB-GROUP THEN                         10475001
              BEGIN  CLASS~ORDR8.[42:6];  USAGE~ORDR8.[27:6];           10480000
                             %GET CLASS AND USAGE FROM GROUP            10480001
                   IF CLASS = 2 THEN CLASS ~0;                          10485000
              END;                                                      10490000
                   IF ODER  AND                            COMMENT DF;  10490010
                     T1~OTYP(OCUR)!15 AND T1!16 THEN       COMMENT DF;  10490015
              BEGIN IF LEVEL = 57 OR LEVEL = 56 THEN                    10490020
                   GO TO DREE                             COMMENT 4-14; 10490030
                   ELSE                                   COMMENT 4-14; 10490060
              BEGIN  T1~SOCUR+((LGTH+3) DIV 8) +1;                      10490070
                   IF (T2~OLEVL(T1)) = 57 OR T2 = 56 THEN               10490080
DREE:                                                     COMMENT 4-14; 10490085
              BEGIN  SYOUT(MSG[124],ISYMB,LGTH);                        10490090
                    EIND ~ 40 & 110%"ILLEGAL DUPL. NAME XXXX".          10490100
                             [32:40:8] & 83 [24:40:8] & 124 [16:40:8];  10490105
                    ERP(EIND,0);                                        10490110
                   COMPE ~ TRUE;                          COMMENT 4-14; 10490115
              END;                                                      10490120
              END;                                                      10490130
              END;                                                      10490140
                   IF LEVEL ! 57 THEN%IF NOT 77 LEVEL                   10495000
              BEGIN                                                     10500000
                   IF LEVEL = LASTLL THEN%IF ELEMENTARY ITEM            10500010
              BEGIN CLASS~STK[NX,8].[42:6];%GET FROM GROUP DECLARATION  10500020
                   USAGE ~ STK[NX,8].[27:6];                            10500030
              END;                                                      10500040
                   IF LEVEL < LASTLL AND LEVEL ! 1 THEN                 10505000
                             %IF NEW GRUP OR ELEMENT THEN               10505001
              BEGIN X~NX; WHILE (STK[X,0] } LEVEL AND X > 0) DO         10510000
                             %GET CLASS AND USAGE FROM GROUP            10510001
                          X~X-1;%TO WHICH THIS BELONGS                  10515000
                   USAGE~STK[X,8].[27:6];                               10520000
                   CLASS~STK[X,8].[42:6];                               10520050
                   IF LASTLL = 57 OR LASTLL = 0 THEN USAGE~0;           10520500
              END;                                                      10525000
              END;                                                      10530000
                   IF CLASS = 2 THEN CLASS ~ 0;                %TR 335  10531000
                          COMMENT FILLER TEST ; IF KEY = 367 THEN       10535000
                             %IF "FILLER"                               10535001
              BEGIN  ORIG ~ AVAIL; AVAIL ~ AVAIL + 2; OCUR ~ ORIG;      10540000
                             %SAVE OCUR FOR CURRENT ITEM                10540001
                             %OCUR WILL REFER TO INDEX IN DICT          10540002
                   IILNK (ORIG,IX); KX~IX;%SET INFO LINK AND SAVE       10545000
                   JCV(ORIG,J,K); DICT[J,K].[10:1]~1;%SET "FILLER" FLAG 10550000
                   IF K > 500 THEN                                      10550010
              BEGIN AVAIL~AVAIL+510; AVAIL.[39:9]~0;                    10550020
              END;                                                      10550030
                   TYPE ~ 8; GO TO ZEHN%SET ELEMENTARY ITEM FLAG        10555000
              END;                                                      10560000
                   IF OTYP (OCUR) = 18 THEN GO TO KRANK; COMMENT 1/28;  10560050
         COMMENT SAME TEST;                                COMMENT DCDF;10562000
                   IF KEY=294 THEN COMMENT SAME            COMMENT DCDF;10562010
              BEGIN IF LEVEL!1            THEN GO TO KRANK;COMMENT DCDF;10562020
                   PX~PRTCTR;PRTCTR~COMNCRD;UPIT;          COMMENT DCDF;10562030
                   PRTCTR~PX;PX~COMNCRD;                   COMMENT DCDF;10562040
                   ORIG~AVAIL;AVAIL~AVAIL+2;OCUR~ORIG;     COMMENT DCDF;10562050
                   IILNK(ORIG,IX);KX~IX;                   COMMENT DCDF;10562060
                   JCV(ORIG,J,K);DICT[J,K].[10:1]~1;       COMMENT DCDF;10562070
                   FIXCOMNCRD(10);                                      10562075
                   IF K>500 THEN                           COMMENT DCDF;10562080
              BEGIN AVAIL~AVAIL+510;AVAIL.[39:9]~0;        COMMENT DCDF;10562090
              END; TYPE ~ 8 ; GO TO ELF;                                10562100
              END;                                         COMMENT DCDF;10562110
                   ORIG ~ OCUR; IF OTYP (OCUR) = 1 THEN                 10565000
                             %IF RESERVED WORD                          10565001
              BEGIN IF KEY = 305 AND LEVEL = 1 THEN                     10570000
                             %IF "LABEL" AND RECORD-NAME                10570001
              BEGIN JCV (CFDE,J,K); DICT [J,K+1].[1:1]~1; TYPE~7;       10575000
                             %SET "USERS LABEL" FLAG IN FILE            10575001
                   DICT[J,K+2].[33:15]~AVAIL;                           10580000
                             %SET LINK TO LABEL OCUR IN FILE OCUR       10580001
                   ORIG ~ AVAIL;                                        10585000
                   AVAIL ~ AVAIL + 2;                                   10590000
                   IF K > 500 THEN%ADJUST OVER ENDS OF ROWS OF DICT     10595000
              BEGIN AVAIL~AVAIL+511; AVAIL.[39:9]~0;                    10600000
              END;                                                      10605000
                   IHLNK(CFDE,ORIG);%SET "RECORD-NAME" TYPE             10610000
                   ITYP(7,ORIG);                                        10615000
                   IILNK (ORIG,IX); KX~IX;%SET "USERS-LABEL" FLAG       10620000
                   LABLFLG~TRUE;            T2~OILNK(CFDE);             10625000
                   JCV(T2,J,K);                                         10625010
                   PX~INFO[J,K].[4:10] - 2; QX~8; RX~0;                 10630000
                             %SET PRT TO WRITE-LABEL LOCATION, SET      10630001
                             %WORD INDEX TO END OF RESERVED PART O      10630002
                             %LABEL.                                    10630003
                   GO TO ELF;                                           10630050
              END;                                                      10635000
       KRANK:                                                           10635010
                   SYOUT(MSG[124],ISYMB,LGTH);                          10640000
                   EIND~40 & 83 [32:40:8] & 124 [24:40:8];              10640010
                             %PRINT ERROR FOR ILLEGAL NAME              10640011
                     ERP (EIND,0)      ;                                10645000
                   COMPE ~ TRUE;                       COMMENT 3-16-64; 10645050
                      GO TO RECO                                        10650000
              END;                                                      10655000
                    TYPE~8;                                             10665000
                    ITYP(8,ORIG);                                       10665050
                    IF LEVEL = 1 THEN TYPE ~ 7;                         10670000
                    EIND~8; FOR X~1 STEP 1 UNTIL DRIX DO                10675000
                             %CHECK FORWARD REFERENCE ARRAY FOR         10675001
              BEGIN  IF DR[X].[33:15] = ORIG THEN                       10680000
                             %ITEM AND DELETE FROM ARRAY WHEN           10680001
                   IF (DR[X].[30:3] = 1 AND LEVEL = 1) OR               10680010
                     LEVEL ! 1 THEN                                     10680020
              BEGIN                                                     10680030
              BEGIN DR[X]~0;EIND~0;IFOL(0,ORIG);%IT IS FOUND            10685000
              END;                                                      10690000
              END;                                                      10690010
              END;    IF LEVEL = 1 AND EIND ! 0 THEN                    10695000
              BEGIN  IF CDIVN = 3 THEN                                  10695010
              BEGIN SYOUT(MSG[124],ISYMB,LGTH);                         10700000
                             %IF RECORD AND NOT FORWARD REFERENCE       10700001
                    EIND~124 & 19 [32:40:8] &                           10705000
                             %THEN NOT DECLARED IN DATA-RECORDS         10705001
                    34 [24:40:8] & 25 [16:40:8];%CLAUSE OF FD ENTRY     10710000
                   ERP(EIND,0); COMPE ~ TRUE                            10710010
                             %"XXXX NOT RECORD DECLARATION".            10710011
              END;                                                      10710020
              END;                                                      10710030
                   IF LEVEL = 1 THEN TYPE~7;                            10710100
                             %IF LEVEL 1 THEN RECORD-TYPE               10710101
 ZEHN:             ITYP (TYPE,OCUR);%SET TYPE FIELD IN OCUR             10715000
                   IF OILNK(ORIG) = 0 THEN                              10720000
                             %IF INFO LINK NOT SET THEN SET IT          10720001
              BEGIN KX~IX; IILNK (ORIG,IX);                             10725000
              END;                                                      10730000
                   CLOC~0;                                              10735000
                   IF LEVEL = 1 THEN                                    10740000
              BEGIN  CLASS~0;   USAGE~0;                                10745000
                   RECOC~ORIG;   IF CDIVN = 3 THEN                      10745010
                             %IF RECORD NAME THEN SAVE OCUR             10745011
              BEGIN JCV (OILNK (CFDE),J,K); RX~0; QX~0;                 10750000
                             %PICK UP FILE OCUR INFO LINK               10750001
                   IF INFO[J,K+2].[18:15] ! 0 THEN%IF DEPENDING OPTION  10750010
              BEGIN   JCV(KX,T1,T2);                                    10750020
                   IF INFO[J,K+2].[1:1] ! 0 THEN                        10750030
                   INFO[T1,T2+3].[ 3:15]~INFO[J,K+2].[18:15] ELSE       10750040
                   INFO[T1,T2+3].[33:15]~INFO[J,K+2].[18:15];           10750050
              END;                                                      10750060
                   IF NOT SDF THEN%IF NOT "SD" ENTRY                    10755000
                   PX~INFO[J,K].[4:10] ELSE                             10760000
                             %SET PRT LOCATION TO READ/WRITE DESC.      10760001
              BEGIN                                                     10765000
       NEUN:       JCV (OILNK (CFDE),J,K); PX~INFO[J,K+3].[33:10];      10770000
                             %IF SORT FILE GET PRT FROM SORT-RECOR      10770001
              END                                                       10775000
              END ELSE                                                  10780000
              BEGIN  IF CNQ > 500 THEN%IF CONSTANT-POOL INDEX OVER 500  10785000
              BEGIN  RX~0; IF CNPL<60 THEN           COMMENT 1/28 1400; 10785010
              BEGIN  RX~CNPL;                        COMMENT 1/28 1400; 10785020
                   IMIL(LITC,1); IMIL(OPDC,CNPL);    COMMENT 1/28 1400; 10785030
                   IMIL(LITC,RAL); IMIL(OPR,STD);    COMMENT 1/28 1400; 10785040
              END;                                   COMMENT 1/28 1400; 10785050
                   DUMPCONST (CNP,CNPL,CNQ,CNR);                        10790000
                             %THEN DUMP CONSTANT POOL                   10790001
                   IF RX!0 THEN                      COMMENT 1/28 1400; 10790010
              BEGIN IMIL(OPDC,RAL); IMIL(LITC,1);    COMMENT 1/28 1400; 10790020
                   IMIL(DESC,RX); IMIL(OPR,STD);     COMMENT 1/28 1400; 10790030
                   RX~0;                             COMMENT 1/28 1400; 10790040
              END;                                   COMMENT 1/28 1400; 10790050
              END;                                   COMMENT 1/28 1400; 10790060
                   IF LCOMP (388) THEN%IF "REDEFINES"                   10795000
                   QX ~ RX ~ LOCUR ~ 0   ELSE                  %CJC 062 10800000
              BEGIN                                            %CJC 062 10801000
                   IF CNSTFLG THEN  % CODE TO MAKE CONSTANT    %CJC 062 10802000
              BEGIN EMIL(LITC,PX);  % SECTION READ-ONLY        %CJC 062 10803000
                   IF PX > 511 THEN EMIL(OPR,XRT);             %CJC 062 10804000
                   EMIL(OPR,LOD);   EMIL(LITC,24);             %CJC 062 10805000
                   EMIL(DIA,43);    EMIL(DIB,3);               %CJC 062 10806000
                   EMIL(TRB,5);                                %CJC 062 10807000
                   EMIL(LITC,PX);                              %CJC 062 10808000
                   IF PX > 511 THEN EMIL(OPR,XRT);             %CJC 062 10809000
                   EMIL(OPR,STD);                              %CJC 062 10810000
              END;                                             %CJC 062 10811000
                   PX~PRTCTR; QX~RX~0;  UPIT;                           10825000
                   OPNAR(0,PX,10);                             %CJC 073 10830000
                   RFIX ~ SEG1X - 10;                          %CJC 073 10831000
                   LOCUR~0;                                             10840000
              END                                                       10845000
              END;                                                      10850000
              END;                                                      10860000
       ELF:        IF LOCUR ! 0 THEN                                    10865000
              BEGIN                                                     10870000
                    IF LEVEL = 1 THEN                                   10875000
              BEGIN                                                     10880000
                   T2 ~ LOCUR; IF OTYP (LOCUR) = 6 THEN                 10885000
                             %IF LAST ITEM DECLARED WAS FD              10885001
              BEGIN                                                     10890000
 ZWOLF:            T1 ~ OILNK (T2); JCV (T1+2,J,K);                     10895000
                   T3 ~ INFO [J,K].[33:15];%IF RENAMING LINK            10900000
                   IF T3 ! 0 THEN                                       10905000
              BEGIN                                                     10910000
                    IF OFOL(T3) = 0 AND NOT LABLFLG THEN IFOL(T2,T3);   10915000
                             %SET FOLLOWERS TO RENAMING RECORDS         10915001
                    T2 ~ T3; GO TO ZWOLF                                10920000
              END                                                       10925000
              END                                                       10930000
              END                                                       10935000
              END;  IF NOT (                                            10940000
                    OLEVL (LOCUR) = 57 OR LEVEL = 56 OR                 10945000
                   LEVEL = 57 OR LOCUR = 0 ) THEN                       10950000
              BEGIN  IF L88 = 0 THEN IFOL(ORIG,LOCUR);                  10955000
                             %IF L88 IS ZERO SET FOLLOWER FROM          10955001
                             %  LAST ENTRY                              10955002
              END;   SCTRL;   IF KEY = 451 THEN                         10955010
                             %SCAN, IF LEFT PARENTHESIS                 10955011
              BEGIN T8~DIVN; DIVN~3; SCTRL; ITYP (4,OCUR);              10960000
                             %ENTER SYNONMY INTO DICTIONARY AND         10960001
                   IF FOUND THEN                                        10960010
              BEGIN  SYOUT(MSG[124],ISYMB,LGTH);                        10960020
                    EIND ~ 40 & 110%"ILLEGAL DUPL. NAME XXXX".          10960030
                             [32:40:8] & 83 [24:40:8] & 124 [16:40:8];  10960035
                    ERP(EIND,0);                                        10960040
              END;                                                      10960050
                   IHLNK (ORIG,OCUR); DIVN~T8; SCTRL;                   10965000
                             %SET SYNONYM TYPE. SET LINK TO ORIG        10965001
                   IF KEY ! 456 THEN                                    10970000
                             %IF NOT RIGHT PARENTHESIS THEN ERROR       10970001
              BEGIN EIND~3 & 6 [32:40:8] & 9 [24:40:8];                 10975000
                             %"RIGHT PARANTHESIS MISSING".              10975001
                   ERP (EIND,0)                                         10980000
              END ELSE SCTRL;                                           10985000
              END;  DIVN ~ 9;%                                          10990000
                   IF RNAM THEN                                         10990010
              BEGIN RNT[REX.[39:3],REX.[42:6]]~ORIG; REX~REX+1;         10990020
                             %IF RENAMING FILE THEN SAVE OCUR           10990021
              END;                                                      10990030
                   IF LEVEL = 1 OR LEVEL = 57 THEN L88~0;               10990040
                    IF L88 ! 0 THEN%IF LAST ITEM WAS LEVEL 88           10990042
              BEGIN   IFOL(ORIG,L88);%SET FOLLOWER FROM 88 TO ORIGONAL  10990045
                    L88~0;                                              10990047
              END;                                                      10990050
                   IF LOCUR ! 0 THEN                                    10990060
              BEGIN  IF OTYP(LOCUR) ! 6 AND LEVEL = 1 THEN              10990070
                             %IF NOT FILE SECTION SET HIERARCHY         10990071
                   IFOL(0,LOCUR);%LINK TO ZERO                          10990080
              END;                                                      10990090
                   IF OILNK(ORIG) = 0 THEN%IF INFO LINK IS ZERO, SET IT 10995000
              BEGIN KX~IX; IILNK (ORIG,IX);                             11000000
              END;                                                      11005000
                   IF LEVEL { 1 THEN                                    11005010
              BEGIN  ORDR8~0;   CLASS~0;  USAGE~0;                      11005020
                     OCURCT~0;                                          11005022
                   FOR X~NX STEP -1 UNTIL 1 DO STK[X,8]~0;              11005030
                             %CLEAR USAGE AND CLASS FROM ALL STACK      11005031
              END;                                                      11005040
                   IF LEVEL = 1 THEN RECOC~ORIG;                        11005100
                   IF LEVEL=1 THEN INLGTH~1;           COMMENT 2-26-64; 11006000
                   IF LABLFLG AND LEVEL = 1               COMMENT 5-15; 11007000
                   THEN IFOL(0,CFDE);                     COMMENT 5-15; 11007500
                   IF CDIVN!31 AND LEVEL=1 AND OFOL(CFDE) COMMENT 5-15; 11008000
                   = 0 THEN IFOL(ORIG,CFDE);              COMMENT 5-15; 11009000
                   GO TO IP31;                                          11010000
COMMENT ITEM SPECIFICATION PROCESSING LOOP  ;                           11015000
IP3:               SCTRL;  % PICK UP NEXT THING FROM CARD      %CJC 080 11020000
                   COMMENT  SENTENCE TEST  ;                            11025000
IP31:              IF SCLAS = 7 THEN                            %TR 776 11030000
%                                                               %TR 776 11030001
              BEGIN IF REDEFYNES AND ASYGNES THEN               %TR 776 11031000
              BEGIN ERP(77,0);   COMPE ~ TRUE;                  %TR 776 11032000
              END;                                              %TR 776 11033000
                   REDEFYNES ~ FALSE;                           %TR 776 11034000
                   ASYGNES ~ FALSE;                             %TR 776 11035000
                   GO TO TERM;                                  %TR 776 11036000
              END;                                              %TR 776 11037000
                   COMMENT PICTURE TEST  ;                              11040000
                   IF KEY = 381 THEN GO TO IP3;%IF "PICTURE"            11045000
                   IF SCLAS = 8 THEN                                    11045010
              BEGIN  T10~DIVN; DIVN~9; SCHAD;  DIVN~T10;                11045030
                      MDF~TRUE;   IF NOT FOUND THEN                     11045035
              BEGIN   DIVN~3;  SCHAD;   DIVN~T10;                       11045050
                   ITYP(19,OCUR);    MDF~FALSE;                         11045070
              END;     PCIX~OCUR;                                       11045100
              END;                                                      11045110
                   IF SCLAS = 8 THEN%IF "PICTURE" CLASS THEN PROCESS    11050000
              BEGIN  INTEGER NCT,VSAVE,ACT,XCT,XAVE,XN,ZCT,CH,VL,       11055000
                   PSAVE,COL,H,VSF,PSF,PCT,SSAVE,EN,                    11060000
                   PL,SFLT,MINS,                                        11065000
                   DM,EDT,G,LAVE,CURTFR,SV;                             11070000
              LABEL STT,ONE,T,THREE,FUNF,CLM,INS1,PMP,                  11075000
                   LXXE,CLPE,                                           11080000
                   C1,ERR,ENDER,LX;                                     11085000
COMMENT **************************    GET    *************************; 11086000
                    INTEGER STREAM PROCEDURE GET (ISYMB,COL); VALUE COL;11090000
                             %GETS PICTURE CHARACTER FOR TEST           11090001
                   BEGIN LOCAL T; SI ~ ISYMB; SI ~ SI + 4; SI ~SI + COL;11095000
                         DI ~ LOC T; DI ~ DI+ 7; DS ~ CHR;              11100000
                    DI~ISYMB;                                           11100050
                   SI~T;  GET~SI;                                       11105000
                   END;                                                 11110000
COMMENT **************************   PCDET   *************************; 11112000
PROCEDURE PCDET (NCT,CH,CURTFR,COL,PCLGTH,EN,XN,XAVE);                  11115000
              INTEGER NCT,CH,CURTFR,COL,PCLGTH,EN,XN,XAVE;              11120000
                             %TESTS AND TALLYS SUCCESSIVE SAME          11120001
              BEGIN            %CHARACTERS FROM PICTURE.                11125000
                   LABEL DET1,DT2,RPT,RER,RES,LY,LX;                    11130000
              BOOLEAN PARF;                                             11130050
                    PARF ~ FALSE;                                       11130500
       DET1:             NCT ~ NCT +1;  CH ~ CH +1; CURTFR ~ CURTFR +1; 11135000
                   COL ~ COL +1; IF COL > PCLGTH THEN                   11140000
              BEGIN                                                     11145000
       DT2:             EN ~ 1; GO TO LY                                11150000
              END;  XN~ GET (ISYMB,COL);                                11155000
                   IF XN = 48  THEN GO TO DT2;%BLANK TO END PICTURE     11160000
                   IF XAVE = XN THEN GO TO DET1;%IS CHAR = LAST CHAR    11165000
                   IF XN ! 29 THEN GO TO LY;%TEST FOR (                 11170000
                   PARF ~ TRUE;                                         11170050
                    T1 ~ 0;  T2~ 0;                                     11175000
       RPT:        COL~COL+1; XN~GET (ISYMB,COL);                       11180000
       LX:         IF XN = 45 THEN%TEST FOR )                           11185000
              BEGIN IF T1 = 0 THEN GO TO RER;                           11190000
                   PARF ~ FALSE;                                        11190050
                   T1~ ICV1 (T1,(8-T2),0,T2);  T1~T1-1;                 11195000
                             %ASSEMBLE AND CONVERT LITERAL GIVEN        11195001
                   NCT ~ NCT + T1; CH ~ CH + T1; GO TO RES              11200000
                             %  BETWEEN PARENTHESIS IN PICTURE          11200001
              END; IF XN  < 10 THEN                                     11205000
              BEGIN T1~(T1|64)+XN; T2~T2+1; GO TO RPT;                  11210000
              END;                                                      11215000
       RER:        ER~1;       %SET ERROR FLAG                          11225000
       RES:              CURTFR ~ CURTFR + T1; COL ~ COL+1;             11230000
                             %UPDATE CURRENT CHAR COUNT AND COL #       11230001
                   IF COL } PCLGTH THEN GO TO DT2;                      11240000
                   IF GET(ISYMB,COL)=XAVE THEN       COMMENT 1/28 1400; 11240010
                   GO TO DET1;                       COMMENT 1/28 1400; 11240020
       LY:                                                              11245000
                   IF PARF THEN                                         11245010
              BEGIN  EIND ~ 36 & 3 [32:40:8] & 16 [24:40:8] &           11245020
                             %"PICTURE PARAENTHESIS USAGE ERROR"        11245021
                   8 [16:40:8];  ERP(EIND,0);  ER ~ 1;                  11245030
              END;                                                      11245040
              END;                                                      11245050
                   SFLT~0;                                              11245100
                   FOR X~0 STEP 1 UNTIL 65 DO EDIT[X]~0;                11250000
                             %ZERO EDIT ARRAY.                          11250001
                   IF SCALE ! 0 THEN                                    11250010
              BEGIN EIND ~ 40 & 110[32:40:8] & 27[24:40:8]; ERP(EIND,0);11250020
                             %"ILLEGAL DUPL. SPECIFICATION"             11250021
              END;                                                      11250040
                   PCLGTH~LGTH;  LFP~0;  SCALE~0;                       11255000
                   ZCT~0;  CH~0;  VL~0;  PSAVE~0;  J~1;  COL~0;         11260000
                   H~62; NCT~0; ACT~0; XCT~0; VSAVE~0; XAVE~0;          11265000
                   PL~0;  G~0;  SV~0;                                   11270000
                   CURTFR~0;  MINS ~ 0;               COMMENT 2-24-64;  11275000
                   SFLT~0;                                              11280000
                   VSF~0; PSF~0; PCT~0; SSAVE~0;  EN~0;  ER~0;  DM~0;   11285000
                   EDT~0;  SGND~0;  INT~0;  LAVE~0;  SGP~0;  SV~0;      11290000
  ONE:             XN~GET (ISYMB    ,COL);                              11295000
                   IF CURTFR > 127 THEN                                 11295010
                             %IF PICTURE PART GREATER THAN 127          11295011
              BEGIN EIND~40 & 36[32:40:8] &            COMMENT 2-10-64; 11295020
                   15[24:40:8] & 25[16:40:8];                           11295030
                             %"ILLEGAL PICTURE SIZE DECLARATION"        11295031
                   ERP(EIND,0);  COMPE ~ TRUE;         COMMENT 2-10-64; 11295040
              END;                                     COMMENT 2-10-64; 11295050
                   J~J+1; IF EN ! 0 THEN GO TO ENDER ELSE               11300000
                             %TEST FOR END OF PICTURE                   11300001
                   LAVE~XAVE;  XAVE~XN;  CURTFR~0;  T1~0;               11305000
                   IF XN = 48 THEN GO TO ENDER;%END-OF-PICTURE TEST     11310000
 COMMENT TEST FOR  9     ;                                              11315000
                   IF XN = 9 THEN                                       11320000
              BEGIN EDIT [J].[30:5]~10;%SET TO TRANSFER NUMERIC CODE    11325000
                   PCDET (NCT,CH,CURTFR,COL,PCLGTH,EN,XN,XAVE);         11330000
                   IF ER ! 0 THEN GO TO ERR ELSE EDIT [J].[35:7]~       11335000
                   CURTFR;     % SET REPEAT FIELD OF ANALYSIS CODE      11340000
              IF (VSF + PSF + PCT) ! 0 THEN EDIT[J].[42:6]~ 1;          11345000
                             %SET SCALE-PART FLAG                       11345001
                   GO TO ONE                                            11350000
              END;                                                      11355000
 COMMENT TEST FOR V   ;                                                 11360000
                   IF XN = 53 THEN                                      11365000
              BEGIN IF (VSF ! 0) OR (PSF ! 0) THEN GO TO ERR ELSE       11370000
                             %IF SCALE PREVIOUSLY GIVEN - ERROR         11370001
                   VSAVE ~ CH; VSF ~ 1;%SAVE LOCATION AND FLAG          11375000
 T:                COL ~ COL +1; IF COL > PCLGTH THEN GO TO ENDER       11380000
                             %UPDATE TO NEXT PICTURE CHARACTER          11380001
                   ELSE GO TO ONE                                       11385000
              END;                                                      11390000
 COMMENT ALPHA TEST    ;                                                11395000
                   IF XN = 17 THEN                                      11400000
              BEGIN EDIT [J].[30:5] ~ 11;                               11405000
                             %SET TRANSFER ALPHANUMERIC CODE            11405001
                   PCDET (ACT,CH,CURTFR,COL,PCLGTH,EN,XN,XAVE);         11410000
THREE:             DO                                     COMMENT D-14; 11415000
                             %SET REPEAT-FIELD OF CODE                  11415001
              BEGIN IF CURTFR>127 THEN                    COMMENT D-14; 11415100
                             %IF REPEAT FLD > 127 THEN MAKE             11415101
              BEGIN EDIT[J].[35:7]~127;                   COMMENT D-14; 11415200
                             % MULTIPLE ENTRIES                         11415201
                   J~J+1;                                 COMMENT D-14; 11415400
                   EDIT[J].[30:5]~11;                     COMMENT D-14; 11415500
              END  ELSE EDIT[J].[35:7]~CURTFR;            COMMENT D-14; 11415600
              END  UNTIL CURTFR~CURTFR-127{0;             COMMENT D-14; 11415700
                   IF ER ! 0 THEN GO TO ERR ELSE GO TO ONE              11420000
              END;                                                      11425000
 COMMENT ALPHANUMERIC TEST  ;                                           11430000
                       IF XN = 55 THEN                                  11435000
              BEGIN EDIT [J].[30:5] ~ 11;                               11440000
                             %SET ALPHANUMERIC TRANSFER CODE            11440001
                   PCDET (XCT,CH,CURTFR,COL,PCLGTH,EN,XN,XAVE);         11445000
                   GO TO THREE                                          11450000
              END;                                                      11455000
COMMENT  TEST FOR S SIGN  ;                                             11460000
                   IF XN = 50 THEN                                      11465000
              BEGIN IF (SGND ! 0) OR (CH ! 0) THEN GO TO ERR            11470000
                   ELSE  SGND ~ 50; GO TO T%SET "SIGN IS S"             11475000
              END;                                                      11480000
COMMENT  TEST FOR Z ZERO SUPPRESSION  ;                                 11485000
                   IF XN = 57 THEN                                      11490000
              BEGIN IF LAVE ! 0 AND LAVE ! 26 AND LAVE ! 43 AND         11495000
                   LAVE!58 AND LAVE!57 AND                COMMENT 1-28; 11500000
                   LAVE ! 53 AND LAVE ! 44 AND LAVE ! 42 AND            11505000
                   (LAVE ! 16) THEN GO TO ERR;               SV ~ CH;   11510000
                             %SAVE STARTING POSITION                    11510001
                   IF LAVE = 58 THEN                                    11515000
                             %IF LAST WAS , THEN MAKE SUPPRESSION       11515001
              BEGIN IF EDIT[H+1].[30:5] = 4 THEN%  CONTINUATION OF LAST 11520000
                   SV~EDIT[H+1].[42:6];                                 11525000
              END;                                                      11530000
                   PCDET (NCT,CH,CURTFR,COL,PCLGTH,EN,XN,XAVE);         11535000
                   IF ER ! 0 THEN GO TO ERR ELSE                        11540000
                   ZCT ~ ZCT + CURTFR; EDIT [J].[30:5] ~ 10;            11545000
                             %UPDATE EDITING COUNT, SET NUMERIC         11545001
              IF (VSF + PSF + PCT) ! 0 THEN EDIT[J].[42:6]~ 1;          11550000
                             % TRANSFER CODE AND SCALE FLAG             11550001
                   EDIT [J].[35:7]~ CURTFR;%REPEAT-FIELD UPDATE         11555000
                    T2~0;   IF EDIT[H+1].[30:5] = 4 AND                 11555020
                             %IF ZERO SUPPRESS AND                      11555021
                    LAVE ! 26 AND LAVE ! 53 THEN% NOT A PERIOD THEN SET 11555025
              BEGIN T2~EDIT[H+1].[35:7];% TO HANDLE CONTINUITY          11555040
                   H~H+1;                                               11555060
              END;                                                      11555080
                   EDIT[H] ~ SV & (CURTFR + T2) [35:41:7] &             11560000
                             %SET TO ZERO-SUPPRESS                      11560001
                   4 [30:43:5];                                         11560500
                   T2~IF LAVE = 26 THEN CURTFR+1 ELSE CURTFR;           11560510
                   IF (VSF+PSF) ! 0 THEN                                11560520
                     EDIT[H]~ (VSAVE+PSAVE) &                           11560530
                      T2 [35:41:7] &                                    11560540
                       17 [30:43:5];                                    11560550
                   H ~ H-1; IF GET (ISYMB    ,COL) = 58 THEN            11565000
                             %IF NEXT COL = , THEN SET TO               11565001
                   EDIT[H+1].[35:7]~EDIT[H+1].[35:7]+1;                 11570000
                             % HANDLE SUPPRESSION OVER COMMA            11570001
                   IF EN ! 0 THEN                                       11575000
              BEGIN EDIT[63]~0 & CH [35:41:7] & 5 [30:43:5];            11580000
                             %IF ALL Z THEN SET BLANK-WHEN-ZERO         11580001
                   J~J+1;                                               11585000
                   GO TO ENDER                                          11590000
              END;  GO TO ONE                                           11595000
              END;                                                      11600000
 COMMENT TEST FOR P SCALE INDICATOR ;                                   11605000
                   IF XN = 39 THEN                                      11610000
              BEGIN PL~CH;     %SAVE CURRENT FIELD POSITION             11615000
                   PCDET (DM,T6,CURTFR,COL,PCLGTH,EN,XN,XAVE);          11620000
                   IF ER ! 0 THEN GO TO ERR ELSE                        11625000
                   PCT ~ CURTFR; GO TO ONE%SAVE COUNT OF P              11630000
              END;                                                      11635000
 COMMENT TEST FOR ASTERISK - CHECK PROTECT ;                            11640000
                   IF XN = 43 THEN                                      11645000
              BEGIN IF LAVE ! 16 AND LAVE ! 53 AND LAVE ! 26            11650000
                   AND LAVE!33 AND LAVE!0 AND LAVE!43 AND COMMENT 1-28; 11655000
                   LAVE ! 58 AND LAVE ! 42 AND LAVE ! 44 THEN           11660000
                   GO TO ERR;  SV~CH;%SAVE STARTING LOCATION            11665000
                   PCDET (ZCT,CH,CURTFR,COL,PCLGTH,EN,XN,XAVE);         11670000
                   IF ER ! 0 THEN GO TO ERR;                            11675000
                    IF CURTFR = 1 THEN                                  11675010
              BEGIN  IF GET(ISYMB,COL) ! 58 THEN                        11675020
              BEGIN EDIT[J]~43 & 1 [35:41:7] & 1 [30:43:5];             11675030
                    LFP~LFP-1;  J~J+1;  GO TO ONE;                      11675040
              END;                                                      11675050
              END;                                                      11675060
                   NCT~NCT+CURTFR;%UPDATE NUMERIC TFR COUNT             11680000
                   EDIT[J] ~ (IF(VSF+PSF+PCT)! 0 THEN 1 ELSE 0) &       11685000
                             %SET TO NUMERIC TFR CURTFR CHARS           11685001
                   CURTFR [35:41:7] & 10 [30:43:5];                     11690000
                   T9 ~ 0;  IF EDIT[H + 1].[30:5] = 6 THEN       %SI-   11695000
                             %SET TO CHECK-PROTECT CURTFR POSITION      11695001
                             %  STARTING AT SV POSITION                 11695002
              BEGIN IF PSF = 1 THEN EDIT[H] ~ CURTFR & SV[35:41:7]%SI-  11695100
                   & 6[30:43:5]                                  %SI-   11695200
                   ELSE                                          %SI-   11695300
              BEGIN H ~ H + 1;  IF GET(ISYMB, COL) = 58 THEN     %SI-   11695400
              BEGIN T9 ~ 1; EDIT[H] ~ EDIT[H] + (CURTFR + 1)     %SI-   11695500
              END ELSE EDIT[H] ~ EDIT[H] + CURTFR                %SI-   11695600
              END                                                %SI-   11695700
              END ELSE EDIT[H] ~ CURTFR & SV[35:41:7] & 6[30:43:5];%SI  11695800
                   H ~ H - 1; IF T9 ! 1 THEN                     %SI-   11700000
                   IF GET (ISYMB,COL) = 58 THEN                         11705000
                             %IF COMMA SET TO FLOAT THRU                11705001
                   EDIT[H+1].[42:6]~CURTFR+1;                           11710000
                   T9 ~ 0; GO TO ONE;                            %SI-   11715000
              END;                                                      11720000
 COMMENT TEST FOR L - VARIABLE FIELD ;                                  11725000
                   IF XN = 35 THEN                                      11730000
             BEGIN COL ~ COL + 1; GO TO ONE; %IGNORE "L" IN PC     SI13711735000
              END;                                                      11740000
 COMMENT TEST FOR DOLLAR SIGN ;                                         11745000
                   IF XN = 42 THEN                                      11750000
              BEGIN    EDIT [J].[30:5] ~ 10;%SET NUMERIC TFR CODE       11755000
                   PCDET (ZCT,CH,CURTFR,COL,PCLGTH,EN,XN,XAVE);         11760000
              IF (VSF + PSF + PCT) ! 0 THEN EDIT[J].[42:6]~ 1;          11765000
                             %SET SCALE-PART CODE                       11765001
                   IF CURTFR = 1 THEN                                   11770000
              BEGIN IF GET(ISYMB,COL) ! 58 THEN                         11770010
              BEGIN EDIT [J]~42 & 1 [41:47:1] & 1 [34:47:1];            11775000
                             %IF ONE $ THEN SET INSERT CODE             11775001
                    LFP~LFP-1;                                          11780000
                     GO TO ONE                                          11785000
              END;                                                      11785010
              END;                                                      11790000
                   EDIT [H].[42:6] ~ 42;%SET $ IN EDIT CODE             11795000
FUNF:              NCT ~ NCT + CURTFR;                                  11800000
                   EDIT [J].[35:7] ~ CURTFR; EDIT [H].[35:7] ~ CURTFR;  11805000
                             %SET REPEAT-PART OF CODE                   11805001
                   EDIT [H].[30:5] ~ 2; H ~ H-1;%SET "FLOAT" CODE       11810000
                   IF GET (ISYMB    ,COL) = 58 THEN                     11815000
                             %IF COMMA, SET TO CONTINUE EDIT OVER       11815001
                   EDIT [H+1].[35:7] ~ CURTFR + 1;% THE COMMA POSITION  11820000
                   IF PSF=1 THEN IF GET(ISYMB,COL) = " "                11820200
                    THEN EDIT[(H~H+1)] ~ 0;                             11820300
                   GO TO ONE                                            11825000
              END;                                                      11830000
 COMMENT TEST FOR COMMA;                                                11835000
                   IF XN = 58 THEN                                      11840000
              BEGIN EDIT [J].[42:6] ~ 58;%SET , EDIT CODE               11845000
       CLM:        IF VSF = 0 AND PSF = 0 THEN LFP~LFP-1;               11850000
                             %SET SCALE-PART CODE                       11850001
       CLPE:                                                            11855000
                   ZCT ~ ZCT + 1; EDIT [J].[30:5] ~ 1;                  11860000
                             %SET "INSERT" CODE                         11860001
                   EDIT [J].[35:7] ~ 1; CH ~ CH + 1;                    11865000
                             %UPDATE FIELD-SIZE COUNT                   11865001
                   GO TO T                                              11870000
              END;                                                      11875000
 COMMENT TEST FOR PERIOD  ;                                             11880000
                   IF XN = 26 THEN                                      11885000
                   IF PSF ! 0 OR VSF ! 0 THEN                  %TR 775  11886000
                   GO TO ERR ELSE                              %TR 775  11887000
              BEGIN  EDIT[J].[42:6]~26;    PSF~1;% SET . EDIT CODE      11890000
                   PSAVE~CH;        GO TO CLPE;%SAVE PERIOD LOCATION    11895000
              END;                                                      11900000
 COMMENT TEST FOR B - BLANK INSERT ;                                    11905000
                   IF XN = 18 THEN                                      11910000
              BEGIN EDIT [J].[42:6] ~ 48;%SET BLANK EDIT CODE           11915000
INS1:              PCDET (ZCT,CH,CURTFR,COL,PCLGTH,EN,XN,XAVE);         11920000
                   IF ER ! 0 THEN GO TO ERR;                            11925000
              IF (VSF+PSF+PCT) ! 0 THEN RIP ~ RIP + CURTFR;             11930010
                             %IF IN SCALE-PART NOTE AS RIGHT-INSER      11930011
              IF (VSF+PSF+PCT) = 0 THEN LFP ~ LFP - CURTFR;             11935000
                             %ADJUST LEFT-PART BY INSERT COUNT          11935001
                   DO                                     COMMENT D-14; 11935100
                             %IF REPEAT FLD > 127 THEN MAKE             11935101
              BEGIN EDIT[J].[30:5]~1;                     COMMENT D-14; 11935200
                             % MULTIPLE ENTRIES                         11935201
                   IF CURTFR>127 THEN                     COMMENT D-14; 11935300
              BEGIN EDIT[J].[35:7]~127;                   COMMENT D-14; 11935400
                   J~J+1;                                 COMMENT D-14; 11935600
                   EDIT[J].[42:6]~EDIT[J-1].[42:6];       COMMENT D-14; 11935700
              END  ELSE  EDIT[J].[35:7]~CURTFR;           COMMENT D-14; 11935800
              END  UNTIL CURTFR~CURTFR-127{0;             COMMENT D-14; 11935900
                   GO TO ONE                                            11940000
              END;                                                      11945000
 COMMENT TEST FOR ZERO INSERTION ;                                      11950000
                   IF XN = 0 THEN                                       11955000
              BEGIN EDIT [J].[42:6] ~  0; GO TO INS1%SET ZERO EDIT CODE 11960000
              END;                                                      11965000
 COMMENT TEST FOR PLUS SIGN ;                                           11970000
                   IF XN = 16 AND ((CH = 0) OR                          11975000
                   (GET (ISYMB,COL+1) = 48)) THEN                       11975010
              BEGIN SV ~ 16;   SSAVE ~ CH;                              11980000
 PMP:              IF SGND ! 0 THEN GO TO ERR; SGND ~ SV;               11985000
                   PCDET (ZCT,CH,CURTFR,COL,PCLGTH,EN,XN,XAVE);         11990000
                   SGP ~ 1;                                             11995000
      COMMENT FORCE A V FOR THE CASE -PP9(7) ;            COMMENT N-25; 11996000
                   IF XN = "P" THEN VSF~VSAVE~REAL(XN="P");COMMENT SI-3;11997000
                   IF ER ! 0 THEN GO TO ERR;                            12000000
                   IF CURTFR!1 OR GET(ISYMB,COL)=58 THEN                12005000
              BEGIN EDIT [J].[30:5]~ 10; EDIT [J].[35:7] ~ CURTFR;      12010000
                   EDIT [H] ~SV & CURTFR [35:41:7] & 2 [30:43:5];       12015000
                   H~H-1; SFLT~1;                                       12020000
              IF (VSF + PSF + PCT) ! 0 THEN EDIT[J].[42:6]~ 1;          12025000
                   IF GET(ISYMB,COL)=58 THEN COMMENT ",";               12025010
                   EDIT[H+1].[35:7]~CURTFR+1;                           12025020
                   IF PSF = 1 THEN IF GET(ISYMB,COL)=" " THEN           12025030
                    EDIT[H~H+1] ~ 0;                                    12025040
                   GO TO ONE                                            12030000
              END;                                                      12035000
                   IF GET(ISYMB,COL)=58 THEN COMMENT ",";               12035010
              BEGIN EDIT[J]~SV&1[41:47:1]&1[34:47:1];                   12035020
                   LFP~LFP-1;                                           12035030
                   GO TO ONE;                                           12035040
              END;                                                      12035050
                   EDIT[J].[35:7]~1;                                    12040000
                   EDIT[J].[30:5]~1;                                    12045000
                    IF GET(ISYMB,COL) = 48 THEN                         12045010
              BEGIN EDT ~ 1;                           COMMENT 2-11-64; 12045020
                   IF (VSF + PSF + PCT) = 0 THEN       COMMENT 2-11-64; 12045025
                   RIP ~ RIP + 1;                      COMMENT 2-11-64; 12045030
              END;                                     COMMENT 2-11-64; 12045035
                    IF SSAVE = 0 THEN LFP~LFP-1;                        12045050
                   EDIT [J].[42:6]~48;                                  12050000
                   MINS~1;                                              12055000
                   IF (VSF +PSF+PCT) ! 0 THEN RIP ~ RIP +1;             12055050
                   IF GET (ISYMB,COL+1) = 48 THEN                       12060000
              BEGIN J~J+1; EDIT[J]~SV & 1 [35:41:7] &                   12060010
                   3 [30:43:5] & (CH-1) [25:43:5];                      12060020
                   MINS ~ 0;                                            12060025
                   J~J+1;                                               12060030
              END;                                                      12060040
                   SSAVE~CH-1; GO TO ONE;                               12065000
              END ELSE IF (LAVE = "," OR LAVE = ".")                    12070000
                   AND EDIT[H+1].[30:5] = 2 THEN                        12070010
         COMMENT "," AND FLOAT SPECIFIED;                               12070020
              BEGIN  SV~EDIT[H+1].[42:6]; SGND~0;                       12070030
                   SSAVE~CH; GO TO PMP;                                 12070040
              END;                                                      12070050
 COMMENT TEST FOR MINUS SIGN ;                                          12075000
                   IF XN = 44 AND ((CH = 0) OR                          12080000
                   (GET (ISYMB,COL+1) = 48)) THEN                       12080010
              BEGIN  SV~44;  SSAVE~CH;  GO TO PMP;                      12085000
              END ELSE IF(LAVE="," OR LAVE="." OR LAVE="V")     %TR-151 12090000
                   AND EDIT[H+1].[30:5] = 2 THEN                        12090010
         COMMENT "," AND FLOAT SPECIFIED;                               12090020
              BEGIN  SV~EDIT[H+1].[42:6]; SGND~0;                       12090030
                   SSAVE~CH; GO TO PMP;                                 12090040
              END;                                                      12090050
 COMMENT TEST FOR CR EDITING ;                                          12095000
                   IF XN = 19 THEN                                      12100000
              BEGIN COL ~ COL +1; XN ~ GET (ISYMB    ,COL);             12105000
                   IF XN ! 41 THEN GO TO ERR ;                          12110000
                   EDIT [J]~19 & CH [35:41:7] & 8 [30:43:5];            12115000
 C1:               CH ~ CH +2; ZCT ~ ZCT +2; EDT ~ 2; J ~ J+1;          12120000
                   SGP ~ 1;                                             12125000
                   COL~COL+1; IF COL } PCLGTH OR GET(ISYMB,COL)         12130000
                   = 48 THEN GO TO ENDER ELSE GO TO ERR;                12135000
              END;                                                      12140000
 COMMENT TEST FOR DB EDITING ;                                          12145000
                   IF XN = 20 THEN                                      12150000
              BEGIN COL ~ COL +1; XN ~ GET (ISYMB    ,COL);             12155000
                   IF XN ! 18 THEN GO TO ERR;                           12160000
                   EDIT [J]~20 & CH [35:41:7] & 8 [30:43:5];            12165000
                   GO TO C1                                             12170000
              END;                                                      12175000
 COMMENT TEST FOR J SIGN ;                                              12180000
                   IF XN = 33 THEN                                      12185000
              BEGIN IF CH ! 0 THEN GO TO ERR;                           12190000
                   IF SGND ! 0 THEN GO TO ERR; SSAVE ~ CH;              12195000
                   SGND ~ 33;  GO TO T                                  12200000
              END;                                                      12205000
 COMMENT TREAT OTHER CHARACTERS AS INSERTS;                             12210000
                    IF XN = 29 THEN GO TO ERR;                 %CJC 010 12211000
                   EDIT [J].[42:6] ~ XN; GO TO INS1;                    12215000
 ERR:              CLASS ~ 9; EIND ~36; EIND.[32:8]~8;%"PICTURE ERROR". 12220000
                   ERP(EIND,0); COMPE~TRUE; GO TO LX;    COMMENT 3-23;  12225000
 COMMENT ENDING ANALYSIS ;                                              12230000
         ENDER: BEGIN  LABEL E1,   E3,E4;                               12235000
                   IF EDIT[63].[30:5] ! 5 THEN                          12235020
              BEGIN                                                     12235030
                   IF ZCT=CH OR%IF ALL EDIT CHARACTERS                  12235100
                    (CH=0 AND SGND!0) THEN                COMMENT 2-12; 12235200
              BEGIN EDIT[63]~0 & CH [35:41:7] & 5 [30:43:5];            12240000
                             %THEN MARK BLANK WHEN ZERO                 12240001
              END;                                                      12245000
              END;                                                      12245050
                   IF SFLT = 0 THEN%IF NOT FLOAT SIGN                   12250000
              BEGIN                                                     12255000
                   IF SGND ! 0 THEN%IF SIGN SPECIFIED                   12260000
              BEGIN  IF CH ! 0 THEN                       COMMENT 4-07; 12260050
              BEGIN IF SGND ! 16 AND SGND ! 44 THEN                     12265000
                             %IF NOT PLUS OR MINUS                      12265001
              BEGIN J ~ J + 1;                                          12270000
                   EDIT [J]~SGND & SSAVE [35:41:7] & 3 [30:43:5];       12275000
                             %SET SIGN PROCESS CODE                     12275001
                   J ~ J + 1                                            12280000
              END  ELSE                                                 12285000
              BEGIN IF MINS ! 0 THEN%IF REPORT SIGN PLUS OR MINUS       12290000
              BEGIN J~J+1;                                              12295000
                   EDIT[J]~SGND & 1 [35:41:7] &                         12300000
                   3 [30:43:5] & SSAVE [25:43:5];                       12305000
                             %SET REPORT SIGN PROCESS CODE              12305001
                   J~J+1;                                               12310000
              END;                                                      12315000
              END;                                                      12325000
              END;                                        COMMENT 4-07; 12325050
                   IF CH = 0 THEN%IF NOT CHARACTERS REPRESENTED THEN    12330000
              BEGIN  CLASS~4; CH~1; SGP~1; INT~1;                       12335000
                             %SET EDITED-NUMERIC, EDIT SIGN, FOR        12335001
                   JCV(ORIG,J,K);  DICT[J,K].[12:1]~1;%PICTURE IS "S"   12335020
                   EDIT[J]~0&11[30:43:5]&1[35:41:7];      COMMENT 4-07; 12335030
                   J ~ J + 1;  %SET TRANSFER ONE SOURCE CODE            12335040
                   GO TO E3;                                            12335070
              END;                                                      12340000
              END;                                                      12340050
              END;                                                      12345000
                   IF PCT ! 0 THEN%IF "P" COUNT NOT ZERO                12350000
              BEGIN IF PL = 0 THEN PCT ~ -PCT;                          12355000
                   IF VSF ! 0 THEN%IF "V" GIVEN                         12360000
              BEGIN IF VSAVE ! 0 THEN%IF NOT FIRST CHARACTER POSITION   12365000
              BEGIN SCALE ~ CH - VSAVE - EDT + PCT;                     12370000
                   INT ~ CH - EDT;   GO TO E1                           12375000
              END                                                       12380000
              END;                                                      12385000
                   IF PSF ! 0 THEN%IF PERIOD SPECIFIED                  12390000
              BEGIN SCALE ~ CH - PSAVE - EDT -PCT -1;                   12395000
                    INT ~ CH - SCALE; GO TO E1                          12400000
              END;                                                      12405000
                    IF PL = 0 THEN                                      12410000
              BEGIN SCALE ~ -PCT + CH - EDT; INT~0; GO TO E1            12415000
              END;                                                      12420000
                   SCALE ~ -PCT;  INT ~ PL;  IF INT < 0 THEN            12425000
                    INT ~ 0;  GO TO E1                                  12430000
              END;                                                      12435000
                   IF VSF ! 0 THEN%IF "V" SPECIFIED                     12440000
              BEGIN IF VSAVE = 0 THEN                                   12445000
                             %IF FIRST CHARACTER POSITION OF FIELD      12445001
              BEGIN SCALE ~ CH - EDT; INT ~ 0; GO TO E4                 12450000
              END;                                                      12455000
                    SCALE ~ CH-VSAVE - EDT;  INT ~ VSAVE;               12460000
       E4:         IF NCT = CH AND ZCT = 0 THEN                         12465000
                             %IF ALL POSITIONS NUMERIC                  12465001
              BEGIN CLASS ~ 3; GO TO E3%CLASS SET TO NUMERIC            12470000
              END;                                                      12475000
                   GO TO E1                                             12480000
              END;                                                      12485000
                   IF PSF = 0 THEN%IF NO PERIOD SPECIFIED               12490000
              BEGIN INT ~ CH - EDT; GO TO E1                            12495000
              END;                                                      12500000
                   IF PSAVE = 0 THEN%IF PERIOD GIVEN FIRST              12505000
              BEGIN SCALE~ CH - (EDT+1); INT~0; GO TO E1;               12510000
              END;                                                      12515000
                    SCALE ~ CH - PSAVE - EDT - 1; INT ~ PSAVE;          12520000
 E1:               IF ZCT ! 0 THEN%IF EDITING CHARACTERS NOT ZERO       12525000
              BEGIN IF (NCT ! 0) AND (XCT = 0) AND (ACT = 0) THEN       12530000
                             %IF ONLY NUMERIC CHARACTERS                12530001
              BEGIN CLASS ~ 4; GO TO E3%THEN EDITED-NUMERIC CLASS       12535000
              END;                                                      12540000
                    IF NCT ! 0 THEN                                     12545000
              BEGIN CLASS ~ 4; GO TO E3                                 12550000
              END;                                                      12555000
                   IF ZCT = CH THEN                                     12555010
              BEGIN   CLASS~4;   GO TO E3;                              12555020
                             %IF ALL EDITING THEN EDITED-NUMERIC        12555021
              END;                                                      12555030
                    CLASS ~ 2 ;  GO TO E3                               12560000
              END;                                                      12565000
                   IF ACT = CH THEN                                     12570000
              BEGIN        CLASS ~1;  GO TO E3;                         12575000
                             %IF ALL ALPHABETIC THEN SET CLASS          12575001
              END;                                                      12580000
                    IF NCT = CH THEN                                    12585000
              BEGIN CLASS ~ 3; GO TO E3                                 12590000
                             %IF ALL NUMERIC THEN NUMERIC CLASS         12590001
              END;                                                      12595000
                   IF XCT = CH THEN                                     12595010
              BEGIN        CLASS ~2;  GO TO E3;                         12595020
                             %IF ALL X THEN ALPHANUMERIC                12595021
              END;                                                      12595050
                   IF (ACT = 0) AND (XCT = 0) THEN                      12600000
              BEGIN CLASS ~ 4; GO TO E3                                 12605000
              END;                                                      12610000
                   IF NCT ! 0 AND XCT ! 0 THEN                          12610010
              BEGIN   CLASS~3;   GO TO E3;                              12610020
              END;                                                      12610030
                   CLASS ~ 2;                                           12630000
       E3:         PSZ ~ CH;   %PZS IS SIZE GIVEN BY PICTURE            12635000
                   LFP~LFP+INT; IF LFP < 0 THEN LFP~0;                  12640000
                   IF SCALE > 120 THEN                                  12640010
              BEGIN  EIND~40 & 36 [32:40:8] & 15 [24:40:8] &            12640020
                   27 [16:40:8];   ERP(EIND,0);                         12640030
              END;                                                      12640050
                   EDIT [J].[30:5]~16;                                  12645000
                             %SET DIVIDER BETWEEN TRANSFERS AND         12645001
                   EDIT[J].[42:6]~63 - H;%EDITING FUNCTIONS             12650000
                   J~J+1;                                               12655000
              END;                                                      12655500
       LX:         IF CH ! 0 THEN                                       12660000
              BEGIN                                                     12665000
                   JCV (KX,J,K);                                        12670000
                   INFO [J,K].[31:1]~1;                                 12675000
                   INFO[J,K+1].[10:1]~SGP;             COMMENT 2-26-64; 12680000
                   H~0; T2~0;  %                                        12685000
                   T3~0;   IF MDF THEN                                  12685050
              BEGIN                                                     12685100
                   FOR X~0 STEP 1 UNTIL 65 DO                           12685150
              BEGIN  IF EDIT [X] ! 0 THEN T2~T2+1;                      12685160
              END;                                                      12685180
              END  ELSE                                                 12685200
              BEGIN   JCV(PCIX+2,J,K);                                  12685250
                   FOR X~0 STEP 1 UNTIL 65 DO%                          12690000
              BEGIN  IF EDIT [X] ! 0 THEN                               12695000
              BEGIN  IF H = 0 THEN                                      12700000
                   DICT[J,K+T3].[1:23]~EDIT[X]  ELSE                    12700010
                             %MOVE PICTURE TO INFO ARRAY AND            12700011
                   DICT[J,K+T3].[24:24]~EDIT[X];                        12700020
                    T2~T2+1;  H~H+1;   IF H > 1 THEN                    12700030
                             %  SAVE PICTURE CODE COUNT.                12700031
              BEGIN  H~0;   T3~T3+1;                                    12700040
              END;                                                      12700050
              END;                                                      12705000
              END;                                                      12710000
              END;                                                      12710010
                   IFOL(RIP,PCIX);                     COMMENT 2-26-64; 12710020
                   ILEVL(T2,PCIX);                                      12710030
                   JCV(KX,J,K);                        COMMENT 2-26-64; 12715000
                   INFO[J,K+2].[18:15]~PCIX;           COMMENT 2-26-64; 12715010
                   IF NOT MDF THEN                                      12715020
              BEGIN   AVAIL~AVAIL + ((T2+1) DIV 2);                     12715030
                     IF AVAIL.[39:9] > 500 THEN                         12715035
              BEGIN  AVAIL~AVAIL+50;  AVAIL.[39:9]~0;                   12715040
              END;                                                      12715050
              END;                                                      12715060
              END;                                                      12720000
                   PSZ~CH;                                              12725000
              END;                                                      12730000
                   IF ER ! 0 THEN GO TO RECO;                  %CJC 015 12734000
                   IF SCLAS = 8 THEN GO TO IP3;                         12735000
                             %IF PICTURE THEN LOOP FOR NEXT ITEM        12735001
      COMMENT  SIZE TEST ;                                              12740000
                   IF KEY = 397 THEN                                    12745000
              BEGIN                                                     12750000
                   SZ ~ INTEG; SCTRL; IF KEY ! 264 THEN GO TO IP31;     12755000
                       % PICK UP SIZE; SCAN; IF NOT "TO"       %CJC 014 12755001
                       %  THEN BACK TO GET NEXT ITEM           %CJC 014 12755002
                   DSF ~ 1;   SZ ~ INTEG;   SCTRL;             %CJC 014 12760000
                             %SET "SIZE DEPENDING" AND GET THRU         12760001
                   IF KEY ! 359 THEN                           %CJC 014 12761000
                   GO TO IP31 ELSE GO TO LDOF;                 %CJC 014 12762000
              END;                                             %CJC 014 12765000
         COMMENT USAGE TEST  ;                                          12770000
                   IF KEY = 558 THEN                                    12775000
              BEGIN SCTRL;                                              12780000
                   IF KEY = 356 OR  % CMP OR COMPUTATIONAL     %CJC 081 12784000
                   LGTH = 4 AND ISYMB[0].[24:24] = "COMP" THEN %CJC 081 12785000
                   IF CLASS = 0 OR CLASS = 3 THEN              %CJC 015 12786000
              BEGIN USAGE ~ 1; CLASS~3; GO TO IP3%SET CLASS AS NUMERIC  12790000
              END;                                                      12795000
                    IF KEY = 907 THEN%IF DISPLAY                        12800000
              BEGIN USAGE ~ 0; GO TO IP3                                12805000
              END; IF KEY = 570 OR  % CMP-1 OR COMPUTATIONAL-1 %CJC 081 12806000
                   LGTH = 6 AND ISYMB[0].[24:24] = "COMP" THEN %CJC 081 12807000
                   IF CLASS = 0 OR CLASS = 3 THEN              %CJC 015 12810015
              BEGIN USAGE ~ 2 ; GO TO IP3 ;                             12810020
              END;                                                      12810030
                   EIND~16 & 8 [32:40:8];%IF OTHER THEN ERROR           12815000
                    ERP (EIND,0)      ;%"USAGE ERROR".                  12820000
                    GO TO IP31                                          12825000
              END;                                                      12830000
         COMMENT  CLASS TEST ;                                          12835000
                   IF KEY = 355 THEN                                    12840000
              BEGIN SCTRL; IF KEY = 348 THEN%IF ALPHANUMERIC            12845000
                   IF CLASS ! 3 THEN                           %CJC 015 12846000
              BEGIN CLASS~2; GO TO IP3                                  12850000
              END;                                                      12855000
                   IF KEY = 347 THEN%IF ALPHABETIC                      12860000
                   IF CLASS ! 3 THEN                           %CJC 015 12861000
              BEGIN  CLASS~1; GO TO IP3                                 12865000
              END;                                             %CJC 015 12870000
                             %IF NUMERIC                                12870001
                   IF KEY = 378 THEN    % IF "NUMERIC"         %CJC 015 12871000
                   IF CLASS = 0 OR CLASS = 3 THEN              %CJC 015 12872000
              BEGIN CLASS ~ 3;    GO TO IP3;                   %CJC 015 12873000
              END;                                             %CJC 015 12874000
              BEGIN EIND~39 & 8 [32:40:8]; CLASS~2;%IF OTHER THEN ERROR 12875000
                   ERP (EIND,0)      ; GO TO IP31%"CLASS ERROR".        12880000
              END                                                       12885000
              END;                                                      12890000
                   IF KEY = 253 THEN                                    12900000
              BEGIN IF LIBCOPY THEN COPY ELSE                           12900500
              BEGIN COPY; IF LIBCOPY THEN GO TO IP31;                   12900600
              END;             %CALL COPY PROCEDURE (08500000)          12905000
                             %IF LIBRARY COPY THEN LOOP                 12905001
                   FL8 ~ TRUE;                         COMMENT 3-16-64; 12905005
                   INFLG~TRUE;  IF SCLAS = 7 THEN GO TO TERM            12905010
                             %SET "INHIBIT PROCESS" IF PERIOD           12905011
                   ELSE GO TO RECO%   THEN GO TO END ELSE ERROR         12910000
              END;                                                      12915000
                   IF KEY = 379 THEN                                    12925000
              BEGIN OCCURS ~ INTEG;%GET "OCCURS" INTEGER                12930000
                   IF LEVEL = 1 THEN                                    12935000
              BEGIN  EIND~40 & 45 [32:40:8] & 35 [24:40:8];             12940000
                             %IF RECORD LEVEL THEN ERROR                12940001
                   ERP (EIND,0)      ;    GO TO RECO;                   12945000
                             %"ILLEGAL OCCURS LEVEL".                   12945001
              END;                                                      12950000
                   IF NC ! 0 THEN GO TO SYER;%77 LEVEL W/OCCURS%CJC 014 12955000
                   OCURCT~OCURCT+1;%ADD ONE TO SUBSCRIPTS REQUIRED      12960000
                   SCTRL; IF KEY ! 264 THEN%IF NOT "TO"                 12965000
              BEGIN IF KEY = 554 THEN GO TO IP3 ELSE GO TO IP31         12970000
                             %IF "TIMES"                                12970001
              END; UNITS~OCCURS; OCCURS~INTEG; DOF~1;                   12975000
                             %GET "OCCURS" INTEGER. SET DEPENDING       12975001
                   SCTRL;                                               12975010
                   IF KEY = 554 THEN SCTRL;                    %CJC 014 12985000
                             %IF "TIMES"                                12985001
                   IF KEY ! 359 THEN GO TO SYER;               %CJC 014 12986000
LDOF:              SCTRL;                                      %CJC 014 12990000
                   IF KEY = 271 THEN SCTRL;                    %CJC 014 12995000
                         %  BYPASSED "ON"                      %CJC 014 13000000
                   USW~TRUE;   %SET "FORCE DICT ENTRY"                  13000050
                   DATANAME (0); IF LOCUS ! 0 THEN OCUR~LOCUS;          13005000
                             %GET DEPENDING OPERAND                     13005001
                    IF LOCUS = 0 THEN                                   13005010
              BEGIN SYOUT(MSG[124],ISYMB,LGTH);                         13005020
                    EIND~13 & 22 [32:40:8] & 124 [24:40:8];             13005030
                             %"UNIDENTIFIED OPERAND XXXX"               13005031
                    ERP(EIND,0);  COMPE ~ TRUE;                         13005040
                    GO TO RECO;                                         13005050
              END;                                                      13005060
                   INLGTH~INLGTH+1;                    COMMENT 2-26-64; 13010050
                   JCV (KX+3,J,K);  IF DOF = 0 THEN                     13015000
              BEGIN INFO [J,K].[3:15]~OCUR%SET SIZE DEPENDING LINK      13020000
              END ELSE                                                  13025000
              BEGIN INFO [J,K].[33:15]~OCUR%SET OCCURS DEPENDING LINK   13030000
              END;   OCOC~ORIG;      IF LEVEL = 1 THEN%IF RECORD LEVEL  13035000
              BEGIN DOF ~ DSF ~ 0;  IF CDIVN ! 3 THEN          %CJC 014 13040000
                         GO TO IP3;  % IF NOT FILE SECTION     %CJC 014 13045000
                   T1 ~ OILNK(CFDE);                           %CJC 014 13050000
                   JCV(T1,J,K);  % SET LINK IN FILE ENTRY      %CJC 014 13055000
                   INFO[J,K+ 2].[18:15] ~ OCOC;                %CJC 014 13060000
              END; GO TO IP3;                                  %CJC 014 13061000
              END;                                                      13065000
                   IF KEY = 378 THEN                                    13070000
                   IF CLASS = 0 OR CLASS = 3 THEN              %CJC 015 13071000
              BEGIN CLASS ~ 3; GO TO IP3%IF NUMERIC THEN SET CLASS      13075000
              END;                                                      13080000
                   IF KEY = 356 OR  % CMP OR COMPUTATIONAL     %CJC 081 13084000
                   LGTH = 4 AND ISYMB[0].[24:24] = "COMP" THEN %CJC 081 13085000
                   IF CLASS = 0 OR CLASS = 3 THEN              %CJC 015 13086000
              BEGIN CLASS ~ 3; USAGE ~ 1; GO TO IP3                     13090000
              END;                                                      13095000
                   IF KEY = 347 THEN%IF ALPHABETIC                      13100000
                   IF CLASS ! 3 THEN                           %CJC 015 13101000
              BEGIN CLASS ~ 1; GO TO IP3                                13105000
              END;                                                      13110000
                   IF KEY = 348 THEN                                    13115000
                   IF CLASS ! 3 THEN                           %CJC 015 13116000
              BEGIN CLASS ~ 2; GO TO IP3%IF ALPHANUMERIC                13120000
              END;                                                      13125000
                   IF KEY = 360 THEN%IF "DIGITS" OR "DIGITS"            13130000
                   IF CLASS = 0 OR CLASS = 3 THEN              %CJC 015 13131000
              BEGIN CLASS ~ 3;   GO TO IP3;                    %CJC 015 13135000
              END;                                                      13140000
                   IF KEY = 907 OR KEY = 258 THEN GO TO IP3;   %CJC 014 13145000
                      % BYPASS "DISPLAY" AND "CHARACTERS"      %CJC 014 13146000
                   IF KEY = 570 OR  % CMP-1 OR COMPUTATIONAL-1 %CJC 081 13146500
                   LGTH = 6 AND ISYMB[0].[24:24] = "COMP" THEN %CJC 081 13147000
                   IF CLASS = 0 OR CLASS = 3 THEN              %CJC 015 13147500
              BEGIN USAGE ~ 2;  CLASS ~ 3;  GO TO IP3;         %CJC 015 13148000
              END;                                             %CJC 014 13149000
                   IF KEY = 359 AND DSF = 1 THEN GO TO LDOF;   %CJC 014 13150000
                   IF (X~ALLERLEI) = 0 THEN GO TO SYER;                 13185000
                             %TEST FOR REMAINING ALLOWABLE NAMES        13185001
                   IF X = 1 THEN GO TO IP31;                            13190000
                   IF X = 2 THEN GO TO IP3;                             13195000
                   FOUND~FALSE;   IF FCHK THEN X~T1;                    13200000
                             %PRINT UNIDENTIFIED NAME                   13200001
                   GO TO IP3;                                           13205000
SYER:              ERP(77,0);     COMPE~TRUE;%"SYNTAX ERROR".           13210000
RECO:              IF SCLAS ! 7 THEN                                    13215000
              BEGIN SCTRL; GO TO RECO%LOOP UNTIL PERIOD FOUND           13220000
              END;                                                      13225000
TERM:         BEGIN LABEL TERM1,TERM2,TERM3,TERM4,TERM5,                13230000
                             %PROCESS DATA-NAME DECLARATIONS            13230001
                   TERME;                                 COMMENT 8-18; 13230020
                   INTEGER EDE;                           COMMENT 7-7;  13230040
                   IF REN ! 0 THEN%IF LEVEL 66 AND NOT "RENAMES"        13235000
                   BEGIN ERP(35 & 8[32:40:8],0); COMPE~TRUE;%THEN  SI13813240000
              END;             %"LEVEL ERROR".                          13245000
                   IF (NC ! 0) AND (CDIVN = 3) THEN                     13250000
                             %IF LEVEL 77 AND FILE SECTION THEN         13250001
                   BEGIN ERP(35 & 8[32:40:8],0);% "LEVEL ERROR".   SI13813255000
                         COMPE ~ TRUE;%                            SI13813255500
              END;                                                      13260000
                   IF (DSF+DOF+OCCURS) ! 0 AND LITF THEN                13260010
                             %IF DEPENDING AND VALUE GIVEN              13260011
              BEGIN EIND~40 & 45 [32:40:8] & 46 [24:40:8]               13260020
                             %"ILLEGAL OCCURS VALUE DECLARATION".       13260021
                    & 25 [16:40:8];                                     13260030
                     ERP(EIND,0);    COMPE ~ TRUE;       COMMENT SI-2;  13260040
              END;                                                      13260050
                   IF CONDN THEN GO TO TERM2;                           13265000
                             %IF CONDITION-NAME THEN BYPASS             13265001
                    IF LEVEL = 56 THEN%IF LEVEL 66 THEN BYPASS REST OF  13270000
                             %THE END PROCESSING                        13270001
              BEGIN LOCUR~ORDR1;  LASTLL~ORDR;                          13270010
                    GO TO TERM2;                                        13270020
              END;                                                      13270030
                    IF LEVEL = 1 THEN LASTRED~0;                        13270050
                   IF LASTRED ! 0 AND LEVEL { OLEVL(LOCUR) AND          13275000
                             %IF LAST WAS REDEFINES AND LAST WAS        13275001
                   REDFF = 0 THEN%ELEMENTARY AND THIS IS NOT A REDEFIN  13280000
              BEGIN LASTRED~0; WHILE FX!0 DO%THEN FIX FOLLOWER LINK     13285000
              BEGIN IF LEVEL{FOLL[FX].[27:6] THEN                       13290000
                             %IF REDEFINES FOLLOWER INDEX               13290001
              BEGIN IFOL(IF LEVEL{1 THEN 0 ELSE ORIG,                   13295000
                             %DELETE LAST REFERENCE FROM TABLE          13295001
                     FOLL[FX].[33:15]);                    COMMENT 8-18;13295010
                     FOLL[FX]~0; FX~FX-1;                  COMMENT 8-18;13295020
              END  ELSE GO TO TERM4;                       COMMENT 8-18;13295030
              END;                                         COMMENT 8-18;13295040
TERM4:        END;                                         COMMENT 8-18;13300000
            IF INFLG THEN GO TO TERM5 ;%IF "INHIBIT" THEN BYPASS        13305000
                   IF USAGE ! 0 AND SGND = 0 THEN                       13305010
              BEGIN SGND~50;                           COMMENT 2-26-64; 13305020
              END;                                                      13305040
                   IF PSZ ! 0 THEN%IF PICTURE SIZE NOT ZERO             13310000
              BEGIN  IF SZ ! 0 THEN%IF DECLARED SIZE NOT ZERO           13315000
              BEGIN  IF SZ ! PSZ THEN%IF PICTURE AND DECLARED DIFFER    13320000
              BEGIN EIND~15 & 25 [32:40:8] & 8 [24:40:8];               13325000
                             %"SIZE DECLARATION ERROR".                 13325001
                   ERP (EIND,0)                                         13330000
              END                                                       13335000
              END                                                       13340000
              END;  SZ~(IF SZ > PSZ THEN SZ ELSE PSZ);                  13345000
                             %SELECT LARGER SIZE                        13345001
                   SIZE ~ SZ;                                           13345010
                   IF USAGE = 2 THEN COMMENT CMP-1 ;                    13346010
              BEGIN EIND ~ 0 ; RFIX ~ 0 ;                               13346020
                   IF LEVEL ! 57 THEN COMMENT "USAGE SPEC. ERROR" ;     13346030
                   EIND ~ 16 ; %"USAGE SPECIFICATION ERROR"             13346040
                   IF OCCURS!0 THEN COMMENT "SUBSCRIPT SPEC.ERROR";     13346044
                   EIND~55;    %"SUBSCRIPT SPECIFICATION ERROR"         13346046
                   IF SIZE > 11 THEN COMMENT "SIZE SPEC. ERROR" ;       13346050
                   EIND ~ 15;  %"SIZE SPECIFICATION ERROR"              13346060
                   IF LASTLL = 57 AND LOCUR ! 0 THEN                    13346070
              BEGIN IF OUSG(LOCUR) ! 2 THEN COMMENT "USAGE SPEC. ERROR ;13346080
                   EIND ~ 16 ; %"USAGE SPECIFICATION ERROR"             13346090
              END; IF EIND ! 0 THEN                                     13346100
              BEGIN EIND ~ EIND & 27[32:40:8] & 8[24:40:8] ;            13346110
                             %WRITE PRECEDING ERROR MESSAGES            13346111
                   ERP(EIND,0); USAGE ~ 1 ; COMPE ~ TRUE ;              13346120
              END;                                                      13346130
              END;                                                      13346140
                   IF LEVEL=57 AND USAGE !2 AND                         13347010
                   LASTLL=57 AND OUSG(LOCUR)=2 THEN                     13347020
              BEGIN PX~PRTCTR;UPIT; QX~RX~0;                            13347030
                   OPNAR(0,PX,10);                             %CJC 073 13347040
                   RFIX ~ SEG1X - 10;                      COMMENT DF;  13347050
              END;                                                      13347060
                   IF JS ! 0 THEN%IF JUSTIFIED                          13350000
              BEGIN   IF CLASS = 3 THEN%IF NUMERIC                      13355000
              BEGIN  IF JS = 1 THEN JS ~ 0 ELSE                         13356000
              BEGIN IF SCALE ! 0 THEN COMMENT ILLEGAL DECLARATION;      13357000
                             %IF SCALE NOT 0 AND JUSTIFIED THEN         13357001
              BEGIN  ERP(40 & 25 [32:40:8],0);%"ILLEGAL DECLARATION"    13358000
                   COMPE ~ TRUE;%                                       13360000
              END;                                                      13361000
                   CLASS ~2;                                            13362000
              END;                                                      13363000
              END;    IF CLASS < 3 AND JS = 2 THEN JS~0;                13365000
                             %IF ALPHA OR AN AND JUSTIFIED LEFT,        13365001
              END;             %    THEN NORMAL JUSTIFICATION           13370000
         COMMENT SET INFO PART LGTH AND LINKS;                          13375000
                   IF OILNK(ORIG) = 0 THEN                              13380000
              BEGIN KX~IX;  IILNK (ORIG,IX);                            13385000
                             %IF INFO LINK NOT SET, THEN SET IT         13385001
              END;                                                      13390000
                   IF (BZ+ZS+FS+CP) ! 0 THEN%IF EDITING DECLARATIONS    13425000
              BEGIN IF CLASS < 3 OR USAGE ! 0 THEN             %CJC 017 13430000
                  % IF NOT NUMERIC OR IF CMP/CMP-1             %CJC 013 13430001
              BEGIN EIND~40 & 39 [32:40:8] & 25 [24:40:8];              13435000
                             %"ILLEGAL CLASS DECLARATION".              13435001
                  % EDITING SPECIFIED FOR CMP OR NON-NUMERIC   %CJC 013 13435002
                    ERP(EIND,0);  COMPE~TRUE;                  %CJC 012 13440000
              END ELSE CLASS ~ 4%OTHERWISE CLASS IS EDITED-NUMERIC      13445000
              END;                                                      13450000
                   IF SGND ! 0 THEN%IF SIGNED                           13455000
              BEGIN IF CLASS = 0 THEN CLASS ~ 3; IF CLASS < 3 THEN      13460000
                             %SET NUMERIC. IF NOT NUMERIC               13460001
              BEGIN EIND~39 & 25 [32:40:8] & 8 [24:40:8];%THEN ERROR    13465000
         % "CLASS DECLARATION ERROR"                           %CJC 011 13470000
                    ERP(EIND,0);  COMPE~TRUE;                  %CJC 011 13471000
              END;  IF SGND = 33 THEN SGND~2 ELSE%IF "J"                13475000
              BEGIN IF SGND = 50 THEN SGND~1 ELSE%IF "S"                13480000
              BEGIN  IF SGND = 20 THEN SGND~3 ELSE SGND~4;%IF DATA-NAME 13485000
              END                                                       13490000
              END                                                       13495000
              END; IF CLASS = 0 THEN CLASS~2;                           13500000
                             %IF NOT SPECIFIED THEN ALPHANUMERIC        13500001
                   SIZE~SZ;                                             13505000
                   IF (LFP=0 AND PSZ = 0) OR PTCLS THEN                 13510000
              BEGIN IF SCALE } 0 THEN                                   13515000
                   LFP~IF SCALE } SZ THEN 0 ELSE SZ-SCALE;              13520000
                             %SET LEFT-PART OF FIELD                    13520001
                    IF SCALE < 0 THEN LFP~SZ;                           13520050
              END;                                                      13525000
                   IF LFP < 0 THEN LFP~0;%LEFT PART MAY NOT BE MINUS.   13525050
                   IF OCURCT < 0 THEN OCURCT~0;                         13530000
                   IF LEVEL = 1 AND OCURCT ! 0 THEN OCURCT~0;           13530020
                   T9~OCURCT;   IF T9 ! 0 THEN%IF SUBSCRIPTS REQUIRED   13530050
              BEGIN  IF LEVEL < LASTLL THEN%IF NEW GROUP                13530060
              BEGIN  X~NX;                                              13530070
                     WHILE STK[X,0] } LEVEL DO                          13530080
                             %SUBTRACT 1 FROM REQUIRED SUBS UNTIL       13530081
              BEGIN   IF STK[X,3] ! 0 THEN T9~T9-1;                     13530090
                             %LEVEL IS LESS OR EQUAL                    13530091
                     X~X-1;                                             13530100
              END;                                                      13530110
              END;                                                      13530120
              END;   IF T9 < 0 THEN T9~0;                               13530130
                   IF LITF AND OCCURS =0 AND T9!0 THEN  COMMENT 2-7-64; 13530200
              BEGIN ERP(40&45[32:40:8]&46[24:40:8]&25[16:40:8],0);      13530210
                             %" ILLEGAL OCCURS VALUE DECLARATION"       13530211
                     COMPE ~ TRUE;                       COMMENT SI-2;  13530215
              END;                                      COMMENT 2-7-64; 13530220
                   IF USAGE ! 0 AND CLASS ! 3 THEN             %TR 335  13531000
              BEGIN  % DECLARED CMP/CMP-1 BUT NON-NUMERIC      %TR 335  13531100
                   COMPE ~ TRUE;                               %TR 335  13531200
                   ERP(40 & 39[32:40:8] & 25[24:40:8],0);      %TR 335  13531300
                      % "ILLEGAL CLASS DECLARATION"            %TR 335  13531400
              END;                                             %TR 335  13531500
                   JCV (ORIG,J,K); DICT[J,K]~DICT[J,K] &                13535000
                   SGND[13:45:3] &                     COMMENT 2-26-64; 13535010
                   USAGE[16:46:2] &                    COMMENT 2-26-64; 13535020
                    (IF OCCURS ! 0 THEN 1 ELSE 0)%SET OCCURS FLAG       13540000
                   [7:47:1] & (IF SGND ! 0 THEN 1 ELSE 0) [8:47:1];     13545000
                             %SET SIGNED FLAG                           13545001
                   IF SGP!0 THEN DICT[J,K].[13:3]~4;   COMMENT 2-26-64; 13545050
                   DICT[J,K+1]~DICT[J,K+1] & CLASS [7:45:3]             13550000
                 & SCALE[10:1:1] &                     COMMENT 2-26-64; 13555000
                   SCALE[11:41:7];                     COMMENT 2-26-64; 13560000
                   JCV (KX,J,K);                                        13565000
                   INFO[J,K].[33:15]~SZ;%SET DECLARED SIZE              13570000
                   INFO [J,K+1]~INFO [J,K+1] & JS [1:46:2] &            13575000
                   LP[5:43:5]& LFP[13:42:6] &                           13580000
                             %SET JUSTIFIED, LEAVING, SIGNED, LEFT      13580001
                   OCCURS [19:35:13] & T9 [32:44:4] &          %TR 86   13585000
                             %PART, OCCURS AND SUBSCRIPTS               13585001
                   ZS [38:47:1] & BZ [39:47:1] &                        13590000
                             %SET EDITING CLAUSE FLAGS                  13590001
                   FS [40:47:1] & CP [41:47:1] & TECH [42:47:1];        13595000
                   INFO [J,K+2].[1:1]~ IF CNSTFLG THEN 1 ELSE 0;        13600000
                             %SET CONSTANT SECTION FLAG                 13600001
                   INFO[J,K+1].[10:1]~SGP;%REPORT SIGN FLAG             13615000
                   T6~QX; T7~RX;                                        13620000
                   IF SGP ! 0 THEN                                      13625000
                   ISGND(ORIG);%SET SIGN TYPE AND FLAG                  13630000
                   IF NCLAS=6 THEN%IF NEXT SYMBOL IS INTEGER            13640000
              BEGIN T1~ICV1(NSYMB[0],4,0,NLGTH);                        13645000
                             %IF INTEGER GREATER THEN THIS LEVEL        13645001
                   IF T1!66 AND T1!88 AND LIBCOPY THEN    COMMENT 10-9; 13646000
                   T1~T1+DELTALC;                         COMMENT 10-9; 13647000
                   TX~T1>LEVEL;%THEN GROUP ITEM                         13650000
                   IF T1 = 66 OR T1 = 77 OR T1 = 88 THEN                13650010
              BEGIN  TX~FALSE;   IELEF(ORIG);                           13650020
                             %IF LEVEL IS 66 OR 88 THEN ELEMNT.         13650021
              END;                                                      13650030
                   IF TX AND PCLGTH ! 0 AND T1 < 50 THEN                13655000
                             %IF GROUP AND PICTURE GIVEN AND            13655001
              BEGIN EIND~76 & 36 [32:40:8] & 27 [24:40:8] &             13660000
                             %NOT 66, 77, 88 THEN GROUP PICT            13660001
                   77 [16:40:8]; ERP (EIND,0)      ;%ERROR              13665000
                    COMPE~ TRUE;                          COMMENT 5-9;  13666000
              END;                                                      13670000
              END ELSE T1~0;                                            13680000
                   IF NOT TX THEN%IF ELEMENTARY ITEM                    13685000
              BEGIN  IF USAGE = 0 THEN INSZ~SIZE ELSE                   13690000
                             %IF DISPLAY THEN ACTUAL SIZE               13690001
              BEGIN INSZ~IF SIZE < 12 THEN 8 ELSE 16;                   13695000
                             %IF COMP THEN 8 OR 16 AS INTERNAL SZ       13695001
              END;  JCV(KX,J,K); INFO[J,K+2].[33:15]~INSZ;              13700000
              END;                                                      13705000
                   IF CLASS>2 AND LFP>63 AND NOT TX THEN                13705002
              BEGIN IF DICT[ORIG.[33:6],ORIG.[39:9]].[10:1]=0 THEN      13705003
             BEGIN EIND~40 & 15[32:40:8]& 25[24:40:8];                  13705004
                             %"ILLEGAL SIZE DECLARATION"                13705005
                   ERP(EIND,0); COMPE ~ TRUE;          COMMENT 2-28-64; 13705006
              END;                                     COMMENT 2-28-64; 13705008
              END;              COMMENT ADDED WITH 13705003 ON 3-12-64; 13705010
                   IF LEVEL < 50 AND T1 { 1 THEN IELEF(ORIG);           13705020
                             %SET ELEMENTARY FLAG                       13705021
                   IF OCCURS ! 0 AND OCURCT ! 0 AND NOT TX THEN         13710000
                             %IF ELEM THEN SUBTRACT 1 FROM              13710001
                   OCURCT~OCURCT-1;%   SUBSCRIPTS REQUIRED              13715000
                   IF USAGE !0 AND SIZE > 18 AND NOT TX THEN            13715010
                             %IF CMP AND > DOUBLE PRECISION             13715011
              BEGIN EIND~40 & 15[32:40:8] & 124[24:40:8] & 16[16:40:8]  13715020
                             %"ILLEGAL SIZE/USAGE SPECIFICATION"        13715021
                   & 27[8:40:8]; MSG[124] ~ 0 & 1[1:43:5] & 49[6:42:6]; 13715030
                   ERP(EIND,0);  COMPE ~ TRUE;                          13715040
              END;                                                      13715050
                   IF T1{LEVEL OR T1=77 THEN%IF ELEMENTARY              13720000
              BEGIN IF SIZE = 0 THEN%IF SIZE NOT SPECIFIED              13725000
              BEGIN EIND~9 & 15 [32:40:8] & 27 [24:40:8];               13730000
                             %"MISSING SIZE SPECIFICATION".             13730001
                   ERP ( EIND,0 ) ; COMPE ~ TRUE ;         COMMENT 5/18;13735000
              END                                                       13740000
              END;  ASSIGN (ORIG,PX,QX,RX,TX);                          13745000
                             %SET UP RELATIVE ASSIGNMENT FOR ITEM       13745001
       TERM5:      TX~FALSE;                                            13750000
                   COR~FALSE;                                           13755000
                    IF FL8 THEN                                         13755010
              BEGIN  COMMENT LAST ITEM WAS A COPY;                      13755020
                   GO TO TERM2;                                         13755030
              END;                                                      13755040
                   IF LEVEL ! 56 THEN HIER ;                            13755060
                   IF LITF AND NOT ZRA THEN                             13760000
                             %IF LITERAL VALUE GIVEN AND NOT            13760001
              BEGIN            %   VALUE OF "ZERO"                      13765000
                   IF SIZE=0 THEN                    COMMENT 2-4 1500;  13766000
              BEGIN ERP(9&15[32:40:8]&27[24:40:8],0);                   13766010
                             %"MISSING SIZE SPECIFICATION"              13766011
                   COMPE~TRUE; GO TO TERM2;          COMMENT 2-4 1500;  13766020
              END;                                   COMMENT 2-4 1500;  13766030
                   IF USAGE = 0 AND SGND = 0 AND SGP = 0                13770000
                             %IF DISPLAY, UNSIGNED, UNEDITED,           13770001
                   AND CLASS < 4 AND                                    13775000
                   SZ = LTR[27] AND ALL = 0 AND NOT FIGC AND            13780000
                             % SIZES EQUAL, NOT "ALL" AND NOT           13780001
                   NOT LOW AND SCALE = LTR[29] THEN                     13785000
                             % FIGURATIVE CONSTANT AND SCALES =         13785001
              BEGIN            %  THEN CALL CHARACTER TRANSFER          13790000
                   OAS (T4,T6,T3,ORIG);                                 13795000
                   T1~0;  T2~0;                                         13795050
                   EMIL (OPR,MKS)     ;                                 13810000
                   EMIL(LITC,LTR[24]);EMIL(DESC,LTR[25]);               13815000
                             %CONSTANT-POOL WORD INDEX                  13815001
                   EMIL(LITC,LTR[23]); EMIL(LITC,T6);                   13815050
                             %CONSTANT-POOL DESCRIPTOR                  13815051
                   EMIL(DESC,PX); EMIL(LITC,T3);                        13820000
                             %CONSTANT-POOL CHARACTER ADDRESS           13820001
                   EMIL(LITC,SZ DIV 3969);%FIELD WORD ADDRESS           13825000
                   EMIL(LITC,(T1~SZ MOD 3969) DIV 63);                  13830000
                             %FIELD PRT ADDRESS                         13830001
                   EMIL(LITC,T8~T1 MOD 63);%FIELD CHARACTER ADDRESS     13835000
                   EMIL (OPDC,OCHRTRAN)     ;                           13860000
              END ELSE                                                  13880000
              BEGIN  IF USAGE=0 THEN%IF DISPLAY THEN                    13882000
                   MGENC (0,ORIG,LITF,ZRA,FIGC,LOW,0,0,ALL,0,0,         13885000
                             %CALL MOVE-GENERATOR FOR INITALIZATIO      13885001
                   0,0,0,0,FLOATED) ELSE                                13890000
                   MVL(ORIG,0,1);                                       13895000
              END;                                                      13897000
                   LITF~FALSE;                                          13900000
                   IF CNQ > 600 THEN%IF CONSTANT POOL NEEDS DUMPING.    13900020
              BEGIN EDE~0; IF CNPL <60 THEN                             13900040
                             %IF FIRST ROW OF CONSTANT POOL             13900041
              BEGIN EDE~CNPL;                             COMMENT 7-7;  13900060
                   IMIL(LITC,1);  IMIL(OPDC,CNPL);        COMMENT 7-7;  13900065
                   IMIL(LITC,RAL);  IMIL(OPR,STD);        COMMENT 7-7;  13900080
              END;                                        COMMENT 7-7;  13900100
                   DUMPCONST(CNP,CNPL,CNQ,CNR);           COMMENT 7-7;  13900120
                   IF EDE !0 THEN                         COMMENT 7-7;  13900140
              BEGIN IMIL(OPDC,RAL);  IMIL(LITC,1);        COMMENT 7-7;  13900160
                   IMIL(DESC,EDE);  IMIL(OPR,STD);        COMMENT 7-7;  13900180
              END;                                        COMMENT 7-7;  13900200
              END;                                        COMMENT 7-7;  13900220
                   IF CREG > 6000 THEN                                  13945020
                             %IF SEGMENT LENGTH GETTING TOO LONG        13945021
             BEGIN EMIL(OPR,MKS); EMIL(OPDC,PRTCTR); EMIL(OPR,XIT);     13945040
                   SEGDUMP(SEG,CREG); T10 ~ SEG[0,0];                   13945060
                   MAKELABEL(0,PRTCTR,0,0); UPIT;                       13945080
             END;                                                       13945100
              END;                                                      13950000
 TERM2:            INFLG ~ FALSE;                                       13970000
                   SCTRL;      %GET NEXT FIELD FROM CARD                13975000
TERM1:             SZ ~ 0; SCALE ~ 0;                                   13980000
                     IF NOT FL8 THEN                                    13980007
              BEGIN                                                     13980008
                   IF NOT CONDN AND LEVEL ! 56 THEN                     13980010
                             %IF NOT LEVELS 88 OR 66                    13980011
              BEGIN                                                     13980020
                    IF (X~OILNK (ORIG)) ! 0 THEN                        13985000
              BEGIN  JCV (X+2,J,K);                                     13990000
                    IF LEVEL ! 56 THEN                                  13995000
                   INFO [J,K].[3:15]~SOCUR;%SAVE SYMBOL LOCATION        14000000
              END;                                                      14005000
                    IF LEVEL ! 56 THEN                                  14010000
                   SETIX(3 + INLGTH);%UPDATE INFORMATION INDEX          14015000
              END;                                                      14015010
              END;                                                      14015015
                   CONDN~FALSE;                                         14015020
                    IF LEVEL = 1 AND CDIVN = 31 THEN IHLNK(0,ORIG);     14015050
                             %IF "01" AND NOT FILE SECT                 14015051
                   IF SCLAS=6 THEN%GET AND CONVERT NEXT LEVEL #         14020000
              BEGIN LEVEL~ICV1(ISYMB[0],4,0,LGTH);        COMMENT 10-9; 14021000
                   IF LEVEL!66 AND LEVEL!88 AND LIBCOPY   COMMENT 10-9; 14022000
                   THEN LEVEL~LEVEL+DELTALC;              COMMENT 10-9; 14023000
              END  ELSE LEVEL~0;                          COMMENT 10-9; 14025000
                   IF LASTLL = 1 AND LEVEL > 1 AND NOT LABLFLG THEN     14025010
              BEGIN  QX~0;  RX~0;                                       14025020
              END;                                                      14025030
                   IF LABLFLG THEN IFOL(0,CFDE);          COMMENT 5-21; 14025040
                    IF LEVEL { 1 THEN                                   14025050
              BEGIN T1 ~(8|QX)+RX+(IF LASTLL!57 THEN DUZ ELSE 0);%TR-14914030000
                             %PROCESS REMAINDER OF HIERARCHY STK        14030001
                   IF QX > 1023 THEN                                    14030500
              BEGIN EIND~40 & 34 [32:40:8] & 15 [24:40:8];              14030520
                             %"ILLEGAL RECORD SIZE".                    14030521
                     ERP(EIND,0);                                       14030540
              END;                                                      14030560
                   T2~T1 MOD 8; T1~T1 DIV 8;                            14035000
                   IF T2 ! 0 THEN T1~T1+1;                              14040000
                   IF LABLFLG THEN T1 ~ T1+1;                           14040050
                   IF LABLFLG OR CDIVN = 31 THEN                        14045000
                             %IF USERS LABEL OR WS OR CONST SECT        14045001
              BEGIN IF RFIX ! 0 THEN                                    14050000
              BEGIN IF T1 > 1023 THEN                            %TR-14914051000
              BEGIN EIND ~ 40 & 34[32:40:8] & 15[24:40:8];       %TR-14914052000
                    ERP(EIND,0); COMPE~ TRUE; T1 ~ 1023;         %TR-14914053000
              END;                                               %TR-14914054000
                   IMIT(LITC,T1,RFIX);%FIX UP DESCRIPTOR LENGTH IN CODE 14055000
              END;                                               %TR-14914056000
                   RFIX~0;     %   FOR ARRAY DECLARATION                14060000
                   IF LABLFLG THEN                                      14065000
              BEGIN T8 ~ QX ~ QX + 1;  IF QX < 16 THEN QX ~ 16;         14070000
                             %SET UP MINIMUM OF 16 WDS FOR LABEL        14070001
              END;                                                      14075000
                   IF LABLFLG THEN                                      14080000
              BEGIN  JCV (CFDE,J,K); IF DICT[J,K+1].[2:15] = 0 THEN     14085000
                             %IF USERS LABEL ARRAY NOT PREVIOUSLY       14085001
              BEGIN X~OILNK(CFDE);  JCV(X,T2,T3);                       14090000
                             %  DECLARED THEN DECLARE HERE              14090001
                   DICT[J, K+2].[23:10] ~ T8;                           14090005
                   LABLFLG ~ FALSE;                                     14090010
                   T6~INFO[T2,T3].[14:10]+2;                            14090015
                   OPNAR(1,T6,QX);                             %CJC 073 14090020
                   IMIL(LITC, 0); IMIL(DESC, T6); IMIL(OPR, DEL);       14090025
                   IMIL(LITC, T6); IMIL(OPR, LOD);                      14095000
                   IMIL(LITC, IF T8 < 10 THEN T8 + 1 ELSE T8);          14095001
                   IMIL(DIA, 38); IMIL(DIB, 8); IMIL(TRB, 10);          14095002
                   IMIL(LITC, T6);  IMIL(OPR, STD);  IMIL(LITC, 0);     14095004
                   IMIL(LITC, T8);  IMIL(TRB, 10);                      14095006
                   IMIL(LITC, T6 - 1);  IMIL(OPR, STD);                 14095008
                   PX ~ INFO[T2,T3].[4:10];%GET I/O DESCRIPTOR LOCATION 14095010
                   LOCUR ~ CFDE;                                        14095020
                    IMIL(OPR,MKS); IMIL(LITC,8); IMIL(DESC,T6);         14105000
                             %CLEAR UNUSED PORTION OF LABEL TO          14105001
                   IMIL(LITC,0);                          COMMENT 10-8; 14107000
                   IMIL(LITC, T8-9); IMIL(OPDC, OCLRWDSB);%  BLANKS     14110000
              END ELSE                                                  14120000
              BEGIN  JCV(CFDE,J,K);%IF LEBEL ARRAYS PREVIOUSLY SET UP   14125000
                   T6~DICT[J,K+1].[2:15];                               14125050
                             %  THEN FIX UP LENGTH DECLARATIONS         14125051
                   IMIT(LITC,QX,T6);     T6~T6+16;                      14130000
                   DICT[J,K+2].[23:10] ~ T8;                            14135000
                   X~OILNK(CFDE);  JCV(X,J,K);                          14135010
                   PX~INFO[J,K].[4:10];                                 14135020
                   T6 ~ INFO[J,K].[14:10] + 2;                          14135022
                   IMIL(LITC, 0); IMIL(DESC, T6); IMIL(OPR, DEL);       14135025
                   IMIL(LITC, T6); IMIL(OPR, LOD);                      14135030
                   IMIL(LITC, IF T8 < 10 THEN T8 + 1 ELSE T8);          14135035
                   IMIL(DIA, 38); IMIL(DIB, 8); IMIL(TRB, 10);          14135040
                   IMIL(LITC, T6);  IMIL(OPR, STD);  IMIL(LITC, 0);     14135050
                   IMIL(LITC, T8);  IMIL(TRB, 10);                      14135060
                   IMIL(LITC, T6 - 1);  IMIL(OPR, STD);                 14135070
                    IMIL(OPR,MKS); IMIL(LITC,8);                        14135110
                             %CLEAR LABEL AREA TO BLANKS                14135111
                   IMIL(DESC,PX-1); IMIL(LITC, (T8-9) DIV 63);          14135120
                   IMIL(LITC, T8 ~ (T8 - 9) MOD 63);                    14135125
                   IMIL(OPDC,OCLRWDSB);                                 14135130
              END;    LABLFLG~FALSE;  QX~0; RX~0;                       14140000
              END ELSE                                                  14145000
              BEGIN                                                     14150000
                   LABLFLG~FALSE                                        14175000
              END                                                       14180000
              END ELSE                                                  14185000
              BEGIN IF CDIVN = 3 THEN%IF FILE SECTION                   14190000
              BEGIN IF RX!0 THEN                          COMMENT 1-29; 14195000
              BEGIN                                       COMMENT 1-29; 14195100
                   QX~QX+1;                               COMMENT 1-29; 14195400
              END; JCV(OILNK(CFDE),J,K);                  COMMENT 1-29; 14195500
                   IF INFO [J,K+1].[16:10]  < QX THEN                   14200000
                             %SELECT LARGER OF RECORD SIZES             14200001
                   INFO [J,K+1].[16:10]~QX;                             14205000
                   PX~INFO [J,K].[4:10]; QX~0; RX~0;                    14210000
                             %GET I/O DESCRIPTOR FOR RECORD DESCR       14210001
                   IF (DOF+DSF) ! 0 THEN%IF SIZE OR OCCURS DEPENDING    14215000
              BEGIN  JCV (OILNK (RECOC),J,K);                           14220000
                   T9~0;  IF INFO[J,K+3].[3:15] ! 0 AND                 14225000
                             %IF LINK NOT SET UP FOR VALIABLE           14225001
                   INFO[J,K+3].[33:15] ! 0 THEN                         14225010
                   T9~1 ELSE                                            14230000
              BEGIN                                                     14235000
                   IF DOF ! 0 THEN                                      14240000
              BEGIN                                                     14245000
                   INFO[J,K+3].[33:15]~OCOC;                            14250000
                             %SET SIZE DEPENDING VARIABLE LINK          14250001
              END ELSE INFO[J,K+3].[3:15]~OCOC;                         14255000
                             % SET OCCURS DEPENDING VARIABLE LINK       14255001
                   IF CFDE ! 0 THEN                                     14260000
              BEGIN                                                     14265000
                   T1 ~ OILNK (CFDE) ;                                  14270000
                   JCV(T1, J, K);    ;                                  14275000
                   INFO[J,K+2].[1:1]~DSF;                               14275010
                             %SET DEPENDING FLAG AND LINK IN FD         14275011
                   INFO [J,K+2].[18:15]~OCOC                            14280000
              END;                                                      14285000
              END                                                       14290000
              END;                                                      14295000
              END                                                       14300000
              END                                                       14305000
              END;                                                      14310000
                    IF LEVEL = 1 THEN                                   14310050
              BEGIN  QX~0;  RX~0;%RESET ON "01" LEVELS                  14310060
                   LABLFLG~FALSE;                                       14310062
                   OCCURS~0;  OCURCT~0;                                 14310065
                   IF FX ! 0 THEN%IF REDEFINES FOLLOWER LINKS REMAININ  14310070
              BEGIN  FOR X~0 STEP 1 UNTIL FX DO                         14310080
              BEGIN IF (T6~FOLL[X].[33:15]) ! 0 THEN                    14310090
                             %SET ALL SUCH FOLLOWERS TO ZERO            14310091
                   IFOL(0,T6);   FOLL[X]~0;                             14310100
              END;    FX~0;                                             14310110
              END;                                                      14310120
              END;                                                      14310130
                    IHLNK ( 0,CFDE);%SET HIERARCHY LINK OF FD TO ZERO   14310155
                   IF LEVEL ! 0 THEN%IF SYMBOL IS LEVEL #               14315000
              BEGIN  DIVN~CDIVN; GO TO TERME;                           14320000
                             %GO TO TERME FOR LOOP TO ZWEI LABEL        14320001
              END;                                                      14325000
                   LABLFLG~FALSE;                                       14325050
                   IF FX { 0 THEN FX~0;                                 14330000
                   IF FX ! 0 THEN%CLEAR REMAINING REDEFINES             14335000
              BEGIN  FOR X~FX STEP -1 UNTIL 0 DO                        14340000
                             %  FOLLOWER LINKS TO ZERO                  14340001
              BEGIN IF (T6~FOLL[X].[33:15]) ! 0 THEN IFOL(0,T6);        14345000
                   FOLL[FX]~0;     FX~FX-1;                             14350000
              END;                                                      14355000
              END;                                                      14360000
                     LASTRED ~ 0 ;%SET "LAST WAS REDEFINES" TO ZERO     14360010
                   LEVEL~0; ORIG~0; SIZE~0; REDFF~0; OCCURS~0; INSZ~0;  14365000
                             %PURGE STACK BY CALLING HIER               14365001
                    HIER;   LOCUR~0;                                    14365002
                   AVAIL~AVAIL+3;                                       14365005
                   IF (DOF+DSF) ! 0 THEN%IF "DEPENDING" USED IN RECORD  14365010
              BEGIN  JCV(OILNK(RECOC),J,K);                             14365020
                   IF INFO[J,K+3].[3:15] = 0 AND                        14365030
                    INFO[J,K+3].[33:15] = 0 THEN                        14365040
              BEGIN  IF DOF ! 0 THEN                                    14365050
              BEGIN  INFO[J,K+3].[33:15]~OCOC;                          14365060
                             %SET UP SIZE OR OCCURS LINKS               14365061
              END  ELSE                                                 14365070
                   INFO[J,K+3].[3:15]~OCOC;                             14365080
                   IF CFDE ! 0 THEN                                     14365090
              BEGIN  T1~OILNK(CFDE);                                    14365100
                   JCV(T1,J,K); INFO[J,K+2].[18:15]~OCOC;               14365120
                             %SET DEPENDING LINKS IN FD ENTRY           14365121
              END;                                                      14365130
              END;                                                      14365140
              END;                                                      14365160
                   IF CDIVN = 3 THEN%IF FILE SECTION                    14370000
              BEGIN JCV(OILNK(CFDE),J,K);                               14375000
                   IF INFO[J,K+1].[16:10] < QX THEN                     14380000
                             %SELECT LARGEST RECORD SIZE                14380001
                   INFO[J,K+1].[16:10]~QX;                              14385000
              END;                                                      14390000
                   IF DRIX = 0 THEN GO TO TERME;                        14395000
                             %IF NO FORWARD REFERENCES                  14395001
                   FOR X ~ 1 STEP 1 UNTIL DRIX DO                       14400000
                             %CHECK FORWARD REFERENCE TABLE TO          14400001
              BEGIN  IF DR[X].[33:15] ! 0 THEN                          14405000
                             %  SEE IF ALL CHECKED OFF (ZERO)           14405001
              BEGIN                                                     14410000
                    T1~OFOL(DR[X].[33:15]); JCV(T1,J,K);%SYMBOL ADDRESS 14415000
                    IF T1 ! 0 THEN                                      14415020
              BEGIN                                                     14415040
                    SYOUT(MSG[124],DICT[J,K],DICT[J,K].[1:5]);          14420000
                    EIND~13 & (IF DR[X].[30:3] = 1 THEN 34 ELSE 22)     14425000
                             %"UNIDENTIFIED RECORD XXXX"(IF =1) OR      14425001
                    [32:40:8] & 124 [24:40:8];                          14430000
                             %   "UNIDENTIFIED OPERAND XXXX".           14430001
                   ERP(EIND,0); COMPE~TRUE;               COMMENT 7-14; 14430010
              END                                                       14435000
              END;                                                      14435050
              END;                                                      14440000
 TERME:       END;                                                      14445000
                   IF LEVEL > 0 THEN GO TO ZWEI;                        14450000
              END;                                                      14455000
COMMENT **************************   WSSECT  *************************; 14457000
COMMENT WORKING STORAGE SECTION PROCESSING;                             14460000
PROCEDURE WSSECT;                                                       14465000
              BEGIN LABEL EDE;EDE:                        COMMENT 8-27; 14470000
                   IF CDIVN = 32 THEN REDFF~ 2 ELSE REDFF~ 0;           14475000
                             %IF CALLED FROM CONSTANT SECTION           14475001
                    DRIX~0;                                             14475010
                   CFDE~0;   L88~0;                                     14475020
                   CDIVN~31;RMOD~1;LEVEL~0;%                        7-6714480000
                             %INITALIZE VARIABLES                       14480001
                   RNAM~FALSE; REX~0;%                                  14485000
                   LOCUR~0; BACKLINK~0; HDWR~0;                         14490000
                   AVAIL~AVAIL+8; IF AVAIL.[39:9] > 490 THEN            14495000
              BEGIN  AVAIL~AVAIL+500; AVAIL.[39:9]~0;                   14500000
              END;                                                      14505000
                   SCTRL; IF KEY ! 251 THEN%IF NOT "SECTION"            14510000
                    ERP (77,0)       ELSE SCTRL;                        14515000
                   IF SCLAS ! 7 THEN%IF NOT PERIOD                      14520000
              BEGIN ERP (79,0)      ;                                   14525000
                   WHILE (SCLAS ! 7) DO SCTRL                           14530000
              END;  DIVN~ 31;                                           14535000
                   SCTRL;                                               14540000
                   LEVEL ~ ICV1 (ISYMB [0],4,0,LGTH);%GET FIRST LEVEL # 14545000
                   FOR X~0 STEP 1 UNTIL 3 DO                            14550000
              BEGIN   FOR T1~0 STEP 1 UNTIL 9 DO%CLEAR HIERARCHY STACK  14550010
                     STK[X,T1]~0;                                       14550020
              END;                                                      14550030
                   STK[0,0] ~ STK[1,0] ~ -1; NX ~ 1;           %TR 637  14555000
                             %SET UP -1 TO DELIMIT STACK PROCESS        14555001
                   QX ~ RX ~ HDWR ~ FX ~ 0;%                            14570000
                   PX~PRTCTR;  UPIT;                                    14575000
                   OPNAR(0,PX,10);                             %CJC 073 14580000
                   RFIX ~ SEG1X - 10;                          %CJC 073 14581000
                   ORDR~0; ORDR1~0;  ORDR3~0; ORDR4~0;                  14585000
                    ORDR6~0;  ORDR7~0;                                  14595000
                     ORDR8~0;                                           14600000
                   ITPRO;      %CALL DATA-NAME PROCESSOR                14605000
                   L88~0;                                               14605050
                   IF RX ! 0 THEN QX~QX+1;                              14610000
              END;                                                      14615000
                   FOR FX ~ 0 STEP 1 UNTIL 15 DO               %CJC 074 14617000
                   FOLL[FX] ~ 0;                               %CJC 074 14618000
                   L88 ~ BACKLINK ~ LASTLL ~ LOCUR ~ RECSIZ ~  %CJC 074 14619000
                   FX ~ RLGTH ~ REX ~ ORDR ~ ORDR1 ~ ORDR2 ~   %CJC 074 14620000
                   ORDR3 ~ ORDR4 ~ ORDR5 ~ ORDR6 ~ ORDR7 ~     %CJC 074 14621000
                   ORDR8 ~ LEVEL ~ REDFF ~ DRIX ~ CFDE ~       %CJC 074 14622000
                   TYPE ~ OCURCT ~ 0;                          %CJC 074 14623000
                   SPLAT ~ CNSTFLG ~ ACC ~ RNAM ~              %CJC 074 14624000
                   LABLFLG ~ FALSE;                            %CJC 074 14625000
                   DIVN ~ CDIVN ~ 3;                           %CJC 074 14626000
                   NX ~ 1;                                     %CJC 074 14627000
                   SCTRL;                                      %CJC 075 14628000
                   IF KEY ! 280 THEN ERP(77,0) ELSE SCTRL;     %CJC 075 14716000
                   IF SCLAS ! 7 THEN ERP(77,0) ELSE SCTRL;     %CJC 075 14717000
                   IF KEY = 302 THEN SCTRL;  % "PREPARED"      %CJC 075 14718000
                   IF KEY = 330 THEN SCTRL;  % "FOR"           %CJC 075 14719000
                   IF KEY = 252 THEN SCTRL;  % "B-5500"        %CJC 075 14720000
                   IF SCLAS = 7 THEN SCTRL;                    %CJC 075 14721000
                   IF KEY = 332 THEN  % "FILE"                 %CJC 075 14840000
              BEGIN                                                     14845000
       FILESECT:                                                        14850000
              BEGIN                                                     14855000
              INTEGER CHPBLK,CNSZ;                                      14860010
BOOLEAN   NOTSOFAST;                                                    14861000
LABEL      FS10,FS3,FSX,FDS1,LA91,LA2,LAE,                     %CJC 033 14865000
           LA1,MFIDLBL,LAB1,LAB2,LAB3,LAR,FDREC;               %CJC 033 14866000
                   CDIVN~3; %                                       7-6714880000
                   SDF~ FALSE; SCTRL;  IF KEY ! 251 THEN%IF NOT SECTION 14885000
              BEGIN EIND~9 & 31 [32:40:8]; ERP (EIND,0)      ;          14890000
                             %" MISSING SECTION".                       14890001
                   COMPE ~ TRUE;                       COMMENT 3-23-64; 14890050
                   IF SCLAS = 7 THEN GO TO FS10                         14895000
              END; SCTRL; IF SCLAS ! 7 THEN%IF NOT PERIOD               14900000
              BEGIN ERP (79,0)      ; LEVEL~ 0; IF(KEY = 303) OR        14905000
                             %"MISSING PERIOD".                         14905001
                   KEY=402 OR KEY=224 THEN GO TO FS3;      COMMENT DF;  14910000
              END;                                                      14915000
       FS10:       LEVEL~ 0; SCTRL;                                     14920000
              COMMENT FD OR SD OR MD;                      COMMENT DF;  14925000
         FS3:      FSZF~FALSE;RSZF~FALSE;DATF~FALSE; %                  14930000
                   MD.[47:1]~NOT(ACCF~ACTF~FILIM~KEY!224);    COMMENT DF14931000
                   LOCUR ~ 0;                                           14935000
                    LABLFLG~FALSE;                                      14935010
                   LBL~0;  RMOD~0;                                      14940000
                   CHPBLK~0;                                            14940010
                   RMF~FALSE;                                           14940030
                   IF KEY=303 OR KEY=224 THEN              COMMENT DF;  14945000
                             %IF "FD" ENTRY                             14945001
              BEGIN BSZF~FALSE; LABF~FALSE; SEQF~FALSE; RMF~FALSE;      14950000
                    IDF~ NOTSOFAST~ FALSE; SFF~FALSE; SDF ~FALSE;       14955000
                   GO TO FDS1                                           14960000
              END;  IF KEY = 402 THEN%IF "SD" ENTRY                     14965000
              BEGIN BSZF~TRUE ; LABF~TRUE ; SEQF~TRUE ; RMF~TRUE ;      14970000
                   IDF~TRUE ; SFF~TRUE ; SDF~TRUE ;                     14975000
                   GO TO FDS1                                           14980000
              END;  IF LEVEL = (-1) THEN GO TO FSX;                     14985000
                             %IF END OF FILE SECTION                    14985001
                   LEVEL ~ 0; OCUR ~ AVAIL + 6; ORIG~ OCUR; HIER;       14990000
                             %PROCESS LASXT FILE SECT ENTRY             14990001
                   GO TO FSX;                                           14995000
       FDS1:       USAGE~ REDFF~ TYPE~ 0; DIVN~9; KEY~0;                15000000
                   SCTRL;                                               15005000
                   IF KEY=303 OR KEY=402 OR KEY=224 THEN   COMMENT DF;  15010000
                   GO TO FS3;                              COMMENT DF;  15011000
                   ORIG~ OCUR; TYPE~6; CFDE~ OCUR;%SET TYPE TO "FILE"   15015000
                   IF NOT FOUND THEN%IF NOT FOUND THEN                  15020000
              BEGIN COMPE~TRUE; EIND~7 & 19 [32:40:8]                   15025000
                             %"FILE NOT SELECTED".                      15025001
                   & 88 [24:40:8]; ERP (EIND,0)      ; DIVN~3;          15030000
                             % SET UP AS TEMP TO PERMIT FURTHER         15030001
                   DIVN~9;  COMPE~TRUE;  GO TO FSX;% SYNTAX CHECKING    15035000
              END ELSE                                                  15065010
              BEGIN IF OTYP(OCUR) ! 6 THEN%IF NOT FILE NAME THEN        15065020
              BEGIN EIND~40 & 110 [32:40:8] & 7 [24:40:8]               15065030
                             %"ILLEGAL DUPL. FILE NAME".                15065031
                    & 83 [16:40:8];  ERP(EIND,0);                       15065040
                     COMPE~TRUE;   GO TO FSX;                           15065050
              END;                                                      15065070
                   JCV(OCUR,J,K);                          COMMENT DF;  15066000
                   IF DICT[J,K].[8:1] = 1 AND NOT MD THEN      %CJC 078 15066100
              BEGIN MD ~ TRUE;  %FD ASSIGNED TO DISK           %CJC 078 15066200
                   ACCF ~ ACTF ~ FILIM ~ FALSE;                %CJC 078 15066300
              END;                                             %CJC 078 15066400
                  IF REAL(MD)!DICT[J,K].[8:1] %CHECK MD VS ASSIGN TR-38615066500
                  OR REAL(SDF)!DICT[J,K].[6:1] THEN% FD VS ASSIGN TR-38615066600
              BEGIN SYOUT(MSG[124],ISYMB,LGTH);COMPE~TRUE;       %TR-38615067000
                  ERP(40&11[32:40:8]&(KX~141+REAL(MD)+2|(REAL(SDF)))    15068000
                  [24:40:8]&124[16:40:8],0);                     %TR-38615069000
              END;                                               %TR-38615069200
              END; KX~ OILNK (CFDE); JCV (KX+2,J,K); CFIB ~  INFO       15070000
                    [J,K].[8:10];                               %TR-140 15075000
                   A~CFIB+18;                               COMMENT WB; 15100000
                   IF FIB[A.[38:3],A.[41:7]].[3:15]!0 THEN  COMMENT WB; 15100100
              BEGIN EIND~ 110 & 7 [32:40:8] & 83 [24:40:8]; COMMENT WB; 15100300
                    ERP(EIND,0); COMPE ~ TRUE;              COMMENT WB; 15100500
              END;                                          COMMENT WB; 15100700
                   A~CFIB +4 ; FIB[A.[38:3],A.[41:7]].[7:1]~0;          15100800
                   JCV(CFDE,J,K);  DICT[J,K].[17:1]~1;                  15100900
                    LEVEL~ 0; HIER; SCTRL; IF KEY = 451 THEN            15105000
              BEGIN DIVN~ 3; SCTRL; DIVN~ 9; ITYP (4,OCUR);             15110000
                   IHLNK (CFDE,OCUR);  SCTRL;                           15115000
                   IF KEY ! 456 THEN                                    15120000
              BEGIN EIND~ 9 & 6 [32:40:8] & 3 [24:40:8]; DRIX~0;        15125000
                             %"MISSING RIGHT PARENTHESIS".              15125001
                   COMPE ~ TRUE;                       COMMENT 3-23-64; 15125050
                   ERP (EIND,0)       ; DR [DRIX]~ 0; GO TO LA91        15130000
              END; SCTRL                                                15135000
              END; DRIX ~ 0; DR [DRIX]~ 0; DIVN~ 9; GO TO LA91;         15140000
                             %SET DATA-RECORDS ARRAY ZERO               15140001
       LA1:        SCTRL;                                               15145000
       LA91:       IF SCLAS = 7 THEN GO TO LA2;                         15150000
                             %IF A PERIOD GO TO 15900000.               15150001
                   IF KEY=253 THEN COMMENT"COPY";         COMMENT 10-9; 15155000
                             %IF "COPY " THEN                           15155001
              BEGIN                                       COMMENT 10-9; 15160000
                   IF NCLAS!1 THEN GO TO LAE;             COMMENT 10-9; 15165000
              BEGIN IF NOT FIND THEN GO TO LA1;%                        15165020
                   DELTALC~0;COMMENT LIBRARY COPY INCREM. COMMENT 10-9; 15165040
                   SCTRL;COMMENT SCAN PAST THE FD;        COMMENT 10-9; 15165060
                             %                                          15165061
                   SCTRL;COMMENT SCAN PAST THE NAME;      COMMENT 10-9; 15165080
                             %                                          15165081
                   GO TO LA91; %                                        15165100
              END;             %                                        15165120
              END;                                                      15170000
            COMMENT RECORDING MODE ;                                    15175000
                   IF KEY = 304 THEN%IF RECORDING                       15180000
              BEGIN IF RMF THEN%IF ALREADY SET - ERROR                  15185000
       LAE:   BEGIN   SYOUT(MSG[124],ISYMB,LGTH);                       15190000
                     EIND~77 & 124 [32:40:8];   ERP(EIND,0);            15190010
                             %"SYNTAX ERROR XXXX".                      15190011
                   COMPE ~ TRUE;                       COMMENT 3-23-64; 15190015
                    GO TO LA1;                                          15190020
              END;  RMF~ TRUE; SCTRL;                                   15195000
                   IF KEY = 331 THEN SCTRL;%IF MODE                     15200000
                   IF KEY = 291 THEN                                    15205000
              BEGIN RMOD~1; GO TO LA1%IF STANDARD                       15210000
              END  ELSE                                                 15215000
              BEGIN IF KEY ! 716 THEN GO TO LAE;%IF NOT NON-STANDARD    15220000
                   IF MD THEN GO TO LAE;                   COMMENT DF;  15221000
                   COMMENT RECORDING MODE MUST BE STANDARD;COMMENT DF;  15222000
                   A~CFIB +13; FIB[A.[38:3],A.[41:7]].[24:1]~0;         15225000
                   GO TO LA1;                                           15225001
              END                                                       15230000
              END;                                                      15235000
           COMMENT  FILE CONTAINS;                                      15240000
                   IF KEY = 332 THEN%FILE                               15245000
              BEGIN IF FSZF THEN GO TO LAE; FSZF~ TRUE;                 15250000
                             %IF ALREADY DECLARED                       15250001
                   SCTRL;                                      %CJC 045 15251000
                   IF KEY = 337 THEN SCTRL;  % "CONTAINS"      %CJC 045 15252000
                   IF KEY = 333 THEN SCTRL;  % "ABOUT"         %CJC 045 15253000
                   IF SCLAS ! 6 OR LGTH > 11 THEN GO TO LAE;   %CJC 045 15254000
                   IF MD THEN                                  %CJC 045 15254100
              BEGIN LOC1 ~ 1;                                  %CJC 045 15254200
                   LOC2~ICV1(ISYMB[0],4,0,LGTH);           COMMENT DF;  15255070
                   SCTRL;                                  COMMENT DF;  15255080
                   IF KEY=822 COMMENT *;OR KEY=471 COMMENT |; THEN      15255090
              BEGIN IF(LOC1~LOC2)>20 THEN GO TO LAE;       COMMENT DF;  15255100
                   SCTRL;                                  COMMENT DF;  15255110
                   IF SCLAS!6 OR LGTH>11 THEN GO TO LAE;   COMMENT DF;  15255120
                   LOC2~ICV1(ISYMB[0],4,0,LGTH);           COMMENT DF;  15255130
                   SCTRL;                                  COMMENT DF;  15255140
              END; LOC2.[15:10]~LOC1;                       COMMENT DF; 15255150
                   A ~ CFIB + 8;                               %CJC 045 15256000
                   FIB[A.[38:3],A.[41:7]] ~ LOC2;              %CJC 045 15257000
              END  ELSE SCTRL;                                 %CJC 045 15258000
                   IF KEY = 336 THEN %"RECORDS"                %CJC 045 15259000
                   GO TO LA1 ELSE GO TO LA91;                  %CJC 045 15260000
              END;                                                      15275000
           COMMENT BLOCK CONTAINS ;                                     15280000
                   IF KEY = 637 THEN%BLOCK                              15285000
              BEGIN IF BSZF THEN GO TO LAE; BSZF~ TRUE; SCTRL;          15290000
                             %IF ALREADY DECLARED                       15290001
                   IF KEY = 337 THEN SCTRL;%IF CONTAINS                 15295000
                   IF SCLAS ! 6 THEN GO TO LAE;%IF NOT INTEGER          15300000
                   T8~ICV1 (ISYMB [0],4,0,LGTH); SCTRL;                 15305000
                             %INPUT-CONVERT INTEGER                     15305001
                   IF KEY = 264 THEN%IF "TO"                            15310000
                             %IF NOT INTEGER                            15310001
              BEGIN SCTRL;  IF SCLAS ! 6 THEN GO TO LAE;                15315000
                   T8~ICV1 (ISYMB [0],4,0,LGTH); SCTRL;%CONVERT INTEGER 15320000
              END;                                             %CJC 033 15321000
                   IF KEY = 336 THEN  % IF "RECORDS"           %CJC 033 15325000
              BEGIN SCTRL;  A ~ CFIB + 11;                     %CJC 033 15326000
                   FIB[A.[38:3],A.[41:7]] ~ T8;                %CJC 033 15327000
                   GO TO LA91;                                 %CJC 033 15328000
              END; IF MD AND T8 >  (240 |  63) OR              %CJC 033 15329000
                   NOT MD AND T8 >  (1023 |  8) THEN           %CJC 033 15330000
              BEGIN EIND ~ 40 & 34[32:40:8] & 15[24:40:8]      %CJC 033 15331000
                        & 27[16:40:8];%ILLEGAL FILE SIZE SPEC  %CJC 033 15332000
                   ERP(EIND,0);  COMPE ~ TRUE;  T8 ~ 1023| 8;  %CJC 033 15333000
              END;                                             %CJC 033 15334000
                   CHPBLK ~ T8;                                %CJC 033 15335000
                   IF KEY = 258 THEN                           %CJC 033 15336000
                   GO TO LA1 ELSE GO TO LA91;                  %CJC 033 15337000
              END;                                                      15365000
         COMMENT RECORD CONTAINS CLAUSE  ;                              15370000
                   IF KEY = 336 THEN%IF RECORD                          15375000
              BEGIN IF RSZF THEN GO TO LAE ELSE RSZF~ TRUE;             15380000
                             %IF ALREADY DECLARED                       15380001
                   SCTRL; IF KEY = 337 THEN SCTRL;%IF CONTAINS          15385000
                   IF SCLAS ! 6 THEN GO TO LAE;%IF NOT INTEGER          15390000
                   T8~ ICV1 (ISYMB [0],4,0,LGTH); SCTRL;                15395000
                             %CONVERT INTEGER                           15395001
                   IF KEY = 264 THEN%IF "TO"                            15400000
              BEGIN SCTRL; IF SCLAS ! 6 THEN GO TO LAE;%IF NOT INTEGRE  15405000
                   T8~ICV1 (ISYMB [0],4,0,LGTH); SCTRL;%OCNVERT INTEGER 15410000
              END;                                                      15415000
                   IF KEY = 258 THEN%IF CHARACTERS                      15420000
                    SCTRL;     %SCAN                                    15425000
                    T8 ~ (T8 + 7) DIV 8;%CONVERT TO WORDS               15430000
                   JCV(KX+1,J,K);                                       15430500
                   CNSZ ~ T8; GO TO LA91;%STORE RECORD SIZE IN INFO     15435000
              END;                                                      15440000
         COMMENT  LABEL RECORDS  ;                                      15445000
                   IF KEY= 305 THEN%IF "LABEL"                          15450000
              BEGIN IF LABF THEN GO TO LAE ELSE LABF ~ TRUE;            15455000
                             %IF ALREADY DECLARED OR SD                 15455001
                   SCTRL; IF KEY!336 THEN GO TO LAE;%"RECORDS" %CJC 033 15460000
                    % "ARE" IS BY-PASSED BY SCTRL                       15465000
                   SCTRL; IF KEY = 291 THEN GO TO LA1;%IF "STANDARD"    15470000
% OMITTED AND NON-STANDARD                                              15475000
                    IF NOT MD AND(KEY=716 OR KEY=340) THEN              15475500
                    BEGIN                                               15476000
                         IF KEY=716 THEN % NON-STANDARD                 15480000
                           FIB[(A~CFIB+5).[38:3],A.[41:7]].[16:1]~1;    15483000
                                         % OMITTED                      15484000
                         FIB[(A:=CFIB+4).[38:3] ,A.[41:7]].[2:1] :=1;   15485000
                    END ELSE GO TO LAE;                                 15485001
                    GO TO LA1;                                          15490000
              END;                                                      15495000
          COMMENT  VALUE CLAUSE ;                                       15500000
                   IF KEY = 306 THEN%IF "VALUE"                         15505000
        LAB1: BEGIN DIVN~ 3; SCTRL; IF KEY = 343 THEN SCTRL;%IF "OF"    15510000
         LAB2:     IF SCLAS = 7 THEN GO TO LA2;%IF PERIOD               15515000
          COMMENT  IDENTIFICATION  ;                                    15520000
                   IF OTYP (OCUR) = 1 THEN%IF RESERVED WORD             15525000
              BEGIN IF KEY = 101 THEN%IF IDENTIFICATION OR ID           15530000
              BEGIN IF IDF THEN GO TO LAE ELSE IDF~ TRUE; SCTRL;        15535000
                             %IF NOT ALREADY DECLARED - OK              15535001
MFIDLBL:                                                                15536000
                   IF SCLAS ! 1 THEN GO TO LAE; JCV (KX,J,K);           15540000
                             %IF NOT NON-NUMERIC LITERAL                15540001
                    INFO[J,K~K+4+REAL(NSYMB[0].[24:6]="/")]~"      ";   15541000
                    CHRTRAN (ISYMB,4,INFO[J,K],1,                       15545000
                             %MOVE ID TO INFO ARRAY                     15545001
                    (IF LGTH > 7 THEN 7 ELSE LGTH));                    15545010
                    IF NSYMB[0].[24:6]="/" THEN                         15545020
              BEGIN     SCTRL;   %BY-PASS /                             15546000
                        IF NOTSOFAST THEN GO TO LAE ELSE NOTSOFAST~TRUE;15546500
                        SCTRL;   % FIND FILE ID                         15547000
                        GO TO MFIDLBL;                                  15548000
              END ELSE  GO TO LAB1;                                     15549000
              END;  IF KEY = 412 THEN%IF SAVE-FACTOR                    15550000
              BEGIN IF SFF THEN GO TO LAE ELSE SFF~ TRUE;               15555000
                             %IF NOR DECLARED                           15555001
                   SCTRL; IF SCLAS ! 6 THEN GO TO LAE;%IF NOT INTEGRR   15560000
                   A~CFIB+4; T6~4+LGTH-3;%SET SAVE-FACTOR IN FIB        15565000
                   CHRTRAN(ISYMB,T6,FIB[A.[38:3],A.[41:7]],5,3);        15570000
                             %CONVERT SAVE-FACTOR                       15570001
                   GO TO LAB1                                           15575000
              END;  DIVN~ 9; GO TO LA91                                 15580000
              END;                                                      15585000
                   IF OCUR = 0 OR SCLAS = 2 THEN                  %TR61015585002
              BEGIN EIND~40 & 46 [32:40:8] & 25 [24:40:8];              15585003
                   ERP(EIND,0);COMPE~TRUE;GO TO FDREC; COMMENT 3-23-64; 15585004
              END;                                                      15585006
              BEGIN   LABEL LLX;                                        15585010
                   ITYP (16,OCUR);  T1~ OCUR;%DATA-NAME-3 FOR HASHED    15590000
                   T9~OCUR; JCV (OCUR,J,K); DICT [J,K+2]~0;             15595000
                   DICT [J,K].[9:1]~1;%SET USERS-LABEL FLAG             15600000
                    DRIX~DRIX+1; DR[DRIX]~OCUR & 2 [30:45:3];           15600010
                             %ENTER IN FORWARD REFERENCE ARRAY-         15600011
                    IFOL (CLOC,OCUR);%SET:   FOLLOWER                   15600020
                   AVAIL~AVAIL+1; IHLNK (CFDE,OCUR);                    15605000
                             %       HIERARCHY LINK                     15605001
                    WHILE  LCOMP(343) OR LCOMP(341) DO                  15620010
              BEGIN  DIVN~9;  SCTRL;   SCTRL;                           15620020
                             %IF "OF" OR "IN" SET UP AS FORWARDS        15620021
              END;                                                      15620070
                   IF LBL = 0 THEN                                      15625000
              BEGIN  JCV(KX,J,K); T1~INFO[J,K].[14:10]+2;               15630000
                   OPNAR(1,T1,10);                             %CJC 073 15635000
                             %OPEN ARRA FOR USERS LABEL PORTION         15635001
         COMMENT SAVE LENGTH SYLLABLE LOCATION  ;                       15640000
                   JCV (CFDE+1,J,K); DICT [J,K].[1:1]~1;                15645000
                             %SET USERS-LABEL FLAG                      15645001
                   DICT[J,K].[2:15] ~ SEG1X - 10 ;         COMMENT DF;  15650000
                             %SET ARRAY-LENGTH FIX-UP                   15650001
                      RFIX~0;                                           15655010
                   LBL ~ 1;                                             15660000
              END;                                                      15665000
                   DIVN~3; SCTRL; DIVN~9;%ENTER DATA-NAME-4 INTO DICT   15670000
                   IF TYPE = 1 THEN                                     15675010
              BEGIN ERP(77,0); COMPE~TRUE;GO TO LLX;                    15675020
                             %IF RESERVED WORD THEN ERROR               15675021
              END;                                                      15675030
                   IF SCLAS ! 4 THEN                                    15680000
              BEGIN                                                     15685000
                   EIND ~ 40 & 46 [32:40:8];                            15690000
                             %IF NOT COBOL WORD THEN ERROR              15690001
                   ERP (EIND,0)      ;%"ILLEGAL VALUE".                 15695000
                   COMPE ~ TRUE;                       COMMENT 3-23-64; 15695050
                   GO TO LLX;                                           15700000
              END;                                                      15705000
                   IF CAT = 3 THEN                                      15710000
              BEGIN  ERP(77,0);      GO TO LLX;%"SYNTAX ERROR".         15710010
              END;                                                      15710020
                   ITYP(16,OCUR); T2~OCUR;                              15715000
                             %MARK FORWARD REF TYPE AND SET INFO        15715001
                   IHLNK(CFDE,OCUR);%SET HIERARCHY TO CURRENT FILE      15720000
                    DRIX~DRIX+1; DR[DRIX]~OCUR & 2 [30:45:3];           15720010
                             %ENTER INTO FORWARD REF ARRAY              15720011
                    IFOL (CLOC,OCUR);                                   15720020
                   T8~OCUR;                                             15720030
                   AVAIL~AVAIL+1;                                       15725000
                   JCV (OCUR,J,K); DICT [J,K+2]~T9;                     15730000
                             %SET LINK TO HASH VARIABLE                 15730001
                    WHILE  LCOMP(343) OR LCOMP(341) DO%IF OF OR IN      15745010
              BEGIN  DIVN~9;  SCTRL;  SCTRL;                            15745020
                   ITYP(16,OCUR);%ENTER AS FORWARD REFERENCE            15745030
              END;                                                      15745080
                    JCV(T9,J,K);  DICT[J,K+2]~T2;                       15745100
                   DIVN~3; SCTRL;          IF KEY = 370 THEN            15750000
                             %IF "HASHED"                               15750001
              BEGIN  JCV(T2,J,K);                                       15755000
                   HASH ~ TRUE;                                         15760000
                   DICT[J,K].[9:1]~1; SCTRL;                            15765000
              END;                                                      15770000
       LLX:   END;                                                      15770020
                   DIVN~9;  GO TO LAB2;                                 15770040
              END;                                                      15775000
         COMMENT  DATA RECORDS;                                         15780000
                   IF KEY = 345 THEN%IF "DATA"                          15785000
              BEGIN IF DATF THEN GO TO LAE ELSE DATF~ TRUE;             15790000
                             %IF ALREADY DECLARED THENERROR             15790001
       LAB3:       DIVN~ 3; SCTRL; IF KEY = 336 THEN SCTRL;             15795000
                             %IF "RECORDS"                              15795001
                   IF KEY = 338 THEN SCTRL;                             15800000
                   DIVN~ 9; IF SCLAS = 7 THEN GO TO LA2;                15805000
                             %IF PERIOD THEN FINISHED                   15805001
                   IF TYPE = 1 THEN GO TO LA91;                         15810000
                             %IF RESERVED WORD THEN ERROR               15810001
                   IF OCUR < T6A THEN GO TO LAB3 ;                      15815000
                             %IF RES. WD. AREA (T6A SET IN ENVIR) .     15815001
         IF SCLAS ! 4 THEN             % NOT A DATA NAME         TR-120215815020
    BEGIN     SYOUT(MSG[124],ISYMB,LGTH);                       %TR-120215815030
              ERP(19&34[32:40:8]&83[24:40:8]&124[16:40:8],0);   %TR-120215815040
              COMPE ~ TRUE;  % NOT RECORD NAME XXXX              TR-120215815050
              GO TO LAB3;                                       %TR-120215815060
    END;                                                        %TR-120215815070
                   ITYP (15,OCUR); IHLNK (CFDE,OCUR);                   15820000
                             %SET FORWARD RECORD TYPE                   15820001
                   IFOL (CLOC,OCUR);                                    15825000
                    DRIX~DRIX+1; DR[DRIX]~OCUR & 1 [30:45:3];           15830000
                             %ENTER INTO FOREARD REFERENCE ARRAY        15830001
                   GO TO LAB3                                           15835000
              END;                                                      15840000
         COMMENT ACCESS MODE;                              COMMENT DF;  15840010
                   IF KEY=227 THEN COMMENT"ACCESS";        COMMENT DF;  15840020
              BEGIN IF ACCF THEN GO TO LAE;                COMMENT DF;  15840030
                   ACCF~TRUE;                              COMMENT DF;  15840040
                   SCTRL;                                  COMMENT DF;  15840050
                   IF KEY=331 THEN COMMENT"MODE";SCTRL;    COMMENT DF;  15840060
                   IF KEY=226 THEN COMMENT"RANDOM";        COMMENT DF;  15840070
              BEGIN JCV(CFDE,J,K);                         COMMENT DF;  15840080
                   DICT[J,K].[7:1]~1;                      COMMENT DF;  15840090
              END  ELSE IF KEY!225 THEN COMMENT"SEQUENL."; COMMENT DF;  15840100
                   GO TO LAE;                              COMMENT DF;  15840110
                   GO TO LA1;                              COMMENT DF;  15840120
              END;                                         COMMENT DF;  15840130
         COMMENT ACTUAL KEY;                               COMMENT DF;  15840140
                   IF KEY=222 THEN COMMENT"ACTUAL";        COMMENT DF;  15840150
              BEGIN IF ACTF THEN GO TO LAE;                COMMENT DF;  15840160
                   ACTF~TRUE;                              COMMENT DF;  15840170
                   SCTRL;                                  COMMENT DF;  15840180
                   IF KEY=706 THEN COMMENT "KEY";          COMMENT DF;  15840190
                   SCTRL;IF NOT FOUND THEN                 COMMENT DF;  15840200
              BEGIN                                        COMMENT DF;  15840205
                   T1~DIVN;DIVN~3;                         COMMENT DF;  15840210
                   SCHAD;                                  COMMENT DF;  15840220
                   DIVN~T1;                                COMMENT DF;  15840230
              END ELSE IF OTYP(OCUR)!15 THEN GO TO LAE;    COMMENT DF;  15840240
                   ITYP(15,OCUR);IFOL(CLOC,OCUR);          COMMENT DF;  15840250
                   JCV(CFDE,J,K);                          COMMENT DF;  15840260
                   DICT[J,K+2].[3:15]~OCUR;                COMMENT DF;  15840270
                   GO TO LA1;                              COMMENT DF;  15840280
              END;                                         COMMENT DF;  15840290
         COMMENT SYMBOLIC KEY;                             COMMENT DF;  15840300
                   IF KEY=223 THEN                         COMMENT DF;  15840310
              BEGIN SCTRL;                                 COMMENT DF;  15840320
                   IF KEY=706 THEN COMMENT"KEY";SCTRL;     COMMENT DF;  15840330
                   DO SCTRL UNTIL KEY!0;                   COMMENT DF;  15840340
                   GO TO LA91;                             COMMENT DF;  15840350
              END;                                         COMMENT DF;  15840360
         COMMENT FILE-LIMITS;                              COMMENT DF;  15840370
                   IF KEY=229 THEN COMMENT"FILE-LIMITS";   COMMENT DF;  15840380
              BEGIN IF FILIM THEN GO TO LAE;               COMMENT DF;  15840390
                   FILIM~TRUE;FL4~FL5~FALSE;               COMMENT DF;  15840400
                   SCTRL;                                  COMMENT DF;  15840410
                   IF SCLAS=4 THEN COMMENT DATANAME;       COMMENT DF;  15840420
              BEGIN FL4~TRUE;IF NOT FOUND THEN             COMMENT DF;  15840425
              BEGIN T1~DIVN;DIVN~3;                        COMMENT DF;  15840430
                   SCHAD;                                  COMMENT DF;  15840440
                   DIVN~T1;                                COMMENT DF;  15840450
              END ELSE IF OTYP(OCUR)!15 THEN GO TO LAE;    COMMENT DF;  15840460
                   LOC1~OCUR;ITYP(15,OCUR);IFOL(CLOC,OCUR);COMMENT DF;  15840470
              END  ELSE                                    COMMENT DF;  15840480
              BEGIN IF SCLAS!6 OR LGTH>11 THEN             COMMENT DF;  15840490
                   COMMENT NOT A SINGLE PREC.INTEGER;      COMMENT DF;  15840500
                   GO TO LAE;                              COMMENT DF;  15840510
                   LOC1~ICV1(ISYMB[0],4,0,LGTH);           COMMENT DF;  15840530
              END; SCTRL ;                                 COMMENT DF;  15840540
                   IF KEY!261 THEN COMMENT"THRU";          COMMENT DF;  15840550
                   GO TO LAE;                              COMMENT DF;  15840560
                   SCTRL;COMMENT SCAN PAST THE"THRU";      COMMENT DF;  15840570
                   IF SCLAS=4 THEN COMMENT DATANAME;       COMMENT DF;  15840580
              BEGIN FL5~TRUE;IF NOT FOUND THEN             COMMENT DF;  15840585
              BEGIN T1~DIVN;DIVN~3;                        COMMENT DF;  15840590
                   SCHAD;                                  COMMENT DF;  15840600
                   DIVN~T1;                                COMMENT DF;  15840610
              END ELSE IF OTYP(OCUR)!15 THEN GO TO LAE;    COMMENT DF;  15840620
                   LOC2~OCUR;ITYP(15,OCUR);IFOL(CLOC,OCUR);COMMENT DF;  15840630
              END  ELSE                                    COMMENT DF;  15840640
              BEGIN IF SCLAS!6 OR LGTH>11 THEN             COMMENT DF;  15840650
                   COMMENT NOT A SINGLE PREC.INTEGER;      COMMENT DF;  15840660
                   GO TO LAE;                              COMMENT DF;  15840670
                   LOC2~ICV1(ISYMB[0],4,0,LGTH);           COMMENT DF;  15840690
              END;                                         COMMENT DF;  15840700
                   A~CFIB+1;                               COMMENT DF;  15840710
                   FIB[A.[38:3],A.[41:7]]~LOC1;            COMMENT DF;  15840720
                   A~CFIB+3;                               COMMENT DF;  15840730
                   FIB[A.[38:3],A.[41:7]]~LOC2;            COMMENT DF;  15840740
                   JCV(CFDE,J,K);                          COMMENT DF;  15840750
                   DICT[J,K].[9:1]~REAL(FL4);              COMMENT DF;  15840760
                   DICT[J,K].[10:1]~REAL(FL5);             COMMENT DF;  15840770
                   GO TO LA1;                              COMMENT DF;  15840780
              END;                                         COMMENT DF;  15840790
         COMMENT  SEQUENCED CLAUSE ;                                    15845000
                   IF KEY = 393 THEN%IF "SEQUENCED"                     15850000
              BEGIN IF SEQF THEN GO TO LAE ELSE SEQF~ TRUE;             15855000
                             %IF ALREADY GIVEN THEN ERROR               15855001
                   SCTRL; IF KEY = 271 THEN SCTRL;%IF "ON"              15860000
                   WHILE (OTYP (OCUR) ! 1 ) DO%SKIP OVER DATA-NAMES     15865000
              BEGIN IF SCLAS = 7 THEN GO TO LA2; SCTRL                  15870000
              END; GO TO LA91                                           15875000
              END; EIND~13&83[32:40:8]&124[24:40:8];                    15880000
                             %"UNIDENTIFIED NAME XXXX".                 15880001
                   SYOUT(MSG[124],ISYMB,LGTH);                          15885000
                   ERP(EIND,0); COMPE ~ TRUE; GO TO LA1;                15890000
       FDREC:      WHILE SCLAS ! 7 DO SCTRL;                            15895000
     LA2:          IF NOT BSZF THEN%IF BLOCK SIZE NOT SPECIFIED         15900000
              BEGIN A~  CFIB +11  ; FIB[A.[38:3],A.[41:7]]  ~ 1;        15900010
                             % THEN MARK ONE RECORD-PER-BLOCK           15900011
              END;                                                      15900020
                   BACKLINK~CFDE;                                       15905000
                   KX~OILNK(CFDE);                                      15905010
                   JCV (KX,J,K);                                        15905020
                   HDWR~INFO[J,K+1].[44:4];                             15910000
                             %GET PERIPHERAL ASSIGNMENT FOR FILE        15910001
                   IF HDWR = 15 THEN HDWR ~ 14;                    %TSS 15911000
                   TECH~INFO[J,K].[1:3];                   COMMENT DF;  15915000
                             %GET TECHNIQUE DECLARATION                 15915001
                   IF INFO[J,K+2].[33:15] ! 0 THEN%IF "RENAMING"        15915010
              BEGIN RNAM~TRUE; RNT[0,0]~INFO[J,K+2].[33:15];            15915020
                             %SET RENAMING FILE INTO ARRAY              15915021
                   REX~1;                                               15915030
              END;                                                      15915050
                    IF SDF THEN                                         15915100
              BEGIN A~CFIB+4;                             COMMENT DSRT; 15915103
                   INFO[J,K+4] ~                                        15915104
                  IF FIB[A.[38:3],A.[41:7]].[29:1]=0 THEN COMMENT DSRT; 15915105
                   "TSORT0T" ELSE "DSORT0D"                             15915110
              END;                                        COMMENT DSRT; 15915150
                   IF HDWR>1 AND NOT SDF THEN             COMMENT DSRT; 15920000
                             %IF OTHER THAN TAPE OR SORT TAPES          15920001
              FIB[(A~CFIB+13).[38:3],A.[41:7]].[24:1]~RMOD~        %DATA15920020
                             %SET RECORDING MODE TO NON-STANDARD        15920021
                   REAL(HDWR=14 AND RMF AND NOT BOOLEAN(RMOD))ELSE %DATA15920040
              BEGIN   IF NOT RMF THEN%IF RECORDING MODE NOT SPECIFIED   15920050
              BEGIN RMOD~1; A~CFIB+13; FIB[A.[38:3],A.[41:7]].[24:1]~1; 15920060
                             %SET TO STANDARD FOR TAPES                 15920061
              END;                                                      15920070
              END;                                                      15920080
                   IF SDF THEN  RMOD ~ 1;                               15920500
                    SCTRL;                                              15930000
                   IF MD THEN                              COMMENT DF;  15930010
              BEGIN IF NOT FSZF THEN                       COMMENT DF;  15930020
              BEGIN ERP(9&7[32:40:8]&15[24:40:8],0);       COMMENT DF;  15930030
                   COMPE~TRUE;COMMENT"MISSING FILE SIZE";  COMMENT DF;  15930040
              END; IF NOT ACCF THEN                        COMMENT DF;  15930050
              BEGIN ERP(9,"ACCESS");                       COMMENT DF;  15930060
                   COMPE~TRUE;COMMENT"ACCESS MISSING";     COMMENT DF;  15930070
              END; JCV(CFDE,J,K);                          COMMENT DF;  15930080
                   IF BOOLEAN(DICT[J,K].[7:1])             COMMENT DF;  15930090
                   COMMENT"RANDOM";AND NOT ACTF THEN       COMMENT DF;  15930100
              BEGIN ERP(9,"ACT.KEY");                      COMMENT DF;  15930110
                   COMPE~TRUE;COMMENT"ACT.KEY MISSING";    COMMENT DF;  15930120
              END; END;                                        %CJC 042 15930130
                   IF NOT IDF AND(MD OR NOT ZOBOL) THEN         % PG    15930140
              BEGIN IF MD THEN BEGIN COMPE ~ TRUE; END;        %CJC 042 15930200
                   ERP(9 & 92[32:40:8] & 27[24:40:8],0);       %CJC 042 15930300
              END; % "MISSING IDENT. SPECIFICATION" (VA OF ID) %CJC 042 15930400
       LAR:        LEVEL~ICV1 (ISYMB [0],4,0,LGTH);                     15935000
                             %GET LEVEL FROM NEXT SYMBOL                15935001
                   IF LEVEL ! 1 THEN%IF NOT "01"                        15940000
              BEGIN EIND~9 & 34 [32:40:8] & 35 [24:40:8];               15945000
                             % THEN ERROR LEVEL NUMERR                  15945001
                   ERP (EIND,0)      ;                                  15950000
                        COMPE ~ TRUE ;                   COMMENT 7-17 ; 15950500
                   WHILE (SCLAS ! 7) DO SCTRL;                          15955000
                   SCTRL; GO TO LAR                                     15960000
              END; DIVN~3; PCLGTH~0; FX~0; IF SDF THEN                  15965000
                             %SET "FILE SECTION" IF SORT-FILE           15965001
              BEGIN PX~ PRTCTR;  UPIT;%ASSIGN NEXT PRT TO SORT-RECORD   15970000
                   JCV (KX,J,K);                                        15975000
                   INFO[J,K+3].[33:10] ~ PX;                            15980000
                             %STORE PRT INTO INFO FOR SORT REFEREN      15980001
                   EMIL(LITC,2);%PICK UP MEMORY AND STORE               15981000
                   EMIL(OPR ,LOD);%IN THERE UNTIL SORT TO CAUSE         15981500
                   IF PX GTR 511 THEN EMIL(OPR,XRT);                    15982000
                   EMIL(LITC,PX);%INVD ADDR IF ACCESSED BEFORE          15982500
                   EMIL(OPR ,STD);% THE SORT                            15983000
              END ELSE                                                  15985000
              BEGIN  JCV (KX,J,K);                                      15990000
                   PX~ INFO [J,K].[4:10];                               15995000
              END; RECSIZ ~ QX ~ RX ~ 0;                       %CJC 043 16000000
                   ITPRO;   IHLNK(0,CFDE);   L88 ~ 0;          %CJC 043 16001000
                   JCV(OILNK(CFDE),J,K);                       %CJC 043 16002000
                   QX ~ INFO[J,K+1].[16:10];                   %CJC 043 16003000
                   IF CNSZ ! 0 AND CNSZ ! QX THEN              %CJC 043 16004000
              BEGIN MSG[124] ~ "CHECK  " & 5[1:43:5];          %CJC 043 16005000
                   ERP(124 & 34[32:40:8] & 15[24:40:8],0);     %CJC 043 16006000
                      % "CHECK RECORD SIZE"  (WARNING ONLY)    %CJC 043 16007000
              END; T1 ~ FIB[(A~CFIB+11).[38:3],A.[41:7]];      %CJC 043 16008000
                   IF CHPBLK ! 0 THEN                          %CJC 043 16009000
              BEGIN T1 ~ (CHPBLK ~ (CHPBLK + 7) DIV 8) DIV QX; %CJC 043 16010000
                   IF CHPBLK MOD QX ! 0 THEN                   %CJC 043 16011000
              BEGIN MSG[124] ~ "CHECK  " & 5[1:43:5];          %CJC 043 16012000
                   ERP(124 & 34[32:40:8] & 15[24:40:8],0);     %CJC 043 16013000
                      % "CHECK RECORD SIZE"  (WARNING ONLY)    %CJC 043 16014000
              END; END;                                        %CJC 043 16015000
                   FIB[A.[38:3],A.[41:7]] ~ T1 ~               %CJC 043 16016000
                        IF T1 < 2 THEN 1 ELSE T1;              %CJC 043 16017000
                   CHPBLK ~ T1 | QX;                           %CJC 043 16018000
              % CHPBLK = WORDS PER BLOCK                       %CJC 043 16019000
              % T1     = RECORDS PER BLOCK                     %CJC 043 16020000
              % QX     = WORDS PER RECORD                      %CJC 043 16021000
                   IF (CHPBLK > 1890 AND HDWR = 13)        OR  %CJC 043 16022000
                      (CHPBLK > 17 AND (HDWR=4 OR HDWR=15)) OR %CJC 043 16023000
                      (CHPBLK > 10 AND (HDWR=2 OR HDWR=3)) OR  %CJC 043 16024000
                      (CHPBLK > 1023 AND (HDWR=1 OR            %CJC 043 16025000
                        HDWR=10 OR HDWR=11 OR HDWR=12))    THEN%CJC 043 16026000
              BEGIN COMPE ~ TRUE;                              %CJC 043 16027000
                   MSG[124] ~ "BLOCK  " & 5[1:43:5];           %CJC 043 16028000
                   ERP("3X Q",0); %ERP 40&124&15&27,0)         %CJC 043 16029000
              END; %"ILLEGAL BLOCK SIZE SPECIFICATION"         %CJC 043 16030000
                   IF HDWR = 2 OR HDWR = 3 THEN CHPBLK ~ 10;   %CJC 043 16031000
                   IF FIB[(B~CFIB+5).[38:3],B.[41:7]].[46:2]=0 %CJC 043 16033000
                       AND T1 > 1 THEN                         %CJC 043 16034000
              BEGIN COMPE ~ TRUE;                              %CJC 043 16035000
                   ERP(40 & 7[32:40:8] & 63[24:40:8]           %CJC 043 16036000
                        & 16[16:40:8] & 27[8:40:8],0);         %CJC 043 16037000
              % "ILLEGAL FILE INPUT-OUTPUT USAGE SPECIFICATION"%CJC 043 16038000
              END;                                             %CJC 043 16039000
                   A ~ CFIB +18;                               %CJC 043 16042000
                   FIB[A.[38:3],A.[41:7]].[3:15] ~ CHPBLK;     %CJC 043 16043000
                   FIB[A.[38:3],A.[41:7]].[33:15] ~ QX;        %CJC 043 16044000
                   IF T1 <  2 AND                              %CJC 034 16045000
                   FIB[B.[38:3],B.[41:7]].[46:2] = 1 THEN      %CJC 034 16046000
                   FIB[B.[38:3],B.[41:7]].[46:2] ~ 0;          %CJC 034 16047000
                   IF HDWR = 13 AND   % IF DISK AND ROWS > 1   %CJC 037 16112300
                   FIB[(B~CFIB+8).[38:3],B.[41:7]]             %CJC 037 16112400
                       .[15:10] ! 1 THEN                       %CJC 037 16112500
                   IF (FIB[B.[38:3],B.[41:7]].[25:23]          %CJC 093 16113000
                        MOD FIB[(A~CFIB+11).[38:3],A.[41:7]])  %CJC 037 16113100
                   ! 0 THEN                                    %CJC 037 16113200
              BEGIN MSG[124] ~ "ROW    " & 3[1:43:5];          %CJC 037 16113300
                   EIND ~ 124 & 15[32:40:8] & 25[24:40:8];     %CJC 037 16113400
                   ERP(EIND,0);                                %CJC 037 16113500
                        % ROW SIZE DECLARATION (WARNING ONLY)  %CJC 037 16113600
              END; CHPBLK ~ CNSZ ~ 0;                          %CJC 037 16113900
                   A ~ CFIB + 13;                              %CJC 025 16114000
                   JCV(CFDE,J,K);      % IF RANDOM AND ALTERNAT%CJC 025 16114100
                   IF DICT[J,K].[7:1] = 1 AND  % AREAS = 0     %CJC 025 16114200
                   FIB[A.[38:3],A.[41:7]].[1:9] < 2 THEN       %CJC 025 16114300
              BEGIN MSG[124] ~ "BUFFER " & 6[1:43:5];          %CJC 025 16114400
                   ERP(124 & 9[32:40:8],0);                    %CJC 025 16114500
                   COMPE ~ TRUE;   % "BUFFER MISSING"          %CJC 025 16114600
              END;                                             %CJC 025 16114700
                   T10 ~ INFO[J,K].[33:15];                    %CJC 043 16114800
                   IF SDF THEN %IF SORT FILE                            16125010
              BEGIN FOR X~CFIB STEP 20 UNTIL T10 - 2 DO                 16125020
                             %COPY FIB INTO FIBS FOR OTHER FILES        16125021
              BEGIN A~X+4;B~CFIB+4; FIB[A.[38:3],A.[41:7]].[1:7] ~      16125030
                             % REQUESTED BY # SORT TAPES                16125031
                                    FIB[B.[38:3],B.[41:7]].[1:7];       16125033
                   FOR T1 ~ 5 STEP 1 UNTIL 15 DO                        16125040
                    A~X+18;  B~CFIB+18;                                 16125050
             BEGIN  FIB[A.[38:3],A.[41:7]]~FIB[B.[38:3],B.[41:7]];      16125052
             END;                                                       16125053
              END;                                                      16125060
              END;                                                      16125090
                   IF RNAM THEN%IF RENAMING FILE                        16125200
              BEGIN                                                     16125210
                    RENAMING;  %CALL RENAMING PROCESSOR                 16125220
                   RNT[0,0]~0;  REX~0; RNAM~FALSE;                      16125230
              END;                                                      16125240
                   FOR J~0 STEP 1 UNTIL 3 DO%CLEAR STACK FOR NEXT USAGE 16145010
              BEGIN FOR K~0 STEP 1 UNTIL 10 DO STK[J,K]~0;              16145020
              END;  NX~1; LASTLL~0; LASTRED~0;                          16145030
                   DRIX~ 0; CFDE~ 0; LOCUR~ 0;                          16150000
                   GO TO FS3;                                           16155000
         FSX: END*;            %SPECIAL END TO RETURN DRUM STORAGE      16160000
              END;                                                      16165000
                   IF KEY = 383 THEN WSSECT; % "WORKING-STORAGE%CJC 075 16170000
                   IF KEY = 346 THEN  % "CONSTANT"             %CJC 074 16171000
              BEGIN CDIVN ~ 32;                                %CJC 074 16172000
                   CNSTFLG ~ TRUE;                             %CJC 074 16173000
                   WSSECT;                                     %CJC 074 16174000
                   CNSTFLG ~ FALSE;                            %CJC 074 16175000
              END;                                             %CJC 074 16176000
                   LEVEL~CNPL; IF LEVEL<60 THEN           COMMENT 1-28; 16215002
              BEGIN                                       COMMENT 1-28; 16215005
                   IMIL(LITC,1); IMIL(OPDC,CNPL); IMIL(LITC,RAL);       16215010
                   IMIL(OPR,STD);   LEVEL~CNPL;                         16215020
              END;                                        COMMENT 1-28; 16215030
                   DUMPCONST (CNP,CNPL,CNQ,CNR);%DUMP CONSTANT POOL     16220000
                   IF LEVEL<60 THEN                       COMMENT 1-28; 16220002
              BEGIN                                       COMMENT 1-28; 16220005
                   IMIL(OPDC,RAL);  IMIL(LITC,1);                       16220010
                   IMIL(DESC,LEVEL);  IMIL(OPR,STD);                    16220020
              END;                                        COMMENT 1-28; 16220030
                   EMIL (OPR,XIT)     ;                                 16225000
                   IMIL(OPR,MKS); IMIL(OPDC,INITIL);                    16225005
                   BSZF~TRUE;  %  AND CALL ON IT                        16240000
                   SEGDUMP (SEG,CREG);%DUMP W-S SECT INIT. PROCEDURES   16250000
                   FOR X~20 STEP 20 UNTIL (FIBX-10) DO                  16255000
              BEGIN  A~X+19;                                            16255010
                   ORIG~FIB[A.[38:3],A.[41:7]].[33:15];                 16255020
                   JCV(ORIG,J,K);  IF DICT[J,K].[17:1] = 0 THEN         16255030
              BEGIN  JCV(OILNK(ORIG),J,K);                              16255040
                   JCV(INFO[J,K+1].[1:15],T1,T2);                       16255050
                    SYOUT (MSG[124],DICT[T1,T2],                        16255060
                    DICT[T1,T2].[1:5]);                                 16255070
                   EIND~9 & 7 [32:40:8] & 31 [24:40:8] &                16255080
                             %"MISSING FILE SECTION SPECIFICATION       16255081
                     27 [16:40:8] & 124 [8:40:8]; ERP(EIND,0);%  XXXX". 16255090
                     COMPE~TRUE;                                        16255100
              END;                                                      16255110
              END;                                                      16255120
              END*;            %SPECIAL END TO RETURN DRUM STORAGE      16260000
 L6:                IF KEY ! 539 THEN%IV NOT "PROCEDURE"                16265000
              BEGIN                                                     16270000
                   IF BSZF THEN                                         16275000
              BEGIN                                                     16280000
                    EIND ~9;EIND.[32:8]~73; ERP (EIND,0)      ;         16285000
                             %"MISSING DIVISION".                       16285001
                   COMPE~TRUE;BSZF~FALSE;                 COMMENT 10-3; 16290000
              END;                                                      16295000
                    SCTRL; IF KEY=718 THEN GO TO EGRESS ELSE GO TO  L6; 16300000
              END;                                                      16305000
                   CDIVN~4;    %SET CURRENT DIVISION TO PROCEDURE DV    16310000
               DIVN ~ 4;                                                16310025
                   INFLG ~ FALSE;                                       16315000
                   T10 ~ SEG [0,0];                                     16320000
                   MAKELABEL(0,PRTCTR,0,0);  UPIT;                      16325000
                   DSPRTCTR ~ 0;                      % RESET DSPRTCTR  16325500
         PROCDIV:              %START OF PROCEDURE DIVISION..........   16335000
              BEGIN                                                     16340000
                             %FLTBL=PRT LOCATIONS OF PROGRAM LABEL      16345001
                             % DESCRIPTORS. EACH OCIX WORD[N] =         16345002
                             % # OF CHARACTERS IN A SUBSCRIPT ROW       16345003
                             % TO MULTIPLY BY SUBSCRIPT N.              16345004
                   REAL DRINX;                           COMMENT 10-20; 16370000
                   REAL HRX, %OBJECT-TIME LOCN. FOR SUBSCRIPT COMMCATION16371000
                        FIBPX, %PRT LOCATION FOR FIB AREA               16371100
                        IODESC,%I-O DESCRIPTOR LOCATION                 16371200
                        ADIO,  %PRT LOC OF I/O AREA FOR MESSAGE PRNT    16371300
                        CSEC,  %OCUR FOR CURRENT SECTION                16371400
                        SORTREC,%PRT OF SPECIAL SORT RECORD             16371500
                        T1A,   %TEMP                                    16371600
                        T2A,   %TEMP                                    16371700
                        T3A,   %TEMP                                    16371800
                        T4A,   %TEMP                                    16371900
                        IXX, %CURRENT INDEX INTO INFO               7-6716372000
                        T5A,   %TEMP                                    16372100
                        VALS,  %# VALUES FOR CONDITION NAME             16372200
                        RKEY,  %RELATION KEY                            16372300
                        RTYPE, %RELATION TYPE                           16372400
                        CLIM,  %CORRESPONDING DELIMETER                 16372500
                        CRKEY, %CURRENT RELATION KEY                    16372600
                        CRTYPE,%CURRENT RELATION TYPE                   16372700
                        PSD,   %PRT LOC FOR DIAGNOSTIC PASSED ARRAY     16372800
                        SIGNED,%CURRENT ITEM IS SIGNED FLAG             16372810
                        OFOLT, %OBJECT-TIME FOLLOWER TABLE              16372820
                        SYLL,  %SYLLABLE COUNT                          16372830
                        DPX,   %DATA-NAME SIGN PRT LOC                  16372840
                        DQX,   %DATA-NAME SIGN WORD INDEX               16372850
                        DRX,   %DATA-NAME SIGN CHAR INDEX               16372900
                        SRTPRM;%                                    7-6716373000
INTEGER ARRAY FIXUPS[0:6];COMMENT FIX-UP LOCATIONS;       COMMENT 6-29; 16381000
              COMMENT KODE DECLARED IN OUTSIDE BLOCK    9-16 JH        ;16390000
REAL ARRAY PARAM[0:170],JUMPS[0:135],R[0:24,0:4];                       16395000
                             %SORT WORK ARRAY, JUMP ARRAY, KEY ARR      16395001
              REAL ARRAY FLTBL    [0:7,0: 127], %                       16395100
                        DR[0:31,0:31]; %                                16395200
              DEFINE T = PARAM[83]#;%# OF WORK TAPES IN A SORT PROGRAM. 16400000
              DEFINE K2 = PARAM[107]#;                                  16405000
                             %SORT KEY WORK VALUE(SCRATCH-PAD).         16405001
              DEFINE K3 = PARAM[108]#;                                  16410000
                             %SORT KEY WORK VALUE(SCRATCH-PAD).         16410001
              DEFINE LNTH = PARAM[121]#;%LENGTH OF PART OF SORT KEY.    16415000
              DEFINE K4 = PARAM[120]#;                                  16420000
                             %SORT KEY WORK VALUE(SCRATCH-PAD).         16420001
              DEFINE WDS = PARAM[62]#;%WORDS PER RECORD FOR SORT.       16425000
              DEFINE LNTHMIN1 = PARAM[122]#;                            16430000
                             %WORDS PER RECORD - 1 (FOR SORT)           16430001
              INTEGER  A1;          COMMENT  OCUR FOR AN ITEM IN DICT;  16435000
                             %OCUR FOR LABEL JUST PROCESSED.            16435001
         INTEGER HQY; COMMENT OBJECT TIME TRASH;          COMMENT 9-01; 16437000
              INTEGER   BINGO; %SORT PERFORM I/O INDEX.                 16445000
              INTEGER CPAR;    %CURRENT PARAGRAPH OCUR.                 16450000
              INTEGER   DMPCTR,%# OF ITEMS TO BE DUMPED                 16455000
                        ENDQ,  %SORT END-OF-FILE FLAG.                  16460000
                        I,     %TEMP                                    16465000
                        IPFIDX,%SORT PERFORM I/O INDEX.                 16470000
                        KODE1, %INDEX FOR KODE ARRAY.                   16475000
                        SMBL,  %PRT FOR OBJECT TIME SYMBOL ARRAY        16475100
                        SUBS,  %# SUBSCRIPTS REQUIRED                   16475200
                      CHI,     %CT ARRAY INDEX                      7-6716481000
                        LSUBS, %LENGTH OF SUBSCRIPT                     16485000
                        MSGTA, %TEMP STORAGE FOR DIAGNOSTICS            16490000
                      CLEVEL,  %CURRENT LEVEL                       7-6716491000
                        PIODESC,%I/O DESC FOR DIAGNOSTICS               16495000
                        PSDX;  %INDEX INTO PSD ARRAY(MONITOR-DUMP)      16500000
              INTEGER RLFP;    %RESULT LEFT PART (ARITHMETICS)          16505000
              INTEGER ROCUR;   %RESULT OCUR      (ARITHMETICS)          16510000
              INTEGER RSCALE;  %RESULT SCALE     (ARITHMETICS)          16515000
                BOOLEAN BA,    %BEFORE AFTER FLAG FOR "USE"             16525000
                        DECF,  %IN DECLARATIVE SECTION IF TRUE      7-6716525100
                        DIVF,  %DIVIDE FLAG(TRUE IF DIVIDE)         7-6716525200
                        EXPL,  %INDICATES EXPLICIT LABEL (COL. 8)   7-6716525300
                        FND,   %ON IF LABEL FOUND IN DIRECTORY      7-6716525400
                        FNFLG, %FILE-NAME FLAG                          16525450
                        FRFLG, %FULL RELATION FLAG(CONDITION)       7-6716525500
                        GETOUT,%INDICATES SUBLEVEL ROUTINE ERROR    7-6716525600
                        MON,   %TRUE IF MONITOR,FALSE IF DUMP       7-6716526000
                        NFLG,  %"NOT" FLAG FOR BOOLEANS (SEE BSEC)  7-6716526050
                        RF,    %RETURN FLAG (END OF STATEMENT)      7-6716526100
                        RPREC, %RECEIVING FIELD PRECISION           7-6716526200
                        SORTFILE,%FILE IS DECLARED "SORT FILE"(SD)  7-6716526300
                        UFLG,  %TRUE IF IN "USE" STATEMENT              16526700
                        FN;    %FILE-NAME FLAG FOR "USE"                16530000
    INTEGER IO;                                             COMMENT DF; 16532000
              INTEGER SSUBS;        COMMENT  START OF SUBSC CODE;       16535000
              COMMENT SAVEGOTO DECLARED IN OUTSIDE BLOCK 9-16 JH       ;16540000
BOOLEAN LINKAGE; COMMENT TELLS GETIT IF LINKAGE CODE NECESSARY    9-03; 16550000
COMMENT ************************** LABLFIELD *************************; 16600000
BOOLEAN PROCEDURE LABLFIELD;       % TRUE IS INVALID LABEL INFO       PG16630010
              BEGIN  INTEGER P1,P2,J,K,P3;                              16630020
                   BOOLEAN STRAHL;                        COMMENT 6-10; 16630025
                   LABEL  L1,LX,LXX;                                    16630030
                   QX~3;  RX~0;  IXX~LABINFO;                           16630040
                   JCV(LABDICT,J,K);                      COMMENT 6-6;  16630042
                   DICT[J,K].[16:2]~REAL(NOT UFLG AND     COMMENT 6-11; 16630044
                   (KEY =494 OR KEY =387));               COMMENT 6-11; 16630045
                   STRAHL ~ FALSE;                        COMMENT 6-10; 16630046
                   IF KEY = 390 THEN GO TO L1;%IF REEL-NUMBER           16630050
                   IXX~IXX+4;  IF KEY = 491 THEN GO TO L1;              16630060
                             %IF CREATION-DATE OR DATE WRITTEN          16630061
                   IXX~IXX+4;  IF KEY = 492 THEN GO TO L1;%IF CYCLE     16630070
                   IXX~IXX+4;  IF KEY = 493 THEN GO TO L1;              16630080
                             %IF PURGE-DATE                             16630081
                   IXX~IXX+4;IF KEY=364 OR KEY=392 THEN                 16630090
                   GO TO L1;                            COMMENT 4-6;    16630091
                   IXX~IXX+6;  IF KEY = 365 THEN GO TO L1;              16630100
                             %IF END-OF-TAPE                            16630101
                   IXX ~ IXX +6;  IF KEY =494 THEN%IF BLOCK-COUNT       16630110
              BEGIN STRAHL ~ TRUE;                        COMMENT 6-10; 16630112
                   IF NOT UFLG THEN IXX ~47; GO TO L1;    COMMENT 6-10; 16630113
              END;                                        COMMENT 6-6;  16630114
                   IXX ~ IXX +4; IF KEY = 387 THEN%IF RECORD-COUNT      16630120
              BEGIN STRAHL ~ TRUE;                        COMMENT 6-10; 16630122
                   IF NOT UFLG THEN IXX ~51;GO TO L1;     COMMENT 6-10; 16630123
              END;                                        COMMENT 6-6;  16630124
                   IXX~IXX+4;  IF KEY = 103 THEN GO TO L1;              16630130
                             %IF TEST-PATTERN,SUPERVISOR,STATUS,        16630131
                             % SECURITY,REMARKS,OBJECT-PROGRAM,NO-      16630132
                             % MEMORY-DUMP,MEMORY-DUMP-KEY,AUTHOR,      16630133
                   IXX~IXX+6;IF KEY=495 THEN                            16630134
                             % INSTALLATION,ENTER,DATE-WRITTEN,         16630135
                   GO TO L1;   % CONTROL,COBOL,CLOCK-UNITS,BITS.        16630136
                   FOUND~FALSE;  GO TO LX;                              16630140
       L1:         JCV(LABDICT,J,K);                                    16630150
                   DICT[J,K+1].[33:15]~IXX;                             16630160
                   JCV(IXX,P1,P2);                                      16630170
                   INFO[P1,P2+2].[3:15]~CLOC;                           16630180
                   IF INOF THEN                                         16630190
              BEGIN  SCTRL;  SCTRL;  IF OTYP(OCUR) ! 6 THEN             16630200
              BEGIN  FOUND~FALSE;  GO TO LX;                            16630210
              END;                                                      16630220
              END ELSE                                    COMMENT 6-6;  16630230
              BEGIN ERP(9 & 7[32:40:8] & 27[24:40:8],0);  COMMENT 6-6;  16630232
                   COMPE ~ TRUE;                          COMMENT 6-6;  16630234
                   LABLFIELD ~ TRUE; FOUND ~ FALSE; GO TO LXX;       %PG16630235
              END;                                        COMMENT 6-6;  16630236
                   DICT[J,K].[33:15]~OCUR;                              16630240
                   JCV(OILNK(OCUR),J,K);                                16630250
                   P3~INFO[J,K].[4:10]-(IF NOT UFLG AND   COMMENT 6-10; 16630260
                   STRAHL THEN 3 ELSE 2);                 COMMENT 6-10; 16630265
                   INFO[P1,P2].[1:10]~P3;                               16630270
                   OCUR~LABDICT;       TYPE~8;                          16630280
                   GO TO LXX;                                           16630290
       LX:         EIND~40 & 37 [32:40:8]  & 22 [24:40:8];              16630300
                             %"ILLEGAL LABEL OPERAND".                  16630301
                   ERP(EIND,0);                                         16630310
                   LABLFIELD ~ TRUE; COMPE ~ TRUE;                   %PG16630320
       LXX:   END;                                                      16630325
COMMENT **************************   QUAL    *************************; 16632000
COMMENT RESOLVES QUALIFICATION OF NAMES - OCUR AND LOCUS CONTAIN LOC ;  16635000
PROCEDURE QUAL (OCUR);  INTEGER OCUR;                                   16640000
               BEGIN LABEL Q,XT,ERR;                                    16645000
                     CY := 0;                                           16646000
         Q:        CY~ CY + 1; CCY [CY]~ OCUR;%SAVE OCUR OF DATA-NAME   16650000
                   IF INOF THEN%IF "IN" OR " OF "                       16655000
              BEGIN SCTRL;                                              16656000
                    SCTRL;                                              16657000
                    IF TYPE = 1 THEN GO TO ERR;                         16658000
                    % THERE SHOULD BE A DATA NAME HERE,INOF LOOKS AHEAD 16660000
                   IF NOT FOUND THEN%IF NOT FOUND IN DICTIONARY         16665000
              BEGIN  EIND ~ 13; EIND.[32:8]~ 83; ERP (EIND,0)      ;    16670000
                             %"UNIDENTIFIED NAME".                      16670001
                   LOCUS~ 0; OCUR~ 0; GO TO XT                          16675000
              END;  GO TO Q    %LOOP FOR NEXT NAME                      16680000
              END;  SERCH (CY,CCY);  OCUR~ LOCUS;                       16685000
                             %CALL SERCH TO RESOLVE QUALIFICATION       16685001
                   IF LOCUS = 0 THEN%IF NOT FOUND IN SERCH              16690000
              BEGIN IF NOT INFLG THEN%IF NOT IN NOTE SENTENCE           16695000
              BEGIN ERR: ERP(40&84[32:40:8],0);                         16700000
                             %"ILLEGAL QUALIFICATION".                  16700001
                    OCUR := LOCUS := 0;                                 16704000
              END;                                                      16705000
              END;                                                      16710000
       XT:    END;                                                      16715000
COMMENT **************************    DN     *************************; 16717000
COMMENT CONTROLS ACCESS AND PROCESSING OF SYMBOLS FROM SOURCE  ;        16720000
PROCEDURE DN;                                                           16725000
              BEGIN                                                     16730000
                   INTEGER T1,M,T2;                                     16735000
                   INTEGER OCCURS; %                                7-6716735020
                   REAL DUSAGE;%USAGE OF "DEPENDING ON" OPERAND         16735040
    LABEL DN1; REAL V;                                    COMMENT 9-09; 16735050
              LABEL   DNX,ELE,LOP,LOPP;                                 16740000
                    KEY~0; CAT~0; TYPE~0; OCUR~0; IODESC~0;             16745000
                   TECH~0; SIZE~0; HDWR~0; SORTFILE~ FALSE;             16750000
                   DPX~0;          IXX~0; VLF~ FALSE; PX~ 0;            16755000
                   JS~0;  SYNF~FALSE;                                   16760000
                   DUSAGE~0; SUBS~0;                                    16765000
                   QX~0; RX~ 0; SCALE~0; LFP~0; OCCURS~0;               16770000
                   LOC2 ~ 0;                                            16770050
                   USAGE~0; CLASS~0; LOC1~0; VALS~0; MDF~FALSE;         16775000
                   SCTRL;IF SCLAS =1 OR SCLAS =5 OR SCLAS =6 THEN       16780000
                             %IF LITERAL                                16780001
              BEGIN TYPE~5 ; GO TO DNX                                  16785000
              END  ;                                                    16790000
                   IF NOT FOUND THEN%IF NOT FOUND IN DICTIONARY         16795000
              BEGIN  IF SCLAS = 3 THEN   TYPE~3;%IF LABEL THEN TYPE 3   16800000
                   GO TO DNX;                                           16805000
              END;                                                      16810000
                   IF TYPE=15 OR TYPE=16 THEN              COMMENT DF;  16810100
              BEGIN JCV(OFOL(OCUR),J,K);                   COMMENT DF;  16810200
                   SYOUT(MSG[124],DICT[J,K],               COMMENT DF;  16810300
                    DICT[J,K].[1:5]);                      COMMENT DF;  16810400
                   ERP(13&83[32:40:8]&124[24:40:8],0);     COMMENT DF;  16810500
                   COMPE~TRUE;                             COMMENT DF;  16810600
                   COMMENT"UNIDENTIFIED NAME XXXX";        COMMENT DF;  16810700
                   GO TO DNX;                              COMMENT DF;  16810800
              END;                                         COMMENT DF;  16810900
       LOP:        IF TYPE = 1 THEN%IF RESERVED WORD                    16815000
              BEGIN                                                     16816000
           COMMENT JCV(OCUR,J,K) FOLLOWS, 9-4-64;                       16817000
                   J ~ OCUR.[33:6]; K ~ OCUR.[39:9];                    16818000
                   KEY ~ DICT[J,K].[33:15];%SET ID KEY NND CATEGORY     16820000
                    CAT~DICT[J,K].[18:15];                              16820005
                   IF INFLG THEN GO TO DNX;                             16820008
                   IF CAT = 9 OR KEY = 364 OR KEY = 365 THEN            16820010
                             %IF RESERVED LABEL-FIELD NAME              16820011
              BEGIN IF LABLFIELD THEN ELSE GO TO ELE;                %PG16820020
                             %CALL LABEL NAME PROCESSOR TO IDENTIF      16820021
              END;                                                      16820030
                   GO TO DNX;                                           16820050
              END;                                                      16825000
                   IF INFLG AND TYPE ! 12 AND TYPE ! 17 THEN            16830000
                             %IF NOTE CONTROL                           16830001
                   GO TO DNX;                                           16835000
                   IF TYPE = 2 OR TYPE = 8  THEN                        16840000
                             %IF GROUP OR ELEMENTARY ITEM               16840001
              BEGIN  IF NOT SYNF THEN%IF NOT A SYNONYM                  16840010
              BEGIN  IF INOF   %IF IN OR OF                             16845000
                   THEN QUAL(OCUR) ELSE                                 16850000
                             %CALL QUALIFICATION RESOLVER PROCEDUR      16850001
     BEGIN COMMENT IF OSNAM(OCUR) ! 0 FOLLOWS, 9-4-64;                  16851000
              BEGIN V ~ OCUR + 1;%IF DUPLICATE NAME AND QUAL NOT GIVEN  16855000
                   IF (DICT[V.[33:6],V.[39:9]].[18:15]) ! 0 THEN        16856000
              BEGIN  EIND~77 & 9 [32:40:8] & 84 [24:40:8] &             16860000
                             %MISSING QUALIFICATION                     16860001
                   124 [16:40:8];  MSG[124].[1:5]~LGTH;                 16865000
                             %"SYNTAX ERROR MISSING QUALIFICATION       16865001
                   CHRTRAN (ISYMB[0],4,MSG[124],1,LGTH);% XXXX".        16870000
                   ERP (EIND,0)      ; FOUND~FALSE;                     16875000
                   COMPE~TRUE;                           COMMENT 1-65;  16876000
              END;                                                      16880000
              END;                                                      16885000
     END;                                                               16885005
              END;                                                      16885010
                   IF NOT FOUND THEN GO TO DNX;                         16890000
           COMMENT  TYPE ~ OTYP(OCUR) FOLLOWS, 9-4-64;                  16894000
                   IF TYPE ~ DICT[OCUR.[33:6],OCUR.[39:9]].[1:5]        16895000
                                     =7 THEN GO TO DN1;   COMMENT 9-09; 16895001
       ELE:        V~DICT[(OCUR+1).[33:6],(OCUR+1).[39:9]];             16900000
                             %GET INFO ARRAY LINK                       16900001
                   IXX ~ V.[33:15];                                     16900050
                   CLASS ~ V.[7:3];                                     16905000
           COMMENT  USAGE ~ OUSG(OCUR) FOLLOWS, 9-4-64;                 16909000
                   USAGE ~ DICT[OCUR.ZW,OCUR.ZY].[16:2];                16910000
                   SCALE~0 & V[41:11:7]                COMMENT 2-26-64; 16915000
                   & V[1:10:1];                        COMMENT 2-26-64; 16920000
           COMMENT  JCV([XX,J,K) FOLLOWS,9-4-64;                        16921000
                   J ~ IXX.[33:6]; K ~ IXX.[39:9];                      16922000
           COMMENT  OSZDEP(OCUR) FOLLOWS,9-4-64;                        16923000
                   V ~ OCUR + 1;                                        16924000
                   V ~ DICT[V.[33:6],V.[39:9]].[33:15];                 16924100
                   T1 ~ V.[33:6]; V ~ V.[39:9];                         16924200
                   IF BOOLEAN(INFO[T1,V+1].[11:1]) THEN                 16925000
                             %IF SIZE DEPENDING                         16925001
              BEGIN T1~ INFO [J,K+3].[3:15];%GET SIZE DEPENDING LINK    16930000
                   OAS (DPX,DQX,DRX,T1);                                16935000
                             %GET ASSIGNMENT FOR DEPEND FIELD           16935001
           COMMENT  DUSAGE~OUSG(INFO[J,K+3].[3:15]) FOLLOWS,9-4-64;     16938000
                   DUSAGE ~ INFO[J,K+3].[3:15] ;                        16939000
                   DUSAGE ~ DICT[DUSAGE.ZW,DUSAGE.ZY].[16:2];           16940000
                             %GET USAGE OF DEPENDING FIELD              16940001
              END;                                                      16945000
                    V~INFO[J,K];%PRT ASSIGNMENT AND "VALUE" FLAG        16950000
                   PX~V.[1:10];  QX~V.[11:10];                          16955000
                             %WORD INDEX AND MONITOR-DUMP FLAG          16955001
                   RX~V.[21:3]; VLF~BOOLEAN(V.[30:1]);                  16960000
                             %CHARACTER ADDRESS                         16960001
                   MDF~BOOLEAN (V.[32:1]);     SIZE~V.[33:15];          16965000
                   IF NOT MDF THEN MDF~BOOLEAN(INFO[J,K+1].[3:1]);      16970000
                             %IF NOT MONITORED THEN CHECK DUMP          16970001
                   V~INFO[J,K+1];%LEFT PART                             16975000
                   JS~V.[1:2];  LFP~V.[13:6];                           16980000
           COMMENT  SIGNED ~OSGN(OCUR) FOLLOWS, 9-4-64;                 16984000
                   SIGNED ~ DICT[OCUR.ZW,OCUR.ZY].[13:3];               16985000
                   OCCURS~V.[19:13];       % PULL OUT OCCURS   %TR 86   16990000
                   SUBS ~ V.[32: 4];   % PULL OUT SUBSCRIPTS   %TR 86   16995000
                   CNSTFLG~BOOLEAN (INFO[J,K+2].[1:1]);                 17000000
                             %SUBSCRIPTS REQUIRED                       17000001
                     IF OCCURS ! 0 AND SUBS = 0 THEN                    17000010
                             %IF ACTUAL OCCURS DATA-NAME                17000011
              BEGIN  V.[32:4] ~ SUBS ~ 1;  % SET SUBSCRIPTS    %TR 86   17000020
              END;   IF SUBS ! 0 THEN%2F SUBSCRIPTS REQUIRED            17000030
              BEGIN T1~OCUR; T3~0; T4~SUBS;%SAVE OCUR AND # REQUIRED    17005000
                   IF TYPE ! 11 THEN%IF NOT CONDITION NAME              17005010
              BEGIN                                                     17005020
                   IF OCCURS ! 0 THEN%IF ITEM ITSELF WAS NOT OCCURS     17005500
              BEGIN                                                     17005600
                   OCIX[0]~INFO[J,K+2].[33:15] ;                        17010000
                             %OCCURS COMMUNICATION ARRAY ~ SIZE         17010001
                   T3~1;   T4~T4-1;                                     17025000
              END;                                                      17030000
              END;                                                      17030020
                   M ~ 0 ; WHILE M < T4 DO%PICK UP OCCURS IN HIERARCHY  17035000
              BEGIN            %GET HIERARCHY AND INFO LINKS            17040000
           COMMENT  T1~OHLNK(T1),T2~OILNK(T1) FOLLOW, 9-4-64;           17041000
                   T1 ~ DICT[T1.[33:6],T1.[39:9]].[33:15];              17042000
                   T2 ~ T1+1; T2 ~ DICT[T2.[33:6],T2.[39:9]].[33:15];   17043000
           COMMENT  JCV(T2+1,J,K) FOLLOWS,9-4-64;                       17044000
                   J ~ (T2+1).[33:6]; K ~ (T2+1).[39:9];                17045000
                   IF INFO[J,K].[19:13] ! 0 THEN               %TR 86   17050000
                             %IF "OCCURS" FIELD NOT ZERO                17050001
              BEGIN                                                     17055000
           COMMENT  JCV(T2,J,K) FOLLOWS, 9-4-64;                        17060000
                   J ~ T2.[33:6]; K ~ T2.[39:9];                        17065000
                   OCIX[M+T3]~INFO[J,K+2].[33:15];                      17075000
                             %GET INTERNAL MAPPING SIZE                 17075001
                   M ~ M+ 1 ;                                           17076000
              END;                                                      17080000
              END                                                       17085000
              END; GO TO DNX                                            17090000
              END;                                                      17095000
                   IF TYPE = 3 THEN GO TO DNX;%IF LABEL                 17105000
         COMMENT SYNONYM ;                                              17110000
       LOPP:                                                            17110050
                   IF TYPE = 4 THEN                                     17115000
              BEGIN  OCUR~ OHLNK (OCUR); TYPE~OTYP (OCUR);              17120000
                             %GET ORIGINAL OCUR AND TYPE                17120001
                   GO TO LOP                                            17125000
              END;                                                      17130000
         COMMENT FILE NAME;                                             17135000
                   IF TYPE = 6 THEN                                     17140000
              BEGIN %                                               7-6717145000
                             %CHECK FOR "SORT FILE"                     17145001
                   SORTFILE ~ OELEF(OCUR);%                         7-6717150000
                   X~ OILNK (OCUR);   IXX~ X;                           17155000
                             %GET AND SET INFO ARRAY INDEX              17155001
                   JCV (X,J,K);                                         17160000
                   IODESC ~ INFO [J,K].[4:10];                          17165000
                             %GET I/O DESCRIPTOR FOR FILE               17165001
                   TECH~INFO[J,K].[1:3];                   COMMENT DF;  17170000
                             %TECHNIQUE ASSIGNED                        17170001
                   HDWR~INFO[J,K+1].[44:4];%PERIPHERAL HARDWARE TYPE    17175000
                   FIBPX~ INFO [J,K].[14:10];%FIB ARRAY INDEX           17180000
                   X~X+1;  JCV (X,J,K);                                 17185000
                   MDF~BOOLEAN(INFO[J,K].[36:2]);                       17190000
                               %MONITOR-DUMP FLAG                       17190001
                   SIZE~ INFO [J,K].[16:10]; JCV (X+1,J,K);%RECORD-SIZE 17200000
                   CFIB~INFO [J,K].[8:10];%FIB INDEX (COMPILE TIME)     17205000
                   UNITS~INFO [J,K+1].[43:5];%# HARDWARE UNITS ASSIGNED 17210000
                   SORTREC~INFO [J,K+1].[33:10];                        17215000
                             %SORT-FILE RECORD ASSIGNMENT               17215001
                             %IF TECHNIQUE ASSIGNED                     17215002
                   GO TO DNX                                            17235000
              END;                                                      17240000
         COMMENT RECORD NAME;                                           17245000
                   IF TYPE = 7 THEN%IF "01" LEVEL                       17250000
              BEGIN  IF NOT SYNF THEN%IF NOT A SYNONYM                  17255000
              BEGIN                                                     17255010
                   IF INOF THEN%IF QUALIFIED BY IN OR OF                17255030
              BEGIN QUAL (OCUR); IF NOT FOUND THEN GO TO DNX            17260000
                             %CALL QUALIFICATION PROCESSOR              17260001
              END ELSE                                                  17265000
              BEGIN  IF OSNAM(OCUR) ! 0 THEN                            17270000
                             %IF NO QUALIFICATION AND DULLICATE NA      17270001
              BEGIN  EIND~77 & 9 [32:40:8] & 84 [24:40:8] &             17275000
                             %"SYNTAX ERROR MISSING QUALIFICATION       17275001
                   124 [16:40:8];  MSG[124].[1:5]~LGTH;% XXXX".         17280000
                   CHRTRAN (ISYMB[0],4,MSG[124],1,LGTH);                17285000
                   ERP (EIND,0)      ; FOUND~FALSE;                     17290000
                   COMPE~TRUE;                           COMMENT 1-65;  17291000
              END;                                                      17295000
              END;                                                      17300000
              END;                                                      17300010
                   TYPE ~ OTYP (OCUR);%SET TYPE OF OCUR ENTRY           17305000
DN1:                                                      COMMENT 9-09; 17307000
                   SIZE ~ OFSZ (OCUR); X~ OILNK (OCUR); IXX~X;          17310000
                             %RECORD SIZE AND INFO LINK                 17310001
                   IF (T1~OHLNK (OCUR)) ! 0 THEN                        17315000
              BEGIN  T1~ OILNK (T1);                                    17320000
                   JCV (T1,J,K);                                        17325000
                   TECH~INFO[J,K].[1:3];                   COMMENT DF;  17330000
                             %GET FILE TECHNIQUE                        17330001
         HDWR  ~  INFO[J,K+1].[44:4] ;%GET FILE WARDWARE ASSIGNMENT     17335000
    IF HDWR = 10 THEN IODESC ~ INFO[J,K+3].[33:10] ELSE                 17335100
                   IODESC ~ INFO [J,K].[4:10]                           17340000
                             %GET I/O DESCRIPTOR FOR FILE               17340001
              END ELSE                                                  17345000
              BEGIN TECH~0;  HDWR~0; IODESC~0;                          17350000
                   OAS (IODESC,J,K,OCUR);                               17355000
              END; JCV (IXX,J,K); CNSTFLG~IF INFO [J,K+2].[1:1] ! 0     17360000
                             %SET CONSTANT SECTION FLAG                 17360001
                   THEN TRUE ELSE FALSE; IF OSZDEP (OCUR) THEN          17365000
                             %IF "SIZE DEPENDING"                       17365001
              BEGIN JCV (IXX+3,J,K);                                    17370000
                   OAS (DPX,DQX,DRX,INFO [J,K].[3:15]);                 17375000
                             %GET ASSIGNMENT OF SIZE DEPENDING          17375001
              END; GO TO ELE                                            17380000
              END;                                                      17385000
         COMMENT  RENAMES ENTRY ;                                       17390000
                   IF TYPE = 9 THEN%IF "RENAMES".                       17395000
              BEGIN LOC1~ OFOL (OCUR);%FIRST OPERAND                    17400000
                    LOC2~OILNK(OCUR);%SECOND OR "THRU" OPERAND          17405000
                   IF INOF THEN%IF QUALIFIED BY IN OR OF                17405010
              BEGIN  EIND~40 & 84 [32:40:8]; ERP(EIND,0);               17405020
                             %"ILLEGAL QUALIFICATION".                  17405021
                    GO TO DNX;                                          17405030
              END;                                                      17405040
                    IF LOC2 = 0 THEN%IF NO THRU OPTION                  17405050
              BEGIN OCUR~LOC1; LOC1~0; TYPE~OTYP (OCUR);                17410000
                             %PICH UP ORIGINAL ITEM AND TYPE            17410001
                    IF TYPE = 4 THEN                                    17410010
                             %IF SYNONYM ANTH LINK TO ORIGINAL ITE      17410011
              BEGIN  OCUR~OHLNK(OCUR); TYPE~OTYP(OCUR);                 17410020
              END;                                                      17410030
                    GO TO ELE; %LOOP AND PROCESS ORIGINAL ITEM          17415000
              END;  OAS (PX,QX,RX,LOC1);  SIZE~0;                       17420000
                             %GET ASSIGNMENT OF ORIG ITEM               17420001
                    OCUR~LOC1;                                          17420010
                   IF LOC2 = 0 THEN%IF "THRU" GIVEN                     17425000
                    SIZE~ OFSZ (LOC1) ELSE%GET SIZE OF FIRST ITEM       17430000
              BEGIN M~LOC1; T1~0; WHILE M<LOC2 DO                       17435000
              BEGIN  SIZE~SIZE+(IF OELEF(M) THEN MAPSZ(M) ELSE          17440000
                             %SUM SIZES OF ITEMS IN RENAMES RANGE       17440001
                    0);   M~OFOL(M);                                    17445000
                    IF M = 0 THEN GO TO DNX;                            17445010
              END; SIZE~SIZE + MAPSZ(LOC2);                             17450000
              END;                                                      17455000
              END;                                                      17460000
                   IF TYPE = 9 THEN GO TO DNX;                          17460010
         COMMENT CONDITION NAME ;                                       17465000
                   IF TYPE = 11 THEN%IF CONDITION-NAME                  17470000
              BEGIN IF NOT SYNF THEN % IF NOT SYNONYM       TR-51&188   17470010
              BEGIN                                                     17475000
                   IF INOF THEN%IF QUALIFIED BY IN OR OF                17485000
              BEGIN  QUAL (OCUR); IF NOT FOUND THEN GO TO DNX;          17490000
                             %RESOLVE QUALIFICATION                     17490001
                   TYPE ~ OTYP (OCUR);                                  17495000
              END ELSE                                                  17500000
              BEGIN  IF OSNAM(OCUR) ! 0 THEN                            17505000
                             %IF QUALIFICATION CANNOT BE RESOLVED       17505001
              BEGIN  EIND~77 & 9 [32:40:8] & 84 [24:40:8] &             17510000
                             %"SYNTAX ERROR MISSING QUALIFICATION       17510001
                   124 [16:40:8];  MSG[124].[1:5]~LGTH;% XXXX".         17515000
                   CHRTRAN (ISYMB[0],4,MSG[124],1,LGTH);                17520000
                   ERP (EIND,0)      ; FOUND~FALSE;                     17525000
                   COMPE~TRUE;                           COMMENT 1-65;  17526000
              END;                                                      17530000
              END;                                                      17530050
              END;                                                      17535000
                   TYPE~OTYP(OCUR);  IF TYPE = 11 THEN                  17535010
              BEGIN X~OILNK(OCUR);   JCV(X+1,J,K);                      17535020
                    VALS ~ INFO[J,K].[43:5];                            17535040
                   GO TO ELE   %LOOP TO PROCESS AS ELEMENT. ITEM        17540000
              END;   IF TYPE = 2 OR TYPE = 8 THEN GO TO ELE;            17540010
                    GO TO LOPP;                                         17540020
              END;                                                      17545000
         COMMENT END OF SOURCE INPUT DECK  ;                            17550000
                   IF TYPE = 12 THEN%IF "END-OF-JOB"                    17555000
             BEGIN SCLAS~4; TYPE~1; GO TO LOP                           17560000
              END;                                                      17565000
         COMMENT SPECIAL NAME  ;                                        17570000
                    IF TYPE = 13 THEN GO TO DNX;                        17575000
                             %IF NAME GIVEN IN SPECIAL NAMES PARAG      17575001
         COMMENT SPECIAL CHARACTER ;                                    17600000
                   IF TYPE = 17 THEN%IF SPECIAL CHARACTER               17605000
              BEGIN KEY ~ OHLNK (OCUR); CAT~OFOL (OCUR);                17610000
                             %PICK UP KEY AND CATEGORY FOR IDENT        17610001
                   GO TO DNX                                            17615000
              END;                                                      17620000
         COMMENT SPECIAL REGISTERS  ;                                   17625000
                   IF TYPE = 18 THEN%IF "TALLY" OR "TODAYS-DATE"        17630000
              BEGIN TYPE ~ 8;                                  %CJC 061 17635000
                   IF ISYMB[0].[24:12] = "TO" THEN %TODAYS-DATE%CJC 061 17636000
              BEGIN CNSTFLG ~ TRUE;                            %CJC 061 17637000
                   EMIL(LITC,5);       EMIL(LITC,1);           %CJC 061 17638000
                   EMIL(OPR,COM);                              %CJC 061 17639000
                   EMIL(LITC,1);       EMIL(DESC,31);          %CJC 061 17640000
                   EMIL(OPR,STD);                              %CJC 061 17641000
              END; GO TO ELE;                                  %CJC 061 17642000
              END;                                             %CJC 061 17643000
                   EIND~ 13; EIND.[32:8]~83; ERP (EIND,0)      ;        17645000
                             %IF UNIDENTIFIED TYPE                      17645001
       DNX:                                                             17650000
                    SYNF~FALSE;%SET SYNONYM FLAG OFF                    17650050
              END;                                                      17655000
COMMENT **************************   RECOV   *************************; 17657000
COMMENT RECOVERY PROCEDURE FOR PROCEDURE DIVISION;                      17660000
PROCEDURE RECOV;                                                        17665000
              BEGIN                                                     17670000
                   COMPE ~ TRUE;  DN;%SET DID NOT COMPILE FLAG, SCAN.   17675000
             WHILE (SCLAS!3 AND KEY<900 AND KEY!718 AND KEY!473) DO     17680000
                             %SCAN PAST CURRENT STATEMENT.              17680001
                   DN                                                   17685000
              END;                                                      17690000
PROCEDURE STATMT ;FORWARD ;                                             17695000
PROCEDURE IFSTMNT;FORWARD ;                                             17700000
                   PROCEDURE GETIT;  FORWARD;                           17705000
COMMENT ***************      HASHED              **********************;17715000
PROCEDURE HASHED;                                                       17720000
              BEGIN INTEGER X,J,K,Y,A,Z,L,M,SAV,I,Q,RXD,  COMMENT 6- 1; 17725000
                   MPX,MQX,MRX,                                %CJC 027 17725002
                   LABELGTH,LABELPX;                      COMMENT 6- 1; 17725004
                 BOOLEAN FIRST,PRESENT;                   COMMENT 6- 1; 17725006
                 LABEL FILEFIN,ZX,ZY,ZZ;                  COMMENT 6- 1; 17725008
                   IF PRTCTR > 511 THEN                   COMMENT 4-17; 17726000
              BEGIN  ERP(15 & 8[32:40:8],"PRT   ");       COMMENT 4-17; 17727000
         COMMENT PRT SIZE ERROR; COMPE~TRUE;              COMMENT 4-17; 17728000
              END;                                        COMMENT 4-17; 17729000
                   REL [ 9 ] ~ ALFAL ;                                  17760000
                   REL [ 10 ] ~ NUML ;                                  17915000
                   UPIT;                                                18045000
                   IF HASH THEN                           COMMENT 7-02; 18102000
              BEGIN                                                     18105000
                   FOR X ~ 39 STEP 20 WHILE X < FIBX DO                 18425000
              BEGIN                                                     18430000
                   FIRST ~ TRUE; PRESENT ~ FALSE;                       18435000
COMMENT FILE OCUR; Y~FIB[X.[38:3],X.[41:7]].[33:15]; JCV(Y+2,J,K);      18440000
                   LABELGTH~DICT[J,K].[23:10];                          18440500
         COMMENT Y~USERS LABEL OCUR; Y~DICT[J,K].[33:15];               18445000
                   IF Y = 0 THEN GO TO FILEFIN;                         18450000
         COMMENT A~Y~DN3 OCUR; A~Y~OFOL(Y);                             18455000
ZZ:                JCV(Y,J,K);                                          18460000
                   IF DICT[J,K].[9:1]! 0 THEN                           18465000
              BEGIN  PRESENT ~ TRUE; L ~ MAPSZ(Y);                      18470000
                   IF L> 63 THEN L~63;                                  18475000
                   IF FIRST THEN                                        18480000
         COMMENT SWITCH TO DETERMINE ROUTINE FCR WANTS;                 18482000
              BEGIN  K~X-11; FIB[K.[38:3],K.[41:7]].[38:10]~PRTCTR;     18485000
                   T10 ~ SEG[0,0];                                      18495000
                   WHILE(CREG.[45:3])!0 DO EMIL(DIA,0);   COMMENT 8-10; 18496000
                   MAKELABEL(0,PRTCTR,((CREG+7)DIV 8)-1,0);             18500000
                   UPIT;                                                18505000
                   EMIL(OPDC,897)     ;  EMIL(OPR,DUP)     ;            18510000
                   EMIL(OPR,ADD)     ;  EMIL(OPR,BFW)     ;             18515000
                   SAV ~CREG;                                           18520000
                   EMIL(LITC,0);                                        18525000
                   EMIL(OPR,BFW)     ;                                  18530000
                   EMIL(LITC,0);                                        18535000
                   EMIL(OPR,BFW)     ;                                  18540000
                   EMIL(LITC,0); EMIL(OPR,BFW);                         18540500
                   FIRST~FALSE;                                         18545000
              END;                                                      18550000
         COMMENT CODE FOR ADD OF DN4 TO DN3;                            18552000
                   EMIL(OPR,MKS)     ;                                  18555000
                   JCV(Y+2,J,K);                          COMMENT 6-01; 18560000
                   OAS(MPX,MQX,MRX,DICT[J,K].[33:15]);    COMMENT 6-01; 18565000
                   EMIL(LITC,MQX); EMIL(DESC,MPX);        COMMENT 6-01; 18570000
                   I ~ MAPSZ(DICT[J,K].[33:15]);          COMMENT 6-01; 18572000
                   OAS(LABELPX,MQX,RXD,Y);                COMMENT 6-01; 18575000
                   EMIL(LITC,MQX); LABELPX~LABELPX+1;     COMMENT 6-01; 18580000
                   EMIL(DESC,LABELPX);                    COMMENT 6-01; 18585000
                   EMIL(OPR,CMN);                         COMMENT 6-1;  18605500
COMMENT TEMPORARY; SGMTLVL ~ SGMTLVL + 1;                               18605501
                   CEMLT(2,RSA);                          COMMENT 6-1;  18610000
                   IF MRX!0 THEN CEMLT(MRX,SFS);          COMMENT 6-1;  18610050
                   Q~IF L=0 THEN 0 ELSE I DIV L;          COMMENT 6-1;  18610500
                   IF Q!0 THEN                            COMMENT 6-1;  18615000
              BEGIN CEMLT(Q,BNS); CEMLT(1,RDA);           COMMENT 6-1;  18620000
                   IF RXD!0 THEN CEMLT(RXD,SFD);          COMMENT 6-1;  18621000
                   CEMLT(IF L<I THEN L ELSE I,FAD);       COMMENT 6-1;  18622000
                   CEMLT(0,ENS);                          COMMENT 6-01; 18622500
              END;                                        COMMENT 6-01; 18623000
                   A1~IF L=0 THEN 0 ELSE I MOD L;         COMMENT 6-01; 18623500
                   IF A1!0 THEN                           COMMENT 6-01; 18624000
              BEGIN IF Q!0 THEN                           COMMENT 6-01; 18624500
              BEGIN CEMLT(1,RDA);                         COMMENT 6-01; 18625000
              END;                                        COMMENT 6-01; 18626000
                   IF RXD!0 THEN CEMLT(RXD,SFD);          COMMENT 6-1;  18627000
                   CEMLT(A1,FAD);                         COMMENT 6-01; 18628000
              END;                                        COMMENT 6-01; 18630000
                   CEMLT(OPR,CMX);                        COMMENT 6-1;  18632000
COMMENT TEMPORARY; SGMTLVL ~ SGMTLVL - 1;                               18632001
              END;                                                      18635000
                   IF OFOL(Y)!0 THEN                                    18645000
              BEGIN                                                     18650000
                   Y~OFOL(Y);                                           18655000
                   GO TO ZZ;                                            18660000
              END;                                                      18665000
                   IF NOT PRESENT THEN GO TO FILEFIN;EMIL(OPR,XIT)     ;18670000
                   Y~A;                                                 18675000
                   EMIT(LITC,(CREG-SAV -4)DIV 2,SAV );                  18680000
                   FIRST ~ TRUE;                                        18685000
ZY:                                                                     18690000
                   JCV(Y,J,K);                                          18695000
                   IF DICT[J,K].[9:1] ! 0 THEN                          18700000
         COMMENT COMPARE OF COMPILED TO READ LABEL;                     18702000
              BEGIN                                                     18705000
                   EMIL(LITC,0)     ;                                   18710000
                   EMIL(OPR,MKS)     ;                                  18715000
                   OAS(MPX,MQX,RXD,Y);                    COMMENT 6-1;  18720000
                   EMIL(LITC,MQX)     ;                                 18730000
                   EMIL(DESC,MPX+1);                                    18735000
                   EMIL(LITC,MQX)     ;                                 18745000
                   EMIL(DESC,MPX);                                      18750000
                   EMIL(OPR,CMN);                         COMMENT 6-1;  18752000
COMMENT TEMPORARY; SGMTLVL ~ SGMTLVL + 1;                               18752001
                   CEMLT(2,RSA);                          COMMENT 6-1;  18755000
                   IF MRX!0 THEN CEMLT(MRX,SFS);          COMMENT 6-1;  18757000
                   IF RXD!0 THEN CEMLT(RXD,SFD);          COMMENT 6-1;  18760000
                   CEMLT(L,CNE); CEMLT(2,JFC);            COMMENT 6-1;  18762000
                   CEMLT(1,SEC); CEMLT(4,STC);            COMMENT 6-1;  18763000
                   CEMLT(0,CMX);                          COMMENT 6-1;  18763500
COMMENT TEMPORARY; SGMTLVL ~ SGMTLVL - 1;                               18763501
                   IF NOT FIRST THEN                                    18765000
                   EMIL(OPR,LND)     ;                                  18770000
                   FIRST ~ FALSE                                        18775000
              END;                                                      18780000
                   IF OFOL(Y)!0 THEN                                    18785000
              BEGIN                                                     18790000
                   Y~OFOL(Y);                                           18795000
                   GO TO ZY;                                            18800000
              END;                                                      18805000
                   EMIL(OPR,RTN)     ;                                  18810000
                   Y~A;                                                 18815000
                   SAV ~ SAV + 2;                                       18820000
                   EMIT(LITC,(CREG-SAV-4) DIV 2,SAV);                   18825000
ZX:                                                                     18830000
                   JCV(Y,J,K);                                          18835000
         COMMENT DN4 OCUR;                                              18840000
                   IF DICT[J,K].[9:1] ! 0 THEN                          18845000
         COMMENT MOVE OF COMPILED LABEL TO READ LABEL;                  18847000
              BEGIN                                                     18850000
                   L ~ MAPSZ(Y);                                        18855000
                   IF L> 63 THEN L~63;                                  18860000
                   EMIL(OPR,MKS)     ;                                  18865000
                   OAS(MPX,MQX,MRX,Y);                                  18870000
                   EMIL(LITC,MQX)     ;                                 18880000
                   EMIL(DESC,MPX+1);                                    18885000
                   EMIL(LITC,MQX)     ;                                 18895000
                   EMIL(DESC,MPX);                                      18900000
                   EMIL(OPR,CMN);                         COMMENT 6-1;  18902000
COMMENT TEMPORARY; SGMTLVL ~ SGMTLVL + 1;                               18902001
                   CEMLT(2,RSA);                          COMMENT 6-1;  18905000
                   IF MRX!0 THEN                          COMMENT 6-1;  18907000
              BEGIN CEMLT(MRX,SFS); CEMLT(MRX,SFD);       COMMENT 6-1;  18910000
              END;                                        COMMENT 6-1;  18912000
                   CEMLT(L,TRS); CEMLT(0,CMX);            COMMENT 6-1;  18913000
COMMENT TEMPORARY; SGMTLVL ~ SGMTLVL - 1;                               18913001
              END;                                                      18915000
                   IF OFOL(Y)!0 THEN                                    18920000
              BEGIN                                                     18925000
                   Y~OFOL(Y);                                           18930000
                   GO TO ZX;                                            18935000
              END;                                                      18940000
                   EMIL(OPR,XIT)     ;                                  18945000
                   Y~A; SAV~SAV+2; EMIT(LITC,(CREG-SAV-4) DIV 2,SAV);   18945050
                   EMIL(OPR,MKS); EMIL(LITC,8); EMIL(DESC,LABELPX);     18946000
                   EMIL(OPR,CMN);                         COMMENT 6-1;  18947000
COMMENT TEMPORARY; SGMTLVL ~ SGMTLVL + 1;                               18947001
                   CEMLT(1,RSA); CEMLT(8,TRP);            COMMENT 6-1;  18948000
                   CEMLT(48,48); CEMLT(48,48);            COMMENT 6-1;  18950000
                   CEMLT(48,48); CEMLT(48,48);            COMMENT 6-1;  18952000
                   CEMLT(LABELGTH-10,TRW); CEMLT(0,CMX);  COMMENT 7-08; 18954000
COMMENT TEMPORARY; SGMTLVL ~ SGMTLVL - 1;                               18954001
                   EMIL(OPR,XIT);                         COMMENT 7-08; 18954500
FILEFIN:      END END END ;                                             18955000
PROCEDURE ESTORE(X,Y,Z,A); VALUE X,Y,Z,A; INTEGER X,Y,Z,  COMMENT 9-01; 18960000
    A; FORWARD;                                           COMMENT 9-01; 18962000
PROCEDURE MONGEN(X,Y,Z); VALUE X,Y,Z; INTEGER X,Y,Z; FORWARD;           18965000
COMMENT ****************     COPY CODE           **********************;18970000
PROCEDURE COPICODE (SOURCE,SINDEX,DEST,DINDEX,LENGTH);                  18975000
                             %MOVES GENERATED CODE FROM 2 D ARRAY       18975001
    VALUE LENGTH,SINDEX;       % (8 | 128) TO A LIKE ARRAY.             18980000
                 INTEGER SINDEX,DINDEX,LENGTH ;                         18985000
                   ARRAY SOURCE[0,0];                                   18990000
                   ARRAY DEST  [0,0];                                   18995000
            BEGIN INTEGER T1,T2,T4,T5,T6,T7,T8,T9,T0,T3;                19000000
    LABEL Z1;                                                           19005000
                   IF LENGTH ! 0 THEN                                   19010000
                             %MUST BE AT LEAST ONE WORD OF CODE.        19010001
              BEGIN                                                     19015000
                   T9 ~ LENGTH;%SAVE LENGTH OF CODE.                    19020000
                   T1 ~ SINDEX;                                         19025000
                   T4 ~ DINDEX;                                         19030000
       Z1:         T0~T1.[38:10];%CHARACTER LOC WITHIN SCOURCE ROW.     19035000
                   T2 ~ (1024 - T0);                                    19040000
                             %DISTANCE TO END OF SCOURCE ROW(CHAR)      19040001
                   IF T2 > T9 THEN T2 ~ T9;%IS CODE ALL IN ONE ROW      19045000
                   T3 ~T4.[38:10];%CHARACTER LOC IN DEST ROW.           19050000
                   T5 ~ (1024 - T3);%DISTANCE TO END OF DEST ROW(CHAR). 19055000
                   IF T5 > T9 THEN T5 ~ T9;                             19060000
                             %CAN CODE FIT IN ONE DEST ROW.             19060001
                   T6 ~ ( IF T2 < T5 THEN T2 ELSE T5);                  19065000
                             %SMALLEST OF 1)SZ OF CODE, 2)ROOM          19065001
                             % LEFT IN SCOURCE ROW, 3)ROOM LEFT IN      19065002
                   IF T6 > 62 THEN T6 ~ 62;                             19070000
                             %MAX MOVE PER CALL ON CHARTRAN.            19070001
                   COMMENT T6 IS NUMBER OF CHAR TO BE MOVED ON CALL;    19075000
                   T9 ~ T9 - T6;%CODE REMAINING TO BE MOVED.            19080000
                  CHRTRAN(SOURCE[T1.[35:3],T1.[38:7]],T1.[45:3],        19085000
                   DEST[T4.[35:3],T4.[38:7]],T4.[45:3],T6);             19090000
                   IF T9 ! 0 THEN%IF MORE CODE RESET INDICIES, REPEAT   19095000
              BEGIN T1 ~ T1 + T6;  T4 ~ T4 + T6; GO TO Z1;              19100000
                             % ABOVE. SEGMENT UP TO 1023 WORDS CAN      19100001
              END              % BE MOVED.                              19105000
                   ELSE DINDEX ~ DINDEX + LENGTH;                       19110000
                             %ADJUST APPLICABLE " CREG ".               19110001
              END                                                       19115000
              END;                                                      19120000
COMMENT  ****************    ERROR PRINT 1       **********************;19125000
PROCEDURE ERP1(K1,K2,K3,K4) ; COMMENT CCONCATONATES 4 DICTIONARY KEYS,  19130000
                   CALLS ON ERP, AND RECOV ;                            19135000
 VALUE K1,K2,K3,K4;                                                     19140000
 INTEGER K1,K2,K3,K4;                                                   19145000
              BEGIN LABEL EDE;EDE:                        COMMENT 8-27; 19150000
                   COMPA := TRUE;                                       19154000
                   ERP(K1&K2[32:40:8]&K3[24:40:8]&K4[16:40:8],0);       19155000
                   RECOV ;     %GETOUT IS A GLOBAL WHICH INDICATES      19165000
                             % THAT AN ERROR HAS OCCURRED.              19165001
                   GETOUT~TRUE;                                         19170000
              END  ;                                                    19175000
COMMENT ****************     LITERAL VALUE       **********************;19180000
PROCEDURE LITVAL ; COMMENT GENERATES CODE TO GET VALUE OF CURRENT       19185000
                   NUMERIC LITERAL TO TOP OF STACK ;                    19190000
              BEGIN                                                     19195000
    INTEGER L ;                                                         19200000
                   IF LGTH > 11 THEN COMMENT DOUBLE PRECISION ;         19205000
              BEGIN                                                     19210000
                   IF CNQ.[41:7]>124 THEN%IF AT THE END OF A ROW OF THE 19211000
              BEGIN CNR ~ 0; CNQ ~ CNQ + 103 ;                          19212000
                             % CONSTANT POOL, AJDUST TO THE NEXT        19212001
                   CNQ . [ 41 :7 ] ~ 0 ;% ROW.                          19213000
              END  ;                                                    19214000
            CHRTRAN(ISYMB[0],  4,CNP[CNQ.[38:3],CNQ.[41:7]],CNR,LGTH);  19215000
                             %MOVE THE LITERAL STRING TO THE POOL.      19215001
                   EMIL(LITC,0)     ; COMMENT CONVERT AT OBJ. TIME ;    19220000
                   EMIL(OPR,MKS)     ;                                  19225000
                   EMIL (LITC,CNQ-1);                                   19230000
                   EMIL(DESC,CNPL)     ;                                19235000
                   EMIL(LITC,CNR);%CALLING SEQUENCE TO INPUT CONVERT.   19240000
                   EMIL(LITC,0)     ; COMMENT UNSIGNED ;                19245000
                   EMIL(LITC,LGTH)     ;                                19250000
                   EMIL(OPDC,ICV1L)     ;                               19255000
                   CNR ~ CNR + LGTH ; COMMENT ASSIGN TO CONSTANT POOL ; 19260000
                   CNQ ~ CNQ + CNR DIV 8 ;                              19265000
                   CNR ~ CNR MOD 8 ;%UPDATE CONSTANT POOL INDEX.        19270000
              END                                                       19275000
                   ELSE                                                 19280000
              BEGIN                                                     19285000
                   L ~ ICV1(ISYMB[0],4, 0 , LGTH) ;                     19290000
                   IF L > 1023 THEN COMMENT ASSIGN TO CONSTANT POOL ;   19295000
              BEGIN                                                     19300000
                   IF CNR ! 0 THEN COMMENT WORD JUSTIFY ;               19305000
                             %A SINGLE PRECISION LITERAL WHOSE          19305001
              BEGIN            % VALUE IS > 1023 MUST BE ASSIGNED       19310000
                   CNR ~ 0 ;                                            19315000
                   CNQ ~ CNQ+1 ;% ADJUSTMENT AND RECALLED AT OBJ.       19320000
              END  ;           % TO THE CONSTANT POOL AFTER WORD        19325000
                   EMIL (LITC,CNQ-1);                                   19330000
                             %A LITERAL { 1023 IS EMITTED DIRECTLY      19330001
                   EMIL(OPDC,CNPL)      ;                               19335000
                   CNP[CNQ.[38:3],CNQ.[41:7]]  ~ L;                     19340000
                   CNQ ~ CNQ + 1 ;                                      19345000
              END                                                       19350000
                   ELSE                                                 19355000
                   EMIL(LITC,L)      ;%SCAN PAST THE LITERAL SYMBLE.    19360000
              END  ;                                                    19365000
                   DN;                                                  19370000
              END  ;                                                    19375000
                        PROCEDURE SUBLST;FORWARD;                       19380000
COMMENT ***************************  VALU  *********************  12-1; 19385000
PROCEDURE VALU(OCUR,SEK,START,LGTH,V); COMMENT GENERATES CODE TO GET    19390000
                   AN OPERAND TO THE TOP OF THE STACK;                  19395000
VALUE OCUR,START,LGTH,V;                                                19400000
INTEGER OCUR,START,LGTH;                                                19405000
INTEGER V; COMMENT 0=COPICODE 1=SUBLST 2=CALLED BY MOVE;                19410000
ARRAY SEK[0,0];                %THIS CHANGE EMITS TAILOR MADE           19415000
              BEGIN            %CODE FOR IN LINE INPUT-CONVERT &        19420000
INTEGER SGN ,SIZ,USG,PXX,QXX,RXX,SPX,SQX,SRX,I,J,K;                     19430000
                             %IN LINE CODE TO GET DN SIGN.              19430001
BOOLEAN PREC;                  %INSERTED 1-65. WRITTEN BY BERMAN.       19435000
LABEL SIMPLECMP,SGNCHECK,DISPLAY,FIN;                                   19440000
    INTEGER MSD,MS,LSD,RX1,PX1,S;%CHECKED OUT BY HUCKSTEP.              19445000
                   SGN~OSGN(OCUR);                                      19480000
                   SIZ~OFSZ(OCUR);                                      19485000
                   USG~OUSG(OCUR);                                      19490000
                   OAS(PXX,QXX,RXX,OCUR);                               19495000
                             %SIMPLE COMPUTATIONAL VALUE WHERE          19495001
                   IF V=2 THEN %IF FROM MOVE AND SGA!J AND AUSAGE       19496000
              BEGIN RXX~RXX+A1; SIZ~SIZ-A1-RNL;                         19497000
                             %IS DISPLAY THEN A1=ALP-BLP(IF >0)         19497001
              END;             %AND RNL=ARP-BRP (IF >0).                19498000
                             %TRUNCATION IS DONE IN INPUT               19498001
                             %CONVERT (IF POSSIBLE) TO BY-PASS          19498002
                   PREC~SIZ>11;%TURNED OUT BY ESTORE.                   19500000
                   IF SGN=3 THEN COMMENT GET THE DATANAME SIGN ADDRESS; 19505000
                             %                                          19505001
                   IF OTYP(OCUR) = 11 THEN  % LEVEL 88         %TR 410  19506000
              BEGIN JCV(OILNK(OHLNK(OCUR))+3,J,K);             %TR 410  19507000
                   OAS(SPX,SQX,SRX,INFO[J,K].[18:15]);         %TR 410  19508000
              END  ELSE                                        %TR 410  19509000
              BEGIN JCV(OILNK(OCUR)+3,J,K);                    %TR 410  19510000
                   IF SIGNISDN(INFO[J,K].[18:15]) THEN         %TR 410  19511000
                   OAS(SPX,SQX,SRX,INFO[J,K].[18:15])          %TR 410  19512000
                   ELSE SGN ~ 1;                               %TR 410  19515000
              END; IF LGTH=0 AND V=1 THEN                               19520000
                   DN;COMMENT SCAN PAST THE DATANAME;                   19525000
                   IF USG=0 THEN GO TO DISPLAY;                         19530000
                   IF (V=2 AND START=0) OR LGTH=0 THEN                  19535000
                   GO TO SIMPLECMP;                                     19536000
                   IF V=2 THEN                                          19537000
              BEGIN IF PREC THEN                                        19538000
              BEGIN EMIL(LITC,1); EMIL(OPDC,START);                     19539000
                   EMIL(OPR,ADD); EMIL(OPDC,PXX);%                      19540000
              END;                                                      19541000
                   EMIL(OPDC,START);                                    19542000
              END ELSE         %SUBLST SCANS PAST THE ")".              19543000
              BEGIN IF V=1 THEN SUBLST ELSE                             19544000
                   COPICODE(SEK,START,SEG,CREG,LGTH);                   19545000
                             %SUBLST CALCULATES THE DYNAMIC WORD        19545001
                   IF PREC THEN COMMENT DOUBLE PRECISION;               19550000
                             % ADDRESS (QX) LEAVING IT AT THE TOP       19550001
              BEGIN EMIL(OPR,DUP);% OF THE STACK. 1 IS ADDED TO THIS    19555000
                   EMIL(LITC,1);% TO OBTAIN THE LEAST SIGNIFICANT       19560000
                   EMIL(OPR,ADD);% DIGITS OF A DOUBLE PRECISION         19565000
                   EMIL(OPDC,PXX);% VALUE                               19570000
                   EMIL(OPR,XCH);                                       19575000
              END;                                                      19577000
              END; EMIL(OPDC,PXX);                                      19580000
                   GO TO SGNCHECK;                                      19585000
SIMPLECMP:         IF PREC THEN COMMENT DOUBLE;                         19590000
              BEGIN EMIL(IF USG=2 THEN OPDC ELSE LITC,QXX+1);           19595000
                   IF USG!2 THEN EMIL(OPDC,PXX);%                       19600000
              END; EMIL(IF USG=2 THEN OPDC ELSE LITC,QXX);              19605000
                   IF USG!2 THEN EMIL(OPDC,PXX);                        19610000
SGNCHECK:          IF SGN=3 THEN COMMENT ATTACH THE DATANAME SIGN;      19615000
              BEGIN EMIL(LITC,0);                                       19620000
                   EMIL(OPR,MKS);                                       19625000
                   EMIL(LITC,SQX);%                                     19630000
                   EMIL(DESC,SPX);                                      19631000
                   EMIL(OPR,CMN);                                       19632000
COMMENT TEMPORARY; SGMTLVL~SGMTLVL+1;                                   19632500
                   CEMLT(1,RSA);                                        19633000
                   IF SRX!0 THEN%                                       19635000
                   CEMLT(SRX,SFS);                                      19640000
                   CEMLT(3,SED);                                        19645000
                   CEMLT(1,TRN);%                                       19650000
                   CEMLT(2,JFC);%                                       19655000
                   CEMLT(1,SEC);%1=MINUS. 0=PLUS.                       19660000
                   CEMLT(3,STC);                                        19665000
                   CEMLT(0,CMX);                                        19670000
COMMENT TEMPORARY; SGMTLVL~SGMTLVL-1;                                   19672000
                   EMIL(LITC,1);%                                       19675000
                   EMIL(OPR,BFC);%                                      19680000
                   EMIL(OPR,SSN);                                       19685000
              END; GO TO FIN;                                           19690000
DISPLAY:           EMIL(LITC,0);                                        19695000
                   IF SIZ>8 THEN%                                       19705000
              BEGIN EMIL(LITC,0); MS~1;                                 19707000
                   IF SIZ>11 THEN                                       19710000
              BEGIN EMIL(LITC,0); MSD~1;                                19711000
              END;                                                      19712000
              END;                                                      19713000
                   EMIL(OPR,MKS);%                                      19715000
                   IF V=2 THEN                                          19717000
              BEGIN IF START=0 THEN EMIL(LITC,QXX) ELSE                 19717500
              BEGIN RX1~1; EMIL(OPDC,LGTH);                             19718000
                   IF A1!0 THEN                                         19718500
              BEGIN EMIL(LITC,A1); EMIL(OPR,ADD);                       19719000
              END;                                                      19719500
                   EMIL(OPDC,START);                                    19720000
              END;                                                      19720010
              END ELSE                                                  19720020
              BEGIN                                                     19720025
                   IF LGTH=0 THEN EMIL(LITC,QXX)ELSE COMMENT SUBSCRIPT; 19720030
              BEGIN RX1~1;                                              19720040
                   IF V=1 THEN SUBLST ELSE                              19720050
                   COPICODE(SEK,START,SEG,CREG,LGTH);                   19720060
              END;                                                      19720065
              END; EMIL(DESC,PXX);                                      19720070
                   IF SGN>1 OR SIZ>8 THEN                               19720080
              BEGIN S~1;                                                19720090
                   IF SGN=3 THEN COMMENT DATANAME SIGN;                 19720100
              BEGIN EMIL(LITC,SQX);                                     19720110
                   EMIL(DESC,SPX);                                      19720120
              END  ELSE COMMENT J SIGN OR SIZ>8;                        19720130
                   EMIL(LITC,0);                                        19720140
              END; EMIL(OPR,CMN);                                       19720150
COMMENT TEMPORARY; SGMTLVL~SGMTLVL+1;                                   19720160
                   PX1~S+1; IF RX1!0 THEN RX1~PX1+1;                    19720190
                   LSD~PX1+(IF RX1=0 THEN 2 ELSE 3);                    19720200
                   IF MS!0 THEN MS~LSD+1;                               19725000
                   IF MSD!0 THEN MSD~MS+1;                              19730000
                   CEMLT(PX1,RSA);                                      19740000
                   IF RX1!0 THEN COMMENT SUBSCRIPTED;                   19745000
              BEGIN CEMLT(RX1,CRF);                                     19750000
                   CEMLT(0,SFS);                                        19755000
              END  ELSE IF RXX!0 THEN                                   19755500
                   CEMLT(RXX,SFS);%                                     19760000
                   IF SGN=2 THEN COMMENT SAVE J SIGN ADDRESS;%          19765000
                   CEMLT(S,SSA);%                                       19770000
                   IF MSD!0 THEN                                        19771000
              BEGIN CEMLT(MSD,SED);                                     19772000
                   CEMLT(SIZ-11,ICV);                                   19773000
                   CEMLT(3,ICV);                                        19774000
                   CEMLT(8,ICV);                                        19775000
              END  ELSE IF MS!0 THEN                                    19776000
              BEGIN CEMLT( MS,SED);                                     19777000
                   CEMLT(SIZ-8,ICV);                                    19778000
                   CEMLT(8,ICV);                                        19779000
              END  ELSE                                                 19780000
              BEGIN CEMLT(LSD,SED);                                     19781000
                   CEMLT(SIZ,ICV);                                      19782000
              END;                                                      19783000
                   IF SGN{1 THEN                                        19784000
              BEGIN IF MS=0 THEN                                        19785000
              BEGIN CEMLT(0,CMX);                                       19786000
COMMENT TEMPORARY; SGMTLVL~SGMTLVL-1;                                   19786500
                   GO TO FIN;                                           19787000
              END; CEMLT(1,SRS);                                        19788000
              END  ELSE                                                 19789000
              BEGIN CEMLT(S,RSA);                                       19790000
                   IF SGN=3 AND SRX!0 THEN                              19791000
                   CEMLT(SRX,SFS);                                      19792000
              END; CEMLT(S,SED);CEMLT(1,TRN);                           19793000
                   CEMLT(3|(REAL(MSD!0)+REAL(MS!0)+REAL(SGN>1)),JFC);   19794000
                   IF MSD!0 THEN                                        19795000
              BEGIN CEMLT(MSD,SED);                                     19796000
                   CEMLT(1,BSD);                                        19797000
                   CEMLT(1,BIS);                                        19798000
              END; IF MS!0 THEN                                         19799000
              BEGIN CEMLT(MS,SED);                                      19799010
                   CEMLT(1,BSD);                                        19799020
                   CEMLT(1,BIS);                                        19799030
              END; IF SGN>1 THEN                                        19799040
              BEGIN CEMLT(LSD,SED);                                     19799050
                   CEMLT(1,BSD);                                        19799060
                   CEMLT(1,BIS);                                        19799070
              END; CEMLT(0,CMX);                                        19799080
COMMENT TEMPORARY; SGMTLVL~SGMTLVL-1;                                   19799085
                   IF MS!0 THEN                                         19799090
              BEGIN EMIL(OPR,XCH); EMIL(OPDC,TENTOTHE8);                19799100
                   EMIL(OPR,MUL);                                       19799110
                   EMIL(OPR,ADD);                                       19799120
              END; IF MSD=0 THEN GO TO FIN;                             19799130
                   EMIL(LITC,STDLOC);                                   19799140
                   EMIL(OPR,STD);                                       19799150
                   EMIL(LITC,0);                                        19799160
                   EMIL(OPR,XCH);                                       19799170
                   EMIL(LITC,0);                                        19799180
                   EMIL(OPDC,TENTOTHE11);                               19799190
                   EMIL(OPR,DLM);                                       19799200
                   EMIL(LITC,0);                                        19799210
                   EMIL(OPDC,STDLOC);                                   19799220
                   EMIL(OPR,DLA);                                       19799230
FIN:          END;                                                      19799240
PROCEDURE SLT(X); VALUE X; INTEGER X; FORWARD ;                         19800000
PROCEDURE SRT(X); VALUE X; INTEGER X; FORWARD ;                         19810000
PROCEDURE FORMULA ; FORWARD ;                                           19815000
COMMENT  ****************    SUBSCRIPT LIST      **********************;19820000
PROCEDURE SUBLST  ; COMMENT EVALUATES A SUBSCRIPT LIST LEAVING THE      19825000
                   ITEM RX AND QX AT THE TOP OF THE STACK .             19830000
                   GLOBALS SSUBS AND  LSUBS WILL CONTAIN THE STARTING   19835000
                   ADDRESS AND LENGTH OF THE CODE PRODUCED  .           19840000
                   IF HOX ! 0 THEN RX AND QX WILL BE STORED IN THE      19845000
                   PRT LOCATIONS SPECIFIED BY THE GLOBALS HQX AND HRX;  19850000
              BEGIN                                                     19855000
     INTEGER USG,DIM,NORMF,I,C,L1,R1,ROCC,T1,RECSZQ,PXQ;                19860000
BOOLEAN P1,MON,WORD;                                                    19865000
    ARRAY OCIXX [0:SUBS] ;                                              19870000
LABEL S1,FIN;                                                           19875000
                   JCV(OILNK( OCUR)+1,L1,R1);COMMENT CHECK FOR MONITOR; 19875500
                   MON ~ BOOLEAN ( INFO [ L1,R1 ] . [ 3 : 1 ] ) ;       19875510
                   C~ CREG ;                                            19880000
                   USG ~ USAGE ;                                        19885000
                   DIM ~ SUBS ;                                         19890000
                   OAS ( PX,QX,RX,OCUR ) ;                              19891000
                    PXQ := PX;                                          19891003
                    RECSZQ := MAPSZ(OCUR);                              19891006
                   T1 ~ RX ;                                            19891010
                   FOR I ~ 0 STEP 1 UNTIL DIM - 1 DO                    19891020
                   T1 ~ T1 + OCIX  [I] MOD 8 ;                          19891030
                   WORD ~ T1 = 0 ;                                      19891040
                   NORMF ~ IF WORD THEN -QX ELSE -(RX & QX[30:33:15]);  19895000
                             %NORMF = NORMALIZING FACTOR USED TO        19895001
                             % ADJUSTS EACH SUBSCRIPT POSITION BY       19895002
                             % 1 AND ADD  THE ITEM WORD (QX) AND        19895003
                             % CHARACTER (RX) ADDRESS. NOTE:COBOL       19895004
                             % SUBSCRIPTS START AT 1 AND NOT 0.         19895005
                             % THE ITEM DESIRED NEED NOT START AT       19895006
                             % THE BEGINING OF THE PATTERN TO BE        19895007
                             % REPEATED.                                19895008
                   FOR I ~ 0 STEP 1 UNTIL DIM - 1 DO                    19900000
                             %SAVE THE CONTENTS OF OCIX FOR EACH        19900001
                   OCIXX[I] ~ IF WORD THEN OCIX[I] DIV 8 ELSE OCIX[I];  19905000
                             % LEVEL OF RECURSION ALLOWING A            19905001
                             %  SUBSCRIPT TO BE SUBSCRIPTED. OCIX       19905002
                   L1 ~ RLFP ;                                          19910000
                   R1 ~ RSCALE ; ROCC ~ ROCUR ;                         19915000
                   P1 ~ RPREC ;                                         19920000
                   RPREC ~ FALSE ;%SCAN PAST THE CURRENT SYMBOL AND     19921000
                   DN ;        % LOOK FOR A "(".                        19925000
                   IF KEY ! 451 THEN COMMENT "(" ;%SCAN PAST THE "(".   19930000
              BEGIN                                                     19935000
                   SYOUT(MSG[124], ISYMB , LGTH) ;                      19935500
                   ERP1(09,05,03,124);%"MISSING LEFT PARENTHESIS".      19940000
                   GO TO FIN ; COMMENT MISSING LEFT PAREN. ;            19945000
              END  ;                                                    19950000
                   DN ;                                                 19955000
                   FOR I ~ DIM - 1  STEP -1 UNTIL  0 DO                 19960000
                             %CAUTION THE CONTENTS OF OCIXX ARE         19960001
              BEGIN            % TAKEN FROM HIGH TO LOW ELEMENTS.       19965000
                   FORMULA ;   %EVALUATE THE SUBSCRIPT POSITION.        19970000
                             % NOTE: FORMULA INCLUDES A DATANAME        19970001
                             % OR LITERAL AS A SUBSET.                  19970002
                   IF GETOUT THEN GO TO FIN ;                           19975000
                             %IF AN ERROR OCCURED IN FORMULA YOUR       19975001
                             % DONE.                                    19975002
                   IF RSCALE < 0 THEN                                   19980000
                             %IF THE SCALE OF THE RESULT(RSCALE)        19980001
                   SLT(ABS(RSCALE))                                     19985000
                             % IS NEGATIVE(PP IN ITS PICTURE) THEN      19985001
                   ELSE IF RSCALE > 0 THEN COMMENT INTEGERIZE ;         19990000
                             % SHIFT IT LEFT. IF RSCALE POSITIVE        19990001
                   SRT(RSCALE) ;% SHIFT IT RIGHT(TRUNCATE TO AN         19995000
                             % INTEGER).                                19995001
                   IF MON THEN COMMENT SAVE VALUE FOR MONITOR ;         19995500
              BEGIN                                                     19995510
                   EMIL ( LITC, I+1 ) ;                                 19995520
                   EMIL ( DESC,PSD ) ;                                  19995530
                   EMIL ( OPR,ISN );                       COMMENT 5/18;19995540
              END  ;                                                    19995550
                   IF WORD AND OCIXX[I] =1 THEN GO TO S1;               19995555
                   IF OCIXX [ I ] > 1023 THEN COMMENT ASSIGN TO CNP;    19995560
              BEGIN IF CNR ! 0 THEN COMMENT WORD ADJUST ;               19995570
              BEGIN CNR ~ 0 ; CNQ ~ CNQ + 1 ;                           19995580
              END  ;                                                    19995590
                   EMIL ( LITC,CNQ-1 ) ;                                19995600
                   EMIL ( OPDC,CNPL ) ;                                 19995610
                   CNP [ CNQ. [ 38 : 3 ],CNQ. [ 41 : 7 ] ] ~ OCIXX [ I];19995620
                   CNQ ~ CNQ + 1 ;                                      19995630
              END  ELSE                                                 19995640
                   EMIL (LITC,OCIXX[I])      ;                          20000000
                   EMIL (OPR,MUL)       ;                               20005000
S1:                                                                     20006000
                   IF I ! DIM - 1 THEN%DONT ADD IF FIRST TIME THRU.     20010000
                   EMIL (OPR, ADD)     ;                                20015000
                   NORMF ~ NORMF + OCIXX[I] ;                           20020000
                             %ACCUMULATE NORMALIZING FACTOR.            20020001
              END  ;                                                    20025000
                   IF NORMF ! 0 THEN                                    20026000
              BEGIN                                                     20027000
                   IF NORMF > 1023 THEN COMMENT ASSIGN TO CONST. POOL ; 20027010
              BEGIN IF CNR ! 0 THEN COMMENT WORD ADJUST ;               20027020
              BEGIN CNR ~ 0 ; CNQ ~ CNQ + 1 ;                           20027030
              END  ;                                                    20027040
                   EMIL ( LITC,CNQ-1 ) ;                                20027050
                   EMIL ( OPDC,CNPL ) ;                                 20027060
                   CNP [ CNQ.[38:3],CNQ.[41:7]] ~ NORMF ;               20027070
                   CNQ ~ CNQ + 1 ;                                      20027080
              END  ELSE                                                 20027090
                   IF NORMF > 1023 OR NORMF < -1023 THEN                20027500
                             %IF VALUE FOR LITC LARGER THAN 1023        20027501
              BEGIN  IF CNR ! 0 THEN                                    20028000
                             %  IT WILL NOT FIT INTO LITC SYLLABLE      20028001
              BEGIN  CNR~0; CNQ~CNQ+1;                                  20028500
                             %  HENCE MUST GO IN CONSTANT POOL.         20028501
              END;  CNP[CNQ.[38:3],CNQ.[41:7]]~ ABS ( NORMF ) ;         20028700
                   EMIL(LITC,CNQ-1); EMIL(OPDC,CNPL); CNQ~CNQ+1;        20029000
              END ELSE                                                  20029500
                   EMIL(LITC,NORMF)      ;                              20030000
                   IF NORMF < 0 THEN EMIL ( OPR,ADD ) ELSE              20035000
                             %IF NORMF < 0 THEN NORMALIZE IN A          20035001
                   EMIL(OPR, SUB )       ;                              20040000
                             % POSITIVE DIRECTION ELSE A NEGATIVE       20040001
              END; IF NOT WORD THEN                      COMMENT 11-12; 20040500
              BEGIN EMIL(LITC,STDLOC); EMIL(OPR,ISN);    COMMENT 11-12; 20041000
              END;                                       COMMENT 11-12; 20042000
                   IF USG = 0 THEN COMMENT DISPLAY ;% DIRECTION.        20045000
               BEGIN IF MOVETOFLAG THEN%TO PORTION OF MOVE              20046000
               BEGIN     EMIL(OPR ,DUP); % COPY INDEX                   20046200
                         IF WORD THEN RECSZQ ~(RECSZQ+7) DIV 8;         20046400
                         IF RECSZQ GTR 1023 THEN                        20046600
               BEGIN         IF CNR ! 0 THEN                            20046800
               BEGIN            CNR := 0;                               20047000
                                CNQ := CNQ +1;                          20047200
               END;          EMIL(LITC,CNQ-1);                          20047400
                             EMIL(OPDC,CNPL);                           20047600
                             CNP[CNQ.[38:3],CNQ.[41:7]]:=RECSZQ;        20047800
                             CNQ := CNQ +1;                             20048000
               END ELSE EMIL(LITC,RECSZQ);                              20048200
                         EMIL(OPR ,ADD);                                20048400
                         IF NOT WORD THEN                               20048600
               BEGIN         EMIL(LITC,7);                              20048800
                             EMIL(OPR ,ADD);                            20049000
                             EMIL(DIA,30);                              20049200
                             EMIL(ISO,21);                              20049300
               END;      EMIL(LITC,1);                                  20049500
                         EMIL(OPR ,SUB);                                20049600
                         EMIL(OPR ,DUP);                                20049700
                         EMIL(LITC,1023);                               20049800
                         EMIL(OPR ,GRT);                                20050000
                         EMIL(LITC,1);                                  20050200
                         EMIL(OPR ,BFC);                                20050400
                         EMIL(LITC,1023);                               20050600
                         EMIL(DESC,PXQ);                                20050800
                         EMIL(OPR ,DEL);                                20051000
               END;  IF WORD THEN EMIL(LITC,0) ELSE                     20051200
              BEGIN EMIL ( OPR,DUP ) ;                                  20055000
                             %FOR DISPLAY ITEMS THE CHARACTER ADR       20055001
                   EMIL ( LITC,7 ) ;% (RX) IS THE 3 LOW ORDER BITS.     20060000
                   EMIL ( OPR,LND ) ;                                   20065000
                             %FOR COMPUTATIONAL ITEMS THESE BITS        20065001
                             % ARE 0 BECAUSE THE ITEM IS WORD           20065002
                             % JUSTIFIED AND THIS OPERATION IS          20065003
                             % NOT DONE.                                20065004
              END ;                                                     20066000
                   IF HQX ! 0 THEN COMMENT SAVE INRQX ;                 20070000
              BEGIN                                                     20075000
                   EMIL(LITC,HRX)     ;                                 20080000
                   EMIL(OPR,SND)     ;                                  20085000
              END  ;                                                    20090000
                   EMIL(OPR,XCH)     ;                                  20095000
              END  ;                                                    20100000
                   IF NOT WORD THEN                                     20101000
              BEGIN                                                     20102000
                   EMIL(DIA,30)     ;% [30:33:15].                      20110000
                   EMIL(ISO,21);                          COMMENT  D-1; 20115000
              END;                                                      20121000
                   IF HQX ! 0 THEN COMMENT SAVE AT HQX ;                20125000
              BEGIN                                                     20130000
                   EMIL(LITC,HQX)     ;                                 20135000
                   EMIL(OPR,SND)      ;                                 20140000
              END  ;                                                    20145000
                   IF KEY ! 456 THEN COMMENT ")" ;%CHECK FOR ")".       20150000
              BEGIN                                                     20155000
                   SYOUT(MSG[124], ISYMB , LGTH) ;                      20155500
                   ERP1(09,06,03,124) ;%"MISSING RIGHT PARENTHESIS".    20160000
                   GO TO FIN ; COMMENT MISSING RIGHT PAREN ;            20165000
              END  ;                                                    20170000
                   DN ;        %SCAN PAST THE ")".                      20175000
                   SSUBS ~ C ; %SSUBS = STARTIN ADDRESS OF THE          20180000
                   LSUBS ~ CREG - C ;                                   20185000
                             % SUBSCRIPT CODE AND LSUBS = LENGTH        20185001
                             % (IN CHARACTERS).                         20185002
                   RLFP ~ L1 ; %RESTORE THE INTERMEDIATE RESULT LEFT    20190000
                   RSCALE ~ R1 ; ROCUR ~ROCC ;                          20195000
                             % PART (RLFP),SCALE(RSCALE), OCCUR         20195001
                   RPREC ~ P1 ;% (ROCUR) AND PRECISION(RPREC) AS        20200000
                             % SAVED DURING INITIALIZATION.             20200001
    FIN :                                                               20205000
              END  ;                                                    20210000
COMMENT  ****************    ROUND               **********************;20215000
PROCEDURE ROUND ;                                                       20220000
              BEGIN                                                     20225000
 INTEGER Y ;                                                            20230000
 BOOLEAN S ;                                                            20235000
                   Y ~ RSCALE - OSCALE(ROCUR);                          20240000
                             %IF THE RECEIVING FIELD SCALE IS           20240001
                   IF Y > 0 THEN% { THE INTERMEDIATE RESULT SCALE       20245000
                             % (RSCALE) THEN NO ROUNDING REQUIRED.      20245001
              BEGIN                                                     20250000
                   S~ OSGND(ROCUR) ;                                    20255000
                   IF S THEN COMMENT SIGNED RECEIVING FIELD ;           20260000
                   EMIL(OPR,DUP)     ;                                  20265000
                   IF Y = 1 THEN EMIL(LITC,5)                           20270000
                             %WE ROUND BY ADDING 5,50,500,ETC.          20270001
                   ELSE IF Y = 2 THEN EMIL (LITC,50)                    20270500
                   ELSE IF Y = 3 THEN EMIL (LITC,500)                   20275000
                   ELSE                                                 20275500
              BEGIN IF CNR!0 THEN COMMENT WORD ADJUST;    COMMENT 7-21; 20280000
              BEGIN CNR~0;CNQ~CNQ+1;                      COMMENT 7-21; 20285000
              END; EMIL(LITC,CNQ-1);                      COMMENT 7-21; 20290000
                   EMIL (OPDC,CNPL);%TENX=POWER OF TEN TABLE.           20295000
                   CNP[CNQ.[38:3],CNQ.[41:7]]~IF Y{16 THEN COMMENT 7-21;20300000
                   5|POWR[Y-1] ELSE 5|10*(Y-1);           COMMENT 7-21; 20301000
                   CNQ~CNQ+1;                             COMMENT 7-21; 20302000
              END;                                        COMMENT 7-21; 20305000
                   IF S THEN COMMENT SIGNED ;                           20310000
              BEGIN                                                     20315000
                   EMIL(OPR,XCH)      ; COMMENT SET THE SIGN OF THE 1/2;20320000
                   EMIL(DIA,1)     ;%FOR SIGNED FIELDS,ADJUST THE SIGNS 20325000
                   EMIL(DIB,1)     ;% BEFORE ADDING.                    20330000
                   EMIL(TRB,1)     ;                                    20335000
              END  ;                                                    20340000
                   IF RPREC THEN COMMENT DOUBLE PRECISION ROUND ;       20345000
                             %RPREC= INTERMEDIATE RESULT PRECISION      20345001
              BEGIN            % AND DP ROUNDING IS DONE IF TRUE.       20350000
                   EMIL(LITC,0)     ;                                   20355000
                   EMIL(OPR,XCH)     ;                                  20360000
                   EMIL(OPR,DLA)     ;                                  20365000
              END                                                       20370000
                   ELSE                                                 20375000
                   EMIL(OPR,ADD)     ;                                  20380000
              END  ;                                                    20385000
              END;                                                      20390000
COMMENT********************  SHIFT LEFT  ******************************;20395000
PROCEDURE SLT(X) ; COMMENT GENERATOR FOR DECIMAL SHIFT LEFT ;           20400000
                             %X IS THE NUMBER OF DECIMAL DIGITS         20400001
VALUE X ; INTEGER X  ;         % TO BE SHIFTED.                         20405000
              BEGIN                                                     20410000
BOOLEAN P ;                                                             20415000
                   X ~ ABS(X) ;                                         20420000
                   P ~ RPREC AND ( RLFP + RSCALE + X ) > 11 ;           20425000
                             %IF THE INTERMEDIATE RESULT PRECISION      20425001
                   IF P THEN COMMENT DOUBLE PRECISION ;                 20430000
                             % (RPREC) IS SINGLE OR IF THE INTER-       20430001
                   EMIL(LITC,0) ;% MEDIATE RESULT SIZE (RLFP+RSCALE)    20435000
                             % WHEN SHIFTED X PLACES IS { 11 .          20435001
                             % DIGITS THEN SHIFT SINGLE PRECISION.      20435002
                   IF X=17 THEN                           COMMENT 7-24; 20435500
              BEGIN EMIL(LITC,16); EMIL(OPDC,TENX);       COMMENT 7-24; 20436000
                   EMIL(OPR,DLM); EMIL(LITC,0);           COMMENT 7-24; 20437000
                   EMIL(LITC,10);                         COMMENT 7-24; 20438000
              END ELSE                                    COMMENT 7-24; 20439000
                   IF X<4 THEN EMIL(LITC,POWR[X])      COMMENT 2-3 1200;20440000
                               %WE SHIFT BY MULTIPLYING BY 10,100,      20445000
                               % 1000,ETC.                              20450000
                   ELSE IF X { 16 THEN                                  20455000
              BEGIN                                                     20460000
                   EMIL(LITC,X);                                        20465000
                   EMIL(OPDC,TENX);%TENX = POWERS OF TEN TABLE.         20470000
              END ELSE                                                  20475000
              BEGIN IF CNR ! 0 THEN COMMENT WORD ADJUST ;               20475100
              BEGIN CNR ~ 0 ;                                           20475200
                   CNQ ~ CNQ + 1 ;                                      20475300
              END  ;                                                    20475400
                   EMIL ( LITC , CNQ - 1 ) ;                            20475500
                   EMIL ( OPDC, CNPL ) ;                                20475600
                   CNP [ CNQ.[ 38:3],CNQ.[41:7]]~ 10 * X;               20475700
                   CNQ ~ CNQ + 1 ;                                      20475800
              END  ;                                                    20475900
                   EMIL(OPR,IF P THEN DLM ELSE MUL);                    20480000
              END  ;                                                    20485000
COMMENT  ****************    SHIFT RIGHT         **********************;20495000
PROCEDURE SRT(X);  COMMENT GENERATOR FOR DECIMAL SHIFT RIGHT  ;         20500000
VALUE X ; INTEGER X ;          %X IS THE NUMBER OF DECIMAL DIGITS TO    20505000
                             % BE SHIFTED.                              20505001
              BEGIN                                                     20510000
                                                     COMMENT 2-3 1200;  20515000
LABEL FIN ;                                                             20520000
DEFINE QBL=STDLOC#,     RBL=28#;  % RBL = @34                  %TR 646  20521000
                   X ~ ABS(X) ;%IF THE INTERMEDIATE RESULT PRECISION    20525000
                               %IF THE INTERMEDIATE RESULT PRECISION    20530000
                   IF RPREC THEN COMMENT DOUBLE PRECISION; COMMENT 2-3; 20535000
                             % (RPREC) IS SINGLE OR IF THE INTER-       20535001
                   EMIL (LITC,0);% MEDIATE RESULT SIZE (RLFP+RSCALE)    20540000
                             % WHEN SHIFTED X PLACES IS { 11            20540001
                             % DIGITS THEN SHIFT SINGLE PRECISION.      20540002
                   IF X=17 THEN                           COMMENT 7-24; 20541000
              BEGIN EMIL(LITC,16); EMIL(OPDC,TENX);       COMMENT 7-24; 20542000
                   EMIL(OPR,DLD); EMIL(LITC,0);           COMMENT 7-24; 20543000
                   EMIL(LITC,10);                         COMMENT 7-24; 20544000
              END ELSE                                    COMMENT 7-24; 20544500
                   IF X<4 THEN EMIL(LITC,POWR[X])      COMMENT 2-3 1200;20545000
                               %WE SHIFT BY DIVIDING BY 10,100,1000,    20550000
                               % ETC.                                   20555000
                   ELSE IF X { 16 THEN                                  20560000
              BEGIN EMIL(LITC,X);                                       20565000
                   EMIL(OPDC,TENX);%TENX=POWERS OF TEN TABLE.           20570000
              END ELSE                                                  20575000
              BEGIN IF CNR ! 0 THEN COMMENT WORD ADJUST ;               20575100
              BEGIN CNR ~ 0 ;                                           20575200
                   CNQ ~ CNQ + 1 ;                                      20575300
              END  ;                                                    20575400
                   EMIL ( LITC , CNQ - 1 ) ;                            20575500
                   EMIL ( OPDC, CNPL ) ;                                20575600
                   CNP [ CNQ.[ 38:3],CNQ.[41:7]]~ 10 * X;               20575700
                   CNQ ~ CNQ + 1 ;                                      20575800
              END  ;                                                    20575900
                   IF NOT RPREC THEN                 COMMENT 2-3 1200;  20580000
              BEGIN EMIL( OPR,IDV);                                     20585000
                   GO TO FIN ;                                          20590000
              END  ;                                                    20590010
                   EMIL(OPR,DLD); COMMENT DOUBLE PREC. INTEGER DIV. ;   20590020
                   EMIL(LITC,QBL);                                      20590030
                   EMIL(OPR,STD);                                       20590040
                   EMIL(LITC,RBL);                                      20590050
                   EMIL(OPR,SND); COMMENT SAVE Y IN TEMP. ;             20590060
                   EMIL(OPDC,QBL);                                      20590070
                   EMIL(OPDC,RBL);                                      20590080
                   EMIL(OPDC,QBL);  COMMENT DUP ;                       20590090
                   EMIL(LITC,0);                                        20590100
                   EMIL(LITC,10);                                       20590110
                   EMIL(OPDC,TENX);                                     20590120
                   EMIL(OPR,DLD);                                       20590130
                   EMIL(LITC,1);                                        20590140
                   EMIL(OPR,IDV);                                       20590150
                   EMIL(OPR,XCH);                                       20590160
                   EMIL(OPR,DEL);                         COMMENT 8-7;  20590170
                   EMIL(LITC,0);                                        20590180
                   EMIL(OPR,XCH); COMMENT Q = Y DIV 10*10 ;             20590190
                   EMIL(LITC,0);                                        20590200
                   EMIL(LITC,10);                                       20590210
                   EMIL(OPDC,TENX);                                     20590220
                   EMIL(OPR,DLM);  COMMENT Q = Q | 10 * 10 ;            20590230
                   EMIL(LITC,QBL);                                      20590240
                   EMIL(OPR,STD);                                       20590250
                   EMIL(LITC,RBL);                                      20590260
                   EMIL(OPR,SND);                                       20590270
                   EMIL(OPDC,QBL);  COMMENT SAVE Q ;                    20590280
                   EMIL(OPR,DLS);                                       20590290
                   EMIL(LITC,1);                                        20590300
                   EMIL(OPR,IDV);                                       20590310
                   EMIL(OPR,XCH);                                       20590320
                   EMIL(OPR,DEL);                         COMMENT 8-7;  20590330
                   EMIL(LITC,0);    COMMENT R = Y MOD 10* 10 ;          20590340
                   EMIL(OPR,XCH);                                       20590350
                   EMIL(OPDC,RBL);                                      20590360
                   EMIL(OPDC,QBL);                                      20590370
                   EMIL(OPR,DLA);   COMMENT Y = Q + R ;                 20590380
    FIN :                                                               20590390
              END  ;                                                    20590400
COMMENT  ****************    UNSCALE             **********************;20595000
PROCEDURE UNSCALE ;COMMENT MAKES A SCALED INTEGER INTO A FLOATING NO. ; 20600000
              BEGIN LABEL EDE;EDE:                        COMMENT 8-27; 20605000
                   IF RSCALE ! 0 THEN                                   20610000
                             %RSCALE = INTERMEDIATE RESULT SCALE.       20610001
              BEGIN                                                     20615000
                   IF A1~ABS(RSCALE)<4 THEN EMIL(LITC,POWR[A1]) ELSE    20616000
                                                     COMMENT 2-3 1200;  20617000
                                                     COMMENT 2-3 1200;  20618000
              BEGIN                                                     20619000
                   EMIL(LITC,A1);                    COMMENT 2-3 1200;  20620000
                   EMIL(OPDC,TENX)      ;%TENX= POWERS OF TEN TABLE.    20625000
              END  ;                                                    20626000
                   IF RSCALE < 0 THEN                                   20630000
                   EMIL(OPR,MUL)%DECIMAL SHIFT LEFT.                    20635000
                   ELSE                                                 20640000
                   EMIL(OPR,DID)      ;%DECIMAL SHIFT RIGHT.            20645000
                   RSCALE ~ 0 ;                                         20650000
              END  ;                                                    20655000
              END  ;                                                    20660000
COMMENT  ****************    RECEIVING FIELD     **********************;21050000
PROCEDURE RECFLD ; COMMENT VALIDATES THE RECEIVING FIELD AND            21055000
                   SAVES THE OUTPUT FROM SUBLST IF NECESSARY ;          21060000
              BEGIN                                                     21065000
 INTEGER T,USG;                                                         21070000
 LABEL FIN ;                                                            21075000
                   SYOUT(MSG[124],ISYMB,LGTH);                          21080000
                             %VERIFY THAT THE RECEIVING FIELD           21080001
                   IF NOT FOUND THEN% (ROCUR) IS AN ELEMENTARY ITEM     21085000
                   ERP1(13,83,124,0) ; COMMENT UNIDENTIFIED NAME ;      21090000
                             % WHOSE CLASS IS NUMERIC(3) OR             21090001
                   IF NOT OELEF(OCUR) THEN                              21095000
                             % EDITED NUMERIC (4) AND WAS NOT           21095001
                   ERP1(40,76,83,124);                                  21100000
                             % DECLARED IN THE CONSTANT SECTION         21100001
                   IF CLASS<3 THEN% (CNSTFLG=FLASE).                    21105000
                   ERP1(39,8,124,0); COMMENT CLASS ERROR;               21106000
                    IF GETOUT THEN GO TO FIN;                           21106500
                   JCV(OILNK(OCUR)+2,T6,T7);                            21107000
                   IF BOOLEAN(INFO[T6,T7].[1:1]) THEN COMMENT CNSTFLG;  21108000
                   ERP1(1,46,83,124);COMMENT ILLEGAL VALUE NAME ;       21109000
                   IF GETOUT THEN GO TO FIN ;                           21110000
                   ROCUR ~ OCUR ;                                       21115000
                   IF SUBS = 0 THEN COMMENT SIMPLE VARIABLE ;           21120000
                   DN          %SCAN PAST THE DATANAME.                 21125000
                   ELSE                                                 21130000
              BEGIN                                                     21135000
                   USG~USAGE ;                                          21140000
                   T ~ HQX ;                                            21145000
                   HQX~ 0 ;                                             21150000
                   SUBLST ;    %CALL ON SUBSCRIPT LIST(SUBLST) WHICH    21155000
                             % EVALUATES THE SUBSCRIPT ADDRESS.         21155001
                   IF T = 0 THEN GO TO FIN ; COMMENT DO NOT SAVE ;      21160000
                   HQX~ T ;                                             21165000
                   EMIL(LITC,HQX)     ;                                 21170000
                             %IF HQX WAS NOT ZERO THEN STORE THE        21170001
                   EMIL(OPR,STD)     ;                                  21175000
                             % CALCULATED WORD(QX) AND CHARACTER        21175001
                   IF USG = 0 THEN COMMENT DISPLAY ;                    21180000
                             % (RX) IN THE PRT LOCATIONS SPECIFIED      21180001
              BEGIN            % BY HQX AND HRX. COMPUTATIONAL          21185000
                   EMIL(LITC,HRX)     ;                                 21190000
                             % ITEMS HAVE NO RX BECAUSE THEY ARE        21190001
                   EMIL(OPR,STD)     ;% WORD JUSTIFIED.                 21195000
              END  ;                                                    21200000
              END  ;                                                    21205000
       FIN:                                                             21210000
              END  ;                                                    21215000
COMMENT  ****************    OPERAND             **********************;21220000
PROCEDURE OPND ;   COMMENT VALIDITY CHECKS FOR NUMERIC DATA-NAMES  OR   21225000
                   LITERAL AND CALLS ON VALU OR LITVAL;                 21230000
              BEGIN                                                     21235000
 BOOLEAN N ;                                                            21240000
 LABEL FIN ;                                                            21245000
                   N~FALSE ;                                            21250000
                   SYOUT(MSG[124],ISYMB,LGTH);                          21251000
                   IF OELEF ( OCUR ) THEN COMMENT ELEMENTARY ;          21255000
                             %VERIFY THAT THE CURRENT ITEM IS A         21255001
              BEGIN            % DATANAME WHOSE CLASS IS NUMERIC (3)    21260000
                   IF CLASS ! 3 THEN COMMENT NUMERIC ;                  21265000
                             % AND IS AN ELEMENTARY ITEM(ELEMEN-        21265001
              BEGIN            % TARY ITEM FLAG IS ON).                 21270000
                   ERP1( 61,22,39,124) ;                                21275000
                   GO TO FIN ; COMMENT ARITHMETIC OPERAND CLASS;        21280000
              END  ;                                                    21285000
                   IF SIZE > 18 THEN                           %TR 433  21286000
              BEGIN ERP1(40,61,22,124);                        %TR 433  21286100
                   GO TO FIN;  % OPERAND > 18 DIGITS           %TR 433  21286200
              END; % "ILLEGAL ARITHMETIC OPERAND"              %TR 433  21286300
                   RPREC ~(SIZE > 11);                                  21290000
                             %SET THE INTERMEDIATE RESULT PRECIS-       21290001
                   RLFP~ LFP ; % ION (RPREC),LEFT PART(RLFP) AND        21295000
                   RSCALE ~ SCALE ;% SCALE(RSCALE) AND SAVE THE OCUR    21300000
                   ROCUR ~ OCUR ;% (ROCUR) IN CASE THIS IS A RECEIVING  21305000
                             % FIELD.                                   21305001
                   VALU(OCUR,SEG,T1,SUBS,1);                            21310000
                             %VALU GENERATES CODE TO GET THE ITEM       21310001
              END              % TO THE TOP OF THE STACK.               21315000
                   ELSE                                                 21320000
              BEGIN                                                     21325000
                   IF CAT=6 THEN COMMENT ARITH OPERATOR ;               21330000
              BEGIN                                                     21335000
                   IF KEY !820 AND KEY!821 THEN                         21340000
              BEGIN                                                     21345000
                   ERP1(40,61,22,124);                                  21350000
                             %IF THE ITEM IS A LITERAL IT MAY BE        21350001
                   GO TO FIN ; COMMENT ILLEGAL ARITHMETIC OPERAND;      21355000
                             % PRECEEDED BY "+" OR "-" ONLY.            21355001
              END  ;                                                    21360000
                   IF KEY = 821 THEN COMMENT "-" ;                      21365000
                   N~ TRUE ;   %SET THE NEGATE FLAG.                    21370000
                   DN ;        %SCAN PAST THE UNARY OPERATOR.           21375000
                   SYOUT(MSG[124],ISYMB,LGTH);                          21376000
              END  ;                                                    21380000
                   IF TYPE = 5 AND SCLAS! 1 THEN COMMENT NUMERIC LIT ;  21385000
                             %VERIFY THAT THE ITEM IS A NUMERIC         21385001
              BEGIN            % (SCAN CLASS ! 1) LITERAL(TYPE=5)       21390000
                   RPREC ~ LGTH > 11 ;                                  21395000
                             % AND SET THE INTERMEDIATE PRECISION       21395001
                   RLFP ~ LGTH - SSCALE ;                               21400000
                             % (RPREC),LEFT PART(RLFP),AND SCALE        21400001
                   RSCALE ~ SSCALE ;% (RSCALE)                          21405000
                             %RECEIVING FIELD OCUR < 0 MARKS IT AS      21405001
                   ROCUR ~ -1 ;% AN ILLEGAL ROCUR.                      21410000
                             %LITVAL GENERATES CODE TO GET THE          21410001
                             % LITERAL VALUE TO TOP OF STACK.           21410002
                   LITVAL ;                                             21415000
                   IF N THEN COMMENT NEGATIVE LITERAL ;                 21420000
                   EMIL(OPR,CHS)      ;                                 21425000
              END ELSE IF KEY=344 THEN COMMENT ZERO;     COMMENT 3/4/64;21430000
              BEGIN RPREC~FALSE;                         COMMENT 3/4/64;21430100
                   ROCUR~-1;                             COMMENT 3/4/64;21430400
                   EMIL(LITC,0); DN;                     COMMENT 3/4/64;21430500
COMMENT 3/4;  END                                                       21430600
                   ELSE                                                 21435000
              BEGIN                                                     21440000
                   IF NOT FOUND THEN                                    21445000
                   ERP1(13,61,83,124)  COMMENT UIDENTIFIED ARITH. OPND; 21450000
                             %"UNIDENTIFIED ARITHMETIC NAME XXXX".      21450001
                   ELSE                                                 21455000
                   ERP1(40,22,124,0) ;%"ILLEGAL OPERAND XXXX".          21460000
              END  ;                                                    21465000
              END  ;                                                    21470000
       FIN:                                                             21475000
              END  ;                                                    21480000
COMMENT  ****************    OPERAND LIST        **********************;21485000
INTEGER PROCEDURE OPNDLST ; COMMENT SCALES AND ADDS SUCCESSIVE OPERANDS 21490000
                   ASSUMING THE FIRST AT TOP OF STACK .                 21495000
                   OUTPUT IS THE NUMBER OF OPERANDS IN THE LIST.        21500000
                   DOUBLE PRECISSION IS EFFECTIVE WHENEVER THE          21505000
                   COMPOSIT FIELD SIZE + OVERFLOW GUARD DIGITS> 11 .    21510000
                   ONE GUARD DIGIT IS SUPPLIED FOR < 10 OPERANDS ;      21515000
              BEGIN                                                     21520000
 INTEGER LMAX,RMAX,OPTAL,Y ;                                            21525000
 BOOLEAN N,P,PMAX ;                                                     21530000
 LABEL L1,FIN;                                                          21535000
                   OPTAL~0 ;                                            21540000
       L1:                                                              21545000
                   SYOUT ( MSG [ 124 ] ,ISYMB,LGTH ) ;                  21546000
                   IF TYPE = 1 OR KEY=473 THEN COMMENT RESERVED  OR . ; 21550000
                             %AN OPERANDS MAY BE SEPARATED BY           21550001
              BEGIN                                                     21555000
                   IF KEY! 502 THEN COMMENT "AND" ;                     21560000
                             % THE RESERVED WORD"AND".                  21560001
              BEGIN                                                     21565000
COMMENT 3/4;       IF KEY!344 THEN COMMENT "ZERO";                      21566000
COMMENT 3/4;  BEGIN                                                     21567000
                   OPNDLST ~ OPTAL ;%SET THE VALUE OF THIS PROCEDURE TO 21570000
                   GO TO FIN ; COMMENT END OF LIST ;                    21575000
                             % THE NUMBER OF OPERANDS FOUND.            21575001
COMMENT 3/4;  END;                                                      21576000
              END                                                       21580000
                   ELSE                                                 21585000
                   DN ;        %SCAN PAST THE "AND".                    21590000
              END  ;                                                    21595000
                   SYOUT(MSG[124],ISYMB,LGTH);                          21596000
                   N~FALSE ;   %SET THE NEGATE FLAG TO FALSE.           21600000
                   IF KEY=344 THEN%"ZERO"                               21601000
              BEGIN ROCUR~-1;OPTAL~OPTAL+1;DN;GO TO L1;   COMMENT 7-20; 21602000
COMMENT 3/6;  END;                                                      21603000
                   IF NOT OELEF ( OCUR ) THEN COMMENT ELEMENTARY ;      21605000
              BEGIN                                                     21610000
                   IF CAT=6 THEN COMMENT ARITH OPERATOR ;               21615000
                             %A LITERAL MAY BE PRECEEDED BY A           21615001
              BEGIN                                                     21620000
                   IF KEY !820 AND KEY!821 THEN%IF NOT "+" OR "-" THEN  21625000
              BEGIN                                                     21630000
                   ERP1(40,61,22,124) ; COMMENT ILLEGAL ARITH. OPND.;   21635000
                             %"ILLEGAL ARITHMETIC OPERAND XXXX".        21635001
                   OPTAL~0 ;                                            21640000
                   GO TO FIN ;                                          21645000
              END  ;                                                    21650000
                   IF KEY = 821 THEN COMMENT "-" ;                      21655000
                   N~ TRUE ;   %THE OPERATOR IS "-".                    21660000
                   DN ;        %SCAN PAST THE UNARY OPERATOR.           21665000
                             %MAKE THE GLOBAL SPECS LOOK LIKE THIS      21665001
                   SYOUT(MSG[124],ISYMB,LGTH);                          21666000
              END  ;                                                    21670000
                   IF TYPE = 5 THEN COMMENT LITERAL ;                   21675000
              BEGIN                                                     21680000
                   LFP ~ LGTH-SSCALE;% IS A DATANAME.                   21685000
                   SCALE ~ SSCALE ;                                     21690000
                             %UPDATE THE TALLY OF OPERANDS(OPTAL).      21690001
                   SIZE ~ LGTH;                                         21695000
COMMENT 3/6;  END                                                       21700500
                   ELSE                                                 21705000
              BEGIN                                                     21710000
                   IF NOT FOUND THEN                                    21711000
                   ERP1(13,61,22,124)  COMMENT UNIDENTIFIED ARITH.OPND; 21712000
                   ELSE ERP1(40,61,22,124); COMMENT ILLEGAL ARITH.OPND; 21715000
                   GO TO FIN ;                                          21720000
              END  ;                                                    21725000
              END  ;                                                    21730000
                   OPTAL~OPTAL+1 ;%FIND THE CURRENT OPERAND PRECISION.  21735000
                   P~(SIZE>11) ;%FIND THE MAXIMUM LEFT PART AND RIGHT   21740000
                   LMAX~IF RLFP}LFP THEN                                21745000
                             % PART TO DETERMINE THE COMPOSITE          21745001
                        RLFP ELSE LFP;% FIELD SIZE OF THE INTERMEDIATE  21750000
                   RMAX ~ IF RSCALE }  SCALE THEN% RESULT.              21755000
                        RSCALE ELSE SCALE;                              21760000
                   PMAX~(REAL(OPTAL>10)+ LMAX + RMAX >10) ;             21765000
                             %SUPPLY TWO GUARD DIGITS IF MORE THAN      21765001
                             % 10 OPERANDS IN THE LIST WHEN FIND-       21765002
                             % ING THE OVERALL PRECISION(PMAX).         21765003
                   IF REAL(RPREC)<REAL(PMAX) THEN COMMENT MAKE DOUBLE;  21770000
              BEGIN                                                     21775000
                   EMIL(LITC,0)      ;                                  21780000
                             %IF THE INTERMEDIATE RESULT PRECISION      21780001
                   EMIL(OPR,XCH)      ;% (RPREC) IS < PMAX; MAKE DOUBLE 21785000
                   RPREC ~ PMAX ;                                       21790000
              END  ;                                                    21795000
                   Y~ RSCALE - RMAX ;                                   21800000
                             %IF THE INTERMEDIATE SCALE(RSCALE)<        21800001
                   IF Y<0 THEN % THE COMPOSIT SCALE(RMAX),SHIFT LEFT    21805000
                   SLT(Y) ;    % TO ALIGN THE DECIMAL.                  21810000
                   IF REAL(P)<REAL(PMAX) THEN COMMENT MAKE DOUBLE ;     21815000
                             %IF THE CURRENT OPERAND PRECISION(P)       21815001
                   EMIL(LITC,0)      ;                                  21820000
                             % < COMPOSITE PRECISION,MAKE DOUBLE.       21820001
                   OPND ;      %OPND GETS THE VALUE OF THE CURRENT      21825000
                             % OPERAND TO THE TOP OF THE STACK AND      21825001
                             % SETS RLFP AND RSCALE.                    21825002
                   IF GETOUT THEN GO TO FIN ;%EXIT IF AN ERROR OCCURED. 21830000
                   IF N THEN COMMENT NEGATIVE LITERAL ;                 21835000
                   EMIL(OPR,CHS)      ;%NEGATE THE LITERAL.             21840000
                   RPREC ~ PMAX ;%SET INTERMEDIATE PREC. TO COMPOSITE   21845000
                             % PRECISION.                               21845001
                   Y~ RSCALE - RMAX ;                                   21850000
                             %IF CURRENT SCALE < COMPOSITE SCALE,       21850001
                   IF Y<0 THEN % SHIFT LEFT TO ALLIGN DECIMALS.         21855000
                   SLT(Y) ;                                             21860000
                   IF PMAX THEN COMMENT DOUBLE PREC ;                   21865000
                   EMIL(OPR,DLA)                                        21870000
                   ELSE                                                 21875000
                   EMIL(OPR,ADD)      ;                                 21880000
                   RLFP ~ LMAX ;                                        21885000
                   RSCALE ~ RMAX ;%SET INTERMEDIATE LEFT PART + SCALE.  21890000
                   GO TO L1;   %LOOK FOR ANOTHER OPERAND.               21895000
       FIN:                                                             21900000
              END  ;                                                    21905000
COMMENT  ****************    SIZE ERROR          **********************;21910000
PROCEDURE SIZERR ; COMMENT PROCESSES ON SIZE ERROR AND CALLS ON STORE,  21915000
                   AND STATMT AS REQUIRED ;                             21920000
              BEGIN                                                     21925000
INTEGER J,K,SZ,C;                                         COMMENT 6-30; 21930000
INTEGER RQX,RRX;                                          COMMENT 9-09; 21932000
 LABEL FIN,ERR ;                                                        21935000
                   JCV(OILNK(ROCUR),J,K);                 COMMENT 9-09; 21936000
                   IF INFO[J,K+1].[32:4] ! 0 THEN  %IF SUBS    %TR 86   21937000
              BEGIN RQX~HQX; RRX~HRX;                     COMMENT 9-09; 21938000
              END ELSE RQX~RRX~0;                         COMMENT 9-09; 21939000
                   IF KEY ! 271 AND KEY ! 397 THEN COMMENT ON OR SIZE;  21940000
              BEGIN                                                     21945000
                   IF DIVF THEN COMMENT DIVIDE FLAG ;                   21950000
                             %THE DIVIDE FLAG(DIVE) IS TRUE FOR         21950001
              BEGIN            % THE DIVIDE VERB OR "/" OPERATOR IN     21955000
                             % FORMULA.                                 21955001
COMMENT 3/3/64;    EMIL(LITC,0);COMMENT RESET DYNAMIC DIV BY 0 INDIC.;  21960000
                   EMIL(LITC,11); %CLEAR DIV BY ZERO FLAG      %TR 321  21966000
COMMENT 3/3/64;    EMIL(OPR,STD);                                       21970000
                   DIVF ~ FALSE ;                                       21985000
              END;                                                      21990000
                   ACC~TRUE; ESTORE(0,ROCUR,RQX,RRX);                   21995000
                             %STORE THE RESULT FROM THE TOP OF THE      21995001
                             % STACK AND EXIT.                          21995002
                   GO TO FIN ; %THE RETURN FLAG(RF) WHEN TRUE           22000000
              END  ;           % SIGNALS THE STATMT ROUTINE TO          22005000
                   IF KEY = 271 THEN COMMENT "ON" ;                     22015000
                   DN ;        %SCAN PAST THE "ON".                     22020000
                   IF KEY ! 397 THEN COMMENT "SIZE" ;                   22025000
       ERR:                                                             22030000
              BEGIN                                                     22035000
                   SYOUT(MSG[124],ISYMB,LGTH);                          22036000
                   ERP1(15,8,57,124);                                   22040000
                   GO TO FIN ;COMMENT SYNTAX ERR SIZE ERROR STATEMENT ; 22045000
              END  ;                                                    22050000
                   DN ;        %SCAN PAST "SIZE" .                      22055000
                   IF KEY ! 515 THEN COMMENT "ERROR" ;                  22060000
                   GO TO ERR ;                                          22065000
                   DN ;        %SCAN PAST "ERROR" .                     22070000
                   SZ ~INFO[J,K+1].[13:6] + OSCALE(ROCUR) ;             22095000
                   EMIL(OPR,DUP)      ;                                 22100000
                   IF OSGND ( ROCUR ) THEN COMMENT SIGNED ;             22105000
                             %DYNAMTICALLY CHECK THE INTERMEDIATE       22105001
                   EMIL(OPR,SSP)      ;                                 22110000
                             % RESULT AGAINST 10* SIZE TO SEE IF        22110001
                   IF SZ > 16 THEN COMMENT SIZE TEST;                   22115000
                             % IT FITS.(ABSOLUTE VALUE).                22115001
              BEGIN                                                     22120000
                   EMIL(LITC,IF SZ=17 THEN 10 ELSE 100);                22125000
                   EMIL(LITC,16)     ;                                  22130000
                   EMIL(OPDC,TENX)      ;%TENX = POWERS OF TEN TABLE.   22135000
                   EMIL(OPR,MUL)      ;                                 22140000
              END                                                       22145000
                   ELSE                                                 22150000
              BEGIN                                                     22155000
                   EMIL(LITC,SZ)      ;                                 22160000
                   EMIL(OPDC,TENX)      ;                               22165000
              END  ;                                                    22170000
                   EMIL(OPR,GRQ)      ;                                 22175000
                   IF DIVF THEN COMMENT DIVIDE FLAG ;                   22180000
                             %DIVF=TRUE IF A DIVIDE OPERATION WAS       22180001
              BEGIN            % PERFORMED.                             22185000
                   EMIL(OPDC,11); %DIVIDE BY ZERO FLAG         %TR 321  22190000
                   EMIL(LITC,0)     ;                                   22195000
                   EMIL(LITC,11); %CLEAR DIV BY ZERO FLAG      %TR 321  22200000
                   EMIL(OPR,STD);                              %TR 321  22205000
                   EMIL(OPR,LOR)     ;                                  22210000
                   DIVF ~ FALSE ;                                       22215000
              END  ;                                                    22220000
                   EMIL(LITC,4+REAL(RPREC));%                           22225000
                   EMIL (OPR,BFC);%                                     22230000
                   EMIL(OPR,DEL);%                                      22235000
                   IF SZ>11 THEN COMMENT CLEAN THE STACK; COMMENT 6-30; 22240000
                             %                                          22240001
                   EMIL(OPR,DEL);                         COMMENT 8-7;  22245000
                   EMIL(LITC,1);                          COMMENT 6-30; 22250000
                   C~CREG;     %SIZE ERROR OCCURRED.                    22255000
                   EMIL(LITC,0);%                                       22260000
                   EMIL(OPR,BFW);                         COMMENT 6-30; 22265000
                   ACC~TRUE; ESTORE(0,ROCUR,RQX,RRX);     COMMENT 9-09; 22270000
                   EMIL(LITC,0);%SIZE ERROR DID NOT OCCUR.              22275000
                   EMIT(LITC,(CREG-C-4)DIV 2,C);          COMMENT 6-30; 22280000
                   IFSTMNT;                               COMMENT 6-30; 22285000
FIN:                                                      COMMENT 6-30; 22286000
              END;                                        COMMENT 6-30; 22290000
COMMENT** 5/1/64 ************* ADD GENERATOR(CHARACTER MODE)***********;22465010
PROCEDURE ADDGEN(SUBTRF,OCA,BASEA,CLGTHA,OCB,BASEB,CLGTHB,RND,SERR);    22465020
                   COMMENT GENERATES CHARACTER MODE CODE FOR            22465030
                   ADD A TO B ROUNDED ON SIZE ERROR S1 ELSE S2.         22465040
                   SUBTRACT A FROM B ROUNDED ON SIZE ERROR S1 ELSE S2.  22465050
                   A - NUMERIC DISPLAY OR NUMERIC LITERAL               22465060
                   B - NUMERIC DISPLAY ;                                22465070
VALUE SUBTRF,RND,SERR,OCA,BASEA,CLGTHA,OCB,BASEB,CLGTHB;                22465075
BOOLEAN SUBTRF ; COMMENT TRUE FOR SUBTRACT ;                            22465080
BOOLEAN RND ; COMMENT ROUNDED REQUESTED ;                               22465090
BOOLEAN SERR; COMMENT SIZE ERROR CHECKING REQUESTED;                    22465100
INTEGER  OCA    ;COMMENT OCUR OF A ;                                    22465110
INTEGER  BASEA  ;COMMENT START OF SUBLST CODE FOR A ;                   22465120
INTEGER  CLGTHA  ;COMMENT LENGTH OF SUBLST CODE FOR A;                  22465130
INTEGER  OCB    ;COMMENT OCUR OF B ;                                    22465140
INTEGER  BASEB  ;COMMENT START OF SUBLST CODE FOR B ;                   22465150
INTEGER CLGTHB  ;COMMENT LENGTH OF SUBLST CODE FOR B;                   22465160
              BEGIN                                                     22465170
LABEL L1,L2,L3,L4,L5,FIN,FINI;                            COMMENT 10-8; 22465180
INTEGER F,I,J,K,Q,LMAX,RMAX,SMAX,LPD,SCD;                   COMMENT 8-7;22465190
INTEGER SZA  ;COMMENT SIZE OF A ;                                       22465200
INTEGER LPA  ;COMMENT LEFT PART OF A;                                   22465210
INTEGER SCL  ;COMMENT SCALE OF A;                                       22465220
INTEGER SGA  ;COMMENT SIGN OF A;                                        22465230
INTEGER DNPXA;COMMENT DATANAME SIGN DESCRIPTOR ;                        22465240
INTEGER DNQXA;COMMENT DATANAME SIGN WORD ADDR;                          22465250
INTEGER DNRXA;COMMENT DATANAME SIGN CHARACTER;                          22465260
INTEGER PXA  ;COMMENT DESCRIPTOR FOR A;                                 22465270
INTEGER QXA  ;COMMENT WORD ADDR. FOR A;                                 22465280
INTEGER RXA  ;COMMENT CHP FOR A;                                        22465290
INTEGER SZB  ;COMMENT SIZE OF B;                                        22465300
INTEGER LPB  ;COMMENT LEFT PART OF B;                                   22465310
INTEGER SCB  ;COMMENT SCALE OF B;                                       22465320
INTEGER SGB  ;COMMENT SIGN OF B;                                        22465330
INTEGER DNPXB;COMMENT DATANAME SIGN DESCRIPTOR;                         22465340
INTEGER DNQXB;COMMENT DATANAME SIGN WORD;                               22465350
INTEGER DNRXB;COMMENT DATANAME SIGN CHP;                                22465360
INTEGER PXB  ;COMMENT DESCRIPTOR FOR B;                                 22465370
INTEGER QXB  ;COMMENT WORD ADDR. FOR B;                                 22465380
INTEGER RXB  ;COMMENT CHP FOR B;                                        22465390
ARRAY FIX[0:5];COMMENT FIXUPS FOR FORWARD REF. JUMPS;       COMMENT 8-7;22465395
              COMMENT SC ARRAY DECLARED IN OUTSIDE BLOCK 9-16 JH       ;22465420
              DEFINE DC = SAVEGOTO #;                   COMMENT 9-16 JH;22465430
              COMMENT CALL DECLARED IN OUTSIDE BLOCK;   COMMENT 9-16 JH;22465440
DEFINE RESULT=CALL [00] #; COMMENT TRUE IF SIZE ERROR OCCURS;           22465450
DEFINE MSCW  =CALL [01] #; COMMENT MKS CONTROL WORD ;                   22465460
DEFINE A1    =CALL [02] #; COMMENT ACCUMULATOR ;                        22465470
DEFINE A11   =CALL [03] #; COMMENT ACCUMULATOR ;                        22465480
DEFINE A12   =CALL [04] #; COMMENT ACCUMULATOR ;                        22465490
DEFINE A13   =CALL [05] #; COMMENT ACCUMULATOR ;                        22465500
DEFINE A14   =CALL [06] #; COMMENT ACCUMULATOR ;                        22465510
DEFINE A2    =CALL [07] #; COMMENT AUXILIARY ACCUMULATOR;               22465520
DEFINE A21   =CALL [08] #; COMMENT AUXILIARY ACCUMULATOR;               22465530
DEFINE A22   =CALL [09] #; COMMENT AUXILIARY ACCUMULATOR;               22465540
DEFINE A23   =CALL [10] #; COMMENT AUXILIARY ACCUMULATOR;               22465550
DEFINE A24   =CALL [11] #; COMMENT AUXILIARY ACCUMULATOR;               22465560
DEFINE SPX1  =CALL [12] #; COMMENT DESC-DATANAME SIGN;                  22465570
DEFINE RX1   =CALL [13] #; COMMENT RX FOR SUBSCRIPTED ITEMS;            22465580
DEFINE PX1   =CALL [14] #; COMMENT DESCRIPTOR FOR SOURCE;               22465590
DEFINE SPX2  =CALL [15] #; COMMENT DESC-DATANAME SIGN;                  22465600
DEFINE T1    =CALL [16]#; COMMENT TEMP                             7-3; 22465610
DEFINE RX2   =CALL [17]#; COMMENT RX FOR SUBSCRIPTED ITEMS         7-3; 22465620
DEFINE PX2   =CALL [18]#; COMMENT DESC FOR DESTINATION             7-3; 22465630
DEFINE RCW   =CALL [19] #; COMMENT RETURN CONTROL WORD;                 22465640
                   IF CLGTHA ! 0 THEN COMMENT SAVE SUBLIST CODE OF A ;  22465650
              BEGIN SC[0,0] ~ 0; COMMENT MAKE SC PRESENT;               22465660
                   I ~ 0;                                               22465670
                   COPICODE(SEG,BASEA,SC,I,CLGTHA);                     22465680
              END; IF CLGTHB ! 0 THEN COMMENT SAVE SUBLST CODE OF B ;   22465690
              BEGIN DC[0,0] ~ 0; COMMENT MAKE DC PRESENT;               22465700
                   I ~ 0;                                               22465710
                   COPICODE(SEG,BASEB,DC,I,CLGTHB);                     22465720
              END; IF OCA = 0 OR OTYP  (OCA) = 17 THEN COMMENT LITERAL; 22465730
              BEGIN SZA ~ CT [5]; LPA ~ CT [3] ; SCL ~ CT [4] ;SGA~0;   22465740
                   OCA ~ 0 ;                                            22465745
                   IF CT [6] ! 0 THEN SGA ~ 3 ; COMMENT DN SIGN;        22465750
              END  ELSE                                                 22465760
              BEGIN SZA ~ OFSZ(OCA);                                    22465770
                   SCL ~ OSCALE(OCA);                                   22465780
                   LPA ~ SZA - SCL;                                     22465790
                   SGA ~ OSGN(OCA);                                     22465800
              END;                                                      22465810
                   IF SZA > 18 OR SZB > 18 THEN                %TR 433  22465811
              BEGIN ERP1(40,61,22,124);                        %TR 433  22465812
                   GO TO FINI; % OPERAND > 18 DIGITS           %TR 433  22465813
              END; % "ILLEGAL ARITHMETIC OPERAND"              %TR 433  22465814
                   IF OCB=0 OR I~OTYP(OCB)=17 OR I=1 THEN COMMENT 7-21; 22465820
              BEGIN ERP1(40,22,83,124);                                 22465830
                   GO TO FINI;COMMENT ILLEGAL OPND NAME;  COMMENT 10-8; 22465840
              END; SZB ~ OFSZ(OCB);                                     22465850
                   SCB ~ OSCALE(OCB);                                   22465860
                   LPB ~ SZB-SCB;                                       22465870
                   SGB ~ OSGN(OCB);                                     22465890
                   LMAX~IF LPA>LPB THEN LPA ELSE LPB;       COMMENT 8-7;22465895
                   RMAX~IF SCL>SCB THEN SCL ELSE SCB;       COMMENT 8-7;22465900
                   RND ~ RND AND SCL > SCB ;                            22465905
                   SMAX~LMAX+RMAX;                          COMMENT 8-7;22465910
                   LPD ~ LPA - LMAX ;                                   22465920
                   SCD~SCL - RMAX;                          COMMENT 8-7;22465930
                   F~0;                                     COMMENT 8-7;22465935
                   FOR I ~ 0 STEP 1 UNTIL 19 DO CALL[I] ~ 0 ;           22465940
                   IF SERR THEN                                         22465950
              BEGIN RESULT ~ 1 ;  COMMENT MARK PRESENT ;                22465960
                   EMIL(LITC,0);                                        22465970
              END; EMIL(OPR,MKS); MSCW~1; COMMENT MARK PRESENT;         22465980
                   A1~REAL(SERR OR LPA!LPB OR SCL!SCB       COMMENT 8-7;22465990
                    OR SGA>1);                              COMMENT 8-7;22465995
                   A2~REAL(SERR OR LMAX>LPB OR RMAX>SCB     COMMENT 8-7;22466000
                    OR SGB>1);IF A2!0 THEN A1~1;          COMMENT 2-24; 22466005
                   T1~REAL(SGA>1 OR BOOLEAN(A2) OR SERR); COMMENT 7-3;  22466006
                   Q~(SMAX+7) DIV 8 -1;                                 22466010
                   FOR I ~ 0 STEP 1 UNTIL Q DO                          22466020
              BEGIN IF BOOLEAN(A1) THEN COMMENT ACCUMULATOR PRESENT ;   22466030
              BEGIN CALL[2+I] ~ 1 ;                                     22466040
                   EMIL(LITC,0);                                        22466050
              END; IF BOOLEAN(A2) THEN COMMENT AUX. ACUMULATOR PRESENT; 22466060
              BEGIN CALL[7+I] ~ 1;                                      22466070
                   EMIL(LITC,0) ;                                       22466080
              END;                                                      22466090
              END;                                                      22466100
                   IF OCA = 0 THEN COMMENT LITERAL;                     22466110
              BEGIN IF CNQ.[41:7]>112 THEN COMMENT ROW ADJUST CNP;      22466120
              BEGIN CNR ~ 0 ;                                           22466130
                   CNQ ~ CNQ+115;                                       22466140
                   CNQ.[41:7] ~ 0;                                      22466150
              END; IF SGA = 3 THEN COMMENT NEGATIVE LITERAL ;           22466160
              BEGIN CHRTRAN(CT [6],7,CNP[CNQ.[38:3],CNQ.[41:7]],CNR,1); 22466170
                   DNPXA ~ CNPL ;                                       22466180
                   DNQXA ~ CNQ-1; COMMENT ASSIGN TO CONSTANT POOL ;     22466190
                   DNRXA ~ CNR;                                         22466200
                   CNR ~ CNR+1;                                         22466210
              END; CHRTRAN(CT ,4,CNP[CNQ.[38:3],CNQ.[41:7]],CNR,SZA);   22466220
                   PXA~ CNPL ;                                          22466230
                   QXA ~ CNQ-1 ;                                        22466240
                   RXA ~ CNR;                                           22466250
                   CNR ~ CNR + SZA;                                     22466260
                   CNQ ~ CNQ+CNR DIV 8;                                 22466270
                   CNR ~ CNR MOD 8;                                     22466280
              END  ELSE                                                 22466290
              BEGIN IF SGA = 3 THEN   %SIGN IS DATA-NAME       %TR 410  22466300
              BEGIN JCV(OILNK(OCA),J,K); %GET INFO ENTRY       %TR 410  22466310
                   IF SIGNISDN(INFO[J,K+3].[18:15]) THEN       %TR 410  22466320
                   OAS(DNPXA,DNQXA,DNRXA,INFO[J,K+3].[18:15])  %TR 410  22466330
                   ELSE SGA ~ 1;                               %TR 410  22466340
              END; OAS(PXA,QXA,RXA,OCA);                       %TR 410  22466350
              END; IF SGA = 3 THEN                             %TR 410  22466360
              BEGIN EMIL(LITC,DNQXA);  EMIL(DESC,DNPXA);       %TR 410  22466365
                   SPX1 ~ 1; COMMENT MARK PRESENT ;                     22466370
              END; IF CLGTHA =0 THEN EMIL(LITC,QXA) ELSE                22466380
              BEGIN COPICODE(SC,0,SEG,CREG,CLGTHA);                     22466390
                   RX1 ~ 1 ; COMMENT SUBSCRIPTED RX PRESENT;            22466400
              END; EMIL (DESC,PXA);                                     22466410
                   PX1 ~ 1 ; COMMENT MARK PRESENT;                      22466420
                   OAS(PXB,QXB,RXB,OCB);                                22466425
                   IF SGB = 3 THEN    %SIGN IS DATA-NAME       %TR 410  22466430
              BEGIN JCV(OILNK(OCB),J,K); %GET INFO ENTRY       %TR 410  22466435
                   IF SIGNISDN(INFO[J,K+3].[18:15]) THEN       %TR 410  22466440
              BEGIN                                            %TR 410  22466445
                   OAS(DNPXB,DNQXB,DNRXB,INFO[J,K+3].[18:15]); %TR 410  22466450
                   EMIL(LITC,DNQXB);   EMIL(DESC,DNPXB);       %TR 410  22466460
                   SPX2 ~ 1;                                   %TR 410  22466470
              END  ELSE SGB ~ 1;                               %TR 410  22466480
              END; IF BOOLEAN(T1) THEN EMIL(LITC,0);      COMMENT 7-3;  22466485
                   IF CLGTHB=0 THEN EMIL(LITC,QXB) ELSE   COMMENT 6-29; 22466490
              BEGIN COPICODE(DC,0,SEG,CREG,CLGTHB);                     22466500
                   RX2 ~ 1 ; COMMENT MARK SUBSCRIPTED RX PRESENT;       22466510
              END; EMIL(DESC,PXB);                                      22466520
                   PX2 ~ 1 ; COMMENT MARK PRESENT;                      22466530
                   K ~ 1;                                               22466550
                   FOR I ~ 18 STEP -1 UNTIL 0 DO                        22466560
                   IF CALL[I] ! 0 THEN COMMENT FIND RELATIVE ADDRESS;   22466570
              BEGIN CALL[I] ~ K; K~K+1;                                 22466580
              END; EMIL(OPR,CMN);                         COMMENT 7-3;  22466590
COMMENT TEMPORARY; SGMTLVL ~ SGMTLVL + 1;                               22466591
                   JCV(OILNK(OCB),J,K);                                 22466670
                   IF BOOLEAN(INFO[J,K+2].[1 :1 ])THEN COMMENT CNST.FLG;22466672
              BEGIN ERP1(1,46,83,124);                                  22466674
                   GO TO FIN; COMMENT ILLEGAL VALUE NAME;               22466676
              END;                                                      22466678
                   CEMLT(PX1,RSA);                                      22466790
                   IF RX1 ! 0 THEN COMMENT SUBSCRIPTED ;                22466800
              BEGIN CEMLT(RX1,CRF);                                     22466810
                   CEMLT(0,SFS);                                        22466820
              END  ELSE IF RXA ! 0 THEN                                 22466830
                   CEMLT(RXA,SFS);                                      22466840
                   IF SGA = 2 THEN COMMENT J SIGN;                      22466850
                   CEMLT(T1,SSA);                                       22466860
                   IF LPD > 0 THEN COMMENT LPA>LMAX;                    22466870
              BEGIN CEMLT(LPD,SFS);                                     22466880
                   SZA ~ SZA - LPD;                                     22466890
              END  ;                                                    22466900
                   IF A1 = 0 THEN COMMENT ADD TO RECEIVING FIELD;       22466910
              BEGIN                                       COMMENT 7-3;  22466920
L1:                IF RX2!0 THEN COMMENT SUBSCRIPTED;       COMMENT 8-7;22466930
              BEGIN CEMLT(RX2,CRF);                                     22466940
                   CEMLT(0,SFD);                                        22466950
              END  ELSE IF RXB ! 0 THEN CEMLT (RXB,SFD);                22466960
                   CEMLT(SMAX,IF SUBTRF THEN FSU ELSE FAD);             22466970
                   IF SGB = 0 THEN COMMENT UNSIGNED ;                   22466980
              BEGIN CEMLT(1,SRD);                                       22466990
                   CEMLT(1,BIR); COMMENT SET SUM POSITIVE ;             22467000
              END;                                          COMMENT 8-7;22467010
                   GO TO FIN ;                                          22467020
              END;                                                      22467030
                   CEMLT(A1,SED);COMMENT MOVE A TO A1;      COMMENT 8-7;22467040
                   IF LPD<0 THEN COMMENT LMAX>LPA;          COMMENT 8-7;22467050
                   CEMLT(LPD,SFD);                          COMMENT 8-7;22467060
                   IF SCD<0 THEN COMMENT ZERO FILL;         COMMENT 8-7;22467070
              BEGIN CEMLT(SZA,TRN);                         COMMENT 8-7;22467080
                   IF SCD!-1 THEN CEMLT(SCD+1,SFD);         COMMENT 8-7;22467090
                   IF SGA{1 THEN COMMENT S OR UNSIGNED;     COMMENT 8-7;22467100
                   CEMLT(1,SRS);                            COMMENT 8-7;22467110
                   GO TO L2;                                COMMENT 8-7;22467120
              END;IF SGA {1 THEN COMMENT S OR UNSIGNED;     COMMENT 8-7;22467130
              BEGIN CEMLT(SZA,TRS);                         COMMENT 8-7;22467140
                   GO TO L3;                                COMMENT 8-7;22467150
              END; CEMLT(SZA,TRN);                          COMMENT 8-7;22467160
                   CEMLT(1,SRD);                            COMMENT 8-7;22467170
L2:                IF SGA=2 THEN CEMLT(T1,RSA) ELSE       COMMENT 11-3; 22467180
                   IF SGA = 3 THEN                          COMMENT 8-7;22467190
              BEGIN CEMLT(SPX1,RSA);                        COMMENT 8-7;22467200
                   IF DNRXA ! 0 THEN CEMLT(DNRXA,SFS);      COMMENT 8-7;22467210
              END; CEMLT(1,TRZ);                            COMMENT 8-7;22467220
L3:                IF A2=0 THEN COMMENT ADD A1 TO B;        COMMENT 8-7;22467230
              BEGIN CEMLT(A1,SES);                          COMMENT 8-7;22467240
                   CEMLT(PX2,RDA);                          COMMENT 8-7;22467250
                   GO TO L1;                                COMMENT 8-7;22467260
              END; COMMENT MOVE B TO A2;                    COMMENT 8-7;22467270
                   CEMLT(PX2,RSA);                          COMMENT 8-7;22467280
                   IF RX2!0 THEN COMMENT SUBSCRIPTED;       COMMENT 8-7;22467285
              BEGIN CEMLT(RX2,CRF);                         COMMENT 8-7;22467290
                   CEMLT(0,SFS);                            COMMENT 8-7;22467295
              END  ELSE IF RXB! 0 THEN CEMLT(RXB,SFS);      COMMENT 8-7;22467300
                   CEMLT(T1,SSA);                           COMMENT 8-7;22467310
                   LPD~LPB-LMAX;                            COMMENT 8-7;22467320
                   SCD~SCB-RMAX;                            COMMENT 8-7;22467330
                   CEMLT(A2,SED);                           COMMENT 8-7;22467340
                   IF LPD<0 THEN COMMENT ZERO FILL;         COMMENT 8-7;22467350
                   CEMLT(LPD,SFD);                          COMMENT 8-7;22467360
                   IF SCD<0 THEN COMMENT ZERO FILL;         COMMENT 8-7;22467370
              BEGIN CEMLT(SZB,TRN);                         COMMENT 8-7;22467380
                   IF SCD!-1 THEN CEMLT(SCD+1,SFD);         COMMENT 8-7;22467390
                   IF SGB{1 THEN CEMLT(1,SRS);              COMMENT 8-7;22467400
                   GO TO L4;                                COMMENT 8-7;22467410
              END;                                          COMMENT 8-7;22467420
                   IF SGB { 1 THEN COMMENT S OR UNSIGNED;   COMMENT 8-7;22467430
              BEGIN CEMLT(SZB,TRS);                         COMMENT 8-7;22467440
                   GO TO L5;                                COMMENT 8-7;22467450
              END; CEMLT(SZB,TRN);                          COMMENT 8-7;22467460
                   CEMLT (1,SRD);                           COMMENT 8-7;22467470
L4:                IF SGB = 2 THEN CEMLT(T1,RSA) ELSE       COMMENT 8-7;22467480
                   IF SGB = 3 THEN COMMENT SIGN IS DATANAME;COMMENT 8-7;22467490
              BEGIN CEMLT(SPX2,RSA);                        COMMENT 8-7;22467500
                   IF DNRXB ! 0 THEN CEMLT(DNRXB,SFS);      COMMENT 8-7;22467510
              END; CEMLT(1,TRZ);                            COMMENT 8-7;22467520
L5:                CEMLT(A1,SES);                           COMMENT 8-7;22467530
                   CEMLT(A2,SED);                           COMMENT 8-7;22467540
                   CEMLT(SMAX,IF SUBTRF THEN FSU ELSE FAD); COMMENT 8-7;22467550
                   IF SERR THEN                             COMMENT 8-7;22467560
              BEGIN CEMLT(3,JFC);                           COMMENT 8-7;22467570
                   CEMLT(1,SEC);                            COMMENT 8-7;22467580
                   CEMLT(RESULT,STC);                       COMMENT 8-7;22467590
                   F~F+1;FIX[F]~CHMX;CEMLT(0,JFW);          COMMENT 8-7;22467600
              END;                                          COMMENT 8-7;22467610
                   IF RND THEN COMMENT ROUND WAS REQUESTED; COMMENT 8-7;22467620
              BEGIN CEMLT(1,SRD);                           COMMENT 8-7;22467630
                   CEMLT(A1,SDA); COMMENT SAVE SIGN ADDRESS;COMMENT 8-7;22467640
                   CEMLT(A1,RSA);                           COMMENT 8-7;22467650
                   CEMLT(A1,SED);                           COMMENT 8-7;22467660
                   CEMLT(J~LMAX+SCB+1,TRP);                 COMMENT 8-7;22467670
                   Q~(J-1)DIV 2;                            COMMENT 8-7;22467680
                   FOR I~1 STEP 1 UNTIL Q DO                COMMENT 8-7;22467681
                   CEMLT(0,0);                              COMMENT 8-7;22467682
                   CEMLT(0,5);                              COMMENT 8-7;22467683
                   IF K~SMAX-J   ! 0 THEN                   COMMENT 8-7;22467684
              BEGIN CEMLT(K,TRP);                           COMMENT 8-7;22467685
                   Q ~ (K-1) DIV 2;                         COMMENT 8-7;22467690
                   FOR I ~ 1 STEP 1 UNTIL Q DO              COMMENT 8-7;22467700
                   CEMLT(0,0);                              COMMENT 8-7;22467710
                   CEMLT(0,0);                              COMMENT 8-7;22467720
              END; CEMLT(1,SRD);                            COMMENT 8-7;22467730
                   CEMLT(1,TRZ);                            COMMENT 8-7;22467740
                   CEMLT(A1,SES);                           COMMENT 8-7;22467750
                   CEMLT(A2,SED);                           COMMENT 8-7;22467760
                   CEMLT(SMAX,FAD);                         COMMENT 8-7;22467770
                   IF SERR THEN                             COMMENT 8-7;22467780
              BEGIN CEMLT(3,JFC);                           COMMENT 8-7;22467790
                   CEMLT(1,SEC);                            COMMENT 8-7;22467800
                   CEMLT(RESULT,STC);                       COMMENT 8-7;22467810
                   F~F+1;FIX[F]~CHMX;CEMLT(0,JFW);          COMMENT 8-7;22467820
              END;                                          COMMENT 8-7;22467830
              END;                                          COMMENT 8-7;22467840
                   CEMLT(A2,SES);                           COMMENT 8-7;22467850
                   IF SERR THEN                             COMMENT 8-7;22467860
              BEGIN CEMLT(3,JFC);                           COMMENT 8-7;22467861
                   CEMLT(1,SEC);                            COMMENT 8-7;22467862
                   CEMLT(RESULT,STC);                       COMMENT 8-7;22467863
                   F~F+1;FIX[F]~CHMX;CEMLT(0,JFW);          COMMENT 8-7;22467864
                   IF LPD<0 THEN COMMENT TEST FOR OVERFLOW; COMMENT 8-7;22467865
              BEGIN IF LPD ! -1 THEN CEMLT(LPD,BNS);        COMMENT 8-7;22467866
                   CEMLT(0,TNE);                            COMMENT 8-7;22467870
                   CEMLT(3,JFC);                            COMMENT 8-7;22467880
                   CEMLT(1,SEC);                            COMMENT 8-7;22467890
                   CEMLT(RESULT,STC);                       COMMENT 8-7;22467900
                   F~F+1;FIX[F]~CHMX;CEMLT(0,JFW);          COMMENT 8-7;22467910
                   CEMLT(1,SFS);                            COMMENT 8-7;22467920
                   IF LPD! -1 THEN CEMLT(0,ENS);            COMMENT 8-7;22467930
              END;                                          COMMENT 8-7;22467940
              END  ELSE IF LPD!0 THEN CEMLT(LPD,SFS);       COMMENT 8-7;22467950
                   CEMLT(T1,RDA);                           COMMENT 8-7;22467960
                   IF SGB = 1 AND SCB=RMAX THEN             COMMENT 8-7;22467970
              BEGIN CEMLT(SZB,TRS); GO TO FIN;              COMMENT 8-7;22467980
              END; CEMLT(SZB,TRN);                          COMMENT 8-7;22467990
                   IF SGB = 0 THEN GO TO FIN;               COMMENT 8-7;22468000
                   IF K~RMAX-SCB = 0 THEN CEMLT(1,SRS)ELSE  COMMENT 8-7;22468010
                   IF K!1 THEN CEMLT(K-1,SFS);              COMMENT 8-7;22468020
                   IF SGB=1 THEN CEMLT(1,SRD) ELSE          COMMENT 8-7;22468025
                   IF SGB = 2 THEN CEMLT(T1,RDA) ELSE       COMMENT 8-7;22468030
                   IF SGB = 3 THEN                          COMMENT 8-7;22468040
              BEGIN CEMLT(SPX2,RDA);                        COMMENT 8-7;22468050
                   IF DNRXB ! 0 THEN CEMLT(DNRXB,SFD);      COMMENT 8-7;22468060
              END; CEMLT(1,TRZ);                            COMMENT 8-7;22468070
FIN:               FOR I~1 STEP 1 UNTIL F DO                COMMENT 8-7;22468080
                   CEMIT((CHMX-FIX[I])DIV 2-1,JFW,FIX[I]);  COMMENT 8-7;22468090
                   CEMLT(0,CMX);                          COMMENT 7-3;  22468100
COMMENT TEMPORARY; SGMTLVL ~ SGMTLVL - 1;                               22468110
                   JCV(OILNK(OCB),J,K);                     COMMENT 8-7;22468120
                   IF BOOLEAN(INFO[J,K+1].[3:1])THEN        COMMENT 8-7;22468130
              BEGIN IF SERR THEN                            COMMENT 8-7;22468140
              BEGIN EMIL(OPR,DUP);                          COMMENT 8-7;22468150
                   EMIL(OPR,LNG);                           COMMENT 8-7;22468160
                   I~CREG;                                  COMMENT 8-7;22468170
                   EMIL(LITC,0);                            COMMENT 8-7;22468180
                   EMIL(OPR,BFC);                           COMMENT 8-7;22468190
                   MONGEN(OCB,HQX,HRX);                     COMMENT 8-7;22468200
                   EMIT(LITC,(CREG-I-4)DIV 2,I);            COMMENT 8-7;22468210
              END  ELSE MONGEN(OCB,HQX,HRX);                COMMENT 8-7;22468220
              END;                                          COMMENT 8-7;22468230
FINI:         END;                                        COMMENT 10-8; 22468240
COMMENT  ****************    ARITHMETIC CLAUSE   **********************;22470000
PROCEDURE ARITHCL ; COMMENT ROUNDS AND TRUNCATES IF NECESSARY AND       22475000
                    CALLS ON SIZERR ;                                   22480000
              BEGIN                                                     22485000
 INTEGER L,R,Y,J,K ;                                                    22490000
 BOOLEAN P ;                                                            22495000
 LABEL FIN ;                                                            22500000
                   IF ROCUR < 0 THEN%VERIFY THAT THE RECEIVING FIELD IS 22505000
                   ERP1(40,01,124,0); COMMENT ILLEGAL LITERAL ;         22510000
                             % NOT A LITERAL (ROCUR < 0) AND IS         22510001
                   IF NOT OELEF(ROCUR) THEN                             22515000
                             % AN ELEMENTARY ITEM WHOSE CLASS IS        22515001
                   ERP1(40,76,83,124); COMMENT ILLEGAL GROUP NAME;      22520000
                             % NUMERIC(3) OR EDITED NUMERIC(4)          22520001
                   IF OCLAS(ROCUR)<3 THEN% AND WAS NOT DECLARED IN THE  22525000
                   ERP1(39,8,124,0); COMMENT CLASS ERROR ;              22530000
                             % CONSTANT SECTION(CNSTFLG =TRUE).         22530001
                   JCV(OILNK(ROCUR)+2,J,K);                             22531000
                   IF BOOLEAN(INFO[J,K].[1:1]) THEN COMMENT CNSTFLG;    22532000
                   ERP1(1,46,83,124); COMMENT ILLEGAL VALUE NAME;       22533000
                   IF GETOUT  THEN GO TO FIN ;                          22535000
                   IF NOT OSGND(ROCUR) THEN COMMENT UNSIGNED ;          22540000
                   EMIL(OPR,SSP)      ;                                 22545000
                             %IF UNSIGNED TAKE ABSOLUTE VALUE.          22545001
                   IF KEY = 547 THEN COMMENT "ROUNDED" ;                22550000
              BEGIN                                                     22555000
                   DN ;        %SCAN PAST "ROUNDED".                    22560000
                   ROUND ;     %ROUND ROUNDS THE RESULT IF NEEDED.      22565000
              END;                                                      22570000
                   T10 ~ OILNK ( ROCUR ) ;                              22570500
                   JCV ( T10 , J , K ) ;                                22575000
                   L~INFO[J,K+1].[13:6] ;                               22580000
                   R~OSCALE(ROCUR);                                     22585000
                   P~L+R>11;                                            22590000
                   Y~R-RSCALE;                                          22595000
                   IF Y > 0 THEN                                        22600000
                   SLT(ABS(Y));%SHIFT RESULT LEFT OR RIGHT TO ALIGN     22605000
                   IF Y < 0 THEN% DECIMAL WITH RECEIVING FIELD.         22610000
                   SRT(Y) ;                                             22615000
                   IF REAL(P) ! REAL(RPREC) THEN COMMENT ADJUST PREC. ; 22620000
              BEGIN                                                     22625000
                   IF REAL(P) > REAL(RPREC) THEN COMMENT MAKE DOUBLE ;  22630000
              BEGIN                                                     22635000
                   EMIL(LITC,0)      ;                                  22640000
                   EMIL(OPR,XCH)     ;%MAKE DOUBLE PRECISION.           22645000
                   RPREC ~ TRUE ;                                       22650000
              END                                                       22655000
                   ELSE                                                 22660000
              BEGIN                                                     22665000
                   EMIL(OPR,XCH)     ;                                  22670000
                   EMIL(OPR,DEL);%TRUNCATE TO SINGE PRECISION.          22675000
                   RPREC ~ FALSE ;                                      22680000
              END  ;                                                    22685000
              END  ;                                                    22690000
                   SIZERR ;    %SIZERR CHECKS FOR "ON SIZE ERROR"       22695000
       FIN:                    % AND STORES ACCORDINGLY.                22700000
              END  ;                                                    22705000
BOOLEAN PROCEDURE CORESP ; FORWARD ;                                    22705010
COMMENT**********************  CORRESPONDING GENERATOR  ***************;22705100
PROCEDURE CSPGEN (P); COMMENT SYNTAX CHECK AND GENERATOR FOR            22706000
                   ADD(FALSE) AND SUBTRACT(TRUE) CORRESPONDING ;        22706010
BOOLEAN P;                                                              22706020
              BEGIN                                                     22706030
BOOLEAN RND,SERR,P1 ;                                                   22706040
INTEGER I,C,R1,RMAX,L1,LMAX ,Y ;                                        22706050
LABEL L2,FIN;                                               COMMENT 5/1;22706060
                   DN; COMMENT SCAN PAST THE "CORRESPONDING";           22706070
                             %SCAN PAST "CORRESPONDING".                22706071
                   I ~ OCUR ;                                           22706080
                   DN ;        %SCAN PAST FIRST OPERAND.                22706090
                   SYOUT(MSG[124],ISYMB,LGTH);                          22706095
                   IF P THEN COMMENT SUBTRACT ;                         22706100
              BEGIN IF KEY ! 335 THEN COMMENT "FROM" ;                  22706110
              BEGIN ERP(9 & 124[32:40:8],"FROM  ");COMMENT"FROM"MISSING;22706120
                   RECOV; GO TO FIN ;                                   22706130
              END  ;                                                    22706140
              END  ELSE IF KEY ! 264 THEN COMMENT "TO" ;                22706150
              BEGIN ERP(9 & 124[32:40:8],"TO    ");COMMENT"TO"MISSING;  22706160
                   RECOV; GO TO FIN ;                                   22706170
              END  ;                                                    22706180
                   DN ;        %SCAN PAST THE "TO" OR "FROM".           22706190
                   CCY [ 2 ] ~ OCUR ;                                   22706200
                   CCY [ 1 ] ~ I ;                                      22706205
                   CY ~ 2 ;                                             22706210
                   DN ;        %SCAN PAST THE SECOND OPERAND.           22706215
                   RND ~ FALSE ;                                        22706220
                   IF KEY = 547 THEN COMMENT "ROUNDED" ;                22706230
              BEGIN RND ~ TRUE ; DN ;%SCAN PAST "ROUNDED".              22706240
              END  ;                                                    22706250
                   SERR ~ KEY = 271 OR                                  22706260
                          KEY = 397 ; COMMENT "SIZE" OR "ERROR";        22706270
                             %SET SIZE ERROR FLAG IF REQUESTED.         22706271
                     CLIM ~ 0;            COMMENT 1/10/64;              22706275
                   I ~ 0 ;     %CORESP EXPECTS CCY[1] AND CCY[2] TO     22706280
                             % CONTAIN THE GROUP ITEM OCCURS AND        22706281
                             % PROVIDES CORRESPONDING ELEMENTARY        22706282
                             % ITEMS IN CSP[1] AND CSP[2]               22706283
                             % (IT IS A BOOLEAN PROCEDURE).             22706284
                   WHILE CORESP DO                                      22706290
              BEGIN                                                     22706300
                   IF OCLAS (CSP[1])!3 OR OCLAS(CSP[2])!3 THEN          22706310
                             %VERIFY THAT THE ELEMENTARY ITEMS          22706311
              BEGIN ERP1(39,8,40,22);% HAVE A NUMERIC CLASS (3).        22706320
                   GO TO FIN ; COMMENT CLASS ERROR ILLEGAL OPERAND ;    22706330
              END;             %BOTH OPERANDS ARE DISPLAY.              22706340
                   IF OUSG (CSP[1])=0 AND                   COMMENT 8-7;22706341
                      OUSG(CSP[2])=0 THEN                   COMMENT 8-7;22706342
              BEGIN ADDGEN(P,CSP[1],0,0,CSP[2],0,0,         COMMENT 5/1;22706343
                          RND,SERR);                        COMMENT 5/1;22706344
                   IF SERR AND I!0 THEN                     COMMENT 5/1;22706345
                   EMIL(OPR,LOR);                           COMMENT 5/1;22706346
                   I ~ I+1;                                 COMMENT 5/1;22706347
                   GO TO L2;                                COMMENT 5/1;22706348
              END;                                          COMMENT 5/1;22706349
                   ROCUR ~ CSP[1] ;                                     22706350
                   RSCALE ~ OSCALE(ROCUR);                              22706360
                   RLFP ~ OFSZ(ROCUR)- RSCALE ;                         22706370
                   ROCUR ~ CSP[2];                                      22706380
                   R1 ~ OSCALE(ROCUR);                                  22706390
                   L1 ~ OFSZ(ROCUR)-R1 ;                                22706400
                   P1 ~ L1 + R1 > 11 ;                                  22706410
                   LMAX ~ IF RLFP } L1 THEN RLFP ELSE L1 ;              22706420
                             %FIND THE COMPOSITE FIELD SIZE             22706421
                   RMAX ~ IF RSCALE } R1 THEN RSCALE ELSE R1 ;          22706430
                             % (MAXIMUM LEFT PART + MAXIMUM SCALE)      22706431
                   RPREC ~ LMAX + RMAX > 10 ;                           22706440
                             % AND PRECISION PROVIDING 1 OVERFLOW       22706441
                             % DIGIT POSITION.                          22706442
                   IF REAL (RLFP + RSCALE> 11) < REAL (RPREC) THEN      22706450
                   EMIL(LITC,0) ; COMMENT MAKE DOUBLE ;                 22706460
                   VALU(CSP[1],SEG,0,0,0);                              22706470
                             %VALU GETS OPERAND TO TOP OF STACK         22706471
                   IF P THEN COMMENT SUBTRACT ;                         22706474
                   EMIL(OPR,CHS);%CHANGE SIGN FOR SUBTRACT.             22706476
                   Y ~ RSCALE - RMAX ;                                  22706480
                   IF Y < 0 THEN SLT(Y) ;%ADJUST TO COMPOSITE DECIMAL.  22706490
                   IF REAL(P1) < REAL(RPREC) THEN                       22706500
                   EMIL (LITC,0) ; COMMENT MAKE DOUBLE ;                22706510
                             %ADJUST TO COMPOSITE PRECISION.            22706511
                             %GET 2ND OPERAND VALUE.                    22706512
                   VALU(ROCUR,SEG,0,0,0);%ADJUST TO COMPOSITE DECIMAL.  22706520
                   RLFP ~ L1;                                           22706530
                   RSCALE ~ R1 ;                                        22706540
                   Y ~ R1 - RMAX ;                                      22706550
                   IF Y < 0 THEN SLT(Y) ;                               22706560
                   IF RPREC THEN COMMENT DOUBLE ;                       22706590
                   EMIL(OPR,DLA) ELSE EMIL(OPR,ADD) ;                   22706600
                   RLFP ~ LMAX ;                                        22706610
                   RSCALE ~ RMAX;                                       22706620
                   IF NOT OSGND(ROCUR) THEN COMMENT UNSIGNED ;          22706640
                   EMIL(OPR,SSP);%TAKE ABSOLUTE VALUE IF UNSIGNED.      22706650
                   IF RND THEN ROUND ;                     COMMENT 5/22;22706655
                   Y ~ RMAX - R1 ; COMMENT TRUNCATE ;                   22706660
                   IF Y < 0 THEN SLT ( Y )                              22706670
                             %ADJUST TO RECEIVING FIELD SCALE(R1).      22706671
                   ELSE IF Y > 0 THEN SRT ( Y ) ;                       22706680
                   IF REAL(P1) < REAL (RPREC) THEN COMMENT MAKE SINGLE; 22706690
              BEGIN EMIL(OPR,XCH);%ADJUST TO RECEIVING FIELD PREC(P1).  22706700
                   EMIL(OPR,DEL);                         COMMENT 8-7;  22706710
                   RPREC ~ FALSE ;                                      22706720
              END  ;                                                    22706730
                   IF SERR THEN COMMENT SIZE ERROR REQUESTED ;          22706740
              BEGIN                                                     22706750
                   EMIL(OPR,DUP);  COMMENT DYNAMIC SIZE TEST CODE ;     22706760
                   EMIL ( OPR,SSP ) ;                                   22706761
                   IF ( Y ~ L1 + R1 ) > 16 THEN                         22706762
              BEGIN                                                     22706763
                   EMIL ( LITC,IF Y=17 THEN 10 ELSE 100 ) ;             22706764
                   EMIL ( LITC,16 ) ;                                   22706765
                   EMIL ( OPDC,TENX ) ;                                 22706766
                   EMIL ( OPR , MUL ) ;                                 22706767
              END  ELSE                                                 22706768
              BEGIN            %TENX= POWERS OF TEN TABLE.              22706769
                   EMIL ( LITC,Y ) ;                                    22706770
                   EMIL(OPDC,TENX);                                     22706780
              END  ;                                                    22706785
                   EMIL(OPR,GRQ);                                       22706790
                   EMIL (LITC,4+REAL(P1));                              22706800
                   EMIL (OPR,BFC) ;                                     22706810
                   EMIL(OPR,DEL);                         COMMENT 8-7;  22706820
                   IF P1 THEN COMMENT DOUBLE ;                          22706830
                   EMIL(OPR,DEL);%TRUE PATH - CLEAN THE STACK AND       22706840
                   EMIL(LITC,1); COMMENT SIZE ERROR TRUE  ;             22706850
                   C ~ CREG ;  %SAVE PROGRAM COUNTER FOR LATER          22706860
                   EMIL(LITC,0);% FIX-UP OF LITC ADDRESS.               22706870
                   EMIL(OPR,BFW);                                       22706880
                   ACC~TRUE; ESTORE(0,ROCUR,0,0);                       22706890
                             %FALSE-PATH-STORE RESULT AND LEAVE A       22706891
                   EMIL(LITC,0); COMMENT SIZE ERROR FALSE ;             22706900
                             % 0 AT TOP OF STACK.                       22706901
                   EMIT(LITC,(CREG-C-4) DIV 2 , C) ;                    22706910
                   IF I ! 0 THEN                                        22706920
                   EMIL(OPR,LOR);%IF MORE THAN 1 ELEMENTARY ITEM"OR"    22706930
                             % WITH THE PREVIOUS 0 OR 1.                22706931
              END  ELSE                                                 22706940
              BEGIN                                                     22706945
                   ACC~TRUE; ESTORE(0,ROCUR,0,0);                       22706950
                             %JUST STORE IF NO SIZE ERROR REQUEST.      22706951
              END;                                                      22706955
                   I~I+1 ;     %UPDATE CORRESPONDING ITEM TALLY.        22706960
L2:           END;                                          COMMENT 5/1;22706970
         COMMENT END OF THE WHILE LOOP ;                                22706980
                             %VERIFY THAT AT LEAST ONE ELEMENTARY       22706981
                             % ITEM CORRESPONDED.                       22706982
                   IF I = 0 THEN COMMENT NO ELEMENTARY ITEMS ;          22706990
              BEGIN ERP(102,IF P THEN "SUBTR." ELSE "ADD   ");          22707000
                   COMPE ~ TRUE;                                        22707005
              END  ;                                                    22707010
                   IF NOT SERR THEN GO TO FIN ; COMMENT NO SIZE ERROR ; 22707020
                   IF KEY = 271 THEN COMMENT "ON" ;                     22707030
                   DN ;        %SCAN PAST THE "ON".                     22707040
                   IF KEY ! 397 THEN COMMENT "SIZE" ;                   22707050
              BEGIN SYOUT(MSG[124],ISYMB,LGTH) ; ERP1(15,8,57,124);     22707060
                   GO TO FIN ; COMMENT SYNTAX ERROR SIZE ERR STMT ;     22707070
              END  ;                                                    22707080
                   DN ;        %SCAN PAST THE "SIZE".                   22707090
                   IF KEY ! 515 THEN COMMENT "ERROR" ;                  22707100
              BEGIN SYOUT(MSG[124],ISYMB,LGTH) ; ERP1(15,8,57,124);     22707110
                   GO TO FIN ; COMMENT SYNTAX ERROR SIZE ERROR STATMT;  22707120
              END  ;                                                    22707130
                   DN ;        %                                        22707140
                   IFSTMNT;                                 COMMENT 5/1;22707150
                             %                                          22707151
    FIN :                      %EXIT WITH A "." AS THE CURRENT ITEM.    22707480
              END  ;                                                    22707490
COMMENT  ****************    ADD                 **********************;22710000
PROCEDURE ADDITION ; COMMENT SYNTAX CHECK FOR ADD ;                     22715000
              BEGIN                                                     22720000
INTEGER OPS,USG,OCA,BASEA,CLGTHA,OCB,BASEB,CLGTHB,C;        COMMENT 8-7;22725000
BOOLEAN RND,SERR;                                           COMMENT 5/1;22726000
LABEL L1,FIN ;                                              COMMENT 5/1;22730000
                   DN ;        %SCAN PAST THE "ADD" .                   22735000
                   GETOUT~FALSE ;%GETOUT ~ TRUE IF AN ERROR OCCURS.     22740000
COMMENT 3/3/64;    DIVF~FALSE;                                          22741000
                   HQX~0 ;     %DONT SAVE CALCULATED SUBSCRIPT.         22745000
                   IF LGTH = 4 AND ISYMB[0].[24:24] = "CORR" OR%CJC 085 22745100
                   KEY = 508 THEN  % "CORRESPONDING"           %CJC 085 22745150
              BEGIN CSPGEN(FALSE); GO TO FIN ;                          22745200
                             %PROCESS THE CORRESPONDIN OPTION.          22745201
              END  ;                                                    22745300
COMMENT 5/1;       USG ~ USAGE;                                         22746000
COMMENT 5/1;       C ~ CREG;                                            22746100
COMMENT 5/1;       OCA ~ OCUR ;                                         22746200
COMMENT 5/1;       SSUBS ~ LSUBS ~ 0;                                   22746300
COMMENT 5/1;       FOR OPS ~ 0 STEP 1 UNTIL 6 DO                        22746400
COMMENT 5/1;       CT[OPS] ~ 0;                                         22746500
COMMENT 5/1;       IF TYPE = 17 THEN COMMENT "+"OR"-" ;                 22746600
COMMENT 5/1;  BEGIN CHRTRAN(NSYMB,4,CT,4,NLGTH);                        22746700
                   CT[3]~NLGTH-NSCAL;                       COMMENT 8-7;22746800
                   CT[4]~NSCAL;                             COMMENT 8-7;22746900
COMMENT 5/1;       CT[5] ~ NLGTH;                                       22747000
COMMENT 5/1;       IF KEY = 821 THEN COMMENT "-";                       22747100
COMMENT 5/1;       CT[6] ~ 44;                                          22747200
COMMENT 5/1;       IF LCOMP(344) THEN COMMENT "ZERO" ;                  22747300
COMMENT 5/1;       USG ~ 1;                                             22747400
COMMENT 5/1;  END; IF TYPE = 5 THEN COMMENT LITERAL ;                   22747500
COMMENT 5/1;  BEGIN CHRTRAN(ISYMB,4,CT,4,LGTH);                         22747600
                   CT[3]~LGTH-SSCALE;                       COMMENT 8-7;22747700
                   CT[4]~SSCALE;                            COMMENT 8-7;22747800
COMMENT 5/1;       CT[5]~ LGTH;                                         22747900
COMMENT 5/1;  END; IF KEY = 344 THEN USG~1; COMMENT "ZERO";             22748000
                   OPND ;      %GET VALUE OF FIRST OPERAND TO TOP-      22750000
                             % OF-STACK.                                22750001
                   IF GETOUT THEN GO TO FIN ;                           22755000
                   HQX ~ QAL ; %SET FLAG TO SAVE CALCULATED SUB-        22760000
                   HRX ~ RAL ; % SCRIPT IN PRT LOCATIONS QAL AND RAL    22765000
                             % IN CASE THE RECEIVING FIELD IS THE       22765001
                             % NEXT TO BE SPECIFIED.                    22765002
COMMENT 5/1;       IF USG =0 AND KEY=264 THEN COMMENT DISPLAY AND"TO";  22766010
COMMENT 5/1;  BEGIN DN ; COMMENT SCAN PAST THE "TO" ;                   22766020
                   IF USAGE ! 0 THEN GO TO L1;              COMMENT 8-7;22766030
COMMENT 5/1;       BASEA ~ SSUBS;                                       22766040
COMMENT 5/1;       CLGTHA ~ LSUBS;                                      22766050
COMMENT 5/1;       OCB ~ OCUR ;                                         22766060
COMMENT 5/1;       SSUBS ~ LSUBS ~ 0;                                   22766070
COMMENT 5/1;       OPND; IF GETOUT THEN GO TO FIN ;                     22766080
COMMENT 5/1;       BASEB ~ SSUBS;                                       22766090
COMMENT 5/1;       CLGTHB ~ LSUBS;                                      22766100
COMMENT 5/1;       IF RND ~ KEY = 547 THEN DN; COMMENT "ROUNDED" ;      22766110
COMMENT 5/1;       SERR ~ KEY = 271 OR KEY= 397; COMMENT "ON"OR"SIZE" ; 22766120
COMMENT 5/1;       CREG ~ C ;                                           22766130
COMMENT 5/1;       ADDGEN(FALSE,OCA,BASEA,CLGTHA,OCB,BASEB,CLGTHB,      22766140
COMMENT 5/1;         RND,SERR);                                         22766150
COMMENT 5/1;       IF NOT SERR THEN GO TO FIN ;                         22766160
COMMENT 5/1;       IF KEY = 271 THEN DN; COMMENT ON ;                   22766170
COMMENT 5/1 ;      IF KEY = 397 THEN DN; COMMENT "SIZE" ;               22766180
COMMENT 5/1 ;      IF KEY = 515 THEN COMMENT "ERROR" ;                  22766190
COMMENT 5/1;  BEGIN DN; IFSTMNT; GO TO FIN;                             22766200
COMMENT 5/1 ; END; SYOUT(MSG[124],ISYMB,LGTH);                          22766210
COMMENT 5/1 ;      ERP1(15,8,57,124);                                   22766220
COMMENT 5/1 ;      GO TO FIN ; COMMENT SYNTAX ERR SIZE ERROR STATEMENT; 22766230
COMMENT 5/1 ; END;                                                      22766240
                   OPS~OPNDLST ;%ADD UP THE REST OF THE OPERAND LIST    22770000
                             % AND SAVE THE NUMBER OF OPERANDS.         22770001
                   IF GETOUT THEN GO TO FIN ;                           22775000
                   IF KEY = 264 THEN COMMENT "TO" ;                     22780000
              BEGIN                                                     22785000
                   DN ;        %SCAN PAST THE "O" AND ADD IN THE        22790000
L1:           OPS ~ OPNDLST ;                              COMMENT 5/1; 22791000
                             % RECEIVING FIELD VALUE.                   22791001
                   IF OPS ! 1 THEN                                      22795000
              BEGIN IF OPS = 0 THEN                                     22796000
                   ERP1 ( 9,61,22,124 )  COMMENT MISSING ARITH.OPND;    22800000
                   ELSE ERP1 ( 10,61,22,124 ) ;COMMENT EXTRA ARITH.OPND;22800500
              END  ;                                                    22801000
                   IF GETOUT THEN GO TO FIN ;                           22805000
              END                                                       22810000
                   ELSE                                                 22815000
              BEGIN                                                     22820000
                   IF OPS = 0 THEN                                      22825000
              BEGIN                                                     22830000
                   SYOUT(MSG[124],ISYMB,LGTH);                          22831000
                             %AT LEAST TWO OPERANDS REQUIRED IF         22831001
                   ERP1(9,61,22,124);% NO "TO" OPTION REQUESTED.        22835000
                   GO TO FIN ;                                          22840000
              END  ;                                                    22845000
                   IF KEY = 520 THEN COMMENT "GIVING" ;                 22850000
              BEGIN                                                     22855000
                   DN;         %SCAN PAST THE "GIVING" .                22860000
                   RECFLD ;    %VERIFY AND SAVE RECEIVING FIELD         22865000
                   IF GETOUT THEN GO TO FIN ;% ASSIGNMENT.              22870000
              END  ;                                                    22875000
              END  ;                                                    22880000
                   ARITHCL;    %ROUND,TRUNCATE,AND CHECK FOR SIZE       22885000
                             % ERROR AS REQUESTED.                      22885001
       FIN:                                                             22890000
              END  ;                                                    22895000
COMMENT  ****************    SUBTRACT            **********************;22900000
PROCEDURE SUBTRACT ; COMMENT SYNTAX FOR SUBTRACT ;                      22905000
              BEGIN                                                     22910000
INTEGER C,USG,OCA,BASEA,CLGTHA,OCB,BASEB,CLGTHB,OPS;        COMMENT 8-7;22915000
BOOLEAN RND,SERR;                                           COMMENT 5/1;22916000
LABEL L1,FIN;                                               COMMENT 5/1;22920000
                             %SCAN PAST THE "SUBTRACT" .                22920001
                   DN;                                                  22925000
                   GETOUT~FALSE ;                                       22930000
COMMENT 3/3/64;    DIVF~FALSE;                                          22931000
                   HQX~ 0 ;    %DONT SAVE CALCULATED SUBSCRIPT ADDR.    22935000
                   IF LGTH = 4 AND ISYMB[0].[24:24] = "CORR" OR%CJC 085 22935100
                   KEY = 508 THEN  % "CORRESPONDING"           %CJC 085 22935150
              BEGIN CSPGEN(TRUE) ; GO TO FIN ;                          22935200
                             %PROCESS THE CORRESPONDING OPTION.         22935201
              END  ;                                                    22935300
COMMENT 5/1;       USG ~ USAGE ;                                        22936100
COMMENT 5/1;       C ~ CREG ;                                           22936200
COMMENT 5/1;       OCA ~ OCUR ;                                         22936300
COMMENT 5/1;       SSUBS ~ LSUBS ~ 0;                                   22936400
COMMENT 5/1;       FOR OPS ~ 0 STEP 1 UNTIL 6 DO                        22936500
COMMENT 5/1;       CT[OPS] ~ 0;                                         22936600
COMMENT 5/1;       IF TYPE = 17 THEN COMMENT "+"OR"-" ;                 22936700
COMMENT 5/1;  BEGIN CHRTRAN(NSYMB,4,CT,4,NLGTH);                        22936800
COMMENT 5/1;       CT[3]~ NLGTH-NSCAL;                                  22936900
                   CT[4]~NSCAL;                             COMMENT 8-7;22937000
COMMENT 5/1;       CT[5] ~ NLGTH;                                       22937100
COMMENT 5/1;       IF KEY = 821 THEN COMMENT "-";                       22937200
COMMENT 5/1;       CT[6] ~ 44;                                          22937300
COMMENT 5/1;       IF LCOMP(344) THEN COMMENT "ZERO" ;                  22937400
COMMENT 5/1;       USG ~ 1;                                             22937500
COMMENT 5/1;  END; IF TYPE = 5 THEN COMMENT LITERAL ;                   22937600
COMMENT 5/1;  BEGIN CHRTRAN(ISYMB,4,CT,4,LGTH);                         22937700
COMMENT 5/1;       CT[3]~ LGTH-SSCALE;                                  22937800
                   CT[4]~SSCALE;                            COMMENT 8-7;22937900
COMMENT 5/1;       CT[5]~ LGTH;                                         22938000
COMMENT 5/1;  END; IF KEY = 344 THEN USG~1; COMMENT "ZERO";             22938100
                   OPND ;      %GET VALUE OF FIRST OPERAND TO TOP OF    22940000
                   IF GETOUT THEN GO TO FIN ;% STACK.                   22945000
COMMENT 5/1;       IF USG=0 AND KEY=335 THEN COMMENT DISPLAY AND"FROM"; 22946010
COMMENT 5/1;  BEGIN DN; COMMENT SCAN PAST "FROM";                       22946020
                   IF NOT(USAGE=0 AND SUBS=0 AND          COMMENT 8-5;  22946030
                    NOT LCOMP(520)) THEN                    COMMENT 8-7;22946035
COMMENT 5/1;       GO TO L1; COMMENT SIMPLE DISP. WITH NO GIVING;       22946040
COMMENT 5/1;       HQX ~ QAL ; HRX ~ RAL ;                              22946045
COMMENT 5/1;       BASEA ~ SSUBS;                                       22946050
COMMENT 5/1;       CLGTHA ~ LSUBS ;                                     22946060
COMMENT 5/1;       OCB ~ OCUR ;                                         22946070
COMMENT 5/1;       SSUBS~LSUBS~0;                                       22946080
COMMENT 5/1;       OPND;IF GETOUT THEN GO TO FIN ;                      22946090
COMMENT 5/1;       BASEB ~ SSUBS;                                       22946100
COMMENT 5/1;       CLGTHB ~ LSUBS ;                                     22946110
COMMENT 5/1;       IF RND ~ KEY = 547 THEN DN ; COMMENT "ROUNDED" ;     22946120
COMMENT 5/1;       SERR ~ KEY=271 OR KEY=397; COMMENT "ON"OR"SIZE";     22946130
COMMENT 5/1;       CREG ~ C;                                            22946140
COMMENT 5/1;       ADDGEN(TRUE,OCA,BASEA,CLGTHA,OCB,BASEB,CLGTHB,       22946150
COMMENT 5/1;         RND,SERR);                                         22946160
COMMENT 5/1;       IF NOT SERR THEN GO TO FIN ;                         22946170
COMMENT 5/1;       IF KEY = 271 THEN DN; COMMENT "ON";                  22946180
COMMENT 5/1;       IF KEY = 397 THEN DN; COMMENT "SIZE";                22946190
COMMENT 5/1;       IF KEY = 515 THEN COMMENT "ERROR" ;                  22946200
COMMENT 5/1;  BEGIN DN; IFSTMNT; GO TO FIN;                             22946210
COMMENT 5/1;  END; SYOUT(MSG[124],ISYMB,LGTH);                          22946220
COMMENT 5/1;       ERP1(15,8,57,124);                                   22946230
COMMENT 5/1;       GO TO FIN;COMMENT SYNTAX ERR SIZE ERROR STATEMENT;   22946240
COMMENT 5/1;  END;                                                      22946250
                   OPS~ OPNDLST ;%ADD UP REST OF OPERANDS IN THE LIST.  22950000
                   IF GETOUT THEN GO TO FIN ;                           22955000
                   IF KEY ! 335 THEN COMMENT "FROM" ;                   22965000
              BEGIN                                                     22970000
                   SYOUT(MSG[124],ISYMB,LGTH);                          22971000
                   ERP(9 & 124[32:40:8],"FROM  "); COMMENT FROM MISSING;22975000
                   RECOV ;                                              22980000
                   GO TO FIN ;                                          22985000
              END  ;                                                    22990000
                   DN ;        %SCAN PAST THE "FROM" .                  22995000
L1:                EMIL ( OPR,CHS ) ;                      COMMENT 5/1; 22995100
                   HQX ~ QAL ; %SET FLAGS TO SAVE THE CALCULATED        23000000
                   HRX ~ RAL ; % SUBSCRIPT ADDRESS IN CASE THIS IS      23005000
                             % THE RECEIVING FIELD .                    23005001
                   IF OPNDLST ! 1 THEN%ADD IN THE"FROM" OPERAND.        23010000
              BEGIN                                                     23015000
                   SYOUT(MSG[124],ISYMB,LGTH);                          23016000
                   ERP1(9,61,22,124);                                   23020000
                   GO TO FIN ; COMMENT MISSING ARITH. OPND ;            23025000
              END;                                                      23030000
                   IF KEY = 520 THEN COMMENT "GIVING" ;                 23035000
              BEGIN                                                     23040000
                   DN;         %SCAN PAST THE "GIVING" .                23045000
                   RECFLD;     %VERIFY AND SAVE RECEIVING FIELD         23050000
                             % ASSIGNMENT.                              23050001
                   IF GETOUT THEN GO TO FIN ;                           23055000
              END  ;                                                    23060000
                   ARITHCL;    %ROUND,TRUNCATE,AND CHECK FOR SIZE       23065000
                             % ERROR AS REQUESTED.                      23065001
       FIN:                                                             23070000
              END  ;                                                    23075000
COMMENT **************************  MULTIPLY  *************************;23080000
PROCEDURE MULTIPLY ; COMMENT SYNTAX CONTROL FOR MULTIPLY .              23085000
                   IF THE SIZE OF THE OPERANDS OR RECEIVING FIELD IS    23090000
                   >11 OR     L3+R1+R2 > 11 THEN DOUBLE PRECISION ;     23095000
              BEGIN                                                     23100000
 INTEGER Y,C,L ;                                                        23105000
 BOOLEAN P1,P2,P3 ;                                                     23110000
 LABEL FIN ;                                                            23115000
                   DN;         %SCAN PAST THE "MULTIPLY" .              23120000
                   GETOUT ~ FALSE ;                                     23125000
                             %GETOUT SPECIFIES IF AN ERROR OCCURS.      23125001
COMMENT 3/3/64;    DIVF~FALSE;                                          23126000
                   HQX ~ 0 ;   %DONT SAVE THE SUBSCRIPT ADDRESS.        23130000
                   OPND ;      %GET VALUE OF FIRST OPERAND TO TOPE OF   23135000
                             % STACK.                                   23135001
                   IF GETOUT THEN GO TO FIN ;                           23140000
                   P1~RPREC ;                                           23145000
                   Y~ RSCALE ; %SAVE ITS SCALE AND PRECISION.           23150000
                   IF KEY ! 507 THEN COMMENT "BY" ;                     23155000
              BEGIN                                                     23160000
                   SYOUT(MSG[124],ISYMB,LGTH);                          23161000
                   ERP(9 & 124[32:40:8],"BY    "); COMMENT"BY" MISSING; 23165000
                   RECOV ;                                              23170000
                   GO TO FIN ;                                          23175000
              END  ;                                                    23180000
                   DN ;        %SCAN PAST THE "BY".                     23185000
                   HQX ~ QAL ; %SET FLAGS TO SAVE SUBSCRIPT ADDRESS     23190000
                   HRX ~ RAL ; % IN PRT LOCATIONS QAL AND RAL .         23195000
                   C~CREG ;                                             23200000
                   EMIL(DIA,0)      ; COMMENT NOOPS FOR DOUBLE PREL ;   23205000
                             %PUT IN TWO NOOPS IN CASE DOUBLE           23205001
                   EMIL (DIA,0)      ;% PRECISION IS NEEDED.            23210000
                   OPND ;      %GET SECOND OPERAND TO TOP OF STACK      23215000
                   IF GETOUT THEN GO TO FIN ;                           23220000
                             % AND SET RESULT SCALE (RSCALE) TO         23220001
                   P2~RPREC;   % THE SUM OF THE TWO SCALES.             23225000
                   RSCALE~ RSCALE +Y ;                                  23230000
                   IF KEY = 520 THEN COMMENT "GIVING" ;                 23235000
              BEGIN                                                     23240000
                   DN ;        %SCAN PAST THE "GIVING" AND SAVE THE     23245000
                   P3~LFP+SCALE > 11 ;                                  23250000
                             % RECEIVING FIELD LEFT PART(RLFP) AND      23250001
                   RLFP~LFP;   % SCALE(RSCALE) .                        23255000
                   RECFLD ;    %VERIFY AND SAVE RECEIVING FIELD         23260000
                             % ASSIGNMENT.                              23260001
                   IF GETOUT THEN GO TO FIN ;                           23265000
              END                                                       23270000
                   ELSE                                                 23275000
                   P3~P2 ;     %LAST NAMED FIELD IS THE RECEIVING       23280000
                             % FIELD.                                   23280001
                   RPREC~(P1 OR P2 OR P3 OR(RLFP+RSCALE)>11);           23285000
                             %DOUBLE PRECISION MULTIPLY IS ISSUED       23285001
                             % IF ONE OF THE FIELDS IS DECLARED         23285002
                             % DOUBLE PREC. OR IF THE RECEIVING         23285003
                             % FIELD LEFT PART (RLFP) + THE SCALES      23285004
                             % OF THE TWO OPERANDS(RSCALE) > 11         23285005
                             % (SIZE ERROR SHOULD BE REQUESTED IF       23285006
                             % RESULT LEFT PART CAN BE > RECEIV-        23285007
                             % ING FIELD RESULT) .                      23285008
                   IF REAL(P1)< REAL(RPREC) THEN COMMENT MAKE DOUBLE ;  23290000
              BEGIN                                                     23295000
                   EMIT(LITC,0,C) ;                                     23300000
                             %ADJUST TO RESULT PRECISION BY FIXING      23300001
                   EMIT(OPR,XCH,C);% UP PRIOR NOOPS.                    23305000
              END  ;                                                    23310000
                   IF REAL(P2)<REAL(RPREC) THEN COMMENT MAKE DOUBLE ;   23315000
              BEGIN                                                     23320000
                   EMIL(LITC,0)      ;%ADJUST TO RESULT PRECISION.      23325000
                   EMIL(OPR,XCH)     ;                                  23330000
              END  ;                                                    23335000
                   IF RPREC THEN COMMENT DOUBLE ;                       23340000
                   EMIL(OPR,DLM)                                        23345000
                   ELSE                                                 23350000
                   EMIL(OPR,MUL)      ;                                 23355000
                   ARITHCL ;   %ROUND, TRUNCATE,AND CHECK FOR SIZE      23360000
       FIN:                    % ERROR AS REQUESTED.                    23365000
              END  ;                                                    23370000
COMMENT  ****************    DIVIDE              **********************;23375000
PROCEDURE DIVIDE ; COMMENT SYNTAX CONTROL FOR DIVIDE.                   23380000
                   IF THE SIZE OF THE OPERANDS OR THE                   23385000
                   SIZE OF THE RECEIVING FIELD (+1 IF ROUNDED) THEN     23390000
                   DOUBLE PRECISION ;                                   23395000
              BEGIN                                                     23400000
INTEGER C,L,W,K;                                                        23405000
                   DN;         %SCAN PAST THE "DIVIDE".                 23410000
                   GETOUT~FALSE ;%GETOUT ~ TRUE IF AN ERROR OCCURS.     23415000
                   DIVF ~ TRUE ;%SET DIVIDE FLAG FOR SIZE ERROR         23420000
                             % TESTING AND DIVIDE BY 0 CHECKING.        23420001
                   HQX~0 ;     %DONT SAVE THE SUBSCRIPT ADDRESS.        23425000
                   C~CREG; COMMENT SAVE START OF DIVISOR CODE ;         23430000
                             %THE DIVISOR AND DIVIDEND ARE GIVEN        23430001
                   OPND ; COMMENT VALU  OF DIVISOR ;                    23435000
                             % IN REVERSE ORDER(THEIR VALUE CODE        23435001
                   L~CREG- C ; % IS INTERCHANGED USING A DYNAMIC        23440000
                   W~L DIV 8 + 1 ;% ARRAY X1 AS TEMPORARY STORAGE).     23445000
                   K~ W DIV 127 ;                                       23450000
              BEGIN                                                     23455000
 INTEGER X,Y,L1,R1,L2,R2,L3,R3 ;                                        23460000
 BOOLEAN P1,P2,P3 ;                                                     23465000
ARRAY X1 [0:K,0:IF K !0 THEN 127 ELSE W MOD 127 ];                      23470000
 LABEL FIN ;                                                            23475000
                   IF GETOUT THEN GO TO FIN ;                           23480000
                   IF KEY ! 523 THEN COMMENT "INTO" ;                   23485000
              BEGIN                                                     23490000
                   SYOUT(MSG[124],ISYMB,LGTH);                          23491000
                   ERP(9 & 124[32:40:8], "INTO  ");COMMENT INTO MISSING;23495000
                   RECOV ;                                              23500000
                   GO TO FIN ;                                          23505000
              END  ;                                                    23510000
                   DN ;                                                 23515000
                   X~0 ;                                                23520000
                   COPICODE(SEG,C,X1,X,L);COMMENT SAVE DIVISOR CODE;    23525000
                             %SCAN PAST THE "INTO".                     23525001
                   P1~RPREC;   %SAVE THE DIVISOR CODE,ITS LEFT PART,    23530000
                   L1~ RLFP ;  % SCALE AND PRECISION.                   23535000
                   R1~ RSCALE ;                                         23540000
                   HQX ~ QAL ; %SET FLAGS TO SAVE SUBSCRIPT ADDRESS     23545000
                   HRX ~ RAL ; % IN PRT LOCATIONS QAL AND RAL.          23550000
                   CREG ~ C ;  %THE DIVIDEND CODE OVERWRITES THE        23555000
                   OPND; COMMENT VALU OF DIVIDEND;% DIVISOR VALUE CODE. 23560000
                   IF GETOUT THEN GO TO FIN ;                           23565000
                   P2~RPREC ;                                           23570000
                   L2~ RLFP ;  %SAVE DIVIDEND LEFT PART,SCALE AND       23575000
                   R2~ RSCALE ;% PRECISION.                             23580000
                   IF KEY = 520 THEN COMMENT "GIVING" ;                 23585000
              BEGIN                                                     23590000
                   DN ;        %SCAN PAST THE "GIVING" AND SAVE THE     23595000
                   L3~LFP ;    % RECEIVING FIELD LEFT PART,SCALE        23600000
                   R3~SCALE ;  % AND PRECISION.                         23605000
                   RECFLD ;    %VALIDATE THE RECEIVING FIELD AND        23610000
                             % SAVE ITS ASSIGNMENT.                     23610001
                   IF GETOUT THEN GO TO FIN ;                           23615000
              END                                                       23620000
                   ELSE                                                 23625000
              BEGIN                                                     23630000
                   L3~L2;      %THE DIVIDEND IS THE RECEIVING FIELD.    23635000
                   R3~R2;                                               23640000
              END  ;                                                    23645000
                   R3~R3+1;    %AN EXTRA ROUNDING POSITION IS           23655000
                             % REQUIRED IN THE RESULT.                  23655001
                   P3~L3+R3 >11 ;                                       23660000
                   RPREC~(P1 OR P2 OR P3 ) ;                            23665000
                             %DOUBLE PRECISION IS IMPLEMENTED IF        23665001
                             % ANY OF THE FIELDS IF DECLARED DP.        23665002
                   Y~R1-R2+R3 ;                                         23670000
                   IF REAL (P2)< REAL(RPREC) THEN COMMENT MAKE DOUBLE;  23675000
              BEGIN                                                     23680000
                   EMIL(LITC,0)      ;                                  23685000
                             %ADJUST TO INTERMEDIATE PRECISION.         23685001
                   EMIL(OPR,XCH)     ;                                  23690000
              END  ;                                                    23695000
                   IF Y>0 THEN                                          23700000
                   SLT(Y) ;    %ADJUST DECIMAL OF THE DIVIDEND.         23705000
                   IF REAL(P1) < REAL (RPREC) THEN COMMENT MAKE DOUBLE; 23710000
                   EMIL(LITC,0)      ;%ADJUST PRECISION OF DIVISOR.     23715000
                   COPICODE(X1,0,SEG,CREG,L);                           23720000
                             %COPY THE DIVISOR CODE FROM DYNAMIC        23720001
                   IF Y<0 THEN % ARRAY X1 AND ADJUST ITS DECIMAL.       23725000
              BEGIN                                                     23730000
                   RLFP ~L1 ;                                           23735000
                   RSCALE ~ R1;                                         23740000
                   SLT(ABS(Y));                                         23745000
              END  ;                                                    23750000
                   IF RPREC THEN COMMENT DOUBLE ;                       23755000
                   EMIL ( OPR , DLD )                                   23760000
                   ELSE                                                 23765000
                   EMIL ( OPR , IDV )        ;                          23770000
                   RLFP~L3 ;   %SET THE RESULT LEFT PART AND SCALE.     23775000
                   RSCALE ~ R3 ;                                        23780000
                   ARITHCL;    %ROUND,TRUNCATE AND CHECK FOR SIZE       23785000
       FIN:                    % ERROR AS REQUESTED.                    23790000
              END  ;                                                    23795000
              END  ;                                                    23800000
                        PROCEDURE PRIMARY;FORWARD;                      23805000
COMMENT  ****************    ARITH. CONTINUE     **********************;23810000
PROCEDURE ACONT ;  COMMENT CONTINUES EVALUATION OF ARITH. EXPRESSIONS ; 23815000
              BEGIN                                                     23820000
        LABEL L1, L2, L3, PLUS, MINUS, MULT, DIVIDE, EXPON, MODD, FIN;  23825000
        SWITCH OPER ~ PLUS, MINUS, MULT, DIVIDE, EXPON, MODD, MODD;     23830000
 INTEGER OP , H1 , H2 , LP1 , R1 , LP2 , R2 , Y ;                       23835000
       L1:                                                              23840000
                   IF CAT ! 6 THEN GO TO FIN ;                          23845000
                             %2F THE CURRENT ITEM IS NOT AN             23845001
                             % ARITHMETIC OPERATOR,EXIT.                23845002
                   LP1 ~ RLFP ;%SAVE THE INTERMEDIATE LEFT PART AND     23850000
                   R1 ~ RSCALE ;% SCALE.                                23855000
                   OP ~ KEY - 820 ;                                     23860000
                             %THE OPERATOR HIERARCHY AND KEYS ARE:      23860001
                   IF KEY = 554 THEN COMMENT "TIMES" ;                  23865000
                             % KEY OPERATOR            HIERARCHY        23865001
                   OP~ 2       % 820   +,PLUS            1              23870000
                             % 821   -,MINUS           1                23870001
                             % 822    *,MULTIPLIED     2                23870002
                             % 554   TIMES             2                23870003
                             % 823   /,DIVIDED         2                23870004
                      % 825   MOD               2              %TR 740  23870005
                      % 826   DIV               2              %TR 740  23870006
                      % 824   **,EXPONENTIATED  3              %TR 740  23870007
                   ELSE IF KEY = 822 AND LGTH = 1  AND                  23875000
                           NSYMB[0].[24:6] = 43 THEN COMMENT "**" ;     23880000
                             %CHECK FOR "**".                           23880001
              BEGIN                                                     23885000
                   DN;         %SCAN PAST THE FIRST "*" AND FLAG **.    23890000
                   OP ~ 4 ;                                             23895000
              END                                                       23900000
              ELSE IF(KEY=822 AND LGTH!1)OR (KEY=823 AND LGTH! 1)OR     23905000
                           KEY = 824 THEN                               23910000
              BEGIN            %SCAN PAST THE "MULTIPLIED","DIVIDED"    23915000
                   DN ;        % OR "EXPONENTIATED".                    23920000
                   SYOUT ( MSG[124],ISYMB,LGTH) ;                       23921000
                   IF KEY ! 507 THEN COMMENT "BY" ;                     23925000
                   ERP(9 & 124[32:40:8],"BY    "); COMMENT BY MISSING ; 23930000
              END  ;                                                    23935000
                   DN ;        %SCAN PAST THE OPERATOR,SECOND"*" OR     23940000
                             % "BY".                                    23940001
                   IF OP > 4 THEN      % MOD AND DIV           %TR 740  23943000
                   H1 ~ 2 ELSE         % SET TO 2              %TR 740  23944000
                   H1 ~(OP DIV 2) +1 ;%THE CURRENT HIERARCHY(H1) IS A   23945000
                             % FUNCTION OF THE KEY-820.                 23945001
                   PRIMARY ;   %GET THE VALUE OF THE OPERAND TO TOP     23950000
                   IF GETOUT THEN GO TO FIN ;                           23955000
                             % OF STACK AND SCAN TO NEXT ITEM.          23955001
       L2 :                                                             23960000
                   LP2 ~ RLFP ;                                         23965000
                   R2 ~ RSCALE ;%SAVE THE NEW LEFT PART AND SCALE.      23970000
                   IF CAT ! 6 THEN%IF THE CURRENT ITEM IS NOT AN OPER-  23975000
                   H2 ~ 0      % ATOR, SET THE NEW HIERARCHY(H2)=0      23980000
                             % TO FORCE OUT ALL OPERATORS OF A          23980001
                             % HIGHER LEVEL.                            23980002
                   ELSE IF KEY = 554   % TIMES                 %TR 740  23985000
                   OR KEY = 825        % MOD                   %TR 740  23986000
                   OR KEY = 826        % DIV                   %TR 740  23987000
                   THEN                                        %TR 740  23988000
                   H2 ~ 2                                               23990000
                   ELSE IF KEY = 822 AND LGTH = 1 AND                   23995000
                           NSYMB[0].[24:6]= 43 THEN COMMENT "**" ;      24000000
                   H2 ~ 3                                               24005000
                   ELSE        %ASSIGN A HIERARCHY NUMBER TO THE NEW    24010000
                   H2 ~(KEY - 820) DIV 2 + 1 ;                          24015000
                             % OPERATOR BUT DONT SCAN PAST IT.          24015001
                   IF H1 } H2 THEN%IF THE OLD HIERARCHY IS } NEW HIER-  24020000
                   GO TO OPER [OP+1]% ARCHY, COMBINE THE TWO OPERANDS   24025000
                             % ATH THE TOP OF THE STACK.                24025001
                   ELSE                                                 24030000
              BEGIN                                                     24035000
                   ACONT ;     % LOWER HIERARCHY(0 EVENTUALLY).         24040000
                   IF GETOUT THEN GO TO FIN ;                           24045000
                             %FOR "+" AND "-" THE INTERMEDIATE          24045001
                   GO TO L2 ;                                           24050000
              END  ;                                                    24055000
       PLUS :                  % RESULT LEFT PART(RLFP) AND SCALE       24060000
                   RLFP ~ IF LP1 } LP2 THEN LP1 ELSE LP2 ;              24065000
                             % (RSCALE) IS THE MAXIMUM LP AND R         24065001
                   RSCALE ~ IF R1 } R2 THEN R1 ELSE R2 ;                24070000
                             % OF THE TWO OPERANDS.                     24070001
                   Y ~ R1-R2 ;                                          24075000
                   IF Y ! 0 THEN                                        24080000
              BEGIN                                                     24085000
                   IF Y < 0 THEN%ADJUST THE DECIMAL OF THE INTERMED-    24090000
                   EMIL(OPR,XCH)      ;                                 24095000
                             % IATE RESULT OR THE CURRENT OPERAND.      24095001
                   IF Y ! 0 THEN SLT ( Y ) ;                            24096000
              END  ;                                                    24115000
                   EMIL(OPR,ADD)      ;                                 24120000
                   GO TO L3 ;                                           24125000
       MINUS:                                                           24130000
                   EMIL(OPR,CHS)      ;%CHANGE THE SIGN AND "+".        24135000
                   GO TO PLUS ;                                         24140000
       MULT :                                                           24145000
                   RLFP ~ LP1 + LP2 ;                                   24150000
                             %THE INTERMEDIATE RESULT SIZE IS THE       24150001
                   RSCALE ~ R1+R2 ;% SUM OF THE LEFP PARTS AND RIGHT    24155000
                   EMIL(OPR,MUL)      ;% PARTS.                         24160000
                   GO TO L3 ;                                           24165000
       DIVIDE:                 %THE INTERMEDIATE RESULT SIZE IS THE     24170000
                   RLFP ~ LP1 - LP2 ;                                   24175000
                             % DIFFERENCE BETWEEN THE LEFT PARTS        24175001
                   RSCALE ~ R1-R2 ;% AND RIGHT PARTS.                   24180000
                   EMIL(OPR,DID)      ;                                 24185000
                   DIVF ~ TRUE ;%SET THE DIVIDE FLAG FOR DIVIDE BY      24190000
                   GO TO L3 ;  % ZERO TESTING IN SIZE ERROR ROUTINE.    24195000
       EXPON:                                                           24200000
                   UNSCALE ;   %CHANGE THE INTEGER NUMBERS TO FLOAT-    24205000
                   IF R1 ! 0 THEN% ING POINT NUMBERS AND CALL ON        24210000
              BEGIN            % LOG AND EXP .                          24215000
                   RSCALE ~ R1 ;                                        24220000
                   EMIL(OPR,XCH)      ;                                 24225000
                   UNSCALE ;                                            24230000
                   EMIL(OPR,XCH)      ;                                 24235000
              END  ;                                                    24240000
                   EMIL(OPR,MKS)      ;                                 24245000
                   IF IFUNCT[9] = 0 THEN COMMENT XTOTHE NOT ASSIGNED;   24246000
              BEGIN IFUNCT[9] ~ PRTCTR ; PRTCTR ~ PRTCTR+1 ;            24247000
                   IF IFUNCT[5] = 0 THEN COMMENT LN  NOT YET ASSIGNED ; 24248000
              BEGIN IFUNCT[5] ~ PRTCTR ; PRTCTR ~ PRTCTR + 1 ;          24249000
              END  ;                                                    24250000
                   IF IFUNCT[6] = 0 THEN COMMENT EXP NOT YET ASSIGNED ; 24251000
              BEGIN IFUNCT[6] ~ PRTCTR ; PRTCTR ~ PRTCTR + 1 ;          24252000
              END  ;                                                    24253000
              END  ;                                                    24254000
                    EMIL(LITC,IFUNCT[5]);                       %TR-373 24255000
                    IF IFUNCT[5]> 511 THEN EMIL(OPR,XRT);       %TR-373 24255100
                    EMIL(OPR,LOD);                              %TR-373 24255200
                    EMIL(LITC,IFUNCT[6]);                       %TR-373 24256000
                    IF IFUNCT[6]> 511 THEN EMIL(OPR,XRT);       %TR-373 24256100
                    EMIL(OPR,LOD);                              %TR-373 24256200
                   IF IFUNCT[9] > 511 THEN EMIL(OPR,XRT);      %TR 700  24256300
                   EMIL(OPDC,IFUNCT[9]); COMMENT XTOTHE ;               24257000
                   EMIL(OPR,DEL);                         COMMENT 8-7;  24258000
                   RLFP ~ LP1 | LP2 ;                                   24260000
                             %THE INTERMEDIATE SCALE IS 0 BECAUSE       24260001
                             % THE RESULT IS A FLOATING POINT NO.       24260002
                   GO TO L3 ;                                           24265000
        MODD:       RLFP ~ IF LP1 } LP2 THEN LP1 ELSE LP2;    %TR-147   24266000
                    RSCALE ~ IF R1}R2 THEN R1 ELSE R2;        %TR-147   24266100
                    IF R1 ! R2 THEN                           %TR-147   24266200
             BEGIN  Y ~ R1 - R2;                              %TR-147   24266300
                    IF R2 > R1 THEN                           %TR-147   24266400
             BEGIN  EMIL(OPR,XCH); SLT(Y); EMIL(OPR,XCH);     %TR-147   24266500
             END    ELSE SLT(Y);                              %TR-147   24266600
             END;   EMIL(OPR, IF OP=5 THEN RDV ELSE IDV);     %TR-147   24266700
                    IF OP = 5 THEN                            %TR-378   24266800
             BEGIN      EMIL(LITC,  1);                       %TR-378   24266850
                        EMIL(OPR ,IDV);                       %TR-378   24266900
             END  ELSE  RSCALE ~ 0;                           %TR-378   24266950
       L3 :                                                             24270000
                   IF H1 = H2 THEN%IF THE OLD HIERARCHY = THE NEW,      24275000
                   GO TO L1 ;  % SET THE NEW TO THE OLD AND DO IT       24280000
       FIN:                    % AGAIN.                                 24285000
              END  ;                                                    24290000
COMMENT  ****************    ARITH. SECONDARY    **********************;24295000
PROCEDURE ASEC ;   COMMENT OBTAINS THE FIRST PRIMARY OF AN EXPRESSION   24300000
                   AND APPLIES THE UNARY MINUS IF NECESSARY ;           24305000
              BEGIN                                                     24310000
 LABEL L1, FIN ;                                                        24320000
                   IF KEY ! 821 THEN COMMENT "-" ;                      24325000
              BEGIN                                                     24330000
                   IF KEY = 820 THEN COMMENT "+" ;                      24335000
                   DN ;        %SCAN PAST A UNARY "+" AND IGNORE.       24340000
                   PRIMARY ;   %GET THE FIRST OPERAND OF THE            24345000
                   GO TO FIN ; % FORMULA TO THE TOP OF THE STACK.       24350000
              END  ;                                                    24355000
                   DN ;        %SCAN PAST THE UNARY "-" AND GET THE     24360000
                   PRIMARY ;   % FIRST PRIMARY TO THE TOP OF THE        24365000
                   IF GETOUT THEN GO TO FIN ;% STACK.                   24370000
       L1 :        IF KEY = 824 OR (KEY = 822 AND TYPE = 17 AND         24375000
                     NSYMB [ 0 ] . [ 24 : 6 ] = 43 ) THEN COMMENT ** ;  24380000
                             %THE UNARY "-" IS ASSOCIATED WITH A        24380001
              BEGIN            % FACTOR LIST :                          24385000
                   IF KEY = 824 THEN COMMENT"EXPONENTIATED" ;           24390000
                             % -A**B**C MEANS - (A**B**C)               24390001
              BEGIN                                                     24395000
                   DN ;        %SCAN PAST THE "EXPONENTIATED".          24400000
                   SYOUT ( MSG [ 124 ] ,ISYMB,LGTH ) ;                  24401000
                   IF KEY ! 507 THEN COMMENT "BY    " ;                 24402000
                   ERP(9&124[32:40:8],"    BY" ) ;COMMENT "BY" MISSING; 24405000
              END                                                       24415000
                   ELSE                                                 24420000
                   DN ;        %SCAN PAST THE "BY" OR FIRST "*".        24425000
                   DN ;        %SCAN PAST THE SECOND "*".               24430000
                   UNSCALE ;                                            24440000
                   PRIMARY ;   %GET THE VALUE OF THE NEXT PRIMARY TO    24445000
                             % THE TOP OF THE STACK.                    24445001
                   IF GETOUT THEN GO TO FIN ;                           24450000
                   UNSCALE ;                                            24455000
                   RLFP ~ RLFP | LFP ;%CHANGE THE INTEGER OPERAND TO    24460000
                   EMIL(OPR,MKS)      ;% FLOATING POINT NUMBERS,SET THE 24465000
                             % RESULT SCALE (RSCALE) TO 0 AND           24465001
                             % CALL ON LOG AND EXP.                     24465002
                   IF IFUNCT[9] = 0 THEN COMMENT XTOTHE NOT ASSIGNED;   24466000
              BEGIN IFUNCT[9] ~ PRTCTR; PRTCTR ~ PRTCTR+1;              24467000
                   IF IFUNCT[5] = 0 THEN COMMENT LN  NOT YET ASSIGNED ; 24468000
              BEGIN IFUNCT[5] ~ PRTCTR ; PRTCTR ~ PRTCTR + 1 ;          24469000
              END  ;                                                    24470000
                   IF IFUNCT[6] = 0 THEN COMMENT EXP NOT YET ASSIGNED ; 24471000
              BEGIN IFUNCT[6] ~ PRTCTR ; PRTCTR ~ PRTCTR + 1 ;          24472000
              END  ;                                                    24473000
              END  ;                                                    24474000
                    EMIL(LITC,IFUNCT[5]);                       %TR-373 24475000
                    IF IFUNCT[5]> 511 THEN EMIL(OPR,XRT);       %TR-373 24475100
                    EMIL(OPR,LOD);                              %TR-373 24475200
                    EMIL(LITC,IFUNCT[6]);                       %TR-373 24476000
                    IF IFUNCT[6]> 511 THEN EMIL(OPR,XRT);       %TR-373 24476100
                    EMIL(OPR,LOD);                              %TR-373 24476200
                   IF IFUNCT[9] > 511 THEN EMIL(OPR,XRT);      %TR 700  24476300
                   EMIL(OPDC,IFUNCT[9]); COMMENT XTOTHE ;               24477000
                   EMIL(OPR,DEL);                         COMMENT 8-7;  24478000
                   GO TO L1 ;  %LOOK FOR ANOTHER FACTOR.                24480000
              END                                                       24485000
                   ELSE                                                 24490000
                   EMIL(OPR,CHS)     ;                                  24495000
                             %APPLY THE UNARY "-" TO THE PRIMARY.       24495001
       FIN:                                                             24500000
              END  ;                                                    24505000
COMMENT  ****************    FORMULA             **********************;24510000
PROCEDURE FORMULA; COMMENT EVALUATES ARITHMETIC EXPRESSIONS ;           24515000
              BEGIN                                                     24520000
 INTEGER RQX ;                                                          24525000
 LABEL L1,FIN;                                                          24530000
                   RPREC ~ FALSE ; COMMENT RESULT PRECISION IS SINGLE ; 24531000
                   RQX ~ HQX ; COMMENT SAVE LOCATION OF SUBSC. VALUE ;  24535000
                             %DONT SAVE THE SUBSCRIPT ADDRESS BUT       24535001
                   HQX ~ 0 ;   % SAVE THE FLAG TO BE RESTORED LATER.    24540000
                   ASEC ;      %GET THE FIRST PRIMARY TO TOP-OF-STK.    24545000
                   IF GETOUT THEN GO TO FIN ;                           24550000
       L1:                                                              24555000
                   IF CAT = 6 THEN COMMENT ARITH. OP. ;                 24560000
              BEGIN                                                     24565000
                   ACONT ;     %IF THE CURRENT ITEM IS AN OPERATOR,     24570000
                   IF GETOUT THEN GO TO FIN ;                           24575000
                             % CONTINUE PROCESSING THE EXPRESSION.      24575001
                   GO TO L1 ;  %LOOK FOR AN OPERATOR FOLLOWING A ")"    24580000
              END  ;                                                    24585000
                   HQX ~ RQX ; %RESTORE THE SAVE SUBSCRIPT ADR.FLAG.    24590000
       FIN:                                                             24595000
              END  ;                                                    24600000
COMMENT  ****************    COMPUTE             **********************;24605000
PROCEDURE COMPUTE ; COMMENT SYNTAX AND CONTROL FOR COMPUTE ;            24610000
              BEGIN                                                     24615000
 INTEGER OCC, R, Y ;                                                    24620000
 BOOLEAN S , RND ;                                                      24625000
 LABEL FIN ;                                                            24630000
COMMENT 3/3/64;    DIVF~FALSE;                                          24631000
                   GETOUT ~ FALSE ;%GETOUT IS AN ERROR FLAG.            24635000
                   DN ;        %SCAN PAST THE "COMPUTE".                24640000
                   IF LFP + SCALE > 11 THEN COMMENT DOUBLE PREC. ;      24645000
                             %ALL FIELDS  LIMITED TO SINGLE PREC.       24645001
              BEGIN                                                     24650000
                   SYOUT(MSG[124],ISYMB,LGTH);                          24655000
                   ERP1(40,15,27,124); COMMENT ILLEGAL SIZE SPEC ;      24660000
                   GO TO FIN ;                                          24670000
              END  ;                                                    24675000
                   HQX ~ QAL ; %SET FLAGS TO SAVE SUBSCRIPT ADDRESS     24680000
                   HRX ~ RAL ; % IN PRT LOCATIONS QAL AND RAL.          24685000
                   OCC ~ OCUR ;                                         24690000
                   S ~ SIGNED = 0 ;                                     24695000
                   R ~ SCALE ; %VERIFY THE RECEIVING FIELD AND SAVE     24700000
                   RECFLD ;    % ITS ASSIGNMENT AND OTHER INFO.         24705000
                   IF GETOUT THEN GO TO FIN ;                           24710000
                   RND ~ FALSE ;                                        24715000
                   IF KEY = 547 THEN COMMENT "ROUNDED" ;                24720000
              BEGIN                                                     24725000
                   RND ~ TRUE ;%SET ROUND FLAG AND SCAN PAST THE        24730000
                   DN ;        % "ROUNDED".                             24735000
              END  ;                                                    24740000
                   IF KEY! 802 AND KEY !335 THEN COMMENT"FROM" OR "=" ; 24745000
              BEGIN                                                     24750000
                   SYOUT(MSG[124],ISYMB,LGTH);                          24751000
                   ERP1(9,11,23,124); COMMENT MISSING ASSIGNMENT OPER;  24755000
                   GO TO FIN ;                                          24760000
              END  ;                                                    24765000
                   DN ;        %SCAN PAST THE"FROM",EQUALS"OR"=".       24770000
                   FORMULA ;   %PROCESS THE ARIGHMETIC EXPRESSION.      24775000
                   IF GETOUT THEN GO TO FIN ;                           24780000
                   ROCUR ~ OCC ;                                        24795000
                   IF S THEN COMMENT UNSIGNED ;                         24800000
                             %RESTORE THE RECEIVING FIELD ASSIGN.       24800001
                   EMIL(OPR,SSP)     ;                                  24805000
                   IF RND THEN COMMENT "ROUNDED" WAS REQUESTED ;        24810000
                             %SET THE SIGN AND ROUND IF NECESSARY.      24810001
              BEGIN IF RSCALE - R { 0 AND DIVF THEN                     24812000
              BEGIN SLT ( RSCALE-R-1 ) ; RSCALE ~ R+1 ;                 24813000
              END;                                                      24814000
                   ROUND;                                               24815000
              END;                                                      24815500
                   Y~ RSCALE -R ;                                       24820000
                   IF Y ! 0 THEN                                        24825000
              BEGIN                                                     24830000
                   IF Y > 0 THEN                                        24835000
                   SRT(ABS(Y)) %ADJUST THE DECIMAL TO THE RECEIVING     24840000
                   ELSE        % FIELD.                                 24845000
                   SLT(Y) ;                                             24850000
              END  ;                                                    24855000
                    IF Y { 0 AND DIVF THEN                              24855100
              BEGIN                                                     24855200
                   EMIL(LITC,1);                                        24855500
                   EMIL(OPR,IDV);%INTEGERIZE THE RESULT.                24855600
              END  ;                                                    24855700
                   SIZERR ;    %CHECK FOR SIZE ERROR AND STORE.         24860000
       FIN:                                                             24865000
              END  ;                                                    24870000
COMMENT  ****************    PRIMARY             **********************;24875000
PROCEDURE PRIMARY ; COMMENT OBTAINS AN ARITHMETIC PRIMARY ;             24880000
              BEGIN                                                     24885000
 INTEGER K ;                                                            24890000
LABEL RIGHT, FIN,L1,L2;                                   COMMENT 8-18; 24895000
                   IF KEY = 451 THEN COMMENT "(" ;                      24900000
              BEGIN                                                     24905000
                   DN ;        %SCAN PAST THE "(".                      24910000
                   FORMULA ;   %PROCESS THE EXPRESSION FOLLOWING.       24915000
                   IF GETOUT THEN GO TO FIN ;                           24920000
RIGHT :                                                                 24921000
                   IF KEY ! 456 THEN COMMENT ")" ;                      24925000
              BEGIN                                                     24930000
                   SYOUT(MSG[124],ISYMB,LGTH);                          24931000
                   ERP1(9,6,3,124);COMMENT MISSING RIGHT PARENTHASIS;   24935000
                   GO TO FIN;                                           24940000
              END;                                                      24945000
                   DN;         %SCAN PAST THE ")".                      24950000
                   GO TO FIN;                                           24955000
              END;                                             %CJC 046 24956000
                   IF KEY = 345 OR (LGTH = 4 AND    % "DATA"   %CJC 046 24960000
                   ISYMB[0].[24:24] = "TIME") THEN  % "TIME"   %CJC 046 24961000
              BEGIN DN; IF KEY ! 451 THEN GO TO L1; % "("      %TR 778  24962000
                   DN;                                         %TR 778  24963000
                   FORMULA; RSCALE ~ 0; RLFP ~ 11;             %TR 778  24964000
                   EMIL(LITC,1);  EMIL(OPR,COM);               %TR 778  24965000
                   GO TO RIGHT;                                %TR 778  24966000
              END;                                             %TR 778  24967000
                   IF CAT = 5 THEN % ITS AN INTRINSIC FUNCTION %TR 778  24968000
              BEGIN     % INTRINSIC KEYS ARE:                  %TR 778  24969000
                        %  480 ABS(E)    481 SQRT(E)           %TR 778  24970000
                        %  482 SIN(E)    483 COS(E)            %TR 778  24971000
                        %  484 ARCTAN(E) 485 LN(E)             %TR 778  24972000
                        %  486 EXP(E)    487 LOG(E)            %TR 778  24973000
                        %  394 SIGN(E)                         %TR 778  24974000
                   IF (K ~ KEY - 480) < 0 THEN K ~ 8;          %TR 778  24975000
                   DN ;        %SCAN PAST THE FUNTION NAME.             24990000
                   IF KEY ! 451 THEN COMMENT "(" ;                      24995000
L1:           BEGIN                                       COMMENT 8-18; 25000000
                   SYOUT(MSG[124],ISYMB,LGTH);                          25001000
                   ERP1(9,5,3,124); COMMENT MISSING LEFT PAREN ;        25005000
                   GO TO FIN ;                                          25010000
              END  ;                                                    25015000
                   DN ;        %SCAN PAST THE "(".                      25020000
                   EMIL(OPR,MKS)      ;                                 25030000
                   FORMULA ;   %PROCESS THE EXPRESSION.                 25035000
                   IF GETOUT THEN GO TO FIN ;                           25040000
                   UNSCALE ;   %CHANGE THE EXPRESSION VALUE TO A        25045000
                   RSCALE ~ 0 ;% FLOATING POINT NUMBER AND MARK ITS     25050000
                             % SCALE = 0.                               25050001
                   IF IFUNCT[K] = 0 THEN COMMENT NOT YET ASSIGNED ;     25055000
              BEGIN IFUNCT[K] ~ PRTCTR ; PRTCTR ~ PRTCTR+1 ;            25060000
              END  ;                                                    25065000
                    IF IFUNCT[K] GTR 511 THEN EMIL(OPR,XRT);            25066000
                   EMIL(OPDC,IFUNCT[K]); COMMENT CALL ON INTRINSIC ;    25070000
                   GO TO RIGHT ;                                        25075000
              END  ;                                                    25080000
                   OPND ;      %GET THE OPERAND VALUE TO TOP-OF-STK.    25085000
                   IF GETOUT THEN GO TO FIN ;                           25090000
                   IF RPREC THEN COMMENT DOUBLE PRECISION;              25095000
L2:                                                       COMMENT 8-18; 25095500
              BEGIN SYOUT(MSG[124],ISYMB,LGTH);                         25096000
                   ERP1(40,15,27,124);COMMENT ILLEGAL SIZE SPEC;        25100000
              END  ;                                                    25101000
       FIN:                                                             25105000
              END  ;                                                    25110000
COMMENT ************************INTEGEROPERAND*********************%DATA25200000
         BRINGS A SINGLE PRECISION INTEGER TO TOP OF STACK, OR     %DATA25205000
              RETURNS FALSE IF IT CANT;                            %DATA25210000
BOOLEAN PROCEDURE INTEGEROPERAND;                                  %DATA25215000
              BEGIN   LABEL  ERRP;                               %TR-33625216000
                   IF OTYP (OCUR) =1 THEN GO TO ERRP ELSE        %TR-33625217000
         IF (INTEGEROPERAND~IF SCLAS=6 THEN LGTH{11 ELSE           %DATA25220000
              (SCLAS=4 AND SCALE=0 AND OFSZ(OCUR){11)) THEN        %DATA25225000
              OPND  ELSE BEGIN                                   %TR-33625230000
         ERRP:     SYOUT(MSG[124],ISYMB,LGTH);                   %TR-33625235000
                   ERP1(40,54,22,124) END INTEGEROPERAND;          %DATA25240000
              END;                                                      25250000
COMMENT ********************** NONSTANCLASE ********************** %DATA25255000
         FORMATS PART OF A DATACOM I ERROR MESSAGE;                %DATA25256000
STREAM PROCEDURE NONSTANCLAUSE(M);                                 %DATA25257000
         BEGIN DI~M; DS~28 LIT"[NON-STANDARD CLAUSE DATACOM"; END; %DATA25258000
COMMENT ****************     CONDITION           **********************;25540000
PROCEDURE CONDITION ; COMMENT SYNTAX CONTROL FOR COMPOUND CONDITIONS;   25545000
                   BEGIN                                                25550000
 LABEL BFACT1 , BFACT2 , BTERM , FIN ;                                  25555000
DEFINE   OCC  = 0 # ;   COMMENT ITEM OCUR ;                             25560000
 DEFINE  IPX   =1  # ;  COMMENT ITEM PX ;                               25565000
                             % THE CURRENT SUBJECT(CS) THE CURRENT      25565001
 DEFINE  IQX   =2  # ;  COMMENT ITEM QX ;                               25570000
                             % OBJECT(CO),AND THE CURRENT ITEM(CI)      25570001
 DEFINE  IRX   =3  # ;  COMMENT ITEM RX ;                               25575000
                             % ARRAYS WHEN PROCESSING IMPLIED           25575001
 DEFINE  LQX   =4  # ;  COMMENT ITEM CMP LITERAL ASSIGNMENT ;           25580000
                             % SUBJECTS AND OBJECTS.                    25580001
 DEFINE  TYP   =5  # ;  COMMENT ITEM TYPE ;                             25585000
 DEFINE  USG   =6  # ;  COMMENT ITEM USAGE ;                            25590000
 DEFINE  CL    =7  # ;  COMMENT ITEM CLASS ;                            25595000
 DEFINE  VSZ   =8  # ;  COMMENT ITEM VARIABLE SIZE FLAG ;               25600000
 DEFINE  SZ    =9  # ;  COMMENT ITEM SIZE ;                             25605000
 DEFINE  LL    =10 # ;  COMMENT ITEM LFP ;                              25610000
 DEFINE  RP    =11 # ;  COMMENT ITEM SCALE ;                            25615000
 DEFINE  PREC  =12 # ;  COMMENT ITEM PRECISION ;                        25620000
 DEFINE  BASE  =13 # ;  COMMENT ITEM STARTING ADDRESS ;                 25625000
 DEFINE  CLGTH =14 # ;  COMMENT ITEM CODE LENGTH ;                      25630000
 DEFINE  LSYMB =15 # ;  COMMENT ITEM LITERAL SYMBLE (3 WORDS) ;         25635000
 DEFINE  ALFLG =18 # ;  COMMENT ITEM ALL FLAG ;                         25640000
COMMENT ****************     LITERAL VALUE 1     **********************;25645000
PROCEDURE LITVAL1(ITM,ALSIZE); COMMENT GENERATES CODE TO GET VALUE OF   25650000
                   LITERAL DESCRIBED IN ITM TO TOP OF STACK ;           25655000
    VALUE ALSIZE ; COMMENT DESIRED SIZE OF ALL LITERAL ;                25660000
    INTEGER ALSIZE ;                                                    25665000
    ARRAY ITM [0] ; COMMENT ITEM DESCRIPTION ;                          25670000
              BEGIN                                                     25675000
    INTEGER XSZ, L , Q , R ;                                            25680000
    LABEL L1, L2, FIN ;                                                 25685000
                   IF BOOLEAN(CI[ALFLG]) THEN COMMENT ALL LITERAL ;     25690000
              BEGIN                                                     25695000
                   XSZ ~ ALSIZE ;                                       25700000
                   IF ITM[LSYMB]=0 AND ITM[SZ]=1 THEN COMMENT "ZERO" ;  25705000
              BEGIN                                                     25710000
                   EMIL(LITC,0)     ;%ZERO IS DIFFERENT FROM THE OTHER  25715000
                   IF XSZ > 11 THEN COMMENT DOUBLE PRECISION ;          25720000
                             % LITERALS IN THAT IT HAS NO DECIMAL.      25720001
                   EMIL(LITC,0)     ;                                   25725000
                   GO TO FIN ;                                          25730000
              END  ;                                                    25735000
                   Q ~ XSZ DIV ITM[SZ];%BUILD A LITERAL IN THE CONSTANT 25740000
                   R ~ XSZ MOD ITM [SZ];                                25745000
                             % POOL EQUAL IN SIZE TO THAT WITH          25745001
                   BUILDLIT(ITM[LSYMB],4,ITM[SZ],                       25750000
                             % WHICH IS BEING COMPARED.                 25750001
                           CNP[CNQ.[38:3],CNQ.[41:7]],CNR,Q,R);         25755000
                   IF XSZ > 11 THEN COMMENT DOUBLE PRECISION ;          25760000
                   GO TO L1;                                            25765000
                   GO TO L2;                                            25770000
              END  ;                                                    25775000
                   XSZ ~ ITM[SZ] ; COMMENT LITERAL ;                    25780000
                             %MOVE THE LITERAL(LSYMB) INTO THE          25780001
            CHRTRAN(ITM[LSYMB],4,CNP[CNQ.[38:3],CNQ.[41:7]],CNR,XSZ);   25785000
                             % CONSTANT POOL.                           25785001
                   IF XSZ > 11 THEN COMMENT DOUBLE PRECISION ;          25790000
              BEGIN            %IF THE LITERAL ADDRESS(LQX) < 0,        25795000
                   IF ITM[LQX]<0 THEN COMMENT ASSIGN TO CNST POOL ;     25800000
                             % THE LITERAL IS NOT IN THE CONSTANT       25800001
              BEGIN            % POOL.                                  25805000
    L1:                                                                 25810000
                   ITM[LQX]~CNQ-1;                                      25815000
                   ITM[IRX] ~ CNR ;                                     25820000
                   CNR ~ CNR + XSZ ;                                    25825000
                   CNQ ~ CNQ + CNR DIV 8 ;                              25830000
                   CNR ~ CNR MOD 8 ;                                    25835000
              END  ;                                                    25840000
                   EMIL(LITC,0)     ; COMMENT CONVERT AT OBJ. TIME ;    25845000
                   EMIL(OPR,MKS)     ;                                  25850000
                   EMIL(LITC,ITM[IQX])     ;                            25855000
                             %DOUBLE PRECISION LITERALS ARE             25855001
                   EMIL(DESC,CNPL)     ;% CONVERTED AT OBJECT TIME.     25860000
                   EMIL(LITC,ITM[IRX]);                                 25865000
                   EMIL(LITC,0)     ; COMMENT UNSIGNED ;                25870000
                   EMIL(OPDC,ICV1L)     ;                               25875000
                   GO TO FIN ;                                          25880000
              END  ;                                                    25885000
                   IF ITM[LQX] < 0 THEN COMMENT UNASSIGNED ;            25890000
              BEGIN                                                     25895000
    L2:                                                                 25900000
                   L~ ICV1(CNP[CNQ.[38:3],CNQ.[41:7]],CNR,0,XSZ);       25905000
                   IF L { 1023 THEN%SINGLE PRECISION LITERALS NEED NOT  25910000
              BEGIN            % BE ASSIGNED TO THE CONSTANT POOL       25915000
                   EMIL(LITC,L)     ;% IF { 1023.                       25920000
                   GO TO FIN ;                                          25925000
              END  ;                                                    25930000
                   IF CNR ! 0 THEN COMMENT WORD ADJUST ;                25935000
              BEGIN                                                     25940000
                   CNR ~ 0 ;   %WORD ADJUST THE CONSTANT POOL           25945000
                   CNQ ~ CNQ+1 ;% CHARACTER ADDRESS (CNR).              25950000
              END  ;                                                    25955000
                   ITM[LQX]~CNQ-1;%THE ACTUAL WORD ADDRESS IS 1 LESS    25960000
                   CNP[CNQ.[38:3],CNQ.[41:7]]  ~ L;                     25965000
                             % THAN THE INDICATED WORD ADDRESS          25965001
                             % BECAUSE THE SEGMENT NUMBER IS IN         25965002
                             % WORD 0 OF THE COMPILE TIME ARRAY.        25965003
                   CNQ ~ CNQ+1 ;%UPDATE THE WORD ADDRESS.               25970000
              END  ;                                                    25975000
                   EMIL(LITC,ITM[LQX])     ;                            25980000
                             %GET THE LITERAL VALUE TO TOP-OF-STK.      25980001
                   EMIL(OPDC,CNPL)     ;                                25985000
    FIN:                                                                25990000
              END  ;                                                    25995000
COMMENT  ****************    RELATIONAL OPERATOR **********************;26000000
PROCEDURE RELOP ;  COMMENT SCANS FOR A CONDITIONAL OPERATOR;            26005000
                             %KEY   RELATION           K CRTYPE         26005001
              BEGIN            %800   <,LESS             0   1          26010000
 INTEGER K ;                   %801   {                  1   1          26015000
                               %802   =,EQUAL,EQUALS    2   1  %TR 859  26020000
                   CNFLG ~ FALSE ;%803   !, UNEQUAL         3   1       26025000
                   IF KEY = 533 THEN COMMENT "NOT";                     26030000
                             %804   }                  4   1            26030001
              BEGIN            %805   >,GREATER,EXCEEDS  5   1          26035000
                             %806   POSITIVE           6   2            26035001
                             %807   NEGATIVE           7   2            26035002
                             %344   ZERO               8   2            26035003
                             %347   ALPHABETIC         9   3            26035004
                             %378   NUMERIC           10   3            26035005
                   DN;         %SCAN PAST THE"NOT" AND SET CURRENT      26040000
                   CNFLG ~ TRUE ;% NOT FLAG TRUE.                       26045000
              END  ;                                                    26050000
                   K~KEY-800 ;                                          26055000
                   IF K}0 AND K{5 THEN COMMENT RELATIONAL OPERATOR ;    26060000
                   CRTYPE ~ 1                                  %TR 859  26065000
                   ELSE IF K=6 OR K=7 THEN                              26125000
                   CRTYPE ~ 2   COMMENT "POSITIVE"OR"NEGATIVE";         26130000
                             %CURRENT RELATION TYPE IS AN AMOUNT        26130001
                   ELSE IF KEY=344 THEN COMMENT"ZERO";% COMPARISON.     26135000
              BEGIN                                                     26140000
                   K~8 ;                                                26145000
                   CRTYPE ~ 2 ;                                         26150000
              END                                                       26155000
                   ELSE IF KEY=347 THEN COMMENT "ALPHABETIC";           26160000
              BEGIN                                                     26165000
                   K~9 ;                                                26170000
                   CRTYPE ~ 3 ;%CURRENT RELATION TYPE IS A CLASS        26175000
              END              % COMPARISON.                            26180000
                   ELSE IF KEY=378 THEN COMMENT  NUMERIC ;              26185000
              BEGIN                                                     26190000
                   K ~10;                                               26195000
                   CRTYPE ~ 3 ;                                         26200000
              END;                                             %TR 859  26205000
                   DN;  % SCAN PAST OPERATOR                   %TR 859  26235000
                   IF KEY = 264 THEN DN;  % SCAN OFF "TO"      %TR 859  26236000
                   CRKEY ~ K;  % SAVE RELATIONAL KEY           %TR 859  26240000
                    IF ((K=9 OR K=10) AND CI[CL]!2) OR          %TR-247 26245100
                       ((K=6 OR K=7 ) AND CI[CL]!3) THEN        %TR-247 26245200
              BEGIN          COMPE ~ TRUE; ERP1(40,39,27,0);    %TR-247 26245300
              END;   % ILLEGAL CLASS SPECIFICATION             %TR 859  26247000
              END  ;                                                    26250000
COMMENT ****************     BOOLEAN CONTINUATION**********************;26255000
PROCEDURE BCONT; COMMENT CONTINUES OF A FORMULA FOR BSEC AND BOPND ;    26260000
              BEGIN                                                     26265000
DEFINE D1 = ( CI [ CLGTH ] DIV 8 + 1 ) # ;                              26270000
              DEFINE IC = SAVEGOTO #;                   COMMENT 9-16 JH;26275000
INTEGER X ;                                                             26280000
LABEL L1,FIN ;                                                          26285000
                   RLFP ~ CI[LL] ;%INITIALIZE THE RESULT LEFT PART,     26290000
                   RSCALE ~ CI[RP] ;% RIGHT PART, AND PRECISION TO THAT 26295000
                   RPREC ~ BOOLEAN(CI[PREC]) ;% OF THE CURRENT ITEM.    26300000
                   IF RPREC THEN COMMENT DOUBLE ;                       26305000
                   ERP1(40,15,27,124); COMMENT ILLEGAL SIZE SPEC ;      26310000
                   IF CI[CL] ! 3 THEN COMMENT NUMERIC ;                 26315000
                   ERP1(40,61,39,124); COMMENT ILLEGAL ARITH.CLASS;     26320000
                             %CHECK THE SIZE, CLAS, ALL FLAG, AND       26320001
                   IF BOOLEAN(CI[ALFLG]) THEN                           26325000
                             % ELIMENTARY ITEM FLAG OF THE              26325001
                   ERP1(40,61,01,124); COMMENT ILLEGAL ARITH. LITERAL;  26326000
                             % CURRENT ITEM.                            26326001
                   IF NOT OELEF ( CI [ OCC ] ) AND CI [ TYP ] ! 5 THEN  26327000
                   ERP1(40,76,83,124); COMMENT ILLEGAL GROUP NAME;      26328000
                   IF GETOUT THEN GO TO FIN ;                           26330000
                   IF CI[TYP] = 5 THEN COMMENT LITERAL ;                26335000
                   LITVAL1(CI,0)%GET THE LITERAL VALUE TO THE STACK.    26340000
                   ELSE IF CI[USG] = 0 THEN COMMENT DISPLAY ;           26350000
              BEGIN                                                     26355000
                   IC [ 0,0 ] ~ 0 ;                                     26360000
                   X ~ 0 ;                                              26365000
                   COPICODE( SEG,CI [ BASE],IC,X,CI [ CLGTH ] ) ;       26370000
                             %SAVE THE CODE FOR EVALUATING THE          26370001
                             % SUBSCRIPT ADDRESS IN THE DYNAMIC         26370002
                             % ITEM CODE ARRAY (IC).                    26370003
                   CREG ~ CI [ BASE ] ;                                 26371000
                   VALU(CI[OCC],IC,0,CI[CLGTH],0);                      26375000
                             %GET THE DISPLAY VALUE TO TOP-OF-STK.      26375001
              END  ;           %(CODE FOR COMPUTATIONAL ITEMS WAS       26380000
                             % GENERATED IN THE BOPND ROUTINE).         26380001
    L1:                                                                 26390000
                   ACONT ; COMMENT COMPLETE FORMULA EVALUATION ;        26395000
                   IF CAT = 6 THEN COMMENT ARITH. OPERATOR ;            26400000
                   GO TO L1 ;  %PROCESS THE PRIMARIES FOLLOWING A ")"   26405000
                   CI[LL] ~ RLFP ;%THE CURRENT ITEM LEFT PART, SCALE,   26410000
                   CI[RP] ~ RSCALE ;% AND SIZE ARE THOSE OF THE RESULT, 26415000
                   CI[SZ] ~ RLFP+RSCALE ;                               26420000
                             % USAGE IS COMPUTATIONAL AND TYPE IS       26420001
                   CI[USG] ~ 1 ; COMMENT CMP ;% ELEMENTARY.             26425000
                   CI[TYP] ~ 8 ; COMMENT ELEMENTARY ;                   26430000
                   CI [CL] ~ 3 ; COMMENT CLASS IS NUMERIC ;             26431000
    FIN:                                                                26435000
              END  ;                                                    26440000
COMMENT ****************     BOOLEAN OPERAND     **********************;26445000
BOOLEAN PROCEDURE BOPND ; COMMENT CHECK FOR DATANAME,LITERAL,OR         26450000
                   FORMULA AND SET CURRENT ITEM DESCRIPTION AS REQUIRED;26455000
              BEGIN                                                     26460000
    INTEGER C,LEVEL,LINK,I ;                                            26465000
    LABEL SUBSC, MORE , TXIT , LITRL ,FIGCON , ALL , FXIT , FIN ;       26470000
                   GETOUT ~ FALSE ;                                     26475000
                   C ~ CREG ;  %SAVE CURRENT PROGRAM COUNTER VALUE.     26480000
                   HQX ~ 0 ;   %DONT SAVE THE SUBSCRIPT ADDRESS.        26485000
                   FOR I ~ 0 STEP 1 UNTIL ALFLG DO                      26490000
                   CI[I] ~ 0 ; COMMENT CLEAR ITEM DESCRIPTION ;         26495000
                             %INITIALIZE THE CURRENT ITEM DESCRIP.      26495001
                   CI [ BASE ] ~ CREG ;                                 26496000
COMMENT 3/24-64;   SYOUT(MSG[124],ISYMB,LGTH);                          26497000
                   IF CAT = 5 OR CAT = 6 THEN COMMENT +,-,OR INTRINSIC; 26500000
                             %RESTRICTION *** *** : A BOOLEAN           26500001
              BEGIN            % OPERAND WHICH START WITH A + OR -      26505000
                   FORMULA;    % IS PROCESSED BY FORMULA AND IS         26510000
                   IF GETOUT THEN GO TO FXIT ;                          26515000
                             % LIMITED TO SINGLE PRECISION.             26515001
                   CI[USG] ~ 1; COMMENT COMPUTATIONAL ;                 26520000
                             %INITIALIZE CURRENT ITEM SIZE,SCALE,       26520001
                   CI[TYP] ~ 8 ; COMMENT ELEMENTARY ;                   26525000
                             % LEFT PART AND USAGE TO THAT OF THE       26525001
                   CI[LL] ~ RLFP ;% INTERMEDIATE RESULT (ELEMENTARY     26530000
                   CI[RP] ~ RSCALE ;% COMPUTATIONAL).                   26535000
                   CI[SZ] ~ RLFP + RSCALE ;                             26540000
                   CI [CL] ~ 3 ; COMMENT CLASS IS NUMERIC ;             26541000
                   GO TO TXIT  ;                                        26545000
              END  ;                                                    26550000
                   IF KEY = 451 THEN COMMENT "(" ;                      26555000
              BEGIN                                                     26560000
                   DN ;        %SCAN PAST THE "(".                      26565000
                   IF NOT BOPND OR GETOUT THEN                          26570000
              BEGIN                                                     26575000
                   SYOUT(MSG[124],ISYMB,LGTH);                          26576000
                   ERP1(40,59,22,124);                                  26580000
                   GO TO FXIT ; COMMENT ILLEGAL COND. OPERAND ;         26585000
              END  ;                                                    26590000
                   IF KEY ! 456 THEN COMMENT ")" ;                      26595000
              BEGIN                                                     26600000
                   SYOUT(MSG[124],ISYMB,LGTH);                          26601000
                   ERP1(9,6,3,124);                                     26605000
                   GO TO FXIT ; COMMENT MISSING RIGHT PAREN. ;          26610000
              END  ;                                                    26615000
                   DN ;        %SCAN PAST THE ")".                      26620000
                   GO TO MORE ;                                         26625000
              END  ;                                                    26630000
                   IF TYPE = 2 OR TYPE = 7 OR TYPE = 8                  26635000
                   OR TYPE = 9 OR TYPE = 18 THEN COMMENT DATANAME ;     26635500
              BEGIN                                                     26640000
                   CI[IPX] ~ PX ;                                       26645000
                   CI[IQX] ~ QX ;                                       26650000
                   CI[IRX] ~ RX ;                                       26655000
                   CI[OCC] ~ OCUR ;                                     26660000
                   CI[TYP] ~ TYPE ;                                     26665000
                   IF TYPE = 9 THEN CI[CL] ~2 ELSE                      26665500
                   CI[CL] ~ CLASS ;                                     26670000
                   CI[VSZ] ~ REAL (OSZDEP(OCUR));                       26675000
                   CI[LL] ~ SIZE - SCALE;                 COMMENT 4-06; 26680000
                   CI[RP] ~ SCALE ;                                     26685000
                   CI[SZ] ~ SIZE ;                                      26690000
                   CI[PREC] ~ REAL(SIZE > 11) ;                         26695000
                             %INITIALIZE THE CURRENT ITEM DESCR-        26695001
                   CI[USG] ~ USAGE ;% IPTION TO THAT OF THE CURRENT     26700000
                   IF USAGE ! 0 THEN COMMENT CMP ;% DATANAME.           26705000
              BEGIN                                                     26710000
                   VALU(OCUR,SEG,T1,SUBS,1);                            26715000
                             %IF ITS USAGE IS COMPUTATIONAL,GET         26715001
                   GO TO MORE ;% ITS VALUE TO TOP-OF-STK.               26720000
              END  ;                                                    26725000
                   IF NOT OELEF ( OCUR ) AND TYPE ! 9 THEN COMMENT GRP.;26730000
              BEGIN                                                     26735000
                   LEVEL ~ OLEVL(OCUR) ;                                26740000
                   LINK ~ OFOL(OCUR);                                   26745000
                   SYOUT(MSG[124],ISYMB,LGTH);                          26746000
                   WHILE OLEVL(LINK) > LEVEL DO                         26750000
              BEGIN                                                     26755000
                   IF OELEF(LINK) THEN COMMENT ELEMENTARY ;             26760000
              BEGIN                                                     26765000
                   IF OUSG(LINK) ! 0 THEN                               26770000
                             %THE ELEMENTARY ITEMS OF A GROUP           26770001
                   ERP1(59,76,16,124);COMMENT COND.GROUP USAGE;         26775000
                             % MUST BE FIXED SIZE UNSIGNED DISPLAY      26775001
                   IF OSZDEP(LINK) THEN% BECAUSE THEY ARE COMPARED IN   26780000
                   ERP1(59,76,15,124);COMMENT COND.GROUP SIZE;          26785000
                             % CHARACTER MODE.                          26785001
                   IF OSGND ( LINK ) AND OCLAS ( LINK ) = 3 THEN        26790000
                   ERP1(59,76,95,124);COMMENT COND.GROUP SIGNED;        26795000
                   IF GETOUT THEN GO TO FXIT ;                          26800000
              END  ;                                                    26805000
                   LINK ~ OFOL (LINK) ;                                 26810000
                   IF LINK = 0 THEN COMMENT END OF RECORD ;             26815000
                   GO TO SUBSC ;                                        26820000
              END  ;                                                    26825000
              END  ;                                                    26830000
    SUBSC :                                                             26835000
                   IF SUBS ! 0 THEN COMMENT SUBSCRIPTED ;               26840000
              BEGIN                                                     26845000
                   SUBLST ;    %SAVE THE STARTING ADDRESS AND LENGTH    26850000
                   CI[BASE] ~ SSUBS ;% OF THE CODE WHICH COMPUTES THE   26855000
                   CI[CLGTH] ~ LSUBS ;% SUBSCRIPT ADDRESS.              26860000
              END                                                       26865000
                   ELSE                                                 26870000
                   DN ;        %SCAN PAST THE CURRENT SYMBOL.           26875000
    MORE :                                                              26880000
              IF CAT = 6 THEN COMMENT ARITH. OPERATOR ;                 26885000
              BCONT ;          %PROCESS THE REST OF THE ARITHMETIC      26890000
                             % EXPRESSION.                              26890001
    TXIT :                     %TRUE EXIT-AND OPERAND WAS FOUND.        26895000
              CI[BASE] ~ C ;   %THE CURRENT ITEM BASE AND CODE          26900000
              CI[CLGTH]~ CREG - C ;% LENGTH PARAMETERS POINT TO THE     26905000
              BOPND ~ TRUE ;   % SUBSCRIPT CALCULATION CODE FOR         26910000
              GO TO FIN ;      % DISPLAY ITEMS AND POINT TO THE         26915000
              END  ;           % ENTIRE VALUE CODE FOR COMPUTATIONAL    26920000
                             % ITEMS OR FORMULAS.                       26920001
                   IF TYPE = 5 THEN COMMENT LITERAL ;                   26925000
    LITRL:                                                              26930000
              BEGIN                                                     26935000
                   SYOUT(MSG[124],ISYMB,LGTH);                          26936000
                             %SAVE THE LITERAL INFORMATION IN THE       26936001
                   CI[IPX] ~ CNPL ;% CURRENT ITEM DESCRIPTION.          26940000
                   CI[IQX] ~ CI[LQX] ~ - 1 ;                            26945000
                             %INDICATE THAT THE LITERAL HAS NOT         26945001
                             % BEEN ASSIGNED TO THE CONSTANT POOL.      26945002
                   CI[TYP] ~ TYPE ;                                     26950000
                   CI [ LL ] ~ LGTH - SSCALE ;                          26955000
                   CI[RP] ~ SSCALE ;                                    26960000
                   CI[SZ] ~ LGTH ;                                      26965000
                   CI[PREC] ~ REAL(LGTH > 11) ;                         26970000
                   IF SCLAS = 1 THEN COMMENT NON-NUMERIC ;              26975000
              BEGIN                                                     26980000
                   CI[IQX] ~ CNQ-1 ;%ASSIGN NON-NUMERIC LITERALS TO THE 26985000
                   CI[IRX] ~ CNR ;% CONSTANT POOL.                      26990000
                   IF LGTH>63 THEN                                      26991010
              BEGIN                                                     26991020
                   CHRTRAN(ISYMB,4,CNP[CNQ.[38:3],CNQ.[41:7]],CNR,63);  26991030
                   I ~ LGTH - 63 ; CNR ~ CNR + 63 ;                     26991040
                   CNQ ~ CNQ+CNR DIV 8 ; CNR ~ CNR MOD 8 ;              26991050
                   CHRTRAN(ISYMB,3,CNP[CNQ.[38:3],CNQ.[41:7]],CNR,I);   26991060
                   CNR ~ CNR + I ; CNQ ~ CNQ + CNR DIV 8 ;              26991070
                   CNR ~ CNR MOD 8 ;                                    26991080
              END  ELSE                                                 26991090
              BEGIN                                                     26991100
                   CHRTRAN(ISYMB[0],4,                                  26995000
                           CNP[CNQ.[38:3],CNQ.[41:7]],CNR,LGTH);        27000000
                   CNR ~ CNR + LGTH ;                                   27000500
                   CNQ ~ CNQ + CNR DIV 8 ;%UPDATE THE INDEXES.          27005000
                   CNR ~ CNR MOD 8 ;                                    27010000
              END  ;                                                    27011000
                   CI[CL] ~ 2 ;                                         27015000
                   DN ;        %SCAN PAST THE LITERAL.                  27020000
                   GO TO TXIT ;                                         27025000
              END  ;                                                    27030000
                   CI[CL] ~ 3 ; COMMENT NUMERIC LITERAL ;               27035000
                             %NUMERIC LITERALS ARE NOT ASSIGNED TO      27035001
                  CHRTRAN(ISYMB[0],4,CI[LSYMB], 4, LGTH) ;              27040000
                             % THE CONSTANT POOL UNTIL THEIR USAGE      27040001
                             % IS DETERMINED(SAVE THE SYMBOL IN         27040002
                   DN ;        %SCAN PAST THE NUMERIC LITERAL.          27045000
                   GO TO MORE ;                                         27050000
              END  ;                                                    27055000
                   IF CAT=3 OR KEY=512 THEN % FIG. CONSTANT;            27060000
    FIGCON :                                                            27065000
              BEGIN                                                     27070000
                   I ~ 2 ; COMMENT ALPHANUMERIC ;                       27075000
                   IF KEY = 344 THEN COMMENT ZERO ;                     27080000
                   I ~ I+1    COMMENT CLASS ~ 3 ;                       27085000
                   ELSE IF KEY = 522 THEN COMMENT HIGH-VALUE ;          27090000
              BEGIN                                                     27095000
                   CI[LSYMB].[24:6] ~ 9 ;                               27100000
                   I ~ I+1 ;                                            27105000
              END                                                       27110000
                   ELSE IF KEY = 541 THEN COMMENT QUOTE ;               27115000
                   CI [ LSYMB ] . [ 24 : 6 ] ~ 63                       27120000
                   ELSE IF KEY=512 THEN CI[LSYMB].[24:6] ~ 31           27120100
                   ELSE                                                 27125000
                   CI[LSYMB].[24:6]~48;COMMENT LOW-VALUE OR SPACE ;     27130000
                             %SET LITERAL SYMBOL [LSYMB] AND            27130001
                   CI[IPX]~ CNPL ;% ASSOCIATED CLASS AND TURN THE       27135000
                   CI[IQX]~ CI[LQX] ~ - 1 ;                             27140000
                             % ITEM ALL FLAG ON FOR FIGURATIVE          27140001
                   CI[CL] ~ I ;% CONSTANTS(NO DISTINCTION MADE          27145000
                   CI[ALFLG] ~ 1 ;% BETWEEN ALL < LITERAL> AND A        27150000
                   CI[SZ] ~ 1 ;% FIG.CONST).                            27155000
                   CI[LL] ~ 1 ;                                         27160000
                   CI[TYP] ~ 5 ;                                        27165000
                   DN ;        %SCAN PAST THE FIGURATIVE CONSTANT.      27170000
                   GO TO TXIT ;                                         27175000
              END  ;                                                    27180000
                   IF KEY = 501 THEN COMMENT "ALL" ;                    27185000
    ALL:                                                                27190000
              BEGIN            %SCAN PAST THE "ALL"AND TURN ON THE      27195000
                   DN ;        % CURRENT ITEM ALL FLAG(SUCCESIVE        27200000
                   SYOUT(MSG[124],ISYMB,LGTH);                          27201000
                   CI[ALFLG] ~ 1 ;% ALLS ARE ALLOWED).                  27205000
                   IF KEY = 501 THEN GO TO ALL ;                        27210000
                   IF CAT = 3 THEN GO TO FIGCON ;                       27215000
                   IF TYPE = 5 AND SSCALE = 0 THEN GO TO LITRL ;        27220000
                   IF KEY=512 THEN GO TO FIGCON;                        27220100
                   ERP1(40,1,59,124);                                   27225000
              END  ;                                                    27230000
    FXIT:                      %FALSE-EXIT-NO BOOLEAN OPERAND FOUND.    27235000
                   BOPND ~ FALSE ;                                      27240000
    FIN :                                                               27245000
              END  ;                                                    27250000
COMMENT ****************     FIND Q AND R        **********************;27255000
PROCEDURE FINDQR(X); COMMENT GENERATES CODE TO FIND DYNAMIC SIZES       27260000
                   Q =(Y-1) DIV X                                       27265000
                   R = (Y-1) MOD X+1 WHERE Y IS AT TOP OF THE STACK ;   27270000
    VALUE X ;                                                           27275000
    INTEGER X ;                                                         27280000
              BEGIN LABEL EDE;EDE:                        COMMENT 8-27; 27285000
                   EMIL(LITC,1)     ;                                   27290000
                   EMIL(OPR,SUB)     ; COMMENT Y-1  ;                   27295000
                   EMIL(OPR,DUP)     ;                                  27300000
                   EMIL(LITC,X)     ;                                   27305000
                   EMIL(OPR,IDV) ; COMMENT ( Y-1 ) IDV X ;              27310000
                   EMIL(OPR,XCH)     ;                                  27315000
                   EMIL(LITC,X)      ;                                  27320000
                   EMIL(OPR,RDV)     ;                                  27325000
                   EMIL(LITC,1)     ;                                   27330000
                   EMIL(OPR,ADD)     ; COMMENT (Y-1) MOX X + 1 ;        27335000
                   EMIL(LITC,QBL ) ;                                    27336000
                   EMIL(OPR,ISN);                                       27337000
              END  ;                                                    27340000
COMMENT ****************     AMOUNT TEST         **********************;27345000
PROCEDURE AMTEST(IC);ARRAY IC[0,0];                                     27350000
              BEGIN LABEL EDE;EDE:%BECAUSE AMOUNT TESTS HAVE NO OBJECT, 27355000
                   IF CI[CL]=3 AND(OELEF(CI[OCC])OR CI[TYP]=8)THEN      27360000
                             % THE CURRENT ITEM IS ASSUMED TO BE        27360001
              BEGIN            % THE SUBJECT.                           27365000
                   IF CI[USG] = 0 THEN COMMENT DISPLAY ;                27370000
                             %FOR DISPLAY ITEMS,GET THE VALUE TO        27370001
                   VALU(CI[OCC],IC,0,CI[CLGTH],0)                       27375000
                             % THE STACK(ONLY THE SUBSCRIPT LIST        27375001
                   ELSE        % HAS BEEN EVALUATED).                   27380000
                   COPICODE(IC,0,SEG,CREG,CI[CLGTH]);                   27385000
                             %FOR COMPUTATIONAL ITEMS THE VALUE         27385001
                             % CODE IS IN THE ITEM CODE(IC)ARRAY.       27385002
                   IF BOOLEAN(CI[PREC])THEN COMMENT DOUBLE ;            27390000
                   EMIL(OPR,LOR)     ;                                  27395000
                   EMIL(LITC,0)     ;                                   27400000
                   EMIL(OPR, REL[CRKEY])      ;COMMENT GTR,LSS,OR EQL;  27405000
                             %THE CURRENT RELATION KEY WAS SET          27405001
              END              % IN THE RELOP PROCEDURE.                27410000
                   ELSE                                                 27415000
                   ERP1(40,59,22,0);COMMENT ILLEGAL CONDITIONAL OPND. ; 27420000
              END  ;                                                    27425000
COMMENT ****************     CLASS TEST          **********************;27430000
PROCEDURE CLTEST(IC); ARRAY IC [0,0] ;                                  27435000
                   BEGIN INTEGER EDE ;                                  27440000
                             %BECAUSE CLASS TESTS HAVE NO OBJECT,       27440001
                   IF CI[TYP]=5 OR CI[USG]!0 THEN                       27445000
                             % THE CURRENT ITEM IS ASSUMED TO BE        27445001
                   ERP1(40,59,22,0) COMMENT ILLEGAL COND. OPND ;        27450000
                             % THE SUBJECT.                             27450001
                   ELSE                                                 27455000
              BEGIN                                                     27460000
                   EMIL(LITC,0)     ;                                   27465000
                   EMIL(OPR,MKS)     ;                                  27470000
                   IF CI[CLGTH] = 0 THEN COMMENT SIMPLE ;               27475000
              BEGIN                                                     27480000
                   EMIL(LITC,CI[IRX])     ;                             27485000
                             %FOR SIMPLE VARIABLES USE THE              27485001
                   EMIL(LITC,CI[IQX])     ;                             27490000
                             % ASSIGNMENT FOUND IN THE DICTIONARY.      27490001
              END                                                       27495000
                   ELSE                                                 27500000
                   COPICODE(IC,0,SEG,CREG,CI[CLGTH]);                   27505000
                             %FOR USE THE SUBSCRIPT LIST CODE           27505001
                   EMIL(DESC,CI[IPX])     ;                             27510000
                             % SAVED IN THE ITEM CODE(IC)ARRAY.         27510001
                   IF OSZDEP(CI[OCC]) THEN                              27515000
              BEGIN                                                     27520000
                   LFC(CI[OCC]);%FOR VARIABLE LENGTH ITEMS CALCULATE    27525000
                   FINDQR(63); % THE MULTIPLES OF 63 REQUIRED.          27530000
              END                                                       27535000
                   ELSE                                                 27540000
              BEGIN                                                     27545000
                   EMIL(LITC,(CI[SZ]-1) DIV 63)     ;                   27550000
                   EMIL ( LITC,A1~ ( CI [ SZ ] -1 ) MOD 63+1 ) ;        27555000
              END  ;                                                    27560000
                   EMIL(OPDC,REL[CRKEY])      ; COMMENT ALFAL,OR NUML ; 27565000
                             %CALL ON THE FIXED PROCEDURE ALFAL         27565001
              END  ;           % OR NUML(CRKEY WAS SET IN THE           27570000
              END  ;           % RELOP PROCEDURE).                      27575000
COMMENT ****************     WORD COMPARE        **********************;27580000
PROCEDURE WDCMPR(SC,IC);ARRAY SC[0,0];ARRAY IC[0,0];                    27585000
              BEGIN                                                     27590000
    INTEGER Y ;                                                         27595000
    BOOLEAN P1,P2, PMAX ;                                               27600000
                   IF BOOLEAN(CS[ALFLG]) THEN                           27605000
              BEGIN P1~ BOOLEAN(CI[PREC]);CS[LL]~CI[LL]; CS[RP]~CI[RP]; 27610000
              END ELSE P1~BOOLEAN(CS[PREC]);                            27615000
                   IF BOOLEAN(CI[ALFLG]) THEN                           27620000
              BEGIN P2~ BOOLEAN(CS[PREC]);CI[LL]~CS[LL]; CI[RP]~CS[RP]; 27621000
              END  ELSE P2~BOOLEAN(CI[PREC]);             COMMENT 7-27; 27622000
                   Y ~ CS[RP] - CI[RP] ;                                27625000
                             %A DOUBLE PRECISION COMPARISON IS          27625001
                   PMAX ~ P1 OR P2 OR% GENERATED IF THE PRECISION OF    27630000
                        (Y<0 AND CS[SZ] + ABS(Y) > 11) OR               27635000
                             % THE CURRENT SUBJECT OR OBJECT IS         27635001
                        (Y>0 AND CI[SZ] + Y > 11) ;                     27640000
                             % DOUBLE OR IF EITHER IS FORCED TO         27640001
                   IF REAL(P1) < REAL (PMAX) THEN                       27645000
                             % DOUBLE WHEN ALLIGNING DECIMALS.          27645001
                   EMIL(LITC,0)     ; COMMENT MAKE DOUBLE ;             27650000
                             %ADJUST THE SUBJECT PRECISION.             27650001
                   IF CS[TYP] =5 THEN COMMENT LITERAL ;                 27655000
                   LITVAL1(CS,CI[SZ])                                   27660000
                             %GET THE LITERAL SUBJECT TO THE STK.       27660001
                   ELSE IF CS[USG] = 0 THEN COMMENT DISPLAY ;           27665000
                             %FOR DISPLAY ITEMS,ADJUST THE SUBJECT      27665001
              BEGIN            % BASE TO THE NEW LOCATION OF THE        27670000
                   CS[BASE]~CREG+4+2|(REAL(CS[SZ]>8)+                   27675000
                             % SUBSCRIPT LIST CODE AND GET THE          27675001
                   REAL(CS[SZ]>11));                      COMMENT 12-1; 27676000
                   VALU(CS[OCC],SC,0,CS[CLGTH],0);% VALUE TO THE STACK. 27680000
              END                                                       27685000
                   ELSE        %FOR COMPUTATIONAL SUBJECTS, THE         27690000
              BEGIN            % BASE IS SET TO THE CURRENT             27695000
                   CS[BASE] ~ CREG;% C REGISTER SETTING AN THE VALUE    27700000
                   COPICODE(SC,0,SEG,CREG,CS[CLGTH]);                   27705000
                             % CODE COPPIED FROM THE SUBJECT CODE       27705001
                             % (SC) ARRAY.                              27705002
              END  ;                                                    27710000
                   IF Y < 0 THEN                                        27715000
              BEGIN                                                     27720000
                   RLFP ~ CS[LL] ;                                      27725000
                   RSCALE ~ CS[RP] ;%ADJUST THE SUBJECT SCALE TO THE    27730000
                   RPREC ~ PMAX ;% OBJECT SCALE.                        27735000
                   SLT(ABS(Y)) ;                                        27740000
              END  ;                                                    27745000
                   IF REAL(P2) < REAL (PMAX) THEN                       27750000
                   EMIL(LITC,0)     ; COMMENT MAKE DOUBLE ;             27755000
                             %ADJUST THE PRECISION OF THE OBJECT.       27755001
                   IF CI[TYP] = 5 THEN COMMENT LITERAL ;                27760000
                   LITVAL1(CI,CS[SZ])                                   27765000
                   ELSE IF CI[USG] = 0 THEN COMMENT DISPLAY ;           27770000
              BEGIN                                                     27775000
                   CI[BASE]~CREG+4+2|(REAL(CI[SZ]>8)+     COMMENT 12-1; 27780000
                   REAL(CI[SZ]>11));                      COMMENT 12-1; 27781000
                   VALU(CI[OCC],IC,0,CI[CLGTH],0);        COMMENT 12-1; 27785000
              END              %GET THE VALUE OF THE OBJECT TO STK.     27790000
                   ELSE                                                 27795000
              BEGIN                                                     27800000
                   CI[BASE] ~ CREG;                                     27805000
                   COPICODE(IC,0,SEG,CREG,CI[CLGTH]);                   27810000
              END;                                                      27815000
                   IF Y > 0 THEN COMMENT SCALE THE OBJECT ;             27820000
              BEGIN                                                     27825000
                   RLFP ~ CI[LL];                                       27830000
                   RSCALE ~ CI[RP];                                     27835000
                   RPREC ~ PMAX ;%ADJUST THE OBJECT SCALE TO THE        27840000
                   SLT(Y) ;    % SUBJECT SCALE.                         27845000
              END  ;                                                    27850000
                   IF PMAX THEN COMMENT DOUBLE PRECISION ;              27855000
              BEGIN                                                     27860000
                   EMIL(OPR,DLS)     ;                                  27865000
                   EMIL(OPR,LOR)     ;                                  27870000
                   EMIL(LITC,0)     ;                                   27875000
              END  ;           %CURRENT RELATION KEY WAS SET IN THE     27880000
                   EMIL(OPR,REL[CRKEY])     ;% RELOP PROCEDURE.         27885000
              END  ;                                                    27890000
COMMENT ****************     COMPARE 1           **********************;27895000
PROCEDURE CMPR1(L,V,RESULT); COMMENT CODE FOR UNEQUAL LENGTH ITEMS ;    27900000
    VALUE L , V ,RESULT   ;    %THE FOLLOWING CODE IS GENERATED FOR     27905000
    INTEGER L , RESULT ;       % FIXED LENGTH ITEMS(V=FALSE)WHERE R     27910000
    BOOLEAN V ;                % IS RESULT.                             27915000
              BEGIN            %  <     {     =     !     }     >       27920000
    LABEL FIN;                 %CGR,L CGR,L CNE,L       CLS,L CLS,L     27925000
                   IF V THEN COMMENT VARIABLENGTH ;                     27930000
                             %JFC,1 JFC,1 JFC,1       JFC,1 JFC,1       27930001
              BEGIN            %EXC,0 EXC,0 EXC,0       EXC,0 EXC,0     27935000
                   IF CRKEY ! 3 THEN COMMENT NEQ ;                      27940000
                             %SRS,L SRS,L             SRS,L SRS,L       27940001
              BEGIN            %SRD,L SRD,L             SRD,L SRD,L     27945000
                   CEMLT(L,CRF)     ;                                   27950000
                             %CNE,L CNE,L       CNE,L CNE,L CNE,L       27950001
                   CEMLT(2+10|REAL(CRKEY ! 2),REL[CRKEY + 22]);         27955000
                             %JFC,3 JFC,3       JFC,3 JFC,3 JFC,3       27955001
                   CEMLT( 1 , JFC)       ;                              27960000
                             %SEC,1 SEC,1       SEC,1 SEC,1 SEC,1       27960001
                   T6~T6+1; FIXUPS[T6]~CHMX;              COMMENT 6-29; 27961000
                   CEMLT(0,JFW);%STC,R STC,R       STC,R STC,R STC,R    27965000
                   IF CRKEY = 2 THEN GO TO FIN ; COMMENT EQL ;          27970000
                             %EXC,0 EXC,0       EXC,0 EXC,0 EXC,0       27970001
                             %EXC     EXC       EXC   EXC   EXC         27970002
                   CEMLT (L,CRF)       ;                                27975000
                   CEMLT (0, SRS)       ;                               27980000
                             %THE FOLLOWING CODE IS GERNERATED FOR      27980001
                   CEMLT (L, CRF)       ;                               27985000
                             % VARIABLE LENGTH ITEMS(V=TRUE)WHERE       27985001
                   CEMLT (L, SRD)       ;% R IS RESULT.                 27990000
              END  ;                                                    27995000
                   CEMLT (L, CRF)      ;                                28000000
                             %  <     {     =     !     }     >         28000001
                   CEMLT (4,CNE)      ;                                 28005000
                             %CRF,L CRF,L CRF,L       CRF,L CRF,L       28005001
              END              %CGR12 CGR12 CNE,2       CLS,0 CLS,0     28010000
                   ELSE        %JFC,1 JFC,1 JFC,1       JFC,1 JFC,1     28015000
              BEGIN            %EXC,0 EXC,0 EXC,0       EXC,0 EXC,0     28020000
                   IF CRKEY ! 3 THEN                                    28025000
                             %CRF,L CRF,L             CRF,L CRF,L       28025001
              BEGIN            %SRS,0 SRS,0             SRS,0 SRS,0     28030000
                   CEMLT (L, REL[CRKEY +22]);                           28035000
                             %CRF,L CRF,L             CRF,L CRF,L       28035001
                   CEMLT(1, JFC)     ;                                  28040000
                             %SRD,0 SRD,0             SRD,0 SRD,0       28040001
                   T6~T6+1; FIXUPS[T6]~CHMX;              COMMENT 6-29; 28041000
                   CEMLT(0,JFW);%CRF,L CRF,L       CRF,L CRF,L CRF,L    28045000
                   IF CRKEY = 2 THEN GO TO FIN ; COMMENT EQL ;          28050000
                             %CNE,4 CNE,4       CNE,4 CNE,4 CNE,4       28050001
                   CEMLT(L , SRS )       ;                              28055000
                             %JFC,3 JFC,3       JFC,3 JFC,3 JFC,3       28055001
                   CEMLT(L, SRD)       ;                                28060000
                             %SEC,1 SEC,1       SEC,1 SEC,1 SEC,1       28060001
              END  ;           %STC,R STC,R       STC,R STC,R STC,R     28065000
                   CEMLT(L, CNE)%EXC,0 EXC,0       EXC,0 EXC,0 EXC,0    28070000
              END  ;                                                    28075000
                   CEMLT(3, JFC)       ;                                28080000
                   CEMLT( 1, SEC)       ;                               28085000
                   CEMLT(RESULT, STC)       ;                           28090000
                   T6~T6+1;FIXUPS[T6]~CHMX;               COMMENT 6-29; 28091000
                   CEMLT(0,JFW);                          COMMENT 6-29; 28095000
    FIN  :                                                              28100000
              END  ;                                                    28105000
COMMENT ****************     COMPARE 2           **********************;28110000
PROCEDURE CMPR2(L,V,RESULT); COMMENT CODE FOR EQUAL   LENGTH ITEMS ;    28115000
    VALUE L , V , RESULT ;     % THE FOLLOWING CODE IS GENERATED FOR    28120000
    INTEGER L , RESULT ;       % FIXED LENGTH ITEMS (V=FALSE):          28125000
    BOOLEAN V ; COMMENT VARIABLE LENGTH FLAG ;                          28130000
              BEGIN LABEL EDE;EDE:%  <     {     =     !     }     >    28135000
                   IF V THEN   %CLS,L CEL,L CEQ,L CNE L CEG L CGR,L     28140000
              BEGIN            %JFC,2 JFC,2 JFC,2 JFC,2 JFC,2 JFC,2     28145000
                   CEMLT(L,CRF)     ;                                   28150000
                             %SEC,1 SEC,1 SEC,1 SEC,1 SEC,1 SEC,1       28150001
                   CEMLT(3-2|REAL(CRKEY=1 OR CRKEY=2 OR        %CJC 069 28155000
                             %STC,R STC,R STC,R STC,R STC,R STC,R       28155001
                   CRKEY=4),REL[CRKEY+17]); % },= OR {         %CJC 069 28160000
              END                                                       28165000
                   ELSE                                                 28170000
                   CEMLT (L, REL[CRKEY +17]);                           28175000
                             %EXC,0 EXC,0 EXC,0 EXC,0 EXC,0 EXC,0       28175001
                   CEMLT(2,JFC)     ;                                   28180000
                             %CRF,L CRF,L CRF,L CRF,L CRF,L CRF,L       28180001
                   CEMLT(1,SEC)     ;                                   28185000
                             %CLS,3 CEL,1 CEQ,1 CNE,3 CEG,1 CGR,3       28185001
                   CEMLT(RESULT, STC)      ;                            28190000
                             %JFC,2 JFC,2 JFC,2 JFC,2 JFC,2 JFC,2       28190001
                             %SEC,1 SEC,1 SEC,1 SEC,1 SEC,1 SEC,1       28195000
              END  ;           %STC,R STC,R STC,R STC,R STC,R STC,R     28200000
COMMENT ****************     CHARACTER COMPARE   **********************;28205000
                             %EXC,0 EXC,0 EXC,0 EXC,0 EXC,0 EXC,0       28205001
PROCEDURE CHCMPR (SC,IC) ; ARRAY SC[0,0] ; ARRAY IC [0,0] ;             28210000
         COMMENT GENERATES CODE TO COMPARE TWO NON-NUMERIC              28215000
                   ITEMS OR AN UNSIGNED NUMERIC AGAINST A NON-NUMERIC ; 28220000
              BEGIN                                                     28225000
    INTEGER SL, DL,I , SZMIN , RSZ , Q1 , R1 , Q2 , R2 , TX,            28230000
              IOCUR , ILGTH , LLGTH , K ;                               28235000
    BOOLEAN ALL, VLGTH , EQLGTH , TDEST ;                               28240000
    LABEL FIN ,FIN1;                                                    28245000
              COMMENT CALL NOW DECL. REAL 00003150  9-16 JH            ;28250000
    DEFINE  RESULT  = CALL [00] #; COMMENT BOOLEAN VALUE ;              28255000
    DEFINE  MSCW    = CALL [01] #; COMMENT BMKS ;                       28260000
    DEFINE  RX1     = CALL [02] #; COMMENT  SOURCE CHARACTER POSITION;  28265000
    DEFINE  PX1     = CALL [03] #; COMMENT  SOURCE INDEXED DESCRIPTOR;  28270000
DEFINE VQ1    =CALL[04]#;COMMENT FOR VARIABLE LENGTH ITEMS         6-29;28275000
DEFINE VR1    =CALL[05]#;COMMENT FOR VARIABLE LENGTH ITEMS         6-29;28280000
DEFINE VQ2    =CALL[06]#;COMMENT FOR VARIABLE LENGTH ITEMS         6-29;28285000
DEFINE VR2    =CALL[07]#;COMMENT FOR VARIABLE LENGTH ITEMS         6-29;28290000
DEFINE VEQLGTH=CALL[08]#;COMMENT FOR VARIABLE LENGTH ITEMS         6-29;28295000
DEFINE VTDEST =CALL[09]#;COMMENT FOR VARIABLE LENGTH ITEMS         6-29;28300000
DEFINE RX2    =CALL[10]#;COMMENT DEST. CHARACTER ADDRESS           6-29;28305000
DEFINE PX2    =CALL[11]#;COMMENT DEST. INDEXED DESCRIPTOR          6-29;28310000
    DEFINE  T       = CALL [12] #; COMMENT  TEMPORARY STORAGE ;         28315000
    DEFINE  RCW     = CALL [13] #; COMMENT  RETURN CONTROL WORD ;       28320000
                   FOR I ~ 0 STEP 1 UNTIL 13 DO                         28325000
                             %INITIALIZE THE CALL ARRAY AND MARK        28325001
                   CALL[I] ~ 0 ;% RESULT THE MARK STACK CONTROL WORD,   28330000
                   T6~0;                                  COMMENT 6-29; 28333000
                   RESULT~MSCW~PX1~PX2~1; COMMENT MARK PRESENT     6-29;28335000
                             % AND THE TWO INDEXED DESCRIPTORS AS       28335001
                             % PRESENT.                                 28335002
                   SL ~ CS[SZ] ;%INITIALIZE SOURCE LENGTH(SL),          28340000
                   DL ~ CI[SZ] ;% DESTINATION LENGTH(DL) AND ALL FLG.   28345000
                   VLGTH~BOOLEAN(CS[VSZ]) OR BOOLEAN(CI[VSZ]);          28346000
                   ALL ~ BOOLEAN(CS[ALFLG])OR BOOLEAN(CI[ALFLG]);       28350000
                   EMIL(LITC,0)     ; COMMENT RESULT ~ FALSE ;          28355000
                   EMIL(OPR,MKS)     ;                                  28360000
                   IF CS[IQX] < 0 THEN COMMENT UNASSIGNED LITERAL ;     28365000
              BEGIN                                                     28370000
                   CS[IQX] ~ CNQ-1 ;                                    28375000
                   CS[IRX] ~ CNR ;%IF THE SUBJECT IS AN UNASSIGNED      28380000
            CHRTRAN(CS [LSYMB],4,CNP[CNQ.[38:3],CNQ.[41:7]],CNR,SL);    28385000
                             % LITERAL,ASSIGN TO CONSTANT POOL AND      28385001
                   CNR ~ CNR + SL ;% UPDATE THE INDEXES.                28390000
                   CNQ ~ CNQ + CNR DIV 8 ;                              28395000
                   CNR ~ CNR MOD 8 ;                                    28400000
              END  ;                                                    28405000
                   IF CS[CLGTH] = 0 THEN COMMENT SIMPLE ;               28410000
                             %FOR SIMPLE VARIABLES, THE ASSIGNED        28410001
                   EMIL (LITC,CS[IQX])% WORD ADDRESS (IQX) IS USED.     28415000
                   ELSE                                                 28420000
              BEGIN            %FOR SUBSCRIPTED VARIABLES,COPY THE      28425000
                   RX1 ~ 1 ;   % SUBSCRIPT LIST CODE,CHANGE THE         28430000
                   CS[BASE] ~ CREG ;% BASE TO POINT TO THE CODE AND     28435000
                   COPICODE(SC,0,SEG,CREG,CS[CLGTH]);                   28440000
                             % MARK THE CHARACTER ADDRESS(RX1)          28440001
              END  ;           % AS PRESENT.                            28445000
                   EMIL(DESC,CS[IPX])      ;                            28450000
                   IF CI[IQX] < 0 THEN COMMENT UNASSIGNED LITERAL ;     28455000
              BEGIN                                                     28460000
                   CI[IQX] ~ CNQ-1 ;                                    28465000
                   CI[IRX] ~ CNR ;                                      28470000
            CHRTRAN(CI [LSYMB],4,CNP[CNQ.[38:3],CNQ.[41:7]],CNR,DL);    28475000
                             %DESTINATION IS AN UNASSIGNED              28475001
                   CNR ~ CNR + DL ;% LITERAL.                           28480000
                   CNQ ~ CNQ + CNR DIV 8 ;                              28485000
                   CNR ~ CNR MOD 8 ;                                    28490000
              END  ;                                                    28495000
                   IF ALL THEN COMMENT ALL LITERAL ;                    28545000
              BEGIN                                                     28550000
                   IF BOOLEAN(CS[ALFLG]) THEN COMMENT SUBJECT ;         28555000
              BEGIN                                                     28560000
                   TDEST ~ TRUE ;                                       28565000
                   IOCUR ~ CI[OCC] ;                                    28570000
                   ILGTH ~ DL ;                                         28575000
                   LLGTH ~ SL ;%IF TH E SUBJECT IS ALL <LITERAL>        28580000
              END              % SET THE TEST DESTINATION FLAG          28585000
                   ELSE        % (TDEST) TRUE ELSE FALSE.               28590000
              BEGIN                                                     28595000
                   TDEST ~ FALSE ;                                      28600000
                   IOCUR ~ CS[OCC] ;                                    28605000
                   ILGTH ~ SL ;                                         28610000
                   LLGTH ~ DL ;                                         28615000
              END  ;                                                    28620000
                   IF ILGTH > 63 OR LLGTH > 63 THEN                     28625000
                             %**** RESTRICTION: THE LITERAL AND         28625001
              BEGIN            % ITEM LENGTH ARE LIMITED TO 63 *****    28630000
                   ERP1(59,01,22,15);                                   28635000
                   GO TO FIN1; COMMENT CONDITIONAL LITERAL OPND. SIZE ; 28640000
              END  ;                                                    28645000
                   Q1 ~ (ILGTH-1) DIV LLGTH ;                           28650000
                             %FIND THE QUOTIENT(Q1) AND REMAINDER       28650001
                   R1 ~ (ILGTH-1) MOD LLGTH+1 ;                         28655000
                             % (R1) FOR THE ITEM LENGTH/ LITERAL        28655001
                             % LENGTH.                                  28655002
                   IF VLGTH THEN COMMENT VARIABLE LENGTH ;              28660000
              BEGIN            %IF VARIABLE LENGTH,GET THE DYNAMIC      28665000
                   LFC(IOCUR) ; COMMENT DYNAMIC LENGTH OF ITEM ;        28670000
                             % LENGTH AND MARK AS REQUIRED(VR1).        28670001
                   VR1 ~ 1 ;                                            28675000
                   IF Q1 ! 0 THEN                                       28680000
              BEGIN                                                     28685000
                   FINDQR(ILGTH) ;%FINDQR CALCULATES THE DYNAMIC QUOT-  28690000
                             % IENT AND REMAINDER.                      28690001
                   VQ1 ~ 1 ;   %MARK VQ1 AS REQUIRED.                   28695000
              END  ;                                                    28700000
              END  ;                                                    28705000
              END                                                       28710000
                   ELSE COMMENT NO ALL LITERAL CONSTRUCT ;              28715000
              BEGIN            %FIND THE MINIMUM OF THE TWO SIZES       28720000
                   SZMIN ~ IF SL { DL THEN SL ELSE DL ;                 28725000
                             % (SZMIN) AND THE DIFFERENCE BETWEEN       28725001
                   RSZ ~ SL - DL ;% THE TWO SIZES(RSZ).                 28730000
                   Q1 ~(SZMIN-1) DIV 63 ;                               28735000
                             %Q1 AND Q2 ARE BNS VARIABLES (FOR          28735001
                   R1 ~(SZMIN-1) MOD 63+1 ;                             28740000
                             % MULTIPLES OF 63) AND R1 AND R2 ARE       28740001
                   Q2 ~(RSZ -1) DIV 63 ;% REMAINDERS.                   28745000
                   R2 ~(RSZ -1) MOD 63+1 ;                              28750000
                             %TX IS A FLAG TO INDICATE TRUE OR          28750001
                   TX ~ 2|REAL(CRKEY=0 OR CRKEY=3 OR CRKEY=5);          28755000
                             % FALSE EXIT WHEN RSZ IS BLANK.            28755001
                   EQLGTH ~(RSZ =0) OR                                  28760000
                             %EQLGTH IF TRUE INDICATES THE ITEMS        28760001
                           (RSZ}0 AND(CRKEY=0 OR CRKEY= 4)) OR          28765000
                             % ARE TO BE COMPARED AS EQUAL LENGTH       28765001
                           (RSZ{0 AND(CRKEY=1 OR CRKEY=5)) ;            28770000
                             % (A FUNCTION OF THE RELATIONAL OP         28770001
                             % AND RSZ).                                28770002
                   IF VLGTH THEN COMMENT VARIABLE LENGTH ITEMS ;        28775000
              BEGIN                                                     28780000
                   IF BOOLEAN(CS[VSZ]) THEN COMMENT DYNAMIC SL ;        28785000
                   LFC(CS[OCC])                                         28790000
                   ELSE                                                 28795000
                   EMIL(LITC,SL)     ;                                  28800000
                   EMIL(OPR,DUP)     ;                                  28805000
                   IF BOOLEAN(CI[VSZ])THEN COMMENT DYNAMIC DL;          28810000
                   LFC(CI[OCC])                                         28815000
                   ELSE                                                 28820000
                   EMIL(LITC,DL)     ;                                  28825000
                   EMIL(OPR,SUB)      ;                                 28830000
                   EMIL ( LITC,STDLOC ) ;                               28835000
                   EMIL(OPR,SND)     ;COMMENT SAVE VRSZ = VSL - VDL ;   28840000
                   EMIL(OPR,DUP)     ;                                  28845000
                   EMIL(LITC,0)     ;                                   28850000
                             %FOR VARIABLE LENGTH ITEMS FIND THE        28850001
                   EMIL(OPR,LSQ)     ;COMMENT IF VRSZ { 0 THEN ;        28855000
                             % DYNAMIC VALUES VQ1,VR1,VQ2,VR2           28855001
                   EMIL(LITC,3)     ;% VEQLGTH,VTDEST AND MARK THOSE    28860000
                   EMIL(OPR,BFC)      ;% REQUIRED IN THE CALL ARRAY.    28865000
                   EMIL(OPR,DEL);                         COMMENT 8-7;  28870000
                   EMIL(LITC,2)     ;                                   28875000
                   EMIL(OPR,BFW)     ; COMMENT ELSE ;                   28880000
                   EMIL(OPR,CHS)      ;                                 28885000
                   EMIL(OPR,ADD)     ;COMMENT VDL = VSL -(VSL-VDL) ;    28890000
                   IF Q1 ! 0 THEN COMMENT FIND VQ1 AND VR1 ;            28895000
              BEGIN                                                     28900000
                   VQ1 ~ 1 ;                                            28905000
                   FINDQR(63) ;                                         28910000
              END  ;                                                    28915000
                   EMIL ( OPDC,STDLOC ) ; COMMENT VRSZ ;                28920000
                   IF Q2 ! 0 THEN COMMENT FIND VQ2 AND VR2 ;            28925000
              BEGIN                                                     28930000
                   VQ2 ~ 1 ;                                            28935000
                   FINDQR(63);                                          28940000
              END  ;                                                    28945000
                   EMIL(OPR,DUP)     ;                                  28950000
                   EMIL(LITC,0)     ;                                   28955000
              EMIL (OPR,REL[CRKEY +11]);  COMMENT VEQLGTH ;             28960000
                   EMIL ( OPDC,STDLOC ) ; COMMENT VRSZ ;                28965000
                   EMIL(LITC,0)     ;                                   28970000
                   EMIL(OPR,LES)     ; COMMENT VEQLGTH= VRSZ < 0 ;      28975000
                   VR1 ~ VR2 ~ VEQLGTH ~ VTDEST ~ 1 ; COMMENT PRESENT ; 28980000
              END  ;                                                    28985000
              END  ;                                                    28990000
                   IF CI[CLGTH]=0 THEN COMMENT SIMPLE;    COMMENT 6-29; 28990100
                   EMIL(LITC,CI[IQX]) ELSE                COMMENT 6-29; 28990200
              BEGIN CI[BASE]~CREG;                        COMMENT 6-29; 28990300
                   COPICODE(IC,0,SEG,CREG,CI[CLGTH]);     COMMENT 6-29; 28990400
                   RX2~1;                                 COMMENT 6-29; 28990500
              END; EMIL(DESC,CI[IPX]);                    COMMENT 6-29; 28990600
                   K ~ 1 ;                                              28995000
                   FOR I ~ 13 STEP -1 UNTIL 0 DO                        29000000
                             %CALCULATE THE RELATIVE ADDRESS OF         29000001
                   IF BOOLEAN(CALL[I]) THEN COMMENT PRESENT  ;          29005000
                             % THOSE VARIABLES REQUIRED IN THE          29005001
              BEGIN            % CALL (RELATIVE ADDRESS OF 0 MEANS      29010000
                   CALL[I] ~ K ;% THE VARIABLE IS NOT IN THE CALL).     29015000
                   K ~ K+1 ;                                            29020000
              END  ;                                                    29025000
                   EMIL(OPR,CMN);%WORD ADJUST                           29030000
COMMENT TEMPORARY; SGMTLVL ~ SGMTLVL + 1;                               29030001
                   CEMLT(PX1,RSA)     ; COMMENT SET REGISTERS ;         29115000
                             %THE FOLLOWIN CODE IS GENERATED TO         29115001
                   IF RX1 = 0 THEN COMMENT SIMPLE ;% SET THE REGISTERS: 29120000
                   BEGIN IF CS [ IRX ] ! 0 THEN                         29121000
                   CEMLT(CS[IRX], SFS)% SIMPLE            SUBSCRIPTED   29125000
              END                                                       29126000
                   ELSE        %RSA PX1            RSA PX1              29130000
              BEGIN            %IF CS[IRX]! 0 THEN    CRF RX1           29135000
                   CEMLT(RX1,CRF)     ;                                 29140000
                   CEMLT(0 , SFS)      ;%SFS CS[IRX]        SFS 0       29145000
              END  ;           %RDA PX2            RDA PX2              29150000
                   IF RX2 = 0 THEN COMMENT SIMPLE ;                     29160000
                             %SFD CI[IRX]        SFD 0                  29160001
                   BEGIN IF CI [ IRX ] ! 0 THEN                         29161000
                   CEMLT(CI[IRX], SFD)                                  29165000
              END                                                       29166000
                   ELSE                                                 29170000
              BEGIN                                                     29175000
                   CEMLT(RX2,CRF)     ;                                 29180000
                   CEMLT(0 , SFD)      ;                                29185000
              END  ;                                                    29190000
COMMENT GENERATE THE FOLLOWING ALL LITERAL CODE FOR FIXED LENGTH ITEMS: 29190100
                  <       {       =       !       }       >             29190200
IF Q1!0 THEN BEGIN                                                      29190300
IF Q1!1 THEN    BNS,Q1  BNS,Q1  BNS,Q1  BNS,Q1  BNS,Q1  BNS,Q1          29190400
(L IS LLGTH)    CGR,L   CGR,L   CNE,L           CLS,L   CLS,L           29190500
                JFC,1   JFC,1   JFC,1           JFC,1   JFC,1           29190600
                JFW,F   JFW,F   JFW,F           JFW,F   JFW,F     6-29  29190700
                SRS,L   SRS,L                   SRS,L   SRS,L           29190800
                SRD,L   SRD,L                   SRD,L   SRD,L           29190900
                CNE,L   CNE,L           CNE,L   CNE,L   CNE,L           29191000
                JFC,3   JFC,3           JFC,3   JFC,3   JFC,3           29191100
                SEC,1   SEC,1           SEC,1   SEC,1   SEC,1           29191200
(R IS RESULT)   STC,R   STC,R           STC,R   STC,R   STC,R           29191300
                JFW,F   JFW,F   JFW,F   JFW,F   JFW,F   JFW,F     6-29  29191400
IF TDEST THEN SRS,L ELSE SRD,L                                          29191500
IF Q1! 1 THEN   ENS,0   ENS,0   ENS,0   ENS,0   ENS,0   ENS,0           29191600
             END                                                        29191700
                CLS,R1  CEL,R1  CEQ,R1  CNE,R1  CEG,R1  CGR,R1          29191800
                JFC,2   JFC,2   JFC,2   JFC,2   JFC,2   JFC,2           29191900
                SEC,1   SEC,1   SEC,1   SEC,1   SEC,1   SEC,1           29192000
                STC,R   STC,R   STC,R   STC,R   STC,R   STC,R           29192100
         F:     CMX,0   CMX,0   CMX,0   CMX,0   CMX,0   CMX,0     6-29  29192200
GENERATE THE FOLLOWING ALL LITERAL CODE FOR VARIABLE LENGTH ITEMS:      29192300
IF Q1!0 THEN BEGIN                                                      29192400
                CRF,VQ1 CRF,VQ1 CRF,VQ1 CRF,VQ1 CRF,VQ1 CRF,VQ1         29192500
                BNS,12  BNS,12  BNS,12  BNS,12  BNS,12  BNS,12          29192600
                CGR,L   CGR,L   CNE,L           CLS,L   CLS,L           29192700
                JFC,1   JFC,1   JFC,1           JFC,1   JFC,1           29192800
                JFW,F   JFW,F   JFW,F           JFW,F   JFW,F     6-29  29192900
                SRS,L   SRS,L                   SRS,L   SRS,L           29193000
                SRD,L   SRD,L                   SRD,L   SRD,L           29193100
                CNE,L   CNE,L           CNE,L   CNE,L   CNE,L           29193200
                JFC,3   JFC,3           JFC,3   JFC,3   JFC,3           29193300
                SEC,1   SEC,1           SEC,1   SEC,1   SEC,1           29193400
                STC,R   STC,R           STC,R   STC,R   STC,R           29193500
                JFW,F   JFW,F           JFW,F   JFW,F   JFW,F     6-29  29193600
IF TDEST THEN SRS,L ELSE SRD,L                                          29193700
                ENS,0   ENS,0   ENS,0   ENS,0   ENS,0   ENS,0           29193800
             END                                                        29193900
                CRF,VR1 CRF,VR1 CRF,VR1 CRF,VR1 CRF,VR1 CRF,VR1         29194000
                CLS,3   CEL,1   CEQ,1   CNE,3   CEG,1   CGR,3           29194100
                JFC,2   JFC,2   JFC,2   JFC,2   JFC,2   JFC,2           29194200
                SEC,1   SEC,1   SEC,1   SEC,1   SEC,1   SEC,1           29194300
                STC,R   STC,R   STC,R   STC,R   STC,R   STC,R           29194400
         F:     CMX,0   CMX,0   CMX,0   CMX,0   CMX,0   CMX,0     6-29  29194500
RESTRICTION:ITEM LENGHT AND LITERAL LENGTH MUST BE { 63 ;               29194600
                   IF ALL THEN COMMENT ALL LITERAL ;                    29195000
              BEGIN                                                     29200000
                   IF Q1 ! 0 THEN                                       29205000
              BEGIN                                                     29210000
                   IF VLGTH THEN COMMENT VARIABLE LENGTH ITEM ;         29215000
              BEGIN                                                     29220000
                   CEMLT(VQ1,CRF)       ;                               29225000
                  CEMLT(12-7|REAL(CRKEY=2)-5|REAL(CRKEY=3),BNS);        29230000
              END                                                       29235000
                   ELSE                                                 29240000
                   CEMLT(Q1,BNS)     ;                                  29245000
                   CMPR1(LLGTH,FALSE,RESULT) ;                          29250000
                   IF TDEST THEN COMMENT TEST DESTINATION   ;           29255000
                   CEMLT(LLGTH,SRS)                                     29260000
                   ELSE                                                 29265000
                   CEMLT(LLGTH,SRD)     ;                               29270000
                   CEMLT(0, ENS)      ;                                 29275000
              END  ;                                                    29280000
                   IF VLGTH THEN                                        29285000
                   CMPR2(VR1,TRUE , RESULT) ELSE CMPR2(R1,FALSE,RESULT);29290000
                   GO TO FIN ;                                          29295000
              END  ;                                                    29300000
COMMENT GENERATE THE FOLLOWING CODE FOR FIXED LENGTH ITEMS:             29300100
                  <       {       =       !       }       >             29300200
IF Q0!0 THEN BEGIN                                                      29300300
IF Q1!0 THEN    BNS,Q1  BNS,Q1  BNS,Q1  BNS,Q1  BNS,Q1  BNS,Q1          29300400
                CGR,63  CGR,63  CNE,63          CLS,63  CLS,63          29300500
                JFC,1   JFC,1   JFC,1           JFC,1   JFC,1           29300600
                JFW,F   JFW,F   JFW,F           JFW,F   JFW,F     6-29  29300700
                SRS,63  SRS,63                  SRS,63  SRS,63          29300800
                SRD,63  SRD,63                  SRD,63  SRD,63          29300900
                CNE,63  CNE,63          CNE,63  CNE,63  CNE,63          29301000
                JFC,3   JFC,3           JFC,3   JFC,3   JFC,3           29301100
                SEC,1   SEC,1           SEC,1   SEC,1   SEC,1           29301200
                STC,R   STC,R           STC,R   STC,R   STC,R           29301300
                JFW,F   JFW,F           JFW,F   JFW,F   JFW,F     6-29  29301400
IF Q1!0 THEN    ENS,0   ENS,0   ENS,0   ENS,0   ENS,0   ENS,0           29301500
IF              SL<DL   SL>DL   SL!DL   SL!DL   SL<DL   SL>DL           29301600
 THEN BEGIN     CGR,R1  CGR,R1  CNE,R1          CLS,R1  CLS,R1          29301700
(ALL OTHERS     JFC,1   JFC,1   JFC,1           JFC,1   JFC,1           29301800
                JFW,F   JFW,F   JFW,F           JFW,F   JFW,F     6-29  29301900
 EQUAL LENGTH)  SRS,R1  SRS,R1                  SRS,R1  SRS,R1          29302000
                SRD,R1  SRD,R1                  SRD,R1  SRD,R1          29302100
                CNE,R1  CNE,R1          CNE,R1  CNE,R1  CNE,R1          29302200
                JFC,3   JFC,3           JFC,3   JFC,3   JFC,3           29302300
                SEC,1   SEC,1           SEC,1   SEC,1   SEC,1           29302400
                STC,R   STC,R           STC,R   STC,R   STC,R           29302500
                JFW,F   JFW,F           JFW,F   JFW,F   JFW,F     6-29  29302600
IF SL<DL THEN   SDA,1           SDA,1   SDA,1   SDA,1                   29302700
 (TEST DEST FOR RSA,1           RSA,1   RSA,1   RSA,1                   29302800
  BLANK)                                                                29302900
IF Q2!0 THEN                                                            29303000
      BEGIN     BNS,Q2  BNS,Q2  BNS,Q2  BNS,Q2  BNS,Q2  BNS,Q2          29303100
                BNS,63  BNS,63  BNS,63  BNS,63  BNS,63  BNS,63          29303200
 (BLANK)        TEQ,48  TEQ,48  TEQ,48  TEQ,48  TEQ,48  TEQ,48          29303300
 (11-TX)        JNC,9   JNC,11  JNC,11  JNC,9   JNC,11  JNC,9           29303400
                SFS,1   SFS,1   SFS,1   SFS,1   SFS,1   SFS,1           29303500
                ENS,0   ENS,0   ENS,0   ENS,0   ENS,0   ENS,0           29303600
                ENS,0   ENS,0   ENS,0   ENS,0   ENS,0   ENS,0           29303700
      END                                                               29303800
                BNS,R2  BNS,R2  BNS,R2  BNS,R2  BNS,R2  BNS,R2          29303900
(BLANK)         TEQ,48  TEQ,48  TEQ,48  TEQ,48  TEQ,48  TEQ,48          29304000
(5-TX)          JNC,3   JNC,5   JNC,5   JNC,3   JNC,5   JNC,3           29304100
                SFS,1   SFS,1   SFS,1   SFS,1   SFS,1   SFS,1           29304200
                ENS,0   ENS,0   ENS,0   ENS,0   ENS,0   ENS,0           29304300
(TX)            JFW,2   JFW,0   JFW,0   JFW,2   JFW,0   JFW,2           29304400
                SEC,1   SEC,1   SEC,1   SEC,1   SEC,1   SEC,1           29304500
                STC,R   STC,R   STC,R   STC,R   STC,R   STC,R           29304600
         F:     CMX,0   CMX,0   CMX,0   CMX,0   CMX,0   CMX,0     6-29  29304700
      END                                                               29304800
 ELSE BEGIN (COMPARE FOR EQUAL LENGTH ITEMS)                            29304900
                CLS,R1  CEL,R1  CEQ,R1  CNE,R1  CEG,R1  CGR,R1          29305000
                JFC,2   JFC,2   JFC,2   JFC,2   JFC,2   JFC,2           29305100
                SEC,1   SEC,1   SEC,1   SEC,1   SEC,1   SEC,1           29305200
                STC,R   STC,R   STC,R   STC,R   STC,R   STC,R           29305300
                EXC,0   EXC,0   EXC,0   EXC,0   EXC,0   EXC,0           29305400
      END                                                               29305500
GENERATE THE FOLLOWING CODE FOR VARIABLE LENGTH ITEMS :                 29305600
IF Q0!0 THEN BEGIN                                                      29305700
                CRF,VQ1 CRF,VQ1 CRF,VQ1 CRF,VQ1 CRF,VQ1 CRF,VQ1         29305800
                BNS,11  BNS,11  BNS,4   BNS,6   BNS,11  BNS,11          29305900
                CGR,63  CGR,63  CNE,63          CLS,63  CLS,63          29306000
                JFC,1   JFC,1   JFC,1           JFC,1   JFC,1           29306100
                JFW,F   JFW,F   JFW,F           JFW,F   JFW,F     6-29  29306200
                STS,63  STS,63                  SRS,63  SRS,63          29306300
                SRD,63  SRD,63                  SRD,63  SRD,63          29306400
                CNE,63  CNE,63          CNE,63  CNE,63  CNE,63          29306500
                JFC,3   JFC,3           JFC,3   JFC,3   JFC,3           29306600
                SEC,1   SEC,1           SEC,1   SEC,1   SEC,1           29306700
                STC,R STC,R             STC,R   STC,R   STC,R           29306800
                JFW,F   JFW,F           JFW,F   JFW,F   JFW,F     6-29  29306900
                ENS,0   ENS,0   ENS,0   ENS,0   ENS,0   ENS,0           29307000
             END                                                        29307100
(TEST DYNAMIC EQUAL LGTH FLG)           CRF,VEQLGTH                     29307200
                                        JFW,7                           29307300
                                        JFW,0                           29307400
(DYNAMICALLY TEST EQUAL LENGTH ITEMS)                                   29307500
                CRF,VR1 CRF,VR1 CRF,VR1 CRF,VR1 CRF,VR1 CRF,VR1         29307600
                CLS,3   CEL,1   CEQ,1   CNE,3   CEG,1   CGR,3           29307700
                JFC,2   JFC,2   JFC,2   JFC,2   JFC,2   JFC,2           29307800
                SEC,1   SEC,1   SEC,1   SEC,1   SEC,1   SEC,1           29307900
                STC,R   STC,R   STC,R   STC,R   STC,R   STC,R           29308000
                JFW,F   JFW,F   JFW,F   JFW,F   JFW,F   JFW,F     6-29  29308100
(DYNAMICALLY TEST UNEQUAL LENGTH ITEMS)                                 29308200
                CRF,VR1 CRF,VR1 CRF,VR1         CRF,VR1 CRF,VR1         29308300
                CGR,12  CGR,12  CNE,2           CLS,12  CLS,12          29308400
                JFC,1   JFC,1   JFC,1           JFC,1   JFC,1           29308500
                JFW,F   JFW,F   JFW,F           JFW,F   JFW,F     6-29  29308600
                CRF,VR1 CRF,VR1                 CRF,VR1 CRF,VR1         29308700
                SRS,0   SRS,0                   SRS,0   SRS,0           29308800
                CRF,VR1 CRF,VR1                 CRF,VR1 CRF,VR1         29308900
                SRD,0   SRD,0                   SRD,0   SRD,0           29309000
                CRF,VR1 CRF,VR1         CRF,VR1 CRF,VR1 CRF,VR1         29309100
                CNE,4   CNE,4           CNE,4   CNE,4   CNE,4           29309200
                JFC,3   JFC,3           JFC,3   JFC,3   JFC,3           29309300
                SEC,1   SEC,1           SEC,1   SEC,1   SEC,1           29309400
                STC,R   STC,R           STC,R   STC,R   STC,R           29309500
                JFW,F   JFW,F           JFW,F   JFW,F   JFW,F     6-29  29309600
                                        CRF,VTDEST                      29309700
                                        JFW,3                           29309800
                                        JFW,0                           29309900
(TEST DESTINATION FOR BLANK)            SDA,1                           29309901
                                        RSA,1                           29309902
IF Q2!0 THEN BEGIN                                                      29309903
                CRF,VQ2 CRF,VQ2 CRF,VQ2 CRF,VQ2 CRF,VQ2 CRF,VQ2         29309904
                BNS,6   BNS,6   BNS,6   BNS,6   BNS,6   BNS,6           29309905
                BNS,63  BNS,63  BNS,63  BNS,63  BNS,63  BNS,63          29309906
(BLANK)         TEQ,48  TEQ,48  TEQ,48  TEQ,48  TEQ,48  TEQ,48          29309907
(12-TX)         JNC,10  JNC,12  JNC,12  JNC,10  JNC,12  JNC,10          29309908
                SFS,1   SFS,1   SFS,1   SFS,1   SFS,1   SFS,1           29309909
                ENS,0   ENS,0   ENS,0   ENS,0   ENS,0   ENS,0           29309910
                ENS,0   ENS,0   ENS,0   ENS,0   ENS,0   ENS,0           29309911
             END                                                        29309912
                CRF,VR2 CRF,VR2 CRF,VR2 CRF,VR2 CRF,VR2 CRF,VR2         29309913
                BNS,0   BNS,0   BNS,0   BNS,0   BNS,0   BNS,0           29309914
(BLANK)         TEQ,48  TEQ,48  TEQ,48  TEQ,48  TEQ,48  TEQ,48          29309915
(5-TX)          JNC,3   JNC,5   JNC,5   JNC,3   JNC,5   JNC,3           29309916
                SFS,1   SFS,1   SFS,1   SFS,1   SFS,1   SFS,1           29309917
                ENS,0   ENS,0   ENS,0   ENS,0   ENS,0   ENS,0           29309918
(2-TX)          JFW,2   JFW,0   JFW,0   JFW,2   JFW,0   JFW,2           29309919
                SEC,1   SEC,1   SEC,1   SEC,1   SEC,1   SEC,1           29309920
                STC,R   STC,R   STC,R   STC,R   STC,R   STC,R           29309921
         F:     CMX,0   CMX,0   CMX,0   CMX,0   CMX,0   CMX,0     6-29  29309922
RESTRICTION : ITEM LENGTHS MUST BE { 511 WORDS ;                        29309923
                   IF VLGTH THEN COMMENT VARIABLE LENGTH ITEMS;         29309995
              BEGIN                                                     29310000
                   IF Q1 ! 0 THEN                                       29315000
              BEGIN                                                     29320000
                   CEMLT(VQ1,CRF)     ;                                 29325000
                   CEMLT(11-7|REAL(CRKEY=2)-5|REAL(CRKEY=3), BNS)     ; 29330000
                   CMPR1(63,FALSE, RESULT ) ;                           29335000
                   CEMLT(0,ENS)     ;                                   29340000
              END  ;                                                    29345000
                   CEMLT(VEQLGTH,CRF)     ;                             29350000
                   CEMLT(7, JFW)      ;                                 29355000
                   CEMLT(0, JFW)      ;                                 29360000
                   CMPR2(VR1,TRUE , RESULT ) ;                          29365000
                   T6~T6+1;FIXUPS[T6]~CHMX;               COMMENT 6-29; 29366000
                   CEMLT(0,JFW);                          COMMENT 6-29; 29367000
                   CMPR1(VR1,TRUE, RESULT ) ;                           29370000
                   CEMLT(VTDEST,CRF)     ;                              29375000
                   CEMLT(3,JFW)     ;                                   29380000
                   CEMLT(0,JFW)      ;                                  29385000
                   CEMLT(T, SDA)      ;                                 29390000
                   CEMLT(T, RSA)     ;                                  29395000
                   IF Q2 ! 0 THEN                                       29400000
              BEGIN                                                     29405000
                   CEMLT(VQ2,CRF)     ;                                 29410000
                   CEMLT(6,BNS)     ;                                   29415000
                   CEMLT(63,BNS)     ;                                  29420000
                   CEMLT(48,TEQ)     ; COMMENT BLANK ;                  29425000
                   CEMLT(12-TX,JNC)     ;                               29430000
                   CEMLT(1, SFS )      ;                                29435000
                   CEMLT(0, ENS)      ;                                 29440000
                   CEMLT(0, ENS)      ;                                 29445000
              END  ;                                                    29450000
                   CEMLT(VR2, CRF)       ;                              29455000
                   CEMLT(0, BNS)      ;                                 29460000
              END                                                       29465000
                   ELSE COMMENT FIXED LENGTH ;                          29470000
              BEGIN                                                     29475000
                   IF Q1 ! 0 THEN                                       29480000
              BEGIN                                                     29485000
                   IF Q1 = 1 THEN                                       29490000
                   CMPR1(63,FALSE,RESULT )                              29495000
                   ELSE                                                 29500000
              BEGIN                                                     29505000
                   CEMLT(Q1,BNS)      ;                                 29510000
                   CMPR1(63,FALSE , RESULT ) ;                          29515000
                   CEMLT(0,ENS)     ;                                   29520000
              END  ;                                                    29525000
              END  ;                                                    29530000
                   IF EQLGTH THEN COMMENT EQUAL LENGTH ITEMS ;          29535000
              BEGIN                                                     29540000
                   CMPR2(R1, FALSE  , RESULT ) ;                        29545000
                   GO TO FIN ;                                          29550000
              END  ;                                                    29555000
                   CMPR1(R1,FALSE , RESULT ) ;                          29560000
                   IF SL < DL THEN                                      29565000
              BEGIN                                                     29570000
                   CEMLT(1 , SDA)     ;                                 29575000
                   CEMLT(1 , RSA)     ;                                 29580000
              END  ;                                                    29585000
                   IF Q2 ! 0 THEN                                       29590000
              BEGIN                                                     29595000
                   CEMLT(Q2,BNS)     ;                                  29600000
                   CEMLT(63,BNS)      ;                                 29605000
                   CEMLT(48,TEQ)      ;                                 29610000
                   CEMLT(11-TX, JNC )      ;                            29615000
                   CEMLT(1 , SFS )      ;                               29620000
                   CEMLT(0 , ENS )      ;                               29625000
                   CEMLT(0 , ENS )      ;                               29630000
              END  ;                                                    29635000
                   CEMLT(R2 , BNS)      ;                               29640000
              END  ;                                                    29645000
                   CEMLT(48, TEQ)       ;                               29650000
                   CEMLT(5-TX, JNC)      ;                              29655000
                   CEMLT(1 , SFS)      ;                                29660000
                   CEMLT(0 , ENS)      ;                                29665000
                   CEMLT(   TX, JFW)      ;                             29670000
                   CEMLT(1 , SEC)      ;                                29675000
                   CEMLT(RESULT,STC)      ;                             29680000
FIN:               FOR I~1 STEP 1 UNTIL T6 DO CEMIT       COMMENT 6-29; 29685000
                   ((CHMX-FIXUPS[I])DIV 2-1,JFW,FIXUPS[I]);COMMENT 7-2; 29690000
                   CEMLT(0,CMX);                          COMMENT 7-3;  29691000
COMMENT TEMPORARY; SGMTLVL ~ SGMTLVL - 1;                               29691001
FIN1:         END  ;                                                    29695000
COMMENT ****************     NUM DISPLAY COMPARE **********************;29700000
PROCEDURE NUMDISCMP(SC,IC);ARRAY SC[0,0];ARRAY IC[0,0];                 29705000
                             %WHEN IN AN IF STATEMENT 2 NUMERIC         29705001
              BEGIN            % DISPLAY ITEMS ARE BEING COMPARED,      29710000
    INTEGER SPXX,SRXX,DPXX,DRXX,SSIGNPX,SSIGNQX,SSIGNRX,DSIGNPX,DSIGNQX,29715000
                             % BOOLEAN PRIMARY CALLS UPON THIS          29715001
            DSIGNRX,SASH,DASH,I,X,FIX1,FIX2,FIX3,FIX4,CSIPX,CSIQX,CSIRX,29720000
                             % ROUTINE. SCAN OF THE ITEMS IS COM-       29720001
            CIIPX,CIIQX,CIIRX,SAV,SAVX,CSSZ,CSLL,CSRP,CISZ,CILL,CIRP,   29725000
                             % PLETE SO GLOBAL ARRAYS ARE USED TO       29725001
           SSIGN,DSIGN,FLOG,FIX5,FIX6;                                  29730000
    INTEGER FALSE1,FALSE2,FALSE3;                         COMMENT 8-06; 29732000
    LABEL Z1,Z2,Z6,Z7,SUBIT;   % DESCRIBE THE SUBJECT AND OBJECT.       29735000
    BOOLEAN SZERO,DZERO;       % ARRAY PARAMETERS ARE PASSED SO THAT    29740000
                   SAV~0; SZERO~FALSE; DZERO~FALSE;                     29745000
                             % IF THE ITEMS ARE SUBSCRIPTED, THE        29745001
                   CSLL~CS[LL];CILL~CI[LL];CSSZ~CS[SZ];CISZ~CI[SZ];     29750000
                             % SUBSCRIPT CODE MAY BE COPIED TO OB-      29750001
                   CSRP~CS[RP]; CIRP~CI[RP];                            29755000
                             % TAIN ADDRESS. PARAMETERS ARE PASSED      29755001
                             % TO A CHARACTER MODE ROUTINE FOR          29755002
                   IF CS[TYP] = 5 THEN                                  29760000
              BEGIN            %SUBJECT IS LITERAL.                     29765000
                   SSIGN~0;                                             29765050
                   IF CSSZ=1 AND CS[LSYMB]=0 THEN                       29765100
              BEGIN  SZERO~TRUE; GO TO Z6;                              29765200
              END;                                                      29765300
                   IF CNQ.[41:7]>124 THEN                               29766000
              BEGIN CNR~0;                                              29767000
                   CNQ~CNQ+115;                                         29767500
                   CNQ.[41:7]~0;%UPDATE CONSTANT POOL INDEX IF THE      29768000
              END;                                                      29769500
                   IF CS[ALFLG] =1 THEN                                 29775000
              BEGIN                                                     29780000
                   BUILDLIT(CS[LSYMB],4,CSSZ,CNP[CNQ.[38:3],CNQ.[41:7]],29785000
                             %"ALL" OPTION HAS BEEN USED ON             29785001
                   CNR,CISZ DIV CSSZ,I~CISZ MOD CSSZ);                  29790000
                             % SUBJECT. BUILD A LITERAL THE SIZE        29790001
                   CSLL~CILL; CSSZ~CISZ;                                29795000
                             % OF THE OBJECT, ENTER IT IN THE CON-      29795001
                   CSIPX~CNPL; % STANT POOL, SET SUBJECT SIZE EQUAL     29800000
                   CSIQX~CNQ-1;% TO OBJECT SIZE, SET SUBJECT LEFT       29805000
                   CSIRX~CNR;  % PART EQUAL TO OBJECT RIGHT PART,       29810000
                   CNR~CNR+CI[LL];% SAVE POOL ADDRESS, & UPDATE POOL    29815000
              END ELSE         % INDEXES.                               29820000
              BEGIN                                                     29825000
                   IF CS[IQX] } 0 THEN                                  29830000
              BEGIN                                                     29835000
                   CSIPX~CS[IPX];%LITERAL SUBJECT HAS ALREADY BEEN AS-  29840000
                   CSIQX~CS[IQX];% SIGNED CONSTANT POOL ADDRESS BY      29845000
                   CSIRX~CS[IRX];% CONDITION ROUTINE. SAVE.             29850000
                   GO TO Z6                                             29855000
              END;                                                      29860000
                   CSIPX~CS[IPX]~CNPL;                                  29865000
                   CSIQX~CS[IQX]~CNQ-1;                                 29870000
                   CSIRX ~ CS[IRX] ~ CNR;                               29875000
         COMMENT ENTER LITERAL INTO CONSTANT POOL;                      29880000
            CHRTRAN(CS[LSYMB],4,CNP[CNQ.[38:3],CNQ.[41:7]],CNR,CS[SZ]); 29885000
                   CNR ~ CNR+CS[SZ]                                     29890000
              END;                                                      29895000
                   CNQ ~ CNQ + CNR DIV 8;%UPDATE CONSTANT POOL INDEXES. 29900000
                   CNR ~ CNR MOD 8;                                     29905000
                   GO TO Z6                                             29910000
              END;                                                      29915000
                   CSIPX ~ CS[IPX];%SAVE ADDRESS OF SUBJECT.            29920000
                   CSIQX ~ CS[IQX];                                     29925000
                   CSIRX ~ CS[IRX];                                     29930000
                   SSIGN ~ OSGN(CS[OCC]);%SAVE SIGN OF SUBJECT.         29935000
                   IF CI[TYP] = 5 THEN                                  29940000
              BEGIN            %OBJECT IS LITERAL.                      29945000
                   DSIGN~0;                                             29945050
                   IF CISZ=1 AND CI[LSYMB]=0 THEN                       29945100
              BEGIN DZERO~TRUE; GO TO Z7;                               29945200
              END;                                                      29945300
                   IF CNQ.[41:7]>124 THEN                               29946000
              BEGIN CNR~0;     %UPDATE CONSTANT POOL INDEX IF THE       29947000
                   CNQ~CNQ+115;                                         29947500
                   CNQ.[41:7]~0;% LITERAL WILL NOT FIT IN THIS ROW.     29948000
              END;                                                      29949500
                   IF CI[ALFLG] = 1 THEN                                29955000
              BEGIN                                                     29960000
                   BUILDLIT(CI[LSYMB],4,CISZ,CNP[CNQ.[38:3],CNQ.[41:7]],29965000
                             %"ALL" OPTION HAS BEEN USED ON             29965001
                   CNR,CSSZ DIV CISZ,I~CSSZ MOD CISZ);                  29970000
                             % OBJECT. BUILD A LITERAL THE SIZE OF      29970001
                   CILL~CSLL; CISZ~CSSZ;                                29975000
                             % THE SUBJECT, ENTER IT IN THE CON-        29975001
                   CIIPX ~ CNPL;% STANT POOL, SET OBJECT SIZE EQUAL     29980000
                   CIIQX~CNQ-1;% TO SUBJECT SIZE, SET OBJECT LEFT       29985000
                   CIIRX ~ CNR;% PART EQUAL TO SUBJECT LEFT PART,       29990000
                   CNR ~ CNR + CS [ LL ] ;                              29995000
                             % SAVE POOL ADDRESS, & UPDATE POOL         29995001
              END ELSE         % INDEXES.                               30000000
              BEGIN                                                     30005000
                   IF CI[IQX] } 0 THEN                                  30010000
              BEGIN                                                     30015000
                   CIIPX ~ CI[IPX];%LITERAL OBJECT HAS ALREADY BEEN AS- 30020000
                   CIIQX ~ CI[IQX];% SIGNED CONSTANT POOL ADDRESS BY    30025000
                   CIIRX ~ CI[IRX];% CONDITION ROUTINE. SAVE.           30030000
                   GO TO Z7                                             30035000
              END;                                                      30040000
                   CIIPX ~ CI[IPX] ~ CNPL;                              30045000
                   CIIQX~CI[IQX]~CNQ-1;                                 30050000
                   CIIRX ~ CI[IRX] ~ CNR;                               30055000
         COMMENT ENTER LITERAL INTO CONSTANT POOL;                      30060000
            CHRTRAN(CI [LSYMB],4,CNP[CNQ.[38:3],CNQ.[41:7]],CNR,CI[SZ]);30065000
                   CNR ~ CNR + CI[SZ]                                   30070000
              END;                                                      30075000
                   CNQ ~ CNQ + CNR DIV 8;                               30080000
                   CNR ~ CNR MOD 8;                                     30085000
                   GO TO Z7                                             30090000
              END;                                                      30095000
Z6:                                                                     30100000
                   CIIPX ~ CI[IPX];%SAVE ADDRESS OF OBJECT.             30105000
                   CIIQX ~ CI[IQX];                                     30110000
                   CIIRX ~ CI[IRX];                                     30115000
                   DSIGN ~ OSGN(CI[OCC]);%SAVE SIGN OF OBJECT.          30120000
Z7:                                                                     30125000
                   EMIL(LITC,0)     ;                                   30130000
                   EMIL(OPR,MKS)     ;                                  30135000
                   IF CSLL>CILL THEN X~CSLL ELSE X~CILL;                30140000
                             %COMPUTE COMPARE LENGTH = MAX(SUBJECT      30140001
                   IF CSRP>CIRP THEN X~X+CSRP ELSE X~X+CIRP;            30145000
                             % LEFT PART, OBJECT LEFT) & MAX            30145001
                             % (SUBJECT RT. PART, OBJECT RT. PART)      30145002
                   SAVX ~ X;                                            30150000
                   X ~ ((X-1) DIV 8) + 1;                               30155000
                   FOR I ~ 1 STEP 1 UNTIL X+X DO EMIL(LITC,0)     ;     30160000
                             %CREATE STACK SPACE FOR THE 2 ITEMS.       30160001
                   SPXX~2; SRXX~3; DPXX~3; DRXX~4;                      30170000
                             %INITIALIZE STACK POINTERS.                30170001
                   DSIGNPX~SSIGNPX~4;                                   30175000
                   DSIGNPX~SSIGNPX~4; SASH~3+X; DASH~SASH+X;            30180000
                   FLOG ~ DASH + 2;                                     30185000
                   IF DSIGN = 3 THEN                                    30190000
              BEGIN            %"SIGN IS DATA-NAME" OPTION.             30195000
                   X ~ OILNK(CI[OCC]);                                  30200000
                   JCV(X+3,J,K);                                        30205000
                   OAS(DSIGNPX,DSIGNQX,DSIGNRX,INFO[J,K].[18:15]);      30210000
                             %OBTAIN ADDRESS OF SIGN AND SAVE IT.       30210001
                   EMIL(LITC,DSIGNQX)     ;                             30215000
                   EMIL(DESC,DSIGNPX)     ;                             30220000
                   DSIGNPX ~ 4;                                         30225000
                   FLOG ~ FLOG + 1;%INCREMENT STACK POINTERS.           30230000
                   DASH ~ DASH + 1;                                     30235000
                   SASH ~ SASH + 1                                      30240000
              END;                                                      30245000
                   IF SSIGN = 3 THEN COMMENT SIGN IS DN;                30250000
              BEGIN            %"SIGN IS DATA-NAME" OPTION.             30255000
                   X ~ OILNK(CS[OCC]);                                  30260000
                   JCV(X+3,J,K);                                        30265000
                   OAS(SSIGNPX,SSIGNQX,SSIGNRX,INFO[J,K].[18:15]);      30270000
                             %OBTAIN ADDRESS OF SIGN AND SAVE IT.       30270001
                   EMIL(LITC,SSIGNQX)     ;                             30275000
                   EMIL(DESC,SSIGNPX)     ;                             30280000
                   SSIGNPX ~ 4;                                         30285000
                   FLOG ~ FLOG + 1;%INCREMENT STACK POINTERS.           30290000
                   DASH ~ DASH + 1;                                     30295000
                   SASH ~ SASH + 1;                                     30300000
                   DSIGNPX~DSIGNPX+1;                                   30305000
              END;                                                      30310000
                   IF NOT DZERO THEN                                    30311000
              BEGIN                                                     30312000
                   IF CI[CLGTH]= 0 THEN                                 30315000
              BEGIN            %OBJECT IS SIMPLE.                       30320000
                   EMIL(LITC,CIIQX)     ;                               30325000
                   EMIL(DESC,CIIPX)                                     30330000
              END ELSE                                                  30335000
              BEGIN                                                     30340000
                   CI[BASE] ~ CREG;%OBJECT IS SUBSCRIPTED.              30345000
                   COPICODE(IC,0,SEG,CREG,CI[CLGTH]);                   30350000
                             %COPY SUBSCRIPT CODE.                      30350001
                   EMIL(DESC,CIIPX);                                    30355000
                   FLOG ~ FLOG + 1;%INCREMENT STACK POINTERS.           30360000
                   DASH ~ DASH + 1;                                     30365000
                   SASH ~ SASH + 1;                                     30370000
                   DSIGNPX~DSIGNPX+1;                                   30375000
                   SSIGNPX~SSIGNPX+1;                                   30380000
              END END;                                                  30385000
                   IF NOT SZERO THEN                                    30386000
              BEGIN                                                     30387000
                   IF CS[CLGTH]= 0 THEN                                 30390000
              BEGIN            %SUBJECT IS SIMPLE.                      30395000
                   EMIL(LITC,CSIQX)     ;                               30400000
                   EMIL(DESC,CSIPX)                                     30405000
              END ELSE                                                  30410000
              BEGIN                                                     30415000
                   CS[BASE] ~ CREG;%SUBJECT IS SUBSCRIPTED.             30420000
                   COPICODE(SC,0,SEG,CREG,CS[CLGTH]);                   30425000
                             %COPY SUBSCRIPT CODE.                      30425001
                   EMIL(DESC,CSIPX);                                    30430000
                   FLOG ~ FLOG + 1;%INCREMENT STACK POINTERS.           30435000
                   DASH ~ DASH + 1;                                     30440000
                   SASH ~ SASH + 1;                                     30445000
                   DSIGNPX ~ DSIGNPX + 1;                               30450000
                   SSIGNPX ~ SSIGNPX + 1;                               30455000
                   DPXX ~ DPXX+1; DRXX ~ DRXX+1                         30460000
              END END;                                                  30465000
                   IF DZERO THEN                                        30466000
              BEGIN SSIGNPX~SSIGNPX-1; GO TO SUBIT;                     30466500
              END;                                                      30467000
                   IF SZERO THEN                                        30467500
              BEGIN  DPXX~DPXX-1; DRXX~DRXX-1; DSIGNPX~DSIGNPX-1;       30468000
SUBIT:             SASH~SASH-1; DASH~DASH-1; FLOG~FLOG-1;               30468500
              END;                                                      30469000
                   EMIL(LITC,0)         ;                               30520000
                   EMIL(OPR,CMN);                         COMMENT 6- 1; 30525000
COMMENT TEMPORARY; SGMTLVL ~ SGMTLVL + 1;                               30525001
                   FIX1~0; FIX2~0; FIX3~0; FIX4~0; FIX5~0;              30532000
                   FALSE1~0; FALSE2~0; FALSE3~0;          COMMENT 8-06; 30533000
                     IF SSIGN!0 THEN                                    30535000
              BEGIN  IF SSIGN=3 THEN                                    30540000
              BEGIN  CEMLT(SSIGNPX,RSA);                                30545000
                   IF SSIGNRX!0 THEN CEMLT(SSIGNRX,SFS);                30550000
                   CEMLT(SASH,SED);                                     30555000
                   IF CSLL<CILL THEN CEMLT(CILL-CSLL,SFD);              30560000
                             %AVOIDS LEAVING GARBAGE IN STACK.          30560001
                   CEMLT(1,TRN);%TRANSFER SOURCE SIGN TO STACK.         30565000
              END ELSE                                                  30570000
              BEGIN  CEMLT(SPXX,RSA);                                   30575000
                   IF CS[CLGTH]!0 THEN                                  30580000
              BEGIN CEMLT(SRXX,CRF); CEMLT(0,SFS);                      30582000
                             %SUBJECT IS SUBSCRIPTED                    30582001
              END ELSE IF CSIRX!0 THEN CEMLT(CSIRX,SFS);                30585000
                   CEMLT(SASH,SED);                                     30587000
                   IF CSLL<CILL THEN CEMLT(CILL-CSLL,SFD);              30590000
                   CEMLT(CSSZ,TRN);%                                    30595000
                   IF SSIGN=2 THEN                                      30600000
              BEGIN  CEMLT(CSSZ,SRS); CEMLT(CSSZ,SRD); CEMLT(1,TRN);    30605000
              END END;                                                  30610000
                   IF DSIGN!0 THEN GO TO Z1;                            30615000
                   CEMLT(1,JFC);                                        30620000
                   IF CRKEY{1 OR CRKEY=3 THEN                           30625000
                   FIX2~CHMX ELSE FALSE2~CHMX;            COMMENT 8-06; 30630000
                   CEMLT(0,JFW);                          COMMENT 8-06; 30635000
                   GO TO Z2;                                            30640000
              END;                                                      30645000
                   IF  DSIGN!0 THEN                                     30650000
              BEGIN   IF DSIGN=3 THEN                                   30655000
              BEGIN  CEMLT(DSIGNPX,RSA);                                30660000
                   IF DSIGNRX!0 THEN CEMLT(DSIGNPX,SFS);                30665000
                   CEMLT(DASH,SED);                                     30670000
                   IF CILL<CSLL THEN CEMLT(CSLL-CILL,SFD);              30675000
                   CEMLT(1,TRN);                                        30680000
              END ELSE                                                  30685000
              BEGIN  CEMLT(DPXX,RSA);                                   30687000
                   IF CI[CLGTH]!0 THEN                                  30690000
              BEGIN  CEMLT(DRXX,CRF); CEMLT(0,SFS);                     30692000
                             %OBJECT IS SUBSCRIPTED                     30692001
              END ELSE IF CIIRX!0 THEN CEMLT(CIIRX,SFS);                30695000
                   CEMLT(DASH,SED);%                                    30700000
                   IF CILL<CSLL THEN CEMLT(CSLL-CILL,SFD);              30705000
                   CEMLT(CISZ,TRN);                                     30710000
                   IF DSIGN=2 THEN                                      30715000
              BEGIN  CEMLT(CISZ,SRS); CEMLT(CISZ,SRD); CEMLT(1,TRN);    30720000
              END END;                                                  30725000
                   CEMLT(1,JFC);                                        30730000
                   IF CRKEY>2 THEN                                      30735000
                   FIX2~CHMX ELSE FALSE2~CHMX;            COMMENT 8-06; 30740000
                   CEMLT(0,JFW);                          COMMENT 8-06; 30745000
              END;                                                      30750000
                   GO TO Z2;   %                                        30755000
Z1:                FIX1~CHMX; CEMLT(0,JFC);%                            30760000
                   IF DSIGN=3 THEN                                      30770000
              BEGIN  CEMLT(DSIGNPX,RSA);                                30771000
                   IF DSIGNRX!0 THEN CEMLT(DSIGNRX,SFS);                30772000
                   CEMLT(DASH,SED);                                     30773000
                   IF CILL<CSLL THEN CEMLT(CSLL-CILL,SFD);              30775000
                   CEMLT(1,TRN);                                        30780000
              END ELSE                                                  30785000
              BEGIN  CEMLT(DPXX,RSA);%                                  30790000
                   IF CI[CLGTH]!0 THEN                                  30795000
              BEGIN  CEMLT(DRXX,CRF); CEMLT(0,SFS);                     30800000
                             %OBJECT IS SUBSCRIPTED                     30800001
              END ELSE IF CIIRX!0 THEN CEMLT(CIIRX,SFS);                30805000
                   CEMLT(DASH,SED);                                     30810000
                   IF CILL<CSLL THEN CEMLT(CSLL-CILL,SFD);              30815000
                   CEMLT(CISZ,TRN);                                     30820000
                   IF DSIGN=2 THEN                                      30825000
              BEGIN  CEMLT(CISZ,SRS); CEMLT(CISZ,SRD); CEMLT(1,TRN);    30830000
              END END;                                                  30835000
                   IF CRKEY{1 OR CRKEY=3 THEN FIX6~CHMX ELSE FIX5~CHMX; 30842000
                   CEMLT(0,JFC);                                        30843000
                   FIX4~CHMX; CEMLT(0,JFW);                             30845000
                   CEMIT((CHMX-FIX1-2) DIV 2,JFC,FIX1);                 30850000
                   IF DSIGN=3 THEN                                      30855000
              BEGIN  CEMLT(DSIGNPX,RSA);                                30860000
                   IF DSIGNPX!0 THEN CEMLT(DSIGNRX,SFS);%               30865000
                   CEMLT(DASH,SED);%                                    30870000
                   IF CILL<CSLL THEN CEMLT(CSLL-CILL,SFD);              30875000
                   CEMLT(1,TRN);                                        30877000
              END ELSE                                                  30880000
              BEGIN  CEMLT(DPXX,RSA);                                   30882000
                   IF CI[CLGTH]!0 THEN                                  30885000
              BEGIN  CEMLT(DRXX,CRF); CEMLT(0,SFS);                     30890000
                             %OBJECT IS SUBSCRIPTED.                    30890001
              END ELSE IF CIIRX!0 THEN CEMLT(CIIRX,SFS);                30895000
                   CEMLT(DASH,SED);                                     30900000
                   IF CILL<CSLL THEN CEMLT(CSLL-CILL,SFD);              30905000
                   CEMLT(CISZ,TRN);                                     30910000
                   IF DSIGN=2 THEN                                      30915000
              BEGIN  CEMLT(CISZ,SRS); CEMLT(CISZ,SRD); CEMLT(1,TRN);    30920000
              END END;                                                  30921000
                             CEMLT(1,JFC);                              30923000
                   IF CRKEY>2 THEN                                      30925000
                   FIX3~CHMX ELSE FALSE3~CHMX;            COMMENT 8-06; 30930000
                   CEMLT(0,JFW);                          COMMENT 8-06; 30935000
Z2:                IF (CRKEY=2 OR CRKEY=3) AND FIX4!0 THEN              30940000
                   CEMIT((CHMX-FIX4-2) DIV 2,JFW,FIX4);                 30945000
                   IF (SSIGN=3 OR SSIGN=0) AND NOT SZERO THEN           30950000
              BEGIN CEMLT(SPXX,RSA);                                    30955000
                   IF CS[CLGTH]!0 THEN                                  30960000
              BEGIN  CEMLT(SRXX,CRF);  CEMLT(0,SFS);%                   30965000
              END ELSE IF CSIRX!0 THEN CEMLT( CSIRX, SFS);%             30970000
                   CEMLT(SASH,SED);                                     30975000
                   IF CSLL<CILL THEN CEMLT(CILL-CSLL,SFD);              30980000
                   CEMLT(CSSZ,TRN);                                     30985000
              END;                                                      30990000
                   IF (DSIGN=3 OR DSIGN=0) AND NOT DZERO THEN           30995000
              BEGIN  CEMLT(DPXX,RSA);                                   31000000
                   IF CI[CLGTH]!0 THEN                                  31005000
              BEGIN CEMLT(DRXX,CRF); CEMLT(0,SFS);                      31010000
              END ELSE IF CIIRX ! 0 THEN CEMLT(CIIRX,SFS);              31015000
                   CEMLT(DASH,SED);                                     31020000
                   IF CILL<CSLL THEN CEMLT(CSLL-CILL,SFD);              31025000
                   CEMLT(CISZ,TRN);                                     31030000
              END;                                                      31035000
                   CEMLT(SASH,SES); CEMLT(DASH,SED);                    31040000
                   CEMLT (SAVX,REL [CRKEY+17]); CEMLT (2,JFC);          31045000
                   IF FIX2 ! 0 THEN CEMIT((CHMX-FIX2-2)DIV 2,JFW,FIX2); 31050000
                             %                                          31050001
                   IF FIX6 ! 0 THEN CEMIT((CHMX-FIX6-2)DIV 2,JFC,FIX6); 31052000
                   IF FIX3!0 THEN CEMIT((CHMX-FIX3-2)DIV 2,JFW,FIX3);   31055000
                   CEMLT(1,SEC); CEMLT(FLOG,STC);                       31057000
                   FALSE1~CHMX;                           COMMENT 8-06; 31058000
                   CEMLT(0,JFW);                          COMMENT 8-06; 31059000
                   IF CRKEY!2 AND CRKEY!3 AND SSIGN!0 AND DSIGN!0 THEN  31060000
              BEGIN  CEMIT((CHMX-FIX4-2)DIV 2,JFW,FIX4);                31065000
                   IF SSIGN=3 THEN                                      31070000
              BEGIN  CEMLT(SPXX,RSA);                                   31075000
                   IF CS[CLGTH]!0 THEN                                  31080000
              BEGIN  CEMLT(SRXX,CRF);   CEMLT(0,SFS);                   31085000
              END ELSE IF CSIRX ! 0 THEN CEMLT(CSIRX,SFS);              31090000
                   CEMLT(SASH,SED);                                     31095000
                   IF CSLL<CILL THEN CEMLT(CILL-CSLL,SFD);              31100000
                   CEMLT(CSSZ,TRN);                                     31105000
              END ;                                                     31110000
                   IF DSIGN=3 THEN                                      31115000
              BEGIN  CEMLT(DPXX,RSA);                                   31117000
                   IF CI[CLGTH]!0 THEN                                  31120000
              BEGIN  CEMLT(DRXX,CRF); CEMLT(0,SFS);                     31122000
                             %OBJECT IS SUBSCRIPTED                     31122001
              END ELSE IF CIIRX!0 THEN CEMLT(CIIRX,SFS);                31125000
                   CEMLT(DASH,SED);%                                    31130000
                   IF CILL<CSLL THEN CEMLT(CSLL-CILL,SFD);              31135000
                   CEMLT(CISZ,TRN);                                     31140000
              END;                                                      31145000
                   CEMLT(SASH,SES); CEMLT(DASH,SED);                    31150000
                   CEMLT (SAVX,REL [22-CRKEY]); CEMLT (2,JFC);          31155000
                   CEMLT(1,SEC); CEMLT(FLOG,STC);                       31165000
              END;                                        COMMENT 8-10; 31165500
                   IF FIX5!0 THEN CEMIT((CHMX-FIX5-2) DIV COMMENT 8-06; 31166000
                   2,JFC,FIX5);                           COMMENT 8-06; 31167000
                   IF FALSE1!0 THEN CEMIT((CHMX-FALSE1-2) COMMENT 8-06; 31168000
                   DIV 2,JFW,FALSE1);                     COMMENT 8-06; 31169000
                   IF FALSE2!0 THEN CEMIT((CHMX-FALSE2-2) COMMENT 8-06; 31170000
                   DIV 2,JFW,FALSE2);                     COMMENT 8-06; 31171000
                   IF FALSE3 ! 0 THEN CEMIT((CHMX-FALSE3-2)             31171200
                   DIV 2, JFW, FALSE3);                                 31171400
                   CEMLT(0,CMX);                          COMMENT 6- 1; 31172000
COMMENT TEMPORARY; SGMTLVL ~ SGMTLVL - 1;                               31172001
              END;                                                      31270000
COMMENT ****************     BOOLEAN PRIMARY     **********************;31275000
PROCEDURE BPRIM ; COMMENT BOOLEAN PRIMARY ANALYZER ;                    31280000
              BEGIN                                                     31285000
    INTEGER X ;                %THE SUBJECT CODE(SC) ARRAY IS USED      31290000
DEFINE D1=(CS[CLGTH] DIV 8+1)#;% TO SAVE EITHER THE VALUE CODE FOR      31295000
DEFINE D2 = ( CI[CLGTH] DIV 8 + 1 ) # ;                                 31300000
                             %A COMPUTATIONAL ITEM(OR FORMULA) OR       31300001
ARRAY SC[0:D1 DIV 127,0:IF D1 DIV 127 ! 0 THEN 127 ELSE D1 MOD 127];    31305000
                             % THE SUBSCRIPT LIST CODE OF A             31305001
ARRAY IC[0:D2 DIV 127,0:IF D2 DIV 127 ! 0 THEN 127 ELSE D2 MOD 127];    31310000
                             % DISPLAY ITEM.                            31310001
    LABEL A , AN , N , FIN;    %THE ITEM CODE(IC) ARRAY IS USED TO      31315000
    SWITCH SUBJCL ~ A , AN , N , AN ;% SAVE CODE FOR THE CURRENT ITEM.  31320000
                   SC[0,0] ~ 0 ;%MAKE THE SC ARRAY AND IC ARRAY         31325000
                   IC[0,0] ~ 0 ;% PRESENT.                              31330000
                   X ~ 0; COMMENT SAVE SUBJECT AND OBJECT CODE ;        31335000
                   COPICODE(SEG,CS[BASE],SC,X,CS[CLGTH]);               31340000
                   X~0 ;       %SAVE SUBJECT AND ITEM CODE IN           31345000
                   COPICODE(SEG,CI[BASE],IC,X,CI[CLGTH]);% NECESSARY.   31350000
                   IF CRTYPE= 1 THEN COMMENT RELATION ;                 31355000
              BEGIN                                                     31360000
                   IF CS[TYP] = 5 AND CI[TYP] = 5 THEN                  31365000
                   ERP1(01,23,01,08);COMMENT LIT. OPERATOR LIT. ERROR;  31370000
                   IF CS[TYP] = 2 OR CI[TYP] = 2 THEN                   31375000
              BEGIN                                                     31380000
                   IF CS[SZ] ! CI[SZ] THEN                              31385000
              BEGIN                                                     31385100
                   IF CS [ ALFLG ] = 0 AND CI [ ALFLG ] = 0 THEN        31385500
                   ERP1(76,59,22,15); COMMENT GROUP COND. OPND.SIZE ;   31390000
                             %CHECK FOR LITERAL:LITERAL AND             31390001
              END  ;                                                    31391000
                   IF CS[USG] ! 0 OR CI[USG] ! 0 THEN                   31395000
                             % GROUP ITEMS SIZE AND USAGE.              31395001
                   ERP1(76,59,22,16);COMMENT GROUP COND. OPND USG ;     31400000
              END  ;                                                    31405000
                   IF NOT GETOUT THEN                                   31410000
                   GO TO SUBJCL[CS[CL]];                                31415000
              END  ;                                                    31420000
IF CRTYPE = 2 THEN AMTEST(IC) ELSE CLTEST(IC);                          31425000
                   GO TO FIN ;                                          31430000
    A:             IF CI[CL] = 3 THEN COMMENT NUMERIC ;                 31435000
                   ERP1(59,22,39,08) COMMENT COND. OPND. CLASS ERROR;   31440000
                             %ALPHA:NUMERIC NOT ALLOWED.                31440001
                   ELSE                                                 31445000
CHCMPR(SC,IC);                                                          31450000
                   GO TO FIN ;                                          31455000
    AN:                                                                 31460000
                   IF CI[CL] = 3 THEN COMMENT NUMERIC ;                 31465000
              BEGIN                                                     31470000
                   IF CI[RP] ! 0 THEN                                   31475000
                   ERP1(54,59,22,08);COMMENT INTEGER COND. OPND.ERROR;  31480000
                             %AN: NUMERIC UNSIGNED DISPLAY INTEGER      31480001
                   IF CI[USG] ! 0 THEN% IS ALLOWED.                     31485000
                   ERP1(59,22,16,08);COMMENT COND. OPND. USAGE ERROR ;  31490000
                   IF CI[TYP] ! 5 THEN                                  31495000
              BEGIN                                                     31500000
                   IF OSGND (CI[OCC]) THEN                              31505000
                   ERP1(59,22,95,08); COMMENT COND.OPND.SIGNED ERROR ;  31510000
              END  ;                                                    31515000
                   IF GETOUT THEN GO TO FIN ;                           31520000
              END  ;                                                    31525000
CHCMPR(SC,IC);                                                          31530000
                   GO TO FIN ;                                          31535000
    N:                                                                  31540000
                   IF CI[CL] = 1 THEN COMMENT ALPHABETIC ;              31545000
              BEGIN                                                     31550000
                   ERP1(59,22,39,08); COMMENT COND. OPND. CLASS ERROR;  31555000
                             %NUMERIC: ALPHA NOT ALLOWED.               31555001
                   GO TO FIN ;                                          31560000
              END  ;                                                    31565000
                   IF CI[CL] = 3 THEN COMMENT NUMERIC ;                 31570000
              BEGIN                                                     31575000
                   IF CS[TYP] = 2 OR CI[TYP]= 2 THEN                    31580000
CHCMPR(SC,IC)                                                           31585000
                   ELSE IF CS[USG] = 0 AND CI[USG] = 0 THEN             31590000
NUMDISCMP(SC,IC)                                                        31595000
                   ELSE                                                 31600000
WDCMPR(SC,IC);                                                          31605000
                   GO TO FIN ;                                          31610000
              END  ;                                                    31615000
                   IF CS[RP] ! 0 THEN COMMENT NOT AN INTEGER ;          31620000
                   ERP1(54,59,22,08);COMMENT INTEGER COND. OPND. ERROR; 31625000
                   IF CS[USG] ! 0 THEN                                  31630000
                             %NUMERIC UNSIGNED DISPLAY INTEGER:AN       31630001
                   ERP1(59,22,16,08);COMMENT COND.OPND. USAGE ERROR;    31635000
                             % IS ALLOWED.                              31635001
                   IF CS[TYP] ! 5 THEN                                  31640000
              BEGIN                                                     31645000
                   IF OSGND ( CS [ OCC ] ) THEN                         31650000
                   ERP1(59,22,95,08); COMMENT COND.OPND. SIGNED ERROR;  31655000
              END  ;                                                    31660000
                   IF NOT GETOUT THEN                                   31665000
CHCMPR(SC,IC) ;                                                         31670000
    FIN:                                                                31675000
              END  ;                                                    31680000
COMMENT ****************     CONDITION NAME      **********************;31685000
                             %STARTING WITH INFO(OCUR)+4, DATA          31685001
                             % DIVISION ENTERS ALL VALUE SETS FOR       31685002
                             % PARTICULAR LEVEL 88 ENTRY. FIRST         31685003
                             % APPEARS A FLAG: 0=EQUAL TEST, 1=         31685004
                             % RANGE TEST; THEN ONE LITERAL FOR         31685005
                             % EQUAL AND TWO FOR RANGE. THEREFORE       31685006
PROCEDURE CONDNME;             % THERE IS A FLAG AND 1 OR 2 LITERALS    31690000
                             % FOR EACH VALUE GIVEN. CONDITION          31690001
                             % NAME PROCESSES LEVEL 88S:                31690002
              BEGIN                                                     31695000
    INTEGER A,I,J,K,V,VL,X,Y;  % COMPUTATIONAL SINGLE PRECISION:        31700000
                             %   VALUES ARE ENTERED INTO THE CON-       31700001
                   A~A1~IXX+4; %POINT TO COND.NAME 88 FLAG IN INFO.     31860000
                   VL~VALS;    %VALS IS # OF VALUE SETS PER LEVEL 88    31875000
                   V~VL-1;                                              31880000
                   IF OUSG(OCUR)!0 THEN                                 31885000
         COMMENT COMPUTATIONAL;                                         31890000
              BEGIN                                                     31895000
              BOOLEAN PROCEDURE PUTCNST(V); REAL V;                     31900000
                   IF PUTCNST~(ABS(V)>1023) THEN                        31905000
                   BEGIN                                                31910000
                        CNQ~CNQ+REAL(CNR!0);                            32470000
                        CNR~0;                                          32475000
                        CNP[CNQ.[38:3],CNQ.[41:7]]~V;                   32480000
                        V~(CNQ-1)&CNPL[18:33:15];                       32485000
                        CNQ~CNQ+1                                       32490000
                   END  PUTCNST;                                        32495000
COMMENT  THIS VERSION OF S.P. CMP CONDITION-NAMES WAS IMPLEMENTED 6/66. 32500000
         THE CODE GENERATED IS AS FOLLOWS:                              32505000
              FOR EACH RANGE TEST:                                      32510000
                   DUP                                                  32515000
                   LITC VALUE-1 (OR CNP INDEX)                          32520000
                  (OPDC CNPL) IF VALUE IS IN CNP.                       32525000
                  (SSN) IF VALUE<0                                      32530000
                   GEQ/LSS   (TAKE 2ND OPR IF NOT LAST TEST )           32535000
                   XCH                                                  32540000
                   LITC VALUE-2                                         32545000
                  (OPDC CNPL)                                           32550000
                  (SSN)                                                 32555000
                   LEQ/GTR                                              32560000
                   LND/LOR                                              32565000
              FOR A SIMPLE VALUE TEST:                                  32570000
                   LITC VALUE OR CNP INDEX                              32575000
                  (OPDC CNPL)                                           32580000
                  (SSN)                                                 32585000
                   EQL/NEQ                                              32586000
              TO TIE THE TESTS TOGETHER, WE HAVE (FOR 3 TESTS):         32590000
                  [VALUE OF OPERAND TO BE TESTED]                       32595000
                   DUP                                                  32600000
                   TEST 1(RANGE OR VALUE)                               32605000
                   LITC                                                 32610000
               :<--BFC                                                  32615000
               :   DUP          *                                       32620000
               :   TEST 2        * NOTE THAT THIS IS REPEATED FOR EACH  32625000
               :   LITC          * TEST EXCEPT THE LAST.                32630000
               :<--BFC          *                                       32635000
               :   TEST 3          *                                    32640000
               :   LITC 2           *                                   32645000
               :   BFW  ----:        * LAST TEST ONLY.                  32650000
               --->DEL      :       *                                   32655000
                   LITC 1   :     *                                     32660000
                        <----                                           32665000
                        ;                                               32670000
              PROCEDURE EMITEST(N,X); VALUE N,X; INTEGER N,X;           32675000
              BEGIN REAL C,V;                                           32680000
                   IF N!0 THEN EMIL(OPR,DUP);                           32685000
                   IF BOOLEAN(C~TAKE(X)) THEN EMIL(OPR,DUP);            32690000
                   IF NOT BOOLEAN(C.[46:1]) THEN                        32695000
                   IF PUTCNST(INFO[(X+1).[33:6],(X+1).[39:9]]) THEN     32700000
                        C.[46:1]~1;                                     32705000
                   EMIL(LITC,(V~TAKE(X+1)).[33:15]);                    32710000
                   IF BOOLEAN(C.[46:1]) THEN EMIL(OPDC,V.[18:15])       32715000
                   ELSE IF V<0 THEN EMIL(OPR,SSN);                      32720000
                   IF BOOLEAN(C) THEN % RANGE TEST                      32725000
                   BEGIN EMIL(OPR,IF N=0 THEN GRQ ELSE LES);            32730000
                        EMIL(OPR,XCH);                                  32735000
                        IF C<4 THEN                                     32740000
                        IF PUTCNST(INFO[(X+2).[33:6],(X+2).[39:9]])THEN 32745000
                             C.[45:1]~1;                                32750000
                        EMIL(LITC,(V~TAKE(X+2)).[33:15]);               32755000
                        IF C}4 THEN EMIL(OPDC,V.[18:15]) ELSE           32760000
                        IF V<0 THEN EMIL(OPR,SSN);                      32765000
                        IF N=0 THEN BEGIN                               32769000
                        EMIL(OPR,LSQ); EMIL(OPR,LND);                   32770000
                                    END ELSE                            32772000
                        BEGIN EMIL(OPR,GRT); EMIL(OPR,LOR) END          32774000
                   END  RANGE TESTING ELSE                              32775000
                   EMIL(OPR,EQL&REAL(N=0) [38:47:1]);                   32776000
                   X~(INFO[X.[33:6],X.[39:9]]~C).[47:1]+X+2;            32780000
                   IF N!0 THEN                                          32785000
                   BEGIN                                                32785050
                        CREG~(C~CREG)+2;                                32790000
                        EMIL(OPR,BFC);                                  32795000
                        EMITEST(N-1,X);  % NOTICE USE OF RECURSION.     32800000
                        EMIT(LITC,(CREG-C-4)DIV 2,C)                    32805000
                   END ELSE                                             32810000
                   BEGIN EMIL(LITC,2); EMIL(OPR,BFW) END;               32815000
              END EMITEST;                                              32820000
%   START OF CODE FOR COMPUTATIONAL S.P.                                32825000
              VALU(OCUR,SEG,T1,SUBS,1);                                 32830000
              EMITEST(V,A);                                             32835000
              IF V=0 THEN CREG~CREG-4 ELSE                              32840000
              BEGIN EMIL(OPR,DEL); EMIL(LITC,1) END;                    32845000
              END COMPUTATIONAL PART BY BILL PRICE                      32850000
                   ELSE                                                 32855000
COMMENT 99999999999999999999999 DISPLAY 999999999999999999999999999999; 33250000
                             %FIRST 4 POSITIONS OF VARIABLE STACK:      33250001
                             % 0 RCW                                    33250002
                             % 1 0 TRASH LOCATION..USED TO STORE        33250003
                             %     DEST. ADDRESS IF MULTIPLE            33250004
                             %     CONDITION NAMES ARE USED.            33250005
                             % 2 PX LEVEL 88 COND.NAME LITERAL          33250006
              BEGIN            % 3 [RX ITEM IF SUBSCRIPTED]             33255000
                             % 4 PX ITEM                                33255001
                             % NEXT POSITIONS DEPEND ON SIGN:           33255002
                             % J SIGN OR                                33255003
                             % UNSIGNED  S SIGN    SIGN IS DN.          33255004
    INTEGER SRX,SIGHN,LCTT,THRUF,B,L,R,Z,W,NUMVAL,RANGEFLG;             33255050
                             % 5 MKS     5 PX TEMP 5 PX TEMP.STOR.      33255051
    INTEGER TEMPO,LPX,ERX,EPX,SPX,FLOG;% 6 0            STOR 6 PX SIGN  33255052
    INTEGER PLUSFLG,SAV;       %           6 MKS     7 MKS              33255053
    BOOLEAN SW1,SUBSCRIPT,CAMEBACK;                                     33255060
    LABEL Z5,Z6,Z7,Z8,Z9,Z10,Z11,Z12,Z13,Z14,Z15;                       33256000
BOOLEAN STREAM PROCEDURE JORS(SOURCE,DEST,DCHR,F);VALUE DCHR,F;         33257200
              BEGIN                                                     33257400
                   SI~LOC F; SI~SI+7; IF SC = "1" THEN                  33257700
              BEGIN  SI ~ SOURCE;                                       33258400
                   DI~LOC JORS;                                         33258500
                   IF SC = "-" THEN DS~ 8 LIT "00000001";               33258700
              END ELSE                                                  33259200
              BEGIN  DI ~ DEST; DI ~ DI+DCHR;                           33259400
                   DS~1 SET; DS~1 RESET;                                33259600
              END END;                                                  33259800
                   NUMVAL ~ 0; SIGHN ~ OSGN(OCUR); RANGEFLG ~ 0;        33260000
                             %SAVE SIGN.                                33260001
                   SAV ~ 0;                               COMMENT 6-1;  33260500
                   SUBSCRIPT ~ FALSE; SW1 ~ FALSE; JCV(IXX,J,K);        33261000
                   LCTT ~ IXX + INFO[J,K].[24:5];                       33263000
                   Z~0; W~1;                                            33264000
                   EMIL(LITC,0)     ;%FOR TRUE OR FALSE FLAG.           33265000
                   EMIL(OPR,MKS)     ;                                  33270000
                   IF SIGHN = 3 THEN%"SIGN IS DATANAME".                33275000
              BEGIN                                                     33280000
                   SPX~1;                                               33282000
                   JCV(OILNK(OHLNK(OCUR))+3,J,K);                       33285000
                   OAS(X,Y,SRX,INFO[J,K].[18:15]);                      33290000
                   EMIL(LITC,Y); EMIL(DESC,X)                           33295000
                             %LITC QX SIGN. DESC PX SIGN.               33295001
              END ELSE SPX~0;                                           33300000
                   L ~SIZE;    %SAVE SIZE.                              33325000
                   R~(L+7) DIV 8;                                       33326000
                   IF SUBS = 0 THEN                                     33330000
              BEGIN                                                     33335000
                   EMIL(LITC,QX);EMIL(DESC,PX); ERX~RX; DN              33340000
                             %ITEM IS SIMPLE.                           33340001
              END ELSE                                                  33345000
              BEGIN  I~PX;                                              33350000
                   HRX ~ 0; HQX ~ 0; SUBLST; EMIL(DESC,I);              33355000
                             %ITEM IS SUBSCRIPTED.                      33355001
                   SUBSCRIPT ~ TRUE                                     33365000
              END;                                                      33370000
                   PLUSFLG~0;                                           33372000
                   JCV(A,J,K);                                          33375000
                   IF INFO[J,K]>1 THEN GO TO Z7;%IF VALUE PROCESSED.    33380000
                   THRUF~REAL((INFO[J,K]~INFO[J,K]+2)!2);               33385000
                   A~A+1;                                               33395000
Z5:                I ~ IF THRUF=0 THEN 1 ELSE 2;                        33400000
                   IF (L|(VL+1)|I)>1024-((CNQ.[41:7]|8)+CNR) THEN       33405000
                             %IF NOT SUFFICIENT ROOM IN CNP ROW.        33405001
              BEGIN                                                     33410000
                   CNR~0; CNQ~CNQ+115; CNQ.[41:7]~0;                    33415000
                             %UPDATE CNP INDEXES.                       33415001
              END;                                                      33420000
Z6:                                                                     33420050
                   NUMVAL ~ NUMVAL+1;                                   33421000
                   I~REAL(SIGHN!0); JCV(A,J,K);                         33425000
                   CHRTRAN(INFO[J,K],I,CNP[CNQ.[38:3],CNQ.[41:7]],CNR,  33430000
                             %TRANSFER VALUE TO CONSTANT POOL.          33430001
                   L);                                                  33435000
                   IF SIGHN=0 OR NOT JORS(INFO[J,K],Z,Z,W) THEN         33436000
              BEGIN  PLUSFLG~1; INFO[J,K]~0;                            33436500
              END ELSE                                                  33436600
              BEGIN                                                     33436700
                   INFO[J,K]~0&1[1:47:1]; IF THRUF!0 THEN               33437000
              BEGIN                                                     33437100
                   JCV(A+R,X,I); IF JORS(INFO[X,I],Z,Z,W) THEN          33437200
                   INFO[J,K].[2:1]~1;                                   33437400
              END ELSE                                                  33437600
              BEGIN  I~IF SIGHN=2 THEN CNR ELSE (CNR+L-1);              33438000
                   IF JORS(Z,CNP[CNQ.[38:3],CNQ.[41:7]],I,Z) THEN W~W;  33440000
                             %SET SIGN BITS IN MSD.                     33440001
              END END;                                                  33442000
                   IF NOT SW1 THEN                                      33445000
              BEGIN                                                     33450000
                   SW1~TRUE;                                            33455000
                INFO[J,K]~INFO[J,K]& CNR[45:45:3]& (CNQ-1)[35:38:10]%17333460000
                             %STORE CNP ADDRESS INTO INFO.              33460001
                                   & CNPL[25:38:10];             %TR-17333460100
              END;                                                      33465000
                   CNR~CNR+L; CNQ~CNQ+(CNR DIV 8);%UPDATE CNP INDEXES.  33470000
                   CNR~CNR MOD 8;                                       33475000
                    IF THRUF = 1 THEN%RANGE.                            33515000
              BEGIN                                                     33515010
                   I~REAL(SIGHN!0);                                     33515020
                   JCV(A+R,J,K);                                        33515030
                    CHRTRAN(INFO[J,K],I,CNP[CNQ.[38:3],CNQ.[41:7]],     33515040
                             %TRANSFER VALUE TO CONSTANT POOL.          33515041
                   CNR,L); A~A+R+R+1; RANGEFLG ~ 1;                     33515050
                   CNR~CNR+L; CNQ~CNQ+(CNR DIV 8); CNR~CNR MOD 8;       33515075
                             %UPDATE CNP INDEXES                        33515076
              END  ELSE                                                 33515080
              BEGIN  A~A+R+1;                                           33515090
              END;                                                      33515110
                   IF A}LCTT THEN GO TO Z7;                             33515120
                    JCV(A-1,J,K);                                       33515130
                   THRUF~REAL((INFO[J,K]~INFO[J,K]+2)!2);               33515150
                   IF V>0 THEN                                          33515170
              BEGIN  V~V-1; GO TO Z6;                                   33516000
              END;                                                      33517000
Z7:                                                                     33522000
                    JCV(A1+1,J,K); EMIL(LITC,INFO[J,K].[35:10]); %TR-17333525000
                             %LITC LITERAL OR LITC CNQ.                 33525001
                    EMIL(DESC,(B~INFO[J,K].[25:10])&             %TR-40233525050
                          REAL (B>511)[33:47:1]);                %TR-40233525051
                    B~INFO[J,K].[45:3];                          %TR-40233530000
              BEGIN  IF L<8 THEN TEMPO ~ 1 ELSE                         33539000
              BEGIN  EMIL(LITC,0);                                      33540000
                     IF L < 16 THEN TEMPO ~ 2 ELSE                      33543000
              BEGIN  EMIL(LITC,0); TEMPO ~ 3;                           33545000
              END END;                                                  33550000
                   IF NUMVAL!1 THEN                                     33552000
              BEGIN  EMIL(LITC,0); TEMPO ~ TEMPO + 1;                   33555000
              END END;                                                  33557000
                   EMIL(LITC,0);  EMIL (OPR,CMN);         COMMENT 6- 1; 33570000
COMMENT TEMPORARY; SGMTLVL ~ SGMTLVL + 1;                               33570001
                   LPX~1+TEMPO;                                         33571000
                   EPX~1+LPX;                                           33571500
                   IF SUBSCRIPT THEN                                    33572000
              BEGIN  ERX~1+EPX; SPX~SPX+ERX;                            33573000
              END ELSE                                                  33574000
                   SPX ~ SPX+EPX; FLOG ~ 2+SPX;                         33574500
                   VL ~ VL - 1;                                         33575000
                   CAMEBACK~FALSE;                                      33575500
Z8:                CEMLT(EPX,RSA);                                      33580000
                   IF SUBSCRIPT THEN                                    33585000
              BEGIN                                                     33590000
                   CEMLT(ERX,CRF); CEMLT(0,SFS)                         33595000
              END ELSE IF ERX!0 THEN CEMLT(ERX,SFS);                    33600000
                   IF SIGHN=0 THEN GO TO Z12;                           33601000
                   IF CAMEBACK THEN CEMLT(1,SDA);                       33603000
                   JCV(A1,J,K); JCV(A1+1,X,I);                          33605000
                   IF INFO[J,K]!3 AND INFO[X,I].[1:1]=1 AND SIGHN!3 THEN33610000
                   GO TO Z12;                                           33615000
                   CEMLT(TEMPO,SED); CEMLT(L,TRN);                      33665000
                   IF SIGHN ! 1 THEN%                                   33670000
              BEGIN  IF SIGHN=2 THEN                                    33675000
              BEGIN CEMLT(L,SRS);CEMLT(L,SRD);CEMLT(1,TRN);COMMENT 1-65;33676000
              END ELSE                                                  33677000
              BEGIN  CEMLT(SPX,RSA);                                    33680000
                   IF SRX!0 THEN CEMLT(SRX,SFS); JCV(A1+1,X,I);         33685000
                   JCV(A1,J,K);                                         33685500
                   IF INFO[X,I].[1:1]=1 AND INFO[J,K]!3 THEN            33686000
              BEGIN  CEMLT(1,SRD); CEMLT(1,TRZ);                        33687000
              END ELSE CEMLT(1,TRN);                                    33690000
              END;                                                      33695000
              END;                                                      33700000
                   CEMLT(TEMPO,SES); JCV(A1+1,J,K);                     33705000
                   IF INFO[J,K].[1:1] =1 THEN GO TO Z11;                33710000
                   CEMLT(1,JFC);                          COMMENT 6- 1; 33712000
                   IF SAV!0 THEN                          COMMENT 6- 1; 33713000
                   CEMIT((CHMX-SAV-2)DIV 2,JFW,SAV);      COMMENT 6- 1; 33714000
                   SAV~CHMX; CEMLT(0,JFW);                COMMENT 10-9; 33715000
                   JCV(A1,J,K); IF INFO[J,K]!3 THEN GO TO Z12;          33717000
                   IF CAMEBACK THEN CEMLT(1,RDA) ELSE                   33720000
              BEGIN  CEMLT(LPX,RDA); IF B!0 THEN CEMLT(B,SFD);          33725000
              END;                                                      33730000
                   CEMLT(L,CEG); CEMLT(5,JFC); CEMLT(TEMPO,SES);        33735000
Z9:                CEMLT(L,CEL);                                        33740000
Z10:                                                                    33742000
                   IF VL { 0 THEN GO TO Z15;                            33745000
                   CAMEBACK ~ TRUE; A1~A1+R+R+1; VL ~ VL-1;             33750000
                   CEMLT(3,JFC); CEMLT(1,SEC);                          33755000
                   CEMLT(FLOG,STC);                       COMMENT 6- 1; 33757000
                   IF SAV!0 THEN                          COMMENT 6- 1; 33760000
                   CEMIT((CHMX-SAV-2)DIV 2,JFW,SAV);      COMMENT 6- 1; 33762000
                   SAV~CHMX; CEMLT(0,JFW);                COMMENT 10-9; 33763000
                   GO TO Z8;                                            33765000
Z11:               JCV(A1,X,I); IF INFO[X,I]!3 THEN GO TO Z12;          33765500
                   IF INFO[J,K].[2:1]=1 THEN                            33770000
              BEGIN  IF CAMEBACK THEN                                   33775000
              BEGIN  CEMLT(8,JFC); CEMLT(1,RDA);                        33780000
              END ELSE                                                  33780500
              BEGIN  IF B=0 THEN                                        33781000
              BEGIN  CEMLT(8,JFC); CEMLT(LPX,RDA);                      33781500
              END ELSE                                                  33785000
              BEGIN CEMLT(9,JFC); CEMLT(LPX,RDA); CEMLT(B,SFD);         33790000
              END END;                                                  33794000
                   CEMLT(L,CEL); CEMLT(5,JFC); CEMLT(TEMPO,SES);        33794200
                   CEMLT(L,CEG); GO TO Z10;                             33794500
              END;                                                      33795000
                   IF CAMEBACK THEN CEMLT(1,RDA) ELSE                   33800000
              BEGIN CEMLT(LPX,RDA);                                     33805000
                   IF B!0 THEN CEMLT(B,SFD);                            33810000
              END;                                                      33815000
                   CEMLT(3,JFC); CEMLT(L,CGR);                          33820000
                   CEMLT(4,JFC);                          COMMENT 6- 1; 33822000
                   IF SAV!0 THEN                          COMMENT 6- 1; 33825000
                   CEMIT((CHMX-SAV-2)DIV 2,JFW,SAV);      COMMENT 6- 1; 33827000
                   SAV~CHMX; CEMLT(0,JFW);                COMMENT 10-9; 33828000
                   CEMLT(L,SFD); GO TO Z9;                              33830000
Z12:               IF CAMEBACK THEN CEMLT(1,RDA) ELSE                   33832000
           BEGIN  CEMLT(LPX,RDA); IF B!0 THEN CEMLT(B,SFD);             33835000
              END;                                                      33837000
Z13:               JCV(A1,J,K);                                         33840000
                   IF INFO[J,K]=3 THEN                                  33845000
              BEGIN  CEMLT(L,CEG); CEMLT(5,JFC);                        33850000
                   CEMLT(L,SRS); CEMLT(L,CEL);                          33855000
                   IF VL { 0 THEN GO TO Z15;                            33860000
                   A1 ~ A1+R+R+1;                                       33865000
Z14:               VL ~ VL-1;                                           33870000
                   CEMLT(3,JFC); CEMLT(1,SEC);                          33875000
                   CEMLT(FLOG,STC);                       COMMENT 6- 1; 33876000
                   IF SAV!0 THEN                          COMMENT 6- 1; 33877000
                   CEMIT((CHMX-SAV-2)DIV 2,JFW,SAV);      COMMENT 6- 1; 33878000
                   SAV~CHMX; CEMLT(0,JFW);                COMMENT 10-9; 33879000
                   JCV(A1,J,K);                           COMMENT 6- 1; 33879500
                   IF SIGHN!0 THEN                                      33880000
              BEGIN  JCV(A1+1,X,I);                                     33881000
                   IF SIGHN=3 OR INFO[J,K]=3 OR INFO[X,I].[1:1]=0 THEN  33882000
              BEGIN  CAMEBACK~TRUE; GO TO Z8;                           33883000
              END END;                                                  33884000
                   CEMLT(L,SRS); GO TO Z13;%                            33885000
              END;                                                      33890000
                   CEMLT(L,CEQ);                                        33895000
                   IF VL > 0 THEN                                       33900000
              BEGIN  A1 ~ A1+R+1; GO TO Z14;                            33905000
              END;                                                      33910000
Z15:               CEMLT(2,JFC); CEMLT(1,SEC);                          33911000
                   CEMLT(FLOG,STC);                      COMMENT 10-10; 33912000
                   IF SAV!0 THEN                          COMMENT 6- 1; 33920000
                   CEMIT((CHMX-SAV-2)DIV 2,JFW,SAV);      COMMENT 6- 1; 33925000
                   CEMLT(0,CMX);                         COMMENT 10-10; 33925001
COMMENT TEMPORARY;  SGMTLVL~SGMTLVL -1;                                 33925002
              END END;                                                  34045000
COMMENT ****************     BOOLEAN SECONDARY   **********************;34780000
PROCEDURE BSEC(P); COMMENT OBTAINS A BOOLEAN SECONDARY AND PROVIDES     34785000
                   ANY MISSING PARTS WHEN NECESSARY FOR BPRIM ;         34790000
 BOOLEAN P ;                                                            34795000
              BEGIN                                                     34800000
 INTEGER I , C ;                                                        34805000
 BOOLEAN N ;                                                            34810000
 LABEL  OPND2 , L1 , CNTEST , NTEST , FIN ;                             34815000
                   GETOUT ~ FALSE ;%GETOUT IS AN ERROR INDICATOR.       34820000
                   IF CNQ.[41:7]>112 THEN                               34821000
                             %CHECK CONSTANT POOL ARRAY FOR OVER-       34821001
              BEGIN CNR ~ 0; CNQ ~ CNQ + 115 ;                          34822000
                             % FLOW OF A ROW IN CASE A LITERAL IS       34822001
                   CNQ . [ 41 :7 ] ~ 0 ;% ASSIGNED TO IT.               34823000
              END  ;                                                    34824000
                   C ~ CREG ;  %SAVE CURRENT C REGISTER SETTING.        34825000
                   N ~ FALSE ; %SET NEGATE FLAG FALSE.                  34830000
                   IF KEY = 533 THEN COMMENT "NOT" ;                    34835000
              BEGIN                                                     34840000
                   N ~ TRUE ;                                           34845000
                   DN ;        %SCAN PAST THE "NOT" AND SET N TRUE.     34850000
              END  ;                                                    34855000
                   IF TYPE = 11 THEN COMMENT CONDITION NAME ;           34860000
              BEGIN                                                     34865000
                   CONDNME ;   %PROCESS THE CONDITION-NAME.             34870000
                   IF GETOUT THEN GO TO FIN ;                           34875000
                   GO TO NTEST ;                                        34880000
              END  ;                                                    34885000
                   IF CAT = 8 THEN COMMENT RELATIONAL OPERATOR ;        34890000
                             %IMPLIED SUBJECT.                          34890001
              BEGIN                                                     34895000
                   IF NOT FRFLG THEN COMMENT NO PREVIOUS FULL RELATION; 34900000
                             %THE FULL RELATION FLAG IS INITIALIZ-      34900001
              BEGIN            % ED INT THE STATEMENT ROUTINE AT THE    34905000
                   SYOUT(MSG[124],ISYMB,LGTH);                          34906000
                             % BEGINNING OF A SENTENCE.                 34906001
                   ERP1(09,59,22,124);                                  34910000
                   GO TO FIN ; COMMENT MISSING CONDITIONAL OPERAND ;    34915000
              END  ;                                                    34920000
                   RELOP ;     %PROCESS THE RELATIONAL OPERATOR.        34925000
                   IF GETOUT THEN GO TO FIN ;                           34930000
                   IF CRTYPE ! 1 THEN COMMENT IMPLIED AMTEST OR CLTEST ;34935000
                             %FOR AMOUNT AND CLASS TESTS THE            34935001
                   FOR I ~ 0 STEP 1 UNTIL ALFLG DO                      34940000
                             % SUBJECT IS ASSUMED TO BE THE             34940001
                   CI[I] ~ CS[I]  COMMENT SUPPLY MISSING SUBJ. ;        34945000
                             % CURRENT ITEM(THE COMPARATOR=OBJECT)      34945001
                   ELSE IF NOT BOPND THEN                               34950000
                   FOR I ~ 0 STEP 1 UNTIL ALFLG DO                      34955000
                   CI[I] ~ HPAR[20+I]; % SUPPLY MISSING OBJECT          34960000
                             %IMPLIED SUBJECT AND OBJECT.               34960001
                   GO TO L1 ;                                           34965000
              END  ;                                                    34970000
                   IF KEY = 451 THEN COMMENT "(" ;                      34975000
              BEGIN                                                     34980000
                   DN ;                                                 34985000
                   CONDITION ; IF GETOUT THEN GO TO FIN ;               34990000
                   IF KEY ! 456 THEN COMMENT ")" ;                      34995000
              BEGIN                                                     35000000
                   SYOUT(MSG[124],ISYMB,LGTH);                          35001000
                   ERP1(9,6,3,124);                                     35005000
                   GO TO FIN ; COMMENT MISSING RIGHT PARENTHESIS ;      35010000
              END;                                                      35015000
                   DN ;        %SCAN PAST THE "(".                      35020000
                   IF BOOL THEN GO TO NTEST ;%SCAN PAST THE ")".        35025000
                             %BOOL=TRUE SAYS THAT A BOOLEAN             35025001
                             % PRIMARY WAS FOUND BETWEEN THE            35025002
                             % PARENTHASES AND NO FURTHER PROCESS-      35025003
                             % ING IS REQUIRED.                         35025004
                   IF CAT = 6 THEN COMMENT ARITHMETIC OPERATOR ;        35030000
                             %IF BOOL IS FALSE SEE IF THE EXPRESS-      35030001
              BEGIN            % ION IS TO BE CONTINUED, I.E.           35035000
                   BCONT ;     % IF (A+B)/C S1.                         35040000
                   IF GETOUT THEN GO TO FIN ;                           35045000
                             %SAVE THE STARTING ADDRESS(BASE) AND       35045001
                   CI[BASE] ~ C ;% LENGTH(LLGTH) OF THE CODE JUST       35050000
                   CI[CLGTH] ~ CREG - C ;% GENERATED.                   35055000
              END  ;                                                    35060000
                   GO TO OPND2 ;                                        35065000
              END  ;                                                    35070000
                   IF NOT BOPND THEN%IF WE GET DOWN TO HERE,THE CURRENT 35080000
              BEGIN            % ITEM MUST BE A BOOLEAN OPERAND.        35085000
                   IF GETOUT THEN GO TO FIN ;                           35085500
                   SYOUT(MSG[124],ISYMB,LGTH);                          35086000
                   ERP1(40,59,22,124);                                  35090000
                   GO TO FIN ; COMMENT ILLEGAL CONDITIONAL OPERAND ;    35095000
              END ;                                                     35100000
       OPND2:                                                           35105000
                   IF CAT  = 8 OR KEY = 344 THEN COMMENT REL.OP.OR ZERO;35110000
              BEGIN                                                     35115000
                   RELOP ;     %PROCESS THE RELATIONAL OPERATOR OR      35120000
                   IF GETOUT THEN GO TO FIN ;% ZERO.                    35125000
                   IF CRTYPE ! 1 THEN COMMENT FULL AMTEST OR CLTEST ;   35130000
                   GO TO L1 ;                                           35135000
                   FRFLG ~ TRUE ; COMMENT FULL RELATION ;               35140000
                             %AT THIS POINT WE HAVE A SUBJECT           35140001
                   FOR I ~ 0 STEP 1 UNTIL ALFLG DO                      35145000
                             % FOWLOWED BY A RELATIONAL OPERATOR.       35145001
                   CS[I] ~ CI[I] ; COMMENT SAVE AS IMP. SUBJECT ;       35150000
                             %SET THE FULL RELATION FLAG(FRFLG)         35150001
                   RKEY ~ CRKEY ; COMMENT SAVE AS IMP. REL. OPERATOR ;  35155000
                             % TRUE,SAVE THE CURRENT ITEM               35155001
                   RTYPE ~ CRTYPE ;                                     35160000
                             % DESCRIPTION AS THE CURRENT SUBJECT,      35160001
                   NFLG ~ CNFLG ;% THE CURRENT RELATION KEY(CRKEY) AND  35165000
                             % TYPE(CRTYPE) AND CURRENT NOT FLAG        35165001
                             % (GNFLG) AS FUTURE IMPUTED RELAT-         35165002
                             % IONAL OPERATOR.                          35165003
                   IF NOT BOPND THEN%THE CURRENT ITEM MUST BE A BOOLEAN 35170000
              BEGIN            % OPERAND.                               35175000
                   IF GETOUT THEN GO TO FIN ;                           35176000
                   SYOUT(MSG[124],ISYMB,LGTH);                          35177000
                   ERP1(09,59,22,124);                                  35180000
                   GO TO FIN ; COMMENT MISSING CONDITIONAL OPERAND ;    35185000
              END  ;                                                    35190000
                   CREG ~ C ;  %RESTORE THE C REGISTER AND GENERATE     35195000
                   BPRIM ;     % THE CODE FOR THIS PRIMARY.             35200000
                   IF GETOUT THEN GO TO FIN ;                           35205000
                   FOR I ~ 0 STEP 1 UNTIL ALFLG DO                      35210000
                   HPAR[20+I] ~ CI[I]; % SAVE AS IMPLIED OBJECT         35215000
                             %SAVE THE CURRENT ITEM DESCRIPTION AS      35215001
                   GO TO CNTEST ;% FUTURE IMPLIED OBJECT.               35220000
              END  ;                                                    35225000
                   IF KEY = 456 AND NOT P THEN COMMENT ")" AND P FALSE; 35230000
                             %SET BOOL FALSE TO INDICATE THAT           35230001
              BEGIN            % WHICH IS WIGHIN THE PAREN IS NOT A     35235000
                   BOOL ~ FALSE ;% COMPLETE BOOLEAN PRIMARY,I,E.        35240000
                   GO TO FIN ; COMMENT INCOMPLETE BOOLEAN ;             35245000
                             %         IF(A+B) > C S1.                  35245001
                             % P DISTINGUISHES BETWEEN THE ABOVE        35245002
                             % AND THE FOLLOWING :                      35245003
                             %         IF A>B AND(C OR D) S1.           35245004
                             % IN THIS CASE D MEANS A>D AND IS A        35245005
                             % BOOLEAN PRIMARY.                         35245006
              END  ;                                                    35250000
                   COMMENT IMPLIED SUBJECT AND REL. OPERATOR ;          35255000
                   IF NOT FRFLG THEN COMMENT NO PRIOR FULL RELATION ;   35260000
                             %IF WE GET TO HERE, WE HAVE AN             35260001
              BEGIN            % IMPLIED SUBJECT AND RELATIONAL         35265000
                   SYOUT ( MSG [ 124 ] , ISYMB,LGTH ) ;                 35266000
                             % OPERATOR AND THE FULL RELATION           35266001
                   ERP1 ( 09,59,23,124 ) ;% FLAG MUST BE TRUE.          35270000
                   GO TO FIN ; COMMENT MISSING CONDITIONAL OPERATOR ;   35275000
              END  ;           %SUPPLY THE CURRENT RELATIONAL OPER-     35280000
                   CRKEY ~ RKEY ;% ATOR FROM THE PREVIOUS FULL          35285000
                   CRTYPE ~ RTYPE ;% RELATION (THE SUBJECT IS ALREADY   35290000
                   CNFLG ~ NFLG ;% THE CNFLG IMPICATES THAT THE         35295000
       L1:                     % RELATIONS IS TO BE NEGATED .           35300000
                   CREG ~ C ;  %RESTORE THE C REGISTER AND GENERATE     35305000
                   BPRIM ;     % CODE FOR THIS BOOLEAN PRIMARY.         35310000
                   IF GETOUT THEN GO TO FIN ;                           35315000
                   GO TO CNTEST ;                                       35320000
       CNTEST:                                                          35325000
                   IF CNFLG THEN COMMENT NEGATE THE RELATION ;          35330000
                             %THE CNFLG IS TRUE IF A NOT CLAUSE         35330001
                   EMIL(OPR,LNG)      ;                                 35335000
                             % WAS FOUND,I.E. A NOT GREATER B .         35335001
       NTEST:                  %N IS TRUE IF THE PRIMARY WAS PRE-       35340000
                   IF N THEN COMMENT NEGATE THE PRIMARY ;               35345000
                             % CEEDED BY "NOT",I.E. NOT A>B.            35345001
                   EMIL (OPR,LNG )        ;                             35350000
                             %WE ALLOW: NOT A NOT GREATER B.            35350001
                   BOOL ~ TRUE ;%SET FLAG SAYING THAT A BOOLEAN         35355000
       FIN :                   % PRIMARY WAS FOUND.                     35360000
              END  ;                                                    35365000
                        GETOUT ~ FALSE ;%GETOUT IS AN ERROR INDICATOR.  35370000
                        BSEC (FALSE);%GET A BOOLEAN SECONDARY.          35375000
                        IF NOT BOOL OR CAT ! 2 OR GETOUT THEN GO TO FIN;35380000
                             %IF THE SECONDARY IS INCOMPLETE,I.E.       35380001
                             % (A+B) >C ONLY THE A+B HAS BEEN           35380002
                             % PROCESSED, OR IF THE CURRENT ITEM        35380003
                             % IS NOT AN "AND" OR "OR" YOURE DONE.      35380004
        BFACT1:                                                         35385000
                        IF KEY = 502 THEN COMMENT "AND" ;               35390000
                   BEGIN                                                35395000
                        DN ;   %SCAN PAST THE "AND".                    35400000
                        BSEC (TRUE);%GET ANOTHER SECONDARY.             35405000
                        IF GETOUT THEN GO TO FIN ;                      35410000
                        EMIL(OPR,LND)      ;                            35415000
                        GO TO BFACT1 ; COMMENT LOOK FOR A BFACT LIST ;  35420000
                             %LOOK FOR MORE.                            35420001
                   END  ;                                               35425000
       BTERM :                                                          35430000
                        IF KEY ! 534 THEN COMMENT"OR";                  35435000
                        GO TO FIN ;                                     35440000
                        DN ;   %SCAN PAST THE "OR".                     35445000
                        BSEC (TRUE);                                    35450000
                        IF GETOUT THEN GO TO FIN ;                      35455000
       BFACT2:                                                          35460000
                        IF KEY = 502 THEN COMMENT "AND" ;               35465000
                   BEGIN                                                35470000
                        DN ;   %SCAN PAST THE "AND".                    35475000
                        BSEC (TRUE);%GET A SECONDARY.                   35480000
                        IF GETOUT THEN GO TO FIN ;                      35485000
                             %COMBINE ALL FACTORS BEFORE COMBINING      35485001
                        EMIL(OPR,LND)      ;                            35490000
                             % TERMS,I.E. A OR B AND C IS PROCESS-      35490001
                        GO TO BFACT2 ; COMMENT LOOK FOR A BFACT LIST ;  35495000
                             % ED AS        A OR(B AND C).              35495001
                   END  ;                                               35500000
                        EMIL(OPR,LOR)      ;%COMBINE THE TERMS.         35505000
                        GO TO BTERM ; COMMENT LOOK FOR A BTERM LIST ;   35510000
        FIN :                                                           35515000
                   END  ;                                               35520000
COMMENT **************************** VARILGTH ************************; 35550000
PROCEDURE VARILGTH(OCUR); VALUE OCUR; INTEGER OCUR;                     35555000
                             % THE DYNAMIC LENGTH OF A RECORD           35555001
              BEGIN            % (WITH A SIZE OR OCCURS DEPENDING       35560000
    INTEGER J,K,IX,TIPE; BOOLEAN OCURDEP,RW;% STATEMENT) IN CHARACTERS. 35565000
    LABEL V1,XITG;                                                      35565500
                   OCURDEP ~ FALSE;                                     35570000
                   TIPE~OTYP(OCUR); RW~(TIPE=6 OR TIPE=7);              35575000
                             %SET RW TRUE IF FILE OR 01 RECORD.         35575001
                   IF TIPE=6 THEN OCUR~OFOL(OCUR); GETOUT~ FALSE;       35575100
                             %IF FILE GET 01 RECORD OCUR.               35575101
                   JCV(OILNK(OCUR)+3,J,K);                              35575300
                   IF INFO[J,K-3].[24:5] <4 THEN       COMMENT 2-26-64; 35575400
                   X~0 ELSE                            COMMENT 2-26-64; 35575450
              BEGIN                                    COMMENT 2-26-64; 35575500
                   IF INFO[J,K].[3:15]=0 THEN                           35575600
                             %IF SIZE DEPEND.ITEM OCUR = 0.             35575601
              BEGIN  X~INFO[J,K].[33:15]; JCV(OILNK(X)+3,J,K);          35580000
                             %X ~ OCCURS DEPEND.ITEM OCUR.              35580001
                   IX~INFO[J,K].[33:15]; OCURDEP~TRUE; GO TO V1;        35585000
              END;                                                      35585500
                   X~INFO[J,K].[3:15];  JCV(OILNK(X)+3,J,K);            35590000
                             %X ~ SIZE DEPEND.ITEM OCUR OR SIZE         35590001
                             % DEPEND.VARIABLE OCUR (IF OPTION          35590002
                             % USED AT 01 LEVEL).                       35590003
              END;                                     COMMENT 2-26-64; 35590050
                   IF X = 0 THEN                                        35590200
              BEGIN                                                     35590300
         COMMENT MISSING SIZE DEPENDING DECLARATION (RECORD OR FILE) X; 35590400
                   ERP(9&15[32:40:8]&100[24:40:8]&25[16:40:8],0);       35590600
                   IF NOT RW THEN BEGIN RECOV; GETOUT~TRUE END ELSE     35590650
                   ERP1(IF TIPE=6 THEN 7 ELSE 34,124,0,0); GO TO XITG;  35590700
              END;                                                      35590800
                   IF INFO[J,K-3].[24:5]<4 THEN IX~X ELSE COMMENT 2-28; 35591000
                   IX~INFO[J,K].[3:15];                                 35595000
V1:                                                                     35615000
                   IF OCLAS(IX) ! 3 THEN                                35625000
              BEGIN                                                     35630000
         COMMENT ILLEGAL CLASS SIZE DEPENDING OPERAND (RECORD OR FILE)X;35635000
                   ERP(40&39[32:40:8]&15[24:40:8]&100[16:40:8],0);      35640000
                   IF NOT RW THEN ERP1(22,0,0,0) ELSE                   35642000
                   ERP1(22,IF TIPE=6 THEN 7 ELSE 34,124,0);             35645000
                   GO TO XITG                                           35660000
              END;                                                      35665000
                                                     COMMENT 2-6 0900;  35670000
                                                     COMMENT 2-6 0900;  35675000
                                                     COMMENT 2-6 0900;  35680000
                                                     COMMENT 2-6 0900;  35695000
                                                     COMMENT 2-6 0900;  35697000
                                                     COMMENT 2-6 0900;  35700000
                                                     COMMENT 2-6 0900;  35701000
                                                     COMMENT 2-6 0900;  35705000
                   IF OFSZ(IX) > 11 THEN                                35710000
              BEGIN                                                     35715000
         COMMENT SIZE ILLEGAL SIZE DEPENDING OPERAND (RECORD OR FILE) X;35720000
                   ERP(15&40[32:40:8]&15[24:40:8]&100[16:40:8],0);      35735000
                   IF NOT RW THEN ERP1(22,0,0,0) ELSE                   35737000
                   ERP1(22,IF TIPE=6 THEN 7 ELSE 34,124,0);             35740000
                   GO TO XITG;                                          35741000
              END;                                                      35745000
                   IF IX=X THEN%SIZE DEPEND.OPTION USED ON 01 RECORD    35746000
              BEGIN  LFC(OCUR); GO TO XITG;                             35747000
                             %LFC GENERATES CODE TO GET VALUE OF        35747001
              END;             % DEPENDING VARIABLE TO TOP OF STACK.    35748000
                   LFC(X); IX ~ OILNK(X);                               35750000
                   IF OCURDEP THEN                                      35755000
              BEGIN  J~MAPSZ(X);%GET OCCURS DEP.ITEM INTERNAL SIZE.     35760000
                   IF J { 1023 THEN EMIL(LITC,J) ELSE                   35765000
              BEGIN                                                     35770000
                   IF CNR ! 0 THEN                                      35775000
              BEGIN                                                     35780000
                   CNR ~ 0;                                             35785000
                   CNQ ~ CNQ+1                                          35790000
              END;                                                      35795000
                   CNP[CNQ.[38:3],CNQ.[41:7]] ~ J;%ENTER CONSTANT POOL. 35800000
                   EMIL(LITC,CNQ-1); EMIL(OPDC,CNPL); CNQ~CNQ+1;        35805000
              END;                                                      35810000
                   EMIL(OPR,MUL);%SIZE OF ITEM MULTIPLED BY VALUE OF    35815000
              END;             % OCCURS DEPENDING VARIABLE.             35820000
                   JCV(IX,J,K);%CALCULATE STARTING CHARACTER OF DEP.    35825000
                   T1 ~ (8 | INFO[J,K].[11:10]) + INFO[J,K].[21:3];     35830000
                             % ITEM WITHIN RECORD.                      35830001
                   IF T1 {  1023 THEN                                   35835000
                   EMIL(LITC,T1) ELSE                                   35840000
              BEGIN                                                     35845000
                   IF CNR ! 0 THEN                                      35850000
              BEGIN                                                     35855000
                   CNR~0;                                               35860000
                   CNQ~CNQ+1                                            35865000
              END;                                                      35870000
                   CNP[CNQ.[38:3],CNQ.[41:7]]~T1;%ENTER CONSTANT POOL.  35875000
                   EMIL(LITC,CNQ-1);                                    35880000
                   EMIL(OPDC,CNPL);                                     35885000
                   CNQ~CNQ+1                                            35890000
              END;                                                      35895000
                   EMIL(OPR,ADD);%ADD TO OBTAIN DYNAMIC RECORD LENGTH.  35895050
XITG:         END;                                                      35900000
COMMENT ***************************** READ ***************************; 35905000
                             %STACK FOR CALL UPON MCP R/W ROUTINE:      35905001
PROCEDURE READE;               % 0 RCW                                  35910000
              BEGIN            % 1 0 READ CODE                          35911000
    INTEGER J,K,X,X1,X2,SIXX, SDESC,STECH,SSIZE;                        35912000
                             % 2 PRT LOCATION OF IO DESCRIPTOR          35912001
         INTEGER   DCT;                                                 35912050
         LABEL     D5, D6,D7,D8,D9,D10;                                 35912060
         BOOLEAN   DCF;                                                 35912080
 BOOLEAN OPTIONAL;                                                      35912100
    INTEGER FD; LABEL D1,D2,D3,D4;                          COMMENT DF; 35912500
LABEL Z7,XITG;                 % 3 PREVIOUS RECORD WORD SIZE            35913000
                   DCF ~ FALSE; DCT ~ 0;                                35914000
                   DN;         % 4 MKS                                  35915000
                   FD~OCUR;                                 COMMENT DF; 35915200
                   SYOUT(MSG[124],ISYMB,LGTH);                          35915500
                             %SAVE SYMBOLS IN CASE OF ERROR.            35915501
                   JCV(OILNK(OCUR)+1,J,K);                              35916000
                             %SAVE INTERNAL WORD SIZE FOR LEVEL 01      35916001
                             % FIXED LENGTH RECORD.                     35916002
                   SSIZE ~ INFO[J,K].[16:10];                           35916500
                   STECH~TECH;  SIXX~IXX;                               35917000
                             %SAVE TECHNIQUE & INFO ARRAY INDEX.        35917001
              OPTIONAL ~ BOOLEAN(FIB[(A~INFO[J,K+1].[8:10]+4).[ 38:3] , 35917100
                        A.[41:7]]).[5:1];                               35917200
                   IF SORTFILE THEN                                     35920000
              BEGIN IF REEDVRB THEN %READ ON SORT-FILE         %CJC 003 35923000
              BEGIN ERP1(40,90,7,16); %ILLEGAL SORT FILE USAGE %CJC 002 35924000
                   GO TO XITG;                                 %CJC 002 35925000
              END;                                             %CJC 002 35926000
                   EMIL(OPDC,ENDQ);%INDICATES WHETHER END-OF-FILE.      35927000
                   SDESC~SORTREC;%SAVE SORT DESCRIPTOR.                 35930000
              END  ELSE                                        %CJC 003 35940000
              BEGIN  IF NOT REEDVRB THEN % RETURN ERROR        %CJC 003 35942000
              BEGIN ERP1(124,19,90,7);  % "XXXX NOT SORT FILE" %CJC 003 35945000
                   GO TO XITG;                                 %CJC 003 35947000
              END;                                             %CJC 003 35950000
                   IF TYPE ! 6 THEN%IF NOT FILE.                        35960000
              BEGIN                                                     35965000
         COMMENT X NOT FILE NAME;                                       35970000
                   ERP1(124,19,7,83);                                   35975000
                   GO TO XITG                                           35995000
              END;                                                      36000000
                   IF INFO[J,K  ].[44:4] = 14 THEN                      36000010
              BEGIN SDESC~IODESC; EMIL(OPR,MKS);                   %DATA36000020
                   DN; IF KEY=336 THEN DN; IF KEY=335 THEN         %DATA36000030
              BEGIN DN; IF NOT INTEGEROPERAND THEN GO XITG ELSE    %DATA36000040
                   IF NOT INTEGEROPERAND THEN GO XITG;             %DATA36000060
              END  ELSE                                                 36000074
              BEGIN  EMIL(LITC,0);  EMIL(LITC,0);                       36000076
              END;                                                      36000078
                   IF KEY=290 OR KEY=527 THEN% WITH LOCK.          %DATA36000080
                   BEGIN IF KEY=290 THEN DN;                       %DATA36000090
                         IF KEY!527 THEN     % "SNTX ERR READ STMT"%DATA36000100
D10:                     BEGIN ERP1(2,8,135,57); GO XITG END;      %DATA36000110
                         EMIL(OPR,SSN); DN;                        %DATA36000120
                   END;                                            %DATA36000130
                   IF KEY=555 THEN % UNTIL                         %DATA36000140
                   BEGIN DN; IF KEY=512 THEN% END                  %DATA36000150
                       BEGIN EMIL(LITC,1);EMIL(OPR,SSN);DN END ELSE%DATA36000160
                       IF NOT INTEGEROPERAND THEN GO TO XITG;      %DATA36000170
                   END ELSE                                        %DATA36000173
                       IF KEY = 545 THEN    % REMOTE PURGE         %DATA36000176
                   BEGIN    DN;                                    %DATA36000180
                            EMIL (LITC,  1);                       %DATA36000182
                            EMIL (LITC,  1);                       %DATA36000186
                            EMIL (OPR ,CTF);                       %DATA36000188
                   END ELSE EMIL(LITC,0);                          %DATA36000190
D7:                IF KEY= 703 THEN                                     36000200
              BEGIN DN; IF TYPE!7 OR USAGE!1 THEN                  %DATA36000210
                   BEGIN SYOUT(MSG[124],ISYMB,LGTH);               %DATA36000215
                        ERP1(40,34,27,124); GO XITG                %DATA36000220
                   END; EMIL(LITC,PX); EMIL(OPR,LOD); DN;          %DATA36000230
              END  ELSE  EMIL(LITC,0);                                  36000235
                   EMIL(LITC,SSIZE);                               %DATA36000240
                   EMIL(LITC,SDESC); EMIL(DESC,10);                %DATA36000250
                   EMIL(LITC,0); EMIL(OPDC,RWR);                   %DATA36000255
                   IF (DCF~KEY=523) THEN GO TO D9;                 %DATA36000270
D8:                IF KEY = 271 THEN DN; IF KEY ! 716 THEN              36000280
                   BEGIN NONSTANCLAUSE(MSG[124]);                  %DATA36000290
                        ERP1(9,124,135,57); GO XITG END;           %DATA36000300
                   DN; GO TO D4;                                   %DATA36000310
              END;                                                 %DATA36005000
                   JCV(OCUR,X1,X2); IF DICT[X1,X2].[8:1]=1  COMMENT DF; 36005400
                   THEN                                     COMMENT DF; 36005500
              BEGIN IF STECH=4 THEN                         COMMENT DF; 36005550
              BEGIN JCV(OILNK(OFOL(OCUR)),J,K); IF INFO     COMMENT DF; 36006000
                   [J,K].[25:5]<4 THEN STECH~0 ELSE         COMMENT DF; 36006500
              BEGIN STECH~IF INFO[J,K+3].[3:15]!0 OR INFO   COMMENT DF; 36007000
                   [J,K+3].[33:15]!0 THEN 3 ELSE 0;         COMMENT DF; 36007500
                   IF STECH=3 AND DICT[X1,X2].[7:1]=1 THEN  COMMENT DF; 36008000
         COMMENT ILLEGAL INPUT-OUTPUT SPECIFICATION;        COMMENT DF; 36008500
D1:           BEGIN ERP1(40,63,27,0); GO TO XITG;          COMMENT DF65;36009000
              END;                                          COMMENT DF; 36010000
              END;                                          COMMENT DF; 36011000
              END;                                          COMMENT DF; 36011500
                   A1~RNL~0;                                COMMENT DF; 36012000
                   EMIL(OPR,MKS);                           COMMENT DF; 36012200
                   IF X~DICT[X1,X2+2].[3:15]!0 THEN         COMMENT DF; 36012400
                   VALU(DICT[X1,X2+2].[3:15],SEG,0,0,2);    COMMENT DF; 36013000
                   IF X!0 AND DICT[X1,X2].[7:1]=0 THEN      COMMENT DF; 36013100
         COMMENT IF SEQUENTIAL MODE & ACTUAL KEY PRESENT;   COMMENT DF; 36013150
              BEGIN EMIL(LITC,0); EMIL(LITC,13);            COMMENT DF; 36013200
         COMMENT USER KEY ~ USER KEY + FIB[13].[21:1];      COMMENT DF; 36013220
                   JCV(OILNK(OCUR),J,K);                    COMMENT DF; 36013250
                   J~INFO[J,K].[14:10]; EMIL(OPDC,J);       COMMENT DF; 36013300
                   EMIL(DIA,21); EMIL(DIB,47);              COMMENT DF; 36013400
                   EMIL(TRB,1); EMIL(OPR,ADD);              COMMENT DF; 36013500
                   OAS(J,K,A1,X); EMIL(LITC,K);             COMMENT DF; 36013600
                   IF OUSG(X)!2 THEN EMIL(DESC,J);          COMMENT DF; 36013700
                   EMIL(OPR,STD);                           COMMENT DF; 36013750
              END;                                          COMMENT DF; 36013800
              END ELSE EMIL(OPR,MKS);                       COMMENT DF; 36014000
                   SDESC~IODESC;%SAVE INPUT/OUTPUT DESCRIPTOR.          36015000
                   IF STECH<2 THEN EMIL(LITC,SSIZE)         COMMENT DF; 36030000
                             %IF FIXED LENGTH.                          36030001
                   ELSE                                                 36035000
              BEGIN                                                     36040000
                   IF OPTIONAL THEN BEGIN                               36047000
                    COMMENT START BUILDING A THUNK, SO THAT THE SIZE    36048000
                        WILL BE COMPUTED ONLY IF THE FILE IS PRESENT;   36049000
                   CREG ~ (K ~ CREG) + 2; EMIL(OPR,BFW);                36050000
                   WHILE (J ~ CREG) MOD 8 ! 0 DO EMIL(OPR,NOP);         36051000
                                    END  FRONTEND OF THUNK;             36052000
                   VARILGTH(OCUR);%GENERATE CODE TO OBTAIN DYNAMIC REC- 36075000
                             % ORD LENGTH IN CHARACTERS.                36075001
                   IF GETOUT THEN BEGIN GETOUT ~FALSE;GO TO XITG END;   36080000
                             %IF SIZE DEP.OPER. IN ERROR,GET OUT.       36080001
                   EMIL(LITC,7); EMIL(OPR,ADD);                         36081000
                             %CALCULATE WORD LENGTH OF 01 RECORD.       36081001
                   EMIL(LITC,8); EMIL(OPR,IDV);                         36082000
                   IF OPTIONAL THEN BEGIN                               36083000
                    COMMENT FINISH OFF THE THUNK CONSTRUCTION IF OPT.   36083100
                        IF NOT OPT, THE SIZE IS COMPUTED DIRECTLY;      36083200
                   EMIL(OPR,167); COMMENT RETURN SPECIAL;               36083300
                   EMIT(LITC,(CREG-K-4) DIV 2,K);                       36083400
                   T10~SEG[0,0]; MAKELABEL(2,PRTCTR,J DIV 8-1,0);%TR-33936083500
                   EMIL(LITC,PRTCTR); IF PRTCTR>511 THEN EMIL(OPR,XRT); 36083600
                   EMIL(OPR,LOD); EMIL(DESC,512); EMIL(OPR,CTF); UPIT;  36083700
                                    END OF THUNK BUILDING;              36083800
              END;                                                      36090000
                   EMIL(LITC,IODESC)     ;                              36095000
                   EMIL(DESC,    10 )     ;                             36100000
                             %LOCATION OF INPUT/OUTPUT DESCRIPTOR.      36100001
                   EMIL(LITC,0)     ;%READ CODE.                        36105000
                   EMIL(OPDC,RWR)     ;%CALL READ/WRITE ROUTINE.        36110000
              END;                                                      36112000
                   DN;                                                  36115000
                   IF KEY=336 THEN DN;%"RECORD" IS TRASH WORD.          36130000
                   IF KEY=523 THEN%START INTO OPTION******************* 36140000
D9:           BEGIN                                                     36145000
                   DN;                                                  36150000
                   SYOUT(MSG[124],ISYMB,LGTH);                          36150500
                             %SAVE SYMBOLS IN CASE OF ERROR.            36150501
                   IF CNSTFLG OR TYPE!7 THEN                            36155000
                             %IF NOT LEVEL 01 FD OR WS RECORD.          36155001
              BEGIN                                                     36160000
         COMMENT ILLEGAL INTO RECORD X;                                 36165000
                   ERP1(40,133,34,124);                                 36170000
                   GO TO XITG;                                          36175000
              END;                                                      36180000
                   SIZE~(MAPSZ(OCUR)+7)DIV 8;                           36185000
                             %SAVE INTERNAL WORD SIZE FOR LEVEL 01      36185001
                             % FIXED LENGTH RECORD.                     36185002
                   IF SSIZE>SIZE THEN SSIZE~SIZE; J~0;                  36187000
           EMIL(OPR,DUP); EMIL(OPR,LNG); EMIL(LITC,8); EMIL(OPR,BFC);   36188000
                   EMIL (OPR,MKS);%BUILD CALL ON WORD MOVE.             36190000
                   EMIL(LITC,0);                          COMMENT 9-01; 36195000
                   EMIL(DESC,SDESC)     ;%SOURCE DESCRIPTOR.            36200000
                   EMIL(LITC,0);                          COMMENT 9-01; 36205000
                   EMIL(DESC,IODESC)     ;%DESTINATION DESCRIPTOR.      36210000
                   EMIL(LITC,SSIZE DIV 63);%                            36290000
                   EMIL(LITC,T8~SSIZE MOD 63);            COMMENT 9-01; 36295000
                   EMIL(OPDC,OWORDTRAN);                                36505000
                   DN;         %CALL ON MOVE ROUTINE.                   36515000
              END;             %END OF INTO OPTION*****************.    36520000
                   IF DCF THEN BEGIN DCF~FALSE; GO D8 END;              36520500
                   IF KEY=503 THEN                                      36535000
              BEGIN                                                     36540000
                   DN;                                                  36545000
                   IF KEY!512 THEN                                      36555000
D2:                                                         COMMENT DF; 36557000
              BEGIN                                                     36560000
         COMMENT READ STATEMENT SYNTAX ERROR;                           36565000
                   ERP1(135,57,77,0); GO TO XITG;%MISSING "END".        36570000
              END;                                                      36575000
D3:                JCV(FD,J,K);                             COMMENT DF; 36577000
                   IF DICT[J,K].[7:2]=3 THEN GO TO D2;      COMMENT DF; 36580000
Z7:                                                       COMMENT 6-26; 36585000
                   DN;                                                  36590000
D4:                X1~CREG;                                 COMMENT DF; 36595000
                   IFSTMNT;                               COMMENT 6-26; 36600000
                   JCV(SIXX+3,J,K);                                     36775000
                   IF INFO[J,K].[1:2] ! 0 THEN                          36780000
                             %TEST AT-END FLAG FOR THIS FILE.           36780001
              BEGIN                                                     36785000
                   INFO[J,K].[1:2] ~2;%AT-END NEEDED FOR EVERY READ.    36790000
                   GO TO XITG                                           36795000
              END;                                                      36800000
                   INFO[J,K].[1:2] ~1;                                  36805000
                             %THIS IS FIRT AT-END FOR THIS FILE.        36805001
                   INFO[J,K].[16:10] ~ CREG-X1;                         36810000
                             %SAVE LENGTH OF AT-END CODE.               36810001
                   INFO[J,K].[3:13] ~ KODE1.[35:13];                    36815000
                             %SAVE ARRAY KODE ADDRESS.                  36815001
                   COPICODE(SEG,X1,KODE,KODE1,INFO[J,K].[16:10]);       36820000
                             %SAVE AT-END CODE IN ARRAY KODE.           36820001
                   GO TO XITG                                           36825000
              END;                                                      36830000
                   IF KEY=512 THEN GO TO D3;                COMMENT DF; 36836000
                   IF KEY=231 THEN COMMENT "INVALID";       COMMENT DF; 36837000
              BEGIN DN; IF KEY=706 THEN DN; COMMENT "KEY";  COMMENT DF; 36838000
                   JCV(FD,J,K); IF DICT[J,K].[7:2]!3        COMMENT DF; 36839000
                   THEN GO TO D1; GO TO D4;                 COMMENT DF; 36840000
              END;                                          COMMENT DF; 36841000
                   JCV(SIXX+3,J,K);                                     36845000
                   IF INFO[J,K].[1:2] ! 1 THEN                          36850000
              BEGIN                                                     36855000
         COMMENT MISSING AT END READ STATEMENT;                         36860000
                   ERP1(9,132,135,57); GO TO XITG;                      36865000
              END;                                                      36875000
                   X1 ~ INFO[J,K].[3:13];                               36880000
                   COPICODE(KODE,X1,SEG,CREG,INFO[J,K].[16:10]);        36885000
                             %APPEND AT-END CODE TO READ STATEMENT      36885001
XITG:              REEDVRB ~ FALSE;                            %CJC 003 36890000
              END;                                                      36895000
COMMENT ****************     WRITE               **********************;36900000
PROCEDURE WRIT;                % 0 RCW                                  36905000
              BEGIN           % 1 1 WRITE CODE                 %CJC 030 36906000
                              % 2 PRT LOC OF I/O DESCRIPTOR    %CJC 030 36907000
                              % 3 PREVIOUS RECORD SIZE         %CJC 030 36908000
                              % 4 CHANNEL # (OR ZERO)          %CJC 030 36909000
                              % 5 NUMBER OF LINES              %CJC 030 36910000
                              % 6 1=BEFORE  0=AFTER            %CJC 030 36911000
                              % 7 MKS                          %CJC 030 36912000
INTEGER DDESC,DTECH,DSIZE,DIXX,DOCUR,J,K,X,A,B,WSIZE,X1;       %CJC 030 36913000
BOOLEAN BLKWRT,FROMDC;                                         %CJC 030 36914000
LABEL   Z75,Z78,Z79,Z76,Z8,Z9,Z88,Z89,Z95,FIN;                 %CJC 030 36915000
                   DN;                                                  37290000
                   IF KEY!637 THEN BLKWRT ~FALSE ELSE  COMMENT  5-8-64; 37291000
              BEGIN  BLKWRT ~ TRUE ; DN; COMMENT NORMAL WRITE   5-8-64; 37291100
              END; COMMENT NEW VERB-GROUP "WRITE BLOCK"         5-8-64; 37291200
                   SYOUT(MSG[124],ISYMB,LGTH);                 %CJC 030 37295000
                             %SAVE SYMBOLS IN CASE OF ERROR.            37295001
                    IF OTYP(OCUR)!7 OR OTYP(OHLNK(OCUR))!6    %TR-166-2 37300000
                             %IF NOT 01 RECORD OR HIER. NOT FILE.       37300001
                       OR OELEF(OHLNK(OCUR)) THEN             %TR-166-2 37300100
         COMMENT ILLEGAL WRITE NAME X;                                  37305000
              BEGIN  ERP1(40,136,83,124); GO TO FIN;                    37310000
              END;                                                      37340000
                   DDESC ~ IODESC;%SAVE INPUT/OUTPUT DESCRIPTOR.        37385000
                   DTECH~TECH; %SAVE TECHNIQUE.                         37390000
                   JCV(OILNK(OHLNK(OCUR))+1,J,K);    COMMENT 2-4 1330;  37392000
                   WSIZE~INFO[J,K].[16:10];          COMMENT 2-4 1330;  37393000
                   DSIZE~(MAPSZ(OCUR)+7)DIV 8;                          37395000
                             %SAVE INTERNAL WORD SIZE-FIXED LENGTH      37395001
                   DOCUR~OCUR; %SAVE DICTIONARY INDEX.                  37400000
                   DIXX~IXX;   %SAVE INFO ARRAY INDEX.                  37405000
                   IF ( X1 ~HDWR) = 14 THEN      % IF DATA COMM         37405300
              BEGIN DN; IF KEY=264 THEN %TO                        %DATA37405600
              BEGIN                                                     37405620
                   EMIL(OPR, MKS);                                      37405625
                   DN;                                             %DATA37405650
                   IF NOT INTEGEROPERAND THEN GO FIN ELSE          %DATA37406000
                   IF NOT INTEGEROPERAND THEN GO FIN;              %DATA37406500
              END ELSE                                             %DATA37407000
                   GO TO Z75;                                      %DATA37407500
                       IF KEY=290 OR KEY=527 THEN                  %DATA37407515
              BEGIN IF KEY=290 THEN DN;                            %DATA37407520
                   IF KEY!527 THEN                                 %DATA37407525
                   BEGIN ERP1(2,8,136,57); GO FIN END;             %DATA37407530
                   EMIL(OPR,SSN); DN;                              %DATA37407535
              END; IF KEY!555 THEN EMIL(LITC,0) ELSE               %DATA37407540
              BEGIN DN; IF KEY=512 THEN                            %DATA37407545
                   BEGIN EMIL(LITC,1); EMIL(OPR,SSN); DN END ELSE  %DATA37407550
                   IF NOT INTEGEROPERAND THEN GO FIN;              %41TA37407560
              END;                                                 %DATA37407575
Z78:               IF KEY = 703 THEN                                    37407580
              BEGIN DN; IF TYPE!7 OR USAGE!1 THEN                  %41TA37407585
              BEGIN ERP1(40,22,136,57); GO TO FIN;                      37407590
              END;  IF RX!0 THEN                                        37407595
              BEGIN ERP1(15,8,136,57); GO TO FIN;                       37407600
              END; EMIL(LITC,PX); EMIL(OPR,LOD);                   %DATA37407605
                   DN;                                             %DATA37407606
              END ELSE EMIL(LITC,0);                               %DATA37407610
                   IF (FROMDC~KEY=335) THEN GO TO Z79;             %41TA37407620
Z76:               EMIL(LITC,WSIZE); EMIL(LITC,DDESC); EMIL(DESC,10);   37407632
                   EMIL(LITC,1); EMIL(OPDC,RWR);                   %DATA37407634
              IF KEY=271 THEN DN;                                  %DATA37407635
              IF KEY!716 THEN                                      %DATA37407638
                   BEGIN NONSTANCLAUSE(MSG[124]);                  %DATA37407640
                        ERP1(9,124,136,57); GO FIN END;            %DATA37407645
                   DN; X1~CREG; IFSTMNT;                           %DATA37407650
                   JCV(DIXX+3,J,K);                                     37407655
                   IF INFO[J,K].[1:2] ! 0 THEN                          37407660
              BEGIN                                                     37407665
                   INFO[J,K].[1:2] ~ 2; GO TO FIN;                      37407670
              END;                                                      37407675
                   INFO[J,K].[1:2] ~ 1;                                 37407680
                   INFO[J,K].[16:10]~ CREG-X1;                          37407700
                   INFO[J,K].[3:13] ~ KODE1.[35:13];                    37408000
                   COPICODE(SEG,X1,KODE,KODE1,INFO[J,K].[16:10]);       37408500
                   GO TO FIN;                                           37409300
              END;                                                      37409650
                   DN;                                                  37410000
Z75:               IF KEY=335 THEN                                 %DATA37420000
Z79:          BEGIN            %START FROM OPTION*******************    37425000
                   DN; %SCAN PAST FROM                                  37430000
                   IF TYPE ! 7 OR NOT FOUND THEN                        37431000
         COMMENT ILLEGAL FROM RECORD X;                                 37432000
              BEGIN  SYOUT(MSG[124],ISYMB,LGTH); ERP1(40,134,34,124);   37433000
                   GO TO FIN;                                           37435000
              END;                                                      37437000
                   SIZE ~ ((MAPSZ(OCUR)+7)DIV 8);                       37437500
                   IF DSIZE>SIZE THEN DSIZE~SIZE; J~0;                  37438000
                   EMIL(OPR,MKS);%BUILD CALL ON WORD MOVE.              37440000
                   EMIL(LITC,0);                          COMMENT 9-01; 37445000
                   EMIL(DESC,IODESC)     ;%SOURCE DESCRIPTOR.           37450000
                   EMIL(LITC,0);                          COMMENT 9-01; 37455000
                   EMIL(DESC,DDESC)     ;%DESTINATION DESCRIPTOR.       37460000
                   EMIL(LITC,DSIZE DIV 63);%                            37465000
                   EMIL(LITC,J~DSIZE MOD 63);             COMMENT 9-01; 37470000
                   EMIL(OPDC,OWORDTRAN);                                37475000
                   DN;                                                  37700000
              END;             %END FROM OPTION********************.    37705000
                   IF FROMDC THEN GO TO Z76;                            37705500
                   EMIL(OPR,MKS)     ;                                  37710000
                   JCV(OHLNK(DOCUR),J,K);                   COMMENT DF; 37710500
                   IF DICT[J,K].[8:1]=1 THEN                COMMENT DF; 37711000
              BEGIN IF DTECH=4 THEN                         COMMENT DF; 37711100
              BEGIN JCV(DIXX,A,B); IF INFO[A,B].[24:5]<4    COMMENT DF; 37711200
                   THEN DTECH~0 ELSE                        COMMENT DF; 37711400
              BEGIN IF (DTECH~IF INFO[A,B+3].[3:15]!0 OR    COMMENT DF; 37711600
                   INFO[A,B+3].[33:15]!0 THEN 3 ELSE 0)=3   COMMENT DF; 37712000
                   AND DICT[J,K].[7:1]=1 THEN               COMMENT DF; 37712200
         COMMENT ILLEGAL INPUT-OUTPUT SPECIFICATION;        COMMENT DF; 37712400
              BEGIN ERP1(40,63,27,0); GO TO FIN;            COMMENT DF; 37712600
              END;                                          COMMENT DF; 37713000
              END;                                          COMMENT DF; 37713200
              END;                                          COMMENT DF; 37713300
                   A1~RNL~0;                                COMMENT DF; 37713400
                   IF B~DICT[J,K+2].[3:15]!0 AND           COMMENT DF;  37713500
                   DICT[J,K].[7:1]=1 THEN                  COMMENT DF;  37713550
                   VALU(B,SEG,0,0,2);                      COMMENT DF;  37713600
                   GO TO Z9;                                COMMENT DF; 37714000
              END;                                          COMMENT DF; 37714400
                   IF X1 = 3 THEN      % ASSIGNED TO PUNCH     %TR 830 C37754000
              BEGIN IF KEY = 264 THEN DN;   % "TO"             %TR 830 C37755000
                   EMIL(LITC,1);       EMIL(LITC,0);           %TR 830 C37756000
                   IF KEY = 269 THEN        % "ALTERNATE"      %TR 830 C37757000
              BEGIN EMIL(LITC,1);      DN;                     %TR 830 C37759000
              END  ELSE                EMIL(LITC,0);           %TR 830 C37760000
                   GO TO Z9;                                   %TR 830 C37761000
              END; IF X1 = 4 OR X1 > 13 THEN ELSE              %TR 830 C37762000
              BEGIN EMIL(LITC,1);      EMIL(LITC,1);           %TR 830 C37763000
                   EMIL(LITC,0);       GO TO Z9;               %TR 830 C37764000
              END; IF KEY = 506 THEN        % "AFTER"          %TR 830 C37765000
                   EMIL(LITC,0)        ELSE % 0=AFTER          %TR 830 C37766000
              BEGIN EMIL(LITC,1);           % 1=BEFORE         %TR 830 C37767000
                   IF KEY ! 503 THEN        % IF NOT "BEFORE"  %TR 830 C37768000
              BEGIN EMIL(LITC,1);      EMIL(LITC,0);           %TR 830 C37769000
                   GO TO Z9;                                   %TR 830 C37770000
              END; END;                                        %TR 830 C37771000
                   DN;                                                  37780000
         COMMENT ADVANCING;                                             37785000
                   IF KEY=505 THEN DN ELSE                              37790000
                   IF X1 = 15 AND KEY =921 THEN %STOP TELETYPE          37790100
                        BEGIN EMIL (LITC,0); %NO LINES                  37790200
                              EMIL (LITC,1); %NO RETURN                 37790300
                              GO TO Z88;                                37790400
                        END;                                            37790500
         COMMENT TO; IF KEY = 264 THEN DN;                              37795000
         COMMENT CHANNEL; IF KEY = 640 THEN                             37800000
              BEGIN                                                     37805000
                   EMIL(LITC,0)     ;                                   37810000
                   DN;                                                  37815000
                   IF SCLAS!6 OR LGTH>11 THEN                           37820000
              BEGIN                                                     37825000
         COMMENT ILLEGAL OPERAND WRITE STATEMENT;                       37830000
Z89:                                                                    37835000
                   ERP1(40,22,136,57); GO TO FIN;                       37840000
              END;                                                      37850000
                   X~ICV1(ISYMB[0],4,0,LGTH);%CONVERT INTEGER TO CMP.   37855000
                   EMIL(LITC,X)     ;                                   37860000
                   GO TO Z88                                            37865000
              END;                                                      37870000
                   IF TYPE=13 THEN%MNEWMONIC-NAME OPTION.               37875000
              BEGIN                                                     37880000
                   EMIL(LITC,0)     ;                                   37885000
                   EMIL(LITC,HDWR-10)     ;                             37890000
                   GO TO Z88                                            37895000
              END;                                                      37900000
                   IF X1 = 15 AND KEY =268 THEN %ADVANCE NO LINES       37900100
                        BEGIN EMIL (LITC,0); %NO LINE ADVANCE           37900200
                              DN;                                       37900300
                              GO TO Z8;                                 37900400
                        END;                                            37900500
                   IF TYPE=5 THEN%LITERAL.                              37905000
              BEGIN                                                     37910000
                   IF SCLAS!6 OR LGTH>11 THEN GO TO Z89;                37915000
                   X~ICV1(ISYMB[0],4,0,LGTH);%CONVERT INTEGER TO CMP.   37920000
                   EMIL(LITC,X)     ;                                   37925000
                   DN;                                                  37930000
Z8:                                                                     37935000
                   EMIL(LITC,0)     ;                                   37940000
                   IF KEY=374 THEN GO TO Z88;                           37950000
                   GO TO Z9;                                            37951000
              END;                                                      37975000
                   IF TYPE!8 THEN%IF NOT ELEMENTARY ITEM.               37977000
         COMMENT SYNTAX ERROR WRITE STATEMENT;                          37980000
              BEGIN  ERP1(77,136,57,0); GO TO FIN;                      37982000
              END;                                                      37983000
                   IF SCALE!0 OR SIZE>11 THEN GO TO Z89; COMMENT 2-4;   37985000
                   VALU(OCUR,SEG,T1,SUBS,1);%GET ITEM TO TOP OF STACK.  37990000
                   GO TO Z8;                                            37995000
Z88:                                                                    38000000
                   DN;                                                  38005000
Z9:                                                                     38010000
                   IF DTECH > 1 THEN%IF VARIABLE LENGTH.                38015000
              BEGIN                                                     38020000
                   VARILGTH(DOCUR);                                     38025000
                   IF GETOUT THEN BEGIN GETOUT~FALSE; GO TO FIN END;    38030000
                   EMIL(LITC,7); EMIL(OPR,ADD);                         38031000
                   EMIL(LITC,8); EMIL(OPR,IDV);                         38032000
              END                                                       38035000
                   ELSE EMIL(LITC,WSIZE);            COMMENT 2-4 1330;  38040000
                   EMIL(LITC,DDESC)     ;                               38045000
                   EMIL(DESC,10)     ;                                  38050000
                   EMIL(LITC,IF BLKWRT THEN 6 ELSE 1);%WRITE CODE.      38055000
                   EMIL(OPDC,RWR)     ;                                 38060000
                   JCV(OHLNK(DOCUR),J,K);                   COMMENT DF; 38065500
                   IF DICT[J,K].[8:1]=1 THEN                COMMENT DF; 38066000
              BEGIN IF KEY!231 THEN COMMENT "INVALID";      COMMENT DF; 38066500
         COMMENT MISSING INPUT-OUTPUT SPECIFICATION;        COMMENT DF; 38067000
                   ERP1(9,63,27,0) ELSE                     COMMENT DF; 38067500
              BEGIN DN; IF KEY=706 THEN DN; COMMENT "KEY";  COMMENT DF; 38068000
                   IFSTMNT;                                 COMMENT DF; 38068500
              END;                                          COMMENT DF; 38069000
              END;                                          COMMENT DF; 38069500
                   IF DICT[J,K].[7:2]=1 THEN                COMMENT DF; 38069600
              BEGIN IF X~DICT[J,K+2].[3:15]!0 THEN          COMMENT DF; 38069700
              BEGIN A1~RNL~0; VALU(X,SEG,0,0,2);            COMMENT DF; 38069750
                   EMIL(LITC,1); EMIL(OPR,ADD); OAS(J,K,A,X);COMMENT DF;38069800
                   EMIL(LITC,K);                            COMMENT DF; 38069850
                   IF OUSG(X)!2 THEN EMIL(DESC,J);          COMMENT DF; 38069870
                   EMIL(OPR,STD);                           COMMENT DF; 38069880
              END;                                          COMMENT DF; 38069900
              END;                                          COMMENT DF; 38069950
                   IF X1 = 15 THEN               % REMOTE CHECK         38070000
              BEGIN     IF KEY= 271 THEN DN;     %   ON                 38070100
                        IF KEY= 515 THEN         %   ERROR              38070150
                   BEGIN    DN;                  %     DO ROUTINE       38070200
                            IFSTMNT;                                    38070300
                   END  ELSE                     %  OTHERWISE           38070400
                   BEGIN    EMIL (LITC,  2);     %   INVALID            38070500
                            EMIL (OPR ,BFC);     %   END                38070600
                            EMIL (LITC,  0);     %   OF                 38070650
                            EMIL (OPR ,COM);     %   JOB                38070700
              END; END;                                                 38070900
FIN:          END;      % END WRITE ROUTINE                             38070990
COMMENT **************************  ESTORE   *************************; 38071000
COMMENT NEW ESTORE INSERTED WITH NEW MOVE DOWN TO 38235000 ****** 9-01; 38075000
PROCEDURE ESTORE (AOCUR,BOCUR,BSUBQ,BSUBR);                             38076000
    VALUE AOCUR,BOCUR,BSUBQ,BSUBR;                                      38077000
    INTEGER AOCUR,BOCUR,BSUBQ,BSUBR;                                    38078000
              BEGIN                                                     38079000
    INTEGER ASIZ,ALP,ARP,BSIZ,BLP,BRP,PX,QX,RX,N,Y,Z,QXS,RXS,BSN,J,K,X, 38080000
    BSUBR1,                                               COMMENT N-20; 38080500
    BUSG,CLB,BSUBQ1,QX1,RX1;                              COMMENT 10-7; 38081000
    LABEL E3,E4,E5,E6;    BOOLEAN APREC;                                38082000
    LABEL E5A;                                            COMMENT D-1;  38082300
    BOOLEAN ATOB;              %A1 = 99999 IF ESTORE CALLED ON BY       38082500
                   ATOB~A1!99999;%MOVE AND SENDING FIELD OUT OF         38082700
                   BSN ~ OSGN(BOCUR); OAS(PX,QX,RX,BOCUR);              38083000
                             %RANGE (LIT CALL 0 HAS BEEN DONE)          38083001
                   IF BSUBQ ! 0 THEN                                    38084000
              BEGIN QX ~ BSUBQ; RX ~ BSUBR;                             38085000
              END;                                                      38086000
                   JCV(OILNK(BOCUR)+1,J,K);                             38087000
                   BLP ~ INFO[J,K].[13:6]; BRP ~ OSCALE(BOCUR);         38088000
                   IF BRP < 0 THEN                                      38088500
              BEGIN  BSIZ ~ BLP;  BLP ~ BLP -BRP;                       38089000
              END ELSE BSIZ ~ BLP + BRP;                                38091000
                   IF ACC THEN %ESTORE CALLED ON BY ARITHMETICS         38092500
              BEGIN APREC~BSIZ>11; AOCUR~0;               COMMENT N-27; 38093000
                             %OR MOVE HAS DONE A LITC 0                 38093001
                   IF OCLAS(BOCUR)!4 AND BRP>OFSZ(BOCUR)  COMMENT D-1;  38093100
                   THEN BSIZ~OFSZ(BOCUR); GO TO E4;       COMMENT D-1;  38093200
              END; X ~ 0; ASIZ ~ OFSZ(AOCUR);                           38093500
                   JCV(OILNK(AOCUR)+1,J,K); ALP ~ INFO[J,K].[13:6];     38094000
                   ARP~OSCALE(AOCUR);                                   38095000
                   IF ARP < 0 THEN ALP ~ ALP - ARP;                     38095200
                   RPREC~APREC~ASIZ>11;                   COMMENT D-2;  38095220
                   IF OCLAS(BOCUR)=4 THEN                 COMMENT N-27; 38095250
              BEGIN BSIZ~ASIZ; BLP~ALP; BRP~ARP;          COMMENT N-27; 38095300
                   GO TO E5A;                             COMMENT D-1;  38095350
              END;                                        COMMENT N-27; 38095400
                   IF BRP>OFSZ(BOCUR) THEN BSIZ~OFSZ(BOCUR);COMMENT D-1;38095500
                   IF OUSG(AOCUR)=0 AND OSGN(AOCUR)!2 AND               38095503
                   ALP>BLP THEN                                         38095506
              BEGIN ASIZ~ASIZ-ALP+BLP; ALP~BLP;                         38095510
              END;                                                      38095520
                   IF OUSG(AOCUR)=0 AND OSGN(AOCUR)!1                   38095550
                   AND ARP-BRP>0 THEN                                   38095630
              BEGIN T7~IF BRP>0 THEN BRP ELSE 0;                        38095640
                   ASIZ~ASIZ-ARP+T7; ARP~T7;                            38095645
              END;                                                      38095650
                   RPREC~APREC~ASIZ>11;                                 38095660
                   N~BLP+(IF ARP>0 THEN ARP ELSE 0);                    38141000
                   IF (OUSG(AOCUR) = 0 AND OSGN(AOCUR) ! 2) OR          38142000
                   (A1 ~ ALP - BLP) { 0 THEN GO TO E3;                  38143000
                   IF NOT APREC THEN                                    38144000
              BEGIN            %SINGLE PRECISION LEFT TRUNCATION        38145000
                   IF N    > 3 THEN                                     38146000
              BEGIN IF N>16 THEN                                        38146200
              BEGIN EMIL(LITC,16); EMIL(OPDC,TENX);                     38146400
                   EMIL(OPR,RDV);                                       38146600
                   IF N-16>3 THEN                                       38146650
              BEGIN EMIL(LITC,N-16); EMIL(OPDC,TENX);                   38146700
              END ELSE EMIL(LITC,POWR[N-16]);                           38146750
              END ELSE                                                  38146800
              BEGIN  EMIL(LITC,N   ); EMIL(OPDC,TENX);                  38147000
              END;                                                      38147500
              END ELSE EMIL(LITC,POWR[N   ]);                           38148000
                   EMIL(OPR,RDV);                                       38149000
                   EMIL(LITC,1);  EMIL(OPR,IDV);               %TR 638  38150000
                   GO TO E3;                                            38153000
              END;                                                      38154000
                   EMIL(LITC,HQY); EMIL(OPR,STD);                       38155000
                             %DOUBLE PRECISION LEFT TRUNCATION          38155001
                   EMIL(LITC,STDLOC); EMIL(OPR,SND);                    38156000
                   EMIL(OPDC,HQY); EMIL(OPDC,STDLOC);                   38157000
                   EMIL(OPDC,HQY); EMIL(LITC,0);                        38158000
                   IF A1 > 11 THEN                                      38159000
              BEGIN EMIL(LITC,11); EMIL(OPDC,TENX);                     38160000
                   EMIL(OPR,DLD); EMIL(OPR,XCH);          COMMENT 9-03; 38161000
                   EMIL(OPR,DEL);                         COMMENT 9-03; 38161200
                   EMIL(LITC,1); EMIL(OPR,IDV);                         38161500
                   EMIL(LITC,0); EMIL(OPR,XCH);                         38162000
                   EMIL(LITC,0); EMIL(LITC,11); EMIL(OPDC,TENX);        38166000
              END ELSE                                                  38167000
              BEGIN IF N>3 THEN                                         38168000
              BEGIN IF N   >16 THEN                                     38168100
              BEGIN EMIL(LITC,16); EMIL(OPDC,TENX);                     38168200
                   EMIL(OPR,DLD); EMIL(LITC,0);                         38168300
                   IF N-16>3 THEN                                       38168350
              BEGIN EMIL(LITC,N-16); EMIL(OPDC,TENX);                   38168400
              END ELSE EMIL(LITC,POWR[N-16]);                           38168450
              END ELSE                                                  38168500
              BEGIN  EMIL(LITC,N   ); EMIL(OPDC,TENX);                  38169000
              END;                                                      38169500
              END ELSE EMIL(LITC,POWR[N   ]);                           38170000
                   EMIL(OPR,DLD); EMIL(OPR,XCH);                        38171000
                   EMIL(OPR,DEL); EMIL(LITC,1);           COMMENT 9-03; 38171500
                   EMIL(OPR,IDV); EMIL(LITC,0); EMIL(OPR,XCH);          38172000
                   IF APREC THEN EMIL(LITC,0);                          38172500
                   IF N    > 3 THEN                                     38173000
              BEGIN IF N   >16 THEN                                     38173100
              BEGIN EMIL(LITC,16); EMIL(OPDC,TENX);                     38173200
                   EMIL(OPR,DLM); EMIL(LITC,0);                         38173300
                   IF N-16>3 THEN                                       38173350
              BEGIN EMIL(LITC,N-16); EMIL(OPDC,TENX);                   38173400
              END ELSE EMIL(LITC,POWR[N-16]);                           38173450
              END ELSE                                                  38173500
              BEGIN EMIL(LITC,N   ); EMIL(OPDC,TENX);                   38174000
              END;                                                      38174500
              END ELSE EMIL(LITC,POWR[N   ]);                           38175000
              END;                                                      38175500
                   EMIL(OPR,DLM); EMIL(OPR,DLS);                        38176000
                   IF N    { 11 THEN                                    38177000
              BEGIN EMIL(OPR,XCH); EMIL(OPR,DEL);                       38177500
                             %MAKE DOUBLE PRECISION SENDING             38177501
                   APREC~FALSE;%FIELD SINGLE PRECISION IN STACK         38178000
                   RPREC~FALSE;                           COMMENT N-25; 38178050
              END;                                                      38178100
                   IF A1>11 THEN                                        38178200
              BEGIN IF  N>16 THEN                                       38178300
              BEGIN EMIL(LITC,16); EMIL(OPDC,TENX);                     38178400
                   EMIL(OPR,RDV);                                       38178420
                   IF  N-16>3 THEN                                      38178425
              BEGIN EMIL(LITC, N-16); EMIL(OPDC,TENX);                  38178430
              END ELSE EMIL(LITC,POWR[ N-16]);                          38178435
              END ELSE IF  N>3 THEN                                     38178440
              BEGIN EMIL(LITC, N); EMIL(OPDC,TENX);                     38178500
              END ELSE EMIL(LITC,POWR[ N]);                             38178600
                   EMIL(OPR,RDV);                                       38178650
              END;                                                      38178700
E3:                IF ARP = BRP THEN GO TO E4;                          38178720
                   IF ARP > BRP THEN SRT(ARP-BRP) ELSE                  38178730
                             %SHIFT LEFT AND SHIFT RIGHT                38178731
              BEGIN                                                     38178750
                   RLFP~BLP; RSCALE~ARP;                                38178760
              IF N-(IF ARP>0 THEN ARP ELSE 0)+BRP>11 AND NOT APREC THEN 38178770
              BEGIN EMIL(LITC,0); EMIL(OPR,XCH);                        38178780
                   RPREC~APREC~TRUE;                                    38178790
              END;                                                      38178800
                   SLT(BRP-ARP);                                        38178810
              END;                                                      38179000
E4:                IF BSN=0 THEN EMIL(OPR,SSP) ELSE                     38179500
                             %IF RECEIVING FIELD UNSIGNED               38179501
                   IF BSN=3 THEN%SIGN IS DATA NAME                      38180000
              BEGIN IF ATOB THEN                                        38180500
              BEGIN EMIL(OPR,DUP); EMIL(LITC,0);                        38181000
                   EMIL(OPR,LES); EMIL(LITC,4);                         38182000
                   EMIL(OPR,BFC); EMIL(OPR,SSP);                        38183000
                   EMIL(LITC,44); EMIL(LITC,1);                         38184000
                   EMIL(OPR,BFW);                                       38184500
              END;                                                      38185000
                   EMIL(LITC,16);                                       38185500
                   JCV(OILNK(BOCUR)+3,J,K);                             38186000
                   OAS(J,QXS,RXS,INFO[J,K].[18:15]);                    38187000
                   EMIL(OPR,MKS); EMIL(LITC,QXS);                       38188000
                   EMIL(DESC,J); EMIL(LITC,RXS);                        38189000
                   EMIL(OPDC,BDNSIGN); EMIL(OPR,DEL);     COMMENT 9-03; 38190000
              END;                                                      38191000
                   IF BUSG ~ OUSG(BOCUR) = 0 THEN GO TO E5;             38192000
                   EMIL(IF BSUBQ = 0 THEN LITC ELSE OPDC,QX);           38192200
                   IF BUSG ! 2 THEN EMIL(DESC,PX); EMIL(OPR,STD);       38192500
                   IF APREC AND BSIZ < 12 THEN EMIL(OPR,DEL);  %TR 708  38192600
                   IF BSIZ > 11 THEN                                    38192800
              BEGIN IF NOT ACC AND NOT APREC THEN EMIL(LITC,0);         38193000
                   IF BSUBQ = 0 THEN EMIL(LITC,QX + 1) ELSE             38194000
              BEGIN  EMIL(LITC,1); EMIL(OPDC,QX); EMIL(OPR,ADD);        38195000
              END;                                                      38196000
                   IF BUSG ! 2 THEN EMIL(DESC,PX); EMIL(OPR,STD);       38197000
              END;                                                      38198000
                   BSUBR1~0; BSUBQ1~BSUBQ;                COMMENT N-23; 38198200
                   GO TO E6;                                            38198500
E5:                IF NOT APREC AND BSIZ>11 THEN                        38198700
                             %RECEIVING FIELD IS DOUBLE PRECISION       38198701
              BEGIN EMIL(LITC,0); EMIL(OPR,XCH); APREC~TRUE;            38198800
                             %IF SENDING SP MAKE DP                     38198801
              END;                                                      38198900
E5A:                                                      COMMENT D-1;  38198950
                   IF BSIZ{8 THEN                                       38199000
              BEGIN  EMIL(LITC,STDLOC); EMIL(OPR,ISN);                  38200000
              END;                                                      38201000
                   BSUBQ1~BSUBQ; QX1~QX; RX1~RX;          COMMENT 10-7; 38201500
                   BSUBR1~BSUBR;                          COMMENT N-20; 38201700
                   IF CLB~OCLAS(BOCUR) = 4 THEN                         38202000
                             %RECEIVING FIELD IS ED. NUM.               38202001
              BEGIN PX~TARRLOC; BSUBQ~QX~RX~0;                          38203000
                             %PREPARE FOR INTERMEDIATE OUTPUT           38203001
                   BSUBR~0;                               COMMENT N-20; 38203500
              END;             %CONVERT                                 38204000
                   EMIL(OPR,MKS);%CONVERT DIRECTLY IF RECEIVING         38205000
                   EMIL(IF BSUBQ = 0 THEN LITC ELSE OPDC, QX);          38206000
                             %FIELD NOT ED. NUM.                        38206001
                   EMIL(DESC,PX);                                       38207000
                   EMIL(IF BSUBQ = 0 THEN LITC ELSE OPDC, RX);          38208000
                   EMIL(LITC,REAL(BSN=2)); EMIL(LITC,BSIZ);             38209000
                   EMIL(OPDC,IF BSIZ > 8 THEN OCV1L ELSE OC1L);         38210000
                   EMIL(OPR,DEL);                         COMMENT 9-03; 38211000
                   IF APREC THEN EMIL(OPR,DEL);           COMMENT 9-03; 38211500
                   IF CLB = 4 THEN                                      38212000
              BEGIN  ACC ~ TRUE;                                        38213000
                   MGENC(AOCUR,BOCUR,FALSE,FALSE,         COMMENT N-27; 38214000
                   FALSE,FALSE,                           COMMENT N-27; 38214500
                   0,BSUBQ1,0,QX1,0,RX1,BSUBR1,0,BSUBQ1,  COMMENT N-23; 38215000
                   FALSE);                                COMMENT 10-7; 38216000
              END;                                                      38217000
E6:                JCV(OILNK(BOCUR)+1,J,K);                             38220000
                   IF INFO[J,K].[3:1]!0 THEN MONGEN       COMMENT N-20; 38225000
                             %IF MONITORED THEN                         38225001
                   (BOCUR,BSUBQ1,BSUBR1);                 COMMENT N-20; 38227000
                   ACC ~ FALSE;%CALL MONITOR PROCEDURE                  38230000
              END;                                                      38235000
COMMENT **************************   GREM    *************************; 38235500
PROCEDURE GREM;                %HANDLES EXAMINE LIMIT FOR FIELDS >      38240000
                             % 63 CHARACTERS LONG                       38240001
              BEGIN CEMLT(7,SSA); CEMLT(3,RSA); CEMLT(8,SRS);           38245000
                             %SUBTRACT 1 FROM LENGTH                    38245001
                   CEMLT(3,SSA); CEMLT(3,SES); CEMLT(5,SFS);            38250000
                             %TEST FOR LENGTH OF 0 0 0                  38250001
                   CEMLT(0,TEQ); CEMLT(5,JFC); CEMLT(1,SFS);            38255000
                   CEMLT(0,TEQ); CEMLT(2,JFC); CEMLT(1,SFS);            38260000
                   CEMLT(0,TEQ);                                        38265000
                   CEMLT(7,RSA);%RESER SOURCE                           38265010
              END;                                                      38270000
COMMENT **************************  EXAMINE  *************************; 38270500
COMMENT  EXAMINE SYNTAX CONTROL AND GENERATORS          ;               38275000
PROCEDURE EXAMINE ;                                                     38280000
              BEGIN                                                     38285000
              INTEGER ALL,TP,TQ,TR,LT1,LT2,LLW;                         38290000
              REAL FIX1,FIX2;                                           38295000
                   LABEL  DREIS, DREI, FOUR, SIX, OCTO,       LEW, LEX, 38300000
                   OCTO1,                                               38305000
                    FF,RECOVER,                                         38310000
                   LEND,FUNF,SEIS,ZWEI,   ER1  ;                        38315000
              BOOLEAN GRTR, FL4, TALIE;%FOR SIZE > 63 CHARACTERS        38320000
                   FL4~TRUE;TALIE := LITF := ZRA := FALSE;              38321000
                    LT1 := FIX1  := FIX2 := LT2 := 0;                   38325000
                   DN;    IF TYPE = 1 THEN%ILLEGAL EXAMINE OPERAND      38340000
DREIS:        BEGIN  EIND~77;                                           38345000
 DREI:              ERP (EIND,0);                                       38347000
                    SGMTLVL := 10;                                      38350000
                    RECOV; GO TO LEND;                                  38353000
              END;                                                      38355000
                   IF NOT FOUND OR (TYPE ! 2 AND TYPE ! 7 AND  %CJC 066 38355100
                     TYPE ! 8 AND TYPE ! 9) THEN               %CJC 066 38355200
              BEGIN IF FOUND THEN                              %CJC 066 38355300
                   EIND ~ 40 & 22[32:40:8] & 124[24:40:8] ELSE %CJC 066 38355400
                   EIND ~ 13 & 22[32:40:8] & 124[24:40:8];     %CJC 066 38355500
                   GO TO RECOVER;                              %CJC 066 38355600
              END;  % ILLEGAL OR UNIDENTIFIED OPERAND          %CJC 066 38355700
                   ALL~0;                                               38360000
                   IF MDF THEN LITF~TRUE;  LLW~OCUR;%SAVE MONITOR FLAG  38365000
                   OAS (TP,TQ,TR,OCUR);%GET ASSIGNMENT                  38370000
                   IF TYPE ! 9 THEN SIZE~OFSZ(OCUR);%IF NOT RENAMES     38375000
                   GRTR ~ IF SIZE > 63 THEN TRUE ELSE FALSE;            38375050
                             %SET BOOLEAN FOR > 63 CHARACTERS           38375051
     COMMENT TEST FOR USAGE ERROR   ;                                   38380000
                   IF OUSG (OCUR) ! 0 THEN                              38385000
 ER1:         BEGIN EIND := 16&8[32:40:8]&124[24:40:8];GO TO RECOVER;   38390000
              END;                                                      38395000
                   IF GRTR THEN                                         38400000
              BEGIN EMIL (LITC,0)     ; EMIL (LITC,0)                   38405000
                             %SET LENGTH WORKING-STORAGE                38405001
              END;                                                      38410000
                   EMIL (LITC,0)     ;                                  38415000
                   EMIL (OPR,MKS)     ;                                 38420000
       COMMENT IF SIZE DEPENDING ON THEN GET LENGTH ;                   38425000
                   X~OILNK(OCUR);   JCV(X,J,K);                         38430000
                   IF INFO[J,K].[24:5]>3 AND           COMMENT 2-26-64; 38430010
                   (INFO[J,K+3].[3:15] !0 OR           COMMENT 2-26-64; 38430015
                   INFO[J,K+3].[33:15]!0) THEN         COMMENT 2-26-64; 38430020
              BEGIN  VARILGTH(OCUR);  EMIL(LITC,1);                     38430030
                    EMIL(OPR,ADD);  GRTR~TRUE;                          38430040
              END ELSE                                                  38435000
              BEGIN IF SIZE { 1023 THEN EMIL(LITC,SIZE) ELSE            38435001
              BEGIN EMIL(LITC,0); X~ SIZE;                              38435002
                   WHILE X > 0 DO                                       38435003
              BEGIN EMIL(LITC, IF X > 1023 THEN 1023 ELSE X);           38435004
                   EMIL(OPR,ADD);    X ~ X - 1023;                      38435005
              END;                                                      38435006
              END;                                                      38435007
              END;                                                      38435008
                    IF GRTR THEN                                        38435010
              BEGIN  EMIL(LITC,1); EMIL(OPR,ADD);                       38435020
              END;                                                      38435030
                   T9~0;                                                38440000
                   IF SUBS ! 0 THEN                                     38445000
              BEGIN HQX~QAL; HRX~RAL; SUBLST;                           38450000
                             %IF SUBSCRIPTED THEN EVALUATE SUBS         38450001
                   EMIL(OPR,DEL);EMIL(OPR,DEL);           COMMENT 8-7;  38455000
                   T9~1;                                  COMMENT 8-27; 38455050
                   EMIL (OPDC,RAL)     ;                                38460000
              END ELSE                                                  38465000
              BEGIN EMIL(LITC,TR); DN;%CHARACTER ADDRESS                38470000
              END;                                                      38475000
                   IF T9 ! 0 THEN                                       38525000
              BEGIN EMIL (OPDC,QAL)     ; EMIL (DESC,TP)     ;          38530000
                             %GET WORD INDEX                            38530001
              END ELSE                                                  38535000
              BEGIN EMIL (LITC,TQ)     ; EMIL (DESC,TP)     ;           38540000
              END;                                                      38545000
                   EMIL(OPR,CMN);%CALL INDEXED DESCRIPTOR               38555000
COMMENT TEMPORARY; SGMTLVL ~ SGMTLVL + 1;                               38555001
         COMMENT TEST FOR TALLYING OPTION ;                             38570000
                   IF KEY = 551 THEN                                    38575000
              BEGIN TALIE~TRUE;%GET "TALLY" ASSIGNMENT                  38580000
                   ALL.[42:1]~1; GO TO ZWEI%SET TALLYING FLAG           38600000
              END;                                                      38625000
         COMMENT TEST FOR REPLACING  ;                                  38630000
                   IF KEY ! 546 THEN GO TO ER1;                         38635000
                   ALL.[47:1]~1;%SET REPLACING FLAG                     38640000
ZWEI:              DN;                                                  38645000
                   IF ALL.[42:1] ! 0 THEN%IF TALLYING                   38650000
                   CEMLT (0,SEC)     ;%CLEAR COUNT                      38655000
                   CEMLT (1,RSA)     ;%SET SOURCE TO DATA-NAME          38660000
                   CEMLT (2,CRF)     ;                                  38665000
                   CEMLT (0,SFS)     ;                                  38670000
         COMMENT TEST FOR ALL OPTION  ;                                 38675000
                   IF KEY = 501 THEN                                    38680000
              BEGIN ALL.[43:1]~1; GO TO FOUR%SET ALL FLAG               38685000
              END;                                                      38690000
         COMMENT TEST FOR LEADING OPTION ;                              38695000
                   IF KEY = 525 THEN                                    38700000
              BEGIN ALL.[46:1]~1; GO TO FOUR%SET LEADING FLAG           38705000
              END;                                                      38710000
         COMMENT TEST FOR UNTIL OPTION  ;                               38715000
                   IF KEY = 555 THEN%IF UNTIL                           38720000
              BEGIN  DN;                                                38725000
                   COMMENT TEST FOR FIRST ;                             38730000
                   IF KEY ! 518 THEN GO TO DREIS  ELSE                  38735000
                   ALL.[44:1]~1; GO TO FOUR%SET FIRST FLAG              38740000
              END;                                                      38745000
         COMMENT TEST FOR FIRST OPTION ;                                38750000
                   IF KEY ! 518 THEN GO TO DREIS ;  ALL.[45:1]~1;       38755000
 FOUR:             DN;                                                  38760000
         COMMENT TEST FOR LITERAL OR INTEGER ;                          38765000
                   IF SCLAS ! 1 AND SCLAS ! 6 THEN                      38770000
              BEGIN   IF KEY = 541 THEN%IF "QUOTE"                      38775000
              BEGIN                  ISYMB[0]~ 0 & 63 [24:42:6];        38780000
                   GO TO FF;                                            38785000
              END;  IF TYPE = 1 THEN                                    38790000
              BEGIN IF NOT SETLTR THEN GO TO SIX;                       38795000
                             %GET FIGURATIVE CONSTANT                   38795001
                   ISYMB[0]~LTR[0]; GO TO FF;                           38800000
              END;                                                      38805000
              BEGIN                                                     38810000
 SIX:               EIND := 2&47[32:40:8]&22[24:40:8]&124[16:40:8];     38813000
 RECOVER:           SYOUT(MSG[124],ISYMB,LGTH);                         38815000
                   GO TO DREI                                           38820000
              END;                                                      38825000
              END;                                                      38830000
                   IF LGTH > 1 THEN GO TO SIX;                          38835000
                             %IF LENGTH OF LITERAL > 1 THEN ERROR       38835001
       FF:                                                              38840000
                   LT1~ISYMB[0].[24:6]; DN;                             38845000
         COMMENT TEST FOR REPLACING ;                                   38850000
                   IF KEY = 546 THEN                                    38855000
              BEGIN ALL.[47:1]~1; DN; FL4~FALSE;%SET REPLACING FLAG     38860000
              END; IF KEY=507 THEN                        COMMENT 8-27; 38865000
              BEGIN DN; FL4~FALSE;                        COMMENT 8-27; 38870000
              END; IF FL4 THEN GO TO OCTO1;               COMMENT 8-27; 38875000
       OCTO:                                                            38880000
                   IF SCLAS ! 1 AND SCLAS ! 6 THEN                      38885000
              BEGIN IF KEY = 541 THEN%IF QUOTE                          38890000
              BEGIN LT2~63; DN; GO TO OCTO1;              COMMENT 9-08; 38895000
              END;   IF TYPE ! 1 THEN GO TO SIX;                        38900000
                   IF NOT SETLTR THEN GO TO SIX;                        38905000
                             %GET LITERAL (FIG CONSTANT)                38905001
                   LT2~LTR[0].[24:6]; DN; GO TO OCTO1;    COMMENT 9-08; 38910000
              END;                                                      38915000
                   IF LGTH > 1 THEN GO TO SIX;                          38920000
                   LT2 ~ ISYMB [0].[24:6] ;%SAVE 2ND LITERAL            38925000
                   DN;                                    COMMENT 9-08; 38927000
       OCTO1:                                                           38930000
                   IF ALL = 5 THEN%IF REPLACING FIRST                   38935000
              BEGIN CEMLT (2,SSA)     ;                                 38940000
                   CEMLT (2,RDA)     ;                                  38945000
                   IF GRTR THEN                                         38950000
              BEGIN  FIX1~CHMX;  CEMLT(0,JFW);%SAVE LENGTH TEST FIXUP   38955000
              END ELSE                                                  38960000
              BEGIN                                                     38965000
                   CEMLT (3,CRF)     ;                                  38970000
                   CEMLT (0,BNS)     ;                                  38975000
              END;                                                      38980000
                   CEMLT (LT1,TEQ)     ;%TEST FOR LITERAL-1             38985000
                   CEMLT (3,JFC)     ;                                  38990000
                   CEMLT (1,TRP)     ;                                  38995000
                   CEMLT (48,LT2)     ;%REPLACE BY LITERAL-2            39000000
                   IF GRTR THEN FIX2~CHMX;                              39005000
                   CEMLT (3,JNS)     ;                                  39010000
                   CEMLT (1,SFS)     ;%ADJUST TO NEXT CHARACTER         39015000
                   CEMLT (1,SFD)     ;                                  39020000
                   IF GRTR THEN                                         39025000
              BEGIN                                                     39030000
                   CEMIT (((CHMX-FIX1) DIV 2)-1,JFW,FIX1);              39035000
                             %FIX JUMPS TO LENGTH TEST                  39035001
                   GREM;                                                39040000
                   CEMLT ((CHMX-FIX1+2) DIV 2,JRC);                     39045000
                   CEMIT(((CHMX-FIX2) DIV 2)-1,JFW,FIX2);               39050000
              END ELSE                                                  39055000
                   CEMLT (0,ENS)     ;                                  39060000
                   GO TO LEX                                            39065000
              END;                                                      39070000
                   IF ALL = 3 THEN%IF REPLACING LEADING                 39075000
              BEGIN CEMLT (2,SSA)     ;                                 39080000
                   CEMLT (2,RDA)     ;                                  39085000
                   IF GRTR THEN                                         39090000
              BEGIN  FIX1~CHMX;  CEMLT(0,JFW);%SET LENTTH JUMP TEST     39095000
              END ELSE                                                  39100000
              BEGIN                                                     39105000
                   CEMLT (3,CRF)     ;                                  39110000
                   CEMLT (0,BNS)     ;                                  39115000
              END;                                                      39120000
                   CEMLT (LT1,TEQ)     ;%TEST LITERAL-1                 39125000
FUNF:              CEMLT (4,JNC)     ;                                  39130000
                   IF GRTR THEN FIX2~CHMX-2;                            39135000
                             %SAVE END OF EXAMINE JUMP POSITION         39135001
                   CEMLT (1,TRP)     ;                                  39140000
                   CEMLT (48,LT2)     ;%REPLACE BY LITERAL-2            39145000
                   CEMLT (1,SFS)     ;                                  39150000
                   IF GRTR THEN                                         39155000
              BEGIN                                                     39160000
                   CEMIT (((CHMX-FIX1) DIV 2)-1,JFW,FIX1);              39165000
                             %FIX TO JUMP TO LENGTH TEST                39165001
                   GREM;       %EMIT LENGTH TEST CODE                   39170000
                   CEMLT ((CHMX-FIX1+2) DIV 2,JRC);                     39175000
                   CEMIT (((CHMX-FIX2) DIV 2)-1,JFC,FIX2);              39180000
                             %FIX END EXIT JUMP                         39180001
              END ELSE                                                  39185000
                   CEMLT (0,ENS)     ;                                  39190000
                   GO TO LEX                                            39195000
              END;                                                      39200000
                   IF ALL = 9 THEN%IF REPLACING FIRST                   39205000
              BEGIN CEMLT (2,SSA)     ;                                 39210000
                   CEMLT (2,RDA)     ;                                  39215000
                   IF GRTR THEN                                         39220000
              BEGIN  FIX1~CHMX;  CEMLT(0,JFW);                          39225000
              END ELSE                                                  39230000
              BEGIN                                                     39235000
                   CEMLT (3,CRF)     ;                                  39240000
                   CEMLT (0,BNS)     ;                                  39245000
              END;                                        COMMENT 8-28; 39245020
                   CEMLT (LT1,TNE);              COMMENT 1/30/64;       39245050
                   GO TO FUNF                                           39255000
              END;                                                      39260000
                   IF ALL = 17 THEN%IF REPLACING ALL                    39265000
              BEGIN CEMLT (2,SSA)     ;                                 39270000
                   CEMLT (2,RDA)     ;                                  39275000
                   IF GRTR THEN                                         39280000
              BEGIN  FIX1~CHMX;  CEMLT(0,JFW);                          39285000
              END ELSE                                                  39290000
              BEGIN                                                     39295000
                   CEMLT (3,CRF)     ;                                  39300000
                   CEMLT (0,BNS)     ;                                  39305000
              END;                                                      39310000
                   CEMLT (LT1,TEQ)     ;%TEST LITERAL-1                 39315000
                   CEMLT (3,JFC)     ;                                  39320000
                   CEMLT (1,TRP)     ;                                  39325000
                   CEMLT (48,LT2)     ;  COMMENT LITERAL-2  ;           39330000
                             %REPLACING LITERAL-2                       39330001
                   CEMLT (1,SRD)     ;                                  39335000
                   CEMLT (1,SFS)     ;                                  39340000
                   CEMLT (1,SFD)     ;                                  39345000
                   IF GRTR THEN                                         39350000
              BEGIN                                                     39355000
                   CEMIT (((CHMX-FIX1) DIV 2)-1,JFW,FIX1);              39360000
                   GREM;                                                39365000
                   CEMLT ((CHMX-FIX1+2) DIV 2,JRC);                     39370000
              END ELSE                                                  39375000
                   CEMLT (0,ENS)     ;                                  39380000
                   GO TO LEX                                            39385000
              END;                                                      39390000
                   IF ALL = 41 THEN%TALLYING RAPLACING FIRST            39395000
              BEGIN CEMLT (5,STC)     ;                                 39400000
                   IF GRTR THEN                                         39405000
              BEGIN  FIX1~CHMX;  CEMLT(0,JFW);                          39410000
              END ELSE                                                  39415000
              BEGIN                                                     39420000
                   CEMLT (3,CRF)     ;                                  39425000
                   CEMLT (0,BNS)     ;                                  39430000
              END;                                                      39435000
                   CEMLT (LT1,TNE)     ;                                39440000
SEIS:              CEMLT (9,JNC)     ;                                  39445000
                   IF GRTR THEN FIX2~CHMX-2;                            39450000
                   CEMLT (2,SSA)     ;                                  39455000
                   CEMLT (2,RDA)     ;                                  39460000
                   CEMLT (1,TRP)     ;                                  39465000
                   CEMLT (48,LT2)     ;  COMMENT LITERAL-2  ;           39470000
                   CEMLT (1,SFS)     ;                                  39475000
                   CEMLT (5,RDA)     ;                                  39480000
                   CEMLT (8,SFD)     ;                                  39485000
                   CEMLT (5,SDA)     ;                                  39490000
                   IF GRTR THEN                                         39495000
              BEGIN                                                     39500000
                   CEMIT (((CHMX-FIX1) DIV 2)-1,JFW,FIX1);              39505000
                   GREM;                                                39510000
                   CEMLT ((CHMX-FIX1+2) DIV 2,JRC);                     39515000
                   CEMIT (((CHMX-FIX2) DIV 2)-1,JFC,FIX2);              39520000
              END ELSE                                                  39525000
                   CEMLT (0,ENS)     ;                                  39530000
                   GO TO LEX                                            39535000
              END;                                                      39540000
                   IF ALL = 35 THEN                                     39545000
              BEGIN CEMLT(5,STC);  IF GRTR THEN                         39550000
              BEGIN  FIX1~CHMX;  CEMLT(0,JFW);                          39555000
              END ELSE                                                  39560000
              BEGIN  CEMLT(3,CRF); CEMLT(0,BNS);                        39565000
              END;   CEMLT(LT1,TEQ);                                    39570000
                   GO TO SEIS                                           39575000
              END;  IF ALL = 34 THEN%TALLYING LEADING REPLACING         39580000
              BEGIN CEMLT (2,STC)     ; CEMLT (2,RDA)     ;             39585000
                   IF GRTR THEN                                         39590000
              BEGIN  FIX1~CHMX;  CEMLT(0,JFW);                          39595000
              END ELSE                                                  39600000
              BEGIN                                                     39605000
                   CEMLT (3,CRF)     ; CEMLT (0,BNS)     ;              39610000
              END;                                                      39615000
                   CEMLT (LT1,TEQ)     ;                                39620000
LEW:               CEMLT (3,JNC)     ;                                  39625000
                   IF GRTR THEN FIX2~CHMX-2;                            39630000
                   CEMLT (1,SFS)     ;                                  39635000
                   CEMLT (8,SFD)     ;                                  39640000
                   IF GRTR THEN                                         39645000
              BEGIN                                                     39650000
                   CEMIT (((CHMX-FIX1) DIV 2)-1,JFW,FIX1);              39655000
                   GREM;                                                39660000
                   CEMLT ((CHMX-FIX1+2) DIV 2,JRC);                     39665000
                   CEMIT (((CHMX-FIX2) DIV 2)-1,JFC,FIX2);              39670000
              END ELSE                                                  39675000
                   CEMLT (0,ENS)     ;                                  39680000
                   CEMLT (5,SDA)     ;                                  39685000
                   GO TO LEX                                            39690000
              END;                                                      39695000
                   IF ALL = 49 THEN%TALLYING REPLACING ALL              39700000
              BEGIN CEMLT(5,STC);  IF GRTR THEN                         39705000
              BEGIN  FIX1~CHMX;  CEMLT(0,JFW);                          39710000
              END ELSE                                                  39715000
              BEGIN   CEMLT(3,CRF); CEMLT(0,BNS);                       39720000
              END;  CEMLT(LT1,TEQ);                                     39725000
                   CEMLT (7,JFC)     ; CEMLT (5,RDA)     ;              39730000
                    CEMLT(8,SFD);  CEMLT(5,SDA);                        39735000
                   CEMLT (2,SSA)     ; CEMLT (2,RDA)     ;              39740000
                   CEMLT (1,TRP)     ;                                  39745000
                   CEMLT (48,LT2)     ;                                 39750000
                   CEMLT (1,SFS)     ;                                  39755000
                   IF GRTR THEN                                         39760000
              BEGIN                                                     39765000
                   CEMIT (((CHMX-FIX1) DIV 2)-1,JFW,FIX1);              39770000
                   GREM;                                                39775000
                   CEMLT ((CHMX-FIX1+2) DIV 2,JRC);                     39780000
              END ELSE                                                  39785000
                   CEMLT (0,ENS)     ;                                  39790000
                   GO TO LEX                                            39795000
              END;                                                      39800000
                   IF ALL = 40 THEN%TALLYING FIRST                      39805000
              BEGIN CEMLT (2,STC)     ;                                 39810000
                   CEMLT (2,RDA)     ;                                  39815000
                   IF GRTR THEN                                         39820000
              BEGIN  FIX1~CHMX;  CEMLT(0,JFW);                          39825000
              END ELSE                                                  39830000
              BEGIN                                                     39835000
                   CEMLT (3,CRF)     ;                                  39840000
                   CEMLT (0,BNS)     ;                                  39845000
              END;                                                      39850000
                   CEMLT (LT1,TNE)     ;                                39855000
                   GO TO LEW                                            39860000
              END;                                                      39865000
                   IF ALL ! 48 THEN GO TO DREIS;%IF NOT TALLYING ALL    39870000
                    CEMLT(2,STC);  CEMLT(2,RDA);                        39875000
                   IF GRTR THEN                                         39880000
              BEGIN  FIX1~CHMX;  CEMLT(0,JFW);                          39885000
              END ELSE                                                  39890000
              BEGIN                                                     39895000
                   CEMLT (3,CRF)     ; CEMLT (0,BNS)     ;              39900000
              END;                                                      39905000
                   CEMLT (LT1,TEQ)     ;                                39910000
                   CEMLT (1,JFC)     ;                                  39915000
                    CEMLT(8,SFD);                                       39920000
                   CEMLT (1,SFS)     ;                                  39925000
                   IF GRTR THEN                                         39930000
              BEGIN                                                     39935000
                   CEMIT (((CHMX-FIX1) DIV 2)-1,JFW,FIX1);              39940000
                   GREM;                                                39945000
                   CEMLT ((CHMX-FIX1+2) DIV 2,JRC);                     39950000
              END ELSE                                                  39955000
                   CEMLT (0,ENS)     ;                                  39960000
                   CEMLT (5,SDA)     ;                                  39965000
LEX:               CEMLT(0,CMX);                          COMMENT 6- 1; 39970000
COMMENT TEMPORARY; SGMTLVL ~ SGMTLVL - 1;                               39970001
                   IF TALIE THEN                          COMMENT 8-11; 39975010
              BEGIN OAS(T2,T3,T4,TALY);                   COMMENT 8-11; 39975020
                   EMIL(LITC,T3);  EMIL(DESC,T2);         COMMENT 8-11; 39975040
                   EMIL(OPR,STD);                         COMMENT 8-11; 39975060
              END ELSE                                    COMMENT 8-11; 39975080
                   EMIL(OPR,DEL);                         COMMENT 8-11; 39975100
                   IF GRTR THEN                           COMMENT 8-11; 39975120
              BEGIN EMIL(OPR,DEL);  EMIL(OPR,DEL);        COMMENT 8-11; 39975140
              END;                                        COMMENT 8-11; 39975160
                   IF LITF THEN%IF MONITOR REQUESTED                    39980000
              BEGIN  LITF~FALSE;  MONGEN (LLW,0,0);                     39985000
              END;                                                      39990000
LEND:         END;                                        COMMENT 8-28; 40000000
COMMENT **************************   CORESP  *************************; 40005500
BOOLEAN PROCEDURE CORESP;                                               40015000
              BEGIN   INTEGER Y,X,G;                                    40020000
                   LABEL     C9,C10,LF,COX,A,C6,C1,C6A,C11,C12,C3,C14,  40025000
                    C146, C147,                                         40025010
                   C13,C5;                                              40030000
COMMENT **************************   SNCHK   *************************; 40030500
BOOLEAN PROCEDURE SNCHK (OC1,OC2);                                      40035000
                   VALUE OC1,OC2;     INTEGER OC1,OC2;                  40040000
         BEGIN                                                          40045000
              LABEL SNX;                                                40050000
              IF OC1 > OC2 THEN DOUBLE(OC1,OC2,~,OC2,OC1);              40055000
                             %SELECT EARLIEST DECLARED OPERAND          40055001
              WHILE OC1 ! OC2 DO%CHECK IF ON SAME SAME-NAME LIST        40060000
              IF OC1 = 0 THEN GO TO SNX                                 40065000
                         ELSE OC1 ~ OSNAM(OC1);                         40070000
                             %IF NOT SAME-NAME THEN PROCEDURE FALS      40070001
              SNCHK ~ TRUE;                                             40075000
       SNX:   END;                                                      40085000
                   X~1; Y~2; IF CLIM = 0 THEN%IF FIRST CALL ON CORESP   40090000
              BEGIN  CT [0]~ 0; CHI~0; CLEVEL ~OLEVL (CCY [1]);         40095000
                             %INITALIZE HIERARCHY CHECK AND LEVEL       40095001
                    G~CCY[1];   WHILE G ! 0 DO                          40095010
              BEGIN  JCV(OILNK(G),J,K);                                 40095020
                             %CHECK IF SUBSCRIPTS REQUIRED IN RANG      40095021
                   IF INFO[J,K+1].[19:19] ! 0 THEN             %TR 86   40095030
                             %  OF CORRESPONDING REQURST                40095031
              BEGIN EIND~40 & 55 [32:40:8] & 22 [24:40:8];              40095032
                    ERP(EIND,0);  GO TO LF;                             40095034
              END;                                                      40095036
                   G~OFOL(G);  IF G ! 0 THEN                            40095040
              BEGIN  IF OLEVL(G) { CLEVEL THEN G~0;                     40095050
              END;                                                      40095060
              END;                                                      40095070
                    G~CCY[2];   WHILE G ! 0 DO                          40095100
              BEGIN  JCV(OILNK(G),J,K);                                 40095110
                             %CHECK RECEIVING FIELD FOR SUBSCRIPTS      40095111
                   IF INFO[J,K+1].[19:19] ! 0 THEN             %TR 86   40095120
              BEGIN EIND~40 & 55 [32:40:8] & 22 [24:40:8];              40095122
                    ERP(EIND,0);  GO TO LF;                             40095124
              END;                                                      40095126
                   G~OFOL(G);  IF G ! 0 THEN                            40095130
              BEGIN IF OLEVL(G) { OLEVL(CCY[2]) THEN G~0;               40095140
              END;                                                      40095150
              END;                                                      40095160
                   CLIM~ CLIM+1; IF NOT OELEF (CCY [1]) THEN GO TO C9;  40100000
                             %IF GROUP ITEM                             40100001
                   CSP [1]~ CCY [1];%SAVE FIRST OPERAND                 40105000
       C10:        CSP[Y]~CCY[Y]; IF NOT OELEF (CSP[Y]) THEN GO TO      40110000
                             %SAVE FIRST INPUT OPERAND                  40110001
                   LF; IF SNCHK (CSP [Y],CSP [Y-1]) THEN                40115000
                             %IF NAMES ARE THE SAME                     40115001
              BEGIN Y~Y+1; IF Y < CY THEN GO TO C10 ELSE GO TO LF;      40120000
                             %ADJUST TO NEXT OPERAND PAIR               40120001
              END;  CORESP~ TRUE; GO TO COX                             40125000
                             %PICK UP NEXT ITEM FROM INOUT AREA         40125001
              END;                                                      40130000
       C9:         CCY [1]~ OFOL (CCY [1]);                             40135000
                    IF CCY[1] = 0 THEN GO TO LF;                        40140000
                   IF OLEVL(CCY[1]) { CLEVEL THEN%IF OUT OF GROUP RANGE 40140010
              BEGIN                                                     40145000
       LF:         CORESP~FALSE; GO TO COX;                             40150000
              END;                                                      40155000
                   JCV(CCY[1],J,K);                                     40160000
                   IF DICT[J,K].[10:1] ! 0 THEN GO TO C9;%IF "FILLER"   40165000
                    IF OLEVL(CCY[1]) = 58 THEN GO TO C9;%IF "88" LEVEL  40165050
                   IF CHI ! 0 THEN%IF HIERARCHY CHECK REQUIRED          40165100
              BEGIN  WHILE (OLEVL(CT[CHI]) } OLEVL(CCY[1])) DO          40165110
              BEGIN  CT[CHI]~0;  CHI~CHI-1;%CHECK IF HIERARCHY AGREES   40165120
                     IF CHI = 0 THEN GO TO A;                           40165130
              END;                                                      40165150
              END;                                                      40165160
       A:          IF NOT OELEF (CCY [1]) THEN%IF GROUP ITEM            40170000
              BEGIN IF CHI = 0 THEN GO TO C6;                           40175000
                             %IF HIERARCHY CHECK NOT REQUIRED           40175001
       C1:         IF OLEVL (CCY [1]) { OLEVL (CT [CHI]) THEN           40180000
                             %CHECK AGAINST QUALIFIER LEVEL             40180001
              BEGIN IF OLEVL (CCY [1]) < OLEVL (CT [CHI]) THEN          40185000
              BEGIN CT [CHI]~ 0; CHI~ CHI-1; GO TO C1                   40190000
              END ELSE GO TO C6A                                        40195000
              END;                                                      40200000
       C6:         CHI~ CHI+1;                                          40205000
       C6A:        CT [CHI]~ CCY [1]; CCY [1]~ OFOL (CCY [1]);          40210000
                             %ADD ITEM TO REQUIRED QUALIFICATION        40210001
                             %PICK UP FOLLOWER FROM INPUT AREA          40210002
                    IF OLEVL(CCY[1]) = 58 THEN GO TO C9;%IF 88 LEVEL    40210050
                       IF CCY [1]=0 THEN GO TO LF;                      40215000
                   IF OLEVL (CCY [1]) > CLEVEL THEN GO TO A ELSE        40220000
                             %IF OUT OF GROUP RANGE                     40220001
                   GO TO LF                                             40225000
              END;                                                      40230000
                   CSP [1]~ CCY [1]; CSP [Y]~ OFOL (CCY [Y]); Z~ 1;     40235000
                             %SAVE CURRENT INPUT ITEM                   40235001
        C11:       IF OELEF (CSP [Y]) THEN%IF ELEMENTARY ITEM           40240000
              BEGIN IF NOT SNCHK (CSP [1],CSP [Y]) THEN GO TO C12;      40245000
                             %CHECK IF NAMES ARE THE  SAME              40245001
                   IF CHI = 0 THEN                                      40245010
C147:         BEGIN IF PRINTIT AND NOT ZOBOL THEN         COMMENT 6-18; 40245015
              BEGIN JCV(OILNK(CSP[1])+1,J,K);                           40245020
                             %PRINT CORRESPONDING NAMES AND             40245021
                   IF INFO[J,K].[3:1]!0 OR%HIGHEST HIERARCHY THEREOF    40246000
                   INFO[J,K-1].[32:1]!0 THEN              COMMENT 6-10; 40246500
              BEGIN T3 ~ INFO[J,K+1].[5:5];               COMMENT 6-10; 40247000
                   T4 ~ INFO[J,K+1].[10:8];               COMMENT 6-10; 40247500
                   T2 ~ SMB[T3,T4].[17:7];                COMMENT 6-10; 40248000
                   SYOUT(MSG[124],SMB[T3,T4],T2);         COMMENT 6-10; 40248500
                   ERP(124,"      ");                                   40249000
              END ELSE                                    COMMENT 6-10; 40249500
              BEGIN JCV(INFO[J,K+1].[3:15],J,K);%                       40250000
                   T2 ~ DICT[J,K].[1:5];                  COMMENT 6-10; 40250010
                   SYOUT(MSG[124],DICT[J,K],T2);          COMMENT 6-10; 40250500
                   T1 ~ "OF";                             COMMENT 5-04; 40251000
                   MSG[128]~0&2[1:43:5]&T1[6:36:12];      COMMENT 5-04; 40251500
                   JCV(OILNK(OHLNK(CSP[1]))+1,J,K);       COMMENT 5-04; 40252000
                   X~OHLNK(CSP[1]);                       COMMENT 6-10; 40252500
                   WHILE OHLNK(X)!0 DO X~OHLNK(X);        COMMENT 6-10; 40253000
                   IF OTYP(X) =6 THEN                     COMMENT 6-17; 40253050
              BEGIN JCV(OILNK(X)+1,J,K);                  COMMENT 6-17; 40253100
                   JCV(INFO[J,K].[1:15],J,K);             COMMENT 6-17; 40253200
              END ELSE                                    COMMENT 6-17; 40253300
              BEGIN                                       COMMENT 6-17; 40253400
                   JCV(OILNK(X)+2,J,K);                   COMMENT 6-10; 40253500
                   JCV(INFO[J,K].[3:15],J,K);             COMMENT 6-10; 40253700
              END;                                        COMMENT 6-17; 40253800
                   T2 ~ DICT[J,K].[1:5];                  COMMENT 5-04; 40254000
                   SYOUT(MSG[129],DICT[J,K],T2);          COMMENT 5-04; 40254500
                   ERP(124&128[32:40:8]&129[24:40:8],"      ");         40258500
              END;                                        COMMENT 5-04; 40258600
              END;                                        COMMENT 6-10; 40258650
                   CORESP~TRUE; GO TO COX;                COMMENT 5-04; 40258700
              END;                                        COMMENT 5-04; 40259000
              END;                                        COMMENT 5-04; 40259500
        C3:        IF CHI = 0 THEN%IF QUALIFICATION CHACK NOT REQUIRED  40260000
              BEGIN                                                     40265000
        C12:       CSP [Y]~ OFOL (CSP [Y]); IF CSP [Y] = 0 THEN         40270000
                             %PICK UP NEXT ITEM FROM SECOND FIELD       40270001
                   GO TO C9;                                            40275000
                    IF OLEVL(CCY[Y]) = 58 THEN GO TO C9;%IF 88 LEVEL    40275050
       C14:        IF OLEVL (CSP [Y]) > OLEVL (CCY [Y]) THEN GO TO C11  40280000
                             %IF OUT OF RANGE OF MAJOR GROUP            40280001
                   ELSE GO TO C9                                        40285000
              END;                                                      40290000
                   IF SNCHK (CSP [Y],CT [Z]) THEN%IF NAMES ARE THE SAME 40295000
              BEGIN IF Z } CHI THEN%IF ALL QUALIFICATION CHECKED        40300000
              BEGIN  CSP[Y]~OFOL(CSP[Y]);%SAVE FOUND CORESP ITEM        40305000
                   IF NOT OELEF(CSP[Y]) THEN GO TO C3;                  40305010
                             %IF NOT ELEMENTARY ITEM                    40305011
                   IF SNCHK(CSP[1],CSP[Y]) THEN%IF NAMES ARE THE SAME   40305020
                   GO TO C147;                            COMMENT 5-04; 40305022
                   T1~OLEVL(CSP[Y]);%SAVE LEVEL OF CURRENT ITEM         40305030
       C146:        CSP[Y]~OFOL(CSP[Y]);%SAVE CORESP CANTIDATE          40305035
                    IF CSP[Y] = 0 THEN GO TO C9;                        40305040
                   IF OLEVL(CSP[Y]) < T1 THEN GO TO C14;                40305045
                   IF SNCHK(CSP[1],CSP[Y]) THEN GO TO C147;             40305050
                    GO TO C146;                                         40305070
              END;                                                      40310000
        C5:        CSP [Y]~ OFOL (CSP [Y]); IF CSP [Y] = 0 THEN GO TO   40320000
                             %PICK UP FOLLOWER OF 2ND OPERAND           40320001
                   LF;  Z~Z+1;  GO TO C11;                              40325000
              END;                                                      40335000
                   T1~ OLEVL (CSP [Y]);%SAVE LEVEL OF TOP ITEM IN LIST  40340000
        C13:       CSP [Y]~ OFOL (CSP [Y]); IF CSP [Y] = 0 THEN GO TO   40345000
                             %PICK UP FOLLOWER OF OPERAND               40345001
                   C9; IF OLEVL (CSP[CY]) > T1 THEN GO TO C13 ELSE      40350000
                             %IF OUT OF RANGE OF LEVELS                 40350001
              BEGIN  IF CSP[2] = 0 THEN GO TO C9;          COMMENT 4-9; 40351000
                   IF OLEVL(CSP[2]){OLEVL(CCY[2]) THEN GO  COMMENT 4-9; 40352000
                   TO C9;                                  COMMENT 4-9; 40353000
                   IF OLEVL (CSP[1]) = OLEVL (CSP[Y]) THEN              40354000
              BEGIN IF SNCHK(CSP[1],CSP[Y]) AND OELEF(CSP[Y]) THEN      40354100
                   GO TO C147;                                          40354200
              END;                                                      40354300
                   GO TO C3;                                            40354400
              END;                                         COMMENT 4-9; 40355000
       COX:                                                             40360000
                   IF CHI ! 0 AND (X~OFOL (CCY[1])) ! 0 THEN            40365000
                             %IF QUALIFICATION REQUIRED AND NOT         40365001
                             %   LAST ITEM                              40365002
              BEGIN  IF OLEVL (CT[CHI]) } OLEVL (X) THEN                40370000
              BEGIN CT[CHI]~0; CHI~CHI-1;                               40375000
                             %DELETE FROM HIERARCHY CHECK STACK         40375001
                     IF CHI > 0 THEN GO TO COX;                         40375010
              END;                                                      40380000
              END;                                                      40385000
              END;                                                      40390000
COMMENT ************************* GRCOMP *****************************; 40400000
COMMENT COMPARE GROUP ITEMS FOR HOMOGENOUS CHARACTER REPRESENTATION.    40400100
            SET SIZ TO INTERNAL SIZE,  TYPE                             40400200
            BE SET TO 0 FOR NORMAL GROUPS AND LOC2 FOR RENAMES;         40400300
BOOLEAN PROCEDURE GRCOMP(GROUPA, TYPE, USAGE, SIZ);                     40400400
    VALUE GROUPA, TYPE; INTEGER GROUPA, TYPE, USAGE, SIZ;               40400500
              BEGIN                                                     40400600
              INTEGER U, L, X;                                          40400700
              LABEL  GTRUE, GE, GRX, GL, G1;                            40400800
                   U ~ OFOL(GROUPA);                                    40401000
                   IF U = 0 THEN USAGE ~ OUSG(GROUPA) ELSE              40401100
G1:           BEGIN  IF NOT OELEF(U) THEN                               40401200
              BEGIN  U ~ OFOL(U); GO TO G1;                             40401300
              END;                                                      40401400
                   USAGE ~ OUSG(U);                                     40401500
              END;                                                      40401600
                   U ~ GROUPA;                                          40401700
                   IF TYPE ! 0 THEN%IF RENAMES GROUP                    40401800
              BEGIN  WHILE U { TYPE DO% GO TO END OF RENAMES RANGE      40401900
              BEGIN  IF OELEF(U) THEN                                   40402000
              BEGIN  IF OUSG(U) ! USAGE  THEN                           40402100
GE:           BEGIN  GRCOMP ~ FALSE; GO TO GRX;                         40402200
              END;                                                      40402300
                   SIZ ~  SIZ + MAPSZ(U);%IF DISPLAY                    40402400
              END;                                                      40402500
                   IF U ~ OFOL(U) = 0 THEN GO TO GTRUE;                 40402600
              END;                                                      40402700
                   GO TO GTRUE;                                         40402800
              END  ELSE                                                 40402900
              BEGIN                                                     40403000
                   L ~ OLEVL(GROUPA);                                   40403100
GL:                IF OELEF(U) AND OUSG(U) ! USAGE THEN                 40403200
                   GO TO GE;   %IF DIFFERENT USAGE THEN ERROR           40403300
                   IF (X ~ OFOL(U)) ! 0 AND OLEVL(X) > L THEN           40403400
              BEGIN U ~ X; GO TO GL                                     40403500
              END;                                                      40403600
                   SIZ  ~ MAPSZ(GROUPA);%SIZE IS INTERNAL SIZE          40403700
GTRUE:             GRCOMP ~ TRUE;                                       40403800
              END;                                                      40403900
GRX:          END;                                                      40404000
COMMENT *************************    MOVE   **************************; 40525500
COMMENT  MOVE VERB SYNTAX CONTROL  ;                                    40530000
PROCEDURE MOVE;                                                         40535000
              BEGIN                                                     40540000
    INTEGER D1,D2,D3; BOOLEAN DISC; LABEL M28,M29,M30,M31;  COMMENT DF; 40542000
    BOOLEAN ENDE;                                           COMMENT DF; 40543000
    INTEGER OCURA,AOCUR,BOCUR,TLL,ASIZ,BSIZ,ALP,BLP,ARP,  COMMENT 9-01; 40545000
    BRP,CLA,CLB,AUSAGE,BUSAGE,SGA,SGB,BJSF,APX,BPX,            %CJC 024 40545020
    AQX,BQX,ARX,BRX,RXD,OCA,OCB,PXS,SIZ,LSYM,ALLL,J,K,X,  COMMENT 9-01; 40545030
TYPE9SIZE,                                                      %TR 661 40547010
    ATYP,Y;                                                    %CJC 024 40550000
    BOOLEAN COR,AELEF,BELEF,AHOM,BHOM,LITFLG,ZRA1,             %CJC 096 40550050
    FIGC1,LOW1,SGP;                                       COMMENT 9-24; 40555000
    LABEL MXIT,M1,M2,M3,M4,M5,M6,M7,M8,M9,M10,M11,M12,    COMMENT 9-01; 40555020
    M13,M14,M15,M16,M17,M18,M21,M22,M23,M24,M25,               %CJC 023 40555030
    M26,MG,CORRESPOND;                                    COMMENT 12-7; 40555050
    LABEL M11A;                                           COMMENT N-16; 40558000
         INTEGER  J1,K1,MDCT;                                           40559990
         LABEL    M32, M33, M34, M35;                                   40560000
COMMENT NEW MOVE DOWN TO 41915050 ******************************* 9-01; 40752000
                   T6 ~ OCA ~ OCB ~ 0;  AHOM ~ TRUE;           %CJC 024 40755000
                   BHOM ~ TRUE; COR ~ FALSE; FIGC ~ FALSE; ALL ~ 0;     40755010
                   ZRA ~ FALSE; LOW ~ FALSE; BJSF ~ 0; LITFLG ~ FALSE;  40760000
                   ACC ~ FALSE;                                         40762000
                   DISC~FALSE;                              COMMENT DF; 40763000
                   ENDE~FALSE;                              COMMENT DF; 40764000
                   DN;    % SCAN PAST VERB "MOVE"              %CJC 085 40765000
                   IF LGTH = 4 AND ISYMB[0].[24:24] = "CORR"   %CJC 085 40765100
                   THEN KEY ~ 508;  % "CORRESPONDING"          %CJC 085 40765200
         IF KEY ! 508 THEN GO TO M5;  DN;                               40766300
         COMMENT CORRESPONDING OPTION;                                  40770000
                   IF NOT FOUND OR (TYPE!2 AND TYPE!7 AND TYPE!8 AND    40770010
                   TYPE!9 AND TYPE!18) THEN                             40775000
M1:           BEGIN CHRTRAN(ISYMB,4,MSG[124],1,LGTH);                   40775010
                   MSG[124].[1:5]~LGTH;                                 40775020
         COMMENT ILLEGAL MOVE OPERAND XXXX;                             40780000
                   IF FOUND THEN ERP1(40,43,22,124) ELSE%               40785000
                   ERP1(13,83,124,0); COMMENT UNIDENTIFIED NAME XXXX;   40790000
                   GO TO MXIT; %                                        40795000
              END;                                                      40800000
                   IF SUBS ! 0 THEN                                     40802000
         COMMENT ILLEGAL SUBSCRIPT MOVE OPERAND;                        40805000
M2:           BEGIN ERP1(40,55,43,22); GO TO MXIT;                      40810000
              END;             %                                        40815000
                   OCURA ~ OCUR; COR ~ TRUE; DN;                        40820000
                   AELEF ~ TRUE; BELEF ~ TRUE;                          40825000
                   IF KEY ! 264 THEN COMMENT "TO";%                     40830000
         COMMENT MOVE SYNTAX ERROR;                                     40830010
M3:           BEGIN ERP1(43,77,0,0); GO TO MXIT;                        40830020
              END;                                                      40830030
                   DN;                                                  40830035
M4:                IF NOT FOUND OR (TYPE!2 AND TYPE!7 AND TYPE!8 AND    40830040
                   TYPE!9 AND TYPE!18) THEN GO TO M1;                   40830050
                   IF SUBS ! 0 THEN GO TO M2;                           40835000
                   CLIM ~ 0; CY ~ 2; CCY[0] ~ 0; CCY[1] ~ OCURA;        40840000
                             %SET UP FOR CALL ON CORESP                 40840001
                   CCY[2] ~ OCUR; TLL~0;                                40840050
CORRESPOND:        IF NOT CORESP THEN                                   40850000
              BEGIN IF TLL = 0 THEN%                                    40855000
              BEGIN                                                     40860050
         COMMENT NO ELEMENT ITEMS IN MOVE GROUP;%                       40865000
                   ERP1(102,43,76,0); GO TO MXIT;                       40870000
              END;                                                      40875000
                   DN; IF KEY=502 THEN DN; IF TYPE=1 OR   COMMENT N-10; 40876000
                   TYPE=3 OR SCLAS=7 THEN GO TO MXIT;     COMMENT N-10; 40877000
                   GO TO M4;   %                                        40880000
              END;                                                      40880050
                   HQX~HRX~0;                             COMMENT N-16; 40882000
                   TLL ~ 1; AOCUR ~ CSP[1]; BOCUR ~ CSP[2];             40885000
                             %SET UP VARIABLES TO LOOK LIKE             40885001
                   ASIZ ~ MAPSZ(AOCUR); CLA ~ OCLAS(AOCUR);%NORMAL MOVE 40885020
                   CLB ~ OCLAS(BOCUR); AUSAGE ~ OUSG(AOCUR);            40885040
                   JCV(OILNK(BOCUR)+2,J,K); IF INFO[J,K]  COMMENT N-10; 40885045
                   .[18:15]!0 AND CLB=2 THEN CLB~5;       COMMENT N-10; 40885050
                   BUSAGE ~ OUSG(BOCUR); SGA ~ OSGN(AOCUR);             40885060
                   SGB ~ OSGN(BOCUR); BSIZ~MAPSZ(BOCUR);%               40890000
                   OAS(BPX,BQX,BRX,BOCUR); RXD~BRX;                     40892000
                   OAS(APX,AQX,ARX,AOCUR);                              40893000
                   AHOM~TRUE; BHOM~TRUE; JCV(OILNK(BOCUR)+1,J,K);%      40895000
                   BJSF ~ INFO[J,K].[1:2];                     %CJC 024 40895010
                   GO TO M13;                                  %CJC 024 40900000
M5:                                                                     40900010
                   IF TYPE = 6 THEN                                     40900020
              BEGIN  JCV(OILNK(OCUR),J1,K1);                            40900040
                   IF INFO[J1,K1+1].[44:4] ! 14 THEN GO TO M1;          40900060
                   EMIL(OPR,MKS);EMIL(LITC,IODESC); EMIL(OPR,LOD);      40900080
                   DN;  IF KEY = 335 THEN                               40900100
              BEGIN  DN;                                                40900120
                   IF NOT INTEGEROPERAND THEN GO MXIT ELSE         %DATA40900140
                   IF NOT INTEGEROPERAND THEN GO MXIT;             %DATA40900180
M33:               IF KEY = 506  THEN                                   40900260
              BEGIN  DN;   IF KEY ! 354 THEN                            40900280
M34:          BEGIN  ERP1(2,8,43,57);  GO TO MXIT;                      40900300
              END;   EMIL(OPR, SSN);  DN;                               40900320
              END;                                                      40900340
              END ELSE BEGIN EMIL(LITC,0); EMIL(LITC,0) END;            40900350
                   IF KEY ! 264 THEN GO TO M34;                         40900360
                   DN; IF USAGE!1 OR RX!0 THEN                     %DATA40900370
              BEGIN SYOUT(MSG[124],ISYMB,LGTH);                    %DATA40900380
                   ERP1(40,43,34,124); GO MXIT END;                %DATA40900390
                   EMIL(LITC,PX); EMIL(OPR,LOD);                   %DATA40900400
                   EMIL(LITC,27); EMIL(OPR,COM);                        40900420
                   EMIL(OPR,CMN); EMIL(LITC,16); % REALLY A CMX    %DATA40900440
                DN;GO TO MXIT;                                     %DATA40900460
              END;                                                      40900500
                   IF KEY=512 THEN COMMENT "END";                  %DATA40901000
              BEGIN ENDE~TRUE; DN; GO TO M6;                COMMENT DF; 40902000
              END; IF KEY=450 THEN COMMENT "]";             COMMENT DF; 40903000
              BEGIN DN; DISC~TRUE;                          COMMENT DF; 40905000
              END ELSE                                      COMMENT DF; 40907000
                   IF TYPE=1 OR TYPE=17 OR SCLAS=1 OR SCLAS=5 OR SCLAS=640910000
                             %CALL GENERATOR WITH TWO ITEMS             40910001
                   THEN                                                 40912000
              BEGIN IF NOT SETLTR THEN BEGIN RECOV; GO TO MXIT; END;    40915000
                   LITFLG ~ TRUE; AOCUR ~ 0;                            40915010
                   FIGC1 ~ FIGC; ZRA1 ~ ZRA; LOW1 ~ LOW;                40915020
                   CLA ~ SCLAS; ALLL ~ ALL;%PROCESS LITERAL             40915030
                   LSYM ~ IF (ASIZ ~ LTR[27] =1) THEN LTR[0].[24:6]     40915100
                   ELSE 69; IF LSYM=48 THEN CLA~1; DN; GO TO M6;        40915150
              END;             %                                        40920000
                   IF NOT FOUND OR (TYPE!2 AND TYPE!7 AND TYPE!8 AND    40925000
                             %SENDING FIELD IS NOT LITERAL              40925001
                   TYPE!9 AND TYPE!18) THEN GO TO M4;                   40930000
                   LITFLG ~ FALSE; ALLL ~ 0; AOCUR ~ OCUR;              40930050
                   CLA ~ CLASS; OAS(APX,AQX,ARX,AOCUR);%                40935000
                   AELEF ~ OELEF(AOCUR); ASIZ ~ MAPSZ(AOCUR);           40940000
                   IF OTYP(OCUR)=18 AND USAGE=0 THEN ASIZ~6;COMMENT D-3;40941000
                   AUSAGE ~ USAGE;   SGA ~ OSGN(AOCUR);        %CJC 024 40945000
                   IF TYPE = 9 OR NOT AELEF THEN                        40950000
                             %RENAMES THRU OR GROUP ITEM                40950001
              BEGIN AHOM~GRCOMP(AOCUR,IF TYPE=9 THEN LOC2 ELSE 0,AUSAGE,40955000
                   ASIZ);                                               40960000
                   IF TYPE = 9 THEN%                                    40965000
              BEGIN  AELEF ~ FALSE; ASIZ ~ SIZE; AOCUR ~ LOC1;          40970000
                             %MAKE RENAMES THRU ITEM LOOK LIKE          40970001
                   CLA~2; AUSAGE~0;%ALPHANUMERIC GROUP ITEM             40972000
                   ATYP~TYPE;                             COMMENT N-19; 40973000
              END END;         %                                        40975000
                   IF SUBS = 0 THEN DN ELSE                             40980000
              BEGIN  OCA ~ 1; AQX ~ QAL; ARX ~ RAL; HQX ~ 0;            40981000
                   SUBLST; EMIL(LITC,QAL); EMIL(OPR,STD);               40981500
                             %STORE SUBSCRIPT VALUE                     40981501
                   IF AUSAGE!0 THEN                         COMMENT D-8;40981700
              BEGIN IF OUSG(AOCUR)=0 THEN                   COMMENT D-8;40981710
                   EMIL(OPR,DEL);GO TO M6;                  COMMENT D-8;40981720
              END;                                          COMMENT D-8;40981730
                   EMIL(LITC,RAL); EMIL(OPR,STD);         COMMENT 9-14; 40982000
              END;                                                      40982500
M6:                IF KEY ! 264 THEN COMMENT "TO"; GO TO M3; DN;        40983000
M7:                IF CNSTFLG THEN                             %CJC 054 40984000
              BEGIN CHRTRAN(ISYMB,4,MSG[124],1,LGTH);          %CJC 054 40985000
                   MSG[124].[1:5] ~ LGTH;                      %CJC 054 40986000
                   ERP1(40,146,22,124);                        %CJC 054 40987000
         % ILLEGAL CONSTANT SECTION OPERAND XXXX               %CJC 054 40988000
                   GO TO MXIT;                                 %CJC 054 40989000
              END; IF NOT FOUND OR (TYPE ! 2 AND TYPE ! 7 AND  %CJC 054 40990000
                    TYPE ! 8 AND TYPE ! 9 AND TYPE ! 18)       %CJC 054 40991000
                    OR VLF THEN GO TO M1;                      %CJC 054 40992000
                   BOCUR~OCUR; CLB~CLASS; BHOM~TRUE;      COMMENT 10-2; 40995000
                   OAS(BPX,BQX,BRX,BOCUR); BELEF ~ OELEF(BOCUR);        41000000
                   BSIZ ~ MAPSZ(BOCUR); BUSAGE ~ USAGE; BJSF ~ JS;      41005000
                   SGB ~ OSGN(BOCUR);   RXD ~ BRX;             %CJC 024 41010000
               TYPE9SIZE ~ 0;                                   %TR 661 41011000
                   IF TYPE = 9 OR NOT BELEF THEN                        41015000
                             %RENAMES THRU OR GROUP ITEM                41015001
              BEGIN BHOM~GRCOMP(BOCUR,IF TYPE=9 THEN LOC2 ELSE 0,BUSAGE,41020000
                   BSIZ); IF TYPE = 9 THEN%                             41025000
              BEGIN  BELEF ~ FALSE; BSIZ ~ SIZE; BOCUR ~ LOC1;          41030000
                             %MAKE RENAMES THRU ITEM LOOK LIKE          41030001
                   CLB~2; BUSAGE~0;%ALPHANUMERIC GROUP ITEM             41030020
               TYPE9SIZE ~ SIZE;                                %TR 661 41030025
                   IF LITFLG THEN%KLUDGE FOR LITERAL TO RENAMES THRU    41030030
              BEGIN OCA~BSIZ; MGCXFLG~TRUE;%ITEM (MGENC IS CALLED)      41030035
              END;                                        COMMENT 9-10; 41030040
              END END;         %                                        41030050
                   OCB~HQX~HRX~0;                         COMMENT 9-21; 41032000
                   IF SUBS = 0 THEN DN ELSE%                            41035000
              BEGIN OCB~1; BQX~QBL; HQX~0; BRX~RBL;       COMMENT 9-14; 41050000
                    MOVETOFLAG := TRUE;                                 41051000
                    SUBLST;                                             41052000
                    MOVETOFLAG := FALSE;                                41053000
                    EMIL(LITC,QBL);                                     41054000
                    EMIL(OPR ,STD);                                     41055000
                   HQX~QBL; HRX~RBL;                      COMMENT 9-14; 41055002
                   IF BUSAGE=0 THEN                       COMMENT 9-14; 41055005
              BEGIN  EMIL(LITC,RBL); EMIL(OPR,STD);                     41055010
              END  ELSE IF OUSG(BOCUR)=0 THEN EMIL(OPR,DEL);COMMENT D-8;41055015
              END;                                        COMMENT 9-16; 41055020
                   IF OTYP(BOCUR)!9 THEN                  COMMENT N-10; 41055022
              BEGIN JCV(OILNK(BOCUR)+2,J,K); IF INFO[J,K] COMMENT N-10; 41055024
                             %IF ITEM IS ALPHANUMERIC ELEMENTARY        41055025
                   .[18:15]!0 AND CLB=2 AND BELEF THEN    COMMENT N-10; 41055026
                   CLB~5;                                 COMMENT N-10; 41055027
              END;                                        COMMENT N-10; 41055028
                   IF KEY=463 THEN GO TO M28; COMMENT "]";  COMMENT DF; 41055030
                   IF DISC THEN GO TO M3;                   COMMENT DF; 41055032
                   IF KEY=450 THEN GO TO M28; COMMENT "[";  COMMENT DF; 41055034
                   IF NOT LITFLG THEN GO TO M13;            COMMENT DF; 41055036
                   IF NOT BHOM AND LSYM=0 AND ALLL!0 THEN COMMENT N-  ; 41055040
              BEGIN BHOM~TRUE; BUSAGE~0;                  COMMENT N-  ; 41055050
              END;                                        COMMENT N-  ; 41055060
                   SGP~FALSE; IF CLB=4 THEN                             41055100
                             %PREPARE TO EMIT CODE FOR LITERAL          41055101
              BEGIN JCV(BOCUR,X,Y); JCV(OILNK(BOCUR)+1,J,%SENDING FIELD 41055200
                             %IF RECEIVING PC IS "+" "-" "J"            41055201
                   K); IF BSIZ=1 AND (DICT[X,Y].[12:1]=1                41055300
                             %OR "S" ONLY ALLOWABLE LITERAL IS          41055301
                   OR INFO[J,K].[10:1]=1) THEN SGP~TRUE;%"+" OR "-"     41055400
              END;                                        COMMENT 9-24; 41055500
                   IF NOT ZOBOL THEN                                    41055900
         COMMENT MOVE TRUNCATION;                                       41055950
              BEGIN JCV(OILNK(BOCUR)+1,J,K);                            41056000
                   IF (((LTR[28]>INFO[J,K].[13:6] OR                    41056500
                   LTR[29]>OSCALE(BOCUR)) AND CLB>2 AND CLB<5 AND       41057000
               NOT SGP) OR ASIZ > IF TYPE9SIZE = 0 THEN         %TR 661 41057200
               OFSZ(BOCUR) ELSE TYPE9SIZE)                      %TR 661 41057210
                   AND ALL=0 THEN ERP(43&81[32:40:8],0);                41057500
              END;                                                      41058000
                   IF (SGP AND LSYM!16 AND LSYM!44) OR    COMMENT 9-24; 41059000
                   (NOT BHOM AND OTYP(BOCUR)!7) THEN      COMMENT 9-24; 41060000
         COMMENT ILLEGAL MOVE OPERAND CLASS;%                           41065000
M8:           BEGIN ERP(40&43[32:40:8]&22[24:40:8]&                     41070000
                   39[16:40:8],0); COMPE~TRUE;                          41072000
M9:                JCV(OILNK(BOCUR)+1,J,K);                             41073000
                   MGCXFLG ~ FALSE;                             %TR 821 41074000
                   IF INFO[J,K].[3:1]!0 THEN%CHECK FOR MONITOR          41075000
                   MONGEN(BOCUR,HQX,HRX);                               41077000
M10:               IF KEY=502 THEN DN ELSE                COMMENT 10-9; 41078000
                    IF TYPE=1 OR SCLAS =7 THEN GO TO MXIT       %TR-151 41080000
                    ELSE IF TYPE=3 THEN                         %TR-151 41081000
              BEGIN ERP(79,0); COMPE~TRUE; GO TO MXIT;          %TR-151 41082000
              END;             %                                        41085000
                   IF COR THEN GO TO CORRESPOND; GO TO M7;              41085005
              END;             %                                        41085010
                   IF (CLA!1 AND CLB=1) OR (CLA=1 AND     COMMENT 9-11; 41085012
                   ((CLB=4 AND NOT SGP) OR                COMMENT 9-24; 41085013
                   (CLB=3 AND BELEF))) THEN               COMMENT 9-24; 41085015
         COMMENT POSSIBLE MOVE CLASS ERROR;                             41085017
                   ERP(93&43[32:40:8]&39[24:40:8]&                      41085020
                   8[16:40:8],0);                                       41086000
                   IF ALLL!0 AND CLA=5 THEN GO TO M8;                   41086500
                             %IF ALL REAL NUMBER                        41086501
                   IF BUSAGE!0 THEN                                     41087000
              BEGIN IF CLA=1 THEN                                       41087500
M11:          BEGIN IF OTYP(BOCUR)!7 THEN GO TO M8;                     41088000
                             %IF NON-NUM LIT TO CMP                     41088001
                   GO TO MG;                                            41088500
              END;                                                      41089000
                   IF BELEF THEN                                        41089500
              BEGIN MVL(BOCUR,HQX,0); GO TO M9;%LITERAL TO CMP          41090000
              END;                                                      41090500
                   IF ALLL!0 AND ASIZ=1 AND LSYM=0                      41091000
                   THEN GO TO M11A; GO TO M11;            COMMENT N-16; 41091500
              END;                                                      41091700
                   IF ALLL=0 OR LSYM=69 OR CLB=4                        41092000
                   OR BJSF ! 0 OR CLB = 5 THEN                 %CJC 024 41095000
                             %                                          41095001
MG:           BEGIN IF ATYP=9 THEN                        COMMENT N-19; 41095005
              BEGIN RNL~99999999999; OCA~ASIZ;            COMMENT N-19; 41095010
              END;                                        COMMENT N-19; 41095012
                   MGENC(AOCUR,BOCUR,LITFLG,ZRA1,FIGC1,   COMMENT N-19; 41095015
                   LOW1,OCA,OCB,ALLL,0,0,RAL,RBL,QAL,QBL,%              41095020
                   FLOATED); GO TO M9;                                  41095030
              END;             %IF MOVE SPACE TO ELEM. NUM. DISP.       41095040
M11A:                                                     COMMENT N-16; 41097000
                   IF CLB=3 AND BELEF AND LSYM=48 THEN LSYM~0;          41100000
                             %THEN MOVE ZEROS                           41100001
                   A1~0;                                  COMMENT N-16; 41100005
                   IF OCB!0 THEN                          COMMENT N-16; 41100010
              BEGIN IF RXD!0 OR BSIZ MOD 8!0 THEN         COMMENT N-16; 41100020
                             %IF NOT MOVE ZEROS OR SPACES               41100021
              BEGIN IF LSYM!0 AND LSYM!48 THEN GO TO MG;  COMMENT N-16; 41101000
                   A1~999;                                COMMENT N-16; 41102000
              END;                                        COMMENT N-16; 41103000
              END;                                        COMMENT N-16; 41104000
                   EMIL(OPR,MKS);%                                      41105000
                   IF OCB!0 THEN EMIL(OPDC,BRX);          COMMENT N-16; 41107000
                   EMIL(IF OCB=0 THEN LITC ELSE OPDC,BQX);              41110000
                   EMIL(DESC,BPX);                        COMMENT N-16; 41111000
                   IF A1=999 THEN GO TO M12;              COMMENT N-16; 41111500
                   EMIL(OPR,CMN);                         COMMENT N-16; 41112000
COMMENT TEMPORARY; SGMTLVL~SGMTLVL+1;                                   41112200
                   IF OCB!0 AND BUSAGE=0 THEN             COMMENT N-16; 41112250
              BEGIN CEMLT(2,CRF); CEMLT(0,SFD);           COMMENT N-16; 41112300
              END ELSE                                    COMMENT N-16; 41112350
                   IF RXD!0 THEN CEMLT(RXD,SFD);          COMMENT N-16; 41112400
                   IF OTYP(BOCUR)=7 THEN BSIZ             COMMENT N-16; 41112420
                   ~((BSIZ+7)DIV 8)|8;                    COMMENT N-16; 41112450
                   IF BSIZ-(K~8-RXD)<16 THEN              COMMENT N-16; 41112500
              BEGIN CEMLT(BSIZ,TRP); FOR J~1 STEP 2 UNTIL COMMENT N-16; 41113000
                   BSIZ DO CEMLT(LSYM,LSYM); GO TO M21;   COMMENT N-16; 41113500
              END;                                        COMMENT N-16; 41114000
                   IF K=8 THEN K~0;                       COMMENT N-16; 41114200
                   IF K!0 THEN                            COMMENT N-16; 41114300
              BEGIN CEMLT(K,TRP); FOR J~1 STEP 2 UNTIL K  COMMENT N-16; 41114400
                   DO CEMLT(LSYM,LSYM);                   COMMENT N-16; 41114500
              END;                                        COMMENT N-16; 41114600
                   IF RXD!0 OR (OCB!0 AND BUSAGE=0)       COMMENT N-16; 41114650
                   OR K!0 THEN                            COMMENT N-16; 41114670
                   CEMLT(1,SDA); CEMLT(1,RSA);            COMMENT N-16; 41114700
                   CEMLT(8,TRP);                          COMMENT N-16; 41114800
                   CEMLT(LSYM,LSYM); CEMLT(LSYM,LSYM);    COMMENT N-16; 41114900
                   CEMLT(LSYM,LSYM); CEMLT(LSYM,LSYM);    COMMENT N-16; 41115000
                   BSIZ~BSIZ-8-K; T7~BSIZ DIV 8;          COMMENT N-16; 41115100
                   IF T8~T7 DIV 63 ! 0 THEN               COMMENT N-16; 41115200
              BEGIN IF T8>1 THEN CEMLT(T8,BNS);           COMMENT N-16; 41115300
                   IF OCB = 1 THEN                              %TR 736 41115400
              BEGIN CEMLT(8,BNS);      CEMLT(63,TRS);           %TR 736 41115500
                   CEMLT(0,ENS);                                %TR 736 41115600
              END  ELSE CEMLT(63,TRW);                          %TR 736 41115700
                   IF T8 > 1 THEN CEMLT(0,ENS);                 %TR 736 41115800
              END;                                              %TR 736 41115900
                   IF T9 ~ T7 MOD 63 ! 0 THEN                   %TR 736 41116000
                   IF OCB = 1 THEN                              %TR 736 41116100
                   IF T9 < 8 THEN CEMLT(T9 | 8,TRS) ELSE        %TR 736 41116200
              BEGIN CEMLT(8,BNS);                               %TR 736 41116300
                   CEMLT(T9,TRS);      CEMLT(0,ENS);            %TR 736 41116400
              END                                               %TR 736 41116500
                   ELSE CEMLT(T9,TRW);                          %TR 736 41116600
                   IF I ~ BSIZ MOD 8 ! 0 THEN                   %TR 736 41116700
              BEGIN CEMLT(I,TRP);                               %TR 736 41116800
                   FOR J ~ 1 STEP 2 UNTIL I DO CEMLT(LSYM,LSYM);%TR 736 41117000
              END;                                        COMMENT N-16; 41118000
                   GO TO M21;                             COMMENT N-16; 41119000
M12:                                                      COMMENT N-16; 41119500
                   EMIL(IF OCB=0 THEN LITC ELSE OPDC,BRX);              41120000
                   EMIL(LITC,BSIZ DIV 3969);                            41122000
                   EMIL(LITC,(T8~BSIZ MOD 3969) DIV 63);%               41125000
                   EMIL(LITC,T6~T8 MOD 63);%                            41130000
                   EMIL(OPDC,IF LSYM=0 THEN OCLRCHRZ                    41135000
                             %CLEAR CHAR TO ZERO OR SPACE               41135001
                   ELSE OCLRCHRB); GO TO M9;                            41140000
M13:               IF ENDE THEN                             COMMENT DF; 41140010
              BEGIN EMIL(OPR,MKS);                          COMMENT DF; 41140030
                   IF OCB!0 THEN EMIL(OPDC,BRX);            COMMENT DF; 41145000
                             %SET "CALL DN" FLAG                        41145001
                   EMIL(IF OCB=0 THEN LITC ELSE OPDC,BQX);  COMMENT DF; 41150000
                             %IF CONSTANT SECTION OR 88 ENTRY THEN      41150001
                   EMIL(DESC,BPX); EMIL(OPR,CMN);           COMMENT DF; 41152000
COMMENT TEMPORARY; SGMTLVL~SGMTLVL+1;                       COMMENT DF; 41155010
                   IF OCB!0 THEN                            COMMENT DF; 41155012
              BEGIN CEMLT(2,CRF); CEMLT(0,SFD);             COMMENT DF; 41155016
              END ELSE IF BRX!0 THEN CEMLT(BRX,SFD);        COMMENT DF; 41155020
                   CEMLT(1,TRP); CEMLT(31,31); COMMENT "~"; COMMENT DF; 41155050
                   CEMLT(0,CMX);                            COMMENT DF; 41160000
                             %                                          41160001
COMMENT TEMPORARY; SGMTLVL~SGMTLVL-1; GO TO M9;             COMMENT DF; 41170000
                             %                                          41170001
              END;                                          COMMENT DF; 41175010
                   IF NOT ZOBOL THEN                        COMMENT DF; 41176000
         COMMENT MOVE TRUNCATION;                                       41176200
              BEGIN JCV(OILNK(BOCUR)+1,J,K);                            41176500
                   JCV(OILNK(AOCUR)+1,X,Y);                             41177000
                   IF ((INFO[X,Y].[13:6]>INFO[J,K].[13:6]               41177500
                   OR OSCALE(AOCUR)>OSCALE(BOCUR)) AND                  41178000
               CLB > 2 AND CLB < 5) OR                          %TR 661 41178200
               OFSZ(AOCUR) > IF TYPE9SIZE = 0 THEN OFSZ(BOCUR)  %TR 661 41178300
                                              ELSE TYPE9SIZE    %TR 661 41178400
                   THEN ERP(43&81[32:40:8], 0);          COMMENT SI-5;  41178500
              END;                                                      41179000
                   IF NOT(AELEF AND BELEF) THEN BJSF ~ 0;      %CJC 024 41179500
                             %NO JUSTIFIED OPTION FOR GROUP MOVES       41179501
                   IF NOT (AHOM AND BHOM) THEN GO TO M17;               41180000
                             %IF NOT HOMOGENEOUS MOVE                   41180001
                   IF CLB=4 THEN%IF EDITED NUMERIC                      41185000
              BEGIN JCV(OILNK(BOCUR)+1,J,K);              COMMENT N-30; 41186000
                   JCV(BOCUR,X,Y); SGP~BSIZ=1 AND         COMMENT 9-25; 41186500
                   (INFO[J,K].[10:1]=1 OR DICT[X,Y].[12:1 COMMENT 9-25; 41187000
                   ]=1); IF SGP THEN%SGP TRUE IF SENDING AND RECEIVING  41187200
              BEGIN IF CLA!4 THEN GO TO M17;                            41187400
                             %FIELDS HAVE A PC OF "+""-""J"             41187401
                   JCV(OILNK(AOCUR)+1,J,K);%OR "S"                      41187500
                   JCV(AOCUR,X,Y); IF ASIZ=1 AND (INFO[J, COMMENT 9-25; 41187700
                   K].[10:1]=1 OR DICT[X,Y].[12:1]=1)     COMMENT 9-25; 41187800
                   THEN GO TO MG; GO TO M17;              COMMENT 9-04; 41188000
              END;                                        COMMENT 9-04; 41189000
                   IF CLA=4 THEN GO TO M17;               COMMENT 9-25; 41189500
                   IF AUSAGE!0 THEN                                     41190000
              BEGIN IF AELEF THEN GO TO M25; GO TO M17;                 41192000
              END;             %                                        41195000
M14:               IF CLA=1 THEN                                        41200000
         COMMENT POSSIBLE MOVE CLASS ERROR;                             41205000
                   ERP(93&43[32:40:8]&39[24:40:8]&                      41207000
                   8[16:40:8],0); GO TO MG;%                            41210000
              END;                                                      41215000
                   IF BUSAGE!0 THEN                                     41215500
              BEGIN IF AELEF THEN%                                      41220000
              BEGIN IF NOT BELEF OR CLA=4 THEN GO TO M17;               41222000
                   IF CLA=1 THEN                                        41223000
         COMMENT POSSIBLE MOVE CLASS ERROR;                             41224000
                   ERP(93&43[32:40:8]&39[24:40:8]&                      41224500
                   8[16:40:8],0); GO TO M25;%                           41225000
              END;                                                      41225005
                   IF AUSAGE=0 THEN GO TO M17;                          41225007
M15:               IF BJSF = 0 THEN GO TO M18;  GO TO MG;      %CJC 024 41225010
              END;             %                                        41230000
                   IF CLB ! 3 THEN GO TO M16;                   %TR 743 41231000
                   IF NOT BELEF THEN                            %TR 743 41232000
              BEGIN CLB ~ 2;           GO TO M16;               %TR 743 41233000
              END;                                              %TR 743 41234000
                   IF AUSAGE=0 THEN                                     41235000
              BEGIN IF CLA=4 THEN GO TO M17;%                           41235020
                   IF BELEF THEN GO TO M14; GO TO M15;%                 41235040
              END;             %                                        41240000
                   IF NOT AELEF THEN GO TO M17;                         41245000
                   IF BELEF THEN GO TO M25; GO TO M15;%                 41250000
M16:               IF AUSAGE=0 THEN                                     41250050
              BEGIN IF CLB=2 OR CLB=5 THEN                COMMENT N-10; 41255000
              BEGIN IF AELEF AND BELEF AND CLB=5 THEN GO  COMMENT N-10; 41260000
                             %                                          41260001
                   TO MG; GO TO M15;                      COMMENT N-10; 41262000
              END;             %                                        41265000
                   IF CLA=4 THEN GO TO M17;                             41275000
                   IF CLA=3 THEN                                        41275010
         COMMENT POSSIBLE MOVE CLASS ERROR;                             41275020
                   ERP(93&43[32:40:8]&39[24:40:8]&                      41275025
                   8[16:40:8],0); GO TO M15;                            41275030
              END;                                                      41275040
                   IF NOT AELEF THEN GO TO M17;                         41275050
                   IF T6~OFSZ(AOCUR)<BSIZ THEN                          41275052
                             %CMP TO ALPHA OR ALPHANUMERIC              41275053
              BEGIN EMIL(OPR,MKS);                                      41275055
                   EMIL(IF OCB=0 THEN LITC ELSE OPDC,BQX);              41275060
                   EMIL(DESC,BPX);                                      41275070
                   EMIL(IF OCB=0 THEN LITC ELSE OPDC,BRX);              41275080
                   EMIL(LITC,BSIZ DIV 3969);                            41275090
                   EMIL(LITC,(T8~BSIZ MOD 3969) DIV 63);                41275100
                   EMIL(LITC,T9~T8 MOD 63);                             41275110
                   EMIL(OPDC,OCLRCHRB);%FIRST CLEAR AREA TO SPACE       41280000
              END;                                                      41280005
                   IF CLB=1 THEN%                                       41280010
         COMMENT POSSIBLE MOVE CLASS ERROR;%                            41280020
                   ERP(93&43[32:40:8]&39[24:40:8]&                      41280050
                   8[16:40:8],0);                                       41280200
                   A1~IF T6>BSIZ THEN BSIZ ELSE T6;                     41280210
                   IF A1>11 THEN%                                       41285000
              BEGIN IF OCA=0 THEN EMIL(LITC,AQX+1) ELSE%                41290000
              BEGIN EMIL(LITC,1); EMIL(OPDC,AQX);                       41292000
                   EMIL(OPR,ADD);                                       41293000
              END;             %                                        41295000
                   EMIL(OPDC,APX);                                      41297000
              END;                                                      41298000
                   IF AUSAGE=2 THEN EMIL(OPDC,AQX) ELSE%                41299000
              BEGIN EMIL(IF OCA=0 THEN LITC ELSE OPDC,AQX);%            41300000
                   EMIL(OPDC,APX);                                      41300050
              END;                                                      41301000
                   RPREC~T6>11;                                         41301200
                   IF T6>BSIZ THEN SRT(T6-BSIZ);                        41301500
                   IF A1 < 9 THEN                                       41302000
              BEGIN EMIL(LITC,STDLOC); EMIL(OPR,ISN);%                  41305000
              END;                                                      41305005
                   EMIL(OPR,MKS);%OUTPUT CONVERT CMP TO ALPHA OR AN     41305010
                   EMIL(IF OCB=0 THEN LITC ELSE OPDC,BQX);%             41305020
                   EMIL(DESC,BPX);%                                     41305030
                   EMIL(IF OCB=0 THEN LITC ELSE OPDC,BRX);%             41305040
                   EMIL(LITC,REAL(SGA=2)); EMIL(LITC,A1);%              41305060
                   EMIL(OPDC,IF A1>8 THEN OCV1L ELSE OC1L);             41305070
                   EMIL(OPR,DEL);                         COMMENT 9-03; 41305072
                   IF A1>11 THEN EMIL(OPR,DEL); GO TO M9; COMMENT 9-03; 41305074
M17:               IF OTYP(AOCUR)!7 OR OTYP(BOCUR)!7                    41305078
                   THEN GO TO M8;                                       41305080
M18:          BEGIN                                            %CJC 023 41305100
    LABEL     M19,M20;                                         %CJC 023 41305200
                   EMIL(OPR,MKS); %PREPARE FOR GROUP MOVE      %CJC 023 41306000
                   EMIL(IF OCA=0 THEN LITC ELSE OPDC,AQX);              41307000
                   EMIL(DESC,APX); PXS ~ 2;                             41308000
                   SIZ ~ IF ASIZ>BSIZ THEN BSIZ ELSE ASIZ;              41309000
                   IF OTYP(AOCUR)=7 AND OTYP(BOCUR)=7 THEN%             41310000
              BEGIN T10 ~ 1; GO TO M19;%                                41315000
              END;             %                                        41320000
                   T10~0;      %                                        41325000
                   IF SIZ MOD 8=0 AND (ARX+BRX+OCA        COMMENT 9-18; 41325005
                   +OCB=0 OR (AUSAGE!0 AND BUSAGE!0)) THEN              41325010
M19:          BEGIN T6~1; T5~(SIZ+7) DIV 8;%PREPARE FOR WORD MOVE       41325020
                   T7~T5 DIV 63; T8~T5 MOD 63;                          41330000
              END ELSE                                                  41335000
              BEGIN IF OCA!0 THEN%                                      41340000
              BEGIN PXS~PXS+1; EMIL(OPDC,ARX);                          41345000
              END;             %                                        41350000
                   IF OCB!0 THEN                                        41355000
              BEGIN PXS~PXS+1; EMIL(OPDC,BRX);%                         41360000
              END;             %                                        41365000
                   T6~0; T7~SIZ DIV 3969;                               41370000
                   T8~(T9~SIZ MOD 3969) DIV 63;                         41375000
                             %PREPARE FOR CHARACTER MOVE                41375001
                   T9~T9 MOD 63;                                        41380000
              END;                                                      41380010
                   EMIL(IF OCB=0 THEN LITC ELSE OPDC,BQX);%             41385000
                   EMIL(DESC,BPX); EMIL(OPR,CMN);%                      41390000
COMMENT TEMPORARY; SGMTLVL~SGMTLVL+1;                                   41390001
                   CEMLT(PXS,RSA);                                      41395000
                   IF T6!0 THEN                                         41410000
              BEGIN IF T7 !0 THEN%                                      41415000
              BEGIN CEMLT(T7,BNS); CEMLT(63,TRW);                       41420000
                   CEMLT(0,ENS);                                        41420010
              END;                                                      41420012
                   IF T8!0 THEN CEMLT(T8,TRW); GO TO M20;               41420015
              END;                                                      41420020
                   IF OCA!0 THEN                                        41420040
              BEGIN CEMLT(PXS-1,CRF); CEMLT(0,SFS);                     41420060
              END ELSE IF ARX!0 THEN CEMLT(ARX,SFS);%                   41425000
                   IF OCB!0 THEN%                                       41430000
              BEGIN CEMLT(2,CRF); CEMLT(0,SFD);%                        41435000
              END ELSE IF BRX!0 THEN CEMLT(BRX,SFD);                    41440000
                   IF T7!0 THEN                                         41445000
              BEGIN CEMLT(T7,BNS); CEMLT(63,BNS);%                      41445010
                   CEMLT(63,TRS); CEMLT(0,ENS);                         41445011
                   CEMLT(0,ENS);                                        41445012
              END;             %                                        41445030
                   IF T8!0 THEN                                         41445040
              BEGIN CEMLT(T8,BNS);                                      41445100
                   CEMLT(63,TRS); CEMLT(0,ENS);%                        41450000
              END;             %                                        41450010
                   IF T9!0 THEN CEMLT(T9,TRS);%                         41450020
M20:          END;                                             %CJC 023 41450025
                   IF T10 ! 0 OR ASIZ } BSIZ THEN              %CJC 023 41450030
M21:          BEGIN            %                                        41450040
                   CEMLT(0,CMX);%                                       41450050
COMMENT TEMPORARY; SGMTLVL~SGMTLVL-1;                                   41450051
                   GO TO M9;   %                                        41450060
              END;             %                                        41450065
                   IF BUSAGE!0 THEN%                                    41450070
              BEGIN LSYM~0; GO TO M23;%                                 41450080
              END;             %                                        41450090
                   LSYM~48;    %                                        41450100
                   IF OCB=0 THEN GO TO M23;%                            41450110
                   T7~(BSIZ-ASIZ) DIV 3969;               COMMENT N-16; 41450120
                             %RECEIVING FIELD IS LONGER THAN            41450121
                   T8~(T9~(BSIZ-ASIZ) MOD 3969) DIV 63;   COMMENT N-16; 41450130
                             %SENDING. CLEAR REMAINING CHAR             41450131
                   T9~T9 MOD 63;%TO SPACE OR ZERO. RECEIVING FIELD      41450140
                   IF T7!0 THEN%IS SUBSCRIPTED.                         41450150
              BEGIN CEMLT(T7,BNS); CEMLT(63,BNS);%                      41450160
                   CEMLT(9,BNS); CEMLT(7,TRP);%                         41450170
                   CEMLT(LSYM,LSYM); CEMLT(LSYM,LSYM);%                 41450180
                   CEMLT(LSYM,LSYM); CEMLT(LSYM,LSYM);                  41450200
                   CEMLT(0,ENS); CEMLT(0,ENS);                          41450210
                   CEMLT(0,ENS);                                        41450220
              END;                                                      41450250
                   IF T8!0 THEN                                         41450300
              BEGIN CEMLT(T8,BNS); CEMLT(9,BNS);%                       41455000
                   CEMLT(7,TRP);%                                       41460000
                   CEMLT(LSYM,LSYM); CEMLT(LSYM,LSYM);%                 41465000
                   CEMLT(LSYM,LSYM); CEMLT(LSYM,LSYM);%                 41470000
                   CEMLT(0,ENS); CEMLT(0,ENS);            COMMENT N-16; 41472000
              END;                                                      41475000
M22:               IF T9{0 THEN GO TO M21;                COMMENT 9-17; 41480000
                   CEMLT(T9,TRP);%                                      41480010
                   FOR K~1 STEP 2 UNTIL T9 DO%                          41480020
                   CEMLT(LSYM,LSYM); GO TO M21;%                        41480030
M23:               IF K~8-((RXD+SIZ) MOD 8)>J~BSIZ-SIZ    COMMENT 9-18; 41480040
                   THEN K~J; SIZ~J;                       COMMENT 9-18; 41480050
                   IF K!0 THEN                            COMMENT 9-18; 41482000
              BEGIN IF SIZ<16 THEN                        COMMENT 9-18; 41483000
              BEGIN K~SIZ; SIZ~0;%ADJUST TO NEXT WORD FOR WORD          41484000
              END ELSE SIZ~SIZ-K; CEMLT(K,TRP);                         41485000
                             %TRANSFER OF SPACE OR ZERO                 41485001
                   FOR J~1 STEP 2 UNTIL K DO%                           41485050
                   CEMLT(LSYM,LSYM);%                                   41490000
              END;             %                                        41490020
                   IF SIZ<8 THEN GO TO M24;%                            41490030
                   T7~SIZ DIV 8; T8~(T7-1) DIV 63;                      41490040
                   T9~(T7-1) MOD 63;                                    41490050
                   IF T8!0 OR T9!0 THEN                                 41492000
              BEGIN CEMLT(PXS,SDA); CEMLT(PXS,RSA);                     41493000
              END;             %                                        41495000
                   CEMLT(8,TRP);%                                       41495050
                   CEMLT(LSYM,LSYM); CEMLT(LSYM,LSYM);%                 41500000
                   CEMLT(LSYM,LSYM); CEMLT(LSYM,LSYM);%                 41505000
                   IF T8!0 THEN%                                        41510000
              BEGIN CEMLT(T8,BNS); CEMLT(63,TRW);%                      41515000
                   CEMLT(0,ENS);                                        41520000
              END;                                                      41525000
                   IF T9!0 THEN CEMLT(T9,TRW);                          41530000
                   SIZ~SIZ MOD 8;%                                      41535000
M24:               T9~SIZ; GO TO M22;                                   41535002
M25:               ACC~FALSE; BSIZ~OFSZ(BOCUR);                         41535011
                   ARP~OSCALE(AOCUR); BRP~OSCALE(BOCUR);                41535012
                   JCV(OILNK(AOCUR)+1,J,K); ALP~ INFO[J,K].[13:6];      41535013
                   JCV(OILNK(BOCUR)+1,J,K);     BLP ~ INFO[J,K].[13:6]; 41535014
                   IF ARP<0 THEN                                        41535015
              BEGIN ALP~ALP-ARP; ARP~0;                                 41535016
              END;                                                      41535020
                   IF BRP<0 THEN%                                       41535050
              BEGIN BLP~BLP-BRP; BRP~0;                                 41540000
              END;                                                      41540050
                   ASIZ~OFSZ(AOCUR);                                    41540060
                   IF BRP-BSIZ}ARP OR BLP-BSIZ}ALP OR                   41544000
                   ARP-ASIZ}BRP OR ALP-ASIZ}BLP THEN%                   41545000
              BEGIN EMIL(LITC,0);%SENDING FIELD OUT OF RANGE OF         41550000
                   IF BSIZ>11 THEN EMIL(LITC,0);%RECEIVING FIELD        41555000
                   A1~99999;                                            41555500
                   ACC~TRUE; GO TO M26;%                                41560000
              END;             %                                        41565000
                   A1~IF AUSAGE=0 AND SGA!2 AND ALP>BLP                 41565500
                             %IF SENDING IS DISPLAY AND SGA!J           41565501
                   THEN ALP-BLP ELSE 0;%DO LEFT AND RIGHT TRUNCATION IN 41566000
                   IF RNL~ARP-BRP<0 OR SGA=1 OR AUSAGE!0                41566500
                             %VALU RATHER THAN IN ESTORE.               41566501
                   THEN RNL~0;                            COMMENT 12-7; 41567000
                   VALU(AOCUR,SEG,IF OCA=0 THEN 0 ELSE    COMMENT 12-7; 41567500
                   QAL,IF OCA=0 THEN 0 ELSE RAL,2);       COMMENT 12-7; 41568000
                   RNL~0;                                 COMMENT 12-7; 41568500
M26:                                                                    41755000
                   ESTORE(AOCUR,BOCUR,HQX,HRX); GO TO  M10;             41760000
M28:               DN; IF OCA+OCB!0 THEN GO TO M2;          COMMENT DF; 41765000
                   ASIZ~OFSZ(AOCUR);                        COMMENT DF; 41765050
                   IF BSIZ~OFSZ(BOCUR)>11 THEN GO TO M31;   COMMENT DF; 41770000
                             %IF LITERAL MOVE                           41770001
                   IF BUSAGE=0 THEN GO TO M30;              COMMENT DF; 41775000
                             %IF NOT EDITED-NUMERIC AND DISPLAY         41775001
                   IF NOT DISC THEN GO TO M29;              COMMENT DF; 41780000
                             %RECEIVING FIELD SIZE                      41780001
                   IF ASIZ>6 THEN ASIZ~6;                   COMMENT DF; 41785000
                             %IF MOVE ZEROS OR BLANKS OR " "            41785001
                   EMIL(OPR,MKS); EMIL(LITC,AQX);           COMMENT DF; 41785010
                   EMIL(DESC,APX); EMIL(LITC,BQX);          COMMENT DF; 41785030
                   EMIL(DESC,BPX); EMIL(OPR,CMN);           COMMENT DF; 41785040
COMMENT TEMPORARY; SGMTLVL~SGMTLVL+1;                       COMMENT DF; 41785045
                   CEMLT(2,RSA);                            COMMENT DF; 41785050
                   IF ARX ! 0 THEN CEMLT(ARX,SFS);                      41790000
                             %GET RECEIVING FIELD ASSIGNMENT            41790001
                   CEMLT(I~8-ASIZ,TRP);                     COMMENT DF; 41795000
                   FOR J~1 STEP 2 UNTIL I DO CEMLT(0,0);    COMMENT DF; 41800000
                             %WORD INDEX AND DESCRIPTOR FOR             41800001
                   CEMLT(ASIZ,TRS); CEMLT(0,CMX);           COMMENT DF; 41805000
                             %   RECEIVING FIELD                        41805001
COMMENT TEMPORARY; SGMTLVL~SGMTLVL-1;                       COMMENT DF; 41805500
                   GO TO M9;   %CHARACTER ADDRESS OF RECEIVING          41810000
M29:               IF AUSAGE=0 THEN                         COMMENT DF; 41815000
                             %USE SIZE OF < 63                          41815001
         COMMENT ILLEGAL USAGE MOVE OPERAND;                COMMENT DF; 41820000
M30:          BEGIN ERP1(40,43,16,22); GO TO MXIT;          COMMENT DF; 41825000
                             %CALL "ZERO-AREA" OR "BLANK-AREA"          41825001
              END;                                          COMMENT DF; 41825050
                   IF ASIZ>11 THEN                          COMMENT DF; 41830000
                             %UPDATE COUNTS FOR ITERATION               41830001
         COMMENT ILLEGAL MOVE OPERAND SIZE;                 COMMENT DF; 41835000
M31:          BEGIN ERP1(40,16,22,15); GO TO MXIT;          COMMENT DF; 41835010
              END;                                          COMMENT DF; 41835020
                   IF SCLAS!6 THEN GO TO M3;                COMMENT DF; 41835030
                   IF D1~ICV1(ISYMB[0],4,0,LGTH)>47 OR      COMMENT DF; 41835040
                   D1 < 1 THEN GO TO M3; DN;                            41840000
                   IF KEY!467 THEN GO TO M3; COMMENT ":";   COMMENT DF; 41845000
                   DN; IF SCLAS!6 THEN GO TO M3;            COMMENT DF; 41850000
                   IF D2~ICV1(ISYMB[0],4,0,LGTH)>47 OR      COMMENT DF; 41855000
                   D2 < 1 THEN GO TO M3; DN;                            41855010
                   IF KEY!467 THEN GO TO M3; COMMENT ":";   COMMENT DF; 41860000
                   DN; IF SCLAS!6 THEN GO TO M3;            COMMENT DF; 41860050
                   IF (D3~ICV1(ISYMB[0],4,0,LGTH))+D1>48    COMMENT DF; 41860060
                   THEN GO TO M3; DN;                       COMMENT DF; 41865000
                             %CALL MOVE GENERATOR                       41865001
                             %     GETA - SENDING FIELD OCUR            41865002
                             %     GETB - RECEIVING FIELD OCUR          41865003
                             %     LITF - LITERAL MOVE                  41865004
                             %     ZRA - MOVE "ZEROS"                   41865005
                             %     LOW - MOVE "LOW-VALUE"               41865006
                             %     OCA - SENDING OCCURS ITEM            41865007
                             %     OCB - RECEIVING IS OCCURS ITEM       41865008
                   IF KEY!463 THEN GO TO M3; COMMENT "]";   COMMENT DF; 41870000
                             %     ALL - MOVE " AAA " . . .             41870001
                             %     RAL - COMPUTED SUBSCR CHAR           41870002
                             %     RBL - COMPUTED SUBSCR WORD INDEX     41870003
                             %     QBL - COMPUTED REVEICING WORD        41870004
                             %     FLOATED - "FLOAT" OPTION GIVEN       41870005
                   DN; EMIL(IF BUSAGE=2 THEN OPDC ELSE      COMMENT DF; 41875000
                   LITC,BQX); IF BUSAGE!2 THEN EMIL(OPDC,   COMMENT DF; 41880000
                             %IF ITEMS ARE MONITORED                    41880001
                   BPX); EMIL(IF AUSAGE=2 THEN OPDC ELSE    COMMENT DF; 41880010
                             %CALL MONITOR GENERATOR                    41880011
                   LITC,AQX); IF AUSAGE!2 THEN EMIL(OPDC,   COMMENT DF; 41880050
                   APX);                                    COMMENT DF; 41882000
                   EMIL(DIA,D1); EMIL(DIB,D2);              COMMENT DF; 41883000
                   EMIL(TRB,D3); EMIL(LITC,BQX);            COMMENT DF; 41885000
                             %IF NEXT SYMBOL IS NOT OPERAND             41885001
                   EMIL(DESC,BPX); EMIL(OPR,STD);           COMMENT DF; 41890000
                             %IF NOT SUBSCRIPT THEN GET ITEM            41890001
                   GO TO M9;                                            41890005
MXIT:         END;                                          COMMENT DF; 41890010
COMMENT **************** WHENTILASGN  ***************;   COMMENT DF-DC; 41895000
                             %IF NOT FOUND IN DICT                      41895001
PROCEDURE WHENTILASGN;                                   COMMENT DF-DC; 41895200
              BEGIN LABEL L1,L2,L3,L4    ;BOOLEAN A;     COMMENT DF-DC; 41895400
                   IF KEY =263 THEN GO TO L4;            COMMENT DF-DC; 41895600
                   A~ KEY=352; COMMENT T=WHEN,F=UNTIL;   COMMENT DF-DC; 41895800
                   DN; IF KEY!451 THEN GO TO L1;         COMMENT DF-DC; 41896000
                   IF DCOM THEN                                         41896020
              BEGIN     FILL LBUF[*] WITH "        "," DELETED"   ,     41896040
                                          " FROM TS","S.~     ";        41896060
                        WORDTRAN(LBUF[0],MSG[124],4);                   41896080
                        MSG[124]~(IF A THEN " -WHEN-" ELSE "-UNTIL-")&  41896100
                                  26 [1:43:5];                          41896120
                        ERP1 (124,0,0,0);                               41896140
                        GO TO L3;                                       41896160
              END;                                                      41896180
                   IF NOT  A  THEN     COMMENT UNTIL;    COMMENT DF-DC; 41896200
              BEGIN DN; IF SIZE>11 OR TYPE!8 OR          COMMENT DF-DC; 41896400
                   USAGE = 0 OR SUBS ! 0 THEN GO TO L2;  COMMENT DF-DC; 41896600
                   EMIL(LITC,QX);                        COMMENT DF-DC; 41896800
                   EMIL(DESC, PX);                       COMMENT DF-DC; 41897000
              END;                                       COMMENT DF-DC; 41897200
                   DN; IF SIZE >11 OR(SCLAS=6 AND LGTH>  COMMENT DF-DC; 41900000
                   11) THEN                              COMMENT DF-DC; 41900005
L2:      COMMENT  ILLEGAL OPERAND X X X X    ;           COMMENT DF-DC; 41900200
              BEGIN  SYOUT(MSG[124],ISYMB,LGTH);         COMMENT DF-DC; 41900400
                   ERP1 (40,22,124,0  ); GO TO L3;       COMMENT DF-DC; 41900600
              END;                                       COMMENT DF-DC; 41900700
                   OPND;                                 COMMENT DF-DC; 41900800
                   EMIL(LITC, IF A THEN 6 ELSE 2);       COMMENT DF-DC; 41901000
                   EMIL(OPR, COM);  EMIL(OPR,DEL);       COMMENT DF-DC; 41901200
                   IF NOT A THEN  EMIL(OPR,DEL);         COMMENT DF-DC; 41901400
                   IF KEY !456 THEN                      COMMENT DF-DC; 41901600
L1:       COMMENT MISSING  PARENTHESIS;                  COMMENT DF-DC; 41901800
              BEGIN SYOUT (MSG[124],ISYMB,LGTH);         COMMENT DF-DC; 41902000
                   ERP1(9,3,124,0);                      COMMENT DF-DC; 41902200
              END;                                       COMMENT DF-DC; 41902400
                   GO TO L3;                             COMMENT DF-DC; 41902600
L4:                DN;                                   COMMENT DF-DC; 41905000
                   IF KEY=382 THEN DN; COMMENT LOCATION; COMMENT DF-DC; 41905200
                   IF KEY=343 THEN DN; COMMENT OF;       COMMENT DF-DC; 41905400
                   IF TYPE !7 THEN                       COMMENT DF-DC; 41905600
         COMMENT   XXXX   NOT  RECORD NAME;              COMMENT DF-DC; 41905800
              BEGIN SYOUT (MSG[124],ISYMB,LGTH);         COMMENT DF-DC; 41906000
                   ERP1 (124,19,34,83); GO TO L3;        COMMENT DF-DC; 41906200
              END;                                       COMMENT DF-DC; 41906400
                   EMIL(LITC,0);                         COMMENT DF-DC; 41906600
                   EMIL(DESC,PX);EMIL(LITC,0);           COMMENT DF-DC; 41906800
                   EMIL(OPR,INX);                        COMMENT DF-DC; 41907000
                   DN;                                   COMMENT DF-DC; 41907200
                   IF KEY=264 THEN DN; COMMENT TO;       COMMENT DF-DC; 41907400
                   IF SIZE >11 OR USAGE=0 OR SUBS!0      COMMENT DF-DC; 41910000
                   OR SCALE!0 THEN GO TO L2;             COMMENT DF-DC; 41910200
                   EMIL(LITC,QX);                        COMMENT DF-DC; 41910400
                   EMIL(DESC,PX);                        COMMENT DF-DC; 41910600
                   EMIL(OPR,STD);                        COMMENT DF-DC; 41910800
L3:                DN;                                   COMMENT DF-DC; 41911000
              END;                                       COMMENT DF-DC; 41911200
COMMENT *************************   RELEAS  **************************; 41919500
   PROCEDURE RELEAS  ;                                                  41925000
              BEGIN                                                     41930000
 LABEL VBWRG, NEXWORD, ENDRELEASE;                                      41935000
 REAL RECSIZE, TODESC;                                                  41940000
   INTEGER T1,T2; COMMENT INTEGER ANSWERS FOR MOD,DIV. RES.     10-27;  41943000
              SIOPRO  ~ TRUE;                                           41945000
 DN; IF NOT FOUND THEN GO TO VBWRG;                                     41950000
                   IF TYPE ! 7 THEN                            %CJC 004 41955000
VBWRG:        BEGIN ERP1(19,90,34,0);  % "NOT SORT RECORD"     %CJC 004 41960000
                   GO TO ENDRELEASE;                           %CJC 004 41965000
              END;                                             %CJC 004 41970000
                   NEXWORD:  JCV(OHLNK(OCUR),J,K);       COMMENT SI-9;  41975000
                   IF DICT[J,K].[6:1] ! 1 THEN GO TO VBWRG;COMMENT SI-9;41976000
          RECSIZE ~ MAPSZ ( OCUR ) ;%SET UP SIZE AND                    41980000
                    TODESC  ~  PX  ;% LOCATION OF DESCRIPTOR            41985000
 DN; IF FOUND THEN             %SCAN, IF IN DICTIONARY THEN             41990000
              BEGIN                                                     41995000
                   IF KEY = 335 THEN%IF "FROM" THEN                     42000000
              BEGIN DN;                                        %CJC 005 42001000
                   IF NOT FOUND OR TYPE ! 7 THEN               %CJC 005 42002000
              BEGIN SYOUT(MSG[124],ISYMB,LGTH);                %CJC 005 42003000
                   ERP1(40,134,34,124); %ILLEGAL FROM RECORD X %CJC 005 42004000
                   GO TO ENDRELEASE;                           %CJC 005 42005000
              END;                                             %CJC 005 42006000
     IF MAPSZ ( OCUR ) ! RECSIZE THEN                                   42020000
              BEGIN                                                     42025000
EIND ~ 93 &8[32:40:8] &34[24:40:8] & 15[16:40:8] ;                      42030000
                             %"POSSIBLE ERROR RECORD SIZE".             42030001
ERP(EIND,0)  ; COMMENT "POSSIBLE ERROR RECORD SIZE "  USES THE SSMALLER;42035000
 IF MAPSZ(OCUR)  < RECSIZE THEN RECSIZE ~ MAPSZ(OCUR)  ;                42040000
              END;                                                      42045000
                   EMIL(OPR,MKS); EMIL(LITC,0);           COMMENT 9-01; 42050000
                   EMIL(DESC,IODESC); EMIL(LITC,0);       COMMENT 9-01; 42055000
                   EMIL(DESC,TODESC);                     COMMENT 9-01; 42060000
                   T1~(RECSIZE+7) DIV 8;                  COMMENT 9-01; 42065000
                   EMIL(LITC,T1 DIV 63);                  COMMENT 9-01; 42070000
                   EMIL(LITC,T2~T1 MOD 63);               COMMENT 9-01; 42075000
                   EMIL(OPDC,OWORDTRAN);                  COMMENT 9-04; 42076000
                   DN;                                    COMMENT 7-17; 42080000
              END                                                       42085000
              END;                                                      42090000
                   IF BINGO = 0 THEN%IF "BINGO" NOT YET SET UP THEN     42095000
              BEGIN BINGO ~ PRTCTR;  UPIT;%ASSIGN PRT LOCATIONS         42100000
                    ENDQ  ~ PRTCTR;  UPIT;                              42105000
              END;                                                      42115000
 COMMENT NOW PUT OUT SPECIAL CODE FOR LINKAGE WITH SORTING PROGRAM;     42120000
                   EMIL(LITC,PRTCTR);                     COMMENT 9-02; 42125000
 EMIL(LITC,BINGO)     ;                                                 42130000
 EMIL(OPR,STD)     ;                                                    42135000
 EMIL(LITC,0)     ;                                                     42140000
 EMIL(LITC,ENDQ)     ;                                                  42145000
 EMIL(OPR,STD)     ;                                                    42150000
              COMMENT     DELETE FOR NEW PERFORM OF SORT I/O 3/9/64 RES;42155000
              COMMENT     DELETE FOR NEW PERFORM OF SORT I/O 3/9/64 RES;42160000
              COMMENT     DELETE FOR NEW PERFORM OF SORT I/O 3/9/64 RES;42165000
              COMMENT     DELETE FOR NEW PERFORM OF SORT I/O 3/9/64 RES;42170000
 EMIL(OPR,XIT)     ;                                                    42175000
                   WHILE(CREG.[45:3])!0 DO EMIL(DIA,0);%WORD ADJUST.    42180000
     T10  ~  SEG[0,0] ;                                                 42189000
 MAKELABEL(0,PRTCTR,((CREG +7)DIV 8 - 1),0);                            42190000
                             %MAKE A LABEL FOR THE PROCEDURE            42190001
               UPIT   ;                                                 42193000
       ENDRELEASE:                                                      42195000
              END;                                                      42200000
COMMENT *************************    VRTN   **************************; 42200500
         DEFINE VRTN =         %                                        42205000
              BEGIN                                                     42210000
              IF BINGO = 0 THEN%IF "BINGO" NOT YET SET UP THEN          42260000
              BEGIN BINGO ~ PRTCTR;  UPIT;%ASSIGN PRT LOCATIONS         42265000
                    ENDQ  ~ PRTCTR;  UPIT;                              42270000
              END;                                                      42280000
         SIOPRO  ~  TRUE ;                                              42285000
                   EMIL(LITC,PRTCTR);                     COMMENT 9-02; 42290000
 EMIL(LITC,BINGO)     ;                                                 42295000
 EMIL(OPR,STD)     ;                                                    42300000
              COMMENT     DELETE FOR NEW PERFORM OF SORT I/O 3/9/64 RES;42305000
              COMMENT     DELETE FOR NEW PERFORM OF SORT I/O 3/9/64 RES;42310000
              COMMENT     DELETE FOR NEW PERFORM OF SORT I/O 3/9/64 RES;42315000
              COMMENT     DELETE FOR NEW PERFORM OF SORT I/O 3/9/64 RES;42320000
                   EMIL(OPR,XIT);                         COMMENT 8-10; 42325000
                   WHILE(CREG.[45:3])!0 DO EMIL(DIA,0);%WORD ADJUST.    42326000
     T10  ~  SEG[0,0] ;                                                 42334000
 MAKELABEL(0,PRTCTR,((CREG + 7)DIV 8-1),0);COMMENT MODE,PRT,SEGLOC,0;   42335000
                             %MAKE A LABEL FOR THE PROCEDURE            42335001
               UPIT   ;                                                 42337000
              READE;                                                    42340000
              END; COMMENT VERB RETURN NOW PROCESSED;                   42350000
                   #;   %                                               42350100
COMMENT *************************   SORTGEN **************************; 42519000
              PROCEDURE SORTGEN;       BEGIN                            42520000
                             %SORT GENERATOR CREATES SINGLE SEGMNT      42520001
              REAL C,OOOPS,IK,IKEY;                            %CJC 031 42525000
                             %  OF CODING, EXCLUSIVE OF ANY USERS       42525001
COMMENT  TOTAL UPDATE OF SORTGENERATOR WITH PRL    PROCEDURES ON THE    42528000
     SCRATCH TAPE I/O ETC PLUS MAJOR REV TO INTERNAL SORT FEB 10,1964  ;42528100
              INTEGER    Y,V,N,IOM,IOM2,VAL,REM                        ;42530000
                             %  INPUT OR OUTPUT PROCEDURES.             42530001
                   INTEGER MERGEORD;                                    42530010
    INTEGER SA, ZO;                                                     42535000
              LABEL                  BINCMP2, BINCMP3, BINCMP4,BINCMP5, 42540000
                             %USED BY KEY COMPARISON GENERATOR.         42540001
                     SKIPOUT, SKIPPER, SKIPIN, SKIPPY, SKIPEND,         42545000
                     SKIPENDING, ONLYLAST, CMSIGN, LASTONLY, CMSIGN2,   42550000
                     CMSIGN3, CMSIGN4, CHARMODEEND, CMPEQL, CMPEQ,      42555000
                     CMPEQL8,COMPEQUAL, LOWKEYS, LOWKEYIN, HIVALEND,    42560000
                     OKAYA,LEAV2,GENFINI,B6107;                %CJC 031 42575000
                             %TWO "OKAYA" LABELS IN SORT IS OK.         42575001
                   LABEL LGA;                             COMMENT DSRT; 42576000
             STREAM                                                     42580000
COMMENT *************************   SUBPACK **************************; 42580500
    PROCEDURE SUBPACK (SORCADR,DESTADR,SKAT);VALUE SKAT;                42585000
      BEGIN   SI~ SORCADR; SI~ SI+6;                                    42590000
              DI ~ DESTADR; DI ~ DI + SKAT; DI ~ DI + SKAT; DS ~ 2 CHR; 42595000
      END         ;                                                     42600000
COMMENT *************************    PACK   **************************; 42600500
     PROCEDURE PACK  ;  BEGIN  REAL T1, T2 ;                            42605000
                             %ASSEMBLES SYLLABLES INTO PROG WORD.       42605001
                   IF PSUP THEN RLS(X,0,(2|SYLL)&I[33:36:12],10,FALSE); 42610000
          T2 ~ ( I + 1 ) MOD 128 ;  T1 ~ (I+ 1) DIV 128 ;               42615000
 SUBPACK(X,SEG[T1,T2],SYLL); IF SYLL = 3 THEN BEGIN SYLL ~ 0;I ~ I+1 END42620000
    ELSE SYLL ~ SYLL +1;                END;                            42625000
COMMENT *************************   PACKALT **************************; 42625500
       PROCEDURE PACKALT ;  BEGIN  REAL T1  , T2  ;                     42630000
          T2 ~ ( I + 1 ) MOD 128 ;  T1 ~ (I+ 1) DIV 128 ;               42635000
 SUBPACK(X,SEG[T1,T2],SYLL); IF SYLL = 3 THEN                           42640000
              BEGIN  SYLL ~ 0; I ~ I + 1 END                            42645000
        ELSE  SYLL ~ SYLL + 1;                                          42650000
              END        ;                                              42655000
COMMENT *************************    EM1    **************************; 42655500
 PROCEDURE EM1 (C); VALUE C; COMMENT EMITS A LITC SYLLABLE FOR CONSTANT 42660000
                             %THESE EMIT PROCEDURES ARE USED            42660001
    WHERE X IS A GLOBAL VARIABLE; REAL C;%  EXCLUSIVELY BY SORTGEN.     42665000
    BEGIN X~ 4|C; PACK END;                                             42670000
COMMENT *************************    EM2B   **************************; 42670500
 PROCEDURE EM2B(R);   VALUE R;   COMMENT EMITS LITC FOR JUMP BACKWARDS; 42675000
              REAL R;                                                   42680000
BEGIN X~4|(4|I+SYLL+2-JUMPS[R]);PACK END;                               42685000
COMMENT *************************    EM3A   **************************; 42685500
 PROCEDURE EM3A(R); VALUE R; COMMENT MARKER FOR FORWARD BNCH FIXUP.    ;42690000
      REAL R; BEGIN JUMPS[R] ~ 0 ;                                      42695000
          JUMPS[R].[1:15]~I; JUMPS[R].[16:15]~SYLL;X~0; PACK END;       42700000
COMMENT *************************    EM2A   **************************; 42700500
 PROCEDURE EM2A(R); VALUE R; COMMENT STORES SYLLABLE COUNT FOR LATER    42705000
              JUMP BACKWARDS; REAL R;                                   42710000
                     BEGIN JUMPS[R]~ 4|I +SYLL END;                     42715000
COMMENT *************************    EM3B   **************************; 42715500
 PROCEDURE EM3B(R); VALUE R; COMMENT FWD JUMP FIXUP; REAL R;            42720000
       BEGIN  INTEGER  HOLD1 , HOLD2 , T1 , T2  ;                       42725000
             T1 ~ I ;  T2  ~  SYLL ;                                    42730000
          HOLD1~JUMPS[R].[1:15];HOLD2~ JUMPS[R].[16:15];                42735000
    X~ 4|I + SYLL - 4|HOLD1 -HOLD2-2; I~HOLD1; SYLL~ HOLD2;             42740000
     X ~ 4 | X ;                                                        42745000
          PACK ;  I ~ T1 ;   SYLL ~ T2   END ;                          42750000
COMMENT *************************    EM4    **************************; 42750500
 PROCEDURE EM4(R); COMMENT EMIT LITC FOR PRT LOC OR PARAMETER; VALUE R; 42755000
              REAL R;                                                   42760000
    BEGIN X ~ 4| PARAM[R]; PACK  END;                                   42765000
COMMENT *************************    EM6    **************************; 42765500
   PROCEDURE EM6(C);   VALUE   C; REAL   C; COMMENT EMITS A WORD MODE   42770000
      OPERATOR SYLLABLE; BEGIN X ~ 4|C+1; PACK END;                     42775000
COMMENT *************************    EM10   **************************; 42775500
 PROCEDURE EM10 (R); VALUE R; REAL R; COMMENT OPERAND CALL;             42780000
   BEGIN  X ~ PARAM[R] |4 +2; PACK  END;                                42785000
COMMENT *************************    EM11   **************************; 42785500
 PROCEDURE EM11 (R); VALUE R; REAL R; COMMENT DESCRIPTOR CALL;          42790000
   BEGIN  X ~ PARAM[R] |4 +3; PACK  END;                                42795000
COMMENT *************************    EM12   **************************; 42795500
 PROCEDURE EM12 (NN,R);VALUE NN,R; REAL NN,R; COMMENT CHARMODE SYLL IN  42800000
    FINAL FORM; BEGIN                                                   42805000
         IF PSUP THEN RLS(R,R&NN[36:42:6],(2|SYLL)&I[33:36:12],20,TRUE);42810000
              X ~ (64 | NN) + R; PACKALT END ;                          42815000
COMMENT *************************    EM13   **************************; 42815500
 PROCEDURE EM13 (Q,R); VALUE Q,R; REAL Q,R; COMMENT CHARACTER MODE SYLL 42820000
     FOR WHICH NN MUST COME FROM COBOL COMPILER;   BEGIN                42825000
IF PSUP THEN RLS(R,R&PARAM[Q][36:42:6],(2|SYLL)&I[33:36:12],20,TRUE);   42830000
                             %PRINT CHAR MODE SYLL.                     42830001
              X ~ 64 | PARAM[Q] + R; PACKALT END ;                      42835000
COMMENT *************************    EM14   **************************; 42835500
 PROCEDURE EM14 (NN,R); VALUE NN,R; REAL NN,R; COMMENT EMIT ONE OF THE  42840000
   DIAL TYPE WORDS MODE SYLLABLES, WITH NN EQUAL TO ZERO THRU 47 LEFT TO42845000
   RIGHT;  BEGIN INTEGER TEMP1,TEMP2; TEMP1 ~ NN DIV 6; TEMP2~NN MOD 6; 42850000
   X ~((TEMP1|8 + TEMP2)| 64) + 4|R +1; PACK  END;                      42855000
COMMENT *************************    EM15   **************************; 42855500
 PROCEDURE EM15 (R); VALUE R; REAL R; COMMENT ADJUST TO START OF WORD;  42860000
    BEGIN LABEL ZBL;  ZBL: IF SYLL!0 THEN BEGIN EM6(NOP); GO TO ZBL     42865000
   END  END;                                                            42870000
COMMENT *************************    EM17   **************************; 42870500
 PROCEDURE EM17(R); VALUE R; REAL R; COMMENT PLACE  OPDC (F-R) AS       42875000
   THE NEXT SYLLABLE; BEGIN X ~ 4|(896 + R) + 2; PACK  END;             42880000
COMMENT *************************    EM18   **************************; 42880500
 PROCEDURE EM18(R); VALUE R; REAL R; COMMENT PLACE LITC (F-R) AS THE    42885000
   NEXT SYLLABLE;  BEGIN X ~ 4|(896 + R); PACK END;                     42890000
COMMENT *************************    EM19   **************************; 42890500
 PROCEDURE EM19(NN,R);VALUE NN,R; REAL NN,R; COMMENT FOR TRB,FCE,FCH;   42895000
    BEGIN  X ~ 64|NN + 4|R + 1; PACK  END;                              42900000
BEGIN LABEL OKAYA,LUUP,LANGWRONG,G4,G4A,G5,G6,G7,G7A,G8,G10,G12;        42905000
                   LABEL R1,R3,MERGEWRONG;                              42905010
     DEFINE TESTFORSIZEERROR= %COMPARE FILE SIZE WITH "SD" FILE SIZE    42910000
            IF A~FIB[A.[38:3],A.[41:7]].[33:15]!PARAM[62] THEN    %TR62442910002
            BEGIN IF PARAM[62]>A THEN BEGIN COMPE~TRUE END;       %TR62442910004
                 EIND~34&15[32:40:8]&8[24:40:8]; ERP(EIND,0);     %TR62442910006
            END#;                                                 %TR62442910008
 ;COMMENT  NOW AT THE BEGINNING OF THE SCAN OF SORT STATEMENT;          42920000
   COMMENT  FILL IN ADJUSTMENT FOR START OF SEGMENT CODE LATER         ;42925000
                             %SORT ERROR 1- SORT NOT PARAGRAPH.         42925001
                   OOOPS~MERGEORD~0;                                    42925100
                   HPAR[12] ~ HPAR[5] ~ (IF HPAR[5]=0                   42925200
                    THEN 12000 ELSE HPAR[5]); % CORE ESTIMATE-SORT      42925300
   DN; IF NOT FOUND THEN BEGIN T1 ~ 2 ; GO TO LANGWRONG END;            42945000
                             %SORT ERROR 2-SORTFILE NAME NOT FOUND      42945001
                   A~CFIB+4; IF FIB[A.[38:3],A.[41:7]].   COMMENT DSRT; 42945500
                   [29:1]=1 THEN                          COMMENT DSRT; 42945550
                   DSFLAG~TRUE ELSE DSFLAG~FALSE;         COMMENT DSRT; 42945560
                   IF CREG ! 8 THEN                                     42945562
              BEGIN T1 ~1 ;                      % SORT ERROR #1        42945564
                    GO TO LANGWRONG ;            % NOT OWN PARAGRAPH    42945566
              END;                                                      42945568
              IF   FIB[A.[38:3],A.[41:7]].[28:1]=1 THEN                 42945570
                   MERGEFL~ TRUE                                        42945580
                   ELSE MERGEFL~ FALSE;                                 42945590
                   IF DSPRTCTR=0 AND DSFLAG THEN          COMMENT DSRT; 42945600
              BEGIN DSPRTCTR~PRTCTR; UPIT;                           %DS42945700
                    DSPRTCTR.[18:15]~PRTCTR; UPIT; END;              %DS42945750
              PARAM[136]~DSPRTCTR.[33:15];PARAM[144]~DSPRTCTR.[18:15];  42945800
 IF TYPE ! 6 THEN BEGIN T1 ~ 3 ; GO TO LANGWRONG END; COMMENT NOT FILEN;42950000
                             %SORT ERROR 3-SORT SUBJECT NOT A FILE      42950001
  IF NOT SORTFILE THEN BEGIN T1 ~ 4; GO TO LANGWRONG END;               42955000
                             %SORT ERROR 4-FILE IS FD INSTEAD OF        42955001
 PARAM[83] ~ UNITS; COMMENT STORE NUMBER OF WORKTAPES FOR THIS SORT;    42965000
                             %  SD ENTRY.                               42965001
 PARAM[139] ~ SORTREC; COMMENT LOC OF PRT DESCR FOR DUMMY SORTRECORD;   42970000
    PARAM[16] ~ FIBPX - 5 | (UNITS - 1);COMMENT SORTFILE FIB;           42975000
 PARAM[62] ~ SIZE; COMMENT WORDS PER RECORD;                            42980000
 PARAM[158] ~ CFIB; COMMENT STORE INDEX FIRST SORT-FILE FIB IN FIB ARRY;42985000
                             %SORT ERROR 5-WORD FOLLOWING SORT-         42985001
    IF DSFLAG AND SRTPRM = 0 THEN                                       42985050
    BEGIN IF CNR !0 THEN CNQ ~ CNQ+1;                                   42985100
     CNP[CNQ.[38:3],CNQ.[41:7]] ~ HPAR[5]; CNR ~ 0;                     42985120
     SRTPRM ~ (CNQ-1)&CNPL[18:33:15]; CNQ ~ CNQ + 1;                    42985200
     CNP[CNQ.[38:3],CNQ.[41:7]] ~ HPAR[11]; CNQ ~ CNQ+1;                42985220
    END;                                                                42985300
    IF DSFLAG THEN PARAM[113] ~ SRTPRM.[18:15];                         42985400
 DN; IF NOT FOUND THEN BEGIN T1 ~ 5; GO TO LANGWRONG END ;              42995000
                             %  FILE-NAME NOT FOUND IN DICTIONARY.      42995001
     IF KEY = 271 THEN         %STORING RESULTS OF SCAN INTO R ARRAY.   43000000
                             %R [I,J] WHERE VALUES ARE:                 43000001
                             %  J0 = 1  ASCENDING SORT                  43000002
                             %  J0 = 2  DESCENDING SORT                 43000003
                             %  J1 = LENGTH OF THE KEY SEGMENT          43000004
                             %  J2 = WORD INDEX TO THIS KEY             43000005
                             %  J3 = CHAR INDEX TO THIS KEY             43000006
                             %  J4 = COMPARE CODE                       43000007
                             %     0 = BINARY KEY                       43000008
                             %     1 = ALPHANUMERIC (ALPHA, AN,         43000009
                             %       NUM,EDITED NUM, UNSIGNED NUM)      43000010
                             %     2 = SIGNED NUM LSD (S)               43000011
                             %     3 = SIGNED NUM MSD (J)               43000012
                             %THE I INDEX ALLOWS UP TO 25 DISTINCT      43000013
                             %  PARTS TO THE KEY.                       43000014
 DN;                               COMMENT SKIP NOISE WORD "ON";        43005000
   IF NOT FOUND THEN BEGIN T1 ~ 6 ; GO TO LANGWRONG  END;               43010000
                             %SORT ERROR 6-WORD FOLLOWING "ON" NOT      43010001
 IK ~ 0;                       %  FOUND IN DICT(ASCENDING/DESCEND)      43015000
  G4:  IF TYPE ! 1 THEN BEGIN T1 ~ 7 ; GO TO LANGWRONG END ;            43020000
                             %SORT ERROR 7-WRONG WORD AFTER "ON".       43020001
       G4A:                                                             43025000
     IF KEY = 704 THEN                                                  43030000
BEGIN IF IK = 25 THEN BEGIN T1 ~ 8; GO TO LANGWRONG END ;  R[IK,0] ~ 1; 43035000
                             %SORT ERROR 8 & 9-MORE THAN 25 NAMED       43035001
               GO TO G5 ;  END ;   COMMENT ASCENDING   ;                43040000
                             %  SORT KEYS IN STATEMENT.LIMIT 25 TO      43040001
     IF KEY = 705 THEN         %  PREVENT MISUSE OF SORT STATEMENT.     43045000
   BEGIN IF IK = 25 THEN BEGIN T1 ~ 9 ; GO TO LANGWRONG END ;           43050000
      R[IK,0] ~ 2; GO TO G5  END ; COMMENT DESCENDING ;                 43055000
     IF IK = 0  THEN BEGIN T1 ~ 64 ; GO TO LANGWRONG END ;              43060000
                             %SORT ERROR 10-"ASCENDING" OR "DESC-       43060001
         G5:        DN; IF KEY = 706 THEN DN;                           43065000
                    IF NOT FOUND THEN BEGIN T1~65; GO TO LANGWRONG END; 43070000
                    T1~ OCUR; WHILE T2~ OHLNK(T1)! 0 DO T1~ T2;         43075000
                             %SORT ERROR 11-KEY NOT IN DICTIONARY.      43075001
                    T1~ OILNK(T1); JCV(T1+3,J,K);                       43077000
                    IF T1 ~INFO[J,K].[33:10] ! SORTREC THEN             43080000
                BEGIN T1 ~ 201; GO TO LANGWRONG END; % SORT ERROR 39    43085000
                    IF OFSZ(OCUR) GTR 63 THEN                           43086000
              BEGIN     T1 := 257;  %SYNTAX ERR SRT STATMENT 41         43087000
                        GO TO LANGWRONG;                                43088000
              END;                                                      43089000
       G6:                                                              43090000
     IF TYPE = 7 OR TYPE = 2 THEN                                       43095000
              BEGIN                                                     43095050
                   IF NOT GRCOMP(OCUR,0,USAGE,MAPSZ(OCUR)) THEN         43095060
              BEGIN                                                     43095080
                   CHRTRAN(ISYMB, 4, MSG[124], 1, LGTH);                43095090
                   MSG[124].[1:5] ~ LGTH;                               43096000
                   ERP1(90, 16, 8, 124)                                 43096100
              END;                                                      43096200
              BEGIN R[IK,4] ~ 1; COMMENT RECRD NAME FOR KEY IS ALPHANUM;43100000
                   GO TO G7                                             43105000
              END;                                                      43110000
              END;                                                      43112000
     IF TYPE = 8 THEN                                                   43115000
              BEGIN IF USAGE = 1 THEN                                   43120000
               BEGIN R[IK,4] ~ 0; GO TO G7                              43125000
               END; COMMENT BINARY KEY;                                 43130000
    IF USAGE ! 0 THEN BEGIN T1 ~ 66 ; GO TO LANGWRONG  END ;            43135000
                             %SORT ERROR 12-KEY NOT DISPLAY NOR         43135001
                    IF CLASS = 1 OR CLASS = 2 OR CLASS = 4 THEN         43140000
                             %  COMPUTATIONAL.                          43140001
               BEGIN R[IK,4] ~ 1; GO TO G7                              43145000
               END; COMMENT USE AN COMPARE FOR ALPHA OR AN OR EDIT-NUM; 43150000
    IF CLASS ! 3 THEN BEGIN T1 ~ 67 ; GO TO LANGWRONG  END ;            43155000
                             %SORT ERROR 13-KEY CLASS NOT 1 THRU 4      43155001
                    IF SIGNED = 0 OR SIGNED = 3 THEN                    43160000
               BEGIN R[IK,4] ~ 1; GO TO G7                              43165000
               END; COMMENT SIGN EQUAL TO DATA-NAME IS HANDLED UNSIGNED;43170000
                    IF SIGNED = 1 THEN                                  43175000
               BEGIN R[IK,4] ~ 2; GO TO G7                              43180000
               END; COMMENT SIGN OVER LEAST SIGNIFICANT DIGIT;          43185000
                    IF SIGNED = 2 THEN                                  43190000
               BEGIN R[IK,4] ~ 3; GO TO G7                              43195000
               END; COMMENT SIGN OVER MOST SIGNIFICANT DIGIT;           43200000
          T1 ~  68 ;  GO TO LANGWRONG  ;                                43205000
                             %SORT ERROR 14-SIGN NOT OVER MSD OR        43205001
              END; COMMENT WE HAVE NOW ASSIGNED COMPARE TYPE FOR SORT   43210000
                             %  LSD OR IN DATA NAME.                    43210001
                   AND HAVE MARKED AS ASC OR DESC;                      43215000
       G7:                                                              43220000
     IF TYPE = 7 THEN                                                   43225000
BEGIN R[IK,2] ~0;R[IK,3]~0;R[IK,1]~MAPSZ(OCUR); COMMENT RECRSIZE5/5/64; 43230000
                   GO TO G7A                                            43235000
              END;                                                      43240000
 COMMENT GROUP OR ELEM ITEM, FIRST SEE IF IT IS SUBSCRIPTED (OCCURS)   ;43245000
   R[IK,1]~MAPSZ(OCUR); IF SUBS ! 0 THEN     COMMENT   RECDSIZE 5/5/64; 43250000
    BEGIN                                                               43255000
PARAM[20] ~0; PARAM[21] ~8|QX +RX;PARAM[22] ~SUBS;                      43260000
  DN; IF KEY ! 451 THEN BEGIN T1~69;GO TO LANGWRONG END;                43265000
                             %SORT ERROR 15-SUBSCRIPT LIST SHOULD       43265001
                         COMMENT WAS TEST FOR LEFT PARENTHESIS ;        43265100
                             %  WITH LEFT PARENTHESIS.                  43265101
LUUP: DN; IF TYPE ! 5 OR SCLAS ! 6 THEN BEGIN T1~70;GO TO LANGWRONG END;43270000
            PARAM[20] ~ PARAM[20] + 1;                                  43275000
                             %OUT OF RANGE SUBSCRIPT NOT DETECTED.      43275001
            PARAM[21] ~ PARAM[21] + OCIX[PARAM[22] - PARAM[20]] |       43280000
                   (ICV1(ISYMB[0],4,0,LGTH) - 1);                       43285000
                   IF PARAM[20]=PARAM[22] THEN                          43290000
                     BEGIN  DN;                                         43295000
  IF KEY!456 THEN BEGIN T1 ~ 71; GO TO LANGWRONG END ELSE BEGIN         43300000
                             %SORT ERROR 17-MISSING RIGHT PARENTH-      43300001
R[IK,2]~PARAM[21].[34:11]; R[IK,3]~PARAM[21].[45:3]; GO TO G7A END      43305000
                             %  ESIS AFTER SUBSCRIPT LIST.              43305001
                   END ELSE GO TO LUUP;                                 43310000
    END;                                                                43325000
 R[IK,2] ~ QX; R[IK,3] ~ RX;                                            43330000
              G7A:                                                      43335000
 DN;                                                                    43340000
     IF NOT FOUND THEN BEGIN T1 ~ 73 ; GO TO LANGWRONG  END ;           43345000
                             %SORT ERROR 19-WORD AFTER KEY NOT IN       43345001
     IK ~ IK + 1;              %  DICTIONARY.                           43350000
     IF TYPE = 2 OR TYPE = 7 OR TYPE = 8 THEN                           43360000
              BEGIN R[IK,0] ~ R[IK -1,0] ; GO TO G6                     43365000
              END ;                                                     43370000
       G8:                                                              43375000
    IF NOT FOUND THEN BEGIN T1 ~ 128 ; GO TO LANGWRONG  END ;           43385000
                             %SORT ERROR 20-SAME AS 19.                 43385001
   IF TYPE ! 1 THEN BEGIN T1 ~ 129 ; GO TO LANGWRONG  END ;             43390000
                             %SORT ERROR 21-NEED RESERVED WORD OR       43390001
                             %  SYMBOL AFTER CURRENT KEY.               43390002
   IF KEY = 271 THEN BEGIN DN; GO TO G8 ; END ;                         43395000
                             %MAY BE MORE KEYS IN LIST.                 43395001
     IF KEY = 704 OR KEY = 705 THEN GO TO G4A;                          43400000
     IK ~ IK - 1;                                                       43405000
     IF KEY = 524 THEN                                                  43410000
              BEGIN                                                     43415000
 DN;                           %SORT ERROR 22-WORD AFTER "INPUT" NOT    43420000
    IF NOT FOUND THEN BEGIN T1 ~ 130 ; GO TO LANGWRONG  END ;%  FOUND . 43425000
  IF KEY ! 539 THEN BEGIN T1 ~ 131 ; GO TO LANGWRONG END ; COMMENT PROC;43430000
                             %SORT ERROR 23-WORD AFTER "INPUT " IS      43430001
 COMMENT HAVE INPUT PROCEDURE; %  NOT PROCEDURE".                       43435000
                   DN;         PARAM[141] ~ 0;                 %TR 140  43436000
                   IF TYPE = 3                            OR   %TR 140  43437000
                   (SCLAS = 4 AND NOT FOUND AND TYPE ! 1) OR   %TR 140  43438000
                   SCLAS = 6 THEN                              %TR 140  43439000
              BEGIN A1 ~ 16387;   GETIT;                       %TR 140  43440000
                   JCV(A1+1,J,K);                              %TR 140  43441000
                   PARAM[150] ~ DICT[J,K].[8:10];              %TR 140  43442000
                   IF FORD THEN    %IF FORWARD LABEL           %TR 140  43443000
                   DICT[J,K].[3:1] ~ 1 ELSE %SET "SORT" BIT    %TR 140  43444000
                     %BACKWARDS REF MUST CHECK "SECTION" BIT   %TR 140  43445000
                   IF DICT[J,K].[4:1] ! 1 THEN                 %TR 140  43446000
              BEGIN T1 ~ 259;  GO TO LANGWRONG;                %TR 140  43447000
                     %"SYNTAX ERROR SORT STATEMENT 43"         %TR 140  43448000
                     % INPUT PROCEDURE NOT A SECTION           %TR 140  43449000
              END; END ELSE                                    %TR 140  43450000
              BEGIN T1 ~ 259;  GO TO LANGWRONG;                %TR 140  43451000
                     %"SYNTAX ERROR SORT STATEMENT 43"         %TR 140  43452000
                     % INPUT PROCEDURE NOT A LABEL             %TR 140  43453000
              END;                                             %TR 140  43455000
                    IF BINGO = 0 THEN                                   43460000
              BEGIN BINGO ~ PRTCTR; UPIT;                               43465000
                    ENDQ  ~ PRTCTR; UPIT;                               43470000
               END;                                                     43480000
                    PARAM[148] ~ BINGO; COMMENT THIS WILL COMPLETE THE ;43485000
                    PARAM[149] ~ ENDQ;  COMMENT LINKAGE WITH THE SORT  ;43490000
                    PARAM[151] ~ IPFIDX;COMMENT SUBR AND INPUT PROCDURE;43495000
              GO TO G10                                                 43500000
              END;                                                      43505000
IF KEY!560 THEN BEGIN T1~132; GO TO LANGWRONG END ; COMMENT USING ;     43510000
                             %SORT ERROR 24-LOOKING FOR "USING"         43510001
R1:                                                                     43510050
 DN;                           %  SINCE "INPUT PROCEDURE" NOT STATED    43520000
                   IF MERGEFL THEN                                      43520010
              BEGIN                                                     43520020
                   IF NOT FOUND THEN BEGIN T1~133; GO TO LANGWRONG; END;43520030
                   IF SORTFILE THEN BEGIN T1~135; GO TO LANGWRONG;; END;43520040
                   IF TYPE=6 THEN                                       43520050
              BEGIN                                                     43520060
                    PARAM[141]~0; %NO SORT INPUT FILE(THIS IS MERGE) 62343520065
                   MERGEORD~MERGEORD+1;                                 43520070
                   A~CFIB+13; IF FIB[A.[38:3],A.[41:7]].[1:9]!2 THEN    43520080
                   GO TO MERGEWRONG;                                    43520090
                   PARAM[16+OOOPS]~FIBPX;                               43520100
                   FOR T1~ 1 STEP 1 UNTIL 4 DO                          43520110
                   PARAM[16+T1+OOOPS]~PARAM[16+OOOPS]+T1;               43520120
               FOR  T1~0 STEP 1 UNTIL OOOPS-1 DO                 %TR601 43520122
               IF PARAM[16+OOOPS]=PARAM[16+T1] THEN              %TR601 43520124
               BEGIN  T1~256; GO TO LANGWRONG;                   %TR601 43520126
               END;      % ERROR # 40 DUPLICATE INPUT FILES..MERGE      43520127
                   OOOPS~OOOPS+5;                                       43520130
                A~A+5; TESTFORSIZEERROR; % ALTERS VALUE OF "A"    %TR62443520132
                   IF MERGEORD>7 THEN GO TO MERGEWRONG ELSE             43520140
              BEGIN PARAM[83]~ MERGEORD +2; GO TO R1;                   43520150
              END;                                                      43520160
              END  ELSE GO TO R3;                                       43520170
              END;                                                      43520180
IF NOT FOUND THEN BEGIN T1~133;GO TO LANGWRONG END;COMMENT INFILE NAME; 43525000
                             %SORT ERROR 25-INPUT FILE NAME WRONG.      43525001
     IF TYPE ! 6 THEN BEGIN T1 ~ 134; GO TO LANGWRONG  END ;            43530000
                             %SORT ERROR 26-NOT A FILE NAME             43530001
    IF SORTFILE  THEN  BEGIN T1  ~ 135 ; GO TO LANGWRONG  END ;         43535000
                             %SORT ERROR 27-INPUT FILE MAY NOT BE       43535001
                             %  AN SD ENTRY.                            43535002
     PARAM[67] ~ FIBPX; PARAM[153] ~ CFIB;                              43540000
     PARAM[141] ~ 1;  COMMENT SAYS "STANDARD" INPUT ;                   43545000
                   IF DSFLAG AND NOT MERGEFL THEN                       43545105
  A~CFIB+11;PARAM[159]~FIB[A.[38:3],A. [41:7]];COMMENT STORE IN REC/BLK;43550000
  A~CFIB+13;PARAM[160]~FIB[A.[38:3],A. [41:7]].[1:9];COMMENT NO.BUFFERS;43555000
   A~CFIB+18;PARAM[161]~FIB[A.[38:3],A.[41:7]].[3:15];COMMENT BUF WDS;  43560000
                TESTFORSIZEERROR; % ALTERS VALUE OF "A"           %TR62443560001
 DN; COMMENT IF JUMPING TO G10 THEN GETIT ROUTINE DID NEXT DN COMMAND;  43565000
 G10:                          %SORT ERROR 28-WORD WRONG AFTER INPUT    43575000
    IF NOT FOUND THEN BEGIN T1 ~ 136 ; GO TO LANGWRONG  END ;           43580000
                             %  PROCEDURE NAME OR INFILE NAME.          43580001
R3:                IF KEY= 535   THEN                                   43585000
              BEGIN                                                     43590000
 DN; COMMENT OUTPUT PROCEDURE;                                          43595000
   IF KEY ! 539 THEN BEGIN T1 ~ 137 ; GO TO LANGWRONG  END ;            43600000
                             %SORT ERROR 29-"PROCEDURE" MUST            43600001
                   DN;  PARAM[142] ~ 0; % FOLLOW "OUTPUT"      %TR 140  43601000
                   IF TYPE = 3                            OR   %TR 140  43602000
                   (SCLAS = 4 AND NOT FOUND AND TYPE ! 1) OR   %TR 140  43602300
                   SCLAS = 6 THEN                              %TR 140  43602600
              BEGIN A1 ~ 16387;   GETIT;                       %TR 140  43603000
                   JCV(A1+1,J,K);                              %TR 140  43604000
                   PARAM[152] ~ DICT[J,K].[8:10];              %TR 140  43605000
                             %  FOLLOW "OUTPUT".                        43605001
                   IF FORD THEN     % IF FORWARD LABEL         %TR 140  43606000
                   DICT[J,K].[3:1] ~ 1 ELSE %SET "SORT" BIT    %TR 140  43607000
                     %BACKWARDS REF MUST CHECK "SECTION" BIT   %TR 140  43607100
                   IF DICT[J,K].[4:1] ! 1 THEN                 %TR 140  43608000
              BEGIN T1 ~ 260;  GO TO LANGWRONG;                %TR 140  43609000
                     %"SYNTAX ERROR SORT STATEMENT 44"         %TR 140  43609300
                     % OUTPUT PROCEDURE NOT A SECTION          %TR 140  43609600
              END; END ELSE                                    %TR 140  43610000
              BEGIN T1 ~ 260;  GO TO LANGWRONG;                %TR 140  43611000
                     %"SYNTAX ERROR SORT STATEMENT 44"         %TR 140  43611300
                     % OUTPUT PROCEDURE NOT A LABEL            %TR 140  43611600
              END;                                             %TR 140  43615000
IF PARAM[152]=PARAM[150] THEN BEGIN T1~198; GO TO LANGWRONG;  END;      43616000
                             %SORT ERROR 26-INPUT & OUTPUT PROCED-      43616001
                   IF BINGO = 0 THEN%  URE ARE THE SAME PROCEDURE.      43620000
              BEGIN BINGO~PRTCTR; UPIT;                                 43625000
                    ENDQ~PRTCTR; UPIT;                                  43630000
FLTBL[IPFIDX.[38:3],IPFIDX.[41:7]]~T1; UPIT;              COMMENT 6-15; 43635000
              END;                                                      43640000
                   PARAM[148] ~ BINGO;                                  43645000
                   PARAM[149] ~ ENDQ;                                   43650000
                   PARAM[151] ~ IPFIDX;                                 43655000
              GO TO G12                                                 43660000
              END;                                                      43665000
  IF KEY ! 520 THEN BEGIN T1 ~ 192; GO TO LANGWRONG END; COMMENT GIVING;43670000
                             %SORT ERROR 30-SHOULD BE "GIVING"          43670001
 DN;                           %  SINCE NOT OUTPUT PROCEDURE.           43675000
IF NOT FOUND THEN BEGIN T1 ~193; GO TO LANGWRONG END;COMMENT OUTFILE CK;43680000
                             %SORT ERROR 31-OUTPUT FILE NAME WRONG      43680001
    IF TYPE ! 6 THEN BEGIN T1 ~194 ; GO TO LANGWRONG END ;              43685000
                             %SORT ERROR 32-WORD AFTER "GIVING"         43685001
                             %  NOT A FILE NAME.                        43685002
     IF SORTFILE THEN BEGIN T1 ~ 195 ;GO TO LANGWRONG  END ;            43690000
                             %SORT ERROR 33-OUTPUT FILE MAY NOT BE      43690001
                             %  SD ENTRY.                               43690002
     PARAM[133] ~ FIBPX; PARAM[165] ~ CFIB;                             43695000
     PARAM[142] ~ 1; COMMENT SAYS "STANDARD" OUTPUT;                    43700000
   A~CFIB+11;  PARAM[162]~FIB[A.[38:3],A.[41:7]];                       43705000
   A~CFIB+13;  PARAM[163]~FIB[A.[38:3],A.[41:7]].[1:9];                 43710000
   A~CFIB+18;PARAM[164]~FIB[A.[38:3],A.[41:7]].[3:15];COMMENT BUF WDS;  43715000
                TESTFORSIZEERROR; % ALTERS VALUE OF "A"           %TR62443715001
 DN; COMMENT IF JUMPING TO G12,THEN GETIT ROUTINE DID NEXT DN COMMAND.  43720000
     THE NEXT SYMBOL SHOULD BE A PERIOD;                                43725000
 G12:                                                                   43735000
             IF BOOLEAN(PARAM[142]) AND MERGEFL THEN             % TR62243735100
                 FOR T1~0 STEP 5 UNTIL OOOPS-1 DO                % TR62243735125
                 IF PARAM[133]=PARAM[16+T1] THEN                 % TR62243735150
                BEGIN  T1~258; GO TO LANGWRONG;                  % TR62243735175
                END;  %ERROR # 42 OUTPUT&UNPUT FILE ARE THE SAME..MERGE 43735200
                                                                        43735550
     IF TYPE ! 17 THEN BEGIN T1 ~ 196 ; GO TO LANGWRONG  END ;          43740000
                             %SORT ERROR 34 & 35-SORT STATEMENT         43740001
    IF KEY ! 473 THEN BEGIN T1 ~ 197 ; GO TO LANGWRONG  END ;           43745000
                             %  MUST BE  ONE-STATEMENT SENTENCE         43745001
          PARAM[166]  ~ 1 ;    %  AND  SEPARATE PARAGRAPH. MISSING      43745100
                   IF DSFLAG AND NOT MERGEFL THEN         COMMENT DSRT; 43745105
              BEGIN FOR OOOPS~ 1 STEP 1 UNTIL             COMMENT DSRT; 43745110
                    ((PARAM[83]|5)-1) DO                  COMMENT DSRT; 43745113
                   PARAM[16+OOOPS]~ OOOPS+PARAM[16];      COMMENT DSRT; 43745115
              END;                                        COMMENT DSRT; 43745123
                   PARAM[91]~ PRTCTR; UPIT;               COMMENT DSRT; 43745125
                   PARAM[71]~ 3+PARAM[67];                COMMENT DSRT; 43745130
                   PARAM[137]~3+PARAM[133];               COMMENT DSRT; 43745135
                   PARAM[10]~10; I~0; SYLL~0;             COMMENT DSRT; 43745150
                   EM1(0);                                              43745200
                             IF PARAM[139]GTR 511 THEN EM6(XRT);        43745250
                             EM4(139);  %ZERO SORTREC                   43745300
                   EM6(STD);                                            43745350
                   IF DSFLAG THEN                         COMMENT DSRT; 43746000
              BEGIN  EM6(MKS);                                          43746002
                   EM1(IF MERGEFL THEN 1 ELSE 0); EM1(0);               43746005
                    EM4(144);                                        %DS43746007
                    EM4(149); EM11(10);                   COMMENT DSRT; 43746010
                    EM4(148); EM11(10);                   COMMENT DSRT; 43746015
                    EM4(151);                             COMMENT DSRT; 43746020
                    EM4(152);                             COMMENT DSRT; 43746025
                    EM4(150);                             COMMENT DSRT; 43746030
                    IF PARAM[142]=1 THEN                  COMMENT DSRT; 43746035
              BEGIN EM4(137); EM11(10);                   COMMENT DSRT; 43746040
              END   ELSE                                  COMMENT DSRT; 43746041
              BEGIN EM4(139); EM11(10);                   COMMENT DSRT; 43746045
              END;                                        COMMENT DSRT; 43746050
                    COMMENT IF OUTFILE THEN ADDRESS OF    COMMENT DSRT  43746055
                    TOP I/O DESCRIPTOR ELSE DESC.         COMMENT DSRT  43746057
                    POINTING AT SORTREC;                  COMMENT DSRT; 43746059
                    IF PARAM[141]=1 THEN                  COMMENT DSRT; 43746060
              BEGIN EM4(71); EM11(10);                    COMMENT DSRT; 43746065
              END   ELSE                                  COMMENT DSRT; 43746067
              BEGIN EM4(139); EM11(10);                   COMMENT DSRT; 43746070
              END;                                        COMMENT DSRT; 43746072
                    COMMENT IF OUTFILE THEN ADDR. OF TOP  COMMENT DSRT  43746075
                    I/O DESC. ELSE DESC. POINTING AT      COMMENT DSRT  43746077
                    SORTREC;                              COMMENT DSRT; 43746080
                    EM1(IF PARAM[142]=1 THEN 0 ELSE 1);   COMMENT DSRT; 43746085
                    EM1(IF PARAM[141]=1 THEN 0 ELSE 1);   COMMENT DSRT; 43746090
                    EM4(19); EM11(10);                    COMMENT DSRT; 43746095
                    EM4(24); EM11(10);                    COMMENT DSRT; 43746100
                    EM4(29); EM11(10);                    COMMENT DSRT; 43746105
                    EM4(34); EM11(10);                    COMMENT DSRT; 43746110
                    EM4(39); EM11(10);                    COMMENT DSRT; 43746111
                    EM4(44); EM11(10);                    COMMENT DSRT; 43746112
                    EM4(49); EM11(10);                    COMMENT DSRT; 43746113
                    EM1(PARAM[83]-2);                     COMMENT DSRT; 43746114
                   PARAM[123]~ PRTCTR; UPIT;              COMMENT DSRT; 43746115
                    EM4(123); EM6(LOD);                   COMMENT DSRT; 43746118
                    EM4(91); EM6(LOD);                    COMMENT DSRT; 43746120
                    EM4(62);                              COMMENT DSRT; 43746125
                    IF R[0,4]!0 THEN EM1(1) ELSE EM1(0);  COMMENT DSRT; 43746130
                    EM1(SRTPRM.[38:10]); EM10(113);                     43746135
                    EM1(SRTPRM.[38:10]+1); EM10(113);                   43746140
                    EM10(136);                            COMMENT DSRT; 43746160
                    GO TO OKAYA;                          COMMENT DSRT; 43746170
              END;                                        COMMENT DSRT; 43746180
 PARAM[86] ~ PARAM[83] - 1; COMMENT TAPES - 1;                          43746200
 PARAM[87] ~ PARAM[83] - 2; COMMENT TAPES - 2;                          43746300
  GO TO OKAYA;                 %  PERIOD.                               43750000
MERGEWRONG:        EIND~77&137[32:40:8]&57[24:40:8]; GO TO R3;          43750100
LANGWRONG: MSG[124].[1:5] ~2;MSG[124].[6:12] ~ T1 ;                     43755000
 EIND~77 & 90[32:40:8] & 57[24:40:8] & 124[16:40:8] ;                   43760000
                             %PRINTS ALL ERROR MESSAGES FROM SORT.      43760001
 ERP(EIND,0)      ;   COMMENT WRITE "SYNTAX ERROR SORT STATEMENT" ;     43765000
                   COMPE ~TRUE;                  % SET ERROR FLAG       43767000
 RECOV;     PARAM[166] ~ 0; COMMENT SET FLAG THAT NO PROGRAM GENERATED; 43770000
     OKAYA:   END ;  COMMENT SYSTEM BLOCK ONLY ;                        43771000
                             %TWO OKAY LABELS OK(DIFFERENT BLOCKS)      43771001
   IF PARAM [ 166 ] = 0 THEN GO TO GENFINI;                             43775000
 OKAYA:                                                                 43785000
              BEGIN LABEL RE,LIMIT,LL1,SRMEM;             COMMENT DSRT; 43790000
                    IF DSFLAG THEN GO TO SRMEM;           COMMENT DSRT; 43791000
              PARAM[12]~PRTCTR; UPIT;%GRPWD                             43800000
     PARAM[4] ~ PRTCTR;  UPIT;   COMMENT BLKSZ                         ;43800050
     PARAM[5] ~ PRTCTR;  UPIT;   COMMENT PHASE-ONE WRITE               ;43800055
    PARAM[6] ~ PRTCTR; UPIT;    COMMENT MYREAD                         ;43800100
    PARAM[7] ~ PRTCTR; UPIT;    COMMENT IYII                           ;43800200
    PARAM[8] ~ PRTCTR; UPIT;    COMMENT DUPADR                         ;43800300
    PARAM[9] ~ PRTCTR; UPIT;    COMMENT MYWRITE                        ;43800400
                 FOR OOOPS ~ 1 STEP 1 UNTIL 39 DO                       43810000
                             %LOCATIONS OF THE WORK-TAPES. NO           43810001
   PARAM  [16+ OOOPS] ~ OOOPS + PARAM [16];                             43815000
                             %  WASTED PRT IF LESS THAN 8 TAPES.        43815001
                             %  NOT RESERVED IF NOT USED.               43815002
              PARAM[60]~PRTCTR; UPIT;%DATA                              43825000
              PARAM[61]~PRTCTR; UPIT;%ALTDT                             43830000
              PARAM[63]~PRTCTR; UPIT;%VECTR                             43835000
   PARAM  [64] ~ 14;                                  COMMENT VERIFY ;  43840000
                             %FCR READ/WRITE                            43840001
   PARAM  [65] ~ 12;           %FCR                                     43845000
              PARAM[66]~PRTCTR; UPIT;%ADRES                             43850000
   PARAM  [72] ~ 4 + PARAM[67];                                         43860000
              PARAM[73]~PRTCTR; UPIT;%MOVE                              43865000
                     FOR OOOPS  ~ 1 STEP 1 UNTIL   9 DO                 43870000
                             %MRDTA,J,ALNIN,KEY,I,KYMUV,MORE,LOW,       43870001
              BEGIN            %  JJ.                                   43875000
              PARAM[73+OOOPS]~PRTCTR; UPIT;                             43880000
              END;                                                      43885000
                   PARAM[84] ~ PRTCTR; UPIT;                            43890000
                             %II,FULL,TMIN1,TMIN2,CTR,REVRS,STRNG,      43890001
              PARAM[88] ~ PRTCTR; UPIT; PARAM[89] ~ PRTCTR; UPIT;       43895000
                             %  EQLES.                                  43895001
                    PARAM[90]~ PRTCTR; UPIT;              COMMENT DSRT; 43900000
              COMMENT II, CTR, REVRS, STRNG, EQLES, REMOVE FULL,T-1,T-2;43905000
                 FOR OOOPS ~ 0 STEP 1 UNTIL 10 DO                       43910000
                             %ALTVT,R,K,CMPEQ,ISLCT,DELAY,A,B,C,        43910001
              BEGIN            %  SC.                                   43915000
              PARAM[92+OOOPS] ~PRTCTR; UPIT;                            43920000
              END;                                                      43925000
              PARAM[104]~PRTCTR; UPIT;%NDDTA                            43930000
              PARAM[105]~PRTCTR; UPIT;%STPOP                            43935000
              PARAM[106]~PRTCTR; UPIT;%XTFLG                            43940000
              PARAM[109]~PRTCTR; UPIT;%DMSTG                            43945000
              PARAM[110]~PRTCTR; UPIT;%Z                                43950000
              PARAM[111]~PRTCTR; UPIT;%T (LOOK AT P83 TAPES)            43955000
              PARAM[115]~PRTCTR; UPIT;%TEMP2                            43960000
              PARAM[116]~PRTCTR; UPIT;%RTWO                             43965000
 FOR OOOPS ~ 0 STEP 1 UNTIL 9 DO BEGIN PARAM[123 + OOOPS] ~ PRTCTR;     43970000
                             %HIVAL,M1,M2,M3,M4,M5,LOWSLCT,BRNCH,       43970001
              UPIT END;        %  BRNCHA,MPRT[I].                       43975000
   PARAM [138] ~ 4 +  PARAM[133];                                       43985000
              PARAM[140]~PRTCTR; UPIT;%MRG[I]                           43990000
              PARAM[143]~PRTCTR; UPIT;%FPRT[I]                          43995000
              PARAM[144]~PRTCTR; UPIT;%XPRNT                            44000000
              PARAM[145]~PRTCTR; UPIT;%SUM                              44005000
              PARAM[147]~PRTCTR; UPIT;%TOTAL                            44010000
   PARAM [154] ~ OFOLT;        %PRT OF OFOLT AT OBJECT TIME             44015000
   PARAM [155] ~ INDEX;        %FOR COBOL "CONTROL"                     44020000
   PARAM [156] ~ CONTROL ;     %COBOL MAIN CONTROL                      44025000
              PARAM[157]~PRTCTR; UPIT;                                  44030000
                             %INTOT INPUT DATA RECORD COUNT TOTAL       44030001
                       A~ 11 + PARAM[153];                              44034000
                             %IF MEMORY SIZE WAS NOT SPECIFIED          44034001
                       IF PARAM[141]=1 THEN T1~ FIB[A.[38:3],A.[41:7]]  44034010
                             % FOR SORT ASSUME 12000 WORDS.             44034011
                                       ELSE T1 ~ 0;                     44034020
                       SA ~ (8|WDS)+(2|WDS|T1)+1200;                    44034100
                       IF HPAR[5] < SA THEN                             44034200
               BEGIN   HPAR[12] ~ HPAR[5] ~ SA;                         44034300
                       OCV1(X,1,0,5,SA);MSG[124]~0&5[1:43:5]&X[6:18:30];44034400
                       EIND~ 90&71[32:40:8]&15[24:40:8]&124[16:40:8];   44034500
                       ERP(EIND,0);                                     44034600
               END;                                                     44034700
                       NEXMAX~MAXSEG; MAXSEG~ HPAR[5];                  44034800
                       X ~ HPAR[5]                                      44035000
        - 512  - 50  -  50 - 500 ; COMMENT MEMSIZE - PRT - STACK-IOSEG  44040000
 - PROGRAM SEGMENT ITSELF;                                              44045000
A~11+PARAM[153];Y~X-2|WDS-(IF PARAM[141]=1 THEN 2|WDS|                  44050000
         FIB[A.[38:3],A.[41:7]] ELSE                                    44050001
 0);  C~Y/WDS;                                                          44055000
     V ~  9 ;  COMMENT  2 TO 9TH IS 512 ;                               44060000
 RE:  IF V >  1 THEN                                                    44065000
   BEGIN  N ~ 2 ;  FOR T1 ~ 2 STEP 1 UNTIL V DO N ~ N | 2 ;             44065100
     END  ELSE  BEGIN V ~ 1 ; N ~ 2  END ;                              44065200
 SA~(WDS+1)|2 | N + 2| N;                                               44070000
 IF SA > Y THEN BEGIN V ~ V-1; GO TO RE  END;                           44075000
IOM ~X DIV(2|PARAM[83]|PARAM[62]); COMMENT SPACE DIV (2|WDS|TAPES);     44085000
  A~11+PARAM[165]; IOM2~(X-(IF PARAM[142]=1 THEN 2|WDS|                 44090000
         FIB[A.[38:3],A.[41:7]] ELSE 0))                                44090001
   DIV (2 | WDS | (PARAM[83] - 1) );                                    44095000
 IF IOM2 < IOM  THEN IOM ~ IOM2;                                        44100000
    ZO~(Y-SA) DIV (2|WDS);  COMMENT       TEST FOR SORT 4/27  DF;       44105000
 LIMIT: IF (ZO | WDS) > 1022 THEN BEGIN ZO ~ ZO - 1; GO TO LIMIT  END;  44115000
 IF ZO } IOM THEN BEGIN ZO ~ IOM; GO TO LL1  END;                       44120000
IF((ZO | WDS) < 511) AND ( ZO < IOM ) THEN                              44125000
              BEGIN V ~ V - 1; GO TO RE  END;                           44130000
   LL1:     FOR I~1 STEP 1 UNTIL PARAM[83] DO                           44135000
         BEGIN PARAM[1] ~ 11 + PARAM[158] + 20 |(I-1);                  44135100
    A~PARAM[1];FIB[A.[38:3],A.[41:7]] ~ZO; COMMENT REC/BLOCK;           44135200
        A~A+7;  COMMENT 18TH WORD OF FIB;                               44135300
        FIB[A.[38:3],A.[41:7]].[3:15]~ ZO | WDS; COMMENT WDS/BUFFER;    44135400
 PARAM[103] ~ZO | WDS; COMMENT BFULL IS BLOCKFULL OF RECORDS           ;44135500
        FIB[A.[38:3],A.[41:7]].[33:15]~PARAM[62]; COMMENT WDS/RECORD;   44140000
       A~A-5;   COMMENT 13TH WORD OF FIB;                               44140050
    FIB[A.[38:3],A.[41:7]].[1:9]  ~ 2; COMMENT NO BUFFERS ;             44140100
    FIB[A.[38:3],A.[41:7]].[24:1] ~ 1 ; COMMENT BINARY TAPES ;          44140200
   A~A-8;FIB[A.[38:3],A.[41:7]].[42:6]~32; COMMENT FIB 5 ~40 OCTAL DF;  44141000
        A  ~  A - 1  ;                                                  44141100
 IF FIB[A.[38:3],A.[41:7]].[7:1]=1 THEN               COMMENT 5-19-64;  44141150
    PARAM[13] ~ 1 ELSE PARAM[13] ~ 0; COMMENT COMMON SD FILE  5-19-64;  44141160
    FIB[A.[38:3],A.[41:7]].[ 7:1] ~ 1 ; COMMENT SORTFILE ;              44141200
     END;  PARAM[58] ~ N;                                               44145000
 IF PARAM[13] = 1 THEN                                COMMENT 5-19-64;  44145010
    BEGIN T1~200; COMMENT PRINT WARNING ON SORT COMMON SD     5-19-64;  44145012
         MSG[124].[1:5]~2; MSG[124].[6:12]~T1;        COMMENT 5-19-64;  44145014
         EIND ~ 77 & 90[32:40:8]&57[24:40:8]&124[16:40:8];COMMENT 5-19; 44145016
       ERP(EIND,0); COMMENT WARNING ONLY: SORT ERROR 38.      5-19-64;  44145018
    END;PARAM[13]~PARAM[58]+1;COMMENT SET N+1.                5-19-64;  44145050
              PARAM[59] ~ PARAM[58] - 1; COMMENT M ~ N - 1;             44145060
   PARAM[81] ~PARAM[59]+ PARAM[59];     COMMENT LOW ~ 2|N - 2 OR 2|M   ;44145070
                    IF NOT ZOBOL THEN BEGIN                             44145100
    COMMENT   SORT VECTOR SIZE XXXX ,  RECORD SIZE SELECTED XXXX       ;44145201
 OCV1(T2,0,0,8,N) ; MSG[124].[1:5] ~ 4; MSG[124] .[6:24] ~ T2 ;         44145202
 EIND ~ 90 & 72[32:40:8] & 15[24:40:8] & 124[16:40:8] ; ERP(EIND,0) ;   44145203
 T1 ~ ZO | WDS; OCV1(T2,0,0,8,T1); MSG[124].[1:5] ~ 4 ;                 44145204
                             MSG[124].[6:24] ~ T2 ;                     44145205
 EIND ~ 34 & 15[32:40:8] & 88[24:40:8] & 124[16:40:8] ; ERP(EIND,0) ;   44145206
  END;                                                                  44145300
 SRMEM:             IF PRTCTR} 512 THEN                   COMMENT DSRT; 44146000
    BEGIN T1 ~ 199;COMMENT SORT SYNTX ERR 37 PRT } 512     5-20-64;     44146100
         MSG[124].[1:5] ~2;MSG[124].[6:12] ~T1; COMMENT      5-20-64;   44146200
   EIND ~ 77&90[32:40:8] &57[24:40:8]&124[16:40:8];COMMENT 5-20-64;     44146300
      ERP(EIND,0); RECOV; COMMENT "SYNTAX ERROR SORT STATMT 37" 5-20-64;44146400
    PARAM[166] ~ 0;                   COMMENT     5-20-64;    END ;     44146500
                    IF NOT DSFLAG THEN                    COMMENT DSRT; 44150000
              BEGIN I~0; SYLL~0;                          COMMENT DSRT; 44155000
              END;                                        COMMENT DSRT; 44157000
    PARAM[3] ~ 5;   COMMENT FOR INTRINSIC FOR DISK          DF 2-3-65 ; 44160000
                    IF DSFLAG THEN                                      44170000
                BEGIN                                                   44170500
                    EM1(2);%PICK UP MEMORY AND STORE IT IN              44200000
                    EM6(LOD);% SD UNTIL NEXT SORT TO CAUSE              44200050
                    IF PARAM[139]> 511 THEN EM6(XRT);                   44200100
                    EM1(PARAM[139] );%INVD ADDR IF ACCESSED BEFORE      44200150
                    EM6(STD);%THE SORT.......                           44200200
                    EM3A(88);                                           44225000
                END ELSE EM3A(44);                                      44230000
                    EM6(BFW);                             COMMENT DSRT; 44235000
 IKEY ~ IK;                                                             44240000
     END;   COMMENT FUZZY      ;                                        44245000
 EM15(NOOP);       COMMENT          --START OF EQLES SUBROUTINE--------;44250000
                             %CMPS 2 KEYS-GIVE EQL OR LESS ANSWER.      44250001
                             %USED BY BOTH SORT & MERGE PHASE           44250002
 IF R[0,4] = 0 THEN            %IF A BINARY KEY THEN CONTINUE ELSE      44255000
 BEGIN                         % FALL THRU TO 44680000 FOR ALPHA KEY    44260000
    LABEL BINCMP2 , BINCMP3 , BINCMP4 , BINCMP5 ;                       44265000
   T10 ~ SEG[0,0];                                                      44270000
    MAKELABEL(0,PARAM[91],I,0);  %  E-Q-L-E-S SUBR.        COMMENT DF;  44275000
         FOR IK ~ 0 STEP 1 UNTIL IKEY DO                                44280000
                             %LOOP THRU KEYS(UP TO 25 ALLOWED)          44280001
  BEGIN K2 ~ R[IK,2];          %LOCATION OF KEY                         44285000
   IF R[IK,1] < 12 THEN        %IF SINGLE PRECISION THEN CONTINUE       44290000
   BEGIN                       % ELSE FALL THRU TO 44425000.            44295000
    EM4(107);      COMMENT LITC XXXX  KEY WORD LOC                     ;44300000
                             %CODE EMITTED TO PUT THE TWO KEYS TO       44300001
    EM17(2);       COMMENT OPDC F-2   X TO STACK                       ;44305000
                             % BE COMPARED INTO THE STACK.              44305001
    EM4(107);      COMMENT LITC XXXX                                   ;44310000
    EM17(1);       COMMENT OPDC F-1   Y TO STACK                       ;44315000
    IF IKEY = 0 THEN GO TO BINCMP2;%IF ONLY KEY EMIT FINAL COMPARE.     44320000
    IF IKEY = IK THEN GO TO BINCMP2;%IF LAST KEY EMIT FINAL COMPARE.    44325000
    EM6(NEQ);      COMMENT NEQ        IF EQUAL, CHECK NEXT KEY         ;44335000
                             %CODE EMITTED BETWEEN HERE AND SEQ #       44335001
    EM3A(61);      COMMENT            MARK POSITION OF LITC FOR BFC    ;44340000
                             % 44395000 IS REPEATED IN LINE FOR         44340001
    EM6(BFC);      COMMENT BFC  C0002 TO CHECK NEXT KEY ON EQUAL       ;44345000
                             % EACH KEY.                                44345001
    EM4(107);      COMMENT LITC XXXX  KEY WORD LOC                     ;44350000
                             % SEPARATE CHECK FOR EQUAL IS BYPASS-      44350001
    EM17(2);       COMMENT QPDC F-2   X TO STACK                       ;44355000
                             % ED IF ONLY OR LAST KEY.                  44355001
    EM4(107);      COMMENT LITC XXXX                                   ;44360000
    EM17(1);       COMMENT OPDC F-1   Y TO STACK                       ;44365000
 BINCMP2:                                                               44375000
    IF R[IK,0] = 1 THEN EM6(LSQ) ELSE EM6(GRQ); COMMENT LEQ IF ASCENDNG;44380000
    EM18(4);       COMMENT LITC F-4   LOC OF ANSWER                    ;44385000
    EM6(STD);      COMMENT STD        STORE ANSWER                     ;44390000
    EM6(XIT);      COMMENT XIT      --XIT------------------------------;44395000
  IF IKEY = IK THEN GO TO BINCMP3;                                      44400000
    IF IKEY = 0 THEN GO TO BINCMP3;                                     44405000
    EM3B(61);      COMMENT FIX LITC TO JFC TO START OF NEXT KEY CMP    ;44410000
 BINCMP3:                                                               44415000
   END                                                                  44420000
  ELSE                                                                  44425000
   BEGIN                                                                44430000
    EM4(107);      COMMENT LITC XXXX  KEY WORD LOC                     ;44435000
                             %DOUBLE PRECISION. CODE EMITTED AS         44435001
    EM1(1);        COMMENT LITC 1                                      ;44440000
                             % FOR SINGLE PREC ABOVE, ONLY M ETHOD      44440001
    EM6(ADD);      COMMENT ADD                                         ;44450000
                             % OF PERFORMING ACTUAL COMPARE IS          44450001
    EM17(1);       COMMENT OPDC F-1   2ND WORD OF DOUBLE PREC KEY Y    ;44455000
                             % DIFFERENT.                               44455001
    EM4(107);      COMMENT LITC XXXX                                   ;44460000
    EM17(1);       COMMENT OPDC F-1   1ST WORD OF Y                    ;44465000
    EM4(107);      COMMENT LITC XXXX  KEY WORD LOC                     ;44470000
    EM1(1);        COMMENT LITC 1                                      ;44475000
    EM6(ADD);      COMMENT ADD                                         ;44480000
    EM17(2);       COMMENT OPDC F-2   2ND WORD OF X KEY                ;44485000
    EM4(107);      COMMENT LITC XXXX                                   ;44490000
    EM17(2);       COMMENT OPDC F-2   1ST WORD OF X KEY                ;44495000
    EM6(DLS);      COMMENT DLS        SUB X FROM Y                     ;44500000
    EM6(LOR);      COMMENT LOR        ANSWER WILL SHOW IF 0, +, -      ;44505000
    IF IKEY = 0 THEN GO TO BINCMP4;                                    ;44515000
    IF IK = IKEY THEN GO TO BINCMP4;                                   ;44520000
    EM18(4);       COMMENT LITC F-4   SAVE ANSWER OF LOR               ;44525000
    EM6(SND);      COMMENT SND                                         ;44530000
    EM1(0);        COMMENT LITC 0     FOR CMP                          ;44535000
    EM6(NEQ);      COMMENT NEQ        CHECK NEXT KEY IF EQUAL          ;44540000
    EM3A(62);      COMMENT                                             ;44545000
    EM6(BFC);      COMMENT BFC        TO NEXT KEY ON EQUAL             ;44550000
    EM17(4);       COMMENT OPDC F-4   RECALL ANSWER - CHECK HI-LO      ;44555000
 BINCMP4:                                                               44560000
    EM1(0);        COMMENT LITC 0     FOR  CMP                         ;44565000
    IF R[IK,0] = 1 THEN EM6(GRQ) ELSE EM6(LSQ);COMMENT GEQ IF ASCENDING;44570000
    EM3A(63);      COMMENT            MARK LITC FOR BFC                ;44580000
    EM6(BFC);      COMMENT BFC C0004  JUMP FOR FALSE ANSWER            ;44585000
    EM1(1);        COMMENT LITC 1     TRUE  X { Y                      ;44590000
    EM18(4);       COMMENT LITC F-4                                    ;44595000
    EM6(STD);      COMMENT STD        STORE ANSWER IN F-4              ;44600000
    EM6(XIT);      COMMENT XIT      --XIT------------------------------;44605000
    EM3B(63);      COMMENT (C0004)                                     ;44610000
    EM1(0);        COMMENT LITC 0     FALSE X > Y                      ;44615000
    EM18(4);       COMMENT LITC F-4                                    ;44620000
    EM6(STD);      COMMENT STD                                         ;44625000
    EM6(XIT);      COMMENT XIT                                         ;44630000
    IF IK = IKEY THEN GO TO BINCMP5;                                    44640000
    IF IKEY = 0 THEN GO TO BINCMP5;                                     44645000
    EM3B(62);                                                           44650000
 BINCMP5:                                                               44655000
   END                                                                  44660000
  END                                                                   44665000
 END    ELSE                                                            44670000
       BEGIN                                                            44675000
   T10 ~ SEG[0,0];                                                      44680000
    MAKELABEL(1,PARAM[91],I,0);  %  E-Q-L-E-S ALTE-NATE    COMMENT DF;  44685000
 FOR IK ~ 0 STEP 1 UNTIL IKEY DO                                        44690000
 BEGIN  K2 ~ R[IK,2] | 8 + R[IK,3];%SAVE LOCATION OF CURRENT KEY.       44695000
 IF IK = 0 THEN GO TO SKIPPER;COMMENT FIRST OR ONLY KEY TO SKIPPER     ;44700000
                             %IF FIRST OR ONLY KEY GO                   44700001
     K4 ~ K3 - K2; COMMENT            K3-END OF PREV KEY,K2 START NEXT ;44705000
                             %MOVE KEY LOC FROM THIS KEY TO NEXT        44705001
     IF K4 { 0 THEN            % KEY.NEXT KEY MAY BE BEYOND CURRENT     44710000
      BEGIN                    % KEY.(IF K4 {0)                         44715000
        K4 ~ - K4; COMMENT            CHANGE SIGN TO PLUS              ;44720000
                             % IF SO, INCREASE LOC FROM CURRENT         44720001
        GO TO SKIPIN           % SETTING RATHER THAN FROM START OF      44725000
      END;                     % RECORD.                                44730000
     IF K4 > K2 THEN GO TO SKIPPER                                     ;44735000
                             %OR IT MAY PRECEDE THE PREV. KEY. IF       44735001
                             % CLOSER TO START OF REC. THAN PREV.       44735002
                             % KEY MOVE LOC FROM START ELSE             44735003
 SKIPOUT:                                                               44740000
     IF K4 { 63 THEN           % DECREAS LOCATION FROM PREV.SETTING.    44745000
      BEGIN                                                             44750000
        EM13(120,SRS);COMMENT         SKIP REVERSE DEST & SOURCE       ;44755000
        EM13(120,SRD)                                                   44760000
      END                                                               44765000
     ELSE                                                               44770000
      BEGIN                                                             44775000
        EM12(56,SRS);COMMENT          SKIP REVERSE DEST & SOURCE       ;44780000
        EM12(56,SRD);                                                   44785000
        K4 ~ K4 - 56;                                                   44790000
        GO TO SKIPOUT                                                   44795000
      END;                                                              44800000
     GO TO SKIPEND;                                                     44805000
 SKIPPER:                                                               44810000
     K4 ~ K2;                                                           44815000
     EM12(2,RSA);  COMMENT RSA2       X                                ;44820000
     EM12(1,RDA);  COMMENT RDA1       Y                                ;44825000
 SKIPIN:                                                                44830000
     IF K4 = 0 THEN            %IF K4 =0 KEY STARTS EITHER AT START     44835000
     GO TO SKIPEND; COMMENT           KEY BEGINS AT START OF RECORD    ;44840000
                             % OF RECORD OR ADJACENT TO END OF          44840001
 SKIPPY:                       % LAST KEY                               44845000
     IF K4 { 63 THEN                                                    44850000
      BEGIN                                                             44855000
        EM13(120,SFS);                                                  44860000
        EM13(120,SFD)                                                   44865000
      END                                                               44870000
     ELSE                                                               44875000
      BEGIN                                                             44880000
        EM12(56,SFS);                                                   44885000
        EM12(56,SFD);                                                   44890000
        K4 ~ K4 -56;                                                    44895000
        GO TO SKIPPY                                                    44900000
      END;                                                              44905000
 SKIPEND:                                                               44910000
  IF IKEY = 0 THEN GO TO SKIPENDING; COMMENT DON T STORE SETTINGS      ;44915000
                             %IF ONLY KEY                               44915001
   K3 ~ K2 + R[IK,1];          %SAVE STARTING LOC OF KEY PLUS LENGTH    44920000
 SKIPENDING:                                                            44925000
  LNTH ~ R[IK,1];              %KEY LENGTH                              44930000
  IF R[IK,4] ! 1 THEN GO TO CMSIGN;COMMENT ALPHA CONTINUES IN SEQUENCE ;44935000
                             %IF KEY NOT ALPHA(NUM),UNSIGNED OR         44935001
                             % EDITED NUMERIC GO TO SIGNED NUM.         44935002
  IF IKEY = 0 THEN GO TO ONLYLAST;COMMENT ONLY KEY OR LAST KEY OMIT    ;44940000
                             %IF ONLY KEY                               44940001
  IF IK = IKEY THEN GO TO ONLYLAST;COMMENT   NEXT  6 SYLLABLES         ;44945000
                             %IF LAST KEY                               44945001
   EM12(3,SSA);    COMMENT SSA 3      STORE X (SOURCE) KEY LOC IN 3    ;44950000
                             %EMIT CODE TO CHECK EACH KEY AND TO        44950001
   EM12(5,SDA);    COMMENT SDA 5      STORE Y (DESTINATION)KEY LOC IN 5;44955000
                             % SET ANSWER WHEN AN UNEQUALITY IS         44955001
  EM13(121,CNE);   COMMENT CNE LNTH                                    ;44960000
                             % FOUND OR ON LAST KEY.                    44960001
  EM12(10,JFC);    COMMENT JFC 10     TO CHECK NEXT KEY                ;44965000
  EM12(3,RSA);     COMMENT RSA 3      RESET REGISTERS TO               ;44970000
  EM12(5,RDA);     COMMENT RDA 5         START OF KEYS                 ;44975000
 ONLYLAST:                                                              44980000
  IF R[IK,0] =1 THEN EM13(121,CEL) ELSE EM13(121,CEG);COMMENT CEL-ASCND;44985000
  EM12(3,JFC);     COMMENT JFC 3                                       ;44990000
  EM12(1,SEC);     COMMENT SEC 1      SET ANSWER TO TRUE               ;44995000
  EM12(5,STC);     COMMENT STC 5                                       ;45000000
  EM12(0,EXC);     COMMENT EXC                                         ;45005000
  EM12(0,SEC);     COMMENT SEC 0      SE  ANSWER TO FALSE              ;45010000
  EM12(5,STC);     COMMENT STC 5                                       ;45015000
  EM12(0,EXC);     COMMENT EXC                                         ;45020000
  GO TO CHARMODEEND;                                                    45025000
 CMSIGN:                       %COMP FOR SIGNED NUMERICS STARTS HERE    45030000
 EM12(3,SSA) ;     COMMENT  SSA 3   STORE SOURCE ADDRESS IF SIGNED     ;45031000
 EM12(5,SDA) ;     COMMENT  SDA 5  STORE DEST ADDRESS IF SIGNED        ;45032000
  LNTHMIN1 ~ LNTH - 1;         %SAVE LENGTH MINUS 1.                    45035000
  IF IKEY = 0 THEN GO TO LASTONLY;%IF ONLY KEY                          45040000
  IF IK = IKEY THEN GO TO LASTONLY; COMMENT MULTI(EXCEPT LAST)CONTINUES;45045000
                             %IF LAST KEY                               45045001
  EM13(121,CEQ);   COMMENT CEQ LNTH   SORCE & DEST STILL SET           ;45060000
                             % FURTHER CHECKING IS REQUIRED. IF         45060001
  IF R[IK,4] = 3 THEN EM12(29,JFC) ELSE EM12(32,JFC);                   45065000
                             % SIGNS ARE EQUAL A NORMAL ALPHA CMP       45065001
  EM12(3,RSA);                 % IS PERFORMED IF J SIGN (MSD),          45070000
 LASTONLY:                     % OTHERWISE S SIGN(LSD) IS REMOVED       45075000
  EM12(3,SED);     COMMENT SED 3      SET DEST TO STACK                ;45080000
                             % AND A STANDARD CMP IS PERFORMED.         45080001
 IF R[IK,4]  = 3 THEN GO TO CMSIGN2; COMMENT JUMP IF SIGNED MSD;        45085000
  EM13(122,SFS);   COMMENT SFS LNTH-1 GET TO LSD OF KEY IF SIGNED LSD  ;45090000
 CMSIGN2:                                                               45095000
  EM12(1,TRN);     COMMENT TRN 1      TR SIGNED CHAR,IF - T/F SET TRUE ;45100000
  IF R[IK,4] = 3 THEN EM12(11,JFC) ELSE EM12(12,JFC);                   45105000
  EM12(5,RSA);     COMMENT RSA 5      SET SOURCE & DEST TO Y           ;45110000
  EM12(3,SED);     COMMENT SED 3                                       ;45115000
  IF R[IK,4] = 3 THEN GO TO CMSIGN3; COMMENT JUMP IF SIGNED MSD;        45120000
  EM13(122,SFS);   COMMENT SFS LNTH-1 GET TO LSD OF KEY                ;45125000
 CMSIGN3:                                                               45130000
  EM12(1,TRN);     COMMENT TRN 1      MOVE SIGNED CHARACTER            ;45135000
          BEGIN REAL FUZZY;                                             45140000
  EM12(4,JFC);     COMMENT JFC 4      JUMP ON FALSE- X IS < Y- SET TRUE;45145000
  EM12(3,RSA);     COMMENT RSA 3      X                                ;45150000
  EM12(5,RDA);     COMMENT RDA 5      Y                                ;45155000
  IF R[IK,0] = 1 THEN EM13(121,CEG) ELSE EM13(121,CEL);                 45160000
  IF R[IK,4] = 3 THEN EM12(7,JFC)  ELSE EM12(8,JFC);                    45165000
  EM12(1,SEC);     COMMENT SEC 1      SET ANSWER TRUE  1.E. X < Y      ;45170000
  EM12(5,STC);     COMMENT STC 5      STORE ANSWER                     ;45175000
  EM12(0,EXC);     COMMENT EXC      --EXIT CHAR MODE SUBROUTINE--------;45180000
  EM12(5,RSA);     COMMENT RSA 5      SOURCE SET TO Y                  ;45185000
  EM12(3,SED);     COMMENT SED 3                                       ;45190000
     END;   COMMENT FUZZY      ;                                        45195000
  IF R[IK,4] = 3 THEN GO TO CMSIGN4; COMMENT JUMP IF SIGNED MSD;        45200000
  EM13(122,SFS);   COMMENT SFS LNTH-1 GET TO LSD OF KEY                ;45205000
 CMSIGN4:                                                               45210000
  EM12(1,TRN);     COMMENT TRN 1      TRANSFER SIGNED CHARACTER        ;45215000
          BEGIN REAL FUZZY;                                             45220000
  EM12(3,JFC);     COMMENT JFC 3      JUMP IF Y KEY IS ALSO PLUS       ;45225000
  EM12(0,SEC);     COMMENT SEC 0      SET ANSWER FALSE 1.E.X > Y       ;45230000
  EM12(5,STC);     COMMENT STC 5      STORE ANSWER                     ;45235000
  EM12(0,EXC);     COMMENT EXC 0    --EXIT CHAR MODE-------------------;45240000
  EM12(3,RSA);     COMMENT RSA 3      X                                ;45245000
  EM12(5,RDA);     COMMENT RDA 5      Y                                ;45250000
  IF R[IK,0] = 1 THEN EM13(121,CEL) ELSE EM13(121,CEG);                 45255000
  EM12(7,JRC);     COMMENT JRC 7      TO SET ANSWER FALSE              ;45260000
  EM12(1,SEC);     COMMENT SEC 1      +ET ANSWER TRUE  1.E. X <Y       ;45265000
  EM12(5,STC);     COMMENT STC 5      STORE ANSWER                     ;45270000
  EM12(0,EXC);     COMMENT EXC 0    --XIT CHAR MODE--------------------;45275000
     END;   COMMENT FUZZY      ;                                        45280000
 CHARMODEEND:                                                           45285000
 END END;          COMMENT            FINISHED GENERATING SUBROUTINE   ;45290000
                             %END OF EQLES SUBROUTINE FOR SORT.         45290001
                    IF DSFLAG THEN GO TO COMPEQUAL;       COMMENT DSRT; 45290100
 EM15(NOOP);       COMMENT          --START CMPEQ SUBR-----------------;45295000
                             %CHECKS FOR END-OF-STRING RECORD.          45295001
   T10 ~ SEG[0,0];                                                      45300000
    MAKELABEL(1,PARAM[96],I,0);  %  C-M-P-E-Q  SUBR        COMMENT DF;  45305000
 K2 ~  R[0,2] | 8 +  R[0,3]; COMMENT  START OF FIRST KEY               ;45310000
                             %CALC CHAR LOC OF FIRST KEY.               45310001
   EM12(1,RSA);                                                         45315000
   EM12(2,RDA);                %EMIT CODE TO SKIP FORWARD TO THE        45320000
 CMPEQL:                       % START OF THE KEY(IF K2 = 0 KEY IS      45325000
   IF K2 = 0 THEN GO TO CMPEQ; % AT START OF RECORD).                   45330000
   IF K2 { 63  THEN                                                     45335000
      BEGIN                                                             45340000
        EM13(107,SFS);                                                  45345000
        EM13(107,SFD)                                                   45350000
      END                                                               45355000
     ELSE                                                               45360000
      BEGIN                                                             45365000
        EM12(56,SFS);                                                   45370000
        EM12(56,SFD);                                                   45375000
        K2 ~ K2 - 56;                                                   45380000
        GO TO CMPEQL                                                    45385000
      END ;                                                             45390000
 CMPEQ:                                                                 45395000
 IF  R[0,4] = 0 THEN GO TO CMPEQL8;%IF BINARY CMP(1.E. OCTAL DIGITS)    45400000
 IF  R[0,0] = 1 THEN GO TO CMPEQL8;%IF SORTING ON ASCENDING KEY         45405000
   LNTH  ~  R[0,1];COMMENT CHAR DESCENDING-USE FULL FIRST KEY          ;45410000
   GO TO COMPEQUAL;                                                     45415000
 CMPEQL8:                                                               45420000
   IF  R[0,1] > 7 THEN  LNTH ~ 8                                        45425000
     ELSE LNTH  ~  R[0,1];COMMENT USE 8 OR ACTUAL SIZE,WHICHEVER SMALLR;45430000
 COMPEQUAL:                                                             45435000
          BEGIN REAL FUZZY;                                             45440000
                    LABEL LGA;                            COMMENT DSRT; 45440100
                    IF DSFLAG THEN GO TO LGA;             COMMENT DSRT; 45440200
      EM13(121,CEQ);                                                    45445000
      EM12(3,JFC);                                                      45450000
      EM12(1,SEC);                                                      45455000
      EM12(4,STC);                                                      45460000
      EM12(0,EXC);                                                      45465000
      EM12(0,SEC);                                                      45470000
      EM12(4,STC);                                                      45475000
      EM12(0,EXC); COMMENT          --END CMPEQ SUBR-------------------;45480000
 LGA:                                                     COMMENT DSRT; 45480100
 EM15(NOOP);       COMMENT          --HIVAL SUBROUTINE-----------------;45485000
                             %CREATES "END-OF-STRING" RECORD            45485001
   T10 ~ SEG[0,0];                                                      45490000
    MAKELABEL(1,PARAM[123],I,0); %  H-I-V-A-L  SUBR        COMMENT DF;  45495000
 EM12(1,RSA);      COMMENT RSA 1      SET SOURCE TO START OF ALNIN REC ;45500000
 EM12(1,RDA);      COMMENT RDA 1      SET DESTIN TO START OF ALNIN REC ;45505000
 EM12(8,TRP);      COMMENT TRP 8      TR NEXT 8 CHAR TO 1ST WORD ALNIN ;45510000
 IF R[0,4] = 0 THEN            %IF BINARY KEY THEN                      45515000
 BEGIN                                                                  45520000
   IF R[0,0] = 1 THEN EM12(7,TRS) ELSE EM12(23,TRS);COMMENT 0,0/1,0,111;45525000
                             %IF ASCENDING SORT THEN INSERT OCTAL       45525001
   EM12(63,TRS);   COMMENT            1,1,1,1,1,1,                     ;45530000
                             % +9999999   ELSE -9999999.                45530001
   EM12(63,TRS);   COMMENT            1,1,1,1,1,1,                     ;45535000
   EM12(63,TRS);   COMMENT            1,1,1,1,1,1,                     ;45540000
 END                                                                    45545000
 ELSE                                                                   45550000
 BEGIN                                                                  45555000
   EM12(12,SDA);   COMMENT            0,0,1,1,0,0,                     ;45560000
                             %ELSE ALPHA KEYS,INSERT QUESTION-          45560001
   EM12(12,SDA);   COMMENT            0,0,1,1,0,0,                     ;45565000
                             % MARKS AS HIGHEST VALUE.                  45565001
   EM12(12,SDA);   COMMENT            0,0,1,1,0,0,                     ;45570000
   EM12(12,SDA);   COMMENT            0,0,1,1,0,0,                     ;45575000
 END;              COMMENT  SOURCE AT 1ST WORD, DEST AT 2ND WORD       ;45580000
 IF WDS { 64 THEN              %EMIT CODE TO FILL RECORD WITH THESE     45585000
  BEGIN                        % HIGH VALUES.                           45590000
   VAL ~ WDS - 1;                                                       45595000
   EM12(VAL,TRW);  COMMENT TRW XXXX   TR WDS - WORDS                   ;45600000
  END                                                                   45605000
 ELSE                                                                   45610000
  BEGIN                                                                 45615000
   VAL ~(WDS - 1) DIV 63;                                               45620000
   REM ~(WDS - 1)MOD 63;                                                45625000
   EM12(VAL,BNS);                                                       45630000
   EM12(63,TRW);                                                        45635000
   EM12(0,ENS);                                                         45640000
   IF REM ! 0 THEN EM12(REM,TRW);COMMENT MOVE REMAINDER                ;45645000
  END;                                                                  45650000
     END;   COMMENT FUZZY      ;                                        45655000
  IF R[0,4] =0 THEN GO TO HIVALEND;           COMMENT  BINARY DONE     ;45660000
  IF R[0,0] =1 THEN GO TO HIVALEND; COMMENT  ASCENDING CHARACTER DONE  ;45665000
   K2 ~ R[0,2] | 8 + R[0,3]; COMMENT IF DESCENDING MAKE 1ST KEY BLANKS ;45670000
                             %IF DESCENDING ALPHA SORT THEN MAKE        45670001
   EM12(1,RDA);                % FIRST KEY BLANK.                       45675000
   IF K2 = 0 THEN GO TO LOWKEYIN;                                       45680000
 LOWKEYS:                                                               45685000
   IF K2 { 63 THEN EM13(107,SFD)                                        45690000
     ELSE                                                               45695000
       BEGIN                                                            45700000
         EM12(56,SFD);                                                  45705000
         K2 ~K2 -56;                                                    45710000
         GO TO LOWKEYS                                                  45715000
       END;                                                             45720000
 LOWKEYIN:                                                              45725000
   LNTH ~ R[0,1];  COMMENT            KEY LENGTH                       ;45730000
 EM13(121,BNS) ; COMMENT BNS XXX(ERROR DID NEST 57 TIMES)RES 9-17-64;   45735000
   EM12(1,TRP);    COMMENT TRP 1                                       ;45740000
   EM12(48,CEQ);   COMMENT BLANKS     1,1,0,0,0,0                      ;45745000
   EM12(0,ENS);    COMMENT ENS 0                                       ;45750000
              HIVALEND:                                                 45755000
  EM12(0,EXC);     COMMENT X1T      --END OF HIVAL SUBR----------------;45760000
 EM15(NOOP);       COMMENT AJST       ADJUST TO BEGINNING OF NEXT WORD ;45765000
                    IF DSFLAG THEN GO TO LGA;             COMMENT DSRT; 45765500
   T10 ~ SEG[0,0];                                                      45770000
    MAKELABEL(1,PARAM[073],I,0); %  M-O-V-E  SUBR          COMMENT DF;  45775000
          BEGIN REAL FUZZY;                                             45780000
 EM12(2,RSA);      COMMENT RSA  2   --START OF MOVE SUBR---------------;45785000
                             %MOVES A RECORD                            45785001
 EM12(1,RDA);      COMMENT RDA  1     SET SOURCE AND DESTINATION REG   ;45790000
 IF WDS   { 63 THEN                                                     45795000
  BEGIN                                                                 45800000
     PARAM[11] ~ WDS ;  COMMENT  RECORDS LESS THAN 63 WORDS LONG       ;45805000
     EM13(11,TRW)                                                       45810000
  END                                                                   45815000
 ELSE                                                                   45820000
  BEGIN                                                                 45825000
   PARAM[12]~WDS DIV 63; COMMENT  RECDS LONGER THAN 63 WDS, BREAK INTO ;45830000
T6 ~ WDS MOD 63; COMMENT GROUPS OF 63 WITH REMAINDER NEXT GROUP 2/27/64;45835000
PARAM[11] ~ T6; COMMENT MUST GET INTEGER INP11  I  2/27/64 RES         ;45836000
   IF PARAM[12]>1 THEN                                                  45840000
    BEGIN                                                               45845000
     EM13(12,BNS);       COMMENT  EMITS SYLLABLES FOR MOVING TWO OR    ;45850000
     EM12(63,TRW);       COMMENT  MORE GROUPS OF 63 WORDS              ;45855000
     EM12(0,ENS)                                                        45860000
    END                                                                 45865000
   ELSE                                                                 45870000
    EM12(63,TRW);        COMMENT  WHEN ONLY ONE GROUP OF 63  NO NESTING;45875000
          IF PARAM [11] ! 0 THEN                                        45880000
     EM13(11,TRW)                                                       45885000
  END;                   COMMENT  JUST MOVED REMAINING WORDS(1.E. < 63);45890000
 EM12(0,EXC);            COMMENT    --END OF MOVE SUBR ----------------;45895000
     END;   COMMENT FUZZY      ;                                        45900000
      BEGIN LABEL EMITJUMP;   COMMENT SYSTEM BLOCK ONE ---------------; 45905000
    T10~SEG[0,0];  EM15(NOOP);  COMMENT START OF WORD          4-65 DF; 45910000
    MAKELABEL(0,PARAM[144],I,A1); COMMENT OPENARAY SUBR        4-65 DF; 45915000
  EM4(62);         COMMENT LITC WDS                                DF;  45925000
    EM4(13);       COMMENT LITC  N&1                                DF; 45930000
   EM4(60);        COMMENT LITC DATA   THIS OPENS ARAY DATA AS     DF;  45935000
  EM11(10);   COMMENT  DESC 10    TWO DIMENSIONAL BUT WITHOUT       DF; 45940000
                             %  OPENED AND CLOSED IN SORT INDEPEN-      45940001
  EM1(21);    COMMENT  LITC 21    THE WASTE OF LINK WORDS.          DF; 45945000
                             %  DENT OF ANY BLOCK STRUCTURE SHOWN       45945001
   EM6(COM);    COMMENT COM     IE.   GETS ONE CONTIGUOUS AREA      DF; 45950000
                             %  IN ALGOL CHARTS OF THE OBJECT SORT      45950001
  EM6(DEL);   COMMENT   DEL      INSTEAD OF N&1 AREAS FOR           DF; 45955000
                             %  PROGRAM.                                45955001
  EM6(DEL);   COMMENT DEL   THE NUMBER OF ROWS(SECOND DIM).         DF; 45960000
    EM6(DEL);    COMMENT  DEL                                       DF; 45965000
   EM4(62);   COMMENT   LITC WDS                                   DF ; 45970000
   EM4(13);  COMMENT   LITC N&1                                    DF ; 45975000
  EM4(61);    COMMENT LITC ALTDT                                    DF; 45980000
   EM11(10);    COMMENT   DESC 10                                  DF ; 45985000
    EM1(21);    COMMENT   LITC 21                                  DF ; 45990000
  EM6(COM) ;  COMMENT COM    COMMUNICATE                           DF ; 45995000
   EM6(DEL) ;   COMMENT   DELETE TO CLEAR OUT STACK                DF ; 46000000
   EM6(DEL) ;   COMMENT   DELETE TO CLEAR OUT STACK                DF ; 46005000
   EM6(DEL) ;   COMMENT   DELETE TO CLEAR OUT STACK                DF ; 46010000
 IF (PARAM[141] =0) OR (PARAM[142] = 0) THEN                            46020000
              BEGIN            %PARAM[141] = MEANS USERS INPUT          46025000
 EM6(MKS) ;   COMMENT MKS CALLING THE INTRINSIC TO OPEN ARRCOMMENT DF;  46027000
 EM4(139);         COMMENT LITC SORTREC                                ;46030000
                             %PARAM[142] = MEANS USERS OUTPUT           46030001
 EM11(10);         COMMENT DESC 10    LOCATION      (4)                ;46035000
                             %  FOR EITHER WE NEED THE "DUMMY           46035001
 EM4(62);          COMMENT LITC WDS   LENGTH        (3)                ;46040000
                             %  RECORD" SORTREC.  IF NEITHER, THEN      46040001
 EM1(1);           COMMENT LITC 1     ONE DIMENSION (2)                ;46045000
                             %  SORTREC NOT NEEDED.                     46045001
 EM1(1);           COMMENT LITC 1     ONE ARRAY     (1)                ;46050000
 EM1(1);      COMMENT LITC 1 OPEN DO NOT OVERLAY CODE      COMMENT DF;  46055000
 EM10(3);     COMMENT OPDC 5  CALL INTRINSIC TO OPEN ARRAYSCOMMENT DF;  46055100
              END;                                                      46080000
 EM6(MKS) ;   COMMENT MKS CALLING THE INTRINSIC TO OPEN ARRCOMMENT DF;  46082000
 EM4(63);     COMMENT LITC VECTR   OPEN ONE VECTOR FOR INDEXES         ;46085000
 EM11(10);         COMMENT DESC 10                                  (4);46090000
 EM4 (58);         COMMENT LITC N                                      ;46095000
 EM6(DUP);         COMMENT DUP                                         ;46100000
 EM6(ADD);         COMMENT ADD        INDICES FROM ZERO THRU (2N-2)    ;46105000
 EM1(1);           COMMENT LITC 1     LENGTH EQUALS 2N - 1             ;46110000
 EM6(SUB);         COMMENT SUB                                      (3);46115000
 EM1(1);           COMMENT LITC 1     ONE DIMENSION                 (2);46120000
 EM1(1);           COMMENT LITC 1     ONE ARRAY                     (1);46125000
 EM1(1);      COMMENT LITC 1 OPEN DO NOT OVERLAY CODE      COMMENT DF;  46130000
 EM10(3);     COMMENT OPDC 5  CALL INTRINSIC TO OPEN ARRAYSCOMMENT DF;  46135000
 EM6(MKS);    COMMENT MKS                                              ;46156000
 EM4(58);     COMMENT LITC N                                           ;46156100
 EM11(60);    COMMENT DESC DATA     CALL ON HIVAL ROUTINE TO FILL IN   ;46156200
 EM6(LOD);    COMMENT LOD           ALNINES (OR EQUIVALENT) TO 513TH   ;46156300
 EM10(123);   COMMENT OPDC HIVAL    (OR N+1 TH) VECTOR OF DATA.    H   ;46156400
 EM6(MKS);    COMMENT MKS        NOW DO SAME IN ALTDATA                ;46156500
 EM4(58);     COMMENT LITC N                                           ;46156600
 EM11(61);    COMMENT DESC ALTDATA                                     ;46156700
 EM6(LOD);    COMMENT LOD                                              ;46156800
 EM10(123);   COMMENT OPDC HIVAL                                       ;46156900
 EM6(MKS) ;   COMMENT MKS CALLING THE INTRINSIC TO OPEN ARRCOMMENT DF;  46156950
 EM4(99);          COMMENT LITC A                                      ;46160000
                             %ARRAYS A AND B ARE USED BY THE            46160001
 EM11(10);         COMMENT DESC 10                                  (6);46165000
                             %  DIAGONAL-X POLYPHASE DISTRIBUTION       46165001
 EM4(100);         COMMENT LITC B                                      ;46170000
                             %  PROCESS.                                46170001
 EM11(10);         COMMENT DESC 10                                  (5);46175000
 EM4(101);         COMMENT LITC C                                      ;46180000
                             %ARRAY C HOLDS CONTENTS OF STRINGS ON      46180001
 EM11(10);         COMMENT DESC 10                                  (4);46185000
                             %  VARIOUS TAPES FOR USE IN DISTRI-        46185001
 EM4 (83);         COMMENT LITC TAPES NUMBER OF ELEMENTS            (3);46190000
                             %  BUTION AND MERGING.                     46190001
 EM1(1);           COMMENT LITC 1     ONE DIMENSION                 (2);46195000
 EM1(3);           COMMENT LITC 3     NUMBER OF ARRAYS              (1);46200000
 EM1(1);      COMMENT LITC 1 OPEN DO NOT OVERLAY CODE      COMMENT DF;  46205000
 EM10(3);     COMMENT OPDC 5  CALL INTRINSIC TO OPEN ARRAYSCOMMENT DF;  46210000
 EM6(XIT);  COMMENT EXIT FROM SUBR TO OPEN ARRAYS              4-65 DF; 46215000
 EM3B(44);  COMMENT JUMP HERE TO START SORT, CALL ON ARRAY OPENS 4-65DF;46240000
 IF PARAM[141] = 1 THEN BEGIN  %IF STANDARD INPUT                       46245000
 EM6(MKS);         COMMENT MKS        OPEN INPUT FILE PARAMETERS       ;46250000
 EM4(67);          COMMENT LITC INFIL LOCATION  TEN OF PRT CONTAINS A  ;46255000
 EM11(10);         COMMENT DESC 10    DESCRIPTOR OF THE PRT ITSELF.    ;46260000
 EM1(1);           COMMENT LITC 1     INFIL  IS THE FIB DESCR. FOR INPT;46265000
 EM10(65);         COMMENT OPDC FCR   ONE  IS CODE FOR OPEN INPUT      ;46270000
              END  ELSE        %ELSE USERS INPUT                        46275000
              BEGIN                                                     46280000
 EM4(150);         COMMENT  LITC INPRO   THIS SETS FLAG FOR FIRST ENTRY;46285000
 EM4(148);         COMMENT  LITC BINGO   TO USERS INPUT AT THE TOP OF  ;46290000
 EM6(STD);         COMMENT  STD          HIS ROUTINE.                  ;46295000
              END;                                                      46300000
 EM6(MKS);         COMMENT MKS                                         ;46305000
                             %IF THIS IS A THREE TAPE SORT, TWO OF      46305001
 EM4(16);          COMMENT LITC OUT1                                   ;46310000
                             %  THE OUTPUT WORKTAPES ARE OPENED         46310001
 EM11(10);         COMMENT DESC 10                                     ;46315000
                             %  NOW, FOR FOUR TAPE SORT, THREE ARE      46315001
 EM1(3);           COMMENT LITC 3     THREE  IS CODE FOR OPEN OUTPUT   ;46320000
                             %  OPENED , ETC.UP TO EIGHT TAPE SORT      46320001
 EM10(65);         COMMENT OPDC FCR                                    ;46325000
                             %  WHERE SEVEN TAPES ARE OPENED.           46325001
 EM6(MKS);         COMMENT MKS        COPY  DATA ADDRESS               ;46330000
 EM4(21);          COMMENT LITC  OUT2   LOC OF FIB DESCR.           DF; 46335000
 EM10(66);         COMMENT OPDC ADRES OPEN NEXT OUTPUT FILE            ;46340000
 IF PARAM[83] = 3 THEN GO TO EMITJUMP; COMMENT CHECKING NO. MERGE TAPES;46345000
 EM6(MKS);         COMMENT MKS                                         ;46350000
 EM4(26);          COMMENT LITC  OUT3                               DF; 46355000
 EM10(66);         COMMENT OPDC ADRES TO OPEN OUTFILE 3                ;46360000
 IF PARAM[83] = 4 THEN GO TO EMITJUMP                                  ;46365000
 EM6(MKS);         COMMENT MKS                                         ;46370000
 EM4(31);          COMMENT LITC  OUT4                               DF; 46375000
 EM10(66);         COMMENT OPDC ADRES TO OPEN OUTFILE 4                ;46380000
 IF PARAM[83] =5 THEN GO TO EMITJUMP                                   ;46385000
 EM6(MKS);         COMMENT MKS                                         ;46390000
 EM4(36);          COMMENT LITC  OUT5                               DF; 46395000
 EM10(66);         COMMENT OPDC ADRES TO OPEN OUTFILE 5                ;46400000
 IF PARAM[83]= 6 THEN GO TO EMITJUMP                                   ;46405000
 EM6(MKS);         COMMENT MKS                                         ;46410000
 EM4(41);          COMMENT LITC  OUT6                               DF; 46415000
 EM10(66);         COMMENT OPDC ADRES TO OPEN OUTFILE 6                ;46420000
 IF PARAM[83] = 7 THEN GO TO EMITJUMP                                  ;46425000
 EM6(MKS);         COMMENT MKS                                         ;46430000
 EM4(46);          COMMENT LITC  OUT7                               DF; 46435000
 EM10(66);         COMMENT OPDC ADRES TO OPEN OUTFILE 7                ;46440000
 EMITJUMP: EM3A(1);COMMENT            MARK POSITION OF LITC FOR BFW S  ;46445000
 EM6(BFW);         COMMENT BFW  A0300                                  ;46450000
 EM15(NOOP);       COMMENT AJST       ADJUST TO BEGINNING OF NEXT WORD ;46455000
                             %NOTE THAT ALL OF                          46455001
   T10 ~ SEG[0,0];             %SORT IS ONE PHYSICAL  SEGMENT           46460000
    MAKELABEL(0,PARAM[066],I,0); %  A-D-R-E-S  SUBR        COMMENT DF;  46465000
                             %WITH MULTIPLE                             46465001
 EM17(1);          COMMENT OPDC F-1 --START OF ADRES SUBROUTINE--------;46470000
                             %LABELS AND PROCEDURES                     46470001
 EM6(LOD);         COMMENT LOD    LOC  NTH  FIB DESCRIPTOR.         DF; 46475000
                             %INSIDE.                                   46475001
 EM1(18);          COMMENT LITC 18     SET FIB[18].[1:1] TO ONE     DF; 46480000
                             %THE "ADRES" SUBROUTINE                    46480001
 EM6(CDC);         COMMENT CDC       FOR "SPECIAL OPEN" OF          DF; 46485000
                             %IS USED TO COPY THE DATA                  46485001
 EM6(DUP);         COMMENT DUP       SORT  SCRATCH TAPES FIRST TIME.DF; 46490000
                             %ADDRESS OUT OF THE                        46490001
 EM6(LOD);         COMMENT LOD       18 TH WORD TO STACK            DF; 46495000
                             %FIRST WORK TAPE                           46495001
 EM6(SSN);         COMMENT SSN                                      DF; 46500000
                             %I/O DESCRIPTORS                           46500001
 EM6(XCH);         COMMENT XCH                                      DF; 46505000
                             %(AFTER IT HAS BEEN OPENED)                46505001
 EM6(STD);         COMMENT STD      18 TH WORD STORED               DF; 46510000
 EM6(MKS);         COMMENT MKS                                         ;46570000
                             %GIVEN FOR THE FIRST WORK TAPE             46570001
 EM17(1);          COMMENT OPDC F-1   OPEN N TH OUTPUT                 ;46575000
                             %SPECIAL PRECAUTIONS MUST                  46575001
                             % BE TAKEN LATER WHEN                      46580000
 EM11(10);         COMMENT DESC 10                                     ;46590000
                             % TO UNIT TO ASSURE                        46590001
   EM1(3);         COMMENT LITC 3     OPEN OUTPUT CODE                 ;46595000
                             % THAT BUFFERS ARE                         46595001
 EM10(65);         COMMENT OPDC FCR   CALL ON FILE CONTROL ROUTINE     ;46600000
                             %EMPTIED ONTO THE                          46600001
 EM6(XIT);         COMMENT XIT      --END OF ADRES SUBROUTINE----------;46605000
                             %CORRECT TAPE.                             46605001
 EM3B(1);          COMMENT (A0300)    FIX LITC FOR BFW TO THIS POINT   ;46610000
 EM6(MKS);  COMMENT MKS   RE-ORDERING EVENTS TO                4-65 DF; 46612000
 EM10(144); COMMENT OPDC OPENARAYS HELP STORAGE ALLOCATION     4-65 DF; 46612100
 EM1(0);           COMMENT LITC 0     ZERO TO 1                        ;46615000
 EM11(78);         COMMENT DESC 1                                      ;46620000
 EM6(STD);         COMMENT STD        FOR 1 EQUAL (0,1,M) BEGIN1       ;46625000
 EM3A(2);          COMMENT            MARK POSITION OF LITC FOR BFW    ;46630000
 EM6(BFW);         COMMENT BFW  A0313                                  ;46635000
 EM2A(3);          COMMENT (A0304)    MARK POSITION FOR LATER BBW      ;46640000
 EM10(78);         COMMENT OPDC 1     1                                ;46645000
 EM1(1);           COMMENT LITC 1     1                                ;46650000
 EM6(ADD);         COMMENT ADD        1 PLUS 1                         ;46655000
 EM11(78);         COMMENT DESC 1     1 REPLACED BY 1 PLUS 1           ;46660000
 EM6(SND);         COMMENT SND                                         ;46665000
  EM4(59) ;   COMMENT  LITC M                                          ;46670000
 EM6(LSQ);         COMMENT LEQ        IS I GTR THAN M (B GTR A)        ;46675000
                   COMMENT            O K,STAY IN LOOP-CONT IN SEQUENCE;46680000
 EM3A(4);          COMMENT LITCXXXX   MARK POSITION OF LITC FOR BFC    ;46685000
 EM6(BFC);         COMMENT BFC  A0410 NO,GET OUT OF LOOP- BR ON FALSE  ;46690000
 EM3B(2);          COMMENT (A0313)    FIX LITC FOR BFW TO THIS POINT   ;46695000
 IF PARAM[141] = 1 THEN BEGIN                                           46700000
 EM6(MKS);         COMMENT MKS                                         ;46705000
 EM4 (62);         COMMENT LITC WDS                                    ;46710000
                             %FOR STANDARD                              46710001
 EM4(71);          COMMENT LITC INREC                                  ;46715000
                             %INPUT BY THE SORT                         46715001
 EM11(10);         COMMENT DESC 10    LOC IN PRT OF DESCRIPTOR (I/O)   ;46720000
                             %PROCEDURE ITSELF.                         46720001
 EM1(0);           COMMENT LITC 0     READ CODE IS ZERO                ;46725000
 EM10(64);         COMMENT OPDC READ  GO TO READ-WRITE ROUTINE         ;46730000
              END  ELSE                                                 46735000
              BEGIN                                                     46740000
 EM6(MKS);    COMMENT MKS     PERFORM OF I/O PROC REVISED    3/9/64 RES;46743000
 EM10(148);        COMMENT  OPDC BINGO   THIS ALTERNATE SET OF         ;46745000
 EM6(DUP);    COMMENT DUP                                    3/9/64 RES;46755000
 EM11(10) ;   COMMENT DESC 10  FOR I/O PROC PAST PRT 512      7-26-64;  46756000
 EM6(LOD);    COMMENT LOD                                    3/9/64 RES;46760000
              COMMENT                               REMOVED  3/9/64 RES;46765000
 EM4(151);         COMMENT  LITC IPFIDX                                ;46770000
              COMMENT                               REMOVED  3/9/64 RES;46772000
 EM6(COC);    COMMENT COC     THIS WILL PERFORM INPUT PROC.  3/9/64 RES;46775000
 EM10(149);        COMMENT  OPDC ENDQ                                  ;46780000
              END;                                                      46785000
 EM3A(5);          COMMENT            MARK POSITION OF LITC FOR BFW    ;46790000
 EM6(BFC);         COMMENT BFC  A0318 SKIP AT-END ROUTINE              ;46795000
 EM3A(6);          COMMENT            MARK POSITION OF LITC FOR BFW    ;46800000
 EM6(BFW);         COMMENT BFW  A0414 GO TO AT-END ROUTINE AT X2       ;46805000
 EM3B(5);          COMMENT (A0318)    FIX LITC FOR BFW TO THIS POINT   ;46810000
 EM6(MKS);         COMMENT MKS                                         ;46815000
   IF PARAM [141]=1 THEN EM4(71)ELSE EM4(139);COMMENT INRECE OR SORTRRC;46820000
 EM6(LOD);         COMMENT LOD        DESCRIPTOR OF INPUT RECORD       ;46825000
 EM10(78);         COMMENT OPDC I     MOVE INPUT RECORD INTO DATA ARRAY;46830000
 EM11(60);         COMMENT DESC DATA  FILLS FIRST HALF ON STARTING CYCL;46835000
 EM6(LOD);         COMMENT LOD        DESC OF DATA(1,0) AS 2ND PARAMETR;46840000
 EM10(73);         COMMENT OPDC MOVE  STK=DESC(DATA(1))DESC(RCDIN)RCDMV;46845000
 EM2B(3);          COMMENT LITC XXXX  EMITS LITC FOR BBW               ;46850000
 EM6(BBW);         COMMENT BBW  A0304 END1                             ;46855000
 EM3B(4);          COMMENT (A0410)    FIX LITC FOR BFC TO THIS POINT   ;46860000
 EM1(1);           COMMENT LITC 1     1 MEANS TRUE                     ;46865000
 EM11(74) ;   COMMENT  DESC MRDTA                                      ;46865100
 EM6(STD) ;   COMMENT STD     MOREDATA  ~ TRUE                         ;46865200
 EM1 (0) ;    COMMENT  LITC 0                                          ;46865300
 EM11(105) ;  COMMENT DESC STPOP    STPOP ~ FALSE                      ;46870000
 EM6(STD);         COMMENT STD                                         ;46875000
 EM4(59);     COMMENT LITC M                                           ;46875100
 EM4(94);     COMMENT LITC R   R ~ M FOR FULL VECTOR. THEN STRING USE R;46875200
 EM6(STD);    COMMENT STD      IN LOOP V(I) ~ I FOR (0,1,R)            ;46875300
 EM3A(7);          COMMENT LITC XXXX  MARK POSITION OF LITC FOR BFW    ;46880000
 EM6(BFW);         COMMENT BFW  A0600 JUMP TO X3                       ;46885000
 EM3B(6);          COMMENT (A0414)    FIX LITC FOR BFW TO THIS POINT   ;46890000
 EM1(1);      COMMENT LITC 1  ONE IS FOR TRUE  ( X 2 IS HERE )         ;47005000
 EM11(105) ;  COMMENT  DESC STPOP   STPOP ~ TRUE                       ;47010000
 EM6(STD);         COMMENT STD                                         ;47015000
 EM10(78);    COMMENT OPDC I                                           ;47016000
EM1(1) ;EM6(SUB) ; COMMENT LITC 1 SUB   R SET TO I - 1   3/23/64       ;47016050
 EM4(94);     COMMENT LITC R    R ~ I                                  ;47016100
 EM6(STD);    COMMENT STD                                              ;47016200
EM1 ( 0 ) ; COMMENT LITC 0 , ZERO FOR FALSE ;                           47020000
EM11 ( 74 ) ;  COMMENT DESC MOREDATA , SET TO FALSE ON EOFILE ;         47025000
 EM6(STD);         COMMENT STD                                         ;47030000
 EM3A(14);         COMMENT            MARK PSOITION OF LITC FOR BFW    ;47195000
 EM6(BFW);         COMMENT BFW  A1000                                  ;47200000
              END; COMMENT END  OF SYSTEM BLOCK ONE -------------------;47205000
              BEGIN REAL ZOWIE; COMMENT SYSTEM BLOCK TWO -------------; 47475000
 EM3B(7);     COMMENT FIX JUMP FORWARD TO HERE    X 3     X 3    X 3   ;47480000
 EM3B(14);         COMMENT (A1000)    FIX LITC FOR BFW TO THIS POINT   ;47485000
 EM4(87) ;    COMMENT LITC T-2   JJ ~ TAPES - 2                        ;47500000
 EM11(82);         COMMENT DESC JJ    LOC OF JJ                        ;47505000
 EM6(STD);         COMMENT STD                                         ;47510000
 EM1(0);           COMMENT LITC 0      SET TOTAL COUNTER FOR ALL       ;47515000
 EM4(157);         COMMENT LITC INTOT  INPUT RECORDS TO ZERO.          ;47520000
 EM6(STD);         COMMENT STD                                         ;47525000
 EM1(1);           COMMENT LITC 1     FOR 11=(1,1,JJ), A 11=0          ;47530000
 EM2A(15);         COMMENT            MARK POSITION FOR LATER BBW      ;47535000
 EM6(DUP);         COMMENT DUP        S= LL,II                         ;47540000
 EM1(0);           COMMENT LITC 0     S= 0,II,II                       ;47545000
 EM6(XCH);         COMMENT XCH        S= II,0,II                       ;47550000
 EM11(99);         COMMENT DESC A     S= 0,II                          ;47555000
 EM6(STD);         COMMENT STD        HERE A(I) SET TO ZERO            ;47560000
 EM6(DUP);         COMMENT DUP        STORE ZEROS INTO C(II) ALSO      ;47565000
 EM1(0);           COMMENT LITC 0                                      ;47570000
 EM6(XCH);         COMMENT XCH                                         ;47575000
 EM11(101);        COMMENT DESC C     LOC OF C(II)                     ;47580000
 EM6(STD);         COMMENT STD                                         ;47585000
 EM1(1);           COMMENT LITC 1     S= 1,II                          ;47590000
 EM6(ADD);         COMMENT ADD        S= II     INCREMENT II           ;47595000
 EM6(DUP);         COMMENT DUP        S= II,II                         ;47600000
 EM10(82);         COMMENT OPDC JJ    S= JJ,II,II                      ;47605000
 EM6(GRT);         COMMENT GTR        S= ANSWER,II    CMP  II GTR  JJ  ;47610000
 EM2B(15);         COMMENT LITC XXXX  EMITS LITC FOR BBC               ;47615000
 EM6(BBC);         COMMENT BBC  A1005 S= II                            ;47620000
 EM6(DEL);         COMMENT DEL         CLEAR STACK                 8-7; 47625000
 EM1(0);           COMMENT LITC 0                                      ;47630000
 EM6(DUP);         COMMENT DUP                                         ;47635000
 EM11(101);        COMMENT DESC C                                      ;47640000
 EM6(STD);         COMMENT STD        ZERO INTO C(0)                   ;47645000
 EM1(1);           COMMENT LITC 1     SET A(0) = 1                     ;47650000
 EM1(0);           COMMENT LITC 0                                      ;47655000
 EM11(99);         COMMENT DESC A                                      ;47660000
 EM6(STD);         COMMENT STD                                         ;47665000
 EM1(0);           COMMENT LITC 0     SELECT TAPE ZERO FOR 1ST STRING  ;47670000
 EM4(84);          COMMENT LITC II    OF RESULTS                       ;47675000
 EM6(STD);         COMMENT STD                                         ;47680000
 EM6(MKS);    COMMENT MKS                                              ;47681100
 EM10(97);    COMMENT OPDC ISLCT                                       ;47681200
 EM4(7);      COMMENT LITC IYII   SET IYII TO CURRENT OUTPUT PRTLOC    ;47681300
 EM6(SND);         COMMENT  SND                                     DF; 47681400
 EM4(124);         COMMENT  LITC M1   SET "PREV" FILE SELECTION FOR DF; 47681600
 EM6(STD);         COMMENT  STD       THE "DELAY" LOOP IN MCP       DF; 47681800
 EM6(MKS);         COMMENT MKS                                         ;47685000
 EM10(90);         COMMENT OPDC STRNG PERFORM SORT OF FIRST STRING     ;47690000
 EM6(MKS);         COMMENT MKS                                         ;47695000
 EM10(89);         COMMENT OPDC REVRS XCH DATA,ALTDT AND VECTR,ALTVT   ;47700000
 EM2A(16);         COMMENT (A1115)    MARK POSITION FOR LATER BBC      ;47750000
 EM10(82);         COMMENT OPDC JJ    ACTUAL STEPUP LABEL IS HERE      ;47755000
 EM1(1);           COMMENT LITC 1                                      ;47760000
 EM6(ADD);         COMMENT ADD                                         ;47765000
 EM4(82);          COMMENT LITC JJ    JJ=(JJ-1)MOD(TAPES-1)            ;47770000
 EM6(SND);         COMMENT SND                                         ;47775000
 EM4(86);     COMMENT LITC T-1                                         ;47780000
 EM6(EQL);         COMMENT EQL                                         ;47785000
 EM3A(17);         COMMENT LITC XXXX  MARK POSITION OF LITC FOR BFC    ;47790000
 EM6(BFC);         COMMENT BFC  A1205 SKIP FORWARD ON FALSE-UNTIL EQUAL;47795000
 EM1(0);           COMMENT LITC 0     RESET JJ TO ZERO FOR MOD FUNCTION;47800000
 EM4(82);          COMMENT LITC JJ                                     ;47805000
 EM6(STD);         COMMENT STD                                         ;47810000
 EM3B(17);         COMMENT (A1205)    FIX LITC FOR BFC TO THIS POINT   ;47815000
 EM1(0);           COMMENT LITC 0     FOR II = (0,1,T-2) BEGIN         ;47820000
 EM3A(18);         COMMENT LITC XXXX  MARK POSITION OF LITC FOR BFW    ;47825000
 EM6(BFW) ;        COMMENT BFW  A1212 II= 0                            ;47830000
 EM2A(19);         COMMENT (A1209)    MARK POSITION FOR LATER BBC      ;47835000
 EM2A(20);         COMMENT (A1209)    MARK POSITION FOR LATER BBC      ;47840000
 EM10(84);         COMMENT OPDC II    RETURN LOOY POINT FOR BEGIN-BLUE ;47845000
 EM1(1);           COMMENT LITC 1                                      ;47850000
 EM6(ADD);         COMMENT ADD                                         ;47855000
 EM3B(18);         COMMENT (1212)     FIX LITC FOR BFW TO THIS POINT   ;47860000
 EM4(84);          COMMENT LITC II                                     ;47865000
 EM6(SND);         COMMENT SND                                         ;47870000
 EM4(87);     COMMENT LITC T-2                                         ;47875000
 EM6(LSQ);         COMMENT LEQ        II LEQ TMIN2                     ;47880000
 EM3A(21);         COMMENT LITC XXXX  MARK POSITION OF LITC FOR BFC    ;47885000
 EM6(BFC);         COMMENT BFC  A1400 JUMP FORWARD ON FALSE-WHEN II GTR;47890000
 EM10(84);         COMMENT OPDC II    BEGIN-BLUE                       ;47895000
 EM6(DUP);         COMMENT DUP        B(11)=A(11)                      ;47900000
 EM10(99);         COMMENT OPDC A                                      ;47905000
 EM6(XCH);         COMMENT XCH                                         ;47910000
 EM11(100);        COMMENT DESC B                                      ;47915000
 EM6(STD);         COMMENT STD        B(II) STORED                     ;47920000
 EM10(84);         COMMENT OPDC II    IF II NEQ JJ THEN                ;47925000
 EM10(82);         COMMENT OPDC JJ    A(II) = A(II)+A(JJ)              ;47930000
 EM6(NEQ);         COMMENT NEQ                                         ;47935000
 EM2B(19);         COMMENT LITC XXXX  EMITS LITC FOR BBC               ;47940000
 EM6(BBC);         COMMENT BBC  A1209 JUMP BACK ON FALSE (WHEN II = JJ);47945000
 EM10(84);         COMMENT OPDC II                                     ;47950000
 EM6(DUP);         COMMENT DUP                                         ;47955000
 EM10(99);         COMMENT OPDC A                                      ;47960000
 EM10(82);         COMMENT OPDC JJ                                     ;47965000
 EM10(99);         COMMENT OPDC A                                      ;47970000
 EM6(ADD);         COMMENT ADD                                         ;47975000
 EM6(XCH);         COMMENT XCH        S=II,SUM                         ;47980000
 EM11(99);         COMMENT DESC A                                      ;47985000
 EM6(STD);         COMMENT STD        HERE A(II)= SUM                  ;47990000
 EM2B(20);         COMMENT LITC XXX   EMITS LITC FOR BBW               ;47995000
 EM6(BBW);         COMMENT BBW  A1209 END-BLUE                         ;48000000
 EM3B(21);         COMMENT (A1400)    FIX LITC FOR BFW TO THIS POINT   ;48005000
 EM1(1);           COMMENT LITC 1     FOR CTR = (1,1,A(JJ)) RED-BEGIN  ;48010000
 EM11(88);         COMMENT DESC CTR                                    ;48015000
 EM6(STD);         COMMENT STD                                         ;48020000
 EM3A(22);         COMMENT LITC XXXX  MARK POSITION FOR LITC ON BFW    ;48025000
 EM6(BFW);         COMMENT BFW  A1413                                  ;48030000
 EM2A(23);         COMMENT (A1404)    MARK POSITION FOR LATER BBW      ;48035000
 EM2A(24);         COMMENT (A1404)    MARK POSITION FOR LATER BBW      ;48040000
 EM10(88);         COMMENT OPDC CTR   RETURN POINT FOR LOOP            ;48045000
 EM1(1);           COMMENT LITC 1     CONTROL OF RETURN-RED            ;48050000
 EM6(ADD);         COMMENT ADD        INCREMENT CTR BY 1               ;48055000
 EM11(88);         COMMENT DESC CTR   LOC OF CTR                       ;48060000
 EM6(SND);         COMMENT SND                                         ;48065000
 EM10(82);         COMMENT OPDC JJ                                     ;48070000
 EM10(99);         COMMENT OPDC A                                      ;48075000
 EM6(LSQ);         COMMENT LEQ        IS CTR LEQ A(JJ)                 ;48080000
 EM2B(16);         COMMENT LITC XXXX  EMITS LITC FOR BBC               ;48085000
 EM6(BBC);         COMMENT BBC  A1115 JUMP ON FALSE TO STEPUP          ;48090000
 EM3B(22);         COMMENT (A1413     FIX LITC FOR BFW TO THIS POINT   ;48095000
 EM1(0);           COMMENT LITC 0     BEGIN-RED                        ;48100000
 EM11(84);         COMMENT DESC II    FOR I = (0,1,T-2) GREEN-BEGIN    ;48105000
 EM6(STD) ;        COMMENT  STD    ;                                    48110000
 EM3A(25);         COMMENT MARK POSITION OF LITC FOR BFW               ;48115000
 EM6(BFW);         COMMENT BFW  A1505                                  ;48120000
 EM2A(26);         COMMENT (A1417     MARK POSITION FOR LATER BBC      ;48125000
 EM2A(27);         COMMENT (A1417)    MARK POSITION FOR LATER BBC      ;48130000
 EM2A(28);         COMMENT (A1417)    MARK POSITION FOR LATER BBC      ;48135000
 EM10(84);         COMMENT OPDC II    RETURN POINT FOR LOOP            ;48140000
 EM1(1);           COMMENT LITC 1     CONTROL OF RETURN-GREEN INSIDE   ;48145000
 EM6(ADD);         COMMENT ADD         THE BEGIN-END RED LOOP          ;48150000
 EM11(84);         COMMENT DESC II    INCREMENT II BY 1                ;48155000
 EM6(SND);         COMMENT SND                                         ;48160000
 EM4(87);     COMMENT LITC T-2                                         ;48165000
 EM6(LSQ);         COMMENT LEQ        IS II LEQ THAN T - 2             ;48170000
 EM3A(29);         COMMENT MARK POSITION OF LITC FOR BFC               ;48175000
 EM6(BFC);         COMMENT BFC  A1604 JUMP ON FALSE OUT OF GREEN LOOP  ;48180000
 EM3B(25);         COMMENT (A1505)    FIX LITC FOR BFW TO THIS POINT   ;48185000
 EM6(MKS);    COMMENT MKS                                              ;48185100
 EM10(97);    COMMENT OPDC ISLCT                                       ;48185200
 EM4(7);      COMMENT LITC IYII   SET IYII TO CURRENT OUTPUT PRTLOC    ;48185300
 EM6(STD);    COMMENT STD                                              ;48185400
 EM10(84);         COMMENT OPDC II    BEGIN GREEN                      ;48190000
 EM10(82);         COMMENT OPDC JJ    IF II NEQ JJ                     ;48195000
 EM6(NEQ);         COMMENT NEQ                                         ;48200000
 EM2B(26);         COMMENT LITC XXXX  EMIT LITC FOR BBC                ;48205000
 EM6(BBC);         COMMENT BBC  A1417 WHEN FALSE(EQL) SKIP PURPLE-BLOCK;48210000
 EM10(74);         COMMENT OPDC MRDTA BEGIN-PURPLE                     ;48215000
 EM3A(30);         COMMENT            MARK POSITION OF LITC FOR BFC    ;48220000
 EM6(BFC);         COMMENT BFC  A1514 IF MOREDATA,THEN BEGINYELLOW STRG;48225000
 EM6(MKS);         COMMENT MKS                                         ;48230000
 EM10(90);         COMMENT OPDC STRNG REVERSE ADDRESSES FOR DATA WITH  ;48235000
 EM6(MKS);         COMMENT MKS                                         ;48240000
 EM10(89);         COMMENT OPDC REVRS ALTDT AND FOR VECTR WITH ALTVT   ;48245000
 EM2B(27);         COMMENT LITC XXXX  EMIT LITC FOR BBW                ;48250000
 EM6(BBW);         COMMENT BBW  A1417 ENDYELLOW (RETURN TO DO  GREEN)  ;48255000
 EM3B(30);         COMMENT (A1514)    FIX LITC FOR BFC TO THIS POINT   ;48260000
 EM6(MKS);         COMMENT MKS                                         ;48265000
 EM10(109);        COMMENT OPDC DMSTG BEGIN LITEGREEN - DMSTG WILL     ;48270000
    COMMENT   WRITE ONE DUMMY STRING ON TAPE II    ;                    48275000
 EM2B(28) ;       COMMENT LITC XXXXX FOR BBW, END-LITEGREEN      ;      48290000
 EM6(BBW);         COMMENT BBW  A1417 END-PURPLE, END-GREEN            ;48295000
 EM3B(29);         COMMENT (A1604)    FIX LITC FOR BFC TO THIS POINT   ;48300000
 EM10(74) ;        COMMENT OPDC MRDTA IF MOREDATA  FALSE THEN BEGINSIP; 48305000
 EM6(LNG) ;        COMMENT LNG  NEGATE TO REVERSE ANSWER ;              48306000
 EM2B(23);         COMMENT LITC XXXX  EMIT LITC FOR BBW                ;48310000
 EM6(BBC);         COMMENT BBC  A1404 GO TO LOOP CONTROL FOR BEGINRED  ;48315000
 EM10(82);         COMMENT OPDC JJ    BEGINZIP       Z EQLS A(JJ) - CTR;48320000
 EM10(99);         COMMENT OPDC A                                      ;48325000
 EM10(88);         COMMENT OPDC CTR                                    ;48330000
 EM6(SUB);         COMMENT SUB                                         ;48335000
 EM11(110);        COMMENT DESC Z                                      ;48340000
 EM6(STD);         COMMENT STD                                         ;48345000
 EM3A(133);        COMMENT LITC XXXX SET JUMP TO MERGE PROGRAM         ;48350000
 EM6(BFW);         COMMENT BFW                                         ;48355000
 EM15(NOOP);       COMMENT AJST       ADJUST TO BEGINNING OF NEXT WORD ;48360000
   T10 ~ SEG[0,0];                                                      48365000
    MAKELABEL(0,PARAM[090],I,0); %  S-T-R-I-N-G  SUBR      COMMENT DF;  48370000
 EM1(0);           COMMENT LITC 0   --START OF STRNG SUBROUTINE--------;48375000
 EM6(MKS) ;        COMMENT MKS  CALL ON DELAY TO CALL MCP         DF ;  48376000
 EM10(98);         COMMENT OPDC DELAY   GOES TO SLEEPSWITCHING TAPESDF; 48377000
 EM4(102);         COMMENT LITC SC    SET STRNG CTR (REC PER STRNG) TO ;48380000
 EM6(STD);         COMMENT STD        ZERO FOR NEXT STRNG              ;48385000
 EM1(0);      COMMENT LITC 0    FOR I ~ (0,1,R) DO                     ;48385050
 EM11(78);    COMMENT DESC I           VECTR(I)~ I                     ;48385100
 EM6(SND);    COMMENT SND                                              ;48385150
 EM3A(11);    COMMENT LITC XXXX                                        ;48385200
 EM6(BFW);    COMMENT BFW                                              ;48385250
 EM2A(12);    COMMENT MARK SPOT TO RETURN TO IN FOR LOOP               ;48385300
 EM1(1);      COMMENT LITC 1                                           ;48385350
 EM6(ADD);    COMMENT ADD                                              ;48385400
 EM3B(11);    COMMENT JUMP TO HERE FIRST TIME INTO LOOP                ;48385450
 EM6(DUP);    COMMENT DUP                                              ;48385500
 EM10(94);    COMMENT OPDC R                                           ;48385550
 EM6(LSQ);    COMMENT LEQ                                              ;48385600
 EM3A(13);    COMMENT      SET JUMPOUT                                 ;48385650
 EM6(BFC);    COMMENT BFC                                              ;48385700
 EM6(DUP);    COMMENT DUP                                              ;48385750
 EM11(63);    COMMENT DESC VECTR                                       ;48385800
 EM6(SND);    COMMENT SND                                              ;48385850
 EM2B(12);    COMMENT LITC XXXX                                        ;48385900
 EM6(BBW);    COMMENT BBW                                              ;48385950
 EM3B(13);    COMMENT   JUMP TO END FIRST FOR LOOP                     ;48386000
 EM10(94);    COMMENT OPDC R  NOW FOR I ~ (R+1,1,M)                    ;48386050
 EM4(78);     COMMENT LITC I                                           ;48386100
 EM6(STD);    COMMENT STD         DO  VECTR(I) ~N;                     ;48386150
 EM2A(68);    COMMENT      JUMP BACK TO HERE                        ;   48386250
 EM10(78);    COMMENT OPDC I                                         ;  48386300
 EM1(1);      COMMENT LITC 1                                      ;     48386350
 EM6(ADD);    COMMENT ADD            B E G I N N I N G               ;  48386400
 EM4(78);     COMMENT LITC I                                         ;  48386450
 EM6(SND);    COMMENT SND               O F                          ;  48386500
 EM4(59);     COMMENT LITC M                                         ;  48386550
 EM6(LSQ);    COMMENT LEQ           S T R I N G - R O U T I N E      ;  48386600
 EM3A(69);    COMMENT LITC XXXX                                      ;  48386650
 EM6(BFC);    COMMENT BFC                                              ;48386700
 EM4(58);     COMMENT LITC N                                           ;48386750
 EM10(78);    COMMENT OPDC I         VECTR(I) SET TO I                 ;48386800
 EM11(63);    COMMENT DESC VECTR       OR IF I > R                     ;48386850
 EM6(STD);    COMMENT STD              THEN TO N (POINTS AT ALNIN)     ;48386900
 EM2B(68);    COMMENT LITC XXXX                                        ;48386950
 EM6(BBW);    COMMENT BBW                                              ;48387000
 EM3B(69);    COMMENT    JUMP HERE WHEN LOOP FINI  THEN R~0 IS OKAY    ;48387050
 EM1(0);           COMMENT LITC 0                                      ;48390000
 EM4(78);          COMMENT LITC I                                      ;48395000
 EM6(SND);         COMMENT SND        I = ZERO                         ;48400000
 EM4(94);          COMMENT LITC R                                      ;48405000
 EM6(STD);         COMMENT STD        R = ZERO                         ;48410000
 EM10(105) ;  COMMENT OPDC STPOP                                       ;48411000
 EM6(LNG) ;   COMMENT LNG    MORE ~ NEG (STPOP )                       ;48415000
 EM4(80) ;       COMMENT   LITC MORE  ;                                 48415100
 EM6(STD) ;   COMMENT  STD                                             ;48415200
 EM1(1) ;     COMMENT LITC 1                                           ;48415300
 EM4(75);          COMMENT LITC J                                      ;48420000
 EM6(STD);         COMMENT STD        J = ONE                          ;48425000
 EM4 (58);         COMMENT LITC N                                      ;48430000
 EM4(95);          COMMENT LITC K                                      ;48435000
 EM6(STD);    COMMENT STD         K ~ N.                               ;48440000
 EM1(0);      COMMENT LITC 0                                           ;48456000
 EM4(92);     COMMENT LITC BC  SET BLOCK COUNTER TO ZERO FOR           ;48456100
 EM6(STD);    COMMENT STD      THE OUTPUT FILES. USE THIS TO INDEX.    ;48456200
 EM4(103);    COMMENT  LITC BFULL    NOW SET BLOCKSIZE TO MAXIMUM      ;48456300
 EM4(4);      COMMENT  LITC BLKSZ    FOR USE UNTIL END-OF-STRING       ;48456400
 EM6(STD);    COMMENT  STD                                             ;48456500
 EM2A(32);         COMMENT (A2016)    MARK POSITION FOR LATER BBW      ;48460000
 EM1(0);           COMMENT LITC 0     LABEL X4. LITC GIVES STACK SPACE ;48465000
 EM6(MKS);         COMMENT MKS          FOR ANSWER                     ;48470000
 IF R[0,4] ! 0 THEN EM1(0);COMMENT    EXTRA WD OF ZERO FOR CHAR        ;48475000
 EM10(78);         COMMENT OPDC I                                      ;48480000
 EM10(63);         COMMENT OPDC VECTR                                  ;48485000
 EM11(60);         COMMENT DESC DATA                                   ;48490000
 EM6(LOD);         COMMENT LOD        DESC DATA(VECTR(I),0)            ;48495000
 EM10(75);         COMMENT OPDC J                                      ;48500000
 EM10(63);         COMMENT OPDC VECTR IS STACK-2 LEQ THAN STACK-1      ;48505000
 EM11(60);         COMMENT DESC DATA  PLACE ANS (ZERO-TRUE) TO STACK-3 ;48510000
 EM6(LOD);         COMMENT LOD        DESC DATA(VECTR(J),0)            ;48515000
 EM10(91);         COMMENT OPDC EQLES GO TO EQUAL OR LESS SUBROUTINE   ;48520000
 EM3A(33);         COMMENT LITC XXXX  MARK POSITION OF LITC FOR BFC    ;48525000
 EM6(BFC);         COMMENT BFC  A2116 ANSWER AT TOP OF STACK ON RETURN ;48530000
 EM10(78);         COMMENT OPDC I     TRUE (EQUAL OR LESS)             ;48535000
EM10(63);          COMMENT OPDC VECTR                                  ;48535500
 EM3A(34);         COMMENT LITC XXXX  MARK POSITION OF LITC FOR BFW    ;48540000
    EM6(BFW);      COMMENT BFW   A2117                                 ;48545000
 EM3B(33);         COMMENT (A2116)    FIX LITC FOR BFC TO THIS POINT   ;48550000
 EM10(75);         COMMENT OPDC J                                      ;48555000
EM10(63);          COMMENT OPDC VECTR                                  ;48555500
 EM3B(34);         COMMENT (A2117)    FIX LITC FOR BFW TO THIS POINT   ;48560000
 EM10(95);         COMMENT OPDC K                                      ;48565000
 EM11(63);         COMMENT DESC VECTR                                  ;48570000
 EM6(STD);         COMMENT STD                                         ;48575000
 EM10(78);         COMMENT OPDC I     LOOPING STEPS                    ;48580000
 EM1(2);           COMMENT LITC 2                                      ;48585000
 EM6(ADD);         COMMENT ADD                                         ;48590000
 EM4(78);          COMMENT LITC I                                      ;48595000
 EM6(SND);         COMMENT SND        I = I + 2                        ;48600000
 EM4(81);     COMMENT LITC LOW                                         ;48605000
 EM6(NEQ);         COMMENT NEQ                                         ;48610000
 EM3A(35);         COMMENT LITC XXXX  MARK POSITION OF LITC FOR BFC    ;48615000
 EM6(BFC);         COMMENT BFC  A2300 JUMP ON FALSE (WHEN EQUAL)       ;48620000
 EM10(75);         COMMENT OPDC J                                      ;48625000
 EM1(2);           COMMENT LITC 2                                      ;48630000
 EM6(ADD);         COMMENT ADD                                         ;48635000
 EM4(75);          COMMENT LITC J                                      ;48640000
 EM6(STD);         COMMENT STD        J = J + 2                        ;48645000
 EM10(95);         COMMENT OPDC K                                      ;48650000
 EM1(1);           COMMENT LITC 1                                      ;48655000
 EM6(ADD);         COMMENT ADD                                         ;48660000
 EM4(95);          COMMENT LITC K     K = K + 1                        ;48665000
 EM6(STD);         COMMENT STD                                         ;48670000
 EM2B(32);         COMMENT LITC XXXX  EMIT LITC FOR BBW                ;48675000
 EM6(BBW);         COMMENT BBW  A2016 GO BACK TO LABEL X4              ;48680000
 EM2A(36);         COMMENT (A2300)    MARKS POSITION FOR LATER BBC     ;48685000
 EM3B(35);         COMMENT (A2300     FIX UP LITC FOR BFC TO THIS POINT;48690000
 EM6(MKS);         COMMENT MKS        LABEL X5. LOW RECORD FOUND       ;48695000
 EM4(81);     COMMENT LITC LOW   ITS INDEX IS NOW IN VECTR(LOW)        ;48700000
 EM10(63);         COMMENT OPDC VECTR                                  ;48705000
 EM11(60);         COMMENT DESC DATA                                   ;48710000
 EM6(LOD);         COMMENT LOD        DESCR FOR LOW RECORD TO STACK    ;48715000
 EM10(92);    COMMENT OPDC BC    LOCATION WITHIN OUTPUT BUFFER         ;48716000
 EM10(7);     COMMENT OPDC IYII  SELECT TAPE TO WHICH THIS RECORD      ;48725000
 EM11(10);         COMMENT  DESC 10     WILL BE WRITTEN.               ;48730000
 EM6(LOD);         COMMENT  LOD                                        ;48735000
 EM6(INX);    COMMENT INX        ADJUST TO CORRECT OUTBUFFER LOCATION  ;48736000
 EM10(73);         COMMENT OPDC MOVE  MOVES LOW RECORD TO OUTPUT AREA  ;48740000
 EM6(MKS);    COMMENT MKS                                              ;48742000
 EM10(5);     COMMENT OPDC DISTWRITE   CALL ON PHASE-ONE WRITE         ;48742050
 EM3A(81);    COMMENT LITC   JUMP AROUND THE SUBROUTINE "WRITE         ;48742100
 EM6(BFW);    COMMENT BFW                                              ;48742150
 EM15(NOOP);  COMMENT AJST   ADJST   ADJUST TO START OF A WORD         ;48742200
     T10 ~ SEG[0,0];                                                   ;48742250
    MAKELABEL(0,PARAM[005],I,0); %  W-R-I-T-E  P-H-A-S-E I COMMENT DF;  48742300
 EM10(92);    COMMENT OPDC BC                                          ;48745000
 EM4(62);     COMMENT LITC WDS     BLOCK LOCATION STEPPED UP           ;48750000
 EM6(ADD);    COMMENT ADD                                              ;48755000
 EM4(92);     COMMENT LITC BC                                          ;48760000
 EM6(SND);    COMMENT SND                                              ;48765000
 EM10(4);     COMMENT  OPDC BLKSZ                                      ;48770000
 EM6(EQL);    COMMENT EQL                                              ;48775000
 EM3A(38);    COMMENT LITC        JUMP ON NOT EQUAL AROUND             ;48780000
 EM6(BFC);    COMMENT BFC         THE PROGRAM RELEASE WHICH WRITES.    ;48785000
 EM1(0);      COMMENT LITC 0      WHEN EQUAL, RESET BC TO ZERO         ;48790000
 EM4(92);     COMMENT LITC BC     AND WRITE OUT THE TAPE (WITH RELEASE);48795000
 EM6(STD);    COMMENT STD                                              ;48800000
 EM10(7);     COMMENT OPDC IYII  LOC OF I/O DESCR                      ;48810000
 EM11(10);    COMMENT DESC 10     ABSOLUTE ADDRESS OF TOP I/O DESR.    ;48815000
 EM6(DUP);    COMMENT DUP        TWO COPIES OF LOC OF I/O DESCR        ;48816000
 EM6(LOD);    COMMENT LOD        NOW PICK UP THE DESCR                 ;48816200
 EM10(4);     COMMENT  OPDC BLKSZ (MUST RESET BLKSZ TO BFULL EACH STRNG;48816300
 EM14(38,DIA);COMMENT DIA  38                                          ;48816400
 EM14(8,DIB); COMMENT DIB  8                                           ;48816500
 EM19(10,TRB);COMMENT TRB  10    PLACE WDS TO WRITE INTO DESCR         ;48816600
 EM6(XCH);    COMMENT XCH                                              ;48816700
 EM6(STD);    COMMENT STD        PUT DESCR WITH SIZE BACK INTO PRT     ;48816800
 EM10(7);     COMMENT DISK FILE  PRL LOGIC                    2-3-65;   48816850
 EM6(LOD) ;     COMMENT DISK FILE PRL LOGIC                 2-3-65;     48816860
 EM10(7);     COMMENT OPDC IYII  REL LOC I/O DESCR FOR PRL COMMAND     ;48819000
 EM6(PRL);    COMMENT PRL   WRITE THE BLOCK.                           ;48820000
 EM6(DEL) ;    COMMENT   DISK FILE PRL LOGIC               DF 2-3-65;   48820500
 EM2A(71);         % SET POINT OF PB CHECK                              48820501
 EM1(0);           COMMENT LITC 0 NOW CHECK I/O COMPLETE BIT        DF; 48820502
 EM10(7);          COMMENT  OPDC  IYII    REL LOC OF I/O DESCR     DF ; 48820504
 EM6(LOD);         COMMENT LOD                                      DF; 48820506
 EM14(19,DIA);     COMMENT DIA 19                                   DF; 48820508
 EM14(47,DIB) ;    COMMENT  DIB 47                                 DF ; 48820510
 EM19(1,TRB);      COMMENT TRB 1                                    DF; 48820512
 EM6(LNG);         COMMENT NEG                                      DF; 48820514
 EM1(11);          COMMENT LITC 11   FIXED JUMP                     DF; 48820516
 EM6(BFC);         COMMENT BFC     JUMP ON I/O COMPLETE             DF; 48820518
 EM10(7);          COMMENT  OPDC  IYII    REL LOC OF I/O DESCR     DF ; 48820520
 EM11(10);         COMMENT DESC 10   ABSOLUTE LOCATION I/O DESCR    DF; 48820522
 EM1(0);           COMMENT LITC 0                                   DF; 48820524
 EM1(1);           COMMENT LITC 1                                   DF; 48820526
 EM14(19,DIB);     COMMENT DIB 19                                   DF; 48820528
 EM14(47,DIA) ;    COMMENT  DIA 47                                 DF ; 48820530
 EM19(1,TRB);      COMMENT TRB 1                                    DF; 48820532
 EM1(2);           COMMENT LITC 2                                   DF; 48820534
 EM6(COM);         COMMENT COM                                      DF; 48820536
 EM6(DEL);         COMMENT DEL                                      DF; 48820538
 EM6(DEL);         COMMENT DEL                                      DF; 48820540
 EM2A( 71);   COMMENT  MARK FOR JUMP BACK TO HERE TO ITERATE PRSNC BIT ;48821000
 EM10(7) ;    COMMENT  OPDC IYII   START PRESENCE BIT CHECK            ;48821100
 EM6(LOD);    COMMENT LOD     I/O DESCR                                ;48821200
 EM1(0);      COMMENT LITC 0                                           ;48821300
 EM14(2,DIB); COMMENT DIB 2                                            ;48821400
 EM19(1,FCE); COMMENT FCE1  EQUAL TO ZERO (TRUE) MEANS ABSENT          ;48821500
 EM3A(70);    COMMENT  LITC XXXX                                       ;48821600
 EM6(BFC);    COMMENT  BFC       JUMP ON FALSE (PRESENT)               ;48821700
 EM6(MKS);         % MKS                                                48821800
 EM1(0);           % LITC 0          REEL SWITCH                        48821900
 EM1(0);           % LITC 0                                             48822000
 EM10(7);          % OPDC IYII                                          48822100
 EM1(3);           % LITC 3                                             48822150
 EM6(SUB);         % SUB                                                48822200
 EM11(10);         % DESC 10                                            48822250
 EM1(6);           % LITC 6                                             48822300
 EM10(65);         % OPDC FCR                                           48822350
 EM6(DEL);         % DEL                                                48822400
 EM2B(71);         % RECHECK P.B.                                       48822450
 EM6(BBW);                                                              48822500
 EM3B( 70);   COMMENT  SET FOR JUMP TO HERE IF PRESENT AT TEST         ;48823900
 EM6(XIT);    COMMENT  EXIT  FROM WRITE AFTER A PRL GIVEN              ;48824000
 EM3B(38);    COMMENT   NEW LOC TO BE JUMPED TO.                       ;48824500
 EM6(XIT);    COMMENT  EXIT   FROM WRITE SUBROUTINE (NO PRL REQD)      ;48824600
 EM3B(81);    COMMENT  FIX JUMP TO HERE AROUND WRITE SUBR              ;48824900
 EM4(81);     COMMENT LITC LOW                                         ;48825000
 EM10(63);    COMMENT OPDC VECTR     IF VECR[LOW] EQUALS N&1           ;48830000
 EM4(58);     COMMENT LITC N                                           ;48835000
 EM6(NEQ);    COMMENT NEQ                                              ;48840000
 EM3A(39);    COMMENT LITC                                             ;48841000
 EM6(BFC);    COMMENT BFC            JUMPS ON FALSE (EQUALITY)         ;48842000
 EM10(102);        COMMENT OPDC SC                                     ;48850000
 EM1(1);           COMMENT LITC 1                                      ;48855000
 EM6(ADD);         COMMENT ADD                                         ;48860000
 EM4(102);         COMMENT LITC SC                                     ;48865000
 EM6(STD);         COMMENT STD                                         ;48870000
 EM10(157);        COMMENT  OPDC INTOT                                 ;48875000
 EM1(1);           COMMENT  LITC 1                                     ;48880000
 EM6(ADD);         COMMENT  ADD         INTOT ~ INTOT + 1              ;48885000
 EM4(157);         COMMENT  LITC INTOT                                 ;48890000
 EM6(STD);         COMMENT  STD                                        ;48895000
 EM10(80);         COMMENT OPDC MORE  LABEL X9                         ;48900000
 EM3A(40);         COMMENT LITC XXXX  MARK POSITION OF LITC FOR BFC    ;48905000
 EM6(BFC);         COMMENT BFC  A2608 IF MORE=TRUE BEGIN1-ELSE SKIP BLK;48910000
 EM2A(41);         COMMENT (A2411)    MARKS POSITION FOR LATER BBW     ;48915000
 EM10(94);         COMMENT OPDC R  IF R NEQ FULL THEN BEGIN2           ;48915100
 EM4(58);     COMMENT LITC N     (FULL IS N).                          ;48915200
 EM6(NEQ);         COMMENT NEQ                                         ;48915300
 EM3A(46);         COMMENT LITC XXXX MARK POSITION OF LITC FOR BFC     ;48915400
 EM6(BFC);         COMMENT BFC A2605 JUMP FALSE TO X8 (END2) (R FULL)  ;48915500
 IF PARAM[141] = 1 THEN BEGIN                                           48920000
 EM6(MKS);         COMMENT MKS        THIS IS A2411;                    48925000
 EM4 (62);         COMMENT LITC WDS   (LENGTH OF PREVIOUS RECORD)      ;48930000
 EM4(71);          COMMENT LITC INRCD X10. READ INFIL,AT END GO TO X11 ;48935000
 EM11(10);         COMMENT DESC 10    DESC OF THE I/O DESCR            ;48940000
 EM1(0);           COMMENT LITC 0     CODE FOR READ IS ZERO;            48945000
 EM10(64);         COMMENT OPDC READ  CALL ON READ/WRITE ROUTINE;       48950000
              END  ELSE                                                 48955000
              BEGIN                                                     48960000
 EM6(MKS);    COMMENT MKS     PERFORM OF I/O PROC REVISED    3/9/64 RES;48963000
 EM10(148);        COMMENT  OPDC BINGO                                 ;48965000
 EM6(DUP);    COMMENT DUP                                    3/9/64 RES;48975000
 EM11(10) ;   COMMENT DESC 10  FOR I/O PROC PAST PRT 512      7-26-64;  48976000
 EM6(LOD);    COMMENT LOD                                    3/9/64 RES;48980000
              COMMENT                               REMOVED  3/9/64 RES;48985000
 EM4(151);         COMMENT  LITC IPFIDX                                ;48990000
              COMMENT                               REMOVED  3/9/64 RES;48992000
 EM6(COC);    COMMENT COC     THIS WILL PERFORM INPUT PROC.  3/9/64 RES;48995000
 EM10(149) ;       COMMENT    OPDC  ENDQ   ;                            49000000
              END;                                                      49005000
 EM3A(42);         COMMENT LITC XXXX  MARK POSITION OF LITC FOR BFC    ;49010000
 EM6(BFC);         COMMENT BFC A2416  SKIP AT-END PROCESS              ;49015000
 EM3A(43);         COMMENT LITC XXXX  MARK POSITION OF LITC FOR BFC    ;49020000
 EM6(BFW);         COMMENT BFW  A3300 GO TO X11 FOR AT-END             ;49025000
 EM3B(42);         COMMENT (A2416)    FIX LITC FOR BFW TO THIS POINT   ;49030000
 EM1(0);           COMMENT LITC 0     ZERO TO STACK                    ;49035000
 EM6(MKS);         COMMENT MKS                                         ;49040000
 IF R[0,4] ! 0 THEN EM1(0);COMMENT    EXTRA WD OF ZERO FOR CHAR MODE   ;49045000
 EM4(81);     COMMENT LITC LOW  IF KEY OF NEW RECORD  LESS THAN KEY    ;49050000
 EM10(63);         COMMENT OPDC VECTR  OF PREV RCD PLACED IN OUTPUT    ;49055000
 EM11(60);         COMMENT DESC DATA   STRING THEN NEW RCD GOES INTO   ;49060000
 EM6(LOD);         COMMENT LOD        ALTDT                            ;49065000
 IF PARAM[141] = 1 THEN EM4(71) ELSE EM4(139);COMMENT  INREC OR SORTREC;49070000
 EM6(LOD);         COMMENT LOD                                         ;49075000
 EM10(91);         COMMENT OPDC EQLES TO CHAR MODE SUBR- IS NEW REC LOW;49080000
 EM3A(45);         COMMENT LITC XXXX  MARK POSITION OF LITC FOR BFC    ;49085000
 EM6(BFC);         COMMENT BFC  A2516 TRUE PLACE RECD INTO VECTOR      ;49090000
 EM6(MKS);         COMMENT MKS        MOVE INRECRD TO DATA(VECTOR(LOW));49095000
 EM1(0);           COMMENT LITC 0     TO REPLACE LOW RECORD JUST FOUND ;49100000
 IF PARAM[141] = 1 THEN EM11(71) ELSE EM11(139)                        ;49105000
 EM4(81);     COMMENT LITC LOW                                         ;49110000
 EM10(63);         COMMENT OPDC VECTR                                  ;49115000
 EM11(60);         COMMENT DESC DATA                                   ;49120000
 EM6(LOD);         COMMENT LOD                                         ;49125000
 EM10(73);         COMMENT OPDC MOVE  GO TO RECRD MOVING RTNE - RETURN ;49130000
 EM3A(37);         COMMENT            EMIT LITC FOR BFW                ;49135000
 EM6(BFW);         COMMENT BFW  A3429 GO TO X13                        ;49140000
 EM3B(45);         COMMENT (A2516)    FIX LITC FOR BFW TO THIS POINT   ;49145000
 EM6(MKS);         COMMENT MKS        BEGIN                            ;49175000
 EM1(0);           COMMENT LITC 0                                      ;49180000
 IF PARAM[141] = 1 THEN EM11(71) ELSE EM11(139)                        ;49185000
 EM10(94);         COMMENT OPDC R                                      ;49190000
 EM11(61);         COMMENT DESC ALTDATA   INTO ALTERNATE DATA ARRAY    ;49200000
 EM6(LOD);         COMMENT LOD                                         ;49205000
 EM10(73);         COMMENT OPDC MOVE  GO TO MOVE RECRD TO ALTRNTE AREA ;49210000
 EM10(94);         COMMENT OPDC R                                      ;49215000
 EM1(1);           COMMENT LITC 1                                      ;49220000
 EM6(ADD);         COMMENT ADD        INCREMENT BY ONE                 ;49225000
 EM11(94);         COMMENT DESC R                                      ;49230000
 EM6(STD);         COMMENT STD                                         ;49235000
 EM2B(41);         COMMENT LITC XXXX  EMIT LITC FOR BBW                ;49240000
 EM6(BBW);         COMMENT BBW  A2411 GO BACK TO X10                   ;49245000
 EM3B(46);         COMMENT (A2605)    FIX LITC FOR BFC TO THIS POINT   ;49250000
 EM1(0);           COMMENT LITC 0     THIS IS X 8                      ;49255000
 EM11(80);         COMMENT DESC MORE  SET MORE TO FALSE (ZERO)         ;49260000
 EM6(STD);         COMMENT STD        END1(PAIRS WITH BEGIN1 -X9-A2410);49265000
 EM3B(40);         COMMENT (A2608)    FIX LITC FOR BFC TO THIS POINT   ;49270000
 EM2A(47);         COMMENT (A2608     MARK POSITION FOR LATER BBW      ;49275000
 EM2A(48);         COMMENT (A2608)    MARK POSITION FOR LATER BBC      ;49280000
 EM4(58);     COMMENT LITC N   SET INDEX TO POINT TO ALNINES           ;49285000
 EM4(81);     COMMENT LITC LOW                                         ;49290000
 EM10(63);         COMMENT OPDC VECTR                                  ;49295000
 EM11(63);    COMMENT DESC VECTR                                       ;49300000
 EM6(STD);    COMMENT STD          VECTR[VECTR[LOW]] ~ N & 1           ;49305000
 EM3B(37);         COMMENT A3429      JUMP HERE. X-13 X-13 X-13 X-13   ;49315000
 EM4(81);     COMMENT LITC LOW   TEMP2 ~ (VECTR[LOW])DIV 2, LABEL X13  ;49320000
 EM10(63);         COMMENT OPDC VECTR                                  ;49325000
 EM1(2);           COMMENT LITC 2                                      ;49330000
 EM6(IDV);         COMMENT IDV        INTEGER DIVIDE                   ;49335000
 EM11(115);        COMMENT DESC TEMP2                                  ;49340000
 EM6(STD);         COMMENT STD                                         ;49345000
 EM2A(49);         COMMENT (A2704)                                     ;49350000
 EM10(115);        COMMENT OPDC TEMP2 X6                               ;49355000
 EM6(DUP);         COMMENT DUP        I=TEMP2 + TEMP2                  ;49360000
 EM6(ADD);         COMMENT ADD                                         ;49365000
 EM11(78);         COMMENT DESC I                                      ;49370000
 EM6(SND);         COMMENT SND                                         ;49375000
 EM1(1);           COMMENT LITC 1                                      ;49380000
 EM6(ADD);         COMMENT ADD                                         ;49385000
 EM11(75);         COMMENT DESC J     J = I+1                          ;49390000
 EM6(STD);         COMMENT STD                                         ;49395000
 EM4 (58);         COMMENT LITC N                                      ;49400000
 EM10(115);        COMMENT OPDC TEMP2                                  ;49405000
 EM6(ADD);         COMMENT ADD                                         ;49410000
 EM11(95);         COMMENT DESC K     K = N+TEMP2                      ;49415000
 EM6(STD);         COMMENT STD                                         ;49420000
 EM1(0);           COMMENT LITC 0     POSITION FOR ANSWER              ;49425000
 EM6(MKS);         COMMENT MKS                                         ;49430000
 IF R[0,4] ! 0 THEN EM1(0);COMMENT    EXTR WD OF ZERO FOR CHAR MODE    ;49435000
 EM10(78);         COMMENT OPDC I                                      ;49440000
 EM10(63);         COMMENT OPDC VECTR                                  ;49445000
 EM11(60);         COMMENT DESC DATA                                   ;49450000
 EM6(LOD);         COMMENT LOD                                         ;49455000
 EM10(75);         COMMENT OPDC J                                      ;49460000
 EM10(63);         COMMENT OPDC VECTR                                  ;49465000
 EM11(60);         COMMENT DESC DATA                                   ;49470000
 EM6(LOD);         COMMENT LOD                                         ;49475000
 EM10(91);         COMMENT OPDC EQLES GO TO EQUAL OR LESS SUBROUTINE   ;49480000
 EM3A(50);         COMMENT LITC XXXX  MARK POSITION OF LITC FOR BFC    ;49485000
 EM6(BFC);         COMMENT BFC  A2900 JUMP ON FALSE(0)-(J LESS THAN 1) ;49490000
 EM10(78);         COMMENT OPDC I     I EQUAL OR LESS THAN J           ;49495000
 EM10(63);          COMMENT OPDC VECT9                                 ;49495500
 EM3A(51);         COMMENT LITC XXXX  MARK POSITION OF LITC FOR BFW    ;49500000
 EM6(BFW);         COMMENT BFW  A2901                                  ;49505000
 EM3B(50);         COMMENT (A2900)    FIX LITC FOR BFC TO THIS POINT   ;49510000
 EM10(75);         COMMENT OPDC J     IF KEY OF REC I LESS KEY OF REC J;49515000
EM10(63);          COMMENT OPDC VECTR                                  ;49515500
 EM3B(51);         COMMENT (A2901)    FIX LITC FOR BFW TO THIS POINT   ;49520000
 EM10(95);         COMMENT OPDC K     THEN VECTR(K)=I, ELSE VECTR(5)=J ;49525000
 EM11(63);         COMMENT DESC VECTR                                  ;49530000
 EM6(STD);         COMMENT STD                                         ;49535000
 EM10(95);         COMMENT OPDC K                                      ;49540000
 EM4(81);     COMMENT LITC LOW                                         ;49545000
 EM6(NEQ);         COMMENT NEQ                                         ;49550000
 EM2B(36);         COMMENT LITC XXXX  EMIT LITC FOR BBC                ;49555000
 EM6(BBC);         COMMENT BBC A2300  TO X5 ON FALSE (WHEN X5 = LOW)   ;49560000
 EM10(95);         COMMENT OPDC K     K NOT EQUAL TO LOW               ;49565000
 EM1(2);           COMMENT LITC 2                                      ;49570000
 EM6(IDV);         COMMENT IDV                                         ;49575000
 EM11(115);        COMMENT DESC TEMP2 TEMP2 = K DIV 2                  ;49580000
 EM6(STD);         COMMENT STD                                         ;49585000
 EM2B(49);         COMMENT LITC XXXX  EMIT LITC FOR BBW                ;49590000
 EM6(BBW);         COMMENT BBW  A2704 GO TO X6                         ;49595000
 EM15(NOOP);       COMMENT AJST       ADJUST TO BEGINNING OF NEXT WORD ;49600000
   T10 ~ SEG[0,0];                                                      49605000
    MAKELABEL(0,PARAM[089],I,0); %  R-E-V-E-R-S-E  SUBR    COMMENT DF;  49610000
 EM4(60);          COMMENT LITC DATA--START OF REVRS SUBROUTINE--------;49615000
 EM6(LOD);         COMMENT LOD        REVERSE DATA ADDRESSES IN DESCRS ;49620000
 EM6(DUP);         COMMENT DUP        FOR DATA AND ALTDT               ;49625000
 EM4(61);          COMMENT LITC ALTDT                                  ;49630000
 EM6(LOD);         COMMENT LOD        ALSO REVERSE SAME FOR VECTR-ALTVT;49635000
 EM14(33, DIA);    COMMENT DIA  33                                     ;49640000
 EM14(33,DIB);     COMMENT DIB  33                                     ;49645000
 EM19(15,TRB);     COMMENT TRB  15                                     ;49650000
 EM4(60);          COMMENT LITC DATA                                   ;49655000
 EM6(STD);         COMMENT STD                                         ;49660000
 EM4(61);          COMMENT LITC ALTDT                                  ;49665000
 EM6(LOD);         COMMENT LOD                                         ;49670000
 EM6(XCH);         COMMENT XCH                                         ;49675000
 EM19(15,TRB);     COMMENT TRB  15                                     ;49680000
 EM4(61);          COMMENT LITC ALTDT                                  ;49685000
 EM6(STD);         COMMENT STD                                         ;49690000
 EM6(XIT);         COMMENT XIT      --END REVRS SUBROUTINE-------------;49695000
             END; COMMENT END OF SYSTEM BLOCK TWO --------------------; 49700000
              BEGIN REAL ZOWIE; COMMENT SYSTEM BLOCK THREE ------------;49705000
 EM15(NOOP);       COMMENT AJST       ADJUST TO BEGINNING OF NEXT WORD ;49710000
   T10 ~ SEG[0,0];                                                      49715000
    MAKELABEL(0,PARAM[097],I,0); %  I-S-L-C-T  SUBR        COMMENT DF;  49720000
 EM10(84);         COMMENT OPDC II  --START OF ISLCT SUBROUTINE--------;49725000
 EM6(DUP);         COMMENT DUP        ROUTINE SELECTS CORRECT OUTPUT   ;49730000
 EM6(ADD);         COMMENT ADD        FILE PER VALUE OF II             ;49735000
 EM6(BFW);         COMMENT BFW        ON CALCULATED AMOUNT             ;49740000
 EM4(19);          COMMENT LITC D1A                                    ;49745000
 EM6(RTN);         COMMENT RTN                                         ;49750000
 EM4(24);          COMMENT LITC D2A                                    ;49755000
 EM6(RTN);         COMMENT RTN                                         ;49760000
 EM4(29);          COMMENT LITC D3A                                    ;49765000
 EM6(RTN);         COMMENT RTN                                         ;49770000
 EM4(34);          COMMENT LITC D4A                                    ;49775000
 EM6(RTN);         COMMENT RTN                                         ;49780000
 EM4(39);          COMMENT LITC D5A                                    ;49785000
 EM6(RTN);         COMMENT RTN                                         ;49790000
 EM4(44);          COMMENT LITC D6A                                    ;49795000
 EM6(RTN);         COMMENT RTN                                         ;49800000
 EM4(49);          COMMENT LITC D7A                                    ;49805000
 EM6(RTN);         COMMENT RTN                                         ;49810000
 EM4(54);          COMMENT LITC D8A                                    ;49815000
 EM6(RTN);         COMMENT RTN      --END ISLCT SUBROUTINE-------------;49820000
 EM3B(43);         COMMENT (A3300)    FIX LITC FOR BFW TO THIS POINT   ;49825000
 EM1(0);           COMMENT LITC 0    THIS IS X11                       ;49830000
 EM4(80);          COMMENT LITC MORE MORE SET TO FALSE(0)              ;49835000
 EM6(STD);         COMMENT STD                                         ;49840000
 EM1(1) ;     COMMENT LITC 1                                           ;49841000
 EM4(105) ;   COMMENT LITC STPOP     STPOP SET TO TRUE                 ;49842000
 EM6(STD) ;   COMMENT  STD                                             ;49843000
 EM10(94) ;   COMMENT OPDC R  IF R = 0 THEN MRDTA ~ FALSE              ;49845000
 EM1(0);           COMMENT LITC 0     OTHERWISE - - -                  ;49850000
 EM6(EQL);         COMMENT EQL                                         ;49855000
 EM2B(48);    COMMENT LITC XXXX  ON THE "OTHERWISE" CONDITION          ;49860000
 EM6(BBC);    COMMENT BBC     JUMP BACK TO X12                         ;49865000
 EM1(0);           COMMENT LITC 0                                      ;49870000
 EM4(74);          COMMENT MOREDATA     MOREDATA SET FALSE             ;49875000
 EM6(STD);         COMMENT STD                                         ;49880000
 EM2B(47);         COMMENT LITC XXXX  EMIT LITC FOR BBW                ;49885000
 EM6(BBW);         COMMENT BBW  A2608 THEN GO TO X12                   ;49890000
 EM3B(39);         COMMENT (A3500)    FIX LITC FOR BFW TO THIS POINT   ;50005000
 EM10(94) ;   COMMENT OPDC R  IF R = 0 THEN MRDTA ~ FALSE              ;50005500
 EM1(0) ;     COMMENT LITC 0       NEED THIS TEST HER FOR PARTIAL STRNG;50005501
 EM6(EQL) ;   COMMENT EQL                                              ;50005502
 EM3A(66) ;   COMMENT LITC XXXX  MARK POSITION OF LITC FOR BFW         ;50005503
 EM6(BFC) ;   COMMENT BFC  JUMP ON FALSE AROUND FLAG CHANGE            ;50005504
 EM1(0) ;     COMMENT LITC 0                                           ;50005505
 EM4(74);     COMMENT MRDTA    MOREDATA SET TO FALSE                   ;50005506
 EM6(STD) ;   COMMENT STD                                              ;50005507
 EM3A(53);    COMMENT LITC                                             ;50005508
 EM6(BFW);    COMMENT BFW                                              ;50006000
 EM3B(66);    COMMENT FIX JUMP TO HERE FOR WHEN R NOT ZERO             ;50007000
 EM10(94);    COMMENT OPDC R                                           ;50010000
 EM1(1);      COMMENT LITC 1                                           ;50015000
 EM6(SUB);    COMMENT SUB                                              ;50020000
 EM4(94);     COMMENT LITC R                                           ;50025000
 EM6(STD);    COMMENT STD          R ~ R - 1                           ;50030000
 EM3B(53);    COMMENT  FIXUP JUMP                                      ;50035000
 EM10(102);        COMMENT OPDC SC    WHICH STORE SC(STRING COUNTER) OF;50055000
 EM10(92);    COMMENT OPDC BC INDEX IS BLOCKSIZE, THEN BC ~ BC + WDS   ;50060000
 EM10(7);     COMMENT OPDC IYII  (RECORDS IN THIS BLOCK OF OUTPUT)     ;50065000
 EM6(DUP) ;   COMMENT DUPLICATE    FOR PRESENCE BIT CONVENTIONS        ;50066000
 EM6(LOD);         COMMENT LOD        DUMMY RECORT 1ST WORD. REST OF   ;50070000
 EM1(0) ;     COMMENT   LITC 0                                         ;50071000
 EM6(CDC) ;   COMMENT CDC    SENSING FOR PRESENCE ALSO                 ;50072000
 EM6(XCH) ;   COMMENT EXCHANGE TO PUT EXTRA INDEX INTO A REGISTER      ;50072500
 EM6(DEL);         COMMENT DEL         CLEAR STACK                 8-7; 50073000
 EM6(INX);    COMMENT INX      POSITION TO PLACE STRINGSIZE (NO RECORD);50074000
 EM6(STD);         COMMENT STD        RECORD IS TRASH (SAME PREV REC). ;50075000
 EM10(92);    COMMENT OPDC BC                                          ;50075100
 EM4(62);     COMMENT LITC WDS                                         ;50075200
 EM6(ADD);    COMMENT ADD                                              ;50075250
 EM4(4);      COMMENT  LITC BLKSZ    BLKSZ ~ (BC + WDS).(PERHAPS < BFUL;50075300
 EM6(STD);    COMMENT STD                                              ;50075400
 EM10(84);         COMMENT OPDC II                                     ;50080000
 EM10(101);        COMMENT OPDC C                                      ;50085000
 EM1(1);           COMMENT LITC 1                                      ;50090000
 EM6(ADD);         COMMENT ADD                                         ;50095000
 EM10(84);         COMMENT OPDC II                                     ;50100000
 EM11(101);        COMMENT DESC C                                      ;50105000
 EM6(STD);         COMMENT STD                                         ;50110000
 EM6(MKS);    COMMENT  MKS                                             ;50130000
 EM10(5);     COMMENT  OPDC DISTRWRITE   CALL PHASE-ONE WRITE          ;50135000
 EM10(7) ;         COMMENT  OPDC IYII                               DF; 50145000
 EM4(124);         COMMENT  LITC"PREVIOUS" FILE BEING MARKED(USE M1)DF; 50150000
 EM6(STD);         COMMENT  STD   M1 WILL SHOW "PREV FILE"NXT STRINGDF; 50155000
 EM6(XIT);         COMMENT X1T      --END STRNG SUBROUTINE-------------;50160000
 EM15(NOOP);       COMMENT AJST       ADJUST TO BEGINNING OF NEXT WORD ;50165000
   T10 ~ SEG[0,0];                                                      50170000
    MAKELABEL(0,PARAM[098],I,0); %  D-E-L-A-Y  SUBR        COMMENT DF;  50175000
 EM10(7);          COMMENT  OPDC IYII                               DF; 50185000
 EM1(3);           COMMENT  LITC 3                                  DF; 50190000
 EM6(SUB);         COMMENT  SUB                                     DF; 50195000
 EM11(10);         COMMENT  DESC 10   LOC NEXT FILE TO USE          DF; 50200000
 EM10(124);        COMMENT  OPDC M1                                 DF; 50205000
 EM1(3);           COMMENT  LITC 3                                  DF; 50210000
 EM6(SUB);         COMMENT  SUB                                     DF; 50215000
 EM11(10);         COMMENT  DESC 10                                 DF; 50220000
 EM1(20);          COMMENT  LITC 20                                 DF; 50221000
 EM6(COM);         COMMENT  COM                                     DF; 50222000
 EM6(DEL);         COMMENT  DELETE    CLEAR STACK                   DF; 50225000
 EM6(DEL);         COMMENT  DELETE                                  DF; 50230000
 EM6(XIT);         COMMENT XIT     ---END OF DELAY SUBROUTINE----------;50240000
 EM15(NOOP);                                                            50245000
   T10 ~ SEG[0,0];                                                      50250000
    MAKELABEL(0,PARAM[109],I,0); %  D-U-M-M-Y---S-T-R-I-N-GCOMMENT DF;  50255000
 EM6(MKS) ;        COMMENT MKS  CALL ON DELAY TO CALL MCP         DF ;  50256000
 EM10(98);         COMMENT OPDC DELAY   GOES TO SLEEPSWITCHING TAPESDF; 50257000
 EM6(MKS);         COMMENT MKS                                         ;50260000
 EM10(7);     COMMENT OPDC IYII   SELECTS FILE ON WHICH TO             ;50270000
 EM6(LOD);         COMMENT LOD           WRITE THE FAKE STRING THEN    ;50275000
  EM10(123) ; COMMENT  OPDC HIVAL  KEY FILLED WITH ALNINES             ;50280000
         IF PARAM[103]=PARAM[62] THEN % BFULL = WDS PER RECORD  1-20-65 50285000
    BEGIN % LITC WDS,LITC BLKSZ,STD,LITC 0  ,LITC BC,STD.       1-20-65 50290000
      EM4(62);EM4(4);EM6(STD);EM1(00);EM4(92);EM6(STD);      %  1-20-65 50295000
      EM6(MKS);EM10(5); % MKS, OPDC DISTR-WRITE                 1-20-65 50300000
      EM6(MKS);EM10(7);EM6(LOD);EM10(123);%MKS,OP IYII,LOD,HIVAL J20-65 50305000
      EM1(0) ;EM10(7);EM6(LOD);EM6(STD);%ZERO RECDS IN STRNG    1-20-65 50310000
      EM4(62);EM4(4);EM6(STD);EM1(00);EM4(92);EM6(STD);      %  1-20-65 50315000
    END   ELSE   % ABOVE ACCOUNTS FOR ONE RECORD PER BLOCK.     1-20-65 50340000
    BEGIN    %   NORMALLY MULTI-RECORDS PER BLOCK.              1-20-65 50360000
 EM1(0);           COMMENT LITC 0      NOW STORE ZERO                  ;50365000
 EM4(62) ;  COMMENT LITC WDS    NO PRESENCE BIT CHECK REQD NOW 3/6/64  ;50370000
 EM10(7);     COMMENT OPDC IYII   NOW STORE ZERO AS THE NUMBER         ;50375000
                           COMMENT  PLACE ZERO IN 2ND RECORD  3/6/64   ;50376000
 EM6(LOD);         COMMENT LOD         IN THIS                         ;50380000
                             COMMENT   THIS IS THE STRING COUNT 3/6/64 ;50381000
                                     COMMENT            3/6/64         ;50382000
                                           COMMENT  3/6/64             ;50383000
   EM6(INX) ;  COMMENT  INX  FIRST WORD SECOND RECORD    3/6/64 RES    ;50384000
 EM6(STD);         COMMENT STD         STRING. (GOES INTO NEXT RECORD) ;50385000
 EM4(62);     COMMENT LITC WDS                                         ;50390000
 EM6(DUP);    COMMENT DUP         THIS CODE ASSUMES NO RECORD OF       ;50395000
 EM6(ADD);    COMMENT ADD         MORE THAN 511 WORDS LENGTH. RPT 511. ;50396000
 EM4(4);      COMMENT LITC BLKSZ                                       ;50400000
 EM6(STD);    COMMENT STD         BLKSZ ~ 2 | RECORDSIZE FOR           ;50405000
 EM4(62) ; EM4(92) ; EM6(STD) ; COMMENT  BC SET TO WORDS FOR SPEC STRNG;50405500
    END;                                                    %   1-20-65 50405700
 EM6(MKS);    COMMENT MKS            THE DUMMY-STRING.                 ;50410000
 EM10(5);     COMMENT OPDC DISTR-WRITE.                                ;50415000
 EM10(7);          COMMENT  OPDC IYII                               DF; 50420000
 EM4(124);         COMMENT  LITC M1   STORE CURRENT TAPE SELECTION  DF; 50422000
 EM6(STD);         COMMENT  STD    AS "PREVIOUS" FOR NEXT STRING.   DF; 50425000
 EM10(84) ;   COMMENT OPDC II   UP THE STRING COUNTER FOR TAPE II      ;50425100
 EM10(101) ;  COMMENT OPDC C      EVEN IN DUMMYSTRING                  ;50425200
 EM1(1) ;     COMMENT LITC 1                                           ;50425300
 EM6(ADD) ;   COMMENT ADD                                              ;50425400
 EM10(84) ;   COMMENT OPDC II  PRECISELY C(II)  ~ C(II) PLUS 1         ;50425500
 EM11(101) ;  COMMENT DESC  C                                          ;50425600
 EM6(STD) ;   COMMENT STD                                              ;50425700
 EM6(XIT);         COMMENT XIT -----END OF DUMMYSTRING-----------------;50430000
              END; COMMENT END OF SYSTEM BLOCK THREE ------------------;50435000
              BEGIN REAL ZOWIE; COMMENT SYSTEM BLOCK FOUR ------------; 50440000
 EM15(NOOP);  COMMENT AJST   ADJUST TO START OF A WORD                 ;50441050
         T10 ~ SEG[0,0];                                               ;50441100
    MAKELABEL(0,PARAM[006],I,0); %  M-Y-R-E-A-D  SUBR      COMMENT DF;  50441150
 EM17(1);     COMMENT OPDC F-1  RELATIVE LOC I/O DESCRIPTOR            ;50441200
 EM1(3);      COMMENT LITC 3                                           ;50441250
 EM6(SUB);    COMMENT SUB                                              ;50441300
 EM6(LOD);    COMMENT LOD      FIB DESCR                               ;50441350
 EM6(DUP);    COMMENT DUP        TWO   COPIES                          ;50441360
 EM1(17);     COMMENT LITC 17                                          ;50441400
 EM6(CDC);    COMMENT CDC        LOC OF COUNTER                        ;50441450
 EM6(DUP);    COMMENT DUP        TWO COPIES                            ;50441500
 EM6(LOD);    COMMENT LOD        WORDS LEFT IN BUFFER                  ;50441550
 EM4(62);     COMMENT LITC WDS   RECORD LENGTH                         ;50441600
 EM6(SUB);    COMMENT SUB                                              ;50441650
 EM6(XCH) ;   COMMENT  XCH   EXCHANGE  BEFORE WE STORE                 ;50441660
 EM6(SND);    COMMENT SND        FIB[17] ~ WORDS LEFT IN BUFFER        ;50441700
 EM1(0);      COMMENT LITC 0                                           ;50441750
 EM6(GRT) ;   COMMENT  GTR   IS WORDS LEFT GREATER THAN ZERO           ;50441800
 EM3A(74);    COMMENT LITC       CAN FURNISH NEXT RECORD ELSE          ;50441850
 EM6(BFC);    COMMENT BFC        MUST JUMP TO PRL FOR "READ-TAPE".     ;50441900
 EM4(62);     COMMENT LITC WDS                                         ;50442650
 EM17(1);     COMMENT OPDC F-1    RELATIVE LOC I/O DESCR               ;50442700
 EM6(LOD);    COMMENT LOD                                              ;50442750
 EM6(INX);    COMMENT INX                                              ;50442800
 EM17(1);     COMMENT OPDC F-1                                         ;50442850
 EM6(STD);    COMMENT STD    SET CORRECT ADDRESS OF NEW LOGICAL RECORD ;50442900
 EM6(XIT);    COMMENT XIT                                              ;50443000
 EM3B(74);    COMMENT     SET JUMP TO HERE WHEN PRL NEEDED.            ;50443050
 EM6(DUP);    COMMENT DUP        FIB DESR STILL AT TOP OF STACK(TWICE) ;50443100
 EM1(16);EM6(CDC);COMMENT  L2TC 16,  CDC                               ;50443150
 EM6(LOD);    COMMENT LOD        16TH WORD ITSELF                      ;50443250
 EM17(1);     COMMENT OPDC F-1   LOC OF I/O DESCR IN PRT               ;50443300
 EM6(SND);         % SND STORE I/O D FROM FIB[16] IN TANK               50443350
 EM17(1);          % OPDC F-1                                           50443390
 EM11(10);         % DESC 10                                            50443392
 EM6(PRL);    COMMENT PRL        P-R-O-G-R-A-M  R-E-L-E-A-S-E (R-E-A-D);50443400
 EM2A(79);         % MARK PRESENT BIT CHECK POINT                       50443420
 EM6(DEL);         % DEL                                                50443421
 EM1(0);           COMMENT LITC 0 NOW CHECK I/O COMPLETE BIT        DF; 50443422
 EM17(1);          COMMENT OPDC F-1                                 DF; 50443424
 EM6(LOD);         COMMENT LOD                                      DF; 50443426
 EM14(19,DIA);     COMMENT DIA 19                                   DF; 50443428
 EM14(47,DIB) ;    COMMENT  DIB 47                                 DF ; 50443430
 EM19(1,TRB);      COMMENT TRB 1                                    DF; 50443432
 EM6(LNG);         COMMENT NEG                                      DF; 50443434
 EM1(11);          COMMENT LITC 11   FIXED JUMP                     DF; 50443436
 EM6(BFC);         COMMENT BFC     JUMP ON I/O COMPLETE             DF; 50443438
 EM17(1);          COMMENT OPDC F-1                                 DF; 50443439
 EM11(10);         COMMENT DESC 10   ABSOLUTE LOCATION I/O DESCR    DF; 50443440
 EM1(0);           COMMENT LITC 0                                   DF; 50443441
 EM1(1);           COMMENT LITC 1                                   DF; 50443442
 EM14(19,DIB);     COMMENT DIB 19                                   DF; 50443443
 EM14(47,DIA) ;    COMMENT  DIA 47                                 DF ; 50443444
 EM19(1,TRB);      COMMENT TRB 1                                    DF; 50443445
 EM1(2);           COMMENT LITC 2                                   DF; 50443446
 EM6(COM);         COMMENT COM                                      DF; 50443447
 EM6(DEL);         COMMENT DEL                                      DF; 50443448
 EM6(DEL);         COMMENT DEL                                      DF; 50443449
         COMMENT I/O COMPLETE;                                          50443450
 EM17(1);          % OPDC F-1                                           50443455
 EM6 (LOD);        % LOD     TOP I/O DESC                               50443460
 EM1(0);           % LITC 0                                             50443465
 EM14(2,DIB);      % DIB 2                                              50443500
 EM19(1,FCE);      % FCE 1                                              50443550
 EM3A(77);         % LITC XXX                                           50443600
 EM6(BFC);         % BFC  TO  " IS PRESENT"                             50443700
 EM6(MKS);         % MKS                                                50443750
 EM1(1);           % LITC 1   CALL FCR TO ANALIZE NON-PRESENT I/O       50443800
 EM1(0);           % LITC 0   PARITY-EOF-EOR                            50443850
 EM17(1);          % OPDC F-1                                           50443900
 EM1(3);           % LITC 3                                             50443910
 EM6(SUB);         % SUB   ADDRESS OF FIB DESC                          50443920
 EM11(10);         % DESC 10                                            50443950
 EM1(6);           % LITC 6                                             50444000
 EM10(65);         % OPDC FCR                                           50444050
 EM6(DEL);         % DEL                                                50444052
 EM2B(79);         % BACK TO P BIT CHECK                                50444053
 EM6(BBW);                                                              50444054
 EM3B(77);         % FIX JUMP TO HERE IF PRESENT                        50444055
 EM6(DEL);         % DEL                                                50444060
 EM6(DUP);         % DUP FIB DESC   PUT TOP DESC IN FIB[16]             50444065
 EM1(16);          % LITC 16                                            50444070
 EM6(CDC);         % CDC                                                50444075
 EM17(1);          % OPDC F-1                                           50444080
 EM6(LOD);         % LOD                                                50444085
 EM6(XCH);         % XCH                                                50444090
 EM6(SND);         % SND                                                50444095
 EM1(0);           % LITC 0    PUT # WORDS READ IN FIB[17]              50444100
 EM6(LNG);         % LNG                                                50444150
 EM6(XCH);         % XCH                                                50444200
 EM6(INX);         % INX                                                50444250
 EM6(LOD);         % LOD                                                50444300
 EM6(XCH);         % XCH                                                50444350
 EM1(17);          % LITC 17                                            50444400
 EM6(CDC);         % CDC                                                50444410
 EM6(STD);         % STD                                                50444450
 EM6(XIT);         % XIT                                                50444500
 EM15(NOOP);  COMMENT AJST                                             ;50445000
         T10 ~ SEG[0,0];                                               ;50445010
    MAKELABEL(0,PARAM[009],I,0); %  M-Y-W-R-I-T-E  SUBR    COMMENT DF;  50445020
 EM1(1) ;     COMMENT  LITC 1   TRUE THAT ENTERED FROM OUTSIDE         ;50445022
 EM2A(80);    COMMENT      SET TO JUMP BACK  FOR PRT LOC IN STACK.     ;50445025
 EM2A( 99);   COMMENT      MARK FOR RETURN HERE AFTER A PROG. RELEASE  ;50445026
 EM1(0);           COMMENT LITC 0 NOW CHECK I/O COMPLETE BIT        DF; 50445028
 EM17(1);          COMMENT OPDC F-1                                 DF; 50445030
 EM6(LOD);         COMMENT LOD                                      DF; 50445032
 EM14(19,DIA);     COMMENT DIA 19                                   DF; 50445034
 EM14(47,DIB) ;    COMMENT  DIB 47                                 DF ; 50445036
 EM19(1,TRB);      COMMENT TRB 1                                    DF; 50445038
 EM6(LNG);         COMMENT NEG                                      DF; 50445040
 EM1(11);          COMMENT LITC 11   FIXED JUMP                     DF; 50445042
 EM6(BFC);         COMMENT BFC     JUMP ON I/O COMPLETE             DF; 50445044
 EM17(1);          COMMENT OPDC F-1                                 DF; 50445046
 EM11(10);         COMMENT DESC 10   ABSOLUTE LOCATION I/O DESCR    DF; 50445048
 EM1(0);           COMMENT LITC 0                                   DF; 50445050
 EM1(1);           COMMENT LITC 1                                   DF; 50445052
 EM14(19,DIB);     COMMENT DIB 19                                   DF; 50445054
 EM14(47,DIA) ;    COMMENT  DIA 47                                 DF ; 50445056
 EM19(1,TRB);      COMMENT TRB 1                                    DF; 50445058
 EM1(2);           COMMENT LITC 2                                   DF; 50445060
 EM6(COM);         COMMENT COM                                      DF; 50445062
 EM6(DEL);         COMMENT DEL                                      DF; 50445064
 EM6(DEL);         COMMENT DEL                                      DF; 50445066
 EM17(1);          COMMENT OPDC F-1                                 DF; 50445070
 EM6(LOD);         COMMENT LOD I/O DESCR                            DF; 50445072
 EM1(0);           COMMENT LITC 0                                   DF; 50445074
 EM14(2,DIB);      COMMENT DIB 2                                    DF; 50445076
 EM19(1,FCE); COMMENT FCE  1    EQUAL TO ZERO TRUE MEANS ABSENT        ;50445080
 EM3A(79);    COMMENT LITC XXXX                                        ;50445090
 EM6(BFC);    COMMENT BFC       JUMP ON FALSE (PRESENT)                ;50445100
 EM6(MKS);         % MKS     CALL FCR TO SWITCH REELS                   50445110
 EM1(0);           % LITC 0                                             50445120
 EM1(0);           % LITC 0                                             50445130
 EM17(1);          % OPDC F-1                                           50445140
 EM1(3);           % LITC 3                                             50445150
 EM6(SUB);         % SUB                                                50445155
 EM11(10);         % DESC 10                                            50445160
 EM1(6);           % LITC 6                                             50445170
 EM10(65);         % OPDC FCR                                           50445190
 EM6(DEL);         % DEL                                                50445200
 EM2B(99);         %      GO BACK TO RECHECK PRESENCE BIT               50445210
 EM6(BBW);                                                              50445220
 EM3B(79);    COMMENT      FIX JUMP TO HERE WHEN PRESENT               ;50445280
EM1(513); EM6(LOD); EM3A(134); EM6(BFC); COMMENT JUMP OUT BLOCK FINI   ;50445290
 EM10(92);    COMMENT OPDC BC                                          ;50445300
 EM4(62);     COMMENT LITC WDS                                         ;50445310
 EM6(ADD);    COMMENT ADD                                              ;50445320
 EM4(92);     COMMENT LITC BC                                          ;50445330
 EM6(STD);    COMMENT STD                                              ;50445340
 EM17(1);     COMMENT OPDC F-1                                         ;50445341
 EM6(LOD);    COMMENT LOD                                              ;50445342
 EM10(92);    COMMENT OPDC BC                                          ;50445343
 EM14(38,DIA);COMMENT DIA  38                                          ;50445344
 EM14(8,DIB); COMMENT DIB  8     UPDATE "WORDS" IN BLOCK IN I/O DESCR. ;50445345
 EM19(10,TRB);COMMENT TRB  10    SO IT IS ALWAYS CORRECT.              ;50445346
 EM17(1);     COMMENT OPDC F-1                                         ;50445347
 EM6(STD) ;   COMMENT  STD                                             ;50445348
 EM10(92) ;   COMMENT  OPDC BC                                         ;50445349
 EM4(103);    COMMENT LITC BFULL                                       ;50445350
 EM6(NEQ);    COMMENT NEQ                                              ;50445360
 EM3A(98);    COMMENT LITC XXXX                                        ;50445370
 EM6(BFC);    COMMENT BFC         JUMP ON EQUAL (PRL REQUIRED);        ;50445380
 EM4(62);     COMMENT LITC WDS    OTHERWISE STEP UP ADDRESS IN DESCR.  ;50445390
 EM17(1);     COMMENT OPDC F-1                                         ;50445400
 EM6(LOD);    COMMENT LOD                                              ;50445410
 EM6(INX);    COMMENT INX                                              ;50445420
 EM17(1);     COMMENT OPDC F-1                                         ;50445430
 EM6(STD);    COMMENT STD         RECORD NOW "LOGICALLY" WRITTEN       ;50445440
 EM3B(134) ;  COMMENT  JUMP TO EXIT ON BLOCKFULL WRITTEN ,NEWBLK PRSNT ;50445445
 EM6(XIT);    COMMENT XIT                                              ;50445450
 EM3B(98);    COMMENT       FIX JUMP TO HERE FOR PRL                   ;50445460
 EM17(1);     COMMENT OPDC F-1                                         ;50445470
 EM6(LOD);    COMMENT LOD      PICK UP I/O DESCR. FROM PRT.            ;50445480
 EM17(1);     COMMENT OPDC F-1                                         ;50445490
 EM1(3);      COMMENT LITC 3                                           ;50445500
 EM6(SUB);    COMMENT SUB                                              ;50445510
 EM6(LOD);    COMMENT LOD                                              ;50445520
 EM1(16);     COMMENT LITC 16                                          ;50445530
 EM6(CDC);    COMMENT CDC                                              ;50445540
 EM6(LOD);    COMMENT LOD       PICK UP DESCR FROM FIB WITH BASE ADDRES;50445550
 EM14(33,DIA);COMMENT DIA  33                                          ;50445560
 EM14(33,DIB);COMMENT DIB  33                                          ;50445570
 EM19(15,TRB);COMMENT TRB  15                                          ;50445580
 EM17(1);     COMMENT OPDC F-1                                         ;50445590
 EM6(STD);    COMMENT STD       SET CORRECT BASE ADDRESS IN PRT        ;50445600
 EM17(1) ;    COMMENT  OPDC F-1   REL-LOC I-O DESCR FOR PRL COMMAND    ;50445605
 EM11(10) ;   COMMENT  DESC 10                                         ;50445606
 EM6(DUP) ;    COMMENT DISK FILE PRL LOGIC                 DF 2-3-65 ;  50445607
 EM6(LOD) ;  COMMENT DISK FILE PRL LOGIC                   DF 2-3-65;   50445608
 EM6(XCH) ;   COMMENT DISK FILE PRL LOGIC                  DF 2-3-65 ;  50445609
 EM6(PRL);    COMMENT PRL       WRITE THE BLOCK.                       ;50445610
 EM6(DEL) ;    COMMENT   DISK FILE PRL LOGIC               DF 2-3-65;   50445615
 EM17(1);     COMMENT OPDC F-1                                         ;50445620
 EM6(LOD);    COMMENT LOD                                              ;50445630
 EM17(1);     COMMENT OPDC F-1                                         ;50445640
 EM1(3);      COMMENT LITC 3                                           ;50445650
 EM6(SUB);    COMMENT SUB                                              ;50445660
 EM6(LOD);    COMMENT LOD                                              ;50445670
 EM1(16);     COMMENT LITC 16                                          ;50445680
 EM6(CDC);    COMMENT CDC                                              ;50445690
 EM6(STD);    COMMENT STD       STORE BASE ADDRESS AGAIN INTO FIB      ;50445700
 EM1(0) ;  EM1(513) ; EM6(STD) ; COMMENT  F PLUS 1 SET FALSE           ;50445710
 EM1(0);      COMMENT LITC 0                                           ;50445715
 EM4(92);     COMMENT LITC BC                                          ;50445720
 EM6(STD);    COMMENT STD     SET BC TO ZERO FOR START OUTPUT BLOCK    ;50445730
 EM2B(99);    COMMENT LITC XXXX                                        ;50445740
 EM6(BBW);    COMMENT BBW       GO BACK TO PRESENCE BIT CHECK          ;50445750
 EM3B(133);   COMMENT  FIX JUMP TO HERE FROM END OF PHASE ONE          ;50449000
 EM4(60);          COMMENT LITC DATA                                   ;50450000
 EM11(10);         COMMENT DESC 10                                     ;50455000
  EM1(22) ;    COMMENT   LITC 22   SPECIAL ARRAY CLOSE CODE        DF ; 50460000
 EM6(COM);         COMMENT COM                                         ;50465000
 EM6(DEL);         COMMENT DEL         CLEAR STACK                 8-7; 50470000
 EM4(61);          COMMENT LITC ALTDT CLOSE THIS ARRAY                 ;50475000
 EM11(10);         COMMENT DESC 10                                     ;50480000
  EM1(22) ;    COMMENT   LITC 22   SPECIAL ARRAY CLOSE CODE        DF ; 50485000
 EM6(COM);         COMMENT COM                                         ;50490000
 EM6(DEL);         COMMENT DEL         CLEAR STACK                 8-7; 50495000
 EM4(63);          COMMENT LITC VECTR CLOSE THIS ARRAY                 ;50500000
 EM11(10);         COMMENT DESC 10                                     ;50505000
 EM1(3) ;     COMMENT  LITC 3   CLOSE ARRAY CODE FOR DF-MCPCOMMENT DF;  50510000
 EM6(COM);         COMMENT COM                                         ;50515000
 EM6(DEL);         COMMENT DEL         CLEAR STACK                 8-7; 50520000
            COMMENT  DELETE EXTRANEOUS FILE  CLOSE  NO ALTVT  3/5/64   ;50525000
            COMMENT  DELETE EXTRANEOUS FILE  CLOSE  NO ALTVT  3/5/64   ;50530000
            COMMENT  DELETE EXTRANEOUS FILE  CLOSE  NO ALTVT  3/5/64   ;50535000
            COMMENT  DELETE EXTRANEOUS FILE  CLOSE  NO ALTVT  3/5/64   ;50540000
 EM6(MKS) ;   COMMENT MKS CALLING THE INTRINSIC TO OPEN ARRCOMMENT DF;  50545000
 EM4(143);         COMMENT LITC FPRT  NEXT OPEN MERGE PROGRAM ARRAYS   ;50550000
 EM11(10);         COMMENT DESC 10    FIRST ARRAY;                      50555000
 EM4(140);         COMMENT LITC MRG                                    ;50560000
 EM11(10);         COMMENT DESC 10    SECOND ARRAY(5);                  50565000
 EM4(132);         COMMENT LITC MPRT;                                   50570000
 EM11(10);         COMMENT DESC 10    THIRD  ARRAY (4);                 50575000
 EM4(83);          COMMENT LITC TAPES LENGTH OF ARRAYS (3);             50580000
 EM1(1);           COMMENT LITC 1     ONE DIMENSION (2);                50585000
 EM1(3);           COMMENT LITC 3     THREE ARRAYS(1);                  50590000
 EM1(1);      COMMENT LITC 1 OPEN DO NOT OVERLAY CODE      COMMENT DF;  50595000
 EM10(3);     COMMENT OPDC 5  CALL INTRINSIC TO OPEN ARRAYSCOMMENT DF;  50600000
 EM6(MKS) ;   COMMENT MKS CALLING THE INTRINSIC TO OPEN ARRCOMMENT DF;  50630000
 EM4(76);     COMMENT LITC ALNIN  OPEN ARRAY ALNIN FOR USE IN MERGE    ;50631000
 EM11(10) ;   COMMENT DESC 10                                          ;50631100
 EM4(62);     COMMENT LITC WDS   RECORD LENGTH                         ;50631200
 EM1(1);      COMMENT LITC 1     ONE DIMENSION                         ;50631300
 EM1(1);      COMMENT LITC 1     ONE ARRAY                             ;50631400
 EM1(1);      COMMENT LITC 1 OPEN DO NOT OVERLAY CODE      COMMENT DF;  50631500
 EM10(3);     COMMENT OPDC 5  CALL INTRINSIC TO OPEN ARRAYSCOMMENT DF;  50631600
 EM6(MKS);    COMMENT MKS                                              ;50632100
 EM4(76);     COMMENT LITC ALNIN                                       ;50632200
 EM6(LOD);    COMMENT LOD         NOW CALL ON HIVAL SUBROUTINE TO      ;50632300
 EM10(123);   COMMENT OPDC HIVAL  FILL ALNIN WITH 14 OR 9 OR BLANK,ETC ;50632400
 EM1(0);           COMMENT LITC 0     FOR II~0 STEP 1 UNTIL TM1 DO;     50635000
 EM4(84);          COMMENT LITC II                                     ;50640000
 EM6(STD);         COMMENT STD;                                         50645000
 EM3A(55);         COMMENT            MARK POSITION OF LITC FOR BFW;    50650000
 EM6(BFW);         COMMENT BFW  B6054;                                  50655000
 EM2A(56);         COMMENT B6039      MARK POSITION TO BE RETURNED TO;  50660000
 EM10(84);         COMMENT OPDC II                                     ;50665000
 EM1(1);           COMMENT LITC 1                                      ;50670000
 EM6(ADD);         COMMENT ADD                                         ;50675000
 EM4(84);          COMMENT LITC II                                     ;50680000
 EM6(SND);         COMMENT SND                                         ;50685000
 EM4(86) ;    COMMENT  LITC TMIN1  TAPES MINUS ONE.                    ;50690000
 EM6(LSQ);         COMMENT LEQ        IS II GTR THAN TM1               ;50695000
 EM3A(57);         COMMENT            MARK LITC FOR BFW                ;50700000
 EM6(BFC);         COMMENT BFC  B6100 JUMP ON FALSE OUT OF LOOP        ;50705000
 EM3B(55);         COMMENT B6054      BEGIN                            ;50710000
 EM10(84);         COMMENT OPDC II        BEGIN                        ;50715000
 EM6(DUP);         COMMENT DUP              MRG[II] ~ II               ;50720000
 EM11(140);        COMMENT DESC MRG   MRG ARRAYS CONTAINS THE INDICES  ;50725000
 EM6(STD);         COMMENT STD                                         ;50730000
 EM6(MKS);         COMMENT MKS                                         ;50735000
 EM10(97);         COMMENT OPDC ISLCT                                  ;50740000
 EM10(84);         COMMENT OPDC II    RETURN FROM SUBR WITH PRT LOC OF ;50745000
 EM11(132);        COMMENT DESC MPRT  I/O DESCR TO TOP OF STACK        ;50750000
 EM6(SND);         COMMENT SND    MPRT[II] ~ PRT LOC OF I/O DESC       ;50755000
 EM1(3);           COMMENT LITC 3                                      ;50760000
 EM6(SUB);         COMMENT SUB                                         ;50765000
 EM10(84);         COMMENT OPDC II                                     ;50770000
 EM11(143);        COMMENT DESC FPRT   FPRT CONTAINS LOCS OF F I B     ;50775000
 EM6(STD);         COMMENT STD        DESCRIPTORS                      ;50780000
 EM2B(56);         COMMENT LITC XXXX                                   ;50785000
 EM6(BBW);         COMMENT BBW  B6039 GO BACK IN LOOP TO B6039  END.   ;50790000
              END; COMMENT END OF SYSTEM BLOCK FOUR -------------------;50795000
 EM3B(57); IF PARAM[141] = 0 THEN GO TO B6107;COMMENT USERS INPUT      ;50800000
 EM6(MKS);         COMMENT MKS        HAS CLOSED THE INFIL SO SKIP THIS;50805000
 EM1(2);           COMMENT LITC 2    CODE TO CLOSE,REWIND,LOCK,KEEP TSU;50810000
 EM1(0);           COMMENT LITC 0    THIS SAYS CLOSE "FILE" (NOT REEL) ;50815000
 EM4(67);          COMMENT LITC INFIL                                  ;50820000
 EM11(10);         COMMENT DESC 10    DO NOT RELEASE UNIT TO MCP BUT   ;50825000
 EM1(4);           COMMENT LITC 4     CLOSE CODE.                      ;50830000
 EM10(65);         COMMENT OPDC FCR   GO TO FILE CONTROL ROUTINE       ;50835000
 B6107:EM1(0);     COMMENT LITC 0     FOR I ~ (0,1,TM2) DO             ;50840000
              BEGIN REAL ZOWIE; COMMENT SYSTEM BLOCK FIVE -------------;50845000
 EM4(78);          COMMENT LITC I                                      ;50850000
 EM6(STD);         COMMENT STD                                         ;50855000
 EM3A(58);         COMMENT MARK POSITION OF LITC FOR BFW               ;50860000
 EM6(BFW);         COMMENT BFW  B6125                                  ;50865000
 EM2A(59);         COMMENT B6114  MARK POSITION TO BE RETURNED TO      ;50870000
 EM10(78);         COMMENT OPDC I                                      ;50875000
 EM1(1);           COMMENT LITC 1                                      ;50880000
 EM6(ADD);         COMMENT ADD                                         ;50885000
 EM4(78);          COMMENT LITC I                                      ;50890000
 EM6(SND);         COMMENT SND                                         ;50895000
 EM4(87);     COMMENT LITC T-2                                         ;50900000
 EM6(LSQ);         COMMENT LEQ        IS I GTR THAN TM2                ;50905000
 EM3A(90);         COMMENT B6133      YES,JUMP OUT OF LOOP,OR NO,BEGIN ;50910000
 EM6(BFC);         COMMENT BFC  B6133 CLOSE REWIND NO LOCK ALL         ;50915000
 EM3B(58);         COMMENT B6125      TAPES WRITTEN ON FIRST PASS      ;50920000
 EM6(MKS);         COMMENT   MKS                                       ;51130000
 EM1(2);           % LITC 2                                             51135000
 EM1(0);           COMMENT   LITC  0  CODE TO CLOSE FILE (NOT REEL)    ;51140000
 EM10(78);         COMMENT   OPDC  I                                   ;51145000
 EM10(143);        COMMENT   OPDC  FPRT                                ;51150000
 EM11(10);         COMMENT   DESC  10                                  ;51155000
 EM1(6);           % LITC 6                                             51160000
 EM10(65);         COMMENT   OPDC  FCR   GO TO FILE CONTROL ROUTINE    ;51165000
 EM2B(59);         COMMENT LITC XXXX                                   ;51170000
 EM6(BBW);         COMMENT BBW  B6114 GO BACK IN LOOP FOR NEXT CLOSE   ;51175000
 EM3B(90);         COMMENT JUMP TO HERE                                ;51180000
 EM1(0);           COMMENT LITC 0                                      ;51185000
 EM4(78);          COMMENT LITC I                                      ;51190000
 EM6(STD);         COMMENT STD                                         ;51195000
 EM3A(91);         COMMENT MARK POSITION FOR A BFW                     ;51200000
 EM6(BFW);         COMMENT BFW B6152                                   ;51205000
 EM2A(92);         COMMENT MARK SPOT TO RETURN TO B6141                ;51210000
 EM10(78);         COMMENT OPDC I                                      ;51215000
 EM1(1);           COMMENT LITC 1                                      ;51220000
 EM6(ADD);         COMMENT ADD                                         ;51225000
 EM4(78);          COMMENT LITC I                                      ;51230000
 EM6(SND);         COMMENT SND                                         ;51235000
 EM4(87);     COMMENT LITC T-2                                         ;51240000
 EM6(LSQ);         COMMENT LEQ                                         ;51245000
 EM3A(93);         COMMENT B6161      JUMP OUT OF LOOP WHEN ALL FILES  ;51250000
 EM6(BFC);         COMMENT BFC        ARE REOPENED AS INPUT            ;51255000
 EM3B(91);         COMMENT B6152                                       ;51260000
 EM6(MKS);         COMMENT MKS                                         ;51265000
 EM10(78);         COMMENT OPDC I      FOR I =(0,1,TM2),DO BEGIN       ;51270000
 EM10(143);        COMMENT OPDC FPRT       OPEN INPUT FILE MPRT(I) END ;51275000
 EM11(10);         COMMENT DESC 10                                     ;51280000
 EM1(1);           COMMENT LITC 1     ONE IS CODE FOR OPEN INPUT       ;51285000
 EM10(65);         COMMENT OPDC FCR                                    ;51290000
 EM1(0);      COMMENT LITC 0                                           ;51291000
 EM1(17);     COMMENT LITC 17                                          ;51291100
 EM10(78);    COMMENT OPDC I                                           ;51291200
 EM10(143);   COMMENT OPDC FPRT                                        ;51291300
 EM11(10);    COMMENT DESC 10     FIB[17] ~ ZERO FOR START OF          ;51291400
 EM6(LOD) ;   COMMENT LOD    LOD THE IO DESCRIPTOR                     ;51291410
 EM6(INX) ;   COMMENT   INX   INDEX BY 17 FOR FIB 17                   ;51291420
 EM6(STD);    COMMENT STD         READ (AT OPEN INPUT).                ;51291500
 EM2B(92);         COMMENT LITC XXXX                                   ;51295000
 EM6(BBW);         COMMENT BBW B6141                                   ;51300000
 EM3B(93);         COMMENT JUMP TO HERE FROM B6151                     ;51305000
 EM6(MKS);         COMMENT MKS                                         ;51310000
 EM4(86);     COMMENT LITC T-1                                         ;51315000
 EM10(143);        COMMENT OPDC FPRT    OPEN OUTPUT FILE(FPRT(TM1))    ;51320000
 EM11(10);         COMMENT DESC 10                                     ;51325000
 EM1(3);           COMMENT LITC 3    CODE FOR OPEN OUTPUT. THIS WILL   ;51330000
 EM10(65);         COMMENT OPDC FCR  HOLD RESULTS OF FIRST MERGE PASS  ;51335000
PARAM[81] ~PRTCTR; UPIT;COMMENT LOW IS VARIABLE IN MERGE 2 20 64       ;51335050
 EM1(0);      COMMENT LITC 0                                           ;51335100
 EM4(92);     COMMENT LITC BC     BC ~ ZERO AT "OPEN OUTPUT"           ;51335200
 EM6(STD);    COMMENT STD                                              ;51335300
 EM2A(96);         COMMENT FIX MARKER FOR JUMP BACK TO X15 B61675      ;51340000
 EM10(110);        COMMENT OPDC Z    NOW WE ARE AT X15  X15  X15  X15  ;51345000
 EM1(0);           COMMENT LITC 0    IF Z NEQ 0 THEN                   ;51350000
 EM6(NEQ);         COMMENT NEQ                                         ;51355000
 EM3A(94);         COMMENT            BFC ON FALSE WHEN Z EQUALS 0     ;51360000
 EM6(BFC);         COMMENT BFC  B6293     AROUND THE BLOCK.            ;51365000
 EM1(0);           COMMENT LITC 0    BEGIN                             ;51370000
 EM4(88);          COMMENT LITC CTR  CTR ~ 0.                          ;51375000
 EM6(STD);         COMMENT STD                 X16   X16   X16         ;51380000
 EM2A(95);         COMMENT MARK X16 FOR A JUMP BACK TO HERE            ;51385000
 EM6(MKS);         COMMENT MKS           READ FILE(MPRT(JJ))           ;51390000
 EM10(82);         COMMENT OPDC JJ                                     ;51400000
 EM10(132);        COMMENT OPDC MPRT                                   ;51405000
 EM10(6);     COMMENT OPDC MYREAD  GO TO READ VIA PRL ROUTINE          ;51420000
 EM6(MKS);         COMMENT MKS                                         ;51465000
 EM10(82);         COMMENT OPDC JJ                                     ;51470000
 EM10(132);        COMMENT OPDC MPRT                                   ;51475000
 EM6(LOD);         COMMENT LOD                                         ;51480000
 EM4(86);     COMMENT LITC T-1                                         ;51485000
 EM10(132);        COMMENT OPDC MPRT                                   ;51490000
 EM6(LOD);         COMMENT LOD                                         ;51495000
 EM10(73);         COMMENT OPDC MOVE RECORD(MPRT(JJ) TO                ;51500000
 EM6(MKS);         COMMENT MKS                       RECORD(MPRT(TM1)) ;51505000
 EM4(86);     COMMENT LITC T-1                                         ;51515000
 EM10(132);        COMMENT OPDC MPRT                                   ;51520000
 EM10(9) ;    COMMENT OPDC MYWRITE                                     ;51535000
 EM1(0) ;     COMMENT LITC 0  FILLER FOR ANS FROM CMPEQ ROUTINE        ;51535500
 EM6(MKS);         COMMENT MKS         NEXT TEST IF THIS WAS THE       ;51540000
 EM4(76);          COMMENT LITC ALNIN    NEED TWO                      ;51545000
 EM6(LOD);         COMMENT LOD                                         ;51550000
 EM10(82);         COMMENT OPDC JJ     FLAG ALNIN RECORD JUST PLACED   ;51555000
 EM10(132);        COMMENT OPDC MPRT   ONTO TAPE                       ;51560000
 EM6(LOD);         COMMENT LOD                                         ;51565000
 EM10(96);         COMMENT OPDC CMPEQ  GO TO ROUTINE WHICH TESTS ALNIN ;51570000
 EM1(2);           COMMENT LITC 2                                      ;51575000
 EM6(BFC);         COMMENT BFC                                         ;51580000
 EM3A(97);         COMMENT             MARK PLACE FOR BFW FIXUP        ;51585000
 EM6(BFW);         COMMENT BFW  B6228                                  ;51590000
 EM10(88);         COMMENT OPDC CTR    IF NOT ALNIN THEN BEGIN         ;51595000
 EM1(1);           COMMENT LITC 1      CTR ~ CTR +1,GO TO X16          ;51600000
 EM6(ADD);         COMMENT ADD                                         ;51605000
 EM4(88);          COMMENT LITC CTR                                    ;51610000
 EM6(STD);         COMMENT STD                                         ;51615000
 EM2B(95);         COMMENT LITC XXXX                                   ;51620000
 EM6(BBW);         COMMENT BBW  B6178                                  ;51625000
 EM3B(97);         COMMENT B6228 JUMP HERE FROM B6220                  ;51630000
 EM6(MKS);         COMMENT MKS                                         ;51635000
 EM10(82);         COMMENT OPDC JJ                                     ;51645000
 EM10(132);        COMMENT OPDC MPRT                                   ;51650000
 EM10(6);     COMMENT OPDC MYREAD    READ FILE MPRT(JJ)                ;51665000
 EM10(82);         COMMENT OPDC JJ                                     ;51715000
 EM10(132);        COMMENT OPDC MPRT                                   ;51720000
 EM6(LOD);         COMMENT LOD        LOAD THE RECORD DESCRIPTOR       ;51725000
 EM6(LOD);         COMMENT LOD       NOW LOAD FIRST WORD OF RECORD     ;51730000
 EM10(88);         COMMENT OPDC CTR  WHICH IS RECORDS IN THIS STRING.  ;51735000
 EM6(NEQ);         COMMENT NEQ                                         ;51740000
 EM3A(100);        COMMENT MARK FIXUP OF JUMP AROUND ERROR             ;51745000
 EM6(BFC);         COMMENT BFC  B6260                                  ;51750000
 EM1(1); COMMENT LITC 1  CODE TO TERMINATE JOB                     DF ; 51755000
 EM10(82); COMMENT OPDC JJ  INDEX TO SELECT FILE WHCH FAILED       DF ; 51756000
 EM10(143);COMMENT OPDC FPRT   ARRAY OF FIB LOCATIONS              DF ; 51757000
 EM11(10); COMMENT DESC 10  LOCATION OF FIB DESCRIPTOR             DF ; 51760000
 EM1(71); COMMENT LITC 71  ( FOR "IOR ERR 71 " )                   DF ; 51765000
 EM1(17);  COMMENT LITC 17  CODE TO PRINT MESSAGE THEN TERM IF 1.  DF ; 51770000
 EM6(COM);         COMMENT COM       GO TO MCP FOR COMPUTER FAILURE    ;51775000
 EM3B(100);        COMMENT B6260   FIX THE JUMP TO HERE FROM B6254     ;51780000
 EM10(88);         COMMENT OPDC CTR                                    ;51785000
 EM4(86);     COMMENT LITC T-1                                         ;51790000
 EM10(132);        COMMENT OPDC MPRT  GET PRT LOCATION OF I/O DESCR    ;51795000
 EM6(DUP) ;   COMMENT DUPLICATE    FOR PRESENCE BIT CONVENTIONS        ;51796000
 EM6(LOD);         COMMENT LOD        LOAD THE I/O DESCR               ;51800000
 EM1(0) ;     COMMENT   LITC 0                                         ;51800100
 EM6(CDC) ;   COMMENT CDC    SENSING FOR PRESENCE ALSO                 ;51800200
 EM6(XCH) ;   COMMENT EXCHANGE TO PUT EXTRA INDEX INTO A REGISTER      ;51800250
 EM6(DEL);         COMMENT DEL         CLEAR STACK                 8-7; 51800300
 EM6(STD);         COMMENT STD       RECORD(MPRT(TM1)) ~ CTR.          ;51805000
 EM6(MKS);         COMMENT MKS                                         ;51845000
 EM4(86);     COMMENT LITC T-1                                         ;51855000
 EM10(132);        COMMENT OPDC MPRT                                   ;51860000
 EM10(9);     COMMENT OPDC MYWRITE  WRITE FINAL RECORD OF STRING       ;51875000
 EM10(110);        COMMENT OPDC Z                                      ;51880000
 EM1(1);           COMMENT LITC 1                                      ;51885000
 EM6(SUB);         COMMENT SUB                                         ;51890000
 EM4(110);         COMMENT LITC Z                                      ;51895000
 EM6(STD);         COMMENT STD       Z ~ Z - 1.                        ;51900000
 EM4(86);     COMMENT LITC T-1                                         ;51905000
 EM10(101);        COMMENT OPDC C                                      ;51910000
 EM1(1);           COMMENT LITC 1    RE-ADJUSTMENT COPYING IS COMPETED ;51915000
 EM6(ADD);         COMMENT ADD       AT FALL-THRU(JUMP AROUND) TO B6293;51920000
 EM4(86);     COMMENT LITC T-1                                         ;51925000
 EM11(101);        COMMENT DESC C                                      ;51930000
 EM6(STD);         COMMENT STD       C(TM1) ~ C(TM1) + 1.              ;51935000
 EM2B(96);         COMMENT LITC                                        ;51940000
 EM6(BBW);         COMMENT BBW  B6168   GO BACK TO X15.                ;51945000
 EM3B(94);         COMMENT B6293   END OF BLOCK ON PRECEDING LINE      ;51950000
 EM10(82);         COMMENT OPDC JJ                                     ;51955000
 EM10(101);        COMMENT OPDC C                                      ;51960000
 EM4(86);     COMMENT LITC T-1                                         ;51965000
 EM10(101);        COMMENT OPDC C                                      ;51970000
 EM6(SUB);         COMMENT SUB                                         ;51975000
 EM10(82);         COMMENT OPDC JJ   C(JJ) ~ C(JJ) -C(TM1).            ;51980000
 EM11(101);        COMMENT DESC C    THIS STEP COMPLETES SETTING OF    ;51985000
 EM6(STD);         COMMENT STD       COUNTER READY TO START MERGE PROG ;51990000
 EM4(86);     COMMENT LITC T-1     IF NO STRINGS WRITTEN ONTO NEXT     ;51990500
 EM10(101) ;  COMMENT OPDC  C    OUTPUT TAPE THEN NO READJUSTMENT MADE ;51990501
 EM1(0) ;     COMMENT  LITC 0    IF    READJUSTMENT THEN NEVER LAST-   ;51990502
 EM6(NEQ) ;   COMMENT  NEQ   MERGE-PASS.  IF NONE MIGHT BE LASTPASS    ;51990503
 EM3A(87) ;        COMMENT LITC XXXXX  GO TO TESTLASTPASS ROUTINE ;     51991000
 EM6(BFC) ;   COMMENT  CONDITIONAL GO TO TESTLASTPASS ROUTINE          ;51992000
 EM2A(120); EM2A(132); COMMENT B6300  THIS IS MARK FOR RETURNS TO B1.  ;51995000
 EM1(0);           COMMENT LITC 0     HERE IS LABEL  B1    B1    B1    ;52000000
 EM4(78);          COMMENT LITC I                                      ;52005000
 EM6(STD);         COMMENT STD                                         ;52010000
 EM3A(101);        COMMENT B6317    MARK POSITION OF BFW TO B6317      ;52015000
 EM6(BFW);         COMMENT BFW  B6317                                  ;52020000
 EM2A(102);        COMMENT B6306    MARK POSITION TO RETURN IN LOOP    ;52025000
 EM10(78);         COMMENT OPDC I                                      ;52030000
 EM1(1);           COMMENT LITC 1                                      ;52035000
 EM6(ADD);         COMMENT ADD                                         ;52040000
 EM4(78);          COMMENT LITC I                                      ;52045000
 EM6(SND);         COMMENT SND                                         ;52050000
 EM4(87);     COMMENT LITC T-2                                         ;52055000
 EM6(LSQ);         COMMENT LEQ      TEST IF ALL TAPES READ ONCE YET    ;52060000
 EM3A(103);        COMMENT                                             ;52065000
 EM6(BFC);         COMMENT BFC  B6332                                  ;52070000
 EM3B(101);        COMMENT B6317       JUMP TO HERE FIRST TIME INTO LUP;52075000
 EM6(MKS);         COMMENT MKS      BEGIN                              ;52080000
 EM10(78);         COMMENT OPDC I                                      ;52090000
 EM10(132);        COMMENT OPDC MPRT                                   ;52095000
 EM10(6);     COMMENT OPDC MYREAD                                      ;52105000
 EM2B(102);        COMMENT LITC XXXX   ACTUALLY JUMPING BACKWARDS TO   ;52110000
 EM6(BBW);    COMMENT BBW          CONTINUE,RATHER THAN FALLTHRU       ;52115000
 EM3B(103);        COMMENT B6332   JUMP TO HERE WHEN ALL READ ONE      ;52145000
 EM1(0);           COMMENT LITC 0                                      ;52150000
 EM4(130);         COMMENT LITC BRANCH BRNCH ~ 0                       ;52155000
 EM6(STD);         COMMENT STD        NOW WE ARE STARTING A NEW STRING ;52160000
 EM1(0);           COMMENT LITC 0                                      ;52165000
 EM4(145);         COMMENT LITC SUM                                    ;52170000
 EM6(STD);         COMMENT STD        SUM ~ 0                          ;52175000
 EM2A(104);EM2A(116);COMMENT  B6339   B2   B2  HERE IS LABEL   B2   B2 ;52180000
 EM6(MKS);         COMMENT MKS                                         ;52185000
 EM10(129);        COMMENT OPDC LOWSLCT   DO LOWSELECT ROUTINE. PRT LOC;52190000
 EM6(MKS);         COMMENT MKS                                         ;52195000
 EM10(81);         COMMENT OPDC LOW       OF LOWEST RECORD IN LOW ON   ;52200000
 EM6(LOD);         COMMENT LOD            RETURN                       ;52205000
 EM4(86);     COMMENT LITC T-1     MOVE RECORD(LOW) TO                 ;52210000
 EM10(132);        COMMENT OPDC MPRT      RECORD(MPRT(TM1)).           ;52215000
 EM6(LOD);         COMMENT LOD                                         ;52220000
 EM10(73);         COMMENT OPDC MOVE                                   ;52225000
 EM6(MKS);         COMMENT MKS                                         ;52230000
 EM4(86);     COMMENT LITC T-1                                         ;52240000
 EM10(132);        COMMENT OPDC MPRT                                   ;52245000
 EM10(9);     COMMENT OPDC MYWRITE                                     ;52260000
 EM10(145);        COMMENT OPDC SUM                                    ;52265000
 EM1(1);           COMMENT LITC 1                                      ;52270000
 EM6(ADD);         COMMENT ADD                                         ;52275000
 EM4(145);         COMMENT LITC SUM                                    ;52280000
 EM6(STD);         COMMENT STD         SUM ~ SUM + 1;                  ;52285000
 EM1(0) ;     COMMENT LITC 0  FILLER FOR ANS FROM CMPEQ ROUTINE        ;52286000
 EM6(MKS);         COMMENT MKS                                         ;52290000
 EM4(76);          COMMENT LITC ALNIN                                  ;52295000
 EM6(LOD);         COMMENT LOD                                         ;52300000
 EM10(81);         COMMENT OPDC LOW                                    ;52305000
 EM6(LOD);         COMMENT LOD                                         ;52310000
 EM10(96);         COMMENT OPDC CMPEQ  GO TO TEST IF ALNIN RECORD      ;52315000
 EM1(2);           COMMENT LITC 2                                      ;52320000
 EM6(BFC);         COMMENT BFC         ON FALSE GO AROUND JUMP         ;52325000
 EM3A(105);        COMMENT                                             ;52330000
 EM6(BFW);         COMMENT BFW  B6384  IF RECORD(LOW) = ALNIN GO TO B3 ;52335000
 EM6(MKS);         COMMENT MKS                                         ;52340000
 EM10(81);         COMMENT OPDC LOW                                    ;52350000
 EM10(6);     COMMENT OPDC MYREAD                                      ;52365000
 EM2B(104);        COMMENT LITC XXXX    JUMP BACKWARDS TO B2 TO        ;52370000
 EM6(BBW);    COMMENT BBW      CONTINUE IN LOOP                        ;52375000
              END; COMMENT O END OF SYSTEM BLOVK FIVE -----------------;52405000
               BEGIN REAL ZOWIE; COMMENT SYSTEM BLOCK SIX ------------; 52410000
 EM3B(105);        COMMENT B6384        FIX JUMP TO HERE               ;52415000
                   COMMENT              B3   B3    B3    B3    B3   B3 ;52420000
                   COMMENT NOW HAVE FOUND A HIGH-VALUE RECORD WHICH    ;52425000
                   COMMENT MEANS STRING IS COMPLETE EXCEPT FOR CHECKING;52430000
                   COMMENT NUMBER WRITTEN VS TOTALS OF STRINGS MERGED  ;52435000
 EM1(0);           COMMENT LITC 0                                      ;52440000
 EM4(78);          COMMENT LITC I    FOR I ~ (0,1,TM2) DO BEGIN        ;52445000
 EM6(STD);         COMMENT STD                                         ;52450000
 EM3A(106);        COMMENT B6416          READ FILE(MPRT(I))           ;52455000
 EM6(BFW);         COMMENT BFW  B6417                                  ;52460000
 EM2A(107);        COMMENT B6406     MARK POSITION TO RETURN IN LOOP   ;52465000
 EM10(78);         COMMENT OPDC I                                      ;52470000
 EM1(1);           COMMENT LITC 1                                      ;52475000
 EM6(ADD);         COMMENT ADD                                         ;52480000
 EM4(78);          COMMENT LITC I                                      ;52485000
 EM6(SND);         COMMENT SND                                         ;52490000
 EM4(87);     COMMENT LITC T-2                                         ;52495000
 EM6(LSQ);         COMMENT LEQ       TEST IF RECORD-COUNT RECDS READ IN;52500000
 EM3A(108);        COMMENT                                             ;52505000
 EM6(BFC);         COMMENT BFC  B6431                                  ;52510000
 EM3B(106);        COMMENT B6417     JUMP TO HERE FIRST TIME INTO LOOP ;52515000
 EM6(MKS);         COMMENT MKS                                         ;52520000
 EM10(78);         COMMENT OPDC I                                      ;52530000
 EM10(132);        COMMENT OPDC MPRT                                   ;52535000
 EM10(6);     COMMENT OPDC MYREAD                                      ;52550000
 EM2B(107);        COMMENT LITC       JUMP BACKWARDS FOR NEXT RECORD,  ;52555000
 EM6(BBW);    COMMENT BBW                                              ;52560000
 EM3B(108);        COMMENT B6431      JUMP TO HERE WHEN READ LOOP FINI ;52590000
 EM10(145);        COMMENT OPDC SUM   FROM B6415/16.                   ;52595000
 EM1(1);           COMMENT LITC 1                                      ;52600000
 EM6(SUB);         COMMENT SUB                                         ;52605000
 EM4(145);         COMMENT LITC SUM   THIS DELETES THE ALNIN RECORD    ;52610000
 EM6(STD);         COMMENT STD        FROM COUNT OF THOSE IN OUTSTRING ;52615000
 EM1(0);           COMMENT LITC 0                                      ;52620000
 EM4(147);         COMMENT LITC TOTAL                                  ;52625000
 EM6(STD);         COMMENT STD        SET "TOTAL" TO ZERO              ;52630000
 EM1(0);           COMMENT LITC 0     FOR I ~ (0,1, TM2) DO BEGIN      ;52635000
 EM4(78);          COMMENT LITC I                                      ;52640000
 EM6(STD);         COMMENT STD                                         ;52645000
 EM3A(109);        COMMENT            FIXUP MARKER FOR BFW             ;52650000
 EM6(BFW);         COMMENT BFW B6457  FIRST TIME JUMP INTO TOTALING    ;52655000
 EM2A(110);        COMMENT B6446      MARK PLACE TO RETURN IN LOOP     ;52660000
 EM10(78);         COMMENT OPDC I                                      ;52665000
 EM1(1);           COMMENT LITC 1                                      ;52670000
 EM6(ADD);         COMMENT ADD                                         ;52675000
 EM4(78);          COMMENT LITC I                                      ;52680000
 EM6(SND);         COMMENT SND                                         ;52685000
 EM4(87);     COMMENT LITC T-2                                         ;52690000
 EM6(LSQ);         COMMENT LEQ        TEST IF SUB-TOTALS ALL ADDED     ;52695000
 EM3A(111);        COMMENT            FIXUP MARKER FOR JUMP OUT OF LOOP;52700000
 EM6(BFC);         COMMENT BFC  B6477                                  ;52705000
 EM3B(109);        COMMENT B6457                                       ;52710000
 EM10(78);         COMMENT OPDC I    BEGIN                             ;52715000
 EM10(140);        COMMENT OPDC MRG                                    ;52720000
 EM10(101);        COMMENT OPDC C                                      ;52725000
 EM1(1);           COMMENT LITC 1    C(MRG(I)) ~ C(MRG(I)) - 1.        ;52730000
 EM6(SUB);         COMMENT SUB                                         ;52735000
 EM10(78);         COMMENT OPDC I                                      ;52740000
 EM10(140);        COMMENT OPDC MRG                                    ;52745000
 EM11(101);        COMMENT DESC C                                      ;52750000
 EM6(STD);         COMMENT STD                                         ;52755000
 EM10(78);         COMMENT OPDC I    TOTAL ~ TOTAL PLUS                ;52760000
 EM10(132);        COMMENT OPDC MPRT                                   ;52765000
 EM6(LOD);         COMMENT LOD       FIRSTWORD(RECORD(MPRT(I)).        ;52770000
 EM6(LOD);         COMMENT LOD       FIRST LOD GETS RECORD DESCRIPTOR  ;52775000
 EM10(147);        COMMENT OPDC TOTALSECOND LOD GETS FIRST WORD OF RECD;52780000
 EM6(ADD);         COMMENT ADD                                         ;52785000
 EM4(147);         COMMENT LITC TOTAL                                  ;52790000
 EM6(STD);         COMMENT STD                                         ;52795000
 EM2B(110);        COMMENT LITC XXXX  END                              ;52800000
 EM6(BBW);         COMMENT BBW  B6446 GO BACK IN FOR-LOOP TO ADD NEXT  ;52805000
 EM3B(111);        COMMENT B6477     JUMP TO HERE WHEN LOOP IS FINI.   ;52810000
 EM4(86);     COMMENT LITC T-1                                         ;52815000
 EM10(140);        COMMENT OPDC MRG     C(MRG(TMIN1) =                 ;52820000
 EM10(101);        COMMENT OPDC C       C(MRG(TMIN1) + 1               ;52825000
 EM1(1);           COMMENT LITC 1                                      ;52830000
 EM6(ADD);         COMMENT ADD                                         ;52835000
 EM4(86);     COMMENT LITC T-1                                         ;52840000
 EM10(140);        COMMENT OPDC MRG                                    ;52845000
 EM11(101);        COMMENT DESC C                                      ;52850000
 EM6(STD);         COMMENT STD                                         ;52855000
 EM10(145);        COMMENT OPDC SUM                                    ;52860000
 EM10(147);        COMMENT OPDC TOTAL                                  ;52865000
 EM6(NEQ);         COMMENT NEQ                                         ;52870000
 EM3A(112);        COMMENT           FIX OF BFC AROUND ERROR RTNE      ;52875000
 EM6(BFC);         COMMENT BFC  B6489 JUMP ON FALSE (WHEN EQUAL).      ;52880000
 EM1(1); COMMENT LITC 1  CODE TO TERMINATE JOB                     DF ; 52885000
 EM4(86);COMMENT LITC T-1  INDEX TO FILE BEING WRITTEN WHEN        DF ; 52890000
 EM10(143);COMMENT OPDC FPRT. THE READ FROM OTHER UNIT FAILED.     DF ; 52891000
 EM11(10); COMMENT DESC 10    LOC OF FIB DESCRIPTOR                DF ; 52892000
 EM1(76);  COMMENT LITC 76   ( FOR "IOR ERR 76 " )                 DF ; 52895000
 EM1(17);  COMMENT LITC 17  CODE TO PRINT MESSAGE THEN TERM IF 1.  DF ; 52900000
 EM6(COM);         COMMENT COM         GO TO MCP.                      ;52905000
 EM3B(112);        COMMENT FIX  JUMP TO HERE IF SUM EQUALS TOTAL       ;52910000
  EM10(145);                                                            52910100
 EM4(86) ;    COMMENT  LITC T-1                          JAN-31-64     ;52910105
 EM10(132);                                                             52910110
 EM6(DUP) ;   COMMENT   DUPLICATE  INDEX INTO PRT FOR PRESENCE BIT     ;52910111
 EM6(LOD);                                                              52910115
 EM1(0) ;     COMMENT  LITC 0                                          ;52910116
 EM6(CDC) ;   COMMENT  CDC          DESCRIPTOR FOR PRESENCE BIT CHECK  ;52910117
 EM6(XCH) ;   COMMENT EXCHANGE TO PUT EXTRA INDEX INTO A REGISTER      ;52910118
 EM6(DEL);         COMMENT DEL         CLEAR STACK                 8-7; 52910119
 EM6(STD);                                                              52910120
 EM6(MKS);                                                              52910125
  EM4(86) ;   COMMENT LITC T-1                                         ;52910135
 EM10(132);                                                             52910140
 EM10(9);     COMMENT OPDC MYWRITE                                     ;52910155
 EM1(0);           COMMENT LITC 0                                      ;52915000
 EM4(78);          COMMENT LITC I   FOR I ~ (0,1,TM2) DO:              ;52920000
 EM6(STD);         COMMENT STD                                         ;52925000
 EM3A(113);        COMMENT                                             ;52930000
 EM6(BFW);         COMMENT BFW  B6507                                  ;52935000
 EM2A(114);        COMMENT B6496         MARK IN-LOOP RETURN POINT.    ;52940000
 EM10(78);         COMMENT OPDC I                                      ;52945000
 EM1(1);           COMMENT LITC 1                                      ;52950000
 EM6(ADD);         COMMENT ADD                                         ;52955000
 EM4(78);          COMMENT LITC I                                      ;52960000
 EM6(SND);         COMMENT SND                                         ;52965000
 EM4(87);     COMMENT LITC T-2                                         ;52970000
 EM6(LSQ);         COMMENT LEQ        TEST IF LOOP DONE ENOUGH TIMES.  ;52975000
 EM2B(132);        COMMENT LITC XXXX   JUMP OUT OF LOOP WHEN FINISHED  ;52980000
 EM6(BBC);         COMMENT BBC  B6300  BY GOING BACK TO B1 = B6300.    ;52985000
 EM3B(113);        COMMENT B6507       BEGIN                           ;52990000
 EM10(78);         COMMENT OPDC I      IF C(MRG(I)) EQUALS ZERO THEN:  ;52995000
 EM10(140);        COMMENT OPDC MRG                                    ;53000000
 EM10(101);        COMMENT OPDC C                                      ;53005000
 EM1(0);           COMMENT LITC 0                                      ;53010000
 EM6(EQL);         COMMENT EQL         TEST EQUAL TO ZERO              ;53015000
 EM2B(114);        COMMENT LITC XXXX                                   ;53020000
 EM6(BBC);         COMMENT BBC  B6496  JUMP ON FALSE (NOT EQUAL)       ;53025000
 EM10(92) ;   COMMENT OPDC BC   TEST IF PARTIAL BLOCK REQD.            ;53026100
 EM1(0) ;     COMMENT LITC 0                                           ;53026150
 EM6(NEQ) ;    COMMENT  NEQ                                            ;53026200
 EM3A(135) ;  COMMENT  LITC XXXX                                       ;53026250
 EM6(BFC) ;   COMMENT BFC   JUMP ON FALSE (BC IS ZERO) AROUND THE PRL  ;53026300
 EM4(103) ;   COMMENT LITC BFULL                                       ;53026350
 EM4(62) ;    COMMENT LITC WDS                                         ;53026400
 EM6(SUB) ;   COMMENT SUB                                              ;53026450
 EM4(92) ;    COMMENT LITC BC                                          ;53026500
 EM6(STD) ;   COMMENT STD                                              ;53026550
 EM6(MKS) ;   COMMENT  MKS    NOW CALLING ON MYWRITE ROUTINE FOR THE   ;53026600
 EM4( 86) ;   COMMENT LITC T-1    LAST BLOCK ON FINAL TAPE OF PASS.    ;53026650
 EM10(132);   COMMENT OPDC MPRT  (WE MAY HAVE SOME TRASH IN LAST BLOCK);53026700
 EM10(9) ;    COMMENT OPDC MYWRITE  DO PRL ON LAST OUTBLOCK            ;53026750
 EM3B(135) ;  COMMENT  JUMP TO HERE IF NO PRL REQD FOR PARTIAL BLOCK   ;53026800
 EM10(78);         COMMENT OPDC I         BEGIN                        ;53030000
 EM4(82);          COMMENT LITC JJ                                     ;53035000
 EM6(SND);         COMMENT SND       JJ ~ I                            ;53040000
 EM10(132);        COMMENT OPDC MPRT STILL HAVE I.                     ;53045000
 EM4(86);     COMMENT LITC T-1    HOLD MPRT[I] IN THE STACK            ;53050000
 EM10(132);        COMMENT OPDC MPRT                                   ;53055000
 EM10(78);         COMMENT OPDC I     NOTE THAT I EQLS JJ AT THIS POINT;53060000
 EM11(132);        COMMENT DESC MPRT  SOTHAT WE ARE EXCHANGING INDICES,;53065000
 EM6(STD);         COMMENT STD        FIB LOCS AND I/O DESCR LOC FROM  ;53070000
 EM4(86);     COMMENT LITC T-1  TAPE JUST EMPTIED WITH TAPE WRITTEN    ;53075000
 EM11(132);        COMMENT DESC MPRT  THIS SWITCHES CONTENTS OF        ;53080000
 EM6(STD);         COMMENT STD         MPRT(I) WITH MPRT(TM1).         ;53085000
 EM10(78);         COMMENT OPDC I                                      ;53090000
 EM10(143);        COMMENT OPDC FPRT                                   ;53095000
 EM4(86);     COMMENT LITC T-1                                         ;53100000
 EM10(143);        COMMENT OPDC FPRT                                   ;53105000
 EM10(78);         COMMENT OPDC I                                      ;53110000
 EM11(143);        COMMENT DESC FPRT                                   ;53115000
 EM6(STD);         COMMENT STD                                         ;53120000
 EM4(86);     COMMENT LITC T-1                                         ;53125000
 EM11(143);        COMMENT DESC FPRT                                   ;53130000
 EM6(STD);         COMMENT STD        SWITCHES FPRT(I) WITH FPRT(TM1). ;53135000
 EM10(78);         COMMENT OPDC I                                      ;53140000
 EM10(140);        COMMENT OPDC MRG                                    ;53145000
 EM4(86);     COMMENT LITC T-1                                         ;53150000
 EM10(140);        COMMENT OPDC MRG                                    ;53155000
 EM10(78);         COMMENT OPDC I                                      ;53160000
 EM11(140);        COMMENT DESC MRG                                    ;53165000
 EM6(STD);         COMMENT STD                                         ;53170000
 EM4(86);     COMMENT LITC T-1                                         ;53175000
 EM11(140);        COMMENT DESC MRG                                    ;53180000
 EM6(STD);         COMMENT STD        SWITCHES MRG(I) WITH MRG(TM1).   ;53185000
 EM3B(87) ;        COMMENT JUMP HERE FOR TEST-LAST-PASS,EVEN FIRST MRG; 53186000
 EM1(0);           COMMENT LITC 0    GO TO TESTLASTPASS END END,       ;53190000
 EM4(78);          COMMENT LITC I    GO TO B1. THIS GO TO WAS ACTUALLY ;53195000
 EM6(STD);         COMMENT STD       A BACKWARDS JUMP FROM LOOP CONTROL;53200000
 EM3A(117);        COMMENT            FOR I ~ (0,1,TM2) DO             ;53205000
 EM6(BFW);         COMMENT BFW  B6565 INTO LOOP THE FIRST TIME.        ;53210000
 EM2A(118);        COMMENT B6554      THIS IS THE LOOP CONTROL RETURN  ;53215000
 EM10(78);         COMMENT OPDC I     POINT.                           ;53220000
 EM1(1);           COMMENT LITC 1                TESTLASTPASS          ;53225000
 EM6(ADD);         COMMENT ADD                                         ;53230000
 EM4(78);          COMMENT LITC       I ~ I + 1,                       ;53235000
 EM6(SND);         COMMENT SND                                         ;53240000
 EM4(87);     COMMENT LITC T-2                                         ;53245000
 EM6(LSQ);         COMMENT LEQ                                         ;53250000
 EM3A(119);        COMMENT              TO LASTPASS IF THE INSIDE TEST ;53255000
 EM6(BFC);         COMMENT BFC        DOESNT CAUSE TRANSFER TO DO      ;53260000
 EM3B(117);        COMMENT FIX JUMP TO B6565 FROM B6551                ;53265000
 EM10(78);         COMMENT OPDC I     FURTHER MERGES  (NOT-LAST-MERGE) ;53270000
 EM10(140);        COMMENT OPDC MRG                                    ;53275000
 EM10(101);        COMMENT OPDC C                                      ;53280000
 EM1(1);           COMMENT LITC 1                                      ;53285000
 EM6(NEQ);         COMMENT NEQ                                         ;53290000
 EM2B(118);        COMMENT LITC XXXX   ON FALSE WHICH MEANS C(MRG(I))  ;53295000
 EM6(BBC);         COMMENT BBC  B6554  DOES EQUAL ONE GO BACK FOR NEXT.;53300000
 EM6(MKS);         COMMENT MKS        IF EVER GETS THRU TO HERE,THEN   ;53305000
 EM1(2);           % LITC 2           WE ARE AT NON-ONE CONDITION       53310000
 EM1(0);           COMMENT LITC 0     THEREFORE AT:  ANOTHERMERGE      ;53315000
 EM10(82);         COMMENT OPDC JJ    CLOSE,REWIND,NO LOCK,KEEP TSU.   ;53320000
 EM10(143);        COMMENT OPDC FPRT  CLOSE FILE (NOT REEL)            ;53325000
 EM11(10);         COMMENT DESC 10     ABS. LOC OF FIB DESCR           ;53330000
 EM1(6);           % LITC 6   CODE FOR SORT CLOSE                       53335000
 EM10(65);         COMMENT OPDC FCR  HAVE CLOSE FILE(FPRT(JJ)).        ;53340000
 EM4(86);     COMMENT LITC T-1                                         ;53341000
 EM10(143);   COMMENT OPDC FPRT   AGAIN COPY FIB(11) INTO              ;53341100
 EM11(10);    COMMENT DESC 10     FIB(12) SO MCP (FCR) DOES            ;53341200
 EM6(LOD);    COMMENT LOD         NOT TRY TO WRITE ANY MORE            ;53341300
 EM6(DUP);    COMMENT DUP         DATA FOR THIS TAPE                   ;53341400
 EM1(11);     COMMENT LITC 11                                          ;53341500
 EM6(COC);    COMMENT COC                                              ;53341600
 EM6(XCH);    COMMENT XCH                                              ;53341700
 EM1(12);     COMMENT LITC 12                                          ;53341800
 EM6(CDC);    COMMENT CDC                                              ;53341900
 EM6(STD);    COMMENT STD                                              ;53341950
 EM6(MKS);         COMMENT MKS                                         ;53345000
 EM1(4);           % LITC 4   CLOSE PURGE                               53350000
 EM1(0);           COMMENT LITC 0    CLOSE FILE (NOT REEL).            ;53355000
 EM4(86);     COMMENT LITC T-1                                         ;53360000
 EM10(143);        COMMENT OPDC FPRT                                   ;53365000
 EM11(10);         COMMENT DESC 10                                     ;53370000
 EM1(4);           COMMENT LITC 4     CLOSE CODE                       ;53375000
 EM10(65);         COMMENT OPDC FCR   TO CLOSE FILE (FPRT(TM1)).       ;53380000
 EM6(MKS);         COMMENT MKS                                         ;53385000
 EM10(82);         COMMENT OPDC JJ                                     ;53390000
 EM10(143);        COMMENT OPDC FPRT                                   ;53395000
 EM11(10);         COMMENT DESC 10                                     ;53400000
 EM1(1);           COMMENT LITC 1                                      ;53405000
 EM10(65);         COMMENT OPDC FCR   OPEN INPUT FILE (FPRT(JJ)).      ;53410000
 EM1(0);      COMMENT LITC 0                                           ;53411000
 EM1(17);     COMMENT LITC 17                                          ;53411100
 EM10(82);    COMMENT OPDC JJ                                          ;53411200
 EM10(143);   COMMENT OPDC FPRT   FIB(17) ~ ZERO FOR FPRT(JJ) AT       ;53411300
 EM11(10);    COMMENT DESC 10     THE "OPEN INPUT"                     ;53411400
 EM6(LOD) ;   COMMENT LOD    LOD THE IO DESCRIPTOR                     ;53411410
 EM6(INX) ;   COMMENT   INX   INDEX BY 17 FOR FIB 17                   ;53411420
 EM6(STD);    COMMENT STD                                              ;53411500
 EM1(0);      COMMENT LITC 0                                           ;53411600
 EM4(92);     COMMENT LITC BC     BC ~ ZERO AT "OPEN-OUTPUT"           ;53411700
 EM6(STD);    COMMENT STD                                              ;53411800
 EM6(MKS);         COMMENT MKS                                         ;53415000
 EM4(86);     COMMENT LITC T-1                                         ;53420000
 EM10(143);        COMMENT OPDC FPRT                                   ;53425000
 EM11(10);         COMMENT DESC 10                                     ;53430000
 EM1(3);           COMMENT LITC 3                                      ;53435000
 EM10(65);         COMMENT OPDC FCR   OPEN OUTPUT FILE(FPRT(TM1)).     ;53440000
 EM2B(120);        COMMENT LITC XXXX                                   ;53445000
 EM6(BBW);         COMMENT BBW  B6300 GO TO  B1 FOR NEXT MERGE PASS.   ;53450000
 EM3B(119);        COMMENT FIXUP THE JUMP TO HERE. THIS IS LASTPASS.   ;53455000
 EM1(0) ;     COMMENT  LITC 0    SET SUM TO ZERO FOR LASTPASS CHECK.   ;53456000
 EM4(145) ;   COMMENT LITC SUM                                         ;53456100
 EM6(STD)  ;  COMMENT STD                                              ;53456200
 EM4(86);     COMMENT LITC T-1                                         ;53457000
 EM10(143);   COMMENT OPDC FPRT   AGAIN COPY FIB(11) INTO              ;53457100
 EM11(10);    COMMENT DESC 10     FIB(12) SO MCP (FCR) DOES            ;53457200
 EM6(LOD);    COMMENT LOD         NOT TRY TO WRITE ANY MORE            ;53457300
 EM6(DUP);    COMMENT DUP         DATA FOR THIS TAPE                   ;53457400
 EM1(11);     COMMENT LITC 11                                          ;53457500
 EM6(COC);    COMMENT COC                                              ;53457600
 EM6(XCH);    COMMENT XCH                                              ;53457700
 EM1(12);     COMMENT LITC 12                                          ;53457800
 EM6(CDC);    COMMENT CDC                                              ;53457900
 EM6(STD);    COMMENT STD                                              ;53457950
 EM6(MKS);         COMMENT MKS               L A S T P A S S           ;53460000
 EM1(2);           % LITC 2   RELEASE                                   53465000
 EM1(0);           COMMENT LITC 0     CLOSE FILE(NOT REEL              ;53470000
 EM10(82);         COMMENT OPDC JJ                                     ;53475000
 EM10(143);        COMMENT OPDC FPRT                                   ;53480000
 EM11(10);         COMMENT DESC 10    LOC OF FIB DESCR.                ;53485000
 EM1(6);           % LITC 6   SORT CLOSE                                53490000
 EM10(65);         COMMENT OPDC FCR   CLOSE,FILE(FPRT(JJ)).            ;53495000
 EM6(MKS);         COMMENT MKS                                         ;53500000
 EM1(4);           % LITC 4   SORT CLOSE -PURGE                         53505000
 EM1(0);           COMMENT LITC 0     BUT KEEP THE TSU REQUIREMENT.    ;53510000
 EM4(86);     COMMENT LITC T-1                                         ;53515000
 EM10(143);        COMMENT OPDC FPRT                                   ;53520000
 EM11(10);         COMMENT DESC 10    LOC OF FIB DESCR.                ;53525000
 EM1(4);           COMMENT LITC 4     CLOSE CODE                       ;53530000
 EM10(65);         COMMENT OPDC FCR   CLOSE FILE(FPRT(TM1)).           ;53535000
 EM6(MKS);         COMMENT MKS                                         ;53540000
 EM10(82);         COMMENT OPDC JJ                                     ;53545000
 EM10(143);        COMMENT OPDC FPRT                                   ;53550000
 EM11(10);         COMMENT DESC 10                                     ;53555000
 EM1(1);           COMMENT LITC 1                                      ;53560000
 EM10(65);         COMMENT OPDC FCR   OPEN INPUT FILE(FPRT(JJ)).       ;53565000
 EM1(0);      COMMENT LITC 0                                           ;53566000
 EM1(17);     COMMENT LITC 17                                          ;53566100
 EM10(82);    COMMENT OPDC JJ                                          ;53566200
 EM10(143);   COMMENT OPDC FPRT   FIB(17) ~ ZERO FOR FPRT(JJ) AT       ;53566300
 EM11(10);    COMMENT DESC 10     THE "OPEN INPUT"                     ;53566400
 EM6(LOD) ;   COMMENT LOD    LOD THE IO DESCRIPTOR                     ;53566410
 EM6(INX) ;   COMMENT   INX   INDEX BY 17 FOR FIB 17                   ;53566420
 EM6(STD);    COMMENT STD                                              ;53566500
 EM1(0);      COMMENT LITC 0                                           ;53566600
 EM4(92);     COMMENT LITC BC     BC ~ ZERO AT "OPEN-OUTPUT"           ;53566700
 EM6(STD);    COMMENT STD                                              ;53566800
              END; COMMENT END OF SYSTEM BLOCK SIX --------------------;53570000
     BEGIN LABEL B6632P,  B6630, B6633, B6662, B6672, B6846, B6856;     53575000
                   COMMENT SYSTEM BLOCK SEVEN--------------------------;53580000
 IF PARAM[142] = 0 THEN GO TO B6630;                                    53585000
 EM6(MKS);         COMMENT MKS                                         ;53590000
 EM4(133);         COMMENT LITC OUTFL LOC OF FIB DESCR OF OUTFILE      ;53595000
 EM11(10);         COMMENT DESC 10    IF STANDARD OUTPUT.              ;53600000
 EM1(3);           COMMENT LITC 3                                      ;53605000
 EM10(65);         COMMENT OPDC FCR                                    ;53610000
 EM1(0);           % LITC 0                                             53611000
 EM1(4);           % LITC 4                                             53611100
 EM10(133);        % OPDC   FIB[4]                                      53611200
 EM14(8,DIA);      % DIA 8  FIB[4].[8:4] = 4 THEN DISK IS OUTPUT        53611300
 EM14(44,DIB);     % DIB 44                                             53611400
 EM19(4,TRB);      % TRB 4                                              53611500
 EM1(4);           % LITC 4                                             53611600
 EM6(EQL);         % EQL    SET R= TRUE IF DISK FILE                    53611700
 EM4(94);          % LITC R                                             53611800
 EM6(STD);         % STD                                                53611900
 GO TO B6632P;     COMMENT SKIP AROUND LINKAGE TO USER OUTPUT          ;53615000
 B6630:EM4(152) ;  COMMENT LITC OUTPRO  THIS SETS BINGO FOR FIRST      ;53620000
 EM4(148);         COMMENT LITC BINGO    ENTRY INTO TOP OF THE         ;53625000
 EM6(STD);         COMMENT STD           USERS OUTPUT SECTION.         ;53630000
 EM1(0) ;   COMMENT LITC 0   AT OPEN OF OUTFILE WE ENTER START OF THE  ;53630010
 EM4(149) ;   COMMENT LITC ENDQ    USERS OUTPUT PROCEDURE              ;53630015
 EM6(STD) ;   COMMENT STD                                              ;53630020
 EM6(MKS);    COMMENT MKS       REVISED PERFORM USERS OUTPUT 3/9/64 RES;53630023
 EM10(148) ;  COMMENT OPDC BINGO                                       ;53630025
 EM6(DUP);    COMMENT DUP       DO USERS OUTPUT WHEN FILE    3/9/64 RES;53630035
 EM11(10) ;   COMMENT DESC 10  FOR I/O PROC PAST PRT 512      7-26-64;  53630036
 EM6(LOD);    COMMENT LOD        IS OPENED FOR OUTPUT        3/9/64 RES;53630040
              COMMENT                               REMOVED  3/9/64 RES;53630045
 EM4(151) ;   COMMENT LITC IPFIDX   A VARIABLE ENTRY AND FIXED EXIT    ;53630050
              COMMENT                               REMOVED  3/9/64 RES;53630060
 EM6(COC);    COMMENT COC      THIS COC PERFORMS THE PROCEDUR3/9/64 RES;53630065
 B6632P: EM1(0) ;  COMMENT LITC 0 THIS SET OF BRNCH ONLY ONCE AND IT   ;53630200
 EM4(130) ;   COMMENT LITC BRNCH   SETS FIRST ENTRY INTO THE           ;53630300
 EM6(STD) ;   COMMENT STD    LOWSLCT ROUTINE.                          ;53630400
;COMMENT NOW AT START OF THE FINAL PASS,ALL FILES OPENED, READ EACH:    53631001
 FOR I ~ 0 STEP 1 UNTIL TM2 DO READ FILE[MPRT[I]]                      ;53631005
 EM1(0);      COMMENT LITC 0                                           ;53631010
 EM4(78);     COMMENT LITC I                                           ;53631015
 EM6(STD);    COMMENT STD                                              ;53631020
 EM3A(86 );   COMMENT LITC XX FOR BFW INTO LOOP                        ;53631025
 EM6(BFW);    COMMENT BFW                                              ;53631030
 EM2A(85 );   COMMENT MARK POSITION TO RETURN IN LOOP                  ;53631035
 EM10(78);    COMMENT OPDC I                                           ;53631040
 EM1(1);      COMMENT LITC 1                                           ;53631045
 EM6(ADD);    COMMENT ADD                                              ;53631050
 EM4(78);     COMMENT LITC I                                           ;53631055
 EM6(SND);    COMMENT SND       I ~ I + 1                              ;53631060
 EM4(87);     COMMENT LITC T-2                                         ;53631065
 EM6(LSQ);    COMMENT LEQ     TEST IF ALL TAPES READ ONE YET           ;53631070
 EM3A(84 );   COMMENT LITC XXXX                                        ;53631075
 EM6(BFC);    COMMENT BFC                                              ;53631080
 EM3B(86 );   COMMENT JUMP TO HERE FIRST TIME INTO LOOP;               ;53631085
 EM6(MKS);    COMMENT MKS                                              ;53631090
 EM10(78);    COMMENT OPDC I                                           ;53631100
 EM10(132) ;  COMMENT OPDC MPRT                                        ;53631105
 EM10(6);     COMMENT OPDC MYREAD                                      ;53631115
 EM2B(85 );   COMMENT LITC XXXX  ACTUALLY JUMPING BACKWARDS WHEN NOT   ;53631120
 EM6(BBW);    COMMENT BBW       AT END-OF-FILE.                        ;53631125
 EM3B(84) ;   COMMENT JUMP HERE WHEN ALL TAPES READ ONE TIME           ;53631155
 B6633: EM2A(121); COMMENT B6633   NOW IN FINAL OUTPUT PASS (LASTMERGE);53650000
 EM6(MKS);         COMMENT MKS                                         ;53655000
 EM10(129);        COMMENT OPDC LOWSLCT  OUTPUT PASS (AND FINAL MERGE) ;53660000
 EM1(0);           COMMENT LITC 0   ANSWER SPACE BELOW MKS             ;53665000
 EM6(MKS);         COMMENT MKS           AT   B4   B4   B4   B4   B4.  ;53670000
 EM10(81);         COMMENT OPDC LOW      DO LOWSELECT.                 ;53675000
 EM6(LOD);         COMMENT LOD           TEST FI LOW RECORD IS ALNINS  ;53680000
 EM4(76);          COMMENT LITC ALNIN                                  ;53685000
 EM6(LOD);         COMMENT LOD                                         ;53690000
 EM10(96);         COMMENT OPDC CMPEQ                                  ;53695000
 EM1(2);           COMMENT LITC 2                                      ;53700000
 EM6(BFC);         COMMENT BFC           ON FALSE GO AROUND JUMP.      ;53705000
 EM3A(122);        COMMENT               IF LOW RECORD IS ALNIN THEN WE;53710000
 EM6(BFW);         COMMENT BFW  B6700    ARE AT THE END OF THE MERGE.  ;53715000
 EM6(MKS);         COMMENT MKS                                         ;53720000
 EM10(81);         COMMENT OPDC LOW                                    ;53725000
 EM6(LOD);         COMMENT LOD                                         ;53730000
 IF PARAM[142] = 1 THEN EM4(137) ELSE EM4(139);COMMENT STND ELSE USER  ;53735000
 EM6(LOD);         COMMENT LOD    EITHER LITC D9A ELSE LITC SORTREC.LOD;53740000
 EM10(73);         COMMENT OPDC MOVE   PLACES RECORD EITHER INTO THE   ;53745000
 EM10(145);        COMMENT OPDC SUM    OUTPUT FILE OR IF USERS OUTPUT  ;53750000
 EM1(1);           COMMENT LITC 1      THEN INTO THE SPECIAL SORTRECORD;53755000
 EM6(ADD);         COMMENT ADD                                         ;53760000
 EM4(145);         COMMENT LITC SUM                                    ;53765000
 EM6(STD);         COMMENT STD         SUM ~ SUM + 1.                  ;53770000
 IF PARAM[142] = 0 THEN GO TO B6662;                                    53775000
 EM6(MKS);         COMMENT MKS                                         ;53780000
 EM4(62);          COMMENT LITC WDS                                    ;53785000
 EM4(137) ;   COMMENT  LITC OUTREC     STANDARD OUTPUT                 ;53790000
 EM11(10);         COMMENT DESC 10                                     ;53795000
 EM1(1);           COMMENT LITC 1     ONE IS WRITE CODE                ;53800000
 EM10(64);         COMMENT OPDC READ      WRITE INTO OUTFILE           ;53805000
 EM10(94);         % OPDC R                                             53805100
 EM1(8);           % LITC 8                                             53805200
 EM6(BFC);         % BFC       OUT IF NOT DISK                          53805300
 EM1(6);           % LITC 6                                             53805400
 EM6(BFC);         % BFC       OUT IF FILE NOT EXHAUSTED                53805500
 EM1(1);           % LITC 1                                             53805600
 EM4(133);         % LITC  OUTFIL                                       53805700
 EM11(10);         % DESC  10                                           53805800
 EM1(81);          % LITC  81                                           53805900
 EM1(17);          % LITC  17                                           53806000
 EM6(COM);         % COM                                                53806100
 GO TO B6672;      COMMENT WHEN STND OUTPUT SKIP USERS OUTPUT CODING   ;53810000
 B6662:EM1(0);     COMMENT LITC 0                                      ;53815000
 EM4(149);         COMMENT LITC ENDQ                                   ;53820000
 EM6(STD);         COMMENT STD                                         ;53825000
 EM6(MKS);    COMMENT MKS    REVISED PERFORM OF USERS OUTPUT 3/9/64 RES;53828000
 EM10(148);        COMMENT OPDC BINGO                                  ;53830000
 EM6(DUP);    COMMENT DUP       PERFORMS OUTPUT PROCEDURE    3/9/64 RES;53840000
 EM11(10) ;   COMMENT DESC 10  FOR I/O PROC PAST PRT 512      7-26-64;  53842000
 EM6(LOD);    COMMENT LOD       WITH STND COBOL CONTROL(REV) 3/9/64 RES;53845000
              COMMENT                               REMOVED  3/9/64 RES;53850000
 EM4(151);         COMMENT LITC IPFIDX    A VARIABLE ENTRY AND FIXD XIT;53855000
              COMMENT                               REMOVED  3/9/64 RES;53855200
 EM6(COC);    COMMENT COC   THIS CALL WILL PERFORM OUTPROC.  3/9/64 RES;53860000
 B6672:EM6(MKS);   COMMENT MKS                                         ;53865000
 EM10(81);         COMMENT OPDC LOW      LOC OF I/O DESCR.             ;53875000
 EM10(6);     COMMENT OPDC MYREAD     READ FILE  (LOW).                ;53890000
 EM2B(121);        COMMENT LITC XXXX                                   ;53895000
 EM6(BBW);    COMMENT BBW     GO BACK TO B4 WHEN NOT EOFILE            ;53900000
 EM3B(122);        COMMENT FIXUP JUMP TO B6700 FROM B6643              ;53930000
 EM1(0);           COMMENT LITC 0          ENDFILE                     ;53935000
 EM4(147);         COMMENT LITC TOTAL                                  ;53940000
 EM6(STD);         COMMENT STD           TOTAL ~ 0.                    ;53945000
 EM1(0);           COMMENT LITC 0     FOR I ~ (0,1,TM2) DO             ;53950000
 EM4(78);          COMMENT LITC I           BEGIN                      ;53955000
 EM6(STD);         COMMENT STD                READ FILE(MPRT(I)),      ;53960000
 EM3A(115);        COMMENT MARK JUMP TO B6721 TOTAL ~ TOTAL +FIRSTWORD.;53965000
 EM6(BFW);         COMMENT BFW  B6721    I SET TO ZERO.                ;53970000
 EM2A(123);        COMMENT B6710         MARK HERE FOR JUMP BACK       ;53975000
 EM10(78);         COMMENT OPDC I        INTO THE CONTROL LOOP.        ;53980000
 EM1(1);           COMMENT LITC 1                                      ;53985000
 EM6(ADD);         COMMENT ADD                                         ;53990000
 EM4(78);          COMMENT LITC I                                      ;53995000
 EM6(SND);         COMMENT SND                                         ;54000000
 EM4(87);     COMMENT LITC T-2                                         ;54005000
 EM6(LSQ);         COMMENT LEQ                                         ;54010000
 EM3A(124);        COMMENT        MARK FOR JUMP TO B6748 OUT OF LOOP.  ;54015000
 EM6(BFC);         COMMENT BFC  B6748                                  ;54020000
 EM3B(115);        COMMENT B6721   JUMP TO HERE FOR BEGIN.             ;54025000
 EM6(MKS);         COMMENT MKS                                         ;54030000
 EM1(0);      COMMENT LITC 0  FLAG FOR "SPECIAL RETURN ON END-OF-FILE" ;54035000
 EM10(78);         COMMENT OPDC I         THIS IS IN LOOP TO CHECK THE ;54040000
 EM10(132);        COMMENT OPDC MPRT  TOTAL RECORD COUNT               ;54045000
 EM10(6);     COMMENT OPDC MYREAD                                      ;54060000
 EM10(78);         COMMENT OPDC I                        CHECK LOOP    ;54105000
 EM10(132);        COMMENT OPDC MPRT                                   ;54110000
 EM6(LOD);         COMMENT LOD        LOADS THE I/O DESCRIPTOR         ;54115000
 EM6(LOD);         COMMENT LOD        LOADS FIRSTWORD OF RECORD        ;54120000
 EM10(147);        COMMENT OPDC TOTAL                                  ;54125000
 EM6(ADD);         COMMENT ADD                                         ;54130000
 EM4(147);         COMMENT LITC TOTAL                                  ;54135000
 EM6(STD);         COMMENT STD                                         ;54140000
 EM2B(123);        COMMENT LITC XXXX                                   ;54145000
 EM6(BBW);         COMMENT BBW  B6710                                  ;54150000
 EM3B(124);        COMMENT B6748.     JUMP HERE FROM B6720 WHEN LOOP   ;54155000
 EM3A(82) ;   COMMENT LITC XXXX   JUMP FORWARD AND CLOSE THE OUTPUT    ;54155100
 EM6(BFW) ;   COMMENT  BFW  FILE BEFORE MAKING ERROR TESTS THEN RETN   ;54155200
 EM2A(83) ;   COMMENT   THEN RETRN TO HERE VIA THIS MARKER             ;54155300
 EM10(147);        COMMENT OPDC TOTAL  IS FINISHED.                    ;54160000
 EM10(145);        COMMENT OPDC SUM    IF TOTAL NOT EQUAL SUM          ;54165000
 EM6(NEQ);         COMMENT NEQ                                         ;54170000
 EM3A(127);        COMMENT MARK FOR JUMP AROUND ERROR PRINTOUT.        ;54175000
 EM6(BFC);         COMMENT BFC  B6759  IF OKAY, JUMP ERROR PRINTOUT.   ;54180000
 EM1(0);  COMMENT LITC 0  CODE TO PRINT MESSAGE BUT CONTINUE JOB   DF ; 54185000
 EM10(78); COMMENT OPDC I SELECTS UNIT8 BUT NOT NEC ONE WHICH FAILD DF; 54186000
 EM10(143);  COMMENT OPDC  FPRT                                    DF ; 54187000
 EM11(10);  COMMENT DESC 10  LOC FIB DESCRIPTOR                    DF ; 54188000
 EM1(79);  COMMENT LITC 79   ( "IOR ERR 79 ")                      DF ; 54190000
 EM1(17);   COMMENT LITC 17                                        DF ; 54195000
 EM6(COM) ; COMMENT COMMUNICATE TO MCP FOR PRINT OF MESSAGE.       DF ; 54200000
 EM3B(127);        COMMENT B6759      (TWO WAYS TO GET HERE,SO 2 EM3BS ;54205000
 EM10(147);        COMMENT OPDC TOTAL                                  ;54210000
 EM10(157);        COMMENT OPDC INTOT  IF TOTAL NEQ INTOTAL SEND OUT   ;54215000
 EM6(NEQ);         COMMENT NEQ         AN ERROR MESSAGE BUT KEEP GOING ;54220000
 EM3A(128);        COMMENT                                             ;54225000
 EM6(BFC);         COMMENT BFC  B6769  JUMP AROUND ERROR MESSAGE       ;54230000
 EM1(0);    COMMENT LITC 0   CODE DONT TERMINATE JOB                DF; 54235000
 EM10(78); EM10(143); EM11(10); COMMENT INITIAL INTOT NEQ FINAL OUTTOTL;54240000
 EM1(80);   COMMENT LITC 80  (FOR IO ERR 80) INTOT ! OUT-TOT        DF; 54241000
 EM1(17);   COMMENT LITC 17 CODE TO PRINT MESSAGE   UNIT MEANINGLES DF; 54242000
 EM6(COM);  COMMENT COM CALL MCP (LATER PUT RETRY HERE)             DF; 54245000
 EM3B(128);        COMMENT      B6769   FIX JUMP TO HERE.  (TO MCP.)   ;54250000
 EM1(0);           COMMENT LITC 0                                      ;54255000
 EM4(78);          COMMENT LITC I                                      ;54260000
 EM6(STD);         COMMENT STD         FOR I ~ (0,1,TM2) DO            ;54265000
 EM3A(129);        COMMENT              BEGIN  CLOSE FILES(FPRT(I))    ;54270000
 EM6(BFW);         COMMENT BFW  B6786      REWIND, RELEASE TAPE FILES, ;54275000
 EM2A(131);        COMMENT   B6778     MARK FOR JUMP BACK TO HERE.     ;54280000
 EM10(78);         COMMENT OPDC I          DO NOT RELEASE UNITS REQD.  ;54285000
 EM1(1);           COMMENT LITC 1                                      ;54290000
 EM6(ADD);         COMMENT ADD                                         ;54295000
 EM4(78);          COMMENT LITC I                                      ;54300000
 EM6(SND);         COMMENT SND                                         ;54305000
 EM4(87) ;    COMMENT   LITC T-2                                       ;54310000
 EM6(LSQ);         COMMENT LEQ                                         ;54315000
 EM3A(130);        COMMENT     MARK FOR FIXUP OF JUMP OUT OF LOOP      ;54320000
 EM6(BFC);         COMMENT BFC           GO TO B6800                   ;54325000
 EM3B(129);        COMMENT B6786   BEGIN HERE                          ;54330000
 EM6(MKS);         COMMENT MKS                                         ;54335000
 EM1(4);           % CLOSE PURGE CODE                                   54340000
 EM1(0);           COMMENT LITC 0      THE TSU.  ZERO SAYS FILE CLOSE. ;54345000
 EM10(78);         COMMENT OPDC I                                      ;54350000
 EM10(143);        COMMENT OPDC FPRT                                   ;54355000
 EM11(10);         COMMENT DESC 10                                     ;54360000
 EM1(4);           COMMENT LITC 4      CLOSE CODE                      ;54365000
 EM10(65);         COMMENT OPDC FCR                                    ;54370000
 EM2B(131);        COMMENT LITC                                        ;54375000
 EM6(BBW);         COMMENT BBW  B6778                                  ;54380000
 EM3B(130) ;  COMMENT JUMP HERE WHEN MERGE FILES ALL CLOSED    B6800   ;54385000
    IF (PARAM[141] = 0 ) OR ( PARAM[142] = 0 ) THEN                     54390000
         BEGIN                                                          54390100
 EM4(139) ;   COMMENT LITC SORTREC                                     ;54390200
 EM11(10) ;   COMMENT DESC 10                                          ;54390300
 EM1(3) ;     COMMENT  LITC 3   CLOSE ARRAY CODE FOR DF-MCPCOMMENT DF;  54390400
 EM6(COM) ;   COMMENT COMM         CLOSE THE ARRAY SORTREC.            ;54390500
 EM6(DEL);         COMMENT DEL         CLEAR STACK                 8-7; 54390600
         END;                                                           54390700
 EM4(99);          COMMENT   LITC A      CLOSE UP ALL ARRAYS FOR THE   ;54395000
 EM11(10);         COMMENT   DESC 10     LAST TIME.                    ;54400000
 EM1(3) ;     COMMENT  LITC 3   CLOSE ARRAY CODE FOR DF-MCPCOMMENT DF;  54405000
 EM6(COM);         COMMENT   COM        CLOSE ARRAY A.                 ;54410000
 EM6(DEL);         COMMENT DEL         CLEAR STACK                 8-7; 54415000
 EM4(100);         COMMENT   LITC B                                    ;54425000
 EM11(10);         COMMENT   DESC 10                                   ;54430000
 EM1(3) ;     COMMENT  LITC 3   CLOSE ARRAY CODE FOR DF-MCPCOMMENT DF;  54435000
 EM6(COM);         COMMENT   COM         CLOSE ARRAY B                 ;54440000
 EM6(DEL);         COMMENT DEL         CLEAR STACK                 8-7; 54445000
 EM4(101);         COMMENT   LITC C                                    ;54455000
 EM11(10);         COMMENT   DESC 10                                   ;54460000
 EM1(3) ;     COMMENT  LITC 3   CLOSE ARRAY CODE FOR DF-MCPCOMMENT DF;  54465000
 EM6(COM);         COMMENT COM     CLOSE ARRAY C.                      ;54470000
 EM6(DEL);         COMMENT DEL         CLEAR STACK                 8-7; 54475000
 EM4(76);     COMMENT LITC ALNIN   CLOSE ARRAY "ALNIN"                 ;54476300
 EM11(10);    COMMENT DESC 10                                          ;54476400
 EM1(3) ;     COMMENT  LITC 3   CLOSE ARRAY CODE FOR DF-MCPCOMMENT DF;  54476500
 EM6(COM);    COMMENT COM                                              ;54476600
 EM6(DEL);         COMMENT DEL         CLEAR STACK                 8-7; 54476700
 EM4(140);         COMMENT LITC MRG                                    ;54485000
 EM11(10);         COMMENT DESC 10                                     ;54490000
 EM1(3) ;     COMMENT  LITC 3   CLOSE ARRAY CODE FOR DF-MCPCOMMENT DF;  54495000
 EM6(COM);         COMMENT COM       CLOSE ARRAY MRG.                  ;54500000
 EM6(DEL);         COMMENT DEL         CLEAR STACK                 8-7; 54505000
 EM4(143);         COMMENT LITC FPRT                                   ;54515000
 EM11(10);         COMMENT DESC 10                                     ;54520000
 EM1(3) ;     COMMENT  LITC 3   CLOSE ARRAY CODE FOR DF-MCPCOMMENT DF;  54525000
 EM6(COM);         COMMENT COM                                         ;54530000
 EM6(DEL);         COMMENT DEL         CLEAR STACK                 8-7; 54535000
 EM4(132);         COMMENT LITC MPRT                                   ;54545000
 EM11(10);         COMMENT DESC 10                                     ;54550000
 EM1(3) ;     COMMENT  LITC 3   CLOSE ARRAY CODE FOR DF-MCPCOMMENT DF;  54555000
 EM6(COM);         COMMENT COM                                         ;54560000
 EM6(DEL);         COMMENT DEL         CLEAR STACK                 8-7; 54565000
                    EM1(2);%PICK UP MEMORY AND STORE IT IN              54565010
                    EM6(LOD);% SD UNTIL NEXT SORT TO CAUSE              54565020
                    IF PARAM[139]> 511 THEN EM6(XRT);                   54565030
                    EM1(PARAM[139] );%INVD ADDR IF ACCESSED BEFORE      54565040
                    EM6(STD);%THE SORT.......                           54565050
 EM3A(88) ;   COMMENT JUMP FORWARD TO EXIT FROM SORT ROUTINE           ;54565100
 EM6(BFW) ;   COMMENT  BFW                                             ;54565200
 EM3B(82) ;   COMMENT  SET JUMP TO HERE TO CLOSE OUTFILE BEFORE TESTS  ;54565300
     IF PARAM [142]  =  0 THEN GO TO B6846; COMMENT SKIP STND-OUT CLOSE;54570000
 EM6(MKS);         COMMENT MKS                                         ;54575000
 EM1(2);           COMMENT LITC 2    CLOSE,REWIND,LOCK,KEEP TSU REQMENT;54580000
 EM1(0);           COMMENT LITC 0    ZERO SAYS CLOSE FILE (NOT REE).   ;54585000
 EM4(133);         COMMENT LITC OUTFL                                  ;54590000
 EM11(10);         COMMENT DESC 10                                     ;54595000
 EM1(4);           COMMENT LITC 4    FOUR IS CLOSE CODE.               ;54600000
 EM10(65);         COMMENT OPDC FCR       CLOSE OUTPUT FILE.           ;54605000
     GO TO B6856;  COMMENT    NOW SKIP LINKAGE FOR USERS ROUTINE CLOSE ;54610000
   B6846:EM1(1);   COMMENT LITC 1     THIS IS MESSAGE TO USER OUTPUT   ;54615000
 EM4(149);         COMMENT LITC ENDQ  ROUTINE TO CLOSE UP HIS FILE.    ;54620000
 EM6(STD);         COMMENT STD                                         ;54625000
 EM6(MKS);    COMMENT MKS                                    3/9/64 RES;54628000
 EM10(148);        COMMENT OPDC BINGO                                  ;54630000
 EM6(DUP);    COMMENT DUP                                    3/9/64 RES;54640000
 EM11(10) ;   COMMENT DESC 10  FOR I/O PROC PAST PRT 512      7-26-64;  54642000
 EM6(LOD);    COMMENT LOD                                    3/9/64 RES;54645000
              COMMENT                         REMOVED        3/9/64 RES;54650000
 EM4(151);         COMMENT LITC IPFIDX  ONLY LOWSLCT SUBR FOLLOWS      ;54655000
              COMMENT                         REMOVED        3/9/64 RES;54655200
 EM6(COC);    COMMENT COC  NOW PERFORM OUTPRO LAST TIME      3/9/64 RES;54660000
B6856:   EM2B(83) ;  COMMENT SET RETURN TO CHECK COUNTS                ;54665000
 EM6(BBW) ;   END; COMMENT END OF SYSTEM BLOCK SEVEN                   ;54670000
 COMMENT  LOWSLCT SUBROUTINE  - LOGIC DIAGRAMS AND FLOW                 54675000
                             %THESE FLOW CHARTS ILLUSTRATE THE          54675001
              T = 3                            T = 8                    54685000
                             % BASIC LOGIC USED IN THE DESIGN OF        54685001
          0000  1111           0000  6666  1111  2222  3333  4444  5555 54695000
                             % THE LOWSLCT SUBROUTINE WHICH             54695001
            I    I              I     I     I     I     I     I     I   54700000
                             % IMMEDIATELY FOLLOWS - IT IS              54700001
             I  I                I   I     I       I   I       I   I    54705000
                             % DESIGNED IN SUCH A WAY AS TO REDUCE      54705001
              II                  I I     I         I I         I I     54710000
                             % THE # OF COMPARES OF A SERIES OF         54710001
           LOWXXXX                 I     I           I           I      54715000
                             % RECORDS TO A MINIMUM. IN THE 8           54715001
                                M5XXX8  I         M3XXX4      M4XXX6    54720000
                             % TAPE MERGE,FOR EXAMPLE(SEE T=8           54720001
                                   I   I              I        I        54725000
                             % AT LEFT, A MAXIMUM OF THREE              54725001
                                    I I                I      I         54730000
                             % COMPARES ARE REQUIRED TO                 54730001
                                     I                  I    I          54735000
                             % DETERMINE LOWEST(AFTER INITIAL           54735001
              T = 4               MIXXX2                 I  I% SETUP).  54740000
                                      I                   II            54745000
          0000  1111  2222              I              M2XXXX           54750000
            I    I     I                  I             I               54755000
             I  I     I                     I         I                 54760000
              II     I                        I     I                   54765000
           M1XXX0   I                           I I                     54770000
               I   I                             I                      54775000
                I I                          LOWXXXX                    54780000
                 I                                                      54785000
             LOWXXX2                                                    54790000
                T = 5                            T = 6                  54815000
          0000  1111  2222  3333           0000  1111  2222  3333  4444 54825000
            I    I      I    I               I    I      I    I     I   54830000
             I  I        I  I                 I  I        I  I     I    54835000
              II          II                   II          II     I     54840000
           M1XXX2      M3XXX4               M1XXX2      M3XXX4   I      54845000
               I        I                        I          I   I       54850000
                I      I                          I          I I        54855000
                 I    I                            I          I         54860000
                  I  I                              I      M2XXX6       54865000
                   II                                I     I            54870000
               LOWXXXX                                I   I             54875000
                                                       I I              54880000
                                                        I               54885000
                                                    LOWXXXX             54890000
                    T = 7                                               54900000
                                                     LEGEND             54905000
          0000  1111  2222  3333  4444  5555                            54910000
            I    I      I    I      I    I     1. 0000,ETC = RELATIVE   54915000
             I  I        I  I        I  I           LOCATION IN MPRT    54920000
              II          II          II                                54925000
            M1XXX2      M3XXX4     M4XXX6      2. M5XXX0 = 2 MSD SHOWS  54930000
                I           I       I               LOCATION OF ANSWER  54935000
                  I           I    I                                    54940000
                    I           II                  LSD DIGIT,IF        54945000
                      I      M2XXXX                 PRESENT,INDICATES   54950000
                        I     I                     BRNCH SETTING FOR   54955000
                          I I                       THAT PATH           54960000
                           I                                            54965000
                       LOWXXXX                                          54970000
          T = 3  I T = 4   I T = 5    I T = 6    I T = 7    I T = 8     54975000
                             %THIS LOGIC CHART SHOWS WHICH PORT-        54975001
                 I         I          I          I          I           54980000
                 I         IOFIRST:   IOFIRST:   IOFIRST:   IOFIRST:    54985000
                             % IONS OF THE LOWSLCT SUBR. ARE USED       54985001
                 I         I  M3      I  M3      I  M3      I  M3       54990000
                             % BY THE VARIOUS # OF TAPES. THE           54990001
                 I         I          I          I  M4      I  M4       54995000
                             % LABELS CORRESPOND TO THOSE WITHIN        54995001
                 I         I          I  M2 BR4/6I  M2 BR4/6I  M2 BR4/6 55000000
                             % THE PROGRAM.                             55000001
                 I         I          I          I          I8PTLTM:    55005000
                 I         I          I          I          I  M5       55010000
                 IOPTLFT:  I2PTLFT:   I2PTLFT:   I2PTLFT:   I2PTLFT:    55015000
                 I  M1     I  M1      I  M1      I  M1      I  M1 BA2/8 55020000
                 I         I  GO TO   I  GO TO   I  GO TO   I  GO TO    55025000
                 I         I    FINAL I    FINAL I    FINAL I    FINAL  55030000
                 I         I4PTRTM:   I4PTRTM:   I4PTRTM:   I4PTRTM:    55035000
                 I         I  M3      I  M3      I  M3      I  M3       55040000
                 I         I          I          I  GO T0   I  GO T0    55045000
                 I         I          I          I    MIDRT I    MIDRT  55050000
                 I         I          I          I6PTRT:    I6PTRT:     55055000
                 I         I          I          I  M4      I  M4       55060000
                 I         I          I6MIDRT:   I MIDRT:   I MIDRT:    55065000
                 I         I          I  M2 BR4/6I  M2 BR4/6I  M2 BR4/6 55070000
         FINAL:  I2FINAL:  I FINAL:   I FINAL:   I FINAL:   I FINAL:    55075000
          LOW    I  LOW    I  LOW     I  LOW     I  LOW     I  L0W      55080000
                 I  BR~2/4 I   BR~2/4 I  BR~2 0R I  BR~2 0R I  BR~BA 0R 55085000
                 I         I          I  STAY 4/6I  STAY 4/6I  STAY 4/6 55090000
         LEGEND: NOTE READ CHART FROM TOP TO BOTTOM.FALL THRU UNLESS    55095000
                 SPECIFIC "GO TO" .                                     55100000
         1. PTLTM,ETC = PROGRAM LABELS. DIGIT IN FRONT IS BRNCH SETTING 55105000
              FOR ENTRY TO THAT LABEL                                   55110000
         2. BR = BRNCH   BA = BRNCA     4/6,ETC. = POSSIBLE SETTING    ;55115000
 EM15(NOOP);                                                            55125000
   T10 ~ SEG[0,0];             %START OF LOWSLCT SUBROUTINE.            55130000
    MAKELABEL(0,PARAM[129],I,0); % L-O-W-S-E-L-E-C-T SUBR  COMMENT DF;  55135000
                             % SELECTS LOWEST RECORD FOR MERGE.         55135001
              BEGIN LABEL FIRST, FRST1, PTLTM, PTLFT, PTRTM, PTRT,      55140000
                           MIDRT, FINAL, FINALB, FINL2, FINL3, LEAV1,   55145000
                       FINL4, FINL5 ;                                   55150000
                   COMMENT SYSTEM BLOCK EIGHT ;                         55155000
 IF T = 3 THEN GO TO FINALB                                            ;55160000
                             %IF # OF TAPES EQUAL                       55160001
 EM10(130);        COMMENT OPDC BRNCH                                  ;55165000
 EM6(BFW);         COMMENT BFW                                         ;55170000
 IF T = 4 THEN EM3A(65)  ELSE EM3A(66);COMMENT BRNCH=0,T=4 T/ PTLFT    ;55175000
 EM6(BFW);         COMMENT BFW        T=5,6,7,8 TO GO TO FIRST         ;55180000
 IF T = 4 THEN EM3A(83)  ELSE EM3A(65);COMMENT BRNCH=2 T=4 TO FINAL    ;55185000
 EM6(BFW);         COMMENT BFW        T=5,6,7,8 TO GO TO PTLFT         ;55190000
 IF T = 4 THEN GO TO PTLFT                                             ;55195000
 EM3A(69);         COMMENT            MARK LITC   BRNCH = 4            ;55200000
 EM6(BFW);         COMMENT BFW        T=5,6,7,8 TO GO TO PTRTM         ;55205000
 IF T =5  THEN GO TO FIRST                                             ;55210000
 IF T =6  THEN EM3A(87)  ELSE EM3A(71);COMMENT BRNCH=6 T=6 TO MIDRT    ;55215000
 EM6(BFW);         COMMENT BFW        T=7,8,  TO GO TO PTRT            ;55220000
 IF T = 8  THEN BEGIN                                                   55225000
 EM3A(72);                                                              55230000
 EM6(BFW);         COMMENT BFW        T=8 TO GO TO PTLTM               ;55235000
                END                                                    ;55240000
 FIRST:                                                                 55245000
 EM3B(66);         COMMENT (FIRST)    FIX LITC FOR BFW TO THIS POINT   ;55250000
 EM1(0);           COMMENT LITC 0     WD OF ZEROS FOR ANSWER           ;55255000
 EM6(MKS);         COMMENT MKS                                         ;55260000
                                                                       ;55265000
 IF R[0,4] ! 0 THEN EM1(0);COMMENT    EXTRA WD OF ZEROS IF CHAR        ;55270000
                             %IF NOT BINARY                             55270001
 EM1(2);           COMMENT LITC 2     INDEX                            ;55275000
 EM10(132);        COMMENT OPDC MPRT  MPRT =TABLE OF REL LOC OF I/0 DES;55280000
 EM6(LOD);         COMMENT LOD        DESC FOR MPRT[2]                 ;55285000
 EM1(3);           COMMENT LITC 3     INDEX                            ;55290000
 EM10(132);        COMMENT OPDC MPRT                                   ;55295000
 EM6(LOD);         COMMENT LOD        DESC FOR MPRT[3]                 ;55300000
 EM10(91);         COMMENT OPDC EQLES ENTER { SUBR- ANS IN TOP OF STACK;55305000
                   COMMENT --RETURN-- 1(TRUE)= [2] { [3]               ;55310000
 EM3A(73);         COMMENT            MARK LITC FOR BFW                ;55315000
 EM6(BFC);         COMMENT BFC        IF FALSE                         ;55320000
 EM1(2);           COMMENT LITC 2     INDEX                            ;55325000
 EM3A(74);         COMMENT            MARK LITC FOR BFW                ;55330000
 EM6(BFW);         COMMENT BFW                                         ;55335000
 EM3B(73);         COMMENT            FIX LITC FOR BFW                 ;55340000
 EM1(3);           COMMENT LITC 3     INDEX                            ;55345000
 EM3B(74);         COMMENT            FIX LITC                         ;55350000
 EM10(132);        COMMENT OPDC MPRT                                   ;55355000
 EM4(126);         COMMENT LITC M3                                     ;55360000
 EM6(STD);         COMMENT STD        FALL THRU TO NEXT PART           ;55365000
 IF T = 5 THEN GO TO PTLFT                                             ;55370000
 IF T = 6 THEN GO TO FRST1                                             ;55375000
 EM1(0);           COMMENT LITC 0     WD OF ZEROS FOR ANSWER           ;55380000
 EM6(MKS);         COMMENT MKS                                         ;55385000
 IF R[0,4] ! 0 THEN EM1(0);COMMENT    EXTRA WO OF ZEROS IF CHAR        ;55390000
 EM1(4);           COMMENT LITC 4     INDEX                            ;55395000
 EM10(132);        COMMENT OPDC MPRT                                   ;55400000
 EM6(LOD);         COMMENT LOD        DESC                             ;55405000
 EM1(5);           COMMENT LITC 5     INDEX                            ;55410000
 EM10(132);        COMMENT OPDC MPRT                                   ;55415000
 EM6(LOD);         COMMENT LOD        DESC                             ;55420000
 EM10(91);         COMMENT OPDC EQLES ENTER { SUBR                     ;55425000
                   COMMENT --RETURN   1(TRUE)  [4] { [5]               ;55430000
 EM3A(75);         COMMENT            MARK LITC FOR BFC                ;55435000
 EM6(BFC);         COMMENT BFC        IF FALSE                         ;55440000
 EM1(4);           COMMENT LITC 4     INDEX                            ;55445000
 EM3A(76);         COMMENT            MARK LITC FOR BFW                ;55450000
 EM6(BFW);         COMMENT BFW                                         ;55455000
 EM3B(75);         COMMENT            FIX LITC FOR BFC                 ;55460000
 EM1(5);           COMMENT LITC 5     INDEX                            ;55465000
 EM3B(76);         COMMENT            FIX LITC FOR BFW                 ;55470000
 EM10(132);        COMMENT OPDC MPRT                                   ;55475000
 EM4(127);         COMMENT LITC M4                                     ;55480000
 EM6(STD);         COMMENT STD        FALL THRU TO NEXT PART           ;55485000
   FRST1:                                                               55490000
 EM1(0);           COMMENT LITC 0     WD OF ZEROS FOR ANSWER           ;55495000
 EM6(MKS);         COMMENT MKS                                         ;55500000
 IF R[0,4] ! 0 THEN EM1(0);COMMENT    EXTRA WD IF CHAR                 ;55505000
 EM10(126);        COMMENT OPDC M3    PREV DETERMINED DESC LOC         ;55510000
 EM6(LOD);         COMMENT LOD        DESC                             ;55515000
 IF T = 6 THEN BEGIN                                                    55520000
 EM1(4);           COMMENT LITC 4     INDEX                            ;55525000
 EM10(132);        COMMENT OPDC MPRT                                   ;55530000
               END                                                      55535000
          ELSE                                                          55540000
 EM10(127);        COMMENT OPDC M4    PREV DETERMINED DESC LOC         ;55545000
 EM6(LOD);         COMMENT LOD        DESC                             ;55550000
 EM10(91);         COMMENT OPDC EQLES ENTER { SUBR                     ;55555000
                   COMMENT --RETURN-- 1(TRUE)= M2 { M4 (OR [4])        ;55560000
 EM3A(77);         COMMENT            MARK LITC FOR BFC                ;55565000
 EM6(BFC);         COMMENT BFC        IF FALSE                         ;55570000
 EM10(126);        COMMENT OPDC M3                                     ;55575000
 EM4(125);         COMMENT LITC M2                                     ;55580000
 EM6(STD);         COMMENT STD                                         ;55585000
 EM1(4);           COMMENT LITC 4                                      ;55590000
 EM3A(78);         COMMENT            MARK LITC FOR BFW                ;55595000
 EM6(BFW);         COMMENT BFW                                         ;55600000
 EM3B(77);         COMMENT            FIX LITC FOR BFC                 ;55605000
 IF T = 6 THEN BEGIN                                                    55610000
 EM1(4);           COMMENT LITC 4     INDEX                            ;55615000
 EM10(132);        COMMENT OPDC MPRT                                   ;55620000
               END                                                      55625000
          ELSE                                                          55630000
 EM10(127);        COMMENT OPDC M4                                     ;55635000
 EM4(125);         COMMENT LITC M2                                     ;55640000
 EM6(STD);         COMMENT STD                                         ;55645000
 EM1(6);           COMMENT LITC 6                                      ;55650000
 EM3B(78);         COMMENT            FIX LITC FOR BFW                 ;55655000
 EM4(130);         COMMENT LITC BRNCH                                  ;55660000
 EM6(STD);         COMMENT STD        FALL THRU TO NEXT PART           ;55665000
 IF T = 6 THEN GO TO PTLFT                                             ;55670000
 IF T = 7 THEN GO TO PTLFT                                             ;55675000
 PTLTM:                                                                 55680000
 EM3B(72);         COMMENT            T=8 BRNCH=8                      ;55685000
 EM1(0);           COMMENT LITC 0     WD OF ZEROS FOR ANSWER           ;55690000
 EM6(MKS);         COMMENT MKS                                         ;55695000
 IF R[0,4] ! 0 THEN EM1(0);COMMENT    EXTRA WORD IF CHAR               ;55700000
 EM1(0);           COMMENT LITC 0     INDEX                            ;55705000
 EM10(132);        COMMENT OPDC MPRT                                   ;55710000
 EM6(LOD);         COMMENT LOD        DESC OF MPRT[0]                  ;55715000
 EM1(6);           COMMENT LITC 6     INDEX                            ;55720000
 EM10(132);        COMMENT OPDC MPRT                                   ;55725000
 EM6(LOD);         COMMENT LOD        DESC OF MPRT[0]                  ;55730000
 EM10(91);         COMMENT OPDC EQLES ENTER } SUBR                     ;55735000
                   COMMENT --RETURN-- 1(TRUE)= [0] { [6]               ;55740000
 EM3A(79);         COMMENT            MARK LITC FOR BFC                ;55745000
 EM6(BFC);         COMMENT BFC                                         ;55750000
 EM1(0);           COMMENT LITC 0     INDEX                            ;55755000
 EM3A(80);         COMMENT            MARK LITC FOR BFW                ;55760000
 EM6(BFW);         COMMENT BFW                                         ;55765000
 EM3B(79);         COMMENT            FIX LITC FOR BFC                 ;55770000
 EM1(6);           COMMENT LITC 6     INDEX                            ;55775000
 EM3B(80);         COMMENT            FIX LITC FOR BFW                 ;55780000
 EM10(132);        COMMENT OPDC MPRT                                   ;55785000
 EM4(128);         COMMENT LITC M5                                     ;55790000
 EM6(STD);         COMMENT STD        FALL THRU TO NEXT PART           ;55795000
 PTLFT:                                                                 55800000
 EM3B(65);         COMMENT            T=4 BRNCH=0  FIX LITC FOP BFW    ;55805000
 EM1(0);           COMMENT LITC 0     WD OF ZEROS FOR ANSWER           ;55810000
 EM6(MKS);         COMMENT MKS                                         ;55815000
                                                                       ;55820000
 IF R[0,4] ! 0 THEN EM1(0);COMMENT    EXTRA WD OF ZEROS IF CHAR        ;55825000
 IF T = 8 THEN BEGIN                                                    55830000
 EM10(128);        COMMENT OPDC M5;END                                  55835000
          ELSE BEGIN                                                    55840000
 EM1(0);           COMMENT LITC 0     INDEX                            ;55845000
 EM10(132);        COMMENT OPDC MPRT                                   ;55850000
               END                                                     ;55855000
 EM6(LOD);         COMMENT LOD        DESC FOR MPRT[0] OR M5           ;55860000
 EM1(1);           COMMENT LITC 1     INDEX                            ;55865000
 EM10(132);        COMMENT OPDC MPRT                                   ;55870000
 EM6(LOD);         COMMENT LOD        DESC FOR MPRT[1]                 ;55875000
 EM10(91);         COMMENT OPDC EQLES ENTER { SUBR                     ;55880000
                   COMMENT --RETURN-- 1(TRUE)= [0]OR M5 { [1]          ;55885000
 EM3A(81);         COMMENT            MARK LITC FOR BFC                ;55890000
 EM6(BFC);         COMMENT BFC        IF FALSE                         ;55895000
 IF T = 8 THEN BEGIN                                                    55900000
 EM10(128);        COMMENT OPDC M5; END                                 55905000
          ELSE BEGIN                                                    55910000
 EM1(0);           COMMENT LITC 0     INDEX                            ;55915000
 EM10(132);        COMMENT OPDC MPRT                                   ;55920000
               END                                                     ;55925000
 EM4(124);         COMMENT LITC M1                                     ;55930000
 EM6(STD);         COMMENT STD                                         ;55935000
 IF T =8 THEN  BEGIN                                                    55940000
 EM1(8);           COMMENT LITC 8                                      ;55945000
 EM4(131);         COMMENT LITC BRNCA                                  ;55950000
 EM6(STD);         COMMENT STD                                         ;55955000
               END                                                     ;55960000
 EM3A(82);         COMMENT            MARK LITC                        ;55965000
 EM6(BFW);         COMMENT BFW        TO FINAL                         ;55970000
 EM3B(81);         COMMENT            FIX LITC FOR BFC                 ;55975000
 EM1(1);           COMMENT LITC 1                                      ;55980000
 EM10(132);        COMMENT OPDC MPRT                                   ;55985000
 EM4(124);         COMMENT LITC M1                                     ;55990000
 EM6(STD);         COMMENT STD                                         ;55995000
 IF T = 4 THEN GO TO FINAL;                                             56000000
 IF T = 8 THEN BEGIN                                                   ;56005000
 EM1(2);           COMMENT LITC 2                                      ;56010000
 EM4(131);         COMMENT LITC BRNCA                                  ;56015000
 EM6(STD);         COMMENT STD                                         ;56020000
               END                                                     ;56025000
 EM3A(83);         COMMENT            MARK LITC                        ;56030000
 EM6(BFW);         COMMENT BFW        TO FINAL                         ;56035000
 PTRTM:                                                                 56040000
 EM3B(69);         COMMENT            T=5,6,7,8 BRNCH= 4               ;56045000
 EM1(0);           COMMENT LITC 0     WD OF ZEROS FOR ANSWER           ;56050000
 EM6(MKS);         COMMENT MKS                                         ;56055000
 IF R[0,4] ! 0 THEN EM1(0);COMMENT    EXTRA WD OF ZEROS IF CHAR        ;56060000
 EM1(2);           COMMENT LITC 2     INDEX                            ;56065000
 EM10(132);        COMMENT OPDC MPRT                                   ;56070000
 EM6(LOD);         COMMENT LOD        DESC FOR MPRT[2]                 ;56075000
 EM1(3);           COMMENT LITC 3     INDEX                            ;56080000
 EM10(132);        COMMENT OPDC MPRT                                   ;56085000
 EM6(LOD);         COMMENT LOD        DESC FOR MPRT[3]                 ;56090000
 EM10(91);         COMMENT OPDC EQLES ENTER SUBRTNE                    ;56095000
                   COMMENT --RETURN-- 1(TRUE)= [2] { [3]               ;56100000
 EM3A(84);         COMMENT            MARK LITC                        ;56105000
 EM6(BFC);         COMMENT BFC        IF FALSE                         ;56110000
 EM1(2);           COMMENT LITC 2     INDEX                            ;56115000
 EM10(132);        COMMENT OPDC MPRT                                   ;56120000
 EM4(126);         COMMENT LITC M3                                     ;56125000
 EM6(STD);         COMMENT STD                                         ;56130000
 IF T = 5 THEN EM3A(85)  ELSE EM3A(86);COMMENT  T=5 TO FINAL,ELSE MIDRT;56135000
 EM6(BFW);         COMMENT BFW        T=5 TO FINAL  6,7,8 TO MIDRT     ;56140000
 EM3B(84);         COMMENT            FIX LITC FOR BFC                 ;56145000
 EM1(3);           COMMENT LITC 3                                      ;56150000
 EM10(132);        COMMENT OPDC MPRT                                   ;56155000
 EM4(126);         COMMENT LITC M3                                     ;56160000
 EM6(STD);         COMMENT STD                                         ;56165000
 IF T = 5 THEN BEGIN                                                    56170000
               EM3B(85);  COMMENT FIX LITC      T=5 FALLS  THRU        ;56175000
               GO TO FINAL                                              56180000
               END                                                     ;56185000
 IF T = 6 THEN GO TO MIDRT;COMMENT    T26 FALL THRU                    ;56190000
 EM3A(87);         COMMENT                                             ;56195000
 EM6(BFW);         COMMENT BFW        T=7,8  TO MIDRT                  ;56200000
 PTRT:                                                                  56205000
 EM3B(71);         COMMENT            T=7,8  BRNCH=6                   ;56210000
 EM1(0);           COMMENT LITC 0     WD OF ZEROS FOR ANSWER           ;56215000
 EM6(MKS);         COMMENT MKS                                         ;56220000
 IF R[0,4] ! 0 THEN EM1(0);COMMENT    EXTRA WD OF ZEROS IF CHAR        ;56225000
 EM1(4);           COMMENT LITC 4     INDEX                            ;56230000
 EM10(132);        COMMENT OPDC MPRT                                   ;56235000
 EM6(LOD);         COMMENT LOD        DESC                             ;56240000
 EM1(5);           COMMENT LITC 5     INDEX                            ;56245000
 EM10(132);        COMMENT OPDC MPRT                                   ;56250000
 EM6(LOD);         COMMENT LOD        DESC                             ;56255000
 EM10(91);         COMMENT OPDC EQLES ENTER { SUBR                     ;56260000
                   COMMENT --RETURN-- 1(TRUE)= [4] { [5]               ;56265000
 EM3A(131);        COMMENT           MARK LITC                        ; 56270000
 EM6(BFC);         COMMENT BFC        IF FALSE                         ;56275000
 EM1(4);           COMMENT LITC 4     INDEX                            ;56280000
 EM3A(89);         COMMENT            MARK LITC FOR BFW                ;56285000
 EM6(BFW);         COMMENT BFW                                         ;56290000
 EM3B(131);        COMMENT           FIX LITC FOR BFC                 ; 56295000
 EM1(5);           COMMENT LITC 5                                      ;56300000
 EM3B(89);         COMMENT            FIX LITC FOR BFW                 ;56305000
 EM10(132);        COMMENT OPDC MPRT                                   ;56310000
 EM4(127);         COMMENT LITC M4                                     ;56315000
 EM6(STD);         COMMENT STD        FALL THRU                        ;56320000
 MIDRT:                                                                 56325000
 EM3B(86);         COMMENT            FROM T= 6,7,8                    ;56330000
 EM3B(87);         COMMENT            FROM T= 7,8 OR FROM T=6 BRNCH=6  ;56335000
 EM1(0);           COMMENT LITC 0     WD OF ZEROS FOR ANSWER           ;56340000
 EM6(MKS);         COMMENT MKS                                         ;56345000
 IF R[0,4] ! 0 THEN EM1(0);COMMENT    EXTRA WD IF CHAR                 ;56350000
 EM10(126);        COMMENT OPDC M3    PREV DETERMINED DESC LOC         ;56355000
 EM6(LOD);         COMMENT LOD        DESC                             ;56360000
 IF T = 6 THEN BEGIN                                                    56365000
 EM1(4);           COMMENT LITC 4     INDEX                            ;56370000
 EM10(132);        COMMENT OPDC MPRT                                   ;56375000
               END                                                      56380000
          ELSE                                                          56385000
 EM10(127);        COMMENT OPDC M4    PREV DETERMINED DESC LOC         ;56390000
 EM6(LOD);         COMMENT LOD        DESC                             ;56395000
 EM10(91);         COMMENT OPDC EQLES ENTER { SUBR                     ;56400000
                   COMMENT --RETURN-- 1(TRUE)= M2 { M4(OR [4])         ;56405000
 EM3A(70);         COMMENT            MARK LITC FOR BFC                ;56410000
 EM6(BFC);         COMMENT            IF FALSE                         ;56415000
 EM10(126);        COMMENT OPDC M3                                     ;56420000
 EM4(125);         COMMENT LITC M2                                     ;56425000
 EM6(STD);         COMMENT STD                                         ;56430000
 EM1(4);           COMMENT LITC 4                                      ;56435000
 EM3A(68);         COMMENT            MARK LITC FOR BFC                ;56440000
 EM6(BFC);         COMMENT BFW                                         ;56445000
 EM3B(70);         COMMENT            FIX LITC FOR BFC                 ;56450000
 IF T = 6 THEN BEGIN                                                    56455000
 EM1(4);           COMMENT LITC 4     INDEX                            ;56460000
 EM10(132);        COMMENT OPDC MPRT                                   ;56465000
               END                                                      56470000
          ELSE                                                          56475000
 EM10(127);        COMMENT OPDC M4                                     ;56480000
 EM4(125);         COMMENT LITC M2                                     ;56485000
 EM6(STD);         COMMENT STD                                         ;56490000
 EM1(6);           COMMENT LITC 6                                      ;56495000
 EM3B(68);         COMMENT            FIX LITC FOR BFW                 ;56500000
 EM4(12);          COMMENT LITC BRNCHB                                ; 56505000
 EM6(STD);         COMMENT STD        FALL THRU TO NEXT PART           ;56510000
 FINAL:                                                                 56515000
 EM3B(82);         COMMENT            FIX LITC                         ;56520000
 EM3B(83);         COMMENT            FIX LITC   OR FROM T=4 BRNCH =2  ;56525000
 FINALB:                                                               ;56530000
 EM1(0);           COMMENT LITC 0                                      ;56535000
 EM6(MKS);         COMMENT MKS                                         ;56540000
 IF R[0,4] ! 0 THEN EM1(0);COMMENT    EXTR WD OF ZEROS IF CHAR         ;56545000
 IF T = 3 THEN BEGIN                                                    56550000
 EM1(0);           COMMENT LITC 0     INDEX                            ;56555000
 EM10(132);        COMMENT OPDC MPRT                                   ;56560000
               END                                                      56565000
          ELSE                                                          56570000
 EM10(124);        COMMENT OPDC M1    PREVIOUSLY DETERMINED DESC LOC   ;56575000
 EM6(LOD);         COMMENT LOD        DESC                             ;56580000
 IF T = 6 THEN GO TO FINL2                                             ;56585000
 IF T = 7 THEN GO TO FINL2                                             ;56590000
 IF T = 8 THEN GO TO FINL2                                             ;56595000
 IF T = 3 THEN BEGIN                                                    56600000
 EM1(1);           COMMENT LITC 1                                      ;56605000
 EM10(132);        COMMENT OPDC MPRT                                   ;56610000
    GO TO FINL3                                                         56615000
               END                                                     ;56620000
 IF T = 4 THEN BEGIN                                                    56625000
 EM1(2);           COMMENT LITC 2                                      ;56630000
 EM10(132);        COMMENT OPDC MPRT                                   ;56635000
    GO TO FINL3                                                         56640000
               END                                                      56645000
          ELSE BEGIN                                                    56650000
 EM10(126);        COMMENT OPDC M3    T =5                             ;56655000
    GO TO FINL3                                                         56660000
               END                                                     ;56665000
 FINL2:                                                                 56670000
 EM10(125);        COMMENT OPDC M2                                     ;56675000
 FINL3:                                                                 56680000
 EM6(LOD);         COMMENT LOD                                         ;56685000
 EM10(91);         COMMENT OPDC EQLES ENTER { SUBR                     ;56690000
                   COMMENT --RETURN-- 1(TRUE)= M1 (OR [0]{M2(OR M3 ETC ;56695000
 EM3A(67);         COMMENT            MARK LITC                        ;56700000
 EM6(BFC);         COMMENT BFC                                         ;56705000
 IF T = 3 THEN BEGIN                                                    56710000
 EM1(0);           COMMENT LITC 0     INDEX                            ;56715000
 EM10(132);        COMMENT OPDC MPRT                                   ;56720000
               END                                                      56725000
          ELSE                                                          56730000
 EM10(124);        COMMENT OPDC M1                                     ;56735000
 EM4(81);          COMMENT LITC LOW                                    ;56740000
 EM6(STD);         COMMENT STD                                         ;56745000
 IF T = 3 THEN GO TO LEAV1                                             ;56750000
 IF T = 4 THEN EM1(0) ELSE BEGIN                                        56755000
 IF T = 8 THEN EM10(131) ELSE EM1(2);COMMENT BRNCH ~ 2 (IF T=8 BR~BRNCA;56760000
   END ;                                                                56765000
 EM4(130);         COMMENT LITC BRNCH                                  ;56770000
 EM6(STD);         COMMENT STD                                         ;56775000
 LEAV1:                                                                 56780000
 EM6(XIT);         COMMENT XIT                                         ;56785000
 EM3B(67);         COMMENT            FIX LITC FOR BFC                 ;56790000
IF T=6 OR T=7 OR T=8 THEN                                               56795000
BEGIN EM10(12);   EM4(130);   EM6(STD);   GO TO FINL4;                  56800000
END;                                                                    56805000
 IF T = 3 THEN BEGIN                                                    56810000
 EM1(1);           COMMENT LITC 1                                      ;56815000
 EM10(132);        COMMENT OPDC MPRT                                   ;56820000
    GO TO FINL5                                                         56825000
               END                                                     ;56830000
 IF T = 4 THEN BEGIN                                                    56835000
 EM1(2);           COMMENT LITC 2                                      ;56840000
 EM10(132);        COMMENT OPDC MPRT                                   ;56845000
    GO TO FINL5                                                         56850000
               END                                                      56855000
          ELSE                                                          56860000
               BEGIN                                                    56865000
 EM10(126);        COMMENT OPDC M3    T= 5                             ;56870000
    GO TO FINL5                                                         56875000
               END                                                     ;56880000
 FINL4:                                                                 56885000
 EM10(125);        COMMENT OPDC M2                                     ;56890000
 FINL5:                                                                 56895000
 EM4(81);          COMMENT LITC LOW                                    ;56900000
 EM6(STD);         COMMENT STD                                         ;56905000
              END; COMMENT O END OF SYSTEM BLOCK EIGHT ----------------;56910000
 IF T = 3 THEN GO TO LEAV2;                                             56915000
 IF T = 6 THEN GO TO LEAV2;                                             56920000
 IF T = 7 THEN GO TO LEAV2;                                             56925000
 IF T = 8 THEN GO TO LEAV2;                                             56930000
 IF T = 5 THEN EM1(4) ELSE EM1(2);COMMENT BRNCH ~2 IF T =4--OTHERS OKAY;56935000
 EM4(130);         COMMENT LITC BRNCH                                  ;56940000
 EM6(STD);         COMMENT STD                                         ;56945000
 LEAV2:                                                                 56950000
 EM6(XIT);         COMMENT XIT                                         ;56955000
 LGA:                                                     COMMENT DSRT; 56955010
     EM3B( 88 ) ;  COMMENT JUMP HERE FOR FINAL EXIT FROM SORT SUBRTN;   56955100
                   IF CREG ! 8 OR NOT  LABLF THEN                       56955600
              BEGIN MSG [124].[1:5] ~2 ;                                56955700
                    MSG [124].[6:12]~IF  LABLF THEN 1 ELSE 196;% 1 OR 3456955800
                    ERP1 (77,90,57,124);%SORT STATMENT 34 OR 1          56955900
              END;                                                      56956500
      CREG ~ ( I | 8 ) + ( 2 | SYLL) +8;                                56960000
                              COMMENT LEAVE SEGDUMP  FOR JEFF ;         56965000
                   GENFINI :                                            56970000
              END; COMMENT END OF THE SORT GENERATOR;                   56975000
COMMENT *************************   PERFORM **************************; 56975500
PROCEDURE PERFORM;                                                      56980000
              BEGIN                                                     56985000
    BOOLEAN VARY1, VARY2, AFTER1;                                       56990000
    INTEGER S1,WS1,WS3,X,J,K,VOCUR,VSCALE,VUSG,                %CJC 032 56995000
            XQX,XRX,TOX,SS1,LASTINC;                           %CJC 032 56996000
    LABEL Z16,Z33,XET,P1;                                 COMMENT 6-17; 56996500
LABEL P2,DC;                                                            56996600
LABEL    ZIPPOST, P4;                                          %TR 939  56997000
COMMENT                                                                 57000000
------------------------------------------------------------------------57000300
  1 PERFORM     X TIMES                   UNTIL CONDITION               57000700
  OPTION 1      OPTION 2                  OPTION 3                      57001000
  -------------------------------------------------------               57001300
  LITC 0            LITC B+                  LITC B+                    57001700
  BFW               BFW                      BFW                        57002000
  PERF.CODE      A+ PERF.CODE             A+ PERF.CODE                  57002300
                    LITC 1                B+ CONDITION                  57002700
                    BFW                      LITC A+                    57003000
                B+ LITC 0 INITIALIZE         BBC                        57003300
                    LITC 1 INCREMENT                                    57003700
                    ADD     INCREMENT                                   57004000
                    DUP     SAVE                                        57004300
                    GET X VALUE                                         57004700
                    GTR     TEST                                        57005000
                    LITC A+                                             57005300
                    BBC                                                 57005700
                   DEL       GET OUT                              8-7   57006000
------------------------------------------------------------------------57006300
  VARYING A FROM B BY C    VARYING A FROM B BY C UNTIL C1               57006700
  UNTIL CONDITION.         AFTER D FROM E BY F UNTIL C2...              57007000
  OPTION 4                 OPTION 5                                     57007300
  -------------------------------------------------------               57007700
     LITC B+                 LITC B+                                    57008000
     BFW                     BFW                                        57008300
  A+ PERF.CODE             A+ PERF.CODE                                 57008700
     LITC C+                 LITC C+                                    57008800
     BFW                     BFW                                        57008900
  B+ GET B VALUE           B+ GET B VALUE ("FROM" INITIALIZATION)       57009000
     LITC D+                 LITC D+                                    57009100
     BFW                     BFW                                        57009200
  C+ GET A VALUE           C+ GET A VALUE ("TO") INCREMENT)             57009300
     GET C VALUE             GET C VALUE                                57009400
     ADD                     ADD                                        57009500
  D+ STORE INTO A          D+ STORE INTO A (USED BY BOTH "FROM" & "TO") 57009600
     CONDITION               C1                                         57009700
     LITC A+                 LITC 2                                     57009800
     BBC                     BFC                                        57009830
                             LITC F+ (C1 TRUE, GET OUT)                 57009840
                             BFW                                        57009850
                             GET E VALUE                                57009860
                             LITC E+                                    57009870
                             BFW                                        57009880
                             GET D VALUE                                57009890
                             GET F VALUE                                57009900
                             ADD                                        57009910
                           E+ STORE INTO D                              57009920
                             C2                                         57009930
                             LITC A+ (C2 FALSE, DO PERFORM)             57009940
                             BBC                                        57009950
                             LITC C+ (C2 TRUE,GO TO PREVIOUS INCREMENT) 57009960
                             BBW                                        57009970
                           F+                                           57009980
-----------------------------------------------------------------------;57009990
                   VARY2~FALSE; AFTER1~FALSE; VARY1~FALSE;              57010000
                   DN; IF KEY=451 THEN COMMENT IF ( THEN ZIP FUNCTN 8-4;57015000
                             %IF PERFORM (ZIP) THEN                     57015001
ZIPPOST:      BEGIN DN;                                        %TR 939  57015100
                   IF DCOM THEN                                     %TSS57015110
              BEGIN DC: FILL LBUF [*] WITH "PTHIS PE","RFORM OP",   %TSS57015120
                                "TION DEL","EATED FR","OM TSS.~";   %TSS57015130
                        WORDTRAN (LBUF[0],MSG[124],5);              %TSS57015140
                        ERP1(124,0,0,0);                            %TSS57015150
                        GO TO XET;                                  %TSS57015160
              END;                                                  %TSS57015170
                   IF CNR ! 0 THEN                        COMMENT 8-4;  57015200
              BEGIN CNR~0; CNQ~CNQ +1;                    COMMENT 8-4;  57015300
              END;                                        COMMENT 8-4;  57015400
                   CLRCHR(CNP[CNQ.[38:3],CNQ.[41:7]],1,7);              57015450
                             %SET UP TO PASS LIBRARY & PROGRAM ID       57015451
                   CHRTRAN(ISYMB,4,CNP[CNQ.[38:3],%TO MCP.              57015500
                   CNQ.[41:7]],1,LGTH);                   COMMENT 8-4;  57015600
                   J~CNQ-1;  CNQ~CNQ+1;                   COMMENT 8-4;  57015800
                   CLRCHR(CNP[CNQ.[38:3],CNQ.[41:7]],1,7);COMMENT 8-4;  57015950
                   DN; CHRTRAN(ISYMB,4,CNP[CNQ.[38:3],    COMMENT 8-4;  57016000
                   CNQ.[41:7]],1,LGTH);                   COMMENT 8-4;  57016100
                   CNQ~CNQ+1;                             COMMENT 8-4;  57016200
                   DN; IF KEY!456 THEN COMMENT MISSING RGT PAREN  8-4;  57016300
              BEGIN ERP(9 & 6[32:40:8] & 3[24:40:8],0);   COMMENT 8-4;  57016400
                   COMPE~TRUE;                            COMMENT 8-4;  57016500
              END;                                        COMMENT 8-4;  57016600
                   DN;                                    COMMENT 8-4;  57016650
                   EMIL(LITC,J);       EMIL(DESC,CNPL);   COMMENT 8-4;  57016800
                   EMIL(LITC,J+1);     EMIL(DESC,CNPL);   COMMENT 8-4;  57017000
                   IF AFTER1 THEN EMIL(LITC,37) ELSE           %TR 939  57017100
                   EMIL(LITC,8);  EMIL(OPR,COM);           COMMENT DF;  57017200
                   EMIL(OPR,DEL); EMIL(OPR,DEL);          COMMENT 8-14; 57017400
                   GO TO XET;                             COMMENT 8-4;  57017500
              END;                                        COMMENT 8-4;  57017600
                   IF KEY=290 THEN COMMENT GENERALIZE ZIP WITH   DF-DC; 57017700
              BEGIN DN;  IF TYPE ! 7 THEN GO TO P4;      COMMENT DF-DC; 57017800
                        IF DCOM THEN GO TO DC;                      %TSS57017850
                   EMIL(LITC,PX);  EMIL(OPR,LOD);        COMMENT DF-DC; 57017900
                   EMIL(LITC,4);                         COMMENT DF-DC; 57018000
                   EMIL(OPR,COM);  EMIL(OPR,DEL);        COMMENT DF-DC; 57018100
                   DN;  GO TO XET;                       COMMENT DF-DC; 57018200
              END;                                       COMMENT DF-DC; 57018300
                   IF KEY = 506 THEN  % "AFTER"                %TR 939  57018400
              BEGIN DN;   AFTER1 ~ TRUE;                       %TR 939  57018500
                   IF KEY = 512 THEN DN;  IF KEY ! 451 THEN    %TR 939  57018600
              BEGIN SYOUT(MSG[124],ISYMB,LGTH);ERP1(9,3,124,0);%TR 939  57018700
              END  ELSE GO TO ZIPPOST;                         %TR 939  57018800
              END;  %PERFORM AFTER <END> ("XXX","YYY")         %TR 939  57018900
                   A1~16387; GETIT;                       COMMENT 8-4;  57019500
                   IF GETOUT THEN GO TO XET;                            57020000
                             %IF LABEL IN ERROR THEN EXIT.              57020001
                   X~A1; IF KEY=261 THEN                  COMMENT 10-9; 57020500
              BEGIN DN; A1~16387; GETIT;                  COMMENT 10-9; 57021000
                   IF GETOUT THEN GO TO XET;              COMMENT 10-9; 57021500
              END;                                        COMMENT 10-9; 57021700
                   SS1 ~ CREG;                            COMMENT 3-19; 57022000
                   IF TYPE=8 OR SCLAS=6 OR KEY=555 OR KEY COMMENT 10-9; 57023000
                   =561 THEN                              COMMENT 10-9; 57025000
              BEGIN EMIL(LITC,0); EMIL(OPR,BFW);          COMMENT 10-9; 57030000
              END;                                        COMMENT 10-9; 57032000
                   S1 ~ CREG;                                           57035000
         COMMENT LITC FX[A1];                                           57040000
                   JCV(X,J,K);                            COMMENT 10-9; 57045000
                   EMIL(OPR,MKS);                         COMMENT 3-19; 57047000
                   EMIL(LITC,X~DICT[J,K+1].[8:10]);%                    57065000
                   EMIL(OPR,DUP);                         COMMENT 9-02; 57067000
                   IF X>511 THEN EMIL(OPR,XRT);           COMMENT 1-8-5;57070000
                   EMIL(OPR,LOD);                         COMMENT 9-02; 57073000
                   JCV(A1,J,K);                           COMMENT 3-19; 57103000
                   IF DICT[J,K].[7:1]=0 THEN%IF BACKWARD REFERENCE.     57105000
              BEGIN IF DICT[J,K+1].[4:1]=0 THEN%IF NOT SECTION.         57107000
              BEGIN                                       COMMENT N-09; 57110000
                   EMIL(LITC,X~DICT[J,K+1].[8:10]);       COMMENT 9-02; 57112000
                   GO TO P2;                              COMMENT 9-02; 57115000
              END;                                        COMMENT 9-02; 57117000
                   IF X~OSNAM(A1)!0 THEN                  COMMENT 9-02; 57118000
              BEGIN EMIL(LITC,X); GO TO P2;                             57120000
                             %TERMINAL LABEL PRT OF PERFORM RANGE.      57120001
              END;                                        COMMENT 9-02; 57122000
              END;             %                                        57125000
                   EMIL(LITC,DICT[J,K].[8:10]);           COMMENT N-09; 57126000
                   EMIL(OPDC,OFOLT);                      COMMENT N-09; 57127000
P2:                EMIL(OPR,COC);%START TIMES OPTION******************  57135000
                   IF SCLAS=5 OR (OTYP(OCUR)=8 AND SCALE!0) THEN        57136000
                             %IF TIMES OPTION & OPERAND SCALE ! 0.      57136001
         COMMENT OPERAND X NOT INTEGER;                                 57136500
              BEGIN  SYOUT(MSG[124],ISYMB,LGTH); ERP1(22,124,19,54);    57137000
                   GO TO XET;                                           57138000
              END;                                                      57139000
                               %IF ELEMENTARY ITEM.                     57140000
                                                     COMMENT 2-4 1330;  57145000
                                                     COMMENT 2-4 1330;  57200000
                                                     COMMENT 2-4 1330;  57205000
                                                     COMMENT 2-4 1330;  57210000
                                                     COMMENT 2-4 1330;  57215000
                                                     COMMENT 2-4 1330;  57220000
                   IF TYPE=8 OR SCLAS=6 THEN                            57235500
                             %IF ELEMENTARY ITEM OR INTEGER             57235501
              BEGIN                                                     57235600
Z33:                                                                    57240000
                   IF SIZE > 11 THEN                                    57245000
              BEGIN                                                     57255000
         COMMENT ILLEGAL SIZE OPERAND X;                                57260000
                   SYOUT(MSG[124],ISYMB,LGTH); ERP1(40,15,22,124);      57265000
                   GO TO XET;                                           57270000
              END;                                                      57275000
                   EMIL (LITC,1)     ;                                  57295000
                   EMIL(OPR,BFW)     ;                                  57300000
                   EMIT(LITC,(CREG-SS1-4) DIV 2,SS1);     COMMENT 3-19; 57302000
                   EMIL (LITC,0)     ;                                  57305000
                   EMIL (LITC,1)     ;                                  57310000
                   EMIL(OPR,ADD)     ;                                  57315000
                   EMIL(OPR,DUP)     ;                                  57320000
                   IF SCLAS!6 THEN                        COMMENT 12-1; 57325000
                   VALU (OCUR,SEG,T1,SUBS,1)   ELSE       COMMENT 12-1; 57326000
              BEGIN                                                     57330000
                   A1 ~ ICV1(ISYMB[0],4,0,LGTH);                        57335000
                             %CONVERT INTEGER TO CMP.                   57335001
                   IF A1 > 1023 THEN                                    57340000
              BEGIN                                                     57345000
                   IF CNR ! 0 THEN                                      57350000
              BEGIN                                                     57355000
                   CNR ~ 0;    %WORD JUSTIFY CONSTANT POOL.             57360000
                   CNQ ~ CNQ+1                                          57365000
              END;                                                      57370000
                   CNP[CNQ.[38:3],CNQ.[41:7]] ~ A1;                     57375000
                             %ENTER INTEGER INTO CONSTANT POOL.         57375001
                   EMIL(LITC,CNQ-1);                                    57380000
                   EMIL(OPDC,CNPL);                                     57385000
                   CNQ ~ CNQ+1                                          57390000
              END ELSE EMIL(LITC,A1);                                   57395000
                   DN;                                                  57400000
              END ;                                                     57405000
                   EMIL(OPR,GRT)     ;%TEST FOR RANGE OF "X TIMES".     57410000
                   EMIL(LITC,(CREG-S1+4) DIV 2);%GO TO PERFORM CODE.    57420000
                   EMIL(OPR,BBC)     ;                                  57425000
                   EMIL(OPR,DEL);                         COMMENT 8-7;  57430000
                   IF KEY!554 THEN GO TO P1; DN;%"TIMES"                57435000
                   GO TO XET;                             COMMENT 6-17; 57436000
              END;             %END OF TIMES OPTION*****************    57443000
                   IF KEY=555 THEN                                      57450000
              BEGIN            %CONDITION ROUTINE PROCESSES ENTIRE      57455000
                   EMIT(LITC,(CREG-SS1-4) DIV 2,SS1);                   57470000
                             %TO BRANCH AROUND PERFORM CODE.            57470001
                   DN; CONDITION;                         COMMENT 6-23; 57472000
                   EMIL(LITC,(CREG-S1+4)DIV 2)     ;                    57475000
                             %GO TO PERFORM CODE.                       57475001
                   EMIL(OPR,BBC)     ;                                  57480000
                   GO TO XET                                            57485000
              END;             %END OF UNTIL OPTION$$$$$$$$$$$$$$$$$    57490000
                   IF KEY ! 561 THEN GO TO XET;                         57500000
                   VARY1~TRUE; %MARKS FIRST TIME THRU.                  57540000
                   LASTINC ~ CREG; EMIL(LITC,0);          COMMENT 3-19; 57555000
                   EMIL(OPR,BFW)     ;                                  57560000
                   EMIT(LITC,(CREG-SS1-4) DIV 2,SS1);     COMMENT 3-19; 57562000
Z16:                           %ALL "AFTERS" BRANCH TO THIS POINT &     57565000
                   DN;         % USE SAME PATH AS "VARYING".            57570000
                   IF SIZE>11 THEN                                      57572000
         COMMENT ILLEGAL SIZE OPERAND X;                                57573000
              BEGIN  SYOUT(MSG[124],ISYMB,LGTH); ERP1(40,15,22,124);    57575000
                   GO TO XET;                                           57577000
              END;                                                      57579000
                   IF CNSTFLG OR NOT OELEF(OCUR)          COMMENT 2-02; 57580000
                   OR OCLAS(OCUR)!3 THEN                  COMMENT 2-02; 57582000
P4:           BEGIN                                      COMMENT DF-DC; 57585000
         COMMENT ILLEGAL OPERAND X;                                     57586000
                   SYOUT(MSG[124],ISYMB,LGTH);ERP1(40,22,124,0);        57590000
                   GO TO XET                                            57595000
              END;                                                      57600000
                   VOCUR~OCUR;                                          57610000
                   VUSG~USAGE;                                          57615000
                   VSCALE~SCALE;                                        57625000
                   IF SUBS=0 THEN                                       57660000
              BEGIN                                                     57665000
                   XQX~0; XRX~0;                                        57667000
                   K~0;        %ITEM IS SIMPLE.                         57670000
                   DN;                                                  57675000
              END                                                       57680000
                   ELSE                                                 57685000
              BEGIN                                                     57690000
                   HQX~QAL; HRX~RAL;%ITEM IS SUBSCRIPTED.               57695000
                   XQX~QAL; XRX~RAL;                                    57700000
                   J~CREG;     %SAVE BEGINING ADDRESS SUBSCRIPT CODE    57705000
                   SUBLST;                                              57710000
                   K~CREG-J;   %SAVE LENGTH OF SUBSCRIPT CODE.          57720000
                   IF VUSG = 0 THEN EMIL(OPR,DEL);                      57725000
                             %CLOBBER RX IF DISPLAY.                    57725001
                   EMIL(OPR,DEL);%CLOBBER QX.                           57730000
              END;                                                      57740000
                   IF KEY!335 THEN                                      57750000
              BEGIN                                                     57750500
         COMMENT FROM MISSING PE RFORM STATEMENT;                       57750700
                   ERP1(134,9,52,57);                     COMMENT 6-17; 57751000
              END;                                                      57752000
                   DN;         %FORMULA ROUTINE BRINGS "FROM" OPER-     57755000
                   FORMULA;    % AND TO TOP OF STACK.                   57760000
                   X~ABS(VSCALE-RSCALE);                                57765000
                   IF X!0 THEN %"FROM" OPERAND NEEDS SCALING.           57770000
              BEGIN                                                     57775000
                   IF X>3 THEN                                          57785000
              BEGIN  EMIL(LITC,X); EMIL(OPDC,TENX);                     57790000
              END ELSE EMIL(LITC,POWR[X]);%SHIFT LEFT.                  57795000
                                                     COMMENT 2-3 1200;  57800000
                   EMIL(OPR,IF VSCALE>RSCALE   THEN MUL ELSE IDV);      57810000
              END;                                                      57845000
                   IF VARY2 THEN WS1~WS3                                57850000
                             %WS1 CONTAINS PREVIOUS INCREMENT ADR.      57850001
                   ELSE                                                 57855000
              BEGIN                                                     57860000
                   VARY2~TRUE;                                          57865000
                   WS1~CREG;                                            57870000
              END;                                                      57875000
                   WS3~CREG;   %WS3 CONTAINS PRESENT INCREMENT ADR.     57880000
                   EMIL(LITC,0);                          COMMENT 3-19; 57885000
                   EMIL(OPR,BFW)     ;                                  57890000
                   IF KEY!507 THEN                                      57900000
         COMMENT SYNTAX ERROR PERFORM STATEMENT;          COMMENT 6-17; 57905000
              BEGIN                                                     57915000
P1:                ERP1(77,52,57,0); GO TO XET;           COMMENT 6-17; 57917000
              END;                                                      57930000
                   DN;         %FORMULA ROUTINE BRINGS "BY" OPERAND     57935000
                   FORMULA;    % TO TOP OF STACK.                       57940000
                   X~ABS(VSCALE-RSCALE);                                57945000
                   IF X!0 THEN %"BY" OPERAND NEEDS SCALING.             57950000
              BEGIN                                                     57955000
                   IF X>3 THEN                                          57965000
              BEGIN  EMIL(LITC,X); EMIL(OPDC,TENX);                     57970000
              END ELSE EMIL(LITC,POWR[X]);%SHIFT LEFT.                  57975000
                                                     COMMENT 2-3 1200;  57980000
                   EMIL(OPR,IF VSCALE>RSCALE   THEN MUL ELSE IDV);      57990000
              END;                                                      58025000
                   VALU(VOCUR,SEG,J,K,0);                               58030000
                             %BRING "VARYING" OPERAND TO STACK TOP      58030001
                   EMIL(OPR,ADD)     ;                                  58040000
                             %ADD "BY" OPERAND TO "VARY" OPERAND.       58040001
                   X~WS3;                                               58045000
                   EMIT(LITC,(CREG-X-4) DIV 2,X);                       58050000
                             %FIXUP INITIALIZATION BRANCH TO STORE      58050001
                   IF VUSG!0 AND OSGN(VOCUR)=0 THEN EMIL(OPR,SSP);      58055000
                             %IF CMP AND UNSIGNED.                      58055001
                   ACC ~ TRUE; ESTORE(0,VOCUR,XQX,XRX);                 58060000
                             %STORE ROUTINE GENERATES CODE TO TAKE      58060001
                             % ITEM FROM TOP OF STACK & STORE IT.       58060002
                   IF KEY!555 THEN GO TO P1;              COMMENT 6-17; 58165000
                   DN;                                                  58170000
                   CONDITION;  %CONDITION ROUTINE PROCESSES ENTIRE      58175000
                             % "UNTIL" STATEMENT.                       58175001
                   IF KEY = 506 THEN                                    58185000
              BEGIN                                                     58190000
                   AFTER1 ~ TRUE;                                       58195000
                   EMIL (LITC,2)     ;                                  58200000
                   EMIL(OPR,BFC)     ;                                  58205000
                   IF VARY1 THEN                                        58210000
              BEGIN                                                     58215000
                   VARY1 ~ FALSE;%THIS CODE EMITTED ONLY ON "VARYING".  58220000
                   TOX ~ CREG;                                          58225000
                   CREG~CREG+2;                                         58230000
                   EMIL(OPR,BFW)     ;                                  58235000
              END                                                       58240000
                   ELSE                                                 58245000
              BEGIN                                                     58250000
                   EMIL(LITC,(CREG-WS1)DIV 2)     ;                     58255000
                             %BRANCH TO PREVIOUS INCREMENT.             58255001
                   EMIL(OPR,BBW)     ;                                  58260000
              END;                                                      58265000
                   GO TO Z16   %LOOP TO EMIT CODE FOR NEXT AFTER.       58270000
              END;                                                      58275000
                   EMIL(LITC,(CREG-S1+4)DIV 2)     ;                    58280000
                             %BRANCH TO PERFORM CODE. THERE ARE NO      58280001
                   EMIL(OPR,BBC)     ;% MORE AFTERS.                    58285000
                   IF AFTER1 THEN                                       58290000
              BEGIN            %THERE HAS BEEN AT LEAST ONE AFTER.      58295000
                   EMIL(LITC,(CREG-WS1) DIV 2);                         58300000
                   WS1~WS1-2; EMIL(OPR,BBW);                            58305000
                   EMIT(LITC,(CREG-TOX-4)DIV 2,TOX );                   58310000
                             %FIXUP UP BRANCH FOR FIRST "UNTIL".        58310001
              END;                                                      58315000
                   EMIT(LITC,(WS3-LASTINC) DIV 2,LASTINC);%             58325000
XET:                                                                    58330000
              END;                                                      58335000
COMMENT *************************     EOJ   **************************; 58335500
 PROCEDURE EOJ;                %END-OF-JOB PROCEDURE TO DO THE HOUSE    58340000
                             %    KEEPING AT THE END OF PROCEDURE       58340001
                             %    DIVISION.                             58340002
                             %    IT STORES THE CURRENT PARAGRAPH       58340003
                             %    INTO THE TERMINAL PARA OF THE         58340004
                             %    CURRENT SECTION, CHECK FOR A          58340005
                             %    STOP RUN STATEMENT, DUMPS THE         58340006
                             %    CODE FOR THE LAST PARA, SETS UP       58340007
                             %    FILLS FOR FOLLOWER TABLE AND          58340008
                             %    SYMBOL ARRAY AND CHECKS FOR UN-       58340009
                             %    DEFINED LABELS.                       58340010
              BEGIN LABEL EDE;EDE:                        COMMENT 8-27; 58345000
         COMMENT   STORE CPAR INTO TERMINAL PARAGRAPH OF CSEC;          58350000
                   IF CSEC ! 0 THEN%IF THERE WERE SECTIONS, STORE THE   58355000
              BEGIN JCV(CSEC,J,K);%    CURRENT PARA INTO THE TERMINAL   58360000
                   IF DICT[J,K].[8:10]!0 THEN                           58365000
                             %    PARA FIELD OF THE FOLLOWER TABLE      58365001
              BEGIN JCV(CPAR+1,T1,T2);                    COMMENT 9-19; 58367000
                   T5~DICT[T1,T2].[8:10];                               58370000
                             %    ENTRY FOR THE CURRENT SECTION.        58370001
                   T6 ~ DICT[J,K].[8:10];                               58380000
                   FLTBL[T6.[38:3],T6.[41:7]]~T5;         COMMENT N-09; 58385000
              END;                                                      58390000
              END;                                        COMMENT 9-02; 58392000
         COMMENT   CHECK FOR PROGRAM STOP RUN;                          58395000
                   IF NOT SRFLG THEN                                    58400000
                             %IF THE PROGRAM HAD NO STOP RUN STATE      58400001
         COMMENT MISSING STOP RUN STATEMENT;              COMMENT 9-19; 58402000
              BEGIN            %    MENT, PRINT ERROR MESSAGE--MISS-    58405000
                   ERP(9&105[32:40:8]&57[24:40:8],0);                   58410000
                             %    ING STOP RUN STATEMENT.               58410001
                   COMPE~TRUE;                            COMMENT 9-19; 58415000
              END;                                                      58420000
                   IF DECF THEN                           COMMENT 1-65; 58421000
         COMMENT ILLEGAL PROCEDURE DIVISION;              COMMENT 1-65; 58421500
              BEGIN COMPE~TRUE;                           COMMENT 1-65; 58422000
                   ERP(40&29[32:40:8]&73[24:40:8],0);     COMMENT 1-65; 58422500
         COMMENT END DEC MISSING;                         COMMENT 1-65; 58423000
                   ERP(9,"END DEC");                      COMMENT 1-65; 58423500
              END;                                        COMMENT 1-65; 58423700
         COMMENT   DUMP CODE FOR LAST PARAGRAPH;                        58425000
                   EMIL(OPR,XIT)     ;                                  58430000
                   SEGDUMP (SEG,CREG);%DUMP CODE FROM THE LAST PARA     58435000
         COMMENT   DUMP FLTBL AND SET UP AS A FILL;                     58465000
                   IF FX>1 THEN%                                        58470000
              BEGIN                                       COMMENT 9-02; 58472000
                   FOR X ~ 0 STEP 1 UNTIL FX DO                         58500000
                   SEG[(X+1).[38:3],(X+1).[41:7]] ~                     58505000
                             FLTBL[X.[38:3],X.[41:7]];                  58505500
              T8 ~ FX + 1;%                                         7-6758510000
                   T1 ~ OFOLT; % T1 BECOMES PRT LOCN       COMMENT DF;  58511000
                   DUMPCONST(SEG,T1,T8,0);    % FOLLOWR TABCOMMENT DF;  58512000
                   PRTCTR ~PRTCTR - 1; % DUMPCONST DID UPITCOMMENT DF;  58515000
              END;                                        COMMENT 9-02; 58555000
                   IMIL(LITC,INLGTH)      ;                             58560000
                   IMIL(LITC,INDEX)      ;                              58570000
                   IMIL(OPR,STD)      ;                                 58575000
         COMMENT   DUMP SMB AND SET UP AS A FILL;                       58580000
                   IF SMBX ! 1 THEN                                     58585000
              BEGIN                                                     58590000
COMMENT OPEN TWO DIM ARRAY SMBL;                                        58595000
                   T7 ~ SMBX.[35:5]; T6 ~ SMBX.[40:8];                  58600000
                   IF T7 = 0 THEN T1 ~ SMBX.[40:8] ELSE T1 ~ 255;       58600500
                   T8 ~ T7 + 1;                                         58605000
                   IMIL(OPR,MKS);          IMIL(DESC,SMBL);             58610000
                             %EMIT CODE TO OPEN A 2-D ARRAY FOR         58610001
                   IMIL(LITC,T8);          IMIL(LITC,T1);               58615000
                             %    SYMBOL ARRAY USED BY ACCEPT,          58615001
                   IMIL(LITC,2 );          IMIL(LITC, 1);               58620000
                             %    DISPLAY AND MONITOR.                  58620001
                   IMIL(LITC,0);   IMIL(OPDC,5);%OPEN ARRAYCOMMENT DF;  58625000
                   FOR X ~ 0 STEP 1 UNTIL T7 DO                         58635000
                             %MOVE CONTENTS OF SYMBOL ARRAY TO          58635001
              BEGIN            %    OUTPUT AREA AND DUMP ON TAPE.       58640000
                   WORDTRAN(SMB[X,  0],SEG[0,1 ],63);                   58670000
                   WORDTRAN(SMB[X,63 ],SEG[0,64],63);                   58675000
                   WORDTRAN(SMB[X,126],SEG[0,127],1);                   58680000
                   WORDTRAN(SMB[X,127],SEG[1,0 ],63);                   58685000
                   WORDTRAN(SMB[X,190],SEG[1,63],63);                   58690000
                   WORDTRAN(SMB[X,253],SEG[2,0 ],2 );                   58695000
                   IF X = T7 THEN LGTH ~ (T6+2)|8 ELSE LGTH ~ 257|8;    58700000
                   ENTSEG(SEG,LGTH); %"FILL"ENTRY FOR SEGDICOMMENT DF;  58702000
                     IMIL (LITC,X);%EMIT CODE TO SET UP SYMBOL ARRAY AS 58710000
                     IMIL (DESC,SMBL);%    AN OBJECT TIME FILL.         58715000
                   IMIL (OPR,LOD)      ;                                58720000
                   IMIL(LITC,SDX-1);                       COMMENT DF;  58725000
                   IMIL(LITC,7)      ;                                  58735000
                   IMIL(OPR,COM)      ;                                 58740000
                   IMIL(OPR,DEL); IMIL(OPR,DEL);          COMMENT 8-7;  58745000
                   SEGDUMP(SEG,LGTH);                      COMMENT DF;  58746000
              END                                                       58750000
              END;                                                      58755000
                   IF PSD ! 0 AND PSDX ! 0 THEN                %CJC 073 58759000
                   OPNAR(0,PSD,PSDX);                          %CJC 073 58760000
                             %IF MONITOR OR DUMP IS USED, CODE IS       58760001
                             %    EMITTED TO OPEN AN OBJECT TIME        58760002
                             %    ARRAY.                                58760003
         COMMENT   CHECK DR FOR UNDEFINED LABELS;                       58765000
                   FOR X ~ 0 STEP 1 UNTIL 31 DO                         58770000
                             %IF DR[X] IS NON-ZERO, A LABEL HAS         58770001
             BEGIN FOR A ~ 0 STEP 1 UNTIL 31 DO                         58775000
                             %    BEEN USED THAT DID NOT APPEAR         58775001
             BEGIN IF DR[X,A] ! 0 THEN%    AS AN EXPLICIT LABEL.        58780000
              BEGIN            %    IF THE LABEL WAS MONITORED OR       58785000
                   JCV(DR[X,A],J,K);%    DUMPED, THE SYMBOLS FOR THAT   58790000
                   T1 ~ DICT[J,K].[18:15];                              58795000
                             %    LABEL ARE PRINTED FROM THE SMB        58795001
                   IF DICT[J,K+1].[6:2] ! 0 THEN                        58800000
                             %    ARRAY ELSE THEY ARE PRINTED FROM      58800001
              BEGIN            %    THE DICT                            58805000
                   T2 ~ T1.[35:5];                                      58810000
                   T3 ~ T1.[40:8];                                      58815000
                   LGTH ~ SMB[T2,T3].[17:7];              COMMENT 6-23; 58820000
                   SYOUT(MSG[124],SMB[T2,T3],LGTH);       COMMENT 6-23; 58830000
              END  ELSE                                                 58835000
              BEGIN JCV(T1,J,K);                                        58840000
                   LGTH ~ DICT[J,K].[1:5];                              58845000
                   SYOUT(MSG[124],DICT[J,K],LGTH);%                     58850000
              END;                                                      58860000
         COMMENT XXXX LABEL MISSING;                      COMMENT 9-19; 58862000
                   EIND~124 & 37 [32:40:8] & 9 [24:40:8];               58865000
                             %IF LABELS WERE MISSING, THE SYMBOLS       58865001
                   ERP(EIND,0)      ; COMPE ~ TRUE                      58870000
                             %    FOR THOSE LABELS ARE PRINTED          58870001
              END              %    WITH "LABEL MISSING".               58875000
              END END;                           COMMENT 2-05;          58880000
         END;                                                           58885000
PROCEDURE USE; FORWARD;                                                 58888700
COMMENT *************************   GETIT   **************************; 58888888
PROCEDURE GETIT;               %GETIT PROCESSES ALL LABELS WRITTEN      58890000
              BEGIN            % IN COLUMN 8 (EXPLICIT) & IMPLICIT      58895000
    BOOLEAN GETP,SECSHUN,ITSAGOTO,PERFOORM,SECFND;                      58900000
                             % LABELS IN PERFORM,ALTER,GO TO,&          58900001
    INTEGER I,J1,J2,K1,K2,L,M,F;% MONITOR STATEMENTS. EACH PARAGRAPH    58905000
    LABEL Z54,Z56,Z58,Z62,L69,XITG,FF,OFIN,G1;                          58910000
                             % IS DUMPED ONTO TAPE AS A SEGMENT OF      58910001
                             % CODE AND GETIT GENERATES LINKAGE         58915000
                   IF CNQ>600 THEN DUMPCONST(CNP,CNPL,CNQ,CNR);%CODE.   59059900
                   IF AVAIL.[39:9]>480 THEN                             59060000
              BEGIN AVAIL~AVAIL+511; AVAIL.[39:9]~0;                    59065000
              END;                                                      59070000
                   FORD~FALSE; PERFOORM~A1=16387;         COMMENT 9-02; 59075000
                   GETP~FALSE; GETOUT~FALSE; FND~FALSE;                 59080000
                   SYOUT(MSG[124],ISYMB,LGTH);                          59085000
                             %SAVE CURRENT SYMBOLS IN EVENT OF ERR      59085001
                   IF SCLAS = 6 THEN SCHAD;                    %TR 875  59086000
                   IF OTYP(OCUR)=1 OR OTYP(OCUR)>18 THEN GO TO FF;      59088000
                             %IF RESERVED WD OR NON-EXISTENT TYPE.      59088001
                   SECSHUN~FALSE;                         COMMENT 6-17; 59089000
                   IF NOT FOUND THEN GO TO Z56;                         59100000
                             %IF NOT FOUND THEN GO TO 60975000.         59100001
                   M~CLOC;     %SAVE SYMBOL ADDRESS.                    59105000
                   A1 ~ OCUR;                                           59107000
                   JCV(A1,J1,K1); JCV(A1+1,J2,K2);                      59110000
                             %SAVE DICTIONARY INDEX.                    59110001
                             %ERROR # 02. LABEL IS PREVIOUSLY USED      59115000
                   IF PERFOORM THEN DN ELSE SCTRL;%SCAN.                59120000
                   IF (NOT DECF AND DICT[J1,K1].[6:1] !%                59125000
                   REAL(DECF) AND (EXPL OR NOT PERFOORM)) COMMENT 9-02; 59130000
                   OR DICT[J1,K1].[1:5] ! 3 THEN%                       59135000
              BEGIN ERP1(40,37,16,124);  GO TO XITG;           %CJC 001 59140000
              END;                                             %CJC 001 59145000
                   FND ~ TRUE;                                          59145010
                   IF NOT EXPL THEN                                     59145020
              BEGIN  IF DICT[J1,K1].[7:1] ! 0 THEN FORD ~ TRUE;%        59145040
OFIN:              IF DECF THEN DICT[J1,K1].[6:1]~        COMMENT 6-16; 59165000
                   REAL(DECF);                            COMMENT 6-16; 59170000
                   IF KEY!341 AND KEY!343 THEN GO TO XITG;COMMENT 6-16; 59172000
                   SCTRL;                                 COMMENT 6-16; 59173000
                   IF PERFOORM THEN DN ELSE SCTRL;%                     59175000
                   GO TO XITG;                                          59180000
              END;                                                      59185000
                   IF DICT[J1,K1].[7:1] = 0 THEN GO TO FF;              59190000
                   DICT[J1,K1].[6:1] ~ REAL(DECF);                      59192000
                   DICT[J1,K1].[7:1] ~ 0;                               59194000
                   I~DICT[J1,K1].[38:5];                  COMMENT 10-9; 59200000
                   F~DICT[J1,K1].[43:5]; DR[I,F]~0;       COMMENT 10-9; 59205000
                   DICT[J1,K1].[33:15]~0;                 COMMENT 10-9; 59207000
Z54:               IF KEY!251 THEN GO TO Z62;                           59220000
                   DICT[J2,K2].[4:1] ~ 1;%ENTRY IS A SECTION NAME.      59230000
                   SECFND~FND;                            COMMENT 9-02; 59240000
                   SECSHUN~TRUE;%                                       59280000
                   JCV(CSEC,J,K); JCV(CPAR+1,L,I);        COMMENT 9-02; 59285000
                   ISNAM(F~DICT[L,I].[8:10],CSEC);        COMMENT 9-02; 59287000
                   IF DICT[J,K].[8:10]!0 THEN             COMMENT 9-02; 59290000
              BEGIN FLTBL[DICT[J,K].[8:3],DICT[J,K].      COMMENT 9-02; 59292000
                   [11:7]]~F; I~0;                        COMMENT N-09; 59295000
              END;                                        COMMENT 9-02; 59297000
                   CSEC~A1;                                 COMMENT DF; 59298000
 L69:              DN;                                         %CJC 065 59300000
                   PRIORITYNUM ~ FALSE;                        %CJC 065 59300100
                   IF SCLAS = 6 THEN                           %CJC 065 59300200
              BEGIN                                            %CJC 065 59300300
                   IF LGTH = 1 AND ISYMB[0].[24:6] = 1 OR      %CJC 065 59300400
                      LGTH = 2 AND ISYMB[0].[24:12] = 1 THEN   %CJC 065 59300500
                   PRIORITYNUM ~ TRUE;                         %CJC 065 59300600
                   DN;                                         %CJC 065 59300700
              END;                                             %CJC 065 59300800
         %    SYNTAX FOR FORCING OVERLAY TO ECM:               %CJC 065 59300900
         %      <SECTION-NAME> SECTION 01.                     %CJC 065 59301000
         %             OR                                      %CJC 065 59301100
         %      <SECTION-NAME> SECTION 1.                      %CJC 065 59301200
         %    QUANTITIES OTHER THAN 1 OR 01 ARE IGNORED        %CJC 065 59301300
         %    ALL PARAGRAPHS WITHIN THAT SECTION WILL          %CJC 065 59301400
         % HAVE BIT 4 SET IN THE SEGMENT DICTIONARY.           %CJC 065 59301500
         %    USE THE VERB "FORGET" TO REMOVE A SEGMENT        %CJC 065 59301600
         % FROM AUXILIARY MEMORY.                              %CJC 065 59301700
                   IF SCLAS = 7 THEN                           %CJC 065 59301800
              BEGIN DN; IF DECF THEN%                                   59305000
              BEGIN  USE; IF SCLAS ! 3 AND SCLAS ! 6 THEN               59310000
G1:                                                       COMMENT 6-17; 59312000
              BEGIN SCTRL; ERP1(9,37,0,0); GO TO XITG;                  59315000
              END              %                                        59320000
              END                                                       59325000
              END  ELSE                                                 59326000
              BEGIN  IF SCLAS = 3 THEN ERP(79,0) ELSE                   59327000
              BEGIN IF I!0 THEN GO TO G1;                 COMMENT 6-17; 59330000
                   I~1; GO TO L69;%                                     59341000
              END              %                                        59350200
              END;             %                                        59350400
                   GETP ~ TRUE; SYOUT(MSG[124],ISYMB,LGTH);%            59351000
Z58:               IF SCLAS = 6 THEN SCHAD ELSE%                        59352000
                   IF SCLAS ! 3 THEN GO TO FF;%                         59353000
                   IF FOUND THEN                                        59354000
              BEGIN            %                                        59355000
                   A1 ~ OCUR; JCV(A1,J1,K1); JCV(A1+1,J2,K2);%          59365000
                   IF NOT SECFND THEN                     COMMENT 9-02; 59366000
              BEGIN JCV(CSEC,J,K); PRTCTR~PRTCTR-1;       COMMENT 9-02; 59366500
                   DICT[J,K+1].[8:10]~DICT[J2,K2].[8:10]; COMMENT N-06; 59367000
              END;                                        COMMENT 9-02; 59369500
                   IF DICT[J1,K1].[1:5] ! 3 OR DICT[J1,K1].[7:1]=0 OR   59370000
                   (NOT DECF AND DICT[J1,K1].[6:1]                      59375000
                   ! REAL(DECF)) THEN                          %CJC 001 59376000
FF:           BEGIN SCTRL;  ERP1(40,37,16,124); GO TO XITG;    %CJC 001 59377000
              END;                                             %CJC 001 59380000
                   I~DICT[J1,K1].[38:5];                  COMMENT 10-9; 59382000
                   F~DICT[J1,K1].[43:5]; DR[I,F]~0;       COMMENT 10-9; 59383000
                   DICT[J1,K1].[33:15]~0;                 COMMENT 10-9; 59383500
                   FND~TRUE;                              COMMENT 10-9; 59385000
                   GO TO Z62;                             COMMENT 9-02; 59385500
              END;                                        COMMENT 9-02; 59386000
                   DIVN~3; SCHAD; DIVN~4; IFOL(CLOC,OCUR);COMMENT 9-02; 59390000
                   A1 ~ OCUR; JCV(A1,J1,K1); JCV(A1+1,J2,K2);%          59395000
                   DICT[J1,K1].[1:5]~3;                   COMMENT 9-02; 59400000
                   FND ~ FALSE;                                         59410000
                   DICT[J1,K1].[6:1] ~ REAL(DECF);%                     59425000
                   JCV(CSEC+1,J,K);%                                    59440000
                   DICT[J2,K2].[8:10]~DICT[J,K].[8:10];   COMMENT 9-02; 59441000
                   GO TO Z62;                             COMMENT 9-02; 59447000
Z56:                           %                                        59495000
                   DIVN ~ 3; SCHAD;  DIVN ~ 4;%                         59500000
                   A1~OCUR; JCV(A1,J1,K1); JCV(A1+1,J2,K2);             59502000
                   IFOL(CLOC,A1); DICT[J1,K1].[1:5] ~ 3;                59505000
                   DICT[J2,K2].[8:10] ~ PRTCTR;                         59510000
                   UPIT;                                  COMMENT 9-02; 59512000
                   DICT[J1,K1].[6:1]~REAL(DECF);          COMMENT 9-02; 59535000
                   IF PERFOORM THEN DN ELSE SCTRL;        COMMENT 9-02; 59540000
                   IF EXPL THEN GO TO Z54;%                             59545000
                   FORD ~ TRUE;                                %CJC 001 59546000
                   DICT[J1,K1].[7:1]~1;                   COMMENT 10-9; 59552000
                   I~DRINX.[38:5]; F~DRINX.[43:5];        COMMENT 10-9; 59552500
                   DICT[J1,K1].[33:15]~DRINX;             COMMENT 10-9; 59552700
                   DR[I,F]~A1; DRINX~DRINX+1; GO TO OFIN; COMMENT 10-9; 59553000
Z62:                                                                    60650000
                   IF DICT[J2,K2].[3:1] ! 0 THEN               %TR 140  60651000
              BEGIN ERP(77 & 90[32:40:8] & 29[24:40:8]         %TR 140  60652000
                         & 124[16:40:8],0);                    %TR 140  60653000
                   COMPE ~ TRUE;                               %TR 140  60654000
                     %"SYNTAX ERROR SORT PROCEDURE XXXX"       %TR 140  60655000
                     % PARAGRAPH USED AS A SORT PROCEDURE      %TR 140  60656000
              END;                                             %TR 140  60657000
                   IF GETP THEN SCTRL;                                  60660000
                   IF KEY!473 THEN                                      60665000
              BEGIN                                                     60670000
                   ERP(79,0);  %                                        60680000
              END                                                       60685000
                   ELSE SCTRL;                                          60690000
                   ITSAGOTO~IF KEY=926 THEN TRUE ELSE     COMMENT 9-02; 60695000
                   FALSE;                                 COMMENT 9-02; 60697000
                   DICT [J1,K1].[7:1] ~ 0;                              60700000
                   F~DICT[J2,K2].[8:10];                  COMMENT 9-02; 60705000
                   IF NOT PCNOTE THEN                                   60755000
              BEGIN                                                     60760000
                   IF SIOPRO AND SECSHUN THEN             COMMENT 6-16; 60765000
              BEGIN                                                     60770000
                   EMIL(LITC,1)     ;%SPECIAL SORT CODE.                60775000
                   EMIL(LITC,ENDQ)     ;                                60780000
                   EMIL(OPR,STD)     ;                                  60785000
                   EMIL(OPR,XIT) ;                        COMMENT 6-15; 60790000
              END                                                       60795000
              ELSE IF LINKAGE THEN                        COMMENT 9-03; 60800000
              BEGIN                                       COMMENT 3-11; 60805000
                   EMIL(OPDC,897); EMIL(OPDC,898);        COMMENT 6-18; 60810000
                   EMIL(OPR,EQL);                         COMMENT 9-02; 60812000
                   EMIL(LITC,1); EMIL(OPR,BFC); EMIL(OPR,XIT);          60815000
                             %LINKAGE CODE TO PRESENT SEGMENT.          60815001
                   EMIL(LITC,F);                          COMMENT 9-02; 60820000
                   EMIL(LITC,898  ); EMIL(OPR,SND);                     60825000
                   IF F>511 THEN EMIL(OPR,XRT);           COMMENT 1-8-5;60827000
                   EMIL(OPR,LOD); EMIL(OPR,BFW);                        60830000
              END; END;                                   COMMENT 3-11; 60840000
                   IF CREG = 8 THEN CREG ~ CREG + 8;                    60845000
                             %CREG=8 AT START OF NEW SEGMENT BE-        60845001
                             % CAUSE SEGMENT # IN 1ST SEG. WORD.        60845002
                             % CREATE DUMMY SEG. IF NO CODE IN SEG      60845003
                   SEGDUMP (SEG,CREG);                                  60850000
                   IF SECFND AND FND THEN                 COMMENT 9-02; 60902000
              BEGIN JCV(CSEC+1,J,K);                      COMMENT 9-02; 60904000
                   T10 ~ SEG[0,0];                                      60905000
                   MAKELABEL(0,DICT[J,K].[8:10],((CREG+7) COMMENT 9-02; 60906000
                   DIV 8) -1,0);                           COMMENT DF;  60908000
              END;                                        COMMENT 9-02; 60910000
                   T10~SEG[0,0];                          COMMENT 9-02; 60912000
                   MAKELABEL(0,F,((CREG+7)DIV 8)-1,0);     COMMENT DF;  60915000
                             %GENERATE PROGRAM DESCRIPTOR FOR A1.       60915001
                   SEGDICT[T10.[36:5],T10.[41:7]] %SETS BIT 4  %CJC 065 60915100
                        .[4:1]~REAL(PRIORITYNUM); %IN SEG DICT %CJC 065 60915200
                   IF SECFND AND FND THEN                 COMMENT 9-02; 60916000
              BEGIN EMIL(LITC,F); EMIL(LITC,898);         COMMENT 9-02; 60917000
                   EMIL(OPR,STD);                         COMMENT 9-02; 60918000
              END;                                        COMMENT 9-02; 60919000
                   IF SECSHUN THEN                                      60920000
              BEGIN  JCV(CSEC+1,L,I);                                   60921000
                   IF DICT[L,I].[6:2]>0 THEN MONGEN (CSEC,0,0);         60922000
              END;                                                      60923000
                   IF DICT[J2,K2].[6:2] > 0 THEN MONGEN(A1,0,0);        60925000
                             %MONITORED OR DUMPED LABEL.                60925001
                   CPAR~A1;                                             60940000
                   IF PCNOTE AND NOT DECF THEN                          60945000
              BEGIN                                                     60950000
                   INLGTH ~ F;                            COMMENT 9-02; 60960000
              END;                                                      60965000
                   PCNOTE ~ FALSE;                                      60965050
XITG:              IF DICT[J1,K1].[8:10]=0 AND (ITSAGOTO  COMMENT 9-02; 61170000
                   OR (PERFOORM AND (DICT[J1,K1].[7:1]=1  COMMENT 9-02; 61175000
                   OR (DICT[J2,K2].[4:1]=1 AND DICT[J2,K2 COMMENT 9-02; 61180000
                   ].[18:15]=0)))) THEN                   COMMENT 9-02; 61185000
              BEGIN J~FX.[38:3]; K~FX.[41:7];             COMMENT 9-02; 61190000
                   FLTBL[J,K]~DICT[J2,K2].[8:10];%                      61195000
                   DICT[J1,K1].[8:10]~FX; FX~FX+1;%                     61200000
              END;                                        COMMENT 9-02; 61205000
                   IF TONY THEN AVAIL~AVAIL+1;            COMMENT 9-02; 61205500
                   IF SECSHUN THEN SIOPRO~FALSE;          COMMENT 6-17; 61210000
                   TONY~FALSE; EXPL~FALSE;                COMMENT 6-17; 61215000
                   LINKAGE~TRUE;                          COMMENT 9-03; 61220000
              END;                                                      61230000
COMMENT **************************  PROLAB  **************************; 61230500
COMMENT PROCESS LABEL FOR DIAGLIST AND DMP;                             61235000
BOOLEAN PROCEDURE PROLAB;      %PROCESS LABEL FOR DIAGLIST AND DMP.     61240000
              BEGIN  INTEGER CHRS,X2,X3,   F,E;      LABEL PL1,PL2;     61245000
              X2 ~ SMBX.[35:5];%SET X2  TO SMB INDEX.                   61250000
                     X3 ~ SMBX.[40:8];  CHRS ~ 0; SMB [X2,X3] ~ 0;      61255000
                             %SET X3  TO SMB INDEX.                     61255001
                     CHRTRAN (ISYMB,4,SMB [X2,X3],4,LGTH);              61260000
                             %TRAN CURRENT SYMB TO SMB ARRAY.           61260001
                     CHRS ~ LGTH;    TONY ~ TRUE;    GETIT;             61265000
                             %CALL GETIT TO ENTER LABEL IN DICT.        61265001
                     JCV (A1+1,F,E);  IF FND THEN                       61270000
                             %GETS TO DICT ENTRY,IF IN DICT BEFORE      61270001
                             %GETIT THEN                                61270002
              BEGIN  IF NOT MON THEN GO TO PL1;                         61275000
                             %IF NOT MONITOR THEN 61305000, ELSE        61275001
                     DICT [F,E].[7:1] ~ 1; PROLAB ~ FALSE; GO TO PL2    61280000
                             %SET MONITOR FLG IN DICT,SET PROLAB        61280001
                             %FALSE, EXIT TO 61440000.                  61280002
              END;   IF MON THEN%IF MONITOR STATEMENT THEN              61285000
              BEGIN  T5 ~ 0; DICT [F,E].[7:1] ~ 1;                      61290000
                             %SET T5 AND MONITOR FLAG,                  61290001
                     DICT [F,E-1].[18:15] ~ SMBX                        61295000
                             %STORE SYMBOL ADDRESS IN DICT ENTRY,       61295001
              END    ELSE      %ELSE                                    61300000
       PL1:   BEGIN  T5 ~ 1; DICT [F,E].[6:1] ~ 1;                      61305000
                             %SET T5 AND DUMP FLAG,                     61305001
                     DICT [F,E-1].[18:15] ~ SMBX                        61310000
                             %STORE SMB ADDRESS IN DICT ENTRY.          61310001
              END;                                                      61315000
                     DICT [F,E+1] ~ 0 & PSDX [33:33:15];                61320000
                             %INITIALIZE AND STORE PSD ARRAY INDEX      61320001
                             %IN DICT ENTRY.                            61320002
                     PSDX ~ PSDX + 1;%UPDATE PSD ARRAY INDEX.           61325000
                     IF DICT [F,E].[1:1] = 1 THEN%IF QUALIFIED THEN     61330000
              BEGIN  T2 ~48 & 48[24:42:6] & 38[30:42:6] & 22[36:42:6];  61335000
                             %STORE "OF" IN T2.                         61335001
                     CHRTRAN (T2,4,SMB [X2,X3],CHRS+4,4);               61340000
                             %TRAN T2 TO SMB ARRAY.                     61340001
                     CHRS ~ CHRS + 4;    JCV (OHLNK (A1),J,K);          61345000
                             %UPDATE CHRS,GETS TO DICT ENTRY FOR        61345001
                             %HIERARCHY LINK.                           61345002
                     IF DICT [J,K+1].[6:2] = 0  THEN                    61350000
                             %IF MONITOR AND DUMP FLG OFF THEN          61350001
              BEGIN  JCV (DICT [J,K].[18:15],J,K);                      61355000
                             %GET TO SYMBOL ENTRY IN DICT,              61355001
                     T8 ~ DICT [J,K].[1:5];                             61360000
                             %SET T8 TO NO OF CHARS IN ENTRY,           61360001
                     CHRTRAN (DICT [J,K],4,SMB [X2,X3],CHRS+4,T8)       61365000
                             %TRAN T8 CHARS TO SMB ARRAY.               61365001
              END    ELSE      %ELSE                                    61370000
              BEGIN  T2 ~ DICT [J,K].[18:15];%SET T2 TO SMBX,           61375000
                   T3 ~ T2.[35:5];  T4 ~ T2.[40:8];                     61380000
                             %SET T3 AND T4 TO SMB INDEX,               61380001
                     T8 ~ SMB [T3,T4].[17:7];                           61385000
                             %SET T8 TO NO OF CHARS IN ENTRY            61385001
                     CHRTRAN (SMB [T3,T4],4,SMB[X2,X3],CHRS+4,T8)       61390000
                             %TRAN T8 CHRS TO SMB ARRAY.                61390001
              END;   CHRS ~ CHRS + T8%UPDATE CHRS.                      61395000
              END;   X ~ (CHRS + 3) DIV 8 + T5 +1;                      61400000
                             %COMPUTE SMB ENTRY LGTH.                   61400001
                     SMB [X2,X3] ~ SMB [X2,X3] & 5 [8:45:3]             61405000
                             %SET SMB ENTRY TYPE TO LABEL,ENTRY         61405001
                     & X [11:42:6] & CHRS [17:41:7];  PROLAB ~ TRUE;    61410000
                             %LGTH TO X,SYMBOL LGTH TO CHRS.            61410001
                     IF T5 = 1 THEN%IF IN DUMP STATEMENT THEN           61415000
              BEGIN  DMPCTR ~ DMPCTR + 1;%UPDATE DUMP COUNTER.          61420000
                     SMB [X2,X3] ~ SMB [X2,X3] & 1[4:47:1];             61425000
                             %SET SMB DUMP LABEL FLG ON.                61425001
                     SMB [X2,X3+X-1] ~ 0 & 1[1:47:1] & A1[33:33:15]     61430000
                             %SET OCUR BIT ON AND OCUR IN SMB.          61430001
              END;                                                      61435000
       PL2:   END;                                                      61440000
COMMENT ************************** DIAGLIST **************************; 61440500
COMMENT PROCESS DIAGNOSTICS LIST;%PROCEDURE TO PROCESS DIAG LIST IN     61445000
PROCEDURE DIAGLIST;            % MONITOR AND DUMP.                      61450000
              BEGIN  INTEGER X1,X2,X3,E,F,Y,CHRS,LEVNO,ORSMBX,LAOCUR,Z; 61455000
                     INTEGER NCHRS,L1FLG;                               61460000
              INTEGER EIND, FAT;                                        61462500
              LABEL FALL, REC;                                          61463000
                     LABEL L1,L2B,RNAM1,RNAM2,IQ,IQ1,ELEM,GRP,ELEM1;    61465000
LABEL L3B;                                                COMMENT 10-9; 61467000
              FAT ~ 0;                                                  61467500
                     EIND ~ 0; %INITIALIZE TO ZERO                      61470000
                 IF SMBX.[34:1] = 1 THEN                                61471000
         BEGIN FAT ~ 1;  GO TO FALL;                                    61472000
         END;                                                           61473000
     L1:      X2 ~ SMBX.[35:5]; X3 ~ SMBX.[40:8]; SMB[X2,X3] ~ 0;       61475000
                             %X2 ~ ROW, X3 ~ WORD.                      61475001
                     CHRS ~ CY ~ 0;%INITIALIZE TO ZERO.                 61480000
                   IF TYPE = 1 THEN%IF A RESERVED WORD                  61481000
             BEGIN EIND ~ 40 & 47[32:40:8];  GO TO L2B;%"ILLEGAL TYPE"  61482000
             END;                                                       61483000
                     IF NOT FOUND OR TYPE = 3 THEN                      61485000
                             %IF ITEM NOT IN DICT OR IS A LABEL         61485001
              BEGIN  IF PROLAB THEN%IF PROCEDURE IS TRUE THEN           61490000
              BEGIN  SMBX ~ SMBX + X;  IF SMBX.[40:8] > 240 THEN        61495000
                             % UPDATE SMB INDEX.                        61495001
              BEGIN  SMBX ~ SMBX + 255; SMBX.[40:8] ~ 0                 61500000
              ;  IF SMBX.[34:1] = 1 THEN                                61501000
         BEGIN FAT ~ 1;  GO TO FALL;                                    61502000
         END;                                                           61503000
              END                                                       61505000
              END;           IF KEY ! 456 THEN GO TO L1 ELSE GO TO L2B  61510000
                             %IF NOT ")" 61475000 ELSE 62693000.        61510001
              END;   IF TYPE = 9 THEN%IF RENAMES ENTRY THEN             61515000
              BEGIN                                                     61520000
                     IF NOT MON THEN%IF IN DUMP STATEMENT               61525000
              BEGIN  EIND ~ 40 & 2[32:40:8] & 25[24:40:8];  GO TO L2B   61530000
                             %"ILLEGAL SYNTAX DECLARATION".             61530001
              END;   LOCUS ~ OFOL (OCUR);%SAVE RENAMES START OCUR.      61535000
                     T6 ~ OTYP(LOCUS);%SAVE DICT ENTRY - TYPE           61535500
                     IF OILNK (OCUR) = 0  THEN                          61540000
                             %IF NO RENAMES THRU OPTION                 61540001
              BEGIN  IF OELEF (LOCUS) THEN  GO TO ELEM                  61545000
                             %IF ELEMENTARY ITEM THEN 61905000.         61545001
                   ELSE  GO TO GRP%ELSE GO TO 62072500.                 61550000
              END;   LAOCUR ~ OILNK (OCUR);  GO TO RNAM2;               61555000
                             %SAVE THRU OCUR, GO TO 61585000.           61555001
       RNAM1:        LOCUS ~ OFOL (LOCUS);%SAVE DICT FOLLOWER-LINK.     61560000
                     T6 ~ OTYP(LOCUS);%SAVE DICT ENTRY-TYPE.            61560500
                     IF LAOCUR = LOCUS  THEN                            61565000
                             %IF THRU OCUR = FOLLOWER -LINK             61565001
              BEGIN  IF OELEF (LOCUS) THEN  GO TO ELEM                  61570000
                             %IF ELEMENTARY ITEM THEN 61905000          61570001
                   ELSE  GO TO GRP%ELSE GO TO 62072500.                 61575000
              END;                                                      61580000
       RNAM2:        IF  NOT   OELEF  (LOCUS)  THEN  GO TO RNAM1;       61585000
                             %IF NOT ELEMENTARY ITEM THEN 61560000      61585001
                     JCV (OILNK (LOCUS),F,E);%GET INFO ARRAY FOR LOCUS. 61590000
                     IF INFO [F,E].[32:1] = 1 OR INFO [F,E+1].[3:1] = 1 61595000
                             %IF DUMP OR MONITOR FLAG ON                61595001
                     THEN      %THEN                                    61600000
              BEGIN  INFO [F,E+1].[3:1] ~ 1;    GO TO RNAM1             61605000
                             %SET MONITOR FLAG ON,GO TO 61560000.       61605001
              END;   JCV (INFO [F,E+2].[3:15],J,K);                     61610000
                             %GET DICT SYMBOL ENTRY.                    61610001
                     CHRS ~ DICT [J,K].[1:5];%SAVE SYMBOL LENGTH.       61615000
                     CHRTRAN (DICT [J,K],4,SMB [X2,X3],4,CHRS);         61620000
                             %TRANS SYMBOL FROM DICT TO SMB.            61620001
                     INFO [F,E+1].[3:1] ~ 1;%SET MONITOR FLAG ON.       61625000
                     INFO [F,E+2].[3:15] ~ SMBX;                        61630000
                             %STORE SMB INDEX IN INFO.                  61630001
                     T1 ~ OCLAS (LOCUS);    T2 ~ OUSG (LOCUS);          61635000
                             %SAVE ITEM CLASS AND USAGE.                61635001
                     JCV (LOCUS,J,K);%GET DICT ENTRY FOR LOCUS.         61640000
                   T3 ~ 0 & DICT[J,K+1] [40:10:8];                      61645000
                             %SAVE ITEM SCALE AND SIGN.                 61645001
                   T4 ~ OSGN(LOCUS);                   COMMENT 2-26-64; 61646000
                     T5 ~ OFSZ (LOCUS);     Y ~ 0;                      61650000
                             %SAVE ITEM FIELD SIZE.                     61650001
                     IF T1 = 3  THEN%IF ITEM CLASS IS NUMERIC THEN      61655000
              BEGIN  IF T3 > 0  THEN  Y ~ 2;%IF SCALED THEN Y ~ 2.      61660000
              IF T2 ! 0 THEN Y ~ Y+2 ELSE Y ~ Y+1                       61665000
                             %IF COMP THEN Y~Y+2 ELSE Y~Y+1,DISPLA      61665001
              END;   X ~ (CHRS + 3) DIV 8 + 2;                          61670000
                             %COMPUTE SMB ENTRY LENGTH.                 61670001
                     SMB [X2,X3] ~ SMB [X2,X3] & T4 [5:45:3]            61675000
                             %COMPLETE SMB ENTRY.                       61675001
                     & Y [8:45:3] & X [11:42:6] & CHRS [17:41:7];       61680000
                     SMB[X2,X3+X-1] ~ 0 & T5[2:33:15]                   61685000
                     & T3 [17:40:8];    IF T4 = 3 THEN                  61690000
                             %IF DATA-NAME SIGN THEN                    61690001
              BEGIN  OAS (PX,QX,RX,INFO [F,E+3].[18:15]);               61695000
                             % GET DATA-NAME SIGN LOCATION.             61695001
                     SMB [X2,X3+X-1] ~ SMB [X2,X3+X-1] & PX [25:38:10]  61700000
                             %STORE D-N SIGN LOC IN SMB.                61700001
                     & QX [35:38:10] & RX [45:45:3]                     61705000
              END;                                                      61710000
              SMBX ~ SMBX + X; %UPDATE SMB INDEX.                       61715000
                                       IF SMBX.[40:8] > 240 THEN        61720000
              BEGIN  SMBX ~ SMBX + 255; SMBX.[40:8] ~ 0                 61725000
              ;  IF SMBX.[34:1] = 1 THEN                                61726000
         BEGIN FAT ~ 1;  GO TO FALL;                                    61727000
         END;                                                           61728000
         END; X2 ~ SMBX.[35:5]; X3 ~ SMBX.[40:8];                       61730000
                     GO TO RNAM1%GO TO 61560000.                        61735000
              END;                                                      61740000
COMMENT PROCESS QUALIFICATION OF LIST ELEMENTS;                         61745000
                             %PROCESS LIST ELEMENT QUALIFICATION.       61745001
       IQ:           IF OSNAM (OCUR) ! 0 THEN                           61750000
                             %IF DICT SAME-NAME LINK ! 0                61750001
              BEGIN                                                     61755000
       IQ1:          CY ~ CY + 1;  CCY [CY] ~ OCUR;                     61760000
                             %SAVE OCUR IN ARRAY CCY.                   61760001
                     CHRTRAN (ISYMB,4,SMB [X2,X3],CHRS+4,LGTH);         61765000
                             %TRANS SYMBOL TO SMB ARRAY.                61765001
                   CHRS~CHRS+LGTH; SYOUT(MSG[124],ISYMB,  COMMENT 10-9; 61767000
                   LGTH); SCTRL;%UPDATE CHRS, SCAN.                     61770000
                     IF KEY ! 341 AND KEY ! 343  THEN                   61775000
                             %IF NOT "IN" AND NOT "OF" THEN             61775001
              BEGIN  EIND ~9 & 84 [32:40:8];%"MISSING QUALIFICATION".   61780000
                   GO TO L3B;  %                                        61785000
              END;   T2 ~48 & 48[24:42:6] & 38[30:42:6] & 22[36:42:6];  61790000
                             %STORE "OF" IN T2.                         61790001
                     CHRTRAN (T2,4,SMB [X2,X3],CHRS+4,4);               61795000
                             %TRANS T2 TO SMB ARRAY.                    61795001
                     CHRS ~ CHRS + 4;  SCTRL;%UPDATE CHRS, SCAN.        61800000
                     IF NOT FOUND THEN%IF NOT IN DICT THEN              61805000
              BEGIN  EIND ~ 9 & 84 [32:40:8] & 83[24:40:8];             61810000
                             %"MISSING QUALIFICATION NAME".             61810001
                     GO TO L2B %GO TO 62693000.                         61815000
              END;   GO TO IQ  %GO TO 61750000.                         61820000
              END;                                                      61825000
                     IF LCOMP (341) OR LCOMP (343) THEN GO TO IQ1;      61830000
                             %IF NEXT SYMBOL IS "OF" OR "IN"            61830001
                     CHRTRAN (ISYMB,4,SMB [X2,X3],CHRS+4,LGTH);         61835000
                             %TRANS SYMBOL TO SMB ARRAY.                61835001
                     CHRS ~ CHRS + LGTH;%UPDATE CHRS.                   61840000
                     IF CY > 0 THEN%IF QUALIF. PRESENT                  61845000
              BEGIN  CY ~ CY + 1;  CCY [CY] ~ OCUR;  SERCH (CY,CCY)     61850000
                             %UPDATE CY, SAVE OCUR, CALL SEARCH.        61850001
              END  ELSE   LOCUS ~ OCUR;%ELSE SAVE CURRENT OCUR.         61855000
                     T6 ~ OTYP (LOCUS);%SAVE ITEM TYPE                  61860000
                     IF OELEF (LOCUS) THEN%IF ELEMENTARY ITEM THEN      61875000
              BEGIN  IF T6 = 7 OR T6 = 8 OR T6 = 18  THEN GO TO ELEM;   61880000
                             %IF RECORD NAME OR ELEM ITEM OR            61880001
                             %SPEC REG THEN GO TO 61905000.             61880002
              BEGIN  EIND ~ 40 & 47 [32:40:8];%"ILLEGAL TYPE".          61885000
                     GO TO L2B %GO TO 62693000.                         61890000
              END;                                                      61895000
COMMENT PROCESS ELEMENTARY ITEM;                                        61900000
       ELEM:         JCV (OILNK (LOCUS),F,E);  T8 ~ INFO [F,E+1].[3:1]; 61905000
                             %GET INFO ARRAY, SAVE MONITOR FLAG.        61905001
                   IF OCFLG(LOCUS) THEN%CHECK IF OCCURS ITEM" ILLEGAL   61906000
             BEGIN EIND ~ 40 & 45[32:40:8] & 16[24:40:8];               61906100
                             %OCCURS USAGE".                            61906101
                   GO TO L2B;                             COMMENT 3-3;  61906200
             END;                                         COMMENT 3-3;  61906300
                     IF MON THEN%IF IN MONITOR THEN                     61910000
              BEGIN  IF INFO [F,E].[32:1] = 1 OR INFO [F,E+1].[3:1] = 1 61915000
                             %IF DUMP OR MONITOR FLAG ON                61915001
                     THEN                                               61920000
              BEGIN  X ~ (CHRS + 3) DIV 8 +  1;                         61921000
                             %COMPUTE SMB ENTRY LENGTH.                 61921001
                     FOR X1~0 STEP 1 UNTIL  X-1  DO SMB [X2,X3+X1] ~ 0; 61922000
                             %ZERO OUT DUPLICATE SMB ENTRY              61922001
                     INFO [F,E+1].[3:1] ~ 1; SCTRL; IF KEY ! 456 THEN   61925000
                             %MONITOR FLG ON, SCAN IF NOT ")" THEN      61925001
                     GO TO L1 ELSE GO TO L2B                            61930000
                             %GO TO 61475000 ELSE 62693000.             61930001
              END;   INFO [F,E+1].[3:1] ~ 1; Z ~ 0; GO TO ELEM1         61935000
                             %MONITOR FLAG ON. SET Z TO MONITOR.        61935001
              END;   DMPCTR ~ DMPCTR + 1;  Z ~ 1;                       61940000
                             %UPDATE DUMP COUNTER. SET Z TO DUMP.       61940001
                     INFO [F,E].[32:1] ~ 1;%DUMP FLAG ON.               61945000
       ELEM1:        T1 ~ OCLAS (LOCUS);  T2 ~ OUSG (LOCUS);            61950000
                             %PROCESS AND COMPLETE                      61950001
                     JCV (LOCUS,J,K);%SMB ENTRY.                        61955000
                   T3 ~ 0 & DICT[J,K+1] [40:10:8];                      61960000
                             %  (SEE 61635000 THRU 61710000 FOR         61960001
                   T4 ~ OSGN(LOCUS);                   COMMENT 2-26-64; 61961000
                     T5 ~ OFSZ (LOCUS);    Y ~ 0;                       61965000
                             %   DETAILED DESCRIPTION).                 61965001
                     IF T1 = 3 THEN                                     61970000
              BEGIN  IF T3 > 0 THEN  Y ~ 2;                             61975000
              IF T2 ! 0 THEN Y ~ Y+2 ELSE Y ~ Y+1                       61980000
              END;   X ~ (CHRS + 3) DIV 8 + Z + 2;                      61985000
                     SMB [X2,X3] ~ SMB [X2,X3] & T4 [5:45:3]            61990000
                     & Y [8:45:3] & X [11:42:6] & CHRS [17:41:7];       61995000
                   SMB[X2,X3+X-(Z+1)] ~0& T5[2:33:15] & T3[17:40:8];    62000000
                     IF Z = 1 THEN                                      62005000
              BEGIN  SMB [X2,X3+X-1] ~ 0 & 1[1:47:1] & LOCUS[33:33:15]  62010000
                   ; SMB [X2,X3] ~ SMB [X2,X3] & 1[4:47:1];             62015000
              END;   IF T4 = 3 THEN                                     62020000
              BEGIN  OAS (PX,QX,RX,INFO [F,E+3].[18:15]);               62025000
                     SMB [X2,X3+X-(Z+1)] ~ SMB [X2,X3+X-(Z+1)]          62030000
                     & PX [25:38:10] & QX [35:38:10] & RX [45:45:3]     62035000
              END;   IF T8 = 0 THEN%IF NO PREVIOUS MON FLAG THEN        62040000
                     INFO [F,E+2].[3:15] ~ SMBX; SMBX ~ SMBX + X;       62045000
                             %STORE SMBX, UPDATE SMBX.                  62045001
                                       IF SMBX.[40:8] > 240 THEN        62050000
              BEGIN  SMBX ~ SMBX + 255; SMBX.[40:8] ~ 0                 62055000
              ;  IF SMBX.[34:1] = 1 THEN                                62056000
         BEGIN FAT ~ 1;  GO TO FALL;                                    62057000
         END;                                                           62058000
              END;   SCTRL; IF KEY ! 456 THEN GO TO L1                  62060000
                             %SCAN, IF NOT ")" THEN 61475000            62060001
                   ELSE GO TO L2B%ELSE GO TO 62693000.                  62065000
              END;                                                      62070000
GRP:          BEGIN                                       COMMENT 8-27; 62072500
                     LABEL ENDER,GPM1,GPD,GPD1;                         62072600
                     L1FLG ~ 0;%INIT RETURN TO L1 FLAG.                 62072700
                   IF OCFLG(LOCUS) THEN%CHECK IF OCCURS ITEM" ILLEGAL   62072710
             BEGIN EIND ~ 40 & 76[32:40:8] & 45[24:40:8];               62072720
                             %GROUP OCCURS".                            62072721
                   GO TO ENDER;                           COMMENT 3-3;  62072730
             END;                                         COMMENT 3-3;  62072740
                     IF T6 ! 2 AND T6 ! 7 THEN                          62075000
                             %IF NOT GROUP ITEM AND NOT RECD NAME       62075001
              BEGIN  EIND ~ 40 & 47 [32:40:8];%"ILLEGAL TYPE".          62080000
                     GO TO ENDER%GO TO 62692500.                        62090000
              END;   LEVNO ~ OLEVL (LOCUS);%SAVE CURRENT LEVEL NUMBER.  62095000
                     IF MON THEN%IF IN MONITOR THEN                     62100000
              BEGIN                                                     62105000
COMMENT PROCESS MONITORED GROUP ITEM;%PROCESS MONITORED GROUP ITEM.     62110000
                     JCV (OILNK (LOCUS),F,E);  X ~ (CHRS + 3) DIV 8 +1; 62115000
                             %GET INFO ARRAY, COMPUTE X.                62115001
                     IF INFO [F,E].[32:1] = 1 THEN%IF DUMP FLAG ON THEN 62120000
              BEGIN  IF CHRS  > 0 THEN%IF SMB ENTRY WAS MADE THEN       62125000
              BEGIN  FOR X1~0 STEP 1 UNTIL  X-1  DO SMB [X2,X3+X1] ~ 0  62130000
                             %ZERO LAST SMB ENTRY.                      62130001
              END;                                                      62135000
                     ORSMBX ~ INFO [F,E+2].[3:15]%SAVE SMBX FROM INFO   62140000
              END  ELSE        %ELSE                                    62145000
              BEGIN  ORSMBX ~ SMBX;%SAVE CURRENT SMBX                   62150000
                     SMB [X2,X3] ~ SMB [X2,X3] & 6 [8:45:3]             62155000
                             %COMPLETE SMB ENTRY                        62155001
                     & X [11:42:6] & CHRS [17:41:7];  SMBX ~ SMBX + X;  62160000
                             %UPDATE SMBX.                              62160001
                                       IF SMBX.[40:8] > 240 THEN        62165000
              BEGIN  SMBX ~ SMBX + 255; SMBX.[40:8] ~ 0                 62170000
              ;  IF SMBX.[34:1] = 1 THEN                                62171000
         BEGIN FAT ~ 1;  GO TO ENDER;                                   62172000
         END;                                                           62173000
       END;   X2 ~ SMBX.[35:5]; X3 ~ SMBX.[40:8];                       62175000
              END;                                                      62180000
       GPM1:         LOCUS ~ OFOL (LOCUS);  IF LOCUS = 0 THEN           62185000
                             %SAVE FOLLOWER-LINK OF LOCUS, IF ZERO      62185001
              BEGIN  SCTRL;  IF KEY ! 456 THEN L1FLG ~ 1; GO TO ENDER   62190000
                             %SCAN, IF NOT ")" THEN SET L1 FLAG         62190001
              END;   IF LEVNO } OLEVL (LOCUS) THEN                      62200000
                             %IF ORIGINAL LEVNO } CURRENT LEVNO         62200001
              BEGIN  SCTRL;  IF KEY ! 456 THEN L1FLG ~ 1; GO TO ENDER   62205000
                             %SCAN, IF NOT ")" SET L1 FLAG,             62205001
              END;   IF NOT OELEF(LOCUS)%IF NOT ELEMENTARY ITEM         62210000
                    AND NOT OCFLG(LOCUS)%AND NOT AN OCCURS ITEM         62211000
                     THEN GO TO GPM1;%THEN GO TO 62185000.              62212000
                     JCV (OILNK (LOCUS),F,E);%GET LOCUS INFO ARRAY.     62215000
                     IF INFO [F,E].[32:1] = 1 THEN%IF DUMP FLAG ON THEN 62225000
              BEGIN  INFO [F,E+1].[3:1] ~ 1;  GO TO GPM1                62230000
                             %TURN MONITOR FLAG ON.                     62230001
              END;   IF INFO [F,E+1].[3:1] = 1 THEN GO TO GPM1;         62235000
                             %IF MON FLAG ON THEN 62185000.             62235001
                     IF INFO[F,E+2].[3:15] < 850 THEN GO TO GPM1;       62240000
                             % IF A RESERVED WORD THEN 62185000.        62240001
                     INFO [F,E+1].[3:1] ~ 1;%TURN MONITOR FLAG ON.      62245000
                     JCV (INFO [F,E+2].[3:15],J,K);%GET TO DICT SYMBOL. 62250000
                     CHRS ~ DICT [J,K].[1:5];%SAVE SYMBOL LENGTH.       62255000
                     CHRTRAN (DICT [J,K],4,SMB [X2,X3],4,CHRS);         62260000
                             %TRANS SYMB TO SMB ARRAY.                  62260001
                     X ~ ((CHRS+3)DIV 8)+ 1;%COMPUTE DICT ENTRY LENGTH. 62262000
                     IF DICT[J,K+X+1].[18:15] ! 0 THEN                  62265000
                             %IF SAME-NAME LINK NOT ZERO THEN           62265001
              BEGIN  T2 ~48 & 48 [24:42:6] & 38[30:42:6] & 22[36:42:6]; 62270000
                             %STORE "OF" IN T2.                         62270001
                     CHRTRAN (T2,4,SMB [X2,X3],CHRS+4,4);               62275000
                             %TRANS T2 TO SMB ARRAY.                    62275001
                     CHRS ~ CHRS + 4;%UPDATE CHRS.                      62280000
              T3 ~ ORSMBX.[35:5]; T4 ~ ORSMBX.[40:8];                   62285000
                             %SAVE ROW AND WORD INDEX.                  62285001
                     NCHRS ~ SMB [T3,T4].[17:7];%SAVE SYMBOL LENGTH.    62290000
                     CHRTRAN (SMB [T3,T4],4,SMB[X2,X3],CHRS+4,NCHRS);   62295000
                             %TRANS SYMB TO SMB ENTRY.                  62295001
                     CHRS ~ CHRS + NCHRS%UPDATE CHRS.                   62300000
              END;                                                      62305000
                     T1 ~ OCLAS (LOCUS);  T2 ~ OUSG (LOCUS);            62310000
                             %COMPLETE SMB ENTRY.                       62310001
                     JCV (LOCUS,J,K);% (SEE 61635000 THRU 61710000.)    62315000
                   T3 ~ 0 & DICT[J,K+1] [40:10:8];     COMMENT 2-26-64; 62320000
                   T4 ~ OSGN(LOCUS);                   COMMENT 2-26-64; 62321000
                     T5 ~ OFSZ (LOCUS);    Y ~ 0;                       62325000
                     IF T1 = 3 THEN                                     62330000
              BEGIN  IF T3 > 0 THEN  Y ~ 2;                             62335000
              IF T2 ! 0 THEN Y ~ Y+2 ELSE Y ~ Y+1                       62340000
              END;   X ~ (CHRS + 3) DIV 8 + 2;                          62345000
                     SMB [X2,X3] ~ SMB [X2,X3] & T4 [5:45:3]            62350000
                     & Y [8:45:3] & X [11:42:6] & CHRS [17:41:7];       62355000
                     SMB[X2,X3+X-1] ~ 0 & T5[2:33:15]                   62360000
                     & T3 [17:40:8];                                    62365000
                     IF T4 = 3 THEN                                     62370000
              BEGIN  OAS (PX,QX,RX,INFO [F,E+3].[18:15]);               62375000
                     SMB[X2,X3+X-1] ~ SMB [X2,X3+X-1] & PX [25:38:10]   62380000
                     & QX [35:38:10] & RX [45:45:3]                     62385000
              END;   INFO [F,E+2].[3:15] ~ SMBX;  SMBX ~ SMBX + X;      62390000
                             %UPDATE SMBX.                              62390001
                                       IF SMBX.[40:8] > 240 THEN        62395000
              BEGIN  SMBX ~ SMBX + 255;  SMBX.[40:8] ~ 0                62400000
              ;  IF SMBX.[34:1] = 1 THEN                                62401000
         BEGIN FAT ~ 1;  GO TO ENDER;                                   62402000
         END;                                                           62403000
       END;   X2 ~ SMBX.[35:5]; X3 ~ SMBX.[40:8];                       62405000
                     GO TO GPM1%GO TO 62185000.                         62410000
              END;                                                      62415000
COMMENT PROCESS DUMPED GROUP ITEM;                                      62420000
                     JCV (OILNK (LOCUS),F,E);                           62425000
                             %GET LOCUS INFO ARRAY ENTRY.               62425001
                        INFO [F,E].[32:1] ~ 1;%SET DUMP FLAG ON.        62430000
       GPD:          X ~ (CHRS+3) DIV 8 + 2; INFO [F,E+2].[3:15] ~ SMBX;62435000
                             %COMPUTE SMB LGTH, SAVE SMB INDEX.         62435001
                     SMB [X2,X3] ~ SMB [X2,X3] & 6 [8:45:3]             62440000
                             %COMPLETE SMB ENTRY.                       62440001
                     & X [11:42:6] & CHRS [17:41:7];                    62445000
                     SMB [X2,X3+X-1] ~ 0 & 1[1:47:1] & LOCUS [33:33:15];62450000
                     DMPCTR ~ DMPCTR + 1;%UPDATE DUMP COUNTER.          62455000
                     SMBX ~ SMBX + X;%UPDATE SMB INDEX.                 62460000
                                       IF SMBX.[40:8] > 240 THEN        62465000
              BEGIN  SMBX ~ SMBX + 255; SMBX.[40:8] ~ 0                 62470000
              ;  IF SMBX.[34:1] = 1 THEN                                62471000
         BEGIN FAT ~ 1;  GO TO ENDER;                                   62472000
         END;                                                           62473000
       END;   X2 ~ SMBX.[35:5]; X3 ~ SMBX.[40:8];                       62475000
       GPD1:         LOCUS ~ OFOL (LOCUS);  IF LOCUS = 0                62480000
                             %SAVE FOLLOWER-LINK, IF ZERO               62480001
                     OR LEVNO } OLEVL (LOCUS) THEN                      62485000
                             %OR ORIG LEVNO } CURRENT LEVNO THEN        62485001
              BEGIN  SCTRL;  IF KEY ! 456 THEN L1FLG ~ 1; GO TO ENDER   62490000
                             %SCAN, IF NOT ")" THEN SET L1 FLAG.        62490001
              END;                                                      62495000
                     JCV (OILNK (LOCUS),F,E); T8 ~ INFO [F,E+1].[3:1];  62500000
                             %GET INFO ARRAY, SAVE MON FLAG.            62500001
                     IF INFO [F,E].[32:1] = 1 OR INFO [F,E+1].[3:1] = 1 62505000
                             %IF DMP OR MON FLAG ON THEN                62505001
                     THEN                                               62510000
              BEGIN  INFO [F,E].[32:1] ~ 1;  T2 ~ INFO [F,E+2].[3:15];  62515000
                             %SET DUMP FLAG ON, SAVE SMBX.              62515001
                     T3 ~ T2.[36:4];  T4 ~ T2.[40:8];                   62520000
                             %SAVE ROW AND WORD INDEX.                  62520001
                     CHRS ~ SMB[T3,T4].[17:7];%SAVE SMB SYMBOL LENGTH.  62525000
                     CHRTRAN (SMB [T3,T4],4,SMB[X2,X3],4,CHRS)          62530000
                             %TRAN SYMBOL TO SMB ARRAY.                 62530001
              END  ELSE        %ELSE                                    62535000
              BEGIN  IF INFO[F,E+2].[3:15] < 850 THEN GO TO GPD1;       62540000
                             %IF A RESERVED WORD THEN 62480000.         62540001
                   INFO [F,E].[32:1] ~ 1;%SET DUMP FLAG ON.             62545000
                     JCV (INFO [F,E+2].[3:15],T3,T4);                   62550000
                             %GET INFO ARRAY ENTRY.                     62550001
                     CHRS ~ DICT[T3,T4].[1:5];%SAVE SYMBOL LENGTH.      62555000
                     CHRTRAN (DICT [T3,T4],4,SMB [X2,X3],4,CHRS)        62560000
                             %TRANS SYMB TO SMB ARRAY.                  62560001
              END;   IF NOT OELEF (LOCUS) THEN GO TO GPD;               62565000
                             %IF NOT ELEMENTARY ITEM THEN 62435000      62565001
                     DMPCTR ~ DMPCTR + 1;%UPDATE DUMP COUNTER.          62570000
                     T1 ~ OCLAS (LOCUS);  T2 ~ OUSG (LOCUS);            62575000
                             %COMPLETE SMB ENTRY.                       62575001
                     JCV (LOCUS,J,K);% (SEE 61635000 THRU 61710000.)    62580000
                   T3 ~ 0 & DICT[J,K+1] [40:10:8];     COMMENT 2-26-64; 62585000
                   T4 ~ OSGN(LOCUS);                   COMMENT 2-26-64; 62586000
                     T5 ~ OFSZ (LOCUS);    Y ~ 0;                       62590000
                     IF T1 = 3 THEN                                     62595000
              BEGIN  IF T3 > 0 THEN  Y ~ 2;                             62600000
              IF T2 ! 0 THEN Y ~ Y+2 ELSE Y ~ Y+1                       62605000
              END;   X ~ (CHRS + 3) DIV 8 + 3;                          62610000
                     SMB [X2,X3] ~ SMB [X2,X3] & T4 [5:45:3]            62615000
                     & Y [8:45:3] & X [11:42:6] & CHRS [17:41:7];       62620000
                     SMB [X2,X3] ~ SMB [X2,X3] & 1[4:47:1];             62625000
                     SMB[X2,X3+X-2] ~ 0 & T5[2:33:15]                   62630000
                     & T3 [17:40:8];                                    62635000
                     IF T4 = 3 THEN                                     62640000
              BEGIN  OAS (PX,QX,RX,INFO [F,E+3].[18:15]);               62645000
                     SMB [X2,X3+X-2] ~ SMB [X2,X3+X-2] & PX [25:38:10]  62650000
                     & QX[35:38:10] & RX [45:45:3]                      62655000
              END;   SMB [X2,X3+X-1] ~ 0 & 1[1:47:1] & LOCUS [33:33:15];62660000
                     IF T8 = 0 THEN%IF MONITOR FLAG NOT ON THEN         62665000
                     INFO [F,E+2].[3:15] ~ SMBX;  SMBX ~ SMBX + X;      62670000
                             %UPDATE SMBX.                              62670001
                                       IF SMBX.[40:8] > 240 THEN        62675000
              BEGIN  SMBX ~ SMBX + 255;  SMBX.[40:8] ~ 0                62680000
              ;  IF SMBX.[34:1] = 1 THEN                                62681000
         BEGIN FAT ~ 1;  GO TO ENDER;                                   62682000
         END;                                                           62683000
       END;   X2 ~ SMBX.[35:5]; X3 ~ SMBX.[40:8];                       62685000
                     GO TO GPD1;%GO TO 62480000.                        62690000
    ENDER: END;                %                                        62692500
              IF FAT = 1 THEN GO TO FALL;                               62692600
              IF L1FLG = 1 THEN GO TO L1;                               62692700
        L2B:         IF EIND ! 0 THEN%IF ERROR MESSAGE THEN             62693000
              BEGIN  SYOUT (MSG[124],ISYMB,LGTH);%GET CURRENT SYMBOL.   62693500
L3B:                                                      COMMENT 10-9; 62693700
                     EIND ~ EIND & 124[16:40:8];                        62694000
                             %INCLUDE CURRENT SYMBOL IN EIND.           62694001
                     PSDX ~ 0;                                          62694250
                     ERP (EIND,0);  RECOV;  IF SCLAS = 7 THEN DN        62694500
                             %WRITE EIND,RECOV, IF "." THEN SCAN.       62694501
       END;                                                             62695000
     FALL:    IF FAT = 1 THEN                                           62695500
       BEGIN                                                            62700000
              EIND ~ 44 & 15[32:40:8] & 8[24:40:8];                     62705000
              ERP(EIND,0);                                              62710000
              EIND ~ 57 & 81[32:40:8];                                  62715000
              ERP(EIND,0);                                              62720000
      REC:    DN;  IF KEY ! 456 THEN GO TO REC;                         62725000
         END;                                                           62730000
         END;                                                           62735000
COMMENT **************************    DMP   **************************; 62935500
COMMENT SYNTAX CONTROL FOR MONITOR AND DUMP STATEMENT;                  62940000
PROCEDURE DMP;                 %DUMP / MONITOR PROCEDURE.               62945000
              BEGIN  LABEL D1,DE,DND;                                   62950000
           LABEL REC;                                                   62951000
              REAL T1;                                COMMENT 12-1-64;  62954000
                     INTEGER DSMBX;                                     62955000
              IF KEY = 913 THEN MON ~ TRUE ELSE MON ~ FALSE;            62956000
                             %IF IN MONITOR OR DUMP                     62956001
                     DN;  IF TYPE ! 6 THEN%IF NOT FILE THEN             62960000
              BEGIN  IF KEY ! 288 THEN%IF NOT PRINTER THEN              62965000
              BEGIN  EIND ~ 7 & 25 [32:40:8] & 8 [24:40:8];             62970000
                             %"FILE DECLARATION ERROR".                 62970001
                     GO TO DE  %GO TO # 63266000.                       62975000
              END;   IF PIODESC ! 0 THEN GO TO D1;                      62980000
                             %IF ALREADY PROCESSED THEN #63130000.      62980001
COMMENT SET UP NEW OCUR AND INFO ARRAY FOR PRINTER;                     62985000
                     T1 ~ CLOC;%SAVE CURRENT SYMBOL LOCATION            62990000
                     PIODESC ~ PRTCTR + 3;                              62995000
                             %SAVE READ/WRITE DESC LOCATION.            62995001
                     MSGTA ~ PRTCTR + 3;                                63000000
                             %SAVE READ/WRITE DESCR. LOCATION           63000001
                     OCUR ~ AVAIL;    AVAIL ~ AVAIL + 3;                63005000
                             %SAVE NEXT AVAIL DICTIONARY LOCATION       63005001
                     JCV (OCUR,J,K);  DICT [J,K] ~ 0 & 6 [1:43:5];      63010000
                             %SET OCUR TO FILE NAME TO LOOK             63010001
                     DICT [J,K+1] ~ 0;  DICT [J,K+2] ~ 0;               63015000
                             % LIKE NORMAL FILE DESCLARATION            63015001
                   CFIB ~ FIBX;%SAVE CURRENT FIB ARRAY INDEX.           63020000
                     IILNK (OCUR,IX);  MAKEFILE (0,0,OCUR,4,1,IX);      63025000
                             %SETS INFO LINK AND CREATES FILE           63025001
                   A~CFIB+11; FIB[A.[38:3],A.[41:7]]~1;                 63030000
                             %ENTRY .  SET RECORDS/BLOCK TO 1.          63030001
              A ~ CFIB + 13;                                            63031000
           FIB[A.[38:3],A.[41:7]].[ 1: 9] ~  1;                         63035000
                             %SET NUMB BUFFERS REQUIRED TO 1.           63035001
                   A ~ CFIB + 18;                                       63035100
           FIB[A.[38:3],A.[41:7]].[ 3:15] ~ 15;%SET BUFFER SIZE TO 15.  63035200
           FIB[A.[38:3],A.[41:7]].[33:15] ~ 15;                         63035300
                             %SET MAX RECORD LGTH TO 15.                63035301
                     JCV (OILNK (OCUR),J,K);%FD INFORMATION ENTRY IND%X 63040000
                     INFO [J,K].[4:10] ~ MSGTA;                         63045000
                             %I/O DESCRIPTOR INTO INFO.                 63045001
                   INFO[J,K+1].[44:4] ~ 4;%HARDWARE TYPE TO PRINTER     63050000
                     INFO [J,K+1].[1:15] ~ T1;                          63055000
                             %STORE CURRENT SYMBOL LOC IN INFO.         63055001
                     INFO [J,K+1].[16:10] ~ 15;  JCV(T1,T2,T3);         63060000
                             %SET RECORD SZ TO 15, GET TO SYMBOL        63060001
                     CHRTRAN (DICT [T2,T3],4,INFO [J,K+4],1,7);         63065000
                             %STORE "PRINTER" IN INFO ENTRY             63065001
                     FNFLG  ~  FALSE;%SET FILE NAME FLAG TO FALSE       63070000
                     SETIX (6);  GO TO D1                               63075000
                             %UPDATE IX BY 6, GO TO 63130000.           63075001
              END;                                                      63080000
                     PIODESC ~ IODESC;%SAVE READ/WRITE DESC LOCATION.   63081000
                 A~ CFIB+11; IF TECH>1 OR FIB[A.[38:3],A.[41:7]]        63085000
                     ! 1 THEN  %  NOT 1 THEN                            63085001
              BEGIN  EIND ~ 40 & 7 [32:40:8] & 47 [24:40:8];            63090000
                             %"ILLEGAL FILE TYPE"                       63090001
                     GO TO DE  %GO TO 62366000.                         63095000
              END;   JCV(OILNK(OCUR),J,K);%GET FD INFO ENTRY            63100000
                     IF INFO[J,K+1].[16:10] < 15 THEN                   63101000
                             %IF BUFFER SIZE < 15 THEN                  63101001
              BEGIN  EIND ~ 40 & 34[32:40:8] & 15[24:40:8];             63102000
                             %"ILLEGAL RECORD SIZE"                     63102001
                     GO TO DE  %GO TO 62366000.                         63103000
              END;                                                      63104000
                     IF MSGTA ! 0 THEN%IF ALREADY PROCESSED THEN        63105000
                   GO TO D1;   %GO TO 63130000.                         63105001
                     MSGTA ~ PRTCTR;    UPIT;                           63110000
                             %STORE PRT INDEX, UPDATE PRT COUNTER.      63110001
                     FNFLG  ~  TRUE ;%SET FILE NAME FLAG TRUE.          63120000
                   OPNAR(0,MSGTA,15);                          %CJC 073 63125000
                             %OPEN AN OUTPUT ARRAY                      63125001
       D1:                                                              63130000
                     DN; IF KEY ! 451 THEN%SCAN, IF NOT "(" THEN        63135000
              BEGIN  EIND ~ 9 & 5[32:40:8] &3[24:40:8];    GO TO DE     63140000
                             %"MISSING LEFT PARENTHESIS".               63140001
              END;   IF SMBL = 0 THEN%IF SMBL = 0 THEN                  63145000
              BEGIN  SMBL ~ PRTCTR;    UPIT                             63150000
                             %STORE PRT LOC IN SMBL, UPDATE PRTCTR      63150001
              END;   DSMBX ~ SMBX;  DMPCTR ~ 0;                         63155000
                             %STORE CURRENT SMBX,INITIALIZE DMPCTR      63155001
                     SCTRL;    DIAGLIST;%SCAN, CALL DIAGLIST            63160000
                 IF SMBX.[34:1] = 1 THEN                                63161000
         BEGIN                                                          63161100
      REC:    DN;  IF KEY ! 473 THEN GO TO REC;%IF NOT A PERIOD         63161200
              GO TO DND;                                                63161300
         END;                                                           63161400
                     IF PSDX = 0 THEN GO TO DND;                        63162500
                     IF KEY ! 456 THEN%IF NOT ")" THEN                  63165000
              BEGIN  EIND ~ 9 & 6[32:40:8] &3[24:40:8];    GO TO DE     63166000
                             %"MISSING RIGHT PARENTHESIS"               63166001
              END;   IF NOT MON THEN%IF IN DUMP STATEMENT               63167000
              BEGIN                                                     63169000
                     SCTRL;  IF PROLAB THEN                             63170000
                             %SCAN, IF PROLAB PROC TRUE THEN            63170001
              BEGIN  SMBX ~ SMBX + X;  IF SMBX.[40:8] > 240 THEN        63175000
                             %UPDATE SMB INDEX.                         63175001
              BEGIN  SMBX ~ SMBX + 255;                                 63180000
                                  SMBX.[40:8] ~ 0                       63185000
              END;   DMPCTR ~ DMPCTR - 1%DECREASE COUNTER BY 1.         63190000
              END; IF GETOUT THEN                              %CJC 001 63191000
              BEGIN RECOV;                                     %CJC 001 63192000
                   IF SCLAS = 7 THEN DN;                       %CJC 001 63193000
                   GO TO DND;                                  %CJC 001 63194000
              END;   IF KEY ! 467 THEN%IF NOT ":" THEN                  63195000
              BEGIN  EIND ~ 9 & 2[32:40:8]&23[24:40:8];    GO TO DE     63196000
                             %"MISSING SYNTAX OPERATOR".                63196001
              END;   DN;       %SCAN                                    63197000
                     IF TYPE = 5  THEN%IF TYPE = NUM LIT THEN           63200000
              BEGIN  IF SCLAS ! 6 THEN%IF SCAN CLASS ! INTEGER THEN     63205000
              BEGIN  EIND ~ 46 & 19[32:40:8] & 54[24:40:8];  GO TO DE   63206000
                             %"VALUE NOT INTEGER".                      63206001
              END;   JCV (A1+1,J,K);%GET TO 2ND WD OF DICT ENTRY.       63207000
                     DICT [J,K].[5:1] ~ 1;%SET TFLG TO 1.               63210000
                     DICT [J,K].[33:15] ~ ICV1 (ISYMB[0],4,0,LGTH)      63215000
                             %STORE INTEGER LIMIT.                      63215001
              END  ELSE                                                 63220000
              BEGIN      IF TYPE ! 8 OR OCLAS (OCUR) ! 3 OR             63225000
                             %IF NOT ELEM ITEM OR NOT NUMERIC           63225001
                     OSCALE (OCUR) ! 0 THEN%OR SCALED NUMBER THEN       63230000
              BEGIN  EIND ~ 40 & 46[32:40:8] & 11[24:40:8];  GO TO DE   63231000
                             %"ILLEGAL VALUE ASSIGNMENT"                63231001
              END;                                                      63232000
                     JCV (A1+1,J,K);  DICT [J,K].[5:1] ~ 0;             63235000
                             %GET TO DICT, SET TFLG TO ZERO.            63235001
                     DICT [J,K].[33:15] ~ OCUR                          63240000
                             %STORE LOC OF DUMP DATA NAME.              63240001
              END;   DICT [J,K+1] ~ DICT [J,K+1] & DMPCTR [8:38:10]     63245000
                             %STORE DMPCTR AND                          63245001
                     & DSMBX [18:33:15];%DSMBX IN DICT.                 63250000
              END;                                                      63251000
                     DN;  IF SCLAS ! 7 THEN%SCAN, IF NOT PERIOD THEN    63255000
              BEGIN  EIND ~ 79;    GO TO DE%"MISSING PERIOD".           63260000
              END ELSE DN;    GO TO DND;%ELSE SCAN, GO TO EXIT.         63265000
         DE:         SYOUT(MSG[124],ISYMB,LGTH);%STORE CURRENT SYMB.    63266000
                     EIND ~ EIND & 124[16:40:8];%SET UP ERROR MESSAGE.  63267000
                     ERP(EIND,0);  RECOV;  IF SCLAS = 7 THEN DN;        63268000
                             %PRINT ERROR MESSAGE, RECOV,               63268001
                             %IF PERIOD THEN SCAN.                      63268002
       DND:   END;             %EXIT.                                   63270000
COMMENT **************************  MONGEN  **************************; 63270500
                             %EMITS NECESSARY INLINE CODE FOR           63270501
PROCEDURE MONGEN (IOCUR,SQX,SRX);% MONITORED OR DUMPED ITEMS.           63275000
                   VALUE     IOCUR,SQX,SRX;%IOCUR - OCUR FOR ITEM.      63280000
                   INTEGER   IOCUR,SQX,SRX;                             63285000
                             %SQX - OD INDEX IF ITEM IS SUBSCRIPTE      63285001
              BEGIN            %SRX - CHAR INDEX IF SUBSCRIPTED ITEM    63290000
              DEFINE LFC = 294 #;                                 %TR60763291000
                     INTEGER E,F,MONFLG,DTOT,CPSDX,TLOC,DSMBX,     I,X2,63295000
                     X3,DSGN,DTYP,DLGTH,CHRS,DOCUR,DFSZ,DPX,DQX,DRX,    63300000
                     WRD, SMD,                                          63301000
           DMFLG,                                COMMENT 5/22/64;       63302000
                     DSCAL,  IP, VAL, SVB;                              63305000
             LABEL  DEX1, GU1,REE;          COMMENT 2/19/64;            63310000
                     LABEL MEX,ELEM,DU1,DEX,SETMD2,SMD2;                63315000
                     SMD ~ 0;                                           63316000
           DMFLG ~ 0;                            COMMENT 5/22/64;       63317000
                     T1 ~ OTYP  (IOCUR); MONFLG ~ 0;                    64060000
                             %T1 ~ ITEM TYPE, MONFLG ~ DUMP.            64060001
              IF T1 = 2 THEN   %IF A GROUP ITEM                         64065000
        BEGIN IF OCFLG(IOCUR) THEN GO TO ELEM                           64065200
            ELSE GO TO MEX;                                             64065400
        END;                   %                                        64066000
                     IF T1 = 7 THEN%IF RECORD NAME THEN                 64070000
              BEGIN  IF OELEF(IOCUR)%IF ELEMENTARY ITEM                 64075000
                     OR OCFLG(IOCUR)%OR SUBSCRIPTED                     64076000
                     THEN GO TO ELEM%THEN GO TO 64090000                64077000
                     ELSE GO TO MEX%ELSE GO TO 65794000.                64080000
              END;   IF (T1 = 8) OR (T1 = 18)  THEN                     64085000
                             %IF ELEM ITEM OR SPEC REGISTER THEN        64085001
       ELEM:  BEGIN  JCV (OILNK (IOCUR),E,F);%GET INFO ARRAY OF IOCUR.  64090000
                     IF INFO [E,F].[32:1] = 1 AND INFO [E,F+1].[3:1] ! 164095000
                             %IF DUMP AND NOT MONITOR FLAG              64095001
                     THEN GO TO MEX;%THEN GO TO 65794000.               64100000
                     IF INFO [E,F+1].[3:1] = 1 THEN                     64105000
                             %IF MONITOR FLAG ON THEN                   64105001
              BEGIN  DSMBX ~ INFO [E,F+2].[3:15]; MONFLG ~ 1; DTOT ~ 1; 64110000
                             %SAVE ITEM SMBX, MONFLG~MONITOR,           64110001
                             % DUMPTOTAL ~1.                            64110002
                   SVB ~ INFO[E,F+1].[32:4];                   %TR 86   64112500
                             %SAVE NUMBER OF SUBSCRIPT REQUIRED.        64112501
                     IF SVB > 10 THEN%IF SUBSCR > 10 THEN               64113000
              BEGIN  EIND ~ 55 & 81[32:40:8];  ERP(EIND,0);             64113500
                             %"SUBSCRIPT TRUNCATION".                   64113501
                     SVB ~ 10; %SUBSCRIPT ~ 10.                         64114000
              END;                                                      64114500
                     GO TO DU1 %GO TO 64320000.                         64115000
              END;                                                      64120000
                     GO TO MEX %GO TO 65794000.                         64130000
              END;   IF T1 ! 3 THEN%IF ITEM NOT A LABEL THEN            64135000
              BEGIN                                                     64140000
                     GO TO MEX %GO TO 65794000.                         64150000
              END;                                                      64155000
                     JCV (IOCUR,E,F);  CPSDX ~ DICT [E,F+2].[33:15];    64160000
                             %GET DICT LABEL ENTRY, SAVE PSDX.          64160001
COMMENT UPDATE PSD VALUE;      %EMIT CODE TO UPDATE PSD VALUE BY 1.     64165000
                     EMIL (LITC,CPSDX)     ;  EMIL (OPDC,PSD)     ;     64170000
                     EMIL (LITC,1)     ;      EMIL (OPR,ADD)     ;      64175000
                     EMIL (LITC,CPSDX)     ;  EMIL (DESC,PSD)     ;     64180000
                     EMIL (OPR,SND)     ;                               64185000
                     IF DICT [E,F+1].[6:1] ! 1 THEN                     64190000
                             %IF DUMPFLAG NOT ON THEN                   64190001
         BEGIN                 %EMIT TO BLANK PSD VALUE FROM STACK.     64195000
     GU1:          EMIL(OPR,DEL);                     COMMENT 12-1-64;  64195500
                     IF DICT [E,F+1].[7:1] ! 1 THEN                     64200000
                             %IF MONITOR FLAG NOT ON THEN               64200001
              GO TO MEX;       %GO TO  65794000.                        64215000
                     DSMBX ~ DICT [E,F].[18:15]; MONFLG ~ 1; DTOT ~ 1;  64225000
                             %SAVE ITEM SMBX,MONFLAG~MONITOR,           64225001
                             %  DUMPTOTAL ~1.                           64225002
                     GO TO DU1 %GO TO 64320000.                         64230000
              END;   IF DICT [E,F+1].[33:15] = 0 THEN                   64235000
                             %IF LABEL HAS NO DUMP LIMIT THEN           64235001
              GO TO GU1;       %                                        64240000
COMMENT PROCESS DUMP LABEL INDICATOR;                                   64260000
                             %IF ITEM IS DUMP LABEL EMIT CODE TO        64260001
                             %CHECK IF PSD VALUE = DUMP LIMIT.          64260002
                     T8 ~ DICT [E,F+1].[33:15];%SAVE DUMP LIMIT.        64265000
                     IF DICT [E,F+1].[5:1] = 1 THEN                     64270000
                             %IF T8 IS INTEGER THEN                     64270001
                     EMIL (LITC,T8)%EMIT T8 IN STACK                    64275000
                   ELSE VALU(T8,SEG,0,0,0);                             64280000
                             %ELSE T8 IS DATA NAME AND VALU1 PUTS       64280001
                             % AN INTEGER IN STACK.                     64280002
                     EMIL (OPR,EQL)     ;                               64285000
                             %EMIT TO COMPARE T8 WITH PSD VALUE.        64285001
                     TLOC ~ CREG;%SAVE SYLLABLE CTR TO FIX NEXT SYLL.   64290000
                     EMIL (LITC,0)     ;                                64295000
                   EMIL(OPR,LFC); % WD BRANCH IF TEST FAILS        TR60764300000
         COMMENT ZERO DUMP COUNTER;                                     64301000
                     EMIL(LITC,0); EMIL(LITC,CPSDX);                    64302000
                     EMIL(DESC,PSD); EMIL(OPR,STD);                     64303000
COMMENT PROCESS DUMP LIST;     %IF PSD VALUE = DUMP LIMIT EMIT CODE     64305000
                             % TO PROCESS THE DUMP LIST.                64305001
                     DSMBX ~ DICT [E,F+2].[18:15];                      64310000
                             %SAVE SMBX FOR 1ST ITEM IN DUMP LIST.      64310001
                     DTOT ~ DICT [E,F+2].[8:10];                        64315000
                             %SAVE TOTAL # ITEMS TO BE DUMPED.          64315001
       DU1:                                                             64315100
                   IF FNFLG THEN                                        64319500
              BEGIN EMIL(OPR,MKS); EMIL(LITC,0); EMIL(DESC,PIODESC);    64319600
                   EMIL(LITC,0); EMIL(DESC,MSGTA);        COMMENT 9-01; 64319700
                   EMIL(LITC,0); EMIL(LITC,15);           COMMENT 9-01; 64319750
                   EMIL(OPDC,OWORDTRAN);                                64319800
              END;                                                      64319900
                   FOR I ~ 1 STEP 1 UNTIL DTOT DO                       64320000
                             %LOOPS FROM HERE THRU 65820000             64320001
                             %  DTOT TIMES.                             64320002
       BEGIN  X2 ~ DSMBX.[35:5]; X3 ~ DSMBX.[40:8];                     64325000
                             %SAVE SMB ROW AND COLUMN INDEX.            64325001
                     DSGN ~ SMB [X2,X3].[5:3];%SAVE SMB SIGN TYPE.      64330000
                     DTYP ~ SMB [X2,X3].[8:3];%SAVE SMB ENTRY TYPE.     64335000
                     DLGTH ~ SMB [X2,X3].[11:6];                        64340000
                             %SAVE LENGTH OF SMB ENTRY.                 64340001
                     CHRS ~ SMB [X2,X3].[17:7];%SAVE # SMB SYMB CHARS.  64345000
                     IF  CHRS > 55 THEN CHRS ~ 55;                      64346000
                     WRD ~ CHRS DIV 8 + 1;                              64347000
                     IF MONFLG = 1 AND SMB[X2,X3].[4:1] ! 1             64350000
                             %IF MONITOR AND NOT A DUMP LABEL           64350001
                     THEN DLGTH ~ DLGTH + 1;%THEN ADD 1 TO DLGTH.       64355000
COMMENT BLANK OUTPUT LINE;     %EMIT CODE TO BLANK OUTPUT LINE.         64360000
                     EMIL (OPR,MKS)     ;%FROM HERE THRU 64385000.      64365000
                     EMIL (LITC,0)     ;                                64370000
                     EMIL(DESC,PIODESC);                                64375000
                   EMIL(LITC,0);                          COMMENT 9-01; 64377000
                     EMIL (LITC, 14 )     ;                             64380000
                     EMIL (OPDC,OCLRWDSB)     ;                         64385000
                   EMIL (LITC,CHRS);%                                   64490000
                     EMIL (OPR,MKS)     ;                               64495000
                     EMIL (LITC,X2)     ;                               64500000
                     EMIL (DESC,SMBL)     ;                             64505000
                     EMIL (OPR,LOD)     ;                               64510000
                     EMIL (LITC,X3)     ;                               64515000
                     EMIL (OPR,CDC)     ;                               64520000
                   IF DTYP = 5 OR DTYP = 6 THEN                         64524000
                   EMIL (LITC,2)  ELSE EMIL (LITC,0);                   64525000
                     EMIL (LITC,0)     ;                                64530000
                     EMIL(DESC,PIODESC);                                64535000
                     EMIL (OPDC,MD1)     ;                              64540000
                             %MOVES SMB SYMB TO OUTPUT LINE.            64540001
                   EMIL(OPR,DEL);                         COMMENT 8-7;  64545000
              IF DTYP = 6 THEN GO TO DEX;                               64550000
                   IF DTYP =  5 THEN                                    64563000
              BEGIN                                                     64564000
                     IF MONFLG = 1 THEN DOCUR ~ IOCUR                   64565000
                             %IF MONITOR THEN USE IOCUR                 64565001
                   ELSE DOCUR ~ SMB [X2,X3+DLGTH-1].[33:15];            64570000
                             %ELSE USE SMB OCUR FOR DOCUR.              64570001
                     JCV (DOCUR,J,K);%GET DICT ENTRY FOR DOCUR.         64575000
                     CPSDX ~ DICT [J,K+2].[33:15];%SAVE PSD INDEX.      64580000
                     EMIL (LITC,CPSDX)     ;                            64585000
                     EMIL (OPDC,PSD)     ;                              64590000
                     EMIL (OPR,MKS)     ;                               64595000
                     EMIL (LITC,1)     ;                                64600000
                     EMIL (LITC,1)     ;                                64605000
                     EMIL (LITC,8)     ;                                64610000
                     EMIL (LITC,0)     ;                                64615000
                     EMIL (LITC,WRD);                                   64620000
                     EMIL(DESC,PIODESC);                                64625000
                     EMIL (LITC,6  );                                   64630000
                     EMIL (OPDC,MD4)     ;                              64635000
                             %MOVES (PSD VALUE) TO OUTPUT LINE.         64635001
                   EMIL(OPR,DEL);                         COMMENT 8-7;  64640000
                     GO TO DEX %GO TO 65760000.                         64655000
              END;   DFSZ ~ SMB[X2,X3+DLGTH-2].[2:15];                  64660000
                             %SAVE VALUE FIELD SIZE.                    64660001
     COMMENT TEST FOR SUBSCRIPTED ITEM;%IF ITEM IS SUBSCRIPTED, CODE IS 64730000
                     IF SVB > 0 THEN%EMITTED FROM                       64730100
              BEGIN  EMIL(LITC,SVB);  EMIL(OPDC,PSD);                   64730200
                             %HERE THRU 64733600 TO PUT                 64730201
                     EMIL(OPR,MKS);  EMIL(LITC,2);                      64730300
                             %[SUBSCRIPT(S)] IN OUTPUT LINE.            64730301
             EMIL (LITC,2);  EMIL (LITC,4);    COMMENT 5/19/64;         64730400
                     EMIL (LITC,0  );   EMIL(LITC,WRD);                 64730500
                     EMIL (DESC,PIODESC);  EMIL(LITC,4);                64730600
                   EMIL(OPDC,MD4); EMIL(OPR,DEL);                       64730700
                             %MD4 MOVES "[SUB]" TO OUTPUT LINE.         64730701
                     IF SVB > 1 THEN%IF MORE THAN ONE SUBSCRIPT THEN    64730800
              BEGIN                                                     64730900
      COMMENT INITIALIZE COUNTERS FOR SVB - 1 LOOP;                     64731000
                     EMIL(LITC,SVB-1);  EMIL(LITC,11);  EMIL(DESC,PSD); 64731100
                             %INITIALIZE COUNTER TO VALUE OF            64731101
                     EMIL(OPR,STD);%  SVB-1 FOR LOOPING.                64731200
                     EMIL (LITC,8  );   EMIL(LITC,12 );  EMIL(DESC,PSD);64731300
                             %INITIALIZE COUNTER TO EIGHT FOR           64731301
                     EMIL(OPR,STD);%  SPACING IN THE OUTPUT LINE.       64731400
     COMMENT EMIT FOR MD4;                                              64731500
                     EMIL(LITC,11);    EMIL(OPDC,PSD);                  64731600
                     EMIL(OPDC,PSD);                                    64731650
                     EMIL(OPR,MKS);  EMIL(LITC,2);                      64731700
             EMIL (LITC,0);  EMIL (LITC,4);    COMMENT 5/19/64;         64731800
                     EMIL (LITC,1  );   EMIL(LITC,WRD);                 64731900
                     EMIL(DESC,PIODESC); EMIL(LITC,12); EMIL(OPDC,PSD); 64732000
                   EMIL(OPDC,MD4); EMIL(OPR,DEL);                       64732100
                             %MD4 MOVES ",SUB]" TO OUTPUT LINE.         64732101
       COMMENT UPDATE CTR12;                                            64732200
                     EMIL(LITC,12); EMIL(OPDC,PSD); EMIL(LITC,6);       64732300
                             %THIS CODING UPDATES A COUNTER BY SIX      64732301
                     EMIL(OPR,ADD); EMIL(LITC,12); EMIL(DESC,PSD);      64732400
                             %  FOR SPACING OF THE OUTPUT LINE.         64732401
                     EMIL(OPR,STD);                                     64732500
       COMMENT UPDATE CTR11;                                            64732600
                     EMIL(LITC,11); EMIL(OPDC,PSD); EMIL(LITC,1);       64732700
                             %THIS CODING DECREASES A COUNTER,          64732701
                     EMIL(OPR,SUB); EMIL(LITC,11); EMIL(DESC,PSD);      64732800
                             %  WHICH CONTROLS THE LOOPING, BY ONE      64732801
                     EMIL(OPR,SND);                                     64732900
     COMMENT TEST IF FINISHED SVB - 1 LOOP;                             64733000
                     EMIL(LITC,0);  EMIL(OPR,EQL);                      64733100
                             %THIS CODING CHECKS TO SEE IF SVB-1        64733101
                     EMIL(LITC,32);  EMIL(OPR,BBC);                     64733200
                             %  LOOPS ARE COMPLETED.                    64733201
              END;                                                      64733300
                     CHRS ~ WRD|8 + 9 + 6|(SVB-1);                      64733400
                             %COMPUTE CHARACTER COUNTER.                64733401
                   IF WRD ~ (CHRS DIV 8 + 1) = 15 THEN         %TR 777  64733500
              BEGIN EIND ~ 2 & 8 [32:40:8];                    %TR 777  64733520
                   ERP(EIND, "MONITOR");                       %TR 777  64733540
                   GO TO DEX;  % 65760000                      %TR 777  64733560
              END; END;                                        %TR 777  64733580
                   IF CHRS + 15 + DFSZ > 119 THEN              %TR 777  64733600
%                       IF CHRS + 15 + FIELD SIZE > 119        %TR 777  64733620
              BEGIN EIND ~ 2 & 8 [32:40:8];                    %TR 777  64733640
                   ERP(EIND, "MONITOR");                       %TR 777  64733660
                   GO TO DEX;  % 65760000                      %TR 777  64733680
              END;                                             %TR 777  64733690
              IF MONFLG = 1 THEN DOCUR ~ IOCUR                          64733800
           ELSE DOCUR ~ SMB[X2,X3+DLGTH-1].[33:15];                     64733820
              OAS(PX,QX,RX,DOCUR);                                      64733840
              IF PX = PIODESC THEN PX ~ MSGTA;                          64733860
                     IF DTYP = 0 THEN                                   64740000
                             %IF SMB TYPE IS ALPHA, AN, OR ED NUM       64740001
              BEGIN  IF DSGN = 3 THEN%IF ITEM IS DATA-NAME SIGNED THEN  64745000
              BEGIN  DPX ~ SMB [X2,X3+DLGTH-2].[25:10];                 64750000
                             %SAVE DN SIGNED PRT INDEX.                 64750001
                     DQX ~ SMB [X2,X3+DLGTH-2].[35:10];                 64755000
                             %SAVE DN SIGNED WORD INDEX.                64755001
                     DRX ~ SMB [X2,X3+DLGTH-2].[45:3];                  64760000
                             %SAVE DN SIGNED CHARACTER INDEX.           64760001
                     EMIL (OPR,MKS)     ;                               64765000
                             %CODING FROM HERE THRU 64845000            64765001
                     EMIL (LITC,DQX)     ;                              64770000
                             %  CAUSES THE DN SIGN TO BE MOVED TO       64770001
                     EMIL (DESC,DPX)     ;%  THE OUTPUT LINE.           64775000
                     EMIL (LITC,DRX)     ;                              64780000
                     EMIL (LITC,WRD);                                   64785000
                     EMIL(DESC,PIODESC);                                64790000
                     EMIL (LITC,4  );                                   64795000
                   EMIL(LITC,0); EMIL(LITC,0);            COMMENT 9-01; 64797000
                     EMIL (LITC,1)     ;                                64800000
                     EMIL (OPDC,OCHRTRAN)     ;                         64805000
         END;                  %                                        64845000
                   IF DFSZ > 63 THEN        COMMENT 2/19/64;%           64850000
              BEGIN  F ~ 1;  DFSZ ~ DFSZ - 63;%                         64851000
             END  ELSE F ~ 0;               COMMENT 2/19/64;            64852000
       REE:                                 COMMENT 2/19/64;%           64855000
                     EMIL(OPR,MKS);%    OUTPUT AREA.                    64855100
              IF SVB > 0 THEN  %IF ITEM IS SUBSCRIPTED THEN             64855250
              BEGIN  EMIL(OPDC,SQX); EMIL(DESC,PX); EMIL(OPDC,SRX)      64855500
                             %USE SQX AND SRX TO GET TO VALUE.          64855501
              END  ELSE                                                 64855750
              BEGIN            %CODING FROM 64745000 THRU 64915000      64860000
                     EMIL(LITC,QX)     ;                                64865000
                             %  CAUSES AN ALPHA, AN, OR EDITED NUM      64865001
                     EMIL(DESC,PX)     ;                                64870000
                             %  FIELD TO BE MOVED TO THE OUTPUT         64870001
                     EMIL(LITC,RX)     ;                                64875000
                             %  LINE ALONG WITH ITS DN SIGN,IF ANY      64875001
              END;                                                      64875500
                     EMIL (LITC,WRD);                                   64880000
                     EMIL(DESC,PIODESC);                                64885000
                     EMIL (LITC,6  );                                   64890000
                     EMIL(LITC,0);  EMIL(LITC,F);     COMMENT 11-5-64;  64892000
                     EMIL (LITC,DFSZ)     ;                             64895000
                     EMIL (OPDC,OCHRTRAN)     ;                         64900000
                     GO TO DEX %GO TO 65760000.                         64915000
        END;                   %                                        64920000
                     IF DTYP = 1 THEN                                   64935000
                             %IF SMB TYPE IS NUM INTEGER DISPLAY        64935001
              BEGIN  SMD ~ 1;  GO TO SETMD2                             64936000
                             %SET EXIT FLAG, GO TO 65285000.            64936001
              END;                                                      64937000
                     IF DTYP = 2 OR DTYP = 4 THEN                       65170000
                             %IF SMB TYPE IS NUM INTEGER CMP OR         65170001
              BEGIN  IF SVB > 0 THEN%  NUM SCALED CMP THEN CODING FROM  65171000
              BEGIN  IF DFSZ > 11 THEN                                  65172000
                             %  65171000 THRU 65270000 WILL MOVE        65172001
              BEGIN  EMIL(OPDC,SQX); EMIL(LITC, 1); EMIL(OPR ,ADD) ;    65173000
                             %  THIS FIELD WITH ANY SIGN TO THE         65173001
                     EMIL(OPDC,PX);%  OUTPUT LINE.                      65173500
        END;  EMIL(OPDC,SQX);                                           65174000
              END  ELSE                                                 65174500
              BEGIN  IF DFSZ > 11 THEN%DOUBLE PRECISION CHECK.          65175000
              BEGIN  EMIL ( LITC,QX+1)     ;                            65180000
                     EMIL (OPDC,PX)                                     65185000
              END;   EMIL (LITC,QX)     ;                               65190000
        END;                                                            65191000
                     EMIL (OPDC,PX)     ;                               65195000
                     EMIL (OPR,MKS)     ;                               65200000
                     EMIL (LITC,0)     ;                                65205000
                     EMIL (DESC,TARRLOC)     ;                          65210000
                     EMIL  (LITC,0)  ;                                  65215000
                     IF DSGN = 2 THEN%IF J SIGNED CHECK.                65220000
                     EMIL (LITC,1)         ELSE                         65225000
                     EMIL (LITC,0)     ;                                65230000
                     EMIL (LITC,DFSZ)     ;                             65235000
                     EMIL (OPDC,OCV1L)     ;                            65240000
                     IF DFSZ > 11 THEN                                  65245000
                   EMIL(OPR,DEL);                         COMMENT 8-7;  65250000
                   EMIL(OPR,DEL);                         COMMENT 8-7;  65255000
              IF DTYP = 2 THEN SMD ~ 1;%IF DTYP IS NUM SCALED CMP THEN  65260000
              GO TO SMD2;      %GO TO 65300000.                         65265000
              END;             %                                        65270000
                     IF DTYP ! 3 THEN%IF SMB TYPE IS NOT NUM SCALED     65275000
              GO TO DEX1;      %  DISPLAY THEN GO TO 65795000.          65280000
       SETMD2:       IF DFSZ > 63 THEN                    COMMENT 4-1;  65281000
     BEGIN  F ~ 1;  DFSZ ~ DFSZ - 63;  GO TO REE;     COMMENT 11-5-64;  65282000
             END;    EMIL(OPR,MKS);                       COMMENT 4-1;  65285000
              IF SVB > 0 THEN                                           65286000
              BEGIN  EMIL(OPDC,SQX); EMIL(DESC,PX); EMIL(OPDC,SRX)      65287000
              END  ELSE                                                 65288000
              BEGIN  EMIL(LITC, QX);                                    65290000
                     EMIL(DESC,PX);   EMIL(LITC,RX);                    65291000
              END;                                                      65291500
                     EMIL(LITC,0);    EMIL(DESC,TARRLOC);               65292000
                   EMIL(LITC,0); EMIL(LITC,0);            COMMENT 9-01; 65292500
                     EMIL(LITC,0);    EMIL(LITC,DFSZ);                  65293000
                     EMIL(OPDC,OCHRTRAN);                               65295000
         SMD2:    DSCAL ~ SMB[X2,X3+DLGTH-2].[18:7];                    65300000
                             %SAVE SMB ENTRY SCALE.                     65300001
              BEGIN            %CODING FROM 65300000 THRU 65755000      65305000
              LABEL EXX, SMD21;                                         65306000
                       IF SMB[X2,X3+DLGTH-2].[17:1] = 1 OR DSCAL > DFSZ 65310000
                             %  WILL MOVE A SCALED FIELD WITH ANY       65310001
                     OR SMD = 1 THEN%  SIGN TO THE OUTPUT LINE.         65315000
              E ~1 ELSE E ~ 0;                                          65320000
              EMIL (OPR,MKS);                                           65325000
              IF E = 0 THEN    %                                        65330000
        BEGIN IP ~ DFSZ-DSCAL;                                          65335000
              IF IP { 0 THEN EMIL(LITC,0)                               65340000
            ELSE EMIL(LITC,IP-1);                                       65345000
        END  ELSE EMIL(LITC,0);                                         65345500
              IF DSGN = 1 OR DSGN = 2 THEN%IF SIGNED                    65350000
              BEGIN  EMIL (LITC,0)     ;                                65355000
                     EMIL (DESC,TARRLOC)     ;                          65360000
              IF DSGN = 1 THEN %IF "S" SIGN                             65360500
              EMIL(LITC,DFSZ-1) ELSE EMIL(LITC,0);                      65365000
                   EMIL (LITC,1);                                       65370000
              GO TO SMD21;     %                                        65375000
         END;                                                           65380000
              IF DSGN = 3 THEN %IF DATA-NAME SIGNED CHECK.              65400000
              BEGIN  DPX ~ SMB [X2,X3+DLGTH-2].[25:10];                 65405000
                     IF DPX = PIODESC THEN DPX ~ MSGTA;                 65406000
                     DQX ~ SMB [X2,X3+DLGTH-2].[35:10];                 65410000
                     DRX ~ SMB [X2,X3+DLGTH-2].[45:3];                  65415000
                     EMIL (LITC,DQX)     ;                              65420000
                     EMIL (DESC,DPX)     ;                              65425000
                     EMIL (LITC,DRX)     ;                              65430000
              EMIL (LITC,1);  GO TO SMD21;                              65435000
              END;   EMIL (LITC,0)     ;                                65440000
              EMIL (LITC,0);   EMIL (LITC,0);                           65440100
              EMIL(LITC,0);  EMIL(LITC,0);                              65441000
     SMD21:                                                             65442000
              IF E = 1 OR (E=0 AND DTYP!3) THEN                         65443000
        BEGIN EMIL (LITC,0);                                            65444000
                     EMIL (DESC,TARRLOC)     ;                          65445000
                     EMIL (LITC,0)     ;                                65450000
        END ELSE                                                        65451000
         BEGIN  OAS(PX,QX,RX,DOCUR);   COMMENT  2/18/64;                65451500
              IF PX = PIODESC THEN PX ~ MSGTA;                          65452000
              IF SVB > 0 THEN                                           65452500
        BEGIN EMIL(OPDC,SQX); EMIL(DESC,PX); EMIL(OPDC,SRX);            65453000
        END  ELSE                                                       65453500
        BEGIN EMIL(LITC, QX); EMIL(DESC,PX); EMIL(LITC, RX);            65454000
        END;                                                            65454400
        END;                                                            65454600
              IF E = 1 THEN                                             65454800
        BEGIN                                                           65454900
                     EMIL (LITC,DFSZ)     ;                             65455000
                     EMIL (LITC,0)     ;                                65460000
        END  ELSE                                                       65461000
        BEGIN                                                           65462000
              EMIL (LITC,IP);  EMIL (LITC,1);                           65463000
        END;                                                            65464000
                     EMIL (LITC,WRD);                                   65465000
                     EMIL(DESC,PIODESC);                                65470000
                     EMIL (LITC,4  );                                   65475000
              IF E = 1 THEN EMIL(LITC,0) ELSE EMIL(LITC,DSCAL);         65480000
                     EMIL (OPDC,MD2)     ;                              65485000
              IF SMD = 1 OR E = 0 THEN GO TO EXX;                       65486000
                             %IF EXIT, GO TO 65755000.                  65486001
                     IP ~ DFSZ + 9;                                     65490000
                     IF IP > 63 THEN IP ~ 63;                           65491000
                     EMIL (OPR,MKS)     ;                               65495000
                     EMIL (LITC,WRD);                                   65500000
                     EMIL(DESC,PIODESC);                                65505000
                     EMIL (LITC,IP );                                   65510000
                     EMIL (LITC,DSCAL)     ;                            65515000
                       IF SMB[X2,X3+DLGTH-2].[17:1] = 1 THEN            65520000
                     EMIL (LITC,44)         ELSE                        65525000
                     EMIL (LITC,16)  ;                                  65530000
              EMIL (OPDC,MD3); %MD3 MOVES "P+/-NN" TO OUTPUT LINE.      65535000
         EXX: END;                                                      65755000
       DEX:                                                             65760000
                     EMIL(OPR,MKS);    EMIL(LITC,1);                    65765000
                             %CODING FROM HERE THRU 65790000            65765001
                     EMIL(LITC,2);     EMIL(LITC,0);                    65770000
                             %  CAUSES THE  OUTPUT LINE TO BE           65770001
                     EMIL(LITC,15);    EMIL(LITC,PIODESC);%  WRITTEN.   65775000
                     EMIL(DESC,10);                                     65780000
                     EMIL(LITC,1 );                                     65785000
                     EMIL(OPDC,RWR);    GO TO DEX1;                     65790000
       MEX:          MONFLG ~ 1;%SET MONFLG TO MONITOR.                 65794000
           DMFLG ~ 1;                            COMMENT 5/22/64;       65794500
         DEX1:       IF MONFLG ! 1 THEN%IF NOT MONITOR THEN             65795000
              BEGIN  DSMBX ~ DSMBX + DLGTH;%UPDATE DUMP SMB INDEX.      65800000
                                      IF DSMBX.[40:8] > 240 THEN        65805000
              BEGIN  DSMBX ~ DSMBX + 255;  DSMBX.[40:8] ~ 0             65810000
              END                                                       65815000
              END                                                       65820000
              END;   IF MONFLG ! 1  THEN%IF NOT MONITOR THEN            65825000
              BEGIN WHILE CREG.[45:3]!0 DO EMIL (DIA,0);%WD ADJUST TR60765830000
                   VAL:=(CREG+4-TLOC) DIV 8;                      %TR60765831000
             EMIT (LITC,VAL,TLOC);     COMMENT 1/15/64;                 65835000
                             %FIX UP 64295000.                          65835001
              END;                                        COMMENT 5-21; 65836000
                     IF FNFLG THEN%IF FNFLG WAS TRUE IN DMP THEN        65837000
       BEGIN IF DMFLG ! 1 THEN                   COMMENT 5/22/64;       65837500
              BEGIN  EMIL(OPR,MKS);                                     65838000
                             %EMIT CODE FROM HERE THRU 65841000 TO      65838001
                     EMIL(LITC,0);    EMIL(DESC,MSGTA  );               65839000
                             %  TRANSFER CONTENTS OF MSGTA BACK TO      65839001
                     EMIL(LITC,0);    EMIL(DESC,PIODESC);               65840000
                             %  OUTPUT AREA.                            65840001
                   EMIL(LITC,0);                          COMMENT 9-01; 65840500
                     EMIL(LITC,15);    EMIL(OPDC,OWORDTRAN);            65841000
              END;                                                      65842000
         END;                          COMMENT 1/15/64;                 65843000
              END;                                                      65845000
 COMMENT **************************   DISPLA   ************************;65845500
 PROCEDURE DISPLA;             %PROCEDURE DISPLA GENERATES CODE TO      65850000
             BEGIN LABEL D1,D2,D3,XITD;                                 65855000
                             %    WRITE ON THE MESSAGE PRINTER          65855001
                   LABEL DCOUT,NORM,NOTLEGAL;                           65856000
                   LABEL FINCODE;                              %CJC 052 65856100
                   REAL  S1,S2,S3,S4; % FOR SUBSCRIPTED DISPLAY %TR 739 65857000
                   REAL J,K,M; %    FOR VERBS GO, DISPLAY AND STOP.     65860000
                   INTEGER CHRS, L, T10;                                65860500
                   CHRS ~ 8;     COMMENT  1-30;                         65865000
                   EMIL(OPR,MKS);  EMIL(LITC,0);                        65870000
                             %EMIT CODE TO CLEAR I/O AREA               65870001
                   EMIL(DESC,ADIO); EMIL(LITC,0);         COMMENT 9-01; 65900000
                   EMIL(LITC,23);                         COMMENT 9-01; 66000000
                   EMIL(OPDC,OCLRWDSB);                                 66005000
                   T10 ~ -2;  % FOR FIRST TIME ONLY            %CJC 052 66005100
                   IF T1 = "GOTO" THEN GO TO D3;                        66005400
                   T6 ~ SMBX.[35:5];  T7 ~ SMBX.[40:8];%                66005500
                   IF T1 ! "STOP" THEN%                                 66010000
             BEGIN                                                      66015000
         D1:       T6~ SMBX.[35:5];  T7 ~ SMBX.[40:8];                  66015500
                   IF CHRS > 176 THEN                                   66020000
         COMMENT OPERAND SIZE ERROR;                      COMMENT 8-07; 66025000
                             %"OPERAND SIZE ERROR"                      66025001
              BEGIN ERP1(22,15,8,0); GO TO XITD;          COMMENT 8-07; 66030000
              END; DN;                                         %CJC 060 66035000
                   IF KEY = 502 THEN DN;    % "AND"            %CJC 060 66036000
                   IF TYPE ! 5 THEN GO TO D2; %NOT A LITERAL   %CJC 060 66037000
             END;  IF T7 > 240 THEN%TEST FOR END OF ROW IN SMB          66040000
             BEGIN SMBX ~ SMBX + 255; SMBX.[40:8] ~ 0; T7 ~ 0; T6~T6+1; 66045000
             END;  IF LGTH > 59 THEN                                    66050000
             BEGIN CHRTRAN(ISYMB,4,SMB[T6,T7],4,59);                    66050500
                   CHRTRAN(ISYMB,63,SMB[T6,T7],63,LGTH-59)              66055000
             END   ELSE CHRTRAN(ISYMB,4,SMB[T6,T7],4,LGTH);             66060000
                   SMBX ~ SMBX + (LGTH+3) DIV 8 + 1; GO TO D3;          66065000
D2:                IF TYPE = 1 AND CAT = 3 THEN                %CJC 051 66065100
              BEGIN IF KEY = 522 THEN M ~ "9" ELSE             %CJC 051 66065200
         IF KEY = 541 THEN M ~ """ ELSE     % KEY = QUOTE       %TR-125566065250
                   IF KEY = 550 OR KEY = 528 THEN M ~ " " ELSE %CJC 051 66065300
                   IF KEY = 501 THEN GO TO D1 ELSE             %CJC 051 66065400
                   IF KEY ! 344 THEN                           %CJC 051 66065500
              BEGIN                                            %CJC 051 66065600
NOTLEGAL:          SYOUT(MSG[124],ISYMB,LGTH);                 %CJC 051 66065700
                   ERP1(IF FOUND THEN 40 ELSE 13,22,124,0);    %CJC 051 66065800
         % ILLEGAL OR UNIDENTIFIED OPERAND XXXX                %CJC 051 66065900
                   GO TO XITD;                                 %CJC 051 66066000
              END; LGTH ~ 1;                                   %CJC 051 66066100
                   CHRTRAN(M,7,SMB[T6,T7],4,1);                %CJC 051 66066200
                   SMBX ~ SMBX + 1;                            %CJC 051 66066300
                   GO TO D3;                                   %CJC 051 66066400
              END;                                             %CJC 051 66066500
                   IF NOT FOUND THEN                           %CJC 052 66066600
                   IF T10 < 0 THEN GO TO NOTLEGAL              %CJC 052 66066700
                   ELSE GO TO FINCODE;                         %CJC 052 66066800
                   IF TYPE = 2 OR TYPE = 7 OR TYPE = 8         %CJC 051 66066900
                        OR TYPE = 9 THEN                       %CJC 051 66067000
              BEGIN  IF USAGE ! 0 AND TYPE = 8 THEN%IF NOT DISPLAY      66070320
              BEGIN  IF SIZE > 11 THEN                                  66070322
              BEGIN  EMIL(LITC,QX+1);  EMIL(OPDC,PX);                   66070323
              END;  EMIL(LITC,QX);  EMIL(OPDC,PX);                      66070324
                   IF SCALE ! 0 THEN                                    66070325
                   IF SIZE < 12 THEN                           %CJC 049 66070326
              BEGIN  EMIL(LITC,STDLOC);  EMIL(OPR,ISN);                 66070330
              END; EMIL(OPR,MKS); EMIL(LITC,CHRS DIV 8);                66070340
                   EMIL(DESC,ADIO); EMIL(LITC,(2+L~CHRS MOD 8));        66070342
                                 EMIL(LITC,1); EMIL(LITC,SIZE);         66070345
                   IF SIZE > 8 THEN EMIL(OPDC,OCV1L) ELSE               66070350
                   EMIL(OPDC,OC1L); EMIL(OPR,DEL);%"ILLEGAL USAGE XXXX" 66070360
                   IF SIZE > 11 THEN EMIL(OPR,DEL);                     66070361
                   EMIL(OPR,MKS);  EMIL(LITC,L);                        66070362
                   EMIL(LITC,CHRS DIV 8);                               66070364
                                 EMIL(DESC,ADIO); EMIL(OPR,CMN);        66070365
                   SGMTLVL ~ SGMTLVL + 1;                               66070368
                   CEMLT(1,RSA); CEMLT(2,SFS); CEMLT(2,CRF);            66070370
                   CEMLT(0,SFS); CEMLT(1,BIT); CEMLT(8,JFC);            66070372
                   CEMLT(1,RDA); CEMLT(2,CRF); CEMLT(0,SFD);            66070376
                   CEMLT(1,TRP); CEMLT(0,44); CEMLT(1,SFD);             66070380
                   CEMLT(1,BIR); CEMLT(5,JFW); CEMLT(1,RDA);            66070382
                   CEMLT(2,CRF); CEMLT(0,SFD); CEMLT(1,TRP);            66070386
                   CEMLT(0,16); CEMLT(0,CMX);                           66070390
                   SGMTLVL ~ SGMTLVL - 1;                               66070395
              END ELSE                                                  66070400
              BEGIN T10 ~ IF TYPE ! 8 THEN                     %CJC 044 66095000
                   MAPSZ(OCUR) ELSE SIZE;                      %CJC 044 66095100
                   EMIL(OPR,MKS);                               %TR 739 66095200
                   IF SUBS = 0 THEN                             %TR 739 66095300
              BEGIN EMIL(LITC,QX);                              %TR 739 66095400
                   EMIL(DESC,PX);      EMIL(LITC,RX);           %TR 739 66095500
              END  ELSE                                         %TR 739 66095600
              BEGIN S1 ~ CLASS;        S2 ~ SIGNED;             %TR 739 66095700
                   S3 ~ CHRS;          S4 ~ SIZE;               %TR 739 66095800
                   J ~ PX;             HQX ~ 0;                 %TR 739 66095900
                   SUBLST;                                      %TR 739 66096000
                   EMIL(DESC,J);       EMIL(OPR,XCH);           %TR 739 66096100
                   CLASS ~ S1;         SIGNED ~ S2;             %TR 739 66096200
                   CHRS ~ S3;          SIZE ~ S4;               %TR 739 66096300
              END;                                              %TR 739 66096400
                   IF TYPE ! 8 OR CLASS ! 3 OR                 %CJC 047 66096500
                   (CLASS = 3 AND SIGNED = 0) THEN             %CJC 047 66096550
              BEGIN EMIL(LITC,CHRS DIV 8);                      %TR 739 66096600
                   EMIL(DESC,ADIO);                             %TR 739 66096700
                   L ~ CHRS MOD 8;     EMIL(LITC,L);            %TR 739 66096800
              END  ELSE                                         %TR 739 66096900
              BEGIN EMIL(LITC,0); EMIL(DESC,TARRLOC);     COMMENT 9-01; 66097000
                   EMIL(LITC,0);                          COMMENT 9-01; 66100000
              END;             %                                        66100005
                   EMIL(LITC,T10 DIV 3969);               COMMENT 9-01; 66100010
                   EMIL(LITC,(T9~T10 MOD 3969) DIV 63);   COMMENT 9-01; 66100015
                   EMIL(LITC,T9 ~ T9 MOD 63);                  %CJC 048 66100020
                   EMIL(OPDC,OCHRTRAN);                   COMMENT 9-01; 66100025
                   IF TYPE = 8 THEN                            %CJC 047 66100029
                   IF CLASS = 3 AND SIGNED ! 0 THEN%IF SIGNED NUMERIC   66100030
             BEGIN EMIL(OPR,MKS);                                       66100040
                   IF SIGNED = 1 THEN%IF"S" THEN                        66100070
             BEGIN EMIL(LITC,0); EMIL(DESC,TARRLOC);                    66105000
                   EMIL(LITC,SIZE-1);                                   66110000
         END; IF SIGNED = 2 THEN%IF"J" SIGN                             66115000
             BEGIN EMIL(LITC,0); EMIL(DESC,TARRLOC);                    66120000
                   EMIL(LITC,1);                                        66125000
             END;  IF SIGNED = 3 THEN%IF DATA-NAME SIGN                 66130000
             BEGIN JCV(OILNK(OCUR),J,K);                  COMMENT 4-7;  66135000
                   IF NOT SIGNISDN(INFO[J,K+3].[18:15])        %TR 410  66136000
                   THEN GO TO D1;                              %TR 410  66137000
                   OAS(PX,QX,RX,INFO[J,K+3].[18:15]);                   66145000
                   EMIL(LITC,QX); EMIL(DESC,PX);                        66150000
                   EMIL(LITC,RX);                                       66150001
             END;  EMIL(LITC,0);  EMIL(DESC,TARRLOC);                   66150002
                   EMIL(LITC,SIZE);         %F-3 = NR OF NUMERIC CHRS   66150005
                   EMIL(LITC,L~CHRS MOD 8); %F-2 = CHR OFFSET IN OUTPUT 66150010
                   EMIL(LITC,CHRS DIV 8);   %                           66150015
                   EMIL(DESC,ADIO);         %F-1 = BUFFER AREA ADDRESS  66150020
                   EMIL(OPR,CMN);                                       66150025
                   SGMTLVL ~ SGMTLVL + 1;                               66150030
                   CEMLT(2,CRF);       CEMLT(0,SFD);                    66150035
                   CEMLT(6,RSA);       CEMLT(5,CRF);                    66150040
                   CEMLT(0,SFS);       CEMLT(1,TRN);%TFFF=1 IF NEGATIVE 66150045
                   CEMLT(1,SRD);       CEMLT(3,JFC);                    66150050
                   CEMLT(2,TRP);       CEMLT(48,44);   %"-"             66150055
                   CEMLT(2,JFW);       CEMLT(2,TRP);                    66150060
                   CEMLT(48,16);       CEMLT(1,SFD);%" +"               66150065
                   CEMLT(2,SDA);       CEMLT(4,RSA);                    66150070
                   CEMLT(3,CRF);       CEMLT(0,TRN);                    66150075
                   CEMLT(2,RDA);       CEMLT(2,RSA);                    66150080
                   CEMLT(6,TBN);       CEMLT(0,CMX);                    66150090
                   SGMTLVL ~ SGMTLVL - 1;                               66150100
              END; END;                                        %CJC 048 66150200
                   IF TYPE ! 8 THEN                            %CJC 048 66150300
                        CHRS ~ CHRS + T10 ELSE                 %CJC 048 66150400
                   IF USAGE ! 0 THEN                           %CJC 048 66150500
                        CHRS ~ CHRS + SIZE + 2 ELSE            %CJC 048 66150600
                   IF SIGNED = 0 THEN                          %CJC 048 66150700
                        CHRS ~ CHRS + SIZE ELSE                %CJC 048 66150800
                   CHRS ~ CHRS + SIZE + 3;                     %CJC 048 66150900
                   GO TO D1;                                   %CJC 048 66151000
              END;                                                      66165000
FINCODE:                                                       %CJC 052 66166000
                   COMMENT  EMIT CODE TO PRINT ON MESSAGE PRINTER;      66190000
                   IF KEY = 557 THEN  % UPON                            66201000
              BEGIN     DN;                                             66201500
                        IF KEY = 283 OR NOT DCOM THEN                   66202000
NORM:         BEGIN          EMIL (LITC, 0);                            66202100
                   EMIL(OPR,LNG);  % ~ FOR SPO TERMINATE       %CJC 050 66202200
                             EMIL (LITC,(CHRS+10)DIV 8);                66202250
                             EMIL (DESC,ADIO);                          66202280
                             EMIL (OPR ,STD );                          66202310
                             EMIL (LITC,   0);                          66202340
                             EMIL (DESC,ADIO);                          66202400
                             EMIL (LITC,15);                            66202500
                             EMIL (OPR ,COM);                           66203000
                             EMIL (OPR ,DEL);                           66203500
              END       ELSE                                            66204000
    DCOUT:    BEGIN          EMIL (LITC,1);                             66204100
                             EMIL (DESC,ADIO);                          66204400
                             EMIL (LITC,IF CHRS>72 THEN 72 ELSE CHRS);  66204500
                             EMIL (LITC,   1);                          66205000
                             EMIL (LITC,   0);                          66205500
                             EMIL (LITC,  11);                          66206000
                             EMIL (OPR , SSN);                          66206500
                             EMIL (OPR , COM);                          66207000
                             EMIL (OPR , DEL);                          66207500
                             EMIL (LITC,   2);   % IF BREAK             66207600
                             EMIL (OPR, BFC);    % THEN                 66207700
                             EMIL (LITC,   0);   % INVALID              66207800
                             EMIL (OPR , COM);   % END-OF-JOB           66207900
                             EMIL (OPR , DEL);                          66208000
                             EMIL (OPR , DEL);                          66208500
              END;      IF KEY = 283 OR NOT FOUND THEN DN;              66209000
                        GO TO XITD;                                     66209300
              END  ELSE IF DCOM THEN GO TO DCOUT ELSE GO TO NORM;       66209500
         D3:       T10~LGTH; T8~4;                        COMMENT 9-01; 66215000
                   EMIL(OPR,MKS); EMIL(LITC,T6);%                       66225000
                   EMIL(DESC,SMBL); EMIL(OPR,LOD);                      66230000
                   EMIL(LITC,T7); EMIL(OPR,CDC);          COMMENT 9-01; 66235000
                   EMIL(LITC,T8); EMIL(LITC,CHRS DIV 8);  COMMENT 9-01; 66236000
                   L~CHRS MOD 8; EMIL(DESC,ADIO); EMIL(LITC,L);         66245000
                   EMIL(LITC,T10 DIV 3969);               COMMENT 9-01; 66250000
                   EMIL(LITC,(T9~T10 MOD 3969) DIV 63);   COMMENT 9-01; 66255000
                   EMIL(LITC,T10~T9 MOD 63);              COMMENT 9-01; 66257000
                   EMIL(OPDC,OCHRTRAN);                   COMMENT 9-01; 66260000
                   CHRS~CHRS+LGTH; T10~0; GO TO D1;       COMMENT 9-01; 66265000
         XITD:     T1 ~ 0;     %                                        66265010
             END;              %                                        66265020
COMMENT **************************  ACCEPT  **************************; 66895500
 PROCEDURE ACCEPT;             %PROCEDURE ACCEPT CHECKS SYNTAX          66900000
              BEGIN            %    FOR THE ACCEPT VERB AND EMITS       66905000
                   REAL J,K,X2,X3;%    CODE TO ACCEPT INPUT FROM THE    66910000
REAL     L1,L2,L3,SVKEY;                                       %TR 744  66910040
REAL     OCURX,LOCUSX,LGTHX,USAGEX;                                     66910050
    DEFINE LBUF=OCIX#;                                            %TR60066910400
INTEGER  CHRS;                                                 %TR 744  66910500
BOOLEAN  DCOX,QUALS;                                           %TR 744  66914000
LABEL    DCIN,GITOUT,RESTOR,NOTLEGAL,XITA,DCOUT;               %TR 744  66915000
                   DN;   % SCAN AND SET PX AND TYPE                     66915005
                   WORDTRAN (ISYMB[0],LBUF[0],(LGTH+11)DIV 8);          66915007
                   OCURX ~ OCUR;                                        66915010
                   LOCUSX ~ LOCUS;                                      66915030
                   USAGEX ~ USAGE;                                      66915040
                   LGTHX ~ LGTH;                                        66915500
                   SYOUT(MSG[124],ISYMB,LGTH);                 %CJC 055 66915600
                   X2 ~ PX;    X3 ~ TYPE;                      %CJC 055 66915700
                   IF CNSTFLG THEN                             %CJC 055 66915800
              BEGIN ERP1(40,146,22,124);                       %CJC 055 66915900
         % ILLEGAL CONSTANT SECTION OPERAND XXXX               %CJC 055 66916000
                   GO TO XITA;                                 %CJC 055 66916100
              END;                                             %CJC 055 66916200
                   IF NOT FOUND THEN GO TO NOTLEGAL;           %TR 744  66917000
                   SVKEY ~ KEY;        SCLAS ~ 4;              %TR 744  66918000
                   SCHAD;              KEY ~ SVKEY;            %TR 744  66919000
                   QUALS ~ OCURX ! OCUR;                       %TR 744  66920000
                   DN;                                         %TR 744  66921000
                   IF KEY = 335 THEN   % "FROM"                %TR 403  67116200
              BEGIN DN;                % PASS THE "FROM"       %TR 403  67116300
                   IF KEY = 345 THEN   % "DATA"                %TR 403  67116400
              BEGIN IF X3 ! 7 THEN     % IF NOT AN 01 LEVEL    %TR 403  67116500
              BEGIN ERP(124 & 19[32:40:8] & 34[24:40:8]        %TR 403  67116600
                       & 83[16:40:8],0);                       %TR 403  67116700
                   RECOV; % "XXX NOT RECORD NAME"              %TR 403  67116800
                   GO TO XITA;                                 %TR 403  67116900
              END; IF DCOM THEN                                %TR 403  67117000
GITOUT:       BEGIN ERP(40 & 20[32:40:8],0);                   %TR 403  67117100
                   COMPE ~ TRUE; % "ILLEGAL HARDWARE"          %TR 403  67117200
                   DN;  GO TO XITA;                            %TR 403  67117300
              END; EMIL(LITC,0);       EMIL(DESC,X2);          %TR 403  67117400
                   EMIL(LITC,9);       EMIL(OPR,COM);          %TR 403  67117500
                   EMIL(OPR,DEL);                              %TR 403  67117600
                   DN;  GO TO XITA;                            %TR 403  67117700
              END; IF ISYMB[0].[24:24] = "REMO"                %TR 410  67117800
                        AND LGTH = 6 THEN                      %TR 410  67117900
                   IF NOT DCOM THEN GO TO GITOUT               %TR 410  67118000
                   ELSE                                        %TR 410  67118100
DCOUT:        BEGIN DN;                                        %TR 410  67118200
                   EMIL(LITC,9);       EMIL(LITC,0);           %TR 410  67118300
                   EMIL(DESC,ADIO);    EMIL(LITC,0);           %TR 403  67118400
                   EMIL(LITC,13);      EMIL(OPR,SSN);          %TR 403  67118500
                   EMIL(OPR,COM);      EMIL(OPR,DEL);          %TR 403  67118600
                   EMIL(OPR,DEL);      EMIL(OPR,DEL);          %TR 403  67118700
                   LOCUS ~ OCURX;      DCOX ~ TRUE;            %TR 403  67118800
                   GO TO RESTOR;                               %TR 403  67118900
              END; DN;                                         %TR 410  67119000
              END  ELSE                                        %TR 410  67119100
                   IF DCOM THEN GO TO DCOUT;                   %TR 410  67119200
                   IF X3 ! 8 AND USAGEX ! 0 THEN % ELEMENT DISP%TR 744  67152000
              BEGIN                                            %TR 744  67153000
NOTLEGAL:          ERP1(IF FOUND THEN 40 ELSE 13,22,124,0);    %TR 744  67154000
                   GO TO XITA; %ILLEGAL OR UNIDENTIFIED OPERAND%TR 744  67155000
              END; CHRS ~ 8;           CY ~ 0;                 %TR 744  67156000
                   LGTH ~ LGTHX;                               %TR 744  67157000
                   WORDTRAN(LBUF[0],ISYMB[0],(LGTH+11)DIV 8);  %TR 744  67158000
                   X2 ~ SMBX.[35:5];   X3 ~ SMBX.[40:8];       %TR 744  67159000
                   T1 ~ "ACCEPT";                              %TR 744  67160000
                   CHRTRAN(T1,2,SMB[X2,X3],4,6);               %TR 744  67161000
                   T1 ~ "  ";                                  %TR 744  67162000
                   CHRTRAN(T1,6,SMB[X2,X3],10,2);              %TR 744  67163000
                   IF QUALS THEN                               %TR 744  67164000
              BEGIN JCV(OILNK(OCURX),J,K);                     %TR 744  67165000
                   L1 ~ INFO[J,K+2].[3:15];                    %TR 744  67166000
                   JCV(L1,L2,L3);                              %TR 744  67167000
                   IF INFO[J,K].[32:1] = 1 OR                  %TR 744  67168000
                   INFO[J,K+1].[3:1] = 1 THEN                  %TR 744  67169000
                   CHRTRAN(SMB[L2,L3],4,SMB[X2,X3],12,         %TR 744  67170000
                        LGTH ~ SMB[L2,L3].[11:6])     ELSE     %TR 744  67171000
                   CHRTRAN(DICT[L2,L3],4,SMB[X2,X3],12,        %TR 744  67172000
                        LGTH ~ DICT[L2,L3].[1:5]);             %TR 744  67173000
                   CHRS ~ CHRS + LGTH;                         %TR 744  67174000
                   T2 ~ " OF ";                                %TR 744  67175000
                   CHRTRAN(T2,4,SMB[X2,X3],CHRS~CHRS+4,4);     %TR 744  67176000
              END; LGTH ~ LGTHX;                               %TR 744  67177000
                   CHRTRAN(ISYMB,4,SMB[X2,X3],CHRS+4,LGTH);    %TR 744  67178000
                   LOCUS ~ OCURX;                              %TR 744  67179000
                   SMBX ~ SMBX + (CHRS + LGTH + 3) DIV 8 + 1;           67180000
                   LGTH ~ LGTH + CHRS;                                  67185000
                   SMB[X2,X3].[17:7] ~ LGTH.[41:7];                     67190000
                   SMB[X2,X3].[11:6] ~((LGTH + 3) DIV 8).[42:6]         67195000
              ;    IF SMBX.[40:8] > 240 THEN%IF AT END OF ROW IN SMB    67200000
              BEGIN SMBX ~ SMBX + 255; SMBX.[40:8] ~ 0                  67205000
              END;                                                      67215000
                   EMIL (OPR,MKS );     % EMIT                          67216000
                   EMIL (LITC,0  );     %      CODE                     67217000
                   EMIL (DESC,ADIO);    %           TO                  67218000
                   EMIL (LITC,0   );    %              CLEAR            67218500
                   EMIL (LITC,23);                                      67218800
                   EMIL (OPDC,OCLRWDSB);%                    AREA       67219000
         COMMENT   EMIT CODINS TO MOVE SYMBOLS TO I/O AREA;             67220000
                   EMIL(OPR,MKS); %                                     67230000
                             %EMIT CODE TO MOVE SYMBOL FROM SMB         67230001
                   EMIL(LITC,LGTH);%  TO I/O AREA                       67235000
                   EMIL(LITC,X2);                                       67240000
                   EMIL(DESC,SMBL)     ;                                67245000
                   EMIL(OPR,LOD)     ;                                  67250000
                   EMIL(LITC,X3);                                       67255000
                   EMIL(OPR,CDC)     ;                                  67260000
                   EMIL(LITC,2);                  COMMENT 1-30;         67270000
                   EMIL(DESC,ADIO)     ;                                67275000
                   EMIL(OPR,CMN);%       STACK IS     RCW               67280000
                   SGMTLVL ~ SGMTLVL + 1;                               67280050
                        CEMLT( 2,RSA);%               I/O DESCR.        67280100
                        CEMLT( 4,SFS);%               SOURCESCR.        67280200
                        CEMLT( 3,CRF);%               NR. CHAR          67280300
                        CEMLT( 0,TRS);%               MKS               67280400
                        CEMLT( 2,TRP);%                                 67280500
                        CEMLT( 48,48);%                                 67280600
                        CEMLT( 0,CMX);%                                 67281000
                   SGMTLVL ~ SGMTLVL - 1;                               67281005
                   T6 ~ (LGTH+23) DIV 8;                   COMMENT 2-11;67285000
                   EMIL(LITC,T6);                          COMMENT 2-11;67290000
                   EMIL(DESC,ADIO);                                     67310000
                   EMIL(LITC,0);                                        67315000
                   EMIL(LITC,31);                                       67320000
                   EMIL(DIA,43);                                        67325000
                   EMIL(DIB,1);                                         67330000
                   EMIL(TRB,5);                                         67335000
                   EMIL(OPR,XCH);                                       67340000
                   EMIL(OPR,STD);                                       67345000
         COMMENT   EMIT CODING TO READ FROM KEYBORARD;                  67350000
                   EMIL(LITC,ADIO)     ;%EMIT CODE TO ACCEPT INPUT FROM 67365000
                   EMIL(OPR,LOD)     ;%    KEYBOARD.                    67370000
                   EMIL(LITC,16);                           COMMENT DF; 67395000
                   EMIL(OPR,COM);                 COMMENT 1-30;         67400000
                   EMIL(OPR,DEL);                         COMMENT 8-7;  67405000
         COMMENT   EMIT CODE TO MOVE INPUT TO DATA-NAME;                67420000
         RESTOR:                                                        67420100
                   SIZE ~ OFSZ(LOCUS);                                  67420400
                   OAS(PX,QX,RX,LOCUS);                                 67420600
                   T10 ~ SIZE;                                          67425005
                   T9 ~ OUSG(LOCUS);  IF T9 ! 0 THEN                    67425010
              BEGIN  EMIL(LITC,0);  IF T10 > 8 THEN                     67425020
                             %EMIT CODE TO MOVE INPUT FROM 1/0          67425021
              BEGIN  EMIL(LITC,0);  EMIL(LITC,0)                        67425022
              END;                                                      67425025
                   EMIL(OPR,MKS); EMIL(LITC,IF DCOX THEN 0 ELSE 2);     67425030
                   EMIL (DESC,ADIO);                                    67425035
                   EMIL(LITC,1);  EMIL(LITC,0);                         67425040
                   IF T10 > 8 THEN                                      67425050
              BEGIN  EMIL(LITC,T10-8);  EMIL(OPDC,IC8L);                67425060
                   EMIL(OPR,MUL);  EMIL(OPR,ADD);                       67425070
              END ELSE                                                  67425080
              BEGIN  EMIL(LITC,T10);  EMIL(OPDC,IC1L);                  67425090
              END;  EMIL(OPR,SSP);  EMIL(LITC,0);  EMIL(OPR,MKS);       67426000
                   EMIL (LITC,IF DCOX THEN 0 ELSE 2); EMIL(DESC,ADIO);  67426010
                   EMIL(LITC,0);  EMIL(OPDC,ADNSIGN);                   67426015
                   EMIL(LITC,44);  EMIL(OPR,EQL);  EMIL(LITC,1);        67426020
                   EMIL(OPR,BFC);  EMIL(OPR,SSN);                       67426025
                   IF T9 ! 2 THEN                                       67426027
              BEGIN EMIL (LITC,QX); EMIL (DESC,PX); END    %NOT CMP-1   67426030
              ELSE  EMIL (DESC,QX);                        % IS CMP-1   67426033
                    EMIL (OPR,STD);                        %STORE RECD  67426036
              END  ELSE                                                 67426040
              BEGIN                                                     67426050
                   EMIL(OPR,MKS); EMIL(LITC,IF DCOX THEN 0 ELSE 2);     67426090
                   EMIL(DESC,ADIO)     ;                                67435000
                   EMIL(LITC,0)     ;                                   67440000
                   EMIL(LITC,QX);                         COMMENT 9-01; 67445000
                   EMIL(DESC,PX)     ;                                  67450000
                   EMIL(LITC,RX)     ;                                  67455000
                   EMIL(LITC,T10 DIV 3969);               COMMENT 9-01; 67460000
                   EMIL(LITC,(T9~T10 MOD 3969) DIV 63);   COMMENT 9-01; 67465000
                   EMIL(LITC,T10~T9 MOD 63);              COMMENT 9-01; 67465005
                   EMIL(OPDC,OCHRTRAN);                   COMMENT 9-01; 67465010
              END;                                                      67465020
                   JCV(LOCUS+1,J,K);                                    67465500
                   IF DICT [J,K].[3:1]=1 THEN MONGEN(LOCUS,QX,PX);      67465600
                        % IF DATA NAME IS MONITORED THEN CALL MONGEN    67465601
        XITA: END;                                                      67500000
COMMENT**5/1/64 ****************** IFSTMNT ****************************;67500500
PROCEDURE IFSTMNT; COMMENT GENERATES CODE FOR AN IF STATEMENT AND       67505000
                             %IFSTMNT IS A PROCEDURE TO CONTROL         67505001
                   ASSUMES A BOOLEAN VALUE AT THE TOP OF THE STACK ;    67510000
                             %    SYNTAX PROCESSING OF THE IF           67510001
              BEGIN            %    STATEMENT. IT ALSO EMIT CODE TO     67515000
INTEGER C,C1,T,LEAPSYL;                                            %5-6667520000
                             %    BRANCH AROUND CODE ON FALSE CON-      67520001
DEFINE  LFU=806#, LBU=790#, LFC=294#, LBC=278#;                    %5-6667522000
LABEL FIN , ERR1, ERR2 ;       %    DITIONS.                            67525000
                   RF ~ TRUE ; COMMENT SET THE RETURN FLAG;             67530000
                             %A CALL ON DN PICKS UP THE NEXT LOG-       67530001
                   C ~ CREG ;  %    ICAL QUANITY, AND A CALL ON         67535000
                             %    CONDITION EVALUATES THE CONDITON      67535001
                             %    AND LEAVES THE TRUTH VALUE ON         67535002
                             %    TOP OF THE STACK.                     67535003
                   EMIL(LITC,0);%T1 CONTAINS THE LOCATION OF A LITERL   67540000
                   EMIL(OPR,BFC);%    FOR BRANCHING IF THE CONDITION    67545000
                             %    IS FALSE.                             67545001
                   LEAPSYL ~ LFC;                                  %5-6667547000
                   IF KEY = 531 THEN COMMENT "NEXT" ;                   67550000
                             %THE WORD "NEXT" MUST BE FOLLOWED          67550001
              BEGIN DN ;       %  BY THE WORD "SENTENCE" ELSE           67555000
                   IF KEY ! 549 THEN COMMENT "SENTENCE" ;               67560000
                             %"MISSING OPERAND XXXX"                    67560001
ERR1:         BEGIN SYOUT(MSG[124],ISYMB,LGTH);                         67565000
ERR2:              ERP1(40,57,76,124);%                                 67570000
                   GO TO FIN; COMMENT "ILLEGAL STATEMENT GROUP" ;%      67575000
              END; DN;                                                  67575500
              END  ELSE                                                 67580000
              BEGIN SYOUT(MSG[124],ISYMB,LGTH);                         67585000
                   STATMT ;                                             67590000
                   IF CREG = C+4 THEN COMMENT NULL STATEMENT GROUP;     67595000
                             %IF NOT"NEXT SENTENCE", CALL               67595001
                   GO TO ERR2; %  STATMT TO PICK UP NEXT VERB.          67600000
              END  ;                                                    67601000
                   IF KEY = 511 THEN COMMENT "ELSE" OR "OTHERWISE" ;%   67605000
              BEGIN DN ;                                                67605020
                   IF KEY = 531 THEN COMMENT "NEXT" ;                   67605040
              BEGIN DN ;                                                67605060
                   IF KEY ! 549 THEN COMMENT "SENTENCE" ;               67605080
                   GO TO ERR1;                                          67610000
                   DN ;        %IF NEXT FIELD IS NOT ELSE OR OTHER-     67615000
              END  ELSE        %    WISE OR A PERIOD, PRINT SYNTAX      67620000
              BEGIN SYOUT(MSG[124],ISYMB,LGTH);                         67625000
                             %    ERROR MISSING PERIOD.                 67625001
                   C1 ~ CREG;                                      %5-6667630000
                   EMIL(LITC,0);                                   %5-6667631000
                   EMIL(OPR,BFW);                                  %5-6667632000
                   IF (T~((CREG-C-4) DIV 2)) < 1024                %5-6667633000
                      THEN EMIT(LITC,T,C) ELSE                     %5-6667634000
              BEGIN        WHILE CREG.[45:3]!0 DO EMIL(OPR,NOP);   %5-6667635000
                          EMIT(LITC,(CREG DIV 8)-((C+2) DIV 8),C);%5-67 67636000
                           EMIT(OPR,LFC,C);                        %5-6667637000
              END;                                                 %5-6667640000
                   C ~ C1; LEAPSYL ~ LFU;                          %5-6667640010
                   STATMT ;                                             67640020
                   IF CREG = C + 4 THEN COMMENT NULL STATEMENT GROUP;   67640030
                   GO TO ERR2;                                          67640040
              END;                                                      67640045
              END;                                                 %5-6667640050
                   IF (T~((CREG-C-4) DIV 2)) < 1024                %5-6667640052
                      THEN EMIT(LITC,T,C) ELSE                     %5-6667640054
              BEGIN        WHILE CREG.[45:3]!0 DO EMIL(OPR,NOP);   %5-6667640056
                          EMIT(LITC,(CREG DIV 8)-((C+2) DIV 8),C);%5-67 67640058
                           EMIT(OPR,LEAPSYL,C);                    %5-6667640060
              END;                                                 %5-6667640062
                   IF KEY ! 473 AND KEY ! 511 THEN % "." OR "ELSE" %5-6667640064
              BEGIN SYOUT(MSG[124],ISYMB,LGTH);                         67640070
                   ERP1 (77,79,124,0); COMMENT MISSING PERIOD ;         67640080
              END  ;                                                    67640090
FIN:          END  ;                                                    67640110
PROCEDURE DCERANDSEARCH;                                                67650000
    BEGIN     LABEL ERROR,EGRESS;   % 1                                 67650500
    IF KEY=395 THEN     % SUPPRESS                                      67651000
         BEGIN     %2                                                   67651500
         SYOUT(MSG[124],ISYMB,LGTH); DN;                                67652000
         IF KEY!923 THEN     % USE                                      67652500
              GO TO ERROR; DN;                                          67653000
                                                                        67653500
         IF KEY!343 THEN     % OF                                       67654000
              GO TO ERROR; DN;                                          67654500
         EMIL(LITC,2);                                                  67655000
         IF INTEGEROPERAND AND INTEGEROPERAND THEN                      67655500
              BEGIN  %3                                                 67656000
              EMIL(LITC,0  );                                           67656500
              END; %  3                                                 67657000
         END       %  2                                                 67657500
    ELSE                                                                67658000
    IF KEY=336 THEN     % RECORD                                        67658500
         BEGIN     %  4                                                 67659000
         SYOUT(MSG[124],ISYMB,LGTH); DN;                                67659500
         IF KEY=345 THEN     % DATA                                     67660000
              BEGIN     % 5                                             67660500
              DN;                                                       67661000
              EMIL(LITC,5);                                             67661500
              IF KEY!103 THEN     % STATUS                              67662000
                   GO TO ERROR; DN;                                     67662500
              IF KEY ! 341 THEN   % IN                                  67663000
                   GO TO ERROR; DN;                                     67663500
              IF USAGE ! 1 OR RX ! 0 THEN   % DATA-NAME                 67664000
                   GO TO ERROR;                                         67664500
              EMIL(LITC,PX); EMIL(OPR,LOD); DN;                         67665000
              IF KEY ! 330 THEN   % FOR                                 67665500
                   BEGIN     % 6                                        67666000
                   EMIL(LITC,0); EMIL(OPR,XCH);                         67666500
                   EMIL(LITC,0); EMIL(OPR,XCH);                         67667000
                   END       % 6                                        67667500
              ELSE                                                      67668000
                   BEGIN DN; % 6.5                                      67668500
                   IF INTEGEROPERAND THEN   % TU                        67669000
                        EMIL(OPR,XCH)                                   67669500
                        ELSE GO TO ERROR;                               67670000
                   IF INTEGEROPERAND THEN   % BU                        67670100
                        EMIL(OPR,XCH)                                   67670200
                        ELSE GO TO ERROR; DN;                           67670300
                   END;      % 6.5                                      67670400
              END  RECORD DATA % 5                                      67670500
         ELSE                                                           67671000
         IF KEY=332 THEN     % FILE                                     67671500
              BEGIN     % 7                                             67672000
              DN;                                                       67672500
              IF KEY!103 THEN     % STATUS                              67673000
                   GO TO ERROR;                                         67673500
              DN;                                                       67674000
              IF KEY!330 THEN     % FOR                                 67674500
                   GO TO ERROR;                                         67675000
              DN;                                                       67675500
              IF TYPE!6 THEN      % FILE-NAME                           67676000
                   GO TO ERROR;                                         67676500
              EMIL(LITC,IODESC); EMIL(DESC,10);  DN;                    67677000
              IF KEY !341 THEN    % IN                                  67677500
                   GO TO ERROR;                                         67678000
              DN;                                                       67678500
              IF USAGE!1  OR  RX!0 THEN  % DATA-NAME                    67679000
                   GO TO ERROR;                                         67679500
              EMIL(LITC,PX); EMIL(OPR,LOD); EMIL(LITC,30);              67680000
              EMIL(OPR,COM); EMIL(OPR,DEL); EMIL(OPR,DEL); DN;          67680200
              GO TO EGRESS;                                             67680500
              END       % 7                                             67680700
         ELSE                                                           67681000
         GO TO ERROR;                                                   67681500
         END       % 4                                                  67682000
    ELSE                                                                67682500
    ERROR:                                                              67683000
         BEGIN     % 8                                                  67683500
         ERP1(2,8,124,57);                                              67684000
         GO TO EGRESS;                                                  67684500
         END;      % 8                                                  67685000
                                                                        67685500
                                                                        67686000
    EMIL(LITC,32); EMIL(OPR,COM); EMIL(OPR,DEL);                        67686500
    EMIL(OPR,DEL); EMIL(OPR,DEL); EMIL(OPR,DEL);                        67687000
    EGRESS:                                                             67687500
    END DCERANDSEARCH; % 1                                              67688000
COMMENT ************************* FORGETVERB ****************; %CJC 063 67689000
  PROCEDURE FORGETVERB;  % PROCESS THE VERB "FORGET"           %CJC 063 67689100
         %    SYNTAX IS:    FORGET <IDENTIFIER LIST>           %CJC 063 67689200
         %    <IDENTIFIER LIST> IS A LIST OF 01-LEVEL          %CJC 063 67689300
         % RECORD-NAMES AND/OR PARAGRAPH-NAMES. THE LIST       %CJC 063 67689400
         % IS NOT RESTRICTED IN THE NUMBER OF IDENTIFIERS.     %CJC 063 67689500
         %     IF A SECTION-NAME APPEARS IN THE LIST, ONLY     %CJC 063 67689600
         % THE FIRST PARAGRAPH OF THE SECTION WILL HAVE        %CJC 063 67689700
         % THE "FORGET" APPLIED.                               %CJC 063 67689800
         %    INVALID IDENTIFIERS WILL CAUSE THE FATAL         %CJC 063 67689900
         % ERROR "FORGET STATEMENT SYNTAX ERROR" TO PRINT.     %CJC 063 67690000
              BEGIN                                            %CJC 063 67690100
    BOOLEAN   ONELEGAL;                                        %CJC 063 67690200
    INTEGER   J,J2,K2;                                         %CJC 063 67690300
    LABEL     F1;                                              %CJC 063 67690400
                   DN;                                         %CJC 063 67690500
F1:                IF TYPE = 3 OR TYPE = 7 OR SCLAS = 6 OR     %CJC 063 67690600
                   (SCLAS = 4 AND NOT FOUND AND TYPE ! 1) THEN %CJC 063 67690650
              BEGIN ONELEGAL ~ TRUE;                           %CJC 063 67690700
                   IF TYPE ! 7 THEN                            %CJC 063 67690750
              BEGIN GETIT;     JCV(A1+1,J2,K2);                %CJC 063 67690800
                   J ~ DICT[J2,K2].[8:10];                     %CJC 063 67690850
              END  ELSE                                        %CJC 063 67690900
              BEGIN J ~ PX;    DN;                             %CJC 063 67690940
              END;                                             %CJC 063 67690960
                   EMIL(LITC,J);                               %CJC 063 67691000
                   IF J > 511 THEN EMIL(OPR,XRT);              %CJC 063 67691100
                   EMIL(OPR,LOD);                              %CJC 063 67691200
                   EMIL(LITC,38);      EMIL(OPR,COM);          %CJC 063 67691300
                   EMIL(OPR,DEL);      GO TO F1;               %CJC 063 67691400
              END;                                             %CJC 063 67691500
                   IF KEY = 502 THEN                           %CJC 063 67691550
              BEGIN DN;     GO TO F1;                          %CJC 063 67691560
              END;                                             %CJC 063 67691570
                   IF NOT ONELEGAL THEN                        %CJC 063 67691600
              BEGIN COMPE ~ TRUE;                              %CJC 063 67691700
                   ERP(57 & 77 [32:40:8], "FORGET ");          %CJC 063 67691800
         %    FORGET STATEMENT SYNTAX ERROR                    %CJC 063 67691900
              END;                                             %CJC 063 67692000
            END  FORGETVERB;                                   %CJC 063 67692100
COMMENT **************************   ALTER  **************************; 67745500
 PROCEDURE ALTER;              %ALTER IS A PROCEDURE TO CHECK SYNTAX    67750000
              BEGIN            %    FOR THE ALTER VERB AND EMIT CODE    67755000
                   INTEGER J,K,ALTLOC,T1;                               67760000
                             %    TO CHANGE THE LOGICAL FLOW OF         67760001
                   LABEL AL1, XITA;%    THE OBJECT PROGRAM.             67765000
                   DN;                                         %CJC 001 67770000
         COMMENT   CHECK FOR A LABEL;%    A LABEL, PRINT SYNTAX ERROR   67775000
AL1:               IF TYPE = 3 OR SCLAS = 6 OR                 %CJC 001 67780000
                   (SCLAS = 4 AND NOT FOUND AND TYPE ! 1)      %CJC 001 67781000
                   THEN ELSE  %INSTEAD OF A COMPLEX "NOT"      %CJC 001 67782000
              BEGIN SYOUT(MSG[124],ISYMB,LGTH);%"ILLEGAL LABEL"%CJC 001 67785000
                   ERP1(40,37,124,0);  GO TO XITA;             %CJC 001 67795000
              END;                                                      67800000
                   GETIT;      %GETIT PROCESSES THE LABEL ALTERED.      67805000
                   JCV(A1,J,K);                           COMMENT 9-02; 67806000
                   IF DICT[J,K].[8:10]=0 THEN             COMMENT 9-02; 67807000
              BEGIN DICT[J,K].[8:10]~FX; FX~FX+1;                       67808000
                             %ASSIGN FOLLOWER TABLE ENTRY.              67808001
              END;                                        COMMENT 9-02; 67809000
                   JCV(A1+1,J,K);                         COMMENT 9-02; 67809500
                   IF FND THEN                                          67810000
              BEGIN                                                     67815000
                   IF FORD THEN                                         67820000
              BEGIN                                                     67825000
         COMMENT   SET AFLAG TRUE;%    REFERENCE, THE ALTER FLAG IN THE 67835000
                   DICT[J,K].[2:1] ~ 1;                                 67840000
                             %    DICT. IS TURNED ON AND ITS LOC        67840001
                   JCV(A1,J,K);%    IN FOLLOWER TABLE IS SAVED.         67845000
         COMMENT   SAVE FOLLOWER ADDRESS;                               67850000
                   ALTLOC ~ DICT[J,K].[8:10]                            67855000
              END  ELSE                                                 67860000
              BEGIN                                                     67865000
                   IF DICT[J,K].[2:1] ! 1 THEN%                         67875000
              BEGIN            %                                        67880000
         COMMENT ILLEGAL LABEL;                           COMMENT 6-04; 67880500
                             %                                          67880501
                             %    ILLEGAL LABEL XXXXXX.                 67885000
                   ERP1(40,37,0,0); GO TO XITA;                         67890000
                             %IF NONALTERABLE PARAGRAPH.                67890001
              END;                                        COMMENT 9-02; 67895000
                   JCV(A1,J,K);%                                        67905000
                   ALTLOC ~ DICT[J,K].[8:10]%SAVE FOLLOWER TABLE INDEX. 67910000
              END              %                                        67920000
              END  ELSE                                                 67925000
              BEGIN                                                     67930000
                   DICT[J,K].[2:1] ~ 1;%                                67940000
                   JCV(A1,J,K);%                                        67945000
                   ALTLOC ~ DICT[J,K].[8:10]%                           67950000
              END;                                                      67955000
         COMMENT   CHECK FOR PHASE TO PROCEED TO;                       67960000
              IF KEY = 264 THEN%IF THE PHRASE TO PROCEED TO IS MISS-    67965000
              BEGIN            %    ING, PRINT SYNTAX ERROR.            67970000
                   DN; IF KEY = 540 THEN                                67975000
              BEGIN                                                     67980000
                   DN; IF KEY = 264 THEN DN                             67985000
              END                                                       67990000
              END  ELSE                                                 67995000
             BEGIN SYOUT(MSG[124],ISYMB,LGTH);                          68000000
                   ERP1(40,57,124,0); GO TO XITA;         COMMENT 9-02; 68005000
              END;                                                      68010000
         COMMENT   CHECK FOR A LABEL;                                   68015000
                   IF TYPE = 3 OR SCLAS = 6 OR                 %CJC 001 68020000
                   (SCLAS = 4 AND NOT FOUND AND TYPE ! 1)      %CJC 001 68021000
                   THEN ELSE  %INSTEAD OF A COMPLEX "NOT"      %CJC 001 68022000
              BEGIN SYOUT(MSG[124],ISYMB,LGTH);%"ILLEGAL LABEL"%CJC 001 68025000
                   ERP1(40,37,124,0);  GO TO XITA;             %CJC 001 68035000
              END;                                                      68040000
                   GETIT;      %GETIT PROCESSES THE LABEL.              68045000
                   JCV(A1+1,J,K);%THE FOLLOWER TABLE ENTRY FOR THIS     68050000
         COMMENT   EMIT CODING TO CHANGE FOLLOWER;%    LABEL IS SAVED.  68055000
                   EMIL(LITC,DICT[J,K].[8:10]);           COMMENT 9-02; 68060500
                   EMIL(LITC,ALTLOC)     ;                              68065000
                             %    TABLE ENTRY FOR SECOND LABEL IN       68065001
                   EMIL(DESC,OFOLT)     ;                               68070000
                             %    FOLLOWER LOCATION OF THE FIRST.       68070001
                   EMIL(OPR,STD)     ;                                  68075000
                   IF KEY ! 473 THEN%IF THE NEXT FIELD IS NOT A PERIOD  68080000
              BEGIN            %    AND NOT A RESERVED WORD, PROCESS    68085000
                   IF TYPE ! 1 THEN GO TO  AL1%    THE NEXT ALTER.      68090000
              END;                                                      68095000
         XITA: END;                                                     68100000
COMMENT **************************    GOTO  **************************; 68100500
 PROCEDURE GOTO;               %GOTO PROCEDURE PROCESSES THE GO TO      68105000
              BEGIN            %    AND GO TO DEPENDING STATEMENTS      68110000
    INTEGER I,J,K,T2;          %    AND EMITS CODE FOR EACH.            68115000
    INTEGER T11,T22,T33;                                       %CJC 027 68115500
    BOOLEAN BIGPRT;                                       COMMENT 9-02; 68115600
    LABEL G,G1,G2,G3,G4,XITG1;                            COMMENT 9-04; 68120000
              DEFINE SAV = SAVEGOTO #;                  COMMENT 9-16 JH;68120100
                   BSZF ~ FALSE;                                        68120500
                   DN;                                                  68125000
                   IF KEY = 264 THEN DN;  % BYPASS "TO"        %CJC 086 68130000
         COMMENT   CHECK FOR A LABEL;                                   68160000
                   IF TYPE = 3 OR SCLAS = 6 OR                 %CJC 001 68165000
                   (SCLAS = 4 AND NOT FOUND AND TYPE ! 1) THEN %CJC 001 68166000
                   GO TO G;                                             68170000
                   IF SENT THEN%IF NEXT FIELD IS NOT A LABEL AND        68175000
              BEGIN            %    THIS IS NOT A GO TO PARAGRAPH,      68180000
                    SYOUT(MSG[124],ISYMB,LGTH);                %CJC 001 68185000
                             % "ILLEGAL LABEL XXXX"            %CJC 001 68185001
                   ERP1(40,37,124,0);  GO TO XITG1;            %CJC 001 68190000
              END;                                                      68195000
                   IF KEY ! 473 THEN                           %CJC 076 68196000
              BEGIN ERP1(77,9,67,0);                           %CJC 076 68197000
                   GO TO XITG1;                                %CJC 076 68198000
              END; % "SYNTAX ERROR MISSING PERIOD"             %CJC 076 68199000
                   DN; I~1777; T1~"GO"; GO TO G4;                       68200000
                             %A GO TO PAR NOT ALTERED AT OBJECT         68200001
                             %TIME,AN INV INX WILL RESULT.              68200002
         COMMENT   PROCESS THE LABEL;                                   68205000
G:                 I~0; T11~CREG; BIGPRT~FALSE;                         68210000
                             %SET LABEL COUNT TO 0 AND SAVE LOCAT-      68210001
                             %    ION TO BE FIXED UP.                   68210002
         G1:       GETIT;      %PROCESS THE LABEL AND ADD 1 TO THE      68215000
                   I ~ I + 1;  %    LABEL COUNT.                        68220000
                   JCV(A1+1,J,K);                         COMMENT 9-02; 68222000
                   J~DICT[J,K].[8:10];                                  68225000
                             %EMIT LITC ON INDEX OF FOLLOWER TABLE      68225001
                   IF J>511 THEN BIGPRT~TRUE;             COMMENT 9-02; 68227000
                   EMIL(LITC,J);%    ENTRY FOR THIS LABEL.              68230000
         COMMENT   CHECK FOR ANOTHER LABEL;                             68235000
                   IF TYPE = 3 OR SCLAS = 6 OR                 %CJC 001 68236000
                   (SCLAS = 4 AND NOT FOUND AND TYPE ! 1) THEN %CJC 001 68240000
              BEGIN                                                     68245000
                   EMIL(LITC,0);                                        68250000
                   EMIL(OPR,BFW);                                       68255000
                   GO TO G1                                             68260000
              END;                                                      68265000
         COMMENT   CHECK FOR DEPENDING;                                 68270000
                   IF KEY=359 THEN GO TO G3;                            68275000
                             %IF NEXT FIELD IS NOT DEPENDING AND        68275001
                             %    LABEL COUNT IS NOT 1, PRINT           68280000
                   IF I ! 1 THEN%    SYNTAX ERROR.                      68285000
              BEGIN                                                     68290000
         COMMENT SYNTAX ERROR GO TO STATEMENT;            COMMENT 9-02; 68295000
                   ERP1(77,53,57,0); GO TO XITG1;         COMMENT 9-02; 68300000
              END;                                                      68305000
                   IF NOT SENT THEN%IF NOT DEPENDING AND I = 1 AND THIS 68310000
G2:           BEGIN IF KEY!473 THEN%    FIELD IS NOT A PERIOD, PRINT    68320000
              BEGIN            %    SYNTAX ERROR MISSING PERIOD.        68325000
         COMMENT SYNTAX ERROR MISSING PERIOD;             COMMENT 9-02; 68330000
                   ERP1(77,9,67,0); GO TO XITG1;          COMMENT 9-02; 68335000
              END;                                                      68340000
         COMMENT   SET ALTER FLAG IN THE OCUR;                          68345000
                   CREG~T11; JCV(A1+1,J,K);                             68350000
                             %IF THIS IS A GO TO PARAGRAPH, SET         68350001
                   I~DICT[J,K].[8:10];%    ALTER FLAG IN DICT TO 1.     68355000
G4:                JCV(CPAR,J,K); DICT[J,K+1].[2:1]~1;    COMMENT 9-04; 68355050
                   T2~DICT[J,K].[8:10];                   COMMENT 9-04; 68355100
                   FLTBL[T2.[38:3],T2.[41:7]]~I;          COMMENT 9-04; 68355110
                   LINKAGE~FALSE;                         COMMENT 9-03; 68355115
                   EMIL(LITC,T2); EMIL(OPDC,OFOLT);       COMMENT 9-04; 68355180
                   GO TO G3;                              COMMENT 9-02; 68355200
              END;                                        COMMENT 9-03; 68356000
                   LINKAGE~IF KEY=359 THEN TRUE ELSE RF;                68358000
                             %NO LINKAGE CODE EMITTED FROM GETIT        68358001
                             %IF THIS IS AN UNCONDITIONAL GO TO.        68358002
                   IF A1=CPAR THEN%IF A LOOP THEN EMIT BRANCH BACKWARD  68360000
              BEGIN CREG~T11;  %RATHER THAN RECALLING THIS SEGMENT.     68360200
                   T9~(CREG-4) DIV 2;                     COMMENT 9-02; 68360350
                   IF T9{1023 THEN EMIL(LITC,T9) ELSE     COMMENT 9-25; 68360400
              BEGIN IF CNR ! 0 THEN                       COMMENT 9-02; 68360500
              BEGIN CNR ~ 0; CNQ ~ CNQ + 1;               COMMENT 9-02; 68360600
              END;                                        COMMENT 9-02; 68360700
                   CNP[CNQ.[38:3],CNQ.[41:7]]~T9+1+CNPL.[33:1]; %TR 709 68360800
                   EMIL(LITC,CNQ-1); CNQ ~ CNQ + 1;       COMMENT 9-02; 68360900
                   EMIL(OPDC,CNPL);                       COMMENT 9-02; 68361000
              END;                                        COMMENT 9-02; 68361100
                   EMIL(OPR,BBW); GO TO XITG1;            COMMENT 9-02; 68361150
             END;                                                       68361200
G3:                T33~(CREG-T11) DIV 2 -3;               COMMENT 9-02; 68369000
                   EMIL(LITC,898); EMIL(OPR,SND);         COMMENT 9-02; 68370000
                   IF BIGPRT OR (NOT SENT AND KEY!359)    COMMENT 9-02; 68375000
                   THEN EMIL(OPR,XRT);                    COMMENT 1-8-5;68376000
                   EMIL(OPR,LOD); EMIL(OPR,BFW);           COMMENT 2-12;68380000
                   IF KEY!359 THEN GO TO XITG1;           COMMENT 9-02; 68385000
         COMMENT SO CONTROL KNOWS ITS A GO TO DEPENDING;  COMMENT 9-04; 68390000
                   BSZF ~ TRUE;                                         68390500
                   DN;                                                  68395000
                   IF KEY=271 THEN DN;                                  68400000
                             %IF NEXT FIELD IS ON, EMIT CODE TO         68400001
                             %    STORE FOLLOWER TABLE ENTRY INTO       68405000
         COMMENT   FIX UP CODE FOR LABELS;                              68425000
                    T22 ~ T11 + 2;%    DEPENDING.                       68435000
                   FOR T4 ~ 2 STEP 1 UNTIL I DO                         68440000
              BEGIN                                                     68445000
                    EMIT (LITC,T33,T22);                                68450000
                    T33 ~ T33 - 3; T22 ~ T22 + 4;                       68455000
              END;                                                      68460000
                   T33 ~ CREG - T11;                    COMMENT 9-16 JH;68465000
              COMMENT CARDS 6847 68475 6848 68485 6859 DELETED BY DEFINE68470000
                    ARRAY SAV AT 68120100               9-16 JH        ;68475000
                   COPICODE(SEG,T11,SAV,0,T33);                         68490000
                             %SAVE CODE THAT HAS BEEN EMITTED.          68490001
                    CREG~ T11;                                          68495000
                   FORMULA;    %FORMULA EVALUATES THE EXPRSSION FOR     68500000
                             %    THE DEPENDING ON.                     68500001
                   EMIL(OPR,DUP);%EMIT CODE TO CHECK RANGE OF THE DEP-  68505000
                   EMIL(OPR,DUP);%    ENDING ON EXPRESSION.             68510000
                   EMIL(LITC,0);                                        68515000
                   EMIL(OPR,GRT);                                       68520000
                    T11~CREG;                                           68525000
                   EMIL(LITC,0);                                        68530000
                   EMIL(OPR,BFC);                                       68535000
                   EMIL(LITC,I);                                        68540000
                   EMIL(OPR,LSQ);                                       68545000
                   EMIL(LITC,0);                                        68550000
                   EMIL(OPR,BFC);                                       68555000
                   EMIL(LITC,1);                                        68560000
                   EMIL(OPR,SUB);                                       68565000
                   EMIL(LITC,3);                                        68570000
                   EMIL(OPR,MUL);                                       68575000
                   EMIL(LITC,1);                                        68575100
                   EMIL(OPR,ISN);                                       68575200
                   EMIL(OPR,BFW);                                       68580000
                   COPICODE(SAV,0,SEG,CREG,T33);                        68585000
                             %MOVE CODE FROM SAV ARRAY BACK TO          68585001
                             %    CODE ARRAY.                           68590000
                   T22 ~ (CREG - T11) / 2 - 2;                          68595000
                             %FIX UP CODE TO JUMP AROUND GO TO IF       68595001
                    EMIT(LITC,T22,T11);%    EXPRESSION IS OUT OF RANGE. 68600000
                   EMIL(OPR,DEL);                         COMMENT 8-7;  68602000
                   T11 ~ T11 + 6; T22 ~ T22 - 3;          COMMENT 7-20; 68605000
                    EMIT(LITC,T22,T11);                                 68610000
                   EMIL(OPR,DEL);                         COMMENT 8-7;  68612000
                   IF RSCALE ! 0 THEN%IF EXPRESSION IS NOT A INTEGER,   68615000
              BEGIN            %    PRINT SYNTAX ERROR ILLEGAL OPRND    68620000
         COMMENT ILLEGAL GO TO DEPENDING OPERAND;         COMMENT 9-02; 68625000
                   ERP1(40,53,100,22);                    COMMENT 9-02; 68630000
              END;                                                      68635000
         XITG1:                                                         68640000
              END;                                                      68645000
COMMENT **************************    CLOS  **************************; 68645500
 PROCEDURE CLOS;                                                %TR 763 68650000
              BEGIN     % PROCESSES THE VERB "CLOSE" AND        %TR 763 68655000
                        % GENERATES CODE TO STORE PARAMETERS    %TR 763 68660000
                        % IN THE STACK FOR COBOLFCR INTRNSC     %TR 763 68660001
    INTEGER   T1,T2,T3;                                         %TR 763 68661000
    BOOLEAN   V,DSK;                                            %TR 763 68662000
    LABEL     ERR,C1,C2,C3,XITC;                                %TR 763 68665000
                   DN;                                          %TR 763 68670000
                   IF TYPE = 5 THEN                       COMMENT 4-10; 68671000
                   IF V~ICV1(ISYMB[0],4,0,LGTH)=1 THEN DN;COMMENT 4-10; 68671002
C1:                IF TYPE = 7 THEN  %  LOCK READ-ONLY         %CJC 056 68672000
                   IF CNSTFLG THEN                             %CJC 056 68673000
              BEGIN SYOUT(MSG[124],ISYMB,LGTH);                %CJC 056 68674000
                   ERP1(40,146,22,124);                        %CJC 056 68675000
         % ILLEGAL CONSTANT SECTION OPERAND XXXX               %CJC 056 68676000
                   GO TO XITC;                                 %CJC 056 68677000
              END  ELSE                                        %CJC 056 68678000
              BEGIN EMIL(LITC,PX);                             %CJC 056 68679000
                   IF PX > 511 THEN EMIL(OPR,XRT);             %CJC 056 68680000
                   EMIL(OPR,LOD);   EMIL(LITC,24);             %CJC 056 68681000
                   EMIL(DIA,43);    EMIL(DIB,3);               %CJC 056 68682000
                   EMIL(TRB,5);                                %CJC 056 68683000
                   EMIL(LITC,PX);                              %CJC 056 68684000
                   IF PX > 511 THEN EMIL(OPR,XRT);             %CJC 056 68685000
                   EMIL(OPR,STD);   DN;                        %CJC 056 68686000
                   IF KEY = 502 THEN DN;    % "AND"            %CJC 056 68686500
                   IF TYPE = 6 OR KEY = 413 OR                 %CJC 056 68687000
                    TYPE = 7 THEN GO TO C1                     %CJC 056 68688000
                    ELSE GO TO XITC;                           %CJC 056 68689000
              END;                                             %CJC 056 68690000
                   IF TYPE ! 6 THEN  % NOT FILE NAME           %CJC 056 68691000
              BEGIN                                            %CJC 056 68692000
                   IF KEY ! 413 THEN % NOT "DIAGNOSTICS"       %CJC 056 68693000
              BEGIN ERP1(77,9,7,83);   GO TO XITC;             %CJC 056 68694000
         % SYNTAX ERROR MISSING FILE-NAME                      %CJC 056 68695000
              END  ELSE                                        %CJC 056 68696000
                   IF (T1 ~ PIODESC) LEQ 3 THEN                %CJC 056 68697000
              BEGIN                                            %CJC 056 68698000
                        MSG[124] := "MONITOR" & 7[1:43:5];              68703000
                        ERP1(124,57,9,0); %MONITOR STATEMENT MISSING    68704000
                        GO TO XITC;                                     68705000
              END                                               %TR 763 68706000
                   ELSE IF V THEN GO TO ERR                     %TR 763 68707000
                   ELSE                                         %TR 763 68708000
              BEGIN DN;  GO TO C2                               %TR 763 68709000
              END;                                              %TR 763 68709100
              END ELSE T1 ~ FIBPX;%    LOCATION OF DIAGNOSTICS FILE     68710000
                             %    INTO T1, ELSE STORE PRT LOCATON       68710001
                             %    OF FILE INTO T1.                      68710002
                   IF V AND (DSK:=BOOLEAN (DICT[OCUR.ZW,OCUR.ZY].[8:1]))68713000
                          THEN GO TO ERR; %CLOSE 1 ON DISK              68714000
                   DN;                                                  68715000
                   IF KEY = 267 THEN%IF NEXT FIELD IS REEL STORE A CODE 68720000
              BEGIN            %    OF 1 INTO T2 ELSE STORE A CODE      68725000
                   T2 ~ 1;     %    OF 0 INTO T2.                       68730000
                   DN                                                   68735000
              END  ELSE                                                 68740000
C2:                T2 ~ 0;                                      %TR 763 68745000
                   EMIL(OPR,MKS)     ;                                  68750000
                   IF KEY = 290 THEN  % "WITH"                  %TR 763 68755000
              BEGIN T3 ~ 1;  DN;      %                         %TR 763 68755001
                   IF KEY = 920 THEN  % "RELEASE"               %TR 763 68760000
              BEGIN EMIL(LITC,7);      DN;                      %TR 763 68765000
                   IF T2 = 1 THEN GO TO ERR; % WAS CLOSE REEL   %TR 763 68766000
                   GO TO C3;                                    %TR 763 68767000
              END;                                              %TR 763 68768000
              END  ELSE T3 ~ 0;                                 %TR 763 68770000
                   IF KEY = 527 THEN  % "LOCK"                  %TR 763 68770001
              BEGIN EMIL(LITC,2);  DN;  GO TO C3;              %CJC 095 68775000
              END;                                              %TR 763 68780000
                   IF KEY = 268 THEN  % "NO"                    %TR 763 68785000
              BEGIN DN;                                         %TR 763 68787000
                   IF KEY ! 547 OR    % "REWIND"                %TR 763 68790000
                   DSK THEN           %OR FILE ASSIGNED TO DISK %TR 763 68793000
              BEGIN                                             %TR 763 68794000
ERR:               ERP1(40,63,27,0);  % ILLEGAL I-O SPEC        %TR 763 68795000
                   GO TO XITC;                                  %TR 763 68796000
              END;                                              %TR 763 68800000
                   EMIL(LITC,1);  DN;  GO TO C3;                %TR 763 68805000
              END;                                              %TR 763 68805001
                   IF ISYMB[0].[24:24] = "CRUN" OR             %CJC 064 68806000
                      ISYMB[0].[24:24] = "KRUN" THEN           %CJC 064 68807000
              BEGIN IF NOT DSK THEN GO TO ERR;                 %CJC 064 68807500
                   EMIL(LITC,64);    DN;   GO TO C3;           %CJC 064 68808000
              END;                                             %CJC 064 68809000
                   IF KEY = 545 THEN  % "PURGE"                 %TR 763 68810000
              BEGIN DN;  EMIL(LITC,4);                          %TR 763 68815000
                   IF T2 = 1 THEN GO TO ERR; % CLOSED "REEL"    %TR 763 68820000
                   GO TO C3;                                    %TR 763 68824000
              END;                                              %TR 763 68825000
                   IF T3 = 1 THEN GO TO ERR;                    %TR 763 68825001
                   EMIL(LITC,0);                                %TR 763 68830000
C3:                EMIL(LITC,T2);      EMIL(LITC,T1);           %TR 763 68870000
                             %EMIT CODE TO SETUP STACK FOR THE          68870001
                   EMIL(DESC,10);%    FILE CONTROL ROUTINE.             68875000
                   EMIL(LITC,(IF V THEN 17 ELSE 4));      COMMENT 4-10; 68876000
                   EMIL(OPDC,FCR)     ;                                 68880000
                   IF KEY = 502 THEN DN;    % "AND"            %CJC 060 68883000
                   IF TYPE = 6 OR KEY = 413 OR %FILE, RECORD   %CJC 056 68884000
                    TYPE = 7 THEN GO TO C1; %OR "DIAGNOSTICS"  %CJC 056 68885000
XITC:         END;   % END OF PROCEDURE CLOS                   %CJC 056 68890000
COMMENT **************************   OPEN   **************************; 68890500
 PROCEDURE OPEN;               %OPEN PROCEDURE PROCESSES THE OPEN       68895000
              BEGIN            %    VERB AND GENERATES THE CODE TO      68900000
                               %    STORE PARAMETERS IN THE    %CJC 057 68901000
                               %    STACK FOR COBOLFCR         %CJC 057 68902000
INTEGER  I,J,K,FD,V,X,Y,T1;                                    %CJC 057 68903000
BOOLEAN  DISC;                                                 %CJC 057 68904000
LABEL    ERR,D2,D3,D4,XITO,OP1,OP2,OP3;                        %CJC 057 68905000
                   DN;                                                  68915000
OP2:               IF TYPE = 7 THEN  %  UNLOCK READ-ONLY       %CJC 057 68916000
                   IF CNSTFLG THEN                             %CJC 057 68917000
              BEGIN SYOUT(MSG[124],ISYMB,LGTH);                %CJC 057 68918000
                   ERP1(40,146,22,124);                        %CJC 057 68919000
         % ILLEGAL CONSTANT SECTION OPERAND XXXX               %CJC 057 68920000
                   GO TO XITO;                                 %CJC 057 68921000
              END  ELSE                                        %CJC 057 68922000
              BEGIN EMIL(LITC,PX);                             %CJC 057 68923000
                   IF PX > 511 THEN EMIL(OPR,XRT);             %CJC 057 68924000
                   EMIL(OPR,LOD);   EMIL(LITC,0);              %CJC 057 68925000
                   EMIL(DIA,43);    EMIL(DIB,3);               %CJC 057 68926000
                   EMIL(TRB,5);                                %CJC 057 68927000
                   EMIL(LITC,PX);                              %CJC 057 68928000
                   IF PX > 511 THEN EMIL(OPR,XRT);             %CJC 057 68929000
                   EMIL(OPR,STD);    DN;                       %CJC 057 68930000
                   IF KEY = 502 THEN DN;    % "AND"            %CJC 057 68930500
                   IF TYPE = 7 OR KEY = 524 OR KEY = 535       %CJC 057 68931000
                    OR KEY = 266 THEN GO TO OP2;               %CJC 057 68932000
                   GO TO XITO;                                 %CJC 057 68933000
              END;                                             %CJC 057 68934000
                   IF KEY = 524 THEN I ~ 1 ELSE  % INPUT       %CJC 057 68935000
                   IF KEY = 535 THEN I ~ 3 ELSE  % OUTPUT      %CJC 057 68936000
                   IF KEY = 266 THEN I ~ 5 ELSE  % I-O         %CJC 057 68937000
              BEGIN ERP1(9,63,27,0);                           %CJC 057 68938000
                   GO TO XITO;                                 %CJC 057 68939000
              END;   %MISSING INPUT-OUTPUT SPECIFICATION       %CJC 057 68940000
                   DN;                                         %TR 1051 68940500
                   IF TYPE = 5 THEN                            %TR 1051 68941000
                   IF I ! 3 THEN GO TO ERR ELSE                %TR 1051 68942000
                   IF ICV1(ISYMB[0],4,0,LGTH) = 1 THEN         %TR 1051 68943000
              BEGIN DN;     I ~ 16;                            %TR 1051 68944000
              END  ELSE GO TO ERR;                             %TR 1051 68945000
                   IF TYPE = 6 THEN                            %TR 1051 68946000
               BEGIN IF I = 16 THEN                            %TR 1051 68947000
                   IF BOOLEAN(DICT[OCUR.ZW,OCUR.ZY].[8:1])     %TR 1051 68947500
                   THEN GO TO ERR;  % OPEN 1 ON DISK           %TR 1051 68948000
                   IF I ! 1 THEN  % IF OUTPUT OR I-O           %TR 1051 68948500
              BEGIN JCV(OILNK(OCUR)+2,J,K);                    %TR 1051 68949000
                   J ~ INFO[J,K].[8:10] + 4; %ADDR OF FIB[4]   %TR 1051 68949500
                   IF FIB[J.[38:3],J.[41:7]].[5:1] = 1 THEN    %TR 1051 68950000
         % IF OPENED OUTPUT OR I-O AN "OPTIONAL" FILE THEN     %TR 1051 68951000
ERR:          BEGIN ERP1(40,63,27,0);                          %TR 1051 68952000
                   GO TO XITO;                                 %TR 1051 68953000
              END; % ILLEGAL INPUT-OUTPUT SPECIFICATION        %TR 1051 68954000
              END; END ELSE                                    %TR 1051 68955000
                   IF KEY = 413 AND I ! 3 THEN GO TO ERR;      %TR 1051 68956000
OP1:               IF TYPE ! 6 THEN   % NOT A FILE-NAME        %CJC 057 68957000
              BEGIN IF KEY ! 413 THEN   % NOT "DIAGNOSTICS"    %CJC 057 68958000
         COMMENT MISSING FILE NAME                                8-27; 68990000
              BEGIN ERP1(9,7,83,0);                       COMMENT 8-27; 68995000
                   GO TO XITO                                           69000000
               END ELSE IF(T1:=PIODESC-3)LEQ 0 THEN                     69001000
                        BEGIN                                           69002000
                             MSG[124]:= "MONITOR"&7[1:43:5];            69003000
                             ERP1(124,57,9,0); %MONITOR STATMENT MISSING69004000
                             GO TO XITO;                                69005000
                             %IF FIELD IS DIAGNOSTICS, STORE PRT        69005001
                        END;                                            69006000
              END ELSE T1 ~ FIBPX;%    LOCATION OF DIAGNOSTICS FILE IN- 69010000
                             %    TO T1, ELSE STORE PRT LOCATION        69010001
                             %    OF FILE INTO T1.                      69010002
                   FD ~ OCUR;  IF LCOMP(390) THEN SCTRL                 69015000
                   ELSE DN;  JCV(FD,J,K);                               69015500
                   IF DISC~BOOLEAN(DICT[J,K].[8:1]) THEN    COMMENT DF; 69020000
                   GO TO D4;                                COMMENT DF; 69022000
                   IF I = 5 THEN GO TO ERR; %NON-DISK  I/O     %CJC 057 69022500
D2:                                                         COMMENT DF; 69023000
                   EMIL(OPR,MKS);  EMIL(LITC,T1);                       69025000
                             %EMIT CODE TO PUT FILE DESCRIPTOR          69025001
                   EMIL(DESC,10)     ;%  IN TOP OF THE STACK            69030000
                   IF DISC THEN GO TO D3;                   COMMENT DF; 69031000
                   IF KEY=390 THEN COMMENT "REEL-NUMBER";   COMMENT DF; 69031010
              BEGIN DN;                                     COMMENT DF; 69031020
                   IF TYPE = 5 THEN                     COMMENT 5-7-64; 69031030
              BEGIN  IF LGTH = 1 THEN                   COMMENT 5-7-64; 69031040
                     T2 ~ 0 &  ISYMB[0][42:24:6];       COMMENT 5-7-64; 69031050
                     IF LGTH = 2 THEN                   COMMENT 5-7-64; 69031060
                     T2 ~ 0 &  ISYMB[0][36:24:12];      COMMENT 5-7-64; 69031070
                     IF LGTH = 3 THEN                   COMMENT 5-7-64; 69031080
                     T2 ~ 0 &  ISYMB[0][30:24:18];      COMMENT 5-7-64; 69031090
                     IF LGTH > 3 THEN                   COMMENT 5-7-64; 69031100
              BEGIN                          COMMENT         5/8/64RES; 69031105
         COMMENT ILLEGAL INPUT-OUTPUT INTEGER                     8-27; 69031110
OP3:               ERP1(40,63,54,0); GO TO XITO;          COMMENT 8-27; 69031120
              END; COMMENT TYPED  "ILLEGAL INPUT-OUTPUT VALUE"  5-7-64; 69031130
                   CNQ ~ CNQ + 1; CNR ~ 0;              COMMENT 5-7-64; 69031140
                   CHRTRAN(T2,0,CNP[CNQ.[38:3],         COMMENT 5-7-64; 69031150
                           CNQ.[41:7]],CNR,8);          COMMENT 5-7-64; 69031160
                   EMIL(LITC,CNQ-1); COMMENT LITERAL REEL NO.IS 5-7-64; 69031170
                   EMIL(OPDC,CNPL); COMMENT FROM CONSTANT POOL  5-7-64; 69031180
                   CNQ ~ CNQ +1; CNR ~ 0;               COMMENT 5-7-64; 69031190
                   EMIL(OPR,XCH); COMMENT CORRECT STACK       5/8/64 ;  69031195
              END ELSE                                  COMMENT 5-7-64; 69031200
              BEGIN IF USAGE ! 0 THEN  COMMENT CMP OR CMP-1     5-7-64; 69031220
              BEGIN                                       COMMENT 7-24; 69031230
                   A1 ~ OFSZ(OCUR); COMMENT SAVE SIZE       5/7/64    ; 69031235
                   VALU (OCUR,SEG,T1,SUBS,1);             COMMENT 12-1; 69031240
                     EMIL(OPR,MKS); COMMENT                     5-7-64; 69031250
                   EMIL(LITC,STDLOC);                     COMMENT 7-24; 69031260
                   EMIL(DESC,10);                         COMMENT 7-24; 69031265
                     EMIL(LITC,0); COMMENT CHARACTER POSITION   5-7-64; 69031270
                     EMIL(LITC,0); COMMENT UNSIGNED             5-7-64; 69031280
                     EMIL(LITC,8); COMMENT SIZE                 5-7-64; 69031290
                     EMIL(OPDC,OCV1L);COMMENT FIXED CONV. PROC  5-7-64; 69031300
                   EMIL(OPR,DEL);                         COMMENT 8-7;  69031310
                   IF A1 >8 THEN EMIL(OPR,DEL);           COMMENT 8-7;  69031315
                   EMIL(OPDC,STDLOC);                     COMMENT 7-24; 69031317
                     EMIL(OPR,XCH);COMMENT CORRECTS OBJ STACK   5-7-64; 69031320
              END ELSE               COMMENT                    5-7-64; 69031330
              BEGIN  COMMENT ELEM DATA NAME DISPLAY             5-7-64; 69031340
                   IF MAPSZ(OCUR) ! 3 THEN GO TO OP3; COMMENT 5/13/64;  69031342
                   IF OCLAS(OCUR) ! 3 THEN GO TO OP3; COMMENT 5/14/64 ; 69031344
                   A1~PX;                                 COMMENT 9-28; 69031350
                   EMIL(OPR,MKS);    COMMENT                    5-7-64; 69031360
                   IF SUBS ! 0 THEN  COMMENT                    5-7-64; 69031370
              BEGIN HQX~0; SUBLST;                        COMMENT 9-28; 69031380
              END ELSE               COMMENT                    5-7-64; 69031390
              BEGIN EMIL(LITC,RX);   COMMENT                    5-7-64; 69031400
                    EMIL(LITC,QX);   COMMENT                    5-7-64; 69031410
              END; EMIL(DESC,A1);                         COMMENT 9-28; 69031420
                    EMIL(OPR,XCH);   COMMENT                    5-7-64; 69031430
                   EMIL(LITC,STDLOC);                     COMMENT 7-24; 69031440
                   EMIL(DESC,10);                         COMMENT 7-24; 69031445
                    EMIL(LITC,5);  COMMENT  POSITION            5-7-64; 69031450
                   EMIL(LITC,0); EMIL(LITC,0);            COMMENT 9-25; 69031455
                    EMIL(LITC,3);  COMMENT  SIZE                5-7-64; 69031460
                    EMIL(OPDC,OCHRTRAN); COMMENT MOVE TO STACK  5-7-64; 69031470
                   EMIL(OPDC,STDLOC);                     COMMENT 9-28; 69031475
                    EMIL(OPR,XCH); COMMENT CORRECTS OBJ. STACK  5-7-64; 69031480
              END;   COMMENT  IF THERE WAS REEL NO.IT WAS PUT   5-7-64; 69031490
              END;   COMMENT  IN STACK ABOVE MKS(BY FINAL XCH.) 5-7-64; 69031500
                   DN;                                                  69031505
              END;   COMMENT NOT REEL NO. FALL THRU TO HERE     5-7-64; 69031510
D3:                                                         COMMENT DF; 69035000
                   IF KEY ! 544 THEN%IF NEXT FIELD IS NOT REVERSED AND  69040000
                   EMIL(LITC,I) ELSE                        COMMENT DF; 69045000
                             %    INPUT WAS REQUESTED, EMIT A CODE      69045001
                             %    OF 1. IF NOT REVERSED AND OUTPUT      69050000
              BEGIN IF I!1 THEN                             COMMENT DF; 69065000
             BEGIN SYOUT(MSG[124],ISYMB,LGTH);                          69075000
                             %    REQUESTED, PRINT SYNTAX ERROR.        69075001
         COMMENT ILLEGAL OPERATOR XXXX                            8-27; 69075500
                   ERP1(40,23,124,0);                     COMMENT 8-27; 69080000
                   GO TO XITO                                           69085000
              END;                                                      69090000
                   EMIL(LITC,2)     ;%IF FIELD IS REVERSE AND INPUT WAS 69095000
                   DN          %    REQUESTED, EMIT A CODE OF 2.        69100000
              END;                                                      69105000
                   EMIL(OPDC,FCR)     ;                                 69110000
                             %EMIT OPDC ON THE FILE CONTROL ROUTIN      69110001
                   IF KEY = 502 THEN DN;    % "AND"            %CJC 060 69164000
                   IF KEY = 524 OR KEY = 535 OR KEY = 266      %CJC 058 69165000
                    THEN GO TO OP2;                            %CJC 058 69166000
         % IF INPUT OR OUTPUT OR INPUT-OUTPUT                  %CJC 058 69166001
                   IF TYPE = 7 THEN GO TO OP2; % IF RECORD (01)%CJC 057 69169000
                   IF TYPE = 6 OR KEY = 413 THEN GO TO OP1;             69170000
         % IF FILE-NAME OR "DIAGNOSTICS"                       %CJC 057 69170001
                   GO TO XITO;                              COMMENT DF; 69170050
D4:                V~DICT[J,K+2].[3:15];                    COMMENT DF; 69170100
                   IF V!0 THEN                              COMMENT DF; 69170200
         COMMENT IF ACTUAL KEY PRESENT IN FD ENTRY;         COMMENT DF; 69170250
              BEGIN IF OFSZ(V)>11 THEN                      COMMENT DF; 69170300
         COMMENT ACT.KEY SIZE ILLEGAL;                      COMMENT DF; 69170400
              BEGIN ERP(15&40[32:40:8],"ACT.KEY");          COMMENT DF; 69170500
                   COMPE ~ TRUE;                               %TR 1063 69170550
                   GO TO XITO;                              COMMENT DF; 69170600
              END; IF OUSG(V)=0 THEN                        COMMENT DF; 69170700
         COMMENT ACT.KEY USAGE ILLEGAL;                     COMMENT DF; 69170800
              BEGIN ERP(16&40[32:40:8],"ACT.KEY");          COMMENT DF; 69170900
                   COMPE ~ TRUE;                               %TR 1063 69170950
              END; IF OLEVL(V)!57 THEN                      COMMENT DF; 69171000
         %  ACT.KEY ILLEGAL LEVEL                              %CJC 059 69171010
              BEGIN ERP(40 & 35[32:40:8],"ACT.KEY");           %CJC 059 69171020
                   COMPE ~ TRUE;                               %CJC 059 69171025
                   GO TO XITO;                              COMMENT DF; 69171030
              END; IF OTYP(V)!8 THEN                        COMMENT DF; 69171040
         COMMENT ACT.KEY TYPE ILLEGAL;                      COMMENT DF; 69171050
              BEGIN ERP(47&40[32:40:8],"ACT.KEY");          COMMENT DF; 69171060
                   COMPE ~ TRUE;                               %TR 1063 69171065
                   GO TO XITO;                              COMMENT DF; 69171070
              END;                                          COMMENT DF; 69171100
                   IF DICT[J,K].[7:1]=0 THEN                COMMENT DF; 69171110
         COMMENT IF SEQUENTIAL DISK, SET ACTUAL KEY TO 1;   COMMENT DF; 69171115
              BEGIN EMIL(LITC,1); OAS(X,Y,A1,V);            COMMENT DF; 69171120
                   EMIL(LITC,Y);                            COMMENT DF; 69171130
                   IF OUSG(V)!2 THEN EMIL(DESC,X);          COMMENT DF; 69171140
                   EMIL(OPR,STD);                           COMMENT DF; 69171150
              END;                                          COMMENT DF; 69171160
              END;                                          COMMENT DF; 69171200
                   IF KEY=290 THEN DN; COMMENT "WITH";      COMMENT DF; 69171300
                   V~1; IF KEY=527 THEN COMMENT "LOCK";     COMMENT DF; 69171400
                   DN ELSE V~0;                             COMMENT DF; 69171500
                   EMIL(LITC,8); EMIL(OPDC,T1);             COMMENT DF; 69171600
                   EMIL(LITC,V); EMIL(DIA,IF V=1 THEN 47    COMMENT DF; 69171700
                   ELSE 1); EMIL(DIB,3); EMIL(TRB,1);       COMMENT DF; 69171800
                   EMIL(LITC,8); EMIL(DESC,T1);             COMMENT DF; 69171900
                   EMIL(OPR,STD); JCV(OILNK(FD)+2,V,Y);     COMMENT DF; 69172000
                   X~INFO[V,Y].[8:3]; Y~INFO[V,Y].[11:7];   COMMENT DF; 69172100
                   IF DICT[J,K].[9:1]=1 THEN                COMMENT DF; 69172200
         COMMENT STORE VALUE OF FILE-LIMIT DATANAME IN FIB; COMMENT DF; 69172250
              BEGIN V~FIB[X,Y+1]; A1~RNL~0;                 COMMENT DF; 69172300
                   VALU(V,SEG,0,0,2); EMIL(LITC,1);         COMMENT DF; 69172400
                   EMIL(DESC,T1);                           COMMENT DF; 69172500
                   EMIL(OPR,STD);                           COMMENT DF; 69172550
              END;                                          COMMENT DF; 69172600
                   IF DICT[J,K].[10:1]=1 THEN               COMMENT DF; 69172700
         COMMENT STORE VALUE OF FILE-LIMIT DATANAME IN FIB; COMMENT DF; 69172750
              BEGIN V~FIB[X,Y+3]; A1~RNL~0;                 COMMENT DF; 69172800
                   VALU(V,SEG,0,0,2); EMIL(LITC,3);         COMMENT DF; 69172900
                   EMIL(DESC,T1);                           COMMENT DF; 69173000
                   EMIL(OPR,STD);                           COMMENT DF; 69173050
              END;                                          COMMENT DF; 69173100
                   GO TO D2;                                COMMENT DF; 69173200
XITO:         END;      %  END OF OPEN                         %CJC 057 69175000
COMMENT **************************   HALT   **************************; 69175500
 PROCEDURE HALT;               %HALT PROCEDURE PROCESSES ALL STOP       69180000
              BEGIN            %    STATEMENTS--STOP RUN AND STOP       69185000
                   LABEL XITH; %    LITERAL. IT GENERATES CODE TO       69190000
% ************************** MOVEFORCOM ******************************* 69191000
STREAM PROCEDURE MOVEFORCOM(START,DEST,LGTH,DIFF);                      69191100
    VALUE     LGTH,DIFF;                                                69191200
         BEGIN                                                          69191300
                   SI~START; SI ~ SI +4;                                69191400
                   DI~DEST ; DI ~ DI +2;                                69191500
                   DS ~ LGTH CHR ;                                      69191600
                   DIFF (DS~ LIT " ");                                  69191700
         END MOVEFORCOM;                                                69191800
INTEGER       T6,T7;                                                    69191900
                   DN;         %    PRINT LITERALS ON THE MESSAGE       69195000
                             %    PRINTER FOR A STOP LIT AND TERM-      69195001
                             %    INATES THE PROGRAM ON A STOP RUN      69195002
                   IF KEY = 548 THEN%IF THE NEXT FIELD IS RUN, THE STOP 69200000
              BEGIN            %    RUN FLAG IS SET TRUE AND CODE IS    69205000
                   SRFLG ~ TRUE;%    EMITTED TO TERMINATE THE PROGRAM   69210000
                   EMIL(LITC,10);                          COMMENT DF;  69215000
                   EMIL(OPR,COM);                          COMMENT DF;  69220000
                   EMIL(LITC,5);                                        69230000
                   EMIL(OPR,COM);                                       69230500
                   DN                                                   69235000
              END  ELSE                                                 69240000
              BEGIN                                                     69245000
                   IF TYPE ! 5 THEN%IF THE FIELD IS NOT RUN AND NOT A   69250000
              BEGIN            %    LITERAL THEN PRINT SYNTAX ERROR     69255000
                   EIND ~ 77 & 9 [32:40:8] & 1 [24:40:8];               69260000
                             %    MISSING LITERAL.                      69260001
                   ERP(EIND,0)      ; RECOV; GO TO XITH                 69265000
              END  ELSE                                                 69270000
                   IF (T7 ~SMBX.[40:8])> 240 THEN  % THIS MOVES THE LIT 69271100
              BEGIN     SMBX ~ SMBX+ 225;          % TO THE CONSTANT    69271200
                        SMBX.[40:8]~ T7 ~ 0;       % POOL               69271300
              END; MOVEFORCOM(ISYMB,SMB[(T6~SMBX.[35:5]),T7],           69271400
                        (LGTH~IF LGTH>6 THEN 6 ELSE LGTH),6-LGTH);      69271500
                   EMIL (LITC,  T6);               % THIS MOVES CST FROM69271600
                   EMIL (DESC,SMBL);               % POOL TO STACK      69271700
                   EMIL (OPR , LOD);               % AND SETS UP FOR    69271800
                   EMIL (LITC,  T7);               % COM  33            69271900
                   EMIL (OPR , COC);               %                    69273000
                   SMBX ~ SMBX + 1 ;                                    69273100
                   EMIL (LITC,  33);                                    69273200
                   EMIL (OPR , COM);                                    69275000
                   EMIL (OPR , DEL);  DN           % COM  33 GEN-       69275001
                        ;      %    ERATES CODE TO TYPE THE LITERAL     69275500
              END;             %    ON THE MESSAGE PRINTER.             69280000
         XITH: END;                                                     69290000
COMMENT **************************  SEEK  *************************** ; 69291000
PROCEDURE SEEK;                                             COMMENT DF; 69292000
              BEGIN                                         COMMENT DF; 69294000
    INTEGER A,B,J,K,X,Y,C,D,T,ADR;                          COMMENT DF; 69296000
    LABEL S1,SXIT,GENDCSEEK;                                            69298000
                   DN; B~OCUR; ADR~IODESC;                  COMMENT DF; 69300000
                   IF TYPE!6 THEN                           COMMENT DF; 69302000
         COMMENT ILLEGAL FILE NAME;                         COMMENT DF; 69304000
S1:           BEGIN ERP1(40,7,83,0);  GO TO SXIT;           COMMENT DF; 69306000
              END;                                          COMMENT DF; 69307000
                   IF HDWR=14 THEN  % DATACOM                      %DATA69307010
         BEGIN     DN;                                           %TR-65369307020
                   IF KEY = 336 THEN DN;         % RECORD        %TR-65369307030
                   IF KEY = 911 OR KEY = 920 THEN%INCLUDE OR RELEASE-65369307040
                        GO TO GENDCSEEK;                         %TR-65369307045
                   EMIL(OPR,MKS);                                %TR-65369307050
                        IF KEY=335 THEN  % FROM                         69307060
                    BEGIN DN; IF NOT INTEGEROPERAND THEN GO SXIT ELSE   69307070
                             IF NOT INTEGEROPERAND THEN GO SXIT         69307080
                        END ELSE                                        69307090
                        BEGIN SYOUT(MSG[124],ISYMB,LGTH);               69307100
                             ERP1(40,11,27,124); GO SXIT                69307110
                   END; END ELSE                                        69307120
              BEGIN                                                %DATA69307130
                   JCV(B,J,K); IF DICT[J,K].[7:2]!3 THEN    COMMENT DF; 69308000
                   GO TO S1; DN;                            COMMENT DF; 69309000
                   IF KEY=336 THEN DN; COMMENT "RECORD";    COMMENT DF; 69310000
                   IF KEY=290 THEN DN; COMMENT "WITH";      COMMENT DF; 69312000
                   IF KEY=706 THEN DN; COMMENT "KEY";       COMMENT DF; 69314000
                   IF KEY=228 THEN COMMENT "CONVERSION";    COMMENT DF; 69316000
              BEGIN DN; JCV(OILNK(B),X,Y);                  COMMENT DF; 69317000
                   IF A~INFO[X,Y].[33:15]=0 THEN            COMMENT DF; 69318000
         COMMENT ILLEGAL PROCEDURE SPECIFICATION;           COMMENT DF; 69319000
              BEGIN ERP1(40,29,27,0); GO TO SXIT;           COMMENT DF; 69320000
              END;                                          COMMENT DF; 69322000
                   JCV(A+1,C,D); A~DICT[C,D].[8:10];        COMMENT DF; 69324000
                   IF T~DICT[C,D].[18:10]=0 OR              COMMENT DF; 69326000
                   DICT[C,D].[4:1]=0 THEN T~A;              COMMENT DF; 69327000
                   EMIL(OPR,MKS); EMIL(LITC,A);             COMMENT DF; 69328000
                   EMIL(OPR,DUP); IF A>511 THEN EMIL(OPR,   COMMENT DF; 69329000
                   XRT); EMIL(OPR,LOD); EMIL(LITC,T);       COMMENT DF; 69330000
                   EMIL(OPR,COC);                           COMMENT DF; 69332000
              END;                                          COMMENT DF; 69334000
                   EMIL(OPR,MKS); RNL~A1~0;                 COMMENT DF; 69336000
                   VALU(DICT[J,K+2].[3:15],SEG,0,0,2);      COMMENT DF; 69337000
                   EMIL(LITC,INFO[X,Y+1].[16:10]);          COMMENT DF; 69338000
              END;                                                 %DATA69338500
                   EMIL(LITC,ADR); EMIL(DESC,10);           COMMENT DF; 69339000
                   EMIL(LITC,2); EMIL(OPDC,RWR);            COMMENT DF; 69340000
                   GO TO SXIT;                                   %TR-65369342000
         GENDCSEEK:                                                     69342100
                   EMIL(LITC,2|REAL(KEY=920));   % INCLUDE = 0   %TR-65369342200
                   DN;                           % RELEASE = 2   %TR-65369342300
              IF INTEGEROPERAND AND INTEGEROPERAND THEN                 69342700
                   BEGIN                                                69342800
                   EMIL(LITC,ADR); EMIL(DESC,10);                       69342900
                   EMIL(LITC,32); EMIL(OPR,COM);                        69343000
                   EMIL(OPR,DEL); EMIL(OPR,DEL);                        69343100
                   EMIL(OPR,DEL); EMIL(OPR,DEL);                        69343200
                   END;                                          %TR-65369343300
SXIT:         END SEEK;                                                 69349998
COMMENT **************************  USEPAR  **************************; 69349999
 PROCEDURE USEPAR;             %PROCEDURE USEPAR STORES THE END         69350000
              BEGIN REAL I,J;  %    PARAGRAPH OF A USE PROCEDURE        69355000
                   UFLG ~ FALSE;%    INTO THE FIB.                      69356000
         COMMENT   STORE ENDING PARAGRAPH INTO FIB;                     69360000
                    JCV(CPAR+1,I,J);                                    69365000
                   T6A ~ DICT[I,J].[8:10];                              69370000
                             %T6A ~ REL PRT ADR FOR END PARA.           69370001
         COMMENT   CHECK FOR ERROR PROCEDURE OPTION;                    69375000
                   IF ERZ THEN                                          69380000
              BEGIN                                                     69385000
                   IF FN THEN                                           69390000
         COMMENT   ERROR PROCEDURE AND FILE-NAME;                       69395000
             BEGIN A~T5A+15;  FIB[A.[38:3],A.[41:7]].[12:12]~T6A;       69400000
             END               %    PARA INTO FILE FIB[15].12:12        69400001
                   ELSE                                                 69405000
              BEGIN                                                     69410000
                   IF IO=1 THEN COMMENT "INPUT";            COMMENT DF; 69415000
         COMMENT   ERROR PROCEDURE AND I/O;                             69420000
             BEGIN FIB[0,9].[12:12] ~ T6A                               69425000
             END               %    INTO PROG FIB.12:12.                69425001
                   ELSE IF IO=2 THEN COMMENT "OUTPUT";      COMMENT DF; 69430000
             BEGIN FIB[0,9].[36:12] ~ T6A%IF ERROR AND OUTPUT STORE END 69435000
              END ELSE COMMENT "INPUT-OUTPUT" FOR DISK;     COMMENT DF; 69435001
                             %    PARA INTO PROG FIB.36:12.             69435002
                   FIB[0,12].[12:12]~T6A;                   COMMENT DF; 69436000
              END                                                       69440000
              END  ELSE                                                 69445000
         COMMENT   LABEL PROCEDURE;                                     69450000
              BEGIN                                                     69455000
                   IF FN THEN                                           69460000
              BEGIN                                                     69465000
         COMMENT   LABEL PROCEDURE WITH FILE-NAME;                      69470000
                   IF BA THEN                                           69475000
              BEGIN                                                     69480000
         COMMENT   LABEL PROCEDURE WITH FILE-NAME AND BEFORE;           69485000
                   A~T5A+T1A; FIB[A.[38:3],A.[41:7]].[12:12]~T6A;       69490000
                             %BEFORE-BEGIN OR END-REEL OR FILE          69490001
                   IF T2A ! 0 THEN%    FILE-NAME.                       69495000
              BEGIN                                                     69500000
                   A~T5A+T2A; FIB[A.[38:3],A.[41:7]].[12:12]~T6A;       69505000
                             %BEFORE-BEGIN OR END-REEL AND FILE         69505001
                   IF T3A ! 0 THEN%    FILE-NAME.                       69510000
              BEGIN                                                     69515000
                   A~T5A+T3A; FIB[A.[38:3],A.[41:7]].[12:12]~T6A;       69520000
                             %BEFORE-BEGIN AND END-REEL AND FILE        69520001
                   A~T5A+T4A; FIB[A.[38:3],A.[41:7]].[12:12]~T6A;       69525000
                             %    FILE-NAME.                            69525001
              END                                                       69530000
              END                                                       69535000
              END  ELSE                                                 69540000
         COMMENT   LABEL PROCEDURE WITH FILE-NAME AND AFTER;            69545000
              BEGIN                                                     69550000
                   A~T5A+T1A; FIB[A.[38:3],A.[41:7]].[36:12]~T6A;       69555000
                             %AFTER-BEGIN OR END-REEL OR FILE           69555001
                   IF T2A ! 0 THEN%    FILE-NAME.                       69560000
              BEGIN                                                     69565000
                   A~T5A+T2A; FIB[A.[38:3],A.[41:7]].[36:12]~T6A;       69570000
                             %AFTER-BEGIN OR END-REEL AND FILE          69570001
                   IF T3A ! 0 THEN%    FILE-NAME.                       69575000
              BEGIN                                                     69580000
                   A~T5A+T3A; FIB[A.[38:3],A.[41:7]].[36:12]~T6A;       69585000
                             %AFTER-BEGIN AND END-REEL AND FILE         69585001
                   A~T5A+T4A; FIB[A.[38:3],A.[41:7]].[36:12]~T6A;       69590000
                             %    FILE-NAME.                            69590001
              END                                                       69595000
              END                                                       69600000
              END                                                       69605000
              END  ELSE        %BEFORE-BEGIN OR END-REEL OR FILE        69610000
         COMMENT   LABEL PROCEDURE WITH I/O;                            69615000
              BEGIN                                                     69620000
                   IF BA THEN                                           69625000
              BEGIN                                                     69630000
         COMMENT   LABEL PROCEDURE WITH I/O AND BEFORE;                 69635000
                   FIB[T1A.[38:3],T1A.[41:7]].[12:12]   ~ T6A;          69640000
                   IF T2A ! 0 THEN%    INPUT OR OUTPUT.                 69645000
              BEGIN                                                     69650000
                   FIB[T2A.[38:3],T2A.[41:7]].[12:12]   ~ T6A;          69655000
                             %BEFORE-BEGIN OR END-REEL AND FILE         69655001
                   IF T3A ! 0 THEN%    INPUT OR OUTPUT.                 69660000
              BEGIN                                                     69665000
                   FIB[T3A.[38:3],T3A.[41:7]].[12:12]   ~ T6A;          69670000
                             %BEFORE-BEGIN AND END-REEL AND FILE        69670001
                   FIB[T4A.[38:3],T4A.[41:7]].[12:12]   ~ T6A           69675000
                             %    INPUT OR OUTPUT.                      69675001
              END                                                       69680000
              END                                                       69685000
              END  ELSE                                                 69690000
         COMMENT   LABEL PROCEDURE WITH I/O AND AFTER;                  69695000
              BEGIN                                                     69700000
                   FIB[T1A.[38:3],T1A.[41:7]].[36:12]   ~ T6A;          69705000
                             %AFTER-BEGIN OR END-REEL OR FILE           69705001
                   IF T2A ! 0 THEN%    INPUT OR OUTPUT.                 69710000
              BEGIN                                                     69715000
                   FIB[T2A.[38:3],T2A.[41:7]].[36:12]   ~ T6A;          69720000
                             %AFTER-BEGIN OR END-REEL AND FILE          69720001
                   IF T3A ! 0 THEN%    INPUT OR OUTPUT.                 69725000
              BEGIN                                                     69730000
                   FIB[T3A.[38:3],T3A.[41:7]].[36:12]   ~ T6A;          69735000
                             %AFTER-BEGIN AND END-REEL AND FILE         69735001
                   FIB[T4A.[38:3],T4A.[41:7]].[36:12]   ~ T6A           69740000
                             %    INPUT OR OUTPUT.                      69740001
              END                                                       69745000
              END                                                       69750000
              END                                                       69755000
              END                                                       69760000
              END;                                                      69765000
              END;                                                      69770000
COMMENT **************************    USE   **************************; 69770025
                             %PROCEDURE USE CHECKS SYMTAX FOR           69770026
 PROCEDURE USE;                %    USE VERB AND SETS UP PARAMETERS     69770030
             BEGIN LABEL XITU,U2,U3,U4;                                 69770040
                             %    FOR STORING BEGIN & END PARAS         69770041
                             %    INTO FIB.                             69770042
LABEL U5;                                                 COMMENT 9-10; 69770050
   INTEGER J,K,I; LABEL D1,D2,D3,D4,D5;                     COMMENT DF; 69770055
    LABEL D6;                                               COMMENT DF; 69770057
                   IF NOT DECF THEN                                     69770060
                             %IF USE IS NOT IN DECLARATIVES, PRINT      69770061
         COMMENT MISSING DECLARATION SECTION;             COMMENT 9-10; 69770080
                             %    SYNTAX ERROR.                         69770081
              BEGIN ERP1(9,25,31,0); GO TO XITU;          COMMENT 9-10; 69770100
              END;                                          COMMENT DF; 69770120
                   DN; IF KEY=330 THEN COMMENT "FOR";       COMMENT DF; 69770140
              BEGIN DN; IF KEY=706 THEN COMMENT "KEY";      COMMENT DF; 69770160
                             %IF PREVIOUS PROCEDURE WAS A USE,          69770161
                             %    CALL USEPAR.                          69770162
D1:                DN; IF KEY!228 THEN COMMENT "CONVERSION"         DF; 69771000
         COMMENT SYNTAX ERROR MISSING VERB;                 COMMENT DF; 69771200
              BEGIN ERP1(77,9,96,0); GO TO D5;              COMMENT DF; 69771400
              END;                                          COMMENT DF; 69771600
D2:                DN; I~0; IF KEY=271 THEN COMMENT "ON";   COMMENT DF; 69772000
D3:                DN; IF TYPE!6 THEN COMMENT FILE;         COMMENT DF; 69772200
              BEGIN IF I=0 THEN                             COMMENT DF; 69772400
         COMMENT ILLEGAL INPUT-OUTPUT SPECIFICATION;        COMMENT DF; 69772600
D4:                ERP1(40,63,27,0) ELSE IF SCLAS=7 THEN DN COMMENT DF; 69772800
                   ELSE ERP(79,0);                          COMMENT DF; 69772850
                   GO TO D5;                                COMMENT DF; 69773000
              END;                                          COMMENT DF; 69773200
                   JCV(OCUR,J,K); IF DICT[J,K].[7:2]!3      COMMENT DF; 69773400
                   THEN GO TO D4; I~1; JCV(DICT[J,K+1].     COMMENT DF; 69773600
                   [33:15],J,K); INFO[J,K].[33:15]~CSEC;    COMMENT DF; 69773800
                   GO TO D3;                                COMMENT DF; 69774000
              END;                                          COMMENT DF; 69774200
                   IF KEY=706 THEN GO TO D1; COMMENT "KEY"; COMMENT DF; 69774400
                   IF KEY=228 THEN GO TO D2;                COMMENT DF; 69774600
                   IF UFLG THEN USEPAR;                     COMMENT DF; 69774800
                   UFLG ~ TRUE;%INITIALIZE FLAGS AND FIB REL ADR.       69775000
                   UFLG1 ~ TRUE;                                        69780000
                   ERZ ~ BA ~ FN ~ FALSE; IO ~0; %                      69785000
                   T1A ~ T2A ~ T3A ~ T4A ~ 0;                           69790000
                   T5A ~ 0;                                             69790500
                   IF KEY = 503 THEN%IF FIELD IS BEFORE, SET BEFORE/    69800000
                   BA ~ TRUE   %    AFTER FLAG TRUE.                    69805000
                   ELSE                                                 69810000
              BEGIN                                                     69815000
                   IF KEY ! 506 THEN%IF FIELD IS NOT BEFORE OR AFTER,   69820000
             BEGIN SYOUT(MSG[124],ISYMB,LGTH);%    PRINT SYNTAX ERROR.  69825000
         COMMENT MISSING OPERATOR XXXX;                   COMMENT 9-10; 69830000
                   ERP1(9,23,124,0); GO TO XITU;          COMMENT 9-10; 69835000
              END                                                       69850000
              END;                                                      69855000
                   DN;         %PICK UP NEXT FIELD.                     69860000
                   IF KEY = 291 THEN%SCAN BY PHRASE STANDARD ERROR.     69865000
                   DN;                                                  69870000
                   IF KEY ! 515 THEN                                    69875000
                   GO TO U2;                                            69880000
                   DN;                                                  69885000
                   IF KEY ! 539 THEN%IF FIELD IS NOT PROCEDURE,PRINT    69890000
             BEGIN SYOUT(MSG[124],ISYMB,LGTH);%    SYNTAX ERROR.        69895000
         COMMENT PROCEDURE MISSING XXXX;                  COMMENT 9-10; 69900000
U5:                ERP1(29,9,124,0); GO TO XITU;          COMMENT 9-10; 69905000
              END;                                                      69920000
                   ERZ ~ TRUE; %SET ERROR FLAG.                         69925000
                   DN;                                                  69930000
                   IF KEY = 271 THEN%SCAN BY WORD ON.                   69935000
                   DN;                                                  69940000
                   IF TYPE = 6 THEN%IF FIELD IS FILE NAME, T5A ~ LOC    69945000
              BEGIN            %    OF FIB AND FILE NAME FLAG TRUE      69950000
                   T5A ~ CFIB;                                          69955000
                   FN ~ TRUE                                            69960000
              END  ELSE                                                 69965000
              BEGIN                                                     69970000
                   IF KEY = 524 THEN                                    69975000
                             %IF FIELD IS INPUT, SET INPUT/OUTPUT       69975001
                   IO~1 COMMENT "INPUT";                    COMMENT DF; 69980000
                             %    FLAG TRUE.                            69980001
                   ELSE                                                 69985000
                   IF KEY=535 THEN IO~2 COMMENT "OUTPUT";   COMMENT DF; 69990000
                   ELSE IF KEY=266 THEN IO~3 COMMENT "I-O"; COMMENT DF; 69995000
                             %IF FIELD IS NOT OUTPUT, PRINT SYNTAX      69995001
                   ELSE                                     COMMENT DF; 69996000
             BEGIN SYOUT(MSG[124],ISYMB,LGTH);%    ERROR.               70000000
         COMMENT MISSING INPUT-OUTPUT OPERAND XXXX;       COMMENT 9-10; 70005000
                   ERP1(9,63,22,124);                     COMMENT 9-10; 70010000
              END                                                       70025000
              END;                                                      70030000
                   GO TO XITU;                                          70035000
         U2:       IF KEY ! 351 THEN                                    70040000
                             %IF FIELD IS NOT BEGINNING OR ENDING       70040001
              BEGIN            %              USE ON BOTH.              70045000
                   IF KEY ! 366 THEN                                    70050000
                   GO TO U3                                             70055000
                   ELSE                                                 70060000
                   T1A ~ 2                                              70065000
              END;                                                      70070000
                   DN;                                                  70075000
                   IF KEY ! 332 THEN%IF FIELD IS NOT FILE OR REEL,      70080000
              BEGIN            %    USE ON BOTH, ELSE USE ON REEL       70085000
                   IF KEY ! 267 THEN                                    70090000
              BEGIN                                                     70095000
                   T2A ~ T1A + 1;                                       70100000
                   GO TO U4                                             70105000
              END  ELSE                                                 70110000
                   T1A ~  T1A + 1                                       70115000
              END;                                                      70120000
                   DN;                                                  70125000
                   GO TO U4;                                            70130000
         U3:       IF KEY ! 332 THEN                                    70135000
                             %IF USE ON BEGIN, END, FILE AND REEL       70135001
              BEGIN            %    SET T2A, T3A, T4A, ELSE SET         70140000
                   IF KEY ! 267 THEN%    T1A, T2A.                      70145000
              BEGIN                                                     70150000
                   T2A ~ 1;                                             70155000
                   T3A ~ 2;                                             70160000
                   T4A ~ 3;                                             70165000
              END  ELSE                                                 70170000
              BEGIN                                                     70175000
                   T1A ~ 1;                                             70180000
                   T2A ~ 3;                                             70185000
                   DN                                                   70190000
              END                                                       70195000
              END  ELSE                                                 70200000
              BEGIN                                                     70205000
                   T2A ~ 2;                                             70210000
                   DN                                                   70215000
              END;                                                      70220000
         U4:       IF KEY ! 305 THEN%IF FIELD IS NOT LABEL, PRINT       70225000
             BEGIN SYOUT(MSG[124],ISYMB,LGTH);%    SYNTAX ERROR.        70230000
                   EIND ~ 37&  9[32:40:8]& 124[24:40:8];                70235000
                   ERP(EIND,0)      ;                                   70240000
                   RECOV;                                               70245000
                   GO TO XITU                                           70250000
              END;                                                      70255000
                   DN;                                                  70260000
                   IF KEY!539 THEN GO TO U5;                            70265000
                             %IF FIELD IS NOT PROCEDURE, PRINT          70265001
                             %    SYNTAX ERROR.                         70270000
                   DN;                                                  70300000
                   IF KEY = 271 THEN%SCAN BY WORD ON.                   70305000
                   DN;                                                  70310000
                   IF TYPE = 6 THEN%IF FIELD IS A FILE NAME, FILE NAME  70315000
             BEGIN T5A ~ CFIB;                                          70315500
                   FN ~ TRUE   %    FLAG TRUE, T5A ~ LOC OF FIB.        70320000
              END  ELSE                                                 70325000
              BEGIN                                                     70330000
                   IF KEY=524 THEN IO~1 COMMENT "INPUT";    COMMENT DF; 70332000
                   ELSE IF KEY=535 THEN COMMENT "OUTPUT";   COMMENT DF; 70335000
                             %IF FIELD IS INPUT, SET I/O FLAG TRUE      70335001
              BEGIN IO~2; T1A~T1A+4;                        COMMENT DF; 70337000
              END ELSE IF KEY=266 THEN COMMENT "I-O"        COMMENT DF; 70340000
              BEGIN IO~3; IF T1A!0 THEN COMMENT END ONLY;   COMMENT DF; 70342000
              BEGIN T1A~11; T2A~0; GO TO XITU;              COMMENT DF; 70345000
              END;                                          COMMENT DF; 70347000
                   IF T2A=0 THEN COMMENT BEGIN ONLY;        COMMENT DF; 70350000
D6:           BEGIN T1A~10; T2A~0; GO TO XITU;              COMMENT DF; 70352000
              END;                                          COMMENT DF; 70355000
                   IF T2A=1 AND T3A=0 THEN GO TO D6;        COMMENT DF; 70357000
         COMMENT BOTH BEGIN AND END;                        COMMENT DF; 70360000
                             %IF FIELD IS NOT OUTPUT, PRINT             70360001
                   T1A~10; T2A~11; T3A~T4A~0;               COMMENT DF; 70365000
                             %    SYNTAX ERROR.                         70365001
              END ELSE                                      COMMENT DF; 70370000
             BEGIN SYOUT(MSG[124],ISYMB,LGTH);                          70375000
         COMMENT INPUT-OUTPUT MISSING XXXX;               COMMENT 9-10; 70380000
                   ERP1(63,9,124,0);                      COMMENT 9-10; 70385000
              END                                                       70395000
              END;                                                      70405000
         XITU:     DN; DN;                                              70410000
D5:                                                         COMMENT DF; 70412000
              END;                                                      70415000
COMMENT **************************  STATMT  **************************; 70415500
 PROCEDURE STATMT;             %STATMT PROCEDURE RECOGNIZES THE VERB    70420000
              BEGIN LABEL SW,S1,XITL,V1,V2,V3,V4,V5,V7,                 70425000
                             %    TO BE PROCESSED AND CALLS ON THE      70425001
              V6,                                                       70428000
                           V9, V10, V11, V12, V13, V14, V15, V16, V17,  70430000
                             %    APPROPRIATE PROCEDURE TO PROCESS      70430001
             S2,V8,V18,V19,V20,V21,V22,V23,V24,V26,V27;%    THE VERB.   70435000
         SWITCH S~V1,V2,V3,V4,V5,V6,V7,V8,V9,               COMMENT DF; 70440000
                   V10,V11,V12,V13,V14,V15,V16,V17,V18,   COMMENT 9-10; 70445000
         V19,V20,V21,V22,V23,V24,V13,V26,V27,V19;                       70450000
       S1:         GO TO S[KEY-900];%KEY NUMBERS FRO VERBS FALL BETWEEN 70455000
S2:                                                       COMMENT 9-10; 70457000
                   IF KEY = 703 THEN%    900 AND 927 EXCEPT FOR RETURN. 70460000
              BEGIN                                                     70465000
                   VRTN; GO TO S1%RETURN VERB.                          70470000
              END;                                                      70475000
                   IF KEY=352 OR KEY=555 OR KEY=263 THEN COMMENT DF-DC; 70476000
              BEGIN  WHENTILASGN;  GO  TO S1;            COMMENT DF-DC; 70476100
              END;  COMMENT  WHEN,UNTIL OR ASSIGN LOC;   COMMENT DF-DC; 70476200
                   IF KEY = 473 AND RF THEN                             70480000
                             %IF FIELD IS A PERIOD AND END OF A         70480001
                             %    STATEMENT GROUP, IF, AT END OR        70480002
                             %    ON SIZE ERROR, EXIT TO THE ROUT-      70480003
                             %    INE THAT CALLED STATMT.               70480004
                   GO TO XITL;                                          70485000
              IF KEY=336 OR KEY=395  THEN                               70486000
                   BEGIN                                                70486300
                   DCERANDSEARCH;                                       70486600
                   GO TO S1;                                            70486900
                   END;                                                 70487000
                   IF KEY = 473 THEN BEGIN FRFLG~FALSE;DN;GO TO S1 END; 70490000
                             %SET FULL RELATION FLAG FALSE AT THE       70490001
                             %    BEGINNING OF A SENTENCE.              70490002
                   IF KEY =211 THEN%IF PROC DIV RERUN THEN              70490100
              BEGIN EMIL(LITC,0); EMIL(LITC,12);           COMMENT DF;  70490200
                   EMIL(OPR,COM);  EMIL(OPR,DEL);         COMMENT 1-65; 70490300
                   DN;  GO TO S1;                         COMMENT 1-65; 70490400
              END;                                        COMMENT 1-65; 70490500
                   IF TYPE !3 AND SCLAS ! 6 THEN                        70495000
                             %IF FIELD IS NOT LABEL, END-OF-JOB,        70495001
              BEGIN            %    END DECLARATIVES, OR ELSE IN A      70500000
                   IF KEY ! 718 THEN%    STATEMENT GROUP, PRINT SYNTAX  70505000
              BEGIN            %    ERROR UNIDENTIFIED VERB XXXXX.      70510000
                   IF KEY ! 512 THEN                                    70515000
              BEGIN                                                     70520000
                   IF KEY = 511 AND RF THEN GO TO XITL;                 70525000
                   IF LGTH = 6 THEN                  %         %CJC 063 70526000
                   IF ISYMB[0].[24:24] = "FORG" THEN % VERB IS %CJC 063 70527000
              BEGIN FORGETVERB;                      % "FORGET"%CJC 063 70528000
                   GO TO S1;                         %         %CJC 063 70529000
              END;                                   %         %CJC 063 70530000
                   GO TO V6;                                            70540000
              END                                                       70550000
              END                                                       70555000
              END;             %THESE ARE THE CALLS ON PROCEDURES TO    70560000
                   GO TO XITL; %    PROCESS VERBS:                      70565000
         V1:       ACCEPT; GO TO S1;%ACCEPT                             70570000
         V2:       ADDITION; GO TO S1;%ADD                              70575000
         V3:       ALTER; GO TO S1;%ALTER                               70580000
         V4:       CLOS;  GO TO S1;%CLOSE                               70585000
         V5:       COMPUTE; GO TO S1;%COMPUTE                           70590000
         V7:       DISPLA; GO TO S1;%DISPLAY                            70605000
         V8:       DIVIDE; GO TO S1;%DIVIDE                             70610000
         V9:       EXAMINE; GO TO S1;%EXAMINE                           70615000
         V10:      DN;CONDITION;IFSTMNT;GO TO S1;       COMMENT 5/1/64; 70620000
                             %IF                                        70620001
         V11:      REFIND ~ FIND; MB.[1:1]~REFIND;    % FIND CHANGES MB 70625000
                  IF MB.[1:1] THEN ELSE WHILE SCLAS!7 DO SCTRL;  %TR-37670626000
                   GO TO S1;                                     %TR-37670627000
V6:                SYOUT(MSG[124],ISYMB,LGTH);              COMMENT DF; 70630000
                             %"UNIDENTIFIED VERB XXXX".                 70630001
         COMMENT UNIDENTIFIED VERB XXXX;                  COMMENT 9-10; 70630500
                   ERP1(13,96,124,0); GO TO S1;           COMMENT 9-10; 70635000
V12:               SEEK; GO TO S1;                          COMMENT DF; 70637000
V13:     COMMENT SYNTAX ERROR VERB SEQUENCE ERROR;        COMMENT 9-10; 70640000
                             %"SYNTAX ERROR SEQUENCE ERROR".            70640001
         COMMENT VERB IS EXIT OR MONITOR;                 COMMENT 9-10; 70642000
                   ERP1(77,96,65,8); GO TO S1;            COMMENT 9-10; 70645000
         V14:      MOVE; GO TO S1;%MOVE                                 70650000
         V15:      MULTIPLY; GO TO S1;%MULTIPLY                         70655000
         V16:      OPEN; GO TO S1;%OPEN                                 70660000
         V17:      PERFORM; GO TO S1;%PERFORM                           70665000
         V18:      REEDVRB ~ TRUE; READE; GO TO S1; %READ      %CJC 003 70670000
         V19:      SORTGEN; GO TO S1;%SORT                              70675000
         V20:      RELEAS; GO TO S1;%RELEASE                            70680000
         V21:      HALT; GO TO S1;%STOP                                 70685000
         V22:      SUBTRACT; GO TO S1;%SUBTRACT                         70690000
         V23:      USE; GO TO S1;%USE                                   70695000
         V24:      WRIT; GO TO S1;%WRITE                                70700000
V26:               SENT~TRUE; GOTO; IF BSZF THEN GO TO%GO TO            70715000
                   S1; GO TO S2;%NOTE                                   70720000
V27:               INFLG~TRUE; DN; IF SCLAS!7 THEN GO TO  COMMENT 9-10; 70725000
                   V27; INFLG~FALSE; GO TO S1;            COMMENT 9-10; 70730000
         XITL: END;                                                     70735000
         COMMENT   PROCEDURE DIVISION CONTROL;                          70740000
                             %PROCEDURE DIVISION CONTROL DIRECTS        70740001
LABEL P1,P3,P5,P17,P20,P21,XITP;%    COMPILATION OF THE PROCEDURE DIV   70745000
                   BEGIN                                  COMMENT 6-25; 70746000
LABEL P2,P6;                                              COMMENT 6-25; 70747000
                   COMMENT INITIALIZZ RELEATIONAL OPERATOR ARRAY =      70750000
                        LSS , LEQ , EQL , NEQ , GEQ , GTR ,             70755000
                        GTR , LSS , EQL , ALFL , NUML ;                 70760000
                   FILL REL [*] WITH                                    70765000
                        OCT01045  ,                                     70770000
                        OCT01025  ,                                     70775000
                        OCT01105  ,                                     70780000
                        OCT00105  ,                                     70785000
                        OCT000025 ,                                     70790000
                        OCT000045 ,                                     70795000
                        OCT000045 ,                                     70800000
                        OCT01045  ,                                     70805000
                        OCT01105, 0 ,0 ,                                70810000
                   COMMENT INTITALIZE EQUAL TEST ARRAY =                70825000
                        GEQ , LEQ , NEQ , NEQ , GEQ , LEQ ;             70830000
                        OCT00025 ,                                      70840000
                        OCT01025 ,                                      70845000
                        OCT01105 ,                                      70850000
                        OCT01105 ,                                      70855000
                        OCT00025 ,                                      70860000
                        OCT01025,                                       70865000
                   COMMENT INITIALIZE COMPARE OPERATOR ARRAY =          70870000
                        CLS , CEL , CEQ , CNE , CEG , CGR ;             70875000
                        OCT71 ,                                         70885000
                        OCT70 ,                                         70890000
                        OCT60 ,                                         70895000
                        OCT61 ,                                         70900000
                        OCT62 ,                                         70905000
                   COMMENT INITIALIZE COMPARE OPERATOR-1 ARRAY =        70915000
                        CGR , CGR , CNE , CEQ , CLS , CLS ;             70920000
          OCT63,OCT63,OCT61,OCT60,OCT71,OCT71;                          70930000
                   A1~DMPCTR~ENDQ~I~IPFIDX~KODE1~        COMMENT 11-1;  70931000
                   LSUBS~RLFP~ROCUR~RSCALE~SSUBS~0;      COMMENT 11-1;  70932000
                   BA~FN~FALSE;                          COMMENT 11-1;  70933000
                   SRTPRM ~ 0 ;                                         70934000
                   OPNAR(1,PRTCTR,24);                         %CJC 073 70935000
                             %OPEN ARRAY FOR MESSAGE PRINTER.           70935001
                   ADIO ~ PRTCTR;%PRT LOC FOR MESSAGE PRINTER I/O AREA  70950000
                   UPIT;                                                70955000
                   DECF ~ EXPL ~ UFLG        ~ FALSE;                   71040000
                             %INITALIZE VARIABLES.                      71040001
                   RF ~ FALSE;                                          71045000
                   CPAR ~ CSEC ~ BINGO ~ 0; %                           71050000
                   PCNOTE ~ TRUE;                                       71060000
                   HQY~HQX; LINKAGE~TRUE;                 COMMENT 9-28; 71062000
                   UFLG1 ~ TRUE;                                        71065000
                   SMBL ~ PRTCTR; UPIT; MSGTA ~ 0;                      71070000
                   PIODESC ~ 0;                                         71075000
                   SMBX ~ 1;                                            71080000
                   PSDX ~ 13; %    THIS INITALIZES THE CST FOR DUMP&MON 71085000
                   PSD  ~ 0 ; %    THIS CLEARS A REASSIGNED PRT CELL    71085100
                   UPIT;%**** * * * IS THIS REALLY NECESSARY * * * * * *71085500
                   FX ~ 1;                                              71090000
                   OFOLT~PRTCTR;  UPIT;                                 71095000
                   FOR X ~ 0 STEP 1 UNTIL 9 DO IFUNCT[X] ~ 0;           71105500
                   SRFLG ~ FALSE;                                       71110000
                   DN;                                                  71115000
         COMMENT   CHECK FOR THE WORD DIVISION;                         71120000
                   IF KEY ! 280 THEN                                    71125000
                             %IF FIELD IS NOT DIVISION PRINT SYNTX      71125001
         COMMENT SYNTAX ERROR DIVISION MISSING;           COMMENT 9-11; 71130000
                             %    ERROR DIVISION MISSING.               71130001
                   ERP(77&73[32:40:8]&9[24:40:8],0)  ELSE COMMENT 9-11; 71135000
                   DN;                                                  71150000
         COMMENT   CHECK FOR A PERIOD;                                  71155000
                   IF KEY ! 473 THEN                                    71160000
                             %IF DIVISION NOT FOLLOWED BY A PERIOD      71160001
         COMMENT SYNTAX ERROR MISSING PERIOD;             COMMENT 9-11; 71165000
                             %    PRINT SYNTAX ERROR MISSING PEROD      71165001
                   ERP(77&79[32:40:8],0)  ELSE DN;        COMMENT 9-11; 71170000
                   HASHED;                                              71190000
         COMMENT IF MONITOR OR DUMP;                      COMMENT 9-11; 71195000
P6:                IF KEY=913 OR KEY=281 THEN             COMMENT 9-11; 71200000
              BEGIN            %    PSD ARRAY AND CALL DUMP ROUTINE.    71220000
                   IF PSD = 0 THEN                                      71225000
              BEGIN                                                     71230000
                   PSD ~ PRTCTR;                                        71235000
                   UPIT;                                                71240000
                                  T10 ~ CHM[0,0];%      MD1             71240100
                   MAKELABEL(1,MD1   ,((CHMX + 7) DIV 8) -1,0); UPIT;   71240200
COMMENT STACK IS OUT I/O DESC,INSERT,SOURCE,MKS,NO. SOURCE CHRS;        71240300
                   CHMX ~ CHMX + 32;                                    71240400
                                  T10 ~ CHM[0,0];%      MD2             71240500
                   MAKELABEL(1,MD2   ,((CHMX + 7) DIV 8) -1,0); UPIT;   71240600
COMMENT STACK IS FRACTIONAL PART,OUT CHR POSITION, OUT WD LOC,DEC INSERT71240700
   INTEGER PRT,SCOURCE CHAR POS, SOURCE LOC, SIGNED, SIGN CHAR POS,     71240800
   SIGN LOC, SUPP ZEROS, MKS;                                           71240900
                   CHMX ~ CHMX + 96;                                    71241000
                                  T10 ~ CHM[0,0];%      MD3             71241100
                   MAKELABEL(1,MD3   ,((CHMX + 7) DIV 8) -1,0); UPIT;   71241200
COMMENT STACK IS SIGN,NN,OUT CHAR POS, OUT WD LOC, MKS;                 71241300
                   CHMX ~ CHMX + 24;                                    71241400
                                  T10 ~ CHM[0,0];%      MD4             71241500
                   MAKELABEL(1,MD4   ,((CHMX + 7) DIV 8) -1,0); UPIT;   71241600
COMMENT STACK IS OUT CHAR POS,OUT LOC,1 FOR COMMA,LGTH,1 FOR (,         71241700
   1 FOR ), MKS,VALUE;                                                  71241800
              CHMX ~ CHMX +96;                                          71241900
                   T10 ~ CHM[0,0];                                      71242000
 FILL CHM[0,*] WITH       OCT0000000000000000, OCT0353043101040243,     71242100
     OCT0047017460600543, OCT0077054300420240, OCT0541027460600000,     71242200
     OCT0304024300160214, OCT1043004716470042, OCT1253114300310175,     71242300
     OCT0117034502746054, OCT0247027460200116, OCT0214075306430031,     71242400
     OCT0543007504430347, OCT0042017460320143, OCT0075004702040253,     71242500
     OCT1343065200340444, OCT0131017460600051, OCT0000004700470047,     71242600
     OCT0404034300160047, OCT0174604701220731, OCT0177022202660000,     71242700
     OCT0204014300160343, OCT0347004702747260, OCT0114102204430066,     71242800
     OCT0643074700470347, OCT0174607602470174, OCT6055045310300415,     71242900
     OCT0104015304431052, OCT0034064401746060, OCT0131101610170051,     71243000
     OCT0117054307470047, OCT0347017460330247, OCT0174603500000047;     71243100
                   CHM[0,0] ~ T10;                                      71243200
                   SEGDUMP(CHM,CHMX);                     COMMENT 6- 1; 71243300
              END;                                                      71245000
                   DMP;                                                 71250000
                   GO TO P6                                             71255000
              END;                                        COMMENT 9-11; 71260000
P2:                                                                     71310500
              END*;                                       COMMENT 6-25; 71310600
         COMMENT   CHECK FOR DECLARATIVES;                              71315000
              IF KEY ! 509 THEN GO TO P5;                               71320000
                             %IF FIELD IS DECLARATIVES SET DECLAR.      71320001
                   DECF ~ TRUE;%    FLAG TRUE.                          71325000
         P20:      DN;                                                  71330000
         COMMENT   CHECK FOR A PERIOD;                                  71335000
         P3:       IF KEY ! 473 THEN                                    71340000
                             %IF FIELD IS NOT A PERIOD, PRINT SYN-      71340001
                             %    TAX ERROR MISSING PERIOD.             71345000
         COMMENT SYNTAX ERROR MISSING PERIOD;             COMMENT 9-11; 71350000
              BEGIN ERP(77&79[32:40:8],0);                COMMENT 9-11; 71355000
              END  ELSE                                                 71360000
                   DN;                                                  71365000
         COMMENT   CHECK FOR A LABEL;                                   71380000
         P5:       INFLG ~ FALSE;  IF TYPE !3 AND SCLAS! 6 THEN         71385000
              BEGIN                                                     71390000
         COMMENT   CHECK FOR EOJ;                                       71395000
                   IF KEY = 718 THEN%IF FIELD IS NOT A LABEL, CHECK FOR 71400000
              BEGIN            %    END-OF-JOB.                         71405000
                   EOJ;                                                 71410000
                   GO TO XITP                                           71415000
              END;                                        COMMENT 9-11; 71420000
         COMMENT   CHECK FOR END DECLARATIVES;                          71430000
                             %IF FIELD IS NOT A LABEL, NOT EOJ,         71430001
                   IF KEY = 512 THEN%    CHECK FOR END DECLARATIVES.    71435000
              BEGIN DN; IF KEY=509 THEN                   COMMENT 10-8; 71437000
              BEGIN EMIL(OPR,XIT); GO TO P1;                            71440000
                             %IF NOT LABEL, EOJ OR END DECLARATIVE      71440001
              END;                                        COMMENT 10-8; 71442000
             END;              %    PRINT SYNTAX ERROR MISSING LABEL    71445000
         COMMENT SYNTAX ERROR MISSING LABEL;              COMMENT 9-11; 71450000
                   ERP1(77,9,37,0); GO TO P17;            COMMENT 9-11; 71455000
         P1:       INFLG ~ FALSE; IF UFLG THEN USEPAR;                  71460000
                             %IF USE FLAG IS TRUE, CALL USEPAR.         71460001
                   PCNOTE ~ TRUE;                                       71890000
                   DECF ~ FALSE;%INITALIZE VARIABLES.                   71895000
                   CPAR ~ 0;                                            71905000
                   CSEC ~ 0;                                            71910000
                   GO TO P20;                                           71915000
              END;                                                      71925000
                   SENT ~ FALSE;                                        71930000
                   FRFLG~FALSE;                                         71935000
                   EXPL ~ TRUE;                                         71940000
                   GETIT;      %PROCESS THE LABEL.                      71945000
                   IF UFLG AND UFLG1 THEN                               71950000
                             %IF WITHIN A USE PROCEDURE AND THIS        71950001
         COMMENT   STORE BEGINNING PARAGRAPH INTO FIB;                  71955000
                             %    IS THE FIRST PARAGRAPH, STORE         71955001
              BEGIN            %    THE BEGINNING PARAGRAPH INTO THE    71960000
                      %FIB...........                                   71965000
                   UFLG1 ~ FALSE;                                       71970000
                    JCV(CPAR+1,J,K);%SAVE REL PRT ADR FOR 1ST PARA IN   71975000
                   T6A ~ DICT[J,K].[8:10];%    USE PROCEDURE.           71980000
                   IF ERZ THEN                                          71985000
              BEGIN                                                     71990000
                   IF FN THEN                                           71995000
         COMMENT   ERROR PROCEDURE WITH FILE-NAME;                      72000000
              BEGIN                                                     72005000
                   A~T5A+4;FIB[A.[38:3],A.[41:7]].[1:1] ~ 1;            72010000
                             %STORE ERROR FLAG INTO FIB.                72010001
                   A~T5A+15;FIB[A.[38:3],A.[41:7]].[ 1:11] ~ T6A        72020000
                             %ERROR PROCEDURE-FILE NAME.                72020001
              END  ELSE                                                 72025000
              BEGIN                                                     72030000
                   IF IO=1 THEN COMMENT "INPUT";            COMMENT DF; 72035000
         COMMENT   ERROR PROCEDURE WITH I/0;                            72040000
             BEGIN FIB[0,9].[ 1:11] ~ T6A%ERROR PROCEDURE-INPUT.        72045000
             END                                                        72045001
                   ELSE IF IO=2 THEN COMMENT "OUTPUT";      COMMENT DF; 72050000
             BEGIN FIB[0,9].[24:12] ~ T6A%ERROR PROCEDURE-OUTPUT.       72055000
             END                                                        72055001
                   ELSE FIB[0,12].[1:11]~T6A; COMMENT "I-O";COMMENT DF; 72057000
              END                                                       72060000
              END  ELSE                                                 72065000
              BEGIN                                                     72070000
                   IF FN THEN                                           72075000
              BEGIN                                                     72080000
         COMMENT   LABEL PROCEDURE WITH FILE-NAME;                      72085000
                   A~T5A+4; FIB[A.[38:3],A.[41:7]].[1:1]~1;             72095000
                             %SET LABEL PROC FLAG IN FIB.               72095001
                   IF BA THEN  %STORE BEGIN PARA OF USE INTO FIB        72100000
         COMMENT   LABEL PROCEDURE WITH F/N AND BEFORE;%    FOR:        72105000
              BEGIN                                                     72110000
                   A~T5A+T1A; FIB[A.[38:3],A.[41:7]].[1:11]~T6A;        72115000
                             %BEFORE-BEGIN OR END-REEL OR FILE-         72115001
                   IF T2A ! 0 THEN%    FILE NAME.                       72120000
              BEGIN                                                     72125000
                   A~T5A+T2A; FIB[A.[38:3],A.[41:7]].[1:11]~T6A;        72130000
                             %BEFORE-BEGIN OR END-REEL AND FILE-        72130001
                   IF T3A ! 0 THEN%    FILE NAME.                       72135000
              BEGIN                                                     72140000
                   A~T5A+T3A; FIB[A.[38:3],A.[41:7]].[1:11]~T6A;        72145000
                             %BEFORE-BEGIN AND END-REEL AND FILE-       72145001
                   A~T5A+T4A; FIB[A.[38:3],A.[41:7]].[1:11]~T6A;        72150000
                             %    FILE NAME.                            72150001
              END                                                       72155000
              END                                                       72160000
              END  ELSE                                                 72165000
         COMMENT   LABEL PROCEDURE WITH F/N AND AFTER;                  72170000
              BEGIN                                                     72175000
                   A~T5A+T1A; FIB[A.[38:3],A.[41:7]].[24:12]~T6A;       72180000
                             %AFTER-BEGIN OR END-REEL OR FILE-          72180001
                   IF T2A ! 0 THEN%    FILE NAME.                       72185000
              BEGIN                                                     72190000
                   A~T5A+T2A; FIB[A.[38:3],A.[41:7]].[24:12]~T6A;       72195000
                             %AFTER-BEGIN OR END-REEL AND FILE-         72195001
                   IF T3A ! 0 THEN%    FILE NAME.                       72200000
              BEGIN                                                     72205000
                   A~T5A+T3A; FIB[A.[38:3],A.[41:7]].[24:12]~T6A;       72210000
                             %AFTER-BEGIN AND END-REEL AND FILE-        72210001
                   A~T5A+T4A; FIB[A.[38:3],A.[41:7]].[24:12]~T6A;       72215000
                             %    FILE NAME.                            72215001
              END                                                       72220000
              END                                                       72225000
              END                                                       72230000
              END  ELSE                                                 72235000
              BEGIN                                                     72240000
                   IF IO=1 THEN COMMENT "INPUT";            COMMENT DF; 72245000
                   FIB[0,8].[1:1]~1%SET INPUT FLAG IN FIB.              72250000
                   ELSE IF IO=2 THEN COMMENT "OUTPUT";      COMMENT DF; 72255000
                   FIB[0,8].[2:1]~1  ;%SET OUTPUT FLAG IN FIB.          72260000
                   IF BA THEN                                           72265000
              BEGIN            %STORE BEGIN PARA IN USE INTO FIB        72270000
         COMMENT   LABEL PROCEDURE WITH I/O AND BEFORE;%    FOR:        72275000
                   FIB[T1A.[38:3],T1A.[41:7]].[1:11]~ T6A;              72280000
                             %BEFORE-BEGIN OR END FILE OR REEL-         72280001
                   IF T2A ! 0 THEN%    INPUT OR OUTPUT.                 72285000
              BEGIN                                                     72290000
                   FIB[T2A.[38:3],T2A.[41:7]].[1:11]~T6A;               72295000
                             %BEFORE-BEGIN OR END-REEL AND FILE-        72295001
                   IF T3A ! 0 THEN%    INPUT OR OUTPUT.                 72300000
              BEGIN                                                     72305000
                   FIB[T3A.[38:3],T3A.[41:7]].[1:11]~T6A;               72310000
                             %BEFORE-BEGIN AND END-REEL AND FILE.       72310001
                   FIB[T4A.[38:3],T4A.[41:7]].[1:11]~T6A;               72315000
                             %    INPUT OR OUTPUT.                      72315001
              END                                                       72320000
              END                                                       72325000
              END  ELSE                                                 72330000
              BEGIN                                                     72335000
         COMMENT   LABEL PROCEDURE WITH I/O AND AFTER;                  72340000
                   FIB[T1A.[38:3],T1A.[41:7]].[24:12]~T6A;              72345000
                             %AFTER-BEGIN OR END-REEL OR FILE-          72345001
                   IF T2A ! 0 THEN%    INPUT OR OUTPUT.                 72350000
              BEGIN                                                     72355000
                   FIB[T2A.[38:3],T2A.[41:7]].[24:12]~T6A;              72360000
                             %AFTER-BEGIN OR END-REEL AND FILE-         72360001
                   IF T3A ! 0 THEN%    INPUT OR OUTPUT.                 72365000
              BEGIN                                                     72370000
                   FIB[T3A.[38:3],T3A.[41:7]].[24:12]~T6A;              72375000
                             %AFTER-BEGIN AND END-REEL AND FILE-        72375001
                   FIB[T4A.[38:3],T4A.[41:7]].[24:12]~T6A;              72380000
                             %    INPUT OR OUTPUT.                      72380001
              END                                                       72385000
              END                                                       72390000
              END                                                       72395000
              END                                                       72400000
              END                                                       72405000
              END;                                                      72410000
                   UFLG1 ~ FALSE;                                       72415000
         COMMENT   CHECK FOR NOTE;%SCAN THE NOTE PARAGRAPH, UNTIL FIELD 72420000
                   IF KEY = 927 THEN%    IS A LABEL, EOJ OR END DECLAR. 72425000
              BEGIN INFLG ~ TRUE;                                       72430000
       P21:        SCTRL;                                               72435000
                   IF SCLAS = 3 THEN GO TO P5;                          72440000
                   IF KEY = 718 THEN                                    72445000
              BEGIN                                                     72450000
                   EOJ; GO TO XITP                                      72455000
              END;                                                      72460000
                   IF KEY = 512 THEN                                    72465000
             BEGIN DN; IF KEY = 509 THEN GO TO P1                       72470000
             END;         GO TO P21;                                    72475000
              END;                                                      72480000
         COMMENT   CHECK FOR EXIT;                                      72485000
                   IF KEY = 925 THEN GO TO P20;%CHECK FOR EXIT.         72490000
         COMMENT   CHECK FOR GO;                                        72495000
                   IF KEY = 926 THEN%IF FIELD IS GO, PROCESS GO TO.     72500000
              BEGIN                                                     72505000
                   GOTO;       %IF GO TO DEPENDING, THEN THIS NEED      72510000
                   COMMENT CHECK FOR NOTE IN A GO TO PARAGRAPH--        72510500
                             %    NOT BE A GO TO PARAGRAPH.             72510501
                       COMPATABILITY REQUIREMENT;                       72510510
                   IF BSZF THEN GO TO P17; %GO TO DEPENDING    %TR 779  72511000
                   IF T1 ! "GO" THEN       %NOT A GO TO        %TR 779  72512000
                        DN ELSE T1 ~ 0;                        %TR 779  72513000
                   IF KEY = 927 THEN       % "NOTE"            %TR 779  72514000
              BEGIN INFLG ~ TRUE;                              %TR 779  72515000
                   WHILE SCLAS ! 7 DO DN;  %SCAN TO A "."      %TR 779  72516000
                   DN;                     %BYPASS THE ","     %TR 779  72517000
              END;                                             %TR 779  72518000
                   GO TO P5;               %NEXT LABEL         %TR 779  72519000
              END  ELSE                                                 72520000
              BEGIN                                                     72525000
         P17:      J ~ (CPAR+1).[33:6];  K~ (CPAR+1).[39:9];            72530000
                             %PROCESS THE VERB.                         72530001
                   IF DICT[J,K].[2:1] = 1 THEN                          72530100
         COMMENT MISSING GO TO PROCEDURE;                 COMMENT 9-11; 72530150
             BEGIN EIND ~ 9&53[32:40:8]&29[24:40:8];                    72530200
                   ERP(EIND,0);  COMPE ~ TRUE;                          72530300
              END; RF~FALSE;STATMT;                       COMMENT 6-24; 72530400
                   IF KEY=473 AND RF THEN BEGIN DN;RF~FRFLG~FALSE END;  72535000
                             %IF FIELD IS NOT A LABEL, EOJ OR END       72535001
                   IF TYPE =3 OR SCLAS =6 OR KEY =718 OR KEY=512 THEN   72540000
                             %    DECLARATIVES, THEN PROCESS NEXT       72540001
                   GO TO P5; GO TO P17;%    VERB OR SENTENCE.           72545000
              END;                                                      72550000
         XITP:                                                          72620000
              END;                                                      72625000
 EGRESS:                                                                72626000
              END*;                                       COMMENT 3-23; 72630000
 ENDINGBLOCK:                  %ENDING BLOCK STARTS HERE............    72635000
COMMENT PRINT OUT FILES AND BUFFER AREAS, DECLARE FIB AND LABELS FOR    72640000
        EACH FILE        ;                                              72645000
              BEGIN INTEGER PRTMP,NN,X;   LABEL RT;                     72650000
                   LABEL ERR;                            COMMENT SI-10; 72650100
                   REAL T2,T3,T4,T5;                      COMMENT 2-25; 72655000
COMMENT ************************     INTR      ***********************; 72655499
 PROCEDURE INTR;               %PROCEDURE INTR INCLUDES INTRINSICS      72655500
              BEGIN DSKLOC ~ T3;                           COMMENT DF;  72660000
                             %    IN THE SEG. DICT.                     72660001
                   T10 ~ SEG[0,0];                         COMMENT DF;  72665000
                   T2 ~ IFUNCT[T1].[36:12];                COMMENT DF;  72670000
                   MAKELABEL(0,T2,0,1) ;                   COMMENT DF;  72675000
                   SEG[0,0]~ SDX;SDX ~SDX +1;              COMMENT DF;  72675200
              END;                                                      72676000
                   CNQ ~ CNQ + 4;                                       72685000
                   DUMPCONST(CNP,CNPL,CNQ,CNR) ;%LAST CONSTCOMMENT DF;  72740000
                             %DUMP CONSTANT POOL.                       72740001
                   SDX ~ SDX-1;% CNP NEVER USED AGAIN      COMMENT DF;  72750000
                   T10 ~ SEG[0,0];                                      72755000
                   MAKELABEL(0,CONTROL,0,0);                            72760000
                   EMIL(OPR,MKS);%THIS CODE IS USED ONLY BY THE FILE    72765000
                   EMIL(OPDC,INDEX);%CONTROL ROUTINE.                   72770000
                   EMIL(OPR,DUP);                         COMMENT 9-02; 72770500
                   EMIL(OPR,XRT);%                                      72775000
                   EMIL(OPR,LOD);                         COMMENT 9-02; 72780000
                   EMIL(OPDC,897);                        COMMENT 9-02; 72785000
                   EMIL(OPR,COC);                         COMMENT 9-02; 72790000
                   EMIL(OPR,XIT);                         COMMENT 9-02; 72795000
                   SEGDUMP(SEG,CREG);%DUMPING CONTROL SEGMENT.          72985000
                   CDIVN ~ DRUMSIZE;                                    72990000
                   CAT~2;  KEY~1 & 50 [12:42:6] & 38 [18:42:6] &        72995000
                   41 [24:42:6] & 51 [30:42:6] & 31 [36:42:6];          73000000
                   PRTMP~ PRFIB;  NN~0;                                 73005000
                   FIB[0,13].[47:1]~1;%MARK FIB AS COBOL PROGRAM.       73005500
          RT:                                                           73010000
                   CREG ~ 168;                                          73020000
                   ENTSEG(SEG,CREG); % FOR FIB ARRAYS      COMMENT DF;  73025000
                   IMIL (LITC,PRTMP)      ;                             73040000
                   IMIL (OPR,LOD)      ;                                73045000
                   IMIL(LITC,SEG[0,0]); % SDX VALUE IN SEG0COMMENT DF;  73050000
                   IMIL (LITC,7)      ;                                 73060000
                   IMIL (OPR,COM)      ;%ARRAY FILL COMMUNICATE.        73065000
                   IMIL (OPR,DEL);                        COMMENT 8-7;  73070000
                   IMIL(OPR,DEL);                         COMMENT 8-7;  73075000
                   UPIT;                                                73080000
                   FOR X~1 STEP 1 UNTIL 20 DO                           73085000
              BEGIN  A~X-1+NN;  SEG[0,X] ~ FIB[A.[38:3],A.[41:7]];      73085001
              END;                                                      73085002
                   SEGDUMP (SEG,CREG);%C-REG IS 21 WORDS.               73090000
                    NN~NN+20; IF NN < FIBX-1 THEN                       73100000
              BEGIN A~NN+19; OCUR~FIB[A.[38:3],A.[41:7]].[33:15];       73105000
                    A ~ NN+13; B ~NN+18;                      %TR-166-1 73110000
                    LGTH~FIB[A.[38:3],A.[41:7]].[1:9] |                 73110001
                             %NUMBER OF BUFFERS | BUFFER SIZE.          73110002
                    FIB[B.[38:3],B.[41:7]].[3:15];                      73110010
                   HPAR[0] ~ HPAR[0] +(LGTH+20);          COMMENT 9-9;  73115000
                   A~NN+16; LGTH~FIB[A.[38:3],A.[41:7]];                73120010
                                 FIB[A.[38:3],A.[41:7]]~0;              73120011
                             %COMPILE TIME.                             73120012
                   PRTMP ~ LGTH;                                        73125000
                   OPNAR(1,PRTMP,20);                          %CJC 073 73130000
                             %SEG1X COUNTED UP BY EMIT ROUTINES.        73130001
                   IMIL(OPR,MKS); IMIL(LITC,PRTMP) ;       COMMENT DF;  73131000
                   IMIL(DESC,10) ; IMIL(LITC,10) ;         COMMENT DF;  73131100
                   IMIL(OPDC,5) ;% PLACE FILE INFO IN AIT  COMMENT DF;  73131200
                   JCV (OCUR+1,J,K);                                    73135000
                   IF DICT[J,K].[1:1] = 0 THEN                          73140000
              BEGIN  X~1;                                               73145000
                   OPNAR(1,LGTH+1+X,16);                       %CJC 073 73155000
                   IMIL (OPR,MKS);  IMIL (LITC,8);                      73160000
                   IMIL(DESC,LGTH+X+1); IMIL(LITC,0);     COMMENT 9-01; 73165000
                   IMIL(LITC,6);                          COMMENT 9-01; 73167000
                   IMIL (OPDC,OCLRWDSB);                                73170000
                   IMIL(LITC,0); IMIL(LITC,16);                         73170010
                   IMIL(DIA,38); IMIL(DIB,8); IMIL(TRB,10);             73170020
                    IMIL(LITC,LGTH+1);  IMIL(OPR,STD);                  73170030
              END;  GO TO RT;                                           73180000
              END;                                                      73185000
                        CT[9] ~ DSKLOC; DSKLOC ~ 21;       COMMENT DF;  73185100
                             %SET UP FILE CONTROL ROUTINE, CHAR.        73185101
                   T10 ~ SEG[0,0];                         COMMENT DF;  73185150
                   MAKELABEL (0,FCR,0,1) ;                 COMMENT DF;  73185200
                   SEG[0,0]~SDX;SDX ~SDX +1;               COMMENT DF;  73185300
                             %    FOR SEG. DICT.                        73185301
                   T10 ~ SEG[0,0];                         COMMENT DF;  73185500
                   DSKLOC ~ 22; MAKELABEL(0,RWR,0,1) ;     COMMENT DF;  73185600
                   SEG[0,0]~SDX; SDX ~SDX +1;              COMMENT DF;  73185700
         COMMENT EMIT TRANS TO CONTROL AND STOP AND DUMP BLOCK ;        73190000
                   IF COMPA THEN IMIL(LITC,19) ELSE             %TR-263 73190500
              BEGIN IMIL(OPR,MKS);%EMIT CODE TO TRANSFER CONTROL TO THE 73195000
                   IMIL(LITC,0);      IMIL(OPDC,INDEX);                 73200000
                             %    OBJECT-TIME CONTROL PROGRAM.          73200001
                   IMIL(OPR,LOD);                        COMMENT 3-04;  73205000
                   IMIL(LITC,1023); IMIL(OPR,COC);         COMMENT 2-12;73210000
                   IMIL(LITC,0);                         COMMENT 1-65;  73210100
              END;                                                      73210500
                   IMIL (OPR,COM)      ;                                73215000
                   CDIVN ~ CDIVN + SEG1X DIV 8 + 1;                     73215500
                   T10 ~ SEG[0,0] ;                        COMMENT DF;  73215550
                   DSKLOC~2; MAKELABEL(0,5,0,1);%INTRINSIC COMMENT DF;  73215600
                   SEGDICT[T10.[36:5],T10.[41:7]].[4:1]~1;     %CJC 065 73215700
                   SEG [0,0] ~ SDX ; SDX ~ SDX +1;         COMMENT DF;  73216000
                    IF DSPRTCTR ! 0 THEN                  COMMENT DSRT; 73217000
              BEGIN T10 ~ SEG[0,0]; DSKLOC ~ 4;           COMMENT DSRT; 73217500
                    MAKELABEL(0,DSPRTCTR.[33:15],0,1);               %DS73218000
                    SEG[0,0] ~ SDX; SDX ~ SDX + 1;        COMMENT DSRT; 73218500
                    T10 ~ SEG[0,0]; DSKLOC ~ 23;                     %DS73218600
                    MAKELABEL(2,DSPRTCTR.[18:15],0,1);               %DS73218700
                    SEG[0,0] ~ SDX; SDX ~ SDX + 1;                   %DS73218800
              END;                                        COMMENT DSRT; 73219000
                   FOR T1 ~ 1 STEP 1 UNTIL 6 DO                         73220100
                             %INCLUDE INTRINSICS IN THE SEG. DICT.      73220101
                   IF IFUNCT[T1] ! 0 THEN                               73220200
             BEGIN T3 ~ T1 + 10; INTR;                                  73220300
                             %INTR SUBR CALLS ON SEGDUMP TO DUMP.       73220301
              END;                                                      73220400
                   IF IFUNCT[0] ! 0 THEN                                73220500
             BEGIN T3 ~ 7; T1 ~ 0; INTR;                                73220600
              END;                                                      73220700
                   IF IFUNCT[8] ! 0 THEN                                73220800
              BEGIN T3 ~8; T1 ~ 8;INTR; COMMENT "SIGN"FNCT.11-11-64;    73220900
              END;                                                      73221000
                   IF IFUNCT[9] ! 0 THEN                                73221100
             BEGIN T3 ~ 6; T1 ~ 9; INTR;                                73221200
              END;                                                      73221300
                   DSKLOC ~ CT[9];                         COMMENT DF;  73221350
                   T10 ~SEG1[0,0]; MAKELABEL(0,PRTCTR,0,0);COMMENT DF;  73221380
                   UPIT;  % JUST LABELED OUTSIDE BLOCK     COMMENT DF;  73221385
                   SEGDUMP ( SEG1,SEG1X ) ;%                            73221400
                   T1 ~ 1+(SDX+10)DIV 128;                 COMMENT DF;  73240000
                   FOR B ~ 0 STEP 1 UNTIL T1 DO                         73245000
              BEGIN FOR A ~ 0 STEP 1 UNTIL 127 DO                       73250000
                             %CLEAR ARRAYS TO BE USED IN                73250001
                   SEG[B,A] ~ 0;%    SEG. DICT. AND PRT.                73255000
             END;  T1 ~ PRTCTR DIV 128;                   COMMENT 3-23; 73265000
                   FOR A ~ 0 STEP 1 UNTIL T1 DO           COMMENT 3-23; 73265010
             BEGIN FOR B ~ 0 STEP 1 UNTIL 127 DO          COMMENT 3-23; 73265020
                   SEG1[A,B] ~ 0;                         COMMENT 3-23; 73265030
             END;                                         COMMENT 3-23; 73265040
         COMMENT  MAKE OBJECT-TIME SEGMENT DICTIONARY  ;                73275000
                             %BUILD SEGMENT DICT. IN SEG.               73275001
                   FOR J ~ 0 STEP 1 UNTIL SDX DO           COMMENT DF;  73280000
                             %ID WORD FOR SEG. DICT.                    73280001
              BEGIN   T1 ~ J + 1;                          COMMENT DF;  73285000
                             %SET UP DESC FOR PRT.                      73285001
                   SEG[T1.[36:5],T1.[41:7]] ~              COMMENT DF;  73290000
                   SEGDICT[J.[36:5],J.[41:7]];             COMMENT DF;  73295000
              END;                                         COMMENT DF;  73300000
                   T5~T4;      %SAVE SEG DICT SIZE.                     73430000
                   PRTB[0,11] ~ 0;%CLEAR DIV BY ZERO FLAG      %TR 321  73442000
                   FOR X~39 STEP 20 WHILE X<FIBX DO                     73470200
                             %GATHERING PRT INTO SEG 1.                 73470201
              BEGIN JCV(OILNK(FIB[X.[38:3],X.[41:7]]),    COMMENT 9-23; 73470300
                   T1,T2); T3~INFO[T1,T2].[4:10];                       73470400
                   T4 ~ 0 & 1[30:47:1] & 1[7:47:1];        COMMENT DF;  73470450
                     SEG1[T3.[38:3],T3.[41:7]]~T4;                      73470500
                   T5~X-6; T6~FIB[T5.[38:3],T5.[41:7]].[1:9];           73470600
                   T3~T3+1;  FOR T7~1 STEP 1 UNTIL T6 DO                73470700
              BEGIN           SEG1[T3.[38:3],T3.[41:7]]~T4;             73470800
                   SETFLG(SEG1[T3.[38:3],T3.[41:7]]); T3~T3+1;          73470850
              END;                                                      73470855
              END;                                        COMMENT 9-23; 73490000
                   FOR T5 ~ 0 STEP 1 UNTIL PRTCTR DO       COMMENT DF;  73491000
              BEGIN T1 ~ PRTB[T5.[36:5],T5.[41:7]];        COMMENT DF;  73492000
                   IF T1 ! 0 THEN                          COMMENT DF;  73493000
              BEGIN T2 ~ T5 +1;SEG1[T2.[36:5],T2.[41:7]]   COMMENT DF;  73494000
                   ~T1; SETFLG (SEG1[T2.[36:5],T2.[41:7]]);COMMENT DF;  73495000
              END;                                         COMMENT DF;  73496000
              END;                                         COMMENT DF;  73497000
                   SEG1[0,17] ~ 1; % FLAG BIT OFF          COMMENT DF;  73498000
                   TRANSF(SEG1,PRTCTR+1,SEGDICT);  %DUMP PRT            73498500
                   CT[1]~DSKLOC-((PRTCTR+29)DIV 30);       COMMENT DF;  73499000
                   CT[2] ~  PRTCTR        ;% SAVE PRT SIZE COMMENT DF;  73499100
                   TRANSF(SEG,SDX,SEGDICT);    %DUMP SEGMENT DICTIONARY 73500000
                             %DUMP PRT.                                 73500001
                   CT[3]~DSKLOC-((SDX   +28)DIV 30);       COMMENT DF;  73501000
                   IF DCOMM THEN                                        73501010
              BEGIN     CT[3] ~ CT[3]& DSKLOC [18:33:15];               73501030
                        TRANSF(LINEDIT, SDX,LINEDIT); % DUMP LINE DICT  73501060
              END; %                                                    73501070
                   CT[4] ~ SDX -1;   %SAVE SIZE SEGDICT    COMMENT DF;  73501100
COMMENT SEP UP PROGRAM PARAMETER BLOCK  ;                               73520000
                             %SET UP PROGRAM PARAMETER BLOCK.           73520001
                   FOR X~0 STEP 1 UNTIL 127 DO SEG[0,X]~0;  COMMENT DF; 73525000
% COMPUTE ESTIMATED CORE REQUIREMENTS FOR MCP SCHEDULING PURPOSESDF,3/6673530000
                   IF MAXSEG ~1.3 | (                           %12-67  73531000
                          % ARRAY SIZE:                         %DF,3/6673532000
                            (IF      ARAYSZ < 3000 THEN ARAYSZ  %DF,3/6673533000
                             ELSE IF ARAYSZ < 7000 THEN ARAYSZ/2 + 1500 73535000
                             %COMPUTING PROGRAM PARAMETER BLOCK         73535001
                             ELSE                       5000) + %DF,3/6673535100
                   (MAXSEG+NEXMAX+PRTCTR%WORD 1.                        73540000
                   +512        COMMENT STACK SIZE;                      73541000
                   +CT[4]     COMMENT SEG DICT SIZE        COMMENT DF;  73542000
                   + HPAR[12]    % SORT CORE SIZE ESTIMATE              73542100
                   + HPAR[0]   COMMENT FIB,S + CUM.BUFFER SIZES   9-9;  73543000
              + 20 ))    %COMMENT PROGRAM FIB;                      7-6773543500
                 > 32000 THEN MAXSEG ~ 32000;%                      7-6773544000
                             %PPB(1).                                   73544001
                             %COMPUTING PPB(2).                         73550000
                   X~1; T1 ~ 1; T2 ~ 0; T8 ~ 0;            COMMENT DF;  73570000
                   SEG1X ~ FIBX - 10;                                   73575000
                   CT[7] ~ 0;                              COMMENT DF;  73577000
                   FOR T3 ~ 20 STEP 20 UNTIL SEG1X DO                   73580000
              BEGIN   CT[7] ~ CT[7] + 1; % COUNTING FILES  COMMENT DF;  73585000
                   A~T3+4;                                              73590000
                   T1~     FIB[A.[38:3],A.[41:7]].[13:11];              73590001
                             %PLACE FILE NO IN FIB.                     73590002
                   LGTH~X+T2;                                           73595000
                   CHRTRAN(T1,6,SEG[LGTH.[38:3],                        73600000
                   LGTH.[41:7]],T8,2);                                  73605000
                   A~T3+19; OCUR~FIB[A.[38:3],A.[41:7]].[33:15];        73610000
                   JCV (OILNK (OCUR),J,K);                              73610001
                   IF FIB[A.[38:3],A.[41:7]].[7:1] ! 0 THEN             73615000
              BEGIN INFO[J,K+4]~KEY; KEY.[42:6]~CAT; CAT~CAT+1;         73620000
              END; CT[8] ~ FIB[(A-15).[38:3],(A-15).[41:7]]COMMENT DF;  73625000
                       .[2:1];% 0=LABELED,1=UNLABELED      COMMENT DF;  73626000
                   T9~X+T2;                                             73630000
                   IF (T9 + 3) > 127 THEN GO TO ERR; COMMENT SI-10 REV; 73630100
                   CHRTRAN(INFO[J,K+5],1,SEG[T9.[38:3],T9.[41:7]],      73635000
                   T8+3,7);                                             73640000
                   IF INFO[J,K+1].[44:4] = 10 THEN                      73640010
                   INFO[J,K+4].[36:6]~INFO[J,K+4].[36:6]+1;             73640020
                   CHRTRAN(INFO[J,K+4],1,SEG[T9.[38:3],T9.[41:7]],      73645000
                   T8+10,7);                                            73650000
                   KEY~INFO[J,K+1].[1:15]; JCV (KEY,T5,T6);             73655000
                   CREG~INFO[J,K+1].[44:4];                             73660000
                             %SET UP OBJECT TIME HARDWARE CODES.        73660001
                   IF CREG= 15 THEN CREG~19 ELSE                    %TSS73661000
                   IF CREG = 1 THEN                        COMMENT DF;  73665000
                   CREG~IF CT[8] =0 THEN 2 ELSE 9          COMMENT DF;  73670000
              ELSE IF CREG =  2 THEN CREG~3                COMMENT DF;  73675000
              ELSE IF CREG =  3 THEN CREG~0                COMMENT DF;  73676000
                    ELSE IF CREG = 10  THEN               COMMENT DSRT; 73677000
              BEGIN A ~ INFO[J,K+2].[8:10]+4;             COMMENT DSRT; 73677100
                    DSFLAG ~ BOOLEAN(FIB[A.[38:3],        COMMENT DSRT; 73677150
                    A.[41:7]].[29:1]);                    COMMENT DSRT; 73677200
                    IF INFO[J,K+4].[36:6]{2               COMMENT DSRT; 73677250
                    AND DSFLAG THEN                       COMMENT DSRT; 73677290
                    BEGIN FIB[A.[38:3],A.[41:7]].[7:1] ~ 0;          %DS73677350
                          CREG ~ 12 END ELSE                         %DS73677375
                    CREG ~ 2;                                        %DS73677385
                    DSFLAG ~ FALSE;                       COMMENT DSRT; 73677400
              END                                                       73677450
              ELSE IF CREG=13 THEN                          COMMENT DF; 73677500
              BEGIN JCV(OCUR,J,K); CREG~IF DICT[J,K].[7:1]  COMMENT DF; 73678000
                   =1 THEN 10 ELSE 12;                      COMMENT DF; 73678500
              END                                                       73678700
              ELSE IF CREG = 11 OR CREG=12 THEN CREG~8;    COMMENT DF;  73679000
%                                                                       73679050
                   IF CREG = 4 THEN    % PRINTER FIB DIDDLING           73679300
              BEGIN     CREG ~ INFO [J,K+1].[41:3];                     73679400
                        IF CREG < 4 THEN CREG ~ CREG + 15               73679500
                   ELSE IF CREG = 4 THEN CREG ~ 1                       73679600
                   ELSE IF CREG = 5 THEN CREG ~ 4;                      73679700
              END;                                                      73679800
                   CHRTRAN(CREG,7,SEG[T9.[38:3],T9.[41:7]],COMMENT 6-1; 73680000
                   T8+2,1);                                             73685000
                   T4~DICT [T5,T6].[1:5];                               73690000
                   IF ((T4+T8+25)DIV 8)+ T9 > 127 THEN GO TO ERR;%SI-10R73690100
                   CHRTRAN (T4,7,SEG[T9.[38:3],T9.[41:7]],              73695000
                   T8+17,1);                                            73700000
                   CHRTRAN (DICT[T5,T6],4,SEG[T9.[38:3],T9.[41:7]],     73705000
                   T8+18,T4);                                           73710000
                   T8 ~ T8 + 18 + T4;                                   73715000
                   T2~T2+T8 DIV 8;  T8~T8 MOD 8;                        73720000
              END;                                                      73725000
                   IF T8 ! 0 THEN T2~T2+1;                              73730000
                   T2 ~ T2 + X + 1;                                     73735000
                   TRANSF ( SEG,T2,SEGDICT);  % DUMP FPB                73745000
                   CT[5]~DSKLOC-((T2    +28)DIV 30);       COMMENT DF;  73750000
                   CT[6]~T2; % SAVE SIZE FILE PARAM BLOCK  COMMENT DF;  73751000
                   SEG[0,1]~ CT[3];   % LOC SEGDICT        COMMENT DF;  73761000
                   SEG[0,2] ~ CT[4];    % SIZE SEGDICT     COMMENT DF;  73761100
                   SEG[0,3]~ -CT[1] ;   % LOC PRT          COMMENT DF;  73761200
                   SEG[0,4] ~ CT[2];   % SIZE PRT          COMMENT DF;  73761300
                   SEG[0,5]~  CT[5] ;   % LOC FILE PARAM BLCOMMENT DF;  73761400
                   SEG[0,6] ~CT[6]-1;  % SIZ FILE PARAM BLKCOMMENT DF;  73761500
                   SEG[0,7] ~ 1;       % STARTING SEGMENT NUMBERS       73761600
                   SEG[0,8]~CT[7]&MAXSEG[18:27:15];%CORE REQ+#FILES%7-6773761700
                   FOR T2 ~ 9 STEP 1 UNTIL 30 DO %CLEAR REST   %CJC 089 73761800
                   SEG[0,T2] ~ 0; %OF SEGMENT DICTIONARY[0:*]  %CJC 089 73761900
                   T2 ~ 30; CT[9]~DSKLOC; DSKLOC ~ 0;      COMMENT DF;  73765000
                                    TWO99~CHUNK;           COMMENT DF;  73765050
                   TRANSF ( SEG,T2,SEGDICT); DSKLOC~CT[9];%SEG ZERO     73765100
          IF FALSE THEN                                                 73765110
ERR:       BEGIN COMPE := TRUE;                                         73769000
                 ERP(10&7[32:40:8]&25[24:40:8]&8[16:40:8],0);           73770000
           END   ;%EXTRA FILE DECLARATION ERROR                         73770100
              END;                                                      73825000
EN:                DCOM ~FALSE; % THIS STOPS ALL REMOTE MESSAGES        73826000
         IF SOLTCNT ! 0 THEN                                    %TR-746 73827000
    BEGIN                                                       %TR-746 73827100
         IF TSSEDT THEN FILL LBUF[*] WITH "END-OF-J","OB.~ LAS",%TR-746 73827200
              "T CARD O","N TAPE. ",0,0,0,0,0,"99999999"        %TR-746 73827300
         ELSE FILL LBUF[*] WITH "999999 E","ND-OF-JO","B.~LAST "%TR-746 73827400
              ,"CARD ON ","TAPE.  ",0,0,0,0,0;                  %TR-746 73827500
         WRITE(NEWTAPE,10,LBUF[*]);                             %TR-746 73827600
    END;                                                        %TR-746 73827800
                   IF PRINTIT THEN      % THIS STOPS PRINTING IF NOT ON 73829000
             BEGIN ERP( IF COMPA THEN 87 & 75 [32:40:8]         %TR-263 73830000
                             %IF SYNTAX ERRORS WERE FOUND THEN          73830001
                   & 139[24:40:8] ELSE 75 &                             73835000
                             %IF ERRORS PRINT DID NOT COMPILE           73835001
                   109[32:40:8] & 139[24:40:8],0);        COMMENT 9-30; 73840000
              END;                                                      73841000
              BEGIN IF SAVETIME} 0 AND NOT COMPA THEN           %TR-263 73850000
                             %"COMPILE O K."                            73850001
              BEGIN LOCK (CODE,SAVE) ;                     COMMENT DF;  73855000
              END                                          COMMENT DF;  73865000
              END  ;                                       COMMENT DF;  73865005
                             %END OF COMPILATION PRINTOUTS              73865006
                   IF PRINTIT THEN BEGIN                                73865007
                   CFDE ~ (TIME(1) - TIM) / 60;           COMMENT 3-23; 73865010
                   X ~ "PRT"; MSG[124] ~ 0 & 3[1:43:5] & X[6:30:18];    73865020
                             % PRT SIZE                                 73865021
                   MSG[125] ~ 0 & 4[1:43:5];                            73865030
                   OCV1(MSG[125],1,0,4,PRTCTR);                         73865040
                   EIND ~ 124 & 15[32:40:8] & 125[24:40:8]; ERP(EIND,0);73865050
                   X ~ "N0."; A ~ "SEGS.";% NUMBER OF SEGMENTS          73865190
                   MSG[124] ~ 0 & 3[1:43:5] & X[6:30:18];               73865200
                   MSG[125] ~ 0 & 5[1:43:5] & A[6:18:30];               73865210
                   MSG[126] ~ 0 & 3[1:43:5];                            73865220
                   OCV1(MSG[126],1,0,3,SDX); %                          73865240
                   EIND ~ 124 & 125[32:40:8] &126[24:40:8]; ERP(EIND,0);73865250
                   X ~ "TIME"; A ~ "SECS.";% TIME IN SECONDS            73865260
                   MSG[124] ~ 0 & 4[1:43:5] & X[6:24:24];               73865270
                   MSG[125] ~ 0 & 5[1:43:5] & A[6:18:30];               73865280
                   MSG[126] ~ 0 & 5[1:43:5];                            73865290
                   OCV1(MSG[126],1,0,5,CFDE);                           73865300
                   EIND ~ 75 & 124[32:40:8] & 126[24:40:8] &            73865310
                                            125[16:40:8]; ERP(EIND,0);  73865315
              BEGIN X~"TOTAL"; A~"SEG.";                  COMMENT 4-10; 73865325
                   CDIVN~CDIVN-(FX+SMBX+((CNQ+7)DIV 8));  COMMENT 4-10; 73865330
                   MSG[124]~0 & 5[1:43:5] & X[6:18:30];   COMMENT 4-10; 73865335
                   MSG[125]~0 & 4[1:43:5] & A[6:24:24];   COMMENT 4-10; 73865340
                   OCV1(MSG[126],1,0,5,CDIVN);            COMMENT 4-10; 73865345
                   EIND~124&125[32:40:8] &15[24:40:8]     COMMENT 4-10; 73865350
                   &126[16:40:8]; ERP(EIND,0);%TOTAL SEGMENT SIZE       73865355
                   X ~ "DISK";                             COMMENT DF;  73865360
                   MSG[125]~0 &4[1:43:5] &X[6:24:24];     COMMENT 4-10; 73865365
                   DRUMSIZE ~ 30 | DSKLOC;                 COMMENT DF;  73865367
                   OCV1(MSG[124],1,0,5,DRUMSIZE);         COMMENT 4-10; 73865370
                   EIND~125&15[32:40:8]&124[24:40:8];     COMMENT 4-10; 73865375
                   ERP(EIND,0);%DRUM SIZE                               73865380
                   OCV1(MSG[124],1,0,5,MAXSEG);%                    7-6773865381
                   ERP(71 &15[32:40:8] &124[24:40:8],0);                73865382
                             %MEMORY SIZE (MINIMUM)                     73865383
                    ERP(127, "*******");                                73865385
         IF SQER    ! 0 THEN BEGIN               %IF SEQUENCE ERRORS    73865388
 OCV1(MSG[124],1,0,5,SQER);   ERP(65&8[32:40:8]&124[24:40:8],0);        73865390
    END; IF CARDCNT ! 0 THEN BEGIN               %CHECK CARD COUNT      73865395
 OCV1(MSG[124],1,0,5,CARDCNT);    ERP(124,"CARDS  ");                   73865400
    END; IF TAPECNT ! 0 THEN BEGIN               %CHECK TAPE INPUT      73865405
 OCV1(MSG[124],1,0,5,TAPECNT);    ERP(124,"TAPE-IN");                   73865410
    END; IF LIBCNT  ! 0 THEN BEGIN               %CHECK LIBRARY INPUT   73865415
 OCV1(MSG[124],1,0,5,LIBCNT);     ERP(124,"LIBRARY");                   73865420
    END; IF SOLTCNT ! 0 THEN BEGIN               % NEW TAPE COUNT       73865425
 OCV1(MSG[124],1,0,5,SOLTCNT);    ERP(124,"NEWTAPE");                   73865430
    END; IF ERRCNT  ! 0 THEN BEGIN               % ERROR COUNT          73865440
 OCV1(MSG[124],1,0,5,ERRCNT );    ERP(124,"ERRORS ");                   73865450
         END ;END;END;END;                                              73870000
              END; %                                                    73871000
COMMENT                                                                 73871396
FORMAT AND USAGE OF COMPILER TABLES AND VARIABLES                       80000000
              NOTES:"OCUR"IS AN INDEX INTO THE DICT(DICTIONARY) ARRAY.  80000100
                                                                        80000200
1.0 DICTIONARY SYMBOL ENTRY                                             80000300
1.01   FIRST WORD                                                       80000400
         [1 : 5]   SYMBOL LENGTH                                        80000500
         [9 :15]   FORWARD LINK - LINK TO NEXT SYMBOL ENTRY WITH THE    80000600
                                       SAME SCRAMBLE INDEX. SEE         80000700
                                       PROCEDURE SCHAD FOR SCRAMBLE     80000800
                                       ALGORITHM.                       80000900
         [24:24]   FIRST FOUR CHARACTERS OF SYMBOL                      80001000
1.02   REMAINING WORDS (AS REQUIRED)                                    80001100
                   CONTAIN THE REMAINING CHARACTERS OF SYMBOL. FINAL    80001200
                                       WORD IS LEFT-JUSTIFIED IN A FIELD80001300
                                       OF ZEROES.                       80001400
                                                                        80001500
1.1 GENERAL DICTIONARY ENTRY                                            80001600
1.11   OCUR                                                             80001700
         [1 : 5]   TYPE  (SEE SECTION 4.09 )                            80001800
         [6 : 1]   ELEMENTARY ITEM FLAG                                 80001900
         [7 : 1]   OCCURS FLAG                                          80002000
         [8 : 1]   SIGNED FLAG                                          80002100
         [9 : 1]   HASHED FLAG                                          80002200
         [10: 1]   FILLER FLAG                                          80002300
         [11: 1]   FORWARD FLAG (ITEM HAS NOT BEEN EXPLICITLY DECLARED) 80002400
         [12: 1]   PICTURE S                                            80002500
         [13: 3]   SIGN TYPE (SEE SECTION 4.07)                %CJC 083 80002600
         [16: 2]   USAGE (SEE SECTION 4.10 )                            80002700
         [18:15]   FOLLOWER LINK - INDEX INTO DICT OF DESCRIPTION OF THE80002800
                                       FOLLOWING ITEM WITHIN THE SAME   80002900
                                       RECORD.                          80003000
         [33:15]   HIERARCHY LINK - LINK TO THE (PREVIOUS) ENTRY OF THE 80003100
                                       GROUP ITEM WHICH CONTAINS THIS   80003200
                                       ITEM. POINTS TO ITEM OF HIGHER   80003300
                                       LEVEL NUMBER OR TO AN FD,SD,OR MD80003400
                                       ENTRY. END-OF-LIST IS DENOTED BY 80003500
                                       A ZERO (0).                      80003600
1.12   OCUR+1                                                           80003700
         [1 : 6]   LEVEL (56=66,57=77,58=88)                            80003800
         [7 : 3]   CLASS (SEE SECTION 4.02 )                            80003900
         [10: 1]   SCALE SIGN                                           80004000
         [11: 7]   SCALE                                                80004100
         [18:15]   SAME-NAME LINK - EACH UNIQUE SYMBOL IS ENTERED IN    80004200
                                       DICT ONCE. MULTIPLE OCCURANCES OF80004300
                                       THE SAME SYMBOL,WHICH REQUIRE    80004400
                                       SEPARATE DESCRIPTIONS,ARE LINKED 80004500
                                       VIA THE SAME-NAME LINK. ZERO DE- 80004600
                                       NOTES END-OF-LIST.               80004700
         [33:15]   INFO LINK - INDEX INTO INFO ARRAY WHERE ADDITIONAL   80004800
                                       DATA FOR THIS ITEM IS STORED.    80004900
                                       (SEE SECTION 2.1 )               80004950
                                                                        80005000
1.2 SPECIAL-NAMES DICTIONARY ENTRY                                      80005100
         [1 : 5]   TYPE = 13                                            80005200
         [18:15]   RESERVED WORD KEY FOR HARDWARE TYPE                  80005300
         [33:15]   HARDWARE TYPE IDENTIFICATION (SEE SECTION 4.04 )     80005400
                                                                        80005500
1.3 SYNONYM DICTIONARY ENTRY                                            80005600
         [1 : 5]   TYPE = 4                                             80005700
         [33:15]   LINK TO ORIGINAL NAME                                80005800
                                                                        80005900
1.4 RESERVED WORD DICTIONARY ENTRY                                      80006000
       (WORD FOLLOWING THE ASSOCIATEDSYMBOL ENTRY-S LAST WORD)          80006050
         [1 : 5]   TYPE = 1                                             80006100
         [18:15]   CATEGORY (CAT) (SEE SECTION 4.01 )                   80006200
         [33:15]   IDENTIFICATION CODE (KEY) (SEE SECTION 6.02 )        80006300
                                                                        80006400
1.5 SPECIAL CHARACTER DICTIONARY ENTRY                                  80006500
       (WORD FOLLOWING THE ASSOCIATED SYMBOL ENTRY)                     80006550
         [1 : 5]   TYPE = 17                                            80006600
         [18:15]   CATEGORY (CAT) (SEE SECTION 4.01 )                   80006700
         [33:15]   IDENTIFICATION CODE (KEY) (SEE SECTION 6.02 )        80006800
                                                                        80006900
1.6 RENAMES DICTIONARY ENTRY                                            80007000
1.61   OCUR                                                             80007100
         [1 : 5]   TYPE = 9                                             80007200
         [18:15]   OCUR OF THE DATA-NAME BEING RENAMED, OR THE FIRST    80007300
                                       DATA-NAME IF THE THRU OPTION IS  80007400
                                       USED                             80007500
         OTHER FIELDS MAY BE USED AS IN A GENERAL DICT. ENTRY (SEE      80007600
                                       SECTION 1.11 ).                  80007700
1.62   OCUR+1                                                           80007800
         [33:15]   OCUR OF THE DATA-NAME BEING RENAMED THRU, OR ZERO IF 80007900
                                       THE THRU OPTION IS NOT USED.     80008000
         OTHER FIELDS MAY BE USED AS IN A GENERAL DICT. ENTRY (SEE      80008100
                                       SECTION 1.12 ).                  80008200
                                                                        80008300
1.7 FD/SD/MD DICTIONARY ENTRY                                           80008400
1.71   OCUR                                                             80008500
         [1 : 5]   TYPE = 6                                             80008600
         [6 : 1]   SD FLAG = 1 IF FILE IS SORT ENTRY                    80008700
         [7 : 1]   ACCESS MODE = 1 FOR RANDOM ACCESS DISK FILE          80008800
         [8 : 1]   MD FLAG                                              80008900
         [9 : 1]   FILE-LIMIT-1 = 1 IF DATA-NAME OCUR IS IN FIB[1] OR   80009000
                                = 0 IF LITERAL IS IN FIB[1].            80009100
         [10: 1]   FILE-LIMIT-2 = 1 IF DATA-NAME OCUR IS IN FIB[3] OR   80009200
                                = 0 IF LITERAL IS IN FIB[3].            80009300
         [17: 1]   DECLARED FD                                          80009400
         [18:15]   FOLLOWER LINK - INDEX OF THE FOLLOWING ITEM, THE OCUR80009500
                                       OF THE FIRST RECORD NAME OF THIS 80009600
                                       FILE.                            80009700
         [33:15]   HIERARCHY LINK = 0 (FILE NAMES CANNOT BE QUALIFIED)  80009800
1.72   OCUR+1                                                           80009900
         [1 : 1]   LABEL FLAG = 1 IF ENTRY FOR COMPILED LABEL HAS BEEN  80010000
                                       DECLARED (USERS LABEL FLAG).     80010100
         [2 :15]   TEMPORARY LOCATION OF LITC FOR LABEL FIELD DECLAR-   80010200
                                       ATION FIX-UP.                    80010300
         [18:15]   SAME-NAME LINK = 0 (FILE NAMES MUST BE UNIQUE)       80010400
         [33:15]   INFO LINK - INDEX INTO INFO ARRAY WHERE ADDITIONAL   80010500
                                       DATA FOR THIS FILE IS STORED.    80010600
                                       (SEE SECTION 2.2  ).             80010700
1.73   OCUR+2                                                           80010800
         [3 :15]   ACTUAL KEY (IF ANY)                                  80010900
         [23:10]   LABEL LENGTH                                         80011000
         [33:15]   USERS LABEL OCUR LINK                                80011100
                                                                        80011200
1.8 LABEL FIELDS DECLARED IN FD/SD/MD ENTRY WITH "HASHED" OPTION        80011300
              NOTE: CONSTRUCT IS                                        80011400
                                          /LITERAL             /        80011500
                   VALUE OF DATA-NAME-3 IS/                    /[,DN5..]80011600
                                          /DATA-NAME-4 [HASHED]/        80011700
                    DATA-NAME-3 MUST BE IN USERS PORTION OF LABEL,      80011800
                    DATA-NAME-4 MUST BE IN EACH RECORD.                 80011900
                    THE HASHED LINKS ARE AS FOLLOWS:                    80012000
                        FIB[(FILE)+19].[33:15] = FILE DICT.OCUR         80012100
                        FILE DICT.OCUR+2.[33:15]=USER-S LABEL DICT OCUR 80012200
                        USER-S LABEL OCUR.[18:15]=DATA-NAME-3 OCUR      80012300
                            EACH DN-3 HAS A LINK TO THE CORRESPONDING   80012400
                            DN-4 AND A LINK(IF REQUIRED) TO DN-5.       80012500
                            DN-4 LINKS BACK TO ITS CORRESPONDING DN-3   80012600
                            ENTRY.                                      80012700
1.81   OCUR                                                             80012800
         [1 : 5]   TYPE = 16                                            80012900
         [1 : 9]   HASHED FLAG = 1                                      80013000
         [18:15]   FOLLOWER LINK IF THIS IS DATA-NAME-4 ENTRY (SEE      80013100
                                       SECTION 1.11)-I.E.,THIS IS AN    80013200
                                       ENTRY IN A RECORD OF THE FILE.   80013300
                   LINK TO NEXT DATA-NAME-3 (IF REQUIRED) IF MORE THAN  80013400
                                       ONE DATA-NAME IS TO BE HASHED.   80013500
                                       (IN EXAMPLE ABOVE DN-3 ENTRY HAS 80013600
                                       LINK TO DN-5 IN THIS FIELD IF    80013700
                                       DN-5 IS HASHED)                  80013800
         OTHER FIELDS MAY BE USED AS IN A GENERAL DICT. ENTRY (SEE      80013900
                                       SECTION 1.11 ).                  80014000
1.82   OCUR+1                                                           80014100
         ALL FIELDS MAY BE USED AS IN A GENERAL DICTIONARY ENTRY.       80014200
                                       (SEE SECTION 1.12 )              80014300
1.83   OCUR+2                                                           80014400
         [33:15]   DATA-NAME-4 OCUR IF THIS IS DATA-NAME-3 OR DATANAME-380014500
                                       OCUR IF THIS IS DATA-NAME-4.     80014600
                                       (SEE SECTION 1.8 ).              80014700
                                                                        80014800
1.9 LABEL DICTIONARY ENTRY                                              80014900
1.91   OCUR                                                             80015000
         [1 : 5]   TYPE = 3                                             80015100
         [6 : 1]   DECLARATION FLAG = 1 IF LABEL IN DECLARATIVES        80015200
                                    = 0 IF LABEL IN PROCEDURE DIVISION  80015300
         [7 : 1]   FORWARD REFERENCE FLAG                               80015350
         [8 :10]   FOLLOW TABLE ADDRESS (SEE SECTION *****).            80015400
         [18:15]   SYMBOL ADDRESS                                       80015600
         [33: 1]   TERMINAL PARAGRAPH FLAG                              80015700
         [34: 1]   THRU FLAG                                            80015800
         [35: 1]   GO TO FLAG                                           80015900
         [36:12]   DR ARRAY INDEX (SEE SECTION *****).                  80016000
1.92   OCUR+1                                                           80016100
         [2 : 1]   ALTER FLAG = 1 IF MAY BE ALTERED(IS ONLY A GO TO).   80016200
         [3 : 1]   SORT FLAG = 1 IF SORT PROCEDURE             %TR 140  80016250
         [4 : 1]   SECTION FLAG = 1 IF BACKWARD REFERENCE SECTION.      80016300
         [5 : 1]                                                        80016400
         [6 : 1]   DUMP FLAG                                            80016500
         [7 : 1]   MONITOR FLAG                                         80016600
         [8 :10]   PRT ADDRESS                                          80016700
         [18:15]   TERMINAL PARAGRAPH PRT, IF SECTION.                  80016800
         [33:15]   DUMP DATA-NAME LINK OR DUMP INTEGER LIMIT.           80016900
1.93     [1 :17]   DIAGNOSTICS                                          80017000
         [18:15]   DIAGNOSTICS                                          80017100
         [33:15]   INDEX INTO OBJECT-TIME NUMBER-OF-TIMES-PASSED VECTOR 80017200
                                                                        80017300
2.0 PICTURE DICTIONARY ENTRY                                            80017400
2.01   OCUR                                                             80017500
         [1 : 5]   TYPE = 19                                            80017600
2.02   OCUR+1                                                           80017700
         [1 : 6]   PC CODE COUNT                                        80017800
                                                                        80017900
2.1 INFO ARRAY ENTRY FOR DATA-NAME OR LABEL.                            80018000
2.11   OCUR                                                             80018100
         [1 :10]   PRT ASSIGNMENT                                       80018200
         [11:10]   INDEX OF WORD WHICH CONTAINS BEGINNING CHARACTER OF  80018300
                                       THIS FIELD, IF NOT IN PRT.       80018400
         [21: 3]   STARTING CHARACTER WITHIN THE SPECIFIED WORD.        80018500
         [24: 5]   ENTRY LENGTH                                         80018600
         [30: 1]   VALUE FLAG                                           80018700
         [31:1]    PICTURE FLAG                                         80018800
         [32: 1]   DUMP FLAG                                            80018900
         [33:15]   FIELD SIZE                                           80019000
2.12   OCUR+1                                                           80019100
         [1 : 2]   JUSTIFIED CODE (SEE SECTION 4.05 ).                  80019200
         [3 : 1]   MONITOR FLAG                                         80019300
         [4 : 1]   LABEL FLAG                                           80019400
         [5 : 5]   "LEAVING" SIZE                                       80019500
         [10: 1]   SIGNED FLAG                                          80019600
         [11: 1]   SIZE DEPENDING FLAG                                  80019700
         [12: 1]   OPEN                                        %CJC 006 80019750
         [13: 6]   LEFT PART SIZE                                       80019800
         [19:13]   NUMBER OF OCCURANCES (FROM "OC" INTEGER)    %TR 86   80019900
         [32: 4]   NUMBER OF SUBSCRIPTS                        %TR 86   80020000
         [36: 2]   NOT USED                                    %TR 86   80020100
         [38: 1]   ZS FLAG (ZERO SUPPRESS)                              80020200
         [39: 1]   BZ FLAG (BLANK WHEN ZERO)                            80020300
         [40: 1]   FS FLAG (FLOAT DOLLAR SIGN)                          80020400
         [41: 1]   CP FLAG (CHECK PROTECT)                              80020500
         [42: 1]   TECHNIQUE-C FLAG                            %CJC 006 80020600
         [43: 5]   VALUE COUNT                                          80020700
2.13   OCUR+2                                                           80020800
         [1 : 1]   CONSTANT SECTION FLAG                                80020900
         [2 : 1]   WORKING-STORAGE SECTION FLAG                         80021000
         [3 :15]   SYMBOL INDEX - INDEX INTO DICT (SEE SECTION 1.0 )    80021100
                                       UNLESS MONITOR AND/OR DUMP FLAG  80021200
                                       ON - THEN INDEX INTO SMB (SEE    80021300
                                       SECTION 2.3  ).                  80021400
         [18:15]   PICTURE INDEX (INTO DICT, SEE SECTION 2.01 ).        80021500
         [33:15]   INTERNAL (MAPPING) SIZE                              80021600
2.14   OCUR+3 (NOT PRESENT IF NOT REQUIRED)                             80021700
         [3 :15]   SIZE DEPENDING LINK                                  80021800
         [18:15]   DATA-NAME SIGN LINK                                  80021900
         [33:15]   OCCURS DEPENDING LINK                                80022000
2.15   OCUR+4 (NOT PRESENT IF NOT REQUIRED)                             80022100
         [2 :46]   "88" VALUE ENTRIES (SEE SECTION 4.11).               80022200
                                                                        80022300
2.2 INFO ENTRY FOR FILE DESCRIPTION                                     80022400
2.21   OCUR                                                             80022500
         [1 : 3]   TECHNIQUE (SEE SECTION 4.08).                        80022600
         [4 :10]   PRT LOCATION OF FIRST I/O DESCRIPTOR.                80022700
         [14:10]   PRT LOCATION OF FIB DESCRIPTOR                       80022800
         [24: 5]   ENTRY LENGTH                                         80022900
         [33:15]   SECTION OCUR FOR "USE FOR KEY CONVERSION ON FILE".   80023000
2.22   OCUR+1                                                           80023100
         [1 :15]   LINK TO SYMBOL ENTRY FOR FILE NAME                   80023200
         [16:10]   RECORD SIZE IN WORDS                                 80023300
         [26:10]   MULTIFILE POSITION                                   80023400
         [41: 3]   PRINTER BACKUP CODE:                                 80023500
                    CODE    HARDWARE TYPE       FILE DISPOSITION        80023600
                     0   PRINTER DISK         BACK-UP DISK ONLY         80023700
                     1   PRINTER ALTERNATE    BACK-UP TAPE OR DISK      80023800
                     2   PRINTER OR DISK      PRINTER OR BACK-UP DISK   80023900
                     3   PRINTER OR ALTERNATE PRINTER,BACKUP TAPE ORDISK80024000
                     4   PRINTER NO TAPE      PRINTER ONLY              80024100
                      OR PRINTER NO ALTERNATE                           80024200
                     5   PRINTER              PRINTER OR BACK-UP TAPE   80024300
                      OR PRINTER OR TAPE                                80024400
                     6   PRINTER TAPE         BACK-UP TAPE ONLY         80024500
         [44: 4]   HARDWARE TYPE (SEE SECTION 4.04).                    80024600
2.23   OCUR+2                                                           80024700
         [1 : 1]   SIZE DEPENDING FLAG                                  80024800
         [8 :10]   INDEX INTO COMPILE-TIME FIB (SEE SECTION     ).      80024900
         [18:15]   LINK TO SIZE DEPENDING VARIABLE-S DICT. ENTRY.       80025000
         [33:15]   RENAMING LINK (TO ORIGINAL ENTRY).                   80025100
2.24   OCUR+3                                                           80025200
         [1 : 2]   AT END FLAG: 0 = NO"AT END"YET FOUND FOR THIS FILE.  80025300
                                1 = ONE"AT END"HAS BEEN FOUND ALREADY,  80025400
                                       AND NO MORE ARE NECESSARY - THE  80025500
                                       FIRST AT END WILL CARRY OVER.    80025600
                                2 = MORE THAN ONE"AT END"CLAUSE FOUND   80025700
                                       FOR THIS FILE - ALL FOLLOWING    80025800
                                       READS MUST HAVE EXPLICIT AT END  80025900
                                       CLAUSE FOR THIS FILE.            80026000
         [3 :13]   AT END CODE LOCATION (RELATIVE ADDRESS WITHIN"KODE"  80026100
                                       ARRAY).                          80026200
         [16:10]   AT END CODE LENGTH (IN CHARACTERS).                  80026300
         [33:10]   PRT LOCATION FOR SORT RECORD DESCRIPTOR.             80026400
         [43: 5]   NR. OF UNITS REQUESTED FOR SORT TAPES.               80026500
2.25   OCUR+4                                                           80026600
         [6 :42]   FILE IDENTIFICATION LITERAL                          80026700
2.26   OCUR+5                                                           80026800
         [6 :42]   MULTIFILE IDENTIFICATION LITERAL                     80026900
                                                                        80027000
2.3 MONITOR/DUMP ARRAY (SMB)                                            80027100
2.31   X                                                                80027200
         [4 : 1]   DUMP LABEL FLAG                                      80027300
         [5 : 3]   SIGN TYPE (SEE SECTION  4.07).                       80027400
         [8 : 3]   TYPE FIELD:0 = ALPHA,ALPHANUMERIC,EDITED NUMERIC     80027500
                              1 = NUMERIC INTEGER(DISPLAY)              80027600
                              2 = NUMERIC INTEGER(COMPUTATIONAL)        80027700
                              3 = NUMERIC SCALED (DISPLAY)              80027800
                              4 = NUMERIC SCALED (COMPUTATIONAL)        80027900
                              5 = LABEL FIELD                           80028000
                              6 = NON-ELEMENTARY DATA-NAME              80028100
         [11: 6]   LENGTH OF ENTRY                                      80028200
         [17: 7]   NR OF CHARACTERS IN SYMBOL [DENOTED BY N BELOW]      80028300
         [24:24]   FIRST FOUR CHARACTERS OF SYMBOL                      80028400
2.32   FOLLOWING (N-4)DIV(8)+1 WORDS                                    80028500
         [0 :48]   THE REMAINING(N-4) CHARACTERS OF SYMBOL              80028600
2.33   X+(N-4)DIV(8)+2                                                  80028700
         [2 :15]   FIELD SIZE IN CHARACTERS                             80028800
         [17: 1]   SCALE SIGN                                           80028900
         [18: 7]   SCALE                                                80029000
         [25:10]   DATA-NAME SIGN PRT INDEX (PX) [IF REQUIRED]          80029100
         [35:10]   DATA-NAME SIGN WORD INDEX(QX) [IF REQUIRED]          80029200
         [45: 3]   DATA-NAME SIGN CHAR.INDEX(RX) [IF REQUIRED]          80029300
2.34   X+(N-4)DIV(8)+3 (PRESENT ONLY ON "DUMP")                         80029400
         [1 : 1]   OCUR BIT                                             80029500
         [33:15]   OCUR (IN DICT) FOR SYMBOL (SEE SECTION 1.0 )         80029600
                                                                        80029700
2.4 HARDWARE PARAMETER ARRAY (HPAR)                                     80029800
       INDEX       CONTENTS                                             80029900
         0         SIZE OF I/O BUFFER AREAS                             80030000
         1         TAPES                                                80030100
         2         CARD-READERS                                         80030200
         3         PUNCHES                                              80030300
         4         PRINTERS                                             80030400
         5         MEMORY SIZE                                          80030500
         6         MESSAGE PRINTER                                      80030600
         7         SCRATCH TAPES FOR RERUN                              80030700
         8         DRUM                                                 80030800
         9         KEYBOARD                                             80030900
         10        SORT-TAPES                                           80031000
         11        DISK SIZE                                            80031100
         12        SORT CORE SIZE   ESTIMATE                            80031200
                                                                        80031300
2.5 HIERARCHY INFORMATION STACK (STK) ARRAY - CONTENTS OF EACH ROW:     80031400
2.51   INDEX        CONTENTS                                            80031500
         0         LEVEL NUMBER                                         80031600
         1         OCUR LINK                                            80031700
         2         HIERARCHY LINK                                       80031800
         3         OCCURS COUNT                                         80031900
         4         DECLARED SIZE                                        80032000
         5         ACCUMULATED SIZE                                     80032100
         6         REDEFINES LINK                                       80032200
         7         REDEFINES SIZE                                       80032300
         8         SIZE DEPENDING FLAG   [1 : 1]                        80032400
                   OCCURS DEPENDING FLAG [2 : 1]                        80032600
                   USAGE(SEE SECTION4.10)[27: 6]                        80032700
                   CLASS(SEE SECTION4.02)[45: 3]                        80032800
         9         INTERNAL DECLARED SIZE                               80032900
         10        INTERNAL ACCUMULATED SIZE                            80033000
         11        LOCATION IN CODE SEGMENT TO EMIT A LITERAL CALL      80033100
                                       GIVING THE SIZE OF RECORD        80033200
2.52 MAINTENANCE AND USAGE OF HIERARCHY STACK                           80033300
                                                                        80033400
2.6 LITERAL INFO AND TEMP. STORAGE FOR MOVE GENERATOR (LTR ARRAY)       80033500
       INDEX        CONTENTS                                            80033600
         0-15      LITERAL CHARACTERS,STARTING IN FOURTH CHARACTER OF 0 80033700
         18        COUNTER USED BY LITINS PROCEDURE IN INSERTING LITERAL80033800
                                       INTO PROGRAM STRING.             80033900
         19        SIGN CHARACTER                                       80034000
         20        SDNR (SOURCE SIGN DATA-NAME CHARACTER POSITION)      80034100
         21        SDNQ (SOURCE SIGN DATA-NAME WORD)                    80034200
         22        SDNP (SOURCE SIGN DATA-NAME PRT LOCATION)            80034300
         23        RA   (CHARACTER POSITION OF LITERAL)                 80034400
         24        QA   (STARTING WORD POSITION OF LITERAL              80034500
         25        ASGTA(PRT FOR ARRAY CONTAINING LITERAL)              80034600
                                       = 0 IF LITERAL INCLUDED          80034700
         26        SGA  (SIGN CONVENTION FOR LITERAL)                   80034800
         27        SIZE                                                 80034900
         28        LEFT PART (SIZE OF FIELD TO LEFT OF DECIMAL)         80035000
         29        SCALE                                                80035100
         30        USAGE (SEE SECTION 4.10).                            80035200
         31        CLASS (SEE SECTION 4.02).                            80035300
                                                                        80035400
                                                                        80035500
3.0 SEGMENT DICTIONARY ARRAY                                            80035600
3.001  ENTRY AT SEGMENT [0,0]  (AFTER COMPILATION)                      80035610
         [18:15]   LOCATION OF LINE DICTIONARY                          80035620
         [33:15]   LOCATION OF SEGMENT DICTIONARY                       80035630
3.01   ENTRY FOR EACH PROGRAM SEGMENT                                   80035700
         [1 : 1]   ON IF THIS IS A TYPE 2 SEGMENT, OFF OTHERWISE.       80035800
         [2 : 1]   ON FOR INTRINSICS, OFF OTHERWISE.                    80035900
         [8 :10]   PRT ADDRESS OF FIRST PROGRAM DESCRIPTOR ON THE LINKED80036000
                                       LIST OF ALL PROGRAM DESCRIPTORS  80036100
                                       FOR THIS SEGMENT(SEE SECTION     80036200
                                             ).                         80036300
         [18:15]   IF PROGRAM SEGMENT, SIZE OF SEGMENT. IF INTRINSIC,   80036400
                                       NOT USED.                        80036500
         [33:15]   IF PROGRAM SEGMENT, RELATIVE DISK ADDRESS. IF        80036600
                                       INTRINSIC, INTRINSIC NUMBER.     80036700
3.50 LINE DICTIONARY ARRAY                                              80036730
3.51   ENTRY FOR EACH LINE SEGMENT  ( -1 MEANS NO ENTRY)                80036740
         [18:15]   LENGTH OF LINE SEGMENT                               80036750
         [33:15]   LOCATION OF LINE SEGMENT IN CODE FILE                80036760
3.52   ENTRY FOR EACH CARD                                              80036770
         [10:28]   SEQUENCE NUMBER IN BINARY                            80036780
         [38:10]   RELATIVE ADDRESS WITHIN CODE SEGMENT                 80036790
                                                                        80036800
4.0 COMPILER VARIABLES                                                  80036900
4.01   CATEGORY                                                         80036905
         1    =    SECTION                                              80036910
         2    =    AND/OR                                               80036915
         3    =    FIGURATIVE CONSTANT                                  80036920
         4    =    HARDWARE NAME                                        80036925
         5    =    INTRINSIC FUNCTION                                   80036930
         6    =    ARITHMETIC OPERATORS                                 80036935
         7    =    PERIOD (SENTENCE DELIMITER)                          80036940
         8    =    RELATIONAL OPERATOR                                  80036945
         9    =    LABEL FIELD                                          80036950
4.02   CLASS                                                            80036960
         1    =    ALPHABETIC                                           80036970
         2    =    ALPHANUMERIC                                         80036980
         3    =    NUMERIC                                              80037000
         4    =    EDITED NUMERIC                                       80037100
4.03   DIVN                                                             80037200
         3    =    DATA DIVISION, FILE SECTION                          80037300
         4    =    PROCEDURE DIVISION                                   80037400
         8    =    MAKE DICTIONARY ENTRY WITH 3 WORD OCUR               80037500
         9    =    DO NOT MAKE DICTIONARY ENTRY                         80037600
         31   =    WORKING-STORAGE/CONSTANT SECTION                     80037700
4.04   HDWR  (PERIPHERAL HARDWARE ASSIGNED)                             80037800
         1    =    TAPES                                                80037900
         2    =    CARD READER                                          80038000
         3    =    CARD PUNCH                                           80038100
         4    =    LINE PRINTER                                         80038200
         5    =    SCRATCH TAPES                                        80038300
         6    =    MESSAGE PRINTER                                      80038400
         8    =    DRUM                                                 80038500
         9    =    KEYBOARD                                             80038600
         10   =    SORT-TAPES                                           80038700
         11   =    PAPER-TAPE-READER                                    80038800
         12   =    PAPER-TAPE-PUNCH                                     80038900
         13   =    DISK                                                 80039000
         14        DATA COMMUNICATIONS ( DATA )                         80039100
         15        TIME SHARING        (REMOTE)                         80039150
4.05   JUSTIFIED                                                        80039200
         0    =    NORMAL                                               80039300
         1    =    RIGHT                                                80039400
         2    =    LEFT                                                 80039500
4.06   SCLASS (SCANNER CLASS)                                           80039600
         1    =    NON-NUMERIC LITERAL                                  80039700
         2    =    SPECIAL CHARACTER                                    80039800
         3    =    LABEL                                                80039900
         4    =    DATA-NAME (NORMAL COBOL WORD)                        80040000
         5    =    NUMERIC LITERAL WITH SPECIFIED SCALE                 80040100
         6    =    NUMERIC (INTEGER) LITERAL                            80040200
         7    =    PERIOD                                               80040300
         8    =    PICTURE                                              80040400
         9    =    ERROR                                                80040500
4.07   SIGNED TYPE                                                      80040600
         0    =    UNSIGNED                                             80040700
         1    =    "S" SIGN                                             80040800
         2    =    "J" SIGN                                             80040900
         3    =    DATA-NAME SIGN                                       80041000
         4    =    REPORT SIGN                                          80041100
4.08   TECH                                                             80041200
         0    =    TECHNIQUE-A                                          80041300
         1    =    TECHNIQUE-B                                          80041400
         2    =    TECHNIQUE-C                                          80041500
4.09   TYPE                                                             80041600
         1    =    RESERVED WORD                                        80041700
         2    =    GROUP ITEM                                           80041800
         3    =    LABEL                                                80041900
         4    = SYNONYM ENTRY                                           80042000
         5    =    LITERALS                                             80042100
         6    =    FILE NAME                                            80042200
         7    =    RECORD NAME  (01 LEVEL)                              80042300
         8    =    ELEMENTARY ITEM                                      80042400
         9    =    RENAMES ITEM                                         80042500
         11   =    CONDITION NAME                                       80042600
         12   =    END-OF-JOB                                           80042700
         13   =    SPECIAL NAME                                         80042800
         14   =    INCLUDE LOCAL NAME                                   80042900
         15   =    TEMPORARY FORWARD REFERENCE FOR DATA-NAMES           80043000
         16   =    TEMPORARY USERS LABEL FIELD FORWARD                  80043100
         17   =    SPECIAL CHARACTER                                    80043200
         18   =    SPECIAL REGISTERS  (TALLY, ETC.)                     80043300
         19   =    PICTURE ENTRY                                        80043400
4.10   USAGE                                                            80043500
         0    =    DISPLAY                                              80043600
         1    =    COMPUTATIONAL                                        80043700
         2    =    COMPUTATIONAL-1  (RECIEVES PRT CELL)                 80043800
4.11   88-LEVEL ENTRY VALUES                                            80043900
         0    =    SINGLE VALUE                                         80044000
         1    =    VALUE PAIR"THRU" OPTION                              80044100
                                                                        80044200
5.0 ERROR MESSAGE WORDS AND INDICES                                     80050000
5.01   ALPHA ORDER                                                      80050100
          99                                                            80050200
         119                                                            80050300
         120                                                            80050400
         121                                                            80050500
         122                                                            80050600
         123                                                            80050700
         137                                                            80050800
         138                                                            80050900
          61 ARITHMETIC                                                 80051000
          44 ARRAY                                                      80051100
          11 ASSIGNMENT                                                 80051200
         132 AT END                                                     80051300
         139 B-5500                                                     80051400
         140 MO-DA-YR (COMPILER DATE USED WITH 139)                     80051500
          41 CHARACTERS                                                 80051600
          39 CLASS                                                      80051700
          75 COMPILE                                                    80051800
          59 CONDITIONAL                                                80051900
         146 CONSTANT SECTION                                  %CJC 053 80051950
          38 COPY                                                       80052000
          25 DECLARATION                                                80052100
         100 DEPENDING                                                  80052200
          87 DID NOT                                                    80052300
          73 DIVISION                                                   80052400
         110 DUPL.                                                      80052500
          97 DUPLICATE LABEL                                            80052600
           8 ERROR                                                      80052700
          10 EXTRA                                                      80052800
         141 FD                                                         80052810
           7 FILE                                                       80052900
         134 FROM                                                       80053000
          50 FUNCTION                                                   80053100
          53 GO TO                                                      80053200
          76 GROUP                                                      80053300
          20 HARDWARE                                                   80053400
          17 HIERARCHY                                                  80053500
          86 HYPHEN                                                     80053600
          92 IDENT.                                                     80053700
          40 ILLEGAL                                                    80053800
          63 INPUT-OUTPUT                                               80053900
          54 INTEGER                                                    80054000
         133 INTO                                                       80054100
          37 LABEL                                                      80054200
           5 LEFT                                                       80054300
          35 LEVEL                                                      80054400
          49 LIBRARY                                                    80054500
           1 LITERAL                                                    80054600
         142 MD                                                         80054610
          71 MEMORY                                                     80054700
           9 MISSING                                                    80054800
          79 MISSING PERIOD                                             80054900
          43 MOVE                                                       80055000
          83 NAME                                                       80055100
         102 NO ELEMENT. ITEMS IN                                       80055200
          19 NOT                                                        80055300
          45 OCCURS                                                     80055400
         109 O K.                                                       80055500
          22 OPERAND                                                    80055600
          23 OPERATOR                                                   80055700
           3 PARENTHESIS                                                80055800
          52 PERFORM                                                    80055900
          67 PERIOD                                                     80056000
          36 PICTURE                                                    80056100
          93 POSSIBLE                                                   80056200
          29 PROCEDURE                                                  80056300
          91 PROGRAM                                                    80056400
         107 PRT                                                        80056500
         108 (USED WITH 207 FOR "PRT NNNN")                             80056600
          84 QUALIFICATION                                              80056700
         135 READ                                                       80056800
         144 RECEIVING FIELD                                   %CJC 053 80056850
          34 RECORD                                                     80056900
          68 REDEFINE                                                   80057000
           6 RIGHT                                                      80057100
         143 SD                                                         80057110
          31 SECTION                                                    80057200
          88 SELECTED                                                   80057300
          65 SEQUENCE                                                   80057400
          95 SIGNED                                                     80057500
          15 SIZE                                                       80057600
          90 SORT                                                       80057700
          27 SPECIFICATION                                              80057800
          32 SPELLING                                                   80057900
          57 STATEMENT                                                  80058000
         105 STOP RUN                                                   80058100
          55 SUBSCRIPT                                                  80058200
           2 SYNTAX                                                     80058300
          77 SYNTAX ERROR                                               80058400
          70 TAPES                                                      80058500
          81 TRUNCATION                                                 80058600
          47 TYPE                                                       80058700
          13 UNIDENTIFIED                                               80058800
          16 USAGE                                                      80058900
          46 VALUE                                                      80059000
          72 VECTOR                                                     80059100
          96 VERB                                                       80059200
         136 WRITE                                                      80059300
         124 (VARIABLE-UP TO 63 CHAR)                                   80059400
                                                                        80059500
                                                                        80059600
5.02   NUMERIC ORDER                                                    80070000
           1 LITERAL                                                    80070100
           2 SYNTAX                                                     80070200
           3 PARENTHESIS                                                80070300
           5 LEFT                                                       80070400
           6 RIGHT                                                      80070500
           7 FILE                                                       80070600
           8 ERROR                                                      80070700
           9 MISSING                                                    80070800
          10 EXTRA                                                      80070900
          11 ASSIGNMENT                                                 80071000
          13 UNIDENTIFIED                                               80071100
          15 SIZE                                                       80071200
          16 USAGE                                                      80071300
          17 HIERARCHY                                                  80071400
          19 NOT                                                        80071500
          20 HARDWARE                                                   80071600
          22 OPERAND                                                    80071700
          23 OPERATOR                                                   80071800
          25 DECLARATION                                                80071900
          27 SPECIFICATION                                              80072000
          29 PROCEDURE                                                  80072100
          31 SECTION                                                    80072200
          32 SPELLING                                                   80072300
          34 RECORD                                                     80072400
          35 LEVEL                                                      80072500
          36 PICTURE                                                    80072600
          37 LABEL                                                      80072700
          38 COPY                                                       80072800
          39 CLASS                                                      80072900
          40 ILLEGAL                                                    80073000
          41 CHARACTERS                                                 80073100
          43 MOVE                                                       80073200
          44 ARRAY                                                      80073300
          45 OCCURS                                                     80073400
          46 VALUE                                                      80073500
          47 TYPE                                                       80073600
          48                                                            80073700
          49 LIBRARY                                                    80073800
          50 FUNCTION                                                   80073900
          52 PERFORM                                                    80074000
          53 GO TO                                                      80074100
          54 INTEGER                                                    80074200
          55 SUBSCRIPT                                                  80074300
          57 STATEMENT                                                  80074400
          59 CONDITIONAL                                                80074500
          61 ARITHMETIC                                                 80074600
          63 INPUT-OUTPUT                                               80074700
          65 SEQUENCE                                                   80074800
          67 PERIOD                                                     80074900
          68 REDEFINE                                                   80075000
          70 TAPES                                                      80075100
          71 MEMORY                                                     80075200
          72 VECTOR                                                     80075300
          73 DIVISION                                                   80075400
          75 COMPILE                                                    80075500
          76 GROUP                                                      80075600
          77 SYNTAX ERROR                                               80075700
          79 MISSING PERIOD                                             80075800
          81 TRUNCATION                                                 80075900
          83 NAME                                                       80076000
          84 QUALIFICATION                                              80076100
          86 HYPHEN                                                     80076200
          87 DID NOT                                                    80076300
          88 SELECTED                                                   80076400
          90 SORT                                                       80076500
          91 PROGRAM                                                    80076600
          92 IDENT.                                                     80076700
          93 POSSIBLE                                                   80076800
          95 SIGNED                                                     80076900
          96 VERB                                                       80077000
          97 DUPLICATE LABEL                                            80077100
          99                                                            80077200
         100 DEPENDING                                                  80077300
         102 NO ELEMENT. ITEMS IN                                       80077400
         105 STOP RUN                                                   80077500
         107 PRT                                                        80077600
         108 (USED WITH 207 FOR "PRT NNNN")                             80077700
         109 O K.                                                       80077800
         110 DUPL.                                                      80077900
         111 DICTIONARY ENTRY FOR TALLY                                 80078000
         115 DICTIONARY ENTRY FOR TODAYS-DATE                           80078100
         119                                                            80078200
         120                                                            80078300
         121                                                            80078400
         122                                                            80078500
         123                                                            80078600
         124 (VARIABLE-UP TO 63 CHAR)                                   80078700
         132 AT END                                                     80078800
         133 INTO                                                       80078900
         134 FROM                                                       80079000
         135 READ                                                       80079100
         136 WRITE                                                      80079200
         137                                                            80079300
         138                                                            80079400
         139 B-5500                                                     80079500
         140 MO-DA-YR (COMPILER DATE USED WITH 139)                     80079600
         141 FD                                                         80079610
         142 MD                                                         80079620
         143 SD                                                         80079630
         144 RECEIVING FIELD                                   %CJC 053 80079640
         146 CONSTANT SECTION                                  %CJC 053 80079650
                                                                        80079700
                                                                        80079800
MOVE CODES (INSERTED IN EDIT[X].[30:5]                                  80079900
           1 INSERT                                                     80080000
           2 FLOAT                                                      80080100
           3 SIGNED                                                     80080200
           4 ZERO SUPPRESS                                              80080300
           5 BLANK WHEN ZERO                                            80080400
           6 CHECK PROTECT                                              80080500
           7 BLANK INSERT                                               80080600
           8 CREDIT/DEBIT                                               80080700
           9 END SIGNAL                                                 80080800
          10 TRANSFER NUMERIC                                           80080900
          11 TRANSFER ALPHABETIC                                        80081000
          12 TRANSFER ALPHANUMERIC                                      80081100
          13 BWZ                                                        80081200
          14 SFS                                                        80081300
          15 SFD                                                        80081400
          16 TRANSFER / EDIT SEPARATOR                                  80081500
6.0 RESERVED WORDS-TYPE,CATEGORY,AND KEY                                80100000
6.01   ALPHA ORDER                                                      80100100
          KEY  RESERVED WORD           CATAGORY                         80100200
          333  ABOUT                       0                            80100300
          480  ABS                          5                           80100400
          901  ACCEPT                      0                            80100500
          227  ACCESS                      0                            80100600
          222  ACTUAL                      0                            80100700
          902  ADD                         0                            80100800
          260  ADDRESS                     0                            80100900
          505  ADVANCING                   0                            80101000
          506  AFTER                       0                            80101100
          501  ALL                         0                            80101200
          347  ALPHABETIC                   8                           80101300
          348  ALPHANUMERIC                0                            80101400
          903  ALTER                       0                            80101500
          269  ALTERNATE                   0                            80101600
          348  AN                          0                            80101700
          502  AND                          2                           80101800
          210  APPLY                       0                            80101900
          484  ARCTAN                       5                           80102000
          338  ARE                         0                            80102100
          270  AREA                        0                            80102200
          270  AREAS                       0                            80102300
          704  ASCENDING                   0                            80102400
          263  ASSIGN                      0                            80102500
          503  AT                          0                            80102600
          103  AUTHOR                      0                            80102700
          503  BEFORE                      0                            80102800
          351  BEGINNING                   0                            80102900
          349  BEGINNING-FILE-LABEL         9                           80103000
          350  BEGINNING-TAPE-LABEL         9                           80103100
          103  BITS                        0                            80103200
          252  B-5000                      0                            80103300
          252  B-5500                      0                            80103400
          352  BLANK                        3                           80103500
          637  BLOCK                       0                            80103600
          494  BLOCK-COUNT                  9                           80103700
          507  BY                          0                            80103800
          353  BZ                          0                            80103900
          278  CARD-PUNCH                   4                           80104000
          279  CARD-READER                  4                           80104100
          279  CARD-READERS                 4                           80104200
          640  CHANNEL                      4                           80104300
          258  CHARACTER                   0                            80104400
          258  CHARACTERS                  0                            80104500
          354  CHECK                       0                            80104600
          355  CL                          0                            80104700
          355  CLASS                       0                            80104800
          103  CLOCK-UNITS                  9                           80104900
          904  CLOSE                       0                            80105000
          356  CMP                         0                            80105100
          570  CMP-1                       0                            80105200
          103  COBOL                       0                            80105300
          356  COMPUTATIONAL               0                            80105400
          570  COMPUTATIONAL-1             0                            80105500
          905  COMPUTE                     0                            80105600
          201  CONFIGURATION               0                            80105700
          346  CONSTANT                    0                            80105800
          337  CONTAINS                    0                            80105900
          103  CONTROL                     0                            80106000
          228  CONVERSION                  0                            80106100
          253  COPY                        0                            80106200
          508  CORRESPONDING               0                            80106300
          483  COS                          5                           80106400
          354  CP                          0                            80106500
          491  CREATION-DATE                9                           80106600
          492  CYCLE                        9                           80106700
          345  DATA                        0                            80106800
          710  DATE-COMPILED               0                            80106900
          491  DATE-WRITTEN                 9                           80107000
          509  DECLARATIVES                0                            80107100
          906  DEFINE                      0                            80107200
          359  DEPENDING                   0                            80107300
          705  DESCENDING                  0                            80107400
          413  DIAGNOSTIC                  0                            80107500
          360  DIGIT                       0                            80107600
          360  DIGITS                      0                            80107700
          220  DISK                        0                            80107800
          907  DISPLAY                     0                            80107900
          826  DIV                          6                           80107950
          908  DIVIDE                      0                            80108000
          823  DIVIDED                      6                           80108100
          280  DIVISION                    0                            80108200
          361  DOLLAR                      0                            80108300
          707  DRUM                         4                           80108400
          281  DUMP                        0                            80108500
          511  ELSE                        0                            80108600
          512  END                         0                            80108700
          364  END-OF-FILE                 0                            80108800
          718  END-OF-JOB                  0                            80108900
          365  END-OF-TAPE                 0                            80109000
          366  ENDING                      0                            80109100
          362  ENDING-FILE-LABEL            9                           80109200
          363  ENDING-TAPE-LABEL            9                           80109300
          103  ENTER                       0                            80109400
          213  ENVIRONMENT                 0                            80109500
          802  EQUAL                        8                           80109600
          802  EQUALS                       8                           80109700
          515  ERROR                       0                            80109800
          400  EVERY                       0                            80109900
          909  EXAMINE                     0                            80110000
          805  EXCEEDS                      8                           80110100
          925  EXIT                        0                            80110200
          486  EXP                          5                           80110300
          824  EXPONENTIATED                6                           80110400
          303  FD                          0                            80110500
          332  FILE                        0                            80110600
          204  FILE-CONTROL                0                            80110700
          229  FILE-LIMIT                  0                            80110800
          229  FILE-LIMITS                 0                            80110900
          367  FILLER                      0                            80111000
          518  FIRST                       0                            80111100
          368  FLOAT                       0                            80111200
          330  FOR                         0                            80111300
          519  FORMAT                      0                            80111400
          335  FROM                        0                            80111500
          369  FS                          0                            80111600
          520  GIVING                      0                            80111700
          926  GO                          0                            80111800
          805  GREATER                      8                           80111900
          370  HASHED                      0                            80112000
          522  HIGH-VALUE                   3                           80112100
          522  HIGH-VALUES                  3                           80112200
          101  ID                          0                            80112300
          101  IDENTIFICATION              0                            80112400
          910  IF                          0                            80112500
          266  I-O                         0                            80112600
          209  I-O-CONTROL                 0                            80112700
          341  IN                          0                            80112800
          911  INCLUDE                     0                            80112900
          524  INPUT                       0                            80113000
          266  INPUT-OUTPUT                0                            80113100
          103  INSTALLATION                 9                           80113200
          523  INTO                        0                            80113300
          231  INVALID                     0                            80113400
          338  IS                          0                            80113500
          371  JS                          0                            80113600
          371  JUSTIFIED                   0                            80113700
          706  KEY                         0                            80113800
          282  KEYBOARD                     4                           80113900
          305  LABEL                       0                            80114000
          525  LEADING                     0                            80114100
          372  LEAVING                     0                            80114200
          373  LEFT                        0                            80114300
          800  LESS                         8                           80114400
          342  LIBRARY                     0                            80114500
          374  LINES                       0                            80114600
          485  LN                           5                           80114700
          382  LOCATION                    0                            80114800
          527  LOCK                        0                            80114900
          528  LOWER-BOUND                  3                           80115000
          528  LOWER-BOUNDS                 3                           80115100
          528  LOW-VALUE                    3                           80115200
          528  LOW-VALUES                   3                           80115300
          375  LP                          0                            80115400
          224  MD                          0                            80115500
          215  MEMORY                      0                            80115600
          376  MEMORY-DUMP                 0                            80115700
          103  MEMORY-DUMP-KEY             0                            80115800
          283  MESSAGE-PRINTER              4                           80115900
          641  MFID                        0                            80116000
          821  MINUS                        6                           80116100
          825  MOD                          6                           80116200
          331  MODE                        0                            80116300
          259  MODULES                     0                            80116400
          913  MONITOR                     0                            80116500
          914  MOVE                        0                            80116600
          206  MULTIPLE                    0                            80116700
          822  MULTIPLIED                   6                           80116800
          915  MULTIPLY                    0                            80116900
          807  NEGATIVE                     6                           80117000
          531  NEXT                        0                            80117100
          268  NO                          0                            80117200
          103  NO-MEMORY-DUMP              0                            80117300
          716  NON-STANDARD                0                            80117400
          533  NOT                          8                           80117500
          927  NOTE                        0                            80117600
          378  NUMERIC                      8                           80117700
          216  OBJECT-COMPUTER             0                            80117800
          103  OBJECT-PROGRAM              0                            80117900
          379  OC                          0                            80118000
          379  OCCURS                      0                            80118100
          343  OF                          0                            80118200
          285  OFF                         0                            80118300
          340  OMITTED                     0                            80118400
          271  ON                          0                            80118500
          916  OPEN                        0                            80118600
          217  OPTIONAL                    0                            80118700
          534  OR                           2                           80118800
          511  OTHERWISE                   0                            80118900
          535  OUTPUT                      0                            80119000
          773  PAPER-TAPE-PUNCH             4                           80119100
          772  PAPER-TAPE-READER            4                           80119200
          381  PC                          0                            80119300
          917  PERFORM                     0                            80119400
          381  PICTURE                     0                            80119500
          495  PHYSICAL-TAPE-NUMBER         9                           80119550
          382  PLACES                      0                            80119600
          820  PLUS                         6                           80119700
          382  POINT                       0                            80119800
          537  POSITION                    0                            80119900
          806  POSITIVE                     8                           80120000
          302  PREPARED                    0                            80120100
          288  PRINTER                      4                           80120200
          288  PRINTERS                     4                           80120300
          208  PRIORITY                    0                            80120400
          539  PROCEDURE                   0                            80120500
          540  PROCEED                     0                            80120600
          715  PROGRAM-ID                  0                            80120700
          354  PROTECT                     0                            80120800
          384  PT                          0                            80120900
          278  PUNCH                        4                           80121000
          545  PURGE                       0                            80121100
          493  PURGE-DATE                   9                           80121200
          541  QUOTE                        3                           80121300
          226  RANDOM                      0                            80121400
          386  RANGE                       0                            80121500
          918  READ                        0                            80121600
          279  READER                       4                           80121700
          279  READERS                      4                           80121800
          336  RECORD                      0                            80121900
          387  RECORD-COUNT                 9                           80122000
          304  RECORDING                   0                            80122100
          336  RECORDS                     0                            80122200
          388  REDEFINES                   0                            80122300
          267  REEL                        0                            80122400
          390  REEL-NUMBER                 0                            80122500
          920  RELEASE                     0                            80122600
          103  REMARKS                     0                            80122700
          389  RENAMES                     0                            80122800
          293  RENAMING                    0                            80122900
          546  REPLACING                   0                            80122950
          211  RERUN                       0                            80123000
          207  RESERVE                     0                            80123100
          703  RETURN                      0                            80123200
          544  REVERSED                    0                            80123300
          547  REWIND                      0                            80123400
          386  RG                          0                            80123500
          391  RIGHT                       0                            80123600
          547  ROUNDED                     0                            80123700
          548  RUN                         0                            80123800
          294  SAME                        0                            80123900
          412  SAVE-FACTOR                  9                           80124000
          402  SD                          0                            80124100
          251  SECTION                      1                           80124200
          103  SECURITY                    0                            80124300
          221  SEEK                        0                            80124400
          230  SEGMENT                     0                            80124500
          202  SEGMENT-LIMIT               0                            80124600
          230  SEGMENTS                    0                            80124700
          205  SELECT                      0                            80124800
          549  SENTENCE                    0                            80124900
          392  SENTINEL                     9                           80125000
          393  SEQUENCED                   0                            80125100
          225  SEQUENTIAL                  0                            80125200
          394  SIGN                         5                           80125300
          394  SIGNED                       5                           80125400
          482  SIN                          5                           80125500
          397  SIZE                        0                            80125600
          394  SN                           5                           80125700
          919  SORT                        0                            80125800
          717  SORT-TAPES                  0                            80125900
          214  SOURCE-COMPUTER             0                            80126000
          550  SPACE                        3                           80126100
          550  SPACES                       3                           80126200
          203  SPECIAL-NAMES               0                            80126300
          481  SQRT                         5                           80126400
          291  STANDARD                    0                            80126500
          103  STATUS                      0                            80126600
          921  STOP                        0                            80126700
          922  SUBTRACT                    0                            80126800
          103  SUPERVISOR                  0                            80126900
          395  SUPPRESS                    0                            80127000
          396  SY                          0                            80127100
          223  SYMBOLIC                    0                            80127200
          396  SYNCHRONIZED                0                            80127300
          397  SZ                          0                            80127400
          000  TALLY        (SPECIAL REG)  0                            80127500
          551  TALLYING                    0                            80127600
          398  TAPE                         4                           80127700
          398  TAPES                        4                           80127800
          708  TECHNIQUE-A                 0                            80127900
          712  TECHNIQUE-B                 0                            80128000
          713  TECHNIQUE-C                 0                            80128100
          233  TECHNIQUE-P                 0                            80128200
          103  TEST-PATTERN                0                            80128300
          338  THAN                        0                            80128400
          338  THEN                        0                            80128500
          261  THROUGH                     0                            80128600
          261  THRU                        0                            80128700
          554  TIMES                        6                           80128800
          264  TO                          0                            80128900
          000  TODAYS-DATE  (SPECIAL REG)  0                            80129000
          803  UNEQUAL                      8                           80129100
          232  UNLOCK                      0                            80129200
          555  UNTIL                       0                            80129300
          557  UPON                        0                            80129400
          522  UPPER-BOUND                  3                           80129500
          522  UPPER-BOUNDS                 3                           80129600
          558  USAGE                       0                            80129700
          923  USE                         0                            80129800
          560  USING                       0                            80129900
          306  VA                          0                            80130000
          306  VALUE                       0                            80130100
          306  VALUES                      0                            80130200
          561  VARYING                     0                            80130300
          352  WHEN                        0                            80130400
          290  WITH                        0                            80130500
          257  WORDS                       0                            80130600
          383  WORKING-STORAGE             0                            80130700
          924  WRITE                       0                            80130800
          344  ZERO                         3                           80130900
          344  ZEROES                       3                           80131000
          344  ZEROS                        3                           80131100
          358  ZS                          0                            80131200
          822  *                            6                           80131300
          456  )                           0                            80131400
          801  {                            8                           80131500
          821  -                            6                           80131600
          823  /                            6                           80131700
          338  ,                           0                            80131800
          802  =                            8                           80131900
          805  >                            8                           80132000
          804  }                            8                           80132100
          820  +                            6                           80132200
          471  |                           0                            80132300
          803  !                            8                           80132400
          451  (                           0                            80132500
          800  <                            8                           80132600
          453  &                           0                            80132700
          463  ]                           0                            80132800
          450  [                           0                            80132900
          454  $                           0                            80133000
          461  %                           0                            80133100
          464  "                           0                            80133200
          465  #                           0                            80133300
          466  @                           0                            80133400
          467  :                           0                            80133500
          473  .                            7                           80133600
6.02   NUMERIC ORDER BY KEY                                             80200000
          KEY  RESERVED WORD           CATAGORY                         80200200
          101  ID                          0                            80200300
          101  IDENTIFICATION              0                            80200400
          103  AUTHOR                      0                            80200500
          103  BITS                        0                            80200600
          103  CLOCK-UNITS                  9                           80200700
          103  COBOL                       0                            80200800
          103  CONTROL                     0                            80200900
          103  ENTER                       0                            80201000
          103  INSTALLATION                 9                           80201100
          103  MEMORY-DUMP-KEY             0                            80201200
          103  NO-MEMORY-DUMP              0                            80201300
          103  OBJECT-PROGRAM              0                            80201400
          103  REMARKS                     0                            80201500
          103  SECURITY                    0                            80201600
          103  STATUS                      0                            80201700
          103  SUPERVISOR                  0                            80201800
          103  TEST-PATTERN                0                            80201900
          201  CONFIGURATION               0                            80202000
          202  SEGMENT-LIMIT               0                            80202100
          203  SPECIAL-NAMES               0                            80202200
          204  FILE-CONTROL                0                            80202300
          205  SELECT                      0                            80202400
          206  MULTIPLE                    0                            80202500
          207  RESERVE                     0                            80202600
          208  PRIORITY                    0                            80202700
          209  I-O-CONTROL                 0                            80202800
          210  APPLY                       0                            80202900
          211  RERUN                       0                            80203000
          213  ENVIRONMENT                 0                            80203100
          214  SOURCE-COMPUTER             0                            80203200
          215  MEMORY                      0                            80203300
          216  OBJECT-COMPUTER             0                            80203400
          217  OPTIONAL                    0                            80203500
          220  DISK                        0                            80203600
          221  SEEK                        0                            80203700
          222  ACTUAL                      0                            80203800
          223  SYMBOLIC                    0                            80203900
          224  MD                          0                            80204000
          225  SEQUENTIAL                  0                            80204100
          226  RANDOM                      0                            80204200
          227  ACCESS                      0                            80204300
          228  CONVERSION                  0                            80204400
          229  FILE-LIMIT                  0                            80204500
          229  FILE-LIMITS                 0                            80204600
          230  SEGMENT                     0                            80204700
          230  SEGMENTS                    0                            80204800
          231  INVALID                     0                            80204900
          232  UNLOCK                      0                            80205000
          233  TECHNIQUE-P                 0                            80205100
          251  SECTION                      1                           80205200
          252  B-5000                      0                            80205300
          252  B-5500                      0                            80205400
          253  COPY                        0                            80205500
          257  WORDS                       0                            80205600
          258  CHARACTER                   0                            80205700
          258  CHARACTERS                  0                            80205800
          259  MODULES                     0                            80205900
          260  ADDRESS                     0                            80206000
          261  THROUGH                     0                            80206100
          261  THRU                        0                            80206200
          263  ASSIGN                      0                            80206300
          264  TO                          0                            80206400
          266  INPUT-OUTPUT                0                            80206500
          266  I-O                         0                            80206600
          267  REEL                        0                            80206700
          268  NO                          0                            80206800
          269  ALTERNATE                   0                            80206900
          270  AREA                        0                            80207000
          270  AREAS                       0                            80207100
          271  ON                          0                            80207200
          278  PUNCH                        4                           80207300
          278  CARD-PUNCH                   4                           80207400
          279  CARD-READER                  4                           80207500
          279  CARD-READERS                 4                           80207600
          279  READER                       4                           80207700
          279  READERS                      4                           80207800
          280  DIVISION                    0                            80207900
          281  DUMP                        0                            80208000
          282  KEYBOARD                     4                           80208100
          283  MESSAGE-PRINTER              4                           80208200
          285  OFF                         0                            80208300
          288  PRINTER                      4                           80208400
          288  PRINTERS                     4                           80208500
          290  WITH                        0                            80208600
          291  STANDARD                    0                            80208700
          293  RENAMING                    0                            80208800
          294  SAME                        0                            80208900
          302  PREPARED                    0                            80209000
          303  FD                          0                            80209100
          304  RECORDING                   0                            80209200
          305  LABEL                       0                            80209300
          306  VA                          0                            80209400
          306  VALUE                       0                            80209500
          306  VALUES                      0                            80209600
          330  FOR                         0                            80209700
          331  MODE                        0                            80209800
          332  FILE                        0                            80209900
          333  ABOUT                       0                            80210000
          335  FROM                        0                            80210100
          336  RECORD                      0                            80210200
          336  RECORDS                     0                            80210300
          337  CONTAINS                    0                            80210400
          338  ARE                         0                            80210500
          338  IS                          0                            80210600
          338  THAN                        0                            80210700
          338  THEN                        0                            80210800
          338  ,                           0                            80210900
          340  OMITTED                     0                            80211000
          341  IN                          0                            80211100
          342  LIBRARY                     0                            80211200
          343  OF                          0                            80211300
          344  ZERO                         3                           80211400
          344  ZEROS                        3                           80211500
          344  ZEROES                       3                           80211600
          345  DATA                        0                            80211700
          346  CONSTANT                    0                            80211800
          347  ALPHABETIC                   8                           80211900
          348  ALPHANUMERIC                0                            80212000
          348  AN                          0                            80212100
          349  BEGINNING-FILE-LABEL         9                           80212200
          350  BEGINNING-TAPE-LABEL         9                           80212300
          351  BEGINNING                   0                            80212400
          352  BLANK                        3                           80212500
          352  WHEN                        0                            80212600
          353  BZ                          0                            80212700
          354  CHECK                       0                            80212800
          354  CP                          0                            80212900
          354  PROTECT                     0                            80213000
          355  CL                          0                            80213100
          355  CLASS                       0                            80213200
          356  COMPUTATIONAL               0                            80213300
          356  CMP                         0                            80213400
          358  ZS                          0                            80213500
          359  DEPENDING                   0                            80213600
          360  DIGIT                       0                            80213700
          360  DIGITS                      0                            80213800
          361  DOLLAR                      0                            80213900
          362  ENDING-FILE-LABEL            9                           80214000
          363  ENDING-TAPE-LABEL            9                           80214100
          364  END-OF-FILE                 0                            80214200
          365  END-OF-TAPE                 0                            80214300
          366  ENDING                      0                            80214400
          367  FILLER                      0                            80214500
          368  FLOAT                       0                            80214600
          369  FS                          0                            80214700
          370  HASHED                      0                            80214800
          371  JS                          0                            80214900
          371  JUSTIFIED                   0                            80215000
          372  LEAVING                     0                            80215100
          373  LEFT                        0                            80215200
          374  LINES                       0                            80215300
          375  LP                          0                            80215400
          376  MEMORY-DUMP                 0                            80215500
          378  NUMERIC                      8                           80215600
          379  OC                          0                            80215700
          379  OCCURS                      0                            80215800
          381  PICTURE                     0                            80215900
          381  PC                          0                            80216000
          382  LOCATION                    0                            80216100
          382  PLACES                      0                            80216200
          382  POINT                       0                            80216300
          383  WORKING-STORAGE             0                            80216400
          384  PT                          0                            80216500
          386  RANGE                       0                            80216600
          386  RG                          0                            80216700
          387  RECORD-COUNT                 9                           80216800
          388  REDEFINES                   0                            80216900
          389  RENAMES                     0                            80217000
          390  REEL-NUMBER                 0                            80217100
          391  RIGHT                       0                            80217200
          392  SENTINEL                     9                           80217300
          393  SEQUENCED                   0                            80217400
          394  SIGN                         5                           80217500
          394  SIGNED                       5                           80217600
          394  SN                           5                           80217700
          395  SUPPRESS                    0                            80217800
          396  SY                          0                            80217900
          396  SYNCHRONIZED                0                            80218000
          397  SIZE                        0                            80218100
          397  SZ                          0                            80218200
          398  TAPE                         4                           80218300
          398  TAPES                        4                           80218400
          400  EVERY                       0                            80218500
          402  SD                          0                            80218600
          412  SAVE-FACTOR                  9                           80218700
          413  DIAGNOSTIC                  0                            80218800
          450  [                           0                            80218900
          451  (                           0                            80219000
          453  &                           0                            80219100
          454  $                           0                            80219200
          456  )                           0                            80219300
          461  %                           0                            80219400
          463  ]                           0                            80219500
          464  "                           0                            80219600
          465  #                           0                            80219700
          466  @                           0                            80219800
          467  :                           0                            80219900
          471  |                           0                            80220000
          473  .                            7                           80220100
          480  ABS                          5                           80220200
          481  SQRT                         5                           80220300
          482  SIN                          5                           80220400
          483  COS                          5                           80220500
          484  ARCTAN                       5                           80220600
          485  LN                           5                           80220700
          486  EXP                          5                           80220800
          491  CREATION-DATE                9                           80220900
          491  DATE-WRITTEN                 9                           80221000
          492  CYCLE                        9                           80221100
          493  PURGE-DATE                   9                           80221200
          494  BLOCK-COUNT                  9                           80221300
          495  PHYSICAL-TAPE-NUMBER         9                           80221350
          501  ALL                         0                            80221400
          502  AND                          2                           80221500
          503  AT                          0                            80221600
          503  BEFORE                      0                            80221700
          505  ADVANCING                   0                            80221800
          506  AFTER                       0                            80221900
          507  BY                          0                            80222000
          508  CORRESPONDING               0                            80222100
          509  DECLARATIVES                0                            80222200
          511  ELSE                        0                            80222300
          511  OTHERWISE                   0                            80222400
          512  END                         0                            80222500
          515  ERROR                       0                            80222600
          518  FIRST                       0                            80222700
          519  FORMAT                      0                            80222800
          520  GIVING                      0                            80222900
          522  HIGH-VALUE                   3                           80223000
          522  HIGH-VALUES                  3                           80223100
          522  UPPER-BOUND                  3                           80223200
          522  UPPER-BOUNDS                 3                           80223300
          523  INTO                        0                            80223400
          524  INPUT                       0                            80223500
          525  LEADING                     0                            80223600
          527  LOCK                        0                            80223700
          528  LOWER-BOUND                  3                           80223800
          528  LOWER-BOUNDS                 3                           80223900
          528  LOW-VALUE                    3                           80224000
          528  LOW-VALUES                   3                           80224100
          531  NEXT                        0                            80224200
          533  NOT                          8                           80224300
          534  OR                           2                           80224400
          535  OUTPUT                      0                            80224500
          537  POSITION                    0                            80224600
          539  PROCEDURE                   0                            80224700
          540  PROCEED                     0                            80224800
          541  QUOTE                        3                           80224900
          544  REVERSED                    0                            80225000
          545  PURGE                       0                            80225100
          546  REPLACING                   0                            80225150
          547  REWIND                      0                            80225200
          547  ROUNDED                     0                            80225300
          548  RUN                         0                            80225400
          549  SENTENCE                    0                            80225500
          550  SPACE                        3                           80225600
          550  SPACES                       3                           80225700
          551  TALLYING                    0                            80225800
          554  TIMES                        6                           80225900
          555  UNTIL                       0                            80226000
          557  UPON                        0                            80226100
          558  USAGE                       0                            80226200
          560  USING                       0                            80226300
          561  VARYING                     0                            80226400
          570  CMP-1                       0                            80226500
          570  COMPUTATIONAL-1             0                            80226600
          637  BLOCK                       0                            80226700
          640  CHANNEL                      4                           80226800
          641  MFID                        0                            80226900
          703  RETURN                      0                            80227000
          704  ASCENDING                   0                            80227100
          705  DESCENDING                  0                            80227200
          706  KEY                         0                            80227300
          707  DRUM                         4                           80227400
          708  TECHNIQUE-A                 0                            80227500
          710  DATE-COMPILED               0                            80227600
          712  TECHNIQUE-B                 0                            80227700
          713  TECHNIQUE-C                 0                            80227800
          715  PROGRAM-ID                  0                            80227900
          716  NON-STANDARD                0                            80228000
          717  SORT-TAPES                  0                            80228100
          718  END-OF-JOB                  0                            80228200
          772  PAPER-TAPE-READER            4                           80228300
          773  PAPER-TAPE-PUNCH             4                           80228400
          800  LESS                         8                           80228500
          800  <                            8                           80228600
          801  {                            8                           80228700
          802  EQUAL                        8                           80228800
          802  EQUALS                       8                           80228900
          802  =                            8                           80229000
          803  UNEQUAL                      8                           80229100
          803  !                            8                           80229200
          804  }                            8                           80229300
          805  >                            8                           80229400
          805  EXCEEDS                      8                           80229500
          805  GREATER                      8                           80229600
          806  POSITIVE                     8                           80229700
          807  NEGATIVE                     6                           80229800
          820  PLUS                         6                           80229900
          820  +                            6                           80230000
          821  MINUS                        6                           80230100
          821  -                            6                           80230200
          822  MULTIPLIED                   6                           80230300
          822  *                            6                           80230400
          823  DIVIDED                      6                           80230500
          823  /                            6                           80230600
          824  EXPONENTIATED                6                           80230700
          825  MOD                          6                           80230800
          826  DIV                          6                           80230850
          901  ACCEPT                      0                            80230900
          902  ADD                         0                            80231000
          903  ALTER                       0                            80231100
          904  CLOSE                       0                            80231200
          905  COMPUTE                     0                            80231300
          906  DEFINE                      0                            80231400
          907  DISPLAY                     0                            80231500
          908  DIVIDE                      0                            80231600
          909  EXAMINE                     0                            80231700
          910  IF                          0                            80231800
          911  INCLUDE                     0                            80231900
          913  MONITOR                     0                            80232000
          914  MOVE                        0                            80232100
          915  MULTIPLY                    0                            80232200
          916  OPEN                        0                            80232300
          917  PERFORM                     0                            80232400
          918  READ                        0                            80232500
          919  SORT                        0                            80232600
          920  RELEASE                     0                            80232700
          921  STOP                        0                            80232800
          922  SUBTRACT                    0                            80232900
          923  USE                         0                            80233000
          924  WRITE                       0                            80233100
          925  EXIT                        0                            80233200
          926  GO                          0                            80233300
          927  NOTE                        0                            80233400
          000  TALLY        (SPECIAL REG)  0                            80233500
          000  TODAYS-DATE  (SPECIAL REG)  0                            80233600
         ;  END.                                                        99990000
END;END.        LAST CARD ON 0CRDING TAPE                               99999999
