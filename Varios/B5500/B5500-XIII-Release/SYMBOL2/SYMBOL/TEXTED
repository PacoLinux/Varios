TEXT EDITOR MARK IX. 0   BURROUGHS CORPORATION DETROIT, MICHIGAN        00000000
                           11/16/68                                     00001000
BEGIN                                                                   00002000
DEFINE                                                                  00003000
    MAXFIL=20#,                                                         00004000
    MAXMIX=10#,                                                         00005000
    BUFINP = 2|MAXMIX#,                                                 00005500
    BUFSIZ=30#,                                                         00006000
    SYMSIZ=8#,                                                          00007000
    CHUNKS=1#,                                                          00008000
    RCSBLK=6#,                                                          00009000
    WDSBLK=60#,                                                         00010000
    KRSOUT=35#,                                                         00011000
    WDSOUT=30#,                                                         00012000
    RFL0=50#,                                                           00013000
    RBL0=55#,                                                           00014000
    RFL9=54#,                                                           00015000
    RBL9=59#,                                                           00016000
    MAXALL=100#,                                                        00017000
    SEGPAG=500#,                                                        00018000
    TM=5|3600#,                                                         00018500
    NOBUF=3#,                                                           00019000
    IRSZ=5#;                                                            00020000
    BOOLEAN USEFUL,HELLO,GOODBYE;                                       00021000
    INTEGER RL,BL,RB,SB,RC;                                             00022000
    INTEGER USER;                                                       00023000
    REAL ARRAY LINE,LONE,RONE[0:BUFSIZ];                                00024000
    INTEGER OLDSEGNO;                                                   00024500
    BOOLEAN NUSER;                                                      00025000
    BOOLEAN FRST;                                                       00025500
    BOOLEAN NUSEQ;                                                      00026000
    BOOLEAN RESTRT;                                                     00026500
    INTEGER RONI;                                                       00027000
    INTEGER RESTIMEI,RESTIME;                                           00027500
    INTEGER UFILE;                                                      00028000
    INTEGER CLASS;                                                      00029000
    INTEGER KEY;                                                        00030000
    REAL ARRAY DOCT[0:63];                                              00031000
    REAL ARRAY DACT[0:63];                                              00031500
    REAL    ARRAY DICT[0:63];                                           00032000
    INTEGER ARRAY AVL,                                                  00033000
                  AVB,                                                  00034000
                  AVE[0:100];                                           00035000
                                                                        00036000
    FILE EDITORS DISK RANDOM "EDITORS""TEXTS"(1,WDSBLK);                00037000
    INTEGER BUF,                                                        00038000
            RCN,                                                        00039000
            RCI,                                                        00040000
            RFL,                                                        00041000
            RBL;                                                        00042000
    INTEGER ARRAY TEXT[0:NOBUF,0:RBL9];                                 00043000
    INTEGER ARRAY BUFL[0:NOBUF];                                        00044000
    INTEGER ARRAY SEG[0:NOBUF];                                         00045000
    BOOLEAN ARRAY SAV[0:NOBUF];                                         00046000
    BOOLEAN ARRAY UPD[0:NOBUF];                                         00047000
                                                                        00048000
    REAL ARRAY WORD[0:SYMSIZ];                                          00049000
    INTEGER LENGTH;                                                     00050000
    INTEGER START;                                                      00051000
    BOOLEAN MORE;                                                       00052000
    BOOLEAN SPEC;                                                       00053000
    BOOLEAN ALFA;                                                       00054000
    BOOLEAN SECURETOG;                                                  00054500
    INTEGER BLANKS;                                                     00055000
                                                                        00056000
    BOOLEAN ARRAY USVAL[0:MAXMIX];                                      00057000
    REAL ARRAY USERTUB[0:MAXMIX];                                       00057500
    REAL ARRAY USSTA[0:MAXMIX];                                         00058000
    REAL ARRAY USERLOG[0:MAXMIX];                                       00058500
    REAL    ARRAY USQU1[0:MAXMIX];                                      00059000
    REAL ARRAY AR[0:BUFINP];                                            00059500
    REAL    ARRAY USQU2[0:MAXMIX];                                      00060000
    REAL    ARRAY USQU3[0:MAXMIX];                                      00061000
    REAL    ARRAY USQU4[0:MAXMIX];                                      00062000
    BOOLEAN ARRAY TOP[0:MAXMIX];                                        00062500
    INTEGER ARRAY USFIL[0:MAXMIX];                                      00063000
    BOOLEAN ARRAY USBSY[0:MAXMIX];                                      00064000
    REAL    ARRAY USBUF[0:MAXMIX,0:BUFSIZ];                             00065000
    REAL    ARRAY UDISP[0:MAXMIX];                                      00066000
    BOOLEAN ARRAY RESTARTSW[0:MAXMIX];                                  00066500
                                                                        00067000
    INTEGER ARRAY UFUSR[0:MAXFIL];                                      00068000
    INTEGER ARRAY UFNXT[0:MAXFIL];                                      00069000
    BOOLEAN ARRAY UFVAL[0:MAXFIL];                                      00070000
    INTEGER ARRAY UFTYP[0:MAXFIL];                                      00071000
    INTEGER ARRAY UFSEQ[0:MAXFIL];                                      00072000
    BOOLEAN ARRAY UFSVQ[0:MAXFIL];                                      00072500
    INTEGER ARRAY UFSDQ[0:MAXFIL];                                      00073000
    BOOLEAN ARRAY UFBSY[0:MAXFIL];                                      00074000
    INTEGER ARRAY UFRCT[0:MAXFIL];                                      00075000
    BOOLEAN ARRAY UFOLD[0:MAXFIL];                                      00076000
    INTEGER ARRAY UFLNK[0:MAXFIL];                                      00077000
    REAL    ARRAY UFIDP,                                                00078000
                  UFIDS[0:MAXFIL];                                      00079000
    BOOLEAN NUFILE;                                                     00080000
                                                                        00081000
    ALPHA FILE OUT DAT0COM 14(5,5);                                     00082000
                                                                        00083000
    ALPHA FILE OUT DAT1COM 14(5,5);                                     00084000
                                                                        00085000
    ALPHA FILE OUT DAT2COM 14(5,5);                                     00086000
                                                                        00086130
    ALPHA FILE OUT DAT3COM 14(5,5);                                     00086135
                                                                        00086140
    ALPHA FILE OUT DAT4COM 14(5,5);                                     00086145
                                                                        00086150
    ALPHA FILE OUT DAT5COM 14(5,5);                                     00086155
                                                                        00086160
    ALPHA FILE OUT DAT6COM 14(5,5);                                     00086165
                                                                        00086170
    ALPHA FILE OUT DAT7COM 14(5,5);                                     00086175
                                                                        00086180
    ALPHA FILE OUT DAT8COM 14(5,5);                                     00086185
                                                                        00086190
    ALPHA FILE OUT DAT9COM 14(5,5);                                     00086195
                                                                        00086200
    ALPHA FILE OUT DAT10OM 14(5,5);                                     00086205
    ALPHA FILE IN NEWUSER 14(1,IRSZ);                                   00087000
    ALPHA FILE OUT MULUSER 14(1,5);                                     00087500
    ALPHA FILE IN DATACIM 14(BUFINP,IRSZ);                              00088000
    SWITCH FILE DATACOM:=DAT0COM,                                       00090000
                         DAT1COM,                                       00091000
    DAT2COM,                                                            00092000
    DAT3COM,                                                            00092030
    DAT4COM,                                                            00092040
    DAT5COM,                                                            00092050
    DAT6COM,                                                            00092060
    DAT7COM,                                                            00092070
    DAT8COM,                                                            00092080
    DAT9COM,                                                            00092090
    DAT10OM;                                                            00092100
    BOOLEAN ERRED;                                                      00093000
    INTEGER LONI;                                                       00094000
    DEFINE NOFILES=2#;                                                  00094010
    BOOLEAN ARRAY FILOPN[0:NOFILES];                                    00094020
    INTEGER ARRAY FILREC,                                               00094030
                 FILBLK[0:NOFILES];                                     00094040
     FILE IN F0 DISK RANDOM "F""0"(1,15,30);                            00094050
     FILE IN F1 DISK RANDOM "F""1"(1,15,30);                            00094060
     FILE IN F2 DISK RANDOM "F""2"(1,15,30);                            00094070
    SWITCH FILE SWFI:=F0,F1,F2;                                         00094075
    PROCEDURE FETCH(RECNO); VALUE RECNO; INTEGER RECNO; FORWARD;        00094077
PROCEDURE OVRLA(RECNO); VALUE RECNO; INTEGER RECNO; FORWARD;            00094078
    BOOLEAN PROCEDURE OPNFIL(WHICH);                                    00094080
      INTEGER WHICH;                                                    00094090
    BEGIN                                                               00094100
      INTEGER I; BOOLEAN B; B:=FALSE;                                   00094110
      FOR I:=0 STEP 1 UNTIL NOFILES DO                                  00094120
        IF NOT B THEN IF B:=NOT FILOPN[I] THEN                          00094130
          FILOPN[WHICH:=I]:=TRUE;                                       00094140
        OPNFIL:=B;                                                      00094150
    END OPNFIL;                                                         00094160
                                                                        00095000
    FILE IN FILD DISK SERIAL "USERS""OLDFILE"(2,10,30);                 00096000
FILE OUT FOLD DISK SERIAL[20:2400] "USERS" "NEWFILE" (2,10,30,SAVE 5);  00097000
                                                                        00098000
                                                                        00099000
BOOLEAN STREAM PROCEDURE CEQ(ONE,TWO);                                  00100000
BEGIN                                                                   00101000
    TALLY:=0; SI:=ONE; DI:=TWO; IF 8 SC=DC THEN TALLY:=1; CEQ:=TALLY;   00102000
END CEQ;                                                                00103000
STREAM PROCEDURE OCV(OCTL,CHRS);                                        00104000
BEGIN                                                                   00105000
    SI:=OCTL; DI:=CHRS; DS:=8 DEC;                                      00106000
END OCV;                                                                00107000
                                                                        00108000
INTEGER STREAM PROCEDURE ICV(CHRS);                                     00109000
BEGIN                                                                   00110000
    LOCAL NTGR;                                                         00111000
    BEGIN                                                               00112000
        SI:=CHRS; DI:=LOC NTGR; DS:=8 OCT;                              00113000
        SI:=LOC NTGR; DI:=LOC ICV; DS:=WDS;                             00114000
    END                                                                 00115000
END ICV;                                                                00116000
                                                                        00117000
STREAM PROCEDURE BLANKOUT(WRDS,WORD);                                   00118000
    VALUE WRDS;                                                         00119000
BEGIN                                                                   00120000
    DI:=WORD; DS:=8 LIT "        "; SI:=WORD; DS:=WRDS WDS;             00121000
END BLANKOUT;                                                           00122000
                                                                        00123000
STREAM PROCEDURE SOCV(WHAT);                                            00124000
BEGIN                                                                   00125000
    LOCAL CHRS;                                                         00126000
    BEGIN                                                               00127000
        SI:=WHAT; DI:=LOC CHRS; DS:=8 DEC;                              00128000
        SI:=LOC CHRS; DI:=WHAT; DS:=WDS;                                00129000
    END                                                                 00130000
END SOCV;                                                               00131000
STREAM PROCEDURE DOVE(SORC,DEST);                                       00132000
BEGIN                                                                   00133000
    LABEL XIT;                                                          00134000
    BEGIN                                                               00135000
                                                                        00136000
        SI:=SORC; DI:=DEST;                                             00137000
        9(8(IF SC="~" THEN JUMP OUT 2 TO XIT; DS:=CHR;););              00138000
    XIT:TALLY:=0;                                                       00139000
    END                                                                 00140000
END DOVE;                                                               00141000
                                                                        00142000
STREAM PROCEDURE MOVE(SORC,DEST,SCH,DCH,WRDS,CHRS);                     00143000
    VALUE SCH,DCH,WRDS,CHRS;                                            00144000
BEGIN                                                                   00145000
    SI:=SORC; SI:=SI+SCH; DI:=DEST; DI:=DI+DCH;                         00146000
    DS:=CHRS CHR; WRDS(DS:=8 CHR;);                                     00147000
END MOVE;                                                               00148000
                                                                        00149000
STREAM PROCEDURE WOVE(SORC,DEST,WRDS);                                  00150000
    VALUE WRDS;                                                         00151000
BEGIN                                                                   00152000
    SI:=SORC; DI:=DEST; DS:=WRDS WDS;                                   00153000
END WOVE;                                                               00154000
                                                                        00155000
                                                                        00156000
STREAM PROCEDURE ZEROUT(WRDS,DEST);                                     00157000
    VALUE WRDS;                                                         00158000
BEGIN                                                                   00159000
    DI:=DEST; DS:=8 LIT "00000000"; SI:=DEST; DS:=WRDS WDS;             00160000
END ZEROUT;                                                             00161000
                                                                        00162000
PROCEDURE BAKUPD(WHAT,WHERE);                                           00163000
    VALUE WHERE; INTEGER WHERE; REAL WHAT;                              00164000
BEGIN                                                                   00165000
    REAL ARRAY A[0:RBL9];                                               00166000
    BEGIN                                                               00167000
        READ(EDITORS[0],WDSBLK,A[*]);                                   00168000
        WOVE(WHAT,A[WHERE],1);                                          00169000
        WRITE(EDITORS[0],WDSBLK,A[*]);                                  00170000
    END                                                                 00171000
END BAKUPD;                                                             00172000
                                                                        00173000
                                                                        00174000
PROCEDURE RITE(CHRS);                                                   00175000
    VALUE CHRS; INTEGER CHRS;                                           00176000
BEGIN                                                                   00177000
    INTEGER I,D,M,E,N;                                                  00178000
    BEGIN                                                               00179000
        D:=LONI DIV 8; M:=LONI MOD 8; E:=CHRS DIV 8; N:=CHRS MOD 8;     00180000
        IF CHRS=0 THEN                                                  00181000
        BEGIN                                                           00182000
            I:=31;                                                      00183000
            MOVE(I,LONE[D],7,M,0,1);                                    00184000
        END                                                             00185000
        ELSE                                                            00186000
        BEGIN                                                           00187000
            MOVE(RONE[0],LONE[D],0,M,E,N);                              00188000
            LONI:=LONI+CHRS;                                            00189000
        END;                                                            00190000
    END                                                                 00191000
END RITE;                                                               00192000
                                                                        00193000
                                                                        00194000
PROCEDURE MESSG(ARR,MNO);                                               00195000
    VALUE MNO; INTEGER MNO;                                             00196000
    REAL ARRAY ARR[0];                                                  00196500
FORWARD;                                                                00197000
PROCEDURE MESSG(ARR,MNO);                                               00198000
    VALUE MNO; INTEGER MNO;                                             00199000
    REAL ARRAY ARR[0];                                                  00199500
BEGIN                                                                   00200000
    INTEGER D,E; REAL F;                                                00201000
    BEGIN                                                               00202000
        IF E:=(F:=ARR[MNO]).[6:6] NEQ 0 THEN BEGIN D:=RONI MOD 8;       00203000
            MOVE(F,RONE[RONI DIV 8],2,D,0,E); RONI:=RONI+E; END         00204000
        ELSE WHILE F:=F.[6:36] NEQ 0 DO MESSG(ARR,E:=F.[42:6]);         00205000
    END                                                                 00206000
END MESSG;                                                              00207000
                                                                        00208000
PROCEDURE ERROR(ENO);                                                   00209000
    VALUE ENO; INTEGER ENO;                                             00210000
BEGIN                                                                   00211000
    ERRED:=TRUE; RONI:=0; MESSG(DOCT,ENO); RITE(RONI);                  00212000
END ERROR;                                                              00213000
PROCEDURE REMFILS(USER); VALUE USER; INTEGER USER;                      00214000
BEGIN                                                                   00214100
    INTEGER I,J,K,L;                                                    00214200
    IF UFILE:=USFIL[USER]!0 THEN                                        00214300
    BEGIN                                                               00214400
        WHILE UFLNK[UFILE]!0 DO                                         00214500
        BEGIN                                                           00214600
            FETCH(L:=RCSBLK|(UFILE-1)+1);I:=TEXT[BUF,RFL];              00214700
            UFTYP[UFILE]:=TEXT[BUF,1]:=0; UPD [BUF]:=TRUE;              00214800
            WHILE NOT(I=L) DO                                           00214900
            BEGIN                                                       00215000
                FETCH(J:=I); I:=TEXT[BUF,RFL];OVRLA(J);                 00215100
            END;                                                        00215200
            K:=UFILE; UFILE:=UFLNK[UFILE]; UFLNK[K]:=0                  00215300
        END;                                                            00215400
        USFIL[USER]:=0                                                  00215500
    END                                                                 00215600
END;                                                                    00216000
PROCEDURE LOGOUT(USER); VALUE USER; INTEGER USER;                       00217000
BEGIN                                                                   00217050
    FORMAT THROUGH(X8,"{! FINISHED {!!!~");                             00217070
    LABEL OIMP;                                                         00217075
    WRITE(DATACOM[USER](USSTA[USER]),THROUGH)[OIMP:OIMP];               00217080
    OIMP: USVAL[USER]:=FALSE;                                           00218000
    BAKUPD(0,USER);                                                     00218050
    REMFILS(USER); USERLOG[USER]:=0;                                    00218055
    RELEASE(USSTA[USER]) END LOGOUT;                                    00218060
                                                                        00218070
                                                                        00219000
PROCEDURE LOGIN(USER); VALUE USER; INTEGER USER;                        00220000
BEGIN                                                                   00221000
    USVAL[USER]:= TRUE; BAKUPD(USERLOG[USER],USER);                     00222000
 END LOGIN;                                                             00223000
                                                                        00224000
BOOLEAN PROCEDURE WEBSTER(WORD);                                        00225000
    REAL ARRAY WORD[0];                                                 00226000
    BEGIN                                                               00227000
        BOOLEAN STREAM PROCEDURE LOOKUP(WORD,DICT,CLASS,KEY,LENGTH);    00228000
        BEGIN                                                           00229000
            LOCAL NTRYS,LGTH,LNGTH; LABEL DUN;                          00230000
            BEGIN                                                       00231000
                SI:=LENGTH; DI:=LOC LNGTH; DS:=WDS;                     00232000
                SI:=SI-2; IF SC!"0" THEN GO TO DUN;                     00233000
                SI:=DICT; DI:=LOC NTRYS; DS:=WDS;                       00234000
                NTRYS(DI:=LOC LNGTH; DI:=DI+7;                          00235000
                      IF SC=DC THEN                                     00236000
                      BEGIN                                             00237000
                          DI:=WORD;                                     00238000
                          IF LNGTH SC=DC THEN                           00239000
                          BEGIN                                         00240000
                              DI:=CLASS; DI:=DI+7; DS:=CHR;             00241000
                              DI:=KEY;   DI:=DI+7; DS:=CHR;             00242000
                              TALLY:=1; JUMP OUT TO DUN;                00243000
                          END;                                          00244000
                          SI:=SI+2;                                     00245000
                      END                                               00246000
                      ELSE                                              00247000
                      BEGIN                                             00248000
                          SI:=SI-1; DI:=LOC LGTH; DI:=DI+7; DS:=CHR;    00249000
                          SI:=SI+LGTH;                                  00250000
                          SI:=SI+2;                                     00251000
                      END;);                                            00252000
            DUN:LOOKUP:=TALLY;                                          00253000
        END                                                             00254000
    END LOOKUP;                                                         00255000
                                                                        00256000
    CLASS:=KEY:=0;                                                      00257000
        WEBSTER:=LOOKUP(WORD[0],DICT[0],CLASS,KEY,LENGTH);              00258000
END WEBSTER;                                                            00259000
                                                                        00260000
                                                                        00261000
BOOLEAN PROCEDURE SCAN;                                                 00262000
BEGIN                                                                   00263000
    BOOLEAN STREAM PROCEDURE ISOLATE                                    00264000
        (WORD,LINE,START,BLANKS,LENGTH,ALFA,SPEC);                      00265000
    BEGIN                                                               00266000
        LOCAL BLNK,LWD,KRS;                                             00267000
        LABEL BGN,TRN;                                                  00268000
        BEGIN                                                           00269000
            SI:=START; SI:=SI+6;                                        00270000
            DI:=LOC LWD; DI:=DI+7; DS:=CHR;                             00271000
            DI:=LOC KRS; DI:=DI+7; DS:=CHR;                             00272000
            SI:=LINE; LWD(2(SI:=SI+32;);); SI:=SI+KRS;                  00273000
        BGN:IF SC=" " THEN                                              00274000
            BEGIN                                                       00275000
                SI:=SI+1; TALLY:=TALLY+1; GO TO BGN;                    00276000
            END;                                                        00277000
            BLNK:=TALLY; TALLY:=0;                                      00278000
            DI:=WORD; LWD:=DI;                                          00279000
            IF SC=ALPHA THEN                                            00280000
            BEGIN                                                       00281000
            2(36(IF SC = ALPHA THEN                                     00282000
                BEGIN                                                   00283000
                    IF SC<"0" THEN                                      00284000
                    BEGIN                                               00285000
                        DI:=ALFA; DS:=8 LIT "00000001";                 00286000
                    END;                                                00287000
                    DI:=LWD; DS:=CHR; LWD:=DI;                          00288000
                    TALLY:=TALLY+1;                                     00289000
                END ELSE JUMP OUT 2 TO TRN));                           00290000
    TRN: KRS:=TALLY; TALLY:=1;                                          00291000
            END                                                         00292000
            ELSE                                                        00293000
            BEGIN                                                       00294000
                IF SC!"~" THEN                                          00295000
                BEGIN                                                   00296000
                    DI:=SPEC; DS:=8 LIT "00000001";                     00297000
                    DI:=LWD; DS:=CHR; TALLY:=1; KRS:=TALLY;             00298000
            END;END;                                                    00299000
            SI:=LOC BLNK; DI:=BLANKS; DS:=WDS;                          00300000
            SI:=LOC KRS; DI:=LENGTH; DS:=WDS;                           00301000
            ISOLATE:=TALLY;                                             00302000
        END                                                             00303000
    END ISOLATE;                                                        00304000
    BLANKOUT(SYMSIZ,WORD[0]); ALFA:=SPEC:=FALSE;                        00305000
    MORE:=ISOLATE(WORD[0],LINE[1],START,BLANKS,LENGTH,ALFA,SPEC);       00306000
    START:=START+BLANKS+LENGTH;                                         00307000
    SCAN:=MORE;                                                         00308000
END SCAN;                                                               00309000
                                                                        00310000
INTEGER PROCEDURE WHOISIT(L);                                           00311000
    VALUE L; REAL L;                                                    00312000
BEGIN                                                                   00312500
    INTEGER I,J,K,LINE;                                                 00313000
    REAL USERID;                                                        00314000
    LABEL DUN,OPIM;                                                     00315000
    FORMAT MUSER(X8,"{!USER CODE IN USE {!!!~");                        00315500
    BEGIN                                                               00316000
    K:=0; NUSER:=FALSE;                                                 00317000
    LINE:=0&L[9:9:9];                                                   00317200
    IF SECURETOG THEN                                                   00317500
         BEGIN                                                          00318000
            USERID:=STATUS(L);                                          00319000
            FOR I:=1 STEP 1 UNTIL MAXMIX DO                             00319500
                BEGIN                                                   00320000
                IF USERLOG[I]=USERID THEN                               00320500
                    BEGIN                                               00321000
                            J:=I; IF RESTARTSW[I] THEN                  00321500
                            BEGIN                                       00321600
                                SEEK(DATACIM(L)); RESTARTSW[I]:=FALSE;  00321700
                                USERTUB[I]:=LINE; GO TO DUN;            00321750
                            END;                                        00321800
                           IF USERTUB[I].[9:9] NEQ LINE.[9:9] THEN BEGIN00321900
             J:=MAXMIX+1;WRITE(MULUSER(L),MUSER)[OPIM:OPIM];            00321950
                            RELEASE(L) END; GO TO DUN;                  00321970
                    END;                                                00322000
                IF K=0 AND NOT USVAL[I] THEN K:=I;                      00322500
                END;                                                    00323000
            NUSER:=TRUE; USERLOG[J:=K]:=USERID; USERTUB[J]:=LINE;       00323500
         END                                                            00324000
    ELSE                                                                00324500
         BEGIN                                                          00325000
            LINE:=0&L [9:9:9];                                          00325500
            FOR I:=1 STEP 1 UNTIL MAXMIX DO                             00326000
                BEGIN                                                   00326500
                IF USERLOG[I].[9:9]=LINE.[9:9] THEN                     00327000
                    BEGIN                                               00327500
                        J:=I; GO TO DUN;                                00328000
                    END;                                                00328500
                IF K=0 AND NOT USVAL[I] THEN K:=I                       00329000
                END;                                                    00329500
            NUSER:=TRUE; USERLOG[J:=K]:=LINE                            00330000
         END;                                                           00330500
    OPIM: IF J GTR MAXMIX THEN RELEASE(L);                              00330700
    DUN: WHOISIT:=J;                                                    00331000
    END                                                                 00331500
END WHOISIT;                                                            00332000
                                                                        00333000
PROCEDURE FETCH(RECNO);                                                 00334000
    VALUE RECNO; INTEGER RECNO;                                         00335000
BEGIN                                                                   00336000
    INTEGER I,TEMP,SEGNO; LABEL XIT;                                    00337000
    BEGIN                                                               00338000
        IF RECNO>0 THEN                                                 00339000
        BEGIN                                                           00340000
            SEGNO:=1+RECNO DIV RCSBLK;                                  00341000
            FOR I:=0 STEP 1 UNTIL NOBUF DO                              00342000
            BEGIN                                                       00343000
                IF SEGNO=SEG[BUFL[I]] THEN                              00344000
                BEGIN                                                   00345000
                    BUF:=BUFL[I]; GO TO XIT;                            00346000
        END;END;END;                                                    00347000
        IF UPD[BUF:=BUFL[TEMP:=IF SAV[BUFL[0]] THEN 1 ELSE 0]] AND      00348000
           SEG[BUF]!0 THEN                                              00349000
            WRITE(EDITORS[SEG[BUF]],WDSBLK,TEXT[BUF,*]);                00350000
            IF SEG[BUF] GTR OLDSEGNO THEN BEGIN                         00350200
            WRITE(EDITORS[OLDSEGNO:=OLDSEGNO+SEGPAG],60,TEXT[0,*]);     00350600
            BAKUPD(OLDSEGNO,0);                                         00350700
            LOCK(EDITORS) END;                                          00350800
        I:=TEMP; WHILE I<NOBUF DO                                       00351000
        BEGIN                                                           00352000
            BUFL[I]:=BUFL[I+1]; I:=I+1;                                 00353000
        END;                                                            00354000
        SAV[BUFL[NOBUF]:=BUF]:=UPD[BUF]:=FALSE;                         00355000
        IF RECNO=0 THEN                                                 00356000
        BEGIN                                                           00357000
            ZEROUT(RBL9,TEXT[BUF,0]); SEG[BUF]:=0;                      00358000
        END                                                             00359000
        ELSE                                                            00360000
        BEGIN                                                           00361000
            READ(EDITORS[SEG[BUF]:=SEGNO],WDSBLK,TEXT[BUF,*]);          00362000
    XIT:    RCN:=(RECNO MOD RCSBLK)-1;                                  00363000
            RCI:=10|RCN;                                                00364000
            RFL:=RFL0+RCN;                                              00365000
            RBL:=RBL0+RCN;                                              00366000
        END;                                                            00367000
    END                                                                 00368000
END FETCH;                                                              00369000
                                                                        00370000
PROCEDURE OVRLA(REC);                                                   00371000
    VALUE REC;                                                          00372000
    INTEGER REC;                                                        00373000
BEGIN                                                                   00374000
    INTEGER I,J,K; BOOLEAN ZERO;                                        00375000
    BEGIN                                                               00376000
        FETCH(REC);                                                     00377000
        TEXT[BUF,RFL]:=TEXT[BUF,RBL]:=0; UPD[BUF]:=ZERO:=TRUE;          00378000
        FOR I:=RFL0 STEP 1 UNTIL RFL9 DO                                00379000
            IF TEXT[BUF,I]!0 THEN ZERO:=FALSE;                          00380000
        IF ZERO THEN                                                    00381000
        BEGIN                                                           00382000
            AVB[0]:=AVB[0]+1;                                           00383000
            I:=AVL[0]; UPD[BUF]:=FALSE;                                 00384000
            WHILE I!0 AND SEG[BUF]>AVE[I] DO I:=AVL[J:=I];              00385000
            IF (SEG[BUF]-AVE[J])>1 AND                                  00386000
               (AVB[I]-SEG[BUF]>1 OR I=0) THEN                          00387000
            BEGIN                                                       00388000
                K:=1; WHILE AVB[K]!0 AND K{MAXALL DO K:=K+1;            00389000
                IF K{MAXALL THEN                                        00390000
                BEGIN                                                   00391000
                    AVL[AVL[J]:=K]:=I;                                  00392000
                    AVB[K]:=AVE[K]:=SEG[BUF];                           00393000
                END                                                     00394000
                ELSE AVB[0]:=AVB[0]-1;                                  00395000
            END                                                         00396000
            ELSE                                                        00397000
            BEGIN                                                       00398000
                IF (SEG[BUF]-AVE[J])=1 THEN AVE[J]:=SEG[BUF];           00399000
                IF (AVB[I]-SEG[BUF])=1 THEN AVB[I]:=SEG[BUF];           00400000
                IF AVB[I]-AVE[J]<2 THEN                                 00401000
                BEGIN                                                   00402000
                    AVE[J]:=AVE[I]; AVL[J]:=AVL[I];                     00403000
                    AVL[I]:=AVB[I]:=AVE[I]:=0;                          00404000
            END;END;                                                    00405000
            SEG[BUF]:=0;                                                00406000
        END;                                                            00407000
    END                                                                 00408000
END OVRLA;                                                              00409000
                                                                        00410000
BOOLEAN PROCEDURE ALLOC;                                                00411000
BEGIN                                                                   00412000
    BOOLEAN B; INTEGER I,J,K,TS1,TS2;                                   00413000
    BEGIN                                                               00414000
        FETCH(UFNXT[UFILE]);                                            00415000
        B:=FALSE; I:=RFL0-1;                                            00416000
        WHILE I<RBL0 AND NOT B DO B:=TEXT[BUF,I:=I+1]=0;                00417000
        IF B THEN I:=RCSBLK|(SEG[BUF]-1)+I-RFL0+1 ELSE                  00418000
        IF J:=AVL[0]!0 THEN                                             00419000
        BEGIN                                                           00420000
            FETCH(0);                                                   00421000
            UPD[BUF]:=B:=TRUE;                                          00422000
            I:=RCSBLK|((SEG[BUF]:=AVB[J])-1)+1;                         00423000
            IF AVB[J]<AVE[J] THEN AVB[J]:=AVB[J]+1                      00424000
            ELSE AVL[AVB[J]:=AVE[J]:=0]:=AVL[J];                        00425000
            AVB[0]:=AVB[0]-1;                                           00426000
        END;                                                            00427000
        IF B THEN                                                       00428000
        BEGIN                                                           00429000
            FETCH(J:=UFNXT[UFILE]); K:=TEXT[BUF,RFL];                   00430000
            TS1:=BUF; TS2:=RFL; UFNXT[UFILE]:=I;                        00431000
            UFVAL[UFILE]:=FALSE; UPD[BUF]:=TRUE;                        00432000
            FETCH(I); UPD[BUF]:=TRUE;                                   00433000
            TEXT[BUF,RFL]:=K; TEXT[TS1,TS2]:=I; TEXT[BUF,RBL]:=J;       00434000
            FETCH(K); TEXT[BUF,RBL]:=I; UPD[BUF]:=TRUE;                 00435000
        END;                                                            00436000
        ALLOC:=B;                                                       00437000
    END                                                                 00438000
END ALLOC;                                                              00439000
                                                                        00440000
                                                                        00441000
PROCEDURE SSRCH(SEQ,FIL,UP,REC,FND);                                    00442000
    VALUE SEQ,FIL,UP;                                                   00443000
    INTEGER SEQ,FIL,UP,REC; BOOLEAN FND;                                00444000
BEGIN                                                                   00445000
    INTEGER I,LIM,DWN,F,J,K;                                            00446000
    BEGIN                                                               00447000
        J:=I:=REC;                                                      00448000
    LIM:=RCSBLK|(FIL-1)+1;                                              00449000
        DWN:=IF UP=1 THEN 0 ELSE RCSBLK-CHUNKS;                         00450000
        DO                                                              00451000
        BEGIN                                                           00452000
            K:=J;                                                       00453000
            FETCH(J:=I);                                                00454000
            I:=TEXT[BUF,RFL+DWN];                                       00455000
            F:=UP|(SIGN(SEQ-TEXT[BUF,RCI+9]));                          00456000
        END                                                             00457000
        UNTIL I=LIM OR F!1;                                             00458000
        REC:=IF (FND:=F=0) OR UP=F THEN J                               00459000
             ELSE                                                       00460000
                IF F=1 THEN I                                           00461000
                ELSE K;                                                 00462000
    END                                                                 00463000
END SSRCH;                                                              00464000
                                                                        00465000
                                                                        00466000
BOOLEAN PROCEDURE SETSEQ(SEQ,REC,FIL);                                  00467000
    VALUE SEQ,FIL;                                                      00468000
    INTEGER SEQ,REC,FIL;                                                00469000
BEGIN                                                                   00470000
    INTEGER LIM,TOP,BOT,TSP,BST,RSC,UP;                                 00471000
    BOOLEAN FND; LABEL XIT;                                             00472000
    BEGIN                                                               00473000
        FND:=FALSE;                                                     00474000
        FETCH(LIM:=RCSBLK|(FIL-1)+1); BOT:=TEXT[BUF,RFL];               00475000
        IF TOP:=TEXT[BUF,RBL]=LIM THEN BEGIN REC:=LIM; GO TO XIT; END;  00476000
        FETCH(TOP);                                                     00477000
        IF TSP:=TEXT[BUF,RCI+9]<SEQ THEN BEGIN REC:=TOP; GO TO XIT; END;00478000
        FETCH(BOT);                                                     00479000
        IF BST:=TEXT[BUF,RCI+9]>SEQ THEN BEGIN REC:=LIM; GO TO XIT; END;00480000
        IF REC!TOP AND REC!BOT THEN                                     00481000
        BEGIN                                                           00482000
            FETCH(REC);                                                 00483000
            IF RSC:=TEXT[BUF,RCI+9]>SEQ THEN BEGIN                      00484000
                TOP:=REC; TSP:=RSC; END                                 00485000
            ELSE BEGIN                                                  00486000
                BOT:=REC; BST:=RSC; END;                                00487000
        END;                                                            00488000
        IF SEQ=TSP THEN BEGIN FND:=TRUE; REC:=TOP; GO TO XIT; END;      00489000
        IF SEQ=BST THEN BEGIN FND:=TRUE; REC:=BOT; GO TO XIT; END;      00490000
        UP:=IF (TSP-SEQ)}(SEQ-BST) THEN 1 ELSE -1;                      00491000
        REC:=IF UP=1 THEN BOT ELSE TOP;                                 00492000
        SSRCH(SEQ,FIL,UP,REC,FND);                                      00493000
    XIT:SETSEQ:=FND;                                                    00494000
    END                                                                 00495000
END SETSEQ;                                                             00496000
                                                                        00497000
PROCEDURE NXTSEQ;                                                       00498000
BEGIN                                                                   00499000
    INTEGER I;                                                          00499500
    BEGIN                                                               00500000
        IF UFTYP[UFILE]=2 THEN I:=999999 ELSE I:=99999999;              00501000
        IF NOT (UFSEQ[UFILE]=I) AND                                     00501500
               I-UFSEQ[UFILE]<UFSDQ[UFILE] THEN ERROR(11)               00502000
        ELSE                                                            00503000
        BEGIN                                                           00504000
            IF UFSEQ[UFILE]=I THEN BEGIN                                00504300
                NUSEQ:=FALSE; ERROR(25) END ELSE NUSEQ:=TRUE;           00504700
            SSRCH(UFSEQ[UFILE]:=UFSEQ[UFILE]+UFSDQ[UFILE],UFILE,1,      00505000
                  UFNXT[UFILE],UFVAL[UFILE]);                           00506000
                                                                        00507000
            IF NOT UFVAL[UFILE] THEN                                    00508000
                IF UFVAL[UFILE]:=NOT ALLOC THEN ERROR(3) ELSE           00509000
            BEGIN                                                       00510000
                FETCH(UFNXT[UFILE]);                                    00511000
                BLANKOUT(8,TEXT[BUF,RCI]);                              00512000
                TEXT[BUF,RCI+9]:=UFSEQ[UFILE];                          00513000
            END;                                                        00514000
        END;                                                            00515000
    END                                                                 00516000
END NXTSEQ;                                                             00517000
                                                                        00518000
PROCEDURE BAKSEQ;                                                       00519000
BEGIN                                                                   00520000
    INTEGER I,FL,BL;                                                    00521000
    BEGIN                                                               00522000
        IF UFNXT[UFILE]>(RCSBLK|(UFILE-1)+1) THEN                       00523000
        IF NOT UFVAL[UFILE] THEN                                        00524000
        BEGIN                                                           00525000
            UFSEQ[UFILE]:=UFSEQ[UFILE]-UFSDQ[UFILE];                    00526000
            FETCH(I:=UFNXT[UFILE]);                                     00527000
            FL:=TEXT[BUF,RFL]; BL:=TEXT[BUF,RBL];                       00528000
            UFNXT[UFILE]:=TEXT[BUF,RBL];                                00529000
            UFVAL[UFILE]:=TRUE;                                         00530000
            OVRLA(I);                                                   00531000
            FETCH(FL); UPD[BUF]:=TRUE; TEXT[BUF,RBL]:=BL;               00532000
            FETCH(BL); UPD[BUF]:=TRUE; TEXT[BUF,RFL]:=FL;               00533000
        END;                                                            00534000
    END                                                                 00535000
END BAKSEQ;                                                             00536000
                                                                        00537000
BOOLEAN PROCEDURE SCNFIL(PREF,SUFF);                                    00538000
    REAL PREF,SUFF;                                                     00539000
BEGIN                                                                   00540000
    INTEGER STRT;                                                       00541000
    BOOLEAN SCND;                                                       00542000
    BEGIN                                                               00543000
        SCND:=FALSE; STRT:=START;                                       00544000
        IF SCAN THEN IF NOT SPEC THEN                                   00545000
        BEGIN                                                           00546000
            MOVE(WORD[0],PREF,0,1,0,7);                                 00547000
            IF SCAN THEN IF WEBSTER(WORD) THEN IF CLASS=2 AND KEY=3 AND 00548000
               SCAN THEN IF NOT SPEC THEN                               00549000
            BEGIN                                                       00550000
                MOVE(WORD[0],SUFF,0,1,0,7);                             00551000
                SCND:=TRUE;                                             00552000
        END;END;                                                        00553000
        IF NOT SCND THEN START:=STRT;                                   00554000
        SCNFIL:=SCND;                                                   00555000
    END                                                                 00556000
END SCNFIL;                                                             00557000
                                                                        00558000
BOOLEAN PROCEDURE FSRCH(PREF,SUFF,FNO);                                 00559000
    REAL PREF,SUFF; INTEGER FNO;                                        00560000
BEGIN                                                                   00561000
    INTEGER I; BOOLEAN FOUND; LABEL XIT;                                00562000
                                                                        00563000
    BOOLEAN STREAM PROCEDURE EQUAL(ONE,TWO);                            00564000
    BEGIN                                                               00565000
        SI:=ONE; DI:=TWO; TALLY:=0;                                     00566000
        IF 8 SC=DC THEN TALLY:=1; EQUAL:=TALLY;                         00567000
    END EQUAL;                                                          00568000
                                                                        00569000
    BEGIN                                                               00570000
        FOUND:=FALSE;                                                   00571000
        IF I:=FNO!0 THEN DO                                             00572000
        BEGIN                                                           00573000
            IF EQUAL(PREF,UFIDP[I]) AND EQUAL(SUFF,UFIDS[I]) THEN       00574000
            BEGIN                                                       00575000
                FOUND:=TRUE; FNO:=I; GO TO XIT;                         00576000
            END;                                                        00577000
            I:=UFLNK[I];                                                00578000
        END                                                             00579000
        UNTIL FNO=I;                                                    00580000
    XIT:FSRCH:=FOUND;                                                   00581000
    END                                                                 00582000
END FSRCH;                                                              00583000
                                                                        00584000
                                                                        00585000
BOOLEAN PROCEDURE SETFIL(PREF,SUFF,FNO);                                00586000
    REAL PREF,SUFF; INTEGER FNO;                                        00587000
BEGIN                                                                   00588000
    INTEGER I; BOOLEAN YES;                                             00589000
    BEGIN                                                               00590000
        YES:=TRUE;                                                      00591000
        IF NUFILE:=NOT FSRCH(PREF,SUFF,FNO) THEN                        00592000
        BEGIN                                                           00593000
            I:=MAXFIL; WHILE I>0 AND NOT(UFTYP[I]=0) DO I:=I-1;         00594000
            IF I=0 THEN YES:=FALSE                                      00595000
            ELSE                                                        00596000
            BEGIN                                                       00597000
                IF FNO=0 THEN FNO:=I;                                   00598000
                UFLNK[I]:=UFLNK[FNO];                                   00599000
                UFLNK[FNO]:=I;                                          00600000
                FNO:=I;                                                 00601000
        END;END;                                                        00602000
        SETFIL:=YES;                                                    00603000
    END                                                                 00604000
END SETFIL;                                                             00605000
                                                                        00606000
INTEGER PROCEDURE LIBRARIAN(PREF,SUFF);                                 00607000
    REAL PREF,SUFF;                                                     00608000
BEGIN                                                                   00609000
    INTEGER B; LABEL XIT;                                               00610000
    REAL ARRAY LIB[0:6];                                                00611000
    FILE ELIF DISK (1,30);                                              00612000
                                                                        00613000
    BEGIN                                                               00614000
                                                                        00615000
        FILL ELIF WITH PREF,SUFF;                                       00616000
        SEARCH (ELIF,LIB[*]);                                           00617000
        IF LIB[0] LSS 0 THEN B:=-1 ELSE IF LIB[0] EQL 0 THEN B:=0;      00618000
        IF LIB[0] LEQ 0 THEN GO TO XIT; B:=1;                           00619000
        RL := LIB[3];                                                   00620000
        BL := LIB[4];                                                   00621000
        RB := BL/RL;                                                    00622000
                                                                        00623000
        RC := LIB[5];                                                   00624000
                                                                        00625000
                                                                        00626000
                                                                        00627000
                                                                        00628000
                                                                        00629000
                                                                        00630000
                                                                        00631000
                                                                        00632000
                                                                        00633000
    XIT:LIBRARIAN:=B;                                                   00634000
    END                                                                 00635000
END LIBRARIAN;                                                          00636000
                                                                        00637000
                                                                        00638000
PROCEDURE FNAME(P,S);                                                   00639000
    REAL P,S;                                                           00640000
BEGIN                                                                   00641000
    INTEGER M;                                                          00642000
    INTEGER STREAM PROCEDURE MOVE(S,D,DCH);                             00643000
        VALUE DCH;                                                      00644000
    BEGIN                                                               00645000
        TALLY:=0; SI:=S; SI:=SI+1; DI:=D; DI:=DI+DCH;                   00646000
        7(IF SC>" " THEN TALLY:=TALLY+1; DS:=CHR;);                     00647000
        DS:=1 LIT " "; MOVE:=TALLY;                                     00648000
    END MOVE;                                                           00649000
    BEGIN                                                               00650000
        M:=RONI MOD 8; RONI:=RONI+MOVE(P,RONE[RONI DIV 8],M);           00651000
        IF S NEQ 0 THEN BEGIN MESSG(DACT,20);                           00652000
        M:=RONI MOD 8; RONI:=RONI+MOVE(S,RONE[RONI DIV 8],M)+1;         00653000
    END END                                                             00654000
END FNAME;                                                              00655000
BOOLEAN PROCEDURE OREDY(WHO);INTEGER WHO;OREDY:=TRUE;                   00656000
                                                                        00657000
                                                                        00658000
PROCEDURE EDIT;                                                         00659000
BEGIN                                                                   00660000
    LABEL K00,K01,K02,K03,K04,K05,K06,K07,K08,K09,K10,K11,K12,K13,K14,  00661000
        K15,K16;                                                        00662000
    SWITCH K:=K01,K02,K03,K04,K05,K06,K07,K08,K09,K10,K11,K12,K13,K14,  00663000
        K15,K16;                                                        00664000
    REAL IDP,IDS,JDP,JDS;                                               00665000
    BOOLEAN B,OPTI,OPTJ,RSQ,LTRM;                                       00666000
    BOOLEAN LIB;                                                        00666500
    REAL ARRAY A[0:9];                                                  00667000
    INTEGER I,J,L,M,N;                                                  00668000
    ALPHA BLANKS;                                                       00668500
    LABEL XIT;                                                          00669000
    BEGIN                                                               00670000
    BLANKS:="      ";                                                   00670500
        NUSEQ:=ERRED:=FALSE; MORE:=TRUE; START:=0;                      00671000
    USSTA[USER] := STATUS(USSTA[USER],0);                               00672000
    IF USSTA[USER].[38:6]=0 THEN SEEK(DATACIM(USSTA[USER]));            00672500
        IF USER=0 THEN BEGIN ERROR(1); GO TO XIT; END;                  00673000
                                                                        00674000
        IF SCAN THEN IF WEBSTER(WORD) THEN IF CLASS=2 AND KEY=1 THEN    00675000
        BEGIN                                                           00676000
            IF SCAN THEN                                                00677000
            BEGIN                                                       00678000
                IF WEBSTER(WORD) AND CLASS=1 THEN GO TO K[KEY];         00679000
                IF NOT SPEC AND NOT ALFA THEN GO TO K12;                00680000
 IF B:=(WEBSTER(WORD)AND CLASS=2 AND KEY=1) THEN GO TO K00;             00680500
            END; ERROR(4); GO TO XIT;                                   00681000
        END;                                                            00682000
                                                                        00683000
    K00:                                                                00684000
        IF UFILE:=USFIL[USER]=0 OR UFBSY[UFILE] THEN BEGIN              00685000
            ERROR(5); GO TO XIT; END;                                   00686000
    IF NOT UFSVQ[UFILE] THEN BEGIN                                      00686500
        ERROR(20); GO TO XIT; END;                                      00686600
        FETCH(UFNXT[UFILE]);                                            00687000
    IF B THEN                                                           00687100
        MOVE(TEXT[BUF,RCI],LINE[1],0,0,                                 00687200
            START.[40:5],START.[45:3])                                  00687300
        ELSE BLANKOUT(9,TEXT[BUF,RCI]);                                 00687400
        DOVE(LINE[1],TEXT[BUF,RCI]);                                    00688000
        TEXT[BUF,RCI+9]:=UFSEQ[UFILE];                                  00689000
        UPD[BUF]:=TRUE;                                                 00690000
        NXTSEQ;                                                         00691000
        GO TO XIT;                                                      00692000
                                                                        00693000
                                                                        00694000
    K01:                                                                00695000
        B:=TRUE;                                                        00696000
    K02:                                                                00697000
        WHILE NOT SCNFIL(IDP,IDS) DO IF NOT SCAN THEN BEGIN             00698000
            ERROR(12); GO TO XIT; END;                                  00699000
        UFILE:=USFIL[USER];                                             00700000
                IF NOT B THEN                                           00701000
                BEGIN                                                   00702000
                    IF (N~LIBRARIAN(IDP,IDS)) LSS 0 THEN ERROR(6) ELSE  00703000
                    IF N EQL 0 THEN ERROR(24) ELSE                      00703500
                    IF RL!10 THEN ERROR(13) ELSE                        00704000
                    IF AVB[0]<RC DIV (5|CHUNKS) THEN ERROR(3);          00705000
                    IF ERRED THEN GO TO XIT;                            00706000
                END;                                                    00707000
        IF SETFIL(IDP,IDS,USFIL[USER]) THEN                             00708000
        BEGIN                                                           00709000
            IF NUFILE THEN                                              00710000
            BEGIN                                                       00711000
                IF UFILE!0 THEN IF NOT UFBSY[UFILE] THEN BAKSEQ;        00712000
                                                                        00713000
                UFTYP[UFILE:=USFIL[USER]]:=4;                           00714000
                WHILE SCAN AND (NOT OPTI OR NOT RSQ) DO                 00715000
                IF (OPTI:=WEBSTER(WORD) AND CLASS=3)                    00716000
                THEN UFTYP[UFILE]:=KEY ELSE                             00717000
                RSQ:=(WEBSTER(WORD) AND CLASS=1 AND KEY=8);             00717500
                    FETCH(RCSBLK|(UFILE-1)+1); UPD[BUF]:=TRUE;          00718000
                    UFUSR[UFILE]:=TEXT[BUF,0]:=USER;                    00719000
                    IF NOT B THEN TEXT[BUF,1]:=0 ELSE                   00719500
                    TEXT[BUF,1]:=UFTYP[UFILE];                          00720000
                    WOVE(IDP,TEXT[BUF,2],1); WOVE(IDP,UFIDP[UFILE],1);  00721000
                    WOVE(IDS,TEXT[BUF,3],1); WOVE(IDS,UFIDS[UFILE],1);  00722000
                    TEXT[BUF,RFL0]:=TEXT[BUF,RBL0]:=UFNXT[UFILE]:=1+    00723000
                    (TEXT[BUF,RFL0+1]:=TEXT[BUF,RBL0+1]:=               00724000
                    RCSBLK|(UFILE-1)+1);                                00725000
                UFRCT[UFILE]:=1;                                        00726000
                UFVAL[UFILE]:=UFBSY[UFILE]:=FALSE;                      00727000
                UFSEQ[UFILE]:=UFSDQ[UFILE]:=100;                        00728000
            END ELSE ERROR(7);                                          00729000
        END ELSE ERROR(2);                                              00730000
    NUSEQ:=UFSVQ[UFILE]:=B;                                             00731000
        IF B OR ERRED THEN GO TO XIT;                                   00732000
                                                                        00733000
        BEGIN                                                           00734000
            LABEL EOF; REAL ARRAY A[0:9];                               00735000
            BOOLEAN STREAM PROCEDURE TNN(WRD);                          00736000
            BEGIN                                                       00737000
                TALLY:=0; SI:=WRD;                                      00738000
                8(IF SC<"0" THEN TALLY:=1; SI:=SI+1;);                  00739000
                TNN:=TALLY;                                             00740000
            END TNN;                                                    00741000
                                                                        00742000
            FILL FILD WITH IDP,IDS;                                     00743000
            OPTI:=OPTJ:=FALSE; J:=-1;                                   00744000
            B:=UFTYP[UFILE]=2;                                          00745000
        IF RSQ THEN WHILE TRUE DO                                       00745100
        BEGIN                                                           00745200
            READ(FILD,10,A[*])[EOF]; FETCH(UFNXT[UFILE]);               00745300
            UPD[BUF]:=TRUE; TEXT[BUF,RCI+9]:=UFSEQ[UFILE];              00745400
            MOVE(A[0],TEXT[BUF,RCI], IF B THEN 6 ELSE 0,                00745500
                0,9,0);                                                 00745600
            IF NOT ALLOC THEN BEGIN ERROR(3); GO TO XIT END;            00745700
            UFSEQ[UFILE]:=UFSEQ[UFILE]+UFSDQ[UFILE];                    00745800
        END ELSE                                                        00745900
            WHILE TRUE DO                                               00746000
            BEGIN                                                       00747000
                READ(FILD,10,A[*])[EOF]; I:=0;                          00748000
            IF NOT B THEN IF TNN(A[9]) THEN BEGIN                       00748300
               OPTI:=TRUE; LTRM:=TRUE; GO TO EOF END;                   00748700
                MOVE(A[IF B THEN 0 ELSE 9],I,                           00749000
                     0,IF B THEN 2 ELSE 0,                              00750000
                     0,IF B THEN 6 ELSE 8);                             00751000
            IF B THEN                                                   00751500
                IF TNN(I) THEN OPTI:=TRUE;                              00752000
                I:=ICV(I);                                              00753000
                IF I{J THEN OPTJ:=TRUE;                                 00754000
                FETCH(UFNXT[UFILE]); UPD[BUF]:=TRUE;                    00755000
                TEXT[BUF,RCI+9]:=J:=I;                                  00756000
                MOVE(A[0],TEXT[BUF,RCI],                                00757000
                     IF B THEN 6 ELSE 0,0,9,0);                         00758000
                IF NOT ALLOC THEN BEGIN ERROR(3); GO TO XIT; END;       00759000
            END;                                                        00760000
        EOF:                                                            00761000
            IF OPTI THEN ERROR(9); IF OPTJ THEN ERROR(10);              00762000
              IF NOT RSQ THEN                                           00762500
            UFSEQ[UFILE]:=J+UFSDQ[UFILE];                               00763000
         IF LTRM THEN BEGIN                                             00763100
             FETCH(L:=RCSBLK|(UFILE-1)+1); I:=TEXT[BUF,RFL];            00763200
             UFTYP[UFILE]:=TEXT[BUF,1]:=0; UPD[BUF]:=TRUE;              00763300
             IF J:=UFLNK[UFILE]=UFILE THEN USFIL[USER]:=0               00763400
             ELSE BEGIN                                                 00763500
                 WHILE NOT(UFILE=UFLNK[J]) DO J:=UFLNK[J];              00763600
                 UFBSY[USFIL[USER]:=UFLNK[J]:=UFLNK[UFILE]]             00763700
                     :=TRUE; END;                                       00763800
                 WHILE NOT (I=L) DO BEGIN FETCH(J:=I);                  00763830
                 I:=TEXT[BUF,RFL]; OVRLA(J); END;                       00763870
             ERROR(19); CLOSE(FILD); GO TO XIT END ELSE                 00763900
    BAKSEQ; ERROR(21);                                                  00764000
            CLOSE(FILD); FETCH(L:=RCSBLK|(UFILE-1)+1);                  00765000
            TEXT[BUF,1]:=UFTYP[UFILE]; UPD[BUF]:=TRUE;                  00765500
        END;                                                            00766000
        GO TO XIT;                                                      00767000
                                                                        00768000
    K03:                                                                00769000
        WHILE NOT SCNFIL(IDP,IDS) DO IF NOT SCAN THEN  BEGIN            00770000
            ERROR(12); GO TO XIT; END;                                  00771000
        UFILE:=USFIL[USER];                                             00772000
    UFSVQ[UFILE]:=FALSE;                                                00772500
        IF FSRCH(IDP,IDS,USFIL[USER]) THEN                              00773000
        BEGIN                                                           00774000
            IF UFILE!0 AND UFILE!USFIL[USER] THEN BAKSEQ;               00775000
            UFBSY[UFILE:=USFIL[USER]]:=FALSE;                           00776000
    UFSVQ[UFILE]:=FALSE; ERROR(22);                                     00777000
        END ELSE ERROR(5);                                              00778000
        GO TO XIT;                                                      00779000
                                                                        00780000
    K04:                                                                00781000
        UFILE:=USFIL[USER]; B:=TRUE;                                    00782000
    UFSVQ[UFILE]:=FALSE;                                                00782500
        WHILE B AND NOT SCNFIL(IDP,IDS) DO B:=SCAN;                     00783000
        IF B THEN                                                       00784000
        BEGIN                                                           00785000
            IF NOT FSRCH(IDP,IDS,UFILE) THEN ERROR(5);                  00786000
        END                                                             00787000
        ELSE IF UFILE=0 THEN ERROR(5) ELSE BEGIN                        00788000
        WOVE(UFIDP[UFILE],IDP,1); WOVE(UFIDS[UFILE],IDS,1); END;        00789000
        IF NOT ERRED THEN IF LIBRARIAN(IDP,IDS) GEQ 0 THEN ERROR(8);    00790000
        IF ERRED THEN GO TO XIT;                                        00791000
    UFSVQ[UFILE]:=FALSE;                                                00791500
        IF UFILE=USFIL[USER] THEN BAKSEQ;                               00792000
        FILL FOLD WITH IDP,IDS;                                         00793000
        FETCH(I:=RCSBLK|(UFILE-1)+1); B:=UFTYP[UFILE]=2;                00794000
        WHILE TEXT[BUF,RFL]!I DO                                        00795000
        BEGIN                                                           00796000
            FETCH(TEXT[BUF,RFL]);                                       00797000
            MOVE(TEXT[BUF,RCI],A[0],0,IF B THEN 6 ELSE 0,9,0);          00798000
            IF B THEN MOVE(BLANKS,A[9],2,6,0,2);                        00798500
            OCV(TEXT[BUF,RCI+9],J);                                     00799000
            IF B THEN MOVE(J,A[0],2,0,0,6) ELSE WOVE(J,A[9],1);         00800000
            WRITE(FOLD,10,A[*]);                                        00801000
        END;                                                            00802000
        LOCK(FOLD);                                                     00803000
    ERROR(23);                                                          00804000
        GO TO XIT;                                                      00805000
                                                                        00806000
    K05:                                                                00807000
        IF UFILE:=USFIL[USER]=0 THEN ERROR(5) ELSE                      00808000
        BEGIN                                                           00809000
            B:=TRUE; WHILE B AND NOT SCNFIL(IDP,IDS) DO B:=SCAN;        00810000
            IF B THEN IF NOT FSRCH(IDP,IDS,UFILE) THEN BEGIN            00811000
        ERROR(5); FNAME(IDP,IDS); RITE(RONI) END;                       00812000
        END;                                                            00813000
        IF NOT ERRED THEN                                               00814000
        BEGIN                                                           00815000
            FETCH(L:=RCSBLK|(UFILE-1)+1); I:=TEXT[BUF,RFL];             00816000
            UFTYP[UFILE]:=TEXT[BUF,1]:=0; UPD[BUF]:=TRUE;               00817000
            IF J:=UFLNK[UFILE]=UFILE THEN USFIL[USER]:=0 ELSE           00818000
            BEGIN                                                       00819000
                WHILE NOT(UFILE=UFLNK[J]) DO J:=UFLNK[J];               00820000
                UFBSY[                                                  00821000
                    USFIL[USER]:=UFLNK[J]:=UFLNK[UFILE] ]:=TRUE;        00822000
            END;                                                        00823000
    ERROR(22);                                                          00823500
            WHILE NOT (I=L) DO                                          00824000
            BEGIN                                                       00825000
                FETCH(J:=I);                                            00826000
                I:=TEXT[BUF,RFL];                                       00827000
                OVRLA(J);                                               00828000
        END;END;                                                        00829000
       GO TO XIT;                                                       00830000
    K06:                                                                00831000
       GO TO XIT;                                                       00832000
    K07:                                                                00833000
        IF UFILE:=USFIL[USER]=0 THEN ERROR(5) ELSE                      00834000
        BEGIN                                                           00835000
            B:=TRUE; WHILE B AND NOT OPTJ DO                            00836000
            BEGIN                                                       00837000
                IF OPTI THEN                                            00838000
                BEGIN                                                   00839000
                    IF NOT(OPTJ:=SCNFIL(JDP,JDS)) THEN B:=SCAN;         00840000
                END                                                     00841000
                ELSE                                                    00842000
                    IF NOT(OPTI:=SCNFIL(IDP,IDS)) THEN B:=SCAN;         00843000
            END;                                                        00844000
            IF NOT OPTI THEN ERROR(12) ELSE                             00845000
            IF(                                                         00846000
            IF OPTJ THEN FSRCH(JDP,JDS,UFILE)                           00847000
            ELSE         FSRCH(IDP,IDS,UFILE))                          00848000
                THEN ERROR(7) ELSE                                      00849000
            FETCH(RCSBLK|(UFILE-1)+1); UPD[BUF]:=TRUE;                  00849500
            IF OPTJ THEN                                                00850000
                IF FSRCH(IDP,IDS,UFILE) THEN                            00851000
                BEGIN                                                   00852000
                    WOVE(JDP,UFIDP[UFILE],1); WOVE(JDP,TEXT[BUF,2],1);  00853000
                    WOVE(JDS,UFIDS[UFILE],1); WOVE(JDS,TEXT[BUF,3],1);  00854000
                END ELSE ERROR(5)                                       00855000
            ELSE                                                        00856000
            BEGIN                                                       00857000
                WOVE(IDP,UFIDP[UFILE],1);WOVE(IDP,TEXT[BUF,2],1);       00858000
                WOVE(IDS,UFIDS[UFILE],1); WOVE(IDS,TEXT[BUF,3],1);      00859000
        END;END;                                                        00860000
    UFSVQ[UFILE]:=UFSVQ[USFIL[USER]]:=FALSE;                            00860500
    IF NOT ERRED THEN ERROR(22);                                        00860600
       GO TO XIT;                                                       00861000
    K08:                                                                00862000
    UFSVQ[UFILE]:=FALSE;                                                00862500
        B:=SCNFIL(IDP,IDS);                                             00863000
        IF UFILE:=USFIL[USER]=0 OR UFBSY[UFILE] THEN ERROR(5)           00864000
        ELSE IF B THEN IF NOT FSRCH(IDP,IDS,UFILE) THEN ERROR(5);       00865000
        UFSEQ[UFILE]:=100; UFSDQ[UFILE]:=100;                           00866000
        IF SCAN THEN IF NOT(SPEC OR ALFA) THEN                          00866050
        BEGIN                                                           00866070
            IF LENGTH LSS 9 THEN                                        00866100
            BEGIN                                                       00866130
                I:=LENGTH; MOVE(WORD[0],I,0,8-I,0,I);                   00866150
                IF(I:=ICV(I)) GEQ 0 THEN UFSEQ[UFILE]:=I                00866200
                ELSE ERROR(9);                                          00866250
                IF SCAN THEN IF WEBSTER(WORD) THEN                      00866300
                IF CLASS=2 AND KEY=2 AND SCAN                           00866350
                THEN IF NOT(SPEC OR ALFA) THEN                          00866400
                BEGIN                                                   00866450
                    IF LENGTH LSS 9 THEN                                00866500
                    BEGIN                                               00866550
                        I:=LENGTH;MOVE(WORD[0],I,0,8-I,0,I);            00866600
                        IF(I:=ICV(I)) GTR 0 THEN UFSDQ[UFILE]:=I        00866650
                        ELSE ERROR(14)                                  00866700
                    END ELSE ERROR(14)                                  00866750
                END                                                     00866800
            END ELSE ERROR(9)                                           00866850
        END;                                                            00866900
        IF ERRED THEN GO TO XIT;                                        00866950
                                                                        00867000
                                                                        00868000
        IF UFSEQ[UFILE]+(UFRCT[UFILE]-1)|UFSDQ[UFILE]<                  00869000
            (IF UFTYP[UFILE]=2 THEN 999999 ELSE 99999999) THEN          00870000
        BEGIN                                                           00871000
            FETCH(I:=RCSBLK|(UFILE-1)+1);                               00872000
            WHILE TEXT[BUF,RFL]!I DO                                    00873000
            BEGIN                                                       00874000
                FETCH(TEXT[BUF,RFL]); UPD[BUF]:=TRUE;                   00875000
                UFSEQ[UFILE]:=UFSDQ[UFILE]+                             00876000
                    (TEXT[BUF,RCI+9]:=UFSEQ[UFILE]);                    00877000
            END;                                                        00878000
            UFSEQ[UFILE]:=UFSEQ[UFILE]-UFSDQ[UFILE];                    00879000
    UFSVQ[UFILE]:=FALSE; ERROR(22);                                     00879500
        END                                                             00880000
        ELSE ERROR(11);                                                 00881000
                                                                        00882000
        GO TO XIT;                                                      00883000
                                                                        00884000
    K09:                                                                00885000
        B:=TRUE; WHILE B AND (SPEC OR ALFA) DO B:=SCAN;                 00886000
        IF UFILE:=USFIL[USER]=0 OR UFBSY[UFILE] THEN ERROR(5) ELSE      00887000
        IF B AND LENGTH<9 THEN                                          00888000
        BEGIN                                                           00889000
            I:=LENGTH; MOVE(WORD[0],I,0,8-I,0,I);                       00890000
            IF (I:=ICV(I))>0 THEN UFSDQ[UFILE]:=I ELSE ERROR(14);       00891000
        END ELSE ERROR(14);                                             00892000
    IF NOT ERRED THEN ERROR(22); UFSVQ[UFILE]:=FALSE;                   00892500
        GO TO XIT;                                                      00893000
                                                                        00894000
                                                                        00895000
    K10:                                                                00896000
        IF UFILE:=USFIL[USER]=0 OR UFBSY[UFILE] THEN ERROR(5)           00897000
        ELSE                                                            00898000
        BEGIN                                                           00899000
            BAKSEQ; B:=TRUE; I:=J:=UFSEQ[UFILE];                        00900000
            L:=IF UFTYP[UFILE]=2 THEN 6 ELSE 8;                         00901000
            WHILE B AND NOT(OPTJ OR ERRED) DO                           00902000
            BEGIN                                                       00903000
                IF B:=SCAN THEN IF NOT(SPEC OR ALFA) THEN               00904000
                BEGIN                                                   00905000
                    IF M:=LENGTH>L THEN ERROR(9) ELSE                   00906000
                    BEGIN                                               00907000
                        MOVE(WORD[0],M,0,8-M,0,M);                      00908000
                        IF OPTJ:=OPTI THEN                              00909000
                        BEGIN                                           00910000
                            IF J:=ICV(M)<I THEN ERROR(18);              00911000
                        END                                             00912000
                        ELSE                                            00913000
                        BEGIN                                           00914000
                            I:=J:=ICV(M); OPTI:=TRUE;                   00915000
        END;END;END;END;END;                                            00916000
        IF NOT ERRED THEN                                               00917000
        BEGIN                                                           00918000
            BAKSEQ;                                                     00919000
            B:=SETSEQ(I,UFNXT[UFILE],UFILE);                            00920000
            FETCH(M:=UFNXT[UFILE]);                                     00921000
            IF B THEN UFNXT[UFILE]:=TEXT[BUF,RBL] ELSE                  00922000
                FETCH(M:=TEXT[BUF,RFL]);                                00923000
            L:=RCSBLK|(UFILE-1)+1;                                      00924000
            I:=TEXT[BUF,RFL];                                           00925000
            WHILE NOT(J<TEXT[BUF,RCI+9] OR M=L) DO                      00926000
            BEGIN                                                       00927000
                OVRLA(M);                                               00928000
                FETCH(M:=I);                                            00929000
                I:=TEXT[BUF,RFL];                                       00930000
            END;                                                        00931000
            UPD[BUF]:=TRUE;                                             00932000
            FETCH(TEXT[BUF,RBL]:=UFNXT[UFILE]);                         00933000
            TEXT[BUF,RFL]:=M; UPD[BUF]:=TRUE;                           00934000
    UFSVQ[UFILE]:=FALSE; ERROR(22);                                     00935000
        END;                                                            00936000
       GO TO XIT;                                                       00937000
    K11:                                                                00938000
        IF UFILE:=USFIL[USER]=0 OR UFBSY[UFILE]THEN ERROR(5)ELSE        00939000
        BEGIN                                                           00940000
    UFSVQ[UFILE]:=FALSE;                                                00940500
            I:=0; J:=100000000; B:=TRUE;                                00941000
            WHILE B AND NOT OPTJ DO                                     00942000
            BEGIN                                                       00943000
                IF B:=SCAN THEN IF NOT(SPEC OR ALFA) THEN               00944000
                BEGIN                                                   00945000
    L:=IF UFTYP[UFILE]=2 THEN 6 ELSE 8;                                 00946000
    L:=IF L>LENGTH THEN LENGTH ELSE L;                                  00946100
    MOVE(WORD[0],L,LENGTH-L,8-L,0,L);                                   00946200
                    L:=ICV(L);                                          00947000
                    IF OPTJ:=OPTI THEN J:=L ELSE BEGIN                  00948000
                        OPTI:=TRUE; I:=J:=L; END;                       00949000
            END;END;                                                    00950000
            IF J<I THEN ERROR(18);                                      00951000
        END;                                                            00952000
        IF ERRED THEN GO TO XIT;                                        00953000
        BAKSEQ;                                                         00954000
        IF NOT SETSEQ(I,UFNXT[UFILE],UFILE) THEN                        00955000
        BEGIN                                                           00956000
            FETCH(UFNXT[UFILE]);                                        00957000
            IF UFNXT[UFILE]:=TEXT[BUF,RFL]=RCSBLK|(UFILE-1)+1 OR        00958000
            TEXT[BUF,RCI+9]>J THEN GO TO XIT;                           00959000
        END;                                                            00960000
        USQU1[USER]:=USQU1[USER]&6[44:44:3];                            00961000
        USQU4[USER]:=UFNXT[USQU2[USER]:=UFILE];                         00962000
        USQU3[USER]:=J;                                                 00963000
        TOP[USER]:=TRUE;                                                00963500
       GO TO XIT;                                                       00964000
    K12:                                                                00965000
        IF UFILE:=USFIL[USER]=0 OR UFBSY[UFILE] THEN ERROR(5) ELSE      00966000
        BEGIN                                                           00967000
            IF(I:=LENGTH)>(IF UFTYP[UFILE]=2 THEN 6 ELSE 8) THEN        00968000
                ERROR(11) ELSE                                          00969000
            BEGIN                                                       00970000
                MOVE(WORD[0],I,0,8-I,0,I);                              00971000
                BAKSEQ;                                                 00972000
                IF NOT (UFVAL[UFILE]:=                                  00973000
                   SETSEQ(UFSEQ[UFILE]:=ICV(I),UFNXT[UFILE],UFILE))THEN 00974000
                IF NOT ALLOC THEN ERROR(3);                             00975000
                IF NOT ERRED THEN                                       00976000
                WHILE SCAN DO                                           00977000
                IF WEBSTER(WORD) AND CLASS=2 AND KEY=2 THEN             00978000
                BEGIN                                                   00979000
                    I:=START MOD 8;                                     00980000
                MOVE(LINE[1+(START DIV 8)],LINE[1],I,0,BUFSIZ,0);       00981000
    UFSVQ[UFILE]:=TRUE;                                                 00981500
                    GO TO K00;                                          00982000
        END;END;END;                                                    00983000
    UFSVQ[UFILE]:=                                                      00983500
        NUSEQ:=NOT ERRED;                                               00984000
        GO TO XIT;                                                      00985000
                                                                        00986000
                                                                        00987000
    K13:                                                                00988000
        LOGOUT(USER);                                                   00988010
        USEFUL:=FALSE;                                                  00988020
        FOR I:=1 STEP 1 UNTIL MAXMIX DO IF USVAL[I] THEN                00988030
            USEFUL:=TRUE;                                               00988040
       GO TO XIT;                                                       00989000
    K14:                                                                00990000
    UFBSY[USFIL[USER]]:=B:=TRUE;                                        00990010
    OPTI:=OPTJ:=FALSE; I:=J:=0;                                         00990020
    WHILE B AND NOT SCNFIL(IDP,IDS) DO B:=SCAN;                         00990030
    IF NOT B THEN ERROR(12) ELSE                                        00990040
    BEGIN                                                               00990050
      IF (N~LIBRARIAN(IDP,IDS)) LSS 0 THEN                              00990060
      BEGIN                                                             00990070
        ERRED:=TRUE; RONI:=0;                                           00990075
        MESSG(DOCT,6); FNAME(IDP,IDS); RITE(RONI);                      00990080
      END                                                               00990090
      ELSE                                                              00990092
      IF N EQL 0 THEN                                                   00990093
      BEGIN                                                             00990094
        ERRED:=TRUE; RONI:=0;                                           00990095
        MESSG(DOCT,24); FNAME(IDP,IDS); RITE(RONI);                     00990096
      END                                                               00990098
      ELSE                                                              00990100
      BEGIN                                                             00990110
      WHILE SCAN DO                                                     00990120
        IF WEBSTER(WORD) THEN                                           00990130
        BEGIN                                                           00990140
          IF OPTI:=CLASS=3 THEN                                         00990150
          IF NOT(KEY=4) THEN I:=KEY;                                    00990160
        END                                                             00990170
        ELSE                                                            00990180
          IF NOT(SPEC OR ALFA) THEN                                     00990190
          IF OPTJ:=9>LENGTH THEN                                        00990200
          BEGIN                                                         00990210
            MOVE(WORD[0],J,0,8-LENGTH,0,LENGTH);                        00990220
            J:=ICV(J);                                                  00990230
          END;                                                          00990240
          IF NOT(RL=15) THEN ERROR(13) ELSE                             00990250
          IF NOT OPNFIL (USQU2[USER]) THEN ERROR(26);                   00990260
        END;                                                            00990270
    END;                                                                00990280
    IF ERRED THEN GO TO XIT;                                            00990290
    FILREC[USQU2[USER]]:=RL;FILBLK[USQU2[USER]]:=BL;                    00990295
    FILL SWFI[USQU2[USER]] WITH IDP,IDS;                                00990300
    READ(SWFI[USQU2[USER]][0]);                                         00990310
    USQU1[USER]:=0&1[44:47:1];                                          00990320
    USQU3[USER]:=I;                                                     00990330
    USQU4[USER]:=J;                                                     00990340
       GO TO XIT;                                                       00991000
    K15:                                                                00992000
        GO TO XIT;                                                      00993000
                                                                        00994000
    K16:                                                                00995000
    UFSVQ[UFILE]:=FALSE;                                                00995500
        IF UFILE:=USFIL[USER]=0 THEN ERROR(5) ELSE                      00996000
        BEGIN                                                           00997000
            IF OPTI:=SCNFIL(IDP,IDS) THEN                               00997500
            BEGIN                                                       00998000
                IF NOT FSRCH(IDP,IDS,UFILE) THEN BEGIN                  00998500
                    ERROR(5); RONI:=0;                                  00999000
                    FNAME(IDP,IDS); RITE(RONI) END;                     00999500
            END;                                                        01000000
            WHILE B:=SCAN AND WEBSTER(WORD) AND CLASS=4 DO              01000500
            BEGIN                                                       01001000
                IF KEY=1 THEN                                           01001500
                BEGIN                                                   01002000
                    IF NOT OPTJ:=SCNFIL(JDP,JDS) THEN ERROR(18)         01002500
                END                                                     01003000
                ELSE                                                    01003500
                IF KEY=2 THEN                                           01004000
                BEGIN                                                   01004500
                B:= SCAN; IF WEBSTER(WORD) AND CLASS=3 THEN             01005000
                    UFTYP[UFILE]:=KEY ELSE ERROR(18)                    01005500
                END                                                     01006000
                ELSE                                                    01006500
                IF KEY=3 THEN                                           01007000
                BEGIN                                                   01007500
                B:= SCAN; LIB:=TRUE                                     01008000
                END                                                     01008500
                ELSE ERROR(18)                                          01009000
            END;                                                        01009500
            IF NOT OPTJ THEN                                            01010000
            BEGIN                                                       01010500
                WOVE(UFIDP[UFILE],JDP,1); WOVE(USERLOG[USER],JDS,1);    01011000
            END;                                                        01012000
            IF UFTYP[UFILE] NEQ 6 AND UFTYP[UFILE] GTR 3 THEN ERROR(17);01013000
            B:=UFTYP[UFILE]=2;                                          01013500
        END;                                                            01014000
        IF ERRED THEN GO TO XIT;                                        01015000
    UFSVQ[UFILE]:=FALSE;                                                01015500
        IF UFILE=USFIL[USER] THEN BAKSEQ;                               01016000
        BEGIN                                                           01017000
            FILE OUT FILZ DISK RANDOM[20:2400] "ZIP4" "EDITOR"          01018000
               (2,10,30,SAVE 1);                                        01019000
            REAL ARRAY A[0:9];                                          01020000
                                                                        01021000
            FETCH(I:=RCSBLK|(UFILE-1)+1);                               01022000
        RONI:=0; MESSG(DACT,8); FNAME(USERLOG[USER],0);                 01022400
        BLANKOUT(8,A[0]);MOVE(RONE[0],A[0],0,0,RONI.[40:5],RONI.[45:3]);01022500
        A[9]:=1; WRITE(FILZ[0],10,A[*]);                                01022600
        RONI:=0; MESSG(DACT,1); FNAME(JDP,JDS);                         01022700
        BLANKOUT(8,A[0]);MOVE(RONE[0],A[0],0,0,RONI.[40:5],RONI.[45:3]);01022800
        A[9]:=2; WRITE(FILZ[1],10,A[*]);                                01022900
        RONI:=0; MESSG(DACT,1); FNAME(UFIDS[UFILE],USERLOG[USER]);      01023000
        BLANKOUT(8,A[0]);MOVE(RONE[0],A[0],0,0,RONI.[40:5],RONI.[45:3]);01023300
        A[9]:=3; WRITE(FILZ[2],10,A[*]);                                01023700
        RONI:=0; MESSG(DACT,2);FNAME(JDP,JDS);                          01024000
        MESSG(DACT,IF UFTYP[UFILE]=3 THEN 3 ELSE 20-UFTYP[UFILE]);      01024500
        IF LIB THEN MESSG(DACT,4); BLANKOUT(8,A[0]);                    01025000
        MOVE(RONE[0],A[0],0,0,RONI.[40:5],RONI.[45:3]); A[9]:=4;        01025300
        WRITE(FILZ[3],10,A[*]);                                         01025700
        RONI:=0; MESSG(DACT,23); MESSG(DACT,IF UFTYP[UFILE]=3 THEN 3    01026000
            ELSE 20-UFTYP[UFILE]);                                      01026300
        MESSG(DACT,5); FNAME(UFIDS[UFILE],USERLOG[USER]);               01026700
                      MESSG(DACT,29); BLANKOUT(8,A[0]);                 01027000
        MOVE(RONE[0],A[0],0,0,RONI.[40:5],RONI.[45:3]); A[9]:=5;        01027300
        WRITE(FILZ[4],10,A[*]);                                         01027700
        RONI:=0; MESSG(DACT,6); BLANKOUT(9,A[0]); J:=5;                 01028000
            WHILE TEXT[BUF,RFL]!I DO                                    01029000
            BEGIN                                                       01030000
                J:=J+1;                                                 01031000
                FETCH(TEXT[BUF,RFL]);                                   01032000
                MOVE(TEXT[BUF,RCI],A[0],0,IF B THEN 6 ELSE 0,9,0);      01033000
                OCV(TEXT[BUF,RCI+9],L);                                 01034000
                IF B THEN MOVE(L,A[0],2,0,0,6) ELSE WOVE(L,A[9],1);     01035000
                WRITE(FILZ[J],10,A[*]);                                 01036000
            END;                                                        01037000
        BLANKOUT(8,A[0]);MOVE(RONE[0],A[0],0,0,RONI.[40:5],RONI.[45:3]);01038000
        A[9]:=J+1; WRITE(FILZ[5],10,A[*]);                              01039000
                                                                        01039100
        RONI:=0; MESSG(DACT,7); BLANKOUT(8,A[0]);                       01040000
        MOVE(RONE[0],A[0],0,0,RONI.[40:5],RONI.[45:3]);                 01041000
        WRITE(FILZ[J+1],10,A[*]); LOCK(FILZ); ZIP WITH FILZ;            01042000
        END;                                                            01043000
    ERROR(22);                                                          01044000
                                                                        01045000
    XIT:                                                                01046000
        RONI:=0; MESSG(DOCT,63); J:=2;                                  01047000
        IF NUSEQ THEN                                                   01048000
        BEGIN                                                           01049000
            I:=IF UFTYP[UFILE]=2 THEN 6 ELSE 8;                         01050000
            OCV(UFSEQ[UFILE],IDP);                                      01051000
            MOVE(IDP,RONE[0],8-I,2,0,I); J:=I+2;                        01052000
            IF UFVAL[UFILE] THEN                                        01053000
            BEGIN                                                       01054000
                FETCH(UFNXT[UFILE]);                                    01055000
                BLANKOUT(0,RC); L:=0;                                   01056000
                WHILE L<8 AND CEQ(RC,TEXT[BUF,RCI+8-L])DO L:=L+1;       01057000
                IF L=0 THEN BEGIN M:=2+(RONI:=J); MESSG(DOCT,63);END    01058000
                ELSE M:=J;                                              01059000
                MOVE(TEXT[BUF,RCI],RONE[0],0,M,9,0);                    01060000
                RITE(M+8|(9-L));                                        01061000
    END;                                                                01061100
        L:=14; MOVE(L,RONE[0],7,J,0,1);                                 01061200
        J:=J+1;                                                         01061300
    END;                                                                01062000
        RITE(J); RITE(0);                                               01063000
        FOR I:=0 STEP 1 UNTIL NOBUF DO                                  01064000
            IF UPD[I] THEN                                              01065000
            BEGIN                                                       01066000
                WRITE(EDITORS[SEG[I]],WDSBLK,TEXT[I,*]);                01067000
                UPD[I]:=FALSE;                                          01068000
            END;                                                        01069000
    END                                                                 01070000
END PBX;                                                                01071000
PROCEDURE LISP(USER);                                                   01072000
    VALUE USER; INTEGER USER;                                           01073000
    BEGIN                                                               01074000
        LABEL EOF; INTEGER FORM;                                        01075000
                                                                        01076000
INTEGER STREAM PROCEDURE ATYP(WORD);                                    01077000
BEGIN                                                                   01078000
    LOCAL XES,ES,S;                                                     01079000
    DI:=LOC XES; DS:=8 LIT"X";                                          01080000
    DI:=LOC  ES; DS:=8 LIT" ";                                          01081000
    SI:=WORD; DI:=LOC XES;                                              01082000
    IF 8 SC=DC THEN TALLY:=1 ELSE                                       01083000
    BEGIN                                                               01084000
        SI:=WORD; DI:=LOC  ES;                                          01085000
        IF 8 SC=DC THEN TALLY:=2 ELSE                                   01086000
        TALLY:=3;                                                       01087000
    END;                                                                01088000
    ATYP:=TALLY;                                                        01089000
END ATYP;                                                               01090000
PROCEDURE KOLN;                                                         01091000
BEGIN                                                                   01092000
    INTEGER I,J;                                                        01092500
  J:=I:=((LONI:=LONI+8-(LONI MOD 8))DIV 8)-1;                           01093000
  WHILE I>0 AND CEQ(LINE[15],LONE[I]) DO I:=I-1;                        01093500
  LONI:=LONI-8|(J-I);                                                   01094000
END KOLN;                                                               01095000
                                                                        01096000
PROCEDURE LFCR;                                                         01097000
BEGIN                                                                   01098000
    INTEGER J;                                                          01099000
    J:=47; MOVE(J,LONE[LONI.[40:5]],7,LONI.[45:3],0,1);                 01100000
    LONI:=LONI+1; J:=60;                                                01101000
    MOVE(J,LONE[LONI.[40:5]],7,LONI.[45:3],0,1); LONI:=LONI+1;          01102000
END LFCR;                                                               01103000
                                                                        01104000
                                                                        01104500
    READ(SWFI[USQU2[USER]][USQU4[USER]],15,LINE[*])[EOF];               01105000
    BLANKOUT(0,LINE[15]); USQU4[USER]:=USQU4[USER]+1;                   01105500
    BLANKOUT(BUFSIZ,LONE[0]);                                           01106000
    IF TRUE THEN                                                        01106500
    BEGIN                                                               01107000
      IF USQU3[USER]=1 THEN                                             01107500
      BEGIN COMMENT ALGOL LISTING;                                      01108000
        IF FORM:=ATYP(LINE[14])=1 THEN                                  01108500
        BEGIN                                                           01109000
            COMMENT ALGOL ERRORS;                                       01109500
          WOVE(LINE[1],LONE[0],9);LONI:=72;KOLN;                        01110000
          LONI:=LONI+8;                                                 01110500
          WOVE(LINE[11],LONE[LONI.[40:5]],1);                           01111000
          LONI:=LONI+8; KOLN; LFCR;                                     01111500
        END                                                             01112000
        ELSE                                                            01112500
        IF FORM=2 THEN                                                  01113000
        BEGIN                                                           01113500
          IF ATYP(LINE[0])=2 THEN                                       01114000
          BEGIN                                                         01114500
    IF ATYP (LINE[13])=2 AND ATYP (LINE[11]) NEQ 2 THEN                 01114510
    BEGIN                                                               01114520
        WOVE(LINE[4],LONE[0],9); LONI:=72; KOLN; LFCR;                  01114530
    END                                                                 01114540
    ELSE                                                                01114550
    BEGIN                                                               01114560
            WOVE(LINE[12],LONE[0],2);LONI:=16;LFCR;                     01115000
    MOVE(LINE[2],LONE[2],0,2,9,0); LONI:=90; KOLN;LFCR;                 01115500
    END;                                                                01115550
          END                                                           01116000
          ELSE                                                          01116500
          BEGIN                                                         01117000
            WOVE(LINE[0],LONE[0],9); LONI:=72;KOLN;LFCR;                01117500
          END;                                                          01118000
        END                                                             01118500
        ELSE                                                            01119000
        BEGIN                                                           01119500
          WOVE(LINE[11],LONE[0],4);LONI:=32; LFCR;                      01120000
        END;                                                            01120500
      END                                                               01121000
      ELSE                                                              01121500
    IF USQU3[USER]=2 THEN                                               01121510
    BEGIN COMMENT COBOL LISTING;                                        01121520
        IF ATYP(LINE[13])=2 THEN                                        01121530
        BEGIN                                                           01121540
            WOVE(LINE[0],LONE[0],9); LONI:=72;                          01121550
        END                                                             01121560
        ELSE                                                            01121570
        IF ATYP(LINE[14])=2 THEN                                        01121580
        BEGIN                                                           01121590
            MOVE(LINE[0],LONE[0],0,0,1,5);                              01121600
            MOVE(LINE[12],LONE[1],0,5,1,1);                             01121610
            LONI:=22; LFCR;                                             01121620
            MOVE(LINE[1],LONE[3],5,0,8,3);                              01121630
            LONI:=90;                                                   01121640
        END                                                             01121650
        ELSE                                                            01121660
        BEGIN                                                           01121670
            WOVE(LINE[12],LONE[0],3); LONI:=24;                         01121680
        END;                                                            01121690
        KOLN; LFCR;                                                     01121700
    END                                                                 01121710
    ELSE                                                                01121720
    IF USQU3[USER]=3 THEN                                               01121800
    BEGIN COMMENT FORTRAN LISTING;                                      01121805
        IF ATYP(LINE[13]) NEQ 2 THEN                                    01121810
        BEGIN                                                           01121812
            WOVE(LINE[12],LONE[0],2); LONI:=16; LFCR;                   01121815
            MOVE(LINE[0],LONE[2],0,2,9,0); LONI:=90;                    01121816
            KOLN; LFCR;                                                 01121818
        END                                                             01121819
        ELSE                                                            01121820
        IF ATYP(LINE[11])=2 THEN                                        01121822
        BEGIN                                                           01121825
            IF ATYP(LINE[10])=2 THEN                                    01121826
             BEGIN                                                      01121828
                WOVE(LINE[0],LONE[0],5); LONI:=40; LFCR;                01121830
                                                                        01121832
                                                                        01121834
            END                                                         01121835
            ELSE                                                        01121836
            BEGIN                                                       01121838
                WOVE(LINE[9],LONE[0],2); LONI:=16; LFCR;                01121840
                MOVE(LINE[0],LONE[2],0,2,9,0);LONI:=90;                 01121842
                KOLN; LFCR;                                             01121844
            END                                                         01121845
        END                                                             01121846
        ELSE                                                            01121847
        IF ATYP(LINE[7])=2 THEN                                         01121848
        BEGIN                                                           01121849
            WOVE(LINE[8],LONE[0],4); LONI:=32; LFCR;                    01121850
        END                                                             01121851
        ELSE                                                            01121852
        IF ATYP(LINE[0])=2 THEN                                         01121853
        BEGIN                                                           01121854
            MOVE(LINE[1],LONE[0],0,0,8,0); LONI:=64;KOLN;LFCR;          01121855
            MOVE(LINE[9],LONE[LONI.[40:5]],0,LONI.[45:3],3,6);          01121856
            LONI:=LONI+30; KOLN; LFCR;                                  01121858
        END                                                             01121859
        ELSE                                                            01121860
        BEGIN                                                           01121862
            MOVE(LINE[0],LONE[0],0,0,5,7); LONI:=47; KOLN; LFCR;        01121865
            MOVE(LINE[5],LONE[LONI.[40:5]],7,LONI.[45:3],7,1);          01121870
            LONI:=LONI+57; KOLN; LFCR;                                  01121875
        END                                                             01121877
    END                                                                 01121880
    ELSE                                                                01121885
    IF USQU3[USER]=5 THEN                                               01121900
    BEGIN COMMENT FORTRAN TRANSLATION;                                  01121910
        IF ATYP(LINE[1])=2 THEN                                         01121920
        BEGIN                                                           01121923
            IF ATYP(LINE[11])=2 AND ATYP(LINE[13])=2 THEN               01121926
            BEGIN                                                       01121930
                WOVE(LINE[2],LONE[0],6); LONI:=48; LFCR;                01121933
            END                                                         01121936
            ELSE                                                        01121940
            BEGIN                                                       01121943
                WOVE(LINE[11],LONE[0],3); LONI:=24; LFCR;               01121946
                MOVE(LINE[2],LONE[3],0,2,9,0);LONI:=98;KOLN; LFCR;      01121950
            END                                                         01121952
        END                                                             01121954
        ELSE                                                            01121956
        BEGIN                                                           01121958
            IF ATYP(LINE[0])=2 THEN                                     01121960
            BEGIN                                                       01121962
                MOVE(LINE[1],LONE[0],2,0,9,0); LONI:=72;                01121964
                KOLN; LFCR;                                             01121966
            END                                                         01121968
            ELSE                                                        01121970
            BEGIN                                                       01121972
                WOVE(LINE[0],LONE[0],7); LONI:=56;                      01121974
                LFCR;                                                   01121976
            END                                                         01121978
        END                                                             01121980
    END                                                                 01121985
    ELSE                                                                01121990
      BEGIN                                                             01122000
        MOVE(LINE[0],LONE[0],0,0,7,4);LONI:=60;KOLN;LFCR;               01122500
        MOVE(LINE[7],LONE[LONI.[40:5]],4,LONI.[45:3],7,4);              01123000
        LONI:=LONI+60;KOLN;LFCR;                                        01123500
      END;                                                              01124000
    END                                                                 01124500
    ELSE                                                                01125000
    BEGIN                                                               01125500
      EOF: CLOSE(SWFI[USQU2[USER]]);                                    01125600
      FILOPN[USQU2[USER]]:=FALSE;                                       01125700
      LONI:=0; LFCR;                                                    01125800
      USQU1[USER].[44:1]:=0;                                            01125900
    END;                                                                01126000
END LIST;                                                               01126100
                                                                        01127000
PROCEDURE OUPT;                                                         01128000
BEGIN                                                                   01129000
    LABEL CHOKE;                                                        01130000
    INTEGER I,J,S,SEQ;                                                  01131000
PROCEDURE LONBUF(USER);                                                 01132000
    VALUE USER; INTEGER USER;                                           01133000
BEGIN                                                                   01134000
    FETCH(RCSBLK|(MAXFIL+USER)+1); UPD[BUF]:=TRUE;                      01135000
    IF LONI>320 THEN LONI:=320;                                         01136000
    TEXT[BUF,8]:=0; TEXT[BUF,9]:=LONI;                                  01137000
    MOVE(LONE[0],TEXT[BUF,10],0,0,LONI.[36:9],LONI.[45:3]);             01138000
END LONBUF;                                                             01139000
BOOLEAN PROCEDURE BUFRON(USER);                                         01140000
    VALUE USER; INTEGER USER;                                           01141000
BEGIN                                                                   01142000
    INTEGER L; BOOLEAN FULL;                                            01143000
    FETCH(RCSBLK|(MAXFIL+USER)+1); UPD[BUF]:=TRUE;                      01144000
    FULL:=(KRSOUT-RONI){(TEXT[BUF,9]-TEXT[BUF,8]);                      01145000
    L:=IF FULL THEN (KRSOUT-RONI) ELSE (TEXT[BUF,9]-TEXT[BUF,8]);       01146000
    MOVE(TEXT[BUF,10+TEXT[BUF,8].[36:9]],RONE[RONI.[36:9]],             01147000
         TEXT[BUF,8].[45:3],RONI.[45:3],L.[36:9],L.[45:3]);             01148000
    TEXT[BUF,8]:=TEXT[BUF,8]+L; RONI:=RONI+L;                           01149000
    BUFRON:=NOT FULL;                                                   01150000
END BUFRON;                                                             01151000
    BEGIN                                                               01152000
        GOODBYE:=TRUE;                                                  01153000
        IF HELLO THEN                                                   01154000
        BEGIN                                                           01155000
            FETCH(RCSBLK|(MAXFIL+USER)+1); UPD[BUF]:=TRUE;              01156000
            TEXT[BUF,RCI]:=USQU1[USER]:=USQU1[USER]&2[46:46:2];         01157000
            LONBUF(USER);                                               01158000
        END;                                                            01159000
        FOR I:=1 STEP 1 UNTIL MAXMIX DO IF USVAL[I] THEN                01160000
        BEGIN                                                           01161000
    IF STATUS(USSTA[I],0).[26:1]=1 THEN                                 01161010
    BEGIN                                                               01161020
        IF USQU1[I].[44:1]=1 THEN                                       01161030
        BEGIN                                                           01161040
            CLOSE(SWFI[USQU2[I]]);                                      01161050
            FILOPN[USQU2[I]]:=FALSE;                                    01161060
        END;                                                            01161070
        FETCH(RCSBLK|(MAXFIL+I)+1); UPD[BUF]:=TRUE;                     01161080
        USQU1[I]:=0; TEXT[BUF,RCI]:=0;                                  01161090
    END;                                                                01161100
            WHILE USQU1[I].[46:2]>0 DO                                  01162000
            BEGIN                                                       01163000
                IF USQU1[I].[47:1]=1 THEN                               01164000
                BEGIN                                                   01165000
                    FETCH(RCSBLK|(MAXFIL+I)+1);                         01166000
                    WOVE(TEXT[BUF,RCI+4],RONE[1],4);                    01167000
                END                                                     01168000
                ELSE                                                    01169000
                BEGIN                                                   01170000
                    MORE:=TRUE; RONI:=8;                                01171000
                    WHILE MORE AND USQU1[I].[46:1]=1 DO                 01172000
                    IF MORE:=BUFRON(I) THEN                             01173000
                IF USQU1[I].[45:1]=1 THEN                               01174000
                    BEGIN                                               01175000
                        FETCH(USQU4[I]);                                01176000
                        MOVE(DOCT[63],LONE[0],2,0,0,LONI:=2);           01177000
                            S:=IF UFTYP[USQU2[I]]=2 THEN 6 ELSE 8;      01178000
                            OCV(TEXT[BUF,RCI+9],SEQ);                   01179000
                            MOVE(SEQ,LONE[0],8-S,2,0,S);                01180000
                            BLANKOUT(0,RC);J:=0;WHILE J<8 AND           01181000
                            CEQ(RC,TEXT[BUF,RCI+8-J])DO J:=J+1;         01182000
    IF J=0 THEN MOVE(DOCT[63],LONE[0],2,S:=S+2,0,2);                    01182500
                            MOVE(TEXT[BUF,RCI],LONE[0],0,S+2,9-J,0);    01183000
                            LONI:=2+S+8|(9-J);                          01184000
  IF SIGN(TEXT[BUF,RCI+9]-USQU3[I])>-1 OR(USQU4[I]:=                    01185000
                           TEXT[BUF,RFL])=(RCSBLK|(USQU2[I]-1)+1) THEN  01186000
                        BEGIN                                           01187000
                            FETCH(RCSBLK|(MAXFIL+I)+1); UPD[BUF]:=TRUE; 01188000
                            TEXT[BUF,RCI]:=USQU1[I]:=2;                 01189000
                        END                                             01190000
                        ELSE                                            01191000
                        BEGIN                                           01192000
                            FETCH(RCSBLK|(MAXFIL+I)+1); UPD[BUF]:=TRUE; 01193000
                            TEXT[BUF,RCI+3]:=USQU4[I];                  01194000
                        END;                                            01195000
                        LONBUF(I);                                      01196000
                    END                                                 01197000
                    ELSE                                                01198000
    IF USQU1[I].[44:1]=1 THEN                                           01198100
    BEGIN                                                               01198200
        USSTA[I] := STATUS(USSTA[I],0);                                 01198250
        LISP(I); LONBUF(I);                                             01198300
    END                                                                 01198400
    ELSE                                                                01198500
                    BEGIN                                               01199000
                        IF TOP[I] THEN BEGIN                            01199100
                        J:=47; MOVE(J,RONE[RONI.[36:9]],7,              01199200
                            RONI.[45:3],0,1); RONI:=RONI+1;             01199400
                        J:=60; MOVE(J,RONE[RONI.[36:9]],7,              01199600
                            RONI.[45:3],0,1); RONI:=RONI+1;             01199800
                        TOP[I]:=FALSE END;                              01199900
                        J:=31; MOVE(J,RONE[RONI.[36:9]],                01200000
                            7,RONI.[45:3],0,1);                         01201000
                        FETCH(RCSBLK|(MAXFIL+I)+1); UPD[BUF]:=TRUE;     01202000
                        TEXT[BUF,RCI]:=USQU1[I]:=0;                     01203000
                    END;                                                01204000
                    FETCH(RCSBLK|(MAXFIL+I)+1); UPD[BUF]:=TRUE;         01205000
                    TEXT[BUF,RCI]:=USQU1[I]:=USQU1[I]&1[47:47:1];       01206000
                    WOVE(RONE[1],TEXT[BUF,RCI+4],4);                    01207000
                END;                                                    01208000
                J:=31; MOVE(J,RONE[4],7,3,0,1);                         01209000
    RONE[0]:=0;                                                         01210000
            WRITE(DATACOM[I](USSTA[I],0),5,RONE[*])[CHOKE:CHOKE];       01211000
                FETCH(RCSBLK|(MAXFIL+I)+1); UPD[BUF]:=TRUE;             01212000
                TEXT[BUF,RCI]:=USQU1[I]:=USQU1[I]&0[47:47:1];           01213000
            END;                                                        01214000
            CHOKE:                                                      01215000
            GOODBYE:=GOODBYE AND USQU1[I].[45:3]=0;                     01216000
        END;LONI:=0;                                                    01217000
    END                                                                 01218000
END OUPT;                                                               01219000
                                                                        01220000
                                                                        01221000
PROCEDURE INPT;                                                         01222000
BEGIN                                                                   01223000
    BOOLEAN GRPMRK;                                                     01224000
    INTEGER I,L,II,R;                                                   01225000
    ARRAY A[0:IRSZ];                                                    01226000
    LABEL NONE,NUNE,MULBL1,MULBL2,CONT;                                 01227000
    STREAM PROCEDURE INIT(BUFF);                                        01228000
    BEGIN                                                               01229000
         DI:=BUFF; DS:=8 LIT"!"; SI:=BUFF; DS:=IRSZ WDS;                01230000
    END INIT;                                                           01231000
    PROCEDURE DTRMIN(GRPMRK,LENGTH,A);                                  01232000
        BOOLEAN GRPMRK; INTEGER LENGTH; ARRAY A[0];                     01233000
    BEGIN                                                               01234000
         BOOLEAN STREAM PROCEDURE MARKED(WORD);                         01235000
        BEGIN                                                           01236000
            TALLY:=0; SI:=WORD;                                         01237000
            8(IF SC="~" THEN TALLY:=1; SI:=SI+1;);                      01238000
            MARKED:=TALLY;                                              01239000
        END MARKED;                                                     01240000
        INTEGER I;                                                      01241000
         I:=1; WHILE NOT(CEQ(A[I],A[IRSZ])) AND I<(IRSZ-1) DO I:=I+1;   01242000
         IF I=IRSZ-1 THEN IF NOT(CEQ(A[IRSZ-1],A[IRSZ])) THEN I:=IRSZ;  01243000
        GRPMRK:=MARKED(A[I-1]);                                         01244000
        LENGTH:=8|(I-1);                                                01245000
 IF NOT GRPMRK THEN LENGTH:=LENGTH-(LENGTH MOD 28);                     01245500
                                                                        01245600
    END DTRMIN;                                                         01246000
    HELLO:=FALSE;                                                       01247000
    WHILE TRUE DO                                                       01248000
         BEGIN                                                          01249000
            INIT(A[0]);                                                 01253000
            A[0]:=0;                                                    01253500
            READ(DATACIM(0,0),IRSZ,A[*])[NONE:NONE];                    01254000
    IF A[0]=0 THEN GO TO NONE;                                          01254500
            HELLO:=TRUE;                                                01255000
            DTRMIN(GRPMRK,L,A);                                         01256000
        I:=WHOISIT(A[0]);                                               01256100
        IF I GTR MAXMIX THEN GO TO MULBL1;                              01256150
        USSTA[I]:=A[0];                                                 01256200
    IF NUSER THEN BEGIN                                                 01256300
        UDISP[I]:=0; USBUF[I,15]:=31; SEEK(DATACIM(A[0])) END;          01256400
            IF UDISP[I].[42:6]<2 THEN                                   01257000
            BEGIN                                                       01258000
                L:=IF(127-UDISP[I].[30:12])>L THEN L ELSE               01259000
                     (127-UDISP[I].[30:12]);                            01260000
                MOVE(A[1],USBUF[I,UDISP[I].[30:9]],                     01261000
                     0,UDISP[I].[39:3],L.[36:9],L.[45:3]);              01262000
        UDISP[I].[30:12]:=UDISP[I].[30:12]+L;                           01263000
        UDISP[I].[42:6]:=IF UDISP[I].[30:12]=127 THEN                   01264000
                2 ELSE 1;                                               01265000
            END;                                                        01266000
            IF GRPMRK THEN UDISP[I].[42:6]:=3;                          01267000
    MULBL1:                                                             01267500
         END;                                                           01268000
                                                                        01269000
    NONE:                                                               01270000
    WHILE TRUE DO                                                       01271000
     BEGIN                                                              01272000
        INIT(A[0]);                                                     01273000
            READ(NEWUSER(0,0),IRSZ,A[*])[NUNE:NUNE];                    01274000
        DTRMIN(GRPMRK,L,A);                                             01275000
        I:=WHOISIT(A[0]);                                               01276000
        IF I GTR MAXMIX THEN GO TO MULBL2;                              01276300
         USSTA[I]:=A[0];                                                01276500
    IF NUSER THEN                                                       01277000
        BEGIN                                                           01278000
            UDISP[I]:=0; USBUF[I,15]:=31;                               01279000
                                                                        01280000
            SEEK(DATACIM(A[0]));                                        01281000
                                                                        01282000
        END;                                                            01283000
            IF UDISP[I].[42:6]<2 THEN                                   01284000
            BEGIN                                                       01285000
                L:=IF(127-UDISP[I].[30:12])>L THEN L ELSE               01286000
                     (127-UDISP[I].[30:12]);                            01287000
                MOVE(A[1],USBUF[I,UDISP[I].[30:9]],                     01288000
                     0,UDISP[I].[39:3],L.[36:9],L.[45:3]);              01289000
        UDISP[I].[30:12]:=UDISP[I].[30:12]+L;                           01290000
        UDISP[I].[42:6]:=IF UDISP[I].[30:12]=127 THEN                   01291000
                2 ELSE 1;                                               01292000
            END;                                                        01293000
            IF GRPMRK THEN UDISP[I].[42:6]:=3;                          01294000
    MULBL2:                                                             01294500
        END;                                                            01295000
        NUNE: HELLO:=FALSE; I:=USER;                                    01296000
    WHILE (I-MAXMIX){USER AND NOT HELLO DO                              01297000
    IF(HELLO:=UDISP[L:=(I:=I+1)MOD(MAXMIX+1)].[42:6]=3)THEN             01298000
    BEGIN                                                               01299000
        NUSER:=NOT USVAL[USER:=L]; UDISP[L]:=0;                         01300000
        WOVE(USBUF[L,0],LINE[1],16); IF NUSER THEN LOGIN(USER);         01301000
    END;                                                                01302000
        IF RESTRT THEN IF((RESTIME:=TIME(1))-RESTIMEI) GTR TM           01302050
        THEN RESTRT:=FALSE;                                             01302100
        IF NOT RESTRT AND NOT FRST THEN BEGIN                           01302150
        IF(USEFUL:=(R:=STATUS(AR[*]) NEQ -1)) THEN                      01302200
        FOR I:=1 STEP 1 UNTIL MAXMIX DO IF USVAL[I] THEN                01302250
        BEGIN                                                           01302300
            FOR II:=0 STEP 2 UNTIL R DO                                 01302400
            IF AR[II].[9:9]=USSTA[I].[9:9] THEN                         01302500
            IF AR[II+1]=USERLOG[I] AND SECURETOG OR NOT SECURETOG       01302550
            THEN GO TO CONT;                                            01302600
            USVAL[I]:=FALSE; BAKUPD(0,I); REMFILS(I);                   01302700
            USERLOG[I]:=0; RELEASE(USSTA[I]); CONT:                     01302800
    END END;                                                            01302850
END INPT;                                                               01303000
    BEGIN COMMENT INITIALIZATION BLOCK;                                 01304000
    INTEGER I;                                                          01305000
                                                                        01306000
                                                                        01307000
    STREAM PROCEDURE FILTHE(EOL);                                       01308000
    BEGIN                                                               01309000
        DI:=EOL; DS:=8 LIT "00000{!~";                                  01310000
    END FILTHE;                                                         01311000
                                                                        01312000
STREAM PROCEDURE FILLTHE(DICT);                                         01313000
BEGIN                                                                   01314000
    LOCAL NTRYS;                                                        01315000
    BEGIN                                                               01316000
        DI:=DICT; DI:=DI+8;       TALLY:=0;                             01317000
        DS:= 9 LIT "6CREATE11";   TALLY:=TALLY+1;                       01318000
        DS:= 7 LIT "4LOAD12";     TALLY:=TALLY+1;                       01319000
        DS:= 7 LIT "4FILE13";     TALLY:=TALLY+1;                       01320000
        DS:= 7 LIT "4SAVE14";     TALLY:=TALLY+1;                       01321000
        DS:= 9 LIT "6REMOVE15";   TALLY:=TALLY+1;                       01322000
        DS:= 8 LIT "5PURGE16";    TALLY:=TALLY+1;                       01323000
        DS:= 9 LIT "6RENAME17";   TALLY:=TALLY+1;                       01324000
        DS:= 8 LIT "5RESEQ18";    TALLY:=TALLY+1;                       01325000
        DS:= 6 LIT "3INC19";      TALLY:=TALLY+1;                       01326000
        DS:= 4 LIT "1D1#";        TALLY:=TALLY+1;                       01327000
        DS:= 4 LIT "1T1@";        TALLY:=TALLY+1;                       01328000
        DS:= 7 LIT "4QUIT1:";     TALLY:=TALLY+2;                       01329000
        DS:= 7 LIT "4LIST1>";     TALLY:=TALLY+1;                       01330000
        DS:= 4 LIT "1R1}";        TALLY:=TALLY+1;                       01331000
        DS:= 4 LIT "1*21";        TALLY:=TALLY+1;                       01332000
        DS:= 4 LIT "1,22";        TALLY:=TALLY+1;                       01333000
        DS:= 4 LIT "1/23";        TALLY:=TALLY+1;                       01334000
        DS:= 8 LIT "5ALGOL31";    TALLY:=TALLY+1;                       01335000
        DS:= 8 LIT "5COBOL32";    TALLY:=TALLY+1;                       01336000
        DS:=10 LIT "7FORTRAN33";  TALLY:=TALLY+1;                       01337000
        DS:= 7 LIT "4DATA34";     TALLY:=TALLY+1;                       01338000
        DS:=10 LIT "7COMPILE1+";  TALLY:=TALLY+1;                       01339000
        DS:= 5 LIT "2TO41";       TALLY:=TALLY+1;                       01340000
        DS:= 7 LIT "4WITH42";     TALLY:=TALLY+1;                       01340100
        DS:= 6 LIT "3FOR43";      TALLY:=TALLY+1;                       01340200
        DS:=12 LIT "9TRANSLATE35"; TALLY:=TALLY+1;                      01340500
        DS:= 8 LIT "5BASIC36";    TALLY:=TALLY+1;                       01340700
        DS:= 9 LIT "6ALGOLX37";    TALLY:=TALLY+1;                      01340800
        DI:=DICT; NTRYS:=TALLY; SI:=LOC NTRYS; DS:=WDS;                 01341000
    END                                                                 01342000
END FILLTHE;                                                            01343000
    FILE O DISK SERIAL[20:SEGPAG]"EDITORS""TEXTS"(2,WDSBLK,SAVE   2);   01344000
    FILE SECURE DISK SERIAL "REMOTE" "USERS" (1,30);                    01344500
    REAL ARRAY ID,FSID[0:1];                                            01345000
    INTEGER J,K,L;                                                      01346000
                                                                        01347000
    BEGIN                                                               01348000
    FILL DOCT[*] WITH                                                   01349000
    OCT0000000000000000,                                                01350000
    OCT0000007475767700,                                                01351000
    OCT0000747572737700,                                                01352000
    OCT0000007073717700,                                                01353000
    OCT0000006673677700,                                                01354000
    OCT0000657273717700,                                                01355000
    OCT0000006472717700,                                                01356000
    OCT0000007273637700,                                                01357000
    OCT0000006472637700,                                                01358000
    OCT0000000062677700,                                                01359000
    OCT0000000061627700,                                                01360000
    OCT0000000060627700,                                                01361000
    OCT0000005772677700,                                                01362000
    OCT0000567264677700,                                                01363000
    OCT0000005562677700,                                                01364000
    OCT0000000052535400,                                                01365000
    OCT0000000043444500,                                                01366000
    OCT0000000033617700,                                                01367000
    OCT0000665253617700,                                                01368000
    OCT0000004146727700,                                                01369000
    OCT0000657162717700,                                                01370000
    OCT0000000000417700,                                                01371000
    OCT0000000000407700,                                                01372000
    OCT0000000000377700,                                                01373000
    OCT0000000076677700,                                                01374000
    OCT0000003536627700,                                                01375000
    OCT0000723470717700,                                                01376000
    OCT0004637047250000,                                                01377000
    OCT0005433162636000,                                                01378000
    OCT0005433144316300,                                                01379000
    OCT0006644747255160,                                                01380000
    OCT0005622165252400,                                                01381000
    OCT0002464200000000,                                                01382000
    OCT0006434621242524,                                                01383000
    OCT0006254524606060,                                                01384000
    OCT0006216023215124,                                                01385000
    OCT0006517056242163,                                                01386000
    OCT0006604331225121,                                                01387000
    OCT0004454663600000,                                                01388000
    OCT0006234622464360,                                                01389000
    OCT0006214327464360,                                                01390000
    OCT0001610000000000,                                                01391000
    OCT0002256000000000,                                                01392000
    OCT0006234644473143,                                                01393000
    OCT0002146000000000,                                                01394000
    OCT0004314523600000,                                                01395000
    OCT0006432170466463,                                                01396000
    OCT0005452144256000,                                                01397000
    OCT0006466526436660,                                                01398000
    OCT0004255151600000,                                                01399000
    OCT0004622550600000,                                                01400000
    OCT0005246447436000,                                                01401000
    OCT0005243162426000,                                                01402000
    OCT0006452144252460,                                                01403000
    OCT0005652551226000,                                                01404000
    OCT0004314565600000,                                                01405000
    OCT0006624721232560,                                                01406000
    OCT0003454660000000,                                                01407000
    OCT0005263143256000,                                                01408000
    OCT0005632567636000,                                                01409000
    OCT0005602664434300,                                                01410000
    OCT0006245123635170,                                                01411000
    OCT0005646225516000,                                                01412000
    OCT0004577453600000;                                                01413000
    FILL DACT[*] WITH                                                   01414000
    OCT0000000000000000,                                                01414050
    OCT0000000032332700,                                                01414100
    OCT0000000025262700,                                                01414150
    OCT0000000000202100,                                                01414200
    OCT0000000012133200,                                                01414250
    OCT0000000000341400,                                                01414300
    OCT0000000030312700,                                                01414350
    OCT0000000000172700,                                                01414400
    OCT0000000000112700,                                                01414450
    OCT0005646225517500,                                                01414500
    OCT0003517060000000,                                                01414550
    OCT0006604331225121,                                                01414600
    OCT0006602631432560,                                                01414650
    OCT0006214327464367,                                                01414700
    OCT0006222162312360,                                                01414750
    OCT0006254524606060,                                                01414800
    OCT0002456000000000,                                                01414850
    OCT0006264651635121,                                                01414900
    OCT0006234622464360,                                                01414950
    OCT0006214327464360,                                                01415000
    OCT0001610000000000,                                                01415100
    OCT0002256000000000,                                                01415200
    OCT0006234644473143,                                                01415300
    OCT0002146000000000,                                                01415400
    OCT0004232151240000,                                                01415500
    OCT0005242163216000,                                                01415600
    OCT0001600000000000,                                                01415700
    OCT0006512544466525,                                                01415800
    OCT0005433145257500,                                                01415900
    OCT0006622551312143;                                                01416000
        FILLTHE(DICT);                                                  01417000
        AVB[AVL[AVL[0]:=1]:=0]:=                                        01418000
           (AVE[1]:=20|SEGPAG)-(AVB[1]:=MAXFIL+MAXMIX+2);               01419000
                                                                        01420000
        FOR I:=0 STEP 1 UNTIL NOBUF DO BUFL[I]:=I;                      01421000
    FILL FSID[*] WITH OCT0051254446632560,OCT0064622551626060;          01421500
    FILL ID[*] WITH OCT0025243163465162,OCT0063256763626060;            01422000
    IF LIBRARIAN(FSID[0],FSID[1]) GEQ 0 THEN SECURETOG~TRUE             01422300
         ELSE SECURETOG~FALSE;                                          01422700
    IF LIBRARIAN(ID[0],ID[1]) GTR 0 THEN                                01423000
    BEGIN                                                               01424000
    FOR I:=1 STEP 1 UNTIL MAXMIX DO RESTARTSW[I]:=TRUE;                 01424500
        RESTRT:=TRUE; RESTIMEI:=TIME(1);                                01424700
        READ(EDITORS[0],WDSBLK,TEXT[0,*]);                              01425000
        OLDSEGNO:=TEXT[0,0];                                            01425500
        FOR BUF:=0 STEP 1 UNTIL MAXMIX DO                               01426000
            USVAL[BUF]:=NOT(USERLOG[BUF]:=TEXT[0,BUF]=0);               01427000
        FOR I:=1 STEP 1 UNTIL MAXFIL DO                                 01428000
        BEGIN                                                           01429000
            FETCH(L:=RCSBLK|(I-1)+1);                                   01430000
            IF NOT(UFTYP[I]:=TEXT[BUF,1]=0) THEN                        01431000
            BEGIN                                                       01432000
                WOVE(TEXT[BUF,2],UFIDP[I],1);                           01433000
                WOVE(TEXT[BUF,3],UFIDS[I],1);                           01434000
                UFUSR[I]:=USER:=TEXT[BUF,0];                            01435000
                WHILE NOT(TEXT[BUF,RFL]=L) DO                           01436000
                BEGIN                                                   01437000
                    FETCH(TEXT[BUF,RFL]);                               01438000
                    UFRCT[I]:=UFRCT[I]+1;                               01439000
                J:=AVL[K:=0];                                           01440000
                WHILE AVE[J]<SEG[BUF] DO J:=AVL[K:=J];                  01441000
                    IF NOT(AVB[J]>SEG[BUF]) THEN                        01442000
                    BEGIN                                               01443000
                        AVB[0]:=AVB[0]-1;                               01444000
                        IF SEG[BUF]=AVB[J] THEN                         01445000
                        BEGIN                                           01446000
                            IF SEG[BUF]=AVE[J] THEN                     01447000
                            BEGIN                                       01448000
                                AVB[J]:=AVE[J]:=0;                      01449000
                                AVL[K]:=AVL[J];                         01450000
                            END                                         01451000
                            ELSE AVB[J]:=AVB[J]+1;                      01452000
                        END ELSE                                        01453000
                        IF SEG[BUF]=AVE[J] THEN AVE[J]:=AVE[J]-1  ELSE  01454000
                        BEGIN                                           01455000
                            K:=1;WHILE NOT(AVB[K]=0)DO K:=K+1;          01456000
                            AVL[K]:=AVL[J]; AVL[J]:=K;                  01457000
                            AVE[K]:=AVE[J];                             01458000
                            AVE[J]:=SEG[BUF]-1;                         01459000
                            AVB[K]:=SEG[BUF]+1;                         01460000
                END;END;END;                                            01461000
                UFBSY[I]:=TRUE;                                         01462000
                UFNXT[I]:=L;                                            01463000
                UFSEQ[I]:=UFSDQ[I]:=100;                                01464000
                IF USFIL[USER]=0 THEN                                   01465000
                    UFLNK[I]:=USFIL[USER]:=I;                           01466000
                UFLNK[I]:=USFIL[USER];                                  01467000
                USFIL[USER]:=I;                                         01468000
        END;END;                                                        01469000
        FOR I:=1 STEP 1 UNTIL MAXMIX DO IF USVAL[I] THEN                01470000
        BEGIN                                                           01471000
            J:=USFIL[I];                                                01472000
            WHILE NOT(J=UFLNK[J]) DO J:=UFLNK[J];                       01473000
            UFLNK[J]:=USFIL[I];                                         01474000
        END;                                                            01480000
    END                                                                 01481000
    ELSE                                                                01482000
    BEGIN                                                               01483000
        RESTRT:=FALSE;                                                  01483500
        ZEROUT(RBL9,TEXT[0,0]);                                         01484000
        USSTA[USER] := STATUS(USSTA[USER],3);                           01484500
        FOR I:=1 STEP 1 UNTIL SEGPAG DO                                 01485000
            WRITE(O,WDSBLK,TEXT[0,*]);                                  01486000
        LOCK(O);                                                        01487000
        OLDSEGNO:=SEGPAG-1; BAKUPD(OLDSEGNO,0);                         01487200
        USSTA[USER] := STATUS(USSTA[USER],4);                           01487500
        FOR I:=0 STEP 1 UNTIL MAXMIX DO                                 01488000
        BEGIN                                                           01489000
        RESTARTSW[I]:=FALSE;                                            01489500
            FETCH(0); UPD[BUF]:=TRUE;                                   01490000
            TEXT[BUF,RFL0]:=TEXT[BUF,RBL0]:=                            01491000
            RCSBLK|((SEG[BUF]:=MAXFIL+I+1)-1)+1;                        01492000
        END;                                                            01493000
    END;                                                                01494000
    END;                                                                01495000
END*;                                                                   01496000
            USEFUL:=TRUE;                                               01497000
            GOODBYE:=TRUE;   FRST:=TRUE;                                01497500
        WHILE USEFUL DO                                                 01498000
        BEGIN                                                           01499000
            DO INPT UNTIL HELLO OR NOT GOODBYE OR NOT USEFUL;           01500000
            FRST:=FALSE;                                                01500500
            IF HELLO THEN EDIT;                                         01501000
            IF USEFUL THEN OUPT;                                        01502000
    END;                                                                01503000
    CLOSE (  EDITORS , PURGE ) ;                                        01503500
END.                                                                    01504000
END;END.        LAST CARD ON 0CRDING TAPE                               99999999
