BEGIN                                                                   00010000
    INTEGER COMMON;                                                     00020000
    INTEGER I;                                                          00030000
    FILE IN DISK DISK SERIAL "MCP""PRT"(1,65);                          00035000
    REAL R;                                                             00040000
    ARRAY PRTS[0:64];                                                   00050000
                                                                        00060000
    ARRAY NAME[129:778];                                                00070000
              ARRAY NAMS[0:844];                                        00080000
    ARRAY INAMS,                                                        00090000
          INAME[0:194];                                                 00100000
                                                                        00110000
    REAL VJOBNUM,VBED;                                                  00120000
    ARRAY STAX[0:255]; INTEGER MAXSTK,BEDSTK;                           00130000
    ARRAY MEMORY[0:63,0:511];                                           00140000
    DEFINE M=MEMORY#, %                                                 00150000
           ROW=[33:6]#, %                                               00160000
           COL=[39:9]#; %                                               00170000
    DEFINE MIXMAX=9#;                                                   00180000
    DEFINE SLATE            = PRTS[00]#,                                00190000
           NSLATE           = PRTS[01]#,                                00200000
           LSLATE           = PRTS[02]#,                                00210000
           ESPBIT           = PRTS[03]#,                                00220000
           AVAIL            = PRTS[04]#,                                00230000
           MSTART           = PRTS[05]#,                                00240000
           MEND             = PRTS[06]#,                                00250000
           TOGLE            = PRTS[07]#,                                00260000
           BED              = PRTS[08]#,                                00270000
            INTABLE         =PRTS[09]#,                                 00280000
            LEFTOFF         =PRTS[10]#,                                 00290000
            DALOC           =PRTS[11]#,                                 00300000
           PRT              = PRTS[12]#,                                00310000
           JAR              = PRTS[13]#,                                00320000
           INTRNSC          = PRTS[14]#,                                00330000
           SHEET            = PRTS[15]#,                                00340000
           JOBNUM           = PRTS[16]#,                                00350000
           PRYOR            = PRTS[17]#,                                00360000
           NFO              = PRTS[18]#,                                00370000
           ISTACK           = PRTS[19]#,                                00380000
           PROCTIME         = PRTS[20]#,                                00390000
           IOTIME           = PRTS[21]#,                                00400000
           CHANNEL          = PRTS[22]#,                                00410000
           FINALQUE         = PRTS[23]#,                                00420000
           LOCATQUE         = PRTS[24]#,                                00430000
           IOQUEAVAIL       = PRTS[25]#,                                00440000
           IOQUE            = PRTS[26]#,                                00450000
           UNIT             = PRTS[27]#,                                00460000
           TINU             = PRTS[28]#,                                00470000
           WAITQUE          = PRTS[29]#,                                00480000
           NEXTWAIT         = PRTS[30]#,                                00490000
           FIRSTWAIT        = PRTS[31]#,                                00500000
           LABELTABLE       = PRTS[32]#,                                00510000
           MULTITABLE       = PRTS[33]#,                                00520000
           RDCTABLE         = PRTS[34]#,                                00530000
           OPTION           = PRTS[35]#,                                00540000
           MESSAGEHOLDER    = PRTS[36]#,                                00550000
           PRNTABLE         = PRTS[37]#,                                00560000
           INITIALIZE       = PRTS[38]#,                                00570000
            P1MIX            = PRTS[39]#,                               00571000
            P2MIX            = PRTS[40]#,                               00572000
            DATE            =(119)#,                                    00573000
            CLOCK           =(120)#,                                    00574000
            XCLOCK          =(121)#,                                    00575000
           MCP             = PRTS[62]#,                                 00576000
           PRTMAX           = PRTS[63]#,                                00580000
           INTMAX           = PRTS[64]#;                                00590000
   INTEGER TIMEANALYZED,DATEANALYZED,TIMETAKEN,DATETAKEN,               00590050
   TIMELASTHL,SINCSLASTHL,MINUTES,SECONDS,DAYS,YEARS;                   00590100
   REAL DATX,XCLOCX,CLOCX,TEMP,KINDS,MCPVERSION;                        00590150
   FORMAT OUT FMXX("DATE ANALYZED ",I2,"/",I2,"/",I2/                   00590200
   "TIME ANALYZED ",I2,":",I2,":",I2),                                  00590250
X1("MCP VERSION NUMBER ",A*/                                            00590300
   "DATE TAKEN   ",I2,"/",I2,"/",I2/                                    00590350
   "TIME TAKEN    ",I2,":",I2,":",I2),                                  00590400
   FMX2("TIME OF THE LAST HALT-LOAD ",I2,":",I2,":",I2),                00590450
   FMX3("TIME SINCE LAST HALT-LOAD ",I2,":",I2,":",I2);                 00590500
     FORMAT BADBED("********* BAD BED ENTRY *********");                00590550
     FORMAT BADDATE ("BAD DATE TAKEN ....."),                           00590600
            BADXCLOCK ("BAD TIME TAKEN ....."),                         00590650
            BADCLOCK("BAD TIME OF H/L");                                00590700
        FORMAT BADCELL3("WORD 3 HAS THE FLAG BIT ON.....");             00590750
     PROCEDURE TIMES (WHEN,HRS,MIN,SEC);                                00590800
     REAL WHEN;  INTEGER SEC,MIN,HRS;                                   00590850
     BEGIN                                                              00590900
     REAL TIMESTORAGE;                                                  00590950
            TIMESTORAGE := WHEN.[9:39]/60;                              00591000
              SEC := TIMESTORAGE MOD 60 - .5;                           00591050
              TIMESTORAGE := TIMESTORAGE / 60;                          00591100
              MIN := TIMESTORAGE MOD 60 - .5;                           00591150
              HRS := TIMESTORAGE DIV 60 - .5;                           00591200
              END OF PROCEDURE TIMES;                                   00591250
     PROCEDURE DATES(ADATE,MONTH,DAY,YEAR);                             00591300
     VALUE ADATE;                                                       00591350
     ALPHA ADATE;                                                       00591400
     INTEGER MONTH,DAY,YEAR ;                                           00591450
        BEGIN                                                           00591500
          REAL Y,D,M;                                                   00591550
          LABEL ON;                                                     00591600
          ARRAY DAYTABLE [0:11];                                        00591650
          STREAM PROCEDURE CONV (YEAR,DAY,DAT );                        00591700
           VALUE DAT ;                                                  00591750
           BEGIN                                                        00591800
     SI:= LOC DAT;                                                      00591850
     SI := SI +3;                                                       00591900
     DI := YEAR; DS := 2 OCT;                                           00591950
     DI := DAY; DS := 3 OCT;                                            00592000
           END;                                                         00592050
          FILL DAYTABLE [*] WITH                                        00592100
           0,31,59,90,120,151,181,212,243,273,304,334;                  00592150
          CONV (Y,D,ADATE);                                             00592200
          IF ((Y MOD 4)=0) AND (Y!0) THEN                               00592250
            BEGIN                                                       00592300
              IF D =60 THEN                                             00592350
                BEGIN                                                   00592400
     M := 1; GO TO ON;                                                  00592450
                END;                                                    00592500
              IF D > 60 THEN D:=D-1;                                    00592550
            END;                                                        00592600
     FOR M := 0 STEP 1 UNTIL 11 DO                                      00592650
            IF DAYTABLE [M] GEQ D THEN GO TO ON;                        00592700
          ON:                                                           00592750
     MONTH := M;                                                        00592800
      IF M=0 THEN D:=0 ELSE %GO AHEAD                                   00592850
     DAY := D - DAYTABLE[M-1];                                          00592900
     YEAR :=Y;                                                          00592950
        END OF PROCEDURE DATE;  %RCC                                    00593000
    FILE P 4(3,15);                                                     00600000
    PROCEDURE NEXTPAGE;                                                 00610000
    WRITE(P[PAGE]);                                                     00620000
                                                                        00630000
    FORMAT STARS(20("******"));                                         00640000
COMMENT:THE DEFINES BELOW MUST CORRESPOND TO THOSE IN FILL/PRT;         00641100
    DEFINE BREAKOUT      = MCP.[47:1]#,                                 00641200
           CHECKLINK     = MCP.[46:1]#,                                 00641300
           DATACOM       = MCP.[45:1]#,                                 00641400
           DCLOG         = MCP.[44:1]#,                                 00641500
           DCSPO         = MCP.[43:1]#,                                 00641600
           DEBUGGING     = MCP.[42:1]#,                                 00641700
           DFX           = MCP.[41:1]#,                                 00641800
           DISKLOG       = MCP.[40:1]#,                                 00641900
           DUMPP         = MCP.[39:1]#,                                 00642000
           INQUIRY       = MCP.[38:1]#,                                 00642100
           SAVERESULTS   = MCP.[37:1]#,                                 00642200
           SHAREDISK     = MCP.[36:1]#,                                 00642300
           STATISTICS    = MCP.[35:1]#,                                 00642400
            MAXOPT       =13#;%                                         00642500
FORMAT MCPHDR("DCMCP. COMPILE-TIME OPTIONS:");                          00642700
SWITCH FORMAT MCPOPT:=(        "BREAKOUT")                              00642800
                          ,(    "CHECKLINK")                            00642900
                          ,(    "DATACOM")                              00643000
                          ,(    "DCLOG")                                00643100
                          ,(    "DCSPO")                                00643200
                          ,(    "DEBUGGING")                            00643300
                          ,(    "DFX")                                  00643400
                          ,(    "DISKLOG")                              00643500
                          ,(    "DUMP")                                 00643600
                          ,(    "INQUIRY")                              00643700
                          ,(    "SAVERESULTS")                          00643800
                          ,(    "SHAREDISK")                            00643900
                          ,(    "STATISTICS")                           00644000
                                            ;                           00644100
BOOLEAN STREAM PROCEDURE BITON(W,B);                                    00644200
    VALUE B;                                                            00644300
BEGIN                                                                   00644400
    SI:=W;SKIP B SB;                                                    00644500
    IF SB THEN TALLY:=1;                                                00644600
    BITON:=TALLY;                                                       00644700
END OF BITON;                                                           00644800
PROCEDURE PRINTMCPOPTIONS;                                              00644900
BEGIN                                                                   00645000
                                                                        00645100
    WRITE(P[DBL],MCPHDR);                                               00645200
     FOR I:=0 STEP 1 UNTIL MAXOPT-1 DO                                  00645300
    IF BITON(MCP,47-I) THEN WRITE(P,MCPOPT[I]);                         00645400
    WRITE(P[DBL]);                                                      00645500
END OF PRINTMCPOPTIONS;                                                 00645600
    PROCEDURE NEXTITEM;                                                 00650000
    BEGIN                                                               00660000
        WRITE(P);                                                       00670000
        WRITE(P[DBL],STARS);                                            00680000
    END;                                                                00690000
                                                                        00700000
    BOOLEAN ARRAY MODON[0:7];                                           00710000
    INTEGER MAXMOD,MAXCOR;                                              00720000
                                                                        00730000
    DEFINE FF=[18:15]#, %                                               00740000
           CF=[33:15]#; %                                               00750000
    BOOLEAN LNKSOK,AVALNKOK,SOMOKF,SOMOKB;                              00760000
                                                                        00770000
    % UTILITY PROCEDURES                                                00780000
                                                                        00790000
    REAL PROCEDURE OCTAL(N);%                                           00800000
        VALUE N; %                                                      00810000
        INTEGER N;%                                                     00820000
        % N.[1:23]=0 SO THAT IF N CONTAINS AT MOST A HALF-WORD THEN     00830000
        % OCTAL IF PRINTED USING O FORMAT, OR A FORMAT FOR FEWER OCTADES00840000
        % WILL BE THE OCTAL REPRESENTATION OF N                         00850000
                                                                        00860000
    OCTAL:=N.[45:3]&(IF N>7 THEN OCTAL(N.[24:21]) ELSE 0)[3:9:39];      00870000
                                                                        00880000
    REAL STREAM PROCEDURE CHRS(AT,SKIPPING,MANY);                       00890000
        VALUE SKIPPING,MANY; %                                          00900000
        % RETURNING THE 7 OR LESS CHRS REQUIRED                         00910000
    BEGIN                                                               00920000
        SI:=AT; SI:=SI+SKIPPING;                                        00930000
        DI:=LOC CHRS; DS:=8 LIT"0"; DI:=DI-MANY;                        00940000
        DS:=MANY CHR;                                                   00950000
    END CHRS;                                                           00960000
                                                                        00970000
    INTEGER PROCEDURE HIHALF(LOC);                                      00980000
        VALUE LOC;                                                      00990000
        INTEGER LOC; %                                                  01000000
    HIHALF:=CHRS(M[LOC.ROW,LOC.COL],0,4); %                             01010000
                                                                        01020000
    INTEGER PROCEDURE LOHALF(LOC); %                                    01030000
        VALUE LOC;                                                      01040000
        INTEGER LOC; %                                                  01050000
    LOHALF:=CHRS(M[LOC.ROW,LOC.COL],4,4); %                             01060000
                                                                        01070000
    BOOLEAN STREAM PROCEDURE FLGBIT(WORD);                              01080000
    BEGIN                                                               01090000
        SI:=WORD; %                                                     01100000
        IF SB THEN TALLY:=1; %                                          01110000
        FLGBIT:=TALLY; %                                                01120000
    END FLGBIT; %                                                       01130000
                                                                        01140000
    PROCEDURE PRINT(FROM,TOO); %                                        01150000
        VALUE FROM,TOO; %                                               01160000
        INTEGER FROM,TOO; %                                             01170000
    BEGIN %                                                             01180000
                                                                        01210000
        BOOLEAN STREAM PROCEDURE EQUAL(ONE,TWO); %                      01220000
        BEGIN %                                                         01230000
            SI:=ONE; DI:=TWO; %                                         01240000
            IF 8 SC=DC THEN TALLY:=1; %                                 01250000
            EQUAL:=TALLY; %                                             01260000
        END EQUAL; %                                                    01270000
    DEFINE OCTADE = (DS:=3 RESET;3(IF SB THEN DS:=SET ELSE              01270100
                     DS:=RESET;SKIP SB))# ;                             01270150
    ALPHA ARRAY ALINE[0:17];                                            01270200
    STREAM PROCEDURE BUILD (FROM,LINE,XA,NA,XB,NB,NC);                  01270300
           VALUE   FROM,NA,NB,NC;                                       01270350
         BEGIN  DI:=LINE;SI:=LOC FROM;SI:=SI+5;SKIP 3SB ;               01270400
                5 OCTADE;DS:=LIT" ";SI:=XA;                             01270450
                NA(DS:=LIT" ";2(DS:=LIT" ";8 OCTADE));SI:=XB;           01270500
                NB(DS:=LIT" ";2(DS:=LIT" ";8 OCTADE));                  01270600
                NC(DS:=19 LIT" ");END BUILD;                            01270650
                                                                        01280000
        BOOLEAN PREV,THIS,STARD; %                                      01290000
        INTEGER I,R,C; %                                                01300000
       TOO:=TOO.[32:16];  FROM:=FROM.[32:16];                           01310000
        IF TOO>FROM THEN %                                              01320000
        DO %                                                            01330000
        BEGIN %                                                         01340000
            IF THIS:=(TOO-FROM>6) THEN % NOT THE LAST LINE              01350000
            BEGIN %                                                     01360000
                R:=(I:=FROM).ROW; %                                     01370000
                C:=I.COL; %                                             01380000
                WHILE %                                                 01390000
                    (FROM+5>I:=I+1) AND %                               01400000
                (THIS:=EQUAL(M[R,C],M[I.ROW,I.COL])) DO; %              01410000
                IF PREV THEN %                                          01420000
                PREV:=EQUAL(M[R,C],M[(FROM-1).ROW,(FROM-1).COL]); %     01430000
            END; %                                                      01440000
            IF PREV AND THIS THEN %                                     01450000
                IF STARD THEN %                                         01460000
                ELSE %                                                  01470000
                BEGIN %                                                 01480000
                    WRITE(P,STARS); %                                   01490000
                    STARD:=TRUE; %                                      01500000
                END %                                                   01510000
            ELSE %                                                      01520000
            BEGIN %                                                     01530000
                STARD:=FALSE; %                                         01540000
                PREV:=THIS; %                                           01550000
         R:=MIN(6,TOO-FROM);                                            01560000
         IF(FROM+R).ROW NEQ FROM.ROW THEN % CROSS ROW ROUND             01562000
         BUILD(FROM,ALINE[*],M[FROM.ROW,FROM.COL],512-FROM.COL,         01565000
               M[(FROM+R).ROW,0],(FROM+R).COL,IF R LSS 6 THEN           01570000
               6-R ELSE 0) ELSE % STILL IN SAME ROW OF M ARRAY          01572000
         BUILD(FROM ,ALINE[*],M[FROM.ROW,FROM.COL],R,                   01575000
               M[0,0],0,IF R LSS 6 THEN 6-R ELSE 0);                    01580000
         WRITE(P,18,ALINE[*]);                                          01585000
            END; %                                                      01590000
        END UNTIL (FROM:=FROM+6)}TOO; %                                 01600000
        WRITE(P); %                                                     01610000
    END PRINT; %                                                        01620000
                                                                        01630000
    FORMAT ITEM(A5," = ",2(O,X1),A5);                                   01640000
    ARRAY LINE[0:14];                                                   01650000
    STREAM PROCEDURE MOVE(S,D,W);                                       01660000
        VALUE W;                                                        01670000
    BEGIN                                                               01680000
        SI:=S; DI:=D; DS:= W WDS;                                       01690000
    END MOVE;                                                           01700000
                                                                        01710000
    PROCEDURE DISPLAY(WHAT,RANGE);                                      01720000
        VALUE WHAT,RANGE;                                               01730000
        INTEGER WHAT;                                                   01740000
        BOOLEAN RANGE;                                                  01750000
    BEGIN                                                               01760000
                                                                        01770000
        INTEGER H,L;                                                    01780000
        WRITE(LINE[*],ITEM,OCTAL(WHAT),                                 01790000
                OCTAL(H:=HIHALF(WHAT)),                                 01800000
                OCTAL(L:=LOHALF(WHAT)),                                 01810000
                IF RANGE THEN OCTAL(H.[32:10]+L.CF-1)                   01820000
                ELSE "     ");                                          01830000
        IF 129{WHAT AND WHAT{PRTMAX THEN                                01840000
        MOVE(NAMS[NAME[WHAT].CF],LINE[4],                               01850000
                 NAME[WHAT].FF);                                        01860000
        WRITE(P[DBL],7,LINE[*]);                                        01870000
    END DISPLAY; %                                                      01880000
                                                                        01890000
    BOOLEAN PROCEDURE OPERAND(AT,WHAT); %                               01900000
        VALUE AT; %                                                     01910000
        INTEGER AT; %                                                   01920000
        REAL WHAT; %                                                    01930000
    BEGIN %                                                             01940000
        INTEGER R,C; %                                                  01950000
                                                                        01960000
        IF FLGBIT(M[R:=AT.ROW,C:=AT.COL]) THEN %                        01970000
        OPERAND:=FALSE %                                                01980000
        ELSE %                                                          01990000
        BEGIN %                                                         02000000
            WHAT:=M[R,C]; %                                             02010000
            OPERAND:=TRUE; %                                            02020000
        END; %                                                          02030000
    END OPERAND; %                                                      02040000
                                                                        02050000
    BOOLEAN PROCEDURE DESCRIPTOR(AT,WHAT,KIND);                         02060000
        VALUE AT;                                                       02070000
        INTEGER AT;                                                     02080000
        REAL WHAT,KIND;                                                 02090000
    BEGIN                                                               02100000
        INTEGER R,C;                                                    02110000
        IF (KIND:=OCTAL(CHRS(M[R:=AT.ROW,C:=AT.COL],0,1)))}"40" THEN    02120000
        BEGIN                                                           02130000
            DESCRIPTOR:=TRUE;                                           02140000
            WHAT:=CHRS(M[R,C],1,7);                                     02150000
        END;                                                            02160000
    END DESCRIPTOR;                                                     02170000
                                                                        02180000
    BOOLEAN PROCEDURE PDATADESC(AT,WHAT);                               02190000
        VALUE AT;                                                       02200000
        INTEGER AT;                                                     02210000
        REAL WHAT;                                                      02220000
    BEGIN                                                               02230000
        INTEGER KIND;                                                   02240000
        IF DESCRIPTOR(AT,WHAT,KIND) AND                                 02250000
           KIND="50"     THEN                                           02260000
        PDATADESC:=TRUE;                                                02270000
    END;                                                                02280000
    INTEGER MINLNK,MINBAD,MAXBAD,MAXLNK; %                              02290000
     ARRAY COMMT[0:19]; BOOLEAN COMNT;                                  02300000
          PROCEDURE MCPENTRIES;                                         02300100
            BEGIN                                                       02300200
            DISPLAY(BED,FALSE);                                         02300300
            DISPLAY(PRT,FALSE);                                         02300400
            DISPLAY(JAR,FALSE);                                         02300500
            DISPLAY(INTRNSC,FALSE);                                     02300600
            DISPLAY(SHEET,FALSE);                                       02300700
            DISPLAY(JOBNUM,FALSE);                                      02300800
            DISPLAY(NFO,FALSE);                                         02300900
            DISPLAY(ISTACK,FALSE);                                      02301000
            DISPLAY(WAITQUE,FALSE);                                     02301100
            DISPLAY(P1MIX,FALSE);                                       02301200
            DISPLAY(P2MIX,FALSE);                                       02301300
            DISPLAY(INTABLE,FALSE);                                     02301400
            DISPLAY(LEFTOFF,FALSE);                                     02301500
            DISPLAY(DALOC,FALSE);                                       02301700
            END;                                                        02301900
      PROCEDURE GETPRTENTRIES;                                          02302100
       BEGIN                                                            02302200
          REAL ADR,WC,PRTROW,L;                                         02302300
          REAL ADRR;                                                    02302400
          INTEGER I,K;                                                  02302500
          ARRAY MIX[0:40];                                              02302600
          FORMAT PRTOUT(X10,"PRT LOCATIONS:"/                           02302700
                 X20,"MIX",X20,"PRT"/),                                 02302800
             F1( X20, A2,X20, A5);                                      02302900
          FORMAT BADPRT("********BAD PRT DESCRIPTOR*******");           02303000
          LABEL XIT;                                                    02303100
          LABEL NEXT;                                                   02303200
       IF PDATADESC(PRT,L) THEN ELSE BEGIN                              02303300
           WRITE (P,BADPRT); GO XIT END;                                02303400
       ADR:= L.[33:15];                                                 02303500
       WC:= L.[8:10];                                                   02303600
       K:=-1;                                                           02303700
      FOR I:= 1 STEP 1 UNTIL (WC-1) DO BEGIN                            02303800
       IF PDATADESC(ADR+I,PRTROW) THEN ELSE PRTROW:=0;                  02303900
          IF PRTROW =0 THEN                                             02304000
             GO TO NEXT;                                                02304100
           K:=K+1;                                                      02304200
           MIX[K]:= I; % SAVE MIX NUMBER                                02304300
           MIX[K:=K+1]:= PRTROW;                                        02304400
           NEXT:                                                        02304500
           END; % OF FINDING PRTS & VALID MIXES;                        02304600
        WRITE(P,PRTOUT);                                                02304700
        WRITE(P,F1,FOR I:=0 STEP 1 UNTIL K DO OCTAL(MIX[I].[33:15]));   02304800
         XIT:                                                           02304900
       END OF GETPRTENTRIES;                                            02305000
    PROCEDURE LOAD;                                                     02310000
    BEGIN                                                               02320000
        FILE IN MDUMP 2(2,513); LABEL EOT;                              02330000
                                                                        02340000
        ARRAY A[0:512];                                                 02350000
        FORMAT F(X8,"MEMORY MODS: ",8I1);                               02360000
        STREAM PROCEDURE MOVE(S,D);                                     02370000
        BEGIN                                                           02380000
            SI:=S; DI:=D;                                               02390000
            16(DS:=32 WDS);                                             02400000
        END MOVE;                                                       02410000
        STREAM PROCEDURE MOVER(S,D,W);                                  02411000
        VALUE W;                                                        02412000
        BEGIN                                                           02413000
             SI:=S;DI:=D;5(DS:=W WDS);                                  02414000
        END MOVER;                                                      02415000
        INTEGER I;                                                      02420000
    COMNT:=FALSE;                                                       02421000
     FOR I:=0 STEP 1 UNTIL 63 DO                                        02430000
        BEGIN                                                           02440000
            READ(MDUMP,513,A[*])[EOT];                                  02450000
            IF NOT BOOLEAN(A[0].[1:1]) THEN                             02460000
            BEGIN                                                       02470000
                MODON[A[0].[33:3]]:=TRUE;                               02480000
                MOVE(A[1],M[A[0].ROW,0]);                               02490000
            END;                                                        02500000
        END;                                                            02510000
      READ(MDUMP,20,COMMT[*])[EOT];                                     02511000
      COMNT := TRUE;                                                    02512000
        EOT: CLOSE(MDUMP);                                              02520000
        IF COMMON NEQ 1 THEN                                            02530000
                                                                        02540000
        BEGIN                                                           02550000
            READ(DISK,65,PRTS[*]);                                      02560000
            READ(DISK,65,NAME[*]);                                      02570000
            FOR I:=65 STEP 65 UNTIL 649                                 02571000
            DO BEGIN                                                    02572000
                    READ(DISK,65,A[*]);                                 02573000
                    MOVER(A[0],NAME[I+129],13);                         02574000
               END;                                                     02575000
            READ(DISK,65,NAMS[*]);                                      02576000
            FOR I:=65 STEP 65 UNTIL 844                                 02577000
            DO BEGIN                                                    02578000
                    READ(DISK,65,A[*]);                                 02579000
                    MOVER(A[0],NAMS[I],13);                             02580000
               END;                                                     02581000
            READ(DISK,65,INAME[*]);                                     02582000
            READ(DISK,65,A[*]);                                         02583000
            MOVER(A[0],INAME[65],13);                                   02584000
            READ(DISK,65,A[*]);                                         02584100
            MOVER(A[0],INAME[130],13);                                  02584200
            READ(DISK,65,INAMS[*]);                                     02585000
            READ(DISK,65,A[*]);                                         02590000
            MOVER(A[0],INAMS[65],13);                                   02600000
            READ(DISK,65,A[*]);                                         02601000
            MOVER(A[0],INAMS[130],13);                                  02602000
            CLOSE(DISK);                                                02610000
        END;                                                            02620000
        WRITE(P[DBL],F,FOR I:=0 STEP 1 UNTIL 7 DO                       02630000
                [IF MODON[I] THEN I ELSE 10]);                          02640000
        MAXMOD:=7; %                                                    02650000
        WHILE NOT MODON[MAXMOD] DO MAXMOD:=MAXMOD-1;                    02660000
        MAXCOR:=4096|(MAXMOD+1)-1; %                                    02670000
     FOR I~0 STEP 1 UNTIL 61 DO PRTS[I]~PRTS[I]+129;                    02680000
    END LOAD;                                                           02690000
                                                                        02700000
    PROCEDURE CHECKMEMORYLINKS;                                         02710000
    BEGIN %                                                             02720000
        BOOLEAN ZEROK; REAL V0; %                                       02730000
        BOOLEAN MSTARTOK; REAL VMSTART; %                               02740000
        REAL LINK,VLINK,PREVLINK;                                       02750000
        INTEGER AVAILN,AVAILT,AVAILM;                                   02760000
        DEFINE TYPMAX=22#; %                                            02770000
                                                                        02780000
        BOOLEAN PROCEDURE LINKOK(WORD); %                               02790000
            VALUE WORD; %                                               02800000
            REAL WORD; %                                                02810000
        LINKOK:=WORD.[3:6]{TYPMAX AND %                                 02820000
            WORD.[9:6]{MIXMAX     AND                                   02830000
            WORD.[15:3]=0; %                                            02840000
                                                                        02850000
        FORMAT RANGE(X8,"LINKS FROM ",A5," TO ",A5," ARE OK"),          02860000
               BAD(X8,A6," LINK AT ",A5," IS NOT OK"),                  02870000
               AVLBAD(X8,"AVAILABLE STORAGE TOTALS DO NOT CROSS CHECK"),02880000
               AVL(X8,"AVAILABLE LINKS ARE OK, TOTALING",               02890000
                   I4,"(DECIMAL) AREAS OF ",I5," WORDS UP TO ",         02900000
                   I5," WORDS EACH");                                   02910000
        INTEGER N,T,M; %                                                02920000
                                                                        02930000
        DISPLAY(0,FALSE);                                               02940000
        DISPLAY(MSTART,FALSE);                                          02950000
        DISPLAY(MEND,FALSE);                                            02960000
        DISPLAY(AVAIL,FALSE);                                           02970000
                                                                        02980000
        ZEROK:=OPERAND(0,V0)        AND                                 02990000
            V0.[1:2]=1              AND                                 03000000
           V0.[3:12]=0             AND                                  03010000
            V0.FF=(MAXLNK:=MAXCOR-2) AND                                03020000
            V0.CF<4096; %                                               03030000
        MSTARTOK:=OPERAND(MSTART,VMSTART) AND                           03040000
            VMSTART.[1:35]=0        AND %                               03050000
            VMSTART>0; %                                                03060000
                                                                        03070000
        IF LNKSOK:=ZEROK THEN MINLNK:=LINK:=V0.CF ELSE                  03080000
        IF LNKSOK:=MSTARTOK THEN MINLNK:=LINK:=VMSTART; %               03090000
        AVALNKOK:=LNKSOK; %                                             03100000
                                                                        03110000
        WHILE LNKSOK AND MAXLNK>PREVLINK DO %                           03120000
        IF LNKSOK:=(OPERAND(LINK,VLINK) AND                             03130000
                    LINKOK(VLINK)       AND %                           03140000
                    VLINK.FF=PREVLINK   AND %                           03150000
                   (IF LINK=MAXLNK                                      03160000
                    THEN VLINK.CF=0 %                                   03170000
                    ELSE VLINK.CF>LINK))THEN                            03180000
        BEGIN %                                                         03190000
            PREVLINK:=LINK; %                                           03200000
            LINK:=VLINK.CF; %                                           03210000
            IF AVALNKOK THEN %                                          03220000
            IF BOOLEAN(VLINK.[1:1]) THEN %                              03230000
            IF AVALNKOK:=MAXLNK>PREVLINK THEN %                         03240000
            IF AVALNKOK:=(OPERAND(PREVLINK+1,VLINK) AND %               03250000
                          VLINK.[1:17]=0) THEN %                        03260000
            BEGIN %                                                     03270000
                AVAILN:=AVAILN+1; %                                     03280000
                AVAILT:=AVAILT+VLINK.FF; %                              03290000
                AVAILM:=MAX(AVAILM,VLINK.FF); %                         03300000
            END; %                                                      03310000
        END; %                                                          03320000
                                                                        03330000
        IF LNKSOK THEN WRITE(P,RANGE,OCTAL(MINLNK),OCTAL(MAXLNK)) ELSE  03340000
        BEGIN %                                                         03350000
            IF SOMOKF:=PREVLINK>MINLNK THEN                             03360000
            BEGIN %                                                     03370000
                WRITE(P,RANGE,OCTAL(MINLNK),OCTAL(PREVLINK)); %         03380000
                WRITE(P,BAD,"MEMORY",OCTAL(LINK)); %                    03390000
            END; %                                                      03400000
            MINBAD:=LINK; %                                             03410000
            PREVLINK:=0; %                                              03420000
            LINK:=MAXLNK; %                                             03430000
            WHILE OPERAND(LINK,VLINK) AND %                             03440000
                LINKOK(VLINK)         AND                               03450000
                VLINK.CF=PREVLINK     AND %                             03460000
                LINK>VLINK.FF         DO %                              03470000
            BEGIN %                                                     03480000
                PREVLINK:=LINK; %                                       03490000
                LINK:=VLINK.FF; %                                       03500000
            END; %                                                      03510000
            IF PREVLINK=0 THEN MAXBAD:=MAXCOR+1 ELSE %                  03520000
            WRITE(P,RANGE,OCTAL(MAXLNK),OCTAL(MAXBAD:=PREVLINK)); %     03530000
            WRITE(P,BAD,"MEMORY",OCTAL(LINK)); %                        03540000
            SOMOKB:=PREVLINK>0;                                         03550000
        END; %                                                          03560000
                                                                        03570000
        IF AVALNKOK:=AVALNKOK AND LNKSOK THEN %                         03580000
        IF AVALNKOK:=(OPERAND(AVAIL,PREVLINK) AND                       03590000
            PREVLINK=MAXLNK+1       AND %                               03600000
            OPERAND(PREVLINK,VLINK) AND %                               03610000
            VLINK.[1:17]=0          AND %                               03620000
            VLINK.FF=32767)         THEN %                              03630000
        BEGIN %                                                         03640000
            WHILE AVALNKOK AND %                                        03650000
                  AVAILN>N AND %                                        03660000
                  AVAILT>T AND %                                        03670000
                  AVAILM}M DO %                                         03680000
            IF AVALNKOK:=(MAXCOR>LINK:=VLINK.CF AND LINK>0) THEN %      03690000
            IF AVALNKOK:=(OPERAND(LINK-1,VLINK) AND %                   03700000
                LINKOK(VLINK)        AND %                              03710000
                BOOLEAN(VLINK.[1:1])  AND %                             03720000
                OPERAND(LINK+1,VLINK) AND %                             03730000
                VLINK=PREVLINK        AND %                             03740000
                OPERAND(LINK,VLINK)   AND %                             03750000
                VLINK.[1:17]=0        AND %                             03760000
                VLINK.CF!LINK)        THEN %                            03770000
            BEGIN %                                                     03780000
                N:=N+1;                                                 03790000
                T:=T+VLINK.FF; %                                        03800000
                M:=MAX(M,VLINK.FF); %                                   03810000
                PREVLINK:=LINK; %                                       03820000
            END; %                                                      03830000
            IF NOT AVALNKOK THEN WRITE(P,BAD,"AVALBL",OCTAL(LINK)) ELSE 03840000
            IF NOT(AVALNKOK:=                                           03850000
                AVAILN=N AND %                                          03860000
                AVAILT=T AND %                                          03870000
                AVAILM=M AND %                                          03880000
                VLINK.CF=MAXLNK+1) THEN WRITE(P,AVLBAD) ELSE %          03890000
      WRITE(P,AVL,N,T,M);                                               03900000
        END; %                                                          03910000
        WRITE(P[DBL]); %                                                03920000
    END; %                                                              03930000
                                                                        03940000
    ARRAY MIXSTK[0:MIXMAX];                                             03950000
    PROCEDURE GETSTACKSFROMTHEBED;                                      03960000
    BEGIN                                                               03970000
        INTEGER I;                                                      03980000
        INTEGER MIX;                                                    03990000
        REAL V,TYP;                                                     04000000
        IF OPERAND(JOBNUM,VJOBNUM) THEN                                 04010000
        IF VJOBNUM.[1:8]=0 AND                                          04020000
           VJOBNUM.[47:1]=0 AND                                         04030000
           PDATADESC(BED,VBED) AND                                      04040000
           VJOBNUM{VBED.[8:10] THEN                                     04050000
        BEGIN                                                           04060000
            VBED:=VBED.CF;                                              04070000
            FOR I:=0 STEP 2 UNTIL VJOBNUM DO                            04080000
            IF DESCRIPTOR(VBED+I,V,TYP) THEN                            04090000
            BEGIN                                                       04100000
                BEDSTK:=MAXSTK:=MAXSTK+1;                               04110000
                IF (MIX:=V.[6:2]&TYP[43:45:3])>0 THEN                   04120000
                MIXSTK[MIX]:=BEDSTK;                                    04130000
                STAX[BEDSTK]:=                                          04140000
                    V.FF&                                               04150000
                    I[8:38:10]&                                         04160000
                    (REAL(MIX>0))[7:47:1];                              04170000
            END;                                                        04180000
        END;                                                            04190000
    END GETSTACKSFROMTHEBED;                                            04200000
    PROCEDURE DUMPMEMORYANDNOTESTACKS(FROM,TOO);                        04210000
        VALUE FROM,TOO;                                                 04220000
        INTEGER FROM,TOO;                                               04230000
    BEGIN                                                               04240000
        BOOLEAN BEDDED;                                                 04250000
        REAL L;                                                         04260000
          FORMAT ITEM(X2,A3," =",2(X4,A5));                             04261000
          REAL R,ADR,Q,LL; BOOLEAN INTR,QT;                             04262000
        INTEGER N,STK;                                                  04270000
          FORMAT PRTAVAIL(X27,"**** AVAILABLE,");                       04271000
          FORMAT MIXUSE (X27,"MIX=",I2,X1,A6);                          04272000
          FORMAT MCPUSE(X27,"MCP--",A6);                                04273000
          ARRAY ATP[0:15];                                              04274000
          INTR:=PDATADESC(INTRNSC,ADR) AND I=0;                         04275000
          ADR:=ADR.CF;  FILL ATP[*] WITH                                04276000
               "UNKNWN","CODE  ","DATA  ","IO-BUF",                     04277000
               "ALGFIB","INQBUF","COBFIB","INTSEG",                     04278000
              "     8","     9","    10","    11",                      04279000
              "STACK ","SCRDIR";                                        04280000
        WHILE FROM<TOO DO                                               04290000
        BEGIN                                                           04300000
            N:=(L:=M[FROM.ROW,FROM.COL]).CF;                            04310000
            IF BOOLEAN(L.[1:1]) THEN                                    04320000
      BEGIN WRITE(P[DBL],PRTAVAIL);                                     04321000
        PRINT(FROM,IF AVALNKOK AND COMMON NEQ 3 THEN FROM+3 ELSE N)     04330000
       END                                                              04331000
            ELSE                                                        04340000
            BEGIN                                                       04350000
   QT:=OPERAND(FROM+1,Q);                                               04351000
   IF R:=L.[9:6]!0 THEN WRITE(P[DBL],MIXUSE,R,ATP[L.[5:4]]) ELSE        04352000
   IF R:=L.[3:6]=1 AND QT THEN DISPLAY(Q.CF,FALSE) ELSE IF              04353000
   R=7 AND QT AND INTR AND OPERAND(ADR+(LL:=Q.[8:10]),R)                04354000
  AND R:=R.CF>1023 AND LL LEQ INTMAX THEN BEGIN                         04355000
   WRITE(LINE[*],ITEM,OCTAL(LL),OCTAL(R),OCTAL(R+Q.FF-1));              04356000
   MOVE(INAMS[INAME[LL].CF],LINE[4],INAME[LL].FF);                      04357000
   WRITE(P[DBL],7,LINE[*]); END ELSE                                    04358000
   WRITE(P[DBL],MCPUSE,ATP[L.[5:4]]);                                   04359000
      STK:=-1;    BEDDED:=FALSE;                                        04360000
         WHILE BEDSTK GEQ STK:=STK+1 AND NOT BEDDED DO                  04370000
         IF BEDDED:=                                                    04380000
         (L:=STAX[STK].CF>FROM AND N>L) THEN                            04390000
    IF STAX[STK].FF=0 THEN STAX[STK].FF:=FROM+2;                        04400000
                PRINT(FROM,N);                                          04450000
         IF NOT BEDDED AND     (M[FROM.ROW,FROM.COL]).[5:4] =12         04451000
         THEN STAX[MAXSTK:=MAXSTK+1]:=(N-1)&(FROM+2)[18:33:15];         04452000
            END;                                                        04460000
            FROM:=N;                                                    04470000
        END;                                                            04480000
    END DUMP MEMORY AND NOTE STACKS;                                    04490000
                                                                        04500000
    ARRAY MCPROG[0:255];                                                04510000
    INTEGER MAXMCPROG,ESP;                                              04520000
                                                                        04530000
    PROCEDURE SEQUENCE(ARAY,LIM);                                       04540000
        VALUE LIM;                                                      04550000
        ARRAY ARAY[0];                                                  04560000
        INTEGER LIM;                                                    04570000
    BEGIN                                                               04580000
        INTEGER T,L;                                                    04590000
        REAL V;                                                         04600000
                                                                        04610000
        STREAM PROCEDURE MOVE(S,D,D32,M32);                             04620000
            VALUE D32,M32;                                              04630000
        BEGIN                                                           04640000
            SI:=S; DI:=D;                                               04650000
            D32(DS:=32 WDS);                                            04660000
            DS:=M32 WDS;                                                04670000
        END MOVE;                                                       04680000
                                                                        04690000
        T:=LIM;                                                         04700000
        WHILE (T:=T-1)}0 DO                                             04710000
        BEGIN                                                           04720000
            I:=LIM;                                                     04730000
            L:=(V:=ARAY[T]).CF;                                         04740000
            WHILE ARAY[I].CF>L DO                                       04750000
                I:=I-1;                                                 04760000
            IF (L:=I-T)>0 THEN                                          04770000
            BEGIN                                                       04780000
                MOVE(ARAY[T+1],ARAY[T],L.[37:6],L.[43:5]);              04790000
                ARAY[I]:=V;                                             04800000
            END;                                                        04810000
        END;                                                            04820000
    END SEQUENCE;                                                       04830000
                                                                        04840000
    PROCEDURE GETSORTANDLISTMCPROG;                                     04850000
    BEGIN                                                               04860000
        REAL R;                                                         04870000
        INTEGER TYP;                                                    04880000
        FORMAT F(X8,"PRESENT MCP PROGRAM SEGMENTS"//                    04890000
                "PRT",X5,"DESCRIPTOR",X8,"THRU"//);                     04900000
                                                                        04910000
        IF DESCRIPTOR(ESPBIT,R,TYP) AND TYP="75" THEN                   04920000
        MCPROG[MAXMCPROG:=0]:=                                          04930000
            (ESP:=R.CF)&                                                04940000
            (ESP+R.[8:10]-1)[18:33:15]&                                 04950000
            ESPBIT[8:38:10]                                             04960000
        ELSE MAXMCPROG:=-1;                                             04970000
                                                                        04980000
        FOR I:=129 STEP 1 UNTIL PRTMAX DO                               04990000
        IF DESCRIPTOR(I,R,TYP) AND                                      05000000
           (TYP="75" OR TYP="77") AND                                   05010000
           R.CF!ESP          THEN                                       05020000
        MCPROG[MAXMCPROG:=MAXMCPROG+1]:=                                05030000
            R.CF&                                                       05040000
            (R.CF+R.[8:10]-1)[18:33:15]&                                05050000
            I[8:38:10];                                                 05060000
                                                                        05070000
        SEQUENCE(MCPROG,MAXMCPROG);                                     05080000
                                                                        05090000
        NEXTPAGE;                                                       05100000
        WRITE(P,F);                                                     05110000
        FOR I:=0 STEP 1 UNTIL MAXMCPROG DO                              05120000
        DISPLAY(MCPROG[I].[8:10],TRUE);                                 05130000
    END GET SORT AND LIST PRESENT MCP PROGRAM SEGMENTS;                 05140000
                                                                        05150000
    ARRAY INTSP[0:63];                                                  05160000
    INTEGER INTSPMAX;                                                   05170000
    PROCEDURE GETSORTANDLISTINTRINSICS;                                 05180000
    BEGIN                                                               05190000
        INTEGER IMAX,TYP;                                               05200000
        REAL ADR,R,L;                                                   05210000
        FORMAT ITEM(X2,A3," =",2(X4,A5)),                               05220000
                F(X8,"PRESENT INTRINSICS"/                              05230000
                  "INDEX",X7,"FROM",X5,"THRU"/);                        05240000
        INTSPMAX:=-1;                                                   05250000
        IF DESCRIPTOR(INTRNSC,ADR,TYP) AND TYP="50" THEN                05260000
        BEGIN                                                           05270000
            IMAX:=ADR.[8:10]-1;                                         05280000
            ADR:=ADR.CF;                                                05290000
            IF IMAX>0 THEN                                              05300000
            FOR I:=1 STEP 1 UNTIL IMAX DO                               05310000
            IF OPERAND(ADR+I,R) AND R.CF>1023 THEN                      05320000
            INTSP[INTSPMAX:=INTSPMAX+1]:=                               05330000
                R.CF&                                                   05340000
                (IF OPERAND(R.CF-1,L) AND                               05350000
                    0<(L:=L.FF) AND                                     05360000
                    L{1023 THEN                                         05370000
                R.CF+L-1 ELSE R.CF)[18:33:15]&                          05380000
                I[8:38:10];                                             05390000
        END;                                                            05400000
        IF INTSPMAX}0 THEN                                              05410000
        BEGIN                                                           05420000
            NEXTPAGE;                                                   05430000
            DISPLAY(INTRNSC,TRUE);                                      05440000
            WRITE(P,F);                                                 05450000
            SEQUENCE(INTSP,INTSPMAX);                                   05460000
            FOR I:=0 STEP 1 UNTIL INTSPMAX DO                           05470000
            BEGIN                                                       05480000
                WRITE(LINE[*],ITEM,OCTAL(L:=INTSP[I].[8:10]),           05490000
                      OCTAL(INTSP[I].CF),                               05500000
                      OCTAL(INTSP[I].FF));                              05510000
                IF L{INTMAX THEN                                        05520000
                MOVE(INAMS[INAME[L].CF],LINE[4],                        05530000
                           INAME[L].FF);                                05540000
                WRITE(P[DBL],7,LINE[*]);                                05550000
            END;                                                        05560000
        END;                                                            05570000
    END GET SORT AND LIST PRESENT INTRINSICS;                           05580000
                                                                        05590000
    STREAM PROCEDURE MOVC(S,SP,D,DP,W,C);                               05600000
        VALUE SP,DP,W,C;                                                05610000
    BEGIN                                                               05620000
        SI:=S; SI:=SI+SP;                                               05630000
        DI:=D; DI:=DI+DP;                                               05640000
        W(DS:=8 CHR); DS:=C CHR;                                        05650000
    END MOVC;                                                           05660000
    BOOLEAN PROCEDURE WITHIN(ARAY,AMAX,ITEM,RESULT,PLUS);               05670000
        VALUE AMAX,ITEM;                                                05680000
        ARRAY ARAY[0];                                                  05690000
        INTEGER AMAX,ITEM,RESULT,PLUS;                                  05700000
    BEGIN                                                               05710000
        BOOLEAN FOUND;                                                  05720000
        LABEL EXIT;                                                     05730000
        IF AMAX}0 THEN                                                  05740000
        FOR I:=0 STEP 1 UNTIL AMAX DO                                   05750000
        IF FOUND:=                                                      05760000
            (ARAY[I].CF{ITEM AND ITEM {ARAY[I].FF) THEN                 05770000
        BEGIN                                                           05780000
            RESULT:=ARAY[I].[8:10];                                     05790000
            PLUS:=ITEM-ARAY[I].CF;                                      05800000
            GO TO EXIT;                                                 05810000
        END;                                                            05820000
        EXIT: WITHIN:=FOUND;                                            05830000
    END WITHIN;                                                         05840000
    ARRAY PROGS[0:3,0:255]; INTEGER PROWS;                              05850000
    PROCEDURE DUMPSTACK(INX);                                           05860000
        VALUE INX;                                                      05870000
        INTEGER INX;                                                    05880000
    BEGIN                                                               05890000
        INTEGER TOS,BOS,SEG,ADR,H,L,PRO,I;                              05900000
        REAL V,R;                                                       05910000
        BOOLEAN NORMAL,FOUND;                                           05920000
        FORMAT HD(X8,"STACK FROM ",A5," DOWN TO ",A5),                  05930000
               S(X8,"BED[",A3,"] =",2(X1,O),", ",2(X1,O)),              05940000
             C(X8,3A6,A4,"  + ",A4,"(",I4,")");                         05950000
                                                                        05960000
     REAL STREAM PROCEDURE DECML(N);     VALUE N;                       05961000
     BEGIN                                                              05962000
          SI:=LOC N;  DI:=LOC DECML;  DS:=8 DEC;                        05963000
     END DECML;                                                         05964000
        NEXTITEM;                                                       05970000
        WRITE(P[DBL],HD,                                                05980000
                OCTAL(TOS:=STAX[INX].CF),                               05990000
                IF (BOS:=STAX[INX].FF)=0 THEN "*****"                   06000000
                ELSE OCTAL(BOS));                                       06010000
        NORMAL:=BOOLEAN(STAX[INX].[7:1]);                               06020000
          IF 0 LSS INX AND INX LEQ BEDSTK AND TOS-BOS GTR 512           06021000
          THEN BOS:=TOS-512;                                            06021100
         IF NORMAL AND INX=0 AND TOS-BOS GTR 512                        06021200
         THEN TOS:=BOS+512;                                             06021300
        IF INX=0 OR INX>BEDSTK THEN                                     06030000
        BEGIN                                                           06040000
            IF OPERAND(TOS,V) THEN                                      06050000
            IF(V=0) OR                                                  06060000
            ((V="[[[["&"[[[["[1:25:23]) AND                             06070000
                    NORMAL)            THEN                             06080000
            WHILE OPERAND(TOS-1,R) AND R=V DO                           06090000
            TOS:=TOS-1;                                                 06100000
        END                                                             06110000
        ELSE                                                            06120000
        BEGIN                                                           06130000
            WRITE(P,S,OCTAL(V:=STAX[INX].[8:10]),                       06140000
                    OCTAL(HIHALF(V:=V+VBED.CF)),                        06150000
                    OCTAL(LOHALF(V)),                                   06160000
                    OCTAL(R:=HIHALF(V+1)),                              06170000
                    OCTAL(V:=LOHALF(V+1)));                             06180000
            IF OCTAL(R.[24:6])="74" THEN                                06190000
            IF WITHIN(MCPROG,MAXMCPROG,V:=V.CF,SEG,ADR) THEN            06200000
            BEGIN                                                       06210000
                WRITE(LINE[*],C,"COMPLE","X SLEE","P AT  ",             06220000
           OCTAL(SEG),OCTAL(ADR),ADR);                                  06230000
       MOVE(NAMS[NAME[SEG].CF], LINE[6],                                06240000
                          NAME[SEG].FF);                                06250000
                WRITE(P[DBL],15,LINE[*]);                               06260000
            END                                                         06270000
            ELSE WRITE(P);                                              06280000
        END;                                                            06290000
        IF BOS=0 THEN BOS:=MAX(0,TOS-128) ELSE                          06300000
        IF BOS>TOS THEN BOS:=MAX(0,TOS-1);                              06310000
        FOR I:=TOS STEP -1 UNTIL BOS DO                                 06320000
        BEGIN                                                           06330000
            WRITE(P[DBL],ITEM,OCTAL(I),                                 06340000
                    OCTAL(H:=HIHALF(I)),                                06350000
                    OCTAL(L:=LOHALF(I)),"     ");                       06360000
            PRO:=-1;                                                    06370000
            IF (H.[24:2]=3) AND (L.CF>0) THEN                           06380000
            BEGIN                                                       06390000
                IF FOUND:=                                              06400000
                    WITHIN(MCPROG,MAXMCPROG,L.CF,SEG,ADR) AND           06410000
                    SEG!INITIALIZE          THEN                        06420000
                BEGIN                                                   06430000
                    WRITE(LINE[*],C,"MCP SE","GMENT ","AT    ",         06440000
           OCTAL(SEG),OCTAL(ADR),ADR);                                  06450000
         MOVE(NAMS[NAME[SEG].CF],LINE[6],                               06460000
                              NAME[SEG].FF);                            06470000
                END                                                     06480000
                ELSE                                                    06490000
                IF FOUND:=WITHIN(INTSP,INTSPMAX,L.CF,SEG,ADR) THEN      06500000
                BEGIN                                                   06510000
                    WRITE(LINE[*],C,"INTRIN","SIC NU","MBER  ",         06520000
           OCTAL(SEG),OCTAL(ADR),ADR);                                  06530000
            MOVE(INAMS[INAME[SEG].CF],LINE[6],                          06540000
                               INAME[SEG].FF);                          06550000
                END                                                     06560000
                ELSE                                                    06570000
                IF NORMAL THEN                                          06580000
                WHILE (PRO:=PRO+1){PROWS AND NOT FOUND DO               06590000
                IF FOUND:=WITHIN(PROGS[PRO,*],PROGS[PRO,255],           06600000
                    L.CF,SEG,ADR)            THEN                       06610000
                WRITE(LINE[*],C,"SEGMEN","T NUMB","ER    ",             06620000
          OCTAL(SEG),OCTAL(ADR),ADR);                                   06630000
                IF FOUND THEN                                           06640000
          WRITE(P[DBL],10,LINE[*]);                                     06650000
            END;                                                        06660000
        END;                                                            06670000
    END DUMPING A STACK;                                                06680000
                                                                        06690000
    INTEGER PROCEDURE SPREAD(AT,F,C);                                   06700000
        VALUE AT;                                                       06710000
        INTEGER AT,F,C;                                                 06720000
    BEGIN                                                               06730000
        SPREAD:=CHRS(M[AT.ROW,AT.COL],0,3);                             06740000
        C:=(F:=CHRS(M[AT.ROW,AT.COL],3,5)).CF;                          06750000
        F:=F.FF;                                                        06760000
    END SPREAD;                                                         06770000
                                                                        06780000
    PROCEDURE DUMPROGRAMS;                                              06790000
    BEGIN                                                               06800000
        INTEGER MIX,TYP,PRTH,PRTF,H,F,C,FPB,SD,AIT,S;                   06810000
        INTEGER A;                                                      06820000
        REAL JAR00;                                                     06830000
        REAL STARS,JAR0,PRT0;                                           06840000
        FORMAT HD(A5," = ",A6,2(X1,A5),X2,A1,X1,*A6),                   06850000
               H1(X8,"PROGRAM:",X8,"/",X7,", MIX = ",I1);               06860000
        INTEGER PCOL,SIZ,RO,CL,RP;                                      06870000
        REAL SEGS,SGM;                                                  06880000
        REAL SEG,ADR;                                                   06890000
        ARRAY LSTD[0:3];                                                06900000
        FORMAT SEGH(X8,"PRESENT PROGRAM SEGMENTS"//                     06910000
                    "SEGMENT SIZE  AT    THRU"//),                      06920000
                SEGMENT(X3,2(A4,X1),2(X1,A5),*("  INTRINSIC ",A3)),     06930000
                PD(A5," = ",A6,X1,2(A5,X1),", R+",A4,", +",A4);         06940000
        STARS:="****"; STARS.[6:18]:=STARS.[24:18];                     06950000
        IF DESCRIPTOR(JAR,JAR0,TYP) AND TYP="50" THEN                   06960000
        JAR0:=JAR0.CF;                                                  06970000
        IF DESCRIPTOR(PRT,PRT0,TYP) AND TYP="50" THEN                   06980000
        PRTH:=SPREAD(PRT,PRTF,PRT0);                                    06990000
                                                                        07000000
        IF PRT0>0 THEN                                                  07010000
        FOR MIX:=1 STEP 1 UNTIL MIXMAX DO                               07020000
        IF DESCRIPTOR(PRT0+MIX,R,TYP) AND TYP="50" THEN                 07030000
        BEGIN                                                           07040000
        NEXTPAGE;                                                       07050000
            WRITE(LINE[*],H1,MIX);                                      07060000
            IF                                                          07070000
                IF JAR0=0 THEN FALSE                                    07080000
                ELSE                                                    07090000
                DESCRIPTOR(JAR0+MIX,JAR00,TYP) AND TYP="50"             07100000
                AND JAR00.CF>0                   THEN                   07110000
            BEGIN                                                       07120000
                MOVC(M[(A:=JAR00).ROW,A.COL],1,                         07130000
                     LINE[2],1,0,7);                                    07140000
                MOVC(M[(A:=A+1).ROW,A.COL],1,                           07150000
                     LINE[3],1,0,7);                                    07160000
            END                                                         07170000
            ELSE                                                        07180000
            BEGIN                                                       07190000
                MOVC(STARS,1,LINE[2],1,0,7);                            07200000
                MOVC(STARS,1,LINE[3],1,0,7);                            07210000
            END;                                                        07220000
            WRITE(P[DBL],15,LINE[*]);                                   07230000
            NEXTITEM;                                                   07240000
            WRITE(P,HD,                                                 07250000
                                                                        07260000
                OCTAL(PRT),                                             07270000
                OCTAL(PRTH),OCTAL(PRTF),OCTAL(PRT0)," ",                07280000
                2,"PRT[*,","*]    ",                                    07290000
                                                                        07300000
                OCTAL(PRT0+MIX),                                        07310000
                OCTAL(SPREAD(PRT0+MIX,F,R)),OCTAL(F),OCTAL(R),          07320000
                IF F=0 THEN " " ELSE "*",                               07330000
                3,"PRT[MI","X,*], ","CF=R  ",                           07340000
                                                                        07350000
                OCTAL(R+3),                                             07360000
                OCTAL(H:=SPREAD(R+3,F,FPB)),OCTAL(F),OCTAL(FPB),        07370000
                IF OCTAL(H.[30:6])="50" THEN " " ELSE "*",              07380000
                2,"R+3, F","PB    ",                                    07390000
                                                                        07400000
                OCTAL(R+4),                                             07410000
                OCTAL(H:=SPREAD(R+4,F,SD)),OCTAL(F),OCTAL(SD),          07420000
                IF OCTAL(H.[30:6])="50" THEN " " ELSE "*",              07430000
                4,"R+4, S","EGMENT"," DICTI","ONARY ",                  07440000
                                                                        07450000
                OCTAL(R+6),                                             07460000
                OCTAL(H:=SPREAD(R+6,F,AIT)),OCTAL(F),OCTAL(AIT),        07470000
                IF BOOLEAN(H.[30:1]) THEN " " ELSE "*",                 07480000
                2,"R+6, A","IT    ",                                    07490000
                                                                        07500000
                OCTAL(R+7),                                             07510000
                OCTAL(H:=SPREAD(R+7,F,C)),OCTAL(F),OCTAL(C),            07520000
                IF H.[30:2]=3 AND F<R AND C=0 THEN " " ELSE "*",        07530000
                7,"R+7, L","AST MS","CW FOR"," WHICH"," MSFF ",         07540000
                  "WAS FA","LSE   ",                                    07550000
                                                                        07560000
                OCTAL(R+8),                                             07570000
                OCTAL(H:=SPREAD(R+8,F,C)),OCTAL(F),OCTAL(C),            07580000
                " ",                                                    07590000
                2,"R+10, ","INCW  ",                                    07600000
                                                                        07610000
                OCTAL(R+9),                                             07620000
                OCTAL(H:=SPREAD(R+9,F,C)),OCTAL(F),OCTAL(C),            07630000
                IF H=0 AND F=0 THEN " " ELSE "*",                       07640000
                9,"R+11, ","LITERA","L FOR ","LAST C","OMMUNI",         07650000
                  "CATE OR"," PROGR","AM REL","EASE  ",                 07660000
                                                                        07670000
                OCTAL(R+10),                                            07680000
                OCTAL(H:=SPREAD(R+10,S,C)),OCTAL(S),OCTAL(C),           07690000
                IF OCTAL(H.[30:6])="50" AND 0<S AND S<R AND R=C         07700000
                THEN " " ELSE "*",                                      07710000
                5,"R+12, ","FF = B","OTTOM ","OF THE"," STACK");        07720000
            NEXTITEM;                                                   07730000
            PROGS[PROWS:=0,255]:=PCOL:=-1;                              07740000
            IF DESCRIPTOR(R+4,SD,TYP) AND TYP="50" THEN                 07750000
            IF OPERAND(SD:=SD.CF,SEGS) AND SEGS.[1:32]=0 THEN           07760000
            BEGIN                                                       07770000
                WRITE(P,SEGH);                                          07780000
                FOR SEG:=1 STEP 1 UNTIL SEGS DO                         07790000
                IF OPERAND(SD+SEG,SGM) AND                              07800000
                    (ADR:=SGM.FF)>1023 THEN                             07810000
                BEGIN                                                   07820000
                    SIZ:=                                               07830000
                        IF OPERAND(ADR-1,SIZ) AND                       07840000
                        SIZ.[1:17]=0 AND                                07850000
                        SIZ.CF=                                         07860000
                            (IF BOOLEAN(SGM.[2:1]) THEN                 07870000
                             SGM.CF ELSE SEG)      THEN                 07880000
                        SIZ.FF ELSE 0;                                  07890000
                    IF BOOLEAN(SGM.[2:1]) THEN                          07900000
                    WRITE(P,SEGMENT,OCTAL(SEG),OCTAL(SIZ),OCTAL(ADR),   07910000
                            IF SIZ=0 THEN STARS ELSE OCTAL(ADR+SIZ-1),  07920000
                            1,OCTAL(SGM.CF))                            07930000
                    ELSE                                                07940000
                    BEGIN                                               07950000
                        IF (PCOL:=PCOL+1)=255 THEN                      07960000
                        BEGIN                                           07970000
                            PROGS[PROWS,255]:=254;                      07980000
                            PROWS:=PROWS+1;                             07990000
                            PCOL:=0;                                    08000000
                        END;                                            08010000
                        PROGS[PROWS,PCOL]:=                             08020000
                            ADR&                                        08030000
                            (IF SIZ=0 THEN 0 ELSE ADR+SIZ-1)[18:33:15]& 08040000
                            SEG[8:38:10];                               08050000
                    END;                                                08060000
                END;                                                    08070000
                IF (PROGS[PROWS,255]:=PCOL)}0 THEN                      08080000
                BEGIN                                                   08090000
                    FOR RO:=0 STEP 1 UNTIL PROWS DO                     08100000
                    SEQUENCE(PROGS[RO,*],PROGS[RO,255]);                08110000
                    SEGS:=PROWS+1;                                      08120000
                    FOR I:=0 STEP 1 UNTIL PROWS DO                      08130000
                    BEGIN                                               08140000
                        SEGS:=SEGS+PROGS[I,255];                        08150000
                        LSTD[I]:=0;                                     08160000
                    END;                                                08170000
                    FOR SEG:=1 STEP 1 UNTIL SEGS DO                     08180000
                    BEGIN                                               08190000
                        RO:=0;                                          08200000
                        IF PROWS>0 THEN                                 08210000
                        FOR I:=1 STEP 1 UNTIL PROWS DO                  08220000
                        IF LSTD[RO]=255 OR                              08230000
                            (LSTD[I]<255 AND                            08240000
                            PROGS[I,LSTD[I]].CF<PROGS[RO,LSTD[RO]].CF)  08250000
                                                             THEN       08260000
                        RO:=I;                                          08270000
                        WRITE(P,SEGMENT,                                08280000
                                OCTAL((SGM:=PROGS[RO,LSTD[RO]]).[8:10]),08290000
                                IF SGM.FF=0 THEN STARS ELSE             08300000
                                    OCTAL(SGM.FF-SGM.CF+1),             08310000
                                OCTAL(SGM.CF),OCTAL(SGM.FF));           08320000
                        LSTD[RO]:=LSTD[RO]+1;                           08330000
                    END;                                                08340000
                END;                                                    08350000
            END;                                                        08360000
             IF (AIT:=MIXSTK[MIX])=0 THEN                               08370000
            STAX[0]:=                                                   08380000
                (R-2)&                                                  08390000
                S[18:33:15]&                                            08400000
                1[7:47:1]                                               08410000
             ELSE IF STAX[AIT].FF=0 THEN STAX[AIT].FF:=S;               08411000
             DUMPSTACK(AIT);                                            08420000
        END;                                                            08430000
    END DUMPING NORMAL STATE PROGRAM INFO;                              08440000
                                                                        08450000
    PROCEDURE DUMPCONTROLSTACKS;                                        08460000
    BEGIN                                                               08470000
        FORMAT H(X8,"CONTROL STATE STACKS");                            08480000
        REAL V,R,A;                                                     08490000
        INTEGER INX,I;                                                  08500000
        NEXTPAGE;                                                       08510000
        WRITE(P[DBL],H);                                                08520000
        IF OPERAND(I:=111,R) AND                                        08530000
            R="EEEE"&"EEEE"[1:25:23] THEN                               08540000
        WHILE OPERAND(I-1,V) AND V=R DO                                 08550000
        I:=I-1;                                                         08560000
        STAX[0]:=I&64[18:33:15];                                        08570000
        DUMPSTACK(0);                                                   08580000
                                                                        08590000
                                                                        08600000
        IF DESCRIPTOR(ISTACK,A,R) AND R="50" THEN                       08610000
        IF (V:=A.[8:10])>0 AND (A:=A.CF)>0 THEN                         08620000
        BEGIN                                                           08630000
            IF OPERAND(I:=A+V-1,R) AND                                  08640000
                R="EEEE"&"EEEE"[1:25:23] THEN                           08650000
            WHILE OPERAND(I-1,V) AND V=R DO                             08660000
            I:=I-1;                                                     08670000
            R:=1;                                                       08680000
        END ELSE R:=0 ELSE R:=0;                                        08690000
                                                                        08700000
                                                                        08710000
        IF BEDSTK>0 THEN                                                08720000
        FOR INX:=1 STEP 1 UNTIL BEDSTK DO                               08730000
        IF BOOLEAN(STAX[INX].[7:1]) THEN ELSE                           08740000
        IF(V:=STAX[INX].CF) GTR A AND                                   08741000
        V LEQ I AND R=1 THEN I:=V ELSE                                  08742000
        DUMPSTACK(INX);                                                 08750000
        NEXTPAGE; DISPLAY(ISTACK,TRUE);                                 08750100
        IF R=1 THEN BEGIN                                               08750200
        STAX[0]:=I&A[18:33:15];                                         08750300
        DUMPSTACK(0); END;                                              08750400
        IF MAXSTK GTR BEDSTK THEN                                       08751000
        FOR INX:=BEDSTK+1 STEP 1 UNTIL MAXSTK DO DUMPSTACK(INX);        08752000
    END DUMPING CONTROL STATE STACKS;                                   08760000
                                                                        08770000
    PROCEDURE DUMPMCPINFO;                                              08780000
    BEGIN                                                               08790000
        REAL R,A,N,L,TA,TS,MA,MS,LA,LS,RA,RS,PA,PS;                     08800000
        INTEGER TYP,S,C;                                                08810000
        STREAM PROCEDURE MOVD(S,D,W);                                   08820000
            VALUE W;                                                    08830000
        BEGIN                                                           08840000
            LABEL EXIT;                                                 08850000
            SI:=S; DI:=D;                                               08860000
            W(8(IF SC="~" THEN JUMP OUT 2 TO EXIT; DS:=CHR));           08870000
            SI:=SI-1; DI:=DI-1;                                         08880000
            EXIT: DS:=CHR;                                              08890000
        END MOVD;                                                       08900000
        FORMAT SE(A3," = ",2(O,X1),X24,"(",O,X1,O,")"),                 08910000
                TF(X8,"BIT ",I2," = ",I1,", ",*A6/);                    08920000
        BOOLEAN STREAM PROCEDURE BITON(W,B);                            08930000
            VALUE B;                                                    08940000
        BEGIN                                                           08950000
            SI:=W; SKIP B SB;                                           08960000
            IF SB THEN TALLY:=1;                                        08970000
            BITON:=TALLY;                                               08980000
        END;                                                            08990000
        ARRAY TB[0:50];                                                 09000000
        REAL UA,US,IA,IS,FA,FS;                                         09010000
        FORMAT LUN(A3),                                                 09020000
            FT(A1,X1,A2,X1,A1,X1,A3,X1,A2,X1,A1,X1,A2,X1,A3),           09030000
            RT(A3,X1,A2,X1,A4,X1,A6,X1,A3),                             09040000
            PT(A1,X1,A1,X1,A5,X1,A5,X1,A6),                             09050000
            IOATH(X8,"FIELDS OF WORDS IN THE I/O ASSIGNMENT TABLES:"//  09060000
            X8,"TINU"/                                                  09070000
            X12,"  [0:3]"/                                              09080000
            X12,"1 [3:5]   HARDWARE UNIT NUMBER"/                       09090000
            X12,"  [8:3]"/                                              09100000
            X12,"2 [11:7]  POWER OF 2"/                                 09110000
            X12,"  [18:6]"/                                             09120000
            X12,"3 [24:1]  IN=0, OUT=1"/                                09130000
            X12,"  [25:5]"/                                             09140000
            X12,"4 [30:18] UNIT MNEMONIC"//                             09150000
            X8,"RDCTABLE"/                                              09160000
            X12,"  [0:8]"/                                              09170000
            X12,"1 [8:6]   MIX INDEX IF ASSIGNED"/                      09180000
            X12,"2 [14:10] REEL NUMBER"/                                09190000
            X12,"3 [24:17] CREATION DATE"/                              09200000
            X12,"4 [41:7]  CYCLE"//                                     09210000
            X8,"PRNTABLE"/                                              09220000
            X12,"  [0:1]"/                                              09230000
            X12,"1 [1:1]   IF WRITE RING PRESENT"/                      09240000
            X12,"  [2:13]"/                                             09250000
            X12,"2 [15:15] ADDRESS OF TOP I/O DESCRIPTOR"/              09260000
            X12,"3 [30:18] PHYSICAL REEL NUMBER"//                      09270000
            "LUN",X6,                                                   09280000
            "TINU",X24,                                                 09290000
            "MULTITABLE",X4,                                            09300000
            "LABELTABLE",X4,                                            09310000
            "RDCTABLE",X24,                                             09320000
            "PRNTABLE"/                                                 09330000
            X9,                                                         09340000
            X2,"1",X4,"2",X6,"3",X4,"4",X8,                             09350000
            X14,X14,                                                    09360000
            X4,"1",X2,"2",X4,"3",X6,"4",X8,                             09370000
            X2,"1",X7,"2",X5,"3",X5);                                   09380000
        BOOLEAN PROCEDURE VERIFY(WHAT,A,S);                             09390000
            VALUE WHAT;                                                 09400000
            INTEGER WHAT;                                               09410000
            REAL A,S;                                                   09420000
        BEGIN                                                           09430000
            DISPLAY(WHAT,FALSE);                                        09440000
            VERIFY:=                                                    09450000
                DESCRIPTOR(WHAT,A,S) AND                                09460000
                S="50" AND                                              09470000
                (S:=A.[8:10])>0 AND                                     09480000
                (A:=A.CF)>0 AND                                         09490000
                (A+S-1)<MAXCOR;                                         09500000
        END VERIFY;                                                     09510000
        FORMAT IOQSH("FIELDS OF WORDS IN THE I/O-QUEUE TABLES"//        09520000
            X8,"UNIT"/                                                  09530000
            X12,"  [0:1]"/                                              09540000
            X12,"1 [1:4]   UNIT TYPE"/                                  09550000
            X12,"2 [5:8]   ERROR FIELD"/                                09560000
            X12,"3 [13:1]  UNIT NOT READY"/                             09570000
            X12,"4 [14:1]  ERROR FLAG"/                                 09580000
            X12,"5 [15:1]  WAITING FOR AN I/O CHANNEL"/                 09590000
            X12,"6 [16:2]  I/O IN PROCESS"/                             09600000
            X12,"7 [18:15] INDEX OF FIRST I/O REQUEST"/                 09610000
            X12,"8 [33:15] INDEX OF LAST I/O REQUEST"//                 09620000
            X8,"LOCATQUE"/                                              09630000
            X12,"  [0:3]   = 5, DESCRIPTOR BITS"/                       09640000
            X12,"1 [3:5]   MIX INDEX"/                                  09650000
            X12,"  [8:4]"/                                              09660000
            X12,"2 [12:6]  LOGICAL UNIT NUMBER"/                        09670000
            X12,"3 [18:15] INDEX OF NEXT I/O REQUEST"/                  09680000
            X12,"4 [33:15] ADDRESS OF I/O DESCRIPTOR"//                 09690000
            "LUN/",X8,                                                  09700000
            "UNIT",X31,                                                 09710000
            "IOQUE",X19,                                                09720000
            "LOCATQUE",X21,                                             09730000
            "FINALQUE",X11/                                             09740000
            "INDEX",X7,                                                 09750000
            X2,"1",X2,"2",X3,"3",X1,"4",X1,"5",                         09760000
                X1,"6",X1,"7",X5,"8",X11,X24,                           09770000
            X2,"1",X5,"2",X2,"3",X5,"4"//                               09780000
                                           ),                           09790000
            IFO(A5),                                                    09800000
            UFO(A1,X1,A2,X1,A3,4(X1,A1),2(X1,A5)),                      09810000
            WFO(O,X1,O),                                                09820000
            LFO(A1,3(X1,A2),2(X1,A5));                                  09830000
                                                                        09840000
        NEXTPAGE;                                                       09850000
        DISPLAY(TOGLE,FALSE);                                           09860000
        IF OPERAND(TOGLE,R) THEN                                        09870000
        BEGIN                                                           09880000
            FOR I:=1 STEP 1 UNTIL 31 DO                                 09890000
            IF BITON(R,I) THEN                                          09900000
            WRITE(P,TF,I,1,-1);                                         09910000
            FILL TB[*] WITH                                             09920000
                "REMOTE","LOGFRE","E     ",                             09930000
                "SPOEDN","ULLOG ","      ",                             09940000
                "INTFRE","E     ","      ",                             09950000
                "QTRDY ","      ","      ",                             09960000
                "NOBACK","TALK  ","      ",                             09970000
                "KEYBOA","RDREAD","Y     ",                             09980000
                "BUMPTU","TIME  ","      ",                             09990000
                "ABORTA","BLE   ","      ",                             10000000
                "NSECON","DREADY","      ",                             10010000
                "HOLDFR","EE    ","      ",                             10020000
                "USERSP","ACEREA","DY    ",                             10030000
                "STORED","Y     ","      ",                             10040000
                "STACKU","SE    ","      ",                             10050000
                "SHEETF","REE   ","      ",                             10060000
                "STATUS","BIT   ","      ",                             10070000
                "HP2TOG","      ","      ";                             10080000
            FOR I:=32 STEP 1 UNTIL 47 DO                                10090000
            WRITE(P,TF,I,REAL(BITON(R,I)),3,FOR N:=0 STEP 1 UNTIL 2 DO  10100000
                [TB[3|(I-32)+N]]);                                      10110000
        END;                                                            10120000
                                                                        10130000
        NEXTITEM;                                                       10140000
        DISPLAY(OPTION,FALSE);                                          10150000
        IF OPERAND(OPTION,R) THEN                                       10160000
        BEGIN                                                           10170000
            FOR I:=1,3 STEP 1 UNTIL 25,33 DO                            10180000
            IF BITON(R,I) THEN                                          10190000
            WRITE(P,TF,I,1,-1);                                         10200000
            FILL TB[*] WITH                                             10210000
                "USEDRA","      ",                                      10220000
                "USEDRB","      ",                                      10230000
                "BOJMES","S     ",                                      10240000
                "EOJMES","S     ",                                      10250000
                "OPNMES","S     ",                                      10260000
                "TERMGO","      ",                                      10270000
                "GIVEDA","TE    ",                                      10280000
                "GIVETI","ME    ",                                      10290000
                "SAMEBR","EAKTAP","E     ",                             10300000
                "AUTOPR","INT   ","      ",                             10310000
                "CLEARW","RS, ST","OPUNT ",                             10320000
                "DISCON","DC, NO","TIFYOP",                             10330000
                "COPNME","SS    ",                                      10340000
                "CLOSEM","ESS   ",                                      10350000
                "      ","      ",                                      10360000
                "RETMSG","      ",                                      10370000
                "LIBMSG","      ",                                      10380000
                "SCHEDM","SG    ",                                      10390000
                "SECMSG","      ",                                      10400000
                "DSKTOG","      ",                                      10410000
                "RELTOG","      ",                                      10420000
                "PBDREL","      ";                                      10430000
            WRITE(P,TF,2,R.[2:1],2,"MOD3IO","S     ");                  10440000
            FOR I:=26 STEP 1 UNTIL 32,34,35 DO                          10450000
            WRITE(P,TF,I,REAL(BITON(R,I)),2,                            10460000
                TB[A:=28+2|(35-I)],TB[A+1]);                            10470000
            FOR I:=36 STEP 1 UNTIL 39 DO                                10480000
            WRITE(P,TF,I,REAL(BITON(R,I)),3,                            10490000
                TB[A:=16+3|(39-I)],TB[A+1],TB[A+2]);                    10500000
            FOR I:=40 STEP 1 UNTIL 47 DO                                10510000
            WRITE(P,TF,I,REAL(BITON(R,I)),2,                            10520000
                TB[A:=2|(47-I)],TB[A+1]);                               10530000
        END;                                                            10540000
        NEXTITEM;                                                       10550000
        DISPLAY(MESSAGEHOLDER,FALSE);                                   10560000
        IF OPERAND(MESSAGEHOLDER,R) AND (R:=R.CF)!0 THEN                10570000
        DO                                                              10580000
        BEGIN                                                           10590000
            WRITE(LINE[*],ITEM,OCTAL(R),                                10600000
                OCTAL(LOHALF(R)),OCTAL(HIHALF(R)),"     ");             10610000
            MOVD(M[(R+1).ROW,(R+1).COL],LINE[4],MIN(9,MAXCOR-R));       10620000
            WRITE(P,15,LINE[*]);                                        10630000
        END                                                             10640000
        UNTIL                                                           10650000
            (I:=I+1)>40 OR                                              10660000
            NOT OPERAND(R,R) OR                                         10670000
            (R:=R.CF)=0;                                                10680000
                                                                        10690000
        NEXTITEM;                                                       10700000
        DISPLAY(NSLATE,FALSE);                                          10710000
        DISPLAY(LSLATE,FALSE);                                          10720000
        IF VERIFY(SLATE,A,S) AND                                        10730000
            S.[47:1]=0 AND                                              10740000
            OPERAND(NSLATE,N) AND                                       10750000
            N.[1:8]=0 AND                                               10760000
            N<S AND                                                     10770000
            N.[47:1]=0 AND                                              10780000
            OPERAND(LSLATE,L) AND                                       10790000
            L.[1:8]=0 AND                                               10800000
            L<S AND                                                     10810000
            L.[47:1]=0 AND                                              10820000
            L!N THEN                                                    10830000
        DO                                                              10840000
        BEGIN                                                           10850000
            N:=(N+2)MOD S;                                              10860000
            WRITE(LINE[*],SE,OCTAL(N),                                  10870000
                OCTAL(HIHALF(A+N)),OCTAL(R:=LOHALF(A+N)),               10880000
                OCTAL(HIHALF(A+N+1)),OCTAL(LOHALF(A+N+1)));             10890000
            IF 129{(R:=R.CF) AND R{PRTMAX THEN                          10900000
            MOVE(NAMS[NAME[R].CF],LINE[3],                              10910000
                      NAME[R].FF);                                      10920000
            WRITE(P,15,LINE[*]);                                        10930000
        END UNTIL N=L;                                                  10940000
                                                                        10950000
        NEXTITEM; NEXTPAGE;                                             10960000
        IF VERIFY(TINU,TA,TS) AND                                       10970000
           VERIFY(MULTITABLE,MA,MS) AND                                 10980000
           VERIFY(LABELTABLE,LA,LS) AND                                 10990000
           VERIFY(RDCTABLE,RA,RS) AND                                   11000000
           VERIFY(PRNTABLE,PA,PS) THEN                                  11010000
        BEGIN                                                           11020000
            S:=MAX(TS,MS,LS,RS,PS)-1;                                   11030000
            WRITE(P,IOATH);                                             11040000
            FOR I:=0 STEP 1 UNTIL S DO                                  11050000
            BEGIN                                                       11060000
            WRITE(TB[*],LUN,OCTAL(I));                                  11070000
            IF I<TS THEN                                                11080000
            BEGIN                                                       11090000
                WRITE(LINE[*],FT,                                       11100000
                    (A:=HIHALF(TA+I)).[24:3],                           11110000
                    OCTAL(A.[27:5]),                                    11120000
                    A.[32:3],                                           11130000
                    OCTAL(A.[35:7]),                                    11140000
                    OCTAL(A.[42:6]),                                    11150000
                    (A:=LOHALF(TA+I)).[24:1],                           11160000
                    OCTAL(A.[25:5]),                                    11170000
                    A.[30:18]);                                         11180000
                MOVC(LINE[0],0,TB[1],1,2,6);                            11190000
            END;                                                        11200000
            IF I<MS THEN                                                11210000
                MOVC(M[(MA+I).ROW,(MA+I).COL],0,TB[4],5,1,0);           11220000
            IF I<LS THEN                                                11230000
                MOVC(M[(LA+I).ROW,(LA+I).COL],0,TB[6],3,1,0);           11240000
                IF I<RS THEN                                            11250000
                BEGIN                                                   11260000
                    WRITE(LINE[*],RT,                                   11270000
                    OCTAL((A:=HIHALF(RA+I)).[24:8]),                    11280000
                    OCTAL(A.[32:6]),                                    11290000
                    OCTAL(A.[38:10]),                                   11300000
                    OCTAL((A:=LOHALF(RA+I)).[24:17]),                   11310000
                    OCTAL(A.[41:7]));                                   11320000
                    MOVC(LINE[0],0,TB[8],1,2,6);                        11330000
                END;                                                    11340000
                IF I<PS THEN                                            11350000
                BEGIN                                                   11360000
                    WRITE(LINE[*],PT,                                   11370000
                    (A:=HIHALF(PA+I)).[24:1],                           11380000
                    A.[25:1],                                           11390000
                    OCTAL(A.[26:13]),                                   11400000
                    OCTAL((A:=LOHALF(PA+I)&A[15:39:9]).[15:15]),        11410000
                    OCTAL(A.[30:18]));                                  11420000
                    MOVC(LINE[0],0,TB[11],5,2,6);                       11430000
                END;                                                    11440000
                WRITE(P,15,TB[*]);                                      11450000
            END;                                                        11460000
        END;                                                            11470000
                                                                        11480000
        NEXTPAGE;                                                       11490000
        DISPLAY(IOQUEAVAIL,FALSE);                                      11500000
        IF  VERIFY(UNIT,UA,US) AND                                      11510000
            VERIFY(IOQUE,IA,IS) AND                                     11520000
            VERIFY(LOCATQUE,LA,LS) AND                                  11530000
            VERIFY(FINALQUE,FA,FS) THEN                                 11540000
        BEGIN                                                           11550000
            S:=MAX(US,IS,LS,FS)-1;                                      11560000
            WRITE(P,IOQSH);                                             11570000
            FOR I:=0 STEP 1 UNTIL S DO                                  11580000
            BEGIN                                                       11590000
                WRITE(TB[*],IFO,OCTAL(I));                              11600000
                IF I<US THEN                                            11610000
                BEGIN                                                   11620000
                    WRITE(LINE[*],UFO,                                  11630000
                    (A:=HIHALF(UA+I)).[24:1],                           11640000
                    OCTAL(A.[25:4]),                                    11650000
                    OCTAL(A.[29:8]),                                    11660000
                    A.[37:1],                                           11670000
                    A.[38:1],                                           11680000
                    A.[39:1],                                           11690000
                    A.[40:2],                                           11700000
                    OCTAL((A:=LOHALF(UA+I)&A[18:42:6]).[18:15]),        11710000
                    OCTAL(A.[33:15]));                                  11720000
                    MOVC(LINE[0],0,TB[1],4,3,4);                        11730000
                END;                                                    11740000
                IF I<IS THEN                                            11750000
                BEGIN                                                   11760000
                    WRITE(LINE[*],WFO,                                  11770000
                    OCTAL(HIHALF(IA+I)),                                11780000
                    OCTAL(LOHALF(IA+I)));                               11790000
                    MOVC(LINE[0],0,TB[5],7,2,1);                        11800000
                END;                                                    11810000
                IF I<LS THEN                                            11820000
                BEGIN                                                   11830000
                    WRITE(LINE[*],LFO,                                  11840000
                    (A:=HIHALF(LA+I)).[24:3],                           11850000
                    OCTAL(A.[27:5]),                                    11860000
                    OCTAL(A.[32:4]),                                    11870000
                    OCTAL(A.[36:6]),                                    11880000
                    OCTAL((A:=LOHALF(LA+I)&A[18:42:6]).[18:15]),        11890000
                    OCTAL(A.[33:15]));                                  11900000
                    MOVC(LINE[0],0,TB[8],7,2,6);                        11910000
                END;                                                    11920000
                IF I<FS THEN                                            11930000
                BEGIN                                                   11940000
                    WRITE(LINE[*],WFO,                                  11950000
                    OCTAL(HIHALF(FA+I)),                                11960000
                    OCTAL(LOHALF(FA+I)));                               11970000
                    MOVC(LINE[0],0,TB[12],4,2,1);                       11980000
                END;                                                    11990000
                WRITE(P,15,TB[*]);                                      12000000
            END;                                                        12010000
        END;                                                            12020000
                                                                        12030000
    END DUMPING MCP INFO;                                               12040000
     INTEGER STREAM PROCEDURE MCPCNT(A); VALUE A;                       12041000
     BEGIN LOCAL N; SI:=LOC A;                                          12042000
     8(IF TOGGLE THEN TALLY:=TALLY+1 ELSE                               12043000
      IF SC!"0" THEN TALLY:=TALLY+1; SI:=SI+1);                         12044000
      N:=TALLY; SI:=LOC N;                                              12045000
      DI:=LOC MCPCNT; DS:=WDS; END;                                     12046000
                                                                        12050000
    INTEGER DUMPD;                                                      12060000
    LOAD;                                                               12070000
    PRINTMCPOPTIONS;                                                    12070025
    IF NOT OPERAND(3,MCPVERSION) THEN BEGIN I:=1;WRITE(P,BADCELL3); END 12070050
    ELSE I:=MCPCNT(MCPVERSION);                                         12070075
         IF FLGBIT(M[DATE.ROW,DATE.COL]) THEN                           12070100
           WRITE(P,BADDATE) ELSE                                        12070125
             BEGIN                                                      12070150
                DATX := M[DATE.ROW,DATE.COL];                           12070200
                DATES(DATX,DATETAKEN,DAYS,YEARS);                       12070250
             END;  %  OF DATE                                           12070300
        IF FLGBIT(M[XCLOCK.ROW,XCLOCK.COL]) THEN                        12070350
     WRITE (P,BADXCLOCK) ELSE                                           12070375
             BEGIN                                                      12070400
                XCLOCX := M[XCLOCK.ROW,XCLOCK.COL];                     12070450
                TIMES(XCLOCX,TIMETAKEN,MINUTES,SECONDS);                12070500
             END;   %    OF XCLOCK                                      12070550
WRITE(P,X1,I,MCPVERSION,DATETAKEN,DAYS,YEARS,TIMETAKEN,MINUTES,SECONDS);12070600
        DATES(TIME(0),DATEANALYZED,DAYS,YEARS);                         12070650
        TIMES(TIME(1),TIMEANALYZED,MINUTES,SECONDS);                    12070700
 WRITE(P,FMXX,DATEANALYZED,DAYS,YEARS,TIMEANALYZED,MINUTES,SECONDS);    12070750
       IF FLGBIT(M[CLOCK.ROW,CLOCK.COL]) THEN                           12070800
         WRITE(P,BADCLOCK) ELSE                                         12070825
             BEGIN                                                      12070850
                CLOCX := M[CLOCK.ROW,CLOCK.COL];                        12070900
                TIMES(XCLOCX-CLOCX,TIMELASTHL,MINUTES,SECONDS);         12070950
                WRITE(P,FMX2,TIMELASTHL,MINUTES,SECONDS);               12071000
                TIMES(CLOCX,SINCSLASTHL,MINUTES,SECONDS);               12071050
                WRITE(P[DBL],FMX3,SINCSLASTHL,MINUTES,SECONDS);         12071100
             END;  %   OF CLOCK                                         12071150
      IF COMMON NEQ 1 THEN BEGIN                                        12071175
      MCPENTRIES;                                                       12071200
        GETPRTENTRIES; NEXTPAGE;                                        12071250
                                                                        12080000
                                                                        12090000
        CHECKMEMORYLINKS;                                               12100000
        GETSTACKSFROMTHEBED;                                            12110000
    END;                                                                12120000
        IF COMNT THEN BEGIN                                             12130000
            WRITE(P[DBL],STARS);                                        12131000
            WRITE(P,10,COMMT[*]);                                       12132000
            MOVE(COMMT[10],COMMT[0],10);                                12133000
          WRITE(P,10,COMMT[*]);                                         12134000
            WRITE(P[PAGE],STARS);                                       12135000
        END;                                                            12136000
         IF OPERAND(16,R) AND R GEQ 12 AND R LEQ 15                     12140000
              THEN BEGIN                                                12145000
          PRINT(0,R);  PRINT(R+1,16);                                   12147000
           END ELSE PRINT(0,36);                                        12150000
    IF MINLNK>DUMPD:=36 THEN PRINT(36,DUMPD:=MINLNK);                   12160000
                                                                        12170000
    IF LNKSOK THEN                                                      12180000
        DUMPMEMORYANDNOTESTACKS(MINLNK,DUMPD:=MAXLNK)                   12190000
    ELSE                                                                12200000
    BEGIN                                                               12210000
        IF SOMOKF THEN                                                  12220000
            DUMPMEMORYANDNOTESTACKS(DUMPD,DUMPD:=MINBAD);               12230000
        IF SOMOKB THEN                                                  12240000
        BEGIN                                                           12250000
            PRINT(DUMPD,MAXBAD);                                        12260000
            DUMPMEMORYANDNOTESTACKS(MAXBAD,DUMPD:=MAXLNK);              12270000
        END;                                                            12280000
    END;                                                                12290000
    PRINT(DUMPD,MAXCOR+1);                                              12300000
    IF COMMON NEQ 1 THEN                                                12310000
    BEGIN                                                               12320000
        GETSORTANDLISTMCPROG;                                           12330000
      IF COMMON NEQ 2 THEN BEGIN                                        12340000
        DUMPMCPINFO;                                                    12350000
        GETSORTANDLISTINTRINSICS;                                       12360000
      END;                                                              12361000
        DUMPROGRAMS;                                                    12370000
        DUMPCONTROLSTACKS;                                              12380000
    END;                                                                12390000
END.                                                                    12400000
END;END.        LAST CARD ON 0CRDING TAPE                               99999999
