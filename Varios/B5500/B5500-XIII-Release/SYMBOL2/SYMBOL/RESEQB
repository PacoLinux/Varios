BEGIN                                                                   00100000
REAL          COMMON;              COMMENT CONTAINS VALUE POINTING TO   00100100
                                   ESP DISK.                            00100200
                                   ;                                    00100300
COMMENT       RR1, RR2, RR10 ARE USED IN DETERMINING WHETHER INPUT IS   00100500
              VIA CARD OR DISK.                                         00100600
;                                                                       00100700
REAL          RR1,RR2,RR10;                                             00100800
FILE IN       CARD DISK SERIAL (1,10,300);                              00400200
FILE          REMOTE 14(2,10);                                          00400210
SAVE FILE OUT KARD DISK SERIAL[20:600](1,10,300,SAVE 1);                00400300
SAVE FILE OUT TBL DISK SERIAL [20:30] (2,30,300,SAVE 1);                00400400
FILE          NEW DISK RANDOM(1,10,300,SAVE 1);                         00400500
COMMENT       ALL FORMAT STATEMENTS FOR RESEQB/TSHARER(ALMOST)          00500000
;                                                                       00500100
FORMAT        SEQERR(I9," SEQUENCE ERRORS."),                           00500200
              NOMATCH(" NO MATCHING SEQ. NO.",I10),                     00500305
              ERRHED(I9," FIX-UP CARD GTR 72 CHR.");                    00500400
COMMENT       FORWARD DECLARATIONS FOR PROCEDURES APPEAR IN             00800000
              SECTIONS 00800000 THRU 00900000 INCLUSIVE.                00800100
;                                                                       00800200
PROCEDURE STATEMENT;                                                    00801000
         FORWARD;                                                       00801100
INTEGER PROCEDURE  SCANNER;                                             00802000
         FORWARD;                                                       00802100
COMMENT       DEFINES FOR CLASSES OF SYNTACTICAL ELEMENTS OF THE        00900000
              LANGUAGE.                                                 00900100
;                                                                       00900200
DEFINE        STRINGID = 001#,                                          00900300
              ARITHID  = 002#,                                          00900400
              STATSTART= 003#,                                          00900500
              NUMBER   = 004#,                                          00900600
              STRING   = 005#,                                          00900700
              DEFFUNCID= 006#,                                          00900800
              STDFUNCID= 007#,                                          00900900
              STEPV    = 008#,                                          00901000
              TOV      = 009#,                                          00901100
              GOTOV    = 010#,                                          00901200
              COMMA    = 011#,                                          00901300
              RTPAREN  = 012#,                                          00901400
              LTPAREN  = 013#,                                          00901500
              TABV     = 014#,                                          00901600
              COLON = 015#,                                             00901700
              SEMICOLON= 016#,                                          00901800
              PERCENT  = 017#,                                          00901900
              THENV    = 018#,                                          00902000
              LBRACKET = 019#,                                          00902100
              RBRACKET = 020#,                                          00902200
              CROSHATCH= 021#,                                          00902300
              FILEV    = 022#,                                          00902400
              READV    = 023#,                                          00902500
              INPUTV   = 024#,                                          00902600
              PRINTV   = 025#,                                          00902700
              OPTION   = 026#,                                          00902800
              RELOP    = 027#,                                          00902900
              ASGNOP   = 028#,                                          00903000
              ADDOP    = 029#,                                          00903100
              MULOP    = 030#,                                          00903200
              EXPOPR   = 031#,                                          00903300
              SSPART   = [42:6]#,                                       00903400
              NEXTV    = 011#,                                          00903500
              ENDV     = 004#,                                          00903600
              CLASS = [1:5]#,                                           00903610
              INFOLINK = [33:15]#, %DEFINES FOR PARTIAL WORD SIZES      00903700
              NUMBPART = [ 6:27]#, %AND OTHER THINGS.                   00903800
              ROWNDX   = [34: 6]#,                                      00903900
              COLNDX   = [40: 8]#,                                      00904000
              LINENO   = C#,                                            00904100
              CURRENTLINENO = CHARRY[0]#                                00904200
              ;                                                         00920000
COMMENT       GLOBAL DECLARATIONS FOR RESEQB/DISK ARE INCLUDED IN       01000000
              SECTION 01000000.                                         01000100
;                                                                       01000200
COMMENT       SPECIAL IS AN ARRAY OF ELBAT WORDS FOR SPECIAL            01000300
              CHARACTERS.                                               01000400
;                                                                       01000500
REAL ARRAY    SPECIAL[0:31];                                            01000600
COMMENT       RWARRY IS AN ARRAY CONTAINING THE "RESERVED" WORDS OF     01000700
              BASIC AND CORRESPONDING ELBAT WDS.                        01000800
;                                                                       01000900
REAL ARRAY    RWARRY[0:99];                                             01001000
                                                                        01001100
INTEGER ARRAY CTARRY[0:11];        COMMENT INDEX OF LAST ELEMENT IN EACH01001200
                                       GROUP.                           01001300
;                                                                       01001305
SAVE ARRAY    OLD[0:9],            % ARRAYS USED BY SEQUENCER AND       01001310
              LIN[0:9];           %CARDFIXUP TO PRODUCE NEW CARD IMAGE  01001320
DEFINE        SSFIRST = 0#,        % PARAMETERS USED BY SCANNER FOR     01001500
              SSGROUPS = 6#,       % RECOGNIZING RESERVED WORDS.        01001600
              IWFIRST = 42#,                                            01001700
              IWGROUPS=  6#,                                            01001800
              SS1 = 0#,                                                 01001900
              IW1 = 6#;                                                 01002000
INTEGER       SCANMODE;            COMMENT  1-STATEMENT STARTER MODE.   01002100
                                            2-IMBEDDED WORD MODE.       01002200
                                            3-OPTION MODE.              01002300
                                   ;                                    01002400
DEFINE        SSMODE = 1#,                                              01002500
              IWMODE = 2#,                                              01002600
              OPMODE = 3#;                                              01002700
REAL ARRAY    CHARRY[0:77];        COMMENT CHARRY FILLED BY CARDSCAN;   01002800
REAL ARRAY    COLMN [0:77];        COMMENT COLMN[N] CONTAIN A NUMBER    01002900
                                       POINTING TO THE CARD COLUMN IN   01003000
                                       WHICH A CHARACTER IN THE CHARRY  01003100
                                       WOULD HAVE APPEARED HAD NOT THE  01003200
                                       BLANKS BEEN COMPRESSED OUT.      01003300
                                   ;                                    01003400
REAL          CNDX;                COMMENT INDEX OF LAST CHARACTER      01003500
                                       SCANNED IN THE CHARRY.           01003600
                                   ;                                    01003700
INTEGER       NDX;                                                      01003710
REAL          CC1,                 % PTR. TO COL 1 OF CARD IMAGE        01003720
              CC73;                % PRT. TO COL 73  CARD IMAGE.        01003733
INTEGER       NBRSIZ,              COMMENT LNGTH OF NO.(DEC. FORM);     01003800
              NREC,                % RECORD # OF CURRENT CARD IMAGE.    01003810
              NBRCLM;              COMMENT STARTING POSITION OF NUMBER  01003900
                                       TO BE REPLACED. VALUES RETURNED  01004000
                                       BY SCANNER;                      01004100
DEFINE   NEWLINENO = RR1#;         %NEWLINE NUMBER AS CALC. BY SEQUENCER01004110
REAL          C;                   COMMENT HOLDS VALUE OF NUMBER FROM   01004200
                                        SCANNER.                        01004300
                                   ;                                    01004400
BOOLEAN       EQUALMODETOG;        COMMENT TRUE - RELOP, FALSE - ASGNOP;01004500
DEFINE        RELOPMODE = TRUE#,                                        01004600
              ASGNOPMODE = FALSE#;                                      01004700
DEFINE        EQUIV(EQUIV1,EQUIV2) =                                    01004710
                   REAL(BOOLEAN(EQUIV1) EQV BOOLEAN(EQUIV2))            01004720
                   = REAL(NOT FALSE)#;                                  01004730
COMMENT       WORDS USED BY SCANNER PASS TYPE QUANTITY SCANNED.         01004800
;                                                                       01004900
REAL          ELBAT;                                                    01005000
INTEGER       ELCLASS;                                                  01005100
COMMENT       LINETBL CONTAINS AN ENTRY FOR EACH LINE NUMBER REFERENCED 01005200
              BY A STATEMENT. ENTRIES HAVE THE FOLLOWING FORM.          01005300
              WD 1 [27:6] # OF BRANCH REFERENCES BY THIS STATEMENT.     01005400
                   [33:15] RECORD # OF STATEMENT IN DISK FILE.          01005500
              WD 2 [1:  5] NUMBER OF COLUMNS(IN DEC) REQUIRED ON CARD   01005600
                           BY OLD BRANCH REFERENCE.                     01005700
                   [6: 27] OLD LINE NUMBER.                             01005800
                   [40: 8] CARD COLUMN INDEX WHERE START OF NUMBER      01005900
                           CAN BE FOUND ON OLD CARD.                    01006000
              WD 3                                                      01006100
                .          SAME AS WORD 2 FOR FURTHER OCCURENCES OF     01006200
                .          BRANCH LABELS.                               01006300
                .                                                       01006400
              WD N                                                      01006500
;                                                                       01006600
REAL ARRAY    LINETBL[0:63,0:255];                                      01006700
INTEGER       LINENDX,             COMMENT PTR TO LAST ENTRY IN LINETBL;01006800
              LINEMAX,             COMMENT LASTUSED SLOT OF LINETBL;    01006810
              LINECTR;             COMMENT SET TO ZERO AT START OF      01006900
                                   STATEMENT SCAN;                      01007000
DEFINE        NEXTLINEWD=(LINENDX~LINENDX+1).ROWNDX,LINENDX.COLNDX#,    01007100
              LINEWD = LINENDX.ROWNDX,LINENDX.COLNDX#,                  01007110
              LINEWD2 = (LINENDX+LINECTR+1).ROWNDX,(LINENDX+LINECTR+1)  01007120
                   .COLNDX#,                                            01007130
              LINEWDN=(LINENDX+LINECTR).ROWNDX,(LINENDX+LINECTR).COLNDX#01007200
              ;                                                         01007300
COMMENT       INFO CONTAINS A TWO WORD ENTRY FOR EACH DEFINED LINE      01007400
              NUMBER. THE FORM OF THE ENTRY IS:                         01007500
              WD1  [6:27] OLD LINE NUMBER.                              01007600
                   [33:15] INFOLINK TO NEXT ENTRY. 0 IF LAST ENTRY.     01007700
              WD2  [6:27]  NEW LINE NUMBER.                             01007800
;                                                                       01007900
REAL ARRAY    INFO[0:63,0:255];                                         01008000
COMMENT       SINFO SERVES AS A STACK HEAD.                             01008100
              LINK = 0 IFF NO ENTRIES IN STACK                          01008200
              18 DEC DIGIT LINE# CONVERTED TO { 9 OCT DIG INTEGER TO    01008300
              GET STACKHEAD FROM STACK.                                 01008400
;                                                                       01008500
REAL ARRAY    SINFO[0:126];                                             01008600
INTEGER       INFONDX;             %INDEX INTO INFO ARRAY.              01008700
DEFINE        INFOWD = INFONDX.ROWNDX,INFONDX.COLNDX#,                  01008800
              INFOWD2= (INFONDX+1).ROWNDX,(INFONDX+1).COLNDX#           01008900
              ;                                                         01009000
INTEGER       NEXTAVAILINFO;       % LAST USED INDEX INTO INFO.         01009100
DEFINE        NEXTINFO = (INFONDX~NEXTAVAILINFO~NEXTAVAILINFO+2).ROWNDX 01009200
                   ,INFONDX.COLNDX#;                                    01009300
COMMENT       DISKIO OBTAINS A SEGMENT OF ESP DISK AT THE ADDRESS       02000000
              SPECIFIED BY COMMON.                                      02000100
              PARAMETERS IS ORDER OF APPERANCE ARE:                     02000200
              RW = 1 IF READ, = 0 IF WRITE.                             02000300
              ARRY-ARRAY DATA WILL BE READ INTO OR WRITTEN FROM.        02000400
              N    # OF WORDS TO BE READ OR WRITTEN.                    02000500
              DISKADR - DISK ADDRESS OF AREA TO BE WRITTEN OR READ      02000600
;                                                                       02000800
PROCEDURE     DISKIO(RW,ARRY,N,DISKADR);                                02000900
VALUE         RW, N, DISKADR;                                           02001000
REAL ARRAY    ARRY[0];                                                  02001100
REAL          RW,N, DISKADR;                                            02001200
              COMMUNICATE(-8);                                          02001300
COMMENT       TBLHDR FIXES UP A HEADER FOR THE TBL FILE.                02200000
;                                                                       02200100
REAL STREAM PROCEDURE TBLHDR(L); VALUE L;                               02200200
         BEGIN                                                          02200300
              DI ~ LOC TBLHDR; DS ~ 8 LIT "01T000  ";                   02200400
              DI ~ LOC TBLHDR;  DI ~ DI+3;                              02200500
              SI ~ LOC L; DS ~ 3 DEC;                                   02200600
         END OF TBLHDR;                                                 02200700
COMMENT OCTCNVT CONVERTS THE BCL NBR TO ITS OCTAL EQUIVALENT.           02300000
;                                                                       02300100
INTEGER STREAM PROCEDURE OCTCNVT(NBR);                                  02300200
VALUE         NBR;                                                      02300300
         BEGIN                                                          02300400
              SI ~ LOC NBR; DI ~ LOC OCTCNVT; DS ~ 8 OCT;               02300500
         END OF    OCTCNVT;                                             02300600
COMMENT       DECCNVT CONVERTS THE OCTAL WD NBR TO ITS EQUIVALENT 8 CHR.02350000
              BCL REPRESENTATION.                                       02350100
;                                                                       02350200
REAL STREAM PROCEDURE DECCNVT(NBR);                                     02350300
VALUE         NBR;                                                      02350400
         BEGIN                                                          02350500
              SI ~ LOC NBR; DI ~ LOC DECCNVT; DS ~ 8 DEC;               02350600
         END OF DECCNVT;                                                02350700
COMMENT       GETABSADDR RETURNS THE ABSOLUTE ADDRESS OF THE PARAMETER  02360000
              PASSED.                                                   02360100
;                                                                       02360200
REAL STREAM PROCEDURE GETABSADDR(L);                                    02360300
         BEGIN                                                          02360400
              DI ~ L; GETABSADDR ~ DI;                                  02360500
         END OF GETABSADDR;                                             02360600
COMMENT       CARDSCAN SCANS CARD COLUMN FOR <NUMERIC OR DIGIT >        03000000
              CHARACTER OR < SPECIAL > CHARACTER. SEQUENCE NUMBER IN    03000100
              COL 73-80 IS CONVERTED TO OCTAL AND PLACED IN ARRY[0].    03000200
;                                                                       03000300
STREAM PROCEDURE CARDSCAN(CC1,CC73,ARRY);                               03000400
VALUE         CC1,CC73;                                                 03000500
         BEGIN                                                          03000600
LABEL         L1,L2;                                                    03000700
              SI ~ CC73; DI ~ ARRY; DS ~ 8 OCT; %CNVT LINE NO           03000800
              DI ~ CC73;                                                03000900
              3(DS ~ LIT "%"; DS ~ LIT """);    % INSERT STOPPER        03001000
              DI ~ ARRY; DI ~ DI+8; SI ~ CC1;                           03001100
L1:           IF SC = ALPHA THEN                                        03001200
         BEGIN                                                          03001300
              DS ~ 7 LIT "0";                                           03001400
L2:           DS ~ CHR;  GO TO L1;                                      03001500
         END  ;                                                         03001600
              DS ~ 7 LIT "+000000";                                     03001700
              IF SC ! "%" THEN GO TO L2;                                03001800
              DS ~ CHR;                                                 03001900
         END  CARDSCAN;                                                 03003000
COMMENT       COMPRESSCARD,REMOVES BLANKS FROM THE CHARRY. A COMPANION  03100000
              ARRAY COLMN POINTS TO THE COLUMN WHERE THE CHARACTER      03100100
              APPEARED BEFORE COMPRESSION.                              03100200
;                                                                       03100300
PROCEDURE     COMPRESSCARD;                                             03100400
         BEGIN                                                          03100500
INTEGER       TCNDX;                                                    03100510
              CNDX ~ 0;                                                 03100600
              NDX ~ 0;                                                  03100700
              WHILE CHARRY[CNDX~CNDX+1]!-"%" DO                         03100800
         BEGIN                                                          03100900
              IF CHARRY[CNDX] ! -" " THEN                               03101000
         BEGIN                                                          03101100
              CHARRY[NDX ~ NDX+1] ~ CHARRY[CNDX];                       03101200
              COLMN[NDX] ~ CNDX;                                        03101300
              TCNDX ~ CNDX;                                             03101310
         END  ;                                                         03101400
         END  ;                                                         03101500
              CHARRY[NDX~NDX+1] ~ CHARRY[CNDX]; COLMN[NDX] ~ TCNDX+1;   03101600
         END  OF COMPRESSCARD;                                          03101700
COMMENT       "STEPI" GETS THE NEXT ELBAT WORD AND STUFFS ELCLASS WITH  04200000
              THE CLASS OF QUANTITY SCANNED.                            04200100
;                                                                       04200200
INTEGER PROCEDURE STEPI;                                                04200300
              STEPI ~ ELCLASS ~ SCANNER;                                04200400
COMMENT       "STEPIT" SAME AS STEPI EXCEPT NO VALUE RETURNED.          04300000
;                                                                       04300100
PROCEDURE     STEPIT;                                                   04300200
              ELCLASS ~ SCANNER;                                        04300300
COMMENT       BLDID PACKS A CHARACTER INTO A WORD AT THE CHARACTER      04400000
              POSITION SPECIFIED BY CHRPOS.                             04400100
;                                                                       04400200
STREAM PROCEDURE BLDID(WD,CHAR,CHRPOS);                                 04400300
VALUE         CHAR, CHRPOS;                                             04400400
         BEGIN                                                          04400500
              DI ~ WD;                                                  04400600
              DI ~ DI+CHRPOS;                                           04400700
              SI ~ LOC CHAR;                                            04400800
              SI ~ SI+7;                                                04400900
              DS ~ CHR;                                                 04401000
         END  OF BLDID;                                                 04401100
COMMENT       SCANNER RETURNS AN ELBAT WORD AND ELCLASS WORD TO THE     04500000
              CALLER INDICATING THE TYPE QUANTITY SCANNED.              04500100
;                                                                       04500200
INTEGER PROCEDURE  SCANNER;                                             04500300
         BEGIN                                                          04500400
LABEL         COMPRESSCHAR,SKIPTOPERCENT;                               04500500
LABEL         FRACTIONPART,DONOTHING;                                   04500600
LABEL         PERIOD, LESSTHAN, ASTERISK, EQUAL, QUOTE,                 04500700
              GREATERTHAN, TIMES, XIT;                                  04500800
LABEL         LETTERONLY, LETTERDIGIT, ENDNUMBER;                       04500900
INTEGER       NEXT;                %TEMP FOR LOOK-AHEAD IN CHARRY       04501000
INTEGER       FSAVE, EXPON, CTNDX;                                      04501100
INTEGER       TCNDX,       RWNDX;                                       04501200
INTEGER       CTR;                 %UTILITY COUNTER                     04501300
REAL          T;                   %FOR GENERAL USE                     04501400
SWITCH        SPECIALSW ~ PERIOD, LESSTHAN, ASTERISK, EQUAL, QUOTE,     04501500
                   GREATERTHAN, TIMES;                                  04501600
DEFINE        SPECPART = [8:4]#;   %IF NOT 0, SWITCH FR SPECIAL HNDLING 04501610
REAL          T1;                  %USED IN NUMBER BUILD                04501700
REAL          LOW, HIGH,           %INDEX BRACKETS FOR CURRENT GROUP    04501800
              MAX,                 %NUMBER OF GROUPS                    04501900
              ALPHAWD,             %ACCUM FOR BUILDING RESERVED WD.     04502000
              CTX  ;               %UTILITY COUNTER                     04502100
              IF T ~ CHARRY[CNDX ~ CNDX+1] < 0 THEN                     04502200
         BEGIN     COMMENT CHARACTER IS A SPECIAL CHARACTER;            04502300
              IF T = -"!" THEN T ~ -" ";                                04502400
COMPRESSCHAR: T ~ T+2;             %DECREASE INTERNAL CODE BY 2         04502500
              ELBAT ~ SPECIAL[T.[45:3]&T[42:41:3]];                     04502600
              COMMENT NOTE COMPRESSION TECHNIQUE THAT DELETED THIRD BIT 04502700
                   FROM LEFT, AFTER DECREASING CODE BY 2.               04502800
              ;                                                         04502900
              IF T ~ ELBAT.SPECPART = 0 THEN GO XIT;                    04503000
              GO TO SPECIALSW[T];                                       04503100
PERIOD:       C ~ 0; GO TO FRACTIONPART;                                04503200
LESSTHAN:     IF T ~ CHARRY[T1 ~ CNDX+1] = -">" THEN                    04503300
         BEGIN                                                          04503400
              CNDX ~ T1;                                                04503500
              T ~ -"!";                                                 04503600
              GO COMPRESSCHAR;                                          04503700
         END;                                                           04503800
              IF T ! -"=" THEN GO XIT;                                  04503900
              CNDX ~ T1;                                                04504000
              T ~ -"{";                                                 04504100
              GO TO COMPRESSCHAR;                                       04504200
ASTERISK:     IF CHARRY[T1 ~ CNDX+1] ! -"*" THEN GO XIT;                04504300
              CNDX ~ T1;                                                04504400
              T ~ -" ";            %USE BLANK TO FAKE EXPON OPERATOR    04504500
              GO COMPRESSCHAR;                                          04504600
EQUAL:        IF T ~ CHARRY[T1 ~ CNDX+1] = -"<" THEN                    04504700
         BEGIN                                                          04504800
              CNDX ~ T1;                                                04504900
              T ~ -"{";                                                 04505000
              GO COMPRESSCHAR;                                          04505100
         END;                                                           04505200
              IF T = -">" THEN                                          04505300
         BEGIN                                                          04505400
              CNDX ~ T1;                                                04505500
              T ~ -"}";                                                 04505600
              GO COMPRESSCHAR;                                          04505700
         END  ;                                                         04505800
              IF EQUALMODETOG THEN GO XIT;                              04505900
              T ~ -"~";                                                 04506000
              GO COMPRESSCHAR;                                          04506100
QUOTE:        WHILE(T~CHARRY[CNDX~CNDX+1]) ! -"%" DO                    04506200
                   IF T = -""" THEN GO XIT;                             04506300
              COMMENT NO MATCHING QUOTE, SO RETURN "%";                 04506400
              T ~ CHARRY[CNDX]; GO COMPRESSCHAR;                        04506500
GREATERTHAN:  IF T ~ CHARRY[T1 ~ CNDX+1] = -"<" THEN                    04506600
         BEGIN                                                          04506700
              CNDX ~ T1;                                                04506800
              T ~ -"!";                                                 04506900
              GO COMPRESSCHAR;                                          04507000
         END  ;                                                         04507100
              IF T ! -"=" THEN GO XIT;                                  04507200
              CNDX ~ T1;                                                04507300
              T ~ -"}";                                                 04507400
              GO COMPRESSCHAR;                                          04507500
TIMES:                                                                  04507510
              IF T ~ CHARRY[T1~CNDX+2] & CHARRY[CNDX+1][36:42:6] =      04507600
                   "EQ" THEN                                            04507700
              T ~ -"="                                                  04507800
              ELSE                                                      04507900
              IF T = "NE" THEN                                          04508000
              T ~ -"!"                                                  04508100
              ELSE                                                      04508200
              IF T = "GT" THEN                                          04508300
              T ~ -">"                                                  04508400
              ELSE                                                      04508500
              IF T = "LT" THEN                                          04508600
              T ~ -"<"                                                  04508700
              ELSE                                                      04508800
              IF T = "GE" THEN                                          04508900
              T ~ -"}"                                                  04509000
              ELSE                                                      04509100
              IF T = "LE" THEN                                          04509200
              T ~ -"{"                                                  04509300
              ELSE GO XIT;         COMMENT IMPROPER RELATIONAL;         04509400
              CNDX ~ T1;                                                04509500
              GO COMPRESSCHAR;                                          04509600
         END  OF SPECIAL CHARACTER HANDLING;                            04509700
              IF T < 10 THEN                                            04509800
         BEGIN     COMMENT NUMERIC DIGIT-ASSEMBLE NUMBER;               04509900
              TCNDX ~ CNDX;                                             04510000
              C ~ T;                                                    04511000
              WHILE T ~ CHARRY[CNDX~CNDX+1]<10 AND T } 0 DO             04511100
                   C ~ 10|C + T;                                        04511200
              NBRSIZ ~ COLMN[CNDX]-COLMN[TCNDX]; NBRCLM ~ COLMN[TCNDX]; 04512000
              IF SCANMODE = IWMODE THEN                                 04513000
         BEGIN                                                          04514000
              IF T = -"." THEN     % SKIP OVER FRACTIONAL PART.         04514100
FRACTIONPART: WHILE T ~ CHARRY[CNDX ~ CNDX+1] < 10 AND T } 0 DO;%NOTHING04514200
              IF T = -"@" OR T ="E" THEN                                04514300
              IF T  ~  CHARRY[CNDX ~ CNDX+1] = -"-" THEN                04514400
DONOTHING:    WHILE T ~ CHARRY[CNDX ~ CNDX+1] < 10 AND T } 0 DO %NOTHING04514500
              ELSE                                                      04514600
         BEGIN                                                          04514700
              IF T ! -"+" THEN                                          04514800
                   IF T < 0 OR T > 10 THEN CNDX ~ CNDX-1;               04514900
              GO DONOTHING;                                             04514910
         END  ;                                                         04515000
         END  OF FRACTIONAL AND EXPONENT PARTS;                         04515200
ENDNUMBER:                                                              04515300
              CNDX ~ CNDX-1;                                            04515400
              ELBAT ~ 0 & NUMBER[1:43:5];                               04515500
              GO XIT;                                                   04515600
         END  OF NUMBER BUILDING                                        04515700
              ELSE COMMENT CHARACTER IS A LETTER-RECOGNITION PROCEDURE  04515800
                   FOR RESERVED WORDS;                                  04515900
              IF NEXT ~ CHARRY[CNDX+1] < 0 THEN                         04516000
         BEGIN                                                          04516100
              IF NEXT = -"$" THEN                                       04516200
         BEGIN     COMMENT ELBAT WD FOR STRINGID;                       04516300
              ELBAT ~ 0 & STRINGID[1:43:5];                             04516400
              CNDX ~ CNDX+1;                                            04516500
              GO XIT;                                                   04516600
         END  ELSE                                                      04516700
         BEGIN     COMMENT ELBAT WORD FOR ARITHID;                      04516800
LETTERONLY:                                                             04516900
LETTERDIGIT:  ELBAT ~ 0 & ARITHID[1:43:5];                              04517000
              GO XIT;                                                   04517010
         END  ;                                                         04517100
         END  ;                                                         04517200
              IF NEXT < 10 THEN                                         04517300
         BEGIN     COMMENT LETTER-DIGIT COMBINATION;                    04517400
              CNDX ~ CNDX+1;                                            04517500
              GO LETTERDIGIT;                                           04517600
         END;                                                           04517700
              COMMENT RESERVED WORD RECOGNIZER;                         04517800
              TCNDX ~ CNDX;                                             04517900
              IF SCANMODE = SSMODE THEN                                 04518000
         BEGIN     COMMENT STATEMENT STARTER;                           04518100
              LOW ~ SSFIRST; HIGH ~ CTARRY[CTNDX~SS1];                  04518200
              MAX ~ SSGROUPS;                                           04518300
         END  ELSE                                                      04518400
              IF SCANMODE = IWMODE THEN                                 04518600
         BEGIN                                                          04518605
              LOW ~ IWFIRST; HIGH ~ CTARRY[CTNDX~IW1];                  04518700
              MAX ~ IWGROUPS;                                           04518800
         END  ELSE GO SKIPTOPERCENT;                                    04518900
              CTR ~ 2;                                                  04519000
              CNDX ~ CNDX +1;                                           04519100
              BLDID(ALPHAWD,T,1);                                       04519200
              DO                                                        04519300
         BEGIN                                                          04519400
              BLDID(ALPHAWD,NEXT,CTR);                                  04519500
              FOR RWNDX ~ LOW STEP 2 UNTIL HIGH DO                      04519600
              IF EQUIV(ALPHAWD,RWARRY[RWNDX]) THEN                      04519700
         BEGIN     COMMENT FOUND RESERVED WD., GET ELBAT WD;            04519800
              IF (ELBAT~RWARRY[RWNDX~RWNDX+1]).CLASS = STDFUNCID THEN%DO04519900
                                                                %NOTHING04520000
              ELSE                                                      04520100
              IF ELBAT.CLASS = DEFFUNCID THEN                           04520200
              IF NEXT ~ CHARRY[CNDX~CNDX+1] < 10 THEN CNDX~CNDX-1;      04520300
              GO XIT;                                                   04520400
         END  OF GROUP OF N CHAR WDS;                                   04520500
              LOW ~ HIGH+2;                                             04520600
              HIGH ~ CTARRY[CTNDX~CTNDX+1];                             04520700
         END  UNTIL                                                     04520800
              NEXT ~ CHARRY[CNDX~CNDX+1] <10 OR CTR ~ CTR+1 } MAX+1;    04520900
              COMMENT NO MATCH,THEREFORE ASSUME LETTER IDENTIFIER;      04521000
              CNDX ~ TCNDX;                                             04521100
              GO TO LETTERONLY;                                         04521200
SKIPTOPERCENT:                                                          04521300
              IF T ~ CHARRY[CNDX] ! -"%" THEN                           04521305
              WHILE T ~ CHARRY[CNDX ~ CNDX+1] ! -"%" DO;%NOTHING        04521400
              GO COMPRESSCHAR;                                          04521500
XIT:                                                                    04521600
              SCANNER ~ ELBAT.CLASS;                                    04521700
         END  OF SCANNER;                                               04521800
COMMENT       SCRAMLOOK SCRAMBLES A LINENO MOD 127 TO GET A STACK HEAD  05000000
              FROM THE SINFO ARRAY THEN DOES A LINEAR SEARCH FOR A      05000100
              MATCHING LINE NUMBER. SCRAMLOOK RETURNS TRUE IF FOUND,    05000200
              ELSE FALSE. FORMAT PARAMETER LINENO WILL BE CONVERTED TO  05000300
              FORM OF FIRST WORD OF INFO ENTRY WITH LINK PART POINTING  05000400
              TO MATCHING ENTRY IN INFO IF FOUND, OR, IF NOT FOUND THEN 05000500
              POINTING TO TOP OF STACK.                                 05000600
;                                                                       05000700
BOOLEAN PROCEDURE SCRAMLOOK(LINENO);                                    05000800
REAL          LINENO;                                                   05000900
         BEGIN                                                          05001000
LABEL         FOUND;                                                    05001100
INTEGER       T;                                                        05001200
              IF (T ~ INFONDX ~ SINFO[LINENO MOD 127]) ! 0 THEN DO      05001300
              IF INFO[INFOWD].NUMBPART = LINENO THEN                    05001400
         BEGIN                                                          05001500
              SCRAMLOOK ~ TRUE;                                         05001600
              GO FOUND;                                                 05001700
         END  UNTIL INFONDX ~ INFO[INFOWD].INFOLINK = 0;                05001800
              INFONDX ~ T;                                              05001900
              SCRAMLOOK ~ FALSE;                                        05002000
FOUND:        LINENO ~ 0 & LINENO[6:21:27] & INFONDX[33:33:15];         05002100
         END  OF   SCRAMLOOK;                                           05002200
COMMENT       DEFLINENO MAKES A TWOWORD ENTRY IN THE INFOARRAY FOR      05100000
              DEFINED LINENO. SEE INFO DECLARATION FOR DESCRIPTION OF   05100100
              THE ENTRY.                                                05100200
;                                                                       05100300
PROCEDURE     DEFLINENO;                                                05100400
         BEGIN                                                          05100700
INTEGER       T;                                                        05100900
              C ~ CURRENTLINENO;                                        05101100
              T~ IF SCRAMLOOK(C) THEN C.INFOLINK                        05101200
              ELSE 0;                                                   05101300
              IF (INFONDX ~ T) = 0 THEN                                 05101400
         BEGIN                                                          05101500
              INFO[NEXTINFO] ~ C;                                       05101600
              SINFO[C.NUMBPART MOD 127] ~ INFONDX;                      05101700
              INFO[INFOWD2] ~ 0 & NEWLINENO[6:21:27];                   05101800
         END;                                                           05102000
         END  OF   DEFLINENO;                                           05102100
COMMENT  ENTERLINETBL MAKES AN ENTRY IN LINETBL FOR EACH REF.           05500000
              IN A STATEMENT TO A BRANCH NUMBER. SEE LINETBL DECLARA-   05500100
              TION FOR FORM OF ENTRIES.                                 05500200
;                                                                       05500300
PROCEDURE     ENTERLINETBL;                                             05500400
         BEGIN                                                          05500600
              IF LINECTR = 0 THEN                                       05500700
              LINETBL[NEXTLINEWD] ~NREC;                                05500800
              LINECTR ~ LINECTR + 1;                                    05500900
              LINETBL[LINEWDN] ~ NBRCLM & NBRSIZ[33:41:7]               05600000
                   & C[6:21:27];                                        05600100
         END  OF   ENTERLINENUMBER;                                     05600200
COMMENT       COPY MOVES N CHARACTERS FROM THE OLD CARD BUFFER TO THE   06000000
              NEW CARD BUFFER. ON EXIT,COPY POINTS TO THE NEXT AVAILABLE06000100
              CHARACTER IN THE NEW CARD BUFFER. FROMOLDCARD IS RESET TO 06000200
              POINT AT THE LASTUSED CHARACTER + 1.                      06000300
;                                                                       06000400
REAL STREAM PROCEDURE COPY(N,FROMOLDCARD,TONEWCARD);                    06000500
VALUE         N,FROMOLDCARD,TONEWCARD;                                  06000600
         BEGIN                                                          06000700
LOCAL         NDIV64, S;                                                06000800
              SI ~ LOC N; DI ~ LOC NDIV64;                              06000900
              SI ~ SI+6; DI ~ DI+7; DS ~ CHR;                           06001000
              SI ~ FROMOLDCARD; DI ~ TONEWCARD;                         06001200
              NDIV64(DS ~ 32 CHR; DS ~ 32 CHR); DS ~ N CHR;             06001300
              COPY ~ DI;                                                06001400
         END OF COPY;                                                   06001600
COMMENT       PUTLINE MOVES A LINE NUMBER OF N CHARACTERS INTO THE      06100000
              POSITION SPECIFIED IN THE NEW CARD BUFFER. THE POINTER    06100100
              FOR THE NEW CARD BUFFER IS UPDATED TO POINT AT THE NEXT   06100200
              AVAILABLE CHARACTER.                                      06100300
;                                                                       06100400
REAL STREAM PROCEDURE PUTLINE(N,LINENO,CRDADDR);                        06100500
VALUE         N, LINENO,CRDADDR;                                        06100600
         BEGIN                                                          06100700
              SI ~ LOC LINENO; DI ~ CRDADDR;                            06100800
              N (DS ~ CHR);                                             06100900
              PUTLINE ~ DI;                                             06101000
         END OF PUTLINE;                                                06101100
COMMENT       ADVCRDADDR ADVANCES THE CHARACTER POINTER N CHARACTERS    06200000
;                                                                       06200100
REAL STREAM PROCEDURE ADVCRDADDR(N,CRDADDR);                            06200200
VALUE         N, CRDADDR;                                               06200300
         BEGIN                                                          06200400
              SI ~ CRDADDR; SI ~ SI+N;                                  06200500
              ADVCRDADDR ~ SI;                                          06200600
         END  OF   ADVCRDADDR;                                          06200700
COMMENT GETSIGNUM COUNTS THE SIGNIFICANT DIGITS IN A DECIMAL NUMBER     06300000
              AND PLACES THE NUMBER IN THE HIGH ORDER POSITION OF THE   06300100
              WORD.                                                     06300200
;                                                                       06300300
INTEGER STREAM PROCEDURE GETSIGNUM(LINENO);                             06300400
         BEGIN                                                          06300500
LOCAL         TEMP;                                                     06300600
              SI ~ LINENO; DI ~ LOC TEMP; DS ~ WDS;                     06300700
              SI ~ LINENO; DI ~ LOC TEMP;                               06300710
              7(IF SC = "0" THEN BEGIN DS ~ LIT " "; SI ~ SI+1; END ELSE06300800
                   JUMP OUT);                                           06300810
              SI ~ LOC TEMP; DI ~ LINENO;                               06300900
              8(IF SC ! " " THEN BEGIN DS ~ CHR; TALLY ~ TALLY+1; END   06401000
                   ELSE SI ~ SI+1);                                     06401010
              TEMP ~ TALLY;                                             06401100
              SI ~ LOC TEMP; DI ~ LOC GETSIGNUM; DS ~ WDS;              06401200
         END  OF   GETSIGNUM;                                           06401300
COMMENT       COPY BLANKS COPIES N BLANKS TO SPECIFIED AREA.            06500000
;                                                                       06500100
STREAM PROCEDURE COPYBLANKS(N,CRDADDR); VALUE N, CRDADDR;               06500200
         BEGIN                                                          06500300
LOCAL         T;                                                        06500400
              SI ~ LOC N; DI ~ LOC T; SI ~ SI+6; DI ~ DI+7; DS ~ CHR;   06500500
              DI ~ CRDADDR; T(4(DS ~ 16 LIT "        "));               06500600
                   ; N(DS ~ LIT " ");                                   06500610
         END  OF COPY BLANKS;                                           06500700
COMMENT       CARDFIXUP SCANS LINETBL THEN USING SCRAMLOOK FINS THE     07000000
              NEW LINE NUMBER TO BE USED WHEN FIXING UP THE CARD IMAGE. 07000100
;                                                                       07000200
PROCEDURE CARDFIXUP;                                                    07000300
         BEGIN                                                          07000400
INTEGER       FROMCOL,UPTOCOL,     COMMENT COPY FROM COLUMN UP TO(BUT   07000500
                                   NOT INCLUDING COLUMN;                07000600
              OLDNDX,NEWNDX,       COMMENT POINTER TO NEXT AVAILABLE    07000700
                                        COLUMN;                         07000800
              INPTR, OUTPTR,       %POINTS TO NEXTUSED OR NEXTAVAIL AREA07000900
              NCHR ,               % # OF SIGNIFICANT FIGS. IN LINENO   07000905
              RCDN ,               %RECORD WHERE CARD IMAGE IS SAVED.   07000907
              NFIX,                % # OF FIX-UPS FOR RECORD N.         07000908
              INSIZ ;              % # OF COLUMNS NBR RQD ON OLD CARD.  07000910
DEFINE        INCOL = UPTOCOL#;    % COLUMN WHERE # STARTED.            07000915
DEFINE        I = LINECTR#;        %INDEX                               07000995
REAL          LINENO;              % ALMOST ALWAYS NEW LINE NO.(DEC)    07002000
LABEL         XIT,BACK,NEXTCRD;                                         07002500
COMMENT       ERROR PROCEDURE-CARDFIXUP.                                07003000
;                                                                       07003100
PROCEDURE     ERR;                                                      07003200
         BEGIN                                                          07003300
              WRITE(REMOTE,ERRHED,OCTCNVT(LIN[9]));                     07003400
         END  OF ERR;                                                   07004000
              IF LINENDX = 0 THEN GO XIT;        %NO FIX-UPS            07103000
              LINEMAX ~ LINENDX; LINENDX ~0;                            07103100
              WHILE LINENDX < LINEMAX DO                                07103105
         BEGIN     %START OF LINETBL LOOP.                              07103110
              NEWNDX ~ 0; OLDNDX ~0;                                    07103120
              RCDN ~ LINETBL[NEXTLINEWD].[33:15];                       07103200
              NFIX ~ LINETBL[LINEWD].[27:6];                            07103300
              READ(NEW[RCDN],10,OLD[*]);                                07103400
              INPTR ~ RR10 ~ GETABSADDR(OLD);                           07103500
              OUTPTR ~ GETABSADDR(LIN);                                 07103600
              COPYBLANKS(80,OUTPTR); LIN[9] ~ OLD [9];                  07103605
              FOR I ~ 1 STEP 1 UNTIL NFIX DO                            07103700
         BEGIN                                                          07103800
              IF I = 1 THEN                                             07103900
         BEGIN                                                          07104000
              FROMCOL ~ 1;                                              07104100
         END  ;                                                         07104200
              UPTOCOL ~ LINETBL[LINEWDN].[40:8];                        07104210
BACK:         NCHR ~ UPTOCOL-FROMCOL;                                   07104300
              IF(NEWNDX~NEWNDX+NCHR)>72 THEN BEGIN ERR; GO NEXTCRD;END; 07104400
              OLDNDX ~ OLDNDX +NCHR;                                    07104500
              OUTPTR ~ COPY(NCHR,INPTR,OUTPTR);                         07104600
              INSIZ ~ LINETBL[LINEWDN].[33:7];                          07104800
              INCOL ~ LINETBL[LINEWDN].[40:8];                          07104900
              IF SCRAMLOOK(LINENO ~ LINETBL[LINEWDN].NUMBPART) THEN     07105000
         BEGIN                                                          07105005
              IF INFO[INFOWD].[1:5] = 0 THEN                            07105010
         BEGIN                                                          07105100
              LINENO ~ DECCNVT(INFO[INFOWD2].NUMBPART);                 07105110
              INFO[INFOWD].[1:5] ~ NCHR ~ GETSIGNUM(LINENO);            07105120
              INFO[INFOWD2] ~  LINENO;                                  07105125
         END  ELSE                                                      07105130
         BEGIN                                                          07105200
              LINENO ~ INFO[INFOWD2];                                   07105210
              NCHR ~ INFO[INFOWD].[1:5];                                07105300
         END  ;                                                         07105400
         END  ELSE                                                      07105600
         BEGIN                                                          07105700
              WRITE(REMOTE,NOMATCH,LINETBL[LINEWDN]);                   07105710
              LINENO ~DECCNVT(LINENO.NUMBPART);                         07105720
              NCHR ~ GETSIGNUM(LINENO);                                 07105730
         END  ;                                                         07105740
              IF(NEWNDX~NEWNDX+NCHR)>72 THEN BEGIN ERR; GO NEXTCRD; END;07106000
              OUTPTR ~ PUTLINE(NCHR,LINENO,OUTPTR);                     07106100
              OLDNDX ~ INCOL + INSIZ;                                   07106200
              RR1 ~ OLDNDX-1;                                           07106290
              INPTR ~ ADVCRDADDR(RR1,RR10);                             07106300
              IF I = NFIX THEN                                          07106400
         BEGIN                                                          07106500
              IF NCHR ~ LINETBL[LINEWD].[20:7] ! 0 THEN                 07106600
         BEGIN                                                          07106610
              NCHR ~ NCHR-OLDNDX;                                       07106620
              IF (NEWNDX ~ NEWNDX+NCHR) > 72 THEN                       07106630
         BEGIN                                                          07106640
              ERR; GO NEXTCRD;                                          07106650
         END  ;                                                         07106660
              OUTPTR ~ COPY(NCHR,INPTR,OUTPTR);                         07106670
         END  ;                                                         07106700
         END  ELSE                                                      07106800
         BEGIN                                                          07106900
              FROMCOL ~ OLDNDX;                                         07107000
         END  ;                                                         07107200
         END  ;                                                         07107400
NEXTCRD:      WRITE(NEW[RCDN],10,LIN[*]);                               07107500
              LINENDX ~ LINENDX+NFIX;                                   07107600
         END  OF LINETBL LOOP;                                          07107700
XIT:     END OF    CARDFIXUP;                                           07108000
COMMENT       PROCEDURES IN SECTION 08000000 ARE CALLED BY THE STATEMENT08000000
              ROUTINE. THE STATEMENT IS SCANNED FOR THE PRESENCE OF A   08000100
              LINE NUMBER(S). IF FOUND, THE NUMBER IS ENTERED IN        08000200
              LINETBL.                                                  08000300
;                                                                       08000400
COMMENT       IFST PROCESSES IF STATEMENTS.                             08100000
;                                                                       08100100
PROCEDURE     IFST;                                                     08100200
         BEGIN                                                          08100300
LABEL         XIT;                                                      08100305
              EQUALMODETOG ~ RELOPMODE;                                 08100400
              WHILE STEPI ! THENV DO                                    08100500
                   IF ELCLASS = PERCENT THEN GO XIT;                    08100600
              SCANMODE ~ SSMODE;                                        08100690
              IF STEPI = NUMBER THEN                                    08100700
              ENTERLINETBL                                              08100800
              ELSE                                                      08100900
              IF ELCLASS = STATSTART THEN                               08101000
         BEGIN                                                          08101100
              EQUALMODETOG ~ ASGNOPMODE;                                08101200
              STATEMENT;                                                08101300
         END;                                                           08101400
XIT:     END  OF   IFST;                                                08101500
COMMENT       "ON" STATEMENT PROCESSOR.                                 08200000
;                                                                       08200100
PROCEDURE     ONST;                                                     08200200
         BEGIN                                                          08200300
LABEL         XIT, BACK;                                                08200400
              WHILE STEPI ! GOTOV DO                                    08200500
                   IF ELCLASS = PERCENT THEN GO XIT;                    08200600
BACK:         IF STEPI = NUMBER THEN                                    08200700
              ENTERLINETBL ELSE GO XIT;                                 08200800
              IF STEPI = COMMA THEN GO BACK;                            08200900
XIT:     END  OF   ONST;                                                08201000
COMMENT       "EOF" LABEL PROCESSOR. SEARCHES FOR EOF LABELS            08300000
;                                                                       08300100
PROCEDURE     EOFST;                                                    08300200
         BEGIN                                                          08300300
LABEL         XIT;                                                      08300400
              WHILE STEPI ! PERCENT DO                                  08300500
              IF ELCLASS = COLON THEN                                   08300600
         BEGIN                                                          08300700
              IF STEPI = NUMBER THEN                                    08300800
         BEGIN                                                          08300805
              ENTERLINETBL;                                             08300810
              WHILE STEPI ! PERCENT DO;%NOTHING                         08300815
              LINETBL[LINEWD].[20:7] ~ COLMN[CNDX];                     08300820
         END;                                                           08300825
              GO XIT;                                                   08300900
         END  ;                                                         08301000
XIT:     END  OF EOFST;                                                 08301100
COMMENT       "MATRIX" STATEMENT PROCESSOR.                             08400000
;                                                                       08400010
PROCEDURE     MATST;                                                    08400100
         BEGIN                                                          08400200
              IF STEPI = INPUTV OR ELCLASS = PRINTV THEN                08400300
                   EOFST;                                               08400400
         END OF    MATST;                                               08400500
COMMENT       "GOSUB" STATEMENT PROCESSOR.                              08500000
              ALSO USED BY "GO TO".                                     08500010
;                                                                       08500100
PROCEDURE     GOSUBST;                                                  08500200
         BEGIN                                                          08500300
              IF STEPI = NUMBER THEN ENTERLINETBL;                      08500400
         END OF GOSUBST;                                                08500500
PROCEDURE STATEMENT;                                                    08900000
         BEGIN                                                          08900100
LABEL         EXIT;                                                     08900200
              SCANMODE ~ IWMODE;                                        08900400
              CASE ELBAT.SSPART OF                                      08900500
         BEGIN                                                          08900600
              IFST;                                                     08900700
              ONST;                                                     08900800
COMMENT       DEFST; GO EXIT;                                           08900900
COMMENT       DIMST; GO EXIT;                                           08901000
COMMENT       ENDST; GO EXIT;                                           08901100
COMMENT       FORST; GO EXIT;                                           08901200
COMMENT       LETST; GO EXIT;                                           08901300
              MATST;                                                    08901400
COMMENT       REMST; GO EXIT;                                           08901500
COMMENT       DATAST; GO EXIT;                                          08901600
COMMENT       GOTOST; GOSUBST;                                          08901700
COMMENT       GO EXIT; GO EXIT;     % NEXT STATEMENT                    08901800
COMMENT       READST; GO EXIT;                                          08901900
COMMENT       STOPST; GO EXIT;                                          08902000
COMMENT       FILEST; GO EXIT;                                          08902100
              GOSUBST;                                                  08902200
COMMENT       INPUTST; EOFST;                                           08902300
COMMENT       PRINTST; EOFST;                                           08902400
COMMENT       WRITEST; GO EXIT;                                         08902500
COMMENT       RETURNST; GO EXIT;                                        08902600
COMMENT       RESTOREST; GO EXIT;                                       08902700
         END OF CASE STATEMENT;                                         08902800
EXIT:                                                                   08902900
              END OF STATEMENT;                                         08903000
COMMENT  SEQUENCER IS THE DIRECTOR OF THE WHOLE AFFAIR. IT CALLS THE    09000000
              ROUTINES NECESSARY TO PRODUCE THE RESEQUENCED FILE.       09000100
;                                                                       09000200
PROCEDURE     SEQUENCER;                                                09000300
         BEGIN                                                          09000400
LABEL         START,EOF;                                                09000500
INTEGER       I,REC,BASE,INCR,FROM,TOO,LLN,LSEQ,                        09000510
              LASTLINENO, LASTSEQ;                                      09000515
DEFINE        SEQ = [21:27]#;                                           09000525
BOOLEAN       RESEQ,TBLOUT;                                             09000520
REAL ARRAY    ESP[0:29];                                                09000530
REAL          ERRCNT;                                                   09000540
              LASTLINENO ~ LSEQ ~ -(LASTSEQ ~ 100000000);      %********09000600
              ESP[0] ~ 0;                                               09000700
              DISKIO(1,ESP,30,COMMON);                                  09000800
              TBLOUT ~ ESP[9].[6:12] = "1S";                            09001000
              IF BASE ~ ESP[7] > 0 THEN                                 09001100
         BEGIN                                                          09001200
              RESEQ ~ TRUE; INCR ~ ESP[8].SEQ;                          09001300
              FROM ~ ESP[5]; TOO ~ ESP[6].SEQ;                          09001400
         END  ;                                                         09001500
              RR1 ~ TBLHDR((LLN~ESP[1].[33:15]).[40:8]);                09001600
              IF TBLOUT THEN FILL TBL WITH RR1,ESP[2];                  09001700
              FILL CARD WITH ESP[3],ESP[4];                             09001800
              FILL KARD WITH ESP[9],ESP[2];                             09001900
              FILL NEW WITH ESP[9],ESP[2];                              09001910
START:                                                                  09002000
              READ(CARD,10,LIN[*]) [EOF];                               09002010
              CC73 ~ GETABSADDR(LIN[9]);                                09002020
              CC1 ~ CC73-9;                                             09002030
              CARDSCAN(CC1,CC73,CHARRY);                                09002040
              COMPRESSCARD;                                             09002050
              IF CURRENTLINENO { LASTLINENO THEN                        09002100
              ERRCNT ~ ERRCNT+1                                         09002105
              ELSE LASTLINENO ~ CURRENTLINENO;                          09002200
              IF RESEQ THEN                                             09002300
              IF CURRENTLINENO } FROM AND CURRENTLINENO { TOO  THEN     09002400
         BEGIN                                                          09002500
              LIN[9] ~ DECCNVT(BASE);                                   09002600
              BASE ~ (RR1~BASE)+INCR;                                   09002700
         END  ELSE LIN[9] ~ DECCNVT(RR1~CURRENTLINENO);                 09002800
              IF RR1 { LSEQ THEN   % RR1 IS NEW LINE NUMBER.            09002900
         BEGIN                                                          09003000
              RR1 ~ LSEQ+2; LIN[9] ~ DECCNVT(RR1);                      09003100
         END  ;                                                         09003200
              COMMENT   WRITE "CARD" IN NEW FILE. MAY FIXUP LSTER;      09003300
              WRITE(KARD,10,LIN[*]);                                    09003500
              LINECTR ~ 0;                                              09003600
              DEFLINENO;           % MAKE ENTRY FOR LINE# IN INFO ARRY. 09003700
              EQUALMODETOG ~ ASGNOPMODE;                                09003800
              SCANMODE ~ SSMODE;                                        09003900
              CNDX ~ 0;                                                 09003990
              IF STEPI = STATSTART THEN STATEMENT;                      09004000
              IF LINECTR ! 0 THEN                                       09004100
         BEGIN                                                          09004200
              LINETBL[LINEWD].[27:6] ~ LINECTR;                         09004300
              LINENDX ~ LINENDX + LINECTR; LINECTR ~ 0                  09004400
         END;                                                           09004500
              LSEQ ~ RR1; NREC ~ NREC+1;                                09004600
              IF TBLOUT THEN       COMMENT BUILD TABLE FILE;            09004700
         BEGIN                     %ESP IS TEMOPRARY STORAGE NOW.       09004800
              ESP[I := (REC+1) MOD 30] := NEWLINENO & REC[4:32:16];     09004900
              REC ~ REC +1;                                             09005100
              IF I = 29 THEN                                            09005200
                   WRITE(TBL,30,ESP[*]);                                09005300
         END  ;                                                         09005400
              GO START;                                                 09005500
EOF:          IF TBLOUT THEN       % WRITE OUT TABLES                   09005600
         BEGIN                                                          09005700
              ESP[(REC+1) MOD 30] := LASTSEQ;                           09005800
              WRITE(TBL,30,ESP[*]);                                     09005900
              READ(TBL[0],30,ESP[*]);                                   09006000
              ESP[0] := REC;                                            09006100
              WRITE(TBL[0],30,ESP[*]);                                  09006200
              LOCK(TBL,*);                                              09006300
         END  ;                                                         09006400
              CLOSE(CARD);                                              09006500
              LOCK(KARD,*);                                             09006510
              COMMON ~ LSEQ;                                            09006600
              IF ERRCNT > 0 THEN WRITE(REMOTE,SEQERR,ERRCNT);           09006610
              CARDFIXUP;                                                09006700
         END  OF   SEQUENCER;                                           09010000
COMMENT       INITIALIZATION FOR RESEQB/DISK.                           10000000
;                                                                       10000100
         FILL SPECIAL[*] WITH                                           10000200
              OCT2500000000000000, %CROSSHATCH                          10000300
              OCT13,               %COMMERCIAL AT                       10000400
              OCT14,               %UNASSIGNED(QUESTION MARK)           10000500
              OCT1700000000000000, % COLON                              10000600
              OCT3306706341250225, % >                                  10000700
              OCT3300716242250125, % }                                  10000800
              OCT3500000000000101, % + ADD OPERATOR                     10000900
              OCT21,               % A UNASSIGNED                       10001000
              OCT3201000000000000, % . UNASSIGNED, ARITHMETIC DEC. PT.  10001100
              OCT2300000000000000, % [                                  10001200
              OCT34,               % & UNASSIGNED                       10001300
              OCT1500000000000000, % (                                  10001400
              OCT3302627101254225, % <                                  10001500
              OCT3400000000000000, % ~                                  10001600
              OCT0007000000000040, % | UNASSIGNED, BEG OF RELATIONAL    10001700
              OCT41,               % J UNASSIGNED,                      10001800
              OCT52,               % $ UNASSIGNED,                      10001900
              OCT3603000000000401, % * MULOP, "**"=EXPONENT OPERATOR.   10002000
              OCT3500000000000301, % - ADDOP, MINUS                     10002100
              OCT1400000000000000, % )                                  10002200
              OCT2000000000000000, % ; SEMI-COLON.                      10002300
              OCT3300637002254125, % {                                  10002400
              OCT3700000000000000, % EXPONENT OPERATOR                  10002500
              OCT3600000000001001, % / DIV OPERATOR                     10002600
              OCT1300000000000000, % , COMMA                            10002700
              OCT2100000000000000, % % PERCENT                          10002800
              OCT3300606144250425, % !                                  10002900
              OCT3304616004254425, % =                                  10003000
              OCT2400000000000000, % ]                                  10003100
              OCT0505000000000077, % " UNASSIGNED, BEGIN STR            10003200
              OCT0,                % 0 UNASSIGNED                       10003300
              OCT1;                % 1 UNASSIGNED                       10003400
         FILL RWARRY[*] WITH       %NDX                                 10003500
              "0IF00000",          % 0 STATEMENT STARTERS.              10003600
              OCT0300000000000000,                                      10003700
              "0ON00000",          % 2                                  10003800
              OCT0300000000000001,                                      10003900
              "0DEF0000",          % 4                                  10004000
              OCT0300000000000002,                                      10004100
              "0DIM0000",          % 6                                  10004200
              OCT0300000000000003,                                      10004300
              "0END0000",          % 8                                  10004400
              OCT0300000000000004,                                      10004500
              "0FOR0000",          % 10                                 10004600
              OCT0300000000000005,                                      10004700
              "0LET0000",          % 12                                 10004800
              OCT0300000000000006,                                      10004900
              "0MAT0000",          % 14                                 10005000
              OCT0300000000000007,                                      10005100
              "0REM0000",          % 16                                 10005200
              OCT0300000000000010,                                      10005300
              "0DATA000",          % 18                                 10005400
              OCT0300000000000011,                                      10005500
              "0GOTO000",          % 20                                 10005600
              OCT0300000000000012,                                      10005700
              "0NEXT000",          % 22                                 10005800
              OCT0300000000000013,                                      10005900
              "0READ000",          % 24                                 10006000
              OCT0300000000000014,                                      10006100
              "0STOP000",          % 26                                 10006200
              OCT0300000000000015,                                      10006300
              "0FILES00",          % 28                                 10006400
              OCT0300000000000016,                                      10006500
              "0GOSUB00",          % 30                                 10006600
              OCT0300000000000017,                                      10006700
              "0INPUT00",          % 32                                 10006800
              OCT0300000000000020,                                      10006900
              "0PRINT00",          % 34                                 10007000
              OCT0300000000000021,                                      10007100
              "0WRITE00",          % 36                                 10007200
              OCT0300000000000022,                                      10007300
              "0RETURN0",          % 38                                 10007400
              OCT0300000000000023,                                      10007500
              "0RESTORE",          % 40                                 10007600
              OCT0300000000000024,                                      10007700
              "0FN00000",          % 42  DEF FN ID                      10007800
              OCT0600000000000000,                                      10007900
              "0TO00000",          % 44                                 10008000
              OCT1100000000000000,                                      10008100
              "0ABS0000",          % 46                                 10008200
              OCT0700010004100057, % STD FN ID INLINE=#1, 1 PARAMETER   10008300
              "0ATN0000",          % 48                                 10008400
              OCT0700000070100061, % STD FN INTRINSIC                   10008500
              "0CON0000",          % 50                                 10008600
              OCT0700010004000063, % PSUEDO INTRINSIC NO. 1025          10008700
              "0COS0000",          % 52                                 10008800
              OCT0700000064100065, % STD FN INTRINSIC, 1 PARAMETER      10008900
              "0DIV0000",          % 54                                 10009000
              OCT3600000000003001,                                      10009100
              "0EXP0000",          % 56                                 10009200
              OCT0700000100100071, % STD FN INTRIN, 1 PARM.             10009300
              "0IDN0000",          % 58                                 10009400
              OCT0700010010000073, % PSUEDO INTRINSIC NO. 1026          10009500
              "0INT0000",          % 60                                 10009600
              OCT0700010014100075, % STD FN, INLINE = #3, 1 PARM.       10009700
              "0INV0000",          % 62                                 10009800
              OCT0700000610200077, % STD FN INTRINSIC, 1 PARAMETER.     10009900
              "0LOG0000",          % 64                                 10010000
              OCT0700000074100101, % STD FN INTRINSIC, 1 PARAMETER.     10010100
              "0MOD0000",          % 66                                 10010200
              OCT3600000000007001,                                      10010300
              "0RND0000",          % 68                                 10010400
              OCT0700000621100105, % STD FN INTRINSIC, 1 PARAMETER      10010500
              "0SIN0000",          % 70                                 10010600
              OCT0700000060100107, %                                    10010700
              "0SQR0000",          % 72                                 10010800
              OCT0700000055100111, % STD FN, INTRIN = #13, 1 PARM.      10010900
              "0TAB0000",          % 74                                 10011000
              OCT1600000000100000, % TABV                               10011100
              "0TAN0000",          % 76                                 10011200
              OCT0700000630100115, % STD FN INTRINSIC, 1 PARAMETER      10011300
              "0TRN0000",          % 78                                 10011400
              OCT0700000604200117, % STD FN INTRINSIC, 2 PARAMETERS     10011500
              "0ZER0000",          % 80                                 10011600
              OCT0700010000000121, % PSUEDO INTRINSIC NO. 1024          10011700
              "0SGN0000",          % 82                                 10011800
              OCT0700010010100123, % STD FN, INLINE = #2, 1 PARAMETER.  10011900
              "0FILE000",          % 84                                 10012000
              OCT2600000000000000, % FILEV                              10012100
              "0GOTO000",          % 86                                 10012200
              OCT1200000000000000, % GOTOV                              10012300
              "0READ000",          % 88                                 10012400
              OCT2700000000000000, % READV                              10012500
              "0STEP000",          % 90                                 10012600
              OCT1000000000000000, % STEPV                              10012700
              "0THEN000",          % 92                                 10012800
              OCT2200000000000000, % THENV                              10012900
              "0INPUT00",          % 94                                 10013000
              OCT3000000000000000, % INPUTV                             10013100
              "0PRINT00",          % 96                                 10013200
              OCT3100000000000000, %                                    10013300
              "0RECORDS",          % 98                                 10013400
              OCT1700000000000000;                                      10014500
         FILL CTARRY[*] WITH                                            10015000
              2, 16, 26, 36, 38, 40,   %NDX TO LAST WD OF SS GROUP      10015100
              44, 82, 92, 96, 96, 98;  %NDX TO LAST WD OF IMBEDED WD GRP10015200
              SEQUENCER;                                                10015400
END.                                                                    20000000
END;END.        LAST CARD ON 0CRDING TAPE                               99999999
