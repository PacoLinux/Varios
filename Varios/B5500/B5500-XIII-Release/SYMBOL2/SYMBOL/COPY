BEGIN                                                                   00010000
%%% COPY/CANDE SOURCE PROGRAM, 6-70. %%%                                00010100
REAL COMMON;                                                            00010200
DEFINE PRINTSET = TRUE#;                                                00010300
SAVE ARRAY ERR[0:4],H[0:15],A,N[0:30],B,PARAMS[0:12];                   00010400
FILE IN SRCEFIL   DISK SERIAL (2,0,0);                                  00010500
FILE OUT OUTFIL   DISK SERIAL [20:600] (2,10,300,SAVE 1);               00010600
FILE OUT NEWTAB   DISK SERIAL [20:30 ] (2,30,300,SAVE 1);               00010700
FILE OUT LPA 15 (2,15);                                                 00010800
FORMAT FMT1(X81,"(",I8,")");                                            00010900
BOOLEAN BRAAK,RESEQ,SEQCHK,SFLG,MAKTAB,WRKFIL,PRINTER,SUPPRESS,OK;      00011000
LABEL  NEXTPARAM,  TESTREAD,  READSRCE,  HAVESRCE,  EOF;                00011100
REAL  ADJ,  BASE,  DAT,  TIM,  EOFPTR,  ENDRESEQ,  EOFMARK,  HRANGE,    00011200
INCR,  LINE,  LRANGE,  LREC,  NCT,  NPARAMS,  NPTR,  OUTSEQ,            00011300
PC,  PREVSEQ,  REC,  SRCESEQ,  STRTRESEQ,  USER;                        00011400
%***********************************************************************00011500
REAL STREAM PROCEDURE HDR(F,N); VALUE N;                                00011600
%***********************************************************************00011700
   BEGIN                                                                00011800
   SI:=F;  3(SI:=SI-8); DI:=LOC F; DS:=WDS;                             00011900
   SI:=F; 14(SI:=SI+8); DI:=LOC F; DS:=WDS;                             00012000
   SI:=F;  N(SI:=SI+8); DI:=LOC HDR; DS:=WDS;                           00012100
   END STREAM PROCEDURE HDR;                                            00012200
%***********************************************************************00012300
PROCEDURE DISKWAIT(I,A,S,D);                                            00012400
VALUE I,S,D; REAL I,S,D; ARRAY A[*]; COMMUNICATE(-8);                   00012500
%***********************************************************************00012600
PROCEDURE TWXOUT(A,N,T);                                                00012700
%***********************************************************************00012800
VALUE N,T;                                                              00012900
REAL A,N,T;                                                             00013000
   BEGIN  COMMUNICATE(-11);                                             00013100
   BRAAK := BOOLEAN(T); % MCP RETURNS 1 IF BREAK OCCURRED.              00013200
   END;                                                                 00013300
%***********************************************************************00013400
REAL STREAM PROCEDURE INPCONV(X);                                       00013500
   BEGIN SI:=X; DI:=LOC INPCONV; DS:=8 OCT; END;                        00013600
%***********************************************************************00013700
REAL STREAM PROCEDURE DECCONV(X); VALUE X;                              00013800
   BEGIN SI:=LOC X; DI:=LOC DECCONV; DS:=8DEC; END;                     00013900
%***********************************************************************00014000
STREAM PROCEDURE OUTCONV(A,N); VALUE N;                                 00014100
   BEGIN SI:=LOC N; DI:=A; DS:=8DEC; END;                               00014200
%***********************************************************************00014300
STREAM PROCEDURE MOVE(N,A,B); VALUE N;                                  00014400
   BEGIN SI:=A; DI:=B; DS:=N WDS; END;                                  00014500
%***********************************************************************00014600
STREAM PROCEDURE INFORMUSER(A,NMBR,LAST); VALUE NMBR,LAST;              00014700
%***********************************************************************00014800
   BEGIN LOCAL SV;                                                      00014900
   DI:=A; SV:=DI; SI:=LOC NMBR; DS:=8DEC; DI:=SV; DS:=7FILL;            00015000
   SI:=SV; DI:=SV; 8(IF SC=" " THEN SI:=SI+1 ELSE DS:=CHR);             00015100
   DS:=36LIT" RECORDS COPIED (LAST RECORD COPIED=";                     00015200
   SV:=DI; SI:=LOC LAST; DS:=8DEC; DI:=SV; DS:=7FILL;                   00015300
   SI:=SV; DI:=SV; 8(IF SC=" " THEN SI:=SI+1 ELSE DS:=CHR);             00015310
   DS:=16LIT")               ";                                         00015320
   END STREAM PROCEDURE INFORMUSER;                                     00015330
%***********************************************************************00015400
STREAM PROCEDURE MAKERR(ERR,N1,N2); VALUE N1,N2;                        00015500
%***********************************************************************00015600
   BEGIN LOCAL SV;                                                      00015700
   DI:=ERR; DS:=15LIT"SEQUENCE ERROR:"; SV:=DI;                         00015800
   SI:=LOC N1; DS:=8 DEC; DI:=SV; DS:=7FILL;                            00015900
   DI:=SV; DI:=DI+8; DS:=2LIT" -";                                      00016000
   SV:=DI; SI:=LOC N2; DS:=8DEC; DI:=SV; DS:=7FILL;                     00016100
   END STREAM PROCEDURE MAKERR;                                         00016200
%***********************************************************************00016300
PROCEDURE ERROR(N1,N2); VALUE N1,N2; REAL N1,N2;                        00016400
%***********************************************************************00016500
   BEGIN                                                                00016600
   MAKERR(ERR,N1,N2); TWXOUT(ERR[0],33,1);                              00016700
   END PROCEDURE ERROR;                                                 00016800
%***********************************************************************00016900
STREAM PROCEDURE MOVETYPE(F1,F2);                                       00017000
%***********************************************************************00017100
   BEGIN LOCAL SV;                                                      00017200
   SI:=F2;  3(SI:=SI-8); DI:=LOC F2; DS:=WDS;                           00017300
   SI:=F2; 14(SI:=SI+8); DI:=LOC F2; DS:=WDS;                           00017400
   SI:=F2;  4(SI:=SI+8);  SI:=SI+6; SV:=SI;                             00017500
   SI:=F1;  3(SI:=SI-8); DI:=LOC F1; DS:=WDS;                           00017600
   SI:=F1; 14(SI:=SI+8); DI:=LOC F1; DS:=WDS;                           00017700
   SI:=F1;  4(SI:=SI+8);  SI:=SI+6; DI:=SV; DS:=CHR;                    00017800
   END STREAM PROCEDURE MOVETYPE;                                       00017900
%***********************************************************************00018000
REAL PROCEDURE TIMECONV;                                                00018100
%***********************************************************************00018200
   BEGIN                                                                00018300
   INTEGER HRS,MIN,TIM;                                                 00018400
   REAL STREAM PROCEDURE ST(H,M,X);                                     00018500
      BEGIN                                                             00018600
      DI:=LOC ST; SI:=H; DS:=2 DEC; DS:=LIT":";                         00018700
      SI:=M; DS:=2DEC;                                                  00018800
      SI:=X; SI:=SI+5; DS:=3CHR;                                        00018900
      END  STREAM ST;                                                   00019000
   TIM := TIME(1);                                                      00019100
   HRS := TIM DIV 216000;                                               00019200
   MIN := (TIM DIV 3600) MOD 60;                                        00019300
   TIM := IF HRS GTR 11 THEN " PM" ELSE " AM";                          00019400
   IF HRS GTR 12 THEN HRS := HRS - 12;                                  00019500
   IF HRS LSS 1 THEN HRS := 12;                                         00019600
   TIMECONV := ST(HRS,MIN,TIM);                                         00019700
   END  TIMECONV;                                                       00019800
%***********************************************************************00019900
REAL PROCEDURE MAKEDATE;                                                00020000
%***********************************************************************00020100
   BEGIN                                                                00020200
   REAL MM,DD,YY,T;                                                     00020300
   ARRAY WORK[0:12];                                                    00020400
   MM:=TIME(0); T:=MM.[30:18];  DD:=INPCONV(T);                         00020500
   T:=MM.[18:12]; YY:=INPCONV(T);                                       00020600
   IF DD GEQ 60 THEN                                                    00020700
   IF YY.[46:2] NEQ 0 THEN                                              00020800
   DD := DD + 1;                                                        00020900
   FILL WORK[*] WITH                                                    00021000
   0,31,60,91,121,152,182,213,244,274,305,335,366;                      00021100
   YY:=MM.[18:12];  MM:=0;                                              00021200
   DO MM:=MM+1 UNTIL DD LEQ WORK[MM];                                   00021300
   DD:=DECCONV (DD-WORK[MM-1]);                                         00021400
   MM:=DECCONV (MM);                                                    00021500
   MM:="0/00/00"&MM[1:37:11]&DD[18:36:12]&YY[36:36:12];                 00021600
   MAKEDATE := MM;                                                      00021700
   END  MAKEDATE;                                                       00021800
%***********************************************************************00021900
STREAM PROCEDURE HEADING(H,NAM1,NAM2,DAT,TIM); VALUE DAT,TIM;           00022000
%***********************************************************************00022100
   BEGIN                                                                00022200
   DI:=H; DS:=8LIT" "; SI:=H; DS:=14 WDS; DI:=H; DI:=DI+45;             00022300
   SI:=NAM1; SI:=SI+2;                                                  00022400
   6(IF SC=" " THEN JUMP OUT ELSE DS:=CHR); DS:=LIT"/";                 00022500
   SI:=NAM2; SI:=SI+1;                                                  00022600
   7(IF SC=" " THEN JUMP OUT ELSE DS:=CHR); DS:=LIT" ";                 00022700
   SI:=LOC DAT; DS:=8CHR; DS:=LIT" "; SI:=LOC TIM; DS:=8CHR;            00022800
   END STREAM PROCEDURE HEADING;                                        00022900
%***********************************************************************00023000
STREAM PROCEDURE OUTFORMAT(B,A);                                        00023100
%***********************************************************************00023200
   BEGIN LOCAL SV;                                                      00023300
   DI:=B; 2(DI:=DI+36); SV:=DI; DS:=7FILL;                              00023400
   SI:=SV; DI:=A; DS:=8CHR; DS:=LIT " ";                                00023500
   SI:=B; 2(DS:=36CHR); DS:=LIT":"; DS:=6LIT" ";                        00023600
   END STREAM PROCEDURE OUTFORMAT;                                      00023700
%***********************************************************************00023800
A[0]:=0; DISKWAIT(1,A,30,COMMON); % GET ESP RECORD                      00023900
USER := A[2];                                                           00024000
OUTCONV(LINE,A[1].[40:8]); % DECIMAL LINE NUMBER                        00024100
WRKFIL := A[9].[6:12] = "1S";                                           00024200
IF PRINTER:=PRINTSET AND A[9].[6:6]="2" THEN                            00024300
   BEGIN                                                                00024400
   DAT := MAKEDATE; TIM := TIMECONV; HEADING(H,A[9],A[4],DAT,TIM);      00024500
   WRITE(LPA[PAGE]); WRITE(LPA[DBL],15,H[*]); WRITE(LPA[DBL]);          00024600
   END;                                                                 00024700
IF MAKTAB := (WRKFIL AND A[1].[3:1] = 0) THEN % TAB FILE REQUIRED       00024800
FILL NEWTAB    WITH "  "&"1T"[6:36:12]&LINE[18:30:18],USER;             00024900
FILL SRCEFIL   WITH A[3], A[4];                                         00025000
FILL OUTFIL    WITH A[9], USER; % OUTPUT FILE NAME                      00025100
IF RESEQ := A[5] NEQ 0 THEN                                             00025200
   BEGIN                                                                00025300
   STRTRESEQ:=A[5]; % LOWER BOUND FOR RESEQUENCE                        00025400
   ENDRESEQ :=A[6]; % UPPER BOUND FOR RESEQUENCE                        00025500
   INCR     :=A[8]; % RESEQUENCE INCREMENT                              00025600
   BASE     :=A[7] - INCR; % RESEQ BASE                                 00025700
   END;                                                                 00025800
NPARAMS := A[1].[27:6];  % PARAMETER COUNT                              00025900
SUPPRESS := A[1].[8:1] = 1; % SUPPRESS MESSAGES                         00025950
READ SEEK(SRCEFIL[0]); EOFPTR:=HDR(SRCEFIL,7); % EOF POINTER            00026000
SFLG:=IF A[1].[6:1]=1 THEN A[1].[3:1] = 0                               00026100
ELSE HDR(SRCEFIL,4).[36:6] NEQ 8;                                       00026200
PREVSEQ := NCT := -1; LREC  := 0;                                       00026300
EOFMARK :=100000000;                                                    00026400
IF SEQCHK := NPARAMS GTR 0 THEN % PARAMETERS SPECIFIED                  00026500
   BEGIN                                                                00026600
   MOVE(9,A[21],PARAMS);                                                00026700
   REC:=0; NPARAMS:=NPARAMS-1; SRCESEQ:=PC:=-1; LREC:=1;                00026800
NEXTPARAM:                                                              00026900
   LREC := LREC -1;                                                     00027000
   LRANGE:=HRANGE:=PARAMS[PC:=PC+1];                                    00027100
   IF LRANGE=100000000 THEN % "END"                                     00027200
      BEGIN                                                             00027300
      READ(SRCEFIL[EOFPTR],14,B[*])[EOF]; READ(SRCEFIL);                00027400
      GO TO HAVESRCE;                                                   00027500
      END;                                                              00027600
   IF PC LSS NPARAMS THEN % MORE PARAMETERS AVAILABLE                   00027700
   IF PARAMS[PC+1].[1:1]=1 THEN % RANGE SPECIFIED                       00027800
   HRANGE:=PARAMS[PC:=PC+1].[21:27];                                    00027900
   IF NOT SFLG THEN % RECORD LOCATION SPECIFIED                         00028000
      BEGIN                                                             00028100
      READ SEEK(SRCEFIL[LREC:=(LRANGE-1)|REAL(LRANGE NEQ 0)]);          00028200
      GO TO READSRCE; % SKIP BINARY SEARCH                              00028300
      END;                                                              00028400
   IF SRCESEQ = LRANGE THEN % ALREADY HAVE THIS RECORD                  00028500
      BEGIN LREC:=LREC + 1; GO TO HAVESRCE; END;                        00028600
   IF (EOFPTR-LREC) LSS 30 THEN GO TO READSRCE; % SKIP BINARY SEARCH    00028700
   REC:=LREC+(EOFPTR-LREC) DIV 2; % START IN THE CENTER OF RANGE        00028800
   GO TO TESTREAD;                                                      00028900
      DO BEGIN                                                          00029000
      IF LRANGE LSS SRCESEQ THEN % MOVE BACK, NOT LSS 0                 00029100
      REC:=(REC:=REC-ADJ)|REAL(REC.[1:1]=0) ELSE % MOVE UP              00029200
      IF REC:=(LREC:=REC)+ADJ GTR EOFPTR THEN REC:=EOFPTR;              00029300
TESTREAD:                                                               00029400
      READ(SRCEFIL[REC],14,B[*]);                                       00029500
      SRCESEQ:=INPCONV(B[9]);                                           00029600
      IF SRCESEQ=LRANGE THEN % MATCHING RECORD                          00029700
         BEGIN LREC:=REC; READ(SRCEFIL); GO TO HAVESRCE; END;           00029800
      ADJ:=(REC-LREC) DIV 2;                                            00029900
      END UNTIL ADJ LEQ 1;                                              00030000
   READ SEEK(SRCEFIL[LREC]); % NOT FOUND IN BINARY SEARCH, GO BACK      00030100
   END; % IF PARAMETERS SPECIFIED                                       00030200
%........                                                               00030300
READSRCE:                                                               00030400
%........                                                               00030500
READ(SRCEFIL,10,B[*])[EOF];                                             00030600
LREC := LREC + 1;                                                       00030700
SRCESEQ := IF SFLG THEN INPCONV(B[9]) ELSE LREC;                        00030800
IF SEQCHK THEN                                                          00030900
   BEGIN                                                                00031000
   IF SRCESEQ LSS LRANGE THEN GO TO READSRCE; % TOO LOW                 00031100
   IF SRCESEQ GTR HRANGE THEN % TOO HIGH                                00031200
   IF SEQCHK:=PC LSS NPARAMS THEN GO NEXTPARAM ELSE GO EOF;             00031300
   END; % IF SEQCHK                                                     00031400
%........                                                               00031500
HAVESRCE:                                                               00031600
%........                                                               00031700
NCT := NCT + 1; % OUTPUT FILE RECORD COUNT                              00031800
OUTSEQ:=IF MAKTAB AND NOT SFLG THEN INPCONV(B[9]) ELSE SRCESEQ;         00031900
IF RESEQ  THEN % RESEQUENCE THE FILE                                    00032000
IF OK OR SRCESEQ GEQ STRTRESEQ THEN                                     00032100
IF RESEQ:=OK:=SRCESEQ LEQ ENDRESEQ THEN % RECORDS ARE IN RANGE          00032200
   BEGIN                                                                00032300
   OUTSEQ := BASE := BASE + INCR; % CALCULATE NEW SEQ. NUMBER           00032400
   OUTCONV(B[9],OUTSEQ); % MOVE NUMBER TO SEQUENCE FIELD                00032500
   END;                                                                 00032600
IF MAKTAB THEN % CHECK SEQ. NUMBERS FIRST                               00032700
   BEGIN                                                                00032800
   IF OUTSEQ LEQ PREVSEQ THEN % OUT OF SEQUENCE                         00032900
      BEGIN                                                             00033000
      IF NOT BRAAK THEN ERROR(PREVSEQ,OUTSEQ); % TELL THE USER          00033100
      OUTSEQ := PREVSEQ + 2; % ADJUST SEQUENCE NUMBER                   00033200
      OUTCONV(B[9],OUTSEQ);                                             00033300
      END;                                                              00033400
   PREVSEQ := OUTSEQ;                                                   00033500
   IF NPTR := NPTR + 1 GTR 29 THEN % SEGMENT IS FILLED                  00033600
      BEGIN                                                             00033700
      WRITE(NEWTAB,30,N[*]);                                            00033800
      NPTR:=0;                                                          00033900
      END;                                                              00034000
   N[NPTR] := 0 & NCT[4:32:16] & OUTSEQ[21:21:27];                      00034100
   END; % IF MAKTAB                                                     00034200
IF PRINTER THEN % OUTPUT TO LINE PRINTER                                00034300
   BEGIN                                                                00034400
   IF SFLG THEN                                                         00034500
      BEGIN                                                             00034600
      OUTFORMAT(B,A); WRITE(LPA[DBL],11,A[*]);                          00034700
      END                                                               00034800
   ELSE                                                                 00034900
      BEGIN                                                             00035000
      WRITE(LPA[NO],FMT1,LREC); WRITE(LPA[DBL],10,B[*]);                00035100
      END;                                                              00035200
   END % IF PRINTER                                                     00035300
ELSE WRITE(OUTFIL,10,B[*]);                                             00035400
GO TO READSRCE;                                                         00035500
%....                                                                   00035600
EOF:                                                                    00035700
%....                                                                   00035800
IF MAKTAB THEN                                                          00035900
   BEGIN                                                                00036000
   IF NPTR:=NPTR+1 GTR 29 THEN                                          00036100
      BEGIN                                                             00036200
      WRITE(NEWTAB,30,N[*]);                                            00036300
      NPTR:=0;                                                          00036400
      END;                                                              00036500
   N[NPTR]:=EOFMARK;                                                    00036600
   WRITE(NEWTAB,30,N[*]);                                               00036700
   READ(NEWTAB[0],30,N[*]);                                             00036800
   N[0]:=NCT; % EOF POINTER                                             00036900
   WRITE(NEWTAB[0],30,N[*]);                                            00037000
   LOCK(NEWTAB,*);                                                      00037100
   END;                                                                 00037200
IF NOT (WRKFIL OR PRINTER) AND NCT GEQ 0 THEN MOVETYPE(SRCEFIL,OUTFIL); 00037300
CLOSE(SRCEFIL); LOCK(OUTFIL,*);                                         00037400
IF NOT SUPPRESS THEN                                                    00037500
   BEGIN INFORMUSER(A,NCT+1,OUTSEQ); TWXOUT(A[0],52,1); END;            00037600
COMMON := NCT+1;                                                        00037700
END PROGRAM.                                                            00037800
END;END.        LAST CARD ON 0CRDING TAPE                               99999999
